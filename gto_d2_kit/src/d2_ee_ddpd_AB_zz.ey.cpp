/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

#include "gto_d2_kit/d2_ee_ddpd_AB_zz.hpp"
#include <cmath>
/*

*/
#pragma GCC optimize("O0")
namespace {
    const double Pi = M_PI;
}
#pragma GCC optimize("O0")

void second_derivative_ee_2212_12_33(const double ae,
                                     const double xA,
                                     const double yA,
                                     const double zA,
                                     const double be,
                                     const double xB,
                                     const double yB,
                                     const double zB,
                                     const double ce,
                                     const double xC,
                                     const double yC,
                                     const double zC,
                                     const double de,
                                     const double xD,
                                     const double yD,
                                     const double zD,
                                     const double* const bs,
                                     double* const d2ee)
{
    const double p = ae + be;
    const double q = ce + de;
    const double xP = (ae * xA + be * xB) / p;
    const double yP = (ae * yA + be * yB) / p;
    const double zP = (ae * zA + be * zB) / p;
    const double xQ = (ce * xC + de * xD) / q;
    const double yQ = (ce * yC + de * yD) / q;
    const double zQ = (ce * zC + de * zD) / q;
    const double C152045 = ae + be;
    const double C152044 = ae * be;
    const double C152043 = zA - zB;
    const double C152052 = 0 * be;
    const double C152112 = 0 * ae;
    const double C152107 = 0 * be;
    const double C152106 = 0 * be;
    const double C152191 = 0 * be;
    const double C152267 = p + q;
    const double C152266 = p * q;
    const double C152273 = bs[3];
    const double C152272 = zP - zQ;
    const double C152280 = bs[4];
    const double C152278 = xP - xQ;
    const double C152288 = bs[5];
    const double C152297 = bs[6];
    const double C152308 = bs[7];
    const double C152323 = bs[8];
    const double C152364 = bs[2];
    const double C152482 = yP - yQ;
    const double C136 = bs[0];
    const double C154004 = xA - xB;
    const double C154039 = ce + de;
    const double C154038 = ce * de;
    const double C154037 = xC - xD;
    const double C154061 = yC - yD;
    const double C154077 = zC - zD;
    const double C154159 = yA - yB;
    const double C152053 = std::pow(C152045, 2);
    const double C152085 = 2 * C152045;
    const double C152060 = 2 * C152044;
    const double C152054 = C152044 * C152043;
    const double C154177 = std::pow(C152043, 2);
    const double C154260 = C152043 * be;
    const double C154258 = C152043 * ae;
    const double C152109 = C152043 * C152052;
    const double C152108 = C152052 / C152045;
    const double C152155 = -2 * C152052;
    const double C152119 = C152112 / C152045;
    const double C152114 = C152043 * C152107;
    const double C152154 = -2 * C152107;
    const double C152192 = C152191 / C152045;
    const double C152268 = 2 * C152266;
    const double C152275 = std::pow(C152272, 2);
    const double C152350 = C152272 * ae;
    const double C152349 = C152272 * be;
    const double C152290 = std::pow(C152278, 2);
    const double C152515 = std::pow(C152482, 2);
    const double C154007 = C154004 * be;
    const double C154006 = C154004 * ae;
    const double C154005 = std::pow(C154004, 2);
    const double C154041 = 2 * C154039;
    const double C154051 = std::pow(C154039, 2);
    const double C154043 = C154037 * de;
    const double C154042 = C154037 * ce;
    const double C154040 = std::pow(C154037, 2);
    const double C154062 = std::pow(C154061, 2);
    const double C154114 = C154061 * de;
    const double C154113 = C154061 * ce;
    const double C154078 = std::pow(C154077, 2);
    const double C154142 = C154077 * de;
    const double C154141 = C154077 * ce;
    const double C154160 = std::pow(C154159, 2);
    const double C154218 = C154159 * be;
    const double C154216 = C154159 * ae;
    const double C152055 = 2 * C152053;
    const double C152196 = 4 * C152053;
    const double C152153 = C152053 * C152085;
    const double C154019 = std::pow(C152085, -1);
    const double C154378 = std::pow(C152085, -2);
    const double C154178 = C154177 * C152044;
    const double C154404 = std::pow(C154258, 2);
    const double C152117 = C152109 / C152045;
    const double C152164 = ae * C152155;
    const double C152120 = C152114 / C152045;
    const double C152163 = ae * C152154;
    const double C152270 = C152268 / C152267;
    const double C160 =
        ((std::pow(zP - zQ, 2) * bs[2] * std::pow(C152268 / C152267, 2) -
          (bs[1] * C152268) / C152267) *
         C152044) /
        C152053;
    const double C137 = -(C152278 * bs[1] * C152268) / C152267;
    const double C347 = -(C152482 * bs[1] * C152268) / C152267;
    const double C584 = -(C152272 * bs[1] * C152268) / C152267;
    const double C152282 = C152275 * C152280;
    const double C152291 = C152275 * C152288;
    const double C152299 = C152275 * C152297;
    const double C152311 = C152275 * C152308;
    const double C152326 = C152275 * C152323;
    const double C152352 = C152288 * C152350;
    const double C152357 = C152280 * C152350;
    const double C152368 = C152273 * C152350;
    const double C152388 = C152297 * C152350;
    const double C152414 = C152308 * C152350;
    const double C152450 = C152323 * C152350;
    const double C145 = (-(bs[1] * C152350 * C152268) / C152267) / C152045;
    const double C152351 = C152288 * C152349;
    const double C152356 = C152280 * C152349;
    const double C152367 = C152273 * C152349;
    const double C152384 = C152297 * C152349;
    const double C152408 = C152308 * C152349;
    const double C152442 = C152323 * C152349;
    const double C144 = (-(bs[1] * C152349 * C152268) / C152267) / C152045;
    const double C154371 = std::pow(C154006, 2);
    const double C154008 = C154005 * C152044;
    const double C154052 = std::pow(C154041, -1);
    const double C154390 = std::pow(C154041, -2);
    const double C154056 = 2 * C154051;
    const double C154388 = 4 * C154051;
    const double C154044 = C154040 * C154038;
    const double C154063 = C154062 * C154038;
    const double C154079 = C154078 * C154038;
    const double C154161 = C154160 * C152044;
    const double C154402 = std::pow(C154216, 2);
    const double C152111 = C152052 / C152055;
    const double C152116 = C152107 / C152055;
    const double C152115 = C152106 / C152055;
    const double C152198 = C152045 * C152196;
    const double C154381 = 4 * C152153;
    const double C154179 = C154178 / C152045;
    const double C152121 = 0 - C152117;
    const double C152169 = C152164 / C152153;
    const double C152168 = C152043 * C152164;
    const double C152124 = 0 - C152120;
    const double C152167 = C152163 / C152153;
    const double C152274 = -C152270;
    const double C152281 = std::pow(C152270, 4);
    const double C152298 = std::pow(C152270, 6);
    const double C152324 = std::pow(C152270, 8);
    const double C152363 = std::pow(C152270, 2);
    const double C161 =
        ((xP - xQ) *
         (bs[2] * std::pow(C152270, 2) +
          std::pow(zP - zQ, 2) * bs[3] * std::pow(-C152270, 3)) *
         C152044) /
        C152053;
    const double C154009 = C154008 / C152045;
    const double C154045 = C154044 / C154039;
    const double C154064 = C154063 / C154039;
    const double C154080 = C154079 / C154039;
    const double C154162 = C154161 / C152045;
    const double C154180 = -C154179;
    const double C152125 = C152121 * ae;
    const double C152172 = C152168 / C152053;
    const double C152129 = C152124 * ae;
    const double C152276 = std::pow(C152274, 3);
    const double C152289 = std::pow(C152274, 5);
    const double C152309 = std::pow(C152274, 7);
    const double C152283 = C152282 * C152281;
    const double C152287 = C152280 * C152281;
    const double C152359 = C152281 * C152357;
    const double C152358 = C152281 * C152356;
    const double C152300 = C152299 * C152298;
    const double C152307 = C152297 * C152298;
    const double C152394 = C152298 * C152388;
    const double C152390 = C152298 * C152384;
    const double C152327 = C152326 * C152324;
    const double C152456 = C152324 * C152450;
    const double C152452 = C152324 * C152442;
    const double C152366 = C152364 * C152363;
    const double C146 = (C152278 * C152363 * C152364 * C152349) / C152045;
    const double C147 = (C152278 * C152363 * C152364 * C152350) / C152045;
    const double C363 = (C152482 * C152363 * C152364 * C152349) / C152045;
    const double C364 = (C152482 * C152363 * C152364 * C152350) / C152045;
    const double C600 = (C152272 * C152363 * C152364 * C152349) / C152045 -
                        (be * bs[1] * C152268) / (C152267 * C152045);
    const double C601 = (C152272 * C152363 * C152364 * C152350) / C152045 -
                        (ae * bs[1] * C152268) / (C152267 * C152045);
    const double C154010 = -C154009;
    const double C154046 = -C154045;
    const double C154065 = -C154064;
    const double C154081 = -C154080;
    const double C154163 = -C154162;
    const double C154181 = std::exp(C154180);
    const double C152130 = C152125 / C152045;
    const double C152133 = C152129 / C152045;
    const double C152279 = C152273 * C152276;
    const double C152370 = C152276 * C152368;
    const double C152369 = C152276 * C152367;
    const double C162 =
        ((bs[2] * std::pow(C152270, 2) + C152275 * C152273 * C152276) *
             C152044 +
         (C152273 * C152276 + C152275 * bs[4] * std::pow(C152270, 4)) *
             C152044 * std::pow(xP - xQ, 2)) /
        C152053;
    const double C383 =
        ((yP - yQ) *
         (bs[2] * std::pow(C152270, 2) + C152275 * C152273 * C152276) *
         C152044) /
        C152053;
    const double C620 =
        (ae * C152363 * C152364 * C152349 + be * C152363 * C152364 * C152350 +
         C152272 * (C152364 * C152363 + C152275 * C152273 * C152276) *
             C152044) /
        C152053;
    const double C152292 = C152291 * C152289;
    const double C152296 = C152288 * C152289;
    const double C152354 = C152289 * C152352;
    const double C152353 = C152289 * C152351;
    const double C152312 = C152311 * C152309;
    const double C152322 = C152308 * C152309;
    const double C152420 = C152309 * C152414;
    const double C152416 = C152309 * C152408;
    const double C152377 = C152287 * C152290;
    const double C152385 = C152278 * C152287;
    const double C152566 = C152287 * C152515;
    const double C152646 = C152482 * C152287;
    const double C152725 = C152287 * ae;
    const double C152723 = C152287 * C152275;
    const double C152722 = C152272 * C152287;
    const double C152721 = C152287 * be;
    const double C152374 = C152278 * C152359;
    const double C152513 = C152482 * C152359;
    const double C152556 = C152272 * C152359;
    const double C152718 = be * C152359;
    const double C152372 = C152278 * C152358;
    const double C152511 = C152482 * C152358;
    const double C152553 = C152272 * C152358;
    const double C152717 = ae * C152358;
    const double C152411 = C152307 * C152290;
    const double C152445 = C152278 * C152307;
    const double C153046 = C152307 * C152515;
    const double C153112 = C152482 * C152307;
    const double C153340 = C152307 * ae;
    const double C153334 = C152307 * C152275;
    const double C153333 = C152272 * C152307;
    const double C153332 = C152307 * be;
    const double C152397 = C152394 * C152290;
    const double C152413 = C152278 * C152394;
    const double C152649 = C152394 * C152515;
    const double C152880 = C152482 * C152394;
    const double C152998 = C152272 * C152394;
    const double C153327 = be * C152394;
    const double C152395 = C152390 * C152290;
    const double C152407 = C152278 * C152390;
    const double C152645 = C152390 * C152515;
    const double C152878 = C152482 * C152390;
    const double C152992 = C152272 * C152390;
    const double C153326 = ae * C152390;
    const double C152459 = C152456 * C152290;
    const double C153074 = C152278 * C152456;
    const double C153117 = C152456 * C152515;
    const double C153507 = C152482 * C152456;
    const double C153581 = C152272 * C152456;
    const double C152457 = C152452 * C152290;
    const double C153068 = C152278 * C152452;
    const double C153109 = C152452 * C152515;
    const double C153501 = C152482 * C152452;
    const double C153571 = C152272 * C152452;
    const double C138 = C152366 * C152290 - (bs[1] * C152268) / C152267;
    const double C346 = C152482 * C152278 * C152366;
    const double C348 = C152366 * C152515 - (bs[1] * C152268) / C152267;
    const double C583 = C152272 * C152278 * C152366;
    const double C585 = C152366 * C152275 - (bs[1] * C152268) / C152267;
    const double C1129 = C152272 * C152482 * C152366;
    const double C154011 = std::exp(C154010);
    const double C154047 = std::exp(C154046);
    const double C154066 = std::exp(C154065);
    const double C154082 = std::exp(C154081);
    const double C154164 = std::exp(C154163);
    const double C172 = C154181 * C161;
    const double C152056 = C152054 * C154181;
    const double C134 = -(2 * ae * be * (zA - zB) * C154181) / (ae + be);
    const double C135 =
        -((C154181 - (C152043 * 2 * C152044 * C152043 * C154181) / C152045) *
          2 * C152044) /
        C152045;
    const double C154259 = C154181 / C152085;
    const double C154261 = C154181 * C154258;
    const double C154268 = C154019 * C154181;
    const double C154416 = C154181 * C154260;
    const double C154445 = C154378 * C154181;
    const double C154443 = C154181 * C154404;
    const double C152134 = C152130 - C152116;
    const double C152137 = C152133 - C152115;
    const double C152284 = C152279 + C152283;
    const double C152373 = C152278 * C152279;
    const double C152512 = C152482 * C152279;
    const double C152557 = C152279 * ae;
    const double C152555 = C152272 * C152279;
    const double C152554 = C152279 * be;
    const double C139 =
        2 * C152278 * C152366 + C152278 * (C152366 + C152279 * C152290);
    const double C345 = C152482 * (C152366 + C152279 * C152290);
    const double C582 = C152272 * (C152366 + C152279 * C152290);
    const double C1403 =
        2 * C152482 * C152366 + C152482 * (C152366 + C152279 * C152515);
    const double C1976 = C152272 * (C152366 + C152279 * C152515);
    const double C2328 =
        2 * C152272 * C152366 + C152272 * (C152366 + C152279 * C152275);
    const double C149 =
        (C152363 * C152364 * C152350 + C152370 * C152290) / C152045;
    const double C151 =
        (2 * C152278 * C152370 + C152278 * (C152370 + C152359 * C152290)) /
        C152045;
    const double C360 = (C152482 * (C152370 + C152359 * C152290)) / C152045;
    const double C362 = (C152482 * C152278 * C152370) / C152045;
    const double C366 =
        (C152363 * C152364 * C152350 + C152370 * C152515) / C152045;
    const double C597 = (C152272 * (C152370 + C152359 * C152290) +
                         (C152366 + C152279 * C152290) * ae) /
                        C152045;
    const double C599 =
        (C152272 * C152278 * C152370 + C152278 * C152366 * ae) / C152045;
    const double C603 = (C152363 * C152364 * C152350 +
                         C152272 * (C152272 * C152370 + C152366 * ae) +
                         C152272 * C152366 * ae) /
                        C152045;
    const double C1136 =
        (C152272 * C152482 * C152370 + C152482 * C152366 * ae) / C152045;
    const double C1413 =
        (2 * C152482 * C152370 + C152482 * (C152370 + C152359 * C152515)) /
        C152045;
    const double C1986 = (C152272 * (C152370 + C152359 * C152515) +
                          (C152366 + C152279 * C152515) * ae) /
                         C152045;
    const double C148 =
        (C152363 * C152364 * C152349 + C152369 * C152290) / C152045;
    const double C150 =
        (2 * C152278 * C152369 + C152278 * (C152369 + C152358 * C152290)) /
        C152045;
    const double C359 = (C152482 * (C152369 + C152358 * C152290)) / C152045;
    const double C361 = (C152482 * C152278 * C152369) / C152045;
    const double C365 =
        (C152363 * C152364 * C152349 + C152369 * C152515) / C152045;
    const double C596 = (C152272 * (C152369 + C152358 * C152290) +
                         (C152366 + C152279 * C152290) * be) /
                        C152045;
    const double C598 =
        (C152272 * C152278 * C152369 + C152278 * C152366 * be) / C152045;
    const double C602 = (C152363 * C152364 * C152349 +
                         C152272 * (C152272 * C152369 + C152366 * be) +
                         C152272 * C152366 * be) /
                        C152045;
    const double C1135 =
        (C152272 * C152482 * C152369 + C152482 * C152366 * be) / C152045;
    const double C1412 =
        (2 * C152482 * C152369 + C152482 * (C152369 + C152358 * C152515)) /
        C152045;
    const double C1985 = (C152272 * (C152369 + C152358 * C152515) +
                          (C152366 + C152279 * C152515) * be) /
                         C152045;
    const double C176 = C154181 * C162;
    const double C3159 = C154181 * C383;
    const double C152293 = C152287 + C152292;
    const double C152301 = C152296 + C152300;
    const double C152386 = C152296 * C152290;
    const double C152410 = C152278 * C152296;
    const double C152647 = C152296 * C152515;
    const double C152879 = C152482 * C152296;
    const double C152999 = C152296 * ae;
    const double C152995 = C152296 * C152275;
    const double C152994 = C152272 * C152296;
    const double C152993 = C152296 * be;
    const double C152378 = C152354 * C152290;
    const double C152387 = C152278 * C152354;
    const double C152567 = C152354 * C152515;
    const double C152648 = C152482 * C152354;
    const double C152724 = C152272 * C152354;
    const double C152989 = be * C152354;
    const double C152376 = C152353 * C152290;
    const double C152383 = C152278 * C152353;
    const double C152565 = C152353 * C152515;
    const double C152644 = C152482 * C152353;
    const double C152720 = C152272 * C152353;
    const double C152988 = ae * C152353;
    const double C152313 = C152307 + C152312;
    const double C152328 = C152322 + C152327;
    const double C152446 = C152322 * C152290;
    const double C153071 = C152278 * C152322;
    const double C153113 = C152322 * C152515;
    const double C153502 = C152482 * C152322;
    const double C153582 = C152322 * ae;
    const double C153574 = C152322 * C152275;
    const double C153573 = C152272 * C152322;
    const double C153572 = C152322 * be;
    const double C152423 = C152420 * C152290;
    const double C152449 = C152278 * C152420;
    const double C153049 = C152420 * C152515;
    const double C153116 = C152482 * C152420;
    const double C153339 = C152272 * C152420;
    const double C153566 = be * C152420;
    const double C152421 = C152416 * C152290;
    const double C152441 = C152278 * C152416;
    const double C153043 = C152416 * C152515;
    const double C153108 = C152482 * C152416;
    const double C153331 = C152272 * C152416;
    const double C153565 = ae * C152416;
    const double C152380 = C152279 + C152377;
    const double C152391 = 2 * C152385;
    const double C152508 = C152482 * C152385;
    const double C152549 = C152385 * ae;
    const double C152547 = C152272 * C152385;
    const double C152546 = C152385 * be;
    const double C152569 = C152279 + C152566;
    const double C152652 = 2 * C152646;
    const double C152713 = C152646 * ae;
    const double C152711 = C152272 * C152646;
    const double C152710 = C152646 * be;
    const double C152729 = C152279 + C152723;
    const double C152731 = C152722 * ae;
    const double C152728 = C152722 * be;
    const double C152996 = 2 * C152722;
    const double C368 = (C152278 * C152370 + C152374 * C152515) / C152045;
    const double C367 = (C152278 * C152369 + C152372 * C152515) / C152045;
    const double C152726 = C152717 + C152718;
    const double C152418 = C152296 + C152411;
    const double C152453 = 2 * C152445;
    const double C152628 = C152445 * C152515;
    const double C152852 = C152482 * C152445;
    const double C152957 = C152445 * ae;
    const double C152953 = C152445 * C152275;
    const double C152952 = C152272 * C152445;
    const double C152951 = C152445 * be;
    const double C153051 = C152296 + C153046;
    const double C153120 = 2 * C153112;
    const double C153292 = C153112 * ae;
    const double C153288 = C153112 * C152275;
    const double C153287 = C152272 * C153112;
    const double C153286 = C153112 * be;
    const double C153346 = C152296 + C153334;
    const double C153348 = C153333 * ae;
    const double C153345 = C153333 * be;
    const double C153575 = 2 * C153333;
    const double C152400 = C152354 + C152397;
    const double C152419 = 2 * C152413;
    const double C152574 = C152413 * C152515;
    const double C152629 = C152482 * C152413;
    const double C152747 = C152272 * C152413;
    const double C152947 = be * C152413;
    const double C152655 = C152354 + C152649;
    const double C152887 = C152272 * C152880;
    const double C153048 = 2 * C152880;
    const double C153282 = be * C152880;
    const double C152398 = C152353 + C152395;
    const double C152415 = 2 * C152407;
    const double C152572 = C152407 * C152515;
    const double C152625 = C152482 * C152407;
    const double C152743 = C152272 * C152407;
    const double C152946 = ae * C152407;
    const double C152651 = C152353 + C152645;
    const double C152883 = C152272 * C152878;
    const double C153042 = 2 * C152878;
    const double C153281 = ae * C152878;
    const double C153343 = C153326 + C153327;
    const double C152462 = C152420 + C152459;
    const double C153077 = C153074 * C152515;
    const double C153401 = C152272 * C153074;
    const double C153455 = C152482 * C153074;
    const double C153123 = C152420 + C153117;
    const double C153516 = C152272 * C153507;
    const double C152460 = C152416 + C152457;
    const double C153075 = C153068 * C152515;
    const double C153393 = C152272 * C153068;
    const double C153451 = C152482 * C153068;
    const double C153119 = C152416 + C153109;
    const double C153512 = C152272 * C153501;
    const double C154013 = C154011 * C154006;
    const double C154012 = C154011 / C152085;
    const double C154021 = C154019 * C154011;
    const double C154374 = C154011 * C154007;
    const double C154429 = C154378 * C154011;
    const double C154423 = C154011 * C154371;
    const double C154048 = C154047 * C154042;
    const double C154053 = C154052 * C154047;
    const double C154385 = C154047 * C154043;
    const double C154382 = C154047 / C154041;
    const double C1311 = C154390 * C154047;
    const double C154115 = C154066 * C154113;
    const double C154118 = C154052 * C154066;
    const double C154394 = C154066 * C154114;
    const double C154389 = C154066 / C154041;
    const double C340 = C154390 * C154066;
    const double C154143 = C154082 * C154141;
    const double C154146 = C154052 * C154082;
    const double C154398 = C154082 * C154142;
    const double C154391 = C154082 / C154041;
    const double C579 = C154390 * C154082;
    const double C154217 = C154164 / C152085;
    const double C154219 = C154164 * C154216;
    const double C154226 = C154019 * C154164;
    const double C154409 = C154164 * C154218;
    const double C154442 = C154378 * C154164;
    const double C154440 = C154164 * C154402;
    const double C152059 = 2 * C152056;
    const double C152113 = C152056 / C152053;
    const double C152157 = -4 * C152056;
    const double C7161 =
        ((0 * ae) / C152045 - C152056 / C152053) / (2 * C152045) +
        (0 * ae) / C152045;
    const double C15024 = (0 * ae) / C152045 - C152056 / C152053;
    const double C171 = C134 * C147;
    const double C169 = C134 * C146;
    const double C3158 = C134 * C364;
    const double C3156 = C134 * C363;
    const double C174 = C135 * C138;
    const double C170 = C135 * C137;
    const double C405 = C135 * C346;
    const double C642 = C135 * C583;
    const double C3161 = C135 * C348;
    const double C3157 = C135 * C347;
    const double C4276 = C135 * C1129;
    const double C47138 = (C154181 * std::pow(C154260, 2)) / C152053 + C154259;
    const double C154262 = C154261 * C154260;
    const double C154267 = C154261 / C152055;
    const double C154408 = C154261 / C152045;
    const double C154405 = C154019 * C154261;
    const double C154269 = C154268 * C154260;
    const double C154422 = C154268 / C152196;
    const double C154420 = C154258 * C154268;
    const double C154419 = 2 * C154268;
    const double C55522 = C154268 / C154381;
    const double C115620 = C154268 / C152085;
    const double C154452 = C154416 / C152045;
    const double C47139 = (-2 * C154019 * C154416) / C152045;
    const double C154469 = C154443 / C152053;
    const double C152139 = C152134 / C152085;
    const double C152138 = C152043 * C152134;
    const double C152156 = 2 * C152134;
    const double C152142 = C152137 + C152108;
    const double C152285 = C152284 * C152044;
    const double C604 =
        (C152278 * C152369 + C152272 * (C152272 * C152372 + C152373 * be) +
         C152272 * C152373 * be) /
        C152045;
    const double C605 =
        (C152278 * C152370 + C152272 * (C152272 * C152374 + C152373 * ae) +
         C152272 * C152373 * ae) /
        C152045;
    const double C1137 =
        (C152272 * C152482 * C152372 + C152482 * C152373 * be) / C152045;
    const double C1138 =
        (C152272 * C152482 * C152374 + C152482 * C152373 * ae) / C152045;
    const double C349 = C152278 * C152366 + C152373 * C152515;
    const double C586 = C152278 * C152366 + C152373 * C152275;
    const double C1130 = C152272 * C152482 * C152373;
    const double C1402 =
        2 * C152482 * C152373 + C152482 * (C152373 + C152385 * C152515);
    const double C1975 = C152272 * (C152373 + C152385 * C152515);
    const double C2327 =
        2 * C152272 * C152373 + C152272 * (C152373 + C152385 * C152275);
    const double C1554 =
        (C152482 * C152369 + C152272 * (C152272 * C152511 + C152512 * be) +
         C152272 * C152512 * be) /
        C152045;
    const double C1555 =
        (C152482 * C152370 + C152272 * (C152272 * C152513 + C152512 * ae) +
         C152272 * C152512 * ae) /
        C152045;
    const double C1545 = C152482 * C152366 + C152512 * C152275;
    const double C6263 =
        2 * C152272 * C152512 + C152272 * (C152512 + C152646 * C152275);
    const double C152559 = C152556 + C152557;
    const double C152558 = C152553 + C152554;
    const double C178 = C135 * C139;
    const double C401 = C135 * C345;
    const double C638 = C135 * C582;
    const double C3177 = C135 * C1403;
    const double C4272 = C135 * C1976;
    const double C175 = C134 * C149;
    const double C179 = C134 * C151;
    const double C402 = C134 * C360;
    const double C406 = C134 * C362;
    const double C3162 = C134 * C366;
    const double C639 = C134 * C597;
    const double C643 = C134 * C599;
    const double C4277 = C134 * C1136;
    const double C3178 = C134 * C1413;
    const double C4273 = C134 * C1986;
    const double C173 = C134 * C148;
    const double C177 = C134 * C150;
    const double C400 = C134 * C359;
    const double C404 = C134 * C361;
    const double C3160 = C134 * C365;
    const double C637 = C134 * C596;
    const double C641 = C134 * C598;
    const double C4275 = C134 * C1135;
    const double C3176 = C134 * C1412;
    const double C4271 = C134 * C1985;
    const double C152294 = C152293 * C152044;
    const double C152302 = C152301 * C152044;
    const double C152392 = C152287 + C152386;
    const double C152417 = 2 * C152410;
    const double C152573 = C152410 * C152515;
    const double C152627 = C152482 * C152410;
    const double C152748 = C152410 * ae;
    const double C152746 = C152410 * C152275;
    const double C152745 = C152272 * C152410;
    const double C152744 = C152410 * be;
    const double C152653 = C152287 + C152647;
    const double C152888 = C152879 * ae;
    const double C152886 = C152879 * C152275;
    const double C152885 = C152272 * C152879;
    const double C152884 = C152879 * be;
    const double C153045 = 2 * C152879;
    const double C153005 = C152998 + C152999;
    const double C153004 = C152287 + C152995;
    const double C153006 = C152994 * ae;
    const double C153003 = C152994 * be;
    const double C153335 = 2 * C152994;
    const double C153002 = C152992 + C152993;
    const double C152381 = C152359 + C152378;
    const double C152393 = 2 * C152387;
    const double C152509 = C152482 * C152387;
    const double C152548 = C152272 * C152387;
    const double C152741 = be * C152387;
    const double C1411 =
        (2 * C152482 * C152374 + C152482 * (C152374 + C152387 * C152515)) /
        C152045;
    const double C1984 = (C152272 * (C152374 + C152387 * C152515) +
                          (C152373 + C152385 * C152515) * ae) /
                         C152045;
    const double C152570 = C152359 + C152567;
    const double C152654 = 2 * C152648;
    const double C152712 = C152272 * C152648;
    const double C152876 = be * C152648;
    const double C152730 = C152724 + C152725;
    const double C152379 = C152358 + C152376;
    const double C152389 = 2 * C152383;
    const double C152507 = C152482 * C152383;
    const double C152545 = C152272 * C152383;
    const double C152740 = ae * C152383;
    const double C1410 =
        (2 * C152482 * C152372 + C152482 * (C152372 + C152383 * C152515)) /
        C152045;
    const double C1983 = (C152272 * (C152372 + C152383 * C152515) +
                          (C152373 + C152385 * C152515) * be) /
                         C152045;
    const double C152568 = C152358 + C152565;
    const double C152650 = 2 * C152644;
    const double C152709 = C152272 * C152644;
    const double C152875 = ae * C152644;
    const double C152727 = C152720 + C152721;
    const double C153001 = C152988 + C152989;
    const double C152314 = C152313 * C152044;
    const double C152329 = C152328 * C152044;
    const double C152454 = C152307 + C152446;
    const double C153076 = C153071 * C152515;
    const double C153402 = C153071 * ae;
    const double C153396 = C153071 * C152275;
    const double C153395 = C152272 * C153071;
    const double C153394 = C153071 * be;
    const double C153452 = C152482 * C153071;
    const double C153121 = C152307 + C153113;
    const double C153517 = C153502 * ae;
    const double C153515 = C153502 * C152275;
    const double C153514 = C152272 * C153502;
    const double C153513 = C153502 * be;
    const double C153590 = C153581 + C153582;
    const double C153589 = C152307 + C153574;
    const double C153591 = C153573 * ae;
    const double C153588 = C153573 * be;
    const double C153587 = C153571 + C153572;
    const double C152426 = C152394 + C152423;
    const double C152455 = 2 * C152449;
    const double C152630 = C152449 * C152515;
    const double C152853 = C152482 * C152449;
    const double C152956 = C152272 * C152449;
    const double C153389 = be * C152449;
    const double C153052 = C152394 + C153049;
    const double C153122 = 2 * C153116;
    const double C153291 = C152272 * C153116;
    const double C153497 = be * C153116;
    const double C153347 = C153339 + C153340;
    const double C152424 = C152390 + C152421;
    const double C152451 = 2 * C152441;
    const double C152626 = C152441 * C152515;
    const double C152851 = C152482 * C152441;
    const double C152950 = C152272 * C152441;
    const double C153388 = ae * C152441;
    const double C153050 = C152390 + C153043;
    const double C153118 = 2 * C153108;
    const double C153285 = C152272 * C153108;
    const double C153496 = ae * C153108;
    const double C153344 = C153331 + C153332;
    const double C153586 = C153565 + C153566;
    const double C140 = 3 * (C152366 + C152279 * C152290) +
                        C152278 * (2 * C152373 + C152278 * C152380);
    const double C344 = C152482 * (2 * C152373 + C152278 * C152380);
    const double C350 = C152366 + C152279 * C152290 + C152380 * C152515;
    const double C581 = C152272 * (2 * C152373 + C152278 * C152380);
    const double C587 = C152366 + C152279 * C152290 + C152380 * C152275;
    const double C1131 = C152272 * C152482 * C152380;
    const double C1544 = C152482 * C152373 + C152508 * C152275;
    const double C3139 = 3 * (C152366 + C152279 * C152515) +
                         C152482 * (2 * C152512 + C152482 * C152569);
    const double C3441 = C152366 + C152279 * C152515 + C152569 * C152275;
    const double C4254 = C152272 * (2 * C152512 + C152482 * C152569);
    const double C7773 = 3 * (C152366 + C152279 * C152275) +
                         C152272 * (2 * C152555 + C152272 * C152729);
    const double C410 = C134 * C368;
    const double C408 = C134 * C367;
    const double C152422 = C152278 * C152418;
    const double C152444 = 3 * C152418;
    const double C152580 = C152418 * C152515;
    const double C152608 = C152482 * C152418;
    const double C152771 = C152418 * ae;
    const double C152769 = C152418 * C152275;
    const double C152768 = C152272 * C152418;
    const double C152767 = C152418 * be;
    const double C152634 = C152410 + C152628;
    const double C152861 = C152852 * ae;
    const double C152859 = C152852 * C152275;
    const double C152858 = C152272 * C152852;
    const double C152857 = C152852 * be;
    const double C153070 = 2 * C152852;
    const double C152962 = C152410 + C152953;
    const double C152964 = C152952 * ae;
    const double C152961 = C152952 * be;
    const double C153397 = 2 * C152952;
    const double C153054 = C152482 * C153051;
    const double C153111 = 3 * C153051;
    const double C153168 = C153051 * ae;
    const double C153166 = C153051 * C152275;
    const double C153165 = C152272 * C153051;
    const double C153164 = C153051 * be;
    const double C153297 = C152879 + C153288;
    const double C153299 = C153287 * ae;
    const double C153296 = C153287 * be;
    const double C153503 = 2 * C153287;
    const double C153356 = C153346 * ae;
    const double C153354 = C152272 * C153346;
    const double C153353 = C153346 * be;
    const double C153576 = 3 * C153346;
    const double C152402 = C152278 * C152400;
    const double C152412 = 3 * C152400;
    const double C152505 = C152482 * C152400;
    const double C152540 = C152272 * C152400;
    const double C152764 = be * C152400;
    const double C152577 = C152387 + C152574;
    const double C152635 = 2 * C152629;
    const double C152695 = C152272 * C152629;
    const double C152849 = be * C152629;
    const double C152658 = C152482 * C152655;
    const double C152703 = C152272 * C152655;
    const double C153047 = 3 * C152655;
    const double C153161 = be * C152655;
    const double C152401 = C152278 * C152398;
    const double C152406 = 3 * C152398;
    const double C152503 = C152482 * C152398;
    const double C152537 = C152272 * C152398;
    const double C152763 = ae * C152398;
    const double C152575 = C152383 + C152572;
    const double C152631 = 2 * C152625;
    const double C152692 = C152272 * C152625;
    const double C152848 = ae * C152625;
    const double C152959 = C152946 + C152947;
    const double C152656 = C152482 * C152651;
    const double C152700 = C152272 * C152651;
    const double C153041 = 3 * C152651;
    const double C153160 = ae * C152651;
    const double C153294 = C153281 + C153282;
    const double C152465 = C152278 * C152462;
    const double C152611 = C152462 * C152515;
    const double C152826 = C152482 * C152462;
    const double C152914 = C152272 * C152462;
    const double C153080 = C152449 + C153077;
    const double C153463 = C152272 * C153455;
    const double C153126 = C152482 * C153123;
    const double C153249 = C152272 * C153123;
    const double C152463 = C152278 * C152460;
    const double C152607 = C152460 * C152515;
    const double C152824 = C152482 * C152460;
    const double C152908 = C152272 * C152460;
    const double C153078 = C152441 + C153075;
    const double C153459 = C152272 * C153451;
    const double C153124 = C152482 * C153119;
    const double C153243 = C152272 * C153119;
    const double C154014 = C154013 * C154007;
    const double C154020 = C154013 / C152055;
    const double C154375 = C154019 * C154013;
    const double C154373 = C154013 / C152045;
    const double C2902 = (C154011 * std::pow(C154007, 2)) / C152053 + C154012;
    const double C154022 = C154021 * C154007;
    const double C154407 = C154021 / C152196;
    const double C154379 = C154006 * C154021;
    const double C154377 = 2 * C154021;
    const double C127 = C154021 / C154381;
    const double C82856 = C154021 / C152085;
    const double C154425 = C154374 / C152045;
    const double C2903 = (-2 * C154019 * C154374) / C152045;
    const double C154456 = C154423 / C152053;
    const double C154386 = C154048 / C154056;
    const double C154384 = C154048 / C154039;
    const double C154383 = C154048 * C154043;
    const double C1310 = (2 * C154052 * C154048) / C154039;
    const double C154387 = C154053 * C154043;
    const double C133 = C154053 / C154388;
    const double C818 = C154053 / C154041;
    const double C154432 = C154385 / C154039;
    const double C1309 = (C154047 * std::pow(C154042, 2)) / C154051 + C154382;
    const double C154396 = C154115 / C154056;
    const double C154395 = C154115 * C154114;
    const double C154392 = C154115 / C154039;
    const double C339 = (2 * C154052 * C154115) / C154039;
    const double C154397 = C154118 * C154114;
    const double C1397 = C154118 / C154388;
    const double C1685 = C154118 / C154041;
    const double C154434 = C154394 / C154039;
    const double C338 = (C154066 * std::pow(C154113, 2)) / C154051 + C154389;
    const double C154400 = C154143 / C154056;
    const double C154399 = C154143 * C154142;
    const double C154393 = C154143 / C154039;
    const double C578 = (2 * C154052 * C154143) / C154039;
    const double C154401 = C154146 * C154142;
    const double C2323 = C154146 / C154388;
    const double C2630 = C154146 / C154041;
    const double C154437 = C154398 / C154039;
    const double C577 = (C154082 * std::pow(C154141, 2)) / C154051 + C154391;
    const double C24270 = (C154164 * std::pow(C154218, 2)) / C152053 + C154217;
    const double C154220 = C154219 * C154218;
    const double C154225 = C154219 / C152055;
    const double C154406 = C154219 / C152045;
    const double C154403 = C154019 * C154219;
    const double C154227 = C154226 * C154218;
    const double C154415 = C154226 / C152196;
    const double C154413 = C154216 * C154226;
    const double C154412 = 2 * C154226;
    const double C28196 = C154226 / C154381;
    const double C82853 = C154226 / C152085;
    const double C154447 = C154409 / C152045;
    const double C24271 = (-2 * C154019 * C154409) / C152045;
    const double C154467 = C154440 / C152053;
    const double C152061 = C152043 * C152059;
    const double C47145 =
        ((-C152059 / C152045) / C152085 - (0 * be) / C152045) / C152085 -
        (0 * be) / C152045;
    const double C97277 = (-C152059 / C152045) / C152085 - (0 * be) / C152045;
    const double C152123 = C152119 - C152113;
    const double C152165 = C152157 / C152045;
    const double C15041 = C15024 * C597;
    const double C15039 = C15024 * C596;
    const double C15033 = C15024 * C599;
    const double C15031 = C15024 * C598;
    const double C19218 = C15024 * C1986;
    const double C19216 = C15024 * C1985;
    const double C19210 = C15024 * C1136;
    const double C19208 = C15024 * C1135;
    const double C193 = C169 - C170;
    const double C3194 = C3156 - C3157;
    const double C47163 = C47138 * C162;
    const double C47151 = C47138 * C161;
    const double C51641 = C47138 * C383;
    const double C154263 = C154262 / C152053;
    const double C15038 = C154408 * C162;
    const double C15030 = C154408 * C161;
    const double C19207 = C154408 * C383;
    const double C7157 =
        (((0 - (C152043 * C152052) / C152045) * ae) / C152045 -
         (0 * be) / C152055) /
            (2 * C152045) +
        ((C152043 *
              (((C154181 - (C152043 * 2 * C152056) / C152045) * ae) / C152045 -
               C152052 / C152055) +
          C154408) *
         ae) /
            C152045 +
        (0 * ae) / C152045 - C152056 / C152053;
    const double C154444 = 2 * C154405;
    const double C154270 = C154269 / C152045;
    const double C154455 = C154420 / C152055;
    const double C154474 = C154408 - C154452;
    const double C97273 = -C154452;
    const double C154481 = C154469 + C154259;
    const double C152143 = C152138 + 0;
    const double C152175 = C152172 + C152156;
    const double C152146 = C152142 / C152085;
    const double C163 =
        (2 * C152278 * C152285 +
         C152278 * (C152285 + (C152280 * C152281 +
                               C152275 * bs[5] * std::pow(C152274, 5)) *
                                  C152044 * std::pow(C152278, 2))) /
        C152053;
    const double C382 = ((yP - yQ) * C152278 * C152285) / C152053;
    const double C384 =
        ((bs[2] * std::pow(C152270, 2) + C152275 * C152273 * C152276) *
             C152044 +
         C152285 * std::pow(yP - yQ, 2)) /
        C152053;
    const double C619 = (ae * C152278 * C152276 * C152273 * C152349 +
                         be * C152278 * C152276 * C152273 * C152350 +
                         C152272 * C152278 * C152285) /
                        C152053;
    const double C621 =
        ((C152366 + C152275 * C152273 * C152276) * C152044 +
         ae * (C152272 * C152369 + C152366 * be) +
         be * (C152272 * C152370 + C152366 * ae) +
         C152272 * (ae * C152369 + be * C152370 + C152272 * C152285)) /
        C152053;
    const double C1147 = (ae * C152482 * C152369 + be * C152482 * C152370 +
                          C152272 * C152482 * C152285) /
                         C152053;
    const double C645 = C134 * C604;
    const double C7172 = C7161 * C604;
    const double C15593 = C15024 * C604;
    const double C647 = C134 * C605;
    const double C7174 = C7161 * C605;
    const double C15595 = C15024 * C605;
    const double C1154 = C134 * C1137;
    const double C15315 = C15024 * C1137;
    const double C1156 = C134 * C1138;
    const double C15317 = C15024 * C1138;
    const double C409 = C135 * C349;
    const double C646 = C135 * C586;
    const double C1155 = C135 * C1130;
    const double C3171 = C135 * C1402;
    const double C3465 = C135 * C1975;
    const double C4918 = C134 * C1554;
    const double C20559 = C15024 * C1554;
    const double C30785 = C7161 * C1554;
    const double C4920 = C134 * C1555;
    const double C20561 = C15024 * C1555;
    const double C30787 = C7161 * C1555;
    const double C4919 = C135 * C1545;
    const double C2338 =
        (2 * (C152272 * C152370 + C152366 * ae) +
         C152272 * (C152370 + C152272 * C152559 + C152555 * ae) +
         (C152366 + C152279 * C152275) * ae) /
        C152045;
    const double C2337 =
        (2 * (C152272 * C152369 + C152366 * be) +
         C152272 * (C152369 + C152272 * C152558 + C152555 * be) +
         (C152366 + C152279 * C152275) * be) /
        C152045;
    const double C194 = C173 - C174;
    const double C195 = C177 - C178;
    const double C426 = C400 - C401;
    const double C427 = C404 - C405;
    const double C3195 = C3160 - C3161;
    const double C663 = C637 - C638;
    const double C664 = C641 - C642;
    const double C4292 = C4275 - C4276;
    const double C3198 = C3176 - C3177;
    const double C4291 = C4271 - C4272;
    const double C152492 = C152278 * C152294;
    const double C152708 = C152482 * C152294;
    const double C152719 = C152272 * C152294;
    const double C164 =
        (3 * (C152285 + C152294 * C152290) +
         C152278 *
             (2 * C152278 * C152294 +
              C152278 * (C152294 + (C152288 * C152289 +
                                    C152275 * bs[6] * std::pow(C152270, 6)) *
                                       C152044 * C152290))) /
        C152053;
    const double C381 = ((yP - yQ) * (C152285 + C152294 * C152290)) / C152053;
    const double C385 =
        (C152278 * C152285 + C152278 * C152294 * std::pow(yP - yQ, 2)) /
        C152053;
    const double C618 =
        (ae * (C152276 * C152273 * C152349 + C152358 * C152290) +
         be * (C152276 * C152273 * C152350 + C152359 * C152290) +
         C152272 * (C152285 + C152294 * C152290)) /
        C152053;
    const double C622 =
        (C152278 * C152285 + ae * (C152272 * C152372 + C152373 * be) +
         be * (C152272 * C152374 + C152373 * ae) +
         C152272 *
             (ae * C152372 + be * C152374 + C152272 * C152278 * C152294)) /
        C152053;
    const double C1148 = (ae * C152482 * C152372 + be * C152482 * C152374 +
                          C152272 * C152482 * C152278 * C152294) /
                         C152053;
    const double C1418 =
        (2 * C152482 * C152285 +
         C152482 * (C152285 + C152294 * std::pow(C152482, 2))) /
        C152053;
    const double C1560 =
        (C152482 * C152285 + ae * (C152272 * C152511 + C152512 * be) +
         be * (C152272 * C152513 + C152512 * ae) +
         C152272 *
             (ae * C152511 + be * C152513 + C152272 * C152482 * C152294)) /
        C152053;
    const double C1991 = (ae * (C152369 + C152358 * C152515) +
                          be * (C152370 + C152359 * C152515) +
                          C152272 * (C152285 + C152294 * C152515)) /
                         C152053;
    const double C2343 =
        (2 * (ae * C152369 + be * C152370 + C152272 * C152285) +
         ae * (C152369 + C152272 * C152558 + C152555 * be) +
         be * (C152370 + C152272 * C152559 + C152555 * ae) +
         C152272 *
             (C152285 + ae * C152558 + be * C152559 +
              C152272 * (ae * C152358 + be * C152359 + C152272 * C152294))) /
        C152053;
    const double C152303 = C152302 * C152290;
    const double C152306 = C152278 * C152302;
    const double C152603 = C152302 * C152515;
    const double C152877 = C152482 * C152302;
    const double C152990 = C152272 * C152302;
    const double C3151 = (3 * (C152285 + C152294 * C152515) +
                          C152482 * (2 * C152482 * C152294 +
                                     C152482 * (C152294 + C152302 * C152515))) /
                         C152053;
    const double C152396 = C152278 * C152392;
    const double C152409 = 3 * C152392;
    const double C152504 = C152482 * C152392;
    const double C152541 = C152392 * ae;
    const double C152539 = C152272 * C152392;
    const double C152538 = C152392 * be;
    const double C1401 =
        2 * C152482 * C152380 + C152482 * (C152380 + C152392 * C152515);
    const double C1974 = C152272 * (C152380 + C152392 * C152515);
    const double C2326 =
        2 * C152272 * C152380 + C152272 * (C152380 + C152392 * C152275);
    const double C152576 = C152385 + C152573;
    const double C152633 = 2 * C152627;
    const double C152696 = C152627 * ae;
    const double C152694 = C152272 * C152627;
    const double C152693 = C152627 * be;
    const double C6261 =
        2 * C152272 * C152508 + C152272 * (C152508 + C152627 * C152275);
    const double C152753 = C152747 + C152748;
    const double C152752 = C152385 + C152746;
    const double C152754 = C152745 * ae;
    const double C152751 = C152745 * be;
    const double C152954 = 2 * C152745;
    const double C152750 = C152743 + C152744;
    const double C152657 = C152482 * C152653;
    const double C152704 = C152653 * ae;
    const double C152702 = C152272 * C152653;
    const double C152701 = C152653 * be;
    const double C153044 = 3 * C152653;
    const double C6262 =
        2 * C152272 * C152569 + C152272 * (C152569 + C152653 * C152275);
    const double C152893 = C152887 + C152888;
    const double C152892 = C152646 + C152886;
    const double C152894 = C152885 * ae;
    const double C152891 = C152885 * be;
    const double C153289 = 2 * C152885;
    const double C152890 = C152883 + C152884;
    const double C153012 = C152272 * C153005;
    const double C153338 = 2 * C153005;
    const double C153325 = be * C153005;
    const double C153013 = C153004 * ae;
    const double C153011 = C152272 * C153004;
    const double C153010 = C153004 * be;
    const double C153336 = 3 * C153004;
    const double C153009 = C152272 * C153002;
    const double C153330 = 2 * C153002;
    const double C153324 = ae * C153002;
    const double C153 = (3 * (C152370 + C152359 * C152290) +
                         C152278 * (2 * C152374 + C152278 * C152381)) /
                        C152045;
    const double C358 = (C152482 * (2 * C152374 + C152278 * C152381)) / C152045;
    const double C370 =
        (C152370 + C152359 * C152290 + C152381 * C152515) / C152045;
    const double C595 = (C152272 * (2 * C152374 + C152278 * C152381) +
                         (2 * C152373 + C152278 * C152380) * ae) /
                        C152045;
    const double C607 = (C152370 + C152359 * C152290 +
                         C152272 * (C152272 * C152381 + C152380 * ae) +
                         C152272 * C152380 * ae) /
                        C152045;
    const double C1140 =
        (C152272 * C152482 * C152381 + C152482 * C152380 * ae) / C152045;
    const double C1409 =
        (2 * C152482 * C152381 + C152482 * (C152381 + C152400 * C152515)) /
        C152045;
    const double C1982 = (C152272 * (C152381 + C152400 * C152515) +
                          (C152380 + C152392 * C152515) * ae) /
                         C152045;
    const double C1553 =
        (C152482 * C152374 + C152272 * (C152272 * C152509 + C152508 * ae) +
         C152272 * C152508 * ae) /
        C152045;
    const double C152551 = C152548 + C152549;
    const double C3172 = C134 * C1411;
    const double C3466 = C134 * C1984;
    const double C15329 = C15024 * C1984;
    const double C3144 = (3 * (C152370 + C152359 * C152515) +
                          C152482 * (2 * C152513 + C152482 * C152570)) /
                         C152045;
    const double C3446 = (C152370 + C152359 * C152515 +
                          C152272 * (C152272 * C152570 + C152569 * ae) +
                          C152272 * C152569 * ae) /
                         C152045;
    const double C4259 = (C152272 * (2 * C152513 + C152482 * C152570) +
                          (2 * C152512 + C152482 * C152569) * ae) /
                         C152045;
    const double C152715 = C152712 + C152713;
    const double C152734 = C152272 * C152730;
    const double C152997 = 2 * C152730;
    const double C152987 = be * C152730;
    const double C152 = (3 * (C152369 + C152358 * C152290) +
                         C152278 * (2 * C152372 + C152278 * C152379)) /
                        C152045;
    const double C357 = (C152482 * (2 * C152372 + C152278 * C152379)) / C152045;
    const double C369 =
        (C152369 + C152358 * C152290 + C152379 * C152515) / C152045;
    const double C594 = (C152272 * (2 * C152372 + C152278 * C152379) +
                         (2 * C152373 + C152278 * C152380) * be) /
                        C152045;
    const double C606 = (C152369 + C152358 * C152290 +
                         C152272 * (C152272 * C152379 + C152380 * be) +
                         C152272 * C152380 * be) /
                        C152045;
    const double C1139 =
        (C152272 * C152482 * C152379 + C152482 * C152380 * be) / C152045;
    const double C1408 =
        (2 * C152482 * C152379 + C152482 * (C152379 + C152398 * C152515)) /
        C152045;
    const double C1981 = (C152272 * (C152379 + C152398 * C152515) +
                          (C152380 + C152392 * C152515) * be) /
                         C152045;
    const double C1552 =
        (C152482 * C152372 + C152272 * (C152272 * C152507 + C152508 * be) +
         C152272 * C152508 * be) /
        C152045;
    const double C152550 = C152545 + C152546;
    const double C152749 = C152740 + C152741;
    const double C3170 = C134 * C1410;
    const double C3464 = C134 * C1983;
    const double C15327 = C15024 * C1983;
    const double C3453 =
        (C152285 + C152294 * C152515 + ae * (C152272 * C152568 + C152569 * be) +
         be * (C152272 * C152570 + C152569 * ae) +
         C152272 * (ae * C152568 + be * C152570 +
                    C152272 * (C152294 + C152302 * C152515))) /
        C152053;
    const double C4266 = (ae * (2 * C152511 + C152482 * C152568) +
                          be * (2 * C152513 + C152482 * C152570) +
                          C152272 * (2 * C152482 * C152294 +
                                     C152482 * (C152294 + C152302 * C152515))) /
                         C152053;
    const double C3143 = (3 * (C152369 + C152358 * C152515) +
                          C152482 * (2 * C152511 + C152482 * C152568)) /
                         C152045;
    const double C3445 = (C152369 + C152358 * C152515 +
                          C152272 * (C152272 * C152568 + C152569 * be) +
                          C152272 * C152569 * be) /
                         C152045;
    const double C4258 = (C152272 * (2 * C152511 + C152482 * C152568) +
                          (2 * C152512 + C152482 * C152569) * be) /
                         C152045;
    const double C152714 = C152709 + C152710;
    const double C152881 = C152875 + C152876;
    const double C152733 = C152272 * C152727;
    const double C152991 = 2 * C152727;
    const double C152986 = ae * C152727;
    const double C152315 = C152314 * C152290;
    const double C152321 = C152278 * C152314;
    const double C153029 = C152314 * C152515;
    const double C153097 = C152482 * C152314;
    const double C153328 = C152272 * C152314;
    const double C152330 = C152329 * C152290;
    const double C153035 = C152278 * C152329;
    const double C153098 = C152329 * C152515;
    const double C153498 = C152482 * C152329;
    const double C153567 = C152272 * C152329;
    const double C152458 = C152278 * C152454;
    const double C152609 = C152454 * C152515;
    const double C152825 = C152482 * C152454;
    const double C152915 = C152454 * ae;
    const double C152911 = C152454 * C152275;
    const double C152910 = C152272 * C152454;
    const double C152909 = C152454 * be;
    const double C153079 = C152445 + C153076;
    const double C153409 = C153401 + C153402;
    const double C153408 = C152445 + C153396;
    const double C153410 = C153395 * ae;
    const double C153407 = C153395 * be;
    const double C153406 = C153393 + C153394;
    const double C153464 = C153452 * ae;
    const double C153462 = C153452 * C152275;
    const double C153461 = C152272 * C153452;
    const double C153460 = C153452 * be;
    const double C153125 = C152482 * C153121;
    const double C153250 = C153121 * ae;
    const double C153246 = C153121 * C152275;
    const double C153245 = C152272 * C153121;
    const double C153244 = C153121 * be;
    const double C153524 = C153516 + C153517;
    const double C153523 = C153112 + C153515;
    const double C153525 = C153514 * ae;
    const double C153522 = C153514 * be;
    const double C153521 = C153512 + C153513;
    const double C153599 = C152272 * C153590;
    const double C153600 = C153589 * ae;
    const double C153598 = C152272 * C153589;
    const double C153597 = C153589 * be;
    const double C153596 = C152272 * C153587;
    const double C152429 = C152278 * C152426;
    const double C152448 = 3 * C152426;
    const double C152581 = C152426 * C152515;
    const double C152610 = C152482 * C152426;
    const double C152770 = C152272 * C152426;
    const double C152905 = be * C152426;
    const double C152636 = C152413 + C152630;
    const double C152860 = C152272 * C152853;
    const double C153073 = 2 * C152853;
    const double C153448 = be * C152853;
    const double C152963 = C152956 + C152957;
    const double C153055 = C152482 * C153052;
    const double C153115 = 3 * C153052;
    const double C153167 = C152272 * C153052;
    const double C153240 = be * C153052;
    const double C153298 = C153291 + C153292;
    const double C153355 = C152272 * C153347;
    const double C153580 = 2 * C153347;
    const double C153564 = be * C153347;
    const double C152427 = C152278 * C152424;
    const double C152440 = 3 * C152424;
    const double C152579 = C152424 * C152515;
    const double C152606 = C152482 * C152424;
    const double C152766 = C152272 * C152424;
    const double C152904 = ae * C152424;
    const double C152632 = C152407 + C152626;
    const double C152856 = C152272 * C152851;
    const double C153067 = 2 * C152851;
    const double C153447 = ae * C152851;
    const double C152960 = C152950 + C152951;
    const double C153405 = C153388 + C153389;
    const double C153053 = C152482 * C153050;
    const double C153107 = 3 * C153050;
    const double C153163 = C152272 * C153050;
    const double C153239 = ae * C153050;
    const double C153295 = C153285 + C153286;
    const double C153510 = C153496 + C153497;
    const double C153352 = C152272 * C153344;
    const double C153570 = 2 * C153344;
    const double C153563 = ae * C153344;
    const double C182 = C135 * C140;
    const double C397 = C135 * C344;
    const double C413 = C135 * C350;
    const double C634 = C135 * C581;
    const double C650 = C135 * C587;
    const double C1159 = C135 * C1131;
    const double C3472 = C135 * C1544;
    const double C4682 = C135 * C3139;
    const double C4923 = C135 * C3441;
    const double C5671 = C135 * C4254;
    const double C152425 = C152417 + C152422;
    const double C152583 = C152392 + C152580;
    const double C152614 = 2 * C152608;
    const double C152679 = C152608 * ae;
    const double C152677 = C152272 * C152608;
    const double C152676 = C152608 * be;
    const double C152775 = C152392 + C152769;
    const double C152777 = C152768 * ae;
    const double C152774 = C152768 * be;
    const double C152912 = 2 * C152768;
    const double C152638 = C152482 * C152634;
    const double C152687 = C152634 * ae;
    const double C152685 = C152272 * C152634;
    const double C152684 = C152634 * be;
    const double C153069 = 3 * C152634;
    const double C152865 = C152627 + C152859;
    const double C152867 = C152858 * ae;
    const double C152864 = C152858 * be;
    const double C153453 = 2 * C152858;
    const double C152971 = C152962 * ae;
    const double C152969 = C152272 * C152962;
    const double C152968 = C152962 * be;
    const double C153398 = 3 * C152962;
    const double C153057 = C153045 + C153054;
    const double C153172 = C152653 + C153166;
    const double C153174 = C153165 * ae;
    const double C153171 = C153165 * be;
    const double C153247 = 2 * C153165;
    const double C153306 = C153297 * ae;
    const double C153304 = C152272 * C153297;
    const double C153303 = C153297 * be;
    const double C153504 = 3 * C153297;
    const double C153359 = C153335 + C153354;
    const double C152404 = C152393 + C152402;
    const double C3146 = (3 * (C152374 + C152387 * C152515) +
                          C152482 * (2 * C152509 + C152482 * C152577)) /
                         C152045;
    const double C152661 = C152654 + C152658;
    const double C152403 = C152389 + C152401;
    const double C152772 = C152763 + C152764;
    const double C3145 = (3 * (C152372 + C152383 * C152515) +
                          C152482 * (2 * C152507 + C152482 * C152575)) /
                         C152045;
    const double C152854 = C152848 + C152849;
    const double C152659 = C152650 + C152656;
    const double C153169 = C153160 + C153161;
    const double C152468 = C152455 + C152465;
    const double C152617 = C152426 + C152611;
    const double C152833 = C152272 * C152826;
    const double C153083 = C152482 * C153080;
    const double C153190 = C152272 * C153080;
    const double C153129 = C153122 + C153126;
    const double C152466 = C152451 + C152463;
    const double C152613 = C152424 + C152607;
    const double C152829 = C152272 * C152824;
    const double C153081 = C152482 * C153078;
    const double C153186 = C152272 * C153078;
    const double C153127 = C153118 + C153124;
    const double C154015 = C154014 / C152053;
    const double C154426 = 2 * C154375;
    const double C154023 = C154022 / C152045;
    const double C154430 = C154379 / C152055;
    const double C154457 = C154373 - C154425;
    const double C74048 = -C154425;
    const double C154477 = C154456 + C154012;
    const double C154431 = C154383 / C154051;
    const double C154433 = C154387 / C154039;
    const double C341 = -C154432;
    const double C154435 = C154395 / C154051;
    const double C154436 = C154397 / C154039;
    const double C1307 = -C154434;
    const double C154438 = C154399 / C154051;
    const double C154439 = C154401 / C154039;
    const double C2114 = -C154437;
    const double C154221 = C154220 / C152053;
    const double C154441 = 2 * C154403;
    const double C154228 = C154227 / C152045;
    const double C154450 = C154413 / C152055;
    const double C154471 = C154406 - C154447;
    const double C70494 = -C154447;
    const double C154480 = C154467 + C154217;
    const double C152062 = C152061 / C152045;
    const double C47158 = C47145 * C605;
    const double C47156 = C47145 * C604;
    const double C51648 = C47145 * C1555;
    const double C51646 = C47145 * C1554;
    const double C97294 = C97277 * C597;
    const double C97292 = C97277 * C596;
    const double C97286 = C97277 * C599;
    const double C97284 = C97277 * C598;
    const double C97582 = C97277 * C1984;
    const double C97580 = C97277 * C1983;
    const double C97570 = C97277 * C1138;
    const double C97568 = C97277 * C1137;
    const double C97848 = C97277 * C605;
    const double C97846 = C97277 * C604;
    const double C101464 = C97277 * C1986;
    const double C101462 = C97277 * C1985;
    const double C101456 = C97277 * C1136;
    const double C101454 = C97277 * C1135;
    const double C102868 = C97277 * C1555;
    const double C102866 = C97277 * C1554;
    const double C152128 = C152043 * C152123;
    const double C152161 = 2 * C152123;
    const double C152190 = C152123 / C152085;
    const double C199 = C193 - C171;
    const double C3202 = C3194 - C3158;
    const double C154264 = C154259 - C154263;
    const double C7198 = C7157 * C151;
    const double C7196 = C7157 * C150;
    const double C7178 = C7157 * C149;
    const double C7176 = C7157 * C148;
    const double C7166 = C7157 * C147;
    const double C7164 = C7157 * C146;
    const double C7498 = C7157 * C368;
    const double C7496 = C7157 * C367;
    const double C7494 = C7157 * C362;
    const double C7492 = C7157 * C361;
    const double C7482 = C7157 * C360;
    const double C7480 = C7157 * C359;
    const double C7816 = C7157 * C605;
    const double C7814 = C7157 * C604;
    const double C7812 = C7157 * C599;
    const double C7810 = C7157 * C598;
    const double C7800 = C7157 * C597;
    const double C7798 = C7157 * C596;
    const double C8654 = C7157 * C1138;
    const double C8652 = C7157 * C1137;
    const double C30815 = C7157 * C1411;
    const double C30813 = C7157 * C1410;
    const double C30811 = C7157 * C1413;
    const double C30809 = C7157 * C1412;
    const double C30791 = C7157 * C366;
    const double C30789 = C7157 * C365;
    const double C30779 = C7157 * C364;
    const double C30777 = C7157 * C363;
    const double C31847 = C7157 * C1984;
    const double C31845 = C7157 * C1983;
    const double C31843 = C7157 * C1136;
    const double C31841 = C7157 * C1135;
    const double C31831 = C7157 * C1986;
    const double C31829 = C7157 * C1985;
    const double C32495 = C7157 * C1555;
    const double C32493 = C7157 * C1554;
    const double C154470 = C154444 / C152045;
    const double C154271 = C154267 - C154270;
    const double C154484 = C154474 / C152085;
    const double C97291 = C97273 * C162;
    const double C97283 = C97273 * C161;
    const double C101453 = C97273 * C383;
    const double C7179 = C154481 * C162;
    const double C7167 = C154481 * C161;
    const double C30780 = C154481 * C383;
    const double C152147 = C152143 * be;
    const double C152178 = C152175 * be;
    const double C180 = C154181 * C163;
    const double C7199 = C154481 * C163;
    const double C15046 = C154408 * C163;
    const double C47183 = C47138 * C163;
    const double C97299 = C97273 * C163;
    const double C407 = C154181 * C382;
    const double C7495 = C154481 * C382;
    const double C15322 = C154408 * C382;
    const double C47479 = C47138 * C382;
    const double C97575 = C97273 * C382;
    const double C3163 = C154181 * C384;
    const double C19223 = C154408 * C384;
    const double C30792 = C154481 * C384;
    const double C51653 = C47138 * C384;
    const double C101461 = C97273 * C384;
    const double C644 = C154181 * C619;
    const double C7813 = C154481 * C619;
    const double C15034 = C154268 * C619;
    const double C15600 = C154408 * C619;
    const double C47155 = C47139 * C619;
    const double C47781 = C47138 * C619;
    const double C97287 = C154268 * C619;
    const double C97853 = C97273 * C619;
    const double C4278 = C154181 * C1147;
    const double C19211 = C154268 * C1147;
    const double C20566 = C154408 * C1147;
    const double C31844 = C154481 * C1147;
    const double C51645 = C47139 * C1147;
    const double C52693 = C47138 * C1147;
    const double C101457 = C154268 * C1147;
    const double C102873 = C97273 * C1147;
    const double C428 = C408 - C409;
    const double C665 = C645 - C646;
    const double C1170 = C1154 - C1155;
    const double C4926 = C4918 - C4919;
    const double C200 = C194 - C175;
    const double C201 = C195 - C179;
    const double C434 = C426 - C402;
    const double C435 = C427 - C406;
    const double C3203 = C3195 - C3162;
    const double C671 = C663 - C639;
    const double C672 = C664 - C643;
    const double C4296 = C4292 - C4277;
    const double C3206 = C3198 - C3178;
    const double C4295 = C4291 - C4273;
    const double C152732 = C152726 + C152719;
    const double C184 = C154181 * C164;
    const double C7203 = C154481 * C164;
    const double C15058 = C154408 * C164;
    const double C47187 = C47138 * C164;
    const double C97311 = C97273 * C164;
    const double C403 = C154181 * C381;
    const double C7483 = C154481 * C381;
    const double C15314 = C154408 * C381;
    const double C47467 = C47138 * C381;
    const double C97567 = C97273 * C381;
    const double C411 = C154181 * C385;
    const double C7499 = C154481 * C385;
    const double C15326 = C154408 * C385;
    const double C47483 = C47138 * C385;
    const double C97579 = C97273 * C385;
    const double C640 = C154181 * C618;
    const double C7801 = C154481 * C618;
    const double C15042 = C154268 * C618;
    const double C15592 = C154408 * C618;
    const double C47167 = C47139 * C618;
    const double C47769 = C47138 * C618;
    const double C97295 = C154268 * C618;
    const double C97845 = C97273 * C618;
    const double C648 = C154181 * C622;
    const double C7175 = C154445 * C622;
    const double C7817 = C154481 * C622;
    const double C15604 = C154408 * C622;
    const double C15596 = C154268 * C622;
    const double C47159 = C154445 * C622;
    const double C47785 = C47138 * C622;
    const double C47777 = C47139 * C622;
    const double C97857 = C97273 * C622;
    const double C97849 = C154268 * C622;
    const double C115639 = C115620 * C622;
    const double C1157 = C154181 * C1148;
    const double C8655 = C154481 * C1148;
    const double C15318 = C154268 * C1148;
    const double C16346 = C154408 * C1148;
    const double C47475 = C47139 * C1148;
    const double C48619 = C47138 * C1148;
    const double C97571 = C154268 * C1148;
    const double C98599 = C97273 * C1148;
    const double C3179 = C154181 * C1418;
    const double C21090 = C154408 * C1418;
    const double C30812 = C154481 * C1418;
    const double C51673 = C47138 * C1418;
    const double C101485 = C97273 * C1418;
    const double C4921 = C154181 * C1560;
    const double C20562 = C154268 * C1560;
    const double C21394 = C154408 * C1560;
    const double C30788 = C154445 * C1560;
    const double C32496 = C154481 * C1560;
    const double C51649 = C154445 * C1560;
    const double C52689 = C47139 * C1560;
    const double C53341 = C47138 * C1560;
    const double C102869 = C154268 * C1560;
    const double C103694 = C97273 * C1560;
    const double C120249 = C115620 * C1560;
    const double C4274 = C154181 * C1991;
    const double C19219 = C154268 * C1991;
    const double C22374 = C154408 * C1991;
    const double C31832 = C154481 * C1991;
    const double C51657 = C47139 * C1991;
    const double C52681 = C47138 * C1991;
    const double C101465 = C154268 * C1991;
    const double C102865 = C97273 * C1991;
    const double C152304 = C152294 + C152303;
    const double C152310 = 2 * C152306;
    const double C152691 = C152482 * C152306;
    const double C152742 = C152272 * C152306;
    const double C1417 =
        (2 * C152482 * C152492 +
         C152482 * (C152492 + C152306 * std::pow(C152482, 2))) /
        C152053;
    const double C1559 =
        (C152482 * C152492 + ae * (C152272 * C152507 + C152508 * be) +
         be * (C152272 * C152509 + C152508 * ae) +
         C152272 *
             (ae * C152507 + be * C152509 + C152272 * C152482 * C152306)) /
        C152053;
    const double C1990 = (ae * (C152372 + C152383 * C152515) +
                          be * (C152374 + C152387 * C152515) +
                          C152272 * (C152492 + C152306 * C152515)) /
                         C152053;
    const double C152604 = C152294 + C152603;
    const double C152882 = C152272 * C152877;
    const double C153028 = 2 * C152877;
    const double C153008 = C153001 + C152990;
    const double C4684 = C154181 * C3151;
    const double C32252 = C154481 * C3151;
    const double C40420 = C154408 * C3151;
    const double C53101 = C47138 * C3151;
    const double C103390 = C97273 * C3151;
    const double C152399 = C152391 + C152396;
    const double C1550 =
        (C152482 * C152379 + C152272 * (C152272 * C152503 + C152504 * be) +
         C152272 * C152504 * be) /
        C152045;
    const double C1551 =
        (C152482 * C152381 + C152272 * (C152272 * C152505 + C152504 * ae) +
         C152272 * C152504 * ae) /
        C152045;
    const double C1543 = C152482 * C152380 + C152504 * C152275;
    const double C6259 =
        2 * C152272 * C152504 + C152272 * (C152504 + C152608 * C152275);
    const double C152543 = C152540 + C152541;
    const double C152542 = C152537 + C152538;
    const double C3165 = C135 * C1401;
    const double C3459 = C135 * C1974;
    const double C3447 = (C152372 + C152383 * C152515 +
                          C152272 * (C152272 * C152575 + C152576 * be) +
                          C152272 * C152576 * be) /
                         C152045;
    const double C3448 = (C152374 + C152387 * C152515 +
                          C152272 * (C152272 * C152577 + C152576 * ae) +
                          C152272 * C152576 * ae) /
                         C152045;
    const double C4260 = (C152272 * (2 * C152507 + C152482 * C152575) +
                          (2 * C152508 + C152482 * C152576) * be) /
                         C152045;
    const double C4261 = (C152272 * (2 * C152509 + C152482 * C152577) +
                          (2 * C152508 + C152482 * C152576) * ae) /
                         C152045;
    const double C3140 = 3 * (C152373 + C152385 * C152515) +
                         C152482 * (2 * C152508 + C152482 * C152576);
    const double C3442 = C152373 + C152385 * C152515 + C152576 * C152275;
    const double C4255 = C152272 * (2 * C152508 + C152482 * C152576);
    const double C6260 =
        2 * C152272 * C152576 + C152272 * (C152576 + C152634 * C152275);
    const double C152698 = C152695 + C152696;
    const double C152697 = C152692 + C152693;
    const double C152757 = C152272 * C152753;
    const double C152955 = 2 * C152753;
    const double C152945 = be * C152753;
    const double C7774 = 3 * (C152373 + C152385 * C152275) +
                         C152272 * (2 * C152547 + C152272 * C152752);
    const double C152756 = C152272 * C152750;
    const double C152949 = 2 * C152750;
    const double C152944 = ae * C152750;
    const double C152660 = C152652 + C152657;
    const double C152706 = C152703 + C152704;
    const double C152705 = C152700 + C152701;
    const double C152896 = C152272 * C152893;
    const double C153290 = 2 * C152893;
    const double C153280 = be * C152893;
    const double C9277 = 3 * (C152512 + C152646 * C152275) +
                         C152272 * (2 * C152711 + C152272 * C152892);
    const double C152895 = C152272 * C152890;
    const double C153284 = 2 * C152890;
    const double C153279 = ae * C152890;
    const double C153017 = C152354 + C153012;
    const double C153016 = C152996 + C153011;
    const double C153015 = C152353 + C153009;
    const double C153342 = C152302 + C153324;
    const double C183 = C134 * C153;
    const double C7202 = C7157 * C153;
    const double C398 = C134 * C358;
    const double C8095 = C7157 * C358;
    const double C414 = C134 * C370;
    const double C7510 = C7157 * C370;
    const double C635 = C134 * C595;
    const double C8337 = C7157 * C595;
    const double C15049 = C15024 * C595;
    const double C97302 = C97277 * C595;
    const double C651 = C134 * C607;
    const double C7186 = C7161 * C607;
    const double C7828 = C7157 * C607;
    const double C15587 = C15024 * C607;
    const double C47170 = C47145 * C607;
    const double C97840 = C97277 * C607;
    const double C1160 = C134 * C1140;
    const double C8666 = C7157 * C1140;
    const double C15309 = C15024 * C1140;
    const double C97562 = C97277 * C1140;
    const double C3166 = C134 * C1409;
    const double C3460 = C134 * C1982;
    const double C15337 = C15024 * C1982;
    const double C97590 = C97277 * C1982;
    const double C3473 = C134 * C1553;
    const double C7486 = C7161 * C1553;
    const double C16349 = C15024 * C1553;
    const double C47470 = C47145 * C1553;
    const double C78235 = C7157 * C1553;
    const double C98602 = C97277 * C1553;
    const double C2336 =
        (2 * (C152272 * C152374 + C152373 * ae) +
         C152272 * (C152374 + C152272 * C152551 + C152547 * ae) +
         (C152373 + C152385 * C152275) * ae) /
        C152045;
    const double C4683 = C134 * C3144;
    const double C32251 = C7157 * C3144;
    const double C4924 = C134 * C3446;
    const double C22377 = C15024 * C3446;
    const double C30799 = C7161 * C3446;
    const double C32507 = C7157 * C3446;
    const double C51660 = C47145 * C3446;
    const double C102860 = C97277 * C3446;
    const double C5672 = C134 * C4259;
    const double C21093 = C15024 * C4259;
    const double C33264 = C7157 * C4259;
    const double C101480 = C97277 * C4259;
    const double C6275 =
        (2 * (C152272 * C152513 + C152512 * ae) +
         C152272 * (C152513 + C152272 * C152715 + C152711 * ae) +
         (C152512 + C152646 * C152275) * ae) /
        C152045;
    const double C152736 = C152359 + C152734;
    const double C181 = C134 * C152;
    const double C7200 = C7157 * C152;
    const double C396 = C134 * C357;
    const double C8093 = C7157 * C357;
    const double C412 = C134 * C369;
    const double C7508 = C7157 * C369;
    const double C633 = C134 * C594;
    const double C8335 = C7157 * C594;
    const double C15047 = C15024 * C594;
    const double C97300 = C97277 * C594;
    const double C649 = C134 * C606;
    const double C7184 = C7161 * C606;
    const double C7826 = C7157 * C606;
    const double C15585 = C15024 * C606;
    const double C47168 = C47145 * C606;
    const double C97838 = C97277 * C606;
    const double C1158 = C134 * C1139;
    const double C8664 = C7157 * C1139;
    const double C15307 = C15024 * C1139;
    const double C97560 = C97277 * C1139;
    const double C3164 = C134 * C1408;
    const double C3458 = C134 * C1981;
    const double C15335 = C15024 * C1981;
    const double C97588 = C97277 * C1981;
    const double C3471 = C134 * C1552;
    const double C7484 = C7161 * C1552;
    const double C16347 = C15024 * C1552;
    const double C47468 = C47145 * C1552;
    const double C78233 = C7157 * C1552;
    const double C98600 = C97277 * C1552;
    const double C2342 =
        (2 * (ae * C152372 + be * C152374 + C152272 * C152492) +
         ae * (C152372 + C152272 * C152550 + C152547 * be) +
         be * (C152374 + C152272 * C152551 + C152547 * ae) +
         C152272 *
             (C152492 + ae * C152550 + be * C152551 +
              C152272 * (ae * C152383 + be * C152387 + C152272 * C152306))) /
        C152053;
    const double C2335 =
        (2 * (C152272 * C152372 + C152373 * be) +
         C152272 * (C152372 + C152272 * C152550 + C152547 * be) +
         (C152373 + C152385 * C152275) * be) /
        C152045;
    const double C3197 = C3170 - C3171;
    const double C3489 = C3464 - C3465;
    const double C4925 = C154181 * C3453;
    const double C22378 = C154268 * C3453;
    const double C30800 = C154445 * C3453;
    const double C32508 = C154481 * C3453;
    const double C40724 = C154408 * C3453;
    const double C51661 = C154445 * C3453;
    const double C52677 = C47139 * C3453;
    const double C53353 = C47138 * C3453;
    const double C102861 = C154268 * C3453;
    const double C103702 = C97273 * C3453;
    const double C120256 = C115620 * C3453;
    const double C5673 = C154181 * C4266;
    const double C21094 = C154268 * C4266;
    const double C33265 = C154481 * C4266;
    const double C41705 = C154408 * C4266;
    const double C51669 = C47139 * C4266;
    const double C54110 = C47138 * C4266;
    const double C101481 = C154268 * C4266;
    const double C104689 = C97273 * C4266;
    const double C4681 = C134 * C3143;
    const double C32249 = C7157 * C3143;
    const double C4922 = C134 * C3445;
    const double C22375 = C15024 * C3445;
    const double C30797 = C7161 * C3445;
    const double C32505 = C7157 * C3445;
    const double C51658 = C47145 * C3445;
    const double C102858 = C97277 * C3445;
    const double C5670 = C134 * C4258;
    const double C21091 = C15024 * C4258;
    const double C33262 = C7157 * C4258;
    const double C101478 = C97277 * C4258;
    const double C6281 =
        (2 * (ae * C152511 + be * C152513 + C152272 * C152708) +
         ae * (C152511 + C152272 * C152714 + C152711 * be) +
         be * (C152513 + C152272 * C152715 + C152711 * ae) +
         C152272 * (C152708 + ae * C152714 + be * C152715 +
                    C152272 * (ae * C152644 + be * C152648 +
                               C152272 * C152482 * C152302))) /
        C152053;
    const double C6274 =
        (2 * (C152272 * C152511 + C152512 * be) +
         C152272 * (C152511 + C152272 * C152714 + C152711 * be) +
         (C152512 + C152646 * C152275) * be) /
        C152045;
    const double C152735 = C152358 + C152733;
    const double C153000 = C152294 + C152986;
    const double C152316 = C152302 + C152315;
    const double C152325 = 2 * C152321;
    const double C152600 = C152321 * C152515;
    const double C152850 = C152482 * C152321;
    const double C152948 = C152272 * C152321;
    const double C3152 = (3 * (C152492 + C152306 * C152515) +
                          C152482 * (2 * C152482 * C152306 +
                                     C152482 * (C152306 + C152321 * C152515))) /
                         C152053;
    const double C3454 =
        (C152492 + C152306 * C152515 + ae * (C152272 * C152575 + C152576 * be) +
         be * (C152272 * C152577 + C152576 * ae) +
         C152272 * (ae * C152575 + be * C152577 +
                    C152272 * (C152306 + C152321 * C152515))) /
        C152053;
    const double C4267 = (ae * (2 * C152507 + C152482 * C152575) +
                          be * (2 * C152509 + C152482 * C152577) +
                          C152272 * (2 * C152482 * C152306 +
                                     C152482 * (C152306 + C152321 * C152515))) /
                         C152053;
    const double C153030 = C152302 + C153029;
    const double C153099 = 2 * C153097;
    const double C153283 = C152272 * C153097;
    const double C153351 = C153343 + C153328;
    const double C152331 = C152314 + C152330;
    const double C153036 = C153035 * C152515;
    const double C153390 = C152272 * C153035;
    const double C153449 = C152482 * C153035;
    const double C153100 = C152314 + C153098;
    const double C153511 = C152272 * C153498;
    const double C153595 = C153586 + C153567;
    const double C152461 = C152453 + C152458;
    const double C152615 = C152418 + C152609;
    const double C152834 = C152825 * ae;
    const double C152832 = C152825 * C152275;
    const double C152831 = C152272 * C152825;
    const double C152830 = C152825 * be;
    const double C152921 = C152914 + C152915;
    const double C152920 = C152418 + C152911;
    const double C152922 = C152910 * ae;
    const double C152919 = C152910 * be;
    const double C152918 = C152908 + C152909;
    const double C153082 = C152482 * C153079;
    const double C153191 = C153079 * ae;
    const double C153189 = C153079 * C152275;
    const double C153188 = C152272 * C153079;
    const double C153187 = C153079 * be;
    const double C153417 = C152272 * C153409;
    const double C153418 = C153408 * ae;
    const double C153416 = C152272 * C153408;
    const double C153415 = C153408 * be;
    const double C153414 = C152272 * C153406;
    const double C153470 = C153463 + C153464;
    const double C153469 = C152852 + C153462;
    const double C153471 = C153461 * ae;
    const double C153468 = C153461 * be;
    const double C153467 = C153459 + C153460;
    const double C153128 = C153120 + C153125;
    const double C153256 = C153249 + C153250;
    const double C153255 = C153051 + C153246;
    const double C153257 = C153245 * ae;
    const double C153254 = C153245 * be;
    const double C153253 = C153243 + C153244;
    const double C153530 = C152272 * C153524;
    const double C153531 = C153523 * ae;
    const double C153529 = C152272 * C153523;
    const double C153528 = C153523 * be;
    const double C153527 = C152272 * C153521;
    const double C153604 = C152420 + C153599;
    const double C153603 = C153575 + C153598;
    const double C153602 = C152416 + C153596;
    const double C152432 = C152419 + C152429;
    const double C152584 = C152400 + C152581;
    const double C152616 = 2 * C152610;
    const double C152678 = C152272 * C152610;
    const double C152822 = be * C152610;
    const double C152776 = C152770 + C152771;
    const double C152639 = C152482 * C152636;
    const double C152686 = C152272 * C152636;
    const double C153072 = 3 * C152636;
    const double C153184 = be * C152636;
    const double C152866 = C152860 + C152861;
    const double C152970 = C152272 * C152963;
    const double C153400 = 2 * C152963;
    const double C153387 = be * C152963;
    const double C153058 = C153048 + C153055;
    const double C153173 = C153167 + C153168;
    const double C153305 = C152272 * C153298;
    const double C153506 = 2 * C153298;
    const double C153495 = be * C153298;
    const double C153360 = C152394 + C153355;
    const double C152430 = C152415 + C152427;
    const double C152582 = C152398 + C152579;
    const double C152612 = 2 * C152606;
    const double C152675 = C152272 * C152606;
    const double C152821 = ae * C152606;
    const double C152773 = C152766 + C152767;
    const double C152917 = C152904 + C152905;
    const double C152637 = C152482 * C152632;
    const double C152683 = C152272 * C152632;
    const double C153066 = 3 * C152632;
    const double C153183 = ae * C152632;
    const double C152863 = C152856 + C152857;
    const double C153457 = C153447 + C153448;
    const double C152967 = C152272 * C152960;
    const double C153392 = 2 * C152960;
    const double C153386 = ae * C152960;
    const double C153056 = C153042 + C153053;
    const double C153170 = C153163 + C153164;
    const double C153252 = C153239 + C153240;
    const double C153302 = C152272 * C153295;
    const double C153500 = 2 * C153295;
    const double C153494 = ae * C153295;
    const double C153358 = C152390 + C153352;
    const double C153585 = C152314 + C153563;
    const double C152428 = C152278 * C152425;
    const double C152443 = 4 * C152425;
    const double C152500 = C152482 * C152425;
    const double C152533 = C152425 * ae;
    const double C152531 = C152272 * C152425;
    const double C152530 = C152425 * be;
    const double C3141 = 3 * (C152380 + C152392 * C152515) +
                         C152482 * (2 * C152504 + C152482 * C152583);
    const double C3443 = C152380 + C152392 * C152515 + C152583 * C152275;
    const double C4256 = C152272 * (2 * C152504 + C152482 * C152583);
    const double C7775 = 3 * (C152380 + C152392 * C152275) +
                         C152272 * (2 * C152539 + C152272 * C152775);
    const double C152641 = C152633 + C152638;
    const double C9276 = 3 * (C152508 + C152627 * C152275) +
                         C152272 * (2 * C152694 + C152272 * C152865);
    const double C152974 = C152954 + C152969;
    const double C153060 = C152482 * C153057;
    const double C153110 = 4 * C153057;
    const double C153156 = C153057 * ae;
    const double C153154 = C152272 * C153057;
    const double C153153 = C153057 * be;
    const double C31082 = 3 * (C152569 + C152653 * C152275) +
                          C152272 * (2 * C152702 + C152272 * C153172);
    const double C153309 = C153289 + C153304;
    const double C153366 = C153359 * ae;
    const double C153364 = C152272 * C153359;
    const double C153363 = C153359 * be;
    const double C153577 = 4 * C153359;
    const double C155 = (4 * (2 * C152374 + C152278 * C152381) +
                         C152278 * (3 * C152381 + C152278 * C152404)) /
                        C152045;
    const double C356 = (C152482 * (3 * C152381 + C152278 * C152404)) / C152045;
    const double C372 =
        (2 * C152374 + C152278 * C152381 + C152404 * C152515) / C152045;
    const double C3183 = C134 * C3146;
    const double C4676 = (4 * (2 * C152513 + C152482 * C152570) +
                          C152482 * (3 * C152570 + C152482 * C152661)) /
                         C152045;
    const double C154 = (4 * (2 * C152372 + C152278 * C152379) +
                         C152278 * (3 * C152379 + C152278 * C152403)) /
                        C152045;
    const double C355 = (C152482 * (3 * C152379 + C152278 * C152403)) / C152045;
    const double C371 =
        (2 * C152372 + C152278 * C152379 + C152403 * C152515) / C152045;
    const double C3181 = C134 * C3145;
    const double C4675 = (4 * (2 * C152511 + C152482 * C152568) +
                          C152482 * (3 * C152568 + C152482 * C152659)) /
                         C152045;
    const double C152471 = C152278 * C152468;
    const double C152588 = C152468 * C152515;
    const double C152793 = C152272 * C152468;
    const double C152812 = C152482 * C152468;
    const double C152620 = C152482 * C152617;
    const double C152669 = C152272 * C152617;
    const double C153086 = C153073 + C153083;
    const double C153132 = C152482 * C153129;
    const double C153221 = C152272 * C153129;
    const double C152469 = C152278 * C152466;
    const double C152586 = C152466 * C152515;
    const double C152789 = C152272 * C152466;
    const double C152810 = C152482 * C152466;
    const double C152618 = C152482 * C152613;
    const double C152666 = C152272 * C152613;
    const double C153084 = C153067 + C153081;
    const double C153130 = C152482 * C153127;
    const double C153217 = C152272 * C153127;
    const double C154016 = C154012 - C154015;
    const double C154458 = C154426 / C152045;
    const double C154024 = C154020 - C154023;
    const double C154478 = C154457 / C152085;
    const double C154461 = C154382 - C154431;
    const double C154462 = C154386 - C154433;
    const double C154463 = C154389 - C154435;
    const double C154464 = C154396 - C154436;
    const double C154465 = C154391 - C154438;
    const double C154466 = C154400 - C154439;
    const double C154222 = C154217 - C154221;
    const double C154468 = C154441 / C152045;
    const double C154229 = C154225 - C154228;
    const double C154482 = C154471 / C152085;
    const double C152063 = C154181 - C152062;
    const double C152132 = C152128 + C154268;
    const double C152193 = C152190 - C152192;
    const double C205 = C199 + C172;
    const double C3210 = C3202 + C3159;
    const double C115667 = C154264 * C164;
    const double C115663 = C154264 * C163;
    const double C115643 = C154264 * C162;
    const double C115631 = C154264 * C161;
    const double C115963 = C154264 * C385;
    const double C115959 = C154264 * C382;
    const double C115947 = C154264 * C381;
    const double C116265 = C154264 * C622;
    const double C116261 = C154264 * C619;
    const double C116249 = C154264 * C618;
    const double C117099 = C154264 * C1148;
    const double C120264 = C154264 * C384;
    const double C120241 = C154264 * C383;
    const double C121600 = C154264 * C1147;
    const double C122121 = C154264 * C1418;
    const double C122432 = C154264 * C1560;
    const double C123419 = C154264 * C1991;
    const double C149724 = C154264 * C3151;
    const double C149964 = C154264 * C3453;
    const double C150712 = C154264 * C4266;
    const double C154417 = C154264 * C154258;
    const double C154454 = C154419 + C154264;
    const double C7183 = C154470 * C618;
    const double C7171 = C154470 * C619;
    const double C7491 = C154470 * C1148;
    const double C7809 = C154470 * C622;
    const double C30808 = C154470 * C4266;
    const double C30796 = C154470 * C1991;
    const double C30784 = C154470 * C1147;
    const double C31840 = C154470 * C1560;
    const double C31828 = C154470 * C3453;
    const double C115647 = C154271 * C618;
    const double C115635 = C154271 * C619;
    const double C115955 = C154271 * C1148;
    const double C116257 = C154271 * C622;
    const double C120260 = C154271 * C1991;
    const double C120245 = C154271 * C1147;
    const double C121596 = C154271 * C1560;
    const double C122125 = C154271 * C4266;
    const double C123423 = C154271 * C3453;
    const double C154421 = C154271 / C152085;
    const double C154418 = C154271 * C154258;
    const double C63050 = C154484 - (C154264 * C154260) / C152045;
    const double C152149 = C152147 / C152045;
    const double C152181 = C152178 / C152045;
    const double C436 = C428 - C410;
    const double C673 = C665 - C647;
    const double C1174 = C1170 - C1156;
    const double C4928 = C4926 - C4920;
    const double C206 = C200 + C176;
    const double C207 = C201 + C180;
    const double C443 = C435 + C407;
    const double C3211 = C3203 + C3163;
    const double C680 = C672 + C644;
    const double C4300 = C4296 + C4278;
    const double C442 = C434 + C403;
    const double C679 = C671 + C640;
    const double C3214 = C3206 + C3179;
    const double C4299 = C4295 + C4274;
    const double C165 =
        (4 * (2 * C152278 * C152294 + C152278 * C152304) +
         C152278 * (3 * C152304 +
                    C152278 * (2 * C152278 * C152302 +
                               C152278 * (C152302 + (C152297 * C152298 +
                                                     C152275 * bs[7] *
                                                         std::pow(C152274, 7)) *
                                                        C152044 * C152290)))) /
        C152053;
    const double C380 =
        ((yP - yQ) * (2 * C152278 * C152294 + C152278 * C152304)) / C152053;
    const double C386 =
        (C152285 + C152294 * C152290 + C152304 * std::pow(yP - yQ, 2)) /
        C152053;
    const double C617 =
        (ae *
             (2 * C152278 * C152358 + C152278 * (C152358 + C152353 * C152290)) +
         be *
             (2 * C152278 * C152359 + C152278 * (C152359 + C152354 * C152290)) +
         C152272 * (2 * C152278 * C152294 + C152278 * C152304)) /
        C152053;
    const double C623 =
        (C152285 + C152294 * C152290 + ae * (C152272 * C152379 + C152380 * be) +
         be * (C152272 * C152381 + C152380 * ae) +
         C152272 * (ae * C152379 + be * C152381 + C152272 * C152304)) /
        C152053;
    const double C1149 = (ae * C152482 * C152379 + be * C152482 * C152381 +
                          C152272 * C152482 * C152304) /
                         C152053;
    const double C152755 = C152749 + C152742;
    const double C3173 = C154181 * C1417;
    const double C19228 = C154408 * C1417;
    const double C30816 = C154481 * C1417;
    const double C51677 = C47138 * C1417;
    const double C101475 = C97273 * C1417;
    const double C120269 = C154264 * C1417;
    const double C3474 = C154181 * C1559;
    const double C7487 = C154445 * C1559;
    const double C8659 = C154470 * C1559;
    const double C16350 = C154268 * C1559;
    const double C19559 = C154408 * C1559;
    const double C47471 = C154445 * C1559;
    const double C48623 = C47139 * C1559;
    const double C58451 = C47138 * C1559;
    const double C78236 = C154481 * C1559;
    const double C98603 = C154268 * C1559;
    const double C101843 = C97273 * C1559;
    const double C115951 = C115620 * C1559;
    const double C117103 = C154271 * C1559;
    const double C120602 = C154264 * C1559;
    const double C3467 = C154181 * C1990;
    const double C7503 = C154470 * C1990;
    const double C15330 = C154268 * C1990;
    const double C20571 = C154408 * C1990;
    const double C31848 = C154481 * C1990;
    const double C47487 = C47139 * C1990;
    const double C52697 = C47138 * C1990;
    const double C97583 = C154268 * C1990;
    const double C101839 = C97273 * C1990;
    const double C115967 = C154271 * C1990;
    const double C121605 = C154264 * C1990;
    const double C4679 =
        (4 * (2 * C152482 * C152294 + C152482 * C152604) +
         C152482 * (3 * C152604 +
                    C152482 * (2 * C152482 * C152302 +
                               C152482 * (C152302 + C152314 * C152515)))) /
        C152053;
    const double C5668 =
        (ae * (3 * C152568 + C152482 * C152659) +
         be * (3 * C152570 + C152482 * C152661) +
         C152272 * (3 * C152604 +
                    C152482 * (2 * C152482 * C152302 +
                               C152482 * (C152302 + C152314 * C152515)))) /
        C152053;
    const double C152889 = C152881 + C152882;
    const double C153014 = C152272 * C153008;
    const double C153321 = 2 * C153008;
    const double C592 = (C152272 * (3 * C152379 + C152278 * C152403) +
                         (3 * C152380 + C152278 * C152399) * be) /
                        C152045;
    const double C593 = (C152272 * (3 * C152381 + C152278 * C152404) +
                         (3 * C152380 + C152278 * C152399) * ae) /
                        C152045;
    const double C608 = (2 * C152372 + C152278 * C152379 +
                         C152272 * (C152272 * C152403 + C152399 * be) +
                         C152272 * C152399 * be) /
                        C152045;
    const double C609 = (2 * C152374 + C152278 * C152381 +
                         C152272 * (C152272 * C152404 + C152399 * ae) +
                         C152272 * C152399 * ae) /
                        C152045;
    const double C1141 =
        (C152272 * C152482 * C152403 + C152482 * C152399 * be) / C152045;
    const double C1142 =
        (C152272 * C152482 * C152404 + C152482 * C152399 * ae) / C152045;
    const double C141 = 4 * (2 * C152373 + C152278 * C152380) +
                        C152278 * (3 * C152380 + C152278 * C152399);
    const double C343 = C152482 * (3 * C152380 + C152278 * C152399);
    const double C351 = 2 * C152373 + C152278 * C152380 + C152399 * C152515;
    const double C580 = C152272 * (3 * C152380 + C152278 * C152399);
    const double C588 = 2 * C152373 + C152278 * C152380 + C152399 * C152275;
    const double C1132 = C152272 * C152482 * C152399;
    const double C1400 =
        2 * C152482 * C152399 + C152482 * (C152399 + C152425 * C152515);
    const double C1973 = C152272 * (C152399 + C152425 * C152515);
    const double C2325 =
        2 * C152272 * C152399 + C152272 * (C152399 + C152425 * C152275);
    const double C3480 = C134 * C1550;
    const double C7472 = C7161 * C1550;
    const double C16355 = C15024 * C1550;
    const double C47456 = C47145 * C1550;
    const double C98608 = C97277 * C1550;
    const double C3482 = C134 * C1551;
    const double C7474 = C7161 * C1551;
    const double C16357 = C15024 * C1551;
    const double C47458 = C47145 * C1551;
    const double C98610 = C97277 * C1551;
    const double C3481 = C135 * C1543;
    const double C2334 =
        (2 * (C152272 * C152381 + C152380 * ae) +
         C152272 * (C152381 + C152272 * C152543 + C152539 * ae) +
         (C152380 + C152392 * C152275) * ae) /
        C152045;
    const double C2333 =
        (2 * (C152272 * C152379 + C152380 * be) +
         C152272 * (C152379 + C152272 * C152542 + C152539 * be) +
         (C152380 + C152392 * C152275) * be) /
        C152045;
    const double C3475 = C134 * C3447;
    const double C7504 = C7161 * C3447;
    const double C20572 = C15024 * C3447;
    const double C47488 = C47145 * C3447;
    const double C101832 = C97277 * C3447;
    const double C3477 = C134 * C3448;
    const double C7506 = C7161 * C3448;
    const double C20574 = C15024 * C3448;
    const double C47490 = C47145 * C3448;
    const double C101834 = C97277 * C3448;
    const double C4281 = C134 * C4260;
    const double C19229 = C15024 * C4260;
    const double C101468 = C97277 * C4260;
    const double C4283 = C134 * C4261;
    const double C19231 = C15024 * C4261;
    const double C101470 = C97277 * C4261;
    const double C3182 = C135 * C3140;
    const double C3476 = C135 * C3442;
    const double C4282 = C135 * C4255;
    const double C6271 =
        (2 * (C152272 * C152509 + C152508 * ae) +
         C152272 * (C152509 + C152272 * C152698 + C152694 * ae) +
         (C152508 + C152627 * C152275) * ae) /
        C152045;
    const double C6279 =
        (2 * (ae * C152507 + be * C152509 + C152272 * C152691) +
         ae * (C152507 + C152272 * C152697 + C152694 * be) +
         be * (C152509 + C152272 * C152698 + C152694 * ae) +
         C152272 * (C152691 + ae * C152697 + be * C152698 +
                    C152272 * (ae * C152625 + be * C152629 +
                               C152272 * C152482 * C152321))) /
        C152053;
    const double C6270 =
        (2 * (C152272 * C152507 + C152508 * be) +
         C152272 * (C152507 + C152272 * C152697 + C152694 * be) +
         (C152508 + C152627 * C152275) * be) /
        C152045;
    const double C152759 = C152387 + C152757;
    const double C152758 = C152383 + C152756;
    const double C152958 = C152306 + C152944;
    const double C4916 =
        (2 * C152482 * C152294 + C152482 * C152604 +
         ae * (C152272 * C152659 + C152660 * be) +
         be * (C152272 * C152661 + C152660 * ae) +
         C152272 * (ae * C152659 + be * C152661 +
                    C152272 * (2 * C152482 * C152302 +
                               C152482 * (C152302 + C152314 * C152515)))) /
        C152053;
    const double C4912 = (2 * C152511 + C152482 * C152568 +
                          C152272 * (C152272 * C152659 + C152660 * be) +
                          C152272 * C152660 * be) /
                         C152045;
    const double C4913 = (2 * C152513 + C152482 * C152570 +
                          C152272 * (C152272 * C152661 + C152660 * ae) +
                          C152272 * C152660 * ae) /
                         C152045;
    const double C5664 = (C152272 * (3 * C152568 + C152482 * C152659) +
                          (3 * C152569 + C152482 * C152660) * be) /
                         C152045;
    const double C5665 = (C152272 * (3 * C152570 + C152482 * C152661) +
                          (3 * C152569 + C152482 * C152660) * ae) /
                         C152045;
    const double C4670 = 4 * (2 * C152512 + C152482 * C152569) +
                         C152482 * (3 * C152569 + C152482 * C152660);
    const double C4907 = 2 * C152512 + C152482 * C152569 + C152660 * C152275;
    const double C5659 = C152272 * (3 * C152569 + C152482 * C152660);
    const double C29999 =
        2 * C152272 * C152660 + C152272 * (C152660 + C153057 * C152275);
    const double C6273 =
        (2 * (C152272 * C152570 + C152569 * ae) +
         C152272 * (C152570 + C152272 * C152706 + C152702 * ae) +
         (C152569 + C152653 * C152275) * ae) /
        C152045;
    const double C6280 =
        (2 * (ae * C152568 + be * C152570 + C152272 * C152604) +
         ae * (C152568 + C152272 * C152705 + C152702 * be) +
         be * (C152570 + C152272 * C152706 + C152702 * ae) +
         C152272 * (C152604 + ae * C152705 + be * C152706 +
                    C152272 * (ae * C152651 + be * C152655 +
                               C152272 * (C152302 + C152314 * C152515)))) /
        C152053;
    const double C6272 =
        (2 * (C152272 * C152568 + C152569 * be) +
         C152272 * (C152568 + C152272 * C152705 + C152702 * be) +
         (C152569 + C152653 * C152275) * be) /
        C152045;
    const double C152898 = C152648 + C152896;
    const double C152897 = C152644 + C152895;
    const double C153293 = C152877 + C153279;
    const double C153020 = C153017 + C153006;
    const double C10597 = 4 * (2 * C152555 + C152272 * C152729) +
                          C152272 * (3 * C152729 + C152272 * C153016);
    const double C153019 = C153015 + C153003;
    const double C153350 = C153342 + C153325;
    const double C7804 = C7161 * C2336;
    const double C15607 = C15024 * C2336;
    const double C47772 = C47145 * C2336;
    const double C97860 = C97277 * C2336;
    const double C21397 = C15024 * C6275;
    const double C31835 = C7161 * C6275;
    const double C52684 = C47145 * C6275;
    const double C103697 = C97277 * C6275;
    const double C152738 = C152736 + C152731;
    const double C196 = C181 - C182;
    const double C425 = C396 - C397;
    const double C429 = C412 - C413;
    const double C662 = C633 - C634;
    const double C666 = C649 - C650;
    const double C1171 = C1158 - C1159;
    const double C3196 = C3164 - C3165;
    const double C3488 = C3458 - C3459;
    const double C3490 = C3471 - C3472;
    const double C7821 = C154470 * C2342;
    const double C7805 = C154445 * C2342;
    const double C15608 = C154268 * C2342;
    const double C47789 = C47139 * C2342;
    const double C47773 = C154445 * C2342;
    const double C63078 = C154422 * C2342;
    const double C97861 = C154268 * C2342;
    const double C106597 = C154422 * C2342;
    const double C116269 = C154271 * C2342;
    const double C116253 = C115620 * C2342;
    const double C7802 = C7161 * C2335;
    const double C15605 = C15024 * C2335;
    const double C47770 = C47145 * C2335;
    const double C97858 = C97277 * C2335;
    const double C3205 = C3197 - C3172;
    const double C3495 = C3489 - C3466;
    const double C4685 = C4681 - C4682;
    const double C4927 = C4922 - C4923;
    const double C5674 = C5670 - C5671;
    const double C21398 = C154268 * C6281;
    const double C31836 = C154445 * C6281;
    const double C32500 = C154470 * C6281;
    const double C52685 = C154445 * C6281;
    const double C53345 = C47139 * C6281;
    const double C67044 = C154422 * C6281;
    const double C103698 = C154268 * C6281;
    const double C121592 = C115620 * C6281;
    const double C122436 = C154271 * C6281;
    const double C134285 = C154422 * C6281;
    const double C21395 = C15024 * C6274;
    const double C31833 = C7161 * C6274;
    const double C52682 = C47145 * C6274;
    const double C103695 = C97277 * C6274;
    const double C152737 = C152735 + C152728;
    const double C153007 = C153000 + C152987;
    const double C152317 = C152278 * C152316;
    const double C152320 = 3 * C152316;
    const double C152674 = C152482 * C152316;
    const double C152765 = C152272 * C152316;
    const double C1416 =
        (2 * C152482 * C152304 +
         C152482 * (C152304 + C152316 * std::pow(C152482, 2))) /
        C152053;
    const double C1558 =
        (C152482 * C152304 + ae * (C152272 * C152503 + C152504 * be) +
         be * (C152272 * C152505 + C152504 * ae) +
         C152272 *
             (ae * C152503 + be * C152505 + C152272 * C152482 * C152316)) /
        C152053;
    const double C1989 = (ae * (C152379 + C152398 * C152515) +
                          be * (C152381 + C152400 * C152515) +
                          C152272 * (C152304 + C152316 * C152515)) /
                         C152053;
    const double C2341 =
        (2 * (ae * C152379 + be * C152381 + C152272 * C152304) +
         ae * (C152379 + C152272 * C152542 + C152539 * be) +
         be * (C152381 + C152272 * C152543 + C152539 * ae) +
         C152272 *
             (C152304 + ae * C152542 + be * C152543 +
              C152272 * (ae * C152398 + be * C152400 + C152272 * C152316))) /
        C152053;
    const double C152601 = C152306 + C152600;
    const double C152855 = C152272 * C152850;
    const double C153034 = 2 * C152850;
    const double C152966 = C152959 + C152948;
    const double C3184 = C154181 * C3152;
    const double C38635 = C154408 * C3152;
    const double C101489 = C97273 * C3152;
    const double C3478 = C154181 * C3454;
    const double C7507 = C154445 * C3454;
    const double C20575 = C154268 * C3454;
    const double C31852 = C154470 * C3454;
    const double C38939 = C154408 * C3454;
    const double C47491 = C154445 * C3454;
    const double C52701 = C47139 * C3454;
    const double C101851 = C97273 * C3454;
    const double C101835 = C154268 * C3454;
    const double C115971 = C115620 * C3454;
    const double C121609 = C154271 * C3454;
    const double C4284 = C154181 * C4267;
    const double C19232 = C154268 * C4267;
    const double C30820 = C154470 * C4267;
    const double C39921 = C154408 * C4267;
    const double C51681 = C47139 * C4267;
    const double C101471 = C154268 * C4267;
    const double C102879 = C97273 * C4267;
    const double C120273 = C154271 * C4267;
    const double C153031 = C152482 * C153030;
    const double C153096 = 3 * C153030;
    const double C153162 = C152272 * C153030;
    const double C153301 = C153294 + C153283;
    const double C153357 = C152272 * C153351;
    const double C153560 = 2 * C153351;
    const double C152332 = C152278 * C152331;
    const double C152597 = C152331 * C152515;
    const double C152823 = C152482 * C152331;
    const double C152906 = C152272 * C152331;
    const double C3153 = (3 * (C152304 + C152316 * C152515) +
                          C152482 * (2 * C152482 * C152316 +
                                     C152482 * (C152316 + C152331 * C152515))) /
                         C152053;
    const double C153037 = C152321 + C153036;
    const double C153413 = C153405 + C153390;
    const double C153458 = C152272 * C153449;
    const double C153101 = C152482 * C153100;
    const double C153241 = C152272 * C153100;
    const double C153520 = C153510 + C153511;
    const double C153601 = C152272 * C153595;
    const double C152464 = C152278 * C152461;
    const double C152587 = C152461 * C152515;
    const double C152794 = C152461 * ae;
    const double C152792 = C152461 * C152275;
    const double C152791 = C152272 * C152461;
    const double C152790 = C152461 * be;
    const double C152811 = C152482 * C152461;
    const double C152619 = C152482 * C152615;
    const double C152670 = C152615 * ae;
    const double C152668 = C152272 * C152615;
    const double C152667 = C152615 * be;
    const double C6258 =
        2 * C152272 * C152583 + C152272 * (C152583 + C152615 * C152275);
    const double C152839 = C152833 + C152834;
    const double C152838 = C152608 + C152832;
    const double C152840 = C152831 * ae;
    const double C152837 = C152831 * be;
    const double C152836 = C152829 + C152830;
    const double C152928 = C152272 * C152921;
    const double C152929 = C152920 * ae;
    const double C152927 = C152272 * C152920;
    const double C152926 = C152920 * be;
    const double C152925 = C152272 * C152918;
    const double C153085 = C153070 + C153082;
    const double C153196 = C153190 + C153191;
    const double C153195 = C152634 + C153189;
    const double C153197 = C153188 * ae;
    const double C153194 = C153188 * be;
    const double C153193 = C153186 + C153187;
    const double C153422 = C152449 + C153417;
    const double C153421 = C153397 + C153416;
    const double C153420 = C152441 + C153414;
    const double C153476 = C152272 * C153470;
    const double C153477 = C153469 * ae;
    const double C153475 = C152272 * C153469;
    const double C153474 = C153469 * be;
    const double C153473 = C152272 * C153467;
    const double C153131 = C152482 * C153128;
    const double C153222 = C153128 * ae;
    const double C153220 = C153128 * C152275;
    const double C153219 = C152272 * C153128;
    const double C153218 = C153128 * be;
    const double C153263 = C152272 * C153256;
    const double C153264 = C153255 * ae;
    const double C153262 = C152272 * C153255;
    const double C153261 = C153255 * be;
    const double C153260 = C152272 * C153253;
    const double C153535 = C153116 + C153530;
    const double C153534 = C153503 + C153529;
    const double C153533 = C153108 + C153527;
    const double C153609 = C153604 + C153591;
    const double C153610 = C153603 * ae;
    const double C153608 = C152272 * C153603;
    const double C153607 = C153603 * be;
    const double C153606 = C153602 + C153588;
    const double C152434 = C152278 * C152432;
    const double C152447 = 4 * C152432;
    const double C152501 = C152482 * C152432;
    const double C152532 = C152272 * C152432;
    const double C152787 = be * C152432;
    const double C1407 =
        (2 * C152482 * C152404 + C152482 * (C152404 + C152432 * C152515)) /
        C152045;
    const double C1980 = (C152272 * (C152404 + C152432 * C152515) +
                          (C152399 + C152425 * C152515) * ae) /
                         C152045;
    const double C3148 = (3 * (C152381 + C152400 * C152515) +
                          C152482 * (2 * C152505 + C152482 * C152584)) /
                         C152045;
    const double C3450 = (C152381 + C152400 * C152515 +
                          C152272 * (C152272 * C152584 + C152583 * ae) +
                          C152272 * C152583 * ae) /
                         C152045;
    const double C4263 = (C152272 * (2 * C152505 + C152482 * C152584) +
                          (2 * C152504 + C152482 * C152583) * ae) /
                         C152045;
    const double C152681 = C152678 + C152679;
    const double C152780 = C152272 * C152776;
    const double C152913 = 2 * C152776;
    const double C152903 = be * C152776;
    const double C152642 = C152635 + C152639;
    const double C152689 = C152686 + C152687;
    const double C152869 = C152272 * C152866;
    const double C153454 = 2 * C152866;
    const double C153446 = be * C152866;
    const double C152975 = C152413 + C152970;
    const double C153061 = C152482 * C153058;
    const double C153114 = 4 * C153058;
    const double C153155 = C152272 * C153058;
    const double C153215 = be * C153058;
    const double C153177 = C152272 * C153173;
    const double C153248 = 2 * C153173;
    const double C153238 = be * C153173;
    const double C153310 = C152880 + C153305;
    const double C153365 = C153360 + C153348;
    const double C152433 = C152278 * C152430;
    const double C152439 = 4 * C152430;
    const double C152499 = C152482 * C152430;
    const double C152529 = C152272 * C152430;
    const double C152786 = ae * C152430;
    const double C1406 =
        (2 * C152482 * C152403 + C152482 * (C152403 + C152430 * C152515)) /
        C152045;
    const double C1979 = (C152272 * (C152403 + C152430 * C152515) +
                          (C152399 + C152425 * C152515) * be) /
                         C152045;
    const double C3455 =
        (C152304 + C152316 * C152515 + ae * (C152272 * C152582 + C152583 * be) +
         be * (C152272 * C152584 + C152583 * ae) +
         C152272 * (ae * C152582 + be * C152584 +
                    C152272 * (C152316 + C152331 * C152515))) /
        C152053;
    const double C4268 = (ae * (2 * C152503 + C152482 * C152582) +
                          be * (2 * C152505 + C152482 * C152584) +
                          C152272 * (2 * C152482 * C152316 +
                                     C152482 * (C152316 + C152331 * C152515))) /
                         C152053;
    const double C3147 = (3 * (C152379 + C152398 * C152515) +
                          C152482 * (2 * C152503 + C152482 * C152582)) /
                         C152045;
    const double C3449 = (C152379 + C152398 * C152515 +
                          C152272 * (C152272 * C152582 + C152583 * be) +
                          C152272 * C152583 * be) /
                         C152045;
    const double C4262 = (C152272 * (2 * C152503 + C152482 * C152582) +
                          (2 * C152504 + C152482 * C152583) * be) /
                         C152045;
    const double C152680 = C152675 + C152676;
    const double C152827 = C152821 + C152822;
    const double C152779 = C152272 * C152773;
    const double C152907 = 2 * C152773;
    const double C152902 = ae * C152773;
    const double C152640 = C152631 + C152637;
    const double C152688 = C152683 + C152684;
    const double C153192 = C153183 + C153184;
    const double C152868 = C152272 * C152863;
    const double C153450 = 2 * C152863;
    const double C153445 = ae * C152863;
    const double C152973 = C152407 + C152967;
    const double C153404 = C152321 + C153386;
    const double C153059 = C152482 * C153056;
    const double C153106 = 4 * C153056;
    const double C153152 = C152272 * C153056;
    const double C153214 = ae * C153056;
    const double C153176 = C152272 * C153170;
    const double C153242 = 2 * C153170;
    const double C153237 = ae * C153170;
    const double C153308 = C152878 + C153302;
    const double C153509 = C153097 + C153494;
    const double C153362 = C153358 + C153345;
    const double C153594 = C153585 + C153564;
    const double C152431 = C152409 + C152428;
    const double C1542 = C152482 * C152399 + C152500 * C152275;
    const double C3187 = C135 * C3141;
    const double C3485 = C135 * C3443;
    const double C4288 = C135 * C4256;
    const double C4669 = 4 * (2 * C152508 + C152482 * C152576) +
                         C152482 * (3 * C152576 + C152482 * C152641);
    const double C4906 = 2 * C152508 + C152482 * C152576 + C152641 * C152275;
    const double C5658 = C152272 * (3 * C152576 + C152482 * C152641);
    const double C10596 = 4 * (2 * C152547 + C152272 * C152752) +
                          C152272 * (3 * C152752 + C152272 * C152974);
    const double C153063 = C153044 + C153060;
    const double C33866 = 4 * (2 * C152711 + C152272 * C152892) +
                          C152272 * (3 * C152892 + C152272 * C153309);
    const double C153369 = C153336 + C153364;
    const double C187 = C134 * C155;
    const double C394 = C134 * C356;
    const double C418 = C134 * C372;
    const double C28331 = C134 * C4676;
    const double C185 = C134 * C154;
    const double C392 = C134 * C355;
    const double C416 = C134 * C371;
    const double C28329 = C134 * C4675;
    const double C152474 = C152448 + C152471;
    const double C152591 = C152432 + C152588;
    const double C152816 = C152272 * C152812;
    const double C152623 = C152616 + C152620;
    const double C153089 = C152482 * C153086;
    const double C153209 = C152272 * C153086;
    const double C153135 = C153115 + C153132;
    const double C152472 = C152440 + C152469;
    const double C152589 = C152430 + C152586;
    const double C152813 = C152272 * C152810;
    const double C152621 = C152612 + C152618;
    const double C153087 = C152482 * C153084;
    const double C153206 = C152272 * C153084;
    const double C153133 = C153107 + C153130;
    const double C154372 = C154016 * C154006;
    const double C154428 = C154377 + C154016;
    const double C154380 = C154024 / C152085;
    const double C154376 = C154024 * C154006;
    const double C11465 = C154478 - (C154016 * C154007) / C152045;
    const double C130 =
        (C154461 * C154042) / C154039 + (C154384 - C154432) / C154041;
    const double C131 =
        (C154462 * C154042) / C154039 + (2 * C154053 + C154461) / C154041;
    const double C132 = (C154042 * C154053) / C154056 + C154462 / C154041;
    const double C1394 =
        (C154463 * C154113) / C154039 + (C154392 - C154434) / C154041;
    const double C1395 =
        (C154464 * C154113) / C154039 + (2 * C154118 + C154463) / C154041;
    const double C1396 = (C154113 * C154118) / C154056 + C154464 / C154041;
    const double C2320 =
        (C154465 * C154141) / C154039 + (C154393 - C154437) / C154041;
    const double C2321 =
        (C154466 * C154141) / C154039 + (2 * C154146 + C154465) / C154041;
    const double C2322 = (C154141 * C154146) / C154056 + C154466 / C154041;
    const double C154410 = C154222 * C154216;
    const double C154449 = C154412 + C154222;
    const double C154414 = C154229 / C152085;
    const double C154411 = C154229 * C154216;
    const double C34729 = C154482 - (C154222 * C154218) / C152045;
    const double C152064 = C152063 * C152060;
    const double C152110 = C152063 * ae;
    const double C7159 =
        ((C152063 * ae) / C152045 - C152052 / C152055) / (2 * C152045) +
        ((C152043 * ((0 * ae) / C152045 - C152056 / C152053) + C154268) * ae) /
            C152045;
    const double C15022 = (C152063 * ae) / C152045 - C152052 / C152055;
    const double C47141 =
        ((-(0 * be) / C152045) / C152085 -
         ((0 - (C152043 * C152052) / C152045) * be) / C152045) /
            C152085 -
        ((C152043 *
              ((-C152052 / C152045) / C152085 - (C152063 * be) / C152045) +
          C97273) *
         be) /
            C152045 +
        (-C152059 / C152045) / C152085 - (0 * be) / C152045;
    const double C47143 =
        ((-C152052 / C152045) / C152085 - (C152063 * be) / C152045) / C152085 -
        ((C152043 * ((-C152059 / C152045) / C152085 - (0 * be) / C152045) +
          C154268) *
         be) /
            C152045;
    const double C97275 = (-C152108) / C152085 - (C152063 * be) / C152045;
    const double C152136 = C152132 * be;
    const double C115650 = C152193 * C607;
    const double C115648 = C152193 * C606;
    const double C115638 = C152193 * C605;
    const double C115636 = C152193 * C604;
    const double C115970 = C152193 * C3448;
    const double C115968 = C152193 * C3447;
    const double C115950 = C152193 * C1553;
    const double C115948 = C152193 * C1552;
    const double C115938 = C152193 * C1551;
    const double C115936 = C152193 * C1550;
    const double C116252 = C152193 * C2336;
    const double C116250 = C152193 * C2335;
    const double C120255 = C152193 * C3446;
    const double C120253 = C152193 * C3445;
    const double C120248 = C152193 * C1555;
    const double C120246 = C152193 * C1554;
    const double C121591 = C152193 * C6275;
    const double C121589 = C152193 * C6274;
    const double C152197 = 2 * C152193;
    const double C55531 =
        (C152193 / C152085 + (0 * ae) / C152045) / C152085 - (0 * be) / C152045;
    const double C63060 = C152193 / C152085 - (0 * be) / C152045;
    const double C106579 = C152193 / C152085 + (0 * ae) / C152045;
    const double C211 = C205 * C154164;
    const double C2906 = C205 * C154480;
    const double C11470 = C205 * C154406;
    const double C24277 = C205 * C24270;
    const double C70501 = C205 * C70494;
    const double C82858 = C205 * C154222;
    const double C154451 = C154417 / C152045;
    const double C154475 = C154454 / C152085;
    const double C154476 = C154455 + C154421;
    const double C63052 = C154421 - C154269 / C152055;
    const double C154453 = C154418 / C152045;
    const double C63098 = C63050 * C163;
    const double C63094 = C63050 * C162;
    const double C63066 = C63050 * C161;
    const double C63360 = C63050 * C385;
    const double C63356 = C63050 * C382;
    const double C63610 = C63050 * C622;
    const double C63606 = C63050 * C619;
    const double C63844 = C63050 * C381;
    const double C64066 = C63050 * C618;
    const double C64352 = C63050 * C1148;
    const double C67060 = C63050 * C384;
    const double C67032 = C63050 * C383;
    const double C67940 = C63050 * C1147;
    const double C68280 = C63050 * C1418;
    const double C68502 = C63050 * C1560;
    const double C69176 = C63050 * C1991;
    const double C152150 = C152146 - C152149;
    const double C152183 = C152167 - C152181;
    const double C444 = C436 + C411;
    const double C681 = C673 + C648;
    const double C1178 = C1174 + C1157;
    const double C4930 = C4928 + C4921;
    const double C212 = C206 * C154164;
    const double C2909 = C206 * C154480;
    const double C11472 = C206 * C154406;
    const double C24280 = C206 * C24270;
    const double C70503 = C206 * C70494;
    const double C82861 = C206 * C154222;
    const double C213 = C207 * C154164;
    const double C2914 = C207 * C154480;
    const double C11474 = C207 * C154406;
    const double C24285 = C207 * C24270;
    const double C70505 = C207 * C70494;
    const double C82866 = C207 * C154222;
    const double C451 = C443 * C154164;
    const double C2907 = C443 * C154468;
    const double C3175 = C443 * C154480;
    const double C11471 = C443 * C154226;
    const double C11683 = C443 * C154406;
    const double C24278 = C443 * C24271;
    const double C24516 = C443 * C24270;
    const double C70502 = C443 * C154226;
    const double C70714 = C443 * C70494;
    const double C82859 = C443 * C154229;
    const double C83097 = C443 * C154222;
    const double C688 = C680 * C154164;
    const double C3469 = C680 * C154480;
    const double C11889 = C680 * C154406;
    const double C24746 = C680 * C24270;
    const double C70920 = C680 * C70494;
    const double C83327 = C680 * C154222;
    const double C450 = C442 * C154164;
    const double C2910 = C442 * C154468;
    const double C3169 = C442 * C154480;
    const double C11473 = C442 * C154226;
    const double C11681 = C442 * C154406;
    const double C24281 = C442 * C24271;
    const double C24513 = C442 * C24270;
    const double C70504 = C442 * C154226;
    const double C70712 = C442 * C70494;
    const double C82862 = C442 * C154229;
    const double C83094 = C442 * C154222;
    const double C687 = C679 * C154164;
    const double C3463 = C679 * C154480;
    const double C11887 = C679 * C154406;
    const double C24743 = C679 * C24270;
    const double C70918 = C679 * C70494;
    const double C83324 = C679 * C154222;
    const double C188 = C154181 * C165;
    const double C15062 = C154408 * C165;
    const double C97315 = C97273 * C165;
    const double C399 = C154181 * C380;
    const double C8096 = C154481 * C380;
    const double C15306 = C154408 * C380;
    const double C48064 = C47138 * C380;
    const double C97559 = C97273 * C380;
    const double C116544 = C154264 * C380;
    const double C415 = C154181 * C386;
    const double C7511 = C154481 * C386;
    const double C15334 = C154408 * C386;
    const double C47495 = C47138 * C386;
    const double C97587 = C97273 * C386;
    const double C115975 = C154264 * C386;
    const double C636 = C154181 * C617;
    const double C7195 = C154470 * C617;
    const double C8338 = C154481 * C617;
    const double C15050 = C154268 * C617;
    const double C15584 = C154408 * C617;
    const double C47179 = C47139 * C617;
    const double C48306 = C47138 * C617;
    const double C97303 = C154268 * C617;
    const double C97837 = C97273 * C617;
    const double C115659 = C154271 * C617;
    const double C116786 = C154264 * C617;
    const double C652 = C154181 * C623;
    const double C7187 = C154445 * C623;
    const double C7829 = C154481 * C623;
    const double C7797 = C154470 * C623;
    const double C15612 = C154408 * C623;
    const double C15588 = C154268 * C623;
    const double C47171 = C154445 * C623;
    const double C47797 = C47138 * C623;
    const double C47765 = C47139 * C623;
    const double C97865 = C97273 * C623;
    const double C97841 = C154268 * C623;
    const double C115651 = C115620 * C623;
    const double C116277 = C154264 * C623;
    const double C116245 = C154271 * C623;
    const double C1161 = C154181 * C1149;
    const double C7479 = C154470 * C1149;
    const double C8667 = C154481 * C1149;
    const double C15310 = C154268 * C1149;
    const double C16354 = C154408 * C1149;
    const double C47463 = C47139 * C1149;
    const double C48631 = C47138 * C1149;
    const double C97563 = C154268 * C1149;
    const double C98607 = C97273 * C1149;
    const double C115943 = C154271 * C1149;
    const double C117111 = C154264 * C1149;
    const double C28332 = C154181 * C4679;
    const double C44949 = C154408 * C4679;
    const double C131902 = C97273 * C4679;
    const double C28890 = C154181 * C5668;
    const double C32256 = C154470 * C5668;
    const double C40424 = C154268 * C5668;
    const double C45818 = C154408 * C5668;
    const double C53105 = C47139 * C5668;
    const double C103394 = C154268 * C5668;
    const double C132771 = C97273 * C5668;
    const double C149728 = C154271 * C5668;
    const double C629 = C134 * C592;
    const double C15051 = C15024 * C592;
    const double C97304 = C97277 * C592;
    const double C631 = C134 * C593;
    const double C15053 = C15024 * C593;
    const double C97306 = C97277 * C593;
    const double C653 = C134 * C608;
    const double C7188 = C7161 * C608;
    const double C15577 = C15024 * C608;
    const double C47172 = C47145 * C608;
    const double C97830 = C97277 * C608;
    const double C115652 = C152193 * C608;
    const double C655 = C134 * C609;
    const double C7190 = C7161 * C609;
    const double C15579 = C15024 * C609;
    const double C47174 = C47145 * C609;
    const double C97832 = C97277 * C609;
    const double C115654 = C152193 * C609;
    const double C1162 = C134 * C1141;
    const double C15299 = C15024 * C1141;
    const double C97552 = C97277 * C1141;
    const double C1164 = C134 * C1142;
    const double C15301 = C15024 * C1142;
    const double C97554 = C97277 * C1142;
    const double C186 = C135 * C141;
    const double C393 = C135 * C343;
    const double C417 = C135 * C351;
    const double C630 = C135 * C580;
    const double C654 = C135 * C588;
    const double C1163 = C135 * C1132;
    const double C3191 = C135 * C1400;
    const double C3957 = C135 * C1973;
    const double C3492 = C3480 - C3481;
    const double C7792 = C7161 * C2334;
    const double C15615 = C15024 * C2334;
    const double C47760 = C47145 * C2334;
    const double C97868 = C97277 * C2334;
    const double C116240 = C152193 * C2334;
    const double C7790 = C7161 * C2333;
    const double C15613 = C15024 * C2333;
    const double C47758 = C47145 * C2333;
    const double C97866 = C97277 * C2333;
    const double C116238 = C152193 * C2333;
    const double C3199 = C3181 - C3182;
    const double C3491 = C3475 - C3476;
    const double C4293 = C4281 - C4282;
    const double C8662 = C7161 * C6271;
    const double C19562 = C15024 * C6271;
    const double C48626 = C47145 * C6271;
    const double C101846 = C97277 * C6271;
    const double C117106 = C152193 * C6271;
    const double C8663 = C154445 * C6279;
    const double C19563 = C154268 * C6279;
    const double C48627 = C154445 * C6279;
    const double C58455 = C47139 * C6279;
    const double C63344 = C154422 * C6279;
    const double C78240 = C154470 * C6279;
    const double C101847 = C154268 * C6279;
    const double C106863 = C154422 * C6279;
    const double C117107 = C115620 * C6279;
    const double C120606 = C154271 * C6279;
    const double C8660 = C7161 * C6270;
    const double C19560 = C15024 * C6270;
    const double C48624 = C47145 * C6270;
    const double C101844 = C97277 * C6270;
    const double C117104 = C152193 * C6270;
    const double C152761 = C152759 + C152754;
    const double C152760 = C152758 + C152751;
    const double C152965 = C152958 + C152945;
    const double C29245 = C154181 * C4916;
    const double C30804 = C154445 * C4916;
    const double C33269 = C154470 * C4916;
    const double C41709 = C154268 * C4916;
    const double C45157 = C154408 * C4916;
    const double C51665 = C154445 * C4916;
    const double C54114 = C47139 * C4916;
    const double C104693 = C154268 * C4916;
    const double C122129 = C115620 * C4916;
    const double C132110 = C97273 * C4916;
    const double C150716 = C154271 * C4916;
    const double C29242 = C134 * C4912;
    const double C30801 = C7161 * C4912;
    const double C41706 = C15024 * C4912;
    const double C51662 = C47145 * C4912;
    const double C104690 = C97277 * C4912;
    const double C122126 = C152193 * C4912;
    const double C29244 = C134 * C4913;
    const double C30803 = C7161 * C4913;
    const double C41708 = C15024 * C4913;
    const double C51664 = C47145 * C4913;
    const double C104692 = C97277 * C4913;
    const double C122128 = C152193 * C4913;
    const double C28887 = C134 * C5664;
    const double C40421 = C15024 * C5664;
    const double C103391 = C97277 * C5664;
    const double C28889 = C134 * C5665;
    const double C40423 = C15024 * C5665;
    const double C103393 = C97277 * C5665;
    const double C28330 = C135 * C4670;
    const double C29243 = C135 * C4907;
    const double C28888 = C135 * C5659;
    const double C31823 = C7161 * C6273;
    const double C40727 = C15024 * C6273;
    const double C52672 = C47145 * C6273;
    const double C103705 = C97277 * C6273;
    const double C123426 = C152193 * C6273;
    const double C31824 = C154445 * C6280;
    const double C32512 = C154470 * C6280;
    const double C40728 = C154268 * C6280;
    const double C52673 = C154445 * C6280;
    const double C53357 = C47139 * C6280;
    const double C67048 = C154422 * C6280;
    const double C103706 = C154268 * C6280;
    const double C123427 = C115620 * C6280;
    const double C134289 = C154422 * C6280;
    const double C149968 = C154271 * C6280;
    const double C31821 = C7161 * C6272;
    const double C40725 = C15024 * C6272;
    const double C52670 = C47145 * C6272;
    const double C103703 = C97277 * C6272;
    const double C123424 = C152193 * C6272;
    const double C152900 = C152898 + C152894;
    const double C152899 = C152897 + C152891;
    const double C153300 = C153293 + C153280;
    const double C153022 = C152272 * C153020;
    const double C153337 = 3 * C153020;
    const double C153323 = be * C153020;
    const double C153021 = C152272 * C153019;
    const double C153329 = 3 * C153019;
    const double C153322 = ae * C153019;
    const double C7778 =
        (3 * (C152370 + C152272 * C152559 + C152555 * ae) +
         C152272 * (2 * C152559 + C152272 * C152738 + C152729 * ae) +
         (2 * C152555 + C152272 * C152729) * ae) /
        C152045;
    const double C202 = C196 - C183;
    const double C433 = C425 - C398;
    const double C437 = C429 - C414;
    const double C670 = C662 - C635;
    const double C674 = C666 - C651;
    const double C1175 = C1171 - C1160;
    const double C3204 = C3196 - C3166;
    const double C3494 = C3488 - C3460;
    const double C3496 = C3490 - C3473;
    const double C3213 = C3205 + C3173;
    const double C3501 = C3495 + C3467;
    const double C4686 = C4685 - C4683;
    const double C4929 = C4927 - C4924;
    const double C5675 = C5674 - C5672;
    const double C7785 =
        (3 * (C152285 + ae * C152558 + be * C152559 + C152272 * C152732) +
         ae * (2 * C152558 + C152272 * C152737 + C152729 * be) +
         be * (2 * C152559 + C152272 * C152738 + C152729 * ae) +
         C152272 * (2 * C152732 + ae * C152737 + be * C152738 +
                    C152272 * (C152294 + ae * C152727 + be * C152730 +
                               C152272 * (ae * C152353 + be * C152354 +
                                          C152272 * C152302)))) /
        C152053;
    const double C7777 =
        (3 * (C152369 + C152272 * C152558 + C152555 * be) +
         C152272 * (2 * C152558 + C152272 * C152737 + C152729 * be) +
         (2 * C152555 + C152272 * C152729) * be) /
        C152045;
    const double C153018 = C153007 + C153014;
    const double C152318 = C152310 + C152317;
    const double C152778 = C152772 + C152765;
    const double C3167 = C154181 * C1416;
    const double C19237 = C154408 * C1416;
    const double C101497 = C97273 * C1416;
    const double C3483 = C154181 * C1558;
    const double C7475 = C154445 * C1558;
    const double C8671 = C154470 * C1558;
    const double C16358 = C154268 * C1558;
    const double C19567 = C154408 * C1558;
    const double C47459 = C154445 * C1558;
    const double C48635 = C47139 * C1558;
    const double C98611 = C154268 * C1558;
    const double C111007 = C97273 * C1558;
    const double C115939 = C115620 * C1558;
    const double C117115 = C154271 * C1558;
    const double C3461 = C154181 * C1989;
    const double C7515 = C154470 * C1989;
    const double C15338 = C154268 * C1989;
    const double C20580 = C154408 * C1989;
    const double C47499 = C47139 * C1989;
    const double C97591 = C154268 * C1989;
    const double C102459 = C97273 * C1989;
    const double C115979 = C154271 * C1989;
    const double C7833 = C154470 * C2341;
    const double C7793 = C154445 * C2341;
    const double C15616 = C154268 * C2341;
    const double C47801 = C47139 * C2341;
    const double C47761 = C154445 * C2341;
    const double C63082 = C154422 * C2341;
    const double C97869 = C154268 * C2341;
    const double C106601 = C154422 * C2341;
    const double C116281 = C154271 * C2341;
    const double C116241 = C115620 * C2341;
    const double C4678 =
        (4 * (2 * C152482 * C152306 + C152482 * C152601) +
         C152482 *
             (3 * C152601 +
              C152482 * (2 * C152482 * C152321 +
                         C152482 * (C152321 + C152278 * C152329 * C152515)))) /
        C152053;
    const double C152862 = C152854 + C152855;
    const double C152972 = C152272 * C152966;
    const double C153383 = 2 * C152966;
    const double C153032 = C153028 + C153031;
    const double C153175 = C153169 + C153162;
    const double C153307 = C152272 * C153301;
    const double C153491 = 2 * C153301;
    const double C153361 = C153350 + C153357;
    const double C152333 = C152325 + C152332;
    const double C152598 = C152316 + C152597;
    const double C152828 = C152272 * C152823;
    const double C152924 = C152917 + C152906;
    const double C3189 = C154181 * C3153;
    const double C153038 = C152482 * C153037;
    const double C153185 = C152272 * C153037;
    const double C153419 = C152272 * C153413;
    const double C153466 = C153457 + C153458;
    const double C153102 = C153099 + C153101;
    const double C153259 = C153252 + C153241;
    const double C153526 = C152272 * C153520;
    const double C152467 = C152444 + C152464;
    const double C152590 = C152425 + C152587;
    const double C152799 = C152793 + C152794;
    const double C152798 = C152425 + C152792;
    const double C152800 = C152791 * ae;
    const double C152797 = C152791 * be;
    const double C152796 = C152789 + C152790;
    const double C152817 = C152811 * ae;
    const double C152815 = C152272 * C152811;
    const double C152814 = C152811 * be;
    const double C8647 =
        2 * C152272 * C152500 + C152272 * (C152500 + C152811 * C152275);
    const double C152622 = C152614 + C152619;
    const double C152672 = C152669 + C152670;
    const double C152671 = C152666 + C152667;
    const double C152842 = C152272 * C152839;
    const double C9275 = 3 * (C152504 + C152608 * C152275) +
                         C152272 * (2 * C152677 + C152272 * C152838);
    const double C152841 = C152272 * C152836;
    const double C152933 = C152426 + C152928;
    const double C152932 = C152912 + C152927;
    const double C152931 = C152424 + C152925;
    const double C153088 = C152482 * C153085;
    const double C153210 = C153085 * ae;
    const double C153208 = C152272 * C153085;
    const double C153207 = C153085 * be;
    const double C31816 =
        2 * C152272 * C152641 + C152272 * (C152641 + C153085 * C152275);
    const double C153200 = C152272 * C153196;
    const double C31083 = 3 * (C152576 + C152634 * C152275) +
                          C152272 * (2 * C152685 + C152272 * C153195);
    const double C153199 = C152272 * C153193;
    const double C153427 = C153422 + C153410;
    const double C153428 = C153421 * ae;
    const double C153426 = C152272 * C153421;
    const double C153425 = C153421 * be;
    const double C153424 = C153420 + C153407;
    const double C153481 = C152853 + C153476;
    const double C153480 = C153453 + C153475;
    const double C153479 = C152851 + C153473;
    const double C153134 = C153111 + C153131;
    const double C153227 = C153221 + C153222;
    const double C153226 = C153057 + C153220;
    const double C153228 = C153219 * ae;
    const double C153225 = C153219 * be;
    const double C153224 = C153217 + C153218;
    const double C153268 = C153052 + C153263;
    const double C153267 = C153247 + C153262;
    const double C153266 = C153050 + C153260;
    const double C153540 = C153535 + C153525;
    const double C153541 = C153534 * ae;
    const double C153539 = C152272 * C153534;
    const double C153538 = C153534 * be;
    const double C153537 = C153533 + C153522;
    const double C153614 = C152272 * C153609;
    const double C153613 = C153576 + C153608;
    const double C153612 = C152272 * C153606;
    const double C152436 = C152412 + C152434;
    const double C1549 =
        (C152482 * C152404 + C152272 * (C152272 * C152501 + C152500 * ae) +
         C152272 * C152500 * ae) /
        C152045;
    const double C152535 = C152532 + C152533;
    const double C3192 = C134 * C1407;
    const double C3958 = C134 * C1980;
    const double C15345 = C15024 * C1980;
    const double C97598 = C97277 * C1980;
    const double C3188 = C134 * C3148;
    const double C3486 = C134 * C3450;
    const double C7518 = C7161 * C3450;
    const double C20583 = C15024 * C3450;
    const double C47502 = C47145 * C3450;
    const double C102462 = C97277 * C3450;
    const double C115982 = C152193 * C3450;
    const double C4289 = C134 * C4263;
    const double C19240 = C15024 * C4263;
    const double C101500 = C97277 * C4263;
    const double C6267 =
        (2 * (C152272 * C152505 + C152504 * ae) +
         C152272 * (C152505 + C152272 * C152681 + C152677 * ae) +
         (C152504 + C152608 * C152275) * ae) /
        C152045;
    const double C152782 = C152400 + C152780;
    const double C4674 = (4 * (2 * C152509 + C152482 * C152577) +
                          C152482 * (3 * C152577 + C152482 * C152642)) /
                         C152045;
    const double C4911 = (2 * C152509 + C152482 * C152577 +
                          C152272 * (C152272 * C152642 + C152641 * ae) +
                          C152272 * C152641 * ae) /
                         C152045;
    const double C5663 = (C152272 * (3 * C152577 + C152482 * C152642) +
                          (3 * C152576 + C152482 * C152641) * ae) /
                         C152045;
    const double C6269 =
        (2 * (C152272 * C152577 + C152576 * ae) +
         C152272 * (C152577 + C152272 * C152689 + C152685 * ae) +
         (C152576 + C152634 * C152275) * ae) /
        C152045;
    const double C152871 = C152629 + C152869;
    const double C152978 = C152975 + C152964;
    const double C153064 = C153047 + C153061;
    const double C153158 = C153155 + C153156;
    const double C153179 = C152655 + C153177;
    const double C153313 = C153310 + C153299;
    const double C153370 = C152272 * C153365;
    const double C153579 = 3 * C153365;
    const double C153562 = be * C153365;
    const double C152435 = C152406 + C152433;
    const double C1548 =
        (C152482 * C152403 + C152272 * (C152272 * C152499 + C152500 * be) +
         C152272 * C152500 * be) /
        C152045;
    const double C152534 = C152529 + C152530;
    const double C152795 = C152786 + C152787;
    const double C3190 = C134 * C1406;
    const double C3956 = C134 * C1979;
    const double C15343 = C15024 * C1979;
    const double C97596 = C97277 * C1979;
    const double C3487 = C154181 * C3455;
    const double C7519 = C154445 * C3455;
    const double C20584 = C154268 * C3455;
    const double C47503 = C154445 * C3455;
    const double C102463 = C154268 * C3455;
    const double C115983 = C115620 * C3455;
    const double C4290 = C154181 * C4268;
    const double C19241 = C154268 * C4268;
    const double C101501 = C154268 * C4268;
    const double C3186 = C134 * C3147;
    const double C3484 = C134 * C3449;
    const double C7516 = C7161 * C3449;
    const double C20581 = C15024 * C3449;
    const double C47500 = C47145 * C3449;
    const double C102460 = C97277 * C3449;
    const double C115980 = C152193 * C3449;
    const double C4287 = C134 * C4262;
    const double C19238 = C15024 * C4262;
    const double C101498 = C97277 * C4262;
    const double C6277 =
        (2 * (ae * C152503 + be * C152505 + C152272 * C152674) +
         ae * (C152503 + C152272 * C152680 + C152677 * be) +
         be * (C152505 + C152272 * C152681 + C152677 * ae) +
         C152272 * (C152674 + ae * C152680 + be * C152681 +
                    C152272 * (ae * C152606 + be * C152610 +
                               C152272 * C152482 * C152331))) /
        C152053;
    const double C6266 =
        (2 * (C152272 * C152503 + C152504 * be) +
         C152272 * (C152503 + C152272 * C152680 + C152677 * be) +
         (C152504 + C152608 * C152275) * be) /
        C152045;
    const double C152781 = C152398 + C152779;
    const double C152916 = C152316 + C152902;
    const double C4915 =
        (2 * C152482 * C152306 + C152482 * C152601 +
         ae * (C152272 * C152640 + C152641 * be) +
         be * (C152272 * C152642 + C152641 * ae) +
         C152272 *
             (ae * C152640 + be * C152642 +
              C152272 * (2 * C152482 * C152321 +
                         C152482 * (C152321 + C152278 * C152329 * C152515)))) /
        C152053;
    const double C5667 =
        (ae * (3 * C152575 + C152482 * C152640) +
         be * (3 * C152577 + C152482 * C152642) +
         C152272 *
             (3 * C152601 +
              C152482 * (2 * C152482 * C152321 +
                         C152482 * (C152321 + C152278 * C152329 * C152515)))) /
        C152053;
    const double C4673 = (4 * (2 * C152507 + C152482 * C152575) +
                          C152482 * (3 * C152575 + C152482 * C152640)) /
                         C152045;
    const double C4910 = (2 * C152507 + C152482 * C152575 +
                          C152272 * (C152272 * C152640 + C152641 * be) +
                          C152272 * C152641 * be) /
                         C152045;
    const double C5662 = (C152272 * (3 * C152575 + C152482 * C152640) +
                          (3 * C152576 + C152482 * C152641) * be) /
                         C152045;
    const double C6278 =
        (2 * (ae * C152575 + be * C152577 + C152272 * C152601) +
         ae * (C152575 + C152272 * C152688 + C152685 * be) +
         be * (C152577 + C152272 * C152689 + C152685 * ae) +
         C152272 *
             (C152601 + ae * C152688 + be * C152689 +
              C152272 * (ae * C152632 + be * C152636 +
                         C152272 * (C152321 + C152278 * C152329 * C152515)))) /
        C152053;
    const double C6268 =
        (2 * (C152272 * C152575 + C152576 * be) +
         C152272 * (C152575 + C152272 * C152688 + C152685 * be) +
         (C152576 + C152634 * C152275) * be) /
        C152045;
    const double C152870 = C152625 + C152868;
    const double C153456 = C152850 + C153445;
    const double C152977 = C152973 + C152961;
    const double C153412 = C153404 + C153387;
    const double C153062 = C153041 + C153059;
    const double C153157 = C153152 + C153153;
    const double C153223 = C153214 + C153215;
    const double C153178 = C152651 + C153176;
    const double C153251 = C153030 + C153237;
    const double C153312 = C153308 + C153296;
    const double C153519 = C153509 + C153495;
    const double C153368 = C152272 * C153362;
    const double C153569 = 3 * C153362;
    const double C153561 = ae * C153362;
    const double C153605 = C153594 + C153601;
    const double C142 = 5 * (3 * C152380 + C152278 * C152399) +
                        C152278 * (4 * C152399 + C152278 * C152431);
    const double C352 = 3 * C152380 + C152278 * C152399 + C152431 * C152515;
    const double C353 = C152482 * (4 * C152399 + C152278 * C152431);
    const double C589 = 3 * C152380 + C152278 * C152399 + C152431 * C152275;
    const double C590 = C152272 * (4 * C152399 + C152278 * C152431);
    const double C1133 = C152272 * C152482 * C152431;
    const double C11896 = C135 * C1542;
    const double C28334 = C135 * C4669;
    const double C35152 = C135 * C4906;
    const double C28892 = C135 * C5658;
    const double C28320 = 5 * (3 * C152569 + C152482 * C152660) +
                          C152482 * (4 * C152660 + C152482 * C153063);
    const double C28464 = 3 * C152569 + C152482 * C152660 + C153063 * C152275;
    const double C28878 = C152272 * (4 * C152660 + C152482 * C153063);
    const double C55777 = 5 * (3 * C152729 + C152272 * C153016) +
                          C152272 * (4 * C153016 + C152272 * C153369);
    const double C152476 = C152278 * C152474;
    const double C152497 = C152482 * C152474;
    const double C152524 = C152272 * C152474;
    const double C3150 = (3 * (C152404 + C152432 * C152515) +
                          C152482 * (2 * C152501 + C152482 * C152591)) /
                         C152045;
    const double C4672 = (4 * (2 * C152505 + C152482 * C152584) +
                          C152482 * (3 * C152584 + C152482 * C152623)) /
                         C152045;
    const double C153092 = C153072 + C153089;
    const double C153138 = C152482 * C153135;
    const double C153147 = C152272 * C153135;
    const double C152475 = C152278 * C152472;
    const double C152495 = C152482 * C152472;
    const double C152521 = C152272 * C152472;
    const double C3149 = (3 * (C152403 + C152430 * C152515) +
                          C152482 * (2 * C152499 + C152482 * C152589)) /
                         C152045;
    const double C4671 = (4 * (2 * C152503 + C152482 * C152582) +
                          C152482 * (3 * C152582 + C152482 * C152621)) /
                         C152045;
    const double C153090 = C153066 + C153087;
    const double C153136 = C152482 * C153133;
    const double C153144 = C152272 * C153133;
    const double C154424 = C154372 / C152045;
    const double C154459 = C154428 / C152085;
    const double C154460 = C154430 + C154380;
    const double C11467 = C154380 - C154022 / C152055;
    const double C154427 = C154376 / C152045;
    const double C154446 = C154410 / C152045;
    const double C154472 = C154449 / C152085;
    const double C154473 = C154450 + C154414;
    const double C34731 = C154414 - C154227 / C152055;
    const double C154448 = C154411 / C152045;
    const double C34744 = C207 * C34729;
    const double C34743 = C206 * C34729;
    const double C34736 = C205 * C34729;
    const double C34945 = C443 * C34729;
    const double C35147 = C680 * C34729;
    const double C35353 = C442 * C34729;
    const double C35551 = C679 * C34729;
    const double C152069 = C152043 * C152064;
    const double C152160 = C152064 / C152055;
    const double C7158 =
        (ae * -2 * C152052) / (C152053 * 2 * C152045) +
        (((C152043 *
           ((-4 * C152056) / C152045 - (C152043 * C152064) / C152045) * ae) /
              C152045 +
          2 * ((C152063 * ae) / C152045 - C152052 / C152055)) *
         ae) /
            C152045 -
        C152064 / C152055;
    const double C7162 = (-C152064 / C152045) / (4 * C152053);
    const double C15025 = (-C152064 / C152045) / (2 * C152045);
    const double C47146 = (-C152064 / C152045) / (4 * C152053);
    const double C55532 =
        (-C152064 / C152045) / (4 * C152053 * std::pow(C152085, 2));
    const double C63061 = (-C152064 / C152045) / (4 * C152153);
    const double C97278 = (-C152064 / C152045) / C152085;
    const double C106580 = (-C152064 / C152045) / (4 * C152153);
    const double C115626 = (-C152064 / C152045) / C152196;
    const double C152118 = C152110 / C152045;
    const double C7206 = C7159 * C593;
    const double C7204 = C7159 * C592;
    const double C7194 = C7159 * C595;
    const double C7192 = C7159 * C594;
    const double C7182 = C7159 * C597;
    const double C7180 = C7159 * C596;
    const double C7170 = C7159 * C599;
    const double C7168 = C7159 * C598;
    const double C7514 = C7159 * C1982;
    const double C7512 = C7159 * C1981;
    const double C7502 = C7159 * C1984;
    const double C7500 = C7159 * C1983;
    const double C7490 = C7159 * C1138;
    const double C7488 = C7159 * C1137;
    const double C7478 = C7159 * C1140;
    const double C7476 = C7159 * C1139;
    const double C7832 = C7159 * C2334;
    const double C7830 = C7159 * C2333;
    const double C7820 = C7159 * C2336;
    const double C7818 = C7159 * C2335;
    const double C7808 = C7159 * C605;
    const double C7806 = C7159 * C604;
    const double C7796 = C7159 * C607;
    const double C7794 = C7159 * C606;
    const double C8099 = C7159 * C1142;
    const double C8097 = C7159 * C1141;
    const double C8341 = C7159 * C609;
    const double C8339 = C7159 * C608;
    const double C8670 = C7159 * C1551;
    const double C8668 = C7159 * C1550;
    const double C8658 = C7159 * C1553;
    const double C8656 = C7159 * C1552;
    const double C30819 = C7159 * C4261;
    const double C30817 = C7159 * C4260;
    const double C30807 = C7159 * C4259;
    const double C30805 = C7159 * C4258;
    const double C30795 = C7159 * C1986;
    const double C30793 = C7159 * C1985;
    const double C30783 = C7159 * C1136;
    const double C30781 = C7159 * C1135;
    const double C31851 = C7159 * C3448;
    const double C31849 = C7159 * C3447;
    const double C31839 = C7159 * C1555;
    const double C31837 = C7159 * C1554;
    const double C31827 = C7159 * C3446;
    const double C31825 = C7159 * C3445;
    const double C32255 = C7159 * C5665;
    const double C32253 = C7159 * C5664;
    const double C32511 = C7159 * C6273;
    const double C32509 = C7159 * C6272;
    const double C32499 = C7159 * C6275;
    const double C32497 = C7159 * C6274;
    const double C33268 = C7159 * C4913;
    const double C33266 = C7159 * C4912;
    const double C78239 = C7159 * C6271;
    const double C78237 = C7159 * C6270;
    const double C15061 = C15022 * C155;
    const double C15059 = C15022 * C154;
    const double C15057 = C15022 * C153;
    const double C15055 = C15022 * C152;
    const double C15045 = C15022 * C151;
    const double C15043 = C15022 * C150;
    const double C15037 = C15022 * C149;
    const double C15035 = C15022 * C148;
    const double C15029 = C15022 * C147;
    const double C15027 = C15022 * C146;
    const double C15341 = C15022 * C372;
    const double C15339 = C15022 * C371;
    const double C15333 = C15022 * C370;
    const double C15331 = C15022 * C369;
    const double C15325 = C15022 * C368;
    const double C15323 = C15022 * C367;
    const double C15321 = C15022 * C362;
    const double C15319 = C15022 * C361;
    const double C15313 = C15022 * C360;
    const double C15311 = C15022 * C359;
    const double C15305 = C15022 * C358;
    const double C15303 = C15022 * C357;
    const double C15619 = C15022 * C609;
    const double C15617 = C15022 * C608;
    const double C15611 = C15022 * C607;
    const double C15609 = C15022 * C606;
    const double C15603 = C15022 * C605;
    const double C15601 = C15022 * C604;
    const double C15599 = C15022 * C599;
    const double C15597 = C15022 * C598;
    const double C15591 = C15022 * C597;
    const double C15589 = C15022 * C596;
    const double C15583 = C15022 * C595;
    const double C15581 = C15022 * C594;
    const double C15859 = C15022 * C356;
    const double C15857 = C15022 * C355;
    const double C16071 = C15022 * C593;
    const double C16069 = C15022 * C592;
    const double C16361 = C15022 * C1142;
    const double C16359 = C15022 * C1141;
    const double C16353 = C15022 * C1140;
    const double C16351 = C15022 * C1139;
    const double C16345 = C15022 * C1138;
    const double C16343 = C15022 * C1137;
    const double C19236 = C15022 * C1409;
    const double C19234 = C15022 * C1408;
    const double C19227 = C15022 * C1411;
    const double C19225 = C15022 * C1410;
    const double C19222 = C15022 * C366;
    const double C19220 = C15022 * C365;
    const double C19206 = C15022 * C364;
    const double C19204 = C15022 * C363;
    const double C19566 = C15022 * C1551;
    const double C19564 = C15022 * C1550;
    const double C19558 = C15022 * C1553;
    const double C19556 = C15022 * C1552;
    const double C20579 = C15022 * C1982;
    const double C20577 = C15022 * C1981;
    const double C20570 = C15022 * C1984;
    const double C20568 = C15022 * C1983;
    const double C20565 = C15022 * C1136;
    const double C20563 = C15022 * C1135;
    const double C21089 = C15022 * C1413;
    const double C21087 = C15022 * C1412;
    const double C21393 = C15022 * C1555;
    const double C21391 = C15022 * C1554;
    const double C22373 = C15022 * C1986;
    const double C22371 = C15022 * C1985;
    const double C38634 = C15022 * C3146;
    const double C38632 = C15022 * C3145;
    const double C38938 = C15022 * C3448;
    const double C38936 = C15022 * C3447;
    const double C39920 = C15022 * C4261;
    const double C39918 = C15022 * C4260;
    const double C40419 = C15022 * C3144;
    const double C40417 = C15022 * C3143;
    const double C40723 = C15022 * C3446;
    const double C40721 = C15022 * C3445;
    const double C41704 = C15022 * C4259;
    const double C41702 = C15022 * C4258;
    const double C44948 = C15022 * C4676;
    const double C44946 = C15022 * C4675;
    const double C45156 = C15022 * C4913;
    const double C45154 = C15022 * C4912;
    const double C45817 = C15022 * C5665;
    const double C45815 = C15022 * C5664;
    const double C47186 = C47141 * C153;
    const double C47184 = C47141 * C152;
    const double C47182 = C47141 * C151;
    const double C47180 = C47141 * C150;
    const double C47162 = C47141 * C149;
    const double C47160 = C47141 * C148;
    const double C47150 = C47141 * C147;
    const double C47148 = C47141 * C146;
    const double C47494 = C47141 * C370;
    const double C47492 = C47141 * C369;
    const double C47482 = C47141 * C368;
    const double C47480 = C47141 * C367;
    const double C47478 = C47141 * C362;
    const double C47476 = C47141 * C361;
    const double C47466 = C47141 * C360;
    const double C47464 = C47141 * C359;
    const double C47796 = C47141 * C607;
    const double C47794 = C47141 * C606;
    const double C47784 = C47141 * C605;
    const double C47782 = C47141 * C604;
    const double C47780 = C47141 * C599;
    const double C47778 = C47141 * C598;
    const double C47768 = C47141 * C597;
    const double C47766 = C47141 * C596;
    const double C48063 = C47141 * C358;
    const double C48061 = C47141 * C357;
    const double C48305 = C47141 * C595;
    const double C48303 = C47141 * C594;
    const double C48630 = C47141 * C1140;
    const double C48628 = C47141 * C1139;
    const double C48618 = C47141 * C1138;
    const double C48616 = C47141 * C1137;
    const double C51676 = C47141 * C1411;
    const double C51674 = C47141 * C1410;
    const double C51672 = C47141 * C1413;
    const double C51670 = C47141 * C1412;
    const double C51652 = C47141 * C366;
    const double C51650 = C47141 * C365;
    const double C51640 = C47141 * C364;
    const double C51638 = C47141 * C363;
    const double C52696 = C47141 * C1984;
    const double C52694 = C47141 * C1983;
    const double C52692 = C47141 * C1136;
    const double C52690 = C47141 * C1135;
    const double C52680 = C47141 * C1986;
    const double C52678 = C47141 * C1985;
    const double C53100 = C47141 * C3144;
    const double C53098 = C47141 * C3143;
    const double C53352 = C47141 * C3446;
    const double C53350 = C47141 * C3445;
    const double C53340 = C47141 * C1555;
    const double C53338 = C47141 * C1554;
    const double C54109 = C47141 * C4259;
    const double C54107 = C47141 * C4258;
    const double C58450 = C47141 * C1553;
    const double C58448 = C47141 * C1552;
    const double C47190 = C47143 * C593;
    const double C47188 = C47143 * C592;
    const double C47178 = C47143 * C595;
    const double C47176 = C47143 * C594;
    const double C47166 = C47143 * C597;
    const double C47164 = C47143 * C596;
    const double C47154 = C47143 * C599;
    const double C47152 = C47143 * C598;
    const double C47498 = C47143 * C1982;
    const double C47496 = C47143 * C1981;
    const double C47486 = C47143 * C1984;
    const double C47484 = C47143 * C1983;
    const double C47474 = C47143 * C1138;
    const double C47472 = C47143 * C1137;
    const double C47462 = C47143 * C1140;
    const double C47460 = C47143 * C1139;
    const double C47800 = C47143 * C2334;
    const double C47798 = C47143 * C2333;
    const double C47788 = C47143 * C2336;
    const double C47786 = C47143 * C2335;
    const double C47776 = C47143 * C605;
    const double C47774 = C47143 * C604;
    const double C47764 = C47143 * C607;
    const double C47762 = C47143 * C606;
    const double C48067 = C47143 * C1142;
    const double C48065 = C47143 * C1141;
    const double C48309 = C47143 * C609;
    const double C48307 = C47143 * C608;
    const double C48634 = C47143 * C1551;
    const double C48632 = C47143 * C1550;
    const double C48622 = C47143 * C1553;
    const double C48620 = C47143 * C1552;
    const double C51680 = C47143 * C4261;
    const double C51678 = C47143 * C4260;
    const double C51668 = C47143 * C4259;
    const double C51666 = C47143 * C4258;
    const double C51656 = C47143 * C1986;
    const double C51654 = C47143 * C1985;
    const double C51644 = C47143 * C1136;
    const double C51642 = C47143 * C1135;
    const double C52700 = C47143 * C3448;
    const double C52698 = C47143 * C3447;
    const double C52688 = C47143 * C1555;
    const double C52686 = C47143 * C1554;
    const double C52676 = C47143 * C3446;
    const double C52674 = C47143 * C3445;
    const double C53104 = C47143 * C5665;
    const double C53102 = C47143 * C5664;
    const double C53356 = C47143 * C6273;
    const double C53354 = C47143 * C6272;
    const double C53344 = C47143 * C6275;
    const double C53342 = C47143 * C6274;
    const double C54113 = C47143 * C4913;
    const double C54111 = C47143 * C4912;
    const double C58454 = C47143 * C6271;
    const double C58452 = C47143 * C6270;
    const double C97314 = C97275 * C155;
    const double C97312 = C97275 * C154;
    const double C97310 = C97275 * C153;
    const double C97308 = C97275 * C152;
    const double C97298 = C97275 * C151;
    const double C97296 = C97275 * C150;
    const double C97290 = C97275 * C149;
    const double C97288 = C97275 * C148;
    const double C97282 = C97275 * C147;
    const double C97280 = C97275 * C146;
    const double C97594 = C97275 * C372;
    const double C97592 = C97275 * C371;
    const double C97586 = C97275 * C370;
    const double C97584 = C97275 * C369;
    const double C97578 = C97275 * C368;
    const double C97576 = C97275 * C367;
    const double C97574 = C97275 * C362;
    const double C97572 = C97275 * C361;
    const double C97566 = C97275 * C360;
    const double C97564 = C97275 * C359;
    const double C97558 = C97275 * C358;
    const double C97556 = C97275 * C357;
    const double C97872 = C97275 * C609;
    const double C97870 = C97275 * C608;
    const double C97864 = C97275 * C607;
    const double C97862 = C97275 * C606;
    const double C97856 = C97275 * C605;
    const double C97854 = C97275 * C604;
    const double C97852 = C97275 * C599;
    const double C97850 = C97275 * C598;
    const double C97844 = C97275 * C597;
    const double C97842 = C97275 * C596;
    const double C97836 = C97275 * C595;
    const double C97834 = C97275 * C594;
    const double C98112 = C97275 * C356;
    const double C98110 = C97275 * C355;
    const double C98324 = C97275 * C593;
    const double C98322 = C97275 * C592;
    const double C98614 = C97275 * C1142;
    const double C98612 = C97275 * C1141;
    const double C98606 = C97275 * C1140;
    const double C98604 = C97275 * C1139;
    const double C98598 = C97275 * C1138;
    const double C98596 = C97275 * C1137;
    const double C101496 = C97275 * C1409;
    const double C101494 = C97275 * C1408;
    const double C101488 = C97275 * C3146;
    const double C101486 = C97275 * C3145;
    const double C101484 = C97275 * C1413;
    const double C101482 = C97275 * C1412;
    const double C101474 = C97275 * C1411;
    const double C101472 = C97275 * C1410;
    const double C101460 = C97275 * C366;
    const double C101458 = C97275 * C365;
    const double C101452 = C97275 * C364;
    const double C101450 = C97275 * C363;
    const double C101850 = C97275 * C3448;
    const double C101848 = C97275 * C3447;
    const double C101842 = C97275 * C1553;
    const double C101840 = C97275 * C1552;
    const double C101838 = C97275 * C1984;
    const double C101836 = C97275 * C1983;
    const double C102458 = C97275 * C1982;
    const double C102456 = C97275 * C1981;
    const double C102878 = C97275 * C4261;
    const double C102876 = C97275 * C4260;
    const double C102872 = C97275 * C1136;
    const double C102870 = C97275 * C1135;
    const double C102864 = C97275 * C1986;
    const double C102862 = C97275 * C1985;
    const double C103389 = C97275 * C3144;
    const double C103387 = C97275 * C3143;
    const double C103701 = C97275 * C3446;
    const double C103699 = C97275 * C3445;
    const double C103693 = C97275 * C1555;
    const double C103691 = C97275 * C1554;
    const double C104688 = C97275 * C4259;
    const double C104686 = C97275 * C4258;
    const double C111006 = C97275 * C1551;
    const double C111004 = C97275 * C1550;
    const double C131901 = C97275 * C4676;
    const double C131899 = C97275 * C4675;
    const double C132109 = C97275 * C4913;
    const double C132107 = C97275 * C4912;
    const double C132770 = C97275 * C5665;
    const double C132768 = C97275 * C5664;
    const double C152141 = C152136 / C152045;
    const double C63081 = C63060 * C2334;
    const double C63079 = C63060 * C2333;
    const double C63077 = C63060 * C2336;
    const double C63075 = C63060 * C2335;
    const double C63343 = C63060 * C6271;
    const double C63341 = C63060 * C6270;
    const double C67047 = C63060 * C6273;
    const double C67045 = C63060 * C6272;
    const double C67043 = C63060 * C6275;
    const double C67041 = C63060 * C6274;
    const double C106600 = C106579 * C2334;
    const double C106598 = C106579 * C2333;
    const double C106596 = C106579 * C2336;
    const double C106594 = C106579 * C2335;
    const double C106862 = C106579 * C6271;
    const double C106860 = C106579 * C6270;
    const double C134288 = C106579 * C6273;
    const double C134286 = C106579 * C6272;
    const double C134284 = C106579 * C6275;
    const double C134282 = C106579 * C6274;
    const double C154488 = C154451 + C154484;
    const double C63051 = C154475 - (C154271 * C154260) / C152045;
    const double C106605 = C154476 * C623;
    const double C106593 = C154476 * C622;
    const double C106887 = C154476 * C3454;
    const double C106867 = C154476 * C1559;
    const double C107117 = C154476 * C2342;
    const double C107371 = C154476 * C1558;
    const double C107593 = C154476 * C2341;
    const double C107879 = C154476 * C6279;
    const double C134293 = C154476 * C3453;
    const double C134281 = C154476 * C1560;
    const double C135173 = C154476 * C6281;
    const double C135529 = C154476 * C4916;
    const double C136425 = C154476 * C6280;
    const double C55521 = C154476 / C152085 - C154269 / C152198;
    const double C63086 = C63052 * C623;
    const double C63074 = C63052 * C622;
    const double C63368 = C63052 * C3454;
    const double C63348 = C63052 * C1559;
    const double C63598 = C63052 * C2342;
    const double C63852 = C63052 * C1558;
    const double C64074 = C63052 * C2341;
    const double C64360 = C63052 * C6279;
    const double C67052 = C63052 * C3453;
    const double C67040 = C63052 * C1560;
    const double C67932 = C63052 * C6281;
    const double C68288 = C63052 * C4916;
    const double C69184 = C63052 * C6280;
    const double C154485 = C154453 + C154475;
    const double C452 = C444 * C154164;
    const double C2908 = C444 * C154442;
    const double C3180 = C444 * C154480;
    const double C3174 = C444 * C154468;
    const double C11684 = C444 * C154406;
    const double C11682 = C444 * C154226;
    const double C24279 = C444 * C154442;
    const double C24517 = C444 * C24270;
    const double C24515 = C444 * C24271;
    const double C34946 = C444 * C34729;
    const double C70715 = C444 * C70494;
    const double C70713 = C444 * C154226;
    const double C82860 = C444 * C82853;
    const double C83098 = C444 * C154222;
    const double C83096 = C444 * C154229;
    const double C689 = C681 * C154164;
    const double C3470 = C681 * C154480;
    const double C11890 = C681 * C154406;
    const double C24747 = C681 * C24270;
    const double C35148 = C681 * C34729;
    const double C70921 = C681 * C70494;
    const double C83328 = C681 * C154222;
    const double C1182 = C1178 * C154164;
    const double C3468 = C1178 * C154468;
    const double C4279 = C1178 * C154480;
    const double C11888 = C1178 * C154226;
    const double C12557 = C1178 * C154406;
    const double C24745 = C1178 * C24271;
    const double C25489 = C1178 * C24270;
    const double C35813 = C1178 * C34729;
    const double C70919 = C1178 * C154226;
    const double C71581 = C1178 * C70494;
    const double C83326 = C1178 * C154229;
    const double C84070 = C1178 * C154222;
    const double C2918 = C2909 + C2910;
    const double C11480 = C11472 + C11473;
    const double C24289 = C24280 + C24281;
    const double C70511 = C70503 + C70504;
    const double C82870 = C82861 + C82862;
    const double C197 = C185 - C186;
    const double C424 = C392 - C393;
    const double C430 = C416 - C417;
    const double C661 = C629 - C630;
    const double C667 = C653 - C654;
    const double C1172 = C1162 - C1163;
    const double C3498 = C3492 - C3482;
    const double C3207 = C3199 - C3183;
    const double C3497 = C3491 - C3477;
    const double C4297 = C4293 - C4283;
    const double C7780 =
        (3 * (C152374 + C152272 * C152551 + C152547 * ae) +
         C152272 * (2 * C152551 + C152272 * C152761 + C152752 * ae) +
         (2 * C152547 + C152272 * C152752) * ae) /
        C152045;
    const double C7786 =
        (3 * (C152492 + ae * C152550 + be * C152551 + C152272 * C152755) +
         ae * (2 * C152550 + C152272 * C152760 + C152752 * be) +
         be * (2 * C152551 + C152272 * C152761 + C152752 * ae) +
         C152272 * (2 * C152755 + ae * C152760 + be * C152761 +
                    C152272 * (C152306 + ae * C152750 + be * C152753 +
                               C152272 * (ae * C152407 + be * C152413 +
                                          C152272 * C152321)))) /
        C152053;
    const double C7779 =
        (3 * (C152372 + C152272 * C152550 + C152547 * be) +
         C152272 * (2 * C152550 + C152272 * C152760 + C152752 * be) +
         (2 * C152547 + C152272 * C152752) * be) /
        C152045;
    const double C28337 = C28329 - C28330;
    const double C29250 = C29242 - C29243;
    const double C28895 = C28887 - C28888;
    const double C9283 =
        (3 * (C152513 + C152272 * C152715 + C152711 * ae) +
         C152272 * (2 * C152715 + C152272 * C152900 + C152892 * ae) +
         (2 * C152711 + C152272 * C152892) * ae) /
        C152045;
    const double C9286 =
        (3 * (C152708 + ae * C152714 + be * C152715 + C152272 * C152889) +
         ae * (2 * C152714 + C152272 * C152899 + C152892 * be) +
         be * (2 * C152715 + C152272 * C152900 + C152892 * ae) +
         C152272 * (2 * C152889 + ae * C152899 + be * C152900 +
                    C152272 * (C152877 + ae * C152890 + be * C152893 +
                               C152272 * (ae * C152878 + be * C152880 +
                                          C152272 * C152482 * C152314)))) /
        C152053;
    const double C9282 =
        (3 * (C152511 + C152272 * C152714 + C152711 * be) +
         C152272 * (2 * C152714 + C152272 * C152899 + C152892 * be) +
         (2 * C152711 + C152272 * C152892) * be) /
        C152045;
    const double C153024 = C152997 + C153022;
    const double C153023 = C152991 + C153021;
    const double C153341 = C153321 + C153322;
    const double C208 = C202 + C184;
    const double C441 = C433 + C399;
    const double C445 = C437 + C415;
    const double C678 = C670 + C636;
    const double C682 = C674 + C652;
    const double C1179 = C1175 + C1161;
    const double C3502 = C3496 + C3474;
    const double C3220 = C3213 * C154468;
    const double C3219 = C3213 * C154442;
    const double C11685 = C3213 * C154226;
    const double C24518 = C3213 * C24271;
    const double C24514 = C3213 * C154442;
    const double C34739 = C3213 * C154415;
    const double C70716 = C3213 * C154226;
    const double C74054 = C3213 * C154415;
    const double C83099 = C3213 * C154229;
    const double C83095 = C3213 * C82853;
    const double C3507 = C3501 * C154442;
    const double C4280 = C3501 * C154468;
    const double C12558 = C3501 * C154226;
    const double C24744 = C3501 * C154442;
    const double C25490 = C3501 * C24271;
    const double C71582 = C3501 * C154226;
    const double C83325 = C3501 * C82853;
    const double C84071 = C3501 * C154229;
    const double C4687 = C4686 + C4684;
    const double C4931 = C4929 + C4925;
    const double C5676 = C5675 + C5673;
    const double C166 =
        (5 * (3 * C152304 + C152278 * C152318) +
         C152278 *
             (4 * C152318 +
              C152278 *
                  (3 * C152316 +
                   C152278 * (2 * C152278 * C152314 +
                              C152278 * (C152314 + (C152308 * C152309 +
                                                    C152275 * bs[8] *
                                                        std::pow(C152270, 8)) *
                                                       C152044 * C152290))))) /
        C152053;
    const double C379 =
        ((yP - yQ) * (3 * C152304 + C152278 * C152318)) / C152053;
    const double C387 = (2 * C152278 * C152294 + C152278 * C152304 +
                         C152318 * std::pow(yP - yQ, 2)) /
                        C152053;
    const double C616 =
        (ae * (3 * (C152281 * C152280 * C152349 + C152353 * C152290) +
               C152278 * (2 * C152278 * C152353 +
                          C152278 * (C152353 +
                                     C152298 * C152297 * C152349 * C152290))) +
         be * (3 * (C152281 * C152280 * C152350 + C152354 * C152290) +
               C152278 * (2 * C152278 * C152354 +
                          C152278 * (C152354 +
                                     C152298 * C152297 * C152350 * C152290))) +
         C152272 * (3 * C152304 + C152278 * C152318)) /
        C152053;
    const double C624 =
        (2 * C152278 * C152294 + C152278 * C152304 +
         ae * (C152272 * C152403 + C152399 * be) +
         be * (C152272 * C152404 + C152399 * ae) +
         C152272 * (ae * C152403 + be * C152404 + C152272 * C152318)) /
        C152053;
    const double C1150 = (ae * C152482 * C152403 + be * C152482 * C152404 +
                          C152272 * C152482 * C152318) /
                         C152053;
    const double C3212 = C3204 + C3167;
    const double C3500 = C3494 + C3461;
    const double C28336 = C154181 * C4678;
    const double C152976 = C152965 + C152972;
    const double C28326 =
        (5 * (3 * C152604 + C152482 * C153032) +
         C152482 * (4 * C153032 +
                    C152482 * (3 * C153030 +
                               C152482 * (2 * C152482 * C152314 +
                                          C152482 * (C152314 +
                                                     C152329 * C152515))))) /
        C152053;
    const double C153311 = C153300 + C153307;
    const double C153367 = C152272 * C153361;
    const double C153557 = 3 * C153361;
    const double C152334 = C152278 * C152333;
    const double C152788 = C152272 * C152333;
    const double C152809 = C152482 * C152333;
    const double C1415 =
        (2 * C152482 * C152318 +
         C152482 * (C152318 + C152333 * std::pow(C152482, 2))) /
        C152053;
    const double C1557 =
        (C152482 * C152318 + ae * (C152272 * C152499 + C152500 * be) +
         be * (C152272 * C152501 + C152500 * ae) +
         C152272 *
             (ae * C152499 + be * C152501 + C152272 * C152482 * C152333)) /
        C152053;
    const double C1988 = (ae * (C152403 + C152430 * C152515) +
                          be * (C152404 + C152432 * C152515) +
                          C152272 * (C152318 + C152333 * C152515)) /
                         C152053;
    const double C3154 =
        (3 * (C152318 + C152333 * C152515) +
         C152482 *
             (2 * C152482 * C152333 +
              C152482 * (C152333 +
                         (2 * C152278 * C152329 +
                          C152278 * (C152329 +
                                     (C152323 * C152324 +
                                      C152275 * bs[9] * std::pow(C152274, 9)) *
                                         C152044 * C152290)) *
                             C152515))) /
        C152053;
    const double C4269 =
        (ae * (2 * C152499 + C152482 * C152589) +
         be * (2 * C152501 + C152482 * C152591) +
         C152272 *
             (2 * C152482 * C152333 +
              C152482 * (C152333 +
                         (2 * C152278 * C152329 +
                          C152278 * (C152329 +
                                     (C152323 * C152324 +
                                      C152275 * bs[9] * std::pow(C152274, 9)) *
                                         C152044 * C152290)) *
                             C152515))) /
        C152053;
    const double C4677 =
        (4 * (2 * C152482 * C152316 + C152482 * C152598) +
         C152482 *
             (3 * C152598 +
              C152482 *
                  (2 * C152482 * C152331 +
                   C152482 * (C152331 + (C152329 + (C152323 * C152324 +
                                                    C152275 * bs[9] *
                                                        std::pow(C152274, 9)) *
                                                       C152044 * C152290) *
                                            C152515)))) /
        C152053;
    const double C5666 =
        (ae * (3 * C152582 + C152482 * C152621) +
         be * (3 * C152584 + C152482 * C152623) +
         C152272 *
             (3 * C152598 +
              C152482 *
                  (2 * C152482 * C152331 +
                   C152482 * (C152331 + (C152329 + (C152323 * C152324 +
                                                    C152275 * bs[9] *
                                                        std::pow(C152274, 9)) *
                                                       C152044 * C152290) *
                                            C152515)))) /
        C152053;
    const double C152835 = C152827 + C152828;
    const double C152930 = C152272 * C152924;
    const double C153039 = C153034 + C153038;
    const double C153198 = C153192 + C153185;
    const double C153472 = C152272 * C153466;
    const double C153103 = C152482 * C153102;
    const double C153216 = C152272 * C153102;
    const double C153265 = C152272 * C153259;
    const double C152470 = C152278 * C152467;
    const double C152496 = C152482 * C152467;
    const double C152525 = C152467 * ae;
    const double C152523 = C152272 * C152467;
    const double C152522 = C152467 * be;
    const double C1399 =
        2 * C152482 * C152431 + C152482 * (C152431 + C152467 * C152515);
    const double C1972 = C152272 * (C152431 + C152467 * C152515);
    const double C2324 =
        2 * C152272 * C152431 + C152272 * (C152431 + C152467 * C152275);
    const double C3456 =
        (C152318 + C152333 * C152515 + ae * (C152272 * C152589 + C152590 * be) +
         be * (C152272 * C152591 + C152590 * ae) +
         C152272 *
             (ae * C152589 + be * C152591 +
              C152272 * (C152333 +
                         (2 * C152278 * C152329 +
                          C152278 * (C152329 +
                                     (C152323 * C152324 +
                                      C152275 * bs[9] * std::pow(C152274, 9)) *
                                         C152044 * C152290)) *
                             C152515))) /
        C152053;
    const double C3451 = (C152403 + C152430 * C152515 +
                          C152272 * (C152272 * C152589 + C152590 * be) +
                          C152272 * C152590 * be) /
                         C152045;
    const double C3452 = (C152404 + C152432 * C152515 +
                          C152272 * (C152272 * C152591 + C152590 * ae) +
                          C152272 * C152590 * ae) /
                         C152045;
    const double C4264 = (C152272 * (2 * C152499 + C152482 * C152589) +
                          (2 * C152500 + C152482 * C152590) * be) /
                         C152045;
    const double C4265 = (C152272 * (2 * C152501 + C152482 * C152591) +
                          (2 * C152500 + C152482 * C152590) * ae) /
                         C152045;
    const double C3142 = 3 * (C152399 + C152425 * C152515) +
                         C152482 * (2 * C152500 + C152482 * C152590);
    const double C3444 = C152399 + C152425 * C152515 + C152590 * C152275;
    const double C4257 = C152272 * (2 * C152500 + C152482 * C152590);
    const double C152803 = C152272 * C152799;
    const double C7776 = 3 * (C152399 + C152425 * C152275) +
                         C152272 * (2 * C152531 + C152272 * C152798);
    const double C152802 = C152272 * C152796;
    const double C152819 = C152816 + C152817;
    const double C152818 = C152813 + C152814;
    const double C4914 =
        (2 * C152482 * C152316 + C152482 * C152598 +
         ae * (C152272 * C152621 + C152622 * be) +
         be * (C152272 * C152623 + C152622 * ae) +
         C152272 *
             (ae * C152621 + be * C152623 +
              C152272 *
                  (2 * C152482 * C152331 +
                   C152482 * (C152331 + (C152329 + (C152323 * C152324 +
                                                    C152275 * bs[9] *
                                                        std::pow(C152274, 9)) *
                                                       C152044 * C152290) *
                                            C152515)))) /
        C152053;
    const double C4908 = (2 * C152503 + C152482 * C152582 +
                          C152272 * (C152272 * C152621 + C152622 * be) +
                          C152272 * C152622 * be) /
                         C152045;
    const double C4909 = (2 * C152505 + C152482 * C152584 +
                          C152272 * (C152272 * C152623 + C152622 * ae) +
                          C152272 * C152622 * ae) /
                         C152045;
    const double C5660 = (C152272 * (3 * C152582 + C152482 * C152621) +
                          (3 * C152583 + C152482 * C152622) * be) /
                         C152045;
    const double C5661 = (C152272 * (3 * C152584 + C152482 * C152623) +
                          (3 * C152583 + C152482 * C152622) * ae) /
                         C152045;
    const double C4668 = 4 * (2 * C152504 + C152482 * C152583) +
                         C152482 * (3 * C152583 + C152482 * C152622);
    const double C4905 = 2 * C152504 + C152482 * C152583 + C152622 * C152275;
    const double C5657 = C152272 * (3 * C152583 + C152482 * C152622);
    const double C6265 =
        (2 * (C152272 * C152584 + C152583 * ae) +
         C152272 * (C152584 + C152272 * C152672 + C152668 * ae) +
         (C152583 + C152615 * C152275) * ae) /
        C152045;
    const double C6276 =
        (2 * (ae * C152582 + be * C152584 + C152272 * C152598) +
         ae * (C152582 + C152272 * C152671 + C152668 * be) +
         be * (C152584 + C152272 * C152672 + C152668 * ae) +
         C152272 *
             (C152598 + ae * C152671 + be * C152672 +
              C152272 *
                  (ae * C152613 + be * C152617 +
                   C152272 * (C152331 + (C152329 + (C152323 * C152324 +
                                                    C152275 * bs[9] *
                                                        std::pow(C152274, 9)) *
                                                       C152044 * C152290) *
                                            C152515)))) /
        C152053;
    const double C6264 =
        (2 * (C152272 * C152582 + C152583 * be) +
         C152272 * (C152582 + C152272 * C152671 + C152668 * be) +
         (C152583 + C152615 * C152275) * be) /
        C152045;
    const double C152844 = C152610 + C152842;
    const double C152843 = C152606 + C152841;
    const double C152936 = C152933 + C152922;
    const double C10595 = 4 * (2 * C152539 + C152272 * C152775) +
                          C152272 * (3 * C152775 + C152272 * C152932);
    const double C152935 = C152931 + C152919;
    const double C153091 = C153069 + C153088;
    const double C153212 = C153209 + C153210;
    const double C153211 = C153206 + C153207;
    const double C153202 = C152636 + C153200;
    const double C153201 = C152632 + C153199;
    const double C153432 = C152272 * C153427;
    const double C153431 = C153398 + C153426;
    const double C153430 = C152272 * C153424;
    const double C153483 = C153481 + C153471;
    const double C56191 = 4 * (2 * C152694 + C152272 * C152865) +
                          C152272 * (3 * C152865 + C152272 * C153480);
    const double C153482 = C153479 + C153468;
    const double C153137 = C152482 * C153134;
    const double C153148 = C153134 * ae;
    const double C153146 = C152272 * C153134;
    const double C153145 = C153134 * be;
    const double C29998 =
        2 * C152272 * C153063 + C152272 * (C153063 + C153134 * C152275);
    const double C153231 = C152272 * C153227;
    const double C32488 = 3 * (C152660 + C153057 * C152275) +
                          C152272 * (2 * C153154 + C152272 * C153226);
    const double C153230 = C152272 * C153224;
    const double C153271 = C153268 + C153257;
    const double C33865 = 4 * (2 * C152702 + C152272 * C153172) +
                          C152272 * (3 * C153172 + C152272 * C153267);
    const double C153270 = C153266 + C153254;
    const double C153545 = C152272 * C153540;
    const double C153544 = C153504 + C153539;
    const double C153543 = C152272 * C153537;
    const double C153619 = C153580 + C153614;
    const double C153620 = C153613 * ae;
    const double C153618 = C152272 * C153613;
    const double C153617 = C153613 * be;
    const double C153616 = C153570 + C153612;
    const double C157 = (5 * (3 * C152381 + C152278 * C152404) +
                         C152278 * (4 * C152404 + C152278 * C152436)) /
                        C152045;
    const double C374 =
        (3 * C152381 + C152278 * C152404 + C152436 * C152515) / C152045;
    const double C376 = (C152482 * (4 * C152404 + C152278 * C152436)) / C152045;
    const double C611 = (3 * C152381 + C152278 * C152404 +
                         C152272 * (C152272 * C152436 + C152431 * ae) +
                         C152272 * C152431 * ae) /
                        C152045;
    const double C613 = (C152272 * (4 * C152404 + C152278 * C152436) +
                         (4 * C152399 + C152278 * C152431) * ae) /
                        C152045;
    const double C1144 =
        (C152272 * C152482 * C152436 + C152482 * C152431 * ae) / C152045;
    const double C1405 =
        (2 * C152482 * C152436 + C152482 * (C152436 + C152474 * C152515)) /
        C152045;
    const double C1978 = (C152272 * (C152436 + C152474 * C152515) +
                          (C152431 + C152467 * C152515) * ae) /
                         C152045;
    const double C8103 = C7161 * C1549;
    const double C11897 = C134 * C1549;
    const double C16365 = C15024 * C1549;
    const double C48071 = C47145 * C1549;
    const double C98618 = C97277 * C1549;
    const double C116551 = C152193 * C1549;
    const double C2332 =
        (2 * (C152272 * C152404 + C152399 * ae) +
         C152272 * (C152404 + C152272 * C152535 + C152531 * ae) +
         (C152399 + C152425 * C152275) * ae) /
        C152045;
    const double C8674 = C7161 * C6267;
    const double C19570 = C15024 * C6267;
    const double C48638 = C47145 * C6267;
    const double C63855 = C63060 * C6267;
    const double C107374 = C106579 * C6267;
    const double C111010 = C97277 * C6267;
    const double C117118 = C152193 * C6267;
    const double C152784 = C152782 + C152777;
    const double C28335 = C134 * C4674;
    const double C30823 = C7161 * C4911;
    const double C35153 = C134 * C4911;
    const double C39924 = C15024 * C4911;
    const double C51684 = C47145 * C4911;
    const double C102882 = C97277 * C4911;
    const double C120276 = C152193 * C4911;
    const double C28893 = C134 * C5663;
    const double C38638 = C15024 * C5663;
    const double C101492 = C97277 * C5663;
    const double C31855 = C7161 * C6269;
    const double C38942 = C15024 * C6269;
    const double C52704 = C47145 * C6269;
    const double C63371 = C63060 * C6269;
    const double C101854 = C97277 * C6269;
    const double C106890 = C106579 * C6269;
    const double C121612 = C152193 * C6269;
    const double C152873 = C152871 + C152867;
    const double C152980 = C152272 * C152978;
    const double C153399 = 3 * C152978;
    const double C153385 = be * C152978;
    const double C28323 = (5 * (3 * C152570 + C152482 * C152661) +
                           C152482 * (4 * C152661 + C152482 * C153064)) /
                          C152045;
    const double C28467 = (3 * C152570 + C152482 * C152661 +
                           C152272 * (C152272 * C153064 + C153063 * ae) +
                           C152272 * C153063 * ae) /
                          C152045;
    const double C28881 = (C152272 * (4 * C152661 + C152482 * C153064) +
                           (4 * C152660 + C152482 * C153063) * ae) /
                          C152045;
    const double C30003 =
        (2 * (C152272 * C152661 + C152660 * ae) +
         C152272 * (C152661 + C152272 * C153158 + C153154 * ae) +
         (C152660 + C153057 * C152275) * ae) /
        C152045;
    const double C153181 = C153179 + C153174;
    const double C153315 = C152272 * C153313;
    const double C153505 = 3 * C153313;
    const double C153493 = be * C153313;
    const double C153373 = C153338 + C153370;
    const double C156 = (5 * (3 * C152379 + C152278 * C152403) +
                         C152278 * (4 * C152403 + C152278 * C152435)) /
                        C152045;
    const double C373 =
        (3 * C152379 + C152278 * C152403 + C152435 * C152515) / C152045;
    const double C375 = (C152482 * (4 * C152403 + C152278 * C152435)) / C152045;
    const double C610 = (3 * C152379 + C152278 * C152403 +
                         C152272 * (C152272 * C152435 + C152431 * be) +
                         C152272 * C152431 * be) /
                        C152045;
    const double C612 = (C152272 * (4 * C152403 + C152278 * C152435) +
                         (4 * C152399 + C152278 * C152431) * be) /
                        C152045;
    const double C1143 =
        (C152272 * C152482 * C152435 + C152482 * C152431 * be) / C152045;
    const double C1404 =
        (2 * C152482 * C152435 + C152482 * (C152435 + C152472 * C152515)) /
        C152045;
    const double C1977 = (C152272 * (C152435 + C152472 * C152515) +
                          (C152431 + C152467 * C152515) * be) /
                         C152045;
    const double C8101 = C7161 * C1548;
    const double C11895 = C134 * C1548;
    const double C16363 = C15024 * C1548;
    const double C48069 = C47145 * C1548;
    const double C98616 = C97277 * C1548;
    const double C116549 = C152193 * C1548;
    const double C2340 =
        (2 * (ae * C152403 + be * C152404 + C152272 * C152318) +
         ae * (C152403 + C152272 * C152534 + C152531 * be) +
         be * (C152404 + C152272 * C152535 + C152531 * ae) +
         C152272 *
             (C152318 + ae * C152534 + be * C152535 +
              C152272 * (ae * C152430 + be * C152432 + C152272 * C152333))) /
        C152053;
    const double C2331 =
        (2 * (C152272 * C152403 + C152399 * be) +
         C152272 * (C152403 + C152272 * C152534 + C152531 * be) +
         (C152399 + C152425 * C152275) * be) /
        C152045;
    const double C3201 = C3190 - C3191;
    const double C3961 = C3956 - C3957;
    const double C3200 = C3186 - C3187;
    const double C3493 = C3484 - C3485;
    const double C4294 = C4287 - C4288;
    const double C8675 = C154445 * C6277;
    const double C19571 = C154268 * C6277;
    const double C48639 = C154445 * C6277;
    const double C63856 = C154422 * C6277;
    const double C107375 = C154422 * C6277;
    const double C111011 = C154268 * C6277;
    const double C117119 = C115620 * C6277;
    const double C8672 = C7161 * C6266;
    const double C19568 = C15024 * C6266;
    const double C48636 = C47145 * C6266;
    const double C63853 = C63060 * C6266;
    const double C107372 = C106579 * C6266;
    const double C111008 = C97277 * C6266;
    const double C117116 = C152193 * C6266;
    const double C152783 = C152781 + C152774;
    const double C152923 = C152916 + C152903;
    const double C30824 = C154445 * C4915;
    const double C35154 = C154181 * C4915;
    const double C39925 = C154268 * C4915;
    const double C51685 = C154445 * C4915;
    const double C102883 = C154268 * C4915;
    const double C120277 = C115620 * C4915;
    const double C28894 = C154181 * C5667;
    const double C38639 = C154268 * C5667;
    const double C101493 = C154268 * C5667;
    const double C28333 = C134 * C4673;
    const double C30821 = C7161 * C4910;
    const double C35151 = C134 * C4910;
    const double C39922 = C15024 * C4910;
    const double C51682 = C47145 * C4910;
    const double C102880 = C97277 * C4910;
    const double C120274 = C152193 * C4910;
    const double C28891 = C134 * C5662;
    const double C38636 = C15024 * C5662;
    const double C101490 = C97277 * C5662;
    const double C31856 = C154445 * C6278;
    const double C38943 = C154268 * C6278;
    const double C52705 = C154445 * C6278;
    const double C63372 = C154422 * C6278;
    const double C101855 = C154268 * C6278;
    const double C106891 = C154422 * C6278;
    const double C121613 = C115620 * C6278;
    const double C31853 = C7161 * C6268;
    const double C38940 = C15024 * C6268;
    const double C52702 = C47145 * C6268;
    const double C63369 = C63060 * C6268;
    const double C101852 = C97277 * C6268;
    const double C106888 = C106579 * C6268;
    const double C121610 = C152193 * C6268;
    const double C152872 = C152870 + C152864;
    const double C153465 = C153456 + C153446;
    const double C152979 = C152272 * C152977;
    const double C153391 = 3 * C152977;
    const double C153384 = ae * C152977;
    const double C153423 = C153412 + C153419;
    const double C28470 =
        (3 * C152604 + C152482 * C153032 +
         ae * (C152272 * C153062 + C153063 * be) +
         be * (C152272 * C153064 + C153063 * ae) +
         C152272 * (ae * C153062 + be * C153064 +
                    C152272 * (3 * C153030 +
                               C152482 * (2 * C152482 * C152314 +
                                          C152482 * (C152314 +
                                                     C152329 * C152515))))) /
        C152053;
    const double C28884 =
        (ae * (4 * C152659 + C152482 * C153062) +
         be * (4 * C152661 + C152482 * C153064) +
         C152272 * (4 * C153032 +
                    C152482 * (3 * C153030 +
                               C152482 * (2 * C152482 * C152314 +
                                          C152482 * (C152314 +
                                                     C152329 * C152515))))) /
        C152053;
    const double C28322 = (5 * (3 * C152568 + C152482 * C152659) +
                           C152482 * (4 * C152659 + C152482 * C153062)) /
                          C152045;
    const double C28466 = (3 * C152568 + C152482 * C152659 +
                           C152272 * (C152272 * C153062 + C153063 * be) +
                           C152272 * C153063 * be) /
                          C152045;
    const double C28880 = (C152272 * (4 * C152659 + C152482 * C153062) +
                           (4 * C152660 + C152482 * C153063) * be) /
                          C152045;
    const double C30005 =
        (2 * (ae * C152659 + be * C152661 + C152272 * C153032) +
         ae * (C152659 + C152272 * C153157 + C153154 * be) +
         be * (C152661 + C152272 * C153158 + C153154 * ae) +
         C152272 *
             (C153032 + ae * C153157 + be * C153158 +
              C152272 * (ae * C153056 + be * C153058 + C152272 * C153102))) /
        C152053;
    const double C30002 =
        (2 * (C152272 * C152659 + C152660 * be) +
         C152272 * (C152659 + C152272 * C153157 + C153154 * be) +
         (C152660 + C153057 * C152275) * be) /
        C152045;
    const double C153180 = C153178 + C153171;
    const double C153258 = C153251 + C153238;
    const double C153314 = C152272 * C153312;
    const double C153499 = 3 * C153312;
    const double C153492 = ae * C153312;
    const double C153532 = C153519 + C153526;
    const double C153372 = C153330 + C153368;
    const double C153584 = C153560 + C153561;
    const double C153611 = C152272 * C153605;
    const double C190 = C135 * C142;
    const double C421 = C135 * C352;
    const double C825 = C135 * C353;
    const double C658 = C135 * C589;
    const double C961 = C135 * C590;
    const double C1167 = C135 * C1133;
    const double C29110 = C135 * C28320;
    const double C29247 = C135 * C28464;
    const double C29667 = C135 * C28878;
    const double C152478 = C152447 + C152476;
    const double C28325 = (5 * (3 * C152577 + C152482 * C152642) +
                           C152482 * (4 * C152642 + C152482 * C153092)) /
                          C152045;
    const double C153141 = C153114 + C153138;
    const double C152477 = C152439 + C152475;
    const double C28324 = (5 * (3 * C152575 + C152482 * C152640) +
                           C152482 * (4 * C152640 + C152482 * C153090)) /
                          C152045;
    const double C153139 = C153106 + C153136;
    const double C154486 = C154424 + C154478;
    const double C11466 = C154459 - (C154024 * C154007) / C152045;
    const double C126 = C154460 / C152085 - C154022 / C152198;
    const double C154479 = C154427 + C154459;
    const double C154487 = C154446 + C154482;
    const double C34730 = C154472 - (C154229 * C154218) / C152045;
    const double C74053 = C444 * C154473;
    const double C74258 = C3213 * C154473;
    const double C74460 = C3501 * C154473;
    const double C28195 = C154473 / C152085 - C154227 / C152198;
    const double C34738 = C444 * C34731;
    const double C34943 = C3213 * C34731;
    const double C35145 = C3501 * C34731;
    const double C154483 = C154448 + C154472;
    const double C152162 = C152069 / C152055;
    const double C152158 = C152069 / C152045;
    const double C7160 =
        (((-4 * C152056) / C152045 - C152069 / C152045) * ae) / C152055 +
        ((2 * ((0 * ae) / C152045 - C152056 / C152053) - C152069 / C152055) *
         ae) /
            C152045;
    const double C15023 =
        (((-4 * C152056) / C152045 - C152069 / C152045) * ae) / C152045;
    const double C47142 =
        (-(be * -2 * C152052) / C152053) / C152085 -
        ((2 * ((-C152052 / C152045) / C152085 - (C152063 * be) / C152045) -
          (C152043 * ((-4 * C152056) / C152045 - C152069 / C152045) * be) /
              C152045) *
         be) /
            C152045 -
        C152064 / C152055;
    const double C47144 =
        (-(((-4 * C152056) / C152045 - C152069 / C152045) * be) / C152045) /
            C152085 -
        ((2 * ((-C152059 / C152045) / C152085 - (0 * be) / C152045) -
          C152069 / C152055) *
         be) /
            C152045;
    const double C7201 = C7158 * C140;
    const double C7197 = C7158 * C139;
    const double C7177 = C7158 * C138;
    const double C7165 = C7158 * C137;
    const double C7509 = C7158 * C350;
    const double C7497 = C7158 * C349;
    const double C7493 = C7158 * C346;
    const double C7481 = C7158 * C345;
    const double C7827 = C7158 * C587;
    const double C7815 = C7158 * C586;
    const double C7811 = C7158 * C583;
    const double C7799 = C7158 * C582;
    const double C8094 = C7158 * C344;
    const double C8336 = C7158 * C581;
    const double C8665 = C7158 * C1131;
    const double C8653 = C7158 * C1130;
    const double C30814 = C7158 * C1402;
    const double C30810 = C7158 * C1403;
    const double C30790 = C7158 * C348;
    const double C30778 = C7158 * C347;
    const double C31846 = C7158 * C1975;
    const double C31842 = C7158 * C1129;
    const double C31830 = C7158 * C1976;
    const double C32250 = C7158 * C3139;
    const double C32506 = C7158 * C3441;
    const double C32494 = C7158 * C1545;
    const double C33263 = C7158 * C4254;
    const double C78234 = C7158 * C1544;
    const double C7209 = C7162 * C589;
    const double C7189 = C7162 * C588;
    const double C7185 = C7162 * C587;
    const double C7173 = C7162 * C586;
    const double C7517 = C7162 * C3443;
    const double C7505 = C7162 * C3442;
    const double C7485 = C7162 * C1544;
    const double C7473 = C7162 * C1543;
    const double C7835 = C7162 * C7775;
    const double C7823 = C7162 * C7774;
    const double C7803 = C7162 * C2327;
    const double C7791 = C7162 * C2326;
    const double C8102 = C7162 * C1542;
    const double C8344 = C7162 * C2325;
    const double C8673 = C7162 * C6259;
    const double C8661 = C7162 * C6261;
    const double C30822 = C7162 * C4906;
    const double C30802 = C7162 * C4907;
    const double C30798 = C7162 * C3441;
    const double C30786 = C7162 * C1545;
    const double C31854 = C7162 * C6260;
    const double C31834 = C7162 * C6263;
    const double C31822 = C7162 * C6262;
    const double C32258 = C7162 * C28464;
    const double C32514 = C7162 * C31082;
    const double C32502 = C7162 * C9277;
    const double C33271 = C7162 * C29999;
    const double C78242 = C7162 * C9276;
    const double C15064 = C15025 * C590;
    const double C15052 = C15025 * C580;
    const double C15048 = C15025 * C581;
    const double C15040 = C15025 * C582;
    const double C15032 = C15025 * C583;
    const double C15344 = C15025 * C1973;
    const double C15336 = C15025 * C1974;
    const double C15328 = C15025 * C1975;
    const double C15316 = C15025 * C1130;
    const double C15308 = C15025 * C1131;
    const double C15300 = C15025 * C1132;
    const double C15622 = C15025 * C2325;
    const double C15614 = C15025 * C2326;
    const double C15606 = C15025 * C2327;
    const double C15594 = C15025 * C586;
    const double C15586 = C15025 * C587;
    const double C15578 = C15025 * C588;
    const double C15862 = C15025 * C1133;
    const double C16074 = C15025 * C589;
    const double C16364 = C15025 * C1542;
    const double C16356 = C15025 * C1543;
    const double C16348 = C15025 * C1544;
    const double C19239 = C15025 * C4256;
    const double C19230 = C15025 * C4255;
    const double C19217 = C15025 * C1976;
    const double C19209 = C15025 * C1129;
    const double C19569 = C15025 * C6259;
    const double C19561 = C15025 * C6261;
    const double C20582 = C15025 * C3443;
    const double C20573 = C15025 * C3442;
    const double C20560 = C15025 * C1545;
    const double C21092 = C15025 * C4254;
    const double C21396 = C15025 * C6263;
    const double C22376 = C15025 * C3441;
    const double C38637 = C15025 * C5658;
    const double C38941 = C15025 * C6260;
    const double C39923 = C15025 * C4906;
    const double C40422 = C15025 * C5659;
    const double C40726 = C15025 * C6262;
    const double C41707 = C15025 * C4907;
    const double C44951 = C15025 * C28878;
    const double C45159 = C15025 * C29999;
    const double C45820 = C15025 * C28464;
    const double C47193 = C47146 * C589;
    const double C47173 = C47146 * C588;
    const double C47169 = C47146 * C587;
    const double C47157 = C47146 * C586;
    const double C47501 = C47146 * C3443;
    const double C47489 = C47146 * C3442;
    const double C47469 = C47146 * C1544;
    const double C47457 = C47146 * C1543;
    const double C47803 = C47146 * C7775;
    const double C47791 = C47146 * C7774;
    const double C47771 = C47146 * C2327;
    const double C47759 = C47146 * C2326;
    const double C48070 = C47146 * C1542;
    const double C48312 = C47146 * C2325;
    const double C48637 = C47146 * C6259;
    const double C48625 = C47146 * C6261;
    const double C51683 = C47146 * C4906;
    const double C51663 = C47146 * C4907;
    const double C51659 = C47146 * C3441;
    const double C51647 = C47146 * C1545;
    const double C52703 = C47146 * C6260;
    const double C52683 = C47146 * C6263;
    const double C52671 = C47146 * C6262;
    const double C53107 = C47146 * C28464;
    const double C53359 = C47146 * C31082;
    const double C53347 = C47146 * C9277;
    const double C54116 = C47146 * C29999;
    const double C58457 = C47146 * C9276;
    const double C63108 = C63061 * C2325;
    const double C63080 = C63061 * C2326;
    const double C63076 = C63061 * C2327;
    const double C63370 = C63061 * C6260;
    const double C63342 = C63061 * C6261;
    const double C63620 = C63061 * C10596;
    const double C63592 = C63061 * C7774;
    const double C63854 = C63061 * C6259;
    const double C64076 = C63061 * C7775;
    const double C64362 = C63061 * C9276;
    const double C67046 = C63061 * C6262;
    const double C67042 = C63061 * C6263;
    const double C67926 = C63061 * C9277;
    const double C68290 = C63061 * C29999;
    const double C68512 = C63061 * C33866;
    const double C69186 = C63061 * C31082;
    const double C97317 = C97278 * C590;
    const double C97305 = C97278 * C580;
    const double C97301 = C97278 * C581;
    const double C97293 = C97278 * C582;
    const double C97285 = C97278 * C583;
    const double C97597 = C97278 * C1973;
    const double C97589 = C97278 * C1974;
    const double C97581 = C97278 * C1975;
    const double C97569 = C97278 * C1130;
    const double C97561 = C97278 * C1131;
    const double C97553 = C97278 * C1132;
    const double C97875 = C97278 * C2325;
    const double C97867 = C97278 * C2326;
    const double C97859 = C97278 * C2327;
    const double C97847 = C97278 * C586;
    const double C97839 = C97278 * C587;
    const double C97831 = C97278 * C588;
    const double C98115 = C97278 * C1133;
    const double C98327 = C97278 * C589;
    const double C98617 = C97278 * C1542;
    const double C98609 = C97278 * C1543;
    const double C98601 = C97278 * C1544;
    const double C101499 = C97278 * C4256;
    const double C101491 = C97278 * C5658;
    const double C101479 = C97278 * C4254;
    const double C101469 = C97278 * C4255;
    const double C101463 = C97278 * C1976;
    const double C101455 = C97278 * C1129;
    const double C101853 = C97278 * C6260;
    const double C101845 = C97278 * C6261;
    const double C101833 = C97278 * C3442;
    const double C102461 = C97278 * C3443;
    const double C102881 = C97278 * C4906;
    const double C102867 = C97278 * C1545;
    const double C102859 = C97278 * C3441;
    const double C103392 = C97278 * C5659;
    const double C103704 = C97278 * C6262;
    const double C103696 = C97278 * C6263;
    const double C104691 = C97278 * C4907;
    const double C111009 = C97278 * C6259;
    const double C131904 = C97278 * C28878;
    const double C132112 = C97278 * C29999;
    const double C132773 = C97278 * C28464;
    const double C106627 = C106580 * C2325;
    const double C106599 = C106580 * C2326;
    const double C106595 = C106580 * C2327;
    const double C106889 = C106580 * C6260;
    const double C106861 = C106580 * C6261;
    const double C107139 = C106580 * C10596;
    const double C107111 = C106580 * C7774;
    const double C107373 = C106580 * C6259;
    const double C107595 = C106580 * C7775;
    const double C107881 = C106580 * C9276;
    const double C134287 = C106580 * C6262;
    const double C134283 = C106580 * C6263;
    const double C135167 = C106580 * C9277;
    const double C135531 = C106580 * C29999;
    const double C135753 = C106580 * C33866;
    const double C136427 = C106580 * C31082;
    const double C115673 = C115626 * C589;
    const double C115653 = C115626 * C588;
    const double C115649 = C115626 * C587;
    const double C115637 = C115626 * C586;
    const double C115981 = C115626 * C3443;
    const double C115969 = C115626 * C3442;
    const double C115949 = C115626 * C1544;
    const double C115937 = C115626 * C1543;
    const double C116283 = C115626 * C7775;
    const double C116271 = C115626 * C7774;
    const double C116251 = C115626 * C2327;
    const double C116239 = C115626 * C2326;
    const double C116550 = C115626 * C1542;
    const double C116792 = C115626 * C2325;
    const double C117117 = C115626 * C6259;
    const double C117105 = C115626 * C6261;
    const double C120275 = C115626 * C4906;
    const double C120254 = C115626 * C3441;
    const double C120247 = C115626 * C1545;
    const double C120608 = C115626 * C9276;
    const double C121611 = C115626 * C6260;
    const double C121590 = C115626 * C6263;
    const double C122127 = C115626 * C4907;
    const double C122438 = C115626 * C9277;
    const double C123425 = C115626 * C6262;
    const double C149730 = C115626 * C28464;
    const double C149970 = C115626 * C31082;
    const double C150718 = C115626 * C29999;
    const double C152122 = C152118 - C152111;
    const double C106617 = C154488 * C163;
    const double C106613 = C154488 * C162;
    const double C106585 = C154488 * C161;
    const double C106879 = C154488 * C385;
    const double C106875 = C154488 * C382;
    const double C107129 = C154488 * C622;
    const double C107125 = C154488 * C619;
    const double C107363 = C154488 * C381;
    const double C107585 = C154488 * C618;
    const double C107871 = C154488 * C1148;
    const double C134301 = C154488 * C384;
    const double C134273 = C154488 * C383;
    const double C135181 = C154488 * C1147;
    const double C135521 = C154488 * C1418;
    const double C135743 = C154488 * C1560;
    const double C136417 = C154488 * C1991;
    const double C55518 =
        (C154481 + 2 * C154264) / C152085 - (C154488 * C154260) / C152045;
    const double C63102 = C63051 * C617;
    const double C63090 = C63051 * C618;
    const double C63070 = C63051 * C619;
    const double C63364 = C63051 * C1990;
    const double C63352 = C63051 * C1148;
    const double C63614 = C63051 * C2342;
    const double C63602 = C63051 * C622;
    const double C63848 = C63051 * C1149;
    const double C64070 = C63051 * C623;
    const double C64356 = C63051 * C1559;
    const double C67056 = C63051 * C1991;
    const double C67036 = C63051 * C1147;
    const double C67936 = C63051 * C1560;
    const double C68284 = C63051 * C4266;
    const double C68506 = C63051 * C6281;
    const double C69180 = C63051 * C3453;
    const double C106621 = C154485 * C617;
    const double C106609 = C154485 * C618;
    const double C106589 = C154485 * C619;
    const double C106883 = C154485 * C1990;
    const double C106871 = C154485 * C1148;
    const double C107133 = C154485 * C2342;
    const double C107121 = C154485 * C622;
    const double C107367 = C154485 * C1149;
    const double C107589 = C154485 * C623;
    const double C107875 = C154485 * C1559;
    const double C134297 = C154485 * C1991;
    const double C134277 = C154485 * C1147;
    const double C135177 = C154485 * C1560;
    const double C135525 = C154485 * C4266;
    const double C135747 = C154485 * C6281;
    const double C136421 = C154485 * C3453;
    const double C55519 = (C154470 + 2 * C154271 + C154488) / C152085 -
                          (C154485 * C154260) / C152045;
    const double C55520 = (C154445 + C154268 / C152045 + C154485) / C152085 -
                          (C154476 * C154260) / C152045;
    const double C203 = C197 - C187;
    const double C432 = C424 - C394;
    const double C438 = C430 - C418;
    const double C669 = C661 - C631;
    const double C675 = C667 - C655;
    const double C1176 = C1172 - C1164;
    const double C3504 = C3498 + C3483;
    const double C3215 = C3207 + C3184;
    const double C3503 = C3497 + C3478;
    const double C4301 = C4297 + C4284;
    const double C7824 = C7161 * C7780;
    const double C47792 = C47145 * C7780;
    const double C63593 = C63060 * C7780;
    const double C107112 = C106579 * C7780;
    const double C116272 = C152193 * C7780;
    const double C7825 = C154445 * C7786;
    const double C47793 = C154445 * C7786;
    const double C63618 = C63052 * C7786;
    const double C63594 = C154422 * C7786;
    const double C107137 = C154476 * C7786;
    const double C107113 = C154422 * C7786;
    const double C116273 = C115620 * C7786;
    const double C7822 = C7161 * C7779;
    const double C47790 = C47145 * C7779;
    const double C63591 = C63060 * C7779;
    const double C107110 = C106579 * C7779;
    const double C116270 = C152193 * C7779;
    const double C28339 = C28337 - C28331;
    const double C29252 = C29250 - C29244;
    const double C28897 = C28895 - C28889;
    const double C32503 = C7161 * C9283;
    const double C53348 = C47145 * C9283;
    const double C67927 = C63060 * C9283;
    const double C122439 = C152193 * C9283;
    const double C135168 = C106579 * C9283;
    const double C32504 = C154445 * C9286;
    const double C53349 = C154445 * C9286;
    const double C67928 = C154422 * C9286;
    const double C68510 = C63052 * C9286;
    const double C122440 = C115620 * C9286;
    const double C135169 = C154422 * C9286;
    const double C135751 = C154476 * C9286;
    const double C32501 = C7161 * C9282;
    const double C53346 = C47145 * C9282;
    const double C67925 = C63060 * C9282;
    const double C122437 = C152193 * C9282;
    const double C135166 = C106579 * C9282;
    const double C153026 = C153024 + C153013;
    const double C153025 = C153023 + C153010;
    const double C153349 = C153341 + C153323;
    const double C214 = C208 * C154164;
    const double C2915 = C208 * C154480;
    const double C11477 = C208 * C154406;
    const double C24286 = C208 * C24270;
    const double C70508 = C208 * C70494;
    const double C82867 = C208 * C154222;
    const double C449 = C441 * C154164;
    const double C2913 = C441 * C154468;
    const double C3731 = C441 * C154480;
    const double C11475 = C441 * C154226;
    const double C11679 = C441 * C154406;
    const double C24284 = C441 * C24271;
    const double C24972 = C441 * C24270;
    const double C70506 = C441 * C154226;
    const double C70710 = C441 * C70494;
    const double C82865 = C441 * C154229;
    const double C83553 = C441 * C154222;
    const double C453 = C445 * C154164;
    const double C2911 = C445 * C154442;
    const double C3185 = C445 * C154480;
    const double C3168 = C445 * C154468;
    const double C11686 = C445 * C154406;
    const double C11680 = C445 * C154226;
    const double C24282 = C445 * C154442;
    const double C24520 = C445 * C24270;
    const double C24512 = C445 * C24271;
    const double C34741 = C445 * C34731;
    const double C70717 = C445 * C70494;
    const double C70711 = C445 * C154226;
    const double C74056 = C445 * C154473;
    const double C82863 = C445 * C82853;
    const double C83101 = C445 * C154222;
    const double C83093 = C445 * C154229;
    const double C686 = C678 * C154164;
    const double C3954 = C678 * C154480;
    const double C11885 = C678 * C154406;
    const double C25195 = C678 * C24270;
    const double C70916 = C678 * C70494;
    const double C83776 = C678 * C154222;
    const double C690 = C682 * C154164;
    const double C3479 = C682 * C154480;
    const double C11892 = C682 * C154406;
    const double C24750 = C682 * C24270;
    const double C70923 = C682 * C70494;
    const double C83331 = C682 * C154222;
    const double C1183 = C1179 * C154164;
    const double C3462 = C1179 * C154468;
    const double C4285 = C1179 * C154480;
    const double C11886 = C1179 * C154226;
    const double C12559 = C1179 * C154406;
    const double C24742 = C1179 * C24271;
    const double C25492 = C1179 * C24270;
    const double C70917 = C1179 * C154226;
    const double C71583 = C1179 * C70494;
    const double C83323 = C1179 * C154229;
    const double C84073 = C1179 * C154222;
    const double C3508 = C3502 * C154468;
    const double C11891 = C3502 * C154226;
    const double C24748 = C3502 * C24271;
    const double C70922 = C3502 * C154226;
    const double C83329 = C3502 * C154229;
    const double C192 = C154181 * C166;
    const double C395 = C154181 * C379;
    const double C15860 = C154408 * C379;
    const double C98113 = C97273 * C379;
    const double C419 = C154181 * C387;
    const double C15342 = C154408 * C387;
    const double C97595 = C97273 * C387;
    const double C632 = C154181 * C616;
    const double C7207 = C154470 * C616;
    const double C15054 = C154268 * C616;
    const double C16072 = C154408 * C616;
    const double C47191 = C47139 * C616;
    const double C97307 = C154268 * C616;
    const double C98325 = C97273 * C616;
    const double C115671 = C154271 * C616;
    const double C656 = C154181 * C624;
    const double C7191 = C154445 * C624;
    const double C8342 = C154470 * C624;
    const double C15620 = C154408 * C624;
    const double C15580 = C154268 * C624;
    const double C47175 = C154445 * C624;
    const double C48310 = C47139 * C624;
    const double C63106 = C63052 * C624;
    const double C97873 = C97273 * C624;
    const double C97833 = C154268 * C624;
    const double C106625 = C154476 * C624;
    const double C115655 = C115620 * C624;
    const double C116790 = C154271 * C624;
    const double C1165 = C154181 * C1150;
    const double C8100 = C154470 * C1150;
    const double C15302 = C154268 * C1150;
    const double C16362 = C154408 * C1150;
    const double C48068 = C47139 * C1150;
    const double C97555 = C154268 * C1150;
    const double C98615 = C97273 * C1150;
    const double C116548 = C154271 * C1150;
    const double C3222 = C3212 * C154468;
    const double C3218 = C3212 * C154442;
    const double C11687 = C3212 * C154226;
    const double C24521 = C3212 * C24271;
    const double C24511 = C3212 * C154442;
    const double C34740 = C3212 * C154415;
    const double C35355 = C3212 * C34731;
    const double C70718 = C3212 * C154226;
    const double C74055 = C3212 * C154415;
    const double C74663 = C3212 * C154473;
    const double C83102 = C3212 * C154229;
    const double C83092 = C3212 * C82853;
    const double C3506 = C3500 * C154442;
    const double C4286 = C3500 * C154468;
    const double C12560 = C3500 * C154226;
    const double C24741 = C3500 * C154442;
    const double C25493 = C3500 * C24271;
    const double C35553 = C3500 * C34731;
    const double C71584 = C3500 * C154226;
    const double C74861 = C3500 * C154473;
    const double C83322 = C3500 * C82853;
    const double C84074 = C3500 * C154229;
    const double C29112 = C154181 * C28326;
    const double C152335 = C152320 + C152334;
    const double C152801 = C152795 + C152788;
    const double C3193 = C154181 * C1415;
    const double C8104 = C154445 * C1557;
    const double C11898 = C154181 * C1557;
    const double C16366 = C154268 * C1557;
    const double C48072 = C154445 * C1557;
    const double C98619 = C154268 * C1557;
    const double C116552 = C115620 * C1557;
    const double C3959 = C154181 * C1988;
    const double C15346 = C154268 * C1988;
    const double C97599 = C154268 * C1988;
    const double C28327 =
        (5 * (3 * C152601 + C152482 * C153039) +
         C152482 *
             (4 * C153039 +
              C152482 * (3 * C153037 +
                         C152482 * (2 * C152482 * C153035 +
                                    C152482 * (C153035 +
                                               C152278 *
                                                   (C152323 * C152324 +
                                                    C152275 * bs[9] *
                                                        std::pow(C152274, 9)) *
                                                   C152044 * C152515))))) /
        C152053;
    const double C28885 =
        (ae * (4 * C152640 + C152482 * C153090) +
         be * (4 * C152642 + C152482 * C153092) +
         C152272 *
             (4 * C153039 +
              C152482 * (3 * C153037 +
                         C152482 * (2 * C152482 * C153035 +
                                    C152482 * (C153035 +
                                               C152278 *
                                                   (C152323 * C152324 +
                                                    C152275 * bs[9] *
                                                        std::pow(C152274, 9)) *
                                                   C152044 * C152515))))) /
        C152053;
    const double C153104 = C153096 + C153103;
    const double C153229 = C153223 + C153216;
    const double C152473 = C152443 + C152470;
    const double C1546 =
        (C152482 * C152435 + C152272 * (C152272 * C152495 + C152496 * be) +
         C152272 * C152496 * be) /
        C152045;
    const double C1547 =
        (C152482 * C152436 + C152272 * (C152272 * C152497 + C152496 * ae) +
         C152272 * C152496 * ae) /
        C152045;
    const double C1541 = C152482 * C152431 + C152496 * C152275;
    const double C152527 = C152524 + C152525;
    const double C152526 = C152521 + C152522;
    const double C152805 = C152432 + C152803;
    const double C152804 = C152430 + C152802;
    const double C8649 =
        (2 * (C152272 * C152501 + C152500 * ae) +
         C152272 * (C152501 + C152272 * C152819 + C152815 * ae) +
         (C152500 + C152811 * C152275) * ae) /
        C152045;
    const double C8650 =
        (2 * (ae * C152499 + be * C152501 + C152272 * C152809) +
         ae * (C152499 + C152272 * C152818 + C152815 * be) +
         be * (C152501 + C152272 * C152819 + C152815 * ae) +
         C152272 *
             (C152809 + ae * C152818 + be * C152819 +
              C152272 * (ae * C152810 + be * C152812 +
                         C152272 * C152482 *
                             (2 * C152278 * C152329 +
                              C152278 * (C152329 + (C152323 * C152324 +
                                                    C152275 * bs[9] *
                                                        std::pow(C152274, 9)) *
                                                       C152044 * C152290))))) /
        C152053;
    const double C8648 =
        (2 * (C152272 * C152499 + C152500 * be) +
         C152272 * (C152499 + C152272 * C152818 + C152815 * be) +
         (C152500 + C152811 * C152275) * be) /
        C152045;
    const double C152846 = C152844 + C152840;
    const double C152845 = C152843 + C152837;
    const double C152938 = C152272 * C152936;
    const double C152937 = C152272 * C152935;
    const double C28471 =
        (3 * C152601 + C152482 * C153039 +
         ae * (C152272 * C153090 + C153091 * be) +
         be * (C152272 * C153092 + C153091 * ae) +
         C152272 *
             (ae * C153090 + be * C153092 +
              C152272 * (3 * C153037 +
                         C152482 * (2 * C152482 * C153035 +
                                    C152482 * (C153035 +
                                               C152278 *
                                                   (C152323 * C152324 +
                                                    C152275 * bs[9] *
                                                        std::pow(C152274, 9)) *
                                                   C152044 * C152515))))) /
        C152053;
    const double C28468 = (3 * C152575 + C152482 * C152640 +
                           C152272 * (C152272 * C153090 + C153091 * be) +
                           C152272 * C153091 * be) /
                          C152045;
    const double C28469 = (3 * C152577 + C152482 * C152642 +
                           C152272 * (C152272 * C153092 + C153091 * ae) +
                           C152272 * C153091 * ae) /
                          C152045;
    const double C28882 = (C152272 * (4 * C152640 + C152482 * C153090) +
                           (4 * C152641 + C152482 * C153091) * be) /
                          C152045;
    const double C28883 = (C152272 * (4 * C152642 + C152482 * C153092) +
                           (4 * C152641 + C152482 * C153091) * ae) /
                          C152045;
    const double C28321 = 5 * (3 * C152576 + C152482 * C152641) +
                          C152482 * (4 * C152641 + C152482 * C153091);
    const double C28465 = 3 * C152576 + C152482 * C152641 + C153091 * C152275;
    const double C28879 = C152272 * (4 * C152641 + C152482 * C153091);
    const double C31818 =
        (2 * (C152272 * C152642 + C152641 * ae) +
         C152272 * (C152642 + C152272 * C153212 + C153208 * ae) +
         (C152641 + C153085 * C152275) * ae) /
        C152045;
    const double C31819 =
        (2 * (ae * C152640 + be * C152642 + C152272 * C153039) +
         ae * (C152640 + C152272 * C153211 + C153208 * be) +
         be * (C152642 + C152272 * C153212 + C153208 * ae) +
         C152272 *
             (C153039 + ae * C153211 + be * C153212 +
              C152272 * (ae * C153084 + be * C153086 +
                         C152272 * (2 * C152482 * C153035 +
                                    C152482 * (C153035 +
                                               C152278 *
                                                   (C152323 * C152324 +
                                                    C152275 * bs[9] *
                                                        std::pow(C152274, 9)) *
                                                   C152044 * C152515))))) /
        C152053;
    const double C31817 =
        (2 * (C152272 * C152640 + C152641 * be) +
         C152272 * (C152640 + C152272 * C153211 + C153208 * be) +
         (C152641 + C153085 * C152275) * be) /
        C152045;
    const double C153204 = C153202 + C153197;
    const double C153203 = C153201 + C153194;
    const double C153435 = C153400 + C153432;
    const double C55778 = 5 * (3 * C152752 + C152272 * C152974) +
                          C152272 * (4 * C152974 + C152272 * C153431);
    const double C153434 = C153392 + C153430;
    const double C153485 = C152272 * C153483;
    const double C153484 = C152272 * C153482;
    const double C153140 = C153110 + C153137;
    const double C153150 = C153147 + C153148;
    const double C153149 = C153144 + C153145;
    const double C153233 = C153058 + C153231;
    const double C153232 = C153056 + C153230;
    const double C153273 = C152272 * C153271;
    const double C153272 = C152272 * C153270;
    const double C153547 = C153506 + C153545;
    const double C56521 = 5 * (3 * C152892 + C152272 * C153309) +
                          C152272 * (4 * C153309 + C152272 * C153544);
    const double C153546 = C153500 + C153543;
    const double C153624 = C153619 + C153600;
    const double C153623 = C153577 + C153618;
    const double C153622 = C153616 + C153597;
    const double C191 = C134 * C157;
    const double C422 = C134 * C374;
    const double C826 = C134 * C376;
    const double C659 = C134 * C611;
    const double C7210 = C7161 * C611;
    const double C16075 = C15024 * C611;
    const double C47194 = C47145 * C611;
    const double C98328 = C97277 * C611;
    const double C115674 = C152193 * C611;
    const double C962 = C134 * C613;
    const double C15065 = C15024 * C613;
    const double C97318 = C97277 * C613;
    const double C1168 = C134 * C1144;
    const double C15863 = C15024 * C1144;
    const double C98116 = C97277 * C1144;
    const double C8345 = C7161 * C2332;
    const double C15623 = C15024 * C2332;
    const double C48313 = C47145 * C2332;
    const double C63109 = C63060 * C2332;
    const double C97876 = C97277 * C2332;
    const double C106628 = C106579 * C2332;
    const double C116793 = C152193 * C2332;
    const double C7782 =
        (3 * (C152381 + C152272 * C152543 + C152539 * ae) +
         C152272 * (2 * C152543 + C152272 * C152784 + C152775 * ae) +
         (2 * C152539 + C152272 * C152775) * ae) /
        C152045;
    const double C9281 =
        (3 * (C152509 + C152272 * C152698 + C152694 * ae) +
         C152272 * (2 * C152698 + C152272 * C152873 + C152865 * ae) +
         (2 * C152694 + C152272 * C152865) * ae) /
        C152045;
    const double C152982 = C152955 + C152980;
    const double C29111 = C134 * C28323;
    const double C29248 = C134 * C28467;
    const double C32259 = C7161 * C28467;
    const double C45821 = C15024 * C28467;
    const double C53108 = C47145 * C28467;
    const double C132774 = C97277 * C28467;
    const double C149731 = C152193 * C28467;
    const double C29668 = C134 * C28881;
    const double C44952 = C15024 * C28881;
    const double C131905 = C97277 * C28881;
    const double C33272 = C7161 * C30003;
    const double C45160 = C15024 * C30003;
    const double C54117 = C47145 * C30003;
    const double C68291 = C63060 * C30003;
    const double C132113 = C97277 * C30003;
    const double C135532 = C106579 * C30003;
    const double C150719 = C152193 * C30003;
    const double C31085 =
        (3 * (C152570 + C152272 * C152706 + C152702 * ae) +
         C152272 * (2 * C152706 + C152272 * C153181 + C153172 * ae) +
         (2 * C152702 + C152272 * C153172) * ae) /
        C152045;
    const double C153317 = C153290 + C153315;
    const double C153375 = C153373 + C153356;
    const double C189 = C134 * C156;
    const double C420 = C134 * C373;
    const double C824 = C134 * C375;
    const double C657 = C134 * C610;
    const double C7208 = C7161 * C610;
    const double C16073 = C15024 * C610;
    const double C47192 = C47145 * C610;
    const double C98326 = C97277 * C610;
    const double C115672 = C152193 * C610;
    const double C960 = C134 * C612;
    const double C15063 = C15024 * C612;
    const double C97316 = C97277 * C612;
    const double C1166 = C134 * C1143;
    const double C15861 = C15024 * C1143;
    const double C98114 = C97277 * C1143;
    const double C11899 = C11895 - C11896;
    const double C8346 = C154445 * C2340;
    const double C15624 = C154268 * C2340;
    const double C48314 = C154445 * C2340;
    const double C63110 = C154422 * C2340;
    const double C97877 = C154268 * C2340;
    const double C106629 = C154422 * C2340;
    const double C116794 = C115620 * C2340;
    const double C8343 = C7161 * C2331;
    const double C15621 = C15024 * C2331;
    const double C48311 = C47145 * C2331;
    const double C63107 = C63060 * C2331;
    const double C97874 = C97277 * C2331;
    const double C106626 = C106579 * C2331;
    const double C116791 = C152193 * C2331;
    const double C3209 = C3201 - C3192;
    const double C3962 = C3961 - C3958;
    const double C3208 = C3200 - C3188;
    const double C3499 = C3493 - C3486;
    const double C4298 = C4294 - C4289;
    const double C7787 =
        (3 * (C152304 + ae * C152542 + be * C152543 + C152272 * C152778) +
         ae * (2 * C152542 + C152272 * C152783 + C152775 * be) +
         be * (2 * C152543 + C152272 * C152784 + C152775 * ae) +
         C152272 * (2 * C152778 + ae * C152783 + be * C152784 +
                    C152272 * (C152316 + ae * C152773 + be * C152776 +
                               C152272 * (ae * C152424 + be * C152426 +
                                          C152272 * C152331)))) /
        C152053;
    const double C7781 =
        (3 * (C152379 + C152272 * C152542 + C152539 * be) +
         C152272 * (2 * C152542 + C152272 * C152783 + C152775 * be) +
         (2 * C152539 + C152272 * C152775) * be) /
        C152045;
    const double C152934 = C152923 + C152930;
    const double C28338 = C28333 - C28334;
    const double C35155 = C35151 - C35152;
    const double C28896 = C28891 - C28892;
    const double C9285 =
        (3 * (C152691 + ae * C152697 + be * C152698 + C152272 * C152862) +
         ae * (2 * C152697 + C152272 * C152872 + C152865 * be) +
         be * (2 * C152698 + C152272 * C152873 + C152865 * ae) +
         C152272 *
             (2 * C152862 + ae * C152872 + be * C152873 +
              C152272 * (C152850 + ae * C152863 + be * C152866 +
                         C152272 * (ae * C152851 + be * C152853 +
                                    C152272 * C152482 * C152278 * C152329)))) /
        C152053;
    const double C9280 =
        (3 * (C152507 + C152272 * C152697 + C152694 * be) +
         C152272 * (2 * C152697 + C152272 * C152872 + C152865 * be) +
         (2 * C152694 + C152272 * C152865) * be) /
        C152045;
    const double C153478 = C153465 + C153472;
    const double C152981 = C152949 + C152979;
    const double C153403 = C153383 + C153384;
    const double C153429 = C152272 * C153423;
    const double C29249 = C154181 * C28470;
    const double C32260 = C154445 * C28470;
    const double C45822 = C154268 * C28470;
    const double C53109 = C154445 * C28470;
    const double C132775 = C154268 * C28470;
    const double C149732 = C115620 * C28470;
    const double C29669 = C154181 * C28884;
    const double C44953 = C154268 * C28884;
    const double C131906 = C154268 * C28884;
    const double C29109 = C134 * C28322;
    const double C29246 = C134 * C28466;
    const double C32257 = C7161 * C28466;
    const double C45819 = C15024 * C28466;
    const double C53106 = C47145 * C28466;
    const double C132772 = C97277 * C28466;
    const double C149729 = C152193 * C28466;
    const double C29666 = C134 * C28880;
    const double C44950 = C15024 * C28880;
    const double C131903 = C97277 * C28880;
    const double C33273 = C154445 * C30005;
    const double C45161 = C154268 * C30005;
    const double C54118 = C154445 * C30005;
    const double C68292 = C154422 * C30005;
    const double C132114 = C154268 * C30005;
    const double C135533 = C154422 * C30005;
    const double C150720 = C115620 * C30005;
    const double C33270 = C7161 * C30002;
    const double C45158 = C15024 * C30002;
    const double C54115 = C47145 * C30002;
    const double C68289 = C63060 * C30002;
    const double C132111 = C97277 * C30002;
    const double C135530 = C106579 * C30002;
    const double C150717 = C152193 * C30002;
    const double C31088 =
        (3 * (C152604 + ae * C152705 + be * C152706 + C152272 * C153175) +
         ae * (2 * C152705 + C152272 * C153180 + C153172 * be) +
         be * (2 * C152706 + C152272 * C153181 + C153172 * ae) +
         C152272 * (2 * C153175 + ae * C153180 + be * C153181 +
                    C152272 * (C153030 + ae * C153170 + be * C153173 +
                               C152272 * (ae * C153050 + be * C153052 +
                                          C152272 * C153100)))) /
        C152053;
    const double C31084 =
        (3 * (C152568 + C152272 * C152705 + C152702 * be) +
         C152272 * (2 * C152705 + C152272 * C153180 + C153172 * be) +
         (2 * C152702 + C152272 * C153172) * be) /
        C152045;
    const double C153269 = C153258 + C153265;
    const double C153316 = C153284 + C153314;
    const double C153508 = C153491 + C153492;
    const double C153536 = C152272 * C153532;
    const double C153374 = C153372 + C153353;
    const double C153593 = C153584 + C153562;
    const double C159 = (6 * (4 * C152404 + C152278 * C152436) +
                         C152278 * (5 * C152436 + C152278 * C152478)) /
                        C152045;
    const double C378 =
        (4 * C152404 + C152278 * C152436 + C152478 * C152515) / C152045;
    const double C821 = (C152482 * (5 * C152436 + C152278 * C152478)) / C152045;
    const double C29106 = (6 * (4 * C152661 + C152482 * C153064) +
                           C152482 * (5 * C153064 + C152482 * C153141)) /
                          C152045;
    const double C1152 =
        (ae * C152482 * C152477 + be * C152482 * C152478 +
         C152272 * C152482 *
             (4 * C152333 +
              C152278 *
                  (3 * C152331 +
                   C152278 * (2 * C152278 * C152329 +
                              C152278 * (C152329 + (C152323 * C152324 +
                                                    C152275 * bs[9] *
                                                        std::pow(C152274, 9)) *
                                                       C152044 * C152290))))) /
        C152053;
    const double C158 = (6 * (4 * C152403 + C152278 * C152435) +
                         C152278 * (5 * C152435 + C152278 * C152477)) /
                        C152045;
    const double C377 =
        (4 * C152403 + C152278 * C152435 + C152477 * C152515) / C152045;
    const double C820 = (C152482 * (5 * C152435 + C152278 * C152477)) / C152045;
    const double C29105 = (6 * (4 * C152659 + C152482 * C153062) +
                           C152482 * (5 * C153062 + C152482 * C153139)) /
                          C152045;
    const double C123 =
        (C154477 + 2 * C154016) / C152085 - (C154486 * C154007) / C152045;
    const double C124 = (C154458 + 2 * C154024 + C154486) / C152085 -
                        (C154479 * C154007) / C152045;
    const double C125 = (C154429 + C154021 / C152045 + C154479) / C152085 -
                        (C154460 * C154007) / C152045;
    const double C74059 = C207 * C154487;
    const double C74058 = C206 * C154487;
    const double C74051 = C205 * C154487;
    const double C74261 = C444 * C154487;
    const double C74260 = C443 * C154487;
    const double C74463 = C681 * C154487;
    const double C74462 = C680 * C154487;
    const double C74661 = C442 * C154487;
    const double C74859 = C679 * C154487;
    const double C75121 = C1178 * C154487;
    const double C28192 =
        (C154480 + 2 * C154222) / C152085 - (C154487 * C154218) / C152045;
    const double C34745 = C441 * C34730;
    const double C34742 = C442 * C34730;
    const double C34737 = C443 * C34730;
    const double C34947 = C3213 * C34730;
    const double C34944 = C444 * C34730;
    const double C35149 = C3502 * C34730;
    const double C35146 = C1178 * C34730;
    const double C35354 = C445 * C34730;
    const double C35552 = C1179 * C34730;
    const double C35814 = C3501 * C34730;
    const double C74060 = C441 * C154483;
    const double C74057 = C442 * C154483;
    const double C74052 = C443 * C154483;
    const double C74262 = C3213 * C154483;
    const double C74259 = C444 * C154483;
    const double C74464 = C3502 * C154483;
    const double C74461 = C1178 * C154483;
    const double C74662 = C445 * C154483;
    const double C74860 = C1179 * C154483;
    const double C75122 = C3501 * C154483;
    const double C28193 = (C154468 + 2 * C154229 + C154487) / C152085 -
                          (C154483 * C154218) / C152045;
    const double C28194 = (C154442 + C154226 / C152045 + C154483) / C152085 -
                          (C154473 * C154218) / C152045;
    const double C152166 = C152161 - C152162;
    const double C152170 = C152165 - C152158;
    const double C7205 = C7160 * C580;
    const double C7193 = C7160 * C581;
    const double C7181 = C7160 * C582;
    const double C7169 = C7160 * C583;
    const double C7513 = C7160 * C1974;
    const double C7501 = C7160 * C1975;
    const double C7489 = C7160 * C1130;
    const double C7477 = C7160 * C1131;
    const double C7831 = C7160 * C2326;
    const double C7819 = C7160 * C2327;
    const double C7807 = C7160 * C586;
    const double C7795 = C7160 * C587;
    const double C8098 = C7160 * C1132;
    const double C8340 = C7160 * C588;
    const double C8669 = C7160 * C1543;
    const double C8657 = C7160 * C1544;
    const double C30818 = C7160 * C4255;
    const double C30806 = C7160 * C4254;
    const double C30794 = C7160 * C1976;
    const double C30782 = C7160 * C1129;
    const double C31850 = C7160 * C3442;
    const double C31838 = C7160 * C1545;
    const double C31826 = C7160 * C3441;
    const double C32254 = C7160 * C5659;
    const double C32510 = C7160 * C6262;
    const double C32498 = C7160 * C6263;
    const double C33267 = C7160 * C4907;
    const double C78238 = C7160 * C6261;
    const double C15060 = C15023 * C141;
    const double C15056 = C15023 * C140;
    const double C15044 = C15023 * C139;
    const double C15036 = C15023 * C138;
    const double C15028 = C15023 * C137;
    const double C15340 = C15023 * C351;
    const double C15332 = C15023 * C350;
    const double C15324 = C15023 * C349;
    const double C15320 = C15023 * C346;
    const double C15312 = C15023 * C345;
    const double C15304 = C15023 * C344;
    const double C15618 = C15023 * C588;
    const double C15610 = C15023 * C587;
    const double C15602 = C15023 * C586;
    const double C15598 = C15023 * C583;
    const double C15590 = C15023 * C582;
    const double C15582 = C15023 * C581;
    const double C15858 = C15023 * C343;
    const double C16070 = C15023 * C580;
    const double C16360 = C15023 * C1132;
    const double C16352 = C15023 * C1131;
    const double C16344 = C15023 * C1130;
    const double C19235 = C15023 * C1401;
    const double C19226 = C15023 * C1402;
    const double C19221 = C15023 * C348;
    const double C19205 = C15023 * C347;
    const double C19565 = C15023 * C1543;
    const double C19557 = C15023 * C1544;
    const double C20578 = C15023 * C1974;
    const double C20569 = C15023 * C1975;
    const double C20564 = C15023 * C1129;
    const double C21088 = C15023 * C1403;
    const double C21392 = C15023 * C1545;
    const double C22372 = C15023 * C1976;
    const double C38633 = C15023 * C3140;
    const double C38937 = C15023 * C3442;
    const double C39919 = C15023 * C4255;
    const double C40418 = C15023 * C3139;
    const double C40722 = C15023 * C3441;
    const double C41703 = C15023 * C4254;
    const double C44947 = C15023 * C4670;
    const double C45155 = C15023 * C4907;
    const double C45816 = C15023 * C5659;
    const double C47185 = C47142 * C140;
    const double C47181 = C47142 * C139;
    const double C47161 = C47142 * C138;
    const double C47149 = C47142 * C137;
    const double C47493 = C47142 * C350;
    const double C47481 = C47142 * C349;
    const double C47477 = C47142 * C346;
    const double C47465 = C47142 * C345;
    const double C47795 = C47142 * C587;
    const double C47783 = C47142 * C586;
    const double C47779 = C47142 * C583;
    const double C47767 = C47142 * C582;
    const double C48062 = C47142 * C344;
    const double C48304 = C47142 * C581;
    const double C48629 = C47142 * C1131;
    const double C48617 = C47142 * C1130;
    const double C51675 = C47142 * C1402;
    const double C51671 = C47142 * C1403;
    const double C51651 = C47142 * C348;
    const double C51639 = C47142 * C347;
    const double C52695 = C47142 * C1975;
    const double C52691 = C47142 * C1129;
    const double C52679 = C47142 * C1976;
    const double C53099 = C47142 * C3139;
    const double C53351 = C47142 * C3441;
    const double C53339 = C47142 * C1545;
    const double C54108 = C47142 * C4254;
    const double C58449 = C47142 * C1544;
    const double C47189 = C47144 * C580;
    const double C47177 = C47144 * C581;
    const double C47165 = C47144 * C582;
    const double C47153 = C47144 * C583;
    const double C47497 = C47144 * C1974;
    const double C47485 = C47144 * C1975;
    const double C47473 = C47144 * C1130;
    const double C47461 = C47144 * C1131;
    const double C47799 = C47144 * C2326;
    const double C47787 = C47144 * C2327;
    const double C47775 = C47144 * C586;
    const double C47763 = C47144 * C587;
    const double C48066 = C47144 * C1132;
    const double C48308 = C47144 * C588;
    const double C48633 = C47144 * C1543;
    const double C48621 = C47144 * C1544;
    const double C51679 = C47144 * C4255;
    const double C51667 = C47144 * C4254;
    const double C51655 = C47144 * C1976;
    const double C51643 = C47144 * C1129;
    const double C52699 = C47144 * C3442;
    const double C52687 = C47144 * C1545;
    const double C52675 = C47144 * C3441;
    const double C53103 = C47144 * C5659;
    const double C53355 = C47144 * C6262;
    const double C53343 = C47144 * C6263;
    const double C54112 = C47144 * C4907;
    const double C58453 = C47144 * C6261;
    const double C7221 = C7200 - C7201;
    const double C7220 = C7196 - C7197;
    const double C7215 = C7176 - C7177;
    const double C7212 = C7164 - C7165;
    const double C7529 = C7508 - C7509;
    const double C7526 = C7496 - C7497;
    const double C7525 = C7492 - C7493;
    const double C7522 = C7480 - C7481;
    const double C7847 = C7826 - C7827;
    const double C7844 = C7814 - C7815;
    const double C7843 = C7810 - C7811;
    const double C7840 = C7798 - C7799;
    const double C8106 = C8093 - C8094;
    const double C8348 = C8335 - C8336;
    const double C8679 = C8664 - C8665;
    const double C8676 = C8652 - C8653;
    const double C30835 = C30813 - C30814;
    const double C30834 = C30809 - C30810;
    const double C30829 = C30789 - C30790;
    const double C30826 = C30777 - C30778;
    const double C31863 = C31845 - C31846;
    const double C31862 = C31841 - C31842;
    const double C31859 = C31829 - C31830;
    const double C32262 = C32249 - C32250;
    const double C32520 = C32505 - C32506;
    const double C32517 = C32493 - C32494;
    const double C33275 = C33262 - C33263;
    const double C78245 = C78233 - C78234;
    const double C7218 = C7188 - C7189;
    const double C7217 = C7184 - C7185;
    const double C7214 = C7172 - C7173;
    const double C7531 = C7516 - C7517;
    const double C7528 = C7504 - C7505;
    const double C7523 = C7484 - C7485;
    const double C7520 = C7472 - C7473;
    const double C7841 = C7802 - C7803;
    const double C7838 = C7790 - C7791;
    const double C8108 = C8101 - C8102;
    const double C8681 = C8672 - C8673;
    const double C8678 = C8660 - C8661;
    const double C30837 = C30821 - C30822;
    const double C30832 = C30801 - C30802;
    const double C30831 = C30797 - C30798;
    const double C30828 = C30785 - C30786;
    const double C31865 = C31853 - C31854;
    const double C31860 = C31833 - C31834;
    const double C31857 = C31821 - C31822;
    const double C15073 = C15051 - C15052;
    const double C15072 = C15047 - C15048;
    const double C15070 = C15039 - C15040;
    const double C15068 = C15031 - C15032;
    const double C15358 = C15343 - C15344;
    const double C15356 = C15335 - C15336;
    const double C15354 = C15327 - C15328;
    const double C15351 = C15315 - C15316;
    const double C15349 = C15307 - C15308;
    const double C15347 = C15299 - C15300;
    const double C15634 = C15613 - C15614;
    const double C15632 = C15605 - C15606;
    const double C15629 = C15593 - C15594;
    const double C15627 = C15585 - C15586;
    const double C15625 = C15577 - C15578;
    const double C16372 = C16363 - C16364;
    const double C16370 = C16355 - C16356;
    const double C16368 = C16347 - C16348;
    const double C19249 = C19238 - C19239;
    const double C19247 = C19229 - C19230;
    const double C19244 = C19216 - C19217;
    const double C19243 = C19208 - C19209;
    const double C19575 = C19568 - C19569;
    const double C19573 = C19560 - C19561;
    const double C20590 = C20581 - C20582;
    const double C20588 = C20572 - C20573;
    const double C20585 = C20559 - C20560;
    const double C21096 = C21091 - C21092;
    const double C21400 = C21395 - C21396;
    const double C22380 = C22375 - C22376;
    const double C38641 = C38636 - C38637;
    const double C38945 = C38940 - C38941;
    const double C39927 = C39922 - C39923;
    const double C40426 = C40421 - C40422;
    const double C40730 = C40725 - C40726;
    const double C41711 = C41706 - C41707;
    const double C47202 = C47172 - C47173;
    const double C47201 = C47168 - C47169;
    const double C47198 = C47156 - C47157;
    const double C47515 = C47500 - C47501;
    const double C47512 = C47488 - C47489;
    const double C47507 = C47468 - C47469;
    const double C47504 = C47456 - C47457;
    const double C47809 = C47770 - C47771;
    const double C47806 = C47758 - C47759;
    const double C48076 = C48069 - C48070;
    const double C48645 = C48636 - C48637;
    const double C48642 = C48624 - C48625;
    const double C51698 = C51682 - C51683;
    const double C51693 = C51662 - C51663;
    const double C51692 = C51658 - C51659;
    const double C51689 = C51646 - C51647;
    const double C52714 = C52702 - C52703;
    const double C52709 = C52682 - C52683;
    const double C52706 = C52670 - C52671;
    const double C63115 = C63079 - C63080;
    const double C63114 = C63075 - C63076;
    const double C63380 = C63369 - C63370;
    const double C63373 = C63341 - C63342;
    const double C63860 = C63853 - C63854;
    const double C67065 = C67045 - C67046;
    const double C67064 = C67041 - C67042;
    const double C97326 = C97304 - C97305;
    const double C97325 = C97300 - C97301;
    const double C97323 = C97292 - C97293;
    const double C97321 = C97284 - C97285;
    const double C97611 = C97596 - C97597;
    const double C97609 = C97588 - C97589;
    const double C97607 = C97580 - C97581;
    const double C97604 = C97568 - C97569;
    const double C97602 = C97560 - C97561;
    const double C97600 = C97552 - C97553;
    const double C97887 = C97866 - C97867;
    const double C97885 = C97858 - C97859;
    const double C97882 = C97846 - C97847;
    const double C97880 = C97838 - C97839;
    const double C97878 = C97830 - C97831;
    const double C98625 = C98616 - C98617;
    const double C98623 = C98608 - C98609;
    const double C98621 = C98600 - C98601;
    const double C101514 = C101498 - C101499;
    const double C101512 = C101490 - C101491;
    const double C101509 = C101478 - C101479;
    const double C101507 = C101468 - C101469;
    const double C101506 = C101462 - C101463;
    const double C101504 = C101454 - C101455;
    const double C101861 = C101852 - C101853;
    const double C101859 = C101844 - C101845;
    const double C101856 = C101832 - C101833;
    const double C102465 = C102460 - C102461;
    const double C102889 = C102880 - C102881;
    const double C102886 = C102866 - C102867;
    const double C102884 = C102858 - C102859;
    const double C103396 = C103391 - C103392;
    const double C103710 = C103703 - C103704;
    const double C103708 = C103695 - C103696;
    const double C104695 = C104690 - C104691;
    const double C111013 = C111008 - C111009;
    const double C106634 = C106598 - C106599;
    const double C106633 = C106594 - C106595;
    const double C106899 = C106888 - C106889;
    const double C106892 = C106860 - C106861;
    const double C107379 = C107372 - C107373;
    const double C134306 = C134286 - C134287;
    const double C134305 = C134282 - C134283;
    const double C115682 = C115652 - C115653;
    const double C115681 = C115648 - C115649;
    const double C115678 = C115636 - C115637;
    const double C115995 = C115980 - C115981;
    const double C115992 = C115968 - C115969;
    const double C115987 = C115948 - C115949;
    const double C115984 = C115936 - C115937;
    const double C116289 = C116250 - C116251;
    const double C116286 = C116238 - C116239;
    const double C116556 = C116549 - C116550;
    const double C117125 = C117116 - C117117;
    const double C117122 = C117104 - C117105;
    const double C120290 = C120274 - C120275;
    const double C120284 = C120253 - C120254;
    const double C120280 = C120246 - C120247;
    const double C121621 = C121610 - C121611;
    const double C121615 = C121589 - C121590;
    const double C122132 = C122126 - C122127;
    const double C123430 = C123424 - C123425;
    const double C152127 = C152122 / C152085;
    const double C152126 = C152043 * C152122;
    const double C152159 = 2 * C152122;
    const double C209 = C203 + C188;
    const double C3510 = C3504 * C154468;
    const double C11893 = C3504 * C154226;
    const double C24751 = C3504 * C24271;
    const double C70924 = C3504 * C154226;
    const double C83332 = C3504 * C154229;
    const double C3221 = C3215 * C154442;
    const double C24519 = C3215 * C154442;
    const double C34948 = C3215 * C34731;
    const double C34942 = C3215 * C154415;
    const double C74263 = C3215 * C154473;
    const double C74257 = C3215 * C154415;
    const double C83100 = C3215 * C82853;
    const double C3509 = C3503 * C154442;
    const double C24749 = C3503 * C154442;
    const double C35150 = C3503 * C34731;
    const double C74465 = C3503 * C154473;
    const double C83330 = C3503 * C82853;
    const double C4303 = C4301 * C154442;
    const double C25491 = C4301 * C154442;
    const double C35144 = C4301 * C154415;
    const double C35815 = C4301 * C34731;
    const double C74459 = C4301 * C154415;
    const double C75123 = C4301 * C154473;
    const double C84072 = C4301 * C82853;
    const double C7846 = C7822 - C7823;
    const double C47814 = C47790 - C47791;
    const double C63623 = C63591 - C63592;
    const double C107142 = C107110 - C107111;
    const double C116294 = C116270 - C116271;
    const double C28341 = C28339 + C28332;
    const double C29254 = C29252 + C29245;
    const double C28899 = C28897 + C28890;
    const double C32519 = C32501 - C32502;
    const double C53364 = C53346 - C53347;
    const double C67941 = C67925 - C67926;
    const double C122443 = C122437 - C122438;
    const double C135182 = C135166 - C135167;
    const double C10603 =
        (4 * (2 * C152559 + C152272 * C152738 + C152729 * ae) +
         C152272 * (3 * C152738 + C152272 * C153026 + C153016 * ae) +
         (3 * C152729 + C152272 * C153016) * ae) /
        C152045;
    const double C10606 =
        (4 * (2 * C152732 + ae * C152737 + be * C152738 + C152272 * C153018) +
         ae * (3 * C152737 + C152272 * C153025 + C153016 * be) +
         be * (3 * C152738 + C152272 * C153026 + C153016 * ae) +
         C152272 *
             (3 * C153018 + ae * C153025 + be * C153026 +
              C152272 * (2 * C153008 + ae * C153019 + be * C153020 +
                         C152272 * (C152302 + ae * C153002 + be * C153005 +
                                    C152272 * (ae * C152390 + be * C152394 +
                                               C152272 * C152314))))) /
        C152053;
    const double C10602 =
        (4 * (2 * C152558 + C152272 * C152737 + C152729 * be) +
         C152272 * (3 * C152737 + C152272 * C153025 + C153016 * be) +
         (3 * C152729 + C152272 * C153016) * be) /
        C152045;
    const double C153371 = C153349 + C153367;
    const double C2919 = C2913 + C2914;
    const double C11483 = C11475 + C11474;
    const double C11481 = C11474 + C11475;
    const double C24290 = C24284 + C24285;
    const double C70514 = C70506 + C70505;
    const double C70512 = C70505 + C70506;
    const double C82871 = C82865 + C82866;
    const double C2920 = C2918 + C2911;
    const double C3730 = C3168 + C3169;
    const double C12098 = C11680 + C11681;
    const double C24291 = C24289 + C24282;
    const double C24971 = C24512 + C24513;
    const double C71122 = C70711 + C70712;
    const double C82872 = C82870 + C82863;
    const double C83552 = C83093 + C83094;
    const double C3953 = C3462 + C3463;
    const double C12296 = C11886 + C11887;
    const double C25194 = C24742 + C24743;
    const double C71320 = C70917 + C70918;
    const double C83775 = C83323 + C83324;
    const double C440 = C432 + C395;
    const double C446 = C438 + C419;
    const double C677 = C669 + C632;
    const double C683 = C675 + C656;
    const double C1180 = C1176 + C1165;
    const double C167 =
        (6 * (4 * C152318 + C152278 * C152335) +
         C152278 *
             (5 * C152335 +
              C152278 *
                  (4 * C152333 +
                   C152278 *
                       (3 * C152331 +
                        C152278 *
                            (2 * C152278 * C152329 +
                             C152278 * (C152329 + (C152323 * C152324 +
                                                   C152275 * bs[9] *
                                                       std::pow(C152274, 9)) *
                                                      C152044 * C152290)))))) /
        C152053;
    const double C388 =
        (3 * C152304 + C152278 * C152318 + C152335 * std::pow(yP - yQ, 2)) /
        C152053;
    const double C389 =
        ((yP - yQ) * (4 * C152318 + C152278 * C152335)) / C152053;
    const double C390 =
        (4 * C152318 + C152278 * C152335 +
         (4 * C152333 +
          C152278 *
              (3 * C152331 +
               C152278 * (2 * C152278 * C152329 +
                          C152278 * (C152329 +
                                     (C152323 * C152324 +
                                      C152275 * bs[9] * std::pow(C152274, 9)) *
                                         C152044 * C152290)))) *
             std::pow(yP - yQ, 2)) /
        C152053;
    const double C625 =
        (3 * C152304 + C152278 * C152318 +
         ae * (C152272 * C152435 + C152431 * be) +
         be * (C152272 * C152436 + C152431 * ae) +
         C152272 * (ae * C152435 + be * C152436 + C152272 * C152335)) /
        C152053;
    const double C626 = (ae * (4 * C152403 + C152278 * C152435) +
                         be * (4 * C152404 + C152278 * C152436) +
                         C152272 * (4 * C152318 + C152278 * C152335)) /
                        C152053;
    const double C822 =
        ((yP - yQ) *
         (5 * C152335 +
          C152278 *
              (4 * C152333 +
               C152278 * (3 * C152331 +
                          C152278 * (2 * C152278 * C152329 +
                                     C152278 * (C152329 +
                                                (C152323 * C152324 +
                                                 C152275 * bs[9] *
                                                     std::pow(C152274, 9)) *
                                                    C152044 * C152290)))))) /
        C152053;
    const double C958 =
        (ae * (5 * C152435 + C152278 * C152477) +
         be * (5 * C152436 + C152278 * C152478) +
         C152272 *
             (5 * C152335 +
              C152278 *
                  (4 * C152333 +
                   C152278 *
                       (3 * C152331 +
                        C152278 *
                            (2 * C152278 * C152329 +
                             C152278 * (C152329 + (C152323 * C152324 +
                                                   C152275 * bs[9] *
                                                       std::pow(C152274, 9)) *
                                                      C152044 * C152290)))))) /
        C152053;
    const double C1151 = (ae * C152482 * C152435 + be * C152482 * C152436 +
                          C152272 * C152482 * C152335) /
                         C152053;
    const double C1414 =
        (2 * C152482 * C152335 +
         C152482 *
             (C152335 +
              (3 * C152331 +
               C152278 * (2 * C152278 * C152329 +
                          C152278 * (C152329 +
                                     (C152323 * C152324 +
                                      C152275 * bs[9] * std::pow(C152274, 9)) *
                                         C152044 * C152290))) *
                  std::pow(C152482, 2))) /
        C152053;
    const double C1556 =
        (C152482 * C152335 + ae * (C152272 * C152495 + C152496 * be) +
         be * (C152272 * C152497 + C152496 * ae) +
         C152272 *
             (ae * C152495 + be * C152497 +
              C152272 * C152482 *
                  (3 * C152331 +
                   C152278 * (2 * C152278 * C152329 +
                              C152278 * (C152329 + (C152323 * C152324 +
                                                    C152275 * bs[9] *
                                                        std::pow(C152274, 9)) *
                                                       C152044 * C152290))))) /
        C152053;
    const double C1987 =
        (ae * (C152435 + C152472 * C152515) +
         be * (C152436 + C152474 * C152515) +
         C152272 *
             (C152335 +
              (3 * C152331 +
               C152278 * (2 * C152278 * C152329 +
                          C152278 * (C152329 +
                                     (C152323 * C152324 +
                                      C152275 * bs[9] * std::pow(C152274, 9)) *
                                         C152044 * C152290))) *
                  C152515)) /
        C152053;
    const double C29107 =
        (6 * (4 * C153032 + C152482 * C153104) +
         C152482 *
             (5 * C153104 +
              C152482 *
                  (4 * C153102 +
                   C152482 *
                       (3 * C153100 +
                        C152482 *
                            (2 * C152482 * C152329 +
                             C152482 * (C152329 + (C152323 * C152324 +
                                                   C152275 * bs[9] *
                                                       std::pow(C152274, 9)) *
                                                      C152044 * C152515)))))) /
        C152053;
    const double C29664 =
        (ae * (5 * C153062 + C152482 * C153139) +
         be * (5 * C153064 + C152482 * C153141) +
         C152272 *
             (5 * C153104 +
              C152482 *
                  (4 * C153102 +
                   C152482 *
                       (3 * C153100 +
                        C152482 *
                            (2 * C152482 * C152329 +
                             C152482 * (C152329 + (C152323 * C152324 +
                                                   C152275 * bs[9] *
                                                       std::pow(C152274, 9)) *
                                                      C152044 * C152515)))))) /
        C152053;
    const double C627 =
        (4 * C152318 + C152278 * C152335 +
         ae * (C152272 * C152477 + C152473 * be) +
         be * (C152272 * C152478 + C152473 * ae) +
         C152272 *
             (ae * C152477 + be * C152478 +
              C152272 *
                  (4 * C152333 +
                   C152278 *
                       (3 * C152331 +
                        C152278 *
                            (2 * C152278 * C152329 +
                             C152278 * (C152329 + (C152323 * C152324 +
                                                   C152275 * bs[9] *
                                                       std::pow(C152274, 9)) *
                                                      C152044 * C152290)))))) /
        C152053;
    const double C614 = (4 * C152403 + C152278 * C152435 +
                         C152272 * (C152272 * C152477 + C152473 * be) +
                         C152272 * C152473 * be) /
                        C152045;
    const double C615 = (4 * C152404 + C152278 * C152436 +
                         C152272 * (C152272 * C152478 + C152473 * ae) +
                         C152272 * C152473 * ae) /
                        C152045;
    const double C956 = (C152272 * (5 * C152435 + C152278 * C152477) +
                         (5 * C152431 + C152278 * C152473) * be) /
                        C152045;
    const double C957 = (C152272 * (5 * C152436 + C152278 * C152478) +
                         (5 * C152431 + C152278 * C152473) * ae) /
                        C152045;
    const double C1145 =
        (C152272 * C152482 * C152477 + C152482 * C152473 * be) / C152045;
    const double C1146 =
        (C152272 * C152482 * C152478 + C152482 * C152473 * ae) / C152045;
    const double C143 = 6 * (4 * C152399 + C152278 * C152431) +
                        C152278 * (5 * C152431 + C152278 * C152473);
    const double C354 = 4 * C152399 + C152278 * C152431 + C152473 * C152515;
    const double C591 = 4 * C152399 + C152278 * C152431 + C152473 * C152275;
    const double C819 = C152482 * (5 * C152431 + C152278 * C152473);
    const double C955 = C152272 * (5 * C152431 + C152278 * C152473);
    const double C1134 = C152272 * C152482 * C152473;
    const double C2330 =
        (2 * (C152272 * C152436 + C152431 * ae) +
         C152272 * (C152436 + C152272 * C152527 + C152523 * ae) +
         (C152431 + C152467 * C152275) * ae) /
        C152045;
    const double C2339 =
        (2 * (ae * C152435 + be * C152436 + C152272 * C152335) +
         ae * (C152435 + C152272 * C152526 + C152523 * be) +
         be * (C152436 + C152272 * C152527 + C152523 * ae) +
         C152272 *
             (C152335 + ae * C152526 + be * C152527 +
              C152272 *
                  (ae * C152472 + be * C152474 +
                   C152272 *
                       (3 * C152331 +
                        C152278 *
                            (2 * C152278 * C152329 +
                             C152278 * (C152329 + (C152323 * C152324 +
                                                   C152275 * bs[9] *
                                                       std::pow(C152274, 9)) *
                                                      C152044 * C152290)))))) /
        C152053;
    const double C2329 =
        (2 * (C152272 * C152435 + C152431 * be) +
         C152272 * (C152435 + C152272 * C152526 + C152523 * be) +
         (C152431 + C152467 * C152275) * be) /
        C152045;
    const double C152807 = C152805 + C152800;
    const double C152806 = C152804 + C152797;
    const double C9279 =
        (3 * (C152505 + C152272 * C152681 + C152677 * ae) +
         C152272 * (2 * C152681 + C152272 * C152846 + C152838 * ae) +
         (2 * C152677 + C152272 * C152838) * ae) /
        C152045;
    const double C9284 =
        (3 * (C152674 + ae * C152680 + be * C152681 + C152272 * C152835) +
         ae * (2 * C152680 + C152272 * C152845 + C152838 * be) +
         be * (2 * C152681 + C152272 * C152846 + C152838 * ae) +
         C152272 *
             (2 * C152835 + ae * C152845 + be * C152846 +
              C152272 * (C152823 + ae * C152836 + be * C152839 +
                         C152272 * (ae * C152824 + be * C152826 +
                                    C152272 * C152482 *
                                        (C152329 + (C152323 * C152324 +
                                                    C152275 * bs[9] *
                                                        std::pow(C152274, 9)) *
                                                       C152044 * C152290))))) /
        C152053;
    const double C9278 =
        (3 * (C152503 + C152272 * C152680 + C152677 * be) +
         C152272 * (2 * C152680 + C152272 * C152845 + C152838 * be) +
         (2 * C152677 + C152272 * C152838) * be) /
        C152045;
    const double C152940 = C152913 + C152938;
    const double C152939 = C152907 + C152937;
    const double C31087 =
        (3 * (C152577 + C152272 * C152689 + C152685 * ae) +
         C152272 * (2 * C152689 + C152272 * C153204 + C153195 * ae) +
         (2 * C152685 + C152272 * C153195) * ae) /
        C152045;
    const double C31089 =
        (3 * (C152601 + ae * C152688 + be * C152689 + C152272 * C153198) +
         ae * (2 * C152688 + C152272 * C153203 + C153195 * be) +
         be * (2 * C152689 + C152272 * C153204 + C153195 * ae) +
         C152272 *
             (2 * C153198 + ae * C153203 + be * C153204 +
              C152272 * (C153037 + ae * C153193 + be * C153196 +
                         C152272 * (ae * C153078 + be * C153080 +
                                    C152272 * (C153035 +
                                               C152278 *
                                                   (C152323 * C152324 +
                                                    C152275 * bs[9] *
                                                        std::pow(C152274, 9)) *
                                                   C152044 * C152515))))) /
        C152053;
    const double C31086 =
        (3 * (C152575 + C152272 * C152688 + C152685 * be) +
         C152272 * (2 * C152688 + C152272 * C153203 + C153195 * be) +
         (2 * C152685 + C152272 * C153195) * be) /
        C152045;
    const double C153437 = C153435 + C153418;
    const double C153436 = C153434 + C153415;
    const double C153487 = C153454 + C153485;
    const double C153486 = C153450 + C153484;
    const double C29240 =
        (4 * C153032 + C152482 * C153104 +
         ae * (C152272 * C153139 + C153140 * be) +
         be * (C152272 * C153141 + C153140 * ae) +
         C152272 *
             (ae * C153139 + be * C153141 +
              C152272 *
                  (4 * C153102 +
                   C152482 *
                       (3 * C153100 +
                        C152482 *
                            (2 * C152482 * C152329 +
                             C152482 * (C152329 + (C152323 * C152324 +
                                                   C152275 * bs[9] *
                                                       std::pow(C152274, 9)) *
                                                      C152044 * C152515)))))) /
        C152053;
    const double C29238 = (4 * C152659 + C152482 * C153062 +
                           C152272 * (C152272 * C153139 + C153140 * be) +
                           C152272 * C153140 * be) /
                          C152045;
    const double C29239 = (4 * C152661 + C152482 * C153064 +
                           C152272 * (C152272 * C153141 + C153140 * ae) +
                           C152272 * C153140 * ae) /
                          C152045;
    const double C29662 = (C152272 * (5 * C153062 + C152482 * C153139) +
                           (5 * C153063 + C152482 * C153140) * be) /
                          C152045;
    const double C29663 = (C152272 * (5 * C153064 + C152482 * C153141) +
                           (5 * C153063 + C152482 * C153140) * ae) /
                          C152045;
    const double C29104 = 6 * (4 * C152660 + C152482 * C153063) +
                          C152482 * (5 * C153063 + C152482 * C153140);
    const double C29237 = 4 * C152660 + C152482 * C153063 + C153140 * C152275;
    const double C29661 = C152272 * (5 * C153063 + C152482 * C153140);
    const double C30001 =
        (2 * (C152272 * C153064 + C153063 * ae) +
         C152272 * (C153064 + C152272 * C153150 + C153146 * ae) +
         (C153063 + C153134 * C152275) * ae) /
        C152045;
    const double C30004 =
        (2 * (ae * C153062 + be * C153064 + C152272 * C153104) +
         ae * (C153062 + C152272 * C153149 + C153146 * be) +
         be * (C153064 + C152272 * C153150 + C153146 * ae) +
         C152272 *
             (C153104 + ae * C153149 + be * C153150 +
              C152272 *
                  (ae * C153133 + be * C153135 +
                   C152272 *
                       (3 * C153100 +
                        C152482 *
                            (2 * C152482 * C152329 +
                             C152482 * (C152329 + (C152323 * C152324 +
                                                   C152275 * bs[9] *
                                                       std::pow(C152274, 9)) *
                                                      C152044 * C152515)))))) /
        C152053;
    const double C30000 =
        (2 * (C152272 * C153062 + C153063 * be) +
         C152272 * (C153062 + C152272 * C153149 + C153146 * be) +
         (C153063 + C153134 * C152275) * be) /
        C152045;
    const double C153235 = C153233 + C153228;
    const double C153234 = C153232 + C153225;
    const double C153275 = C153248 + C153273;
    const double C153274 = C153242 + C153272;
    const double C153549 = C153547 + C153531;
    const double C153548 = C153546 + C153528;
    const double C153627 = C152272 * C153624;
    const double C57257 = 6 * (4 * C153016 + C152272 * C153369) +
                          C152272 * (5 * C153369 + C152272 * C153623);
    const double C153626 = C152272 * C153622;
    const double C7836 = C7161 * C7782;
    const double C47804 = C47145 * C7782;
    const double C64077 = C63060 * C7782;
    const double C107596 = C106579 * C7782;
    const double C116284 = C152193 * C7782;
    const double C58458 = C47145 * C9281;
    const double C64363 = C63060 * C9281;
    const double C78243 = C7161 * C9281;
    const double C107882 = C106579 * C9281;
    const double C120609 = C152193 * C9281;
    const double C152984 = C152982 + C152971;
    const double C32515 = C7161 * C31085;
    const double C53360 = C47145 * C31085;
    const double C69187 = C63060 * C31085;
    const double C136428 = C106579 * C31085;
    const double C149971 = C152193 * C31085;
    const double C153319 = C153317 + C153306;
    const double C153377 = C152272 * C153375;
    const double C153578 = 4 * C153375;
    const double C153559 = be * C153375;
    const double C198 = C189 - C190;
    const double C431 = C420 - C421;
    const double C828 = C824 - C825;
    const double C668 = C657 - C658;
    const double C7223 = C7208 - C7209;
    const double C16080 = C16073 - C16074;
    const double C47207 = C47192 - C47193;
    const double C98333 = C98326 - C98327;
    const double C115687 = C115672 - C115673;
    const double C964 = C960 - C961;
    const double C15076 = C15063 - C15064;
    const double C97329 = C97316 - C97317;
    const double C1173 = C1166 - C1167;
    const double C15868 = C15861 - C15862;
    const double C98121 = C98114 - C98115;
    const double C11900 = C11899 - C11897;
    const double C8350 = C8343 - C8344;
    const double C15636 = C15621 - C15622;
    const double C48318 = C48311 - C48312;
    const double C63122 = C63107 - C63108;
    const double C97889 = C97874 - C97875;
    const double C106641 = C106626 - C106627;
    const double C116798 = C116791 - C116792;
    const double C3217 = C3209 + C3193;
    const double C3963 = C3962 + C3959;
    const double C3216 = C3208 + C3189;
    const double C3505 = C3499 + C3487;
    const double C4302 = C4298 + C4290;
    const double C7837 = C154445 * C7787;
    const double C47805 = C154445 * C7787;
    const double C64078 = C154422 * C7787;
    const double C107597 = C154422 * C7787;
    const double C116285 = C115620 * C7787;
    const double C7834 = C7161 * C7781;
    const double C47802 = C47145 * C7781;
    const double C64075 = C63060 * C7781;
    const double C107594 = C106579 * C7781;
    const double C116282 = C152193 * C7781;
    const double C28340 = C28338 - C28335;
    const double C35156 = C35155 - C35153;
    const double C28898 = C28896 - C28893;
    const double C58459 = C154445 * C9285;
    const double C64364 = C154422 * C9285;
    const double C78244 = C154445 * C9285;
    const double C107883 = C154422 * C9285;
    const double C120610 = C115620 * C9285;
    const double C58456 = C47145 * C9280;
    const double C64361 = C63060 * C9280;
    const double C78241 = C7161 * C9280;
    const double C107880 = C106579 * C9280;
    const double C120607 = C152193 * C9280;
    const double C152983 = C152981 + C152968;
    const double C153411 = C153403 + C153385;
    const double C29113 = C29109 - C29110;
    const double C29251 = C29246 - C29247;
    const double C32264 = C32257 - C32258;
    const double C45824 = C45819 - C45820;
    const double C53113 = C53106 - C53107;
    const double C132777 = C132772 - C132773;
    const double C149736 = C149729 - C149730;
    const double C29670 = C29666 - C29667;
    const double C44955 = C44950 - C44951;
    const double C131908 = C131903 - C131904;
    const double C33277 = C33270 - C33271;
    const double C45163 = C45158 - C45159;
    const double C54122 = C54115 - C54116;
    const double C68296 = C68289 - C68290;
    const double C132116 = C132111 - C132112;
    const double C135537 = C135530 - C135531;
    const double C150724 = C150717 - C150718;
    const double C32516 = C154445 * C31088;
    const double C53361 = C154445 * C31088;
    const double C69188 = C154422 * C31088;
    const double C136429 = C154422 * C31088;
    const double C149972 = C115620 * C31088;
    const double C32513 = C7161 * C31084;
    const double C53358 = C47145 * C31084;
    const double C69185 = C63060 * C31084;
    const double C136426 = C106579 * C31084;
    const double C149969 = C152193 * C31084;
    const double C153318 = C153316 + C153303;
    const double C153518 = C153508 + C153493;
    const double C153376 = C152272 * C153374;
    const double C153568 = 4 * C153374;
    const double C153558 = ae * C153374;
    const double C153615 = C153593 + C153611;
    const double C152171 = C152166 * be;
    const double C152173 = C152170 * ae;
    const double C97276 = -(C152170 * be) / C152045;
    const double C7222 = C7204 - C7205;
    const double C7219 = C7192 - C7193;
    const double C7216 = C7180 - C7181;
    const double C7213 = C7168 - C7169;
    const double C7530 = C7512 - C7513;
    const double C7527 = C7500 - C7501;
    const double C7524 = C7488 - C7489;
    const double C7521 = C7476 - C7477;
    const double C7848 = C7830 - C7831;
    const double C7845 = C7818 - C7819;
    const double C7842 = C7806 - C7807;
    const double C7839 = C7794 - C7795;
    const double C8107 = C8097 - C8098;
    const double C8349 = C8339 - C8340;
    const double C8680 = C8668 - C8669;
    const double C8677 = C8656 - C8657;
    const double C30836 = C30817 - C30818;
    const double C30833 = C30805 - C30806;
    const double C30830 = C30793 - C30794;
    const double C30827 = C30781 - C30782;
    const double C31864 = C31849 - C31850;
    const double C31861 = C31837 - C31838;
    const double C31858 = C31825 - C31826;
    const double C32263 = C32253 - C32254;
    const double C32521 = C32509 - C32510;
    const double C32518 = C32497 - C32498;
    const double C33276 = C33266 - C33267;
    const double C78246 = C78237 - C78238;
    const double C15075 = C15059 - C15060;
    const double C15074 = C15055 - C15056;
    const double C15071 = C15043 - C15044;
    const double C15069 = C15035 - C15036;
    const double C15067 = C15027 - C15028;
    const double C15357 = C15339 - C15340;
    const double C15355 = C15331 - C15332;
    const double C15353 = C15323 - C15324;
    const double C15352 = C15319 - C15320;
    const double C15350 = C15311 - C15312;
    const double C15348 = C15303 - C15304;
    const double C15635 = C15617 - C15618;
    const double C15633 = C15609 - C15610;
    const double C15631 = C15601 - C15602;
    const double C15630 = C15597 - C15598;
    const double C15628 = C15589 - C15590;
    const double C15626 = C15581 - C15582;
    const double C15867 = C15857 - C15858;
    const double C16079 = C16069 - C16070;
    const double C16371 = C16359 - C16360;
    const double C16369 = C16351 - C16352;
    const double C16367 = C16343 - C16344;
    const double C19248 = C19234 - C19235;
    const double C19246 = C19225 - C19226;
    const double C19245 = C19220 - C19221;
    const double C19242 = C19204 - C19205;
    const double C19574 = C19564 - C19565;
    const double C19572 = C19556 - C19557;
    const double C20589 = C20577 - C20578;
    const double C20587 = C20568 - C20569;
    const double C20586 = C20563 - C20564;
    const double C21095 = C21087 - C21088;
    const double C21399 = C21391 - C21392;
    const double C22379 = C22371 - C22372;
    const double C38640 = C38632 - C38633;
    const double C38944 = C38936 - C38937;
    const double C39926 = C39918 - C39919;
    const double C40425 = C40417 - C40418;
    const double C40729 = C40721 - C40722;
    const double C41710 = C41702 - C41703;
    const double C44954 = C44946 - C44947;
    const double C45162 = C45154 - C45155;
    const double C45823 = C45815 - C45816;
    const double C47205 = C47184 - C47185;
    const double C47204 = C47180 - C47181;
    const double C47199 = C47160 - C47161;
    const double C47196 = C47148 - C47149;
    const double C47513 = C47492 - C47493;
    const double C47510 = C47480 - C47481;
    const double C47509 = C47476 - C47477;
    const double C47506 = C47464 - C47465;
    const double C47815 = C47794 - C47795;
    const double C47812 = C47782 - C47783;
    const double C47811 = C47778 - C47779;
    const double C47808 = C47766 - C47767;
    const double C48074 = C48061 - C48062;
    const double C48316 = C48303 - C48304;
    const double C48643 = C48628 - C48629;
    const double C48640 = C48616 - C48617;
    const double C51696 = C51674 - C51675;
    const double C51695 = C51670 - C51671;
    const double C51690 = C51650 - C51651;
    const double C51687 = C51638 - C51639;
    const double C52712 = C52694 - C52695;
    const double C52711 = C52690 - C52691;
    const double C52708 = C52678 - C52679;
    const double C53111 = C53098 - C53099;
    const double C53365 = C53350 - C53351;
    const double C53362 = C53338 - C53339;
    const double C54120 = C54107 - C54108;
    const double C58460 = C58448 - C58449;
    const double C47206 = C47188 - C47189;
    const double C47203 = C47176 - C47177;
    const double C47200 = C47164 - C47165;
    const double C47197 = C47152 - C47153;
    const double C47514 = C47496 - C47497;
    const double C47511 = C47484 - C47485;
    const double C47508 = C47472 - C47473;
    const double C47505 = C47460 - C47461;
    const double C47816 = C47798 - C47799;
    const double C47813 = C47786 - C47787;
    const double C47810 = C47774 - C47775;
    const double C47807 = C47762 - C47763;
    const double C48075 = C48065 - C48066;
    const double C48317 = C48307 - C48308;
    const double C48644 = C48632 - C48633;
    const double C48641 = C48620 - C48621;
    const double C51697 = C51678 - C51679;
    const double C51694 = C51666 - C51667;
    const double C51691 = C51654 - C51655;
    const double C51688 = C51642 - C51643;
    const double C52713 = C52698 - C52699;
    const double C52710 = C52686 - C52687;
    const double C52707 = C52674 - C52675;
    const double C53112 = C53102 - C53103;
    const double C53366 = C53354 - C53355;
    const double C53363 = C53342 - C53343;
    const double C54121 = C54111 - C54112;
    const double C58461 = C58452 - C58453;
    const double C7233 = C7221 - C7202;
    const double C7232 = C7220 - C7198;
    const double C7227 = C7215 - C7178;
    const double C7224 = C7212 - C7166;
    const double C7541 = C7529 - C7510;
    const double C7538 = C7526 - C7498;
    const double C7537 = C7525 - C7494;
    const double C7534 = C7522 - C7482;
    const double C7859 = C7847 - C7828;
    const double C7856 = C7844 - C7816;
    const double C7855 = C7843 - C7812;
    const double C7852 = C7840 - C7800;
    const double C8110 = C8106 - C8095;
    const double C8352 = C8348 - C8337;
    const double C8685 = C8679 - C8666;
    const double C8682 = C8676 - C8654;
    const double C30848 = C30835 - C30815;
    const double C30847 = C30834 - C30811;
    const double C30842 = C30829 - C30791;
    const double C30839 = C30826 - C30779;
    const double C31872 = C31863 - C31847;
    const double C31871 = C31862 - C31843;
    const double C31868 = C31859 - C31831;
    const double C32265 = C32262 - C32251;
    const double C32526 = C32520 - C32507;
    const double C32523 = C32517 - C32495;
    const double C33278 = C33275 - C33264;
    const double C78248 = C78245 - C78235;
    const double C7230 = C7218 - C7190;
    const double C7229 = C7217 - C7186;
    const double C7226 = C7214 - C7174;
    const double C7543 = C7531 - C7518;
    const double C7540 = C7528 - C7506;
    const double C7535 = C7523 - C7486;
    const double C7532 = C7520 - C7474;
    const double C7853 = C7841 - C7804;
    const double C7850 = C7838 - C7792;
    const double C8112 = C8108 - C8103;
    const double C8687 = C8681 - C8674;
    const double C8684 = C8678 - C8662;
    const double C30850 = C30837 - C30823;
    const double C30845 = C30832 - C30803;
    const double C30844 = C30831 - C30799;
    const double C30841 = C30828 - C30787;
    const double C31874 = C31865 - C31855;
    const double C31869 = C31860 - C31835;
    const double C31866 = C31857 - C31823;
    const double C15083 = C15073 - C15053;
    const double C15082 = C15072 - C15049;
    const double C15080 = C15070 - C15041;
    const double C15078 = C15068 - C15033;
    const double C15370 = C15358 - C15345;
    const double C15368 = C15356 - C15337;
    const double C15366 = C15354 - C15329;
    const double C15363 = C15351 - C15317;
    const double C15361 = C15349 - C15309;
    const double C15359 = C15347 - C15301;
    const double C15646 = C15634 - C15615;
    const double C15644 = C15632 - C15607;
    const double C15641 = C15629 - C15595;
    const double C15639 = C15627 - C15587;
    const double C15637 = C15625 - C15579;
    const double C16378 = C16372 - C16365;
    const double C16376 = C16370 - C16357;
    const double C16374 = C16368 - C16349;
    const double C19257 = C19249 - C19240;
    const double C19255 = C19247 - C19231;
    const double C19252 = C19244 - C19218;
    const double C19251 = C19243 - C19210;
    const double C19579 = C19575 - C19570;
    const double C19577 = C19573 - C19562;
    const double C20596 = C20590 - C20583;
    const double C20594 = C20588 - C20574;
    const double C20591 = C20585 - C20561;
    const double C21098 = C21096 - C21093;
    const double C21402 = C21400 - C21397;
    const double C22382 = C22380 - C22377;
    const double C38643 = C38641 - C38638;
    const double C38947 = C38945 - C38942;
    const double C39929 = C39927 - C39924;
    const double C40428 = C40426 - C40423;
    const double C40732 = C40730 - C40727;
    const double C41713 = C41711 - C41708;
    const double C47214 = C47202 - C47174;
    const double C47213 = C47201 - C47170;
    const double C47210 = C47198 - C47158;
    const double C47527 = C47515 - C47502;
    const double C47524 = C47512 - C47490;
    const double C47519 = C47507 - C47470;
    const double C47516 = C47504 - C47458;
    const double C47821 = C47809 - C47772;
    const double C47818 = C47806 - C47760;
    const double C48080 = C48076 - C48071;
    const double C48651 = C48645 - C48638;
    const double C48648 = C48642 - C48626;
    const double C51711 = C51698 - C51684;
    const double C51706 = C51693 - C51664;
    const double C51705 = C51692 - C51660;
    const double C51702 = C51689 - C51648;
    const double C52723 = C52714 - C52704;
    const double C52718 = C52709 - C52684;
    const double C52715 = C52706 - C52672;
    const double C63127 = C63115 - C63081;
    const double C63126 = C63114 - C63077;
    const double C63388 = C63380 - C63371;
    const double C63381 = C63373 - C63343;
    const double C63864 = C63860 - C63855;
    const double C67073 = C67065 - C67047;
    const double C67072 = C67064 - C67043;
    const double C97336 = C97326 - C97306;
    const double C97335 = C97325 - C97302;
    const double C97333 = C97323 - C97294;
    const double C97331 = C97321 - C97286;
    const double C97623 = C97611 - C97598;
    const double C97621 = C97609 - C97590;
    const double C97619 = C97607 - C97582;
    const double C97616 = C97604 - C97570;
    const double C97614 = C97602 - C97562;
    const double C97612 = C97600 - C97554;
    const double C97899 = C97887 - C97868;
    const double C97897 = C97885 - C97860;
    const double C97894 = C97882 - C97848;
    const double C97892 = C97880 - C97840;
    const double C97890 = C97878 - C97832;
    const double C98631 = C98625 - C98618;
    const double C98629 = C98623 - C98610;
    const double C98627 = C98621 - C98602;
    const double C101526 = C101514 - C101500;
    const double C101524 = C101512 - C101492;
    const double C101521 = C101509 - C101480;
    const double C101519 = C101507 - C101470;
    const double C101518 = C101506 - C101464;
    const double C101516 = C101504 - C101456;
    const double C101867 = C101861 - C101854;
    const double C101865 = C101859 - C101846;
    const double C101862 = C101856 - C101834;
    const double C102467 = C102465 - C102462;
    const double C102895 = C102889 - C102882;
    const double C102892 = C102886 - C102868;
    const double C102890 = C102884 - C102860;
    const double C103398 = C103396 - C103393;
    const double C103714 = C103710 - C103705;
    const double C103712 = C103708 - C103697;
    const double C104697 = C104695 - C104692;
    const double C111015 = C111013 - C111010;
    const double C106646 = C106634 - C106600;
    const double C106645 = C106633 - C106596;
    const double C106907 = C106899 - C106890;
    const double C106900 = C106892 - C106862;
    const double C107383 = C107379 - C107374;
    const double C134314 = C134306 - C134288;
    const double C134313 = C134305 - C134284;
    const double C115694 = C115682 - C115654;
    const double C115693 = C115681 - C115650;
    const double C115690 = C115678 - C115638;
    const double C116007 = C115995 - C115982;
    const double C116004 = C115992 - C115970;
    const double C115999 = C115987 - C115950;
    const double C115996 = C115984 - C115938;
    const double C116301 = C116289 - C116252;
    const double C116298 = C116286 - C116240;
    const double C116560 = C116556 - C116551;
    const double C117131 = C117125 - C117118;
    const double C117128 = C117122 - C117106;
    const double C120299 = C120290 - C120276;
    const double C120294 = C120284 - C120255;
    const double C120293 = C120280 - C120248;
    const double C121627 = C121621 - C121612;
    const double C121622 = C121615 - C121591;
    const double C122135 = C122132 - C122128;
    const double C123433 = C123430 - C123426;
    const double C152145 = C152127 - C152141;
    const double C152131 = C152126 + C154408;
    const double C215 = C209 * C154164;
    const double C11478 = C209 * C154406;
    const double C70509 = C209 * C70494;
    const double C7858 = C7846 - C7824;
    const double C47826 = C47814 - C47792;
    const double C63631 = C63623 - C63593;
    const double C107150 = C107142 - C107112;
    const double C116306 = C116294 - C116272;
    const double C32525 = C32519 - C32503;
    const double C53370 = C53364 - C53348;
    const double C67945 = C67941 - C67927;
    const double C122446 = C122443 - C122439;
    const double C135186 = C135182 - C135168;
    const double C3734 = C3218 + C3730;
    const double C24975 = C24511 + C24971;
    const double C83556 = C83092 + C83552;
    const double C3960 = C3506 + C3953;
    const double C25198 = C24741 + C25194;
    const double C83779 = C83322 + C83775;
    const double C448 = C440 * C154164;
    const double C2916 = C440 * C154468;
    const double C11476 = C440 * C154226;
    const double C12099 = C440 * C154406;
    const double C24287 = C440 * C24271;
    const double C70507 = C440 * C154226;
    const double C71123 = C440 * C70494;
    const double C82868 = C440 * C154229;
    const double C454 = C446 * C154164;
    const double C2912 = C446 * C154442;
    const double C3732 = C446 * C154468;
    const double C11688 = C446 * C154406;
    const double C11678 = C446 * C154226;
    const double C24283 = C446 * C154442;
    const double C24973 = C446 * C24271;
    const double C34746 = C446 * C34731;
    const double C70719 = C446 * C70494;
    const double C70709 = C446 * C154226;
    const double C74061 = C446 * C154473;
    const double C82864 = C446 * C82853;
    const double C83554 = C446 * C154229;
    const double C685 = C677 * C154164;
    const double C12297 = C677 * C154406;
    const double C71321 = C677 * C70494;
    const double C691 = C683 * C154164;
    const double C11894 = C683 * C154406;
    const double C70925 = C683 * C70494;
    const double C1184 = C1180 * C154164;
    const double C3955 = C1180 * C154468;
    const double C11884 = C1180 * C154226;
    const double C12561 = C1180 * C154406;
    const double C25196 = C1180 * C24271;
    const double C70915 = C1180 * C154226;
    const double C71585 = C1180 * C70494;
    const double C83777 = C1180 * C154229;
    const double C423 = C154181 * C388;
    const double C827 = C154181 * C389;
    const double C660 = C154181 * C625;
    const double C7211 = C154445 * C625;
    const double C16076 = C154268 * C625;
    const double C47195 = C154445 * C625;
    const double C98329 = C154268 * C625;
    const double C115675 = C115620 * C625;
    const double C963 = C154181 * C626;
    const double C15066 = C154268 * C626;
    const double C97319 = C154268 * C626;
    const double C1169 = C154181 * C1151;
    const double C15864 = C154268 * C1151;
    const double C98117 = C154268 * C1151;
    const double C7784 =
        (3 * (C152404 + C152272 * C152535 + C152531 * ae) +
         C152272 * (2 * C152535 + C152272 * C152807 + C152798 * ae) +
         (2 * C152531 + C152272 * C152798) * ae) /
        C152045;
    const double C7788 =
        (3 * (C152318 + ae * C152534 + be * C152535 + C152272 * C152801) +
         ae * (2 * C152534 + C152272 * C152806 + C152798 * be) +
         be * (2 * C152535 + C152272 * C152807 + C152798 * ae) +
         C152272 *
             (2 * C152801 + ae * C152806 + be * C152807 +
              C152272 *
                  (C152333 + ae * C152796 + be * C152799 +
                   C152272 *
                       (ae * C152466 + be * C152468 +
                        C152272 *
                            (2 * C152278 * C152329 +
                             C152278 * (C152329 + (C152323 * C152324 +
                                                   C152275 * bs[9] *
                                                       std::pow(C152274, 9)) *
                                                      C152044 * C152290)))))) /
        C152053;
    const double C7783 =
        (3 * (C152403 + C152272 * C152534 + C152531 * be) +
         C152272 * (2 * C152534 + C152272 * C152806 + C152798 * be) +
         (2 * C152531 + C152272 * C152798) * be) /
        C152045;
    const double C152942 = C152940 + C152929;
    const double C152941 = C152939 + C152926;
    const double C153439 = C152272 * C153437;
    const double C153438 = C152272 * C153436;
    const double C153489 = C153487 + C153477;
    const double C153488 = C153486 + C153474;
    const double C32490 =
        (3 * (C152661 + C152272 * C153158 + C153154 * ae) +
         C152272 * (2 * C153158 + C152272 * C153235 + C153226 * ae) +
         (2 * C153154 + C152272 * C153226) * ae) /
        C152045;
    const double C32491 =
        (3 * (C153032 + ae * C153157 + be * C153158 + C152272 * C153229) +
         ae * (2 * C153157 + C152272 * C153234 + C153226 * be) +
         be * (2 * C153158 + C152272 * C153235 + C153226 * ae) +
         C152272 *
             (2 * C153229 + ae * C153234 + be * C153235 +
              C152272 *
                  (C153102 + ae * C153224 + be * C153227 +
                   C152272 *
                       (ae * C153127 + be * C153129 +
                        C152272 *
                            (2 * C152482 * C152329 +
                             C152482 * (C152329 + (C152323 * C152324 +
                                                   C152275 * bs[9] *
                                                       std::pow(C152274, 9)) *
                                                      C152044 * C152515)))))) /
        C152053;
    const double C32489 =
        (3 * (C152659 + C152272 * C153157 + C153154 * be) +
         C152272 * (2 * C153157 + C152272 * C153234 + C153226 * be) +
         (2 * C153154 + C152272 * C153226) * be) /
        C152045;
    const double C153277 = C153275 + C153264;
    const double C153276 = C153274 + C153261;
    const double C153551 = C152272 * C153549;
    const double C153550 = C152272 * C153548;
    const double C153629 = C153579 + C153627;
    const double C153628 = C153569 + C153626;
    const double C10601 =
        (4 * (2 * C152551 + C152272 * C152761 + C152752 * ae) +
         C152272 * (3 * C152761 + C152272 * C152984 + C152974 * ae) +
         (3 * C152752 + C152272 * C152974) * ae) /
        C152045;
    const double C33870 =
        (4 * (2 * C152715 + C152272 * C152900 + C152892 * ae) +
         C152272 * (3 * C152900 + C152272 * C153319 + C153309 * ae) +
         (3 * C152892 + C152272 * C153309) * ae) /
        C152045;
    const double C153379 = C153337 + C153377;
    const double C204 = C198 - C191;
    const double C439 = C431 - C422;
    const double C829 = C828 - C826;
    const double C676 = C668 - C659;
    const double C7235 = C7223 - C7210;
    const double C16082 = C16080 - C16075;
    const double C47219 = C47207 - C47194;
    const double C98335 = C98333 - C98328;
    const double C115699 = C115687 - C115674;
    const double C965 = C964 - C962;
    const double C15086 = C15076 - C15065;
    const double C97339 = C97329 - C97318;
    const double C1177 = C1173 - C1168;
    const double C15870 = C15868 - C15863;
    const double C98123 = C98121 - C98116;
    const double C11901 = C11900 + C11898;
    const double C8354 = C8350 - C8345;
    const double C15648 = C15636 - C15623;
    const double C48322 = C48318 - C48313;
    const double C63134 = C63122 - C63109;
    const double C97901 = C97889 - C97876;
    const double C106653 = C106641 - C106628;
    const double C116802 = C116798 - C116793;
    const double C3733 = C3217 * C154442;
    const double C11689 = C3217 * C154226;
    const double C24974 = C3217 * C154442;
    const double C34747 = C3217 * C154415;
    const double C70720 = C3217 * C154226;
    const double C74062 = C3217 * C154415;
    const double C83555 = C3217 * C82853;
    const double C3964 = C3963 * C154442;
    const double C12562 = C3963 * C154226;
    const double C25197 = C3963 * C154442;
    const double C71586 = C3963 * C154226;
    const double C83778 = C3963 * C82853;
    const double C3223 = C3216 * C154442;
    const double C24522 = C3216 * C154442;
    const double C35356 = C3216 * C154415;
    const double C74664 = C3216 * C154415;
    const double C83103 = C3216 * C82853;
    const double C3511 = C3505 * C154442;
    const double C24752 = C3505 * C154442;
    const double C83333 = C3505 * C82853;
    const double C4304 = C4302 * C154442;
    const double C25494 = C4302 * C154442;
    const double C35554 = C4302 * C154415;
    const double C74862 = C4302 * C154415;
    const double C84075 = C4302 * C82853;
    const double C7849 = C7834 - C7835;
    const double C47817 = C47802 - C47803;
    const double C64082 = C64075 - C64076;
    const double C107601 = C107594 - C107595;
    const double C116297 = C116282 - C116283;
    const double C28342 = C28340 + C28336;
    const double C35157 = C35156 + C35154;
    const double C28900 = C28898 + C28894;
    const double C58462 = C58456 - C58457;
    const double C64368 = C64361 - C64362;
    const double C78247 = C78241 - C78242;
    const double C107887 = C107880 - C107881;
    const double C120613 = C120607 - C120608;
    const double C10605 =
        (4 * (2 * C152755 + ae * C152760 + be * C152761 + C152272 * C152976) +
         ae * (3 * C152760 + C152272 * C152983 + C152974 * be) +
         be * (3 * C152761 + C152272 * C152984 + C152974 * ae) +
         C152272 *
             (3 * C152976 + ae * C152983 + be * C152984 +
              C152272 *
                  (2 * C152966 + ae * C152977 + be * C152978 +
                   C152272 * (C152321 + ae * C152960 + be * C152963 +
                              C152272 * (ae * C152441 + be * C152449 +
                                         C152272 * C152278 * C152329))))) /
        C152053;
    const double C10600 =
        (4 * (2 * C152550 + C152272 * C152760 + C152752 * be) +
         C152272 * (3 * C152760 + C152272 * C152983 + C152974 * be) +
         (3 * C152752 + C152272 * C152974) * be) /
        C152045;
    const double C153433 = C153411 + C153429;
    const double C29114 = C29113 - C29111;
    const double C29253 = C29251 - C29248;
    const double C32267 = C32264 - C32259;
    const double C45826 = C45824 - C45821;
    const double C53116 = C53113 - C53108;
    const double C132779 = C132777 - C132774;
    const double C149739 = C149736 - C149731;
    const double C29671 = C29670 - C29668;
    const double C44957 = C44955 - C44952;
    const double C131910 = C131908 - C131905;
    const double C33280 = C33277 - C33272;
    const double C45165 = C45163 - C45160;
    const double C54125 = C54122 - C54117;
    const double C68300 = C68296 - C68291;
    const double C132118 = C132116 - C132113;
    const double C135541 = C135537 - C135532;
    const double C150727 = C150724 - C150719;
    const double C32522 = C32513 - C32514;
    const double C53367 = C53358 - C53359;
    const double C69192 = C69185 - C69186;
    const double C136433 = C136426 - C136427;
    const double C149975 = C149969 - C149970;
    const double C33872 =
        (4 * (2 * C152889 + ae * C152899 + be * C152900 + C152272 * C153311) +
         ae * (3 * C152899 + C152272 * C153318 + C153309 * be) +
         be * (3 * C152900 + C152272 * C153319 + C153309 * ae) +
         C152272 *
             (3 * C153311 + ae * C153318 + be * C153319 +
              C152272 *
                  (2 * C153301 + ae * C153312 + be * C153313 +
                   C152272 * (C153097 + ae * C153295 + be * C153298 +
                              C152272 * (ae * C153108 + be * C153116 +
                                         C152272 * C152482 * C152329))))) /
        C152053;
    const double C33869 =
        (4 * (2 * C152714 + C152272 * C152899 + C152892 * be) +
         C152272 * (3 * C152899 + C152272 * C153318 + C153309 * be) +
         (3 * C152892 + C152272 * C153309) * be) /
        C152045;
    const double C153542 = C153518 + C153536;
    const double C153378 = C153329 + C153376;
    const double C153583 = C153557 + C153558;
    const double C153621 = C152272 * C153615;
    const double C152174 = C152171 / C152045;
    const double C152177 = C152173 / C152055;
    const double C152176 = C152043 * C152173;
    const double C97313 = C97276 * C141;
    const double C97309 = C97276 * C140;
    const double C97297 = C97276 * C139;
    const double C97289 = C97276 * C138;
    const double C97281 = C97276 * C137;
    const double C97593 = C97276 * C351;
    const double C97585 = C97276 * C350;
    const double C97577 = C97276 * C349;
    const double C97573 = C97276 * C346;
    const double C97565 = C97276 * C345;
    const double C97557 = C97276 * C344;
    const double C97871 = C97276 * C588;
    const double C97863 = C97276 * C587;
    const double C97855 = C97276 * C586;
    const double C97851 = C97276 * C583;
    const double C97843 = C97276 * C582;
    const double C97835 = C97276 * C581;
    const double C98111 = C97276 * C343;
    const double C98323 = C97276 * C580;
    const double C98613 = C97276 * C1132;
    const double C98605 = C97276 * C1131;
    const double C98597 = C97276 * C1130;
    const double C101495 = C97276 * C1401;
    const double C101487 = C97276 * C3140;
    const double C101483 = C97276 * C1403;
    const double C101473 = C97276 * C1402;
    const double C101459 = C97276 * C348;
    const double C101451 = C97276 * C347;
    const double C101849 = C97276 * C3442;
    const double C101841 = C97276 * C1544;
    const double C101837 = C97276 * C1975;
    const double C102457 = C97276 * C1974;
    const double C102877 = C97276 * C4255;
    const double C102871 = C97276 * C1129;
    const double C102863 = C97276 * C1976;
    const double C103388 = C97276 * C3139;
    const double C103700 = C97276 * C3441;
    const double C103692 = C97276 * C1545;
    const double C104687 = C97276 * C4254;
    const double C111005 = C97276 * C1543;
    const double C131900 = C97276 * C4670;
    const double C132108 = C97276 * C4907;
    const double C132769 = C97276 * C5659;
    const double C7234 = C7222 - C7206;
    const double C7231 = C7219 - C7194;
    const double C7228 = C7216 - C7182;
    const double C7225 = C7213 - C7170;
    const double C7542 = C7530 - C7514;
    const double C7539 = C7527 - C7502;
    const double C7536 = C7524 - C7490;
    const double C7533 = C7521 - C7478;
    const double C7860 = C7848 - C7832;
    const double C7857 = C7845 - C7820;
    const double C7854 = C7842 - C7808;
    const double C7851 = C7839 - C7796;
    const double C8111 = C8107 - C8099;
    const double C8353 = C8349 - C8341;
    const double C8686 = C8680 - C8670;
    const double C8683 = C8677 - C8658;
    const double C30849 = C30836 - C30819;
    const double C30846 = C30833 - C30807;
    const double C30843 = C30830 - C30795;
    const double C30840 = C30827 - C30783;
    const double C31873 = C31864 - C31851;
    const double C31870 = C31861 - C31839;
    const double C31867 = C31858 - C31827;
    const double C32266 = C32263 - C32255;
    const double C32527 = C32521 - C32511;
    const double C32524 = C32518 - C32499;
    const double C33279 = C33276 - C33268;
    const double C78249 = C78246 - C78239;
    const double C15085 = C15075 - C15061;
    const double C15084 = C15074 - C15057;
    const double C15081 = C15071 - C15045;
    const double C15079 = C15069 - C15037;
    const double C15077 = C15067 - C15029;
    const double C15369 = C15357 - C15341;
    const double C15367 = C15355 - C15333;
    const double C15365 = C15353 - C15325;
    const double C15364 = C15352 - C15321;
    const double C15362 = C15350 - C15313;
    const double C15360 = C15348 - C15305;
    const double C15647 = C15635 - C15619;
    const double C15645 = C15633 - C15611;
    const double C15643 = C15631 - C15603;
    const double C15642 = C15630 - C15599;
    const double C15640 = C15628 - C15591;
    const double C15638 = C15626 - C15583;
    const double C15869 = C15867 - C15859;
    const double C16081 = C16079 - C16071;
    const double C16377 = C16371 - C16361;
    const double C16375 = C16369 - C16353;
    const double C16373 = C16367 - C16345;
    const double C19256 = C19248 - C19236;
    const double C19254 = C19246 - C19227;
    const double C19253 = C19245 - C19222;
    const double C19250 = C19242 - C19206;
    const double C19578 = C19574 - C19566;
    const double C19576 = C19572 - C19558;
    const double C20595 = C20589 - C20579;
    const double C20593 = C20587 - C20570;
    const double C20592 = C20586 - C20565;
    const double C21097 = C21095 - C21089;
    const double C21401 = C21399 - C21393;
    const double C22381 = C22379 - C22373;
    const double C38642 = C38640 - C38634;
    const double C38946 = C38944 - C38938;
    const double C39928 = C39926 - C39920;
    const double C40427 = C40425 - C40419;
    const double C40731 = C40729 - C40723;
    const double C41712 = C41710 - C41704;
    const double C44956 = C44954 - C44948;
    const double C45164 = C45162 - C45156;
    const double C45825 = C45823 - C45817;
    const double C47217 = C47205 - C47186;
    const double C47216 = C47204 - C47182;
    const double C47211 = C47199 - C47162;
    const double C47208 = C47196 - C47150;
    const double C47525 = C47513 - C47494;
    const double C47522 = C47510 - C47482;
    const double C47521 = C47509 - C47478;
    const double C47518 = C47506 - C47466;
    const double C47827 = C47815 - C47796;
    const double C47824 = C47812 - C47784;
    const double C47823 = C47811 - C47780;
    const double C47820 = C47808 - C47768;
    const double C48078 = C48074 - C48063;
    const double C48320 = C48316 - C48305;
    const double C48649 = C48643 - C48630;
    const double C48646 = C48640 - C48618;
    const double C51709 = C51696 - C51676;
    const double C51708 = C51695 - C51672;
    const double C51703 = C51690 - C51652;
    const double C51700 = C51687 - C51640;
    const double C52721 = C52712 - C52696;
    const double C52720 = C52711 - C52692;
    const double C52717 = C52708 - C52680;
    const double C53114 = C53111 - C53100;
    const double C53371 = C53365 - C53352;
    const double C53368 = C53362 - C53340;
    const double C54123 = C54120 - C54109;
    const double C58463 = C58460 - C58450;
    const double C47218 = C47206 - C47190;
    const double C47215 = C47203 - C47178;
    const double C47212 = C47200 - C47166;
    const double C47209 = C47197 - C47154;
    const double C47526 = C47514 - C47498;
    const double C47523 = C47511 - C47486;
    const double C47520 = C47508 - C47474;
    const double C47517 = C47505 - C47462;
    const double C47828 = C47816 - C47800;
    const double C47825 = C47813 - C47788;
    const double C47822 = C47810 - C47776;
    const double C47819 = C47807 - C47764;
    const double C48079 = C48075 - C48067;
    const double C48321 = C48317 - C48309;
    const double C48650 = C48644 - C48634;
    const double C48647 = C48641 - C48622;
    const double C51710 = C51697 - C51680;
    const double C51707 = C51694 - C51668;
    const double C51704 = C51691 - C51656;
    const double C51701 = C51688 - C51644;
    const double C52722 = C52713 - C52700;
    const double C52719 = C52710 - C52688;
    const double C52716 = C52707 - C52676;
    const double C53115 = C53112 - C53104;
    const double C53372 = C53366 - C53356;
    const double C53369 = C53363 - C53344;
    const double C54124 = C54121 - C54113;
    const double C58464 = C58461 - C58454;
    const double C7245 = C7233 + C7203;
    const double C7244 = C7232 + C7199;
    const double C7239 = C7227 + C7179;
    const double C7236 = C7224 + C7167;
    const double C7553 = C7541 + C7511;
    const double C7550 = C7538 + C7499;
    const double C7549 = C7537 + C7495;
    const double C7546 = C7534 + C7483;
    const double C7871 = C7859 + C7829;
    const double C7868 = C7856 + C7817;
    const double C7867 = C7855 + C7813;
    const double C7864 = C7852 + C7801;
    const double C8113 = C8110 + C8096;
    const double C8355 = C8352 + C8338;
    const double C8691 = C8685 + C8667;
    const double C8688 = C8682 + C8655;
    const double C30860 = C30848 + C30816;
    const double C30859 = C30847 + C30812;
    const double C30854 = C30842 + C30792;
    const double C30851 = C30839 + C30780;
    const double C31881 = C31872 + C31848;
    const double C31880 = C31871 + C31844;
    const double C31877 = C31868 + C31832;
    const double C32268 = C32265 + C32252;
    const double C32532 = C32526 + C32508;
    const double C32529 = C32523 + C32496;
    const double C33281 = C33278 + C33265;
    const double C78251 = C78248 + C78236;
    const double C7242 = C7230 + C7191;
    const double C7241 = C7229 + C7187;
    const double C7238 = C7226 + C7175;
    const double C7555 = C7543 + C7519;
    const double C7552 = C7540 + C7507;
    const double C7547 = C7535 + C7487;
    const double C7544 = C7532 + C7475;
    const double C7865 = C7853 + C7805;
    const double C7862 = C7850 + C7793;
    const double C8115 = C8112 + C8104;
    const double C8693 = C8687 + C8675;
    const double C8690 = C8684 + C8663;
    const double C30862 = C30850 + C30824;
    const double C30857 = C30845 + C30804;
    const double C30856 = C30844 + C30800;
    const double C30853 = C30841 + C30788;
    const double C31883 = C31874 + C31856;
    const double C31878 = C31869 + C31836;
    const double C31875 = C31866 + C31824;
    const double C15093 = C15083 + C15054;
    const double C15092 = C15082 + C15050;
    const double C15090 = C15080 + C15042;
    const double C15088 = C15078 + C15034;
    const double C15382 = C15370 + C15346;
    const double C15380 = C15368 + C15338;
    const double C15378 = C15366 + C15330;
    const double C15375 = C15363 + C15318;
    const double C15373 = C15361 + C15310;
    const double C15371 = C15359 + C15302;
    const double C15658 = C15646 + C15616;
    const double C15656 = C15644 + C15608;
    const double C15653 = C15641 + C15596;
    const double C15651 = C15639 + C15588;
    const double C15649 = C15637 + C15580;
    const double C16384 = C16378 + C16366;
    const double C16382 = C16376 + C16358;
    const double C16380 = C16374 + C16350;
    const double C19265 = C19257 + C19241;
    const double C19263 = C19255 + C19232;
    const double C19260 = C19252 + C19219;
    const double C19259 = C19251 + C19211;
    const double C19583 = C19579 + C19571;
    const double C19581 = C19577 + C19563;
    const double C20602 = C20596 + C20584;
    const double C20600 = C20594 + C20575;
    const double C20597 = C20591 + C20562;
    const double C21100 = C21098 + C21094;
    const double C21404 = C21402 + C21398;
    const double C22384 = C22382 + C22378;
    const double C38645 = C38643 + C38639;
    const double C38949 = C38947 + C38943;
    const double C39931 = C39929 + C39925;
    const double C40430 = C40428 + C40424;
    const double C40734 = C40732 + C40728;
    const double C41715 = C41713 + C41709;
    const double C47226 = C47214 + C47175;
    const double C47225 = C47213 + C47171;
    const double C47222 = C47210 + C47159;
    const double C47539 = C47527 + C47503;
    const double C47536 = C47524 + C47491;
    const double C47531 = C47519 + C47471;
    const double C47528 = C47516 + C47459;
    const double C47833 = C47821 + C47773;
    const double C47830 = C47818 + C47761;
    const double C48083 = C48080 + C48072;
    const double C48657 = C48651 + C48639;
    const double C48654 = C48648 + C48627;
    const double C51723 = C51711 + C51685;
    const double C51718 = C51706 + C51665;
    const double C51717 = C51705 + C51661;
    const double C51714 = C51702 + C51649;
    const double C52732 = C52723 + C52705;
    const double C52727 = C52718 + C52685;
    const double C52724 = C52715 + C52673;
    const double C63139 = C63127 + C63082;
    const double C63138 = C63126 + C63078;
    const double C63396 = C63388 + C63372;
    const double C63389 = C63381 + C63344;
    const double C63868 = C63864 + C63856;
    const double C67081 = C67073 + C67048;
    const double C67080 = C67072 + C67044;
    const double C97346 = C97336 + C97307;
    const double C97345 = C97335 + C97303;
    const double C97343 = C97333 + C97295;
    const double C97341 = C97331 + C97287;
    const double C97635 = C97623 + C97599;
    const double C97633 = C97621 + C97591;
    const double C97631 = C97619 + C97583;
    const double C97628 = C97616 + C97571;
    const double C97626 = C97614 + C97563;
    const double C97624 = C97612 + C97555;
    const double C97911 = C97899 + C97869;
    const double C97909 = C97897 + C97861;
    const double C97906 = C97894 + C97849;
    const double C97904 = C97892 + C97841;
    const double C97902 = C97890 + C97833;
    const double C98637 = C98631 + C98619;
    const double C98635 = C98629 + C98611;
    const double C98633 = C98627 + C98603;
    const double C101538 = C101526 + C101501;
    const double C101536 = C101524 + C101493;
    const double C101533 = C101521 + C101481;
    const double C101531 = C101519 + C101471;
    const double C101530 = C101518 + C101465;
    const double C101528 = C101516 + C101457;
    const double C101873 = C101867 + C101855;
    const double C101871 = C101865 + C101847;
    const double C101868 = C101862 + C101835;
    const double C102469 = C102467 + C102463;
    const double C102901 = C102895 + C102883;
    const double C102898 = C102892 + C102869;
    const double C102896 = C102890 + C102861;
    const double C103400 = C103398 + C103394;
    const double C103718 = C103714 + C103706;
    const double C103716 = C103712 + C103698;
    const double C104699 = C104697 + C104693;
    const double C111017 = C111015 + C111011;
    const double C106658 = C106646 + C106601;
    const double C106657 = C106645 + C106597;
    const double C106915 = C106907 + C106891;
    const double C106908 = C106900 + C106863;
    const double C107387 = C107383 + C107375;
    const double C134322 = C134314 + C134289;
    const double C134321 = C134313 + C134285;
    const double C115706 = C115694 + C115655;
    const double C115705 = C115693 + C115651;
    const double C115702 = C115690 + C115639;
    const double C116019 = C116007 + C115983;
    const double C116016 = C116004 + C115971;
    const double C116011 = C115999 + C115951;
    const double C116008 = C115996 + C115939;
    const double C116313 = C116301 + C116253;
    const double C116310 = C116298 + C116241;
    const double C116563 = C116560 + C116552;
    const double C117137 = C117131 + C117119;
    const double C117134 = C117128 + C117107;
    const double C120308 = C120299 + C120277;
    const double C120303 = C120294 + C120256;
    const double C120302 = C120293 + C120249;
    const double C121633 = C121627 + C121613;
    const double C121628 = C121622 + C121592;
    const double C122138 = C122135 + C122129;
    const double C123436 = C123433 + C123427;
    const double C115670 = C152145 * C593;
    const double C115668 = C152145 * C592;
    const double C115658 = C152145 * C595;
    const double C115656 = C152145 * C594;
    const double C115646 = C152145 * C597;
    const double C115644 = C152145 * C596;
    const double C115634 = C152145 * C599;
    const double C115632 = C152145 * C598;
    const double C115978 = C152145 * C1982;
    const double C115976 = C152145 * C1981;
    const double C115966 = C152145 * C1984;
    const double C115964 = C152145 * C1983;
    const double C115954 = C152145 * C1138;
    const double C115952 = C152145 * C1137;
    const double C115942 = C152145 * C1140;
    const double C115940 = C152145 * C1139;
    const double C116280 = C152145 * C2334;
    const double C116278 = C152145 * C2333;
    const double C116268 = C152145 * C2336;
    const double C116266 = C152145 * C2335;
    const double C116256 = C152145 * C605;
    const double C116254 = C152145 * C604;
    const double C116244 = C152145 * C607;
    const double C116242 = C152145 * C606;
    const double C116547 = C152145 * C1142;
    const double C116545 = C152145 * C1141;
    const double C116789 = C152145 * C609;
    const double C116787 = C152145 * C608;
    const double C117114 = C152145 * C1551;
    const double C117112 = C152145 * C1550;
    const double C117102 = C152145 * C1553;
    const double C117100 = C152145 * C1552;
    const double C120272 = C152145 * C4261;
    const double C120270 = C152145 * C4260;
    const double C120259 = C152145 * C1986;
    const double C120257 = C152145 * C1985;
    const double C120244 = C152145 * C1136;
    const double C120242 = C152145 * C1135;
    const double C120605 = C152145 * C6271;
    const double C120603 = C152145 * C6270;
    const double C121608 = C152145 * C3448;
    const double C121606 = C152145 * C3447;
    const double C121595 = C152145 * C1555;
    const double C121593 = C152145 * C1554;
    const double C122124 = C152145 * C4259;
    const double C122122 = C152145 * C4258;
    const double C122435 = C152145 * C6275;
    const double C122433 = C152145 * C6274;
    const double C123422 = C152145 * C3446;
    const double C123420 = C152145 * C3445;
    const double C149727 = C152145 * C5665;
    const double C149725 = C152145 * C5664;
    const double C149967 = C152145 * C6273;
    const double C149965 = C152145 * C6272;
    const double C150715 = C152145 * C4913;
    const double C150713 = C152145 * C4912;
    const double C55529 =
        (C152145 / C152085 + ((C152043 * C152193 + C115620) * ae) / C152045) /
            C152085 -
        ((C152043 * (C152193 / C152085 + (0 * ae) / C152045) + C154422) * be) /
            C152045;
    const double C63058 =
        C152145 / C152085 - ((C152043 * C152193 + C115620) * be) / C152045;
    const double C106577 =
        C152145 / C152085 + ((C152043 * C152193 + C115620) * ae) / C152045;
    const double C152135 = C152131 * be;
    const double C7870 = C7858 + C7825;
    const double C47838 = C47826 + C47793;
    const double C63639 = C63631 + C63594;
    const double C107158 = C107150 + C107113;
    const double C116318 = C116306 + C116273;
    const double C32531 = C32525 + C32504;
    const double C53376 = C53370 + C53349;
    const double C67949 = C67945 + C67928;
    const double C122449 = C122446 + C122440;
    const double C135190 = C135186 + C135169;
    const double C11482 = C11476 + C11477;
    const double C70513 = C70507 + C70508;
    const double C2921 = C2912 + C2919;
    const double C12097 = C11678 + C11679;
    const double C24292 = C24283 + C24290;
    const double C71121 = C70709 + C70710;
    const double C82873 = C82864 + C82871;
    const double C12295 = C11884 + C11885;
    const double C71319 = C70915 + C70916;
    const double C10599 =
        (4 * (2 * C152543 + C152272 * C152784 + C152775 * ae) +
         C152272 * (3 * C152784 + C152272 * C152942 + C152932 * ae) +
         (3 * C152775 + C152272 * C152932) * ae) /
        C152045;
    const double C10604 =
        (4 * (2 * C152778 + ae * C152783 + be * C152784 + C152272 * C152934) +
         ae * (3 * C152783 + C152272 * C152941 + C152932 * be) +
         be * (3 * C152784 + C152272 * C152942 + C152932 * ae) +
         C152272 *
             (3 * C152934 + ae * C152941 + be * C152942 +
              C152272 *
                  (2 * C152924 + ae * C152935 + be * C152936 +
                   C152272 *
                       (C152331 + ae * C152918 + be * C152921 +
                        C152272 *
                            (ae * C152460 + be * C152462 +
                             C152272 * (C152329 + (C152323 * C152324 +
                                                   C152275 * bs[9] *
                                                       std::pow(C152274, 9)) *
                                                      C152044 * C152290)))))) /
        C152053;
    const double C10598 =
        (4 * (2 * C152542 + C152272 * C152783 + C152775 * be) +
         C152272 * (3 * C152783 + C152272 * C152941 + C152932 * be) +
         (3 * C152775 + C152272 * C152932) * be) /
        C152045;
    const double C153441 = C153399 + C153439;
    const double C153440 = C153391 + C153438;
    const double C56193 =
        (4 * (2 * C152698 + C152272 * C152873 + C152865 * ae) +
         C152272 * (3 * C152873 + C152272 * C153489 + C153480 * ae) +
         (3 * C152865 + C152272 * C153480) * ae) /
        C152045;
    const double C56194 =
        (4 * (2 * C152862 + ae * C152872 + be * C152873 + C152272 * C153478) +
         ae * (3 * C152872 + C152272 * C153488 + C153480 * be) +
         be * (3 * C152873 + C152272 * C153489 + C153480 * ae) +
         C152272 *
             (3 * C153478 + ae * C153488 + be * C153489 +
              C152272 * (2 * C153466 + ae * C153482 + be * C153483 +
                         C152272 * (C153449 + ae * C153467 + be * C153470 +
                                    C152272 * (ae * C153451 + be * C153455 +
                                               C152272 * C152482 * C152278 *
                                                   (C152323 * C152324 +
                                                    C152275 * bs[9] *
                                                        std::pow(C152274, 9)) *
                                                   C152044))))) /
        C152053;
    const double C56192 =
        (4 * (2 * C152697 + C152272 * C152872 + C152865 * be) +
         C152272 * (3 * C152872 + C152272 * C153488 + C153480 * be) +
         (3 * C152865 + C152272 * C153480) * be) /
        C152045;
    const double C33868 =
        (4 * (2 * C152706 + C152272 * C153181 + C153172 * ae) +
         C152272 * (3 * C153181 + C152272 * C153277 + C153267 * ae) +
         (3 * C153172 + C152272 * C153267) * ae) /
        C152045;
    const double C33871 =
        (4 * (2 * C153175 + ae * C153180 + be * C153181 + C152272 * C153269) +
         ae * (3 * C153180 + C152272 * C153276 + C153267 * be) +
         be * (3 * C153181 + C152272 * C153277 + C153267 * ae) +
         C152272 *
             (3 * C153269 + ae * C153276 + be * C153277 +
              C152272 *
                  (2 * C153259 + ae * C153270 + be * C153271 +
                   C152272 *
                       (C153100 + ae * C153253 + be * C153256 +
                        C152272 *
                            (ae * C153119 + be * C153123 +
                             C152272 * (C152329 + (C152323 * C152324 +
                                                   C152275 * bs[9] *
                                                       std::pow(C152274, 9)) *
                                                      C152044 * C152515)))))) /
        C152053;
    const double C33867 =
        (4 * (2 * C152705 + C152272 * C153180 + C153172 * be) +
         C152272 * (3 * C153180 + C152272 * C153276 + C153267 * be) +
         (3 * C153172 + C152272 * C153267) * be) /
        C152045;
    const double C153553 = C153505 + C153551;
    const double C153552 = C153499 + C153550;
    const double C153631 = C153629 + C153610;
    const double C153630 = C153628 + C153607;
    const double C63621 = C63060 * C10601;
    const double C107140 = C106579 * C10601;
    const double C68513 = C63060 * C33870;
    const double C135754 = C106579 * C33870;
    const double C153381 = C153379 + C153366;
    const double C210 = C204 + C192;
    const double C447 = C439 + C423;
    const double C830 = C829 + C827;
    const double C684 = C676 + C660;
    const double C7247 = C7235 + C7211;
    const double C16084 = C16082 + C16076;
    const double C47231 = C47219 + C47195;
    const double C98337 = C98335 + C98329;
    const double C115711 = C115699 + C115675;
    const double C966 = C965 + C963;
    const double C15096 = C15086 + C15066;
    const double C97349 = C97339 + C97319;
    const double C1181 = C1177 + C1169;
    const double C15872 = C15870 + C15864;
    const double C98125 = C98123 + C98117;
    const double C11902 = C11901 * C154226;
    const double C70926 = C11901 * C154226;
    const double C8357 = C8354 + C8346;
    const double C15660 = C15648 + C15624;
    const double C48325 = C48322 + C48314;
    const double C63146 = C63134 + C63110;
    const double C97913 = C97901 + C97877;
    const double C106665 = C106653 + C106629;
    const double C116805 = C116802 + C116794;
    const double C7861 = C7849 - C7836;
    const double C47829 = C47817 - C47804;
    const double C64086 = C64082 - C64077;
    const double C107605 = C107601 - C107596;
    const double C116309 = C116297 - C116284;
    const double C34949 = C28342 * C154415;
    const double C74264 = C28342 * C154415;
    const double C35158 = C35157 * C154415;
    const double C74466 = C35157 * C154415;
    const double C35816 = C28900 * C154415;
    const double C75124 = C28900 * C154415;
    const double C58465 = C58462 - C58458;
    const double C64372 = C64368 - C64363;
    const double C78250 = C78247 - C78243;
    const double C107891 = C107887 - C107882;
    const double C120616 = C120613 - C120609;
    const double C63622 = C154422 * C10605;
    const double C107141 = C154422 * C10605;
    const double C63619 = C63060 * C10600;
    const double C107138 = C106579 * C10600;
    const double C29115 = C29114 + C29112;
    const double C29255 = C29253 + C29249;
    const double C32270 = C32267 + C32260;
    const double C45828 = C45826 + C45822;
    const double C53119 = C53116 + C53109;
    const double C132781 = C132779 + C132775;
    const double C149742 = C149739 + C149732;
    const double C29672 = C29671 + C29669;
    const double C44959 = C44957 + C44953;
    const double C131912 = C131910 + C131906;
    const double C33283 = C33280 + C33273;
    const double C45167 = C45165 + C45161;
    const double C54128 = C54125 + C54118;
    const double C68304 = C68300 + C68292;
    const double C132120 = C132118 + C132114;
    const double C135545 = C135541 + C135533;
    const double C150730 = C150727 + C150720;
    const double C32528 = C32522 - C32515;
    const double C53373 = C53367 - C53360;
    const double C69196 = C69192 - C69187;
    const double C136437 = C136433 - C136428;
    const double C149978 = C149975 - C149971;
    const double C68514 = C154422 * C33872;
    const double C135755 = C154422 * C33872;
    const double C68511 = C63060 * C33869;
    const double C135752 = C106579 * C33869;
    const double C153380 = C153378 + C153363;
    const double C153592 = C153583 + C153559;
    const double C152180 = C152177 - C152174;
    const double C152179 = C152176 / C152045;
    const double C97328 = C97312 - C97313;
    const double C97327 = C97308 - C97309;
    const double C97324 = C97296 - C97297;
    const double C97322 = C97288 - C97289;
    const double C97320 = C97280 - C97281;
    const double C97610 = C97592 - C97593;
    const double C97608 = C97584 - C97585;
    const double C97606 = C97576 - C97577;
    const double C97605 = C97572 - C97573;
    const double C97603 = C97564 - C97565;
    const double C97601 = C97556 - C97557;
    const double C97888 = C97870 - C97871;
    const double C97886 = C97862 - C97863;
    const double C97884 = C97854 - C97855;
    const double C97883 = C97850 - C97851;
    const double C97881 = C97842 - C97843;
    const double C97879 = C97834 - C97835;
    const double C98120 = C98110 - C98111;
    const double C98332 = C98322 - C98323;
    const double C98624 = C98612 - C98613;
    const double C98622 = C98604 - C98605;
    const double C98620 = C98596 - C98597;
    const double C101513 = C101494 - C101495;
    const double C101511 = C101486 - C101487;
    const double C101510 = C101482 - C101483;
    const double C101508 = C101472 - C101473;
    const double C101505 = C101458 - C101459;
    const double C101503 = C101450 - C101451;
    const double C101860 = C101848 - C101849;
    const double C101858 = C101840 - C101841;
    const double C101857 = C101836 - C101837;
    const double C102464 = C102456 - C102457;
    const double C102888 = C102876 - C102877;
    const double C102887 = C102870 - C102871;
    const double C102885 = C102862 - C102863;
    const double C103395 = C103387 - C103388;
    const double C103709 = C103699 - C103700;
    const double C103707 = C103691 - C103692;
    const double C104694 = C104686 - C104687;
    const double C111012 = C111004 - C111005;
    const double C131907 = C131899 - C131900;
    const double C132115 = C132107 - C132108;
    const double C132776 = C132768 - C132769;
    const double C7246 = C7234 + C7207;
    const double C7243 = C7231 + C7195;
    const double C7240 = C7228 + C7183;
    const double C7237 = C7225 + C7171;
    const double C7554 = C7542 + C7515;
    const double C7551 = C7539 + C7503;
    const double C7548 = C7536 + C7491;
    const double C7545 = C7533 + C7479;
    const double C7872 = C7860 + C7833;
    const double C7869 = C7857 + C7821;
    const double C7866 = C7854 + C7809;
    const double C7863 = C7851 + C7797;
    const double C8114 = C8111 + C8100;
    const double C8356 = C8353 + C8342;
    const double C8692 = C8686 + C8671;
    const double C8689 = C8683 + C8659;
    const double C30861 = C30849 + C30820;
    const double C30858 = C30846 + C30808;
    const double C30855 = C30843 + C30796;
    const double C30852 = C30840 + C30784;
    const double C31882 = C31873 + C31852;
    const double C31879 = C31870 + C31840;
    const double C31876 = C31867 + C31828;
    const double C32269 = C32266 + C32256;
    const double C32533 = C32527 + C32512;
    const double C32530 = C32524 + C32500;
    const double C33282 = C33279 + C33269;
    const double C78252 = C78249 + C78240;
    const double C15095 = C15085 + C15062;
    const double C15094 = C15084 + C15058;
    const double C15091 = C15081 + C15046;
    const double C15089 = C15079 + C15038;
    const double C15087 = C15077 + C15030;
    const double C15381 = C15369 + C15342;
    const double C15379 = C15367 + C15334;
    const double C15377 = C15365 + C15326;
    const double C15376 = C15364 + C15322;
    const double C15374 = C15362 + C15314;
    const double C15372 = C15360 + C15306;
    const double C15659 = C15647 + C15620;
    const double C15657 = C15645 + C15612;
    const double C15655 = C15643 + C15604;
    const double C15654 = C15642 + C15600;
    const double C15652 = C15640 + C15592;
    const double C15650 = C15638 + C15584;
    const double C15871 = C15869 + C15860;
    const double C16083 = C16081 + C16072;
    const double C16383 = C16377 + C16362;
    const double C16381 = C16375 + C16354;
    const double C16379 = C16373 + C16346;
    const double C19264 = C19256 + C19237;
    const double C19262 = C19254 + C19228;
    const double C19261 = C19253 + C19223;
    const double C19258 = C19250 + C19207;
    const double C19582 = C19578 + C19567;
    const double C19580 = C19576 + C19559;
    const double C20601 = C20595 + C20580;
    const double C20599 = C20593 + C20571;
    const double C20598 = C20592 + C20566;
    const double C21099 = C21097 + C21090;
    const double C21403 = C21401 + C21394;
    const double C22383 = C22381 + C22374;
    const double C38644 = C38642 + C38635;
    const double C38948 = C38946 + C38939;
    const double C39930 = C39928 + C39921;
    const double C40429 = C40427 + C40420;
    const double C40733 = C40731 + C40724;
    const double C41714 = C41712 + C41705;
    const double C44958 = C44956 + C44949;
    const double C45166 = C45164 + C45157;
    const double C45827 = C45825 + C45818;
    const double C47229 = C47217 + C47187;
    const double C47228 = C47216 + C47183;
    const double C47223 = C47211 + C47163;
    const double C47220 = C47208 + C47151;
    const double C47537 = C47525 + C47495;
    const double C47534 = C47522 + C47483;
    const double C47533 = C47521 + C47479;
    const double C47530 = C47518 + C47467;
    const double C47839 = C47827 + C47797;
    const double C47836 = C47824 + C47785;
    const double C47835 = C47823 + C47781;
    const double C47832 = C47820 + C47769;
    const double C48081 = C48078 + C48064;
    const double C48323 = C48320 + C48306;
    const double C48655 = C48649 + C48631;
    const double C48652 = C48646 + C48619;
    const double C51721 = C51709 + C51677;
    const double C51720 = C51708 + C51673;
    const double C51715 = C51703 + C51653;
    const double C51712 = C51700 + C51641;
    const double C52730 = C52721 + C52697;
    const double C52729 = C52720 + C52693;
    const double C52726 = C52717 + C52681;
    const double C53117 = C53114 + C53101;
    const double C53377 = C53371 + C53353;
    const double C53374 = C53368 + C53341;
    const double C54126 = C54123 + C54110;
    const double C58466 = C58463 + C58451;
    const double C47230 = C47218 + C47191;
    const double C47227 = C47215 + C47179;
    const double C47224 = C47212 + C47167;
    const double C47221 = C47209 + C47155;
    const double C47538 = C47526 + C47499;
    const double C47535 = C47523 + C47487;
    const double C47532 = C47520 + C47475;
    const double C47529 = C47517 + C47463;
    const double C47840 = C47828 + C47801;
    const double C47837 = C47825 + C47789;
    const double C47834 = C47822 + C47777;
    const double C47831 = C47819 + C47765;
    const double C48082 = C48079 + C48068;
    const double C48324 = C48321 + C48310;
    const double C48656 = C48650 + C48635;
    const double C48653 = C48647 + C48623;
    const double C51722 = C51710 + C51681;
    const double C51719 = C51707 + C51669;
    const double C51716 = C51704 + C51657;
    const double C51713 = C51701 + C51645;
    const double C52731 = C52722 + C52701;
    const double C52728 = C52719 + C52689;
    const double C52725 = C52716 + C52677;
    const double C53118 = C53115 + C53105;
    const double C53378 = C53372 + C53357;
    const double C53375 = C53369 + C53345;
    const double C54127 = C54124 + C54114;
    const double C58467 = C58464 + C58455;
    const double C63105 = C63058 * C609;
    const double C63103 = C63058 * C608;
    const double C63085 = C63058 * C607;
    const double C63083 = C63058 * C606;
    const double C63073 = C63058 * C605;
    const double C63071 = C63058 * C604;
    const double C63367 = C63058 * C3448;
    const double C63365 = C63058 * C3447;
    const double C63347 = C63058 * C1553;
    const double C63345 = C63058 * C1552;
    const double C63617 = C63058 * C7780;
    const double C63615 = C63058 * C7779;
    const double C63597 = C63058 * C2336;
    const double C63595 = C63058 * C2335;
    const double C63851 = C63058 * C1551;
    const double C63849 = C63058 * C1550;
    const double C64073 = C63058 * C2334;
    const double C64071 = C63058 * C2333;
    const double C64359 = C63058 * C6271;
    const double C64357 = C63058 * C6270;
    const double C67051 = C63058 * C3446;
    const double C67049 = C63058 * C3445;
    const double C67039 = C63058 * C1555;
    const double C67037 = C63058 * C1554;
    const double C67931 = C63058 * C6275;
    const double C67929 = C63058 * C6274;
    const double C68287 = C63058 * C4913;
    const double C68285 = C63058 * C4912;
    const double C68509 = C63058 * C9283;
    const double C68507 = C63058 * C9282;
    const double C69183 = C63058 * C6273;
    const double C69181 = C63058 * C6272;
    const double C106624 = C106577 * C609;
    const double C106622 = C106577 * C608;
    const double C106604 = C106577 * C607;
    const double C106602 = C106577 * C606;
    const double C106592 = C106577 * C605;
    const double C106590 = C106577 * C604;
    const double C106886 = C106577 * C3448;
    const double C106884 = C106577 * C3447;
    const double C106866 = C106577 * C1553;
    const double C106864 = C106577 * C1552;
    const double C107136 = C106577 * C7780;
    const double C107134 = C106577 * C7779;
    const double C107116 = C106577 * C2336;
    const double C107114 = C106577 * C2335;
    const double C107370 = C106577 * C1551;
    const double C107368 = C106577 * C1550;
    const double C107592 = C106577 * C2334;
    const double C107590 = C106577 * C2333;
    const double C107878 = C106577 * C6271;
    const double C107876 = C106577 * C6270;
    const double C134292 = C106577 * C3446;
    const double C134290 = C106577 * C3445;
    const double C134280 = C106577 * C1555;
    const double C134278 = C106577 * C1554;
    const double C135172 = C106577 * C6275;
    const double C135170 = C106577 * C6274;
    const double C135528 = C106577 * C4913;
    const double C135526 = C106577 * C4912;
    const double C135750 = C106577 * C9283;
    const double C135748 = C106577 * C9282;
    const double C136424 = C106577 * C6273;
    const double C136422 = C106577 * C6272;
    const double C152140 = C152135 / C152045;
    const double C153443 = C153441 + C153428;
    const double C153442 = C153440 + C153425;
    const double C153555 = C153553 + C153541;
    const double C153554 = C153552 + C153538;
    const double C153633 = C152272 * C153631;
    const double C153632 = C152272 * C153630;
    const double C55780 =
        (5 * (3 * C152738 + C152272 * C153026 + C153016 * ae) +
         C152272 * (4 * C153026 + C152272 * C153381 + C153369 * ae) +
         (4 * C153016 + C152272 * C153369) * ae) /
        C152045;
    const double C216 = C210 * C154164;
    const double C455 = C447 * C154164;
    const double C2917 = C447 * C154442;
    const double C12100 = C447 * C154226;
    const double C24288 = C447 * C154442;
    const double C71124 = C447 * C154226;
    const double C82869 = C447 * C82853;
    const double C831 = C830 * C154164;
    const double C11479 = C830 * C154226;
    const double C70510 = C830 * C154226;
    const double C692 = C684 * C154164;
    const double C967 = C966 * C154164;
    const double C1185 = C1181 * C154164;
    const double C12298 = C1181 * C154226;
    const double C71322 = C1181 * C154226;
    const double C7873 = C7861 + C7837;
    const double C47841 = C47829 + C47805;
    const double C64090 = C64086 + C64078;
    const double C107609 = C107605 + C107597;
    const double C116321 = C116309 + C116285;
    const double C58468 = C58465 + C58459;
    const double C64376 = C64372 + C64364;
    const double C78253 = C78250 + C78244;
    const double C107895 = C107891 + C107883;
    const double C120619 = C120616 + C120610;
    const double C63630 = C63619 - C63620;
    const double C107149 = C107138 - C107139;
    const double C32534 = C32528 + C32516;
    const double C53379 = C53373 + C53361;
    const double C69200 = C69196 + C69188;
    const double C136441 = C136437 + C136429;
    const double C149981 = C149978 + C149972;
    const double C68518 = C68511 - C68512;
    const double C135759 = C135752 - C135753;
    const double C55783 =
        (5 * (3 * C153018 + ae * C153025 + be * C153026 + C152272 * C153371) +
         ae * (4 * C153025 + C152272 * C153380 + C153369 * be) +
         be * (4 * C153026 + C152272 * C153381 + C153369 * ae) +
         C152272 *
             (4 * C153371 + ae * C153380 + be * C153381 +
              C152272 *
                  (3 * C153361 + ae * C153374 + be * C153375 +
                   C152272 *
                       (2 * C153351 + ae * C153362 + be * C153365 +
                        C152272 * (C152314 + ae * C153344 + be * C153347 +
                                   C152272 * (ae * C152416 + be * C152420 +
                                              C152272 * C152329)))))) /
        C152053;
    const double C55779 =
        (5 * (3 * C152737 + C152272 * C153025 + C153016 * be) +
         C152272 * (4 * C153025 + C152272 * C153380 + C153369 * be) +
         (4 * C153016 + C152272 * C153369) * be) /
        C152045;
    const double C153625 = C153592 + C153621;
    const double C115669 = C152180 * C580;
    const double C115657 = C152180 * C581;
    const double C115645 = C152180 * C582;
    const double C115633 = C152180 * C583;
    const double C115977 = C152180 * C1974;
    const double C115965 = C152180 * C1975;
    const double C115953 = C152180 * C1130;
    const double C115941 = C152180 * C1131;
    const double C116279 = C152180 * C2326;
    const double C116267 = C152180 * C2327;
    const double C116255 = C152180 * C586;
    const double C116243 = C152180 * C587;
    const double C116546 = C152180 * C1132;
    const double C116788 = C152180 * C588;
    const double C117113 = C152180 * C1543;
    const double C117101 = C152180 * C1544;
    const double C120271 = C152180 * C4255;
    const double C120258 = C152180 * C1976;
    const double C120243 = C152180 * C1129;
    const double C120604 = C152180 * C6261;
    const double C121607 = C152180 * C3442;
    const double C121594 = C152180 * C1545;
    const double C122123 = C152180 * C4254;
    const double C122434 = C152180 * C6263;
    const double C123421 = C152180 * C3441;
    const double C149726 = C152180 * C5659;
    const double C149966 = C152180 * C6262;
    const double C150714 = C152180 * C4907;
    const double C55530 =
        (C152180 / C152085 + ((C152197 - C152069 / C152198) * ae) / C152045) /
            C152085 -
        ((2 * (C152193 / C152085 + (0 * ae) / C152045) -
          C152069 / (C152045 * 4 * C152153)) *
         be) /
            C152045;
    const double C63059 =
        C152180 / C152085 - ((C152197 - C152069 / C152198) * be) / C152045;
    const double C106578 =
        C152180 / C152085 + ((C152197 - C152069 / C152198) * ae) / C152045;
    const double C152182 = C152179 + C152159;
    const double C97338 = C97328 - C97314;
    const double C97337 = C97327 - C97310;
    const double C97334 = C97324 - C97298;
    const double C97332 = C97322 - C97290;
    const double C97330 = C97320 - C97282;
    const double C97622 = C97610 - C97594;
    const double C97620 = C97608 - C97586;
    const double C97618 = C97606 - C97578;
    const double C97617 = C97605 - C97574;
    const double C97615 = C97603 - C97566;
    const double C97613 = C97601 - C97558;
    const double C97900 = C97888 - C97872;
    const double C97898 = C97886 - C97864;
    const double C97896 = C97884 - C97856;
    const double C97895 = C97883 - C97852;
    const double C97893 = C97881 - C97844;
    const double C97891 = C97879 - C97836;
    const double C98122 = C98120 - C98112;
    const double C98334 = C98332 - C98324;
    const double C98630 = C98624 - C98614;
    const double C98628 = C98622 - C98606;
    const double C98626 = C98620 - C98598;
    const double C101525 = C101513 - C101496;
    const double C101523 = C101511 - C101488;
    const double C101522 = C101510 - C101484;
    const double C101520 = C101508 - C101474;
    const double C101517 = C101505 - C101460;
    const double C101515 = C101503 - C101452;
    const double C101866 = C101860 - C101850;
    const double C101864 = C101858 - C101842;
    const double C101863 = C101857 - C101838;
    const double C102466 = C102464 - C102458;
    const double C102894 = C102888 - C102878;
    const double C102893 = C102887 - C102872;
    const double C102891 = C102885 - C102864;
    const double C103397 = C103395 - C103389;
    const double C103713 = C103709 - C103701;
    const double C103711 = C103707 - C103693;
    const double C104696 = C104694 - C104688;
    const double C111014 = C111012 - C111006;
    const double C131909 = C131907 - C131901;
    const double C132117 = C132115 - C132109;
    const double C132778 = C132776 - C132770;
    const double C7249 = C7243 + C7244;
    const double C7248 = C7239 + C7240;
    const double C30825 = C7551 + C7550;
    const double C77939 = C7550 + C7551;
    const double C77938 = C7548 + C7549;
    const double C77937 = C7549 + C7548;
    const double C8092 = C7545 + C7546;
    const double C78544 = C7546 + C7545;
    const double C8334 = C7863 + C7864;
    const double C79223 = C8688 + C8689;
    const double C79222 = C8689 + C8688;
    const double C32248 = C30858 + C30859;
    const double C30863 = C30854 + C30855;
    const double C33261 = C31876 + C31877;
    const double C15099 = C15093 + C15094;
    const double C15100 = C15092 + C15091;
    const double C15098 = C15091 + C15092;
    const double C15097 = C15089 + C15090;
    const double C19233 = C15379 + C15380;
    const double C19213 = C15380 + C15379;
    const double C19224 = C15377 + C15378;
    const double C19214 = C15378 + C15377;
    const double C19215 = C15375 + C15376;
    const double C19212 = C15376 + C15375;
    const double C15856 = C15373 + C15374;
    const double C18908 = C15374 + C15373;
    const double C15855 = C15371 + C15372;
    const double C19876 = C15372 + C15371;
    const double C16068 = C15651 + C15652;
    const double C16067 = C15649 + C15650;
    const double C20168 = C16382 + C16381;
    const double C20576 = C16381 + C16382;
    const double C20567 = C16379 + C16380;
    const double C20558 = C16380 + C16379;
    const double C38631 = C19262 + C19263;
    const double C38630 = C19263 + C19262;
    const double C38629 = C19261 + C19260;
    const double C39917 = C20599 + C20600;
    const double C39916 = C20600 + C20599;
    const double C40416 = C21100 + C21099;
    const double C43780 = C21099 + C21100;
    const double C41701 = C22384 + C22383;
    const double C44945 = C40430 + C40429;
    const double C45814 = C41715 + C41714;
    const double C47233 = C47227 + C47228;
    const double C47232 = C47223 + C47224;
    const double C51686 = C47535 + C47534;
    const double C58154 = C47534 + C47535;
    const double C58153 = C47532 + C47533;
    const double C58152 = C47533 + C47532;
    const double C48060 = C47529 + C47530;
    const double C58759 = C47530 + C47529;
    const double C48302 = C47831 + C47832;
    const double C59438 = C48652 + C48653;
    const double C59437 = C48653 + C48652;
    const double C53097 = C51719 + C51720;
    const double C51724 = C51715 + C51716;
    const double C54106 = C52725 + C52726;
    const double C152144 = C152139 - C152140;
    const double C55782 =
        (5 * (3 * C152761 + C152272 * C152984 + C152974 * ae) +
         C152272 * (4 * C152984 + C152272 * C153443 + C153431 * ae) +
         (4 * C152974 + C152272 * C153431) * ae) /
        C152045;
    const double C55784 =
        (5 * (3 * C152976 + ae * C152983 + be * C152984 + C152272 * C153433) +
         ae * (4 * C152983 + C152272 * C153442 + C153431 * be) +
         be * (4 * C152984 + C152272 * C153443 + C153431 * ae) +
         C152272 *
             (4 * C153433 + ae * C153442 + be * C153443 +
              C152272 *
                  (3 * C153423 + ae * C153436 + be * C153437 +
                   C152272 *
                       (2 * C153413 + ae * C153424 + be * C153427 +
                        C152272 * (C153035 + ae * C153406 + be * C153409 +
                                   C152272 * (ae * C153068 + be * C153074 +
                                              C152272 * C152278 *
                                                  (C152323 * C152324 +
                                                   C152275 * bs[9] *
                                                       std::pow(C152274, 9)) *
                                                  C152044)))))) /
        C152053;
    const double C55781 =
        (5 * (3 * C152760 + C152272 * C152983 + C152974 * be) +
         C152272 * (4 * C152983 + C152272 * C153442 + C153431 * be) +
         (4 * C152974 + C152272 * C153431) * be) /
        C152045;
    const double C56523 =
        (5 * (3 * C152900 + C152272 * C153319 + C153309 * ae) +
         C152272 * (4 * C153319 + C152272 * C153555 + C153544 * ae) +
         (4 * C153309 + C152272 * C153544) * ae) /
        C152045;
    const double C56524 =
        (5 * (3 * C153311 + ae * C153318 + be * C153319 + C152272 * C153542) +
         ae * (4 * C153318 + C152272 * C153554 + C153544 * be) +
         be * (4 * C153319 + C152272 * C153555 + C153544 * ae) +
         C152272 *
             (4 * C153542 + ae * C153554 + be * C153555 +
              C152272 *
                  (3 * C153532 + ae * C153548 + be * C153549 +
                   C152272 *
                       (2 * C153520 + ae * C153537 + be * C153540 +
                        C152272 * (C153498 + ae * C153521 + be * C153524 +
                                   C152272 * (ae * C153501 + be * C153507 +
                                              C152272 * C152482 *
                                                  (C152323 * C152324 +
                                                   C152275 * bs[9] *
                                                       std::pow(C152274, 9)) *
                                                  C152044)))))) /
        C152053;
    const double C56522 =
        (5 * (3 * C152899 + C152272 * C153318 + C153309 * be) +
         C152272 * (4 * C153318 + C152272 * C153554 + C153544 * be) +
         (4 * C153309 + C152272 * C153544) * be) /
        C152045;
    const double C153635 = C153578 + C153633;
    const double C153634 = C153568 + C153632;
    const double C63638 = C63630 - C63621;
    const double C107157 = C107149 - C107140;
    const double C68522 = C68518 - C68513;
    const double C135763 = C135759 - C135754;
    const double C115686 = C115668 - C115669;
    const double C115683 = C115656 - C115657;
    const double C115680 = C115644 - C115645;
    const double C115677 = C115632 - C115633;
    const double C115994 = C115976 - C115977;
    const double C115991 = C115964 - C115965;
    const double C115988 = C115952 - C115953;
    const double C115985 = C115940 - C115941;
    const double C116296 = C116278 - C116279;
    const double C116293 = C116266 - C116267;
    const double C116290 = C116254 - C116255;
    const double C116287 = C116242 - C116243;
    const double C116555 = C116545 - C116546;
    const double C116797 = C116787 - C116788;
    const double C117124 = C117112 - C117113;
    const double C117121 = C117100 - C117101;
    const double C120289 = C120270 - C120271;
    const double C120285 = C120257 - C120258;
    const double C120279 = C120242 - C120243;
    const double C120612 = C120603 - C120604;
    const double C121620 = C121606 - C121607;
    const double C121616 = C121593 - C121594;
    const double C122131 = C122122 - C122123;
    const double C122442 = C122433 - C122434;
    const double C123429 = C123420 - C123421;
    const double C149735 = C149725 - C149726;
    const double C149974 = C149965 - C149966;
    const double C150723 = C150713 - C150714;
    const double C63104 = C63059 * C588;
    const double C63084 = C63059 * C587;
    const double C63072 = C63059 * C586;
    const double C63366 = C63059 * C3442;
    const double C63346 = C63059 * C1544;
    const double C63616 = C63059 * C7774;
    const double C63596 = C63059 * C2327;
    const double C63850 = C63059 * C1543;
    const double C64072 = C63059 * C2326;
    const double C64358 = C63059 * C6261;
    const double C67050 = C63059 * C3441;
    const double C67038 = C63059 * C1545;
    const double C67930 = C63059 * C6263;
    const double C68286 = C63059 * C4907;
    const double C68508 = C63059 * C9277;
    const double C69182 = C63059 * C6262;
    const double C106623 = C106578 * C588;
    const double C106603 = C106578 * C587;
    const double C106591 = C106578 * C586;
    const double C106885 = C106578 * C3442;
    const double C106865 = C106578 * C1544;
    const double C107135 = C106578 * C7774;
    const double C107115 = C106578 * C2327;
    const double C107369 = C106578 * C1543;
    const double C107591 = C106578 * C2326;
    const double C107877 = C106578 * C6261;
    const double C134291 = C106578 * C3441;
    const double C134279 = C106578 * C1545;
    const double C135171 = C106578 * C6263;
    const double C135527 = C106578 * C4907;
    const double C135749 = C106578 * C9277;
    const double C136423 = C106578 * C6262;
    const double C152184 = C152182 * be;
    const double C97348 = C97338 + C97315;
    const double C97347 = C97337 + C97311;
    const double C97344 = C97334 + C97299;
    const double C97342 = C97332 + C97291;
    const double C97340 = C97330 + C97283;
    const double C97634 = C97622 + C97595;
    const double C97632 = C97620 + C97587;
    const double C97630 = C97618 + C97579;
    const double C97629 = C97617 + C97575;
    const double C97627 = C97615 + C97567;
    const double C97625 = C97613 + C97559;
    const double C97912 = C97900 + C97873;
    const double C97910 = C97898 + C97865;
    const double C97908 = C97896 + C97857;
    const double C97907 = C97895 + C97853;
    const double C97905 = C97893 + C97845;
    const double C97903 = C97891 + C97837;
    const double C98124 = C98122 + C98113;
    const double C98336 = C98334 + C98325;
    const double C98636 = C98630 + C98615;
    const double C98634 = C98628 + C98607;
    const double C98632 = C98626 + C98599;
    const double C101537 = C101525 + C101497;
    const double C101535 = C101523 + C101489;
    const double C101534 = C101522 + C101485;
    const double C101532 = C101520 + C101475;
    const double C101529 = C101517 + C101461;
    const double C101527 = C101515 + C101453;
    const double C101872 = C101866 + C101851;
    const double C101870 = C101864 + C101843;
    const double C101869 = C101863 + C101839;
    const double C102468 = C102466 + C102459;
    const double C102900 = C102894 + C102879;
    const double C102899 = C102893 + C102873;
    const double C102897 = C102891 + C102865;
    const double C103399 = C103397 + C103390;
    const double C103717 = C103713 + C103702;
    const double C103715 = C103711 + C103694;
    const double C104698 = C104696 + C104689;
    const double C111016 = C111014 + C111007;
    const double C131911 = C131909 + C131902;
    const double C132119 = C132117 + C132110;
    const double C132780 = C132778 + C132771;
    const double C7251 = C7242 + C7249;
    const double C7250 = C7248 + C7241;
    const double C30838 = C7552 + C30825;
    const double C77942 = C77939 + C7552;
    const double C77941 = C7547 + C77938;
    const double C77940 = C77937 + C7547;
    const double C8105 = C7544 + C8092;
    const double C78545 = C78544 + C7544;
    const double C8347 = C7862 + C8334;
    const double C79225 = C79223 + C8690;
    const double C79224 = C8690 + C79222;
    const double C32261 = C30857 + C32248;
    const double C30864 = C30863 + C30856;
    const double C33274 = C31875 + C33261;
    const double C15103 = C15099 * C154164;
    const double C15104 = C15100 * C154164;
    const double C18910 = C15100 * C154406;
    const double C86889 = C15100 * C70494;
    const double C15102 = C15098 * C154164;
    const double C15101 = C15097 * C154164;
    const double C18907 = C15097 * C154406;
    const double C86886 = C15097 * C70494;
    const double C19874 = C19213 * C154226;
    const double C87762 = C19213 * C154226;
    const double C15866 = C15856 * C154164;
    const double C19875 = C15856 * C154406;
    const double C87763 = C15856 * C70494;
    const double C18911 = C18908 * C154226;
    const double C86887 = C18908 * C154226;
    const double C15865 = C15855 * C154164;
    const double C18909 = C15855 * C154226;
    const double C86888 = C15855 * C154226;
    const double C16078 = C16068 * C154164;
    const double C20169 = C16068 * C154406;
    const double C88056 = C16068 * C70494;
    const double C16077 = C16067 * C154164;
    const double C20170 = C20168 * C154226;
    const double C88055 = C20168 * C154226;
    const double C47235 = C47226 + C47233;
    const double C47234 = C47232 + C47225;
    const double C51699 = C47536 + C51686;
    const double C58157 = C58154 + C47536;
    const double C58156 = C47531 + C58153;
    const double C58155 = C58152 + C47531;
    const double C48073 = C47528 + C48060;
    const double C58760 = C58759 + C47528;
    const double C48315 = C47830 + C48302;
    const double C59440 = C59438 + C48654;
    const double C59439 = C48654 + C59437;
    const double C53110 = C51718 + C53097;
    const double C51725 = C51724 + C51717;
    const double C54119 = C52724 + C54106;
    const double C152148 = C152144 + C152123;
    const double C153637 = C153635 + C153620;
    const double C153636 = C153634 + C153617;
    const double C63646 = C63638 + C63622;
    const double C107165 = C107157 + C107141;
    const double C68526 = C68522 + C68514;
    const double C135767 = C135763 + C135755;
    const double C115698 = C115686 - C115670;
    const double C115695 = C115683 - C115658;
    const double C115692 = C115680 - C115646;
    const double C115689 = C115677 - C115634;
    const double C116006 = C115994 - C115978;
    const double C116003 = C115991 - C115966;
    const double C116000 = C115988 - C115954;
    const double C115997 = C115985 - C115942;
    const double C116308 = C116296 - C116280;
    const double C116305 = C116293 - C116268;
    const double C116302 = C116290 - C116256;
    const double C116299 = C116287 - C116244;
    const double C116559 = C116555 - C116547;
    const double C116801 = C116797 - C116789;
    const double C117130 = C117124 - C117114;
    const double C117127 = C117121 - C117102;
    const double C120298 = C120289 - C120272;
    const double C120295 = C120285 - C120259;
    const double C120292 = C120279 - C120244;
    const double C120615 = C120612 - C120605;
    const double C121626 = C121620 - C121608;
    const double C121623 = C121616 - C121595;
    const double C122134 = C122131 - C122124;
    const double C122445 = C122442 - C122435;
    const double C123432 = C123429 - C123422;
    const double C149738 = C149735 - C149727;
    const double C149977 = C149974 - C149967;
    const double C150726 = C150723 - C150715;
    const double C63121 = C63103 - C63104;
    const double C63116 = C63083 - C63084;
    const double C63113 = C63071 - C63072;
    const double C63379 = C63365 - C63366;
    const double C63374 = C63345 - C63346;
    const double C63629 = C63615 - C63616;
    const double C63624 = C63595 - C63596;
    const double C63859 = C63849 - C63850;
    const double C64081 = C64071 - C64072;
    const double C64367 = C64357 - C64358;
    const double C67066 = C67049 - C67050;
    const double C67063 = C67037 - C67038;
    const double C67942 = C67929 - C67930;
    const double C68295 = C68285 - C68286;
    const double C68517 = C68507 - C68508;
    const double C69191 = C69181 - C69182;
    const double C106640 = C106622 - C106623;
    const double C106635 = C106602 - C106603;
    const double C106632 = C106590 - C106591;
    const double C106898 = C106884 - C106885;
    const double C106893 = C106864 - C106865;
    const double C107148 = C107134 - C107135;
    const double C107143 = C107114 - C107115;
    const double C107378 = C107368 - C107369;
    const double C107600 = C107590 - C107591;
    const double C107886 = C107876 - C107877;
    const double C134307 = C134290 - C134291;
    const double C134304 = C134278 - C134279;
    const double C135183 = C135170 - C135171;
    const double C135536 = C135526 - C135527;
    const double C135758 = C135748 - C135749;
    const double C136432 = C136422 - C136423;
    const double C152185 = C152184 / C152045;
    const double C97352 = C97346 + C97347;
    const double C97353 = C97345 + C97344;
    const double C97351 = C97344 + C97345;
    const double C97350 = C97342 + C97343;
    const double C101502 = C97633 + C97632;
    const double C102165 = C97632 + C97633;
    const double C101476 = C97631 + C97630;
    const double C101467 = C97630 + C97631;
    const double C101477 = C97628 + C97629;
    const double C101466 = C97629 + C97628;
    const double C98109 = C97626 + C97627;
    const double C102164 = C97627 + C97626;
    const double C98108 = C97624 + C97625;
    const double C111310 = C97625 + C97624;
    const double C98321 = C97904 + C97905;
    const double C98320 = C97902 + C97903;
    const double C111602 = C98635 + C98634;
    const double C111992 = C98634 + C98635;
    const double C102874 = C98632 + C98633;
    const double C102857 = C98633 + C98632;
    const double C103386 = C101533 + C101534;
    const double C130733 = C101534 + C101533;
    const double C101541 = C101532 + C101531;
    const double C101540 = C101531 + C101532;
    const double C101539 = C101529 + C101530;
    const double C102875 = C101869 + C101868;
    const double C102856 = C101868 + C101869;
    const double C104685 = C102896 + C102897;
    const double C131898 = C103400 + C103399;
    const double C132767 = C104699 + C104698;
    const double C7253 = C7251 * C154164;
    const double C7252 = C7250 * C154164;
    const double C8109 = C8105 * C154164;
    const double C8351 = C8347 * C154164;
    const double C19877 = C19874 + C19875;
    const double C87764 = C87762 + C87763;
    const double C18913 = C18907 + C18911;
    const double C86890 = C86886 + C86887;
    const double C18912 = C18909 + C18910;
    const double C86891 = C86888 + C86889;
    const double C20171 = C20170 + C20169;
    const double C88057 = C88055 + C88056;
    const double C47237 = C47235 * C154164;
    const double C47236 = C47234 * C154164;
    const double C48077 = C48073 * C154164;
    const double C48319 = C48315 * C154164;
    const double C115666 = C152148 * C153;
    const double C115664 = C152148 * C152;
    const double C115662 = C152148 * C151;
    const double C115660 = C152148 * C150;
    const double C115642 = C152148 * C149;
    const double C115640 = C152148 * C148;
    const double C115630 = C152148 * C147;
    const double C115628 = C152148 * C146;
    const double C115974 = C152148 * C370;
    const double C115972 = C152148 * C369;
    const double C115962 = C152148 * C368;
    const double C115960 = C152148 * C367;
    const double C115958 = C152148 * C362;
    const double C115956 = C152148 * C361;
    const double C115946 = C152148 * C360;
    const double C115944 = C152148 * C359;
    const double C116276 = C152148 * C607;
    const double C116274 = C152148 * C606;
    const double C116264 = C152148 * C605;
    const double C116262 = C152148 * C604;
    const double C116260 = C152148 * C599;
    const double C116258 = C152148 * C598;
    const double C116248 = C152148 * C597;
    const double C116246 = C152148 * C596;
    const double C116543 = C152148 * C358;
    const double C116541 = C152148 * C357;
    const double C116785 = C152148 * C595;
    const double C116783 = C152148 * C594;
    const double C117110 = C152148 * C1140;
    const double C117108 = C152148 * C1139;
    const double C117098 = C152148 * C1138;
    const double C117096 = C152148 * C1137;
    const double C120268 = C152148 * C1411;
    const double C120266 = C152148 * C1410;
    const double C120263 = C152148 * C366;
    const double C120261 = C152148 * C365;
    const double C120240 = C152148 * C364;
    const double C120238 = C152148 * C363;
    const double C120601 = C152148 * C1553;
    const double C120599 = C152148 * C1552;
    const double C121604 = C152148 * C1984;
    const double C121602 = C152148 * C1983;
    const double C121599 = C152148 * C1136;
    const double C121597 = C152148 * C1135;
    const double C122120 = C152148 * C1413;
    const double C122118 = C152148 * C1412;
    const double C122431 = C152148 * C1555;
    const double C122429 = C152148 * C1554;
    const double C123418 = C152148 * C1986;
    const double C123416 = C152148 * C1985;
    const double C149723 = C152148 * C3144;
    const double C149721 = C152148 * C3143;
    const double C149963 = C152148 * C3446;
    const double C149961 = C152148 * C3445;
    const double C150711 = C152148 * C4259;
    const double C150709 = C152148 * C4258;
    const double C55523 =
        (((((0 - (C152043 * C152106) / C152045) * ae) / C152045 -
           (0 * be) / C152055 + (2 * C152107) / C152045) /
              C152085 -
          ((C152043 * C152142 + 0) * be) / C152045 + C152116 - C152130) /
             C152085 +
         ((C152043 * C152150 + 0) * ae) / C152045) /
            C152085 -
        ((C152043 * (C152150 / C152085 +
                     ((C152043 * C152148 + C154264) * ae) / C152045 + C152145) +
          C154488) *
         be) /
            C152045 +
        C152148 / C152085 + ((C152043 * C152145 + C154271) * ae) / C152045 +
        2 * (C152123 / C152085 - (0 * be) / C152045);
    const double C55525 =
        (C152150 / C152085 + ((C152043 * C152148 + C154264) * ae) / C152045 +
         C152145) /
            C152085 -
        ((C152043 *
              (C152148 / C152085 +
               ((C152043 * C152145 + C154271) * ae) / C152045 + 2 * C152193) +
          C154485) *
         be) /
            C152045 +
        2 * (C152145 / C152085 +
             ((C152043 * C152193 + C115620) * ae) / C152045);
    const double C55527 =
        (C152148 / C152085 + ((C152043 * C152145 + C154271) * ae) / C152045 +
         C152197) /
            C152085 -
        ((C152043 * (C152145 / C152085 +
                     ((C152043 * C152193 + C115620) * ae) / C152045) +
          C154476) *
         be) /
            C152045 +
        3 * (C152193 / C152085 + (0 * ae) / C152045);
    const double C63054 = C152150 / C152085 -
                          ((C152043 * C152148 + C154264) * be) / C152045 +
                          C152145;
    const double C63056 = C152148 / C152085 -
                          ((C152043 * C152145 + C154271) * be) / C152045 +
                          C152197;
    const double C106573 = C152150 / C152085 +
                           ((C152043 * C152148 + C154264) * ae) / C152045 +
                           C152145;
    const double C106575 = C152148 / C152085 +
                           ((C152043 * C152145 + C154271) * ae) / C152045 +
                           C152197;
    const double C57259 =
        (6 * (4 * C153026 + C152272 * C153381 + C153369 * ae) +
         C152272 * (5 * C153381 + C152272 * C153637 + C153623 * ae) +
         (5 * C153369 + C152272 * C153623) * ae) /
        C152045;
    const double C57260 =
        (6 * (4 * C153371 + ae * C153380 + be * C153381 + C152272 * C153625) +
         ae * (5 * C153380 + C152272 * C153636 + C153623 * be) +
         be * (5 * C153381 + C152272 * C153637 + C153623 * ae) +
         C152272 *
             (5 * C153625 + ae * C153636 + be * C153637 +
              C152272 *
                  (4 * C153615 + ae * C153630 + be * C153631 +
                   C152272 *
                       (3 * C153605 + ae * C153622 + be * C153624 +
                        C152272 *
                            (2 * C153595 + ae * C153606 + be * C153609 +
                             C152272 *
                                 (C152329 + ae * C153587 + be * C153590 +
                                  C152272 * (ae * C152452 + be * C152456 +
                                             C152272 *
                                                 (C152323 * C152324 +
                                                  C152275 * bs[9] *
                                                      std::pow(C152274, 9)) *
                                                 C152044))))))) /
        C152053;
    const double C57258 =
        (6 * (4 * C153025 + C152272 * C153380 + C153369 * be) +
         C152272 * (5 * C153380 + C152272 * C153636 + C153623 * be) +
         (5 * C153369 + C152272 * C153623) * be) /
        C152045;
    const double C115710 = C115698 + C115671;
    const double C115707 = C115695 + C115659;
    const double C115704 = C115692 + C115647;
    const double C115701 = C115689 + C115635;
    const double C116018 = C116006 + C115979;
    const double C116015 = C116003 + C115967;
    const double C116012 = C116000 + C115955;
    const double C116009 = C115997 + C115943;
    const double C116320 = C116308 + C116281;
    const double C116317 = C116305 + C116269;
    const double C116314 = C116302 + C116257;
    const double C116311 = C116299 + C116245;
    const double C116562 = C116559 + C116548;
    const double C116804 = C116801 + C116790;
    const double C117136 = C117130 + C117115;
    const double C117133 = C117127 + C117103;
    const double C120307 = C120298 + C120273;
    const double C120304 = C120295 + C120260;
    const double C120301 = C120292 + C120245;
    const double C120618 = C120615 + C120606;
    const double C121632 = C121626 + C121609;
    const double C121629 = C121623 + C121596;
    const double C122137 = C122134 + C122125;
    const double C122448 = C122445 + C122436;
    const double C123435 = C123432 + C123423;
    const double C149741 = C149738 + C149728;
    const double C149980 = C149977 + C149968;
    const double C150729 = C150726 + C150716;
    const double C63133 = C63121 - C63105;
    const double C63128 = C63116 - C63085;
    const double C63125 = C63113 - C63073;
    const double C63387 = C63379 - C63367;
    const double C63382 = C63374 - C63347;
    const double C63637 = C63629 - C63617;
    const double C63632 = C63624 - C63597;
    const double C63863 = C63859 - C63851;
    const double C64085 = C64081 - C64073;
    const double C64371 = C64367 - C64359;
    const double C67074 = C67066 - C67051;
    const double C67071 = C67063 - C67039;
    const double C67946 = C67942 - C67931;
    const double C68299 = C68295 - C68287;
    const double C68521 = C68517 - C68509;
    const double C69195 = C69191 - C69183;
    const double C106652 = C106640 - C106624;
    const double C106647 = C106635 - C106604;
    const double C106644 = C106632 - C106592;
    const double C106906 = C106898 - C106886;
    const double C106901 = C106893 - C106866;
    const double C107156 = C107148 - C107136;
    const double C107151 = C107143 - C107116;
    const double C107382 = C107378 - C107370;
    const double C107604 = C107600 - C107592;
    const double C107890 = C107886 - C107878;
    const double C134315 = C134307 - C134292;
    const double C134312 = C134304 - C134280;
    const double C135187 = C135183 - C135172;
    const double C135540 = C135536 - C135528;
    const double C135762 = C135758 - C135750;
    const double C136436 = C136432 - C136424;
    const double C152186 = C152169 - C152185;
    const double C97356 = C97352 * C154164;
    const double C97357 = C97353 * C154164;
    const double C110421 = C97353 * C154406;
    const double C125374 = C97353 * C70494;
    const double C97355 = C97351 * C154164;
    const double C97354 = C97350 * C154164;
    const double C110418 = C97350 * C154406;
    const double C125371 = C97350 * C70494;
    const double C111308 = C101502 * C154226;
    const double C126247 = C101502 * C154226;
    const double C98119 = C98109 * C154164;
    const double C111309 = C98109 * C154406;
    const double C126248 = C98109 * C70494;
    const double C110419 = C102164 * C154226;
    const double C125372 = C102164 * C154226;
    const double C98118 = C98108 * C154164;
    const double C110420 = C98108 * C154226;
    const double C125373 = C98108 * C154226;
    const double C98331 = C98321 * C154164;
    const double C111603 = C98321 * C154406;
    const double C126541 = C98321 * C70494;
    const double C98330 = C98320 * C154164;
    const double C111604 = C111602 * C154226;
    const double C126540 = C111602 * C154226;
    const double C63097 = C63054 * C151;
    const double C63095 = C63054 * C150;
    const double C63093 = C63054 * C149;
    const double C63091 = C63054 * C148;
    const double C63065 = C63054 * C147;
    const double C63063 = C63054 * C146;
    const double C63359 = C63054 * C368;
    const double C63357 = C63054 * C367;
    const double C63355 = C63054 * C362;
    const double C63353 = C63054 * C361;
    const double C63609 = C63054 * C605;
    const double C63607 = C63054 * C604;
    const double C63605 = C63054 * C599;
    const double C63603 = C63054 * C598;
    const double C63843 = C63054 * C360;
    const double C63841 = C63054 * C359;
    const double C64065 = C63054 * C597;
    const double C64063 = C63054 * C596;
    const double C64351 = C63054 * C1138;
    const double C64349 = C63054 * C1137;
    const double C67059 = C63054 * C366;
    const double C67057 = C63054 * C365;
    const double C67031 = C63054 * C364;
    const double C67029 = C63054 * C363;
    const double C67939 = C63054 * C1136;
    const double C67937 = C63054 * C1135;
    const double C68279 = C63054 * C1413;
    const double C68277 = C63054 * C1412;
    const double C68501 = C63054 * C1555;
    const double C68499 = C63054 * C1554;
    const double C69175 = C63054 * C1986;
    const double C69173 = C63054 * C1985;
    const double C63101 = C63056 * C595;
    const double C63099 = C63056 * C594;
    const double C63089 = C63056 * C597;
    const double C63087 = C63056 * C596;
    const double C63069 = C63056 * C599;
    const double C63067 = C63056 * C598;
    const double C63363 = C63056 * C1984;
    const double C63361 = C63056 * C1983;
    const double C63351 = C63056 * C1138;
    const double C63349 = C63056 * C1137;
    const double C63613 = C63056 * C2336;
    const double C63611 = C63056 * C2335;
    const double C63601 = C63056 * C605;
    const double C63599 = C63056 * C604;
    const double C63847 = C63056 * C1140;
    const double C63845 = C63056 * C1139;
    const double C64069 = C63056 * C607;
    const double C64067 = C63056 * C606;
    const double C64355 = C63056 * C1553;
    const double C64353 = C63056 * C1552;
    const double C67055 = C63056 * C1986;
    const double C67053 = C63056 * C1985;
    const double C67035 = C63056 * C1136;
    const double C67033 = C63056 * C1135;
    const double C67935 = C63056 * C1555;
    const double C67933 = C63056 * C1554;
    const double C68283 = C63056 * C4259;
    const double C68281 = C63056 * C4258;
    const double C68505 = C63056 * C6275;
    const double C68503 = C63056 * C6274;
    const double C69179 = C63056 * C3446;
    const double C69177 = C63056 * C3445;
    const double C106616 = C106573 * C151;
    const double C106614 = C106573 * C150;
    const double C106612 = C106573 * C149;
    const double C106610 = C106573 * C148;
    const double C106584 = C106573 * C147;
    const double C106582 = C106573 * C146;
    const double C106878 = C106573 * C368;
    const double C106876 = C106573 * C367;
    const double C106874 = C106573 * C362;
    const double C106872 = C106573 * C361;
    const double C107128 = C106573 * C605;
    const double C107126 = C106573 * C604;
    const double C107124 = C106573 * C599;
    const double C107122 = C106573 * C598;
    const double C107362 = C106573 * C360;
    const double C107360 = C106573 * C359;
    const double C107584 = C106573 * C597;
    const double C107582 = C106573 * C596;
    const double C107870 = C106573 * C1138;
    const double C107868 = C106573 * C1137;
    const double C134300 = C106573 * C366;
    const double C134298 = C106573 * C365;
    const double C134272 = C106573 * C364;
    const double C134270 = C106573 * C363;
    const double C135180 = C106573 * C1136;
    const double C135178 = C106573 * C1135;
    const double C135520 = C106573 * C1413;
    const double C135518 = C106573 * C1412;
    const double C135742 = C106573 * C1555;
    const double C135740 = C106573 * C1554;
    const double C136416 = C106573 * C1986;
    const double C136414 = C106573 * C1985;
    const double C106620 = C106575 * C595;
    const double C106618 = C106575 * C594;
    const double C106608 = C106575 * C597;
    const double C106606 = C106575 * C596;
    const double C106588 = C106575 * C599;
    const double C106586 = C106575 * C598;
    const double C106882 = C106575 * C1984;
    const double C106880 = C106575 * C1983;
    const double C106870 = C106575 * C1138;
    const double C106868 = C106575 * C1137;
    const double C107132 = C106575 * C2336;
    const double C107130 = C106575 * C2335;
    const double C107120 = C106575 * C605;
    const double C107118 = C106575 * C604;
    const double C107366 = C106575 * C1140;
    const double C107364 = C106575 * C1139;
    const double C107588 = C106575 * C607;
    const double C107586 = C106575 * C606;
    const double C107874 = C106575 * C1553;
    const double C107872 = C106575 * C1552;
    const double C134296 = C106575 * C1986;
    const double C134294 = C106575 * C1985;
    const double C134276 = C106575 * C1136;
    const double C134274 = C106575 * C1135;
    const double C135176 = C106575 * C1555;
    const double C135174 = C106575 * C1554;
    const double C135524 = C106575 * C4259;
    const double C135522 = C106575 * C4258;
    const double C135746 = C106575 * C6275;
    const double C135744 = C106575 * C6274;
    const double C136420 = C106575 * C3446;
    const double C136418 = C106575 * C3445;
    const double C63145 = C63133 + C63106;
    const double C63140 = C63128 + C63086;
    const double C63137 = C63125 + C63074;
    const double C63395 = C63387 + C63368;
    const double C63390 = C63382 + C63348;
    const double C63645 = C63637 + C63618;
    const double C63640 = C63632 + C63598;
    const double C63867 = C63863 + C63852;
    const double C64089 = C64085 + C64074;
    const double C64375 = C64371 + C64360;
    const double C67082 = C67074 + C67052;
    const double C67079 = C67071 + C67040;
    const double C67950 = C67946 + C67932;
    const double C68303 = C68299 + C68288;
    const double C68525 = C68521 + C68510;
    const double C69199 = C69195 + C69184;
    const double C106664 = C106652 + C106625;
    const double C106659 = C106647 + C106605;
    const double C106656 = C106644 + C106593;
    const double C106914 = C106906 + C106887;
    const double C106909 = C106901 + C106867;
    const double C107164 = C107156 + C107137;
    const double C107159 = C107151 + C107117;
    const double C107386 = C107382 + C107371;
    const double C107608 = C107604 + C107593;
    const double C107894 = C107890 + C107879;
    const double C134323 = C134315 + C134293;
    const double C134320 = C134312 + C134281;
    const double C135191 = C135187 + C135173;
    const double C135544 = C135540 + C135529;
    const double C135766 = C135762 + C135751;
    const double C136440 = C136436 + C136425;
    const double C152187 = C152186 - C152160;
    const double C111311 = C111308 + C111309;
    const double C126249 = C126247 + C126248;
    const double C110422 = C110418 + C110419;
    const double C125375 = C125371 + C125372;
    const double C110423 = C110420 + C110421;
    const double C125376 = C125373 + C125374;
    const double C111605 = C111604 + C111603;
    const double C126542 = C126540 + C126541;
    const double C115665 = C152187 * C140;
    const double C115661 = C152187 * C139;
    const double C115641 = C152187 * C138;
    const double C115629 = C152187 * C137;
    const double C115973 = C152187 * C350;
    const double C115961 = C152187 * C349;
    const double C115957 = C152187 * C346;
    const double C115945 = C152187 * C345;
    const double C116275 = C152187 * C587;
    const double C116263 = C152187 * C586;
    const double C116259 = C152187 * C583;
    const double C116247 = C152187 * C582;
    const double C116542 = C152187 * C344;
    const double C116784 = C152187 * C581;
    const double C117109 = C152187 * C1131;
    const double C117097 = C152187 * C1130;
    const double C120267 = C152187 * C1402;
    const double C120262 = C152187 * C348;
    const double C120239 = C152187 * C347;
    const double C120600 = C152187 * C1544;
    const double C121603 = C152187 * C1975;
    const double C121598 = C152187 * C1129;
    const double C122119 = C152187 * C1403;
    const double C122430 = C152187 * C1545;
    const double C123417 = C152187 * C1976;
    const double C149722 = C152187 * C3139;
    const double C149962 = C152187 * C3441;
    const double C150710 = C152187 * C4254;
    const double C55524 =
        (((ae * -2 * C152106) / C152153 -
          (((C152043 * C152163) / C152053 + 2 * C152142) * be) / C152045 -
          C152164 / C152053) /
             C152085 +
         ((C152043 * C152183 + 2 * C152150) * ae) / C152045) /
            C152085 -
        ((C152043 *
              (C152183 / C152085 +
               ((C152043 * C152187 + 2 * C152148) * ae) / C152045 + C152180) +
          2 * (C152150 / C152085 +
               ((C152043 * C152148 + C154264) * ae) / C152045 + C152145)) *
         be) /
            C152045 +
        C152187 / C152085 + ((C152043 * C152180 + 2 * C152145) * ae) / C152045 +
        (-2 * C152064) / (C152045 * 4 * C152053);
    const double C55526 =
        (C152183 / C152085 +
         ((C152043 * C152187 + 2 * C152148) * ae) / C152045 + C152180) /
            C152085 -
        ((C152043 * (C152187 / C152085 +
                     ((C152043 * C152180 + 2 * C152145) * ae) / C152045 +
                     (-2 * C152064) / C152198) +
          2 * (C152148 / C152085 +
               ((C152043 * C152145 + C154271) * ae) / C152045 + C152197)) *
         be) /
            C152045 +
        2 * (C152180 / C152085 +
             ((C152197 - C152069 / C152198) * ae) / C152045);
    const double C55528 =
        (C152187 / C152085 +
         ((C152043 * C152180 + 2 * C152145) * ae) / C152045 +
         (-2 * C152064) / C152198) /
            C152085 -
        ((C152043 * (C152180 / C152085 +
                     ((C152197 - C152069 / C152198) * ae) / C152045) +
          2 * (C152145 / C152085 +
               ((C152043 * C152193 + C115620) * ae) / C152045)) *
         be) /
            C152045 +
        (-3 * C152064) / (C152045 * 4 * C152153);
    const double C63055 = C152183 / C152085 -
                          ((C152043 * C152187 + 2 * C152148) * be) / C152045 +
                          C152180;
    const double C63057 = C152187 / C152085 -
                          ((C152043 * C152180 + 2 * C152145) * be) / C152045 +
                          (-2 * C152064) / C152198;
    const double C106574 = C152183 / C152085 +
                           ((C152043 * C152187 + 2 * C152148) * ae) / C152045 +
                           C152180;
    const double C106576 = C152187 / C152085 +
                           ((C152043 * C152180 + 2 * C152145) * ae) / C152045 +
                           (-2 * C152064) / C152198;
    const double C115685 = C115664 - C115665;
    const double C115684 = C115660 - C115661;
    const double C115679 = C115640 - C115641;
    const double C115676 = C115628 - C115629;
    const double C115993 = C115972 - C115973;
    const double C115990 = C115960 - C115961;
    const double C115989 = C115956 - C115957;
    const double C115986 = C115944 - C115945;
    const double C116295 = C116274 - C116275;
    const double C116292 = C116262 - C116263;
    const double C116291 = C116258 - C116259;
    const double C116288 = C116246 - C116247;
    const double C116554 = C116541 - C116542;
    const double C116796 = C116783 - C116784;
    const double C117123 = C117108 - C117109;
    const double C117120 = C117096 - C117097;
    const double C120288 = C120266 - C120267;
    const double C120286 = C120261 - C120262;
    const double C120278 = C120238 - C120239;
    const double C120611 = C120599 - C120600;
    const double C121619 = C121602 - C121603;
    const double C121617 = C121597 - C121598;
    const double C122130 = C122118 - C122119;
    const double C122441 = C122429 - C122430;
    const double C123428 = C123416 - C123417;
    const double C149734 = C149721 - C149722;
    const double C149973 = C149961 - C149962;
    const double C150722 = C150709 - C150710;
    const double C63096 = C63055 * C139;
    const double C63092 = C63055 * C138;
    const double C63064 = C63055 * C137;
    const double C63358 = C63055 * C349;
    const double C63354 = C63055 * C346;
    const double C63608 = C63055 * C586;
    const double C63604 = C63055 * C583;
    const double C63842 = C63055 * C345;
    const double C64064 = C63055 * C582;
    const double C64350 = C63055 * C1130;
    const double C67058 = C63055 * C348;
    const double C67030 = C63055 * C347;
    const double C67938 = C63055 * C1129;
    const double C68278 = C63055 * C1403;
    const double C68500 = C63055 * C1545;
    const double C69174 = C63055 * C1976;
    const double C63100 = C63057 * C581;
    const double C63088 = C63057 * C582;
    const double C63068 = C63057 * C583;
    const double C63362 = C63057 * C1975;
    const double C63350 = C63057 * C1130;
    const double C63612 = C63057 * C2327;
    const double C63600 = C63057 * C586;
    const double C63846 = C63057 * C1131;
    const double C64068 = C63057 * C587;
    const double C64354 = C63057 * C1544;
    const double C67054 = C63057 * C1976;
    const double C67034 = C63057 * C1129;
    const double C67934 = C63057 * C1545;
    const double C68282 = C63057 * C4254;
    const double C68504 = C63057 * C6263;
    const double C69178 = C63057 * C3441;
    const double C106615 = C106574 * C139;
    const double C106611 = C106574 * C138;
    const double C106583 = C106574 * C137;
    const double C106877 = C106574 * C349;
    const double C106873 = C106574 * C346;
    const double C107127 = C106574 * C586;
    const double C107123 = C106574 * C583;
    const double C107361 = C106574 * C345;
    const double C107583 = C106574 * C582;
    const double C107869 = C106574 * C1130;
    const double C134299 = C106574 * C348;
    const double C134271 = C106574 * C347;
    const double C135179 = C106574 * C1129;
    const double C135519 = C106574 * C1403;
    const double C135741 = C106574 * C1545;
    const double C136415 = C106574 * C1976;
    const double C106619 = C106576 * C581;
    const double C106607 = C106576 * C582;
    const double C106587 = C106576 * C583;
    const double C106881 = C106576 * C1975;
    const double C106869 = C106576 * C1130;
    const double C107131 = C106576 * C2327;
    const double C107119 = C106576 * C586;
    const double C107365 = C106576 * C1131;
    const double C107587 = C106576 * C587;
    const double C107873 = C106576 * C1544;
    const double C134295 = C106576 * C1976;
    const double C134275 = C106576 * C1129;
    const double C135175 = C106576 * C1545;
    const double C135523 = C106576 * C4254;
    const double C135745 = C106576 * C6263;
    const double C136419 = C106576 * C3441;
    const double C115697 = C115685 - C115666;
    const double C115696 = C115684 - C115662;
    const double C115691 = C115679 - C115642;
    const double C115688 = C115676 - C115630;
    const double C116005 = C115993 - C115974;
    const double C116002 = C115990 - C115962;
    const double C116001 = C115989 - C115958;
    const double C115998 = C115986 - C115946;
    const double C116307 = C116295 - C116276;
    const double C116304 = C116292 - C116264;
    const double C116303 = C116291 - C116260;
    const double C116300 = C116288 - C116248;
    const double C116558 = C116554 - C116543;
    const double C116800 = C116796 - C116785;
    const double C117129 = C117123 - C117110;
    const double C117126 = C117120 - C117098;
    const double C120297 = C120288 - C120268;
    const double C120296 = C120286 - C120263;
    const double C120291 = C120278 - C120240;
    const double C120614 = C120611 - C120601;
    const double C121625 = C121619 - C121604;
    const double C121624 = C121617 - C121599;
    const double C122133 = C122130 - C122120;
    const double C122444 = C122441 - C122431;
    const double C123431 = C123428 - C123418;
    const double C149737 = C149734 - C149723;
    const double C149976 = C149973 - C149963;
    const double C150725 = C150722 - C150711;
    const double C63119 = C63095 - C63096;
    const double C63118 = C63091 - C63092;
    const double C63111 = C63063 - C63064;
    const double C63377 = C63357 - C63358;
    const double C63376 = C63353 - C63354;
    const double C63627 = C63607 - C63608;
    const double C63626 = C63603 - C63604;
    const double C63857 = C63841 - C63842;
    const double C64079 = C64063 - C64064;
    const double C64365 = C64349 - C64350;
    const double C67068 = C67057 - C67058;
    const double C67061 = C67029 - C67030;
    const double C67944 = C67937 - C67938;
    const double C68293 = C68277 - C68278;
    const double C68515 = C68499 - C68500;
    const double C69189 = C69173 - C69174;
    const double C63120 = C63099 - C63100;
    const double C63117 = C63087 - C63088;
    const double C63112 = C63067 - C63068;
    const double C63378 = C63361 - C63362;
    const double C63375 = C63349 - C63350;
    const double C63628 = C63611 - C63612;
    const double C63625 = C63599 - C63600;
    const double C63858 = C63845 - C63846;
    const double C64080 = C64067 - C64068;
    const double C64366 = C64353 - C64354;
    const double C67067 = C67053 - C67054;
    const double C67062 = C67033 - C67034;
    const double C67943 = C67933 - C67934;
    const double C68294 = C68281 - C68282;
    const double C68516 = C68503 - C68504;
    const double C69190 = C69177 - C69178;
    const double C106638 = C106614 - C106615;
    const double C106637 = C106610 - C106611;
    const double C106630 = C106582 - C106583;
    const double C106896 = C106876 - C106877;
    const double C106895 = C106872 - C106873;
    const double C107146 = C107126 - C107127;
    const double C107145 = C107122 - C107123;
    const double C107376 = C107360 - C107361;
    const double C107598 = C107582 - C107583;
    const double C107884 = C107868 - C107869;
    const double C134309 = C134298 - C134299;
    const double C134302 = C134270 - C134271;
    const double C135185 = C135178 - C135179;
    const double C135534 = C135518 - C135519;
    const double C135756 = C135740 - C135741;
    const double C136430 = C136414 - C136415;
    const double C106639 = C106618 - C106619;
    const double C106636 = C106606 - C106607;
    const double C106631 = C106586 - C106587;
    const double C106897 = C106880 - C106881;
    const double C106894 = C106868 - C106869;
    const double C107147 = C107130 - C107131;
    const double C107144 = C107118 - C107119;
    const double C107377 = C107364 - C107365;
    const double C107599 = C107586 - C107587;
    const double C107885 = C107872 - C107873;
    const double C134308 = C134294 - C134295;
    const double C134303 = C134274 - C134275;
    const double C135184 = C135174 - C135175;
    const double C135535 = C135522 - C135523;
    const double C135757 = C135744 - C135745;
    const double C136431 = C136418 - C136419;
    const double C115709 = C115697 + C115667;
    const double C115708 = C115696 + C115663;
    const double C115703 = C115691 + C115643;
    const double C115700 = C115688 + C115631;
    const double C116017 = C116005 + C115975;
    const double C116014 = C116002 + C115963;
    const double C116013 = C116001 + C115959;
    const double C116010 = C115998 + C115947;
    const double C116319 = C116307 + C116277;
    const double C116316 = C116304 + C116265;
    const double C116315 = C116303 + C116261;
    const double C116312 = C116300 + C116249;
    const double C116561 = C116558 + C116544;
    const double C116803 = C116800 + C116786;
    const double C117135 = C117129 + C117111;
    const double C117132 = C117126 + C117099;
    const double C120306 = C120297 + C120269;
    const double C120305 = C120296 + C120264;
    const double C120300 = C120291 + C120241;
    const double C120617 = C120614 + C120602;
    const double C121631 = C121625 + C121605;
    const double C121630 = C121624 + C121600;
    const double C122136 = C122133 + C122121;
    const double C122447 = C122444 + C122432;
    const double C123434 = C123431 + C123419;
    const double C149740 = C149737 + C149724;
    const double C149979 = C149976 + C149964;
    const double C150728 = C150725 + C150712;
    const double C63131 = C63119 - C63097;
    const double C63130 = C63118 - C63093;
    const double C63123 = C63111 - C63065;
    const double C63385 = C63377 - C63359;
    const double C63384 = C63376 - C63355;
    const double C63635 = C63627 - C63609;
    const double C63634 = C63626 - C63605;
    const double C63861 = C63857 - C63843;
    const double C64083 = C64079 - C64065;
    const double C64369 = C64365 - C64351;
    const double C67076 = C67068 - C67059;
    const double C67069 = C67061 - C67031;
    const double C67948 = C67944 - C67939;
    const double C68297 = C68293 - C68279;
    const double C68519 = C68515 - C68501;
    const double C69193 = C69189 - C69175;
    const double C63132 = C63120 - C63101;
    const double C63129 = C63117 - C63089;
    const double C63124 = C63112 - C63069;
    const double C63386 = C63378 - C63363;
    const double C63383 = C63375 - C63351;
    const double C63636 = C63628 - C63613;
    const double C63633 = C63625 - C63601;
    const double C63862 = C63858 - C63847;
    const double C64084 = C64080 - C64069;
    const double C64370 = C64366 - C64355;
    const double C67075 = C67067 - C67055;
    const double C67070 = C67062 - C67035;
    const double C67947 = C67943 - C67935;
    const double C68298 = C68294 - C68283;
    const double C68520 = C68516 - C68505;
    const double C69194 = C69190 - C69179;
    const double C106650 = C106638 - C106616;
    const double C106649 = C106637 - C106612;
    const double C106642 = C106630 - C106584;
    const double C106904 = C106896 - C106878;
    const double C106903 = C106895 - C106874;
    const double C107154 = C107146 - C107128;
    const double C107153 = C107145 - C107124;
    const double C107380 = C107376 - C107362;
    const double C107602 = C107598 - C107584;
    const double C107888 = C107884 - C107870;
    const double C134317 = C134309 - C134300;
    const double C134310 = C134302 - C134272;
    const double C135189 = C135185 - C135180;
    const double C135538 = C135534 - C135520;
    const double C135760 = C135756 - C135742;
    const double C136434 = C136430 - C136416;
    const double C106651 = C106639 - C106620;
    const double C106648 = C106636 - C106608;
    const double C106643 = C106631 - C106588;
    const double C106905 = C106897 - C106882;
    const double C106902 = C106894 - C106870;
    const double C107155 = C107147 - C107132;
    const double C107152 = C107144 - C107120;
    const double C107381 = C107377 - C107366;
    const double C107603 = C107599 - C107588;
    const double C107889 = C107885 - C107874;
    const double C134316 = C134308 - C134296;
    const double C134311 = C134303 - C134276;
    const double C135188 = C135184 - C135176;
    const double C135539 = C135535 - C135524;
    const double C135761 = C135757 - C135746;
    const double C136435 = C136431 - C136420;
    const double C115713 = C115707 + C115708;
    const double C115712 = C115703 + C115704;
    const double C120265 = C116014 + C116015;
    const double C120251 = C116015 + C116014;
    const double C120252 = C116012 + C116013;
    const double C120250 = C116013 + C116012;
    const double C116540 = C116009 + C116010;
    const double C120910 = C116010 + C116009;
    const double C116782 = C116311 + C116312;
    const double C121601 = C117132 + C117133;
    const double C121588 = C117133 + C117132;
    const double C148410 = C120305 + C120304;
    const double C149720 = C122137 + C122136;
    const double C150708 = C123435 + C123434;
    const double C63143 = C63131 + C63098;
    const double C63142 = C63130 + C63094;
    const double C63135 = C63123 + C63066;
    const double C63393 = C63385 + C63360;
    const double C63392 = C63384 + C63356;
    const double C63643 = C63635 + C63610;
    const double C63642 = C63634 + C63606;
    const double C63865 = C63861 + C63844;
    const double C64087 = C64083 + C64066;
    const double C64373 = C64369 + C64352;
    const double C67084 = C67076 + C67060;
    const double C67077 = C67069 + C67032;
    const double C67952 = C67948 + C67940;
    const double C68301 = C68297 + C68280;
    const double C68523 = C68519 + C68502;
    const double C69197 = C69193 + C69176;
    const double C63144 = C63132 + C63102;
    const double C63141 = C63129 + C63090;
    const double C63136 = C63124 + C63070;
    const double C63394 = C63386 + C63364;
    const double C63391 = C63383 + C63352;
    const double C63644 = C63636 + C63614;
    const double C63641 = C63633 + C63602;
    const double C63866 = C63862 + C63848;
    const double C64088 = C64084 + C64070;
    const double C64374 = C64370 + C64356;
    const double C67083 = C67075 + C67056;
    const double C67078 = C67070 + C67036;
    const double C67951 = C67947 + C67936;
    const double C68302 = C68298 + C68284;
    const double C68524 = C68520 + C68506;
    const double C69198 = C69194 + C69180;
    const double C106662 = C106650 + C106617;
    const double C106661 = C106649 + C106613;
    const double C106654 = C106642 + C106585;
    const double C106912 = C106904 + C106879;
    const double C106911 = C106903 + C106875;
    const double C107162 = C107154 + C107129;
    const double C107161 = C107153 + C107125;
    const double C107384 = C107380 + C107363;
    const double C107606 = C107602 + C107585;
    const double C107892 = C107888 + C107871;
    const double C134325 = C134317 + C134301;
    const double C134318 = C134310 + C134273;
    const double C135193 = C135189 + C135181;
    const double C135542 = C135538 + C135521;
    const double C135764 = C135760 + C135743;
    const double C136438 = C136434 + C136417;
    const double C106663 = C106651 + C106621;
    const double C106660 = C106648 + C106609;
    const double C106655 = C106643 + C106589;
    const double C106913 = C106905 + C106883;
    const double C106910 = C106902 + C106871;
    const double C107163 = C107155 + C107133;
    const double C107160 = C107152 + C107121;
    const double C107385 = C107381 + C107367;
    const double C107607 = C107603 + C107589;
    const double C107893 = C107889 + C107875;
    const double C134324 = C134316 + C134297;
    const double C134319 = C134311 + C134277;
    const double C135192 = C135188 + C135177;
    const double C135543 = C135539 + C135525;
    const double C135765 = C135761 + C135747;
    const double C136439 = C136435 + C136421;
    const double C115715 = C115706 + C115713;
    const double C115714 = C115712 + C115705;
    const double C120287 = C120265 + C116016;
    const double C120282 = C116016 + C120251;
    const double C120283 = C116011 + C120252;
    const double C120281 = C120250 + C116011;
    const double C116553 = C116008 + C116540;
    const double C120911 = C120910 + C116008;
    const double C116795 = C116310 + C116782;
    const double C121618 = C121601 + C117134;
    const double C121614 = C117134 + C121588;
    const double C148411 = C148410 + C120303;
    const double C149733 = C122138 + C149720;
    const double C150721 = C123436 + C150708;
    const double C115717 = C115715 * C154164;
    const double C115716 = C115714 * C154164;
    const double C116557 = C116553 * C154164;
    const double C116799 = C116795 * C154164;
    d2ee[0] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C154222 +
             C3210 * C154229 + C3211 * C82853) *
                C154016 +
            (C82858 + C82859 + C82860) * C154024 + C82872 * C82856) *
               C154082 * C154392 -
           (C83556 * C82856 + (C83095 + C83096 + C83097) * C154024 +
            (C3214 * C82853 + C3211 * C154229 + C3210 * C154222) * C154016) *
               C154082 * C154118) *
              C154461 +
          (((C83097 + C83096 + C83095) * C154016 +
            (C83094 + C83093 + C83092) * C154024 +
            (C83553 + C83554 + C83555) * C82856) *
               C154082 * C154118 -
           (C82873 * C82856 + (C82863 + C82862 + C82861) * C154024 +
            (C82860 + C82859 + C82858) * C154016) *
               C154082 * C154392) *
              C154462 +
          ((C82872 * C154016 + (C82866 + C82865 + C82864) * C154024 +
            (C82867 + C82868 + C82869) * C82856) *
               C154082 * C154392 -
           (((C134 * C1404 - C135 * C1399 - C134 * C1405 + C154181 * C1414) *
                 C82853 +
             C447 * C154229 + C440 * C154222) *
                C82856 +
            (C83555 + C83554 + C83553) * C154024 + C83556 * C154016) *
               C154082 * C154118) *
              C818)) /
        (p * q * std::sqrt(p + q));
    d2ee[1] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                  C154222 +
              C3210 * C154229 + C3211 * C82853) *
                 C154016 +
             (C82858 + C82859 + C82860) * C154024 + C82872 * C82856) *
                C154393 -
            (C83779 * C82856 + (C83325 + C83326 + C83327) * C154024 +
             (C4299 * C82853 + C4300 * C154229 +
              (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                  C154222) *
                 C154016) *
                C154146) *
               C154392 +
           (((C4300 * C154222 + C4299 * C154229 + C5676 * C82853) * C154016 +
             (C84070 + C84071 + C84072) * C154024 +
             (C84073 + C84074 + C84075) * C82856) *
                C154146 -
            (C83556 * C82856 + (C83095 + C83096 + C83097) * C154024 +
             (C3214 * C82853 + C3211 * C154229 + C3210 * C154222) * C154016) *
                C154393) *
               C154118) *
              C341 +
          ((((C83327 + C83326 + C83325) * C154016 +
             (C83324 + C83323 + C83322) * C154024 +
             (C83776 + C83777 + C83778) * C82856) *
                C154146 -
            (C82873 * C82856 + (C82863 + C82862 + C82861) * C154024 +
             (C82860 + C82859 + C82858) * C154016) *
                C154393) *
               C154392 +
           (((C83097 + C83096 + C83095) * C154016 +
             (C83094 + C83093 + C83092) * C154024 +
             (C83553 + C83554 + C83555) * C82856) *
                C154393 -
            (((C134 * C4264 - C135 * C4257 - C134 * C4265 + C154181 * C4269) *
                  C82853 +
              C3963 * C154229 + C1180 * C154222) *
                 C82856 +
             (C84075 + C84074 + C84073) * C154024 +
             (C84072 + C84071 + C84070) * C154016) *
                C154146) *
               C154118) *
              C154053)) /
        (p * q * std::sqrt(p + q));
    d2ee[2] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C154222 +
             C3210 * C154229 + C3211 * C82853) *
                C154016 +
            (C82858 + C82859 + C82860) * C154024 + C82872 * C82856) *
               C154082 * C338 -
           ((C83092 + C83093 + C83094) * C82856 +
            (C83095 + C83096 + C83097) * C154024 +
            (C3214 * C82853 + C3211 * C154229 + C3210 * C154222) * C154016) *
               C154082 * C339 +
           ((C3211 * C154222 + C3214 * C154229 + C4687 * C82853) * C154016 +
            (C83098 + C83099 + C83100) * C154024 +
            (C83101 + C83102 + C83103) * C82856) *
               C154082 * C340) *
              C341 +
          (((C83097 + C83096 + C83095) * C154016 +
            (C83094 + C83093 + C83092) * C154024 +
            (C441 * C154222 + C446 * C154229 + C3217 * C82853) * C82856) *
               C154082 * C339 -
           (C82873 * C82856 + (C82863 + C82862 + C82861) * C154024 +
            (C82860 + C82859 + C82858) * C154016) *
               C154082 * C338 -
           (((C134 * C3149 - C135 * C3142 - C134 * C3150 + C154181 * C3154) *
                 C82853 +
             C3217 * C154229 + C446 * C154222) *
                C82856 +
            (C83103 + C83102 + C83101) * C154024 +
            (C83100 + C83099 + C83098) * C154016) *
               C154082 * C340) *
              C154053)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                C154222 +
            C3210 * C154229 + C3211 * C82853) *
               C154016 +
           (C82858 + C82859 + C82860) * C154024 + C82872 * C82856) *
              C154082 * C154066 * C130 -
          (C82873 * C82856 + (C82863 + C82862 + C82861) * C154024 +
           (C82860 + C82859 + C82858) * C154016) *
              C154082 * C154066 * C131 +
          (C82872 * C154016 + (C82866 + C82865 + C82864) * C154024 +
           (C82867 + C82868 + C82869) * C82856) *
              C154082 * C154066 * C132 -
          (((C134 * C377 - C135 * C354 - C134 * C378 + C154181 * C390) *
                C82853 +
            C830 * C154229 + C209 * C154222) *
               C82856 +
           (C82869 + C82868 + C82867) * C154024 + C82873 * C154016) *
              C154082 * C154066 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C154222 +
             C3210 * C154229 + C3211 * C82853) *
                C154016 +
            (C82858 + C82859 + C82860) * C154024 + C82872 * C82856) *
               C577 -
           ((C83322 + C83323 + C83324) * C82856 +
            (C83325 + C83326 + C83327) * C154024 +
            (C4299 * C82853 + C4300 * C154229 +
             (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                 C154222) *
                C154016) *
               C578 +
           (((C134 * C602 - C135 * C585 - C134 * C603 + C154181 * C621) *
                 C154222 +
             C4930 * C154229 + C4931 * C82853) *
                C154016 +
            (C83328 + C83329 + C83330) * C154024 +
            (C83331 + C83332 + C83333) * C82856) *
               C579) *
              C154066 * C341 +
          (((C83327 + C83326 + C83325) * C154016 +
            (C83324 + C83323 + C83322) * C154024 +
            (C678 * C154222 + C1180 * C154229 + C3963 * C82853) * C82856) *
               C578 -
           (C82873 * C82856 + (C82863 + C82862 + C82861) * C154024 +
            (C82860 + C82859 + C82858) * C154016) *
               C577 -
           (((C134 * C3451 - C135 * C3444 - C134 * C3452 + C154181 * C3456) *
                 C82853 +
             C11901 * C154229 + C683 * C154222) *
                C82856 +
            (C83333 + C83332 + C83331) * C154024 +
            (C83330 + C83329 + C83328) * C154016) *
               C579) *
              C154066 * C154053)) /
            (p * q * std::sqrt(p + q));
    d2ee[3] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C154222 +
             C3210 * C154229 + C3211 * C82853) *
                C154016 +
            (C82858 + C82859 + C82860) * C154024 + C82872 * C82856) *
               C154393 -
           (C83779 * C82856 + (C83325 + C83326 + C83327) * C154024 +
            (C4299 * C82853 + C4300 * C154229 +
             (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                 C154222) *
                C154016) *
               C154146) *
              C154066 * C154461 +
          (((C83327 + C83326 + C83325) * C154016 +
            (C83324 + C83323 + C83322) * C154024 +
            (C83776 + C83777 + C83778) * C82856) *
               C154146 -
           (C82873 * C82856 + (C82863 + C82862 + C82861) * C154024 +
            (C82860 + C82859 + C82858) * C154016) *
               C154393) *
              C154066 * C154462 +
          ((C82872 * C154016 + (C82866 + C82865 + C82864) * C154024 +
            (C82867 + C82868 + C82869) * C82856) *
               C154393 -
           (((C134 * C1977 - C135 * C1972 - C134 * C1978 + C154181 * C1987) *
                 C82853 +
             C1181 * C154229 + C677 * C154222) *
                C82856 +
            (C83778 + C83777 + C83776) * C154024 + C83779 * C154016) *
               C154146) *
              C154066 * C818)) /
        (p * q * std::sqrt(p + q));
    d2ee[4] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                C154222 +
            C3210 * C154229 + C3211 * C82853) *
               C154016 +
           (C82858 + C82859 + C82860) * C154024 + C82872 * C82856) *
              C154082 * C154066 * C130 -
          (C82873 * C82856 + (C82863 + C82862 + C82861) * C154024 +
           (C82860 + C82859 + C82858) * C154016) *
              C154082 * C154066 * C131 +
          (C82872 * C154016 + (C82866 + C82865 + C82864) * C154024 +
           (C82867 + C82868 + C82869) * C82856) *
              C154082 * C154066 * C132 -
          (((C134 * C377 - C135 * C354 - C134 * C378 + C154181 * C390) *
                C82853 +
            C830 * C154229 + C209 * C154222) *
               C82856 +
           (C82869 + C82868 + C82867) * C154024 + C82873 * C154016) *
              C154082 * C154066 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C154222 +
             C3210 * C154229 + C3211 * C82853) *
                C154016 +
            (C82858 + C82859 + C82860) * C154024 + C82872 * C82856) *
               C154082 * C338 -
           ((C83092 + C83093 + C83094) * C82856 +
            (C83095 + C83096 + C83097) * C154024 +
            (C3214 * C82853 + C3211 * C154229 + C3210 * C154222) * C154016) *
               C154082 * C339 +
           ((C3211 * C154222 + C3214 * C154229 + C4687 * C82853) * C154016 +
            (C83098 + C83099 + C83100) * C154024 +
            (C83101 + C83102 + C83103) * C82856) *
               C154082 * C340) *
              C341 +
          (((C83097 + C83096 + C83095) * C154016 +
            (C83094 + C83093 + C83092) * C154024 +
            (C441 * C154222 + C446 * C154229 + C3217 * C82853) * C82856) *
               C154082 * C339 -
           (C82873 * C82856 + (C82863 + C82862 + C82861) * C154024 +
            (C82860 + C82859 + C82858) * C154016) *
               C154082 * C338 -
           (((C134 * C3149 - C135 * C3142 - C134 * C3150 + C154181 * C3154) *
                 C82853 +
             C3217 * C154229 + C446 * C154222) *
                C82856 +
            (C83103 + C83102 + C83101) * C154024 +
            (C83100 + C83099 + C83098) * C154016) *
               C154082 * C340) *
              C154053)) /
            (p * q * std::sqrt(p + q));
    d2ee[5] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C154222 +
             C3210 * C154229 + C3211 * C82853) *
                C154016 +
            (C82858 + C82859 + C82860) * C154024 + C82872 * C82856) *
               C154082 * C154463 -
           (C83556 * C82856 + (C83095 + C83096 + C83097) * C154024 +
            (C3214 * C82853 + C3211 * C154229 + C3210 * C154222) * C154016) *
               C154082 * C154464 +
           ((C3211 * C154222 + C3214 * C154229 + C4687 * C82853) * C154016 +
            (C83098 + C83099 + C83100) * C154024 +
            (C83101 + C83102 + C83103) * C82856) *
               C154082 * C1685) *
              C154384 +
          (((C83097 + C83096 + C83095) * C154016 +
            (C83094 + C83093 + C83092) * C154024 +
            (C83553 + C83554 + C83555) * C82856) *
               C154082 * C154464 -
           (C82873 * C82856 + (C82863 + C82862 + C82861) * C154024 +
            (C82860 + C82859 + C82858) * C154016) *
               C154082 * C154463 -
           (((C134 * C3149 - C135 * C3142 - C134 * C3150 + C154181 * C3154) *
                 C82853 +
             C3217 * C154229 + C446 * C154222) *
                C82856 +
            (C83103 + C83102 + C83101) * C154024 +
            (C83100 + C83099 + C83098) * C154016) *
               C154082 * C1685) *
              C154053)) /
        (p * q * std::sqrt(p + q));
    d2ee[6] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C154222 +
             C3210 * C154229 + C3211 * C82853) *
                C154016 +
            (C82858 + C82859 + C82860) * C154024 + C82872 * C82856) *
               C154393 -
           (C83779 * C82856 + (C83325 + C83326 + C83327) * C154024 +
            (C4299 * C82853 + C4300 * C154229 +
             (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                 C154222) *
                C154016) *
               C154146) *
              C154463 +
          (((C4300 * C154222 + C4299 * C154229 + C5676 * C82853) * C154016 +
            (C84070 + C84071 + C84072) * C154024 +
            (C84073 + C84074 + C84075) * C82856) *
               C154146 -
           (C83556 * C82856 + (C83095 + C83096 + C83097) * C154024 +
            (C3214 * C82853 + C3211 * C154229 + C3210 * C154222) * C154016) *
               C154393) *
              C154464 +
          (((C3211 * C154222 + C3214 * C154229 + C4687 * C82853) * C154016 +
            (C83098 + C83099 + C83100) * C154024 +
            (C83101 + C83102 + C83103) * C82856) *
               C154393 -
           (((C134 * C5660 - C135 * C5657 - C134 * C5661 + C154181 * C5666) *
                 C82853 +
             C4302 * C154229 + C3500 * C154222) *
                C82856 +
            (C28900 * C82853 + C4301 * C154229 + C3501 * C154222) * C154024 +
            (C28899 * C82853 + C5676 * C154229 + C4299 * C154222) * C154016) *
               C154146) *
              C1685) *
         C154047) /
        (p * q * std::sqrt(p + q));
    d2ee[7] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                C154222 +
            C3210 * C154229 + C3211 * C82853) *
               C154016 +
           (C82858 + C82859 + C82860) * C154024 + C82872 * C82856) *
              C154082 * C1394 -
          (C83556 * C82856 + (C83095 + C83096 + C83097) * C154024 +
           (C3214 * C82853 + C3211 * C154229 + C3210 * C154222) * C154016) *
              C154082 * C1395 +
          ((C3211 * C154222 + C3214 * C154229 + C4687 * C82853) * C154016 +
           (C83098 + C83099 + C83100) * C154024 +
           (C83101 + C83102 + C83103) * C82856) *
              C154082 * C1396 -
          (((C134 * C4671 - C135 * C4668 - C134 * C4672 + C154181 * C4677) *
                C82853 +
            C3216 * C154229 + C3212 * C154222) *
               C82856 +
           (C28342 * C82853 + C3215 * C154229 + C3213 * C154222) * C154024 +
           (C28341 * C82853 + C4687 * C154229 + C3214 * C154222) * C154016) *
              C154082 * C1397) *
         C154047) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C154222 +
             C3210 * C154229 + C3211 * C82853) *
                C154016 +
            (C82858 + C82859 + C82860) * C154024 + C82872 * C82856) *
               C154082 * C1307 -
           (C83556 * C82856 + (C83095 + C83096 + C83097) * C154024 +
            (C3214 * C82853 + C3211 * C154229 + C3210 * C154222) * C154016) *
               C154082 * C154118) *
              C1309 +
          (((C83097 + C83096 + C83095) * C154016 +
            (C83094 + C83093 + C83092) * C154024 +
            (C83553 + C83554 + C83555) * C82856) *
               C154082 * C154118 -
           (C82873 * C82856 + (C82863 + C82862 + C82861) * C154024 +
            (C82860 + C82859 + C82858) * C154016) *
               C154082 * C1307) *
              C1310 +
          ((C82872 * C154016 + (C82866 + C82865 + C82864) * C154024 +
            (C82867 + C82868 + C82869) * C82856) *
               C154082 * C1307 -
           (((C134 * C1404 - C135 * C1399 - C134 * C1405 + C154181 * C1414) *
                 C82853 +
             C447 * C154229 + C440 * C154222) *
                C82856 +
            (C83555 + C83554 + C83553) * C154024 + C83556 * C154016) *
               C154082 * C154118) *
              C1311)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C154222 +
             C3210 * C154229 + C3211 * C82853) *
                C154016 +
            (C82858 + C82859 + C82860) * C154024 + C82872 * C82856) *
               C577 -
           (C83779 * C82856 + (C83325 + C83326 + C83327) * C154024 +
            (C4299 * C82853 + C4300 * C154229 +
             (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                 C154222) *
                C154016) *
               C578 +
           (((C134 * C602 - C135 * C585 - C134 * C603 + C154181 * C621) *
                 C154222 +
             C4930 * C154229 + C4931 * C82853) *
                C154016 +
            (C83328 + C83329 + C83330) * C154024 +
            (C83331 + C83332 + C83333) * C82856) *
               C579) *
              C1307 +
          (((C4300 * C154222 + C4299 * C154229 + C5676 * C82853) * C154016 +
            (C84070 + C84071 + C84072) * C154024 +
            (C84073 + C84074 + C84075) * C82856) *
               C578 -
           (C83556 * C82856 + (C83095 + C83096 + C83097) * C154024 +
            (C3214 * C82853 + C3211 * C154229 + C3210 * C154222) * C154016) *
               C577 -
           (((C134 * C4908 - C135 * C4905 - C134 * C4909 + C154181 * C4914) *
                 C82853 +
             C3505 * C154229 + C3504 * C154222) *
                C82856 +
            (C35157 * C82853 + C3503 * C154229 + C3502 * C154222) * C154024 +
            (C29254 * C82853 + C4931 * C154229 + C4930 * C154222) * C154016) *
               C579) *
              C154118) *
         C154047) /
            (p * q * std::sqrt(p + q));
    d2ee[8] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                  C154222 +
              C3210 * C154229 + C3211 * C82853) *
                 C154016 +
             (C82858 + C82859 + C82860) * C154024 + C82872 * C82856) *
                C154393 -
            (C83779 * C82856 + (C83325 + C83326 + C83327) * C154024 +
             (C4299 * C82853 + C4300 * C154229 +
              (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                  C154222) *
                 C154016) *
                C154146) *
               C1307 +
           (((C4300 * C154222 + C4299 * C154229 + C5676 * C82853) * C154016 +
             (C84070 + C84071 + C84072) * C154024 +
             (C84073 + C84074 + C84075) * C82856) *
                C154146 -
            (C83556 * C82856 + (C83095 + C83096 + C83097) * C154024 +
             (C3214 * C82853 + C3211 * C154229 + C3210 * C154222) * C154016) *
                C154393) *
               C154118) *
              C154384 +
          ((((C83327 + C83326 + C83325) * C154016 +
             (C83324 + C83323 + C83322) * C154024 +
             (C83776 + C83777 + C83778) * C82856) *
                C154146 -
            (C82873 * C82856 + (C82863 + C82862 + C82861) * C154024 +
             (C82860 + C82859 + C82858) * C154016) *
                C154393) *
               C1307 +
           (((C83097 + C83096 + C83095) * C154016 +
             (C83094 + C83093 + C83092) * C154024 +
             (C83553 + C83554 + C83555) * C82856) *
                C154393 -
            (((C134 * C4264 - C135 * C4257 - C134 * C4265 + C154181 * C4269) *
                  C82853 +
              C3963 * C154229 + C1180 * C154222) *
                 C82856 +
             (C84075 + C84074 + C84073) * C154024 +
             (C84072 + C84071 + C84070) * C154016) *
                C154146) *
               C154118) *
              C154053)) /
        (p * q * std::sqrt(p + q));
    d2ee[9] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C154222 +
             C3210 * C154229 + C3211 * C82853) *
                C154016 +
            (C82858 + C82859 + C82860) * C154024 + C82872 * C82856) *
               C154082 * C1307 -
           (C83556 * C82856 + (C83095 + C83096 + C83097) * C154024 +
            (C3214 * C82853 + C3211 * C154229 + C3210 * C154222) * C154016) *
               C154082 * C154118) *
              C1309 +
          (((C83097 + C83096 + C83095) * C154016 +
            (C83094 + C83093 + C83092) * C154024 +
            (C83553 + C83554 + C83555) * C82856) *
               C154082 * C154118 -
           (C82873 * C82856 + (C82863 + C82862 + C82861) * C154024 +
            (C82860 + C82859 + C82858) * C154016) *
               C154082 * C1307) *
              C1310 +
          ((C82872 * C154016 + (C82866 + C82865 + C82864) * C154024 +
            (C82867 + C82868 + C82869) * C82856) *
               C154082 * C1307 -
           (((C134 * C1404 - C135 * C1399 - C134 * C1405 + C154181 * C1414) *
                 C82853 +
             C447 * C154229 + C440 * C154222) *
                C82856 +
            (C83555 + C83554 + C83553) * C154024 + C83556 * C154016) *
               C154082 * C154118) *
              C1311)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                C154222 +
            C3210 * C154229 + C3211 * C82853) *
               C154016 +
           (C82858 + C82859 + C82860) * C154024 + C82872 * C82856) *
              C154082 * C1394 -
          (C83556 * C82856 + (C83095 + C83096 + C83097) * C154024 +
           (C3214 * C82853 + C3211 * C154229 + C3210 * C154222) * C154016) *
              C154082 * C1395 +
          ((C3211 * C154222 + C3214 * C154229 + C4687 * C82853) * C154016 +
           (C83098 + C83099 + C83100) * C154024 +
           (C83101 + C83102 + C83103) * C82856) *
              C154082 * C1396 -
          (((C134 * C4671 - C135 * C4668 - C134 * C4672 + C154181 * C4677) *
                C82853 +
            C3216 * C154229 + C3212 * C154222) *
               C82856 +
           (C28342 * C82853 + C3215 * C154229 + C3213 * C154222) * C154024 +
           (C28341 * C82853 + C4687 * C154229 + C3214 * C154222) * C154016) *
              C154082 * C1397) *
         C154047) /
            (p * q * std::sqrt(p + q));
    d2ee[10] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                  C154222 +
              C3210 * C154229 + C3211 * C82853) *
                 C154016 +
             (C82858 + C82859 + C82860) * C154024 + C82872 * C82856) *
                C2114 -
            (C83779 * C82856 + (C83325 + C83326 + C83327) * C154024 +
             (C4299 * C82853 + C4300 * C154229 +
              (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                  C154222) *
                 C154016) *
                C154146) *
               C154392 +
           (((C4300 * C154222 + C4299 * C154229 + C5676 * C82853) * C154016 +
             (C84070 + C84071 + C84072) * C154024 +
             (C84073 + C84074 + C84075) * C82856) *
                C154146 -
            (C83556 * C82856 + (C83095 + C83096 + C83097) * C154024 +
             (C3214 * C82853 + C3211 * C154229 + C3210 * C154222) * C154016) *
                C2114) *
               C154118) *
              C154384 +
          ((((C83327 + C83326 + C83325) * C154016 +
             (C83324 + C83323 + C83322) * C154024 +
             (C83776 + C83777 + C83778) * C82856) *
                C154146 -
            (C82873 * C82856 + (C82863 + C82862 + C82861) * C154024 +
             (C82860 + C82859 + C82858) * C154016) *
                C2114) *
               C154392 +
           (((C83097 + C83096 + C83095) * C154016 +
             (C83094 + C83093 + C83092) * C154024 +
             (C83553 + C83554 + C83555) * C82856) *
                C2114 -
            (((C134 * C4264 - C135 * C4257 - C134 * C4265 + C154181 * C4269) *
                  C82853 +
              C3963 * C154229 + C1180 * C154222) *
                 C82856 +
             (C84075 + C84074 + C84073) * C154024 +
             (C84072 + C84071 + C84070) * C154016) *
                C154146) *
               C154118) *
              C154053)) /
        (p * q * std::sqrt(p + q));
    d2ee[11] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C154222 +
             C3210 * C154229 + C3211 * C82853) *
                C154016 +
            (C82858 + C82859 + C82860) * C154024 + C82872 * C82856) *
               C154465 -
           (C83779 * C82856 + (C83325 + C83326 + C83327) * C154024 +
            (C4299 * C82853 + C4300 * C154229 +
             (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                 C154222) *
                C154016) *
               C154466 +
           (((C134 * C602 - C135 * C585 - C134 * C603 + C154181 * C621) *
                 C154222 +
             C4930 * C154229 + C4931 * C82853) *
                C154016 +
            (C83328 + C83329 + C83330) * C154024 +
            (C83331 + C83332 + C83333) * C82856) *
               C2630) *
              C154392 +
          (((C4300 * C154222 + C4299 * C154229 + C5676 * C82853) * C154016 +
            (C84070 + C84071 + C84072) * C154024 +
            (C84073 + C84074 + C84075) * C82856) *
               C154466 -
           (C83556 * C82856 + (C83095 + C83096 + C83097) * C154024 +
            (C3214 * C82853 + C3211 * C154229 + C3210 * C154222) * C154016) *
               C154465 -
           (((C134 * C4908 - C135 * C4905 - C134 * C4909 + C154181 * C4914) *
                 C82853 +
             C3505 * C154229 + C3504 * C154222) *
                C82856 +
            (C35157 * C82853 + C3503 * C154229 + C3502 * C154222) * C154024 +
            (C29254 * C82853 + C4931 * C154229 + C4930 * C154222) * C154016) *
               C2630) *
              C154118) *
         C154047) /
        (p * q * std::sqrt(p + q));
    d2ee[12] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C154222 +
             C3210 * C154229 + C3211 * C82853) *
                C154016 +
            (C82858 + C82859 + C82860) * C154024 + C82872 * C82856) *
               C2114 -
           (C83779 * C82856 + (C83325 + C83326 + C83327) * C154024 +
            (C4299 * C82853 + C4300 * C154229 +
             (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                 C154222) *
                C154016) *
               C154146) *
              C338 +
          (((C4300 * C154222 + C4299 * C154229 + C5676 * C82853) * C154016 +
            (C84070 + C84071 + C84072) * C154024 +
            (C84073 + C84074 + C84075) * C82856) *
               C154146 -
           (C83556 * C82856 + (C83095 + C83096 + C83097) * C154024 +
            (C3214 * C82853 + C3211 * C154229 + C3210 * C154222) * C154016) *
               C2114) *
              C339 +
          (((C3211 * C154222 + C3214 * C154229 + C4687 * C82853) * C154016 +
            (C83098 + C83099 + C83100) * C154024 +
            (C83101 + C83102 + C83103) * C82856) *
               C2114 -
           (((C134 * C5660 - C135 * C5657 - C134 * C5661 + C154181 * C5666) *
                 C82853 +
             C4302 * C154229 + C3500 * C154222) *
                C82856 +
            (C28900 * C82853 + C4301 * C154229 + C3501 * C154222) * C154024 +
            (C28899 * C82853 + C5676 * C154229 + C4299 * C154222) * C154016) *
               C154146) *
              C340) *
         C154047) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C154222 +
             C3210 * C154229 + C3211 * C82853) *
                C154016 +
            (C82858 + C82859 + C82860) * C154024 + C82872 * C82856) *
               C2114 -
           (C83779 * C82856 + (C83325 + C83326 + C83327) * C154024 +
            (C4299 * C82853 + C4300 * C154229 +
             (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                 C154222) *
                C154016) *
               C154146) *
              C154066 * C1309 +
          (((C83327 + C83326 + C83325) * C154016 +
            (C83324 + C83323 + C83322) * C154024 +
            (C83776 + C83777 + C83778) * C82856) *
               C154146 -
           (C82873 * C82856 + (C82863 + C82862 + C82861) * C154024 +
            (C82860 + C82859 + C82858) * C154016) *
               C2114) *
              C154066 * C1310 +
          ((C82872 * C154016 + (C82866 + C82865 + C82864) * C154024 +
            (C82867 + C82868 + C82869) * C82856) *
               C2114 -
           (((C134 * C1977 - C135 * C1972 - C134 * C1978 + C154181 * C1987) *
                 C82853 +
             C1181 * C154229 + C677 * C154222) *
                C82856 +
            (C83778 + C83777 + C83776) * C154024 + C83779 * C154016) *
               C154146) *
              C154066 * C1311)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                C154222 +
            C3210 * C154229 + C3211 * C82853) *
               C154016 +
           (C82858 + C82859 + C82860) * C154024 + C82872 * C82856) *
              C2320 -
          (C83779 * C82856 + (C83325 + C83326 + C83327) * C154024 +
           (C4299 * C82853 + C4300 * C154229 +
            (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                C154222) *
               C154016) *
              C2321 +
          (((C134 * C602 - C135 * C585 - C134 * C603 + C154181 * C621) *
                C154222 +
            C4930 * C154229 + C4931 * C82853) *
               C154016 +
           (C83328 + C83329 + C83330) * C154024 +
           (C83331 + C83332 + C83333) * C82856) *
              C2322 -
          (((C134 * C6264 - C135 * C6258 - C134 * C6265 + C154181 * C6276) *
                C82853 +
            (C134 * C6266 - C135 * C6259 - C134 * C6267 + C154181 * C6277) *
                C154229 +
            (C134 * C2333 - C135 * C2326 - C134 * C2334 + C154181 * C2341) *
                C154222) *
               C82856 +
           ((C134 * C6268 - C135 * C6260 - C134 * C6269 + C154181 * C6278) *
                C82853 +
            (C134 * C6270 - C135 * C6261 - C134 * C6271 + C154181 * C6279) *
                C154229 +
            (C134 * C2335 - C135 * C2327 - C134 * C2336 + C154181 * C2342) *
                C154222) *
               C154024 +
           ((C134 * C6272 - C135 * C6262 - C134 * C6273 + C154181 * C6280) *
                C82853 +
            (C134 * C6274 - C135 * C6263 - C134 * C6275 + C154181 * C6281) *
                C154229 +
            (C134 * C2337 - C135 * C2328 - C134 * C2338 + C154181 * C2343) *
                C154222) *
               C154016) *
              C2323) *
         C154066 * C154047) /
            (p * q * std::sqrt(p + q));
    d2ee[13] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C154222 +
             C3210 * C154229 + C3211 * C82853) *
                C154016 +
            (C82858 + C82859 + C82860) * C154024 + C82872 * C82856) *
               C154465 -
           (C83779 * C82856 + (C83325 + C83326 + C83327) * C154024 +
            (C4299 * C82853 + C4300 * C154229 +
             (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                 C154222) *
                C154016) *
               C154466 +
           (((C134 * C602 - C135 * C585 - C134 * C603 + C154181 * C621) *
                 C154222 +
             C4930 * C154229 + C4931 * C82853) *
                C154016 +
            (C83328 + C83329 + C83330) * C154024 +
            (C83331 + C83332 + C83333) * C82856) *
               C2630) *
              C154066 * C154384 +
          (((C83327 + C83326 + C83325) * C154016 +
            (C83324 + C83323 + C83322) * C154024 +
            (C83776 + C83777 + C83778) * C82856) *
               C154466 -
           (C82873 * C82856 + (C82863 + C82862 + C82861) * C154024 +
            (C82860 + C82859 + C82858) * C154016) *
               C154465 -
           (((C134 * C3451 - C135 * C3444 - C134 * C3452 + C154181 * C3456) *
                 C82853 +
             C11901 * C154229 + C683 * C154222) *
                C82856 +
            (C83333 + C83332 + C83331) * C154024 +
            (C83330 + C83329 + C83328) * C154016) *
               C2630) *
              C154066 * C154053)) /
        (p * q * std::sqrt(p + q));
    d2ee[14] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C154222 +
             C3210 * C154229 + C3211 * C82853) *
                C154016 +
            (C82858 + C82859 + C82860) * C154024 + C82872 * C82856) *
               C2114 -
           (C83779 * C82856 + (C83325 + C83326 + C83327) * C154024 +
            (C4299 * C82853 + C4300 * C154229 +
             (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                 C154222) *
                C154016) *
               C154146) *
              C154066 * C1309 +
          (((C83327 + C83326 + C83325) * C154016 +
            (C83324 + C83323 + C83322) * C154024 +
            (C83776 + C83777 + C83778) * C82856) *
               C154146 -
           (C82873 * C82856 + (C82863 + C82862 + C82861) * C154024 +
            (C82860 + C82859 + C82858) * C154016) *
               C2114) *
              C154066 * C1310 +
          ((C82872 * C154016 + (C82866 + C82865 + C82864) * C154024 +
            (C82867 + C82868 + C82869) * C82856) *
               C2114 -
           (((C134 * C1977 - C135 * C1972 - C134 * C1978 + C154181 * C1987) *
                 C82853 +
             C1181 * C154229 + C677 * C154222) *
                C82856 +
            (C83778 + C83777 + C83776) * C154024 + C83779 * C154016) *
               C154146) *
              C154066 * C1311)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C154222 +
             C3210 * C154229 + C3211 * C82853) *
                C154016 +
            (C82858 + C82859 + C82860) * C154024 + C82872 * C82856) *
               C2114 -
           (C83779 * C82856 + (C83325 + C83326 + C83327) * C154024 +
            (C4299 * C82853 + C4300 * C154229 +
             (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                 C154222) *
                C154016) *
               C154146) *
              C338 +
          (((C4300 * C154222 + C4299 * C154229 + C5676 * C82853) * C154016 +
            (C84070 + C84071 + C84072) * C154024 +
            (C84073 + C84074 + C84075) * C82856) *
               C154146 -
           (C83556 * C82856 + (C83095 + C83096 + C83097) * C154024 +
            (C3214 * C82853 + C3211 * C154229 + C3210 * C154222) * C154016) *
               C2114) *
              C339 +
          (((C3211 * C154222 + C3214 * C154229 + C4687 * C82853) * C154016 +
            (C83098 + C83099 + C83100) * C154024 +
            (C83101 + C83102 + C83103) * C82856) *
               C2114 -
           (((C134 * C5660 - C135 * C5657 - C134 * C5661 + C154181 * C5666) *
                 C82853 +
             C4302 * C154229 + C3500 * C154222) *
                C82856 +
            (C28900 * C82853 + C4301 * C154229 + C3501 * C154222) * C154024 +
            (C28899 * C82853 + C5676 * C154229 + C4299 * C154222) * C154016) *
               C154146) *
              C340) *
         C154047) /
            (p * q * std::sqrt(p + q));
    d2ee[15] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
              C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
                 C154222 +
             (C19258 + C19259) * C154229 + C38629 * C82853) *
                C74048 +
            ((C15087 + C15088) * C154222 + C19212 * C154229 + C19224 * C82853) *
                C154021) *
               C154082 * C154392 -
           ((C38630 * C82853 + C19214 * C154229 + C19215 * C154222) * C154021 +
            (C40416 * C82853 + (C19260 + C19261) * C154229 +
             (C19259 + C19258) * C154222) *
                C74048) *
               C154082 * C154118) *
              C154461 +
          (((C19212 * C154222 + C19224 * C154229 + C38631 * C82853) * C74048 +
            (C18908 * C154222 + C19233 * C154229 + (C19264 + C19265) * C82853) *
                C154021) *
               C154082 * C154118 -
           ((C19213 * C82853 + C15856 * C154229 + (C15090 + C15089) * C154222) *
                C154021 +
            (C19214 * C82853 + C19215 * C154229 + (C15088 + C15087) * C154222) *
                C74048) *
               C154082 * C154392) *
              C154462 +
          (((C15097 * C154222 + C18908 * C154229 + C19233 * C82853) * C74048 +
            (C15098 * C154222 + C19876 * C154229 + (C15381 + C15382) * C82853) *
                C154021) *
               C154082 * C154392 -
           (((C15024 * C4264 - C15025 * C4257 - C15024 * C4265 +
              C154268 * C4269 + C15022 * C1406 - C15023 * C1400 -
              C15022 * C1407 + C154408 * C1415) *
                 C82853 +
             (C15382 + C15381) * C154229 + C15855 * C154222) *
                C154021 +
            ((C19265 + C19264) * C82853 + C19213 * C154229 + C15856 * C154222) *
                C74048) *
               C154082 * C154118) *
              C818)) /
        (p * q * std::sqrt(p + q));
    d2ee[16] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
               C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
                  C154222 +
              (C19258 + C19259) * C154229 + C38629 * C82853) *
                 C74048 +
             ((C15087 + C15088) * C154222 + C19212 * C154229 +
              C19224 * C82853) *
                 C154021) *
                C154393 -
            ((C39916 * C82853 + C20558 * C154229 +
              (C15653 + C15654) * C154222) *
                 C154021 +
             (C41701 * C82853 + (C20597 + C20598) * C154229 +
              (C15024 * C602 - C15025 * C585 - C15024 * C603 + C154268 * C621 +
               C15022 * C600 - C15023 * C584 - C15022 * C601 + C154408 * C620) *
                  C154222) *
                 C74048) *
                C154146) *
               C154392 +
           ((((C20598 + C20597) * C154222 + (C22383 + C22384) * C154229 +
              (C41714 + C41715) * C82853) *
                 C74048 +
             (C20567 * C154222 + C39917 * C154229 +
              (C39930 + C39931) * C82853) *
                 C154021) *
                C154146 -
            ((C38630 * C82853 + C19214 * C154229 + C19215 * C154222) * C154021 +
             (C40416 * C82853 + (C19260 + C19261) * C154229 +
              (C19259 + C19258) * C154222) *
                 C74048) *
                C154393) *
               C154118) *
              C341 +
          (((((C15654 + C15653) * C154222 + C20567 * C154229 +
              C39917 * C82853) *
                 C74048 +
             ((C15652 + C15651) * C154222 + C20576 * C154229 +
              (C20601 + C20602) * C82853) *
                 C154021) *
                C154146 -
            ((C19213 * C82853 + C15856 * C154229 +
              (C15090 + C15089) * C154222) *
                 C154021 +
             (C19214 * C82853 + C19215 * C154229 +
              (C15088 + C15087) * C154222) *
                 C74048) *
                C154393) *
               C154392 +
           (((C19212 * C154222 + C19224 * C154229 + C38631 * C82853) * C74048 +
             (C18908 * C154222 + C19233 * C154229 +
              (C19264 + C19265) * C82853) *
                 C154021) *
                C154393 -
            (((C15024 * C4908 - C15025 * C4905 - C15024 * C4909 +
               C154268 * C4914 + C15022 * C4262 - C15023 * C4256 -
               C15022 * C4263 + C154408 * C4268) *
                  C82853 +
              (C20602 + C20601) * C154229 + C20168 * C154222) *
                 C154021 +
             ((C39931 + C39930) * C82853 + C39916 * C154229 +
              C20558 * C154222) *
                 C74048) *
                C154146) *
               C154118) *
              C154053)) /
        (p * q * std::sqrt(p + q));
    d2ee[17] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
              C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
                 C154222 +
             (C19258 + C19259) * C154229 + C38629 * C82853) *
                C74048 +
            ((C15087 + C15088) * C154222 + C19212 * C154229 + C19224 * C82853) *
                C154021) *
               C154082 * C338 -
           ((C38630 * C82853 + C19214 * C154229 + C19215 * C154222) * C154021 +
            (C40416 * C82853 + (C19260 + C19261) * C154229 +
             (C19259 + C19258) * C154222) *
                C74048) *
               C154082 * C339 +
           ((C38629 * C154222 + C43780 * C154229 + (C40429 + C40430) * C82853) *
                C74048 +
            (C19224 * C154222 + C38631 * C154229 + (C38644 + C38645) * C82853) *
                C154021) *
               C154082 * C340) *
              C341 +
          (((C19212 * C154222 + C19224 * C154229 + C38631 * C82853) * C74048 +
            (C18908 * C154222 + C19233 * C154229 + (C19264 + C19265) * C82853) *
                C154021) *
               C154082 * C339 -
           ((C19213 * C82853 + C15856 * C154229 + (C15090 + C15089) * C154222) *
                C154021 +
            (C19214 * C82853 + C19215 * C154229 + (C15088 + C15087) * C154222) *
                C74048) *
               C154082 * C338 -
           (((C15024 * C5660 - C15025 * C5657 - C15024 * C5661 +
              C154268 * C5666 + C15022 * C3147 - C15023 * C3141 -
              C15022 * C3148 + C154408 * C3153) *
                 C82853 +
             (C19265 + C19264) * C154229 + C19213 * C154222) *
                C154021 +
            ((C38645 + C38644) * C82853 + C38630 * C154229 + C19214 * C154222) *
                C74048) *
               C154082 * C340) *
              C154053)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
             C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
                C154222 +
            (C19258 + C19259) * C154229 + C38629 * C82853) *
               C74048 +
           ((C15087 + C15088) * C154222 + C19212 * C154229 + C19224 * C82853) *
               C154021) *
              C154082 * C154066 * C130 -
          ((C19213 * C82853 + C15856 * C154229 + (C15090 + C15089) * C154222) *
               C154021 +
           (C19214 * C82853 + C19215 * C154229 + (C15088 + C15087) * C154222) *
               C74048) *
              C154082 * C154066 * C131 +
          ((C15097 * C154222 + C18908 * C154229 + C19233 * C82853) * C74048 +
           (C15098 * C154222 + C19876 * C154229 + (C15381 + C15382) * C82853) *
               C154021) *
              C154082 * C154066 * C132 -
          (((C15024 * C1977 - C15025 * C1972 - C15024 * C1978 +
             C154268 * C1987 + C15022 * C373 - C15023 * C352 - C15022 * C374 +
             C154408 * C388) *
                C82853 +
            (C15872 + C15871) * C154229 + C15099 * C154222) *
               C154021 +
           ((C15382 + C15381) * C82853 + C15855 * C154229 + C15100 * C154222) *
               C74048) *
              C154082 * C154066 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
              C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
                 C154222 +
             (C19258 + C19259) * C154229 + C38629 * C82853) *
                C74048 +
            ((C15087 + C15088) * C154222 + C19212 * C154229 + C19224 * C82853) *
                C154021) *
               C577 -
           ((C39916 * C82853 + C20558 * C154229 + (C15653 + C15654) * C154222) *
                C154021 +
            (C41701 * C82853 + (C20597 + C20598) * C154229 +
             (C15024 * C602 - C15025 * C585 - C15024 * C603 + C154268 * C621 +
              C15022 * C600 - C15023 * C584 - C15022 * C601 + C154408 * C620) *
                 C154222) *
                C74048) *
               C578 +
           (((C15022 * C602 - C15023 * C585 - C15022 * C603 + C154408 * C621 +
              C15024 * C2337 - C15025 * C2328 - C15024 * C2338 +
              C154268 * C2343) *
                 C154222 +
             (C21403 + C21404) * C154229 + (C40733 + C40734) * C82853) *
                C74048 +
            ((C15655 + C15656) * C154222 + (C19580 + C19581) * C154229 +
             (C38948 + C38949) * C82853) *
                C154021) *
               C579) *
              C154066 * C341 +
          ((((C15654 + C15653) * C154222 + C20567 * C154229 + C39917 * C82853) *
                C74048 +
            ((C15652 + C15651) * C154222 + C20576 * C154229 +
             (C20601 + C20602) * C82853) *
                C154021) *
               C578 -
           ((C19213 * C82853 + C15856 * C154229 + (C15090 + C15089) * C154222) *
                C154021 +
            (C19214 * C82853 + C19215 * C154229 + (C15088 + C15087) * C154222) *
                C74048) *
               C577 -
           (((C15024 * C6264 - C15025 * C6258 - C15024 * C6265 +
              C154268 * C6276 + C15022 * C3449 - C15023 * C3443 -
              C15022 * C3450 + C154408 * C3455) *
                 C82853 +
             (C19583 + C19582) * C154229 + (C15658 + C15657) * C154222) *
                C154021 +
            ((C38949 + C38948) * C82853 + (C19581 + C19580) * C154229 +
             (C15656 + C15655) * C154222) *
                C74048) *
               C579) *
              C154066 * C154053)) /
            (p * q * std::sqrt(p + q));
    d2ee[18] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
              C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
                 C154222 +
             (C19258 + C19259) * C154229 + C38629 * C82853) *
                C74048 +
            ((C15087 + C15088) * C154222 + C19212 * C154229 + C19224 * C82853) *
                C154021) *
               C154393 -
           ((C39916 * C82853 + C20558 * C154229 + (C15653 + C15654) * C154222) *
                C154021 +
            (C41701 * C82853 + (C20597 + C20598) * C154229 +
             (C15024 * C602 - C15025 * C585 - C15024 * C603 + C154268 * C621 +
              C15022 * C600 - C15023 * C584 - C15022 * C601 + C154408 * C620) *
                 C154222) *
                C74048) *
               C154146) *
              C154066 * C154461 +
          ((((C15654 + C15653) * C154222 + C20567 * C154229 + C39917 * C82853) *
                C74048 +
            ((C15652 + C15651) * C154222 + C20576 * C154229 +
             (C20601 + C20602) * C82853) *
                C154021) *
               C154146 -
           ((C19213 * C82853 + C15856 * C154229 + (C15090 + C15089) * C154222) *
                C154021 +
            (C19214 * C82853 + C19215 * C154229 + (C15088 + C15087) * C154222) *
                C74048) *
               C154393) *
              C154066 * C154462 +
          (((C15097 * C154222 + C18908 * C154229 + C19233 * C82853) * C74048 +
            (C15098 * C154222 + C19876 * C154229 + (C15381 + C15382) * C82853) *
                C154021) *
               C154393 -
           (((C15024 * C3451 - C15025 * C3444 - C15024 * C3452 +
              C154268 * C3456 + C15022 * C1979 - C15023 * C1973 -
              C15022 * C1980 + C154408 * C1988) *
                 C82853 +
             (C16384 + C16383) * C154229 + C16067 * C154222) *
                C154021 +
            ((C20602 + C20601) * C82853 + C20168 * C154229 + C16068 * C154222) *
                C74048) *
               C154146) *
              C154066 * C818)) /
        (p * q * std::sqrt(p + q));
    d2ee[19] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
             C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
                C154222 +
            (C19258 + C19259) * C154229 + C38629 * C82853) *
               C74048 +
           ((C15087 + C15088) * C154222 + C19212 * C154229 + C19224 * C82853) *
               C154021) *
              C154082 * C154066 * C130 -
          ((C19213 * C82853 + C15856 * C154229 + (C15090 + C15089) * C154222) *
               C154021 +
           (C19214 * C82853 + C19215 * C154229 + (C15088 + C15087) * C154222) *
               C74048) *
              C154082 * C154066 * C131 +
          ((C15097 * C154222 + C18908 * C154229 + C19233 * C82853) * C74048 +
           (C15098 * C154222 + C19876 * C154229 + (C15381 + C15382) * C82853) *
               C154021) *
              C154082 * C154066 * C132 -
          (((C15024 * C1977 - C15025 * C1972 - C15024 * C1978 +
             C154268 * C1987 + C15022 * C373 - C15023 * C352 - C15022 * C374 +
             C154408 * C388) *
                C82853 +
            (C15872 + C15871) * C154229 + C15099 * C154222) *
               C154021 +
           ((C15382 + C15381) * C82853 + C15855 * C154229 + C15100 * C154222) *
               C74048) *
              C154082 * C154066 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
              C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
                 C154222 +
             (C19258 + C19259) * C154229 + C38629 * C82853) *
                C74048 +
            ((C15087 + C15088) * C154222 + C19212 * C154229 + C19224 * C82853) *
                C154021) *
               C154082 * C338 -
           ((C38630 * C82853 + C19214 * C154229 + C19215 * C154222) * C154021 +
            (C40416 * C82853 + (C19260 + C19261) * C154229 +
             (C19259 + C19258) * C154222) *
                C74048) *
               C154082 * C339 +
           ((C38629 * C154222 + C43780 * C154229 + (C40429 + C40430) * C82853) *
                C74048 +
            (C19224 * C154222 + C38631 * C154229 + (C38644 + C38645) * C82853) *
                C154021) *
               C154082 * C340) *
              C341 +
          (((C19212 * C154222 + C19224 * C154229 + C38631 * C82853) * C74048 +
            (C18908 * C154222 + C19233 * C154229 + (C19264 + C19265) * C82853) *
                C154021) *
               C154082 * C339 -
           ((C19213 * C82853 + C15856 * C154229 + (C15090 + C15089) * C154222) *
                C154021 +
            (C19214 * C82853 + C19215 * C154229 + (C15088 + C15087) * C154222) *
                C74048) *
               C154082 * C338 -
           (((C15024 * C5660 - C15025 * C5657 - C15024 * C5661 +
              C154268 * C5666 + C15022 * C3147 - C15023 * C3141 -
              C15022 * C3148 + C154408 * C3153) *
                 C82853 +
             (C19265 + C19264) * C154229 + C19213 * C154222) *
                C154021 +
            ((C38645 + C38644) * C82853 + C38630 * C154229 + C19214 * C154222) *
                C74048) *
               C154082 * C340) *
              C154053)) /
            (p * q * std::sqrt(p + q));
    d2ee[20] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
              C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
                 C154222 +
             (C19258 + C19259) * C154229 + C38629 * C82853) *
                C74048 +
            ((C15087 + C15088) * C154222 + C19212 * C154229 + C19224 * C82853) *
                C154021) *
               C154082 * C154463 -
           ((C38630 * C82853 + C19214 * C154229 + C19215 * C154222) * C154021 +
            (C40416 * C82853 + (C19260 + C19261) * C154229 +
             (C19259 + C19258) * C154222) *
                C74048) *
               C154082 * C154464 +
           ((C38629 * C154222 + C43780 * C154229 + (C40429 + C40430) * C82853) *
                C74048 +
            (C19224 * C154222 + C38631 * C154229 + (C38644 + C38645) * C82853) *
                C154021) *
               C154082 * C1685) *
              C154384 +
          (((C19212 * C154222 + C19224 * C154229 + C38631 * C82853) * C74048 +
            (C18908 * C154222 + C19233 * C154229 + (C19264 + C19265) * C82853) *
                C154021) *
               C154082 * C154464 -
           ((C19213 * C82853 + C15856 * C154229 + (C15090 + C15089) * C154222) *
                C154021 +
            (C19214 * C82853 + C19215 * C154229 + (C15088 + C15087) * C154222) *
                C74048) *
               C154082 * C154463 -
           (((C15024 * C5660 - C15025 * C5657 - C15024 * C5661 +
              C154268 * C5666 + C15022 * C3147 - C15023 * C3141 -
              C15022 * C3148 + C154408 * C3153) *
                 C82853 +
             (C19265 + C19264) * C154229 + C19213 * C154222) *
                C154021 +
            ((C38645 + C38644) * C82853 + C38630 * C154229 + C19214 * C154222) *
                C74048) *
               C154082 * C1685) *
              C154053)) /
        (p * q * std::sqrt(p + q));
    d2ee[21] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
              C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
                 C154222 +
             (C19258 + C19259) * C154229 + C38629 * C82853) *
                C74048 +
            ((C15087 + C15088) * C154222 + C19212 * C154229 + C19224 * C82853) *
                C154021) *
               C154393 -
           ((C39916 * C82853 + C20558 * C154229 + (C15653 + C15654) * C154222) *
                C154021 +
            (C41701 * C82853 + (C20597 + C20598) * C154229 +
             (C15024 * C602 - C15025 * C585 - C15024 * C603 + C154268 * C621 +
              C15022 * C600 - C15023 * C584 - C15022 * C601 + C154408 * C620) *
                 C154222) *
                C74048) *
               C154146) *
              C154463 +
          ((((C20598 + C20597) * C154222 + (C22383 + C22384) * C154229 +
             (C41714 + C41715) * C82853) *
                C74048 +
            (C20567 * C154222 + C39917 * C154229 + (C39930 + C39931) * C82853) *
                C154021) *
               C154146 -
           ((C38630 * C82853 + C19214 * C154229 + C19215 * C154222) * C154021 +
            (C40416 * C82853 + (C19260 + C19261) * C154229 +
             (C19259 + C19258) * C154222) *
                C74048) *
               C154393) *
              C154464 +
          (((C38629 * C154222 + C43780 * C154229 + (C40429 + C40430) * C82853) *
                C74048 +
            (C19224 * C154222 + C38631 * C154229 + (C38644 + C38645) * C82853) *
                C154021) *
               C154393 -
           (((C15024 * C28468 - C15025 * C28465 - C15024 * C28469 +
              C154268 * C28471 + C15022 * C5662 - C15023 * C5658 -
              C15022 * C5663 + C154408 * C5667) *
                 C82853 +
             (C39931 + C39930) * C154229 + C39916 * C154222) *
                C154021 +
            ((C45828 + C45827) * C82853 + C45814 * C154229 + C41701 * C154222) *
                C74048) *
               C154146) *
              C1685) *
         C154047) /
        (p * q * std::sqrt(p + q));
    d2ee[22] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
             C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
                C154222 +
            (C19258 + C19259) * C154229 + C38629 * C82853) *
               C74048 +
           ((C15087 + C15088) * C154222 + C19212 * C154229 + C19224 * C82853) *
               C154021) *
              C154082 * C1394 -
          ((C38630 * C82853 + C19214 * C154229 + C19215 * C154222) * C154021 +
           (C40416 * C82853 + (C19260 + C19261) * C154229 +
            (C19259 + C19258) * C154222) *
               C74048) *
              C154082 * C1395 +
          ((C38629 * C154222 + C43780 * C154229 + (C40429 + C40430) * C82853) *
               C74048 +
           (C19224 * C154222 + C38631 * C154229 + (C38644 + C38645) * C82853) *
               C154021) *
              C154082 * C1396 -
          (((C15024 * C28882 - C15025 * C28879 - C15024 * C28883 +
             C154268 * C28885 + C15022 * C4673 - C15023 * C4669 -
             C15022 * C4674 + C154408 * C4678) *
                C82853 +
            (C38645 + C38644) * C154229 + C38630 * C154222) *
               C154021 +
           ((C44959 + C44958) * C82853 + C44945 * C154229 + C40416 * C154222) *
               C74048) *
              C154082 * C1397) *
         C154047) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
              C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
                 C154222 +
             (C19258 + C19259) * C154229 + C38629 * C82853) *
                C74048 +
            ((C15087 + C15088) * C154222 + C19212 * C154229 + C19224 * C82853) *
                C154021) *
               C154082 * C1307 -
           ((C38630 * C82853 + C19214 * C154229 + C19215 * C154222) * C154021 +
            (C40416 * C82853 + (C19260 + C19261) * C154229 +
             (C19259 + C19258) * C154222) *
                C74048) *
               C154082 * C154118) *
              C1309 +
          (((C19212 * C154222 + C19224 * C154229 + C38631 * C82853) * C74048 +
            (C18908 * C154222 + C19233 * C154229 + (C19264 + C19265) * C82853) *
                C154021) *
               C154082 * C154118 -
           ((C19213 * C82853 + C15856 * C154229 + (C15090 + C15089) * C154222) *
                C154021 +
            (C19214 * C82853 + C19215 * C154229 + (C15088 + C15087) * C154222) *
                C74048) *
               C154082 * C1307) *
              C1310 +
          (((C15097 * C154222 + C18908 * C154229 + C19233 * C82853) * C74048 +
            (C15098 * C154222 + C19876 * C154229 + (C15381 + C15382) * C82853) *
                C154021) *
               C154082 * C1307 -
           (((C15024 * C4264 - C15025 * C4257 - C15024 * C4265 +
              C154268 * C4269 + C15022 * C1406 - C15023 * C1400 -
              C15022 * C1407 + C154408 * C1415) *
                 C82853 +
             (C15382 + C15381) * C154229 + C15855 * C154222) *
                C154021 +
            ((C19265 + C19264) * C82853 + C19213 * C154229 + C15856 * C154222) *
                C74048) *
               C154082 * C154118) *
              C1311)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
              C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
                 C154222 +
             (C19258 + C19259) * C154229 + C38629 * C82853) *
                C74048 +
            ((C15087 + C15088) * C154222 + C19212 * C154229 + C19224 * C82853) *
                C154021) *
               C577 -
           ((C39916 * C82853 + C20558 * C154229 + (C15653 + C15654) * C154222) *
                C154021 +
            (C41701 * C82853 + (C20597 + C20598) * C154229 +
             (C15024 * C602 - C15025 * C585 - C15024 * C603 + C154268 * C621 +
              C15022 * C600 - C15023 * C584 - C15022 * C601 + C154408 * C620) *
                 C154222) *
                C74048) *
               C578 +
           (((C15022 * C602 - C15023 * C585 - C15022 * C603 + C154408 * C621 +
              C15024 * C2337 - C15025 * C2328 - C15024 * C2338 +
              C154268 * C2343) *
                 C154222 +
             (C21403 + C21404) * C154229 + (C40733 + C40734) * C82853) *
                C74048 +
            ((C15655 + C15656) * C154222 + (C19580 + C19581) * C154229 +
             (C38948 + C38949) * C82853) *
                C154021) *
               C579) *
              C1307 +
          ((((C20598 + C20597) * C154222 + (C22383 + C22384) * C154229 +
             (C41714 + C41715) * C82853) *
                C74048 +
            (C20567 * C154222 + C39917 * C154229 + (C39930 + C39931) * C82853) *
                C154021) *
               C578 -
           ((C38630 * C82853 + C19214 * C154229 + C19215 * C154222) * C154021 +
            (C40416 * C82853 + (C19260 + C19261) * C154229 +
             (C19259 + C19258) * C154222) *
                C74048) *
               C577 -
           (((C15024 * C31817 - C15025 * C31816 - C15024 * C31818 +
              C154268 * C31819 + C15022 * C4910 - C15023 * C4906 -
              C15022 * C4911 + C154408 * C4915) *
                 C82853 +
             (C38949 + C38948) * C154229 + (C19581 + C19580) * C154222) *
                C154021 +
            ((C45167 + C45166) * C82853 + (C40734 + C40733) * C154229 +
             (C21404 + C21403) * C154222) *
                C74048) *
               C579) *
              C154118) *
         C154047) /
            (p * q * std::sqrt(p + q));
    d2ee[23] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
               C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
                  C154222 +
              (C19258 + C19259) * C154229 + C38629 * C82853) *
                 C74048 +
             ((C15087 + C15088) * C154222 + C19212 * C154229 +
              C19224 * C82853) *
                 C154021) *
                C154393 -
            ((C39916 * C82853 + C20558 * C154229 +
              (C15653 + C15654) * C154222) *
                 C154021 +
             (C41701 * C82853 + (C20597 + C20598) * C154229 +
              (C15024 * C602 - C15025 * C585 - C15024 * C603 + C154268 * C621 +
               C15022 * C600 - C15023 * C584 - C15022 * C601 + C154408 * C620) *
                  C154222) *
                 C74048) *
                C154146) *
               C1307 +
           ((((C20598 + C20597) * C154222 + (C22383 + C22384) * C154229 +
              (C41714 + C41715) * C82853) *
                 C74048 +
             (C20567 * C154222 + C39917 * C154229 +
              (C39930 + C39931) * C82853) *
                 C154021) *
                C154146 -
            ((C38630 * C82853 + C19214 * C154229 + C19215 * C154222) * C154021 +
             (C40416 * C82853 + (C19260 + C19261) * C154229 +
              (C19259 + C19258) * C154222) *
                 C74048) *
                C154393) *
               C154118) *
              C154384 +
          (((((C15654 + C15653) * C154222 + C20567 * C154229 +
              C39917 * C82853) *
                 C74048 +
             ((C15652 + C15651) * C154222 + C20576 * C154229 +
              (C20601 + C20602) * C82853) *
                 C154021) *
                C154146 -
            ((C19213 * C82853 + C15856 * C154229 +
              (C15090 + C15089) * C154222) *
                 C154021 +
             (C19214 * C82853 + C19215 * C154229 +
              (C15088 + C15087) * C154222) *
                 C74048) *
                C154393) *
               C1307 +
           (((C19212 * C154222 + C19224 * C154229 + C38631 * C82853) * C74048 +
             (C18908 * C154222 + C19233 * C154229 +
              (C19264 + C19265) * C82853) *
                 C154021) *
                C154393 -
            (((C15024 * C4908 - C15025 * C4905 - C15024 * C4909 +
               C154268 * C4914 + C15022 * C4262 - C15023 * C4256 -
               C15022 * C4263 + C154408 * C4268) *
                  C82853 +
              (C20602 + C20601) * C154229 + C20168 * C154222) *
                 C154021 +
             ((C39931 + C39930) * C82853 + C39916 * C154229 +
              C20558 * C154222) *
                 C74048) *
                C154146) *
               C154118) *
              C154053)) /
        (p * q * std::sqrt(p + q));
    d2ee[24] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
              C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
                 C154222 +
             (C19258 + C19259) * C154229 + C38629 * C82853) *
                C74048 +
            ((C15087 + C15088) * C154222 + C19212 * C154229 + C19224 * C82853) *
                C154021) *
               C154082 * C1307 -
           ((C38630 * C82853 + C19214 * C154229 + C19215 * C154222) * C154021 +
            (C40416 * C82853 + (C19260 + C19261) * C154229 +
             (C19259 + C19258) * C154222) *
                C74048) *
               C154082 * C154118) *
              C1309 +
          (((C19212 * C154222 + C19224 * C154229 + C38631 * C82853) * C74048 +
            (C18908 * C154222 + C19233 * C154229 + (C19264 + C19265) * C82853) *
                C154021) *
               C154082 * C154118 -
           ((C19213 * C82853 + C15856 * C154229 + (C15090 + C15089) * C154222) *
                C154021 +
            (C19214 * C82853 + C19215 * C154229 + (C15088 + C15087) * C154222) *
                C74048) *
               C154082 * C1307) *
              C1310 +
          (((C15097 * C154222 + C18908 * C154229 + C19233 * C82853) * C74048 +
            (C15098 * C154222 + C19876 * C154229 + (C15381 + C15382) * C82853) *
                C154021) *
               C154082 * C1307 -
           (((C15024 * C4264 - C15025 * C4257 - C15024 * C4265 +
              C154268 * C4269 + C15022 * C1406 - C15023 * C1400 -
              C15022 * C1407 + C154408 * C1415) *
                 C82853 +
             (C15382 + C15381) * C154229 + C15855 * C154222) *
                C154021 +
            ((C19265 + C19264) * C82853 + C19213 * C154229 + C15856 * C154222) *
                C74048) *
               C154082 * C154118) *
              C1311)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
             C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
                C154222 +
            (C19258 + C19259) * C154229 + C38629 * C82853) *
               C74048 +
           ((C15087 + C15088) * C154222 + C19212 * C154229 + C19224 * C82853) *
               C154021) *
              C154082 * C1394 -
          ((C38630 * C82853 + C19214 * C154229 + C19215 * C154222) * C154021 +
           (C40416 * C82853 + (C19260 + C19261) * C154229 +
            (C19259 + C19258) * C154222) *
               C74048) *
              C154082 * C1395 +
          ((C38629 * C154222 + C43780 * C154229 + (C40429 + C40430) * C82853) *
               C74048 +
           (C19224 * C154222 + C38631 * C154229 + (C38644 + C38645) * C82853) *
               C154021) *
              C154082 * C1396 -
          (((C15024 * C28882 - C15025 * C28879 - C15024 * C28883 +
             C154268 * C28885 + C15022 * C4673 - C15023 * C4669 -
             C15022 * C4674 + C154408 * C4678) *
                C82853 +
            (C38645 + C38644) * C154229 + C38630 * C154222) *
               C154021 +
           ((C44959 + C44958) * C82853 + C44945 * C154229 + C40416 * C154222) *
               C74048) *
              C154082 * C1397) *
         C154047) /
            (p * q * std::sqrt(p + q));
    d2ee[25] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
               C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
                  C154222 +
              (C19258 + C19259) * C154229 + C38629 * C82853) *
                 C74048 +
             ((C15087 + C15088) * C154222 + C19212 * C154229 +
              C19224 * C82853) *
                 C154021) *
                C2114 -
            ((C39916 * C82853 + C20558 * C154229 +
              (C15653 + C15654) * C154222) *
                 C154021 +
             (C41701 * C82853 + (C20597 + C20598) * C154229 +
              (C15024 * C602 - C15025 * C585 - C15024 * C603 + C154268 * C621 +
               C15022 * C600 - C15023 * C584 - C15022 * C601 + C154408 * C620) *
                  C154222) *
                 C74048) *
                C154146) *
               C154392 +
           ((((C20598 + C20597) * C154222 + (C22383 + C22384) * C154229 +
              (C41714 + C41715) * C82853) *
                 C74048 +
             (C20567 * C154222 + C39917 * C154229 +
              (C39930 + C39931) * C82853) *
                 C154021) *
                C154146 -
            ((C38630 * C82853 + C19214 * C154229 + C19215 * C154222) * C154021 +
             (C40416 * C82853 + (C19260 + C19261) * C154229 +
              (C19259 + C19258) * C154222) *
                 C74048) *
                C2114) *
               C154118) *
              C154384 +
          (((((C15654 + C15653) * C154222 + C20567 * C154229 +
              C39917 * C82853) *
                 C74048 +
             ((C15652 + C15651) * C154222 + C20576 * C154229 +
              (C20601 + C20602) * C82853) *
                 C154021) *
                C154146 -
            ((C19213 * C82853 + C15856 * C154229 +
              (C15090 + C15089) * C154222) *
                 C154021 +
             (C19214 * C82853 + C19215 * C154229 +
              (C15088 + C15087) * C154222) *
                 C74048) *
                C2114) *
               C154392 +
           (((C19212 * C154222 + C19224 * C154229 + C38631 * C82853) * C74048 +
             (C18908 * C154222 + C19233 * C154229 +
              (C19264 + C19265) * C82853) *
                 C154021) *
                C2114 -
            (((C15024 * C4908 - C15025 * C4905 - C15024 * C4909 +
               C154268 * C4914 + C15022 * C4262 - C15023 * C4256 -
               C15022 * C4263 + C154408 * C4268) *
                  C82853 +
              (C20602 + C20601) * C154229 + C20168 * C154222) *
                 C154021 +
             ((C39931 + C39930) * C82853 + C39916 * C154229 +
              C20558 * C154222) *
                 C74048) *
                C154146) *
               C154118) *
              C154053)) /
        (p * q * std::sqrt(p + q));
    d2ee[26] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
              C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
                 C154222 +
             (C19258 + C19259) * C154229 + C38629 * C82853) *
                C74048 +
            ((C15087 + C15088) * C154222 + C19212 * C154229 + C19224 * C82853) *
                C154021) *
               C154465 -
           ((C39916 * C82853 + C20558 * C154229 + (C15653 + C15654) * C154222) *
                C154021 +
            (C41701 * C82853 + (C20597 + C20598) * C154229 +
             (C15024 * C602 - C15025 * C585 - C15024 * C603 + C154268 * C621 +
              C15022 * C600 - C15023 * C584 - C15022 * C601 + C154408 * C620) *
                 C154222) *
                C74048) *
               C154466 +
           (((C15022 * C602 - C15023 * C585 - C15022 * C603 + C154408 * C621 +
              C15024 * C2337 - C15025 * C2328 - C15024 * C2338 +
              C154268 * C2343) *
                 C154222 +
             (C21403 + C21404) * C154229 + (C40733 + C40734) * C82853) *
                C74048 +
            ((C15655 + C15656) * C154222 + (C19580 + C19581) * C154229 +
             (C38948 + C38949) * C82853) *
                C154021) *
               C2630) *
              C154392 +
          ((((C20598 + C20597) * C154222 + (C22383 + C22384) * C154229 +
             (C41714 + C41715) * C82853) *
                C74048 +
            (C20567 * C154222 + C39917 * C154229 + (C39930 + C39931) * C82853) *
                C154021) *
               C154466 -
           ((C38630 * C82853 + C19214 * C154229 + C19215 * C154222) * C154021 +
            (C40416 * C82853 + (C19260 + C19261) * C154229 +
             (C19259 + C19258) * C154222) *
                C74048) *
               C154465 -
           (((C15024 * C31817 - C15025 * C31816 - C15024 * C31818 +
              C154268 * C31819 + C15022 * C4910 - C15023 * C4906 -
              C15022 * C4911 + C154408 * C4915) *
                 C82853 +
             (C38949 + C38948) * C154229 + (C19581 + C19580) * C154222) *
                C154021 +
            ((C45167 + C45166) * C82853 + (C40734 + C40733) * C154229 +
             (C21404 + C21403) * C154222) *
                C74048) *
               C2630) *
              C154118) *
         C154047) /
        (p * q * std::sqrt(p + q));
    d2ee[27] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
              C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
                 C154222 +
             (C19258 + C19259) * C154229 + C38629 * C82853) *
                C74048 +
            ((C15087 + C15088) * C154222 + C19212 * C154229 + C19224 * C82853) *
                C154021) *
               C2114 -
           ((C39916 * C82853 + C20558 * C154229 + (C15653 + C15654) * C154222) *
                C154021 +
            (C41701 * C82853 + (C20597 + C20598) * C154229 +
             (C15024 * C602 - C15025 * C585 - C15024 * C603 + C154268 * C621 +
              C15022 * C600 - C15023 * C584 - C15022 * C601 + C154408 * C620) *
                 C154222) *
                C74048) *
               C154146) *
              C338 +
          ((((C20598 + C20597) * C154222 + (C22383 + C22384) * C154229 +
             (C41714 + C41715) * C82853) *
                C74048 +
            (C20567 * C154222 + C39917 * C154229 + (C39930 + C39931) * C82853) *
                C154021) *
               C154146 -
           ((C38630 * C82853 + C19214 * C154229 + C19215 * C154222) * C154021 +
            (C40416 * C82853 + (C19260 + C19261) * C154229 +
             (C19259 + C19258) * C154222) *
                C74048) *
               C2114) *
              C339 +
          (((C38629 * C154222 + C43780 * C154229 + (C40429 + C40430) * C82853) *
                C74048 +
            (C19224 * C154222 + C38631 * C154229 + (C38644 + C38645) * C82853) *
                C154021) *
               C2114 -
           (((C15024 * C28468 - C15025 * C28465 - C15024 * C28469 +
              C154268 * C28471 + C15022 * C5662 - C15023 * C5658 -
              C15022 * C5663 + C154408 * C5667) *
                 C82853 +
             (C39931 + C39930) * C154229 + C39916 * C154222) *
                C154021 +
            ((C45828 + C45827) * C82853 + C45814 * C154229 + C41701 * C154222) *
                C74048) *
               C154146) *
              C340) *
         C154047) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
              C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
                 C154222 +
             (C19258 + C19259) * C154229 + C38629 * C82853) *
                C74048 +
            ((C15087 + C15088) * C154222 + C19212 * C154229 + C19224 * C82853) *
                C154021) *
               C2114 -
           ((C39916 * C82853 + C20558 * C154229 + (C15653 + C15654) * C154222) *
                C154021 +
            (C41701 * C82853 + (C20597 + C20598) * C154229 +
             (C15024 * C602 - C15025 * C585 - C15024 * C603 + C154268 * C621 +
              C15022 * C600 - C15023 * C584 - C15022 * C601 + C154408 * C620) *
                 C154222) *
                C74048) *
               C154146) *
              C154066 * C1309 +
          ((((C15654 + C15653) * C154222 + C20567 * C154229 + C39917 * C82853) *
                C74048 +
            ((C15652 + C15651) * C154222 + C20576 * C154229 +
             (C20601 + C20602) * C82853) *
                C154021) *
               C154146 -
           ((C19213 * C82853 + C15856 * C154229 + (C15090 + C15089) * C154222) *
                C154021 +
            (C19214 * C82853 + C19215 * C154229 + (C15088 + C15087) * C154222) *
                C74048) *
               C2114) *
              C154066 * C1310 +
          (((C15097 * C154222 + C18908 * C154229 + C19233 * C82853) * C74048 +
            (C15098 * C154222 + C19876 * C154229 + (C15381 + C15382) * C82853) *
                C154021) *
               C2114 -
           (((C15024 * C3451 - C15025 * C3444 - C15024 * C3452 +
              C154268 * C3456 + C15022 * C1979 - C15023 * C1973 -
              C15022 * C1980 + C154408 * C1988) *
                 C82853 +
             (C16384 + C16383) * C154229 + C16067 * C154222) *
                C154021 +
            ((C20602 + C20601) * C82853 + C20168 * C154229 + C16068 * C154222) *
                C74048) *
               C154146) *
              C154066 * C1311)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
             C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
                C154222 +
            (C19258 + C19259) * C154229 + C38629 * C82853) *
               C74048 +
           ((C15087 + C15088) * C154222 + C19212 * C154229 + C19224 * C82853) *
               C154021) *
              C2320 -
          ((C39916 * C82853 + C20558 * C154229 + (C15653 + C15654) * C154222) *
               C154021 +
           (C41701 * C82853 + (C20597 + C20598) * C154229 +
            (C15024 * C602 - C15025 * C585 - C15024 * C603 + C154268 * C621 +
             C15022 * C600 - C15023 * C584 - C15022 * C601 + C154408 * C620) *
                C154222) *
               C74048) *
              C2321 +
          (((C15022 * C602 - C15023 * C585 - C15022 * C603 + C154408 * C621 +
             C15024 * C2337 - C15025 * C2328 - C15024 * C2338 +
             C154268 * C2343) *
                C154222 +
            (C21403 + C21404) * C154229 + (C40733 + C40734) * C82853) *
               C74048 +
           ((C15655 + C15656) * C154222 + (C19580 + C19581) * C154229 +
            (C38948 + C38949) * C82853) *
               C154021) *
              C2322 -
          (((C15024 * C31086 - C15025 * C31083 - C15024 * C31087 +
             C154268 * C31089 + C15022 * C6268 - C15023 * C6260 -
             C15022 * C6269 + C154408 * C6278) *
                C82853 +
            (C15024 * C9280 - C15025 * C9276 - C15024 * C9281 +
             C154268 * C9285 + C15022 * C6270 - C15023 * C6261 -
             C15022 * C6271 + C154408 * C6279) *
                C154229 +
            (C15024 * C7779 - C15025 * C7774 - C15024 * C7780 +
             C154268 * C7786 + C15022 * C2335 - C15023 * C2327 -
             C15022 * C2336 + C154408 * C2342) *
                C154222) *
               C154021 +
           ((C15024 * C31084 - C15025 * C31082 - C15024 * C31085 +
             C154268 * C31088 + C15022 * C6272 - C15023 * C6262 -
             C15022 * C6273 + C154408 * C6280) *
                C82853 +
            (C15024 * C9282 - C15025 * C9277 - C15024 * C9283 +
             C154268 * C9286 + C15022 * C6274 - C15023 * C6263 -
             C15022 * C6275 + C154408 * C6281) *
                C154229 +
            (C15024 * C7777 - C15025 * C7773 - C15024 * C7778 +
             C154268 * C7785 + C15022 * C2337 - C15023 * C2328 -
             C15022 * C2338 + C154408 * C2343) *
                C154222) *
               C74048) *
              C2323) *
         C154066 * C154047) /
            (p * q * std::sqrt(p + q));
    d2ee[28] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
              C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
                 C154222 +
             (C19258 + C19259) * C154229 + C38629 * C82853) *
                C74048 +
            ((C15087 + C15088) * C154222 + C19212 * C154229 + C19224 * C82853) *
                C154021) *
               C154465 -
           ((C39916 * C82853 + C20558 * C154229 + (C15653 + C15654) * C154222) *
                C154021 +
            (C41701 * C82853 + (C20597 + C20598) * C154229 +
             (C15024 * C602 - C15025 * C585 - C15024 * C603 + C154268 * C621 +
              C15022 * C600 - C15023 * C584 - C15022 * C601 + C154408 * C620) *
                 C154222) *
                C74048) *
               C154466 +
           (((C15022 * C602 - C15023 * C585 - C15022 * C603 + C154408 * C621 +
              C15024 * C2337 - C15025 * C2328 - C15024 * C2338 +
              C154268 * C2343) *
                 C154222 +
             (C21403 + C21404) * C154229 + (C40733 + C40734) * C82853) *
                C74048 +
            ((C15655 + C15656) * C154222 + (C19580 + C19581) * C154229 +
             (C38948 + C38949) * C82853) *
                C154021) *
               C2630) *
              C154066 * C154384 +
          ((((C15654 + C15653) * C154222 + C20567 * C154229 + C39917 * C82853) *
                C74048 +
            ((C15652 + C15651) * C154222 + C20576 * C154229 +
             (C20601 + C20602) * C82853) *
                C154021) *
               C154466 -
           ((C19213 * C82853 + C15856 * C154229 + (C15090 + C15089) * C154222) *
                C154021 +
            (C19214 * C82853 + C19215 * C154229 + (C15088 + C15087) * C154222) *
                C74048) *
               C154465 -
           (((C15024 * C6264 - C15025 * C6258 - C15024 * C6265 +
              C154268 * C6276 + C15022 * C3449 - C15023 * C3443 -
              C15022 * C3450 + C154408 * C3455) *
                 C82853 +
             (C19583 + C19582) * C154229 + (C15658 + C15657) * C154222) *
                C154021 +
            ((C38949 + C38948) * C82853 + (C19581 + C19580) * C154229 +
             (C15656 + C15655) * C154222) *
                C74048) *
               C2630) *
              C154066 * C154053)) /
        (p * q * std::sqrt(p + q));
    d2ee[29] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
              C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
                 C154222 +
             (C19258 + C19259) * C154229 + C38629 * C82853) *
                C74048 +
            ((C15087 + C15088) * C154222 + C19212 * C154229 + C19224 * C82853) *
                C154021) *
               C2114 -
           ((C39916 * C82853 + C20558 * C154229 + (C15653 + C15654) * C154222) *
                C154021 +
            (C41701 * C82853 + (C20597 + C20598) * C154229 +
             (C15024 * C602 - C15025 * C585 - C15024 * C603 + C154268 * C621 +
              C15022 * C600 - C15023 * C584 - C15022 * C601 + C154408 * C620) *
                 C154222) *
                C74048) *
               C154146) *
              C154066 * C1309 +
          ((((C15654 + C15653) * C154222 + C20567 * C154229 + C39917 * C82853) *
                C74048 +
            ((C15652 + C15651) * C154222 + C20576 * C154229 +
             (C20601 + C20602) * C82853) *
                C154021) *
               C154146 -
           ((C19213 * C82853 + C15856 * C154229 + (C15090 + C15089) * C154222) *
                C154021 +
            (C19214 * C82853 + C19215 * C154229 + (C15088 + C15087) * C154222) *
                C74048) *
               C2114) *
              C154066 * C1310 +
          (((C15097 * C154222 + C18908 * C154229 + C19233 * C82853) * C74048 +
            (C15098 * C154222 + C19876 * C154229 + (C15381 + C15382) * C82853) *
                C154021) *
               C2114 -
           (((C15024 * C3451 - C15025 * C3444 - C15024 * C3452 +
              C154268 * C3456 + C15022 * C1979 - C15023 * C1973 -
              C15022 * C1980 + C154408 * C1988) *
                 C82853 +
             (C16384 + C16383) * C154229 + C16067 * C154222) *
                C154021 +
            ((C20602 + C20601) * C82853 + C20168 * C154229 + C16068 * C154222) *
                C74048) *
               C154146) *
              C154066 * C1311)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
              C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
                 C154222 +
             (C19258 + C19259) * C154229 + C38629 * C82853) *
                C74048 +
            ((C15087 + C15088) * C154222 + C19212 * C154229 + C19224 * C82853) *
                C154021) *
               C2114 -
           ((C39916 * C82853 + C20558 * C154229 + (C15653 + C15654) * C154222) *
                C154021 +
            (C41701 * C82853 + (C20597 + C20598) * C154229 +
             (C15024 * C602 - C15025 * C585 - C15024 * C603 + C154268 * C621 +
              C15022 * C600 - C15023 * C584 - C15022 * C601 + C154408 * C620) *
                 C154222) *
                C74048) *
               C154146) *
              C338 +
          ((((C20598 + C20597) * C154222 + (C22383 + C22384) * C154229 +
             (C41714 + C41715) * C82853) *
                C74048 +
            (C20567 * C154222 + C39917 * C154229 + (C39930 + C39931) * C82853) *
                C154021) *
               C154146 -
           ((C38630 * C82853 + C19214 * C154229 + C19215 * C154222) * C154021 +
            (C40416 * C82853 + (C19260 + C19261) * C154229 +
             (C19259 + C19258) * C154222) *
                C74048) *
               C2114) *
              C339 +
          (((C38629 * C154222 + C43780 * C154229 + (C40429 + C40430) * C82853) *
                C74048 +
            (C19224 * C154222 + C38631 * C154229 + (C38644 + C38645) * C82853) *
                C154021) *
               C2114 -
           (((C15024 * C28468 - C15025 * C28465 - C15024 * C28469 +
              C154268 * C28471 + C15022 * C5662 - C15023 * C5658 -
              C15022 * C5663 + C154408 * C5667) *
                 C82853 +
             (C39931 + C39930) * C154229 + C39916 * C154222) *
                C154021 +
            ((C45828 + C45827) * C82853 + C45814 * C154229 + C41701 * C154222) *
                C74048) *
               C154146) *
              C340) *
         C154047) /
            (p * q * std::sqrt(p + q));
    d2ee[30] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C154487 +
             C3210 * C154483 + C3211 * C154473 + C3214 * C154415) *
                C74048 +
            (C74051 + C74052 + C74053 + C74054) * C154021) *
               C154082 * C154392 -
           ((C74257 + C74258 + C74259 + C74260) * C154021 +
            (C4687 * C154415 + C3214 * C154473 + C3211 * C154483 +
             C3210 * C154487) *
                C74048) *
               C154082 * C154118) *
              C154461 +
          (((C74260 + C74259 + C74258 + C74257) * C74048 +
            (C74661 + C74662 + C74663 + C74664) * C154021) *
               C154082 * C154118 -
           ((C74055 + C74056 + C74057 + C74058) * C154021 +
            (C74054 + C74053 + C74052 + C74051) * C74048) *
               C154082 * C154392) *
              C154462 +
          (((C74058 + C74057 + C74056 + C74055) * C74048 +
            (C74059 + C74060 + C74061 + C74062) * C154021) *
               C154082 * C154392 -
           (((C134 * C3149 - C135 * C3142 - C134 * C3150 + C154181 * C3154) *
                 C154415 +
             C3217 * C154473 + C446 * C154483 + C441 * C154487) *
                C154021 +
            (C74664 + C74663 + C74662 + C74661) * C74048) *
               C154082 * C154118) *
              C818)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C70494 +
             C3210 * C154226) *
                C154486 +
            (C70501 + C70502) * C154479 + C70511 * C154460 + C70512 * C154407) *
               C154082 * C154392 -
           (C71121 * C154407 + C71122 * C154460 + (C70713 + C70714) * C154479 +
            (C3211 * C154226 + C3210 * C70494) * C154486) *
               C154082 * C154118) *
              C154461 +
          (((C70714 + C70713) * C154486 + (C70712 + C70711) * C154479 +
            (C70710 + C70709) * C154460 + (C71123 + C71124) * C154407) *
               C154082 * C154118 -
           (C70513 * C154407 + C70514 * C154460 + (C70504 + C70503) * C154479 +
            (C70502 + C70501) * C154486) *
               C154082 * C154392) *
              C154462 +
          ((C70511 * C154486 + C70512 * C154479 + (C70508 + C70507) * C154460 +
            (C70509 + C70510) * C154407) *
               C154082 * C154392 -
           (((C134 * C377 - C135 * C354 - C134 * C378 + C154181 * C390) *
                 C154226 +
             C830 * C70494) *
                C154407 +
            (C71124 + C71123) * C154460 + C71121 * C154479 + C71122 * C154486) *
               C154082 * C154118) *
              C818)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C7157 * C144 - C7158 * C136 - C7157 * C145 + C154481 * C160 +
              C7159 * C600 - C7160 * C584 - C7159 * C601 + C154470 * C620 +
              C7161 * C602 - C7162 * C585 - C7161 * C603 + C154445 * C621) *
                 C70494 +
             (C30851 + C30852 + C30853) * C154226) *
                C74048 +
            ((C7236 + C7237 + C7238) * C70494 + C77940 * C154226) * C154021) *
               C154082 * C154392 -
           ((C30838 * C154226 + C77941 * C70494) * C154021 +
            ((C30856 + C30855 + C30854) * C154226 +
             (C30853 + C30852 + C30851) * C70494) *
                C74048) *
               C154082 * C154118) *
              C154461 +
          (((C77940 * C70494 + C77942 * C154226) * C74048 +
            (C78545 * C70494 + (C7553 + C7554 + C7555) * C154226) * C154021) *
               C154082 * C154118 -
           ((C8105 * C154226 + (C7241 + C7240 + C7239) * C70494) * C154021 +
            (C77941 * C154226 + (C7238 + C7237 + C7236) * C70494) * C74048) *
               C154082 * C154392) *
              C154462 +
          (((C7250 * C70494 + C78545 * C154226) * C74048 +
            ((C7244 + C7243 + C7242) * C70494 +
             (C8113 + C8114 + C8115) * C154226) *
                C154021) *
               C154082 * C154392 -
           (((C7161 * C3451 - C7162 * C3444 - C7161 * C3452 + C154445 * C3456 +
              C7159 * C1979 - C7160 * C1973 - C7159 * C1980 + C154470 * C1988 +
              C7157 * C371 - C7158 * C351 - C7157 * C372 + C154481 * C387) *
                 C154226 +
             (C8115 + C8114 + C8113) * C70494) *
                C154021 +
            ((C7555 + C7554 + C7553) * C154226 + C8105 * C70494) * C74048) *
               C154082 * C154118) *
              C818)) /
            (p * q * std::sqrt(p + q));
    d2ee[31] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                  C154487 +
              C3210 * C154483 + C3211 * C154473 + C3214 * C154415) *
                 C74048 +
             (C74051 + C74052 + C74053 + C74054) * C154021) *
                C154393 -
            ((C74459 + C74460 + C74461 + C74462) * C154021 +
             (C5676 * C154415 + C4299 * C154473 + C4300 * C154483 +
              (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                  C154487) *
                 C74048) *
                C154146) *
               C154392 +
           (((C4300 * C154487 + C4299 * C154483 + C5676 * C154473 +
              C28899 * C154415) *
                 C74048 +
             (C75121 + C75122 + C75123 + C75124) * C154021) *
                C154146 -
            ((C74257 + C74258 + C74259 + C74260) * C154021 +
             (C4687 * C154415 + C3214 * C154473 + C3211 * C154483 +
              C3210 * C154487) *
                 C74048) *
                C154393) *
               C154118) *
              C341 +
          ((((C74462 + C74461 + C74460 + C74459) * C74048 +
             (C74859 + C74860 + C74861 + C74862) * C154021) *
                C154146 -
            ((C74055 + C74056 + C74057 + C74058) * C154021 +
             (C74054 + C74053 + C74052 + C74051) * C74048) *
                C154393) *
               C154392 +
           (((C74260 + C74259 + C74258 + C74257) * C74048 +
             (C74661 + C74662 + C74663 + C74664) * C154021) *
                C154393 -
            (((C134 * C5660 - C135 * C5657 - C134 * C5661 + C154181 * C5666) *
                  C154415 +
              C4302 * C154473 + C3500 * C154483 + C1179 * C154487) *
                 C154021 +
             (C75124 + C75123 + C75122 + C75121) * C74048) *
                C154146) *
               C154118) *
              C154053)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                  C70494 +
              C3210 * C154226) *
                 C154486 +
             (C70501 + C70502) * C154479 + C70511 * C154460 +
             C70512 * C154407) *
                C154393 -
            (C71319 * C154407 + C71320 * C154460 + (C70919 + C70920) * C154479 +
             (C4300 * C154226 +
              (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                  C70494) *
                 C154486) *
                C154146) *
               C154392 +
           (((C4300 * C70494 + C4299 * C154226) * C154486 +
             (C71581 + C71582) * C154479 + (C71583 + C71584) * C154460 +
             (C71585 + C71586) * C154407) *
                C154146 -
            (C71121 * C154407 + C71122 * C154460 + (C70713 + C70714) * C154479 +
             (C3211 * C154226 + C3210 * C70494) * C154486) *
                C154393) *
               C154118) *
              C341 +
          ((((C70920 + C70919) * C154486 + (C70918 + C70917) * C154479 +
             (C70916 + C70915) * C154460 + (C71321 + C71322) * C154407) *
                C154146 -
            (C70513 * C154407 + C70514 * C154460 + (C70504 + C70503) * C154479 +
             (C70502 + C70501) * C154486) *
                C154393) *
               C154392 +
           (((C70714 + C70713) * C154486 + (C70712 + C70711) * C154479 +
             (C70710 + C70709) * C154460 + (C71123 + C71124) * C154407) *
                C154393 -
            (((C134 * C1977 - C135 * C1972 - C134 * C1978 + C154181 * C1987) *
                  C154226 +
              C1181 * C70494) *
                 C154407 +
             (C71586 + C71585) * C154460 + (C71584 + C71583) * C154479 +
             (C71582 + C71581) * C154486) *
                C154146) *
               C154118) *
              C154053)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C7157 * C144 - C7158 * C136 - C7157 * C145 + C154481 * C160 +
               C7159 * C600 - C7160 * C584 - C7159 * C601 + C154470 * C620 +
               C7161 * C602 - C7162 * C585 - C7161 * C603 + C154445 * C621) *
                  C70494 +
              (C30851 + C30852 + C30853) * C154226) *
                 C74048 +
             ((C7236 + C7237 + C7238) * C70494 + C77940 * C154226) * C154021) *
                C154393 -
            ((C79224 * C154226 + (C7865 + C7866 + C7867) * C70494) * C154021 +
             ((C31878 + C31879 + C31880) * C154226 +
              (C7161 * C2337 - C7162 * C2328 - C7161 * C2338 + C154445 * C2343 +
               C7159 * C602 - C7160 * C585 - C7159 * C603 + C154470 * C621 +
               C7157 * C600 - C7158 * C584 - C7157 * C601 + C154481 * C620) *
                  C70494) *
                 C74048) *
                C154146) *
               C154392 +
           ((((C31880 + C31879 + C31878) * C70494 +
              (C31877 + C31876 + C31875) * C154226) *
                 C74048 +
             (C79225 * C70494 + (C31881 + C31882 + C31883) * C154226) *
                 C154021) *
                C154146 -
            ((C30838 * C154226 + C77941 * C70494) * C154021 +
             ((C30856 + C30855 + C30854) * C154226 +
              (C30853 + C30852 + C30851) * C70494) *
                 C74048) *
                C154393) *
               C154118) *
              C341 +
          (((((C7867 + C7866 + C7865) * C70494 + C79225 * C154226) * C74048 +
             ((C7864 + C7863 + C7862) * C70494 +
              (C8691 + C8692 + C8693) * C154226) *
                 C154021) *
                C154146 -
            ((C8105 * C154226 + (C7241 + C7240 + C7239) * C70494) * C154021 +
             (C77941 * C154226 + (C7238 + C7237 + C7236) * C70494) * C74048) *
                C154393) *
               C154392 +
           (((C77940 * C70494 + C77942 * C154226) * C74048 +
             (C78545 * C70494 + (C7553 + C7554 + C7555) * C154226) * C154021) *
                C154393 -
            (((C7161 * C6264 - C7162 * C6258 - C7161 * C6265 + C154445 * C6276 +
               C7159 * C3449 - C7160 * C3443 - C7159 * C3450 + C154470 * C3455 +
               C7157 * C1981 - C7158 * C1974 - C7157 * C1982 +
               C154481 * C1989) *
                  C154226 +
              (C8693 + C8692 + C8691) * C70494) *
                 C154021 +
             ((C31883 + C31882 + C31881) * C154226 + C79224 * C70494) *
                 C74048) *
                C154146) *
               C154118) *
              C154053)) /
            (p * q * std::sqrt(p + q));
    d2ee[32] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                    C70494 +
                C3210 * C154226) *
                   C154486 +
               (C70501 + C70502) * C154479 + C70511 * C154460 +
               C70512 * C154407) *
                  C154082 * C154066 * C130 -
              (C70513 * C154407 + C70514 * C154460 +
               (C70504 + C70503) * C154479 + (C70502 + C70501) * C154486) *
                  C154082 * C154066 * C131 +
              (C70511 * C154486 + C70512 * C154479 +
               (C70508 + C70507) * C154460 + (C70509 + C70510) * C154407) *
                  C154082 * C154066 * C132 -
              (((C134 * C820 - C135 * C819 - C134 * C821 + C154181 * C822) *
                    C154226 +
                C210 * C70494) *
                   C154407 +
               (C70510 + C70509) * C154460 + C70513 * C154479 +
               C70514 * C154486) *
                  C154082 * C154066 * C133) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                     C70494 +
                 C3210 * C154226) *
                    C154486 +
                (C70501 + C70502) * C154479 + C70511 * C154460 +
                C70512 * C154407) *
                   C154082 * C338 -
               ((C70709 + C70710) * C154407 + (C70711 + C70712) * C154460 +
                (C70713 + C70714) * C154479 +
                (C3211 * C154226 + C3210 * C70494) * C154486) *
                   C154082 * C339 +
               ((C3211 * C70494 + C3214 * C154226) * C154486 +
                (C70715 + C70716) * C154479 + (C70717 + C70718) * C154460 +
                (C70719 + C70720) * C154407) *
                   C154082 * C340) *
                  C341 +
              (((C70714 + C70713) * C154486 + (C70712 + C70711) * C154479 +
                (C70710 + C70709) * C154460 +
                (C440 * C70494 + C447 * C154226) * C154407) *
                   C154082 * C339 -
               (C70513 * C154407 + C70514 * C154460 +
                (C70504 + C70503) * C154479 + (C70502 + C70501) * C154486) *
                   C154082 * C338 -
               (((C134 * C1404 - C135 * C1399 - C134 * C1405 +
                  C154181 * C1414) *
                     C154226 +
                 C447 * C70494) *
                    C154407 +
                (C70720 + C70719) * C154460 + (C70718 + C70717) * C154479 +
                (C70716 + C70715) * C154486) *
                   C154082 * C340) *
                  C154053)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C70494 +
             C3210 * C154226) *
                C154486 +
            (C70501 + C70502) * C154479 + C70511 * C154460 + C70512 * C154407) *
               C577 -
           ((C70915 + C70916) * C154407 + (C70917 + C70918) * C154460 +
            (C70919 + C70920) * C154479 +
            (C4300 * C154226 +
             (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                 C70494) *
                C154486) *
               C578 +
           (((C134 * C602 - C135 * C585 - C134 * C603 + C154181 * C621) *
                 C70494 +
             C4930 * C154226) *
                C154486 +
            (C70921 + C70922) * C154479 + (C70923 + C70924) * C154460 +
            (C70925 + C70926) * C154407) *
               C579) *
              C154066 * C341 +
          (((C70920 + C70919) * C154486 + (C70918 + C70917) * C154479 +
            (C70916 + C70915) * C154460 +
            (C677 * C70494 + C1181 * C154226) * C154407) *
               C578 -
           (C70513 * C154407 + C70514 * C154460 + (C70504 + C70503) * C154479 +
            (C70502 + C70501) * C154486) *
               C577 -
           (((C134 * C1546 - C135 * C1541 - C134 * C1547 + C154181 * C1556) *
                 C154226 +
             C684 * C70494) *
                C154407 +
            (C70926 + C70925) * C154460 + (C70924 + C70923) * C154479 +
            (C70922 + C70921) * C154486) *
               C579) *
              C154066 * C154053)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                C154487 +
            C3210 * C154483 + C3211 * C154473 + C3214 * C154415) *
               C74048 +
           (C74051 + C74052 + C74053 + C74054) * C154021) *
              C154082 * C154066 * C130 -
          ((C74055 + C74056 + C74057 + C74058) * C154021 +
           (C74054 + C74053 + C74052 + C74051) * C74048) *
              C154082 * C154066 * C131 +
          ((C74058 + C74057 + C74056 + C74055) * C74048 +
           (C74059 + C74060 + C74061 + C74062) * C154021) *
              C154082 * C154066 * C132 -
          (((C134 * C1404 - C135 * C1399 - C134 * C1405 + C154181 * C1414) *
                C154415 +
            C447 * C154473 + C440 * C154483 + C208 * C154487) *
               C154021 +
           (C74062 + C74061 + C74060 + C74059) * C74048) *
              C154082 * C154066 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C154487 +
             C3210 * C154483 + C3211 * C154473 + C3214 * C154415) *
                C74048 +
            (C74051 + C74052 + C74053 + C74054) * C154021) *
               C154082 * C338 -
           ((C74257 + C74258 + C74259 + C74260) * C154021 +
            (C4687 * C154415 + C3214 * C154473 + C3211 * C154483 +
             C3210 * C154487) *
                C74048) *
               C154082 * C339 +
           ((C3211 * C154487 + C3214 * C154483 + C4687 * C154473 +
             C28341 * C154415) *
                C74048 +
            (C74261 + C74262 + C74263 + C74264) * C154021) *
               C154082 * C340) *
              C341 +
          (((C74260 + C74259 + C74258 + C74257) * C74048 +
            (C442 * C154487 + C445 * C154483 + C3212 * C154473 +
             C3216 * C154415) *
                C154021) *
               C154082 * C339 -
           ((C74055 + C74056 + C74057 + C74058) * C154021 +
            (C74054 + C74053 + C74052 + C74051) * C74048) *
               C154082 * C338 -
           (((C134 * C4671 - C135 * C4668 - C134 * C4672 + C154181 * C4677) *
                 C154415 +
             C3216 * C154473 + C3212 * C154483 + C445 * C154487) *
                C154021 +
            (C74264 + C74263 + C74262 + C74261) * C74048) *
               C154082 * C340) *
              C154053)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C154487 +
             C3210 * C154483 + C3211 * C154473 + C3214 * C154415) *
                C74048 +
            (C74051 + C74052 + C74053 + C74054) * C154021) *
               C577 -
           ((C74459 + C74460 + C74461 + C74462) * C154021 +
            (C5676 * C154415 + C4299 * C154473 + C4300 * C154483 +
             (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                 C154487) *
                C74048) *
               C578 +
           (((C134 * C602 - C135 * C585 - C134 * C603 + C154181 * C621) *
                 C154487 +
             C4930 * C154483 + C4931 * C154473 + C29254 * C154415) *
                C74048 +
            (C74463 + C74464 + C74465 + C74466) * C154021) *
               C579) *
              C154066 * C341 +
          (((C74462 + C74461 + C74460 + C74459) * C74048 +
            (C679 * C154487 + C1179 * C154483 + C3500 * C154473 +
             C4302 * C154415) *
                C154021) *
               C578 -
           ((C74055 + C74056 + C74057 + C74058) * C154021 +
            (C74054 + C74053 + C74052 + C74051) * C74048) *
               C577 -
           (((C134 * C4908 - C135 * C4905 - C134 * C4909 + C154181 * C4914) *
                 C154415 +
             C3505 * C154473 + C3504 * C154483 + C682 * C154487) *
                C154021 +
            (C74466 + C74465 + C74464 + C74463) * C74048) *
               C579) *
              C154066 * C154053)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C7157 * C144 - C7158 * C136 - C7157 * C145 + C154481 * C160 +
             C7159 * C600 - C7160 * C584 - C7159 * C601 + C154470 * C620 +
             C7161 * C602 - C7162 * C585 - C7161 * C603 + C154445 * C621) *
                C70494 +
            (C30851 + C30852 + C30853) * C154226) *
               C74048 +
           ((C7236 + C7237 + C7238) * C70494 +
            (C7549 + C7548 + C7547) * C154226) *
               C154021) *
              C154082 * C154066 * C130 -
          ((C8105 * C154226 + (C7241 + C7240 + C7239) * C70494) * C154021 +
           ((C7547 + C7548 + C7549) * C154226 +
            (C7238 + C7237 + C7236) * C70494) *
               C74048) *
              C154082 * C154066 * C131 +
          ((C7250 * C70494 + (C7546 + C7545 + C7544) * C154226) * C74048 +
           ((C7244 + C7243 + C7242) * C70494 +
            (C8113 + C8114 + C8115) * C154226) *
               C154021) *
              C154082 * C154066 * C132 -
          (((C7161 * C1546 - C7162 * C1541 - C7161 * C1547 + C154445 * C1556 +
             C7159 * C1143 - C7160 * C1133 - C7159 * C1144 + C154470 * C1151 +
             C7157 * C355 - C7158 * C343 - C7157 * C356 + C154481 * C379) *
                C154226 +
            (C7247 + C7246 + C7245) * C70494) *
               C154021 +
           ((C8115 + C8114 + C8113) * C154226 + C7251 * C70494) * C74048) *
              C154082 * C154066 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C7157 * C144 - C7158 * C136 - C7157 * C145 + C154481 * C160 +
              C7159 * C600 - C7160 * C584 - C7159 * C601 + C154470 * C620 +
              C7161 * C602 - C7162 * C585 - C7161 * C603 + C154445 * C621) *
                 C70494 +
             (C30851 + C30852 + C30853) * C154226) *
                C74048 +
            ((C7236 + C7237 + C7238) * C70494 + C77940 * C154226) * C154021) *
               C154082 * C338 -
           ((C30838 * C154226 + C77941 * C70494) * C154021 +
            ((C30856 + C30855 + C30854) * C154226 +
             (C30853 + C30852 + C30851) * C70494) *
                C74048) *
               C154082 * C339 +
           ((C30864 * C70494 + (C30859 + C30858 + C30857) * C154226) * C74048 +
            (C77942 * C70494 + (C30860 + C30861 + C30862) * C154226) *
                C154021) *
               C154082 * C340) *
              C341 +
          (((C77940 * C70494 + C77942 * C154226) * C74048 +
            ((C7546 + C7545 + C7544) * C70494 +
             (C7553 + C7554 + C7555) * C154226) *
                C154021) *
               C154082 * C339 -
           ((C8105 * C154226 + (C7241 + C7240 + C7239) * C70494) * C154021 +
            (C77941 * C154226 + (C7238 + C7237 + C7236) * C70494) * C74048) *
               C154082 * C338 -
           (((C7161 * C4908 - C7162 * C4905 - C7161 * C4909 + C154445 * C4914 +
              C7159 * C4262 - C7160 * C4256 - C7159 * C4263 + C154470 * C4268 +
              C7157 * C1408 - C7158 * C1401 - C7157 * C1409 + C154481 * C1416) *
                 C154226 +
             (C7555 + C7554 + C7553) * C70494) *
                C154021 +
            ((C30862 + C30861 + C30860) * C154226 + C30838 * C70494) * C74048) *
               C154082 * C340) *
              C154053)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C7157 * C144 - C7158 * C136 - C7157 * C145 + C154481 * C160 +
              C7159 * C600 - C7160 * C584 - C7159 * C601 + C154470 * C620 +
              C7161 * C602 - C7162 * C585 - C7161 * C603 + C154445 * C621) *
                 C70494 +
             (C30851 + C30852 + C30853) * C154226) *
                C74048 +
            ((C7236 + C7237 + C7238) * C70494 + C77940 * C154226) * C154021) *
               C577 -
           (((C8690 + C8689 + C8688) * C154226 +
             (C7865 + C7866 + C7867) * C70494) *
                C154021 +
            ((C31878 + C31879 + C31880) * C154226 +
             (C7161 * C2337 - C7162 * C2328 - C7161 * C2338 + C154445 * C2343 +
              C7159 * C602 - C7160 * C585 - C7159 * C603 + C154470 * C621 +
              C7157 * C600 - C7158 * C584 - C7157 * C601 + C154481 * C620) *
                 C70494) *
                C74048) *
               C578 +
           (((C7157 * C602 - C7158 * C585 - C7157 * C603 + C154481 * C621 +
              C7159 * C2337 - C7160 * C2328 - C7159 * C2338 + C154470 * C2343 +
              C7161 * C7777 - C7162 * C7773 - C7161 * C7778 + C154445 * C7785) *
                 C70494 +
             (C32529 + C32530 + C32531) * C154226) *
                C74048 +
            ((C7868 + C7869 + C7870) * C70494 +
             (C78251 + C78252 + C78253) * C154226) *
                C154021) *
               C579) *
              C154066 * C341 +
          ((((C7867 + C7866 + C7865) * C70494 +
             (C8688 + C8689 + C8690) * C154226) *
                C74048 +
            ((C7864 + C7863 + C7862) * C70494 +
             (C8691 + C8692 + C8693) * C154226) *
                C154021) *
               C578 -
           ((C8105 * C154226 + (C7241 + C7240 + C7239) * C70494) * C154021 +
            (C77941 * C154226 + (C7238 + C7237 + C7236) * C70494) * C74048) *
               C577 -
           (((C7161 * C9278 - C7162 * C9275 - C7161 * C9279 + C154445 * C9284 +
              C7159 * C6266 - C7160 * C6259 - C7159 * C6267 + C154470 * C6277 +
              C7157 * C1550 - C7158 * C1543 - C7157 * C1551 + C154481 * C1558) *
                 C154226 +
             (C7873 + C7872 + C7871) * C70494) *
                C154021 +
            ((C78253 + C78252 + C78251) * C154226 +
             (C7870 + C7869 + C7868) * C70494) *
                C74048) *
               C579) *
              C154066 * C154053)) /
            (p * q * std::sqrt(p + q));
    d2ee[33] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C154487 +
             C3210 * C154483 + C3211 * C154473 + C3214 * C154415) *
                C74048 +
            (C74051 + C74052 + C74053 + C74054) * C154021) *
               C154393 -
           ((C74459 + C74460 + C74461 + C74462) * C154021 +
            (C5676 * C154415 + C4299 * C154473 + C4300 * C154483 +
             (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                 C154487) *
                C74048) *
               C154146) *
              C154066 * C154461 +
          (((C74462 + C74461 + C74460 + C74459) * C74048 +
            (C74859 + C74860 + C74861 + C74862) * C154021) *
               C154146 -
           ((C74055 + C74056 + C74057 + C74058) * C154021 +
            (C74054 + C74053 + C74052 + C74051) * C74048) *
               C154393) *
              C154066 * C154462 +
          (((C74058 + C74057 + C74056 + C74055) * C74048 +
            (C74059 + C74060 + C74061 + C74062) * C154021) *
               C154393 -
           (((C134 * C4264 - C135 * C4257 - C134 * C4265 + C154181 * C4269) *
                 C154415 +
             C3963 * C154473 + C1180 * C154483 + C678 * C154487) *
                C154021 +
            (C74862 + C74861 + C74860 + C74859) * C74048) *
               C154146) *
              C154066 * C818)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C70494 +
             C3210 * C154226) *
                C154486 +
            (C70501 + C70502) * C154479 + C70511 * C154460 + C70512 * C154407) *
               C154393 -
           (C71319 * C154407 + C71320 * C154460 + (C70919 + C70920) * C154479 +
            (C4300 * C154226 +
             (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                 C70494) *
                C154486) *
               C154146) *
              C154066 * C154461 +
          (((C70920 + C70919) * C154486 + (C70918 + C70917) * C154479 +
            (C70916 + C70915) * C154460 + (C71321 + C71322) * C154407) *
               C154146 -
           (C70513 * C154407 + C70514 * C154460 + (C70504 + C70503) * C154479 +
            (C70502 + C70501) * C154486) *
               C154393) *
              C154066 * C154462 +
          ((C70511 * C154486 + C70512 * C154479 + (C70508 + C70507) * C154460 +
            (C70509 + C70510) * C154407) *
               C154393 -
           (((C134 * C1145 - C135 * C1134 - C134 * C1146 + C154181 * C1152) *
                 C154226 +
             C966 * C70494) *
                C154407 +
            (C71322 + C71321) * C154460 + C71319 * C154479 + C71320 * C154486) *
               C154146) *
              C154066 * C818)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C7157 * C144 - C7158 * C136 - C7157 * C145 + C154481 * C160 +
              C7159 * C600 - C7160 * C584 - C7159 * C601 + C154470 * C620 +
              C7161 * C602 - C7162 * C585 - C7161 * C603 + C154445 * C621) *
                 C70494 +
             (C30851 + C30852 + C30853) * C154226) *
                C74048 +
            ((C7236 + C7237 + C7238) * C70494 + C77940 * C154226) * C154021) *
               C154393 -
           (((C8690 + C8689 + C8688) * C154226 +
             (C7865 + C7866 + C7867) * C70494) *
                C154021 +
            ((C31878 + C31879 + C31880) * C154226 +
             (C7161 * C2337 - C7162 * C2328 - C7161 * C2338 + C154445 * C2343 +
              C7159 * C602 - C7160 * C585 - C7159 * C603 + C154470 * C621 +
              C7157 * C600 - C7158 * C584 - C7157 * C601 + C154481 * C620) *
                 C70494) *
                C74048) *
               C154146) *
              C154066 * C154461 +
          ((((C7867 + C7866 + C7865) * C70494 +
             (C8688 + C8689 + C8690) * C154226) *
                C74048 +
            ((C7864 + C7863 + C7862) * C70494 +
             (C8691 + C8692 + C8693) * C154226) *
                C154021) *
               C154146 -
           ((C8105 * C154226 + (C7241 + C7240 + C7239) * C70494) * C154021 +
            (C77941 * C154226 + (C7238 + C7237 + C7236) * C70494) * C74048) *
               C154393) *
              C154066 * C154462 +
          (((C7250 * C70494 + C78545 * C154226) * C74048 +
            ((C7244 + C7243 + C7242) * C70494 +
             (C8113 + C8114 + C8115) * C154226) *
                C154021) *
               C154393 -
           (((C7161 * C8648 - C7162 * C8647 - C7161 * C8649 + C154445 * C8650 +
              C7159 * C1548 - C7160 * C1542 - C7159 * C1549 + C154470 * C1557 +
              C7157 * C1141 - C7158 * C1132 - C7157 * C1142 + C154481 * C1150) *
                 C154226 +
             (C8357 + C8356 + C8355) * C70494) *
                C154021 +
            ((C8693 + C8692 + C8691) * C154226 + C8347 * C70494) * C74048) *
               C154146) *
              C154066 * C818)) /
            (p * q * std::sqrt(p + q));
    d2ee[34] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C70494 +
             C3210 * C154226) *
                C154486 +
            (C70501 + C70502) * C154479 + C70511 * C154460 + C70512 * C154407) *
               C154082 * C338 -
           ((C70709 + C70710) * C154407 + (C70711 + C70712) * C154460 +
            (C70713 + C70714) * C154479 +
            (C3211 * C154226 + C3210 * C70494) * C154486) *
               C154082 * C339 +
           ((C3211 * C70494 + C3214 * C154226) * C154486 +
            (C70715 + C70716) * C154479 + (C70717 + C70718) * C154460 +
            (C70719 + C70720) * C154407) *
               C154082 * C340) *
              C341 +
          (((C70714 + C70713) * C154486 + (C70712 + C70711) * C154479 +
            (C70710 + C70709) * C154460 +
            (C440 * C70494 + C447 * C154226) * C154407) *
               C154082 * C339 -
           (C70513 * C154407 + C70514 * C154460 + (C70504 + C70503) * C154479 +
            (C70502 + C70501) * C154486) *
               C154082 * C338 -
           (((C134 * C1404 - C135 * C1399 - C134 * C1405 + C154181 * C1414) *
                 C154226 +
             C447 * C70494) *
                C154407 +
            (C70720 + C70719) * C154460 + (C70718 + C70717) * C154479 +
            (C70716 + C70715) * C154486) *
               C154082 * C340) *
              C154053)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                C70494 +
            C3210 * C154226) *
               C154486 +
           (C70501 + C70502) * C154479 + C70511 * C154460 + C70512 * C154407) *
              C154082 * C154066 * C130 -
          (C70513 * C154407 + C70514 * C154460 + (C70504 + C70503) * C154479 +
           (C70502 + C70501) * C154486) *
              C154082 * C154066 * C131 +
          (C70511 * C154486 + C70512 * C154479 + (C70508 + C70507) * C154460 +
           (C70509 + C70510) * C154407) *
              C154082 * C154066 * C132 -
          (((C134 * C820 - C135 * C819 - C134 * C821 + C154181 * C822) *
                C154226 +
            C210 * C70494) *
               C154407 +
           (C70510 + C70509) * C154460 + C70513 * C154479 + C70514 * C154486) *
              C154082 * C154066 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                C154487 +
            C3210 * C154483 + C3211 * C154473 + C3214 * C154415) *
               C74048 +
           (C74051 + C74052 + C74053 + C74054) * C154021) *
              C154082 * C154066 * C130 -
          ((C74055 + C74056 + C74057 + C74058) * C154021 +
           (C74054 + C74053 + C74052 + C74051) * C74048) *
              C154082 * C154066 * C131 +
          ((C74058 + C74057 + C74056 + C74055) * C74048 +
           (C74059 + C74060 + C74061 + C74062) * C154021) *
              C154082 * C154066 * C132 -
          (((C134 * C1404 - C135 * C1399 - C134 * C1405 + C154181 * C1414) *
                C154415 +
            C447 * C154473 + C440 * C154483 + C208 * C154487) *
               C154021 +
           (C74062 + C74061 + C74060 + C74059) * C74048) *
              C154082 * C154066 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C154487 +
             C3210 * C154483 + C3211 * C154473 + C3214 * C154415) *
                C74048 +
            (C74051 + C74052 + C74053 + C74054) * C154021) *
               C154082 * C338 -
           ((C74257 + C74258 + C74259 + C74260) * C154021 +
            (C4687 * C154415 + C3214 * C154473 + C3211 * C154483 +
             C3210 * C154487) *
                C74048) *
               C154082 * C339 +
           ((C3211 * C154487 + C3214 * C154483 + C4687 * C154473 +
             C28341 * C154415) *
                C74048 +
            (C74261 + C74262 + C74263 + C74264) * C154021) *
               C154082 * C340) *
              C341 +
          (((C74260 + C74259 + C74258 + C74257) * C74048 +
            (C442 * C154487 + C445 * C154483 + C3212 * C154473 +
             C3216 * C154415) *
                C154021) *
               C154082 * C339 -
           ((C74055 + C74056 + C74057 + C74058) * C154021 +
            (C74054 + C74053 + C74052 + C74051) * C74048) *
               C154082 * C338 -
           (((C134 * C4671 - C135 * C4668 - C134 * C4672 + C154181 * C4677) *
                 C154415 +
             C3216 * C154473 + C3212 * C154483 + C445 * C154487) *
                C154021 +
            (C74264 + C74263 + C74262 + C74261) * C74048) *
               C154082 * C340) *
              C154053)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C7157 * C144 - C7158 * C136 - C7157 * C145 + C154481 * C160 +
             C7159 * C600 - C7160 * C584 - C7159 * C601 + C154470 * C620 +
             C7161 * C602 - C7162 * C585 - C7161 * C603 + C154445 * C621) *
                C70494 +
            (C30851 + C30852 + C30853) * C154226) *
               C74048 +
           ((C7236 + C7237 + C7238) * C70494 +
            (C7549 + C7548 + C7547) * C154226) *
               C154021) *
              C154082 * C154066 * C130 -
          ((C8105 * C154226 + (C7241 + C7240 + C7239) * C70494) * C154021 +
           ((C7547 + C7548 + C7549) * C154226 +
            (C7238 + C7237 + C7236) * C70494) *
               C74048) *
              C154082 * C154066 * C131 +
          ((C7250 * C70494 + (C7546 + C7545 + C7544) * C154226) * C74048 +
           ((C7244 + C7243 + C7242) * C70494 +
            (C8113 + C8114 + C8115) * C154226) *
               C154021) *
              C154082 * C154066 * C132 -
          (((C7161 * C1546 - C7162 * C1541 - C7161 * C1547 + C154445 * C1556 +
             C7159 * C1143 - C7160 * C1133 - C7159 * C1144 + C154470 * C1151 +
             C7157 * C355 - C7158 * C343 - C7157 * C356 + C154481 * C379) *
                C154226 +
            (C7247 + C7246 + C7245) * C70494) *
               C154021 +
           ((C8115 + C8114 + C8113) * C154226 + C7251 * C70494) * C74048) *
              C154082 * C154066 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C7157 * C144 - C7158 * C136 - C7157 * C145 + C154481 * C160 +
              C7159 * C600 - C7160 * C584 - C7159 * C601 + C154470 * C620 +
              C7161 * C602 - C7162 * C585 - C7161 * C603 + C154445 * C621) *
                 C70494 +
             (C30851 + C30852 + C30853) * C154226) *
                C74048 +
            ((C7236 + C7237 + C7238) * C70494 + C77940 * C154226) * C154021) *
               C154082 * C338 -
           ((C30838 * C154226 + C77941 * C70494) * C154021 +
            ((C30856 + C30855 + C30854) * C154226 +
             (C30853 + C30852 + C30851) * C70494) *
                C74048) *
               C154082 * C339 +
           ((C30864 * C70494 + (C30859 + C30858 + C30857) * C154226) * C74048 +
            (C77942 * C70494 + (C30860 + C30861 + C30862) * C154226) *
                C154021) *
               C154082 * C340) *
              C341 +
          (((C77940 * C70494 + C77942 * C154226) * C74048 +
            ((C7546 + C7545 + C7544) * C70494 +
             (C7553 + C7554 + C7555) * C154226) *
                C154021) *
               C154082 * C339 -
           ((C8105 * C154226 + (C7241 + C7240 + C7239) * C70494) * C154021 +
            (C77941 * C154226 + (C7238 + C7237 + C7236) * C70494) * C74048) *
               C154082 * C338 -
           (((C7161 * C4908 - C7162 * C4905 - C7161 * C4909 + C154445 * C4914 +
              C7159 * C4262 - C7160 * C4256 - C7159 * C4263 + C154470 * C4268 +
              C7157 * C1408 - C7158 * C1401 - C7157 * C1409 + C154481 * C1416) *
                 C154226 +
             (C7555 + C7554 + C7553) * C70494) *
                C154021 +
            ((C30862 + C30861 + C30860) * C154226 + C30838 * C70494) * C74048) *
               C154082 * C340) *
              C154053)) /
            (p * q * std::sqrt(p + q));
    d2ee[35] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C154487 +
             C3210 * C154483 + C3211 * C154473 + C3214 * C154415) *
                C74048 +
            (C74051 + C74052 + C74053 + C74054) * C154021) *
               C154082 * C154463 -
           ((C74257 + C74258 + C74259 + C74260) * C154021 +
            (C4687 * C154415 + C3214 * C154473 + C3211 * C154483 +
             C3210 * C154487) *
                C74048) *
               C154082 * C154464 +
           ((C3211 * C154487 + C3214 * C154483 + C4687 * C154473 +
             C28341 * C154415) *
                C74048 +
            (C74261 + C74262 + C74263 + C74264) * C154021) *
               C154082 * C1685) *
              C154384 +
          (((C74260 + C74259 + C74258 + C74257) * C74048 +
            (C74661 + C74662 + C74663 + C74664) * C154021) *
               C154082 * C154464 -
           ((C74055 + C74056 + C74057 + C74058) * C154021 +
            (C74054 + C74053 + C74052 + C74051) * C74048) *
               C154082 * C154463 -
           (((C134 * C4671 - C135 * C4668 - C134 * C4672 + C154181 * C4677) *
                 C154415 +
             C3216 * C154473 + C3212 * C154483 + C445 * C154487) *
                C154021 +
            (C74264 + C74263 + C74262 + C74261) * C74048) *
               C154082 * C1685) *
              C154053)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C70494 +
             C3210 * C154226) *
                C154486 +
            (C70501 + C70502) * C154479 + C70511 * C154460 + C70512 * C154407) *
               C154082 * C154463 -
           (C71121 * C154407 + C71122 * C154460 + (C70713 + C70714) * C154479 +
            (C3211 * C154226 + C3210 * C70494) * C154486) *
               C154082 * C154464 +
           ((C3211 * C70494 + C3214 * C154226) * C154486 +
            (C70715 + C70716) * C154479 + (C70717 + C70718) * C154460 +
            (C70719 + C70720) * C154407) *
               C154082 * C1685) *
              C154384 +
          (((C70714 + C70713) * C154486 + (C70712 + C70711) * C154479 +
            (C70710 + C70709) * C154460 + (C71123 + C71124) * C154407) *
               C154082 * C154464 -
           (C70513 * C154407 + C70514 * C154460 + (C70504 + C70503) * C154479 +
            (C70502 + C70501) * C154486) *
               C154082 * C154463 -
           (((C134 * C1404 - C135 * C1399 - C134 * C1405 + C154181 * C1414) *
                 C154226 +
             C447 * C70494) *
                C154407 +
            (C70720 + C70719) * C154460 + (C70718 + C70717) * C154479 +
            (C70716 + C70715) * C154486) *
               C154082 * C1685) *
              C154053)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C7157 * C144 - C7158 * C136 - C7157 * C145 + C154481 * C160 +
              C7159 * C600 - C7160 * C584 - C7159 * C601 + C154470 * C620 +
              C7161 * C602 - C7162 * C585 - C7161 * C603 + C154445 * C621) *
                 C70494 +
             (C30851 + C30852 + C30853) * C154226) *
                C74048 +
            ((C7236 + C7237 + C7238) * C70494 + C77940 * C154226) * C154021) *
               C154082 * C154463 -
           ((C30838 * C154226 + C77941 * C70494) * C154021 +
            ((C30856 + C30855 + C30854) * C154226 +
             (C30853 + C30852 + C30851) * C70494) *
                C74048) *
               C154082 * C154464 +
           ((C30864 * C70494 + (C30859 + C30858 + C30857) * C154226) * C74048 +
            (C77942 * C70494 + (C30860 + C30861 + C30862) * C154226) *
                C154021) *
               C154082 * C1685) *
              C154384 +
          (((C77940 * C70494 + C77942 * C154226) * C74048 +
            (C78545 * C70494 + (C7553 + C7554 + C7555) * C154226) * C154021) *
               C154082 * C154464 -
           ((C8105 * C154226 + (C7241 + C7240 + C7239) * C70494) * C154021 +
            (C77941 * C154226 + (C7238 + C7237 + C7236) * C70494) * C74048) *
               C154082 * C154463 -
           (((C7161 * C4908 - C7162 * C4905 - C7161 * C4909 + C154445 * C4914 +
              C7159 * C4262 - C7160 * C4256 - C7159 * C4263 + C154470 * C4268 +
              C7157 * C1408 - C7158 * C1401 - C7157 * C1409 + C154481 * C1416) *
                 C154226 +
             (C7555 + C7554 + C7553) * C70494) *
                C154021 +
            ((C30862 + C30861 + C30860) * C154226 + C30838 * C70494) * C74048) *
               C154082 * C1685) *
              C154053)) /
            (p * q * std::sqrt(p + q));
    d2ee[36] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C154487 +
             C3210 * C154483 + C3211 * C154473 + C3214 * C154415) *
                C74048 +
            (C74051 + C74052 + C74053 + C74054) * C154021) *
               C154393 -
           ((C74459 + C74460 + C74461 + C74462) * C154021 +
            (C5676 * C154415 + C4299 * C154473 + C4300 * C154483 +
             (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                 C154487) *
                C74048) *
               C154146) *
              C154463 +
          (((C4300 * C154487 + C4299 * C154483 + C5676 * C154473 +
             C28899 * C154415) *
                C74048 +
            (C75121 + C75122 + C75123 + C75124) * C154021) *
               C154146 -
           ((C74257 + C74258 + C74259 + C74260) * C154021 +
            (C4687 * C154415 + C3214 * C154473 + C3211 * C154483 +
             C3210 * C154487) *
                C74048) *
               C154393) *
              C154464 +
          (((C3211 * C154487 + C3214 * C154483 + C4687 * C154473 +
             C28341 * C154415) *
                C74048 +
            (C74261 + C74262 + C74263 + C74264) * C154021) *
               C154393 -
           (((C134 * C28882 - C135 * C28879 - C134 * C28883 +
              C154181 * C28885) *
                 C154415 +
             C28900 * C154473 + C4301 * C154483 + C3501 * C154487) *
                C154021 +
            (C29672 * C154415 + C28899 * C154473 + C5676 * C154483 +
             C4299 * C154487) *
                C74048) *
               C154146) *
              C1685) *
         C154047) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C70494 +
             C3210 * C154226) *
                C154486 +
            (C70501 + C70502) * C154479 + C70511 * C154460 + C70512 * C154407) *
               C154393 -
           (C71319 * C154407 + C71320 * C154460 + (C70919 + C70920) * C154479 +
            (C4300 * C154226 +
             (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                 C70494) *
                C154486) *
               C154146) *
              C154463 +
          (((C4300 * C70494 + C4299 * C154226) * C154486 +
            (C71581 + C71582) * C154479 + (C71583 + C71584) * C154460 +
            (C71585 + C71586) * C154407) *
               C154146 -
           (C71121 * C154407 + C71122 * C154460 + (C70713 + C70714) * C154479 +
            (C3211 * C154226 + C3210 * C70494) * C154486) *
               C154393) *
              C154464 +
          (((C3211 * C70494 + C3214 * C154226) * C154486 +
            (C70715 + C70716) * C154479 + (C70717 + C70718) * C154460 +
            (C70719 + C70720) * C154407) *
               C154393 -
           (((C134 * C4264 - C135 * C4257 - C134 * C4265 + C154181 * C4269) *
                 C154226 +
             C3963 * C70494) *
                C154407 +
            (C4302 * C154226 + C3500 * C70494) * C154460 +
            (C4301 * C154226 + C3501 * C70494) * C154479 +
            (C5676 * C154226 + C4299 * C70494) * C154486) *
               C154146) *
              C1685) *
         C154047) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C7157 * C144 - C7158 * C136 - C7157 * C145 + C154481 * C160 +
              C7159 * C600 - C7160 * C584 - C7159 * C601 + C154470 * C620 +
              C7161 * C602 - C7162 * C585 - C7161 * C603 + C154445 * C621) *
                 C70494 +
             (C30851 + C30852 + C30853) * C154226) *
                C74048 +
            ((C7236 + C7237 + C7238) * C70494 + C77940 * C154226) * C154021) *
               C154393 -
           ((C79224 * C154226 + (C7865 + C7866 + C7867) * C70494) * C154021 +
            ((C31878 + C31879 + C31880) * C154226 +
             (C7161 * C2337 - C7162 * C2328 - C7161 * C2338 + C154445 * C2343 +
              C7159 * C602 - C7160 * C585 - C7159 * C603 + C154470 * C621 +
              C7157 * C600 - C7158 * C584 - C7157 * C601 + C154481 * C620) *
                 C70494) *
                C74048) *
               C154146) *
              C154463 +
          ((((C31880 + C31879 + C31878) * C70494 +
             (C31877 + C31876 + C31875) * C154226) *
                C74048 +
            (C79225 * C70494 + (C31881 + C31882 + C31883) * C154226) *
                C154021) *
               C154146 -
           ((C30838 * C154226 + C77941 * C70494) * C154021 +
            ((C30856 + C30855 + C30854) * C154226 +
             (C30853 + C30852 + C30851) * C70494) *
                C74048) *
               C154393) *
              C154464 +
          (((C30864 * C70494 + (C30859 + C30858 + C30857) * C154226) * C74048 +
            (C77942 * C70494 + (C30860 + C30861 + C30862) * C154226) *
                C154021) *
               C154393 -
           (((C7161 * C31817 - C7162 * C31816 - C7161 * C31818 +
              C154445 * C31819 + C7159 * C4910 - C7160 * C4906 - C7159 * C4911 +
              C154470 * C4915 + C7157 * C4260 - C7158 * C4255 - C7157 * C4261 +
              C154481 * C4267) *
                 C154226 +
             (C31883 + C31882 + C31881) * C70494) *
                C154021 +
            ((C33283 + C33282 + C33281) * C154226 + C33274 * C70494) * C74048) *
               C154146) *
              C1685) *
         C154047) /
            (p * q * std::sqrt(p + q));
    d2ee[37] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                     C70494 +
                 C3210 * C154226) *
                    C154486 +
                (C70501 + C70502) * C154479 + C70511 * C154460 +
                C70512 * C154407) *
                   C154082 * C1307 -
               (C71121 * C154407 + C71122 * C154460 +
                (C70713 + C70714) * C154479 +
                (C3211 * C154226 + C3210 * C70494) * C154486) *
                   C154082 * C154118) *
                  C1309 +
              (((C70714 + C70713) * C154486 + (C70712 + C70711) * C154479 +
                (C70710 + C70709) * C154460 + (C71123 + C71124) * C154407) *
                   C154082 * C154118 -
               (C70513 * C154407 + C70514 * C154460 +
                (C70504 + C70503) * C154479 + (C70502 + C70501) * C154486) *
                   C154082 * C1307) *
                  C1310 +
              ((C70511 * C154486 + C70512 * C154479 +
                (C70508 + C70507) * C154460 + (C70509 + C70510) * C154407) *
                   C154082 * C1307 -
               (((C134 * C377 - C135 * C354 - C134 * C378 + C154181 * C390) *
                     C154226 +
                 C830 * C70494) *
                    C154407 +
                (C71124 + C71123) * C154460 + C71121 * C154479 +
                C71122 * C154486) *
                   C154082 * C154118) *
                  C1311) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                    C70494 +
                C3210 * C154226) *
                   C154486 +
               (C70501 + C70502) * C154479 + C70511 * C154460 +
               C70512 * C154407) *
                  C154082 * C1394 -
              (C71121 * C154407 + C71122 * C154460 +
               (C70713 + C70714) * C154479 +
               (C3211 * C154226 + C3210 * C70494) * C154486) *
                  C154082 * C1395 +
              ((C3211 * C70494 + C3214 * C154226) * C154486 +
               (C70715 + C70716) * C154479 + (C70717 + C70718) * C154460 +
               (C70719 + C70720) * C154407) *
                  C154082 * C1396 -
              (((C134 * C3149 - C135 * C3142 - C134 * C3150 + C154181 * C3154) *
                    C154226 +
                C3217 * C70494) *
                   C154407 +
               (C3216 * C154226 + C3212 * C70494) * C154460 +
               (C3215 * C154226 + C3213 * C70494) * C154479 +
               (C4687 * C154226 + C3214 * C70494) * C154486) *
                  C154082 * C1397) *
             C154047) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C70494 +
             C3210 * C154226) *
                C154486 +
            (C70501 + C70502) * C154479 + C70511 * C154460 + C70512 * C154407) *
               C577 -
           (C71319 * C154407 + C71320 * C154460 + (C70919 + C70920) * C154479 +
            (C4300 * C154226 +
             (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                 C70494) *
                C154486) *
               C578 +
           (((C134 * C602 - C135 * C585 - C134 * C603 + C154181 * C621) *
                 C70494 +
             C4930 * C154226) *
                C154486 +
            (C70921 + C70922) * C154479 + (C70923 + C70924) * C154460 +
            (C70925 + C70926) * C154407) *
               C579) *
              C1307 +
          (((C4300 * C70494 + C4299 * C154226) * C154486 +
            (C71581 + C71582) * C154479 + (C71583 + C71584) * C154460 +
            (C71585 + C71586) * C154407) *
               C578 -
           (C71121 * C154407 + C71122 * C154460 + (C70713 + C70714) * C154479 +
            (C3211 * C154226 + C3210 * C70494) * C154486) *
               C577 -
           (((C134 * C3451 - C135 * C3444 - C134 * C3452 + C154181 * C3456) *
                 C154226 +
             C11901 * C70494) *
                C154407 +
            (C3505 * C154226 + C3504 * C70494) * C154460 +
            (C3503 * C154226 + C3502 * C70494) * C154479 +
            (C4931 * C154226 + C4930 * C70494) * C154486) *
               C579) *
              C154118) *
         C154047) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C154487 +
             C3210 * C154483 + C3211 * C154473 + C3214 * C154415) *
                C74048 +
            (C74051 + C74052 + C74053 + C74054) * C154021) *
               C154082 * C1307 -
           ((C74257 + C74258 + C74259 + C74260) * C154021 +
            (C4687 * C154415 + C3214 * C154473 + C3211 * C154483 +
             C3210 * C154487) *
                C74048) *
               C154082 * C154118) *
              C1309 +
          (((C74260 + C74259 + C74258 + C74257) * C74048 +
            (C74661 + C74662 + C74663 + C74664) * C154021) *
               C154082 * C154118 -
           ((C74055 + C74056 + C74057 + C74058) * C154021 +
            (C74054 + C74053 + C74052 + C74051) * C74048) *
               C154082 * C1307) *
              C1310 +
          (((C74058 + C74057 + C74056 + C74055) * C74048 +
            (C74059 + C74060 + C74061 + C74062) * C154021) *
               C154082 * C1307 -
           (((C134 * C3149 - C135 * C3142 - C134 * C3150 + C154181 * C3154) *
                 C154415 +
             C3217 * C154473 + C446 * C154483 + C441 * C154487) *
                C154021 +
            (C74664 + C74663 + C74662 + C74661) * C74048) *
               C154082 * C154118) *
              C1311)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                C154487 +
            C3210 * C154483 + C3211 * C154473 + C3214 * C154415) *
               C74048 +
           (C74051 + C74052 + C74053 + C74054) * C154021) *
              C154082 * C1394 -
          ((C74257 + C74258 + C74259 + C74260) * C154021 +
           (C4687 * C154415 + C3214 * C154473 + C3211 * C154483 +
            C3210 * C154487) *
               C74048) *
              C154082 * C1395 +
          ((C3211 * C154487 + C3214 * C154483 + C4687 * C154473 +
            C28341 * C154415) *
               C74048 +
           (C74261 + C74262 + C74263 + C74264) * C154021) *
              C154082 * C1396 -
          (((C134 * C28324 - C135 * C28321 - C134 * C28325 + C154181 * C28327) *
                C154415 +
            C28342 * C154473 + C3215 * C154483 + C3213 * C154487) *
               C154021 +
           (C29115 * C154415 + C28341 * C154473 + C4687 * C154483 +
            C3214 * C154487) *
               C74048) *
              C154082 * C1397) *
         C154047) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C154487 +
             C3210 * C154483 + C3211 * C154473 + C3214 * C154415) *
                C74048 +
            (C74051 + C74052 + C74053 + C74054) * C154021) *
               C577 -
           ((C74459 + C74460 + C74461 + C74462) * C154021 +
            (C5676 * C154415 + C4299 * C154473 + C4300 * C154483 +
             (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                 C154487) *
                C74048) *
               C578 +
           (((C134 * C602 - C135 * C585 - C134 * C603 + C154181 * C621) *
                 C154487 +
             C4930 * C154483 + C4931 * C154473 + C29254 * C154415) *
                C74048 +
            (C74463 + C74464 + C74465 + C74466) * C154021) *
               C579) *
              C1307 +
          (((C4300 * C154487 + C4299 * C154483 + C5676 * C154473 +
             C28899 * C154415) *
                C74048 +
            (C75121 + C75122 + C75123 + C75124) * C154021) *
               C578 -
           ((C74257 + C74258 + C74259 + C74260) * C154021 +
            (C4687 * C154415 + C3214 * C154473 + C3211 * C154483 +
             C3210 * C154487) *
                C74048) *
               C577 -
           (((C134 * C28468 - C135 * C28465 - C134 * C28469 +
              C154181 * C28471) *
                 C154415 +
             C35157 * C154473 + C3503 * C154483 + C3502 * C154487) *
                C154021 +
            (C29255 * C154415 + C29254 * C154473 + C4931 * C154483 +
             C4930 * C154487) *
                C74048) *
               C579) *
              C154118) *
         C154047) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C7157 * C144 - C7158 * C136 - C7157 * C145 + C154481 * C160 +
              C7159 * C600 - C7160 * C584 - C7159 * C601 + C154470 * C620 +
              C7161 * C602 - C7162 * C585 - C7161 * C603 + C154445 * C621) *
                 C70494 +
             (C30851 + C30852 + C30853) * C154226) *
                C74048 +
            ((C7236 + C7237 + C7238) * C70494 + C77940 * C154226) * C154021) *
               C154082 * C1307 -
           ((C30838 * C154226 + C77941 * C70494) * C154021 +
            ((C30856 + C30855 + C30854) * C154226 +
             (C30853 + C30852 + C30851) * C70494) *
                C74048) *
               C154082 * C154118) *
              C1309 +
          (((C77940 * C70494 + C77942 * C154226) * C74048 +
            (C78545 * C70494 + (C7553 + C7554 + C7555) * C154226) * C154021) *
               C154082 * C154118 -
           ((C8105 * C154226 + (C7241 + C7240 + C7239) * C70494) * C154021 +
            (C77941 * C154226 + (C7238 + C7237 + C7236) * C70494) * C74048) *
               C154082 * C1307) *
              C1310 +
          (((C7250 * C70494 + C78545 * C154226) * C74048 +
            ((C7244 + C7243 + C7242) * C70494 +
             (C8113 + C8114 + C8115) * C154226) *
                C154021) *
               C154082 * C1307 -
           (((C7161 * C3451 - C7162 * C3444 - C7161 * C3452 + C154445 * C3456 +
              C7159 * C1979 - C7160 * C1973 - C7159 * C1980 + C154470 * C1988 +
              C7157 * C371 - C7158 * C351 - C7157 * C372 + C154481 * C387) *
                 C154226 +
             (C8115 + C8114 + C8113) * C70494) *
                C154021 +
            ((C7555 + C7554 + C7553) * C154226 + C8105 * C70494) * C74048) *
               C154082 * C154118) *
              C1311)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C7157 * C144 - C7158 * C136 - C7157 * C145 + C154481 * C160 +
             C7159 * C600 - C7160 * C584 - C7159 * C601 + C154470 * C620 +
             C7161 * C602 - C7162 * C585 - C7161 * C603 + C154445 * C621) *
                C70494 +
            (C30851 + C30852 + C30853) * C154226) *
               C74048 +
           ((C7236 + C7237 + C7238) * C70494 + C77940 * C154226) * C154021) *
              C154082 * C1394 -
          ((C30838 * C154226 + C77941 * C70494) * C154021 +
           ((C30856 + C30855 + C30854) * C154226 +
            (C30853 + C30852 + C30851) * C70494) *
               C74048) *
              C154082 * C1395 +
          ((C30864 * C70494 + (C30859 + C30858 + C30857) * C154226) * C74048 +
           (C77942 * C70494 + (C30860 + C30861 + C30862) * C154226) * C154021) *
              C154082 * C1396 -
          (((C7161 * C28468 - C7162 * C28465 - C7161 * C28469 +
             C154445 * C28471 + C7159 * C5662 - C7160 * C5658 - C7159 * C5663 +
             C154470 * C5667 + C7157 * C3145 - C7158 * C3140 - C7157 * C3146 +
             C154481 * C3152) *
                C154226 +
            (C30862 + C30861 + C30860) * C70494) *
               C154021 +
           ((C32270 + C32269 + C32268) * C154226 + C32261 * C70494) * C74048) *
              C154082 * C1397) *
         C154047) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C7157 * C144 - C7158 * C136 - C7157 * C145 + C154481 * C160 +
              C7159 * C600 - C7160 * C584 - C7159 * C601 + C154470 * C620 +
              C7161 * C602 - C7162 * C585 - C7161 * C603 + C154445 * C621) *
                 C70494 +
             (C30851 + C30852 + C30853) * C154226) *
                C74048 +
            ((C7236 + C7237 + C7238) * C70494 + C77940 * C154226) * C154021) *
               C577 -
           ((C79224 * C154226 + (C7865 + C7866 + C7867) * C70494) * C154021 +
            ((C31878 + C31879 + C31880) * C154226 +
             (C7161 * C2337 - C7162 * C2328 - C7161 * C2338 + C154445 * C2343 +
              C7159 * C602 - C7160 * C585 - C7159 * C603 + C154470 * C621 +
              C7157 * C600 - C7158 * C584 - C7157 * C601 + C154481 * C620) *
                 C70494) *
                C74048) *
               C578 +
           (((C7157 * C602 - C7158 * C585 - C7157 * C603 + C154481 * C621 +
              C7159 * C2337 - C7160 * C2328 - C7159 * C2338 + C154470 * C2343 +
              C7161 * C7777 - C7162 * C7773 - C7161 * C7778 + C154445 * C7785) *
                 C70494 +
             (C32529 + C32530 + C32531) * C154226) *
                C74048 +
            ((C7868 + C7869 + C7870) * C70494 +
             (C78251 + C78252 + C78253) * C154226) *
                C154021) *
               C579) *
              C1307 +
          ((((C31880 + C31879 + C31878) * C70494 +
             (C31877 + C31876 + C31875) * C154226) *
                C74048 +
            (C79225 * C70494 + (C31881 + C31882 + C31883) * C154226) *
                C154021) *
               C578 -
           ((C30838 * C154226 + C77941 * C70494) * C154021 +
            ((C30856 + C30855 + C30854) * C154226 +
             (C30853 + C30852 + C30851) * C70494) *
                C74048) *
               C577 -
           (((C7161 * C31086 - C7162 * C31083 - C7161 * C31087 +
              C154445 * C31089 + C7159 * C6268 - C7160 * C6260 - C7159 * C6269 +
              C154470 * C6278 + C7157 * C3447 - C7158 * C3442 - C7157 * C3448 +
              C154481 * C3454) *
                 C154226 +
             (C78253 + C78252 + C78251) * C70494) *
                C154021 +
            ((C32534 + C32533 + C32532) * C154226 +
             (C32531 + C32530 + C32529) * C70494) *
                C74048) *
               C579) *
              C154118) *
         C154047) /
            (p * q * std::sqrt(p + q));
    d2ee[38] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                  C154487 +
              C3210 * C154483 + C3211 * C154473 + C3214 * C154415) *
                 C74048 +
             (C74051 + C74052 + C74053 + C74054) * C154021) *
                C154393 -
            ((C74459 + C74460 + C74461 + C74462) * C154021 +
             (C5676 * C154415 + C4299 * C154473 + C4300 * C154483 +
              (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                  C154487) *
                 C74048) *
                C154146) *
               C1307 +
           (((C4300 * C154487 + C4299 * C154483 + C5676 * C154473 +
              C28899 * C154415) *
                 C74048 +
             (C75121 + C75122 + C75123 + C75124) * C154021) *
                C154146 -
            ((C74257 + C74258 + C74259 + C74260) * C154021 +
             (C4687 * C154415 + C3214 * C154473 + C3211 * C154483 +
              C3210 * C154487) *
                 C74048) *
                C154393) *
               C154118) *
              C154384 +
          ((((C74462 + C74461 + C74460 + C74459) * C74048 +
             (C74859 + C74860 + C74861 + C74862) * C154021) *
                C154146 -
            ((C74055 + C74056 + C74057 + C74058) * C154021 +
             (C74054 + C74053 + C74052 + C74051) * C74048) *
                C154393) *
               C1307 +
           (((C74260 + C74259 + C74258 + C74257) * C74048 +
             (C74661 + C74662 + C74663 + C74664) * C154021) *
                C154393 -
            (((C134 * C5660 - C135 * C5657 - C134 * C5661 + C154181 * C5666) *
                  C154415 +
              C4302 * C154473 + C3500 * C154483 + C1179 * C154487) *
                 C154021 +
             (C75124 + C75123 + C75122 + C75121) * C74048) *
                C154146) *
               C154118) *
              C154053)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                  C70494 +
              C3210 * C154226) *
                 C154486 +
             (C70501 + C70502) * C154479 + C70511 * C154460 +
             C70512 * C154407) *
                C154393 -
            (C71319 * C154407 + C71320 * C154460 + (C70919 + C70920) * C154479 +
             (C4300 * C154226 +
              (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                  C70494) *
                 C154486) *
                C154146) *
               C1307 +
           (((C4300 * C70494 + C4299 * C154226) * C154486 +
             (C71581 + C71582) * C154479 + (C71583 + C71584) * C154460 +
             (C71585 + C71586) * C154407) *
                C154146 -
            (C71121 * C154407 + C71122 * C154460 + (C70713 + C70714) * C154479 +
             (C3211 * C154226 + C3210 * C70494) * C154486) *
                C154393) *
               C154118) *
              C154384 +
          ((((C70920 + C70919) * C154486 + (C70918 + C70917) * C154479 +
             (C70916 + C70915) * C154460 + (C71321 + C71322) * C154407) *
                C154146 -
            (C70513 * C154407 + C70514 * C154460 + (C70504 + C70503) * C154479 +
             (C70502 + C70501) * C154486) *
                C154393) *
               C1307 +
           (((C70714 + C70713) * C154486 + (C70712 + C70711) * C154479 +
             (C70710 + C70709) * C154460 + (C71123 + C71124) * C154407) *
                C154393 -
            (((C134 * C1977 - C135 * C1972 - C134 * C1978 + C154181 * C1987) *
                  C154226 +
              C1181 * C70494) *
                 C154407 +
             (C71586 + C71585) * C154460 + (C71584 + C71583) * C154479 +
             (C71582 + C71581) * C154486) *
                C154146) *
               C154118) *
              C154053)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C7157 * C144 - C7158 * C136 - C7157 * C145 + C154481 * C160 +
               C7159 * C600 - C7160 * C584 - C7159 * C601 + C154470 * C620 +
               C7161 * C602 - C7162 * C585 - C7161 * C603 + C154445 * C621) *
                  C70494 +
              (C30851 + C30852 + C30853) * C154226) *
                 C74048 +
             ((C7236 + C7237 + C7238) * C70494 + C77940 * C154226) * C154021) *
                C154393 -
            ((C79224 * C154226 + (C7865 + C7866 + C7867) * C70494) * C154021 +
             ((C31878 + C31879 + C31880) * C154226 +
              (C7161 * C2337 - C7162 * C2328 - C7161 * C2338 + C154445 * C2343 +
               C7159 * C602 - C7160 * C585 - C7159 * C603 + C154470 * C621 +
               C7157 * C600 - C7158 * C584 - C7157 * C601 + C154481 * C620) *
                  C70494) *
                 C74048) *
                C154146) *
               C1307 +
           ((((C31880 + C31879 + C31878) * C70494 +
              (C31877 + C31876 + C31875) * C154226) *
                 C74048 +
             (C79225 * C70494 + (C31881 + C31882 + C31883) * C154226) *
                 C154021) *
                C154146 -
            ((C30838 * C154226 + C77941 * C70494) * C154021 +
             ((C30856 + C30855 + C30854) * C154226 +
              (C30853 + C30852 + C30851) * C70494) *
                 C74048) *
                C154393) *
               C154118) *
              C154384 +
          (((((C7867 + C7866 + C7865) * C70494 + C79225 * C154226) * C74048 +
             ((C7864 + C7863 + C7862) * C70494 +
              (C8691 + C8692 + C8693) * C154226) *
                 C154021) *
                C154146 -
            ((C8105 * C154226 + (C7241 + C7240 + C7239) * C70494) * C154021 +
             (C77941 * C154226 + (C7238 + C7237 + C7236) * C70494) * C74048) *
                C154393) *
               C1307 +
           (((C77940 * C70494 + C77942 * C154226) * C74048 +
             (C78545 * C70494 + (C7553 + C7554 + C7555) * C154226) * C154021) *
                C154393 -
            (((C7161 * C6264 - C7162 * C6258 - C7161 * C6265 + C154445 * C6276 +
               C7159 * C3449 - C7160 * C3443 - C7159 * C3450 + C154470 * C3455 +
               C7157 * C1981 - C7158 * C1974 - C7157 * C1982 +
               C154481 * C1989) *
                  C154226 +
              (C8693 + C8692 + C8691) * C70494) *
                 C154021 +
             ((C31883 + C31882 + C31881) * C154226 + C79224 * C70494) *
                 C74048) *
                C154146) *
               C154118) *
              C154053)) /
            (p * q * std::sqrt(p + q));
    d2ee[39] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                C70494 +
            C3210 * C154226) *
               C154486 +
           (C70501 + C70502) * C154479 + C70511 * C154460 + C70512 * C154407) *
              C154082 * C1394 -
          (C71121 * C154407 + C71122 * C154460 + (C70713 + C70714) * C154479 +
           (C3211 * C154226 + C3210 * C70494) * C154486) *
              C154082 * C1395 +
          ((C3211 * C70494 + C3214 * C154226) * C154486 +
           (C70715 + C70716) * C154479 + (C70717 + C70718) * C154460 +
           (C70719 + C70720) * C154407) *
              C154082 * C1396 -
          (((C134 * C3149 - C135 * C3142 - C134 * C3150 + C154181 * C3154) *
                C154226 +
            C3217 * C70494) *
               C154407 +
           (C3216 * C154226 + C3212 * C70494) * C154460 +
           (C3215 * C154226 + C3213 * C70494) * C154479 +
           (C4687 * C154226 + C3214 * C70494) * C154486) *
              C154082 * C1397) *
         C154047) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C70494 +
             C3210 * C154226) *
                C154486 +
            (C70501 + C70502) * C154479 + C70511 * C154460 + C70512 * C154407) *
               C154082 * C1307 -
           (C71121 * C154407 + C71122 * C154460 + (C70713 + C70714) * C154479 +
            (C3211 * C154226 + C3210 * C70494) * C154486) *
               C154082 * C154118) *
              C1309 +
          (((C70714 + C70713) * C154486 + (C70712 + C70711) * C154479 +
            (C70710 + C70709) * C154460 + (C71123 + C71124) * C154407) *
               C154082 * C154118 -
           (C70513 * C154407 + C70514 * C154460 + (C70504 + C70503) * C154479 +
            (C70502 + C70501) * C154486) *
               C154082 * C1307) *
              C1310 +
          ((C70511 * C154486 + C70512 * C154479 + (C70508 + C70507) * C154460 +
            (C70509 + C70510) * C154407) *
               C154082 * C1307 -
           (((C134 * C377 - C135 * C354 - C134 * C378 + C154181 * C390) *
                 C154226 +
             C830 * C70494) *
                C154407 +
            (C71124 + C71123) * C154460 + C71121 * C154479 + C71122 * C154486) *
               C154082 * C154118) *
              C1311)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C154487 +
             C3210 * C154483 + C3211 * C154473 + C3214 * C154415) *
                C74048 +
            (C74051 + C74052 + C74053 + C74054) * C154021) *
               C154082 * C1307 -
           ((C74257 + C74258 + C74259 + C74260) * C154021 +
            (C4687 * C154415 + C3214 * C154473 + C3211 * C154483 +
             C3210 * C154487) *
                C74048) *
               C154082 * C154118) *
              C1309 +
          (((C74260 + C74259 + C74258 + C74257) * C74048 +
            (C74661 + C74662 + C74663 + C74664) * C154021) *
               C154082 * C154118 -
           ((C74055 + C74056 + C74057 + C74058) * C154021 +
            (C74054 + C74053 + C74052 + C74051) * C74048) *
               C154082 * C1307) *
              C1310 +
          (((C74058 + C74057 + C74056 + C74055) * C74048 +
            (C74059 + C74060 + C74061 + C74062) * C154021) *
               C154082 * C1307 -
           (((C134 * C3149 - C135 * C3142 - C134 * C3150 + C154181 * C3154) *
                 C154415 +
             C3217 * C154473 + C446 * C154483 + C441 * C154487) *
                C154021 +
            (C74664 + C74663 + C74662 + C74661) * C74048) *
               C154082 * C154118) *
              C1311)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                C154487 +
            C3210 * C154483 + C3211 * C154473 + C3214 * C154415) *
               C74048 +
           (C74051 + C74052 + C74053 + C74054) * C154021) *
              C154082 * C1394 -
          ((C74257 + C74258 + C74259 + C74260) * C154021 +
           (C4687 * C154415 + C3214 * C154473 + C3211 * C154483 +
            C3210 * C154487) *
               C74048) *
              C154082 * C1395 +
          ((C3211 * C154487 + C3214 * C154483 + C4687 * C154473 +
            C28341 * C154415) *
               C74048 +
           (C74261 + C74262 + C74263 + C74264) * C154021) *
              C154082 * C1396 -
          (((C134 * C28324 - C135 * C28321 - C134 * C28325 + C154181 * C28327) *
                C154415 +
            C28342 * C154473 + C3215 * C154483 + C3213 * C154487) *
               C154021 +
           (C29115 * C154415 + C28341 * C154473 + C4687 * C154483 +
            C3214 * C154487) *
               C74048) *
              C154082 * C1397) *
         C154047) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C7157 * C144 - C7158 * C136 - C7157 * C145 + C154481 * C160 +
              C7159 * C600 - C7160 * C584 - C7159 * C601 + C154470 * C620 +
              C7161 * C602 - C7162 * C585 - C7161 * C603 + C154445 * C621) *
                 C70494 +
             (C30851 + C30852 + C30853) * C154226) *
                C74048 +
            ((C7236 + C7237 + C7238) * C70494 + C77940 * C154226) * C154021) *
               C154082 * C1307 -
           ((C30838 * C154226 + C77941 * C70494) * C154021 +
            ((C30856 + C30855 + C30854) * C154226 +
             (C30853 + C30852 + C30851) * C70494) *
                C74048) *
               C154082 * C154118) *
              C1309 +
          (((C77940 * C70494 + C77942 * C154226) * C74048 +
            (C78545 * C70494 + (C7553 + C7554 + C7555) * C154226) * C154021) *
               C154082 * C154118 -
           ((C8105 * C154226 + (C7241 + C7240 + C7239) * C70494) * C154021 +
            (C77941 * C154226 + (C7238 + C7237 + C7236) * C70494) * C74048) *
               C154082 * C1307) *
              C1310 +
          (((C7250 * C70494 + C78545 * C154226) * C74048 +
            ((C7244 + C7243 + C7242) * C70494 +
             (C8113 + C8114 + C8115) * C154226) *
                C154021) *
               C154082 * C1307 -
           (((C7161 * C3451 - C7162 * C3444 - C7161 * C3452 + C154445 * C3456 +
              C7159 * C1979 - C7160 * C1973 - C7159 * C1980 + C154470 * C1988 +
              C7157 * C371 - C7158 * C351 - C7157 * C372 + C154481 * C387) *
                 C154226 +
             (C8115 + C8114 + C8113) * C70494) *
                C154021 +
            ((C7555 + C7554 + C7553) * C154226 + C8105 * C70494) * C74048) *
               C154082 * C154118) *
              C1311)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C7157 * C144 - C7158 * C136 - C7157 * C145 + C154481 * C160 +
             C7159 * C600 - C7160 * C584 - C7159 * C601 + C154470 * C620 +
             C7161 * C602 - C7162 * C585 - C7161 * C603 + C154445 * C621) *
                C70494 +
            (C30851 + C30852 + C30853) * C154226) *
               C74048 +
           ((C7236 + C7237 + C7238) * C70494 + C77940 * C154226) * C154021) *
              C154082 * C1394 -
          ((C30838 * C154226 + C77941 * C70494) * C154021 +
           ((C30856 + C30855 + C30854) * C154226 +
            (C30853 + C30852 + C30851) * C70494) *
               C74048) *
              C154082 * C1395 +
          ((C30864 * C70494 + (C30859 + C30858 + C30857) * C154226) * C74048 +
           (C77942 * C70494 + (C30860 + C30861 + C30862) * C154226) * C154021) *
              C154082 * C1396 -
          (((C7161 * C28468 - C7162 * C28465 - C7161 * C28469 +
             C154445 * C28471 + C7159 * C5662 - C7160 * C5658 - C7159 * C5663 +
             C154470 * C5667 + C7157 * C3145 - C7158 * C3140 - C7157 * C3146 +
             C154481 * C3152) *
                C154226 +
            (C30862 + C30861 + C30860) * C70494) *
               C154021 +
           ((C32270 + C32269 + C32268) * C154226 + C32261 * C70494) * C74048) *
              C154082 * C1397) *
         C154047) /
            (p * q * std::sqrt(p + q));
    d2ee[40] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                  C154487 +
              C3210 * C154483 + C3211 * C154473 + C3214 * C154415) *
                 C74048 +
             (C74051 + C74052 + C74053 + C74054) * C154021) *
                C2114 -
            ((C74459 + C74460 + C74461 + C74462) * C154021 +
             (C5676 * C154415 + C4299 * C154473 + C4300 * C154483 +
              (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                  C154487) *
                 C74048) *
                C154146) *
               C154392 +
           (((C4300 * C154487 + C4299 * C154483 + C5676 * C154473 +
              C28899 * C154415) *
                 C74048 +
             (C75121 + C75122 + C75123 + C75124) * C154021) *
                C154146 -
            ((C74257 + C74258 + C74259 + C74260) * C154021 +
             (C4687 * C154415 + C3214 * C154473 + C3211 * C154483 +
              C3210 * C154487) *
                 C74048) *
                C2114) *
               C154118) *
              C154384 +
          ((((C74462 + C74461 + C74460 + C74459) * C74048 +
             (C74859 + C74860 + C74861 + C74862) * C154021) *
                C154146 -
            ((C74055 + C74056 + C74057 + C74058) * C154021 +
             (C74054 + C74053 + C74052 + C74051) * C74048) *
                C2114) *
               C154392 +
           (((C74260 + C74259 + C74258 + C74257) * C74048 +
             (C74661 + C74662 + C74663 + C74664) * C154021) *
                C2114 -
            (((C134 * C5660 - C135 * C5657 - C134 * C5661 + C154181 * C5666) *
                  C154415 +
              C4302 * C154473 + C3500 * C154483 + C1179 * C154487) *
                 C154021 +
             (C75124 + C75123 + C75122 + C75121) * C74048) *
                C154146) *
               C154118) *
              C154053)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                  C70494 +
              C3210 * C154226) *
                 C154486 +
             (C70501 + C70502) * C154479 + C70511 * C154460 +
             C70512 * C154407) *
                C2114 -
            (C71319 * C154407 + C71320 * C154460 + (C70919 + C70920) * C154479 +
             (C4300 * C154226 +
              (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                  C70494) *
                 C154486) *
                C154146) *
               C154392 +
           (((C4300 * C70494 + C4299 * C154226) * C154486 +
             (C71581 + C71582) * C154479 + (C71583 + C71584) * C154460 +
             (C71585 + C71586) * C154407) *
                C154146 -
            (C71121 * C154407 + C71122 * C154460 + (C70713 + C70714) * C154479 +
             (C3211 * C154226 + C3210 * C70494) * C154486) *
                C2114) *
               C154118) *
              C154384 +
          ((((C70920 + C70919) * C154486 + (C70918 + C70917) * C154479 +
             (C70916 + C70915) * C154460 + (C71321 + C71322) * C154407) *
                C154146 -
            (C70513 * C154407 + C70514 * C154460 + (C70504 + C70503) * C154479 +
             (C70502 + C70501) * C154486) *
                C2114) *
               C154392 +
           (((C70714 + C70713) * C154486 + (C70712 + C70711) * C154479 +
             (C70710 + C70709) * C154460 + (C71123 + C71124) * C154407) *
                C2114 -
            (((C134 * C1977 - C135 * C1972 - C134 * C1978 + C154181 * C1987) *
                  C154226 +
              C1181 * C70494) *
                 C154407 +
             (C71586 + C71585) * C154460 + (C71584 + C71583) * C154479 +
             (C71582 + C71581) * C154486) *
                C154146) *
               C154118) *
              C154053)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C7157 * C144 - C7158 * C136 - C7157 * C145 + C154481 * C160 +
               C7159 * C600 - C7160 * C584 - C7159 * C601 + C154470 * C620 +
               C7161 * C602 - C7162 * C585 - C7161 * C603 + C154445 * C621) *
                  C70494 +
              (C30851 + C30852 + C30853) * C154226) *
                 C74048 +
             ((C7236 + C7237 + C7238) * C70494 + C77940 * C154226) * C154021) *
                C2114 -
            ((C79224 * C154226 + (C7865 + C7866 + C7867) * C70494) * C154021 +
             ((C31878 + C31879 + C31880) * C154226 +
              (C7161 * C2337 - C7162 * C2328 - C7161 * C2338 + C154445 * C2343 +
               C7159 * C602 - C7160 * C585 - C7159 * C603 + C154470 * C621 +
               C7157 * C600 - C7158 * C584 - C7157 * C601 + C154481 * C620) *
                  C70494) *
                 C74048) *
                C154146) *
               C154392 +
           ((((C31880 + C31879 + C31878) * C70494 +
              (C31877 + C31876 + C31875) * C154226) *
                 C74048 +
             (C79225 * C70494 + (C31881 + C31882 + C31883) * C154226) *
                 C154021) *
                C154146 -
            ((C30838 * C154226 + C77941 * C70494) * C154021 +
             ((C30856 + C30855 + C30854) * C154226 +
              (C30853 + C30852 + C30851) * C70494) *
                 C74048) *
                C2114) *
               C154118) *
              C154384 +
          (((((C7867 + C7866 + C7865) * C70494 + C79225 * C154226) * C74048 +
             ((C7864 + C7863 + C7862) * C70494 +
              (C8691 + C8692 + C8693) * C154226) *
                 C154021) *
                C154146 -
            ((C8105 * C154226 + (C7241 + C7240 + C7239) * C70494) * C154021 +
             (C77941 * C154226 + (C7238 + C7237 + C7236) * C70494) * C74048) *
                C2114) *
               C154392 +
           (((C77940 * C70494 + C77942 * C154226) * C74048 +
             (C78545 * C70494 + (C7553 + C7554 + C7555) * C154226) * C154021) *
                C2114 -
            (((C7161 * C6264 - C7162 * C6258 - C7161 * C6265 + C154445 * C6276 +
               C7159 * C3449 - C7160 * C3443 - C7159 * C3450 + C154470 * C3455 +
               C7157 * C1981 - C7158 * C1974 - C7157 * C1982 +
               C154481 * C1989) *
                  C154226 +
              (C8693 + C8692 + C8691) * C70494) *
                 C154021 +
             ((C31883 + C31882 + C31881) * C154226 + C79224 * C70494) *
                 C74048) *
                C154146) *
               C154118) *
              C154053)) /
            (p * q * std::sqrt(p + q));
    d2ee[41] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C154487 +
             C3210 * C154483 + C3211 * C154473 + C3214 * C154415) *
                C74048 +
            (C74051 + C74052 + C74053 + C74054) * C154021) *
               C154465 -
           ((C74459 + C74460 + C74461 + C74462) * C154021 +
            (C5676 * C154415 + C4299 * C154473 + C4300 * C154483 +
             (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                 C154487) *
                C74048) *
               C154466 +
           (((C134 * C602 - C135 * C585 - C134 * C603 + C154181 * C621) *
                 C154487 +
             C4930 * C154483 + C4931 * C154473 + C29254 * C154415) *
                C74048 +
            (C74463 + C74464 + C74465 + C74466) * C154021) *
               C2630) *
              C154392 +
          (((C4300 * C154487 + C4299 * C154483 + C5676 * C154473 +
             C28899 * C154415) *
                C74048 +
            (C75121 + C75122 + C75123 + C75124) * C154021) *
               C154466 -
           ((C74257 + C74258 + C74259 + C74260) * C154021 +
            (C4687 * C154415 + C3214 * C154473 + C3211 * C154483 +
             C3210 * C154487) *
                C74048) *
               C154465 -
           (((C134 * C28468 - C135 * C28465 - C134 * C28469 +
              C154181 * C28471) *
                 C154415 +
             C35157 * C154473 + C3503 * C154483 + C3502 * C154487) *
                C154021 +
            (C29255 * C154415 + C29254 * C154473 + C4931 * C154483 +
             C4930 * C154487) *
                C74048) *
               C2630) *
              C154118) *
         C154047) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C70494 +
             C3210 * C154226) *
                C154486 +
            (C70501 + C70502) * C154479 + C70511 * C154460 + C70512 * C154407) *
               C154465 -
           (C71319 * C154407 + C71320 * C154460 + (C70919 + C70920) * C154479 +
            (C4300 * C154226 +
             (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                 C70494) *
                C154486) *
               C154466 +
           (((C134 * C602 - C135 * C585 - C134 * C603 + C154181 * C621) *
                 C70494 +
             C4930 * C154226) *
                C154486 +
            (C70921 + C70922) * C154479 + (C70923 + C70924) * C154460 +
            (C70925 + C70926) * C154407) *
               C2630) *
              C154392 +
          (((C4300 * C70494 + C4299 * C154226) * C154486 +
            (C71581 + C71582) * C154479 + (C71583 + C71584) * C154460 +
            (C71585 + C71586) * C154407) *
               C154466 -
           (C71121 * C154407 + C71122 * C154460 + (C70713 + C70714) * C154479 +
            (C3211 * C154226 + C3210 * C70494) * C154486) *
               C154465 -
           (((C134 * C3451 - C135 * C3444 - C134 * C3452 + C154181 * C3456) *
                 C154226 +
             C11901 * C70494) *
                C154407 +
            (C3505 * C154226 + C3504 * C70494) * C154460 +
            (C3503 * C154226 + C3502 * C70494) * C154479 +
            (C4931 * C154226 + C4930 * C70494) * C154486) *
               C2630) *
              C154118) *
         C154047) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C7157 * C144 - C7158 * C136 - C7157 * C145 + C154481 * C160 +
              C7159 * C600 - C7160 * C584 - C7159 * C601 + C154470 * C620 +
              C7161 * C602 - C7162 * C585 - C7161 * C603 + C154445 * C621) *
                 C70494 +
             (C30851 + C30852 + C30853) * C154226) *
                C74048 +
            ((C7236 + C7237 + C7238) * C70494 + C77940 * C154226) * C154021) *
               C154465 -
           ((C79224 * C154226 + (C7865 + C7866 + C7867) * C70494) * C154021 +
            ((C31878 + C31879 + C31880) * C154226 +
             (C7161 * C2337 - C7162 * C2328 - C7161 * C2338 + C154445 * C2343 +
              C7159 * C602 - C7160 * C585 - C7159 * C603 + C154470 * C621 +
              C7157 * C600 - C7158 * C584 - C7157 * C601 + C154481 * C620) *
                 C70494) *
                C74048) *
               C154466 +
           (((C7157 * C602 - C7158 * C585 - C7157 * C603 + C154481 * C621 +
              C7159 * C2337 - C7160 * C2328 - C7159 * C2338 + C154470 * C2343 +
              C7161 * C7777 - C7162 * C7773 - C7161 * C7778 + C154445 * C7785) *
                 C70494 +
             (C32529 + C32530 + C32531) * C154226) *
                C74048 +
            ((C7868 + C7869 + C7870) * C70494 +
             (C78251 + C78252 + C78253) * C154226) *
                C154021) *
               C2630) *
              C154392 +
          ((((C31880 + C31879 + C31878) * C70494 +
             (C31877 + C31876 + C31875) * C154226) *
                C74048 +
            (C79225 * C70494 + (C31881 + C31882 + C31883) * C154226) *
                C154021) *
               C154466 -
           ((C30838 * C154226 + C77941 * C70494) * C154021 +
            ((C30856 + C30855 + C30854) * C154226 +
             (C30853 + C30852 + C30851) * C70494) *
                C74048) *
               C154465 -
           (((C7161 * C31086 - C7162 * C31083 - C7161 * C31087 +
              C154445 * C31089 + C7159 * C6268 - C7160 * C6260 - C7159 * C6269 +
              C154470 * C6278 + C7157 * C3447 - C7158 * C3442 - C7157 * C3448 +
              C154481 * C3454) *
                 C154226 +
             (C78253 + C78252 + C78251) * C70494) *
                C154021 +
            ((C32534 + C32533 + C32532) * C154226 +
             (C32531 + C32530 + C32529) * C70494) *
                C74048) *
               C2630) *
              C154118) *
         C154047) /
            (p * q * std::sqrt(p + q));
    d2ee[42] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                     C70494 +
                 C3210 * C154226) *
                    C154486 +
                (C70501 + C70502) * C154479 + C70511 * C154460 +
                C70512 * C154407) *
                   C2114 -
               (C71319 * C154407 + C71320 * C154460 +
                (C70919 + C70920) * C154479 +
                (C4300 * C154226 +
                 (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                     C70494) *
                    C154486) *
                   C154146) *
                  C154066 * C1309 +
              (((C70920 + C70919) * C154486 + (C70918 + C70917) * C154479 +
                (C70916 + C70915) * C154460 + (C71321 + C71322) * C154407) *
                   C154146 -
               (C70513 * C154407 + C70514 * C154460 +
                (C70504 + C70503) * C154479 + (C70502 + C70501) * C154486) *
                   C2114) *
                  C154066 * C1310 +
              ((C70511 * C154486 + C70512 * C154479 +
                (C70508 + C70507) * C154460 + (C70509 + C70510) * C154407) *
                   C2114 -
               (((C134 * C1145 - C135 * C1134 - C134 * C1146 +
                  C154181 * C1152) *
                     C154226 +
                 C966 * C70494) *
                    C154407 +
                (C71322 + C71321) * C154460 + C71319 * C154479 +
                C71320 * C154486) *
                   C154146) *
                  C154066 * C1311) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                     C70494 +
                 C3210 * C154226) *
                    C154486 +
                (C70501 + C70502) * C154479 + C70511 * C154460 +
                C70512 * C154407) *
                   C2114 -
               (C71319 * C154407 + C71320 * C154460 +
                (C70919 + C70920) * C154479 +
                (C4300 * C154226 +
                 (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                     C70494) *
                    C154486) *
                   C154146) *
                  C338 +
              (((C4300 * C70494 + C4299 * C154226) * C154486 +
                (C71581 + C71582) * C154479 + (C71583 + C71584) * C154460 +
                (C71585 + C71586) * C154407) *
                   C154146 -
               (C71121 * C154407 + C71122 * C154460 +
                (C70713 + C70714) * C154479 +
                (C3211 * C154226 + C3210 * C70494) * C154486) *
                   C2114) *
                  C339 +
              (((C3211 * C70494 + C3214 * C154226) * C154486 +
                (C70715 + C70716) * C154479 + (C70717 + C70718) * C154460 +
                (C70719 + C70720) * C154407) *
                   C2114 -
               (((C134 * C4264 - C135 * C4257 - C134 * C4265 +
                  C154181 * C4269) *
                     C154226 +
                 C3963 * C70494) *
                    C154407 +
                (C4302 * C154226 + C3500 * C70494) * C154460 +
                (C4301 * C154226 + C3501 * C70494) * C154479 +
                (C5676 * C154226 + C4299 * C70494) * C154486) *
                   C154146) *
                  C340) *
             C154047) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                C70494 +
            C3210 * C154226) *
               C154486 +
           (C70501 + C70502) * C154479 + C70511 * C154460 + C70512 * C154407) *
              C2320 -
          (C71319 * C154407 + C71320 * C154460 + (C70919 + C70920) * C154479 +
           (C4300 * C154226 +
            (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                C70494) *
               C154486) *
              C2321 +
          (((C134 * C602 - C135 * C585 - C134 * C603 + C154181 * C621) *
                C70494 +
            C4930 * C154226) *
               C154486 +
           (C70921 + C70922) * C154479 + (C70923 + C70924) * C154460 +
           (C70925 + C70926) * C154407) *
              C2322 -
          (((C134 * C8648 - C135 * C8647 - C134 * C8649 + C154181 * C8650) *
                C154226 +
            (C134 * C2331 - C135 * C2325 - C134 * C2332 + C154181 * C2340) *
                C70494) *
               C154407 +
           ((C134 * C6266 - C135 * C6259 - C134 * C6267 + C154181 * C6277) *
                C154226 +
            (C134 * C2333 - C135 * C2326 - C134 * C2334 + C154181 * C2341) *
                C70494) *
               C154460 +
           ((C134 * C6270 - C135 * C6261 - C134 * C6271 + C154181 * C6279) *
                C154226 +
            (C134 * C2335 - C135 * C2327 - C134 * C2336 + C154181 * C2342) *
                C70494) *
               C154479 +
           ((C134 * C6274 - C135 * C6263 - C134 * C6275 + C154181 * C6281) *
                C154226 +
            (C134 * C2337 - C135 * C2328 - C134 * C2338 + C154181 * C2343) *
                C70494) *
               C154486) *
              C2323) *
         C154066 * C154047) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C154487 +
             C3210 * C154483 + C3211 * C154473 + C3214 * C154415) *
                C74048 +
            (C74051 + C74052 + C74053 + C74054) * C154021) *
               C2114 -
           ((C74459 + C74460 + C74461 + C74462) * C154021 +
            (C5676 * C154415 + C4299 * C154473 + C4300 * C154483 +
             (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                 C154487) *
                C74048) *
               C154146) *
              C154066 * C1309 +
          (((C74462 + C74461 + C74460 + C74459) * C74048 +
            (C74859 + C74860 + C74861 + C74862) * C154021) *
               C154146 -
           ((C74055 + C74056 + C74057 + C74058) * C154021 +
            (C74054 + C74053 + C74052 + C74051) * C74048) *
               C2114) *
              C154066 * C1310 +
          (((C74058 + C74057 + C74056 + C74055) * C74048 +
            (C74059 + C74060 + C74061 + C74062) * C154021) *
               C2114 -
           (((C134 * C4264 - C135 * C4257 - C134 * C4265 + C154181 * C4269) *
                 C154415 +
             C3963 * C154473 + C1180 * C154483 + C678 * C154487) *
                C154021 +
            (C74862 + C74861 + C74860 + C74859) * C74048) *
               C154146) *
              C154066 * C1311)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C154487 +
             C3210 * C154483 + C3211 * C154473 + C3214 * C154415) *
                C74048 +
            (C74051 + C74052 + C74053 + C74054) * C154021) *
               C2114 -
           ((C74459 + C74460 + C74461 + C74462) * C154021 +
            (C5676 * C154415 + C4299 * C154473 + C4300 * C154483 +
             (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                 C154487) *
                C74048) *
               C154146) *
              C338 +
          (((C4300 * C154487 + C4299 * C154483 + C5676 * C154473 +
             C28899 * C154415) *
                C74048 +
            (C75121 + C75122 + C75123 + C75124) * C154021) *
               C154146 -
           ((C74257 + C74258 + C74259 + C74260) * C154021 +
            (C4687 * C154415 + C3214 * C154473 + C3211 * C154483 +
             C3210 * C154487) *
                C74048) *
               C2114) *
              C339 +
          (((C3211 * C154487 + C3214 * C154483 + C4687 * C154473 +
             C28341 * C154415) *
                C74048 +
            (C74261 + C74262 + C74263 + C74264) * C154021) *
               C2114 -
           (((C134 * C28882 - C135 * C28879 - C134 * C28883 +
              C154181 * C28885) *
                 C154415 +
             C28900 * C154473 + C4301 * C154483 + C3501 * C154487) *
                C154021 +
            (C29672 * C154415 + C28899 * C154473 + C5676 * C154483 +
             C4299 * C154487) *
                C74048) *
               C154146) *
              C340) *
         C154047) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                C154487 +
            C3210 * C154483 + C3211 * C154473 + C3214 * C154415) *
               C74048 +
           (C74051 + C74052 + C74053 + C74054) * C154021) *
              C2320 -
          ((C74459 + C74460 + C74461 + C74462) * C154021 +
           (C5676 * C154415 + C4299 * C154473 + C4300 * C154483 +
            (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                C154487) *
               C74048) *
              C2321 +
          (((C134 * C602 - C135 * C585 - C134 * C603 + C154181 * C621) *
                C154487 +
            C4930 * C154483 + C4931 * C154473 + C29254 * C154415) *
               C74048 +
           (C74463 + C74464 + C74465 + C74466) * C154021) *
              C2322 -
          (((C134 * C31817 - C135 * C31816 - C134 * C31818 + C154181 * C31819) *
                C154415 +
            (C134 * C6268 - C135 * C6260 - C134 * C6269 + C154181 * C6278) *
                C154473 +
            (C134 * C6270 - C135 * C6261 - C134 * C6271 + C154181 * C6279) *
                C154483 +
            (C134 * C2335 - C135 * C2327 - C134 * C2336 + C154181 * C2342) *
                C154487) *
               C154021 +
           ((C134 * C30002 - C135 * C29999 - C134 * C30003 + C154181 * C30005) *
                C154415 +
            (C134 * C6272 - C135 * C6262 - C134 * C6273 + C154181 * C6280) *
                C154473 +
            (C134 * C6274 - C135 * C6263 - C134 * C6275 + C154181 * C6281) *
                C154483 +
            (C134 * C2337 - C135 * C2328 - C134 * C2338 + C154181 * C2343) *
                C154487) *
               C74048) *
              C2323) *
         C154066 * C154047) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C7157 * C144 - C7158 * C136 - C7157 * C145 + C154481 * C160 +
              C7159 * C600 - C7160 * C584 - C7159 * C601 + C154470 * C620 +
              C7161 * C602 - C7162 * C585 - C7161 * C603 + C154445 * C621) *
                 C70494 +
             (C30851 + C30852 + C30853) * C154226) *
                C74048 +
            ((C7236 + C7237 + C7238) * C70494 + C77940 * C154226) * C154021) *
               C2114 -
           ((C79224 * C154226 + (C7865 + C7866 + C7867) * C70494) * C154021 +
            ((C31878 + C31879 + C31880) * C154226 +
             (C7161 * C2337 - C7162 * C2328 - C7161 * C2338 + C154445 * C2343 +
              C7159 * C602 - C7160 * C585 - C7159 * C603 + C154470 * C621 +
              C7157 * C600 - C7158 * C584 - C7157 * C601 + C154481 * C620) *
                 C70494) *
                C74048) *
               C154146) *
              C154066 * C1309 +
          ((((C7867 + C7866 + C7865) * C70494 + C79225 * C154226) * C74048 +
            ((C7864 + C7863 + C7862) * C70494 +
             (C8691 + C8692 + C8693) * C154226) *
                C154021) *
               C154146 -
           ((C8105 * C154226 + (C7241 + C7240 + C7239) * C70494) * C154021 +
            (C77941 * C154226 + (C7238 + C7237 + C7236) * C70494) * C74048) *
               C2114) *
              C154066 * C1310 +
          (((C7250 * C70494 + C78545 * C154226) * C74048 +
            ((C7244 + C7243 + C7242) * C70494 +
             (C8113 + C8114 + C8115) * C154226) *
                C154021) *
               C2114 -
           (((C7161 * C8648 - C7162 * C8647 - C7161 * C8649 + C154445 * C8650 +
              C7159 * C1548 - C7160 * C1542 - C7159 * C1549 + C154470 * C1557 +
              C7157 * C1141 - C7158 * C1132 - C7157 * C1142 + C154481 * C1150) *
                 C154226 +
             (C8357 + C8356 + C8355) * C70494) *
                C154021 +
            ((C8693 + C8692 + C8691) * C154226 + C8347 * C70494) * C74048) *
               C154146) *
              C154066 * C1311)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C7157 * C144 - C7158 * C136 - C7157 * C145 + C154481 * C160 +
              C7159 * C600 - C7160 * C584 - C7159 * C601 + C154470 * C620 +
              C7161 * C602 - C7162 * C585 - C7161 * C603 + C154445 * C621) *
                 C70494 +
             (C30851 + C30852 + C30853) * C154226) *
                C74048 +
            ((C7236 + C7237 + C7238) * C70494 + C77940 * C154226) * C154021) *
               C2114 -
           ((C79224 * C154226 + (C7865 + C7866 + C7867) * C70494) * C154021 +
            ((C31878 + C31879 + C31880) * C154226 +
             (C7161 * C2337 - C7162 * C2328 - C7161 * C2338 + C154445 * C2343 +
              C7159 * C602 - C7160 * C585 - C7159 * C603 + C154470 * C621 +
              C7157 * C600 - C7158 * C584 - C7157 * C601 + C154481 * C620) *
                 C70494) *
                C74048) *
               C154146) *
              C338 +
          ((((C31880 + C31879 + C31878) * C70494 +
             (C31877 + C31876 + C31875) * C154226) *
                C74048 +
            (C79225 * C70494 + (C31881 + C31882 + C31883) * C154226) *
                C154021) *
               C154146 -
           ((C30838 * C154226 + C77941 * C70494) * C154021 +
            ((C30856 + C30855 + C30854) * C154226 +
             (C30853 + C30852 + C30851) * C70494) *
                C74048) *
               C2114) *
              C339 +
          (((C30864 * C70494 + (C30859 + C30858 + C30857) * C154226) * C74048 +
            (C77942 * C70494 + (C30860 + C30861 + C30862) * C154226) *
                C154021) *
               C2114 -
           (((C7161 * C31817 - C7162 * C31816 - C7161 * C31818 +
              C154445 * C31819 + C7159 * C4910 - C7160 * C4906 - C7159 * C4911 +
              C154470 * C4915 + C7157 * C4260 - C7158 * C4255 - C7157 * C4261 +
              C154481 * C4267) *
                 C154226 +
             (C31883 + C31882 + C31881) * C70494) *
                C154021 +
            ((C33283 + C33282 + C33281) * C154226 + C33274 * C70494) * C74048) *
               C154146) *
              C340) *
         C154047) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C7157 * C144 - C7158 * C136 - C7157 * C145 + C154481 * C160 +
             C7159 * C600 - C7160 * C584 - C7159 * C601 + C154470 * C620 +
             C7161 * C602 - C7162 * C585 - C7161 * C603 + C154445 * C621) *
                C70494 +
            (C30851 + C30852 + C30853) * C154226) *
               C74048 +
           ((C7236 + C7237 + C7238) * C70494 + C77940 * C154226) * C154021) *
              C2320 -
          ((C79224 * C154226 + (C7865 + C7866 + C7867) * C70494) * C154021 +
           ((C31878 + C31879 + C31880) * C154226 +
            (C7161 * C2337 - C7162 * C2328 - C7161 * C2338 + C154445 * C2343 +
             C7159 * C602 - C7160 * C585 - C7159 * C603 + C154470 * C621 +
             C7157 * C600 - C7158 * C584 - C7157 * C601 + C154481 * C620) *
                C70494) *
               C74048) *
              C2321 +
          (((C7157 * C602 - C7158 * C585 - C7157 * C603 + C154481 * C621 +
             C7159 * C2337 - C7160 * C2328 - C7159 * C2338 + C154470 * C2343 +
             C7161 * C7777 - C7162 * C7773 - C7161 * C7778 + C154445 * C7785) *
                C70494 +
            (C32529 + C32530 + C32531) * C154226) *
               C74048 +
           ((C7868 + C7869 + C7870) * C70494 +
            (C78251 + C78252 + C78253) * C154226) *
               C154021) *
              C2322 -
          (((C7161 * C56192 - C7162 * C56191 - C7161 * C56193 +
             C154445 * C56194 + C7159 * C9280 - C7160 * C9276 - C7159 * C9281 +
             C154470 * C9285 + C7157 * C6270 - C7158 * C6261 - C7157 * C6271 +
             C154481 * C6279) *
                C154226 +
            (C7161 * C10600 - C7162 * C10596 - C7161 * C10601 +
             C154445 * C10605 + C7159 * C7779 - C7160 * C7774 - C7159 * C7780 +
             C154470 * C7786 + C7157 * C2335 - C7158 * C2327 - C7157 * C2336 +
             C154481 * C2342) *
                C70494) *
               C154021 +
           ((C7161 * C33869 - C7162 * C33866 - C7161 * C33870 +
             C154445 * C33872 + C7159 * C9282 - C7160 * C9277 - C7159 * C9283 +
             C154470 * C9286 + C7157 * C6274 - C7158 * C6263 - C7157 * C6275 +
             C154481 * C6281) *
                C154226 +
            (C7161 * C10602 - C7162 * C10597 - C7161 * C10603 +
             C154445 * C10606 + C7159 * C7777 - C7160 * C7773 - C7159 * C7778 +
             C154470 * C7785 + C7157 * C2337 - C7158 * C2328 - C7157 * C2338 +
             C154481 * C2343) *
                C70494) *
               C74048) *
              C2323) *
         C154066 * C154047) /
            (p * q * std::sqrt(p + q));
    d2ee[43] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C154487 +
             C3210 * C154483 + C3211 * C154473 + C3214 * C154415) *
                C74048 +
            (C74051 + C74052 + C74053 + C74054) * C154021) *
               C154465 -
           ((C74459 + C74460 + C74461 + C74462) * C154021 +
            (C5676 * C154415 + C4299 * C154473 + C4300 * C154483 +
             (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                 C154487) *
                C74048) *
               C154466 +
           (((C134 * C602 - C135 * C585 - C134 * C603 + C154181 * C621) *
                 C154487 +
             C4930 * C154483 + C4931 * C154473 + C29254 * C154415) *
                C74048 +
            (C74463 + C74464 + C74465 + C74466) * C154021) *
               C2630) *
              C154066 * C154384 +
          (((C74462 + C74461 + C74460 + C74459) * C74048 +
            (C74859 + C74860 + C74861 + C74862) * C154021) *
               C154466 -
           ((C74055 + C74056 + C74057 + C74058) * C154021 +
            (C74054 + C74053 + C74052 + C74051) * C74048) *
               C154465 -
           (((C134 * C4908 - C135 * C4905 - C134 * C4909 + C154181 * C4914) *
                 C154415 +
             C3505 * C154473 + C3504 * C154483 + C682 * C154487) *
                C154021 +
            (C74466 + C74465 + C74464 + C74463) * C74048) *
               C2630) *
              C154066 * C154053)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C70494 +
             C3210 * C154226) *
                C154486 +
            (C70501 + C70502) * C154479 + C70511 * C154460 + C70512 * C154407) *
               C154465 -
           (C71319 * C154407 + C71320 * C154460 + (C70919 + C70920) * C154479 +
            (C4300 * C154226 +
             (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                 C70494) *
                C154486) *
               C154466 +
           (((C134 * C602 - C135 * C585 - C134 * C603 + C154181 * C621) *
                 C70494 +
             C4930 * C154226) *
                C154486 +
            (C70921 + C70922) * C154479 + (C70923 + C70924) * C154460 +
            (C70925 + C70926) * C154407) *
               C2630) *
              C154066 * C154384 +
          (((C70920 + C70919) * C154486 + (C70918 + C70917) * C154479 +
            (C70916 + C70915) * C154460 + (C71321 + C71322) * C154407) *
               C154466 -
           (C70513 * C154407 + C70514 * C154460 + (C70504 + C70503) * C154479 +
            (C70502 + C70501) * C154486) *
               C154465 -
           (((C134 * C1546 - C135 * C1541 - C134 * C1547 + C154181 * C1556) *
                 C154226 +
             C684 * C70494) *
                C154407 +
            (C70926 + C70925) * C154460 + (C70924 + C70923) * C154479 +
            (C70922 + C70921) * C154486) *
               C2630) *
              C154066 * C154053)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C7157 * C144 - C7158 * C136 - C7157 * C145 + C154481 * C160 +
              C7159 * C600 - C7160 * C584 - C7159 * C601 + C154470 * C620 +
              C7161 * C602 - C7162 * C585 - C7161 * C603 + C154445 * C621) *
                 C70494 +
             (C30851 + C30852 + C30853) * C154226) *
                C74048 +
            ((C7236 + C7237 + C7238) * C70494 + C77940 * C154226) * C154021) *
               C154465 -
           ((C79224 * C154226 + (C7865 + C7866 + C7867) * C70494) * C154021 +
            ((C31878 + C31879 + C31880) * C154226 +
             (C7161 * C2337 - C7162 * C2328 - C7161 * C2338 + C154445 * C2343 +
              C7159 * C602 - C7160 * C585 - C7159 * C603 + C154470 * C621 +
              C7157 * C600 - C7158 * C584 - C7157 * C601 + C154481 * C620) *
                 C70494) *
                C74048) *
               C154466 +
           (((C7157 * C602 - C7158 * C585 - C7157 * C603 + C154481 * C621 +
              C7159 * C2337 - C7160 * C2328 - C7159 * C2338 + C154470 * C2343 +
              C7161 * C7777 - C7162 * C7773 - C7161 * C7778 + C154445 * C7785) *
                 C70494 +
             (C32529 + C32530 + C32531) * C154226) *
                C74048 +
            ((C7868 + C7869 + C7870) * C70494 +
             (C78251 + C78252 + C78253) * C154226) *
                C154021) *
               C2630) *
              C154066 * C154384 +
          ((((C7867 + C7866 + C7865) * C70494 + C79225 * C154226) * C74048 +
            ((C7864 + C7863 + C7862) * C70494 +
             (C8691 + C8692 + C8693) * C154226) *
                C154021) *
               C154466 -
           ((C8105 * C154226 + (C7241 + C7240 + C7239) * C70494) * C154021 +
            (C77941 * C154226 + (C7238 + C7237 + C7236) * C70494) * C74048) *
               C154465 -
           (((C7161 * C9278 - C7162 * C9275 - C7161 * C9279 + C154445 * C9284 +
              C7159 * C6266 - C7160 * C6259 - C7159 * C6267 + C154470 * C6277 +
              C7157 * C1550 - C7158 * C1543 - C7157 * C1551 + C154481 * C1558) *
                 C154226 +
             (C7873 + C7872 + C7871) * C70494) *
                C154021 +
            ((C78253 + C78252 + C78251) * C154226 +
             (C7870 + C7869 + C7868) * C70494) *
                C74048) *
               C2630) *
              C154066 * C154053)) /
            (p * q * std::sqrt(p + q));
    d2ee[44] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C70494 +
             C3210 * C154226) *
                C154486 +
            (C70501 + C70502) * C154479 + C70511 * C154460 + C70512 * C154407) *
               C2114 -
           (C71319 * C154407 + C71320 * C154460 + (C70919 + C70920) * C154479 +
            (C4300 * C154226 +
             (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                 C70494) *
                C154486) *
               C154146) *
              C338 +
          (((C4300 * C70494 + C4299 * C154226) * C154486 +
            (C71581 + C71582) * C154479 + (C71583 + C71584) * C154460 +
            (C71585 + C71586) * C154407) *
               C154146 -
           (C71121 * C154407 + C71122 * C154460 + (C70713 + C70714) * C154479 +
            (C3211 * C154226 + C3210 * C70494) * C154486) *
               C2114) *
              C339 +
          (((C3211 * C70494 + C3214 * C154226) * C154486 +
            (C70715 + C70716) * C154479 + (C70717 + C70718) * C154460 +
            (C70719 + C70720) * C154407) *
               C2114 -
           (((C134 * C4264 - C135 * C4257 - C134 * C4265 + C154181 * C4269) *
                 C154226 +
             C3963 * C70494) *
                C154407 +
            (C4302 * C154226 + C3500 * C70494) * C154460 +
            (C4301 * C154226 + C3501 * C70494) * C154479 +
            (C5676 * C154226 + C4299 * C70494) * C154486) *
               C154146) *
              C340) *
         C154047) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C70494 +
             C3210 * C154226) *
                C154486 +
            (C70501 + C70502) * C154479 + C70511 * C154460 + C70512 * C154407) *
               C2114 -
           (C71319 * C154407 + C71320 * C154460 + (C70919 + C70920) * C154479 +
            (C4300 * C154226 +
             (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                 C70494) *
                C154486) *
               C154146) *
              C154066 * C1309 +
          (((C70920 + C70919) * C154486 + (C70918 + C70917) * C154479 +
            (C70916 + C70915) * C154460 + (C71321 + C71322) * C154407) *
               C154146 -
           (C70513 * C154407 + C70514 * C154460 + (C70504 + C70503) * C154479 +
            (C70502 + C70501) * C154486) *
               C2114) *
              C154066 * C1310 +
          ((C70511 * C154486 + C70512 * C154479 + (C70508 + C70507) * C154460 +
            (C70509 + C70510) * C154407) *
               C2114 -
           (((C134 * C1145 - C135 * C1134 - C134 * C1146 + C154181 * C1152) *
                 C154226 +
             C966 * C70494) *
                C154407 +
            (C71322 + C71321) * C154460 + C71319 * C154479 + C71320 * C154486) *
               C154146) *
              C154066 * C1311)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C154487 +
             C3210 * C154483 + C3211 * C154473 + C3214 * C154415) *
                C74048 +
            (C74051 + C74052 + C74053 + C74054) * C154021) *
               C2114 -
           ((C74459 + C74460 + C74461 + C74462) * C154021 +
            (C5676 * C154415 + C4299 * C154473 + C4300 * C154483 +
             (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                 C154487) *
                C74048) *
               C154146) *
              C154066 * C1309 +
          (((C74462 + C74461 + C74460 + C74459) * C74048 +
            (C74859 + C74860 + C74861 + C74862) * C154021) *
               C154146 -
           ((C74055 + C74056 + C74057 + C74058) * C154021 +
            (C74054 + C74053 + C74052 + C74051) * C74048) *
               C2114) *
              C154066 * C1310 +
          (((C74058 + C74057 + C74056 + C74055) * C74048 +
            (C74059 + C74060 + C74061 + C74062) * C154021) *
               C2114 -
           (((C134 * C4264 - C135 * C4257 - C134 * C4265 + C154181 * C4269) *
                 C154415 +
             C3963 * C154473 + C1180 * C154483 + C678 * C154487) *
                C154021 +
            (C74862 + C74861 + C74860 + C74859) * C74048) *
               C154146) *
              C154066 * C1311)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C154487 +
             C3210 * C154483 + C3211 * C154473 + C3214 * C154415) *
                C74048 +
            (C74051 + C74052 + C74053 + C74054) * C154021) *
               C2114 -
           ((C74459 + C74460 + C74461 + C74462) * C154021 +
            (C5676 * C154415 + C4299 * C154473 + C4300 * C154483 +
             (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                 C154487) *
                C74048) *
               C154146) *
              C338 +
          (((C4300 * C154487 + C4299 * C154483 + C5676 * C154473 +
             C28899 * C154415) *
                C74048 +
            (C75121 + C75122 + C75123 + C75124) * C154021) *
               C154146 -
           ((C74257 + C74258 + C74259 + C74260) * C154021 +
            (C4687 * C154415 + C3214 * C154473 + C3211 * C154483 +
             C3210 * C154487) *
                C74048) *
               C2114) *
              C339 +
          (((C3211 * C154487 + C3214 * C154483 + C4687 * C154473 +
             C28341 * C154415) *
                C74048 +
            (C74261 + C74262 + C74263 + C74264) * C154021) *
               C2114 -
           (((C134 * C28882 - C135 * C28879 - C134 * C28883 +
              C154181 * C28885) *
                 C154415 +
             C28900 * C154473 + C4301 * C154483 + C3501 * C154487) *
                C154021 +
            (C29672 * C154415 + C28899 * C154473 + C5676 * C154483 +
             C4299 * C154487) *
                C74048) *
               C154146) *
              C340) *
         C154047) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C7157 * C144 - C7158 * C136 - C7157 * C145 + C154481 * C160 +
              C7159 * C600 - C7160 * C584 - C7159 * C601 + C154470 * C620 +
              C7161 * C602 - C7162 * C585 - C7161 * C603 + C154445 * C621) *
                 C70494 +
             (C30851 + C30852 + C30853) * C154226) *
                C74048 +
            ((C7236 + C7237 + C7238) * C70494 + C77940 * C154226) * C154021) *
               C2114 -
           ((C79224 * C154226 + (C7865 + C7866 + C7867) * C70494) * C154021 +
            ((C31878 + C31879 + C31880) * C154226 +
             (C7161 * C2337 - C7162 * C2328 - C7161 * C2338 + C154445 * C2343 +
              C7159 * C602 - C7160 * C585 - C7159 * C603 + C154470 * C621 +
              C7157 * C600 - C7158 * C584 - C7157 * C601 + C154481 * C620) *
                 C70494) *
                C74048) *
               C154146) *
              C154066 * C1309 +
          ((((C7867 + C7866 + C7865) * C70494 + C79225 * C154226) * C74048 +
            ((C7864 + C7863 + C7862) * C70494 +
             (C8691 + C8692 + C8693) * C154226) *
                C154021) *
               C154146 -
           ((C8105 * C154226 + (C7241 + C7240 + C7239) * C70494) * C154021 +
            (C77941 * C154226 + (C7238 + C7237 + C7236) * C70494) * C74048) *
               C2114) *
              C154066 * C1310 +
          (((C7250 * C70494 + C78545 * C154226) * C74048 +
            ((C7244 + C7243 + C7242) * C70494 +
             (C8113 + C8114 + C8115) * C154226) *
                C154021) *
               C2114 -
           (((C7161 * C8648 - C7162 * C8647 - C7161 * C8649 + C154445 * C8650 +
              C7159 * C1548 - C7160 * C1542 - C7159 * C1549 + C154470 * C1557 +
              C7157 * C1141 - C7158 * C1132 - C7157 * C1142 + C154481 * C1150) *
                 C154226 +
             (C8357 + C8356 + C8355) * C70494) *
                C154021 +
            ((C8693 + C8692 + C8691) * C154226 + C8347 * C70494) * C74048) *
               C154146) *
              C154066 * C1311)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C7157 * C144 - C7158 * C136 - C7157 * C145 + C154481 * C160 +
              C7159 * C600 - C7160 * C584 - C7159 * C601 + C154470 * C620 +
              C7161 * C602 - C7162 * C585 - C7161 * C603 + C154445 * C621) *
                 C70494 +
             (C30851 + C30852 + C30853) * C154226) *
                C74048 +
            ((C7236 + C7237 + C7238) * C70494 + C77940 * C154226) * C154021) *
               C2114 -
           ((C79224 * C154226 + (C7865 + C7866 + C7867) * C70494) * C154021 +
            ((C31878 + C31879 + C31880) * C154226 +
             (C7161 * C2337 - C7162 * C2328 - C7161 * C2338 + C154445 * C2343 +
              C7159 * C602 - C7160 * C585 - C7159 * C603 + C154470 * C621 +
              C7157 * C600 - C7158 * C584 - C7157 * C601 + C154481 * C620) *
                 C70494) *
                C74048) *
               C154146) *
              C338 +
          ((((C31880 + C31879 + C31878) * C70494 +
             (C31877 + C31876 + C31875) * C154226) *
                C74048 +
            (C79225 * C70494 + (C31881 + C31882 + C31883) * C154226) *
                C154021) *
               C154146 -
           ((C30838 * C154226 + C77941 * C70494) * C154021 +
            ((C30856 + C30855 + C30854) * C154226 +
             (C30853 + C30852 + C30851) * C70494) *
                C74048) *
               C2114) *
              C339 +
          (((C30864 * C70494 + (C30859 + C30858 + C30857) * C154226) * C74048 +
            (C77942 * C70494 + (C30860 + C30861 + C30862) * C154226) *
                C154021) *
               C2114 -
           (((C7161 * C31817 - C7162 * C31816 - C7161 * C31818 +
              C154445 * C31819 + C7159 * C4910 - C7160 * C4906 - C7159 * C4911 +
              C154470 * C4915 + C7157 * C4260 - C7158 * C4255 - C7157 * C4261 +
              C154481 * C4267) *
                 C154226 +
             (C31883 + C31882 + C31881) * C70494) *
                C154021 +
            ((C33283 + C33282 + C33281) * C154226 + C33274 * C70494) * C74048) *
               C154146) *
              C340) *
         C154047) /
            (p * q * std::sqrt(p + q));
    d2ee[45] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
              C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
                 C70494 +
             (C19258 + C19259) * C154226) *
                C154016 +
            ((C15087 + C15088) * C70494 + C19212 * C154226) * C154024 +
            C86890 * C82856) *
               C154082 * C154392 -
           (C87764 * C82856 + (C19214 * C154226 + C19215 * C70494) * C154024 +
            ((C19260 + C19261) * C154226 + (C19259 + C19258) * C70494) *
                C154016) *
               C154082 * C154118) *
              C154461 +
          (((C19212 * C70494 + C19224 * C154226) * C154016 +
            (C18908 * C70494 + C19233 * C154226) * C154024 +
            (C19876 * C70494 + (C15381 + C15382) * C154226) * C82856) *
               C154082 * C154118 -
           (C86891 * C82856 +
            (C15856 * C154226 + (C15090 + C15089) * C70494) * C154024 +
            (C19215 * C154226 + (C15088 + C15087) * C70494) * C154016) *
               C154082 * C154392) *
              C154462 +
          ((C86890 * C154016 + (C15098 * C70494 + C19876 * C154226) * C154024 +
            ((C15094 + C15093) * C70494 + (C15871 + C15872) * C154226) *
                C82856) *
               C154082 * C154392 -
           (((C15024 * C1977 - C15025 * C1972 - C15024 * C1978 +
              C154268 * C1987 + C15022 * C373 - C15023 * C352 - C15022 * C374 +
              C154408 * C388) *
                 C154226 +
             (C15872 + C15871) * C70494) *
                C82856 +
            ((C15382 + C15381) * C154226 + C15855 * C70494) * C154024 +
            C87764 * C154016) *
               C154082 * C154118) *
              C818)) /
        (p * q * std::sqrt(p + q));
    d2ee[46] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
               C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
                  C70494 +
              (C19258 + C19259) * C154226) *
                 C154016 +
             ((C15087 + C15088) * C70494 + C19212 * C154226) * C154024 +
             C86890 * C82856) *
                C154393 -
            (C88057 * C82856 +
             (C20558 * C154226 + (C15653 + C15654) * C70494) * C154024 +
             ((C20597 + C20598) * C154226 +
              (C15024 * C602 - C15025 * C585 - C15024 * C603 + C154268 * C621 +
               C15022 * C600 - C15023 * C584 - C15022 * C601 + C154408 * C620) *
                  C70494) *
                 C154016) *
                C154146) *
               C154392 +
           ((((C20598 + C20597) * C70494 + (C22383 + C22384) * C154226) *
                 C154016 +
             (C20567 * C70494 + C39917 * C154226) * C154024 +
             (C20576 * C70494 + (C20601 + C20602) * C154226) * C82856) *
                C154146 -
            (C87764 * C82856 + (C19214 * C154226 + C19215 * C70494) * C154024 +
             ((C19260 + C19261) * C154226 + (C19259 + C19258) * C70494) *
                 C154016) *
                C154393) *
               C154118) *
              C341 +
          (((((C15654 + C15653) * C70494 + C20567 * C154226) * C154016 +
             ((C15652 + C15651) * C70494 + C20576 * C154226) * C154024 +
             ((C15650 + C15649) * C70494 + (C16383 + C16384) * C154226) *
                 C82856) *
                C154146 -
            (C86891 * C82856 +
             (C15856 * C154226 + (C15090 + C15089) * C70494) * C154024 +
             (C19215 * C154226 + (C15088 + C15087) * C70494) * C154016) *
                C154393) *
               C154392 +
           (((C19212 * C70494 + C19224 * C154226) * C154016 +
             (C18908 * C70494 + C19233 * C154226) * C154024 +
             (C19876 * C70494 + (C15381 + C15382) * C154226) * C82856) *
                C154393 -
            (((C15024 * C3451 - C15025 * C3444 - C15024 * C3452 +
               C154268 * C3456 + C15022 * C1979 - C15023 * C1973 -
               C15022 * C1980 + C154408 * C1988) *
                  C154226 +
              (C16384 + C16383) * C70494) *
                 C82856 +
             ((C20602 + C20601) * C154226 + C20168 * C70494) * C154024 +
             (C39916 * C154226 + C20558 * C70494) * C154016) *
                C154146) *
               C154118) *
              C154053)) /
        (p * q * std::sqrt(p + q));
    d2ee[47] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
              C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
                 C70494 +
             (C19258 + C19259) * C154226) *
                C154016 +
            ((C15087 + C15088) * C70494 + C19212 * C154226) * C154024 +
            C86890 * C82856) *
               C154082 * C338 -
           ((C19213 * C154226 + C15856 * C70494) * C82856 +
            (C19214 * C154226 + C19215 * C70494) * C154024 +
            ((C19260 + C19261) * C154226 + (C19259 + C19258) * C70494) *
                C154016) *
               C154082 * C339 +
           ((C38629 * C70494 + C43780 * C154226) * C154016 +
            (C19224 * C70494 + C38631 * C154226) * C154024 +
            (C19233 * C70494 + (C19264 + C19265) * C154226) * C82856) *
               C154082 * C340) *
              C341 +
          (((C19212 * C70494 + C19224 * C154226) * C154016 +
            (C18908 * C70494 + C19233 * C154226) * C154024 +
            (C19876 * C70494 + (C15381 + C15382) * C154226) * C82856) *
               C154082 * C339 -
           (C86891 * C82856 +
            (C15856 * C154226 + (C15090 + C15089) * C70494) * C154024 +
            (C19215 * C154226 + (C15088 + C15087) * C70494) * C154016) *
               C154082 * C338 -
           (((C15024 * C4264 - C15025 * C4257 - C15024 * C4265 +
              C154268 * C4269 + C15022 * C1406 - C15023 * C1400 -
              C15022 * C1407 + C154408 * C1415) *
                 C154226 +
             (C15382 + C15381) * C70494) *
                C82856 +
            ((C19265 + C19264) * C154226 + C19213 * C70494) * C154024 +
            (C38630 * C154226 + C19214 * C70494) * C154016) *
               C154082 * C340) *
              C154053)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
             C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
                C70494 +
            (C19258 + C19259) * C154226) *
               C154016 +
           ((C15087 + C15088) * C70494 + C19212 * C154226) * C154024 +
           C86890 * C82856) *
              C154082 * C154066 * C130 -
          (C86891 * C82856 +
           (C15856 * C154226 + (C15090 + C15089) * C70494) * C154024 +
           (C19215 * C154226 + (C15088 + C15087) * C70494) * C154016) *
              C154082 * C154066 * C131 +
          (C86890 * C154016 + (C15098 * C70494 + C19876 * C154226) * C154024 +
           ((C15094 + C15093) * C70494 + (C15871 + C15872) * C154226) *
               C82856) *
              C154082 * C154066 * C132 -
          (((C15024 * C1145 - C15025 * C1134 - C15024 * C1146 +
             C154268 * C1152 + C15022 * C375 - C15023 * C353 - C15022 * C376 +
             C154408 * C389) *
                C154226 +
            (C15096 + C15095) * C70494) *
               C82856 +
           ((C15872 + C15871) * C154226 + C15099 * C70494) * C154024 +
           C86891 * C154016) *
              C154082 * C154066 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
              C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
                 C70494 +
             (C19258 + C19259) * C154226) *
                C154016 +
            ((C15087 + C15088) * C70494 + C19212 * C154226) * C154024 +
            C86890 * C82856) *
               C577 -
           ((C20168 * C154226 + C16068 * C70494) * C82856 +
            (C20558 * C154226 + (C15653 + C15654) * C70494) * C154024 +
            ((C20597 + C20598) * C154226 +
             (C15024 * C602 - C15025 * C585 - C15024 * C603 + C154268 * C621 +
              C15022 * C600 - C15023 * C584 - C15022 * C601 + C154408 * C620) *
                 C70494) *
                C154016) *
               C578 +
           (((C15022 * C602 - C15023 * C585 - C15022 * C603 + C154408 * C621 +
              C15024 * C2337 - C15025 * C2328 - C15024 * C2338 +
              C154268 * C2343) *
                 C70494 +
             (C21403 + C21404) * C154226) *
                C154016 +
            ((C15655 + C15656) * C70494 + (C19580 + C19581) * C154226) *
                C154024 +
            ((C15657 + C15658) * C70494 + (C19582 + C19583) * C154226) *
                C82856) *
               C579) *
              C154066 * C341 +
          ((((C15654 + C15653) * C70494 + C20567 * C154226) * C154016 +
            ((C15652 + C15651) * C70494 + C20576 * C154226) * C154024 +
            ((C15650 + C15649) * C70494 + (C16383 + C16384) * C154226) *
                C82856) *
               C578 -
           (C86891 * C82856 +
            (C15856 * C154226 + (C15090 + C15089) * C70494) * C154024 +
            (C19215 * C154226 + (C15088 + C15087) * C70494) * C154016) *
               C577 -
           (((C15024 * C8648 - C15025 * C8647 - C15024 * C8649 +
              C154268 * C8650 + C15022 * C1548 - C15023 * C1542 -
              C15022 * C1549 + C154408 * C1557) *
                 C154226 +
             (C15660 + C15659) * C70494) *
                C82856 +
            ((C19583 + C19582) * C154226 + (C15658 + C15657) * C70494) *
                C154024 +
            ((C19581 + C19580) * C154226 + (C15656 + C15655) * C70494) *
                C154016) *
               C579) *
              C154066 * C154053)) /
            (p * q * std::sqrt(p + q));
    d2ee[48] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
              C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
                 C70494 +
             (C19258 + C19259) * C154226) *
                C154016 +
            ((C15087 + C15088) * C70494 + C19212 * C154226) * C154024 +
            C86890 * C82856) *
               C154393 -
           (C88057 * C82856 +
            (C20558 * C154226 + (C15653 + C15654) * C70494) * C154024 +
            ((C20597 + C20598) * C154226 +
             (C15024 * C602 - C15025 * C585 - C15024 * C603 + C154268 * C621 +
              C15022 * C600 - C15023 * C584 - C15022 * C601 + C154408 * C620) *
                 C70494) *
                C154016) *
               C154146) *
              C154066 * C154461 +
          ((((C15654 + C15653) * C70494 + C20567 * C154226) * C154016 +
            ((C15652 + C15651) * C70494 + C20576 * C154226) * C154024 +
            ((C15650 + C15649) * C70494 + (C16383 + C16384) * C154226) *
                C82856) *
               C154146 -
           (C86891 * C82856 +
            (C15856 * C154226 + (C15090 + C15089) * C70494) * C154024 +
            (C19215 * C154226 + (C15088 + C15087) * C70494) * C154016) *
               C154393) *
              C154066 * C154462 +
          ((C86890 * C154016 + (C15098 * C70494 + C19876 * C154226) * C154024 +
            ((C15094 + C15093) * C70494 + (C15871 + C15872) * C154226) *
                C82856) *
               C154393 -
           (((C15024 * C1546 - C15025 * C1541 - C15024 * C1547 +
              C154268 * C1556 + C15022 * C1143 - C15023 * C1133 -
              C15022 * C1144 + C154408 * C1151) *
                 C154226 +
             (C16084 + C16083) * C70494) *
                C82856 +
            ((C16384 + C16383) * C154226 + C16067 * C70494) * C154024 +
            C88057 * C154016) *
               C154146) *
              C154066 * C818)) /
        (p * q * std::sqrt(p + q));
    d2ee[49] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
             C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
                C70494 +
            (C19258 + C19259) * C154226) *
               C154016 +
           ((C15087 + C15088) * C70494 + C19212 * C154226) * C154024 +
           C86890 * C82856) *
              C154082 * C154066 * C130 -
          (C86891 * C82856 +
           (C15856 * C154226 + (C15090 + C15089) * C70494) * C154024 +
           (C19215 * C154226 + (C15088 + C15087) * C70494) * C154016) *
              C154082 * C154066 * C131 +
          (C86890 * C154016 + (C15098 * C70494 + C19876 * C154226) * C154024 +
           ((C15094 + C15093) * C70494 + (C15871 + C15872) * C154226) *
               C82856) *
              C154082 * C154066 * C132 -
          (((C15024 * C1145 - C15025 * C1134 - C15024 * C1146 +
             C154268 * C1152 + C15022 * C375 - C15023 * C353 - C15022 * C376 +
             C154408 * C389) *
                C154226 +
            (C15096 + C15095) * C70494) *
               C82856 +
           ((C15872 + C15871) * C154226 + C15099 * C70494) * C154024 +
           C86891 * C154016) *
              C154082 * C154066 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
              C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
                 C70494 +
             (C19258 + C19259) * C154226) *
                C154016 +
            ((C15087 + C15088) * C70494 + C19212 * C154226) * C154024 +
            C86890 * C82856) *
               C154082 * C338 -
           ((C19213 * C154226 + C15856 * C70494) * C82856 +
            (C19214 * C154226 + C19215 * C70494) * C154024 +
            ((C19260 + C19261) * C154226 + (C19259 + C19258) * C70494) *
                C154016) *
               C154082 * C339 +
           ((C38629 * C70494 + C43780 * C154226) * C154016 +
            (C19224 * C70494 + C38631 * C154226) * C154024 +
            (C19233 * C70494 + (C19264 + C19265) * C154226) * C82856) *
               C154082 * C340) *
              C341 +
          (((C19212 * C70494 + C19224 * C154226) * C154016 +
            (C18908 * C70494 + C19233 * C154226) * C154024 +
            (C19876 * C70494 + (C15381 + C15382) * C154226) * C82856) *
               C154082 * C339 -
           (C86891 * C82856 +
            (C15856 * C154226 + (C15090 + C15089) * C70494) * C154024 +
            (C19215 * C154226 + (C15088 + C15087) * C70494) * C154016) *
               C154082 * C338 -
           (((C15024 * C4264 - C15025 * C4257 - C15024 * C4265 +
              C154268 * C4269 + C15022 * C1406 - C15023 * C1400 -
              C15022 * C1407 + C154408 * C1415) *
                 C154226 +
             (C15382 + C15381) * C70494) *
                C82856 +
            ((C19265 + C19264) * C154226 + C19213 * C70494) * C154024 +
            (C38630 * C154226 + C19214 * C70494) * C154016) *
               C154082 * C340) *
              C154053)) /
            (p * q * std::sqrt(p + q));
    d2ee[50] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
              C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
                 C70494 +
             (C19258 + C19259) * C154226) *
                C154016 +
            ((C15087 + C15088) * C70494 + C19212 * C154226) * C154024 +
            C86890 * C82856) *
               C154082 * C154463 -
           (C87764 * C82856 + (C19214 * C154226 + C19215 * C70494) * C154024 +
            ((C19260 + C19261) * C154226 + (C19259 + C19258) * C70494) *
                C154016) *
               C154082 * C154464 +
           ((C38629 * C70494 + C43780 * C154226) * C154016 +
            (C19224 * C70494 + C38631 * C154226) * C154024 +
            (C19233 * C70494 + (C19264 + C19265) * C154226) * C82856) *
               C154082 * C1685) *
              C154384 +
          (((C19212 * C70494 + C19224 * C154226) * C154016 +
            (C18908 * C70494 + C19233 * C154226) * C154024 +
            (C19876 * C70494 + (C15381 + C15382) * C154226) * C82856) *
               C154082 * C154464 -
           (C86891 * C82856 +
            (C15856 * C154226 + (C15090 + C15089) * C70494) * C154024 +
            (C19215 * C154226 + (C15088 + C15087) * C70494) * C154016) *
               C154082 * C154463 -
           (((C15024 * C4264 - C15025 * C4257 - C15024 * C4265 +
              C154268 * C4269 + C15022 * C1406 - C15023 * C1400 -
              C15022 * C1407 + C154408 * C1415) *
                 C154226 +
             (C15382 + C15381) * C70494) *
                C82856 +
            ((C19265 + C19264) * C154226 + C19213 * C70494) * C154024 +
            (C38630 * C154226 + C19214 * C70494) * C154016) *
               C154082 * C1685) *
              C154053)) /
        (p * q * std::sqrt(p + q));
    d2ee[51] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
              C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
                 C70494 +
             (C19258 + C19259) * C154226) *
                C154016 +
            ((C15087 + C15088) * C70494 + C19212 * C154226) * C154024 +
            C86890 * C82856) *
               C154393 -
           (C88057 * C82856 +
            (C20558 * C154226 + (C15653 + C15654) * C70494) * C154024 +
            ((C20597 + C20598) * C154226 +
             (C15024 * C602 - C15025 * C585 - C15024 * C603 + C154268 * C621 +
              C15022 * C600 - C15023 * C584 - C15022 * C601 + C154408 * C620) *
                 C70494) *
                C154016) *
               C154146) *
              C154463 +
          ((((C20598 + C20597) * C70494 + (C22383 + C22384) * C154226) *
                C154016 +
            (C20567 * C70494 + C39917 * C154226) * C154024 +
            (C20576 * C70494 + (C20601 + C20602) * C154226) * C82856) *
               C154146 -
           (C87764 * C82856 + (C19214 * C154226 + C19215 * C70494) * C154024 +
            ((C19260 + C19261) * C154226 + (C19259 + C19258) * C70494) *
                C154016) *
               C154393) *
              C154464 +
          (((C38629 * C70494 + C43780 * C154226) * C154016 +
            (C19224 * C70494 + C38631 * C154226) * C154024 +
            (C19233 * C70494 + (C19264 + C19265) * C154226) * C82856) *
               C154393 -
           (((C15024 * C4908 - C15025 * C4905 - C15024 * C4909 +
              C154268 * C4914 + C15022 * C4262 - C15023 * C4256 -
              C15022 * C4263 + C154408 * C4268) *
                 C154226 +
             (C20602 + C20601) * C70494) *
                C82856 +
            ((C39931 + C39930) * C154226 + C39916 * C70494) * C154024 +
            (C45814 * C154226 + C41701 * C70494) * C154016) *
               C154146) *
              C1685) *
         C154047) /
        (p * q * std::sqrt(p + q));
    d2ee[52] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
             C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
                C70494 +
            (C19258 + C19259) * C154226) *
               C154016 +
           ((C15087 + C15088) * C70494 + C19212 * C154226) * C154024 +
           C86890 * C82856) *
              C154082 * C1394 -
          (C87764 * C82856 + (C19214 * C154226 + C19215 * C70494) * C154024 +
           ((C19260 + C19261) * C154226 + (C19259 + C19258) * C70494) *
               C154016) *
              C154082 * C1395 +
          ((C38629 * C70494 + C43780 * C154226) * C154016 +
           (C19224 * C70494 + C38631 * C154226) * C154024 +
           (C19233 * C70494 + (C19264 + C19265) * C154226) * C82856) *
              C154082 * C1396 -
          (((C15024 * C5660 - C15025 * C5657 - C15024 * C5661 +
             C154268 * C5666 + C15022 * C3147 - C15023 * C3141 -
             C15022 * C3148 + C154408 * C3153) *
                C154226 +
            (C19265 + C19264) * C70494) *
               C82856 +
           ((C38645 + C38644) * C154226 + C38630 * C70494) * C154024 +
           (C44945 * C154226 + C40416 * C70494) * C154016) *
              C154082 * C1397) *
         C154047) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
              C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
                 C70494 +
             (C19258 + C19259) * C154226) *
                C154016 +
            ((C15087 + C15088) * C70494 + C19212 * C154226) * C154024 +
            C86890 * C82856) *
               C154082 * C1307 -
           (C87764 * C82856 + (C19214 * C154226 + C19215 * C70494) * C154024 +
            ((C19260 + C19261) * C154226 + (C19259 + C19258) * C70494) *
                C154016) *
               C154082 * C154118) *
              C1309 +
          (((C19212 * C70494 + C19224 * C154226) * C154016 +
            (C18908 * C70494 + C19233 * C154226) * C154024 +
            (C19876 * C70494 + (C15381 + C15382) * C154226) * C82856) *
               C154082 * C154118 -
           (C86891 * C82856 +
            (C15856 * C154226 + (C15090 + C15089) * C70494) * C154024 +
            (C19215 * C154226 + (C15088 + C15087) * C70494) * C154016) *
               C154082 * C1307) *
              C1310 +
          ((C86890 * C154016 + (C15098 * C70494 + C19876 * C154226) * C154024 +
            ((C15094 + C15093) * C70494 + (C15871 + C15872) * C154226) *
                C82856) *
               C154082 * C1307 -
           (((C15024 * C1977 - C15025 * C1972 - C15024 * C1978 +
              C154268 * C1987 + C15022 * C373 - C15023 * C352 - C15022 * C374 +
              C154408 * C388) *
                 C154226 +
             (C15872 + C15871) * C70494) *
                C82856 +
            ((C15382 + C15381) * C154226 + C15855 * C70494) * C154024 +
            C87764 * C154016) *
               C154082 * C154118) *
              C1311)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
              C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
                 C70494 +
             (C19258 + C19259) * C154226) *
                C154016 +
            ((C15087 + C15088) * C70494 + C19212 * C154226) * C154024 +
            C86890 * C82856) *
               C577 -
           (C88057 * C82856 +
            (C20558 * C154226 + (C15653 + C15654) * C70494) * C154024 +
            ((C20597 + C20598) * C154226 +
             (C15024 * C602 - C15025 * C585 - C15024 * C603 + C154268 * C621 +
              C15022 * C600 - C15023 * C584 - C15022 * C601 + C154408 * C620) *
                 C70494) *
                C154016) *
               C578 +
           (((C15022 * C602 - C15023 * C585 - C15022 * C603 + C154408 * C621 +
              C15024 * C2337 - C15025 * C2328 - C15024 * C2338 +
              C154268 * C2343) *
                 C70494 +
             (C21403 + C21404) * C154226) *
                C154016 +
            ((C15655 + C15656) * C70494 + (C19580 + C19581) * C154226) *
                C154024 +
            ((C15657 + C15658) * C70494 + (C19582 + C19583) * C154226) *
                C82856) *
               C579) *
              C1307 +
          ((((C20598 + C20597) * C70494 + (C22383 + C22384) * C154226) *
                C154016 +
            (C20567 * C70494 + C39917 * C154226) * C154024 +
            (C20576 * C70494 + (C20601 + C20602) * C154226) * C82856) *
               C578 -
           (C87764 * C82856 + (C19214 * C154226 + C19215 * C70494) * C154024 +
            ((C19260 + C19261) * C154226 + (C19259 + C19258) * C70494) *
                C154016) *
               C577 -
           (((C15024 * C6264 - C15025 * C6258 - C15024 * C6265 +
              C154268 * C6276 + C15022 * C3449 - C15023 * C3443 -
              C15022 * C3450 + C154408 * C3455) *
                 C154226 +
             (C19583 + C19582) * C70494) *
                C82856 +
            ((C38949 + C38948) * C154226 + (C19581 + C19580) * C70494) *
                C154024 +
            ((C40734 + C40733) * C154226 + (C21404 + C21403) * C70494) *
                C154016) *
               C579) *
              C154118) *
         C154047) /
            (p * q * std::sqrt(p + q));
    d2ee[53] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
               C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
                  C70494 +
              (C19258 + C19259) * C154226) *
                 C154016 +
             ((C15087 + C15088) * C70494 + C19212 * C154226) * C154024 +
             C86890 * C82856) *
                C154393 -
            (C88057 * C82856 +
             (C20558 * C154226 + (C15653 + C15654) * C70494) * C154024 +
             ((C20597 + C20598) * C154226 +
              (C15024 * C602 - C15025 * C585 - C15024 * C603 + C154268 * C621 +
               C15022 * C600 - C15023 * C584 - C15022 * C601 + C154408 * C620) *
                  C70494) *
                 C154016) *
                C154146) *
               C1307 +
           ((((C20598 + C20597) * C70494 + (C22383 + C22384) * C154226) *
                 C154016 +
             (C20567 * C70494 + C39917 * C154226) * C154024 +
             (C20576 * C70494 + (C20601 + C20602) * C154226) * C82856) *
                C154146 -
            (C87764 * C82856 + (C19214 * C154226 + C19215 * C70494) * C154024 +
             ((C19260 + C19261) * C154226 + (C19259 + C19258) * C70494) *
                 C154016) *
                C154393) *
               C154118) *
              C154384 +
          (((((C15654 + C15653) * C70494 + C20567 * C154226) * C154016 +
             ((C15652 + C15651) * C70494 + C20576 * C154226) * C154024 +
             ((C15650 + C15649) * C70494 + (C16383 + C16384) * C154226) *
                 C82856) *
                C154146 -
            (C86891 * C82856 +
             (C15856 * C154226 + (C15090 + C15089) * C70494) * C154024 +
             (C19215 * C154226 + (C15088 + C15087) * C70494) * C154016) *
                C154393) *
               C1307 +
           (((C19212 * C70494 + C19224 * C154226) * C154016 +
             (C18908 * C70494 + C19233 * C154226) * C154024 +
             (C19876 * C70494 + (C15381 + C15382) * C154226) * C82856) *
                C154393 -
            (((C15024 * C3451 - C15025 * C3444 - C15024 * C3452 +
               C154268 * C3456 + C15022 * C1979 - C15023 * C1973 -
               C15022 * C1980 + C154408 * C1988) *
                  C154226 +
              (C16384 + C16383) * C70494) *
                 C82856 +
             ((C20602 + C20601) * C154226 + C20168 * C70494) * C154024 +
             (C39916 * C154226 + C20558 * C70494) * C154016) *
                C154146) *
               C154118) *
              C154053)) /
        (p * q * std::sqrt(p + q));
    d2ee[54] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
              C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
                 C70494 +
             (C19258 + C19259) * C154226) *
                C154016 +
            ((C15087 + C15088) * C70494 + C19212 * C154226) * C154024 +
            C86890 * C82856) *
               C154082 * C1307 -
           (C87764 * C82856 + (C19214 * C154226 + C19215 * C70494) * C154024 +
            ((C19260 + C19261) * C154226 + (C19259 + C19258) * C70494) *
                C154016) *
               C154082 * C154118) *
              C1309 +
          (((C19212 * C70494 + C19224 * C154226) * C154016 +
            (C18908 * C70494 + C19233 * C154226) * C154024 +
            (C19876 * C70494 + (C15381 + C15382) * C154226) * C82856) *
               C154082 * C154118 -
           (C86891 * C82856 +
            (C15856 * C154226 + (C15090 + C15089) * C70494) * C154024 +
            (C19215 * C154226 + (C15088 + C15087) * C70494) * C154016) *
               C154082 * C1307) *
              C1310 +
          ((C86890 * C154016 + (C15098 * C70494 + C19876 * C154226) * C154024 +
            ((C15094 + C15093) * C70494 + (C15871 + C15872) * C154226) *
                C82856) *
               C154082 * C1307 -
           (((C15024 * C1977 - C15025 * C1972 - C15024 * C1978 +
              C154268 * C1987 + C15022 * C373 - C15023 * C352 - C15022 * C374 +
              C154408 * C388) *
                 C154226 +
             (C15872 + C15871) * C70494) *
                C82856 +
            ((C15382 + C15381) * C154226 + C15855 * C70494) * C154024 +
            C87764 * C154016) *
               C154082 * C154118) *
              C1311)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
             C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
                C70494 +
            (C19258 + C19259) * C154226) *
               C154016 +
           ((C15087 + C15088) * C70494 + C19212 * C154226) * C154024 +
           C86890 * C82856) *
              C154082 * C1394 -
          (C87764 * C82856 + (C19214 * C154226 + C19215 * C70494) * C154024 +
           ((C19260 + C19261) * C154226 + (C19259 + C19258) * C70494) *
               C154016) *
              C154082 * C1395 +
          ((C38629 * C70494 + C43780 * C154226) * C154016 +
           (C19224 * C70494 + C38631 * C154226) * C154024 +
           (C19233 * C70494 + (C19264 + C19265) * C154226) * C82856) *
              C154082 * C1396 -
          (((C15024 * C5660 - C15025 * C5657 - C15024 * C5661 +
             C154268 * C5666 + C15022 * C3147 - C15023 * C3141 -
             C15022 * C3148 + C154408 * C3153) *
                C154226 +
            (C19265 + C19264) * C70494) *
               C82856 +
           ((C38645 + C38644) * C154226 + C38630 * C70494) * C154024 +
           (C44945 * C154226 + C40416 * C70494) * C154016) *
              C154082 * C1397) *
         C154047) /
            (p * q * std::sqrt(p + q));
    d2ee[55] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
               C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
                  C70494 +
              (C19258 + C19259) * C154226) *
                 C154016 +
             ((C15087 + C15088) * C70494 + C19212 * C154226) * C154024 +
             C86890 * C82856) *
                C2114 -
            (C88057 * C82856 +
             (C20558 * C154226 + (C15653 + C15654) * C70494) * C154024 +
             ((C20597 + C20598) * C154226 +
              (C15024 * C602 - C15025 * C585 - C15024 * C603 + C154268 * C621 +
               C15022 * C600 - C15023 * C584 - C15022 * C601 + C154408 * C620) *
                  C70494) *
                 C154016) *
                C154146) *
               C154392 +
           ((((C20598 + C20597) * C70494 + (C22383 + C22384) * C154226) *
                 C154016 +
             (C20567 * C70494 + C39917 * C154226) * C154024 +
             (C20576 * C70494 + (C20601 + C20602) * C154226) * C82856) *
                C154146 -
            (C87764 * C82856 + (C19214 * C154226 + C19215 * C70494) * C154024 +
             ((C19260 + C19261) * C154226 + (C19259 + C19258) * C70494) *
                 C154016) *
                C2114) *
               C154118) *
              C154384 +
          (((((C15654 + C15653) * C70494 + C20567 * C154226) * C154016 +
             ((C15652 + C15651) * C70494 + C20576 * C154226) * C154024 +
             ((C15650 + C15649) * C70494 + (C16383 + C16384) * C154226) *
                 C82856) *
                C154146 -
            (C86891 * C82856 +
             (C15856 * C154226 + (C15090 + C15089) * C70494) * C154024 +
             (C19215 * C154226 + (C15088 + C15087) * C70494) * C154016) *
                C2114) *
               C154392 +
           (((C19212 * C70494 + C19224 * C154226) * C154016 +
             (C18908 * C70494 + C19233 * C154226) * C154024 +
             (C19876 * C70494 + (C15381 + C15382) * C154226) * C82856) *
                C2114 -
            (((C15024 * C3451 - C15025 * C3444 - C15024 * C3452 +
               C154268 * C3456 + C15022 * C1979 - C15023 * C1973 -
               C15022 * C1980 + C154408 * C1988) *
                  C154226 +
              (C16384 + C16383) * C70494) *
                 C82856 +
             ((C20602 + C20601) * C154226 + C20168 * C70494) * C154024 +
             (C39916 * C154226 + C20558 * C70494) * C154016) *
                C154146) *
               C154118) *
              C154053)) /
        (p * q * std::sqrt(p + q));
    d2ee[56] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
              C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
                 C70494 +
             (C19258 + C19259) * C154226) *
                C154016 +
            ((C15087 + C15088) * C70494 + C19212 * C154226) * C154024 +
            C86890 * C82856) *
               C154465 -
           (C88057 * C82856 +
            (C20558 * C154226 + (C15653 + C15654) * C70494) * C154024 +
            ((C20597 + C20598) * C154226 +
             (C15024 * C602 - C15025 * C585 - C15024 * C603 + C154268 * C621 +
              C15022 * C600 - C15023 * C584 - C15022 * C601 + C154408 * C620) *
                 C70494) *
                C154016) *
               C154466 +
           (((C15022 * C602 - C15023 * C585 - C15022 * C603 + C154408 * C621 +
              C15024 * C2337 - C15025 * C2328 - C15024 * C2338 +
              C154268 * C2343) *
                 C70494 +
             (C21403 + C21404) * C154226) *
                C154016 +
            ((C15655 + C15656) * C70494 + (C19580 + C19581) * C154226) *
                C154024 +
            ((C15657 + C15658) * C70494 + (C19582 + C19583) * C154226) *
                C82856) *
               C2630) *
              C154392 +
          ((((C20598 + C20597) * C70494 + (C22383 + C22384) * C154226) *
                C154016 +
            (C20567 * C70494 + C39917 * C154226) * C154024 +
            (C20576 * C70494 + (C20601 + C20602) * C154226) * C82856) *
               C154466 -
           (C87764 * C82856 + (C19214 * C154226 + C19215 * C70494) * C154024 +
            ((C19260 + C19261) * C154226 + (C19259 + C19258) * C70494) *
                C154016) *
               C154465 -
           (((C15024 * C6264 - C15025 * C6258 - C15024 * C6265 +
              C154268 * C6276 + C15022 * C3449 - C15023 * C3443 -
              C15022 * C3450 + C154408 * C3455) *
                 C154226 +
             (C19583 + C19582) * C70494) *
                C82856 +
            ((C38949 + C38948) * C154226 + (C19581 + C19580) * C70494) *
                C154024 +
            ((C40734 + C40733) * C154226 + (C21404 + C21403) * C70494) *
                C154016) *
               C2630) *
              C154118) *
         C154047) /
        (p * q * std::sqrt(p + q));
    d2ee[57] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
              C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
                 C70494 +
             (C19258 + C19259) * C154226) *
                C154016 +
            ((C15087 + C15088) * C70494 + C19212 * C154226) * C154024 +
            C86890 * C82856) *
               C2114 -
           (C88057 * C82856 +
            (C20558 * C154226 + (C15653 + C15654) * C70494) * C154024 +
            ((C20597 + C20598) * C154226 +
             (C15024 * C602 - C15025 * C585 - C15024 * C603 + C154268 * C621 +
              C15022 * C600 - C15023 * C584 - C15022 * C601 + C154408 * C620) *
                 C70494) *
                C154016) *
               C154146) *
              C338 +
          ((((C20598 + C20597) * C70494 + (C22383 + C22384) * C154226) *
                C154016 +
            (C20567 * C70494 + C39917 * C154226) * C154024 +
            (C20576 * C70494 + (C20601 + C20602) * C154226) * C82856) *
               C154146 -
           (C87764 * C82856 + (C19214 * C154226 + C19215 * C70494) * C154024 +
            ((C19260 + C19261) * C154226 + (C19259 + C19258) * C70494) *
                C154016) *
               C2114) *
              C339 +
          (((C38629 * C70494 + C43780 * C154226) * C154016 +
            (C19224 * C70494 + C38631 * C154226) * C154024 +
            (C19233 * C70494 + (C19264 + C19265) * C154226) * C82856) *
               C2114 -
           (((C15024 * C4908 - C15025 * C4905 - C15024 * C4909 +
              C154268 * C4914 + C15022 * C4262 - C15023 * C4256 -
              C15022 * C4263 + C154408 * C4268) *
                 C154226 +
             (C20602 + C20601) * C70494) *
                C82856 +
            ((C39931 + C39930) * C154226 + C39916 * C70494) * C154024 +
            (C45814 * C154226 + C41701 * C70494) * C154016) *
               C154146) *
              C340) *
         C154047) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
              C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
                 C70494 +
             (C19258 + C19259) * C154226) *
                C154016 +
            ((C15087 + C15088) * C70494 + C19212 * C154226) * C154024 +
            C86890 * C82856) *
               C2114 -
           (C88057 * C82856 +
            (C20558 * C154226 + (C15653 + C15654) * C70494) * C154024 +
            ((C20597 + C20598) * C154226 +
             (C15024 * C602 - C15025 * C585 - C15024 * C603 + C154268 * C621 +
              C15022 * C600 - C15023 * C584 - C15022 * C601 + C154408 * C620) *
                 C70494) *
                C154016) *
               C154146) *
              C154066 * C1309 +
          ((((C15654 + C15653) * C70494 + C20567 * C154226) * C154016 +
            ((C15652 + C15651) * C70494 + C20576 * C154226) * C154024 +
            ((C15650 + C15649) * C70494 + (C16383 + C16384) * C154226) *
                C82856) *
               C154146 -
           (C86891 * C82856 +
            (C15856 * C154226 + (C15090 + C15089) * C70494) * C154024 +
            (C19215 * C154226 + (C15088 + C15087) * C70494) * C154016) *
               C2114) *
              C154066 * C1310 +
          ((C86890 * C154016 + (C15098 * C70494 + C19876 * C154226) * C154024 +
            ((C15094 + C15093) * C70494 + (C15871 + C15872) * C154226) *
                C82856) *
               C2114 -
           (((C15024 * C1546 - C15025 * C1541 - C15024 * C1547 +
              C154268 * C1556 + C15022 * C1143 - C15023 * C1133 -
              C15022 * C1144 + C154408 * C1151) *
                 C154226 +
             (C16084 + C16083) * C70494) *
                C82856 +
            ((C16384 + C16383) * C154226 + C16067 * C70494) * C154024 +
            C88057 * C154016) *
               C154146) *
              C154066 * C1311)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
             C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
                C70494 +
            (C19258 + C19259) * C154226) *
               C154016 +
           ((C15087 + C15088) * C70494 + C19212 * C154226) * C154024 +
           C86890 * C82856) *
              C2320 -
          (C88057 * C82856 +
           (C20558 * C154226 + (C15653 + C15654) * C70494) * C154024 +
           ((C20597 + C20598) * C154226 +
            (C15024 * C602 - C15025 * C585 - C15024 * C603 + C154268 * C621 +
             C15022 * C600 - C15023 * C584 - C15022 * C601 + C154408 * C620) *
                C70494) *
               C154016) *
              C2321 +
          (((C15022 * C602 - C15023 * C585 - C15022 * C603 + C154408 * C621 +
             C15024 * C2337 - C15025 * C2328 - C15024 * C2338 +
             C154268 * C2343) *
                C70494 +
            (C21403 + C21404) * C154226) *
               C154016 +
           ((C15655 + C15656) * C70494 + (C19580 + C19581) * C154226) *
               C154024 +
           ((C15657 + C15658) * C70494 + (C19582 + C19583) * C154226) *
               C82856) *
              C2322 -
          (((C15024 * C9278 - C15025 * C9275 - C15024 * C9279 +
             C154268 * C9284 + C15022 * C6266 - C15023 * C6259 -
             C15022 * C6267 + C154408 * C6277) *
                C154226 +
            (C15024 * C7781 - C15025 * C7775 - C15024 * C7782 +
             C154268 * C7787 + C15022 * C2333 - C15023 * C2326 -
             C15022 * C2334 + C154408 * C2341) *
                C70494) *
               C82856 +
           ((C15024 * C9280 - C15025 * C9276 - C15024 * C9281 +
             C154268 * C9285 + C15022 * C6270 - C15023 * C6261 -
             C15022 * C6271 + C154408 * C6279) *
                C154226 +
            (C15024 * C7779 - C15025 * C7774 - C15024 * C7780 +
             C154268 * C7786 + C15022 * C2335 - C15023 * C2327 -
             C15022 * C2336 + C154408 * C2342) *
                C70494) *
               C154024 +
           ((C15024 * C9282 - C15025 * C9277 - C15024 * C9283 +
             C154268 * C9286 + C15022 * C6274 - C15023 * C6263 -
             C15022 * C6275 + C154408 * C6281) *
                C154226 +
            (C15024 * C7777 - C15025 * C7773 - C15024 * C7778 +
             C154268 * C7785 + C15022 * C2337 - C15023 * C2328 -
             C15022 * C2338 + C154408 * C2343) *
                C70494) *
               C154016) *
              C2323) *
         C154066 * C154047) /
            (p * q * std::sqrt(p + q));
    d2ee[58] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
              C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
                 C70494 +
             (C19258 + C19259) * C154226) *
                C154016 +
            ((C15087 + C15088) * C70494 + C19212 * C154226) * C154024 +
            C86890 * C82856) *
               C154465 -
           (C88057 * C82856 +
            (C20558 * C154226 + (C15653 + C15654) * C70494) * C154024 +
            ((C20597 + C20598) * C154226 +
             (C15024 * C602 - C15025 * C585 - C15024 * C603 + C154268 * C621 +
              C15022 * C600 - C15023 * C584 - C15022 * C601 + C154408 * C620) *
                 C70494) *
                C154016) *
               C154466 +
           (((C15022 * C602 - C15023 * C585 - C15022 * C603 + C154408 * C621 +
              C15024 * C2337 - C15025 * C2328 - C15024 * C2338 +
              C154268 * C2343) *
                 C70494 +
             (C21403 + C21404) * C154226) *
                C154016 +
            ((C15655 + C15656) * C70494 + (C19580 + C19581) * C154226) *
                C154024 +
            ((C15657 + C15658) * C70494 + (C19582 + C19583) * C154226) *
                C82856) *
               C2630) *
              C154066 * C154384 +
          ((((C15654 + C15653) * C70494 + C20567 * C154226) * C154016 +
            ((C15652 + C15651) * C70494 + C20576 * C154226) * C154024 +
            ((C15650 + C15649) * C70494 + (C16383 + C16384) * C154226) *
                C82856) *
               C154466 -
           (C86891 * C82856 +
            (C15856 * C154226 + (C15090 + C15089) * C70494) * C154024 +
            (C19215 * C154226 + (C15088 + C15087) * C70494) * C154016) *
               C154465 -
           (((C15024 * C8648 - C15025 * C8647 - C15024 * C8649 +
              C154268 * C8650 + C15022 * C1548 - C15023 * C1542 -
              C15022 * C1549 + C154408 * C1557) *
                 C154226 +
             (C15660 + C15659) * C70494) *
                C82856 +
            ((C19583 + C19582) * C154226 + (C15658 + C15657) * C70494) *
                C154024 +
            ((C19581 + C19580) * C154226 + (C15656 + C15655) * C70494) *
                C154016) *
               C2630) *
              C154066 * C154053)) /
        (p * q * std::sqrt(p + q));
    d2ee[59] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
              C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
                 C70494 +
             (C19258 + C19259) * C154226) *
                C154016 +
            ((C15087 + C15088) * C70494 + C19212 * C154226) * C154024 +
            C86890 * C82856) *
               C2114 -
           (C88057 * C82856 +
            (C20558 * C154226 + (C15653 + C15654) * C70494) * C154024 +
            ((C20597 + C20598) * C154226 +
             (C15024 * C602 - C15025 * C585 - C15024 * C603 + C154268 * C621 +
              C15022 * C600 - C15023 * C584 - C15022 * C601 + C154408 * C620) *
                 C70494) *
                C154016) *
               C154146) *
              C154066 * C1309 +
          ((((C15654 + C15653) * C70494 + C20567 * C154226) * C154016 +
            ((C15652 + C15651) * C70494 + C20576 * C154226) * C154024 +
            ((C15650 + C15649) * C70494 + (C16383 + C16384) * C154226) *
                C82856) *
               C154146 -
           (C86891 * C82856 +
            (C15856 * C154226 + (C15090 + C15089) * C70494) * C154024 +
            (C19215 * C154226 + (C15088 + C15087) * C70494) * C154016) *
               C2114) *
              C154066 * C1310 +
          ((C86890 * C154016 + (C15098 * C70494 + C19876 * C154226) * C154024 +
            ((C15094 + C15093) * C70494 + (C15871 + C15872) * C154226) *
                C82856) *
               C2114 -
           (((C15024 * C1546 - C15025 * C1541 - C15024 * C1547 +
              C154268 * C1556 + C15022 * C1143 - C15023 * C1133 -
              C15022 * C1144 + C154408 * C1151) *
                 C154226 +
             (C16084 + C16083) * C70494) *
                C82856 +
            ((C16384 + C16383) * C154226 + C16067 * C70494) * C154024 +
            C88057 * C154016) *
               C154146) *
              C154066 * C1311)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
              C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
                 C70494 +
             (C19258 + C19259) * C154226) *
                C154016 +
            ((C15087 + C15088) * C70494 + C19212 * C154226) * C154024 +
            C86890 * C82856) *
               C2114 -
           (C88057 * C82856 +
            (C20558 * C154226 + (C15653 + C15654) * C70494) * C154024 +
            ((C20597 + C20598) * C154226 +
             (C15024 * C602 - C15025 * C585 - C15024 * C603 + C154268 * C621 +
              C15022 * C600 - C15023 * C584 - C15022 * C601 + C154408 * C620) *
                 C70494) *
                C154016) *
               C154146) *
              C338 +
          ((((C20598 + C20597) * C70494 + (C22383 + C22384) * C154226) *
                C154016 +
            (C20567 * C70494 + C39917 * C154226) * C154024 +
            (C20576 * C70494 + (C20601 + C20602) * C154226) * C82856) *
               C154146 -
           (C87764 * C82856 + (C19214 * C154226 + C19215 * C70494) * C154024 +
            ((C19260 + C19261) * C154226 + (C19259 + C19258) * C70494) *
                C154016) *
               C2114) *
              C339 +
          (((C38629 * C70494 + C43780 * C154226) * C154016 +
            (C19224 * C70494 + C38631 * C154226) * C154024 +
            (C19233 * C70494 + (C19264 + C19265) * C154226) * C82856) *
               C2114 -
           (((C15024 * C4908 - C15025 * C4905 - C15024 * C4909 +
              C154268 * C4914 + C15022 * C4262 - C15023 * C4256 -
              C15022 * C4263 + C154408 * C4268) *
                 C154226 +
             (C20602 + C20601) * C70494) *
                C82856 +
            ((C39931 + C39930) * C154226 + C39916 * C70494) * C154024 +
            (C45814 * C154226 + C41701 * C70494) * C154016) *
               C154146) *
              C340) *
         C154047) /
            (p * q * std::sqrt(p + q));
    d2ee[60] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C70494 +
             C3210 * C154226) *
                C154486 +
            (C70501 + C70502) * C154479 + C70511 * C154460 + C70512 * C154407) *
               C154082 * C154392 -
           (C71121 * C154407 + C71122 * C154460 + (C70713 + C70714) * C154479 +
            (C3211 * C154226 + C3210 * C70494) * C154486) *
               C154082 * C154118) *
              C154461 +
          (((C70714 + C70713) * C154486 + (C70712 + C70711) * C154479 +
            (C70710 + C70709) * C154460 + (C71123 + C71124) * C154407) *
               C154082 * C154118 -
           (C70513 * C154407 + C70514 * C154460 + (C70504 + C70503) * C154479 +
            (C70502 + C70501) * C154486) *
               C154082 * C154392) *
              C154462 +
          ((C70511 * C154486 + C70512 * C154479 + (C70508 + C70507) * C154460 +
            (C70509 + C70510) * C154407) *
               C154082 * C154392 -
           (((C134 * C377 - C135 * C354 - C134 * C378 + C154181 * C390) *
                 C154226 +
             C830 * C70494) *
                C154407 +
            (C71124 + C71123) * C154460 + C71121 * C154479 + C71122 * C154486) *
               C154082 * C154118) *
              C818)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C154487 +
             C3210 * C154483 + C3211 * C154473 + C3214 * C154415) *
                C74048 +
            (C74051 + C74052 + C74053 + C74054) * C154021) *
               C154082 * C154392 -
           ((C74257 + C74258 + C74259 + C74260) * C154021 +
            (C4687 * C154415 + C3214 * C154473 + C3211 * C154483 +
             C3210 * C154487) *
                C74048) *
               C154082 * C154118) *
              C154461 +
          (((C74260 + C74259 + C74258 + C74257) * C74048 +
            (C74661 + C74662 + C74663 + C74664) * C154021) *
               C154082 * C154118 -
           ((C74055 + C74056 + C74057 + C74058) * C154021 +
            (C74054 + C74053 + C74052 + C74051) * C74048) *
               C154082 * C154392) *
              C154462 +
          (((C74058 + C74057 + C74056 + C74055) * C74048 +
            (C74059 + C74060 + C74061 + C74062) * C154021) *
               C154082 * C154392 -
           (((C134 * C3149 - C135 * C3142 - C134 * C3150 + C154181 * C3154) *
                 C154415 +
             C3217 * C154473 + C446 * C154483 + C441 * C154487) *
                C154021 +
            (C74664 + C74663 + C74662 + C74661) * C74048) *
               C154082 * C154118) *
              C818)) /
            (p * q * std::sqrt(p + q));
    d2ee[61] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                  C70494 +
              C3210 * C154226) *
                 C154486 +
             (C70501 + C70502) * C154479 + C70511 * C154460 +
             C70512 * C154407) *
                C154393 -
            (C71319 * C154407 + C71320 * C154460 + (C70919 + C70920) * C154479 +
             (C4300 * C154226 +
              (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                  C70494) *
                 C154486) *
                C154146) *
               C154392 +
           (((C4300 * C70494 + C4299 * C154226) * C154486 +
             (C71581 + C71582) * C154479 + (C71583 + C71584) * C154460 +
             (C71585 + C71586) * C154407) *
                C154146 -
            (C71121 * C154407 + C71122 * C154460 + (C70713 + C70714) * C154479 +
             (C3211 * C154226 + C3210 * C70494) * C154486) *
                C154393) *
               C154118) *
              C341 +
          ((((C70920 + C70919) * C154486 + (C70918 + C70917) * C154479 +
             (C70916 + C70915) * C154460 + (C71321 + C71322) * C154407) *
                C154146 -
            (C70513 * C154407 + C70514 * C154460 + (C70504 + C70503) * C154479 +
             (C70502 + C70501) * C154486) *
                C154393) *
               C154392 +
           (((C70714 + C70713) * C154486 + (C70712 + C70711) * C154479 +
             (C70710 + C70709) * C154460 + (C71123 + C71124) * C154407) *
                C154393 -
            (((C134 * C1977 - C135 * C1972 - C134 * C1978 + C154181 * C1987) *
                  C154226 +
              C1181 * C70494) *
                 C154407 +
             (C71586 + C71585) * C154460 + (C71584 + C71583) * C154479 +
             (C71582 + C71581) * C154486) *
                C154146) *
               C154118) *
              C154053)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                  C154487 +
              C3210 * C154483 + C3211 * C154473 + C3214 * C154415) *
                 C74048 +
             (C74051 + C74052 + C74053 + C74054) * C154021) *
                C154393 -
            ((C74459 + C74460 + C74461 + C74462) * C154021 +
             (C5676 * C154415 + C4299 * C154473 + C4300 * C154483 +
              (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                  C154487) *
                 C74048) *
                C154146) *
               C154392 +
           (((C4300 * C154487 + C4299 * C154483 + C5676 * C154473 +
              C28899 * C154415) *
                 C74048 +
             (C75121 + C75122 + C75123 + C75124) * C154021) *
                C154146 -
            ((C74257 + C74258 + C74259 + C74260) * C154021 +
             (C4687 * C154415 + C3214 * C154473 + C3211 * C154483 +
              C3210 * C154487) *
                 C74048) *
                C154393) *
               C154118) *
              C341 +
          ((((C74462 + C74461 + C74460 + C74459) * C74048 +
             (C74859 + C74860 + C74861 + C74862) * C154021) *
                C154146 -
            ((C74055 + C74056 + C74057 + C74058) * C154021 +
             (C74054 + C74053 + C74052 + C74051) * C74048) *
                C154393) *
               C154392 +
           (((C74260 + C74259 + C74258 + C74257) * C74048 +
             (C74661 + C74662 + C74663 + C74664) * C154021) *
                C154393 -
            (((C134 * C5660 - C135 * C5657 - C134 * C5661 + C154181 * C5666) *
                  C154415 +
              C4302 * C154473 + C3500 * C154483 + C1179 * C154487) *
                 C154021 +
             (C75124 + C75123 + C75122 + C75121) * C74048) *
                C154146) *
               C154118) *
              C154053)) /
            (p * q * std::sqrt(p + q));
    d2ee[62] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C70494 +
             C3210 * C154226) *
                C154486 +
            (C70501 + C70502) * C154479 + C70511 * C154460 + C70512 * C154407) *
               C154082 * C338 -
           ((C70709 + C70710) * C154407 + (C70711 + C70712) * C154460 +
            (C70713 + C70714) * C154479 +
            (C3211 * C154226 + C3210 * C70494) * C154486) *
               C154082 * C339 +
           ((C3211 * C70494 + C3214 * C154226) * C154486 +
            (C70715 + C70716) * C154479 + (C70717 + C70718) * C154460 +
            (C70719 + C70720) * C154407) *
               C154082 * C340) *
              C341 +
          (((C70714 + C70713) * C154486 + (C70712 + C70711) * C154479 +
            (C70710 + C70709) * C154460 +
            (C440 * C70494 + C447 * C154226) * C154407) *
               C154082 * C339 -
           (C70513 * C154407 + C70514 * C154460 + (C70504 + C70503) * C154479 +
            (C70502 + C70501) * C154486) *
               C154082 * C338 -
           (((C134 * C1404 - C135 * C1399 - C134 * C1405 + C154181 * C1414) *
                 C154226 +
             C447 * C70494) *
                C154407 +
            (C70720 + C70719) * C154460 + (C70718 + C70717) * C154479 +
            (C70716 + C70715) * C154486) *
               C154082 * C340) *
              C154053)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                C70494 +
            C3210 * C154226) *
               C154486 +
           (C70501 + C70502) * C154479 + C70511 * C154460 + C70512 * C154407) *
              C154082 * C154066 * C130 -
          (C70513 * C154407 + C70514 * C154460 + (C70504 + C70503) * C154479 +
           (C70502 + C70501) * C154486) *
              C154082 * C154066 * C131 +
          (C70511 * C154486 + C70512 * C154479 + (C70508 + C70507) * C154460 +
           (C70509 + C70510) * C154407) *
              C154082 * C154066 * C132 -
          (((C134 * C820 - C135 * C819 - C134 * C821 + C154181 * C822) *
                C154226 +
            C210 * C70494) *
               C154407 +
           (C70510 + C70509) * C154460 + C70513 * C154479 + C70514 * C154486) *
              C154082 * C154066 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C70494 +
             C3210 * C154226) *
                C154486 +
            (C70501 + C70502) * C154479 + C70511 * C154460 + C70512 * C154407) *
               C577 -
           ((C70915 + C70916) * C154407 + (C70917 + C70918) * C154460 +
            (C70919 + C70920) * C154479 +
            (C4300 * C154226 +
             (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                 C70494) *
                C154486) *
               C578 +
           (((C134 * C602 - C135 * C585 - C134 * C603 + C154181 * C621) *
                 C70494 +
             C4930 * C154226) *
                C154486 +
            (C70921 + C70922) * C154479 + (C70923 + C70924) * C154460 +
            (C70925 + C70926) * C154407) *
               C579) *
              C154066 * C341 +
          (((C70920 + C70919) * C154486 + (C70918 + C70917) * C154479 +
            (C70916 + C70915) * C154460 +
            (C677 * C70494 + C1181 * C154226) * C154407) *
               C578 -
           (C70513 * C154407 + C70514 * C154460 + (C70504 + C70503) * C154479 +
            (C70502 + C70501) * C154486) *
               C577 -
           (((C134 * C1546 - C135 * C1541 - C134 * C1547 + C154181 * C1556) *
                 C154226 +
             C684 * C70494) *
                C154407 +
            (C70926 + C70925) * C154460 + (C70924 + C70923) * C154479 +
            (C70922 + C70921) * C154486) *
               C579) *
              C154066 * C154053)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                C154487 +
            C3210 * C154483 + C3211 * C154473 + C3214 * C154415) *
               C74048 +
           (C74051 + C74052 + C74053 + C74054) * C154021) *
              C154082 * C154066 * C130 -
          ((C74055 + C74056 + C74057 + C74058) * C154021 +
           (C74054 + C74053 + C74052 + C74051) * C74048) *
              C154082 * C154066 * C131 +
          ((C74058 + C74057 + C74056 + C74055) * C74048 +
           (C74059 + C74060 + C74061 + C74062) * C154021) *
              C154082 * C154066 * C132 -
          (((C134 * C1404 - C135 * C1399 - C134 * C1405 + C154181 * C1414) *
                C154415 +
            C447 * C154473 + C440 * C154483 + C208 * C154487) *
               C154021 +
           (C74062 + C74061 + C74060 + C74059) * C74048) *
              C154082 * C154066 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C154487 +
             C3210 * C154483 + C3211 * C154473 + C3214 * C154415) *
                C74048 +
            (C74051 + C74052 + C74053 + C74054) * C154021) *
               C154082 * C338 -
           ((C74257 + C74258 + C74259 + C74260) * C154021 +
            (C4687 * C154415 + C3214 * C154473 + C3211 * C154483 +
             C3210 * C154487) *
                C74048) *
               C154082 * C339 +
           ((C3211 * C154487 + C3214 * C154483 + C4687 * C154473 +
             C28341 * C154415) *
                C74048 +
            (C74261 + C74262 + C74263 + C74264) * C154021) *
               C154082 * C340) *
              C341 +
          (((C74260 + C74259 + C74258 + C74257) * C74048 +
            (C442 * C154487 + C445 * C154483 + C3212 * C154473 +
             C3216 * C154415) *
                C154021) *
               C154082 * C339 -
           ((C74055 + C74056 + C74057 + C74058) * C154021 +
            (C74054 + C74053 + C74052 + C74051) * C74048) *
               C154082 * C338 -
           (((C134 * C4671 - C135 * C4668 - C134 * C4672 + C154181 * C4677) *
                 C154415 +
             C3216 * C154473 + C3212 * C154483 + C445 * C154487) *
                C154021 +
            (C74264 + C74263 + C74262 + C74261) * C74048) *
               C154082 * C340) *
              C154053)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C154487 +
             C3210 * C154483 + C3211 * C154473 + C3214 * C154415) *
                C74048 +
            (C74051 + C74052 + C74053 + C74054) * C154021) *
               C577 -
           ((C74459 + C74460 + C74461 + C74462) * C154021 +
            (C5676 * C154415 + C4299 * C154473 + C4300 * C154483 +
             (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                 C154487) *
                C74048) *
               C578 +
           (((C134 * C602 - C135 * C585 - C134 * C603 + C154181 * C621) *
                 C154487 +
             C4930 * C154483 + C4931 * C154473 + C29254 * C154415) *
                C74048 +
            (C74463 + C74464 + C74465 + C74466) * C154021) *
               C579) *
              C154066 * C341 +
          (((C74462 + C74461 + C74460 + C74459) * C74048 +
            (C679 * C154487 + C1179 * C154483 + C3500 * C154473 +
             C4302 * C154415) *
                C154021) *
               C578 -
           ((C74055 + C74056 + C74057 + C74058) * C154021 +
            (C74054 + C74053 + C74052 + C74051) * C74048) *
               C577 -
           (((C134 * C4908 - C135 * C4905 - C134 * C4909 + C154181 * C4914) *
                 C154415 +
             C3505 * C154473 + C3504 * C154483 + C682 * C154487) *
                C154021 +
            (C74466 + C74465 + C74464 + C74463) * C74048) *
               C579) *
              C154066 * C154053)) /
            (p * q * std::sqrt(p + q));
    d2ee[63] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C70494 +
             C3210 * C154226) *
                C154486 +
            (C70501 + C70502) * C154479 + C70511 * C154460 + C70512 * C154407) *
               C154393 -
           (C71319 * C154407 + C71320 * C154460 + (C70919 + C70920) * C154479 +
            (C4300 * C154226 +
             (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                 C70494) *
                C154486) *
               C154146) *
              C154066 * C154461 +
          (((C70920 + C70919) * C154486 + (C70918 + C70917) * C154479 +
            (C70916 + C70915) * C154460 + (C71321 + C71322) * C154407) *
               C154146 -
           (C70513 * C154407 + C70514 * C154460 + (C70504 + C70503) * C154479 +
            (C70502 + C70501) * C154486) *
               C154393) *
              C154066 * C154462 +
          ((C70511 * C154486 + C70512 * C154479 + (C70508 + C70507) * C154460 +
            (C70509 + C70510) * C154407) *
               C154393 -
           (((C134 * C1145 - C135 * C1134 - C134 * C1146 + C154181 * C1152) *
                 C154226 +
             C966 * C70494) *
                C154407 +
            (C71322 + C71321) * C154460 + C71319 * C154479 + C71320 * C154486) *
               C154146) *
              C154066 * C818)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C154487 +
             C3210 * C154483 + C3211 * C154473 + C3214 * C154415) *
                C74048 +
            (C74051 + C74052 + C74053 + C74054) * C154021) *
               C154393 -
           ((C74459 + C74460 + C74461 + C74462) * C154021 +
            (C5676 * C154415 + C4299 * C154473 + C4300 * C154483 +
             (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                 C154487) *
                C74048) *
               C154146) *
              C154066 * C154461 +
          (((C74462 + C74461 + C74460 + C74459) * C74048 +
            (C74859 + C74860 + C74861 + C74862) * C154021) *
               C154146 -
           ((C74055 + C74056 + C74057 + C74058) * C154021 +
            (C74054 + C74053 + C74052 + C74051) * C74048) *
               C154393) *
              C154066 * C154462 +
          (((C74058 + C74057 + C74056 + C74055) * C74048 +
            (C74059 + C74060 + C74061 + C74062) * C154021) *
               C154393 -
           (((C134 * C4264 - C135 * C4257 - C134 * C4265 + C154181 * C4269) *
                 C154415 +
             C3963 * C154473 + C1180 * C154483 + C678 * C154487) *
                C154021 +
            (C74862 + C74861 + C74860 + C74859) * C74048) *
               C154146) *
              C154066 * C818)) /
            (p * q * std::sqrt(p + q));
    d2ee[64] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                C70494 +
            C3210 * C154226) *
               C154486 +
           (C70501 + C70502) * C154479 + C70511 * C154460 + C70512 * C154407) *
              C154082 * C154066 * C130 -
          (C70513 * C154407 + C70514 * C154460 + (C70504 + C70503) * C154479 +
           (C70502 + C70501) * C154486) *
              C154082 * C154066 * C131 +
          (C70511 * C154486 + C70512 * C154479 + (C70508 + C70507) * C154460 +
           (C70509 + C70510) * C154407) *
              C154082 * C154066 * C132 -
          (((C134 * C820 - C135 * C819 - C134 * C821 + C154181 * C822) *
                C154226 +
            C210 * C70494) *
               C154407 +
           (C70510 + C70509) * C154460 + C70513 * C154479 + C70514 * C154486) *
              C154082 * C154066 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C70494 +
             C3210 * C154226) *
                C154486 +
            (C70501 + C70502) * C154479 + C70511 * C154460 + C70512 * C154407) *
               C154082 * C338 -
           ((C70709 + C70710) * C154407 + (C70711 + C70712) * C154460 +
            (C70713 + C70714) * C154479 +
            (C3211 * C154226 + C3210 * C70494) * C154486) *
               C154082 * C339 +
           ((C3211 * C70494 + C3214 * C154226) * C154486 +
            (C70715 + C70716) * C154479 + (C70717 + C70718) * C154460 +
            (C70719 + C70720) * C154407) *
               C154082 * C340) *
              C341 +
          (((C70714 + C70713) * C154486 + (C70712 + C70711) * C154479 +
            (C70710 + C70709) * C154460 +
            (C440 * C70494 + C447 * C154226) * C154407) *
               C154082 * C339 -
           (C70513 * C154407 + C70514 * C154460 + (C70504 + C70503) * C154479 +
            (C70502 + C70501) * C154486) *
               C154082 * C338 -
           (((C134 * C1404 - C135 * C1399 - C134 * C1405 + C154181 * C1414) *
                 C154226 +
             C447 * C70494) *
                C154407 +
            (C70720 + C70719) * C154460 + (C70718 + C70717) * C154479 +
            (C70716 + C70715) * C154486) *
               C154082 * C340) *
              C154053)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                C154487 +
            C3210 * C154483 + C3211 * C154473 + C3214 * C154415) *
               C74048 +
           (C74051 + C74052 + C74053 + C74054) * C154021) *
              C154082 * C154066 * C130 -
          ((C74055 + C74056 + C74057 + C74058) * C154021 +
           (C74054 + C74053 + C74052 + C74051) * C74048) *
              C154082 * C154066 * C131 +
          ((C74058 + C74057 + C74056 + C74055) * C74048 +
           (C74059 + C74060 + C74061 + C74062) * C154021) *
              C154082 * C154066 * C132 -
          (((C134 * C1404 - C135 * C1399 - C134 * C1405 + C154181 * C1414) *
                C154415 +
            C447 * C154473 + C440 * C154483 + C208 * C154487) *
               C154021 +
           (C74062 + C74061 + C74060 + C74059) * C74048) *
              C154082 * C154066 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C154487 +
             C3210 * C154483 + C3211 * C154473 + C3214 * C154415) *
                C74048 +
            (C74051 + C74052 + C74053 + C74054) * C154021) *
               C154082 * C338 -
           ((C74257 + C74258 + C74259 + C74260) * C154021 +
            (C4687 * C154415 + C3214 * C154473 + C3211 * C154483 +
             C3210 * C154487) *
                C74048) *
               C154082 * C339 +
           ((C3211 * C154487 + C3214 * C154483 + C4687 * C154473 +
             C28341 * C154415) *
                C74048 +
            (C74261 + C74262 + C74263 + C74264) * C154021) *
               C154082 * C340) *
              C341 +
          (((C74260 + C74259 + C74258 + C74257) * C74048 +
            (C442 * C154487 + C445 * C154483 + C3212 * C154473 +
             C3216 * C154415) *
                C154021) *
               C154082 * C339 -
           ((C74055 + C74056 + C74057 + C74058) * C154021 +
            (C74054 + C74053 + C74052 + C74051) * C74048) *
               C154082 * C338 -
           (((C134 * C4671 - C135 * C4668 - C134 * C4672 + C154181 * C4677) *
                 C154415 +
             C3216 * C154473 + C3212 * C154483 + C445 * C154487) *
                C154021 +
            (C74264 + C74263 + C74262 + C74261) * C74048) *
               C154082 * C340) *
              C154053)) /
            (p * q * std::sqrt(p + q));
    d2ee[65] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C70494 +
             C3210 * C154226) *
                C154486 +
            (C70501 + C70502) * C154479 + C70511 * C154460 + C70512 * C154407) *
               C154082 * C154463 -
           (C71121 * C154407 + C71122 * C154460 + (C70713 + C70714) * C154479 +
            (C3211 * C154226 + C3210 * C70494) * C154486) *
               C154082 * C154464 +
           ((C3211 * C70494 + C3214 * C154226) * C154486 +
            (C70715 + C70716) * C154479 + (C70717 + C70718) * C154460 +
            (C70719 + C70720) * C154407) *
               C154082 * C1685) *
              C154384 +
          (((C70714 + C70713) * C154486 + (C70712 + C70711) * C154479 +
            (C70710 + C70709) * C154460 + (C71123 + C71124) * C154407) *
               C154082 * C154464 -
           (C70513 * C154407 + C70514 * C154460 + (C70504 + C70503) * C154479 +
            (C70502 + C70501) * C154486) *
               C154082 * C154463 -
           (((C134 * C1404 - C135 * C1399 - C134 * C1405 + C154181 * C1414) *
                 C154226 +
             C447 * C70494) *
                C154407 +
            (C70720 + C70719) * C154460 + (C70718 + C70717) * C154479 +
            (C70716 + C70715) * C154486) *
               C154082 * C1685) *
              C154053)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C154487 +
             C3210 * C154483 + C3211 * C154473 + C3214 * C154415) *
                C74048 +
            (C74051 + C74052 + C74053 + C74054) * C154021) *
               C154082 * C154463 -
           ((C74257 + C74258 + C74259 + C74260) * C154021 +
            (C4687 * C154415 + C3214 * C154473 + C3211 * C154483 +
             C3210 * C154487) *
                C74048) *
               C154082 * C154464 +
           ((C3211 * C154487 + C3214 * C154483 + C4687 * C154473 +
             C28341 * C154415) *
                C74048 +
            (C74261 + C74262 + C74263 + C74264) * C154021) *
               C154082 * C1685) *
              C154384 +
          (((C74260 + C74259 + C74258 + C74257) * C74048 +
            (C74661 + C74662 + C74663 + C74664) * C154021) *
               C154082 * C154464 -
           ((C74055 + C74056 + C74057 + C74058) * C154021 +
            (C74054 + C74053 + C74052 + C74051) * C74048) *
               C154082 * C154463 -
           (((C134 * C4671 - C135 * C4668 - C134 * C4672 + C154181 * C4677) *
                 C154415 +
             C3216 * C154473 + C3212 * C154483 + C445 * C154487) *
                C154021 +
            (C74264 + C74263 + C74262 + C74261) * C74048) *
               C154082 * C1685) *
              C154053)) /
            (p * q * std::sqrt(p + q));
    d2ee[66] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C70494 +
             C3210 * C154226) *
                C154486 +
            (C70501 + C70502) * C154479 + C70511 * C154460 + C70512 * C154407) *
               C154393 -
           (C71319 * C154407 + C71320 * C154460 + (C70919 + C70920) * C154479 +
            (C4300 * C154226 +
             (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                 C70494) *
                C154486) *
               C154146) *
              C154463 +
          (((C4300 * C70494 + C4299 * C154226) * C154486 +
            (C71581 + C71582) * C154479 + (C71583 + C71584) * C154460 +
            (C71585 + C71586) * C154407) *
               C154146 -
           (C71121 * C154407 + C71122 * C154460 + (C70713 + C70714) * C154479 +
            (C3211 * C154226 + C3210 * C70494) * C154486) *
               C154393) *
              C154464 +
          (((C3211 * C70494 + C3214 * C154226) * C154486 +
            (C70715 + C70716) * C154479 + (C70717 + C70718) * C154460 +
            (C70719 + C70720) * C154407) *
               C154393 -
           (((C134 * C4264 - C135 * C4257 - C134 * C4265 + C154181 * C4269) *
                 C154226 +
             C3963 * C70494) *
                C154407 +
            (C4302 * C154226 + C3500 * C70494) * C154460 +
            (C4301 * C154226 + C3501 * C70494) * C154479 +
            (C5676 * C154226 + C4299 * C70494) * C154486) *
               C154146) *
              C1685) *
         C154047) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C154487 +
             C3210 * C154483 + C3211 * C154473 + C3214 * C154415) *
                C74048 +
            (C74051 + C74052 + C74053 + C74054) * C154021) *
               C154393 -
           ((C74459 + C74460 + C74461 + C74462) * C154021 +
            (C5676 * C154415 + C4299 * C154473 + C4300 * C154483 +
             (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                 C154487) *
                C74048) *
               C154146) *
              C154463 +
          (((C4300 * C154487 + C4299 * C154483 + C5676 * C154473 +
             C28899 * C154415) *
                C74048 +
            (C75121 + C75122 + C75123 + C75124) * C154021) *
               C154146 -
           ((C74257 + C74258 + C74259 + C74260) * C154021 +
            (C4687 * C154415 + C3214 * C154473 + C3211 * C154483 +
             C3210 * C154487) *
                C74048) *
               C154393) *
              C154464 +
          (((C3211 * C154487 + C3214 * C154483 + C4687 * C154473 +
             C28341 * C154415) *
                C74048 +
            (C74261 + C74262 + C74263 + C74264) * C154021) *
               C154393 -
           (((C134 * C28882 - C135 * C28879 - C134 * C28883 +
              C154181 * C28885) *
                 C154415 +
             C28900 * C154473 + C4301 * C154483 + C3501 * C154487) *
                C154021 +
            (C29672 * C154415 + C28899 * C154473 + C5676 * C154483 +
             C4299 * C154487) *
                C74048) *
               C154146) *
              C1685) *
         C154047) /
            (p * q * std::sqrt(p + q));
    d2ee[67] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                C70494 +
            C3210 * C154226) *
               C154486 +
           (C70501 + C70502) * C154479 + C70511 * C154460 + C70512 * C154407) *
              C154082 * C1394 -
          (C71121 * C154407 + C71122 * C154460 + (C70713 + C70714) * C154479 +
           (C3211 * C154226 + C3210 * C70494) * C154486) *
              C154082 * C1395 +
          ((C3211 * C70494 + C3214 * C154226) * C154486 +
           (C70715 + C70716) * C154479 + (C70717 + C70718) * C154460 +
           (C70719 + C70720) * C154407) *
              C154082 * C1396 -
          (((C134 * C3149 - C135 * C3142 - C134 * C3150 + C154181 * C3154) *
                C154226 +
            C3217 * C70494) *
               C154407 +
           (C3216 * C154226 + C3212 * C70494) * C154460 +
           (C3215 * C154226 + C3213 * C70494) * C154479 +
           (C4687 * C154226 + C3214 * C70494) * C154486) *
              C154082 * C1397) *
         C154047) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C70494 +
             C3210 * C154226) *
                C154486 +
            (C70501 + C70502) * C154479 + C70511 * C154460 + C70512 * C154407) *
               C154082 * C1307 -
           (C71121 * C154407 + C71122 * C154460 + (C70713 + C70714) * C154479 +
            (C3211 * C154226 + C3210 * C70494) * C154486) *
               C154082 * C154118) *
              C1309 +
          (((C70714 + C70713) * C154486 + (C70712 + C70711) * C154479 +
            (C70710 + C70709) * C154460 + (C71123 + C71124) * C154407) *
               C154082 * C154118 -
           (C70513 * C154407 + C70514 * C154460 + (C70504 + C70503) * C154479 +
            (C70502 + C70501) * C154486) *
               C154082 * C1307) *
              C1310 +
          ((C70511 * C154486 + C70512 * C154479 + (C70508 + C70507) * C154460 +
            (C70509 + C70510) * C154407) *
               C154082 * C1307 -
           (((C134 * C377 - C135 * C354 - C134 * C378 + C154181 * C390) *
                 C154226 +
             C830 * C70494) *
                C154407 +
            (C71124 + C71123) * C154460 + C71121 * C154479 + C71122 * C154486) *
               C154082 * C154118) *
              C1311)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C70494 +
             C3210 * C154226) *
                C154486 +
            (C70501 + C70502) * C154479 + C70511 * C154460 + C70512 * C154407) *
               C577 -
           (C71319 * C154407 + C71320 * C154460 + (C70919 + C70920) * C154479 +
            (C4300 * C154226 +
             (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                 C70494) *
                C154486) *
               C578 +
           (((C134 * C602 - C135 * C585 - C134 * C603 + C154181 * C621) *
                 C70494 +
             C4930 * C154226) *
                C154486 +
            (C70921 + C70922) * C154479 + (C70923 + C70924) * C154460 +
            (C70925 + C70926) * C154407) *
               C579) *
              C1307 +
          (((C4300 * C70494 + C4299 * C154226) * C154486 +
            (C71581 + C71582) * C154479 + (C71583 + C71584) * C154460 +
            (C71585 + C71586) * C154407) *
               C578 -
           (C71121 * C154407 + C71122 * C154460 + (C70713 + C70714) * C154479 +
            (C3211 * C154226 + C3210 * C70494) * C154486) *
               C577 -
           (((C134 * C3451 - C135 * C3444 - C134 * C3452 + C154181 * C3456) *
                 C154226 +
             C11901 * C70494) *
                C154407 +
            (C3505 * C154226 + C3504 * C70494) * C154460 +
            (C3503 * C154226 + C3502 * C70494) * C154479 +
            (C4931 * C154226 + C4930 * C70494) * C154486) *
               C579) *
              C154118) *
         C154047) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C154487 +
             C3210 * C154483 + C3211 * C154473 + C3214 * C154415) *
                C74048 +
            (C74051 + C74052 + C74053 + C74054) * C154021) *
               C154082 * C1307 -
           ((C74257 + C74258 + C74259 + C74260) * C154021 +
            (C4687 * C154415 + C3214 * C154473 + C3211 * C154483 +
             C3210 * C154487) *
                C74048) *
               C154082 * C154118) *
              C1309 +
          (((C74260 + C74259 + C74258 + C74257) * C74048 +
            (C74661 + C74662 + C74663 + C74664) * C154021) *
               C154082 * C154118 -
           ((C74055 + C74056 + C74057 + C74058) * C154021 +
            (C74054 + C74053 + C74052 + C74051) * C74048) *
               C154082 * C1307) *
              C1310 +
          (((C74058 + C74057 + C74056 + C74055) * C74048 +
            (C74059 + C74060 + C74061 + C74062) * C154021) *
               C154082 * C1307 -
           (((C134 * C3149 - C135 * C3142 - C134 * C3150 + C154181 * C3154) *
                 C154415 +
             C3217 * C154473 + C446 * C154483 + C441 * C154487) *
                C154021 +
            (C74664 + C74663 + C74662 + C74661) * C74048) *
               C154082 * C154118) *
              C1311)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                C154487 +
            C3210 * C154483 + C3211 * C154473 + C3214 * C154415) *
               C74048 +
           (C74051 + C74052 + C74053 + C74054) * C154021) *
              C154082 * C1394 -
          ((C74257 + C74258 + C74259 + C74260) * C154021 +
           (C4687 * C154415 + C3214 * C154473 + C3211 * C154483 +
            C3210 * C154487) *
               C74048) *
              C154082 * C1395 +
          ((C3211 * C154487 + C3214 * C154483 + C4687 * C154473 +
            C28341 * C154415) *
               C74048 +
           (C74261 + C74262 + C74263 + C74264) * C154021) *
              C154082 * C1396 -
          (((C134 * C28324 - C135 * C28321 - C134 * C28325 + C154181 * C28327) *
                C154415 +
            C28342 * C154473 + C3215 * C154483 + C3213 * C154487) *
               C154021 +
           (C29115 * C154415 + C28341 * C154473 + C4687 * C154483 +
            C3214 * C154487) *
               C74048) *
              C154082 * C1397) *
         C154047) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C154487 +
             C3210 * C154483 + C3211 * C154473 + C3214 * C154415) *
                C74048 +
            (C74051 + C74052 + C74053 + C74054) * C154021) *
               C577 -
           ((C74459 + C74460 + C74461 + C74462) * C154021 +
            (C5676 * C154415 + C4299 * C154473 + C4300 * C154483 +
             (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                 C154487) *
                C74048) *
               C578 +
           (((C134 * C602 - C135 * C585 - C134 * C603 + C154181 * C621) *
                 C154487 +
             C4930 * C154483 + C4931 * C154473 + C29254 * C154415) *
                C74048 +
            (C74463 + C74464 + C74465 + C74466) * C154021) *
               C579) *
              C1307 +
          (((C4300 * C154487 + C4299 * C154483 + C5676 * C154473 +
             C28899 * C154415) *
                C74048 +
            (C75121 + C75122 + C75123 + C75124) * C154021) *
               C578 -
           ((C74257 + C74258 + C74259 + C74260) * C154021 +
            (C4687 * C154415 + C3214 * C154473 + C3211 * C154483 +
             C3210 * C154487) *
                C74048) *
               C577 -
           (((C134 * C28468 - C135 * C28465 - C134 * C28469 +
              C154181 * C28471) *
                 C154415 +
             C35157 * C154473 + C3503 * C154483 + C3502 * C154487) *
                C154021 +
            (C29255 * C154415 + C29254 * C154473 + C4931 * C154483 +
             C4930 * C154487) *
                C74048) *
               C579) *
              C154118) *
         C154047) /
            (p * q * std::sqrt(p + q));
    d2ee[68] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                  C70494 +
              C3210 * C154226) *
                 C154486 +
             (C70501 + C70502) * C154479 + C70511 * C154460 +
             C70512 * C154407) *
                C154393 -
            (C71319 * C154407 + C71320 * C154460 + (C70919 + C70920) * C154479 +
             (C4300 * C154226 +
              (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                  C70494) *
                 C154486) *
                C154146) *
               C1307 +
           (((C4300 * C70494 + C4299 * C154226) * C154486 +
             (C71581 + C71582) * C154479 + (C71583 + C71584) * C154460 +
             (C71585 + C71586) * C154407) *
                C154146 -
            (C71121 * C154407 + C71122 * C154460 + (C70713 + C70714) * C154479 +
             (C3211 * C154226 + C3210 * C70494) * C154486) *
                C154393) *
               C154118) *
              C154384 +
          ((((C70920 + C70919) * C154486 + (C70918 + C70917) * C154479 +
             (C70916 + C70915) * C154460 + (C71321 + C71322) * C154407) *
                C154146 -
            (C70513 * C154407 + C70514 * C154460 + (C70504 + C70503) * C154479 +
             (C70502 + C70501) * C154486) *
                C154393) *
               C1307 +
           (((C70714 + C70713) * C154486 + (C70712 + C70711) * C154479 +
             (C70710 + C70709) * C154460 + (C71123 + C71124) * C154407) *
                C154393 -
            (((C134 * C1977 - C135 * C1972 - C134 * C1978 + C154181 * C1987) *
                  C154226 +
              C1181 * C70494) *
                 C154407 +
             (C71586 + C71585) * C154460 + (C71584 + C71583) * C154479 +
             (C71582 + C71581) * C154486) *
                C154146) *
               C154118) *
              C154053)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                  C154487 +
              C3210 * C154483 + C3211 * C154473 + C3214 * C154415) *
                 C74048 +
             (C74051 + C74052 + C74053 + C74054) * C154021) *
                C154393 -
            ((C74459 + C74460 + C74461 + C74462) * C154021 +
             (C5676 * C154415 + C4299 * C154473 + C4300 * C154483 +
              (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                  C154487) *
                 C74048) *
                C154146) *
               C1307 +
           (((C4300 * C154487 + C4299 * C154483 + C5676 * C154473 +
              C28899 * C154415) *
                 C74048 +
             (C75121 + C75122 + C75123 + C75124) * C154021) *
                C154146 -
            ((C74257 + C74258 + C74259 + C74260) * C154021 +
             (C4687 * C154415 + C3214 * C154473 + C3211 * C154483 +
              C3210 * C154487) *
                 C74048) *
                C154393) *
               C154118) *
              C154384 +
          ((((C74462 + C74461 + C74460 + C74459) * C74048 +
             (C74859 + C74860 + C74861 + C74862) * C154021) *
                C154146 -
            ((C74055 + C74056 + C74057 + C74058) * C154021 +
             (C74054 + C74053 + C74052 + C74051) * C74048) *
                C154393) *
               C1307 +
           (((C74260 + C74259 + C74258 + C74257) * C74048 +
             (C74661 + C74662 + C74663 + C74664) * C154021) *
                C154393 -
            (((C134 * C5660 - C135 * C5657 - C134 * C5661 + C154181 * C5666) *
                  C154415 +
              C4302 * C154473 + C3500 * C154483 + C1179 * C154487) *
                 C154021 +
             (C75124 + C75123 + C75122 + C75121) * C74048) *
                C154146) *
               C154118) *
              C154053)) /
            (p * q * std::sqrt(p + q));
    d2ee[69] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C70494 +
             C3210 * C154226) *
                C154486 +
            (C70501 + C70502) * C154479 + C70511 * C154460 + C70512 * C154407) *
               C154082 * C1307 -
           (C71121 * C154407 + C71122 * C154460 + (C70713 + C70714) * C154479 +
            (C3211 * C154226 + C3210 * C70494) * C154486) *
               C154082 * C154118) *
              C1309 +
          (((C70714 + C70713) * C154486 + (C70712 + C70711) * C154479 +
            (C70710 + C70709) * C154460 + (C71123 + C71124) * C154407) *
               C154082 * C154118 -
           (C70513 * C154407 + C70514 * C154460 + (C70504 + C70503) * C154479 +
            (C70502 + C70501) * C154486) *
               C154082 * C1307) *
              C1310 +
          ((C70511 * C154486 + C70512 * C154479 + (C70508 + C70507) * C154460 +
            (C70509 + C70510) * C154407) *
               C154082 * C1307 -
           (((C134 * C377 - C135 * C354 - C134 * C378 + C154181 * C390) *
                 C154226 +
             C830 * C70494) *
                C154407 +
            (C71124 + C71123) * C154460 + C71121 * C154479 + C71122 * C154486) *
               C154082 * C154118) *
              C1311)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                C70494 +
            C3210 * C154226) *
               C154486 +
           (C70501 + C70502) * C154479 + C70511 * C154460 + C70512 * C154407) *
              C154082 * C1394 -
          (C71121 * C154407 + C71122 * C154460 + (C70713 + C70714) * C154479 +
           (C3211 * C154226 + C3210 * C70494) * C154486) *
              C154082 * C1395 +
          ((C3211 * C70494 + C3214 * C154226) * C154486 +
           (C70715 + C70716) * C154479 + (C70717 + C70718) * C154460 +
           (C70719 + C70720) * C154407) *
              C154082 * C1396 -
          (((C134 * C3149 - C135 * C3142 - C134 * C3150 + C154181 * C3154) *
                C154226 +
            C3217 * C70494) *
               C154407 +
           (C3216 * C154226 + C3212 * C70494) * C154460 +
           (C3215 * C154226 + C3213 * C70494) * C154479 +
           (C4687 * C154226 + C3214 * C70494) * C154486) *
              C154082 * C1397) *
         C154047) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C154487 +
             C3210 * C154483 + C3211 * C154473 + C3214 * C154415) *
                C74048 +
            (C74051 + C74052 + C74053 + C74054) * C154021) *
               C154082 * C1307 -
           ((C74257 + C74258 + C74259 + C74260) * C154021 +
            (C4687 * C154415 + C3214 * C154473 + C3211 * C154483 +
             C3210 * C154487) *
                C74048) *
               C154082 * C154118) *
              C1309 +
          (((C74260 + C74259 + C74258 + C74257) * C74048 +
            (C74661 + C74662 + C74663 + C74664) * C154021) *
               C154082 * C154118 -
           ((C74055 + C74056 + C74057 + C74058) * C154021 +
            (C74054 + C74053 + C74052 + C74051) * C74048) *
               C154082 * C1307) *
              C1310 +
          (((C74058 + C74057 + C74056 + C74055) * C74048 +
            (C74059 + C74060 + C74061 + C74062) * C154021) *
               C154082 * C1307 -
           (((C134 * C3149 - C135 * C3142 - C134 * C3150 + C154181 * C3154) *
                 C154415 +
             C3217 * C154473 + C446 * C154483 + C441 * C154487) *
                C154021 +
            (C74664 + C74663 + C74662 + C74661) * C74048) *
               C154082 * C154118) *
              C1311)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                C154487 +
            C3210 * C154483 + C3211 * C154473 + C3214 * C154415) *
               C74048 +
           (C74051 + C74052 + C74053 + C74054) * C154021) *
              C154082 * C1394 -
          ((C74257 + C74258 + C74259 + C74260) * C154021 +
           (C4687 * C154415 + C3214 * C154473 + C3211 * C154483 +
            C3210 * C154487) *
               C74048) *
              C154082 * C1395 +
          ((C3211 * C154487 + C3214 * C154483 + C4687 * C154473 +
            C28341 * C154415) *
               C74048 +
           (C74261 + C74262 + C74263 + C74264) * C154021) *
              C154082 * C1396 -
          (((C134 * C28324 - C135 * C28321 - C134 * C28325 + C154181 * C28327) *
                C154415 +
            C28342 * C154473 + C3215 * C154483 + C3213 * C154487) *
               C154021 +
           (C29115 * C154415 + C28341 * C154473 + C4687 * C154483 +
            C3214 * C154487) *
               C74048) *
              C154082 * C1397) *
         C154047) /
            (p * q * std::sqrt(p + q));
    d2ee[70] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                  C70494 +
              C3210 * C154226) *
                 C154486 +
             (C70501 + C70502) * C154479 + C70511 * C154460 +
             C70512 * C154407) *
                C2114 -
            (C71319 * C154407 + C71320 * C154460 + (C70919 + C70920) * C154479 +
             (C4300 * C154226 +
              (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                  C70494) *
                 C154486) *
                C154146) *
               C154392 +
           (((C4300 * C70494 + C4299 * C154226) * C154486 +
             (C71581 + C71582) * C154479 + (C71583 + C71584) * C154460 +
             (C71585 + C71586) * C154407) *
                C154146 -
            (C71121 * C154407 + C71122 * C154460 + (C70713 + C70714) * C154479 +
             (C3211 * C154226 + C3210 * C70494) * C154486) *
                C2114) *
               C154118) *
              C154384 +
          ((((C70920 + C70919) * C154486 + (C70918 + C70917) * C154479 +
             (C70916 + C70915) * C154460 + (C71321 + C71322) * C154407) *
                C154146 -
            (C70513 * C154407 + C70514 * C154460 + (C70504 + C70503) * C154479 +
             (C70502 + C70501) * C154486) *
                C2114) *
               C154392 +
           (((C70714 + C70713) * C154486 + (C70712 + C70711) * C154479 +
             (C70710 + C70709) * C154460 + (C71123 + C71124) * C154407) *
                C2114 -
            (((C134 * C1977 - C135 * C1972 - C134 * C1978 + C154181 * C1987) *
                  C154226 +
              C1181 * C70494) *
                 C154407 +
             (C71586 + C71585) * C154460 + (C71584 + C71583) * C154479 +
             (C71582 + C71581) * C154486) *
                C154146) *
               C154118) *
              C154053)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                  C154487 +
              C3210 * C154483 + C3211 * C154473 + C3214 * C154415) *
                 C74048 +
             (C74051 + C74052 + C74053 + C74054) * C154021) *
                C2114 -
            ((C74459 + C74460 + C74461 + C74462) * C154021 +
             (C5676 * C154415 + C4299 * C154473 + C4300 * C154483 +
              (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                  C154487) *
                 C74048) *
                C154146) *
               C154392 +
           (((C4300 * C154487 + C4299 * C154483 + C5676 * C154473 +
              C28899 * C154415) *
                 C74048 +
             (C75121 + C75122 + C75123 + C75124) * C154021) *
                C154146 -
            ((C74257 + C74258 + C74259 + C74260) * C154021 +
             (C4687 * C154415 + C3214 * C154473 + C3211 * C154483 +
              C3210 * C154487) *
                 C74048) *
                C2114) *
               C154118) *
              C154384 +
          ((((C74462 + C74461 + C74460 + C74459) * C74048 +
             (C74859 + C74860 + C74861 + C74862) * C154021) *
                C154146 -
            ((C74055 + C74056 + C74057 + C74058) * C154021 +
             (C74054 + C74053 + C74052 + C74051) * C74048) *
                C2114) *
               C154392 +
           (((C74260 + C74259 + C74258 + C74257) * C74048 +
             (C74661 + C74662 + C74663 + C74664) * C154021) *
                C2114 -
            (((C134 * C5660 - C135 * C5657 - C134 * C5661 + C154181 * C5666) *
                  C154415 +
              C4302 * C154473 + C3500 * C154483 + C1179 * C154487) *
                 C154021 +
             (C75124 + C75123 + C75122 + C75121) * C74048) *
                C154146) *
               C154118) *
              C154053)) /
            (p * q * std::sqrt(p + q));
    d2ee[71] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C70494 +
             C3210 * C154226) *
                C154486 +
            (C70501 + C70502) * C154479 + C70511 * C154460 + C70512 * C154407) *
               C154465 -
           (C71319 * C154407 + C71320 * C154460 + (C70919 + C70920) * C154479 +
            (C4300 * C154226 +
             (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                 C70494) *
                C154486) *
               C154466 +
           (((C134 * C602 - C135 * C585 - C134 * C603 + C154181 * C621) *
                 C70494 +
             C4930 * C154226) *
                C154486 +
            (C70921 + C70922) * C154479 + (C70923 + C70924) * C154460 +
            (C70925 + C70926) * C154407) *
               C2630) *
              C154392 +
          (((C4300 * C70494 + C4299 * C154226) * C154486 +
            (C71581 + C71582) * C154479 + (C71583 + C71584) * C154460 +
            (C71585 + C71586) * C154407) *
               C154466 -
           (C71121 * C154407 + C71122 * C154460 + (C70713 + C70714) * C154479 +
            (C3211 * C154226 + C3210 * C70494) * C154486) *
               C154465 -
           (((C134 * C3451 - C135 * C3444 - C134 * C3452 + C154181 * C3456) *
                 C154226 +
             C11901 * C70494) *
                C154407 +
            (C3505 * C154226 + C3504 * C70494) * C154460 +
            (C3503 * C154226 + C3502 * C70494) * C154479 +
            (C4931 * C154226 + C4930 * C70494) * C154486) *
               C2630) *
              C154118) *
         C154047) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C154487 +
             C3210 * C154483 + C3211 * C154473 + C3214 * C154415) *
                C74048 +
            (C74051 + C74052 + C74053 + C74054) * C154021) *
               C154465 -
           ((C74459 + C74460 + C74461 + C74462) * C154021 +
            (C5676 * C154415 + C4299 * C154473 + C4300 * C154483 +
             (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                 C154487) *
                C74048) *
               C154466 +
           (((C134 * C602 - C135 * C585 - C134 * C603 + C154181 * C621) *
                 C154487 +
             C4930 * C154483 + C4931 * C154473 + C29254 * C154415) *
                C74048 +
            (C74463 + C74464 + C74465 + C74466) * C154021) *
               C2630) *
              C154392 +
          (((C4300 * C154487 + C4299 * C154483 + C5676 * C154473 +
             C28899 * C154415) *
                C74048 +
            (C75121 + C75122 + C75123 + C75124) * C154021) *
               C154466 -
           ((C74257 + C74258 + C74259 + C74260) * C154021 +
            (C4687 * C154415 + C3214 * C154473 + C3211 * C154483 +
             C3210 * C154487) *
                C74048) *
               C154465 -
           (((C134 * C28468 - C135 * C28465 - C134 * C28469 +
              C154181 * C28471) *
                 C154415 +
             C35157 * C154473 + C3503 * C154483 + C3502 * C154487) *
                C154021 +
            (C29255 * C154415 + C29254 * C154473 + C4931 * C154483 +
             C4930 * C154487) *
                C74048) *
               C2630) *
              C154118) *
         C154047) /
            (p * q * std::sqrt(p + q));
    d2ee[72] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C70494 +
             C3210 * C154226) *
                C154486 +
            (C70501 + C70502) * C154479 + C70511 * C154460 + C70512 * C154407) *
               C2114 -
           (C71319 * C154407 + C71320 * C154460 + (C70919 + C70920) * C154479 +
            (C4300 * C154226 +
             (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                 C70494) *
                C154486) *
               C154146) *
              C338 +
          (((C4300 * C70494 + C4299 * C154226) * C154486 +
            (C71581 + C71582) * C154479 + (C71583 + C71584) * C154460 +
            (C71585 + C71586) * C154407) *
               C154146 -
           (C71121 * C154407 + C71122 * C154460 + (C70713 + C70714) * C154479 +
            (C3211 * C154226 + C3210 * C70494) * C154486) *
               C2114) *
              C339 +
          (((C3211 * C70494 + C3214 * C154226) * C154486 +
            (C70715 + C70716) * C154479 + (C70717 + C70718) * C154460 +
            (C70719 + C70720) * C154407) *
               C2114 -
           (((C134 * C4264 - C135 * C4257 - C134 * C4265 + C154181 * C4269) *
                 C154226 +
             C3963 * C70494) *
                C154407 +
            (C4302 * C154226 + C3500 * C70494) * C154460 +
            (C4301 * C154226 + C3501 * C70494) * C154479 +
            (C5676 * C154226 + C4299 * C70494) * C154486) *
               C154146) *
              C340) *
         C154047) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C70494 +
             C3210 * C154226) *
                C154486 +
            (C70501 + C70502) * C154479 + C70511 * C154460 + C70512 * C154407) *
               C2114 -
           (C71319 * C154407 + C71320 * C154460 + (C70919 + C70920) * C154479 +
            (C4300 * C154226 +
             (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                 C70494) *
                C154486) *
               C154146) *
              C154066 * C1309 +
          (((C70920 + C70919) * C154486 + (C70918 + C70917) * C154479 +
            (C70916 + C70915) * C154460 + (C71321 + C71322) * C154407) *
               C154146 -
           (C70513 * C154407 + C70514 * C154460 + (C70504 + C70503) * C154479 +
            (C70502 + C70501) * C154486) *
               C2114) *
              C154066 * C1310 +
          ((C70511 * C154486 + C70512 * C154479 + (C70508 + C70507) * C154460 +
            (C70509 + C70510) * C154407) *
               C2114 -
           (((C134 * C1145 - C135 * C1134 - C134 * C1146 + C154181 * C1152) *
                 C154226 +
             C966 * C70494) *
                C154407 +
            (C71322 + C71321) * C154460 + C71319 * C154479 + C71320 * C154486) *
               C154146) *
              C154066 * C1311)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                C70494 +
            C3210 * C154226) *
               C154486 +
           (C70501 + C70502) * C154479 + C70511 * C154460 + C70512 * C154407) *
              C2320 -
          (C71319 * C154407 + C71320 * C154460 + (C70919 + C70920) * C154479 +
           (C4300 * C154226 +
            (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                C70494) *
               C154486) *
              C2321 +
          (((C134 * C602 - C135 * C585 - C134 * C603 + C154181 * C621) *
                C70494 +
            C4930 * C154226) *
               C154486 +
           (C70921 + C70922) * C154479 + (C70923 + C70924) * C154460 +
           (C70925 + C70926) * C154407) *
              C2322 -
          (((C134 * C8648 - C135 * C8647 - C134 * C8649 + C154181 * C8650) *
                C154226 +
            (C134 * C2331 - C135 * C2325 - C134 * C2332 + C154181 * C2340) *
                C70494) *
               C154407 +
           ((C134 * C6266 - C135 * C6259 - C134 * C6267 + C154181 * C6277) *
                C154226 +
            (C134 * C2333 - C135 * C2326 - C134 * C2334 + C154181 * C2341) *
                C70494) *
               C154460 +
           ((C134 * C6270 - C135 * C6261 - C134 * C6271 + C154181 * C6279) *
                C154226 +
            (C134 * C2335 - C135 * C2327 - C134 * C2336 + C154181 * C2342) *
                C70494) *
               C154479 +
           ((C134 * C6274 - C135 * C6263 - C134 * C6275 + C154181 * C6281) *
                C154226 +
            (C134 * C2337 - C135 * C2328 - C134 * C2338 + C154181 * C2343) *
                C70494) *
               C154486) *
              C2323) *
         C154066 * C154047) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C154487 +
             C3210 * C154483 + C3211 * C154473 + C3214 * C154415) *
                C74048 +
            (C74051 + C74052 + C74053 + C74054) * C154021) *
               C2114 -
           ((C74459 + C74460 + C74461 + C74462) * C154021 +
            (C5676 * C154415 + C4299 * C154473 + C4300 * C154483 +
             (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                 C154487) *
                C74048) *
               C154146) *
              C154066 * C1309 +
          (((C74462 + C74461 + C74460 + C74459) * C74048 +
            (C74859 + C74860 + C74861 + C74862) * C154021) *
               C154146 -
           ((C74055 + C74056 + C74057 + C74058) * C154021 +
            (C74054 + C74053 + C74052 + C74051) * C74048) *
               C2114) *
              C154066 * C1310 +
          (((C74058 + C74057 + C74056 + C74055) * C74048 +
            (C74059 + C74060 + C74061 + C74062) * C154021) *
               C2114 -
           (((C134 * C4264 - C135 * C4257 - C134 * C4265 + C154181 * C4269) *
                 C154415 +
             C3963 * C154473 + C1180 * C154483 + C678 * C154487) *
                C154021 +
            (C74862 + C74861 + C74860 + C74859) * C74048) *
               C154146) *
              C154066 * C1311)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C154487 +
             C3210 * C154483 + C3211 * C154473 + C3214 * C154415) *
                C74048 +
            (C74051 + C74052 + C74053 + C74054) * C154021) *
               C2114 -
           ((C74459 + C74460 + C74461 + C74462) * C154021 +
            (C5676 * C154415 + C4299 * C154473 + C4300 * C154483 +
             (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                 C154487) *
                C74048) *
               C154146) *
              C338 +
          (((C4300 * C154487 + C4299 * C154483 + C5676 * C154473 +
             C28899 * C154415) *
                C74048 +
            (C75121 + C75122 + C75123 + C75124) * C154021) *
               C154146 -
           ((C74257 + C74258 + C74259 + C74260) * C154021 +
            (C4687 * C154415 + C3214 * C154473 + C3211 * C154483 +
             C3210 * C154487) *
                C74048) *
               C2114) *
              C339 +
          (((C3211 * C154487 + C3214 * C154483 + C4687 * C154473 +
             C28341 * C154415) *
                C74048 +
            (C74261 + C74262 + C74263 + C74264) * C154021) *
               C2114 -
           (((C134 * C28882 - C135 * C28879 - C134 * C28883 +
              C154181 * C28885) *
                 C154415 +
             C28900 * C154473 + C4301 * C154483 + C3501 * C154487) *
                C154021 +
            (C29672 * C154415 + C28899 * C154473 + C5676 * C154483 +
             C4299 * C154487) *
                C74048) *
               C154146) *
              C340) *
         C154047) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                C154487 +
            C3210 * C154483 + C3211 * C154473 + C3214 * C154415) *
               C74048 +
           (C74051 + C74052 + C74053 + C74054) * C154021) *
              C2320 -
          ((C74459 + C74460 + C74461 + C74462) * C154021 +
           (C5676 * C154415 + C4299 * C154473 + C4300 * C154483 +
            (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                C154487) *
               C74048) *
              C2321 +
          (((C134 * C602 - C135 * C585 - C134 * C603 + C154181 * C621) *
                C154487 +
            C4930 * C154483 + C4931 * C154473 + C29254 * C154415) *
               C74048 +
           (C74463 + C74464 + C74465 + C74466) * C154021) *
              C2322 -
          (((C134 * C31817 - C135 * C31816 - C134 * C31818 + C154181 * C31819) *
                C154415 +
            (C134 * C6268 - C135 * C6260 - C134 * C6269 + C154181 * C6278) *
                C154473 +
            (C134 * C6270 - C135 * C6261 - C134 * C6271 + C154181 * C6279) *
                C154483 +
            (C134 * C2335 - C135 * C2327 - C134 * C2336 + C154181 * C2342) *
                C154487) *
               C154021 +
           ((C134 * C30002 - C135 * C29999 - C134 * C30003 + C154181 * C30005) *
                C154415 +
            (C134 * C6272 - C135 * C6262 - C134 * C6273 + C154181 * C6280) *
                C154473 +
            (C134 * C6274 - C135 * C6263 - C134 * C6275 + C154181 * C6281) *
                C154483 +
            (C134 * C2337 - C135 * C2328 - C134 * C2338 + C154181 * C2343) *
                C154487) *
               C74048) *
              C2323) *
         C154066 * C154047) /
            (p * q * std::sqrt(p + q));
    d2ee[73] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C70494 +
             C3210 * C154226) *
                C154486 +
            (C70501 + C70502) * C154479 + C70511 * C154460 + C70512 * C154407) *
               C154465 -
           (C71319 * C154407 + C71320 * C154460 + (C70919 + C70920) * C154479 +
            (C4300 * C154226 +
             (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                 C70494) *
                C154486) *
               C154466 +
           (((C134 * C602 - C135 * C585 - C134 * C603 + C154181 * C621) *
                 C70494 +
             C4930 * C154226) *
                C154486 +
            (C70921 + C70922) * C154479 + (C70923 + C70924) * C154460 +
            (C70925 + C70926) * C154407) *
               C2630) *
              C154066 * C154384 +
          (((C70920 + C70919) * C154486 + (C70918 + C70917) * C154479 +
            (C70916 + C70915) * C154460 + (C71321 + C71322) * C154407) *
               C154466 -
           (C70513 * C154407 + C70514 * C154460 + (C70504 + C70503) * C154479 +
            (C70502 + C70501) * C154486) *
               C154465 -
           (((C134 * C1546 - C135 * C1541 - C134 * C1547 + C154181 * C1556) *
                 C154226 +
             C684 * C70494) *
                C154407 +
            (C70926 + C70925) * C154460 + (C70924 + C70923) * C154479 +
            (C70922 + C70921) * C154486) *
               C2630) *
              C154066 * C154053)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C154487 +
             C3210 * C154483 + C3211 * C154473 + C3214 * C154415) *
                C74048 +
            (C74051 + C74052 + C74053 + C74054) * C154021) *
               C154465 -
           ((C74459 + C74460 + C74461 + C74462) * C154021 +
            (C5676 * C154415 + C4299 * C154473 + C4300 * C154483 +
             (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                 C154487) *
                C74048) *
               C154466 +
           (((C134 * C602 - C135 * C585 - C134 * C603 + C154181 * C621) *
                 C154487 +
             C4930 * C154483 + C4931 * C154473 + C29254 * C154415) *
                C74048 +
            (C74463 + C74464 + C74465 + C74466) * C154021) *
               C2630) *
              C154066 * C154384 +
          (((C74462 + C74461 + C74460 + C74459) * C74048 +
            (C74859 + C74860 + C74861 + C74862) * C154021) *
               C154466 -
           ((C74055 + C74056 + C74057 + C74058) * C154021 +
            (C74054 + C74053 + C74052 + C74051) * C74048) *
               C154465 -
           (((C134 * C4908 - C135 * C4905 - C134 * C4909 + C154181 * C4914) *
                 C154415 +
             C3505 * C154473 + C3504 * C154483 + C682 * C154487) *
                C154021 +
            (C74466 + C74465 + C74464 + C74463) * C74048) *
               C2630) *
              C154066 * C154053)) /
            (p * q * std::sqrt(p + q));
    d2ee[74] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C70494 +
             C3210 * C154226) *
                C154486 +
            (C70501 + C70502) * C154479 + C70511 * C154460 + C70512 * C154407) *
               C2114 -
           (C71319 * C154407 + C71320 * C154460 + (C70919 + C70920) * C154479 +
            (C4300 * C154226 +
             (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                 C70494) *
                C154486) *
               C154146) *
              C154066 * C1309 +
          (((C70920 + C70919) * C154486 + (C70918 + C70917) * C154479 +
            (C70916 + C70915) * C154460 + (C71321 + C71322) * C154407) *
               C154146 -
           (C70513 * C154407 + C70514 * C154460 + (C70504 + C70503) * C154479 +
            (C70502 + C70501) * C154486) *
               C2114) *
              C154066 * C1310 +
          ((C70511 * C154486 + C70512 * C154479 + (C70508 + C70507) * C154460 +
            (C70509 + C70510) * C154407) *
               C2114 -
           (((C134 * C1145 - C135 * C1134 - C134 * C1146 + C154181 * C1152) *
                 C154226 +
             C966 * C70494) *
                C154407 +
            (C71322 + C71321) * C154460 + C71319 * C154479 + C71320 * C154486) *
               C154146) *
              C154066 * C1311)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C70494 +
             C3210 * C154226) *
                C154486 +
            (C70501 + C70502) * C154479 + C70511 * C154460 + C70512 * C154407) *
               C2114 -
           (C71319 * C154407 + C71320 * C154460 + (C70919 + C70920) * C154479 +
            (C4300 * C154226 +
             (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                 C70494) *
                C154486) *
               C154146) *
              C338 +
          (((C4300 * C70494 + C4299 * C154226) * C154486 +
            (C71581 + C71582) * C154479 + (C71583 + C71584) * C154460 +
            (C71585 + C71586) * C154407) *
               C154146 -
           (C71121 * C154407 + C71122 * C154460 + (C70713 + C70714) * C154479 +
            (C3211 * C154226 + C3210 * C70494) * C154486) *
               C2114) *
              C339 +
          (((C3211 * C70494 + C3214 * C154226) * C154486 +
            (C70715 + C70716) * C154479 + (C70717 + C70718) * C154460 +
            (C70719 + C70720) * C154407) *
               C2114 -
           (((C134 * C4264 - C135 * C4257 - C134 * C4265 + C154181 * C4269) *
                 C154226 +
             C3963 * C70494) *
                C154407 +
            (C4302 * C154226 + C3500 * C70494) * C154460 +
            (C4301 * C154226 + C3501 * C70494) * C154479 +
            (C5676 * C154226 + C4299 * C70494) * C154486) *
               C154146) *
              C340) *
         C154047) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C154487 +
             C3210 * C154483 + C3211 * C154473 + C3214 * C154415) *
                C74048 +
            (C74051 + C74052 + C74053 + C74054) * C154021) *
               C2114 -
           ((C74459 + C74460 + C74461 + C74462) * C154021 +
            (C5676 * C154415 + C4299 * C154473 + C4300 * C154483 +
             (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                 C154487) *
                C74048) *
               C154146) *
              C154066 * C1309 +
          (((C74462 + C74461 + C74460 + C74459) * C74048 +
            (C74859 + C74860 + C74861 + C74862) * C154021) *
               C154146 -
           ((C74055 + C74056 + C74057 + C74058) * C154021 +
            (C74054 + C74053 + C74052 + C74051) * C74048) *
               C2114) *
              C154066 * C1310 +
          (((C74058 + C74057 + C74056 + C74055) * C74048 +
            (C74059 + C74060 + C74061 + C74062) * C154021) *
               C2114 -
           (((C134 * C4264 - C135 * C4257 - C134 * C4265 + C154181 * C4269) *
                 C154415 +
             C3963 * C154473 + C1180 * C154483 + C678 * C154487) *
                C154021 +
            (C74862 + C74861 + C74860 + C74859) * C74048) *
               C154146) *
              C154066 * C1311)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C154487 +
             C3210 * C154483 + C3211 * C154473 + C3214 * C154415) *
                C74048 +
            (C74051 + C74052 + C74053 + C74054) * C154021) *
               C2114 -
           ((C74459 + C74460 + C74461 + C74462) * C154021 +
            (C5676 * C154415 + C4299 * C154473 + C4300 * C154483 +
             (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                 C154487) *
                C74048) *
               C154146) *
              C338 +
          (((C4300 * C154487 + C4299 * C154483 + C5676 * C154473 +
             C28899 * C154415) *
                C74048 +
            (C75121 + C75122 + C75123 + C75124) * C154021) *
               C154146 -
           ((C74257 + C74258 + C74259 + C74260) * C154021 +
            (C4687 * C154415 + C3214 * C154473 + C3211 * C154483 +
             C3210 * C154487) *
                C74048) *
               C2114) *
              C339 +
          (((C3211 * C154487 + C3214 * C154483 + C4687 * C154473 +
             C28341 * C154415) *
                C74048 +
            (C74261 + C74262 + C74263 + C74264) * C154021) *
               C2114 -
           (((C134 * C28882 - C135 * C28879 - C134 * C28883 +
              C154181 * C28885) *
                 C154415 +
             C28900 * C154473 + C4301 * C154483 + C3501 * C154487) *
                C154021 +
            (C29672 * C154415 + C28899 * C154473 + C5676 * C154483 +
             C4299 * C154487) *
                C74048) *
               C154146) *
              C340) *
         C154047) /
            (p * q * std::sqrt(p + q));
    d2ee[75] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
              C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
                 C154222 +
             (C101527 + C101528) * C154229 + C101539 * C82853) *
                C154373 +
            ((C97340 + C97341) * C154222 + C101466 * C154229 +
             C101467 * C82853) *
                C154021) *
               C154082 * C154392 -
           ((C101540 * C82853 + C101476 * C154229 + C101477 * C154222) *
                C154021 +
            (C103386 * C82853 + (C101530 + C101529) * C154229 +
             (C101528 + C101527) * C154222) *
                C154373) *
               C154082 * C154118) *
              C154461 +
          (((C101466 * C154222 + C101467 * C154229 + C101541 * C82853) *
                C154373 +
            (C102164 * C154222 + C102165 * C154229 +
             (C101537 + C101538) * C82853) *
                C154021) *
               C154082 * C154118 -
           ((C101502 * C82853 + C98109 * C154229 +
             (C97343 + C97342) * C154222) *
                C154021 +
            (C101476 * C82853 + C101477 * C154229 +
             (C97341 + C97340) * C154222) *
                C154373) *
               C154082 * C154392) *
              C154462 +
          (((C97350 * C154222 + C102164 * C154229 + C102165 * C82853) *
                C154373 +
            (C97351 * C154222 + C111310 * C154229 +
             (C97634 + C97635) * C82853) *
                C154021) *
               C154082 * C154392 -
           (((C97277 * C4264 - C97278 * C4257 - C97277 * C4265 +
              C154268 * C4269 + C97275 * C1406 - C97276 * C1400 -
              C97275 * C1407 + C97273 * C1415) *
                 C82853 +
             (C97635 + C97634) * C154229 + C98108 * C154222) *
                C154021 +
            ((C101538 + C101537) * C82853 + C101502 * C154229 +
             C98109 * C154222) *
                C154373) *
               C154082 * C154118) *
              C818)) /
        (p * q * std::sqrt(p + q));
    d2ee[76] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
               C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
                  C154222 +
              (C101527 + C101528) * C154229 + C101539 * C82853) *
                 C154373 +
             ((C97340 + C97341) * C154222 + C101466 * C154229 +
              C101467 * C82853) *
                 C154021) *
                C154393 -
            ((C102856 * C82853 + C102857 * C154229 +
              (C97906 + C97907) * C154222) *
                 C154021 +
             (C104685 * C82853 + (C102898 + C102899) * C154229 +
              (C97277 * C602 - C97278 * C585 - C97277 * C603 + C154268 * C621 +
               C97275 * C600 - C97276 * C584 - C97275 * C601 + C97273 * C620) *
                  C154222) *
                 C154373) *
                C154146) *
               C154392 +
           ((((C102899 + C102898) * C154222 + (C102897 + C102896) * C154229 +
              (C104698 + C104699) * C82853) *
                 C154373 +
             (C102874 * C154222 + C102875 * C154229 +
              (C102900 + C102901) * C82853) *
                 C154021) *
                C154146 -
            ((C101540 * C82853 + C101476 * C154229 + C101477 * C154222) *
                 C154021 +
             (C103386 * C82853 + (C101530 + C101529) * C154229 +
              (C101528 + C101527) * C154222) *
                 C154373) *
                C154393) *
               C154118) *
              C341 +
          (((((C97907 + C97906) * C154222 + C102874 * C154229 +
              C102875 * C82853) *
                 C154373 +
             ((C97905 + C97904) * C154222 + C111992 * C154229 +
              (C102468 + C102469) * C82853) *
                 C154021) *
                C154146 -
            ((C101502 * C82853 + C98109 * C154229 +
              (C97343 + C97342) * C154222) *
                 C154021 +
             (C101476 * C82853 + C101477 * C154229 +
              (C97341 + C97340) * C154222) *
                 C154373) *
                C154393) *
               C154392 +
           (((C101466 * C154222 + C101467 * C154229 + C101541 * C82853) *
                 C154373 +
             (C102164 * C154222 + C102165 * C154229 +
              (C101537 + C101538) * C82853) *
                 C154021) *
                C154393 -
            (((C97277 * C4908 - C97278 * C4905 - C97277 * C4909 +
               C154268 * C4914 + C97275 * C4262 - C97276 * C4256 -
               C97275 * C4263 + C97273 * C4268) *
                  C82853 +
              (C102469 + C102468) * C154229 + C111602 * C154222) *
                 C154021 +
             ((C102901 + C102900) * C82853 + C102856 * C154229 +
              C102857 * C154222) *
                 C154373) *
                C154146) *
               C154118) *
              C154053)) /
        (p * q * std::sqrt(p + q));
    d2ee[77] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
              C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
                 C154222 +
             (C101527 + C101528) * C154229 + C101539 * C82853) *
                C154373 +
            ((C97340 + C97341) * C154222 + C101466 * C154229 +
             C101467 * C82853) *
                C154021) *
               C154082 * C338 -
           ((C101540 * C82853 + C101476 * C154229 + C101477 * C154222) *
                C154021 +
            (C103386 * C82853 + (C101530 + C101529) * C154229 +
             (C101528 + C101527) * C154222) *
                C154373) *
               C154082 * C339 +
           ((C101539 * C154222 + C130733 * C154229 +
             (C103399 + C103400) * C82853) *
                C154373 +
            (C101467 * C154222 + C101541 * C154229 +
             (C101535 + C101536) * C82853) *
                C154021) *
               C154082 * C340) *
              C341 +
          (((C101466 * C154222 + C101467 * C154229 + C101541 * C82853) *
                C154373 +
            (C102164 * C154222 + C102165 * C154229 +
             (C101537 + C101538) * C82853) *
                C154021) *
               C154082 * C339 -
           ((C101502 * C82853 + C98109 * C154229 +
             (C97343 + C97342) * C154222) *
                C154021 +
            (C101476 * C82853 + C101477 * C154229 +
             (C97341 + C97340) * C154222) *
                C154373) *
               C154082 * C338 -
           (((C97277 * C5660 - C97278 * C5657 - C97277 * C5661 +
              C154268 * C5666 + C97275 * C3147 - C97276 * C3141 -
              C97275 * C3148 + C97273 * C3153) *
                 C82853 +
             (C101538 + C101537) * C154229 + C101502 * C154222) *
                C154021 +
            ((C101536 + C101535) * C82853 + C101540 * C154229 +
             C101476 * C154222) *
                C154373) *
               C154082 * C340) *
              C154053)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
             C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
                C154222 +
            (C101527 + C101528) * C154229 + C101539 * C82853) *
               C154373 +
           ((C97340 + C97341) * C154222 + C101466 * C154229 +
            C101467 * C82853) *
               C154021) *
              C154082 * C154066 * C130 -
          ((C101502 * C82853 + C98109 * C154229 + (C97343 + C97342) * C154222) *
               C154021 +
           (C101476 * C82853 + C101477 * C154229 +
            (C97341 + C97340) * C154222) *
               C154373) *
              C154082 * C154066 * C131 +
          ((C97350 * C154222 + C102164 * C154229 + C102165 * C82853) * C154373 +
           (C97351 * C154222 + C111310 * C154229 + (C97634 + C97635) * C82853) *
               C154021) *
              C154082 * C154066 * C132 -
          (((C97277 * C1977 - C97278 * C1972 - C97277 * C1978 +
             C154268 * C1987 + C97275 * C373 - C97276 * C352 - C97275 * C374 +
             C97273 * C388) *
                C82853 +
            (C98125 + C98124) * C154229 + C97352 * C154222) *
               C154021 +
           ((C97635 + C97634) * C82853 + C98108 * C154229 + C97353 * C154222) *
               C154373) *
              C154082 * C154066 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
              C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
                 C154222 +
             (C101527 + C101528) * C154229 + C101539 * C82853) *
                C154373 +
            ((C97340 + C97341) * C154222 + C101466 * C154229 +
             C101467 * C82853) *
                C154021) *
               C577 -
           ((C102856 * C82853 + C102857 * C154229 +
             (C97906 + C97907) * C154222) *
                C154021 +
            (C104685 * C82853 + (C102898 + C102899) * C154229 +
             (C97277 * C602 - C97278 * C585 - C97277 * C603 + C154268 * C621 +
              C97275 * C600 - C97276 * C584 - C97275 * C601 + C97273 * C620) *
                 C154222) *
                C154373) *
               C578 +
           (((C97275 * C602 - C97276 * C585 - C97275 * C603 + C97273 * C621 +
              C97277 * C2337 - C97278 * C2328 - C97277 * C2338 +
              C154268 * C2343) *
                 C154222 +
             (C103715 + C103716) * C154229 + (C103717 + C103718) * C82853) *
                C154373 +
            ((C97908 + C97909) * C154222 + (C101870 + C101871) * C154229 +
             (C101872 + C101873) * C82853) *
                C154021) *
               C579) *
              C154066 * C341 +
          ((((C97907 + C97906) * C154222 + C102874 * C154229 +
             C102875 * C82853) *
                C154373 +
            ((C97905 + C97904) * C154222 + C111992 * C154229 +
             (C102468 + C102469) * C82853) *
                C154021) *
               C578 -
           ((C101502 * C82853 + C98109 * C154229 +
             (C97343 + C97342) * C154222) *
                C154021 +
            (C101476 * C82853 + C101477 * C154229 +
             (C97341 + C97340) * C154222) *
                C154373) *
               C577 -
           (((C97277 * C6264 - C97278 * C6258 - C97277 * C6265 +
              C154268 * C6276 + C97275 * C3449 - C97276 * C3443 -
              C97275 * C3450 + C97273 * C3455) *
                 C82853 +
             (C111017 + C111016) * C154229 + (C97911 + C97910) * C154222) *
                C154021 +
            ((C101873 + C101872) * C82853 + (C101871 + C101870) * C154229 +
             (C97909 + C97908) * C154222) *
                C154373) *
               C579) *
              C154066 * C154053)) /
            (p * q * std::sqrt(p + q));
    d2ee[78] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
              C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
                 C154222 +
             (C101527 + C101528) * C154229 + C101539 * C82853) *
                C154373 +
            ((C97340 + C97341) * C154222 + C101466 * C154229 +
             C101467 * C82853) *
                C154021) *
               C154393 -
           ((C102856 * C82853 + C102857 * C154229 +
             (C97906 + C97907) * C154222) *
                C154021 +
            (C104685 * C82853 + (C102898 + C102899) * C154229 +
             (C97277 * C602 - C97278 * C585 - C97277 * C603 + C154268 * C621 +
              C97275 * C600 - C97276 * C584 - C97275 * C601 + C97273 * C620) *
                 C154222) *
                C154373) *
               C154146) *
              C154066 * C154461 +
          ((((C97907 + C97906) * C154222 + C102874 * C154229 +
             C102875 * C82853) *
                C154373 +
            ((C97905 + C97904) * C154222 + C111992 * C154229 +
             (C102468 + C102469) * C82853) *
                C154021) *
               C154146 -
           ((C101502 * C82853 + C98109 * C154229 +
             (C97343 + C97342) * C154222) *
                C154021 +
            (C101476 * C82853 + C101477 * C154229 +
             (C97341 + C97340) * C154222) *
                C154373) *
               C154393) *
              C154066 * C154462 +
          (((C97350 * C154222 + C102164 * C154229 + C102165 * C82853) *
                C154373 +
            (C97351 * C154222 + C111310 * C154229 +
             (C97634 + C97635) * C82853) *
                C154021) *
               C154393 -
           (((C97277 * C3451 - C97278 * C3444 - C97277 * C3452 +
              C154268 * C3456 + C97275 * C1979 - C97276 * C1973 -
              C97275 * C1980 + C97273 * C1988) *
                 C82853 +
             (C98637 + C98636) * C154229 + C98320 * C154222) *
                C154021 +
            ((C102469 + C102468) * C82853 + C111602 * C154229 +
             C98321 * C154222) *
                C154373) *
               C154146) *
              C154066 * C818)) /
        (p * q * std::sqrt(p + q));
    d2ee[79] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
             C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
                C154222 +
            (C101527 + C101528) * C154229 + C101539 * C82853) *
               C154373 +
           ((C97340 + C97341) * C154222 + C101466 * C154229 +
            C101467 * C82853) *
               C154021) *
              C154082 * C154066 * C130 -
          ((C101502 * C82853 + C98109 * C154229 + (C97343 + C97342) * C154222) *
               C154021 +
           (C101476 * C82853 + C101477 * C154229 +
            (C97341 + C97340) * C154222) *
               C154373) *
              C154082 * C154066 * C131 +
          ((C97350 * C154222 + C102164 * C154229 + C102165 * C82853) * C154373 +
           (C97351 * C154222 + C111310 * C154229 + (C97634 + C97635) * C82853) *
               C154021) *
              C154082 * C154066 * C132 -
          (((C97277 * C1977 - C97278 * C1972 - C97277 * C1978 +
             C154268 * C1987 + C97275 * C373 - C97276 * C352 - C97275 * C374 +
             C97273 * C388) *
                C82853 +
            (C98125 + C98124) * C154229 + C97352 * C154222) *
               C154021 +
           ((C97635 + C97634) * C82853 + C98108 * C154229 + C97353 * C154222) *
               C154373) *
              C154082 * C154066 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
              C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
                 C154222 +
             (C101527 + C101528) * C154229 + C101539 * C82853) *
                C154373 +
            ((C97340 + C97341) * C154222 + C101466 * C154229 +
             C101467 * C82853) *
                C154021) *
               C154082 * C338 -
           ((C101540 * C82853 + C101476 * C154229 + C101477 * C154222) *
                C154021 +
            (C103386 * C82853 + (C101530 + C101529) * C154229 +
             (C101528 + C101527) * C154222) *
                C154373) *
               C154082 * C339 +
           ((C101539 * C154222 + C130733 * C154229 +
             (C103399 + C103400) * C82853) *
                C154373 +
            (C101467 * C154222 + C101541 * C154229 +
             (C101535 + C101536) * C82853) *
                C154021) *
               C154082 * C340) *
              C341 +
          (((C101466 * C154222 + C101467 * C154229 + C101541 * C82853) *
                C154373 +
            (C102164 * C154222 + C102165 * C154229 +
             (C101537 + C101538) * C82853) *
                C154021) *
               C154082 * C339 -
           ((C101502 * C82853 + C98109 * C154229 +
             (C97343 + C97342) * C154222) *
                C154021 +
            (C101476 * C82853 + C101477 * C154229 +
             (C97341 + C97340) * C154222) *
                C154373) *
               C154082 * C338 -
           (((C97277 * C5660 - C97278 * C5657 - C97277 * C5661 +
              C154268 * C5666 + C97275 * C3147 - C97276 * C3141 -
              C97275 * C3148 + C97273 * C3153) *
                 C82853 +
             (C101538 + C101537) * C154229 + C101502 * C154222) *
                C154021 +
            ((C101536 + C101535) * C82853 + C101540 * C154229 +
             C101476 * C154222) *
                C154373) *
               C154082 * C340) *
              C154053)) /
            (p * q * std::sqrt(p + q));
    d2ee[80] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
              C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
                 C154222 +
             (C101527 + C101528) * C154229 + C101539 * C82853) *
                C154373 +
            ((C97340 + C97341) * C154222 + C101466 * C154229 +
             C101467 * C82853) *
                C154021) *
               C154082 * C154463 -
           ((C101540 * C82853 + C101476 * C154229 + C101477 * C154222) *
                C154021 +
            (C103386 * C82853 + (C101530 + C101529) * C154229 +
             (C101528 + C101527) * C154222) *
                C154373) *
               C154082 * C154464 +
           ((C101539 * C154222 + C130733 * C154229 +
             (C103399 + C103400) * C82853) *
                C154373 +
            (C101467 * C154222 + C101541 * C154229 +
             (C101535 + C101536) * C82853) *
                C154021) *
               C154082 * C1685) *
              C154384 +
          (((C101466 * C154222 + C101467 * C154229 + C101541 * C82853) *
                C154373 +
            (C102164 * C154222 + C102165 * C154229 +
             (C101537 + C101538) * C82853) *
                C154021) *
               C154082 * C154464 -
           ((C101502 * C82853 + C98109 * C154229 +
             (C97343 + C97342) * C154222) *
                C154021 +
            (C101476 * C82853 + C101477 * C154229 +
             (C97341 + C97340) * C154222) *
                C154373) *
               C154082 * C154463 -
           (((C97277 * C5660 - C97278 * C5657 - C97277 * C5661 +
              C154268 * C5666 + C97275 * C3147 - C97276 * C3141 -
              C97275 * C3148 + C97273 * C3153) *
                 C82853 +
             (C101538 + C101537) * C154229 + C101502 * C154222) *
                C154021 +
            ((C101536 + C101535) * C82853 + C101540 * C154229 +
             C101476 * C154222) *
                C154373) *
               C154082 * C1685) *
              C154053)) /
        (p * q * std::sqrt(p + q));
    d2ee[81] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
              C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
                 C154222 +
             (C101527 + C101528) * C154229 + C101539 * C82853) *
                C154373 +
            ((C97340 + C97341) * C154222 + C101466 * C154229 +
             C101467 * C82853) *
                C154021) *
               C154393 -
           ((C102856 * C82853 + C102857 * C154229 +
             (C97906 + C97907) * C154222) *
                C154021 +
            (C104685 * C82853 + (C102898 + C102899) * C154229 +
             (C97277 * C602 - C97278 * C585 - C97277 * C603 + C154268 * C621 +
              C97275 * C600 - C97276 * C584 - C97275 * C601 + C97273 * C620) *
                 C154222) *
                C154373) *
               C154146) *
              C154463 +
          ((((C102899 + C102898) * C154222 + (C102897 + C102896) * C154229 +
             (C104698 + C104699) * C82853) *
                C154373 +
            (C102874 * C154222 + C102875 * C154229 +
             (C102900 + C102901) * C82853) *
                C154021) *
               C154146 -
           ((C101540 * C82853 + C101476 * C154229 + C101477 * C154222) *
                C154021 +
            (C103386 * C82853 + (C101530 + C101529) * C154229 +
             (C101528 + C101527) * C154222) *
                C154373) *
               C154393) *
              C154464 +
          (((C101539 * C154222 + C130733 * C154229 +
             (C103399 + C103400) * C82853) *
                C154373 +
            (C101467 * C154222 + C101541 * C154229 +
             (C101535 + C101536) * C82853) *
                C154021) *
               C154393 -
           (((C97277 * C28468 - C97278 * C28465 - C97277 * C28469 +
              C154268 * C28471 + C97275 * C5662 - C97276 * C5658 -
              C97275 * C5663 + C97273 * C5667) *
                 C82853 +
             (C102901 + C102900) * C154229 + C102856 * C154222) *
                C154021 +
            ((C132781 + C132780) * C82853 + C132767 * C154229 +
             C104685 * C154222) *
                C154373) *
               C154146) *
              C1685) *
         C154047) /
        (p * q * std::sqrt(p + q));
    d2ee[82] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
             C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
                C154222 +
            (C101527 + C101528) * C154229 + C101539 * C82853) *
               C154373 +
           ((C97340 + C97341) * C154222 + C101466 * C154229 +
            C101467 * C82853) *
               C154021) *
              C154082 * C1394 -
          ((C101540 * C82853 + C101476 * C154229 + C101477 * C154222) *
               C154021 +
           (C103386 * C82853 + (C101530 + C101529) * C154229 +
            (C101528 + C101527) * C154222) *
               C154373) *
              C154082 * C1395 +
          ((C101539 * C154222 + C130733 * C154229 +
            (C103399 + C103400) * C82853) *
               C154373 +
           (C101467 * C154222 + C101541 * C154229 +
            (C101535 + C101536) * C82853) *
               C154021) *
              C154082 * C1396 -
          (((C97277 * C28882 - C97278 * C28879 - C97277 * C28883 +
             C154268 * C28885 + C97275 * C4673 - C97276 * C4669 -
             C97275 * C4674 + C97273 * C4678) *
                C82853 +
            (C101536 + C101535) * C154229 + C101540 * C154222) *
               C154021 +
           ((C131912 + C131911) * C82853 + C131898 * C154229 +
            C103386 * C154222) *
               C154373) *
              C154082 * C1397) *
         C154047) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
              C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
                 C154222 +
             (C101527 + C101528) * C154229 + C101539 * C82853) *
                C154373 +
            ((C97340 + C97341) * C154222 + C101466 * C154229 +
             C101467 * C82853) *
                C154021) *
               C154082 * C1307 -
           ((C101540 * C82853 + C101476 * C154229 + C101477 * C154222) *
                C154021 +
            (C103386 * C82853 + (C101530 + C101529) * C154229 +
             (C101528 + C101527) * C154222) *
                C154373) *
               C154082 * C154118) *
              C1309 +
          (((C101466 * C154222 + C101467 * C154229 + C101541 * C82853) *
                C154373 +
            (C102164 * C154222 + C102165 * C154229 +
             (C101537 + C101538) * C82853) *
                C154021) *
               C154082 * C154118 -
           ((C101502 * C82853 + C98109 * C154229 +
             (C97343 + C97342) * C154222) *
                C154021 +
            (C101476 * C82853 + C101477 * C154229 +
             (C97341 + C97340) * C154222) *
                C154373) *
               C154082 * C1307) *
              C1310 +
          (((C97350 * C154222 + C102164 * C154229 + C102165 * C82853) *
                C154373 +
            (C97351 * C154222 + C111310 * C154229 +
             (C97634 + C97635) * C82853) *
                C154021) *
               C154082 * C1307 -
           (((C97277 * C4264 - C97278 * C4257 - C97277 * C4265 +
              C154268 * C4269 + C97275 * C1406 - C97276 * C1400 -
              C97275 * C1407 + C97273 * C1415) *
                 C82853 +
             (C97635 + C97634) * C154229 + C98108 * C154222) *
                C154021 +
            ((C101538 + C101537) * C82853 + C101502 * C154229 +
             C98109 * C154222) *
                C154373) *
               C154082 * C154118) *
              C1311)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
              C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
                 C154222 +
             (C101527 + C101528) * C154229 + C101539 * C82853) *
                C154373 +
            ((C97340 + C97341) * C154222 + C101466 * C154229 +
             C101467 * C82853) *
                C154021) *
               C577 -
           ((C102856 * C82853 + C102857 * C154229 +
             (C97906 + C97907) * C154222) *
                C154021 +
            (C104685 * C82853 + (C102898 + C102899) * C154229 +
             (C97277 * C602 - C97278 * C585 - C97277 * C603 + C154268 * C621 +
              C97275 * C600 - C97276 * C584 - C97275 * C601 + C97273 * C620) *
                 C154222) *
                C154373) *
               C578 +
           (((C97275 * C602 - C97276 * C585 - C97275 * C603 + C97273 * C621 +
              C97277 * C2337 - C97278 * C2328 - C97277 * C2338 +
              C154268 * C2343) *
                 C154222 +
             (C103715 + C103716) * C154229 + (C103717 + C103718) * C82853) *
                C154373 +
            ((C97908 + C97909) * C154222 + (C101870 + C101871) * C154229 +
             (C101872 + C101873) * C82853) *
                C154021) *
               C579) *
              C1307 +
          ((((C102899 + C102898) * C154222 + (C102897 + C102896) * C154229 +
             (C104698 + C104699) * C82853) *
                C154373 +
            (C102874 * C154222 + C102875 * C154229 +
             (C102900 + C102901) * C82853) *
                C154021) *
               C578 -
           ((C101540 * C82853 + C101476 * C154229 + C101477 * C154222) *
                C154021 +
            (C103386 * C82853 + (C101530 + C101529) * C154229 +
             (C101528 + C101527) * C154222) *
                C154373) *
               C577 -
           (((C97277 * C31817 - C97278 * C31816 - C97277 * C31818 +
              C154268 * C31819 + C97275 * C4910 - C97276 * C4906 -
              C97275 * C4911 + C97273 * C4915) *
                 C82853 +
             (C101873 + C101872) * C154229 + (C101871 + C101870) * C154222) *
                C154021 +
            ((C132120 + C132119) * C82853 + (C103718 + C103717) * C154229 +
             (C103716 + C103715) * C154222) *
                C154373) *
               C579) *
              C154118) *
         C154047) /
            (p * q * std::sqrt(p + q));
    d2ee[83] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
               C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
                  C154222 +
              (C101527 + C101528) * C154229 + C101539 * C82853) *
                 C154373 +
             ((C97340 + C97341) * C154222 + C101466 * C154229 +
              C101467 * C82853) *
                 C154021) *
                C154393 -
            ((C102856 * C82853 + C102857 * C154229 +
              (C97906 + C97907) * C154222) *
                 C154021 +
             (C104685 * C82853 + (C102898 + C102899) * C154229 +
              (C97277 * C602 - C97278 * C585 - C97277 * C603 + C154268 * C621 +
               C97275 * C600 - C97276 * C584 - C97275 * C601 + C97273 * C620) *
                  C154222) *
                 C154373) *
                C154146) *
               C1307 +
           ((((C102899 + C102898) * C154222 + (C102897 + C102896) * C154229 +
              (C104698 + C104699) * C82853) *
                 C154373 +
             (C102874 * C154222 + C102875 * C154229 +
              (C102900 + C102901) * C82853) *
                 C154021) *
                C154146 -
            ((C101540 * C82853 + C101476 * C154229 + C101477 * C154222) *
                 C154021 +
             (C103386 * C82853 + (C101530 + C101529) * C154229 +
              (C101528 + C101527) * C154222) *
                 C154373) *
                C154393) *
               C154118) *
              C154384 +
          (((((C97907 + C97906) * C154222 + C102874 * C154229 +
              C102875 * C82853) *
                 C154373 +
             ((C97905 + C97904) * C154222 + C111992 * C154229 +
              (C102468 + C102469) * C82853) *
                 C154021) *
                C154146 -
            ((C101502 * C82853 + C98109 * C154229 +
              (C97343 + C97342) * C154222) *
                 C154021 +
             (C101476 * C82853 + C101477 * C154229 +
              (C97341 + C97340) * C154222) *
                 C154373) *
                C154393) *
               C1307 +
           (((C101466 * C154222 + C101467 * C154229 + C101541 * C82853) *
                 C154373 +
             (C102164 * C154222 + C102165 * C154229 +
              (C101537 + C101538) * C82853) *
                 C154021) *
                C154393 -
            (((C97277 * C4908 - C97278 * C4905 - C97277 * C4909 +
               C154268 * C4914 + C97275 * C4262 - C97276 * C4256 -
               C97275 * C4263 + C97273 * C4268) *
                  C82853 +
              (C102469 + C102468) * C154229 + C111602 * C154222) *
                 C154021 +
             ((C102901 + C102900) * C82853 + C102856 * C154229 +
              C102857 * C154222) *
                 C154373) *
                C154146) *
               C154118) *
              C154053)) /
        (p * q * std::sqrt(p + q));
    d2ee[84] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
              C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
                 C154222 +
             (C101527 + C101528) * C154229 + C101539 * C82853) *
                C154373 +
            ((C97340 + C97341) * C154222 + C101466 * C154229 +
             C101467 * C82853) *
                C154021) *
               C154082 * C1307 -
           ((C101540 * C82853 + C101476 * C154229 + C101477 * C154222) *
                C154021 +
            (C103386 * C82853 + (C101530 + C101529) * C154229 +
             (C101528 + C101527) * C154222) *
                C154373) *
               C154082 * C154118) *
              C1309 +
          (((C101466 * C154222 + C101467 * C154229 + C101541 * C82853) *
                C154373 +
            (C102164 * C154222 + C102165 * C154229 +
             (C101537 + C101538) * C82853) *
                C154021) *
               C154082 * C154118 -
           ((C101502 * C82853 + C98109 * C154229 +
             (C97343 + C97342) * C154222) *
                C154021 +
            (C101476 * C82853 + C101477 * C154229 +
             (C97341 + C97340) * C154222) *
                C154373) *
               C154082 * C1307) *
              C1310 +
          (((C97350 * C154222 + C102164 * C154229 + C102165 * C82853) *
                C154373 +
            (C97351 * C154222 + C111310 * C154229 +
             (C97634 + C97635) * C82853) *
                C154021) *
               C154082 * C1307 -
           (((C97277 * C4264 - C97278 * C4257 - C97277 * C4265 +
              C154268 * C4269 + C97275 * C1406 - C97276 * C1400 -
              C97275 * C1407 + C97273 * C1415) *
                 C82853 +
             (C97635 + C97634) * C154229 + C98108 * C154222) *
                C154021 +
            ((C101538 + C101537) * C82853 + C101502 * C154229 +
             C98109 * C154222) *
                C154373) *
               C154082 * C154118) *
              C1311)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
             C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
                C154222 +
            (C101527 + C101528) * C154229 + C101539 * C82853) *
               C154373 +
           ((C97340 + C97341) * C154222 + C101466 * C154229 +
            C101467 * C82853) *
               C154021) *
              C154082 * C1394 -
          ((C101540 * C82853 + C101476 * C154229 + C101477 * C154222) *
               C154021 +
           (C103386 * C82853 + (C101530 + C101529) * C154229 +
            (C101528 + C101527) * C154222) *
               C154373) *
              C154082 * C1395 +
          ((C101539 * C154222 + C130733 * C154229 +
            (C103399 + C103400) * C82853) *
               C154373 +
           (C101467 * C154222 + C101541 * C154229 +
            (C101535 + C101536) * C82853) *
               C154021) *
              C154082 * C1396 -
          (((C97277 * C28882 - C97278 * C28879 - C97277 * C28883 +
             C154268 * C28885 + C97275 * C4673 - C97276 * C4669 -
             C97275 * C4674 + C97273 * C4678) *
                C82853 +
            (C101536 + C101535) * C154229 + C101540 * C154222) *
               C154021 +
           ((C131912 + C131911) * C82853 + C131898 * C154229 +
            C103386 * C154222) *
               C154373) *
              C154082 * C1397) *
         C154047) /
            (p * q * std::sqrt(p + q));
    d2ee[85] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
               C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
                  C154222 +
              (C101527 + C101528) * C154229 + C101539 * C82853) *
                 C154373 +
             ((C97340 + C97341) * C154222 + C101466 * C154229 +
              C101467 * C82853) *
                 C154021) *
                C2114 -
            ((C102856 * C82853 + C102857 * C154229 +
              (C97906 + C97907) * C154222) *
                 C154021 +
             (C104685 * C82853 + (C102898 + C102899) * C154229 +
              (C97277 * C602 - C97278 * C585 - C97277 * C603 + C154268 * C621 +
               C97275 * C600 - C97276 * C584 - C97275 * C601 + C97273 * C620) *
                  C154222) *
                 C154373) *
                C154146) *
               C154392 +
           ((((C102899 + C102898) * C154222 + (C102897 + C102896) * C154229 +
              (C104698 + C104699) * C82853) *
                 C154373 +
             (C102874 * C154222 + C102875 * C154229 +
              (C102900 + C102901) * C82853) *
                 C154021) *
                C154146 -
            ((C101540 * C82853 + C101476 * C154229 + C101477 * C154222) *
                 C154021 +
             (C103386 * C82853 + (C101530 + C101529) * C154229 +
              (C101528 + C101527) * C154222) *
                 C154373) *
                C2114) *
               C154118) *
              C154384 +
          (((((C97907 + C97906) * C154222 + C102874 * C154229 +
              C102875 * C82853) *
                 C154373 +
             ((C97905 + C97904) * C154222 + C111992 * C154229 +
              (C102468 + C102469) * C82853) *
                 C154021) *
                C154146 -
            ((C101502 * C82853 + C98109 * C154229 +
              (C97343 + C97342) * C154222) *
                 C154021 +
             (C101476 * C82853 + C101477 * C154229 +
              (C97341 + C97340) * C154222) *
                 C154373) *
                C2114) *
               C154392 +
           (((C101466 * C154222 + C101467 * C154229 + C101541 * C82853) *
                 C154373 +
             (C102164 * C154222 + C102165 * C154229 +
              (C101537 + C101538) * C82853) *
                 C154021) *
                C2114 -
            (((C97277 * C4908 - C97278 * C4905 - C97277 * C4909 +
               C154268 * C4914 + C97275 * C4262 - C97276 * C4256 -
               C97275 * C4263 + C97273 * C4268) *
                  C82853 +
              (C102469 + C102468) * C154229 + C111602 * C154222) *
                 C154021 +
             ((C102901 + C102900) * C82853 + C102856 * C154229 +
              C102857 * C154222) *
                 C154373) *
                C154146) *
               C154118) *
              C154053)) /
        (p * q * std::sqrt(p + q));
    d2ee[86] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
              C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
                 C154222 +
             (C101527 + C101528) * C154229 + C101539 * C82853) *
                C154373 +
            ((C97340 + C97341) * C154222 + C101466 * C154229 +
             C101467 * C82853) *
                C154021) *
               C154465 -
           ((C102856 * C82853 + C102857 * C154229 +
             (C97906 + C97907) * C154222) *
                C154021 +
            (C104685 * C82853 + (C102898 + C102899) * C154229 +
             (C97277 * C602 - C97278 * C585 - C97277 * C603 + C154268 * C621 +
              C97275 * C600 - C97276 * C584 - C97275 * C601 + C97273 * C620) *
                 C154222) *
                C154373) *
               C154466 +
           (((C97275 * C602 - C97276 * C585 - C97275 * C603 + C97273 * C621 +
              C97277 * C2337 - C97278 * C2328 - C97277 * C2338 +
              C154268 * C2343) *
                 C154222 +
             (C103715 + C103716) * C154229 + (C103717 + C103718) * C82853) *
                C154373 +
            ((C97908 + C97909) * C154222 + (C101870 + C101871) * C154229 +
             (C101872 + C101873) * C82853) *
                C154021) *
               C2630) *
              C154392 +
          ((((C102899 + C102898) * C154222 + (C102897 + C102896) * C154229 +
             (C104698 + C104699) * C82853) *
                C154373 +
            (C102874 * C154222 + C102875 * C154229 +
             (C102900 + C102901) * C82853) *
                C154021) *
               C154466 -
           ((C101540 * C82853 + C101476 * C154229 + C101477 * C154222) *
                C154021 +
            (C103386 * C82853 + (C101530 + C101529) * C154229 +
             (C101528 + C101527) * C154222) *
                C154373) *
               C154465 -
           (((C97277 * C31817 - C97278 * C31816 - C97277 * C31818 +
              C154268 * C31819 + C97275 * C4910 - C97276 * C4906 -
              C97275 * C4911 + C97273 * C4915) *
                 C82853 +
             (C101873 + C101872) * C154229 + (C101871 + C101870) * C154222) *
                C154021 +
            ((C132120 + C132119) * C82853 + (C103718 + C103717) * C154229 +
             (C103716 + C103715) * C154222) *
                C154373) *
               C2630) *
              C154118) *
         C154047) /
        (p * q * std::sqrt(p + q));
    d2ee[87] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
              C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
                 C154222 +
             (C101527 + C101528) * C154229 + C101539 * C82853) *
                C154373 +
            ((C97340 + C97341) * C154222 + C101466 * C154229 +
             C101467 * C82853) *
                C154021) *
               C2114 -
           ((C102856 * C82853 + C102857 * C154229 +
             (C97906 + C97907) * C154222) *
                C154021 +
            (C104685 * C82853 + (C102898 + C102899) * C154229 +
             (C97277 * C602 - C97278 * C585 - C97277 * C603 + C154268 * C621 +
              C97275 * C600 - C97276 * C584 - C97275 * C601 + C97273 * C620) *
                 C154222) *
                C154373) *
               C154146) *
              C338 +
          ((((C102899 + C102898) * C154222 + (C102897 + C102896) * C154229 +
             (C104698 + C104699) * C82853) *
                C154373 +
            (C102874 * C154222 + C102875 * C154229 +
             (C102900 + C102901) * C82853) *
                C154021) *
               C154146 -
           ((C101540 * C82853 + C101476 * C154229 + C101477 * C154222) *
                C154021 +
            (C103386 * C82853 + (C101530 + C101529) * C154229 +
             (C101528 + C101527) * C154222) *
                C154373) *
               C2114) *
              C339 +
          (((C101539 * C154222 + C130733 * C154229 +
             (C103399 + C103400) * C82853) *
                C154373 +
            (C101467 * C154222 + C101541 * C154229 +
             (C101535 + C101536) * C82853) *
                C154021) *
               C2114 -
           (((C97277 * C28468 - C97278 * C28465 - C97277 * C28469 +
              C154268 * C28471 + C97275 * C5662 - C97276 * C5658 -
              C97275 * C5663 + C97273 * C5667) *
                 C82853 +
             (C102901 + C102900) * C154229 + C102856 * C154222) *
                C154021 +
            ((C132781 + C132780) * C82853 + C132767 * C154229 +
             C104685 * C154222) *
                C154373) *
               C154146) *
              C340) *
         C154047) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
              C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
                 C154222 +
             (C101527 + C101528) * C154229 + C101539 * C82853) *
                C154373 +
            ((C97340 + C97341) * C154222 + C101466 * C154229 +
             C101467 * C82853) *
                C154021) *
               C2114 -
           ((C102856 * C82853 + C102857 * C154229 +
             (C97906 + C97907) * C154222) *
                C154021 +
            (C104685 * C82853 + (C102898 + C102899) * C154229 +
             (C97277 * C602 - C97278 * C585 - C97277 * C603 + C154268 * C621 +
              C97275 * C600 - C97276 * C584 - C97275 * C601 + C97273 * C620) *
                 C154222) *
                C154373) *
               C154146) *
              C154066 * C1309 +
          ((((C97907 + C97906) * C154222 + C102874 * C154229 +
             C102875 * C82853) *
                C154373 +
            ((C97905 + C97904) * C154222 + C111992 * C154229 +
             (C102468 + C102469) * C82853) *
                C154021) *
               C154146 -
           ((C101502 * C82853 + C98109 * C154229 +
             (C97343 + C97342) * C154222) *
                C154021 +
            (C101476 * C82853 + C101477 * C154229 +
             (C97341 + C97340) * C154222) *
                C154373) *
               C2114) *
              C154066 * C1310 +
          (((C97350 * C154222 + C102164 * C154229 + C102165 * C82853) *
                C154373 +
            (C97351 * C154222 + C111310 * C154229 +
             (C97634 + C97635) * C82853) *
                C154021) *
               C2114 -
           (((C97277 * C3451 - C97278 * C3444 - C97277 * C3452 +
              C154268 * C3456 + C97275 * C1979 - C97276 * C1973 -
              C97275 * C1980 + C97273 * C1988) *
                 C82853 +
             (C98637 + C98636) * C154229 + C98320 * C154222) *
                C154021 +
            ((C102469 + C102468) * C82853 + C111602 * C154229 +
             C98321 * C154222) *
                C154373) *
               C154146) *
              C154066 * C1311)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
             C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
                C154222 +
            (C101527 + C101528) * C154229 + C101539 * C82853) *
               C154373 +
           ((C97340 + C97341) * C154222 + C101466 * C154229 +
            C101467 * C82853) *
               C154021) *
              C2320 -
          ((C102856 * C82853 + C102857 * C154229 +
            (C97906 + C97907) * C154222) *
               C154021 +
           (C104685 * C82853 + (C102898 + C102899) * C154229 +
            (C97277 * C602 - C97278 * C585 - C97277 * C603 + C154268 * C621 +
             C97275 * C600 - C97276 * C584 - C97275 * C601 + C97273 * C620) *
                C154222) *
               C154373) *
              C2321 +
          (((C97275 * C602 - C97276 * C585 - C97275 * C603 + C97273 * C621 +
             C97277 * C2337 - C97278 * C2328 - C97277 * C2338 +
             C154268 * C2343) *
                C154222 +
            (C103715 + C103716) * C154229 + (C103717 + C103718) * C82853) *
               C154373 +
           ((C97908 + C97909) * C154222 + (C101870 + C101871) * C154229 +
            (C101872 + C101873) * C82853) *
               C154021) *
              C2322 -
          (((C97277 * C31086 - C97278 * C31083 - C97277 * C31087 +
             C154268 * C31089 + C97275 * C6268 - C97276 * C6260 -
             C97275 * C6269 + C97273 * C6278) *
                C82853 +
            (C97277 * C9280 - C97278 * C9276 - C97277 * C9281 +
             C154268 * C9285 + C97275 * C6270 - C97276 * C6261 -
             C97275 * C6271 + C97273 * C6279) *
                C154229 +
            (C97277 * C7779 - C97278 * C7774 - C97277 * C7780 +
             C154268 * C7786 + C97275 * C2335 - C97276 * C2327 -
             C97275 * C2336 + C97273 * C2342) *
                C154222) *
               C154021 +
           ((C97277 * C31084 - C97278 * C31082 - C97277 * C31085 +
             C154268 * C31088 + C97275 * C6272 - C97276 * C6262 -
             C97275 * C6273 + C97273 * C6280) *
                C82853 +
            (C97277 * C9282 - C97278 * C9277 - C97277 * C9283 +
             C154268 * C9286 + C97275 * C6274 - C97276 * C6263 -
             C97275 * C6275 + C97273 * C6281) *
                C154229 +
            (C97277 * C7777 - C97278 * C7773 - C97277 * C7778 +
             C154268 * C7785 + C97275 * C2337 - C97276 * C2328 -
             C97275 * C2338 + C97273 * C2343) *
                C154222) *
               C154373) *
              C2323) *
         C154066 * C154047) /
            (p * q * std::sqrt(p + q));
    d2ee[88] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
              C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
                 C154222 +
             (C101527 + C101528) * C154229 + C101539 * C82853) *
                C154373 +
            ((C97340 + C97341) * C154222 + C101466 * C154229 +
             C101467 * C82853) *
                C154021) *
               C154465 -
           ((C102856 * C82853 + C102857 * C154229 +
             (C97906 + C97907) * C154222) *
                C154021 +
            (C104685 * C82853 + (C102898 + C102899) * C154229 +
             (C97277 * C602 - C97278 * C585 - C97277 * C603 + C154268 * C621 +
              C97275 * C600 - C97276 * C584 - C97275 * C601 + C97273 * C620) *
                 C154222) *
                C154373) *
               C154466 +
           (((C97275 * C602 - C97276 * C585 - C97275 * C603 + C97273 * C621 +
              C97277 * C2337 - C97278 * C2328 - C97277 * C2338 +
              C154268 * C2343) *
                 C154222 +
             (C103715 + C103716) * C154229 + (C103717 + C103718) * C82853) *
                C154373 +
            ((C97908 + C97909) * C154222 + (C101870 + C101871) * C154229 +
             (C101872 + C101873) * C82853) *
                C154021) *
               C2630) *
              C154066 * C154384 +
          ((((C97907 + C97906) * C154222 + C102874 * C154229 +
             C102875 * C82853) *
                C154373 +
            ((C97905 + C97904) * C154222 + C111992 * C154229 +
             (C102468 + C102469) * C82853) *
                C154021) *
               C154466 -
           ((C101502 * C82853 + C98109 * C154229 +
             (C97343 + C97342) * C154222) *
                C154021 +
            (C101476 * C82853 + C101477 * C154229 +
             (C97341 + C97340) * C154222) *
                C154373) *
               C154465 -
           (((C97277 * C6264 - C97278 * C6258 - C97277 * C6265 +
              C154268 * C6276 + C97275 * C3449 - C97276 * C3443 -
              C97275 * C3450 + C97273 * C3455) *
                 C82853 +
             (C111017 + C111016) * C154229 + (C97911 + C97910) * C154222) *
                C154021 +
            ((C101873 + C101872) * C82853 + (C101871 + C101870) * C154229 +
             (C97909 + C97908) * C154222) *
                C154373) *
               C2630) *
              C154066 * C154053)) /
        (p * q * std::sqrt(p + q));
    d2ee[89] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
              C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
                 C154222 +
             (C101527 + C101528) * C154229 + C101539 * C82853) *
                C154373 +
            ((C97340 + C97341) * C154222 + C101466 * C154229 +
             C101467 * C82853) *
                C154021) *
               C2114 -
           ((C102856 * C82853 + C102857 * C154229 +
             (C97906 + C97907) * C154222) *
                C154021 +
            (C104685 * C82853 + (C102898 + C102899) * C154229 +
             (C97277 * C602 - C97278 * C585 - C97277 * C603 + C154268 * C621 +
              C97275 * C600 - C97276 * C584 - C97275 * C601 + C97273 * C620) *
                 C154222) *
                C154373) *
               C154146) *
              C154066 * C1309 +
          ((((C97907 + C97906) * C154222 + C102874 * C154229 +
             C102875 * C82853) *
                C154373 +
            ((C97905 + C97904) * C154222 + C111992 * C154229 +
             (C102468 + C102469) * C82853) *
                C154021) *
               C154146 -
           ((C101502 * C82853 + C98109 * C154229 +
             (C97343 + C97342) * C154222) *
                C154021 +
            (C101476 * C82853 + C101477 * C154229 +
             (C97341 + C97340) * C154222) *
                C154373) *
               C2114) *
              C154066 * C1310 +
          (((C97350 * C154222 + C102164 * C154229 + C102165 * C82853) *
                C154373 +
            (C97351 * C154222 + C111310 * C154229 +
             (C97634 + C97635) * C82853) *
                C154021) *
               C2114 -
           (((C97277 * C3451 - C97278 * C3444 - C97277 * C3452 +
              C154268 * C3456 + C97275 * C1979 - C97276 * C1973 -
              C97275 * C1980 + C97273 * C1988) *
                 C82853 +
             (C98637 + C98636) * C154229 + C98320 * C154222) *
                C154021 +
            ((C102469 + C102468) * C82853 + C111602 * C154229 +
             C98321 * C154222) *
                C154373) *
               C154146) *
              C154066 * C1311)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
              C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
                 C154222 +
             (C101527 + C101528) * C154229 + C101539 * C82853) *
                C154373 +
            ((C97340 + C97341) * C154222 + C101466 * C154229 +
             C101467 * C82853) *
                C154021) *
               C2114 -
           ((C102856 * C82853 + C102857 * C154229 +
             (C97906 + C97907) * C154222) *
                C154021 +
            (C104685 * C82853 + (C102898 + C102899) * C154229 +
             (C97277 * C602 - C97278 * C585 - C97277 * C603 + C154268 * C621 +
              C97275 * C600 - C97276 * C584 - C97275 * C601 + C97273 * C620) *
                 C154222) *
                C154373) *
               C154146) *
              C338 +
          ((((C102899 + C102898) * C154222 + (C102897 + C102896) * C154229 +
             (C104698 + C104699) * C82853) *
                C154373 +
            (C102874 * C154222 + C102875 * C154229 +
             (C102900 + C102901) * C82853) *
                C154021) *
               C154146 -
           ((C101540 * C82853 + C101476 * C154229 + C101477 * C154222) *
                C154021 +
            (C103386 * C82853 + (C101530 + C101529) * C154229 +
             (C101528 + C101527) * C154222) *
                C154373) *
               C2114) *
              C339 +
          (((C101539 * C154222 + C130733 * C154229 +
             (C103399 + C103400) * C82853) *
                C154373 +
            (C101467 * C154222 + C101541 * C154229 +
             (C101535 + C101536) * C82853) *
                C154021) *
               C2114 -
           (((C97277 * C28468 - C97278 * C28465 - C97277 * C28469 +
              C154268 * C28471 + C97275 * C5662 - C97276 * C5658 -
              C97275 * C5663 + C97273 * C5667) *
                 C82853 +
             (C102901 + C102900) * C154229 + C102856 * C154222) *
                C154021 +
            ((C132781 + C132780) * C82853 + C132767 * C154229 +
             C104685 * C154222) *
                C154373) *
               C154146) *
              C340) *
         C154047) /
            (p * q * std::sqrt(p + q));
    d2ee[90] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((C152148 * C144 - C152187 * C136 - C152148 * C145 + C154264 * C160 +
             C152145 * C600 - C152180 * C584 - C152145 * C601 + C154271 * C620 +
             C152193 * C602 - C115626 * C585 - C152193 * C603 +
             C115620 * C621) *
                C154222 +
            (C120300 + C120301 + C120302) * C154229 + C148411 * C82853) *
               C154011 * C154082 * C154392 -
           ((C122138 + C122137 + C122136) * C82853 +
            (C120303 + C120304 + C120305) * C154229 +
            (C120302 + C120301 + C120300) * C154222) *
               C154011 * C154082 * C154118) *
              C154461 +
          ((C120281 * C154222 + C120287 * C154229 +
            (C120306 + C120307 + C120308) * C82853) *
               C154011 * C154082 * C154118 -
           (C120282 * C82853 + C120283 * C154229 +
            (C115702 + C115701 + C115700) * C154222) *
               C154011 * C154082 * C154392) *
              C154462 +
          ((C115714 * C154222 + C120911 * C154229 +
            (C116017 + C116018 + C116019) * C82853) *
               C154011 * C154082 * C154392 -
           ((C152193 * C4908 - C115626 * C4905 - C152193 * C4909 +
             C115620 * C4914 + C152145 * C4262 - C152180 * C4256 -
             C152145 * C4263 + C154271 * C4268 + C152148 * C1408 -
             C152187 * C1401 - C152148 * C1409 + C154264 * C1416) *
                C82853 +
            (C116019 + C116018 + C116017) * C154229 + C116553 * C154222) *
               C154011 * C154082 * C154118) *
              C818)) /
        (p * q * std::sqrt(p + q));
    d2ee[91] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C152148 * C144 - C152187 * C136 - C152148 * C145 +
              C154264 * C160 + C152145 * C600 - C152180 * C584 -
              C152145 * C601 + C154271 * C620 + C152193 * C602 -
              C115626 * C585 - C152193 * C603 + C115620 * C621) *
                 C154222 +
             (C120300 + C120301 + C120302) * C154229 + C148411 * C82853) *
                C154011 * C154393 -
            ((C123436 + C123435 + C123434) * C82853 +
             (C121628 + C121629 + C121630) * C154229 +
             (C152193 * C2337 - C115626 * C2328 - C152193 * C2338 +
              C115620 * C2343 + C152145 * C602 - C152180 * C585 -
              C152145 * C603 + C154271 * C621 + C152148 * C600 -
              C152187 * C584 - C152148 * C601 + C154264 * C620) *
                 C154222) *
                C154011 * C154146) *
               C154392 +
           (((C121630 + C121629 + C121628) * C154222 +
             (C123434 + C123435 + C123436) * C154229 +
             (C152148 * C4258 - C152187 * C4254 - C152148 * C4259 +
              C154264 * C4266 + C152145 * C4912 - C152180 * C4907 -
              C152145 * C4913 + C154271 * C4916 + C152193 * C30002 -
              C115626 * C29999 - C152193 * C30003 + C115620 * C30005) *
                 C82853) *
                C154011 * C154146 -
            ((C122138 + C122137 + C122136) * C82853 +
             (C120303 + C120304 + C120305) * C154229 +
             (C120302 + C120301 + C120300) * C154222) *
                C154011 * C154393) *
               C154118) *
              C341 +
          ((((C116315 + C116314 + C116313) * C154222 + C121618 * C154229 +
             (C121631 + C121632 + C121633) * C82853) *
                C154011 * C154146 -
            (C120282 * C82853 + C120283 * C154229 +
             (C115702 + C115701 + C115700) * C154222) *
                C154011 * C154393) *
               C154392 +
           ((C120281 * C154222 + C120287 * C154229 +
             (C120306 + C120307 + C120308) * C82853) *
                C154011 * C154393 -
            ((C152193 * C31817 - C115626 * C31816 - C152193 * C31818 +
              C115620 * C31819 + C152145 * C4910 - C152180 * C4906 -
              C152145 * C4911 + C154271 * C4915 + C152148 * C4260 -
              C152187 * C4255 - C152148 * C4261 + C154264 * C4267) *
                 C82853 +
             (C121633 + C121632 + C121631) * C154229 + C121614 * C154222) *
                C154011 * C154146) *
               C154118) *
              C154053)) /
        (p * q * std::sqrt(p + q));
    d2ee[92] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C152148 * C144 - C152187 * C136 - C152148 * C145 + C154264 * C160 +
             C152145 * C600 - C152180 * C584 - C152145 * C601 + C154271 * C620 +
             C152193 * C602 - C115626 * C585 - C152193 * C603 +
             C115620 * C621) *
                C154222 +
            (C120300 + C120301 + C120302) * C154229 + C148411 * C82853) *
               C154011 * C154082 * C338 -
           ((C122138 + C122137 + C122136) * C82853 +
            (C120303 + C120304 + C120305) * C154229 +
            (C120302 + C120301 + C120300) * C154222) *
               C154011 * C154082 * C339 +
           (C148411 * C154222 + (C122136 + C122137 + C122138) * C154229 +
            (C152148 * C3143 - C152187 * C3139 - C152148 * C3144 +
             C154264 * C3151 + C152145 * C5664 - C152180 * C5659 -
             C152145 * C5665 + C154271 * C5668 + C152193 * C28466 -
             C115626 * C28464 - C152193 * C28467 + C115620 * C28470) *
                C82853) *
               C154011 * C154082 * C340) *
              C341 +
          ((C120281 * C154222 + C120287 * C154229 +
            (C120306 + C120307 + C120308) * C82853) *
               C154011 * C154082 * C339 -
           (C120282 * C82853 + C120283 * C154229 +
            (C115702 + C115701 + C115700) * C154222) *
               C154011 * C154082 * C338 -
           ((C152193 * C28468 - C115626 * C28465 - C152193 * C28469 +
             C115620 * C28471 + C152145 * C5662 - C152180 * C5658 -
             C152145 * C5663 + C154271 * C5667 + C152148 * C3145 -
             C152187 * C3140 - C152148 * C3146 + C154264 * C3152) *
                C82853 +
            (C120308 + C120307 + C120306) * C154229 + C120282 * C154222) *
               C154011 * C154082 * C340) *
              C154053)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C152148 * C144 - C152187 * C136 - C152148 * C145 + C154264 * C160 +
            C152145 * C600 - C152180 * C584 - C152145 * C601 + C154271 * C620 +
            C152193 * C602 - C115626 * C585 - C152193 * C603 + C115620 * C621) *
               C154222 +
           (C120300 + C120301 + C120302) * C154229 +
           (C120305 + C120304 + C120303) * C82853) *
              C154011 * C154082 * C154066 * C130 -
          (C120282 * C82853 + C120283 * C154229 +
           (C115702 + C115701 + C115700) * C154222) *
              C154011 * C154082 * C154066 * C131 +
          (C115714 * C154222 + C120911 * C154229 +
           (C116017 + C116018 + C116019) * C82853) *
              C154011 * C154082 * C154066 * C132 -
          ((C152193 * C3451 - C115626 * C3444 - C152193 * C3452 +
            C115620 * C3456 + C152145 * C1979 - C152180 * C1973 -
            C152145 * C1980 + C154271 * C1988 + C152148 * C371 -
            C152187 * C351 - C152148 * C372 + C154264 * C387) *
               C82853 +
           (C116563 + C116562 + C116561) * C154229 + C115715 * C154222) *
              C154011 * C154082 * C154066 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C152148 * C144 - C152187 * C136 - C152148 * C145 + C154264 * C160 +
             C152145 * C600 - C152180 * C584 - C152145 * C601 + C154271 * C620 +
             C152193 * C602 - C115626 * C585 - C152193 * C603 +
             C115620 * C621) *
                C154222 +
            (C120300 + C120301 + C120302) * C154229 + C148411 * C82853) *
               C154011 * C577 -
           ((C123436 + C123435 + C123434) * C82853 +
            (C121628 + C121629 + C121630) * C154229 +
            (C152193 * C2337 - C115626 * C2328 - C152193 * C2338 +
             C115620 * C2343 + C152145 * C602 - C152180 * C585 -
             C152145 * C603 + C154271 * C621 + C152148 * C600 - C152187 * C584 -
             C152148 * C601 + C154264 * C620) *
                C154222) *
               C154011 * C578 +
           ((C152148 * C602 - C152187 * C585 - C152148 * C603 + C154264 * C621 +
             C152145 * C2337 - C152180 * C2328 - C152145 * C2338 +
             C154271 * C2343 + C152193 * C7777 - C115626 * C7773 -
             C152193 * C7778 + C115620 * C7785) *
                C154222 +
            (C122447 + C122448 + C122449) * C154229 +
            (C152148 * C3445 - C152187 * C3441 - C152148 * C3446 +
             C154264 * C3453 + C152145 * C6272 - C152180 * C6262 -
             C152145 * C6273 + C154271 * C6280 + C152193 * C31084 -
             C115626 * C31082 - C152193 * C31085 + C115620 * C31088) *
                C82853) *
               C154011 * C579) *
              C154066 * C341 +
          (((C116315 + C116314 + C116313) * C154222 + C121618 * C154229 +
            (C121631 + C121632 + C121633) * C82853) *
               C154011 * C578 -
           (C120282 * C82853 + C120283 * C154229 +
            (C115702 + C115701 + C115700) * C154222) *
               C154011 * C577 -
           ((C152193 * C31086 - C115626 * C31083 - C152193 * C31087 +
             C115620 * C31089 + C152145 * C6268 - C152180 * C6260 -
             C152145 * C6269 + C154271 * C6278 + C152148 * C3447 -
             C152187 * C3442 - C152148 * C3448 + C154264 * C3454) *
                C82853 +
            (C120619 + C120618 + C120617) * C154229 +
            (C116318 + C116317 + C116316) * C154222) *
               C154011 * C579) *
              C154066 * C154053)) /
            (p * q * std::sqrt(p + q));
    d2ee[93] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((C152148 * C144 - C152187 * C136 - C152148 * C145 + C154264 * C160 +
             C152145 * C600 - C152180 * C584 - C152145 * C601 + C154271 * C620 +
             C152193 * C602 - C115626 * C585 - C152193 * C603 +
             C115620 * C621) *
                C154222 +
            (C120300 + C120301 + C120302) * C154229 + C148411 * C82853) *
               C154011 * C154393 -
           ((C123436 + C123435 + C123434) * C82853 +
            (C121628 + C121629 + C121630) * C154229 +
            (C152193 * C2337 - C115626 * C2328 - C152193 * C2338 +
             C115620 * C2343 + C152145 * C602 - C152180 * C585 -
             C152145 * C603 + C154271 * C621 + C152148 * C600 - C152187 * C584 -
             C152148 * C601 + C154264 * C620) *
                C154222) *
               C154011 * C154146) *
              C154066 * C154461 +
          (((C116315 + C116314 + C116313) * C154222 + C121618 * C154229 +
            (C121631 + C121632 + C121633) * C82853) *
               C154011 * C154146 -
           (C120282 * C82853 + C120283 * C154229 +
            (C115702 + C115701 + C115700) * C154222) *
               C154011 * C154393) *
              C154066 * C154462 +
          ((C115714 * C154222 + C120911 * C154229 +
            (C116017 + C116018 + C116019) * C82853) *
               C154011 * C154393 -
           ((C152193 * C6264 - C115626 * C6258 - C152193 * C6265 +
             C115620 * C6276 + C152145 * C3449 - C152180 * C3443 -
             C152145 * C3450 + C154271 * C3455 + C152148 * C1981 -
             C152187 * C1974 - C152148 * C1982 + C154264 * C1989) *
                C82853 +
            (C117137 + C117136 + C117135) * C154229 + C116795 * C154222) *
               C154011 * C154146) *
              C154066 * C818)) /
        (p * q * std::sqrt(p + q));
    d2ee[94] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((C152148 * C144 - C152187 * C136 - C152148 * C145 + C154264 * C160 +
            C152145 * C600 - C152180 * C584 - C152145 * C601 + C154271 * C620 +
            C152193 * C602 - C115626 * C585 - C152193 * C603 + C115620 * C621) *
               C154222 +
           (C120300 + C120301 + C120302) * C154229 +
           (C120305 + C120304 + C120303) * C82853) *
              C154011 * C154082 * C154066 * C130 -
          (C120282 * C82853 + C120283 * C154229 +
           (C115702 + C115701 + C115700) * C154222) *
              C154011 * C154082 * C154066 * C131 +
          (C115714 * C154222 + C120911 * C154229 +
           (C116017 + C116018 + C116019) * C82853) *
              C154011 * C154082 * C154066 * C132 -
          ((C152193 * C3451 - C115626 * C3444 - C152193 * C3452 +
            C115620 * C3456 + C152145 * C1979 - C152180 * C1973 -
            C152145 * C1980 + C154271 * C1988 + C152148 * C371 -
            C152187 * C351 - C152148 * C372 + C154264 * C387) *
               C82853 +
           (C116563 + C116562 + C116561) * C154229 + C115715 * C154222) *
              C154011 * C154082 * C154066 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C152148 * C144 - C152187 * C136 - C152148 * C145 + C154264 * C160 +
             C152145 * C600 - C152180 * C584 - C152145 * C601 + C154271 * C620 +
             C152193 * C602 - C115626 * C585 - C152193 * C603 +
             C115620 * C621) *
                C154222 +
            (C120300 + C120301 + C120302) * C154229 + C148411 * C82853) *
               C154011 * C154082 * C338 -
           ((C122138 + C122137 + C122136) * C82853 +
            (C120303 + C120304 + C120305) * C154229 +
            (C120302 + C120301 + C120300) * C154222) *
               C154011 * C154082 * C339 +
           (C148411 * C154222 + (C122136 + C122137 + C122138) * C154229 +
            (C152148 * C3143 - C152187 * C3139 - C152148 * C3144 +
             C154264 * C3151 + C152145 * C5664 - C152180 * C5659 -
             C152145 * C5665 + C154271 * C5668 + C152193 * C28466 -
             C115626 * C28464 - C152193 * C28467 + C115620 * C28470) *
                C82853) *
               C154011 * C154082 * C340) *
              C341 +
          ((C120281 * C154222 + C120287 * C154229 +
            (C120306 + C120307 + C120308) * C82853) *
               C154011 * C154082 * C339 -
           (C120282 * C82853 + C120283 * C154229 +
            (C115702 + C115701 + C115700) * C154222) *
               C154011 * C154082 * C338 -
           ((C152193 * C28468 - C115626 * C28465 - C152193 * C28469 +
             C115620 * C28471 + C152145 * C5662 - C152180 * C5658 -
             C152145 * C5663 + C154271 * C5667 + C152148 * C3145 -
             C152187 * C3140 - C152148 * C3146 + C154264 * C3152) *
                C82853 +
            (C120308 + C120307 + C120306) * C154229 + C120282 * C154222) *
               C154011 * C154082 * C340) *
              C154053)) /
            (p * q * std::sqrt(p + q));
    d2ee[95] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((C152148 * C144 - C152187 * C136 - C152148 * C145 + C154264 * C160 +
             C152145 * C600 - C152180 * C584 - C152145 * C601 + C154271 * C620 +
             C152193 * C602 - C115626 * C585 - C152193 * C603 +
             C115620 * C621) *
                C154222 +
            (C120300 + C120301 + C120302) * C154229 + C148411 * C82853) *
               C154011 * C154082 * C154463 -
           (C149733 * C82853 + (C120303 + C120304 + C120305) * C154229 +
            (C120302 + C120301 + C120300) * C154222) *
               C154011 * C154082 * C154464 +
           (C148411 * C154222 + (C122136 + C122137 + C122138) * C154229 +
            (C149740 + C149741 + C149742) * C82853) *
               C154011 * C154082 * C1685) *
              C154384 +
          ((C120281 * C154222 + C120287 * C154229 +
            (C120306 + C120307 + C120308) * C82853) *
               C154011 * C154082 * C154464 -
           (C120282 * C82853 + C120283 * C154229 +
            (C115702 + C115701 + C115700) * C154222) *
               C154011 * C154082 * C154463 -
           ((C152193 * C28468 - C115626 * C28465 - C152193 * C28469 +
             C115620 * C28471 + C152145 * C5662 - C152180 * C5658 -
             C152145 * C5663 + C154271 * C5667 + C152148 * C3145 -
             C152187 * C3140 - C152148 * C3146 + C154264 * C3152) *
                C82853 +
            (C120308 + C120307 + C120306) * C154229 + C120282 * C154222) *
               C154011 * C154082 * C1685) *
              C154053)) /
        (p * q * std::sqrt(p + q));
    d2ee[96] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((C152148 * C144 - C152187 * C136 - C152148 * C145 + C154264 * C160 +
             C152145 * C600 - C152180 * C584 - C152145 * C601 + C154271 * C620 +
             C152193 * C602 - C115626 * C585 - C152193 * C603 +
             C115620 * C621) *
                C154222 +
            (C120300 + C120301 + C120302) * C154229 + C148411 * C82853) *
               C154011 * C154393 -
           (C150721 * C82853 + (C121628 + C121629 + C121630) * C154229 +
            (C152193 * C2337 - C115626 * C2328 - C152193 * C2338 +
             C115620 * C2343 + C152145 * C602 - C152180 * C585 -
             C152145 * C603 + C154271 * C621 + C152148 * C600 - C152187 * C584 -
             C152148 * C601 + C154264 * C620) *
                C154222) *
               C154011 * C154146) *
              C154463 +
          (((C121630 + C121629 + C121628) * C154222 +
            (C123434 + C123435 + C123436) * C154229 +
            (C150728 + C150729 + C150730) * C82853) *
               C154011 * C154146 -
           (C149733 * C82853 + (C120303 + C120304 + C120305) * C154229 +
            (C120302 + C120301 + C120300) * C154222) *
               C154011 * C154393) *
              C154464 +
          ((C148411 * C154222 + (C122136 + C122137 + C122138) * C154229 +
            (C149740 + C149741 + C149742) * C82853) *
               C154011 * C154393 -
           ((C152193 * C30000 - C115626 * C29998 - C152193 * C30001 +
             C115620 * C30004 + C152145 * C28466 - C152180 * C28464 -
             C152145 * C28467 + C154271 * C28470 + C152148 * C5664 -
             C152187 * C5659 - C152148 * C5665 + C154264 * C5668) *
                C82853 +
            (C150730 + C150729 + C150728) * C154229 + C150721 * C154222) *
               C154011 * C154146) *
              C1685) *
         C154047) /
        (p * q * std::sqrt(p + q));
    d2ee[97] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C152148 * C144 - C152187 * C136 - C152148 * C145 + C154264 * C160 +
            C152145 * C600 - C152180 * C584 - C152145 * C601 + C154271 * C620 +
            C152193 * C602 - C115626 * C585 - C152193 * C603 + C115620 * C621) *
               C154222 +
           (C120300 + C120301 + C120302) * C154229 + C148411 * C82853) *
              C154011 * C154082 * C1394 -
          (C149733 * C82853 + (C120303 + C120304 + C120305) * C154229 +
           (C120302 + C120301 + C120300) * C154222) *
              C154011 * C154082 * C1395 +
          (C148411 * C154222 + (C122136 + C122137 + C122138) * C154229 +
           (C149740 + C149741 + C149742) * C82853) *
              C154011 * C154082 * C1396 -
          ((C152193 * C29238 - C115626 * C29237 - C152193 * C29239 +
            C115620 * C29240 + C152145 * C28880 - C152180 * C28878 -
            C152145 * C28881 + C154271 * C28884 + C152148 * C4675 -
            C152187 * C4670 - C152148 * C4676 + C154264 * C4679) *
               C82853 +
           (C149742 + C149741 + C149740) * C154229 + C149733 * C154222) *
              C154011 * C154082 * C1397) *
         C154047) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C152148 * C144 - C152187 * C136 - C152148 * C145 + C154264 * C160 +
             C152145 * C600 - C152180 * C584 - C152145 * C601 + C154271 * C620 +
             C152193 * C602 - C115626 * C585 - C152193 * C603 +
             C115620 * C621) *
                C154222 +
            (C120300 + C120301 + C120302) * C154229 + C148411 * C82853) *
               C154011 * C154082 * C1307 -
           ((C122138 + C122137 + C122136) * C82853 +
            (C120303 + C120304 + C120305) * C154229 +
            (C120302 + C120301 + C120300) * C154222) *
               C154011 * C154082 * C154118) *
              C1309 +
          ((C120281 * C154222 + C120287 * C154229 +
            (C120306 + C120307 + C120308) * C82853) *
               C154011 * C154082 * C154118 -
           (C120282 * C82853 + C120283 * C154229 +
            (C115702 + C115701 + C115700) * C154222) *
               C154011 * C154082 * C1307) *
              C1310 +
          ((C115714 * C154222 + C120911 * C154229 +
            (C116017 + C116018 + C116019) * C82853) *
               C154011 * C154082 * C1307 -
           ((C152193 * C4908 - C115626 * C4905 - C152193 * C4909 +
             C115620 * C4914 + C152145 * C4262 - C152180 * C4256 -
             C152145 * C4263 + C154271 * C4268 + C152148 * C1408 -
             C152187 * C1401 - C152148 * C1409 + C154264 * C1416) *
                C82853 +
            (C116019 + C116018 + C116017) * C154229 + C116553 * C154222) *
               C154011 * C154082 * C154118) *
              C1311)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C152148 * C144 - C152187 * C136 - C152148 * C145 + C154264 * C160 +
             C152145 * C600 - C152180 * C584 - C152145 * C601 + C154271 * C620 +
             C152193 * C602 - C115626 * C585 - C152193 * C603 +
             C115620 * C621) *
                C154222 +
            (C120300 + C120301 + C120302) * C154229 + C148411 * C82853) *
               C154011 * C577 -
           ((C123436 + C123435 + C123434) * C82853 +
            (C121628 + C121629 + C121630) * C154229 +
            (C152193 * C2337 - C115626 * C2328 - C152193 * C2338 +
             C115620 * C2343 + C152145 * C602 - C152180 * C585 -
             C152145 * C603 + C154271 * C621 + C152148 * C600 - C152187 * C584 -
             C152148 * C601 + C154264 * C620) *
                C154222) *
               C154011 * C578 +
           ((C152148 * C602 - C152187 * C585 - C152148 * C603 + C154264 * C621 +
             C152145 * C2337 - C152180 * C2328 - C152145 * C2338 +
             C154271 * C2343 + C152193 * C7777 - C115626 * C7773 -
             C152193 * C7778 + C115620 * C7785) *
                C154222 +
            (C122447 + C122448 + C122449) * C154229 +
            (C149979 + C149980 + C149981) * C82853) *
               C154011 * C579) *
              C1307 +
          (((C121630 + C121629 + C121628) * C154222 +
            (C123434 + C123435 + C123436) * C154229 +
            (C152148 * C4258 - C152187 * C4254 - C152148 * C4259 +
             C154264 * C4266 + C152145 * C4912 - C152180 * C4907 -
             C152145 * C4913 + C154271 * C4916 + C152193 * C30002 -
             C115626 * C29999 - C152193 * C30003 + C115620 * C30005) *
                C82853) *
               C154011 * C578 -
           (C149733 * C82853 + (C120303 + C120304 + C120305) * C154229 +
            (C120302 + C120301 + C120300) * C154222) *
               C154011 * C577 -
           ((C152193 * C32489 - C115626 * C32488 - C152193 * C32490 +
             C115620 * C32491 + C152145 * C30002 - C152180 * C29999 -
             C152145 * C30003 + C154271 * C30005 + C152148 * C4912 -
             C152187 * C4907 - C152148 * C4913 + C154264 * C4916) *
                C82853 +
            (C149981 + C149980 + C149979) * C154229 +
            (C122449 + C122448 + C122447) * C154222) *
               C154011 * C579) *
              C154118) *
         C154047) /
            (p * q * std::sqrt(p + q));
    d2ee[98] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C152148 * C144 - C152187 * C136 - C152148 * C145 +
              C154264 * C160 + C152145 * C600 - C152180 * C584 -
              C152145 * C601 + C154271 * C620 + C152193 * C602 -
              C115626 * C585 - C152193 * C603 + C115620 * C621) *
                 C154222 +
             (C120300 + C120301 + C120302) * C154229 + C148411 * C82853) *
                C154011 * C154393 -
            ((C123436 + C123435 + C123434) * C82853 +
             (C121628 + C121629 + C121630) * C154229 +
             (C152193 * C2337 - C115626 * C2328 - C152193 * C2338 +
              C115620 * C2343 + C152145 * C602 - C152180 * C585 -
              C152145 * C603 + C154271 * C621 + C152148 * C600 -
              C152187 * C584 - C152148 * C601 + C154264 * C620) *
                 C154222) *
                C154011 * C154146) *
               C1307 +
           (((C121630 + C121629 + C121628) * C154222 +
             (C123434 + C123435 + C123436) * C154229 +
             (C152148 * C4258 - C152187 * C4254 - C152148 * C4259 +
              C154264 * C4266 + C152145 * C4912 - C152180 * C4907 -
              C152145 * C4913 + C154271 * C4916 + C152193 * C30002 -
              C115626 * C29999 - C152193 * C30003 + C115620 * C30005) *
                 C82853) *
                C154011 * C154146 -
            (C149733 * C82853 + (C120303 + C120304 + C120305) * C154229 +
             (C120302 + C120301 + C120300) * C154222) *
                C154011 * C154393) *
               C154118) *
              C154384 +
          ((((C116315 + C116314 + C116313) * C154222 + C121618 * C154229 +
             (C121631 + C121632 + C121633) * C82853) *
                C154011 * C154146 -
            (C120282 * C82853 + C120283 * C154229 +
             (C115702 + C115701 + C115700) * C154222) *
                C154011 * C154393) *
               C1307 +
           ((C120281 * C154222 + C120287 * C154229 +
             (C120306 + C120307 + C120308) * C82853) *
                C154011 * C154393 -
            ((C152193 * C31817 - C115626 * C31816 - C152193 * C31818 +
              C115620 * C31819 + C152145 * C4910 - C152180 * C4906 -
              C152145 * C4911 + C154271 * C4915 + C152148 * C4260 -
              C152187 * C4255 - C152148 * C4261 + C154264 * C4267) *
                 C82853 +
             (C121633 + C121632 + C121631) * C154229 + C121614 * C154222) *
                C154011 * C154146) *
               C154118) *
              C154053)) /
        (p * q * std::sqrt(p + q));
    d2ee[99] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C152148 * C144 - C152187 * C136 - C152148 * C145 + C154264 * C160 +
             C152145 * C600 - C152180 * C584 - C152145 * C601 + C154271 * C620 +
             C152193 * C602 - C115626 * C585 - C152193 * C603 +
             C115620 * C621) *
                C154222 +
            (C120300 + C120301 + C120302) * C154229 + C148411 * C82853) *
               C154011 * C154082 * C1307 -
           ((C122138 + C122137 + C122136) * C82853 +
            (C120303 + C120304 + C120305) * C154229 +
            (C120302 + C120301 + C120300) * C154222) *
               C154011 * C154082 * C154118) *
              C1309 +
          ((C120281 * C154222 + C120287 * C154229 +
            (C120306 + C120307 + C120308) * C82853) *
               C154011 * C154082 * C154118 -
           (C120282 * C82853 + C120283 * C154229 +
            (C115702 + C115701 + C115700) * C154222) *
               C154011 * C154082 * C1307) *
              C1310 +
          ((C115714 * C154222 + C120911 * C154229 +
            (C116017 + C116018 + C116019) * C82853) *
               C154011 * C154082 * C1307 -
           ((C152193 * C4908 - C115626 * C4905 - C152193 * C4909 +
             C115620 * C4914 + C152145 * C4262 - C152180 * C4256 -
             C152145 * C4263 + C154271 * C4268 + C152148 * C1408 -
             C152187 * C1401 - C152148 * C1409 + C154264 * C1416) *
                C82853 +
            (C116019 + C116018 + C116017) * C154229 + C116553 * C154222) *
               C154011 * C154082 * C154118) *
              C1311)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((C152148 * C144 - C152187 * C136 - C152148 * C145 + C154264 * C160 +
            C152145 * C600 - C152180 * C584 - C152145 * C601 + C154271 * C620 +
            C152193 * C602 - C115626 * C585 - C152193 * C603 + C115620 * C621) *
               C154222 +
           (C120300 + C120301 + C120302) * C154229 + C148411 * C82853) *
              C154011 * C154082 * C1394 -
          (C149733 * C82853 + (C120303 + C120304 + C120305) * C154229 +
           (C120302 + C120301 + C120300) * C154222) *
              C154011 * C154082 * C1395 +
          (C148411 * C154222 + (C122136 + C122137 + C122138) * C154229 +
           (C149740 + C149741 + C149742) * C82853) *
              C154011 * C154082 * C1396 -
          ((C152193 * C29238 - C115626 * C29237 - C152193 * C29239 +
            C115620 * C29240 + C152145 * C28880 - C152180 * C28878 -
            C152145 * C28881 + C154271 * C28884 + C152148 * C4675 -
            C152187 * C4670 - C152148 * C4676 + C154264 * C4679) *
               C82853 +
           (C149742 + C149741 + C149740) * C154229 + C149733 * C154222) *
              C154011 * C154082 * C1397) *
         C154047) /
            (p * q * std::sqrt(p + q));
    d2ee[100] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C152148 * C144 - C152187 * C136 - C152148 * C145 +
              C154264 * C160 + C152145 * C600 - C152180 * C584 -
              C152145 * C601 + C154271 * C620 + C152193 * C602 -
              C115626 * C585 - C152193 * C603 + C115620 * C621) *
                 C154222 +
             (C120300 + C120301 + C120302) * C154229 + C148411 * C82853) *
                C154011 * C2114 -
            (C150721 * C82853 + (C121628 + C121629 + C121630) * C154229 +
             (C152193 * C2337 - C115626 * C2328 - C152193 * C2338 +
              C115620 * C2343 + C152145 * C602 - C152180 * C585 -
              C152145 * C603 + C154271 * C621 + C152148 * C600 -
              C152187 * C584 - C152148 * C601 + C154264 * C620) *
                 C154222) *
                C154011 * C154146) *
               C154392 +
           (((C121630 + C121629 + C121628) * C154222 +
             (C123434 + C123435 + C123436) * C154229 +
             (C150728 + C150729 + C150730) * C82853) *
                C154011 * C154146 -
            (C149733 * C82853 + (C120303 + C120304 + C120305) * C154229 +
             (C120302 + C120301 + C120300) * C154222) *
                C154011 * C2114) *
               C154118) *
              C154384 +
          ((((C116315 + C116314 + C116313) * C154222 + C121618 * C154229 +
             (C121631 + C121632 + C121633) * C82853) *
                C154011 * C154146 -
            (C120282 * C82853 + C120283 * C154229 +
             (C115702 + C115701 + C115700) * C154222) *
                C154011 * C2114) *
               C154392 +
           ((C120281 * C154222 + C120287 * C154229 +
             (C120306 + C120307 + C120308) * C82853) *
                C154011 * C2114 -
            ((C152193 * C31817 - C115626 * C31816 - C152193 * C31818 +
              C115620 * C31819 + C152145 * C4910 - C152180 * C4906 -
              C152145 * C4911 + C154271 * C4915 + C152148 * C4260 -
              C152187 * C4255 - C152148 * C4261 + C154264 * C4267) *
                 C82853 +
             (C121633 + C121632 + C121631) * C154229 + C121614 * C154222) *
                C154011 * C154146) *
               C154118) *
              C154053)) /
        (p * q * std::sqrt(p + q));
    d2ee[101] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((C152148 * C144 - C152187 * C136 - C152148 * C145 + C154264 * C160 +
             C152145 * C600 - C152180 * C584 - C152145 * C601 + C154271 * C620 +
             C152193 * C602 - C115626 * C585 - C152193 * C603 +
             C115620 * C621) *
                C154222 +
            (C120300 + C120301 + C120302) * C154229 + C148411 * C82853) *
               C154011 * C154465 -
           (C150721 * C82853 + (C121628 + C121629 + C121630) * C154229 +
            (C152193 * C2337 - C115626 * C2328 - C152193 * C2338 +
             C115620 * C2343 + C152145 * C602 - C152180 * C585 -
             C152145 * C603 + C154271 * C621 + C152148 * C600 - C152187 * C584 -
             C152148 * C601 + C154264 * C620) *
                C154222) *
               C154011 * C154466 +
           ((C152148 * C602 - C152187 * C585 - C152148 * C603 + C154264 * C621 +
             C152145 * C2337 - C152180 * C2328 - C152145 * C2338 +
             C154271 * C2343 + C152193 * C7777 - C115626 * C7773 -
             C152193 * C7778 + C115620 * C7785) *
                C154222 +
            (C122447 + C122448 + C122449) * C154229 +
            (C149979 + C149980 + C149981) * C82853) *
               C154011 * C2630) *
              C154392 +
          (((C121630 + C121629 + C121628) * C154222 +
            (C123434 + C123435 + C123436) * C154229 +
            (C150728 + C150729 + C150730) * C82853) *
               C154011 * C154466 -
           (C149733 * C82853 + (C120303 + C120304 + C120305) * C154229 +
            (C120302 + C120301 + C120300) * C154222) *
               C154011 * C154465 -
           ((C152193 * C32489 - C115626 * C32488 - C152193 * C32490 +
             C115620 * C32491 + C152145 * C30002 - C152180 * C29999 -
             C152145 * C30003 + C154271 * C30005 + C152148 * C4912 -
             C152187 * C4907 - C152148 * C4913 + C154264 * C4916) *
                C82853 +
            (C149981 + C149980 + C149979) * C154229 +
            (C122449 + C122448 + C122447) * C154222) *
               C154011 * C2630) *
              C154118) *
         C154047) /
        (p * q * std::sqrt(p + q));
    d2ee[102] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C152148 * C144 - C152187 * C136 - C152148 * C145 + C154264 * C160 +
             C152145 * C600 - C152180 * C584 - C152145 * C601 + C154271 * C620 +
             C152193 * C602 - C115626 * C585 - C152193 * C603 +
             C115620 * C621) *
                C154222 +
            (C120300 + C120301 + C120302) * C154229 + C148411 * C82853) *
               C154011 * C2114 -
           (C150721 * C82853 + (C121628 + C121629 + C121630) * C154229 +
            (C152193 * C2337 - C115626 * C2328 - C152193 * C2338 +
             C115620 * C2343 + C152145 * C602 - C152180 * C585 -
             C152145 * C603 + C154271 * C621 + C152148 * C600 - C152187 * C584 -
             C152148 * C601 + C154264 * C620) *
                C154222) *
               C154011 * C154146) *
              C338 +
          (((C121630 + C121629 + C121628) * C154222 +
            (C123434 + C123435 + C123436) * C154229 +
            (C150728 + C150729 + C150730) * C82853) *
               C154011 * C154146 -
           (C149733 * C82853 + (C120303 + C120304 + C120305) * C154229 +
            (C120302 + C120301 + C120300) * C154222) *
               C154011 * C2114) *
              C339 +
          ((C148411 * C154222 + (C122136 + C122137 + C122138) * C154229 +
            (C149740 + C149741 + C149742) * C82853) *
               C154011 * C2114 -
           ((C152193 * C30000 - C115626 * C29998 - C152193 * C30001 +
             C115620 * C30004 + C152145 * C28466 - C152180 * C28464 -
             C152145 * C28467 + C154271 * C28470 + C152148 * C5664 -
             C152187 * C5659 - C152148 * C5665 + C154264 * C5668) *
                C82853 +
            (C150730 + C150729 + C150728) * C154229 + C150721 * C154222) *
               C154011 * C154146) *
              C340) *
         C154047) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C152148 * C144 - C152187 * C136 - C152148 * C145 + C154264 * C160 +
             C152145 * C600 - C152180 * C584 - C152145 * C601 + C154271 * C620 +
             C152193 * C602 - C115626 * C585 - C152193 * C603 +
             C115620 * C621) *
                C154222 +
            (C120300 + C120301 + C120302) * C154229 + C148411 * C82853) *
               C154011 * C2114 -
           (C150721 * C82853 + (C121628 + C121629 + C121630) * C154229 +
            (C152193 * C2337 - C115626 * C2328 - C152193 * C2338 +
             C115620 * C2343 + C152145 * C602 - C152180 * C585 -
             C152145 * C603 + C154271 * C621 + C152148 * C600 - C152187 * C584 -
             C152148 * C601 + C154264 * C620) *
                C154222) *
               C154011 * C154146) *
              C154066 * C1309 +
          (((C116315 + C116314 + C116313) * C154222 + C121618 * C154229 +
            (C121631 + C121632 + C121633) * C82853) *
               C154011 * C154146 -
           (C120282 * C82853 + C120283 * C154229 +
            (C115702 + C115701 + C115700) * C154222) *
               C154011 * C2114) *
              C154066 * C1310 +
          ((C115714 * C154222 + C120911 * C154229 +
            (C116017 + C116018 + C116019) * C82853) *
               C154011 * C2114 -
           ((C152193 * C6264 - C115626 * C6258 - C152193 * C6265 +
             C115620 * C6276 + C152145 * C3449 - C152180 * C3443 -
             C152145 * C3450 + C154271 * C3455 + C152148 * C1981 -
             C152187 * C1974 - C152148 * C1982 + C154264 * C1989) *
                C82853 +
            (C117137 + C117136 + C117135) * C154229 + C116795 * C154222) *
               C154011 * C154146) *
              C154066 * C1311)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((C152148 * C144 - C152187 * C136 - C152148 * C145 + C154264 * C160 +
            C152145 * C600 - C152180 * C584 - C152145 * C601 + C154271 * C620 +
            C152193 * C602 - C115626 * C585 - C152193 * C603 + C115620 * C621) *
               C154222 +
           (C120300 + C120301 + C120302) * C154229 + C148411 * C82853) *
              C154011 * C2320 -
          (C150721 * C82853 + (C121628 + C121629 + C121630) * C154229 +
           (C152193 * C2337 - C115626 * C2328 - C152193 * C2338 +
            C115620 * C2343 + C152145 * C602 - C152180 * C585 - C152145 * C603 +
            C154271 * C621 + C152148 * C600 - C152187 * C584 - C152148 * C601 +
            C154264 * C620) *
               C154222) *
              C154011 * C2321 +
          ((C152148 * C602 - C152187 * C585 - C152148 * C603 + C154264 * C621 +
            C152145 * C2337 - C152180 * C2328 - C152145 * C2338 +
            C154271 * C2343 + C152193 * C7777 - C115626 * C7773 -
            C152193 * C7778 + C115620 * C7785) *
               C154222 +
           (C122447 + C122448 + C122449) * C154229 +
           (C149979 + C149980 + C149981) * C82853) *
              C154011 * C2322 -
          ((C152193 * C33867 - C115626 * C33865 - C152193 * C33868 +
            C115620 * C33871 + C152145 * C31084 - C152180 * C31082 -
            C152145 * C31085 + C154271 * C31088 + C152148 * C6272 -
            C152187 * C6262 - C152148 * C6273 + C154264 * C6280) *
               C82853 +
           (C152193 * C33869 - C115626 * C33866 - C152193 * C33870 +
            C115620 * C33872 + C152145 * C9282 - C152180 * C9277 -
            C152145 * C9283 + C154271 * C9286 + C152148 * C6274 -
            C152187 * C6263 - C152148 * C6275 + C154264 * C6281) *
               C154229 +
           (C152193 * C10602 - C115626 * C10597 - C152193 * C10603 +
            C115620 * C10606 + C152145 * C7777 - C152180 * C7773 -
            C152145 * C7778 + C154271 * C7785 + C152148 * C2337 -
            C152187 * C2328 - C152148 * C2338 + C154264 * C2343) *
               C154222) *
              C154011 * C2323) *
         C154066 * C154047) /
            (p * q * std::sqrt(p + q));
    d2ee[103] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((C152148 * C144 - C152187 * C136 - C152148 * C145 + C154264 * C160 +
             C152145 * C600 - C152180 * C584 - C152145 * C601 + C154271 * C620 +
             C152193 * C602 - C115626 * C585 - C152193 * C603 +
             C115620 * C621) *
                C154222 +
            (C120300 + C120301 + C120302) * C154229 + C148411 * C82853) *
               C154011 * C154465 -
           (C150721 * C82853 + (C121628 + C121629 + C121630) * C154229 +
            (C152193 * C2337 - C115626 * C2328 - C152193 * C2338 +
             C115620 * C2343 + C152145 * C602 - C152180 * C585 -
             C152145 * C603 + C154271 * C621 + C152148 * C600 - C152187 * C584 -
             C152148 * C601 + C154264 * C620) *
                C154222) *
               C154011 * C154466 +
           ((C152148 * C602 - C152187 * C585 - C152148 * C603 + C154264 * C621 +
             C152145 * C2337 - C152180 * C2328 - C152145 * C2338 +
             C154271 * C2343 + C152193 * C7777 - C115626 * C7773 -
             C152193 * C7778 + C115620 * C7785) *
                C154222 +
            (C122447 + C122448 + C122449) * C154229 +
            (C149979 + C149980 + C149981) * C82853) *
               C154011 * C2630) *
              C154066 * C154384 +
          (((C116315 + C116314 + C116313) * C154222 + C121618 * C154229 +
            (C121631 + C121632 + C121633) * C82853) *
               C154011 * C154466 -
           (C120282 * C82853 + C120283 * C154229 +
            (C115702 + C115701 + C115700) * C154222) *
               C154011 * C154465 -
           ((C152193 * C31086 - C115626 * C31083 - C152193 * C31087 +
             C115620 * C31089 + C152145 * C6268 - C152180 * C6260 -
             C152145 * C6269 + C154271 * C6278 + C152148 * C3447 -
             C152187 * C3442 - C152148 * C3448 + C154264 * C3454) *
                C82853 +
            (C120619 + C120618 + C120617) * C154229 +
            (C116318 + C116317 + C116316) * C154222) *
               C154011 * C2630) *
              C154066 * C154053)) /
        (p * q * std::sqrt(p + q));
    d2ee[104] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C152148 * C144 - C152187 * C136 - C152148 * C145 + C154264 * C160 +
             C152145 * C600 - C152180 * C584 - C152145 * C601 + C154271 * C620 +
             C152193 * C602 - C115626 * C585 - C152193 * C603 +
             C115620 * C621) *
                C154222 +
            (C120300 + C120301 + C120302) * C154229 + C148411 * C82853) *
               C154011 * C2114 -
           (C150721 * C82853 + (C121628 + C121629 + C121630) * C154229 +
            (C152193 * C2337 - C115626 * C2328 - C152193 * C2338 +
             C115620 * C2343 + C152145 * C602 - C152180 * C585 -
             C152145 * C603 + C154271 * C621 + C152148 * C600 - C152187 * C584 -
             C152148 * C601 + C154264 * C620) *
                C154222) *
               C154011 * C154146) *
              C154066 * C1309 +
          (((C116315 + C116314 + C116313) * C154222 + C121618 * C154229 +
            (C121631 + C121632 + C121633) * C82853) *
               C154011 * C154146 -
           (C120282 * C82853 + C120283 * C154229 +
            (C115702 + C115701 + C115700) * C154222) *
               C154011 * C2114) *
              C154066 * C1310 +
          ((C115714 * C154222 + C120911 * C154229 +
            (C116017 + C116018 + C116019) * C82853) *
               C154011 * C2114 -
           ((C152193 * C6264 - C115626 * C6258 - C152193 * C6265 +
             C115620 * C6276 + C152145 * C3449 - C152180 * C3443 -
             C152145 * C3450 + C154271 * C3455 + C152148 * C1981 -
             C152187 * C1974 - C152148 * C1982 + C154264 * C1989) *
                C82853 +
            (C117137 + C117136 + C117135) * C154229 + C116795 * C154222) *
               C154011 * C154146) *
              C154066 * C1311)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C152148 * C144 - C152187 * C136 - C152148 * C145 + C154264 * C160 +
             C152145 * C600 - C152180 * C584 - C152145 * C601 + C154271 * C620 +
             C152193 * C602 - C115626 * C585 - C152193 * C603 +
             C115620 * C621) *
                C154222 +
            (C120300 + C120301 + C120302) * C154229 + C148411 * C82853) *
               C154011 * C2114 -
           (C150721 * C82853 + (C121628 + C121629 + C121630) * C154229 +
            (C152193 * C2337 - C115626 * C2328 - C152193 * C2338 +
             C115620 * C2343 + C152145 * C602 - C152180 * C585 -
             C152145 * C603 + C154271 * C621 + C152148 * C600 - C152187 * C584 -
             C152148 * C601 + C154264 * C620) *
                C154222) *
               C154011 * C154146) *
              C338 +
          (((C121630 + C121629 + C121628) * C154222 +
            (C123434 + C123435 + C123436) * C154229 +
            (C150728 + C150729 + C150730) * C82853) *
               C154011 * C154146 -
           (C149733 * C82853 + (C120303 + C120304 + C120305) * C154229 +
            (C120302 + C120301 + C120300) * C154222) *
               C154011 * C2114) *
              C339 +
          ((C148411 * C154222 + (C122136 + C122137 + C122138) * C154229 +
            (C149740 + C149741 + C149742) * C82853) *
               C154011 * C2114 -
           ((C152193 * C30000 - C115626 * C29998 - C152193 * C30001 +
             C115620 * C30004 + C152145 * C28466 - C152180 * C28464 -
             C152145 * C28467 + C154271 * C28470 + C152148 * C5664 -
             C152187 * C5659 - C152148 * C5665 + C154264 * C5668) *
                C82853 +
            (C150730 + C150729 + C150728) * C154229 + C150721 * C154222) *
               C154011 * C154146) *
              C340) *
         C154047) /
            (p * q * std::sqrt(p + q));
    d2ee[105] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
             C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
                C154487 +
            (C101527 + C101528) * C154483 + C101539 * C154473 +
            C130733 * C154415) *
               C154011 * C154082 * C154392 -
           ((C103400 + C103399) * C154415 + C103386 * C154473 +
            (C101530 + C101529) * C154483 + (C101528 + C101527) * C154487) *
               C154011 * C154082 * C154118) *
              C154461 +
          ((C101466 * C154487 + C101467 * C154483 + C101541 * C154473 +
            (C101535 + C101536) * C154415) *
               C154011 * C154082 * C154118 -
           (C101540 * C154415 + C101476 * C154473 + C101477 * C154483 +
            (C97341 + C97340) * C154487) *
               C154011 * C154082 * C154392) *
              C154462 +
          ((C97350 * C154487 + C102164 * C154483 + C102165 * C154473 +
            (C101537 + C101538) * C154415) *
               C154011 * C154082 * C154392 -
           ((C97277 * C5660 - C97278 * C5657 - C97277 * C5661 +
             C154268 * C5666 + C97275 * C3147 - C97276 * C3141 -
             C97275 * C3148 + C97273 * C3153) *
                C154415 +
            (C101538 + C101537) * C154473 + C101502 * C154483 +
            C98109 * C154487) *
               C154011 * C154082 * C154118) *
              C818)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
              C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
                 C70494 +
             (C101527 + C101528) * C154226) *
                C154477 +
            ((C97340 + C97341) * C70494 + C101466 * C154226) * C154458 +
            C125375 * C154429) *
               C154082 * C154392 -
           (C126249 * C154429 +
            (C101476 * C154226 + C101477 * C70494) * C154458 +
            ((C101530 + C101529) * C154226 + (C101528 + C101527) * C70494) *
                C154477) *
               C154082 * C154118) *
              C154461 +
          (((C101466 * C70494 + C101467 * C154226) * C154477 +
            (C102164 * C70494 + C102165 * C154226) * C154458 +
            (C111310 * C70494 + (C97634 + C97635) * C154226) * C154429) *
               C154082 * C154118 -
           (C125376 * C154429 +
            (C98109 * C154226 + (C97343 + C97342) * C70494) * C154458 +
            (C101477 * C154226 + (C97341 + C97340) * C70494) * C154477) *
               C154082 * C154392) *
              C154462 +
          ((C125375 * C154477 +
            (C97351 * C70494 + C111310 * C154226) * C154458 +
            ((C97347 + C97346) * C70494 + (C98124 + C98125) * C154226) *
                C154429) *
               C154082 * C154392 -
           (((C97277 * C1977 - C97278 * C1972 - C97277 * C1978 +
              C154268 * C1987 + C97275 * C373 - C97276 * C352 - C97275 * C374 +
              C97273 * C388) *
                 C154226 +
             (C98125 + C98124) * C70494) *
                C154429 +
            ((C97635 + C97634) * C154226 + C98108 * C70494) * C154458 +
            C126249 * C154477) *
               C154082 * C154118) *
              C818)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C106573 * C144 - C106574 * C136 - C106573 * C145 + C154488 * C160 +
             C106575 * C600 - C106576 * C584 - C106575 * C601 + C154485 * C620 +
             C106577 * C602 - C106578 * C585 - C106577 * C603 + C154476 * C621 +
             C106579 * C2337 - C106580 * C2328 - C106579 * C2338 +
             C154422 * C2343) *
                C70494 +
            (C134318 + C134319 + C134320 + C134321) * C154226) *
               C154011 * C154082 * C154392 -
           ((C134322 + C134323 + C134324 + C134325) * C154226 +
            (C134321 + C134320 + C134319 + C134318) * C70494) *
               C154011 * C154082 * C154118) *
              C154461 +
          (((C106911 + C106910 + C106909 + C106908) * C70494 +
            (C106912 + C106913 + C106914 + C106915) * C154226) *
               C154011 * C154082 * C154118 -
           ((C106908 + C106909 + C106910 + C106911) * C154226 +
            (C106657 + C106656 + C106655 + C106654) * C70494) *
               C154011 * C154082 * C154392) *
              C154462 +
          (((C106661 + C106660 + C106659 + C106658) * C70494 +
            (C107384 + C107385 + C107386 + C107387) * C154226) *
               C154011 * C154082 * C154392 -
           ((C106579 * C6264 - C106580 * C6258 - C106579 * C6265 +
             C154422 * C6276 + C106577 * C3449 - C106578 * C3443 -
             C106577 * C3450 + C154476 * C3455 + C106575 * C1981 -
             C106576 * C1974 - C106575 * C1982 + C154485 * C1989 +
             C106573 * C369 - C106574 * C350 - C106573 * C370 +
             C154488 * C386) *
                C154226 +
            (C107387 + C107386 + C107385 + C107384) * C70494) *
               C154011 * C154082 * C154118) *
              C818)) /
            (p * q * std::sqrt(p + q));
    d2ee[106] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
              C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
                 C154487 +
             (C101527 + C101528) * C154483 + C101539 * C154473 +
             C130733 * C154415) *
                C154011 * C154393 -
            ((C104699 + C104698) * C154415 + C104685 * C154473 +
             (C102898 + C102899) * C154483 +
             (C97277 * C602 - C97278 * C585 - C97277 * C603 + C154268 * C621 +
              C97275 * C600 - C97276 * C584 - C97275 * C601 + C97273 * C620) *
                 C154487) *
                C154011 * C154146) *
               C154392 +
           (((C102899 + C102898) * C154487 + (C102897 + C102896) * C154483 +
             (C104698 + C104699) * C154473 +
             (C97275 * C5664 - C97276 * C5659 - C97275 * C5665 +
              C97273 * C5668 + C97277 * C28466 - C97278 * C28464 -
              C97277 * C28467 + C154268 * C28470) *
                 C154415) *
                C154011 * C154146 -
            ((C103400 + C103399) * C154415 + C103386 * C154473 +
             (C101530 + C101529) * C154483 + (C101528 + C101527) * C154487) *
                C154011 * C154393) *
               C154118) *
              C341 +
          ((((C97907 + C97906) * C154487 + C102874 * C154483 +
             C102875 * C154473 + (C102900 + C102901) * C154415) *
                C154011 * C154146 -
            (C101540 * C154415 + C101476 * C154473 + C101477 * C154483 +
             (C97341 + C97340) * C154487) *
                C154011 * C154393) *
               C154392 +
           ((C101466 * C154487 + C101467 * C154483 + C101541 * C154473 +
             (C101535 + C101536) * C154415) *
                C154011 * C154393 -
            ((C97277 * C28468 - C97278 * C28465 - C97277 * C28469 +
              C154268 * C28471 + C97275 * C5662 - C97276 * C5658 -
              C97275 * C5663 + C97273 * C5667) *
                 C154415 +
             (C102901 + C102900) * C154473 + C102856 * C154483 +
             C102857 * C154487) *
                C154011 * C154146) *
               C154118) *
              C154053)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
               C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
                  C70494 +
              (C101527 + C101528) * C154226) *
                 C154477 +
             ((C97340 + C97341) * C70494 + C101466 * C154226) * C154458 +
             C125375 * C154429) *
                C154393 -
            (C126542 * C154429 +
             (C102857 * C154226 + (C97906 + C97907) * C70494) * C154458 +
             ((C102898 + C102899) * C154226 +
              (C97277 * C602 - C97278 * C585 - C97277 * C603 + C154268 * C621 +
               C97275 * C600 - C97276 * C584 - C97275 * C601 + C97273 * C620) *
                  C70494) *
                 C154477) *
                C154146) *
               C154392 +
           ((((C102899 + C102898) * C70494 + (C102897 + C102896) * C154226) *
                 C154477 +
             (C102874 * C70494 + C102875 * C154226) * C154458 +
             (C111992 * C70494 + (C102468 + C102469) * C154226) * C154429) *
                C154146 -
            (C126249 * C154429 +
             (C101476 * C154226 + C101477 * C70494) * C154458 +
             ((C101530 + C101529) * C154226 + (C101528 + C101527) * C70494) *
                 C154477) *
                C154393) *
               C154118) *
              C341 +
          (((((C97907 + C97906) * C70494 + C102874 * C154226) * C154477 +
             ((C97905 + C97904) * C70494 + C111992 * C154226) * C154458 +
             ((C97903 + C97902) * C70494 + (C98636 + C98637) * C154226) *
                 C154429) *
                C154146 -
            (C125376 * C154429 +
             (C98109 * C154226 + (C97343 + C97342) * C70494) * C154458 +
             (C101477 * C154226 + (C97341 + C97340) * C70494) * C154477) *
                C154393) *
               C154392 +
           (((C101466 * C70494 + C101467 * C154226) * C154477 +
             (C102164 * C70494 + C102165 * C154226) * C154458 +
             (C111310 * C70494 + (C97634 + C97635) * C154226) * C154429) *
                C154393 -
            (((C97277 * C3451 - C97278 * C3444 - C97277 * C3452 +
               C154268 * C3456 + C97275 * C1979 - C97276 * C1973 -
               C97275 * C1980 + C97273 * C1988) *
                  C154226 +
              (C98637 + C98636) * C70494) *
                 C154429 +
             ((C102469 + C102468) * C154226 + C111602 * C70494) * C154458 +
             (C102856 * C154226 + C102857 * C70494) * C154477) *
                C154146) *
               C154118) *
              C154053)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C106573 * C144 - C106574 * C136 - C106573 * C145 +
              C154488 * C160 + C106575 * C600 - C106576 * C584 -
              C106575 * C601 + C154485 * C620 + C106577 * C602 -
              C106578 * C585 - C106577 * C603 + C154476 * C621 +
              C106579 * C2337 - C106580 * C2328 - C106579 * C2338 +
              C154422 * C2343) *
                 C70494 +
             (C134318 + C134319 + C134320 + C134321) * C154226) *
                C154011 * C154393 -
            ((C135190 + C135191 + C135192 + C135193) * C154226 +
             (C106579 * C7777 - C106580 * C7773 - C106579 * C7778 +
              C154422 * C7785 + C106577 * C2337 - C106578 * C2328 -
              C106577 * C2338 + C154476 * C2343 + C106575 * C602 -
              C106576 * C585 - C106575 * C603 + C154485 * C621 +
              C106573 * C600 - C106574 * C584 - C106573 * C601 +
              C154488 * C620) *
                 C70494) *
                C154011 * C154146) *
               C154392 +
           (((C135193 + C135192 + C135191 + C135190) * C70494 +
             (C106573 * C1985 - C106574 * C1976 - C106573 * C1986 +
              C154488 * C1991 + C106575 * C3445 - C106576 * C3441 -
              C106575 * C3446 + C154485 * C3453 + C106577 * C6272 -
              C106578 * C6262 - C106577 * C6273 + C154476 * C6280 +
              C106579 * C31084 - C106580 * C31082 - C106579 * C31085 +
              C154422 * C31088) *
                 C154226) *
                C154011 * C154146 -
            ((C134322 + C134323 + C134324 + C134325) * C154226 +
             (C134321 + C134320 + C134319 + C134318) * C70494) *
                C154011 * C154393) *
               C154118) *
              C341 +
          ((((C107161 + C107160 + C107159 + C107158) * C70494 +
             (C107892 + C107893 + C107894 + C107895) * C154226) *
                C154011 * C154146 -
            ((C106908 + C106909 + C106910 + C106911) * C154226 +
             (C106657 + C106656 + C106655 + C106654) * C70494) *
                C154011 * C154393) *
               C154392 +
           (((C106911 + C106910 + C106909 + C106908) * C70494 +
             (C106912 + C106913 + C106914 + C106915) * C154226) *
                C154011 * C154393 -
            ((C106579 * C31086 - C106580 * C31083 - C106579 * C31087 +
              C154422 * C31089 + C106577 * C6268 - C106578 * C6260 -
              C106577 * C6269 + C154476 * C6278 + C106575 * C3447 -
              C106576 * C3442 - C106575 * C3448 + C154485 * C3454 +
              C106573 * C1983 - C106574 * C1975 - C106573 * C1984 +
              C154488 * C1990) *
                 C154226 +
             (C107895 + C107894 + C107893 + C107892) * C70494) *
                C154011 * C154146) *
               C154118) *
              C154053)) /
            (p * q * std::sqrt(p + q));
    d2ee[107] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
                 C97277 * C600 - C97278 * C584 - C97277 * C601 +
                 C154268 * C620) *
                    C70494 +
                (C101527 + C101528) * C154226) *
                   C154477 +
               ((C97340 + C97341) * C70494 + C101466 * C154226) * C154458 +
               C125375 * C154429) *
                  C154082 * C154066 * C130 -
              (C125376 * C154429 +
               (C98109 * C154226 + (C97343 + C97342) * C70494) * C154458 +
               (C101477 * C154226 + (C97341 + C97340) * C70494) * C154477) *
                  C154082 * C154066 * C131 +
              (C125375 * C154477 +
               (C97351 * C70494 + C111310 * C154226) * C154458 +
               ((C97347 + C97346) * C70494 + (C98124 + C98125) * C154226) *
                   C154429) *
                  C154082 * C154066 * C132 -
              (((C97277 * C1145 - C97278 * C1134 - C97277 * C1146 +
                 C154268 * C1152 + C97275 * C375 - C97276 * C353 -
                 C97275 * C376 + C97273 * C389) *
                    C154226 +
                (C97349 + C97348) * C70494) *
                   C154429 +
               ((C98125 + C98124) * C154226 + C97352 * C70494) * C154458 +
               C125376 * C154477) *
                  C154082 * C154066 * C133) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C97275 * C144 - C97276 * C136 - C97275 * C145 +
                  C97273 * C160 + C97277 * C600 - C97278 * C584 -
                  C97277 * C601 + C154268 * C620) *
                     C70494 +
                 (C101527 + C101528) * C154226) *
                    C154477 +
                ((C97340 + C97341) * C70494 + C101466 * C154226) * C154458 +
                C125375 * C154429) *
                   C154082 * C338 -
               ((C101502 * C154226 + C98109 * C70494) * C154429 +
                (C101476 * C154226 + C101477 * C70494) * C154458 +
                ((C101530 + C101529) * C154226 + (C101528 + C101527) * C70494) *
                    C154477) *
                   C154082 * C339 +
               ((C101539 * C70494 + (C101534 + C101533) * C154226) * C154477 +
                (C101467 * C70494 + C101541 * C154226) * C154458 +
                (C102165 * C70494 + (C101537 + C101538) * C154226) * C154429) *
                   C154082 * C340) *
                  C341 +
              (((C101466 * C70494 + C101467 * C154226) * C154477 +
                (C102164 * C70494 + C102165 * C154226) * C154458 +
                (C111310 * C70494 + (C97634 + C97635) * C154226) * C154429) *
                   C154082 * C339 -
               (C125376 * C154429 +
                (C98109 * C154226 + (C97343 + C97342) * C70494) * C154458 +
                (C101477 * C154226 + (C97341 + C97340) * C70494) * C154477) *
                   C154082 * C338 -
               (((C97277 * C4264 - C97278 * C4257 - C97277 * C4265 +
                  C154268 * C4269 + C97275 * C1406 - C97276 * C1400 -
                  C97275 * C1407 + C97273 * C1415) *
                     C154226 +
                 (C97635 + C97634) * C70494) *
                    C154429 +
                ((C101538 + C101537) * C154226 + C101502 * C70494) * C154458 +
                (C101540 * C154226 + C101476 * C70494) * C154477) *
                   C154082 * C340) *
                  C154053)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
              C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
                 C70494 +
             (C101527 + C101528) * C154226) *
                C154477 +
            ((C97340 + C97341) * C70494 + C101466 * C154226) * C154458 +
            C125375 * C154429) *
               C577 -
           ((C111602 * C154226 + C98321 * C70494) * C154429 +
            (C102857 * C154226 + (C97906 + C97907) * C70494) * C154458 +
            ((C102898 + C102899) * C154226 +
             (C97277 * C602 - C97278 * C585 - C97277 * C603 + C154268 * C621 +
              C97275 * C600 - C97276 * C584 - C97275 * C601 + C97273 * C620) *
                 C70494) *
                C154477) *
               C578 +
           (((C97275 * C602 - C97276 * C585 - C97275 * C603 + C97273 * C621 +
              C97277 * C2337 - C97278 * C2328 - C97277 * C2338 +
              C154268 * C2343) *
                 C70494 +
             (C103715 + C103716) * C154226) *
                C154477 +
            ((C97908 + C97909) * C70494 + (C101870 + C101871) * C154226) *
                C154458 +
            ((C97910 + C97911) * C70494 + (C111016 + C111017) * C154226) *
                C154429) *
               C579) *
              C154066 * C341 +
          ((((C97907 + C97906) * C70494 + C102874 * C154226) * C154477 +
            ((C97905 + C97904) * C70494 + C111992 * C154226) * C154458 +
            ((C97903 + C97902) * C70494 + (C98636 + C98637) * C154226) *
                C154429) *
               C578 -
           (C125376 * C154429 +
            (C98109 * C154226 + (C97343 + C97342) * C70494) * C154458 +
            (C101477 * C154226 + (C97341 + C97340) * C70494) * C154477) *
               C577 -
           (((C97277 * C8648 - C97278 * C8647 - C97277 * C8649 +
              C154268 * C8650 + C97275 * C1548 - C97276 * C1542 -
              C97275 * C1549 + C97273 * C1557) *
                 C154226 +
             (C97913 + C97912) * C70494) *
                C154429 +
            ((C111017 + C111016) * C154226 + (C97911 + C97910) * C70494) *
                C154458 +
            ((C101871 + C101870) * C154226 + (C97909 + C97908) * C70494) *
                C154477) *
               C579) *
              C154066 * C154053)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
            C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
               C154487 +
           (C101527 + C101528) * C154483 + C101539 * C154473 +
           (C101534 + C101533) * C154415) *
              C154011 * C154082 * C154066 * C130 -
          (C101540 * C154415 + C101476 * C154473 + C101477 * C154483 +
           (C97341 + C97340) * C154487) *
              C154011 * C154082 * C154066 * C131 +
          (C97350 * C154487 + C102164 * C154483 + C102165 * C154473 +
           (C101537 + C101538) * C154415) *
              C154011 * C154082 * C154066 * C132 -
          ((C97277 * C4264 - C97278 * C4257 - C97277 * C4265 + C154268 * C4269 +
            C97275 * C1406 - C97276 * C1400 - C97275 * C1407 + C97273 * C1415) *
               C154415 +
           (C97635 + C97634) * C154473 + C98108 * C154483 + C97353 * C154487) *
              C154011 * C154082 * C154066 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
             C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
                C154487 +
            (C101527 + C101528) * C154483 + C101539 * C154473 +
            C130733 * C154415) *
               C154011 * C154082 * C338 -
           ((C103400 + C103399) * C154415 + C103386 * C154473 +
            (C101530 + C101529) * C154483 + (C101528 + C101527) * C154487) *
               C154011 * C154082 * C339 +
           (C101539 * C154487 + C130733 * C154483 +
            (C103399 + C103400) * C154473 +
            (C97275 * C4675 - C97276 * C4670 - C97275 * C4676 + C97273 * C4679 +
             C97277 * C28880 - C97278 * C28878 - C97277 * C28881 +
             C154268 * C28884) *
                C154415) *
               C154011 * C154082 * C340) *
              C341 +
          ((C101466 * C154487 + C101467 * C154483 + C101541 * C154473 +
            (C101535 + C101536) * C154415) *
               C154011 * C154082 * C339 -
           (C101540 * C154415 + C101476 * C154473 + C101477 * C154483 +
            (C97341 + C97340) * C154487) *
               C154011 * C154082 * C338 -
           ((C97277 * C28882 - C97278 * C28879 - C97277 * C28883 +
             C154268 * C28885 + C97275 * C4673 - C97276 * C4669 -
             C97275 * C4674 + C97273 * C4678) *
                C154415 +
            (C101536 + C101535) * C154473 + C101540 * C154483 +
            C101476 * C154487) *
               C154011 * C154082 * C340) *
              C154053)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
             C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
                C154487 +
            (C101527 + C101528) * C154483 + C101539 * C154473 +
            C130733 * C154415) *
               C154011 * C577 -
           ((C104699 + C104698) * C154415 + C104685 * C154473 +
            (C102898 + C102899) * C154483 +
            (C97277 * C602 - C97278 * C585 - C97277 * C603 + C154268 * C621 +
             C97275 * C600 - C97276 * C584 - C97275 * C601 + C97273 * C620) *
                C154487) *
               C154011 * C578 +
           ((C97275 * C602 - C97276 * C585 - C97275 * C603 + C97273 * C621 +
             C97277 * C2337 - C97278 * C2328 - C97277 * C2338 +
             C154268 * C2343) *
                C154487 +
            (C103715 + C103716) * C154483 + (C103717 + C103718) * C154473 +
            (C97275 * C4912 - C97276 * C4907 - C97275 * C4913 + C97273 * C4916 +
             C97277 * C30002 - C97278 * C29999 - C97277 * C30003 +
             C154268 * C30005) *
                C154415) *
               C154011 * C579) *
              C154066 * C341 +
          (((C97907 + C97906) * C154487 + C102874 * C154483 +
            C102875 * C154473 + (C102900 + C102901) * C154415) *
               C154011 * C578 -
           (C101540 * C154415 + C101476 * C154473 + C101477 * C154483 +
            (C97341 + C97340) * C154487) *
               C154011 * C577 -
           ((C97277 * C31817 - C97278 * C31816 - C97277 * C31818 +
             C154268 * C31819 + C97275 * C4910 - C97276 * C4906 -
             C97275 * C4911 + C97273 * C4915) *
                C154415 +
            (C101873 + C101872) * C154473 + (C101871 + C101870) * C154483 +
            (C97909 + C97908) * C154487) *
               C154011 * C579) *
              C154066 * C154053)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C106573 * C144 - C106574 * C136 - C106573 * C145 + C154488 * C160 +
            C106575 * C600 - C106576 * C584 - C106575 * C601 + C154485 * C620 +
            C106577 * C602 - C106578 * C585 - C106577 * C603 + C154476 * C621 +
            C106579 * C2337 - C106580 * C2328 - C106579 * C2338 +
            C154422 * C2343) *
               C70494 +
           (C106573 * C363 - C106574 * C347 - C106573 * C364 + C154488 * C383 +
            C106575 * C1135 - C106576 * C1129 - C106575 * C1136 +
            C154485 * C1147 + C106577 * C1554 - C106578 * C1545 -
            C106577 * C1555 + C154476 * C1560 + C106579 * C6274 -
            C106580 * C6263 - C106579 * C6275 + C154422 * C6281) *
               C154226) *
              C154011 * C154082 * C154066 * C130 -
          ((C106908 + C106909 + C106910 + C106911) * C154226 +
           (C106657 + C106656 + C106655 + C106654) * C70494) *
              C154011 * C154082 * C154066 * C131 +
          ((C106661 + C106660 + C106659 + C106658) * C70494 +
           (C107384 + C107385 + C107386 + C107387) * C154226) *
              C154011 * C154082 * C154066 * C132 -
          ((C106579 * C8648 - C106580 * C8647 - C106579 * C8649 +
            C154422 * C8650 + C106577 * C1548 - C106578 * C1542 -
            C106577 * C1549 + C154476 * C1557 + C106575 * C1141 -
            C106576 * C1132 - C106575 * C1142 + C154485 * C1150 +
            C106573 * C357 - C106574 * C344 - C106573 * C358 + C154488 * C380) *
               C154226 +
           (C106665 + C106664 + C106663 + C106662) * C70494) *
              C154011 * C154082 * C154066 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C106573 * C144 - C106574 * C136 - C106573 * C145 + C154488 * C160 +
             C106575 * C600 - C106576 * C584 - C106575 * C601 + C154485 * C620 +
             C106577 * C602 - C106578 * C585 - C106577 * C603 + C154476 * C621 +
             C106579 * C2337 - C106580 * C2328 - C106579 * C2338 +
             C154422 * C2343) *
                C70494 +
            (C134318 + C134319 + C134320 + C134321) * C154226) *
               C154011 * C154082 * C338 -
           ((C134322 + C134323 + C134324 + C134325) * C154226 +
            (C134321 + C134320 + C134319 + C134318) * C70494) *
               C154011 * C154082 * C339 +
           ((C134325 + C134324 + C134323 + C134322) * C70494 +
            (C106573 * C1412 - C106574 * C1403 - C106573 * C1413 +
             C154488 * C1418 + C106575 * C4258 - C106576 * C4254 -
             C106575 * C4259 + C154485 * C4266 + C106577 * C4912 -
             C106578 * C4907 - C106577 * C4913 + C154476 * C4916 +
             C106579 * C30002 - C106580 * C29999 - C106579 * C30003 +
             C154422 * C30005) *
                C154226) *
               C154011 * C154082 * C340) *
              C341 +
          (((C106911 + C106910 + C106909 + C106908) * C70494 +
            (C106912 + C106913 + C106914 + C106915) * C154226) *
               C154011 * C154082 * C339 -
           ((C106908 + C106909 + C106910 + C106911) * C154226 +
            (C106657 + C106656 + C106655 + C106654) * C70494) *
               C154011 * C154082 * C338 -
           ((C106579 * C31817 - C106580 * C31816 - C106579 * C31818 +
             C154422 * C31819 + C106577 * C4910 - C106578 * C4906 -
             C106577 * C4911 + C154476 * C4915 + C106575 * C4260 -
             C106576 * C4255 - C106575 * C4261 + C154485 * C4267 +
             C106573 * C1410 - C106574 * C1402 - C106573 * C1411 +
             C154488 * C1417) *
                C154226 +
            (C106915 + C106914 + C106913 + C106912) * C70494) *
               C154011 * C154082 * C340) *
              C154053)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C106573 * C144 - C106574 * C136 - C106573 * C145 + C154488 * C160 +
             C106575 * C600 - C106576 * C584 - C106575 * C601 + C154485 * C620 +
             C106577 * C602 - C106578 * C585 - C106577 * C603 + C154476 * C621 +
             C106579 * C2337 - C106580 * C2328 - C106579 * C2338 +
             C154422 * C2343) *
                C70494 +
            (C134318 + C134319 + C134320 + C134321) * C154226) *
               C154011 * C577 -
           ((C106579 * C9282 - C106580 * C9277 - C106579 * C9283 +
             C154422 * C9286 + C106577 * C6274 - C106578 * C6263 -
             C106577 * C6275 + C154476 * C6281 + C106575 * C1554 -
             C106576 * C1545 - C106575 * C1555 + C154485 * C1560 +
             C106573 * C1135 - C106574 * C1129 - C106573 * C1136 +
             C154488 * C1147) *
                C154226 +
            (C106579 * C7777 - C106580 * C7773 - C106579 * C7778 +
             C154422 * C7785 + C106577 * C2337 - C106578 * C2328 -
             C106577 * C2338 + C154476 * C2343 + C106575 * C602 -
             C106576 * C585 - C106575 * C603 + C154485 * C621 + C106573 * C600 -
             C106574 * C584 - C106573 * C601 + C154488 * C620) *
                C70494) *
               C154011 * C578 +
           ((C106573 * C602 - C106574 * C585 - C106573 * C603 + C154488 * C621 +
             C106575 * C2337 - C106576 * C2328 - C106575 * C2338 +
             C154485 * C2343 + C106577 * C7777 - C106578 * C7773 -
             C106577 * C7778 + C154476 * C7785 + C106579 * C10602 -
             C106580 * C10597 - C106579 * C10603 + C154422 * C10606) *
                C70494 +
            (C106573 * C1554 - C106574 * C1545 - C106573 * C1555 +
             C154488 * C1560 + C106575 * C6274 - C106576 * C6263 -
             C106575 * C6275 + C154485 * C6281 + C106577 * C9282 -
             C106578 * C9277 - C106577 * C9283 + C154476 * C9286 +
             C106579 * C33869 - C106580 * C33866 - C106579 * C33870 +
             C154422 * C33872) *
                C154226) *
               C154011 * C579) *
              C154066 * C341 +
          (((C107161 + C107160 + C107159 + C107158) * C70494 +
            (C107892 + C107893 + C107894 + C107895) * C154226) *
               C154011 * C578 -
           ((C106908 + C106909 + C106910 + C106911) * C154226 +
            (C106657 + C106656 + C106655 + C106654) * C70494) *
               C154011 * C577 -
           ((C106579 * C56192 - C106580 * C56191 - C106579 * C56193 +
             C154422 * C56194 + C106577 * C9280 - C106578 * C9276 -
             C106577 * C9281 + C154476 * C9285 + C106575 * C6270 -
             C106576 * C6261 - C106575 * C6271 + C154485 * C6279 +
             C106573 * C1552 - C106574 * C1544 - C106573 * C1553 +
             C154488 * C1559) *
                C154226 +
            (C107165 + C107164 + C107163 + C107162) * C70494) *
               C154011 * C579) *
              C154066 * C154053)) /
            (p * q * std::sqrt(p + q));
    d2ee[108] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
             C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
                C154487 +
            (C101527 + C101528) * C154483 + C101539 * C154473 +
            C130733 * C154415) *
               C154011 * C154393 -
           ((C104699 + C104698) * C154415 + C104685 * C154473 +
            (C102898 + C102899) * C154483 +
            (C97277 * C602 - C97278 * C585 - C97277 * C603 + C154268 * C621 +
             C97275 * C600 - C97276 * C584 - C97275 * C601 + C97273 * C620) *
                C154487) *
               C154011 * C154146) *
              C154066 * C154461 +
          (((C97907 + C97906) * C154487 + C102874 * C154483 +
            C102875 * C154473 + (C102900 + C102901) * C154415) *
               C154011 * C154146 -
           (C101540 * C154415 + C101476 * C154473 + C101477 * C154483 +
            (C97341 + C97340) * C154487) *
               C154011 * C154393) *
              C154066 * C154462 +
          ((C97350 * C154487 + C102164 * C154483 + C102165 * C154473 +
            (C101537 + C101538) * C154415) *
               C154011 * C154393 -
           ((C97277 * C4908 - C97278 * C4905 - C97277 * C4909 +
             C154268 * C4914 + C97275 * C4262 - C97276 * C4256 -
             C97275 * C4263 + C97273 * C4268) *
                C154415 +
            (C102469 + C102468) * C154473 + C111602 * C154483 +
            C98321 * C154487) *
               C154011 * C154146) *
              C154066 * C818)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
              C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
                 C70494 +
             (C101527 + C101528) * C154226) *
                C154477 +
            ((C97340 + C97341) * C70494 + C101466 * C154226) * C154458 +
            C125375 * C154429) *
               C154393 -
           (C126542 * C154429 +
            (C102857 * C154226 + (C97906 + C97907) * C70494) * C154458 +
            ((C102898 + C102899) * C154226 +
             (C97277 * C602 - C97278 * C585 - C97277 * C603 + C154268 * C621 +
              C97275 * C600 - C97276 * C584 - C97275 * C601 + C97273 * C620) *
                 C70494) *
                C154477) *
               C154146) *
              C154066 * C154461 +
          ((((C97907 + C97906) * C70494 + C102874 * C154226) * C154477 +
            ((C97905 + C97904) * C70494 + C111992 * C154226) * C154458 +
            ((C97903 + C97902) * C70494 + (C98636 + C98637) * C154226) *
                C154429) *
               C154146 -
           (C125376 * C154429 +
            (C98109 * C154226 + (C97343 + C97342) * C70494) * C154458 +
            (C101477 * C154226 + (C97341 + C97340) * C70494) * C154477) *
               C154393) *
              C154066 * C154462 +
          ((C125375 * C154477 +
            (C97351 * C70494 + C111310 * C154226) * C154458 +
            ((C97347 + C97346) * C70494 + (C98124 + C98125) * C154226) *
                C154429) *
               C154393 -
           (((C97277 * C1546 - C97278 * C1541 - C97277 * C1547 +
              C154268 * C1556 + C97275 * C1143 - C97276 * C1133 -
              C97275 * C1144 + C97273 * C1151) *
                 C154226 +
             (C98337 + C98336) * C70494) *
                C154429 +
            ((C98637 + C98636) * C154226 + C98320 * C70494) * C154458 +
            C126542 * C154477) *
               C154146) *
              C154066 * C818)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C106573 * C144 - C106574 * C136 - C106573 * C145 + C154488 * C160 +
             C106575 * C600 - C106576 * C584 - C106575 * C601 + C154485 * C620 +
             C106577 * C602 - C106578 * C585 - C106577 * C603 + C154476 * C621 +
             C106579 * C2337 - C106580 * C2328 - C106579 * C2338 +
             C154422 * C2343) *
                C70494 +
            (C134318 + C134319 + C134320 + C134321) * C154226) *
               C154011 * C154393 -
           ((C106579 * C9282 - C106580 * C9277 - C106579 * C9283 +
             C154422 * C9286 + C106577 * C6274 - C106578 * C6263 -
             C106577 * C6275 + C154476 * C6281 + C106575 * C1554 -
             C106576 * C1545 - C106575 * C1555 + C154485 * C1560 +
             C106573 * C1135 - C106574 * C1129 - C106573 * C1136 +
             C154488 * C1147) *
                C154226 +
            (C106579 * C7777 - C106580 * C7773 - C106579 * C7778 +
             C154422 * C7785 + C106577 * C2337 - C106578 * C2328 -
             C106577 * C2338 + C154476 * C2343 + C106575 * C602 -
             C106576 * C585 - C106575 * C603 + C154485 * C621 + C106573 * C600 -
             C106574 * C584 - C106573 * C601 + C154488 * C620) *
                C70494) *
               C154011 * C154146) *
              C154066 * C154461 +
          (((C107161 + C107160 + C107159 + C107158) * C70494 +
            (C107892 + C107893 + C107894 + C107895) * C154226) *
               C154011 * C154146 -
           ((C106908 + C106909 + C106910 + C106911) * C154226 +
            (C106657 + C106656 + C106655 + C106654) * C70494) *
               C154011 * C154393) *
              C154066 * C154462 +
          (((C106661 + C106660 + C106659 + C106658) * C70494 +
            (C107384 + C107385 + C107386 + C107387) * C154226) *
               C154011 * C154393 -
           ((C106579 * C9278 - C106580 * C9275 - C106579 * C9279 +
             C154422 * C9284 + C106577 * C6266 - C106578 * C6259 -
             C106577 * C6267 + C154476 * C6277 + C106575 * C1550 -
             C106576 * C1543 - C106575 * C1551 + C154485 * C1558 +
             C106573 * C1139 - C106574 * C1131 - C106573 * C1140 +
             C154488 * C1149) *
                C154226 +
            (C107609 + C107608 + C107607 + C107606) * C70494) *
               C154011 * C154146) *
              C154066 * C818)) /
            (p * q * std::sqrt(p + q));
    d2ee[109] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
              C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
                 C70494 +
             (C101527 + C101528) * C154226) *
                C154477 +
            ((C97340 + C97341) * C70494 + C101466 * C154226) * C154458 +
            C125375 * C154429) *
               C154082 * C338 -
           ((C101502 * C154226 + C98109 * C70494) * C154429 +
            (C101476 * C154226 + C101477 * C70494) * C154458 +
            ((C101530 + C101529) * C154226 + (C101528 + C101527) * C70494) *
                C154477) *
               C154082 * C339 +
           ((C101539 * C70494 + (C101534 + C101533) * C154226) * C154477 +
            (C101467 * C70494 + C101541 * C154226) * C154458 +
            (C102165 * C70494 + (C101537 + C101538) * C154226) * C154429) *
               C154082 * C340) *
              C341 +
          (((C101466 * C70494 + C101467 * C154226) * C154477 +
            (C102164 * C70494 + C102165 * C154226) * C154458 +
            (C111310 * C70494 + (C97634 + C97635) * C154226) * C154429) *
               C154082 * C339 -
           (C125376 * C154429 +
            (C98109 * C154226 + (C97343 + C97342) * C70494) * C154458 +
            (C101477 * C154226 + (C97341 + C97340) * C70494) * C154477) *
               C154082 * C338 -
           (((C97277 * C4264 - C97278 * C4257 - C97277 * C4265 +
              C154268 * C4269 + C97275 * C1406 - C97276 * C1400 -
              C97275 * C1407 + C97273 * C1415) *
                 C154226 +
             (C97635 + C97634) * C70494) *
                C154429 +
            ((C101538 + C101537) * C154226 + C101502 * C70494) * C154458 +
            (C101540 * C154226 + C101476 * C70494) * C154477) *
               C154082 * C340) *
              C154053)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
             C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
                C70494 +
            (C101527 + C101528) * C154226) *
               C154477 +
           ((C97340 + C97341) * C70494 + C101466 * C154226) * C154458 +
           C125375 * C154429) *
              C154082 * C154066 * C130 -
          (C125376 * C154429 +
           (C98109 * C154226 + (C97343 + C97342) * C70494) * C154458 +
           (C101477 * C154226 + (C97341 + C97340) * C70494) * C154477) *
              C154082 * C154066 * C131 +
          (C125375 * C154477 + (C97351 * C70494 + C111310 * C154226) * C154458 +
           ((C97347 + C97346) * C70494 + (C98124 + C98125) * C154226) *
               C154429) *
              C154082 * C154066 * C132 -
          (((C97277 * C1145 - C97278 * C1134 - C97277 * C1146 +
             C154268 * C1152 + C97275 * C375 - C97276 * C353 - C97275 * C376 +
             C97273 * C389) *
                C154226 +
            (C97349 + C97348) * C70494) *
               C154429 +
           ((C98125 + C98124) * C154226 + C97352 * C70494) * C154458 +
           C125376 * C154477) *
              C154082 * C154066 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
            C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
               C154487 +
           (C101527 + C101528) * C154483 + C101539 * C154473 +
           (C101534 + C101533) * C154415) *
              C154011 * C154082 * C154066 * C130 -
          (C101540 * C154415 + C101476 * C154473 + C101477 * C154483 +
           (C97341 + C97340) * C154487) *
              C154011 * C154082 * C154066 * C131 +
          (C97350 * C154487 + C102164 * C154483 + C102165 * C154473 +
           (C101537 + C101538) * C154415) *
              C154011 * C154082 * C154066 * C132 -
          ((C97277 * C4264 - C97278 * C4257 - C97277 * C4265 + C154268 * C4269 +
            C97275 * C1406 - C97276 * C1400 - C97275 * C1407 + C97273 * C1415) *
               C154415 +
           (C97635 + C97634) * C154473 + C98108 * C154483 + C97353 * C154487) *
              C154011 * C154082 * C154066 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
             C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
                C154487 +
            (C101527 + C101528) * C154483 + C101539 * C154473 +
            C130733 * C154415) *
               C154011 * C154082 * C338 -
           ((C103400 + C103399) * C154415 + C103386 * C154473 +
            (C101530 + C101529) * C154483 + (C101528 + C101527) * C154487) *
               C154011 * C154082 * C339 +
           (C101539 * C154487 + C130733 * C154483 +
            (C103399 + C103400) * C154473 +
            (C97275 * C4675 - C97276 * C4670 - C97275 * C4676 + C97273 * C4679 +
             C97277 * C28880 - C97278 * C28878 - C97277 * C28881 +
             C154268 * C28884) *
                C154415) *
               C154011 * C154082 * C340) *
              C341 +
          ((C101466 * C154487 + C101467 * C154483 + C101541 * C154473 +
            (C101535 + C101536) * C154415) *
               C154011 * C154082 * C339 -
           (C101540 * C154415 + C101476 * C154473 + C101477 * C154483 +
            (C97341 + C97340) * C154487) *
               C154011 * C154082 * C338 -
           ((C97277 * C28882 - C97278 * C28879 - C97277 * C28883 +
             C154268 * C28885 + C97275 * C4673 - C97276 * C4669 -
             C97275 * C4674 + C97273 * C4678) *
                C154415 +
            (C101536 + C101535) * C154473 + C101540 * C154483 +
            C101476 * C154487) *
               C154011 * C154082 * C340) *
              C154053)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C106573 * C144 - C106574 * C136 - C106573 * C145 + C154488 * C160 +
            C106575 * C600 - C106576 * C584 - C106575 * C601 + C154485 * C620 +
            C106577 * C602 - C106578 * C585 - C106577 * C603 + C154476 * C621 +
            C106579 * C2337 - C106580 * C2328 - C106579 * C2338 +
            C154422 * C2343) *
               C70494 +
           (C106573 * C363 - C106574 * C347 - C106573 * C364 + C154488 * C383 +
            C106575 * C1135 - C106576 * C1129 - C106575 * C1136 +
            C154485 * C1147 + C106577 * C1554 - C106578 * C1545 -
            C106577 * C1555 + C154476 * C1560 + C106579 * C6274 -
            C106580 * C6263 - C106579 * C6275 + C154422 * C6281) *
               C154226) *
              C154011 * C154082 * C154066 * C130 -
          ((C106908 + C106909 + C106910 + C106911) * C154226 +
           (C106657 + C106656 + C106655 + C106654) * C70494) *
              C154011 * C154082 * C154066 * C131 +
          ((C106661 + C106660 + C106659 + C106658) * C70494 +
           (C107384 + C107385 + C107386 + C107387) * C154226) *
              C154011 * C154082 * C154066 * C132 -
          ((C106579 * C8648 - C106580 * C8647 - C106579 * C8649 +
            C154422 * C8650 + C106577 * C1548 - C106578 * C1542 -
            C106577 * C1549 + C154476 * C1557 + C106575 * C1141 -
            C106576 * C1132 - C106575 * C1142 + C154485 * C1150 +
            C106573 * C357 - C106574 * C344 - C106573 * C358 + C154488 * C380) *
               C154226 +
           (C106665 + C106664 + C106663 + C106662) * C70494) *
              C154011 * C154082 * C154066 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C106573 * C144 - C106574 * C136 - C106573 * C145 + C154488 * C160 +
             C106575 * C600 - C106576 * C584 - C106575 * C601 + C154485 * C620 +
             C106577 * C602 - C106578 * C585 - C106577 * C603 + C154476 * C621 +
             C106579 * C2337 - C106580 * C2328 - C106579 * C2338 +
             C154422 * C2343) *
                C70494 +
            (C134318 + C134319 + C134320 + C134321) * C154226) *
               C154011 * C154082 * C338 -
           ((C134322 + C134323 + C134324 + C134325) * C154226 +
            (C134321 + C134320 + C134319 + C134318) * C70494) *
               C154011 * C154082 * C339 +
           ((C134325 + C134324 + C134323 + C134322) * C70494 +
            (C106573 * C1412 - C106574 * C1403 - C106573 * C1413 +
             C154488 * C1418 + C106575 * C4258 - C106576 * C4254 -
             C106575 * C4259 + C154485 * C4266 + C106577 * C4912 -
             C106578 * C4907 - C106577 * C4913 + C154476 * C4916 +
             C106579 * C30002 - C106580 * C29999 - C106579 * C30003 +
             C154422 * C30005) *
                C154226) *
               C154011 * C154082 * C340) *
              C341 +
          (((C106911 + C106910 + C106909 + C106908) * C70494 +
            (C106912 + C106913 + C106914 + C106915) * C154226) *
               C154011 * C154082 * C339 -
           ((C106908 + C106909 + C106910 + C106911) * C154226 +
            (C106657 + C106656 + C106655 + C106654) * C70494) *
               C154011 * C154082 * C338 -
           ((C106579 * C31817 - C106580 * C31816 - C106579 * C31818 +
             C154422 * C31819 + C106577 * C4910 - C106578 * C4906 -
             C106577 * C4911 + C154476 * C4915 + C106575 * C4260 -
             C106576 * C4255 - C106575 * C4261 + C154485 * C4267 +
             C106573 * C1410 - C106574 * C1402 - C106573 * C1411 +
             C154488 * C1417) *
                C154226 +
            (C106915 + C106914 + C106913 + C106912) * C70494) *
               C154011 * C154082 * C340) *
              C154053)) /
            (p * q * std::sqrt(p + q));
    d2ee[110] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
             C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
                C154487 +
            (C101527 + C101528) * C154483 + C101539 * C154473 +
            C130733 * C154415) *
               C154011 * C154082 * C154463 -
           (C131898 * C154415 + C103386 * C154473 +
            (C101530 + C101529) * C154483 + (C101528 + C101527) * C154487) *
               C154011 * C154082 * C154464 +
           (C101539 * C154487 + C130733 * C154483 +
            (C103399 + C103400) * C154473 + (C131911 + C131912) * C154415) *
               C154011 * C154082 * C1685) *
              C154384 +
          ((C101466 * C154487 + C101467 * C154483 + C101541 * C154473 +
            (C101535 + C101536) * C154415) *
               C154011 * C154082 * C154464 -
           (C101540 * C154415 + C101476 * C154473 + C101477 * C154483 +
            (C97341 + C97340) * C154487) *
               C154011 * C154082 * C154463 -
           ((C97277 * C28882 - C97278 * C28879 - C97277 * C28883 +
             C154268 * C28885 + C97275 * C4673 - C97276 * C4669 -
             C97275 * C4674 + C97273 * C4678) *
                C154415 +
            (C101536 + C101535) * C154473 + C101540 * C154483 +
            C101476 * C154487) *
               C154011 * C154082 * C1685) *
              C154053)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
              C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
                 C70494 +
             (C101527 + C101528) * C154226) *
                C154477 +
            ((C97340 + C97341) * C70494 + C101466 * C154226) * C154458 +
            C125375 * C154429) *
               C154082 * C154463 -
           (C126249 * C154429 +
            (C101476 * C154226 + C101477 * C70494) * C154458 +
            ((C101530 + C101529) * C154226 + (C101528 + C101527) * C70494) *
                C154477) *
               C154082 * C154464 +
           ((C101539 * C70494 + (C101534 + C101533) * C154226) * C154477 +
            (C101467 * C70494 + C101541 * C154226) * C154458 +
            (C102165 * C70494 + (C101537 + C101538) * C154226) * C154429) *
               C154082 * C1685) *
              C154384 +
          (((C101466 * C70494 + C101467 * C154226) * C154477 +
            (C102164 * C70494 + C102165 * C154226) * C154458 +
            (C111310 * C70494 + (C97634 + C97635) * C154226) * C154429) *
               C154082 * C154464 -
           (C125376 * C154429 +
            (C98109 * C154226 + (C97343 + C97342) * C70494) * C154458 +
            (C101477 * C154226 + (C97341 + C97340) * C70494) * C154477) *
               C154082 * C154463 -
           (((C97277 * C4264 - C97278 * C4257 - C97277 * C4265 +
              C154268 * C4269 + C97275 * C1406 - C97276 * C1400 -
              C97275 * C1407 + C97273 * C1415) *
                 C154226 +
             (C97635 + C97634) * C70494) *
                C154429 +
            ((C101538 + C101537) * C154226 + C101502 * C70494) * C154458 +
            (C101540 * C154226 + C101476 * C70494) * C154477) *
               C154082 * C1685) *
              C154053)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C106573 * C144 - C106574 * C136 - C106573 * C145 + C154488 * C160 +
             C106575 * C600 - C106576 * C584 - C106575 * C601 + C154485 * C620 +
             C106577 * C602 - C106578 * C585 - C106577 * C603 + C154476 * C621 +
             C106579 * C2337 - C106580 * C2328 - C106579 * C2338 +
             C154422 * C2343) *
                C70494 +
            (C134318 + C134319 + C134320 + C134321) * C154226) *
               C154011 * C154082 * C154463 -
           ((C134322 + C134323 + C134324 + C134325) * C154226 +
            (C134321 + C134320 + C134319 + C134318) * C70494) *
               C154011 * C154082 * C154464 +
           ((C134325 + C134324 + C134323 + C134322) * C70494 +
            (C135542 + C135543 + C135544 + C135545) * C154226) *
               C154011 * C154082 * C1685) *
              C154384 +
          (((C106911 + C106910 + C106909 + C106908) * C70494 +
            (C106912 + C106913 + C106914 + C106915) * C154226) *
               C154011 * C154082 * C154464 -
           ((C106908 + C106909 + C106910 + C106911) * C154226 +
            (C106657 + C106656 + C106655 + C106654) * C70494) *
               C154011 * C154082 * C154463 -
           ((C106579 * C31817 - C106580 * C31816 - C106579 * C31818 +
             C154422 * C31819 + C106577 * C4910 - C106578 * C4906 -
             C106577 * C4911 + C154476 * C4915 + C106575 * C4260 -
             C106576 * C4255 - C106575 * C4261 + C154485 * C4267 +
             C106573 * C1410 - C106574 * C1402 - C106573 * C1411 +
             C154488 * C1417) *
                C154226 +
            (C106915 + C106914 + C106913 + C106912) * C70494) *
               C154011 * C154082 * C1685) *
              C154053)) /
            (p * q * std::sqrt(p + q));
    d2ee[111] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
             C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
                C154487 +
            (C101527 + C101528) * C154483 + C101539 * C154473 +
            C130733 * C154415) *
               C154011 * C154393 -
           (C132767 * C154415 + C104685 * C154473 +
            (C102898 + C102899) * C154483 +
            (C97277 * C602 - C97278 * C585 - C97277 * C603 + C154268 * C621 +
             C97275 * C600 - C97276 * C584 - C97275 * C601 + C97273 * C620) *
                C154487) *
               C154011 * C154146) *
              C154463 +
          (((C102899 + C102898) * C154487 + (C102897 + C102896) * C154483 +
            (C104698 + C104699) * C154473 + (C132780 + C132781) * C154415) *
               C154011 * C154146 -
           (C131898 * C154415 + C103386 * C154473 +
            (C101530 + C101529) * C154483 + (C101528 + C101527) * C154487) *
               C154011 * C154393) *
              C154464 +
          ((C101539 * C154487 + C130733 * C154483 +
            (C103399 + C103400) * C154473 + (C131911 + C131912) * C154415) *
               C154011 * C154393 -
           ((C97277 * C29238 - C97278 * C29237 - C97277 * C29239 +
             C154268 * C29240 + C97275 * C28880 - C97276 * C28878 -
             C97275 * C28881 + C97273 * C28884) *
                C154415 +
            (C132781 + C132780) * C154473 + C132767 * C154483 +
            C104685 * C154487) *
               C154011 * C154146) *
              C1685) *
         C154047) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
              C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
                 C70494 +
             (C101527 + C101528) * C154226) *
                C154477 +
            ((C97340 + C97341) * C70494 + C101466 * C154226) * C154458 +
            C125375 * C154429) *
               C154393 -
           (C126542 * C154429 +
            (C102857 * C154226 + (C97906 + C97907) * C70494) * C154458 +
            ((C102898 + C102899) * C154226 +
             (C97277 * C602 - C97278 * C585 - C97277 * C603 + C154268 * C621 +
              C97275 * C600 - C97276 * C584 - C97275 * C601 + C97273 * C620) *
                 C70494) *
                C154477) *
               C154146) *
              C154463 +
          ((((C102899 + C102898) * C70494 + (C102897 + C102896) * C154226) *
                C154477 +
            (C102874 * C70494 + C102875 * C154226) * C154458 +
            (C111992 * C70494 + (C102468 + C102469) * C154226) * C154429) *
               C154146 -
           (C126249 * C154429 +
            (C101476 * C154226 + C101477 * C70494) * C154458 +
            ((C101530 + C101529) * C154226 + (C101528 + C101527) * C70494) *
                C154477) *
               C154393) *
              C154464 +
          (((C101539 * C70494 + (C101534 + C101533) * C154226) * C154477 +
            (C101467 * C70494 + C101541 * C154226) * C154458 +
            (C102165 * C70494 + (C101537 + C101538) * C154226) * C154429) *
               C154393 -
           (((C97277 * C4908 - C97278 * C4905 - C97277 * C4909 +
              C154268 * C4914 + C97275 * C4262 - C97276 * C4256 -
              C97275 * C4263 + C97273 * C4268) *
                 C154226 +
             (C102469 + C102468) * C70494) *
                C154429 +
            ((C102901 + C102900) * C154226 + C102856 * C70494) * C154458 +
            ((C104699 + C104698) * C154226 + C104685 * C70494) * C154477) *
               C154146) *
              C1685) *
         C154047) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C106573 * C144 - C106574 * C136 - C106573 * C145 + C154488 * C160 +
             C106575 * C600 - C106576 * C584 - C106575 * C601 + C154485 * C620 +
             C106577 * C602 - C106578 * C585 - C106577 * C603 + C154476 * C621 +
             C106579 * C2337 - C106580 * C2328 - C106579 * C2338 +
             C154422 * C2343) *
                C70494 +
            (C134318 + C134319 + C134320 + C134321) * C154226) *
               C154011 * C154393 -
           ((C135190 + C135191 + C135192 + C135193) * C154226 +
            (C106579 * C7777 - C106580 * C7773 - C106579 * C7778 +
             C154422 * C7785 + C106577 * C2337 - C106578 * C2328 -
             C106577 * C2338 + C154476 * C2343 + C106575 * C602 -
             C106576 * C585 - C106575 * C603 + C154485 * C621 + C106573 * C600 -
             C106574 * C584 - C106573 * C601 + C154488 * C620) *
                C70494) *
               C154011 * C154146) *
              C154463 +
          (((C135193 + C135192 + C135191 + C135190) * C70494 +
            (C136438 + C136439 + C136440 + C136441) * C154226) *
               C154011 * C154146 -
           ((C134322 + C134323 + C134324 + C134325) * C154226 +
            (C134321 + C134320 + C134319 + C134318) * C70494) *
               C154011 * C154393) *
              C154464 +
          (((C134325 + C134324 + C134323 + C134322) * C70494 +
            (C135542 + C135543 + C135544 + C135545) * C154226) *
               C154011 * C154393 -
           ((C106579 * C32489 - C106580 * C32488 - C106579 * C32490 +
             C154422 * C32491 + C106577 * C30002 - C106578 * C29999 -
             C106577 * C30003 + C154476 * C30005 + C106575 * C4912 -
             C106576 * C4907 - C106575 * C4913 + C154485 * C4916 +
             C106573 * C4258 - C106574 * C4254 - C106573 * C4259 +
             C154488 * C4266) *
                C154226 +
            (C136441 + C136440 + C136439 + C136438) * C70494) *
               C154011 * C154146) *
              C1685) *
         C154047) /
            (p * q * std::sqrt(p + q));
    d2ee[112] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C97275 * C144 - C97276 * C136 - C97275 * C145 +
                  C97273 * C160 + C97277 * C600 - C97278 * C584 -
                  C97277 * C601 + C154268 * C620) *
                     C70494 +
                 (C101527 + C101528) * C154226) *
                    C154477 +
                ((C97340 + C97341) * C70494 + C101466 * C154226) * C154458 +
                C125375 * C154429) *
                   C154082 * C1307 -
               (C126249 * C154429 +
                (C101476 * C154226 + C101477 * C70494) * C154458 +
                ((C101530 + C101529) * C154226 + (C101528 + C101527) * C70494) *
                    C154477) *
                   C154082 * C154118) *
                  C1309 +
              (((C101466 * C70494 + C101467 * C154226) * C154477 +
                (C102164 * C70494 + C102165 * C154226) * C154458 +
                (C111310 * C70494 + (C97634 + C97635) * C154226) * C154429) *
                   C154082 * C154118 -
               (C125376 * C154429 +
                (C98109 * C154226 + (C97343 + C97342) * C70494) * C154458 +
                (C101477 * C154226 + (C97341 + C97340) * C70494) * C154477) *
                   C154082 * C1307) *
                  C1310 +
              ((C125375 * C154477 +
                (C97351 * C70494 + C111310 * C154226) * C154458 +
                ((C97347 + C97346) * C70494 + (C98124 + C98125) * C154226) *
                    C154429) *
                   C154082 * C1307 -
               (((C97277 * C1977 - C97278 * C1972 - C97277 * C1978 +
                  C154268 * C1987 + C97275 * C373 - C97276 * C352 -
                  C97275 * C374 + C97273 * C388) *
                     C154226 +
                 (C98125 + C98124) * C70494) *
                    C154429 +
                ((C97635 + C97634) * C154226 + C98108 * C70494) * C154458 +
                C126249 * C154477) *
                   C154082 * C154118) *
                  C1311) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
                 C97277 * C600 - C97278 * C584 - C97277 * C601 +
                 C154268 * C620) *
                    C70494 +
                (C101527 + C101528) * C154226) *
                   C154477 +
               ((C97340 + C97341) * C70494 + C101466 * C154226) * C154458 +
               C125375 * C154429) *
                  C154082 * C1394 -
              (C126249 * C154429 +
               (C101476 * C154226 + C101477 * C70494) * C154458 +
               ((C101530 + C101529) * C154226 + (C101528 + C101527) * C70494) *
                   C154477) *
                  C154082 * C1395 +
              ((C101539 * C70494 + (C101534 + C101533) * C154226) * C154477 +
               (C101467 * C70494 + C101541 * C154226) * C154458 +
               (C102165 * C70494 + (C101537 + C101538) * C154226) * C154429) *
                  C154082 * C1396 -
              (((C97277 * C5660 - C97278 * C5657 - C97277 * C5661 +
                 C154268 * C5666 + C97275 * C3147 - C97276 * C3141 -
                 C97275 * C3148 + C97273 * C3153) *
                    C154226 +
                (C101538 + C101537) * C70494) *
                   C154429 +
               ((C101536 + C101535) * C154226 + C101540 * C70494) * C154458 +
               ((C103400 + C103399) * C154226 + C103386 * C70494) * C154477) *
                  C154082 * C1397) *
             C154047) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
              C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
                 C70494 +
             (C101527 + C101528) * C154226) *
                C154477 +
            ((C97340 + C97341) * C70494 + C101466 * C154226) * C154458 +
            C125375 * C154429) *
               C577 -
           (C126542 * C154429 +
            (C102857 * C154226 + (C97906 + C97907) * C70494) * C154458 +
            ((C102898 + C102899) * C154226 +
             (C97277 * C602 - C97278 * C585 - C97277 * C603 + C154268 * C621 +
              C97275 * C600 - C97276 * C584 - C97275 * C601 + C97273 * C620) *
                 C70494) *
                C154477) *
               C578 +
           (((C97275 * C602 - C97276 * C585 - C97275 * C603 + C97273 * C621 +
              C97277 * C2337 - C97278 * C2328 - C97277 * C2338 +
              C154268 * C2343) *
                 C70494 +
             (C103715 + C103716) * C154226) *
                C154477 +
            ((C97908 + C97909) * C70494 + (C101870 + C101871) * C154226) *
                C154458 +
            ((C97910 + C97911) * C70494 + (C111016 + C111017) * C154226) *
                C154429) *
               C579) *
              C1307 +
          ((((C102899 + C102898) * C70494 + (C102897 + C102896) * C154226) *
                C154477 +
            (C102874 * C70494 + C102875 * C154226) * C154458 +
            (C111992 * C70494 + (C102468 + C102469) * C154226) * C154429) *
               C578 -
           (C126249 * C154429 +
            (C101476 * C154226 + C101477 * C70494) * C154458 +
            ((C101530 + C101529) * C154226 + (C101528 + C101527) * C70494) *
                C154477) *
               C577 -
           (((C97277 * C6264 - C97278 * C6258 - C97277 * C6265 +
              C154268 * C6276 + C97275 * C3449 - C97276 * C3443 -
              C97275 * C3450 + C97273 * C3455) *
                 C154226 +
             (C111017 + C111016) * C70494) *
                C154429 +
            ((C101873 + C101872) * C154226 + (C101871 + C101870) * C70494) *
                C154458 +
            ((C103718 + C103717) * C154226 + (C103716 + C103715) * C70494) *
                C154477) *
               C579) *
              C154118) *
         C154047) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
             C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
                C154487 +
            (C101527 + C101528) * C154483 + C101539 * C154473 +
            C130733 * C154415) *
               C154011 * C154082 * C1307 -
           ((C103400 + C103399) * C154415 + C103386 * C154473 +
            (C101530 + C101529) * C154483 + (C101528 + C101527) * C154487) *
               C154011 * C154082 * C154118) *
              C1309 +
          ((C101466 * C154487 + C101467 * C154483 + C101541 * C154473 +
            (C101535 + C101536) * C154415) *
               C154011 * C154082 * C154118 -
           (C101540 * C154415 + C101476 * C154473 + C101477 * C154483 +
            (C97341 + C97340) * C154487) *
               C154011 * C154082 * C1307) *
              C1310 +
          ((C97350 * C154487 + C102164 * C154483 + C102165 * C154473 +
            (C101537 + C101538) * C154415) *
               C154011 * C154082 * C1307 -
           ((C97277 * C5660 - C97278 * C5657 - C97277 * C5661 +
             C154268 * C5666 + C97275 * C3147 - C97276 * C3141 -
             C97275 * C3148 + C97273 * C3153) *
                C154415 +
            (C101538 + C101537) * C154473 + C101502 * C154483 +
            C98109 * C154487) *
               C154011 * C154082 * C154118) *
              C1311)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
            C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
               C154487 +
           (C101527 + C101528) * C154483 + C101539 * C154473 +
           C130733 * C154415) *
              C154011 * C154082 * C1394 -
          (C131898 * C154415 + C103386 * C154473 +
           (C101530 + C101529) * C154483 + (C101528 + C101527) * C154487) *
              C154011 * C154082 * C1395 +
          (C101539 * C154487 + C130733 * C154483 +
           (C103399 + C103400) * C154473 + (C131911 + C131912) * C154415) *
              C154011 * C154082 * C1396 -
          ((C97277 * C29662 - C97278 * C29661 - C97277 * C29663 +
            C154268 * C29664 + C97275 * C28322 - C97276 * C28320 -
            C97275 * C28323 + C97273 * C28326) *
               C154415 +
           (C131912 + C131911) * C154473 + C131898 * C154483 +
           C103386 * C154487) *
              C154011 * C154082 * C1397) *
         C154047) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
             C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
                C154487 +
            (C101527 + C101528) * C154483 + C101539 * C154473 +
            C130733 * C154415) *
               C154011 * C577 -
           ((C104699 + C104698) * C154415 + C104685 * C154473 +
            (C102898 + C102899) * C154483 +
            (C97277 * C602 - C97278 * C585 - C97277 * C603 + C154268 * C621 +
             C97275 * C600 - C97276 * C584 - C97275 * C601 + C97273 * C620) *
                C154487) *
               C154011 * C578 +
           ((C97275 * C602 - C97276 * C585 - C97275 * C603 + C97273 * C621 +
             C97277 * C2337 - C97278 * C2328 - C97277 * C2338 +
             C154268 * C2343) *
                C154487 +
            (C103715 + C103716) * C154483 + (C103717 + C103718) * C154473 +
            (C132119 + C132120) * C154415) *
               C154011 * C579) *
              C1307 +
          (((C102899 + C102898) * C154487 + (C102897 + C102896) * C154483 +
            (C104698 + C104699) * C154473 +
            (C97275 * C5664 - C97276 * C5659 - C97275 * C5665 + C97273 * C5668 +
             C97277 * C28466 - C97278 * C28464 - C97277 * C28467 +
             C154268 * C28470) *
                C154415) *
               C154011 * C578 -
           (C131898 * C154415 + C103386 * C154473 +
            (C101530 + C101529) * C154483 + (C101528 + C101527) * C154487) *
               C154011 * C577 -
           ((C97277 * C30000 - C97278 * C29998 - C97277 * C30001 +
             C154268 * C30004 + C97275 * C28466 - C97276 * C28464 -
             C97275 * C28467 + C97273 * C28470) *
                C154415 +
            (C132120 + C132119) * C154473 + (C103718 + C103717) * C154483 +
            (C103716 + C103715) * C154487) *
               C154011 * C579) *
              C154118) *
         C154047) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C106573 * C144 - C106574 * C136 - C106573 * C145 + C154488 * C160 +
             C106575 * C600 - C106576 * C584 - C106575 * C601 + C154485 * C620 +
             C106577 * C602 - C106578 * C585 - C106577 * C603 + C154476 * C621 +
             C106579 * C2337 - C106580 * C2328 - C106579 * C2338 +
             C154422 * C2343) *
                C70494 +
            (C134318 + C134319 + C134320 + C134321) * C154226) *
               C154011 * C154082 * C1307 -
           ((C134322 + C134323 + C134324 + C134325) * C154226 +
            (C134321 + C134320 + C134319 + C134318) * C70494) *
               C154011 * C154082 * C154118) *
              C1309 +
          (((C106911 + C106910 + C106909 + C106908) * C70494 +
            (C106912 + C106913 + C106914 + C106915) * C154226) *
               C154011 * C154082 * C154118 -
           ((C106908 + C106909 + C106910 + C106911) * C154226 +
            (C106657 + C106656 + C106655 + C106654) * C70494) *
               C154011 * C154082 * C1307) *
              C1310 +
          (((C106661 + C106660 + C106659 + C106658) * C70494 +
            (C107384 + C107385 + C107386 + C107387) * C154226) *
               C154011 * C154082 * C1307 -
           ((C106579 * C6264 - C106580 * C6258 - C106579 * C6265 +
             C154422 * C6276 + C106577 * C3449 - C106578 * C3443 -
             C106577 * C3450 + C154476 * C3455 + C106575 * C1981 -
             C106576 * C1974 - C106575 * C1982 + C154485 * C1989 +
             C106573 * C369 - C106574 * C350 - C106573 * C370 +
             C154488 * C386) *
                C154226 +
            (C107387 + C107386 + C107385 + C107384) * C70494) *
               C154011 * C154082 * C154118) *
              C1311)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C106573 * C144 - C106574 * C136 - C106573 * C145 + C154488 * C160 +
            C106575 * C600 - C106576 * C584 - C106575 * C601 + C154485 * C620 +
            C106577 * C602 - C106578 * C585 - C106577 * C603 + C154476 * C621 +
            C106579 * C2337 - C106580 * C2328 - C106579 * C2338 +
            C154422 * C2343) *
               C70494 +
           (C134318 + C134319 + C134320 + C134321) * C154226) *
              C154011 * C154082 * C1394 -
          ((C134322 + C134323 + C134324 + C134325) * C154226 +
           (C134321 + C134320 + C134319 + C134318) * C70494) *
              C154011 * C154082 * C1395 +
          ((C134325 + C134324 + C134323 + C134322) * C70494 +
           (C135542 + C135543 + C135544 + C135545) * C154226) *
              C154011 * C154082 * C1396 -
          ((C106579 * C30000 - C106580 * C29998 - C106579 * C30001 +
            C154422 * C30004 + C106577 * C28466 - C106578 * C28464 -
            C106577 * C28467 + C154476 * C28470 + C106575 * C5664 -
            C106576 * C5659 - C106575 * C5665 + C154485 * C5668 +
            C106573 * C3143 - C106574 * C3139 - C106573 * C3144 +
            C154488 * C3151) *
               C154226 +
           (C135545 + C135544 + C135543 + C135542) * C70494) *
              C154011 * C154082 * C1397) *
         C154047) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C106573 * C144 - C106574 * C136 - C106573 * C145 + C154488 * C160 +
             C106575 * C600 - C106576 * C584 - C106575 * C601 + C154485 * C620 +
             C106577 * C602 - C106578 * C585 - C106577 * C603 + C154476 * C621 +
             C106579 * C2337 - C106580 * C2328 - C106579 * C2338 +
             C154422 * C2343) *
                C70494 +
            (C134318 + C134319 + C134320 + C134321) * C154226) *
               C154011 * C577 -
           ((C135190 + C135191 + C135192 + C135193) * C154226 +
            (C106579 * C7777 - C106580 * C7773 - C106579 * C7778 +
             C154422 * C7785 + C106577 * C2337 - C106578 * C2328 -
             C106577 * C2338 + C154476 * C2343 + C106575 * C602 -
             C106576 * C585 - C106575 * C603 + C154485 * C621 + C106573 * C600 -
             C106574 * C584 - C106573 * C601 + C154488 * C620) *
                C70494) *
               C154011 * C578 +
           ((C106573 * C602 - C106574 * C585 - C106573 * C603 + C154488 * C621 +
             C106575 * C2337 - C106576 * C2328 - C106575 * C2338 +
             C154485 * C2343 + C106577 * C7777 - C106578 * C7773 -
             C106577 * C7778 + C154476 * C7785 + C106579 * C10602 -
             C106580 * C10597 - C106579 * C10603 + C154422 * C10606) *
                C70494 +
            (C135764 + C135765 + C135766 + C135767) * C154226) *
               C154011 * C579) *
              C1307 +
          (((C135193 + C135192 + C135191 + C135190) * C70494 +
            (C106573 * C1985 - C106574 * C1976 - C106573 * C1986 +
             C154488 * C1991 + C106575 * C3445 - C106576 * C3441 -
             C106575 * C3446 + C154485 * C3453 + C106577 * C6272 -
             C106578 * C6262 - C106577 * C6273 + C154476 * C6280 +
             C106579 * C31084 - C106580 * C31082 - C106579 * C31085 +
             C154422 * C31088) *
                C154226) *
               C154011 * C578 -
           ((C134322 + C134323 + C134324 + C134325) * C154226 +
            (C134321 + C134320 + C134319 + C134318) * C70494) *
               C154011 * C577 -
           ((C106579 * C33867 - C106580 * C33865 - C106579 * C33868 +
             C154422 * C33871 + C106577 * C31084 - C106578 * C31082 -
             C106577 * C31085 + C154476 * C31088 + C106575 * C6272 -
             C106576 * C6262 - C106575 * C6273 + C154485 * C6280 +
             C106573 * C3445 - C106574 * C3441 - C106573 * C3446 +
             C154488 * C3453) *
                C154226 +
            (C135767 + C135766 + C135765 + C135764) * C70494) *
               C154011 * C579) *
              C154118) *
         C154047) /
            (p * q * std::sqrt(p + q));
    d2ee[113] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
              C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
                 C154487 +
             (C101527 + C101528) * C154483 + C101539 * C154473 +
             C130733 * C154415) *
                C154011 * C154393 -
            ((C104699 + C104698) * C154415 + C104685 * C154473 +
             (C102898 + C102899) * C154483 +
             (C97277 * C602 - C97278 * C585 - C97277 * C603 + C154268 * C621 +
              C97275 * C600 - C97276 * C584 - C97275 * C601 + C97273 * C620) *
                 C154487) *
                C154011 * C154146) *
               C1307 +
           (((C102899 + C102898) * C154487 + (C102897 + C102896) * C154483 +
             (C104698 + C104699) * C154473 +
             (C97275 * C5664 - C97276 * C5659 - C97275 * C5665 +
              C97273 * C5668 + C97277 * C28466 - C97278 * C28464 -
              C97277 * C28467 + C154268 * C28470) *
                 C154415) *
                C154011 * C154146 -
            (C131898 * C154415 + C103386 * C154473 +
             (C101530 + C101529) * C154483 + (C101528 + C101527) * C154487) *
                C154011 * C154393) *
               C154118) *
              C154384 +
          ((((C97907 + C97906) * C154487 + C102874 * C154483 +
             C102875 * C154473 + (C102900 + C102901) * C154415) *
                C154011 * C154146 -
            (C101540 * C154415 + C101476 * C154473 + C101477 * C154483 +
             (C97341 + C97340) * C154487) *
                C154011 * C154393) *
               C1307 +
           ((C101466 * C154487 + C101467 * C154483 + C101541 * C154473 +
             (C101535 + C101536) * C154415) *
                C154011 * C154393 -
            ((C97277 * C28468 - C97278 * C28465 - C97277 * C28469 +
              C154268 * C28471 + C97275 * C5662 - C97276 * C5658 -
              C97275 * C5663 + C97273 * C5667) *
                 C154415 +
             (C102901 + C102900) * C154473 + C102856 * C154483 +
             C102857 * C154487) *
                C154011 * C154146) *
               C154118) *
              C154053)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
               C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
                  C70494 +
              (C101527 + C101528) * C154226) *
                 C154477 +
             ((C97340 + C97341) * C70494 + C101466 * C154226) * C154458 +
             C125375 * C154429) *
                C154393 -
            (C126542 * C154429 +
             (C102857 * C154226 + (C97906 + C97907) * C70494) * C154458 +
             ((C102898 + C102899) * C154226 +
              (C97277 * C602 - C97278 * C585 - C97277 * C603 + C154268 * C621 +
               C97275 * C600 - C97276 * C584 - C97275 * C601 + C97273 * C620) *
                  C70494) *
                 C154477) *
                C154146) *
               C1307 +
           ((((C102899 + C102898) * C70494 + (C102897 + C102896) * C154226) *
                 C154477 +
             (C102874 * C70494 + C102875 * C154226) * C154458 +
             (C111992 * C70494 + (C102468 + C102469) * C154226) * C154429) *
                C154146 -
            (C126249 * C154429 +
             (C101476 * C154226 + C101477 * C70494) * C154458 +
             ((C101530 + C101529) * C154226 + (C101528 + C101527) * C70494) *
                 C154477) *
                C154393) *
               C154118) *
              C154384 +
          (((((C97907 + C97906) * C70494 + C102874 * C154226) * C154477 +
             ((C97905 + C97904) * C70494 + C111992 * C154226) * C154458 +
             ((C97903 + C97902) * C70494 + (C98636 + C98637) * C154226) *
                 C154429) *
                C154146 -
            (C125376 * C154429 +
             (C98109 * C154226 + (C97343 + C97342) * C70494) * C154458 +
             (C101477 * C154226 + (C97341 + C97340) * C70494) * C154477) *
                C154393) *
               C1307 +
           (((C101466 * C70494 + C101467 * C154226) * C154477 +
             (C102164 * C70494 + C102165 * C154226) * C154458 +
             (C111310 * C70494 + (C97634 + C97635) * C154226) * C154429) *
                C154393 -
            (((C97277 * C3451 - C97278 * C3444 - C97277 * C3452 +
               C154268 * C3456 + C97275 * C1979 - C97276 * C1973 -
               C97275 * C1980 + C97273 * C1988) *
                  C154226 +
              (C98637 + C98636) * C70494) *
                 C154429 +
             ((C102469 + C102468) * C154226 + C111602 * C70494) * C154458 +
             (C102856 * C154226 + C102857 * C70494) * C154477) *
                C154146) *
               C154118) *
              C154053)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C106573 * C144 - C106574 * C136 - C106573 * C145 +
              C154488 * C160 + C106575 * C600 - C106576 * C584 -
              C106575 * C601 + C154485 * C620 + C106577 * C602 -
              C106578 * C585 - C106577 * C603 + C154476 * C621 +
              C106579 * C2337 - C106580 * C2328 - C106579 * C2338 +
              C154422 * C2343) *
                 C70494 +
             (C134318 + C134319 + C134320 + C134321) * C154226) *
                C154011 * C154393 -
            ((C135190 + C135191 + C135192 + C135193) * C154226 +
             (C106579 * C7777 - C106580 * C7773 - C106579 * C7778 +
              C154422 * C7785 + C106577 * C2337 - C106578 * C2328 -
              C106577 * C2338 + C154476 * C2343 + C106575 * C602 -
              C106576 * C585 - C106575 * C603 + C154485 * C621 +
              C106573 * C600 - C106574 * C584 - C106573 * C601 +
              C154488 * C620) *
                 C70494) *
                C154011 * C154146) *
               C1307 +
           (((C135193 + C135192 + C135191 + C135190) * C70494 +
             (C106573 * C1985 - C106574 * C1976 - C106573 * C1986 +
              C154488 * C1991 + C106575 * C3445 - C106576 * C3441 -
              C106575 * C3446 + C154485 * C3453 + C106577 * C6272 -
              C106578 * C6262 - C106577 * C6273 + C154476 * C6280 +
              C106579 * C31084 - C106580 * C31082 - C106579 * C31085 +
              C154422 * C31088) *
                 C154226) *
                C154011 * C154146 -
            ((C134322 + C134323 + C134324 + C134325) * C154226 +
             (C134321 + C134320 + C134319 + C134318) * C70494) *
                C154011 * C154393) *
               C154118) *
              C154384 +
          ((((C107161 + C107160 + C107159 + C107158) * C70494 +
             (C107892 + C107893 + C107894 + C107895) * C154226) *
                C154011 * C154146 -
            ((C106908 + C106909 + C106910 + C106911) * C154226 +
             (C106657 + C106656 + C106655 + C106654) * C70494) *
                C154011 * C154393) *
               C1307 +
           (((C106911 + C106910 + C106909 + C106908) * C70494 +
             (C106912 + C106913 + C106914 + C106915) * C154226) *
                C154011 * C154393 -
            ((C106579 * C31086 - C106580 * C31083 - C106579 * C31087 +
              C154422 * C31089 + C106577 * C6268 - C106578 * C6260 -
              C106577 * C6269 + C154476 * C6278 + C106575 * C3447 -
              C106576 * C3442 - C106575 * C3448 + C154485 * C3454 +
              C106573 * C1983 - C106574 * C1975 - C106573 * C1984 +
              C154488 * C1990) *
                 C154226 +
             (C107895 + C107894 + C107893 + C107892) * C70494) *
                C154011 * C154146) *
               C154118) *
              C154053)) /
            (p * q * std::sqrt(p + q));
    d2ee[114] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
             C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
                C70494 +
            (C101527 + C101528) * C154226) *
               C154477 +
           ((C97340 + C97341) * C70494 + C101466 * C154226) * C154458 +
           C125375 * C154429) *
              C154082 * C1394 -
          (C126249 * C154429 +
           (C101476 * C154226 + C101477 * C70494) * C154458 +
           ((C101530 + C101529) * C154226 + (C101528 + C101527) * C70494) *
               C154477) *
              C154082 * C1395 +
          ((C101539 * C70494 + (C101534 + C101533) * C154226) * C154477 +
           (C101467 * C70494 + C101541 * C154226) * C154458 +
           (C102165 * C70494 + (C101537 + C101538) * C154226) * C154429) *
              C154082 * C1396 -
          (((C97277 * C5660 - C97278 * C5657 - C97277 * C5661 +
             C154268 * C5666 + C97275 * C3147 - C97276 * C3141 -
             C97275 * C3148 + C97273 * C3153) *
                C154226 +
            (C101538 + C101537) * C70494) *
               C154429 +
           ((C101536 + C101535) * C154226 + C101540 * C70494) * C154458 +
           ((C103400 + C103399) * C154226 + C103386 * C70494) * C154477) *
              C154082 * C1397) *
         C154047) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
              C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
                 C70494 +
             (C101527 + C101528) * C154226) *
                C154477 +
            ((C97340 + C97341) * C70494 + C101466 * C154226) * C154458 +
            C125375 * C154429) *
               C154082 * C1307 -
           (C126249 * C154429 +
            (C101476 * C154226 + C101477 * C70494) * C154458 +
            ((C101530 + C101529) * C154226 + (C101528 + C101527) * C70494) *
                C154477) *
               C154082 * C154118) *
              C1309 +
          (((C101466 * C70494 + C101467 * C154226) * C154477 +
            (C102164 * C70494 + C102165 * C154226) * C154458 +
            (C111310 * C70494 + (C97634 + C97635) * C154226) * C154429) *
               C154082 * C154118 -
           (C125376 * C154429 +
            (C98109 * C154226 + (C97343 + C97342) * C70494) * C154458 +
            (C101477 * C154226 + (C97341 + C97340) * C70494) * C154477) *
               C154082 * C1307) *
              C1310 +
          ((C125375 * C154477 +
            (C97351 * C70494 + C111310 * C154226) * C154458 +
            ((C97347 + C97346) * C70494 + (C98124 + C98125) * C154226) *
                C154429) *
               C154082 * C1307 -
           (((C97277 * C1977 - C97278 * C1972 - C97277 * C1978 +
              C154268 * C1987 + C97275 * C373 - C97276 * C352 - C97275 * C374 +
              C97273 * C388) *
                 C154226 +
             (C98125 + C98124) * C70494) *
                C154429 +
            ((C97635 + C97634) * C154226 + C98108 * C70494) * C154458 +
            C126249 * C154477) *
               C154082 * C154118) *
              C1311)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
             C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
                C154487 +
            (C101527 + C101528) * C154483 + C101539 * C154473 +
            C130733 * C154415) *
               C154011 * C154082 * C1307 -
           ((C103400 + C103399) * C154415 + C103386 * C154473 +
            (C101530 + C101529) * C154483 + (C101528 + C101527) * C154487) *
               C154011 * C154082 * C154118) *
              C1309 +
          ((C101466 * C154487 + C101467 * C154483 + C101541 * C154473 +
            (C101535 + C101536) * C154415) *
               C154011 * C154082 * C154118 -
           (C101540 * C154415 + C101476 * C154473 + C101477 * C154483 +
            (C97341 + C97340) * C154487) *
               C154011 * C154082 * C1307) *
              C1310 +
          ((C97350 * C154487 + C102164 * C154483 + C102165 * C154473 +
            (C101537 + C101538) * C154415) *
               C154011 * C154082 * C1307 -
           ((C97277 * C5660 - C97278 * C5657 - C97277 * C5661 +
             C154268 * C5666 + C97275 * C3147 - C97276 * C3141 -
             C97275 * C3148 + C97273 * C3153) *
                C154415 +
            (C101538 + C101537) * C154473 + C101502 * C154483 +
            C98109 * C154487) *
               C154011 * C154082 * C154118) *
              C1311)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
            C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
               C154487 +
           (C101527 + C101528) * C154483 + C101539 * C154473 +
           C130733 * C154415) *
              C154011 * C154082 * C1394 -
          (C131898 * C154415 + C103386 * C154473 +
           (C101530 + C101529) * C154483 + (C101528 + C101527) * C154487) *
              C154011 * C154082 * C1395 +
          (C101539 * C154487 + C130733 * C154483 +
           (C103399 + C103400) * C154473 + (C131911 + C131912) * C154415) *
              C154011 * C154082 * C1396 -
          ((C97277 * C29662 - C97278 * C29661 - C97277 * C29663 +
            C154268 * C29664 + C97275 * C28322 - C97276 * C28320 -
            C97275 * C28323 + C97273 * C28326) *
               C154415 +
           (C131912 + C131911) * C154473 + C131898 * C154483 +
           C103386 * C154487) *
              C154011 * C154082 * C1397) *
         C154047) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C106573 * C144 - C106574 * C136 - C106573 * C145 + C154488 * C160 +
             C106575 * C600 - C106576 * C584 - C106575 * C601 + C154485 * C620 +
             C106577 * C602 - C106578 * C585 - C106577 * C603 + C154476 * C621 +
             C106579 * C2337 - C106580 * C2328 - C106579 * C2338 +
             C154422 * C2343) *
                C70494 +
            (C134318 + C134319 + C134320 + C134321) * C154226) *
               C154011 * C154082 * C1307 -
           ((C134322 + C134323 + C134324 + C134325) * C154226 +
            (C134321 + C134320 + C134319 + C134318) * C70494) *
               C154011 * C154082 * C154118) *
              C1309 +
          (((C106911 + C106910 + C106909 + C106908) * C70494 +
            (C106912 + C106913 + C106914 + C106915) * C154226) *
               C154011 * C154082 * C154118 -
           ((C106908 + C106909 + C106910 + C106911) * C154226 +
            (C106657 + C106656 + C106655 + C106654) * C70494) *
               C154011 * C154082 * C1307) *
              C1310 +
          (((C106661 + C106660 + C106659 + C106658) * C70494 +
            (C107384 + C107385 + C107386 + C107387) * C154226) *
               C154011 * C154082 * C1307 -
           ((C106579 * C6264 - C106580 * C6258 - C106579 * C6265 +
             C154422 * C6276 + C106577 * C3449 - C106578 * C3443 -
             C106577 * C3450 + C154476 * C3455 + C106575 * C1981 -
             C106576 * C1974 - C106575 * C1982 + C154485 * C1989 +
             C106573 * C369 - C106574 * C350 - C106573 * C370 +
             C154488 * C386) *
                C154226 +
            (C107387 + C107386 + C107385 + C107384) * C70494) *
               C154011 * C154082 * C154118) *
              C1311)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C106573 * C144 - C106574 * C136 - C106573 * C145 + C154488 * C160 +
            C106575 * C600 - C106576 * C584 - C106575 * C601 + C154485 * C620 +
            C106577 * C602 - C106578 * C585 - C106577 * C603 + C154476 * C621 +
            C106579 * C2337 - C106580 * C2328 - C106579 * C2338 +
            C154422 * C2343) *
               C70494 +
           (C134318 + C134319 + C134320 + C134321) * C154226) *
              C154011 * C154082 * C1394 -
          ((C134322 + C134323 + C134324 + C134325) * C154226 +
           (C134321 + C134320 + C134319 + C134318) * C70494) *
              C154011 * C154082 * C1395 +
          ((C134325 + C134324 + C134323 + C134322) * C70494 +
           (C135542 + C135543 + C135544 + C135545) * C154226) *
              C154011 * C154082 * C1396 -
          ((C106579 * C30000 - C106580 * C29998 - C106579 * C30001 +
            C154422 * C30004 + C106577 * C28466 - C106578 * C28464 -
            C106577 * C28467 + C154476 * C28470 + C106575 * C5664 -
            C106576 * C5659 - C106575 * C5665 + C154485 * C5668 +
            C106573 * C3143 - C106574 * C3139 - C106573 * C3144 +
            C154488 * C3151) *
               C154226 +
           (C135545 + C135544 + C135543 + C135542) * C70494) *
              C154011 * C154082 * C1397) *
         C154047) /
            (p * q * std::sqrt(p + q));
    d2ee[115] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
              C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
                 C154487 +
             (C101527 + C101528) * C154483 + C101539 * C154473 +
             C130733 * C154415) *
                C154011 * C2114 -
            (C132767 * C154415 + C104685 * C154473 +
             (C102898 + C102899) * C154483 +
             (C97277 * C602 - C97278 * C585 - C97277 * C603 + C154268 * C621 +
              C97275 * C600 - C97276 * C584 - C97275 * C601 + C97273 * C620) *
                 C154487) *
                C154011 * C154146) *
               C154392 +
           (((C102899 + C102898) * C154487 + (C102897 + C102896) * C154483 +
             (C104698 + C104699) * C154473 + (C132780 + C132781) * C154415) *
                C154011 * C154146 -
            (C131898 * C154415 + C103386 * C154473 +
             (C101530 + C101529) * C154483 + (C101528 + C101527) * C154487) *
                C154011 * C2114) *
               C154118) *
              C154384 +
          ((((C97907 + C97906) * C154487 + C102874 * C154483 +
             C102875 * C154473 + (C102900 + C102901) * C154415) *
                C154011 * C154146 -
            (C101540 * C154415 + C101476 * C154473 + C101477 * C154483 +
             (C97341 + C97340) * C154487) *
                C154011 * C2114) *
               C154392 +
           ((C101466 * C154487 + C101467 * C154483 + C101541 * C154473 +
             (C101535 + C101536) * C154415) *
                C154011 * C2114 -
            ((C97277 * C28468 - C97278 * C28465 - C97277 * C28469 +
              C154268 * C28471 + C97275 * C5662 - C97276 * C5658 -
              C97275 * C5663 + C97273 * C5667) *
                 C154415 +
             (C102901 + C102900) * C154473 + C102856 * C154483 +
             C102857 * C154487) *
                C154011 * C154146) *
               C154118) *
              C154053)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
               C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
                  C70494 +
              (C101527 + C101528) * C154226) *
                 C154477 +
             ((C97340 + C97341) * C70494 + C101466 * C154226) * C154458 +
             C125375 * C154429) *
                C2114 -
            (C126542 * C154429 +
             (C102857 * C154226 + (C97906 + C97907) * C70494) * C154458 +
             ((C102898 + C102899) * C154226 +
              (C97277 * C602 - C97278 * C585 - C97277 * C603 + C154268 * C621 +
               C97275 * C600 - C97276 * C584 - C97275 * C601 + C97273 * C620) *
                  C70494) *
                 C154477) *
                C154146) *
               C154392 +
           ((((C102899 + C102898) * C70494 + (C102897 + C102896) * C154226) *
                 C154477 +
             (C102874 * C70494 + C102875 * C154226) * C154458 +
             (C111992 * C70494 + (C102468 + C102469) * C154226) * C154429) *
                C154146 -
            (C126249 * C154429 +
             (C101476 * C154226 + C101477 * C70494) * C154458 +
             ((C101530 + C101529) * C154226 + (C101528 + C101527) * C70494) *
                 C154477) *
                C2114) *
               C154118) *
              C154384 +
          (((((C97907 + C97906) * C70494 + C102874 * C154226) * C154477 +
             ((C97905 + C97904) * C70494 + C111992 * C154226) * C154458 +
             ((C97903 + C97902) * C70494 + (C98636 + C98637) * C154226) *
                 C154429) *
                C154146 -
            (C125376 * C154429 +
             (C98109 * C154226 + (C97343 + C97342) * C70494) * C154458 +
             (C101477 * C154226 + (C97341 + C97340) * C70494) * C154477) *
                C2114) *
               C154392 +
           (((C101466 * C70494 + C101467 * C154226) * C154477 +
             (C102164 * C70494 + C102165 * C154226) * C154458 +
             (C111310 * C70494 + (C97634 + C97635) * C154226) * C154429) *
                C2114 -
            (((C97277 * C3451 - C97278 * C3444 - C97277 * C3452 +
               C154268 * C3456 + C97275 * C1979 - C97276 * C1973 -
               C97275 * C1980 + C97273 * C1988) *
                  C154226 +
              (C98637 + C98636) * C70494) *
                 C154429 +
             ((C102469 + C102468) * C154226 + C111602 * C70494) * C154458 +
             (C102856 * C154226 + C102857 * C70494) * C154477) *
                C154146) *
               C154118) *
              C154053)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C106573 * C144 - C106574 * C136 - C106573 * C145 +
              C154488 * C160 + C106575 * C600 - C106576 * C584 -
              C106575 * C601 + C154485 * C620 + C106577 * C602 -
              C106578 * C585 - C106577 * C603 + C154476 * C621 +
              C106579 * C2337 - C106580 * C2328 - C106579 * C2338 +
              C154422 * C2343) *
                 C70494 +
             (C134318 + C134319 + C134320 + C134321) * C154226) *
                C154011 * C2114 -
            ((C135190 + C135191 + C135192 + C135193) * C154226 +
             (C106579 * C7777 - C106580 * C7773 - C106579 * C7778 +
              C154422 * C7785 + C106577 * C2337 - C106578 * C2328 -
              C106577 * C2338 + C154476 * C2343 + C106575 * C602 -
              C106576 * C585 - C106575 * C603 + C154485 * C621 +
              C106573 * C600 - C106574 * C584 - C106573 * C601 +
              C154488 * C620) *
                 C70494) *
                C154011 * C154146) *
               C154392 +
           (((C135193 + C135192 + C135191 + C135190) * C70494 +
             (C136438 + C136439 + C136440 + C136441) * C154226) *
                C154011 * C154146 -
            ((C134322 + C134323 + C134324 + C134325) * C154226 +
             (C134321 + C134320 + C134319 + C134318) * C70494) *
                C154011 * C2114) *
               C154118) *
              C154384 +
          ((((C107161 + C107160 + C107159 + C107158) * C70494 +
             (C107892 + C107893 + C107894 + C107895) * C154226) *
                C154011 * C154146 -
            ((C106908 + C106909 + C106910 + C106911) * C154226 +
             (C106657 + C106656 + C106655 + C106654) * C70494) *
                C154011 * C2114) *
               C154392 +
           (((C106911 + C106910 + C106909 + C106908) * C70494 +
             (C106912 + C106913 + C106914 + C106915) * C154226) *
                C154011 * C2114 -
            ((C106579 * C31086 - C106580 * C31083 - C106579 * C31087 +
              C154422 * C31089 + C106577 * C6268 - C106578 * C6260 -
              C106577 * C6269 + C154476 * C6278 + C106575 * C3447 -
              C106576 * C3442 - C106575 * C3448 + C154485 * C3454 +
              C106573 * C1983 - C106574 * C1975 - C106573 * C1984 +
              C154488 * C1990) *
                 C154226 +
             (C107895 + C107894 + C107893 + C107892) * C70494) *
                C154011 * C154146) *
               C154118) *
              C154053)) /
            (p * q * std::sqrt(p + q));
    d2ee[116] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
             C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
                C154487 +
            (C101527 + C101528) * C154483 + C101539 * C154473 +
            C130733 * C154415) *
               C154011 * C154465 -
           (C132767 * C154415 + C104685 * C154473 +
            (C102898 + C102899) * C154483 +
            (C97277 * C602 - C97278 * C585 - C97277 * C603 + C154268 * C621 +
             C97275 * C600 - C97276 * C584 - C97275 * C601 + C97273 * C620) *
                C154487) *
               C154011 * C154466 +
           ((C97275 * C602 - C97276 * C585 - C97275 * C603 + C97273 * C621 +
             C97277 * C2337 - C97278 * C2328 - C97277 * C2338 +
             C154268 * C2343) *
                C154487 +
            (C103715 + C103716) * C154483 + (C103717 + C103718) * C154473 +
            (C132119 + C132120) * C154415) *
               C154011 * C2630) *
              C154392 +
          (((C102899 + C102898) * C154487 + (C102897 + C102896) * C154483 +
            (C104698 + C104699) * C154473 + (C132780 + C132781) * C154415) *
               C154011 * C154466 -
           (C131898 * C154415 + C103386 * C154473 +
            (C101530 + C101529) * C154483 + (C101528 + C101527) * C154487) *
               C154011 * C154465 -
           ((C97277 * C30000 - C97278 * C29998 - C97277 * C30001 +
             C154268 * C30004 + C97275 * C28466 - C97276 * C28464 -
             C97275 * C28467 + C97273 * C28470) *
                C154415 +
            (C132120 + C132119) * C154473 + (C103718 + C103717) * C154483 +
            (C103716 + C103715) * C154487) *
               C154011 * C2630) *
              C154118) *
         C154047) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
              C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
                 C70494 +
             (C101527 + C101528) * C154226) *
                C154477 +
            ((C97340 + C97341) * C70494 + C101466 * C154226) * C154458 +
            C125375 * C154429) *
               C154465 -
           (C126542 * C154429 +
            (C102857 * C154226 + (C97906 + C97907) * C70494) * C154458 +
            ((C102898 + C102899) * C154226 +
             (C97277 * C602 - C97278 * C585 - C97277 * C603 + C154268 * C621 +
              C97275 * C600 - C97276 * C584 - C97275 * C601 + C97273 * C620) *
                 C70494) *
                C154477) *
               C154466 +
           (((C97275 * C602 - C97276 * C585 - C97275 * C603 + C97273 * C621 +
              C97277 * C2337 - C97278 * C2328 - C97277 * C2338 +
              C154268 * C2343) *
                 C70494 +
             (C103715 + C103716) * C154226) *
                C154477 +
            ((C97908 + C97909) * C70494 + (C101870 + C101871) * C154226) *
                C154458 +
            ((C97910 + C97911) * C70494 + (C111016 + C111017) * C154226) *
                C154429) *
               C2630) *
              C154392 +
          ((((C102899 + C102898) * C70494 + (C102897 + C102896) * C154226) *
                C154477 +
            (C102874 * C70494 + C102875 * C154226) * C154458 +
            (C111992 * C70494 + (C102468 + C102469) * C154226) * C154429) *
               C154466 -
           (C126249 * C154429 +
            (C101476 * C154226 + C101477 * C70494) * C154458 +
            ((C101530 + C101529) * C154226 + (C101528 + C101527) * C70494) *
                C154477) *
               C154465 -
           (((C97277 * C6264 - C97278 * C6258 - C97277 * C6265 +
              C154268 * C6276 + C97275 * C3449 - C97276 * C3443 -
              C97275 * C3450 + C97273 * C3455) *
                 C154226 +
             (C111017 + C111016) * C70494) *
                C154429 +
            ((C101873 + C101872) * C154226 + (C101871 + C101870) * C70494) *
                C154458 +
            ((C103718 + C103717) * C154226 + (C103716 + C103715) * C70494) *
                C154477) *
               C2630) *
              C154118) *
         C154047) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C106573 * C144 - C106574 * C136 - C106573 * C145 + C154488 * C160 +
             C106575 * C600 - C106576 * C584 - C106575 * C601 + C154485 * C620 +
             C106577 * C602 - C106578 * C585 - C106577 * C603 + C154476 * C621 +
             C106579 * C2337 - C106580 * C2328 - C106579 * C2338 +
             C154422 * C2343) *
                C70494 +
            (C134318 + C134319 + C134320 + C134321) * C154226) *
               C154011 * C154465 -
           ((C135190 + C135191 + C135192 + C135193) * C154226 +
            (C106579 * C7777 - C106580 * C7773 - C106579 * C7778 +
             C154422 * C7785 + C106577 * C2337 - C106578 * C2328 -
             C106577 * C2338 + C154476 * C2343 + C106575 * C602 -
             C106576 * C585 - C106575 * C603 + C154485 * C621 + C106573 * C600 -
             C106574 * C584 - C106573 * C601 + C154488 * C620) *
                C70494) *
               C154011 * C154466 +
           ((C106573 * C602 - C106574 * C585 - C106573 * C603 + C154488 * C621 +
             C106575 * C2337 - C106576 * C2328 - C106575 * C2338 +
             C154485 * C2343 + C106577 * C7777 - C106578 * C7773 -
             C106577 * C7778 + C154476 * C7785 + C106579 * C10602 -
             C106580 * C10597 - C106579 * C10603 + C154422 * C10606) *
                C70494 +
            (C135764 + C135765 + C135766 + C135767) * C154226) *
               C154011 * C2630) *
              C154392 +
          (((C135193 + C135192 + C135191 + C135190) * C70494 +
            (C136438 + C136439 + C136440 + C136441) * C154226) *
               C154011 * C154466 -
           ((C134322 + C134323 + C134324 + C134325) * C154226 +
            (C134321 + C134320 + C134319 + C134318) * C70494) *
               C154011 * C154465 -
           ((C106579 * C33867 - C106580 * C33865 - C106579 * C33868 +
             C154422 * C33871 + C106577 * C31084 - C106578 * C31082 -
             C106577 * C31085 + C154476 * C31088 + C106575 * C6272 -
             C106576 * C6262 - C106575 * C6273 + C154485 * C6280 +
             C106573 * C3445 - C106574 * C3441 - C106573 * C3446 +
             C154488 * C3453) *
                C154226 +
            (C135767 + C135766 + C135765 + C135764) * C70494) *
               C154011 * C2630) *
              C154118) *
         C154047) /
            (p * q * std::sqrt(p + q));
    d2ee[117] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C97275 * C144 - C97276 * C136 - C97275 * C145 +
                  C97273 * C160 + C97277 * C600 - C97278 * C584 -
                  C97277 * C601 + C154268 * C620) *
                     C70494 +
                 (C101527 + C101528) * C154226) *
                    C154477 +
                ((C97340 + C97341) * C70494 + C101466 * C154226) * C154458 +
                C125375 * C154429) *
                   C2114 -
               (C126542 * C154429 +
                (C102857 * C154226 + (C97906 + C97907) * C70494) * C154458 +
                ((C102898 + C102899) * C154226 +
                 (C97277 * C602 - C97278 * C585 - C97277 * C603 +
                  C154268 * C621 + C97275 * C600 - C97276 * C584 -
                  C97275 * C601 + C97273 * C620) *
                     C70494) *
                    C154477) *
                   C154146) *
                  C154066 * C1309 +
              ((((C97907 + C97906) * C70494 + C102874 * C154226) * C154477 +
                ((C97905 + C97904) * C70494 + C111992 * C154226) * C154458 +
                ((C97903 + C97902) * C70494 + (C98636 + C98637) * C154226) *
                    C154429) *
                   C154146 -
               (C125376 * C154429 +
                (C98109 * C154226 + (C97343 + C97342) * C70494) * C154458 +
                (C101477 * C154226 + (C97341 + C97340) * C70494) * C154477) *
                   C2114) *
                  C154066 * C1310 +
              ((C125375 * C154477 +
                (C97351 * C70494 + C111310 * C154226) * C154458 +
                ((C97347 + C97346) * C70494 + (C98124 + C98125) * C154226) *
                    C154429) *
                   C2114 -
               (((C97277 * C1546 - C97278 * C1541 - C97277 * C1547 +
                  C154268 * C1556 + C97275 * C1143 - C97276 * C1133 -
                  C97275 * C1144 + C97273 * C1151) *
                     C154226 +
                 (C98337 + C98336) * C70494) *
                    C154429 +
                ((C98637 + C98636) * C154226 + C98320 * C70494) * C154458 +
                C126542 * C154477) *
                   C154146) *
                  C154066 * C1311) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C97275 * C144 - C97276 * C136 - C97275 * C145 +
                  C97273 * C160 + C97277 * C600 - C97278 * C584 -
                  C97277 * C601 + C154268 * C620) *
                     C70494 +
                 (C101527 + C101528) * C154226) *
                    C154477 +
                ((C97340 + C97341) * C70494 + C101466 * C154226) * C154458 +
                C125375 * C154429) *
                   C2114 -
               (C126542 * C154429 +
                (C102857 * C154226 + (C97906 + C97907) * C70494) * C154458 +
                ((C102898 + C102899) * C154226 +
                 (C97277 * C602 - C97278 * C585 - C97277 * C603 +
                  C154268 * C621 + C97275 * C600 - C97276 * C584 -
                  C97275 * C601 + C97273 * C620) *
                     C70494) *
                    C154477) *
                   C154146) *
                  C338 +
              ((((C102899 + C102898) * C70494 + (C102897 + C102896) * C154226) *
                    C154477 +
                (C102874 * C70494 + C102875 * C154226) * C154458 +
                (C111992 * C70494 + (C102468 + C102469) * C154226) * C154429) *
                   C154146 -
               (C126249 * C154429 +
                (C101476 * C154226 + C101477 * C70494) * C154458 +
                ((C101530 + C101529) * C154226 + (C101528 + C101527) * C70494) *
                    C154477) *
                   C2114) *
                  C339 +
              (((C101539 * C70494 + (C101534 + C101533) * C154226) * C154477 +
                (C101467 * C70494 + C101541 * C154226) * C154458 +
                (C102165 * C70494 + (C101537 + C101538) * C154226) * C154429) *
                   C2114 -
               (((C97277 * C4908 - C97278 * C4905 - C97277 * C4909 +
                  C154268 * C4914 + C97275 * C4262 - C97276 * C4256 -
                  C97275 * C4263 + C97273 * C4268) *
                     C154226 +
                 (C102469 + C102468) * C70494) *
                    C154429 +
                ((C102901 + C102900) * C154226 + C102856 * C70494) * C154458 +
                ((C104699 + C104698) * C154226 + C104685 * C70494) * C154477) *
                   C154146) *
                  C340) *
             C154047) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
             C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
                C70494 +
            (C101527 + C101528) * C154226) *
               C154477 +
           ((C97340 + C97341) * C70494 + C101466 * C154226) * C154458 +
           C125375 * C154429) *
              C2320 -
          (C126542 * C154429 +
           (C102857 * C154226 + (C97906 + C97907) * C70494) * C154458 +
           ((C102898 + C102899) * C154226 +
            (C97277 * C602 - C97278 * C585 - C97277 * C603 + C154268 * C621 +
             C97275 * C600 - C97276 * C584 - C97275 * C601 + C97273 * C620) *
                C70494) *
               C154477) *
              C2321 +
          (((C97275 * C602 - C97276 * C585 - C97275 * C603 + C97273 * C621 +
             C97277 * C2337 - C97278 * C2328 - C97277 * C2338 +
             C154268 * C2343) *
                C70494 +
            (C103715 + C103716) * C154226) *
               C154477 +
           ((C97908 + C97909) * C70494 + (C101870 + C101871) * C154226) *
               C154458 +
           ((C97910 + C97911) * C70494 + (C111016 + C111017) * C154226) *
               C154429) *
              C2322 -
          (((C97277 * C9278 - C97278 * C9275 - C97277 * C9279 +
             C154268 * C9284 + C97275 * C6266 - C97276 * C6259 -
             C97275 * C6267 + C97273 * C6277) *
                C154226 +
            (C97277 * C7781 - C97278 * C7775 - C97277 * C7782 +
             C154268 * C7787 + C97275 * C2333 - C97276 * C2326 -
             C97275 * C2334 + C97273 * C2341) *
                C70494) *
               C154429 +
           ((C97277 * C9280 - C97278 * C9276 - C97277 * C9281 +
             C154268 * C9285 + C97275 * C6270 - C97276 * C6261 -
             C97275 * C6271 + C97273 * C6279) *
                C154226 +
            (C97277 * C7779 - C97278 * C7774 - C97277 * C7780 +
             C154268 * C7786 + C97275 * C2335 - C97276 * C2327 -
             C97275 * C2336 + C97273 * C2342) *
                C70494) *
               C154458 +
           ((C97277 * C9282 - C97278 * C9277 - C97277 * C9283 +
             C154268 * C9286 + C97275 * C6274 - C97276 * C6263 -
             C97275 * C6275 + C97273 * C6281) *
                C154226 +
            (C97277 * C7777 - C97278 * C7773 - C97277 * C7778 +
             C154268 * C7785 + C97275 * C2337 - C97276 * C2328 -
             C97275 * C2338 + C97273 * C2343) *
                C70494) *
               C154477) *
              C2323) *
         C154066 * C154047) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
             C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
                C154487 +
            (C101527 + C101528) * C154483 + C101539 * C154473 +
            C130733 * C154415) *
               C154011 * C2114 -
           (C132767 * C154415 + C104685 * C154473 +
            (C102898 + C102899) * C154483 +
            (C97277 * C602 - C97278 * C585 - C97277 * C603 + C154268 * C621 +
             C97275 * C600 - C97276 * C584 - C97275 * C601 + C97273 * C620) *
                C154487) *
               C154011 * C154146) *
              C154066 * C1309 +
          (((C97907 + C97906) * C154487 + C102874 * C154483 +
            C102875 * C154473 + (C102900 + C102901) * C154415) *
               C154011 * C154146 -
           (C101540 * C154415 + C101476 * C154473 + C101477 * C154483 +
            (C97341 + C97340) * C154487) *
               C154011 * C2114) *
              C154066 * C1310 +
          ((C97350 * C154487 + C102164 * C154483 + C102165 * C154473 +
            (C101537 + C101538) * C154415) *
               C154011 * C2114 -
           ((C97277 * C4908 - C97278 * C4905 - C97277 * C4909 +
             C154268 * C4914 + C97275 * C4262 - C97276 * C4256 -
             C97275 * C4263 + C97273 * C4268) *
                C154415 +
            (C102469 + C102468) * C154473 + C111602 * C154483 +
            C98321 * C154487) *
               C154011 * C154146) *
              C154066 * C1311)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
             C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
                C154487 +
            (C101527 + C101528) * C154483 + C101539 * C154473 +
            C130733 * C154415) *
               C154011 * C2114 -
           (C132767 * C154415 + C104685 * C154473 +
            (C102898 + C102899) * C154483 +
            (C97277 * C602 - C97278 * C585 - C97277 * C603 + C154268 * C621 +
             C97275 * C600 - C97276 * C584 - C97275 * C601 + C97273 * C620) *
                C154487) *
               C154011 * C154146) *
              C338 +
          (((C102899 + C102898) * C154487 + (C102897 + C102896) * C154483 +
            (C104698 + C104699) * C154473 + (C132780 + C132781) * C154415) *
               C154011 * C154146 -
           (C131898 * C154415 + C103386 * C154473 +
            (C101530 + C101529) * C154483 + (C101528 + C101527) * C154487) *
               C154011 * C2114) *
              C339 +
          ((C101539 * C154487 + C130733 * C154483 +
            (C103399 + C103400) * C154473 + (C131911 + C131912) * C154415) *
               C154011 * C2114 -
           ((C97277 * C29238 - C97278 * C29237 - C97277 * C29239 +
             C154268 * C29240 + C97275 * C28880 - C97276 * C28878 -
             C97275 * C28881 + C97273 * C28884) *
                C154415 +
            (C132781 + C132780) * C154473 + C132767 * C154483 +
            C104685 * C154487) *
               C154011 * C154146) *
              C340) *
         C154047) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
            C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
               C154487 +
           (C101527 + C101528) * C154483 + C101539 * C154473 +
           C130733 * C154415) *
              C154011 * C2320 -
          (C132767 * C154415 + C104685 * C154473 +
           (C102898 + C102899) * C154483 +
           (C97277 * C602 - C97278 * C585 - C97277 * C603 + C154268 * C621 +
            C97275 * C600 - C97276 * C584 - C97275 * C601 + C97273 * C620) *
               C154487) *
              C154011 * C2321 +
          ((C97275 * C602 - C97276 * C585 - C97275 * C603 + C97273 * C621 +
            C97277 * C2337 - C97278 * C2328 - C97277 * C2338 +
            C154268 * C2343) *
               C154487 +
           (C103715 + C103716) * C154483 + (C103717 + C103718) * C154473 +
           (C132119 + C132120) * C154415) *
              C154011 * C2322 -
          ((C97277 * C32489 - C97278 * C32488 - C97277 * C32490 +
            C154268 * C32491 + C97275 * C30002 - C97276 * C29999 -
            C97275 * C30003 + C97273 * C30005) *
               C154415 +
           (C97277 * C31084 - C97278 * C31082 - C97277 * C31085 +
            C154268 * C31088 + C97275 * C6272 - C97276 * C6262 -
            C97275 * C6273 + C97273 * C6280) *
               C154473 +
           (C97277 * C9282 - C97278 * C9277 - C97277 * C9283 + C154268 * C9286 +
            C97275 * C6274 - C97276 * C6263 - C97275 * C6275 + C97273 * C6281) *
               C154483 +
           (C97277 * C7777 - C97278 * C7773 - C97277 * C7778 + C154268 * C7785 +
            C97275 * C2337 - C97276 * C2328 - C97275 * C2338 + C97273 * C2343) *
               C154487) *
              C154011 * C2323) *
         C154066 * C154047) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C106573 * C144 - C106574 * C136 - C106573 * C145 + C154488 * C160 +
             C106575 * C600 - C106576 * C584 - C106575 * C601 + C154485 * C620 +
             C106577 * C602 - C106578 * C585 - C106577 * C603 + C154476 * C621 +
             C106579 * C2337 - C106580 * C2328 - C106579 * C2338 +
             C154422 * C2343) *
                C70494 +
            (C134318 + C134319 + C134320 + C134321) * C154226) *
               C154011 * C2114 -
           ((C135190 + C135191 + C135192 + C135193) * C154226 +
            (C106579 * C7777 - C106580 * C7773 - C106579 * C7778 +
             C154422 * C7785 + C106577 * C2337 - C106578 * C2328 -
             C106577 * C2338 + C154476 * C2343 + C106575 * C602 -
             C106576 * C585 - C106575 * C603 + C154485 * C621 + C106573 * C600 -
             C106574 * C584 - C106573 * C601 + C154488 * C620) *
                C70494) *
               C154011 * C154146) *
              C154066 * C1309 +
          (((C107161 + C107160 + C107159 + C107158) * C70494 +
            (C107892 + C107893 + C107894 + C107895) * C154226) *
               C154011 * C154146 -
           ((C106908 + C106909 + C106910 + C106911) * C154226 +
            (C106657 + C106656 + C106655 + C106654) * C70494) *
               C154011 * C2114) *
              C154066 * C1310 +
          (((C106661 + C106660 + C106659 + C106658) * C70494 +
            (C107384 + C107385 + C107386 + C107387) * C154226) *
               C154011 * C2114 -
           ((C106579 * C9278 - C106580 * C9275 - C106579 * C9279 +
             C154422 * C9284 + C106577 * C6266 - C106578 * C6259 -
             C106577 * C6267 + C154476 * C6277 + C106575 * C1550 -
             C106576 * C1543 - C106575 * C1551 + C154485 * C1558 +
             C106573 * C1139 - C106574 * C1131 - C106573 * C1140 +
             C154488 * C1149) *
                C154226 +
            (C107609 + C107608 + C107607 + C107606) * C70494) *
               C154011 * C154146) *
              C154066 * C1311)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C106573 * C144 - C106574 * C136 - C106573 * C145 + C154488 * C160 +
             C106575 * C600 - C106576 * C584 - C106575 * C601 + C154485 * C620 +
             C106577 * C602 - C106578 * C585 - C106577 * C603 + C154476 * C621 +
             C106579 * C2337 - C106580 * C2328 - C106579 * C2338 +
             C154422 * C2343) *
                C70494 +
            (C134318 + C134319 + C134320 + C134321) * C154226) *
               C154011 * C2114 -
           ((C135190 + C135191 + C135192 + C135193) * C154226 +
            (C106579 * C7777 - C106580 * C7773 - C106579 * C7778 +
             C154422 * C7785 + C106577 * C2337 - C106578 * C2328 -
             C106577 * C2338 + C154476 * C2343 + C106575 * C602 -
             C106576 * C585 - C106575 * C603 + C154485 * C621 + C106573 * C600 -
             C106574 * C584 - C106573 * C601 + C154488 * C620) *
                C70494) *
               C154011 * C154146) *
              C338 +
          (((C135193 + C135192 + C135191 + C135190) * C70494 +
            (C136438 + C136439 + C136440 + C136441) * C154226) *
               C154011 * C154146 -
           ((C134322 + C134323 + C134324 + C134325) * C154226 +
            (C134321 + C134320 + C134319 + C134318) * C70494) *
               C154011 * C2114) *
              C339 +
          (((C134325 + C134324 + C134323 + C134322) * C70494 +
            (C135542 + C135543 + C135544 + C135545) * C154226) *
               C154011 * C2114 -
           ((C106579 * C32489 - C106580 * C32488 - C106579 * C32490 +
             C154422 * C32491 + C106577 * C30002 - C106578 * C29999 -
             C106577 * C30003 + C154476 * C30005 + C106575 * C4912 -
             C106576 * C4907 - C106575 * C4913 + C154485 * C4916 +
             C106573 * C4258 - C106574 * C4254 - C106573 * C4259 +
             C154488 * C4266) *
                C154226 +
            (C136441 + C136440 + C136439 + C136438) * C70494) *
               C154011 * C154146) *
              C340) *
         C154047) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C106573 * C144 - C106574 * C136 - C106573 * C145 + C154488 * C160 +
            C106575 * C600 - C106576 * C584 - C106575 * C601 + C154485 * C620 +
            C106577 * C602 - C106578 * C585 - C106577 * C603 + C154476 * C621 +
            C106579 * C2337 - C106580 * C2328 - C106579 * C2338 +
            C154422 * C2343) *
               C70494 +
           (C134318 + C134319 + C134320 + C134321) * C154226) *
              C154011 * C2320 -
          ((C135190 + C135191 + C135192 + C135193) * C154226 +
           (C106579 * C7777 - C106580 * C7773 - C106579 * C7778 +
            C154422 * C7785 + C106577 * C2337 - C106578 * C2328 -
            C106577 * C2338 + C154476 * C2343 + C106575 * C602 -
            C106576 * C585 - C106575 * C603 + C154485 * C621 + C106573 * C600 -
            C106574 * C584 - C106573 * C601 + C154488 * C620) *
               C70494) *
              C154011 * C2321 +
          ((C106573 * C602 - C106574 * C585 - C106573 * C603 + C154488 * C621 +
            C106575 * C2337 - C106576 * C2328 - C106575 * C2338 +
            C154485 * C2343 + C106577 * C7777 - C106578 * C7773 -
            C106577 * C7778 + C154476 * C7785 + C106579 * C10602 -
            C106580 * C10597 - C106579 * C10603 + C154422 * C10606) *
               C70494 +
           (C135764 + C135765 + C135766 + C135767) * C154226) *
              C154011 * C2322 -
          ((C106579 * C56522 - C106580 * C56521 - C106579 * C56523 +
            C154422 * C56524 + C106577 * C33869 - C106578 * C33866 -
            C106577 * C33870 + C154476 * C33872 + C106575 * C9282 -
            C106576 * C9277 - C106575 * C9283 + C154485 * C9286 +
            C106573 * C6274 - C106574 * C6263 - C106573 * C6275 +
            C154488 * C6281) *
               C154226 +
           (C106579 * C55779 - C106580 * C55777 - C106579 * C55780 +
            C154422 * C55783 + C106577 * C10602 - C106578 * C10597 -
            C106577 * C10603 + C154476 * C10606 + C106575 * C7777 -
            C106576 * C7773 - C106575 * C7778 + C154485 * C7785 +
            C106573 * C2337 - C106574 * C2328 - C106573 * C2338 +
            C154488 * C2343) *
               C70494) *
              C154011 * C2323) *
         C154066 * C154047) /
            (p * q * std::sqrt(p + q));
    d2ee[118] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
             C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
                C154487 +
            (C101527 + C101528) * C154483 + C101539 * C154473 +
            C130733 * C154415) *
               C154011 * C154465 -
           (C132767 * C154415 + C104685 * C154473 +
            (C102898 + C102899) * C154483 +
            (C97277 * C602 - C97278 * C585 - C97277 * C603 + C154268 * C621 +
             C97275 * C600 - C97276 * C584 - C97275 * C601 + C97273 * C620) *
                C154487) *
               C154011 * C154466 +
           ((C97275 * C602 - C97276 * C585 - C97275 * C603 + C97273 * C621 +
             C97277 * C2337 - C97278 * C2328 - C97277 * C2338 +
             C154268 * C2343) *
                C154487 +
            (C103715 + C103716) * C154483 + (C103717 + C103718) * C154473 +
            (C132119 + C132120) * C154415) *
               C154011 * C2630) *
              C154066 * C154384 +
          (((C97907 + C97906) * C154487 + C102874 * C154483 +
            C102875 * C154473 + (C102900 + C102901) * C154415) *
               C154011 * C154466 -
           (C101540 * C154415 + C101476 * C154473 + C101477 * C154483 +
            (C97341 + C97340) * C154487) *
               C154011 * C154465 -
           ((C97277 * C31817 - C97278 * C31816 - C97277 * C31818 +
             C154268 * C31819 + C97275 * C4910 - C97276 * C4906 -
             C97275 * C4911 + C97273 * C4915) *
                C154415 +
            (C101873 + C101872) * C154473 + (C101871 + C101870) * C154483 +
            (C97909 + C97908) * C154487) *
               C154011 * C2630) *
              C154066 * C154053)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
              C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
                 C70494 +
             (C101527 + C101528) * C154226) *
                C154477 +
            ((C97340 + C97341) * C70494 + C101466 * C154226) * C154458 +
            C125375 * C154429) *
               C154465 -
           (C126542 * C154429 +
            (C102857 * C154226 + (C97906 + C97907) * C70494) * C154458 +
            ((C102898 + C102899) * C154226 +
             (C97277 * C602 - C97278 * C585 - C97277 * C603 + C154268 * C621 +
              C97275 * C600 - C97276 * C584 - C97275 * C601 + C97273 * C620) *
                 C70494) *
                C154477) *
               C154466 +
           (((C97275 * C602 - C97276 * C585 - C97275 * C603 + C97273 * C621 +
              C97277 * C2337 - C97278 * C2328 - C97277 * C2338 +
              C154268 * C2343) *
                 C70494 +
             (C103715 + C103716) * C154226) *
                C154477 +
            ((C97908 + C97909) * C70494 + (C101870 + C101871) * C154226) *
                C154458 +
            ((C97910 + C97911) * C70494 + (C111016 + C111017) * C154226) *
                C154429) *
               C2630) *
              C154066 * C154384 +
          ((((C97907 + C97906) * C70494 + C102874 * C154226) * C154477 +
            ((C97905 + C97904) * C70494 + C111992 * C154226) * C154458 +
            ((C97903 + C97902) * C70494 + (C98636 + C98637) * C154226) *
                C154429) *
               C154466 -
           (C125376 * C154429 +
            (C98109 * C154226 + (C97343 + C97342) * C70494) * C154458 +
            (C101477 * C154226 + (C97341 + C97340) * C70494) * C154477) *
               C154465 -
           (((C97277 * C8648 - C97278 * C8647 - C97277 * C8649 +
              C154268 * C8650 + C97275 * C1548 - C97276 * C1542 -
              C97275 * C1549 + C97273 * C1557) *
                 C154226 +
             (C97913 + C97912) * C70494) *
                C154429 +
            ((C111017 + C111016) * C154226 + (C97911 + C97910) * C70494) *
                C154458 +
            ((C101871 + C101870) * C154226 + (C97909 + C97908) * C70494) *
                C154477) *
               C2630) *
              C154066 * C154053)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C106573 * C144 - C106574 * C136 - C106573 * C145 + C154488 * C160 +
             C106575 * C600 - C106576 * C584 - C106575 * C601 + C154485 * C620 +
             C106577 * C602 - C106578 * C585 - C106577 * C603 + C154476 * C621 +
             C106579 * C2337 - C106580 * C2328 - C106579 * C2338 +
             C154422 * C2343) *
                C70494 +
            (C134318 + C134319 + C134320 + C134321) * C154226) *
               C154011 * C154465 -
           ((C135190 + C135191 + C135192 + C135193) * C154226 +
            (C106579 * C7777 - C106580 * C7773 - C106579 * C7778 +
             C154422 * C7785 + C106577 * C2337 - C106578 * C2328 -
             C106577 * C2338 + C154476 * C2343 + C106575 * C602 -
             C106576 * C585 - C106575 * C603 + C154485 * C621 + C106573 * C600 -
             C106574 * C584 - C106573 * C601 + C154488 * C620) *
                C70494) *
               C154011 * C154466 +
           ((C106573 * C602 - C106574 * C585 - C106573 * C603 + C154488 * C621 +
             C106575 * C2337 - C106576 * C2328 - C106575 * C2338 +
             C154485 * C2343 + C106577 * C7777 - C106578 * C7773 -
             C106577 * C7778 + C154476 * C7785 + C106579 * C10602 -
             C106580 * C10597 - C106579 * C10603 + C154422 * C10606) *
                C70494 +
            (C135764 + C135765 + C135766 + C135767) * C154226) *
               C154011 * C2630) *
              C154066 * C154384 +
          (((C107161 + C107160 + C107159 + C107158) * C70494 +
            (C107892 + C107893 + C107894 + C107895) * C154226) *
               C154011 * C154466 -
           ((C106908 + C106909 + C106910 + C106911) * C154226 +
            (C106657 + C106656 + C106655 + C106654) * C70494) *
               C154011 * C154465 -
           ((C106579 * C56192 - C106580 * C56191 - C106579 * C56193 +
             C154422 * C56194 + C106577 * C9280 - C106578 * C9276 -
             C106577 * C9281 + C154476 * C9285 + C106575 * C6270 -
             C106576 * C6261 - C106575 * C6271 + C154485 * C6279 +
             C106573 * C1552 - C106574 * C1544 - C106573 * C1553 +
             C154488 * C1559) *
                C154226 +
            (C107165 + C107164 + C107163 + C107162) * C70494) *
               C154011 * C2630) *
              C154066 * C154053)) /
            (p * q * std::sqrt(p + q));
    d2ee[119] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
              C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
                 C70494 +
             (C101527 + C101528) * C154226) *
                C154477 +
            ((C97340 + C97341) * C70494 + C101466 * C154226) * C154458 +
            C125375 * C154429) *
               C2114 -
           (C126542 * C154429 +
            (C102857 * C154226 + (C97906 + C97907) * C70494) * C154458 +
            ((C102898 + C102899) * C154226 +
             (C97277 * C602 - C97278 * C585 - C97277 * C603 + C154268 * C621 +
              C97275 * C600 - C97276 * C584 - C97275 * C601 + C97273 * C620) *
                 C70494) *
                C154477) *
               C154146) *
              C338 +
          ((((C102899 + C102898) * C70494 + (C102897 + C102896) * C154226) *
                C154477 +
            (C102874 * C70494 + C102875 * C154226) * C154458 +
            (C111992 * C70494 + (C102468 + C102469) * C154226) * C154429) *
               C154146 -
           (C126249 * C154429 +
            (C101476 * C154226 + C101477 * C70494) * C154458 +
            ((C101530 + C101529) * C154226 + (C101528 + C101527) * C70494) *
                C154477) *
               C2114) *
              C339 +
          (((C101539 * C70494 + (C101534 + C101533) * C154226) * C154477 +
            (C101467 * C70494 + C101541 * C154226) * C154458 +
            (C102165 * C70494 + (C101537 + C101538) * C154226) * C154429) *
               C2114 -
           (((C97277 * C4908 - C97278 * C4905 - C97277 * C4909 +
              C154268 * C4914 + C97275 * C4262 - C97276 * C4256 -
              C97275 * C4263 + C97273 * C4268) *
                 C154226 +
             (C102469 + C102468) * C70494) *
                C154429 +
            ((C102901 + C102900) * C154226 + C102856 * C70494) * C154458 +
            ((C104699 + C104698) * C154226 + C104685 * C70494) * C154477) *
               C154146) *
              C340) *
         C154047) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
              C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
                 C70494 +
             (C101527 + C101528) * C154226) *
                C154477 +
            ((C97340 + C97341) * C70494 + C101466 * C154226) * C154458 +
            C125375 * C154429) *
               C2114 -
           (C126542 * C154429 +
            (C102857 * C154226 + (C97906 + C97907) * C70494) * C154458 +
            ((C102898 + C102899) * C154226 +
             (C97277 * C602 - C97278 * C585 - C97277 * C603 + C154268 * C621 +
              C97275 * C600 - C97276 * C584 - C97275 * C601 + C97273 * C620) *
                 C70494) *
                C154477) *
               C154146) *
              C154066 * C1309 +
          ((((C97907 + C97906) * C70494 + C102874 * C154226) * C154477 +
            ((C97905 + C97904) * C70494 + C111992 * C154226) * C154458 +
            ((C97903 + C97902) * C70494 + (C98636 + C98637) * C154226) *
                C154429) *
               C154146 -
           (C125376 * C154429 +
            (C98109 * C154226 + (C97343 + C97342) * C70494) * C154458 +
            (C101477 * C154226 + (C97341 + C97340) * C70494) * C154477) *
               C2114) *
              C154066 * C1310 +
          ((C125375 * C154477 +
            (C97351 * C70494 + C111310 * C154226) * C154458 +
            ((C97347 + C97346) * C70494 + (C98124 + C98125) * C154226) *
                C154429) *
               C2114 -
           (((C97277 * C1546 - C97278 * C1541 - C97277 * C1547 +
              C154268 * C1556 + C97275 * C1143 - C97276 * C1133 -
              C97275 * C1144 + C97273 * C1151) *
                 C154226 +
             (C98337 + C98336) * C70494) *
                C154429 +
            ((C98637 + C98636) * C154226 + C98320 * C70494) * C154458 +
            C126542 * C154477) *
               C154146) *
              C154066 * C1311)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
             C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
                C154487 +
            (C101527 + C101528) * C154483 + C101539 * C154473 +
            C130733 * C154415) *
               C154011 * C2114 -
           (C132767 * C154415 + C104685 * C154473 +
            (C102898 + C102899) * C154483 +
            (C97277 * C602 - C97278 * C585 - C97277 * C603 + C154268 * C621 +
             C97275 * C600 - C97276 * C584 - C97275 * C601 + C97273 * C620) *
                C154487) *
               C154011 * C154146) *
              C154066 * C1309 +
          (((C97907 + C97906) * C154487 + C102874 * C154483 +
            C102875 * C154473 + (C102900 + C102901) * C154415) *
               C154011 * C154146 -
           (C101540 * C154415 + C101476 * C154473 + C101477 * C154483 +
            (C97341 + C97340) * C154487) *
               C154011 * C2114) *
              C154066 * C1310 +
          ((C97350 * C154487 + C102164 * C154483 + C102165 * C154473 +
            (C101537 + C101538) * C154415) *
               C154011 * C2114 -
           ((C97277 * C4908 - C97278 * C4905 - C97277 * C4909 +
             C154268 * C4914 + C97275 * C4262 - C97276 * C4256 -
             C97275 * C4263 + C97273 * C4268) *
                C154415 +
            (C102469 + C102468) * C154473 + C111602 * C154483 +
            C98321 * C154487) *
               C154011 * C154146) *
              C154066 * C1311)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
             C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
                C154487 +
            (C101527 + C101528) * C154483 + C101539 * C154473 +
            C130733 * C154415) *
               C154011 * C2114 -
           (C132767 * C154415 + C104685 * C154473 +
            (C102898 + C102899) * C154483 +
            (C97277 * C602 - C97278 * C585 - C97277 * C603 + C154268 * C621 +
             C97275 * C600 - C97276 * C584 - C97275 * C601 + C97273 * C620) *
                C154487) *
               C154011 * C154146) *
              C338 +
          (((C102899 + C102898) * C154487 + (C102897 + C102896) * C154483 +
            (C104698 + C104699) * C154473 + (C132780 + C132781) * C154415) *
               C154011 * C154146 -
           (C131898 * C154415 + C103386 * C154473 +
            (C101530 + C101529) * C154483 + (C101528 + C101527) * C154487) *
               C154011 * C2114) *
              C339 +
          ((C101539 * C154487 + C130733 * C154483 +
            (C103399 + C103400) * C154473 + (C131911 + C131912) * C154415) *
               C154011 * C2114 -
           ((C97277 * C29238 - C97278 * C29237 - C97277 * C29239 +
             C154268 * C29240 + C97275 * C28880 - C97276 * C28878 -
             C97275 * C28881 + C97273 * C28884) *
                C154415 +
            (C132781 + C132780) * C154473 + C132767 * C154483 +
            C104685 * C154487) *
               C154011 * C154146) *
              C340) *
         C154047) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C106573 * C144 - C106574 * C136 - C106573 * C145 + C154488 * C160 +
             C106575 * C600 - C106576 * C584 - C106575 * C601 + C154485 * C620 +
             C106577 * C602 - C106578 * C585 - C106577 * C603 + C154476 * C621 +
             C106579 * C2337 - C106580 * C2328 - C106579 * C2338 +
             C154422 * C2343) *
                C70494 +
            (C134318 + C134319 + C134320 + C134321) * C154226) *
               C154011 * C2114 -
           ((C135190 + C135191 + C135192 + C135193) * C154226 +
            (C106579 * C7777 - C106580 * C7773 - C106579 * C7778 +
             C154422 * C7785 + C106577 * C2337 - C106578 * C2328 -
             C106577 * C2338 + C154476 * C2343 + C106575 * C602 -
             C106576 * C585 - C106575 * C603 + C154485 * C621 + C106573 * C600 -
             C106574 * C584 - C106573 * C601 + C154488 * C620) *
                C70494) *
               C154011 * C154146) *
              C154066 * C1309 +
          (((C107161 + C107160 + C107159 + C107158) * C70494 +
            (C107892 + C107893 + C107894 + C107895) * C154226) *
               C154011 * C154146 -
           ((C106908 + C106909 + C106910 + C106911) * C154226 +
            (C106657 + C106656 + C106655 + C106654) * C70494) *
               C154011 * C2114) *
              C154066 * C1310 +
          (((C106661 + C106660 + C106659 + C106658) * C70494 +
            (C107384 + C107385 + C107386 + C107387) * C154226) *
               C154011 * C2114 -
           ((C106579 * C9278 - C106580 * C9275 - C106579 * C9279 +
             C154422 * C9284 + C106577 * C6266 - C106578 * C6259 -
             C106577 * C6267 + C154476 * C6277 + C106575 * C1550 -
             C106576 * C1543 - C106575 * C1551 + C154485 * C1558 +
             C106573 * C1139 - C106574 * C1131 - C106573 * C1140 +
             C154488 * C1149) *
                C154226 +
            (C107609 + C107608 + C107607 + C107606) * C70494) *
               C154011 * C154146) *
              C154066 * C1311)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C106573 * C144 - C106574 * C136 - C106573 * C145 + C154488 * C160 +
             C106575 * C600 - C106576 * C584 - C106575 * C601 + C154485 * C620 +
             C106577 * C602 - C106578 * C585 - C106577 * C603 + C154476 * C621 +
             C106579 * C2337 - C106580 * C2328 - C106579 * C2338 +
             C154422 * C2343) *
                C70494 +
            (C134318 + C134319 + C134320 + C134321) * C154226) *
               C154011 * C2114 -
           ((C135190 + C135191 + C135192 + C135193) * C154226 +
            (C106579 * C7777 - C106580 * C7773 - C106579 * C7778 +
             C154422 * C7785 + C106577 * C2337 - C106578 * C2328 -
             C106577 * C2338 + C154476 * C2343 + C106575 * C602 -
             C106576 * C585 - C106575 * C603 + C154485 * C621 + C106573 * C600 -
             C106574 * C584 - C106573 * C601 + C154488 * C620) *
                C70494) *
               C154011 * C154146) *
              C338 +
          (((C135193 + C135192 + C135191 + C135190) * C70494 +
            (C136438 + C136439 + C136440 + C136441) * C154226) *
               C154011 * C154146 -
           ((C134322 + C134323 + C134324 + C134325) * C154226 +
            (C134321 + C134320 + C134319 + C134318) * C70494) *
               C154011 * C2114) *
              C339 +
          (((C134325 + C134324 + C134323 + C134322) * C70494 +
            (C135542 + C135543 + C135544 + C135545) * C154226) *
               C154011 * C2114 -
           ((C106579 * C32489 - C106580 * C32488 - C106579 * C32490 +
             C154422 * C32491 + C106577 * C30002 - C106578 * C29999 -
             C106577 * C30003 + C154476 * C30005 + C106575 * C4912 -
             C106576 * C4907 - C106575 * C4913 + C154485 * C4916 +
             C106573 * C4258 - C106574 * C4254 - C106573 * C4259 +
             C154488 * C4266) *
                C154226 +
            (C136441 + C136440 + C136439 + C136438) * C70494) *
               C154011 * C154146) *
              C340) *
         C154047) /
            (p * q * std::sqrt(p + q));
    d2ee[120] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C152148 * C144 - C152187 * C136 - C152148 * C145 +
              C154264 * C160 + C152145 * C600 - C152180 * C584 -
              C152145 * C601 + C154271 * C620 + C152193 * C602 -
              C115626 * C585 - C152193 * C603 + C115620 * C621) *
                 C70494 +
             (C120300 + C120301 + C120302) * C154226) *
                C154373 +
            ((C115700 + C115701 + C115702) * C70494 + C120281 * C154226) *
                C154021) *
               C154082 * C154392 -
           ((C120282 * C154226 + C120283 * C70494) * C154021 +
            ((C120303 + C120304 + C120305) * C154226 +
             (C120302 + C120301 + C120300) * C70494) *
                C154373) *
               C154082 * C154118) *
              C154461 +
          (((C120281 * C70494 + C120287 * C154226) * C154373 +
            (C120911 * C70494 + (C116017 + C116018 + C116019) * C154226) *
                C154021) *
               C154082 * C154118 -
           ((C116553 * C154226 + (C115705 + C115704 + C115703) * C70494) *
                C154021 +
            (C120283 * C154226 + (C115702 + C115701 + C115700) * C70494) *
                C154373) *
               C154082 * C154392) *
              C154462 +
          (((C115714 * C70494 + C120911 * C154226) * C154373 +
            ((C115708 + C115707 + C115706) * C70494 +
             (C116561 + C116562 + C116563) * C154226) *
                C154021) *
               C154082 * C154392 -
           (((C152193 * C3451 - C115626 * C3444 - C152193 * C3452 +
              C115620 * C3456 + C152145 * C1979 - C152180 * C1973 -
              C152145 * C1980 + C154271 * C1988 + C152148 * C371 -
              C152187 * C351 - C152148 * C372 + C154264 * C387) *
                 C154226 +
             (C116563 + C116562 + C116561) * C70494) *
                C154021 +
            ((C116019 + C116018 + C116017) * C154226 + C116553 * C70494) *
                C154373) *
               C154082 * C154118) *
              C818)) /
        (p * q * std::sqrt(p + q));
    d2ee[121] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C152148 * C144 - C152187 * C136 - C152148 * C145 +
               C154264 * C160 + C152145 * C600 - C152180 * C584 -
               C152145 * C601 + C154271 * C620 + C152193 * C602 -
               C115626 * C585 - C152193 * C603 + C115620 * C621) *
                  C70494 +
              (C120300 + C120301 + C120302) * C154226) *
                 C154373 +
             ((C115700 + C115701 + C115702) * C70494 + C120281 * C154226) *
                 C154021) *
                C154393 -
            ((C121614 * C154226 + (C116313 + C116314 + C116315) * C70494) *
                 C154021 +
             ((C121628 + C121629 + C121630) * C154226 +
              (C152193 * C2337 - C115626 * C2328 - C152193 * C2338 +
               C115620 * C2343 + C152145 * C602 - C152180 * C585 -
               C152145 * C603 + C154271 * C621 + C152148 * C600 -
               C152187 * C584 - C152148 * C601 + C154264 * C620) *
                  C70494) *
                 C154373) *
                C154146) *
               C154392 +
           ((((C121630 + C121629 + C121628) * C70494 +
              (C123434 + C123435 + C123436) * C154226) *
                 C154373 +
             (C121618 * C70494 + (C121631 + C121632 + C121633) * C154226) *
                 C154021) *
                C154146 -
            ((C120282 * C154226 + C120283 * C70494) * C154021 +
             ((C120303 + C120304 + C120305) * C154226 +
              (C120302 + C120301 + C120300) * C70494) *
                 C154373) *
                C154393) *
               C154118) *
              C341 +
          (((((C116315 + C116314 + C116313) * C70494 + C121618 * C154226) *
                 C154373 +
             ((C116312 + C116311 + C116310) * C70494 +
              (C117135 + C117136 + C117137) * C154226) *
                 C154021) *
                C154146 -
            ((C116553 * C154226 + (C115705 + C115704 + C115703) * C70494) *
                 C154021 +
             (C120283 * C154226 + (C115702 + C115701 + C115700) * C70494) *
                 C154373) *
                C154393) *
               C154392 +
           (((C120281 * C70494 + C120287 * C154226) * C154373 +
             (C120911 * C70494 + (C116017 + C116018 + C116019) * C154226) *
                 C154021) *
                C154393 -
            (((C152193 * C6264 - C115626 * C6258 - C152193 * C6265 +
               C115620 * C6276 + C152145 * C3449 - C152180 * C3443 -
               C152145 * C3450 + C154271 * C3455 + C152148 * C1981 -
               C152187 * C1974 - C152148 * C1982 + C154264 * C1989) *
                  C154226 +
              (C117137 + C117136 + C117135) * C70494) *
                 C154021 +
             ((C121633 + C121632 + C121631) * C154226 + C121614 * C70494) *
                 C154373) *
                C154146) *
               C154118) *
              C154053)) /
        (p * q * std::sqrt(p + q));
    d2ee[122] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C152148 * C144 - C152187 * C136 - C152148 * C145 +
              C154264 * C160 + C152145 * C600 - C152180 * C584 -
              C152145 * C601 + C154271 * C620 + C152193 * C602 -
              C115626 * C585 - C152193 * C603 + C115620 * C621) *
                 C70494 +
             (C120300 + C120301 + C120302) * C154226) *
                C154373 +
            ((C115700 + C115701 + C115702) * C70494 + C120281 * C154226) *
                C154021) *
               C154082 * C338 -
           ((C120282 * C154226 + C120283 * C70494) * C154021 +
            ((C120303 + C120304 + C120305) * C154226 +
             (C120302 + C120301 + C120300) * C70494) *
                C154373) *
               C154082 * C339 +
           (((C120305 + C120304 + C120303) * C70494 +
             (C122136 + C122137 + C122138) * C154226) *
                C154373 +
            (C120287 * C70494 + (C120306 + C120307 + C120308) * C154226) *
                C154021) *
               C154082 * C340) *
              C341 +
          (((C120281 * C70494 + C120287 * C154226) * C154373 +
            (C120911 * C70494 + (C116017 + C116018 + C116019) * C154226) *
                C154021) *
               C154082 * C339 -
           ((C116553 * C154226 + (C115705 + C115704 + C115703) * C70494) *
                C154021 +
            (C120283 * C154226 + (C115702 + C115701 + C115700) * C70494) *
                C154373) *
               C154082 * C338 -
           (((C152193 * C4908 - C115626 * C4905 - C152193 * C4909 +
              C115620 * C4914 + C152145 * C4262 - C152180 * C4256 -
              C152145 * C4263 + C154271 * C4268 + C152148 * C1408 -
              C152187 * C1401 - C152148 * C1409 + C154264 * C1416) *
                 C154226 +
             (C116019 + C116018 + C116017) * C70494) *
                C154021 +
            ((C120308 + C120307 + C120306) * C154226 + C120282 * C70494) *
                C154373) *
               C154082 * C340) *
              C154053)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C152148 * C144 - C152187 * C136 - C152148 * C145 + C154264 * C160 +
             C152145 * C600 - C152180 * C584 - C152145 * C601 + C154271 * C620 +
             C152193 * C602 - C115626 * C585 - C152193 * C603 +
             C115620 * C621) *
                C70494 +
            (C120300 + C120301 + C120302) * C154226) *
               C154373 +
           ((C115700 + C115701 + C115702) * C70494 + C120281 * C154226) *
               C154021) *
              C154082 * C154066 * C130 -
          ((C116553 * C154226 + (C115705 + C115704 + C115703) * C70494) *
               C154021 +
           (C120283 * C154226 + (C115702 + C115701 + C115700) * C70494) *
               C154373) *
              C154082 * C154066 * C131 +
          ((C115714 * C70494 + C120911 * C154226) * C154373 +
           ((C115708 + C115707 + C115706) * C70494 +
            (C116561 + C116562 + C116563) * C154226) *
               C154021) *
              C154082 * C154066 * C132 -
          (((C152193 * C1546 - C115626 * C1541 - C152193 * C1547 +
             C115620 * C1556 + C152145 * C1143 - C152180 * C1133 -
             C152145 * C1144 + C154271 * C1151 + C152148 * C355 -
             C152187 * C343 - C152148 * C356 + C154264 * C379) *
                C154226 +
            (C115711 + C115710 + C115709) * C70494) *
               C154021 +
           ((C116563 + C116562 + C116561) * C154226 + C115715 * C70494) *
               C154373) *
              C154082 * C154066 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C152148 * C144 - C152187 * C136 - C152148 * C145 +
              C154264 * C160 + C152145 * C600 - C152180 * C584 -
              C152145 * C601 + C154271 * C620 + C152193 * C602 -
              C115626 * C585 - C152193 * C603 + C115620 * C621) *
                 C70494 +
             (C120300 + C120301 + C120302) * C154226) *
                C154373 +
            ((C115700 + C115701 + C115702) * C70494 + C120281 * C154226) *
                C154021) *
               C577 -
           ((C121614 * C154226 + (C116313 + C116314 + C116315) * C70494) *
                C154021 +
            ((C121628 + C121629 + C121630) * C154226 +
             (C152193 * C2337 - C115626 * C2328 - C152193 * C2338 +
              C115620 * C2343 + C152145 * C602 - C152180 * C585 -
              C152145 * C603 + C154271 * C621 + C152148 * C600 -
              C152187 * C584 - C152148 * C601 + C154264 * C620) *
                 C70494) *
                C154373) *
               C578 +
           (((C152148 * C602 - C152187 * C585 - C152148 * C603 +
              C154264 * C621 + C152145 * C2337 - C152180 * C2328 -
              C152145 * C2338 + C154271 * C2343 + C152193 * C7777 -
              C115626 * C7773 - C152193 * C7778 + C115620 * C7785) *
                 C70494 +
             (C122447 + C122448 + C122449) * C154226) *
                C154373 +
            ((C116316 + C116317 + C116318) * C70494 +
             (C120617 + C120618 + C120619) * C154226) *
                C154021) *
               C579) *
              C154066 * C341 +
          ((((C116315 + C116314 + C116313) * C70494 + C121618 * C154226) *
                C154373 +
            ((C116312 + C116311 + C116310) * C70494 +
             (C117135 + C117136 + C117137) * C154226) *
                C154021) *
               C578 -
           ((C116553 * C154226 + (C115705 + C115704 + C115703) * C70494) *
                C154021 +
            (C120283 * C154226 + (C115702 + C115701 + C115700) * C70494) *
                C154373) *
               C577 -
           (((C152193 * C9278 - C115626 * C9275 - C152193 * C9279 +
              C115620 * C9284 + C152145 * C6266 - C152180 * C6259 -
              C152145 * C6267 + C154271 * C6277 + C152148 * C1550 -
              C152187 * C1543 - C152148 * C1551 + C154264 * C1558) *
                 C154226 +
             (C116321 + C116320 + C116319) * C70494) *
                C154021 +
            ((C120619 + C120618 + C120617) * C154226 +
             (C116318 + C116317 + C116316) * C70494) *
                C154373) *
               C579) *
              C154066 * C154053)) /
            (p * q * std::sqrt(p + q));
    d2ee[123] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C152148 * C144 - C152187 * C136 - C152148 * C145 +
              C154264 * C160 + C152145 * C600 - C152180 * C584 -
              C152145 * C601 + C154271 * C620 + C152193 * C602 -
              C115626 * C585 - C152193 * C603 + C115620 * C621) *
                 C70494 +
             (C120300 + C120301 + C120302) * C154226) *
                C154373 +
            ((C115700 + C115701 + C115702) * C70494 + C120281 * C154226) *
                C154021) *
               C154393 -
           ((C121614 * C154226 + (C116313 + C116314 + C116315) * C70494) *
                C154021 +
            ((C121628 + C121629 + C121630) * C154226 +
             (C152193 * C2337 - C115626 * C2328 - C152193 * C2338 +
              C115620 * C2343 + C152145 * C602 - C152180 * C585 -
              C152145 * C603 + C154271 * C621 + C152148 * C600 -
              C152187 * C584 - C152148 * C601 + C154264 * C620) *
                 C70494) *
                C154373) *
               C154146) *
              C154066 * C154461 +
          ((((C116315 + C116314 + C116313) * C70494 + C121618 * C154226) *
                C154373 +
            ((C116312 + C116311 + C116310) * C70494 +
             (C117135 + C117136 + C117137) * C154226) *
                C154021) *
               C154146 -
           ((C116553 * C154226 + (C115705 + C115704 + C115703) * C70494) *
                C154021 +
            (C120283 * C154226 + (C115702 + C115701 + C115700) * C70494) *
                C154373) *
               C154393) *
              C154066 * C154462 +
          (((C115714 * C70494 + C120911 * C154226) * C154373 +
            ((C115708 + C115707 + C115706) * C70494 +
             (C116561 + C116562 + C116563) * C154226) *
                C154021) *
               C154393 -
           (((C152193 * C8648 - C115626 * C8647 - C152193 * C8649 +
              C115620 * C8650 + C152145 * C1548 - C152180 * C1542 -
              C152145 * C1549 + C154271 * C1557 + C152148 * C1141 -
              C152187 * C1132 - C152148 * C1142 + C154264 * C1150) *
                 C154226 +
             (C116805 + C116804 + C116803) * C70494) *
                C154021 +
            ((C117137 + C117136 + C117135) * C154226 + C116795 * C70494) *
                C154373) *
               C154146) *
              C154066 * C818)) /
        (p * q * std::sqrt(p + q));
    d2ee[124] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C152148 * C144 - C152187 * C136 - C152148 * C145 + C154264 * C160 +
             C152145 * C600 - C152180 * C584 - C152145 * C601 + C154271 * C620 +
             C152193 * C602 - C115626 * C585 - C152193 * C603 +
             C115620 * C621) *
                C70494 +
            (C120300 + C120301 + C120302) * C154226) *
               C154373 +
           ((C115700 + C115701 + C115702) * C70494 + C120281 * C154226) *
               C154021) *
              C154082 * C154066 * C130 -
          ((C116553 * C154226 + (C115705 + C115704 + C115703) * C70494) *
               C154021 +
           (C120283 * C154226 + (C115702 + C115701 + C115700) * C70494) *
               C154373) *
              C154082 * C154066 * C131 +
          ((C115714 * C70494 + C120911 * C154226) * C154373 +
           ((C115708 + C115707 + C115706) * C70494 +
            (C116561 + C116562 + C116563) * C154226) *
               C154021) *
              C154082 * C154066 * C132 -
          (((C152193 * C1546 - C115626 * C1541 - C152193 * C1547 +
             C115620 * C1556 + C152145 * C1143 - C152180 * C1133 -
             C152145 * C1144 + C154271 * C1151 + C152148 * C355 -
             C152187 * C343 - C152148 * C356 + C154264 * C379) *
                C154226 +
            (C115711 + C115710 + C115709) * C70494) *
               C154021 +
           ((C116563 + C116562 + C116561) * C154226 + C115715 * C70494) *
               C154373) *
              C154082 * C154066 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C152148 * C144 - C152187 * C136 - C152148 * C145 +
              C154264 * C160 + C152145 * C600 - C152180 * C584 -
              C152145 * C601 + C154271 * C620 + C152193 * C602 -
              C115626 * C585 - C152193 * C603 + C115620 * C621) *
                 C70494 +
             (C120300 + C120301 + C120302) * C154226) *
                C154373 +
            ((C115700 + C115701 + C115702) * C70494 + C120281 * C154226) *
                C154021) *
               C154082 * C338 -
           ((C120282 * C154226 + C120283 * C70494) * C154021 +
            ((C120303 + C120304 + C120305) * C154226 +
             (C120302 + C120301 + C120300) * C70494) *
                C154373) *
               C154082 * C339 +
           (((C120305 + C120304 + C120303) * C70494 +
             (C122136 + C122137 + C122138) * C154226) *
                C154373 +
            (C120287 * C70494 + (C120306 + C120307 + C120308) * C154226) *
                C154021) *
               C154082 * C340) *
              C341 +
          (((C120281 * C70494 + C120287 * C154226) * C154373 +
            (C120911 * C70494 + (C116017 + C116018 + C116019) * C154226) *
                C154021) *
               C154082 * C339 -
           ((C116553 * C154226 + (C115705 + C115704 + C115703) * C70494) *
                C154021 +
            (C120283 * C154226 + (C115702 + C115701 + C115700) * C70494) *
                C154373) *
               C154082 * C338 -
           (((C152193 * C4908 - C115626 * C4905 - C152193 * C4909 +
              C115620 * C4914 + C152145 * C4262 - C152180 * C4256 -
              C152145 * C4263 + C154271 * C4268 + C152148 * C1408 -
              C152187 * C1401 - C152148 * C1409 + C154264 * C1416) *
                 C154226 +
             (C116019 + C116018 + C116017) * C70494) *
                C154021 +
            ((C120308 + C120307 + C120306) * C154226 + C120282 * C70494) *
                C154373) *
               C154082 * C340) *
              C154053)) /
            (p * q * std::sqrt(p + q));
    d2ee[125] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C152148 * C144 - C152187 * C136 - C152148 * C145 +
              C154264 * C160 + C152145 * C600 - C152180 * C584 -
              C152145 * C601 + C154271 * C620 + C152193 * C602 -
              C115626 * C585 - C152193 * C603 + C115620 * C621) *
                 C70494 +
             (C120300 + C120301 + C120302) * C154226) *
                C154373 +
            ((C115700 + C115701 + C115702) * C70494 + C120281 * C154226) *
                C154021) *
               C154082 * C154463 -
           ((C120282 * C154226 + C120283 * C70494) * C154021 +
            ((C120303 + C120304 + C120305) * C154226 +
             (C120302 + C120301 + C120300) * C70494) *
                C154373) *
               C154082 * C154464 +
           (((C120305 + C120304 + C120303) * C70494 +
             (C122136 + C122137 + C122138) * C154226) *
                C154373 +
            (C120287 * C70494 + (C120306 + C120307 + C120308) * C154226) *
                C154021) *
               C154082 * C1685) *
              C154384 +
          (((C120281 * C70494 + C120287 * C154226) * C154373 +
            (C120911 * C70494 + (C116017 + C116018 + C116019) * C154226) *
                C154021) *
               C154082 * C154464 -
           ((C116553 * C154226 + (C115705 + C115704 + C115703) * C70494) *
                C154021 +
            (C120283 * C154226 + (C115702 + C115701 + C115700) * C70494) *
                C154373) *
               C154082 * C154463 -
           (((C152193 * C4908 - C115626 * C4905 - C152193 * C4909 +
              C115620 * C4914 + C152145 * C4262 - C152180 * C4256 -
              C152145 * C4263 + C154271 * C4268 + C152148 * C1408 -
              C152187 * C1401 - C152148 * C1409 + C154264 * C1416) *
                 C154226 +
             (C116019 + C116018 + C116017) * C70494) *
                C154021 +
            ((C120308 + C120307 + C120306) * C154226 + C120282 * C70494) *
                C154373) *
               C154082 * C1685) *
              C154053)) /
        (p * q * std::sqrt(p + q));
    d2ee[126] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C152148 * C144 - C152187 * C136 - C152148 * C145 +
              C154264 * C160 + C152145 * C600 - C152180 * C584 -
              C152145 * C601 + C154271 * C620 + C152193 * C602 -
              C115626 * C585 - C152193 * C603 + C115620 * C621) *
                 C70494 +
             (C120300 + C120301 + C120302) * C154226) *
                C154373 +
            ((C115700 + C115701 + C115702) * C70494 + C120281 * C154226) *
                C154021) *
               C154393 -
           ((C121614 * C154226 + (C116313 + C116314 + C116315) * C70494) *
                C154021 +
            ((C121628 + C121629 + C121630) * C154226 +
             (C152193 * C2337 - C115626 * C2328 - C152193 * C2338 +
              C115620 * C2343 + C152145 * C602 - C152180 * C585 -
              C152145 * C603 + C154271 * C621 + C152148 * C600 -
              C152187 * C584 - C152148 * C601 + C154264 * C620) *
                 C70494) *
                C154373) *
               C154146) *
              C154463 +
          ((((C121630 + C121629 + C121628) * C70494 +
             (C123434 + C123435 + C123436) * C154226) *
                C154373 +
            (C121618 * C70494 + (C121631 + C121632 + C121633) * C154226) *
                C154021) *
               C154146 -
           ((C120282 * C154226 + C120283 * C70494) * C154021 +
            ((C120303 + C120304 + C120305) * C154226 +
             (C120302 + C120301 + C120300) * C70494) *
                C154373) *
               C154393) *
              C154464 +
          ((((C120305 + C120304 + C120303) * C70494 +
             (C122136 + C122137 + C122138) * C154226) *
                C154373 +
            (C120287 * C70494 + (C120306 + C120307 + C120308) * C154226) *
                C154021) *
               C154393 -
           (((C152193 * C31817 - C115626 * C31816 - C152193 * C31818 +
              C115620 * C31819 + C152145 * C4910 - C152180 * C4906 -
              C152145 * C4911 + C154271 * C4915 + C152148 * C4260 -
              C152187 * C4255 - C152148 * C4261 + C154264 * C4267) *
                 C154226 +
             (C121633 + C121632 + C121631) * C70494) *
                C154021 +
            ((C152193 * C30002 - C115626 * C29999 - C152193 * C30003 +
              C115620 * C30005 + C152145 * C4912 - C152180 * C4907 -
              C152145 * C4913 + C154271 * C4916 + C152148 * C4258 -
              C152187 * C4254 - C152148 * C4259 + C154264 * C4266) *
                 C154226 +
             (C123436 + C123435 + C123434) * C70494) *
                C154373) *
               C154146) *
              C1685) *
         C154047) /
        (p * q * std::sqrt(p + q));
    d2ee[127] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C152148 * C144 - C152187 * C136 - C152148 * C145 + C154264 * C160 +
             C152145 * C600 - C152180 * C584 - C152145 * C601 + C154271 * C620 +
             C152193 * C602 - C115626 * C585 - C152193 * C603 +
             C115620 * C621) *
                C70494 +
            (C120300 + C120301 + C120302) * C154226) *
               C154373 +
           ((C115700 + C115701 + C115702) * C70494 + C120281 * C154226) *
               C154021) *
              C154082 * C1394 -
          ((C120282 * C154226 + C120283 * C70494) * C154021 +
           ((C120303 + C120304 + C120305) * C154226 +
            (C120302 + C120301 + C120300) * C70494) *
               C154373) *
              C154082 * C1395 +
          (((C120305 + C120304 + C120303) * C70494 +
            (C122136 + C122137 + C122138) * C154226) *
               C154373 +
           (C120287 * C70494 + (C120306 + C120307 + C120308) * C154226) *
               C154021) *
              C154082 * C1396 -
          (((C152193 * C28468 - C115626 * C28465 - C152193 * C28469 +
             C115620 * C28471 + C152145 * C5662 - C152180 * C5658 -
             C152145 * C5663 + C154271 * C5667 + C152148 * C3145 -
             C152187 * C3140 - C152148 * C3146 + C154264 * C3152) *
                C154226 +
            (C120308 + C120307 + C120306) * C70494) *
               C154021 +
           ((C152193 * C28466 - C115626 * C28464 - C152193 * C28467 +
             C115620 * C28470 + C152145 * C5664 - C152180 * C5659 -
             C152145 * C5665 + C154271 * C5668 + C152148 * C3143 -
             C152187 * C3139 - C152148 * C3144 + C154264 * C3151) *
                C154226 +
            (C122138 + C122137 + C122136) * C70494) *
               C154373) *
              C154082 * C1397) *
         C154047) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C152148 * C144 - C152187 * C136 - C152148 * C145 +
              C154264 * C160 + C152145 * C600 - C152180 * C584 -
              C152145 * C601 + C154271 * C620 + C152193 * C602 -
              C115626 * C585 - C152193 * C603 + C115620 * C621) *
                 C70494 +
             (C120300 + C120301 + C120302) * C154226) *
                C154373 +
            ((C115700 + C115701 + C115702) * C70494 + C120281 * C154226) *
                C154021) *
               C154082 * C1307 -
           ((C120282 * C154226 + C120283 * C70494) * C154021 +
            ((C120303 + C120304 + C120305) * C154226 +
             (C120302 + C120301 + C120300) * C70494) *
                C154373) *
               C154082 * C154118) *
              C1309 +
          (((C120281 * C70494 + C120287 * C154226) * C154373 +
            (C120911 * C70494 + (C116017 + C116018 + C116019) * C154226) *
                C154021) *
               C154082 * C154118 -
           ((C116553 * C154226 + (C115705 + C115704 + C115703) * C70494) *
                C154021 +
            (C120283 * C154226 + (C115702 + C115701 + C115700) * C70494) *
                C154373) *
               C154082 * C1307) *
              C1310 +
          (((C115714 * C70494 + C120911 * C154226) * C154373 +
            ((C115708 + C115707 + C115706) * C70494 +
             (C116561 + C116562 + C116563) * C154226) *
                C154021) *
               C154082 * C1307 -
           (((C152193 * C3451 - C115626 * C3444 - C152193 * C3452 +
              C115620 * C3456 + C152145 * C1979 - C152180 * C1973 -
              C152145 * C1980 + C154271 * C1988 + C152148 * C371 -
              C152187 * C351 - C152148 * C372 + C154264 * C387) *
                 C154226 +
             (C116563 + C116562 + C116561) * C70494) *
                C154021 +
            ((C116019 + C116018 + C116017) * C154226 + C116553 * C70494) *
                C154373) *
               C154082 * C154118) *
              C1311)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C152148 * C144 - C152187 * C136 - C152148 * C145 +
              C154264 * C160 + C152145 * C600 - C152180 * C584 -
              C152145 * C601 + C154271 * C620 + C152193 * C602 -
              C115626 * C585 - C152193 * C603 + C115620 * C621) *
                 C70494 +
             (C120300 + C120301 + C120302) * C154226) *
                C154373 +
            ((C115700 + C115701 + C115702) * C70494 + C120281 * C154226) *
                C154021) *
               C577 -
           ((C121614 * C154226 + (C116313 + C116314 + C116315) * C70494) *
                C154021 +
            ((C121628 + C121629 + C121630) * C154226 +
             (C152193 * C2337 - C115626 * C2328 - C152193 * C2338 +
              C115620 * C2343 + C152145 * C602 - C152180 * C585 -
              C152145 * C603 + C154271 * C621 + C152148 * C600 -
              C152187 * C584 - C152148 * C601 + C154264 * C620) *
                 C70494) *
                C154373) *
               C578 +
           (((C152148 * C602 - C152187 * C585 - C152148 * C603 +
              C154264 * C621 + C152145 * C2337 - C152180 * C2328 -
              C152145 * C2338 + C154271 * C2343 + C152193 * C7777 -
              C115626 * C7773 - C152193 * C7778 + C115620 * C7785) *
                 C70494 +
             (C122447 + C122448 + C122449) * C154226) *
                C154373 +
            ((C116316 + C116317 + C116318) * C70494 +
             (C120617 + C120618 + C120619) * C154226) *
                C154021) *
               C579) *
              C1307 +
          ((((C121630 + C121629 + C121628) * C70494 +
             (C123434 + C123435 + C123436) * C154226) *
                C154373 +
            (C121618 * C70494 + (C121631 + C121632 + C121633) * C154226) *
                C154021) *
               C578 -
           ((C120282 * C154226 + C120283 * C70494) * C154021 +
            ((C120303 + C120304 + C120305) * C154226 +
             (C120302 + C120301 + C120300) * C70494) *
                C154373) *
               C577 -
           (((C152193 * C31086 - C115626 * C31083 - C152193 * C31087 +
              C115620 * C31089 + C152145 * C6268 - C152180 * C6260 -
              C152145 * C6269 + C154271 * C6278 + C152148 * C3447 -
              C152187 * C3442 - C152148 * C3448 + C154264 * C3454) *
                 C154226 +
             (C120619 + C120618 + C120617) * C70494) *
                C154021 +
            ((C152193 * C31084 - C115626 * C31082 - C152193 * C31085 +
              C115620 * C31088 + C152145 * C6272 - C152180 * C6262 -
              C152145 * C6273 + C154271 * C6280 + C152148 * C3445 -
              C152187 * C3441 - C152148 * C3446 + C154264 * C3453) *
                 C154226 +
             (C122449 + C122448 + C122447) * C70494) *
                C154373) *
               C579) *
              C154118) *
         C154047) /
            (p * q * std::sqrt(p + q));
    d2ee[128] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C152148 * C144 - C152187 * C136 - C152148 * C145 +
               C154264 * C160 + C152145 * C600 - C152180 * C584 -
               C152145 * C601 + C154271 * C620 + C152193 * C602 -
               C115626 * C585 - C152193 * C603 + C115620 * C621) *
                  C70494 +
              (C120300 + C120301 + C120302) * C154226) *
                 C154373 +
             ((C115700 + C115701 + C115702) * C70494 + C120281 * C154226) *
                 C154021) *
                C154393 -
            ((C121614 * C154226 + (C116313 + C116314 + C116315) * C70494) *
                 C154021 +
             ((C121628 + C121629 + C121630) * C154226 +
              (C152193 * C2337 - C115626 * C2328 - C152193 * C2338 +
               C115620 * C2343 + C152145 * C602 - C152180 * C585 -
               C152145 * C603 + C154271 * C621 + C152148 * C600 -
               C152187 * C584 - C152148 * C601 + C154264 * C620) *
                  C70494) *
                 C154373) *
                C154146) *
               C1307 +
           ((((C121630 + C121629 + C121628) * C70494 +
              (C123434 + C123435 + C123436) * C154226) *
                 C154373 +
             (C121618 * C70494 + (C121631 + C121632 + C121633) * C154226) *
                 C154021) *
                C154146 -
            ((C120282 * C154226 + C120283 * C70494) * C154021 +
             ((C120303 + C120304 + C120305) * C154226 +
              (C120302 + C120301 + C120300) * C70494) *
                 C154373) *
                C154393) *
               C154118) *
              C154384 +
          (((((C116315 + C116314 + C116313) * C70494 + C121618 * C154226) *
                 C154373 +
             ((C116312 + C116311 + C116310) * C70494 +
              (C117135 + C117136 + C117137) * C154226) *
                 C154021) *
                C154146 -
            ((C116553 * C154226 + (C115705 + C115704 + C115703) * C70494) *
                 C154021 +
             (C120283 * C154226 + (C115702 + C115701 + C115700) * C70494) *
                 C154373) *
                C154393) *
               C1307 +
           (((C120281 * C70494 + C120287 * C154226) * C154373 +
             (C120911 * C70494 + (C116017 + C116018 + C116019) * C154226) *
                 C154021) *
                C154393 -
            (((C152193 * C6264 - C115626 * C6258 - C152193 * C6265 +
               C115620 * C6276 + C152145 * C3449 - C152180 * C3443 -
               C152145 * C3450 + C154271 * C3455 + C152148 * C1981 -
               C152187 * C1974 - C152148 * C1982 + C154264 * C1989) *
                  C154226 +
              (C117137 + C117136 + C117135) * C70494) *
                 C154021 +
             ((C121633 + C121632 + C121631) * C154226 + C121614 * C70494) *
                 C154373) *
                C154146) *
               C154118) *
              C154053)) /
        (p * q * std::sqrt(p + q));
    d2ee[129] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C152148 * C144 - C152187 * C136 - C152148 * C145 +
              C154264 * C160 + C152145 * C600 - C152180 * C584 -
              C152145 * C601 + C154271 * C620 + C152193 * C602 -
              C115626 * C585 - C152193 * C603 + C115620 * C621) *
                 C70494 +
             (C120300 + C120301 + C120302) * C154226) *
                C154373 +
            ((C115700 + C115701 + C115702) * C70494 + C120281 * C154226) *
                C154021) *
               C154082 * C1307 -
           ((C120282 * C154226 + C120283 * C70494) * C154021 +
            ((C120303 + C120304 + C120305) * C154226 +
             (C120302 + C120301 + C120300) * C70494) *
                C154373) *
               C154082 * C154118) *
              C1309 +
          (((C120281 * C70494 + C120287 * C154226) * C154373 +
            (C120911 * C70494 + (C116017 + C116018 + C116019) * C154226) *
                C154021) *
               C154082 * C154118 -
           ((C116553 * C154226 + (C115705 + C115704 + C115703) * C70494) *
                C154021 +
            (C120283 * C154226 + (C115702 + C115701 + C115700) * C70494) *
                C154373) *
               C154082 * C1307) *
              C1310 +
          (((C115714 * C70494 + C120911 * C154226) * C154373 +
            ((C115708 + C115707 + C115706) * C70494 +
             (C116561 + C116562 + C116563) * C154226) *
                C154021) *
               C154082 * C1307 -
           (((C152193 * C3451 - C115626 * C3444 - C152193 * C3452 +
              C115620 * C3456 + C152145 * C1979 - C152180 * C1973 -
              C152145 * C1980 + C154271 * C1988 + C152148 * C371 -
              C152187 * C351 - C152148 * C372 + C154264 * C387) *
                 C154226 +
             (C116563 + C116562 + C116561) * C70494) *
                C154021 +
            ((C116019 + C116018 + C116017) * C154226 + C116553 * C70494) *
                C154373) *
               C154082 * C154118) *
              C1311)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C152148 * C144 - C152187 * C136 - C152148 * C145 + C154264 * C160 +
             C152145 * C600 - C152180 * C584 - C152145 * C601 + C154271 * C620 +
             C152193 * C602 - C115626 * C585 - C152193 * C603 +
             C115620 * C621) *
                C70494 +
            (C120300 + C120301 + C120302) * C154226) *
               C154373 +
           ((C115700 + C115701 + C115702) * C70494 + C120281 * C154226) *
               C154021) *
              C154082 * C1394 -
          ((C120282 * C154226 + C120283 * C70494) * C154021 +
           ((C120303 + C120304 + C120305) * C154226 +
            (C120302 + C120301 + C120300) * C70494) *
               C154373) *
              C154082 * C1395 +
          (((C120305 + C120304 + C120303) * C70494 +
            (C122136 + C122137 + C122138) * C154226) *
               C154373 +
           (C120287 * C70494 + (C120306 + C120307 + C120308) * C154226) *
               C154021) *
              C154082 * C1396 -
          (((C152193 * C28468 - C115626 * C28465 - C152193 * C28469 +
             C115620 * C28471 + C152145 * C5662 - C152180 * C5658 -
             C152145 * C5663 + C154271 * C5667 + C152148 * C3145 -
             C152187 * C3140 - C152148 * C3146 + C154264 * C3152) *
                C154226 +
            (C120308 + C120307 + C120306) * C70494) *
               C154021 +
           ((C152193 * C28466 - C115626 * C28464 - C152193 * C28467 +
             C115620 * C28470 + C152145 * C5664 - C152180 * C5659 -
             C152145 * C5665 + C154271 * C5668 + C152148 * C3143 -
             C152187 * C3139 - C152148 * C3144 + C154264 * C3151) *
                C154226 +
            (C122138 + C122137 + C122136) * C70494) *
               C154373) *
              C154082 * C1397) *
         C154047) /
            (p * q * std::sqrt(p + q));
    d2ee[130] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C152148 * C144 - C152187 * C136 - C152148 * C145 +
               C154264 * C160 + C152145 * C600 - C152180 * C584 -
               C152145 * C601 + C154271 * C620 + C152193 * C602 -
               C115626 * C585 - C152193 * C603 + C115620 * C621) *
                  C70494 +
              (C120300 + C120301 + C120302) * C154226) *
                 C154373 +
             ((C115700 + C115701 + C115702) * C70494 + C120281 * C154226) *
                 C154021) *
                C2114 -
            ((C121614 * C154226 + (C116313 + C116314 + C116315) * C70494) *
                 C154021 +
             ((C121628 + C121629 + C121630) * C154226 +
              (C152193 * C2337 - C115626 * C2328 - C152193 * C2338 +
               C115620 * C2343 + C152145 * C602 - C152180 * C585 -
               C152145 * C603 + C154271 * C621 + C152148 * C600 -
               C152187 * C584 - C152148 * C601 + C154264 * C620) *
                  C70494) *
                 C154373) *
                C154146) *
               C154392 +
           ((((C121630 + C121629 + C121628) * C70494 +
              (C123434 + C123435 + C123436) * C154226) *
                 C154373 +
             (C121618 * C70494 + (C121631 + C121632 + C121633) * C154226) *
                 C154021) *
                C154146 -
            ((C120282 * C154226 + C120283 * C70494) * C154021 +
             ((C120303 + C120304 + C120305) * C154226 +
              (C120302 + C120301 + C120300) * C70494) *
                 C154373) *
                C2114) *
               C154118) *
              C154384 +
          (((((C116315 + C116314 + C116313) * C70494 + C121618 * C154226) *
                 C154373 +
             ((C116312 + C116311 + C116310) * C70494 +
              (C117135 + C117136 + C117137) * C154226) *
                 C154021) *
                C154146 -
            ((C116553 * C154226 + (C115705 + C115704 + C115703) * C70494) *
                 C154021 +
             (C120283 * C154226 + (C115702 + C115701 + C115700) * C70494) *
                 C154373) *
                C2114) *
               C154392 +
           (((C120281 * C70494 + C120287 * C154226) * C154373 +
             (C120911 * C70494 + (C116017 + C116018 + C116019) * C154226) *
                 C154021) *
                C2114 -
            (((C152193 * C6264 - C115626 * C6258 - C152193 * C6265 +
               C115620 * C6276 + C152145 * C3449 - C152180 * C3443 -
               C152145 * C3450 + C154271 * C3455 + C152148 * C1981 -
               C152187 * C1974 - C152148 * C1982 + C154264 * C1989) *
                  C154226 +
              (C117137 + C117136 + C117135) * C70494) *
                 C154021 +
             ((C121633 + C121632 + C121631) * C154226 + C121614 * C70494) *
                 C154373) *
                C154146) *
               C154118) *
              C154053)) /
        (p * q * std::sqrt(p + q));
    d2ee[131] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C152148 * C144 - C152187 * C136 - C152148 * C145 +
              C154264 * C160 + C152145 * C600 - C152180 * C584 -
              C152145 * C601 + C154271 * C620 + C152193 * C602 -
              C115626 * C585 - C152193 * C603 + C115620 * C621) *
                 C70494 +
             (C120300 + C120301 + C120302) * C154226) *
                C154373 +
            ((C115700 + C115701 + C115702) * C70494 + C120281 * C154226) *
                C154021) *
               C154465 -
           ((C121614 * C154226 + (C116313 + C116314 + C116315) * C70494) *
                C154021 +
            ((C121628 + C121629 + C121630) * C154226 +
             (C152193 * C2337 - C115626 * C2328 - C152193 * C2338 +
              C115620 * C2343 + C152145 * C602 - C152180 * C585 -
              C152145 * C603 + C154271 * C621 + C152148 * C600 -
              C152187 * C584 - C152148 * C601 + C154264 * C620) *
                 C70494) *
                C154373) *
               C154466 +
           (((C152148 * C602 - C152187 * C585 - C152148 * C603 +
              C154264 * C621 + C152145 * C2337 - C152180 * C2328 -
              C152145 * C2338 + C154271 * C2343 + C152193 * C7777 -
              C115626 * C7773 - C152193 * C7778 + C115620 * C7785) *
                 C70494 +
             (C122447 + C122448 + C122449) * C154226) *
                C154373 +
            ((C116316 + C116317 + C116318) * C70494 +
             (C120617 + C120618 + C120619) * C154226) *
                C154021) *
               C2630) *
              C154392 +
          ((((C121630 + C121629 + C121628) * C70494 +
             (C123434 + C123435 + C123436) * C154226) *
                C154373 +
            (C121618 * C70494 + (C121631 + C121632 + C121633) * C154226) *
                C154021) *
               C154466 -
           ((C120282 * C154226 + C120283 * C70494) * C154021 +
            ((C120303 + C120304 + C120305) * C154226 +
             (C120302 + C120301 + C120300) * C70494) *
                C154373) *
               C154465 -
           (((C152193 * C31086 - C115626 * C31083 - C152193 * C31087 +
              C115620 * C31089 + C152145 * C6268 - C152180 * C6260 -
              C152145 * C6269 + C154271 * C6278 + C152148 * C3447 -
              C152187 * C3442 - C152148 * C3448 + C154264 * C3454) *
                 C154226 +
             (C120619 + C120618 + C120617) * C70494) *
                C154021 +
            ((C152193 * C31084 - C115626 * C31082 - C152193 * C31085 +
              C115620 * C31088 + C152145 * C6272 - C152180 * C6262 -
              C152145 * C6273 + C154271 * C6280 + C152148 * C3445 -
              C152187 * C3441 - C152148 * C3446 + C154264 * C3453) *
                 C154226 +
             (C122449 + C122448 + C122447) * C70494) *
                C154373) *
               C2630) *
              C154118) *
         C154047) /
        (p * q * std::sqrt(p + q));
    d2ee[132] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C152148 * C144 - C152187 * C136 - C152148 * C145 +
              C154264 * C160 + C152145 * C600 - C152180 * C584 -
              C152145 * C601 + C154271 * C620 + C152193 * C602 -
              C115626 * C585 - C152193 * C603 + C115620 * C621) *
                 C70494 +
             (C120300 + C120301 + C120302) * C154226) *
                C154373 +
            ((C115700 + C115701 + C115702) * C70494 + C120281 * C154226) *
                C154021) *
               C2114 -
           ((C121614 * C154226 + (C116313 + C116314 + C116315) * C70494) *
                C154021 +
            ((C121628 + C121629 + C121630) * C154226 +
             (C152193 * C2337 - C115626 * C2328 - C152193 * C2338 +
              C115620 * C2343 + C152145 * C602 - C152180 * C585 -
              C152145 * C603 + C154271 * C621 + C152148 * C600 -
              C152187 * C584 - C152148 * C601 + C154264 * C620) *
                 C70494) *
                C154373) *
               C154146) *
              C338 +
          ((((C121630 + C121629 + C121628) * C70494 +
             (C123434 + C123435 + C123436) * C154226) *
                C154373 +
            (C121618 * C70494 + (C121631 + C121632 + C121633) * C154226) *
                C154021) *
               C154146 -
           ((C120282 * C154226 + C120283 * C70494) * C154021 +
            ((C120303 + C120304 + C120305) * C154226 +
             (C120302 + C120301 + C120300) * C70494) *
                C154373) *
               C2114) *
              C339 +
          ((((C120305 + C120304 + C120303) * C70494 +
             (C122136 + C122137 + C122138) * C154226) *
                C154373 +
            (C120287 * C70494 + (C120306 + C120307 + C120308) * C154226) *
                C154021) *
               C2114 -
           (((C152193 * C31817 - C115626 * C31816 - C152193 * C31818 +
              C115620 * C31819 + C152145 * C4910 - C152180 * C4906 -
              C152145 * C4911 + C154271 * C4915 + C152148 * C4260 -
              C152187 * C4255 - C152148 * C4261 + C154264 * C4267) *
                 C154226 +
             (C121633 + C121632 + C121631) * C70494) *
                C154021 +
            ((C152193 * C30002 - C115626 * C29999 - C152193 * C30003 +
              C115620 * C30005 + C152145 * C4912 - C152180 * C4907 -
              C152145 * C4913 + C154271 * C4916 + C152148 * C4258 -
              C152187 * C4254 - C152148 * C4259 + C154264 * C4266) *
                 C154226 +
             (C123436 + C123435 + C123434) * C70494) *
                C154373) *
               C154146) *
              C340) *
         C154047) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C152148 * C144 - C152187 * C136 - C152148 * C145 +
              C154264 * C160 + C152145 * C600 - C152180 * C584 -
              C152145 * C601 + C154271 * C620 + C152193 * C602 -
              C115626 * C585 - C152193 * C603 + C115620 * C621) *
                 C70494 +
             (C120300 + C120301 + C120302) * C154226) *
                C154373 +
            ((C115700 + C115701 + C115702) * C70494 + C120281 * C154226) *
                C154021) *
               C2114 -
           ((C121614 * C154226 + (C116313 + C116314 + C116315) * C70494) *
                C154021 +
            ((C121628 + C121629 + C121630) * C154226 +
             (C152193 * C2337 - C115626 * C2328 - C152193 * C2338 +
              C115620 * C2343 + C152145 * C602 - C152180 * C585 -
              C152145 * C603 + C154271 * C621 + C152148 * C600 -
              C152187 * C584 - C152148 * C601 + C154264 * C620) *
                 C70494) *
                C154373) *
               C154146) *
              C154066 * C1309 +
          ((((C116315 + C116314 + C116313) * C70494 + C121618 * C154226) *
                C154373 +
            ((C116312 + C116311 + C116310) * C70494 +
             (C117135 + C117136 + C117137) * C154226) *
                C154021) *
               C154146 -
           ((C116553 * C154226 + (C115705 + C115704 + C115703) * C70494) *
                C154021 +
            (C120283 * C154226 + (C115702 + C115701 + C115700) * C70494) *
                C154373) *
               C2114) *
              C154066 * C1310 +
          (((C115714 * C70494 + C120911 * C154226) * C154373 +
            ((C115708 + C115707 + C115706) * C70494 +
             (C116561 + C116562 + C116563) * C154226) *
                C154021) *
               C2114 -
           (((C152193 * C8648 - C115626 * C8647 - C152193 * C8649 +
              C115620 * C8650 + C152145 * C1548 - C152180 * C1542 -
              C152145 * C1549 + C154271 * C1557 + C152148 * C1141 -
              C152187 * C1132 - C152148 * C1142 + C154264 * C1150) *
                 C154226 +
             (C116805 + C116804 + C116803) * C70494) *
                C154021 +
            ((C117137 + C117136 + C117135) * C154226 + C116795 * C70494) *
                C154373) *
               C154146) *
              C154066 * C1311)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C152148 * C144 - C152187 * C136 - C152148 * C145 + C154264 * C160 +
             C152145 * C600 - C152180 * C584 - C152145 * C601 + C154271 * C620 +
             C152193 * C602 - C115626 * C585 - C152193 * C603 +
             C115620 * C621) *
                C70494 +
            (C120300 + C120301 + C120302) * C154226) *
               C154373 +
           ((C115700 + C115701 + C115702) * C70494 + C120281 * C154226) *
               C154021) *
              C2320 -
          ((C121614 * C154226 + (C116313 + C116314 + C116315) * C70494) *
               C154021 +
           ((C121628 + C121629 + C121630) * C154226 +
            (C152193 * C2337 - C115626 * C2328 - C152193 * C2338 +
             C115620 * C2343 + C152145 * C602 - C152180 * C585 -
             C152145 * C603 + C154271 * C621 + C152148 * C600 - C152187 * C584 -
             C152148 * C601 + C154264 * C620) *
                C70494) *
               C154373) *
              C2321 +
          (((C152148 * C602 - C152187 * C585 - C152148 * C603 + C154264 * C621 +
             C152145 * C2337 - C152180 * C2328 - C152145 * C2338 +
             C154271 * C2343 + C152193 * C7777 - C115626 * C7773 -
             C152193 * C7778 + C115620 * C7785) *
                C70494 +
            (C122447 + C122448 + C122449) * C154226) *
               C154373 +
           ((C116316 + C116317 + C116318) * C70494 +
            (C120617 + C120618 + C120619) * C154226) *
               C154021) *
              C2322 -
          (((C152193 * C56192 - C115626 * C56191 - C152193 * C56193 +
             C115620 * C56194 + C152145 * C9280 - C152180 * C9276 -
             C152145 * C9281 + C154271 * C9285 + C152148 * C6270 -
             C152187 * C6261 - C152148 * C6271 + C154264 * C6279) *
                C154226 +
            (C152193 * C10600 - C115626 * C10596 - C152193 * C10601 +
             C115620 * C10605 + C152145 * C7779 - C152180 * C7774 -
             C152145 * C7780 + C154271 * C7786 + C152148 * C2335 -
             C152187 * C2327 - C152148 * C2336 + C154264 * C2342) *
                C70494) *
               C154021 +
           ((C152193 * C33869 - C115626 * C33866 - C152193 * C33870 +
             C115620 * C33872 + C152145 * C9282 - C152180 * C9277 -
             C152145 * C9283 + C154271 * C9286 + C152148 * C6274 -
             C152187 * C6263 - C152148 * C6275 + C154264 * C6281) *
                C154226 +
            (C152193 * C10602 - C115626 * C10597 - C152193 * C10603 +
             C115620 * C10606 + C152145 * C7777 - C152180 * C7773 -
             C152145 * C7778 + C154271 * C7785 + C152148 * C2337 -
             C152187 * C2328 - C152148 * C2338 + C154264 * C2343) *
                C70494) *
               C154373) *
              C2323) *
         C154066 * C154047) /
            (p * q * std::sqrt(p + q));
    d2ee[133] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C152148 * C144 - C152187 * C136 - C152148 * C145 +
              C154264 * C160 + C152145 * C600 - C152180 * C584 -
              C152145 * C601 + C154271 * C620 + C152193 * C602 -
              C115626 * C585 - C152193 * C603 + C115620 * C621) *
                 C70494 +
             (C120300 + C120301 + C120302) * C154226) *
                C154373 +
            ((C115700 + C115701 + C115702) * C70494 + C120281 * C154226) *
                C154021) *
               C154465 -
           ((C121614 * C154226 + (C116313 + C116314 + C116315) * C70494) *
                C154021 +
            ((C121628 + C121629 + C121630) * C154226 +
             (C152193 * C2337 - C115626 * C2328 - C152193 * C2338 +
              C115620 * C2343 + C152145 * C602 - C152180 * C585 -
              C152145 * C603 + C154271 * C621 + C152148 * C600 -
              C152187 * C584 - C152148 * C601 + C154264 * C620) *
                 C70494) *
                C154373) *
               C154466 +
           (((C152148 * C602 - C152187 * C585 - C152148 * C603 +
              C154264 * C621 + C152145 * C2337 - C152180 * C2328 -
              C152145 * C2338 + C154271 * C2343 + C152193 * C7777 -
              C115626 * C7773 - C152193 * C7778 + C115620 * C7785) *
                 C70494 +
             (C122447 + C122448 + C122449) * C154226) *
                C154373 +
            ((C116316 + C116317 + C116318) * C70494 +
             (C120617 + C120618 + C120619) * C154226) *
                C154021) *
               C2630) *
              C154066 * C154384 +
          ((((C116315 + C116314 + C116313) * C70494 + C121618 * C154226) *
                C154373 +
            ((C116312 + C116311 + C116310) * C70494 +
             (C117135 + C117136 + C117137) * C154226) *
                C154021) *
               C154466 -
           ((C116553 * C154226 + (C115705 + C115704 + C115703) * C70494) *
                C154021 +
            (C120283 * C154226 + (C115702 + C115701 + C115700) * C70494) *
                C154373) *
               C154465 -
           (((C152193 * C9278 - C115626 * C9275 - C152193 * C9279 +
              C115620 * C9284 + C152145 * C6266 - C152180 * C6259 -
              C152145 * C6267 + C154271 * C6277 + C152148 * C1550 -
              C152187 * C1543 - C152148 * C1551 + C154264 * C1558) *
                 C154226 +
             (C116321 + C116320 + C116319) * C70494) *
                C154021 +
            ((C120619 + C120618 + C120617) * C154226 +
             (C116318 + C116317 + C116316) * C70494) *
                C154373) *
               C2630) *
              C154066 * C154053)) /
        (p * q * std::sqrt(p + q));
    d2ee[134] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C152148 * C144 - C152187 * C136 - C152148 * C145 +
              C154264 * C160 + C152145 * C600 - C152180 * C584 -
              C152145 * C601 + C154271 * C620 + C152193 * C602 -
              C115626 * C585 - C152193 * C603 + C115620 * C621) *
                 C70494 +
             (C120300 + C120301 + C120302) * C154226) *
                C154373 +
            ((C115700 + C115701 + C115702) * C70494 + C120281 * C154226) *
                C154021) *
               C2114 -
           ((C121614 * C154226 + (C116313 + C116314 + C116315) * C70494) *
                C154021 +
            ((C121628 + C121629 + C121630) * C154226 +
             (C152193 * C2337 - C115626 * C2328 - C152193 * C2338 +
              C115620 * C2343 + C152145 * C602 - C152180 * C585 -
              C152145 * C603 + C154271 * C621 + C152148 * C600 -
              C152187 * C584 - C152148 * C601 + C154264 * C620) *
                 C70494) *
                C154373) *
               C154146) *
              C154066 * C1309 +
          ((((C116315 + C116314 + C116313) * C70494 + C121618 * C154226) *
                C154373 +
            ((C116312 + C116311 + C116310) * C70494 +
             (C117135 + C117136 + C117137) * C154226) *
                C154021) *
               C154146 -
           ((C116553 * C154226 + (C115705 + C115704 + C115703) * C70494) *
                C154021 +
            (C120283 * C154226 + (C115702 + C115701 + C115700) * C70494) *
                C154373) *
               C2114) *
              C154066 * C1310 +
          (((C115714 * C70494 + C120911 * C154226) * C154373 +
            ((C115708 + C115707 + C115706) * C70494 +
             (C116561 + C116562 + C116563) * C154226) *
                C154021) *
               C2114 -
           (((C152193 * C8648 - C115626 * C8647 - C152193 * C8649 +
              C115620 * C8650 + C152145 * C1548 - C152180 * C1542 -
              C152145 * C1549 + C154271 * C1557 + C152148 * C1141 -
              C152187 * C1132 - C152148 * C1142 + C154264 * C1150) *
                 C154226 +
             (C116805 + C116804 + C116803) * C70494) *
                C154021 +
            ((C117137 + C117136 + C117135) * C154226 + C116795 * C70494) *
                C154373) *
               C154146) *
              C154066 * C1311)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C152148 * C144 - C152187 * C136 - C152148 * C145 +
              C154264 * C160 + C152145 * C600 - C152180 * C584 -
              C152145 * C601 + C154271 * C620 + C152193 * C602 -
              C115626 * C585 - C152193 * C603 + C115620 * C621) *
                 C70494 +
             (C120300 + C120301 + C120302) * C154226) *
                C154373 +
            ((C115700 + C115701 + C115702) * C70494 + C120281 * C154226) *
                C154021) *
               C2114 -
           ((C121614 * C154226 + (C116313 + C116314 + C116315) * C70494) *
                C154021 +
            ((C121628 + C121629 + C121630) * C154226 +
             (C152193 * C2337 - C115626 * C2328 - C152193 * C2338 +
              C115620 * C2343 + C152145 * C602 - C152180 * C585 -
              C152145 * C603 + C154271 * C621 + C152148 * C600 -
              C152187 * C584 - C152148 * C601 + C154264 * C620) *
                 C70494) *
                C154373) *
               C154146) *
              C338 +
          ((((C121630 + C121629 + C121628) * C70494 +
             (C123434 + C123435 + C123436) * C154226) *
                C154373 +
            (C121618 * C70494 + (C121631 + C121632 + C121633) * C154226) *
                C154021) *
               C154146 -
           ((C120282 * C154226 + C120283 * C70494) * C154021 +
            ((C120303 + C120304 + C120305) * C154226 +
             (C120302 + C120301 + C120300) * C70494) *
                C154373) *
               C2114) *
              C339 +
          ((((C120305 + C120304 + C120303) * C70494 +
             (C122136 + C122137 + C122138) * C154226) *
                C154373 +
            (C120287 * C70494 + (C120306 + C120307 + C120308) * C154226) *
                C154021) *
               C2114 -
           (((C152193 * C31817 - C115626 * C31816 - C152193 * C31818 +
              C115620 * C31819 + C152145 * C4910 - C152180 * C4906 -
              C152145 * C4911 + C154271 * C4915 + C152148 * C4260 -
              C152187 * C4255 - C152148 * C4261 + C154264 * C4267) *
                 C154226 +
             (C121633 + C121632 + C121631) * C70494) *
                C154021 +
            ((C152193 * C30002 - C115626 * C29999 - C152193 * C30003 +
              C115620 * C30005 + C152145 * C4912 - C152180 * C4907 -
              C152145 * C4913 + C154271 * C4916 + C152148 * C4258 -
              C152187 * C4254 - C152148 * C4259 + C154264 * C4266) *
                 C154226 +
             (C123436 + C123435 + C123434) * C70494) *
                C154373) *
               C154146) *
              C340) *
         C154047) /
            (p * q * std::sqrt(p + q));
    d2ee[135] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
              C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
                 C70494 +
             (C101527 + C101528) * C154226) *
                C154477 +
            ((C97340 + C97341) * C70494 + C101466 * C154226) * C154458 +
            C125375 * C154429) *
               C154082 * C154392 -
           (C126249 * C154429 +
            (C101476 * C154226 + C101477 * C70494) * C154458 +
            ((C101530 + C101529) * C154226 + (C101528 + C101527) * C70494) *
                C154477) *
               C154082 * C154118) *
              C154461 +
          (((C101466 * C70494 + C101467 * C154226) * C154477 +
            (C102164 * C70494 + C102165 * C154226) * C154458 +
            (C111310 * C70494 + (C97634 + C97635) * C154226) * C154429) *
               C154082 * C154118 -
           (C125376 * C154429 +
            (C98109 * C154226 + (C97343 + C97342) * C70494) * C154458 +
            (C101477 * C154226 + (C97341 + C97340) * C70494) * C154477) *
               C154082 * C154392) *
              C154462 +
          ((C125375 * C154477 +
            (C97351 * C70494 + C111310 * C154226) * C154458 +
            ((C97347 + C97346) * C70494 + (C98124 + C98125) * C154226) *
                C154429) *
               C154082 * C154392 -
           (((C97277 * C1977 - C97278 * C1972 - C97277 * C1978 +
              C154268 * C1987 + C97275 * C373 - C97276 * C352 - C97275 * C374 +
              C97273 * C388) *
                 C154226 +
             (C98125 + C98124) * C70494) *
                C154429 +
            ((C97635 + C97634) * C154226 + C98108 * C70494) * C154458 +
            C126249 * C154477) *
               C154082 * C154118) *
              C818)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
             C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
                C154487 +
            (C101527 + C101528) * C154483 + C101539 * C154473 +
            C130733 * C154415) *
               C154011 * C154082 * C154392 -
           ((C103400 + C103399) * C154415 + C103386 * C154473 +
            (C101530 + C101529) * C154483 + (C101528 + C101527) * C154487) *
               C154011 * C154082 * C154118) *
              C154461 +
          ((C101466 * C154487 + C101467 * C154483 + C101541 * C154473 +
            (C101535 + C101536) * C154415) *
               C154011 * C154082 * C154118 -
           (C101540 * C154415 + C101476 * C154473 + C101477 * C154483 +
            (C97341 + C97340) * C154487) *
               C154011 * C154082 * C154392) *
              C154462 +
          ((C97350 * C154487 + C102164 * C154483 + C102165 * C154473 +
            (C101537 + C101538) * C154415) *
               C154011 * C154082 * C154392 -
           ((C97277 * C5660 - C97278 * C5657 - C97277 * C5661 +
             C154268 * C5666 + C97275 * C3147 - C97276 * C3141 -
             C97275 * C3148 + C97273 * C3153) *
                C154415 +
            (C101538 + C101537) * C154473 + C101502 * C154483 +
            C98109 * C154487) *
               C154011 * C154082 * C154118) *
              C818)) /
            (p * q * std::sqrt(p + q));
    d2ee[136] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
               C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
                  C70494 +
              (C101527 + C101528) * C154226) *
                 C154477 +
             ((C97340 + C97341) * C70494 + C101466 * C154226) * C154458 +
             C125375 * C154429) *
                C154393 -
            (C126542 * C154429 +
             (C102857 * C154226 + (C97906 + C97907) * C70494) * C154458 +
             ((C102898 + C102899) * C154226 +
              (C97277 * C602 - C97278 * C585 - C97277 * C603 + C154268 * C621 +
               C97275 * C600 - C97276 * C584 - C97275 * C601 + C97273 * C620) *
                  C70494) *
                 C154477) *
                C154146) *
               C154392 +
           ((((C102899 + C102898) * C70494 + (C102897 + C102896) * C154226) *
                 C154477 +
             (C102874 * C70494 + C102875 * C154226) * C154458 +
             (C111992 * C70494 + (C102468 + C102469) * C154226) * C154429) *
                C154146 -
            (C126249 * C154429 +
             (C101476 * C154226 + C101477 * C70494) * C154458 +
             ((C101530 + C101529) * C154226 + (C101528 + C101527) * C70494) *
                 C154477) *
                C154393) *
               C154118) *
              C341 +
          (((((C97907 + C97906) * C70494 + C102874 * C154226) * C154477 +
             ((C97905 + C97904) * C70494 + C111992 * C154226) * C154458 +
             ((C97903 + C97902) * C70494 + (C98636 + C98637) * C154226) *
                 C154429) *
                C154146 -
            (C125376 * C154429 +
             (C98109 * C154226 + (C97343 + C97342) * C70494) * C154458 +
             (C101477 * C154226 + (C97341 + C97340) * C70494) * C154477) *
                C154393) *
               C154392 +
           (((C101466 * C70494 + C101467 * C154226) * C154477 +
             (C102164 * C70494 + C102165 * C154226) * C154458 +
             (C111310 * C70494 + (C97634 + C97635) * C154226) * C154429) *
                C154393 -
            (((C97277 * C3451 - C97278 * C3444 - C97277 * C3452 +
               C154268 * C3456 + C97275 * C1979 - C97276 * C1973 -
               C97275 * C1980 + C97273 * C1988) *
                  C154226 +
              (C98637 + C98636) * C70494) *
                 C154429 +
             ((C102469 + C102468) * C154226 + C111602 * C70494) * C154458 +
             (C102856 * C154226 + C102857 * C70494) * C154477) *
                C154146) *
               C154118) *
              C154053)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
              C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
                 C154487 +
             (C101527 + C101528) * C154483 + C101539 * C154473 +
             C130733 * C154415) *
                C154011 * C154393 -
            ((C104699 + C104698) * C154415 + C104685 * C154473 +
             (C102898 + C102899) * C154483 +
             (C97277 * C602 - C97278 * C585 - C97277 * C603 + C154268 * C621 +
              C97275 * C600 - C97276 * C584 - C97275 * C601 + C97273 * C620) *
                 C154487) *
                C154011 * C154146) *
               C154392 +
           (((C102899 + C102898) * C154487 + (C102897 + C102896) * C154483 +
             (C104698 + C104699) * C154473 +
             (C97275 * C5664 - C97276 * C5659 - C97275 * C5665 +
              C97273 * C5668 + C97277 * C28466 - C97278 * C28464 -
              C97277 * C28467 + C154268 * C28470) *
                 C154415) *
                C154011 * C154146 -
            ((C103400 + C103399) * C154415 + C103386 * C154473 +
             (C101530 + C101529) * C154483 + (C101528 + C101527) * C154487) *
                C154011 * C154393) *
               C154118) *
              C341 +
          ((((C97907 + C97906) * C154487 + C102874 * C154483 +
             C102875 * C154473 + (C102900 + C102901) * C154415) *
                C154011 * C154146 -
            (C101540 * C154415 + C101476 * C154473 + C101477 * C154483 +
             (C97341 + C97340) * C154487) *
                C154011 * C154393) *
               C154392 +
           ((C101466 * C154487 + C101467 * C154483 + C101541 * C154473 +
             (C101535 + C101536) * C154415) *
                C154011 * C154393 -
            ((C97277 * C28468 - C97278 * C28465 - C97277 * C28469 +
              C154268 * C28471 + C97275 * C5662 - C97276 * C5658 -
              C97275 * C5663 + C97273 * C5667) *
                 C154415 +
             (C102901 + C102900) * C154473 + C102856 * C154483 +
             C102857 * C154487) *
                C154011 * C154146) *
               C154118) *
              C154053)) /
            (p * q * std::sqrt(p + q));
    d2ee[137] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
              C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
                 C70494 +
             (C101527 + C101528) * C154226) *
                C154477 +
            ((C97340 + C97341) * C70494 + C101466 * C154226) * C154458 +
            C125375 * C154429) *
               C154082 * C338 -
           ((C101502 * C154226 + C98109 * C70494) * C154429 +
            (C101476 * C154226 + C101477 * C70494) * C154458 +
            ((C101530 + C101529) * C154226 + (C101528 + C101527) * C70494) *
                C154477) *
               C154082 * C339 +
           ((C101539 * C70494 + (C101534 + C101533) * C154226) * C154477 +
            (C101467 * C70494 + C101541 * C154226) * C154458 +
            (C102165 * C70494 + (C101537 + C101538) * C154226) * C154429) *
               C154082 * C340) *
              C341 +
          (((C101466 * C70494 + C101467 * C154226) * C154477 +
            (C102164 * C70494 + C102165 * C154226) * C154458 +
            (C111310 * C70494 + (C97634 + C97635) * C154226) * C154429) *
               C154082 * C339 -
           (C125376 * C154429 +
            (C98109 * C154226 + (C97343 + C97342) * C70494) * C154458 +
            (C101477 * C154226 + (C97341 + C97340) * C70494) * C154477) *
               C154082 * C338 -
           (((C97277 * C4264 - C97278 * C4257 - C97277 * C4265 +
              C154268 * C4269 + C97275 * C1406 - C97276 * C1400 -
              C97275 * C1407 + C97273 * C1415) *
                 C154226 +
             (C97635 + C97634) * C70494) *
                C154429 +
            ((C101538 + C101537) * C154226 + C101502 * C70494) * C154458 +
            (C101540 * C154226 + C101476 * C70494) * C154477) *
               C154082 * C340) *
              C154053)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
             C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
                C70494 +
            (C101527 + C101528) * C154226) *
               C154477 +
           ((C97340 + C97341) * C70494 + C101466 * C154226) * C154458 +
           C125375 * C154429) *
              C154082 * C154066 * C130 -
          (C125376 * C154429 +
           (C98109 * C154226 + (C97343 + C97342) * C70494) * C154458 +
           (C101477 * C154226 + (C97341 + C97340) * C70494) * C154477) *
              C154082 * C154066 * C131 +
          (C125375 * C154477 + (C97351 * C70494 + C111310 * C154226) * C154458 +
           ((C97347 + C97346) * C70494 + (C98124 + C98125) * C154226) *
               C154429) *
              C154082 * C154066 * C132 -
          (((C97277 * C1145 - C97278 * C1134 - C97277 * C1146 +
             C154268 * C1152 + C97275 * C375 - C97276 * C353 - C97275 * C376 +
             C97273 * C389) *
                C154226 +
            (C97349 + C97348) * C70494) *
               C154429 +
           ((C98125 + C98124) * C154226 + C97352 * C70494) * C154458 +
           C125376 * C154477) *
              C154082 * C154066 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
              C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
                 C70494 +
             (C101527 + C101528) * C154226) *
                C154477 +
            ((C97340 + C97341) * C70494 + C101466 * C154226) * C154458 +
            C125375 * C154429) *
               C577 -
           ((C111602 * C154226 + C98321 * C70494) * C154429 +
            (C102857 * C154226 + (C97906 + C97907) * C70494) * C154458 +
            ((C102898 + C102899) * C154226 +
             (C97277 * C602 - C97278 * C585 - C97277 * C603 + C154268 * C621 +
              C97275 * C600 - C97276 * C584 - C97275 * C601 + C97273 * C620) *
                 C70494) *
                C154477) *
               C578 +
           (((C97275 * C602 - C97276 * C585 - C97275 * C603 + C97273 * C621 +
              C97277 * C2337 - C97278 * C2328 - C97277 * C2338 +
              C154268 * C2343) *
                 C70494 +
             (C103715 + C103716) * C154226) *
                C154477 +
            ((C97908 + C97909) * C70494 + (C101870 + C101871) * C154226) *
                C154458 +
            ((C97910 + C97911) * C70494 + (C111016 + C111017) * C154226) *
                C154429) *
               C579) *
              C154066 * C341 +
          ((((C97907 + C97906) * C70494 + C102874 * C154226) * C154477 +
            ((C97905 + C97904) * C70494 + C111992 * C154226) * C154458 +
            ((C97903 + C97902) * C70494 + (C98636 + C98637) * C154226) *
                C154429) *
               C578 -
           (C125376 * C154429 +
            (C98109 * C154226 + (C97343 + C97342) * C70494) * C154458 +
            (C101477 * C154226 + (C97341 + C97340) * C70494) * C154477) *
               C577 -
           (((C97277 * C8648 - C97278 * C8647 - C97277 * C8649 +
              C154268 * C8650 + C97275 * C1548 - C97276 * C1542 -
              C97275 * C1549 + C97273 * C1557) *
                 C154226 +
             (C97913 + C97912) * C70494) *
                C154429 +
            ((C111017 + C111016) * C154226 + (C97911 + C97910) * C70494) *
                C154458 +
            ((C101871 + C101870) * C154226 + (C97909 + C97908) * C70494) *
                C154477) *
               C579) *
              C154066 * C154053)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
            C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
               C154487 +
           (C101527 + C101528) * C154483 + C101539 * C154473 +
           (C101534 + C101533) * C154415) *
              C154011 * C154082 * C154066 * C130 -
          (C101540 * C154415 + C101476 * C154473 + C101477 * C154483 +
           (C97341 + C97340) * C154487) *
              C154011 * C154082 * C154066 * C131 +
          (C97350 * C154487 + C102164 * C154483 + C102165 * C154473 +
           (C101537 + C101538) * C154415) *
              C154011 * C154082 * C154066 * C132 -
          ((C97277 * C4264 - C97278 * C4257 - C97277 * C4265 + C154268 * C4269 +
            C97275 * C1406 - C97276 * C1400 - C97275 * C1407 + C97273 * C1415) *
               C154415 +
           (C97635 + C97634) * C154473 + C98108 * C154483 + C97353 * C154487) *
              C154011 * C154082 * C154066 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
             C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
                C154487 +
            (C101527 + C101528) * C154483 + C101539 * C154473 +
            C130733 * C154415) *
               C154011 * C154082 * C338 -
           ((C103400 + C103399) * C154415 + C103386 * C154473 +
            (C101530 + C101529) * C154483 + (C101528 + C101527) * C154487) *
               C154011 * C154082 * C339 +
           (C101539 * C154487 + C130733 * C154483 +
            (C103399 + C103400) * C154473 +
            (C97275 * C4675 - C97276 * C4670 - C97275 * C4676 + C97273 * C4679 +
             C97277 * C28880 - C97278 * C28878 - C97277 * C28881 +
             C154268 * C28884) *
                C154415) *
               C154011 * C154082 * C340) *
              C341 +
          ((C101466 * C154487 + C101467 * C154483 + C101541 * C154473 +
            (C101535 + C101536) * C154415) *
               C154011 * C154082 * C339 -
           (C101540 * C154415 + C101476 * C154473 + C101477 * C154483 +
            (C97341 + C97340) * C154487) *
               C154011 * C154082 * C338 -
           ((C97277 * C28882 - C97278 * C28879 - C97277 * C28883 +
             C154268 * C28885 + C97275 * C4673 - C97276 * C4669 -
             C97275 * C4674 + C97273 * C4678) *
                C154415 +
            (C101536 + C101535) * C154473 + C101540 * C154483 +
            C101476 * C154487) *
               C154011 * C154082 * C340) *
              C154053)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
             C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
                C154487 +
            (C101527 + C101528) * C154483 + C101539 * C154473 +
            C130733 * C154415) *
               C154011 * C577 -
           ((C104699 + C104698) * C154415 + C104685 * C154473 +
            (C102898 + C102899) * C154483 +
            (C97277 * C602 - C97278 * C585 - C97277 * C603 + C154268 * C621 +
             C97275 * C600 - C97276 * C584 - C97275 * C601 + C97273 * C620) *
                C154487) *
               C154011 * C578 +
           ((C97275 * C602 - C97276 * C585 - C97275 * C603 + C97273 * C621 +
             C97277 * C2337 - C97278 * C2328 - C97277 * C2338 +
             C154268 * C2343) *
                C154487 +
            (C103715 + C103716) * C154483 + (C103717 + C103718) * C154473 +
            (C97275 * C4912 - C97276 * C4907 - C97275 * C4913 + C97273 * C4916 +
             C97277 * C30002 - C97278 * C29999 - C97277 * C30003 +
             C154268 * C30005) *
                C154415) *
               C154011 * C579) *
              C154066 * C341 +
          (((C97907 + C97906) * C154487 + C102874 * C154483 +
            C102875 * C154473 + (C102900 + C102901) * C154415) *
               C154011 * C578 -
           (C101540 * C154415 + C101476 * C154473 + C101477 * C154483 +
            (C97341 + C97340) * C154487) *
               C154011 * C577 -
           ((C97277 * C31817 - C97278 * C31816 - C97277 * C31818 +
             C154268 * C31819 + C97275 * C4910 - C97276 * C4906 -
             C97275 * C4911 + C97273 * C4915) *
                C154415 +
            (C101873 + C101872) * C154473 + (C101871 + C101870) * C154483 +
            (C97909 + C97908) * C154487) *
               C154011 * C579) *
              C154066 * C154053)) /
            (p * q * std::sqrt(p + q));
    d2ee[138] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
              C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
                 C70494 +
             (C101527 + C101528) * C154226) *
                C154477 +
            ((C97340 + C97341) * C70494 + C101466 * C154226) * C154458 +
            C125375 * C154429) *
               C154393 -
           (C126542 * C154429 +
            (C102857 * C154226 + (C97906 + C97907) * C70494) * C154458 +
            ((C102898 + C102899) * C154226 +
             (C97277 * C602 - C97278 * C585 - C97277 * C603 + C154268 * C621 +
              C97275 * C600 - C97276 * C584 - C97275 * C601 + C97273 * C620) *
                 C70494) *
                C154477) *
               C154146) *
              C154066 * C154461 +
          ((((C97907 + C97906) * C70494 + C102874 * C154226) * C154477 +
            ((C97905 + C97904) * C70494 + C111992 * C154226) * C154458 +
            ((C97903 + C97902) * C70494 + (C98636 + C98637) * C154226) *
                C154429) *
               C154146 -
           (C125376 * C154429 +
            (C98109 * C154226 + (C97343 + C97342) * C70494) * C154458 +
            (C101477 * C154226 + (C97341 + C97340) * C70494) * C154477) *
               C154393) *
              C154066 * C154462 +
          ((C125375 * C154477 +
            (C97351 * C70494 + C111310 * C154226) * C154458 +
            ((C97347 + C97346) * C70494 + (C98124 + C98125) * C154226) *
                C154429) *
               C154393 -
           (((C97277 * C1546 - C97278 * C1541 - C97277 * C1547 +
              C154268 * C1556 + C97275 * C1143 - C97276 * C1133 -
              C97275 * C1144 + C97273 * C1151) *
                 C154226 +
             (C98337 + C98336) * C70494) *
                C154429 +
            ((C98637 + C98636) * C154226 + C98320 * C70494) * C154458 +
            C126542 * C154477) *
               C154146) *
              C154066 * C818)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
             C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
                C154487 +
            (C101527 + C101528) * C154483 + C101539 * C154473 +
            C130733 * C154415) *
               C154011 * C154393 -
           ((C104699 + C104698) * C154415 + C104685 * C154473 +
            (C102898 + C102899) * C154483 +
            (C97277 * C602 - C97278 * C585 - C97277 * C603 + C154268 * C621 +
             C97275 * C600 - C97276 * C584 - C97275 * C601 + C97273 * C620) *
                C154487) *
               C154011 * C154146) *
              C154066 * C154461 +
          (((C97907 + C97906) * C154487 + C102874 * C154483 +
            C102875 * C154473 + (C102900 + C102901) * C154415) *
               C154011 * C154146 -
           (C101540 * C154415 + C101476 * C154473 + C101477 * C154483 +
            (C97341 + C97340) * C154487) *
               C154011 * C154393) *
              C154066 * C154462 +
          ((C97350 * C154487 + C102164 * C154483 + C102165 * C154473 +
            (C101537 + C101538) * C154415) *
               C154011 * C154393 -
           ((C97277 * C4908 - C97278 * C4905 - C97277 * C4909 +
             C154268 * C4914 + C97275 * C4262 - C97276 * C4256 -
             C97275 * C4263 + C97273 * C4268) *
                C154415 +
            (C102469 + C102468) * C154473 + C111602 * C154483 +
            C98321 * C154487) *
               C154011 * C154146) *
              C154066 * C818)) /
            (p * q * std::sqrt(p + q));
    d2ee[139] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
             C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
                C70494 +
            (C101527 + C101528) * C154226) *
               C154477 +
           ((C97340 + C97341) * C70494 + C101466 * C154226) * C154458 +
           C125375 * C154429) *
              C154082 * C154066 * C130 -
          (C125376 * C154429 +
           (C98109 * C154226 + (C97343 + C97342) * C70494) * C154458 +
           (C101477 * C154226 + (C97341 + C97340) * C70494) * C154477) *
              C154082 * C154066 * C131 +
          (C125375 * C154477 + (C97351 * C70494 + C111310 * C154226) * C154458 +
           ((C97347 + C97346) * C70494 + (C98124 + C98125) * C154226) *
               C154429) *
              C154082 * C154066 * C132 -
          (((C97277 * C1145 - C97278 * C1134 - C97277 * C1146 +
             C154268 * C1152 + C97275 * C375 - C97276 * C353 - C97275 * C376 +
             C97273 * C389) *
                C154226 +
            (C97349 + C97348) * C70494) *
               C154429 +
           ((C98125 + C98124) * C154226 + C97352 * C70494) * C154458 +
           C125376 * C154477) *
              C154082 * C154066 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
              C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
                 C70494 +
             (C101527 + C101528) * C154226) *
                C154477 +
            ((C97340 + C97341) * C70494 + C101466 * C154226) * C154458 +
            C125375 * C154429) *
               C154082 * C338 -
           ((C101502 * C154226 + C98109 * C70494) * C154429 +
            (C101476 * C154226 + C101477 * C70494) * C154458 +
            ((C101530 + C101529) * C154226 + (C101528 + C101527) * C70494) *
                C154477) *
               C154082 * C339 +
           ((C101539 * C70494 + (C101534 + C101533) * C154226) * C154477 +
            (C101467 * C70494 + C101541 * C154226) * C154458 +
            (C102165 * C70494 + (C101537 + C101538) * C154226) * C154429) *
               C154082 * C340) *
              C341 +
          (((C101466 * C70494 + C101467 * C154226) * C154477 +
            (C102164 * C70494 + C102165 * C154226) * C154458 +
            (C111310 * C70494 + (C97634 + C97635) * C154226) * C154429) *
               C154082 * C339 -
           (C125376 * C154429 +
            (C98109 * C154226 + (C97343 + C97342) * C70494) * C154458 +
            (C101477 * C154226 + (C97341 + C97340) * C70494) * C154477) *
               C154082 * C338 -
           (((C97277 * C4264 - C97278 * C4257 - C97277 * C4265 +
              C154268 * C4269 + C97275 * C1406 - C97276 * C1400 -
              C97275 * C1407 + C97273 * C1415) *
                 C154226 +
             (C97635 + C97634) * C70494) *
                C154429 +
            ((C101538 + C101537) * C154226 + C101502 * C70494) * C154458 +
            (C101540 * C154226 + C101476 * C70494) * C154477) *
               C154082 * C340) *
              C154053)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
            C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
               C154487 +
           (C101527 + C101528) * C154483 + C101539 * C154473 +
           (C101534 + C101533) * C154415) *
              C154011 * C154082 * C154066 * C130 -
          (C101540 * C154415 + C101476 * C154473 + C101477 * C154483 +
           (C97341 + C97340) * C154487) *
              C154011 * C154082 * C154066 * C131 +
          (C97350 * C154487 + C102164 * C154483 + C102165 * C154473 +
           (C101537 + C101538) * C154415) *
              C154011 * C154082 * C154066 * C132 -
          ((C97277 * C4264 - C97278 * C4257 - C97277 * C4265 + C154268 * C4269 +
            C97275 * C1406 - C97276 * C1400 - C97275 * C1407 + C97273 * C1415) *
               C154415 +
           (C97635 + C97634) * C154473 + C98108 * C154483 + C97353 * C154487) *
              C154011 * C154082 * C154066 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
             C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
                C154487 +
            (C101527 + C101528) * C154483 + C101539 * C154473 +
            C130733 * C154415) *
               C154011 * C154082 * C338 -
           ((C103400 + C103399) * C154415 + C103386 * C154473 +
            (C101530 + C101529) * C154483 + (C101528 + C101527) * C154487) *
               C154011 * C154082 * C339 +
           (C101539 * C154487 + C130733 * C154483 +
            (C103399 + C103400) * C154473 +
            (C97275 * C4675 - C97276 * C4670 - C97275 * C4676 + C97273 * C4679 +
             C97277 * C28880 - C97278 * C28878 - C97277 * C28881 +
             C154268 * C28884) *
                C154415) *
               C154011 * C154082 * C340) *
              C341 +
          ((C101466 * C154487 + C101467 * C154483 + C101541 * C154473 +
            (C101535 + C101536) * C154415) *
               C154011 * C154082 * C339 -
           (C101540 * C154415 + C101476 * C154473 + C101477 * C154483 +
            (C97341 + C97340) * C154487) *
               C154011 * C154082 * C338 -
           ((C97277 * C28882 - C97278 * C28879 - C97277 * C28883 +
             C154268 * C28885 + C97275 * C4673 - C97276 * C4669 -
             C97275 * C4674 + C97273 * C4678) *
                C154415 +
            (C101536 + C101535) * C154473 + C101540 * C154483 +
            C101476 * C154487) *
               C154011 * C154082 * C340) *
              C154053)) /
            (p * q * std::sqrt(p + q));
    d2ee[140] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
              C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
                 C70494 +
             (C101527 + C101528) * C154226) *
                C154477 +
            ((C97340 + C97341) * C70494 + C101466 * C154226) * C154458 +
            C125375 * C154429) *
               C154082 * C154463 -
           (C126249 * C154429 +
            (C101476 * C154226 + C101477 * C70494) * C154458 +
            ((C101530 + C101529) * C154226 + (C101528 + C101527) * C70494) *
                C154477) *
               C154082 * C154464 +
           ((C101539 * C70494 + (C101534 + C101533) * C154226) * C154477 +
            (C101467 * C70494 + C101541 * C154226) * C154458 +
            (C102165 * C70494 + (C101537 + C101538) * C154226) * C154429) *
               C154082 * C1685) *
              C154384 +
          (((C101466 * C70494 + C101467 * C154226) * C154477 +
            (C102164 * C70494 + C102165 * C154226) * C154458 +
            (C111310 * C70494 + (C97634 + C97635) * C154226) * C154429) *
               C154082 * C154464 -
           (C125376 * C154429 +
            (C98109 * C154226 + (C97343 + C97342) * C70494) * C154458 +
            (C101477 * C154226 + (C97341 + C97340) * C70494) * C154477) *
               C154082 * C154463 -
           (((C97277 * C4264 - C97278 * C4257 - C97277 * C4265 +
              C154268 * C4269 + C97275 * C1406 - C97276 * C1400 -
              C97275 * C1407 + C97273 * C1415) *
                 C154226 +
             (C97635 + C97634) * C70494) *
                C154429 +
            ((C101538 + C101537) * C154226 + C101502 * C70494) * C154458 +
            (C101540 * C154226 + C101476 * C70494) * C154477) *
               C154082 * C1685) *
              C154053)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
             C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
                C154487 +
            (C101527 + C101528) * C154483 + C101539 * C154473 +
            C130733 * C154415) *
               C154011 * C154082 * C154463 -
           (C131898 * C154415 + C103386 * C154473 +
            (C101530 + C101529) * C154483 + (C101528 + C101527) * C154487) *
               C154011 * C154082 * C154464 +
           (C101539 * C154487 + C130733 * C154483 +
            (C103399 + C103400) * C154473 + (C131911 + C131912) * C154415) *
               C154011 * C154082 * C1685) *
              C154384 +
          ((C101466 * C154487 + C101467 * C154483 + C101541 * C154473 +
            (C101535 + C101536) * C154415) *
               C154011 * C154082 * C154464 -
           (C101540 * C154415 + C101476 * C154473 + C101477 * C154483 +
            (C97341 + C97340) * C154487) *
               C154011 * C154082 * C154463 -
           ((C97277 * C28882 - C97278 * C28879 - C97277 * C28883 +
             C154268 * C28885 + C97275 * C4673 - C97276 * C4669 -
             C97275 * C4674 + C97273 * C4678) *
                C154415 +
            (C101536 + C101535) * C154473 + C101540 * C154483 +
            C101476 * C154487) *
               C154011 * C154082 * C1685) *
              C154053)) /
            (p * q * std::sqrt(p + q));
    d2ee[141] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
              C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
                 C70494 +
             (C101527 + C101528) * C154226) *
                C154477 +
            ((C97340 + C97341) * C70494 + C101466 * C154226) * C154458 +
            C125375 * C154429) *
               C154393 -
           (C126542 * C154429 +
            (C102857 * C154226 + (C97906 + C97907) * C70494) * C154458 +
            ((C102898 + C102899) * C154226 +
             (C97277 * C602 - C97278 * C585 - C97277 * C603 + C154268 * C621 +
              C97275 * C600 - C97276 * C584 - C97275 * C601 + C97273 * C620) *
                 C70494) *
                C154477) *
               C154146) *
              C154463 +
          ((((C102899 + C102898) * C70494 + (C102897 + C102896) * C154226) *
                C154477 +
            (C102874 * C70494 + C102875 * C154226) * C154458 +
            (C111992 * C70494 + (C102468 + C102469) * C154226) * C154429) *
               C154146 -
           (C126249 * C154429 +
            (C101476 * C154226 + C101477 * C70494) * C154458 +
            ((C101530 + C101529) * C154226 + (C101528 + C101527) * C70494) *
                C154477) *
               C154393) *
              C154464 +
          (((C101539 * C70494 + (C101534 + C101533) * C154226) * C154477 +
            (C101467 * C70494 + C101541 * C154226) * C154458 +
            (C102165 * C70494 + (C101537 + C101538) * C154226) * C154429) *
               C154393 -
           (((C97277 * C4908 - C97278 * C4905 - C97277 * C4909 +
              C154268 * C4914 + C97275 * C4262 - C97276 * C4256 -
              C97275 * C4263 + C97273 * C4268) *
                 C154226 +
             (C102469 + C102468) * C70494) *
                C154429 +
            ((C102901 + C102900) * C154226 + C102856 * C70494) * C154458 +
            ((C104699 + C104698) * C154226 + C104685 * C70494) * C154477) *
               C154146) *
              C1685) *
         C154047) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
             C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
                C154487 +
            (C101527 + C101528) * C154483 + C101539 * C154473 +
            C130733 * C154415) *
               C154011 * C154393 -
           (C132767 * C154415 + C104685 * C154473 +
            (C102898 + C102899) * C154483 +
            (C97277 * C602 - C97278 * C585 - C97277 * C603 + C154268 * C621 +
             C97275 * C600 - C97276 * C584 - C97275 * C601 + C97273 * C620) *
                C154487) *
               C154011 * C154146) *
              C154463 +
          (((C102899 + C102898) * C154487 + (C102897 + C102896) * C154483 +
            (C104698 + C104699) * C154473 + (C132780 + C132781) * C154415) *
               C154011 * C154146 -
           (C131898 * C154415 + C103386 * C154473 +
            (C101530 + C101529) * C154483 + (C101528 + C101527) * C154487) *
               C154011 * C154393) *
              C154464 +
          ((C101539 * C154487 + C130733 * C154483 +
            (C103399 + C103400) * C154473 + (C131911 + C131912) * C154415) *
               C154011 * C154393 -
           ((C97277 * C29238 - C97278 * C29237 - C97277 * C29239 +
             C154268 * C29240 + C97275 * C28880 - C97276 * C28878 -
             C97275 * C28881 + C97273 * C28884) *
                C154415 +
            (C132781 + C132780) * C154473 + C132767 * C154483 +
            C104685 * C154487) *
               C154011 * C154146) *
              C1685) *
         C154047) /
            (p * q * std::sqrt(p + q));
    d2ee[142] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
             C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
                C70494 +
            (C101527 + C101528) * C154226) *
               C154477 +
           ((C97340 + C97341) * C70494 + C101466 * C154226) * C154458 +
           C125375 * C154429) *
              C154082 * C1394 -
          (C126249 * C154429 +
           (C101476 * C154226 + C101477 * C70494) * C154458 +
           ((C101530 + C101529) * C154226 + (C101528 + C101527) * C70494) *
               C154477) *
              C154082 * C1395 +
          ((C101539 * C70494 + (C101534 + C101533) * C154226) * C154477 +
           (C101467 * C70494 + C101541 * C154226) * C154458 +
           (C102165 * C70494 + (C101537 + C101538) * C154226) * C154429) *
              C154082 * C1396 -
          (((C97277 * C5660 - C97278 * C5657 - C97277 * C5661 +
             C154268 * C5666 + C97275 * C3147 - C97276 * C3141 -
             C97275 * C3148 + C97273 * C3153) *
                C154226 +
            (C101538 + C101537) * C70494) *
               C154429 +
           ((C101536 + C101535) * C154226 + C101540 * C70494) * C154458 +
           ((C103400 + C103399) * C154226 + C103386 * C70494) * C154477) *
              C154082 * C1397) *
         C154047) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
              C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
                 C70494 +
             (C101527 + C101528) * C154226) *
                C154477 +
            ((C97340 + C97341) * C70494 + C101466 * C154226) * C154458 +
            C125375 * C154429) *
               C154082 * C1307 -
           (C126249 * C154429 +
            (C101476 * C154226 + C101477 * C70494) * C154458 +
            ((C101530 + C101529) * C154226 + (C101528 + C101527) * C70494) *
                C154477) *
               C154082 * C154118) *
              C1309 +
          (((C101466 * C70494 + C101467 * C154226) * C154477 +
            (C102164 * C70494 + C102165 * C154226) * C154458 +
            (C111310 * C70494 + (C97634 + C97635) * C154226) * C154429) *
               C154082 * C154118 -
           (C125376 * C154429 +
            (C98109 * C154226 + (C97343 + C97342) * C70494) * C154458 +
            (C101477 * C154226 + (C97341 + C97340) * C70494) * C154477) *
               C154082 * C1307) *
              C1310 +
          ((C125375 * C154477 +
            (C97351 * C70494 + C111310 * C154226) * C154458 +
            ((C97347 + C97346) * C70494 + (C98124 + C98125) * C154226) *
                C154429) *
               C154082 * C1307 -
           (((C97277 * C1977 - C97278 * C1972 - C97277 * C1978 +
              C154268 * C1987 + C97275 * C373 - C97276 * C352 - C97275 * C374 +
              C97273 * C388) *
                 C154226 +
             (C98125 + C98124) * C70494) *
                C154429 +
            ((C97635 + C97634) * C154226 + C98108 * C70494) * C154458 +
            C126249 * C154477) *
               C154082 * C154118) *
              C1311)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
              C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
                 C70494 +
             (C101527 + C101528) * C154226) *
                C154477 +
            ((C97340 + C97341) * C70494 + C101466 * C154226) * C154458 +
            C125375 * C154429) *
               C577 -
           (C126542 * C154429 +
            (C102857 * C154226 + (C97906 + C97907) * C70494) * C154458 +
            ((C102898 + C102899) * C154226 +
             (C97277 * C602 - C97278 * C585 - C97277 * C603 + C154268 * C621 +
              C97275 * C600 - C97276 * C584 - C97275 * C601 + C97273 * C620) *
                 C70494) *
                C154477) *
               C578 +
           (((C97275 * C602 - C97276 * C585 - C97275 * C603 + C97273 * C621 +
              C97277 * C2337 - C97278 * C2328 - C97277 * C2338 +
              C154268 * C2343) *
                 C70494 +
             (C103715 + C103716) * C154226) *
                C154477 +
            ((C97908 + C97909) * C70494 + (C101870 + C101871) * C154226) *
                C154458 +
            ((C97910 + C97911) * C70494 + (C111016 + C111017) * C154226) *
                C154429) *
               C579) *
              C1307 +
          ((((C102899 + C102898) * C70494 + (C102897 + C102896) * C154226) *
                C154477 +
            (C102874 * C70494 + C102875 * C154226) * C154458 +
            (C111992 * C70494 + (C102468 + C102469) * C154226) * C154429) *
               C578 -
           (C126249 * C154429 +
            (C101476 * C154226 + C101477 * C70494) * C154458 +
            ((C101530 + C101529) * C154226 + (C101528 + C101527) * C70494) *
                C154477) *
               C577 -
           (((C97277 * C6264 - C97278 * C6258 - C97277 * C6265 +
              C154268 * C6276 + C97275 * C3449 - C97276 * C3443 -
              C97275 * C3450 + C97273 * C3455) *
                 C154226 +
             (C111017 + C111016) * C70494) *
                C154429 +
            ((C101873 + C101872) * C154226 + (C101871 + C101870) * C70494) *
                C154458 +
            ((C103718 + C103717) * C154226 + (C103716 + C103715) * C70494) *
                C154477) *
               C579) *
              C154118) *
         C154047) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
             C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
                C154487 +
            (C101527 + C101528) * C154483 + C101539 * C154473 +
            C130733 * C154415) *
               C154011 * C154082 * C1307 -
           ((C103400 + C103399) * C154415 + C103386 * C154473 +
            (C101530 + C101529) * C154483 + (C101528 + C101527) * C154487) *
               C154011 * C154082 * C154118) *
              C1309 +
          ((C101466 * C154487 + C101467 * C154483 + C101541 * C154473 +
            (C101535 + C101536) * C154415) *
               C154011 * C154082 * C154118 -
           (C101540 * C154415 + C101476 * C154473 + C101477 * C154483 +
            (C97341 + C97340) * C154487) *
               C154011 * C154082 * C1307) *
              C1310 +
          ((C97350 * C154487 + C102164 * C154483 + C102165 * C154473 +
            (C101537 + C101538) * C154415) *
               C154011 * C154082 * C1307 -
           ((C97277 * C5660 - C97278 * C5657 - C97277 * C5661 +
             C154268 * C5666 + C97275 * C3147 - C97276 * C3141 -
             C97275 * C3148 + C97273 * C3153) *
                C154415 +
            (C101538 + C101537) * C154473 + C101502 * C154483 +
            C98109 * C154487) *
               C154011 * C154082 * C154118) *
              C1311)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
            C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
               C154487 +
           (C101527 + C101528) * C154483 + C101539 * C154473 +
           C130733 * C154415) *
              C154011 * C154082 * C1394 -
          (C131898 * C154415 + C103386 * C154473 +
           (C101530 + C101529) * C154483 + (C101528 + C101527) * C154487) *
              C154011 * C154082 * C1395 +
          (C101539 * C154487 + C130733 * C154483 +
           (C103399 + C103400) * C154473 + (C131911 + C131912) * C154415) *
              C154011 * C154082 * C1396 -
          ((C97277 * C29662 - C97278 * C29661 - C97277 * C29663 +
            C154268 * C29664 + C97275 * C28322 - C97276 * C28320 -
            C97275 * C28323 + C97273 * C28326) *
               C154415 +
           (C131912 + C131911) * C154473 + C131898 * C154483 +
           C103386 * C154487) *
              C154011 * C154082 * C1397) *
         C154047) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
             C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
                C154487 +
            (C101527 + C101528) * C154483 + C101539 * C154473 +
            C130733 * C154415) *
               C154011 * C577 -
           ((C104699 + C104698) * C154415 + C104685 * C154473 +
            (C102898 + C102899) * C154483 +
            (C97277 * C602 - C97278 * C585 - C97277 * C603 + C154268 * C621 +
             C97275 * C600 - C97276 * C584 - C97275 * C601 + C97273 * C620) *
                C154487) *
               C154011 * C578 +
           ((C97275 * C602 - C97276 * C585 - C97275 * C603 + C97273 * C621 +
             C97277 * C2337 - C97278 * C2328 - C97277 * C2338 +
             C154268 * C2343) *
                C154487 +
            (C103715 + C103716) * C154483 + (C103717 + C103718) * C154473 +
            (C132119 + C132120) * C154415) *
               C154011 * C579) *
              C1307 +
          (((C102899 + C102898) * C154487 + (C102897 + C102896) * C154483 +
            (C104698 + C104699) * C154473 +
            (C97275 * C5664 - C97276 * C5659 - C97275 * C5665 + C97273 * C5668 +
             C97277 * C28466 - C97278 * C28464 - C97277 * C28467 +
             C154268 * C28470) *
                C154415) *
               C154011 * C578 -
           (C131898 * C154415 + C103386 * C154473 +
            (C101530 + C101529) * C154483 + (C101528 + C101527) * C154487) *
               C154011 * C577 -
           ((C97277 * C30000 - C97278 * C29998 - C97277 * C30001 +
             C154268 * C30004 + C97275 * C28466 - C97276 * C28464 -
             C97275 * C28467 + C97273 * C28470) *
                C154415 +
            (C132120 + C132119) * C154473 + (C103718 + C103717) * C154483 +
            (C103716 + C103715) * C154487) *
               C154011 * C579) *
              C154118) *
         C154047) /
            (p * q * std::sqrt(p + q));
    d2ee[143] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
               C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
                  C70494 +
              (C101527 + C101528) * C154226) *
                 C154477 +
             ((C97340 + C97341) * C70494 + C101466 * C154226) * C154458 +
             C125375 * C154429) *
                C154393 -
            (C126542 * C154429 +
             (C102857 * C154226 + (C97906 + C97907) * C70494) * C154458 +
             ((C102898 + C102899) * C154226 +
              (C97277 * C602 - C97278 * C585 - C97277 * C603 + C154268 * C621 +
               C97275 * C600 - C97276 * C584 - C97275 * C601 + C97273 * C620) *
                  C70494) *
                 C154477) *
                C154146) *
               C1307 +
           ((((C102899 + C102898) * C70494 + (C102897 + C102896) * C154226) *
                 C154477 +
             (C102874 * C70494 + C102875 * C154226) * C154458 +
             (C111992 * C70494 + (C102468 + C102469) * C154226) * C154429) *
                C154146 -
            (C126249 * C154429 +
             (C101476 * C154226 + C101477 * C70494) * C154458 +
             ((C101530 + C101529) * C154226 + (C101528 + C101527) * C70494) *
                 C154477) *
                C154393) *
               C154118) *
              C154384 +
          (((((C97907 + C97906) * C70494 + C102874 * C154226) * C154477 +
             ((C97905 + C97904) * C70494 + C111992 * C154226) * C154458 +
             ((C97903 + C97902) * C70494 + (C98636 + C98637) * C154226) *
                 C154429) *
                C154146 -
            (C125376 * C154429 +
             (C98109 * C154226 + (C97343 + C97342) * C70494) * C154458 +
             (C101477 * C154226 + (C97341 + C97340) * C70494) * C154477) *
                C154393) *
               C1307 +
           (((C101466 * C70494 + C101467 * C154226) * C154477 +
             (C102164 * C70494 + C102165 * C154226) * C154458 +
             (C111310 * C70494 + (C97634 + C97635) * C154226) * C154429) *
                C154393 -
            (((C97277 * C3451 - C97278 * C3444 - C97277 * C3452 +
               C154268 * C3456 + C97275 * C1979 - C97276 * C1973 -
               C97275 * C1980 + C97273 * C1988) *
                  C154226 +
              (C98637 + C98636) * C70494) *
                 C154429 +
             ((C102469 + C102468) * C154226 + C111602 * C70494) * C154458 +
             (C102856 * C154226 + C102857 * C70494) * C154477) *
                C154146) *
               C154118) *
              C154053)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
              C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
                 C154487 +
             (C101527 + C101528) * C154483 + C101539 * C154473 +
             C130733 * C154415) *
                C154011 * C154393 -
            ((C104699 + C104698) * C154415 + C104685 * C154473 +
             (C102898 + C102899) * C154483 +
             (C97277 * C602 - C97278 * C585 - C97277 * C603 + C154268 * C621 +
              C97275 * C600 - C97276 * C584 - C97275 * C601 + C97273 * C620) *
                 C154487) *
                C154011 * C154146) *
               C1307 +
           (((C102899 + C102898) * C154487 + (C102897 + C102896) * C154483 +
             (C104698 + C104699) * C154473 +
             (C97275 * C5664 - C97276 * C5659 - C97275 * C5665 +
              C97273 * C5668 + C97277 * C28466 - C97278 * C28464 -
              C97277 * C28467 + C154268 * C28470) *
                 C154415) *
                C154011 * C154146 -
            (C131898 * C154415 + C103386 * C154473 +
             (C101530 + C101529) * C154483 + (C101528 + C101527) * C154487) *
                C154011 * C154393) *
               C154118) *
              C154384 +
          ((((C97907 + C97906) * C154487 + C102874 * C154483 +
             C102875 * C154473 + (C102900 + C102901) * C154415) *
                C154011 * C154146 -
            (C101540 * C154415 + C101476 * C154473 + C101477 * C154483 +
             (C97341 + C97340) * C154487) *
                C154011 * C154393) *
               C1307 +
           ((C101466 * C154487 + C101467 * C154483 + C101541 * C154473 +
             (C101535 + C101536) * C154415) *
                C154011 * C154393 -
            ((C97277 * C28468 - C97278 * C28465 - C97277 * C28469 +
              C154268 * C28471 + C97275 * C5662 - C97276 * C5658 -
              C97275 * C5663 + C97273 * C5667) *
                 C154415 +
             (C102901 + C102900) * C154473 + C102856 * C154483 +
             C102857 * C154487) *
                C154011 * C154146) *
               C154118) *
              C154053)) /
            (p * q * std::sqrt(p + q));
    d2ee[144] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
              C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
                 C70494 +
             (C101527 + C101528) * C154226) *
                C154477 +
            ((C97340 + C97341) * C70494 + C101466 * C154226) * C154458 +
            C125375 * C154429) *
               C154082 * C1307 -
           (C126249 * C154429 +
            (C101476 * C154226 + C101477 * C70494) * C154458 +
            ((C101530 + C101529) * C154226 + (C101528 + C101527) * C70494) *
                C154477) *
               C154082 * C154118) *
              C1309 +
          (((C101466 * C70494 + C101467 * C154226) * C154477 +
            (C102164 * C70494 + C102165 * C154226) * C154458 +
            (C111310 * C70494 + (C97634 + C97635) * C154226) * C154429) *
               C154082 * C154118 -
           (C125376 * C154429 +
            (C98109 * C154226 + (C97343 + C97342) * C70494) * C154458 +
            (C101477 * C154226 + (C97341 + C97340) * C70494) * C154477) *
               C154082 * C1307) *
              C1310 +
          ((C125375 * C154477 +
            (C97351 * C70494 + C111310 * C154226) * C154458 +
            ((C97347 + C97346) * C70494 + (C98124 + C98125) * C154226) *
                C154429) *
               C154082 * C1307 -
           (((C97277 * C1977 - C97278 * C1972 - C97277 * C1978 +
              C154268 * C1987 + C97275 * C373 - C97276 * C352 - C97275 * C374 +
              C97273 * C388) *
                 C154226 +
             (C98125 + C98124) * C70494) *
                C154429 +
            ((C97635 + C97634) * C154226 + C98108 * C70494) * C154458 +
            C126249 * C154477) *
               C154082 * C154118) *
              C1311)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
             C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
                C70494 +
            (C101527 + C101528) * C154226) *
               C154477 +
           ((C97340 + C97341) * C70494 + C101466 * C154226) * C154458 +
           C125375 * C154429) *
              C154082 * C1394 -
          (C126249 * C154429 +
           (C101476 * C154226 + C101477 * C70494) * C154458 +
           ((C101530 + C101529) * C154226 + (C101528 + C101527) * C70494) *
               C154477) *
              C154082 * C1395 +
          ((C101539 * C70494 + (C101534 + C101533) * C154226) * C154477 +
           (C101467 * C70494 + C101541 * C154226) * C154458 +
           (C102165 * C70494 + (C101537 + C101538) * C154226) * C154429) *
              C154082 * C1396 -
          (((C97277 * C5660 - C97278 * C5657 - C97277 * C5661 +
             C154268 * C5666 + C97275 * C3147 - C97276 * C3141 -
             C97275 * C3148 + C97273 * C3153) *
                C154226 +
            (C101538 + C101537) * C70494) *
               C154429 +
           ((C101536 + C101535) * C154226 + C101540 * C70494) * C154458 +
           ((C103400 + C103399) * C154226 + C103386 * C70494) * C154477) *
              C154082 * C1397) *
         C154047) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
             C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
                C154487 +
            (C101527 + C101528) * C154483 + C101539 * C154473 +
            C130733 * C154415) *
               C154011 * C154082 * C1307 -
           ((C103400 + C103399) * C154415 + C103386 * C154473 +
            (C101530 + C101529) * C154483 + (C101528 + C101527) * C154487) *
               C154011 * C154082 * C154118) *
              C1309 +
          ((C101466 * C154487 + C101467 * C154483 + C101541 * C154473 +
            (C101535 + C101536) * C154415) *
               C154011 * C154082 * C154118 -
           (C101540 * C154415 + C101476 * C154473 + C101477 * C154483 +
            (C97341 + C97340) * C154487) *
               C154011 * C154082 * C1307) *
              C1310 +
          ((C97350 * C154487 + C102164 * C154483 + C102165 * C154473 +
            (C101537 + C101538) * C154415) *
               C154011 * C154082 * C1307 -
           ((C97277 * C5660 - C97278 * C5657 - C97277 * C5661 +
             C154268 * C5666 + C97275 * C3147 - C97276 * C3141 -
             C97275 * C3148 + C97273 * C3153) *
                C154415 +
            (C101538 + C101537) * C154473 + C101502 * C154483 +
            C98109 * C154487) *
               C154011 * C154082 * C154118) *
              C1311)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
            C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
               C154487 +
           (C101527 + C101528) * C154483 + C101539 * C154473 +
           C130733 * C154415) *
              C154011 * C154082 * C1394 -
          (C131898 * C154415 + C103386 * C154473 +
           (C101530 + C101529) * C154483 + (C101528 + C101527) * C154487) *
              C154011 * C154082 * C1395 +
          (C101539 * C154487 + C130733 * C154483 +
           (C103399 + C103400) * C154473 + (C131911 + C131912) * C154415) *
              C154011 * C154082 * C1396 -
          ((C97277 * C29662 - C97278 * C29661 - C97277 * C29663 +
            C154268 * C29664 + C97275 * C28322 - C97276 * C28320 -
            C97275 * C28323 + C97273 * C28326) *
               C154415 +
           (C131912 + C131911) * C154473 + C131898 * C154483 +
           C103386 * C154487) *
              C154011 * C154082 * C1397) *
         C154047) /
            (p * q * std::sqrt(p + q));
    d2ee[145] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
               C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
                  C70494 +
              (C101527 + C101528) * C154226) *
                 C154477 +
             ((C97340 + C97341) * C70494 + C101466 * C154226) * C154458 +
             C125375 * C154429) *
                C2114 -
            (C126542 * C154429 +
             (C102857 * C154226 + (C97906 + C97907) * C70494) * C154458 +
             ((C102898 + C102899) * C154226 +
              (C97277 * C602 - C97278 * C585 - C97277 * C603 + C154268 * C621 +
               C97275 * C600 - C97276 * C584 - C97275 * C601 + C97273 * C620) *
                  C70494) *
                 C154477) *
                C154146) *
               C154392 +
           ((((C102899 + C102898) * C70494 + (C102897 + C102896) * C154226) *
                 C154477 +
             (C102874 * C70494 + C102875 * C154226) * C154458 +
             (C111992 * C70494 + (C102468 + C102469) * C154226) * C154429) *
                C154146 -
            (C126249 * C154429 +
             (C101476 * C154226 + C101477 * C70494) * C154458 +
             ((C101530 + C101529) * C154226 + (C101528 + C101527) * C70494) *
                 C154477) *
                C2114) *
               C154118) *
              C154384 +
          (((((C97907 + C97906) * C70494 + C102874 * C154226) * C154477 +
             ((C97905 + C97904) * C70494 + C111992 * C154226) * C154458 +
             ((C97903 + C97902) * C70494 + (C98636 + C98637) * C154226) *
                 C154429) *
                C154146 -
            (C125376 * C154429 +
             (C98109 * C154226 + (C97343 + C97342) * C70494) * C154458 +
             (C101477 * C154226 + (C97341 + C97340) * C70494) * C154477) *
                C2114) *
               C154392 +
           (((C101466 * C70494 + C101467 * C154226) * C154477 +
             (C102164 * C70494 + C102165 * C154226) * C154458 +
             (C111310 * C70494 + (C97634 + C97635) * C154226) * C154429) *
                C2114 -
            (((C97277 * C3451 - C97278 * C3444 - C97277 * C3452 +
               C154268 * C3456 + C97275 * C1979 - C97276 * C1973 -
               C97275 * C1980 + C97273 * C1988) *
                  C154226 +
              (C98637 + C98636) * C70494) *
                 C154429 +
             ((C102469 + C102468) * C154226 + C111602 * C70494) * C154458 +
             (C102856 * C154226 + C102857 * C70494) * C154477) *
                C154146) *
               C154118) *
              C154053)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
              C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
                 C154487 +
             (C101527 + C101528) * C154483 + C101539 * C154473 +
             C130733 * C154415) *
                C154011 * C2114 -
            (C132767 * C154415 + C104685 * C154473 +
             (C102898 + C102899) * C154483 +
             (C97277 * C602 - C97278 * C585 - C97277 * C603 + C154268 * C621 +
              C97275 * C600 - C97276 * C584 - C97275 * C601 + C97273 * C620) *
                 C154487) *
                C154011 * C154146) *
               C154392 +
           (((C102899 + C102898) * C154487 + (C102897 + C102896) * C154483 +
             (C104698 + C104699) * C154473 + (C132780 + C132781) * C154415) *
                C154011 * C154146 -
            (C131898 * C154415 + C103386 * C154473 +
             (C101530 + C101529) * C154483 + (C101528 + C101527) * C154487) *
                C154011 * C2114) *
               C154118) *
              C154384 +
          ((((C97907 + C97906) * C154487 + C102874 * C154483 +
             C102875 * C154473 + (C102900 + C102901) * C154415) *
                C154011 * C154146 -
            (C101540 * C154415 + C101476 * C154473 + C101477 * C154483 +
             (C97341 + C97340) * C154487) *
                C154011 * C2114) *
               C154392 +
           ((C101466 * C154487 + C101467 * C154483 + C101541 * C154473 +
             (C101535 + C101536) * C154415) *
                C154011 * C2114 -
            ((C97277 * C28468 - C97278 * C28465 - C97277 * C28469 +
              C154268 * C28471 + C97275 * C5662 - C97276 * C5658 -
              C97275 * C5663 + C97273 * C5667) *
                 C154415 +
             (C102901 + C102900) * C154473 + C102856 * C154483 +
             C102857 * C154487) *
                C154011 * C154146) *
               C154118) *
              C154053)) /
            (p * q * std::sqrt(p + q));
    d2ee[146] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
              C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
                 C70494 +
             (C101527 + C101528) * C154226) *
                C154477 +
            ((C97340 + C97341) * C70494 + C101466 * C154226) * C154458 +
            C125375 * C154429) *
               C154465 -
           (C126542 * C154429 +
            (C102857 * C154226 + (C97906 + C97907) * C70494) * C154458 +
            ((C102898 + C102899) * C154226 +
             (C97277 * C602 - C97278 * C585 - C97277 * C603 + C154268 * C621 +
              C97275 * C600 - C97276 * C584 - C97275 * C601 + C97273 * C620) *
                 C70494) *
                C154477) *
               C154466 +
           (((C97275 * C602 - C97276 * C585 - C97275 * C603 + C97273 * C621 +
              C97277 * C2337 - C97278 * C2328 - C97277 * C2338 +
              C154268 * C2343) *
                 C70494 +
             (C103715 + C103716) * C154226) *
                C154477 +
            ((C97908 + C97909) * C70494 + (C101870 + C101871) * C154226) *
                C154458 +
            ((C97910 + C97911) * C70494 + (C111016 + C111017) * C154226) *
                C154429) *
               C2630) *
              C154392 +
          ((((C102899 + C102898) * C70494 + (C102897 + C102896) * C154226) *
                C154477 +
            (C102874 * C70494 + C102875 * C154226) * C154458 +
            (C111992 * C70494 + (C102468 + C102469) * C154226) * C154429) *
               C154466 -
           (C126249 * C154429 +
            (C101476 * C154226 + C101477 * C70494) * C154458 +
            ((C101530 + C101529) * C154226 + (C101528 + C101527) * C70494) *
                C154477) *
               C154465 -
           (((C97277 * C6264 - C97278 * C6258 - C97277 * C6265 +
              C154268 * C6276 + C97275 * C3449 - C97276 * C3443 -
              C97275 * C3450 + C97273 * C3455) *
                 C154226 +
             (C111017 + C111016) * C70494) *
                C154429 +
            ((C101873 + C101872) * C154226 + (C101871 + C101870) * C70494) *
                C154458 +
            ((C103718 + C103717) * C154226 + (C103716 + C103715) * C70494) *
                C154477) *
               C2630) *
              C154118) *
         C154047) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
             C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
                C154487 +
            (C101527 + C101528) * C154483 + C101539 * C154473 +
            C130733 * C154415) *
               C154011 * C154465 -
           (C132767 * C154415 + C104685 * C154473 +
            (C102898 + C102899) * C154483 +
            (C97277 * C602 - C97278 * C585 - C97277 * C603 + C154268 * C621 +
             C97275 * C600 - C97276 * C584 - C97275 * C601 + C97273 * C620) *
                C154487) *
               C154011 * C154466 +
           ((C97275 * C602 - C97276 * C585 - C97275 * C603 + C97273 * C621 +
             C97277 * C2337 - C97278 * C2328 - C97277 * C2338 +
             C154268 * C2343) *
                C154487 +
            (C103715 + C103716) * C154483 + (C103717 + C103718) * C154473 +
            (C132119 + C132120) * C154415) *
               C154011 * C2630) *
              C154392 +
          (((C102899 + C102898) * C154487 + (C102897 + C102896) * C154483 +
            (C104698 + C104699) * C154473 + (C132780 + C132781) * C154415) *
               C154011 * C154466 -
           (C131898 * C154415 + C103386 * C154473 +
            (C101530 + C101529) * C154483 + (C101528 + C101527) * C154487) *
               C154011 * C154465 -
           ((C97277 * C30000 - C97278 * C29998 - C97277 * C30001 +
             C154268 * C30004 + C97275 * C28466 - C97276 * C28464 -
             C97275 * C28467 + C97273 * C28470) *
                C154415 +
            (C132120 + C132119) * C154473 + (C103718 + C103717) * C154483 +
            (C103716 + C103715) * C154487) *
               C154011 * C2630) *
              C154118) *
         C154047) /
            (p * q * std::sqrt(p + q));
    d2ee[147] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
              C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
                 C70494 +
             (C101527 + C101528) * C154226) *
                C154477 +
            ((C97340 + C97341) * C70494 + C101466 * C154226) * C154458 +
            C125375 * C154429) *
               C2114 -
           (C126542 * C154429 +
            (C102857 * C154226 + (C97906 + C97907) * C70494) * C154458 +
            ((C102898 + C102899) * C154226 +
             (C97277 * C602 - C97278 * C585 - C97277 * C603 + C154268 * C621 +
              C97275 * C600 - C97276 * C584 - C97275 * C601 + C97273 * C620) *
                 C70494) *
                C154477) *
               C154146) *
              C338 +
          ((((C102899 + C102898) * C70494 + (C102897 + C102896) * C154226) *
                C154477 +
            (C102874 * C70494 + C102875 * C154226) * C154458 +
            (C111992 * C70494 + (C102468 + C102469) * C154226) * C154429) *
               C154146 -
           (C126249 * C154429 +
            (C101476 * C154226 + C101477 * C70494) * C154458 +
            ((C101530 + C101529) * C154226 + (C101528 + C101527) * C70494) *
                C154477) *
               C2114) *
              C339 +
          (((C101539 * C70494 + (C101534 + C101533) * C154226) * C154477 +
            (C101467 * C70494 + C101541 * C154226) * C154458 +
            (C102165 * C70494 + (C101537 + C101538) * C154226) * C154429) *
               C2114 -
           (((C97277 * C4908 - C97278 * C4905 - C97277 * C4909 +
              C154268 * C4914 + C97275 * C4262 - C97276 * C4256 -
              C97275 * C4263 + C97273 * C4268) *
                 C154226 +
             (C102469 + C102468) * C70494) *
                C154429 +
            ((C102901 + C102900) * C154226 + C102856 * C70494) * C154458 +
            ((C104699 + C104698) * C154226 + C104685 * C70494) * C154477) *
               C154146) *
              C340) *
         C154047) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
              C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
                 C70494 +
             (C101527 + C101528) * C154226) *
                C154477 +
            ((C97340 + C97341) * C70494 + C101466 * C154226) * C154458 +
            C125375 * C154429) *
               C2114 -
           (C126542 * C154429 +
            (C102857 * C154226 + (C97906 + C97907) * C70494) * C154458 +
            ((C102898 + C102899) * C154226 +
             (C97277 * C602 - C97278 * C585 - C97277 * C603 + C154268 * C621 +
              C97275 * C600 - C97276 * C584 - C97275 * C601 + C97273 * C620) *
                 C70494) *
                C154477) *
               C154146) *
              C154066 * C1309 +
          ((((C97907 + C97906) * C70494 + C102874 * C154226) * C154477 +
            ((C97905 + C97904) * C70494 + C111992 * C154226) * C154458 +
            ((C97903 + C97902) * C70494 + (C98636 + C98637) * C154226) *
                C154429) *
               C154146 -
           (C125376 * C154429 +
            (C98109 * C154226 + (C97343 + C97342) * C70494) * C154458 +
            (C101477 * C154226 + (C97341 + C97340) * C70494) * C154477) *
               C2114) *
              C154066 * C1310 +
          ((C125375 * C154477 +
            (C97351 * C70494 + C111310 * C154226) * C154458 +
            ((C97347 + C97346) * C70494 + (C98124 + C98125) * C154226) *
                C154429) *
               C2114 -
           (((C97277 * C1546 - C97278 * C1541 - C97277 * C1547 +
              C154268 * C1556 + C97275 * C1143 - C97276 * C1133 -
              C97275 * C1144 + C97273 * C1151) *
                 C154226 +
             (C98337 + C98336) * C70494) *
                C154429 +
            ((C98637 + C98636) * C154226 + C98320 * C70494) * C154458 +
            C126542 * C154477) *
               C154146) *
              C154066 * C1311)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
             C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
                C70494 +
            (C101527 + C101528) * C154226) *
               C154477 +
           ((C97340 + C97341) * C70494 + C101466 * C154226) * C154458 +
           C125375 * C154429) *
              C2320 -
          (C126542 * C154429 +
           (C102857 * C154226 + (C97906 + C97907) * C70494) * C154458 +
           ((C102898 + C102899) * C154226 +
            (C97277 * C602 - C97278 * C585 - C97277 * C603 + C154268 * C621 +
             C97275 * C600 - C97276 * C584 - C97275 * C601 + C97273 * C620) *
                C70494) *
               C154477) *
              C2321 +
          (((C97275 * C602 - C97276 * C585 - C97275 * C603 + C97273 * C621 +
             C97277 * C2337 - C97278 * C2328 - C97277 * C2338 +
             C154268 * C2343) *
                C70494 +
            (C103715 + C103716) * C154226) *
               C154477 +
           ((C97908 + C97909) * C70494 + (C101870 + C101871) * C154226) *
               C154458 +
           ((C97910 + C97911) * C70494 + (C111016 + C111017) * C154226) *
               C154429) *
              C2322 -
          (((C97277 * C9278 - C97278 * C9275 - C97277 * C9279 +
             C154268 * C9284 + C97275 * C6266 - C97276 * C6259 -
             C97275 * C6267 + C97273 * C6277) *
                C154226 +
            (C97277 * C7781 - C97278 * C7775 - C97277 * C7782 +
             C154268 * C7787 + C97275 * C2333 - C97276 * C2326 -
             C97275 * C2334 + C97273 * C2341) *
                C70494) *
               C154429 +
           ((C97277 * C9280 - C97278 * C9276 - C97277 * C9281 +
             C154268 * C9285 + C97275 * C6270 - C97276 * C6261 -
             C97275 * C6271 + C97273 * C6279) *
                C154226 +
            (C97277 * C7779 - C97278 * C7774 - C97277 * C7780 +
             C154268 * C7786 + C97275 * C2335 - C97276 * C2327 -
             C97275 * C2336 + C97273 * C2342) *
                C70494) *
               C154458 +
           ((C97277 * C9282 - C97278 * C9277 - C97277 * C9283 +
             C154268 * C9286 + C97275 * C6274 - C97276 * C6263 -
             C97275 * C6275 + C97273 * C6281) *
                C154226 +
            (C97277 * C7777 - C97278 * C7773 - C97277 * C7778 +
             C154268 * C7785 + C97275 * C2337 - C97276 * C2328 -
             C97275 * C2338 + C97273 * C2343) *
                C70494) *
               C154477) *
              C2323) *
         C154066 * C154047) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
             C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
                C154487 +
            (C101527 + C101528) * C154483 + C101539 * C154473 +
            C130733 * C154415) *
               C154011 * C2114 -
           (C132767 * C154415 + C104685 * C154473 +
            (C102898 + C102899) * C154483 +
            (C97277 * C602 - C97278 * C585 - C97277 * C603 + C154268 * C621 +
             C97275 * C600 - C97276 * C584 - C97275 * C601 + C97273 * C620) *
                C154487) *
               C154011 * C154146) *
              C154066 * C1309 +
          (((C97907 + C97906) * C154487 + C102874 * C154483 +
            C102875 * C154473 + (C102900 + C102901) * C154415) *
               C154011 * C154146 -
           (C101540 * C154415 + C101476 * C154473 + C101477 * C154483 +
            (C97341 + C97340) * C154487) *
               C154011 * C2114) *
              C154066 * C1310 +
          ((C97350 * C154487 + C102164 * C154483 + C102165 * C154473 +
            (C101537 + C101538) * C154415) *
               C154011 * C2114 -
           ((C97277 * C4908 - C97278 * C4905 - C97277 * C4909 +
             C154268 * C4914 + C97275 * C4262 - C97276 * C4256 -
             C97275 * C4263 + C97273 * C4268) *
                C154415 +
            (C102469 + C102468) * C154473 + C111602 * C154483 +
            C98321 * C154487) *
               C154011 * C154146) *
              C154066 * C1311)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
             C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
                C154487 +
            (C101527 + C101528) * C154483 + C101539 * C154473 +
            C130733 * C154415) *
               C154011 * C2114 -
           (C132767 * C154415 + C104685 * C154473 +
            (C102898 + C102899) * C154483 +
            (C97277 * C602 - C97278 * C585 - C97277 * C603 + C154268 * C621 +
             C97275 * C600 - C97276 * C584 - C97275 * C601 + C97273 * C620) *
                C154487) *
               C154011 * C154146) *
              C338 +
          (((C102899 + C102898) * C154487 + (C102897 + C102896) * C154483 +
            (C104698 + C104699) * C154473 + (C132780 + C132781) * C154415) *
               C154011 * C154146 -
           (C131898 * C154415 + C103386 * C154473 +
            (C101530 + C101529) * C154483 + (C101528 + C101527) * C154487) *
               C154011 * C2114) *
              C339 +
          ((C101539 * C154487 + C130733 * C154483 +
            (C103399 + C103400) * C154473 + (C131911 + C131912) * C154415) *
               C154011 * C2114 -
           ((C97277 * C29238 - C97278 * C29237 - C97277 * C29239 +
             C154268 * C29240 + C97275 * C28880 - C97276 * C28878 -
             C97275 * C28881 + C97273 * C28884) *
                C154415 +
            (C132781 + C132780) * C154473 + C132767 * C154483 +
            C104685 * C154487) *
               C154011 * C154146) *
              C340) *
         C154047) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
            C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
               C154487 +
           (C101527 + C101528) * C154483 + C101539 * C154473 +
           C130733 * C154415) *
              C154011 * C2320 -
          (C132767 * C154415 + C104685 * C154473 +
           (C102898 + C102899) * C154483 +
           (C97277 * C602 - C97278 * C585 - C97277 * C603 + C154268 * C621 +
            C97275 * C600 - C97276 * C584 - C97275 * C601 + C97273 * C620) *
               C154487) *
              C154011 * C2321 +
          ((C97275 * C602 - C97276 * C585 - C97275 * C603 + C97273 * C621 +
            C97277 * C2337 - C97278 * C2328 - C97277 * C2338 +
            C154268 * C2343) *
               C154487 +
           (C103715 + C103716) * C154483 + (C103717 + C103718) * C154473 +
           (C132119 + C132120) * C154415) *
              C154011 * C2322 -
          ((C97277 * C32489 - C97278 * C32488 - C97277 * C32490 +
            C154268 * C32491 + C97275 * C30002 - C97276 * C29999 -
            C97275 * C30003 + C97273 * C30005) *
               C154415 +
           (C97277 * C31084 - C97278 * C31082 - C97277 * C31085 +
            C154268 * C31088 + C97275 * C6272 - C97276 * C6262 -
            C97275 * C6273 + C97273 * C6280) *
               C154473 +
           (C97277 * C9282 - C97278 * C9277 - C97277 * C9283 + C154268 * C9286 +
            C97275 * C6274 - C97276 * C6263 - C97275 * C6275 + C97273 * C6281) *
               C154483 +
           (C97277 * C7777 - C97278 * C7773 - C97277 * C7778 + C154268 * C7785 +
            C97275 * C2337 - C97276 * C2328 - C97275 * C2338 + C97273 * C2343) *
               C154487) *
              C154011 * C2323) *
         C154066 * C154047) /
            (p * q * std::sqrt(p + q));
    d2ee[148] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
              C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
                 C70494 +
             (C101527 + C101528) * C154226) *
                C154477 +
            ((C97340 + C97341) * C70494 + C101466 * C154226) * C154458 +
            C125375 * C154429) *
               C154465 -
           (C126542 * C154429 +
            (C102857 * C154226 + (C97906 + C97907) * C70494) * C154458 +
            ((C102898 + C102899) * C154226 +
             (C97277 * C602 - C97278 * C585 - C97277 * C603 + C154268 * C621 +
              C97275 * C600 - C97276 * C584 - C97275 * C601 + C97273 * C620) *
                 C70494) *
                C154477) *
               C154466 +
           (((C97275 * C602 - C97276 * C585 - C97275 * C603 + C97273 * C621 +
              C97277 * C2337 - C97278 * C2328 - C97277 * C2338 +
              C154268 * C2343) *
                 C70494 +
             (C103715 + C103716) * C154226) *
                C154477 +
            ((C97908 + C97909) * C70494 + (C101870 + C101871) * C154226) *
                C154458 +
            ((C97910 + C97911) * C70494 + (C111016 + C111017) * C154226) *
                C154429) *
               C2630) *
              C154066 * C154384 +
          ((((C97907 + C97906) * C70494 + C102874 * C154226) * C154477 +
            ((C97905 + C97904) * C70494 + C111992 * C154226) * C154458 +
            ((C97903 + C97902) * C70494 + (C98636 + C98637) * C154226) *
                C154429) *
               C154466 -
           (C125376 * C154429 +
            (C98109 * C154226 + (C97343 + C97342) * C70494) * C154458 +
            (C101477 * C154226 + (C97341 + C97340) * C70494) * C154477) *
               C154465 -
           (((C97277 * C8648 - C97278 * C8647 - C97277 * C8649 +
              C154268 * C8650 + C97275 * C1548 - C97276 * C1542 -
              C97275 * C1549 + C97273 * C1557) *
                 C154226 +
             (C97913 + C97912) * C70494) *
                C154429 +
            ((C111017 + C111016) * C154226 + (C97911 + C97910) * C70494) *
                C154458 +
            ((C101871 + C101870) * C154226 + (C97909 + C97908) * C70494) *
                C154477) *
               C2630) *
              C154066 * C154053)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
             C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
                C154487 +
            (C101527 + C101528) * C154483 + C101539 * C154473 +
            C130733 * C154415) *
               C154011 * C154465 -
           (C132767 * C154415 + C104685 * C154473 +
            (C102898 + C102899) * C154483 +
            (C97277 * C602 - C97278 * C585 - C97277 * C603 + C154268 * C621 +
             C97275 * C600 - C97276 * C584 - C97275 * C601 + C97273 * C620) *
                C154487) *
               C154011 * C154466 +
           ((C97275 * C602 - C97276 * C585 - C97275 * C603 + C97273 * C621 +
             C97277 * C2337 - C97278 * C2328 - C97277 * C2338 +
             C154268 * C2343) *
                C154487 +
            (C103715 + C103716) * C154483 + (C103717 + C103718) * C154473 +
            (C132119 + C132120) * C154415) *
               C154011 * C2630) *
              C154066 * C154384 +
          (((C97907 + C97906) * C154487 + C102874 * C154483 +
            C102875 * C154473 + (C102900 + C102901) * C154415) *
               C154011 * C154466 -
           (C101540 * C154415 + C101476 * C154473 + C101477 * C154483 +
            (C97341 + C97340) * C154487) *
               C154011 * C154465 -
           ((C97277 * C31817 - C97278 * C31816 - C97277 * C31818 +
             C154268 * C31819 + C97275 * C4910 - C97276 * C4906 -
             C97275 * C4911 + C97273 * C4915) *
                C154415 +
            (C101873 + C101872) * C154473 + (C101871 + C101870) * C154483 +
            (C97909 + C97908) * C154487) *
               C154011 * C2630) *
              C154066 * C154053)) /
            (p * q * std::sqrt(p + q));
    d2ee[149] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
              C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
                 C70494 +
             (C101527 + C101528) * C154226) *
                C154477 +
            ((C97340 + C97341) * C70494 + C101466 * C154226) * C154458 +
            C125375 * C154429) *
               C2114 -
           (C126542 * C154429 +
            (C102857 * C154226 + (C97906 + C97907) * C70494) * C154458 +
            ((C102898 + C102899) * C154226 +
             (C97277 * C602 - C97278 * C585 - C97277 * C603 + C154268 * C621 +
              C97275 * C600 - C97276 * C584 - C97275 * C601 + C97273 * C620) *
                 C70494) *
                C154477) *
               C154146) *
              C154066 * C1309 +
          ((((C97907 + C97906) * C70494 + C102874 * C154226) * C154477 +
            ((C97905 + C97904) * C70494 + C111992 * C154226) * C154458 +
            ((C97903 + C97902) * C70494 + (C98636 + C98637) * C154226) *
                C154429) *
               C154146 -
           (C125376 * C154429 +
            (C98109 * C154226 + (C97343 + C97342) * C70494) * C154458 +
            (C101477 * C154226 + (C97341 + C97340) * C70494) * C154477) *
               C2114) *
              C154066 * C1310 +
          ((C125375 * C154477 +
            (C97351 * C70494 + C111310 * C154226) * C154458 +
            ((C97347 + C97346) * C70494 + (C98124 + C98125) * C154226) *
                C154429) *
               C2114 -
           (((C97277 * C1546 - C97278 * C1541 - C97277 * C1547 +
              C154268 * C1556 + C97275 * C1143 - C97276 * C1133 -
              C97275 * C1144 + C97273 * C1151) *
                 C154226 +
             (C98337 + C98336) * C70494) *
                C154429 +
            ((C98637 + C98636) * C154226 + C98320 * C70494) * C154458 +
            C126542 * C154477) *
               C154146) *
              C154066 * C1311)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
              C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
                 C70494 +
             (C101527 + C101528) * C154226) *
                C154477 +
            ((C97340 + C97341) * C70494 + C101466 * C154226) * C154458 +
            C125375 * C154429) *
               C2114 -
           (C126542 * C154429 +
            (C102857 * C154226 + (C97906 + C97907) * C70494) * C154458 +
            ((C102898 + C102899) * C154226 +
             (C97277 * C602 - C97278 * C585 - C97277 * C603 + C154268 * C621 +
              C97275 * C600 - C97276 * C584 - C97275 * C601 + C97273 * C620) *
                 C70494) *
                C154477) *
               C154146) *
              C338 +
          ((((C102899 + C102898) * C70494 + (C102897 + C102896) * C154226) *
                C154477 +
            (C102874 * C70494 + C102875 * C154226) * C154458 +
            (C111992 * C70494 + (C102468 + C102469) * C154226) * C154429) *
               C154146 -
           (C126249 * C154429 +
            (C101476 * C154226 + C101477 * C70494) * C154458 +
            ((C101530 + C101529) * C154226 + (C101528 + C101527) * C70494) *
                C154477) *
               C2114) *
              C339 +
          (((C101539 * C70494 + (C101534 + C101533) * C154226) * C154477 +
            (C101467 * C70494 + C101541 * C154226) * C154458 +
            (C102165 * C70494 + (C101537 + C101538) * C154226) * C154429) *
               C2114 -
           (((C97277 * C4908 - C97278 * C4905 - C97277 * C4909 +
              C154268 * C4914 + C97275 * C4262 - C97276 * C4256 -
              C97275 * C4263 + C97273 * C4268) *
                 C154226 +
             (C102469 + C102468) * C70494) *
                C154429 +
            ((C102901 + C102900) * C154226 + C102856 * C70494) * C154458 +
            ((C104699 + C104698) * C154226 + C104685 * C70494) * C154477) *
               C154146) *
              C340) *
         C154047) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
             C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
                C154487 +
            (C101527 + C101528) * C154483 + C101539 * C154473 +
            C130733 * C154415) *
               C154011 * C2114 -
           (C132767 * C154415 + C104685 * C154473 +
            (C102898 + C102899) * C154483 +
            (C97277 * C602 - C97278 * C585 - C97277 * C603 + C154268 * C621 +
             C97275 * C600 - C97276 * C584 - C97275 * C601 + C97273 * C620) *
                C154487) *
               C154011 * C154146) *
              C154066 * C1309 +
          (((C97907 + C97906) * C154487 + C102874 * C154483 +
            C102875 * C154473 + (C102900 + C102901) * C154415) *
               C154011 * C154146 -
           (C101540 * C154415 + C101476 * C154473 + C101477 * C154483 +
            (C97341 + C97340) * C154487) *
               C154011 * C2114) *
              C154066 * C1310 +
          ((C97350 * C154487 + C102164 * C154483 + C102165 * C154473 +
            (C101537 + C101538) * C154415) *
               C154011 * C2114 -
           ((C97277 * C4908 - C97278 * C4905 - C97277 * C4909 +
             C154268 * C4914 + C97275 * C4262 - C97276 * C4256 -
             C97275 * C4263 + C97273 * C4268) *
                C154415 +
            (C102469 + C102468) * C154473 + C111602 * C154483 +
            C98321 * C154487) *
               C154011 * C154146) *
              C154066 * C1311)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
             C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
                C154487 +
            (C101527 + C101528) * C154483 + C101539 * C154473 +
            C130733 * C154415) *
               C154011 * C2114 -
           (C132767 * C154415 + C104685 * C154473 +
            (C102898 + C102899) * C154483 +
            (C97277 * C602 - C97278 * C585 - C97277 * C603 + C154268 * C621 +
             C97275 * C600 - C97276 * C584 - C97275 * C601 + C97273 * C620) *
                C154487) *
               C154011 * C154146) *
              C338 +
          (((C102899 + C102898) * C154487 + (C102897 + C102896) * C154483 +
            (C104698 + C104699) * C154473 + (C132780 + C132781) * C154415) *
               C154011 * C154146 -
           (C131898 * C154415 + C103386 * C154473 +
            (C101530 + C101529) * C154483 + (C101528 + C101527) * C154487) *
               C154011 * C2114) *
              C339 +
          ((C101539 * C154487 + C130733 * C154483 +
            (C103399 + C103400) * C154473 + (C131911 + C131912) * C154415) *
               C154011 * C2114 -
           ((C97277 * C29238 - C97278 * C29237 - C97277 * C29239 +
             C154268 * C29240 + C97275 * C28880 - C97276 * C28878 -
             C97275 * C28881 + C97273 * C28884) *
                C154415 +
            (C132781 + C132780) * C154473 + C132767 * C154483 +
            C104685 * C154487) *
               C154011 * C154146) *
              C340) *
         C154047) /
            (p * q * std::sqrt(p + q));
    d2ee[150] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C34729 +
             C3210 * C34730 + C3211 * C34731 + C3214 * C154415) *
                C154373 +
            (C34736 + C34737 + C34738 + C34739) * C154021) *
               C154082 * C154392 -
           ((C34942 + C34943 + C34944 + C34945) * C154021 +
            (C4687 * C154415 + C3214 * C34731 + C3211 * C34730 +
             C3210 * C34729) *
                C154373) *
               C154082 * C154118) *
              C154461 +
          (((C34945 + C34944 + C34943 + C34942) * C154373 +
            (C35353 + C35354 + C35355 + C35356) * C154021) *
               C154082 * C154118 -
           ((C34740 + C34741 + C34742 + C34743) * C154021 +
            (C34739 + C34738 + C34737 + C34736) * C154373) *
               C154082 * C154392) *
              C154462 +
          (((C34743 + C34742 + C34741 + C34740) * C154373 +
            (C34744 + C34745 + C34746 + C34747) * C154021) *
               C154082 * C154392 -
           (((C134 * C3149 - C135 * C3142 - C134 * C3150 + C154181 * C3154) *
                 C154415 +
             C3217 * C34731 + C446 * C34730 + C441 * C34729) *
                C154021 +
            (C35356 + C35355 + C35354 + C35353) * C154373) *
               C154082 * C154118) *
              C818)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C154406 +
             C3210 * C154226) *
                C11465 +
            (C11470 + C11471) * C11466 + C11480 * C11467 + C11481 * C154407) *
               C154082 * C154392 -
           (C12097 * C154407 + C12098 * C11467 + (C11682 + C11683) * C11466 +
            (C3211 * C154226 + C3210 * C154406) * C11465) *
               C154082 * C154118) *
              C154461 +
          (((C11683 + C11682) * C11465 + (C11681 + C11680) * C11466 +
            (C11679 + C11678) * C11467 + (C12099 + C12100) * C154407) *
               C154082 * C154118 -
           (C11482 * C154407 + C11483 * C11467 + (C11473 + C11472) * C11466 +
            (C11471 + C11470) * C11465) *
               C154082 * C154392) *
              C154462 +
          ((C11480 * C11465 + C11481 * C11466 + (C11477 + C11476) * C11467 +
            (C11478 + C11479) * C154407) *
               C154082 * C154392 -
           (((C134 * C377 - C135 * C354 - C134 * C378 + C154181 * C390) *
                 C154226 +
             C830 * C154406) *
                C154407 +
            (C12100 + C12099) * C11467 + C12097 * C11466 + C12098 * C11465) *
               C154082 * C154118) *
              C818)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C47141 * C144 - C47142 * C136 - C47141 * C145 + C47138 * C160 +
              C47143 * C600 - C47144 * C584 - C47143 * C601 + C47139 * C620 +
              C47145 * C602 - C47146 * C585 - C47145 * C603 + C154445 * C621) *
                 C154406 +
             (C51712 + C51713 + C51714) * C154226) *
                C154373 +
            ((C47220 + C47221 + C47222) * C154406 + C58155 * C154226) *
                C154021) *
               C154082 * C154392 -
           ((C51699 * C154226 + C58156 * C154406) * C154021 +
            ((C51717 + C51716 + C51715) * C154226 +
             (C51714 + C51713 + C51712) * C154406) *
                C154373) *
               C154082 * C154118) *
              C154461 +
          (((C58155 * C154406 + C58157 * C154226) * C154373 +
            (C58760 * C154406 + (C47537 + C47538 + C47539) * C154226) *
                C154021) *
               C154082 * C154118 -
           ((C48073 * C154226 + (C47225 + C47224 + C47223) * C154406) *
                C154021 +
            (C58156 * C154226 + (C47222 + C47221 + C47220) * C154406) *
                C154373) *
               C154082 * C154392) *
              C154462 +
          (((C47234 * C154406 + C58760 * C154226) * C154373 +
            ((C47228 + C47227 + C47226) * C154406 +
             (C48081 + C48082 + C48083) * C154226) *
                C154021) *
               C154082 * C154392 -
           (((C47145 * C3451 - C47146 * C3444 - C47145 * C3452 +
              C154445 * C3456 + C47143 * C1979 - C47144 * C1973 -
              C47143 * C1980 + C47139 * C1988 + C47141 * C371 - C47142 * C351 -
              C47141 * C372 + C47138 * C387) *
                 C154226 +
             (C48083 + C48082 + C48081) * C154406) *
                C154021 +
            ((C47539 + C47538 + C47537) * C154226 + C48073 * C154406) *
                C154373) *
               C154082 * C154118) *
              C818)) /
            (p * q * std::sqrt(p + q));
    d2ee[151] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                  C34729 +
              C3210 * C34730 + C3211 * C34731 + C3214 * C154415) *
                 C154373 +
             (C34736 + C34737 + C34738 + C34739) * C154021) *
                C154393 -
            ((C35144 + C35145 + C35146 + C35147) * C154021 +
             (C5676 * C154415 + C4299 * C34731 + C4300 * C34730 +
              (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                  C34729) *
                 C154373) *
                C154146) *
               C154392 +
           (((C4300 * C34729 + C4299 * C34730 + C5676 * C34731 +
              C28899 * C154415) *
                 C154373 +
             (C35813 + C35814 + C35815 + C35816) * C154021) *
                C154146 -
            ((C34942 + C34943 + C34944 + C34945) * C154021 +
             (C4687 * C154415 + C3214 * C34731 + C3211 * C34730 +
              C3210 * C34729) *
                 C154373) *
                C154393) *
               C154118) *
              C341 +
          ((((C35147 + C35146 + C35145 + C35144) * C154373 +
             (C35551 + C35552 + C35553 + C35554) * C154021) *
                C154146 -
            ((C34740 + C34741 + C34742 + C34743) * C154021 +
             (C34739 + C34738 + C34737 + C34736) * C154373) *
                C154393) *
               C154392 +
           (((C34945 + C34944 + C34943 + C34942) * C154373 +
             (C35353 + C35354 + C35355 + C35356) * C154021) *
                C154393 -
            (((C134 * C5660 - C135 * C5657 - C134 * C5661 + C154181 * C5666) *
                  C154415 +
              C4302 * C34731 + C3500 * C34730 + C1179 * C34729) *
                 C154021 +
             (C35816 + C35815 + C35814 + C35813) * C154373) *
                C154146) *
               C154118) *
              C154053)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                  C154406 +
              C3210 * C154226) *
                 C11465 +
             (C11470 + C11471) * C11466 + C11480 * C11467 + C11481 * C154407) *
                C154393 -
            (C12295 * C154407 + C12296 * C11467 + (C11888 + C11889) * C11466 +
             (C4300 * C154226 +
              (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                  C154406) *
                 C11465) *
                C154146) *
               C154392 +
           (((C4300 * C154406 + C4299 * C154226) * C11465 +
             (C12557 + C12558) * C11466 + (C12559 + C12560) * C11467 +
             (C12561 + C12562) * C154407) *
                C154146 -
            (C12097 * C154407 + C12098 * C11467 + (C11682 + C11683) * C11466 +
             (C3211 * C154226 + C3210 * C154406) * C11465) *
                C154393) *
               C154118) *
              C341 +
          ((((C11889 + C11888) * C11465 + (C11887 + C11886) * C11466 +
             (C11885 + C11884) * C11467 + (C12297 + C12298) * C154407) *
                C154146 -
            (C11482 * C154407 + C11483 * C11467 + (C11473 + C11472) * C11466 +
             (C11471 + C11470) * C11465) *
                C154393) *
               C154392 +
           (((C11683 + C11682) * C11465 + (C11681 + C11680) * C11466 +
             (C11679 + C11678) * C11467 + (C12099 + C12100) * C154407) *
                C154393 -
            (((C134 * C1977 - C135 * C1972 - C134 * C1978 + C154181 * C1987) *
                  C154226 +
              C1181 * C154406) *
                 C154407 +
             (C12562 + C12561) * C11467 + (C12560 + C12559) * C11466 +
             (C12558 + C12557) * C11465) *
                C154146) *
               C154118) *
              C154053)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C47141 * C144 - C47142 * C136 - C47141 * C145 + C47138 * C160 +
               C47143 * C600 - C47144 * C584 - C47143 * C601 + C47139 * C620 +
               C47145 * C602 - C47146 * C585 - C47145 * C603 + C154445 * C621) *
                  C154406 +
              (C51712 + C51713 + C51714) * C154226) *
                 C154373 +
             ((C47220 + C47221 + C47222) * C154406 + C58155 * C154226) *
                 C154021) *
                C154393 -
            ((C59439 * C154226 + (C47833 + C47834 + C47835) * C154406) *
                 C154021 +
             ((C52727 + C52728 + C52729) * C154226 +
              (C47145 * C2337 - C47146 * C2328 - C47145 * C2338 +
               C154445 * C2343 + C47143 * C602 - C47144 * C585 - C47143 * C603 +
               C47139 * C621 + C47141 * C600 - C47142 * C584 - C47141 * C601 +
               C47138 * C620) *
                  C154406) *
                 C154373) *
                C154146) *
               C154392 +
           ((((C52729 + C52728 + C52727) * C154406 +
              (C52726 + C52725 + C52724) * C154226) *
                 C154373 +
             (C59440 * C154406 + (C52730 + C52731 + C52732) * C154226) *
                 C154021) *
                C154146 -
            ((C51699 * C154226 + C58156 * C154406) * C154021 +
             ((C51717 + C51716 + C51715) * C154226 +
              (C51714 + C51713 + C51712) * C154406) *
                 C154373) *
                C154393) *
               C154118) *
              C341 +
          (((((C47835 + C47834 + C47833) * C154406 + C59440 * C154226) *
                 C154373 +
             ((C47832 + C47831 + C47830) * C154406 +
              (C48655 + C48656 + C48657) * C154226) *
                 C154021) *
                C154146 -
            ((C48073 * C154226 + (C47225 + C47224 + C47223) * C154406) *
                 C154021 +
             (C58156 * C154226 + (C47222 + C47221 + C47220) * C154406) *
                 C154373) *
                C154393) *
               C154392 +
           (((C58155 * C154406 + C58157 * C154226) * C154373 +
             (C58760 * C154406 + (C47537 + C47538 + C47539) * C154226) *
                 C154021) *
                C154393 -
            (((C47145 * C6264 - C47146 * C6258 - C47145 * C6265 +
               C154445 * C6276 + C47143 * C3449 - C47144 * C3443 -
               C47143 * C3450 + C47139 * C3455 + C47141 * C1981 -
               C47142 * C1974 - C47141 * C1982 + C47138 * C1989) *
                  C154226 +
              (C48657 + C48656 + C48655) * C154406) *
                 C154021 +
             ((C52732 + C52731 + C52730) * C154226 + C59439 * C154406) *
                 C154373) *
                C154146) *
               C154118) *
              C154053)) /
            (p * q * std::sqrt(p + q));
    d2ee[152] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                    C154406 +
                C3210 * C154226) *
                   C11465 +
               (C11470 + C11471) * C11466 + C11480 * C11467 +
               C11481 * C154407) *
                  C154082 * C154066 * C130 -
              (C11482 * C154407 + C11483 * C11467 + (C11473 + C11472) * C11466 +
               (C11471 + C11470) * C11465) *
                  C154082 * C154066 * C131 +
              (C11480 * C11465 + C11481 * C11466 + (C11477 + C11476) * C11467 +
               (C11478 + C11479) * C154407) *
                  C154082 * C154066 * C132 -
              (((C134 * C820 - C135 * C819 - C134 * C821 + C154181 * C822) *
                    C154226 +
                C210 * C154406) *
                   C154407 +
               (C11479 + C11478) * C11467 + C11482 * C11466 + C11483 * C11465) *
                  C154082 * C154066 * C133) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                     C154406 +
                 C3210 * C154226) *
                    C11465 +
                (C11470 + C11471) * C11466 + C11480 * C11467 +
                C11481 * C154407) *
                   C154082 * C338 -
               ((C11678 + C11679) * C154407 + (C11680 + C11681) * C11467 +
                (C11682 + C11683) * C11466 +
                (C3211 * C154226 + C3210 * C154406) * C11465) *
                   C154082 * C339 +
               ((C3211 * C154406 + C3214 * C154226) * C11465 +
                (C11684 + C11685) * C11466 + (C11686 + C11687) * C11467 +
                (C11688 + C11689) * C154407) *
                   C154082 * C340) *
                  C341 +
              (((C11683 + C11682) * C11465 + (C11681 + C11680) * C11466 +
                (C11679 + C11678) * C11467 +
                (C440 * C154406 + C447 * C154226) * C154407) *
                   C154082 * C339 -
               (C11482 * C154407 + C11483 * C11467 +
                (C11473 + C11472) * C11466 + (C11471 + C11470) * C11465) *
                   C154082 * C338 -
               (((C134 * C1404 - C135 * C1399 - C134 * C1405 +
                  C154181 * C1414) *
                     C154226 +
                 C447 * C154406) *
                    C154407 +
                (C11689 + C11688) * C11467 + (C11687 + C11686) * C11466 +
                (C11685 + C11684) * C11465) *
                   C154082 * C340) *
                  C154053)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C154406 +
             C3210 * C154226) *
                C11465 +
            (C11470 + C11471) * C11466 + C11480 * C11467 + C11481 * C154407) *
               C577 -
           ((C11884 + C11885) * C154407 + (C11886 + C11887) * C11467 +
            (C11888 + C11889) * C11466 +
            (C4300 * C154226 +
             (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                 C154406) *
                C11465) *
               C578 +
           (((C134 * C602 - C135 * C585 - C134 * C603 + C154181 * C621) *
                 C154406 +
             C4930 * C154226) *
                C11465 +
            (C11890 + C11891) * C11466 + (C11892 + C11893) * C11467 +
            (C11894 + C11902) * C154407) *
               C579) *
              C154066 * C341 +
          (((C11889 + C11888) * C11465 + (C11887 + C11886) * C11466 +
            (C11885 + C11884) * C11467 +
            (C677 * C154406 + C1181 * C154226) * C154407) *
               C578 -
           (C11482 * C154407 + C11483 * C11467 + (C11473 + C11472) * C11466 +
            (C11471 + C11470) * C11465) *
               C577 -
           (((C134 * C1546 - C135 * C1541 - C134 * C1547 + C154181 * C1556) *
                 C154226 +
             C684 * C154406) *
                C154407 +
            (C11902 + C11894) * C11467 + (C11893 + C11892) * C11466 +
            (C11891 + C11890) * C11465) *
               C579) *
              C154066 * C154053)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                C34729 +
            C3210 * C34730 + C3211 * C34731 + C3214 * C154415) *
               C154373 +
           (C34736 + C34737 + C34738 + C34739) * C154021) *
              C154082 * C154066 * C130 -
          ((C34740 + C34741 + C34742 + C34743) * C154021 +
           (C34739 + C34738 + C34737 + C34736) * C154373) *
              C154082 * C154066 * C131 +
          ((C34743 + C34742 + C34741 + C34740) * C154373 +
           (C34744 + C34745 + C34746 + C34747) * C154021) *
              C154082 * C154066 * C132 -
          (((C134 * C1404 - C135 * C1399 - C134 * C1405 + C154181 * C1414) *
                C154415 +
            C447 * C34731 + C440 * C34730 + C208 * C34729) *
               C154021 +
           (C34747 + C34746 + C34745 + C34744) * C154373) *
              C154082 * C154066 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C34729 +
             C3210 * C34730 + C3211 * C34731 + C3214 * C154415) *
                C154373 +
            (C34736 + C34737 + C34738 + C34739) * C154021) *
               C154082 * C338 -
           ((C34942 + C34943 + C34944 + C34945) * C154021 +
            (C4687 * C154415 + C3214 * C34731 + C3211 * C34730 +
             C3210 * C34729) *
                C154373) *
               C154082 * C339 +
           ((C3211 * C34729 + C3214 * C34730 + C4687 * C34731 +
             C28341 * C154415) *
                C154373 +
            (C34946 + C34947 + C34948 + C34949) * C154021) *
               C154082 * C340) *
              C341 +
          (((C34945 + C34944 + C34943 + C34942) * C154373 +
            (C442 * C34729 + C445 * C34730 + C3212 * C34731 + C3216 * C154415) *
                C154021) *
               C154082 * C339 -
           ((C34740 + C34741 + C34742 + C34743) * C154021 +
            (C34739 + C34738 + C34737 + C34736) * C154373) *
               C154082 * C338 -
           (((C134 * C4671 - C135 * C4668 - C134 * C4672 + C154181 * C4677) *
                 C154415 +
             C3216 * C34731 + C3212 * C34730 + C445 * C34729) *
                C154021 +
            (C34949 + C34948 + C34947 + C34946) * C154373) *
               C154082 * C340) *
              C154053)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C34729 +
             C3210 * C34730 + C3211 * C34731 + C3214 * C154415) *
                C154373 +
            (C34736 + C34737 + C34738 + C34739) * C154021) *
               C577 -
           ((C35144 + C35145 + C35146 + C35147) * C154021 +
            (C5676 * C154415 + C4299 * C34731 + C4300 * C34730 +
             (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                 C34729) *
                C154373) *
               C578 +
           (((C134 * C602 - C135 * C585 - C134 * C603 + C154181 * C621) *
                 C34729 +
             C4930 * C34730 + C4931 * C34731 + C29254 * C154415) *
                C154373 +
            (C35148 + C35149 + C35150 + C35158) * C154021) *
               C579) *
              C154066 * C341 +
          (((C35147 + C35146 + C35145 + C35144) * C154373 +
            (C679 * C34729 + C1179 * C34730 + C3500 * C34731 +
             C4302 * C154415) *
                C154021) *
               C578 -
           ((C34740 + C34741 + C34742 + C34743) * C154021 +
            (C34739 + C34738 + C34737 + C34736) * C154373) *
               C577 -
           (((C134 * C4908 - C135 * C4905 - C134 * C4909 + C154181 * C4914) *
                 C154415 +
             C3505 * C34731 + C3504 * C34730 + C682 * C34729) *
                C154021 +
            (C35158 + C35150 + C35149 + C35148) * C154373) *
               C579) *
              C154066 * C154053)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C47141 * C144 - C47142 * C136 - C47141 * C145 + C47138 * C160 +
             C47143 * C600 - C47144 * C584 - C47143 * C601 + C47139 * C620 +
             C47145 * C602 - C47146 * C585 - C47145 * C603 + C154445 * C621) *
                C154406 +
            (C51712 + C51713 + C51714) * C154226) *
               C154373 +
           ((C47220 + C47221 + C47222) * C154406 +
            (C47533 + C47532 + C47531) * C154226) *
               C154021) *
              C154082 * C154066 * C130 -
          ((C48073 * C154226 + (C47225 + C47224 + C47223) * C154406) * C154021 +
           ((C47531 + C47532 + C47533) * C154226 +
            (C47222 + C47221 + C47220) * C154406) *
               C154373) *
              C154082 * C154066 * C131 +
          ((C47234 * C154406 + (C47530 + C47529 + C47528) * C154226) * C154373 +
           ((C47228 + C47227 + C47226) * C154406 +
            (C48081 + C48082 + C48083) * C154226) *
               C154021) *
              C154082 * C154066 * C132 -
          (((C47145 * C1546 - C47146 * C1541 - C47145 * C1547 +
             C154445 * C1556 + C47143 * C1143 - C47144 * C1133 -
             C47143 * C1144 + C47139 * C1151 + C47141 * C355 - C47142 * C343 -
             C47141 * C356 + C47138 * C379) *
                C154226 +
            (C47231 + C47230 + C47229) * C154406) *
               C154021 +
           ((C48083 + C48082 + C48081) * C154226 + C47235 * C154406) *
               C154373) *
              C154082 * C154066 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C47141 * C144 - C47142 * C136 - C47141 * C145 + C47138 * C160 +
              C47143 * C600 - C47144 * C584 - C47143 * C601 + C47139 * C620 +
              C47145 * C602 - C47146 * C585 - C47145 * C603 + C154445 * C621) *
                 C154406 +
             (C51712 + C51713 + C51714) * C154226) *
                C154373 +
            ((C47220 + C47221 + C47222) * C154406 + C58155 * C154226) *
                C154021) *
               C154082 * C338 -
           ((C51699 * C154226 + C58156 * C154406) * C154021 +
            ((C51717 + C51716 + C51715) * C154226 +
             (C51714 + C51713 + C51712) * C154406) *
                C154373) *
               C154082 * C339 +
           ((C51725 * C154406 + (C51720 + C51719 + C51718) * C154226) *
                C154373 +
            (C58157 * C154406 + (C51721 + C51722 + C51723) * C154226) *
                C154021) *
               C154082 * C340) *
              C341 +
          (((C58155 * C154406 + C58157 * C154226) * C154373 +
            ((C47530 + C47529 + C47528) * C154406 +
             (C47537 + C47538 + C47539) * C154226) *
                C154021) *
               C154082 * C339 -
           ((C48073 * C154226 + (C47225 + C47224 + C47223) * C154406) *
                C154021 +
            (C58156 * C154226 + (C47222 + C47221 + C47220) * C154406) *
                C154373) *
               C154082 * C338 -
           (((C47145 * C4908 - C47146 * C4905 - C47145 * C4909 +
              C154445 * C4914 + C47143 * C4262 - C47144 * C4256 -
              C47143 * C4263 + C47139 * C4268 + C47141 * C1408 -
              C47142 * C1401 - C47141 * C1409 + C47138 * C1416) *
                 C154226 +
             (C47539 + C47538 + C47537) * C154406) *
                C154021 +
            ((C51723 + C51722 + C51721) * C154226 + C51699 * C154406) *
                C154373) *
               C154082 * C340) *
              C154053)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C47141 * C144 - C47142 * C136 - C47141 * C145 + C47138 * C160 +
              C47143 * C600 - C47144 * C584 - C47143 * C601 + C47139 * C620 +
              C47145 * C602 - C47146 * C585 - C47145 * C603 + C154445 * C621) *
                 C154406 +
             (C51712 + C51713 + C51714) * C154226) *
                C154373 +
            ((C47220 + C47221 + C47222) * C154406 + C58155 * C154226) *
                C154021) *
               C577 -
           (((C48654 + C48653 + C48652) * C154226 +
             (C47833 + C47834 + C47835) * C154406) *
                C154021 +
            ((C52727 + C52728 + C52729) * C154226 +
             (C47145 * C2337 - C47146 * C2328 - C47145 * C2338 +
              C154445 * C2343 + C47143 * C602 - C47144 * C585 - C47143 * C603 +
              C47139 * C621 + C47141 * C600 - C47142 * C584 - C47141 * C601 +
              C47138 * C620) *
                 C154406) *
                C154373) *
               C578 +
           (((C47141 * C602 - C47142 * C585 - C47141 * C603 + C47138 * C621 +
              C47143 * C2337 - C47144 * C2328 - C47143 * C2338 +
              C47139 * C2343 + C47145 * C7777 - C47146 * C7773 -
              C47145 * C7778 + C154445 * C7785) *
                 C154406 +
             (C53374 + C53375 + C53376) * C154226) *
                C154373 +
            ((C47836 + C47837 + C47838) * C154406 +
             (C58466 + C58467 + C58468) * C154226) *
                C154021) *
               C579) *
              C154066 * C341 +
          ((((C47835 + C47834 + C47833) * C154406 +
             (C48652 + C48653 + C48654) * C154226) *
                C154373 +
            ((C47832 + C47831 + C47830) * C154406 +
             (C48655 + C48656 + C48657) * C154226) *
                C154021) *
               C578 -
           ((C48073 * C154226 + (C47225 + C47224 + C47223) * C154406) *
                C154021 +
            (C58156 * C154226 + (C47222 + C47221 + C47220) * C154406) *
                C154373) *
               C577 -
           (((C47145 * C9278 - C47146 * C9275 - C47145 * C9279 +
              C154445 * C9284 + C47143 * C6266 - C47144 * C6259 -
              C47143 * C6267 + C47139 * C6277 + C47141 * C1550 -
              C47142 * C1543 - C47141 * C1551 + C47138 * C1558) *
                 C154226 +
             (C47841 + C47840 + C47839) * C154406) *
                C154021 +
            ((C58468 + C58467 + C58466) * C154226 +
             (C47838 + C47837 + C47836) * C154406) *
                C154373) *
               C579) *
              C154066 * C154053)) /
            (p * q * std::sqrt(p + q));
    d2ee[153] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C34729 +
             C3210 * C34730 + C3211 * C34731 + C3214 * C154415) *
                C154373 +
            (C34736 + C34737 + C34738 + C34739) * C154021) *
               C154393 -
           ((C35144 + C35145 + C35146 + C35147) * C154021 +
            (C5676 * C154415 + C4299 * C34731 + C4300 * C34730 +
             (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                 C34729) *
                C154373) *
               C154146) *
              C154066 * C154461 +
          (((C35147 + C35146 + C35145 + C35144) * C154373 +
            (C35551 + C35552 + C35553 + C35554) * C154021) *
               C154146 -
           ((C34740 + C34741 + C34742 + C34743) * C154021 +
            (C34739 + C34738 + C34737 + C34736) * C154373) *
               C154393) *
              C154066 * C154462 +
          (((C34743 + C34742 + C34741 + C34740) * C154373 +
            (C34744 + C34745 + C34746 + C34747) * C154021) *
               C154393 -
           (((C134 * C4264 - C135 * C4257 - C134 * C4265 + C154181 * C4269) *
                 C154415 +
             C3963 * C34731 + C1180 * C34730 + C678 * C34729) *
                C154021 +
            (C35554 + C35553 + C35552 + C35551) * C154373) *
               C154146) *
              C154066 * C818)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C154406 +
             C3210 * C154226) *
                C11465 +
            (C11470 + C11471) * C11466 + C11480 * C11467 + C11481 * C154407) *
               C154393 -
           (C12295 * C154407 + C12296 * C11467 + (C11888 + C11889) * C11466 +
            (C4300 * C154226 +
             (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                 C154406) *
                C11465) *
               C154146) *
              C154066 * C154461 +
          (((C11889 + C11888) * C11465 + (C11887 + C11886) * C11466 +
            (C11885 + C11884) * C11467 + (C12297 + C12298) * C154407) *
               C154146 -
           (C11482 * C154407 + C11483 * C11467 + (C11473 + C11472) * C11466 +
            (C11471 + C11470) * C11465) *
               C154393) *
              C154066 * C154462 +
          ((C11480 * C11465 + C11481 * C11466 + (C11477 + C11476) * C11467 +
            (C11478 + C11479) * C154407) *
               C154393 -
           (((C134 * C1145 - C135 * C1134 - C134 * C1146 + C154181 * C1152) *
                 C154226 +
             C966 * C154406) *
                C154407 +
            (C12298 + C12297) * C11467 + C12295 * C11466 + C12296 * C11465) *
               C154146) *
              C154066 * C818)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C47141 * C144 - C47142 * C136 - C47141 * C145 + C47138 * C160 +
              C47143 * C600 - C47144 * C584 - C47143 * C601 + C47139 * C620 +
              C47145 * C602 - C47146 * C585 - C47145 * C603 + C154445 * C621) *
                 C154406 +
             (C51712 + C51713 + C51714) * C154226) *
                C154373 +
            ((C47220 + C47221 + C47222) * C154406 + C58155 * C154226) *
                C154021) *
               C154393 -
           (((C48654 + C48653 + C48652) * C154226 +
             (C47833 + C47834 + C47835) * C154406) *
                C154021 +
            ((C52727 + C52728 + C52729) * C154226 +
             (C47145 * C2337 - C47146 * C2328 - C47145 * C2338 +
              C154445 * C2343 + C47143 * C602 - C47144 * C585 - C47143 * C603 +
              C47139 * C621 + C47141 * C600 - C47142 * C584 - C47141 * C601 +
              C47138 * C620) *
                 C154406) *
                C154373) *
               C154146) *
              C154066 * C154461 +
          ((((C47835 + C47834 + C47833) * C154406 +
             (C48652 + C48653 + C48654) * C154226) *
                C154373 +
            ((C47832 + C47831 + C47830) * C154406 +
             (C48655 + C48656 + C48657) * C154226) *
                C154021) *
               C154146 -
           ((C48073 * C154226 + (C47225 + C47224 + C47223) * C154406) *
                C154021 +
            (C58156 * C154226 + (C47222 + C47221 + C47220) * C154406) *
                C154373) *
               C154393) *
              C154066 * C154462 +
          (((C47234 * C154406 + C58760 * C154226) * C154373 +
            ((C47228 + C47227 + C47226) * C154406 +
             (C48081 + C48082 + C48083) * C154226) *
                C154021) *
               C154393 -
           (((C47145 * C8648 - C47146 * C8647 - C47145 * C8649 +
              C154445 * C8650 + C47143 * C1548 - C47144 * C1542 -
              C47143 * C1549 + C47139 * C1557 + C47141 * C1141 -
              C47142 * C1132 - C47141 * C1142 + C47138 * C1150) *
                 C154226 +
             (C48325 + C48324 + C48323) * C154406) *
                C154021 +
            ((C48657 + C48656 + C48655) * C154226 + C48315 * C154406) *
                C154373) *
               C154146) *
              C154066 * C818)) /
            (p * q * std::sqrt(p + q));
    d2ee[154] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C154406 +
             C3210 * C154226) *
                C11465 +
            (C11470 + C11471) * C11466 + C11480 * C11467 + C11481 * C154407) *
               C154082 * C338 -
           ((C11678 + C11679) * C154407 + (C11680 + C11681) * C11467 +
            (C11682 + C11683) * C11466 +
            (C3211 * C154226 + C3210 * C154406) * C11465) *
               C154082 * C339 +
           ((C3211 * C154406 + C3214 * C154226) * C11465 +
            (C11684 + C11685) * C11466 + (C11686 + C11687) * C11467 +
            (C11688 + C11689) * C154407) *
               C154082 * C340) *
              C341 +
          (((C11683 + C11682) * C11465 + (C11681 + C11680) * C11466 +
            (C11679 + C11678) * C11467 +
            (C440 * C154406 + C447 * C154226) * C154407) *
               C154082 * C339 -
           (C11482 * C154407 + C11483 * C11467 + (C11473 + C11472) * C11466 +
            (C11471 + C11470) * C11465) *
               C154082 * C338 -
           (((C134 * C1404 - C135 * C1399 - C134 * C1405 + C154181 * C1414) *
                 C154226 +
             C447 * C154406) *
                C154407 +
            (C11689 + C11688) * C11467 + (C11687 + C11686) * C11466 +
            (C11685 + C11684) * C11465) *
               C154082 * C340) *
              C154053)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                C154406 +
            C3210 * C154226) *
               C11465 +
           (C11470 + C11471) * C11466 + C11480 * C11467 + C11481 * C154407) *
              C154082 * C154066 * C130 -
          (C11482 * C154407 + C11483 * C11467 + (C11473 + C11472) * C11466 +
           (C11471 + C11470) * C11465) *
              C154082 * C154066 * C131 +
          (C11480 * C11465 + C11481 * C11466 + (C11477 + C11476) * C11467 +
           (C11478 + C11479) * C154407) *
              C154082 * C154066 * C132 -
          (((C134 * C820 - C135 * C819 - C134 * C821 + C154181 * C822) *
                C154226 +
            C210 * C154406) *
               C154407 +
           (C11479 + C11478) * C11467 + C11482 * C11466 + C11483 * C11465) *
              C154082 * C154066 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                C34729 +
            C3210 * C34730 + C3211 * C34731 + C3214 * C154415) *
               C154373 +
           (C34736 + C34737 + C34738 + C34739) * C154021) *
              C154082 * C154066 * C130 -
          ((C34740 + C34741 + C34742 + C34743) * C154021 +
           (C34739 + C34738 + C34737 + C34736) * C154373) *
              C154082 * C154066 * C131 +
          ((C34743 + C34742 + C34741 + C34740) * C154373 +
           (C34744 + C34745 + C34746 + C34747) * C154021) *
              C154082 * C154066 * C132 -
          (((C134 * C1404 - C135 * C1399 - C134 * C1405 + C154181 * C1414) *
                C154415 +
            C447 * C34731 + C440 * C34730 + C208 * C34729) *
               C154021 +
           (C34747 + C34746 + C34745 + C34744) * C154373) *
              C154082 * C154066 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C34729 +
             C3210 * C34730 + C3211 * C34731 + C3214 * C154415) *
                C154373 +
            (C34736 + C34737 + C34738 + C34739) * C154021) *
               C154082 * C338 -
           ((C34942 + C34943 + C34944 + C34945) * C154021 +
            (C4687 * C154415 + C3214 * C34731 + C3211 * C34730 +
             C3210 * C34729) *
                C154373) *
               C154082 * C339 +
           ((C3211 * C34729 + C3214 * C34730 + C4687 * C34731 +
             C28341 * C154415) *
                C154373 +
            (C34946 + C34947 + C34948 + C34949) * C154021) *
               C154082 * C340) *
              C341 +
          (((C34945 + C34944 + C34943 + C34942) * C154373 +
            (C442 * C34729 + C445 * C34730 + C3212 * C34731 + C3216 * C154415) *
                C154021) *
               C154082 * C339 -
           ((C34740 + C34741 + C34742 + C34743) * C154021 +
            (C34739 + C34738 + C34737 + C34736) * C154373) *
               C154082 * C338 -
           (((C134 * C4671 - C135 * C4668 - C134 * C4672 + C154181 * C4677) *
                 C154415 +
             C3216 * C34731 + C3212 * C34730 + C445 * C34729) *
                C154021 +
            (C34949 + C34948 + C34947 + C34946) * C154373) *
               C154082 * C340) *
              C154053)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C47141 * C144 - C47142 * C136 - C47141 * C145 + C47138 * C160 +
             C47143 * C600 - C47144 * C584 - C47143 * C601 + C47139 * C620 +
             C47145 * C602 - C47146 * C585 - C47145 * C603 + C154445 * C621) *
                C154406 +
            (C51712 + C51713 + C51714) * C154226) *
               C154373 +
           ((C47220 + C47221 + C47222) * C154406 +
            (C47533 + C47532 + C47531) * C154226) *
               C154021) *
              C154082 * C154066 * C130 -
          ((C48073 * C154226 + (C47225 + C47224 + C47223) * C154406) * C154021 +
           ((C47531 + C47532 + C47533) * C154226 +
            (C47222 + C47221 + C47220) * C154406) *
               C154373) *
              C154082 * C154066 * C131 +
          ((C47234 * C154406 + (C47530 + C47529 + C47528) * C154226) * C154373 +
           ((C47228 + C47227 + C47226) * C154406 +
            (C48081 + C48082 + C48083) * C154226) *
               C154021) *
              C154082 * C154066 * C132 -
          (((C47145 * C1546 - C47146 * C1541 - C47145 * C1547 +
             C154445 * C1556 + C47143 * C1143 - C47144 * C1133 -
             C47143 * C1144 + C47139 * C1151 + C47141 * C355 - C47142 * C343 -
             C47141 * C356 + C47138 * C379) *
                C154226 +
            (C47231 + C47230 + C47229) * C154406) *
               C154021 +
           ((C48083 + C48082 + C48081) * C154226 + C47235 * C154406) *
               C154373) *
              C154082 * C154066 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C47141 * C144 - C47142 * C136 - C47141 * C145 + C47138 * C160 +
              C47143 * C600 - C47144 * C584 - C47143 * C601 + C47139 * C620 +
              C47145 * C602 - C47146 * C585 - C47145 * C603 + C154445 * C621) *
                 C154406 +
             (C51712 + C51713 + C51714) * C154226) *
                C154373 +
            ((C47220 + C47221 + C47222) * C154406 + C58155 * C154226) *
                C154021) *
               C154082 * C338 -
           ((C51699 * C154226 + C58156 * C154406) * C154021 +
            ((C51717 + C51716 + C51715) * C154226 +
             (C51714 + C51713 + C51712) * C154406) *
                C154373) *
               C154082 * C339 +
           ((C51725 * C154406 + (C51720 + C51719 + C51718) * C154226) *
                C154373 +
            (C58157 * C154406 + (C51721 + C51722 + C51723) * C154226) *
                C154021) *
               C154082 * C340) *
              C341 +
          (((C58155 * C154406 + C58157 * C154226) * C154373 +
            ((C47530 + C47529 + C47528) * C154406 +
             (C47537 + C47538 + C47539) * C154226) *
                C154021) *
               C154082 * C339 -
           ((C48073 * C154226 + (C47225 + C47224 + C47223) * C154406) *
                C154021 +
            (C58156 * C154226 + (C47222 + C47221 + C47220) * C154406) *
                C154373) *
               C154082 * C338 -
           (((C47145 * C4908 - C47146 * C4905 - C47145 * C4909 +
              C154445 * C4914 + C47143 * C4262 - C47144 * C4256 -
              C47143 * C4263 + C47139 * C4268 + C47141 * C1408 -
              C47142 * C1401 - C47141 * C1409 + C47138 * C1416) *
                 C154226 +
             (C47539 + C47538 + C47537) * C154406) *
                C154021 +
            ((C51723 + C51722 + C51721) * C154226 + C51699 * C154406) *
                C154373) *
               C154082 * C340) *
              C154053)) /
            (p * q * std::sqrt(p + q));
    d2ee[155] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C34729 +
             C3210 * C34730 + C3211 * C34731 + C3214 * C154415) *
                C154373 +
            (C34736 + C34737 + C34738 + C34739) * C154021) *
               C154082 * C154463 -
           ((C34942 + C34943 + C34944 + C34945) * C154021 +
            (C4687 * C154415 + C3214 * C34731 + C3211 * C34730 +
             C3210 * C34729) *
                C154373) *
               C154082 * C154464 +
           ((C3211 * C34729 + C3214 * C34730 + C4687 * C34731 +
             C28341 * C154415) *
                C154373 +
            (C34946 + C34947 + C34948 + C34949) * C154021) *
               C154082 * C1685) *
              C154384 +
          (((C34945 + C34944 + C34943 + C34942) * C154373 +
            (C35353 + C35354 + C35355 + C35356) * C154021) *
               C154082 * C154464 -
           ((C34740 + C34741 + C34742 + C34743) * C154021 +
            (C34739 + C34738 + C34737 + C34736) * C154373) *
               C154082 * C154463 -
           (((C134 * C4671 - C135 * C4668 - C134 * C4672 + C154181 * C4677) *
                 C154415 +
             C3216 * C34731 + C3212 * C34730 + C445 * C34729) *
                C154021 +
            (C34949 + C34948 + C34947 + C34946) * C154373) *
               C154082 * C1685) *
              C154053)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C154406 +
             C3210 * C154226) *
                C11465 +
            (C11470 + C11471) * C11466 + C11480 * C11467 + C11481 * C154407) *
               C154082 * C154463 -
           (C12097 * C154407 + C12098 * C11467 + (C11682 + C11683) * C11466 +
            (C3211 * C154226 + C3210 * C154406) * C11465) *
               C154082 * C154464 +
           ((C3211 * C154406 + C3214 * C154226) * C11465 +
            (C11684 + C11685) * C11466 + (C11686 + C11687) * C11467 +
            (C11688 + C11689) * C154407) *
               C154082 * C1685) *
              C154384 +
          (((C11683 + C11682) * C11465 + (C11681 + C11680) * C11466 +
            (C11679 + C11678) * C11467 + (C12099 + C12100) * C154407) *
               C154082 * C154464 -
           (C11482 * C154407 + C11483 * C11467 + (C11473 + C11472) * C11466 +
            (C11471 + C11470) * C11465) *
               C154082 * C154463 -
           (((C134 * C1404 - C135 * C1399 - C134 * C1405 + C154181 * C1414) *
                 C154226 +
             C447 * C154406) *
                C154407 +
            (C11689 + C11688) * C11467 + (C11687 + C11686) * C11466 +
            (C11685 + C11684) * C11465) *
               C154082 * C1685) *
              C154053)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C47141 * C144 - C47142 * C136 - C47141 * C145 + C47138 * C160 +
              C47143 * C600 - C47144 * C584 - C47143 * C601 + C47139 * C620 +
              C47145 * C602 - C47146 * C585 - C47145 * C603 + C154445 * C621) *
                 C154406 +
             (C51712 + C51713 + C51714) * C154226) *
                C154373 +
            ((C47220 + C47221 + C47222) * C154406 + C58155 * C154226) *
                C154021) *
               C154082 * C154463 -
           ((C51699 * C154226 + C58156 * C154406) * C154021 +
            ((C51717 + C51716 + C51715) * C154226 +
             (C51714 + C51713 + C51712) * C154406) *
                C154373) *
               C154082 * C154464 +
           ((C51725 * C154406 + (C51720 + C51719 + C51718) * C154226) *
                C154373 +
            (C58157 * C154406 + (C51721 + C51722 + C51723) * C154226) *
                C154021) *
               C154082 * C1685) *
              C154384 +
          (((C58155 * C154406 + C58157 * C154226) * C154373 +
            (C58760 * C154406 + (C47537 + C47538 + C47539) * C154226) *
                C154021) *
               C154082 * C154464 -
           ((C48073 * C154226 + (C47225 + C47224 + C47223) * C154406) *
                C154021 +
            (C58156 * C154226 + (C47222 + C47221 + C47220) * C154406) *
                C154373) *
               C154082 * C154463 -
           (((C47145 * C4908 - C47146 * C4905 - C47145 * C4909 +
              C154445 * C4914 + C47143 * C4262 - C47144 * C4256 -
              C47143 * C4263 + C47139 * C4268 + C47141 * C1408 -
              C47142 * C1401 - C47141 * C1409 + C47138 * C1416) *
                 C154226 +
             (C47539 + C47538 + C47537) * C154406) *
                C154021 +
            ((C51723 + C51722 + C51721) * C154226 + C51699 * C154406) *
                C154373) *
               C154082 * C1685) *
              C154053)) /
            (p * q * std::sqrt(p + q));
    d2ee[156] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C34729 +
             C3210 * C34730 + C3211 * C34731 + C3214 * C154415) *
                C154373 +
            (C34736 + C34737 + C34738 + C34739) * C154021) *
               C154393 -
           ((C35144 + C35145 + C35146 + C35147) * C154021 +
            (C5676 * C154415 + C4299 * C34731 + C4300 * C34730 +
             (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                 C34729) *
                C154373) *
               C154146) *
              C154463 +
          (((C4300 * C34729 + C4299 * C34730 + C5676 * C34731 +
             C28899 * C154415) *
                C154373 +
            (C35813 + C35814 + C35815 + C35816) * C154021) *
               C154146 -
           ((C34942 + C34943 + C34944 + C34945) * C154021 +
            (C4687 * C154415 + C3214 * C34731 + C3211 * C34730 +
             C3210 * C34729) *
                C154373) *
               C154393) *
              C154464 +
          (((C3211 * C34729 + C3214 * C34730 + C4687 * C34731 +
             C28341 * C154415) *
                C154373 +
            (C34946 + C34947 + C34948 + C34949) * C154021) *
               C154393 -
           (((C134 * C28882 - C135 * C28879 - C134 * C28883 +
              C154181 * C28885) *
                 C154415 +
             C28900 * C34731 + C4301 * C34730 + C3501 * C34729) *
                C154021 +
            (C29672 * C154415 + C28899 * C34731 + C5676 * C34730 +
             C4299 * C34729) *
                C154373) *
               C154146) *
              C1685) *
         C154047) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C154406 +
             C3210 * C154226) *
                C11465 +
            (C11470 + C11471) * C11466 + C11480 * C11467 + C11481 * C154407) *
               C154393 -
           (C12295 * C154407 + C12296 * C11467 + (C11888 + C11889) * C11466 +
            (C4300 * C154226 +
             (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                 C154406) *
                C11465) *
               C154146) *
              C154463 +
          (((C4300 * C154406 + C4299 * C154226) * C11465 +
            (C12557 + C12558) * C11466 + (C12559 + C12560) * C11467 +
            (C12561 + C12562) * C154407) *
               C154146 -
           (C12097 * C154407 + C12098 * C11467 + (C11682 + C11683) * C11466 +
            (C3211 * C154226 + C3210 * C154406) * C11465) *
               C154393) *
              C154464 +
          (((C3211 * C154406 + C3214 * C154226) * C11465 +
            (C11684 + C11685) * C11466 + (C11686 + C11687) * C11467 +
            (C11688 + C11689) * C154407) *
               C154393 -
           (((C134 * C4264 - C135 * C4257 - C134 * C4265 + C154181 * C4269) *
                 C154226 +
             C3963 * C154406) *
                C154407 +
            (C4302 * C154226 + C3500 * C154406) * C11467 +
            (C4301 * C154226 + C3501 * C154406) * C11466 +
            (C5676 * C154226 + C4299 * C154406) * C11465) *
               C154146) *
              C1685) *
         C154047) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C47141 * C144 - C47142 * C136 - C47141 * C145 + C47138 * C160 +
              C47143 * C600 - C47144 * C584 - C47143 * C601 + C47139 * C620 +
              C47145 * C602 - C47146 * C585 - C47145 * C603 + C154445 * C621) *
                 C154406 +
             (C51712 + C51713 + C51714) * C154226) *
                C154373 +
            ((C47220 + C47221 + C47222) * C154406 + C58155 * C154226) *
                C154021) *
               C154393 -
           ((C59439 * C154226 + (C47833 + C47834 + C47835) * C154406) *
                C154021 +
            ((C52727 + C52728 + C52729) * C154226 +
             (C47145 * C2337 - C47146 * C2328 - C47145 * C2338 +
              C154445 * C2343 + C47143 * C602 - C47144 * C585 - C47143 * C603 +
              C47139 * C621 + C47141 * C600 - C47142 * C584 - C47141 * C601 +
              C47138 * C620) *
                 C154406) *
                C154373) *
               C154146) *
              C154463 +
          ((((C52729 + C52728 + C52727) * C154406 +
             (C52726 + C52725 + C52724) * C154226) *
                C154373 +
            (C59440 * C154406 + (C52730 + C52731 + C52732) * C154226) *
                C154021) *
               C154146 -
           ((C51699 * C154226 + C58156 * C154406) * C154021 +
            ((C51717 + C51716 + C51715) * C154226 +
             (C51714 + C51713 + C51712) * C154406) *
                C154373) *
               C154393) *
              C154464 +
          (((C51725 * C154406 + (C51720 + C51719 + C51718) * C154226) *
                C154373 +
            (C58157 * C154406 + (C51721 + C51722 + C51723) * C154226) *
                C154021) *
               C154393 -
           (((C47145 * C31817 - C47146 * C31816 - C47145 * C31818 +
              C154445 * C31819 + C47143 * C4910 - C47144 * C4906 -
              C47143 * C4911 + C47139 * C4915 + C47141 * C4260 -
              C47142 * C4255 - C47141 * C4261 + C47138 * C4267) *
                 C154226 +
             (C52732 + C52731 + C52730) * C154406) *
                C154021 +
            ((C54128 + C54127 + C54126) * C154226 + C54119 * C154406) *
                C154373) *
               C154146) *
              C1685) *
         C154047) /
            (p * q * std::sqrt(p + q));
    d2ee[157] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                     C154406 +
                 C3210 * C154226) *
                    C11465 +
                (C11470 + C11471) * C11466 + C11480 * C11467 +
                C11481 * C154407) *
                   C154082 * C1307 -
               (C12097 * C154407 + C12098 * C11467 +
                (C11682 + C11683) * C11466 +
                (C3211 * C154226 + C3210 * C154406) * C11465) *
                   C154082 * C154118) *
                  C1309 +
              (((C11683 + C11682) * C11465 + (C11681 + C11680) * C11466 +
                (C11679 + C11678) * C11467 + (C12099 + C12100) * C154407) *
                   C154082 * C154118 -
               (C11482 * C154407 + C11483 * C11467 +
                (C11473 + C11472) * C11466 + (C11471 + C11470) * C11465) *
                   C154082 * C1307) *
                  C1310 +
              ((C11480 * C11465 + C11481 * C11466 + (C11477 + C11476) * C11467 +
                (C11478 + C11479) * C154407) *
                   C154082 * C1307 -
               (((C134 * C377 - C135 * C354 - C134 * C378 + C154181 * C390) *
                     C154226 +
                 C830 * C154406) *
                    C154407 +
                (C12100 + C12099) * C11467 + C12097 * C11466 +
                C12098 * C11465) *
                   C154082 * C154118) *
                  C1311) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                    C154406 +
                C3210 * C154226) *
                   C11465 +
               (C11470 + C11471) * C11466 + C11480 * C11467 +
               C11481 * C154407) *
                  C154082 * C1394 -
              (C12097 * C154407 + C12098 * C11467 + (C11682 + C11683) * C11466 +
               (C3211 * C154226 + C3210 * C154406) * C11465) *
                  C154082 * C1395 +
              ((C3211 * C154406 + C3214 * C154226) * C11465 +
               (C11684 + C11685) * C11466 + (C11686 + C11687) * C11467 +
               (C11688 + C11689) * C154407) *
                  C154082 * C1396 -
              (((C134 * C3149 - C135 * C3142 - C134 * C3150 + C154181 * C3154) *
                    C154226 +
                C3217 * C154406) *
                   C154407 +
               (C3216 * C154226 + C3212 * C154406) * C11467 +
               (C3215 * C154226 + C3213 * C154406) * C11466 +
               (C4687 * C154226 + C3214 * C154406) * C11465) *
                  C154082 * C1397) *
             C154047) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C154406 +
             C3210 * C154226) *
                C11465 +
            (C11470 + C11471) * C11466 + C11480 * C11467 + C11481 * C154407) *
               C577 -
           (C12295 * C154407 + C12296 * C11467 + (C11888 + C11889) * C11466 +
            (C4300 * C154226 +
             (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                 C154406) *
                C11465) *
               C578 +
           (((C134 * C602 - C135 * C585 - C134 * C603 + C154181 * C621) *
                 C154406 +
             C4930 * C154226) *
                C11465 +
            (C11890 + C11891) * C11466 + (C11892 + C11893) * C11467 +
            (C11894 + C11902) * C154407) *
               C579) *
              C1307 +
          (((C4300 * C154406 + C4299 * C154226) * C11465 +
            (C12557 + C12558) * C11466 + (C12559 + C12560) * C11467 +
            (C12561 + C12562) * C154407) *
               C578 -
           (C12097 * C154407 + C12098 * C11467 + (C11682 + C11683) * C11466 +
            (C3211 * C154226 + C3210 * C154406) * C11465) *
               C577 -
           (((C134 * C3451 - C135 * C3444 - C134 * C3452 + C154181 * C3456) *
                 C154226 +
             C11901 * C154406) *
                C154407 +
            (C3505 * C154226 + C3504 * C154406) * C11467 +
            (C3503 * C154226 + C3502 * C154406) * C11466 +
            (C4931 * C154226 + C4930 * C154406) * C11465) *
               C579) *
              C154118) *
         C154047) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C34729 +
             C3210 * C34730 + C3211 * C34731 + C3214 * C154415) *
                C154373 +
            (C34736 + C34737 + C34738 + C34739) * C154021) *
               C154082 * C1307 -
           ((C34942 + C34943 + C34944 + C34945) * C154021 +
            (C4687 * C154415 + C3214 * C34731 + C3211 * C34730 +
             C3210 * C34729) *
                C154373) *
               C154082 * C154118) *
              C1309 +
          (((C34945 + C34944 + C34943 + C34942) * C154373 +
            (C35353 + C35354 + C35355 + C35356) * C154021) *
               C154082 * C154118 -
           ((C34740 + C34741 + C34742 + C34743) * C154021 +
            (C34739 + C34738 + C34737 + C34736) * C154373) *
               C154082 * C1307) *
              C1310 +
          (((C34743 + C34742 + C34741 + C34740) * C154373 +
            (C34744 + C34745 + C34746 + C34747) * C154021) *
               C154082 * C1307 -
           (((C134 * C3149 - C135 * C3142 - C134 * C3150 + C154181 * C3154) *
                 C154415 +
             C3217 * C34731 + C446 * C34730 + C441 * C34729) *
                C154021 +
            (C35356 + C35355 + C35354 + C35353) * C154373) *
               C154082 * C154118) *
              C1311)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                C34729 +
            C3210 * C34730 + C3211 * C34731 + C3214 * C154415) *
               C154373 +
           (C34736 + C34737 + C34738 + C34739) * C154021) *
              C154082 * C1394 -
          ((C34942 + C34943 + C34944 + C34945) * C154021 +
           (C4687 * C154415 + C3214 * C34731 + C3211 * C34730 +
            C3210 * C34729) *
               C154373) *
              C154082 * C1395 +
          ((C3211 * C34729 + C3214 * C34730 + C4687 * C34731 +
            C28341 * C154415) *
               C154373 +
           (C34946 + C34947 + C34948 + C34949) * C154021) *
              C154082 * C1396 -
          (((C134 * C28324 - C135 * C28321 - C134 * C28325 + C154181 * C28327) *
                C154415 +
            C28342 * C34731 + C3215 * C34730 + C3213 * C34729) *
               C154021 +
           (C29115 * C154415 + C28341 * C34731 + C4687 * C34730 +
            C3214 * C34729) *
               C154373) *
              C154082 * C1397) *
         C154047) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C34729 +
             C3210 * C34730 + C3211 * C34731 + C3214 * C154415) *
                C154373 +
            (C34736 + C34737 + C34738 + C34739) * C154021) *
               C577 -
           ((C35144 + C35145 + C35146 + C35147) * C154021 +
            (C5676 * C154415 + C4299 * C34731 + C4300 * C34730 +
             (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                 C34729) *
                C154373) *
               C578 +
           (((C134 * C602 - C135 * C585 - C134 * C603 + C154181 * C621) *
                 C34729 +
             C4930 * C34730 + C4931 * C34731 + C29254 * C154415) *
                C154373 +
            (C35148 + C35149 + C35150 + C35158) * C154021) *
               C579) *
              C1307 +
          (((C4300 * C34729 + C4299 * C34730 + C5676 * C34731 +
             C28899 * C154415) *
                C154373 +
            (C35813 + C35814 + C35815 + C35816) * C154021) *
               C578 -
           ((C34942 + C34943 + C34944 + C34945) * C154021 +
            (C4687 * C154415 + C3214 * C34731 + C3211 * C34730 +
             C3210 * C34729) *
                C154373) *
               C577 -
           (((C134 * C28468 - C135 * C28465 - C134 * C28469 +
              C154181 * C28471) *
                 C154415 +
             C35157 * C34731 + C3503 * C34730 + C3502 * C34729) *
                C154021 +
            (C29255 * C154415 + C29254 * C34731 + C4931 * C34730 +
             C4930 * C34729) *
                C154373) *
               C579) *
              C154118) *
         C154047) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C47141 * C144 - C47142 * C136 - C47141 * C145 + C47138 * C160 +
              C47143 * C600 - C47144 * C584 - C47143 * C601 + C47139 * C620 +
              C47145 * C602 - C47146 * C585 - C47145 * C603 + C154445 * C621) *
                 C154406 +
             (C51712 + C51713 + C51714) * C154226) *
                C154373 +
            ((C47220 + C47221 + C47222) * C154406 + C58155 * C154226) *
                C154021) *
               C154082 * C1307 -
           ((C51699 * C154226 + C58156 * C154406) * C154021 +
            ((C51717 + C51716 + C51715) * C154226 +
             (C51714 + C51713 + C51712) * C154406) *
                C154373) *
               C154082 * C154118) *
              C1309 +
          (((C58155 * C154406 + C58157 * C154226) * C154373 +
            (C58760 * C154406 + (C47537 + C47538 + C47539) * C154226) *
                C154021) *
               C154082 * C154118 -
           ((C48073 * C154226 + (C47225 + C47224 + C47223) * C154406) *
                C154021 +
            (C58156 * C154226 + (C47222 + C47221 + C47220) * C154406) *
                C154373) *
               C154082 * C1307) *
              C1310 +
          (((C47234 * C154406 + C58760 * C154226) * C154373 +
            ((C47228 + C47227 + C47226) * C154406 +
             (C48081 + C48082 + C48083) * C154226) *
                C154021) *
               C154082 * C1307 -
           (((C47145 * C3451 - C47146 * C3444 - C47145 * C3452 +
              C154445 * C3456 + C47143 * C1979 - C47144 * C1973 -
              C47143 * C1980 + C47139 * C1988 + C47141 * C371 - C47142 * C351 -
              C47141 * C372 + C47138 * C387) *
                 C154226 +
             (C48083 + C48082 + C48081) * C154406) *
                C154021 +
            ((C47539 + C47538 + C47537) * C154226 + C48073 * C154406) *
                C154373) *
               C154082 * C154118) *
              C1311)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C47141 * C144 - C47142 * C136 - C47141 * C145 + C47138 * C160 +
             C47143 * C600 - C47144 * C584 - C47143 * C601 + C47139 * C620 +
             C47145 * C602 - C47146 * C585 - C47145 * C603 + C154445 * C621) *
                C154406 +
            (C51712 + C51713 + C51714) * C154226) *
               C154373 +
           ((C47220 + C47221 + C47222) * C154406 + C58155 * C154226) *
               C154021) *
              C154082 * C1394 -
          ((C51699 * C154226 + C58156 * C154406) * C154021 +
           ((C51717 + C51716 + C51715) * C154226 +
            (C51714 + C51713 + C51712) * C154406) *
               C154373) *
              C154082 * C1395 +
          ((C51725 * C154406 + (C51720 + C51719 + C51718) * C154226) * C154373 +
           (C58157 * C154406 + (C51721 + C51722 + C51723) * C154226) *
               C154021) *
              C154082 * C1396 -
          (((C47145 * C28468 - C47146 * C28465 - C47145 * C28469 +
             C154445 * C28471 + C47143 * C5662 - C47144 * C5658 -
             C47143 * C5663 + C47139 * C5667 + C47141 * C3145 - C47142 * C3140 -
             C47141 * C3146 + C47138 * C3152) *
                C154226 +
            (C51723 + C51722 + C51721) * C154406) *
               C154021 +
           ((C53119 + C53118 + C53117) * C154226 + C53110 * C154406) *
               C154373) *
              C154082 * C1397) *
         C154047) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C47141 * C144 - C47142 * C136 - C47141 * C145 + C47138 * C160 +
              C47143 * C600 - C47144 * C584 - C47143 * C601 + C47139 * C620 +
              C47145 * C602 - C47146 * C585 - C47145 * C603 + C154445 * C621) *
                 C154406 +
             (C51712 + C51713 + C51714) * C154226) *
                C154373 +
            ((C47220 + C47221 + C47222) * C154406 + C58155 * C154226) *
                C154021) *
               C577 -
           ((C59439 * C154226 + (C47833 + C47834 + C47835) * C154406) *
                C154021 +
            ((C52727 + C52728 + C52729) * C154226 +
             (C47145 * C2337 - C47146 * C2328 - C47145 * C2338 +
              C154445 * C2343 + C47143 * C602 - C47144 * C585 - C47143 * C603 +
              C47139 * C621 + C47141 * C600 - C47142 * C584 - C47141 * C601 +
              C47138 * C620) *
                 C154406) *
                C154373) *
               C578 +
           (((C47141 * C602 - C47142 * C585 - C47141 * C603 + C47138 * C621 +
              C47143 * C2337 - C47144 * C2328 - C47143 * C2338 +
              C47139 * C2343 + C47145 * C7777 - C47146 * C7773 -
              C47145 * C7778 + C154445 * C7785) *
                 C154406 +
             (C53374 + C53375 + C53376) * C154226) *
                C154373 +
            ((C47836 + C47837 + C47838) * C154406 +
             (C58466 + C58467 + C58468) * C154226) *
                C154021) *
               C579) *
              C1307 +
          ((((C52729 + C52728 + C52727) * C154406 +
             (C52726 + C52725 + C52724) * C154226) *
                C154373 +
            (C59440 * C154406 + (C52730 + C52731 + C52732) * C154226) *
                C154021) *
               C578 -
           ((C51699 * C154226 + C58156 * C154406) * C154021 +
            ((C51717 + C51716 + C51715) * C154226 +
             (C51714 + C51713 + C51712) * C154406) *
                C154373) *
               C577 -
           (((C47145 * C31086 - C47146 * C31083 - C47145 * C31087 +
              C154445 * C31089 + C47143 * C6268 - C47144 * C6260 -
              C47143 * C6269 + C47139 * C6278 + C47141 * C3447 -
              C47142 * C3442 - C47141 * C3448 + C47138 * C3454) *
                 C154226 +
             (C58468 + C58467 + C58466) * C154406) *
                C154021 +
            ((C53379 + C53378 + C53377) * C154226 +
             (C53376 + C53375 + C53374) * C154406) *
                C154373) *
               C579) *
              C154118) *
         C154047) /
            (p * q * std::sqrt(p + q));
    d2ee[158] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                  C34729 +
              C3210 * C34730 + C3211 * C34731 + C3214 * C154415) *
                 C154373 +
             (C34736 + C34737 + C34738 + C34739) * C154021) *
                C154393 -
            ((C35144 + C35145 + C35146 + C35147) * C154021 +
             (C5676 * C154415 + C4299 * C34731 + C4300 * C34730 +
              (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                  C34729) *
                 C154373) *
                C154146) *
               C1307 +
           (((C4300 * C34729 + C4299 * C34730 + C5676 * C34731 +
              C28899 * C154415) *
                 C154373 +
             (C35813 + C35814 + C35815 + C35816) * C154021) *
                C154146 -
            ((C34942 + C34943 + C34944 + C34945) * C154021 +
             (C4687 * C154415 + C3214 * C34731 + C3211 * C34730 +
              C3210 * C34729) *
                 C154373) *
                C154393) *
               C154118) *
              C154384 +
          ((((C35147 + C35146 + C35145 + C35144) * C154373 +
             (C35551 + C35552 + C35553 + C35554) * C154021) *
                C154146 -
            ((C34740 + C34741 + C34742 + C34743) * C154021 +
             (C34739 + C34738 + C34737 + C34736) * C154373) *
                C154393) *
               C1307 +
           (((C34945 + C34944 + C34943 + C34942) * C154373 +
             (C35353 + C35354 + C35355 + C35356) * C154021) *
                C154393 -
            (((C134 * C5660 - C135 * C5657 - C134 * C5661 + C154181 * C5666) *
                  C154415 +
              C4302 * C34731 + C3500 * C34730 + C1179 * C34729) *
                 C154021 +
             (C35816 + C35815 + C35814 + C35813) * C154373) *
                C154146) *
               C154118) *
              C154053)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                  C154406 +
              C3210 * C154226) *
                 C11465 +
             (C11470 + C11471) * C11466 + C11480 * C11467 + C11481 * C154407) *
                C154393 -
            (C12295 * C154407 + C12296 * C11467 + (C11888 + C11889) * C11466 +
             (C4300 * C154226 +
              (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                  C154406) *
                 C11465) *
                C154146) *
               C1307 +
           (((C4300 * C154406 + C4299 * C154226) * C11465 +
             (C12557 + C12558) * C11466 + (C12559 + C12560) * C11467 +
             (C12561 + C12562) * C154407) *
                C154146 -
            (C12097 * C154407 + C12098 * C11467 + (C11682 + C11683) * C11466 +
             (C3211 * C154226 + C3210 * C154406) * C11465) *
                C154393) *
               C154118) *
              C154384 +
          ((((C11889 + C11888) * C11465 + (C11887 + C11886) * C11466 +
             (C11885 + C11884) * C11467 + (C12297 + C12298) * C154407) *
                C154146 -
            (C11482 * C154407 + C11483 * C11467 + (C11473 + C11472) * C11466 +
             (C11471 + C11470) * C11465) *
                C154393) *
               C1307 +
           (((C11683 + C11682) * C11465 + (C11681 + C11680) * C11466 +
             (C11679 + C11678) * C11467 + (C12099 + C12100) * C154407) *
                C154393 -
            (((C134 * C1977 - C135 * C1972 - C134 * C1978 + C154181 * C1987) *
                  C154226 +
              C1181 * C154406) *
                 C154407 +
             (C12562 + C12561) * C11467 + (C12560 + C12559) * C11466 +
             (C12558 + C12557) * C11465) *
                C154146) *
               C154118) *
              C154053)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C47141 * C144 - C47142 * C136 - C47141 * C145 + C47138 * C160 +
               C47143 * C600 - C47144 * C584 - C47143 * C601 + C47139 * C620 +
               C47145 * C602 - C47146 * C585 - C47145 * C603 + C154445 * C621) *
                  C154406 +
              (C51712 + C51713 + C51714) * C154226) *
                 C154373 +
             ((C47220 + C47221 + C47222) * C154406 + C58155 * C154226) *
                 C154021) *
                C154393 -
            ((C59439 * C154226 + (C47833 + C47834 + C47835) * C154406) *
                 C154021 +
             ((C52727 + C52728 + C52729) * C154226 +
              (C47145 * C2337 - C47146 * C2328 - C47145 * C2338 +
               C154445 * C2343 + C47143 * C602 - C47144 * C585 - C47143 * C603 +
               C47139 * C621 + C47141 * C600 - C47142 * C584 - C47141 * C601 +
               C47138 * C620) *
                  C154406) *
                 C154373) *
                C154146) *
               C1307 +
           ((((C52729 + C52728 + C52727) * C154406 +
              (C52726 + C52725 + C52724) * C154226) *
                 C154373 +
             (C59440 * C154406 + (C52730 + C52731 + C52732) * C154226) *
                 C154021) *
                C154146 -
            ((C51699 * C154226 + C58156 * C154406) * C154021 +
             ((C51717 + C51716 + C51715) * C154226 +
              (C51714 + C51713 + C51712) * C154406) *
                 C154373) *
                C154393) *
               C154118) *
              C154384 +
          (((((C47835 + C47834 + C47833) * C154406 + C59440 * C154226) *
                 C154373 +
             ((C47832 + C47831 + C47830) * C154406 +
              (C48655 + C48656 + C48657) * C154226) *
                 C154021) *
                C154146 -
            ((C48073 * C154226 + (C47225 + C47224 + C47223) * C154406) *
                 C154021 +
             (C58156 * C154226 + (C47222 + C47221 + C47220) * C154406) *
                 C154373) *
                C154393) *
               C1307 +
           (((C58155 * C154406 + C58157 * C154226) * C154373 +
             (C58760 * C154406 + (C47537 + C47538 + C47539) * C154226) *
                 C154021) *
                C154393 -
            (((C47145 * C6264 - C47146 * C6258 - C47145 * C6265 +
               C154445 * C6276 + C47143 * C3449 - C47144 * C3443 -
               C47143 * C3450 + C47139 * C3455 + C47141 * C1981 -
               C47142 * C1974 - C47141 * C1982 + C47138 * C1989) *
                  C154226 +
              (C48657 + C48656 + C48655) * C154406) *
                 C154021 +
             ((C52732 + C52731 + C52730) * C154226 + C59439 * C154406) *
                 C154373) *
                C154146) *
               C154118) *
              C154053)) /
            (p * q * std::sqrt(p + q));
    d2ee[159] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                C154406 +
            C3210 * C154226) *
               C11465 +
           (C11470 + C11471) * C11466 + C11480 * C11467 + C11481 * C154407) *
              C154082 * C1394 -
          (C12097 * C154407 + C12098 * C11467 + (C11682 + C11683) * C11466 +
           (C3211 * C154226 + C3210 * C154406) * C11465) *
              C154082 * C1395 +
          ((C3211 * C154406 + C3214 * C154226) * C11465 +
           (C11684 + C11685) * C11466 + (C11686 + C11687) * C11467 +
           (C11688 + C11689) * C154407) *
              C154082 * C1396 -
          (((C134 * C3149 - C135 * C3142 - C134 * C3150 + C154181 * C3154) *
                C154226 +
            C3217 * C154406) *
               C154407 +
           (C3216 * C154226 + C3212 * C154406) * C11467 +
           (C3215 * C154226 + C3213 * C154406) * C11466 +
           (C4687 * C154226 + C3214 * C154406) * C11465) *
              C154082 * C1397) *
         C154047) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C154406 +
             C3210 * C154226) *
                C11465 +
            (C11470 + C11471) * C11466 + C11480 * C11467 + C11481 * C154407) *
               C154082 * C1307 -
           (C12097 * C154407 + C12098 * C11467 + (C11682 + C11683) * C11466 +
            (C3211 * C154226 + C3210 * C154406) * C11465) *
               C154082 * C154118) *
              C1309 +
          (((C11683 + C11682) * C11465 + (C11681 + C11680) * C11466 +
            (C11679 + C11678) * C11467 + (C12099 + C12100) * C154407) *
               C154082 * C154118 -
           (C11482 * C154407 + C11483 * C11467 + (C11473 + C11472) * C11466 +
            (C11471 + C11470) * C11465) *
               C154082 * C1307) *
              C1310 +
          ((C11480 * C11465 + C11481 * C11466 + (C11477 + C11476) * C11467 +
            (C11478 + C11479) * C154407) *
               C154082 * C1307 -
           (((C134 * C377 - C135 * C354 - C134 * C378 + C154181 * C390) *
                 C154226 +
             C830 * C154406) *
                C154407 +
            (C12100 + C12099) * C11467 + C12097 * C11466 + C12098 * C11465) *
               C154082 * C154118) *
              C1311)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C34729 +
             C3210 * C34730 + C3211 * C34731 + C3214 * C154415) *
                C154373 +
            (C34736 + C34737 + C34738 + C34739) * C154021) *
               C154082 * C1307 -
           ((C34942 + C34943 + C34944 + C34945) * C154021 +
            (C4687 * C154415 + C3214 * C34731 + C3211 * C34730 +
             C3210 * C34729) *
                C154373) *
               C154082 * C154118) *
              C1309 +
          (((C34945 + C34944 + C34943 + C34942) * C154373 +
            (C35353 + C35354 + C35355 + C35356) * C154021) *
               C154082 * C154118 -
           ((C34740 + C34741 + C34742 + C34743) * C154021 +
            (C34739 + C34738 + C34737 + C34736) * C154373) *
               C154082 * C1307) *
              C1310 +
          (((C34743 + C34742 + C34741 + C34740) * C154373 +
            (C34744 + C34745 + C34746 + C34747) * C154021) *
               C154082 * C1307 -
           (((C134 * C3149 - C135 * C3142 - C134 * C3150 + C154181 * C3154) *
                 C154415 +
             C3217 * C34731 + C446 * C34730 + C441 * C34729) *
                C154021 +
            (C35356 + C35355 + C35354 + C35353) * C154373) *
               C154082 * C154118) *
              C1311)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                C34729 +
            C3210 * C34730 + C3211 * C34731 + C3214 * C154415) *
               C154373 +
           (C34736 + C34737 + C34738 + C34739) * C154021) *
              C154082 * C1394 -
          ((C34942 + C34943 + C34944 + C34945) * C154021 +
           (C4687 * C154415 + C3214 * C34731 + C3211 * C34730 +
            C3210 * C34729) *
               C154373) *
              C154082 * C1395 +
          ((C3211 * C34729 + C3214 * C34730 + C4687 * C34731 +
            C28341 * C154415) *
               C154373 +
           (C34946 + C34947 + C34948 + C34949) * C154021) *
              C154082 * C1396 -
          (((C134 * C28324 - C135 * C28321 - C134 * C28325 + C154181 * C28327) *
                C154415 +
            C28342 * C34731 + C3215 * C34730 + C3213 * C34729) *
               C154021 +
           (C29115 * C154415 + C28341 * C34731 + C4687 * C34730 +
            C3214 * C34729) *
               C154373) *
              C154082 * C1397) *
         C154047) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C47141 * C144 - C47142 * C136 - C47141 * C145 + C47138 * C160 +
              C47143 * C600 - C47144 * C584 - C47143 * C601 + C47139 * C620 +
              C47145 * C602 - C47146 * C585 - C47145 * C603 + C154445 * C621) *
                 C154406 +
             (C51712 + C51713 + C51714) * C154226) *
                C154373 +
            ((C47220 + C47221 + C47222) * C154406 + C58155 * C154226) *
                C154021) *
               C154082 * C1307 -
           ((C51699 * C154226 + C58156 * C154406) * C154021 +
            ((C51717 + C51716 + C51715) * C154226 +
             (C51714 + C51713 + C51712) * C154406) *
                C154373) *
               C154082 * C154118) *
              C1309 +
          (((C58155 * C154406 + C58157 * C154226) * C154373 +
            (C58760 * C154406 + (C47537 + C47538 + C47539) * C154226) *
                C154021) *
               C154082 * C154118 -
           ((C48073 * C154226 + (C47225 + C47224 + C47223) * C154406) *
                C154021 +
            (C58156 * C154226 + (C47222 + C47221 + C47220) * C154406) *
                C154373) *
               C154082 * C1307) *
              C1310 +
          (((C47234 * C154406 + C58760 * C154226) * C154373 +
            ((C47228 + C47227 + C47226) * C154406 +
             (C48081 + C48082 + C48083) * C154226) *
                C154021) *
               C154082 * C1307 -
           (((C47145 * C3451 - C47146 * C3444 - C47145 * C3452 +
              C154445 * C3456 + C47143 * C1979 - C47144 * C1973 -
              C47143 * C1980 + C47139 * C1988 + C47141 * C371 - C47142 * C351 -
              C47141 * C372 + C47138 * C387) *
                 C154226 +
             (C48083 + C48082 + C48081) * C154406) *
                C154021 +
            ((C47539 + C47538 + C47537) * C154226 + C48073 * C154406) *
                C154373) *
               C154082 * C154118) *
              C1311)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C47141 * C144 - C47142 * C136 - C47141 * C145 + C47138 * C160 +
             C47143 * C600 - C47144 * C584 - C47143 * C601 + C47139 * C620 +
             C47145 * C602 - C47146 * C585 - C47145 * C603 + C154445 * C621) *
                C154406 +
            (C51712 + C51713 + C51714) * C154226) *
               C154373 +
           ((C47220 + C47221 + C47222) * C154406 + C58155 * C154226) *
               C154021) *
              C154082 * C1394 -
          ((C51699 * C154226 + C58156 * C154406) * C154021 +
           ((C51717 + C51716 + C51715) * C154226 +
            (C51714 + C51713 + C51712) * C154406) *
               C154373) *
              C154082 * C1395 +
          ((C51725 * C154406 + (C51720 + C51719 + C51718) * C154226) * C154373 +
           (C58157 * C154406 + (C51721 + C51722 + C51723) * C154226) *
               C154021) *
              C154082 * C1396 -
          (((C47145 * C28468 - C47146 * C28465 - C47145 * C28469 +
             C154445 * C28471 + C47143 * C5662 - C47144 * C5658 -
             C47143 * C5663 + C47139 * C5667 + C47141 * C3145 - C47142 * C3140 -
             C47141 * C3146 + C47138 * C3152) *
                C154226 +
            (C51723 + C51722 + C51721) * C154406) *
               C154021 +
           ((C53119 + C53118 + C53117) * C154226 + C53110 * C154406) *
               C154373) *
              C154082 * C1397) *
         C154047) /
            (p * q * std::sqrt(p + q));
    d2ee[160] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                  C34729 +
              C3210 * C34730 + C3211 * C34731 + C3214 * C154415) *
                 C154373 +
             (C34736 + C34737 + C34738 + C34739) * C154021) *
                C2114 -
            ((C35144 + C35145 + C35146 + C35147) * C154021 +
             (C5676 * C154415 + C4299 * C34731 + C4300 * C34730 +
              (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                  C34729) *
                 C154373) *
                C154146) *
               C154392 +
           (((C4300 * C34729 + C4299 * C34730 + C5676 * C34731 +
              C28899 * C154415) *
                 C154373 +
             (C35813 + C35814 + C35815 + C35816) * C154021) *
                C154146 -
            ((C34942 + C34943 + C34944 + C34945) * C154021 +
             (C4687 * C154415 + C3214 * C34731 + C3211 * C34730 +
              C3210 * C34729) *
                 C154373) *
                C2114) *
               C154118) *
              C154384 +
          ((((C35147 + C35146 + C35145 + C35144) * C154373 +
             (C35551 + C35552 + C35553 + C35554) * C154021) *
                C154146 -
            ((C34740 + C34741 + C34742 + C34743) * C154021 +
             (C34739 + C34738 + C34737 + C34736) * C154373) *
                C2114) *
               C154392 +
           (((C34945 + C34944 + C34943 + C34942) * C154373 +
             (C35353 + C35354 + C35355 + C35356) * C154021) *
                C2114 -
            (((C134 * C5660 - C135 * C5657 - C134 * C5661 + C154181 * C5666) *
                  C154415 +
              C4302 * C34731 + C3500 * C34730 + C1179 * C34729) *
                 C154021 +
             (C35816 + C35815 + C35814 + C35813) * C154373) *
                C154146) *
               C154118) *
              C154053)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                  C154406 +
              C3210 * C154226) *
                 C11465 +
             (C11470 + C11471) * C11466 + C11480 * C11467 + C11481 * C154407) *
                C2114 -
            (C12295 * C154407 + C12296 * C11467 + (C11888 + C11889) * C11466 +
             (C4300 * C154226 +
              (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                  C154406) *
                 C11465) *
                C154146) *
               C154392 +
           (((C4300 * C154406 + C4299 * C154226) * C11465 +
             (C12557 + C12558) * C11466 + (C12559 + C12560) * C11467 +
             (C12561 + C12562) * C154407) *
                C154146 -
            (C12097 * C154407 + C12098 * C11467 + (C11682 + C11683) * C11466 +
             (C3211 * C154226 + C3210 * C154406) * C11465) *
                C2114) *
               C154118) *
              C154384 +
          ((((C11889 + C11888) * C11465 + (C11887 + C11886) * C11466 +
             (C11885 + C11884) * C11467 + (C12297 + C12298) * C154407) *
                C154146 -
            (C11482 * C154407 + C11483 * C11467 + (C11473 + C11472) * C11466 +
             (C11471 + C11470) * C11465) *
                C2114) *
               C154392 +
           (((C11683 + C11682) * C11465 + (C11681 + C11680) * C11466 +
             (C11679 + C11678) * C11467 + (C12099 + C12100) * C154407) *
                C2114 -
            (((C134 * C1977 - C135 * C1972 - C134 * C1978 + C154181 * C1987) *
                  C154226 +
              C1181 * C154406) *
                 C154407 +
             (C12562 + C12561) * C11467 + (C12560 + C12559) * C11466 +
             (C12558 + C12557) * C11465) *
                C154146) *
               C154118) *
              C154053)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C47141 * C144 - C47142 * C136 - C47141 * C145 + C47138 * C160 +
               C47143 * C600 - C47144 * C584 - C47143 * C601 + C47139 * C620 +
               C47145 * C602 - C47146 * C585 - C47145 * C603 + C154445 * C621) *
                  C154406 +
              (C51712 + C51713 + C51714) * C154226) *
                 C154373 +
             ((C47220 + C47221 + C47222) * C154406 + C58155 * C154226) *
                 C154021) *
                C2114 -
            ((C59439 * C154226 + (C47833 + C47834 + C47835) * C154406) *
                 C154021 +
             ((C52727 + C52728 + C52729) * C154226 +
              (C47145 * C2337 - C47146 * C2328 - C47145 * C2338 +
               C154445 * C2343 + C47143 * C602 - C47144 * C585 - C47143 * C603 +
               C47139 * C621 + C47141 * C600 - C47142 * C584 - C47141 * C601 +
               C47138 * C620) *
                  C154406) *
                 C154373) *
                C154146) *
               C154392 +
           ((((C52729 + C52728 + C52727) * C154406 +
              (C52726 + C52725 + C52724) * C154226) *
                 C154373 +
             (C59440 * C154406 + (C52730 + C52731 + C52732) * C154226) *
                 C154021) *
                C154146 -
            ((C51699 * C154226 + C58156 * C154406) * C154021 +
             ((C51717 + C51716 + C51715) * C154226 +
              (C51714 + C51713 + C51712) * C154406) *
                 C154373) *
                C2114) *
               C154118) *
              C154384 +
          (((((C47835 + C47834 + C47833) * C154406 + C59440 * C154226) *
                 C154373 +
             ((C47832 + C47831 + C47830) * C154406 +
              (C48655 + C48656 + C48657) * C154226) *
                 C154021) *
                C154146 -
            ((C48073 * C154226 + (C47225 + C47224 + C47223) * C154406) *
                 C154021 +
             (C58156 * C154226 + (C47222 + C47221 + C47220) * C154406) *
                 C154373) *
                C2114) *
               C154392 +
           (((C58155 * C154406 + C58157 * C154226) * C154373 +
             (C58760 * C154406 + (C47537 + C47538 + C47539) * C154226) *
                 C154021) *
                C2114 -
            (((C47145 * C6264 - C47146 * C6258 - C47145 * C6265 +
               C154445 * C6276 + C47143 * C3449 - C47144 * C3443 -
               C47143 * C3450 + C47139 * C3455 + C47141 * C1981 -
               C47142 * C1974 - C47141 * C1982 + C47138 * C1989) *
                  C154226 +
              (C48657 + C48656 + C48655) * C154406) *
                 C154021 +
             ((C52732 + C52731 + C52730) * C154226 + C59439 * C154406) *
                 C154373) *
                C154146) *
               C154118) *
              C154053)) /
            (p * q * std::sqrt(p + q));
    d2ee[161] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C34729 +
             C3210 * C34730 + C3211 * C34731 + C3214 * C154415) *
                C154373 +
            (C34736 + C34737 + C34738 + C34739) * C154021) *
               C154465 -
           ((C35144 + C35145 + C35146 + C35147) * C154021 +
            (C5676 * C154415 + C4299 * C34731 + C4300 * C34730 +
             (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                 C34729) *
                C154373) *
               C154466 +
           (((C134 * C602 - C135 * C585 - C134 * C603 + C154181 * C621) *
                 C34729 +
             C4930 * C34730 + C4931 * C34731 + C29254 * C154415) *
                C154373 +
            (C35148 + C35149 + C35150 + C35158) * C154021) *
               C2630) *
              C154392 +
          (((C4300 * C34729 + C4299 * C34730 + C5676 * C34731 +
             C28899 * C154415) *
                C154373 +
            (C35813 + C35814 + C35815 + C35816) * C154021) *
               C154466 -
           ((C34942 + C34943 + C34944 + C34945) * C154021 +
            (C4687 * C154415 + C3214 * C34731 + C3211 * C34730 +
             C3210 * C34729) *
                C154373) *
               C154465 -
           (((C134 * C28468 - C135 * C28465 - C134 * C28469 +
              C154181 * C28471) *
                 C154415 +
             C35157 * C34731 + C3503 * C34730 + C3502 * C34729) *
                C154021 +
            (C29255 * C154415 + C29254 * C34731 + C4931 * C34730 +
             C4930 * C34729) *
                C154373) *
               C2630) *
              C154118) *
         C154047) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C154406 +
             C3210 * C154226) *
                C11465 +
            (C11470 + C11471) * C11466 + C11480 * C11467 + C11481 * C154407) *
               C154465 -
           (C12295 * C154407 + C12296 * C11467 + (C11888 + C11889) * C11466 +
            (C4300 * C154226 +
             (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                 C154406) *
                C11465) *
               C154466 +
           (((C134 * C602 - C135 * C585 - C134 * C603 + C154181 * C621) *
                 C154406 +
             C4930 * C154226) *
                C11465 +
            (C11890 + C11891) * C11466 + (C11892 + C11893) * C11467 +
            (C11894 + C11902) * C154407) *
               C2630) *
              C154392 +
          (((C4300 * C154406 + C4299 * C154226) * C11465 +
            (C12557 + C12558) * C11466 + (C12559 + C12560) * C11467 +
            (C12561 + C12562) * C154407) *
               C154466 -
           (C12097 * C154407 + C12098 * C11467 + (C11682 + C11683) * C11466 +
            (C3211 * C154226 + C3210 * C154406) * C11465) *
               C154465 -
           (((C134 * C3451 - C135 * C3444 - C134 * C3452 + C154181 * C3456) *
                 C154226 +
             C11901 * C154406) *
                C154407 +
            (C3505 * C154226 + C3504 * C154406) * C11467 +
            (C3503 * C154226 + C3502 * C154406) * C11466 +
            (C4931 * C154226 + C4930 * C154406) * C11465) *
               C2630) *
              C154118) *
         C154047) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C47141 * C144 - C47142 * C136 - C47141 * C145 + C47138 * C160 +
              C47143 * C600 - C47144 * C584 - C47143 * C601 + C47139 * C620 +
              C47145 * C602 - C47146 * C585 - C47145 * C603 + C154445 * C621) *
                 C154406 +
             (C51712 + C51713 + C51714) * C154226) *
                C154373 +
            ((C47220 + C47221 + C47222) * C154406 + C58155 * C154226) *
                C154021) *
               C154465 -
           ((C59439 * C154226 + (C47833 + C47834 + C47835) * C154406) *
                C154021 +
            ((C52727 + C52728 + C52729) * C154226 +
             (C47145 * C2337 - C47146 * C2328 - C47145 * C2338 +
              C154445 * C2343 + C47143 * C602 - C47144 * C585 - C47143 * C603 +
              C47139 * C621 + C47141 * C600 - C47142 * C584 - C47141 * C601 +
              C47138 * C620) *
                 C154406) *
                C154373) *
               C154466 +
           (((C47141 * C602 - C47142 * C585 - C47141 * C603 + C47138 * C621 +
              C47143 * C2337 - C47144 * C2328 - C47143 * C2338 +
              C47139 * C2343 + C47145 * C7777 - C47146 * C7773 -
              C47145 * C7778 + C154445 * C7785) *
                 C154406 +
             (C53374 + C53375 + C53376) * C154226) *
                C154373 +
            ((C47836 + C47837 + C47838) * C154406 +
             (C58466 + C58467 + C58468) * C154226) *
                C154021) *
               C2630) *
              C154392 +
          ((((C52729 + C52728 + C52727) * C154406 +
             (C52726 + C52725 + C52724) * C154226) *
                C154373 +
            (C59440 * C154406 + (C52730 + C52731 + C52732) * C154226) *
                C154021) *
               C154466 -
           ((C51699 * C154226 + C58156 * C154406) * C154021 +
            ((C51717 + C51716 + C51715) * C154226 +
             (C51714 + C51713 + C51712) * C154406) *
                C154373) *
               C154465 -
           (((C47145 * C31086 - C47146 * C31083 - C47145 * C31087 +
              C154445 * C31089 + C47143 * C6268 - C47144 * C6260 -
              C47143 * C6269 + C47139 * C6278 + C47141 * C3447 -
              C47142 * C3442 - C47141 * C3448 + C47138 * C3454) *
                 C154226 +
             (C58468 + C58467 + C58466) * C154406) *
                C154021 +
            ((C53379 + C53378 + C53377) * C154226 +
             (C53376 + C53375 + C53374) * C154406) *
                C154373) *
               C2630) *
              C154118) *
         C154047) /
            (p * q * std::sqrt(p + q));
    d2ee[162] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                     C154406 +
                 C3210 * C154226) *
                    C11465 +
                (C11470 + C11471) * C11466 + C11480 * C11467 +
                C11481 * C154407) *
                   C2114 -
               (C12295 * C154407 + C12296 * C11467 +
                (C11888 + C11889) * C11466 +
                (C4300 * C154226 +
                 (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                     C154406) *
                    C11465) *
                   C154146) *
                  C154066 * C1309 +
              (((C11889 + C11888) * C11465 + (C11887 + C11886) * C11466 +
                (C11885 + C11884) * C11467 + (C12297 + C12298) * C154407) *
                   C154146 -
               (C11482 * C154407 + C11483 * C11467 +
                (C11473 + C11472) * C11466 + (C11471 + C11470) * C11465) *
                   C2114) *
                  C154066 * C1310 +
              ((C11480 * C11465 + C11481 * C11466 + (C11477 + C11476) * C11467 +
                (C11478 + C11479) * C154407) *
                   C2114 -
               (((C134 * C1145 - C135 * C1134 - C134 * C1146 +
                  C154181 * C1152) *
                     C154226 +
                 C966 * C154406) *
                    C154407 +
                (C12298 + C12297) * C11467 + C12295 * C11466 +
                C12296 * C11465) *
                   C154146) *
                  C154066 * C1311) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                     C154406 +
                 C3210 * C154226) *
                    C11465 +
                (C11470 + C11471) * C11466 + C11480 * C11467 +
                C11481 * C154407) *
                   C2114 -
               (C12295 * C154407 + C12296 * C11467 +
                (C11888 + C11889) * C11466 +
                (C4300 * C154226 +
                 (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                     C154406) *
                    C11465) *
                   C154146) *
                  C338 +
              (((C4300 * C154406 + C4299 * C154226) * C11465 +
                (C12557 + C12558) * C11466 + (C12559 + C12560) * C11467 +
                (C12561 + C12562) * C154407) *
                   C154146 -
               (C12097 * C154407 + C12098 * C11467 +
                (C11682 + C11683) * C11466 +
                (C3211 * C154226 + C3210 * C154406) * C11465) *
                   C2114) *
                  C339 +
              (((C3211 * C154406 + C3214 * C154226) * C11465 +
                (C11684 + C11685) * C11466 + (C11686 + C11687) * C11467 +
                (C11688 + C11689) * C154407) *
                   C2114 -
               (((C134 * C4264 - C135 * C4257 - C134 * C4265 +
                  C154181 * C4269) *
                     C154226 +
                 C3963 * C154406) *
                    C154407 +
                (C4302 * C154226 + C3500 * C154406) * C11467 +
                (C4301 * C154226 + C3501 * C154406) * C11466 +
                (C5676 * C154226 + C4299 * C154406) * C11465) *
                   C154146) *
                  C340) *
             C154047) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                C154406 +
            C3210 * C154226) *
               C11465 +
           (C11470 + C11471) * C11466 + C11480 * C11467 + C11481 * C154407) *
              C2320 -
          (C12295 * C154407 + C12296 * C11467 + (C11888 + C11889) * C11466 +
           (C4300 * C154226 +
            (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                C154406) *
               C11465) *
              C2321 +
          (((C134 * C602 - C135 * C585 - C134 * C603 + C154181 * C621) *
                C154406 +
            C4930 * C154226) *
               C11465 +
           (C11890 + C11891) * C11466 + (C11892 + C11893) * C11467 +
           (C11894 + C11902) * C154407) *
              C2322 -
          (((C134 * C8648 - C135 * C8647 - C134 * C8649 + C154181 * C8650) *
                C154226 +
            (C134 * C2331 - C135 * C2325 - C134 * C2332 + C154181 * C2340) *
                C154406) *
               C154407 +
           ((C134 * C6266 - C135 * C6259 - C134 * C6267 + C154181 * C6277) *
                C154226 +
            (C134 * C2333 - C135 * C2326 - C134 * C2334 + C154181 * C2341) *
                C154406) *
               C11467 +
           ((C134 * C6270 - C135 * C6261 - C134 * C6271 + C154181 * C6279) *
                C154226 +
            (C134 * C2335 - C135 * C2327 - C134 * C2336 + C154181 * C2342) *
                C154406) *
               C11466 +
           ((C134 * C6274 - C135 * C6263 - C134 * C6275 + C154181 * C6281) *
                C154226 +
            (C134 * C2337 - C135 * C2328 - C134 * C2338 + C154181 * C2343) *
                C154406) *
               C11465) *
              C2323) *
         C154066 * C154047) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C34729 +
             C3210 * C34730 + C3211 * C34731 + C3214 * C154415) *
                C154373 +
            (C34736 + C34737 + C34738 + C34739) * C154021) *
               C2114 -
           ((C35144 + C35145 + C35146 + C35147) * C154021 +
            (C5676 * C154415 + C4299 * C34731 + C4300 * C34730 +
             (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                 C34729) *
                C154373) *
               C154146) *
              C154066 * C1309 +
          (((C35147 + C35146 + C35145 + C35144) * C154373 +
            (C35551 + C35552 + C35553 + C35554) * C154021) *
               C154146 -
           ((C34740 + C34741 + C34742 + C34743) * C154021 +
            (C34739 + C34738 + C34737 + C34736) * C154373) *
               C2114) *
              C154066 * C1310 +
          (((C34743 + C34742 + C34741 + C34740) * C154373 +
            (C34744 + C34745 + C34746 + C34747) * C154021) *
               C2114 -
           (((C134 * C4264 - C135 * C4257 - C134 * C4265 + C154181 * C4269) *
                 C154415 +
             C3963 * C34731 + C1180 * C34730 + C678 * C34729) *
                C154021 +
            (C35554 + C35553 + C35552 + C35551) * C154373) *
               C154146) *
              C154066 * C1311)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C34729 +
             C3210 * C34730 + C3211 * C34731 + C3214 * C154415) *
                C154373 +
            (C34736 + C34737 + C34738 + C34739) * C154021) *
               C2114 -
           ((C35144 + C35145 + C35146 + C35147) * C154021 +
            (C5676 * C154415 + C4299 * C34731 + C4300 * C34730 +
             (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                 C34729) *
                C154373) *
               C154146) *
              C338 +
          (((C4300 * C34729 + C4299 * C34730 + C5676 * C34731 +
             C28899 * C154415) *
                C154373 +
            (C35813 + C35814 + C35815 + C35816) * C154021) *
               C154146 -
           ((C34942 + C34943 + C34944 + C34945) * C154021 +
            (C4687 * C154415 + C3214 * C34731 + C3211 * C34730 +
             C3210 * C34729) *
                C154373) *
               C2114) *
              C339 +
          (((C3211 * C34729 + C3214 * C34730 + C4687 * C34731 +
             C28341 * C154415) *
                C154373 +
            (C34946 + C34947 + C34948 + C34949) * C154021) *
               C2114 -
           (((C134 * C28882 - C135 * C28879 - C134 * C28883 +
              C154181 * C28885) *
                 C154415 +
             C28900 * C34731 + C4301 * C34730 + C3501 * C34729) *
                C154021 +
            (C29672 * C154415 + C28899 * C34731 + C5676 * C34730 +
             C4299 * C34729) *
                C154373) *
               C154146) *
              C340) *
         C154047) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                C34729 +
            C3210 * C34730 + C3211 * C34731 + C3214 * C154415) *
               C154373 +
           (C34736 + C34737 + C34738 + C34739) * C154021) *
              C2320 -
          ((C35144 + C35145 + C35146 + C35147) * C154021 +
           (C5676 * C154415 + C4299 * C34731 + C4300 * C34730 +
            (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                C34729) *
               C154373) *
              C2321 +
          (((C134 * C602 - C135 * C585 - C134 * C603 + C154181 * C621) *
                C34729 +
            C4930 * C34730 + C4931 * C34731 + C29254 * C154415) *
               C154373 +
           (C35148 + C35149 + C35150 + C35158) * C154021) *
              C2322 -
          (((C134 * C31817 - C135 * C31816 - C134 * C31818 + C154181 * C31819) *
                C154415 +
            (C134 * C6268 - C135 * C6260 - C134 * C6269 + C154181 * C6278) *
                C34731 +
            (C134 * C6270 - C135 * C6261 - C134 * C6271 + C154181 * C6279) *
                C34730 +
            (C134 * C2335 - C135 * C2327 - C134 * C2336 + C154181 * C2342) *
                C34729) *
               C154021 +
           ((C134 * C30002 - C135 * C29999 - C134 * C30003 + C154181 * C30005) *
                C154415 +
            (C134 * C6272 - C135 * C6262 - C134 * C6273 + C154181 * C6280) *
                C34731 +
            (C134 * C6274 - C135 * C6263 - C134 * C6275 + C154181 * C6281) *
                C34730 +
            (C134 * C2337 - C135 * C2328 - C134 * C2338 + C154181 * C2343) *
                C34729) *
               C154373) *
              C2323) *
         C154066 * C154047) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C47141 * C144 - C47142 * C136 - C47141 * C145 + C47138 * C160 +
              C47143 * C600 - C47144 * C584 - C47143 * C601 + C47139 * C620 +
              C47145 * C602 - C47146 * C585 - C47145 * C603 + C154445 * C621) *
                 C154406 +
             (C51712 + C51713 + C51714) * C154226) *
                C154373 +
            ((C47220 + C47221 + C47222) * C154406 + C58155 * C154226) *
                C154021) *
               C2114 -
           ((C59439 * C154226 + (C47833 + C47834 + C47835) * C154406) *
                C154021 +
            ((C52727 + C52728 + C52729) * C154226 +
             (C47145 * C2337 - C47146 * C2328 - C47145 * C2338 +
              C154445 * C2343 + C47143 * C602 - C47144 * C585 - C47143 * C603 +
              C47139 * C621 + C47141 * C600 - C47142 * C584 - C47141 * C601 +
              C47138 * C620) *
                 C154406) *
                C154373) *
               C154146) *
              C154066 * C1309 +
          ((((C47835 + C47834 + C47833) * C154406 + C59440 * C154226) *
                C154373 +
            ((C47832 + C47831 + C47830) * C154406 +
             (C48655 + C48656 + C48657) * C154226) *
                C154021) *
               C154146 -
           ((C48073 * C154226 + (C47225 + C47224 + C47223) * C154406) *
                C154021 +
            (C58156 * C154226 + (C47222 + C47221 + C47220) * C154406) *
                C154373) *
               C2114) *
              C154066 * C1310 +
          (((C47234 * C154406 + C58760 * C154226) * C154373 +
            ((C47228 + C47227 + C47226) * C154406 +
             (C48081 + C48082 + C48083) * C154226) *
                C154021) *
               C2114 -
           (((C47145 * C8648 - C47146 * C8647 - C47145 * C8649 +
              C154445 * C8650 + C47143 * C1548 - C47144 * C1542 -
              C47143 * C1549 + C47139 * C1557 + C47141 * C1141 -
              C47142 * C1132 - C47141 * C1142 + C47138 * C1150) *
                 C154226 +
             (C48325 + C48324 + C48323) * C154406) *
                C154021 +
            ((C48657 + C48656 + C48655) * C154226 + C48315 * C154406) *
                C154373) *
               C154146) *
              C154066 * C1311)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C47141 * C144 - C47142 * C136 - C47141 * C145 + C47138 * C160 +
              C47143 * C600 - C47144 * C584 - C47143 * C601 + C47139 * C620 +
              C47145 * C602 - C47146 * C585 - C47145 * C603 + C154445 * C621) *
                 C154406 +
             (C51712 + C51713 + C51714) * C154226) *
                C154373 +
            ((C47220 + C47221 + C47222) * C154406 + C58155 * C154226) *
                C154021) *
               C2114 -
           ((C59439 * C154226 + (C47833 + C47834 + C47835) * C154406) *
                C154021 +
            ((C52727 + C52728 + C52729) * C154226 +
             (C47145 * C2337 - C47146 * C2328 - C47145 * C2338 +
              C154445 * C2343 + C47143 * C602 - C47144 * C585 - C47143 * C603 +
              C47139 * C621 + C47141 * C600 - C47142 * C584 - C47141 * C601 +
              C47138 * C620) *
                 C154406) *
                C154373) *
               C154146) *
              C338 +
          ((((C52729 + C52728 + C52727) * C154406 +
             (C52726 + C52725 + C52724) * C154226) *
                C154373 +
            (C59440 * C154406 + (C52730 + C52731 + C52732) * C154226) *
                C154021) *
               C154146 -
           ((C51699 * C154226 + C58156 * C154406) * C154021 +
            ((C51717 + C51716 + C51715) * C154226 +
             (C51714 + C51713 + C51712) * C154406) *
                C154373) *
               C2114) *
              C339 +
          (((C51725 * C154406 + (C51720 + C51719 + C51718) * C154226) *
                C154373 +
            (C58157 * C154406 + (C51721 + C51722 + C51723) * C154226) *
                C154021) *
               C2114 -
           (((C47145 * C31817 - C47146 * C31816 - C47145 * C31818 +
              C154445 * C31819 + C47143 * C4910 - C47144 * C4906 -
              C47143 * C4911 + C47139 * C4915 + C47141 * C4260 -
              C47142 * C4255 - C47141 * C4261 + C47138 * C4267) *
                 C154226 +
             (C52732 + C52731 + C52730) * C154406) *
                C154021 +
            ((C54128 + C54127 + C54126) * C154226 + C54119 * C154406) *
                C154373) *
               C154146) *
              C340) *
         C154047) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C47141 * C144 - C47142 * C136 - C47141 * C145 + C47138 * C160 +
             C47143 * C600 - C47144 * C584 - C47143 * C601 + C47139 * C620 +
             C47145 * C602 - C47146 * C585 - C47145 * C603 + C154445 * C621) *
                C154406 +
            (C51712 + C51713 + C51714) * C154226) *
               C154373 +
           ((C47220 + C47221 + C47222) * C154406 + C58155 * C154226) *
               C154021) *
              C2320 -
          ((C59439 * C154226 + (C47833 + C47834 + C47835) * C154406) * C154021 +
           ((C52727 + C52728 + C52729) * C154226 +
            (C47145 * C2337 - C47146 * C2328 - C47145 * C2338 +
             C154445 * C2343 + C47143 * C602 - C47144 * C585 - C47143 * C603 +
             C47139 * C621 + C47141 * C600 - C47142 * C584 - C47141 * C601 +
             C47138 * C620) *
                C154406) *
               C154373) *
              C2321 +
          (((C47141 * C602 - C47142 * C585 - C47141 * C603 + C47138 * C621 +
             C47143 * C2337 - C47144 * C2328 - C47143 * C2338 + C47139 * C2343 +
             C47145 * C7777 - C47146 * C7773 - C47145 * C7778 +
             C154445 * C7785) *
                C154406 +
            (C53374 + C53375 + C53376) * C154226) *
               C154373 +
           ((C47836 + C47837 + C47838) * C154406 +
            (C58466 + C58467 + C58468) * C154226) *
               C154021) *
              C2322 -
          (((C47145 * C56192 - C47146 * C56191 - C47145 * C56193 +
             C154445 * C56194 + C47143 * C9280 - C47144 * C9276 -
             C47143 * C9281 + C47139 * C9285 + C47141 * C6270 - C47142 * C6261 -
             C47141 * C6271 + C47138 * C6279) *
                C154226 +
            (C47145 * C10600 - C47146 * C10596 - C47145 * C10601 +
             C154445 * C10605 + C47143 * C7779 - C47144 * C7774 -
             C47143 * C7780 + C47139 * C7786 + C47141 * C2335 - C47142 * C2327 -
             C47141 * C2336 + C47138 * C2342) *
                C154406) *
               C154021 +
           ((C47145 * C33869 - C47146 * C33866 - C47145 * C33870 +
             C154445 * C33872 + C47143 * C9282 - C47144 * C9277 -
             C47143 * C9283 + C47139 * C9286 + C47141 * C6274 - C47142 * C6263 -
             C47141 * C6275 + C47138 * C6281) *
                C154226 +
            (C47145 * C10602 - C47146 * C10597 - C47145 * C10603 +
             C154445 * C10606 + C47143 * C7777 - C47144 * C7773 -
             C47143 * C7778 + C47139 * C7785 + C47141 * C2337 - C47142 * C2328 -
             C47141 * C2338 + C47138 * C2343) *
                C154406) *
               C154373) *
              C2323) *
         C154066 * C154047) /
            (p * q * std::sqrt(p + q));
    d2ee[163] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C34729 +
             C3210 * C34730 + C3211 * C34731 + C3214 * C154415) *
                C154373 +
            (C34736 + C34737 + C34738 + C34739) * C154021) *
               C154465 -
           ((C35144 + C35145 + C35146 + C35147) * C154021 +
            (C5676 * C154415 + C4299 * C34731 + C4300 * C34730 +
             (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                 C34729) *
                C154373) *
               C154466 +
           (((C134 * C602 - C135 * C585 - C134 * C603 + C154181 * C621) *
                 C34729 +
             C4930 * C34730 + C4931 * C34731 + C29254 * C154415) *
                C154373 +
            (C35148 + C35149 + C35150 + C35158) * C154021) *
               C2630) *
              C154066 * C154384 +
          (((C35147 + C35146 + C35145 + C35144) * C154373 +
            (C35551 + C35552 + C35553 + C35554) * C154021) *
               C154466 -
           ((C34740 + C34741 + C34742 + C34743) * C154021 +
            (C34739 + C34738 + C34737 + C34736) * C154373) *
               C154465 -
           (((C134 * C4908 - C135 * C4905 - C134 * C4909 + C154181 * C4914) *
                 C154415 +
             C3505 * C34731 + C3504 * C34730 + C682 * C34729) *
                C154021 +
            (C35158 + C35150 + C35149 + C35148) * C154373) *
               C2630) *
              C154066 * C154053)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C154406 +
             C3210 * C154226) *
                C11465 +
            (C11470 + C11471) * C11466 + C11480 * C11467 + C11481 * C154407) *
               C154465 -
           (C12295 * C154407 + C12296 * C11467 + (C11888 + C11889) * C11466 +
            (C4300 * C154226 +
             (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                 C154406) *
                C11465) *
               C154466 +
           (((C134 * C602 - C135 * C585 - C134 * C603 + C154181 * C621) *
                 C154406 +
             C4930 * C154226) *
                C11465 +
            (C11890 + C11891) * C11466 + (C11892 + C11893) * C11467 +
            (C11894 + C11902) * C154407) *
               C2630) *
              C154066 * C154384 +
          (((C11889 + C11888) * C11465 + (C11887 + C11886) * C11466 +
            (C11885 + C11884) * C11467 + (C12297 + C12298) * C154407) *
               C154466 -
           (C11482 * C154407 + C11483 * C11467 + (C11473 + C11472) * C11466 +
            (C11471 + C11470) * C11465) *
               C154465 -
           (((C134 * C1546 - C135 * C1541 - C134 * C1547 + C154181 * C1556) *
                 C154226 +
             C684 * C154406) *
                C154407 +
            (C11902 + C11894) * C11467 + (C11893 + C11892) * C11466 +
            (C11891 + C11890) * C11465) *
               C2630) *
              C154066 * C154053)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C47141 * C144 - C47142 * C136 - C47141 * C145 + C47138 * C160 +
              C47143 * C600 - C47144 * C584 - C47143 * C601 + C47139 * C620 +
              C47145 * C602 - C47146 * C585 - C47145 * C603 + C154445 * C621) *
                 C154406 +
             (C51712 + C51713 + C51714) * C154226) *
                C154373 +
            ((C47220 + C47221 + C47222) * C154406 + C58155 * C154226) *
                C154021) *
               C154465 -
           ((C59439 * C154226 + (C47833 + C47834 + C47835) * C154406) *
                C154021 +
            ((C52727 + C52728 + C52729) * C154226 +
             (C47145 * C2337 - C47146 * C2328 - C47145 * C2338 +
              C154445 * C2343 + C47143 * C602 - C47144 * C585 - C47143 * C603 +
              C47139 * C621 + C47141 * C600 - C47142 * C584 - C47141 * C601 +
              C47138 * C620) *
                 C154406) *
                C154373) *
               C154466 +
           (((C47141 * C602 - C47142 * C585 - C47141 * C603 + C47138 * C621 +
              C47143 * C2337 - C47144 * C2328 - C47143 * C2338 +
              C47139 * C2343 + C47145 * C7777 - C47146 * C7773 -
              C47145 * C7778 + C154445 * C7785) *
                 C154406 +
             (C53374 + C53375 + C53376) * C154226) *
                C154373 +
            ((C47836 + C47837 + C47838) * C154406 +
             (C58466 + C58467 + C58468) * C154226) *
                C154021) *
               C2630) *
              C154066 * C154384 +
          ((((C47835 + C47834 + C47833) * C154406 + C59440 * C154226) *
                C154373 +
            ((C47832 + C47831 + C47830) * C154406 +
             (C48655 + C48656 + C48657) * C154226) *
                C154021) *
               C154466 -
           ((C48073 * C154226 + (C47225 + C47224 + C47223) * C154406) *
                C154021 +
            (C58156 * C154226 + (C47222 + C47221 + C47220) * C154406) *
                C154373) *
               C154465 -
           (((C47145 * C9278 - C47146 * C9275 - C47145 * C9279 +
              C154445 * C9284 + C47143 * C6266 - C47144 * C6259 -
              C47143 * C6267 + C47139 * C6277 + C47141 * C1550 -
              C47142 * C1543 - C47141 * C1551 + C47138 * C1558) *
                 C154226 +
             (C47841 + C47840 + C47839) * C154406) *
                C154021 +
            ((C58468 + C58467 + C58466) * C154226 +
             (C47838 + C47837 + C47836) * C154406) *
                C154373) *
               C2630) *
              C154066 * C154053)) /
            (p * q * std::sqrt(p + q));
    d2ee[164] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C154406 +
             C3210 * C154226) *
                C11465 +
            (C11470 + C11471) * C11466 + C11480 * C11467 + C11481 * C154407) *
               C2114 -
           (C12295 * C154407 + C12296 * C11467 + (C11888 + C11889) * C11466 +
            (C4300 * C154226 +
             (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                 C154406) *
                C11465) *
               C154146) *
              C338 +
          (((C4300 * C154406 + C4299 * C154226) * C11465 +
            (C12557 + C12558) * C11466 + (C12559 + C12560) * C11467 +
            (C12561 + C12562) * C154407) *
               C154146 -
           (C12097 * C154407 + C12098 * C11467 + (C11682 + C11683) * C11466 +
            (C3211 * C154226 + C3210 * C154406) * C11465) *
               C2114) *
              C339 +
          (((C3211 * C154406 + C3214 * C154226) * C11465 +
            (C11684 + C11685) * C11466 + (C11686 + C11687) * C11467 +
            (C11688 + C11689) * C154407) *
               C2114 -
           (((C134 * C4264 - C135 * C4257 - C134 * C4265 + C154181 * C4269) *
                 C154226 +
             C3963 * C154406) *
                C154407 +
            (C4302 * C154226 + C3500 * C154406) * C11467 +
            (C4301 * C154226 + C3501 * C154406) * C11466 +
            (C5676 * C154226 + C4299 * C154406) * C11465) *
               C154146) *
              C340) *
         C154047) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C154406 +
             C3210 * C154226) *
                C11465 +
            (C11470 + C11471) * C11466 + C11480 * C11467 + C11481 * C154407) *
               C2114 -
           (C12295 * C154407 + C12296 * C11467 + (C11888 + C11889) * C11466 +
            (C4300 * C154226 +
             (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                 C154406) *
                C11465) *
               C154146) *
              C154066 * C1309 +
          (((C11889 + C11888) * C11465 + (C11887 + C11886) * C11466 +
            (C11885 + C11884) * C11467 + (C12297 + C12298) * C154407) *
               C154146 -
           (C11482 * C154407 + C11483 * C11467 + (C11473 + C11472) * C11466 +
            (C11471 + C11470) * C11465) *
               C2114) *
              C154066 * C1310 +
          ((C11480 * C11465 + C11481 * C11466 + (C11477 + C11476) * C11467 +
            (C11478 + C11479) * C154407) *
               C2114 -
           (((C134 * C1145 - C135 * C1134 - C134 * C1146 + C154181 * C1152) *
                 C154226 +
             C966 * C154406) *
                C154407 +
            (C12298 + C12297) * C11467 + C12295 * C11466 + C12296 * C11465) *
               C154146) *
              C154066 * C1311)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C34729 +
             C3210 * C34730 + C3211 * C34731 + C3214 * C154415) *
                C154373 +
            (C34736 + C34737 + C34738 + C34739) * C154021) *
               C2114 -
           ((C35144 + C35145 + C35146 + C35147) * C154021 +
            (C5676 * C154415 + C4299 * C34731 + C4300 * C34730 +
             (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                 C34729) *
                C154373) *
               C154146) *
              C154066 * C1309 +
          (((C35147 + C35146 + C35145 + C35144) * C154373 +
            (C35551 + C35552 + C35553 + C35554) * C154021) *
               C154146 -
           ((C34740 + C34741 + C34742 + C34743) * C154021 +
            (C34739 + C34738 + C34737 + C34736) * C154373) *
               C2114) *
              C154066 * C1310 +
          (((C34743 + C34742 + C34741 + C34740) * C154373 +
            (C34744 + C34745 + C34746 + C34747) * C154021) *
               C2114 -
           (((C134 * C4264 - C135 * C4257 - C134 * C4265 + C154181 * C4269) *
                 C154415 +
             C3963 * C34731 + C1180 * C34730 + C678 * C34729) *
                C154021 +
            (C35554 + C35553 + C35552 + C35551) * C154373) *
               C154146) *
              C154066 * C1311)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C34729 +
             C3210 * C34730 + C3211 * C34731 + C3214 * C154415) *
                C154373 +
            (C34736 + C34737 + C34738 + C34739) * C154021) *
               C2114 -
           ((C35144 + C35145 + C35146 + C35147) * C154021 +
            (C5676 * C154415 + C4299 * C34731 + C4300 * C34730 +
             (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                 C34729) *
                C154373) *
               C154146) *
              C338 +
          (((C4300 * C34729 + C4299 * C34730 + C5676 * C34731 +
             C28899 * C154415) *
                C154373 +
            (C35813 + C35814 + C35815 + C35816) * C154021) *
               C154146 -
           ((C34942 + C34943 + C34944 + C34945) * C154021 +
            (C4687 * C154415 + C3214 * C34731 + C3211 * C34730 +
             C3210 * C34729) *
                C154373) *
               C2114) *
              C339 +
          (((C3211 * C34729 + C3214 * C34730 + C4687 * C34731 +
             C28341 * C154415) *
                C154373 +
            (C34946 + C34947 + C34948 + C34949) * C154021) *
               C2114 -
           (((C134 * C28882 - C135 * C28879 - C134 * C28883 +
              C154181 * C28885) *
                 C154415 +
             C28900 * C34731 + C4301 * C34730 + C3501 * C34729) *
                C154021 +
            (C29672 * C154415 + C28899 * C34731 + C5676 * C34730 +
             C4299 * C34729) *
                C154373) *
               C154146) *
              C340) *
         C154047) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C47141 * C144 - C47142 * C136 - C47141 * C145 + C47138 * C160 +
              C47143 * C600 - C47144 * C584 - C47143 * C601 + C47139 * C620 +
              C47145 * C602 - C47146 * C585 - C47145 * C603 + C154445 * C621) *
                 C154406 +
             (C51712 + C51713 + C51714) * C154226) *
                C154373 +
            ((C47220 + C47221 + C47222) * C154406 + C58155 * C154226) *
                C154021) *
               C2114 -
           ((C59439 * C154226 + (C47833 + C47834 + C47835) * C154406) *
                C154021 +
            ((C52727 + C52728 + C52729) * C154226 +
             (C47145 * C2337 - C47146 * C2328 - C47145 * C2338 +
              C154445 * C2343 + C47143 * C602 - C47144 * C585 - C47143 * C603 +
              C47139 * C621 + C47141 * C600 - C47142 * C584 - C47141 * C601 +
              C47138 * C620) *
                 C154406) *
                C154373) *
               C154146) *
              C154066 * C1309 +
          ((((C47835 + C47834 + C47833) * C154406 + C59440 * C154226) *
                C154373 +
            ((C47832 + C47831 + C47830) * C154406 +
             (C48655 + C48656 + C48657) * C154226) *
                C154021) *
               C154146 -
           ((C48073 * C154226 + (C47225 + C47224 + C47223) * C154406) *
                C154021 +
            (C58156 * C154226 + (C47222 + C47221 + C47220) * C154406) *
                C154373) *
               C2114) *
              C154066 * C1310 +
          (((C47234 * C154406 + C58760 * C154226) * C154373 +
            ((C47228 + C47227 + C47226) * C154406 +
             (C48081 + C48082 + C48083) * C154226) *
                C154021) *
               C2114 -
           (((C47145 * C8648 - C47146 * C8647 - C47145 * C8649 +
              C154445 * C8650 + C47143 * C1548 - C47144 * C1542 -
              C47143 * C1549 + C47139 * C1557 + C47141 * C1141 -
              C47142 * C1132 - C47141 * C1142 + C47138 * C1150) *
                 C154226 +
             (C48325 + C48324 + C48323) * C154406) *
                C154021 +
            ((C48657 + C48656 + C48655) * C154226 + C48315 * C154406) *
                C154373) *
               C154146) *
              C154066 * C1311)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C47141 * C144 - C47142 * C136 - C47141 * C145 + C47138 * C160 +
              C47143 * C600 - C47144 * C584 - C47143 * C601 + C47139 * C620 +
              C47145 * C602 - C47146 * C585 - C47145 * C603 + C154445 * C621) *
                 C154406 +
             (C51712 + C51713 + C51714) * C154226) *
                C154373 +
            ((C47220 + C47221 + C47222) * C154406 + C58155 * C154226) *
                C154021) *
               C2114 -
           ((C59439 * C154226 + (C47833 + C47834 + C47835) * C154406) *
                C154021 +
            ((C52727 + C52728 + C52729) * C154226 +
             (C47145 * C2337 - C47146 * C2328 - C47145 * C2338 +
              C154445 * C2343 + C47143 * C602 - C47144 * C585 - C47143 * C603 +
              C47139 * C621 + C47141 * C600 - C47142 * C584 - C47141 * C601 +
              C47138 * C620) *
                 C154406) *
                C154373) *
               C154146) *
              C338 +
          ((((C52729 + C52728 + C52727) * C154406 +
             (C52726 + C52725 + C52724) * C154226) *
                C154373 +
            (C59440 * C154406 + (C52730 + C52731 + C52732) * C154226) *
                C154021) *
               C154146 -
           ((C51699 * C154226 + C58156 * C154406) * C154021 +
            ((C51717 + C51716 + C51715) * C154226 +
             (C51714 + C51713 + C51712) * C154406) *
                C154373) *
               C2114) *
              C339 +
          (((C51725 * C154406 + (C51720 + C51719 + C51718) * C154226) *
                C154373 +
            (C58157 * C154406 + (C51721 + C51722 + C51723) * C154226) *
                C154021) *
               C2114 -
           (((C47145 * C31817 - C47146 * C31816 - C47145 * C31818 +
              C154445 * C31819 + C47143 * C4910 - C47144 * C4906 -
              C47143 * C4911 + C47139 * C4915 + C47141 * C4260 -
              C47142 * C4255 - C47141 * C4261 + C47138 * C4267) *
                 C154226 +
             (C52732 + C52731 + C52730) * C154406) *
                C154021 +
            ((C54128 + C54127 + C54126) * C154226 + C54119 * C154406) *
                C154373) *
               C154146) *
              C340) *
         C154047) /
            (p * q * std::sqrt(p + q));
    d2ee[165] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
             C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
                C34729 +
            (C19258 + C19259) * C34730 + C38629 * C34731 + C43780 * C154415) *
               C154011 * C154082 * C154392 -
           ((C40430 + C40429) * C154415 + C40416 * C34731 +
            (C19260 + C19261) * C34730 + (C19259 + C19258) * C34729) *
               C154011 * C154082 * C154118) *
              C154461 +
          ((C19212 * C34729 + C19224 * C34730 + C38631 * C34731 +
            (C38644 + C38645) * C154415) *
               C154011 * C154082 * C154118 -
           (C38630 * C154415 + C19214 * C34731 + C19215 * C34730 +
            (C15088 + C15087) * C34729) *
               C154011 * C154082 * C154392) *
              C154462 +
          ((C15097 * C34729 + C18908 * C34730 + C19233 * C34731 +
            (C19264 + C19265) * C154415) *
               C154011 * C154082 * C154392 -
           ((C15024 * C5660 - C15025 * C5657 - C15024 * C5661 +
             C154268 * C5666 + C15022 * C3147 - C15023 * C3141 -
             C15022 * C3148 + C154408 * C3153) *
                C154415 +
            (C19265 + C19264) * C34731 + C19213 * C34730 + C15856 * C34729) *
               C154011 * C154082 * C154118) *
              C818)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
              C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
                 C154406 +
             (C19258 + C19259) * C154226) *
                C2902 +
            ((C15087 + C15088) * C154406 + C19212 * C154226) * C2903 +
            C18913 * C154429) *
               C154082 * C154392 -
           (C19877 * C154429 + (C19214 * C154226 + C19215 * C154406) * C2903 +
            ((C19260 + C19261) * C154226 + (C19259 + C19258) * C154406) *
                C2902) *
               C154082 * C154118) *
              C154461 +
          (((C19212 * C154406 + C19224 * C154226) * C2902 +
            (C18908 * C154406 + C19233 * C154226) * C2903 +
            (C19876 * C154406 + (C15381 + C15382) * C154226) * C154429) *
               C154082 * C154118 -
           (C18912 * C154429 +
            (C15856 * C154226 + (C15090 + C15089) * C154406) * C2903 +
            (C19215 * C154226 + (C15088 + C15087) * C154406) * C2902) *
               C154082 * C154392) *
              C154462 +
          ((C18913 * C2902 + (C15098 * C154406 + C19876 * C154226) * C2903 +
            ((C15094 + C15093) * C154406 + (C15871 + C15872) * C154226) *
                C154429) *
               C154082 * C154392 -
           (((C15024 * C1977 - C15025 * C1972 - C15024 * C1978 +
              C154268 * C1987 + C15022 * C373 - C15023 * C352 - C15022 * C374 +
              C154408 * C388) *
                 C154226 +
             (C15872 + C15871) * C154406) *
                C154429 +
            ((C15382 + C15381) * C154226 + C15855 * C154406) * C2903 +
            C19877 * C2902) *
               C154082 * C154118) *
              C818)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C63054 * C144 - C63055 * C136 - C63054 * C145 + C63050 * C160 +
             C63056 * C600 - C63057 * C584 - C63056 * C601 + C63051 * C620 +
             C63058 * C602 - C63059 * C585 - C63058 * C603 + C63052 * C621 +
             C63060 * C2337 - C63061 * C2328 - C63060 * C2338 +
             C154422 * C2343) *
                C154406 +
            (C67077 + C67078 + C67079 + C67080) * C154226) *
               C154011 * C154082 * C154392 -
           ((C67081 + C67082 + C67083 + C67084) * C154226 +
            (C67080 + C67079 + C67078 + C67077) * C154406) *
               C154011 * C154082 * C154118) *
              C154461 +
          (((C63392 + C63391 + C63390 + C63389) * C154406 +
            (C63393 + C63394 + C63395 + C63396) * C154226) *
               C154011 * C154082 * C154118 -
           ((C63389 + C63390 + C63391 + C63392) * C154226 +
            (C63138 + C63137 + C63136 + C63135) * C154406) *
               C154011 * C154082 * C154392) *
              C154462 +
          (((C63142 + C63141 + C63140 + C63139) * C154406 +
            (C63865 + C63866 + C63867 + C63868) * C154226) *
               C154011 * C154082 * C154392 -
           ((C63060 * C6264 - C63061 * C6258 - C63060 * C6265 +
             C154422 * C6276 + C63058 * C3449 - C63059 * C3443 -
             C63058 * C3450 + C63052 * C3455 + C63056 * C1981 - C63057 * C1974 -
             C63056 * C1982 + C63051 * C1989 + C63054 * C369 - C63055 * C350 -
             C63054 * C370 + C63050 * C386) *
                C154226 +
            (C63868 + C63867 + C63866 + C63865) * C154406) *
               C154011 * C154082 * C154118) *
              C818)) /
            (p * q * std::sqrt(p + q));
    d2ee[166] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
              C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
                 C34729 +
             (C19258 + C19259) * C34730 + C38629 * C34731 + C43780 * C154415) *
                C154011 * C154393 -
            ((C41715 + C41714) * C154415 + C41701 * C34731 +
             (C20597 + C20598) * C34730 +
             (C15024 * C602 - C15025 * C585 - C15024 * C603 + C154268 * C621 +
              C15022 * C600 - C15023 * C584 - C15022 * C601 + C154408 * C620) *
                 C34729) *
                C154011 * C154146) *
               C154392 +
           (((C20598 + C20597) * C34729 + (C22383 + C22384) * C34730 +
             (C41714 + C41715) * C34731 +
             (C15022 * C5664 - C15023 * C5659 - C15022 * C5665 +
              C154408 * C5668 + C15024 * C28466 - C15025 * C28464 -
              C15024 * C28467 + C154268 * C28470) *
                 C154415) *
                C154011 * C154146 -
            ((C40430 + C40429) * C154415 + C40416 * C34731 +
             (C19260 + C19261) * C34730 + (C19259 + C19258) * C34729) *
                C154011 * C154393) *
               C154118) *
              C341 +
          ((((C15654 + C15653) * C34729 + C20567 * C34730 + C39917 * C34731 +
             (C39930 + C39931) * C154415) *
                C154011 * C154146 -
            (C38630 * C154415 + C19214 * C34731 + C19215 * C34730 +
             (C15088 + C15087) * C34729) *
                C154011 * C154393) *
               C154392 +
           ((C19212 * C34729 + C19224 * C34730 + C38631 * C34731 +
             (C38644 + C38645) * C154415) *
                C154011 * C154393 -
            ((C15024 * C28468 - C15025 * C28465 - C15024 * C28469 +
              C154268 * C28471 + C15022 * C5662 - C15023 * C5658 -
              C15022 * C5663 + C154408 * C5667) *
                 C154415 +
             (C39931 + C39930) * C34731 + C39916 * C34730 + C20558 * C34729) *
                C154011 * C154146) *
               C154118) *
              C154053)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
               C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
                  C154406 +
              (C19258 + C19259) * C154226) *
                 C2902 +
             ((C15087 + C15088) * C154406 + C19212 * C154226) * C2903 +
             C18913 * C154429) *
                C154393 -
            (C20171 * C154429 +
             (C20558 * C154226 + (C15653 + C15654) * C154406) * C2903 +
             ((C20597 + C20598) * C154226 +
              (C15024 * C602 - C15025 * C585 - C15024 * C603 + C154268 * C621 +
               C15022 * C600 - C15023 * C584 - C15022 * C601 + C154408 * C620) *
                  C154406) *
                 C2902) *
                C154146) *
               C154392 +
           ((((C20598 + C20597) * C154406 +
              (C15022 * C1985 - C15023 * C1976 - C15022 * C1986 +
               C154408 * C1991 + C15024 * C3445 - C15025 * C3441 -
               C15024 * C3446 + C154268 * C3453) *
                  C154226) *
                 C2902 +
             (C20567 * C154406 + (C20599 + C20600) * C154226) * C2903 +
             (C20576 * C154406 + (C20601 + C20602) * C154226) * C154429) *
                C154146 -
            (C19877 * C154429 + (C19214 * C154226 + C19215 * C154406) * C2903 +
             ((C19260 + C19261) * C154226 + (C19259 + C19258) * C154406) *
                 C2902) *
                C154393) *
               C154118) *
              C341 +
          (((((C15654 + C15653) * C154406 + C20567 * C154226) * C2902 +
             ((C15652 + C15651) * C154406 + C20576 * C154226) * C2903 +
             ((C15650 + C15649) * C154406 + (C16383 + C16384) * C154226) *
                 C154429) *
                C154146 -
            (C18912 * C154429 +
             (C15856 * C154226 + (C15090 + C15089) * C154406) * C2903 +
             (C19215 * C154226 + (C15088 + C15087) * C154406) * C2902) *
                C154393) *
               C154392 +
           (((C19212 * C154406 + C19224 * C154226) * C2902 +
             (C18908 * C154406 + C19233 * C154226) * C2903 +
             (C19876 * C154406 + (C15381 + C15382) * C154226) * C154429) *
                C154393 -
            (((C15024 * C3451 - C15025 * C3444 - C15024 * C3452 +
               C154268 * C3456 + C15022 * C1979 - C15023 * C1973 -
               C15022 * C1980 + C154408 * C1988) *
                  C154226 +
              (C16384 + C16383) * C154406) *
                 C154429 +
             ((C20602 + C20601) * C154226 + C20168 * C154406) * C2903 +
             ((C20600 + C20599) * C154226 + C20558 * C154406) * C2902) *
                C154146) *
               C154118) *
              C154053)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C63054 * C144 - C63055 * C136 - C63054 * C145 + C63050 * C160 +
              C63056 * C600 - C63057 * C584 - C63056 * C601 + C63051 * C620 +
              C63058 * C602 - C63059 * C585 - C63058 * C603 + C63052 * C621 +
              C63060 * C2337 - C63061 * C2328 - C63060 * C2338 +
              C154422 * C2343) *
                 C154406 +
             (C67077 + C67078 + C67079 + C67080) * C154226) *
                C154011 * C154393 -
            ((C67949 + C67950 + C67951 + C67952) * C154226 +
             (C63060 * C7777 - C63061 * C7773 - C63060 * C7778 +
              C154422 * C7785 + C63058 * C2337 - C63059 * C2328 -
              C63058 * C2338 + C63052 * C2343 + C63056 * C602 - C63057 * C585 -
              C63056 * C603 + C63051 * C621 + C63054 * C600 - C63055 * C584 -
              C63054 * C601 + C63050 * C620) *
                 C154406) *
                C154011 * C154146) *
               C154392 +
           (((C67952 + C67951 + C67950 + C67949) * C154406 +
             (C63054 * C1985 - C63055 * C1976 - C63054 * C1986 +
              C63050 * C1991 + C63056 * C3445 - C63057 * C3441 -
              C63056 * C3446 + C63051 * C3453 + C63058 * C6272 -
              C63059 * C6262 - C63058 * C6273 + C63052 * C6280 +
              C63060 * C31084 - C63061 * C31082 - C63060 * C31085 +
              C154422 * C31088) *
                 C154226) *
                C154011 * C154146 -
            ((C67081 + C67082 + C67083 + C67084) * C154226 +
             (C67080 + C67079 + C67078 + C67077) * C154406) *
                C154011 * C154393) *
               C154118) *
              C341 +
          ((((C63642 + C63641 + C63640 + C63639) * C154406 +
             (C64373 + C64374 + C64375 + C64376) * C154226) *
                C154011 * C154146 -
            ((C63389 + C63390 + C63391 + C63392) * C154226 +
             (C63138 + C63137 + C63136 + C63135) * C154406) *
                C154011 * C154393) *
               C154392 +
           (((C63392 + C63391 + C63390 + C63389) * C154406 +
             (C63393 + C63394 + C63395 + C63396) * C154226) *
                C154011 * C154393 -
            ((C63060 * C31086 - C63061 * C31083 - C63060 * C31087 +
              C154422 * C31089 + C63058 * C6268 - C63059 * C6260 -
              C63058 * C6269 + C63052 * C6278 + C63056 * C3447 -
              C63057 * C3442 - C63056 * C3448 + C63051 * C3454 +
              C63054 * C1983 - C63055 * C1975 - C63054 * C1984 +
              C63050 * C1990) *
                 C154226 +
             (C64376 + C64375 + C64374 + C64373) * C154406) *
                C154011 * C154146) *
               C154118) *
              C154053)) /
            (p * q * std::sqrt(p + q));
    d2ee[167] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C15022 * C144 - C15023 * C136 - C15022 * C145 +
                 C154408 * C160 + C15024 * C600 - C15025 * C584 -
                 C15024 * C601 + C154268 * C620) *
                    C154406 +
                (C15022 * C363 - C15023 * C347 - C15022 * C364 +
                 C154408 * C383 + C15024 * C1135 - C15025 * C1129 -
                 C15024 * C1136 + C154268 * C1147) *
                    C154226) *
                   C2902 +
               ((C15087 + C15088) * C154406 + (C15376 + C15375) * C154226) *
                   C2903 +
               C18913 * C154429) *
                  C154082 * C154066 * C130 -
              (C18912 * C154429 +
               (C15856 * C154226 + (C15090 + C15089) * C154406) * C2903 +
               ((C15375 + C15376) * C154226 + (C15088 + C15087) * C154406) *
                   C2902) *
                  C154082 * C154066 * C131 +
              (C18913 * C2902 +
               (C15098 * C154406 + (C15372 + C15371) * C154226) * C2903 +
               ((C15094 + C15093) * C154406 + (C15871 + C15872) * C154226) *
                   C154429) *
                  C154082 * C154066 * C132 -
              (((C15024 * C1145 - C15025 * C1134 - C15024 * C1146 +
                 C154268 * C1152 + C15022 * C375 - C15023 * C353 -
                 C15022 * C376 + C154408 * C389) *
                    C154226 +
                (C15096 + C15095) * C154406) *
                   C154429 +
               ((C15872 + C15871) * C154226 + C15099 * C154406) * C2903 +
               C18912 * C2902) *
                  C154082 * C154066 * C133) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C15022 * C144 - C15023 * C136 - C15022 * C145 +
                  C154408 * C160 + C15024 * C600 - C15025 * C584 -
                  C15024 * C601 + C154268 * C620) *
                     C154406 +
                 (C19258 + C19259) * C154226) *
                    C2902 +
                ((C15087 + C15088) * C154406 + C19212 * C154226) * C2903 +
                C18913 * C154429) *
                   C154082 * C338 -
               ((C19213 * C154226 + C15856 * C154406) * C154429 +
                (C19214 * C154226 + C19215 * C154406) * C2903 +
                ((C19260 + C19261) * C154226 + (C19259 + C19258) * C154406) *
                    C2902) *
                   C154082 * C339 +
               (((C19261 + C19260) * C154406 +
                 (C15022 * C1412 - C15023 * C1403 - C15022 * C1413 +
                  C154408 * C1418 + C15024 * C4258 - C15025 * C4254 -
                  C15024 * C4259 + C154268 * C4266) *
                     C154226) *
                    C2902 +
                (C19224 * C154406 + (C19262 + C19263) * C154226) * C2903 +
                (C19233 * C154406 + (C19264 + C19265) * C154226) * C154429) *
                   C154082 * C340) *
                  C341 +
              (((C19212 * C154406 + C19224 * C154226) * C2902 +
                (C18908 * C154406 + C19233 * C154226) * C2903 +
                ((C15372 + C15371) * C154406 + (C15381 + C15382) * C154226) *
                    C154429) *
                   C154082 * C339 -
               (C18912 * C154429 +
                (C15856 * C154226 + (C15090 + C15089) * C154406) * C2903 +
                (C19215 * C154226 + (C15088 + C15087) * C154406) * C2902) *
                   C154082 * C338 -
               (((C15024 * C4264 - C15025 * C4257 - C15024 * C4265 +
                  C154268 * C4269 + C15022 * C1406 - C15023 * C1400 -
                  C15022 * C1407 + C154408 * C1415) *
                     C154226 +
                 (C15382 + C15381) * C154406) *
                    C154429 +
                ((C19265 + C19264) * C154226 + C19213 * C154406) * C2903 +
                ((C19263 + C19262) * C154226 + C19214 * C154406) * C2902) *
                   C154082 * C340) *
                  C154053)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
              C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
                 C154406 +
             (C19258 + C19259) * C154226) *
                C2902 +
            ((C15087 + C15088) * C154406 + C19212 * C154226) * C2903 +
            C18913 * C154429) *
               C577 -
           (((C16382 + C16381) * C154226 + C16068 * C154406) * C154429 +
            ((C16380 + C16379) * C154226 + (C15653 + C15654) * C154406) *
                C2903 +
            ((C15024 * C1554 - C15025 * C1545 - C15024 * C1555 +
              C154268 * C1560 + C15022 * C1135 - C15023 * C1129 -
              C15022 * C1136 + C154408 * C1147) *
                 C154226 +
             (C15024 * C602 - C15025 * C585 - C15024 * C603 + C154268 * C621 +
              C15022 * C600 - C15023 * C584 - C15022 * C601 + C154408 * C620) *
                 C154406) *
                C2902) *
               C578 +
           (((C15022 * C602 - C15023 * C585 - C15022 * C603 + C154408 * C621 +
              C15024 * C2337 - C15025 * C2328 - C15024 * C2338 +
              C154268 * C2343) *
                 C154406 +
             (C15022 * C1554 - C15023 * C1545 - C15022 * C1555 +
              C154408 * C1560 + C15024 * C6274 - C15025 * C6263 -
              C15024 * C6275 + C154268 * C6281) *
                 C154226) *
                C2902 +
            ((C15655 + C15656) * C154406 + (C19580 + C19581) * C154226) *
                C2903 +
            ((C15657 + C15658) * C154406 + (C19582 + C19583) * C154226) *
                C154429) *
               C579) *
              C154066 * C341 +
          ((((C15654 + C15653) * C154406 + (C16379 + C16380) * C154226) *
                C2902 +
            ((C15652 + C15651) * C154406 + (C16381 + C16382) * C154226) *
                C2903 +
            ((C15650 + C15649) * C154406 + (C16383 + C16384) * C154226) *
                C154429) *
               C578 -
           (C18912 * C154429 +
            (C15856 * C154226 + (C15090 + C15089) * C154406) * C2903 +
            (C19215 * C154226 + (C15088 + C15087) * C154406) * C2902) *
               C577 -
           (((C15024 * C8648 - C15025 * C8647 - C15024 * C8649 +
              C154268 * C8650 + C15022 * C1548 - C15023 * C1542 -
              C15022 * C1549 + C154408 * C1557) *
                 C154226 +
             (C15660 + C15659) * C154406) *
                C154429 +
            ((C19583 + C19582) * C154226 + (C15658 + C15657) * C154406) *
                C2903 +
            ((C19581 + C19580) * C154226 + (C15656 + C15655) * C154406) *
                C2902) *
               C579) *
              C154066 * C154053)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
            C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
               C34729 +
           (C19258 + C19259) * C34730 + C38629 * C34731 +
           (C21099 + C21100) * C154415) *
              C154011 * C154082 * C154066 * C130 -
          (C38630 * C154415 + C19214 * C34731 + C19215 * C34730 +
           (C15088 + C15087) * C34729) *
              C154011 * C154082 * C154066 * C131 +
          (C15097 * C34729 + C18908 * C34730 + C19233 * C34731 +
           (C19264 + C19265) * C154415) *
              C154011 * C154082 * C154066 * C132 -
          ((C15024 * C4264 - C15025 * C4257 - C15024 * C4265 + C154268 * C4269 +
            C15022 * C1406 - C15023 * C1400 - C15022 * C1407 +
            C154408 * C1415) *
               C154415 +
           (C15382 + C15381) * C34731 + C15855 * C34730 + C15100 * C34729) *
              C154011 * C154082 * C154066 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
             C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
                C34729 +
            (C19258 + C19259) * C34730 + C38629 * C34731 + C43780 * C154415) *
               C154011 * C154082 * C338 -
           ((C40430 + C40429) * C154415 + C40416 * C34731 +
            (C19260 + C19261) * C34730 + (C19259 + C19258) * C34729) *
               C154011 * C154082 * C339 +
           (C38629 * C34729 + C43780 * C34730 + (C40429 + C40430) * C34731 +
            (C15022 * C4675 - C15023 * C4670 - C15022 * C4676 +
             C154408 * C4679 + C15024 * C28880 - C15025 * C28878 -
             C15024 * C28881 + C154268 * C28884) *
                C154415) *
               C154011 * C154082 * C340) *
              C341 +
          ((C19212 * C34729 + C19224 * C34730 + C38631 * C34731 +
            (C38644 + C38645) * C154415) *
               C154011 * C154082 * C339 -
           (C38630 * C154415 + C19214 * C34731 + C19215 * C34730 +
            (C15088 + C15087) * C34729) *
               C154011 * C154082 * C338 -
           ((C15024 * C28882 - C15025 * C28879 - C15024 * C28883 +
             C154268 * C28885 + C15022 * C4673 - C15023 * C4669 -
             C15022 * C4674 + C154408 * C4678) *
                C154415 +
            (C38645 + C38644) * C34731 + C38630 * C34730 + C19214 * C34729) *
               C154011 * C154082 * C340) *
              C154053)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
             C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
                C34729 +
            (C19258 + C19259) * C34730 + C38629 * C34731 + C43780 * C154415) *
               C154011 * C577 -
           ((C41715 + C41714) * C154415 + C41701 * C34731 +
            (C20597 + C20598) * C34730 +
            (C15024 * C602 - C15025 * C585 - C15024 * C603 + C154268 * C621 +
             C15022 * C600 - C15023 * C584 - C15022 * C601 + C154408 * C620) *
                C34729) *
               C154011 * C578 +
           ((C15022 * C602 - C15023 * C585 - C15022 * C603 + C154408 * C621 +
             C15024 * C2337 - C15025 * C2328 - C15024 * C2338 +
             C154268 * C2343) *
                C34729 +
            (C21403 + C21404) * C34730 + (C40733 + C40734) * C34731 +
            (C15022 * C4912 - C15023 * C4907 - C15022 * C4913 +
             C154408 * C4916 + C15024 * C30002 - C15025 * C29999 -
             C15024 * C30003 + C154268 * C30005) *
                C154415) *
               C154011 * C579) *
              C154066 * C341 +
          (((C15654 + C15653) * C34729 + C20567 * C34730 + C39917 * C34731 +
            (C39930 + C39931) * C154415) *
               C154011 * C578 -
           (C38630 * C154415 + C19214 * C34731 + C19215 * C34730 +
            (C15088 + C15087) * C34729) *
               C154011 * C577 -
           ((C15024 * C31817 - C15025 * C31816 - C15024 * C31818 +
             C154268 * C31819 + C15022 * C4910 - C15023 * C4906 -
             C15022 * C4911 + C154408 * C4915) *
                C154415 +
            (C38949 + C38948) * C34731 + (C19581 + C19580) * C34730 +
            (C15656 + C15655) * C34729) *
               C154011 * C579) *
              C154066 * C154053)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C63054 * C144 - C63055 * C136 - C63054 * C145 + C63050 * C160 +
            C63056 * C600 - C63057 * C584 - C63056 * C601 + C63051 * C620 +
            C63058 * C602 - C63059 * C585 - C63058 * C603 + C63052 * C621 +
            C63060 * C2337 - C63061 * C2328 - C63060 * C2338 +
            C154422 * C2343) *
               C154406 +
           (C63054 * C363 - C63055 * C347 - C63054 * C364 + C63050 * C383 +
            C63056 * C1135 - C63057 * C1129 - C63056 * C1136 + C63051 * C1147 +
            C63058 * C1554 - C63059 * C1545 - C63058 * C1555 + C63052 * C1560 +
            C63060 * C6274 - C63061 * C6263 - C63060 * C6275 +
            C154422 * C6281) *
               C154226) *
              C154011 * C154082 * C154066 * C130 -
          ((C63389 + C63390 + C63391 + C63392) * C154226 +
           (C63138 + C63137 + C63136 + C63135) * C154406) *
              C154011 * C154082 * C154066 * C131 +
          ((C63142 + C63141 + C63140 + C63139) * C154406 +
           (C63865 + C63866 + C63867 + C63868) * C154226) *
              C154011 * C154082 * C154066 * C132 -
          ((C63060 * C8648 - C63061 * C8647 - C63060 * C8649 + C154422 * C8650 +
            C63058 * C1548 - C63059 * C1542 - C63058 * C1549 + C63052 * C1557 +
            C63056 * C1141 - C63057 * C1132 - C63056 * C1142 + C63051 * C1150 +
            C63054 * C357 - C63055 * C344 - C63054 * C358 + C63050 * C380) *
               C154226 +
           (C63146 + C63145 + C63144 + C63143) * C154406) *
              C154011 * C154082 * C154066 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C63054 * C144 - C63055 * C136 - C63054 * C145 + C63050 * C160 +
             C63056 * C600 - C63057 * C584 - C63056 * C601 + C63051 * C620 +
             C63058 * C602 - C63059 * C585 - C63058 * C603 + C63052 * C621 +
             C63060 * C2337 - C63061 * C2328 - C63060 * C2338 +
             C154422 * C2343) *
                C154406 +
            (C67077 + C67078 + C67079 + C67080) * C154226) *
               C154011 * C154082 * C338 -
           ((C67081 + C67082 + C67083 + C67084) * C154226 +
            (C67080 + C67079 + C67078 + C67077) * C154406) *
               C154011 * C154082 * C339 +
           ((C67084 + C67083 + C67082 + C67081) * C154406 +
            (C63054 * C1412 - C63055 * C1403 - C63054 * C1413 + C63050 * C1418 +
             C63056 * C4258 - C63057 * C4254 - C63056 * C4259 + C63051 * C4266 +
             C63058 * C4912 - C63059 * C4907 - C63058 * C4913 + C63052 * C4916 +
             C63060 * C30002 - C63061 * C29999 - C63060 * C30003 +
             C154422 * C30005) *
                C154226) *
               C154011 * C154082 * C340) *
              C341 +
          (((C63392 + C63391 + C63390 + C63389) * C154406 +
            (C63393 + C63394 + C63395 + C63396) * C154226) *
               C154011 * C154082 * C339 -
           ((C63389 + C63390 + C63391 + C63392) * C154226 +
            (C63138 + C63137 + C63136 + C63135) * C154406) *
               C154011 * C154082 * C338 -
           ((C63060 * C31817 - C63061 * C31816 - C63060 * C31818 +
             C154422 * C31819 + C63058 * C4910 - C63059 * C4906 -
             C63058 * C4911 + C63052 * C4915 + C63056 * C4260 - C63057 * C4255 -
             C63056 * C4261 + C63051 * C4267 + C63054 * C1410 - C63055 * C1402 -
             C63054 * C1411 + C63050 * C1417) *
                C154226 +
            (C63396 + C63395 + C63394 + C63393) * C154406) *
               C154011 * C154082 * C340) *
              C154053)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C63054 * C144 - C63055 * C136 - C63054 * C145 + C63050 * C160 +
             C63056 * C600 - C63057 * C584 - C63056 * C601 + C63051 * C620 +
             C63058 * C602 - C63059 * C585 - C63058 * C603 + C63052 * C621 +
             C63060 * C2337 - C63061 * C2328 - C63060 * C2338 +
             C154422 * C2343) *
                C154406 +
            (C67077 + C67078 + C67079 + C67080) * C154226) *
               C154011 * C577 -
           ((C63060 * C9282 - C63061 * C9277 - C63060 * C9283 +
             C154422 * C9286 + C63058 * C6274 - C63059 * C6263 -
             C63058 * C6275 + C63052 * C6281 + C63056 * C1554 - C63057 * C1545 -
             C63056 * C1555 + C63051 * C1560 + C63054 * C1135 - C63055 * C1129 -
             C63054 * C1136 + C63050 * C1147) *
                C154226 +
            (C63060 * C7777 - C63061 * C7773 - C63060 * C7778 +
             C154422 * C7785 + C63058 * C2337 - C63059 * C2328 -
             C63058 * C2338 + C63052 * C2343 + C63056 * C602 - C63057 * C585 -
             C63056 * C603 + C63051 * C621 + C63054 * C600 - C63055 * C584 -
             C63054 * C601 + C63050 * C620) *
                C154406) *
               C154011 * C578 +
           ((C63054 * C602 - C63055 * C585 - C63054 * C603 + C63050 * C621 +
             C63056 * C2337 - C63057 * C2328 - C63056 * C2338 + C63051 * C2343 +
             C63058 * C7777 - C63059 * C7773 - C63058 * C7778 + C63052 * C7785 +
             C63060 * C10602 - C63061 * C10597 - C63060 * C10603 +
             C154422 * C10606) *
                C154406 +
            (C63054 * C1554 - C63055 * C1545 - C63054 * C1555 + C63050 * C1560 +
             C63056 * C6274 - C63057 * C6263 - C63056 * C6275 + C63051 * C6281 +
             C63058 * C9282 - C63059 * C9277 - C63058 * C9283 + C63052 * C9286 +
             C63060 * C33869 - C63061 * C33866 - C63060 * C33870 +
             C154422 * C33872) *
                C154226) *
               C154011 * C579) *
              C154066 * C341 +
          (((C63642 + C63641 + C63640 + C63639) * C154406 +
            (C64373 + C64374 + C64375 + C64376) * C154226) *
               C154011 * C578 -
           ((C63389 + C63390 + C63391 + C63392) * C154226 +
            (C63138 + C63137 + C63136 + C63135) * C154406) *
               C154011 * C577 -
           ((C63060 * C56192 - C63061 * C56191 - C63060 * C56193 +
             C154422 * C56194 + C63058 * C9280 - C63059 * C9276 -
             C63058 * C9281 + C63052 * C9285 + C63056 * C6270 - C63057 * C6261 -
             C63056 * C6271 + C63051 * C6279 + C63054 * C1552 - C63055 * C1544 -
             C63054 * C1553 + C63050 * C1559) *
                C154226 +
            (C63646 + C63645 + C63644 + C63643) * C154406) *
               C154011 * C579) *
              C154066 * C154053)) /
            (p * q * std::sqrt(p + q));
    d2ee[168] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
             C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
                C34729 +
            (C19258 + C19259) * C34730 + C38629 * C34731 + C43780 * C154415) *
               C154011 * C154393 -
           ((C41715 + C41714) * C154415 + C41701 * C34731 +
            (C20597 + C20598) * C34730 +
            (C15024 * C602 - C15025 * C585 - C15024 * C603 + C154268 * C621 +
             C15022 * C600 - C15023 * C584 - C15022 * C601 + C154408 * C620) *
                C34729) *
               C154011 * C154146) *
              C154066 * C154461 +
          (((C15654 + C15653) * C34729 + C20567 * C34730 + C39917 * C34731 +
            (C39930 + C39931) * C154415) *
               C154011 * C154146 -
           (C38630 * C154415 + C19214 * C34731 + C19215 * C34730 +
            (C15088 + C15087) * C34729) *
               C154011 * C154393) *
              C154066 * C154462 +
          ((C15097 * C34729 + C18908 * C34730 + C19233 * C34731 +
            (C19264 + C19265) * C154415) *
               C154011 * C154393 -
           ((C15024 * C4908 - C15025 * C4905 - C15024 * C4909 +
             C154268 * C4914 + C15022 * C4262 - C15023 * C4256 -
             C15022 * C4263 + C154408 * C4268) *
                C154415 +
            (C20602 + C20601) * C34731 + C20168 * C34730 + C16068 * C34729) *
               C154011 * C154146) *
              C154066 * C818)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
              C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
                 C154406 +
             (C19258 + C19259) * C154226) *
                C2902 +
            ((C15087 + C15088) * C154406 + C19212 * C154226) * C2903 +
            C18913 * C154429) *
               C154393 -
           (C20171 * C154429 +
            ((C16380 + C16379) * C154226 + (C15653 + C15654) * C154406) *
                C2903 +
            ((C15024 * C1554 - C15025 * C1545 - C15024 * C1555 +
              C154268 * C1560 + C15022 * C1135 - C15023 * C1129 -
              C15022 * C1136 + C154408 * C1147) *
                 C154226 +
             (C15024 * C602 - C15025 * C585 - C15024 * C603 + C154268 * C621 +
              C15022 * C600 - C15023 * C584 - C15022 * C601 + C154408 * C620) *
                 C154406) *
                C2902) *
               C154146) *
              C154066 * C154461 +
          ((((C15654 + C15653) * C154406 + (C16379 + C16380) * C154226) *
                C2902 +
            ((C15652 + C15651) * C154406 + (C16381 + C16382) * C154226) *
                C2903 +
            ((C15650 + C15649) * C154406 + (C16383 + C16384) * C154226) *
                C154429) *
               C154146 -
           (C18912 * C154429 +
            (C15856 * C154226 + (C15090 + C15089) * C154406) * C2903 +
            (C19215 * C154226 + (C15088 + C15087) * C154406) * C2902) *
               C154393) *
              C154066 * C154462 +
          ((C18913 * C2902 + (C15098 * C154406 + C19876 * C154226) * C2903 +
            ((C15094 + C15093) * C154406 + (C15871 + C15872) * C154226) *
                C154429) *
               C154393 -
           (((C15024 * C1546 - C15025 * C1541 - C15024 * C1547 +
              C154268 * C1556 + C15022 * C1143 - C15023 * C1133 -
              C15022 * C1144 + C154408 * C1151) *
                 C154226 +
             (C16084 + C16083) * C154406) *
                C154429 +
            ((C16384 + C16383) * C154226 + C16067 * C154406) * C2903 +
            C20171 * C2902) *
               C154146) *
              C154066 * C818)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C63054 * C144 - C63055 * C136 - C63054 * C145 + C63050 * C160 +
             C63056 * C600 - C63057 * C584 - C63056 * C601 + C63051 * C620 +
             C63058 * C602 - C63059 * C585 - C63058 * C603 + C63052 * C621 +
             C63060 * C2337 - C63061 * C2328 - C63060 * C2338 +
             C154422 * C2343) *
                C154406 +
            (C67077 + C67078 + C67079 + C67080) * C154226) *
               C154011 * C154393 -
           ((C63060 * C9282 - C63061 * C9277 - C63060 * C9283 +
             C154422 * C9286 + C63058 * C6274 - C63059 * C6263 -
             C63058 * C6275 + C63052 * C6281 + C63056 * C1554 - C63057 * C1545 -
             C63056 * C1555 + C63051 * C1560 + C63054 * C1135 - C63055 * C1129 -
             C63054 * C1136 + C63050 * C1147) *
                C154226 +
            (C63060 * C7777 - C63061 * C7773 - C63060 * C7778 +
             C154422 * C7785 + C63058 * C2337 - C63059 * C2328 -
             C63058 * C2338 + C63052 * C2343 + C63056 * C602 - C63057 * C585 -
             C63056 * C603 + C63051 * C621 + C63054 * C600 - C63055 * C584 -
             C63054 * C601 + C63050 * C620) *
                C154406) *
               C154011 * C154146) *
              C154066 * C154461 +
          (((C63642 + C63641 + C63640 + C63639) * C154406 +
            (C64373 + C64374 + C64375 + C64376) * C154226) *
               C154011 * C154146 -
           ((C63389 + C63390 + C63391 + C63392) * C154226 +
            (C63138 + C63137 + C63136 + C63135) * C154406) *
               C154011 * C154393) *
              C154066 * C154462 +
          (((C63142 + C63141 + C63140 + C63139) * C154406 +
            (C63865 + C63866 + C63867 + C63868) * C154226) *
               C154011 * C154393 -
           ((C63060 * C9278 - C63061 * C9275 - C63060 * C9279 +
             C154422 * C9284 + C63058 * C6266 - C63059 * C6259 -
             C63058 * C6267 + C63052 * C6277 + C63056 * C1550 - C63057 * C1543 -
             C63056 * C1551 + C63051 * C1558 + C63054 * C1139 - C63055 * C1131 -
             C63054 * C1140 + C63050 * C1149) *
                C154226 +
            (C64090 + C64089 + C64088 + C64087) * C154406) *
               C154011 * C154146) *
              C154066 * C818)) /
            (p * q * std::sqrt(p + q));
    d2ee[169] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
              C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
                 C154406 +
             (C19258 + C19259) * C154226) *
                C2902 +
            ((C15087 + C15088) * C154406 + C19212 * C154226) * C2903 +
            C18913 * C154429) *
               C154082 * C338 -
           ((C19213 * C154226 + C15856 * C154406) * C154429 +
            (C19214 * C154226 + C19215 * C154406) * C2903 +
            ((C19260 + C19261) * C154226 + (C19259 + C19258) * C154406) *
                C2902) *
               C154082 * C339 +
           (((C19261 + C19260) * C154406 +
             (C15022 * C1412 - C15023 * C1403 - C15022 * C1413 +
              C154408 * C1418 + C15024 * C4258 - C15025 * C4254 -
              C15024 * C4259 + C154268 * C4266) *
                 C154226) *
                C2902 +
            (C19224 * C154406 + (C19262 + C19263) * C154226) * C2903 +
            (C19233 * C154406 + (C19264 + C19265) * C154226) * C154429) *
               C154082 * C340) *
              C341 +
          (((C19212 * C154406 + C19224 * C154226) * C2902 +
            (C18908 * C154406 + C19233 * C154226) * C2903 +
            ((C15372 + C15371) * C154406 + (C15381 + C15382) * C154226) *
                C154429) *
               C154082 * C339 -
           (C18912 * C154429 +
            (C15856 * C154226 + (C15090 + C15089) * C154406) * C2903 +
            (C19215 * C154226 + (C15088 + C15087) * C154406) * C2902) *
               C154082 * C338 -
           (((C15024 * C4264 - C15025 * C4257 - C15024 * C4265 +
              C154268 * C4269 + C15022 * C1406 - C15023 * C1400 -
              C15022 * C1407 + C154408 * C1415) *
                 C154226 +
             (C15382 + C15381) * C154406) *
                C154429 +
            ((C19265 + C19264) * C154226 + C19213 * C154406) * C2903 +
            ((C19263 + C19262) * C154226 + C19214 * C154406) * C2902) *
               C154082 * C340) *
              C154053)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
             C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
                C154406 +
            (C15022 * C363 - C15023 * C347 - C15022 * C364 + C154408 * C383 +
             C15024 * C1135 - C15025 * C1129 - C15024 * C1136 +
             C154268 * C1147) *
                C154226) *
               C2902 +
           ((C15087 + C15088) * C154406 + (C15376 + C15375) * C154226) * C2903 +
           C18913 * C154429) *
              C154082 * C154066 * C130 -
          (C18912 * C154429 +
           (C15856 * C154226 + (C15090 + C15089) * C154406) * C2903 +
           ((C15375 + C15376) * C154226 + (C15088 + C15087) * C154406) *
               C2902) *
              C154082 * C154066 * C131 +
          (C18913 * C2902 +
           (C15098 * C154406 + (C15372 + C15371) * C154226) * C2903 +
           ((C15094 + C15093) * C154406 + (C15871 + C15872) * C154226) *
               C154429) *
              C154082 * C154066 * C132 -
          (((C15024 * C1145 - C15025 * C1134 - C15024 * C1146 +
             C154268 * C1152 + C15022 * C375 - C15023 * C353 - C15022 * C376 +
             C154408 * C389) *
                C154226 +
            (C15096 + C15095) * C154406) *
               C154429 +
           ((C15872 + C15871) * C154226 + C15099 * C154406) * C2903 +
           C18912 * C2902) *
              C154082 * C154066 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
            C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
               C34729 +
           (C19258 + C19259) * C34730 + C38629 * C34731 +
           (C21099 + C21100) * C154415) *
              C154011 * C154082 * C154066 * C130 -
          (C38630 * C154415 + C19214 * C34731 + C19215 * C34730 +
           (C15088 + C15087) * C34729) *
              C154011 * C154082 * C154066 * C131 +
          (C15097 * C34729 + C18908 * C34730 + C19233 * C34731 +
           (C19264 + C19265) * C154415) *
              C154011 * C154082 * C154066 * C132 -
          ((C15024 * C4264 - C15025 * C4257 - C15024 * C4265 + C154268 * C4269 +
            C15022 * C1406 - C15023 * C1400 - C15022 * C1407 +
            C154408 * C1415) *
               C154415 +
           (C15382 + C15381) * C34731 + C15855 * C34730 + C15100 * C34729) *
              C154011 * C154082 * C154066 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
             C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
                C34729 +
            (C19258 + C19259) * C34730 + C38629 * C34731 + C43780 * C154415) *
               C154011 * C154082 * C338 -
           ((C40430 + C40429) * C154415 + C40416 * C34731 +
            (C19260 + C19261) * C34730 + (C19259 + C19258) * C34729) *
               C154011 * C154082 * C339 +
           (C38629 * C34729 + C43780 * C34730 + (C40429 + C40430) * C34731 +
            (C15022 * C4675 - C15023 * C4670 - C15022 * C4676 +
             C154408 * C4679 + C15024 * C28880 - C15025 * C28878 -
             C15024 * C28881 + C154268 * C28884) *
                C154415) *
               C154011 * C154082 * C340) *
              C341 +
          ((C19212 * C34729 + C19224 * C34730 + C38631 * C34731 +
            (C38644 + C38645) * C154415) *
               C154011 * C154082 * C339 -
           (C38630 * C154415 + C19214 * C34731 + C19215 * C34730 +
            (C15088 + C15087) * C34729) *
               C154011 * C154082 * C338 -
           ((C15024 * C28882 - C15025 * C28879 - C15024 * C28883 +
             C154268 * C28885 + C15022 * C4673 - C15023 * C4669 -
             C15022 * C4674 + C154408 * C4678) *
                C154415 +
            (C38645 + C38644) * C34731 + C38630 * C34730 + C19214 * C34729) *
               C154011 * C154082 * C340) *
              C154053)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C63054 * C144 - C63055 * C136 - C63054 * C145 + C63050 * C160 +
            C63056 * C600 - C63057 * C584 - C63056 * C601 + C63051 * C620 +
            C63058 * C602 - C63059 * C585 - C63058 * C603 + C63052 * C621 +
            C63060 * C2337 - C63061 * C2328 - C63060 * C2338 +
            C154422 * C2343) *
               C154406 +
           (C63054 * C363 - C63055 * C347 - C63054 * C364 + C63050 * C383 +
            C63056 * C1135 - C63057 * C1129 - C63056 * C1136 + C63051 * C1147 +
            C63058 * C1554 - C63059 * C1545 - C63058 * C1555 + C63052 * C1560 +
            C63060 * C6274 - C63061 * C6263 - C63060 * C6275 +
            C154422 * C6281) *
               C154226) *
              C154011 * C154082 * C154066 * C130 -
          ((C63389 + C63390 + C63391 + C63392) * C154226 +
           (C63138 + C63137 + C63136 + C63135) * C154406) *
              C154011 * C154082 * C154066 * C131 +
          ((C63142 + C63141 + C63140 + C63139) * C154406 +
           (C63865 + C63866 + C63867 + C63868) * C154226) *
              C154011 * C154082 * C154066 * C132 -
          ((C63060 * C8648 - C63061 * C8647 - C63060 * C8649 + C154422 * C8650 +
            C63058 * C1548 - C63059 * C1542 - C63058 * C1549 + C63052 * C1557 +
            C63056 * C1141 - C63057 * C1132 - C63056 * C1142 + C63051 * C1150 +
            C63054 * C357 - C63055 * C344 - C63054 * C358 + C63050 * C380) *
               C154226 +
           (C63146 + C63145 + C63144 + C63143) * C154406) *
              C154011 * C154082 * C154066 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C63054 * C144 - C63055 * C136 - C63054 * C145 + C63050 * C160 +
             C63056 * C600 - C63057 * C584 - C63056 * C601 + C63051 * C620 +
             C63058 * C602 - C63059 * C585 - C63058 * C603 + C63052 * C621 +
             C63060 * C2337 - C63061 * C2328 - C63060 * C2338 +
             C154422 * C2343) *
                C154406 +
            (C67077 + C67078 + C67079 + C67080) * C154226) *
               C154011 * C154082 * C338 -
           ((C67081 + C67082 + C67083 + C67084) * C154226 +
            (C67080 + C67079 + C67078 + C67077) * C154406) *
               C154011 * C154082 * C339 +
           ((C67084 + C67083 + C67082 + C67081) * C154406 +
            (C63054 * C1412 - C63055 * C1403 - C63054 * C1413 + C63050 * C1418 +
             C63056 * C4258 - C63057 * C4254 - C63056 * C4259 + C63051 * C4266 +
             C63058 * C4912 - C63059 * C4907 - C63058 * C4913 + C63052 * C4916 +
             C63060 * C30002 - C63061 * C29999 - C63060 * C30003 +
             C154422 * C30005) *
                C154226) *
               C154011 * C154082 * C340) *
              C341 +
          (((C63392 + C63391 + C63390 + C63389) * C154406 +
            (C63393 + C63394 + C63395 + C63396) * C154226) *
               C154011 * C154082 * C339 -
           ((C63389 + C63390 + C63391 + C63392) * C154226 +
            (C63138 + C63137 + C63136 + C63135) * C154406) *
               C154011 * C154082 * C338 -
           ((C63060 * C31817 - C63061 * C31816 - C63060 * C31818 +
             C154422 * C31819 + C63058 * C4910 - C63059 * C4906 -
             C63058 * C4911 + C63052 * C4915 + C63056 * C4260 - C63057 * C4255 -
             C63056 * C4261 + C63051 * C4267 + C63054 * C1410 - C63055 * C1402 -
             C63054 * C1411 + C63050 * C1417) *
                C154226 +
            (C63396 + C63395 + C63394 + C63393) * C154406) *
               C154011 * C154082 * C340) *
              C154053)) /
            (p * q * std::sqrt(p + q));
    d2ee[170] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
             C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
                C34729 +
            (C19258 + C19259) * C34730 + C38629 * C34731 + C43780 * C154415) *
               C154011 * C154082 * C154463 -
           (C44945 * C154415 + C40416 * C34731 + (C19260 + C19261) * C34730 +
            (C19259 + C19258) * C34729) *
               C154011 * C154082 * C154464 +
           (C38629 * C34729 + C43780 * C34730 + (C40429 + C40430) * C34731 +
            (C44958 + C44959) * C154415) *
               C154011 * C154082 * C1685) *
              C154384 +
          ((C19212 * C34729 + C19224 * C34730 + C38631 * C34731 +
            (C38644 + C38645) * C154415) *
               C154011 * C154082 * C154464 -
           (C38630 * C154415 + C19214 * C34731 + C19215 * C34730 +
            (C15088 + C15087) * C34729) *
               C154011 * C154082 * C154463 -
           ((C15024 * C28882 - C15025 * C28879 - C15024 * C28883 +
             C154268 * C28885 + C15022 * C4673 - C15023 * C4669 -
             C15022 * C4674 + C154408 * C4678) *
                C154415 +
            (C38645 + C38644) * C34731 + C38630 * C34730 + C19214 * C34729) *
               C154011 * C154082 * C1685) *
              C154053)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
              C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
                 C154406 +
             (C19258 + C19259) * C154226) *
                C2902 +
            ((C15087 + C15088) * C154406 + C19212 * C154226) * C2903 +
            C18913 * C154429) *
               C154082 * C154463 -
           (C19877 * C154429 + (C19214 * C154226 + C19215 * C154406) * C2903 +
            ((C19260 + C19261) * C154226 + (C19259 + C19258) * C154406) *
                C2902) *
               C154082 * C154464 +
           (((C19261 + C19260) * C154406 + (C21099 + C21100) * C154226) *
                C2902 +
            (C19224 * C154406 + (C19262 + C19263) * C154226) * C2903 +
            (C19233 * C154406 + (C19264 + C19265) * C154226) * C154429) *
               C154082 * C1685) *
              C154384 +
          (((C19212 * C154406 + C19224 * C154226) * C2902 +
            (C18908 * C154406 + C19233 * C154226) * C2903 +
            (C19876 * C154406 + (C15381 + C15382) * C154226) * C154429) *
               C154082 * C154464 -
           (C18912 * C154429 +
            (C15856 * C154226 + (C15090 + C15089) * C154406) * C2903 +
            (C19215 * C154226 + (C15088 + C15087) * C154406) * C2902) *
               C154082 * C154463 -
           (((C15024 * C4264 - C15025 * C4257 - C15024 * C4265 +
              C154268 * C4269 + C15022 * C1406 - C15023 * C1400 -
              C15022 * C1407 + C154408 * C1415) *
                 C154226 +
             (C15382 + C15381) * C154406) *
                C154429 +
            ((C19265 + C19264) * C154226 + C19213 * C154406) * C2903 +
            ((C19263 + C19262) * C154226 + C19214 * C154406) * C2902) *
               C154082 * C1685) *
              C154053)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C63054 * C144 - C63055 * C136 - C63054 * C145 + C63050 * C160 +
             C63056 * C600 - C63057 * C584 - C63056 * C601 + C63051 * C620 +
             C63058 * C602 - C63059 * C585 - C63058 * C603 + C63052 * C621 +
             C63060 * C2337 - C63061 * C2328 - C63060 * C2338 +
             C154422 * C2343) *
                C154406 +
            (C67077 + C67078 + C67079 + C67080) * C154226) *
               C154011 * C154082 * C154463 -
           ((C67081 + C67082 + C67083 + C67084) * C154226 +
            (C67080 + C67079 + C67078 + C67077) * C154406) *
               C154011 * C154082 * C154464 +
           ((C67084 + C67083 + C67082 + C67081) * C154406 +
            (C68301 + C68302 + C68303 + C68304) * C154226) *
               C154011 * C154082 * C1685) *
              C154384 +
          (((C63392 + C63391 + C63390 + C63389) * C154406 +
            (C63393 + C63394 + C63395 + C63396) * C154226) *
               C154011 * C154082 * C154464 -
           ((C63389 + C63390 + C63391 + C63392) * C154226 +
            (C63138 + C63137 + C63136 + C63135) * C154406) *
               C154011 * C154082 * C154463 -
           ((C63060 * C31817 - C63061 * C31816 - C63060 * C31818 +
             C154422 * C31819 + C63058 * C4910 - C63059 * C4906 -
             C63058 * C4911 + C63052 * C4915 + C63056 * C4260 - C63057 * C4255 -
             C63056 * C4261 + C63051 * C4267 + C63054 * C1410 - C63055 * C1402 -
             C63054 * C1411 + C63050 * C1417) *
                C154226 +
            (C63396 + C63395 + C63394 + C63393) * C154406) *
               C154011 * C154082 * C1685) *
              C154053)) /
            (p * q * std::sqrt(p + q));
    d2ee[171] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
             C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
                C34729 +
            (C19258 + C19259) * C34730 + C38629 * C34731 + C43780 * C154415) *
               C154011 * C154393 -
           (C45814 * C154415 + C41701 * C34731 + (C20597 + C20598) * C34730 +
            (C15024 * C602 - C15025 * C585 - C15024 * C603 + C154268 * C621 +
             C15022 * C600 - C15023 * C584 - C15022 * C601 + C154408 * C620) *
                C34729) *
               C154011 * C154146) *
              C154463 +
          (((C20598 + C20597) * C34729 + (C22383 + C22384) * C34730 +
            (C41714 + C41715) * C34731 + (C45827 + C45828) * C154415) *
               C154011 * C154146 -
           (C44945 * C154415 + C40416 * C34731 + (C19260 + C19261) * C34730 +
            (C19259 + C19258) * C34729) *
               C154011 * C154393) *
              C154464 +
          ((C38629 * C34729 + C43780 * C34730 + (C40429 + C40430) * C34731 +
            (C44958 + C44959) * C154415) *
               C154011 * C154393 -
           ((C15024 * C29238 - C15025 * C29237 - C15024 * C29239 +
             C154268 * C29240 + C15022 * C28880 - C15023 * C28878 -
             C15022 * C28881 + C154408 * C28884) *
                C154415 +
            (C45828 + C45827) * C34731 + C45814 * C34730 + C41701 * C34729) *
               C154011 * C154146) *
              C1685) *
         C154047) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
              C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
                 C154406 +
             (C19258 + C19259) * C154226) *
                C2902 +
            ((C15087 + C15088) * C154406 + C19212 * C154226) * C2903 +
            C18913 * C154429) *
               C154393 -
           (C20171 * C154429 +
            (C20558 * C154226 + (C15653 + C15654) * C154406) * C2903 +
            ((C20597 + C20598) * C154226 +
             (C15024 * C602 - C15025 * C585 - C15024 * C603 + C154268 * C621 +
              C15022 * C600 - C15023 * C584 - C15022 * C601 + C154408 * C620) *
                 C154406) *
                C2902) *
               C154146) *
              C154463 +
          ((((C20598 + C20597) * C154406 + (C22383 + C22384) * C154226) *
                C2902 +
            (C20567 * C154406 + (C20599 + C20600) * C154226) * C2903 +
            (C20576 * C154406 + (C20601 + C20602) * C154226) * C154429) *
               C154146 -
           (C19877 * C154429 + (C19214 * C154226 + C19215 * C154406) * C2903 +
            ((C19260 + C19261) * C154226 + (C19259 + C19258) * C154406) *
                C2902) *
               C154393) *
              C154464 +
          ((((C19261 + C19260) * C154406 + (C21099 + C21100) * C154226) *
                C2902 +
            (C19224 * C154406 + (C19262 + C19263) * C154226) * C2903 +
            (C19233 * C154406 + (C19264 + C19265) * C154226) * C154429) *
               C154393 -
           (((C15024 * C4908 - C15025 * C4905 - C15024 * C4909 +
              C154268 * C4914 + C15022 * C4262 - C15023 * C4256 -
              C15022 * C4263 + C154408 * C4268) *
                 C154226 +
             (C20602 + C20601) * C154406) *
                C154429 +
            ((C15024 * C4910 - C15025 * C4906 - C15024 * C4911 +
              C154268 * C4915 + C15022 * C4260 - C15023 * C4255 -
              C15022 * C4261 + C154408 * C4267) *
                 C154226 +
             (C20600 + C20599) * C154406) *
                C2903 +
            ((C15024 * C4912 - C15025 * C4907 - C15024 * C4913 +
              C154268 * C4916 + C15022 * C4258 - C15023 * C4254 -
              C15022 * C4259 + C154408 * C4266) *
                 C154226 +
             (C22384 + C22383) * C154406) *
                C2902) *
               C154146) *
              C1685) *
         C154047) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C63054 * C144 - C63055 * C136 - C63054 * C145 + C63050 * C160 +
             C63056 * C600 - C63057 * C584 - C63056 * C601 + C63051 * C620 +
             C63058 * C602 - C63059 * C585 - C63058 * C603 + C63052 * C621 +
             C63060 * C2337 - C63061 * C2328 - C63060 * C2338 +
             C154422 * C2343) *
                C154406 +
            (C67077 + C67078 + C67079 + C67080) * C154226) *
               C154011 * C154393 -
           ((C67949 + C67950 + C67951 + C67952) * C154226 +
            (C63060 * C7777 - C63061 * C7773 - C63060 * C7778 +
             C154422 * C7785 + C63058 * C2337 - C63059 * C2328 -
             C63058 * C2338 + C63052 * C2343 + C63056 * C602 - C63057 * C585 -
             C63056 * C603 + C63051 * C621 + C63054 * C600 - C63055 * C584 -
             C63054 * C601 + C63050 * C620) *
                C154406) *
               C154011 * C154146) *
              C154463 +
          (((C67952 + C67951 + C67950 + C67949) * C154406 +
            (C69197 + C69198 + C69199 + C69200) * C154226) *
               C154011 * C154146 -
           ((C67081 + C67082 + C67083 + C67084) * C154226 +
            (C67080 + C67079 + C67078 + C67077) * C154406) *
               C154011 * C154393) *
              C154464 +
          (((C67084 + C67083 + C67082 + C67081) * C154406 +
            (C68301 + C68302 + C68303 + C68304) * C154226) *
               C154011 * C154393 -
           ((C63060 * C32489 - C63061 * C32488 - C63060 * C32490 +
             C154422 * C32491 + C63058 * C30002 - C63059 * C29999 -
             C63058 * C30003 + C63052 * C30005 + C63056 * C4912 -
             C63057 * C4907 - C63056 * C4913 + C63051 * C4916 + C63054 * C4258 -
             C63055 * C4254 - C63054 * C4259 + C63050 * C4266) *
                C154226 +
            (C69200 + C69199 + C69198 + C69197) * C154406) *
               C154011 * C154146) *
              C1685) *
         C154047) /
            (p * q * std::sqrt(p + q));
    d2ee[172] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C15022 * C144 - C15023 * C136 - C15022 * C145 +
                  C154408 * C160 + C15024 * C600 - C15025 * C584 -
                  C15024 * C601 + C154268 * C620) *
                     C154406 +
                 (C19258 + C19259) * C154226) *
                    C2902 +
                ((C15087 + C15088) * C154406 + C19212 * C154226) * C2903 +
                C18913 * C154429) *
                   C154082 * C1307 -
               (C19877 * C154429 +
                (C19214 * C154226 + C19215 * C154406) * C2903 +
                ((C19260 + C19261) * C154226 + (C19259 + C19258) * C154406) *
                    C2902) *
                   C154082 * C154118) *
                  C1309 +
              (((C19212 * C154406 + C19224 * C154226) * C2902 +
                (C18908 * C154406 + C19233 * C154226) * C2903 +
                (C19876 * C154406 + (C15381 + C15382) * C154226) * C154429) *
                   C154082 * C154118 -
               (C18912 * C154429 +
                (C15856 * C154226 + (C15090 + C15089) * C154406) * C2903 +
                (C19215 * C154226 + (C15088 + C15087) * C154406) * C2902) *
                   C154082 * C1307) *
                  C1310 +
              ((C18913 * C2902 + (C15098 * C154406 + C19876 * C154226) * C2903 +
                ((C15094 + C15093) * C154406 + (C15871 + C15872) * C154226) *
                    C154429) *
                   C154082 * C1307 -
               (((C15024 * C1977 - C15025 * C1972 - C15024 * C1978 +
                  C154268 * C1987 + C15022 * C373 - C15023 * C352 -
                  C15022 * C374 + C154408 * C388) *
                     C154226 +
                 (C15872 + C15871) * C154406) *
                    C154429 +
                ((C15382 + C15381) * C154226 + C15855 * C154406) * C2903 +
                C19877 * C2902) *
                   C154082 * C154118) *
                  C1311) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C15022 * C144 - C15023 * C136 - C15022 * C145 +
                 C154408 * C160 + C15024 * C600 - C15025 * C584 -
                 C15024 * C601 + C154268 * C620) *
                    C154406 +
                (C19258 + C19259) * C154226) *
                   C2902 +
               ((C15087 + C15088) * C154406 + C19212 * C154226) * C2903 +
               C18913 * C154429) *
                  C154082 * C1394 -
              (C19877 * C154429 +
               (C19214 * C154226 + C19215 * C154406) * C2903 +
               ((C19260 + C19261) * C154226 + (C19259 + C19258) * C154406) *
                   C2902) *
                  C154082 * C1395 +
              (((C19261 + C19260) * C154406 + (C21099 + C21100) * C154226) *
                   C2902 +
               (C19224 * C154406 + (C19262 + C19263) * C154226) * C2903 +
               (C19233 * C154406 + (C19264 + C19265) * C154226) * C154429) *
                  C154082 * C1396 -
              (((C15024 * C5660 - C15025 * C5657 - C15024 * C5661 +
                 C154268 * C5666 + C15022 * C3147 - C15023 * C3141 -
                 C15022 * C3148 + C154408 * C3153) *
                    C154226 +
                (C19265 + C19264) * C154406) *
                   C154429 +
               ((C15024 * C5662 - C15025 * C5658 - C15024 * C5663 +
                 C154268 * C5667 + C15022 * C3145 - C15023 * C3140 -
                 C15022 * C3146 + C154408 * C3152) *
                    C154226 +
                (C19263 + C19262) * C154406) *
                   C2903 +
               ((C15024 * C5664 - C15025 * C5659 - C15024 * C5665 +
                 C154268 * C5668 + C15022 * C3143 - C15023 * C3139 -
                 C15022 * C3144 + C154408 * C3151) *
                    C154226 +
                (C21100 + C21099) * C154406) *
                   C2902) *
                  C154082 * C1397) *
             C154047) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
              C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
                 C154406 +
             (C19258 + C19259) * C154226) *
                C2902 +
            ((C15087 + C15088) * C154406 + C19212 * C154226) * C2903 +
            C18913 * C154429) *
               C577 -
           (C20171 * C154429 +
            (C20558 * C154226 + (C15653 + C15654) * C154406) * C2903 +
            ((C20597 + C20598) * C154226 +
             (C15024 * C602 - C15025 * C585 - C15024 * C603 + C154268 * C621 +
              C15022 * C600 - C15023 * C584 - C15022 * C601 + C154408 * C620) *
                 C154406) *
                C2902) *
               C578 +
           (((C15022 * C602 - C15023 * C585 - C15022 * C603 + C154408 * C621 +
              C15024 * C2337 - C15025 * C2328 - C15024 * C2338 +
              C154268 * C2343) *
                 C154406 +
             (C21403 + C21404) * C154226) *
                C2902 +
            ((C15655 + C15656) * C154406 + (C19580 + C19581) * C154226) *
                C2903 +
            ((C15657 + C15658) * C154406 + (C19582 + C19583) * C154226) *
                C154429) *
               C579) *
              C1307 +
          ((((C20598 + C20597) * C154406 +
             (C15022 * C1985 - C15023 * C1976 - C15022 * C1986 +
              C154408 * C1991 + C15024 * C3445 - C15025 * C3441 -
              C15024 * C3446 + C154268 * C3453) *
                 C154226) *
                C2902 +
            (C20567 * C154406 + (C20599 + C20600) * C154226) * C2903 +
            (C20576 * C154406 + (C20601 + C20602) * C154226) * C154429) *
               C578 -
           (C19877 * C154429 + (C19214 * C154226 + C19215 * C154406) * C2903 +
            ((C19260 + C19261) * C154226 + (C19259 + C19258) * C154406) *
                C2902) *
               C577 -
           (((C15024 * C6264 - C15025 * C6258 - C15024 * C6265 +
              C154268 * C6276 + C15022 * C3449 - C15023 * C3443 -
              C15022 * C3450 + C154408 * C3455) *
                 C154226 +
             (C19583 + C19582) * C154406) *
                C154429 +
            ((C15024 * C6268 - C15025 * C6260 - C15024 * C6269 +
              C154268 * C6278 + C15022 * C3447 - C15023 * C3442 -
              C15022 * C3448 + C154408 * C3454) *
                 C154226 +
             (C19581 + C19580) * C154406) *
                C2903 +
            ((C15024 * C6272 - C15025 * C6262 - C15024 * C6273 +
              C154268 * C6280 + C15022 * C3445 - C15023 * C3441 -
              C15022 * C3446 + C154408 * C3453) *
                 C154226 +
             (C21404 + C21403) * C154406) *
                C2902) *
               C579) *
              C154118) *
         C154047) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
             C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
                C34729 +
            (C19258 + C19259) * C34730 + C38629 * C34731 + C43780 * C154415) *
               C154011 * C154082 * C1307 -
           ((C40430 + C40429) * C154415 + C40416 * C34731 +
            (C19260 + C19261) * C34730 + (C19259 + C19258) * C34729) *
               C154011 * C154082 * C154118) *
              C1309 +
          ((C19212 * C34729 + C19224 * C34730 + C38631 * C34731 +
            (C38644 + C38645) * C154415) *
               C154011 * C154082 * C154118 -
           (C38630 * C154415 + C19214 * C34731 + C19215 * C34730 +
            (C15088 + C15087) * C34729) *
               C154011 * C154082 * C1307) *
              C1310 +
          ((C15097 * C34729 + C18908 * C34730 + C19233 * C34731 +
            (C19264 + C19265) * C154415) *
               C154011 * C154082 * C1307 -
           ((C15024 * C5660 - C15025 * C5657 - C15024 * C5661 +
             C154268 * C5666 + C15022 * C3147 - C15023 * C3141 -
             C15022 * C3148 + C154408 * C3153) *
                C154415 +
            (C19265 + C19264) * C34731 + C19213 * C34730 + C15856 * C34729) *
               C154011 * C154082 * C154118) *
              C1311)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
            C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
               C34729 +
           (C19258 + C19259) * C34730 + C38629 * C34731 + C43780 * C154415) *
              C154011 * C154082 * C1394 -
          (C44945 * C154415 + C40416 * C34731 + (C19260 + C19261) * C34730 +
           (C19259 + C19258) * C34729) *
              C154011 * C154082 * C1395 +
          (C38629 * C34729 + C43780 * C34730 + (C40429 + C40430) * C34731 +
           (C44958 + C44959) * C154415) *
              C154011 * C154082 * C1396 -
          ((C15024 * C29662 - C15025 * C29661 - C15024 * C29663 +
            C154268 * C29664 + C15022 * C28322 - C15023 * C28320 -
            C15022 * C28323 + C154408 * C28326) *
               C154415 +
           (C44959 + C44958) * C34731 + C44945 * C34730 + C40416 * C34729) *
              C154011 * C154082 * C1397) *
         C154047) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
             C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
                C34729 +
            (C19258 + C19259) * C34730 + C38629 * C34731 + C43780 * C154415) *
               C154011 * C577 -
           ((C41715 + C41714) * C154415 + C41701 * C34731 +
            (C20597 + C20598) * C34730 +
            (C15024 * C602 - C15025 * C585 - C15024 * C603 + C154268 * C621 +
             C15022 * C600 - C15023 * C584 - C15022 * C601 + C154408 * C620) *
                C34729) *
               C154011 * C578 +
           ((C15022 * C602 - C15023 * C585 - C15022 * C603 + C154408 * C621 +
             C15024 * C2337 - C15025 * C2328 - C15024 * C2338 +
             C154268 * C2343) *
                C34729 +
            (C21403 + C21404) * C34730 + (C40733 + C40734) * C34731 +
            (C45166 + C45167) * C154415) *
               C154011 * C579) *
              C1307 +
          (((C20598 + C20597) * C34729 + (C22383 + C22384) * C34730 +
            (C41714 + C41715) * C34731 +
            (C15022 * C5664 - C15023 * C5659 - C15022 * C5665 +
             C154408 * C5668 + C15024 * C28466 - C15025 * C28464 -
             C15024 * C28467 + C154268 * C28470) *
                C154415) *
               C154011 * C578 -
           (C44945 * C154415 + C40416 * C34731 + (C19260 + C19261) * C34730 +
            (C19259 + C19258) * C34729) *
               C154011 * C577 -
           ((C15024 * C30000 - C15025 * C29998 - C15024 * C30001 +
             C154268 * C30004 + C15022 * C28466 - C15023 * C28464 -
             C15022 * C28467 + C154408 * C28470) *
                C154415 +
            (C45167 + C45166) * C34731 + (C40734 + C40733) * C34730 +
            (C21404 + C21403) * C34729) *
               C154011 * C579) *
              C154118) *
         C154047) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C63054 * C144 - C63055 * C136 - C63054 * C145 + C63050 * C160 +
             C63056 * C600 - C63057 * C584 - C63056 * C601 + C63051 * C620 +
             C63058 * C602 - C63059 * C585 - C63058 * C603 + C63052 * C621 +
             C63060 * C2337 - C63061 * C2328 - C63060 * C2338 +
             C154422 * C2343) *
                C154406 +
            (C67077 + C67078 + C67079 + C67080) * C154226) *
               C154011 * C154082 * C1307 -
           ((C67081 + C67082 + C67083 + C67084) * C154226 +
            (C67080 + C67079 + C67078 + C67077) * C154406) *
               C154011 * C154082 * C154118) *
              C1309 +
          (((C63392 + C63391 + C63390 + C63389) * C154406 +
            (C63393 + C63394 + C63395 + C63396) * C154226) *
               C154011 * C154082 * C154118 -
           ((C63389 + C63390 + C63391 + C63392) * C154226 +
            (C63138 + C63137 + C63136 + C63135) * C154406) *
               C154011 * C154082 * C1307) *
              C1310 +
          (((C63142 + C63141 + C63140 + C63139) * C154406 +
            (C63865 + C63866 + C63867 + C63868) * C154226) *
               C154011 * C154082 * C1307 -
           ((C63060 * C6264 - C63061 * C6258 - C63060 * C6265 +
             C154422 * C6276 + C63058 * C3449 - C63059 * C3443 -
             C63058 * C3450 + C63052 * C3455 + C63056 * C1981 - C63057 * C1974 -
             C63056 * C1982 + C63051 * C1989 + C63054 * C369 - C63055 * C350 -
             C63054 * C370 + C63050 * C386) *
                C154226 +
            (C63868 + C63867 + C63866 + C63865) * C154406) *
               C154011 * C154082 * C154118) *
              C1311)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C63054 * C144 - C63055 * C136 - C63054 * C145 + C63050 * C160 +
            C63056 * C600 - C63057 * C584 - C63056 * C601 + C63051 * C620 +
            C63058 * C602 - C63059 * C585 - C63058 * C603 + C63052 * C621 +
            C63060 * C2337 - C63061 * C2328 - C63060 * C2338 +
            C154422 * C2343) *
               C154406 +
           (C67077 + C67078 + C67079 + C67080) * C154226) *
              C154011 * C154082 * C1394 -
          ((C67081 + C67082 + C67083 + C67084) * C154226 +
           (C67080 + C67079 + C67078 + C67077) * C154406) *
              C154011 * C154082 * C1395 +
          ((C67084 + C67083 + C67082 + C67081) * C154406 +
           (C68301 + C68302 + C68303 + C68304) * C154226) *
              C154011 * C154082 * C1396 -
          ((C63060 * C30000 - C63061 * C29998 - C63060 * C30001 +
            C154422 * C30004 + C63058 * C28466 - C63059 * C28464 -
            C63058 * C28467 + C63052 * C28470 + C63056 * C5664 -
            C63057 * C5659 - C63056 * C5665 + C63051 * C5668 + C63054 * C3143 -
            C63055 * C3139 - C63054 * C3144 + C63050 * C3151) *
               C154226 +
           (C68304 + C68303 + C68302 + C68301) * C154406) *
              C154011 * C154082 * C1397) *
         C154047) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C63054 * C144 - C63055 * C136 - C63054 * C145 + C63050 * C160 +
             C63056 * C600 - C63057 * C584 - C63056 * C601 + C63051 * C620 +
             C63058 * C602 - C63059 * C585 - C63058 * C603 + C63052 * C621 +
             C63060 * C2337 - C63061 * C2328 - C63060 * C2338 +
             C154422 * C2343) *
                C154406 +
            (C67077 + C67078 + C67079 + C67080) * C154226) *
               C154011 * C577 -
           ((C67949 + C67950 + C67951 + C67952) * C154226 +
            (C63060 * C7777 - C63061 * C7773 - C63060 * C7778 +
             C154422 * C7785 + C63058 * C2337 - C63059 * C2328 -
             C63058 * C2338 + C63052 * C2343 + C63056 * C602 - C63057 * C585 -
             C63056 * C603 + C63051 * C621 + C63054 * C600 - C63055 * C584 -
             C63054 * C601 + C63050 * C620) *
                C154406) *
               C154011 * C578 +
           ((C63054 * C602 - C63055 * C585 - C63054 * C603 + C63050 * C621 +
             C63056 * C2337 - C63057 * C2328 - C63056 * C2338 + C63051 * C2343 +
             C63058 * C7777 - C63059 * C7773 - C63058 * C7778 + C63052 * C7785 +
             C63060 * C10602 - C63061 * C10597 - C63060 * C10603 +
             C154422 * C10606) *
                C154406 +
            (C68523 + C68524 + C68525 + C68526) * C154226) *
               C154011 * C579) *
              C1307 +
          (((C67952 + C67951 + C67950 + C67949) * C154406 +
            (C63054 * C1985 - C63055 * C1976 - C63054 * C1986 + C63050 * C1991 +
             C63056 * C3445 - C63057 * C3441 - C63056 * C3446 + C63051 * C3453 +
             C63058 * C6272 - C63059 * C6262 - C63058 * C6273 + C63052 * C6280 +
             C63060 * C31084 - C63061 * C31082 - C63060 * C31085 +
             C154422 * C31088) *
                C154226) *
               C154011 * C578 -
           ((C67081 + C67082 + C67083 + C67084) * C154226 +
            (C67080 + C67079 + C67078 + C67077) * C154406) *
               C154011 * C577 -
           ((C63060 * C33867 - C63061 * C33865 - C63060 * C33868 +
             C154422 * C33871 + C63058 * C31084 - C63059 * C31082 -
             C63058 * C31085 + C63052 * C31088 + C63056 * C6272 -
             C63057 * C6262 - C63056 * C6273 + C63051 * C6280 + C63054 * C3445 -
             C63055 * C3441 - C63054 * C3446 + C63050 * C3453) *
                C154226 +
            (C68526 + C68525 + C68524 + C68523) * C154406) *
               C154011 * C579) *
              C154118) *
         C154047) /
            (p * q * std::sqrt(p + q));
    d2ee[173] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
              C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
                 C34729 +
             (C19258 + C19259) * C34730 + C38629 * C34731 + C43780 * C154415) *
                C154011 * C154393 -
            ((C41715 + C41714) * C154415 + C41701 * C34731 +
             (C20597 + C20598) * C34730 +
             (C15024 * C602 - C15025 * C585 - C15024 * C603 + C154268 * C621 +
              C15022 * C600 - C15023 * C584 - C15022 * C601 + C154408 * C620) *
                 C34729) *
                C154011 * C154146) *
               C1307 +
           (((C20598 + C20597) * C34729 + (C22383 + C22384) * C34730 +
             (C41714 + C41715) * C34731 +
             (C15022 * C5664 - C15023 * C5659 - C15022 * C5665 +
              C154408 * C5668 + C15024 * C28466 - C15025 * C28464 -
              C15024 * C28467 + C154268 * C28470) *
                 C154415) *
                C154011 * C154146 -
            (C44945 * C154415 + C40416 * C34731 + (C19260 + C19261) * C34730 +
             (C19259 + C19258) * C34729) *
                C154011 * C154393) *
               C154118) *
              C154384 +
          ((((C15654 + C15653) * C34729 + C20567 * C34730 + C39917 * C34731 +
             (C39930 + C39931) * C154415) *
                C154011 * C154146 -
            (C38630 * C154415 + C19214 * C34731 + C19215 * C34730 +
             (C15088 + C15087) * C34729) *
                C154011 * C154393) *
               C1307 +
           ((C19212 * C34729 + C19224 * C34730 + C38631 * C34731 +
             (C38644 + C38645) * C154415) *
                C154011 * C154393 -
            ((C15024 * C28468 - C15025 * C28465 - C15024 * C28469 +
              C154268 * C28471 + C15022 * C5662 - C15023 * C5658 -
              C15022 * C5663 + C154408 * C5667) *
                 C154415 +
             (C39931 + C39930) * C34731 + C39916 * C34730 + C20558 * C34729) *
                C154011 * C154146) *
               C154118) *
              C154053)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
               C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
                  C154406 +
              (C19258 + C19259) * C154226) *
                 C2902 +
             ((C15087 + C15088) * C154406 + C19212 * C154226) * C2903 +
             C18913 * C154429) *
                C154393 -
            (C20171 * C154429 +
             (C20558 * C154226 + (C15653 + C15654) * C154406) * C2903 +
             ((C20597 + C20598) * C154226 +
              (C15024 * C602 - C15025 * C585 - C15024 * C603 + C154268 * C621 +
               C15022 * C600 - C15023 * C584 - C15022 * C601 + C154408 * C620) *
                  C154406) *
                 C2902) *
                C154146) *
               C1307 +
           ((((C20598 + C20597) * C154406 +
              (C15022 * C1985 - C15023 * C1976 - C15022 * C1986 +
               C154408 * C1991 + C15024 * C3445 - C15025 * C3441 -
               C15024 * C3446 + C154268 * C3453) *
                  C154226) *
                 C2902 +
             (C20567 * C154406 + (C20599 + C20600) * C154226) * C2903 +
             (C20576 * C154406 + (C20601 + C20602) * C154226) * C154429) *
                C154146 -
            (C19877 * C154429 + (C19214 * C154226 + C19215 * C154406) * C2903 +
             ((C19260 + C19261) * C154226 + (C19259 + C19258) * C154406) *
                 C2902) *
                C154393) *
               C154118) *
              C154384 +
          (((((C15654 + C15653) * C154406 + C20567 * C154226) * C2902 +
             ((C15652 + C15651) * C154406 + C20576 * C154226) * C2903 +
             ((C15650 + C15649) * C154406 + (C16383 + C16384) * C154226) *
                 C154429) *
                C154146 -
            (C18912 * C154429 +
             (C15856 * C154226 + (C15090 + C15089) * C154406) * C2903 +
             (C19215 * C154226 + (C15088 + C15087) * C154406) * C2902) *
                C154393) *
               C1307 +
           (((C19212 * C154406 + C19224 * C154226) * C2902 +
             (C18908 * C154406 + C19233 * C154226) * C2903 +
             (C19876 * C154406 + (C15381 + C15382) * C154226) * C154429) *
                C154393 -
            (((C15024 * C3451 - C15025 * C3444 - C15024 * C3452 +
               C154268 * C3456 + C15022 * C1979 - C15023 * C1973 -
               C15022 * C1980 + C154408 * C1988) *
                  C154226 +
              (C16384 + C16383) * C154406) *
                 C154429 +
             ((C20602 + C20601) * C154226 + C20168 * C154406) * C2903 +
             ((C20600 + C20599) * C154226 + C20558 * C154406) * C2902) *
                C154146) *
               C154118) *
              C154053)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C63054 * C144 - C63055 * C136 - C63054 * C145 + C63050 * C160 +
              C63056 * C600 - C63057 * C584 - C63056 * C601 + C63051 * C620 +
              C63058 * C602 - C63059 * C585 - C63058 * C603 + C63052 * C621 +
              C63060 * C2337 - C63061 * C2328 - C63060 * C2338 +
              C154422 * C2343) *
                 C154406 +
             (C67077 + C67078 + C67079 + C67080) * C154226) *
                C154011 * C154393 -
            ((C67949 + C67950 + C67951 + C67952) * C154226 +
             (C63060 * C7777 - C63061 * C7773 - C63060 * C7778 +
              C154422 * C7785 + C63058 * C2337 - C63059 * C2328 -
              C63058 * C2338 + C63052 * C2343 + C63056 * C602 - C63057 * C585 -
              C63056 * C603 + C63051 * C621 + C63054 * C600 - C63055 * C584 -
              C63054 * C601 + C63050 * C620) *
                 C154406) *
                C154011 * C154146) *
               C1307 +
           (((C67952 + C67951 + C67950 + C67949) * C154406 +
             (C63054 * C1985 - C63055 * C1976 - C63054 * C1986 +
              C63050 * C1991 + C63056 * C3445 - C63057 * C3441 -
              C63056 * C3446 + C63051 * C3453 + C63058 * C6272 -
              C63059 * C6262 - C63058 * C6273 + C63052 * C6280 +
              C63060 * C31084 - C63061 * C31082 - C63060 * C31085 +
              C154422 * C31088) *
                 C154226) *
                C154011 * C154146 -
            ((C67081 + C67082 + C67083 + C67084) * C154226 +
             (C67080 + C67079 + C67078 + C67077) * C154406) *
                C154011 * C154393) *
               C154118) *
              C154384 +
          ((((C63642 + C63641 + C63640 + C63639) * C154406 +
             (C64373 + C64374 + C64375 + C64376) * C154226) *
                C154011 * C154146 -
            ((C63389 + C63390 + C63391 + C63392) * C154226 +
             (C63138 + C63137 + C63136 + C63135) * C154406) *
                C154011 * C154393) *
               C1307 +
           (((C63392 + C63391 + C63390 + C63389) * C154406 +
             (C63393 + C63394 + C63395 + C63396) * C154226) *
                C154011 * C154393 -
            ((C63060 * C31086 - C63061 * C31083 - C63060 * C31087 +
              C154422 * C31089 + C63058 * C6268 - C63059 * C6260 -
              C63058 * C6269 + C63052 * C6278 + C63056 * C3447 -
              C63057 * C3442 - C63056 * C3448 + C63051 * C3454 +
              C63054 * C1983 - C63055 * C1975 - C63054 * C1984 +
              C63050 * C1990) *
                 C154226 +
             (C64376 + C64375 + C64374 + C64373) * C154406) *
                C154011 * C154146) *
               C154118) *
              C154053)) /
            (p * q * std::sqrt(p + q));
    d2ee[174] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
             C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
                C154406 +
            (C19258 + C19259) * C154226) *
               C2902 +
           ((C15087 + C15088) * C154406 + C19212 * C154226) * C2903 +
           C18913 * C154429) *
              C154082 * C1394 -
          (C19877 * C154429 + (C19214 * C154226 + C19215 * C154406) * C2903 +
           ((C19260 + C19261) * C154226 + (C19259 + C19258) * C154406) *
               C2902) *
              C154082 * C1395 +
          (((C19261 + C19260) * C154406 + (C21099 + C21100) * C154226) * C2902 +
           (C19224 * C154406 + (C19262 + C19263) * C154226) * C2903 +
           (C19233 * C154406 + (C19264 + C19265) * C154226) * C154429) *
              C154082 * C1396 -
          (((C15024 * C5660 - C15025 * C5657 - C15024 * C5661 +
             C154268 * C5666 + C15022 * C3147 - C15023 * C3141 -
             C15022 * C3148 + C154408 * C3153) *
                C154226 +
            (C19265 + C19264) * C154406) *
               C154429 +
           ((C15024 * C5662 - C15025 * C5658 - C15024 * C5663 +
             C154268 * C5667 + C15022 * C3145 - C15023 * C3140 -
             C15022 * C3146 + C154408 * C3152) *
                C154226 +
            (C19263 + C19262) * C154406) *
               C2903 +
           ((C15024 * C5664 - C15025 * C5659 - C15024 * C5665 +
             C154268 * C5668 + C15022 * C3143 - C15023 * C3139 -
             C15022 * C3144 + C154408 * C3151) *
                C154226 +
            (C21100 + C21099) * C154406) *
               C2902) *
              C154082 * C1397) *
         C154047) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
              C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
                 C154406 +
             (C19258 + C19259) * C154226) *
                C2902 +
            ((C15087 + C15088) * C154406 + C19212 * C154226) * C2903 +
            C18913 * C154429) *
               C154082 * C1307 -
           (C19877 * C154429 + (C19214 * C154226 + C19215 * C154406) * C2903 +
            ((C19260 + C19261) * C154226 + (C19259 + C19258) * C154406) *
                C2902) *
               C154082 * C154118) *
              C1309 +
          (((C19212 * C154406 + C19224 * C154226) * C2902 +
            (C18908 * C154406 + C19233 * C154226) * C2903 +
            (C19876 * C154406 + (C15381 + C15382) * C154226) * C154429) *
               C154082 * C154118 -
           (C18912 * C154429 +
            (C15856 * C154226 + (C15090 + C15089) * C154406) * C2903 +
            (C19215 * C154226 + (C15088 + C15087) * C154406) * C2902) *
               C154082 * C1307) *
              C1310 +
          ((C18913 * C2902 + (C15098 * C154406 + C19876 * C154226) * C2903 +
            ((C15094 + C15093) * C154406 + (C15871 + C15872) * C154226) *
                C154429) *
               C154082 * C1307 -
           (((C15024 * C1977 - C15025 * C1972 - C15024 * C1978 +
              C154268 * C1987 + C15022 * C373 - C15023 * C352 - C15022 * C374 +
              C154408 * C388) *
                 C154226 +
             (C15872 + C15871) * C154406) *
                C154429 +
            ((C15382 + C15381) * C154226 + C15855 * C154406) * C2903 +
            C19877 * C2902) *
               C154082 * C154118) *
              C1311)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
             C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
                C34729 +
            (C19258 + C19259) * C34730 + C38629 * C34731 + C43780 * C154415) *
               C154011 * C154082 * C1307 -
           ((C40430 + C40429) * C154415 + C40416 * C34731 +
            (C19260 + C19261) * C34730 + (C19259 + C19258) * C34729) *
               C154011 * C154082 * C154118) *
              C1309 +
          ((C19212 * C34729 + C19224 * C34730 + C38631 * C34731 +
            (C38644 + C38645) * C154415) *
               C154011 * C154082 * C154118 -
           (C38630 * C154415 + C19214 * C34731 + C19215 * C34730 +
            (C15088 + C15087) * C34729) *
               C154011 * C154082 * C1307) *
              C1310 +
          ((C15097 * C34729 + C18908 * C34730 + C19233 * C34731 +
            (C19264 + C19265) * C154415) *
               C154011 * C154082 * C1307 -
           ((C15024 * C5660 - C15025 * C5657 - C15024 * C5661 +
             C154268 * C5666 + C15022 * C3147 - C15023 * C3141 -
             C15022 * C3148 + C154408 * C3153) *
                C154415 +
            (C19265 + C19264) * C34731 + C19213 * C34730 + C15856 * C34729) *
               C154011 * C154082 * C154118) *
              C1311)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
            C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
               C34729 +
           (C19258 + C19259) * C34730 + C38629 * C34731 + C43780 * C154415) *
              C154011 * C154082 * C1394 -
          (C44945 * C154415 + C40416 * C34731 + (C19260 + C19261) * C34730 +
           (C19259 + C19258) * C34729) *
              C154011 * C154082 * C1395 +
          (C38629 * C34729 + C43780 * C34730 + (C40429 + C40430) * C34731 +
           (C44958 + C44959) * C154415) *
              C154011 * C154082 * C1396 -
          ((C15024 * C29662 - C15025 * C29661 - C15024 * C29663 +
            C154268 * C29664 + C15022 * C28322 - C15023 * C28320 -
            C15022 * C28323 + C154408 * C28326) *
               C154415 +
           (C44959 + C44958) * C34731 + C44945 * C34730 + C40416 * C34729) *
              C154011 * C154082 * C1397) *
         C154047) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C63054 * C144 - C63055 * C136 - C63054 * C145 + C63050 * C160 +
             C63056 * C600 - C63057 * C584 - C63056 * C601 + C63051 * C620 +
             C63058 * C602 - C63059 * C585 - C63058 * C603 + C63052 * C621 +
             C63060 * C2337 - C63061 * C2328 - C63060 * C2338 +
             C154422 * C2343) *
                C154406 +
            (C67077 + C67078 + C67079 + C67080) * C154226) *
               C154011 * C154082 * C1307 -
           ((C67081 + C67082 + C67083 + C67084) * C154226 +
            (C67080 + C67079 + C67078 + C67077) * C154406) *
               C154011 * C154082 * C154118) *
              C1309 +
          (((C63392 + C63391 + C63390 + C63389) * C154406 +
            (C63393 + C63394 + C63395 + C63396) * C154226) *
               C154011 * C154082 * C154118 -
           ((C63389 + C63390 + C63391 + C63392) * C154226 +
            (C63138 + C63137 + C63136 + C63135) * C154406) *
               C154011 * C154082 * C1307) *
              C1310 +
          (((C63142 + C63141 + C63140 + C63139) * C154406 +
            (C63865 + C63866 + C63867 + C63868) * C154226) *
               C154011 * C154082 * C1307 -
           ((C63060 * C6264 - C63061 * C6258 - C63060 * C6265 +
             C154422 * C6276 + C63058 * C3449 - C63059 * C3443 -
             C63058 * C3450 + C63052 * C3455 + C63056 * C1981 - C63057 * C1974 -
             C63056 * C1982 + C63051 * C1989 + C63054 * C369 - C63055 * C350 -
             C63054 * C370 + C63050 * C386) *
                C154226 +
            (C63868 + C63867 + C63866 + C63865) * C154406) *
               C154011 * C154082 * C154118) *
              C1311)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C63054 * C144 - C63055 * C136 - C63054 * C145 + C63050 * C160 +
            C63056 * C600 - C63057 * C584 - C63056 * C601 + C63051 * C620 +
            C63058 * C602 - C63059 * C585 - C63058 * C603 + C63052 * C621 +
            C63060 * C2337 - C63061 * C2328 - C63060 * C2338 +
            C154422 * C2343) *
               C154406 +
           (C67077 + C67078 + C67079 + C67080) * C154226) *
              C154011 * C154082 * C1394 -
          ((C67081 + C67082 + C67083 + C67084) * C154226 +
           (C67080 + C67079 + C67078 + C67077) * C154406) *
              C154011 * C154082 * C1395 +
          ((C67084 + C67083 + C67082 + C67081) * C154406 +
           (C68301 + C68302 + C68303 + C68304) * C154226) *
              C154011 * C154082 * C1396 -
          ((C63060 * C30000 - C63061 * C29998 - C63060 * C30001 +
            C154422 * C30004 + C63058 * C28466 - C63059 * C28464 -
            C63058 * C28467 + C63052 * C28470 + C63056 * C5664 -
            C63057 * C5659 - C63056 * C5665 + C63051 * C5668 + C63054 * C3143 -
            C63055 * C3139 - C63054 * C3144 + C63050 * C3151) *
               C154226 +
           (C68304 + C68303 + C68302 + C68301) * C154406) *
              C154011 * C154082 * C1397) *
         C154047) /
            (p * q * std::sqrt(p + q));
    d2ee[175] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
              C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
                 C34729 +
             (C19258 + C19259) * C34730 + C38629 * C34731 + C43780 * C154415) *
                C154011 * C2114 -
            (C45814 * C154415 + C41701 * C34731 + (C20597 + C20598) * C34730 +
             (C15024 * C602 - C15025 * C585 - C15024 * C603 + C154268 * C621 +
              C15022 * C600 - C15023 * C584 - C15022 * C601 + C154408 * C620) *
                 C34729) *
                C154011 * C154146) *
               C154392 +
           (((C20598 + C20597) * C34729 + (C22383 + C22384) * C34730 +
             (C41714 + C41715) * C34731 + (C45827 + C45828) * C154415) *
                C154011 * C154146 -
            (C44945 * C154415 + C40416 * C34731 + (C19260 + C19261) * C34730 +
             (C19259 + C19258) * C34729) *
                C154011 * C2114) *
               C154118) *
              C154384 +
          ((((C15654 + C15653) * C34729 + C20567 * C34730 + C39917 * C34731 +
             (C39930 + C39931) * C154415) *
                C154011 * C154146 -
            (C38630 * C154415 + C19214 * C34731 + C19215 * C34730 +
             (C15088 + C15087) * C34729) *
                C154011 * C2114) *
               C154392 +
           ((C19212 * C34729 + C19224 * C34730 + C38631 * C34731 +
             (C38644 + C38645) * C154415) *
                C154011 * C2114 -
            ((C15024 * C28468 - C15025 * C28465 - C15024 * C28469 +
              C154268 * C28471 + C15022 * C5662 - C15023 * C5658 -
              C15022 * C5663 + C154408 * C5667) *
                 C154415 +
             (C39931 + C39930) * C34731 + C39916 * C34730 + C20558 * C34729) *
                C154011 * C154146) *
               C154118) *
              C154053)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
               C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
                  C154406 +
              (C19258 + C19259) * C154226) *
                 C2902 +
             ((C15087 + C15088) * C154406 + C19212 * C154226) * C2903 +
             C18913 * C154429) *
                C2114 -
            (C20171 * C154429 +
             (C20558 * C154226 + (C15653 + C15654) * C154406) * C2903 +
             ((C20597 + C20598) * C154226 +
              (C15024 * C602 - C15025 * C585 - C15024 * C603 + C154268 * C621 +
               C15022 * C600 - C15023 * C584 - C15022 * C601 + C154408 * C620) *
                  C154406) *
                 C2902) *
                C154146) *
               C154392 +
           ((((C20598 + C20597) * C154406 + (C22383 + C22384) * C154226) *
                 C2902 +
             (C20567 * C154406 + (C20599 + C20600) * C154226) * C2903 +
             (C20576 * C154406 + (C20601 + C20602) * C154226) * C154429) *
                C154146 -
            (C19877 * C154429 + (C19214 * C154226 + C19215 * C154406) * C2903 +
             ((C19260 + C19261) * C154226 + (C19259 + C19258) * C154406) *
                 C2902) *
                C2114) *
               C154118) *
              C154384 +
          (((((C15654 + C15653) * C154406 + C20567 * C154226) * C2902 +
             ((C15652 + C15651) * C154406 + C20576 * C154226) * C2903 +
             ((C15650 + C15649) * C154406 + (C16383 + C16384) * C154226) *
                 C154429) *
                C154146 -
            (C18912 * C154429 +
             (C15856 * C154226 + (C15090 + C15089) * C154406) * C2903 +
             (C19215 * C154226 + (C15088 + C15087) * C154406) * C2902) *
                C2114) *
               C154392 +
           (((C19212 * C154406 + C19224 * C154226) * C2902 +
             (C18908 * C154406 + C19233 * C154226) * C2903 +
             (C19876 * C154406 + (C15381 + C15382) * C154226) * C154429) *
                C2114 -
            (((C15024 * C3451 - C15025 * C3444 - C15024 * C3452 +
               C154268 * C3456 + C15022 * C1979 - C15023 * C1973 -
               C15022 * C1980 + C154408 * C1988) *
                  C154226 +
              (C16384 + C16383) * C154406) *
                 C154429 +
             ((C20602 + C20601) * C154226 + C20168 * C154406) * C2903 +
             ((C20600 + C20599) * C154226 + C20558 * C154406) * C2902) *
                C154146) *
               C154118) *
              C154053)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C63054 * C144 - C63055 * C136 - C63054 * C145 + C63050 * C160 +
              C63056 * C600 - C63057 * C584 - C63056 * C601 + C63051 * C620 +
              C63058 * C602 - C63059 * C585 - C63058 * C603 + C63052 * C621 +
              C63060 * C2337 - C63061 * C2328 - C63060 * C2338 +
              C154422 * C2343) *
                 C154406 +
             (C67077 + C67078 + C67079 + C67080) * C154226) *
                C154011 * C2114 -
            ((C67949 + C67950 + C67951 + C67952) * C154226 +
             (C63060 * C7777 - C63061 * C7773 - C63060 * C7778 +
              C154422 * C7785 + C63058 * C2337 - C63059 * C2328 -
              C63058 * C2338 + C63052 * C2343 + C63056 * C602 - C63057 * C585 -
              C63056 * C603 + C63051 * C621 + C63054 * C600 - C63055 * C584 -
              C63054 * C601 + C63050 * C620) *
                 C154406) *
                C154011 * C154146) *
               C154392 +
           (((C67952 + C67951 + C67950 + C67949) * C154406 +
             (C69197 + C69198 + C69199 + C69200) * C154226) *
                C154011 * C154146 -
            ((C67081 + C67082 + C67083 + C67084) * C154226 +
             (C67080 + C67079 + C67078 + C67077) * C154406) *
                C154011 * C2114) *
               C154118) *
              C154384 +
          ((((C63642 + C63641 + C63640 + C63639) * C154406 +
             (C64373 + C64374 + C64375 + C64376) * C154226) *
                C154011 * C154146 -
            ((C63389 + C63390 + C63391 + C63392) * C154226 +
             (C63138 + C63137 + C63136 + C63135) * C154406) *
                C154011 * C2114) *
               C154392 +
           (((C63392 + C63391 + C63390 + C63389) * C154406 +
             (C63393 + C63394 + C63395 + C63396) * C154226) *
                C154011 * C2114 -
            ((C63060 * C31086 - C63061 * C31083 - C63060 * C31087 +
              C154422 * C31089 + C63058 * C6268 - C63059 * C6260 -
              C63058 * C6269 + C63052 * C6278 + C63056 * C3447 -
              C63057 * C3442 - C63056 * C3448 + C63051 * C3454 +
              C63054 * C1983 - C63055 * C1975 - C63054 * C1984 +
              C63050 * C1990) *
                 C154226 +
             (C64376 + C64375 + C64374 + C64373) * C154406) *
                C154011 * C154146) *
               C154118) *
              C154053)) /
            (p * q * std::sqrt(p + q));
    d2ee[176] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
             C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
                C34729 +
            (C19258 + C19259) * C34730 + C38629 * C34731 + C43780 * C154415) *
               C154011 * C154465 -
           (C45814 * C154415 + C41701 * C34731 + (C20597 + C20598) * C34730 +
            (C15024 * C602 - C15025 * C585 - C15024 * C603 + C154268 * C621 +
             C15022 * C600 - C15023 * C584 - C15022 * C601 + C154408 * C620) *
                C34729) *
               C154011 * C154466 +
           ((C15022 * C602 - C15023 * C585 - C15022 * C603 + C154408 * C621 +
             C15024 * C2337 - C15025 * C2328 - C15024 * C2338 +
             C154268 * C2343) *
                C34729 +
            (C21403 + C21404) * C34730 + (C40733 + C40734) * C34731 +
            (C45166 + C45167) * C154415) *
               C154011 * C2630) *
              C154392 +
          (((C20598 + C20597) * C34729 + (C22383 + C22384) * C34730 +
            (C41714 + C41715) * C34731 + (C45827 + C45828) * C154415) *
               C154011 * C154466 -
           (C44945 * C154415 + C40416 * C34731 + (C19260 + C19261) * C34730 +
            (C19259 + C19258) * C34729) *
               C154011 * C154465 -
           ((C15024 * C30000 - C15025 * C29998 - C15024 * C30001 +
             C154268 * C30004 + C15022 * C28466 - C15023 * C28464 -
             C15022 * C28467 + C154408 * C28470) *
                C154415 +
            (C45167 + C45166) * C34731 + (C40734 + C40733) * C34730 +
            (C21404 + C21403) * C34729) *
               C154011 * C2630) *
              C154118) *
         C154047) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
              C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
                 C154406 +
             (C19258 + C19259) * C154226) *
                C2902 +
            ((C15087 + C15088) * C154406 + C19212 * C154226) * C2903 +
            C18913 * C154429) *
               C154465 -
           (C20171 * C154429 +
            (C20558 * C154226 + (C15653 + C15654) * C154406) * C2903 +
            ((C20597 + C20598) * C154226 +
             (C15024 * C602 - C15025 * C585 - C15024 * C603 + C154268 * C621 +
              C15022 * C600 - C15023 * C584 - C15022 * C601 + C154408 * C620) *
                 C154406) *
                C2902) *
               C154466 +
           (((C15022 * C602 - C15023 * C585 - C15022 * C603 + C154408 * C621 +
              C15024 * C2337 - C15025 * C2328 - C15024 * C2338 +
              C154268 * C2343) *
                 C154406 +
             (C21403 + C21404) * C154226) *
                C2902 +
            ((C15655 + C15656) * C154406 + (C19580 + C19581) * C154226) *
                C2903 +
            ((C15657 + C15658) * C154406 + (C19582 + C19583) * C154226) *
                C154429) *
               C2630) *
              C154392 +
          ((((C20598 + C20597) * C154406 + (C22383 + C22384) * C154226) *
                C2902 +
            (C20567 * C154406 + (C20599 + C20600) * C154226) * C2903 +
            (C20576 * C154406 + (C20601 + C20602) * C154226) * C154429) *
               C154466 -
           (C19877 * C154429 + (C19214 * C154226 + C19215 * C154406) * C2903 +
            ((C19260 + C19261) * C154226 + (C19259 + C19258) * C154406) *
                C2902) *
               C154465 -
           (((C15024 * C6264 - C15025 * C6258 - C15024 * C6265 +
              C154268 * C6276 + C15022 * C3449 - C15023 * C3443 -
              C15022 * C3450 + C154408 * C3455) *
                 C154226 +
             (C19583 + C19582) * C154406) *
                C154429 +
            ((C15024 * C6268 - C15025 * C6260 - C15024 * C6269 +
              C154268 * C6278 + C15022 * C3447 - C15023 * C3442 -
              C15022 * C3448 + C154408 * C3454) *
                 C154226 +
             (C19581 + C19580) * C154406) *
                C2903 +
            ((C15024 * C6272 - C15025 * C6262 - C15024 * C6273 +
              C154268 * C6280 + C15022 * C3445 - C15023 * C3441 -
              C15022 * C3446 + C154408 * C3453) *
                 C154226 +
             (C21404 + C21403) * C154406) *
                C2902) *
               C2630) *
              C154118) *
         C154047) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C63054 * C144 - C63055 * C136 - C63054 * C145 + C63050 * C160 +
             C63056 * C600 - C63057 * C584 - C63056 * C601 + C63051 * C620 +
             C63058 * C602 - C63059 * C585 - C63058 * C603 + C63052 * C621 +
             C63060 * C2337 - C63061 * C2328 - C63060 * C2338 +
             C154422 * C2343) *
                C154406 +
            (C67077 + C67078 + C67079 + C67080) * C154226) *
               C154011 * C154465 -
           ((C67949 + C67950 + C67951 + C67952) * C154226 +
            (C63060 * C7777 - C63061 * C7773 - C63060 * C7778 +
             C154422 * C7785 + C63058 * C2337 - C63059 * C2328 -
             C63058 * C2338 + C63052 * C2343 + C63056 * C602 - C63057 * C585 -
             C63056 * C603 + C63051 * C621 + C63054 * C600 - C63055 * C584 -
             C63054 * C601 + C63050 * C620) *
                C154406) *
               C154011 * C154466 +
           ((C63054 * C602 - C63055 * C585 - C63054 * C603 + C63050 * C621 +
             C63056 * C2337 - C63057 * C2328 - C63056 * C2338 + C63051 * C2343 +
             C63058 * C7777 - C63059 * C7773 - C63058 * C7778 + C63052 * C7785 +
             C63060 * C10602 - C63061 * C10597 - C63060 * C10603 +
             C154422 * C10606) *
                C154406 +
            (C68523 + C68524 + C68525 + C68526) * C154226) *
               C154011 * C2630) *
              C154392 +
          (((C67952 + C67951 + C67950 + C67949) * C154406 +
            (C69197 + C69198 + C69199 + C69200) * C154226) *
               C154011 * C154466 -
           ((C67081 + C67082 + C67083 + C67084) * C154226 +
            (C67080 + C67079 + C67078 + C67077) * C154406) *
               C154011 * C154465 -
           ((C63060 * C33867 - C63061 * C33865 - C63060 * C33868 +
             C154422 * C33871 + C63058 * C31084 - C63059 * C31082 -
             C63058 * C31085 + C63052 * C31088 + C63056 * C6272 -
             C63057 * C6262 - C63056 * C6273 + C63051 * C6280 + C63054 * C3445 -
             C63055 * C3441 - C63054 * C3446 + C63050 * C3453) *
                C154226 +
            (C68526 + C68525 + C68524 + C68523) * C154406) *
               C154011 * C2630) *
              C154118) *
         C154047) /
            (p * q * std::sqrt(p + q));
    d2ee[177] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C15022 * C144 - C15023 * C136 - C15022 * C145 +
                  C154408 * C160 + C15024 * C600 - C15025 * C584 -
                  C15024 * C601 + C154268 * C620) *
                     C154406 +
                 (C19258 + C19259) * C154226) *
                    C2902 +
                ((C15087 + C15088) * C154406 + C19212 * C154226) * C2903 +
                C18913 * C154429) *
                   C2114 -
               (C20171 * C154429 +
                (C20558 * C154226 + (C15653 + C15654) * C154406) * C2903 +
                ((C20597 + C20598) * C154226 +
                 (C15024 * C602 - C15025 * C585 - C15024 * C603 +
                  C154268 * C621 + C15022 * C600 - C15023 * C584 -
                  C15022 * C601 + C154408 * C620) *
                     C154406) *
                    C2902) *
                   C154146) *
                  C154066 * C1309 +
              ((((C15654 + C15653) * C154406 + C20567 * C154226) * C2902 +
                ((C15652 + C15651) * C154406 + C20576 * C154226) * C2903 +
                ((C15650 + C15649) * C154406 + (C16383 + C16384) * C154226) *
                    C154429) *
                   C154146 -
               (C18912 * C154429 +
                (C15856 * C154226 + (C15090 + C15089) * C154406) * C2903 +
                (C19215 * C154226 + (C15088 + C15087) * C154406) * C2902) *
                   C2114) *
                  C154066 * C1310 +
              ((C18913 * C2902 + (C15098 * C154406 + C19876 * C154226) * C2903 +
                ((C15094 + C15093) * C154406 + (C15871 + C15872) * C154226) *
                    C154429) *
                   C2114 -
               (((C15024 * C1546 - C15025 * C1541 - C15024 * C1547 +
                  C154268 * C1556 + C15022 * C1143 - C15023 * C1133 -
                  C15022 * C1144 + C154408 * C1151) *
                     C154226 +
                 (C16084 + C16083) * C154406) *
                    C154429 +
                ((C16384 + C16383) * C154226 + C16067 * C154406) * C2903 +
                C20171 * C2902) *
                   C154146) *
                  C154066 * C1311) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C15022 * C144 - C15023 * C136 - C15022 * C145 +
                  C154408 * C160 + C15024 * C600 - C15025 * C584 -
                  C15024 * C601 + C154268 * C620) *
                     C154406 +
                 (C19258 + C19259) * C154226) *
                    C2902 +
                ((C15087 + C15088) * C154406 + C19212 * C154226) * C2903 +
                C18913 * C154429) *
                   C2114 -
               (C20171 * C154429 +
                (C20558 * C154226 + (C15653 + C15654) * C154406) * C2903 +
                ((C20597 + C20598) * C154226 +
                 (C15024 * C602 - C15025 * C585 - C15024 * C603 +
                  C154268 * C621 + C15022 * C600 - C15023 * C584 -
                  C15022 * C601 + C154408 * C620) *
                     C154406) *
                    C2902) *
                   C154146) *
                  C338 +
              ((((C20598 + C20597) * C154406 + (C22383 + C22384) * C154226) *
                    C2902 +
                (C20567 * C154406 + (C20599 + C20600) * C154226) * C2903 +
                (C20576 * C154406 + (C20601 + C20602) * C154226) * C154429) *
                   C154146 -
               (C19877 * C154429 +
                (C19214 * C154226 + C19215 * C154406) * C2903 +
                ((C19260 + C19261) * C154226 + (C19259 + C19258) * C154406) *
                    C2902) *
                   C2114) *
                  C339 +
              ((((C19261 + C19260) * C154406 + (C21099 + C21100) * C154226) *
                    C2902 +
                (C19224 * C154406 + (C19262 + C19263) * C154226) * C2903 +
                (C19233 * C154406 + (C19264 + C19265) * C154226) * C154429) *
                   C2114 -
               (((C15024 * C4908 - C15025 * C4905 - C15024 * C4909 +
                  C154268 * C4914 + C15022 * C4262 - C15023 * C4256 -
                  C15022 * C4263 + C154408 * C4268) *
                     C154226 +
                 (C20602 + C20601) * C154406) *
                    C154429 +
                ((C15024 * C4910 - C15025 * C4906 - C15024 * C4911 +
                  C154268 * C4915 + C15022 * C4260 - C15023 * C4255 -
                  C15022 * C4261 + C154408 * C4267) *
                     C154226 +
                 (C20600 + C20599) * C154406) *
                    C2903 +
                ((C15024 * C4912 - C15025 * C4907 - C15024 * C4913 +
                  C154268 * C4916 + C15022 * C4258 - C15023 * C4254 -
                  C15022 * C4259 + C154408 * C4266) *
                     C154226 +
                 (C22384 + C22383) * C154406) *
                    C2902) *
                   C154146) *
                  C340) *
             C154047) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
             C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
                C154406 +
            (C19258 + C19259) * C154226) *
               C2902 +
           ((C15087 + C15088) * C154406 + C19212 * C154226) * C2903 +
           C18913 * C154429) *
              C2320 -
          (C20171 * C154429 +
           (C20558 * C154226 + (C15653 + C15654) * C154406) * C2903 +
           ((C20597 + C20598) * C154226 +
            (C15024 * C602 - C15025 * C585 - C15024 * C603 + C154268 * C621 +
             C15022 * C600 - C15023 * C584 - C15022 * C601 + C154408 * C620) *
                C154406) *
               C2902) *
              C2321 +
          (((C15022 * C602 - C15023 * C585 - C15022 * C603 + C154408 * C621 +
             C15024 * C2337 - C15025 * C2328 - C15024 * C2338 +
             C154268 * C2343) *
                C154406 +
            (C21403 + C21404) * C154226) *
               C2902 +
           ((C15655 + C15656) * C154406 + (C19580 + C19581) * C154226) * C2903 +
           ((C15657 + C15658) * C154406 + (C19582 + C19583) * C154226) *
               C154429) *
              C2322 -
          (((C15024 * C9278 - C15025 * C9275 - C15024 * C9279 +
             C154268 * C9284 + C15022 * C6266 - C15023 * C6259 -
             C15022 * C6267 + C154408 * C6277) *
                C154226 +
            (C15024 * C7781 - C15025 * C7775 - C15024 * C7782 +
             C154268 * C7787 + C15022 * C2333 - C15023 * C2326 -
             C15022 * C2334 + C154408 * C2341) *
                C154406) *
               C154429 +
           ((C15024 * C9280 - C15025 * C9276 - C15024 * C9281 +
             C154268 * C9285 + C15022 * C6270 - C15023 * C6261 -
             C15022 * C6271 + C154408 * C6279) *
                C154226 +
            (C15024 * C7779 - C15025 * C7774 - C15024 * C7780 +
             C154268 * C7786 + C15022 * C2335 - C15023 * C2327 -
             C15022 * C2336 + C154408 * C2342) *
                C154406) *
               C2903 +
           ((C15024 * C9282 - C15025 * C9277 - C15024 * C9283 +
             C154268 * C9286 + C15022 * C6274 - C15023 * C6263 -
             C15022 * C6275 + C154408 * C6281) *
                C154226 +
            (C15024 * C7777 - C15025 * C7773 - C15024 * C7778 +
             C154268 * C7785 + C15022 * C2337 - C15023 * C2328 -
             C15022 * C2338 + C154408 * C2343) *
                C154406) *
               C2902) *
              C2323) *
         C154066 * C154047) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
             C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
                C34729 +
            (C19258 + C19259) * C34730 + C38629 * C34731 + C43780 * C154415) *
               C154011 * C2114 -
           (C45814 * C154415 + C41701 * C34731 + (C20597 + C20598) * C34730 +
            (C15024 * C602 - C15025 * C585 - C15024 * C603 + C154268 * C621 +
             C15022 * C600 - C15023 * C584 - C15022 * C601 + C154408 * C620) *
                C34729) *
               C154011 * C154146) *
              C154066 * C1309 +
          (((C15654 + C15653) * C34729 + C20567 * C34730 + C39917 * C34731 +
            (C39930 + C39931) * C154415) *
               C154011 * C154146 -
           (C38630 * C154415 + C19214 * C34731 + C19215 * C34730 +
            (C15088 + C15087) * C34729) *
               C154011 * C2114) *
              C154066 * C1310 +
          ((C15097 * C34729 + C18908 * C34730 + C19233 * C34731 +
            (C19264 + C19265) * C154415) *
               C154011 * C2114 -
           ((C15024 * C4908 - C15025 * C4905 - C15024 * C4909 +
             C154268 * C4914 + C15022 * C4262 - C15023 * C4256 -
             C15022 * C4263 + C154408 * C4268) *
                C154415 +
            (C20602 + C20601) * C34731 + C20168 * C34730 + C16068 * C34729) *
               C154011 * C154146) *
              C154066 * C1311)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
             C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
                C34729 +
            (C19258 + C19259) * C34730 + C38629 * C34731 + C43780 * C154415) *
               C154011 * C2114 -
           (C45814 * C154415 + C41701 * C34731 + (C20597 + C20598) * C34730 +
            (C15024 * C602 - C15025 * C585 - C15024 * C603 + C154268 * C621 +
             C15022 * C600 - C15023 * C584 - C15022 * C601 + C154408 * C620) *
                C34729) *
               C154011 * C154146) *
              C338 +
          (((C20598 + C20597) * C34729 + (C22383 + C22384) * C34730 +
            (C41714 + C41715) * C34731 + (C45827 + C45828) * C154415) *
               C154011 * C154146 -
           (C44945 * C154415 + C40416 * C34731 + (C19260 + C19261) * C34730 +
            (C19259 + C19258) * C34729) *
               C154011 * C2114) *
              C339 +
          ((C38629 * C34729 + C43780 * C34730 + (C40429 + C40430) * C34731 +
            (C44958 + C44959) * C154415) *
               C154011 * C2114 -
           ((C15024 * C29238 - C15025 * C29237 - C15024 * C29239 +
             C154268 * C29240 + C15022 * C28880 - C15023 * C28878 -
             C15022 * C28881 + C154408 * C28884) *
                C154415 +
            (C45828 + C45827) * C34731 + C45814 * C34730 + C41701 * C34729) *
               C154011 * C154146) *
              C340) *
         C154047) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
            C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
               C34729 +
           (C19258 + C19259) * C34730 + C38629 * C34731 + C43780 * C154415) *
              C154011 * C2320 -
          (C45814 * C154415 + C41701 * C34731 + (C20597 + C20598) * C34730 +
           (C15024 * C602 - C15025 * C585 - C15024 * C603 + C154268 * C621 +
            C15022 * C600 - C15023 * C584 - C15022 * C601 + C154408 * C620) *
               C34729) *
              C154011 * C2321 +
          ((C15022 * C602 - C15023 * C585 - C15022 * C603 + C154408 * C621 +
            C15024 * C2337 - C15025 * C2328 - C15024 * C2338 +
            C154268 * C2343) *
               C34729 +
           (C21403 + C21404) * C34730 + (C40733 + C40734) * C34731 +
           (C45166 + C45167) * C154415) *
              C154011 * C2322 -
          ((C15024 * C32489 - C15025 * C32488 - C15024 * C32490 +
            C154268 * C32491 + C15022 * C30002 - C15023 * C29999 -
            C15022 * C30003 + C154408 * C30005) *
               C154415 +
           (C15024 * C31084 - C15025 * C31082 - C15024 * C31085 +
            C154268 * C31088 + C15022 * C6272 - C15023 * C6262 -
            C15022 * C6273 + C154408 * C6280) *
               C34731 +
           (C15024 * C9282 - C15025 * C9277 - C15024 * C9283 + C154268 * C9286 +
            C15022 * C6274 - C15023 * C6263 - C15022 * C6275 +
            C154408 * C6281) *
               C34730 +
           (C15024 * C7777 - C15025 * C7773 - C15024 * C7778 + C154268 * C7785 +
            C15022 * C2337 - C15023 * C2328 - C15022 * C2338 +
            C154408 * C2343) *
               C34729) *
              C154011 * C2323) *
         C154066 * C154047) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C63054 * C144 - C63055 * C136 - C63054 * C145 + C63050 * C160 +
             C63056 * C600 - C63057 * C584 - C63056 * C601 + C63051 * C620 +
             C63058 * C602 - C63059 * C585 - C63058 * C603 + C63052 * C621 +
             C63060 * C2337 - C63061 * C2328 - C63060 * C2338 +
             C154422 * C2343) *
                C154406 +
            (C67077 + C67078 + C67079 + C67080) * C154226) *
               C154011 * C2114 -
           ((C67949 + C67950 + C67951 + C67952) * C154226 +
            (C63060 * C7777 - C63061 * C7773 - C63060 * C7778 +
             C154422 * C7785 + C63058 * C2337 - C63059 * C2328 -
             C63058 * C2338 + C63052 * C2343 + C63056 * C602 - C63057 * C585 -
             C63056 * C603 + C63051 * C621 + C63054 * C600 - C63055 * C584 -
             C63054 * C601 + C63050 * C620) *
                C154406) *
               C154011 * C154146) *
              C154066 * C1309 +
          (((C63642 + C63641 + C63640 + C63639) * C154406 +
            (C64373 + C64374 + C64375 + C64376) * C154226) *
               C154011 * C154146 -
           ((C63389 + C63390 + C63391 + C63392) * C154226 +
            (C63138 + C63137 + C63136 + C63135) * C154406) *
               C154011 * C2114) *
              C154066 * C1310 +
          (((C63142 + C63141 + C63140 + C63139) * C154406 +
            (C63865 + C63866 + C63867 + C63868) * C154226) *
               C154011 * C2114 -
           ((C63060 * C9278 - C63061 * C9275 - C63060 * C9279 +
             C154422 * C9284 + C63058 * C6266 - C63059 * C6259 -
             C63058 * C6267 + C63052 * C6277 + C63056 * C1550 - C63057 * C1543 -
             C63056 * C1551 + C63051 * C1558 + C63054 * C1139 - C63055 * C1131 -
             C63054 * C1140 + C63050 * C1149) *
                C154226 +
            (C64090 + C64089 + C64088 + C64087) * C154406) *
               C154011 * C154146) *
              C154066 * C1311)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C63054 * C144 - C63055 * C136 - C63054 * C145 + C63050 * C160 +
             C63056 * C600 - C63057 * C584 - C63056 * C601 + C63051 * C620 +
             C63058 * C602 - C63059 * C585 - C63058 * C603 + C63052 * C621 +
             C63060 * C2337 - C63061 * C2328 - C63060 * C2338 +
             C154422 * C2343) *
                C154406 +
            (C67077 + C67078 + C67079 + C67080) * C154226) *
               C154011 * C2114 -
           ((C67949 + C67950 + C67951 + C67952) * C154226 +
            (C63060 * C7777 - C63061 * C7773 - C63060 * C7778 +
             C154422 * C7785 + C63058 * C2337 - C63059 * C2328 -
             C63058 * C2338 + C63052 * C2343 + C63056 * C602 - C63057 * C585 -
             C63056 * C603 + C63051 * C621 + C63054 * C600 - C63055 * C584 -
             C63054 * C601 + C63050 * C620) *
                C154406) *
               C154011 * C154146) *
              C338 +
          (((C67952 + C67951 + C67950 + C67949) * C154406 +
            (C69197 + C69198 + C69199 + C69200) * C154226) *
               C154011 * C154146 -
           ((C67081 + C67082 + C67083 + C67084) * C154226 +
            (C67080 + C67079 + C67078 + C67077) * C154406) *
               C154011 * C2114) *
              C339 +
          (((C67084 + C67083 + C67082 + C67081) * C154406 +
            (C68301 + C68302 + C68303 + C68304) * C154226) *
               C154011 * C2114 -
           ((C63060 * C32489 - C63061 * C32488 - C63060 * C32490 +
             C154422 * C32491 + C63058 * C30002 - C63059 * C29999 -
             C63058 * C30003 + C63052 * C30005 + C63056 * C4912 -
             C63057 * C4907 - C63056 * C4913 + C63051 * C4916 + C63054 * C4258 -
             C63055 * C4254 - C63054 * C4259 + C63050 * C4266) *
                C154226 +
            (C69200 + C69199 + C69198 + C69197) * C154406) *
               C154011 * C154146) *
              C340) *
         C154047) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C63054 * C144 - C63055 * C136 - C63054 * C145 + C63050 * C160 +
            C63056 * C600 - C63057 * C584 - C63056 * C601 + C63051 * C620 +
            C63058 * C602 - C63059 * C585 - C63058 * C603 + C63052 * C621 +
            C63060 * C2337 - C63061 * C2328 - C63060 * C2338 +
            C154422 * C2343) *
               C154406 +
           (C67077 + C67078 + C67079 + C67080) * C154226) *
              C154011 * C2320 -
          ((C67949 + C67950 + C67951 + C67952) * C154226 +
           (C63060 * C7777 - C63061 * C7773 - C63060 * C7778 + C154422 * C7785 +
            C63058 * C2337 - C63059 * C2328 - C63058 * C2338 + C63052 * C2343 +
            C63056 * C602 - C63057 * C585 - C63056 * C603 + C63051 * C621 +
            C63054 * C600 - C63055 * C584 - C63054 * C601 + C63050 * C620) *
               C154406) *
              C154011 * C2321 +
          ((C63054 * C602 - C63055 * C585 - C63054 * C603 + C63050 * C621 +
            C63056 * C2337 - C63057 * C2328 - C63056 * C2338 + C63051 * C2343 +
            C63058 * C7777 - C63059 * C7773 - C63058 * C7778 + C63052 * C7785 +
            C63060 * C10602 - C63061 * C10597 - C63060 * C10603 +
            C154422 * C10606) *
               C154406 +
           (C68523 + C68524 + C68525 + C68526) * C154226) *
              C154011 * C2322 -
          ((C63060 * C56522 - C63061 * C56521 - C63060 * C56523 +
            C154422 * C56524 + C63058 * C33869 - C63059 * C33866 -
            C63058 * C33870 + C63052 * C33872 + C63056 * C9282 -
            C63057 * C9277 - C63056 * C9283 + C63051 * C9286 + C63054 * C6274 -
            C63055 * C6263 - C63054 * C6275 + C63050 * C6281) *
               C154226 +
           (C63060 * C55779 - C63061 * C55777 - C63060 * C55780 +
            C154422 * C55783 + C63058 * C10602 - C63059 * C10597 -
            C63058 * C10603 + C63052 * C10606 + C63056 * C7777 -
            C63057 * C7773 - C63056 * C7778 + C63051 * C7785 + C63054 * C2337 -
            C63055 * C2328 - C63054 * C2338 + C63050 * C2343) *
               C154406) *
              C154011 * C2323) *
         C154066 * C154047) /
            (p * q * std::sqrt(p + q));
    d2ee[178] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
             C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
                C34729 +
            (C19258 + C19259) * C34730 + C38629 * C34731 + C43780 * C154415) *
               C154011 * C154465 -
           (C45814 * C154415 + C41701 * C34731 + (C20597 + C20598) * C34730 +
            (C15024 * C602 - C15025 * C585 - C15024 * C603 + C154268 * C621 +
             C15022 * C600 - C15023 * C584 - C15022 * C601 + C154408 * C620) *
                C34729) *
               C154011 * C154466 +
           ((C15022 * C602 - C15023 * C585 - C15022 * C603 + C154408 * C621 +
             C15024 * C2337 - C15025 * C2328 - C15024 * C2338 +
             C154268 * C2343) *
                C34729 +
            (C21403 + C21404) * C34730 + (C40733 + C40734) * C34731 +
            (C45166 + C45167) * C154415) *
               C154011 * C2630) *
              C154066 * C154384 +
          (((C15654 + C15653) * C34729 + C20567 * C34730 + C39917 * C34731 +
            (C39930 + C39931) * C154415) *
               C154011 * C154466 -
           (C38630 * C154415 + C19214 * C34731 + C19215 * C34730 +
            (C15088 + C15087) * C34729) *
               C154011 * C154465 -
           ((C15024 * C31817 - C15025 * C31816 - C15024 * C31818 +
             C154268 * C31819 + C15022 * C4910 - C15023 * C4906 -
             C15022 * C4911 + C154408 * C4915) *
                C154415 +
            (C38949 + C38948) * C34731 + (C19581 + C19580) * C34730 +
            (C15656 + C15655) * C34729) *
               C154011 * C2630) *
              C154066 * C154053)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
              C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
                 C154406 +
             (C19258 + C19259) * C154226) *
                C2902 +
            ((C15087 + C15088) * C154406 + C19212 * C154226) * C2903 +
            C18913 * C154429) *
               C154465 -
           (C20171 * C154429 +
            (C20558 * C154226 + (C15653 + C15654) * C154406) * C2903 +
            ((C20597 + C20598) * C154226 +
             (C15024 * C602 - C15025 * C585 - C15024 * C603 + C154268 * C621 +
              C15022 * C600 - C15023 * C584 - C15022 * C601 + C154408 * C620) *
                 C154406) *
                C2902) *
               C154466 +
           (((C15022 * C602 - C15023 * C585 - C15022 * C603 + C154408 * C621 +
              C15024 * C2337 - C15025 * C2328 - C15024 * C2338 +
              C154268 * C2343) *
                 C154406 +
             (C21403 + C21404) * C154226) *
                C2902 +
            ((C15655 + C15656) * C154406 + (C19580 + C19581) * C154226) *
                C2903 +
            ((C15657 + C15658) * C154406 + (C19582 + C19583) * C154226) *
                C154429) *
               C2630) *
              C154066 * C154384 +
          ((((C15654 + C15653) * C154406 + C20567 * C154226) * C2902 +
            ((C15652 + C15651) * C154406 + C20576 * C154226) * C2903 +
            ((C15650 + C15649) * C154406 + (C16383 + C16384) * C154226) *
                C154429) *
               C154466 -
           (C18912 * C154429 +
            (C15856 * C154226 + (C15090 + C15089) * C154406) * C2903 +
            (C19215 * C154226 + (C15088 + C15087) * C154406) * C2902) *
               C154465 -
           (((C15024 * C8648 - C15025 * C8647 - C15024 * C8649 +
              C154268 * C8650 + C15022 * C1548 - C15023 * C1542 -
              C15022 * C1549 + C154408 * C1557) *
                 C154226 +
             (C15660 + C15659) * C154406) *
                C154429 +
            ((C19583 + C19582) * C154226 + (C15658 + C15657) * C154406) *
                C2903 +
            ((C19581 + C19580) * C154226 + (C15656 + C15655) * C154406) *
                C2902) *
               C2630) *
              C154066 * C154053)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C63054 * C144 - C63055 * C136 - C63054 * C145 + C63050 * C160 +
             C63056 * C600 - C63057 * C584 - C63056 * C601 + C63051 * C620 +
             C63058 * C602 - C63059 * C585 - C63058 * C603 + C63052 * C621 +
             C63060 * C2337 - C63061 * C2328 - C63060 * C2338 +
             C154422 * C2343) *
                C154406 +
            (C67077 + C67078 + C67079 + C67080) * C154226) *
               C154011 * C154465 -
           ((C67949 + C67950 + C67951 + C67952) * C154226 +
            (C63060 * C7777 - C63061 * C7773 - C63060 * C7778 +
             C154422 * C7785 + C63058 * C2337 - C63059 * C2328 -
             C63058 * C2338 + C63052 * C2343 + C63056 * C602 - C63057 * C585 -
             C63056 * C603 + C63051 * C621 + C63054 * C600 - C63055 * C584 -
             C63054 * C601 + C63050 * C620) *
                C154406) *
               C154011 * C154466 +
           ((C63054 * C602 - C63055 * C585 - C63054 * C603 + C63050 * C621 +
             C63056 * C2337 - C63057 * C2328 - C63056 * C2338 + C63051 * C2343 +
             C63058 * C7777 - C63059 * C7773 - C63058 * C7778 + C63052 * C7785 +
             C63060 * C10602 - C63061 * C10597 - C63060 * C10603 +
             C154422 * C10606) *
                C154406 +
            (C68523 + C68524 + C68525 + C68526) * C154226) *
               C154011 * C2630) *
              C154066 * C154384 +
          (((C63642 + C63641 + C63640 + C63639) * C154406 +
            (C64373 + C64374 + C64375 + C64376) * C154226) *
               C154011 * C154466 -
           ((C63389 + C63390 + C63391 + C63392) * C154226 +
            (C63138 + C63137 + C63136 + C63135) * C154406) *
               C154011 * C154465 -
           ((C63060 * C56192 - C63061 * C56191 - C63060 * C56193 +
             C154422 * C56194 + C63058 * C9280 - C63059 * C9276 -
             C63058 * C9281 + C63052 * C9285 + C63056 * C6270 - C63057 * C6261 -
             C63056 * C6271 + C63051 * C6279 + C63054 * C1552 - C63055 * C1544 -
             C63054 * C1553 + C63050 * C1559) *
                C154226 +
            (C63646 + C63645 + C63644 + C63643) * C154406) *
               C154011 * C2630) *
              C154066 * C154053)) /
            (p * q * std::sqrt(p + q));
    d2ee[179] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
              C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
                 C154406 +
             (C19258 + C19259) * C154226) *
                C2902 +
            ((C15087 + C15088) * C154406 + C19212 * C154226) * C2903 +
            C18913 * C154429) *
               C2114 -
           (C20171 * C154429 +
            (C20558 * C154226 + (C15653 + C15654) * C154406) * C2903 +
            ((C20597 + C20598) * C154226 +
             (C15024 * C602 - C15025 * C585 - C15024 * C603 + C154268 * C621 +
              C15022 * C600 - C15023 * C584 - C15022 * C601 + C154408 * C620) *
                 C154406) *
                C2902) *
               C154146) *
              C338 +
          ((((C20598 + C20597) * C154406 + (C22383 + C22384) * C154226) *
                C2902 +
            (C20567 * C154406 + (C20599 + C20600) * C154226) * C2903 +
            (C20576 * C154406 + (C20601 + C20602) * C154226) * C154429) *
               C154146 -
           (C19877 * C154429 + (C19214 * C154226 + C19215 * C154406) * C2903 +
            ((C19260 + C19261) * C154226 + (C19259 + C19258) * C154406) *
                C2902) *
               C2114) *
              C339 +
          ((((C19261 + C19260) * C154406 + (C21099 + C21100) * C154226) *
                C2902 +
            (C19224 * C154406 + (C19262 + C19263) * C154226) * C2903 +
            (C19233 * C154406 + (C19264 + C19265) * C154226) * C154429) *
               C2114 -
           (((C15024 * C4908 - C15025 * C4905 - C15024 * C4909 +
              C154268 * C4914 + C15022 * C4262 - C15023 * C4256 -
              C15022 * C4263 + C154408 * C4268) *
                 C154226 +
             (C20602 + C20601) * C154406) *
                C154429 +
            ((C15024 * C4910 - C15025 * C4906 - C15024 * C4911 +
              C154268 * C4915 + C15022 * C4260 - C15023 * C4255 -
              C15022 * C4261 + C154408 * C4267) *
                 C154226 +
             (C20600 + C20599) * C154406) *
                C2903 +
            ((C15024 * C4912 - C15025 * C4907 - C15024 * C4913 +
              C154268 * C4916 + C15022 * C4258 - C15023 * C4254 -
              C15022 * C4259 + C154408 * C4266) *
                 C154226 +
             (C22384 + C22383) * C154406) *
                C2902) *
               C154146) *
              C340) *
         C154047) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
              C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
                 C154406 +
             (C19258 + C19259) * C154226) *
                C2902 +
            ((C15087 + C15088) * C154406 + C19212 * C154226) * C2903 +
            C18913 * C154429) *
               C2114 -
           (C20171 * C154429 +
            (C20558 * C154226 + (C15653 + C15654) * C154406) * C2903 +
            ((C20597 + C20598) * C154226 +
             (C15024 * C602 - C15025 * C585 - C15024 * C603 + C154268 * C621 +
              C15022 * C600 - C15023 * C584 - C15022 * C601 + C154408 * C620) *
                 C154406) *
                C2902) *
               C154146) *
              C154066 * C1309 +
          ((((C15654 + C15653) * C154406 + C20567 * C154226) * C2902 +
            ((C15652 + C15651) * C154406 + C20576 * C154226) * C2903 +
            ((C15650 + C15649) * C154406 + (C16383 + C16384) * C154226) *
                C154429) *
               C154146 -
           (C18912 * C154429 +
            (C15856 * C154226 + (C15090 + C15089) * C154406) * C2903 +
            (C19215 * C154226 + (C15088 + C15087) * C154406) * C2902) *
               C2114) *
              C154066 * C1310 +
          ((C18913 * C2902 + (C15098 * C154406 + C19876 * C154226) * C2903 +
            ((C15094 + C15093) * C154406 + (C15871 + C15872) * C154226) *
                C154429) *
               C2114 -
           (((C15024 * C1546 - C15025 * C1541 - C15024 * C1547 +
              C154268 * C1556 + C15022 * C1143 - C15023 * C1133 -
              C15022 * C1144 + C154408 * C1151) *
                 C154226 +
             (C16084 + C16083) * C154406) *
                C154429 +
            ((C16384 + C16383) * C154226 + C16067 * C154406) * C2903 +
            C20171 * C2902) *
               C154146) *
              C154066 * C1311)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
             C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
                C34729 +
            (C19258 + C19259) * C34730 + C38629 * C34731 + C43780 * C154415) *
               C154011 * C2114 -
           (C45814 * C154415 + C41701 * C34731 + (C20597 + C20598) * C34730 +
            (C15024 * C602 - C15025 * C585 - C15024 * C603 + C154268 * C621 +
             C15022 * C600 - C15023 * C584 - C15022 * C601 + C154408 * C620) *
                C34729) *
               C154011 * C154146) *
              C154066 * C1309 +
          (((C15654 + C15653) * C34729 + C20567 * C34730 + C39917 * C34731 +
            (C39930 + C39931) * C154415) *
               C154011 * C154146 -
           (C38630 * C154415 + C19214 * C34731 + C19215 * C34730 +
            (C15088 + C15087) * C34729) *
               C154011 * C2114) *
              C154066 * C1310 +
          ((C15097 * C34729 + C18908 * C34730 + C19233 * C34731 +
            (C19264 + C19265) * C154415) *
               C154011 * C2114 -
           ((C15024 * C4908 - C15025 * C4905 - C15024 * C4909 +
             C154268 * C4914 + C15022 * C4262 - C15023 * C4256 -
             C15022 * C4263 + C154408 * C4268) *
                C154415 +
            (C20602 + C20601) * C34731 + C20168 * C34730 + C16068 * C34729) *
               C154011 * C154146) *
              C154066 * C1311)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
             C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
                C34729 +
            (C19258 + C19259) * C34730 + C38629 * C34731 + C43780 * C154415) *
               C154011 * C2114 -
           (C45814 * C154415 + C41701 * C34731 + (C20597 + C20598) * C34730 +
            (C15024 * C602 - C15025 * C585 - C15024 * C603 + C154268 * C621 +
             C15022 * C600 - C15023 * C584 - C15022 * C601 + C154408 * C620) *
                C34729) *
               C154011 * C154146) *
              C338 +
          (((C20598 + C20597) * C34729 + (C22383 + C22384) * C34730 +
            (C41714 + C41715) * C34731 + (C45827 + C45828) * C154415) *
               C154011 * C154146 -
           (C44945 * C154415 + C40416 * C34731 + (C19260 + C19261) * C34730 +
            (C19259 + C19258) * C34729) *
               C154011 * C2114) *
              C339 +
          ((C38629 * C34729 + C43780 * C34730 + (C40429 + C40430) * C34731 +
            (C44958 + C44959) * C154415) *
               C154011 * C2114 -
           ((C15024 * C29238 - C15025 * C29237 - C15024 * C29239 +
             C154268 * C29240 + C15022 * C28880 - C15023 * C28878 -
             C15022 * C28881 + C154408 * C28884) *
                C154415 +
            (C45828 + C45827) * C34731 + C45814 * C34730 + C41701 * C34729) *
               C154011 * C154146) *
              C340) *
         C154047) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C63054 * C144 - C63055 * C136 - C63054 * C145 + C63050 * C160 +
             C63056 * C600 - C63057 * C584 - C63056 * C601 + C63051 * C620 +
             C63058 * C602 - C63059 * C585 - C63058 * C603 + C63052 * C621 +
             C63060 * C2337 - C63061 * C2328 - C63060 * C2338 +
             C154422 * C2343) *
                C154406 +
            (C67077 + C67078 + C67079 + C67080) * C154226) *
               C154011 * C2114 -
           ((C67949 + C67950 + C67951 + C67952) * C154226 +
            (C63060 * C7777 - C63061 * C7773 - C63060 * C7778 +
             C154422 * C7785 + C63058 * C2337 - C63059 * C2328 -
             C63058 * C2338 + C63052 * C2343 + C63056 * C602 - C63057 * C585 -
             C63056 * C603 + C63051 * C621 + C63054 * C600 - C63055 * C584 -
             C63054 * C601 + C63050 * C620) *
                C154406) *
               C154011 * C154146) *
              C154066 * C1309 +
          (((C63642 + C63641 + C63640 + C63639) * C154406 +
            (C64373 + C64374 + C64375 + C64376) * C154226) *
               C154011 * C154146 -
           ((C63389 + C63390 + C63391 + C63392) * C154226 +
            (C63138 + C63137 + C63136 + C63135) * C154406) *
               C154011 * C2114) *
              C154066 * C1310 +
          (((C63142 + C63141 + C63140 + C63139) * C154406 +
            (C63865 + C63866 + C63867 + C63868) * C154226) *
               C154011 * C2114 -
           ((C63060 * C9278 - C63061 * C9275 - C63060 * C9279 +
             C154422 * C9284 + C63058 * C6266 - C63059 * C6259 -
             C63058 * C6267 + C63052 * C6277 + C63056 * C1550 - C63057 * C1543 -
             C63056 * C1551 + C63051 * C1558 + C63054 * C1139 - C63055 * C1131 -
             C63054 * C1140 + C63050 * C1149) *
                C154226 +
            (C64090 + C64089 + C64088 + C64087) * C154406) *
               C154011 * C154146) *
              C154066 * C1311)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C63054 * C144 - C63055 * C136 - C63054 * C145 + C63050 * C160 +
             C63056 * C600 - C63057 * C584 - C63056 * C601 + C63051 * C620 +
             C63058 * C602 - C63059 * C585 - C63058 * C603 + C63052 * C621 +
             C63060 * C2337 - C63061 * C2328 - C63060 * C2338 +
             C154422 * C2343) *
                C154406 +
            (C67077 + C67078 + C67079 + C67080) * C154226) *
               C154011 * C2114 -
           ((C67949 + C67950 + C67951 + C67952) * C154226 +
            (C63060 * C7777 - C63061 * C7773 - C63060 * C7778 +
             C154422 * C7785 + C63058 * C2337 - C63059 * C2328 -
             C63058 * C2338 + C63052 * C2343 + C63056 * C602 - C63057 * C585 -
             C63056 * C603 + C63051 * C621 + C63054 * C600 - C63055 * C584 -
             C63054 * C601 + C63050 * C620) *
                C154406) *
               C154011 * C154146) *
              C338 +
          (((C67952 + C67951 + C67950 + C67949) * C154406 +
            (C69197 + C69198 + C69199 + C69200) * C154226) *
               C154011 * C154146 -
           ((C67081 + C67082 + C67083 + C67084) * C154226 +
            (C67080 + C67079 + C67078 + C67077) * C154406) *
               C154011 * C2114) *
              C339 +
          (((C67084 + C67083 + C67082 + C67081) * C154406 +
            (C68301 + C68302 + C68303 + C68304) * C154226) *
               C154011 * C2114 -
           ((C63060 * C32489 - C63061 * C32488 - C63060 * C32490 +
             C154422 * C32491 + C63058 * C30002 - C63059 * C29999 -
             C63058 * C30003 + C63052 * C30005 + C63056 * C4912 -
             C63057 * C4907 - C63056 * C4913 + C63051 * C4916 + C63054 * C4258 -
             C63055 * C4254 - C63054 * C4259 + C63050 * C4266) *
                C154226 +
            (C69200 + C69199 + C69198 + C69197) * C154406) *
               C154011 * C154146) *
              C340) *
         C154047) /
            (p * q * std::sqrt(p + q));
    d2ee[180] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                    C154164 * C123 +
                C211 * C124 + C212 * C125 + C213 * C126 + C214 * C127) *
                   C154082 * C154392 -
               (C448 * C127 + C449 * C126 + C450 * C125 + C451 * C124 +
                (C134 * C363 - C135 * C347 - C134 * C364 + C154181 * C383) *
                    C154164 * C123) *
                   C154082 * C154118) *
                  C154461 +
              ((C451 * C123 + C450 * C124 + C449 * C125 + C448 * C126 +
                C831 * C127) *
                   C154082 * C154118 -
               (C215 * C127 + C214 * C126 + C213 * C125 + C212 * C124 +
                C211 * C123) *
                   C154082 * C154392) *
                  C154462 +
              ((C212 * C123 + C213 * C124 + C214 * C125 + C215 * C126 +
                C216 * C127) *
                   C154082 * C154392 -
               ((C134 * C820 - C135 * C819 - C134 * C821 + C154181 * C822) *
                    C154164 * C127 +
                C831 * C126 + C448 * C125 + C449 * C124 + C450 * C123) *
                   C154082 * C154118) *
                  C818) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                     C154480 +
                 C3210 * C154468 + C3211 * C154442) *
                    C2902 +
                (C2906 + C2907 + C2908) * C2903 + C2920 * C154429) *
                   C154082 * C154392 -
               (C3734 * C154429 + (C3219 + C3174 + C3175) * C2903 +
                (C3214 * C154442 + C3211 * C154468 + C3210 * C154480) * C2902) *
                   C154082 * C154118) *
                  C154461 +
              (((C3175 + C3174 + C3219) * C2902 +
                (C3169 + C3168 + C3218) * C2903 +
                (C3731 + C3732 + C3733) * C154429) *
                   C154082 * C154118 -
               (C2921 * C154429 + (C2911 + C2910 + C2909) * C2903 +
                (C2908 + C2907 + C2906) * C2902) *
                   C154082 * C154392) *
                  C154462 +
              ((C2920 * C2902 + (C2914 + C2913 + C2912) * C2903 +
                (C2915 + C2916 + C2917) * C154429) *
                   C154082 * C154392 -
               (((C134 * C1404 - C135 * C1399 - C134 * C1405 +
                  C154181 * C1414) *
                     C154442 +
                 C447 * C154468 + C440 * C154480) *
                    C154429 +
                (C3733 + C3732 + C3731) * C2903 + C3734 * C2902) *
                   C154082 * C154118) *
                  C818)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C7157 * C144 - C7158 * C136 - C7157 * C145 + C154481 * C160 +
             C7159 * C600 - C7160 * C584 - C7159 * C601 + C154470 * C620 +
             C7161 * C602 - C7162 * C585 - C7161 * C603 + C154445 * C621) *
                C154164 * C2902 +
            (C7236 + C7237 + C7238) * C154164 * C2903 + C7252 * C154429) *
               C154082 * C154392 -
           (C8109 * C154429 + (C7547 + C7548 + C7549) * C154164 * C2903 +
            (C7161 * C1554 - C7162 * C1545 - C7161 * C1555 + C154445 * C1560 +
             C7159 * C1135 - C7160 * C1129 - C7159 * C1136 + C154470 * C1147 +
             C7157 * C363 - C7158 * C347 - C7157 * C364 + C154481 * C383) *
                C154164 * C2902) *
               C154082 * C154118) *
              C154461 +
          (((C7549 + C7548 + C7547) * C154164 * C2902 +
            (C7546 + C7545 + C7544) * C154164 * C2903 +
            (C8113 + C8114 + C8115) * C154164 * C154429) *
               C154082 * C154118 -
           (C7253 * C154429 + (C7241 + C7240 + C7239) * C154164 * C2903 +
            (C7238 + C7237 + C7236) * C154164 * C2902) *
               C154082 * C154392) *
              C154462 +
          ((C7252 * C2902 + (C7244 + C7243 + C7242) * C154164 * C2903 +
            (C7245 + C7246 + C7247) * C154164 * C154429) *
               C154082 * C154392 -
           ((C7161 * C1546 - C7162 * C1541 - C7161 * C1547 + C154445 * C1556 +
             C7159 * C1143 - C7160 * C1133 - C7159 * C1144 + C154470 * C1151 +
             C7157 * C355 - C7158 * C343 - C7157 * C356 + C154481 * C379) *
                C154164 * C154429 +
            (C8115 + C8114 + C8113) * C154164 * C2903 + C8109 * C2902) *
               C154082 * C154118) *
              C818)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C24270 +
             C3210 * C24271 + C3211 * C154442) *
                C154477 +
            (C24277 + C24278 + C24279) * C154458 + C24291 * C154429) *
               C154082 * C154392 -
           (C24975 * C154429 + (C24514 + C24515 + C24516) * C154458 +
            (C3214 * C154442 + C3211 * C24271 + C3210 * C24270) * C154477) *
               C154082 * C154118) *
              C154461 +
          (((C24516 + C24515 + C24514) * C154477 +
            (C24513 + C24512 + C24511) * C154458 +
            (C24972 + C24973 + C24974) * C154429) *
               C154082 * C154118 -
           (C24292 * C154429 + (C24282 + C24281 + C24280) * C154458 +
            (C24279 + C24278 + C24277) * C154477) *
               C154082 * C154392) *
              C154462 +
          ((C24291 * C154477 + (C24285 + C24284 + C24283) * C154458 +
            (C24286 + C24287 + C24288) * C154429) *
               C154082 * C154392 -
           (((C134 * C1404 - C135 * C1399 - C134 * C1405 + C154181 * C1414) *
                 C154442 +
             C447 * C24271 + C440 * C24270) *
                C154429 +
            (C24974 + C24973 + C24972) * C154458 + C24975 * C154477) *
               C154082 * C154118) *
              C818)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                C28192 +
            C3210 * C28193 + C3211 * C28194 + C3214 * C28195 + C4687 * C28196) *
               C154011 * C154082 * C154392 -
           (C28341 * C28196 + C4687 * C28195 + C3214 * C28194 + C3211 * C28193 +
            C3210 * C28192) *
               C154011 * C154082 * C154118) *
              C154461 +
          ((C443 * C28192 + C444 * C28193 + C3213 * C28194 + C3215 * C28195 +
            C28342 * C28196) *
               C154011 * C154082 * C154118 -
           (C3215 * C28196 + C3213 * C28195 + C444 * C28194 + C443 * C28193 +
            C205 * C28192) *
               C154011 * C154082 * C154392) *
              C154462 +
          ((C206 * C28192 + C442 * C28193 + C445 * C28194 + C3212 * C28195 +
            C3216 * C28196) *
               C154011 * C154082 * C154392 -
           ((C134 * C4671 - C135 * C4668 - C134 * C4672 + C154181 * C4677) *
                C28196 +
            C3216 * C28195 + C3212 * C28194 + C445 * C28193 + C442 * C28192) *
               C154011 * C154082 * C154118) *
              C818)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C7157 * C144 - C7158 * C136 - C7157 * C145 + C154481 * C160 +
             C7159 * C600 - C7160 * C584 - C7159 * C601 + C154470 * C620 +
             C7161 * C602 - C7162 * C585 - C7161 * C603 + C154445 * C621) *
                C24270 +
            (C30851 + C30852 + C30853) * C24271 + C30864 * C154442) *
               C154011 * C154082 * C154392 -
           ((C30857 + C30858 + C30859) * C154442 +
            (C30856 + C30855 + C30854) * C24271 +
            (C30853 + C30852 + C30851) * C24270) *
               C154011 * C154082 * C154118) *
              C154461 +
          (((C7549 + C7548 + C7547) * C24270 +
            (C7550 + C7551 + C7552) * C24271 +
            (C30860 + C30861 + C30862) * C154442) *
               C154011 * C154082 * C154118 -
           (C30838 * C154442 + (C7547 + C7548 + C7549) * C24271 +
            (C7238 + C7237 + C7236) * C24270) *
               C154011 * C154082 * C154392) *
              C154462 +
          ((C7250 * C24270 + (C7546 + C7545 + C7544) * C24271 +
            (C7553 + C7554 + C7555) * C154442) *
               C154011 * C154082 * C154392 -
           ((C7161 * C4908 - C7162 * C4905 - C7161 * C4909 + C154445 * C4914 +
             C7159 * C4262 - C7160 * C4256 - C7159 * C4263 + C154470 * C4268 +
             C7157 * C1408 - C7158 * C1401 - C7157 * C1409 + C154481 * C1416) *
                C154442 +
            (C7555 + C7554 + C7553) * C24271 + C8105 * C24270) *
               C154011 * C154082 * C154118) *
              C818)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C47141 * C144 - C47142 * C136 - C47141 * C145 + C47138 * C160 +
             C47143 * C600 - C47144 * C584 - C47143 * C601 + C47139 * C620 +
             C47145 * C602 - C47146 * C585 - C47145 * C603 + C154445 * C621) *
                C154164 * C154477 +
            (C47220 + C47221 + C47222) * C154164 * C154458 + C47236 * C154429) *
               C154082 * C154392 -
           (C48077 * C154429 + (C47531 + C47532 + C47533) * C154164 * C154458 +
            (C47145 * C1554 - C47146 * C1545 - C47145 * C1555 +
             C154445 * C1560 + C47143 * C1135 - C47144 * C1129 -
             C47143 * C1136 + C47139 * C1147 + C47141 * C363 - C47142 * C347 -
             C47141 * C364 + C47138 * C383) *
                C154164 * C154477) *
               C154082 * C154118) *
              C154461 +
          (((C47533 + C47532 + C47531) * C154164 * C154477 +
            (C47530 + C47529 + C47528) * C154164 * C154458 +
            (C48081 + C48082 + C48083) * C154164 * C154429) *
               C154082 * C154118 -
           (C47237 * C154429 + (C47225 + C47224 + C47223) * C154164 * C154458 +
            (C47222 + C47221 + C47220) * C154164 * C154477) *
               C154082 * C154392) *
              C154462 +
          ((C47236 * C154477 + (C47228 + C47227 + C47226) * C154164 * C154458 +
            (C47229 + C47230 + C47231) * C154164 * C154429) *
               C154082 * C154392 -
           ((C47145 * C1546 - C47146 * C1541 - C47145 * C1547 +
             C154445 * C1556 + C47143 * C1143 - C47144 * C1133 -
             C47143 * C1144 + C47139 * C1151 + C47141 * C355 - C47142 * C343 -
             C47141 * C356 + C47138 * C379) *
                C154164 * C154429 +
            (C48083 + C48082 + C48081) * C154164 * C154458 + C48077 * C154477) *
               C154082 * C154118) *
              C818)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C47141 * C144 - C47142 * C136 - C47141 * C145 + C47138 * C160 +
             C47143 * C600 - C47144 * C584 - C47143 * C601 + C47139 * C620 +
             C47145 * C602 - C47146 * C585 - C47145 * C603 + C154445 * C621) *
                C154480 +
            (C51712 + C51713 + C51714) * C154468 + C51725 * C154442) *
               C154011 * C154082 * C154392 -
           ((C51718 + C51719 + C51720) * C154442 +
            (C51717 + C51716 + C51715) * C154468 +
            (C51714 + C51713 + C51712) * C154480) *
               C154011 * C154082 * C154118) *
              C154461 +
          (((C47533 + C47532 + C47531) * C154480 +
            (C47534 + C47535 + C47536) * C154468 +
            (C51721 + C51722 + C51723) * C154442) *
               C154011 * C154082 * C154118 -
           (C51699 * C154442 + (C47531 + C47532 + C47533) * C154468 +
            (C47222 + C47221 + C47220) * C154480) *
               C154011 * C154082 * C154392) *
              C154462 +
          ((C47234 * C154480 + (C47530 + C47529 + C47528) * C154468 +
            (C47537 + C47538 + C47539) * C154442) *
               C154011 * C154082 * C154392 -
           ((C47145 * C4908 - C47146 * C4905 - C47145 * C4909 +
             C154445 * C4914 + C47143 * C4262 - C47144 * C4256 -
             C47143 * C4263 + C47139 * C4268 + C47141 * C1408 - C47142 * C1401 -
             C47141 * C1409 + C47138 * C1416) *
                C154442 +
            (C47539 + C47538 + C47537) * C154468 + C48073 * C154480) *
               C154011 * C154082 * C154118) *
              C818)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C55523 * C144 - C55524 * C136 - C55523 * C145 + C55518 * C160 +
            C55525 * C600 - C55526 * C584 - C55525 * C601 + C55519 * C620 +
            C55527 * C602 - C55528 * C585 - C55527 * C603 + C55520 * C621 +
            C55529 * C2337 - C55530 * C2328 - C55529 * C2338 + C55521 * C2343 +
            C55531 * C7777 - C55532 * C7773 - C55531 * C7778 + C55522 * C7785) *
               C154164 * C154011 * C154082 * C154392 -
           (C55531 * C9282 - C55532 * C9277 - C55531 * C9283 + C55522 * C9286 +
            C55529 * C6274 - C55530 * C6263 - C55529 * C6275 + C55521 * C6281 +
            C55527 * C1554 - C55528 * C1545 - C55527 * C1555 + C55520 * C1560 +
            C55525 * C1135 - C55526 * C1129 - C55525 * C1136 + C55519 * C1147 +
            C55523 * C363 - C55524 * C347 - C55523 * C364 + C55518 * C383) *
               C154164 * C154011 * C154082 * C154118) *
              C154461 +
          ((C55523 * C361 - C55524 * C346 - C55523 * C362 + C55518 * C382 +
            C55525 * C1137 - C55526 * C1130 - C55525 * C1138 + C55519 * C1148 +
            C55527 * C1552 - C55528 * C1544 - C55527 * C1553 + C55520 * C1559 +
            C55529 * C6270 - C55530 * C6261 - C55529 * C6271 + C55521 * C6279 +
            C55531 * C9280 - C55532 * C9276 - C55531 * C9281 + C55522 * C9285) *
               C154164 * C154011 * C154082 * C154118 -
           (C55531 * C7779 - C55532 * C7774 - C55531 * C7780 + C55522 * C7786 +
            C55529 * C2335 - C55530 * C2327 - C55529 * C2336 + C55521 * C2342 +
            C55527 * C604 - C55528 * C586 - C55527 * C605 + C55520 * C622 +
            C55525 * C598 - C55526 * C583 - C55525 * C599 + C55519 * C619 +
            C55523 * C146 - C55524 * C137 - C55523 * C147 + C55518 * C161) *
               C154164 * C154011 * C154082 * C154392) *
              C154462 +
          ((C55523 * C148 - C55524 * C138 - C55523 * C149 + C55518 * C162 +
            C55525 * C596 - C55526 * C582 - C55525 * C597 + C55519 * C618 +
            C55527 * C606 - C55528 * C587 - C55527 * C607 + C55520 * C623 +
            C55529 * C2333 - C55530 * C2326 - C55529 * C2334 + C55521 * C2341 +
            C55531 * C7781 - C55532 * C7775 - C55531 * C7782 + C55522 * C7787) *
               C154164 * C154011 * C154082 * C154392 -
           (C55531 * C9278 - C55532 * C9275 - C55531 * C9279 + C55522 * C9284 +
            C55529 * C6266 - C55530 * C6259 - C55529 * C6267 + C55521 * C6277 +
            C55527 * C1550 - C55528 * C1543 - C55527 * C1551 + C55520 * C1558 +
            C55525 * C1139 - C55526 * C1131 - C55525 * C1140 + C55519 * C1149 +
            C55523 * C359 - C55524 * C345 - C55523 * C360 + C55518 * C381) *
               C154164 * C154011 * C154082 * C154118) *
              C818)) /
            (p * q * std::sqrt(p + q));
    d2ee[181] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                     C154164 * C123 +
                 C211 * C124 + C212 * C125 + C213 * C126 + C214 * C127) *
                    C154393 -
                (C685 * C127 + C686 * C126 + C687 * C125 + C688 * C124 +
                 (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                     C154164 * C123) *
                    C154146) *
                   C154392 +
               (((C134 * C1135 - C135 * C1129 - C134 * C1136 +
                  C154181 * C1147) *
                     C154164 * C123 +
                 C1182 * C124 + C1183 * C125 + C1184 * C126 + C1185 * C127) *
                    C154146 -
                (C448 * C127 + C449 * C126 + C450 * C125 + C451 * C124 +
                 (C134 * C363 - C135 * C347 - C134 * C364 + C154181 * C383) *
                     C154164 * C123) *
                    C154393) *
                   C154118) *
                  C341 +
              (((C688 * C123 + C687 * C124 + C686 * C125 + C685 * C126 +
                 C967 * C127) *
                    C154146 -
                (C215 * C127 + C214 * C126 + C213 * C125 + C212 * C124 +
                 C211 * C123) *
                    C154393) *
                   C154392 +
               ((C451 * C123 + C450 * C124 + C449 * C125 + C448 * C126 +
                 C831 * C127) *
                    C154393 -
                ((C134 * C1145 - C135 * C1134 - C134 * C1146 +
                  C154181 * C1152) *
                     C154164 * C127 +
                 C1185 * C126 + C1184 * C125 + C1183 * C124 + C1182 * C123) *
                    C154146) *
                   C154118) *
                  C154053) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                      C154480 +
                  C3210 * C154468 + C3211 * C154442) *
                     C2902 +
                 (C2906 + C2907 + C2908) * C2903 + C2920 * C154429) *
                    C154393 -
                (C3960 * C154429 + (C3507 + C3468 + C3469) * C2903 +
                 (C4299 * C154442 + C4300 * C154468 +
                  (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                      C154480) *
                     C2902) *
                    C154146) *
                   C154392 +
               (((C4300 * C154480 + C4299 * C154468 +
                  (C134 * C4258 - C135 * C4254 - C134 * C4259 +
                   C154181 * C4266) *
                      C154442) *
                     C2902 +
                 (C4279 + C4280 + C4303) * C2903 +
                 (C4285 + C4286 + C4304) * C154429) *
                    C154146 -
                (C3734 * C154429 + (C3219 + C3174 + C3175) * C2903 +
                 (C3214 * C154442 + C3211 * C154468 + C3210 * C154480) *
                     C2902) *
                    C154393) *
                   C154118) *
                  C341 +
              ((((C3469 + C3468 + C3507) * C2902 +
                 (C3463 + C3462 + C3506) * C2903 +
                 (C3954 + C3955 + C3964) * C154429) *
                    C154146 -
                (C2921 * C154429 + (C2911 + C2910 + C2909) * C2903 +
                 (C2908 + C2907 + C2906) * C2902) *
                    C154393) *
                   C154392 +
               (((C3175 + C3174 + C3219) * C2902 +
                 (C3169 + C3168 + C3218) * C2903 +
                 (C3731 + C3732 + C3733) * C154429) *
                    C154393 -
                (((C134 * C4264 - C135 * C4257 - C134 * C4265 +
                   C154181 * C4269) *
                      C154442 +
                  C3963 * C154468 + C1180 * C154480) *
                     C154429 +
                 (C4304 + C4286 + C4285) * C2903 +
                 (C4303 + C4280 + C4279) * C2902) *
                    C154146) *
                   C154118) *
                  C154053)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C7157 * C144 - C7158 * C136 - C7157 * C145 + C154481 * C160 +
              C7159 * C600 - C7160 * C584 - C7159 * C601 + C154470 * C620 +
              C7161 * C602 - C7162 * C585 - C7161 * C603 + C154445 * C621) *
                 C154164 * C2902 +
             (C7236 + C7237 + C7238) * C154164 * C2903 + C7252 * C154429) *
                C154393 -
            (C8351 * C154429 + (C7865 + C7866 + C7867) * C154164 * C2903 +
             (C7161 * C2337 - C7162 * C2328 - C7161 * C2338 + C154445 * C2343 +
              C7159 * C602 - C7160 * C585 - C7159 * C603 + C154470 * C621 +
              C7157 * C600 - C7158 * C584 - C7157 * C601 + C154481 * C620) *
                 C154164 * C2902) *
                C154146) *
               C154392 +
           (((C7157 * C1135 - C7158 * C1129 - C7157 * C1136 + C154481 * C1147 +
              C7159 * C1554 - C7160 * C1545 - C7159 * C1555 + C154470 * C1560 +
              C7161 * C6274 - C7162 * C6263 - C7161 * C6275 + C154445 * C6281) *
                 C154164 * C2902 +
             (C8688 + C8689 + C8690) * C154164 * C2903 +
             (C8691 + C8692 + C8693) * C154164 * C154429) *
                C154146 -
            (C8109 * C154429 + (C7547 + C7548 + C7549) * C154164 * C2903 +
             (C7161 * C1554 - C7162 * C1545 - C7161 * C1555 + C154445 * C1560 +
              C7159 * C1135 - C7160 * C1129 - C7159 * C1136 + C154470 * C1147 +
              C7157 * C363 - C7158 * C347 - C7157 * C364 + C154481 * C383) *
                 C154164 * C2902) *
                C154393) *
               C154118) *
              C341 +
          ((((C7867 + C7866 + C7865) * C154164 * C2902 +
             (C7864 + C7863 + C7862) * C154164 * C2903 +
             (C8355 + C8356 + C8357) * C154164 * C154429) *
                C154146 -
            (C7253 * C154429 + (C7241 + C7240 + C7239) * C154164 * C2903 +
             (C7238 + C7237 + C7236) * C154164 * C2902) *
                C154393) *
               C154392 +
           (((C7549 + C7548 + C7547) * C154164 * C2902 +
             (C7546 + C7545 + C7544) * C154164 * C2903 +
             (C8113 + C8114 + C8115) * C154164 * C154429) *
                C154393 -
            ((C7161 * C8648 - C7162 * C8647 - C7161 * C8649 + C154445 * C8650 +
              C7159 * C1548 - C7160 * C1542 - C7159 * C1549 + C154470 * C1557 +
              C7157 * C1141 - C7158 * C1132 - C7157 * C1142 + C154481 * C1150) *
                 C154164 * C154429 +
             (C8693 + C8692 + C8691) * C154164 * C2903 +
             (C8690 + C8689 + C8688) * C154164 * C2902) *
                C154146) *
               C154118) *
              C154053)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                  C24270 +
              C3210 * C24271 + C3211 * C154442) *
                 C154477 +
             (C24277 + C24278 + C24279) * C154458 + C24291 * C154429) *
                C154393 -
            (C25198 * C154429 + (C24744 + C24745 + C24746) * C154458 +
             (C4299 * C154442 + C4300 * C24271 +
              (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                  C24270) *
                 C154477) *
                C154146) *
               C154392 +
           (((C4300 * C24270 + C4299 * C24271 + C5676 * C154442) * C154477 +
             (C25489 + C25490 + C25491) * C154458 +
             (C25492 + C25493 + C25494) * C154429) *
                C154146 -
            (C24975 * C154429 + (C24514 + C24515 + C24516) * C154458 +
             (C3214 * C154442 + C3211 * C24271 + C3210 * C24270) * C154477) *
                C154393) *
               C154118) *
              C341 +
          ((((C24746 + C24745 + C24744) * C154477 +
             (C24743 + C24742 + C24741) * C154458 +
             (C25195 + C25196 + C25197) * C154429) *
                C154146 -
            (C24292 * C154429 + (C24282 + C24281 + C24280) * C154458 +
             (C24279 + C24278 + C24277) * C154477) *
                C154393) *
               C154392 +
           (((C24516 + C24515 + C24514) * C154477 +
             (C24513 + C24512 + C24511) * C154458 +
             (C24972 + C24973 + C24974) * C154429) *
                C154393 -
            (((C134 * C4264 - C135 * C4257 - C134 * C4265 + C154181 * C4269) *
                  C154442 +
              C3963 * C24271 + C1180 * C24270) *
                 C154429 +
             (C25494 + C25493 + C25492) * C154458 +
             (C25491 + C25490 + C25489) * C154477) *
                C154146) *
               C154118) *
              C154053)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C28192 +
             C3210 * C28193 + C3211 * C28194 + C3214 * C28195 +
             C4687 * C28196) *
                C154011 * C154393 -
            (C28899 * C28196 + C5676 * C28195 + C4299 * C28194 +
             C4300 * C28193 +
             (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                 C28192) *
                C154011 * C154146) *
               C154392 +
           ((C4300 * C28192 + C4299 * C28193 + C5676 * C28194 +
             C28899 * C28195 +
             (C134 * C28880 - C135 * C28878 - C134 * C28881 +
              C154181 * C28884) *
                 C28196) *
                C154011 * C154146 -
            (C28341 * C28196 + C4687 * C28195 + C3214 * C28194 +
             C3211 * C28193 + C3210 * C28192) *
                C154011 * C154393) *
               C154118) *
              C341 +
          (((C680 * C28192 + C1178 * C28193 + C3501 * C28194 + C4301 * C28195 +
             C28900 * C28196) *
                C154011 * C154146 -
            (C3215 * C28196 + C3213 * C28195 + C444 * C28194 + C443 * C28193 +
             C205 * C28192) *
                C154011 * C154393) *
               C154392 +
           ((C443 * C28192 + C444 * C28193 + C3213 * C28194 + C3215 * C28195 +
             C28342 * C28196) *
                C154011 * C154393 -
            ((C134 * C28882 - C135 * C28879 - C134 * C28883 +
              C154181 * C28885) *
                 C28196 +
             C28900 * C28195 + C4301 * C28194 + C3501 * C28193 +
             C1178 * C28192) *
                C154011 * C154146) *
               C154118) *
              C154053)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C7157 * C144 - C7158 * C136 - C7157 * C145 + C154481 * C160 +
              C7159 * C600 - C7160 * C584 - C7159 * C601 + C154470 * C620 +
              C7161 * C602 - C7162 * C585 - C7161 * C603 + C154445 * C621) *
                 C24270 +
             (C30851 + C30852 + C30853) * C24271 + C30864 * C154442) *
                C154011 * C154393 -
            ((C31875 + C31876 + C31877) * C154442 +
             (C31878 + C31879 + C31880) * C24271 +
             (C7161 * C2337 - C7162 * C2328 - C7161 * C2338 + C154445 * C2343 +
              C7159 * C602 - C7160 * C585 - C7159 * C603 + C154470 * C621 +
              C7157 * C600 - C7158 * C584 - C7157 * C601 + C154481 * C620) *
                 C24270) *
                C154011 * C154146) *
               C154392 +
           (((C31880 + C31879 + C31878) * C24270 +
             (C31877 + C31876 + C31875) * C24271 +
             (C7157 * C4258 - C7158 * C4254 - C7157 * C4259 + C154481 * C4266 +
              C7159 * C4912 - C7160 * C4907 - C7159 * C4913 + C154470 * C4916 +
              C7161 * C30002 - C7162 * C29999 - C7161 * C30003 +
              C154445 * C30005) *
                 C154442) *
                C154011 * C154146 -
            ((C30857 + C30858 + C30859) * C154442 +
             (C30856 + C30855 + C30854) * C24271 +
             (C30853 + C30852 + C30851) * C24270) *
                C154011 * C154393) *
               C154118) *
              C341 +
          ((((C7867 + C7866 + C7865) * C24270 +
             (C8688 + C8689 + C8690) * C24271 +
             (C31881 + C31882 + C31883) * C154442) *
                C154011 * C154146 -
            (C30838 * C154442 + (C7547 + C7548 + C7549) * C24271 +
             (C7238 + C7237 + C7236) * C24270) *
                C154011 * C154393) *
               C154392 +
           (((C7549 + C7548 + C7547) * C24270 +
             (C7550 + C7551 + C7552) * C24271 +
             (C30860 + C30861 + C30862) * C154442) *
                C154011 * C154393 -
            ((C7161 * C31817 - C7162 * C31816 - C7161 * C31818 +
              C154445 * C31819 + C7159 * C4910 - C7160 * C4906 - C7159 * C4911 +
              C154470 * C4915 + C7157 * C4260 - C7158 * C4255 - C7157 * C4261 +
              C154481 * C4267) *
                 C154442 +
             (C31883 + C31882 + C31881) * C24271 +
             (C8690 + C8689 + C8688) * C24270) *
                C154011 * C154146) *
               C154118) *
              C154053)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C47141 * C144 - C47142 * C136 - C47141 * C145 + C47138 * C160 +
              C47143 * C600 - C47144 * C584 - C47143 * C601 + C47139 * C620 +
              C47145 * C602 - C47146 * C585 - C47145 * C603 + C154445 * C621) *
                 C154164 * C154477 +
             (C47220 + C47221 + C47222) * C154164 * C154458 +
             C47236 * C154429) *
                C154393 -
            (C48319 * C154429 + (C47833 + C47834 + C47835) * C154164 * C154458 +
             (C47145 * C2337 - C47146 * C2328 - C47145 * C2338 +
              C154445 * C2343 + C47143 * C602 - C47144 * C585 - C47143 * C603 +
              C47139 * C621 + C47141 * C600 - C47142 * C584 - C47141 * C601 +
              C47138 * C620) *
                 C154164 * C154477) *
                C154146) *
               C154392 +
           (((C47141 * C1135 - C47142 * C1129 - C47141 * C1136 +
              C47138 * C1147 + C47143 * C1554 - C47144 * C1545 -
              C47143 * C1555 + C47139 * C1560 + C47145 * C6274 -
              C47146 * C6263 - C47145 * C6275 + C154445 * C6281) *
                 C154164 * C154477 +
             (C48652 + C48653 + C48654) * C154164 * C154458 +
             (C48655 + C48656 + C48657) * C154164 * C154429) *
                C154146 -
            (C48077 * C154429 + (C47531 + C47532 + C47533) * C154164 * C154458 +
             (C47145 * C1554 - C47146 * C1545 - C47145 * C1555 +
              C154445 * C1560 + C47143 * C1135 - C47144 * C1129 -
              C47143 * C1136 + C47139 * C1147 + C47141 * C363 - C47142 * C347 -
              C47141 * C364 + C47138 * C383) *
                 C154164 * C154477) *
                C154393) *
               C154118) *
              C341 +
          ((((C47835 + C47834 + C47833) * C154164 * C154477 +
             (C47832 + C47831 + C47830) * C154164 * C154458 +
             (C48323 + C48324 + C48325) * C154164 * C154429) *
                C154146 -
            (C47237 * C154429 + (C47225 + C47224 + C47223) * C154164 * C154458 +
             (C47222 + C47221 + C47220) * C154164 * C154477) *
                C154393) *
               C154392 +
           (((C47533 + C47532 + C47531) * C154164 * C154477 +
             (C47530 + C47529 + C47528) * C154164 * C154458 +
             (C48081 + C48082 + C48083) * C154164 * C154429) *
                C154393 -
            ((C47145 * C8648 - C47146 * C8647 - C47145 * C8649 +
              C154445 * C8650 + C47143 * C1548 - C47144 * C1542 -
              C47143 * C1549 + C47139 * C1557 + C47141 * C1141 -
              C47142 * C1132 - C47141 * C1142 + C47138 * C1150) *
                 C154164 * C154429 +
             (C48657 + C48656 + C48655) * C154164 * C154458 +
             (C48654 + C48653 + C48652) * C154164 * C154477) *
                C154146) *
               C154118) *
              C154053)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C47141 * C144 - C47142 * C136 - C47141 * C145 + C47138 * C160 +
              C47143 * C600 - C47144 * C584 - C47143 * C601 + C47139 * C620 +
              C47145 * C602 - C47146 * C585 - C47145 * C603 + C154445 * C621) *
                 C154480 +
             (C51712 + C51713 + C51714) * C154468 + C51725 * C154442) *
                C154011 * C154393 -
            ((C52724 + C52725 + C52726) * C154442 +
             (C52727 + C52728 + C52729) * C154468 +
             (C47145 * C2337 - C47146 * C2328 - C47145 * C2338 +
              C154445 * C2343 + C47143 * C602 - C47144 * C585 - C47143 * C603 +
              C47139 * C621 + C47141 * C600 - C47142 * C584 - C47141 * C601 +
              C47138 * C620) *
                 C154480) *
                C154011 * C154146) *
               C154392 +
           (((C52729 + C52728 + C52727) * C154480 +
             (C52726 + C52725 + C52724) * C154468 +
             (C47141 * C4258 - C47142 * C4254 - C47141 * C4259 +
              C47138 * C4266 + C47143 * C4912 - C47144 * C4907 -
              C47143 * C4913 + C47139 * C4916 + C47145 * C30002 -
              C47146 * C29999 - C47145 * C30003 + C154445 * C30005) *
                 C154442) *
                C154011 * C154146 -
            ((C51718 + C51719 + C51720) * C154442 +
             (C51717 + C51716 + C51715) * C154468 +
             (C51714 + C51713 + C51712) * C154480) *
                C154011 * C154393) *
               C154118) *
              C341 +
          ((((C47835 + C47834 + C47833) * C154480 +
             (C48652 + C48653 + C48654) * C154468 +
             (C52730 + C52731 + C52732) * C154442) *
                C154011 * C154146 -
            (C51699 * C154442 + (C47531 + C47532 + C47533) * C154468 +
             (C47222 + C47221 + C47220) * C154480) *
                C154011 * C154393) *
               C154392 +
           (((C47533 + C47532 + C47531) * C154480 +
             (C47534 + C47535 + C47536) * C154468 +
             (C51721 + C51722 + C51723) * C154442) *
                C154011 * C154393 -
            ((C47145 * C31817 - C47146 * C31816 - C47145 * C31818 +
              C154445 * C31819 + C47143 * C4910 - C47144 * C4906 -
              C47143 * C4911 + C47139 * C4915 + C47141 * C4260 -
              C47142 * C4255 - C47141 * C4261 + C47138 * C4267) *
                 C154442 +
             (C52732 + C52731 + C52730) * C154468 +
             (C48654 + C48653 + C48652) * C154480) *
                C154011 * C154146) *
               C154118) *
              C154053)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C55523 * C144 - C55524 * C136 - C55523 * C145 + C55518 * C160 +
             C55525 * C600 - C55526 * C584 - C55525 * C601 + C55519 * C620 +
             C55527 * C602 - C55528 * C585 - C55527 * C603 + C55520 * C621 +
             C55529 * C2337 - C55530 * C2328 - C55529 * C2338 + C55521 * C2343 +
             C55531 * C7777 - C55532 * C7773 - C55531 * C7778 +
             C55522 * C7785) *
                C154164 * C154011 * C154393 -
            (C55531 * C10602 - C55532 * C10597 - C55531 * C10603 +
             C55522 * C10606 + C55529 * C7777 - C55530 * C7773 -
             C55529 * C7778 + C55521 * C7785 + C55527 * C2337 - C55528 * C2328 -
             C55527 * C2338 + C55520 * C2343 + C55525 * C602 - C55526 * C585 -
             C55525 * C603 + C55519 * C621 + C55523 * C600 - C55524 * C584 -
             C55523 * C601 + C55518 * C620) *
                C154164 * C154011 * C154146) *
               C154392 +
           ((C55523 * C1135 - C55524 * C1129 - C55523 * C1136 + C55518 * C1147 +
             C55525 * C1554 - C55526 * C1545 - C55525 * C1555 + C55519 * C1560 +
             C55527 * C6274 - C55528 * C6263 - C55527 * C6275 + C55520 * C6281 +
             C55529 * C9282 - C55530 * C9277 - C55529 * C9283 + C55521 * C9286 +
             C55531 * C33869 - C55532 * C33866 - C55531 * C33870 +
             C55522 * C33872) *
                C154164 * C154011 * C154146 -
            (C55531 * C9282 - C55532 * C9277 - C55531 * C9283 + C55522 * C9286 +
             C55529 * C6274 - C55530 * C6263 - C55529 * C6275 + C55521 * C6281 +
             C55527 * C1554 - C55528 * C1545 - C55527 * C1555 + C55520 * C1560 +
             C55525 * C1135 - C55526 * C1129 - C55525 * C1136 + C55519 * C1147 +
             C55523 * C363 - C55524 * C347 - C55523 * C364 + C55518 * C383) *
                C154164 * C154011 * C154393) *
               C154118) *
              C341 +
          (((C55523 * C598 - C55524 * C583 - C55523 * C599 + C55518 * C619 +
             C55525 * C604 - C55526 * C586 - C55525 * C605 + C55519 * C622 +
             C55527 * C2335 - C55528 * C2327 - C55527 * C2336 + C55520 * C2342 +
             C55529 * C7779 - C55530 * C7774 - C55529 * C7780 + C55521 * C7786 +
             C55531 * C10600 - C55532 * C10596 - C55531 * C10601 +
             C55522 * C10605) *
                C154164 * C154011 * C154146 -
            (C55531 * C7779 - C55532 * C7774 - C55531 * C7780 + C55522 * C7786 +
             C55529 * C2335 - C55530 * C2327 - C55529 * C2336 + C55521 * C2342 +
             C55527 * C604 - C55528 * C586 - C55527 * C605 + C55520 * C622 +
             C55525 * C598 - C55526 * C583 - C55525 * C599 + C55519 * C619 +
             C55523 * C146 - C55524 * C137 - C55523 * C147 + C55518 * C161) *
                C154164 * C154011 * C154393) *
               C154392 +
           ((C55523 * C361 - C55524 * C346 - C55523 * C362 + C55518 * C382 +
             C55525 * C1137 - C55526 * C1130 - C55525 * C1138 + C55519 * C1148 +
             C55527 * C1552 - C55528 * C1544 - C55527 * C1553 + C55520 * C1559 +
             C55529 * C6270 - C55530 * C6261 - C55529 * C6271 + C55521 * C6279 +
             C55531 * C9280 - C55532 * C9276 - C55531 * C9281 +
             C55522 * C9285) *
                C154164 * C154011 * C154393 -
            (C55531 * C56192 - C55532 * C56191 - C55531 * C56193 +
             C55522 * C56194 + C55529 * C9280 - C55530 * C9276 -
             C55529 * C9281 + C55521 * C9285 + C55527 * C6270 - C55528 * C6261 -
             C55527 * C6271 + C55520 * C6279 + C55525 * C1552 - C55526 * C1544 -
             C55525 * C1553 + C55519 * C1559 + C55523 * C1137 - C55524 * C1130 -
             C55523 * C1138 + C55518 * C1148) *
                C154164 * C154011 * C154146) *
               C154118) *
              C154053)) /
            (p * q * std::sqrt(p + q));
    d2ee[182] +=
        (-0.25 * std::pow(Pi, 2.5) *
             (((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                   C154164 * C123 +
               C211 * C124 + C212 * C125 + C213 * C126 + C214 * C127) *
                  C154082 * C154066 * C130 -
              (C215 * C127 + C214 * C126 + C213 * C125 + C212 * C124 +
               C211 * C123) *
                  C154082 * C154066 * C131 +
              (C212 * C123 + C213 * C124 + C214 * C125 + C215 * C126 +
               C216 * C127) *
                  C154082 * C154066 * C132 -
              ((C134 * C158 - C135 * C143 - C134 * C159 + C154181 * C167) *
                   C154164 * C127 +
               C216 * C126 + C215 * C125 + C214 * C124 + C213 * C123) *
                  C154082 * C154066 * C133) -
         0.25 * std::pow(Pi, 2.5) *
             ((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                    C154164 * C123 +
                C211 * C124 + C212 * C125 + C213 * C126 + C214 * C127) *
                   C154082 * C338 -
               (C448 * C127 + C449 * C126 + C450 * C125 + C451 * C124 +
                (C134 * C363 - C135 * C347 - C134 * C364 + C154181 * C383) *
                    C154164 * C123) *
                   C154082 * C339 +
               ((C134 * C365 - C135 * C348 - C134 * C366 + C154181 * C384) *
                    C154164 * C123 +
                C452 * C124 + C453 * C125 + C454 * C126 + C455 * C127) *
                   C154082 * C340) *
                  C341 +
              ((C451 * C123 + C450 * C124 + C449 * C125 + C448 * C126 +
                (C134 * C375 - C135 * C353 - C134 * C376 + C154181 * C389) *
                    C154164 * C127) *
                   C154082 * C339 -
               (C215 * C127 + C214 * C126 + C213 * C125 + C212 * C124 +
                C211 * C123) *
                   C154082 * C338 -
               ((C134 * C377 - C135 * C354 - C134 * C378 + C154181 * C390) *
                    C154164 * C127 +
                C455 * C126 + C454 * C125 + C453 * C124 + C452 * C123) *
                   C154082 * C340) *
                  C154053) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                    C154164 * C123 +
                C211 * C124 + C212 * C125 + C213 * C126 + C214 * C127) *
                   C577 -
               (C685 * C127 + C686 * C126 + C687 * C125 + C688 * C124 +
                (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                    C154164 * C123) *
                   C578 +
               ((C134 * C602 - C135 * C585 - C134 * C603 + C154181 * C621) *
                    C154164 * C123 +
                C689 * C124 + C690 * C125 + C691 * C126 + C692 * C127) *
                   C579) *
                  C154066 * C341 +
              ((C688 * C123 + C687 * C124 + C686 * C125 + C685 * C126 +
                (C134 * C612 - C135 * C590 - C134 * C613 + C154181 * C626) *
                    C154164 * C127) *
                   C578 -
               (C215 * C127 + C214 * C126 + C213 * C125 + C212 * C124 +
                C211 * C123) *
                   C577 -
               ((C134 * C614 - C135 * C591 - C134 * C615 + C154181 * C627) *
                    C154164 * C127 +
                C692 * C126 + C691 * C125 + C690 * C124 + C689 * C123) *
                   C579) *
                  C154066 * C154053) -
         0.25 * std::pow(Pi, 2.5) *
             ((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                    C154480 +
                (C134 * C363 - C135 * C347 - C134 * C364 + C154181 * C383) *
                    C154468 +
                (C134 * C365 - C135 * C348 - C134 * C366 + C154181 * C384) *
                    C154442) *
                   C2902 +
               (C2906 + C2907 + C2908) * C2903 + C2920 * C154429) *
                  C154082 * C154066 * C130 -
              (C2921 * C154429 + (C2911 + C2910 + C2909) * C2903 +
               (C2908 + C2907 + C2906) * C2902) *
                  C154082 * C154066 * C131 +
              (C2920 * C2902 + (C2914 + C2913 + C2912) * C2903 +
               (C2915 + C2916 + C2917) * C154429) *
                  C154082 * C154066 * C132 -
              (((C134 * C377 - C135 * C354 - C134 * C378 + C154181 * C390) *
                    C154442 +
                C830 * C154468 + C209 * C154480) *
                   C154429 +
               (C2917 + C2916 + C2915) * C2903 + C2921 * C2902) *
                  C154082 * C154066 * C133) -
         0.25 * std::pow(Pi, 2.5) *
             (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                     C154480 +
                 C3210 * C154468 + C3211 * C154442) *
                    C2902 +
                (C2906 + C2907 + C2908) * C2903 + C2920 * C154429) *
                   C154082 * C338 -
               ((C3218 + C3168 + C3169) * C154429 +
                (C3219 + C3174 + C3175) * C2903 +
                (C3214 * C154442 + C3211 * C154468 + C3210 * C154480) * C2902) *
                   C154082 * C339 +
               ((C3211 * C154480 + C3214 * C154468 +
                 (C134 * C3143 - C135 * C3139 - C134 * C3144 +
                  C154181 * C3151) *
                     C154442) *
                    C2902 +
                (C3180 + C3220 + C3221) * C2903 +
                (C3185 + C3222 + C3223) * C154429) *
                   C154082 * C340) *
                  C341 +
              (((C3175 + C3174 + C3219) * C2902 +
                (C3169 + C3168 + C3218) * C2903 +
                (C441 * C154480 + C446 * C154468 + C3217 * C154442) * C154429) *
                   C154082 * C339 -
               (C2921 * C154429 + (C2911 + C2910 + C2909) * C2903 +
                (C2908 + C2907 + C2906) * C2902) *
                   C154082 * C338 -
               (((C134 * C3149 - C135 * C3142 - C134 * C3150 +
                  C154181 * C3154) *
                     C154442 +
                 C3217 * C154468 + C446 * C154480) *
                    C154429 +
                (C3223 + C3222 + C3185) * C2903 +
                (C3221 + C3220 + C3180) * C2902) *
                   C154082 * C340) *
                  C154053) +
         0.5 * std::pow(Pi, 2.5) *
             (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                     C154480 +
                 C3210 * C154468 + C3211 * C154442) *
                    C2902 +
                (C2906 + C2907 + C2908) * C2903 + C2920 * C154429) *
                   C577 -
               ((C3506 + C3462 + C3463) * C154429 +
                (C3507 + C3468 + C3469) * C2903 +
                ((C134 * C1985 - C135 * C1976 - C134 * C1986 +
                  C154181 * C1991) *
                     C154442 +
                 (C134 * C1135 - C135 * C1129 - C134 * C1136 +
                  C154181 * C1147) *
                     C154468 +
                 (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                     C154480) *
                    C2902) *
                   C578 +
               (((C134 * C602 - C135 * C585 - C134 * C603 + C154181 * C621) *
                     C154480 +
                 (C134 * C1554 - C135 * C1545 - C134 * C1555 +
                  C154181 * C1560) *
                     C154468 +
                 (C134 * C3445 - C135 * C3441 - C134 * C3446 +
                  C154181 * C3453) *
                     C154442) *
                    C2902 +
                (C3470 + C3508 + C3509) * C2903 +
                (C3479 + C3510 + C3511) * C154429) *
                   C579) *
                  C154066 * C341 +
              (((C3469 + C3468 + C3507) * C2902 +
                (C3463 + C3462 + C3506) * C2903 +
                (C678 * C154480 + C1180 * C154468 +
                 (C134 * C1979 - C135 * C1973 - C134 * C1980 +
                  C154181 * C1988) *
                     C154442) *
                    C154429) *
                   C578 -
               (C2921 * C154429 + (C2911 + C2910 + C2909) * C2903 +
                (C2908 + C2907 + C2906) * C2902) *
                   C577 -
               (((C134 * C3451 - C135 * C3444 - C134 * C3452 +
                  C154181 * C3456) *
                     C154442 +
                 (C134 * C1548 - C135 * C1542 - C134 * C1549 +
                  C154181 * C1557) *
                     C154468 +
                 C683 * C154480) *
                    C154429 +
                (C3511 + C3510 + C3479) * C2903 +
                (C3509 + C3508 + C3470) * C2902) *
                   C579) *
                  C154066 * C154053) +
         0.5 * std::pow(Pi, 2.5) *
             (((C7157 * C144 - C7158 * C136 - C7157 * C145 + C154481 * C160 +
                C7159 * C600 - C7160 * C584 - C7159 * C601 + C154470 * C620 +
                C7161 * C602 - C7162 * C585 - C7161 * C603 + C154445 * C621) *
                   C154164 * C2902 +
               (C7236 + C7237 + C7238) * C154164 * C2903 + C7252 * C154429) *
                  C154082 * C154066 * C130 -
              (C7253 * C154429 + (C7241 + C7240 + C7239) * C154164 * C2903 +
               (C7238 + C7237 + C7236) * C154164 * C2902) *
                  C154082 * C154066 * C131 +
              (C7252 * C2902 + (C7244 + C7243 + C7242) * C154164 * C2903 +
               (C7245 + C7246 + C7247) * C154164 * C154429) *
                  C154082 * C154066 * C132 -
              ((C7161 * C614 - C7162 * C591 - C7161 * C615 + C154445 * C627 +
                C7159 * C612 - C7160 * C590 - C7159 * C613 + C154470 * C626 +
                C7157 * C154 - C7158 * C141 - C7157 * C155 + C154481 * C165) *
                   C154164 * C154429 +
               (C7247 + C7246 + C7245) * C154164 * C2903 + C7253 * C2902) *
                  C154082 * C154066 * C133) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C7157 * C144 - C7158 * C136 - C7157 * C145 + C154481 * C160 +
                 C7159 * C600 - C7160 * C584 - C7159 * C601 + C154470 * C620 +
                 C7161 * C602 - C7162 * C585 - C7161 * C603 + C154445 * C621) *
                    C154164 * C2902 +
                (C7236 + C7237 + C7238) * C154164 * C2903 + C7252 * C154429) *
                   C154082 * C338 -
               ((C7544 + C7545 + C7546) * C154164 * C154429 +
                (C7547 + C7548 + C7549) * C154164 * C2903 +
                (C7161 * C1554 - C7162 * C1545 - C7161 * C1555 +
                 C154445 * C1560 + C7159 * C1135 - C7160 * C1129 -
                 C7159 * C1136 + C154470 * C1147 + C7157 * C363 - C7158 * C347 -
                 C7157 * C364 + C154481 * C383) *
                    C154164 * C2902) *
                   C154082 * C339 +
               ((C7157 * C365 - C7158 * C348 - C7157 * C366 + C154481 * C384 +
                 C7159 * C1985 - C7160 * C1976 - C7159 * C1986 +
                 C154470 * C1991 + C7161 * C3445 - C7162 * C3441 -
                 C7161 * C3446 + C154445 * C3453) *
                    C154164 * C2902 +
                (C7550 + C7551 + C7552) * C154164 * C2903 +
                (C7553 + C7554 + C7555) * C154164 * C154429) *
                   C154082 * C340) *
                  C341 +
              (((C7549 + C7548 + C7547) * C154164 * C2902 +
                (C7546 + C7545 + C7544) * C154164 * C2903 +
                (C7157 * C357 - C7158 * C344 - C7157 * C358 + C154481 * C380 +
                 C7159 * C1141 - C7160 * C1132 - C7159 * C1142 +
                 C154470 * C1150 + C7161 * C1548 - C7162 * C1542 -
                 C7161 * C1549 + C154445 * C1557) *
                    C154164 * C154429) *
                   C154082 * C339 -
               (C7253 * C154429 + (C7241 + C7240 + C7239) * C154164 * C2903 +
                (C7238 + C7237 + C7236) * C154164 * C2902) *
                   C154082 * C338 -
               ((C7161 * C3451 - C7162 * C3444 - C7161 * C3452 +
                 C154445 * C3456 + C7159 * C1979 - C7160 * C1973 -
                 C7159 * C1980 + C154470 * C1988 + C7157 * C371 - C7158 * C351 -
                 C7157 * C372 + C154481 * C387) *
                    C154164 * C154429 +
                (C7555 + C7554 + C7553) * C154164 * C2903 +
                (C7552 + C7551 + C7550) * C154164 * C2902) *
                   C154082 * C340) *
                  C154053)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C7157 * C144 - C7158 * C136 - C7157 * C145 + C154481 * C160 +
             C7159 * C600 - C7160 * C584 - C7159 * C601 + C154470 * C620 +
             C7161 * C602 - C7162 * C585 - C7161 * C603 + C154445 * C621) *
                C154164 * C2902 +
            (C7236 + C7237 + C7238) * C154164 * C2903 + C7252 * C154429) *
               C577 -
           ((C7862 + C7863 + C7864) * C154164 * C154429 +
            (C7865 + C7866 + C7867) * C154164 * C2903 +
            (C7161 * C2337 - C7162 * C2328 - C7161 * C2338 + C154445 * C2343 +
             C7159 * C602 - C7160 * C585 - C7159 * C603 + C154470 * C621 +
             C7157 * C600 - C7158 * C584 - C7157 * C601 + C154481 * C620) *
                C154164 * C2902) *
               C578 +
           ((C7157 * C602 - C7158 * C585 - C7157 * C603 + C154481 * C621 +
             C7159 * C2337 - C7160 * C2328 - C7159 * C2338 + C154470 * C2343 +
             C7161 * C7777 - C7162 * C7773 - C7161 * C7778 + C154445 * C7785) *
                C154164 * C2902 +
            (C7868 + C7869 + C7870) * C154164 * C2903 +
            (C7871 + C7872 + C7873) * C154164 * C154429) *
               C579) *
              C154066 * C341 +
          (((C7867 + C7866 + C7865) * C154164 * C2902 +
            (C7864 + C7863 + C7862) * C154164 * C2903 +
            (C7157 * C594 - C7158 * C581 - C7157 * C595 + C154481 * C617 +
             C7159 * C608 - C7160 * C588 - C7159 * C609 + C154470 * C624 +
             C7161 * C2331 - C7162 * C2325 - C7161 * C2332 + C154445 * C2340) *
                C154164 * C154429) *
               C578 -
           (C7253 * C154429 + (C7241 + C7240 + C7239) * C154164 * C2903 +
            (C7238 + C7237 + C7236) * C154164 * C2902) *
               C577 -
           ((C7161 * C7783 - C7162 * C7776 - C7161 * C7784 + C154445 * C7788 +
             C7159 * C2331 - C7160 * C2325 - C7159 * C2332 + C154470 * C2340 +
             C7157 * C608 - C7158 * C588 - C7157 * C609 + C154481 * C624) *
                C154164 * C154429 +
            (C7873 + C7872 + C7871) * C154164 * C2903 +
            (C7870 + C7869 + C7868) * C154164 * C2902) *
               C579) *
              C154066 * C154053)) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                C24270 +
            C3210 * C24271 + C3211 * C154442) *
               C154477 +
           (C24277 + C24278 + C24279) * C154458 + C24291 * C154429) *
              C154082 * C154066 * C130 -
          (C24292 * C154429 + (C24282 + C24281 + C24280) * C154458 +
           (C24279 + C24278 + C24277) * C154477) *
              C154082 * C154066 * C131 +
          (C24291 * C154477 + (C24285 + C24284 + C24283) * C154458 +
           (C24286 + C24287 + C24288) * C154429) *
              C154082 * C154066 * C132 -
          (((C134 * C377 - C135 * C354 - C134 * C378 + C154181 * C390) *
                C154442 +
            C830 * C24271 + C209 * C24270) *
               C154429 +
           (C24288 + C24287 + C24286) * C154458 + C24292 * C154477) *
              C154082 * C154066 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C24270 +
             C3210 * C24271 + C3211 * C154442) *
                C154477 +
            (C24277 + C24278 + C24279) * C154458 + C24291 * C154429) *
               C154082 * C338 -
           ((C24511 + C24512 + C24513) * C154429 +
            (C24514 + C24515 + C24516) * C154458 +
            (C3214 * C154442 + C3211 * C24271 + C3210 * C24270) * C154477) *
               C154082 * C339 +
           ((C3211 * C24270 + C3214 * C24271 + C4687 * C154442) * C154477 +
            (C24517 + C24518 + C24519) * C154458 +
            (C24520 + C24521 + C24522) * C154429) *
               C154082 * C340) *
              C341 +
          (((C24516 + C24515 + C24514) * C154477 +
            (C24513 + C24512 + C24511) * C154458 +
            (C441 * C24270 + C446 * C24271 + C3217 * C154442) * C154429) *
               C154082 * C339 -
           (C24292 * C154429 + (C24282 + C24281 + C24280) * C154458 +
            (C24279 + C24278 + C24277) * C154477) *
               C154082 * C338 -
           (((C134 * C3149 - C135 * C3142 - C134 * C3150 + C154181 * C3154) *
                 C154442 +
             C3217 * C24271 + C446 * C24270) *
                C154429 +
            (C24522 + C24521 + C24520) * C154458 +
            (C24519 + C24518 + C24517) * C154477) *
               C154082 * C340) *
              C154053)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C24270 +
             C3210 * C24271 + C3211 * C154442) *
                C154477 +
            (C24277 + C24278 + C24279) * C154458 + C24291 * C154429) *
               C577 -
           ((C24741 + C24742 + C24743) * C154429 +
            (C24744 + C24745 + C24746) * C154458 +
            (C4299 * C154442 + C4300 * C24271 +
             (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                 C24270) *
                C154477) *
               C578 +
           (((C134 * C602 - C135 * C585 - C134 * C603 + C154181 * C621) *
                 C24270 +
             C4930 * C24271 + C4931 * C154442) *
                C154477 +
            (C24747 + C24748 + C24749) * C154458 +
            (C24750 + C24751 + C24752) * C154429) *
               C579) *
              C154066 * C341 +
          (((C24746 + C24745 + C24744) * C154477 +
            (C24743 + C24742 + C24741) * C154458 +
            (C678 * C24270 + C1180 * C24271 + C3963 * C154442) * C154429) *
               C578 -
           (C24292 * C154429 + (C24282 + C24281 + C24280) * C154458 +
            (C24279 + C24278 + C24277) * C154477) *
               C577 -
           (((C134 * C3451 - C135 * C3444 - C134 * C3452 + C154181 * C3456) *
                 C154442 +
             C11901 * C24271 + C683 * C24270) *
                C154429 +
            (C24752 + C24751 + C24750) * C154458 +
            (C24749 + C24748 + C24747) * C154477) *
               C579) *
              C154066 * C154053)) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         (((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) * C28192 +
           C3210 * C28193 + C3211 * C28194 + C3214 * C28195 + C4687 * C28196) *
              C154011 * C154082 * C154066 * C130 -
          (C3215 * C28196 + C3213 * C28195 + C444 * C28194 + C443 * C28193 +
           C205 * C28192) *
              C154011 * C154082 * C154066 * C131 +
          (C206 * C28192 + C442 * C28193 + C445 * C28194 + C3212 * C28195 +
           C3216 * C28196) *
              C154011 * C154082 * C154066 * C132 -
          ((C134 * C3149 - C135 * C3142 - C134 * C3150 + C154181 * C3154) *
               C28196 +
           C3217 * C28195 + C446 * C28194 + C441 * C28193 + C207 * C28192) *
              C154011 * C154082 * C154066 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                C28192 +
            C3210 * C28193 + C3211 * C28194 + C3214 * C28195 + C4687 * C28196) *
               C154011 * C154082 * C338 -
           (C28341 * C28196 + C4687 * C28195 + C3214 * C28194 + C3211 * C28193 +
            C3210 * C28192) *
               C154011 * C154082 * C339 +
           (C3211 * C28192 + C3214 * C28193 + C4687 * C28194 + C28341 * C28195 +
            (C134 * C28322 - C135 * C28320 - C134 * C28323 + C154181 * C28326) *
                C28196) *
               C154011 * C154082 * C340) *
              C341 +
          ((C443 * C28192 + C444 * C28193 + C3213 * C28194 + C3215 * C28195 +
            C28342 * C28196) *
               C154011 * C154082 * C339 -
           (C3215 * C28196 + C3213 * C28195 + C444 * C28194 + C443 * C28193 +
            C205 * C28192) *
               C154011 * C154082 * C338 -
           ((C134 * C28324 - C135 * C28321 - C134 * C28325 + C154181 * C28327) *
                C28196 +
            C28342 * C28195 + C3215 * C28194 + C3213 * C28193 + C444 * C28192) *
               C154011 * C154082 * C340) *
              C154053)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                C28192 +
            C3210 * C28193 + C3211 * C28194 + C3214 * C28195 + C4687 * C28196) *
               C154011 * C577 -
           ((C134 * C5664 - C135 * C5659 - C134 * C5665 + C154181 * C5668) *
                C28196 +
            C5676 * C28195 + C4299 * C28194 + C4300 * C28193 +
            (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                C28192) *
               C154011 * C578 +
           ((C134 * C602 - C135 * C585 - C134 * C603 + C154181 * C621) *
                C28192 +
            C4930 * C28193 + C4931 * C28194 +
            (C134 * C4912 - C135 * C4907 - C134 * C4913 + C154181 * C4916) *
                C28195 +
            (C134 * C28466 - C135 * C28464 - C134 * C28467 + C154181 * C28470) *
                C28196) *
               C154011 * C579) *
              C154066 * C341 +
          ((C680 * C28192 + C1178 * C28193 + C3501 * C28194 + C4301 * C28195 +
            (C134 * C5662 - C135 * C5658 - C134 * C5663 + C154181 * C5667) *
                C28196) *
               C154011 * C578 -
           (C3215 * C28196 + C3213 * C28195 + C444 * C28194 + C443 * C28193 +
            C205 * C28192) *
               C154011 * C577 -
           ((C134 * C28468 - C135 * C28465 - C134 * C28469 + C154181 * C28471) *
                C28196 +
            (C134 * C4910 - C135 * C4906 - C134 * C4911 + C154181 * C4915) *
                C28195 +
            C3503 * C28194 + C3502 * C28193 + C681 * C28192) *
               C154011 * C579) *
              C154066 * C154053)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C7157 * C144 - C7158 * C136 - C7157 * C145 + C154481 * C160 +
            C7159 * C600 - C7160 * C584 - C7159 * C601 + C154470 * C620 +
            C7161 * C602 - C7162 * C585 - C7161 * C603 + C154445 * C621) *
               C24270 +
           (C7157 * C363 - C7158 * C347 - C7157 * C364 + C154481 * C383 +
            C7159 * C1135 - C7160 * C1129 - C7159 * C1136 + C154470 * C1147 +
            C7161 * C1554 - C7162 * C1545 - C7161 * C1555 + C154445 * C1560) *
               C24271 +
           (C7157 * C365 - C7158 * C348 - C7157 * C366 + C154481 * C384 +
            C7159 * C1985 - C7160 * C1976 - C7159 * C1986 + C154470 * C1991 +
            C7161 * C3445 - C7162 * C3441 - C7161 * C3446 + C154445 * C3453) *
               C154442) *
              C154011 * C154082 * C154066 * C130 -
          ((C7552 + C7551 + C7550) * C154442 +
           (C7547 + C7548 + C7549) * C24271 +
           (C7238 + C7237 + C7236) * C24270) *
              C154011 * C154082 * C154066 * C131 +
          (C7250 * C24270 + (C7546 + C7545 + C7544) * C24271 +
           (C7553 + C7554 + C7555) * C154442) *
              C154011 * C154082 * C154066 * C132 -
          ((C7161 * C3451 - C7162 * C3444 - C7161 * C3452 + C154445 * C3456 +
            C7159 * C1979 - C7160 * C1973 - C7159 * C1980 + C154470 * C1988 +
            C7157 * C371 - C7158 * C351 - C7157 * C372 + C154481 * C387) *
               C154442 +
           (C8115 + C8114 + C8113) * C24271 + C7251 * C24270) *
              C154011 * C154082 * C154066 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C7157 * C144 - C7158 * C136 - C7157 * C145 + C154481 * C160 +
             C7159 * C600 - C7160 * C584 - C7159 * C601 + C154470 * C620 +
             C7161 * C602 - C7162 * C585 - C7161 * C603 + C154445 * C621) *
                C24270 +
            (C30851 + C30852 + C30853) * C24271 + C30864 * C154442) *
               C154011 * C154082 * C338 -
           ((C30857 + C30858 + C30859) * C154442 +
            (C30856 + C30855 + C30854) * C24271 +
            (C30853 + C30852 + C30851) * C24270) *
               C154011 * C154082 * C339 +
           (C30864 * C24270 + (C30859 + C30858 + C30857) * C24271 +
            (C7157 * C3143 - C7158 * C3139 - C7157 * C3144 + C154481 * C3151 +
             C7159 * C5664 - C7160 * C5659 - C7159 * C5665 + C154470 * C5668 +
             C7161 * C28466 - C7162 * C28464 - C7161 * C28467 +
             C154445 * C28470) *
                C154442) *
               C154011 * C154082 * C340) *
              C341 +
          (((C7549 + C7548 + C7547) * C24270 +
            (C7550 + C7551 + C7552) * C24271 +
            (C30860 + C30861 + C30862) * C154442) *
               C154011 * C154082 * C339 -
           (C30838 * C154442 + (C7547 + C7548 + C7549) * C24271 +
            (C7238 + C7237 + C7236) * C24270) *
               C154011 * C154082 * C338 -
           ((C7161 * C28468 - C7162 * C28465 - C7161 * C28469 +
             C154445 * C28471 + C7159 * C5662 - C7160 * C5658 - C7159 * C5663 +
             C154470 * C5667 + C7157 * C3145 - C7158 * C3140 - C7157 * C3146 +
             C154481 * C3152) *
                C154442 +
            (C30862 + C30861 + C30860) * C24271 + C30838 * C24270) *
               C154011 * C154082 * C340) *
              C154053)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C7157 * C144 - C7158 * C136 - C7157 * C145 + C154481 * C160 +
             C7159 * C600 - C7160 * C584 - C7159 * C601 + C154470 * C620 +
             C7161 * C602 - C7162 * C585 - C7161 * C603 + C154445 * C621) *
                C24270 +
            (C30851 + C30852 + C30853) * C24271 + C30864 * C154442) *
               C154011 * C577 -
           ((C7161 * C6272 - C7162 * C6262 - C7161 * C6273 + C154445 * C6280 +
             C7159 * C3445 - C7160 * C3441 - C7159 * C3446 + C154470 * C3453 +
             C7157 * C1985 - C7158 * C1976 - C7157 * C1986 + C154481 * C1991) *
                C154442 +
            (C7161 * C6274 - C7162 * C6263 - C7161 * C6275 + C154445 * C6281 +
             C7159 * C1554 - C7160 * C1545 - C7159 * C1555 + C154470 * C1560 +
             C7157 * C1135 - C7158 * C1129 - C7157 * C1136 + C154481 * C1147) *
                C24271 +
            (C7161 * C2337 - C7162 * C2328 - C7161 * C2338 + C154445 * C2343 +
             C7159 * C602 - C7160 * C585 - C7159 * C603 + C154470 * C621 +
             C7157 * C600 - C7158 * C584 - C7157 * C601 + C154481 * C620) *
                C24270) *
               C154011 * C578 +
           ((C7157 * C602 - C7158 * C585 - C7157 * C603 + C154481 * C621 +
             C7159 * C2337 - C7160 * C2328 - C7159 * C2338 + C154470 * C2343 +
             C7161 * C7777 - C7162 * C7773 - C7161 * C7778 + C154445 * C7785) *
                C24270 +
            (C7157 * C1554 - C7158 * C1545 - C7157 * C1555 + C154481 * C1560 +
             C7159 * C6274 - C7160 * C6263 - C7159 * C6275 + C154470 * C6281 +
             C7161 * C9282 - C7162 * C9277 - C7161 * C9283 + C154445 * C9286) *
                C24271 +
            (C7157 * C3445 - C7158 * C3441 - C7157 * C3446 + C154481 * C3453 +
             C7159 * C6272 - C7160 * C6262 - C7159 * C6273 + C154470 * C6280 +
             C7161 * C31084 - C7162 * C31082 - C7161 * C31085 +
             C154445 * C31088) *
                C154442) *
               C154011 * C579) *
              C154066 * C341 +
          (((C7867 + C7866 + C7865) * C24270 +
            (C8688 + C8689 + C8690) * C24271 +
            (C7157 * C1983 - C7158 * C1975 - C7157 * C1984 + C154481 * C1990 +
             C7159 * C3447 - C7160 * C3442 - C7159 * C3448 + C154470 * C3454 +
             C7161 * C6268 - C7162 * C6260 - C7161 * C6269 + C154445 * C6278) *
                C154442) *
               C154011 * C578 -
           (C30838 * C154442 + (C7547 + C7548 + C7549) * C24271 +
            (C7238 + C7237 + C7236) * C24270) *
               C154011 * C577 -
           ((C7161 * C31086 - C7162 * C31083 - C7161 * C31087 +
             C154445 * C31089 + C7159 * C6268 - C7160 * C6260 - C7159 * C6269 +
             C154470 * C6278 + C7157 * C3447 - C7158 * C3442 - C7157 * C3448 +
             C154481 * C3454) *
                C154442 +
            (C7161 * C9280 - C7162 * C9276 - C7161 * C9281 + C154445 * C9285 +
             C7159 * C6270 - C7160 * C6261 - C7159 * C6271 + C154470 * C6279 +
             C7157 * C1552 - C7158 * C1544 - C7157 * C1553 + C154481 * C1559) *
                C24271 +
            (C7870 + C7869 + C7868) * C24270) *
               C154011 * C579) *
              C154066 * C154053)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C47141 * C144 - C47142 * C136 - C47141 * C145 + C47138 * C160 +
            C47143 * C600 - C47144 * C584 - C47143 * C601 + C47139 * C620 +
            C47145 * C602 - C47146 * C585 - C47145 * C603 + C154445 * C621) *
               C154164 * C154477 +
           (C47220 + C47221 + C47222) * C154164 * C154458 + C47236 * C154429) *
              C154082 * C154066 * C130 -
          (C47237 * C154429 + (C47225 + C47224 + C47223) * C154164 * C154458 +
           (C47222 + C47221 + C47220) * C154164 * C154477) *
              C154082 * C154066 * C131 +
          (C47236 * C154477 + (C47228 + C47227 + C47226) * C154164 * C154458 +
           (C47229 + C47230 + C47231) * C154164 * C154429) *
              C154082 * C154066 * C132 -
          ((C47145 * C614 - C47146 * C591 - C47145 * C615 + C154445 * C627 +
            C47143 * C612 - C47144 * C590 - C47143 * C613 + C47139 * C626 +
            C47141 * C154 - C47142 * C141 - C47141 * C155 + C47138 * C165) *
               C154164 * C154429 +
           (C47231 + C47230 + C47229) * C154164 * C154458 + C47237 * C154477) *
              C154082 * C154066 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C47141 * C144 - C47142 * C136 - C47141 * C145 + C47138 * C160 +
             C47143 * C600 - C47144 * C584 - C47143 * C601 + C47139 * C620 +
             C47145 * C602 - C47146 * C585 - C47145 * C603 + C154445 * C621) *
                C154164 * C154477 +
            (C47220 + C47221 + C47222) * C154164 * C154458 + C47236 * C154429) *
               C154082 * C338 -
           ((C47528 + C47529 + C47530) * C154164 * C154429 +
            (C47531 + C47532 + C47533) * C154164 * C154458 +
            (C47145 * C1554 - C47146 * C1545 - C47145 * C1555 +
             C154445 * C1560 + C47143 * C1135 - C47144 * C1129 -
             C47143 * C1136 + C47139 * C1147 + C47141 * C363 - C47142 * C347 -
             C47141 * C364 + C47138 * C383) *
                C154164 * C154477) *
               C154082 * C339 +
           ((C47141 * C365 - C47142 * C348 - C47141 * C366 + C47138 * C384 +
             C47143 * C1985 - C47144 * C1976 - C47143 * C1986 + C47139 * C1991 +
             C47145 * C3445 - C47146 * C3441 - C47145 * C3446 +
             C154445 * C3453) *
                C154164 * C154477 +
            (C47534 + C47535 + C47536) * C154164 * C154458 +
            (C47537 + C47538 + C47539) * C154164 * C154429) *
               C154082 * C340) *
              C341 +
          (((C47533 + C47532 + C47531) * C154164 * C154477 +
            (C47530 + C47529 + C47528) * C154164 * C154458 +
            (C47141 * C357 - C47142 * C344 - C47141 * C358 + C47138 * C380 +
             C47143 * C1141 - C47144 * C1132 - C47143 * C1142 + C47139 * C1150 +
             C47145 * C1548 - C47146 * C1542 - C47145 * C1549 +
             C154445 * C1557) *
                C154164 * C154429) *
               C154082 * C339 -
           (C47237 * C154429 + (C47225 + C47224 + C47223) * C154164 * C154458 +
            (C47222 + C47221 + C47220) * C154164 * C154477) *
               C154082 * C338 -
           ((C47145 * C3451 - C47146 * C3444 - C47145 * C3452 +
             C154445 * C3456 + C47143 * C1979 - C47144 * C1973 -
             C47143 * C1980 + C47139 * C1988 + C47141 * C371 - C47142 * C351 -
             C47141 * C372 + C47138 * C387) *
                C154164 * C154429 +
            (C47539 + C47538 + C47537) * C154164 * C154458 +
            (C47536 + C47535 + C47534) * C154164 * C154477) *
               C154082 * C340) *
              C154053)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C47141 * C144 - C47142 * C136 - C47141 * C145 + C47138 * C160 +
             C47143 * C600 - C47144 * C584 - C47143 * C601 + C47139 * C620 +
             C47145 * C602 - C47146 * C585 - C47145 * C603 + C154445 * C621) *
                C154164 * C154477 +
            (C47220 + C47221 + C47222) * C154164 * C154458 + C47236 * C154429) *
               C577 -
           ((C47830 + C47831 + C47832) * C154164 * C154429 +
            (C47833 + C47834 + C47835) * C154164 * C154458 +
            (C47145 * C2337 - C47146 * C2328 - C47145 * C2338 +
             C154445 * C2343 + C47143 * C602 - C47144 * C585 - C47143 * C603 +
             C47139 * C621 + C47141 * C600 - C47142 * C584 - C47141 * C601 +
             C47138 * C620) *
                C154164 * C154477) *
               C578 +
           ((C47141 * C602 - C47142 * C585 - C47141 * C603 + C47138 * C621 +
             C47143 * C2337 - C47144 * C2328 - C47143 * C2338 + C47139 * C2343 +
             C47145 * C7777 - C47146 * C7773 - C47145 * C7778 +
             C154445 * C7785) *
                C154164 * C154477 +
            (C47836 + C47837 + C47838) * C154164 * C154458 +
            (C47839 + C47840 + C47841) * C154164 * C154429) *
               C579) *
              C154066 * C341 +
          (((C47835 + C47834 + C47833) * C154164 * C154477 +
            (C47832 + C47831 + C47830) * C154164 * C154458 +
            (C47141 * C594 - C47142 * C581 - C47141 * C595 + C47138 * C617 +
             C47143 * C608 - C47144 * C588 - C47143 * C609 + C47139 * C624 +
             C47145 * C2331 - C47146 * C2325 - C47145 * C2332 +
             C154445 * C2340) *
                C154164 * C154429) *
               C578 -
           (C47237 * C154429 + (C47225 + C47224 + C47223) * C154164 * C154458 +
            (C47222 + C47221 + C47220) * C154164 * C154477) *
               C577 -
           ((C47145 * C7783 - C47146 * C7776 - C47145 * C7784 +
             C154445 * C7788 + C47143 * C2331 - C47144 * C2325 -
             C47143 * C2332 + C47139 * C2340 + C47141 * C608 - C47142 * C588 -
             C47141 * C609 + C47138 * C624) *
                C154164 * C154429 +
            (C47841 + C47840 + C47839) * C154164 * C154458 +
            (C47838 + C47837 + C47836) * C154164 * C154477) *
               C579) *
              C154066 * C154053)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C47141 * C144 - C47142 * C136 - C47141 * C145 + C47138 * C160 +
            C47143 * C600 - C47144 * C584 - C47143 * C601 + C47139 * C620 +
            C47145 * C602 - C47146 * C585 - C47145 * C603 + C154445 * C621) *
               C154480 +
           (C47141 * C363 - C47142 * C347 - C47141 * C364 + C47138 * C383 +
            C47143 * C1135 - C47144 * C1129 - C47143 * C1136 + C47139 * C1147 +
            C47145 * C1554 - C47146 * C1545 - C47145 * C1555 +
            C154445 * C1560) *
               C154468 +
           (C47141 * C365 - C47142 * C348 - C47141 * C366 + C47138 * C384 +
            C47143 * C1985 - C47144 * C1976 - C47143 * C1986 + C47139 * C1991 +
            C47145 * C3445 - C47146 * C3441 - C47145 * C3446 +
            C154445 * C3453) *
               C154442) *
              C154011 * C154082 * C154066 * C130 -
          ((C47536 + C47535 + C47534) * C154442 +
           (C47531 + C47532 + C47533) * C154468 +
           (C47222 + C47221 + C47220) * C154480) *
              C154011 * C154082 * C154066 * C131 +
          (C47234 * C154480 + (C47530 + C47529 + C47528) * C154468 +
           (C47537 + C47538 + C47539) * C154442) *
              C154011 * C154082 * C154066 * C132 -
          ((C47145 * C3451 - C47146 * C3444 - C47145 * C3452 + C154445 * C3456 +
            C47143 * C1979 - C47144 * C1973 - C47143 * C1980 + C47139 * C1988 +
            C47141 * C371 - C47142 * C351 - C47141 * C372 + C47138 * C387) *
               C154442 +
           (C48083 + C48082 + C48081) * C154468 + C47235 * C154480) *
              C154011 * C154082 * C154066 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C47141 * C144 - C47142 * C136 - C47141 * C145 + C47138 * C160 +
             C47143 * C600 - C47144 * C584 - C47143 * C601 + C47139 * C620 +
             C47145 * C602 - C47146 * C585 - C47145 * C603 + C154445 * C621) *
                C154480 +
            (C51712 + C51713 + C51714) * C154468 + C51725 * C154442) *
               C154011 * C154082 * C338 -
           ((C51718 + C51719 + C51720) * C154442 +
            (C51717 + C51716 + C51715) * C154468 +
            (C51714 + C51713 + C51712) * C154480) *
               C154011 * C154082 * C339 +
           (C51725 * C154480 + (C51720 + C51719 + C51718) * C154468 +
            (C47141 * C3143 - C47142 * C3139 - C47141 * C3144 + C47138 * C3151 +
             C47143 * C5664 - C47144 * C5659 - C47143 * C5665 + C47139 * C5668 +
             C47145 * C28466 - C47146 * C28464 - C47145 * C28467 +
             C154445 * C28470) *
                C154442) *
               C154011 * C154082 * C340) *
              C341 +
          (((C47533 + C47532 + C47531) * C154480 +
            (C47534 + C47535 + C47536) * C154468 +
            (C51721 + C51722 + C51723) * C154442) *
               C154011 * C154082 * C339 -
           (C51699 * C154442 + (C47531 + C47532 + C47533) * C154468 +
            (C47222 + C47221 + C47220) * C154480) *
               C154011 * C154082 * C338 -
           ((C47145 * C28468 - C47146 * C28465 - C47145 * C28469 +
             C154445 * C28471 + C47143 * C5662 - C47144 * C5658 -
             C47143 * C5663 + C47139 * C5667 + C47141 * C3145 - C47142 * C3140 -
             C47141 * C3146 + C47138 * C3152) *
                C154442 +
            (C51723 + C51722 + C51721) * C154468 + C51699 * C154480) *
               C154011 * C154082 * C340) *
              C154053)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C47141 * C144 - C47142 * C136 - C47141 * C145 + C47138 * C160 +
             C47143 * C600 - C47144 * C584 - C47143 * C601 + C47139 * C620 +
             C47145 * C602 - C47146 * C585 - C47145 * C603 + C154445 * C621) *
                C154480 +
            (C51712 + C51713 + C51714) * C154468 + C51725 * C154442) *
               C154011 * C577 -
           ((C47145 * C6272 - C47146 * C6262 - C47145 * C6273 +
             C154445 * C6280 + C47143 * C3445 - C47144 * C3441 -
             C47143 * C3446 + C47139 * C3453 + C47141 * C1985 - C47142 * C1976 -
             C47141 * C1986 + C47138 * C1991) *
                C154442 +
            (C47145 * C6274 - C47146 * C6263 - C47145 * C6275 +
             C154445 * C6281 + C47143 * C1554 - C47144 * C1545 -
             C47143 * C1555 + C47139 * C1560 + C47141 * C1135 - C47142 * C1129 -
             C47141 * C1136 + C47138 * C1147) *
                C154468 +
            (C47145 * C2337 - C47146 * C2328 - C47145 * C2338 +
             C154445 * C2343 + C47143 * C602 - C47144 * C585 - C47143 * C603 +
             C47139 * C621 + C47141 * C600 - C47142 * C584 - C47141 * C601 +
             C47138 * C620) *
                C154480) *
               C154011 * C578 +
           ((C47141 * C602 - C47142 * C585 - C47141 * C603 + C47138 * C621 +
             C47143 * C2337 - C47144 * C2328 - C47143 * C2338 + C47139 * C2343 +
             C47145 * C7777 - C47146 * C7773 - C47145 * C7778 +
             C154445 * C7785) *
                C154480 +
            (C47141 * C1554 - C47142 * C1545 - C47141 * C1555 + C47138 * C1560 +
             C47143 * C6274 - C47144 * C6263 - C47143 * C6275 + C47139 * C6281 +
             C47145 * C9282 - C47146 * C9277 - C47145 * C9283 +
             C154445 * C9286) *
                C154468 +
            (C47141 * C3445 - C47142 * C3441 - C47141 * C3446 + C47138 * C3453 +
             C47143 * C6272 - C47144 * C6262 - C47143 * C6273 + C47139 * C6280 +
             C47145 * C31084 - C47146 * C31082 - C47145 * C31085 +
             C154445 * C31088) *
                C154442) *
               C154011 * C579) *
              C154066 * C341 +
          (((C47835 + C47834 + C47833) * C154480 +
            (C48652 + C48653 + C48654) * C154468 +
            (C47141 * C1983 - C47142 * C1975 - C47141 * C1984 + C47138 * C1990 +
             C47143 * C3447 - C47144 * C3442 - C47143 * C3448 + C47139 * C3454 +
             C47145 * C6268 - C47146 * C6260 - C47145 * C6269 +
             C154445 * C6278) *
                C154442) *
               C154011 * C578 -
           (C51699 * C154442 + (C47531 + C47532 + C47533) * C154468 +
            (C47222 + C47221 + C47220) * C154480) *
               C154011 * C577 -
           ((C47145 * C31086 - C47146 * C31083 - C47145 * C31087 +
             C154445 * C31089 + C47143 * C6268 - C47144 * C6260 -
             C47143 * C6269 + C47139 * C6278 + C47141 * C3447 - C47142 * C3442 -
             C47141 * C3448 + C47138 * C3454) *
                C154442 +
            (C47145 * C9280 - C47146 * C9276 - C47145 * C9281 +
             C154445 * C9285 + C47143 * C6270 - C47144 * C6261 -
             C47143 * C6271 + C47139 * C6279 + C47141 * C1552 - C47142 * C1544 -
             C47141 * C1553 + C47138 * C1559) *
                C154468 +
            (C47838 + C47837 + C47836) * C154480) *
               C154011 * C579) *
              C154066 * C154053)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((C55523 * C144 - C55524 * C136 - C55523 * C145 + C55518 * C160 +
           C55525 * C600 - C55526 * C584 - C55525 * C601 + C55519 * C620 +
           C55527 * C602 - C55528 * C585 - C55527 * C603 + C55520 * C621 +
           C55529 * C2337 - C55530 * C2328 - C55529 * C2338 + C55521 * C2343 +
           C55531 * C7777 - C55532 * C7773 - C55531 * C7778 + C55522 * C7785) *
              C154164 * C154011 * C154082 * C154066 * C130 -
          (C55531 * C7779 - C55532 * C7774 - C55531 * C7780 + C55522 * C7786 +
           C55529 * C2335 - C55530 * C2327 - C55529 * C2336 + C55521 * C2342 +
           C55527 * C604 - C55528 * C586 - C55527 * C605 + C55520 * C622 +
           C55525 * C598 - C55526 * C583 - C55525 * C599 + C55519 * C619 +
           C55523 * C146 - C55524 * C137 - C55523 * C147 + C55518 * C161) *
              C154164 * C154011 * C154082 * C154066 * C131 +
          (C55523 * C148 - C55524 * C138 - C55523 * C149 + C55518 * C162 +
           C55525 * C596 - C55526 * C582 - C55525 * C597 + C55519 * C618 +
           C55527 * C606 - C55528 * C587 - C55527 * C607 + C55520 * C623 +
           C55529 * C2333 - C55530 * C2326 - C55529 * C2334 + C55521 * C2341 +
           C55531 * C7781 - C55532 * C7775 - C55531 * C7782 + C55522 * C7787) *
              C154164 * C154011 * C154082 * C154066 * C132 -
          (C55531 * C7783 - C55532 * C7776 - C55531 * C7784 + C55522 * C7788 +
           C55529 * C2331 - C55530 * C2325 - C55529 * C2332 + C55521 * C2340 +
           C55527 * C608 - C55528 * C588 - C55527 * C609 + C55520 * C624 +
           C55525 * C594 - C55526 * C581 - C55525 * C595 + C55519 * C617 +
           C55523 * C150 - C55524 * C139 - C55523 * C151 + C55518 * C163) *
              C154164 * C154011 * C154082 * C154066 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C55523 * C144 - C55524 * C136 - C55523 * C145 + C55518 * C160 +
            C55525 * C600 - C55526 * C584 - C55525 * C601 + C55519 * C620 +
            C55527 * C602 - C55528 * C585 - C55527 * C603 + C55520 * C621 +
            C55529 * C2337 - C55530 * C2328 - C55529 * C2338 + C55521 * C2343 +
            C55531 * C7777 - C55532 * C7773 - C55531 * C7778 + C55522 * C7785) *
               C154164 * C154011 * C154082 * C338 -
           (C55531 * C9282 - C55532 * C9277 - C55531 * C9283 + C55522 * C9286 +
            C55529 * C6274 - C55530 * C6263 - C55529 * C6275 + C55521 * C6281 +
            C55527 * C1554 - C55528 * C1545 - C55527 * C1555 + C55520 * C1560 +
            C55525 * C1135 - C55526 * C1129 - C55525 * C1136 + C55519 * C1147 +
            C55523 * C363 - C55524 * C347 - C55523 * C364 + C55518 * C383) *
               C154164 * C154011 * C154082 * C339 +
           (C55523 * C365 - C55524 * C348 - C55523 * C366 + C55518 * C384 +
            C55525 * C1985 - C55526 * C1976 - C55525 * C1986 + C55519 * C1991 +
            C55527 * C3445 - C55528 * C3441 - C55527 * C3446 + C55520 * C3453 +
            C55529 * C6272 - C55530 * C6262 - C55529 * C6273 + C55521 * C6280 +
            C55531 * C31084 - C55532 * C31082 - C55531 * C31085 +
            C55522 * C31088) *
               C154164 * C154011 * C154082 * C340) *
              C341 +
          ((C55523 * C361 - C55524 * C346 - C55523 * C362 + C55518 * C382 +
            C55525 * C1137 - C55526 * C1130 - C55525 * C1138 + C55519 * C1148 +
            C55527 * C1552 - C55528 * C1544 - C55527 * C1553 + C55520 * C1559 +
            C55529 * C6270 - C55530 * C6261 - C55529 * C6271 + C55521 * C6279 +
            C55531 * C9280 - C55532 * C9276 - C55531 * C9281 + C55522 * C9285) *
               C154164 * C154011 * C154082 * C339 -
           (C55531 * C7779 - C55532 * C7774 - C55531 * C7780 + C55522 * C7786 +
            C55529 * C2335 - C55530 * C2327 - C55529 * C2336 + C55521 * C2342 +
            C55527 * C604 - C55528 * C586 - C55527 * C605 + C55520 * C622 +
            C55525 * C598 - C55526 * C583 - C55525 * C599 + C55519 * C619 +
            C55523 * C146 - C55524 * C137 - C55523 * C147 + C55518 * C161) *
               C154164 * C154011 * C154082 * C338 -
           (C55531 * C31086 - C55532 * C31083 - C55531 * C31087 +
            C55522 * C31089 + C55529 * C6268 - C55530 * C6260 - C55529 * C6269 +
            C55521 * C6278 + C55527 * C3447 - C55528 * C3442 - C55527 * C3448 +
            C55520 * C3454 + C55525 * C1983 - C55526 * C1975 - C55525 * C1984 +
            C55519 * C1990 + C55523 * C367 - C55524 * C349 - C55523 * C368 +
            C55518 * C385) *
               C154164 * C154011 * C154082 * C340) *
              C154053)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C55523 * C144 - C55524 * C136 - C55523 * C145 + C55518 * C160 +
            C55525 * C600 - C55526 * C584 - C55525 * C601 + C55519 * C620 +
            C55527 * C602 - C55528 * C585 - C55527 * C603 + C55520 * C621 +
            C55529 * C2337 - C55530 * C2328 - C55529 * C2338 + C55521 * C2343 +
            C55531 * C7777 - C55532 * C7773 - C55531 * C7778 + C55522 * C7785) *
               C154164 * C154011 * C577 -
           (C55531 * C10602 - C55532 * C10597 - C55531 * C10603 +
            C55522 * C10606 + C55529 * C7777 - C55530 * C7773 - C55529 * C7778 +
            C55521 * C7785 + C55527 * C2337 - C55528 * C2328 - C55527 * C2338 +
            C55520 * C2343 + C55525 * C602 - C55526 * C585 - C55525 * C603 +
            C55519 * C621 + C55523 * C600 - C55524 * C584 - C55523 * C601 +
            C55518 * C620) *
               C154164 * C154011 * C578 +
           (C55523 * C602 - C55524 * C585 - C55523 * C603 + C55518 * C621 +
            C55525 * C2337 - C55526 * C2328 - C55525 * C2338 + C55519 * C2343 +
            C55527 * C7777 - C55528 * C7773 - C55527 * C7778 + C55520 * C7785 +
            C55529 * C10602 - C55530 * C10597 - C55529 * C10603 +
            C55521 * C10606 + C55531 * C55779 - C55532 * C55777 -
            C55531 * C55780 + C55522 * C55783) *
               C154164 * C154011 * C579) *
              C154066 * C341 +
          ((C55523 * C598 - C55524 * C583 - C55523 * C599 + C55518 * C619 +
            C55525 * C604 - C55526 * C586 - C55525 * C605 + C55519 * C622 +
            C55527 * C2335 - C55528 * C2327 - C55527 * C2336 + C55520 * C2342 +
            C55529 * C7779 - C55530 * C7774 - C55529 * C7780 + C55521 * C7786 +
            C55531 * C10600 - C55532 * C10596 - C55531 * C10601 +
            C55522 * C10605) *
               C154164 * C154011 * C578 -
           (C55531 * C7779 - C55532 * C7774 - C55531 * C7780 + C55522 * C7786 +
            C55529 * C2335 - C55530 * C2327 - C55529 * C2336 + C55521 * C2342 +
            C55527 * C604 - C55528 * C586 - C55527 * C605 + C55520 * C622 +
            C55525 * C598 - C55526 * C583 - C55525 * C599 + C55519 * C619 +
            C55523 * C146 - C55524 * C137 - C55523 * C147 + C55518 * C161) *
               C154164 * C154011 * C577 -
           (C55531 * C55781 - C55532 * C55778 - C55531 * C55782 +
            C55522 * C55784 + C55529 * C10600 - C55530 * C10596 -
            C55529 * C10601 + C55521 * C10605 + C55527 * C7779 -
            C55528 * C7774 - C55527 * C7780 + C55520 * C7786 + C55525 * C2335 -
            C55526 * C2327 - C55525 * C2336 + C55519 * C2342 + C55523 * C604 -
            C55524 * C586 - C55523 * C605 + C55518 * C622) *
               C154164 * C154011 * C579) *
              C154066 * C154053)) /
            (p * q * std::sqrt(p + q));
    d2ee[183] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                    C154164 * C123 +
                C211 * C124 + C212 * C125 + C213 * C126 + C214 * C127) *
                   C154393 -
               (C685 * C127 + C686 * C126 + C687 * C125 + C688 * C124 +
                (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                    C154164 * C123) *
                   C154146) *
                  C154066 * C154461 +
              ((C688 * C123 + C687 * C124 + C686 * C125 + C685 * C126 +
                C967 * C127) *
                   C154146 -
               (C215 * C127 + C214 * C126 + C213 * C125 + C212 * C124 +
                C211 * C123) *
                   C154393) *
                  C154066 * C154462 +
              ((C212 * C123 + C213 * C124 + C214 * C125 + C215 * C126 +
                C216 * C127) *
                   C154393 -
               ((C134 * C956 - C135 * C955 - C134 * C957 + C154181 * C958) *
                    C154164 * C127 +
                C967 * C126 + C685 * C125 + C686 * C124 + C687 * C123) *
                   C154146) *
                  C154066 * C818) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                     C154480 +
                 C3210 * C154468 + C3211 * C154442) *
                    C2902 +
                (C2906 + C2907 + C2908) * C2903 + C2920 * C154429) *
                   C154393 -
               (C3960 * C154429 + (C3507 + C3468 + C3469) * C2903 +
                ((C134 * C1985 - C135 * C1976 - C134 * C1986 +
                  C154181 * C1991) *
                     C154442 +
                 (C134 * C1135 - C135 * C1129 - C134 * C1136 +
                  C154181 * C1147) *
                     C154468 +
                 (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                     C154480) *
                    C2902) *
                   C154146) *
                  C154066 * C154461 +
              (((C3469 + C3468 + C3507) * C2902 +
                (C3463 + C3462 + C3506) * C2903 +
                (C3954 + C3955 + C3964) * C154429) *
                   C154146 -
               (C2921 * C154429 + (C2911 + C2910 + C2909) * C2903 +
                (C2908 + C2907 + C2906) * C2902) *
                   C154393) *
                  C154066 * C154462 +
              ((C2920 * C2902 + (C2914 + C2913 + C2912) * C2903 +
                (C2915 + C2916 + C2917) * C154429) *
                   C154393 -
               (((C134 * C1977 - C135 * C1972 - C134 * C1978 +
                  C154181 * C1987) *
                     C154442 +
                 C1181 * C154468 + C677 * C154480) *
                    C154429 +
                (C3964 + C3955 + C3954) * C2903 + C3960 * C2902) *
                   C154146) *
                  C154066 * C818)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C7157 * C144 - C7158 * C136 - C7157 * C145 + C154481 * C160 +
             C7159 * C600 - C7160 * C584 - C7159 * C601 + C154470 * C620 +
             C7161 * C602 - C7162 * C585 - C7161 * C603 + C154445 * C621) *
                C154164 * C2902 +
            (C7236 + C7237 + C7238) * C154164 * C2903 + C7252 * C154429) *
               C154393 -
           (C8351 * C154429 + (C7865 + C7866 + C7867) * C154164 * C2903 +
            (C7161 * C2337 - C7162 * C2328 - C7161 * C2338 + C154445 * C2343 +
             C7159 * C602 - C7160 * C585 - C7159 * C603 + C154470 * C621 +
             C7157 * C600 - C7158 * C584 - C7157 * C601 + C154481 * C620) *
                C154164 * C2902) *
               C154146) *
              C154066 * C154461 +
          (((C7867 + C7866 + C7865) * C154164 * C2902 +
            (C7864 + C7863 + C7862) * C154164 * C2903 +
            (C8355 + C8356 + C8357) * C154164 * C154429) *
               C154146 -
           (C7253 * C154429 + (C7241 + C7240 + C7239) * C154164 * C2903 +
            (C7238 + C7237 + C7236) * C154164 * C2902) *
               C154393) *
              C154066 * C154462 +
          ((C7252 * C2902 + (C7244 + C7243 + C7242) * C154164 * C2903 +
            (C7245 + C7246 + C7247) * C154164 * C154429) *
               C154393 -
           ((C7161 * C2329 - C7162 * C2324 - C7161 * C2330 + C154445 * C2339 +
             C7159 * C610 - C7160 * C589 - C7159 * C611 + C154470 * C625 +
             C7157 * C592 - C7158 * C580 - C7157 * C593 + C154481 * C616) *
                C154164 * C154429 +
            (C8357 + C8356 + C8355) * C154164 * C2903 + C8351 * C2902) *
               C154146) *
              C154066 * C818)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C24270 +
             C3210 * C24271 + C3211 * C154442) *
                C154477 +
            (C24277 + C24278 + C24279) * C154458 + C24291 * C154429) *
               C154393 -
           (C25198 * C154429 + (C24744 + C24745 + C24746) * C154458 +
            (C4299 * C154442 + C4300 * C24271 +
             (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                 C24270) *
                C154477) *
               C154146) *
              C154066 * C154461 +
          (((C24746 + C24745 + C24744) * C154477 +
            (C24743 + C24742 + C24741) * C154458 +
            (C25195 + C25196 + C25197) * C154429) *
               C154146 -
           (C24292 * C154429 + (C24282 + C24281 + C24280) * C154458 +
            (C24279 + C24278 + C24277) * C154477) *
               C154393) *
              C154066 * C154462 +
          ((C24291 * C154477 + (C24285 + C24284 + C24283) * C154458 +
            (C24286 + C24287 + C24288) * C154429) *
               C154393 -
           (((C134 * C1977 - C135 * C1972 - C134 * C1978 + C154181 * C1987) *
                 C154442 +
             C1181 * C24271 + C677 * C24270) *
                C154429 +
            (C25197 + C25196 + C25195) * C154458 + C25198 * C154477) *
               C154146) *
              C154066 * C818)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                C28192 +
            C3210 * C28193 + C3211 * C28194 + C3214 * C28195 + C4687 * C28196) *
               C154011 * C154393 -
           ((C134 * C5664 - C135 * C5659 - C134 * C5665 + C154181 * C5668) *
                C28196 +
            C5676 * C28195 + C4299 * C28194 + C4300 * C28193 +
            (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                C28192) *
               C154011 * C154146) *
              C154066 * C154461 +
          ((C680 * C28192 + C1178 * C28193 + C3501 * C28194 + C4301 * C28195 +
            (C134 * C5662 - C135 * C5658 - C134 * C5663 + C154181 * C5667) *
                C28196) *
               C154011 * C154146 -
           (C3215 * C28196 + C3213 * C28195 + C444 * C28194 + C443 * C28193 +
            C205 * C28192) *
               C154011 * C154393) *
              C154066 * C154462 +
          ((C206 * C28192 + C442 * C28193 + C445 * C28194 + C3212 * C28195 +
            C3216 * C28196) *
               C154011 * C154393 -
           ((C134 * C5660 - C135 * C5657 - C134 * C5661 + C154181 * C5666) *
                C28196 +
            C4302 * C28195 + C3500 * C28194 + C1179 * C28193 + C679 * C28192) *
               C154011 * C154146) *
              C154066 * C818)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C7157 * C144 - C7158 * C136 - C7157 * C145 + C154481 * C160 +
             C7159 * C600 - C7160 * C584 - C7159 * C601 + C154470 * C620 +
             C7161 * C602 - C7162 * C585 - C7161 * C603 + C154445 * C621) *
                C24270 +
            (C30851 + C30852 + C30853) * C24271 + C30864 * C154442) *
               C154011 * C154393 -
           ((C7161 * C6272 - C7162 * C6262 - C7161 * C6273 + C154445 * C6280 +
             C7159 * C3445 - C7160 * C3441 - C7159 * C3446 + C154470 * C3453 +
             C7157 * C1985 - C7158 * C1976 - C7157 * C1986 + C154481 * C1991) *
                C154442 +
            (C7161 * C6274 - C7162 * C6263 - C7161 * C6275 + C154445 * C6281 +
             C7159 * C1554 - C7160 * C1545 - C7159 * C1555 + C154470 * C1560 +
             C7157 * C1135 - C7158 * C1129 - C7157 * C1136 + C154481 * C1147) *
                C24271 +
            (C7161 * C2337 - C7162 * C2328 - C7161 * C2338 + C154445 * C2343 +
             C7159 * C602 - C7160 * C585 - C7159 * C603 + C154470 * C621 +
             C7157 * C600 - C7158 * C584 - C7157 * C601 + C154481 * C620) *
                C24270) *
               C154011 * C154146) *
              C154066 * C154461 +
          (((C7867 + C7866 + C7865) * C24270 +
            (C8688 + C8689 + C8690) * C24271 +
            (C7157 * C1983 - C7158 * C1975 - C7157 * C1984 + C154481 * C1990 +
             C7159 * C3447 - C7160 * C3442 - C7159 * C3448 + C154470 * C3454 +
             C7161 * C6268 - C7162 * C6260 - C7161 * C6269 + C154445 * C6278) *
                C154442) *
               C154011 * C154146 -
           (C30838 * C154442 + (C7547 + C7548 + C7549) * C24271 +
            (C7238 + C7237 + C7236) * C24270) *
               C154011 * C154393) *
              C154066 * C154462 +
          ((C7250 * C24270 + (C7546 + C7545 + C7544) * C24271 +
            (C7553 + C7554 + C7555) * C154442) *
               C154011 * C154393 -
           ((C7161 * C6264 - C7162 * C6258 - C7161 * C6265 + C154445 * C6276 +
             C7159 * C3449 - C7160 * C3443 - C7159 * C3450 + C154470 * C3455 +
             C7157 * C1981 - C7158 * C1974 - C7157 * C1982 + C154481 * C1989) *
                C154442 +
            (C8693 + C8692 + C8691) * C24271 + C8347 * C24270) *
               C154011 * C154146) *
              C154066 * C818)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C47141 * C144 - C47142 * C136 - C47141 * C145 + C47138 * C160 +
             C47143 * C600 - C47144 * C584 - C47143 * C601 + C47139 * C620 +
             C47145 * C602 - C47146 * C585 - C47145 * C603 + C154445 * C621) *
                C154164 * C154477 +
            (C47220 + C47221 + C47222) * C154164 * C154458 + C47236 * C154429) *
               C154393 -
           (C48319 * C154429 + (C47833 + C47834 + C47835) * C154164 * C154458 +
            (C47145 * C2337 - C47146 * C2328 - C47145 * C2338 +
             C154445 * C2343 + C47143 * C602 - C47144 * C585 - C47143 * C603 +
             C47139 * C621 + C47141 * C600 - C47142 * C584 - C47141 * C601 +
             C47138 * C620) *
                C154164 * C154477) *
               C154146) *
              C154066 * C154461 +
          (((C47835 + C47834 + C47833) * C154164 * C154477 +
            (C47832 + C47831 + C47830) * C154164 * C154458 +
            (C48323 + C48324 + C48325) * C154164 * C154429) *
               C154146 -
           (C47237 * C154429 + (C47225 + C47224 + C47223) * C154164 * C154458 +
            (C47222 + C47221 + C47220) * C154164 * C154477) *
               C154393) *
              C154066 * C154462 +
          ((C47236 * C154477 + (C47228 + C47227 + C47226) * C154164 * C154458 +
            (C47229 + C47230 + C47231) * C154164 * C154429) *
               C154393 -
           ((C47145 * C2329 - C47146 * C2324 - C47145 * C2330 +
             C154445 * C2339 + C47143 * C610 - C47144 * C589 - C47143 * C611 +
             C47139 * C625 + C47141 * C592 - C47142 * C580 - C47141 * C593 +
             C47138 * C616) *
                C154164 * C154429 +
            (C48325 + C48324 + C48323) * C154164 * C154458 + C48319 * C154477) *
               C154146) *
              C154066 * C818)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C47141 * C144 - C47142 * C136 - C47141 * C145 + C47138 * C160 +
             C47143 * C600 - C47144 * C584 - C47143 * C601 + C47139 * C620 +
             C47145 * C602 - C47146 * C585 - C47145 * C603 + C154445 * C621) *
                C154480 +
            (C51712 + C51713 + C51714) * C154468 + C51725 * C154442) *
               C154011 * C154393 -
           ((C47145 * C6272 - C47146 * C6262 - C47145 * C6273 +
             C154445 * C6280 + C47143 * C3445 - C47144 * C3441 -
             C47143 * C3446 + C47139 * C3453 + C47141 * C1985 - C47142 * C1976 -
             C47141 * C1986 + C47138 * C1991) *
                C154442 +
            (C47145 * C6274 - C47146 * C6263 - C47145 * C6275 +
             C154445 * C6281 + C47143 * C1554 - C47144 * C1545 -
             C47143 * C1555 + C47139 * C1560 + C47141 * C1135 - C47142 * C1129 -
             C47141 * C1136 + C47138 * C1147) *
                C154468 +
            (C47145 * C2337 - C47146 * C2328 - C47145 * C2338 +
             C154445 * C2343 + C47143 * C602 - C47144 * C585 - C47143 * C603 +
             C47139 * C621 + C47141 * C600 - C47142 * C584 - C47141 * C601 +
             C47138 * C620) *
                C154480) *
               C154011 * C154146) *
              C154066 * C154461 +
          (((C47835 + C47834 + C47833) * C154480 +
            (C48652 + C48653 + C48654) * C154468 +
            (C47141 * C1983 - C47142 * C1975 - C47141 * C1984 + C47138 * C1990 +
             C47143 * C3447 - C47144 * C3442 - C47143 * C3448 + C47139 * C3454 +
             C47145 * C6268 - C47146 * C6260 - C47145 * C6269 +
             C154445 * C6278) *
                C154442) *
               C154011 * C154146 -
           (C51699 * C154442 + (C47531 + C47532 + C47533) * C154468 +
            (C47222 + C47221 + C47220) * C154480) *
               C154011 * C154393) *
              C154066 * C154462 +
          ((C47234 * C154480 + (C47530 + C47529 + C47528) * C154468 +
            (C47537 + C47538 + C47539) * C154442) *
               C154011 * C154393 -
           ((C47145 * C6264 - C47146 * C6258 - C47145 * C6265 +
             C154445 * C6276 + C47143 * C3449 - C47144 * C3443 -
             C47143 * C3450 + C47139 * C3455 + C47141 * C1981 - C47142 * C1974 -
             C47141 * C1982 + C47138 * C1989) *
                C154442 +
            (C48657 + C48656 + C48655) * C154468 + C48315 * C154480) *
               C154011 * C154146) *
              C154066 * C818)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C55523 * C144 - C55524 * C136 - C55523 * C145 + C55518 * C160 +
            C55525 * C600 - C55526 * C584 - C55525 * C601 + C55519 * C620 +
            C55527 * C602 - C55528 * C585 - C55527 * C603 + C55520 * C621 +
            C55529 * C2337 - C55530 * C2328 - C55529 * C2338 + C55521 * C2343 +
            C55531 * C7777 - C55532 * C7773 - C55531 * C7778 + C55522 * C7785) *
               C154164 * C154011 * C154393 -
           (C55531 * C10602 - C55532 * C10597 - C55531 * C10603 +
            C55522 * C10606 + C55529 * C7777 - C55530 * C7773 - C55529 * C7778 +
            C55521 * C7785 + C55527 * C2337 - C55528 * C2328 - C55527 * C2338 +
            C55520 * C2343 + C55525 * C602 - C55526 * C585 - C55525 * C603 +
            C55519 * C621 + C55523 * C600 - C55524 * C584 - C55523 * C601 +
            C55518 * C620) *
               C154164 * C154011 * C154146) *
              C154066 * C154461 +
          ((C55523 * C598 - C55524 * C583 - C55523 * C599 + C55518 * C619 +
            C55525 * C604 - C55526 * C586 - C55525 * C605 + C55519 * C622 +
            C55527 * C2335 - C55528 * C2327 - C55527 * C2336 + C55520 * C2342 +
            C55529 * C7779 - C55530 * C7774 - C55529 * C7780 + C55521 * C7786 +
            C55531 * C10600 - C55532 * C10596 - C55531 * C10601 +
            C55522 * C10605) *
               C154164 * C154011 * C154146 -
           (C55531 * C7779 - C55532 * C7774 - C55531 * C7780 + C55522 * C7786 +
            C55529 * C2335 - C55530 * C2327 - C55529 * C2336 + C55521 * C2342 +
            C55527 * C604 - C55528 * C586 - C55527 * C605 + C55520 * C622 +
            C55525 * C598 - C55526 * C583 - C55525 * C599 + C55519 * C619 +
            C55523 * C146 - C55524 * C137 - C55523 * C147 + C55518 * C161) *
               C154164 * C154011 * C154393) *
              C154066 * C154462 +
          ((C55523 * C148 - C55524 * C138 - C55523 * C149 + C55518 * C162 +
            C55525 * C596 - C55526 * C582 - C55525 * C597 + C55519 * C618 +
            C55527 * C606 - C55528 * C587 - C55527 * C607 + C55520 * C623 +
            C55529 * C2333 - C55530 * C2326 - C55529 * C2334 + C55521 * C2341 +
            C55531 * C7781 - C55532 * C7775 - C55531 * C7782 + C55522 * C7787) *
               C154164 * C154011 * C154393 -
           (C55531 * C10598 - C55532 * C10595 - C55531 * C10599 +
            C55522 * C10604 + C55529 * C7781 - C55530 * C7775 - C55529 * C7782 +
            C55521 * C7787 + C55527 * C2333 - C55528 * C2326 - C55527 * C2334 +
            C55520 * C2341 + C55525 * C606 - C55526 * C587 - C55525 * C607 +
            C55519 * C623 + C55523 * C596 - C55524 * C582 - C55523 * C597 +
            C55518 * C618) *
               C154164 * C154011 * C154146) *
              C154066 * C818)) /
            (p * q * std::sqrt(p + q));
    d2ee[184] +=
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
               C154164 * C123 +
           C211 * C124 + C212 * C125 + C213 * C126 + C214 * C127) *
              C154082 * C154066 * C130 -
          (C215 * C127 + C214 * C126 + C213 * C125 + C212 * C124 +
           C211 * C123) *
              C154082 * C154066 * C131 +
          (C212 * C123 + C213 * C124 + C214 * C125 + C215 * C126 +
           C216 * C127) *
              C154082 * C154066 * C132 -
          ((C134 * C158 - C135 * C143 - C134 * C159 + C154181 * C167) *
               C154164 * C127 +
           C216 * C126 + C215 * C125 + C214 * C124 + C213 * C123) *
              C154082 * C154066 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                C154164 * C123 +
            C211 * C124 + C212 * C125 + C213 * C126 + C214 * C127) *
               C154082 * C338 -
           (C448 * C127 + C449 * C126 + C450 * C125 + C451 * C124 +
            (C134 * C363 - C135 * C347 - C134 * C364 + C154181 * C383) *
                C154164 * C123) *
               C154082 * C339 +
           ((C134 * C365 - C135 * C348 - C134 * C366 + C154181 * C384) *
                C154164 * C123 +
            C452 * C124 + C453 * C125 + C454 * C126 + C455 * C127) *
               C154082 * C340) *
              C341 +
          ((C451 * C123 + C450 * C124 + C449 * C125 + C448 * C126 +
            (C134 * C375 - C135 * C353 - C134 * C376 + C154181 * C389) *
                C154164 * C127) *
               C154082 * C339 -
           (C215 * C127 + C214 * C126 + C213 * C125 + C212 * C124 +
            C211 * C123) *
               C154082 * C338 -
           ((C134 * C377 - C135 * C354 - C134 * C378 + C154181 * C390) *
                C154164 * C127 +
            C455 * C126 + C454 * C125 + C453 * C124 + C452 * C123) *
               C154082 * C340) *
              C154053)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                C154480 +
            (C134 * C363 - C135 * C347 - C134 * C364 + C154181 * C383) *
                C154468 +
            (C134 * C365 - C135 * C348 - C134 * C366 + C154181 * C384) *
                C154442) *
               C2902 +
           (C2906 + C2907 + C2908) * C2903 + C2920 * C154429) *
              C154082 * C154066 * C130 -
          (C2921 * C154429 + (C2911 + C2910 + C2909) * C2903 +
           (C2908 + C2907 + C2906) * C2902) *
              C154082 * C154066 * C131 +
          (C2920 * C2902 + (C2914 + C2913 + C2912) * C2903 +
           (C2915 + C2916 + C2917) * C154429) *
              C154082 * C154066 * C132 -
          (((C134 * C377 - C135 * C354 - C134 * C378 + C154181 * C390) *
                C154442 +
            C830 * C154468 + C209 * C154480) *
               C154429 +
           (C2917 + C2916 + C2915) * C2903 + C2921 * C2902) *
              C154082 * C154066 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C154480 +
             C3210 * C154468 + C3211 * C154442) *
                C2902 +
            (C2906 + C2907 + C2908) * C2903 + C2920 * C154429) *
               C154082 * C338 -
           ((C3218 + C3168 + C3169) * C154429 +
            (C3219 + C3174 + C3175) * C2903 +
            (C3214 * C154442 + C3211 * C154468 + C3210 * C154480) * C2902) *
               C154082 * C339 +
           ((C3211 * C154480 + C3214 * C154468 +
             (C134 * C3143 - C135 * C3139 - C134 * C3144 + C154181 * C3151) *
                 C154442) *
                C2902 +
            (C3180 + C3220 + C3221) * C2903 +
            (C3185 + C3222 + C3223) * C154429) *
               C154082 * C340) *
              C341 +
          (((C3175 + C3174 + C3219) * C2902 + (C3169 + C3168 + C3218) * C2903 +
            (C441 * C154480 + C446 * C154468 + C3217 * C154442) * C154429) *
               C154082 * C339 -
           (C2921 * C154429 + (C2911 + C2910 + C2909) * C2903 +
            (C2908 + C2907 + C2906) * C2902) *
               C154082 * C338 -
           (((C134 * C3149 - C135 * C3142 - C134 * C3150 + C154181 * C3154) *
                 C154442 +
             C3217 * C154468 + C446 * C154480) *
                C154429 +
            (C3223 + C3222 + C3185) * C2903 + (C3221 + C3220 + C3180) * C2902) *
               C154082 * C340) *
              C154053)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C7157 * C144 - C7158 * C136 - C7157 * C145 + C154481 * C160 +
            C7159 * C600 - C7160 * C584 - C7159 * C601 + C154470 * C620 +
            C7161 * C602 - C7162 * C585 - C7161 * C603 + C154445 * C621) *
               C154164 * C2902 +
           (C7236 + C7237 + C7238) * C154164 * C2903 + C7252 * C154429) *
              C154082 * C154066 * C130 -
          (C7253 * C154429 + (C7241 + C7240 + C7239) * C154164 * C2903 +
           (C7238 + C7237 + C7236) * C154164 * C2902) *
              C154082 * C154066 * C131 +
          (C7252 * C2902 + (C7244 + C7243 + C7242) * C154164 * C2903 +
           (C7245 + C7246 + C7247) * C154164 * C154429) *
              C154082 * C154066 * C132 -
          ((C7161 * C614 - C7162 * C591 - C7161 * C615 + C154445 * C627 +
            C7159 * C612 - C7160 * C590 - C7159 * C613 + C154470 * C626 +
            C7157 * C154 - C7158 * C141 - C7157 * C155 + C154481 * C165) *
               C154164 * C154429 +
           (C7247 + C7246 + C7245) * C154164 * C2903 + C7253 * C2902) *
              C154082 * C154066 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C7157 * C144 - C7158 * C136 - C7157 * C145 + C154481 * C160 +
             C7159 * C600 - C7160 * C584 - C7159 * C601 + C154470 * C620 +
             C7161 * C602 - C7162 * C585 - C7161 * C603 + C154445 * C621) *
                C154164 * C2902 +
            (C7236 + C7237 + C7238) * C154164 * C2903 + C7252 * C154429) *
               C154082 * C338 -
           ((C7544 + C7545 + C7546) * C154164 * C154429 +
            (C7547 + C7548 + C7549) * C154164 * C2903 +
            (C7161 * C1554 - C7162 * C1545 - C7161 * C1555 + C154445 * C1560 +
             C7159 * C1135 - C7160 * C1129 - C7159 * C1136 + C154470 * C1147 +
             C7157 * C363 - C7158 * C347 - C7157 * C364 + C154481 * C383) *
                C154164 * C2902) *
               C154082 * C339 +
           ((C7157 * C365 - C7158 * C348 - C7157 * C366 + C154481 * C384 +
             C7159 * C1985 - C7160 * C1976 - C7159 * C1986 + C154470 * C1991 +
             C7161 * C3445 - C7162 * C3441 - C7161 * C3446 + C154445 * C3453) *
                C154164 * C2902 +
            (C7550 + C7551 + C7552) * C154164 * C2903 +
            (C7553 + C7554 + C7555) * C154164 * C154429) *
               C154082 * C340) *
              C341 +
          (((C7549 + C7548 + C7547) * C154164 * C2902 +
            (C7546 + C7545 + C7544) * C154164 * C2903 +
            (C7157 * C357 - C7158 * C344 - C7157 * C358 + C154481 * C380 +
             C7159 * C1141 - C7160 * C1132 - C7159 * C1142 + C154470 * C1150 +
             C7161 * C1548 - C7162 * C1542 - C7161 * C1549 + C154445 * C1557) *
                C154164 * C154429) *
               C154082 * C339 -
           (C7253 * C154429 + (C7241 + C7240 + C7239) * C154164 * C2903 +
            (C7238 + C7237 + C7236) * C154164 * C2902) *
               C154082 * C338 -
           ((C7161 * C3451 - C7162 * C3444 - C7161 * C3452 + C154445 * C3456 +
             C7159 * C1979 - C7160 * C1973 - C7159 * C1980 + C154470 * C1988 +
             C7157 * C371 - C7158 * C351 - C7157 * C372 + C154481 * C387) *
                C154164 * C154429 +
            (C7555 + C7554 + C7553) * C154164 * C2903 +
            (C7552 + C7551 + C7550) * C154164 * C2902) *
               C154082 * C340) *
              C154053)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                C24270 +
            C3210 * C24271 + C3211 * C154442) *
               C154477 +
           (C24277 + C24278 + C24279) * C154458 + C24291 * C154429) *
              C154082 * C154066 * C130 -
          (C24292 * C154429 + (C24282 + C24281 + C24280) * C154458 +
           (C24279 + C24278 + C24277) * C154477) *
              C154082 * C154066 * C131 +
          (C24291 * C154477 + (C24285 + C24284 + C24283) * C154458 +
           (C24286 + C24287 + C24288) * C154429) *
              C154082 * C154066 * C132 -
          (((C134 * C377 - C135 * C354 - C134 * C378 + C154181 * C390) *
                C154442 +
            C830 * C24271 + C209 * C24270) *
               C154429 +
           (C24288 + C24287 + C24286) * C154458 + C24292 * C154477) *
              C154082 * C154066 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C24270 +
             C3210 * C24271 + C3211 * C154442) *
                C154477 +
            (C24277 + C24278 + C24279) * C154458 + C24291 * C154429) *
               C154082 * C338 -
           ((C24511 + C24512 + C24513) * C154429 +
            (C24514 + C24515 + C24516) * C154458 +
            (C3214 * C154442 + C3211 * C24271 + C3210 * C24270) * C154477) *
               C154082 * C339 +
           ((C3211 * C24270 + C3214 * C24271 + C4687 * C154442) * C154477 +
            (C24517 + C24518 + C24519) * C154458 +
            (C24520 + C24521 + C24522) * C154429) *
               C154082 * C340) *
              C341 +
          (((C24516 + C24515 + C24514) * C154477 +
            (C24513 + C24512 + C24511) * C154458 +
            (C441 * C24270 + C446 * C24271 + C3217 * C154442) * C154429) *
               C154082 * C339 -
           (C24292 * C154429 + (C24282 + C24281 + C24280) * C154458 +
            (C24279 + C24278 + C24277) * C154477) *
               C154082 * C338 -
           (((C134 * C3149 - C135 * C3142 - C134 * C3150 + C154181 * C3154) *
                 C154442 +
             C3217 * C24271 + C446 * C24270) *
                C154429 +
            (C24522 + C24521 + C24520) * C154458 +
            (C24519 + C24518 + C24517) * C154477) *
               C154082 * C340) *
              C154053)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) * C28192 +
           C3210 * C28193 + C3211 * C28194 + C3214 * C28195 + C4687 * C28196) *
              C154011 * C154082 * C154066 * C130 -
          (C3215 * C28196 + C3213 * C28195 + C444 * C28194 + C443 * C28193 +
           C205 * C28192) *
              C154011 * C154082 * C154066 * C131 +
          (C206 * C28192 + C442 * C28193 + C445 * C28194 + C3212 * C28195 +
           C3216 * C28196) *
              C154011 * C154082 * C154066 * C132 -
          ((C134 * C3149 - C135 * C3142 - C134 * C3150 + C154181 * C3154) *
               C28196 +
           C3217 * C28195 + C446 * C28194 + C441 * C28193 + C207 * C28192) *
              C154011 * C154082 * C154066 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                C28192 +
            C3210 * C28193 + C3211 * C28194 + C3214 * C28195 + C4687 * C28196) *
               C154011 * C154082 * C338 -
           (C28341 * C28196 + C4687 * C28195 + C3214 * C28194 + C3211 * C28193 +
            C3210 * C28192) *
               C154011 * C154082 * C339 +
           (C3211 * C28192 + C3214 * C28193 + C4687 * C28194 + C28341 * C28195 +
            (C134 * C28322 - C135 * C28320 - C134 * C28323 + C154181 * C28326) *
                C28196) *
               C154011 * C154082 * C340) *
              C341 +
          ((C443 * C28192 + C444 * C28193 + C3213 * C28194 + C3215 * C28195 +
            C28342 * C28196) *
               C154011 * C154082 * C339 -
           (C3215 * C28196 + C3213 * C28195 + C444 * C28194 + C443 * C28193 +
            C205 * C28192) *
               C154011 * C154082 * C338 -
           ((C134 * C28324 - C135 * C28321 - C134 * C28325 + C154181 * C28327) *
                C28196 +
            C28342 * C28195 + C3215 * C28194 + C3213 * C28193 + C444 * C28192) *
               C154011 * C154082 * C340) *
              C154053)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C7157 * C144 - C7158 * C136 - C7157 * C145 + C154481 * C160 +
            C7159 * C600 - C7160 * C584 - C7159 * C601 + C154470 * C620 +
            C7161 * C602 - C7162 * C585 - C7161 * C603 + C154445 * C621) *
               C24270 +
           (C7157 * C363 - C7158 * C347 - C7157 * C364 + C154481 * C383 +
            C7159 * C1135 - C7160 * C1129 - C7159 * C1136 + C154470 * C1147 +
            C7161 * C1554 - C7162 * C1545 - C7161 * C1555 + C154445 * C1560) *
               C24271 +
           (C7157 * C365 - C7158 * C348 - C7157 * C366 + C154481 * C384 +
            C7159 * C1985 - C7160 * C1976 - C7159 * C1986 + C154470 * C1991 +
            C7161 * C3445 - C7162 * C3441 - C7161 * C3446 + C154445 * C3453) *
               C154442) *
              C154011 * C154082 * C154066 * C130 -
          ((C7552 + C7551 + C7550) * C154442 +
           (C7547 + C7548 + C7549) * C24271 +
           (C7238 + C7237 + C7236) * C24270) *
              C154011 * C154082 * C154066 * C131 +
          (C7250 * C24270 + (C7546 + C7545 + C7544) * C24271 +
           (C7553 + C7554 + C7555) * C154442) *
              C154011 * C154082 * C154066 * C132 -
          ((C7161 * C3451 - C7162 * C3444 - C7161 * C3452 + C154445 * C3456 +
            C7159 * C1979 - C7160 * C1973 - C7159 * C1980 + C154470 * C1988 +
            C7157 * C371 - C7158 * C351 - C7157 * C372 + C154481 * C387) *
               C154442 +
           (C8115 + C8114 + C8113) * C24271 + C7251 * C24270) *
              C154011 * C154082 * C154066 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C7157 * C144 - C7158 * C136 - C7157 * C145 + C154481 * C160 +
             C7159 * C600 - C7160 * C584 - C7159 * C601 + C154470 * C620 +
             C7161 * C602 - C7162 * C585 - C7161 * C603 + C154445 * C621) *
                C24270 +
            (C30851 + C30852 + C30853) * C24271 + C30864 * C154442) *
               C154011 * C154082 * C338 -
           ((C30857 + C30858 + C30859) * C154442 +
            (C30856 + C30855 + C30854) * C24271 +
            (C30853 + C30852 + C30851) * C24270) *
               C154011 * C154082 * C339 +
           (C30864 * C24270 + (C30859 + C30858 + C30857) * C24271 +
            (C7157 * C3143 - C7158 * C3139 - C7157 * C3144 + C154481 * C3151 +
             C7159 * C5664 - C7160 * C5659 - C7159 * C5665 + C154470 * C5668 +
             C7161 * C28466 - C7162 * C28464 - C7161 * C28467 +
             C154445 * C28470) *
                C154442) *
               C154011 * C154082 * C340) *
              C341 +
          (((C7549 + C7548 + C7547) * C24270 +
            (C7550 + C7551 + C7552) * C24271 +
            (C30860 + C30861 + C30862) * C154442) *
               C154011 * C154082 * C339 -
           (C30838 * C154442 + (C7547 + C7548 + C7549) * C24271 +
            (C7238 + C7237 + C7236) * C24270) *
               C154011 * C154082 * C338 -
           ((C7161 * C28468 - C7162 * C28465 - C7161 * C28469 +
             C154445 * C28471 + C7159 * C5662 - C7160 * C5658 - C7159 * C5663 +
             C154470 * C5667 + C7157 * C3145 - C7158 * C3140 - C7157 * C3146 +
             C154481 * C3152) *
                C154442 +
            (C30862 + C30861 + C30860) * C24271 + C30838 * C24270) *
               C154011 * C154082 * C340) *
              C154053)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C47141 * C144 - C47142 * C136 - C47141 * C145 + C47138 * C160 +
            C47143 * C600 - C47144 * C584 - C47143 * C601 + C47139 * C620 +
            C47145 * C602 - C47146 * C585 - C47145 * C603 + C154445 * C621) *
               C154164 * C154477 +
           (C47220 + C47221 + C47222) * C154164 * C154458 + C47236 * C154429) *
              C154082 * C154066 * C130 -
          (C47237 * C154429 + (C47225 + C47224 + C47223) * C154164 * C154458 +
           (C47222 + C47221 + C47220) * C154164 * C154477) *
              C154082 * C154066 * C131 +
          (C47236 * C154477 + (C47228 + C47227 + C47226) * C154164 * C154458 +
           (C47229 + C47230 + C47231) * C154164 * C154429) *
              C154082 * C154066 * C132 -
          ((C47145 * C614 - C47146 * C591 - C47145 * C615 + C154445 * C627 +
            C47143 * C612 - C47144 * C590 - C47143 * C613 + C47139 * C626 +
            C47141 * C154 - C47142 * C141 - C47141 * C155 + C47138 * C165) *
               C154164 * C154429 +
           (C47231 + C47230 + C47229) * C154164 * C154458 + C47237 * C154477) *
              C154082 * C154066 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C47141 * C144 - C47142 * C136 - C47141 * C145 + C47138 * C160 +
             C47143 * C600 - C47144 * C584 - C47143 * C601 + C47139 * C620 +
             C47145 * C602 - C47146 * C585 - C47145 * C603 + C154445 * C621) *
                C154164 * C154477 +
            (C47220 + C47221 + C47222) * C154164 * C154458 + C47236 * C154429) *
               C154082 * C338 -
           ((C47528 + C47529 + C47530) * C154164 * C154429 +
            (C47531 + C47532 + C47533) * C154164 * C154458 +
            (C47145 * C1554 - C47146 * C1545 - C47145 * C1555 +
             C154445 * C1560 + C47143 * C1135 - C47144 * C1129 -
             C47143 * C1136 + C47139 * C1147 + C47141 * C363 - C47142 * C347 -
             C47141 * C364 + C47138 * C383) *
                C154164 * C154477) *
               C154082 * C339 +
           ((C47141 * C365 - C47142 * C348 - C47141 * C366 + C47138 * C384 +
             C47143 * C1985 - C47144 * C1976 - C47143 * C1986 + C47139 * C1991 +
             C47145 * C3445 - C47146 * C3441 - C47145 * C3446 +
             C154445 * C3453) *
                C154164 * C154477 +
            (C47534 + C47535 + C47536) * C154164 * C154458 +
            (C47537 + C47538 + C47539) * C154164 * C154429) *
               C154082 * C340) *
              C341 +
          (((C47533 + C47532 + C47531) * C154164 * C154477 +
            (C47530 + C47529 + C47528) * C154164 * C154458 +
            (C47141 * C357 - C47142 * C344 - C47141 * C358 + C47138 * C380 +
             C47143 * C1141 - C47144 * C1132 - C47143 * C1142 + C47139 * C1150 +
             C47145 * C1548 - C47146 * C1542 - C47145 * C1549 +
             C154445 * C1557) *
                C154164 * C154429) *
               C154082 * C339 -
           (C47237 * C154429 + (C47225 + C47224 + C47223) * C154164 * C154458 +
            (C47222 + C47221 + C47220) * C154164 * C154477) *
               C154082 * C338 -
           ((C47145 * C3451 - C47146 * C3444 - C47145 * C3452 +
             C154445 * C3456 + C47143 * C1979 - C47144 * C1973 -
             C47143 * C1980 + C47139 * C1988 + C47141 * C371 - C47142 * C351 -
             C47141 * C372 + C47138 * C387) *
                C154164 * C154429 +
            (C47539 + C47538 + C47537) * C154164 * C154458 +
            (C47536 + C47535 + C47534) * C154164 * C154477) *
               C154082 * C340) *
              C154053)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C47141 * C144 - C47142 * C136 - C47141 * C145 + C47138 * C160 +
            C47143 * C600 - C47144 * C584 - C47143 * C601 + C47139 * C620 +
            C47145 * C602 - C47146 * C585 - C47145 * C603 + C154445 * C621) *
               C154480 +
           (C47141 * C363 - C47142 * C347 - C47141 * C364 + C47138 * C383 +
            C47143 * C1135 - C47144 * C1129 - C47143 * C1136 + C47139 * C1147 +
            C47145 * C1554 - C47146 * C1545 - C47145 * C1555 +
            C154445 * C1560) *
               C154468 +
           (C47141 * C365 - C47142 * C348 - C47141 * C366 + C47138 * C384 +
            C47143 * C1985 - C47144 * C1976 - C47143 * C1986 + C47139 * C1991 +
            C47145 * C3445 - C47146 * C3441 - C47145 * C3446 +
            C154445 * C3453) *
               C154442) *
              C154011 * C154082 * C154066 * C130 -
          ((C47536 + C47535 + C47534) * C154442 +
           (C47531 + C47532 + C47533) * C154468 +
           (C47222 + C47221 + C47220) * C154480) *
              C154011 * C154082 * C154066 * C131 +
          (C47234 * C154480 + (C47530 + C47529 + C47528) * C154468 +
           (C47537 + C47538 + C47539) * C154442) *
              C154011 * C154082 * C154066 * C132 -
          ((C47145 * C3451 - C47146 * C3444 - C47145 * C3452 + C154445 * C3456 +
            C47143 * C1979 - C47144 * C1973 - C47143 * C1980 + C47139 * C1988 +
            C47141 * C371 - C47142 * C351 - C47141 * C372 + C47138 * C387) *
               C154442 +
           (C48083 + C48082 + C48081) * C154468 + C47235 * C154480) *
              C154011 * C154082 * C154066 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C47141 * C144 - C47142 * C136 - C47141 * C145 + C47138 * C160 +
             C47143 * C600 - C47144 * C584 - C47143 * C601 + C47139 * C620 +
             C47145 * C602 - C47146 * C585 - C47145 * C603 + C154445 * C621) *
                C154480 +
            (C51712 + C51713 + C51714) * C154468 + C51725 * C154442) *
               C154011 * C154082 * C338 -
           ((C51718 + C51719 + C51720) * C154442 +
            (C51717 + C51716 + C51715) * C154468 +
            (C51714 + C51713 + C51712) * C154480) *
               C154011 * C154082 * C339 +
           (C51725 * C154480 + (C51720 + C51719 + C51718) * C154468 +
            (C47141 * C3143 - C47142 * C3139 - C47141 * C3144 + C47138 * C3151 +
             C47143 * C5664 - C47144 * C5659 - C47143 * C5665 + C47139 * C5668 +
             C47145 * C28466 - C47146 * C28464 - C47145 * C28467 +
             C154445 * C28470) *
                C154442) *
               C154011 * C154082 * C340) *
              C341 +
          (((C47533 + C47532 + C47531) * C154480 +
            (C47534 + C47535 + C47536) * C154468 +
            (C51721 + C51722 + C51723) * C154442) *
               C154011 * C154082 * C339 -
           (C51699 * C154442 + (C47531 + C47532 + C47533) * C154468 +
            (C47222 + C47221 + C47220) * C154480) *
               C154011 * C154082 * C338 -
           ((C47145 * C28468 - C47146 * C28465 - C47145 * C28469 +
             C154445 * C28471 + C47143 * C5662 - C47144 * C5658 -
             C47143 * C5663 + C47139 * C5667 + C47141 * C3145 - C47142 * C3140 -
             C47141 * C3146 + C47138 * C3152) *
                C154442 +
            (C51723 + C51722 + C51721) * C154468 + C51699 * C154480) *
               C154011 * C154082 * C340) *
              C154053)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((C55523 * C144 - C55524 * C136 - C55523 * C145 + C55518 * C160 +
           C55525 * C600 - C55526 * C584 - C55525 * C601 + C55519 * C620 +
           C55527 * C602 - C55528 * C585 - C55527 * C603 + C55520 * C621 +
           C55529 * C2337 - C55530 * C2328 - C55529 * C2338 + C55521 * C2343 +
           C55531 * C7777 - C55532 * C7773 - C55531 * C7778 + C55522 * C7785) *
              C154164 * C154011 * C154082 * C154066 * C130 -
          (C55531 * C7779 - C55532 * C7774 - C55531 * C7780 + C55522 * C7786 +
           C55529 * C2335 - C55530 * C2327 - C55529 * C2336 + C55521 * C2342 +
           C55527 * C604 - C55528 * C586 - C55527 * C605 + C55520 * C622 +
           C55525 * C598 - C55526 * C583 - C55525 * C599 + C55519 * C619 +
           C55523 * C146 - C55524 * C137 - C55523 * C147 + C55518 * C161) *
              C154164 * C154011 * C154082 * C154066 * C131 +
          (C55523 * C148 - C55524 * C138 - C55523 * C149 + C55518 * C162 +
           C55525 * C596 - C55526 * C582 - C55525 * C597 + C55519 * C618 +
           C55527 * C606 - C55528 * C587 - C55527 * C607 + C55520 * C623 +
           C55529 * C2333 - C55530 * C2326 - C55529 * C2334 + C55521 * C2341 +
           C55531 * C7781 - C55532 * C7775 - C55531 * C7782 + C55522 * C7787) *
              C154164 * C154011 * C154082 * C154066 * C132 -
          (C55531 * C7783 - C55532 * C7776 - C55531 * C7784 + C55522 * C7788 +
           C55529 * C2331 - C55530 * C2325 - C55529 * C2332 + C55521 * C2340 +
           C55527 * C608 - C55528 * C588 - C55527 * C609 + C55520 * C624 +
           C55525 * C594 - C55526 * C581 - C55525 * C595 + C55519 * C617 +
           C55523 * C150 - C55524 * C139 - C55523 * C151 + C55518 * C163) *
              C154164 * C154011 * C154082 * C154066 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C55523 * C144 - C55524 * C136 - C55523 * C145 + C55518 * C160 +
            C55525 * C600 - C55526 * C584 - C55525 * C601 + C55519 * C620 +
            C55527 * C602 - C55528 * C585 - C55527 * C603 + C55520 * C621 +
            C55529 * C2337 - C55530 * C2328 - C55529 * C2338 + C55521 * C2343 +
            C55531 * C7777 - C55532 * C7773 - C55531 * C7778 + C55522 * C7785) *
               C154164 * C154011 * C154082 * C338 -
           (C55531 * C9282 - C55532 * C9277 - C55531 * C9283 + C55522 * C9286 +
            C55529 * C6274 - C55530 * C6263 - C55529 * C6275 + C55521 * C6281 +
            C55527 * C1554 - C55528 * C1545 - C55527 * C1555 + C55520 * C1560 +
            C55525 * C1135 - C55526 * C1129 - C55525 * C1136 + C55519 * C1147 +
            C55523 * C363 - C55524 * C347 - C55523 * C364 + C55518 * C383) *
               C154164 * C154011 * C154082 * C339 +
           (C55523 * C365 - C55524 * C348 - C55523 * C366 + C55518 * C384 +
            C55525 * C1985 - C55526 * C1976 - C55525 * C1986 + C55519 * C1991 +
            C55527 * C3445 - C55528 * C3441 - C55527 * C3446 + C55520 * C3453 +
            C55529 * C6272 - C55530 * C6262 - C55529 * C6273 + C55521 * C6280 +
            C55531 * C31084 - C55532 * C31082 - C55531 * C31085 +
            C55522 * C31088) *
               C154164 * C154011 * C154082 * C340) *
              C341 +
          ((C55523 * C361 - C55524 * C346 - C55523 * C362 + C55518 * C382 +
            C55525 * C1137 - C55526 * C1130 - C55525 * C1138 + C55519 * C1148 +
            C55527 * C1552 - C55528 * C1544 - C55527 * C1553 + C55520 * C1559 +
            C55529 * C6270 - C55530 * C6261 - C55529 * C6271 + C55521 * C6279 +
            C55531 * C9280 - C55532 * C9276 - C55531 * C9281 + C55522 * C9285) *
               C154164 * C154011 * C154082 * C339 -
           (C55531 * C7779 - C55532 * C7774 - C55531 * C7780 + C55522 * C7786 +
            C55529 * C2335 - C55530 * C2327 - C55529 * C2336 + C55521 * C2342 +
            C55527 * C604 - C55528 * C586 - C55527 * C605 + C55520 * C622 +
            C55525 * C598 - C55526 * C583 - C55525 * C599 + C55519 * C619 +
            C55523 * C146 - C55524 * C137 - C55523 * C147 + C55518 * C161) *
               C154164 * C154011 * C154082 * C338 -
           (C55531 * C31086 - C55532 * C31083 - C55531 * C31087 +
            C55522 * C31089 + C55529 * C6268 - C55530 * C6260 - C55529 * C6269 +
            C55521 * C6278 + C55527 * C3447 - C55528 * C3442 - C55527 * C3448 +
            C55520 * C3454 + C55525 * C1983 - C55526 * C1975 - C55525 * C1984 +
            C55519 * C1990 + C55523 * C367 - C55524 * C349 - C55523 * C368 +
            C55518 * C385) *
               C154164 * C154011 * C154082 * C340) *
              C154053)) /
            (p * q * std::sqrt(p + q));
    d2ee[185] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                    C154164 * C123 +
                C211 * C124 + C212 * C125 + C213 * C126 + C214 * C127) *
                   C154082 * C154463 -
               (C448 * C127 + C449 * C126 + C450 * C125 + C451 * C124 +
                (C134 * C363 - C135 * C347 - C134 * C364 + C154181 * C383) *
                    C154164 * C123) *
                   C154082 * C154464 +
               ((C134 * C365 - C135 * C348 - C134 * C366 + C154181 * C384) *
                    C154164 * C123 +
                C452 * C124 + C453 * C125 + C454 * C126 + C455 * C127) *
                   C154082 * C1685) *
                  C154384 +
              ((C451 * C123 + C450 * C124 + C449 * C125 + C448 * C126 +
                C831 * C127) *
                   C154082 * C154464 -
               (C215 * C127 + C214 * C126 + C213 * C125 + C212 * C124 +
                C211 * C123) *
                   C154082 * C154463 -
               ((C134 * C377 - C135 * C354 - C134 * C378 + C154181 * C390) *
                    C154164 * C127 +
                C455 * C126 + C454 * C125 + C453 * C124 + C452 * C123) *
                   C154082 * C1685) *
                  C154053) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                     C154480 +
                 C3210 * C154468 + C3211 * C154442) *
                    C2902 +
                (C2906 + C2907 + C2908) * C2903 + C2920 * C154429) *
                   C154082 * C154463 -
               (C3734 * C154429 + (C3219 + C3174 + C3175) * C2903 +
                (C3214 * C154442 + C3211 * C154468 + C3210 * C154480) * C2902) *
                   C154082 * C154464 +
               ((C3211 * C154480 + C3214 * C154468 + C4687 * C154442) * C2902 +
                (C3180 + C3220 + C3221) * C2903 +
                (C3185 + C3222 + C3223) * C154429) *
                   C154082 * C1685) *
                  C154384 +
              (((C3175 + C3174 + C3219) * C2902 +
                (C3169 + C3168 + C3218) * C2903 +
                (C3731 + C3732 + C3733) * C154429) *
                   C154082 * C154464 -
               (C2921 * C154429 + (C2911 + C2910 + C2909) * C2903 +
                (C2908 + C2907 + C2906) * C2902) *
                   C154082 * C154463 -
               (((C134 * C3149 - C135 * C3142 - C134 * C3150 +
                  C154181 * C3154) *
                     C154442 +
                 C3217 * C154468 + C446 * C154480) *
                    C154429 +
                (C3223 + C3222 + C3185) * C2903 +
                (C3221 + C3220 + C3180) * C2902) *
                   C154082 * C1685) *
                  C154053)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C7157 * C144 - C7158 * C136 - C7157 * C145 + C154481 * C160 +
             C7159 * C600 - C7160 * C584 - C7159 * C601 + C154470 * C620 +
             C7161 * C602 - C7162 * C585 - C7161 * C603 + C154445 * C621) *
                C154164 * C2902 +
            (C7236 + C7237 + C7238) * C154164 * C2903 + C7252 * C154429) *
               C154082 * C154463 -
           (C8109 * C154429 + (C7547 + C7548 + C7549) * C154164 * C2903 +
            (C7161 * C1554 - C7162 * C1545 - C7161 * C1555 + C154445 * C1560 +
             C7159 * C1135 - C7160 * C1129 - C7159 * C1136 + C154470 * C1147 +
             C7157 * C363 - C7158 * C347 - C7157 * C364 + C154481 * C383) *
                C154164 * C2902) *
               C154082 * C154464 +
           ((C7157 * C365 - C7158 * C348 - C7157 * C366 + C154481 * C384 +
             C7159 * C1985 - C7160 * C1976 - C7159 * C1986 + C154470 * C1991 +
             C7161 * C3445 - C7162 * C3441 - C7161 * C3446 + C154445 * C3453) *
                C154164 * C2902 +
            (C7550 + C7551 + C7552) * C154164 * C2903 +
            (C7553 + C7554 + C7555) * C154164 * C154429) *
               C154082 * C1685) *
              C154384 +
          (((C7549 + C7548 + C7547) * C154164 * C2902 +
            (C7546 + C7545 + C7544) * C154164 * C2903 +
            (C8113 + C8114 + C8115) * C154164 * C154429) *
               C154082 * C154464 -
           (C7253 * C154429 + (C7241 + C7240 + C7239) * C154164 * C2903 +
            (C7238 + C7237 + C7236) * C154164 * C2902) *
               C154082 * C154463 -
           ((C7161 * C3451 - C7162 * C3444 - C7161 * C3452 + C154445 * C3456 +
             C7159 * C1979 - C7160 * C1973 - C7159 * C1980 + C154470 * C1988 +
             C7157 * C371 - C7158 * C351 - C7157 * C372 + C154481 * C387) *
                C154164 * C154429 +
            (C7555 + C7554 + C7553) * C154164 * C2903 +
            (C7552 + C7551 + C7550) * C154164 * C2902) *
               C154082 * C1685) *
              C154053)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C24270 +
             C3210 * C24271 + C3211 * C154442) *
                C154477 +
            (C24277 + C24278 + C24279) * C154458 + C24291 * C154429) *
               C154082 * C154463 -
           (C24975 * C154429 + (C24514 + C24515 + C24516) * C154458 +
            (C3214 * C154442 + C3211 * C24271 + C3210 * C24270) * C154477) *
               C154082 * C154464 +
           ((C3211 * C24270 + C3214 * C24271 + C4687 * C154442) * C154477 +
            (C24517 + C24518 + C24519) * C154458 +
            (C24520 + C24521 + C24522) * C154429) *
               C154082 * C1685) *
              C154384 +
          (((C24516 + C24515 + C24514) * C154477 +
            (C24513 + C24512 + C24511) * C154458 +
            (C24972 + C24973 + C24974) * C154429) *
               C154082 * C154464 -
           (C24292 * C154429 + (C24282 + C24281 + C24280) * C154458 +
            (C24279 + C24278 + C24277) * C154477) *
               C154082 * C154463 -
           (((C134 * C3149 - C135 * C3142 - C134 * C3150 + C154181 * C3154) *
                 C154442 +
             C3217 * C24271 + C446 * C24270) *
                C154429 +
            (C24522 + C24521 + C24520) * C154458 +
            (C24519 + C24518 + C24517) * C154477) *
               C154082 * C1685) *
              C154053)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                C28192 +
            C3210 * C28193 + C3211 * C28194 + C3214 * C28195 + C4687 * C28196) *
               C154011 * C154082 * C154463 -
           (C28341 * C28196 + C4687 * C28195 + C3214 * C28194 + C3211 * C28193 +
            C3210 * C28192) *
               C154011 * C154082 * C154464 +
           (C3211 * C28192 + C3214 * C28193 + C4687 * C28194 + C28341 * C28195 +
            C29115 * C28196) *
               C154011 * C154082 * C1685) *
              C154384 +
          ((C443 * C28192 + C444 * C28193 + C3213 * C28194 + C3215 * C28195 +
            C28342 * C28196) *
               C154011 * C154082 * C154464 -
           (C3215 * C28196 + C3213 * C28195 + C444 * C28194 + C443 * C28193 +
            C205 * C28192) *
               C154011 * C154082 * C154463 -
           ((C134 * C28324 - C135 * C28321 - C134 * C28325 + C154181 * C28327) *
                C28196 +
            C28342 * C28195 + C3215 * C28194 + C3213 * C28193 + C444 * C28192) *
               C154011 * C154082 * C1685) *
              C154053)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C7157 * C144 - C7158 * C136 - C7157 * C145 + C154481 * C160 +
             C7159 * C600 - C7160 * C584 - C7159 * C601 + C154470 * C620 +
             C7161 * C602 - C7162 * C585 - C7161 * C603 + C154445 * C621) *
                C24270 +
            (C30851 + C30852 + C30853) * C24271 + C30864 * C154442) *
               C154011 * C154082 * C154463 -
           (C32261 * C154442 + (C30856 + C30855 + C30854) * C24271 +
            (C30853 + C30852 + C30851) * C24270) *
               C154011 * C154082 * C154464 +
           (C30864 * C24270 + (C30859 + C30858 + C30857) * C24271 +
            (C32268 + C32269 + C32270) * C154442) *
               C154011 * C154082 * C1685) *
              C154384 +
          (((C7549 + C7548 + C7547) * C24270 +
            (C7550 + C7551 + C7552) * C24271 +
            (C30860 + C30861 + C30862) * C154442) *
               C154011 * C154082 * C154464 -
           (C30838 * C154442 + (C7547 + C7548 + C7549) * C24271 +
            (C7238 + C7237 + C7236) * C24270) *
               C154011 * C154082 * C154463 -
           ((C7161 * C28468 - C7162 * C28465 - C7161 * C28469 +
             C154445 * C28471 + C7159 * C5662 - C7160 * C5658 - C7159 * C5663 +
             C154470 * C5667 + C7157 * C3145 - C7158 * C3140 - C7157 * C3146 +
             C154481 * C3152) *
                C154442 +
            (C30862 + C30861 + C30860) * C24271 + C30838 * C24270) *
               C154011 * C154082 * C1685) *
              C154053)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C47141 * C144 - C47142 * C136 - C47141 * C145 + C47138 * C160 +
             C47143 * C600 - C47144 * C584 - C47143 * C601 + C47139 * C620 +
             C47145 * C602 - C47146 * C585 - C47145 * C603 + C154445 * C621) *
                C154164 * C154477 +
            (C47220 + C47221 + C47222) * C154164 * C154458 + C47236 * C154429) *
               C154082 * C154463 -
           (C48077 * C154429 + (C47531 + C47532 + C47533) * C154164 * C154458 +
            (C47145 * C1554 - C47146 * C1545 - C47145 * C1555 +
             C154445 * C1560 + C47143 * C1135 - C47144 * C1129 -
             C47143 * C1136 + C47139 * C1147 + C47141 * C363 - C47142 * C347 -
             C47141 * C364 + C47138 * C383) *
                C154164 * C154477) *
               C154082 * C154464 +
           ((C47141 * C365 - C47142 * C348 - C47141 * C366 + C47138 * C384 +
             C47143 * C1985 - C47144 * C1976 - C47143 * C1986 + C47139 * C1991 +
             C47145 * C3445 - C47146 * C3441 - C47145 * C3446 +
             C154445 * C3453) *
                C154164 * C154477 +
            (C47534 + C47535 + C47536) * C154164 * C154458 +
            (C47537 + C47538 + C47539) * C154164 * C154429) *
               C154082 * C1685) *
              C154384 +
          (((C47533 + C47532 + C47531) * C154164 * C154477 +
            (C47530 + C47529 + C47528) * C154164 * C154458 +
            (C48081 + C48082 + C48083) * C154164 * C154429) *
               C154082 * C154464 -
           (C47237 * C154429 + (C47225 + C47224 + C47223) * C154164 * C154458 +
            (C47222 + C47221 + C47220) * C154164 * C154477) *
               C154082 * C154463 -
           ((C47145 * C3451 - C47146 * C3444 - C47145 * C3452 +
             C154445 * C3456 + C47143 * C1979 - C47144 * C1973 -
             C47143 * C1980 + C47139 * C1988 + C47141 * C371 - C47142 * C351 -
             C47141 * C372 + C47138 * C387) *
                C154164 * C154429 +
            (C47539 + C47538 + C47537) * C154164 * C154458 +
            (C47536 + C47535 + C47534) * C154164 * C154477) *
               C154082 * C1685) *
              C154053)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C47141 * C144 - C47142 * C136 - C47141 * C145 + C47138 * C160 +
             C47143 * C600 - C47144 * C584 - C47143 * C601 + C47139 * C620 +
             C47145 * C602 - C47146 * C585 - C47145 * C603 + C154445 * C621) *
                C154480 +
            (C51712 + C51713 + C51714) * C154468 + C51725 * C154442) *
               C154011 * C154082 * C154463 -
           (C53110 * C154442 + (C51717 + C51716 + C51715) * C154468 +
            (C51714 + C51713 + C51712) * C154480) *
               C154011 * C154082 * C154464 +
           (C51725 * C154480 + (C51720 + C51719 + C51718) * C154468 +
            (C53117 + C53118 + C53119) * C154442) *
               C154011 * C154082 * C1685) *
              C154384 +
          (((C47533 + C47532 + C47531) * C154480 +
            (C47534 + C47535 + C47536) * C154468 +
            (C51721 + C51722 + C51723) * C154442) *
               C154011 * C154082 * C154464 -
           (C51699 * C154442 + (C47531 + C47532 + C47533) * C154468 +
            (C47222 + C47221 + C47220) * C154480) *
               C154011 * C154082 * C154463 -
           ((C47145 * C28468 - C47146 * C28465 - C47145 * C28469 +
             C154445 * C28471 + C47143 * C5662 - C47144 * C5658 -
             C47143 * C5663 + C47139 * C5667 + C47141 * C3145 - C47142 * C3140 -
             C47141 * C3146 + C47138 * C3152) *
                C154442 +
            (C51723 + C51722 + C51721) * C154468 + C51699 * C154480) *
               C154011 * C154082 * C1685) *
              C154053)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C55523 * C144 - C55524 * C136 - C55523 * C145 + C55518 * C160 +
            C55525 * C600 - C55526 * C584 - C55525 * C601 + C55519 * C620 +
            C55527 * C602 - C55528 * C585 - C55527 * C603 + C55520 * C621 +
            C55529 * C2337 - C55530 * C2328 - C55529 * C2338 + C55521 * C2343 +
            C55531 * C7777 - C55532 * C7773 - C55531 * C7778 + C55522 * C7785) *
               C154164 * C154011 * C154082 * C154463 -
           (C55531 * C9282 - C55532 * C9277 - C55531 * C9283 + C55522 * C9286 +
            C55529 * C6274 - C55530 * C6263 - C55529 * C6275 + C55521 * C6281 +
            C55527 * C1554 - C55528 * C1545 - C55527 * C1555 + C55520 * C1560 +
            C55525 * C1135 - C55526 * C1129 - C55525 * C1136 + C55519 * C1147 +
            C55523 * C363 - C55524 * C347 - C55523 * C364 + C55518 * C383) *
               C154164 * C154011 * C154082 * C154464 +
           (C55523 * C365 - C55524 * C348 - C55523 * C366 + C55518 * C384 +
            C55525 * C1985 - C55526 * C1976 - C55525 * C1986 + C55519 * C1991 +
            C55527 * C3445 - C55528 * C3441 - C55527 * C3446 + C55520 * C3453 +
            C55529 * C6272 - C55530 * C6262 - C55529 * C6273 + C55521 * C6280 +
            C55531 * C31084 - C55532 * C31082 - C55531 * C31085 +
            C55522 * C31088) *
               C154164 * C154011 * C154082 * C1685) *
              C154384 +
          ((C55523 * C361 - C55524 * C346 - C55523 * C362 + C55518 * C382 +
            C55525 * C1137 - C55526 * C1130 - C55525 * C1138 + C55519 * C1148 +
            C55527 * C1552 - C55528 * C1544 - C55527 * C1553 + C55520 * C1559 +
            C55529 * C6270 - C55530 * C6261 - C55529 * C6271 + C55521 * C6279 +
            C55531 * C9280 - C55532 * C9276 - C55531 * C9281 + C55522 * C9285) *
               C154164 * C154011 * C154082 * C154464 -
           (C55531 * C7779 - C55532 * C7774 - C55531 * C7780 + C55522 * C7786 +
            C55529 * C2335 - C55530 * C2327 - C55529 * C2336 + C55521 * C2342 +
            C55527 * C604 - C55528 * C586 - C55527 * C605 + C55520 * C622 +
            C55525 * C598 - C55526 * C583 - C55525 * C599 + C55519 * C619 +
            C55523 * C146 - C55524 * C137 - C55523 * C147 + C55518 * C161) *
               C154164 * C154011 * C154082 * C154463 -
           (C55531 * C31086 - C55532 * C31083 - C55531 * C31087 +
            C55522 * C31089 + C55529 * C6268 - C55530 * C6260 - C55529 * C6269 +
            C55521 * C6278 + C55527 * C3447 - C55528 * C3442 - C55527 * C3448 +
            C55520 * C3454 + C55525 * C1983 - C55526 * C1975 - C55525 * C1984 +
            C55519 * C1990 + C55523 * C367 - C55524 * C349 - C55523 * C368 +
            C55518 * C385) *
               C154164 * C154011 * C154082 * C1685) *
              C154053)) /
            (p * q * std::sqrt(p + q));
    d2ee[186] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                    C154164 * C123 +
                C211 * C124 + C212 * C125 + C213 * C126 + C214 * C127) *
                   C154393 -
               (C685 * C127 + C686 * C126 + C687 * C125 + C688 * C124 +
                (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                    C154164 * C123) *
                   C154146) *
                  C154463 +
              (((C134 * C1135 - C135 * C1129 - C134 * C1136 + C154181 * C1147) *
                    C154164 * C123 +
                C1182 * C124 + C1183 * C125 + C1184 * C126 + C1185 * C127) *
                   C154146 -
               (C448 * C127 + C449 * C126 + C450 * C125 + C451 * C124 +
                (C134 * C363 - C135 * C347 - C134 * C364 + C154181 * C383) *
                    C154164 * C123) *
                   C154393) *
                  C154464 +
              (((C134 * C365 - C135 * C348 - C134 * C366 + C154181 * C384) *
                    C154164 * C123 +
                C452 * C124 + C453 * C125 + C454 * C126 + C455 * C127) *
                   C154393 -
               ((C134 * C1977 - C135 * C1972 - C134 * C1978 + C154181 * C1987) *
                    C154164 * C127 +
                (C134 * C1979 - C135 * C1973 - C134 * C1980 + C154181 * C1988) *
                    C154164 * C126 +
                (C134 * C1981 - C135 * C1974 - C134 * C1982 + C154181 * C1989) *
                    C154164 * C125 +
                (C134 * C1983 - C135 * C1975 - C134 * C1984 + C154181 * C1990) *
                    C154164 * C124 +
                (C134 * C1985 - C135 * C1976 - C134 * C1986 + C154181 * C1991) *
                    C154164 * C123) *
                   C154146) *
                  C1685) *
             C154047 +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                     C154480 +
                 C3210 * C154468 + C3211 * C154442) *
                    C2902 +
                (C2906 + C2907 + C2908) * C2903 + C2920 * C154429) *
                   C154393 -
               (C3960 * C154429 + (C3507 + C3468 + C3469) * C2903 +
                (C4299 * C154442 + C4300 * C154468 +
                 (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                     C154480) *
                    C2902) *
                   C154146) *
                  C154463 +
              (((C4300 * C154480 + C4299 * C154468 + C5676 * C154442) * C2902 +
                (C4279 + C4280 + C4303) * C2903 +
                (C4285 + C4286 + C4304) * C154429) *
                   C154146 -
               (C3734 * C154429 + (C3219 + C3174 + C3175) * C2903 +
                (C3214 * C154442 + C3211 * C154468 + C3210 * C154480) * C2902) *
                   C154393) *
                  C154464 +
              (((C3211 * C154480 + C3214 * C154468 + C4687 * C154442) * C2902 +
                (C3180 + C3220 + C3221) * C2903 +
                (C3185 + C3222 + C3223) * C154429) *
                   C154393 -
               (((C134 * C5660 - C135 * C5657 - C134 * C5661 +
                  C154181 * C5666) *
                     C154442 +
                 C4302 * C154468 + C3500 * C154480) *
                    C154429 +
                ((C134 * C5662 - C135 * C5658 - C134 * C5663 +
                  C154181 * C5667) *
                     C154442 +
                 C4301 * C154468 + C3501 * C154480) *
                    C2903 +
                ((C134 * C5664 - C135 * C5659 - C134 * C5665 +
                  C154181 * C5668) *
                     C154442 +
                 C5676 * C154468 + C4299 * C154480) *
                    C2902) *
                   C154146) *
                  C1685) *
             C154047) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C7157 * C144 - C7158 * C136 - C7157 * C145 + C154481 * C160 +
             C7159 * C600 - C7160 * C584 - C7159 * C601 + C154470 * C620 +
             C7161 * C602 - C7162 * C585 - C7161 * C603 + C154445 * C621) *
                C154164 * C2902 +
            (C7236 + C7237 + C7238) * C154164 * C2903 + C7252 * C154429) *
               C154393 -
           (C8351 * C154429 + (C7865 + C7866 + C7867) * C154164 * C2903 +
            (C7161 * C2337 - C7162 * C2328 - C7161 * C2338 + C154445 * C2343 +
             C7159 * C602 - C7160 * C585 - C7159 * C603 + C154470 * C621 +
             C7157 * C600 - C7158 * C584 - C7157 * C601 + C154481 * C620) *
                C154164 * C2902) *
               C154146) *
              C154463 +
          (((C7157 * C1135 - C7158 * C1129 - C7157 * C1136 + C154481 * C1147 +
             C7159 * C1554 - C7160 * C1545 - C7159 * C1555 + C154470 * C1560 +
             C7161 * C6274 - C7162 * C6263 - C7161 * C6275 + C154445 * C6281) *
                C154164 * C2902 +
            (C8688 + C8689 + C8690) * C154164 * C2903 +
            (C8691 + C8692 + C8693) * C154164 * C154429) *
               C154146 -
           (C8109 * C154429 + (C7547 + C7548 + C7549) * C154164 * C2903 +
            (C7161 * C1554 - C7162 * C1545 - C7161 * C1555 + C154445 * C1560 +
             C7159 * C1135 - C7160 * C1129 - C7159 * C1136 + C154470 * C1147 +
             C7157 * C363 - C7158 * C347 - C7157 * C364 + C154481 * C383) *
                C154164 * C2902) *
               C154393) *
              C154464 +
          (((C7157 * C365 - C7158 * C348 - C7157 * C366 + C154481 * C384 +
             C7159 * C1985 - C7160 * C1976 - C7159 * C1986 + C154470 * C1991 +
             C7161 * C3445 - C7162 * C3441 - C7161 * C3446 + C154445 * C3453) *
                C154164 * C2902 +
            (C7550 + C7551 + C7552) * C154164 * C2903 +
            (C7553 + C7554 + C7555) * C154164 * C154429) *
               C154393 -
           ((C7161 * C6264 - C7162 * C6258 - C7161 * C6265 + C154445 * C6276 +
             C7159 * C3449 - C7160 * C3443 - C7159 * C3450 + C154470 * C3455 +
             C7157 * C1981 - C7158 * C1974 - C7157 * C1982 + C154481 * C1989) *
                C154164 * C154429 +
            (C7161 * C6268 - C7162 * C6260 - C7161 * C6269 + C154445 * C6278 +
             C7159 * C3447 - C7160 * C3442 - C7159 * C3448 + C154470 * C3454 +
             C7157 * C1983 - C7158 * C1975 - C7157 * C1984 + C154481 * C1990) *
                C154164 * C2903 +
            (C7161 * C6272 - C7162 * C6262 - C7161 * C6273 + C154445 * C6280 +
             C7159 * C3445 - C7160 * C3441 - C7159 * C3446 + C154470 * C3453 +
             C7157 * C1985 - C7158 * C1976 - C7157 * C1986 + C154481 * C1991) *
                C154164 * C2902) *
               C154146) *
              C1685) *
         C154047) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C24270 +
             C3210 * C24271 + C3211 * C154442) *
                C154477 +
            (C24277 + C24278 + C24279) * C154458 + C24291 * C154429) *
               C154393 -
           (C25198 * C154429 + (C24744 + C24745 + C24746) * C154458 +
            (C4299 * C154442 + C4300 * C24271 +
             (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                 C24270) *
                C154477) *
               C154146) *
              C154463 +
          (((C4300 * C24270 + C4299 * C24271 + C5676 * C154442) * C154477 +
            (C25489 + C25490 + C25491) * C154458 +
            (C25492 + C25493 + C25494) * C154429) *
               C154146 -
           (C24975 * C154429 + (C24514 + C24515 + C24516) * C154458 +
            (C3214 * C154442 + C3211 * C24271 + C3210 * C24270) * C154477) *
               C154393) *
              C154464 +
          (((C3211 * C24270 + C3214 * C24271 + C4687 * C154442) * C154477 +
            (C24517 + C24518 + C24519) * C154458 +
            (C24520 + C24521 + C24522) * C154429) *
               C154393 -
           (((C134 * C5660 - C135 * C5657 - C134 * C5661 + C154181 * C5666) *
                 C154442 +
             C4302 * C24271 + C3500 * C24270) *
                C154429 +
            ((C134 * C5662 - C135 * C5658 - C134 * C5663 + C154181 * C5667) *
                 C154442 +
             C4301 * C24271 + C3501 * C24270) *
                C154458 +
            ((C134 * C5664 - C135 * C5659 - C134 * C5665 + C154181 * C5668) *
                 C154442 +
             C5676 * C24271 + C4299 * C24270) *
                C154477) *
               C154146) *
              C1685) *
         C154047) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                C28192 +
            C3210 * C28193 + C3211 * C28194 + C3214 * C28195 + C4687 * C28196) *
               C154011 * C154393 -
           (C28899 * C28196 + C5676 * C28195 + C4299 * C28194 + C4300 * C28193 +
            (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                C28192) *
               C154011 * C154146) *
              C154463 +
          ((C4300 * C28192 + C4299 * C28193 + C5676 * C28194 + C28899 * C28195 +
            C29672 * C28196) *
               C154011 * C154146 -
           (C28341 * C28196 + C4687 * C28195 + C3214 * C28194 + C3211 * C28193 +
            C3210 * C28192) *
               C154011 * C154393) *
              C154464 +
          ((C3211 * C28192 + C3214 * C28193 + C4687 * C28194 + C28341 * C28195 +
            C29115 * C28196) *
               C154011 * C154393 -
           ((C134 * C29662 - C135 * C29661 - C134 * C29663 + C154181 * C29664) *
                C28196 +
            C29672 * C28195 + C28899 * C28194 + C5676 * C28193 +
            C4299 * C28192) *
               C154011 * C154146) *
              C1685) *
         C154047) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C7157 * C144 - C7158 * C136 - C7157 * C145 + C154481 * C160 +
             C7159 * C600 - C7160 * C584 - C7159 * C601 + C154470 * C620 +
             C7161 * C602 - C7162 * C585 - C7161 * C603 + C154445 * C621) *
                C24270 +
            (C30851 + C30852 + C30853) * C24271 + C30864 * C154442) *
               C154011 * C154393 -
           (C33274 * C154442 + (C31878 + C31879 + C31880) * C24271 +
            (C7161 * C2337 - C7162 * C2328 - C7161 * C2338 + C154445 * C2343 +
             C7159 * C602 - C7160 * C585 - C7159 * C603 + C154470 * C621 +
             C7157 * C600 - C7158 * C584 - C7157 * C601 + C154481 * C620) *
                C24270) *
               C154011 * C154146) *
              C154463 +
          (((C31880 + C31879 + C31878) * C24270 +
            (C31877 + C31876 + C31875) * C24271 +
            (C33281 + C33282 + C33283) * C154442) *
               C154011 * C154146 -
           (C32261 * C154442 + (C30856 + C30855 + C30854) * C24271 +
            (C30853 + C30852 + C30851) * C24270) *
               C154011 * C154393) *
              C154464 +
          ((C30864 * C24270 + (C30859 + C30858 + C30857) * C24271 +
            (C32268 + C32269 + C32270) * C154442) *
               C154011 * C154393 -
           ((C7161 * C30000 - C7162 * C29998 - C7161 * C30001 +
             C154445 * C30004 + C7159 * C28466 - C7160 * C28464 -
             C7159 * C28467 + C154470 * C28470 + C7157 * C5664 - C7158 * C5659 -
             C7157 * C5665 + C154481 * C5668) *
                C154442 +
            (C33283 + C33282 + C33281) * C24271 + C33274 * C24270) *
               C154011 * C154146) *
              C1685) *
         C154047) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C47141 * C144 - C47142 * C136 - C47141 * C145 + C47138 * C160 +
             C47143 * C600 - C47144 * C584 - C47143 * C601 + C47139 * C620 +
             C47145 * C602 - C47146 * C585 - C47145 * C603 + C154445 * C621) *
                C154164 * C154477 +
            (C47220 + C47221 + C47222) * C154164 * C154458 + C47236 * C154429) *
               C154393 -
           (C48319 * C154429 + (C47833 + C47834 + C47835) * C154164 * C154458 +
            (C47145 * C2337 - C47146 * C2328 - C47145 * C2338 +
             C154445 * C2343 + C47143 * C602 - C47144 * C585 - C47143 * C603 +
             C47139 * C621 + C47141 * C600 - C47142 * C584 - C47141 * C601 +
             C47138 * C620) *
                C154164 * C154477) *
               C154146) *
              C154463 +
          (((C47141 * C1135 - C47142 * C1129 - C47141 * C1136 + C47138 * C1147 +
             C47143 * C1554 - C47144 * C1545 - C47143 * C1555 + C47139 * C1560 +
             C47145 * C6274 - C47146 * C6263 - C47145 * C6275 +
             C154445 * C6281) *
                C154164 * C154477 +
            (C48652 + C48653 + C48654) * C154164 * C154458 +
            (C48655 + C48656 + C48657) * C154164 * C154429) *
               C154146 -
           (C48077 * C154429 + (C47531 + C47532 + C47533) * C154164 * C154458 +
            (C47145 * C1554 - C47146 * C1545 - C47145 * C1555 +
             C154445 * C1560 + C47143 * C1135 - C47144 * C1129 -
             C47143 * C1136 + C47139 * C1147 + C47141 * C363 - C47142 * C347 -
             C47141 * C364 + C47138 * C383) *
                C154164 * C154477) *
               C154393) *
              C154464 +
          (((C47141 * C365 - C47142 * C348 - C47141 * C366 + C47138 * C384 +
             C47143 * C1985 - C47144 * C1976 - C47143 * C1986 + C47139 * C1991 +
             C47145 * C3445 - C47146 * C3441 - C47145 * C3446 +
             C154445 * C3453) *
                C154164 * C154477 +
            (C47534 + C47535 + C47536) * C154164 * C154458 +
            (C47537 + C47538 + C47539) * C154164 * C154429) *
               C154393 -
           ((C47145 * C6264 - C47146 * C6258 - C47145 * C6265 +
             C154445 * C6276 + C47143 * C3449 - C47144 * C3443 -
             C47143 * C3450 + C47139 * C3455 + C47141 * C1981 - C47142 * C1974 -
             C47141 * C1982 + C47138 * C1989) *
                C154164 * C154429 +
            (C47145 * C6268 - C47146 * C6260 - C47145 * C6269 +
             C154445 * C6278 + C47143 * C3447 - C47144 * C3442 -
             C47143 * C3448 + C47139 * C3454 + C47141 * C1983 - C47142 * C1975 -
             C47141 * C1984 + C47138 * C1990) *
                C154164 * C154458 +
            (C47145 * C6272 - C47146 * C6262 - C47145 * C6273 +
             C154445 * C6280 + C47143 * C3445 - C47144 * C3441 -
             C47143 * C3446 + C47139 * C3453 + C47141 * C1985 - C47142 * C1976 -
             C47141 * C1986 + C47138 * C1991) *
                C154164 * C154477) *
               C154146) *
              C1685) *
         C154047) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C47141 * C144 - C47142 * C136 - C47141 * C145 + C47138 * C160 +
             C47143 * C600 - C47144 * C584 - C47143 * C601 + C47139 * C620 +
             C47145 * C602 - C47146 * C585 - C47145 * C603 + C154445 * C621) *
                C154480 +
            (C51712 + C51713 + C51714) * C154468 + C51725 * C154442) *
               C154011 * C154393 -
           (C54119 * C154442 + (C52727 + C52728 + C52729) * C154468 +
            (C47145 * C2337 - C47146 * C2328 - C47145 * C2338 +
             C154445 * C2343 + C47143 * C602 - C47144 * C585 - C47143 * C603 +
             C47139 * C621 + C47141 * C600 - C47142 * C584 - C47141 * C601 +
             C47138 * C620) *
                C154480) *
               C154011 * C154146) *
              C154463 +
          (((C52729 + C52728 + C52727) * C154480 +
            (C52726 + C52725 + C52724) * C154468 +
            (C54126 + C54127 + C54128) * C154442) *
               C154011 * C154146 -
           (C53110 * C154442 + (C51717 + C51716 + C51715) * C154468 +
            (C51714 + C51713 + C51712) * C154480) *
               C154011 * C154393) *
              C154464 +
          ((C51725 * C154480 + (C51720 + C51719 + C51718) * C154468 +
            (C53117 + C53118 + C53119) * C154442) *
               C154011 * C154393 -
           ((C47145 * C30000 - C47146 * C29998 - C47145 * C30001 +
             C154445 * C30004 + C47143 * C28466 - C47144 * C28464 -
             C47143 * C28467 + C47139 * C28470 + C47141 * C5664 -
             C47142 * C5659 - C47141 * C5665 + C47138 * C5668) *
                C154442 +
            (C54128 + C54127 + C54126) * C154468 + C54119 * C154480) *
               C154011 * C154146) *
              C1685) *
         C154047) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C55523 * C144 - C55524 * C136 - C55523 * C145 + C55518 * C160 +
            C55525 * C600 - C55526 * C584 - C55525 * C601 + C55519 * C620 +
            C55527 * C602 - C55528 * C585 - C55527 * C603 + C55520 * C621 +
            C55529 * C2337 - C55530 * C2328 - C55529 * C2338 + C55521 * C2343 +
            C55531 * C7777 - C55532 * C7773 - C55531 * C7778 + C55522 * C7785) *
               C154164 * C154011 * C154393 -
           (C55531 * C10602 - C55532 * C10597 - C55531 * C10603 +
            C55522 * C10606 + C55529 * C7777 - C55530 * C7773 - C55529 * C7778 +
            C55521 * C7785 + C55527 * C2337 - C55528 * C2328 - C55527 * C2338 +
            C55520 * C2343 + C55525 * C602 - C55526 * C585 - C55525 * C603 +
            C55519 * C621 + C55523 * C600 - C55524 * C584 - C55523 * C601 +
            C55518 * C620) *
               C154164 * C154011 * C154146) *
              C154463 +
          ((C55523 * C1135 - C55524 * C1129 - C55523 * C1136 + C55518 * C1147 +
            C55525 * C1554 - C55526 * C1545 - C55525 * C1555 + C55519 * C1560 +
            C55527 * C6274 - C55528 * C6263 - C55527 * C6275 + C55520 * C6281 +
            C55529 * C9282 - C55530 * C9277 - C55529 * C9283 + C55521 * C9286 +
            C55531 * C33869 - C55532 * C33866 - C55531 * C33870 +
            C55522 * C33872) *
               C154164 * C154011 * C154146 -
           (C55531 * C9282 - C55532 * C9277 - C55531 * C9283 + C55522 * C9286 +
            C55529 * C6274 - C55530 * C6263 - C55529 * C6275 + C55521 * C6281 +
            C55527 * C1554 - C55528 * C1545 - C55527 * C1555 + C55520 * C1560 +
            C55525 * C1135 - C55526 * C1129 - C55525 * C1136 + C55519 * C1147 +
            C55523 * C363 - C55524 * C347 - C55523 * C364 + C55518 * C383) *
               C154164 * C154011 * C154393) *
              C154464 +
          ((C55523 * C365 - C55524 * C348 - C55523 * C366 + C55518 * C384 +
            C55525 * C1985 - C55526 * C1976 - C55525 * C1986 + C55519 * C1991 +
            C55527 * C3445 - C55528 * C3441 - C55527 * C3446 + C55520 * C3453 +
            C55529 * C6272 - C55530 * C6262 - C55529 * C6273 + C55521 * C6280 +
            C55531 * C31084 - C55532 * C31082 - C55531 * C31085 +
            C55522 * C31088) *
               C154164 * C154011 * C154393 -
           (C55531 * C33867 - C55532 * C33865 - C55531 * C33868 +
            C55522 * C33871 + C55529 * C31084 - C55530 * C31082 -
            C55529 * C31085 + C55521 * C31088 + C55527 * C6272 -
            C55528 * C6262 - C55527 * C6273 + C55520 * C6280 + C55525 * C3445 -
            C55526 * C3441 - C55525 * C3446 + C55519 * C3453 + C55523 * C1985 -
            C55524 * C1976 - C55523 * C1986 + C55518 * C1991) *
               C154164 * C154011 * C154146) *
              C1685) *
         C154047) /
            (p * q * std::sqrt(p + q));
    d2ee[187] +=
        (-0.25 * std::pow(Pi, 2.5) *
             ((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                    C154164 * C123 +
                C211 * C124 + C212 * C125 + C213 * C126 + C214 * C127) *
                   C154082 * C1307 -
               (C448 * C127 + C449 * C126 + C450 * C125 + C451 * C124 +
                (C134 * C363 - C135 * C347 - C134 * C364 + C154181 * C383) *
                    C154164 * C123) *
                   C154082 * C154118) *
                  C1309 +
              ((C451 * C123 + C450 * C124 + C449 * C125 + C448 * C126 +
                C831 * C127) *
                   C154082 * C154118 -
               (C215 * C127 + C214 * C126 + C213 * C125 + C212 * C124 +
                C211 * C123) *
                   C154082 * C1307) *
                  C1310 +
              ((C212 * C123 + C213 * C124 + C214 * C125 + C215 * C126 +
                C216 * C127) *
                   C154082 * C1307 -
               ((C134 * C820 - C135 * C819 - C134 * C821 + C154181 * C822) *
                    C154164 * C127 +
                C831 * C126 + C448 * C125 + C449 * C124 + C450 * C123) *
                   C154082 * C154118) *
                  C1311) -
         0.25 * std::pow(Pi, 2.5) *
             (((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                   C154164 * C123 +
               C211 * C124 + C212 * C125 + C213 * C126 + C214 * C127) *
                  C154082 * C1394 -
              (C448 * C127 + C449 * C126 + C450 * C125 + C451 * C124 +
               (C134 * C363 - C135 * C347 - C134 * C364 + C154181 * C383) *
                   C154164 * C123) *
                  C154082 * C1395 +
              ((C134 * C365 - C135 * C348 - C134 * C366 + C154181 * C384) *
                   C154164 * C123 +
               C452 * C124 + C453 * C125 + C454 * C126 + C455 * C127) *
                  C154082 * C1396 -
              ((C134 * C1404 - C135 * C1399 - C134 * C1405 + C154181 * C1414) *
                   C154164 * C127 +
               (C134 * C1406 - C135 * C1400 - C134 * C1407 + C154181 * C1415) *
                   C154164 * C126 +
               (C134 * C1408 - C135 * C1401 - C134 * C1409 + C154181 * C1416) *
                   C154164 * C125 +
               (C134 * C1410 - C135 * C1402 - C134 * C1411 + C154181 * C1417) *
                   C154164 * C124 +
               (C134 * C1412 - C135 * C1403 - C134 * C1413 + C154181 * C1418) *
                   C154164 * C123) *
                  C154082 * C1397) *
             C154047 +
         0.5 * std::pow(Pi, 2.5) *
             ((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                    C154164 * C123 +
                C211 * C124 + C212 * C125 + C213 * C126 + C214 * C127) *
                   C577 -
               (C685 * C127 + C686 * C126 + C687 * C125 + C688 * C124 +
                (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                    C154164 * C123) *
                   C578 +
               ((C134 * C602 - C135 * C585 - C134 * C603 + C154181 * C621) *
                    C154164 * C123 +
                C689 * C124 + C690 * C125 + C691 * C126 + C692 * C127) *
                   C579) *
                  C1307 +
              (((C134 * C1135 - C135 * C1129 - C134 * C1136 + C154181 * C1147) *
                    C154164 * C123 +
                C1182 * C124 + C1183 * C125 + C1184 * C126 + C1185 * C127) *
                   C578 -
               (C448 * C127 + C449 * C126 + C450 * C125 + C451 * C124 +
                (C134 * C363 - C135 * C347 - C134 * C364 + C154181 * C383) *
                    C154164 * C123) *
                   C577 -
               ((C134 * C1546 - C135 * C1541 - C134 * C1547 + C154181 * C1556) *
                    C154164 * C127 +
                (C134 * C1548 - C135 * C1542 - C134 * C1549 + C154181 * C1557) *
                    C154164 * C126 +
                (C134 * C1550 - C135 * C1543 - C134 * C1551 + C154181 * C1558) *
                    C154164 * C125 +
                (C134 * C1552 - C135 * C1544 - C134 * C1553 + C154181 * C1559) *
                    C154164 * C124 +
                (C134 * C1554 - C135 * C1545 - C134 * C1555 + C154181 * C1560) *
                    C154164 * C123) *
                   C579) *
                  C154118) *
             C154047 -
         0.25 * std::pow(Pi, 2.5) *
             (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                     C154480 +
                 C3210 * C154468 + C3211 * C154442) *
                    C2902 +
                (C2906 + C2907 + C2908) * C2903 + C2920 * C154429) *
                   C154082 * C1307 -
               (C3734 * C154429 + (C3219 + C3174 + C3175) * C2903 +
                (C3214 * C154442 + C3211 * C154468 + C3210 * C154480) * C2902) *
                   C154082 * C154118) *
                  C1309 +
              (((C3175 + C3174 + C3219) * C2902 +
                (C3169 + C3168 + C3218) * C2903 +
                (C3731 + C3732 + C3733) * C154429) *
                   C154082 * C154118 -
               (C2921 * C154429 + (C2911 + C2910 + C2909) * C2903 +
                (C2908 + C2907 + C2906) * C2902) *
                   C154082 * C1307) *
                  C1310 +
              ((C2920 * C2902 + (C2914 + C2913 + C2912) * C2903 +
                (C2915 + C2916 + C2917) * C154429) *
                   C154082 * C1307 -
               (((C134 * C1404 - C135 * C1399 - C134 * C1405 +
                  C154181 * C1414) *
                     C154442 +
                 C447 * C154468 + C440 * C154480) *
                    C154429 +
                (C3733 + C3732 + C3731) * C2903 + C3734 * C2902) *
                   C154082 * C154118) *
                  C1311) -
         0.25 * std::pow(Pi, 2.5) *
             ((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                    C154480 +
                C3210 * C154468 + C3211 * C154442) *
                   C2902 +
               (C2906 + C2907 + C2908) * C2903 + C2920 * C154429) *
                  C154082 * C1394 -
              (C3734 * C154429 + (C3219 + C3174 + C3175) * C2903 +
               (C3214 * C154442 + C3211 * C154468 + C3210 * C154480) * C2902) *
                  C154082 * C1395 +
              ((C3211 * C154480 + C3214 * C154468 + C4687 * C154442) * C2902 +
               (C3180 + C3220 + C3221) * C2903 +
               (C3185 + C3222 + C3223) * C154429) *
                  C154082 * C1396 -
              (((C134 * C4671 - C135 * C4668 - C134 * C4672 + C154181 * C4677) *
                    C154442 +
                C3216 * C154468 + C3212 * C154480) *
                   C154429 +
               ((C134 * C4673 - C135 * C4669 - C134 * C4674 + C154181 * C4678) *
                    C154442 +
                C3215 * C154468 + C3213 * C154480) *
                   C2903 +
               ((C134 * C4675 - C135 * C4670 - C134 * C4676 + C154181 * C4679) *
                    C154442 +
                C4687 * C154468 + C3214 * C154480) *
                   C2902) *
                  C154082 * C1397) *
             C154047 +
         0.5 * std::pow(Pi, 2.5) *
             (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                     C154480 +
                 C3210 * C154468 + C3211 * C154442) *
                    C2902 +
                (C2906 + C2907 + C2908) * C2903 + C2920 * C154429) *
                   C577 -
               (C3960 * C154429 + (C3507 + C3468 + C3469) * C2903 +
                (C4299 * C154442 + C4300 * C154468 +
                 (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                     C154480) *
                    C2902) *
                   C578 +
               (((C134 * C602 - C135 * C585 - C134 * C603 + C154181 * C621) *
                     C154480 +
                 C4930 * C154468 + C4931 * C154442) *
                    C2902 +
                (C3470 + C3508 + C3509) * C2903 +
                (C3479 + C3510 + C3511) * C154429) *
                   C579) *
                  C1307 +
              (((C4300 * C154480 + C4299 * C154468 +
                 (C134 * C4258 - C135 * C4254 - C134 * C4259 +
                  C154181 * C4266) *
                     C154442) *
                    C2902 +
                (C4279 + C4280 + C4303) * C2903 +
                (C4285 + C4286 + C4304) * C154429) *
                   C578 -
               (C3734 * C154429 + (C3219 + C3174 + C3175) * C2903 +
                (C3214 * C154442 + C3211 * C154468 + C3210 * C154480) * C2902) *
                   C577 -
               (((C134 * C4908 - C135 * C4905 - C134 * C4909 +
                  C154181 * C4914) *
                     C154442 +
                 C3505 * C154468 + C3504 * C154480) *
                    C154429 +
                ((C134 * C4910 - C135 * C4906 - C134 * C4911 +
                  C154181 * C4915) *
                     C154442 +
                 C3503 * C154468 + C3502 * C154480) *
                    C2903 +
                ((C134 * C4912 - C135 * C4907 - C134 * C4913 +
                  C154181 * C4916) *
                     C154442 +
                 C4931 * C154468 + C4930 * C154480) *
                    C2902) *
                   C579) *
                  C154118) *
             C154047 +
         0.5 * std::pow(Pi, 2.5) *
             ((((C7157 * C144 - C7158 * C136 - C7157 * C145 + C154481 * C160 +
                 C7159 * C600 - C7160 * C584 - C7159 * C601 + C154470 * C620 +
                 C7161 * C602 - C7162 * C585 - C7161 * C603 + C154445 * C621) *
                    C154164 * C2902 +
                (C7236 + C7237 + C7238) * C154164 * C2903 + C7252 * C154429) *
                   C154082 * C1307 -
               (C8109 * C154429 + (C7547 + C7548 + C7549) * C154164 * C2903 +
                (C7161 * C1554 - C7162 * C1545 - C7161 * C1555 +
                 C154445 * C1560 + C7159 * C1135 - C7160 * C1129 -
                 C7159 * C1136 + C154470 * C1147 + C7157 * C363 - C7158 * C347 -
                 C7157 * C364 + C154481 * C383) *
                    C154164 * C2902) *
                   C154082 * C154118) *
                  C1309 +
              (((C7549 + C7548 + C7547) * C154164 * C2902 +
                (C7546 + C7545 + C7544) * C154164 * C2903 +
                (C8113 + C8114 + C8115) * C154164 * C154429) *
                   C154082 * C154118 -
               (C7253 * C154429 + (C7241 + C7240 + C7239) * C154164 * C2903 +
                (C7238 + C7237 + C7236) * C154164 * C2902) *
                   C154082 * C1307) *
                  C1310 +
              ((C7252 * C2902 + (C7244 + C7243 + C7242) * C154164 * C2903 +
                (C7245 + C7246 + C7247) * C154164 * C154429) *
                   C154082 * C1307 -
               ((C7161 * C1546 - C7162 * C1541 - C7161 * C1547 +
                 C154445 * C1556 + C7159 * C1143 - C7160 * C1133 -
                 C7159 * C1144 + C154470 * C1151 + C7157 * C355 - C7158 * C343 -
                 C7157 * C356 + C154481 * C379) *
                    C154164 * C154429 +
                (C8115 + C8114 + C8113) * C154164 * C2903 + C8109 * C2902) *
                   C154082 * C154118) *
                  C1311) +
         0.5 * std::pow(Pi, 2.5) *
             (((C7157 * C144 - C7158 * C136 - C7157 * C145 + C154481 * C160 +
                C7159 * C600 - C7160 * C584 - C7159 * C601 + C154470 * C620 +
                C7161 * C602 - C7162 * C585 - C7161 * C603 + C154445 * C621) *
                   C154164 * C2902 +
               (C7236 + C7237 + C7238) * C154164 * C2903 + C7252 * C154429) *
                  C154082 * C1394 -
              (C8109 * C154429 + (C7547 + C7548 + C7549) * C154164 * C2903 +
               (C7161 * C1554 - C7162 * C1545 - C7161 * C1555 +
                C154445 * C1560 + C7159 * C1135 - C7160 * C1129 -
                C7159 * C1136 + C154470 * C1147 + C7157 * C363 - C7158 * C347 -
                C7157 * C364 + C154481 * C383) *
                   C154164 * C2902) *
                  C154082 * C1395 +
              ((C7157 * C365 - C7158 * C348 - C7157 * C366 + C154481 * C384 +
                C7159 * C1985 - C7160 * C1976 - C7159 * C1986 +
                C154470 * C1991 + C7161 * C3445 - C7162 * C3441 -
                C7161 * C3446 + C154445 * C3453) *
                   C154164 * C2902 +
               (C7550 + C7551 + C7552) * C154164 * C2903 +
               (C7553 + C7554 + C7555) * C154164 * C154429) *
                  C154082 * C1396 -
              ((C7161 * C4908 - C7162 * C4905 - C7161 * C4909 +
                C154445 * C4914 + C7159 * C4262 - C7160 * C4256 -
                C7159 * C4263 + C154470 * C4268 + C7157 * C1408 -
                C7158 * C1401 - C7157 * C1409 + C154481 * C1416) *
                   C154164 * C154429 +
               (C7161 * C4910 - C7162 * C4906 - C7161 * C4911 +
                C154445 * C4915 + C7159 * C4260 - C7160 * C4255 -
                C7159 * C4261 + C154470 * C4267 + C7157 * C1410 -
                C7158 * C1402 - C7157 * C1411 + C154481 * C1417) *
                   C154164 * C2903 +
               (C7161 * C4912 - C7162 * C4907 - C7161 * C4913 +
                C154445 * C4916 + C7159 * C4258 - C7160 * C4254 -
                C7159 * C4259 + C154470 * C4266 + C7157 * C1412 -
                C7158 * C1403 - C7157 * C1413 + C154481 * C1418) *
                   C154164 * C2902) *
                  C154082 * C1397) *
             C154047) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C7157 * C144 - C7158 * C136 - C7157 * C145 + C154481 * C160 +
             C7159 * C600 - C7160 * C584 - C7159 * C601 + C154470 * C620 +
             C7161 * C602 - C7162 * C585 - C7161 * C603 + C154445 * C621) *
                C154164 * C2902 +
            (C7236 + C7237 + C7238) * C154164 * C2903 + C7252 * C154429) *
               C577 -
           (C8351 * C154429 + (C7865 + C7866 + C7867) * C154164 * C2903 +
            (C7161 * C2337 - C7162 * C2328 - C7161 * C2338 + C154445 * C2343 +
             C7159 * C602 - C7160 * C585 - C7159 * C603 + C154470 * C621 +
             C7157 * C600 - C7158 * C584 - C7157 * C601 + C154481 * C620) *
                C154164 * C2902) *
               C578 +
           ((C7157 * C602 - C7158 * C585 - C7157 * C603 + C154481 * C621 +
             C7159 * C2337 - C7160 * C2328 - C7159 * C2338 + C154470 * C2343 +
             C7161 * C7777 - C7162 * C7773 - C7161 * C7778 + C154445 * C7785) *
                C154164 * C2902 +
            (C7868 + C7869 + C7870) * C154164 * C2903 +
            (C7871 + C7872 + C7873) * C154164 * C154429) *
               C579) *
              C1307 +
          (((C7157 * C1135 - C7158 * C1129 - C7157 * C1136 + C154481 * C1147 +
             C7159 * C1554 - C7160 * C1545 - C7159 * C1555 + C154470 * C1560 +
             C7161 * C6274 - C7162 * C6263 - C7161 * C6275 + C154445 * C6281) *
                C154164 * C2902 +
            (C8688 + C8689 + C8690) * C154164 * C2903 +
            (C8691 + C8692 + C8693) * C154164 * C154429) *
               C578 -
           (C8109 * C154429 + (C7547 + C7548 + C7549) * C154164 * C2903 +
            (C7161 * C1554 - C7162 * C1545 - C7161 * C1555 + C154445 * C1560 +
             C7159 * C1135 - C7160 * C1129 - C7159 * C1136 + C154470 * C1147 +
             C7157 * C363 - C7158 * C347 - C7157 * C364 + C154481 * C383) *
                C154164 * C2902) *
               C577 -
           ((C7161 * C9278 - C7162 * C9275 - C7161 * C9279 + C154445 * C9284 +
             C7159 * C6266 - C7160 * C6259 - C7159 * C6267 + C154470 * C6277 +
             C7157 * C1550 - C7158 * C1543 - C7157 * C1551 + C154481 * C1558) *
                C154164 * C154429 +
            (C7161 * C9280 - C7162 * C9276 - C7161 * C9281 + C154445 * C9285 +
             C7159 * C6270 - C7160 * C6261 - C7159 * C6271 + C154470 * C6279 +
             C7157 * C1552 - C7158 * C1544 - C7157 * C1553 + C154481 * C1559) *
                C154164 * C2903 +
            (C7161 * C9282 - C7162 * C9277 - C7161 * C9283 + C154445 * C9286 +
             C7159 * C6274 - C7160 * C6263 - C7159 * C6275 + C154470 * C6281 +
             C7157 * C1554 - C7158 * C1545 - C7157 * C1555 + C154481 * C1560) *
                C154164 * C2902) *
               C579) *
              C154118) *
         C154047) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C24270 +
             C3210 * C24271 + C3211 * C154442) *
                C154477 +
            (C24277 + C24278 + C24279) * C154458 + C24291 * C154429) *
               C154082 * C1307 -
           (C24975 * C154429 + (C24514 + C24515 + C24516) * C154458 +
            (C3214 * C154442 + C3211 * C24271 + C3210 * C24270) * C154477) *
               C154082 * C154118) *
              C1309 +
          (((C24516 + C24515 + C24514) * C154477 +
            (C24513 + C24512 + C24511) * C154458 +
            (C24972 + C24973 + C24974) * C154429) *
               C154082 * C154118 -
           (C24292 * C154429 + (C24282 + C24281 + C24280) * C154458 +
            (C24279 + C24278 + C24277) * C154477) *
               C154082 * C1307) *
              C1310 +
          ((C24291 * C154477 + (C24285 + C24284 + C24283) * C154458 +
            (C24286 + C24287 + C24288) * C154429) *
               C154082 * C1307 -
           (((C134 * C1404 - C135 * C1399 - C134 * C1405 + C154181 * C1414) *
                 C154442 +
             C447 * C24271 + C440 * C24270) *
                C154429 +
            (C24974 + C24973 + C24972) * C154458 + C24975 * C154477) *
               C154082 * C154118) *
              C1311)) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                C24270 +
            C3210 * C24271 + C3211 * C154442) *
               C154477 +
           (C24277 + C24278 + C24279) * C154458 + C24291 * C154429) *
              C154082 * C1394 -
          (C24975 * C154429 + (C24514 + C24515 + C24516) * C154458 +
           (C3214 * C154442 + C3211 * C24271 + C3210 * C24270) * C154477) *
              C154082 * C1395 +
          ((C3211 * C24270 + C3214 * C24271 + C4687 * C154442) * C154477 +
           (C24517 + C24518 + C24519) * C154458 +
           (C24520 + C24521 + C24522) * C154429) *
              C154082 * C1396 -
          (((C134 * C4671 - C135 * C4668 - C134 * C4672 + C154181 * C4677) *
                C154442 +
            C3216 * C24271 + C3212 * C24270) *
               C154429 +
           ((C134 * C4673 - C135 * C4669 - C134 * C4674 + C154181 * C4678) *
                C154442 +
            C3215 * C24271 + C3213 * C24270) *
               C154458 +
           ((C134 * C4675 - C135 * C4670 - C134 * C4676 + C154181 * C4679) *
                C154442 +
            C4687 * C24271 + C3214 * C24270) *
               C154477) *
              C154082 * C1397) *
         C154047) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C24270 +
             C3210 * C24271 + C3211 * C154442) *
                C154477 +
            (C24277 + C24278 + C24279) * C154458 + C24291 * C154429) *
               C577 -
           (C25198 * C154429 + (C24744 + C24745 + C24746) * C154458 +
            (C4299 * C154442 + C4300 * C24271 +
             (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                 C24270) *
                C154477) *
               C578 +
           (((C134 * C602 - C135 * C585 - C134 * C603 + C154181 * C621) *
                 C24270 +
             C4930 * C24271 + C4931 * C154442) *
                C154477 +
            (C24747 + C24748 + C24749) * C154458 +
            (C24750 + C24751 + C24752) * C154429) *
               C579) *
              C1307 +
          (((C4300 * C24270 + C4299 * C24271 + C5676 * C154442) * C154477 +
            (C25489 + C25490 + C25491) * C154458 +
            (C25492 + C25493 + C25494) * C154429) *
               C578 -
           (C24975 * C154429 + (C24514 + C24515 + C24516) * C154458 +
            (C3214 * C154442 + C3211 * C24271 + C3210 * C24270) * C154477) *
               C577 -
           (((C134 * C4908 - C135 * C4905 - C134 * C4909 + C154181 * C4914) *
                 C154442 +
             C3505 * C24271 + C3504 * C24270) *
                C154429 +
            ((C134 * C4910 - C135 * C4906 - C134 * C4911 + C154181 * C4915) *
                 C154442 +
             C3503 * C24271 + C3502 * C24270) *
                C154458 +
            ((C134 * C4912 - C135 * C4907 - C134 * C4913 + C154181 * C4916) *
                 C154442 +
             C4931 * C24271 + C4930 * C24270) *
                C154477) *
               C579) *
              C154118) *
         C154047) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                C28192 +
            C3210 * C28193 + C3211 * C28194 + C3214 * C28195 + C4687 * C28196) *
               C154011 * C154082 * C1307 -
           (C28341 * C28196 + C4687 * C28195 + C3214 * C28194 + C3211 * C28193 +
            C3210 * C28192) *
               C154011 * C154082 * C154118) *
              C1309 +
          ((C443 * C28192 + C444 * C28193 + C3213 * C28194 + C3215 * C28195 +
            C28342 * C28196) *
               C154011 * C154082 * C154118 -
           (C3215 * C28196 + C3213 * C28195 + C444 * C28194 + C443 * C28193 +
            C205 * C28192) *
               C154011 * C154082 * C1307) *
              C1310 +
          ((C206 * C28192 + C442 * C28193 + C445 * C28194 + C3212 * C28195 +
            C3216 * C28196) *
               C154011 * C154082 * C1307 -
           ((C134 * C4671 - C135 * C4668 - C134 * C4672 + C154181 * C4677) *
                C28196 +
            C3216 * C28195 + C3212 * C28194 + C445 * C28193 + C442 * C28192) *
               C154011 * C154082 * C154118) *
              C1311)) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         (((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) * C28192 +
           C3210 * C28193 + C3211 * C28194 + C3214 * C28195 + C4687 * C28196) *
              C154011 * C154082 * C1394 -
          (C28341 * C28196 + C4687 * C28195 + C3214 * C28194 + C3211 * C28193 +
           C3210 * C28192) *
              C154011 * C154082 * C1395 +
          (C3211 * C28192 + C3214 * C28193 + C4687 * C28194 + C28341 * C28195 +
           C29115 * C28196) *
              C154011 * C154082 * C1396 -
          ((C134 * C29105 - C135 * C29104 - C134 * C29106 + C154181 * C29107) *
               C28196 +
           C29115 * C28195 + C28341 * C28194 + C4687 * C28193 +
           C3214 * C28192) *
              C154011 * C154082 * C1397) *
         C154047) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                C28192 +
            C3210 * C28193 + C3211 * C28194 + C3214 * C28195 + C4687 * C28196) *
               C154011 * C577 -
           (C28899 * C28196 + C5676 * C28195 + C4299 * C28194 + C4300 * C28193 +
            (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                C28192) *
               C154011 * C578 +
           ((C134 * C602 - C135 * C585 - C134 * C603 + C154181 * C621) *
                C28192 +
            C4930 * C28193 + C4931 * C28194 + C29254 * C28195 +
            C29255 * C28196) *
               C154011 * C579) *
              C1307 +
          ((C4300 * C28192 + C4299 * C28193 + C5676 * C28194 + C28899 * C28195 +
            (C134 * C28880 - C135 * C28878 - C134 * C28881 + C154181 * C28884) *
                C28196) *
               C154011 * C578 -
           (C28341 * C28196 + C4687 * C28195 + C3214 * C28194 + C3211 * C28193 +
            C3210 * C28192) *
               C154011 * C577 -
           ((C134 * C29238 - C135 * C29237 - C134 * C29239 + C154181 * C29240) *
                C28196 +
            C29255 * C28195 + C29254 * C28194 + C4931 * C28193 +
            C4930 * C28192) *
               C154011 * C579) *
              C154118) *
         C154047) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C7157 * C144 - C7158 * C136 - C7157 * C145 + C154481 * C160 +
             C7159 * C600 - C7160 * C584 - C7159 * C601 + C154470 * C620 +
             C7161 * C602 - C7162 * C585 - C7161 * C603 + C154445 * C621) *
                C24270 +
            (C30851 + C30852 + C30853) * C24271 + C30864 * C154442) *
               C154011 * C154082 * C1307 -
           ((C30857 + C30858 + C30859) * C154442 +
            (C30856 + C30855 + C30854) * C24271 +
            (C30853 + C30852 + C30851) * C24270) *
               C154011 * C154082 * C154118) *
              C1309 +
          (((C7549 + C7548 + C7547) * C24270 +
            (C7550 + C7551 + C7552) * C24271 +
            (C30860 + C30861 + C30862) * C154442) *
               C154011 * C154082 * C154118 -
           (C30838 * C154442 + (C7547 + C7548 + C7549) * C24271 +
            (C7238 + C7237 + C7236) * C24270) *
               C154011 * C154082 * C1307) *
              C1310 +
          ((C7250 * C24270 + (C7546 + C7545 + C7544) * C24271 +
            (C7553 + C7554 + C7555) * C154442) *
               C154011 * C154082 * C1307 -
           ((C7161 * C4908 - C7162 * C4905 - C7161 * C4909 + C154445 * C4914 +
             C7159 * C4262 - C7160 * C4256 - C7159 * C4263 + C154470 * C4268 +
             C7157 * C1408 - C7158 * C1401 - C7157 * C1409 + C154481 * C1416) *
                C154442 +
            (C7555 + C7554 + C7553) * C24271 + C8105 * C24270) *
               C154011 * C154082 * C154118) *
              C1311)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C7157 * C144 - C7158 * C136 - C7157 * C145 + C154481 * C160 +
            C7159 * C600 - C7160 * C584 - C7159 * C601 + C154470 * C620 +
            C7161 * C602 - C7162 * C585 - C7161 * C603 + C154445 * C621) *
               C24270 +
           (C30851 + C30852 + C30853) * C24271 + C30864 * C154442) *
              C154011 * C154082 * C1394 -
          (C32261 * C154442 + (C30856 + C30855 + C30854) * C24271 +
           (C30853 + C30852 + C30851) * C24270) *
              C154011 * C154082 * C1395 +
          (C30864 * C24270 + (C30859 + C30858 + C30857) * C24271 +
           (C32268 + C32269 + C32270) * C154442) *
              C154011 * C154082 * C1396 -
          ((C7161 * C29238 - C7162 * C29237 - C7161 * C29239 +
            C154445 * C29240 + C7159 * C28880 - C7160 * C28878 -
            C7159 * C28881 + C154470 * C28884 + C7157 * C4675 - C7158 * C4670 -
            C7157 * C4676 + C154481 * C4679) *
               C154442 +
           (C32270 + C32269 + C32268) * C24271 + C32261 * C24270) *
              C154011 * C154082 * C1397) *
         C154047) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C7157 * C144 - C7158 * C136 - C7157 * C145 + C154481 * C160 +
             C7159 * C600 - C7160 * C584 - C7159 * C601 + C154470 * C620 +
             C7161 * C602 - C7162 * C585 - C7161 * C603 + C154445 * C621) *
                C24270 +
            (C30851 + C30852 + C30853) * C24271 + C30864 * C154442) *
               C154011 * C577 -
           ((C31875 + C31876 + C31877) * C154442 +
            (C31878 + C31879 + C31880) * C24271 +
            (C7161 * C2337 - C7162 * C2328 - C7161 * C2338 + C154445 * C2343 +
             C7159 * C602 - C7160 * C585 - C7159 * C603 + C154470 * C621 +
             C7157 * C600 - C7158 * C584 - C7157 * C601 + C154481 * C620) *
                C24270) *
               C154011 * C578 +
           ((C7157 * C602 - C7158 * C585 - C7157 * C603 + C154481 * C621 +
             C7159 * C2337 - C7160 * C2328 - C7159 * C2338 + C154470 * C2343 +
             C7161 * C7777 - C7162 * C7773 - C7161 * C7778 + C154445 * C7785) *
                C24270 +
            (C32529 + C32530 + C32531) * C24271 +
            (C32532 + C32533 + C32534) * C154442) *
               C154011 * C579) *
              C1307 +
          (((C31880 + C31879 + C31878) * C24270 +
            (C31877 + C31876 + C31875) * C24271 +
            (C7157 * C4258 - C7158 * C4254 - C7157 * C4259 + C154481 * C4266 +
             C7159 * C4912 - C7160 * C4907 - C7159 * C4913 + C154470 * C4916 +
             C7161 * C30002 - C7162 * C29999 - C7161 * C30003 +
             C154445 * C30005) *
                C154442) *
               C154011 * C578 -
           (C32261 * C154442 + (C30856 + C30855 + C30854) * C24271 +
            (C30853 + C30852 + C30851) * C24270) *
               C154011 * C577 -
           ((C7161 * C32489 - C7162 * C32488 - C7161 * C32490 +
             C154445 * C32491 + C7159 * C30002 - C7160 * C29999 -
             C7159 * C30003 + C154470 * C30005 + C7157 * C4912 - C7158 * C4907 -
             C7157 * C4913 + C154481 * C4916) *
                C154442 +
            (C32534 + C32533 + C32532) * C24271 +
            (C32531 + C32530 + C32529) * C24270) *
               C154011 * C579) *
              C154118) *
         C154047) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C47141 * C144 - C47142 * C136 - C47141 * C145 + C47138 * C160 +
             C47143 * C600 - C47144 * C584 - C47143 * C601 + C47139 * C620 +
             C47145 * C602 - C47146 * C585 - C47145 * C603 + C154445 * C621) *
                C154164 * C154477 +
            (C47220 + C47221 + C47222) * C154164 * C154458 + C47236 * C154429) *
               C154082 * C1307 -
           (C48077 * C154429 + (C47531 + C47532 + C47533) * C154164 * C154458 +
            (C47145 * C1554 - C47146 * C1545 - C47145 * C1555 +
             C154445 * C1560 + C47143 * C1135 - C47144 * C1129 -
             C47143 * C1136 + C47139 * C1147 + C47141 * C363 - C47142 * C347 -
             C47141 * C364 + C47138 * C383) *
                C154164 * C154477) *
               C154082 * C154118) *
              C1309 +
          (((C47533 + C47532 + C47531) * C154164 * C154477 +
            (C47530 + C47529 + C47528) * C154164 * C154458 +
            (C48081 + C48082 + C48083) * C154164 * C154429) *
               C154082 * C154118 -
           (C47237 * C154429 + (C47225 + C47224 + C47223) * C154164 * C154458 +
            (C47222 + C47221 + C47220) * C154164 * C154477) *
               C154082 * C1307) *
              C1310 +
          ((C47236 * C154477 + (C47228 + C47227 + C47226) * C154164 * C154458 +
            (C47229 + C47230 + C47231) * C154164 * C154429) *
               C154082 * C1307 -
           ((C47145 * C1546 - C47146 * C1541 - C47145 * C1547 +
             C154445 * C1556 + C47143 * C1143 - C47144 * C1133 -
             C47143 * C1144 + C47139 * C1151 + C47141 * C355 - C47142 * C343 -
             C47141 * C356 + C47138 * C379) *
                C154164 * C154429 +
            (C48083 + C48082 + C48081) * C154164 * C154458 + C48077 * C154477) *
               C154082 * C154118) *
              C1311)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C47141 * C144 - C47142 * C136 - C47141 * C145 + C47138 * C160 +
            C47143 * C600 - C47144 * C584 - C47143 * C601 + C47139 * C620 +
            C47145 * C602 - C47146 * C585 - C47145 * C603 + C154445 * C621) *
               C154164 * C154477 +
           (C47220 + C47221 + C47222) * C154164 * C154458 + C47236 * C154429) *
              C154082 * C1394 -
          (C48077 * C154429 + (C47531 + C47532 + C47533) * C154164 * C154458 +
           (C47145 * C1554 - C47146 * C1545 - C47145 * C1555 + C154445 * C1560 +
            C47143 * C1135 - C47144 * C1129 - C47143 * C1136 + C47139 * C1147 +
            C47141 * C363 - C47142 * C347 - C47141 * C364 + C47138 * C383) *
               C154164 * C154477) *
              C154082 * C1395 +
          ((C47141 * C365 - C47142 * C348 - C47141 * C366 + C47138 * C384 +
            C47143 * C1985 - C47144 * C1976 - C47143 * C1986 + C47139 * C1991 +
            C47145 * C3445 - C47146 * C3441 - C47145 * C3446 +
            C154445 * C3453) *
               C154164 * C154477 +
           (C47534 + C47535 + C47536) * C154164 * C154458 +
           (C47537 + C47538 + C47539) * C154164 * C154429) *
              C154082 * C1396 -
          ((C47145 * C4908 - C47146 * C4905 - C47145 * C4909 + C154445 * C4914 +
            C47143 * C4262 - C47144 * C4256 - C47143 * C4263 + C47139 * C4268 +
            C47141 * C1408 - C47142 * C1401 - C47141 * C1409 + C47138 * C1416) *
               C154164 * C154429 +
           (C47145 * C4910 - C47146 * C4906 - C47145 * C4911 + C154445 * C4915 +
            C47143 * C4260 - C47144 * C4255 - C47143 * C4261 + C47139 * C4267 +
            C47141 * C1410 - C47142 * C1402 - C47141 * C1411 + C47138 * C1417) *
               C154164 * C154458 +
           (C47145 * C4912 - C47146 * C4907 - C47145 * C4913 + C154445 * C4916 +
            C47143 * C4258 - C47144 * C4254 - C47143 * C4259 + C47139 * C4266 +
            C47141 * C1412 - C47142 * C1403 - C47141 * C1413 + C47138 * C1418) *
               C154164 * C154477) *
              C154082 * C1397) *
         C154047) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C47141 * C144 - C47142 * C136 - C47141 * C145 + C47138 * C160 +
             C47143 * C600 - C47144 * C584 - C47143 * C601 + C47139 * C620 +
             C47145 * C602 - C47146 * C585 - C47145 * C603 + C154445 * C621) *
                C154164 * C154477 +
            (C47220 + C47221 + C47222) * C154164 * C154458 + C47236 * C154429) *
               C577 -
           (C48319 * C154429 + (C47833 + C47834 + C47835) * C154164 * C154458 +
            (C47145 * C2337 - C47146 * C2328 - C47145 * C2338 +
             C154445 * C2343 + C47143 * C602 - C47144 * C585 - C47143 * C603 +
             C47139 * C621 + C47141 * C600 - C47142 * C584 - C47141 * C601 +
             C47138 * C620) *
                C154164 * C154477) *
               C578 +
           ((C47141 * C602 - C47142 * C585 - C47141 * C603 + C47138 * C621 +
             C47143 * C2337 - C47144 * C2328 - C47143 * C2338 + C47139 * C2343 +
             C47145 * C7777 - C47146 * C7773 - C47145 * C7778 +
             C154445 * C7785) *
                C154164 * C154477 +
            (C47836 + C47837 + C47838) * C154164 * C154458 +
            (C47839 + C47840 + C47841) * C154164 * C154429) *
               C579) *
              C1307 +
          (((C47141 * C1135 - C47142 * C1129 - C47141 * C1136 + C47138 * C1147 +
             C47143 * C1554 - C47144 * C1545 - C47143 * C1555 + C47139 * C1560 +
             C47145 * C6274 - C47146 * C6263 - C47145 * C6275 +
             C154445 * C6281) *
                C154164 * C154477 +
            (C48652 + C48653 + C48654) * C154164 * C154458 +
            (C48655 + C48656 + C48657) * C154164 * C154429) *
               C578 -
           (C48077 * C154429 + (C47531 + C47532 + C47533) * C154164 * C154458 +
            (C47145 * C1554 - C47146 * C1545 - C47145 * C1555 +
             C154445 * C1560 + C47143 * C1135 - C47144 * C1129 -
             C47143 * C1136 + C47139 * C1147 + C47141 * C363 - C47142 * C347 -
             C47141 * C364 + C47138 * C383) *
                C154164 * C154477) *
               C577 -
           ((C47145 * C9278 - C47146 * C9275 - C47145 * C9279 +
             C154445 * C9284 + C47143 * C6266 - C47144 * C6259 -
             C47143 * C6267 + C47139 * C6277 + C47141 * C1550 - C47142 * C1543 -
             C47141 * C1551 + C47138 * C1558) *
                C154164 * C154429 +
            (C47145 * C9280 - C47146 * C9276 - C47145 * C9281 +
             C154445 * C9285 + C47143 * C6270 - C47144 * C6261 -
             C47143 * C6271 + C47139 * C6279 + C47141 * C1552 - C47142 * C1544 -
             C47141 * C1553 + C47138 * C1559) *
                C154164 * C154458 +
            (C47145 * C9282 - C47146 * C9277 - C47145 * C9283 +
             C154445 * C9286 + C47143 * C6274 - C47144 * C6263 -
             C47143 * C6275 + C47139 * C6281 + C47141 * C1554 - C47142 * C1545 -
             C47141 * C1555 + C47138 * C1560) *
                C154164 * C154477) *
               C579) *
              C154118) *
         C154047) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C47141 * C144 - C47142 * C136 - C47141 * C145 + C47138 * C160 +
             C47143 * C600 - C47144 * C584 - C47143 * C601 + C47139 * C620 +
             C47145 * C602 - C47146 * C585 - C47145 * C603 + C154445 * C621) *
                C154480 +
            (C51712 + C51713 + C51714) * C154468 + C51725 * C154442) *
               C154011 * C154082 * C1307 -
           ((C51718 + C51719 + C51720) * C154442 +
            (C51717 + C51716 + C51715) * C154468 +
            (C51714 + C51713 + C51712) * C154480) *
               C154011 * C154082 * C154118) *
              C1309 +
          (((C47533 + C47532 + C47531) * C154480 +
            (C47534 + C47535 + C47536) * C154468 +
            (C51721 + C51722 + C51723) * C154442) *
               C154011 * C154082 * C154118 -
           (C51699 * C154442 + (C47531 + C47532 + C47533) * C154468 +
            (C47222 + C47221 + C47220) * C154480) *
               C154011 * C154082 * C1307) *
              C1310 +
          ((C47234 * C154480 + (C47530 + C47529 + C47528) * C154468 +
            (C47537 + C47538 + C47539) * C154442) *
               C154011 * C154082 * C1307 -
           ((C47145 * C4908 - C47146 * C4905 - C47145 * C4909 +
             C154445 * C4914 + C47143 * C4262 - C47144 * C4256 -
             C47143 * C4263 + C47139 * C4268 + C47141 * C1408 - C47142 * C1401 -
             C47141 * C1409 + C47138 * C1416) *
                C154442 +
            (C47539 + C47538 + C47537) * C154468 + C48073 * C154480) *
               C154011 * C154082 * C154118) *
              C1311)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C47141 * C144 - C47142 * C136 - C47141 * C145 + C47138 * C160 +
            C47143 * C600 - C47144 * C584 - C47143 * C601 + C47139 * C620 +
            C47145 * C602 - C47146 * C585 - C47145 * C603 + C154445 * C621) *
               C154480 +
           (C51712 + C51713 + C51714) * C154468 + C51725 * C154442) *
              C154011 * C154082 * C1394 -
          (C53110 * C154442 + (C51717 + C51716 + C51715) * C154468 +
           (C51714 + C51713 + C51712) * C154480) *
              C154011 * C154082 * C1395 +
          (C51725 * C154480 + (C51720 + C51719 + C51718) * C154468 +
           (C53117 + C53118 + C53119) * C154442) *
              C154011 * C154082 * C1396 -
          ((C47145 * C29238 - C47146 * C29237 - C47145 * C29239 +
            C154445 * C29240 + C47143 * C28880 - C47144 * C28878 -
            C47143 * C28881 + C47139 * C28884 + C47141 * C4675 -
            C47142 * C4670 - C47141 * C4676 + C47138 * C4679) *
               C154442 +
           (C53119 + C53118 + C53117) * C154468 + C53110 * C154480) *
              C154011 * C154082 * C1397) *
         C154047) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C47141 * C144 - C47142 * C136 - C47141 * C145 + C47138 * C160 +
             C47143 * C600 - C47144 * C584 - C47143 * C601 + C47139 * C620 +
             C47145 * C602 - C47146 * C585 - C47145 * C603 + C154445 * C621) *
                C154480 +
            (C51712 + C51713 + C51714) * C154468 + C51725 * C154442) *
               C154011 * C577 -
           ((C52724 + C52725 + C52726) * C154442 +
            (C52727 + C52728 + C52729) * C154468 +
            (C47145 * C2337 - C47146 * C2328 - C47145 * C2338 +
             C154445 * C2343 + C47143 * C602 - C47144 * C585 - C47143 * C603 +
             C47139 * C621 + C47141 * C600 - C47142 * C584 - C47141 * C601 +
             C47138 * C620) *
                C154480) *
               C154011 * C578 +
           ((C47141 * C602 - C47142 * C585 - C47141 * C603 + C47138 * C621 +
             C47143 * C2337 - C47144 * C2328 - C47143 * C2338 + C47139 * C2343 +
             C47145 * C7777 - C47146 * C7773 - C47145 * C7778 +
             C154445 * C7785) *
                C154480 +
            (C53374 + C53375 + C53376) * C154468 +
            (C53377 + C53378 + C53379) * C154442) *
               C154011 * C579) *
              C1307 +
          (((C52729 + C52728 + C52727) * C154480 +
            (C52726 + C52725 + C52724) * C154468 +
            (C47141 * C4258 - C47142 * C4254 - C47141 * C4259 + C47138 * C4266 +
             C47143 * C4912 - C47144 * C4907 - C47143 * C4913 + C47139 * C4916 +
             C47145 * C30002 - C47146 * C29999 - C47145 * C30003 +
             C154445 * C30005) *
                C154442) *
               C154011 * C578 -
           (C53110 * C154442 + (C51717 + C51716 + C51715) * C154468 +
            (C51714 + C51713 + C51712) * C154480) *
               C154011 * C577 -
           ((C47145 * C32489 - C47146 * C32488 - C47145 * C32490 +
             C154445 * C32491 + C47143 * C30002 - C47144 * C29999 -
             C47143 * C30003 + C47139 * C30005 + C47141 * C4912 -
             C47142 * C4907 - C47141 * C4913 + C47138 * C4916) *
                C154442 +
            (C53379 + C53378 + C53377) * C154468 +
            (C53376 + C53375 + C53374) * C154480) *
               C154011 * C579) *
              C154118) *
         C154047) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C55523 * C144 - C55524 * C136 - C55523 * C145 + C55518 * C160 +
            C55525 * C600 - C55526 * C584 - C55525 * C601 + C55519 * C620 +
            C55527 * C602 - C55528 * C585 - C55527 * C603 + C55520 * C621 +
            C55529 * C2337 - C55530 * C2328 - C55529 * C2338 + C55521 * C2343 +
            C55531 * C7777 - C55532 * C7773 - C55531 * C7778 + C55522 * C7785) *
               C154164 * C154011 * C154082 * C1307 -
           (C55531 * C9282 - C55532 * C9277 - C55531 * C9283 + C55522 * C9286 +
            C55529 * C6274 - C55530 * C6263 - C55529 * C6275 + C55521 * C6281 +
            C55527 * C1554 - C55528 * C1545 - C55527 * C1555 + C55520 * C1560 +
            C55525 * C1135 - C55526 * C1129 - C55525 * C1136 + C55519 * C1147 +
            C55523 * C363 - C55524 * C347 - C55523 * C364 + C55518 * C383) *
               C154164 * C154011 * C154082 * C154118) *
              C1309 +
          ((C55523 * C361 - C55524 * C346 - C55523 * C362 + C55518 * C382 +
            C55525 * C1137 - C55526 * C1130 - C55525 * C1138 + C55519 * C1148 +
            C55527 * C1552 - C55528 * C1544 - C55527 * C1553 + C55520 * C1559 +
            C55529 * C6270 - C55530 * C6261 - C55529 * C6271 + C55521 * C6279 +
            C55531 * C9280 - C55532 * C9276 - C55531 * C9281 + C55522 * C9285) *
               C154164 * C154011 * C154082 * C154118 -
           (C55531 * C7779 - C55532 * C7774 - C55531 * C7780 + C55522 * C7786 +
            C55529 * C2335 - C55530 * C2327 - C55529 * C2336 + C55521 * C2342 +
            C55527 * C604 - C55528 * C586 - C55527 * C605 + C55520 * C622 +
            C55525 * C598 - C55526 * C583 - C55525 * C599 + C55519 * C619 +
            C55523 * C146 - C55524 * C137 - C55523 * C147 + C55518 * C161) *
               C154164 * C154011 * C154082 * C1307) *
              C1310 +
          ((C55523 * C148 - C55524 * C138 - C55523 * C149 + C55518 * C162 +
            C55525 * C596 - C55526 * C582 - C55525 * C597 + C55519 * C618 +
            C55527 * C606 - C55528 * C587 - C55527 * C607 + C55520 * C623 +
            C55529 * C2333 - C55530 * C2326 - C55529 * C2334 + C55521 * C2341 +
            C55531 * C7781 - C55532 * C7775 - C55531 * C7782 + C55522 * C7787) *
               C154164 * C154011 * C154082 * C1307 -
           (C55531 * C9278 - C55532 * C9275 - C55531 * C9279 + C55522 * C9284 +
            C55529 * C6266 - C55530 * C6259 - C55529 * C6267 + C55521 * C6277 +
            C55527 * C1550 - C55528 * C1543 - C55527 * C1551 + C55520 * C1558 +
            C55525 * C1139 - C55526 * C1131 - C55525 * C1140 + C55519 * C1149 +
            C55523 * C359 - C55524 * C345 - C55523 * C360 + C55518 * C381) *
               C154164 * C154011 * C154082 * C154118) *
              C1311)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((C55523 * C144 - C55524 * C136 - C55523 * C145 + C55518 * C160 +
           C55525 * C600 - C55526 * C584 - C55525 * C601 + C55519 * C620 +
           C55527 * C602 - C55528 * C585 - C55527 * C603 + C55520 * C621 +
           C55529 * C2337 - C55530 * C2328 - C55529 * C2338 + C55521 * C2343 +
           C55531 * C7777 - C55532 * C7773 - C55531 * C7778 + C55522 * C7785) *
              C154164 * C154011 * C154082 * C1394 -
          (C55531 * C9282 - C55532 * C9277 - C55531 * C9283 + C55522 * C9286 +
           C55529 * C6274 - C55530 * C6263 - C55529 * C6275 + C55521 * C6281 +
           C55527 * C1554 - C55528 * C1545 - C55527 * C1555 + C55520 * C1560 +
           C55525 * C1135 - C55526 * C1129 - C55525 * C1136 + C55519 * C1147 +
           C55523 * C363 - C55524 * C347 - C55523 * C364 + C55518 * C383) *
              C154164 * C154011 * C154082 * C1395 +
          (C55523 * C365 - C55524 * C348 - C55523 * C366 + C55518 * C384 +
           C55525 * C1985 - C55526 * C1976 - C55525 * C1986 + C55519 * C1991 +
           C55527 * C3445 - C55528 * C3441 - C55527 * C3446 + C55520 * C3453 +
           C55529 * C6272 - C55530 * C6262 - C55529 * C6273 + C55521 * C6280 +
           C55531 * C31084 - C55532 * C31082 - C55531 * C31085 +
           C55522 * C31088) *
              C154164 * C154011 * C154082 * C1396 -
          (C55531 * C32489 - C55532 * C32488 - C55531 * C32490 +
           C55522 * C32491 + C55529 * C30002 - C55530 * C29999 -
           C55529 * C30003 + C55521 * C30005 + C55527 * C4912 - C55528 * C4907 -
           C55527 * C4913 + C55520 * C4916 + C55525 * C4258 - C55526 * C4254 -
           C55525 * C4259 + C55519 * C4266 + C55523 * C1412 - C55524 * C1403 -
           C55523 * C1413 + C55518 * C1418) *
              C154164 * C154011 * C154082 * C1397) *
         C154047) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C55523 * C144 - C55524 * C136 - C55523 * C145 + C55518 * C160 +
            C55525 * C600 - C55526 * C584 - C55525 * C601 + C55519 * C620 +
            C55527 * C602 - C55528 * C585 - C55527 * C603 + C55520 * C621 +
            C55529 * C2337 - C55530 * C2328 - C55529 * C2338 + C55521 * C2343 +
            C55531 * C7777 - C55532 * C7773 - C55531 * C7778 + C55522 * C7785) *
               C154164 * C154011 * C577 -
           (C55531 * C10602 - C55532 * C10597 - C55531 * C10603 +
            C55522 * C10606 + C55529 * C7777 - C55530 * C7773 - C55529 * C7778 +
            C55521 * C7785 + C55527 * C2337 - C55528 * C2328 - C55527 * C2338 +
            C55520 * C2343 + C55525 * C602 - C55526 * C585 - C55525 * C603 +
            C55519 * C621 + C55523 * C600 - C55524 * C584 - C55523 * C601 +
            C55518 * C620) *
               C154164 * C154011 * C578 +
           (C55523 * C602 - C55524 * C585 - C55523 * C603 + C55518 * C621 +
            C55525 * C2337 - C55526 * C2328 - C55525 * C2338 + C55519 * C2343 +
            C55527 * C7777 - C55528 * C7773 - C55527 * C7778 + C55520 * C7785 +
            C55529 * C10602 - C55530 * C10597 - C55529 * C10603 +
            C55521 * C10606 + C55531 * C55779 - C55532 * C55777 -
            C55531 * C55780 + C55522 * C55783) *
               C154164 * C154011 * C579) *
              C1307 +
          ((C55523 * C1135 - C55524 * C1129 - C55523 * C1136 + C55518 * C1147 +
            C55525 * C1554 - C55526 * C1545 - C55525 * C1555 + C55519 * C1560 +
            C55527 * C6274 - C55528 * C6263 - C55527 * C6275 + C55520 * C6281 +
            C55529 * C9282 - C55530 * C9277 - C55529 * C9283 + C55521 * C9286 +
            C55531 * C33869 - C55532 * C33866 - C55531 * C33870 +
            C55522 * C33872) *
               C154164 * C154011 * C578 -
           (C55531 * C9282 - C55532 * C9277 - C55531 * C9283 + C55522 * C9286 +
            C55529 * C6274 - C55530 * C6263 - C55529 * C6275 + C55521 * C6281 +
            C55527 * C1554 - C55528 * C1545 - C55527 * C1555 + C55520 * C1560 +
            C55525 * C1135 - C55526 * C1129 - C55525 * C1136 + C55519 * C1147 +
            C55523 * C363 - C55524 * C347 - C55523 * C364 + C55518 * C383) *
               C154164 * C154011 * C577 -
           (C55531 * C56522 - C55532 * C56521 - C55531 * C56523 +
            C55522 * C56524 + C55529 * C33869 - C55530 * C33866 -
            C55529 * C33870 + C55521 * C33872 + C55527 * C9282 -
            C55528 * C9277 - C55527 * C9283 + C55520 * C9286 + C55525 * C6274 -
            C55526 * C6263 - C55525 * C6275 + C55519 * C6281 + C55523 * C1554 -
            C55524 * C1545 - C55523 * C1555 + C55518 * C1560) *
               C154164 * C154011 * C579) *
              C154118) *
         C154047) /
            (p * q * std::sqrt(p + q));
    d2ee[188] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                     C154164 * C123 +
                 C211 * C124 + C212 * C125 + C213 * C126 + C214 * C127) *
                    C154393 -
                (C685 * C127 + C686 * C126 + C687 * C125 + C688 * C124 +
                 (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                     C154164 * C123) *
                    C154146) *
                   C1307 +
               (((C134 * C1135 - C135 * C1129 - C134 * C1136 +
                  C154181 * C1147) *
                     C154164 * C123 +
                 C1182 * C124 + C1183 * C125 + C1184 * C126 + C1185 * C127) *
                    C154146 -
                (C448 * C127 + C449 * C126 + C450 * C125 + C451 * C124 +
                 (C134 * C363 - C135 * C347 - C134 * C364 + C154181 * C383) *
                     C154164 * C123) *
                    C154393) *
                   C154118) *
                  C154384 +
              (((C688 * C123 + C687 * C124 + C686 * C125 + C685 * C126 +
                 C967 * C127) *
                    C154146 -
                (C215 * C127 + C214 * C126 + C213 * C125 + C212 * C124 +
                 C211 * C123) *
                    C154393) *
                   C1307 +
               ((C451 * C123 + C450 * C124 + C449 * C125 + C448 * C126 +
                 C831 * C127) *
                    C154393 -
                ((C134 * C1145 - C135 * C1134 - C134 * C1146 +
                  C154181 * C1152) *
                     C154164 * C127 +
                 C1185 * C126 + C1184 * C125 + C1183 * C124 + C1182 * C123) *
                    C154146) *
                   C154118) *
                  C154053) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                      C154480 +
                  C3210 * C154468 + C3211 * C154442) *
                     C2902 +
                 (C2906 + C2907 + C2908) * C2903 + C2920 * C154429) *
                    C154393 -
                (C3960 * C154429 + (C3507 + C3468 + C3469) * C2903 +
                 (C4299 * C154442 + C4300 * C154468 +
                  (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                      C154480) *
                     C2902) *
                    C154146) *
                   C1307 +
               (((C4300 * C154480 + C4299 * C154468 +
                  (C134 * C4258 - C135 * C4254 - C134 * C4259 +
                   C154181 * C4266) *
                      C154442) *
                     C2902 +
                 (C4279 + C4280 + C4303) * C2903 +
                 (C4285 + C4286 + C4304) * C154429) *
                    C154146 -
                (C3734 * C154429 + (C3219 + C3174 + C3175) * C2903 +
                 (C3214 * C154442 + C3211 * C154468 + C3210 * C154480) *
                     C2902) *
                    C154393) *
                   C154118) *
                  C154384 +
              ((((C3469 + C3468 + C3507) * C2902 +
                 (C3463 + C3462 + C3506) * C2903 +
                 (C3954 + C3955 + C3964) * C154429) *
                    C154146 -
                (C2921 * C154429 + (C2911 + C2910 + C2909) * C2903 +
                 (C2908 + C2907 + C2906) * C2902) *
                    C154393) *
                   C1307 +
               (((C3175 + C3174 + C3219) * C2902 +
                 (C3169 + C3168 + C3218) * C2903 +
                 (C3731 + C3732 + C3733) * C154429) *
                    C154393 -
                (((C134 * C4264 - C135 * C4257 - C134 * C4265 +
                   C154181 * C4269) *
                      C154442 +
                  C3963 * C154468 + C1180 * C154480) *
                     C154429 +
                 (C4304 + C4286 + C4285) * C2903 +
                 (C4303 + C4280 + C4279) * C2902) *
                    C154146) *
                   C154118) *
                  C154053)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C7157 * C144 - C7158 * C136 - C7157 * C145 + C154481 * C160 +
              C7159 * C600 - C7160 * C584 - C7159 * C601 + C154470 * C620 +
              C7161 * C602 - C7162 * C585 - C7161 * C603 + C154445 * C621) *
                 C154164 * C2902 +
             (C7236 + C7237 + C7238) * C154164 * C2903 + C7252 * C154429) *
                C154393 -
            (C8351 * C154429 + (C7865 + C7866 + C7867) * C154164 * C2903 +
             (C7161 * C2337 - C7162 * C2328 - C7161 * C2338 + C154445 * C2343 +
              C7159 * C602 - C7160 * C585 - C7159 * C603 + C154470 * C621 +
              C7157 * C600 - C7158 * C584 - C7157 * C601 + C154481 * C620) *
                 C154164 * C2902) *
                C154146) *
               C1307 +
           (((C7157 * C1135 - C7158 * C1129 - C7157 * C1136 + C154481 * C1147 +
              C7159 * C1554 - C7160 * C1545 - C7159 * C1555 + C154470 * C1560 +
              C7161 * C6274 - C7162 * C6263 - C7161 * C6275 + C154445 * C6281) *
                 C154164 * C2902 +
             (C8688 + C8689 + C8690) * C154164 * C2903 +
             (C8691 + C8692 + C8693) * C154164 * C154429) *
                C154146 -
            (C8109 * C154429 + (C7547 + C7548 + C7549) * C154164 * C2903 +
             (C7161 * C1554 - C7162 * C1545 - C7161 * C1555 + C154445 * C1560 +
              C7159 * C1135 - C7160 * C1129 - C7159 * C1136 + C154470 * C1147 +
              C7157 * C363 - C7158 * C347 - C7157 * C364 + C154481 * C383) *
                 C154164 * C2902) *
                C154393) *
               C154118) *
              C154384 +
          ((((C7867 + C7866 + C7865) * C154164 * C2902 +
             (C7864 + C7863 + C7862) * C154164 * C2903 +
             (C8355 + C8356 + C8357) * C154164 * C154429) *
                C154146 -
            (C7253 * C154429 + (C7241 + C7240 + C7239) * C154164 * C2903 +
             (C7238 + C7237 + C7236) * C154164 * C2902) *
                C154393) *
               C1307 +
           (((C7549 + C7548 + C7547) * C154164 * C2902 +
             (C7546 + C7545 + C7544) * C154164 * C2903 +
             (C8113 + C8114 + C8115) * C154164 * C154429) *
                C154393 -
            ((C7161 * C8648 - C7162 * C8647 - C7161 * C8649 + C154445 * C8650 +
              C7159 * C1548 - C7160 * C1542 - C7159 * C1549 + C154470 * C1557 +
              C7157 * C1141 - C7158 * C1132 - C7157 * C1142 + C154481 * C1150) *
                 C154164 * C154429 +
             (C8693 + C8692 + C8691) * C154164 * C2903 +
             (C8690 + C8689 + C8688) * C154164 * C2902) *
                C154146) *
               C154118) *
              C154053)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                  C24270 +
              C3210 * C24271 + C3211 * C154442) *
                 C154477 +
             (C24277 + C24278 + C24279) * C154458 + C24291 * C154429) *
                C154393 -
            (C25198 * C154429 + (C24744 + C24745 + C24746) * C154458 +
             (C4299 * C154442 + C4300 * C24271 +
              (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                  C24270) *
                 C154477) *
                C154146) *
               C1307 +
           (((C4300 * C24270 + C4299 * C24271 + C5676 * C154442) * C154477 +
             (C25489 + C25490 + C25491) * C154458 +
             (C25492 + C25493 + C25494) * C154429) *
                C154146 -
            (C24975 * C154429 + (C24514 + C24515 + C24516) * C154458 +
             (C3214 * C154442 + C3211 * C24271 + C3210 * C24270) * C154477) *
                C154393) *
               C154118) *
              C154384 +
          ((((C24746 + C24745 + C24744) * C154477 +
             (C24743 + C24742 + C24741) * C154458 +
             (C25195 + C25196 + C25197) * C154429) *
                C154146 -
            (C24292 * C154429 + (C24282 + C24281 + C24280) * C154458 +
             (C24279 + C24278 + C24277) * C154477) *
                C154393) *
               C1307 +
           (((C24516 + C24515 + C24514) * C154477 +
             (C24513 + C24512 + C24511) * C154458 +
             (C24972 + C24973 + C24974) * C154429) *
                C154393 -
            (((C134 * C4264 - C135 * C4257 - C134 * C4265 + C154181 * C4269) *
                  C154442 +
              C3963 * C24271 + C1180 * C24270) *
                 C154429 +
             (C25494 + C25493 + C25492) * C154458 +
             (C25491 + C25490 + C25489) * C154477) *
                C154146) *
               C154118) *
              C154053)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C28192 +
             C3210 * C28193 + C3211 * C28194 + C3214 * C28195 +
             C4687 * C28196) *
                C154011 * C154393 -
            (C28899 * C28196 + C5676 * C28195 + C4299 * C28194 +
             C4300 * C28193 +
             (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                 C28192) *
                C154011 * C154146) *
               C1307 +
           ((C4300 * C28192 + C4299 * C28193 + C5676 * C28194 +
             C28899 * C28195 +
             (C134 * C28880 - C135 * C28878 - C134 * C28881 +
              C154181 * C28884) *
                 C28196) *
                C154011 * C154146 -
            (C28341 * C28196 + C4687 * C28195 + C3214 * C28194 +
             C3211 * C28193 + C3210 * C28192) *
                C154011 * C154393) *
               C154118) *
              C154384 +
          (((C680 * C28192 + C1178 * C28193 + C3501 * C28194 + C4301 * C28195 +
             C28900 * C28196) *
                C154011 * C154146 -
            (C3215 * C28196 + C3213 * C28195 + C444 * C28194 + C443 * C28193 +
             C205 * C28192) *
                C154011 * C154393) *
               C1307 +
           ((C443 * C28192 + C444 * C28193 + C3213 * C28194 + C3215 * C28195 +
             C28342 * C28196) *
                C154011 * C154393 -
            ((C134 * C28882 - C135 * C28879 - C134 * C28883 +
              C154181 * C28885) *
                 C28196 +
             C28900 * C28195 + C4301 * C28194 + C3501 * C28193 +
             C1178 * C28192) *
                C154011 * C154146) *
               C154118) *
              C154053)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C7157 * C144 - C7158 * C136 - C7157 * C145 + C154481 * C160 +
              C7159 * C600 - C7160 * C584 - C7159 * C601 + C154470 * C620 +
              C7161 * C602 - C7162 * C585 - C7161 * C603 + C154445 * C621) *
                 C24270 +
             (C30851 + C30852 + C30853) * C24271 + C30864 * C154442) *
                C154011 * C154393 -
            ((C31875 + C31876 + C31877) * C154442 +
             (C31878 + C31879 + C31880) * C24271 +
             (C7161 * C2337 - C7162 * C2328 - C7161 * C2338 + C154445 * C2343 +
              C7159 * C602 - C7160 * C585 - C7159 * C603 + C154470 * C621 +
              C7157 * C600 - C7158 * C584 - C7157 * C601 + C154481 * C620) *
                 C24270) *
                C154011 * C154146) *
               C1307 +
           (((C31880 + C31879 + C31878) * C24270 +
             (C31877 + C31876 + C31875) * C24271 +
             (C7157 * C4258 - C7158 * C4254 - C7157 * C4259 + C154481 * C4266 +
              C7159 * C4912 - C7160 * C4907 - C7159 * C4913 + C154470 * C4916 +
              C7161 * C30002 - C7162 * C29999 - C7161 * C30003 +
              C154445 * C30005) *
                 C154442) *
                C154011 * C154146 -
            (C32261 * C154442 + (C30856 + C30855 + C30854) * C24271 +
             (C30853 + C30852 + C30851) * C24270) *
                C154011 * C154393) *
               C154118) *
              C154384 +
          ((((C7867 + C7866 + C7865) * C24270 +
             (C8688 + C8689 + C8690) * C24271 +
             (C31881 + C31882 + C31883) * C154442) *
                C154011 * C154146 -
            (C30838 * C154442 + (C7547 + C7548 + C7549) * C24271 +
             (C7238 + C7237 + C7236) * C24270) *
                C154011 * C154393) *
               C1307 +
           (((C7549 + C7548 + C7547) * C24270 +
             (C7550 + C7551 + C7552) * C24271 +
             (C30860 + C30861 + C30862) * C154442) *
                C154011 * C154393 -
            ((C7161 * C31817 - C7162 * C31816 - C7161 * C31818 +
              C154445 * C31819 + C7159 * C4910 - C7160 * C4906 - C7159 * C4911 +
              C154470 * C4915 + C7157 * C4260 - C7158 * C4255 - C7157 * C4261 +
              C154481 * C4267) *
                 C154442 +
             (C31883 + C31882 + C31881) * C24271 +
             (C8690 + C8689 + C8688) * C24270) *
                C154011 * C154146) *
               C154118) *
              C154053)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C47141 * C144 - C47142 * C136 - C47141 * C145 + C47138 * C160 +
              C47143 * C600 - C47144 * C584 - C47143 * C601 + C47139 * C620 +
              C47145 * C602 - C47146 * C585 - C47145 * C603 + C154445 * C621) *
                 C154164 * C154477 +
             (C47220 + C47221 + C47222) * C154164 * C154458 +
             C47236 * C154429) *
                C154393 -
            (C48319 * C154429 + (C47833 + C47834 + C47835) * C154164 * C154458 +
             (C47145 * C2337 - C47146 * C2328 - C47145 * C2338 +
              C154445 * C2343 + C47143 * C602 - C47144 * C585 - C47143 * C603 +
              C47139 * C621 + C47141 * C600 - C47142 * C584 - C47141 * C601 +
              C47138 * C620) *
                 C154164 * C154477) *
                C154146) *
               C1307 +
           (((C47141 * C1135 - C47142 * C1129 - C47141 * C1136 +
              C47138 * C1147 + C47143 * C1554 - C47144 * C1545 -
              C47143 * C1555 + C47139 * C1560 + C47145 * C6274 -
              C47146 * C6263 - C47145 * C6275 + C154445 * C6281) *
                 C154164 * C154477 +
             (C48652 + C48653 + C48654) * C154164 * C154458 +
             (C48655 + C48656 + C48657) * C154164 * C154429) *
                C154146 -
            (C48077 * C154429 + (C47531 + C47532 + C47533) * C154164 * C154458 +
             (C47145 * C1554 - C47146 * C1545 - C47145 * C1555 +
              C154445 * C1560 + C47143 * C1135 - C47144 * C1129 -
              C47143 * C1136 + C47139 * C1147 + C47141 * C363 - C47142 * C347 -
              C47141 * C364 + C47138 * C383) *
                 C154164 * C154477) *
                C154393) *
               C154118) *
              C154384 +
          ((((C47835 + C47834 + C47833) * C154164 * C154477 +
             (C47832 + C47831 + C47830) * C154164 * C154458 +
             (C48323 + C48324 + C48325) * C154164 * C154429) *
                C154146 -
            (C47237 * C154429 + (C47225 + C47224 + C47223) * C154164 * C154458 +
             (C47222 + C47221 + C47220) * C154164 * C154477) *
                C154393) *
               C1307 +
           (((C47533 + C47532 + C47531) * C154164 * C154477 +
             (C47530 + C47529 + C47528) * C154164 * C154458 +
             (C48081 + C48082 + C48083) * C154164 * C154429) *
                C154393 -
            ((C47145 * C8648 - C47146 * C8647 - C47145 * C8649 +
              C154445 * C8650 + C47143 * C1548 - C47144 * C1542 -
              C47143 * C1549 + C47139 * C1557 + C47141 * C1141 -
              C47142 * C1132 - C47141 * C1142 + C47138 * C1150) *
                 C154164 * C154429 +
             (C48657 + C48656 + C48655) * C154164 * C154458 +
             (C48654 + C48653 + C48652) * C154164 * C154477) *
                C154146) *
               C154118) *
              C154053)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C47141 * C144 - C47142 * C136 - C47141 * C145 + C47138 * C160 +
              C47143 * C600 - C47144 * C584 - C47143 * C601 + C47139 * C620 +
              C47145 * C602 - C47146 * C585 - C47145 * C603 + C154445 * C621) *
                 C154480 +
             (C51712 + C51713 + C51714) * C154468 + C51725 * C154442) *
                C154011 * C154393 -
            ((C52724 + C52725 + C52726) * C154442 +
             (C52727 + C52728 + C52729) * C154468 +
             (C47145 * C2337 - C47146 * C2328 - C47145 * C2338 +
              C154445 * C2343 + C47143 * C602 - C47144 * C585 - C47143 * C603 +
              C47139 * C621 + C47141 * C600 - C47142 * C584 - C47141 * C601 +
              C47138 * C620) *
                 C154480) *
                C154011 * C154146) *
               C1307 +
           (((C52729 + C52728 + C52727) * C154480 +
             (C52726 + C52725 + C52724) * C154468 +
             (C47141 * C4258 - C47142 * C4254 - C47141 * C4259 +
              C47138 * C4266 + C47143 * C4912 - C47144 * C4907 -
              C47143 * C4913 + C47139 * C4916 + C47145 * C30002 -
              C47146 * C29999 - C47145 * C30003 + C154445 * C30005) *
                 C154442) *
                C154011 * C154146 -
            (C53110 * C154442 + (C51717 + C51716 + C51715) * C154468 +
             (C51714 + C51713 + C51712) * C154480) *
                C154011 * C154393) *
               C154118) *
              C154384 +
          ((((C47835 + C47834 + C47833) * C154480 +
             (C48652 + C48653 + C48654) * C154468 +
             (C52730 + C52731 + C52732) * C154442) *
                C154011 * C154146 -
            (C51699 * C154442 + (C47531 + C47532 + C47533) * C154468 +
             (C47222 + C47221 + C47220) * C154480) *
                C154011 * C154393) *
               C1307 +
           (((C47533 + C47532 + C47531) * C154480 +
             (C47534 + C47535 + C47536) * C154468 +
             (C51721 + C51722 + C51723) * C154442) *
                C154011 * C154393 -
            ((C47145 * C31817 - C47146 * C31816 - C47145 * C31818 +
              C154445 * C31819 + C47143 * C4910 - C47144 * C4906 -
              C47143 * C4911 + C47139 * C4915 + C47141 * C4260 -
              C47142 * C4255 - C47141 * C4261 + C47138 * C4267) *
                 C154442 +
             (C52732 + C52731 + C52730) * C154468 +
             (C48654 + C48653 + C48652) * C154480) *
                C154011 * C154146) *
               C154118) *
              C154053)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C55523 * C144 - C55524 * C136 - C55523 * C145 + C55518 * C160 +
             C55525 * C600 - C55526 * C584 - C55525 * C601 + C55519 * C620 +
             C55527 * C602 - C55528 * C585 - C55527 * C603 + C55520 * C621 +
             C55529 * C2337 - C55530 * C2328 - C55529 * C2338 + C55521 * C2343 +
             C55531 * C7777 - C55532 * C7773 - C55531 * C7778 +
             C55522 * C7785) *
                C154164 * C154011 * C154393 -
            (C55531 * C10602 - C55532 * C10597 - C55531 * C10603 +
             C55522 * C10606 + C55529 * C7777 - C55530 * C7773 -
             C55529 * C7778 + C55521 * C7785 + C55527 * C2337 - C55528 * C2328 -
             C55527 * C2338 + C55520 * C2343 + C55525 * C602 - C55526 * C585 -
             C55525 * C603 + C55519 * C621 + C55523 * C600 - C55524 * C584 -
             C55523 * C601 + C55518 * C620) *
                C154164 * C154011 * C154146) *
               C1307 +
           ((C55523 * C1135 - C55524 * C1129 - C55523 * C1136 + C55518 * C1147 +
             C55525 * C1554 - C55526 * C1545 - C55525 * C1555 + C55519 * C1560 +
             C55527 * C6274 - C55528 * C6263 - C55527 * C6275 + C55520 * C6281 +
             C55529 * C9282 - C55530 * C9277 - C55529 * C9283 + C55521 * C9286 +
             C55531 * C33869 - C55532 * C33866 - C55531 * C33870 +
             C55522 * C33872) *
                C154164 * C154011 * C154146 -
            (C55531 * C9282 - C55532 * C9277 - C55531 * C9283 + C55522 * C9286 +
             C55529 * C6274 - C55530 * C6263 - C55529 * C6275 + C55521 * C6281 +
             C55527 * C1554 - C55528 * C1545 - C55527 * C1555 + C55520 * C1560 +
             C55525 * C1135 - C55526 * C1129 - C55525 * C1136 + C55519 * C1147 +
             C55523 * C363 - C55524 * C347 - C55523 * C364 + C55518 * C383) *
                C154164 * C154011 * C154393) *
               C154118) *
              C154384 +
          (((C55523 * C598 - C55524 * C583 - C55523 * C599 + C55518 * C619 +
             C55525 * C604 - C55526 * C586 - C55525 * C605 + C55519 * C622 +
             C55527 * C2335 - C55528 * C2327 - C55527 * C2336 + C55520 * C2342 +
             C55529 * C7779 - C55530 * C7774 - C55529 * C7780 + C55521 * C7786 +
             C55531 * C10600 - C55532 * C10596 - C55531 * C10601 +
             C55522 * C10605) *
                C154164 * C154011 * C154146 -
            (C55531 * C7779 - C55532 * C7774 - C55531 * C7780 + C55522 * C7786 +
             C55529 * C2335 - C55530 * C2327 - C55529 * C2336 + C55521 * C2342 +
             C55527 * C604 - C55528 * C586 - C55527 * C605 + C55520 * C622 +
             C55525 * C598 - C55526 * C583 - C55525 * C599 + C55519 * C619 +
             C55523 * C146 - C55524 * C137 - C55523 * C147 + C55518 * C161) *
                C154164 * C154011 * C154393) *
               C1307 +
           ((C55523 * C361 - C55524 * C346 - C55523 * C362 + C55518 * C382 +
             C55525 * C1137 - C55526 * C1130 - C55525 * C1138 + C55519 * C1148 +
             C55527 * C1552 - C55528 * C1544 - C55527 * C1553 + C55520 * C1559 +
             C55529 * C6270 - C55530 * C6261 - C55529 * C6271 + C55521 * C6279 +
             C55531 * C9280 - C55532 * C9276 - C55531 * C9281 +
             C55522 * C9285) *
                C154164 * C154011 * C154393 -
            (C55531 * C56192 - C55532 * C56191 - C55531 * C56193 +
             C55522 * C56194 + C55529 * C9280 - C55530 * C9276 -
             C55529 * C9281 + C55521 * C9285 + C55527 * C6270 - C55528 * C6261 -
             C55527 * C6271 + C55520 * C6279 + C55525 * C1552 - C55526 * C1544 -
             C55525 * C1553 + C55519 * C1559 + C55523 * C1137 - C55524 * C1130 -
             C55523 * C1138 + C55518 * C1148) *
                C154164 * C154011 * C154146) *
               C154118) *
              C154053)) /
            (p * q * std::sqrt(p + q));
    d2ee[189] +=
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                C154164 * C123 +
            C211 * C124 + C212 * C125 + C213 * C126 + C214 * C127) *
               C154082 * C1307 -
           (C448 * C127 + C449 * C126 + C450 * C125 + C451 * C124 +
            (C134 * C363 - C135 * C347 - C134 * C364 + C154181 * C383) *
                C154164 * C123) *
               C154082 * C154118) *
              C1309 +
          ((C451 * C123 + C450 * C124 + C449 * C125 + C448 * C126 +
            C831 * C127) *
               C154082 * C154118 -
           (C215 * C127 + C214 * C126 + C213 * C125 + C212 * C124 +
            C211 * C123) *
               C154082 * C1307) *
              C1310 +
          ((C212 * C123 + C213 * C124 + C214 * C125 + C215 * C126 +
            C216 * C127) *
               C154082 * C1307 -
           ((C134 * C820 - C135 * C819 - C134 * C821 + C154181 * C822) *
                C154164 * C127 +
            C831 * C126 + C448 * C125 + C449 * C124 + C450 * C123) *
               C154082 * C154118) *
              C1311)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
               C154164 * C123 +
           C211 * C124 + C212 * C125 + C213 * C126 + C214 * C127) *
              C154082 * C1394 -
          (C448 * C127 + C449 * C126 + C450 * C125 + C451 * C124 +
           (C134 * C363 - C135 * C347 - C134 * C364 + C154181 * C383) *
               C154164 * C123) *
              C154082 * C1395 +
          ((C134 * C365 - C135 * C348 - C134 * C366 + C154181 * C384) *
               C154164 * C123 +
           C452 * C124 + C453 * C125 + C454 * C126 + C455 * C127) *
              C154082 * C1396 -
          ((C134 * C1404 - C135 * C1399 - C134 * C1405 + C154181 * C1414) *
               C154164 * C127 +
           (C134 * C1406 - C135 * C1400 - C134 * C1407 + C154181 * C1415) *
               C154164 * C126 +
           (C134 * C1408 - C135 * C1401 - C134 * C1409 + C154181 * C1416) *
               C154164 * C125 +
           (C134 * C1410 - C135 * C1402 - C134 * C1411 + C154181 * C1417) *
               C154164 * C124 +
           (C134 * C1412 - C135 * C1403 - C134 * C1413 + C154181 * C1418) *
               C154164 * C123) *
              C154082 * C1397) *
         C154047) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C154480 +
             C3210 * C154468 + C3211 * C154442) *
                C2902 +
            (C2906 + C2907 + C2908) * C2903 + C2920 * C154429) *
               C154082 * C1307 -
           (C3734 * C154429 + (C3219 + C3174 + C3175) * C2903 +
            (C3214 * C154442 + C3211 * C154468 + C3210 * C154480) * C2902) *
               C154082 * C154118) *
              C1309 +
          (((C3175 + C3174 + C3219) * C2902 + (C3169 + C3168 + C3218) * C2903 +
            (C3731 + C3732 + C3733) * C154429) *
               C154082 * C154118 -
           (C2921 * C154429 + (C2911 + C2910 + C2909) * C2903 +
            (C2908 + C2907 + C2906) * C2902) *
               C154082 * C1307) *
              C1310 +
          ((C2920 * C2902 + (C2914 + C2913 + C2912) * C2903 +
            (C2915 + C2916 + C2917) * C154429) *
               C154082 * C1307 -
           (((C134 * C1404 - C135 * C1399 - C134 * C1405 + C154181 * C1414) *
                 C154442 +
             C447 * C154468 + C440 * C154480) *
                C154429 +
            (C3733 + C3732 + C3731) * C2903 + C3734 * C2902) *
               C154082 * C154118) *
              C1311)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                C154480 +
            C3210 * C154468 + C3211 * C154442) *
               C2902 +
           (C2906 + C2907 + C2908) * C2903 + C2920 * C154429) *
              C154082 * C1394 -
          (C3734 * C154429 + (C3219 + C3174 + C3175) * C2903 +
           (C3214 * C154442 + C3211 * C154468 + C3210 * C154480) * C2902) *
              C154082 * C1395 +
          ((C3211 * C154480 + C3214 * C154468 + C4687 * C154442) * C2902 +
           (C3180 + C3220 + C3221) * C2903 +
           (C3185 + C3222 + C3223) * C154429) *
              C154082 * C1396 -
          (((C134 * C4671 - C135 * C4668 - C134 * C4672 + C154181 * C4677) *
                C154442 +
            C3216 * C154468 + C3212 * C154480) *
               C154429 +
           ((C134 * C4673 - C135 * C4669 - C134 * C4674 + C154181 * C4678) *
                C154442 +
            C3215 * C154468 + C3213 * C154480) *
               C2903 +
           ((C134 * C4675 - C135 * C4670 - C134 * C4676 + C154181 * C4679) *
                C154442 +
            C4687 * C154468 + C3214 * C154480) *
               C2902) *
              C154082 * C1397) *
         C154047) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C7157 * C144 - C7158 * C136 - C7157 * C145 + C154481 * C160 +
             C7159 * C600 - C7160 * C584 - C7159 * C601 + C154470 * C620 +
             C7161 * C602 - C7162 * C585 - C7161 * C603 + C154445 * C621) *
                C154164 * C2902 +
            (C7236 + C7237 + C7238) * C154164 * C2903 + C7252 * C154429) *
               C154082 * C1307 -
           (C8109 * C154429 + (C7547 + C7548 + C7549) * C154164 * C2903 +
            (C7161 * C1554 - C7162 * C1545 - C7161 * C1555 + C154445 * C1560 +
             C7159 * C1135 - C7160 * C1129 - C7159 * C1136 + C154470 * C1147 +
             C7157 * C363 - C7158 * C347 - C7157 * C364 + C154481 * C383) *
                C154164 * C2902) *
               C154082 * C154118) *
              C1309 +
          (((C7549 + C7548 + C7547) * C154164 * C2902 +
            (C7546 + C7545 + C7544) * C154164 * C2903 +
            (C8113 + C8114 + C8115) * C154164 * C154429) *
               C154082 * C154118 -
           (C7253 * C154429 + (C7241 + C7240 + C7239) * C154164 * C2903 +
            (C7238 + C7237 + C7236) * C154164 * C2902) *
               C154082 * C1307) *
              C1310 +
          ((C7252 * C2902 + (C7244 + C7243 + C7242) * C154164 * C2903 +
            (C7245 + C7246 + C7247) * C154164 * C154429) *
               C154082 * C1307 -
           ((C7161 * C1546 - C7162 * C1541 - C7161 * C1547 + C154445 * C1556 +
             C7159 * C1143 - C7160 * C1133 - C7159 * C1144 + C154470 * C1151 +
             C7157 * C355 - C7158 * C343 - C7157 * C356 + C154481 * C379) *
                C154164 * C154429 +
            (C8115 + C8114 + C8113) * C154164 * C2903 + C8109 * C2902) *
               C154082 * C154118) *
              C1311)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C7157 * C144 - C7158 * C136 - C7157 * C145 + C154481 * C160 +
            C7159 * C600 - C7160 * C584 - C7159 * C601 + C154470 * C620 +
            C7161 * C602 - C7162 * C585 - C7161 * C603 + C154445 * C621) *
               C154164 * C2902 +
           (C7236 + C7237 + C7238) * C154164 * C2903 + C7252 * C154429) *
              C154082 * C1394 -
          (C8109 * C154429 + (C7547 + C7548 + C7549) * C154164 * C2903 +
           (C7161 * C1554 - C7162 * C1545 - C7161 * C1555 + C154445 * C1560 +
            C7159 * C1135 - C7160 * C1129 - C7159 * C1136 + C154470 * C1147 +
            C7157 * C363 - C7158 * C347 - C7157 * C364 + C154481 * C383) *
               C154164 * C2902) *
              C154082 * C1395 +
          ((C7157 * C365 - C7158 * C348 - C7157 * C366 + C154481 * C384 +
            C7159 * C1985 - C7160 * C1976 - C7159 * C1986 + C154470 * C1991 +
            C7161 * C3445 - C7162 * C3441 - C7161 * C3446 + C154445 * C3453) *
               C154164 * C2902 +
           (C7550 + C7551 + C7552) * C154164 * C2903 +
           (C7553 + C7554 + C7555) * C154164 * C154429) *
              C154082 * C1396 -
          ((C7161 * C4908 - C7162 * C4905 - C7161 * C4909 + C154445 * C4914 +
            C7159 * C4262 - C7160 * C4256 - C7159 * C4263 + C154470 * C4268 +
            C7157 * C1408 - C7158 * C1401 - C7157 * C1409 + C154481 * C1416) *
               C154164 * C154429 +
           (C7161 * C4910 - C7162 * C4906 - C7161 * C4911 + C154445 * C4915 +
            C7159 * C4260 - C7160 * C4255 - C7159 * C4261 + C154470 * C4267 +
            C7157 * C1410 - C7158 * C1402 - C7157 * C1411 + C154481 * C1417) *
               C154164 * C2903 +
           (C7161 * C4912 - C7162 * C4907 - C7161 * C4913 + C154445 * C4916 +
            C7159 * C4258 - C7160 * C4254 - C7159 * C4259 + C154470 * C4266 +
            C7157 * C1412 - C7158 * C1403 - C7157 * C1413 + C154481 * C1418) *
               C154164 * C2902) *
              C154082 * C1397) *
         C154047) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C24270 +
             C3210 * C24271 + C3211 * C154442) *
                C154477 +
            (C24277 + C24278 + C24279) * C154458 + C24291 * C154429) *
               C154082 * C1307 -
           (C24975 * C154429 + (C24514 + C24515 + C24516) * C154458 +
            (C3214 * C154442 + C3211 * C24271 + C3210 * C24270) * C154477) *
               C154082 * C154118) *
              C1309 +
          (((C24516 + C24515 + C24514) * C154477 +
            (C24513 + C24512 + C24511) * C154458 +
            (C24972 + C24973 + C24974) * C154429) *
               C154082 * C154118 -
           (C24292 * C154429 + (C24282 + C24281 + C24280) * C154458 +
            (C24279 + C24278 + C24277) * C154477) *
               C154082 * C1307) *
              C1310 +
          ((C24291 * C154477 + (C24285 + C24284 + C24283) * C154458 +
            (C24286 + C24287 + C24288) * C154429) *
               C154082 * C1307 -
           (((C134 * C1404 - C135 * C1399 - C134 * C1405 + C154181 * C1414) *
                 C154442 +
             C447 * C24271 + C440 * C24270) *
                C154429 +
            (C24974 + C24973 + C24972) * C154458 + C24975 * C154477) *
               C154082 * C154118) *
              C1311)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                C24270 +
            C3210 * C24271 + C3211 * C154442) *
               C154477 +
           (C24277 + C24278 + C24279) * C154458 + C24291 * C154429) *
              C154082 * C1394 -
          (C24975 * C154429 + (C24514 + C24515 + C24516) * C154458 +
           (C3214 * C154442 + C3211 * C24271 + C3210 * C24270) * C154477) *
              C154082 * C1395 +
          ((C3211 * C24270 + C3214 * C24271 + C4687 * C154442) * C154477 +
           (C24517 + C24518 + C24519) * C154458 +
           (C24520 + C24521 + C24522) * C154429) *
              C154082 * C1396 -
          (((C134 * C4671 - C135 * C4668 - C134 * C4672 + C154181 * C4677) *
                C154442 +
            C3216 * C24271 + C3212 * C24270) *
               C154429 +
           ((C134 * C4673 - C135 * C4669 - C134 * C4674 + C154181 * C4678) *
                C154442 +
            C3215 * C24271 + C3213 * C24270) *
               C154458 +
           ((C134 * C4675 - C135 * C4670 - C134 * C4676 + C154181 * C4679) *
                C154442 +
            C4687 * C24271 + C3214 * C24270) *
               C154477) *
              C154082 * C1397) *
         C154047) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                C28192 +
            C3210 * C28193 + C3211 * C28194 + C3214 * C28195 + C4687 * C28196) *
               C154011 * C154082 * C1307 -
           (C28341 * C28196 + C4687 * C28195 + C3214 * C28194 + C3211 * C28193 +
            C3210 * C28192) *
               C154011 * C154082 * C154118) *
              C1309 +
          ((C443 * C28192 + C444 * C28193 + C3213 * C28194 + C3215 * C28195 +
            C28342 * C28196) *
               C154011 * C154082 * C154118 -
           (C3215 * C28196 + C3213 * C28195 + C444 * C28194 + C443 * C28193 +
            C205 * C28192) *
               C154011 * C154082 * C1307) *
              C1310 +
          ((C206 * C28192 + C442 * C28193 + C445 * C28194 + C3212 * C28195 +
            C3216 * C28196) *
               C154011 * C154082 * C1307 -
           ((C134 * C4671 - C135 * C4668 - C134 * C4672 + C154181 * C4677) *
                C28196 +
            C3216 * C28195 + C3212 * C28194 + C445 * C28193 + C442 * C28192) *
               C154011 * C154082 * C154118) *
              C1311)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) * C28192 +
           C3210 * C28193 + C3211 * C28194 + C3214 * C28195 + C4687 * C28196) *
              C154011 * C154082 * C1394 -
          (C28341 * C28196 + C4687 * C28195 + C3214 * C28194 + C3211 * C28193 +
           C3210 * C28192) *
              C154011 * C154082 * C1395 +
          (C3211 * C28192 + C3214 * C28193 + C4687 * C28194 + C28341 * C28195 +
           C29115 * C28196) *
              C154011 * C154082 * C1396 -
          ((C134 * C29105 - C135 * C29104 - C134 * C29106 + C154181 * C29107) *
               C28196 +
           C29115 * C28195 + C28341 * C28194 + C4687 * C28193 +
           C3214 * C28192) *
              C154011 * C154082 * C1397) *
         C154047) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C7157 * C144 - C7158 * C136 - C7157 * C145 + C154481 * C160 +
             C7159 * C600 - C7160 * C584 - C7159 * C601 + C154470 * C620 +
             C7161 * C602 - C7162 * C585 - C7161 * C603 + C154445 * C621) *
                C24270 +
            (C30851 + C30852 + C30853) * C24271 + C30864 * C154442) *
               C154011 * C154082 * C1307 -
           ((C30857 + C30858 + C30859) * C154442 +
            (C30856 + C30855 + C30854) * C24271 +
            (C30853 + C30852 + C30851) * C24270) *
               C154011 * C154082 * C154118) *
              C1309 +
          (((C7549 + C7548 + C7547) * C24270 +
            (C7550 + C7551 + C7552) * C24271 +
            (C30860 + C30861 + C30862) * C154442) *
               C154011 * C154082 * C154118 -
           (C30838 * C154442 + (C7547 + C7548 + C7549) * C24271 +
            (C7238 + C7237 + C7236) * C24270) *
               C154011 * C154082 * C1307) *
              C1310 +
          ((C7250 * C24270 + (C7546 + C7545 + C7544) * C24271 +
            (C7553 + C7554 + C7555) * C154442) *
               C154011 * C154082 * C1307 -
           ((C7161 * C4908 - C7162 * C4905 - C7161 * C4909 + C154445 * C4914 +
             C7159 * C4262 - C7160 * C4256 - C7159 * C4263 + C154470 * C4268 +
             C7157 * C1408 - C7158 * C1401 - C7157 * C1409 + C154481 * C1416) *
                C154442 +
            (C7555 + C7554 + C7553) * C24271 + C8105 * C24270) *
               C154011 * C154082 * C154118) *
              C1311)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C7157 * C144 - C7158 * C136 - C7157 * C145 + C154481 * C160 +
            C7159 * C600 - C7160 * C584 - C7159 * C601 + C154470 * C620 +
            C7161 * C602 - C7162 * C585 - C7161 * C603 + C154445 * C621) *
               C24270 +
           (C30851 + C30852 + C30853) * C24271 + C30864 * C154442) *
              C154011 * C154082 * C1394 -
          (C32261 * C154442 + (C30856 + C30855 + C30854) * C24271 +
           (C30853 + C30852 + C30851) * C24270) *
              C154011 * C154082 * C1395 +
          (C30864 * C24270 + (C30859 + C30858 + C30857) * C24271 +
           (C32268 + C32269 + C32270) * C154442) *
              C154011 * C154082 * C1396 -
          ((C7161 * C29238 - C7162 * C29237 - C7161 * C29239 +
            C154445 * C29240 + C7159 * C28880 - C7160 * C28878 -
            C7159 * C28881 + C154470 * C28884 + C7157 * C4675 - C7158 * C4670 -
            C7157 * C4676 + C154481 * C4679) *
               C154442 +
           (C32270 + C32269 + C32268) * C24271 + C32261 * C24270) *
              C154011 * C154082 * C1397) *
         C154047) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C47141 * C144 - C47142 * C136 - C47141 * C145 + C47138 * C160 +
             C47143 * C600 - C47144 * C584 - C47143 * C601 + C47139 * C620 +
             C47145 * C602 - C47146 * C585 - C47145 * C603 + C154445 * C621) *
                C154164 * C154477 +
            (C47220 + C47221 + C47222) * C154164 * C154458 + C47236 * C154429) *
               C154082 * C1307 -
           (C48077 * C154429 + (C47531 + C47532 + C47533) * C154164 * C154458 +
            (C47145 * C1554 - C47146 * C1545 - C47145 * C1555 +
             C154445 * C1560 + C47143 * C1135 - C47144 * C1129 -
             C47143 * C1136 + C47139 * C1147 + C47141 * C363 - C47142 * C347 -
             C47141 * C364 + C47138 * C383) *
                C154164 * C154477) *
               C154082 * C154118) *
              C1309 +
          (((C47533 + C47532 + C47531) * C154164 * C154477 +
            (C47530 + C47529 + C47528) * C154164 * C154458 +
            (C48081 + C48082 + C48083) * C154164 * C154429) *
               C154082 * C154118 -
           (C47237 * C154429 + (C47225 + C47224 + C47223) * C154164 * C154458 +
            (C47222 + C47221 + C47220) * C154164 * C154477) *
               C154082 * C1307) *
              C1310 +
          ((C47236 * C154477 + (C47228 + C47227 + C47226) * C154164 * C154458 +
            (C47229 + C47230 + C47231) * C154164 * C154429) *
               C154082 * C1307 -
           ((C47145 * C1546 - C47146 * C1541 - C47145 * C1547 +
             C154445 * C1556 + C47143 * C1143 - C47144 * C1133 -
             C47143 * C1144 + C47139 * C1151 + C47141 * C355 - C47142 * C343 -
             C47141 * C356 + C47138 * C379) *
                C154164 * C154429 +
            (C48083 + C48082 + C48081) * C154164 * C154458 + C48077 * C154477) *
               C154082 * C154118) *
              C1311)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C47141 * C144 - C47142 * C136 - C47141 * C145 + C47138 * C160 +
            C47143 * C600 - C47144 * C584 - C47143 * C601 + C47139 * C620 +
            C47145 * C602 - C47146 * C585 - C47145 * C603 + C154445 * C621) *
               C154164 * C154477 +
           (C47220 + C47221 + C47222) * C154164 * C154458 + C47236 * C154429) *
              C154082 * C1394 -
          (C48077 * C154429 + (C47531 + C47532 + C47533) * C154164 * C154458 +
           (C47145 * C1554 - C47146 * C1545 - C47145 * C1555 + C154445 * C1560 +
            C47143 * C1135 - C47144 * C1129 - C47143 * C1136 + C47139 * C1147 +
            C47141 * C363 - C47142 * C347 - C47141 * C364 + C47138 * C383) *
               C154164 * C154477) *
              C154082 * C1395 +
          ((C47141 * C365 - C47142 * C348 - C47141 * C366 + C47138 * C384 +
            C47143 * C1985 - C47144 * C1976 - C47143 * C1986 + C47139 * C1991 +
            C47145 * C3445 - C47146 * C3441 - C47145 * C3446 +
            C154445 * C3453) *
               C154164 * C154477 +
           (C47534 + C47535 + C47536) * C154164 * C154458 +
           (C47537 + C47538 + C47539) * C154164 * C154429) *
              C154082 * C1396 -
          ((C47145 * C4908 - C47146 * C4905 - C47145 * C4909 + C154445 * C4914 +
            C47143 * C4262 - C47144 * C4256 - C47143 * C4263 + C47139 * C4268 +
            C47141 * C1408 - C47142 * C1401 - C47141 * C1409 + C47138 * C1416) *
               C154164 * C154429 +
           (C47145 * C4910 - C47146 * C4906 - C47145 * C4911 + C154445 * C4915 +
            C47143 * C4260 - C47144 * C4255 - C47143 * C4261 + C47139 * C4267 +
            C47141 * C1410 - C47142 * C1402 - C47141 * C1411 + C47138 * C1417) *
               C154164 * C154458 +
           (C47145 * C4912 - C47146 * C4907 - C47145 * C4913 + C154445 * C4916 +
            C47143 * C4258 - C47144 * C4254 - C47143 * C4259 + C47139 * C4266 +
            C47141 * C1412 - C47142 * C1403 - C47141 * C1413 + C47138 * C1418) *
               C154164 * C154477) *
              C154082 * C1397) *
         C154047) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C47141 * C144 - C47142 * C136 - C47141 * C145 + C47138 * C160 +
             C47143 * C600 - C47144 * C584 - C47143 * C601 + C47139 * C620 +
             C47145 * C602 - C47146 * C585 - C47145 * C603 + C154445 * C621) *
                C154480 +
            (C51712 + C51713 + C51714) * C154468 + C51725 * C154442) *
               C154011 * C154082 * C1307 -
           ((C51718 + C51719 + C51720) * C154442 +
            (C51717 + C51716 + C51715) * C154468 +
            (C51714 + C51713 + C51712) * C154480) *
               C154011 * C154082 * C154118) *
              C1309 +
          (((C47533 + C47532 + C47531) * C154480 +
            (C47534 + C47535 + C47536) * C154468 +
            (C51721 + C51722 + C51723) * C154442) *
               C154011 * C154082 * C154118 -
           (C51699 * C154442 + (C47531 + C47532 + C47533) * C154468 +
            (C47222 + C47221 + C47220) * C154480) *
               C154011 * C154082 * C1307) *
              C1310 +
          ((C47234 * C154480 + (C47530 + C47529 + C47528) * C154468 +
            (C47537 + C47538 + C47539) * C154442) *
               C154011 * C154082 * C1307 -
           ((C47145 * C4908 - C47146 * C4905 - C47145 * C4909 +
             C154445 * C4914 + C47143 * C4262 - C47144 * C4256 -
             C47143 * C4263 + C47139 * C4268 + C47141 * C1408 - C47142 * C1401 -
             C47141 * C1409 + C47138 * C1416) *
                C154442 +
            (C47539 + C47538 + C47537) * C154468 + C48073 * C154480) *
               C154011 * C154082 * C154118) *
              C1311)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C47141 * C144 - C47142 * C136 - C47141 * C145 + C47138 * C160 +
            C47143 * C600 - C47144 * C584 - C47143 * C601 + C47139 * C620 +
            C47145 * C602 - C47146 * C585 - C47145 * C603 + C154445 * C621) *
               C154480 +
           (C51712 + C51713 + C51714) * C154468 + C51725 * C154442) *
              C154011 * C154082 * C1394 -
          (C53110 * C154442 + (C51717 + C51716 + C51715) * C154468 +
           (C51714 + C51713 + C51712) * C154480) *
              C154011 * C154082 * C1395 +
          (C51725 * C154480 + (C51720 + C51719 + C51718) * C154468 +
           (C53117 + C53118 + C53119) * C154442) *
              C154011 * C154082 * C1396 -
          ((C47145 * C29238 - C47146 * C29237 - C47145 * C29239 +
            C154445 * C29240 + C47143 * C28880 - C47144 * C28878 -
            C47143 * C28881 + C47139 * C28884 + C47141 * C4675 -
            C47142 * C4670 - C47141 * C4676 + C47138 * C4679) *
               C154442 +
           (C53119 + C53118 + C53117) * C154468 + C53110 * C154480) *
              C154011 * C154082 * C1397) *
         C154047) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C55523 * C144 - C55524 * C136 - C55523 * C145 + C55518 * C160 +
            C55525 * C600 - C55526 * C584 - C55525 * C601 + C55519 * C620 +
            C55527 * C602 - C55528 * C585 - C55527 * C603 + C55520 * C621 +
            C55529 * C2337 - C55530 * C2328 - C55529 * C2338 + C55521 * C2343 +
            C55531 * C7777 - C55532 * C7773 - C55531 * C7778 + C55522 * C7785) *
               C154164 * C154011 * C154082 * C1307 -
           (C55531 * C9282 - C55532 * C9277 - C55531 * C9283 + C55522 * C9286 +
            C55529 * C6274 - C55530 * C6263 - C55529 * C6275 + C55521 * C6281 +
            C55527 * C1554 - C55528 * C1545 - C55527 * C1555 + C55520 * C1560 +
            C55525 * C1135 - C55526 * C1129 - C55525 * C1136 + C55519 * C1147 +
            C55523 * C363 - C55524 * C347 - C55523 * C364 + C55518 * C383) *
               C154164 * C154011 * C154082 * C154118) *
              C1309 +
          ((C55523 * C361 - C55524 * C346 - C55523 * C362 + C55518 * C382 +
            C55525 * C1137 - C55526 * C1130 - C55525 * C1138 + C55519 * C1148 +
            C55527 * C1552 - C55528 * C1544 - C55527 * C1553 + C55520 * C1559 +
            C55529 * C6270 - C55530 * C6261 - C55529 * C6271 + C55521 * C6279 +
            C55531 * C9280 - C55532 * C9276 - C55531 * C9281 + C55522 * C9285) *
               C154164 * C154011 * C154082 * C154118 -
           (C55531 * C7779 - C55532 * C7774 - C55531 * C7780 + C55522 * C7786 +
            C55529 * C2335 - C55530 * C2327 - C55529 * C2336 + C55521 * C2342 +
            C55527 * C604 - C55528 * C586 - C55527 * C605 + C55520 * C622 +
            C55525 * C598 - C55526 * C583 - C55525 * C599 + C55519 * C619 +
            C55523 * C146 - C55524 * C137 - C55523 * C147 + C55518 * C161) *
               C154164 * C154011 * C154082 * C1307) *
              C1310 +
          ((C55523 * C148 - C55524 * C138 - C55523 * C149 + C55518 * C162 +
            C55525 * C596 - C55526 * C582 - C55525 * C597 + C55519 * C618 +
            C55527 * C606 - C55528 * C587 - C55527 * C607 + C55520 * C623 +
            C55529 * C2333 - C55530 * C2326 - C55529 * C2334 + C55521 * C2341 +
            C55531 * C7781 - C55532 * C7775 - C55531 * C7782 + C55522 * C7787) *
               C154164 * C154011 * C154082 * C1307 -
           (C55531 * C9278 - C55532 * C9275 - C55531 * C9279 + C55522 * C9284 +
            C55529 * C6266 - C55530 * C6259 - C55529 * C6267 + C55521 * C6277 +
            C55527 * C1550 - C55528 * C1543 - C55527 * C1551 + C55520 * C1558 +
            C55525 * C1139 - C55526 * C1131 - C55525 * C1140 + C55519 * C1149 +
            C55523 * C359 - C55524 * C345 - C55523 * C360 + C55518 * C381) *
               C154164 * C154011 * C154082 * C154118) *
              C1311)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((C55523 * C144 - C55524 * C136 - C55523 * C145 + C55518 * C160 +
           C55525 * C600 - C55526 * C584 - C55525 * C601 + C55519 * C620 +
           C55527 * C602 - C55528 * C585 - C55527 * C603 + C55520 * C621 +
           C55529 * C2337 - C55530 * C2328 - C55529 * C2338 + C55521 * C2343 +
           C55531 * C7777 - C55532 * C7773 - C55531 * C7778 + C55522 * C7785) *
              C154164 * C154011 * C154082 * C1394 -
          (C55531 * C9282 - C55532 * C9277 - C55531 * C9283 + C55522 * C9286 +
           C55529 * C6274 - C55530 * C6263 - C55529 * C6275 + C55521 * C6281 +
           C55527 * C1554 - C55528 * C1545 - C55527 * C1555 + C55520 * C1560 +
           C55525 * C1135 - C55526 * C1129 - C55525 * C1136 + C55519 * C1147 +
           C55523 * C363 - C55524 * C347 - C55523 * C364 + C55518 * C383) *
              C154164 * C154011 * C154082 * C1395 +
          (C55523 * C365 - C55524 * C348 - C55523 * C366 + C55518 * C384 +
           C55525 * C1985 - C55526 * C1976 - C55525 * C1986 + C55519 * C1991 +
           C55527 * C3445 - C55528 * C3441 - C55527 * C3446 + C55520 * C3453 +
           C55529 * C6272 - C55530 * C6262 - C55529 * C6273 + C55521 * C6280 +
           C55531 * C31084 - C55532 * C31082 - C55531 * C31085 +
           C55522 * C31088) *
              C154164 * C154011 * C154082 * C1396 -
          (C55531 * C32489 - C55532 * C32488 - C55531 * C32490 +
           C55522 * C32491 + C55529 * C30002 - C55530 * C29999 -
           C55529 * C30003 + C55521 * C30005 + C55527 * C4912 - C55528 * C4907 -
           C55527 * C4913 + C55520 * C4916 + C55525 * C4258 - C55526 * C4254 -
           C55525 * C4259 + C55519 * C4266 + C55523 * C1412 - C55524 * C1403 -
           C55523 * C1413 + C55518 * C1418) *
              C154164 * C154011 * C154082 * C1397) *
         C154047) /
            (p * q * std::sqrt(p + q));
    d2ee[190] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                     C154164 * C123 +
                 C211 * C124 + C212 * C125 + C213 * C126 + C214 * C127) *
                    C2114 -
                (C685 * C127 + C686 * C126 + C687 * C125 + C688 * C124 +
                 (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                     C154164 * C123) *
                    C154146) *
                   C154392 +
               (((C134 * C1135 - C135 * C1129 - C134 * C1136 +
                  C154181 * C1147) *
                     C154164 * C123 +
                 C1182 * C124 + C1183 * C125 + C1184 * C126 + C1185 * C127) *
                    C154146 -
                (C448 * C127 + C449 * C126 + C450 * C125 + C451 * C124 +
                 (C134 * C363 - C135 * C347 - C134 * C364 + C154181 * C383) *
                     C154164 * C123) *
                    C2114) *
                   C154118) *
                  C154384 +
              (((C688 * C123 + C687 * C124 + C686 * C125 + C685 * C126 +
                 C967 * C127) *
                    C154146 -
                (C215 * C127 + C214 * C126 + C213 * C125 + C212 * C124 +
                 C211 * C123) *
                    C2114) *
                   C154392 +
               ((C451 * C123 + C450 * C124 + C449 * C125 + C448 * C126 +
                 C831 * C127) *
                    C2114 -
                ((C134 * C1145 - C135 * C1134 - C134 * C1146 +
                  C154181 * C1152) *
                     C154164 * C127 +
                 C1185 * C126 + C1184 * C125 + C1183 * C124 + C1182 * C123) *
                    C154146) *
                   C154118) *
                  C154053) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                      C154480 +
                  C3210 * C154468 + C3211 * C154442) *
                     C2902 +
                 (C2906 + C2907 + C2908) * C2903 + C2920 * C154429) *
                    C2114 -
                (C3960 * C154429 + (C3507 + C3468 + C3469) * C2903 +
                 (C4299 * C154442 + C4300 * C154468 +
                  (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                      C154480) *
                     C2902) *
                    C154146) *
                   C154392 +
               (((C4300 * C154480 + C4299 * C154468 + C5676 * C154442) * C2902 +
                 (C4279 + C4280 + C4303) * C2903 +
                 (C4285 + C4286 + C4304) * C154429) *
                    C154146 -
                (C3734 * C154429 + (C3219 + C3174 + C3175) * C2903 +
                 (C3214 * C154442 + C3211 * C154468 + C3210 * C154480) *
                     C2902) *
                    C2114) *
                   C154118) *
                  C154384 +
              ((((C3469 + C3468 + C3507) * C2902 +
                 (C3463 + C3462 + C3506) * C2903 +
                 (C3954 + C3955 + C3964) * C154429) *
                    C154146 -
                (C2921 * C154429 + (C2911 + C2910 + C2909) * C2903 +
                 (C2908 + C2907 + C2906) * C2902) *
                    C2114) *
                   C154392 +
               (((C3175 + C3174 + C3219) * C2902 +
                 (C3169 + C3168 + C3218) * C2903 +
                 (C3731 + C3732 + C3733) * C154429) *
                    C2114 -
                (((C134 * C4264 - C135 * C4257 - C134 * C4265 +
                   C154181 * C4269) *
                      C154442 +
                  C3963 * C154468 + C1180 * C154480) *
                     C154429 +
                 (C4304 + C4286 + C4285) * C2903 +
                 (C4303 + C4280 + C4279) * C2902) *
                    C154146) *
                   C154118) *
                  C154053)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C7157 * C144 - C7158 * C136 - C7157 * C145 + C154481 * C160 +
              C7159 * C600 - C7160 * C584 - C7159 * C601 + C154470 * C620 +
              C7161 * C602 - C7162 * C585 - C7161 * C603 + C154445 * C621) *
                 C154164 * C2902 +
             (C7236 + C7237 + C7238) * C154164 * C2903 + C7252 * C154429) *
                C2114 -
            (C8351 * C154429 + (C7865 + C7866 + C7867) * C154164 * C2903 +
             (C7161 * C2337 - C7162 * C2328 - C7161 * C2338 + C154445 * C2343 +
              C7159 * C602 - C7160 * C585 - C7159 * C603 + C154470 * C621 +
              C7157 * C600 - C7158 * C584 - C7157 * C601 + C154481 * C620) *
                 C154164 * C2902) *
                C154146) *
               C154392 +
           (((C7157 * C1135 - C7158 * C1129 - C7157 * C1136 + C154481 * C1147 +
              C7159 * C1554 - C7160 * C1545 - C7159 * C1555 + C154470 * C1560 +
              C7161 * C6274 - C7162 * C6263 - C7161 * C6275 + C154445 * C6281) *
                 C154164 * C2902 +
             (C8688 + C8689 + C8690) * C154164 * C2903 +
             (C8691 + C8692 + C8693) * C154164 * C154429) *
                C154146 -
            (C8109 * C154429 + (C7547 + C7548 + C7549) * C154164 * C2903 +
             (C7161 * C1554 - C7162 * C1545 - C7161 * C1555 + C154445 * C1560 +
              C7159 * C1135 - C7160 * C1129 - C7159 * C1136 + C154470 * C1147 +
              C7157 * C363 - C7158 * C347 - C7157 * C364 + C154481 * C383) *
                 C154164 * C2902) *
                C2114) *
               C154118) *
              C154384 +
          ((((C7867 + C7866 + C7865) * C154164 * C2902 +
             (C7864 + C7863 + C7862) * C154164 * C2903 +
             (C8355 + C8356 + C8357) * C154164 * C154429) *
                C154146 -
            (C7253 * C154429 + (C7241 + C7240 + C7239) * C154164 * C2903 +
             (C7238 + C7237 + C7236) * C154164 * C2902) *
                C2114) *
               C154392 +
           (((C7549 + C7548 + C7547) * C154164 * C2902 +
             (C7546 + C7545 + C7544) * C154164 * C2903 +
             (C8113 + C8114 + C8115) * C154164 * C154429) *
                C2114 -
            ((C7161 * C8648 - C7162 * C8647 - C7161 * C8649 + C154445 * C8650 +
              C7159 * C1548 - C7160 * C1542 - C7159 * C1549 + C154470 * C1557 +
              C7157 * C1141 - C7158 * C1132 - C7157 * C1142 + C154481 * C1150) *
                 C154164 * C154429 +
             (C8693 + C8692 + C8691) * C154164 * C2903 +
             (C8690 + C8689 + C8688) * C154164 * C2902) *
                C154146) *
               C154118) *
              C154053)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                  C24270 +
              C3210 * C24271 + C3211 * C154442) *
                 C154477 +
             (C24277 + C24278 + C24279) * C154458 + C24291 * C154429) *
                C2114 -
            (C25198 * C154429 + (C24744 + C24745 + C24746) * C154458 +
             (C4299 * C154442 + C4300 * C24271 +
              (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                  C24270) *
                 C154477) *
                C154146) *
               C154392 +
           (((C4300 * C24270 + C4299 * C24271 + C5676 * C154442) * C154477 +
             (C25489 + C25490 + C25491) * C154458 +
             (C25492 + C25493 + C25494) * C154429) *
                C154146 -
            (C24975 * C154429 + (C24514 + C24515 + C24516) * C154458 +
             (C3214 * C154442 + C3211 * C24271 + C3210 * C24270) * C154477) *
                C2114) *
               C154118) *
              C154384 +
          ((((C24746 + C24745 + C24744) * C154477 +
             (C24743 + C24742 + C24741) * C154458 +
             (C25195 + C25196 + C25197) * C154429) *
                C154146 -
            (C24292 * C154429 + (C24282 + C24281 + C24280) * C154458 +
             (C24279 + C24278 + C24277) * C154477) *
                C2114) *
               C154392 +
           (((C24516 + C24515 + C24514) * C154477 +
             (C24513 + C24512 + C24511) * C154458 +
             (C24972 + C24973 + C24974) * C154429) *
                C2114 -
            (((C134 * C4264 - C135 * C4257 - C134 * C4265 + C154181 * C4269) *
                  C154442 +
              C3963 * C24271 + C1180 * C24270) *
                 C154429 +
             (C25494 + C25493 + C25492) * C154458 +
             (C25491 + C25490 + C25489) * C154477) *
                C154146) *
               C154118) *
              C154053)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C28192 +
             C3210 * C28193 + C3211 * C28194 + C3214 * C28195 +
             C4687 * C28196) *
                C154011 * C2114 -
            (C28899 * C28196 + C5676 * C28195 + C4299 * C28194 +
             C4300 * C28193 +
             (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                 C28192) *
                C154011 * C154146) *
               C154392 +
           ((C4300 * C28192 + C4299 * C28193 + C5676 * C28194 +
             C28899 * C28195 + C29672 * C28196) *
                C154011 * C154146 -
            (C28341 * C28196 + C4687 * C28195 + C3214 * C28194 +
             C3211 * C28193 + C3210 * C28192) *
                C154011 * C2114) *
               C154118) *
              C154384 +
          (((C680 * C28192 + C1178 * C28193 + C3501 * C28194 + C4301 * C28195 +
             C28900 * C28196) *
                C154011 * C154146 -
            (C3215 * C28196 + C3213 * C28195 + C444 * C28194 + C443 * C28193 +
             C205 * C28192) *
                C154011 * C2114) *
               C154392 +
           ((C443 * C28192 + C444 * C28193 + C3213 * C28194 + C3215 * C28195 +
             C28342 * C28196) *
                C154011 * C2114 -
            ((C134 * C28882 - C135 * C28879 - C134 * C28883 +
              C154181 * C28885) *
                 C28196 +
             C28900 * C28195 + C4301 * C28194 + C3501 * C28193 +
             C1178 * C28192) *
                C154011 * C154146) *
               C154118) *
              C154053)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C7157 * C144 - C7158 * C136 - C7157 * C145 + C154481 * C160 +
              C7159 * C600 - C7160 * C584 - C7159 * C601 + C154470 * C620 +
              C7161 * C602 - C7162 * C585 - C7161 * C603 + C154445 * C621) *
                 C24270 +
             (C30851 + C30852 + C30853) * C24271 + C30864 * C154442) *
                C154011 * C2114 -
            (C33274 * C154442 + (C31878 + C31879 + C31880) * C24271 +
             (C7161 * C2337 - C7162 * C2328 - C7161 * C2338 + C154445 * C2343 +
              C7159 * C602 - C7160 * C585 - C7159 * C603 + C154470 * C621 +
              C7157 * C600 - C7158 * C584 - C7157 * C601 + C154481 * C620) *
                 C24270) *
                C154011 * C154146) *
               C154392 +
           (((C31880 + C31879 + C31878) * C24270 +
             (C31877 + C31876 + C31875) * C24271 +
             (C33281 + C33282 + C33283) * C154442) *
                C154011 * C154146 -
            (C32261 * C154442 + (C30856 + C30855 + C30854) * C24271 +
             (C30853 + C30852 + C30851) * C24270) *
                C154011 * C2114) *
               C154118) *
              C154384 +
          ((((C7867 + C7866 + C7865) * C24270 +
             (C8688 + C8689 + C8690) * C24271 +
             (C31881 + C31882 + C31883) * C154442) *
                C154011 * C154146 -
            (C30838 * C154442 + (C7547 + C7548 + C7549) * C24271 +
             (C7238 + C7237 + C7236) * C24270) *
                C154011 * C2114) *
               C154392 +
           (((C7549 + C7548 + C7547) * C24270 +
             (C7550 + C7551 + C7552) * C24271 +
             (C30860 + C30861 + C30862) * C154442) *
                C154011 * C2114 -
            ((C7161 * C31817 - C7162 * C31816 - C7161 * C31818 +
              C154445 * C31819 + C7159 * C4910 - C7160 * C4906 - C7159 * C4911 +
              C154470 * C4915 + C7157 * C4260 - C7158 * C4255 - C7157 * C4261 +
              C154481 * C4267) *
                 C154442 +
             (C31883 + C31882 + C31881) * C24271 +
             (C8690 + C8689 + C8688) * C24270) *
                C154011 * C154146) *
               C154118) *
              C154053)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C47141 * C144 - C47142 * C136 - C47141 * C145 + C47138 * C160 +
              C47143 * C600 - C47144 * C584 - C47143 * C601 + C47139 * C620 +
              C47145 * C602 - C47146 * C585 - C47145 * C603 + C154445 * C621) *
                 C154164 * C154477 +
             (C47220 + C47221 + C47222) * C154164 * C154458 +
             C47236 * C154429) *
                C2114 -
            (C48319 * C154429 + (C47833 + C47834 + C47835) * C154164 * C154458 +
             (C47145 * C2337 - C47146 * C2328 - C47145 * C2338 +
              C154445 * C2343 + C47143 * C602 - C47144 * C585 - C47143 * C603 +
              C47139 * C621 + C47141 * C600 - C47142 * C584 - C47141 * C601 +
              C47138 * C620) *
                 C154164 * C154477) *
                C154146) *
               C154392 +
           (((C47141 * C1135 - C47142 * C1129 - C47141 * C1136 +
              C47138 * C1147 + C47143 * C1554 - C47144 * C1545 -
              C47143 * C1555 + C47139 * C1560 + C47145 * C6274 -
              C47146 * C6263 - C47145 * C6275 + C154445 * C6281) *
                 C154164 * C154477 +
             (C48652 + C48653 + C48654) * C154164 * C154458 +
             (C48655 + C48656 + C48657) * C154164 * C154429) *
                C154146 -
            (C48077 * C154429 + (C47531 + C47532 + C47533) * C154164 * C154458 +
             (C47145 * C1554 - C47146 * C1545 - C47145 * C1555 +
              C154445 * C1560 + C47143 * C1135 - C47144 * C1129 -
              C47143 * C1136 + C47139 * C1147 + C47141 * C363 - C47142 * C347 -
              C47141 * C364 + C47138 * C383) *
                 C154164 * C154477) *
                C2114) *
               C154118) *
              C154384 +
          ((((C47835 + C47834 + C47833) * C154164 * C154477 +
             (C47832 + C47831 + C47830) * C154164 * C154458 +
             (C48323 + C48324 + C48325) * C154164 * C154429) *
                C154146 -
            (C47237 * C154429 + (C47225 + C47224 + C47223) * C154164 * C154458 +
             (C47222 + C47221 + C47220) * C154164 * C154477) *
                C2114) *
               C154392 +
           (((C47533 + C47532 + C47531) * C154164 * C154477 +
             (C47530 + C47529 + C47528) * C154164 * C154458 +
             (C48081 + C48082 + C48083) * C154164 * C154429) *
                C2114 -
            ((C47145 * C8648 - C47146 * C8647 - C47145 * C8649 +
              C154445 * C8650 + C47143 * C1548 - C47144 * C1542 -
              C47143 * C1549 + C47139 * C1557 + C47141 * C1141 -
              C47142 * C1132 - C47141 * C1142 + C47138 * C1150) *
                 C154164 * C154429 +
             (C48657 + C48656 + C48655) * C154164 * C154458 +
             (C48654 + C48653 + C48652) * C154164 * C154477) *
                C154146) *
               C154118) *
              C154053)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C47141 * C144 - C47142 * C136 - C47141 * C145 + C47138 * C160 +
              C47143 * C600 - C47144 * C584 - C47143 * C601 + C47139 * C620 +
              C47145 * C602 - C47146 * C585 - C47145 * C603 + C154445 * C621) *
                 C154480 +
             (C51712 + C51713 + C51714) * C154468 + C51725 * C154442) *
                C154011 * C2114 -
            (C54119 * C154442 + (C52727 + C52728 + C52729) * C154468 +
             (C47145 * C2337 - C47146 * C2328 - C47145 * C2338 +
              C154445 * C2343 + C47143 * C602 - C47144 * C585 - C47143 * C603 +
              C47139 * C621 + C47141 * C600 - C47142 * C584 - C47141 * C601 +
              C47138 * C620) *
                 C154480) *
                C154011 * C154146) *
               C154392 +
           (((C52729 + C52728 + C52727) * C154480 +
             (C52726 + C52725 + C52724) * C154468 +
             (C54126 + C54127 + C54128) * C154442) *
                C154011 * C154146 -
            (C53110 * C154442 + (C51717 + C51716 + C51715) * C154468 +
             (C51714 + C51713 + C51712) * C154480) *
                C154011 * C2114) *
               C154118) *
              C154384 +
          ((((C47835 + C47834 + C47833) * C154480 +
             (C48652 + C48653 + C48654) * C154468 +
             (C52730 + C52731 + C52732) * C154442) *
                C154011 * C154146 -
            (C51699 * C154442 + (C47531 + C47532 + C47533) * C154468 +
             (C47222 + C47221 + C47220) * C154480) *
                C154011 * C2114) *
               C154392 +
           (((C47533 + C47532 + C47531) * C154480 +
             (C47534 + C47535 + C47536) * C154468 +
             (C51721 + C51722 + C51723) * C154442) *
                C154011 * C2114 -
            ((C47145 * C31817 - C47146 * C31816 - C47145 * C31818 +
              C154445 * C31819 + C47143 * C4910 - C47144 * C4906 -
              C47143 * C4911 + C47139 * C4915 + C47141 * C4260 -
              C47142 * C4255 - C47141 * C4261 + C47138 * C4267) *
                 C154442 +
             (C52732 + C52731 + C52730) * C154468 +
             (C48654 + C48653 + C48652) * C154480) *
                C154011 * C154146) *
               C154118) *
              C154053)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C55523 * C144 - C55524 * C136 - C55523 * C145 + C55518 * C160 +
             C55525 * C600 - C55526 * C584 - C55525 * C601 + C55519 * C620 +
             C55527 * C602 - C55528 * C585 - C55527 * C603 + C55520 * C621 +
             C55529 * C2337 - C55530 * C2328 - C55529 * C2338 + C55521 * C2343 +
             C55531 * C7777 - C55532 * C7773 - C55531 * C7778 +
             C55522 * C7785) *
                C154164 * C154011 * C2114 -
            (C55531 * C10602 - C55532 * C10597 - C55531 * C10603 +
             C55522 * C10606 + C55529 * C7777 - C55530 * C7773 -
             C55529 * C7778 + C55521 * C7785 + C55527 * C2337 - C55528 * C2328 -
             C55527 * C2338 + C55520 * C2343 + C55525 * C602 - C55526 * C585 -
             C55525 * C603 + C55519 * C621 + C55523 * C600 - C55524 * C584 -
             C55523 * C601 + C55518 * C620) *
                C154164 * C154011 * C154146) *
               C154392 +
           ((C55523 * C1135 - C55524 * C1129 - C55523 * C1136 + C55518 * C1147 +
             C55525 * C1554 - C55526 * C1545 - C55525 * C1555 + C55519 * C1560 +
             C55527 * C6274 - C55528 * C6263 - C55527 * C6275 + C55520 * C6281 +
             C55529 * C9282 - C55530 * C9277 - C55529 * C9283 + C55521 * C9286 +
             C55531 * C33869 - C55532 * C33866 - C55531 * C33870 +
             C55522 * C33872) *
                C154164 * C154011 * C154146 -
            (C55531 * C9282 - C55532 * C9277 - C55531 * C9283 + C55522 * C9286 +
             C55529 * C6274 - C55530 * C6263 - C55529 * C6275 + C55521 * C6281 +
             C55527 * C1554 - C55528 * C1545 - C55527 * C1555 + C55520 * C1560 +
             C55525 * C1135 - C55526 * C1129 - C55525 * C1136 + C55519 * C1147 +
             C55523 * C363 - C55524 * C347 - C55523 * C364 + C55518 * C383) *
                C154164 * C154011 * C2114) *
               C154118) *
              C154384 +
          (((C55523 * C598 - C55524 * C583 - C55523 * C599 + C55518 * C619 +
             C55525 * C604 - C55526 * C586 - C55525 * C605 + C55519 * C622 +
             C55527 * C2335 - C55528 * C2327 - C55527 * C2336 + C55520 * C2342 +
             C55529 * C7779 - C55530 * C7774 - C55529 * C7780 + C55521 * C7786 +
             C55531 * C10600 - C55532 * C10596 - C55531 * C10601 +
             C55522 * C10605) *
                C154164 * C154011 * C154146 -
            (C55531 * C7779 - C55532 * C7774 - C55531 * C7780 + C55522 * C7786 +
             C55529 * C2335 - C55530 * C2327 - C55529 * C2336 + C55521 * C2342 +
             C55527 * C604 - C55528 * C586 - C55527 * C605 + C55520 * C622 +
             C55525 * C598 - C55526 * C583 - C55525 * C599 + C55519 * C619 +
             C55523 * C146 - C55524 * C137 - C55523 * C147 + C55518 * C161) *
                C154164 * C154011 * C2114) *
               C154392 +
           ((C55523 * C361 - C55524 * C346 - C55523 * C362 + C55518 * C382 +
             C55525 * C1137 - C55526 * C1130 - C55525 * C1138 + C55519 * C1148 +
             C55527 * C1552 - C55528 * C1544 - C55527 * C1553 + C55520 * C1559 +
             C55529 * C6270 - C55530 * C6261 - C55529 * C6271 + C55521 * C6279 +
             C55531 * C9280 - C55532 * C9276 - C55531 * C9281 +
             C55522 * C9285) *
                C154164 * C154011 * C2114 -
            (C55531 * C56192 - C55532 * C56191 - C55531 * C56193 +
             C55522 * C56194 + C55529 * C9280 - C55530 * C9276 -
             C55529 * C9281 + C55521 * C9285 + C55527 * C6270 - C55528 * C6261 -
             C55527 * C6271 + C55520 * C6279 + C55525 * C1552 - C55526 * C1544 -
             C55525 * C1553 + C55519 * C1559 + C55523 * C1137 - C55524 * C1130 -
             C55523 * C1138 + C55518 * C1148) *
                C154164 * C154011 * C154146) *
               C154118) *
              C154053)) /
            (p * q * std::sqrt(p + q));
    d2ee[191] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                    C154164 * C123 +
                C211 * C124 + C212 * C125 + C213 * C126 + C214 * C127) *
                   C154465 -
               (C685 * C127 + C686 * C126 + C687 * C125 + C688 * C124 +
                (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                    C154164 * C123) *
                   C154466 +
               ((C134 * C602 - C135 * C585 - C134 * C603 + C154181 * C621) *
                    C154164 * C123 +
                C689 * C124 + C690 * C125 + C691 * C126 + C692 * C127) *
                   C2630) *
                  C154392 +
              (((C134 * C1135 - C135 * C1129 - C134 * C1136 + C154181 * C1147) *
                    C154164 * C123 +
                C1182 * C124 + C1183 * C125 + C1184 * C126 + C1185 * C127) *
                   C154466 -
               (C448 * C127 + C449 * C126 + C450 * C125 + C451 * C124 +
                (C134 * C363 - C135 * C347 - C134 * C364 + C154181 * C383) *
                    C154164 * C123) *
                   C154465 -
               ((C134 * C1546 - C135 * C1541 - C134 * C1547 + C154181 * C1556) *
                    C154164 * C127 +
                (C134 * C1548 - C135 * C1542 - C134 * C1549 + C154181 * C1557) *
                    C154164 * C126 +
                (C134 * C1550 - C135 * C1543 - C134 * C1551 + C154181 * C1558) *
                    C154164 * C125 +
                (C134 * C1552 - C135 * C1544 - C134 * C1553 + C154181 * C1559) *
                    C154164 * C124 +
                (C134 * C1554 - C135 * C1545 - C134 * C1555 + C154181 * C1560) *
                    C154164 * C123) *
                   C2630) *
                  C154118) *
             C154047 +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                     C154480 +
                 C3210 * C154468 + C3211 * C154442) *
                    C2902 +
                (C2906 + C2907 + C2908) * C2903 + C2920 * C154429) *
                   C154465 -
               (C3960 * C154429 + (C3507 + C3468 + C3469) * C2903 +
                (C4299 * C154442 + C4300 * C154468 +
                 (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                     C154480) *
                    C2902) *
                   C154466 +
               (((C134 * C602 - C135 * C585 - C134 * C603 + C154181 * C621) *
                     C154480 +
                 C4930 * C154468 + C4931 * C154442) *
                    C2902 +
                (C3470 + C3508 + C3509) * C2903 +
                (C3479 + C3510 + C3511) * C154429) *
                   C2630) *
                  C154392 +
              (((C4300 * C154480 + C4299 * C154468 + C5676 * C154442) * C2902 +
                (C4279 + C4280 + C4303) * C2903 +
                (C4285 + C4286 + C4304) * C154429) *
                   C154466 -
               (C3734 * C154429 + (C3219 + C3174 + C3175) * C2903 +
                (C3214 * C154442 + C3211 * C154468 + C3210 * C154480) * C2902) *
                   C154465 -
               (((C134 * C4908 - C135 * C4905 - C134 * C4909 +
                  C154181 * C4914) *
                     C154442 +
                 C3505 * C154468 + C3504 * C154480) *
                    C154429 +
                ((C134 * C4910 - C135 * C4906 - C134 * C4911 +
                  C154181 * C4915) *
                     C154442 +
                 C3503 * C154468 + C3502 * C154480) *
                    C2903 +
                ((C134 * C4912 - C135 * C4907 - C134 * C4913 +
                  C154181 * C4916) *
                     C154442 +
                 C4931 * C154468 + C4930 * C154480) *
                    C2902) *
                   C2630) *
                  C154118) *
             C154047) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C7157 * C144 - C7158 * C136 - C7157 * C145 + C154481 * C160 +
             C7159 * C600 - C7160 * C584 - C7159 * C601 + C154470 * C620 +
             C7161 * C602 - C7162 * C585 - C7161 * C603 + C154445 * C621) *
                C154164 * C2902 +
            (C7236 + C7237 + C7238) * C154164 * C2903 + C7252 * C154429) *
               C154465 -
           (C8351 * C154429 + (C7865 + C7866 + C7867) * C154164 * C2903 +
            (C7161 * C2337 - C7162 * C2328 - C7161 * C2338 + C154445 * C2343 +
             C7159 * C602 - C7160 * C585 - C7159 * C603 + C154470 * C621 +
             C7157 * C600 - C7158 * C584 - C7157 * C601 + C154481 * C620) *
                C154164 * C2902) *
               C154466 +
           ((C7157 * C602 - C7158 * C585 - C7157 * C603 + C154481 * C621 +
             C7159 * C2337 - C7160 * C2328 - C7159 * C2338 + C154470 * C2343 +
             C7161 * C7777 - C7162 * C7773 - C7161 * C7778 + C154445 * C7785) *
                C154164 * C2902 +
            (C7868 + C7869 + C7870) * C154164 * C2903 +
            (C7871 + C7872 + C7873) * C154164 * C154429) *
               C2630) *
              C154392 +
          (((C7157 * C1135 - C7158 * C1129 - C7157 * C1136 + C154481 * C1147 +
             C7159 * C1554 - C7160 * C1545 - C7159 * C1555 + C154470 * C1560 +
             C7161 * C6274 - C7162 * C6263 - C7161 * C6275 + C154445 * C6281) *
                C154164 * C2902 +
            (C8688 + C8689 + C8690) * C154164 * C2903 +
            (C8691 + C8692 + C8693) * C154164 * C154429) *
               C154466 -
           (C8109 * C154429 + (C7547 + C7548 + C7549) * C154164 * C2903 +
            (C7161 * C1554 - C7162 * C1545 - C7161 * C1555 + C154445 * C1560 +
             C7159 * C1135 - C7160 * C1129 - C7159 * C1136 + C154470 * C1147 +
             C7157 * C363 - C7158 * C347 - C7157 * C364 + C154481 * C383) *
                C154164 * C2902) *
               C154465 -
           ((C7161 * C9278 - C7162 * C9275 - C7161 * C9279 + C154445 * C9284 +
             C7159 * C6266 - C7160 * C6259 - C7159 * C6267 + C154470 * C6277 +
             C7157 * C1550 - C7158 * C1543 - C7157 * C1551 + C154481 * C1558) *
                C154164 * C154429 +
            (C7161 * C9280 - C7162 * C9276 - C7161 * C9281 + C154445 * C9285 +
             C7159 * C6270 - C7160 * C6261 - C7159 * C6271 + C154470 * C6279 +
             C7157 * C1552 - C7158 * C1544 - C7157 * C1553 + C154481 * C1559) *
                C154164 * C2903 +
            (C7161 * C9282 - C7162 * C9277 - C7161 * C9283 + C154445 * C9286 +
             C7159 * C6274 - C7160 * C6263 - C7159 * C6275 + C154470 * C6281 +
             C7157 * C1554 - C7158 * C1545 - C7157 * C1555 + C154481 * C1560) *
                C154164 * C2902) *
               C2630) *
              C154118) *
         C154047) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C24270 +
             C3210 * C24271 + C3211 * C154442) *
                C154477 +
            (C24277 + C24278 + C24279) * C154458 + C24291 * C154429) *
               C154465 -
           (C25198 * C154429 + (C24744 + C24745 + C24746) * C154458 +
            (C4299 * C154442 + C4300 * C24271 +
             (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                 C24270) *
                C154477) *
               C154466 +
           (((C134 * C602 - C135 * C585 - C134 * C603 + C154181 * C621) *
                 C24270 +
             C4930 * C24271 + C4931 * C154442) *
                C154477 +
            (C24747 + C24748 + C24749) * C154458 +
            (C24750 + C24751 + C24752) * C154429) *
               C2630) *
              C154392 +
          (((C4300 * C24270 + C4299 * C24271 + C5676 * C154442) * C154477 +
            (C25489 + C25490 + C25491) * C154458 +
            (C25492 + C25493 + C25494) * C154429) *
               C154466 -
           (C24975 * C154429 + (C24514 + C24515 + C24516) * C154458 +
            (C3214 * C154442 + C3211 * C24271 + C3210 * C24270) * C154477) *
               C154465 -
           (((C134 * C4908 - C135 * C4905 - C134 * C4909 + C154181 * C4914) *
                 C154442 +
             C3505 * C24271 + C3504 * C24270) *
                C154429 +
            ((C134 * C4910 - C135 * C4906 - C134 * C4911 + C154181 * C4915) *
                 C154442 +
             C3503 * C24271 + C3502 * C24270) *
                C154458 +
            ((C134 * C4912 - C135 * C4907 - C134 * C4913 + C154181 * C4916) *
                 C154442 +
             C4931 * C24271 + C4930 * C24270) *
                C154477) *
               C2630) *
              C154118) *
         C154047) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                C28192 +
            C3210 * C28193 + C3211 * C28194 + C3214 * C28195 + C4687 * C28196) *
               C154011 * C154465 -
           (C28899 * C28196 + C5676 * C28195 + C4299 * C28194 + C4300 * C28193 +
            (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                C28192) *
               C154011 * C154466 +
           ((C134 * C602 - C135 * C585 - C134 * C603 + C154181 * C621) *
                C28192 +
            C4930 * C28193 + C4931 * C28194 + C29254 * C28195 +
            C29255 * C28196) *
               C154011 * C2630) *
              C154392 +
          ((C4300 * C28192 + C4299 * C28193 + C5676 * C28194 + C28899 * C28195 +
            C29672 * C28196) *
               C154011 * C154466 -
           (C28341 * C28196 + C4687 * C28195 + C3214 * C28194 + C3211 * C28193 +
            C3210 * C28192) *
               C154011 * C154465 -
           ((C134 * C29238 - C135 * C29237 - C134 * C29239 + C154181 * C29240) *
                C28196 +
            C29255 * C28195 + C29254 * C28194 + C4931 * C28193 +
            C4930 * C28192) *
               C154011 * C2630) *
              C154118) *
         C154047) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C7157 * C144 - C7158 * C136 - C7157 * C145 + C154481 * C160 +
             C7159 * C600 - C7160 * C584 - C7159 * C601 + C154470 * C620 +
             C7161 * C602 - C7162 * C585 - C7161 * C603 + C154445 * C621) *
                C24270 +
            (C30851 + C30852 + C30853) * C24271 + C30864 * C154442) *
               C154011 * C154465 -
           (C33274 * C154442 + (C31878 + C31879 + C31880) * C24271 +
            (C7161 * C2337 - C7162 * C2328 - C7161 * C2338 + C154445 * C2343 +
             C7159 * C602 - C7160 * C585 - C7159 * C603 + C154470 * C621 +
             C7157 * C600 - C7158 * C584 - C7157 * C601 + C154481 * C620) *
                C24270) *
               C154011 * C154466 +
           ((C7157 * C602 - C7158 * C585 - C7157 * C603 + C154481 * C621 +
             C7159 * C2337 - C7160 * C2328 - C7159 * C2338 + C154470 * C2343 +
             C7161 * C7777 - C7162 * C7773 - C7161 * C7778 + C154445 * C7785) *
                C24270 +
            (C32529 + C32530 + C32531) * C24271 +
            (C32532 + C32533 + C32534) * C154442) *
               C154011 * C2630) *
              C154392 +
          (((C31880 + C31879 + C31878) * C24270 +
            (C31877 + C31876 + C31875) * C24271 +
            (C33281 + C33282 + C33283) * C154442) *
               C154011 * C154466 -
           (C32261 * C154442 + (C30856 + C30855 + C30854) * C24271 +
            (C30853 + C30852 + C30851) * C24270) *
               C154011 * C154465 -
           ((C7161 * C32489 - C7162 * C32488 - C7161 * C32490 +
             C154445 * C32491 + C7159 * C30002 - C7160 * C29999 -
             C7159 * C30003 + C154470 * C30005 + C7157 * C4912 - C7158 * C4907 -
             C7157 * C4913 + C154481 * C4916) *
                C154442 +
            (C32534 + C32533 + C32532) * C24271 +
            (C32531 + C32530 + C32529) * C24270) *
               C154011 * C2630) *
              C154118) *
         C154047) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C47141 * C144 - C47142 * C136 - C47141 * C145 + C47138 * C160 +
             C47143 * C600 - C47144 * C584 - C47143 * C601 + C47139 * C620 +
             C47145 * C602 - C47146 * C585 - C47145 * C603 + C154445 * C621) *
                C154164 * C154477 +
            (C47220 + C47221 + C47222) * C154164 * C154458 + C47236 * C154429) *
               C154465 -
           (C48319 * C154429 + (C47833 + C47834 + C47835) * C154164 * C154458 +
            (C47145 * C2337 - C47146 * C2328 - C47145 * C2338 +
             C154445 * C2343 + C47143 * C602 - C47144 * C585 - C47143 * C603 +
             C47139 * C621 + C47141 * C600 - C47142 * C584 - C47141 * C601 +
             C47138 * C620) *
                C154164 * C154477) *
               C154466 +
           ((C47141 * C602 - C47142 * C585 - C47141 * C603 + C47138 * C621 +
             C47143 * C2337 - C47144 * C2328 - C47143 * C2338 + C47139 * C2343 +
             C47145 * C7777 - C47146 * C7773 - C47145 * C7778 +
             C154445 * C7785) *
                C154164 * C154477 +
            (C47836 + C47837 + C47838) * C154164 * C154458 +
            (C47839 + C47840 + C47841) * C154164 * C154429) *
               C2630) *
              C154392 +
          (((C47141 * C1135 - C47142 * C1129 - C47141 * C1136 + C47138 * C1147 +
             C47143 * C1554 - C47144 * C1545 - C47143 * C1555 + C47139 * C1560 +
             C47145 * C6274 - C47146 * C6263 - C47145 * C6275 +
             C154445 * C6281) *
                C154164 * C154477 +
            (C48652 + C48653 + C48654) * C154164 * C154458 +
            (C48655 + C48656 + C48657) * C154164 * C154429) *
               C154466 -
           (C48077 * C154429 + (C47531 + C47532 + C47533) * C154164 * C154458 +
            (C47145 * C1554 - C47146 * C1545 - C47145 * C1555 +
             C154445 * C1560 + C47143 * C1135 - C47144 * C1129 -
             C47143 * C1136 + C47139 * C1147 + C47141 * C363 - C47142 * C347 -
             C47141 * C364 + C47138 * C383) *
                C154164 * C154477) *
               C154465 -
           ((C47145 * C9278 - C47146 * C9275 - C47145 * C9279 +
             C154445 * C9284 + C47143 * C6266 - C47144 * C6259 -
             C47143 * C6267 + C47139 * C6277 + C47141 * C1550 - C47142 * C1543 -
             C47141 * C1551 + C47138 * C1558) *
                C154164 * C154429 +
            (C47145 * C9280 - C47146 * C9276 - C47145 * C9281 +
             C154445 * C9285 + C47143 * C6270 - C47144 * C6261 -
             C47143 * C6271 + C47139 * C6279 + C47141 * C1552 - C47142 * C1544 -
             C47141 * C1553 + C47138 * C1559) *
                C154164 * C154458 +
            (C47145 * C9282 - C47146 * C9277 - C47145 * C9283 +
             C154445 * C9286 + C47143 * C6274 - C47144 * C6263 -
             C47143 * C6275 + C47139 * C6281 + C47141 * C1554 - C47142 * C1545 -
             C47141 * C1555 + C47138 * C1560) *
                C154164 * C154477) *
               C2630) *
              C154118) *
         C154047) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C47141 * C144 - C47142 * C136 - C47141 * C145 + C47138 * C160 +
             C47143 * C600 - C47144 * C584 - C47143 * C601 + C47139 * C620 +
             C47145 * C602 - C47146 * C585 - C47145 * C603 + C154445 * C621) *
                C154480 +
            (C51712 + C51713 + C51714) * C154468 + C51725 * C154442) *
               C154011 * C154465 -
           (C54119 * C154442 + (C52727 + C52728 + C52729) * C154468 +
            (C47145 * C2337 - C47146 * C2328 - C47145 * C2338 +
             C154445 * C2343 + C47143 * C602 - C47144 * C585 - C47143 * C603 +
             C47139 * C621 + C47141 * C600 - C47142 * C584 - C47141 * C601 +
             C47138 * C620) *
                C154480) *
               C154011 * C154466 +
           ((C47141 * C602 - C47142 * C585 - C47141 * C603 + C47138 * C621 +
             C47143 * C2337 - C47144 * C2328 - C47143 * C2338 + C47139 * C2343 +
             C47145 * C7777 - C47146 * C7773 - C47145 * C7778 +
             C154445 * C7785) *
                C154480 +
            (C53374 + C53375 + C53376) * C154468 +
            (C53377 + C53378 + C53379) * C154442) *
               C154011 * C2630) *
              C154392 +
          (((C52729 + C52728 + C52727) * C154480 +
            (C52726 + C52725 + C52724) * C154468 +
            (C54126 + C54127 + C54128) * C154442) *
               C154011 * C154466 -
           (C53110 * C154442 + (C51717 + C51716 + C51715) * C154468 +
            (C51714 + C51713 + C51712) * C154480) *
               C154011 * C154465 -
           ((C47145 * C32489 - C47146 * C32488 - C47145 * C32490 +
             C154445 * C32491 + C47143 * C30002 - C47144 * C29999 -
             C47143 * C30003 + C47139 * C30005 + C47141 * C4912 -
             C47142 * C4907 - C47141 * C4913 + C47138 * C4916) *
                C154442 +
            (C53379 + C53378 + C53377) * C154468 +
            (C53376 + C53375 + C53374) * C154480) *
               C154011 * C2630) *
              C154118) *
         C154047) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C55523 * C144 - C55524 * C136 - C55523 * C145 + C55518 * C160 +
            C55525 * C600 - C55526 * C584 - C55525 * C601 + C55519 * C620 +
            C55527 * C602 - C55528 * C585 - C55527 * C603 + C55520 * C621 +
            C55529 * C2337 - C55530 * C2328 - C55529 * C2338 + C55521 * C2343 +
            C55531 * C7777 - C55532 * C7773 - C55531 * C7778 + C55522 * C7785) *
               C154164 * C154011 * C154465 -
           (C55531 * C10602 - C55532 * C10597 - C55531 * C10603 +
            C55522 * C10606 + C55529 * C7777 - C55530 * C7773 - C55529 * C7778 +
            C55521 * C7785 + C55527 * C2337 - C55528 * C2328 - C55527 * C2338 +
            C55520 * C2343 + C55525 * C602 - C55526 * C585 - C55525 * C603 +
            C55519 * C621 + C55523 * C600 - C55524 * C584 - C55523 * C601 +
            C55518 * C620) *
               C154164 * C154011 * C154466 +
           (C55523 * C602 - C55524 * C585 - C55523 * C603 + C55518 * C621 +
            C55525 * C2337 - C55526 * C2328 - C55525 * C2338 + C55519 * C2343 +
            C55527 * C7777 - C55528 * C7773 - C55527 * C7778 + C55520 * C7785 +
            C55529 * C10602 - C55530 * C10597 - C55529 * C10603 +
            C55521 * C10606 + C55531 * C55779 - C55532 * C55777 -
            C55531 * C55780 + C55522 * C55783) *
               C154164 * C154011 * C2630) *
              C154392 +
          ((C55523 * C1135 - C55524 * C1129 - C55523 * C1136 + C55518 * C1147 +
            C55525 * C1554 - C55526 * C1545 - C55525 * C1555 + C55519 * C1560 +
            C55527 * C6274 - C55528 * C6263 - C55527 * C6275 + C55520 * C6281 +
            C55529 * C9282 - C55530 * C9277 - C55529 * C9283 + C55521 * C9286 +
            C55531 * C33869 - C55532 * C33866 - C55531 * C33870 +
            C55522 * C33872) *
               C154164 * C154011 * C154466 -
           (C55531 * C9282 - C55532 * C9277 - C55531 * C9283 + C55522 * C9286 +
            C55529 * C6274 - C55530 * C6263 - C55529 * C6275 + C55521 * C6281 +
            C55527 * C1554 - C55528 * C1545 - C55527 * C1555 + C55520 * C1560 +
            C55525 * C1135 - C55526 * C1129 - C55525 * C1136 + C55519 * C1147 +
            C55523 * C363 - C55524 * C347 - C55523 * C364 + C55518 * C383) *
               C154164 * C154011 * C154465 -
           (C55531 * C56522 - C55532 * C56521 - C55531 * C56523 +
            C55522 * C56524 + C55529 * C33869 - C55530 * C33866 -
            C55529 * C33870 + C55521 * C33872 + C55527 * C9282 -
            C55528 * C9277 - C55527 * C9283 + C55520 * C9286 + C55525 * C6274 -
            C55526 * C6263 - C55525 * C6275 + C55519 * C6281 + C55523 * C1554 -
            C55524 * C1545 - C55523 * C1555 + C55518 * C1560) *
               C154164 * C154011 * C2630) *
              C154118) *
         C154047) /
            (p * q * std::sqrt(p + q));
    d2ee[192] +=
        (-0.25 * std::pow(Pi, 2.5) *
             ((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                    C154164 * C123 +
                C211 * C124 + C212 * C125 + C213 * C126 + C214 * C127) *
                   C2114 -
               (C685 * C127 + C686 * C126 + C687 * C125 + C688 * C124 +
                (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                    C154164 * C123) *
                   C154146) *
                  C154066 * C1309 +
              ((C688 * C123 + C687 * C124 + C686 * C125 + C685 * C126 +
                C967 * C127) *
                   C154146 -
               (C215 * C127 + C214 * C126 + C213 * C125 + C212 * C124 +
                C211 * C123) *
                   C2114) *
                  C154066 * C1310 +
              ((C212 * C123 + C213 * C124 + C214 * C125 + C215 * C126 +
                C216 * C127) *
                   C2114 -
               ((C134 * C956 - C135 * C955 - C134 * C957 + C154181 * C958) *
                    C154164 * C127 +
                C967 * C126 + C685 * C125 + C686 * C124 + C687 * C123) *
                   C154146) *
                  C154066 * C1311) -
         0.25 * std::pow(Pi, 2.5) *
             ((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                    C154164 * C123 +
                C211 * C124 + C212 * C125 + C213 * C126 + C214 * C127) *
                   C2114 -
               (C685 * C127 + C686 * C126 + C687 * C125 + C688 * C124 +
                (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                    C154164 * C123) *
                   C154146) *
                  C338 +
              (((C134 * C1135 - C135 * C1129 - C134 * C1136 + C154181 * C1147) *
                    C154164 * C123 +
                C1182 * C124 + C1183 * C125 + C1184 * C126 + C1185 * C127) *
                   C154146 -
               (C448 * C127 + C449 * C126 + C450 * C125 + C451 * C124 +
                (C134 * C363 - C135 * C347 - C134 * C364 + C154181 * C383) *
                    C154164 * C123) *
                   C2114) *
                  C339 +
              (((C134 * C365 - C135 * C348 - C134 * C366 + C154181 * C384) *
                    C154164 * C123 +
                C452 * C124 + C453 * C125 + C454 * C126 + C455 * C127) *
                   C2114 -
               ((C134 * C1977 - C135 * C1972 - C134 * C1978 + C154181 * C1987) *
                    C154164 * C127 +
                (C134 * C1979 - C135 * C1973 - C134 * C1980 + C154181 * C1988) *
                    C154164 * C126 +
                (C134 * C1981 - C135 * C1974 - C134 * C1982 + C154181 * C1989) *
                    C154164 * C125 +
                (C134 * C1983 - C135 * C1975 - C134 * C1984 + C154181 * C1990) *
                    C154164 * C124 +
                (C134 * C1985 - C135 * C1976 - C134 * C1986 + C154181 * C1991) *
                    C154164 * C123) *
                   C154146) *
                  C340) *
             C154047 +
         0.5 * std::pow(Pi, 2.5) *
             (((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                   C154164 * C123 +
               C211 * C124 + C212 * C125 + C213 * C126 + C214 * C127) *
                  C2320 -
              (C685 * C127 + C686 * C126 + C687 * C125 + C688 * C124 +
               (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                   C154164 * C123) *
                  C2321 +
              ((C134 * C602 - C135 * C585 - C134 * C603 + C154181 * C621) *
                   C154164 * C123 +
               C689 * C124 + C690 * C125 + C691 * C126 + C692 * C127) *
                  C2322 -
              ((C134 * C2329 - C135 * C2324 - C134 * C2330 + C154181 * C2339) *
                   C154164 * C127 +
               (C134 * C2331 - C135 * C2325 - C134 * C2332 + C154181 * C2340) *
                   C154164 * C126 +
               (C134 * C2333 - C135 * C2326 - C134 * C2334 + C154181 * C2341) *
                   C154164 * C125 +
               (C134 * C2335 - C135 * C2327 - C134 * C2336 + C154181 * C2342) *
                   C154164 * C124 +
               (C134 * C2337 - C135 * C2328 - C134 * C2338 + C154181 * C2343) *
                   C154164 * C123) *
                  C2323) *
             C154066 * C154047 -
         0.25 * std::pow(Pi, 2.5) *
             (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                     C154480 +
                 C3210 * C154468 + C3211 * C154442) *
                    C2902 +
                (C2906 + C2907 + C2908) * C2903 + C2920 * C154429) *
                   C2114 -
               (C3960 * C154429 + (C3507 + C3468 + C3469) * C2903 +
                (C4299 * C154442 + C4300 * C154468 +
                 (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                     C154480) *
                    C2902) *
                   C154146) *
                  C154066 * C1309 +
              (((C3469 + C3468 + C3507) * C2902 +
                (C3463 + C3462 + C3506) * C2903 +
                (C3954 + C3955 + C3964) * C154429) *
                   C154146 -
               (C2921 * C154429 + (C2911 + C2910 + C2909) * C2903 +
                (C2908 + C2907 + C2906) * C2902) *
                   C2114) *
                  C154066 * C1310 +
              ((C2920 * C2902 + (C2914 + C2913 + C2912) * C2903 +
                (C2915 + C2916 + C2917) * C154429) *
                   C2114 -
               (((C134 * C1977 - C135 * C1972 - C134 * C1978 +
                  C154181 * C1987) *
                     C154442 +
                 C1181 * C154468 + C677 * C154480) *
                    C154429 +
                (C3964 + C3955 + C3954) * C2903 + C3960 * C2902) *
                   C154146) *
                  C154066 * C1311) -
         0.25 * std::pow(Pi, 2.5) *
             (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                     C154480 +
                 C3210 * C154468 + C3211 * C154442) *
                    C2902 +
                (C2906 + C2907 + C2908) * C2903 + C2920 * C154429) *
                   C2114 -
               (C3960 * C154429 + (C3507 + C3468 + C3469) * C2903 +
                (C4299 * C154442 + C4300 * C154468 +
                 (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                     C154480) *
                    C2902) *
                   C154146) *
                  C338 +
              (((C4300 * C154480 + C4299 * C154468 + C5676 * C154442) * C2902 +
                (C4279 + C4280 + C4303) * C2903 +
                (C4285 + C4286 + C4304) * C154429) *
                   C154146 -
               (C3734 * C154429 + (C3219 + C3174 + C3175) * C2903 +
                (C3214 * C154442 + C3211 * C154468 + C3210 * C154480) * C2902) *
                   C2114) *
                  C339 +
              (((C3211 * C154480 + C3214 * C154468 + C4687 * C154442) * C2902 +
                (C3180 + C3220 + C3221) * C2903 +
                (C3185 + C3222 + C3223) * C154429) *
                   C2114 -
               (((C134 * C5660 - C135 * C5657 - C134 * C5661 +
                  C154181 * C5666) *
                     C154442 +
                 C4302 * C154468 + C3500 * C154480) *
                    C154429 +
                ((C134 * C5662 - C135 * C5658 - C134 * C5663 +
                  C154181 * C5667) *
                     C154442 +
                 C4301 * C154468 + C3501 * C154480) *
                    C2903 +
                ((C134 * C5664 - C135 * C5659 - C134 * C5665 +
                  C154181 * C5668) *
                     C154442 +
                 C5676 * C154468 + C4299 * C154480) *
                    C2902) *
                   C154146) *
                  C340) *
             C154047 +
         0.5 * std::pow(Pi, 2.5) *
             ((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                    C154480 +
                C3210 * C154468 + C3211 * C154442) *
                   C2902 +
               (C2906 + C2907 + C2908) * C2903 + C2920 * C154429) *
                  C2320 -
              (C3960 * C154429 + (C3507 + C3468 + C3469) * C2903 +
               (C4299 * C154442 + C4300 * C154468 +
                (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                    C154480) *
                   C2902) *
                  C2321 +
              (((C134 * C602 - C135 * C585 - C134 * C603 + C154181 * C621) *
                    C154480 +
                C4930 * C154468 + C4931 * C154442) *
                   C2902 +
               (C3470 + C3508 + C3509) * C2903 +
               (C3479 + C3510 + C3511) * C154429) *
                  C2322 -
              (((C134 * C6264 - C135 * C6258 - C134 * C6265 + C154181 * C6276) *
                    C154442 +
                (C134 * C6266 - C135 * C6259 - C134 * C6267 + C154181 * C6277) *
                    C154468 +
                (C134 * C2333 - C135 * C2326 - C134 * C2334 + C154181 * C2341) *
                    C154480) *
                   C154429 +
               ((C134 * C6268 - C135 * C6260 - C134 * C6269 + C154181 * C6278) *
                    C154442 +
                (C134 * C6270 - C135 * C6261 - C134 * C6271 + C154181 * C6279) *
                    C154468 +
                (C134 * C2335 - C135 * C2327 - C134 * C2336 + C154181 * C2342) *
                    C154480) *
                   C2903 +
               ((C134 * C6272 - C135 * C6262 - C134 * C6273 + C154181 * C6280) *
                    C154442 +
                (C134 * C6274 - C135 * C6263 - C134 * C6275 + C154181 * C6281) *
                    C154468 +
                (C134 * C2337 - C135 * C2328 - C134 * C2338 + C154181 * C2343) *
                    C154480) *
                   C2902) *
                  C2323) *
             C154066 * C154047 +
         0.5 * std::pow(Pi, 2.5) *
             ((((C7157 * C144 - C7158 * C136 - C7157 * C145 + C154481 * C160 +
                 C7159 * C600 - C7160 * C584 - C7159 * C601 + C154470 * C620 +
                 C7161 * C602 - C7162 * C585 - C7161 * C603 + C154445 * C621) *
                    C154164 * C2902 +
                (C7236 + C7237 + C7238) * C154164 * C2903 + C7252 * C154429) *
                   C2114 -
               (C8351 * C154429 + (C7865 + C7866 + C7867) * C154164 * C2903 +
                (C7161 * C2337 - C7162 * C2328 - C7161 * C2338 +
                 C154445 * C2343 + C7159 * C602 - C7160 * C585 - C7159 * C603 +
                 C154470 * C621 + C7157 * C600 - C7158 * C584 - C7157 * C601 +
                 C154481 * C620) *
                    C154164 * C2902) *
                   C154146) *
                  C154066 * C1309 +
              (((C7867 + C7866 + C7865) * C154164 * C2902 +
                (C7864 + C7863 + C7862) * C154164 * C2903 +
                (C8355 + C8356 + C8357) * C154164 * C154429) *
                   C154146 -
               (C7253 * C154429 + (C7241 + C7240 + C7239) * C154164 * C2903 +
                (C7238 + C7237 + C7236) * C154164 * C2902) *
                   C2114) *
                  C154066 * C1310 +
              ((C7252 * C2902 + (C7244 + C7243 + C7242) * C154164 * C2903 +
                (C7245 + C7246 + C7247) * C154164 * C154429) *
                   C2114 -
               ((C7161 * C2329 - C7162 * C2324 - C7161 * C2330 +
                 C154445 * C2339 + C7159 * C610 - C7160 * C589 - C7159 * C611 +
                 C154470 * C625 + C7157 * C592 - C7158 * C580 - C7157 * C593 +
                 C154481 * C616) *
                    C154164 * C154429 +
                (C8357 + C8356 + C8355) * C154164 * C2903 + C8351 * C2902) *
                   C154146) *
                  C154066 * C1311) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C7157 * C144 - C7158 * C136 - C7157 * C145 + C154481 * C160 +
                 C7159 * C600 - C7160 * C584 - C7159 * C601 + C154470 * C620 +
                 C7161 * C602 - C7162 * C585 - C7161 * C603 + C154445 * C621) *
                    C154164 * C2902 +
                (C7236 + C7237 + C7238) * C154164 * C2903 + C7252 * C154429) *
                   C2114 -
               (C8351 * C154429 + (C7865 + C7866 + C7867) * C154164 * C2903 +
                (C7161 * C2337 - C7162 * C2328 - C7161 * C2338 +
                 C154445 * C2343 + C7159 * C602 - C7160 * C585 - C7159 * C603 +
                 C154470 * C621 + C7157 * C600 - C7158 * C584 - C7157 * C601 +
                 C154481 * C620) *
                    C154164 * C2902) *
                   C154146) *
                  C338 +
              (((C7157 * C1135 - C7158 * C1129 - C7157 * C1136 +
                 C154481 * C1147 + C7159 * C1554 - C7160 * C1545 -
                 C7159 * C1555 + C154470 * C1560 + C7161 * C6274 -
                 C7162 * C6263 - C7161 * C6275 + C154445 * C6281) *
                    C154164 * C2902 +
                (C8688 + C8689 + C8690) * C154164 * C2903 +
                (C8691 + C8692 + C8693) * C154164 * C154429) *
                   C154146 -
               (C8109 * C154429 + (C7547 + C7548 + C7549) * C154164 * C2903 +
                (C7161 * C1554 - C7162 * C1545 - C7161 * C1555 +
                 C154445 * C1560 + C7159 * C1135 - C7160 * C1129 -
                 C7159 * C1136 + C154470 * C1147 + C7157 * C363 - C7158 * C347 -
                 C7157 * C364 + C154481 * C383) *
                    C154164 * C2902) *
                   C2114) *
                  C339 +
              (((C7157 * C365 - C7158 * C348 - C7157 * C366 + C154481 * C384 +
                 C7159 * C1985 - C7160 * C1976 - C7159 * C1986 +
                 C154470 * C1991 + C7161 * C3445 - C7162 * C3441 -
                 C7161 * C3446 + C154445 * C3453) *
                    C154164 * C2902 +
                (C7550 + C7551 + C7552) * C154164 * C2903 +
                (C7553 + C7554 + C7555) * C154164 * C154429) *
                   C2114 -
               ((C7161 * C6264 - C7162 * C6258 - C7161 * C6265 +
                 C154445 * C6276 + C7159 * C3449 - C7160 * C3443 -
                 C7159 * C3450 + C154470 * C3455 + C7157 * C1981 -
                 C7158 * C1974 - C7157 * C1982 + C154481 * C1989) *
                    C154164 * C154429 +
                (C7161 * C6268 - C7162 * C6260 - C7161 * C6269 +
                 C154445 * C6278 + C7159 * C3447 - C7160 * C3442 -
                 C7159 * C3448 + C154470 * C3454 + C7157 * C1983 -
                 C7158 * C1975 - C7157 * C1984 + C154481 * C1990) *
                    C154164 * C2903 +
                (C7161 * C6272 - C7162 * C6262 - C7161 * C6273 +
                 C154445 * C6280 + C7159 * C3445 - C7160 * C3441 -
                 C7159 * C3446 + C154470 * C3453 + C7157 * C1985 -
                 C7158 * C1976 - C7157 * C1986 + C154481 * C1991) *
                    C154164 * C2902) *
                   C154146) *
                  C340) *
             C154047) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C7157 * C144 - C7158 * C136 - C7157 * C145 + C154481 * C160 +
            C7159 * C600 - C7160 * C584 - C7159 * C601 + C154470 * C620 +
            C7161 * C602 - C7162 * C585 - C7161 * C603 + C154445 * C621) *
               C154164 * C2902 +
           (C7236 + C7237 + C7238) * C154164 * C2903 + C7252 * C154429) *
              C2320 -
          (C8351 * C154429 + (C7865 + C7866 + C7867) * C154164 * C2903 +
           (C7161 * C2337 - C7162 * C2328 - C7161 * C2338 + C154445 * C2343 +
            C7159 * C602 - C7160 * C585 - C7159 * C603 + C154470 * C621 +
            C7157 * C600 - C7158 * C584 - C7157 * C601 + C154481 * C620) *
               C154164 * C2902) *
              C2321 +
          ((C7157 * C602 - C7158 * C585 - C7157 * C603 + C154481 * C621 +
            C7159 * C2337 - C7160 * C2328 - C7159 * C2338 + C154470 * C2343 +
            C7161 * C7777 - C7162 * C7773 - C7161 * C7778 + C154445 * C7785) *
               C154164 * C2902 +
           (C7868 + C7869 + C7870) * C154164 * C2903 +
           (C7871 + C7872 + C7873) * C154164 * C154429) *
              C2322 -
          ((C7161 * C10598 - C7162 * C10595 - C7161 * C10599 +
            C154445 * C10604 + C7159 * C7781 - C7160 * C7775 - C7159 * C7782 +
            C154470 * C7787 + C7157 * C2333 - C7158 * C2326 - C7157 * C2334 +
            C154481 * C2341) *
               C154164 * C154429 +
           (C7161 * C10600 - C7162 * C10596 - C7161 * C10601 +
            C154445 * C10605 + C7159 * C7779 - C7160 * C7774 - C7159 * C7780 +
            C154470 * C7786 + C7157 * C2335 - C7158 * C2327 - C7157 * C2336 +
            C154481 * C2342) *
               C154164 * C2903 +
           (C7161 * C10602 - C7162 * C10597 - C7161 * C10603 +
            C154445 * C10606 + C7159 * C7777 - C7160 * C7773 - C7159 * C7778 +
            C154470 * C7785 + C7157 * C2337 - C7158 * C2328 - C7157 * C2338 +
            C154481 * C2343) *
               C154164 * C2902) *
              C2323) *
         C154066 * C154047) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C24270 +
             C3210 * C24271 + C3211 * C154442) *
                C154477 +
            (C24277 + C24278 + C24279) * C154458 + C24291 * C154429) *
               C2114 -
           (C25198 * C154429 + (C24744 + C24745 + C24746) * C154458 +
            (C4299 * C154442 + C4300 * C24271 +
             (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                 C24270) *
                C154477) *
               C154146) *
              C154066 * C1309 +
          (((C24746 + C24745 + C24744) * C154477 +
            (C24743 + C24742 + C24741) * C154458 +
            (C25195 + C25196 + C25197) * C154429) *
               C154146 -
           (C24292 * C154429 + (C24282 + C24281 + C24280) * C154458 +
            (C24279 + C24278 + C24277) * C154477) *
               C2114) *
              C154066 * C1310 +
          ((C24291 * C154477 + (C24285 + C24284 + C24283) * C154458 +
            (C24286 + C24287 + C24288) * C154429) *
               C2114 -
           (((C134 * C1977 - C135 * C1972 - C134 * C1978 + C154181 * C1987) *
                 C154442 +
             C1181 * C24271 + C677 * C24270) *
                C154429 +
            (C25197 + C25196 + C25195) * C154458 + C25198 * C154477) *
               C154146) *
              C154066 * C1311)) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C24270 +
             C3210 * C24271 + C3211 * C154442) *
                C154477 +
            (C24277 + C24278 + C24279) * C154458 + C24291 * C154429) *
               C2114 -
           (C25198 * C154429 + (C24744 + C24745 + C24746) * C154458 +
            (C4299 * C154442 + C4300 * C24271 +
             (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                 C24270) *
                C154477) *
               C154146) *
              C338 +
          (((C4300 * C24270 + C4299 * C24271 + C5676 * C154442) * C154477 +
            (C25489 + C25490 + C25491) * C154458 +
            (C25492 + C25493 + C25494) * C154429) *
               C154146 -
           (C24975 * C154429 + (C24514 + C24515 + C24516) * C154458 +
            (C3214 * C154442 + C3211 * C24271 + C3210 * C24270) * C154477) *
               C2114) *
              C339 +
          (((C3211 * C24270 + C3214 * C24271 + C4687 * C154442) * C154477 +
            (C24517 + C24518 + C24519) * C154458 +
            (C24520 + C24521 + C24522) * C154429) *
               C2114 -
           (((C134 * C5660 - C135 * C5657 - C134 * C5661 + C154181 * C5666) *
                 C154442 +
             C4302 * C24271 + C3500 * C24270) *
                C154429 +
            ((C134 * C5662 - C135 * C5658 - C134 * C5663 + C154181 * C5667) *
                 C154442 +
             C4301 * C24271 + C3501 * C24270) *
                C154458 +
            ((C134 * C5664 - C135 * C5659 - C134 * C5665 + C154181 * C5668) *
                 C154442 +
             C5676 * C24271 + C4299 * C24270) *
                C154477) *
               C154146) *
              C340) *
         C154047) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                C24270 +
            C3210 * C24271 + C3211 * C154442) *
               C154477 +
           (C24277 + C24278 + C24279) * C154458 + C24291 * C154429) *
              C2320 -
          (C25198 * C154429 + (C24744 + C24745 + C24746) * C154458 +
           (C4299 * C154442 + C4300 * C24271 +
            (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                C24270) *
               C154477) *
              C2321 +
          (((C134 * C602 - C135 * C585 - C134 * C603 + C154181 * C621) *
                C24270 +
            C4930 * C24271 + C4931 * C154442) *
               C154477 +
           (C24747 + C24748 + C24749) * C154458 +
           (C24750 + C24751 + C24752) * C154429) *
              C2322 -
          (((C134 * C6264 - C135 * C6258 - C134 * C6265 + C154181 * C6276) *
                C154442 +
            (C134 * C6266 - C135 * C6259 - C134 * C6267 + C154181 * C6277) *
                C24271 +
            (C134 * C2333 - C135 * C2326 - C134 * C2334 + C154181 * C2341) *
                C24270) *
               C154429 +
           ((C134 * C6268 - C135 * C6260 - C134 * C6269 + C154181 * C6278) *
                C154442 +
            (C134 * C6270 - C135 * C6261 - C134 * C6271 + C154181 * C6279) *
                C24271 +
            (C134 * C2335 - C135 * C2327 - C134 * C2336 + C154181 * C2342) *
                C24270) *
               C154458 +
           ((C134 * C6272 - C135 * C6262 - C134 * C6273 + C154181 * C6280) *
                C154442 +
            (C134 * C6274 - C135 * C6263 - C134 * C6275 + C154181 * C6281) *
                C24271 +
            (C134 * C2337 - C135 * C2328 - C134 * C2338 + C154181 * C2343) *
                C24270) *
               C154477) *
              C2323) *
         C154066 * C154047) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                C28192 +
            C3210 * C28193 + C3211 * C28194 + C3214 * C28195 + C4687 * C28196) *
               C154011 * C2114 -
           (C28899 * C28196 + C5676 * C28195 + C4299 * C28194 + C4300 * C28193 +
            (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                C28192) *
               C154011 * C154146) *
              C154066 * C1309 +
          ((C680 * C28192 + C1178 * C28193 + C3501 * C28194 + C4301 * C28195 +
            C28900 * C28196) *
               C154011 * C154146 -
           (C3215 * C28196 + C3213 * C28195 + C444 * C28194 + C443 * C28193 +
            C205 * C28192) *
               C154011 * C2114) *
              C154066 * C1310 +
          ((C206 * C28192 + C442 * C28193 + C445 * C28194 + C3212 * C28195 +
            C3216 * C28196) *
               C154011 * C2114 -
           ((C134 * C5660 - C135 * C5657 - C134 * C5661 + C154181 * C5666) *
                C28196 +
            C4302 * C28195 + C3500 * C28194 + C1179 * C28193 + C679 * C28192) *
               C154011 * C154146) *
              C154066 * C1311)) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                C28192 +
            C3210 * C28193 + C3211 * C28194 + C3214 * C28195 + C4687 * C28196) *
               C154011 * C2114 -
           (C28899 * C28196 + C5676 * C28195 + C4299 * C28194 + C4300 * C28193 +
            (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                C28192) *
               C154011 * C154146) *
              C338 +
          ((C4300 * C28192 + C4299 * C28193 + C5676 * C28194 + C28899 * C28195 +
            C29672 * C28196) *
               C154011 * C154146 -
           (C28341 * C28196 + C4687 * C28195 + C3214 * C28194 + C3211 * C28193 +
            C3210 * C28192) *
               C154011 * C2114) *
              C339 +
          ((C3211 * C28192 + C3214 * C28193 + C4687 * C28194 + C28341 * C28195 +
            C29115 * C28196) *
               C154011 * C2114 -
           ((C134 * C29662 - C135 * C29661 - C134 * C29663 + C154181 * C29664) *
                C28196 +
            C29672 * C28195 + C28899 * C28194 + C5676 * C28193 +
            C4299 * C28192) *
               C154011 * C154146) *
              C340) *
         C154047) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) * C28192 +
           C3210 * C28193 + C3211 * C28194 + C3214 * C28195 + C4687 * C28196) *
              C154011 * C2320 -
          (C28899 * C28196 + C5676 * C28195 + C4299 * C28194 + C4300 * C28193 +
           (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
               C28192) *
              C154011 * C2321 +
          ((C134 * C602 - C135 * C585 - C134 * C603 + C154181 * C621) * C28192 +
           C4930 * C28193 + C4931 * C28194 + C29254 * C28195 +
           C29255 * C28196) *
              C154011 * C2322 -
          ((C134 * C30000 - C135 * C29998 - C134 * C30001 + C154181 * C30004) *
               C28196 +
           (C134 * C30002 - C135 * C29999 - C134 * C30003 + C154181 * C30005) *
               C28195 +
           (C134 * C6272 - C135 * C6262 - C134 * C6273 + C154181 * C6280) *
               C28194 +
           (C134 * C6274 - C135 * C6263 - C134 * C6275 + C154181 * C6281) *
               C28193 +
           (C134 * C2337 - C135 * C2328 - C134 * C2338 + C154181 * C2343) *
               C28192) *
              C154011 * C2323) *
         C154066 * C154047) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C7157 * C144 - C7158 * C136 - C7157 * C145 + C154481 * C160 +
             C7159 * C600 - C7160 * C584 - C7159 * C601 + C154470 * C620 +
             C7161 * C602 - C7162 * C585 - C7161 * C603 + C154445 * C621) *
                C24270 +
            (C30851 + C30852 + C30853) * C24271 + C30864 * C154442) *
               C154011 * C2114 -
           (C33274 * C154442 + (C31878 + C31879 + C31880) * C24271 +
            (C7161 * C2337 - C7162 * C2328 - C7161 * C2338 + C154445 * C2343 +
             C7159 * C602 - C7160 * C585 - C7159 * C603 + C154470 * C621 +
             C7157 * C600 - C7158 * C584 - C7157 * C601 + C154481 * C620) *
                C24270) *
               C154011 * C154146) *
              C154066 * C1309 +
          (((C7867 + C7866 + C7865) * C24270 +
            (C8688 + C8689 + C8690) * C24271 +
            (C31881 + C31882 + C31883) * C154442) *
               C154011 * C154146 -
           (C30838 * C154442 + (C7547 + C7548 + C7549) * C24271 +
            (C7238 + C7237 + C7236) * C24270) *
               C154011 * C2114) *
              C154066 * C1310 +
          ((C7250 * C24270 + (C7546 + C7545 + C7544) * C24271 +
            (C7553 + C7554 + C7555) * C154442) *
               C154011 * C2114 -
           ((C7161 * C6264 - C7162 * C6258 - C7161 * C6265 + C154445 * C6276 +
             C7159 * C3449 - C7160 * C3443 - C7159 * C3450 + C154470 * C3455 +
             C7157 * C1981 - C7158 * C1974 - C7157 * C1982 + C154481 * C1989) *
                C154442 +
            (C8693 + C8692 + C8691) * C24271 + C8347 * C24270) *
               C154011 * C154146) *
              C154066 * C1311)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C7157 * C144 - C7158 * C136 - C7157 * C145 + C154481 * C160 +
             C7159 * C600 - C7160 * C584 - C7159 * C601 + C154470 * C620 +
             C7161 * C602 - C7162 * C585 - C7161 * C603 + C154445 * C621) *
                C24270 +
            (C30851 + C30852 + C30853) * C24271 + C30864 * C154442) *
               C154011 * C2114 -
           (C33274 * C154442 + (C31878 + C31879 + C31880) * C24271 +
            (C7161 * C2337 - C7162 * C2328 - C7161 * C2338 + C154445 * C2343 +
             C7159 * C602 - C7160 * C585 - C7159 * C603 + C154470 * C621 +
             C7157 * C600 - C7158 * C584 - C7157 * C601 + C154481 * C620) *
                C24270) *
               C154011 * C154146) *
              C338 +
          (((C31880 + C31879 + C31878) * C24270 +
            (C31877 + C31876 + C31875) * C24271 +
            (C33281 + C33282 + C33283) * C154442) *
               C154011 * C154146 -
           (C32261 * C154442 + (C30856 + C30855 + C30854) * C24271 +
            (C30853 + C30852 + C30851) * C24270) *
               C154011 * C2114) *
              C339 +
          ((C30864 * C24270 + (C30859 + C30858 + C30857) * C24271 +
            (C32268 + C32269 + C32270) * C154442) *
               C154011 * C2114 -
           ((C7161 * C30000 - C7162 * C29998 - C7161 * C30001 +
             C154445 * C30004 + C7159 * C28466 - C7160 * C28464 -
             C7159 * C28467 + C154470 * C28470 + C7157 * C5664 - C7158 * C5659 -
             C7157 * C5665 + C154481 * C5668) *
                C154442 +
            (C33283 + C33282 + C33281) * C24271 + C33274 * C24270) *
               C154011 * C154146) *
              C340) *
         C154047) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C7157 * C144 - C7158 * C136 - C7157 * C145 + C154481 * C160 +
            C7159 * C600 - C7160 * C584 - C7159 * C601 + C154470 * C620 +
            C7161 * C602 - C7162 * C585 - C7161 * C603 + C154445 * C621) *
               C24270 +
           (C30851 + C30852 + C30853) * C24271 + C30864 * C154442) *
              C154011 * C2320 -
          (C33274 * C154442 + (C31878 + C31879 + C31880) * C24271 +
           (C7161 * C2337 - C7162 * C2328 - C7161 * C2338 + C154445 * C2343 +
            C7159 * C602 - C7160 * C585 - C7159 * C603 + C154470 * C621 +
            C7157 * C600 - C7158 * C584 - C7157 * C601 + C154481 * C620) *
               C24270) *
              C154011 * C2321 +
          ((C7157 * C602 - C7158 * C585 - C7157 * C603 + C154481 * C621 +
            C7159 * C2337 - C7160 * C2328 - C7159 * C2338 + C154470 * C2343 +
            C7161 * C7777 - C7162 * C7773 - C7161 * C7778 + C154445 * C7785) *
               C24270 +
           (C32529 + C32530 + C32531) * C24271 +
           (C32532 + C32533 + C32534) * C154442) *
              C154011 * C2322 -
          ((C7161 * C33867 - C7162 * C33865 - C7161 * C33868 +
            C154445 * C33871 + C7159 * C31084 - C7160 * C31082 -
            C7159 * C31085 + C154470 * C31088 + C7157 * C6272 - C7158 * C6262 -
            C7157 * C6273 + C154481 * C6280) *
               C154442 +
           (C7161 * C33869 - C7162 * C33866 - C7161 * C33870 +
            C154445 * C33872 + C7159 * C9282 - C7160 * C9277 - C7159 * C9283 +
            C154470 * C9286 + C7157 * C6274 - C7158 * C6263 - C7157 * C6275 +
            C154481 * C6281) *
               C24271 +
           (C7161 * C10602 - C7162 * C10597 - C7161 * C10603 +
            C154445 * C10606 + C7159 * C7777 - C7160 * C7773 - C7159 * C7778 +
            C154470 * C7785 + C7157 * C2337 - C7158 * C2328 - C7157 * C2338 +
            C154481 * C2343) *
               C24270) *
              C154011 * C2323) *
         C154066 * C154047) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C47141 * C144 - C47142 * C136 - C47141 * C145 + C47138 * C160 +
             C47143 * C600 - C47144 * C584 - C47143 * C601 + C47139 * C620 +
             C47145 * C602 - C47146 * C585 - C47145 * C603 + C154445 * C621) *
                C154164 * C154477 +
            (C47220 + C47221 + C47222) * C154164 * C154458 + C47236 * C154429) *
               C2114 -
           (C48319 * C154429 + (C47833 + C47834 + C47835) * C154164 * C154458 +
            (C47145 * C2337 - C47146 * C2328 - C47145 * C2338 +
             C154445 * C2343 + C47143 * C602 - C47144 * C585 - C47143 * C603 +
             C47139 * C621 + C47141 * C600 - C47142 * C584 - C47141 * C601 +
             C47138 * C620) *
                C154164 * C154477) *
               C154146) *
              C154066 * C1309 +
          (((C47835 + C47834 + C47833) * C154164 * C154477 +
            (C47832 + C47831 + C47830) * C154164 * C154458 +
            (C48323 + C48324 + C48325) * C154164 * C154429) *
               C154146 -
           (C47237 * C154429 + (C47225 + C47224 + C47223) * C154164 * C154458 +
            (C47222 + C47221 + C47220) * C154164 * C154477) *
               C2114) *
              C154066 * C1310 +
          ((C47236 * C154477 + (C47228 + C47227 + C47226) * C154164 * C154458 +
            (C47229 + C47230 + C47231) * C154164 * C154429) *
               C2114 -
           ((C47145 * C2329 - C47146 * C2324 - C47145 * C2330 +
             C154445 * C2339 + C47143 * C610 - C47144 * C589 - C47143 * C611 +
             C47139 * C625 + C47141 * C592 - C47142 * C580 - C47141 * C593 +
             C47138 * C616) *
                C154164 * C154429 +
            (C48325 + C48324 + C48323) * C154164 * C154458 + C48319 * C154477) *
               C154146) *
              C154066 * C1311)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C47141 * C144 - C47142 * C136 - C47141 * C145 + C47138 * C160 +
             C47143 * C600 - C47144 * C584 - C47143 * C601 + C47139 * C620 +
             C47145 * C602 - C47146 * C585 - C47145 * C603 + C154445 * C621) *
                C154164 * C154477 +
            (C47220 + C47221 + C47222) * C154164 * C154458 + C47236 * C154429) *
               C2114 -
           (C48319 * C154429 + (C47833 + C47834 + C47835) * C154164 * C154458 +
            (C47145 * C2337 - C47146 * C2328 - C47145 * C2338 +
             C154445 * C2343 + C47143 * C602 - C47144 * C585 - C47143 * C603 +
             C47139 * C621 + C47141 * C600 - C47142 * C584 - C47141 * C601 +
             C47138 * C620) *
                C154164 * C154477) *
               C154146) *
              C338 +
          (((C47141 * C1135 - C47142 * C1129 - C47141 * C1136 + C47138 * C1147 +
             C47143 * C1554 - C47144 * C1545 - C47143 * C1555 + C47139 * C1560 +
             C47145 * C6274 - C47146 * C6263 - C47145 * C6275 +
             C154445 * C6281) *
                C154164 * C154477 +
            (C48652 + C48653 + C48654) * C154164 * C154458 +
            (C48655 + C48656 + C48657) * C154164 * C154429) *
               C154146 -
           (C48077 * C154429 + (C47531 + C47532 + C47533) * C154164 * C154458 +
            (C47145 * C1554 - C47146 * C1545 - C47145 * C1555 +
             C154445 * C1560 + C47143 * C1135 - C47144 * C1129 -
             C47143 * C1136 + C47139 * C1147 + C47141 * C363 - C47142 * C347 -
             C47141 * C364 + C47138 * C383) *
                C154164 * C154477) *
               C2114) *
              C339 +
          (((C47141 * C365 - C47142 * C348 - C47141 * C366 + C47138 * C384 +
             C47143 * C1985 - C47144 * C1976 - C47143 * C1986 + C47139 * C1991 +
             C47145 * C3445 - C47146 * C3441 - C47145 * C3446 +
             C154445 * C3453) *
                C154164 * C154477 +
            (C47534 + C47535 + C47536) * C154164 * C154458 +
            (C47537 + C47538 + C47539) * C154164 * C154429) *
               C2114 -
           ((C47145 * C6264 - C47146 * C6258 - C47145 * C6265 +
             C154445 * C6276 + C47143 * C3449 - C47144 * C3443 -
             C47143 * C3450 + C47139 * C3455 + C47141 * C1981 - C47142 * C1974 -
             C47141 * C1982 + C47138 * C1989) *
                C154164 * C154429 +
            (C47145 * C6268 - C47146 * C6260 - C47145 * C6269 +
             C154445 * C6278 + C47143 * C3447 - C47144 * C3442 -
             C47143 * C3448 + C47139 * C3454 + C47141 * C1983 - C47142 * C1975 -
             C47141 * C1984 + C47138 * C1990) *
                C154164 * C154458 +
            (C47145 * C6272 - C47146 * C6262 - C47145 * C6273 +
             C154445 * C6280 + C47143 * C3445 - C47144 * C3441 -
             C47143 * C3446 + C47139 * C3453 + C47141 * C1985 - C47142 * C1976 -
             C47141 * C1986 + C47138 * C1991) *
                C154164 * C154477) *
               C154146) *
              C340) *
         C154047) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C47141 * C144 - C47142 * C136 - C47141 * C145 + C47138 * C160 +
            C47143 * C600 - C47144 * C584 - C47143 * C601 + C47139 * C620 +
            C47145 * C602 - C47146 * C585 - C47145 * C603 + C154445 * C621) *
               C154164 * C154477 +
           (C47220 + C47221 + C47222) * C154164 * C154458 + C47236 * C154429) *
              C2320 -
          (C48319 * C154429 + (C47833 + C47834 + C47835) * C154164 * C154458 +
           (C47145 * C2337 - C47146 * C2328 - C47145 * C2338 + C154445 * C2343 +
            C47143 * C602 - C47144 * C585 - C47143 * C603 + C47139 * C621 +
            C47141 * C600 - C47142 * C584 - C47141 * C601 + C47138 * C620) *
               C154164 * C154477) *
              C2321 +
          ((C47141 * C602 - C47142 * C585 - C47141 * C603 + C47138 * C621 +
            C47143 * C2337 - C47144 * C2328 - C47143 * C2338 + C47139 * C2343 +
            C47145 * C7777 - C47146 * C7773 - C47145 * C7778 +
            C154445 * C7785) *
               C154164 * C154477 +
           (C47836 + C47837 + C47838) * C154164 * C154458 +
           (C47839 + C47840 + C47841) * C154164 * C154429) *
              C2322 -
          ((C47145 * C10598 - C47146 * C10595 - C47145 * C10599 +
            C154445 * C10604 + C47143 * C7781 - C47144 * C7775 -
            C47143 * C7782 + C47139 * C7787 + C47141 * C2333 - C47142 * C2326 -
            C47141 * C2334 + C47138 * C2341) *
               C154164 * C154429 +
           (C47145 * C10600 - C47146 * C10596 - C47145 * C10601 +
            C154445 * C10605 + C47143 * C7779 - C47144 * C7774 -
            C47143 * C7780 + C47139 * C7786 + C47141 * C2335 - C47142 * C2327 -
            C47141 * C2336 + C47138 * C2342) *
               C154164 * C154458 +
           (C47145 * C10602 - C47146 * C10597 - C47145 * C10603 +
            C154445 * C10606 + C47143 * C7777 - C47144 * C7773 -
            C47143 * C7778 + C47139 * C7785 + C47141 * C2337 - C47142 * C2328 -
            C47141 * C2338 + C47138 * C2343) *
               C154164 * C154477) *
              C2323) *
         C154066 * C154047) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C47141 * C144 - C47142 * C136 - C47141 * C145 + C47138 * C160 +
             C47143 * C600 - C47144 * C584 - C47143 * C601 + C47139 * C620 +
             C47145 * C602 - C47146 * C585 - C47145 * C603 + C154445 * C621) *
                C154480 +
            (C51712 + C51713 + C51714) * C154468 + C51725 * C154442) *
               C154011 * C2114 -
           (C54119 * C154442 + (C52727 + C52728 + C52729) * C154468 +
            (C47145 * C2337 - C47146 * C2328 - C47145 * C2338 +
             C154445 * C2343 + C47143 * C602 - C47144 * C585 - C47143 * C603 +
             C47139 * C621 + C47141 * C600 - C47142 * C584 - C47141 * C601 +
             C47138 * C620) *
                C154480) *
               C154011 * C154146) *
              C154066 * C1309 +
          (((C47835 + C47834 + C47833) * C154480 +
            (C48652 + C48653 + C48654) * C154468 +
            (C52730 + C52731 + C52732) * C154442) *
               C154011 * C154146 -
           (C51699 * C154442 + (C47531 + C47532 + C47533) * C154468 +
            (C47222 + C47221 + C47220) * C154480) *
               C154011 * C2114) *
              C154066 * C1310 +
          ((C47234 * C154480 + (C47530 + C47529 + C47528) * C154468 +
            (C47537 + C47538 + C47539) * C154442) *
               C154011 * C2114 -
           ((C47145 * C6264 - C47146 * C6258 - C47145 * C6265 +
             C154445 * C6276 + C47143 * C3449 - C47144 * C3443 -
             C47143 * C3450 + C47139 * C3455 + C47141 * C1981 - C47142 * C1974 -
             C47141 * C1982 + C47138 * C1989) *
                C154442 +
            (C48657 + C48656 + C48655) * C154468 + C48315 * C154480) *
               C154011 * C154146) *
              C154066 * C1311)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C47141 * C144 - C47142 * C136 - C47141 * C145 + C47138 * C160 +
             C47143 * C600 - C47144 * C584 - C47143 * C601 + C47139 * C620 +
             C47145 * C602 - C47146 * C585 - C47145 * C603 + C154445 * C621) *
                C154480 +
            (C51712 + C51713 + C51714) * C154468 + C51725 * C154442) *
               C154011 * C2114 -
           (C54119 * C154442 + (C52727 + C52728 + C52729) * C154468 +
            (C47145 * C2337 - C47146 * C2328 - C47145 * C2338 +
             C154445 * C2343 + C47143 * C602 - C47144 * C585 - C47143 * C603 +
             C47139 * C621 + C47141 * C600 - C47142 * C584 - C47141 * C601 +
             C47138 * C620) *
                C154480) *
               C154011 * C154146) *
              C338 +
          (((C52729 + C52728 + C52727) * C154480 +
            (C52726 + C52725 + C52724) * C154468 +
            (C54126 + C54127 + C54128) * C154442) *
               C154011 * C154146 -
           (C53110 * C154442 + (C51717 + C51716 + C51715) * C154468 +
            (C51714 + C51713 + C51712) * C154480) *
               C154011 * C2114) *
              C339 +
          ((C51725 * C154480 + (C51720 + C51719 + C51718) * C154468 +
            (C53117 + C53118 + C53119) * C154442) *
               C154011 * C2114 -
           ((C47145 * C30000 - C47146 * C29998 - C47145 * C30001 +
             C154445 * C30004 + C47143 * C28466 - C47144 * C28464 -
             C47143 * C28467 + C47139 * C28470 + C47141 * C5664 -
             C47142 * C5659 - C47141 * C5665 + C47138 * C5668) *
                C154442 +
            (C54128 + C54127 + C54126) * C154468 + C54119 * C154480) *
               C154011 * C154146) *
              C340) *
         C154047) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C47141 * C144 - C47142 * C136 - C47141 * C145 + C47138 * C160 +
            C47143 * C600 - C47144 * C584 - C47143 * C601 + C47139 * C620 +
            C47145 * C602 - C47146 * C585 - C47145 * C603 + C154445 * C621) *
               C154480 +
           (C51712 + C51713 + C51714) * C154468 + C51725 * C154442) *
              C154011 * C2320 -
          (C54119 * C154442 + (C52727 + C52728 + C52729) * C154468 +
           (C47145 * C2337 - C47146 * C2328 - C47145 * C2338 + C154445 * C2343 +
            C47143 * C602 - C47144 * C585 - C47143 * C603 + C47139 * C621 +
            C47141 * C600 - C47142 * C584 - C47141 * C601 + C47138 * C620) *
               C154480) *
              C154011 * C2321 +
          ((C47141 * C602 - C47142 * C585 - C47141 * C603 + C47138 * C621 +
            C47143 * C2337 - C47144 * C2328 - C47143 * C2338 + C47139 * C2343 +
            C47145 * C7777 - C47146 * C7773 - C47145 * C7778 +
            C154445 * C7785) *
               C154480 +
           (C53374 + C53375 + C53376) * C154468 +
           (C53377 + C53378 + C53379) * C154442) *
              C154011 * C2322 -
          ((C47145 * C33867 - C47146 * C33865 - C47145 * C33868 +
            C154445 * C33871 + C47143 * C31084 - C47144 * C31082 -
            C47143 * C31085 + C47139 * C31088 + C47141 * C6272 -
            C47142 * C6262 - C47141 * C6273 + C47138 * C6280) *
               C154442 +
           (C47145 * C33869 - C47146 * C33866 - C47145 * C33870 +
            C154445 * C33872 + C47143 * C9282 - C47144 * C9277 -
            C47143 * C9283 + C47139 * C9286 + C47141 * C6274 - C47142 * C6263 -
            C47141 * C6275 + C47138 * C6281) *
               C154468 +
           (C47145 * C10602 - C47146 * C10597 - C47145 * C10603 +
            C154445 * C10606 + C47143 * C7777 - C47144 * C7773 -
            C47143 * C7778 + C47139 * C7785 + C47141 * C2337 - C47142 * C2328 -
            C47141 * C2338 + C47138 * C2343) *
               C154480) *
              C154011 * C2323) *
         C154066 * C154047) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C55523 * C144 - C55524 * C136 - C55523 * C145 + C55518 * C160 +
            C55525 * C600 - C55526 * C584 - C55525 * C601 + C55519 * C620 +
            C55527 * C602 - C55528 * C585 - C55527 * C603 + C55520 * C621 +
            C55529 * C2337 - C55530 * C2328 - C55529 * C2338 + C55521 * C2343 +
            C55531 * C7777 - C55532 * C7773 - C55531 * C7778 + C55522 * C7785) *
               C154164 * C154011 * C2114 -
           (C55531 * C10602 - C55532 * C10597 - C55531 * C10603 +
            C55522 * C10606 + C55529 * C7777 - C55530 * C7773 - C55529 * C7778 +
            C55521 * C7785 + C55527 * C2337 - C55528 * C2328 - C55527 * C2338 +
            C55520 * C2343 + C55525 * C602 - C55526 * C585 - C55525 * C603 +
            C55519 * C621 + C55523 * C600 - C55524 * C584 - C55523 * C601 +
            C55518 * C620) *
               C154164 * C154011 * C154146) *
              C154066 * C1309 +
          ((C55523 * C598 - C55524 * C583 - C55523 * C599 + C55518 * C619 +
            C55525 * C604 - C55526 * C586 - C55525 * C605 + C55519 * C622 +
            C55527 * C2335 - C55528 * C2327 - C55527 * C2336 + C55520 * C2342 +
            C55529 * C7779 - C55530 * C7774 - C55529 * C7780 + C55521 * C7786 +
            C55531 * C10600 - C55532 * C10596 - C55531 * C10601 +
            C55522 * C10605) *
               C154164 * C154011 * C154146 -
           (C55531 * C7779 - C55532 * C7774 - C55531 * C7780 + C55522 * C7786 +
            C55529 * C2335 - C55530 * C2327 - C55529 * C2336 + C55521 * C2342 +
            C55527 * C604 - C55528 * C586 - C55527 * C605 + C55520 * C622 +
            C55525 * C598 - C55526 * C583 - C55525 * C599 + C55519 * C619 +
            C55523 * C146 - C55524 * C137 - C55523 * C147 + C55518 * C161) *
               C154164 * C154011 * C2114) *
              C154066 * C1310 +
          ((C55523 * C148 - C55524 * C138 - C55523 * C149 + C55518 * C162 +
            C55525 * C596 - C55526 * C582 - C55525 * C597 + C55519 * C618 +
            C55527 * C606 - C55528 * C587 - C55527 * C607 + C55520 * C623 +
            C55529 * C2333 - C55530 * C2326 - C55529 * C2334 + C55521 * C2341 +
            C55531 * C7781 - C55532 * C7775 - C55531 * C7782 + C55522 * C7787) *
               C154164 * C154011 * C2114 -
           (C55531 * C10598 - C55532 * C10595 - C55531 * C10599 +
            C55522 * C10604 + C55529 * C7781 - C55530 * C7775 - C55529 * C7782 +
            C55521 * C7787 + C55527 * C2333 - C55528 * C2326 - C55527 * C2334 +
            C55520 * C2341 + C55525 * C606 - C55526 * C587 - C55525 * C607 +
            C55519 * C623 + C55523 * C596 - C55524 * C582 - C55523 * C597 +
            C55518 * C618) *
               C154164 * C154011 * C154146) *
              C154066 * C1311)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C55523 * C144 - C55524 * C136 - C55523 * C145 + C55518 * C160 +
            C55525 * C600 - C55526 * C584 - C55525 * C601 + C55519 * C620 +
            C55527 * C602 - C55528 * C585 - C55527 * C603 + C55520 * C621 +
            C55529 * C2337 - C55530 * C2328 - C55529 * C2338 + C55521 * C2343 +
            C55531 * C7777 - C55532 * C7773 - C55531 * C7778 + C55522 * C7785) *
               C154164 * C154011 * C2114 -
           (C55531 * C10602 - C55532 * C10597 - C55531 * C10603 +
            C55522 * C10606 + C55529 * C7777 - C55530 * C7773 - C55529 * C7778 +
            C55521 * C7785 + C55527 * C2337 - C55528 * C2328 - C55527 * C2338 +
            C55520 * C2343 + C55525 * C602 - C55526 * C585 - C55525 * C603 +
            C55519 * C621 + C55523 * C600 - C55524 * C584 - C55523 * C601 +
            C55518 * C620) *
               C154164 * C154011 * C154146) *
              C338 +
          ((C55523 * C1135 - C55524 * C1129 - C55523 * C1136 + C55518 * C1147 +
            C55525 * C1554 - C55526 * C1545 - C55525 * C1555 + C55519 * C1560 +
            C55527 * C6274 - C55528 * C6263 - C55527 * C6275 + C55520 * C6281 +
            C55529 * C9282 - C55530 * C9277 - C55529 * C9283 + C55521 * C9286 +
            C55531 * C33869 - C55532 * C33866 - C55531 * C33870 +
            C55522 * C33872) *
               C154164 * C154011 * C154146 -
           (C55531 * C9282 - C55532 * C9277 - C55531 * C9283 + C55522 * C9286 +
            C55529 * C6274 - C55530 * C6263 - C55529 * C6275 + C55521 * C6281 +
            C55527 * C1554 - C55528 * C1545 - C55527 * C1555 + C55520 * C1560 +
            C55525 * C1135 - C55526 * C1129 - C55525 * C1136 + C55519 * C1147 +
            C55523 * C363 - C55524 * C347 - C55523 * C364 + C55518 * C383) *
               C154164 * C154011 * C2114) *
              C339 +
          ((C55523 * C365 - C55524 * C348 - C55523 * C366 + C55518 * C384 +
            C55525 * C1985 - C55526 * C1976 - C55525 * C1986 + C55519 * C1991 +
            C55527 * C3445 - C55528 * C3441 - C55527 * C3446 + C55520 * C3453 +
            C55529 * C6272 - C55530 * C6262 - C55529 * C6273 + C55521 * C6280 +
            C55531 * C31084 - C55532 * C31082 - C55531 * C31085 +
            C55522 * C31088) *
               C154164 * C154011 * C2114 -
           (C55531 * C33867 - C55532 * C33865 - C55531 * C33868 +
            C55522 * C33871 + C55529 * C31084 - C55530 * C31082 -
            C55529 * C31085 + C55521 * C31088 + C55527 * C6272 -
            C55528 * C6262 - C55527 * C6273 + C55520 * C6280 + C55525 * C3445 -
            C55526 * C3441 - C55525 * C3446 + C55519 * C3453 + C55523 * C1985 -
            C55524 * C1976 - C55523 * C1986 + C55518 * C1991) *
               C154164 * C154011 * C154146) *
              C340) *
         C154047) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((C55523 * C144 - C55524 * C136 - C55523 * C145 + C55518 * C160 +
           C55525 * C600 - C55526 * C584 - C55525 * C601 + C55519 * C620 +
           C55527 * C602 - C55528 * C585 - C55527 * C603 + C55520 * C621 +
           C55529 * C2337 - C55530 * C2328 - C55529 * C2338 + C55521 * C2343 +
           C55531 * C7777 - C55532 * C7773 - C55531 * C7778 + C55522 * C7785) *
              C154164 * C154011 * C2320 -
          (C55531 * C10602 - C55532 * C10597 - C55531 * C10603 +
           C55522 * C10606 + C55529 * C7777 - C55530 * C7773 - C55529 * C7778 +
           C55521 * C7785 + C55527 * C2337 - C55528 * C2328 - C55527 * C2338 +
           C55520 * C2343 + C55525 * C602 - C55526 * C585 - C55525 * C603 +
           C55519 * C621 + C55523 * C600 - C55524 * C584 - C55523 * C601 +
           C55518 * C620) *
              C154164 * C154011 * C2321 +
          (C55523 * C602 - C55524 * C585 - C55523 * C603 + C55518 * C621 +
           C55525 * C2337 - C55526 * C2328 - C55525 * C2338 + C55519 * C2343 +
           C55527 * C7777 - C55528 * C7773 - C55527 * C7778 + C55520 * C7785 +
           C55529 * C10602 - C55530 * C10597 - C55529 * C10603 +
           C55521 * C10606 + C55531 * C55779 - C55532 * C55777 -
           C55531 * C55780 + C55522 * C55783) *
              C154164 * C154011 * C2322 -
          (C55531 * C57258 - C55532 * C57257 - C55531 * C57259 +
           C55522 * C57260 + C55529 * C55779 - C55530 * C55777 -
           C55529 * C55780 + C55521 * C55783 + C55527 * C10602 -
           C55528 * C10597 - C55527 * C10603 + C55520 * C10606 +
           C55525 * C7777 - C55526 * C7773 - C55525 * C7778 + C55519 * C7785 +
           C55523 * C2337 - C55524 * C2328 - C55523 * C2338 + C55518 * C2343) *
              C154164 * C154011 * C2323) *
         C154066 * C154047) /
            (p * q * std::sqrt(p + q));
    d2ee[193] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                    C154164 * C123 +
                C211 * C124 + C212 * C125 + C213 * C126 + C214 * C127) *
                   C154465 -
               (C685 * C127 + C686 * C126 + C687 * C125 + C688 * C124 +
                (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                    C154164 * C123) *
                   C154466 +
               ((C134 * C602 - C135 * C585 - C134 * C603 + C154181 * C621) *
                    C154164 * C123 +
                C689 * C124 + C690 * C125 + C691 * C126 + C692 * C127) *
                   C2630) *
                  C154066 * C154384 +
              ((C688 * C123 + C687 * C124 + C686 * C125 + C685 * C126 +
                C967 * C127) *
                   C154466 -
               (C215 * C127 + C214 * C126 + C213 * C125 + C212 * C124 +
                C211 * C123) *
                   C154465 -
               ((C134 * C614 - C135 * C591 - C134 * C615 + C154181 * C627) *
                    C154164 * C127 +
                C692 * C126 + C691 * C125 + C690 * C124 + C689 * C123) *
                   C2630) *
                  C154066 * C154053) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                     C154480 +
                 C3210 * C154468 + C3211 * C154442) *
                    C2902 +
                (C2906 + C2907 + C2908) * C2903 + C2920 * C154429) *
                   C154465 -
               (C3960 * C154429 + (C3507 + C3468 + C3469) * C2903 +
                (C4299 * C154442 + C4300 * C154468 +
                 (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                     C154480) *
                    C2902) *
                   C154466 +
               (((C134 * C602 - C135 * C585 - C134 * C603 + C154181 * C621) *
                     C154480 +
                 C4930 * C154468 + C4931 * C154442) *
                    C2902 +
                (C3470 + C3508 + C3509) * C2903 +
                (C3479 + C3510 + C3511) * C154429) *
                   C2630) *
                  C154066 * C154384 +
              (((C3469 + C3468 + C3507) * C2902 +
                (C3463 + C3462 + C3506) * C2903 +
                (C3954 + C3955 + C3964) * C154429) *
                   C154466 -
               (C2921 * C154429 + (C2911 + C2910 + C2909) * C2903 +
                (C2908 + C2907 + C2906) * C2902) *
                   C154465 -
               (((C134 * C3451 - C135 * C3444 - C134 * C3452 +
                  C154181 * C3456) *
                     C154442 +
                 (C134 * C1548 - C135 * C1542 - C134 * C1549 +
                  C154181 * C1557) *
                     C154468 +
                 C683 * C154480) *
                    C154429 +
                (C3511 + C3510 + C3479) * C2903 +
                (C3509 + C3508 + C3470) * C2902) *
                   C2630) *
                  C154066 * C154053)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C7157 * C144 - C7158 * C136 - C7157 * C145 + C154481 * C160 +
             C7159 * C600 - C7160 * C584 - C7159 * C601 + C154470 * C620 +
             C7161 * C602 - C7162 * C585 - C7161 * C603 + C154445 * C621) *
                C154164 * C2902 +
            (C7236 + C7237 + C7238) * C154164 * C2903 + C7252 * C154429) *
               C154465 -
           (C8351 * C154429 + (C7865 + C7866 + C7867) * C154164 * C2903 +
            (C7161 * C2337 - C7162 * C2328 - C7161 * C2338 + C154445 * C2343 +
             C7159 * C602 - C7160 * C585 - C7159 * C603 + C154470 * C621 +
             C7157 * C600 - C7158 * C584 - C7157 * C601 + C154481 * C620) *
                C154164 * C2902) *
               C154466 +
           ((C7157 * C602 - C7158 * C585 - C7157 * C603 + C154481 * C621 +
             C7159 * C2337 - C7160 * C2328 - C7159 * C2338 + C154470 * C2343 +
             C7161 * C7777 - C7162 * C7773 - C7161 * C7778 + C154445 * C7785) *
                C154164 * C2902 +
            (C7868 + C7869 + C7870) * C154164 * C2903 +
            (C7871 + C7872 + C7873) * C154164 * C154429) *
               C2630) *
              C154066 * C154384 +
          (((C7867 + C7866 + C7865) * C154164 * C2902 +
            (C7864 + C7863 + C7862) * C154164 * C2903 +
            (C8355 + C8356 + C8357) * C154164 * C154429) *
               C154466 -
           (C7253 * C154429 + (C7241 + C7240 + C7239) * C154164 * C2903 +
            (C7238 + C7237 + C7236) * C154164 * C2902) *
               C154465 -
           ((C7161 * C7783 - C7162 * C7776 - C7161 * C7784 + C154445 * C7788 +
             C7159 * C2331 - C7160 * C2325 - C7159 * C2332 + C154470 * C2340 +
             C7157 * C608 - C7158 * C588 - C7157 * C609 + C154481 * C624) *
                C154164 * C154429 +
            (C7873 + C7872 + C7871) * C154164 * C2903 +
            (C7870 + C7869 + C7868) * C154164 * C2902) *
               C2630) *
              C154066 * C154053)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C24270 +
             C3210 * C24271 + C3211 * C154442) *
                C154477 +
            (C24277 + C24278 + C24279) * C154458 + C24291 * C154429) *
               C154465 -
           (C25198 * C154429 + (C24744 + C24745 + C24746) * C154458 +
            (C4299 * C154442 + C4300 * C24271 +
             (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                 C24270) *
                C154477) *
               C154466 +
           (((C134 * C602 - C135 * C585 - C134 * C603 + C154181 * C621) *
                 C24270 +
             C4930 * C24271 + C4931 * C154442) *
                C154477 +
            (C24747 + C24748 + C24749) * C154458 +
            (C24750 + C24751 + C24752) * C154429) *
               C2630) *
              C154066 * C154384 +
          (((C24746 + C24745 + C24744) * C154477 +
            (C24743 + C24742 + C24741) * C154458 +
            (C25195 + C25196 + C25197) * C154429) *
               C154466 -
           (C24292 * C154429 + (C24282 + C24281 + C24280) * C154458 +
            (C24279 + C24278 + C24277) * C154477) *
               C154465 -
           (((C134 * C3451 - C135 * C3444 - C134 * C3452 + C154181 * C3456) *
                 C154442 +
             C11901 * C24271 + C683 * C24270) *
                C154429 +
            (C24752 + C24751 + C24750) * C154458 +
            (C24749 + C24748 + C24747) * C154477) *
               C2630) *
              C154066 * C154053)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                C28192 +
            C3210 * C28193 + C3211 * C28194 + C3214 * C28195 + C4687 * C28196) *
               C154011 * C154465 -
           (C28899 * C28196 + C5676 * C28195 + C4299 * C28194 + C4300 * C28193 +
            (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                C28192) *
               C154011 * C154466 +
           ((C134 * C602 - C135 * C585 - C134 * C603 + C154181 * C621) *
                C28192 +
            C4930 * C28193 + C4931 * C28194 + C29254 * C28195 +
            C29255 * C28196) *
               C154011 * C2630) *
              C154066 * C154384 +
          ((C680 * C28192 + C1178 * C28193 + C3501 * C28194 + C4301 * C28195 +
            C28900 * C28196) *
               C154011 * C154466 -
           (C3215 * C28196 + C3213 * C28195 + C444 * C28194 + C443 * C28193 +
            C205 * C28192) *
               C154011 * C154465 -
           ((C134 * C28468 - C135 * C28465 - C134 * C28469 + C154181 * C28471) *
                C28196 +
            (C134 * C4910 - C135 * C4906 - C134 * C4911 + C154181 * C4915) *
                C28195 +
            C3503 * C28194 + C3502 * C28193 + C681 * C28192) *
               C154011 * C2630) *
              C154066 * C154053)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C7157 * C144 - C7158 * C136 - C7157 * C145 + C154481 * C160 +
             C7159 * C600 - C7160 * C584 - C7159 * C601 + C154470 * C620 +
             C7161 * C602 - C7162 * C585 - C7161 * C603 + C154445 * C621) *
                C24270 +
            (C30851 + C30852 + C30853) * C24271 + C30864 * C154442) *
               C154011 * C154465 -
           (C33274 * C154442 + (C31878 + C31879 + C31880) * C24271 +
            (C7161 * C2337 - C7162 * C2328 - C7161 * C2338 + C154445 * C2343 +
             C7159 * C602 - C7160 * C585 - C7159 * C603 + C154470 * C621 +
             C7157 * C600 - C7158 * C584 - C7157 * C601 + C154481 * C620) *
                C24270) *
               C154011 * C154466 +
           ((C7157 * C602 - C7158 * C585 - C7157 * C603 + C154481 * C621 +
             C7159 * C2337 - C7160 * C2328 - C7159 * C2338 + C154470 * C2343 +
             C7161 * C7777 - C7162 * C7773 - C7161 * C7778 + C154445 * C7785) *
                C24270 +
            (C32529 + C32530 + C32531) * C24271 +
            (C32532 + C32533 + C32534) * C154442) *
               C154011 * C2630) *
              C154066 * C154384 +
          (((C7867 + C7866 + C7865) * C24270 +
            (C8688 + C8689 + C8690) * C24271 +
            (C31881 + C31882 + C31883) * C154442) *
               C154011 * C154466 -
           (C30838 * C154442 + (C7547 + C7548 + C7549) * C24271 +
            (C7238 + C7237 + C7236) * C24270) *
               C154011 * C154465 -
           ((C7161 * C31086 - C7162 * C31083 - C7161 * C31087 +
             C154445 * C31089 + C7159 * C6268 - C7160 * C6260 - C7159 * C6269 +
             C154470 * C6278 + C7157 * C3447 - C7158 * C3442 - C7157 * C3448 +
             C154481 * C3454) *
                C154442 +
            (C7161 * C9280 - C7162 * C9276 - C7161 * C9281 + C154445 * C9285 +
             C7159 * C6270 - C7160 * C6261 - C7159 * C6271 + C154470 * C6279 +
             C7157 * C1552 - C7158 * C1544 - C7157 * C1553 + C154481 * C1559) *
                C24271 +
            (C7870 + C7869 + C7868) * C24270) *
               C154011 * C2630) *
              C154066 * C154053)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C47141 * C144 - C47142 * C136 - C47141 * C145 + C47138 * C160 +
             C47143 * C600 - C47144 * C584 - C47143 * C601 + C47139 * C620 +
             C47145 * C602 - C47146 * C585 - C47145 * C603 + C154445 * C621) *
                C154164 * C154477 +
            (C47220 + C47221 + C47222) * C154164 * C154458 + C47236 * C154429) *
               C154465 -
           (C48319 * C154429 + (C47833 + C47834 + C47835) * C154164 * C154458 +
            (C47145 * C2337 - C47146 * C2328 - C47145 * C2338 +
             C154445 * C2343 + C47143 * C602 - C47144 * C585 - C47143 * C603 +
             C47139 * C621 + C47141 * C600 - C47142 * C584 - C47141 * C601 +
             C47138 * C620) *
                C154164 * C154477) *
               C154466 +
           ((C47141 * C602 - C47142 * C585 - C47141 * C603 + C47138 * C621 +
             C47143 * C2337 - C47144 * C2328 - C47143 * C2338 + C47139 * C2343 +
             C47145 * C7777 - C47146 * C7773 - C47145 * C7778 +
             C154445 * C7785) *
                C154164 * C154477 +
            (C47836 + C47837 + C47838) * C154164 * C154458 +
            (C47839 + C47840 + C47841) * C154164 * C154429) *
               C2630) *
              C154066 * C154384 +
          (((C47835 + C47834 + C47833) * C154164 * C154477 +
            (C47832 + C47831 + C47830) * C154164 * C154458 +
            (C48323 + C48324 + C48325) * C154164 * C154429) *
               C154466 -
           (C47237 * C154429 + (C47225 + C47224 + C47223) * C154164 * C154458 +
            (C47222 + C47221 + C47220) * C154164 * C154477) *
               C154465 -
           ((C47145 * C7783 - C47146 * C7776 - C47145 * C7784 +
             C154445 * C7788 + C47143 * C2331 - C47144 * C2325 -
             C47143 * C2332 + C47139 * C2340 + C47141 * C608 - C47142 * C588 -
             C47141 * C609 + C47138 * C624) *
                C154164 * C154429 +
            (C47841 + C47840 + C47839) * C154164 * C154458 +
            (C47838 + C47837 + C47836) * C154164 * C154477) *
               C2630) *
              C154066 * C154053)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C47141 * C144 - C47142 * C136 - C47141 * C145 + C47138 * C160 +
             C47143 * C600 - C47144 * C584 - C47143 * C601 + C47139 * C620 +
             C47145 * C602 - C47146 * C585 - C47145 * C603 + C154445 * C621) *
                C154480 +
            (C51712 + C51713 + C51714) * C154468 + C51725 * C154442) *
               C154011 * C154465 -
           (C54119 * C154442 + (C52727 + C52728 + C52729) * C154468 +
            (C47145 * C2337 - C47146 * C2328 - C47145 * C2338 +
             C154445 * C2343 + C47143 * C602 - C47144 * C585 - C47143 * C603 +
             C47139 * C621 + C47141 * C600 - C47142 * C584 - C47141 * C601 +
             C47138 * C620) *
                C154480) *
               C154011 * C154466 +
           ((C47141 * C602 - C47142 * C585 - C47141 * C603 + C47138 * C621 +
             C47143 * C2337 - C47144 * C2328 - C47143 * C2338 + C47139 * C2343 +
             C47145 * C7777 - C47146 * C7773 - C47145 * C7778 +
             C154445 * C7785) *
                C154480 +
            (C53374 + C53375 + C53376) * C154468 +
            (C53377 + C53378 + C53379) * C154442) *
               C154011 * C2630) *
              C154066 * C154384 +
          (((C47835 + C47834 + C47833) * C154480 +
            (C48652 + C48653 + C48654) * C154468 +
            (C52730 + C52731 + C52732) * C154442) *
               C154011 * C154466 -
           (C51699 * C154442 + (C47531 + C47532 + C47533) * C154468 +
            (C47222 + C47221 + C47220) * C154480) *
               C154011 * C154465 -
           ((C47145 * C31086 - C47146 * C31083 - C47145 * C31087 +
             C154445 * C31089 + C47143 * C6268 - C47144 * C6260 -
             C47143 * C6269 + C47139 * C6278 + C47141 * C3447 - C47142 * C3442 -
             C47141 * C3448 + C47138 * C3454) *
                C154442 +
            (C47145 * C9280 - C47146 * C9276 - C47145 * C9281 +
             C154445 * C9285 + C47143 * C6270 - C47144 * C6261 -
             C47143 * C6271 + C47139 * C6279 + C47141 * C1552 - C47142 * C1544 -
             C47141 * C1553 + C47138 * C1559) *
                C154468 +
            (C47838 + C47837 + C47836) * C154480) *
               C154011 * C2630) *
              C154066 * C154053)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C55523 * C144 - C55524 * C136 - C55523 * C145 + C55518 * C160 +
            C55525 * C600 - C55526 * C584 - C55525 * C601 + C55519 * C620 +
            C55527 * C602 - C55528 * C585 - C55527 * C603 + C55520 * C621 +
            C55529 * C2337 - C55530 * C2328 - C55529 * C2338 + C55521 * C2343 +
            C55531 * C7777 - C55532 * C7773 - C55531 * C7778 + C55522 * C7785) *
               C154164 * C154011 * C154465 -
           (C55531 * C10602 - C55532 * C10597 - C55531 * C10603 +
            C55522 * C10606 + C55529 * C7777 - C55530 * C7773 - C55529 * C7778 +
            C55521 * C7785 + C55527 * C2337 - C55528 * C2328 - C55527 * C2338 +
            C55520 * C2343 + C55525 * C602 - C55526 * C585 - C55525 * C603 +
            C55519 * C621 + C55523 * C600 - C55524 * C584 - C55523 * C601 +
            C55518 * C620) *
               C154164 * C154011 * C154466 +
           (C55523 * C602 - C55524 * C585 - C55523 * C603 + C55518 * C621 +
            C55525 * C2337 - C55526 * C2328 - C55525 * C2338 + C55519 * C2343 +
            C55527 * C7777 - C55528 * C7773 - C55527 * C7778 + C55520 * C7785 +
            C55529 * C10602 - C55530 * C10597 - C55529 * C10603 +
            C55521 * C10606 + C55531 * C55779 - C55532 * C55777 -
            C55531 * C55780 + C55522 * C55783) *
               C154164 * C154011 * C2630) *
              C154066 * C154384 +
          ((C55523 * C598 - C55524 * C583 - C55523 * C599 + C55518 * C619 +
            C55525 * C604 - C55526 * C586 - C55525 * C605 + C55519 * C622 +
            C55527 * C2335 - C55528 * C2327 - C55527 * C2336 + C55520 * C2342 +
            C55529 * C7779 - C55530 * C7774 - C55529 * C7780 + C55521 * C7786 +
            C55531 * C10600 - C55532 * C10596 - C55531 * C10601 +
            C55522 * C10605) *
               C154164 * C154011 * C154466 -
           (C55531 * C7779 - C55532 * C7774 - C55531 * C7780 + C55522 * C7786 +
            C55529 * C2335 - C55530 * C2327 - C55529 * C2336 + C55521 * C2342 +
            C55527 * C604 - C55528 * C586 - C55527 * C605 + C55520 * C622 +
            C55525 * C598 - C55526 * C583 - C55525 * C599 + C55519 * C619 +
            C55523 * C146 - C55524 * C137 - C55523 * C147 + C55518 * C161) *
               C154164 * C154011 * C154465 -
           (C55531 * C55781 - C55532 * C55778 - C55531 * C55782 +
            C55522 * C55784 + C55529 * C10600 - C55530 * C10596 -
            C55529 * C10601 + C55521 * C10605 + C55527 * C7779 -
            C55528 * C7774 - C55527 * C7780 + C55520 * C7786 + C55525 * C2335 -
            C55526 * C2327 - C55525 * C2336 + C55519 * C2342 + C55523 * C604 -
            C55524 * C586 - C55523 * C605 + C55518 * C622) *
               C154164 * C154011 * C2630) *
              C154066 * C154053)) /
            (p * q * std::sqrt(p + q));
    d2ee[194] +=
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                C154164 * C123 +
            C211 * C124 + C212 * C125 + C213 * C126 + C214 * C127) *
               C2114 -
           (C685 * C127 + C686 * C126 + C687 * C125 + C688 * C124 +
            (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                C154164 * C123) *
               C154146) *
              C154066 * C1309 +
          ((C688 * C123 + C687 * C124 + C686 * C125 + C685 * C126 +
            C967 * C127) *
               C154146 -
           (C215 * C127 + C214 * C126 + C213 * C125 + C212 * C124 +
            C211 * C123) *
               C2114) *
              C154066 * C1310 +
          ((C212 * C123 + C213 * C124 + C214 * C125 + C215 * C126 +
            C216 * C127) *
               C2114 -
           ((C134 * C956 - C135 * C955 - C134 * C957 + C154181 * C958) *
                C154164 * C127 +
            C967 * C126 + C685 * C125 + C686 * C124 + C687 * C123) *
               C154146) *
              C154066 * C1311)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                C154164 * C123 +
            C211 * C124 + C212 * C125 + C213 * C126 + C214 * C127) *
               C2114 -
           (C685 * C127 + C686 * C126 + C687 * C125 + C688 * C124 +
            (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                C154164 * C123) *
               C154146) *
              C338 +
          (((C134 * C1135 - C135 * C1129 - C134 * C1136 + C154181 * C1147) *
                C154164 * C123 +
            C1182 * C124 + C1183 * C125 + C1184 * C126 + C1185 * C127) *
               C154146 -
           (C448 * C127 + C449 * C126 + C450 * C125 + C451 * C124 +
            (C134 * C363 - C135 * C347 - C134 * C364 + C154181 * C383) *
                C154164 * C123) *
               C2114) *
              C339 +
          (((C134 * C365 - C135 * C348 - C134 * C366 + C154181 * C384) *
                C154164 * C123 +
            C452 * C124 + C453 * C125 + C454 * C126 + C455 * C127) *
               C2114 -
           ((C134 * C1977 - C135 * C1972 - C134 * C1978 + C154181 * C1987) *
                C154164 * C127 +
            (C134 * C1979 - C135 * C1973 - C134 * C1980 + C154181 * C1988) *
                C154164 * C126 +
            (C134 * C1981 - C135 * C1974 - C134 * C1982 + C154181 * C1989) *
                C154164 * C125 +
            (C134 * C1983 - C135 * C1975 - C134 * C1984 + C154181 * C1990) *
                C154164 * C124 +
            (C134 * C1985 - C135 * C1976 - C134 * C1986 + C154181 * C1991) *
                C154164 * C123) *
               C154146) *
              C340) *
         C154047) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C154480 +
             C3210 * C154468 + C3211 * C154442) *
                C2902 +
            (C2906 + C2907 + C2908) * C2903 + C2920 * C154429) *
               C2114 -
           (C3960 * C154429 + (C3507 + C3468 + C3469) * C2903 +
            (C4299 * C154442 + C4300 * C154468 +
             (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                 C154480) *
                C2902) *
               C154146) *
              C154066 * C1309 +
          (((C3469 + C3468 + C3507) * C2902 + (C3463 + C3462 + C3506) * C2903 +
            (C3954 + C3955 + C3964) * C154429) *
               C154146 -
           (C2921 * C154429 + (C2911 + C2910 + C2909) * C2903 +
            (C2908 + C2907 + C2906) * C2902) *
               C2114) *
              C154066 * C1310 +
          ((C2920 * C2902 + (C2914 + C2913 + C2912) * C2903 +
            (C2915 + C2916 + C2917) * C154429) *
               C2114 -
           (((C134 * C1977 - C135 * C1972 - C134 * C1978 + C154181 * C1987) *
                 C154442 +
             C1181 * C154468 + C677 * C154480) *
                C154429 +
            (C3964 + C3955 + C3954) * C2903 + C3960 * C2902) *
               C154146) *
              C154066 * C1311)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C154480 +
             C3210 * C154468 + C3211 * C154442) *
                C2902 +
            (C2906 + C2907 + C2908) * C2903 + C2920 * C154429) *
               C2114 -
           (C3960 * C154429 + (C3507 + C3468 + C3469) * C2903 +
            (C4299 * C154442 + C4300 * C154468 +
             (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                 C154480) *
                C2902) *
               C154146) *
              C338 +
          (((C4300 * C154480 + C4299 * C154468 + C5676 * C154442) * C2902 +
            (C4279 + C4280 + C4303) * C2903 +
            (C4285 + C4286 + C4304) * C154429) *
               C154146 -
           (C3734 * C154429 + (C3219 + C3174 + C3175) * C2903 +
            (C3214 * C154442 + C3211 * C154468 + C3210 * C154480) * C2902) *
               C2114) *
              C339 +
          (((C3211 * C154480 + C3214 * C154468 + C4687 * C154442) * C2902 +
            (C3180 + C3220 + C3221) * C2903 +
            (C3185 + C3222 + C3223) * C154429) *
               C2114 -
           (((C134 * C5660 - C135 * C5657 - C134 * C5661 + C154181 * C5666) *
                 C154442 +
             C4302 * C154468 + C3500 * C154480) *
                C154429 +
            ((C134 * C5662 - C135 * C5658 - C134 * C5663 + C154181 * C5667) *
                 C154442 +
             C4301 * C154468 + C3501 * C154480) *
                C2903 +
            ((C134 * C5664 - C135 * C5659 - C134 * C5665 + C154181 * C5668) *
                 C154442 +
             C5676 * C154468 + C4299 * C154480) *
                C2902) *
               C154146) *
              C340) *
         C154047) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C7157 * C144 - C7158 * C136 - C7157 * C145 + C154481 * C160 +
             C7159 * C600 - C7160 * C584 - C7159 * C601 + C154470 * C620 +
             C7161 * C602 - C7162 * C585 - C7161 * C603 + C154445 * C621) *
                C154164 * C2902 +
            (C7236 + C7237 + C7238) * C154164 * C2903 + C7252 * C154429) *
               C2114 -
           (C8351 * C154429 + (C7865 + C7866 + C7867) * C154164 * C2903 +
            (C7161 * C2337 - C7162 * C2328 - C7161 * C2338 + C154445 * C2343 +
             C7159 * C602 - C7160 * C585 - C7159 * C603 + C154470 * C621 +
             C7157 * C600 - C7158 * C584 - C7157 * C601 + C154481 * C620) *
                C154164 * C2902) *
               C154146) *
              C154066 * C1309 +
          (((C7867 + C7866 + C7865) * C154164 * C2902 +
            (C7864 + C7863 + C7862) * C154164 * C2903 +
            (C8355 + C8356 + C8357) * C154164 * C154429) *
               C154146 -
           (C7253 * C154429 + (C7241 + C7240 + C7239) * C154164 * C2903 +
            (C7238 + C7237 + C7236) * C154164 * C2902) *
               C2114) *
              C154066 * C1310 +
          ((C7252 * C2902 + (C7244 + C7243 + C7242) * C154164 * C2903 +
            (C7245 + C7246 + C7247) * C154164 * C154429) *
               C2114 -
           ((C7161 * C2329 - C7162 * C2324 - C7161 * C2330 + C154445 * C2339 +
             C7159 * C610 - C7160 * C589 - C7159 * C611 + C154470 * C625 +
             C7157 * C592 - C7158 * C580 - C7157 * C593 + C154481 * C616) *
                C154164 * C154429 +
            (C8357 + C8356 + C8355) * C154164 * C2903 + C8351 * C2902) *
               C154146) *
              C154066 * C1311)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C7157 * C144 - C7158 * C136 - C7157 * C145 + C154481 * C160 +
             C7159 * C600 - C7160 * C584 - C7159 * C601 + C154470 * C620 +
             C7161 * C602 - C7162 * C585 - C7161 * C603 + C154445 * C621) *
                C154164 * C2902 +
            (C7236 + C7237 + C7238) * C154164 * C2903 + C7252 * C154429) *
               C2114 -
           (C8351 * C154429 + (C7865 + C7866 + C7867) * C154164 * C2903 +
            (C7161 * C2337 - C7162 * C2328 - C7161 * C2338 + C154445 * C2343 +
             C7159 * C602 - C7160 * C585 - C7159 * C603 + C154470 * C621 +
             C7157 * C600 - C7158 * C584 - C7157 * C601 + C154481 * C620) *
                C154164 * C2902) *
               C154146) *
              C338 +
          (((C7157 * C1135 - C7158 * C1129 - C7157 * C1136 + C154481 * C1147 +
             C7159 * C1554 - C7160 * C1545 - C7159 * C1555 + C154470 * C1560 +
             C7161 * C6274 - C7162 * C6263 - C7161 * C6275 + C154445 * C6281) *
                C154164 * C2902 +
            (C8688 + C8689 + C8690) * C154164 * C2903 +
            (C8691 + C8692 + C8693) * C154164 * C154429) *
               C154146 -
           (C8109 * C154429 + (C7547 + C7548 + C7549) * C154164 * C2903 +
            (C7161 * C1554 - C7162 * C1545 - C7161 * C1555 + C154445 * C1560 +
             C7159 * C1135 - C7160 * C1129 - C7159 * C1136 + C154470 * C1147 +
             C7157 * C363 - C7158 * C347 - C7157 * C364 + C154481 * C383) *
                C154164 * C2902) *
               C2114) *
              C339 +
          (((C7157 * C365 - C7158 * C348 - C7157 * C366 + C154481 * C384 +
             C7159 * C1985 - C7160 * C1976 - C7159 * C1986 + C154470 * C1991 +
             C7161 * C3445 - C7162 * C3441 - C7161 * C3446 + C154445 * C3453) *
                C154164 * C2902 +
            (C7550 + C7551 + C7552) * C154164 * C2903 +
            (C7553 + C7554 + C7555) * C154164 * C154429) *
               C2114 -
           ((C7161 * C6264 - C7162 * C6258 - C7161 * C6265 + C154445 * C6276 +
             C7159 * C3449 - C7160 * C3443 - C7159 * C3450 + C154470 * C3455 +
             C7157 * C1981 - C7158 * C1974 - C7157 * C1982 + C154481 * C1989) *
                C154164 * C154429 +
            (C7161 * C6268 - C7162 * C6260 - C7161 * C6269 + C154445 * C6278 +
             C7159 * C3447 - C7160 * C3442 - C7159 * C3448 + C154470 * C3454 +
             C7157 * C1983 - C7158 * C1975 - C7157 * C1984 + C154481 * C1990) *
                C154164 * C2903 +
            (C7161 * C6272 - C7162 * C6262 - C7161 * C6273 + C154445 * C6280 +
             C7159 * C3445 - C7160 * C3441 - C7159 * C3446 + C154470 * C3453 +
             C7157 * C1985 - C7158 * C1976 - C7157 * C1986 + C154481 * C1991) *
                C154164 * C2902) *
               C154146) *
              C340) *
         C154047) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C24270 +
             C3210 * C24271 + C3211 * C154442) *
                C154477 +
            (C24277 + C24278 + C24279) * C154458 + C24291 * C154429) *
               C2114 -
           (C25198 * C154429 + (C24744 + C24745 + C24746) * C154458 +
            (C4299 * C154442 + C4300 * C24271 +
             (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                 C24270) *
                C154477) *
               C154146) *
              C154066 * C1309 +
          (((C24746 + C24745 + C24744) * C154477 +
            (C24743 + C24742 + C24741) * C154458 +
            (C25195 + C25196 + C25197) * C154429) *
               C154146 -
           (C24292 * C154429 + (C24282 + C24281 + C24280) * C154458 +
            (C24279 + C24278 + C24277) * C154477) *
               C2114) *
              C154066 * C1310 +
          ((C24291 * C154477 + (C24285 + C24284 + C24283) * C154458 +
            (C24286 + C24287 + C24288) * C154429) *
               C2114 -
           (((C134 * C1977 - C135 * C1972 - C134 * C1978 + C154181 * C1987) *
                 C154442 +
             C1181 * C24271 + C677 * C24270) *
                C154429 +
            (C25197 + C25196 + C25195) * C154458 + C25198 * C154477) *
               C154146) *
              C154066 * C1311)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C24270 +
             C3210 * C24271 + C3211 * C154442) *
                C154477 +
            (C24277 + C24278 + C24279) * C154458 + C24291 * C154429) *
               C2114 -
           (C25198 * C154429 + (C24744 + C24745 + C24746) * C154458 +
            (C4299 * C154442 + C4300 * C24271 +
             (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                 C24270) *
                C154477) *
               C154146) *
              C338 +
          (((C4300 * C24270 + C4299 * C24271 + C5676 * C154442) * C154477 +
            (C25489 + C25490 + C25491) * C154458 +
            (C25492 + C25493 + C25494) * C154429) *
               C154146 -
           (C24975 * C154429 + (C24514 + C24515 + C24516) * C154458 +
            (C3214 * C154442 + C3211 * C24271 + C3210 * C24270) * C154477) *
               C2114) *
              C339 +
          (((C3211 * C24270 + C3214 * C24271 + C4687 * C154442) * C154477 +
            (C24517 + C24518 + C24519) * C154458 +
            (C24520 + C24521 + C24522) * C154429) *
               C2114 -
           (((C134 * C5660 - C135 * C5657 - C134 * C5661 + C154181 * C5666) *
                 C154442 +
             C4302 * C24271 + C3500 * C24270) *
                C154429 +
            ((C134 * C5662 - C135 * C5658 - C134 * C5663 + C154181 * C5667) *
                 C154442 +
             C4301 * C24271 + C3501 * C24270) *
                C154458 +
            ((C134 * C5664 - C135 * C5659 - C134 * C5665 + C154181 * C5668) *
                 C154442 +
             C5676 * C24271 + C4299 * C24270) *
                C154477) *
               C154146) *
              C340) *
         C154047) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                C28192 +
            C3210 * C28193 + C3211 * C28194 + C3214 * C28195 + C4687 * C28196) *
               C154011 * C2114 -
           (C28899 * C28196 + C5676 * C28195 + C4299 * C28194 + C4300 * C28193 +
            (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                C28192) *
               C154011 * C154146) *
              C154066 * C1309 +
          ((C680 * C28192 + C1178 * C28193 + C3501 * C28194 + C4301 * C28195 +
            C28900 * C28196) *
               C154011 * C154146 -
           (C3215 * C28196 + C3213 * C28195 + C444 * C28194 + C443 * C28193 +
            C205 * C28192) *
               C154011 * C2114) *
              C154066 * C1310 +
          ((C206 * C28192 + C442 * C28193 + C445 * C28194 + C3212 * C28195 +
            C3216 * C28196) *
               C154011 * C2114 -
           ((C134 * C5660 - C135 * C5657 - C134 * C5661 + C154181 * C5666) *
                C28196 +
            C4302 * C28195 + C3500 * C28194 + C1179 * C28193 + C679 * C28192) *
               C154011 * C154146) *
              C154066 * C1311)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                C28192 +
            C3210 * C28193 + C3211 * C28194 + C3214 * C28195 + C4687 * C28196) *
               C154011 * C2114 -
           (C28899 * C28196 + C5676 * C28195 + C4299 * C28194 + C4300 * C28193 +
            (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                C28192) *
               C154011 * C154146) *
              C338 +
          ((C4300 * C28192 + C4299 * C28193 + C5676 * C28194 + C28899 * C28195 +
            C29672 * C28196) *
               C154011 * C154146 -
           (C28341 * C28196 + C4687 * C28195 + C3214 * C28194 + C3211 * C28193 +
            C3210 * C28192) *
               C154011 * C2114) *
              C339 +
          ((C3211 * C28192 + C3214 * C28193 + C4687 * C28194 + C28341 * C28195 +
            C29115 * C28196) *
               C154011 * C2114 -
           ((C134 * C29662 - C135 * C29661 - C134 * C29663 + C154181 * C29664) *
                C28196 +
            C29672 * C28195 + C28899 * C28194 + C5676 * C28193 +
            C4299 * C28192) *
               C154011 * C154146) *
              C340) *
         C154047) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C7157 * C144 - C7158 * C136 - C7157 * C145 + C154481 * C160 +
             C7159 * C600 - C7160 * C584 - C7159 * C601 + C154470 * C620 +
             C7161 * C602 - C7162 * C585 - C7161 * C603 + C154445 * C621) *
                C24270 +
            (C30851 + C30852 + C30853) * C24271 + C30864 * C154442) *
               C154011 * C2114 -
           (C33274 * C154442 + (C31878 + C31879 + C31880) * C24271 +
            (C7161 * C2337 - C7162 * C2328 - C7161 * C2338 + C154445 * C2343 +
             C7159 * C602 - C7160 * C585 - C7159 * C603 + C154470 * C621 +
             C7157 * C600 - C7158 * C584 - C7157 * C601 + C154481 * C620) *
                C24270) *
               C154011 * C154146) *
              C154066 * C1309 +
          (((C7867 + C7866 + C7865) * C24270 +
            (C8688 + C8689 + C8690) * C24271 +
            (C31881 + C31882 + C31883) * C154442) *
               C154011 * C154146 -
           (C30838 * C154442 + (C7547 + C7548 + C7549) * C24271 +
            (C7238 + C7237 + C7236) * C24270) *
               C154011 * C2114) *
              C154066 * C1310 +
          ((C7250 * C24270 + (C7546 + C7545 + C7544) * C24271 +
            (C7553 + C7554 + C7555) * C154442) *
               C154011 * C2114 -
           ((C7161 * C6264 - C7162 * C6258 - C7161 * C6265 + C154445 * C6276 +
             C7159 * C3449 - C7160 * C3443 - C7159 * C3450 + C154470 * C3455 +
             C7157 * C1981 - C7158 * C1974 - C7157 * C1982 + C154481 * C1989) *
                C154442 +
            (C8693 + C8692 + C8691) * C24271 + C8347 * C24270) *
               C154011 * C154146) *
              C154066 * C1311)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C7157 * C144 - C7158 * C136 - C7157 * C145 + C154481 * C160 +
             C7159 * C600 - C7160 * C584 - C7159 * C601 + C154470 * C620 +
             C7161 * C602 - C7162 * C585 - C7161 * C603 + C154445 * C621) *
                C24270 +
            (C30851 + C30852 + C30853) * C24271 + C30864 * C154442) *
               C154011 * C2114 -
           (C33274 * C154442 + (C31878 + C31879 + C31880) * C24271 +
            (C7161 * C2337 - C7162 * C2328 - C7161 * C2338 + C154445 * C2343 +
             C7159 * C602 - C7160 * C585 - C7159 * C603 + C154470 * C621 +
             C7157 * C600 - C7158 * C584 - C7157 * C601 + C154481 * C620) *
                C24270) *
               C154011 * C154146) *
              C338 +
          (((C31880 + C31879 + C31878) * C24270 +
            (C31877 + C31876 + C31875) * C24271 +
            (C33281 + C33282 + C33283) * C154442) *
               C154011 * C154146 -
           (C32261 * C154442 + (C30856 + C30855 + C30854) * C24271 +
            (C30853 + C30852 + C30851) * C24270) *
               C154011 * C2114) *
              C339 +
          ((C30864 * C24270 + (C30859 + C30858 + C30857) * C24271 +
            (C32268 + C32269 + C32270) * C154442) *
               C154011 * C2114 -
           ((C7161 * C30000 - C7162 * C29998 - C7161 * C30001 +
             C154445 * C30004 + C7159 * C28466 - C7160 * C28464 -
             C7159 * C28467 + C154470 * C28470 + C7157 * C5664 - C7158 * C5659 -
             C7157 * C5665 + C154481 * C5668) *
                C154442 +
            (C33283 + C33282 + C33281) * C24271 + C33274 * C24270) *
               C154011 * C154146) *
              C340) *
         C154047) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C47141 * C144 - C47142 * C136 - C47141 * C145 + C47138 * C160 +
             C47143 * C600 - C47144 * C584 - C47143 * C601 + C47139 * C620 +
             C47145 * C602 - C47146 * C585 - C47145 * C603 + C154445 * C621) *
                C154164 * C154477 +
            (C47220 + C47221 + C47222) * C154164 * C154458 + C47236 * C154429) *
               C2114 -
           (C48319 * C154429 + (C47833 + C47834 + C47835) * C154164 * C154458 +
            (C47145 * C2337 - C47146 * C2328 - C47145 * C2338 +
             C154445 * C2343 + C47143 * C602 - C47144 * C585 - C47143 * C603 +
             C47139 * C621 + C47141 * C600 - C47142 * C584 - C47141 * C601 +
             C47138 * C620) *
                C154164 * C154477) *
               C154146) *
              C154066 * C1309 +
          (((C47835 + C47834 + C47833) * C154164 * C154477 +
            (C47832 + C47831 + C47830) * C154164 * C154458 +
            (C48323 + C48324 + C48325) * C154164 * C154429) *
               C154146 -
           (C47237 * C154429 + (C47225 + C47224 + C47223) * C154164 * C154458 +
            (C47222 + C47221 + C47220) * C154164 * C154477) *
               C2114) *
              C154066 * C1310 +
          ((C47236 * C154477 + (C47228 + C47227 + C47226) * C154164 * C154458 +
            (C47229 + C47230 + C47231) * C154164 * C154429) *
               C2114 -
           ((C47145 * C2329 - C47146 * C2324 - C47145 * C2330 +
             C154445 * C2339 + C47143 * C610 - C47144 * C589 - C47143 * C611 +
             C47139 * C625 + C47141 * C592 - C47142 * C580 - C47141 * C593 +
             C47138 * C616) *
                C154164 * C154429 +
            (C48325 + C48324 + C48323) * C154164 * C154458 + C48319 * C154477) *
               C154146) *
              C154066 * C1311)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C47141 * C144 - C47142 * C136 - C47141 * C145 + C47138 * C160 +
             C47143 * C600 - C47144 * C584 - C47143 * C601 + C47139 * C620 +
             C47145 * C602 - C47146 * C585 - C47145 * C603 + C154445 * C621) *
                C154164 * C154477 +
            (C47220 + C47221 + C47222) * C154164 * C154458 + C47236 * C154429) *
               C2114 -
           (C48319 * C154429 + (C47833 + C47834 + C47835) * C154164 * C154458 +
            (C47145 * C2337 - C47146 * C2328 - C47145 * C2338 +
             C154445 * C2343 + C47143 * C602 - C47144 * C585 - C47143 * C603 +
             C47139 * C621 + C47141 * C600 - C47142 * C584 - C47141 * C601 +
             C47138 * C620) *
                C154164 * C154477) *
               C154146) *
              C338 +
          (((C47141 * C1135 - C47142 * C1129 - C47141 * C1136 + C47138 * C1147 +
             C47143 * C1554 - C47144 * C1545 - C47143 * C1555 + C47139 * C1560 +
             C47145 * C6274 - C47146 * C6263 - C47145 * C6275 +
             C154445 * C6281) *
                C154164 * C154477 +
            (C48652 + C48653 + C48654) * C154164 * C154458 +
            (C48655 + C48656 + C48657) * C154164 * C154429) *
               C154146 -
           (C48077 * C154429 + (C47531 + C47532 + C47533) * C154164 * C154458 +
            (C47145 * C1554 - C47146 * C1545 - C47145 * C1555 +
             C154445 * C1560 + C47143 * C1135 - C47144 * C1129 -
             C47143 * C1136 + C47139 * C1147 + C47141 * C363 - C47142 * C347 -
             C47141 * C364 + C47138 * C383) *
                C154164 * C154477) *
               C2114) *
              C339 +
          (((C47141 * C365 - C47142 * C348 - C47141 * C366 + C47138 * C384 +
             C47143 * C1985 - C47144 * C1976 - C47143 * C1986 + C47139 * C1991 +
             C47145 * C3445 - C47146 * C3441 - C47145 * C3446 +
             C154445 * C3453) *
                C154164 * C154477 +
            (C47534 + C47535 + C47536) * C154164 * C154458 +
            (C47537 + C47538 + C47539) * C154164 * C154429) *
               C2114 -
           ((C47145 * C6264 - C47146 * C6258 - C47145 * C6265 +
             C154445 * C6276 + C47143 * C3449 - C47144 * C3443 -
             C47143 * C3450 + C47139 * C3455 + C47141 * C1981 - C47142 * C1974 -
             C47141 * C1982 + C47138 * C1989) *
                C154164 * C154429 +
            (C47145 * C6268 - C47146 * C6260 - C47145 * C6269 +
             C154445 * C6278 + C47143 * C3447 - C47144 * C3442 -
             C47143 * C3448 + C47139 * C3454 + C47141 * C1983 - C47142 * C1975 -
             C47141 * C1984 + C47138 * C1990) *
                C154164 * C154458 +
            (C47145 * C6272 - C47146 * C6262 - C47145 * C6273 +
             C154445 * C6280 + C47143 * C3445 - C47144 * C3441 -
             C47143 * C3446 + C47139 * C3453 + C47141 * C1985 - C47142 * C1976 -
             C47141 * C1986 + C47138 * C1991) *
                C154164 * C154477) *
               C154146) *
              C340) *
         C154047) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C47141 * C144 - C47142 * C136 - C47141 * C145 + C47138 * C160 +
             C47143 * C600 - C47144 * C584 - C47143 * C601 + C47139 * C620 +
             C47145 * C602 - C47146 * C585 - C47145 * C603 + C154445 * C621) *
                C154480 +
            (C51712 + C51713 + C51714) * C154468 + C51725 * C154442) *
               C154011 * C2114 -
           (C54119 * C154442 + (C52727 + C52728 + C52729) * C154468 +
            (C47145 * C2337 - C47146 * C2328 - C47145 * C2338 +
             C154445 * C2343 + C47143 * C602 - C47144 * C585 - C47143 * C603 +
             C47139 * C621 + C47141 * C600 - C47142 * C584 - C47141 * C601 +
             C47138 * C620) *
                C154480) *
               C154011 * C154146) *
              C154066 * C1309 +
          (((C47835 + C47834 + C47833) * C154480 +
            (C48652 + C48653 + C48654) * C154468 +
            (C52730 + C52731 + C52732) * C154442) *
               C154011 * C154146 -
           (C51699 * C154442 + (C47531 + C47532 + C47533) * C154468 +
            (C47222 + C47221 + C47220) * C154480) *
               C154011 * C2114) *
              C154066 * C1310 +
          ((C47234 * C154480 + (C47530 + C47529 + C47528) * C154468 +
            (C47537 + C47538 + C47539) * C154442) *
               C154011 * C2114 -
           ((C47145 * C6264 - C47146 * C6258 - C47145 * C6265 +
             C154445 * C6276 + C47143 * C3449 - C47144 * C3443 -
             C47143 * C3450 + C47139 * C3455 + C47141 * C1981 - C47142 * C1974 -
             C47141 * C1982 + C47138 * C1989) *
                C154442 +
            (C48657 + C48656 + C48655) * C154468 + C48315 * C154480) *
               C154011 * C154146) *
              C154066 * C1311)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C47141 * C144 - C47142 * C136 - C47141 * C145 + C47138 * C160 +
             C47143 * C600 - C47144 * C584 - C47143 * C601 + C47139 * C620 +
             C47145 * C602 - C47146 * C585 - C47145 * C603 + C154445 * C621) *
                C154480 +
            (C51712 + C51713 + C51714) * C154468 + C51725 * C154442) *
               C154011 * C2114 -
           (C54119 * C154442 + (C52727 + C52728 + C52729) * C154468 +
            (C47145 * C2337 - C47146 * C2328 - C47145 * C2338 +
             C154445 * C2343 + C47143 * C602 - C47144 * C585 - C47143 * C603 +
             C47139 * C621 + C47141 * C600 - C47142 * C584 - C47141 * C601 +
             C47138 * C620) *
                C154480) *
               C154011 * C154146) *
              C338 +
          (((C52729 + C52728 + C52727) * C154480 +
            (C52726 + C52725 + C52724) * C154468 +
            (C54126 + C54127 + C54128) * C154442) *
               C154011 * C154146 -
           (C53110 * C154442 + (C51717 + C51716 + C51715) * C154468 +
            (C51714 + C51713 + C51712) * C154480) *
               C154011 * C2114) *
              C339 +
          ((C51725 * C154480 + (C51720 + C51719 + C51718) * C154468 +
            (C53117 + C53118 + C53119) * C154442) *
               C154011 * C2114 -
           ((C47145 * C30000 - C47146 * C29998 - C47145 * C30001 +
             C154445 * C30004 + C47143 * C28466 - C47144 * C28464 -
             C47143 * C28467 + C47139 * C28470 + C47141 * C5664 -
             C47142 * C5659 - C47141 * C5665 + C47138 * C5668) *
                C154442 +
            (C54128 + C54127 + C54126) * C154468 + C54119 * C154480) *
               C154011 * C154146) *
              C340) *
         C154047) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C55523 * C144 - C55524 * C136 - C55523 * C145 + C55518 * C160 +
            C55525 * C600 - C55526 * C584 - C55525 * C601 + C55519 * C620 +
            C55527 * C602 - C55528 * C585 - C55527 * C603 + C55520 * C621 +
            C55529 * C2337 - C55530 * C2328 - C55529 * C2338 + C55521 * C2343 +
            C55531 * C7777 - C55532 * C7773 - C55531 * C7778 + C55522 * C7785) *
               C154164 * C154011 * C2114 -
           (C55531 * C10602 - C55532 * C10597 - C55531 * C10603 +
            C55522 * C10606 + C55529 * C7777 - C55530 * C7773 - C55529 * C7778 +
            C55521 * C7785 + C55527 * C2337 - C55528 * C2328 - C55527 * C2338 +
            C55520 * C2343 + C55525 * C602 - C55526 * C585 - C55525 * C603 +
            C55519 * C621 + C55523 * C600 - C55524 * C584 - C55523 * C601 +
            C55518 * C620) *
               C154164 * C154011 * C154146) *
              C154066 * C1309 +
          ((C55523 * C598 - C55524 * C583 - C55523 * C599 + C55518 * C619 +
            C55525 * C604 - C55526 * C586 - C55525 * C605 + C55519 * C622 +
            C55527 * C2335 - C55528 * C2327 - C55527 * C2336 + C55520 * C2342 +
            C55529 * C7779 - C55530 * C7774 - C55529 * C7780 + C55521 * C7786 +
            C55531 * C10600 - C55532 * C10596 - C55531 * C10601 +
            C55522 * C10605) *
               C154164 * C154011 * C154146 -
           (C55531 * C7779 - C55532 * C7774 - C55531 * C7780 + C55522 * C7786 +
            C55529 * C2335 - C55530 * C2327 - C55529 * C2336 + C55521 * C2342 +
            C55527 * C604 - C55528 * C586 - C55527 * C605 + C55520 * C622 +
            C55525 * C598 - C55526 * C583 - C55525 * C599 + C55519 * C619 +
            C55523 * C146 - C55524 * C137 - C55523 * C147 + C55518 * C161) *
               C154164 * C154011 * C2114) *
              C154066 * C1310 +
          ((C55523 * C148 - C55524 * C138 - C55523 * C149 + C55518 * C162 +
            C55525 * C596 - C55526 * C582 - C55525 * C597 + C55519 * C618 +
            C55527 * C606 - C55528 * C587 - C55527 * C607 + C55520 * C623 +
            C55529 * C2333 - C55530 * C2326 - C55529 * C2334 + C55521 * C2341 +
            C55531 * C7781 - C55532 * C7775 - C55531 * C7782 + C55522 * C7787) *
               C154164 * C154011 * C2114 -
           (C55531 * C10598 - C55532 * C10595 - C55531 * C10599 +
            C55522 * C10604 + C55529 * C7781 - C55530 * C7775 - C55529 * C7782 +
            C55521 * C7787 + C55527 * C2333 - C55528 * C2326 - C55527 * C2334 +
            C55520 * C2341 + C55525 * C606 - C55526 * C587 - C55525 * C607 +
            C55519 * C623 + C55523 * C596 - C55524 * C582 - C55523 * C597 +
            C55518 * C618) *
               C154164 * C154011 * C154146) *
              C154066 * C1311)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C55523 * C144 - C55524 * C136 - C55523 * C145 + C55518 * C160 +
            C55525 * C600 - C55526 * C584 - C55525 * C601 + C55519 * C620 +
            C55527 * C602 - C55528 * C585 - C55527 * C603 + C55520 * C621 +
            C55529 * C2337 - C55530 * C2328 - C55529 * C2338 + C55521 * C2343 +
            C55531 * C7777 - C55532 * C7773 - C55531 * C7778 + C55522 * C7785) *
               C154164 * C154011 * C2114 -
           (C55531 * C10602 - C55532 * C10597 - C55531 * C10603 +
            C55522 * C10606 + C55529 * C7777 - C55530 * C7773 - C55529 * C7778 +
            C55521 * C7785 + C55527 * C2337 - C55528 * C2328 - C55527 * C2338 +
            C55520 * C2343 + C55525 * C602 - C55526 * C585 - C55525 * C603 +
            C55519 * C621 + C55523 * C600 - C55524 * C584 - C55523 * C601 +
            C55518 * C620) *
               C154164 * C154011 * C154146) *
              C338 +
          ((C55523 * C1135 - C55524 * C1129 - C55523 * C1136 + C55518 * C1147 +
            C55525 * C1554 - C55526 * C1545 - C55525 * C1555 + C55519 * C1560 +
            C55527 * C6274 - C55528 * C6263 - C55527 * C6275 + C55520 * C6281 +
            C55529 * C9282 - C55530 * C9277 - C55529 * C9283 + C55521 * C9286 +
            C55531 * C33869 - C55532 * C33866 - C55531 * C33870 +
            C55522 * C33872) *
               C154164 * C154011 * C154146 -
           (C55531 * C9282 - C55532 * C9277 - C55531 * C9283 + C55522 * C9286 +
            C55529 * C6274 - C55530 * C6263 - C55529 * C6275 + C55521 * C6281 +
            C55527 * C1554 - C55528 * C1545 - C55527 * C1555 + C55520 * C1560 +
            C55525 * C1135 - C55526 * C1129 - C55525 * C1136 + C55519 * C1147 +
            C55523 * C363 - C55524 * C347 - C55523 * C364 + C55518 * C383) *
               C154164 * C154011 * C2114) *
              C339 +
          ((C55523 * C365 - C55524 * C348 - C55523 * C366 + C55518 * C384 +
            C55525 * C1985 - C55526 * C1976 - C55525 * C1986 + C55519 * C1991 +
            C55527 * C3445 - C55528 * C3441 - C55527 * C3446 + C55520 * C3453 +
            C55529 * C6272 - C55530 * C6262 - C55529 * C6273 + C55521 * C6280 +
            C55531 * C31084 - C55532 * C31082 - C55531 * C31085 +
            C55522 * C31088) *
               C154164 * C154011 * C2114 -
           (C55531 * C33867 - C55532 * C33865 - C55531 * C33868 +
            C55522 * C33871 + C55529 * C31084 - C55530 * C31082 -
            C55529 * C31085 + C55521 * C31088 + C55527 * C6272 -
            C55528 * C6262 - C55527 * C6273 + C55520 * C6280 + C55525 * C3445 -
            C55526 * C3441 - C55525 * C3446 + C55519 * C3453 + C55523 * C1985 -
            C55524 * C1976 - C55523 * C1986 + C55518 * C1991) *
               C154164 * C154011 * C154146) *
              C340) *
         C154047) /
            (p * q * std::sqrt(p + q));
    d2ee[195] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
              C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
                 C24270 +
             (C19258 + C19259) * C24271 + C38629 * C154442) *
                C154373 +
            ((C15087 + C15088) * C24270 + C19212 * C24271 + C19224 * C154442) *
                C154021) *
               C154082 * C154392 -
           ((C38630 * C154442 + C19214 * C24271 + C19215 * C24270) * C154021 +
            ((C21100 + C21099) * C154442 + (C19260 + C19261) * C24271 +
             (C19259 + C19258) * C24270) *
                C154373) *
               C154082 * C154118) *
              C154461 +
          (((C19212 * C24270 + C19224 * C24271 + C38631 * C154442) * C154373 +
            (C18908 * C24270 + C19233 * C24271 + (C19264 + C19265) * C154442) *
                C154021) *
               C154082 * C154118 -
           ((C19213 * C154442 + C15856 * C24271 + (C15090 + C15089) * C24270) *
                C154021 +
            (C19214 * C154442 + C19215 * C24271 + (C15088 + C15087) * C24270) *
                C154373) *
               C154082 * C154392) *
              C154462 +
          (((C15097 * C24270 + C18908 * C24271 + C19233 * C154442) * C154373 +
            (C15098 * C24270 + C19876 * C24271 + (C15381 + C15382) * C154442) *
                C154021) *
               C154082 * C154392 -
           (((C15024 * C4264 - C15025 * C4257 - C15024 * C4265 +
              C154268 * C4269 + C15022 * C1406 - C15023 * C1400 -
              C15022 * C1407 + C154408 * C1415) *
                 C154442 +
             (C15382 + C15381) * C24271 + C15855 * C24270) *
                C154021 +
            ((C19265 + C19264) * C154442 + C19213 * C24271 + C15856 * C24270) *
                C154373) *
               C154082 * C154118) *
              C818)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
             C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
                C154164 * C11465 +
            (C15087 + C15088) * C154164 * C11466 + C15101 * C11467 +
            C15102 * C154407) *
               C154082 * C154392 -
           (C15865 * C154407 + C15866 * C11467 +
            (C15375 + C15376) * C154164 * C11466 +
            (C15024 * C1135 - C15025 * C1129 - C15024 * C1136 +
             C154268 * C1147 + C15022 * C363 - C15023 * C347 - C15022 * C364 +
             C154408 * C383) *
                C154164 * C11465) *
               C154082 * C154118) *
              C154461 +
          (((C15376 + C15375) * C154164 * C11465 +
            (C15374 + C15373) * C154164 * C11466 +
            (C15372 + C15371) * C154164 * C11467 +
            (C15871 + C15872) * C154164 * C154407) *
               C154082 * C154118 -
           (C15103 * C154407 + C15104 * C11467 +
            (C15090 + C15089) * C154164 * C11466 +
            (C15088 + C15087) * C154164 * C11465) *
               C154082 * C154392) *
              C154462 +
          ((C15101 * C11465 + C15102 * C11466 +
            (C15094 + C15093) * C154164 * C11467 +
            (C15095 + C15096) * C154164 * C154407) *
               C154082 * C154392 -
           ((C15024 * C1145 - C15025 * C1134 - C15024 * C1146 +
             C154268 * C1152 + C15022 * C375 - C15023 * C353 - C15022 * C376 +
             C154408 * C389) *
                C154164 * C154407 +
            (C15872 + C15871) * C154164 * C11467 + C15865 * C11466 +
            C15866 * C11465) *
               C154082 * C154118) *
              C818)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C63054 * C144 - C63055 * C136 - C63054 * C145 + C63050 * C160 +
             C63056 * C600 - C63057 * C584 - C63056 * C601 + C63051 * C620 +
             C63058 * C602 - C63059 * C585 - C63058 * C603 + C63052 * C621 +
             C63060 * C2337 - C63061 * C2328 - C63060 * C2338 +
             C154422 * C2343) *
                C154164 * C154373 +
            (C63135 + C63136 + C63137 + C63138) * C154164 * C154021) *
               C154082 * C154392 -
           ((C63389 + C63390 + C63391 + C63392) * C154164 * C154021 +
            (C63060 * C6274 - C63061 * C6263 - C63060 * C6275 +
             C154422 * C6281 + C63058 * C1554 - C63059 * C1545 -
             C63058 * C1555 + C63052 * C1560 + C63056 * C1135 - C63057 * C1129 -
             C63056 * C1136 + C63051 * C1147 + C63054 * C363 - C63055 * C347 -
             C63054 * C364 + C63050 * C383) *
                C154164 * C154373) *
               C154082 * C154118) *
              C154461 +
          (((C63392 + C63391 + C63390 + C63389) * C154164 * C154373 +
            (C63865 + C63866 + C63867 + C63868) * C154164 * C154021) *
               C154082 * C154118 -
           ((C63139 + C63140 + C63141 + C63142) * C154164 * C154021 +
            (C63138 + C63137 + C63136 + C63135) * C154164 * C154373) *
               C154082 * C154392) *
              C154462 +
          (((C63142 + C63141 + C63140 + C63139) * C154164 * C154373 +
            (C63143 + C63144 + C63145 + C63146) * C154164 * C154021) *
               C154082 * C154392 -
           ((C63060 * C8648 - C63061 * C8647 - C63060 * C8649 +
             C154422 * C8650 + C63058 * C1548 - C63059 * C1542 -
             C63058 * C1549 + C63052 * C1557 + C63056 * C1141 - C63057 * C1132 -
             C63056 * C1142 + C63051 * C1150 + C63054 * C357 - C63055 * C344 -
             C63054 * C358 + C63050 * C380) *
                C154164 * C154021 +
            (C63868 + C63867 + C63866 + C63865) * C154164 * C154373) *
               C154082 * C154118) *
              C818)) /
            (p * q * std::sqrt(p + q));
    d2ee[196] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
               C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
                  C24270 +
              (C19258 + C19259) * C24271 + C38629 * C154442) *
                 C154373 +
             ((C15087 + C15088) * C24270 + C19212 * C24271 + C19224 * C154442) *
                 C154021) *
                C154393 -
            ((C39916 * C154442 + C20558 * C24271 + (C15653 + C15654) * C24270) *
                 C154021 +
             ((C22384 + C22383) * C154442 + (C20597 + C20598) * C24271 +
              (C15024 * C602 - C15025 * C585 - C15024 * C603 + C154268 * C621 +
               C15022 * C600 - C15023 * C584 - C15022 * C601 + C154408 * C620) *
                  C24270) *
                 C154373) *
                C154146) *
               C154392 +
           ((((C20598 + C20597) * C24270 + (C22383 + C22384) * C24271 +
              (C15022 * C4258 - C15023 * C4254 - C15022 * C4259 +
               C154408 * C4266 + C15024 * C4912 - C15025 * C4907 -
               C15024 * C4913 + C154268 * C4916) *
                  C154442) *
                 C154373 +
             (C20567 * C24270 + C39917 * C24271 + (C39930 + C39931) * C154442) *
                 C154021) *
                C154146 -
            ((C38630 * C154442 + C19214 * C24271 + C19215 * C24270) * C154021 +
             ((C21100 + C21099) * C154442 + (C19260 + C19261) * C24271 +
              (C19259 + C19258) * C24270) *
                 C154373) *
                C154393) *
               C154118) *
              C341 +
          (((((C15654 + C15653) * C24270 + C20567 * C24271 + C39917 * C154442) *
                 C154373 +
             ((C15652 + C15651) * C24270 + C20576 * C24271 +
              (C20601 + C20602) * C154442) *
                 C154021) *
                C154146 -
            ((C19213 * C154442 + C15856 * C24271 + (C15090 + C15089) * C24270) *
                 C154021 +
             (C19214 * C154442 + C19215 * C24271 + (C15088 + C15087) * C24270) *
                 C154373) *
                C154393) *
               C154392 +
           (((C19212 * C24270 + C19224 * C24271 + C38631 * C154442) * C154373 +
             (C18908 * C24270 + C19233 * C24271 + (C19264 + C19265) * C154442) *
                 C154021) *
                C154393 -
            (((C15024 * C4908 - C15025 * C4905 - C15024 * C4909 +
               C154268 * C4914 + C15022 * C4262 - C15023 * C4256 -
               C15022 * C4263 + C154408 * C4268) *
                  C154442 +
              (C20602 + C20601) * C24271 + C20168 * C24270) *
                 C154021 +
             ((C39931 + C39930) * C154442 + C39916 * C24271 + C20558 * C24270) *
                 C154373) *
                C154146) *
               C154118) *
              C154053)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
              C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
                 C154164 * C11465 +
             (C15087 + C15088) * C154164 * C11466 + C15101 * C11467 +
             C15102 * C154407) *
                C154393 -
            (C16077 * C154407 + C16078 * C11467 +
             (C15653 + C15654) * C154164 * C11466 +
             (C15024 * C602 - C15025 * C585 - C15024 * C603 + C154268 * C621 +
              C15022 * C600 - C15023 * C584 - C15022 * C601 + C154408 * C620) *
                 C154164 * C11465) *
                C154146) *
               C154392 +
           (((C15022 * C1135 - C15023 * C1129 - C15022 * C1136 +
              C154408 * C1147 + C15024 * C1554 - C15025 * C1545 -
              C15024 * C1555 + C154268 * C1560) *
                 C154164 * C11465 +
             (C16379 + C16380) * C154164 * C11466 +
             (C16381 + C16382) * C154164 * C11467 +
             (C16383 + C16384) * C154164 * C154407) *
                C154146 -
            (C15865 * C154407 + C15866 * C11467 +
             (C15375 + C15376) * C154164 * C11466 +
             (C15024 * C1135 - C15025 * C1129 - C15024 * C1136 +
              C154268 * C1147 + C15022 * C363 - C15023 * C347 - C15022 * C364 +
              C154408 * C383) *
                 C154164 * C11465) *
                C154393) *
               C154118) *
              C341 +
          ((((C15654 + C15653) * C154164 * C11465 +
             (C15652 + C15651) * C154164 * C11466 +
             (C15650 + C15649) * C154164 * C11467 +
             (C16083 + C16084) * C154164 * C154407) *
                C154146 -
            (C15103 * C154407 + C15104 * C11467 +
             (C15090 + C15089) * C154164 * C11466 +
             (C15088 + C15087) * C154164 * C11465) *
                C154393) *
               C154392 +
           (((C15376 + C15375) * C154164 * C11465 +
             (C15374 + C15373) * C154164 * C11466 +
             (C15372 + C15371) * C154164 * C11467 +
             (C15871 + C15872) * C154164 * C154407) *
                C154393 -
            ((C15024 * C1546 - C15025 * C1541 - C15024 * C1547 +
              C154268 * C1556 + C15022 * C1143 - C15023 * C1133 -
              C15022 * C1144 + C154408 * C1151) *
                 C154164 * C154407 +
             (C16384 + C16383) * C154164 * C11467 +
             (C16382 + C16381) * C154164 * C11466 +
             (C16380 + C16379) * C154164 * C11465) *
                C154146) *
               C154118) *
              C154053)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C63054 * C144 - C63055 * C136 - C63054 * C145 + C63050 * C160 +
              C63056 * C600 - C63057 * C584 - C63056 * C601 + C63051 * C620 +
              C63058 * C602 - C63059 * C585 - C63058 * C603 + C63052 * C621 +
              C63060 * C2337 - C63061 * C2328 - C63060 * C2338 +
              C154422 * C2343) *
                 C154164 * C154373 +
             (C63135 + C63136 + C63137 + C63138) * C154164 * C154021) *
                C154393 -
            ((C63639 + C63640 + C63641 + C63642) * C154164 * C154021 +
             (C63060 * C7777 - C63061 * C7773 - C63060 * C7778 +
              C154422 * C7785 + C63058 * C2337 - C63059 * C2328 -
              C63058 * C2338 + C63052 * C2343 + C63056 * C602 - C63057 * C585 -
              C63056 * C603 + C63051 * C621 + C63054 * C600 - C63055 * C584 -
              C63054 * C601 + C63050 * C620) *
                 C154164 * C154373) *
                C154146) *
               C154392 +
           (((C63054 * C1135 - C63055 * C1129 - C63054 * C1136 +
              C63050 * C1147 + C63056 * C1554 - C63057 * C1545 -
              C63056 * C1555 + C63051 * C1560 + C63058 * C6274 -
              C63059 * C6263 - C63058 * C6275 + C63052 * C6281 +
              C63060 * C9282 - C63061 * C9277 - C63060 * C9283 +
              C154422 * C9286) *
                 C154164 * C154373 +
             (C64373 + C64374 + C64375 + C64376) * C154164 * C154021) *
                C154146 -
            ((C63389 + C63390 + C63391 + C63392) * C154164 * C154021 +
             (C63060 * C6274 - C63061 * C6263 - C63060 * C6275 +
              C154422 * C6281 + C63058 * C1554 - C63059 * C1545 -
              C63058 * C1555 + C63052 * C1560 + C63056 * C1135 -
              C63057 * C1129 - C63056 * C1136 + C63051 * C1147 + C63054 * C363 -
              C63055 * C347 - C63054 * C364 + C63050 * C383) *
                 C154164 * C154373) *
                C154393) *
               C154118) *
              C341 +
          ((((C63642 + C63641 + C63640 + C63639) * C154164 * C154373 +
             (C64087 + C64088 + C64089 + C64090) * C154164 * C154021) *
                C154146 -
            ((C63139 + C63140 + C63141 + C63142) * C154164 * C154021 +
             (C63138 + C63137 + C63136 + C63135) * C154164 * C154373) *
                C154393) *
               C154392 +
           (((C63392 + C63391 + C63390 + C63389) * C154164 * C154373 +
             (C63865 + C63866 + C63867 + C63868) * C154164 * C154021) *
                C154393 -
            ((C63060 * C9278 - C63061 * C9275 - C63060 * C9279 +
              C154422 * C9284 + C63058 * C6266 - C63059 * C6259 -
              C63058 * C6267 + C63052 * C6277 + C63056 * C1550 -
              C63057 * C1543 - C63056 * C1551 + C63051 * C1558 +
              C63054 * C1139 - C63055 * C1131 - C63054 * C1140 +
              C63050 * C1149) *
                 C154164 * C154021 +
             (C64376 + C64375 + C64374 + C64373) * C154164 * C154373) *
                C154146) *
               C154118) *
              C154053)) /
            (p * q * std::sqrt(p + q));
    d2ee[197] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
                C15024 * C600 - C15025 * C584 - C15024 * C601 +
                C154268 * C620) *
                   C154164 * C11465 +
               (C15087 + C15088) * C154164 * C11466 + C15101 * C11467 +
               C15102 * C154407) *
                  C154082 * C154066 * C130 -
              (C15103 * C154407 + C15104 * C11467 +
               (C15090 + C15089) * C154164 * C11466 +
               (C15088 + C15087) * C154164 * C11465) *
                  C154082 * C154066 * C131 +
              (C15101 * C11465 + C15102 * C11466 +
               (C15094 + C15093) * C154164 * C11467 +
               (C15095 + C15096) * C154164 * C154407) *
                  C154082 * C154066 * C132 -
              ((C15024 * C956 - C15025 * C955 - C15024 * C957 + C154268 * C958 +
                C15022 * C156 - C15023 * C142 - C15022 * C157 +
                C154408 * C166) *
                   C154164 * C154407 +
               (C15096 + C15095) * C154164 * C11467 + C15103 * C11466 +
               C15104 * C11465) *
                  C154082 * C154066 * C133) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C15022 * C144 - C15023 * C136 - C15022 * C145 +
                 C154408 * C160 + C15024 * C600 - C15025 * C584 -
                 C15024 * C601 + C154268 * C620) *
                    C154164 * C11465 +
                (C15087 + C15088) * C154164 * C11466 + C15101 * C11467 +
                C15102 * C154407) *
                   C154082 * C338 -
               ((C15371 + C15372) * C154164 * C154407 +
                (C15373 + C15374) * C154164 * C11467 +
                (C15375 + C15376) * C154164 * C11466 +
                (C15024 * C1135 - C15025 * C1129 - C15024 * C1136 +
                 C154268 * C1147 + C15022 * C363 - C15023 * C347 -
                 C15022 * C364 + C154408 * C383) *
                    C154164 * C11465) *
                   C154082 * C339 +
               ((C15022 * C365 - C15023 * C348 - C15022 * C366 +
                 C154408 * C384 + C15024 * C1985 - C15025 * C1976 -
                 C15024 * C1986 + C154268 * C1991) *
                    C154164 * C11465 +
                (C15377 + C15378) * C154164 * C11466 +
                (C15379 + C15380) * C154164 * C11467 +
                (C15381 + C15382) * C154164 * C154407) *
                   C154082 * C340) *
                  C341 +
              (((C15376 + C15375) * C154164 * C11465 +
                (C15374 + C15373) * C154164 * C11466 +
                (C15372 + C15371) * C154164 * C11467 +
                (C15022 * C355 - C15023 * C343 - C15022 * C356 +
                 C154408 * C379 + C15024 * C1143 - C15025 * C1133 -
                 C15024 * C1144 + C154268 * C1151) *
                    C154164 * C154407) *
                   C154082 * C339 -
               (C15103 * C154407 + C15104 * C11467 +
                (C15090 + C15089) * C154164 * C11466 +
                (C15088 + C15087) * C154164 * C11465) *
                   C154082 * C338 -
               ((C15024 * C1977 - C15025 * C1972 - C15024 * C1978 +
                 C154268 * C1987 + C15022 * C373 - C15023 * C352 -
                 C15022 * C374 + C154408 * C388) *
                    C154164 * C154407 +
                (C15382 + C15381) * C154164 * C11467 +
                (C15380 + C15379) * C154164 * C11466 +
                (C15378 + C15377) * C154164 * C11465) *
                   C154082 * C340) *
                  C154053)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
             C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
                C154164 * C11465 +
            (C15087 + C15088) * C154164 * C11466 + C15101 * C11467 +
            C15102 * C154407) *
               C577 -
           ((C15649 + C15650) * C154164 * C154407 +
            (C15651 + C15652) * C154164 * C11467 +
            (C15653 + C15654) * C154164 * C11466 +
            (C15024 * C602 - C15025 * C585 - C15024 * C603 + C154268 * C621 +
             C15022 * C600 - C15023 * C584 - C15022 * C601 + C154408 * C620) *
                C154164 * C11465) *
               C578 +
           ((C15022 * C602 - C15023 * C585 - C15022 * C603 + C154408 * C621 +
             C15024 * C2337 - C15025 * C2328 - C15024 * C2338 +
             C154268 * C2343) *
                C154164 * C11465 +
            (C15655 + C15656) * C154164 * C11466 +
            (C15657 + C15658) * C154164 * C11467 +
            (C15659 + C15660) * C154164 * C154407) *
               C579) *
              C154066 * C341 +
          (((C15654 + C15653) * C154164 * C11465 +
            (C15652 + C15651) * C154164 * C11466 +
            (C15650 + C15649) * C154164 * C11467 +
            (C15022 * C592 - C15023 * C580 - C15022 * C593 + C154408 * C616 +
             C15024 * C610 - C15025 * C589 - C15024 * C611 + C154268 * C625) *
                C154164 * C154407) *
               C578 -
           (C15103 * C154407 + C15104 * C11467 +
            (C15090 + C15089) * C154164 * C11466 +
            (C15088 + C15087) * C154164 * C11465) *
               C577 -
           ((C15024 * C2329 - C15025 * C2324 - C15024 * C2330 +
             C154268 * C2339 + C15022 * C610 - C15023 * C589 - C15022 * C611 +
             C154408 * C625) *
                C154164 * C154407 +
            (C15660 + C15659) * C154164 * C11467 +
            (C15658 + C15657) * C154164 * C11466 +
            (C15656 + C15655) * C154164 * C11465) *
               C579) *
              C154066 * C154053)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
             C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
                C24270 +
            (C19258 + C19259) * C24271 + (C19261 + C19260) * C154442) *
               C154373 +
           ((C15087 + C15088) * C24270 + C19212 * C24271 + C19224 * C154442) *
               C154021) *
              C154082 * C154066 * C130 -
          ((C19213 * C154442 + C15856 * C24271 + (C15090 + C15089) * C24270) *
               C154021 +
           (C19214 * C154442 + C19215 * C24271 + (C15088 + C15087) * C24270) *
               C154373) *
              C154082 * C154066 * C131 +
          ((C15097 * C24270 + C18908 * C24271 + C19233 * C154442) * C154373 +
           (C15098 * C24270 + C19876 * C24271 + (C15381 + C15382) * C154442) *
               C154021) *
              C154082 * C154066 * C132 -
          (((C15024 * C1977 - C15025 * C1972 - C15024 * C1978 +
             C154268 * C1987 + C15022 * C373 - C15023 * C352 - C15022 * C374 +
             C154408 * C388) *
                C154442 +
            (C15872 + C15871) * C24271 + C15099 * C24270) *
               C154021 +
           ((C15382 + C15381) * C154442 + C15855 * C24271 + C15100 * C24270) *
               C154373) *
              C154082 * C154066 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
              C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
                 C24270 +
             (C19258 + C19259) * C24271 + C38629 * C154442) *
                C154373 +
            ((C15087 + C15088) * C24270 + C19212 * C24271 + C19224 * C154442) *
                C154021) *
               C154082 * C338 -
           ((C38630 * C154442 + C19214 * C24271 + C19215 * C24270) * C154021 +
            ((C21100 + C21099) * C154442 + (C19260 + C19261) * C24271 +
             (C19259 + C19258) * C24270) *
                C154373) *
               C154082 * C339 +
           ((C38629 * C24270 + (C21099 + C21100) * C24271 +
             (C15022 * C3143 - C15023 * C3139 - C15022 * C3144 +
              C154408 * C3151 + C15024 * C5664 - C15025 * C5659 -
              C15024 * C5665 + C154268 * C5668) *
                 C154442) *
                C154373 +
            (C19224 * C24270 + C38631 * C24271 + (C38644 + C38645) * C154442) *
                C154021) *
               C154082 * C340) *
              C341 +
          (((C19212 * C24270 + C19224 * C24271 + C38631 * C154442) * C154373 +
            (C18908 * C24270 + C19233 * C24271 + (C19264 + C19265) * C154442) *
                C154021) *
               C154082 * C339 -
           ((C19213 * C154442 + C15856 * C24271 + (C15090 + C15089) * C24270) *
                C154021 +
            (C19214 * C154442 + C19215 * C24271 + (C15088 + C15087) * C24270) *
                C154373) *
               C154082 * C338 -
           (((C15024 * C5660 - C15025 * C5657 - C15024 * C5661 +
              C154268 * C5666 + C15022 * C3147 - C15023 * C3141 -
              C15022 * C3148 + C154408 * C3153) *
                 C154442 +
             (C19265 + C19264) * C24271 + C19213 * C24270) *
                C154021 +
            ((C38645 + C38644) * C154442 + C38630 * C24271 + C19214 * C24270) *
                C154373) *
               C154082 * C340) *
              C154053)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
              C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
                 C24270 +
             (C19258 + C19259) * C24271 + C38629 * C154442) *
                C154373 +
            ((C15087 + C15088) * C24270 + C19212 * C24271 + C19224 * C154442) *
                C154021) *
               C577 -
           (((C20600 + C20599) * C154442 + C20558 * C24271 +
             (C15653 + C15654) * C24270) *
                C154021 +
            ((C22384 + C22383) * C154442 + (C20597 + C20598) * C24271 +
             (C15024 * C602 - C15025 * C585 - C15024 * C603 + C154268 * C621 +
              C15022 * C600 - C15023 * C584 - C15022 * C601 + C154408 * C620) *
                 C24270) *
                C154373) *
               C578 +
           (((C15022 * C602 - C15023 * C585 - C15022 * C603 + C154408 * C621 +
              C15024 * C2337 - C15025 * C2328 - C15024 * C2338 +
              C154268 * C2343) *
                 C24270 +
             (C21403 + C21404) * C24271 +
             (C15022 * C3445 - C15023 * C3441 - C15022 * C3446 +
              C154408 * C3453 + C15024 * C6272 - C15025 * C6262 -
              C15024 * C6273 + C154268 * C6280) *
                 C154442) *
                C154373 +
            ((C15655 + C15656) * C24270 + (C19580 + C19581) * C24271 +
             (C38948 + C38949) * C154442) *
                C154021) *
               C579) *
              C154066 * C341 +
          ((((C15654 + C15653) * C24270 + C20567 * C24271 +
             (C20599 + C20600) * C154442) *
                C154373 +
            ((C15652 + C15651) * C24270 + C20576 * C24271 +
             (C20601 + C20602) * C154442) *
                C154021) *
               C578 -
           ((C19213 * C154442 + C15856 * C24271 + (C15090 + C15089) * C24270) *
                C154021 +
            (C19214 * C154442 + C19215 * C24271 + (C15088 + C15087) * C24270) *
                C154373) *
               C577 -
           (((C15024 * C6264 - C15025 * C6258 - C15024 * C6265 +
              C154268 * C6276 + C15022 * C3449 - C15023 * C3443 -
              C15022 * C3450 + C154408 * C3455) *
                 C154442 +
             (C19583 + C19582) * C24271 + (C15658 + C15657) * C24270) *
                C154021 +
            ((C38949 + C38948) * C154442 + (C19581 + C19580) * C24271 +
             (C15656 + C15655) * C24270) *
                C154373) *
               C579) *
              C154066 * C154053)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C63054 * C144 - C63055 * C136 - C63054 * C145 + C63050 * C160 +
            C63056 * C600 - C63057 * C584 - C63056 * C601 + C63051 * C620 +
            C63058 * C602 - C63059 * C585 - C63058 * C603 + C63052 * C621 +
            C63060 * C2337 - C63061 * C2328 - C63060 * C2338 +
            C154422 * C2343) *
               C154164 * C154373 +
           (C63135 + C63136 + C63137 + C63138) * C154164 * C154021) *
              C154082 * C154066 * C130 -
          ((C63139 + C63140 + C63141 + C63142) * C154164 * C154021 +
           (C63138 + C63137 + C63136 + C63135) * C154164 * C154373) *
              C154082 * C154066 * C131 +
          ((C63142 + C63141 + C63140 + C63139) * C154164 * C154373 +
           (C63143 + C63144 + C63145 + C63146) * C154164 * C154021) *
              C154082 * C154066 * C132 -
          ((C63060 * C2329 - C63061 * C2324 - C63060 * C2330 + C154422 * C2339 +
            C63058 * C610 - C63059 * C589 - C63058 * C611 + C63052 * C625 +
            C63056 * C592 - C63057 * C580 - C63056 * C593 + C63051 * C616 +
            C63054 * C152 - C63055 * C140 - C63054 * C153 + C63050 * C164) *
               C154164 * C154021 +
           (C63146 + C63145 + C63144 + C63143) * C154164 * C154373) *
              C154082 * C154066 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C63054 * C144 - C63055 * C136 - C63054 * C145 + C63050 * C160 +
             C63056 * C600 - C63057 * C584 - C63056 * C601 + C63051 * C620 +
             C63058 * C602 - C63059 * C585 - C63058 * C603 + C63052 * C621 +
             C63060 * C2337 - C63061 * C2328 - C63060 * C2338 +
             C154422 * C2343) *
                C154164 * C154373 +
            (C63135 + C63136 + C63137 + C63138) * C154164 * C154021) *
               C154082 * C338 -
           ((C63389 + C63390 + C63391 + C63392) * C154164 * C154021 +
            (C63060 * C6274 - C63061 * C6263 - C63060 * C6275 +
             C154422 * C6281 + C63058 * C1554 - C63059 * C1545 -
             C63058 * C1555 + C63052 * C1560 + C63056 * C1135 - C63057 * C1129 -
             C63056 * C1136 + C63051 * C1147 + C63054 * C363 - C63055 * C347 -
             C63054 * C364 + C63050 * C383) *
                C154164 * C154373) *
               C154082 * C339 +
           ((C63054 * C365 - C63055 * C348 - C63054 * C366 + C63050 * C384 +
             C63056 * C1985 - C63057 * C1976 - C63056 * C1986 + C63051 * C1991 +
             C63058 * C3445 - C63059 * C3441 - C63058 * C3446 + C63052 * C3453 +
             C63060 * C6272 - C63061 * C6262 - C63060 * C6273 +
             C154422 * C6280) *
                C154164 * C154373 +
            (C63393 + C63394 + C63395 + C63396) * C154164 * C154021) *
               C154082 * C340) *
              C341 +
          (((C63392 + C63391 + C63390 + C63389) * C154164 * C154373 +
            (C63054 * C359 - C63055 * C345 - C63054 * C360 + C63050 * C381 +
             C63056 * C1139 - C63057 * C1131 - C63056 * C1140 + C63051 * C1149 +
             C63058 * C1550 - C63059 * C1543 - C63058 * C1551 + C63052 * C1558 +
             C63060 * C6266 - C63061 * C6259 - C63060 * C6267 +
             C154422 * C6277) *
                C154164 * C154021) *
               C154082 * C339 -
           ((C63139 + C63140 + C63141 + C63142) * C154164 * C154021 +
            (C63138 + C63137 + C63136 + C63135) * C154164 * C154373) *
               C154082 * C338 -
           ((C63060 * C6264 - C63061 * C6258 - C63060 * C6265 +
             C154422 * C6276 + C63058 * C3449 - C63059 * C3443 -
             C63058 * C3450 + C63052 * C3455 + C63056 * C1981 - C63057 * C1974 -
             C63056 * C1982 + C63051 * C1989 + C63054 * C369 - C63055 * C350 -
             C63054 * C370 + C63050 * C386) *
                C154164 * C154021 +
            (C63396 + C63395 + C63394 + C63393) * C154164 * C154373) *
               C154082 * C340) *
              C154053)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C63054 * C144 - C63055 * C136 - C63054 * C145 + C63050 * C160 +
             C63056 * C600 - C63057 * C584 - C63056 * C601 + C63051 * C620 +
             C63058 * C602 - C63059 * C585 - C63058 * C603 + C63052 * C621 +
             C63060 * C2337 - C63061 * C2328 - C63060 * C2338 +
             C154422 * C2343) *
                C154164 * C154373 +
            (C63135 + C63136 + C63137 + C63138) * C154164 * C154021) *
               C577 -
           ((C63639 + C63640 + C63641 + C63642) * C154164 * C154021 +
            (C63060 * C7777 - C63061 * C7773 - C63060 * C7778 +
             C154422 * C7785 + C63058 * C2337 - C63059 * C2328 -
             C63058 * C2338 + C63052 * C2343 + C63056 * C602 - C63057 * C585 -
             C63056 * C603 + C63051 * C621 + C63054 * C600 - C63055 * C584 -
             C63054 * C601 + C63050 * C620) *
                C154164 * C154373) *
               C578 +
           ((C63054 * C602 - C63055 * C585 - C63054 * C603 + C63050 * C621 +
             C63056 * C2337 - C63057 * C2328 - C63056 * C2338 + C63051 * C2343 +
             C63058 * C7777 - C63059 * C7773 - C63058 * C7778 + C63052 * C7785 +
             C63060 * C10602 - C63061 * C10597 - C63060 * C10603 +
             C154422 * C10606) *
                C154164 * C154373 +
            (C63643 + C63644 + C63645 + C63646) * C154164 * C154021) *
               C579) *
              C154066 * C341 +
          (((C63642 + C63641 + C63640 + C63639) * C154164 * C154373 +
            (C63054 * C596 - C63055 * C582 - C63054 * C597 + C63050 * C618 +
             C63056 * C606 - C63057 * C587 - C63056 * C607 + C63051 * C623 +
             C63058 * C2333 - C63059 * C2326 - C63058 * C2334 + C63052 * C2341 +
             C63060 * C7781 - C63061 * C7775 - C63060 * C7782 +
             C154422 * C7787) *
                C154164 * C154021) *
               C578 -
           ((C63139 + C63140 + C63141 + C63142) * C154164 * C154021 +
            (C63138 + C63137 + C63136 + C63135) * C154164 * C154373) *
               C577 -
           ((C63060 * C10598 - C63061 * C10595 - C63060 * C10599 +
             C154422 * C10604 + C63058 * C7781 - C63059 * C7775 -
             C63058 * C7782 + C63052 * C7787 + C63056 * C2333 - C63057 * C2326 -
             C63056 * C2334 + C63051 * C2341 + C63054 * C606 - C63055 * C587 -
             C63054 * C607 + C63050 * C623) *
                C154164 * C154021 +
            (C63646 + C63645 + C63644 + C63643) * C154164 * C154373) *
               C579) *
              C154066 * C154053)) /
            (p * q * std::sqrt(p + q));
    d2ee[198] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
              C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
                 C24270 +
             (C19258 + C19259) * C24271 + C38629 * C154442) *
                C154373 +
            ((C15087 + C15088) * C24270 + C19212 * C24271 + C19224 * C154442) *
                C154021) *
               C154393 -
           (((C20600 + C20599) * C154442 + C20558 * C24271 +
             (C15653 + C15654) * C24270) *
                C154021 +
            ((C22384 + C22383) * C154442 + (C20597 + C20598) * C24271 +
             (C15024 * C602 - C15025 * C585 - C15024 * C603 + C154268 * C621 +
              C15022 * C600 - C15023 * C584 - C15022 * C601 + C154408 * C620) *
                 C24270) *
                C154373) *
               C154146) *
              C154066 * C154461 +
          ((((C15654 + C15653) * C24270 + C20567 * C24271 +
             (C20599 + C20600) * C154442) *
                C154373 +
            ((C15652 + C15651) * C24270 + C20576 * C24271 +
             (C20601 + C20602) * C154442) *
                C154021) *
               C154146 -
           ((C19213 * C154442 + C15856 * C24271 + (C15090 + C15089) * C24270) *
                C154021 +
            (C19214 * C154442 + C19215 * C24271 + (C15088 + C15087) * C24270) *
                C154373) *
               C154393) *
              C154066 * C154462 +
          (((C15097 * C24270 + C18908 * C24271 + C19233 * C154442) * C154373 +
            (C15098 * C24270 + C19876 * C24271 + (C15381 + C15382) * C154442) *
                C154021) *
               C154393 -
           (((C15024 * C3451 - C15025 * C3444 - C15024 * C3452 +
              C154268 * C3456 + C15022 * C1979 - C15023 * C1973 -
              C15022 * C1980 + C154408 * C1988) *
                 C154442 +
             (C16384 + C16383) * C24271 + C16067 * C24270) *
                C154021 +
            ((C20602 + C20601) * C154442 + C20168 * C24271 + C16068 * C24270) *
                C154373) *
               C154146) *
              C154066 * C818)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
             C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
                C154164 * C11465 +
            (C15087 + C15088) * C154164 * C11466 + C15101 * C11467 +
            C15102 * C154407) *
               C154393 -
           (C16077 * C154407 + C16078 * C11467 +
            (C15653 + C15654) * C154164 * C11466 +
            (C15024 * C602 - C15025 * C585 - C15024 * C603 + C154268 * C621 +
             C15022 * C600 - C15023 * C584 - C15022 * C601 + C154408 * C620) *
                C154164 * C11465) *
               C154146) *
              C154066 * C154461 +
          (((C15654 + C15653) * C154164 * C11465 +
            (C15652 + C15651) * C154164 * C11466 +
            (C15650 + C15649) * C154164 * C11467 +
            (C16083 + C16084) * C154164 * C154407) *
               C154146 -
           (C15103 * C154407 + C15104 * C11467 +
            (C15090 + C15089) * C154164 * C11466 +
            (C15088 + C15087) * C154164 * C11465) *
               C154393) *
              C154066 * C154462 +
          ((C15101 * C11465 + C15102 * C11466 +
            (C15094 + C15093) * C154164 * C11467 +
            (C15095 + C15096) * C154164 * C154407) *
               C154393 -
           ((C15024 * C614 - C15025 * C591 - C15024 * C615 + C154268 * C627 +
             C15022 * C612 - C15023 * C590 - C15022 * C613 + C154408 * C626) *
                C154164 * C154407 +
            (C16084 + C16083) * C154164 * C11467 + C16077 * C11466 +
            C16078 * C11465) *
               C154146) *
              C154066 * C818)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C63054 * C144 - C63055 * C136 - C63054 * C145 + C63050 * C160 +
             C63056 * C600 - C63057 * C584 - C63056 * C601 + C63051 * C620 +
             C63058 * C602 - C63059 * C585 - C63058 * C603 + C63052 * C621 +
             C63060 * C2337 - C63061 * C2328 - C63060 * C2338 +
             C154422 * C2343) *
                C154164 * C154373 +
            (C63135 + C63136 + C63137 + C63138) * C154164 * C154021) *
               C154393 -
           ((C63639 + C63640 + C63641 + C63642) * C154164 * C154021 +
            (C63060 * C7777 - C63061 * C7773 - C63060 * C7778 +
             C154422 * C7785 + C63058 * C2337 - C63059 * C2328 -
             C63058 * C2338 + C63052 * C2343 + C63056 * C602 - C63057 * C585 -
             C63056 * C603 + C63051 * C621 + C63054 * C600 - C63055 * C584 -
             C63054 * C601 + C63050 * C620) *
                C154164 * C154373) *
               C154146) *
              C154066 * C154461 +
          (((C63642 + C63641 + C63640 + C63639) * C154164 * C154373 +
            (C64087 + C64088 + C64089 + C64090) * C154164 * C154021) *
               C154146 -
           ((C63139 + C63140 + C63141 + C63142) * C154164 * C154021 +
            (C63138 + C63137 + C63136 + C63135) * C154164 * C154373) *
               C154393) *
              C154066 * C154462 +
          (((C63142 + C63141 + C63140 + C63139) * C154164 * C154373 +
            (C63143 + C63144 + C63145 + C63146) * C154164 * C154021) *
               C154393 -
           ((C63060 * C7783 - C63061 * C7776 - C63060 * C7784 +
             C154422 * C7788 + C63058 * C2331 - C63059 * C2325 -
             C63058 * C2332 + C63052 * C2340 + C63056 * C608 - C63057 * C588 -
             C63056 * C609 + C63051 * C624 + C63054 * C594 - C63055 * C581 -
             C63054 * C595 + C63050 * C617) *
                C154164 * C154021 +
            (C64090 + C64089 + C64088 + C64087) * C154164 * C154373) *
               C154146) *
              C154066 * C818)) /
            (p * q * std::sqrt(p + q));
    d2ee[199] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
             C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
                C154164 * C11465 +
            (C15087 + C15088) * C154164 * C11466 + C15101 * C11467 +
            C15102 * C154407) *
               C154082 * C338 -
           ((C15371 + C15372) * C154164 * C154407 +
            (C15373 + C15374) * C154164 * C11467 +
            (C15375 + C15376) * C154164 * C11466 +
            (C15024 * C1135 - C15025 * C1129 - C15024 * C1136 +
             C154268 * C1147 + C15022 * C363 - C15023 * C347 - C15022 * C364 +
             C154408 * C383) *
                C154164 * C11465) *
               C154082 * C339 +
           ((C15022 * C365 - C15023 * C348 - C15022 * C366 + C154408 * C384 +
             C15024 * C1985 - C15025 * C1976 - C15024 * C1986 +
             C154268 * C1991) *
                C154164 * C11465 +
            (C15377 + C15378) * C154164 * C11466 +
            (C15379 + C15380) * C154164 * C11467 +
            (C15381 + C15382) * C154164 * C154407) *
               C154082 * C340) *
              C341 +
          (((C15376 + C15375) * C154164 * C11465 +
            (C15374 + C15373) * C154164 * C11466 +
            (C15372 + C15371) * C154164 * C11467 +
            (C15022 * C355 - C15023 * C343 - C15022 * C356 + C154408 * C379 +
             C15024 * C1143 - C15025 * C1133 - C15024 * C1144 +
             C154268 * C1151) *
                C154164 * C154407) *
               C154082 * C339 -
           (C15103 * C154407 + C15104 * C11467 +
            (C15090 + C15089) * C154164 * C11466 +
            (C15088 + C15087) * C154164 * C11465) *
               C154082 * C338 -
           ((C15024 * C1977 - C15025 * C1972 - C15024 * C1978 +
             C154268 * C1987 + C15022 * C373 - C15023 * C352 - C15022 * C374 +
             C154408 * C388) *
                C154164 * C154407 +
            (C15382 + C15381) * C154164 * C11467 +
            (C15380 + C15379) * C154164 * C11466 +
            (C15378 + C15377) * C154164 * C11465) *
               C154082 * C340) *
              C154053)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
            C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
               C154164 * C11465 +
           (C15087 + C15088) * C154164 * C11466 + C15101 * C11467 +
           C15102 * C154407) *
              C154082 * C154066 * C130 -
          (C15103 * C154407 + C15104 * C11467 +
           (C15090 + C15089) * C154164 * C11466 +
           (C15088 + C15087) * C154164 * C11465) *
              C154082 * C154066 * C131 +
          (C15101 * C11465 + C15102 * C11466 +
           (C15094 + C15093) * C154164 * C11467 +
           (C15095 + C15096) * C154164 * C154407) *
              C154082 * C154066 * C132 -
          ((C15024 * C956 - C15025 * C955 - C15024 * C957 + C154268 * C958 +
            C15022 * C156 - C15023 * C142 - C15022 * C157 + C154408 * C166) *
               C154164 * C154407 +
           (C15096 + C15095) * C154164 * C11467 + C15103 * C11466 +
           C15104 * C11465) *
              C154082 * C154066 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
             C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
                C24270 +
            (C19258 + C19259) * C24271 + (C19261 + C19260) * C154442) *
               C154373 +
           ((C15087 + C15088) * C24270 + C19212 * C24271 + C19224 * C154442) *
               C154021) *
              C154082 * C154066 * C130 -
          ((C19213 * C154442 + C15856 * C24271 + (C15090 + C15089) * C24270) *
               C154021 +
           (C19214 * C154442 + C19215 * C24271 + (C15088 + C15087) * C24270) *
               C154373) *
              C154082 * C154066 * C131 +
          ((C15097 * C24270 + C18908 * C24271 + C19233 * C154442) * C154373 +
           (C15098 * C24270 + C19876 * C24271 + (C15381 + C15382) * C154442) *
               C154021) *
              C154082 * C154066 * C132 -
          (((C15024 * C1977 - C15025 * C1972 - C15024 * C1978 +
             C154268 * C1987 + C15022 * C373 - C15023 * C352 - C15022 * C374 +
             C154408 * C388) *
                C154442 +
            (C15872 + C15871) * C24271 + C15099 * C24270) *
               C154021 +
           ((C15382 + C15381) * C154442 + C15855 * C24271 + C15100 * C24270) *
               C154373) *
              C154082 * C154066 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
              C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
                 C24270 +
             (C19258 + C19259) * C24271 + C38629 * C154442) *
                C154373 +
            ((C15087 + C15088) * C24270 + C19212 * C24271 + C19224 * C154442) *
                C154021) *
               C154082 * C338 -
           ((C38630 * C154442 + C19214 * C24271 + C19215 * C24270) * C154021 +
            ((C21100 + C21099) * C154442 + (C19260 + C19261) * C24271 +
             (C19259 + C19258) * C24270) *
                C154373) *
               C154082 * C339 +
           ((C38629 * C24270 + (C21099 + C21100) * C24271 +
             (C15022 * C3143 - C15023 * C3139 - C15022 * C3144 +
              C154408 * C3151 + C15024 * C5664 - C15025 * C5659 -
              C15024 * C5665 + C154268 * C5668) *
                 C154442) *
                C154373 +
            (C19224 * C24270 + C38631 * C24271 + (C38644 + C38645) * C154442) *
                C154021) *
               C154082 * C340) *
              C341 +
          (((C19212 * C24270 + C19224 * C24271 + C38631 * C154442) * C154373 +
            (C18908 * C24270 + C19233 * C24271 + (C19264 + C19265) * C154442) *
                C154021) *
               C154082 * C339 -
           ((C19213 * C154442 + C15856 * C24271 + (C15090 + C15089) * C24270) *
                C154021 +
            (C19214 * C154442 + C19215 * C24271 + (C15088 + C15087) * C24270) *
                C154373) *
               C154082 * C338 -
           (((C15024 * C5660 - C15025 * C5657 - C15024 * C5661 +
              C154268 * C5666 + C15022 * C3147 - C15023 * C3141 -
              C15022 * C3148 + C154408 * C3153) *
                 C154442 +
             (C19265 + C19264) * C24271 + C19213 * C24270) *
                C154021 +
            ((C38645 + C38644) * C154442 + C38630 * C24271 + C19214 * C24270) *
                C154373) *
               C154082 * C340) *
              C154053)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C63054 * C144 - C63055 * C136 - C63054 * C145 + C63050 * C160 +
            C63056 * C600 - C63057 * C584 - C63056 * C601 + C63051 * C620 +
            C63058 * C602 - C63059 * C585 - C63058 * C603 + C63052 * C621 +
            C63060 * C2337 - C63061 * C2328 - C63060 * C2338 +
            C154422 * C2343) *
               C154164 * C154373 +
           (C63135 + C63136 + C63137 + C63138) * C154164 * C154021) *
              C154082 * C154066 * C130 -
          ((C63139 + C63140 + C63141 + C63142) * C154164 * C154021 +
           (C63138 + C63137 + C63136 + C63135) * C154164 * C154373) *
              C154082 * C154066 * C131 +
          ((C63142 + C63141 + C63140 + C63139) * C154164 * C154373 +
           (C63143 + C63144 + C63145 + C63146) * C154164 * C154021) *
              C154082 * C154066 * C132 -
          ((C63060 * C2329 - C63061 * C2324 - C63060 * C2330 + C154422 * C2339 +
            C63058 * C610 - C63059 * C589 - C63058 * C611 + C63052 * C625 +
            C63056 * C592 - C63057 * C580 - C63056 * C593 + C63051 * C616 +
            C63054 * C152 - C63055 * C140 - C63054 * C153 + C63050 * C164) *
               C154164 * C154021 +
           (C63146 + C63145 + C63144 + C63143) * C154164 * C154373) *
              C154082 * C154066 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C63054 * C144 - C63055 * C136 - C63054 * C145 + C63050 * C160 +
             C63056 * C600 - C63057 * C584 - C63056 * C601 + C63051 * C620 +
             C63058 * C602 - C63059 * C585 - C63058 * C603 + C63052 * C621 +
             C63060 * C2337 - C63061 * C2328 - C63060 * C2338 +
             C154422 * C2343) *
                C154164 * C154373 +
            (C63135 + C63136 + C63137 + C63138) * C154164 * C154021) *
               C154082 * C338 -
           ((C63389 + C63390 + C63391 + C63392) * C154164 * C154021 +
            (C63060 * C6274 - C63061 * C6263 - C63060 * C6275 +
             C154422 * C6281 + C63058 * C1554 - C63059 * C1545 -
             C63058 * C1555 + C63052 * C1560 + C63056 * C1135 - C63057 * C1129 -
             C63056 * C1136 + C63051 * C1147 + C63054 * C363 - C63055 * C347 -
             C63054 * C364 + C63050 * C383) *
                C154164 * C154373) *
               C154082 * C339 +
           ((C63054 * C365 - C63055 * C348 - C63054 * C366 + C63050 * C384 +
             C63056 * C1985 - C63057 * C1976 - C63056 * C1986 + C63051 * C1991 +
             C63058 * C3445 - C63059 * C3441 - C63058 * C3446 + C63052 * C3453 +
             C63060 * C6272 - C63061 * C6262 - C63060 * C6273 +
             C154422 * C6280) *
                C154164 * C154373 +
            (C63393 + C63394 + C63395 + C63396) * C154164 * C154021) *
               C154082 * C340) *
              C341 +
          (((C63392 + C63391 + C63390 + C63389) * C154164 * C154373 +
            (C63054 * C359 - C63055 * C345 - C63054 * C360 + C63050 * C381 +
             C63056 * C1139 - C63057 * C1131 - C63056 * C1140 + C63051 * C1149 +
             C63058 * C1550 - C63059 * C1543 - C63058 * C1551 + C63052 * C1558 +
             C63060 * C6266 - C63061 * C6259 - C63060 * C6267 +
             C154422 * C6277) *
                C154164 * C154021) *
               C154082 * C339 -
           ((C63139 + C63140 + C63141 + C63142) * C154164 * C154021 +
            (C63138 + C63137 + C63136 + C63135) * C154164 * C154373) *
               C154082 * C338 -
           ((C63060 * C6264 - C63061 * C6258 - C63060 * C6265 +
             C154422 * C6276 + C63058 * C3449 - C63059 * C3443 -
             C63058 * C3450 + C63052 * C3455 + C63056 * C1981 - C63057 * C1974 -
             C63056 * C1982 + C63051 * C1989 + C63054 * C369 - C63055 * C350 -
             C63054 * C370 + C63050 * C386) *
                C154164 * C154021 +
            (C63396 + C63395 + C63394 + C63393) * C154164 * C154373) *
               C154082 * C340) *
              C154053)) /
            (p * q * std::sqrt(p + q));
    d2ee[200] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
              C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
                 C24270 +
             (C19258 + C19259) * C24271 + C38629 * C154442) *
                C154373 +
            ((C15087 + C15088) * C24270 + C19212 * C24271 + C19224 * C154442) *
                C154021) *
               C154082 * C154463 -
           ((C38630 * C154442 + C19214 * C24271 + C19215 * C24270) * C154021 +
            (C40416 * C154442 + (C19260 + C19261) * C24271 +
             (C19259 + C19258) * C24270) *
                C154373) *
               C154082 * C154464 +
           ((C38629 * C24270 + (C21099 + C21100) * C24271 +
             (C40429 + C40430) * C154442) *
                C154373 +
            (C19224 * C24270 + C38631 * C24271 + (C38644 + C38645) * C154442) *
                C154021) *
               C154082 * C1685) *
              C154384 +
          (((C19212 * C24270 + C19224 * C24271 + C38631 * C154442) * C154373 +
            (C18908 * C24270 + C19233 * C24271 + (C19264 + C19265) * C154442) *
                C154021) *
               C154082 * C154464 -
           ((C19213 * C154442 + C15856 * C24271 + (C15090 + C15089) * C24270) *
                C154021 +
            (C19214 * C154442 + C19215 * C24271 + (C15088 + C15087) * C24270) *
                C154373) *
               C154082 * C154463 -
           (((C15024 * C5660 - C15025 * C5657 - C15024 * C5661 +
              C154268 * C5666 + C15022 * C3147 - C15023 * C3141 -
              C15022 * C3148 + C154408 * C3153) *
                 C154442 +
             (C19265 + C19264) * C24271 + C19213 * C24270) *
                C154021 +
            ((C38645 + C38644) * C154442 + C38630 * C24271 + C19214 * C24270) *
                C154373) *
               C154082 * C1685) *
              C154053)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
             C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
                C154164 * C11465 +
            (C15087 + C15088) * C154164 * C11466 + C15101 * C11467 +
            C15102 * C154407) *
               C154082 * C154463 -
           (C15865 * C154407 + C15866 * C11467 +
            (C15375 + C15376) * C154164 * C11466 +
            (C15024 * C1135 - C15025 * C1129 - C15024 * C1136 +
             C154268 * C1147 + C15022 * C363 - C15023 * C347 - C15022 * C364 +
             C154408 * C383) *
                C154164 * C11465) *
               C154082 * C154464 +
           ((C15022 * C365 - C15023 * C348 - C15022 * C366 + C154408 * C384 +
             C15024 * C1985 - C15025 * C1976 - C15024 * C1986 +
             C154268 * C1991) *
                C154164 * C11465 +
            (C15377 + C15378) * C154164 * C11466 +
            (C15379 + C15380) * C154164 * C11467 +
            (C15381 + C15382) * C154164 * C154407) *
               C154082 * C1685) *
              C154384 +
          (((C15376 + C15375) * C154164 * C11465 +
            (C15374 + C15373) * C154164 * C11466 +
            (C15372 + C15371) * C154164 * C11467 +
            (C15871 + C15872) * C154164 * C154407) *
               C154082 * C154464 -
           (C15103 * C154407 + C15104 * C11467 +
            (C15090 + C15089) * C154164 * C11466 +
            (C15088 + C15087) * C154164 * C11465) *
               C154082 * C154463 -
           ((C15024 * C1977 - C15025 * C1972 - C15024 * C1978 +
             C154268 * C1987 + C15022 * C373 - C15023 * C352 - C15022 * C374 +
             C154408 * C388) *
                C154164 * C154407 +
            (C15382 + C15381) * C154164 * C11467 +
            (C15380 + C15379) * C154164 * C11466 +
            (C15378 + C15377) * C154164 * C11465) *
               C154082 * C1685) *
              C154053)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C63054 * C144 - C63055 * C136 - C63054 * C145 + C63050 * C160 +
             C63056 * C600 - C63057 * C584 - C63056 * C601 + C63051 * C620 +
             C63058 * C602 - C63059 * C585 - C63058 * C603 + C63052 * C621 +
             C63060 * C2337 - C63061 * C2328 - C63060 * C2338 +
             C154422 * C2343) *
                C154164 * C154373 +
            (C63135 + C63136 + C63137 + C63138) * C154164 * C154021) *
               C154082 * C154463 -
           ((C63389 + C63390 + C63391 + C63392) * C154164 * C154021 +
            (C63060 * C6274 - C63061 * C6263 - C63060 * C6275 +
             C154422 * C6281 + C63058 * C1554 - C63059 * C1545 -
             C63058 * C1555 + C63052 * C1560 + C63056 * C1135 - C63057 * C1129 -
             C63056 * C1136 + C63051 * C1147 + C63054 * C363 - C63055 * C347 -
             C63054 * C364 + C63050 * C383) *
                C154164 * C154373) *
               C154082 * C154464 +
           ((C63054 * C365 - C63055 * C348 - C63054 * C366 + C63050 * C384 +
             C63056 * C1985 - C63057 * C1976 - C63056 * C1986 + C63051 * C1991 +
             C63058 * C3445 - C63059 * C3441 - C63058 * C3446 + C63052 * C3453 +
             C63060 * C6272 - C63061 * C6262 - C63060 * C6273 +
             C154422 * C6280) *
                C154164 * C154373 +
            (C63393 + C63394 + C63395 + C63396) * C154164 * C154021) *
               C154082 * C1685) *
              C154384 +
          (((C63392 + C63391 + C63390 + C63389) * C154164 * C154373 +
            (C63865 + C63866 + C63867 + C63868) * C154164 * C154021) *
               C154082 * C154464 -
           ((C63139 + C63140 + C63141 + C63142) * C154164 * C154021 +
            (C63138 + C63137 + C63136 + C63135) * C154164 * C154373) *
               C154082 * C154463 -
           ((C63060 * C6264 - C63061 * C6258 - C63060 * C6265 +
             C154422 * C6276 + C63058 * C3449 - C63059 * C3443 -
             C63058 * C3450 + C63052 * C3455 + C63056 * C1981 - C63057 * C1974 -
             C63056 * C1982 + C63051 * C1989 + C63054 * C369 - C63055 * C350 -
             C63054 * C370 + C63050 * C386) *
                C154164 * C154021 +
            (C63396 + C63395 + C63394 + C63393) * C154164 * C154373) *
               C154082 * C1685) *
              C154053)) /
            (p * q * std::sqrt(p + q));
    d2ee[201] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
              C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
                 C24270 +
             (C19258 + C19259) * C24271 + C38629 * C154442) *
                C154373 +
            ((C15087 + C15088) * C24270 + C19212 * C24271 + C19224 * C154442) *
                C154021) *
               C154393 -
           ((C39916 * C154442 + C20558 * C24271 + (C15653 + C15654) * C24270) *
                C154021 +
            (C41701 * C154442 + (C20597 + C20598) * C24271 +
             (C15024 * C602 - C15025 * C585 - C15024 * C603 + C154268 * C621 +
              C15022 * C600 - C15023 * C584 - C15022 * C601 + C154408 * C620) *
                 C24270) *
                C154373) *
               C154146) *
              C154463 +
          ((((C20598 + C20597) * C24270 + (C22383 + C22384) * C24271 +
             (C41714 + C41715) * C154442) *
                C154373 +
            (C20567 * C24270 + C39917 * C24271 + (C39930 + C39931) * C154442) *
                C154021) *
               C154146 -
           ((C38630 * C154442 + C19214 * C24271 + C19215 * C24270) * C154021 +
            (C40416 * C154442 + (C19260 + C19261) * C24271 +
             (C19259 + C19258) * C24270) *
                C154373) *
               C154393) *
              C154464 +
          (((C38629 * C24270 + (C21099 + C21100) * C24271 +
             (C40429 + C40430) * C154442) *
                C154373 +
            (C19224 * C24270 + C38631 * C24271 + (C38644 + C38645) * C154442) *
                C154021) *
               C154393 -
           (((C15024 * C28468 - C15025 * C28465 - C15024 * C28469 +
              C154268 * C28471 + C15022 * C5662 - C15023 * C5658 -
              C15022 * C5663 + C154408 * C5667) *
                 C154442 +
             (C39931 + C39930) * C24271 + C39916 * C24270) *
                C154021 +
            ((C15024 * C28466 - C15025 * C28464 - C15024 * C28467 +
              C154268 * C28470 + C15022 * C5664 - C15023 * C5659 -
              C15022 * C5665 + C154408 * C5668) *
                 C154442 +
             (C41715 + C41714) * C24271 + C41701 * C24270) *
                C154373) *
               C154146) *
              C1685) *
         C154047) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
             C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
                C154164 * C11465 +
            (C15087 + C15088) * C154164 * C11466 + C15101 * C11467 +
            C15102 * C154407) *
               C154393 -
           (C16077 * C154407 + C16078 * C11467 +
            (C15653 + C15654) * C154164 * C11466 +
            (C15024 * C602 - C15025 * C585 - C15024 * C603 + C154268 * C621 +
             C15022 * C600 - C15023 * C584 - C15022 * C601 + C154408 * C620) *
                C154164 * C11465) *
               C154146) *
              C154463 +
          (((C15022 * C1135 - C15023 * C1129 - C15022 * C1136 +
             C154408 * C1147 + C15024 * C1554 - C15025 * C1545 -
             C15024 * C1555 + C154268 * C1560) *
                C154164 * C11465 +
            (C16379 + C16380) * C154164 * C11466 +
            (C16381 + C16382) * C154164 * C11467 +
            (C16383 + C16384) * C154164 * C154407) *
               C154146 -
           (C15865 * C154407 + C15866 * C11467 +
            (C15375 + C15376) * C154164 * C11466 +
            (C15024 * C1135 - C15025 * C1129 - C15024 * C1136 +
             C154268 * C1147 + C15022 * C363 - C15023 * C347 - C15022 * C364 +
             C154408 * C383) *
                C154164 * C11465) *
               C154393) *
              C154464 +
          (((C15022 * C365 - C15023 * C348 - C15022 * C366 + C154408 * C384 +
             C15024 * C1985 - C15025 * C1976 - C15024 * C1986 +
             C154268 * C1991) *
                C154164 * C11465 +
            (C15377 + C15378) * C154164 * C11466 +
            (C15379 + C15380) * C154164 * C11467 +
            (C15381 + C15382) * C154164 * C154407) *
               C154393 -
           ((C15024 * C3451 - C15025 * C3444 - C15024 * C3452 +
             C154268 * C3456 + C15022 * C1979 - C15023 * C1973 -
             C15022 * C1980 + C154408 * C1988) *
                C154164 * C154407 +
            (C15024 * C3449 - C15025 * C3443 - C15024 * C3450 +
             C154268 * C3455 + C15022 * C1981 - C15023 * C1974 -
             C15022 * C1982 + C154408 * C1989) *
                C154164 * C11467 +
            (C15024 * C3447 - C15025 * C3442 - C15024 * C3448 +
             C154268 * C3454 + C15022 * C1983 - C15023 * C1975 -
             C15022 * C1984 + C154408 * C1990) *
                C154164 * C11466 +
            (C15024 * C3445 - C15025 * C3441 - C15024 * C3446 +
             C154268 * C3453 + C15022 * C1985 - C15023 * C1976 -
             C15022 * C1986 + C154408 * C1991) *
                C154164 * C11465) *
               C154146) *
              C1685) *
         C154047) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C63054 * C144 - C63055 * C136 - C63054 * C145 + C63050 * C160 +
             C63056 * C600 - C63057 * C584 - C63056 * C601 + C63051 * C620 +
             C63058 * C602 - C63059 * C585 - C63058 * C603 + C63052 * C621 +
             C63060 * C2337 - C63061 * C2328 - C63060 * C2338 +
             C154422 * C2343) *
                C154164 * C154373 +
            (C63135 + C63136 + C63137 + C63138) * C154164 * C154021) *
               C154393 -
           ((C63639 + C63640 + C63641 + C63642) * C154164 * C154021 +
            (C63060 * C7777 - C63061 * C7773 - C63060 * C7778 +
             C154422 * C7785 + C63058 * C2337 - C63059 * C2328 -
             C63058 * C2338 + C63052 * C2343 + C63056 * C602 - C63057 * C585 -
             C63056 * C603 + C63051 * C621 + C63054 * C600 - C63055 * C584 -
             C63054 * C601 + C63050 * C620) *
                C154164 * C154373) *
               C154146) *
              C154463 +
          (((C63054 * C1135 - C63055 * C1129 - C63054 * C1136 + C63050 * C1147 +
             C63056 * C1554 - C63057 * C1545 - C63056 * C1555 + C63051 * C1560 +
             C63058 * C6274 - C63059 * C6263 - C63058 * C6275 + C63052 * C6281 +
             C63060 * C9282 - C63061 * C9277 - C63060 * C9283 +
             C154422 * C9286) *
                C154164 * C154373 +
            (C64373 + C64374 + C64375 + C64376) * C154164 * C154021) *
               C154146 -
           ((C63389 + C63390 + C63391 + C63392) * C154164 * C154021 +
            (C63060 * C6274 - C63061 * C6263 - C63060 * C6275 +
             C154422 * C6281 + C63058 * C1554 - C63059 * C1545 -
             C63058 * C1555 + C63052 * C1560 + C63056 * C1135 - C63057 * C1129 -
             C63056 * C1136 + C63051 * C1147 + C63054 * C363 - C63055 * C347 -
             C63054 * C364 + C63050 * C383) *
                C154164 * C154373) *
               C154393) *
              C154464 +
          (((C63054 * C365 - C63055 * C348 - C63054 * C366 + C63050 * C384 +
             C63056 * C1985 - C63057 * C1976 - C63056 * C1986 + C63051 * C1991 +
             C63058 * C3445 - C63059 * C3441 - C63058 * C3446 + C63052 * C3453 +
             C63060 * C6272 - C63061 * C6262 - C63060 * C6273 +
             C154422 * C6280) *
                C154164 * C154373 +
            (C63393 + C63394 + C63395 + C63396) * C154164 * C154021) *
               C154393 -
           ((C63060 * C31086 - C63061 * C31083 - C63060 * C31087 +
             C154422 * C31089 + C63058 * C6268 - C63059 * C6260 -
             C63058 * C6269 + C63052 * C6278 + C63056 * C3447 - C63057 * C3442 -
             C63056 * C3448 + C63051 * C3454 + C63054 * C1983 - C63055 * C1975 -
             C63054 * C1984 + C63050 * C1990) *
                C154164 * C154021 +
            (C63060 * C31084 - C63061 * C31082 - C63060 * C31085 +
             C154422 * C31088 + C63058 * C6272 - C63059 * C6262 -
             C63058 * C6273 + C63052 * C6280 + C63056 * C3445 - C63057 * C3441 -
             C63056 * C3446 + C63051 * C3453 + C63054 * C1985 - C63055 * C1976 -
             C63054 * C1986 + C63050 * C1991) *
                C154164 * C154373) *
               C154146) *
              C1685) *
         C154047) /
            (p * q * std::sqrt(p + q));
    d2ee[202] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C15022 * C144 - C15023 * C136 - C15022 * C145 +
                 C154408 * C160 + C15024 * C600 - C15025 * C584 -
                 C15024 * C601 + C154268 * C620) *
                    C154164 * C11465 +
                (C15087 + C15088) * C154164 * C11466 + C15101 * C11467 +
                C15102 * C154407) *
                   C154082 * C1307 -
               (C15865 * C154407 + C15866 * C11467 +
                (C15375 + C15376) * C154164 * C11466 +
                (C15024 * C1135 - C15025 * C1129 - C15024 * C1136 +
                 C154268 * C1147 + C15022 * C363 - C15023 * C347 -
                 C15022 * C364 + C154408 * C383) *
                    C154164 * C11465) *
                   C154082 * C154118) *
                  C1309 +
              (((C15376 + C15375) * C154164 * C11465 +
                (C15374 + C15373) * C154164 * C11466 +
                (C15372 + C15371) * C154164 * C11467 +
                (C15871 + C15872) * C154164 * C154407) *
                   C154082 * C154118 -
               (C15103 * C154407 + C15104 * C11467 +
                (C15090 + C15089) * C154164 * C11466 +
                (C15088 + C15087) * C154164 * C11465) *
                   C154082 * C1307) *
                  C1310 +
              ((C15101 * C11465 + C15102 * C11466 +
                (C15094 + C15093) * C154164 * C11467 +
                (C15095 + C15096) * C154164 * C154407) *
                   C154082 * C1307 -
               ((C15024 * C1145 - C15025 * C1134 - C15024 * C1146 +
                 C154268 * C1152 + C15022 * C375 - C15023 * C353 -
                 C15022 * C376 + C154408 * C389) *
                    C154164 * C154407 +
                (C15872 + C15871) * C154164 * C11467 + C15865 * C11466 +
                C15866 * C11465) *
                   C154082 * C154118) *
                  C1311) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
                C15024 * C600 - C15025 * C584 - C15024 * C601 +
                C154268 * C620) *
                   C154164 * C11465 +
               (C15087 + C15088) * C154164 * C11466 + C15101 * C11467 +
               C15102 * C154407) *
                  C154082 * C1394 -
              (C15865 * C154407 + C15866 * C11467 +
               (C15375 + C15376) * C154164 * C11466 +
               (C15024 * C1135 - C15025 * C1129 - C15024 * C1136 +
                C154268 * C1147 + C15022 * C363 - C15023 * C347 -
                C15022 * C364 + C154408 * C383) *
                   C154164 * C11465) *
                  C154082 * C1395 +
              ((C15022 * C365 - C15023 * C348 - C15022 * C366 + C154408 * C384 +
                C15024 * C1985 - C15025 * C1976 - C15024 * C1986 +
                C154268 * C1991) *
                   C154164 * C11465 +
               (C15377 + C15378) * C154164 * C11466 +
               (C15379 + C15380) * C154164 * C11467 +
               (C15381 + C15382) * C154164 * C154407) *
                  C154082 * C1396 -
              ((C15024 * C4264 - C15025 * C4257 - C15024 * C4265 +
                C154268 * C4269 + C15022 * C1406 - C15023 * C1400 -
                C15022 * C1407 + C154408 * C1415) *
                   C154164 * C154407 +
               (C15024 * C4262 - C15025 * C4256 - C15024 * C4263 +
                C154268 * C4268 + C15022 * C1408 - C15023 * C1401 -
                C15022 * C1409 + C154408 * C1416) *
                   C154164 * C11467 +
               (C15024 * C4260 - C15025 * C4255 - C15024 * C4261 +
                C154268 * C4267 + C15022 * C1410 - C15023 * C1402 -
                C15022 * C1411 + C154408 * C1417) *
                   C154164 * C11466 +
               (C15024 * C4258 - C15025 * C4254 - C15024 * C4259 +
                C154268 * C4266 + C15022 * C1412 - C15023 * C1403 -
                C15022 * C1413 + C154408 * C1418) *
                   C154164 * C11465) *
                  C154082 * C1397) *
             C154047) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
             C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
                C154164 * C11465 +
            (C15087 + C15088) * C154164 * C11466 + C15101 * C11467 +
            C15102 * C154407) *
               C577 -
           (C16077 * C154407 + C16078 * C11467 +
            (C15653 + C15654) * C154164 * C11466 +
            (C15024 * C602 - C15025 * C585 - C15024 * C603 + C154268 * C621 +
             C15022 * C600 - C15023 * C584 - C15022 * C601 + C154408 * C620) *
                C154164 * C11465) *
               C578 +
           ((C15022 * C602 - C15023 * C585 - C15022 * C603 + C154408 * C621 +
             C15024 * C2337 - C15025 * C2328 - C15024 * C2338 +
             C154268 * C2343) *
                C154164 * C11465 +
            (C15655 + C15656) * C154164 * C11466 +
            (C15657 + C15658) * C154164 * C11467 +
            (C15659 + C15660) * C154164 * C154407) *
               C579) *
              C1307 +
          (((C15022 * C1135 - C15023 * C1129 - C15022 * C1136 +
             C154408 * C1147 + C15024 * C1554 - C15025 * C1545 -
             C15024 * C1555 + C154268 * C1560) *
                C154164 * C11465 +
            (C16379 + C16380) * C154164 * C11466 +
            (C16381 + C16382) * C154164 * C11467 +
            (C16383 + C16384) * C154164 * C154407) *
               C578 -
           (C15865 * C154407 + C15866 * C11467 +
            (C15375 + C15376) * C154164 * C11466 +
            (C15024 * C1135 - C15025 * C1129 - C15024 * C1136 +
             C154268 * C1147 + C15022 * C363 - C15023 * C347 - C15022 * C364 +
             C154408 * C383) *
                C154164 * C11465) *
               C577 -
           ((C15024 * C8648 - C15025 * C8647 - C15024 * C8649 +
             C154268 * C8650 + C15022 * C1548 - C15023 * C1542 -
             C15022 * C1549 + C154408 * C1557) *
                C154164 * C154407 +
            (C15024 * C6266 - C15025 * C6259 - C15024 * C6267 +
             C154268 * C6277 + C15022 * C1550 - C15023 * C1543 -
             C15022 * C1551 + C154408 * C1558) *
                C154164 * C11467 +
            (C15024 * C6270 - C15025 * C6261 - C15024 * C6271 +
             C154268 * C6279 + C15022 * C1552 - C15023 * C1544 -
             C15022 * C1553 + C154408 * C1559) *
                C154164 * C11466 +
            (C15024 * C6274 - C15025 * C6263 - C15024 * C6275 +
             C154268 * C6281 + C15022 * C1554 - C15023 * C1545 -
             C15022 * C1555 + C154408 * C1560) *
                C154164 * C11465) *
               C579) *
              C154118) *
         C154047) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
              C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
                 C24270 +
             (C19258 + C19259) * C24271 + C38629 * C154442) *
                C154373 +
            ((C15087 + C15088) * C24270 + C19212 * C24271 + C19224 * C154442) *
                C154021) *
               C154082 * C1307 -
           ((C38630 * C154442 + C19214 * C24271 + C19215 * C24270) * C154021 +
            ((C21100 + C21099) * C154442 + (C19260 + C19261) * C24271 +
             (C19259 + C19258) * C24270) *
                C154373) *
               C154082 * C154118) *
              C1309 +
          (((C19212 * C24270 + C19224 * C24271 + C38631 * C154442) * C154373 +
            (C18908 * C24270 + C19233 * C24271 + (C19264 + C19265) * C154442) *
                C154021) *
               C154082 * C154118 -
           ((C19213 * C154442 + C15856 * C24271 + (C15090 + C15089) * C24270) *
                C154021 +
            (C19214 * C154442 + C19215 * C24271 + (C15088 + C15087) * C24270) *
                C154373) *
               C154082 * C1307) *
              C1310 +
          (((C15097 * C24270 + C18908 * C24271 + C19233 * C154442) * C154373 +
            (C15098 * C24270 + C19876 * C24271 + (C15381 + C15382) * C154442) *
                C154021) *
               C154082 * C1307 -
           (((C15024 * C4264 - C15025 * C4257 - C15024 * C4265 +
              C154268 * C4269 + C15022 * C1406 - C15023 * C1400 -
              C15022 * C1407 + C154408 * C1415) *
                 C154442 +
             (C15382 + C15381) * C24271 + C15855 * C24270) *
                C154021 +
            ((C19265 + C19264) * C154442 + C19213 * C24271 + C15856 * C24270) *
                C154373) *
               C154082 * C154118) *
              C1311)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
             C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
                C24270 +
            (C19258 + C19259) * C24271 + C38629 * C154442) *
               C154373 +
           ((C15087 + C15088) * C24270 + C19212 * C24271 + C19224 * C154442) *
               C154021) *
              C154082 * C1394 -
          ((C38630 * C154442 + C19214 * C24271 + C19215 * C24270) * C154021 +
           (C40416 * C154442 + (C19260 + C19261) * C24271 +
            (C19259 + C19258) * C24270) *
               C154373) *
              C154082 * C1395 +
          ((C38629 * C24270 + (C21099 + C21100) * C24271 +
            (C40429 + C40430) * C154442) *
               C154373 +
           (C19224 * C24270 + C38631 * C24271 + (C38644 + C38645) * C154442) *
               C154021) *
              C154082 * C1396 -
          (((C15024 * C28882 - C15025 * C28879 - C15024 * C28883 +
             C154268 * C28885 + C15022 * C4673 - C15023 * C4669 -
             C15022 * C4674 + C154408 * C4678) *
                C154442 +
            (C38645 + C38644) * C24271 + C38630 * C24270) *
               C154021 +
           ((C15024 * C28880 - C15025 * C28878 - C15024 * C28881 +
             C154268 * C28884 + C15022 * C4675 - C15023 * C4670 -
             C15022 * C4676 + C154408 * C4679) *
                C154442 +
            (C40430 + C40429) * C24271 + C40416 * C24270) *
               C154373) *
              C154082 * C1397) *
         C154047) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
              C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
                 C24270 +
             (C19258 + C19259) * C24271 + C38629 * C154442) *
                C154373 +
            ((C15087 + C15088) * C24270 + C19212 * C24271 + C19224 * C154442) *
                C154021) *
               C577 -
           ((C39916 * C154442 + C20558 * C24271 + (C15653 + C15654) * C24270) *
                C154021 +
            ((C22384 + C22383) * C154442 + (C20597 + C20598) * C24271 +
             (C15024 * C602 - C15025 * C585 - C15024 * C603 + C154268 * C621 +
              C15022 * C600 - C15023 * C584 - C15022 * C601 + C154408 * C620) *
                 C24270) *
                C154373) *
               C578 +
           (((C15022 * C602 - C15023 * C585 - C15022 * C603 + C154408 * C621 +
              C15024 * C2337 - C15025 * C2328 - C15024 * C2338 +
              C154268 * C2343) *
                 C24270 +
             (C21403 + C21404) * C24271 + (C40733 + C40734) * C154442) *
                C154373 +
            ((C15655 + C15656) * C24270 + (C19580 + C19581) * C24271 +
             (C38948 + C38949) * C154442) *
                C154021) *
               C579) *
              C1307 +
          ((((C20598 + C20597) * C24270 + (C22383 + C22384) * C24271 +
             (C15022 * C4258 - C15023 * C4254 - C15022 * C4259 +
              C154408 * C4266 + C15024 * C4912 - C15025 * C4907 -
              C15024 * C4913 + C154268 * C4916) *
                 C154442) *
                C154373 +
            (C20567 * C24270 + C39917 * C24271 + (C39930 + C39931) * C154442) *
                C154021) *
               C578 -
           ((C38630 * C154442 + C19214 * C24271 + C19215 * C24270) * C154021 +
            (C40416 * C154442 + (C19260 + C19261) * C24271 +
             (C19259 + C19258) * C24270) *
                C154373) *
               C577 -
           (((C15024 * C31817 - C15025 * C31816 - C15024 * C31818 +
              C154268 * C31819 + C15022 * C4910 - C15023 * C4906 -
              C15022 * C4911 + C154408 * C4915) *
                 C154442 +
             (C38949 + C38948) * C24271 + (C19581 + C19580) * C24270) *
                C154021 +
            ((C15024 * C30002 - C15025 * C29999 - C15024 * C30003 +
              C154268 * C30005 + C15022 * C4912 - C15023 * C4907 -
              C15022 * C4913 + C154408 * C4916) *
                 C154442 +
             (C40734 + C40733) * C24271 + (C21404 + C21403) * C24270) *
                C154373) *
               C579) *
              C154118) *
         C154047) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C63054 * C144 - C63055 * C136 - C63054 * C145 + C63050 * C160 +
             C63056 * C600 - C63057 * C584 - C63056 * C601 + C63051 * C620 +
             C63058 * C602 - C63059 * C585 - C63058 * C603 + C63052 * C621 +
             C63060 * C2337 - C63061 * C2328 - C63060 * C2338 +
             C154422 * C2343) *
                C154164 * C154373 +
            (C63135 + C63136 + C63137 + C63138) * C154164 * C154021) *
               C154082 * C1307 -
           ((C63389 + C63390 + C63391 + C63392) * C154164 * C154021 +
            (C63060 * C6274 - C63061 * C6263 - C63060 * C6275 +
             C154422 * C6281 + C63058 * C1554 - C63059 * C1545 -
             C63058 * C1555 + C63052 * C1560 + C63056 * C1135 - C63057 * C1129 -
             C63056 * C1136 + C63051 * C1147 + C63054 * C363 - C63055 * C347 -
             C63054 * C364 + C63050 * C383) *
                C154164 * C154373) *
               C154082 * C154118) *
              C1309 +
          (((C63392 + C63391 + C63390 + C63389) * C154164 * C154373 +
            (C63865 + C63866 + C63867 + C63868) * C154164 * C154021) *
               C154082 * C154118 -
           ((C63139 + C63140 + C63141 + C63142) * C154164 * C154021 +
            (C63138 + C63137 + C63136 + C63135) * C154164 * C154373) *
               C154082 * C1307) *
              C1310 +
          (((C63142 + C63141 + C63140 + C63139) * C154164 * C154373 +
            (C63143 + C63144 + C63145 + C63146) * C154164 * C154021) *
               C154082 * C1307 -
           ((C63060 * C8648 - C63061 * C8647 - C63060 * C8649 +
             C154422 * C8650 + C63058 * C1548 - C63059 * C1542 -
             C63058 * C1549 + C63052 * C1557 + C63056 * C1141 - C63057 * C1132 -
             C63056 * C1142 + C63051 * C1150 + C63054 * C357 - C63055 * C344 -
             C63054 * C358 + C63050 * C380) *
                C154164 * C154021 +
            (C63868 + C63867 + C63866 + C63865) * C154164 * C154373) *
               C154082 * C154118) *
              C1311)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C63054 * C144 - C63055 * C136 - C63054 * C145 + C63050 * C160 +
            C63056 * C600 - C63057 * C584 - C63056 * C601 + C63051 * C620 +
            C63058 * C602 - C63059 * C585 - C63058 * C603 + C63052 * C621 +
            C63060 * C2337 - C63061 * C2328 - C63060 * C2338 +
            C154422 * C2343) *
               C154164 * C154373 +
           (C63135 + C63136 + C63137 + C63138) * C154164 * C154021) *
              C154082 * C1394 -
          ((C63389 + C63390 + C63391 + C63392) * C154164 * C154021 +
           (C63060 * C6274 - C63061 * C6263 - C63060 * C6275 + C154422 * C6281 +
            C63058 * C1554 - C63059 * C1545 - C63058 * C1555 + C63052 * C1560 +
            C63056 * C1135 - C63057 * C1129 - C63056 * C1136 + C63051 * C1147 +
            C63054 * C363 - C63055 * C347 - C63054 * C364 + C63050 * C383) *
               C154164 * C154373) *
              C154082 * C1395 +
          ((C63054 * C365 - C63055 * C348 - C63054 * C366 + C63050 * C384 +
            C63056 * C1985 - C63057 * C1976 - C63056 * C1986 + C63051 * C1991 +
            C63058 * C3445 - C63059 * C3441 - C63058 * C3446 + C63052 * C3453 +
            C63060 * C6272 - C63061 * C6262 - C63060 * C6273 +
            C154422 * C6280) *
               C154164 * C154373 +
           (C63393 + C63394 + C63395 + C63396) * C154164 * C154021) *
              C154082 * C1396 -
          ((C63060 * C31817 - C63061 * C31816 - C63060 * C31818 +
            C154422 * C31819 + C63058 * C4910 - C63059 * C4906 -
            C63058 * C4911 + C63052 * C4915 + C63056 * C4260 - C63057 * C4255 -
            C63056 * C4261 + C63051 * C4267 + C63054 * C1410 - C63055 * C1402 -
            C63054 * C1411 + C63050 * C1417) *
               C154164 * C154021 +
           (C63060 * C30002 - C63061 * C29999 - C63060 * C30003 +
            C154422 * C30005 + C63058 * C4912 - C63059 * C4907 -
            C63058 * C4913 + C63052 * C4916 + C63056 * C4258 - C63057 * C4254 -
            C63056 * C4259 + C63051 * C4266 + C63054 * C1412 - C63055 * C1403 -
            C63054 * C1413 + C63050 * C1418) *
               C154164 * C154373) *
              C154082 * C1397) *
         C154047) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C63054 * C144 - C63055 * C136 - C63054 * C145 + C63050 * C160 +
             C63056 * C600 - C63057 * C584 - C63056 * C601 + C63051 * C620 +
             C63058 * C602 - C63059 * C585 - C63058 * C603 + C63052 * C621 +
             C63060 * C2337 - C63061 * C2328 - C63060 * C2338 +
             C154422 * C2343) *
                C154164 * C154373 +
            (C63135 + C63136 + C63137 + C63138) * C154164 * C154021) *
               C577 -
           ((C63639 + C63640 + C63641 + C63642) * C154164 * C154021 +
            (C63060 * C7777 - C63061 * C7773 - C63060 * C7778 +
             C154422 * C7785 + C63058 * C2337 - C63059 * C2328 -
             C63058 * C2338 + C63052 * C2343 + C63056 * C602 - C63057 * C585 -
             C63056 * C603 + C63051 * C621 + C63054 * C600 - C63055 * C584 -
             C63054 * C601 + C63050 * C620) *
                C154164 * C154373) *
               C578 +
           ((C63054 * C602 - C63055 * C585 - C63054 * C603 + C63050 * C621 +
             C63056 * C2337 - C63057 * C2328 - C63056 * C2338 + C63051 * C2343 +
             C63058 * C7777 - C63059 * C7773 - C63058 * C7778 + C63052 * C7785 +
             C63060 * C10602 - C63061 * C10597 - C63060 * C10603 +
             C154422 * C10606) *
                C154164 * C154373 +
            (C63643 + C63644 + C63645 + C63646) * C154164 * C154021) *
               C579) *
              C1307 +
          (((C63054 * C1135 - C63055 * C1129 - C63054 * C1136 + C63050 * C1147 +
             C63056 * C1554 - C63057 * C1545 - C63056 * C1555 + C63051 * C1560 +
             C63058 * C6274 - C63059 * C6263 - C63058 * C6275 + C63052 * C6281 +
             C63060 * C9282 - C63061 * C9277 - C63060 * C9283 +
             C154422 * C9286) *
                C154164 * C154373 +
            (C64373 + C64374 + C64375 + C64376) * C154164 * C154021) *
               C578 -
           ((C63389 + C63390 + C63391 + C63392) * C154164 * C154021 +
            (C63060 * C6274 - C63061 * C6263 - C63060 * C6275 +
             C154422 * C6281 + C63058 * C1554 - C63059 * C1545 -
             C63058 * C1555 + C63052 * C1560 + C63056 * C1135 - C63057 * C1129 -
             C63056 * C1136 + C63051 * C1147 + C63054 * C363 - C63055 * C347 -
             C63054 * C364 + C63050 * C383) *
                C154164 * C154373) *
               C577 -
           ((C63060 * C56192 - C63061 * C56191 - C63060 * C56193 +
             C154422 * C56194 + C63058 * C9280 - C63059 * C9276 -
             C63058 * C9281 + C63052 * C9285 + C63056 * C6270 - C63057 * C6261 -
             C63056 * C6271 + C63051 * C6279 + C63054 * C1552 - C63055 * C1544 -
             C63054 * C1553 + C63050 * C1559) *
                C154164 * C154021 +
            (C63060 * C33869 - C63061 * C33866 - C63060 * C33870 +
             C154422 * C33872 + C63058 * C9282 - C63059 * C9277 -
             C63058 * C9283 + C63052 * C9286 + C63056 * C6274 - C63057 * C6263 -
             C63056 * C6275 + C63051 * C6281 + C63054 * C1554 - C63055 * C1545 -
             C63054 * C1555 + C63050 * C1560) *
                C154164 * C154373) *
               C579) *
              C154118) *
         C154047) /
            (p * q * std::sqrt(p + q));
    d2ee[203] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
               C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
                  C24270 +
              (C19258 + C19259) * C24271 + C38629 * C154442) *
                 C154373 +
             ((C15087 + C15088) * C24270 + C19212 * C24271 + C19224 * C154442) *
                 C154021) *
                C154393 -
            ((C39916 * C154442 + C20558 * C24271 + (C15653 + C15654) * C24270) *
                 C154021 +
             ((C22384 + C22383) * C154442 + (C20597 + C20598) * C24271 +
              (C15024 * C602 - C15025 * C585 - C15024 * C603 + C154268 * C621 +
               C15022 * C600 - C15023 * C584 - C15022 * C601 + C154408 * C620) *
                  C24270) *
                 C154373) *
                C154146) *
               C1307 +
           ((((C20598 + C20597) * C24270 + (C22383 + C22384) * C24271 +
              (C15022 * C4258 - C15023 * C4254 - C15022 * C4259 +
               C154408 * C4266 + C15024 * C4912 - C15025 * C4907 -
               C15024 * C4913 + C154268 * C4916) *
                  C154442) *
                 C154373 +
             (C20567 * C24270 + C39917 * C24271 + (C39930 + C39931) * C154442) *
                 C154021) *
                C154146 -
            ((C38630 * C154442 + C19214 * C24271 + C19215 * C24270) * C154021 +
             (C40416 * C154442 + (C19260 + C19261) * C24271 +
              (C19259 + C19258) * C24270) *
                 C154373) *
                C154393) *
               C154118) *
              C154384 +
          (((((C15654 + C15653) * C24270 + C20567 * C24271 + C39917 * C154442) *
                 C154373 +
             ((C15652 + C15651) * C24270 + C20576 * C24271 +
              (C20601 + C20602) * C154442) *
                 C154021) *
                C154146 -
            ((C19213 * C154442 + C15856 * C24271 + (C15090 + C15089) * C24270) *
                 C154021 +
             (C19214 * C154442 + C19215 * C24271 + (C15088 + C15087) * C24270) *
                 C154373) *
                C154393) *
               C1307 +
           (((C19212 * C24270 + C19224 * C24271 + C38631 * C154442) * C154373 +
             (C18908 * C24270 + C19233 * C24271 + (C19264 + C19265) * C154442) *
                 C154021) *
                C154393 -
            (((C15024 * C4908 - C15025 * C4905 - C15024 * C4909 +
               C154268 * C4914 + C15022 * C4262 - C15023 * C4256 -
               C15022 * C4263 + C154408 * C4268) *
                  C154442 +
              (C20602 + C20601) * C24271 + C20168 * C24270) *
                 C154021 +
             ((C39931 + C39930) * C154442 + C39916 * C24271 + C20558 * C24270) *
                 C154373) *
                C154146) *
               C154118) *
              C154053)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
              C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
                 C154164 * C11465 +
             (C15087 + C15088) * C154164 * C11466 + C15101 * C11467 +
             C15102 * C154407) *
                C154393 -
            (C16077 * C154407 + C16078 * C11467 +
             (C15653 + C15654) * C154164 * C11466 +
             (C15024 * C602 - C15025 * C585 - C15024 * C603 + C154268 * C621 +
              C15022 * C600 - C15023 * C584 - C15022 * C601 + C154408 * C620) *
                 C154164 * C11465) *
                C154146) *
               C1307 +
           (((C15022 * C1135 - C15023 * C1129 - C15022 * C1136 +
              C154408 * C1147 + C15024 * C1554 - C15025 * C1545 -
              C15024 * C1555 + C154268 * C1560) *
                 C154164 * C11465 +
             (C16379 + C16380) * C154164 * C11466 +
             (C16381 + C16382) * C154164 * C11467 +
             (C16383 + C16384) * C154164 * C154407) *
                C154146 -
            (C15865 * C154407 + C15866 * C11467 +
             (C15375 + C15376) * C154164 * C11466 +
             (C15024 * C1135 - C15025 * C1129 - C15024 * C1136 +
              C154268 * C1147 + C15022 * C363 - C15023 * C347 - C15022 * C364 +
              C154408 * C383) *
                 C154164 * C11465) *
                C154393) *
               C154118) *
              C154384 +
          ((((C15654 + C15653) * C154164 * C11465 +
             (C15652 + C15651) * C154164 * C11466 +
             (C15650 + C15649) * C154164 * C11467 +
             (C16083 + C16084) * C154164 * C154407) *
                C154146 -
            (C15103 * C154407 + C15104 * C11467 +
             (C15090 + C15089) * C154164 * C11466 +
             (C15088 + C15087) * C154164 * C11465) *
                C154393) *
               C1307 +
           (((C15376 + C15375) * C154164 * C11465 +
             (C15374 + C15373) * C154164 * C11466 +
             (C15372 + C15371) * C154164 * C11467 +
             (C15871 + C15872) * C154164 * C154407) *
                C154393 -
            ((C15024 * C1546 - C15025 * C1541 - C15024 * C1547 +
              C154268 * C1556 + C15022 * C1143 - C15023 * C1133 -
              C15022 * C1144 + C154408 * C1151) *
                 C154164 * C154407 +
             (C16384 + C16383) * C154164 * C11467 +
             (C16382 + C16381) * C154164 * C11466 +
             (C16380 + C16379) * C154164 * C11465) *
                C154146) *
               C154118) *
              C154053)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C63054 * C144 - C63055 * C136 - C63054 * C145 + C63050 * C160 +
              C63056 * C600 - C63057 * C584 - C63056 * C601 + C63051 * C620 +
              C63058 * C602 - C63059 * C585 - C63058 * C603 + C63052 * C621 +
              C63060 * C2337 - C63061 * C2328 - C63060 * C2338 +
              C154422 * C2343) *
                 C154164 * C154373 +
             (C63135 + C63136 + C63137 + C63138) * C154164 * C154021) *
                C154393 -
            ((C63639 + C63640 + C63641 + C63642) * C154164 * C154021 +
             (C63060 * C7777 - C63061 * C7773 - C63060 * C7778 +
              C154422 * C7785 + C63058 * C2337 - C63059 * C2328 -
              C63058 * C2338 + C63052 * C2343 + C63056 * C602 - C63057 * C585 -
              C63056 * C603 + C63051 * C621 + C63054 * C600 - C63055 * C584 -
              C63054 * C601 + C63050 * C620) *
                 C154164 * C154373) *
                C154146) *
               C1307 +
           (((C63054 * C1135 - C63055 * C1129 - C63054 * C1136 +
              C63050 * C1147 + C63056 * C1554 - C63057 * C1545 -
              C63056 * C1555 + C63051 * C1560 + C63058 * C6274 -
              C63059 * C6263 - C63058 * C6275 + C63052 * C6281 +
              C63060 * C9282 - C63061 * C9277 - C63060 * C9283 +
              C154422 * C9286) *
                 C154164 * C154373 +
             (C64373 + C64374 + C64375 + C64376) * C154164 * C154021) *
                C154146 -
            ((C63389 + C63390 + C63391 + C63392) * C154164 * C154021 +
             (C63060 * C6274 - C63061 * C6263 - C63060 * C6275 +
              C154422 * C6281 + C63058 * C1554 - C63059 * C1545 -
              C63058 * C1555 + C63052 * C1560 + C63056 * C1135 -
              C63057 * C1129 - C63056 * C1136 + C63051 * C1147 + C63054 * C363 -
              C63055 * C347 - C63054 * C364 + C63050 * C383) *
                 C154164 * C154373) *
                C154393) *
               C154118) *
              C154384 +
          ((((C63642 + C63641 + C63640 + C63639) * C154164 * C154373 +
             (C64087 + C64088 + C64089 + C64090) * C154164 * C154021) *
                C154146 -
            ((C63139 + C63140 + C63141 + C63142) * C154164 * C154021 +
             (C63138 + C63137 + C63136 + C63135) * C154164 * C154373) *
                C154393) *
               C1307 +
           (((C63392 + C63391 + C63390 + C63389) * C154164 * C154373 +
             (C63865 + C63866 + C63867 + C63868) * C154164 * C154021) *
                C154393 -
            ((C63060 * C9278 - C63061 * C9275 - C63060 * C9279 +
              C154422 * C9284 + C63058 * C6266 - C63059 * C6259 -
              C63058 * C6267 + C63052 * C6277 + C63056 * C1550 -
              C63057 * C1543 - C63056 * C1551 + C63051 * C1558 +
              C63054 * C1139 - C63055 * C1131 - C63054 * C1140 +
              C63050 * C1149) *
                 C154164 * C154021 +
             (C64376 + C64375 + C64374 + C64373) * C154164 * C154373) *
                C154146) *
               C154118) *
              C154053)) /
            (p * q * std::sqrt(p + q));
    d2ee[204] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
            C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
               C154164 * C11465 +
           (C15087 + C15088) * C154164 * C11466 + C15101 * C11467 +
           C15102 * C154407) *
              C154082 * C1394 -
          (C15865 * C154407 + C15866 * C11467 +
           (C15375 + C15376) * C154164 * C11466 +
           (C15024 * C1135 - C15025 * C1129 - C15024 * C1136 + C154268 * C1147 +
            C15022 * C363 - C15023 * C347 - C15022 * C364 + C154408 * C383) *
               C154164 * C11465) *
              C154082 * C1395 +
          ((C15022 * C365 - C15023 * C348 - C15022 * C366 + C154408 * C384 +
            C15024 * C1985 - C15025 * C1976 - C15024 * C1986 +
            C154268 * C1991) *
               C154164 * C11465 +
           (C15377 + C15378) * C154164 * C11466 +
           (C15379 + C15380) * C154164 * C11467 +
           (C15381 + C15382) * C154164 * C154407) *
              C154082 * C1396 -
          ((C15024 * C4264 - C15025 * C4257 - C15024 * C4265 + C154268 * C4269 +
            C15022 * C1406 - C15023 * C1400 - C15022 * C1407 +
            C154408 * C1415) *
               C154164 * C154407 +
           (C15024 * C4262 - C15025 * C4256 - C15024 * C4263 + C154268 * C4268 +
            C15022 * C1408 - C15023 * C1401 - C15022 * C1409 +
            C154408 * C1416) *
               C154164 * C11467 +
           (C15024 * C4260 - C15025 * C4255 - C15024 * C4261 + C154268 * C4267 +
            C15022 * C1410 - C15023 * C1402 - C15022 * C1411 +
            C154408 * C1417) *
               C154164 * C11466 +
           (C15024 * C4258 - C15025 * C4254 - C15024 * C4259 + C154268 * C4266 +
            C15022 * C1412 - C15023 * C1403 - C15022 * C1413 +
            C154408 * C1418) *
               C154164 * C11465) *
              C154082 * C1397) *
         C154047) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
             C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
                C154164 * C11465 +
            (C15087 + C15088) * C154164 * C11466 + C15101 * C11467 +
            C15102 * C154407) *
               C154082 * C1307 -
           (C15865 * C154407 + C15866 * C11467 +
            (C15375 + C15376) * C154164 * C11466 +
            (C15024 * C1135 - C15025 * C1129 - C15024 * C1136 +
             C154268 * C1147 + C15022 * C363 - C15023 * C347 - C15022 * C364 +
             C154408 * C383) *
                C154164 * C11465) *
               C154082 * C154118) *
              C1309 +
          (((C15376 + C15375) * C154164 * C11465 +
            (C15374 + C15373) * C154164 * C11466 +
            (C15372 + C15371) * C154164 * C11467 +
            (C15871 + C15872) * C154164 * C154407) *
               C154082 * C154118 -
           (C15103 * C154407 + C15104 * C11467 +
            (C15090 + C15089) * C154164 * C11466 +
            (C15088 + C15087) * C154164 * C11465) *
               C154082 * C1307) *
              C1310 +
          ((C15101 * C11465 + C15102 * C11466 +
            (C15094 + C15093) * C154164 * C11467 +
            (C15095 + C15096) * C154164 * C154407) *
               C154082 * C1307 -
           ((C15024 * C1145 - C15025 * C1134 - C15024 * C1146 +
             C154268 * C1152 + C15022 * C375 - C15023 * C353 - C15022 * C376 +
             C154408 * C389) *
                C154164 * C154407 +
            (C15872 + C15871) * C154164 * C11467 + C15865 * C11466 +
            C15866 * C11465) *
               C154082 * C154118) *
              C1311)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
              C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
                 C24270 +
             (C19258 + C19259) * C24271 + C38629 * C154442) *
                C154373 +
            ((C15087 + C15088) * C24270 + C19212 * C24271 + C19224 * C154442) *
                C154021) *
               C154082 * C1307 -
           ((C38630 * C154442 + C19214 * C24271 + C19215 * C24270) * C154021 +
            ((C21100 + C21099) * C154442 + (C19260 + C19261) * C24271 +
             (C19259 + C19258) * C24270) *
                C154373) *
               C154082 * C154118) *
              C1309 +
          (((C19212 * C24270 + C19224 * C24271 + C38631 * C154442) * C154373 +
            (C18908 * C24270 + C19233 * C24271 + (C19264 + C19265) * C154442) *
                C154021) *
               C154082 * C154118 -
           ((C19213 * C154442 + C15856 * C24271 + (C15090 + C15089) * C24270) *
                C154021 +
            (C19214 * C154442 + C19215 * C24271 + (C15088 + C15087) * C24270) *
                C154373) *
               C154082 * C1307) *
              C1310 +
          (((C15097 * C24270 + C18908 * C24271 + C19233 * C154442) * C154373 +
            (C15098 * C24270 + C19876 * C24271 + (C15381 + C15382) * C154442) *
                C154021) *
               C154082 * C1307 -
           (((C15024 * C4264 - C15025 * C4257 - C15024 * C4265 +
              C154268 * C4269 + C15022 * C1406 - C15023 * C1400 -
              C15022 * C1407 + C154408 * C1415) *
                 C154442 +
             (C15382 + C15381) * C24271 + C15855 * C24270) *
                C154021 +
            ((C19265 + C19264) * C154442 + C19213 * C24271 + C15856 * C24270) *
                C154373) *
               C154082 * C154118) *
              C1311)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
             C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
                C24270 +
            (C19258 + C19259) * C24271 + C38629 * C154442) *
               C154373 +
           ((C15087 + C15088) * C24270 + C19212 * C24271 + C19224 * C154442) *
               C154021) *
              C154082 * C1394 -
          ((C38630 * C154442 + C19214 * C24271 + C19215 * C24270) * C154021 +
           (C40416 * C154442 + (C19260 + C19261) * C24271 +
            (C19259 + C19258) * C24270) *
               C154373) *
              C154082 * C1395 +
          ((C38629 * C24270 + (C21099 + C21100) * C24271 +
            (C40429 + C40430) * C154442) *
               C154373 +
           (C19224 * C24270 + C38631 * C24271 + (C38644 + C38645) * C154442) *
               C154021) *
              C154082 * C1396 -
          (((C15024 * C28882 - C15025 * C28879 - C15024 * C28883 +
             C154268 * C28885 + C15022 * C4673 - C15023 * C4669 -
             C15022 * C4674 + C154408 * C4678) *
                C154442 +
            (C38645 + C38644) * C24271 + C38630 * C24270) *
               C154021 +
           ((C15024 * C28880 - C15025 * C28878 - C15024 * C28881 +
             C154268 * C28884 + C15022 * C4675 - C15023 * C4670 -
             C15022 * C4676 + C154408 * C4679) *
                C154442 +
            (C40430 + C40429) * C24271 + C40416 * C24270) *
               C154373) *
              C154082 * C1397) *
         C154047) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C63054 * C144 - C63055 * C136 - C63054 * C145 + C63050 * C160 +
             C63056 * C600 - C63057 * C584 - C63056 * C601 + C63051 * C620 +
             C63058 * C602 - C63059 * C585 - C63058 * C603 + C63052 * C621 +
             C63060 * C2337 - C63061 * C2328 - C63060 * C2338 +
             C154422 * C2343) *
                C154164 * C154373 +
            (C63135 + C63136 + C63137 + C63138) * C154164 * C154021) *
               C154082 * C1307 -
           ((C63389 + C63390 + C63391 + C63392) * C154164 * C154021 +
            (C63060 * C6274 - C63061 * C6263 - C63060 * C6275 +
             C154422 * C6281 + C63058 * C1554 - C63059 * C1545 -
             C63058 * C1555 + C63052 * C1560 + C63056 * C1135 - C63057 * C1129 -
             C63056 * C1136 + C63051 * C1147 + C63054 * C363 - C63055 * C347 -
             C63054 * C364 + C63050 * C383) *
                C154164 * C154373) *
               C154082 * C154118) *
              C1309 +
          (((C63392 + C63391 + C63390 + C63389) * C154164 * C154373 +
            (C63865 + C63866 + C63867 + C63868) * C154164 * C154021) *
               C154082 * C154118 -
           ((C63139 + C63140 + C63141 + C63142) * C154164 * C154021 +
            (C63138 + C63137 + C63136 + C63135) * C154164 * C154373) *
               C154082 * C1307) *
              C1310 +
          (((C63142 + C63141 + C63140 + C63139) * C154164 * C154373 +
            (C63143 + C63144 + C63145 + C63146) * C154164 * C154021) *
               C154082 * C1307 -
           ((C63060 * C8648 - C63061 * C8647 - C63060 * C8649 +
             C154422 * C8650 + C63058 * C1548 - C63059 * C1542 -
             C63058 * C1549 + C63052 * C1557 + C63056 * C1141 - C63057 * C1132 -
             C63056 * C1142 + C63051 * C1150 + C63054 * C357 - C63055 * C344 -
             C63054 * C358 + C63050 * C380) *
                C154164 * C154021 +
            (C63868 + C63867 + C63866 + C63865) * C154164 * C154373) *
               C154082 * C154118) *
              C1311)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C63054 * C144 - C63055 * C136 - C63054 * C145 + C63050 * C160 +
            C63056 * C600 - C63057 * C584 - C63056 * C601 + C63051 * C620 +
            C63058 * C602 - C63059 * C585 - C63058 * C603 + C63052 * C621 +
            C63060 * C2337 - C63061 * C2328 - C63060 * C2338 +
            C154422 * C2343) *
               C154164 * C154373 +
           (C63135 + C63136 + C63137 + C63138) * C154164 * C154021) *
              C154082 * C1394 -
          ((C63389 + C63390 + C63391 + C63392) * C154164 * C154021 +
           (C63060 * C6274 - C63061 * C6263 - C63060 * C6275 + C154422 * C6281 +
            C63058 * C1554 - C63059 * C1545 - C63058 * C1555 + C63052 * C1560 +
            C63056 * C1135 - C63057 * C1129 - C63056 * C1136 + C63051 * C1147 +
            C63054 * C363 - C63055 * C347 - C63054 * C364 + C63050 * C383) *
               C154164 * C154373) *
              C154082 * C1395 +
          ((C63054 * C365 - C63055 * C348 - C63054 * C366 + C63050 * C384 +
            C63056 * C1985 - C63057 * C1976 - C63056 * C1986 + C63051 * C1991 +
            C63058 * C3445 - C63059 * C3441 - C63058 * C3446 + C63052 * C3453 +
            C63060 * C6272 - C63061 * C6262 - C63060 * C6273 +
            C154422 * C6280) *
               C154164 * C154373 +
           (C63393 + C63394 + C63395 + C63396) * C154164 * C154021) *
              C154082 * C1396 -
          ((C63060 * C31817 - C63061 * C31816 - C63060 * C31818 +
            C154422 * C31819 + C63058 * C4910 - C63059 * C4906 -
            C63058 * C4911 + C63052 * C4915 + C63056 * C4260 - C63057 * C4255 -
            C63056 * C4261 + C63051 * C4267 + C63054 * C1410 - C63055 * C1402 -
            C63054 * C1411 + C63050 * C1417) *
               C154164 * C154021 +
           (C63060 * C30002 - C63061 * C29999 - C63060 * C30003 +
            C154422 * C30005 + C63058 * C4912 - C63059 * C4907 -
            C63058 * C4913 + C63052 * C4916 + C63056 * C4258 - C63057 * C4254 -
            C63056 * C4259 + C63051 * C4266 + C63054 * C1412 - C63055 * C1403 -
            C63054 * C1413 + C63050 * C1418) *
               C154164 * C154373) *
              C154082 * C1397) *
         C154047) /
            (p * q * std::sqrt(p + q));
    d2ee[205] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
               C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
                  C24270 +
              (C19258 + C19259) * C24271 + C38629 * C154442) *
                 C154373 +
             ((C15087 + C15088) * C24270 + C19212 * C24271 + C19224 * C154442) *
                 C154021) *
                C2114 -
            ((C39916 * C154442 + C20558 * C24271 + (C15653 + C15654) * C24270) *
                 C154021 +
             (C41701 * C154442 + (C20597 + C20598) * C24271 +
              (C15024 * C602 - C15025 * C585 - C15024 * C603 + C154268 * C621 +
               C15022 * C600 - C15023 * C584 - C15022 * C601 + C154408 * C620) *
                  C24270) *
                 C154373) *
                C154146) *
               C154392 +
           ((((C20598 + C20597) * C24270 + (C22383 + C22384) * C24271 +
              (C41714 + C41715) * C154442) *
                 C154373 +
             (C20567 * C24270 + C39917 * C24271 + (C39930 + C39931) * C154442) *
                 C154021) *
                C154146 -
            ((C38630 * C154442 + C19214 * C24271 + C19215 * C24270) * C154021 +
             (C40416 * C154442 + (C19260 + C19261) * C24271 +
              (C19259 + C19258) * C24270) *
                 C154373) *
                C2114) *
               C154118) *
              C154384 +
          (((((C15654 + C15653) * C24270 + C20567 * C24271 + C39917 * C154442) *
                 C154373 +
             ((C15652 + C15651) * C24270 + C20576 * C24271 +
              (C20601 + C20602) * C154442) *
                 C154021) *
                C154146 -
            ((C19213 * C154442 + C15856 * C24271 + (C15090 + C15089) * C24270) *
                 C154021 +
             (C19214 * C154442 + C19215 * C24271 + (C15088 + C15087) * C24270) *
                 C154373) *
                C2114) *
               C154392 +
           (((C19212 * C24270 + C19224 * C24271 + C38631 * C154442) * C154373 +
             (C18908 * C24270 + C19233 * C24271 + (C19264 + C19265) * C154442) *
                 C154021) *
                C2114 -
            (((C15024 * C4908 - C15025 * C4905 - C15024 * C4909 +
               C154268 * C4914 + C15022 * C4262 - C15023 * C4256 -
               C15022 * C4263 + C154408 * C4268) *
                  C154442 +
              (C20602 + C20601) * C24271 + C20168 * C24270) *
                 C154021 +
             ((C39931 + C39930) * C154442 + C39916 * C24271 + C20558 * C24270) *
                 C154373) *
                C154146) *
               C154118) *
              C154053)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
              C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
                 C154164 * C11465 +
             (C15087 + C15088) * C154164 * C11466 + C15101 * C11467 +
             C15102 * C154407) *
                C2114 -
            (C16077 * C154407 + C16078 * C11467 +
             (C15653 + C15654) * C154164 * C11466 +
             (C15024 * C602 - C15025 * C585 - C15024 * C603 + C154268 * C621 +
              C15022 * C600 - C15023 * C584 - C15022 * C601 + C154408 * C620) *
                 C154164 * C11465) *
                C154146) *
               C154392 +
           (((C15022 * C1135 - C15023 * C1129 - C15022 * C1136 +
              C154408 * C1147 + C15024 * C1554 - C15025 * C1545 -
              C15024 * C1555 + C154268 * C1560) *
                 C154164 * C11465 +
             (C16379 + C16380) * C154164 * C11466 +
             (C16381 + C16382) * C154164 * C11467 +
             (C16383 + C16384) * C154164 * C154407) *
                C154146 -
            (C15865 * C154407 + C15866 * C11467 +
             (C15375 + C15376) * C154164 * C11466 +
             (C15024 * C1135 - C15025 * C1129 - C15024 * C1136 +
              C154268 * C1147 + C15022 * C363 - C15023 * C347 - C15022 * C364 +
              C154408 * C383) *
                 C154164 * C11465) *
                C2114) *
               C154118) *
              C154384 +
          ((((C15654 + C15653) * C154164 * C11465 +
             (C15652 + C15651) * C154164 * C11466 +
             (C15650 + C15649) * C154164 * C11467 +
             (C16083 + C16084) * C154164 * C154407) *
                C154146 -
            (C15103 * C154407 + C15104 * C11467 +
             (C15090 + C15089) * C154164 * C11466 +
             (C15088 + C15087) * C154164 * C11465) *
                C2114) *
               C154392 +
           (((C15376 + C15375) * C154164 * C11465 +
             (C15374 + C15373) * C154164 * C11466 +
             (C15372 + C15371) * C154164 * C11467 +
             (C15871 + C15872) * C154164 * C154407) *
                C2114 -
            ((C15024 * C1546 - C15025 * C1541 - C15024 * C1547 +
              C154268 * C1556 + C15022 * C1143 - C15023 * C1133 -
              C15022 * C1144 + C154408 * C1151) *
                 C154164 * C154407 +
             (C16384 + C16383) * C154164 * C11467 +
             (C16382 + C16381) * C154164 * C11466 +
             (C16380 + C16379) * C154164 * C11465) *
                C154146) *
               C154118) *
              C154053)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C63054 * C144 - C63055 * C136 - C63054 * C145 + C63050 * C160 +
              C63056 * C600 - C63057 * C584 - C63056 * C601 + C63051 * C620 +
              C63058 * C602 - C63059 * C585 - C63058 * C603 + C63052 * C621 +
              C63060 * C2337 - C63061 * C2328 - C63060 * C2338 +
              C154422 * C2343) *
                 C154164 * C154373 +
             (C63135 + C63136 + C63137 + C63138) * C154164 * C154021) *
                C2114 -
            ((C63639 + C63640 + C63641 + C63642) * C154164 * C154021 +
             (C63060 * C7777 - C63061 * C7773 - C63060 * C7778 +
              C154422 * C7785 + C63058 * C2337 - C63059 * C2328 -
              C63058 * C2338 + C63052 * C2343 + C63056 * C602 - C63057 * C585 -
              C63056 * C603 + C63051 * C621 + C63054 * C600 - C63055 * C584 -
              C63054 * C601 + C63050 * C620) *
                 C154164 * C154373) *
                C154146) *
               C154392 +
           (((C63054 * C1135 - C63055 * C1129 - C63054 * C1136 +
              C63050 * C1147 + C63056 * C1554 - C63057 * C1545 -
              C63056 * C1555 + C63051 * C1560 + C63058 * C6274 -
              C63059 * C6263 - C63058 * C6275 + C63052 * C6281 +
              C63060 * C9282 - C63061 * C9277 - C63060 * C9283 +
              C154422 * C9286) *
                 C154164 * C154373 +
             (C64373 + C64374 + C64375 + C64376) * C154164 * C154021) *
                C154146 -
            ((C63389 + C63390 + C63391 + C63392) * C154164 * C154021 +
             (C63060 * C6274 - C63061 * C6263 - C63060 * C6275 +
              C154422 * C6281 + C63058 * C1554 - C63059 * C1545 -
              C63058 * C1555 + C63052 * C1560 + C63056 * C1135 -
              C63057 * C1129 - C63056 * C1136 + C63051 * C1147 + C63054 * C363 -
              C63055 * C347 - C63054 * C364 + C63050 * C383) *
                 C154164 * C154373) *
                C2114) *
               C154118) *
              C154384 +
          ((((C63642 + C63641 + C63640 + C63639) * C154164 * C154373 +
             (C64087 + C64088 + C64089 + C64090) * C154164 * C154021) *
                C154146 -
            ((C63139 + C63140 + C63141 + C63142) * C154164 * C154021 +
             (C63138 + C63137 + C63136 + C63135) * C154164 * C154373) *
                C2114) *
               C154392 +
           (((C63392 + C63391 + C63390 + C63389) * C154164 * C154373 +
             (C63865 + C63866 + C63867 + C63868) * C154164 * C154021) *
                C2114 -
            ((C63060 * C9278 - C63061 * C9275 - C63060 * C9279 +
              C154422 * C9284 + C63058 * C6266 - C63059 * C6259 -
              C63058 * C6267 + C63052 * C6277 + C63056 * C1550 -
              C63057 * C1543 - C63056 * C1551 + C63051 * C1558 +
              C63054 * C1139 - C63055 * C1131 - C63054 * C1140 +
              C63050 * C1149) *
                 C154164 * C154021 +
             (C64376 + C64375 + C64374 + C64373) * C154164 * C154373) *
                C154146) *
               C154118) *
              C154053)) /
            (p * q * std::sqrt(p + q));
    d2ee[206] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
              C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
                 C24270 +
             (C19258 + C19259) * C24271 + C38629 * C154442) *
                C154373 +
            ((C15087 + C15088) * C24270 + C19212 * C24271 + C19224 * C154442) *
                C154021) *
               C154465 -
           ((C39916 * C154442 + C20558 * C24271 + (C15653 + C15654) * C24270) *
                C154021 +
            (C41701 * C154442 + (C20597 + C20598) * C24271 +
             (C15024 * C602 - C15025 * C585 - C15024 * C603 + C154268 * C621 +
              C15022 * C600 - C15023 * C584 - C15022 * C601 + C154408 * C620) *
                 C24270) *
                C154373) *
               C154466 +
           (((C15022 * C602 - C15023 * C585 - C15022 * C603 + C154408 * C621 +
              C15024 * C2337 - C15025 * C2328 - C15024 * C2338 +
              C154268 * C2343) *
                 C24270 +
             (C21403 + C21404) * C24271 + (C40733 + C40734) * C154442) *
                C154373 +
            ((C15655 + C15656) * C24270 + (C19580 + C19581) * C24271 +
             (C38948 + C38949) * C154442) *
                C154021) *
               C2630) *
              C154392 +
          ((((C20598 + C20597) * C24270 + (C22383 + C22384) * C24271 +
             (C41714 + C41715) * C154442) *
                C154373 +
            (C20567 * C24270 + C39917 * C24271 + (C39930 + C39931) * C154442) *
                C154021) *
               C154466 -
           ((C38630 * C154442 + C19214 * C24271 + C19215 * C24270) * C154021 +
            (C40416 * C154442 + (C19260 + C19261) * C24271 +
             (C19259 + C19258) * C24270) *
                C154373) *
               C154465 -
           (((C15024 * C31817 - C15025 * C31816 - C15024 * C31818 +
              C154268 * C31819 + C15022 * C4910 - C15023 * C4906 -
              C15022 * C4911 + C154408 * C4915) *
                 C154442 +
             (C38949 + C38948) * C24271 + (C19581 + C19580) * C24270) *
                C154021 +
            ((C15024 * C30002 - C15025 * C29999 - C15024 * C30003 +
              C154268 * C30005 + C15022 * C4912 - C15023 * C4907 -
              C15022 * C4913 + C154408 * C4916) *
                 C154442 +
             (C40734 + C40733) * C24271 + (C21404 + C21403) * C24270) *
                C154373) *
               C2630) *
              C154118) *
         C154047) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
             C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
                C154164 * C11465 +
            (C15087 + C15088) * C154164 * C11466 + C15101 * C11467 +
            C15102 * C154407) *
               C154465 -
           (C16077 * C154407 + C16078 * C11467 +
            (C15653 + C15654) * C154164 * C11466 +
            (C15024 * C602 - C15025 * C585 - C15024 * C603 + C154268 * C621 +
             C15022 * C600 - C15023 * C584 - C15022 * C601 + C154408 * C620) *
                C154164 * C11465) *
               C154466 +
           ((C15022 * C602 - C15023 * C585 - C15022 * C603 + C154408 * C621 +
             C15024 * C2337 - C15025 * C2328 - C15024 * C2338 +
             C154268 * C2343) *
                C154164 * C11465 +
            (C15655 + C15656) * C154164 * C11466 +
            (C15657 + C15658) * C154164 * C11467 +
            (C15659 + C15660) * C154164 * C154407) *
               C2630) *
              C154392 +
          (((C15022 * C1135 - C15023 * C1129 - C15022 * C1136 +
             C154408 * C1147 + C15024 * C1554 - C15025 * C1545 -
             C15024 * C1555 + C154268 * C1560) *
                C154164 * C11465 +
            (C16379 + C16380) * C154164 * C11466 +
            (C16381 + C16382) * C154164 * C11467 +
            (C16383 + C16384) * C154164 * C154407) *
               C154466 -
           (C15865 * C154407 + C15866 * C11467 +
            (C15375 + C15376) * C154164 * C11466 +
            (C15024 * C1135 - C15025 * C1129 - C15024 * C1136 +
             C154268 * C1147 + C15022 * C363 - C15023 * C347 - C15022 * C364 +
             C154408 * C383) *
                C154164 * C11465) *
               C154465 -
           ((C15024 * C8648 - C15025 * C8647 - C15024 * C8649 +
             C154268 * C8650 + C15022 * C1548 - C15023 * C1542 -
             C15022 * C1549 + C154408 * C1557) *
                C154164 * C154407 +
            (C15024 * C6266 - C15025 * C6259 - C15024 * C6267 +
             C154268 * C6277 + C15022 * C1550 - C15023 * C1543 -
             C15022 * C1551 + C154408 * C1558) *
                C154164 * C11467 +
            (C15024 * C6270 - C15025 * C6261 - C15024 * C6271 +
             C154268 * C6279 + C15022 * C1552 - C15023 * C1544 -
             C15022 * C1553 + C154408 * C1559) *
                C154164 * C11466 +
            (C15024 * C6274 - C15025 * C6263 - C15024 * C6275 +
             C154268 * C6281 + C15022 * C1554 - C15023 * C1545 -
             C15022 * C1555 + C154408 * C1560) *
                C154164 * C11465) *
               C2630) *
              C154118) *
         C154047) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C63054 * C144 - C63055 * C136 - C63054 * C145 + C63050 * C160 +
             C63056 * C600 - C63057 * C584 - C63056 * C601 + C63051 * C620 +
             C63058 * C602 - C63059 * C585 - C63058 * C603 + C63052 * C621 +
             C63060 * C2337 - C63061 * C2328 - C63060 * C2338 +
             C154422 * C2343) *
                C154164 * C154373 +
            (C63135 + C63136 + C63137 + C63138) * C154164 * C154021) *
               C154465 -
           ((C63639 + C63640 + C63641 + C63642) * C154164 * C154021 +
            (C63060 * C7777 - C63061 * C7773 - C63060 * C7778 +
             C154422 * C7785 + C63058 * C2337 - C63059 * C2328 -
             C63058 * C2338 + C63052 * C2343 + C63056 * C602 - C63057 * C585 -
             C63056 * C603 + C63051 * C621 + C63054 * C600 - C63055 * C584 -
             C63054 * C601 + C63050 * C620) *
                C154164 * C154373) *
               C154466 +
           ((C63054 * C602 - C63055 * C585 - C63054 * C603 + C63050 * C621 +
             C63056 * C2337 - C63057 * C2328 - C63056 * C2338 + C63051 * C2343 +
             C63058 * C7777 - C63059 * C7773 - C63058 * C7778 + C63052 * C7785 +
             C63060 * C10602 - C63061 * C10597 - C63060 * C10603 +
             C154422 * C10606) *
                C154164 * C154373 +
            (C63643 + C63644 + C63645 + C63646) * C154164 * C154021) *
               C2630) *
              C154392 +
          (((C63054 * C1135 - C63055 * C1129 - C63054 * C1136 + C63050 * C1147 +
             C63056 * C1554 - C63057 * C1545 - C63056 * C1555 + C63051 * C1560 +
             C63058 * C6274 - C63059 * C6263 - C63058 * C6275 + C63052 * C6281 +
             C63060 * C9282 - C63061 * C9277 - C63060 * C9283 +
             C154422 * C9286) *
                C154164 * C154373 +
            (C64373 + C64374 + C64375 + C64376) * C154164 * C154021) *
               C154466 -
           ((C63389 + C63390 + C63391 + C63392) * C154164 * C154021 +
            (C63060 * C6274 - C63061 * C6263 - C63060 * C6275 +
             C154422 * C6281 + C63058 * C1554 - C63059 * C1545 -
             C63058 * C1555 + C63052 * C1560 + C63056 * C1135 - C63057 * C1129 -
             C63056 * C1136 + C63051 * C1147 + C63054 * C363 - C63055 * C347 -
             C63054 * C364 + C63050 * C383) *
                C154164 * C154373) *
               C154465 -
           ((C63060 * C56192 - C63061 * C56191 - C63060 * C56193 +
             C154422 * C56194 + C63058 * C9280 - C63059 * C9276 -
             C63058 * C9281 + C63052 * C9285 + C63056 * C6270 - C63057 * C6261 -
             C63056 * C6271 + C63051 * C6279 + C63054 * C1552 - C63055 * C1544 -
             C63054 * C1553 + C63050 * C1559) *
                C154164 * C154021 +
            (C63060 * C33869 - C63061 * C33866 - C63060 * C33870 +
             C154422 * C33872 + C63058 * C9282 - C63059 * C9277 -
             C63058 * C9283 + C63052 * C9286 + C63056 * C6274 - C63057 * C6263 -
             C63056 * C6275 + C63051 * C6281 + C63054 * C1554 - C63055 * C1545 -
             C63054 * C1555 + C63050 * C1560) *
                C154164 * C154373) *
               C2630) *
              C154118) *
         C154047) /
            (p * q * std::sqrt(p + q));
    d2ee[207] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C15022 * C144 - C15023 * C136 - C15022 * C145 +
                 C154408 * C160 + C15024 * C600 - C15025 * C584 -
                 C15024 * C601 + C154268 * C620) *
                    C154164 * C11465 +
                (C15087 + C15088) * C154164 * C11466 + C15101 * C11467 +
                C15102 * C154407) *
                   C2114 -
               (C16077 * C154407 + C16078 * C11467 +
                (C15653 + C15654) * C154164 * C11466 +
                (C15024 * C602 - C15025 * C585 - C15024 * C603 +
                 C154268 * C621 + C15022 * C600 - C15023 * C584 -
                 C15022 * C601 + C154408 * C620) *
                    C154164 * C11465) *
                   C154146) *
                  C154066 * C1309 +
              (((C15654 + C15653) * C154164 * C11465 +
                (C15652 + C15651) * C154164 * C11466 +
                (C15650 + C15649) * C154164 * C11467 +
                (C16083 + C16084) * C154164 * C154407) *
                   C154146 -
               (C15103 * C154407 + C15104 * C11467 +
                (C15090 + C15089) * C154164 * C11466 +
                (C15088 + C15087) * C154164 * C11465) *
                   C2114) *
                  C154066 * C1310 +
              ((C15101 * C11465 + C15102 * C11466 +
                (C15094 + C15093) * C154164 * C11467 +
                (C15095 + C15096) * C154164 * C154407) *
                   C2114 -
               ((C15024 * C614 - C15025 * C591 - C15024 * C615 +
                 C154268 * C627 + C15022 * C612 - C15023 * C590 -
                 C15022 * C613 + C154408 * C626) *
                    C154164 * C154407 +
                (C16084 + C16083) * C154164 * C11467 + C16077 * C11466 +
                C16078 * C11465) *
                   C154146) *
                  C154066 * C1311) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C15022 * C144 - C15023 * C136 - C15022 * C145 +
                 C154408 * C160 + C15024 * C600 - C15025 * C584 -
                 C15024 * C601 + C154268 * C620) *
                    C154164 * C11465 +
                (C15087 + C15088) * C154164 * C11466 + C15101 * C11467 +
                C15102 * C154407) *
                   C2114 -
               (C16077 * C154407 + C16078 * C11467 +
                (C15653 + C15654) * C154164 * C11466 +
                (C15024 * C602 - C15025 * C585 - C15024 * C603 +
                 C154268 * C621 + C15022 * C600 - C15023 * C584 -
                 C15022 * C601 + C154408 * C620) *
                    C154164 * C11465) *
                   C154146) *
                  C338 +
              (((C15022 * C1135 - C15023 * C1129 - C15022 * C1136 +
                 C154408 * C1147 + C15024 * C1554 - C15025 * C1545 -
                 C15024 * C1555 + C154268 * C1560) *
                    C154164 * C11465 +
                (C16379 + C16380) * C154164 * C11466 +
                (C16381 + C16382) * C154164 * C11467 +
                (C16383 + C16384) * C154164 * C154407) *
                   C154146 -
               (C15865 * C154407 + C15866 * C11467 +
                (C15375 + C15376) * C154164 * C11466 +
                (C15024 * C1135 - C15025 * C1129 - C15024 * C1136 +
                 C154268 * C1147 + C15022 * C363 - C15023 * C347 -
                 C15022 * C364 + C154408 * C383) *
                    C154164 * C11465) *
                   C2114) *
                  C339 +
              (((C15022 * C365 - C15023 * C348 - C15022 * C366 +
                 C154408 * C384 + C15024 * C1985 - C15025 * C1976 -
                 C15024 * C1986 + C154268 * C1991) *
                    C154164 * C11465 +
                (C15377 + C15378) * C154164 * C11466 +
                (C15379 + C15380) * C154164 * C11467 +
                (C15381 + C15382) * C154164 * C154407) *
                   C2114 -
               ((C15024 * C3451 - C15025 * C3444 - C15024 * C3452 +
                 C154268 * C3456 + C15022 * C1979 - C15023 * C1973 -
                 C15022 * C1980 + C154408 * C1988) *
                    C154164 * C154407 +
                (C15024 * C3449 - C15025 * C3443 - C15024 * C3450 +
                 C154268 * C3455 + C15022 * C1981 - C15023 * C1974 -
                 C15022 * C1982 + C154408 * C1989) *
                    C154164 * C11467 +
                (C15024 * C3447 - C15025 * C3442 - C15024 * C3448 +
                 C154268 * C3454 + C15022 * C1983 - C15023 * C1975 -
                 C15022 * C1984 + C154408 * C1990) *
                    C154164 * C11466 +
                (C15024 * C3445 - C15025 * C3441 - C15024 * C3446 +
                 C154268 * C3453 + C15022 * C1985 - C15023 * C1976 -
                 C15022 * C1986 + C154408 * C1991) *
                    C154164 * C11465) *
                   C154146) *
                  C340) *
             C154047) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
            C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
               C154164 * C11465 +
           (C15087 + C15088) * C154164 * C11466 + C15101 * C11467 +
           C15102 * C154407) *
              C2320 -
          (C16077 * C154407 + C16078 * C11467 +
           (C15653 + C15654) * C154164 * C11466 +
           (C15024 * C602 - C15025 * C585 - C15024 * C603 + C154268 * C621 +
            C15022 * C600 - C15023 * C584 - C15022 * C601 + C154408 * C620) *
               C154164 * C11465) *
              C2321 +
          ((C15022 * C602 - C15023 * C585 - C15022 * C603 + C154408 * C621 +
            C15024 * C2337 - C15025 * C2328 - C15024 * C2338 +
            C154268 * C2343) *
               C154164 * C11465 +
           (C15655 + C15656) * C154164 * C11466 +
           (C15657 + C15658) * C154164 * C11467 +
           (C15659 + C15660) * C154164 * C154407) *
              C2322 -
          ((C15024 * C7783 - C15025 * C7776 - C15024 * C7784 + C154268 * C7788 +
            C15022 * C2331 - C15023 * C2325 - C15022 * C2332 +
            C154408 * C2340) *
               C154164 * C154407 +
           (C15024 * C7781 - C15025 * C7775 - C15024 * C7782 + C154268 * C7787 +
            C15022 * C2333 - C15023 * C2326 - C15022 * C2334 +
            C154408 * C2341) *
               C154164 * C11467 +
           (C15024 * C7779 - C15025 * C7774 - C15024 * C7780 + C154268 * C7786 +
            C15022 * C2335 - C15023 * C2327 - C15022 * C2336 +
            C154408 * C2342) *
               C154164 * C11466 +
           (C15024 * C7777 - C15025 * C7773 - C15024 * C7778 + C154268 * C7785 +
            C15022 * C2337 - C15023 * C2328 - C15022 * C2338 +
            C154408 * C2343) *
               C154164 * C11465) *
              C2323) *
         C154066 * C154047) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
              C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
                 C24270 +
             (C19258 + C19259) * C24271 + C38629 * C154442) *
                C154373 +
            ((C15087 + C15088) * C24270 + C19212 * C24271 + C19224 * C154442) *
                C154021) *
               C2114 -
           ((C39916 * C154442 + C20558 * C24271 + (C15653 + C15654) * C24270) *
                C154021 +
            (C41701 * C154442 + (C20597 + C20598) * C24271 +
             (C15024 * C602 - C15025 * C585 - C15024 * C603 + C154268 * C621 +
              C15022 * C600 - C15023 * C584 - C15022 * C601 + C154408 * C620) *
                 C24270) *
                C154373) *
               C154146) *
              C154066 * C1309 +
          ((((C15654 + C15653) * C24270 + C20567 * C24271 + C39917 * C154442) *
                C154373 +
            ((C15652 + C15651) * C24270 + C20576 * C24271 +
             (C20601 + C20602) * C154442) *
                C154021) *
               C154146 -
           ((C19213 * C154442 + C15856 * C24271 + (C15090 + C15089) * C24270) *
                C154021 +
            (C19214 * C154442 + C19215 * C24271 + (C15088 + C15087) * C24270) *
                C154373) *
               C2114) *
              C154066 * C1310 +
          (((C15097 * C24270 + C18908 * C24271 + C19233 * C154442) * C154373 +
            (C15098 * C24270 + C19876 * C24271 + (C15381 + C15382) * C154442) *
                C154021) *
               C2114 -
           (((C15024 * C3451 - C15025 * C3444 - C15024 * C3452 +
              C154268 * C3456 + C15022 * C1979 - C15023 * C1973 -
              C15022 * C1980 + C154408 * C1988) *
                 C154442 +
             (C16384 + C16383) * C24271 + C16067 * C24270) *
                C154021 +
            ((C20602 + C20601) * C154442 + C20168 * C24271 + C16068 * C24270) *
                C154373) *
               C154146) *
              C154066 * C1311)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
              C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
                 C24270 +
             (C19258 + C19259) * C24271 + C38629 * C154442) *
                C154373 +
            ((C15087 + C15088) * C24270 + C19212 * C24271 + C19224 * C154442) *
                C154021) *
               C2114 -
           ((C39916 * C154442 + C20558 * C24271 + (C15653 + C15654) * C24270) *
                C154021 +
            (C41701 * C154442 + (C20597 + C20598) * C24271 +
             (C15024 * C602 - C15025 * C585 - C15024 * C603 + C154268 * C621 +
              C15022 * C600 - C15023 * C584 - C15022 * C601 + C154408 * C620) *
                 C24270) *
                C154373) *
               C154146) *
              C338 +
          ((((C20598 + C20597) * C24270 + (C22383 + C22384) * C24271 +
             (C41714 + C41715) * C154442) *
                C154373 +
            (C20567 * C24270 + C39917 * C24271 + (C39930 + C39931) * C154442) *
                C154021) *
               C154146 -
           ((C38630 * C154442 + C19214 * C24271 + C19215 * C24270) * C154021 +
            (C40416 * C154442 + (C19260 + C19261) * C24271 +
             (C19259 + C19258) * C24270) *
                C154373) *
               C2114) *
              C339 +
          (((C38629 * C24270 + (C21099 + C21100) * C24271 +
             (C40429 + C40430) * C154442) *
                C154373 +
            (C19224 * C24270 + C38631 * C24271 + (C38644 + C38645) * C154442) *
                C154021) *
               C2114 -
           (((C15024 * C28468 - C15025 * C28465 - C15024 * C28469 +
              C154268 * C28471 + C15022 * C5662 - C15023 * C5658 -
              C15022 * C5663 + C154408 * C5667) *
                 C154442 +
             (C39931 + C39930) * C24271 + C39916 * C24270) *
                C154021 +
            ((C15024 * C28466 - C15025 * C28464 - C15024 * C28467 +
              C154268 * C28470 + C15022 * C5664 - C15023 * C5659 -
              C15022 * C5665 + C154408 * C5668) *
                 C154442 +
             (C41715 + C41714) * C24271 + C41701 * C24270) *
                C154373) *
               C154146) *
              C340) *
         C154047) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
             C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
                C24270 +
            (C19258 + C19259) * C24271 + C38629 * C154442) *
               C154373 +
           ((C15087 + C15088) * C24270 + C19212 * C24271 + C19224 * C154442) *
               C154021) *
              C2320 -
          ((C39916 * C154442 + C20558 * C24271 + (C15653 + C15654) * C24270) *
               C154021 +
           (C41701 * C154442 + (C20597 + C20598) * C24271 +
            (C15024 * C602 - C15025 * C585 - C15024 * C603 + C154268 * C621 +
             C15022 * C600 - C15023 * C584 - C15022 * C601 + C154408 * C620) *
                C24270) *
               C154373) *
              C2321 +
          (((C15022 * C602 - C15023 * C585 - C15022 * C603 + C154408 * C621 +
             C15024 * C2337 - C15025 * C2328 - C15024 * C2338 +
             C154268 * C2343) *
                C24270 +
            (C21403 + C21404) * C24271 + (C40733 + C40734) * C154442) *
               C154373 +
           ((C15655 + C15656) * C24270 + (C19580 + C19581) * C24271 +
            (C38948 + C38949) * C154442) *
               C154021) *
              C2322 -
          (((C15024 * C31086 - C15025 * C31083 - C15024 * C31087 +
             C154268 * C31089 + C15022 * C6268 - C15023 * C6260 -
             C15022 * C6269 + C154408 * C6278) *
                C154442 +
            (C15024 * C9280 - C15025 * C9276 - C15024 * C9281 +
             C154268 * C9285 + C15022 * C6270 - C15023 * C6261 -
             C15022 * C6271 + C154408 * C6279) *
                C24271 +
            (C15024 * C7779 - C15025 * C7774 - C15024 * C7780 +
             C154268 * C7786 + C15022 * C2335 - C15023 * C2327 -
             C15022 * C2336 + C154408 * C2342) *
                C24270) *
               C154021 +
           ((C15024 * C31084 - C15025 * C31082 - C15024 * C31085 +
             C154268 * C31088 + C15022 * C6272 - C15023 * C6262 -
             C15022 * C6273 + C154408 * C6280) *
                C154442 +
            (C15024 * C9282 - C15025 * C9277 - C15024 * C9283 +
             C154268 * C9286 + C15022 * C6274 - C15023 * C6263 -
             C15022 * C6275 + C154408 * C6281) *
                C24271 +
            (C15024 * C7777 - C15025 * C7773 - C15024 * C7778 +
             C154268 * C7785 + C15022 * C2337 - C15023 * C2328 -
             C15022 * C2338 + C154408 * C2343) *
                C24270) *
               C154373) *
              C2323) *
         C154066 * C154047) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C63054 * C144 - C63055 * C136 - C63054 * C145 + C63050 * C160 +
             C63056 * C600 - C63057 * C584 - C63056 * C601 + C63051 * C620 +
             C63058 * C602 - C63059 * C585 - C63058 * C603 + C63052 * C621 +
             C63060 * C2337 - C63061 * C2328 - C63060 * C2338 +
             C154422 * C2343) *
                C154164 * C154373 +
            (C63135 + C63136 + C63137 + C63138) * C154164 * C154021) *
               C2114 -
           ((C63639 + C63640 + C63641 + C63642) * C154164 * C154021 +
            (C63060 * C7777 - C63061 * C7773 - C63060 * C7778 +
             C154422 * C7785 + C63058 * C2337 - C63059 * C2328 -
             C63058 * C2338 + C63052 * C2343 + C63056 * C602 - C63057 * C585 -
             C63056 * C603 + C63051 * C621 + C63054 * C600 - C63055 * C584 -
             C63054 * C601 + C63050 * C620) *
                C154164 * C154373) *
               C154146) *
              C154066 * C1309 +
          (((C63642 + C63641 + C63640 + C63639) * C154164 * C154373 +
            (C64087 + C64088 + C64089 + C64090) * C154164 * C154021) *
               C154146 -
           ((C63139 + C63140 + C63141 + C63142) * C154164 * C154021 +
            (C63138 + C63137 + C63136 + C63135) * C154164 * C154373) *
               C2114) *
              C154066 * C1310 +
          (((C63142 + C63141 + C63140 + C63139) * C154164 * C154373 +
            (C63143 + C63144 + C63145 + C63146) * C154164 * C154021) *
               C2114 -
           ((C63060 * C7783 - C63061 * C7776 - C63060 * C7784 +
             C154422 * C7788 + C63058 * C2331 - C63059 * C2325 -
             C63058 * C2332 + C63052 * C2340 + C63056 * C608 - C63057 * C588 -
             C63056 * C609 + C63051 * C624 + C63054 * C594 - C63055 * C581 -
             C63054 * C595 + C63050 * C617) *
                C154164 * C154021 +
            (C64090 + C64089 + C64088 + C64087) * C154164 * C154373) *
               C154146) *
              C154066 * C1311)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C63054 * C144 - C63055 * C136 - C63054 * C145 + C63050 * C160 +
             C63056 * C600 - C63057 * C584 - C63056 * C601 + C63051 * C620 +
             C63058 * C602 - C63059 * C585 - C63058 * C603 + C63052 * C621 +
             C63060 * C2337 - C63061 * C2328 - C63060 * C2338 +
             C154422 * C2343) *
                C154164 * C154373 +
            (C63135 + C63136 + C63137 + C63138) * C154164 * C154021) *
               C2114 -
           ((C63639 + C63640 + C63641 + C63642) * C154164 * C154021 +
            (C63060 * C7777 - C63061 * C7773 - C63060 * C7778 +
             C154422 * C7785 + C63058 * C2337 - C63059 * C2328 -
             C63058 * C2338 + C63052 * C2343 + C63056 * C602 - C63057 * C585 -
             C63056 * C603 + C63051 * C621 + C63054 * C600 - C63055 * C584 -
             C63054 * C601 + C63050 * C620) *
                C154164 * C154373) *
               C154146) *
              C338 +
          (((C63054 * C1135 - C63055 * C1129 - C63054 * C1136 + C63050 * C1147 +
             C63056 * C1554 - C63057 * C1545 - C63056 * C1555 + C63051 * C1560 +
             C63058 * C6274 - C63059 * C6263 - C63058 * C6275 + C63052 * C6281 +
             C63060 * C9282 - C63061 * C9277 - C63060 * C9283 +
             C154422 * C9286) *
                C154164 * C154373 +
            (C64373 + C64374 + C64375 + C64376) * C154164 * C154021) *
               C154146 -
           ((C63389 + C63390 + C63391 + C63392) * C154164 * C154021 +
            (C63060 * C6274 - C63061 * C6263 - C63060 * C6275 +
             C154422 * C6281 + C63058 * C1554 - C63059 * C1545 -
             C63058 * C1555 + C63052 * C1560 + C63056 * C1135 - C63057 * C1129 -
             C63056 * C1136 + C63051 * C1147 + C63054 * C363 - C63055 * C347 -
             C63054 * C364 + C63050 * C383) *
                C154164 * C154373) *
               C2114) *
              C339 +
          (((C63054 * C365 - C63055 * C348 - C63054 * C366 + C63050 * C384 +
             C63056 * C1985 - C63057 * C1976 - C63056 * C1986 + C63051 * C1991 +
             C63058 * C3445 - C63059 * C3441 - C63058 * C3446 + C63052 * C3453 +
             C63060 * C6272 - C63061 * C6262 - C63060 * C6273 +
             C154422 * C6280) *
                C154164 * C154373 +
            (C63393 + C63394 + C63395 + C63396) * C154164 * C154021) *
               C2114 -
           ((C63060 * C31086 - C63061 * C31083 - C63060 * C31087 +
             C154422 * C31089 + C63058 * C6268 - C63059 * C6260 -
             C63058 * C6269 + C63052 * C6278 + C63056 * C3447 - C63057 * C3442 -
             C63056 * C3448 + C63051 * C3454 + C63054 * C1983 - C63055 * C1975 -
             C63054 * C1984 + C63050 * C1990) *
                C154164 * C154021 +
            (C63060 * C31084 - C63061 * C31082 - C63060 * C31085 +
             C154422 * C31088 + C63058 * C6272 - C63059 * C6262 -
             C63058 * C6273 + C63052 * C6280 + C63056 * C3445 - C63057 * C3441 -
             C63056 * C3446 + C63051 * C3453 + C63054 * C1985 - C63055 * C1976 -
             C63054 * C1986 + C63050 * C1991) *
                C154164 * C154373) *
               C154146) *
              C340) *
         C154047) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C63054 * C144 - C63055 * C136 - C63054 * C145 + C63050 * C160 +
            C63056 * C600 - C63057 * C584 - C63056 * C601 + C63051 * C620 +
            C63058 * C602 - C63059 * C585 - C63058 * C603 + C63052 * C621 +
            C63060 * C2337 - C63061 * C2328 - C63060 * C2338 +
            C154422 * C2343) *
               C154164 * C154373 +
           (C63135 + C63136 + C63137 + C63138) * C154164 * C154021) *
              C2320 -
          ((C63639 + C63640 + C63641 + C63642) * C154164 * C154021 +
           (C63060 * C7777 - C63061 * C7773 - C63060 * C7778 + C154422 * C7785 +
            C63058 * C2337 - C63059 * C2328 - C63058 * C2338 + C63052 * C2343 +
            C63056 * C602 - C63057 * C585 - C63056 * C603 + C63051 * C621 +
            C63054 * C600 - C63055 * C584 - C63054 * C601 + C63050 * C620) *
               C154164 * C154373) *
              C2321 +
          ((C63054 * C602 - C63055 * C585 - C63054 * C603 + C63050 * C621 +
            C63056 * C2337 - C63057 * C2328 - C63056 * C2338 + C63051 * C2343 +
            C63058 * C7777 - C63059 * C7773 - C63058 * C7778 + C63052 * C7785 +
            C63060 * C10602 - C63061 * C10597 - C63060 * C10603 +
            C154422 * C10606) *
               C154164 * C154373 +
           (C63643 + C63644 + C63645 + C63646) * C154164 * C154021) *
              C2322 -
          ((C63060 * C55781 - C63061 * C55778 - C63060 * C55782 +
            C154422 * C55784 + C63058 * C10600 - C63059 * C10596 -
            C63058 * C10601 + C63052 * C10605 + C63056 * C7779 -
            C63057 * C7774 - C63056 * C7780 + C63051 * C7786 + C63054 * C2335 -
            C63055 * C2327 - C63054 * C2336 + C63050 * C2342) *
               C154164 * C154021 +
           (C63060 * C55779 - C63061 * C55777 - C63060 * C55780 +
            C154422 * C55783 + C63058 * C10602 - C63059 * C10597 -
            C63058 * C10603 + C63052 * C10606 + C63056 * C7777 -
            C63057 * C7773 - C63056 * C7778 + C63051 * C7785 + C63054 * C2337 -
            C63055 * C2328 - C63054 * C2338 + C63050 * C2343) *
               C154164 * C154373) *
              C2323) *
         C154066 * C154047) /
            (p * q * std::sqrt(p + q));
    d2ee[208] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
              C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
                 C24270 +
             (C19258 + C19259) * C24271 + C38629 * C154442) *
                C154373 +
            ((C15087 + C15088) * C24270 + C19212 * C24271 + C19224 * C154442) *
                C154021) *
               C154465 -
           ((C39916 * C154442 + C20558 * C24271 + (C15653 + C15654) * C24270) *
                C154021 +
            (C41701 * C154442 + (C20597 + C20598) * C24271 +
             (C15024 * C602 - C15025 * C585 - C15024 * C603 + C154268 * C621 +
              C15022 * C600 - C15023 * C584 - C15022 * C601 + C154408 * C620) *
                 C24270) *
                C154373) *
               C154466 +
           (((C15022 * C602 - C15023 * C585 - C15022 * C603 + C154408 * C621 +
              C15024 * C2337 - C15025 * C2328 - C15024 * C2338 +
              C154268 * C2343) *
                 C24270 +
             (C21403 + C21404) * C24271 + (C40733 + C40734) * C154442) *
                C154373 +
            ((C15655 + C15656) * C24270 + (C19580 + C19581) * C24271 +
             (C38948 + C38949) * C154442) *
                C154021) *
               C2630) *
              C154066 * C154384 +
          ((((C15654 + C15653) * C24270 + C20567 * C24271 + C39917 * C154442) *
                C154373 +
            ((C15652 + C15651) * C24270 + C20576 * C24271 +
             (C20601 + C20602) * C154442) *
                C154021) *
               C154466 -
           ((C19213 * C154442 + C15856 * C24271 + (C15090 + C15089) * C24270) *
                C154021 +
            (C19214 * C154442 + C19215 * C24271 + (C15088 + C15087) * C24270) *
                C154373) *
               C154465 -
           (((C15024 * C6264 - C15025 * C6258 - C15024 * C6265 +
              C154268 * C6276 + C15022 * C3449 - C15023 * C3443 -
              C15022 * C3450 + C154408 * C3455) *
                 C154442 +
             (C19583 + C19582) * C24271 + (C15658 + C15657) * C24270) *
                C154021 +
            ((C38949 + C38948) * C154442 + (C19581 + C19580) * C24271 +
             (C15656 + C15655) * C24270) *
                C154373) *
               C2630) *
              C154066 * C154053)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
             C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
                C154164 * C11465 +
            (C15087 + C15088) * C154164 * C11466 + C15101 * C11467 +
            C15102 * C154407) *
               C154465 -
           (C16077 * C154407 + C16078 * C11467 +
            (C15653 + C15654) * C154164 * C11466 +
            (C15024 * C602 - C15025 * C585 - C15024 * C603 + C154268 * C621 +
             C15022 * C600 - C15023 * C584 - C15022 * C601 + C154408 * C620) *
                C154164 * C11465) *
               C154466 +
           ((C15022 * C602 - C15023 * C585 - C15022 * C603 + C154408 * C621 +
             C15024 * C2337 - C15025 * C2328 - C15024 * C2338 +
             C154268 * C2343) *
                C154164 * C11465 +
            (C15655 + C15656) * C154164 * C11466 +
            (C15657 + C15658) * C154164 * C11467 +
            (C15659 + C15660) * C154164 * C154407) *
               C2630) *
              C154066 * C154384 +
          (((C15654 + C15653) * C154164 * C11465 +
            (C15652 + C15651) * C154164 * C11466 +
            (C15650 + C15649) * C154164 * C11467 +
            (C16083 + C16084) * C154164 * C154407) *
               C154466 -
           (C15103 * C154407 + C15104 * C11467 +
            (C15090 + C15089) * C154164 * C11466 +
            (C15088 + C15087) * C154164 * C11465) *
               C154465 -
           ((C15024 * C2329 - C15025 * C2324 - C15024 * C2330 +
             C154268 * C2339 + C15022 * C610 - C15023 * C589 - C15022 * C611 +
             C154408 * C625) *
                C154164 * C154407 +
            (C15660 + C15659) * C154164 * C11467 +
            (C15658 + C15657) * C154164 * C11466 +
            (C15656 + C15655) * C154164 * C11465) *
               C2630) *
              C154066 * C154053)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C63054 * C144 - C63055 * C136 - C63054 * C145 + C63050 * C160 +
             C63056 * C600 - C63057 * C584 - C63056 * C601 + C63051 * C620 +
             C63058 * C602 - C63059 * C585 - C63058 * C603 + C63052 * C621 +
             C63060 * C2337 - C63061 * C2328 - C63060 * C2338 +
             C154422 * C2343) *
                C154164 * C154373 +
            (C63135 + C63136 + C63137 + C63138) * C154164 * C154021) *
               C154465 -
           ((C63639 + C63640 + C63641 + C63642) * C154164 * C154021 +
            (C63060 * C7777 - C63061 * C7773 - C63060 * C7778 +
             C154422 * C7785 + C63058 * C2337 - C63059 * C2328 -
             C63058 * C2338 + C63052 * C2343 + C63056 * C602 - C63057 * C585 -
             C63056 * C603 + C63051 * C621 + C63054 * C600 - C63055 * C584 -
             C63054 * C601 + C63050 * C620) *
                C154164 * C154373) *
               C154466 +
           ((C63054 * C602 - C63055 * C585 - C63054 * C603 + C63050 * C621 +
             C63056 * C2337 - C63057 * C2328 - C63056 * C2338 + C63051 * C2343 +
             C63058 * C7777 - C63059 * C7773 - C63058 * C7778 + C63052 * C7785 +
             C63060 * C10602 - C63061 * C10597 - C63060 * C10603 +
             C154422 * C10606) *
                C154164 * C154373 +
            (C63643 + C63644 + C63645 + C63646) * C154164 * C154021) *
               C2630) *
              C154066 * C154384 +
          (((C63642 + C63641 + C63640 + C63639) * C154164 * C154373 +
            (C64087 + C64088 + C64089 + C64090) * C154164 * C154021) *
               C154466 -
           ((C63139 + C63140 + C63141 + C63142) * C154164 * C154021 +
            (C63138 + C63137 + C63136 + C63135) * C154164 * C154373) *
               C154465 -
           ((C63060 * C10598 - C63061 * C10595 - C63060 * C10599 +
             C154422 * C10604 + C63058 * C7781 - C63059 * C7775 -
             C63058 * C7782 + C63052 * C7787 + C63056 * C2333 - C63057 * C2326 -
             C63056 * C2334 + C63051 * C2341 + C63054 * C606 - C63055 * C587 -
             C63054 * C607 + C63050 * C623) *
                C154164 * C154021 +
            (C63646 + C63645 + C63644 + C63643) * C154164 * C154373) *
               C2630) *
              C154066 * C154053)) /
            (p * q * std::sqrt(p + q));
    d2ee[209] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
             C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
                C154164 * C11465 +
            (C15087 + C15088) * C154164 * C11466 + C15101 * C11467 +
            C15102 * C154407) *
               C2114 -
           (C16077 * C154407 + C16078 * C11467 +
            (C15653 + C15654) * C154164 * C11466 +
            (C15024 * C602 - C15025 * C585 - C15024 * C603 + C154268 * C621 +
             C15022 * C600 - C15023 * C584 - C15022 * C601 + C154408 * C620) *
                C154164 * C11465) *
               C154146) *
              C338 +
          (((C15022 * C1135 - C15023 * C1129 - C15022 * C1136 +
             C154408 * C1147 + C15024 * C1554 - C15025 * C1545 -
             C15024 * C1555 + C154268 * C1560) *
                C154164 * C11465 +
            (C16379 + C16380) * C154164 * C11466 +
            (C16381 + C16382) * C154164 * C11467 +
            (C16383 + C16384) * C154164 * C154407) *
               C154146 -
           (C15865 * C154407 + C15866 * C11467 +
            (C15375 + C15376) * C154164 * C11466 +
            (C15024 * C1135 - C15025 * C1129 - C15024 * C1136 +
             C154268 * C1147 + C15022 * C363 - C15023 * C347 - C15022 * C364 +
             C154408 * C383) *
                C154164 * C11465) *
               C2114) *
              C339 +
          (((C15022 * C365 - C15023 * C348 - C15022 * C366 + C154408 * C384 +
             C15024 * C1985 - C15025 * C1976 - C15024 * C1986 +
             C154268 * C1991) *
                C154164 * C11465 +
            (C15377 + C15378) * C154164 * C11466 +
            (C15379 + C15380) * C154164 * C11467 +
            (C15381 + C15382) * C154164 * C154407) *
               C2114 -
           ((C15024 * C3451 - C15025 * C3444 - C15024 * C3452 +
             C154268 * C3456 + C15022 * C1979 - C15023 * C1973 -
             C15022 * C1980 + C154408 * C1988) *
                C154164 * C154407 +
            (C15024 * C3449 - C15025 * C3443 - C15024 * C3450 +
             C154268 * C3455 + C15022 * C1981 - C15023 * C1974 -
             C15022 * C1982 + C154408 * C1989) *
                C154164 * C11467 +
            (C15024 * C3447 - C15025 * C3442 - C15024 * C3448 +
             C154268 * C3454 + C15022 * C1983 - C15023 * C1975 -
             C15022 * C1984 + C154408 * C1990) *
                C154164 * C11466 +
            (C15024 * C3445 - C15025 * C3441 - C15024 * C3446 +
             C154268 * C3453 + C15022 * C1985 - C15023 * C1976 -
             C15022 * C1986 + C154408 * C1991) *
                C154164 * C11465) *
               C154146) *
              C340) *
         C154047) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
             C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
                C154164 * C11465 +
            (C15087 + C15088) * C154164 * C11466 + C15101 * C11467 +
            C15102 * C154407) *
               C2114 -
           (C16077 * C154407 + C16078 * C11467 +
            (C15653 + C15654) * C154164 * C11466 +
            (C15024 * C602 - C15025 * C585 - C15024 * C603 + C154268 * C621 +
             C15022 * C600 - C15023 * C584 - C15022 * C601 + C154408 * C620) *
                C154164 * C11465) *
               C154146) *
              C154066 * C1309 +
          (((C15654 + C15653) * C154164 * C11465 +
            (C15652 + C15651) * C154164 * C11466 +
            (C15650 + C15649) * C154164 * C11467 +
            (C16083 + C16084) * C154164 * C154407) *
               C154146 -
           (C15103 * C154407 + C15104 * C11467 +
            (C15090 + C15089) * C154164 * C11466 +
            (C15088 + C15087) * C154164 * C11465) *
               C2114) *
              C154066 * C1310 +
          ((C15101 * C11465 + C15102 * C11466 +
            (C15094 + C15093) * C154164 * C11467 +
            (C15095 + C15096) * C154164 * C154407) *
               C2114 -
           ((C15024 * C614 - C15025 * C591 - C15024 * C615 + C154268 * C627 +
             C15022 * C612 - C15023 * C590 - C15022 * C613 + C154408 * C626) *
                C154164 * C154407 +
            (C16084 + C16083) * C154164 * C11467 + C16077 * C11466 +
            C16078 * C11465) *
               C154146) *
              C154066 * C1311)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
              C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
                 C24270 +
             (C19258 + C19259) * C24271 + C38629 * C154442) *
                C154373 +
            ((C15087 + C15088) * C24270 + C19212 * C24271 + C19224 * C154442) *
                C154021) *
               C2114 -
           ((C39916 * C154442 + C20558 * C24271 + (C15653 + C15654) * C24270) *
                C154021 +
            (C41701 * C154442 + (C20597 + C20598) * C24271 +
             (C15024 * C602 - C15025 * C585 - C15024 * C603 + C154268 * C621 +
              C15022 * C600 - C15023 * C584 - C15022 * C601 + C154408 * C620) *
                 C24270) *
                C154373) *
               C154146) *
              C154066 * C1309 +
          ((((C15654 + C15653) * C24270 + C20567 * C24271 + C39917 * C154442) *
                C154373 +
            ((C15652 + C15651) * C24270 + C20576 * C24271 +
             (C20601 + C20602) * C154442) *
                C154021) *
               C154146 -
           ((C19213 * C154442 + C15856 * C24271 + (C15090 + C15089) * C24270) *
                C154021 +
            (C19214 * C154442 + C19215 * C24271 + (C15088 + C15087) * C24270) *
                C154373) *
               C2114) *
              C154066 * C1310 +
          (((C15097 * C24270 + C18908 * C24271 + C19233 * C154442) * C154373 +
            (C15098 * C24270 + C19876 * C24271 + (C15381 + C15382) * C154442) *
                C154021) *
               C2114 -
           (((C15024 * C3451 - C15025 * C3444 - C15024 * C3452 +
              C154268 * C3456 + C15022 * C1979 - C15023 * C1973 -
              C15022 * C1980 + C154408 * C1988) *
                 C154442 +
             (C16384 + C16383) * C24271 + C16067 * C24270) *
                C154021 +
            ((C20602 + C20601) * C154442 + C20168 * C24271 + C16068 * C24270) *
                C154373) *
               C154146) *
              C154066 * C1311)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
              C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
                 C24270 +
             (C19258 + C19259) * C24271 + C38629 * C154442) *
                C154373 +
            ((C15087 + C15088) * C24270 + C19212 * C24271 + C19224 * C154442) *
                C154021) *
               C2114 -
           ((C39916 * C154442 + C20558 * C24271 + (C15653 + C15654) * C24270) *
                C154021 +
            (C41701 * C154442 + (C20597 + C20598) * C24271 +
             (C15024 * C602 - C15025 * C585 - C15024 * C603 + C154268 * C621 +
              C15022 * C600 - C15023 * C584 - C15022 * C601 + C154408 * C620) *
                 C24270) *
                C154373) *
               C154146) *
              C338 +
          ((((C20598 + C20597) * C24270 + (C22383 + C22384) * C24271 +
             (C41714 + C41715) * C154442) *
                C154373 +
            (C20567 * C24270 + C39917 * C24271 + (C39930 + C39931) * C154442) *
                C154021) *
               C154146 -
           ((C38630 * C154442 + C19214 * C24271 + C19215 * C24270) * C154021 +
            (C40416 * C154442 + (C19260 + C19261) * C24271 +
             (C19259 + C19258) * C24270) *
                C154373) *
               C2114) *
              C339 +
          (((C38629 * C24270 + (C21099 + C21100) * C24271 +
             (C40429 + C40430) * C154442) *
                C154373 +
            (C19224 * C24270 + C38631 * C24271 + (C38644 + C38645) * C154442) *
                C154021) *
               C2114 -
           (((C15024 * C28468 - C15025 * C28465 - C15024 * C28469 +
              C154268 * C28471 + C15022 * C5662 - C15023 * C5658 -
              C15022 * C5663 + C154408 * C5667) *
                 C154442 +
             (C39931 + C39930) * C24271 + C39916 * C24270) *
                C154021 +
            ((C15024 * C28466 - C15025 * C28464 - C15024 * C28467 +
              C154268 * C28470 + C15022 * C5664 - C15023 * C5659 -
              C15022 * C5665 + C154408 * C5668) *
                 C154442 +
             (C41715 + C41714) * C24271 + C41701 * C24270) *
                C154373) *
               C154146) *
              C340) *
         C154047) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C63054 * C144 - C63055 * C136 - C63054 * C145 + C63050 * C160 +
             C63056 * C600 - C63057 * C584 - C63056 * C601 + C63051 * C620 +
             C63058 * C602 - C63059 * C585 - C63058 * C603 + C63052 * C621 +
             C63060 * C2337 - C63061 * C2328 - C63060 * C2338 +
             C154422 * C2343) *
                C154164 * C154373 +
            (C63135 + C63136 + C63137 + C63138) * C154164 * C154021) *
               C2114 -
           ((C63639 + C63640 + C63641 + C63642) * C154164 * C154021 +
            (C63060 * C7777 - C63061 * C7773 - C63060 * C7778 +
             C154422 * C7785 + C63058 * C2337 - C63059 * C2328 -
             C63058 * C2338 + C63052 * C2343 + C63056 * C602 - C63057 * C585 -
             C63056 * C603 + C63051 * C621 + C63054 * C600 - C63055 * C584 -
             C63054 * C601 + C63050 * C620) *
                C154164 * C154373) *
               C154146) *
              C154066 * C1309 +
          (((C63642 + C63641 + C63640 + C63639) * C154164 * C154373 +
            (C64087 + C64088 + C64089 + C64090) * C154164 * C154021) *
               C154146 -
           ((C63139 + C63140 + C63141 + C63142) * C154164 * C154021 +
            (C63138 + C63137 + C63136 + C63135) * C154164 * C154373) *
               C2114) *
              C154066 * C1310 +
          (((C63142 + C63141 + C63140 + C63139) * C154164 * C154373 +
            (C63143 + C63144 + C63145 + C63146) * C154164 * C154021) *
               C2114 -
           ((C63060 * C7783 - C63061 * C7776 - C63060 * C7784 +
             C154422 * C7788 + C63058 * C2331 - C63059 * C2325 -
             C63058 * C2332 + C63052 * C2340 + C63056 * C608 - C63057 * C588 -
             C63056 * C609 + C63051 * C624 + C63054 * C594 - C63055 * C581 -
             C63054 * C595 + C63050 * C617) *
                C154164 * C154021 +
            (C64090 + C64089 + C64088 + C64087) * C154164 * C154373) *
               C154146) *
              C154066 * C1311)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C63054 * C144 - C63055 * C136 - C63054 * C145 + C63050 * C160 +
             C63056 * C600 - C63057 * C584 - C63056 * C601 + C63051 * C620 +
             C63058 * C602 - C63059 * C585 - C63058 * C603 + C63052 * C621 +
             C63060 * C2337 - C63061 * C2328 - C63060 * C2338 +
             C154422 * C2343) *
                C154164 * C154373 +
            (C63135 + C63136 + C63137 + C63138) * C154164 * C154021) *
               C2114 -
           ((C63639 + C63640 + C63641 + C63642) * C154164 * C154021 +
            (C63060 * C7777 - C63061 * C7773 - C63060 * C7778 +
             C154422 * C7785 + C63058 * C2337 - C63059 * C2328 -
             C63058 * C2338 + C63052 * C2343 + C63056 * C602 - C63057 * C585 -
             C63056 * C603 + C63051 * C621 + C63054 * C600 - C63055 * C584 -
             C63054 * C601 + C63050 * C620) *
                C154164 * C154373) *
               C154146) *
              C338 +
          (((C63054 * C1135 - C63055 * C1129 - C63054 * C1136 + C63050 * C1147 +
             C63056 * C1554 - C63057 * C1545 - C63056 * C1555 + C63051 * C1560 +
             C63058 * C6274 - C63059 * C6263 - C63058 * C6275 + C63052 * C6281 +
             C63060 * C9282 - C63061 * C9277 - C63060 * C9283 +
             C154422 * C9286) *
                C154164 * C154373 +
            (C64373 + C64374 + C64375 + C64376) * C154164 * C154021) *
               C154146 -
           ((C63389 + C63390 + C63391 + C63392) * C154164 * C154021 +
            (C63060 * C6274 - C63061 * C6263 - C63060 * C6275 +
             C154422 * C6281 + C63058 * C1554 - C63059 * C1545 -
             C63058 * C1555 + C63052 * C1560 + C63056 * C1135 - C63057 * C1129 -
             C63056 * C1136 + C63051 * C1147 + C63054 * C363 - C63055 * C347 -
             C63054 * C364 + C63050 * C383) *
                C154164 * C154373) *
               C2114) *
              C339 +
          (((C63054 * C365 - C63055 * C348 - C63054 * C366 + C63050 * C384 +
             C63056 * C1985 - C63057 * C1976 - C63056 * C1986 + C63051 * C1991 +
             C63058 * C3445 - C63059 * C3441 - C63058 * C3446 + C63052 * C3453 +
             C63060 * C6272 - C63061 * C6262 - C63060 * C6273 +
             C154422 * C6280) *
                C154164 * C154373 +
            (C63393 + C63394 + C63395 + C63396) * C154164 * C154021) *
               C2114 -
           ((C63060 * C31086 - C63061 * C31083 - C63060 * C31087 +
             C154422 * C31089 + C63058 * C6268 - C63059 * C6260 -
             C63058 * C6269 + C63052 * C6278 + C63056 * C3447 - C63057 * C3442 -
             C63056 * C3448 + C63051 * C3454 + C63054 * C1983 - C63055 * C1975 -
             C63054 * C1984 + C63050 * C1990) *
                C154164 * C154021 +
            (C63060 * C31084 - C63061 * C31082 - C63060 * C31085 +
             C154422 * C31088 + C63058 * C6272 - C63059 * C6262 -
             C63058 * C6273 + C63052 * C6280 + C63056 * C3445 - C63057 * C3441 -
             C63056 * C3446 + C63051 * C3453 + C63054 * C1985 - C63055 * C1976 -
             C63054 * C1986 + C63050 * C1991) *
                C154164 * C154373) *
               C154146) *
              C340) *
         C154047) /
            (p * q * std::sqrt(p + q));
    d2ee[210] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C154480 +
             C3210 * C154468 + C3211 * C154442) *
                C2902 +
            (C2906 + C2907 + C2908) * C2903 + C2920 * C154429) *
               C154082 * C154392 -
           (C3734 * C154429 + (C3219 + C3174 + C3175) * C2903 +
            (C3214 * C154442 + C3211 * C154468 + C3210 * C154480) * C2902) *
               C154082 * C154118) *
              C154461 +
          (((C3175 + C3174 + C3219) * C2902 + (C3169 + C3168 + C3218) * C2903 +
            (C3731 + C3732 + C3733) * C154429) *
               C154082 * C154118 -
           (C2921 * C154429 + (C2911 + C2910 + C2909) * C2903 +
            (C2908 + C2907 + C2906) * C2902) *
               C154082 * C154392) *
              C154462 +
          ((C2920 * C2902 + (C2914 + C2913 + C2912) * C2903 +
            (C2915 + C2916 + C2917) * C154429) *
               C154082 * C154392 -
           (((C134 * C1404 - C135 * C1399 - C134 * C1405 + C154181 * C1414) *
                 C154442 +
             C447 * C154468 + C440 * C154480) *
                C154429 +
            (C3733 + C3732 + C3731) * C2903 + C3734 * C2902) *
               C154082 * C154118) *
              C818)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                C154164 * C123 +
            C211 * C124 + C212 * C125 + C213 * C126 + C214 * C127) *
               C154082 * C154392 -
           (C448 * C127 + C449 * C126 + C450 * C125 + C451 * C124 +
            (C134 * C363 - C135 * C347 - C134 * C364 + C154181 * C383) *
                C154164 * C123) *
               C154082 * C154118) *
              C154461 +
          ((C451 * C123 + C450 * C124 + C449 * C125 + C448 * C126 +
            C831 * C127) *
               C154082 * C154118 -
           (C215 * C127 + C214 * C126 + C213 * C125 + C212 * C124 +
            C211 * C123) *
               C154082 * C154392) *
              C154462 +
          ((C212 * C123 + C213 * C124 + C214 * C125 + C215 * C126 +
            C216 * C127) *
               C154082 * C154392 -
           ((C134 * C820 - C135 * C819 - C134 * C821 + C154181 * C822) *
                C154164 * C127 +
            C831 * C126 + C448 * C125 + C449 * C124 + C450 * C123) *
               C154082 * C154118) *
              C818)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C24270 +
             C3210 * C24271 + C3211 * C154442) *
                C154477 +
            (C24277 + C24278 + C24279) * C154458 + C24291 * C154429) *
               C154082 * C154392 -
           (C24975 * C154429 + (C24514 + C24515 + C24516) * C154458 +
            (C3214 * C154442 + C3211 * C24271 + C3210 * C24270) * C154477) *
               C154082 * C154118) *
              C154461 +
          (((C24516 + C24515 + C24514) * C154477 +
            (C24513 + C24512 + C24511) * C154458 +
            (C24972 + C24973 + C24974) * C154429) *
               C154082 * C154118 -
           (C24292 * C154429 + (C24282 + C24281 + C24280) * C154458 +
            (C24279 + C24278 + C24277) * C154477) *
               C154082 * C154392) *
              C154462 +
          ((C24291 * C154477 + (C24285 + C24284 + C24283) * C154458 +
            (C24286 + C24287 + C24288) * C154429) *
               C154082 * C154392 -
           (((C134 * C1404 - C135 * C1399 - C134 * C1405 + C154181 * C1414) *
                 C154442 +
             C447 * C24271 + C440 * C24270) *
                C154429 +
            (C24974 + C24973 + C24972) * C154458 + C24975 * C154477) *
               C154082 * C154118) *
              C818)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                C28192 +
            C3210 * C28193 + C3211 * C28194 + C3214 * C28195 + C4687 * C28196) *
               C154011 * C154082 * C154392 -
           (C28341 * C28196 + C4687 * C28195 + C3214 * C28194 + C3211 * C28193 +
            C3210 * C28192) *
               C154011 * C154082 * C154118) *
              C154461 +
          ((C443 * C28192 + C444 * C28193 + C3213 * C28194 + C3215 * C28195 +
            C28342 * C28196) *
               C154011 * C154082 * C154118 -
           (C3215 * C28196 + C3213 * C28195 + C444 * C28194 + C443 * C28193 +
            C205 * C28192) *
               C154011 * C154082 * C154392) *
              C154462 +
          ((C206 * C28192 + C442 * C28193 + C445 * C28194 + C3212 * C28195 +
            C3216 * C28196) *
               C154011 * C154082 * C154392 -
           ((C134 * C4671 - C135 * C4668 - C134 * C4672 + C154181 * C4677) *
                C28196 +
            C3216 * C28195 + C3212 * C28194 + C445 * C28193 + C442 * C28192) *
               C154011 * C154082 * C154118) *
              C818)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C47141 * C144 - C47142 * C136 - C47141 * C145 + C47138 * C160 +
             C47143 * C600 - C47144 * C584 - C47143 * C601 + C47139 * C620 +
             C47145 * C602 - C47146 * C585 - C47145 * C603 + C154445 * C621) *
                C154164 * C154477 +
            (C47220 + C47221 + C47222) * C154164 * C154458 + C47236 * C154429) *
               C154082 * C154392 -
           (C48077 * C154429 + (C47531 + C47532 + C47533) * C154164 * C154458 +
            (C47145 * C1554 - C47146 * C1545 - C47145 * C1555 +
             C154445 * C1560 + C47143 * C1135 - C47144 * C1129 -
             C47143 * C1136 + C47139 * C1147 + C47141 * C363 - C47142 * C347 -
             C47141 * C364 + C47138 * C383) *
                C154164 * C154477) *
               C154082 * C154118) *
              C154461 +
          (((C47533 + C47532 + C47531) * C154164 * C154477 +
            (C47530 + C47529 + C47528) * C154164 * C154458 +
            (C48081 + C48082 + C48083) * C154164 * C154429) *
               C154082 * C154118 -
           (C47237 * C154429 + (C47225 + C47224 + C47223) * C154164 * C154458 +
            (C47222 + C47221 + C47220) * C154164 * C154477) *
               C154082 * C154392) *
              C154462 +
          ((C47236 * C154477 + (C47228 + C47227 + C47226) * C154164 * C154458 +
            (C47229 + C47230 + C47231) * C154164 * C154429) *
               C154082 * C154392 -
           ((C47145 * C1546 - C47146 * C1541 - C47145 * C1547 +
             C154445 * C1556 + C47143 * C1143 - C47144 * C1133 -
             C47143 * C1144 + C47139 * C1151 + C47141 * C355 - C47142 * C343 -
             C47141 * C356 + C47138 * C379) *
                C154164 * C154429 +
            (C48083 + C48082 + C48081) * C154164 * C154458 + C48077 * C154477) *
               C154082 * C154118) *
              C818)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C47141 * C144 - C47142 * C136 - C47141 * C145 + C47138 * C160 +
             C47143 * C600 - C47144 * C584 - C47143 * C601 + C47139 * C620 +
             C47145 * C602 - C47146 * C585 - C47145 * C603 + C154445 * C621) *
                C154480 +
            (C51712 + C51713 + C51714) * C154468 + C51725 * C154442) *
               C154011 * C154082 * C154392 -
           ((C51718 + C51719 + C51720) * C154442 +
            (C51717 + C51716 + C51715) * C154468 +
            (C51714 + C51713 + C51712) * C154480) *
               C154011 * C154082 * C154118) *
              C154461 +
          (((C47533 + C47532 + C47531) * C154480 +
            (C47534 + C47535 + C47536) * C154468 +
            (C51721 + C51722 + C51723) * C154442) *
               C154011 * C154082 * C154118 -
           (C51699 * C154442 + (C47531 + C47532 + C47533) * C154468 +
            (C47222 + C47221 + C47220) * C154480) *
               C154011 * C154082 * C154392) *
              C154462 +
          ((C47234 * C154480 + (C47530 + C47529 + C47528) * C154468 +
            (C47537 + C47538 + C47539) * C154442) *
               C154011 * C154082 * C154392 -
           ((C47145 * C4908 - C47146 * C4905 - C47145 * C4909 +
             C154445 * C4914 + C47143 * C4262 - C47144 * C4256 -
             C47143 * C4263 + C47139 * C4268 + C47141 * C1408 - C47142 * C1401 -
             C47141 * C1409 + C47138 * C1416) *
                C154442 +
            (C47539 + C47538 + C47537) * C154468 + C48073 * C154480) *
               C154011 * C154082 * C154118) *
              C818)) /
            (p * q * std::sqrt(p + q));
    d2ee[211] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                  C154480 +
              C3210 * C154468 + C3211 * C154442) *
                 C2902 +
             (C2906 + C2907 + C2908) * C2903 + C2920 * C154429) *
                C154393 -
            (C3960 * C154429 + (C3507 + C3468 + C3469) * C2903 +
             (C4299 * C154442 + C4300 * C154468 +
              (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                  C154480) *
                 C2902) *
                C154146) *
               C154392 +
           (((C4300 * C154480 + C4299 * C154468 +
              (C134 * C4258 - C135 * C4254 - C134 * C4259 + C154181 * C4266) *
                  C154442) *
                 C2902 +
             (C4279 + C4280 + C4303) * C2903 +
             (C4285 + C4286 + C4304) * C154429) *
                C154146 -
            (C3734 * C154429 + (C3219 + C3174 + C3175) * C2903 +
             (C3214 * C154442 + C3211 * C154468 + C3210 * C154480) * C2902) *
                C154393) *
               C154118) *
              C341 +
          ((((C3469 + C3468 + C3507) * C2902 + (C3463 + C3462 + C3506) * C2903 +
             (C3954 + C3955 + C3964) * C154429) *
                C154146 -
            (C2921 * C154429 + (C2911 + C2910 + C2909) * C2903 +
             (C2908 + C2907 + C2906) * C2902) *
                C154393) *
               C154392 +
           (((C3175 + C3174 + C3219) * C2902 + (C3169 + C3168 + C3218) * C2903 +
             (C3731 + C3732 + C3733) * C154429) *
                C154393 -
            (((C134 * C4264 - C135 * C4257 - C134 * C4265 + C154181 * C4269) *
                  C154442 +
              C3963 * C154468 + C1180 * C154480) *
                 C154429 +
             (C4304 + C4286 + C4285) * C2903 +
             (C4303 + C4280 + C4279) * C2902) *
                C154146) *
               C154118) *
              C154053)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C154164 * C123 +
             C211 * C124 + C212 * C125 + C213 * C126 + C214 * C127) *
                C154393 -
            (C685 * C127 + C686 * C126 + C687 * C125 + C688 * C124 +
             (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                 C154164 * C123) *
                C154146) *
               C154392 +
           (((C134 * C1135 - C135 * C1129 - C134 * C1136 + C154181 * C1147) *
                 C154164 * C123 +
             C1182 * C124 + C1183 * C125 + C1184 * C126 + C1185 * C127) *
                C154146 -
            (C448 * C127 + C449 * C126 + C450 * C125 + C451 * C124 +
             (C134 * C363 - C135 * C347 - C134 * C364 + C154181 * C383) *
                 C154164 * C123) *
                C154393) *
               C154118) *
              C341 +
          (((C688 * C123 + C687 * C124 + C686 * C125 + C685 * C126 +
             C967 * C127) *
                C154146 -
            (C215 * C127 + C214 * C126 + C213 * C125 + C212 * C124 +
             C211 * C123) *
                C154393) *
               C154392 +
           ((C451 * C123 + C450 * C124 + C449 * C125 + C448 * C126 +
             C831 * C127) *
                C154393 -
            ((C134 * C1145 - C135 * C1134 - C134 * C1146 + C154181 * C1152) *
                 C154164 * C127 +
             C1185 * C126 + C1184 * C125 + C1183 * C124 + C1182 * C123) *
                C154146) *
               C154118) *
              C154053)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                  C24270 +
              C3210 * C24271 + C3211 * C154442) *
                 C154477 +
             (C24277 + C24278 + C24279) * C154458 + C24291 * C154429) *
                C154393 -
            (C25198 * C154429 + (C24744 + C24745 + C24746) * C154458 +
             (C4299 * C154442 + C4300 * C24271 +
              (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                  C24270) *
                 C154477) *
                C154146) *
               C154392 +
           (((C4300 * C24270 + C4299 * C24271 + C5676 * C154442) * C154477 +
             (C25489 + C25490 + C25491) * C154458 +
             (C25492 + C25493 + C25494) * C154429) *
                C154146 -
            (C24975 * C154429 + (C24514 + C24515 + C24516) * C154458 +
             (C3214 * C154442 + C3211 * C24271 + C3210 * C24270) * C154477) *
                C154393) *
               C154118) *
              C341 +
          ((((C24746 + C24745 + C24744) * C154477 +
             (C24743 + C24742 + C24741) * C154458 +
             (C25195 + C25196 + C25197) * C154429) *
                C154146 -
            (C24292 * C154429 + (C24282 + C24281 + C24280) * C154458 +
             (C24279 + C24278 + C24277) * C154477) *
                C154393) *
               C154392 +
           (((C24516 + C24515 + C24514) * C154477 +
             (C24513 + C24512 + C24511) * C154458 +
             (C24972 + C24973 + C24974) * C154429) *
                C154393 -
            (((C134 * C4264 - C135 * C4257 - C134 * C4265 + C154181 * C4269) *
                  C154442 +
              C3963 * C24271 + C1180 * C24270) *
                 C154429 +
             (C25494 + C25493 + C25492) * C154458 +
             (C25491 + C25490 + C25489) * C154477) *
                C154146) *
               C154118) *
              C154053)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C28192 +
             C3210 * C28193 + C3211 * C28194 + C3214 * C28195 +
             C4687 * C28196) *
                C154011 * C154393 -
            (C28899 * C28196 + C5676 * C28195 + C4299 * C28194 +
             C4300 * C28193 +
             (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                 C28192) *
                C154011 * C154146) *
               C154392 +
           ((C4300 * C28192 + C4299 * C28193 + C5676 * C28194 +
             C28899 * C28195 +
             (C134 * C28880 - C135 * C28878 - C134 * C28881 +
              C154181 * C28884) *
                 C28196) *
                C154011 * C154146 -
            (C28341 * C28196 + C4687 * C28195 + C3214 * C28194 +
             C3211 * C28193 + C3210 * C28192) *
                C154011 * C154393) *
               C154118) *
              C341 +
          (((C680 * C28192 + C1178 * C28193 + C3501 * C28194 + C4301 * C28195 +
             C28900 * C28196) *
                C154011 * C154146 -
            (C3215 * C28196 + C3213 * C28195 + C444 * C28194 + C443 * C28193 +
             C205 * C28192) *
                C154011 * C154393) *
               C154392 +
           ((C443 * C28192 + C444 * C28193 + C3213 * C28194 + C3215 * C28195 +
             C28342 * C28196) *
                C154011 * C154393 -
            ((C134 * C28882 - C135 * C28879 - C134 * C28883 +
              C154181 * C28885) *
                 C28196 +
             C28900 * C28195 + C4301 * C28194 + C3501 * C28193 +
             C1178 * C28192) *
                C154011 * C154146) *
               C154118) *
              C154053)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C47141 * C144 - C47142 * C136 - C47141 * C145 + C47138 * C160 +
              C47143 * C600 - C47144 * C584 - C47143 * C601 + C47139 * C620 +
              C47145 * C602 - C47146 * C585 - C47145 * C603 + C154445 * C621) *
                 C154164 * C154477 +
             (C47220 + C47221 + C47222) * C154164 * C154458 +
             C47236 * C154429) *
                C154393 -
            (C48319 * C154429 + (C47833 + C47834 + C47835) * C154164 * C154458 +
             (C47145 * C2337 - C47146 * C2328 - C47145 * C2338 +
              C154445 * C2343 + C47143 * C602 - C47144 * C585 - C47143 * C603 +
              C47139 * C621 + C47141 * C600 - C47142 * C584 - C47141 * C601 +
              C47138 * C620) *
                 C154164 * C154477) *
                C154146) *
               C154392 +
           (((C47141 * C1135 - C47142 * C1129 - C47141 * C1136 +
              C47138 * C1147 + C47143 * C1554 - C47144 * C1545 -
              C47143 * C1555 + C47139 * C1560 + C47145 * C6274 -
              C47146 * C6263 - C47145 * C6275 + C154445 * C6281) *
                 C154164 * C154477 +
             (C48652 + C48653 + C48654) * C154164 * C154458 +
             (C48655 + C48656 + C48657) * C154164 * C154429) *
                C154146 -
            (C48077 * C154429 + (C47531 + C47532 + C47533) * C154164 * C154458 +
             (C47145 * C1554 - C47146 * C1545 - C47145 * C1555 +
              C154445 * C1560 + C47143 * C1135 - C47144 * C1129 -
              C47143 * C1136 + C47139 * C1147 + C47141 * C363 - C47142 * C347 -
              C47141 * C364 + C47138 * C383) *
                 C154164 * C154477) *
                C154393) *
               C154118) *
              C341 +
          ((((C47835 + C47834 + C47833) * C154164 * C154477 +
             (C47832 + C47831 + C47830) * C154164 * C154458 +
             (C48323 + C48324 + C48325) * C154164 * C154429) *
                C154146 -
            (C47237 * C154429 + (C47225 + C47224 + C47223) * C154164 * C154458 +
             (C47222 + C47221 + C47220) * C154164 * C154477) *
                C154393) *
               C154392 +
           (((C47533 + C47532 + C47531) * C154164 * C154477 +
             (C47530 + C47529 + C47528) * C154164 * C154458 +
             (C48081 + C48082 + C48083) * C154164 * C154429) *
                C154393 -
            ((C47145 * C8648 - C47146 * C8647 - C47145 * C8649 +
              C154445 * C8650 + C47143 * C1548 - C47144 * C1542 -
              C47143 * C1549 + C47139 * C1557 + C47141 * C1141 -
              C47142 * C1132 - C47141 * C1142 + C47138 * C1150) *
                 C154164 * C154429 +
             (C48657 + C48656 + C48655) * C154164 * C154458 +
             (C48654 + C48653 + C48652) * C154164 * C154477) *
                C154146) *
               C154118) *
              C154053)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C47141 * C144 - C47142 * C136 - C47141 * C145 + C47138 * C160 +
              C47143 * C600 - C47144 * C584 - C47143 * C601 + C47139 * C620 +
              C47145 * C602 - C47146 * C585 - C47145 * C603 + C154445 * C621) *
                 C154480 +
             (C51712 + C51713 + C51714) * C154468 + C51725 * C154442) *
                C154011 * C154393 -
            ((C52724 + C52725 + C52726) * C154442 +
             (C52727 + C52728 + C52729) * C154468 +
             (C47145 * C2337 - C47146 * C2328 - C47145 * C2338 +
              C154445 * C2343 + C47143 * C602 - C47144 * C585 - C47143 * C603 +
              C47139 * C621 + C47141 * C600 - C47142 * C584 - C47141 * C601 +
              C47138 * C620) *
                 C154480) *
                C154011 * C154146) *
               C154392 +
           (((C52729 + C52728 + C52727) * C154480 +
             (C52726 + C52725 + C52724) * C154468 +
             (C47141 * C4258 - C47142 * C4254 - C47141 * C4259 +
              C47138 * C4266 + C47143 * C4912 - C47144 * C4907 -
              C47143 * C4913 + C47139 * C4916 + C47145 * C30002 -
              C47146 * C29999 - C47145 * C30003 + C154445 * C30005) *
                 C154442) *
                C154011 * C154146 -
            ((C51718 + C51719 + C51720) * C154442 +
             (C51717 + C51716 + C51715) * C154468 +
             (C51714 + C51713 + C51712) * C154480) *
                C154011 * C154393) *
               C154118) *
              C341 +
          ((((C47835 + C47834 + C47833) * C154480 +
             (C48652 + C48653 + C48654) * C154468 +
             (C52730 + C52731 + C52732) * C154442) *
                C154011 * C154146 -
            (C51699 * C154442 + (C47531 + C47532 + C47533) * C154468 +
             (C47222 + C47221 + C47220) * C154480) *
                C154011 * C154393) *
               C154392 +
           (((C47533 + C47532 + C47531) * C154480 +
             (C47534 + C47535 + C47536) * C154468 +
             (C51721 + C51722 + C51723) * C154442) *
                C154011 * C154393 -
            ((C47145 * C31817 - C47146 * C31816 - C47145 * C31818 +
              C154445 * C31819 + C47143 * C4910 - C47144 * C4906 -
              C47143 * C4911 + C47139 * C4915 + C47141 * C4260 -
              C47142 * C4255 - C47141 * C4261 + C47138 * C4267) *
                 C154442 +
             (C52732 + C52731 + C52730) * C154468 +
             (C48654 + C48653 + C48652) * C154480) *
                C154011 * C154146) *
               C154118) *
              C154053)) /
            (p * q * std::sqrt(p + q));
    d2ee[212] +=
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             (((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                   C154164 * C123 +
               C211 * C124 + C212 * C125 + C213 * C126 + C214 * C127) *
                  C154082 * C154066 * C130 -
              (C215 * C127 + C214 * C126 + C213 * C125 + C212 * C124 +
               C211 * C123) *
                  C154082 * C154066 * C131 +
              (C212 * C123 + C213 * C124 + C214 * C125 + C215 * C126 +
               C216 * C127) *
                  C154082 * C154066 * C132 -
              ((C134 * C158 - C135 * C143 - C134 * C159 + C154181 * C167) *
                   C154164 * C127 +
               C216 * C126 + C215 * C125 + C214 * C124 + C213 * C123) *
                  C154082 * C154066 * C133) +
         std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             ((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                    C154164 * C123 +
                C211 * C124 + C212 * C125 + C213 * C126 + C214 * C127) *
                   C154082 * C338 -
               (C448 * C127 + C449 * C126 + C450 * C125 + C451 * C124 +
                (C134 * C363 - C135 * C347 - C134 * C364 + C154181 * C383) *
                    C154164 * C123) *
                   C154082 * C339 +
               ((C134 * C365 - C135 * C348 - C134 * C366 + C154181 * C384) *
                    C154164 * C123 +
                C452 * C124 + C453 * C125 + C454 * C126 + C455 * C127) *
                   C154082 * C340) *
                  C341 +
              ((C451 * C123 + C450 * C124 + C449 * C125 + C448 * C126 +
                (C134 * C375 - C135 * C353 - C134 * C376 + C154181 * C389) *
                    C154164 * C127) *
                   C154082 * C339 -
               (C215 * C127 + C214 * C126 + C213 * C125 + C212 * C124 +
                C211 * C123) *
                   C154082 * C338 -
               ((C134 * C377 - C135 * C354 - C134 * C378 + C154181 * C390) *
                    C154164 * C127 +
                C455 * C126 + C454 * C125 + C453 * C124 + C452 * C123) *
                   C154082 * C340) *
                  C154053)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                C154164 * C123 +
            C211 * C124 + C212 * C125 + C213 * C126 + C214 * C127) *
               C577 -
           (C685 * C127 + C686 * C126 + C687 * C125 + C688 * C124 +
            (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                C154164 * C123) *
               C578 +
           ((C134 * C602 - C135 * C585 - C134 * C603 + C154181 * C621) *
                C154164 * C123 +
            C689 * C124 + C690 * C125 + C691 * C126 + C692 * C127) *
               C579) *
              C154066 * C341 +
          ((C688 * C123 + C687 * C124 + C686 * C125 + C685 * C126 +
            (C134 * C612 - C135 * C590 - C134 * C613 + C154181 * C626) *
                C154164 * C127) *
               C578 -
           (C215 * C127 + C214 * C126 + C213 * C125 + C212 * C124 +
            C211 * C123) *
               C577 -
           ((C134 * C614 - C135 * C591 - C134 * C615 + C154181 * C627) *
                C154164 * C127 +
            C692 * C126 + C691 * C125 + C690 * C124 + C689 * C123) *
               C579) *
              C154066 * C154053)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                C154480 +
            (C134 * C363 - C135 * C347 - C134 * C364 + C154181 * C383) *
                C154468 +
            (C134 * C365 - C135 * C348 - C134 * C366 + C154181 * C384) *
                C154442) *
               C2902 +
           (C2906 + C2907 + C2908) * C2903 + C2920 * C154429) *
              C154082 * C154066 * C130 -
          (C2921 * C154429 + (C2911 + C2910 + C2909) * C2903 +
           (C2908 + C2907 + C2906) * C2902) *
              C154082 * C154066 * C131 +
          (C2920 * C2902 + (C2914 + C2913 + C2912) * C2903 +
           (C2915 + C2916 + C2917) * C154429) *
              C154082 * C154066 * C132 -
          (((C134 * C377 - C135 * C354 - C134 * C378 + C154181 * C390) *
                C154442 +
            C830 * C154468 + C209 * C154480) *
               C154429 +
           (C2917 + C2916 + C2915) * C2903 + C2921 * C2902) *
              C154082 * C154066 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C154480 +
             C3210 * C154468 + C3211 * C154442) *
                C2902 +
            (C2906 + C2907 + C2908) * C2903 + C2920 * C154429) *
               C154082 * C338 -
           ((C3218 + C3168 + C3169) * C154429 +
            (C3219 + C3174 + C3175) * C2903 +
            (C3214 * C154442 + C3211 * C154468 + C3210 * C154480) * C2902) *
               C154082 * C339 +
           ((C3211 * C154480 + C3214 * C154468 +
             (C134 * C3143 - C135 * C3139 - C134 * C3144 + C154181 * C3151) *
                 C154442) *
                C2902 +
            (C3180 + C3220 + C3221) * C2903 +
            (C3185 + C3222 + C3223) * C154429) *
               C154082 * C340) *
              C341 +
          (((C3175 + C3174 + C3219) * C2902 + (C3169 + C3168 + C3218) * C2903 +
            (C441 * C154480 + C446 * C154468 + C3217 * C154442) * C154429) *
               C154082 * C339 -
           (C2921 * C154429 + (C2911 + C2910 + C2909) * C2903 +
            (C2908 + C2907 + C2906) * C2902) *
               C154082 * C338 -
           (((C134 * C3149 - C135 * C3142 - C134 * C3150 + C154181 * C3154) *
                 C154442 +
             C3217 * C154468 + C446 * C154480) *
                C154429 +
            (C3223 + C3222 + C3185) * C2903 + (C3221 + C3220 + C3180) * C2902) *
               C154082 * C340) *
              C154053)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C154480 +
             C3210 * C154468 + C3211 * C154442) *
                C2902 +
            (C2906 + C2907 + C2908) * C2903 + C2920 * C154429) *
               C577 -
           ((C3506 + C3462 + C3463) * C154429 +
            (C3507 + C3468 + C3469) * C2903 +
            ((C134 * C1985 - C135 * C1976 - C134 * C1986 + C154181 * C1991) *
                 C154442 +
             (C134 * C1135 - C135 * C1129 - C134 * C1136 + C154181 * C1147) *
                 C154468 +
             (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                 C154480) *
                C2902) *
               C578 +
           (((C134 * C602 - C135 * C585 - C134 * C603 + C154181 * C621) *
                 C154480 +
             (C134 * C1554 - C135 * C1545 - C134 * C1555 + C154181 * C1560) *
                 C154468 +
             (C134 * C3445 - C135 * C3441 - C134 * C3446 + C154181 * C3453) *
                 C154442) *
                C2902 +
            (C3470 + C3508 + C3509) * C2903 +
            (C3479 + C3510 + C3511) * C154429) *
               C579) *
              C154066 * C341 +
          (((C3469 + C3468 + C3507) * C2902 + (C3463 + C3462 + C3506) * C2903 +
            (C678 * C154480 + C1180 * C154468 +
             (C134 * C1979 - C135 * C1973 - C134 * C1980 + C154181 * C1988) *
                 C154442) *
                C154429) *
               C578 -
           (C2921 * C154429 + (C2911 + C2910 + C2909) * C2903 +
            (C2908 + C2907 + C2906) * C2902) *
               C577 -
           (((C134 * C3451 - C135 * C3444 - C134 * C3452 + C154181 * C3456) *
                 C154442 +
             (C134 * C1548 - C135 * C1542 - C134 * C1549 + C154181 * C1557) *
                 C154468 +
             C683 * C154480) *
                C154429 +
            (C3511 + C3510 + C3479) * C2903 + (C3509 + C3508 + C3470) * C2902) *
               C579) *
              C154066 * C154053)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                C24270 +
            C3210 * C24271 + C3211 * C154442) *
               C154477 +
           (C24277 + C24278 + C24279) * C154458 + C24291 * C154429) *
              C154082 * C154066 * C130 -
          (C24292 * C154429 + (C24282 + C24281 + C24280) * C154458 +
           (C24279 + C24278 + C24277) * C154477) *
              C154082 * C154066 * C131 +
          (C24291 * C154477 + (C24285 + C24284 + C24283) * C154458 +
           (C24286 + C24287 + C24288) * C154429) *
              C154082 * C154066 * C132 -
          (((C134 * C377 - C135 * C354 - C134 * C378 + C154181 * C390) *
                C154442 +
            C830 * C24271 + C209 * C24270) *
               C154429 +
           (C24288 + C24287 + C24286) * C154458 + C24292 * C154477) *
              C154082 * C154066 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C24270 +
             C3210 * C24271 + C3211 * C154442) *
                C154477 +
            (C24277 + C24278 + C24279) * C154458 + C24291 * C154429) *
               C154082 * C338 -
           ((C24511 + C24512 + C24513) * C154429 +
            (C24514 + C24515 + C24516) * C154458 +
            (C3214 * C154442 + C3211 * C24271 + C3210 * C24270) * C154477) *
               C154082 * C339 +
           ((C3211 * C24270 + C3214 * C24271 + C4687 * C154442) * C154477 +
            (C24517 + C24518 + C24519) * C154458 +
            (C24520 + C24521 + C24522) * C154429) *
               C154082 * C340) *
              C341 +
          (((C24516 + C24515 + C24514) * C154477 +
            (C24513 + C24512 + C24511) * C154458 +
            (C441 * C24270 + C446 * C24271 + C3217 * C154442) * C154429) *
               C154082 * C339 -
           (C24292 * C154429 + (C24282 + C24281 + C24280) * C154458 +
            (C24279 + C24278 + C24277) * C154477) *
               C154082 * C338 -
           (((C134 * C3149 - C135 * C3142 - C134 * C3150 + C154181 * C3154) *
                 C154442 +
             C3217 * C24271 + C446 * C24270) *
                C154429 +
            (C24522 + C24521 + C24520) * C154458 +
            (C24519 + C24518 + C24517) * C154477) *
               C154082 * C340) *
              C154053)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C24270 +
             C3210 * C24271 + C3211 * C154442) *
                C154477 +
            (C24277 + C24278 + C24279) * C154458 + C24291 * C154429) *
               C577 -
           ((C24741 + C24742 + C24743) * C154429 +
            (C24744 + C24745 + C24746) * C154458 +
            (C4299 * C154442 + C4300 * C24271 +
             (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                 C24270) *
                C154477) *
               C578 +
           (((C134 * C602 - C135 * C585 - C134 * C603 + C154181 * C621) *
                 C24270 +
             C4930 * C24271 + C4931 * C154442) *
                C154477 +
            (C24747 + C24748 + C24749) * C154458 +
            (C24750 + C24751 + C24752) * C154429) *
               C579) *
              C154066 * C341 +
          (((C24746 + C24745 + C24744) * C154477 +
            (C24743 + C24742 + C24741) * C154458 +
            (C678 * C24270 + C1180 * C24271 + C3963 * C154442) * C154429) *
               C578 -
           (C24292 * C154429 + (C24282 + C24281 + C24280) * C154458 +
            (C24279 + C24278 + C24277) * C154477) *
               C577 -
           (((C134 * C3451 - C135 * C3444 - C134 * C3452 + C154181 * C3456) *
                 C154442 +
             C11901 * C24271 + C683 * C24270) *
                C154429 +
            (C24752 + C24751 + C24750) * C154458 +
            (C24749 + C24748 + C24747) * C154477) *
               C579) *
              C154066 * C154053)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) * C28192 +
           C3210 * C28193 + C3211 * C28194 + C3214 * C28195 + C4687 * C28196) *
              C154011 * C154082 * C154066 * C130 -
          (C3215 * C28196 + C3213 * C28195 + C444 * C28194 + C443 * C28193 +
           C205 * C28192) *
              C154011 * C154082 * C154066 * C131 +
          (C206 * C28192 + C442 * C28193 + C445 * C28194 + C3212 * C28195 +
           C3216 * C28196) *
              C154011 * C154082 * C154066 * C132 -
          ((C134 * C3149 - C135 * C3142 - C134 * C3150 + C154181 * C3154) *
               C28196 +
           C3217 * C28195 + C446 * C28194 + C441 * C28193 + C207 * C28192) *
              C154011 * C154082 * C154066 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                C28192 +
            C3210 * C28193 + C3211 * C28194 + C3214 * C28195 + C4687 * C28196) *
               C154011 * C154082 * C338 -
           (C28341 * C28196 + C4687 * C28195 + C3214 * C28194 + C3211 * C28193 +
            C3210 * C28192) *
               C154011 * C154082 * C339 +
           (C3211 * C28192 + C3214 * C28193 + C4687 * C28194 + C28341 * C28195 +
            (C134 * C28322 - C135 * C28320 - C134 * C28323 + C154181 * C28326) *
                C28196) *
               C154011 * C154082 * C340) *
              C341 +
          ((C443 * C28192 + C444 * C28193 + C3213 * C28194 + C3215 * C28195 +
            C28342 * C28196) *
               C154011 * C154082 * C339 -
           (C3215 * C28196 + C3213 * C28195 + C444 * C28194 + C443 * C28193 +
            C205 * C28192) *
               C154011 * C154082 * C338 -
           ((C134 * C28324 - C135 * C28321 - C134 * C28325 + C154181 * C28327) *
                C28196 +
            C28342 * C28195 + C3215 * C28194 + C3213 * C28193 + C444 * C28192) *
               C154011 * C154082 * C340) *
              C154053)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                C28192 +
            C3210 * C28193 + C3211 * C28194 + C3214 * C28195 + C4687 * C28196) *
               C154011 * C577 -
           ((C134 * C5664 - C135 * C5659 - C134 * C5665 + C154181 * C5668) *
                C28196 +
            C5676 * C28195 + C4299 * C28194 + C4300 * C28193 +
            (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                C28192) *
               C154011 * C578 +
           ((C134 * C602 - C135 * C585 - C134 * C603 + C154181 * C621) *
                C28192 +
            C4930 * C28193 + C4931 * C28194 +
            (C134 * C4912 - C135 * C4907 - C134 * C4913 + C154181 * C4916) *
                C28195 +
            (C134 * C28466 - C135 * C28464 - C134 * C28467 + C154181 * C28470) *
                C28196) *
               C154011 * C579) *
              C154066 * C341 +
          ((C680 * C28192 + C1178 * C28193 + C3501 * C28194 + C4301 * C28195 +
            (C134 * C5662 - C135 * C5658 - C134 * C5663 + C154181 * C5667) *
                C28196) *
               C154011 * C578 -
           (C3215 * C28196 + C3213 * C28195 + C444 * C28194 + C443 * C28193 +
            C205 * C28192) *
               C154011 * C577 -
           ((C134 * C28468 - C135 * C28465 - C134 * C28469 + C154181 * C28471) *
                C28196 +
            (C134 * C4910 - C135 * C4906 - C134 * C4911 + C154181 * C4915) *
                C28195 +
            C3503 * C28194 + C3502 * C28193 + C681 * C28192) *
               C154011 * C579) *
              C154066 * C154053)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C47141 * C144 - C47142 * C136 - C47141 * C145 + C47138 * C160 +
            C47143 * C600 - C47144 * C584 - C47143 * C601 + C47139 * C620 +
            C47145 * C602 - C47146 * C585 - C47145 * C603 + C154445 * C621) *
               C154164 * C154477 +
           (C47220 + C47221 + C47222) * C154164 * C154458 + C47236 * C154429) *
              C154082 * C154066 * C130 -
          (C47237 * C154429 + (C47225 + C47224 + C47223) * C154164 * C154458 +
           (C47222 + C47221 + C47220) * C154164 * C154477) *
              C154082 * C154066 * C131 +
          (C47236 * C154477 + (C47228 + C47227 + C47226) * C154164 * C154458 +
           (C47229 + C47230 + C47231) * C154164 * C154429) *
              C154082 * C154066 * C132 -
          ((C47145 * C614 - C47146 * C591 - C47145 * C615 + C154445 * C627 +
            C47143 * C612 - C47144 * C590 - C47143 * C613 + C47139 * C626 +
            C47141 * C154 - C47142 * C141 - C47141 * C155 + C47138 * C165) *
               C154164 * C154429 +
           (C47231 + C47230 + C47229) * C154164 * C154458 + C47237 * C154477) *
              C154082 * C154066 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C47141 * C144 - C47142 * C136 - C47141 * C145 + C47138 * C160 +
             C47143 * C600 - C47144 * C584 - C47143 * C601 + C47139 * C620 +
             C47145 * C602 - C47146 * C585 - C47145 * C603 + C154445 * C621) *
                C154164 * C154477 +
            (C47220 + C47221 + C47222) * C154164 * C154458 + C47236 * C154429) *
               C154082 * C338 -
           ((C47528 + C47529 + C47530) * C154164 * C154429 +
            (C47531 + C47532 + C47533) * C154164 * C154458 +
            (C47145 * C1554 - C47146 * C1545 - C47145 * C1555 +
             C154445 * C1560 + C47143 * C1135 - C47144 * C1129 -
             C47143 * C1136 + C47139 * C1147 + C47141 * C363 - C47142 * C347 -
             C47141 * C364 + C47138 * C383) *
                C154164 * C154477) *
               C154082 * C339 +
           ((C47141 * C365 - C47142 * C348 - C47141 * C366 + C47138 * C384 +
             C47143 * C1985 - C47144 * C1976 - C47143 * C1986 + C47139 * C1991 +
             C47145 * C3445 - C47146 * C3441 - C47145 * C3446 +
             C154445 * C3453) *
                C154164 * C154477 +
            (C47534 + C47535 + C47536) * C154164 * C154458 +
            (C47537 + C47538 + C47539) * C154164 * C154429) *
               C154082 * C340) *
              C341 +
          (((C47533 + C47532 + C47531) * C154164 * C154477 +
            (C47530 + C47529 + C47528) * C154164 * C154458 +
            (C47141 * C357 - C47142 * C344 - C47141 * C358 + C47138 * C380 +
             C47143 * C1141 - C47144 * C1132 - C47143 * C1142 + C47139 * C1150 +
             C47145 * C1548 - C47146 * C1542 - C47145 * C1549 +
             C154445 * C1557) *
                C154164 * C154429) *
               C154082 * C339 -
           (C47237 * C154429 + (C47225 + C47224 + C47223) * C154164 * C154458 +
            (C47222 + C47221 + C47220) * C154164 * C154477) *
               C154082 * C338 -
           ((C47145 * C3451 - C47146 * C3444 - C47145 * C3452 +
             C154445 * C3456 + C47143 * C1979 - C47144 * C1973 -
             C47143 * C1980 + C47139 * C1988 + C47141 * C371 - C47142 * C351 -
             C47141 * C372 + C47138 * C387) *
                C154164 * C154429 +
            (C47539 + C47538 + C47537) * C154164 * C154458 +
            (C47536 + C47535 + C47534) * C154164 * C154477) *
               C154082 * C340) *
              C154053)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C47141 * C144 - C47142 * C136 - C47141 * C145 + C47138 * C160 +
             C47143 * C600 - C47144 * C584 - C47143 * C601 + C47139 * C620 +
             C47145 * C602 - C47146 * C585 - C47145 * C603 + C154445 * C621) *
                C154164 * C154477 +
            (C47220 + C47221 + C47222) * C154164 * C154458 + C47236 * C154429) *
               C577 -
           ((C47830 + C47831 + C47832) * C154164 * C154429 +
            (C47833 + C47834 + C47835) * C154164 * C154458 +
            (C47145 * C2337 - C47146 * C2328 - C47145 * C2338 +
             C154445 * C2343 + C47143 * C602 - C47144 * C585 - C47143 * C603 +
             C47139 * C621 + C47141 * C600 - C47142 * C584 - C47141 * C601 +
             C47138 * C620) *
                C154164 * C154477) *
               C578 +
           ((C47141 * C602 - C47142 * C585 - C47141 * C603 + C47138 * C621 +
             C47143 * C2337 - C47144 * C2328 - C47143 * C2338 + C47139 * C2343 +
             C47145 * C7777 - C47146 * C7773 - C47145 * C7778 +
             C154445 * C7785) *
                C154164 * C154477 +
            (C47836 + C47837 + C47838) * C154164 * C154458 +
            (C47839 + C47840 + C47841) * C154164 * C154429) *
               C579) *
              C154066 * C341 +
          (((C47835 + C47834 + C47833) * C154164 * C154477 +
            (C47832 + C47831 + C47830) * C154164 * C154458 +
            (C47141 * C594 - C47142 * C581 - C47141 * C595 + C47138 * C617 +
             C47143 * C608 - C47144 * C588 - C47143 * C609 + C47139 * C624 +
             C47145 * C2331 - C47146 * C2325 - C47145 * C2332 +
             C154445 * C2340) *
                C154164 * C154429) *
               C578 -
           (C47237 * C154429 + (C47225 + C47224 + C47223) * C154164 * C154458 +
            (C47222 + C47221 + C47220) * C154164 * C154477) *
               C577 -
           ((C47145 * C7783 - C47146 * C7776 - C47145 * C7784 +
             C154445 * C7788 + C47143 * C2331 - C47144 * C2325 -
             C47143 * C2332 + C47139 * C2340 + C47141 * C608 - C47142 * C588 -
             C47141 * C609 + C47138 * C624) *
                C154164 * C154429 +
            (C47841 + C47840 + C47839) * C154164 * C154458 +
            (C47838 + C47837 + C47836) * C154164 * C154477) *
               C579) *
              C154066 * C154053)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C47141 * C144 - C47142 * C136 - C47141 * C145 + C47138 * C160 +
            C47143 * C600 - C47144 * C584 - C47143 * C601 + C47139 * C620 +
            C47145 * C602 - C47146 * C585 - C47145 * C603 + C154445 * C621) *
               C154480 +
           (C47141 * C363 - C47142 * C347 - C47141 * C364 + C47138 * C383 +
            C47143 * C1135 - C47144 * C1129 - C47143 * C1136 + C47139 * C1147 +
            C47145 * C1554 - C47146 * C1545 - C47145 * C1555 +
            C154445 * C1560) *
               C154468 +
           (C47141 * C365 - C47142 * C348 - C47141 * C366 + C47138 * C384 +
            C47143 * C1985 - C47144 * C1976 - C47143 * C1986 + C47139 * C1991 +
            C47145 * C3445 - C47146 * C3441 - C47145 * C3446 +
            C154445 * C3453) *
               C154442) *
              C154011 * C154082 * C154066 * C130 -
          ((C47536 + C47535 + C47534) * C154442 +
           (C47531 + C47532 + C47533) * C154468 +
           (C47222 + C47221 + C47220) * C154480) *
              C154011 * C154082 * C154066 * C131 +
          (C47234 * C154480 + (C47530 + C47529 + C47528) * C154468 +
           (C47537 + C47538 + C47539) * C154442) *
              C154011 * C154082 * C154066 * C132 -
          ((C47145 * C3451 - C47146 * C3444 - C47145 * C3452 + C154445 * C3456 +
            C47143 * C1979 - C47144 * C1973 - C47143 * C1980 + C47139 * C1988 +
            C47141 * C371 - C47142 * C351 - C47141 * C372 + C47138 * C387) *
               C154442 +
           (C48083 + C48082 + C48081) * C154468 + C47235 * C154480) *
              C154011 * C154082 * C154066 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C47141 * C144 - C47142 * C136 - C47141 * C145 + C47138 * C160 +
             C47143 * C600 - C47144 * C584 - C47143 * C601 + C47139 * C620 +
             C47145 * C602 - C47146 * C585 - C47145 * C603 + C154445 * C621) *
                C154480 +
            (C51712 + C51713 + C51714) * C154468 + C51725 * C154442) *
               C154011 * C154082 * C338 -
           ((C51718 + C51719 + C51720) * C154442 +
            (C51717 + C51716 + C51715) * C154468 +
            (C51714 + C51713 + C51712) * C154480) *
               C154011 * C154082 * C339 +
           (C51725 * C154480 + (C51720 + C51719 + C51718) * C154468 +
            (C47141 * C3143 - C47142 * C3139 - C47141 * C3144 + C47138 * C3151 +
             C47143 * C5664 - C47144 * C5659 - C47143 * C5665 + C47139 * C5668 +
             C47145 * C28466 - C47146 * C28464 - C47145 * C28467 +
             C154445 * C28470) *
                C154442) *
               C154011 * C154082 * C340) *
              C341 +
          (((C47533 + C47532 + C47531) * C154480 +
            (C47534 + C47535 + C47536) * C154468 +
            (C51721 + C51722 + C51723) * C154442) *
               C154011 * C154082 * C339 -
           (C51699 * C154442 + (C47531 + C47532 + C47533) * C154468 +
            (C47222 + C47221 + C47220) * C154480) *
               C154011 * C154082 * C338 -
           ((C47145 * C28468 - C47146 * C28465 - C47145 * C28469 +
             C154445 * C28471 + C47143 * C5662 - C47144 * C5658 -
             C47143 * C5663 + C47139 * C5667 + C47141 * C3145 - C47142 * C3140 -
             C47141 * C3146 + C47138 * C3152) *
                C154442 +
            (C51723 + C51722 + C51721) * C154468 + C51699 * C154480) *
               C154011 * C154082 * C340) *
              C154053)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C47141 * C144 - C47142 * C136 - C47141 * C145 + C47138 * C160 +
             C47143 * C600 - C47144 * C584 - C47143 * C601 + C47139 * C620 +
             C47145 * C602 - C47146 * C585 - C47145 * C603 + C154445 * C621) *
                C154480 +
            (C51712 + C51713 + C51714) * C154468 + C51725 * C154442) *
               C154011 * C577 -
           ((C47145 * C6272 - C47146 * C6262 - C47145 * C6273 +
             C154445 * C6280 + C47143 * C3445 - C47144 * C3441 -
             C47143 * C3446 + C47139 * C3453 + C47141 * C1985 - C47142 * C1976 -
             C47141 * C1986 + C47138 * C1991) *
                C154442 +
            (C47145 * C6274 - C47146 * C6263 - C47145 * C6275 +
             C154445 * C6281 + C47143 * C1554 - C47144 * C1545 -
             C47143 * C1555 + C47139 * C1560 + C47141 * C1135 - C47142 * C1129 -
             C47141 * C1136 + C47138 * C1147) *
                C154468 +
            (C47145 * C2337 - C47146 * C2328 - C47145 * C2338 +
             C154445 * C2343 + C47143 * C602 - C47144 * C585 - C47143 * C603 +
             C47139 * C621 + C47141 * C600 - C47142 * C584 - C47141 * C601 +
             C47138 * C620) *
                C154480) *
               C154011 * C578 +
           ((C47141 * C602 - C47142 * C585 - C47141 * C603 + C47138 * C621 +
             C47143 * C2337 - C47144 * C2328 - C47143 * C2338 + C47139 * C2343 +
             C47145 * C7777 - C47146 * C7773 - C47145 * C7778 +
             C154445 * C7785) *
                C154480 +
            (C47141 * C1554 - C47142 * C1545 - C47141 * C1555 + C47138 * C1560 +
             C47143 * C6274 - C47144 * C6263 - C47143 * C6275 + C47139 * C6281 +
             C47145 * C9282 - C47146 * C9277 - C47145 * C9283 +
             C154445 * C9286) *
                C154468 +
            (C47141 * C3445 - C47142 * C3441 - C47141 * C3446 + C47138 * C3453 +
             C47143 * C6272 - C47144 * C6262 - C47143 * C6273 + C47139 * C6280 +
             C47145 * C31084 - C47146 * C31082 - C47145 * C31085 +
             C154445 * C31088) *
                C154442) *
               C154011 * C579) *
              C154066 * C341 +
          (((C47835 + C47834 + C47833) * C154480 +
            (C48652 + C48653 + C48654) * C154468 +
            (C47141 * C1983 - C47142 * C1975 - C47141 * C1984 + C47138 * C1990 +
             C47143 * C3447 - C47144 * C3442 - C47143 * C3448 + C47139 * C3454 +
             C47145 * C6268 - C47146 * C6260 - C47145 * C6269 +
             C154445 * C6278) *
                C154442) *
               C154011 * C578 -
           (C51699 * C154442 + (C47531 + C47532 + C47533) * C154468 +
            (C47222 + C47221 + C47220) * C154480) *
               C154011 * C577 -
           ((C47145 * C31086 - C47146 * C31083 - C47145 * C31087 +
             C154445 * C31089 + C47143 * C6268 - C47144 * C6260 -
             C47143 * C6269 + C47139 * C6278 + C47141 * C3447 - C47142 * C3442 -
             C47141 * C3448 + C47138 * C3454) *
                C154442 +
            (C47145 * C9280 - C47146 * C9276 - C47145 * C9281 +
             C154445 * C9285 + C47143 * C6270 - C47144 * C6261 -
             C47143 * C6271 + C47139 * C6279 + C47141 * C1552 - C47142 * C1544 -
             C47141 * C1553 + C47138 * C1559) *
                C154468 +
            (C47838 + C47837 + C47836) * C154480) *
               C154011 * C579) *
              C154066 * C154053)) /
            (p * q * std::sqrt(p + q));
    d2ee[213] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C154480 +
             C3210 * C154468 + C3211 * C154442) *
                C2902 +
            (C2906 + C2907 + C2908) * C2903 + C2920 * C154429) *
               C154393 -
           (C3960 * C154429 + (C3507 + C3468 + C3469) * C2903 +
            ((C134 * C1985 - C135 * C1976 - C134 * C1986 + C154181 * C1991) *
                 C154442 +
             (C134 * C1135 - C135 * C1129 - C134 * C1136 + C154181 * C1147) *
                 C154468 +
             (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                 C154480) *
                C2902) *
               C154146) *
              C154066 * C154461 +
          (((C3469 + C3468 + C3507) * C2902 + (C3463 + C3462 + C3506) * C2903 +
            (C3954 + C3955 + C3964) * C154429) *
               C154146 -
           (C2921 * C154429 + (C2911 + C2910 + C2909) * C2903 +
            (C2908 + C2907 + C2906) * C2902) *
               C154393) *
              C154066 * C154462 +
          ((C2920 * C2902 + (C2914 + C2913 + C2912) * C2903 +
            (C2915 + C2916 + C2917) * C154429) *
               C154393 -
           (((C134 * C1977 - C135 * C1972 - C134 * C1978 + C154181 * C1987) *
                 C154442 +
             C1181 * C154468 + C677 * C154480) *
                C154429 +
            (C3964 + C3955 + C3954) * C2903 + C3960 * C2902) *
               C154146) *
              C154066 * C818)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                C154164 * C123 +
            C211 * C124 + C212 * C125 + C213 * C126 + C214 * C127) *
               C154393 -
           (C685 * C127 + C686 * C126 + C687 * C125 + C688 * C124 +
            (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                C154164 * C123) *
               C154146) *
              C154066 * C154461 +
          ((C688 * C123 + C687 * C124 + C686 * C125 + C685 * C126 +
            C967 * C127) *
               C154146 -
           (C215 * C127 + C214 * C126 + C213 * C125 + C212 * C124 +
            C211 * C123) *
               C154393) *
              C154066 * C154462 +
          ((C212 * C123 + C213 * C124 + C214 * C125 + C215 * C126 +
            C216 * C127) *
               C154393 -
           ((C134 * C956 - C135 * C955 - C134 * C957 + C154181 * C958) *
                C154164 * C127 +
            C967 * C126 + C685 * C125 + C686 * C124 + C687 * C123) *
               C154146) *
              C154066 * C818)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C24270 +
             C3210 * C24271 + C3211 * C154442) *
                C154477 +
            (C24277 + C24278 + C24279) * C154458 + C24291 * C154429) *
               C154393 -
           (C25198 * C154429 + (C24744 + C24745 + C24746) * C154458 +
            (C4299 * C154442 + C4300 * C24271 +
             (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                 C24270) *
                C154477) *
               C154146) *
              C154066 * C154461 +
          (((C24746 + C24745 + C24744) * C154477 +
            (C24743 + C24742 + C24741) * C154458 +
            (C25195 + C25196 + C25197) * C154429) *
               C154146 -
           (C24292 * C154429 + (C24282 + C24281 + C24280) * C154458 +
            (C24279 + C24278 + C24277) * C154477) *
               C154393) *
              C154066 * C154462 +
          ((C24291 * C154477 + (C24285 + C24284 + C24283) * C154458 +
            (C24286 + C24287 + C24288) * C154429) *
               C154393 -
           (((C134 * C1977 - C135 * C1972 - C134 * C1978 + C154181 * C1987) *
                 C154442 +
             C1181 * C24271 + C677 * C24270) *
                C154429 +
            (C25197 + C25196 + C25195) * C154458 + C25198 * C154477) *
               C154146) *
              C154066 * C818)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                C28192 +
            C3210 * C28193 + C3211 * C28194 + C3214 * C28195 + C4687 * C28196) *
               C154011 * C154393 -
           ((C134 * C5664 - C135 * C5659 - C134 * C5665 + C154181 * C5668) *
                C28196 +
            C5676 * C28195 + C4299 * C28194 + C4300 * C28193 +
            (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                C28192) *
               C154011 * C154146) *
              C154066 * C154461 +
          ((C680 * C28192 + C1178 * C28193 + C3501 * C28194 + C4301 * C28195 +
            (C134 * C5662 - C135 * C5658 - C134 * C5663 + C154181 * C5667) *
                C28196) *
               C154011 * C154146 -
           (C3215 * C28196 + C3213 * C28195 + C444 * C28194 + C443 * C28193 +
            C205 * C28192) *
               C154011 * C154393) *
              C154066 * C154462 +
          ((C206 * C28192 + C442 * C28193 + C445 * C28194 + C3212 * C28195 +
            C3216 * C28196) *
               C154011 * C154393 -
           ((C134 * C5660 - C135 * C5657 - C134 * C5661 + C154181 * C5666) *
                C28196 +
            C4302 * C28195 + C3500 * C28194 + C1179 * C28193 + C679 * C28192) *
               C154011 * C154146) *
              C154066 * C818)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C47141 * C144 - C47142 * C136 - C47141 * C145 + C47138 * C160 +
             C47143 * C600 - C47144 * C584 - C47143 * C601 + C47139 * C620 +
             C47145 * C602 - C47146 * C585 - C47145 * C603 + C154445 * C621) *
                C154164 * C154477 +
            (C47220 + C47221 + C47222) * C154164 * C154458 + C47236 * C154429) *
               C154393 -
           (C48319 * C154429 + (C47833 + C47834 + C47835) * C154164 * C154458 +
            (C47145 * C2337 - C47146 * C2328 - C47145 * C2338 +
             C154445 * C2343 + C47143 * C602 - C47144 * C585 - C47143 * C603 +
             C47139 * C621 + C47141 * C600 - C47142 * C584 - C47141 * C601 +
             C47138 * C620) *
                C154164 * C154477) *
               C154146) *
              C154066 * C154461 +
          (((C47835 + C47834 + C47833) * C154164 * C154477 +
            (C47832 + C47831 + C47830) * C154164 * C154458 +
            (C48323 + C48324 + C48325) * C154164 * C154429) *
               C154146 -
           (C47237 * C154429 + (C47225 + C47224 + C47223) * C154164 * C154458 +
            (C47222 + C47221 + C47220) * C154164 * C154477) *
               C154393) *
              C154066 * C154462 +
          ((C47236 * C154477 + (C47228 + C47227 + C47226) * C154164 * C154458 +
            (C47229 + C47230 + C47231) * C154164 * C154429) *
               C154393 -
           ((C47145 * C2329 - C47146 * C2324 - C47145 * C2330 +
             C154445 * C2339 + C47143 * C610 - C47144 * C589 - C47143 * C611 +
             C47139 * C625 + C47141 * C592 - C47142 * C580 - C47141 * C593 +
             C47138 * C616) *
                C154164 * C154429 +
            (C48325 + C48324 + C48323) * C154164 * C154458 + C48319 * C154477) *
               C154146) *
              C154066 * C818)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C47141 * C144 - C47142 * C136 - C47141 * C145 + C47138 * C160 +
             C47143 * C600 - C47144 * C584 - C47143 * C601 + C47139 * C620 +
             C47145 * C602 - C47146 * C585 - C47145 * C603 + C154445 * C621) *
                C154480 +
            (C51712 + C51713 + C51714) * C154468 + C51725 * C154442) *
               C154011 * C154393 -
           ((C47145 * C6272 - C47146 * C6262 - C47145 * C6273 +
             C154445 * C6280 + C47143 * C3445 - C47144 * C3441 -
             C47143 * C3446 + C47139 * C3453 + C47141 * C1985 - C47142 * C1976 -
             C47141 * C1986 + C47138 * C1991) *
                C154442 +
            (C47145 * C6274 - C47146 * C6263 - C47145 * C6275 +
             C154445 * C6281 + C47143 * C1554 - C47144 * C1545 -
             C47143 * C1555 + C47139 * C1560 + C47141 * C1135 - C47142 * C1129 -
             C47141 * C1136 + C47138 * C1147) *
                C154468 +
            (C47145 * C2337 - C47146 * C2328 - C47145 * C2338 +
             C154445 * C2343 + C47143 * C602 - C47144 * C585 - C47143 * C603 +
             C47139 * C621 + C47141 * C600 - C47142 * C584 - C47141 * C601 +
             C47138 * C620) *
                C154480) *
               C154011 * C154146) *
              C154066 * C154461 +
          (((C47835 + C47834 + C47833) * C154480 +
            (C48652 + C48653 + C48654) * C154468 +
            (C47141 * C1983 - C47142 * C1975 - C47141 * C1984 + C47138 * C1990 +
             C47143 * C3447 - C47144 * C3442 - C47143 * C3448 + C47139 * C3454 +
             C47145 * C6268 - C47146 * C6260 - C47145 * C6269 +
             C154445 * C6278) *
                C154442) *
               C154011 * C154146 -
           (C51699 * C154442 + (C47531 + C47532 + C47533) * C154468 +
            (C47222 + C47221 + C47220) * C154480) *
               C154011 * C154393) *
              C154066 * C154462 +
          ((C47234 * C154480 + (C47530 + C47529 + C47528) * C154468 +
            (C47537 + C47538 + C47539) * C154442) *
               C154011 * C154393 -
           ((C47145 * C6264 - C47146 * C6258 - C47145 * C6265 +
             C154445 * C6276 + C47143 * C3449 - C47144 * C3443 -
             C47143 * C3450 + C47139 * C3455 + C47141 * C1981 - C47142 * C1974 -
             C47141 * C1982 + C47138 * C1989) *
                C154442 +
            (C48657 + C48656 + C48655) * C154468 + C48315 * C154480) *
               C154011 * C154146) *
              C154066 * C818)) /
            (p * q * std::sqrt(p + q));
    d2ee[214] +=
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                C154164 * C123 +
            C211 * C124 + C212 * C125 + C213 * C126 + C214 * C127) *
               C154082 * C338 -
           (C448 * C127 + C449 * C126 + C450 * C125 + C451 * C124 +
            (C134 * C363 - C135 * C347 - C134 * C364 + C154181 * C383) *
                C154164 * C123) *
               C154082 * C339 +
           ((C134 * C365 - C135 * C348 - C134 * C366 + C154181 * C384) *
                C154164 * C123 +
            C452 * C124 + C453 * C125 + C454 * C126 + C455 * C127) *
               C154082 * C340) *
              C341 +
          ((C451 * C123 + C450 * C124 + C449 * C125 + C448 * C126 +
            (C134 * C375 - C135 * C353 - C134 * C376 + C154181 * C389) *
                C154164 * C127) *
               C154082 * C339 -
           (C215 * C127 + C214 * C126 + C213 * C125 + C212 * C124 +
            C211 * C123) *
               C154082 * C338 -
           ((C134 * C377 - C135 * C354 - C134 * C378 + C154181 * C390) *
                C154164 * C127 +
            C455 * C126 + C454 * C125 + C453 * C124 + C452 * C123) *
               C154082 * C340) *
              C154053)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
               C154164 * C123 +
           C211 * C124 + C212 * C125 + C213 * C126 + C214 * C127) *
              C154082 * C154066 * C130 -
          (C215 * C127 + C214 * C126 + C213 * C125 + C212 * C124 +
           C211 * C123) *
              C154082 * C154066 * C131 +
          (C212 * C123 + C213 * C124 + C214 * C125 + C215 * C126 +
           C216 * C127) *
              C154082 * C154066 * C132 -
          ((C134 * C158 - C135 * C143 - C134 * C159 + C154181 * C167) *
               C154164 * C127 +
           C216 * C126 + C215 * C125 + C214 * C124 + C213 * C123) *
              C154082 * C154066 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                C154480 +
            (C134 * C363 - C135 * C347 - C134 * C364 + C154181 * C383) *
                C154468 +
            (C134 * C365 - C135 * C348 - C134 * C366 + C154181 * C384) *
                C154442) *
               C2902 +
           (C2906 + C2907 + C2908) * C2903 + C2920 * C154429) *
              C154082 * C154066 * C130 -
          (C2921 * C154429 + (C2911 + C2910 + C2909) * C2903 +
           (C2908 + C2907 + C2906) * C2902) *
              C154082 * C154066 * C131 +
          (C2920 * C2902 + (C2914 + C2913 + C2912) * C2903 +
           (C2915 + C2916 + C2917) * C154429) *
              C154082 * C154066 * C132 -
          (((C134 * C377 - C135 * C354 - C134 * C378 + C154181 * C390) *
                C154442 +
            C830 * C154468 + C209 * C154480) *
               C154429 +
           (C2917 + C2916 + C2915) * C2903 + C2921 * C2902) *
              C154082 * C154066 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C154480 +
             C3210 * C154468 + C3211 * C154442) *
                C2902 +
            (C2906 + C2907 + C2908) * C2903 + C2920 * C154429) *
               C154082 * C338 -
           ((C3218 + C3168 + C3169) * C154429 +
            (C3219 + C3174 + C3175) * C2903 +
            (C3214 * C154442 + C3211 * C154468 + C3210 * C154480) * C2902) *
               C154082 * C339 +
           ((C3211 * C154480 + C3214 * C154468 +
             (C134 * C3143 - C135 * C3139 - C134 * C3144 + C154181 * C3151) *
                 C154442) *
                C2902 +
            (C3180 + C3220 + C3221) * C2903 +
            (C3185 + C3222 + C3223) * C154429) *
               C154082 * C340) *
              C341 +
          (((C3175 + C3174 + C3219) * C2902 + (C3169 + C3168 + C3218) * C2903 +
            (C441 * C154480 + C446 * C154468 + C3217 * C154442) * C154429) *
               C154082 * C339 -
           (C2921 * C154429 + (C2911 + C2910 + C2909) * C2903 +
            (C2908 + C2907 + C2906) * C2902) *
               C154082 * C338 -
           (((C134 * C3149 - C135 * C3142 - C134 * C3150 + C154181 * C3154) *
                 C154442 +
             C3217 * C154468 + C446 * C154480) *
                C154429 +
            (C3223 + C3222 + C3185) * C2903 + (C3221 + C3220 + C3180) * C2902) *
               C154082 * C340) *
              C154053)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                C24270 +
            C3210 * C24271 + C3211 * C154442) *
               C154477 +
           (C24277 + C24278 + C24279) * C154458 + C24291 * C154429) *
              C154082 * C154066 * C130 -
          (C24292 * C154429 + (C24282 + C24281 + C24280) * C154458 +
           (C24279 + C24278 + C24277) * C154477) *
              C154082 * C154066 * C131 +
          (C24291 * C154477 + (C24285 + C24284 + C24283) * C154458 +
           (C24286 + C24287 + C24288) * C154429) *
              C154082 * C154066 * C132 -
          (((C134 * C377 - C135 * C354 - C134 * C378 + C154181 * C390) *
                C154442 +
            C830 * C24271 + C209 * C24270) *
               C154429 +
           (C24288 + C24287 + C24286) * C154458 + C24292 * C154477) *
              C154082 * C154066 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C24270 +
             C3210 * C24271 + C3211 * C154442) *
                C154477 +
            (C24277 + C24278 + C24279) * C154458 + C24291 * C154429) *
               C154082 * C338 -
           ((C24511 + C24512 + C24513) * C154429 +
            (C24514 + C24515 + C24516) * C154458 +
            (C3214 * C154442 + C3211 * C24271 + C3210 * C24270) * C154477) *
               C154082 * C339 +
           ((C3211 * C24270 + C3214 * C24271 + C4687 * C154442) * C154477 +
            (C24517 + C24518 + C24519) * C154458 +
            (C24520 + C24521 + C24522) * C154429) *
               C154082 * C340) *
              C341 +
          (((C24516 + C24515 + C24514) * C154477 +
            (C24513 + C24512 + C24511) * C154458 +
            (C441 * C24270 + C446 * C24271 + C3217 * C154442) * C154429) *
               C154082 * C339 -
           (C24292 * C154429 + (C24282 + C24281 + C24280) * C154458 +
            (C24279 + C24278 + C24277) * C154477) *
               C154082 * C338 -
           (((C134 * C3149 - C135 * C3142 - C134 * C3150 + C154181 * C3154) *
                 C154442 +
             C3217 * C24271 + C446 * C24270) *
                C154429 +
            (C24522 + C24521 + C24520) * C154458 +
            (C24519 + C24518 + C24517) * C154477) *
               C154082 * C340) *
              C154053)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) * C28192 +
           C3210 * C28193 + C3211 * C28194 + C3214 * C28195 + C4687 * C28196) *
              C154011 * C154082 * C154066 * C130 -
          (C3215 * C28196 + C3213 * C28195 + C444 * C28194 + C443 * C28193 +
           C205 * C28192) *
              C154011 * C154082 * C154066 * C131 +
          (C206 * C28192 + C442 * C28193 + C445 * C28194 + C3212 * C28195 +
           C3216 * C28196) *
              C154011 * C154082 * C154066 * C132 -
          ((C134 * C3149 - C135 * C3142 - C134 * C3150 + C154181 * C3154) *
               C28196 +
           C3217 * C28195 + C446 * C28194 + C441 * C28193 + C207 * C28192) *
              C154011 * C154082 * C154066 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                C28192 +
            C3210 * C28193 + C3211 * C28194 + C3214 * C28195 + C4687 * C28196) *
               C154011 * C154082 * C338 -
           (C28341 * C28196 + C4687 * C28195 + C3214 * C28194 + C3211 * C28193 +
            C3210 * C28192) *
               C154011 * C154082 * C339 +
           (C3211 * C28192 + C3214 * C28193 + C4687 * C28194 + C28341 * C28195 +
            (C134 * C28322 - C135 * C28320 - C134 * C28323 + C154181 * C28326) *
                C28196) *
               C154011 * C154082 * C340) *
              C341 +
          ((C443 * C28192 + C444 * C28193 + C3213 * C28194 + C3215 * C28195 +
            C28342 * C28196) *
               C154011 * C154082 * C339 -
           (C3215 * C28196 + C3213 * C28195 + C444 * C28194 + C443 * C28193 +
            C205 * C28192) *
               C154011 * C154082 * C338 -
           ((C134 * C28324 - C135 * C28321 - C134 * C28325 + C154181 * C28327) *
                C28196 +
            C28342 * C28195 + C3215 * C28194 + C3213 * C28193 + C444 * C28192) *
               C154011 * C154082 * C340) *
              C154053)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C47141 * C144 - C47142 * C136 - C47141 * C145 + C47138 * C160 +
            C47143 * C600 - C47144 * C584 - C47143 * C601 + C47139 * C620 +
            C47145 * C602 - C47146 * C585 - C47145 * C603 + C154445 * C621) *
               C154164 * C154477 +
           (C47220 + C47221 + C47222) * C154164 * C154458 + C47236 * C154429) *
              C154082 * C154066 * C130 -
          (C47237 * C154429 + (C47225 + C47224 + C47223) * C154164 * C154458 +
           (C47222 + C47221 + C47220) * C154164 * C154477) *
              C154082 * C154066 * C131 +
          (C47236 * C154477 + (C47228 + C47227 + C47226) * C154164 * C154458 +
           (C47229 + C47230 + C47231) * C154164 * C154429) *
              C154082 * C154066 * C132 -
          ((C47145 * C614 - C47146 * C591 - C47145 * C615 + C154445 * C627 +
            C47143 * C612 - C47144 * C590 - C47143 * C613 + C47139 * C626 +
            C47141 * C154 - C47142 * C141 - C47141 * C155 + C47138 * C165) *
               C154164 * C154429 +
           (C47231 + C47230 + C47229) * C154164 * C154458 + C47237 * C154477) *
              C154082 * C154066 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C47141 * C144 - C47142 * C136 - C47141 * C145 + C47138 * C160 +
             C47143 * C600 - C47144 * C584 - C47143 * C601 + C47139 * C620 +
             C47145 * C602 - C47146 * C585 - C47145 * C603 + C154445 * C621) *
                C154164 * C154477 +
            (C47220 + C47221 + C47222) * C154164 * C154458 + C47236 * C154429) *
               C154082 * C338 -
           ((C47528 + C47529 + C47530) * C154164 * C154429 +
            (C47531 + C47532 + C47533) * C154164 * C154458 +
            (C47145 * C1554 - C47146 * C1545 - C47145 * C1555 +
             C154445 * C1560 + C47143 * C1135 - C47144 * C1129 -
             C47143 * C1136 + C47139 * C1147 + C47141 * C363 - C47142 * C347 -
             C47141 * C364 + C47138 * C383) *
                C154164 * C154477) *
               C154082 * C339 +
           ((C47141 * C365 - C47142 * C348 - C47141 * C366 + C47138 * C384 +
             C47143 * C1985 - C47144 * C1976 - C47143 * C1986 + C47139 * C1991 +
             C47145 * C3445 - C47146 * C3441 - C47145 * C3446 +
             C154445 * C3453) *
                C154164 * C154477 +
            (C47534 + C47535 + C47536) * C154164 * C154458 +
            (C47537 + C47538 + C47539) * C154164 * C154429) *
               C154082 * C340) *
              C341 +
          (((C47533 + C47532 + C47531) * C154164 * C154477 +
            (C47530 + C47529 + C47528) * C154164 * C154458 +
            (C47141 * C357 - C47142 * C344 - C47141 * C358 + C47138 * C380 +
             C47143 * C1141 - C47144 * C1132 - C47143 * C1142 + C47139 * C1150 +
             C47145 * C1548 - C47146 * C1542 - C47145 * C1549 +
             C154445 * C1557) *
                C154164 * C154429) *
               C154082 * C339 -
           (C47237 * C154429 + (C47225 + C47224 + C47223) * C154164 * C154458 +
            (C47222 + C47221 + C47220) * C154164 * C154477) *
               C154082 * C338 -
           ((C47145 * C3451 - C47146 * C3444 - C47145 * C3452 +
             C154445 * C3456 + C47143 * C1979 - C47144 * C1973 -
             C47143 * C1980 + C47139 * C1988 + C47141 * C371 - C47142 * C351 -
             C47141 * C372 + C47138 * C387) *
                C154164 * C154429 +
            (C47539 + C47538 + C47537) * C154164 * C154458 +
            (C47536 + C47535 + C47534) * C154164 * C154477) *
               C154082 * C340) *
              C154053)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C47141 * C144 - C47142 * C136 - C47141 * C145 + C47138 * C160 +
            C47143 * C600 - C47144 * C584 - C47143 * C601 + C47139 * C620 +
            C47145 * C602 - C47146 * C585 - C47145 * C603 + C154445 * C621) *
               C154480 +
           (C47141 * C363 - C47142 * C347 - C47141 * C364 + C47138 * C383 +
            C47143 * C1135 - C47144 * C1129 - C47143 * C1136 + C47139 * C1147 +
            C47145 * C1554 - C47146 * C1545 - C47145 * C1555 +
            C154445 * C1560) *
               C154468 +
           (C47141 * C365 - C47142 * C348 - C47141 * C366 + C47138 * C384 +
            C47143 * C1985 - C47144 * C1976 - C47143 * C1986 + C47139 * C1991 +
            C47145 * C3445 - C47146 * C3441 - C47145 * C3446 +
            C154445 * C3453) *
               C154442) *
              C154011 * C154082 * C154066 * C130 -
          ((C47536 + C47535 + C47534) * C154442 +
           (C47531 + C47532 + C47533) * C154468 +
           (C47222 + C47221 + C47220) * C154480) *
              C154011 * C154082 * C154066 * C131 +
          (C47234 * C154480 + (C47530 + C47529 + C47528) * C154468 +
           (C47537 + C47538 + C47539) * C154442) *
              C154011 * C154082 * C154066 * C132 -
          ((C47145 * C3451 - C47146 * C3444 - C47145 * C3452 + C154445 * C3456 +
            C47143 * C1979 - C47144 * C1973 - C47143 * C1980 + C47139 * C1988 +
            C47141 * C371 - C47142 * C351 - C47141 * C372 + C47138 * C387) *
               C154442 +
           (C48083 + C48082 + C48081) * C154468 + C47235 * C154480) *
              C154011 * C154082 * C154066 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C47141 * C144 - C47142 * C136 - C47141 * C145 + C47138 * C160 +
             C47143 * C600 - C47144 * C584 - C47143 * C601 + C47139 * C620 +
             C47145 * C602 - C47146 * C585 - C47145 * C603 + C154445 * C621) *
                C154480 +
            (C51712 + C51713 + C51714) * C154468 + C51725 * C154442) *
               C154011 * C154082 * C338 -
           ((C51718 + C51719 + C51720) * C154442 +
            (C51717 + C51716 + C51715) * C154468 +
            (C51714 + C51713 + C51712) * C154480) *
               C154011 * C154082 * C339 +
           (C51725 * C154480 + (C51720 + C51719 + C51718) * C154468 +
            (C47141 * C3143 - C47142 * C3139 - C47141 * C3144 + C47138 * C3151 +
             C47143 * C5664 - C47144 * C5659 - C47143 * C5665 + C47139 * C5668 +
             C47145 * C28466 - C47146 * C28464 - C47145 * C28467 +
             C154445 * C28470) *
                C154442) *
               C154011 * C154082 * C340) *
              C341 +
          (((C47533 + C47532 + C47531) * C154480 +
            (C47534 + C47535 + C47536) * C154468 +
            (C51721 + C51722 + C51723) * C154442) *
               C154011 * C154082 * C339 -
           (C51699 * C154442 + (C47531 + C47532 + C47533) * C154468 +
            (C47222 + C47221 + C47220) * C154480) *
               C154011 * C154082 * C338 -
           ((C47145 * C28468 - C47146 * C28465 - C47145 * C28469 +
             C154445 * C28471 + C47143 * C5662 - C47144 * C5658 -
             C47143 * C5663 + C47139 * C5667 + C47141 * C3145 - C47142 * C3140 -
             C47141 * C3146 + C47138 * C3152) *
                C154442 +
            (C51723 + C51722 + C51721) * C154468 + C51699 * C154480) *
               C154011 * C154082 * C340) *
              C154053)) /
            (p * q * std::sqrt(p + q));
    d2ee[215] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C154480 +
             C3210 * C154468 + C3211 * C154442) *
                C2902 +
            (C2906 + C2907 + C2908) * C2903 + C2920 * C154429) *
               C154082 * C154463 -
           (C3734 * C154429 + (C3219 + C3174 + C3175) * C2903 +
            (C3214 * C154442 + C3211 * C154468 + C3210 * C154480) * C2902) *
               C154082 * C154464 +
           ((C3211 * C154480 + C3214 * C154468 + C4687 * C154442) * C2902 +
            (C3180 + C3220 + C3221) * C2903 +
            (C3185 + C3222 + C3223) * C154429) *
               C154082 * C1685) *
              C154384 +
          (((C3175 + C3174 + C3219) * C2902 + (C3169 + C3168 + C3218) * C2903 +
            (C3731 + C3732 + C3733) * C154429) *
               C154082 * C154464 -
           (C2921 * C154429 + (C2911 + C2910 + C2909) * C2903 +
            (C2908 + C2907 + C2906) * C2902) *
               C154082 * C154463 -
           (((C134 * C3149 - C135 * C3142 - C134 * C3150 + C154181 * C3154) *
                 C154442 +
             C3217 * C154468 + C446 * C154480) *
                C154429 +
            (C3223 + C3222 + C3185) * C2903 + (C3221 + C3220 + C3180) * C2902) *
               C154082 * C1685) *
              C154053)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                C154164 * C123 +
            C211 * C124 + C212 * C125 + C213 * C126 + C214 * C127) *
               C154082 * C154463 -
           (C448 * C127 + C449 * C126 + C450 * C125 + C451 * C124 +
            (C134 * C363 - C135 * C347 - C134 * C364 + C154181 * C383) *
                C154164 * C123) *
               C154082 * C154464 +
           ((C134 * C365 - C135 * C348 - C134 * C366 + C154181 * C384) *
                C154164 * C123 +
            C452 * C124 + C453 * C125 + C454 * C126 + C455 * C127) *
               C154082 * C1685) *
              C154384 +
          ((C451 * C123 + C450 * C124 + C449 * C125 + C448 * C126 +
            C831 * C127) *
               C154082 * C154464 -
           (C215 * C127 + C214 * C126 + C213 * C125 + C212 * C124 +
            C211 * C123) *
               C154082 * C154463 -
           ((C134 * C377 - C135 * C354 - C134 * C378 + C154181 * C390) *
                C154164 * C127 +
            C455 * C126 + C454 * C125 + C453 * C124 + C452 * C123) *
               C154082 * C1685) *
              C154053)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C24270 +
             C3210 * C24271 + C3211 * C154442) *
                C154477 +
            (C24277 + C24278 + C24279) * C154458 + C24291 * C154429) *
               C154082 * C154463 -
           (C24975 * C154429 + (C24514 + C24515 + C24516) * C154458 +
            (C3214 * C154442 + C3211 * C24271 + C3210 * C24270) * C154477) *
               C154082 * C154464 +
           ((C3211 * C24270 + C3214 * C24271 + C4687 * C154442) * C154477 +
            (C24517 + C24518 + C24519) * C154458 +
            (C24520 + C24521 + C24522) * C154429) *
               C154082 * C1685) *
              C154384 +
          (((C24516 + C24515 + C24514) * C154477 +
            (C24513 + C24512 + C24511) * C154458 +
            (C24972 + C24973 + C24974) * C154429) *
               C154082 * C154464 -
           (C24292 * C154429 + (C24282 + C24281 + C24280) * C154458 +
            (C24279 + C24278 + C24277) * C154477) *
               C154082 * C154463 -
           (((C134 * C3149 - C135 * C3142 - C134 * C3150 + C154181 * C3154) *
                 C154442 +
             C3217 * C24271 + C446 * C24270) *
                C154429 +
            (C24522 + C24521 + C24520) * C154458 +
            (C24519 + C24518 + C24517) * C154477) *
               C154082 * C1685) *
              C154053)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                C28192 +
            C3210 * C28193 + C3211 * C28194 + C3214 * C28195 + C4687 * C28196) *
               C154011 * C154082 * C154463 -
           (C28341 * C28196 + C4687 * C28195 + C3214 * C28194 + C3211 * C28193 +
            C3210 * C28192) *
               C154011 * C154082 * C154464 +
           (C3211 * C28192 + C3214 * C28193 + C4687 * C28194 + C28341 * C28195 +
            C29115 * C28196) *
               C154011 * C154082 * C1685) *
              C154384 +
          ((C443 * C28192 + C444 * C28193 + C3213 * C28194 + C3215 * C28195 +
            C28342 * C28196) *
               C154011 * C154082 * C154464 -
           (C3215 * C28196 + C3213 * C28195 + C444 * C28194 + C443 * C28193 +
            C205 * C28192) *
               C154011 * C154082 * C154463 -
           ((C134 * C28324 - C135 * C28321 - C134 * C28325 + C154181 * C28327) *
                C28196 +
            C28342 * C28195 + C3215 * C28194 + C3213 * C28193 + C444 * C28192) *
               C154011 * C154082 * C1685) *
              C154053)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C47141 * C144 - C47142 * C136 - C47141 * C145 + C47138 * C160 +
             C47143 * C600 - C47144 * C584 - C47143 * C601 + C47139 * C620 +
             C47145 * C602 - C47146 * C585 - C47145 * C603 + C154445 * C621) *
                C154164 * C154477 +
            (C47220 + C47221 + C47222) * C154164 * C154458 + C47236 * C154429) *
               C154082 * C154463 -
           (C48077 * C154429 + (C47531 + C47532 + C47533) * C154164 * C154458 +
            (C47145 * C1554 - C47146 * C1545 - C47145 * C1555 +
             C154445 * C1560 + C47143 * C1135 - C47144 * C1129 -
             C47143 * C1136 + C47139 * C1147 + C47141 * C363 - C47142 * C347 -
             C47141 * C364 + C47138 * C383) *
                C154164 * C154477) *
               C154082 * C154464 +
           ((C47141 * C365 - C47142 * C348 - C47141 * C366 + C47138 * C384 +
             C47143 * C1985 - C47144 * C1976 - C47143 * C1986 + C47139 * C1991 +
             C47145 * C3445 - C47146 * C3441 - C47145 * C3446 +
             C154445 * C3453) *
                C154164 * C154477 +
            (C47534 + C47535 + C47536) * C154164 * C154458 +
            (C47537 + C47538 + C47539) * C154164 * C154429) *
               C154082 * C1685) *
              C154384 +
          (((C47533 + C47532 + C47531) * C154164 * C154477 +
            (C47530 + C47529 + C47528) * C154164 * C154458 +
            (C48081 + C48082 + C48083) * C154164 * C154429) *
               C154082 * C154464 -
           (C47237 * C154429 + (C47225 + C47224 + C47223) * C154164 * C154458 +
            (C47222 + C47221 + C47220) * C154164 * C154477) *
               C154082 * C154463 -
           ((C47145 * C3451 - C47146 * C3444 - C47145 * C3452 +
             C154445 * C3456 + C47143 * C1979 - C47144 * C1973 -
             C47143 * C1980 + C47139 * C1988 + C47141 * C371 - C47142 * C351 -
             C47141 * C372 + C47138 * C387) *
                C154164 * C154429 +
            (C47539 + C47538 + C47537) * C154164 * C154458 +
            (C47536 + C47535 + C47534) * C154164 * C154477) *
               C154082 * C1685) *
              C154053)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C47141 * C144 - C47142 * C136 - C47141 * C145 + C47138 * C160 +
             C47143 * C600 - C47144 * C584 - C47143 * C601 + C47139 * C620 +
             C47145 * C602 - C47146 * C585 - C47145 * C603 + C154445 * C621) *
                C154480 +
            (C51712 + C51713 + C51714) * C154468 + C51725 * C154442) *
               C154011 * C154082 * C154463 -
           (C53110 * C154442 + (C51717 + C51716 + C51715) * C154468 +
            (C51714 + C51713 + C51712) * C154480) *
               C154011 * C154082 * C154464 +
           (C51725 * C154480 + (C51720 + C51719 + C51718) * C154468 +
            (C53117 + C53118 + C53119) * C154442) *
               C154011 * C154082 * C1685) *
              C154384 +
          (((C47533 + C47532 + C47531) * C154480 +
            (C47534 + C47535 + C47536) * C154468 +
            (C51721 + C51722 + C51723) * C154442) *
               C154011 * C154082 * C154464 -
           (C51699 * C154442 + (C47531 + C47532 + C47533) * C154468 +
            (C47222 + C47221 + C47220) * C154480) *
               C154011 * C154082 * C154463 -
           ((C47145 * C28468 - C47146 * C28465 - C47145 * C28469 +
             C154445 * C28471 + C47143 * C5662 - C47144 * C5658 -
             C47143 * C5663 + C47139 * C5667 + C47141 * C3145 - C47142 * C3140 -
             C47141 * C3146 + C47138 * C3152) *
                C154442 +
            (C51723 + C51722 + C51721) * C154468 + C51699 * C154480) *
               C154011 * C154082 * C1685) *
              C154053)) /
            (p * q * std::sqrt(p + q));
    d2ee[216] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C154480 +
             C3210 * C154468 + C3211 * C154442) *
                C2902 +
            (C2906 + C2907 + C2908) * C2903 + C2920 * C154429) *
               C154393 -
           (C3960 * C154429 + (C3507 + C3468 + C3469) * C2903 +
            (C4299 * C154442 + C4300 * C154468 +
             (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                 C154480) *
                C2902) *
               C154146) *
              C154463 +
          (((C4300 * C154480 + C4299 * C154468 + C5676 * C154442) * C2902 +
            (C4279 + C4280 + C4303) * C2903 +
            (C4285 + C4286 + C4304) * C154429) *
               C154146 -
           (C3734 * C154429 + (C3219 + C3174 + C3175) * C2903 +
            (C3214 * C154442 + C3211 * C154468 + C3210 * C154480) * C2902) *
               C154393) *
              C154464 +
          (((C3211 * C154480 + C3214 * C154468 + C4687 * C154442) * C2902 +
            (C3180 + C3220 + C3221) * C2903 +
            (C3185 + C3222 + C3223) * C154429) *
               C154393 -
           (((C134 * C5660 - C135 * C5657 - C134 * C5661 + C154181 * C5666) *
                 C154442 +
             C4302 * C154468 + C3500 * C154480) *
                C154429 +
            ((C134 * C5662 - C135 * C5658 - C134 * C5663 + C154181 * C5667) *
                 C154442 +
             C4301 * C154468 + C3501 * C154480) *
                C2903 +
            ((C134 * C5664 - C135 * C5659 - C134 * C5665 + C154181 * C5668) *
                 C154442 +
             C5676 * C154468 + C4299 * C154480) *
                C2902) *
               C154146) *
              C1685) *
         C154047) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                C154164 * C123 +
            C211 * C124 + C212 * C125 + C213 * C126 + C214 * C127) *
               C154393 -
           (C685 * C127 + C686 * C126 + C687 * C125 + C688 * C124 +
            (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                C154164 * C123) *
               C154146) *
              C154463 +
          (((C134 * C1135 - C135 * C1129 - C134 * C1136 + C154181 * C1147) *
                C154164 * C123 +
            C1182 * C124 + C1183 * C125 + C1184 * C126 + C1185 * C127) *
               C154146 -
           (C448 * C127 + C449 * C126 + C450 * C125 + C451 * C124 +
            (C134 * C363 - C135 * C347 - C134 * C364 + C154181 * C383) *
                C154164 * C123) *
               C154393) *
              C154464 +
          (((C134 * C365 - C135 * C348 - C134 * C366 + C154181 * C384) *
                C154164 * C123 +
            C452 * C124 + C453 * C125 + C454 * C126 + C455 * C127) *
               C154393 -
           ((C134 * C1977 - C135 * C1972 - C134 * C1978 + C154181 * C1987) *
                C154164 * C127 +
            (C134 * C1979 - C135 * C1973 - C134 * C1980 + C154181 * C1988) *
                C154164 * C126 +
            (C134 * C1981 - C135 * C1974 - C134 * C1982 + C154181 * C1989) *
                C154164 * C125 +
            (C134 * C1983 - C135 * C1975 - C134 * C1984 + C154181 * C1990) *
                C154164 * C124 +
            (C134 * C1985 - C135 * C1976 - C134 * C1986 + C154181 * C1991) *
                C154164 * C123) *
               C154146) *
              C1685) *
         C154047) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C24270 +
             C3210 * C24271 + C3211 * C154442) *
                C154477 +
            (C24277 + C24278 + C24279) * C154458 + C24291 * C154429) *
               C154393 -
           (C25198 * C154429 + (C24744 + C24745 + C24746) * C154458 +
            (C4299 * C154442 + C4300 * C24271 +
             (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                 C24270) *
                C154477) *
               C154146) *
              C154463 +
          (((C4300 * C24270 + C4299 * C24271 + C5676 * C154442) * C154477 +
            (C25489 + C25490 + C25491) * C154458 +
            (C25492 + C25493 + C25494) * C154429) *
               C154146 -
           (C24975 * C154429 + (C24514 + C24515 + C24516) * C154458 +
            (C3214 * C154442 + C3211 * C24271 + C3210 * C24270) * C154477) *
               C154393) *
              C154464 +
          (((C3211 * C24270 + C3214 * C24271 + C4687 * C154442) * C154477 +
            (C24517 + C24518 + C24519) * C154458 +
            (C24520 + C24521 + C24522) * C154429) *
               C154393 -
           (((C134 * C5660 - C135 * C5657 - C134 * C5661 + C154181 * C5666) *
                 C154442 +
             C4302 * C24271 + C3500 * C24270) *
                C154429 +
            ((C134 * C5662 - C135 * C5658 - C134 * C5663 + C154181 * C5667) *
                 C154442 +
             C4301 * C24271 + C3501 * C24270) *
                C154458 +
            ((C134 * C5664 - C135 * C5659 - C134 * C5665 + C154181 * C5668) *
                 C154442 +
             C5676 * C24271 + C4299 * C24270) *
                C154477) *
               C154146) *
              C1685) *
         C154047) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                C28192 +
            C3210 * C28193 + C3211 * C28194 + C3214 * C28195 + C4687 * C28196) *
               C154011 * C154393 -
           (C28899 * C28196 + C5676 * C28195 + C4299 * C28194 + C4300 * C28193 +
            (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                C28192) *
               C154011 * C154146) *
              C154463 +
          ((C4300 * C28192 + C4299 * C28193 + C5676 * C28194 + C28899 * C28195 +
            C29672 * C28196) *
               C154011 * C154146 -
           (C28341 * C28196 + C4687 * C28195 + C3214 * C28194 + C3211 * C28193 +
            C3210 * C28192) *
               C154011 * C154393) *
              C154464 +
          ((C3211 * C28192 + C3214 * C28193 + C4687 * C28194 + C28341 * C28195 +
            C29115 * C28196) *
               C154011 * C154393 -
           ((C134 * C29662 - C135 * C29661 - C134 * C29663 + C154181 * C29664) *
                C28196 +
            C29672 * C28195 + C28899 * C28194 + C5676 * C28193 +
            C4299 * C28192) *
               C154011 * C154146) *
              C1685) *
         C154047) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C47141 * C144 - C47142 * C136 - C47141 * C145 + C47138 * C160 +
             C47143 * C600 - C47144 * C584 - C47143 * C601 + C47139 * C620 +
             C47145 * C602 - C47146 * C585 - C47145 * C603 + C154445 * C621) *
                C154164 * C154477 +
            (C47220 + C47221 + C47222) * C154164 * C154458 + C47236 * C154429) *
               C154393 -
           (C48319 * C154429 + (C47833 + C47834 + C47835) * C154164 * C154458 +
            (C47145 * C2337 - C47146 * C2328 - C47145 * C2338 +
             C154445 * C2343 + C47143 * C602 - C47144 * C585 - C47143 * C603 +
             C47139 * C621 + C47141 * C600 - C47142 * C584 - C47141 * C601 +
             C47138 * C620) *
                C154164 * C154477) *
               C154146) *
              C154463 +
          (((C47141 * C1135 - C47142 * C1129 - C47141 * C1136 + C47138 * C1147 +
             C47143 * C1554 - C47144 * C1545 - C47143 * C1555 + C47139 * C1560 +
             C47145 * C6274 - C47146 * C6263 - C47145 * C6275 +
             C154445 * C6281) *
                C154164 * C154477 +
            (C48652 + C48653 + C48654) * C154164 * C154458 +
            (C48655 + C48656 + C48657) * C154164 * C154429) *
               C154146 -
           (C48077 * C154429 + (C47531 + C47532 + C47533) * C154164 * C154458 +
            (C47145 * C1554 - C47146 * C1545 - C47145 * C1555 +
             C154445 * C1560 + C47143 * C1135 - C47144 * C1129 -
             C47143 * C1136 + C47139 * C1147 + C47141 * C363 - C47142 * C347 -
             C47141 * C364 + C47138 * C383) *
                C154164 * C154477) *
               C154393) *
              C154464 +
          (((C47141 * C365 - C47142 * C348 - C47141 * C366 + C47138 * C384 +
             C47143 * C1985 - C47144 * C1976 - C47143 * C1986 + C47139 * C1991 +
             C47145 * C3445 - C47146 * C3441 - C47145 * C3446 +
             C154445 * C3453) *
                C154164 * C154477 +
            (C47534 + C47535 + C47536) * C154164 * C154458 +
            (C47537 + C47538 + C47539) * C154164 * C154429) *
               C154393 -
           ((C47145 * C6264 - C47146 * C6258 - C47145 * C6265 +
             C154445 * C6276 + C47143 * C3449 - C47144 * C3443 -
             C47143 * C3450 + C47139 * C3455 + C47141 * C1981 - C47142 * C1974 -
             C47141 * C1982 + C47138 * C1989) *
                C154164 * C154429 +
            (C47145 * C6268 - C47146 * C6260 - C47145 * C6269 +
             C154445 * C6278 + C47143 * C3447 - C47144 * C3442 -
             C47143 * C3448 + C47139 * C3454 + C47141 * C1983 - C47142 * C1975 -
             C47141 * C1984 + C47138 * C1990) *
                C154164 * C154458 +
            (C47145 * C6272 - C47146 * C6262 - C47145 * C6273 +
             C154445 * C6280 + C47143 * C3445 - C47144 * C3441 -
             C47143 * C3446 + C47139 * C3453 + C47141 * C1985 - C47142 * C1976 -
             C47141 * C1986 + C47138 * C1991) *
                C154164 * C154477) *
               C154146) *
              C1685) *
         C154047) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C47141 * C144 - C47142 * C136 - C47141 * C145 + C47138 * C160 +
             C47143 * C600 - C47144 * C584 - C47143 * C601 + C47139 * C620 +
             C47145 * C602 - C47146 * C585 - C47145 * C603 + C154445 * C621) *
                C154480 +
            (C51712 + C51713 + C51714) * C154468 + C51725 * C154442) *
               C154011 * C154393 -
           (C54119 * C154442 + (C52727 + C52728 + C52729) * C154468 +
            (C47145 * C2337 - C47146 * C2328 - C47145 * C2338 +
             C154445 * C2343 + C47143 * C602 - C47144 * C585 - C47143 * C603 +
             C47139 * C621 + C47141 * C600 - C47142 * C584 - C47141 * C601 +
             C47138 * C620) *
                C154480) *
               C154011 * C154146) *
              C154463 +
          (((C52729 + C52728 + C52727) * C154480 +
            (C52726 + C52725 + C52724) * C154468 +
            (C54126 + C54127 + C54128) * C154442) *
               C154011 * C154146 -
           (C53110 * C154442 + (C51717 + C51716 + C51715) * C154468 +
            (C51714 + C51713 + C51712) * C154480) *
               C154011 * C154393) *
              C154464 +
          ((C51725 * C154480 + (C51720 + C51719 + C51718) * C154468 +
            (C53117 + C53118 + C53119) * C154442) *
               C154011 * C154393 -
           ((C47145 * C30000 - C47146 * C29998 - C47145 * C30001 +
             C154445 * C30004 + C47143 * C28466 - C47144 * C28464 -
             C47143 * C28467 + C47139 * C28470 + C47141 * C5664 -
             C47142 * C5659 - C47141 * C5665 + C47138 * C5668) *
                C154442 +
            (C54128 + C54127 + C54126) * C154468 + C54119 * C154480) *
               C154011 * C154146) *
              C1685) *
         C154047) /
            (p * q * std::sqrt(p + q));
    d2ee[217] +=
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             ((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                    C154164 * C123 +
                C211 * C124 + C212 * C125 + C213 * C126 + C214 * C127) *
                   C154082 * C1307 -
               (C448 * C127 + C449 * C126 + C450 * C125 + C451 * C124 +
                (C134 * C363 - C135 * C347 - C134 * C364 + C154181 * C383) *
                    C154164 * C123) *
                   C154082 * C154118) *
                  C1309 +
              ((C451 * C123 + C450 * C124 + C449 * C125 + C448 * C126 +
                C831 * C127) *
                   C154082 * C154118 -
               (C215 * C127 + C214 * C126 + C213 * C125 + C212 * C124 +
                C211 * C123) *
                   C154082 * C1307) *
                  C1310 +
              ((C212 * C123 + C213 * C124 + C214 * C125 + C215 * C126 +
                C216 * C127) *
                   C154082 * C1307 -
               ((C134 * C820 - C135 * C819 - C134 * C821 + C154181 * C822) *
                    C154164 * C127 +
                C831 * C126 + C448 * C125 + C449 * C124 + C450 * C123) *
                   C154082 * C154118) *
                  C1311) +
         std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             (((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                   C154164 * C123 +
               C211 * C124 + C212 * C125 + C213 * C126 + C214 * C127) *
                  C154082 * C1394 -
              (C448 * C127 + C449 * C126 + C450 * C125 + C451 * C124 +
               (C134 * C363 - C135 * C347 - C134 * C364 + C154181 * C383) *
                   C154164 * C123) *
                  C154082 * C1395 +
              ((C134 * C365 - C135 * C348 - C134 * C366 + C154181 * C384) *
                   C154164 * C123 +
               C452 * C124 + C453 * C125 + C454 * C126 + C455 * C127) *
                  C154082 * C1396 -
              ((C134 * C1404 - C135 * C1399 - C134 * C1405 + C154181 * C1414) *
                   C154164 * C127 +
               (C134 * C1406 - C135 * C1400 - C134 * C1407 + C154181 * C1415) *
                   C154164 * C126 +
               (C134 * C1408 - C135 * C1401 - C134 * C1409 + C154181 * C1416) *
                   C154164 * C125 +
               (C134 * C1410 - C135 * C1402 - C134 * C1411 + C154181 * C1417) *
                   C154164 * C124 +
               (C134 * C1412 - C135 * C1403 - C134 * C1413 + C154181 * C1418) *
                   C154164 * C123) *
                  C154082 * C1397) *
             C154047) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                C154164 * C123 +
            C211 * C124 + C212 * C125 + C213 * C126 + C214 * C127) *
               C577 -
           (C685 * C127 + C686 * C126 + C687 * C125 + C688 * C124 +
            (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                C154164 * C123) *
               C578 +
           ((C134 * C602 - C135 * C585 - C134 * C603 + C154181 * C621) *
                C154164 * C123 +
            C689 * C124 + C690 * C125 + C691 * C126 + C692 * C127) *
               C579) *
              C1307 +
          (((C134 * C1135 - C135 * C1129 - C134 * C1136 + C154181 * C1147) *
                C154164 * C123 +
            C1182 * C124 + C1183 * C125 + C1184 * C126 + C1185 * C127) *
               C578 -
           (C448 * C127 + C449 * C126 + C450 * C125 + C451 * C124 +
            (C134 * C363 - C135 * C347 - C134 * C364 + C154181 * C383) *
                C154164 * C123) *
               C577 -
           ((C134 * C1546 - C135 * C1541 - C134 * C1547 + C154181 * C1556) *
                C154164 * C127 +
            (C134 * C1548 - C135 * C1542 - C134 * C1549 + C154181 * C1557) *
                C154164 * C126 +
            (C134 * C1550 - C135 * C1543 - C134 * C1551 + C154181 * C1558) *
                C154164 * C125 +
            (C134 * C1552 - C135 * C1544 - C134 * C1553 + C154181 * C1559) *
                C154164 * C124 +
            (C134 * C1554 - C135 * C1545 - C134 * C1555 + C154181 * C1560) *
                C154164 * C123) *
               C579) *
              C154118) *
         C154047) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C154480 +
             C3210 * C154468 + C3211 * C154442) *
                C2902 +
            (C2906 + C2907 + C2908) * C2903 + C2920 * C154429) *
               C154082 * C1307 -
           (C3734 * C154429 + (C3219 + C3174 + C3175) * C2903 +
            (C3214 * C154442 + C3211 * C154468 + C3210 * C154480) * C2902) *
               C154082 * C154118) *
              C1309 +
          (((C3175 + C3174 + C3219) * C2902 + (C3169 + C3168 + C3218) * C2903 +
            (C3731 + C3732 + C3733) * C154429) *
               C154082 * C154118 -
           (C2921 * C154429 + (C2911 + C2910 + C2909) * C2903 +
            (C2908 + C2907 + C2906) * C2902) *
               C154082 * C1307) *
              C1310 +
          ((C2920 * C2902 + (C2914 + C2913 + C2912) * C2903 +
            (C2915 + C2916 + C2917) * C154429) *
               C154082 * C1307 -
           (((C134 * C1404 - C135 * C1399 - C134 * C1405 + C154181 * C1414) *
                 C154442 +
             C447 * C154468 + C440 * C154480) *
                C154429 +
            (C3733 + C3732 + C3731) * C2903 + C3734 * C2902) *
               C154082 * C154118) *
              C1311)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                C154480 +
            C3210 * C154468 + C3211 * C154442) *
               C2902 +
           (C2906 + C2907 + C2908) * C2903 + C2920 * C154429) *
              C154082 * C1394 -
          (C3734 * C154429 + (C3219 + C3174 + C3175) * C2903 +
           (C3214 * C154442 + C3211 * C154468 + C3210 * C154480) * C2902) *
              C154082 * C1395 +
          ((C3211 * C154480 + C3214 * C154468 + C4687 * C154442) * C2902 +
           (C3180 + C3220 + C3221) * C2903 +
           (C3185 + C3222 + C3223) * C154429) *
              C154082 * C1396 -
          (((C134 * C4671 - C135 * C4668 - C134 * C4672 + C154181 * C4677) *
                C154442 +
            C3216 * C154468 + C3212 * C154480) *
               C154429 +
           ((C134 * C4673 - C135 * C4669 - C134 * C4674 + C154181 * C4678) *
                C154442 +
            C3215 * C154468 + C3213 * C154480) *
               C2903 +
           ((C134 * C4675 - C135 * C4670 - C134 * C4676 + C154181 * C4679) *
                C154442 +
            C4687 * C154468 + C3214 * C154480) *
               C2902) *
              C154082 * C1397) *
         C154047) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C154480 +
             C3210 * C154468 + C3211 * C154442) *
                C2902 +
            (C2906 + C2907 + C2908) * C2903 + C2920 * C154429) *
               C577 -
           (C3960 * C154429 + (C3507 + C3468 + C3469) * C2903 +
            (C4299 * C154442 + C4300 * C154468 +
             (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                 C154480) *
                C2902) *
               C578 +
           (((C134 * C602 - C135 * C585 - C134 * C603 + C154181 * C621) *
                 C154480 +
             C4930 * C154468 + C4931 * C154442) *
                C2902 +
            (C3470 + C3508 + C3509) * C2903 +
            (C3479 + C3510 + C3511) * C154429) *
               C579) *
              C1307 +
          (((C4300 * C154480 + C4299 * C154468 +
             (C134 * C4258 - C135 * C4254 - C134 * C4259 + C154181 * C4266) *
                 C154442) *
                C2902 +
            (C4279 + C4280 + C4303) * C2903 +
            (C4285 + C4286 + C4304) * C154429) *
               C578 -
           (C3734 * C154429 + (C3219 + C3174 + C3175) * C2903 +
            (C3214 * C154442 + C3211 * C154468 + C3210 * C154480) * C2902) *
               C577 -
           (((C134 * C4908 - C135 * C4905 - C134 * C4909 + C154181 * C4914) *
                 C154442 +
             C3505 * C154468 + C3504 * C154480) *
                C154429 +
            ((C134 * C4910 - C135 * C4906 - C134 * C4911 + C154181 * C4915) *
                 C154442 +
             C3503 * C154468 + C3502 * C154480) *
                C2903 +
            ((C134 * C4912 - C135 * C4907 - C134 * C4913 + C154181 * C4916) *
                 C154442 +
             C4931 * C154468 + C4930 * C154480) *
                C2902) *
               C579) *
              C154118) *
         C154047) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C24270 +
             C3210 * C24271 + C3211 * C154442) *
                C154477 +
            (C24277 + C24278 + C24279) * C154458 + C24291 * C154429) *
               C154082 * C1307 -
           (C24975 * C154429 + (C24514 + C24515 + C24516) * C154458 +
            (C3214 * C154442 + C3211 * C24271 + C3210 * C24270) * C154477) *
               C154082 * C154118) *
              C1309 +
          (((C24516 + C24515 + C24514) * C154477 +
            (C24513 + C24512 + C24511) * C154458 +
            (C24972 + C24973 + C24974) * C154429) *
               C154082 * C154118 -
           (C24292 * C154429 + (C24282 + C24281 + C24280) * C154458 +
            (C24279 + C24278 + C24277) * C154477) *
               C154082 * C1307) *
              C1310 +
          ((C24291 * C154477 + (C24285 + C24284 + C24283) * C154458 +
            (C24286 + C24287 + C24288) * C154429) *
               C154082 * C1307 -
           (((C134 * C1404 - C135 * C1399 - C134 * C1405 + C154181 * C1414) *
                 C154442 +
             C447 * C24271 + C440 * C24270) *
                C154429 +
            (C24974 + C24973 + C24972) * C154458 + C24975 * C154477) *
               C154082 * C154118) *
              C1311)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                C24270 +
            C3210 * C24271 + C3211 * C154442) *
               C154477 +
           (C24277 + C24278 + C24279) * C154458 + C24291 * C154429) *
              C154082 * C1394 -
          (C24975 * C154429 + (C24514 + C24515 + C24516) * C154458 +
           (C3214 * C154442 + C3211 * C24271 + C3210 * C24270) * C154477) *
              C154082 * C1395 +
          ((C3211 * C24270 + C3214 * C24271 + C4687 * C154442) * C154477 +
           (C24517 + C24518 + C24519) * C154458 +
           (C24520 + C24521 + C24522) * C154429) *
              C154082 * C1396 -
          (((C134 * C4671 - C135 * C4668 - C134 * C4672 + C154181 * C4677) *
                C154442 +
            C3216 * C24271 + C3212 * C24270) *
               C154429 +
           ((C134 * C4673 - C135 * C4669 - C134 * C4674 + C154181 * C4678) *
                C154442 +
            C3215 * C24271 + C3213 * C24270) *
               C154458 +
           ((C134 * C4675 - C135 * C4670 - C134 * C4676 + C154181 * C4679) *
                C154442 +
            C4687 * C24271 + C3214 * C24270) *
               C154477) *
              C154082 * C1397) *
         C154047) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C24270 +
             C3210 * C24271 + C3211 * C154442) *
                C154477 +
            (C24277 + C24278 + C24279) * C154458 + C24291 * C154429) *
               C577 -
           (C25198 * C154429 + (C24744 + C24745 + C24746) * C154458 +
            (C4299 * C154442 + C4300 * C24271 +
             (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                 C24270) *
                C154477) *
               C578 +
           (((C134 * C602 - C135 * C585 - C134 * C603 + C154181 * C621) *
                 C24270 +
             C4930 * C24271 + C4931 * C154442) *
                C154477 +
            (C24747 + C24748 + C24749) * C154458 +
            (C24750 + C24751 + C24752) * C154429) *
               C579) *
              C1307 +
          (((C4300 * C24270 + C4299 * C24271 + C5676 * C154442) * C154477 +
            (C25489 + C25490 + C25491) * C154458 +
            (C25492 + C25493 + C25494) * C154429) *
               C578 -
           (C24975 * C154429 + (C24514 + C24515 + C24516) * C154458 +
            (C3214 * C154442 + C3211 * C24271 + C3210 * C24270) * C154477) *
               C577 -
           (((C134 * C4908 - C135 * C4905 - C134 * C4909 + C154181 * C4914) *
                 C154442 +
             C3505 * C24271 + C3504 * C24270) *
                C154429 +
            ((C134 * C4910 - C135 * C4906 - C134 * C4911 + C154181 * C4915) *
                 C154442 +
             C3503 * C24271 + C3502 * C24270) *
                C154458 +
            ((C134 * C4912 - C135 * C4907 - C134 * C4913 + C154181 * C4916) *
                 C154442 +
             C4931 * C24271 + C4930 * C24270) *
                C154477) *
               C579) *
              C154118) *
         C154047) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                C28192 +
            C3210 * C28193 + C3211 * C28194 + C3214 * C28195 + C4687 * C28196) *
               C154011 * C154082 * C1307 -
           (C28341 * C28196 + C4687 * C28195 + C3214 * C28194 + C3211 * C28193 +
            C3210 * C28192) *
               C154011 * C154082 * C154118) *
              C1309 +
          ((C443 * C28192 + C444 * C28193 + C3213 * C28194 + C3215 * C28195 +
            C28342 * C28196) *
               C154011 * C154082 * C154118 -
           (C3215 * C28196 + C3213 * C28195 + C444 * C28194 + C443 * C28193 +
            C205 * C28192) *
               C154011 * C154082 * C1307) *
              C1310 +
          ((C206 * C28192 + C442 * C28193 + C445 * C28194 + C3212 * C28195 +
            C3216 * C28196) *
               C154011 * C154082 * C1307 -
           ((C134 * C4671 - C135 * C4668 - C134 * C4672 + C154181 * C4677) *
                C28196 +
            C3216 * C28195 + C3212 * C28194 + C445 * C28193 + C442 * C28192) *
               C154011 * C154082 * C154118) *
              C1311)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) * C28192 +
           C3210 * C28193 + C3211 * C28194 + C3214 * C28195 + C4687 * C28196) *
              C154011 * C154082 * C1394 -
          (C28341 * C28196 + C4687 * C28195 + C3214 * C28194 + C3211 * C28193 +
           C3210 * C28192) *
              C154011 * C154082 * C1395 +
          (C3211 * C28192 + C3214 * C28193 + C4687 * C28194 + C28341 * C28195 +
           C29115 * C28196) *
              C154011 * C154082 * C1396 -
          ((C134 * C29105 - C135 * C29104 - C134 * C29106 + C154181 * C29107) *
               C28196 +
           C29115 * C28195 + C28341 * C28194 + C4687 * C28193 +
           C3214 * C28192) *
              C154011 * C154082 * C1397) *
         C154047) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                C28192 +
            C3210 * C28193 + C3211 * C28194 + C3214 * C28195 + C4687 * C28196) *
               C154011 * C577 -
           (C28899 * C28196 + C5676 * C28195 + C4299 * C28194 + C4300 * C28193 +
            (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                C28192) *
               C154011 * C578 +
           ((C134 * C602 - C135 * C585 - C134 * C603 + C154181 * C621) *
                C28192 +
            C4930 * C28193 + C4931 * C28194 + C29254 * C28195 +
            C29255 * C28196) *
               C154011 * C579) *
              C1307 +
          ((C4300 * C28192 + C4299 * C28193 + C5676 * C28194 + C28899 * C28195 +
            (C134 * C28880 - C135 * C28878 - C134 * C28881 + C154181 * C28884) *
                C28196) *
               C154011 * C578 -
           (C28341 * C28196 + C4687 * C28195 + C3214 * C28194 + C3211 * C28193 +
            C3210 * C28192) *
               C154011 * C577 -
           ((C134 * C29238 - C135 * C29237 - C134 * C29239 + C154181 * C29240) *
                C28196 +
            C29255 * C28195 + C29254 * C28194 + C4931 * C28193 +
            C4930 * C28192) *
               C154011 * C579) *
              C154118) *
         C154047) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C47141 * C144 - C47142 * C136 - C47141 * C145 + C47138 * C160 +
             C47143 * C600 - C47144 * C584 - C47143 * C601 + C47139 * C620 +
             C47145 * C602 - C47146 * C585 - C47145 * C603 + C154445 * C621) *
                C154164 * C154477 +
            (C47220 + C47221 + C47222) * C154164 * C154458 + C47236 * C154429) *
               C154082 * C1307 -
           (C48077 * C154429 + (C47531 + C47532 + C47533) * C154164 * C154458 +
            (C47145 * C1554 - C47146 * C1545 - C47145 * C1555 +
             C154445 * C1560 + C47143 * C1135 - C47144 * C1129 -
             C47143 * C1136 + C47139 * C1147 + C47141 * C363 - C47142 * C347 -
             C47141 * C364 + C47138 * C383) *
                C154164 * C154477) *
               C154082 * C154118) *
              C1309 +
          (((C47533 + C47532 + C47531) * C154164 * C154477 +
            (C47530 + C47529 + C47528) * C154164 * C154458 +
            (C48081 + C48082 + C48083) * C154164 * C154429) *
               C154082 * C154118 -
           (C47237 * C154429 + (C47225 + C47224 + C47223) * C154164 * C154458 +
            (C47222 + C47221 + C47220) * C154164 * C154477) *
               C154082 * C1307) *
              C1310 +
          ((C47236 * C154477 + (C47228 + C47227 + C47226) * C154164 * C154458 +
            (C47229 + C47230 + C47231) * C154164 * C154429) *
               C154082 * C1307 -
           ((C47145 * C1546 - C47146 * C1541 - C47145 * C1547 +
             C154445 * C1556 + C47143 * C1143 - C47144 * C1133 -
             C47143 * C1144 + C47139 * C1151 + C47141 * C355 - C47142 * C343 -
             C47141 * C356 + C47138 * C379) *
                C154164 * C154429 +
            (C48083 + C48082 + C48081) * C154164 * C154458 + C48077 * C154477) *
               C154082 * C154118) *
              C1311)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C47141 * C144 - C47142 * C136 - C47141 * C145 + C47138 * C160 +
            C47143 * C600 - C47144 * C584 - C47143 * C601 + C47139 * C620 +
            C47145 * C602 - C47146 * C585 - C47145 * C603 + C154445 * C621) *
               C154164 * C154477 +
           (C47220 + C47221 + C47222) * C154164 * C154458 + C47236 * C154429) *
              C154082 * C1394 -
          (C48077 * C154429 + (C47531 + C47532 + C47533) * C154164 * C154458 +
           (C47145 * C1554 - C47146 * C1545 - C47145 * C1555 + C154445 * C1560 +
            C47143 * C1135 - C47144 * C1129 - C47143 * C1136 + C47139 * C1147 +
            C47141 * C363 - C47142 * C347 - C47141 * C364 + C47138 * C383) *
               C154164 * C154477) *
              C154082 * C1395 +
          ((C47141 * C365 - C47142 * C348 - C47141 * C366 + C47138 * C384 +
            C47143 * C1985 - C47144 * C1976 - C47143 * C1986 + C47139 * C1991 +
            C47145 * C3445 - C47146 * C3441 - C47145 * C3446 +
            C154445 * C3453) *
               C154164 * C154477 +
           (C47534 + C47535 + C47536) * C154164 * C154458 +
           (C47537 + C47538 + C47539) * C154164 * C154429) *
              C154082 * C1396 -
          ((C47145 * C4908 - C47146 * C4905 - C47145 * C4909 + C154445 * C4914 +
            C47143 * C4262 - C47144 * C4256 - C47143 * C4263 + C47139 * C4268 +
            C47141 * C1408 - C47142 * C1401 - C47141 * C1409 + C47138 * C1416) *
               C154164 * C154429 +
           (C47145 * C4910 - C47146 * C4906 - C47145 * C4911 + C154445 * C4915 +
            C47143 * C4260 - C47144 * C4255 - C47143 * C4261 + C47139 * C4267 +
            C47141 * C1410 - C47142 * C1402 - C47141 * C1411 + C47138 * C1417) *
               C154164 * C154458 +
           (C47145 * C4912 - C47146 * C4907 - C47145 * C4913 + C154445 * C4916 +
            C47143 * C4258 - C47144 * C4254 - C47143 * C4259 + C47139 * C4266 +
            C47141 * C1412 - C47142 * C1403 - C47141 * C1413 + C47138 * C1418) *
               C154164 * C154477) *
              C154082 * C1397) *
         C154047) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C47141 * C144 - C47142 * C136 - C47141 * C145 + C47138 * C160 +
             C47143 * C600 - C47144 * C584 - C47143 * C601 + C47139 * C620 +
             C47145 * C602 - C47146 * C585 - C47145 * C603 + C154445 * C621) *
                C154164 * C154477 +
            (C47220 + C47221 + C47222) * C154164 * C154458 + C47236 * C154429) *
               C577 -
           (C48319 * C154429 + (C47833 + C47834 + C47835) * C154164 * C154458 +
            (C47145 * C2337 - C47146 * C2328 - C47145 * C2338 +
             C154445 * C2343 + C47143 * C602 - C47144 * C585 - C47143 * C603 +
             C47139 * C621 + C47141 * C600 - C47142 * C584 - C47141 * C601 +
             C47138 * C620) *
                C154164 * C154477) *
               C578 +
           ((C47141 * C602 - C47142 * C585 - C47141 * C603 + C47138 * C621 +
             C47143 * C2337 - C47144 * C2328 - C47143 * C2338 + C47139 * C2343 +
             C47145 * C7777 - C47146 * C7773 - C47145 * C7778 +
             C154445 * C7785) *
                C154164 * C154477 +
            (C47836 + C47837 + C47838) * C154164 * C154458 +
            (C47839 + C47840 + C47841) * C154164 * C154429) *
               C579) *
              C1307 +
          (((C47141 * C1135 - C47142 * C1129 - C47141 * C1136 + C47138 * C1147 +
             C47143 * C1554 - C47144 * C1545 - C47143 * C1555 + C47139 * C1560 +
             C47145 * C6274 - C47146 * C6263 - C47145 * C6275 +
             C154445 * C6281) *
                C154164 * C154477 +
            (C48652 + C48653 + C48654) * C154164 * C154458 +
            (C48655 + C48656 + C48657) * C154164 * C154429) *
               C578 -
           (C48077 * C154429 + (C47531 + C47532 + C47533) * C154164 * C154458 +
            (C47145 * C1554 - C47146 * C1545 - C47145 * C1555 +
             C154445 * C1560 + C47143 * C1135 - C47144 * C1129 -
             C47143 * C1136 + C47139 * C1147 + C47141 * C363 - C47142 * C347 -
             C47141 * C364 + C47138 * C383) *
                C154164 * C154477) *
               C577 -
           ((C47145 * C9278 - C47146 * C9275 - C47145 * C9279 +
             C154445 * C9284 + C47143 * C6266 - C47144 * C6259 -
             C47143 * C6267 + C47139 * C6277 + C47141 * C1550 - C47142 * C1543 -
             C47141 * C1551 + C47138 * C1558) *
                C154164 * C154429 +
            (C47145 * C9280 - C47146 * C9276 - C47145 * C9281 +
             C154445 * C9285 + C47143 * C6270 - C47144 * C6261 -
             C47143 * C6271 + C47139 * C6279 + C47141 * C1552 - C47142 * C1544 -
             C47141 * C1553 + C47138 * C1559) *
                C154164 * C154458 +
            (C47145 * C9282 - C47146 * C9277 - C47145 * C9283 +
             C154445 * C9286 + C47143 * C6274 - C47144 * C6263 -
             C47143 * C6275 + C47139 * C6281 + C47141 * C1554 - C47142 * C1545 -
             C47141 * C1555 + C47138 * C1560) *
                C154164 * C154477) *
               C579) *
              C154118) *
         C154047) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C47141 * C144 - C47142 * C136 - C47141 * C145 + C47138 * C160 +
             C47143 * C600 - C47144 * C584 - C47143 * C601 + C47139 * C620 +
             C47145 * C602 - C47146 * C585 - C47145 * C603 + C154445 * C621) *
                C154480 +
            (C51712 + C51713 + C51714) * C154468 + C51725 * C154442) *
               C154011 * C154082 * C1307 -
           ((C51718 + C51719 + C51720) * C154442 +
            (C51717 + C51716 + C51715) * C154468 +
            (C51714 + C51713 + C51712) * C154480) *
               C154011 * C154082 * C154118) *
              C1309 +
          (((C47533 + C47532 + C47531) * C154480 +
            (C47534 + C47535 + C47536) * C154468 +
            (C51721 + C51722 + C51723) * C154442) *
               C154011 * C154082 * C154118 -
           (C51699 * C154442 + (C47531 + C47532 + C47533) * C154468 +
            (C47222 + C47221 + C47220) * C154480) *
               C154011 * C154082 * C1307) *
              C1310 +
          ((C47234 * C154480 + (C47530 + C47529 + C47528) * C154468 +
            (C47537 + C47538 + C47539) * C154442) *
               C154011 * C154082 * C1307 -
           ((C47145 * C4908 - C47146 * C4905 - C47145 * C4909 +
             C154445 * C4914 + C47143 * C4262 - C47144 * C4256 -
             C47143 * C4263 + C47139 * C4268 + C47141 * C1408 - C47142 * C1401 -
             C47141 * C1409 + C47138 * C1416) *
                C154442 +
            (C47539 + C47538 + C47537) * C154468 + C48073 * C154480) *
               C154011 * C154082 * C154118) *
              C1311)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C47141 * C144 - C47142 * C136 - C47141 * C145 + C47138 * C160 +
            C47143 * C600 - C47144 * C584 - C47143 * C601 + C47139 * C620 +
            C47145 * C602 - C47146 * C585 - C47145 * C603 + C154445 * C621) *
               C154480 +
           (C51712 + C51713 + C51714) * C154468 + C51725 * C154442) *
              C154011 * C154082 * C1394 -
          (C53110 * C154442 + (C51717 + C51716 + C51715) * C154468 +
           (C51714 + C51713 + C51712) * C154480) *
              C154011 * C154082 * C1395 +
          (C51725 * C154480 + (C51720 + C51719 + C51718) * C154468 +
           (C53117 + C53118 + C53119) * C154442) *
              C154011 * C154082 * C1396 -
          ((C47145 * C29238 - C47146 * C29237 - C47145 * C29239 +
            C154445 * C29240 + C47143 * C28880 - C47144 * C28878 -
            C47143 * C28881 + C47139 * C28884 + C47141 * C4675 -
            C47142 * C4670 - C47141 * C4676 + C47138 * C4679) *
               C154442 +
           (C53119 + C53118 + C53117) * C154468 + C53110 * C154480) *
              C154011 * C154082 * C1397) *
         C154047) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C47141 * C144 - C47142 * C136 - C47141 * C145 + C47138 * C160 +
             C47143 * C600 - C47144 * C584 - C47143 * C601 + C47139 * C620 +
             C47145 * C602 - C47146 * C585 - C47145 * C603 + C154445 * C621) *
                C154480 +
            (C51712 + C51713 + C51714) * C154468 + C51725 * C154442) *
               C154011 * C577 -
           ((C52724 + C52725 + C52726) * C154442 +
            (C52727 + C52728 + C52729) * C154468 +
            (C47145 * C2337 - C47146 * C2328 - C47145 * C2338 +
             C154445 * C2343 + C47143 * C602 - C47144 * C585 - C47143 * C603 +
             C47139 * C621 + C47141 * C600 - C47142 * C584 - C47141 * C601 +
             C47138 * C620) *
                C154480) *
               C154011 * C578 +
           ((C47141 * C602 - C47142 * C585 - C47141 * C603 + C47138 * C621 +
             C47143 * C2337 - C47144 * C2328 - C47143 * C2338 + C47139 * C2343 +
             C47145 * C7777 - C47146 * C7773 - C47145 * C7778 +
             C154445 * C7785) *
                C154480 +
            (C53374 + C53375 + C53376) * C154468 +
            (C53377 + C53378 + C53379) * C154442) *
               C154011 * C579) *
              C1307 +
          (((C52729 + C52728 + C52727) * C154480 +
            (C52726 + C52725 + C52724) * C154468 +
            (C47141 * C4258 - C47142 * C4254 - C47141 * C4259 + C47138 * C4266 +
             C47143 * C4912 - C47144 * C4907 - C47143 * C4913 + C47139 * C4916 +
             C47145 * C30002 - C47146 * C29999 - C47145 * C30003 +
             C154445 * C30005) *
                C154442) *
               C154011 * C578 -
           (C53110 * C154442 + (C51717 + C51716 + C51715) * C154468 +
            (C51714 + C51713 + C51712) * C154480) *
               C154011 * C577 -
           ((C47145 * C32489 - C47146 * C32488 - C47145 * C32490 +
             C154445 * C32491 + C47143 * C30002 - C47144 * C29999 -
             C47143 * C30003 + C47139 * C30005 + C47141 * C4912 -
             C47142 * C4907 - C47141 * C4913 + C47138 * C4916) *
                C154442 +
            (C53379 + C53378 + C53377) * C154468 +
            (C53376 + C53375 + C53374) * C154480) *
               C154011 * C579) *
              C154118) *
         C154047) /
            (p * q * std::sqrt(p + q));
    d2ee[218] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                  C154480 +
              C3210 * C154468 + C3211 * C154442) *
                 C2902 +
             (C2906 + C2907 + C2908) * C2903 + C2920 * C154429) *
                C154393 -
            (C3960 * C154429 + (C3507 + C3468 + C3469) * C2903 +
             (C4299 * C154442 + C4300 * C154468 +
              (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                  C154480) *
                 C2902) *
                C154146) *
               C1307 +
           (((C4300 * C154480 + C4299 * C154468 +
              (C134 * C4258 - C135 * C4254 - C134 * C4259 + C154181 * C4266) *
                  C154442) *
                 C2902 +
             (C4279 + C4280 + C4303) * C2903 +
             (C4285 + C4286 + C4304) * C154429) *
                C154146 -
            (C3734 * C154429 + (C3219 + C3174 + C3175) * C2903 +
             (C3214 * C154442 + C3211 * C154468 + C3210 * C154480) * C2902) *
                C154393) *
               C154118) *
              C154384 +
          ((((C3469 + C3468 + C3507) * C2902 + (C3463 + C3462 + C3506) * C2903 +
             (C3954 + C3955 + C3964) * C154429) *
                C154146 -
            (C2921 * C154429 + (C2911 + C2910 + C2909) * C2903 +
             (C2908 + C2907 + C2906) * C2902) *
                C154393) *
               C1307 +
           (((C3175 + C3174 + C3219) * C2902 + (C3169 + C3168 + C3218) * C2903 +
             (C3731 + C3732 + C3733) * C154429) *
                C154393 -
            (((C134 * C4264 - C135 * C4257 - C134 * C4265 + C154181 * C4269) *
                  C154442 +
              C3963 * C154468 + C1180 * C154480) *
                 C154429 +
             (C4304 + C4286 + C4285) * C2903 +
             (C4303 + C4280 + C4279) * C2902) *
                C154146) *
               C154118) *
              C154053)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C154164 * C123 +
             C211 * C124 + C212 * C125 + C213 * C126 + C214 * C127) *
                C154393 -
            (C685 * C127 + C686 * C126 + C687 * C125 + C688 * C124 +
             (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                 C154164 * C123) *
                C154146) *
               C1307 +
           (((C134 * C1135 - C135 * C1129 - C134 * C1136 + C154181 * C1147) *
                 C154164 * C123 +
             C1182 * C124 + C1183 * C125 + C1184 * C126 + C1185 * C127) *
                C154146 -
            (C448 * C127 + C449 * C126 + C450 * C125 + C451 * C124 +
             (C134 * C363 - C135 * C347 - C134 * C364 + C154181 * C383) *
                 C154164 * C123) *
                C154393) *
               C154118) *
              C154384 +
          (((C688 * C123 + C687 * C124 + C686 * C125 + C685 * C126 +
             C967 * C127) *
                C154146 -
            (C215 * C127 + C214 * C126 + C213 * C125 + C212 * C124 +
             C211 * C123) *
                C154393) *
               C1307 +
           ((C451 * C123 + C450 * C124 + C449 * C125 + C448 * C126 +
             C831 * C127) *
                C154393 -
            ((C134 * C1145 - C135 * C1134 - C134 * C1146 + C154181 * C1152) *
                 C154164 * C127 +
             C1185 * C126 + C1184 * C125 + C1183 * C124 + C1182 * C123) *
                C154146) *
               C154118) *
              C154053)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                  C24270 +
              C3210 * C24271 + C3211 * C154442) *
                 C154477 +
             (C24277 + C24278 + C24279) * C154458 + C24291 * C154429) *
                C154393 -
            (C25198 * C154429 + (C24744 + C24745 + C24746) * C154458 +
             (C4299 * C154442 + C4300 * C24271 +
              (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                  C24270) *
                 C154477) *
                C154146) *
               C1307 +
           (((C4300 * C24270 + C4299 * C24271 + C5676 * C154442) * C154477 +
             (C25489 + C25490 + C25491) * C154458 +
             (C25492 + C25493 + C25494) * C154429) *
                C154146 -
            (C24975 * C154429 + (C24514 + C24515 + C24516) * C154458 +
             (C3214 * C154442 + C3211 * C24271 + C3210 * C24270) * C154477) *
                C154393) *
               C154118) *
              C154384 +
          ((((C24746 + C24745 + C24744) * C154477 +
             (C24743 + C24742 + C24741) * C154458 +
             (C25195 + C25196 + C25197) * C154429) *
                C154146 -
            (C24292 * C154429 + (C24282 + C24281 + C24280) * C154458 +
             (C24279 + C24278 + C24277) * C154477) *
                C154393) *
               C1307 +
           (((C24516 + C24515 + C24514) * C154477 +
             (C24513 + C24512 + C24511) * C154458 +
             (C24972 + C24973 + C24974) * C154429) *
                C154393 -
            (((C134 * C4264 - C135 * C4257 - C134 * C4265 + C154181 * C4269) *
                  C154442 +
              C3963 * C24271 + C1180 * C24270) *
                 C154429 +
             (C25494 + C25493 + C25492) * C154458 +
             (C25491 + C25490 + C25489) * C154477) *
                C154146) *
               C154118) *
              C154053)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C28192 +
             C3210 * C28193 + C3211 * C28194 + C3214 * C28195 +
             C4687 * C28196) *
                C154011 * C154393 -
            (C28899 * C28196 + C5676 * C28195 + C4299 * C28194 +
             C4300 * C28193 +
             (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                 C28192) *
                C154011 * C154146) *
               C1307 +
           ((C4300 * C28192 + C4299 * C28193 + C5676 * C28194 +
             C28899 * C28195 +
             (C134 * C28880 - C135 * C28878 - C134 * C28881 +
              C154181 * C28884) *
                 C28196) *
                C154011 * C154146 -
            (C28341 * C28196 + C4687 * C28195 + C3214 * C28194 +
             C3211 * C28193 + C3210 * C28192) *
                C154011 * C154393) *
               C154118) *
              C154384 +
          (((C680 * C28192 + C1178 * C28193 + C3501 * C28194 + C4301 * C28195 +
             C28900 * C28196) *
                C154011 * C154146 -
            (C3215 * C28196 + C3213 * C28195 + C444 * C28194 + C443 * C28193 +
             C205 * C28192) *
                C154011 * C154393) *
               C1307 +
           ((C443 * C28192 + C444 * C28193 + C3213 * C28194 + C3215 * C28195 +
             C28342 * C28196) *
                C154011 * C154393 -
            ((C134 * C28882 - C135 * C28879 - C134 * C28883 +
              C154181 * C28885) *
                 C28196 +
             C28900 * C28195 + C4301 * C28194 + C3501 * C28193 +
             C1178 * C28192) *
                C154011 * C154146) *
               C154118) *
              C154053)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C47141 * C144 - C47142 * C136 - C47141 * C145 + C47138 * C160 +
              C47143 * C600 - C47144 * C584 - C47143 * C601 + C47139 * C620 +
              C47145 * C602 - C47146 * C585 - C47145 * C603 + C154445 * C621) *
                 C154164 * C154477 +
             (C47220 + C47221 + C47222) * C154164 * C154458 +
             C47236 * C154429) *
                C154393 -
            (C48319 * C154429 + (C47833 + C47834 + C47835) * C154164 * C154458 +
             (C47145 * C2337 - C47146 * C2328 - C47145 * C2338 +
              C154445 * C2343 + C47143 * C602 - C47144 * C585 - C47143 * C603 +
              C47139 * C621 + C47141 * C600 - C47142 * C584 - C47141 * C601 +
              C47138 * C620) *
                 C154164 * C154477) *
                C154146) *
               C1307 +
           (((C47141 * C1135 - C47142 * C1129 - C47141 * C1136 +
              C47138 * C1147 + C47143 * C1554 - C47144 * C1545 -
              C47143 * C1555 + C47139 * C1560 + C47145 * C6274 -
              C47146 * C6263 - C47145 * C6275 + C154445 * C6281) *
                 C154164 * C154477 +
             (C48652 + C48653 + C48654) * C154164 * C154458 +
             (C48655 + C48656 + C48657) * C154164 * C154429) *
                C154146 -
            (C48077 * C154429 + (C47531 + C47532 + C47533) * C154164 * C154458 +
             (C47145 * C1554 - C47146 * C1545 - C47145 * C1555 +
              C154445 * C1560 + C47143 * C1135 - C47144 * C1129 -
              C47143 * C1136 + C47139 * C1147 + C47141 * C363 - C47142 * C347 -
              C47141 * C364 + C47138 * C383) *
                 C154164 * C154477) *
                C154393) *
               C154118) *
              C154384 +
          ((((C47835 + C47834 + C47833) * C154164 * C154477 +
             (C47832 + C47831 + C47830) * C154164 * C154458 +
             (C48323 + C48324 + C48325) * C154164 * C154429) *
                C154146 -
            (C47237 * C154429 + (C47225 + C47224 + C47223) * C154164 * C154458 +
             (C47222 + C47221 + C47220) * C154164 * C154477) *
                C154393) *
               C1307 +
           (((C47533 + C47532 + C47531) * C154164 * C154477 +
             (C47530 + C47529 + C47528) * C154164 * C154458 +
             (C48081 + C48082 + C48083) * C154164 * C154429) *
                C154393 -
            ((C47145 * C8648 - C47146 * C8647 - C47145 * C8649 +
              C154445 * C8650 + C47143 * C1548 - C47144 * C1542 -
              C47143 * C1549 + C47139 * C1557 + C47141 * C1141 -
              C47142 * C1132 - C47141 * C1142 + C47138 * C1150) *
                 C154164 * C154429 +
             (C48657 + C48656 + C48655) * C154164 * C154458 +
             (C48654 + C48653 + C48652) * C154164 * C154477) *
                C154146) *
               C154118) *
              C154053)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C47141 * C144 - C47142 * C136 - C47141 * C145 + C47138 * C160 +
              C47143 * C600 - C47144 * C584 - C47143 * C601 + C47139 * C620 +
              C47145 * C602 - C47146 * C585 - C47145 * C603 + C154445 * C621) *
                 C154480 +
             (C51712 + C51713 + C51714) * C154468 + C51725 * C154442) *
                C154011 * C154393 -
            ((C52724 + C52725 + C52726) * C154442 +
             (C52727 + C52728 + C52729) * C154468 +
             (C47145 * C2337 - C47146 * C2328 - C47145 * C2338 +
              C154445 * C2343 + C47143 * C602 - C47144 * C585 - C47143 * C603 +
              C47139 * C621 + C47141 * C600 - C47142 * C584 - C47141 * C601 +
              C47138 * C620) *
                 C154480) *
                C154011 * C154146) *
               C1307 +
           (((C52729 + C52728 + C52727) * C154480 +
             (C52726 + C52725 + C52724) * C154468 +
             (C47141 * C4258 - C47142 * C4254 - C47141 * C4259 +
              C47138 * C4266 + C47143 * C4912 - C47144 * C4907 -
              C47143 * C4913 + C47139 * C4916 + C47145 * C30002 -
              C47146 * C29999 - C47145 * C30003 + C154445 * C30005) *
                 C154442) *
                C154011 * C154146 -
            (C53110 * C154442 + (C51717 + C51716 + C51715) * C154468 +
             (C51714 + C51713 + C51712) * C154480) *
                C154011 * C154393) *
               C154118) *
              C154384 +
          ((((C47835 + C47834 + C47833) * C154480 +
             (C48652 + C48653 + C48654) * C154468 +
             (C52730 + C52731 + C52732) * C154442) *
                C154011 * C154146 -
            (C51699 * C154442 + (C47531 + C47532 + C47533) * C154468 +
             (C47222 + C47221 + C47220) * C154480) *
                C154011 * C154393) *
               C1307 +
           (((C47533 + C47532 + C47531) * C154480 +
             (C47534 + C47535 + C47536) * C154468 +
             (C51721 + C51722 + C51723) * C154442) *
                C154011 * C154393 -
            ((C47145 * C31817 - C47146 * C31816 - C47145 * C31818 +
              C154445 * C31819 + C47143 * C4910 - C47144 * C4906 -
              C47143 * C4911 + C47139 * C4915 + C47141 * C4260 -
              C47142 * C4255 - C47141 * C4261 + C47138 * C4267) *
                 C154442 +
             (C52732 + C52731 + C52730) * C154468 +
             (C48654 + C48653 + C48652) * C154480) *
                C154011 * C154146) *
               C154118) *
              C154053)) /
            (p * q * std::sqrt(p + q));
    d2ee[219] +=
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
               C154164 * C123 +
           C211 * C124 + C212 * C125 + C213 * C126 + C214 * C127) *
              C154082 * C1394 -
          (C448 * C127 + C449 * C126 + C450 * C125 + C451 * C124 +
           (C134 * C363 - C135 * C347 - C134 * C364 + C154181 * C383) *
               C154164 * C123) *
              C154082 * C1395 +
          ((C134 * C365 - C135 * C348 - C134 * C366 + C154181 * C384) *
               C154164 * C123 +
           C452 * C124 + C453 * C125 + C454 * C126 + C455 * C127) *
              C154082 * C1396 -
          ((C134 * C1404 - C135 * C1399 - C134 * C1405 + C154181 * C1414) *
               C154164 * C127 +
           (C134 * C1406 - C135 * C1400 - C134 * C1407 + C154181 * C1415) *
               C154164 * C126 +
           (C134 * C1408 - C135 * C1401 - C134 * C1409 + C154181 * C1416) *
               C154164 * C125 +
           (C134 * C1410 - C135 * C1402 - C134 * C1411 + C154181 * C1417) *
               C154164 * C124 +
           (C134 * C1412 - C135 * C1403 - C134 * C1413 + C154181 * C1418) *
               C154164 * C123) *
              C154082 * C1397) *
         C154047) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                C154164 * C123 +
            C211 * C124 + C212 * C125 + C213 * C126 + C214 * C127) *
               C154082 * C1307 -
           (C448 * C127 + C449 * C126 + C450 * C125 + C451 * C124 +
            (C134 * C363 - C135 * C347 - C134 * C364 + C154181 * C383) *
                C154164 * C123) *
               C154082 * C154118) *
              C1309 +
          ((C451 * C123 + C450 * C124 + C449 * C125 + C448 * C126 +
            C831 * C127) *
               C154082 * C154118 -
           (C215 * C127 + C214 * C126 + C213 * C125 + C212 * C124 +
            C211 * C123) *
               C154082 * C1307) *
              C1310 +
          ((C212 * C123 + C213 * C124 + C214 * C125 + C215 * C126 +
            C216 * C127) *
               C154082 * C1307 -
           ((C134 * C820 - C135 * C819 - C134 * C821 + C154181 * C822) *
                C154164 * C127 +
            C831 * C126 + C448 * C125 + C449 * C124 + C450 * C123) *
               C154082 * C154118) *
              C1311)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C154480 +
             C3210 * C154468 + C3211 * C154442) *
                C2902 +
            (C2906 + C2907 + C2908) * C2903 + C2920 * C154429) *
               C154082 * C1307 -
           (C3734 * C154429 + (C3219 + C3174 + C3175) * C2903 +
            (C3214 * C154442 + C3211 * C154468 + C3210 * C154480) * C2902) *
               C154082 * C154118) *
              C1309 +
          (((C3175 + C3174 + C3219) * C2902 + (C3169 + C3168 + C3218) * C2903 +
            (C3731 + C3732 + C3733) * C154429) *
               C154082 * C154118 -
           (C2921 * C154429 + (C2911 + C2910 + C2909) * C2903 +
            (C2908 + C2907 + C2906) * C2902) *
               C154082 * C1307) *
              C1310 +
          ((C2920 * C2902 + (C2914 + C2913 + C2912) * C2903 +
            (C2915 + C2916 + C2917) * C154429) *
               C154082 * C1307 -
           (((C134 * C1404 - C135 * C1399 - C134 * C1405 + C154181 * C1414) *
                 C154442 +
             C447 * C154468 + C440 * C154480) *
                C154429 +
            (C3733 + C3732 + C3731) * C2903 + C3734 * C2902) *
               C154082 * C154118) *
              C1311)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                C154480 +
            C3210 * C154468 + C3211 * C154442) *
               C2902 +
           (C2906 + C2907 + C2908) * C2903 + C2920 * C154429) *
              C154082 * C1394 -
          (C3734 * C154429 + (C3219 + C3174 + C3175) * C2903 +
           (C3214 * C154442 + C3211 * C154468 + C3210 * C154480) * C2902) *
              C154082 * C1395 +
          ((C3211 * C154480 + C3214 * C154468 + C4687 * C154442) * C2902 +
           (C3180 + C3220 + C3221) * C2903 +
           (C3185 + C3222 + C3223) * C154429) *
              C154082 * C1396 -
          (((C134 * C4671 - C135 * C4668 - C134 * C4672 + C154181 * C4677) *
                C154442 +
            C3216 * C154468 + C3212 * C154480) *
               C154429 +
           ((C134 * C4673 - C135 * C4669 - C134 * C4674 + C154181 * C4678) *
                C154442 +
            C3215 * C154468 + C3213 * C154480) *
               C2903 +
           ((C134 * C4675 - C135 * C4670 - C134 * C4676 + C154181 * C4679) *
                C154442 +
            C4687 * C154468 + C3214 * C154480) *
               C2902) *
              C154082 * C1397) *
         C154047) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C24270 +
             C3210 * C24271 + C3211 * C154442) *
                C154477 +
            (C24277 + C24278 + C24279) * C154458 + C24291 * C154429) *
               C154082 * C1307 -
           (C24975 * C154429 + (C24514 + C24515 + C24516) * C154458 +
            (C3214 * C154442 + C3211 * C24271 + C3210 * C24270) * C154477) *
               C154082 * C154118) *
              C1309 +
          (((C24516 + C24515 + C24514) * C154477 +
            (C24513 + C24512 + C24511) * C154458 +
            (C24972 + C24973 + C24974) * C154429) *
               C154082 * C154118 -
           (C24292 * C154429 + (C24282 + C24281 + C24280) * C154458 +
            (C24279 + C24278 + C24277) * C154477) *
               C154082 * C1307) *
              C1310 +
          ((C24291 * C154477 + (C24285 + C24284 + C24283) * C154458 +
            (C24286 + C24287 + C24288) * C154429) *
               C154082 * C1307 -
           (((C134 * C1404 - C135 * C1399 - C134 * C1405 + C154181 * C1414) *
                 C154442 +
             C447 * C24271 + C440 * C24270) *
                C154429 +
            (C24974 + C24973 + C24972) * C154458 + C24975 * C154477) *
               C154082 * C154118) *
              C1311)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                C24270 +
            C3210 * C24271 + C3211 * C154442) *
               C154477 +
           (C24277 + C24278 + C24279) * C154458 + C24291 * C154429) *
              C154082 * C1394 -
          (C24975 * C154429 + (C24514 + C24515 + C24516) * C154458 +
           (C3214 * C154442 + C3211 * C24271 + C3210 * C24270) * C154477) *
              C154082 * C1395 +
          ((C3211 * C24270 + C3214 * C24271 + C4687 * C154442) * C154477 +
           (C24517 + C24518 + C24519) * C154458 +
           (C24520 + C24521 + C24522) * C154429) *
              C154082 * C1396 -
          (((C134 * C4671 - C135 * C4668 - C134 * C4672 + C154181 * C4677) *
                C154442 +
            C3216 * C24271 + C3212 * C24270) *
               C154429 +
           ((C134 * C4673 - C135 * C4669 - C134 * C4674 + C154181 * C4678) *
                C154442 +
            C3215 * C24271 + C3213 * C24270) *
               C154458 +
           ((C134 * C4675 - C135 * C4670 - C134 * C4676 + C154181 * C4679) *
                C154442 +
            C4687 * C24271 + C3214 * C24270) *
               C154477) *
              C154082 * C1397) *
         C154047) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                C28192 +
            C3210 * C28193 + C3211 * C28194 + C3214 * C28195 + C4687 * C28196) *
               C154011 * C154082 * C1307 -
           (C28341 * C28196 + C4687 * C28195 + C3214 * C28194 + C3211 * C28193 +
            C3210 * C28192) *
               C154011 * C154082 * C154118) *
              C1309 +
          ((C443 * C28192 + C444 * C28193 + C3213 * C28194 + C3215 * C28195 +
            C28342 * C28196) *
               C154011 * C154082 * C154118 -
           (C3215 * C28196 + C3213 * C28195 + C444 * C28194 + C443 * C28193 +
            C205 * C28192) *
               C154011 * C154082 * C1307) *
              C1310 +
          ((C206 * C28192 + C442 * C28193 + C445 * C28194 + C3212 * C28195 +
            C3216 * C28196) *
               C154011 * C154082 * C1307 -
           ((C134 * C4671 - C135 * C4668 - C134 * C4672 + C154181 * C4677) *
                C28196 +
            C3216 * C28195 + C3212 * C28194 + C445 * C28193 + C442 * C28192) *
               C154011 * C154082 * C154118) *
              C1311)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) * C28192 +
           C3210 * C28193 + C3211 * C28194 + C3214 * C28195 + C4687 * C28196) *
              C154011 * C154082 * C1394 -
          (C28341 * C28196 + C4687 * C28195 + C3214 * C28194 + C3211 * C28193 +
           C3210 * C28192) *
              C154011 * C154082 * C1395 +
          (C3211 * C28192 + C3214 * C28193 + C4687 * C28194 + C28341 * C28195 +
           C29115 * C28196) *
              C154011 * C154082 * C1396 -
          ((C134 * C29105 - C135 * C29104 - C134 * C29106 + C154181 * C29107) *
               C28196 +
           C29115 * C28195 + C28341 * C28194 + C4687 * C28193 +
           C3214 * C28192) *
              C154011 * C154082 * C1397) *
         C154047) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C47141 * C144 - C47142 * C136 - C47141 * C145 + C47138 * C160 +
             C47143 * C600 - C47144 * C584 - C47143 * C601 + C47139 * C620 +
             C47145 * C602 - C47146 * C585 - C47145 * C603 + C154445 * C621) *
                C154164 * C154477 +
            (C47220 + C47221 + C47222) * C154164 * C154458 + C47236 * C154429) *
               C154082 * C1307 -
           (C48077 * C154429 + (C47531 + C47532 + C47533) * C154164 * C154458 +
            (C47145 * C1554 - C47146 * C1545 - C47145 * C1555 +
             C154445 * C1560 + C47143 * C1135 - C47144 * C1129 -
             C47143 * C1136 + C47139 * C1147 + C47141 * C363 - C47142 * C347 -
             C47141 * C364 + C47138 * C383) *
                C154164 * C154477) *
               C154082 * C154118) *
              C1309 +
          (((C47533 + C47532 + C47531) * C154164 * C154477 +
            (C47530 + C47529 + C47528) * C154164 * C154458 +
            (C48081 + C48082 + C48083) * C154164 * C154429) *
               C154082 * C154118 -
           (C47237 * C154429 + (C47225 + C47224 + C47223) * C154164 * C154458 +
            (C47222 + C47221 + C47220) * C154164 * C154477) *
               C154082 * C1307) *
              C1310 +
          ((C47236 * C154477 + (C47228 + C47227 + C47226) * C154164 * C154458 +
            (C47229 + C47230 + C47231) * C154164 * C154429) *
               C154082 * C1307 -
           ((C47145 * C1546 - C47146 * C1541 - C47145 * C1547 +
             C154445 * C1556 + C47143 * C1143 - C47144 * C1133 -
             C47143 * C1144 + C47139 * C1151 + C47141 * C355 - C47142 * C343 -
             C47141 * C356 + C47138 * C379) *
                C154164 * C154429 +
            (C48083 + C48082 + C48081) * C154164 * C154458 + C48077 * C154477) *
               C154082 * C154118) *
              C1311)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C47141 * C144 - C47142 * C136 - C47141 * C145 + C47138 * C160 +
            C47143 * C600 - C47144 * C584 - C47143 * C601 + C47139 * C620 +
            C47145 * C602 - C47146 * C585 - C47145 * C603 + C154445 * C621) *
               C154164 * C154477 +
           (C47220 + C47221 + C47222) * C154164 * C154458 + C47236 * C154429) *
              C154082 * C1394 -
          (C48077 * C154429 + (C47531 + C47532 + C47533) * C154164 * C154458 +
           (C47145 * C1554 - C47146 * C1545 - C47145 * C1555 + C154445 * C1560 +
            C47143 * C1135 - C47144 * C1129 - C47143 * C1136 + C47139 * C1147 +
            C47141 * C363 - C47142 * C347 - C47141 * C364 + C47138 * C383) *
               C154164 * C154477) *
              C154082 * C1395 +
          ((C47141 * C365 - C47142 * C348 - C47141 * C366 + C47138 * C384 +
            C47143 * C1985 - C47144 * C1976 - C47143 * C1986 + C47139 * C1991 +
            C47145 * C3445 - C47146 * C3441 - C47145 * C3446 +
            C154445 * C3453) *
               C154164 * C154477 +
           (C47534 + C47535 + C47536) * C154164 * C154458 +
           (C47537 + C47538 + C47539) * C154164 * C154429) *
              C154082 * C1396 -
          ((C47145 * C4908 - C47146 * C4905 - C47145 * C4909 + C154445 * C4914 +
            C47143 * C4262 - C47144 * C4256 - C47143 * C4263 + C47139 * C4268 +
            C47141 * C1408 - C47142 * C1401 - C47141 * C1409 + C47138 * C1416) *
               C154164 * C154429 +
           (C47145 * C4910 - C47146 * C4906 - C47145 * C4911 + C154445 * C4915 +
            C47143 * C4260 - C47144 * C4255 - C47143 * C4261 + C47139 * C4267 +
            C47141 * C1410 - C47142 * C1402 - C47141 * C1411 + C47138 * C1417) *
               C154164 * C154458 +
           (C47145 * C4912 - C47146 * C4907 - C47145 * C4913 + C154445 * C4916 +
            C47143 * C4258 - C47144 * C4254 - C47143 * C4259 + C47139 * C4266 +
            C47141 * C1412 - C47142 * C1403 - C47141 * C1413 + C47138 * C1418) *
               C154164 * C154477) *
              C154082 * C1397) *
         C154047) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C47141 * C144 - C47142 * C136 - C47141 * C145 + C47138 * C160 +
             C47143 * C600 - C47144 * C584 - C47143 * C601 + C47139 * C620 +
             C47145 * C602 - C47146 * C585 - C47145 * C603 + C154445 * C621) *
                C154480 +
            (C51712 + C51713 + C51714) * C154468 + C51725 * C154442) *
               C154011 * C154082 * C1307 -
           ((C51718 + C51719 + C51720) * C154442 +
            (C51717 + C51716 + C51715) * C154468 +
            (C51714 + C51713 + C51712) * C154480) *
               C154011 * C154082 * C154118) *
              C1309 +
          (((C47533 + C47532 + C47531) * C154480 +
            (C47534 + C47535 + C47536) * C154468 +
            (C51721 + C51722 + C51723) * C154442) *
               C154011 * C154082 * C154118 -
           (C51699 * C154442 + (C47531 + C47532 + C47533) * C154468 +
            (C47222 + C47221 + C47220) * C154480) *
               C154011 * C154082 * C1307) *
              C1310 +
          ((C47234 * C154480 + (C47530 + C47529 + C47528) * C154468 +
            (C47537 + C47538 + C47539) * C154442) *
               C154011 * C154082 * C1307 -
           ((C47145 * C4908 - C47146 * C4905 - C47145 * C4909 +
             C154445 * C4914 + C47143 * C4262 - C47144 * C4256 -
             C47143 * C4263 + C47139 * C4268 + C47141 * C1408 - C47142 * C1401 -
             C47141 * C1409 + C47138 * C1416) *
                C154442 +
            (C47539 + C47538 + C47537) * C154468 + C48073 * C154480) *
               C154011 * C154082 * C154118) *
              C1311)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C47141 * C144 - C47142 * C136 - C47141 * C145 + C47138 * C160 +
            C47143 * C600 - C47144 * C584 - C47143 * C601 + C47139 * C620 +
            C47145 * C602 - C47146 * C585 - C47145 * C603 + C154445 * C621) *
               C154480 +
           (C51712 + C51713 + C51714) * C154468 + C51725 * C154442) *
              C154011 * C154082 * C1394 -
          (C53110 * C154442 + (C51717 + C51716 + C51715) * C154468 +
           (C51714 + C51713 + C51712) * C154480) *
              C154011 * C154082 * C1395 +
          (C51725 * C154480 + (C51720 + C51719 + C51718) * C154468 +
           (C53117 + C53118 + C53119) * C154442) *
              C154011 * C154082 * C1396 -
          ((C47145 * C29238 - C47146 * C29237 - C47145 * C29239 +
            C154445 * C29240 + C47143 * C28880 - C47144 * C28878 -
            C47143 * C28881 + C47139 * C28884 + C47141 * C4675 -
            C47142 * C4670 - C47141 * C4676 + C47138 * C4679) *
               C154442 +
           (C53119 + C53118 + C53117) * C154468 + C53110 * C154480) *
              C154011 * C154082 * C1397) *
         C154047) /
            (p * q * std::sqrt(p + q));
    d2ee[220] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                  C154480 +
              C3210 * C154468 + C3211 * C154442) *
                 C2902 +
             (C2906 + C2907 + C2908) * C2903 + C2920 * C154429) *
                C2114 -
            (C3960 * C154429 + (C3507 + C3468 + C3469) * C2903 +
             (C4299 * C154442 + C4300 * C154468 +
              (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                  C154480) *
                 C2902) *
                C154146) *
               C154392 +
           (((C4300 * C154480 + C4299 * C154468 + C5676 * C154442) * C2902 +
             (C4279 + C4280 + C4303) * C2903 +
             (C4285 + C4286 + C4304) * C154429) *
                C154146 -
            (C3734 * C154429 + (C3219 + C3174 + C3175) * C2903 +
             (C3214 * C154442 + C3211 * C154468 + C3210 * C154480) * C2902) *
                C2114) *
               C154118) *
              C154384 +
          ((((C3469 + C3468 + C3507) * C2902 + (C3463 + C3462 + C3506) * C2903 +
             (C3954 + C3955 + C3964) * C154429) *
                C154146 -
            (C2921 * C154429 + (C2911 + C2910 + C2909) * C2903 +
             (C2908 + C2907 + C2906) * C2902) *
                C2114) *
               C154392 +
           (((C3175 + C3174 + C3219) * C2902 + (C3169 + C3168 + C3218) * C2903 +
             (C3731 + C3732 + C3733) * C154429) *
                C2114 -
            (((C134 * C4264 - C135 * C4257 - C134 * C4265 + C154181 * C4269) *
                  C154442 +
              C3963 * C154468 + C1180 * C154480) *
                 C154429 +
             (C4304 + C4286 + C4285) * C2903 +
             (C4303 + C4280 + C4279) * C2902) *
                C154146) *
               C154118) *
              C154053)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C154164 * C123 +
             C211 * C124 + C212 * C125 + C213 * C126 + C214 * C127) *
                C2114 -
            (C685 * C127 + C686 * C126 + C687 * C125 + C688 * C124 +
             (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                 C154164 * C123) *
                C154146) *
               C154392 +
           (((C134 * C1135 - C135 * C1129 - C134 * C1136 + C154181 * C1147) *
                 C154164 * C123 +
             C1182 * C124 + C1183 * C125 + C1184 * C126 + C1185 * C127) *
                C154146 -
            (C448 * C127 + C449 * C126 + C450 * C125 + C451 * C124 +
             (C134 * C363 - C135 * C347 - C134 * C364 + C154181 * C383) *
                 C154164 * C123) *
                C2114) *
               C154118) *
              C154384 +
          (((C688 * C123 + C687 * C124 + C686 * C125 + C685 * C126 +
             C967 * C127) *
                C154146 -
            (C215 * C127 + C214 * C126 + C213 * C125 + C212 * C124 +
             C211 * C123) *
                C2114) *
               C154392 +
           ((C451 * C123 + C450 * C124 + C449 * C125 + C448 * C126 +
             C831 * C127) *
                C2114 -
            ((C134 * C1145 - C135 * C1134 - C134 * C1146 + C154181 * C1152) *
                 C154164 * C127 +
             C1185 * C126 + C1184 * C125 + C1183 * C124 + C1182 * C123) *
                C154146) *
               C154118) *
              C154053)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                  C24270 +
              C3210 * C24271 + C3211 * C154442) *
                 C154477 +
             (C24277 + C24278 + C24279) * C154458 + C24291 * C154429) *
                C2114 -
            (C25198 * C154429 + (C24744 + C24745 + C24746) * C154458 +
             (C4299 * C154442 + C4300 * C24271 +
              (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                  C24270) *
                 C154477) *
                C154146) *
               C154392 +
           (((C4300 * C24270 + C4299 * C24271 + C5676 * C154442) * C154477 +
             (C25489 + C25490 + C25491) * C154458 +
             (C25492 + C25493 + C25494) * C154429) *
                C154146 -
            (C24975 * C154429 + (C24514 + C24515 + C24516) * C154458 +
             (C3214 * C154442 + C3211 * C24271 + C3210 * C24270) * C154477) *
                C2114) *
               C154118) *
              C154384 +
          ((((C24746 + C24745 + C24744) * C154477 +
             (C24743 + C24742 + C24741) * C154458 +
             (C25195 + C25196 + C25197) * C154429) *
                C154146 -
            (C24292 * C154429 + (C24282 + C24281 + C24280) * C154458 +
             (C24279 + C24278 + C24277) * C154477) *
                C2114) *
               C154392 +
           (((C24516 + C24515 + C24514) * C154477 +
             (C24513 + C24512 + C24511) * C154458 +
             (C24972 + C24973 + C24974) * C154429) *
                C2114 -
            (((C134 * C4264 - C135 * C4257 - C134 * C4265 + C154181 * C4269) *
                  C154442 +
              C3963 * C24271 + C1180 * C24270) *
                 C154429 +
             (C25494 + C25493 + C25492) * C154458 +
             (C25491 + C25490 + C25489) * C154477) *
                C154146) *
               C154118) *
              C154053)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C28192 +
             C3210 * C28193 + C3211 * C28194 + C3214 * C28195 +
             C4687 * C28196) *
                C154011 * C2114 -
            (C28899 * C28196 + C5676 * C28195 + C4299 * C28194 +
             C4300 * C28193 +
             (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                 C28192) *
                C154011 * C154146) *
               C154392 +
           ((C4300 * C28192 + C4299 * C28193 + C5676 * C28194 +
             C28899 * C28195 + C29672 * C28196) *
                C154011 * C154146 -
            (C28341 * C28196 + C4687 * C28195 + C3214 * C28194 +
             C3211 * C28193 + C3210 * C28192) *
                C154011 * C2114) *
               C154118) *
              C154384 +
          (((C680 * C28192 + C1178 * C28193 + C3501 * C28194 + C4301 * C28195 +
             C28900 * C28196) *
                C154011 * C154146 -
            (C3215 * C28196 + C3213 * C28195 + C444 * C28194 + C443 * C28193 +
             C205 * C28192) *
                C154011 * C2114) *
               C154392 +
           ((C443 * C28192 + C444 * C28193 + C3213 * C28194 + C3215 * C28195 +
             C28342 * C28196) *
                C154011 * C2114 -
            ((C134 * C28882 - C135 * C28879 - C134 * C28883 +
              C154181 * C28885) *
                 C28196 +
             C28900 * C28195 + C4301 * C28194 + C3501 * C28193 +
             C1178 * C28192) *
                C154011 * C154146) *
               C154118) *
              C154053)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C47141 * C144 - C47142 * C136 - C47141 * C145 + C47138 * C160 +
              C47143 * C600 - C47144 * C584 - C47143 * C601 + C47139 * C620 +
              C47145 * C602 - C47146 * C585 - C47145 * C603 + C154445 * C621) *
                 C154164 * C154477 +
             (C47220 + C47221 + C47222) * C154164 * C154458 +
             C47236 * C154429) *
                C2114 -
            (C48319 * C154429 + (C47833 + C47834 + C47835) * C154164 * C154458 +
             (C47145 * C2337 - C47146 * C2328 - C47145 * C2338 +
              C154445 * C2343 + C47143 * C602 - C47144 * C585 - C47143 * C603 +
              C47139 * C621 + C47141 * C600 - C47142 * C584 - C47141 * C601 +
              C47138 * C620) *
                 C154164 * C154477) *
                C154146) *
               C154392 +
           (((C47141 * C1135 - C47142 * C1129 - C47141 * C1136 +
              C47138 * C1147 + C47143 * C1554 - C47144 * C1545 -
              C47143 * C1555 + C47139 * C1560 + C47145 * C6274 -
              C47146 * C6263 - C47145 * C6275 + C154445 * C6281) *
                 C154164 * C154477 +
             (C48652 + C48653 + C48654) * C154164 * C154458 +
             (C48655 + C48656 + C48657) * C154164 * C154429) *
                C154146 -
            (C48077 * C154429 + (C47531 + C47532 + C47533) * C154164 * C154458 +
             (C47145 * C1554 - C47146 * C1545 - C47145 * C1555 +
              C154445 * C1560 + C47143 * C1135 - C47144 * C1129 -
              C47143 * C1136 + C47139 * C1147 + C47141 * C363 - C47142 * C347 -
              C47141 * C364 + C47138 * C383) *
                 C154164 * C154477) *
                C2114) *
               C154118) *
              C154384 +
          ((((C47835 + C47834 + C47833) * C154164 * C154477 +
             (C47832 + C47831 + C47830) * C154164 * C154458 +
             (C48323 + C48324 + C48325) * C154164 * C154429) *
                C154146 -
            (C47237 * C154429 + (C47225 + C47224 + C47223) * C154164 * C154458 +
             (C47222 + C47221 + C47220) * C154164 * C154477) *
                C2114) *
               C154392 +
           (((C47533 + C47532 + C47531) * C154164 * C154477 +
             (C47530 + C47529 + C47528) * C154164 * C154458 +
             (C48081 + C48082 + C48083) * C154164 * C154429) *
                C2114 -
            ((C47145 * C8648 - C47146 * C8647 - C47145 * C8649 +
              C154445 * C8650 + C47143 * C1548 - C47144 * C1542 -
              C47143 * C1549 + C47139 * C1557 + C47141 * C1141 -
              C47142 * C1132 - C47141 * C1142 + C47138 * C1150) *
                 C154164 * C154429 +
             (C48657 + C48656 + C48655) * C154164 * C154458 +
             (C48654 + C48653 + C48652) * C154164 * C154477) *
                C154146) *
               C154118) *
              C154053)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C47141 * C144 - C47142 * C136 - C47141 * C145 + C47138 * C160 +
              C47143 * C600 - C47144 * C584 - C47143 * C601 + C47139 * C620 +
              C47145 * C602 - C47146 * C585 - C47145 * C603 + C154445 * C621) *
                 C154480 +
             (C51712 + C51713 + C51714) * C154468 + C51725 * C154442) *
                C154011 * C2114 -
            (C54119 * C154442 + (C52727 + C52728 + C52729) * C154468 +
             (C47145 * C2337 - C47146 * C2328 - C47145 * C2338 +
              C154445 * C2343 + C47143 * C602 - C47144 * C585 - C47143 * C603 +
              C47139 * C621 + C47141 * C600 - C47142 * C584 - C47141 * C601 +
              C47138 * C620) *
                 C154480) *
                C154011 * C154146) *
               C154392 +
           (((C52729 + C52728 + C52727) * C154480 +
             (C52726 + C52725 + C52724) * C154468 +
             (C54126 + C54127 + C54128) * C154442) *
                C154011 * C154146 -
            (C53110 * C154442 + (C51717 + C51716 + C51715) * C154468 +
             (C51714 + C51713 + C51712) * C154480) *
                C154011 * C2114) *
               C154118) *
              C154384 +
          ((((C47835 + C47834 + C47833) * C154480 +
             (C48652 + C48653 + C48654) * C154468 +
             (C52730 + C52731 + C52732) * C154442) *
                C154011 * C154146 -
            (C51699 * C154442 + (C47531 + C47532 + C47533) * C154468 +
             (C47222 + C47221 + C47220) * C154480) *
                C154011 * C2114) *
               C154392 +
           (((C47533 + C47532 + C47531) * C154480 +
             (C47534 + C47535 + C47536) * C154468 +
             (C51721 + C51722 + C51723) * C154442) *
                C154011 * C2114 -
            ((C47145 * C31817 - C47146 * C31816 - C47145 * C31818 +
              C154445 * C31819 + C47143 * C4910 - C47144 * C4906 -
              C47143 * C4911 + C47139 * C4915 + C47141 * C4260 -
              C47142 * C4255 - C47141 * C4261 + C47138 * C4267) *
                 C154442 +
             (C52732 + C52731 + C52730) * C154468 +
             (C48654 + C48653 + C48652) * C154480) *
                C154011 * C154146) *
               C154118) *
              C154053)) /
            (p * q * std::sqrt(p + q));
    d2ee[221] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C154480 +
             C3210 * C154468 + C3211 * C154442) *
                C2902 +
            (C2906 + C2907 + C2908) * C2903 + C2920 * C154429) *
               C154465 -
           (C3960 * C154429 + (C3507 + C3468 + C3469) * C2903 +
            (C4299 * C154442 + C4300 * C154468 +
             (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                 C154480) *
                C2902) *
               C154466 +
           (((C134 * C602 - C135 * C585 - C134 * C603 + C154181 * C621) *
                 C154480 +
             C4930 * C154468 + C4931 * C154442) *
                C2902 +
            (C3470 + C3508 + C3509) * C2903 +
            (C3479 + C3510 + C3511) * C154429) *
               C2630) *
              C154392 +
          (((C4300 * C154480 + C4299 * C154468 + C5676 * C154442) * C2902 +
            (C4279 + C4280 + C4303) * C2903 +
            (C4285 + C4286 + C4304) * C154429) *
               C154466 -
           (C3734 * C154429 + (C3219 + C3174 + C3175) * C2903 +
            (C3214 * C154442 + C3211 * C154468 + C3210 * C154480) * C2902) *
               C154465 -
           (((C134 * C4908 - C135 * C4905 - C134 * C4909 + C154181 * C4914) *
                 C154442 +
             C3505 * C154468 + C3504 * C154480) *
                C154429 +
            ((C134 * C4910 - C135 * C4906 - C134 * C4911 + C154181 * C4915) *
                 C154442 +
             C3503 * C154468 + C3502 * C154480) *
                C2903 +
            ((C134 * C4912 - C135 * C4907 - C134 * C4913 + C154181 * C4916) *
                 C154442 +
             C4931 * C154468 + C4930 * C154480) *
                C2902) *
               C2630) *
              C154118) *
         C154047) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                C154164 * C123 +
            C211 * C124 + C212 * C125 + C213 * C126 + C214 * C127) *
               C154465 -
           (C685 * C127 + C686 * C126 + C687 * C125 + C688 * C124 +
            (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                C154164 * C123) *
               C154466 +
           ((C134 * C602 - C135 * C585 - C134 * C603 + C154181 * C621) *
                C154164 * C123 +
            C689 * C124 + C690 * C125 + C691 * C126 + C692 * C127) *
               C2630) *
              C154392 +
          (((C134 * C1135 - C135 * C1129 - C134 * C1136 + C154181 * C1147) *
                C154164 * C123 +
            C1182 * C124 + C1183 * C125 + C1184 * C126 + C1185 * C127) *
               C154466 -
           (C448 * C127 + C449 * C126 + C450 * C125 + C451 * C124 +
            (C134 * C363 - C135 * C347 - C134 * C364 + C154181 * C383) *
                C154164 * C123) *
               C154465 -
           ((C134 * C1546 - C135 * C1541 - C134 * C1547 + C154181 * C1556) *
                C154164 * C127 +
            (C134 * C1548 - C135 * C1542 - C134 * C1549 + C154181 * C1557) *
                C154164 * C126 +
            (C134 * C1550 - C135 * C1543 - C134 * C1551 + C154181 * C1558) *
                C154164 * C125 +
            (C134 * C1552 - C135 * C1544 - C134 * C1553 + C154181 * C1559) *
                C154164 * C124 +
            (C134 * C1554 - C135 * C1545 - C134 * C1555 + C154181 * C1560) *
                C154164 * C123) *
               C2630) *
              C154118) *
         C154047) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C24270 +
             C3210 * C24271 + C3211 * C154442) *
                C154477 +
            (C24277 + C24278 + C24279) * C154458 + C24291 * C154429) *
               C154465 -
           (C25198 * C154429 + (C24744 + C24745 + C24746) * C154458 +
            (C4299 * C154442 + C4300 * C24271 +
             (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                 C24270) *
                C154477) *
               C154466 +
           (((C134 * C602 - C135 * C585 - C134 * C603 + C154181 * C621) *
                 C24270 +
             C4930 * C24271 + C4931 * C154442) *
                C154477 +
            (C24747 + C24748 + C24749) * C154458 +
            (C24750 + C24751 + C24752) * C154429) *
               C2630) *
              C154392 +
          (((C4300 * C24270 + C4299 * C24271 + C5676 * C154442) * C154477 +
            (C25489 + C25490 + C25491) * C154458 +
            (C25492 + C25493 + C25494) * C154429) *
               C154466 -
           (C24975 * C154429 + (C24514 + C24515 + C24516) * C154458 +
            (C3214 * C154442 + C3211 * C24271 + C3210 * C24270) * C154477) *
               C154465 -
           (((C134 * C4908 - C135 * C4905 - C134 * C4909 + C154181 * C4914) *
                 C154442 +
             C3505 * C24271 + C3504 * C24270) *
                C154429 +
            ((C134 * C4910 - C135 * C4906 - C134 * C4911 + C154181 * C4915) *
                 C154442 +
             C3503 * C24271 + C3502 * C24270) *
                C154458 +
            ((C134 * C4912 - C135 * C4907 - C134 * C4913 + C154181 * C4916) *
                 C154442 +
             C4931 * C24271 + C4930 * C24270) *
                C154477) *
               C2630) *
              C154118) *
         C154047) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                C28192 +
            C3210 * C28193 + C3211 * C28194 + C3214 * C28195 + C4687 * C28196) *
               C154011 * C154465 -
           (C28899 * C28196 + C5676 * C28195 + C4299 * C28194 + C4300 * C28193 +
            (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                C28192) *
               C154011 * C154466 +
           ((C134 * C602 - C135 * C585 - C134 * C603 + C154181 * C621) *
                C28192 +
            C4930 * C28193 + C4931 * C28194 + C29254 * C28195 +
            C29255 * C28196) *
               C154011 * C2630) *
              C154392 +
          ((C4300 * C28192 + C4299 * C28193 + C5676 * C28194 + C28899 * C28195 +
            C29672 * C28196) *
               C154011 * C154466 -
           (C28341 * C28196 + C4687 * C28195 + C3214 * C28194 + C3211 * C28193 +
            C3210 * C28192) *
               C154011 * C154465 -
           ((C134 * C29238 - C135 * C29237 - C134 * C29239 + C154181 * C29240) *
                C28196 +
            C29255 * C28195 + C29254 * C28194 + C4931 * C28193 +
            C4930 * C28192) *
               C154011 * C2630) *
              C154118) *
         C154047) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C47141 * C144 - C47142 * C136 - C47141 * C145 + C47138 * C160 +
             C47143 * C600 - C47144 * C584 - C47143 * C601 + C47139 * C620 +
             C47145 * C602 - C47146 * C585 - C47145 * C603 + C154445 * C621) *
                C154164 * C154477 +
            (C47220 + C47221 + C47222) * C154164 * C154458 + C47236 * C154429) *
               C154465 -
           (C48319 * C154429 + (C47833 + C47834 + C47835) * C154164 * C154458 +
            (C47145 * C2337 - C47146 * C2328 - C47145 * C2338 +
             C154445 * C2343 + C47143 * C602 - C47144 * C585 - C47143 * C603 +
             C47139 * C621 + C47141 * C600 - C47142 * C584 - C47141 * C601 +
             C47138 * C620) *
                C154164 * C154477) *
               C154466 +
           ((C47141 * C602 - C47142 * C585 - C47141 * C603 + C47138 * C621 +
             C47143 * C2337 - C47144 * C2328 - C47143 * C2338 + C47139 * C2343 +
             C47145 * C7777 - C47146 * C7773 - C47145 * C7778 +
             C154445 * C7785) *
                C154164 * C154477 +
            (C47836 + C47837 + C47838) * C154164 * C154458 +
            (C47839 + C47840 + C47841) * C154164 * C154429) *
               C2630) *
              C154392 +
          (((C47141 * C1135 - C47142 * C1129 - C47141 * C1136 + C47138 * C1147 +
             C47143 * C1554 - C47144 * C1545 - C47143 * C1555 + C47139 * C1560 +
             C47145 * C6274 - C47146 * C6263 - C47145 * C6275 +
             C154445 * C6281) *
                C154164 * C154477 +
            (C48652 + C48653 + C48654) * C154164 * C154458 +
            (C48655 + C48656 + C48657) * C154164 * C154429) *
               C154466 -
           (C48077 * C154429 + (C47531 + C47532 + C47533) * C154164 * C154458 +
            (C47145 * C1554 - C47146 * C1545 - C47145 * C1555 +
             C154445 * C1560 + C47143 * C1135 - C47144 * C1129 -
             C47143 * C1136 + C47139 * C1147 + C47141 * C363 - C47142 * C347 -
             C47141 * C364 + C47138 * C383) *
                C154164 * C154477) *
               C154465 -
           ((C47145 * C9278 - C47146 * C9275 - C47145 * C9279 +
             C154445 * C9284 + C47143 * C6266 - C47144 * C6259 -
             C47143 * C6267 + C47139 * C6277 + C47141 * C1550 - C47142 * C1543 -
             C47141 * C1551 + C47138 * C1558) *
                C154164 * C154429 +
            (C47145 * C9280 - C47146 * C9276 - C47145 * C9281 +
             C154445 * C9285 + C47143 * C6270 - C47144 * C6261 -
             C47143 * C6271 + C47139 * C6279 + C47141 * C1552 - C47142 * C1544 -
             C47141 * C1553 + C47138 * C1559) *
                C154164 * C154458 +
            (C47145 * C9282 - C47146 * C9277 - C47145 * C9283 +
             C154445 * C9286 + C47143 * C6274 - C47144 * C6263 -
             C47143 * C6275 + C47139 * C6281 + C47141 * C1554 - C47142 * C1545 -
             C47141 * C1555 + C47138 * C1560) *
                C154164 * C154477) *
               C2630) *
              C154118) *
         C154047) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C47141 * C144 - C47142 * C136 - C47141 * C145 + C47138 * C160 +
             C47143 * C600 - C47144 * C584 - C47143 * C601 + C47139 * C620 +
             C47145 * C602 - C47146 * C585 - C47145 * C603 + C154445 * C621) *
                C154480 +
            (C51712 + C51713 + C51714) * C154468 + C51725 * C154442) *
               C154011 * C154465 -
           (C54119 * C154442 + (C52727 + C52728 + C52729) * C154468 +
            (C47145 * C2337 - C47146 * C2328 - C47145 * C2338 +
             C154445 * C2343 + C47143 * C602 - C47144 * C585 - C47143 * C603 +
             C47139 * C621 + C47141 * C600 - C47142 * C584 - C47141 * C601 +
             C47138 * C620) *
                C154480) *
               C154011 * C154466 +
           ((C47141 * C602 - C47142 * C585 - C47141 * C603 + C47138 * C621 +
             C47143 * C2337 - C47144 * C2328 - C47143 * C2338 + C47139 * C2343 +
             C47145 * C7777 - C47146 * C7773 - C47145 * C7778 +
             C154445 * C7785) *
                C154480 +
            (C53374 + C53375 + C53376) * C154468 +
            (C53377 + C53378 + C53379) * C154442) *
               C154011 * C2630) *
              C154392 +
          (((C52729 + C52728 + C52727) * C154480 +
            (C52726 + C52725 + C52724) * C154468 +
            (C54126 + C54127 + C54128) * C154442) *
               C154011 * C154466 -
           (C53110 * C154442 + (C51717 + C51716 + C51715) * C154468 +
            (C51714 + C51713 + C51712) * C154480) *
               C154011 * C154465 -
           ((C47145 * C32489 - C47146 * C32488 - C47145 * C32490 +
             C154445 * C32491 + C47143 * C30002 - C47144 * C29999 -
             C47143 * C30003 + C47139 * C30005 + C47141 * C4912 -
             C47142 * C4907 - C47141 * C4913 + C47138 * C4916) *
                C154442 +
            (C53379 + C53378 + C53377) * C154468 +
            (C53376 + C53375 + C53374) * C154480) *
               C154011 * C2630) *
              C154118) *
         C154047) /
            (p * q * std::sqrt(p + q));
    d2ee[222] +=
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             ((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                    C154164 * C123 +
                C211 * C124 + C212 * C125 + C213 * C126 + C214 * C127) *
                   C2114 -
               (C685 * C127 + C686 * C126 + C687 * C125 + C688 * C124 +
                (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                    C154164 * C123) *
                   C154146) *
                  C154066 * C1309 +
              ((C688 * C123 + C687 * C124 + C686 * C125 + C685 * C126 +
                C967 * C127) *
                   C154146 -
               (C215 * C127 + C214 * C126 + C213 * C125 + C212 * C124 +
                C211 * C123) *
                   C2114) *
                  C154066 * C1310 +
              ((C212 * C123 + C213 * C124 + C214 * C125 + C215 * C126 +
                C216 * C127) *
                   C2114 -
               ((C134 * C956 - C135 * C955 - C134 * C957 + C154181 * C958) *
                    C154164 * C127 +
                C967 * C126 + C685 * C125 + C686 * C124 + C687 * C123) *
                   C154146) *
                  C154066 * C1311) +
         std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             ((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                    C154164 * C123 +
                C211 * C124 + C212 * C125 + C213 * C126 + C214 * C127) *
                   C2114 -
               (C685 * C127 + C686 * C126 + C687 * C125 + C688 * C124 +
                (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                    C154164 * C123) *
                   C154146) *
                  C338 +
              (((C134 * C1135 - C135 * C1129 - C134 * C1136 + C154181 * C1147) *
                    C154164 * C123 +
                C1182 * C124 + C1183 * C125 + C1184 * C126 + C1185 * C127) *
                   C154146 -
               (C448 * C127 + C449 * C126 + C450 * C125 + C451 * C124 +
                (C134 * C363 - C135 * C347 - C134 * C364 + C154181 * C383) *
                    C154164 * C123) *
                   C2114) *
                  C339 +
              (((C134 * C365 - C135 * C348 - C134 * C366 + C154181 * C384) *
                    C154164 * C123 +
                C452 * C124 + C453 * C125 + C454 * C126 + C455 * C127) *
                   C2114 -
               ((C134 * C1977 - C135 * C1972 - C134 * C1978 + C154181 * C1987) *
                    C154164 * C127 +
                (C134 * C1979 - C135 * C1973 - C134 * C1980 + C154181 * C1988) *
                    C154164 * C126 +
                (C134 * C1981 - C135 * C1974 - C134 * C1982 + C154181 * C1989) *
                    C154164 * C125 +
                (C134 * C1983 - C135 * C1975 - C134 * C1984 + C154181 * C1990) *
                    C154164 * C124 +
                (C134 * C1985 - C135 * C1976 - C134 * C1986 + C154181 * C1991) *
                    C154164 * C123) *
                   C154146) *
                  C340) *
             C154047) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
               C154164 * C123 +
           C211 * C124 + C212 * C125 + C213 * C126 + C214 * C127) *
              C2320 -
          (C685 * C127 + C686 * C126 + C687 * C125 + C688 * C124 +
           (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
               C154164 * C123) *
              C2321 +
          ((C134 * C602 - C135 * C585 - C134 * C603 + C154181 * C621) *
               C154164 * C123 +
           C689 * C124 + C690 * C125 + C691 * C126 + C692 * C127) *
              C2322 -
          ((C134 * C2329 - C135 * C2324 - C134 * C2330 + C154181 * C2339) *
               C154164 * C127 +
           (C134 * C2331 - C135 * C2325 - C134 * C2332 + C154181 * C2340) *
               C154164 * C126 +
           (C134 * C2333 - C135 * C2326 - C134 * C2334 + C154181 * C2341) *
               C154164 * C125 +
           (C134 * C2335 - C135 * C2327 - C134 * C2336 + C154181 * C2342) *
               C154164 * C124 +
           (C134 * C2337 - C135 * C2328 - C134 * C2338 + C154181 * C2343) *
               C154164 * C123) *
              C2323) *
         C154066 * C154047) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C154480 +
             C3210 * C154468 + C3211 * C154442) *
                C2902 +
            (C2906 + C2907 + C2908) * C2903 + C2920 * C154429) *
               C2114 -
           (C3960 * C154429 + (C3507 + C3468 + C3469) * C2903 +
            (C4299 * C154442 + C4300 * C154468 +
             (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                 C154480) *
                C2902) *
               C154146) *
              C154066 * C1309 +
          (((C3469 + C3468 + C3507) * C2902 + (C3463 + C3462 + C3506) * C2903 +
            (C3954 + C3955 + C3964) * C154429) *
               C154146 -
           (C2921 * C154429 + (C2911 + C2910 + C2909) * C2903 +
            (C2908 + C2907 + C2906) * C2902) *
               C2114) *
              C154066 * C1310 +
          ((C2920 * C2902 + (C2914 + C2913 + C2912) * C2903 +
            (C2915 + C2916 + C2917) * C154429) *
               C2114 -
           (((C134 * C1977 - C135 * C1972 - C134 * C1978 + C154181 * C1987) *
                 C154442 +
             C1181 * C154468 + C677 * C154480) *
                C154429 +
            (C3964 + C3955 + C3954) * C2903 + C3960 * C2902) *
               C154146) *
              C154066 * C1311)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C154480 +
             C3210 * C154468 + C3211 * C154442) *
                C2902 +
            (C2906 + C2907 + C2908) * C2903 + C2920 * C154429) *
               C2114 -
           (C3960 * C154429 + (C3507 + C3468 + C3469) * C2903 +
            (C4299 * C154442 + C4300 * C154468 +
             (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                 C154480) *
                C2902) *
               C154146) *
              C338 +
          (((C4300 * C154480 + C4299 * C154468 + C5676 * C154442) * C2902 +
            (C4279 + C4280 + C4303) * C2903 +
            (C4285 + C4286 + C4304) * C154429) *
               C154146 -
           (C3734 * C154429 + (C3219 + C3174 + C3175) * C2903 +
            (C3214 * C154442 + C3211 * C154468 + C3210 * C154480) * C2902) *
               C2114) *
              C339 +
          (((C3211 * C154480 + C3214 * C154468 + C4687 * C154442) * C2902 +
            (C3180 + C3220 + C3221) * C2903 +
            (C3185 + C3222 + C3223) * C154429) *
               C2114 -
           (((C134 * C5660 - C135 * C5657 - C134 * C5661 + C154181 * C5666) *
                 C154442 +
             C4302 * C154468 + C3500 * C154480) *
                C154429 +
            ((C134 * C5662 - C135 * C5658 - C134 * C5663 + C154181 * C5667) *
                 C154442 +
             C4301 * C154468 + C3501 * C154480) *
                C2903 +
            ((C134 * C5664 - C135 * C5659 - C134 * C5665 + C154181 * C5668) *
                 C154442 +
             C5676 * C154468 + C4299 * C154480) *
                C2902) *
               C154146) *
              C340) *
         C154047) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                C154480 +
            C3210 * C154468 + C3211 * C154442) *
               C2902 +
           (C2906 + C2907 + C2908) * C2903 + C2920 * C154429) *
              C2320 -
          (C3960 * C154429 + (C3507 + C3468 + C3469) * C2903 +
           (C4299 * C154442 + C4300 * C154468 +
            (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                C154480) *
               C2902) *
              C2321 +
          (((C134 * C602 - C135 * C585 - C134 * C603 + C154181 * C621) *
                C154480 +
            C4930 * C154468 + C4931 * C154442) *
               C2902 +
           (C3470 + C3508 + C3509) * C2903 +
           (C3479 + C3510 + C3511) * C154429) *
              C2322 -
          (((C134 * C6264 - C135 * C6258 - C134 * C6265 + C154181 * C6276) *
                C154442 +
            (C134 * C6266 - C135 * C6259 - C134 * C6267 + C154181 * C6277) *
                C154468 +
            (C134 * C2333 - C135 * C2326 - C134 * C2334 + C154181 * C2341) *
                C154480) *
               C154429 +
           ((C134 * C6268 - C135 * C6260 - C134 * C6269 + C154181 * C6278) *
                C154442 +
            (C134 * C6270 - C135 * C6261 - C134 * C6271 + C154181 * C6279) *
                C154468 +
            (C134 * C2335 - C135 * C2327 - C134 * C2336 + C154181 * C2342) *
                C154480) *
               C2903 +
           ((C134 * C6272 - C135 * C6262 - C134 * C6273 + C154181 * C6280) *
                C154442 +
            (C134 * C6274 - C135 * C6263 - C134 * C6275 + C154181 * C6281) *
                C154468 +
            (C134 * C2337 - C135 * C2328 - C134 * C2338 + C154181 * C2343) *
                C154480) *
               C2902) *
              C2323) *
         C154066 * C154047) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C24270 +
             C3210 * C24271 + C3211 * C154442) *
                C154477 +
            (C24277 + C24278 + C24279) * C154458 + C24291 * C154429) *
               C2114 -
           (C25198 * C154429 + (C24744 + C24745 + C24746) * C154458 +
            (C4299 * C154442 + C4300 * C24271 +
             (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                 C24270) *
                C154477) *
               C154146) *
              C154066 * C1309 +
          (((C24746 + C24745 + C24744) * C154477 +
            (C24743 + C24742 + C24741) * C154458 +
            (C25195 + C25196 + C25197) * C154429) *
               C154146 -
           (C24292 * C154429 + (C24282 + C24281 + C24280) * C154458 +
            (C24279 + C24278 + C24277) * C154477) *
               C2114) *
              C154066 * C1310 +
          ((C24291 * C154477 + (C24285 + C24284 + C24283) * C154458 +
            (C24286 + C24287 + C24288) * C154429) *
               C2114 -
           (((C134 * C1977 - C135 * C1972 - C134 * C1978 + C154181 * C1987) *
                 C154442 +
             C1181 * C24271 + C677 * C24270) *
                C154429 +
            (C25197 + C25196 + C25195) * C154458 + C25198 * C154477) *
               C154146) *
              C154066 * C1311)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C24270 +
             C3210 * C24271 + C3211 * C154442) *
                C154477 +
            (C24277 + C24278 + C24279) * C154458 + C24291 * C154429) *
               C2114 -
           (C25198 * C154429 + (C24744 + C24745 + C24746) * C154458 +
            (C4299 * C154442 + C4300 * C24271 +
             (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                 C24270) *
                C154477) *
               C154146) *
              C338 +
          (((C4300 * C24270 + C4299 * C24271 + C5676 * C154442) * C154477 +
            (C25489 + C25490 + C25491) * C154458 +
            (C25492 + C25493 + C25494) * C154429) *
               C154146 -
           (C24975 * C154429 + (C24514 + C24515 + C24516) * C154458 +
            (C3214 * C154442 + C3211 * C24271 + C3210 * C24270) * C154477) *
               C2114) *
              C339 +
          (((C3211 * C24270 + C3214 * C24271 + C4687 * C154442) * C154477 +
            (C24517 + C24518 + C24519) * C154458 +
            (C24520 + C24521 + C24522) * C154429) *
               C2114 -
           (((C134 * C5660 - C135 * C5657 - C134 * C5661 + C154181 * C5666) *
                 C154442 +
             C4302 * C24271 + C3500 * C24270) *
                C154429 +
            ((C134 * C5662 - C135 * C5658 - C134 * C5663 + C154181 * C5667) *
                 C154442 +
             C4301 * C24271 + C3501 * C24270) *
                C154458 +
            ((C134 * C5664 - C135 * C5659 - C134 * C5665 + C154181 * C5668) *
                 C154442 +
             C5676 * C24271 + C4299 * C24270) *
                C154477) *
               C154146) *
              C340) *
         C154047) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                C24270 +
            C3210 * C24271 + C3211 * C154442) *
               C154477 +
           (C24277 + C24278 + C24279) * C154458 + C24291 * C154429) *
              C2320 -
          (C25198 * C154429 + (C24744 + C24745 + C24746) * C154458 +
           (C4299 * C154442 + C4300 * C24271 +
            (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                C24270) *
               C154477) *
              C2321 +
          (((C134 * C602 - C135 * C585 - C134 * C603 + C154181 * C621) *
                C24270 +
            C4930 * C24271 + C4931 * C154442) *
               C154477 +
           (C24747 + C24748 + C24749) * C154458 +
           (C24750 + C24751 + C24752) * C154429) *
              C2322 -
          (((C134 * C6264 - C135 * C6258 - C134 * C6265 + C154181 * C6276) *
                C154442 +
            (C134 * C6266 - C135 * C6259 - C134 * C6267 + C154181 * C6277) *
                C24271 +
            (C134 * C2333 - C135 * C2326 - C134 * C2334 + C154181 * C2341) *
                C24270) *
               C154429 +
           ((C134 * C6268 - C135 * C6260 - C134 * C6269 + C154181 * C6278) *
                C154442 +
            (C134 * C6270 - C135 * C6261 - C134 * C6271 + C154181 * C6279) *
                C24271 +
            (C134 * C2335 - C135 * C2327 - C134 * C2336 + C154181 * C2342) *
                C24270) *
               C154458 +
           ((C134 * C6272 - C135 * C6262 - C134 * C6273 + C154181 * C6280) *
                C154442 +
            (C134 * C6274 - C135 * C6263 - C134 * C6275 + C154181 * C6281) *
                C24271 +
            (C134 * C2337 - C135 * C2328 - C134 * C2338 + C154181 * C2343) *
                C24270) *
               C154477) *
              C2323) *
         C154066 * C154047) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                C28192 +
            C3210 * C28193 + C3211 * C28194 + C3214 * C28195 + C4687 * C28196) *
               C154011 * C2114 -
           (C28899 * C28196 + C5676 * C28195 + C4299 * C28194 + C4300 * C28193 +
            (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                C28192) *
               C154011 * C154146) *
              C154066 * C1309 +
          ((C680 * C28192 + C1178 * C28193 + C3501 * C28194 + C4301 * C28195 +
            C28900 * C28196) *
               C154011 * C154146 -
           (C3215 * C28196 + C3213 * C28195 + C444 * C28194 + C443 * C28193 +
            C205 * C28192) *
               C154011 * C2114) *
              C154066 * C1310 +
          ((C206 * C28192 + C442 * C28193 + C445 * C28194 + C3212 * C28195 +
            C3216 * C28196) *
               C154011 * C2114 -
           ((C134 * C5660 - C135 * C5657 - C134 * C5661 + C154181 * C5666) *
                C28196 +
            C4302 * C28195 + C3500 * C28194 + C1179 * C28193 + C679 * C28192) *
               C154011 * C154146) *
              C154066 * C1311)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                C28192 +
            C3210 * C28193 + C3211 * C28194 + C3214 * C28195 + C4687 * C28196) *
               C154011 * C2114 -
           (C28899 * C28196 + C5676 * C28195 + C4299 * C28194 + C4300 * C28193 +
            (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                C28192) *
               C154011 * C154146) *
              C338 +
          ((C4300 * C28192 + C4299 * C28193 + C5676 * C28194 + C28899 * C28195 +
            C29672 * C28196) *
               C154011 * C154146 -
           (C28341 * C28196 + C4687 * C28195 + C3214 * C28194 + C3211 * C28193 +
            C3210 * C28192) *
               C154011 * C2114) *
              C339 +
          ((C3211 * C28192 + C3214 * C28193 + C4687 * C28194 + C28341 * C28195 +
            C29115 * C28196) *
               C154011 * C2114 -
           ((C134 * C29662 - C135 * C29661 - C134 * C29663 + C154181 * C29664) *
                C28196 +
            C29672 * C28195 + C28899 * C28194 + C5676 * C28193 +
            C4299 * C28192) *
               C154011 * C154146) *
              C340) *
         C154047) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) * C28192 +
           C3210 * C28193 + C3211 * C28194 + C3214 * C28195 + C4687 * C28196) *
              C154011 * C2320 -
          (C28899 * C28196 + C5676 * C28195 + C4299 * C28194 + C4300 * C28193 +
           (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
               C28192) *
              C154011 * C2321 +
          ((C134 * C602 - C135 * C585 - C134 * C603 + C154181 * C621) * C28192 +
           C4930 * C28193 + C4931 * C28194 + C29254 * C28195 +
           C29255 * C28196) *
              C154011 * C2322 -
          ((C134 * C30000 - C135 * C29998 - C134 * C30001 + C154181 * C30004) *
               C28196 +
           (C134 * C30002 - C135 * C29999 - C134 * C30003 + C154181 * C30005) *
               C28195 +
           (C134 * C6272 - C135 * C6262 - C134 * C6273 + C154181 * C6280) *
               C28194 +
           (C134 * C6274 - C135 * C6263 - C134 * C6275 + C154181 * C6281) *
               C28193 +
           (C134 * C2337 - C135 * C2328 - C134 * C2338 + C154181 * C2343) *
               C28192) *
              C154011 * C2323) *
         C154066 * C154047) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C47141 * C144 - C47142 * C136 - C47141 * C145 + C47138 * C160 +
             C47143 * C600 - C47144 * C584 - C47143 * C601 + C47139 * C620 +
             C47145 * C602 - C47146 * C585 - C47145 * C603 + C154445 * C621) *
                C154164 * C154477 +
            (C47220 + C47221 + C47222) * C154164 * C154458 + C47236 * C154429) *
               C2114 -
           (C48319 * C154429 + (C47833 + C47834 + C47835) * C154164 * C154458 +
            (C47145 * C2337 - C47146 * C2328 - C47145 * C2338 +
             C154445 * C2343 + C47143 * C602 - C47144 * C585 - C47143 * C603 +
             C47139 * C621 + C47141 * C600 - C47142 * C584 - C47141 * C601 +
             C47138 * C620) *
                C154164 * C154477) *
               C154146) *
              C154066 * C1309 +
          (((C47835 + C47834 + C47833) * C154164 * C154477 +
            (C47832 + C47831 + C47830) * C154164 * C154458 +
            (C48323 + C48324 + C48325) * C154164 * C154429) *
               C154146 -
           (C47237 * C154429 + (C47225 + C47224 + C47223) * C154164 * C154458 +
            (C47222 + C47221 + C47220) * C154164 * C154477) *
               C2114) *
              C154066 * C1310 +
          ((C47236 * C154477 + (C47228 + C47227 + C47226) * C154164 * C154458 +
            (C47229 + C47230 + C47231) * C154164 * C154429) *
               C2114 -
           ((C47145 * C2329 - C47146 * C2324 - C47145 * C2330 +
             C154445 * C2339 + C47143 * C610 - C47144 * C589 - C47143 * C611 +
             C47139 * C625 + C47141 * C592 - C47142 * C580 - C47141 * C593 +
             C47138 * C616) *
                C154164 * C154429 +
            (C48325 + C48324 + C48323) * C154164 * C154458 + C48319 * C154477) *
               C154146) *
              C154066 * C1311)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C47141 * C144 - C47142 * C136 - C47141 * C145 + C47138 * C160 +
             C47143 * C600 - C47144 * C584 - C47143 * C601 + C47139 * C620 +
             C47145 * C602 - C47146 * C585 - C47145 * C603 + C154445 * C621) *
                C154164 * C154477 +
            (C47220 + C47221 + C47222) * C154164 * C154458 + C47236 * C154429) *
               C2114 -
           (C48319 * C154429 + (C47833 + C47834 + C47835) * C154164 * C154458 +
            (C47145 * C2337 - C47146 * C2328 - C47145 * C2338 +
             C154445 * C2343 + C47143 * C602 - C47144 * C585 - C47143 * C603 +
             C47139 * C621 + C47141 * C600 - C47142 * C584 - C47141 * C601 +
             C47138 * C620) *
                C154164 * C154477) *
               C154146) *
              C338 +
          (((C47141 * C1135 - C47142 * C1129 - C47141 * C1136 + C47138 * C1147 +
             C47143 * C1554 - C47144 * C1545 - C47143 * C1555 + C47139 * C1560 +
             C47145 * C6274 - C47146 * C6263 - C47145 * C6275 +
             C154445 * C6281) *
                C154164 * C154477 +
            (C48652 + C48653 + C48654) * C154164 * C154458 +
            (C48655 + C48656 + C48657) * C154164 * C154429) *
               C154146 -
           (C48077 * C154429 + (C47531 + C47532 + C47533) * C154164 * C154458 +
            (C47145 * C1554 - C47146 * C1545 - C47145 * C1555 +
             C154445 * C1560 + C47143 * C1135 - C47144 * C1129 -
             C47143 * C1136 + C47139 * C1147 + C47141 * C363 - C47142 * C347 -
             C47141 * C364 + C47138 * C383) *
                C154164 * C154477) *
               C2114) *
              C339 +
          (((C47141 * C365 - C47142 * C348 - C47141 * C366 + C47138 * C384 +
             C47143 * C1985 - C47144 * C1976 - C47143 * C1986 + C47139 * C1991 +
             C47145 * C3445 - C47146 * C3441 - C47145 * C3446 +
             C154445 * C3453) *
                C154164 * C154477 +
            (C47534 + C47535 + C47536) * C154164 * C154458 +
            (C47537 + C47538 + C47539) * C154164 * C154429) *
               C2114 -
           ((C47145 * C6264 - C47146 * C6258 - C47145 * C6265 +
             C154445 * C6276 + C47143 * C3449 - C47144 * C3443 -
             C47143 * C3450 + C47139 * C3455 + C47141 * C1981 - C47142 * C1974 -
             C47141 * C1982 + C47138 * C1989) *
                C154164 * C154429 +
            (C47145 * C6268 - C47146 * C6260 - C47145 * C6269 +
             C154445 * C6278 + C47143 * C3447 - C47144 * C3442 -
             C47143 * C3448 + C47139 * C3454 + C47141 * C1983 - C47142 * C1975 -
             C47141 * C1984 + C47138 * C1990) *
                C154164 * C154458 +
            (C47145 * C6272 - C47146 * C6262 - C47145 * C6273 +
             C154445 * C6280 + C47143 * C3445 - C47144 * C3441 -
             C47143 * C3446 + C47139 * C3453 + C47141 * C1985 - C47142 * C1976 -
             C47141 * C1986 + C47138 * C1991) *
                C154164 * C154477) *
               C154146) *
              C340) *
         C154047) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C47141 * C144 - C47142 * C136 - C47141 * C145 + C47138 * C160 +
            C47143 * C600 - C47144 * C584 - C47143 * C601 + C47139 * C620 +
            C47145 * C602 - C47146 * C585 - C47145 * C603 + C154445 * C621) *
               C154164 * C154477 +
           (C47220 + C47221 + C47222) * C154164 * C154458 + C47236 * C154429) *
              C2320 -
          (C48319 * C154429 + (C47833 + C47834 + C47835) * C154164 * C154458 +
           (C47145 * C2337 - C47146 * C2328 - C47145 * C2338 + C154445 * C2343 +
            C47143 * C602 - C47144 * C585 - C47143 * C603 + C47139 * C621 +
            C47141 * C600 - C47142 * C584 - C47141 * C601 + C47138 * C620) *
               C154164 * C154477) *
              C2321 +
          ((C47141 * C602 - C47142 * C585 - C47141 * C603 + C47138 * C621 +
            C47143 * C2337 - C47144 * C2328 - C47143 * C2338 + C47139 * C2343 +
            C47145 * C7777 - C47146 * C7773 - C47145 * C7778 +
            C154445 * C7785) *
               C154164 * C154477 +
           (C47836 + C47837 + C47838) * C154164 * C154458 +
           (C47839 + C47840 + C47841) * C154164 * C154429) *
              C2322 -
          ((C47145 * C10598 - C47146 * C10595 - C47145 * C10599 +
            C154445 * C10604 + C47143 * C7781 - C47144 * C7775 -
            C47143 * C7782 + C47139 * C7787 + C47141 * C2333 - C47142 * C2326 -
            C47141 * C2334 + C47138 * C2341) *
               C154164 * C154429 +
           (C47145 * C10600 - C47146 * C10596 - C47145 * C10601 +
            C154445 * C10605 + C47143 * C7779 - C47144 * C7774 -
            C47143 * C7780 + C47139 * C7786 + C47141 * C2335 - C47142 * C2327 -
            C47141 * C2336 + C47138 * C2342) *
               C154164 * C154458 +
           (C47145 * C10602 - C47146 * C10597 - C47145 * C10603 +
            C154445 * C10606 + C47143 * C7777 - C47144 * C7773 -
            C47143 * C7778 + C47139 * C7785 + C47141 * C2337 - C47142 * C2328 -
            C47141 * C2338 + C47138 * C2343) *
               C154164 * C154477) *
              C2323) *
         C154066 * C154047) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C47141 * C144 - C47142 * C136 - C47141 * C145 + C47138 * C160 +
             C47143 * C600 - C47144 * C584 - C47143 * C601 + C47139 * C620 +
             C47145 * C602 - C47146 * C585 - C47145 * C603 + C154445 * C621) *
                C154480 +
            (C51712 + C51713 + C51714) * C154468 + C51725 * C154442) *
               C154011 * C2114 -
           (C54119 * C154442 + (C52727 + C52728 + C52729) * C154468 +
            (C47145 * C2337 - C47146 * C2328 - C47145 * C2338 +
             C154445 * C2343 + C47143 * C602 - C47144 * C585 - C47143 * C603 +
             C47139 * C621 + C47141 * C600 - C47142 * C584 - C47141 * C601 +
             C47138 * C620) *
                C154480) *
               C154011 * C154146) *
              C154066 * C1309 +
          (((C47835 + C47834 + C47833) * C154480 +
            (C48652 + C48653 + C48654) * C154468 +
            (C52730 + C52731 + C52732) * C154442) *
               C154011 * C154146 -
           (C51699 * C154442 + (C47531 + C47532 + C47533) * C154468 +
            (C47222 + C47221 + C47220) * C154480) *
               C154011 * C2114) *
              C154066 * C1310 +
          ((C47234 * C154480 + (C47530 + C47529 + C47528) * C154468 +
            (C47537 + C47538 + C47539) * C154442) *
               C154011 * C2114 -
           ((C47145 * C6264 - C47146 * C6258 - C47145 * C6265 +
             C154445 * C6276 + C47143 * C3449 - C47144 * C3443 -
             C47143 * C3450 + C47139 * C3455 + C47141 * C1981 - C47142 * C1974 -
             C47141 * C1982 + C47138 * C1989) *
                C154442 +
            (C48657 + C48656 + C48655) * C154468 + C48315 * C154480) *
               C154011 * C154146) *
              C154066 * C1311)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C47141 * C144 - C47142 * C136 - C47141 * C145 + C47138 * C160 +
             C47143 * C600 - C47144 * C584 - C47143 * C601 + C47139 * C620 +
             C47145 * C602 - C47146 * C585 - C47145 * C603 + C154445 * C621) *
                C154480 +
            (C51712 + C51713 + C51714) * C154468 + C51725 * C154442) *
               C154011 * C2114 -
           (C54119 * C154442 + (C52727 + C52728 + C52729) * C154468 +
            (C47145 * C2337 - C47146 * C2328 - C47145 * C2338 +
             C154445 * C2343 + C47143 * C602 - C47144 * C585 - C47143 * C603 +
             C47139 * C621 + C47141 * C600 - C47142 * C584 - C47141 * C601 +
             C47138 * C620) *
                C154480) *
               C154011 * C154146) *
              C338 +
          (((C52729 + C52728 + C52727) * C154480 +
            (C52726 + C52725 + C52724) * C154468 +
            (C54126 + C54127 + C54128) * C154442) *
               C154011 * C154146 -
           (C53110 * C154442 + (C51717 + C51716 + C51715) * C154468 +
            (C51714 + C51713 + C51712) * C154480) *
               C154011 * C2114) *
              C339 +
          ((C51725 * C154480 + (C51720 + C51719 + C51718) * C154468 +
            (C53117 + C53118 + C53119) * C154442) *
               C154011 * C2114 -
           ((C47145 * C30000 - C47146 * C29998 - C47145 * C30001 +
             C154445 * C30004 + C47143 * C28466 - C47144 * C28464 -
             C47143 * C28467 + C47139 * C28470 + C47141 * C5664 -
             C47142 * C5659 - C47141 * C5665 + C47138 * C5668) *
                C154442 +
            (C54128 + C54127 + C54126) * C154468 + C54119 * C154480) *
               C154011 * C154146) *
              C340) *
         C154047) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C47141 * C144 - C47142 * C136 - C47141 * C145 + C47138 * C160 +
            C47143 * C600 - C47144 * C584 - C47143 * C601 + C47139 * C620 +
            C47145 * C602 - C47146 * C585 - C47145 * C603 + C154445 * C621) *
               C154480 +
           (C51712 + C51713 + C51714) * C154468 + C51725 * C154442) *
              C154011 * C2320 -
          (C54119 * C154442 + (C52727 + C52728 + C52729) * C154468 +
           (C47145 * C2337 - C47146 * C2328 - C47145 * C2338 + C154445 * C2343 +
            C47143 * C602 - C47144 * C585 - C47143 * C603 + C47139 * C621 +
            C47141 * C600 - C47142 * C584 - C47141 * C601 + C47138 * C620) *
               C154480) *
              C154011 * C2321 +
          ((C47141 * C602 - C47142 * C585 - C47141 * C603 + C47138 * C621 +
            C47143 * C2337 - C47144 * C2328 - C47143 * C2338 + C47139 * C2343 +
            C47145 * C7777 - C47146 * C7773 - C47145 * C7778 +
            C154445 * C7785) *
               C154480 +
           (C53374 + C53375 + C53376) * C154468 +
           (C53377 + C53378 + C53379) * C154442) *
              C154011 * C2322 -
          ((C47145 * C33867 - C47146 * C33865 - C47145 * C33868 +
            C154445 * C33871 + C47143 * C31084 - C47144 * C31082 -
            C47143 * C31085 + C47139 * C31088 + C47141 * C6272 -
            C47142 * C6262 - C47141 * C6273 + C47138 * C6280) *
               C154442 +
           (C47145 * C33869 - C47146 * C33866 - C47145 * C33870 +
            C154445 * C33872 + C47143 * C9282 - C47144 * C9277 -
            C47143 * C9283 + C47139 * C9286 + C47141 * C6274 - C47142 * C6263 -
            C47141 * C6275 + C47138 * C6281) *
               C154468 +
           (C47145 * C10602 - C47146 * C10597 - C47145 * C10603 +
            C154445 * C10606 + C47143 * C7777 - C47144 * C7773 -
            C47143 * C7778 + C47139 * C7785 + C47141 * C2337 - C47142 * C2328 -
            C47141 * C2338 + C47138 * C2343) *
               C154480) *
              C154011 * C2323) *
         C154066 * C154047) /
            (p * q * std::sqrt(p + q));
    d2ee[223] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C154480 +
             C3210 * C154468 + C3211 * C154442) *
                C2902 +
            (C2906 + C2907 + C2908) * C2903 + C2920 * C154429) *
               C154465 -
           (C3960 * C154429 + (C3507 + C3468 + C3469) * C2903 +
            (C4299 * C154442 + C4300 * C154468 +
             (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                 C154480) *
                C2902) *
               C154466 +
           (((C134 * C602 - C135 * C585 - C134 * C603 + C154181 * C621) *
                 C154480 +
             C4930 * C154468 + C4931 * C154442) *
                C2902 +
            (C3470 + C3508 + C3509) * C2903 +
            (C3479 + C3510 + C3511) * C154429) *
               C2630) *
              C154066 * C154384 +
          (((C3469 + C3468 + C3507) * C2902 + (C3463 + C3462 + C3506) * C2903 +
            (C3954 + C3955 + C3964) * C154429) *
               C154466 -
           (C2921 * C154429 + (C2911 + C2910 + C2909) * C2903 +
            (C2908 + C2907 + C2906) * C2902) *
               C154465 -
           (((C134 * C3451 - C135 * C3444 - C134 * C3452 + C154181 * C3456) *
                 C154442 +
             (C134 * C1548 - C135 * C1542 - C134 * C1549 + C154181 * C1557) *
                 C154468 +
             C683 * C154480) *
                C154429 +
            (C3511 + C3510 + C3479) * C2903 + (C3509 + C3508 + C3470) * C2902) *
               C2630) *
              C154066 * C154053)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                C154164 * C123 +
            C211 * C124 + C212 * C125 + C213 * C126 + C214 * C127) *
               C154465 -
           (C685 * C127 + C686 * C126 + C687 * C125 + C688 * C124 +
            (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                C154164 * C123) *
               C154466 +
           ((C134 * C602 - C135 * C585 - C134 * C603 + C154181 * C621) *
                C154164 * C123 +
            C689 * C124 + C690 * C125 + C691 * C126 + C692 * C127) *
               C2630) *
              C154066 * C154384 +
          ((C688 * C123 + C687 * C124 + C686 * C125 + C685 * C126 +
            C967 * C127) *
               C154466 -
           (C215 * C127 + C214 * C126 + C213 * C125 + C212 * C124 +
            C211 * C123) *
               C154465 -
           ((C134 * C614 - C135 * C591 - C134 * C615 + C154181 * C627) *
                C154164 * C127 +
            C692 * C126 + C691 * C125 + C690 * C124 + C689 * C123) *
               C2630) *
              C154066 * C154053)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C24270 +
             C3210 * C24271 + C3211 * C154442) *
                C154477 +
            (C24277 + C24278 + C24279) * C154458 + C24291 * C154429) *
               C154465 -
           (C25198 * C154429 + (C24744 + C24745 + C24746) * C154458 +
            (C4299 * C154442 + C4300 * C24271 +
             (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                 C24270) *
                C154477) *
               C154466 +
           (((C134 * C602 - C135 * C585 - C134 * C603 + C154181 * C621) *
                 C24270 +
             C4930 * C24271 + C4931 * C154442) *
                C154477 +
            (C24747 + C24748 + C24749) * C154458 +
            (C24750 + C24751 + C24752) * C154429) *
               C2630) *
              C154066 * C154384 +
          (((C24746 + C24745 + C24744) * C154477 +
            (C24743 + C24742 + C24741) * C154458 +
            (C25195 + C25196 + C25197) * C154429) *
               C154466 -
           (C24292 * C154429 + (C24282 + C24281 + C24280) * C154458 +
            (C24279 + C24278 + C24277) * C154477) *
               C154465 -
           (((C134 * C3451 - C135 * C3444 - C134 * C3452 + C154181 * C3456) *
                 C154442 +
             C11901 * C24271 + C683 * C24270) *
                C154429 +
            (C24752 + C24751 + C24750) * C154458 +
            (C24749 + C24748 + C24747) * C154477) *
               C2630) *
              C154066 * C154053)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                C28192 +
            C3210 * C28193 + C3211 * C28194 + C3214 * C28195 + C4687 * C28196) *
               C154011 * C154465 -
           (C28899 * C28196 + C5676 * C28195 + C4299 * C28194 + C4300 * C28193 +
            (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                C28192) *
               C154011 * C154466 +
           ((C134 * C602 - C135 * C585 - C134 * C603 + C154181 * C621) *
                C28192 +
            C4930 * C28193 + C4931 * C28194 + C29254 * C28195 +
            C29255 * C28196) *
               C154011 * C2630) *
              C154066 * C154384 +
          ((C680 * C28192 + C1178 * C28193 + C3501 * C28194 + C4301 * C28195 +
            C28900 * C28196) *
               C154011 * C154466 -
           (C3215 * C28196 + C3213 * C28195 + C444 * C28194 + C443 * C28193 +
            C205 * C28192) *
               C154011 * C154465 -
           ((C134 * C28468 - C135 * C28465 - C134 * C28469 + C154181 * C28471) *
                C28196 +
            (C134 * C4910 - C135 * C4906 - C134 * C4911 + C154181 * C4915) *
                C28195 +
            C3503 * C28194 + C3502 * C28193 + C681 * C28192) *
               C154011 * C2630) *
              C154066 * C154053)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C47141 * C144 - C47142 * C136 - C47141 * C145 + C47138 * C160 +
             C47143 * C600 - C47144 * C584 - C47143 * C601 + C47139 * C620 +
             C47145 * C602 - C47146 * C585 - C47145 * C603 + C154445 * C621) *
                C154164 * C154477 +
            (C47220 + C47221 + C47222) * C154164 * C154458 + C47236 * C154429) *
               C154465 -
           (C48319 * C154429 + (C47833 + C47834 + C47835) * C154164 * C154458 +
            (C47145 * C2337 - C47146 * C2328 - C47145 * C2338 +
             C154445 * C2343 + C47143 * C602 - C47144 * C585 - C47143 * C603 +
             C47139 * C621 + C47141 * C600 - C47142 * C584 - C47141 * C601 +
             C47138 * C620) *
                C154164 * C154477) *
               C154466 +
           ((C47141 * C602 - C47142 * C585 - C47141 * C603 + C47138 * C621 +
             C47143 * C2337 - C47144 * C2328 - C47143 * C2338 + C47139 * C2343 +
             C47145 * C7777 - C47146 * C7773 - C47145 * C7778 +
             C154445 * C7785) *
                C154164 * C154477 +
            (C47836 + C47837 + C47838) * C154164 * C154458 +
            (C47839 + C47840 + C47841) * C154164 * C154429) *
               C2630) *
              C154066 * C154384 +
          (((C47835 + C47834 + C47833) * C154164 * C154477 +
            (C47832 + C47831 + C47830) * C154164 * C154458 +
            (C48323 + C48324 + C48325) * C154164 * C154429) *
               C154466 -
           (C47237 * C154429 + (C47225 + C47224 + C47223) * C154164 * C154458 +
            (C47222 + C47221 + C47220) * C154164 * C154477) *
               C154465 -
           ((C47145 * C7783 - C47146 * C7776 - C47145 * C7784 +
             C154445 * C7788 + C47143 * C2331 - C47144 * C2325 -
             C47143 * C2332 + C47139 * C2340 + C47141 * C608 - C47142 * C588 -
             C47141 * C609 + C47138 * C624) *
                C154164 * C154429 +
            (C47841 + C47840 + C47839) * C154164 * C154458 +
            (C47838 + C47837 + C47836) * C154164 * C154477) *
               C2630) *
              C154066 * C154053)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C47141 * C144 - C47142 * C136 - C47141 * C145 + C47138 * C160 +
             C47143 * C600 - C47144 * C584 - C47143 * C601 + C47139 * C620 +
             C47145 * C602 - C47146 * C585 - C47145 * C603 + C154445 * C621) *
                C154480 +
            (C51712 + C51713 + C51714) * C154468 + C51725 * C154442) *
               C154011 * C154465 -
           (C54119 * C154442 + (C52727 + C52728 + C52729) * C154468 +
            (C47145 * C2337 - C47146 * C2328 - C47145 * C2338 +
             C154445 * C2343 + C47143 * C602 - C47144 * C585 - C47143 * C603 +
             C47139 * C621 + C47141 * C600 - C47142 * C584 - C47141 * C601 +
             C47138 * C620) *
                C154480) *
               C154011 * C154466 +
           ((C47141 * C602 - C47142 * C585 - C47141 * C603 + C47138 * C621 +
             C47143 * C2337 - C47144 * C2328 - C47143 * C2338 + C47139 * C2343 +
             C47145 * C7777 - C47146 * C7773 - C47145 * C7778 +
             C154445 * C7785) *
                C154480 +
            (C53374 + C53375 + C53376) * C154468 +
            (C53377 + C53378 + C53379) * C154442) *
               C154011 * C2630) *
              C154066 * C154384 +
          (((C47835 + C47834 + C47833) * C154480 +
            (C48652 + C48653 + C48654) * C154468 +
            (C52730 + C52731 + C52732) * C154442) *
               C154011 * C154466 -
           (C51699 * C154442 + (C47531 + C47532 + C47533) * C154468 +
            (C47222 + C47221 + C47220) * C154480) *
               C154011 * C154465 -
           ((C47145 * C31086 - C47146 * C31083 - C47145 * C31087 +
             C154445 * C31089 + C47143 * C6268 - C47144 * C6260 -
             C47143 * C6269 + C47139 * C6278 + C47141 * C3447 - C47142 * C3442 -
             C47141 * C3448 + C47138 * C3454) *
                C154442 +
            (C47145 * C9280 - C47146 * C9276 - C47145 * C9281 +
             C154445 * C9285 + C47143 * C6270 - C47144 * C6261 -
             C47143 * C6271 + C47139 * C6279 + C47141 * C1552 - C47142 * C1544 -
             C47141 * C1553 + C47138 * C1559) *
                C154468 +
            (C47838 + C47837 + C47836) * C154480) *
               C154011 * C2630) *
              C154066 * C154053)) /
            (p * q * std::sqrt(p + q));
    d2ee[224] +=
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                C154164 * C123 +
            C211 * C124 + C212 * C125 + C213 * C126 + C214 * C127) *
               C2114 -
           (C685 * C127 + C686 * C126 + C687 * C125 + C688 * C124 +
            (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                C154164 * C123) *
               C154146) *
              C338 +
          (((C134 * C1135 - C135 * C1129 - C134 * C1136 + C154181 * C1147) *
                C154164 * C123 +
            C1182 * C124 + C1183 * C125 + C1184 * C126 + C1185 * C127) *
               C154146 -
           (C448 * C127 + C449 * C126 + C450 * C125 + C451 * C124 +
            (C134 * C363 - C135 * C347 - C134 * C364 + C154181 * C383) *
                C154164 * C123) *
               C2114) *
              C339 +
          (((C134 * C365 - C135 * C348 - C134 * C366 + C154181 * C384) *
                C154164 * C123 +
            C452 * C124 + C453 * C125 + C454 * C126 + C455 * C127) *
               C2114 -
           ((C134 * C1977 - C135 * C1972 - C134 * C1978 + C154181 * C1987) *
                C154164 * C127 +
            (C134 * C1979 - C135 * C1973 - C134 * C1980 + C154181 * C1988) *
                C154164 * C126 +
            (C134 * C1981 - C135 * C1974 - C134 * C1982 + C154181 * C1989) *
                C154164 * C125 +
            (C134 * C1983 - C135 * C1975 - C134 * C1984 + C154181 * C1990) *
                C154164 * C124 +
            (C134 * C1985 - C135 * C1976 - C134 * C1986 + C154181 * C1991) *
                C154164 * C123) *
               C154146) *
              C340) *
         C154047) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                C154164 * C123 +
            C211 * C124 + C212 * C125 + C213 * C126 + C214 * C127) *
               C2114 -
           (C685 * C127 + C686 * C126 + C687 * C125 + C688 * C124 +
            (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                C154164 * C123) *
               C154146) *
              C154066 * C1309 +
          ((C688 * C123 + C687 * C124 + C686 * C125 + C685 * C126 +
            C967 * C127) *
               C154146 -
           (C215 * C127 + C214 * C126 + C213 * C125 + C212 * C124 +
            C211 * C123) *
               C2114) *
              C154066 * C1310 +
          ((C212 * C123 + C213 * C124 + C214 * C125 + C215 * C126 +
            C216 * C127) *
               C2114 -
           ((C134 * C956 - C135 * C955 - C134 * C957 + C154181 * C958) *
                C154164 * C127 +
            C967 * C126 + C685 * C125 + C686 * C124 + C687 * C123) *
               C154146) *
              C154066 * C1311)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C154480 +
             C3210 * C154468 + C3211 * C154442) *
                C2902 +
            (C2906 + C2907 + C2908) * C2903 + C2920 * C154429) *
               C2114 -
           (C3960 * C154429 + (C3507 + C3468 + C3469) * C2903 +
            (C4299 * C154442 + C4300 * C154468 +
             (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                 C154480) *
                C2902) *
               C154146) *
              C154066 * C1309 +
          (((C3469 + C3468 + C3507) * C2902 + (C3463 + C3462 + C3506) * C2903 +
            (C3954 + C3955 + C3964) * C154429) *
               C154146 -
           (C2921 * C154429 + (C2911 + C2910 + C2909) * C2903 +
            (C2908 + C2907 + C2906) * C2902) *
               C2114) *
              C154066 * C1310 +
          ((C2920 * C2902 + (C2914 + C2913 + C2912) * C2903 +
            (C2915 + C2916 + C2917) * C154429) *
               C2114 -
           (((C134 * C1977 - C135 * C1972 - C134 * C1978 + C154181 * C1987) *
                 C154442 +
             C1181 * C154468 + C677 * C154480) *
                C154429 +
            (C3964 + C3955 + C3954) * C2903 + C3960 * C2902) *
               C154146) *
              C154066 * C1311)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C154480 +
             C3210 * C154468 + C3211 * C154442) *
                C2902 +
            (C2906 + C2907 + C2908) * C2903 + C2920 * C154429) *
               C2114 -
           (C3960 * C154429 + (C3507 + C3468 + C3469) * C2903 +
            (C4299 * C154442 + C4300 * C154468 +
             (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                 C154480) *
                C2902) *
               C154146) *
              C338 +
          (((C4300 * C154480 + C4299 * C154468 + C5676 * C154442) * C2902 +
            (C4279 + C4280 + C4303) * C2903 +
            (C4285 + C4286 + C4304) * C154429) *
               C154146 -
           (C3734 * C154429 + (C3219 + C3174 + C3175) * C2903 +
            (C3214 * C154442 + C3211 * C154468 + C3210 * C154480) * C2902) *
               C2114) *
              C339 +
          (((C3211 * C154480 + C3214 * C154468 + C4687 * C154442) * C2902 +
            (C3180 + C3220 + C3221) * C2903 +
            (C3185 + C3222 + C3223) * C154429) *
               C2114 -
           (((C134 * C5660 - C135 * C5657 - C134 * C5661 + C154181 * C5666) *
                 C154442 +
             C4302 * C154468 + C3500 * C154480) *
                C154429 +
            ((C134 * C5662 - C135 * C5658 - C134 * C5663 + C154181 * C5667) *
                 C154442 +
             C4301 * C154468 + C3501 * C154480) *
                C2903 +
            ((C134 * C5664 - C135 * C5659 - C134 * C5665 + C154181 * C5668) *
                 C154442 +
             C5676 * C154468 + C4299 * C154480) *
                C2902) *
               C154146) *
              C340) *
         C154047) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C24270 +
             C3210 * C24271 + C3211 * C154442) *
                C154477 +
            (C24277 + C24278 + C24279) * C154458 + C24291 * C154429) *
               C2114 -
           (C25198 * C154429 + (C24744 + C24745 + C24746) * C154458 +
            (C4299 * C154442 + C4300 * C24271 +
             (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                 C24270) *
                C154477) *
               C154146) *
              C154066 * C1309 +
          (((C24746 + C24745 + C24744) * C154477 +
            (C24743 + C24742 + C24741) * C154458 +
            (C25195 + C25196 + C25197) * C154429) *
               C154146 -
           (C24292 * C154429 + (C24282 + C24281 + C24280) * C154458 +
            (C24279 + C24278 + C24277) * C154477) *
               C2114) *
              C154066 * C1310 +
          ((C24291 * C154477 + (C24285 + C24284 + C24283) * C154458 +
            (C24286 + C24287 + C24288) * C154429) *
               C2114 -
           (((C134 * C1977 - C135 * C1972 - C134 * C1978 + C154181 * C1987) *
                 C154442 +
             C1181 * C24271 + C677 * C24270) *
                C154429 +
            (C25197 + C25196 + C25195) * C154458 + C25198 * C154477) *
               C154146) *
              C154066 * C1311)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C24270 +
             C3210 * C24271 + C3211 * C154442) *
                C154477 +
            (C24277 + C24278 + C24279) * C154458 + C24291 * C154429) *
               C2114 -
           (C25198 * C154429 + (C24744 + C24745 + C24746) * C154458 +
            (C4299 * C154442 + C4300 * C24271 +
             (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                 C24270) *
                C154477) *
               C154146) *
              C338 +
          (((C4300 * C24270 + C4299 * C24271 + C5676 * C154442) * C154477 +
            (C25489 + C25490 + C25491) * C154458 +
            (C25492 + C25493 + C25494) * C154429) *
               C154146 -
           (C24975 * C154429 + (C24514 + C24515 + C24516) * C154458 +
            (C3214 * C154442 + C3211 * C24271 + C3210 * C24270) * C154477) *
               C2114) *
              C339 +
          (((C3211 * C24270 + C3214 * C24271 + C4687 * C154442) * C154477 +
            (C24517 + C24518 + C24519) * C154458 +
            (C24520 + C24521 + C24522) * C154429) *
               C2114 -
           (((C134 * C5660 - C135 * C5657 - C134 * C5661 + C154181 * C5666) *
                 C154442 +
             C4302 * C24271 + C3500 * C24270) *
                C154429 +
            ((C134 * C5662 - C135 * C5658 - C134 * C5663 + C154181 * C5667) *
                 C154442 +
             C4301 * C24271 + C3501 * C24270) *
                C154458 +
            ((C134 * C5664 - C135 * C5659 - C134 * C5665 + C154181 * C5668) *
                 C154442 +
             C5676 * C24271 + C4299 * C24270) *
                C154477) *
               C154146) *
              C340) *
         C154047) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                C28192 +
            C3210 * C28193 + C3211 * C28194 + C3214 * C28195 + C4687 * C28196) *
               C154011 * C2114 -
           (C28899 * C28196 + C5676 * C28195 + C4299 * C28194 + C4300 * C28193 +
            (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                C28192) *
               C154011 * C154146) *
              C154066 * C1309 +
          ((C680 * C28192 + C1178 * C28193 + C3501 * C28194 + C4301 * C28195 +
            C28900 * C28196) *
               C154011 * C154146 -
           (C3215 * C28196 + C3213 * C28195 + C444 * C28194 + C443 * C28193 +
            C205 * C28192) *
               C154011 * C2114) *
              C154066 * C1310 +
          ((C206 * C28192 + C442 * C28193 + C445 * C28194 + C3212 * C28195 +
            C3216 * C28196) *
               C154011 * C2114 -
           ((C134 * C5660 - C135 * C5657 - C134 * C5661 + C154181 * C5666) *
                C28196 +
            C4302 * C28195 + C3500 * C28194 + C1179 * C28193 + C679 * C28192) *
               C154011 * C154146) *
              C154066 * C1311)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                C28192 +
            C3210 * C28193 + C3211 * C28194 + C3214 * C28195 + C4687 * C28196) *
               C154011 * C2114 -
           (C28899 * C28196 + C5676 * C28195 + C4299 * C28194 + C4300 * C28193 +
            (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                C28192) *
               C154011 * C154146) *
              C338 +
          ((C4300 * C28192 + C4299 * C28193 + C5676 * C28194 + C28899 * C28195 +
            C29672 * C28196) *
               C154011 * C154146 -
           (C28341 * C28196 + C4687 * C28195 + C3214 * C28194 + C3211 * C28193 +
            C3210 * C28192) *
               C154011 * C2114) *
              C339 +
          ((C3211 * C28192 + C3214 * C28193 + C4687 * C28194 + C28341 * C28195 +
            C29115 * C28196) *
               C154011 * C2114 -
           ((C134 * C29662 - C135 * C29661 - C134 * C29663 + C154181 * C29664) *
                C28196 +
            C29672 * C28195 + C28899 * C28194 + C5676 * C28193 +
            C4299 * C28192) *
               C154011 * C154146) *
              C340) *
         C154047) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C47141 * C144 - C47142 * C136 - C47141 * C145 + C47138 * C160 +
             C47143 * C600 - C47144 * C584 - C47143 * C601 + C47139 * C620 +
             C47145 * C602 - C47146 * C585 - C47145 * C603 + C154445 * C621) *
                C154164 * C154477 +
            (C47220 + C47221 + C47222) * C154164 * C154458 + C47236 * C154429) *
               C2114 -
           (C48319 * C154429 + (C47833 + C47834 + C47835) * C154164 * C154458 +
            (C47145 * C2337 - C47146 * C2328 - C47145 * C2338 +
             C154445 * C2343 + C47143 * C602 - C47144 * C585 - C47143 * C603 +
             C47139 * C621 + C47141 * C600 - C47142 * C584 - C47141 * C601 +
             C47138 * C620) *
                C154164 * C154477) *
               C154146) *
              C154066 * C1309 +
          (((C47835 + C47834 + C47833) * C154164 * C154477 +
            (C47832 + C47831 + C47830) * C154164 * C154458 +
            (C48323 + C48324 + C48325) * C154164 * C154429) *
               C154146 -
           (C47237 * C154429 + (C47225 + C47224 + C47223) * C154164 * C154458 +
            (C47222 + C47221 + C47220) * C154164 * C154477) *
               C2114) *
              C154066 * C1310 +
          ((C47236 * C154477 + (C47228 + C47227 + C47226) * C154164 * C154458 +
            (C47229 + C47230 + C47231) * C154164 * C154429) *
               C2114 -
           ((C47145 * C2329 - C47146 * C2324 - C47145 * C2330 +
             C154445 * C2339 + C47143 * C610 - C47144 * C589 - C47143 * C611 +
             C47139 * C625 + C47141 * C592 - C47142 * C580 - C47141 * C593 +
             C47138 * C616) *
                C154164 * C154429 +
            (C48325 + C48324 + C48323) * C154164 * C154458 + C48319 * C154477) *
               C154146) *
              C154066 * C1311)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C47141 * C144 - C47142 * C136 - C47141 * C145 + C47138 * C160 +
             C47143 * C600 - C47144 * C584 - C47143 * C601 + C47139 * C620 +
             C47145 * C602 - C47146 * C585 - C47145 * C603 + C154445 * C621) *
                C154164 * C154477 +
            (C47220 + C47221 + C47222) * C154164 * C154458 + C47236 * C154429) *
               C2114 -
           (C48319 * C154429 + (C47833 + C47834 + C47835) * C154164 * C154458 +
            (C47145 * C2337 - C47146 * C2328 - C47145 * C2338 +
             C154445 * C2343 + C47143 * C602 - C47144 * C585 - C47143 * C603 +
             C47139 * C621 + C47141 * C600 - C47142 * C584 - C47141 * C601 +
             C47138 * C620) *
                C154164 * C154477) *
               C154146) *
              C338 +
          (((C47141 * C1135 - C47142 * C1129 - C47141 * C1136 + C47138 * C1147 +
             C47143 * C1554 - C47144 * C1545 - C47143 * C1555 + C47139 * C1560 +
             C47145 * C6274 - C47146 * C6263 - C47145 * C6275 +
             C154445 * C6281) *
                C154164 * C154477 +
            (C48652 + C48653 + C48654) * C154164 * C154458 +
            (C48655 + C48656 + C48657) * C154164 * C154429) *
               C154146 -
           (C48077 * C154429 + (C47531 + C47532 + C47533) * C154164 * C154458 +
            (C47145 * C1554 - C47146 * C1545 - C47145 * C1555 +
             C154445 * C1560 + C47143 * C1135 - C47144 * C1129 -
             C47143 * C1136 + C47139 * C1147 + C47141 * C363 - C47142 * C347 -
             C47141 * C364 + C47138 * C383) *
                C154164 * C154477) *
               C2114) *
              C339 +
          (((C47141 * C365 - C47142 * C348 - C47141 * C366 + C47138 * C384 +
             C47143 * C1985 - C47144 * C1976 - C47143 * C1986 + C47139 * C1991 +
             C47145 * C3445 - C47146 * C3441 - C47145 * C3446 +
             C154445 * C3453) *
                C154164 * C154477 +
            (C47534 + C47535 + C47536) * C154164 * C154458 +
            (C47537 + C47538 + C47539) * C154164 * C154429) *
               C2114 -
           ((C47145 * C6264 - C47146 * C6258 - C47145 * C6265 +
             C154445 * C6276 + C47143 * C3449 - C47144 * C3443 -
             C47143 * C3450 + C47139 * C3455 + C47141 * C1981 - C47142 * C1974 -
             C47141 * C1982 + C47138 * C1989) *
                C154164 * C154429 +
            (C47145 * C6268 - C47146 * C6260 - C47145 * C6269 +
             C154445 * C6278 + C47143 * C3447 - C47144 * C3442 -
             C47143 * C3448 + C47139 * C3454 + C47141 * C1983 - C47142 * C1975 -
             C47141 * C1984 + C47138 * C1990) *
                C154164 * C154458 +
            (C47145 * C6272 - C47146 * C6262 - C47145 * C6273 +
             C154445 * C6280 + C47143 * C3445 - C47144 * C3441 -
             C47143 * C3446 + C47139 * C3453 + C47141 * C1985 - C47142 * C1976 -
             C47141 * C1986 + C47138 * C1991) *
                C154164 * C154477) *
               C154146) *
              C340) *
         C154047) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C47141 * C144 - C47142 * C136 - C47141 * C145 + C47138 * C160 +
             C47143 * C600 - C47144 * C584 - C47143 * C601 + C47139 * C620 +
             C47145 * C602 - C47146 * C585 - C47145 * C603 + C154445 * C621) *
                C154480 +
            (C51712 + C51713 + C51714) * C154468 + C51725 * C154442) *
               C154011 * C2114 -
           (C54119 * C154442 + (C52727 + C52728 + C52729) * C154468 +
            (C47145 * C2337 - C47146 * C2328 - C47145 * C2338 +
             C154445 * C2343 + C47143 * C602 - C47144 * C585 - C47143 * C603 +
             C47139 * C621 + C47141 * C600 - C47142 * C584 - C47141 * C601 +
             C47138 * C620) *
                C154480) *
               C154011 * C154146) *
              C154066 * C1309 +
          (((C47835 + C47834 + C47833) * C154480 +
            (C48652 + C48653 + C48654) * C154468 +
            (C52730 + C52731 + C52732) * C154442) *
               C154011 * C154146 -
           (C51699 * C154442 + (C47531 + C47532 + C47533) * C154468 +
            (C47222 + C47221 + C47220) * C154480) *
               C154011 * C2114) *
              C154066 * C1310 +
          ((C47234 * C154480 + (C47530 + C47529 + C47528) * C154468 +
            (C47537 + C47538 + C47539) * C154442) *
               C154011 * C2114 -
           ((C47145 * C6264 - C47146 * C6258 - C47145 * C6265 +
             C154445 * C6276 + C47143 * C3449 - C47144 * C3443 -
             C47143 * C3450 + C47139 * C3455 + C47141 * C1981 - C47142 * C1974 -
             C47141 * C1982 + C47138 * C1989) *
                C154442 +
            (C48657 + C48656 + C48655) * C154468 + C48315 * C154480) *
               C154011 * C154146) *
              C154066 * C1311)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C47141 * C144 - C47142 * C136 - C47141 * C145 + C47138 * C160 +
             C47143 * C600 - C47144 * C584 - C47143 * C601 + C47139 * C620 +
             C47145 * C602 - C47146 * C585 - C47145 * C603 + C154445 * C621) *
                C154480 +
            (C51712 + C51713 + C51714) * C154468 + C51725 * C154442) *
               C154011 * C2114 -
           (C54119 * C154442 + (C52727 + C52728 + C52729) * C154468 +
            (C47145 * C2337 - C47146 * C2328 - C47145 * C2338 +
             C154445 * C2343 + C47143 * C602 - C47144 * C585 - C47143 * C603 +
             C47139 * C621 + C47141 * C600 - C47142 * C584 - C47141 * C601 +
             C47138 * C620) *
                C154480) *
               C154011 * C154146) *
              C338 +
          (((C52729 + C52728 + C52727) * C154480 +
            (C52726 + C52725 + C52724) * C154468 +
            (C54126 + C54127 + C54128) * C154442) *
               C154011 * C154146 -
           (C53110 * C154442 + (C51717 + C51716 + C51715) * C154468 +
            (C51714 + C51713 + C51712) * C154480) *
               C154011 * C2114) *
              C339 +
          ((C51725 * C154480 + (C51720 + C51719 + C51718) * C154468 +
            (C53117 + C53118 + C53119) * C154442) *
               C154011 * C2114 -
           ((C47145 * C30000 - C47146 * C29998 - C47145 * C30001 +
             C154445 * C30004 + C47143 * C28466 - C47144 * C28464 -
             C47143 * C28467 + C47139 * C28470 + C47141 * C5664 -
             C47142 * C5659 - C47141 * C5665 + C47138 * C5668) *
                C154442 +
            (C54128 + C54127 + C54126) * C154468 + C54119 * C154480) *
               C154011 * C154146) *
              C340) *
         C154047) /
            (p * q * std::sqrt(p + q));
    d2ee[225] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
              C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
                 C154406 +
             (C101527 + C101528) * C154226) *
                C154016 +
            ((C97340 + C97341) * C154406 + C101466 * C154226) * C154024 +
            C110422 * C82856) *
               C154082 * C154392 -
           (C111311 * C82856 +
            (C101476 * C154226 + C101477 * C154406) * C154024 +
            ((C101530 + C101529) * C154226 + (C101528 + C101527) * C154406) *
                C154016) *
               C154082 * C154118) *
              C154461 +
          (((C101466 * C154406 + C101467 * C154226) * C154016 +
            (C102164 * C154406 + C102165 * C154226) * C154024 +
            (C111310 * C154406 + (C97634 + C97635) * C154226) * C82856) *
               C154082 * C154118 -
           (C110423 * C82856 +
            (C98109 * C154226 + (C97343 + C97342) * C154406) * C154024 +
            (C101477 * C154226 + (C97341 + C97340) * C154406) * C154016) *
               C154082 * C154392) *
              C154462 +
          ((C110422 * C154016 +
            (C97351 * C154406 + C111310 * C154226) * C154024 +
            ((C97347 + C97346) * C154406 + (C98124 + C98125) * C154226) *
                C82856) *
               C154082 * C154392 -
           (((C97277 * C1977 - C97278 * C1972 - C97277 * C1978 +
              C154268 * C1987 + C97275 * C373 - C97276 * C352 - C97275 * C374 +
              C97273 * C388) *
                 C154226 +
             (C98125 + C98124) * C154406) *
                C82856 +
            ((C97635 + C97634) * C154226 + C98108 * C154406) * C154024 +
            C111311 * C154016) *
               C154082 * C154118) *
              C818)) /
        (p * q * std::sqrt(p + q));
    d2ee[226] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
               C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
                  C154406 +
              (C101527 + C101528) * C154226) *
                 C154016 +
             ((C97340 + C97341) * C154406 + C101466 * C154226) * C154024 +
             C110422 * C82856) *
                C154393 -
            (C111605 * C82856 +
             (C102857 * C154226 + (C97906 + C97907) * C154406) * C154024 +
             ((C102898 + C102899) * C154226 +
              (C97277 * C602 - C97278 * C585 - C97277 * C603 + C154268 * C621 +
               C97275 * C600 - C97276 * C584 - C97275 * C601 + C97273 * C620) *
                  C154406) *
                 C154016) *
                C154146) *
               C154392 +
           ((((C102899 + C102898) * C154406 + (C102897 + C102896) * C154226) *
                 C154016 +
             (C102874 * C154406 + C102875 * C154226) * C154024 +
             (C111992 * C154406 + (C102468 + C102469) * C154226) * C82856) *
                C154146 -
            (C111311 * C82856 +
             (C101476 * C154226 + C101477 * C154406) * C154024 +
             ((C101530 + C101529) * C154226 + (C101528 + C101527) * C154406) *
                 C154016) *
                C154393) *
               C154118) *
              C341 +
          (((((C97907 + C97906) * C154406 + C102874 * C154226) * C154016 +
             ((C97905 + C97904) * C154406 + C111992 * C154226) * C154024 +
             ((C97903 + C97902) * C154406 + (C98636 + C98637) * C154226) *
                 C82856) *
                C154146 -
            (C110423 * C82856 +
             (C98109 * C154226 + (C97343 + C97342) * C154406) * C154024 +
             (C101477 * C154226 + (C97341 + C97340) * C154406) * C154016) *
                C154393) *
               C154392 +
           (((C101466 * C154406 + C101467 * C154226) * C154016 +
             (C102164 * C154406 + C102165 * C154226) * C154024 +
             (C111310 * C154406 + (C97634 + C97635) * C154226) * C82856) *
                C154393 -
            (((C97277 * C3451 - C97278 * C3444 - C97277 * C3452 +
               C154268 * C3456 + C97275 * C1979 - C97276 * C1973 -
               C97275 * C1980 + C97273 * C1988) *
                  C154226 +
              (C98637 + C98636) * C154406) *
                 C82856 +
             ((C102469 + C102468) * C154226 + C111602 * C154406) * C154024 +
             (C102856 * C154226 + C102857 * C154406) * C154016) *
                C154146) *
               C154118) *
              C154053)) /
        (p * q * std::sqrt(p + q));
    d2ee[227] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
              C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
                 C154406 +
             (C101527 + C101528) * C154226) *
                C154016 +
            ((C97340 + C97341) * C154406 + C101466 * C154226) * C154024 +
            C110422 * C82856) *
               C154082 * C338 -
           ((C101502 * C154226 + C98109 * C154406) * C82856 +
            (C101476 * C154226 + C101477 * C154406) * C154024 +
            ((C101530 + C101529) * C154226 + (C101528 + C101527) * C154406) *
                C154016) *
               C154082 * C339 +
           ((C101539 * C154406 + (C101534 + C101533) * C154226) * C154016 +
            (C101467 * C154406 + C101541 * C154226) * C154024 +
            (C102165 * C154406 + (C101537 + C101538) * C154226) * C82856) *
               C154082 * C340) *
              C341 +
          (((C101466 * C154406 + C101467 * C154226) * C154016 +
            (C102164 * C154406 + C102165 * C154226) * C154024 +
            ((C97625 + C97624) * C154406 + (C97634 + C97635) * C154226) *
                C82856) *
               C154082 * C339 -
           (C110423 * C82856 +
            (C98109 * C154226 + (C97343 + C97342) * C154406) * C154024 +
            (C101477 * C154226 + (C97341 + C97340) * C154406) * C154016) *
               C154082 * C338 -
           (((C97277 * C4264 - C97278 * C4257 - C97277 * C4265 +
              C154268 * C4269 + C97275 * C1406 - C97276 * C1400 -
              C97275 * C1407 + C97273 * C1415) *
                 C154226 +
             (C97635 + C97634) * C154406) *
                C82856 +
            ((C101538 + C101537) * C154226 + C101502 * C154406) * C154024 +
            (C101540 * C154226 + C101476 * C154406) * C154016) *
               C154082 * C340) *
              C154053)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
             C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
                C154406 +
            (C101527 + C101528) * C154226) *
               C154016 +
           ((C97340 + C97341) * C154406 + C101466 * C154226) * C154024 +
           C110422 * C82856) *
              C154082 * C154066 * C130 -
          (C110423 * C82856 +
           (C98109 * C154226 + (C97343 + C97342) * C154406) * C154024 +
           (C101477 * C154226 + (C97341 + C97340) * C154406) * C154016) *
              C154082 * C154066 * C131 +
          (C110422 * C154016 +
           (C97351 * C154406 + (C97625 + C97624) * C154226) * C154024 +
           ((C97347 + C97346) * C154406 + (C98124 + C98125) * C154226) *
               C82856) *
              C154082 * C154066 * C132 -
          (((C97277 * C1145 - C97278 * C1134 - C97277 * C1146 +
             C154268 * C1152 + C97275 * C375 - C97276 * C353 - C97275 * C376 +
             C97273 * C389) *
                C154226 +
            (C97349 + C97348) * C154406) *
               C82856 +
           ((C98125 + C98124) * C154226 + C97352 * C154406) * C154024 +
           C110423 * C154016) *
              C154082 * C154066 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
              C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
                 C154406 +
             (C101527 + C101528) * C154226) *
                C154016 +
            ((C97340 + C97341) * C154406 + C101466 * C154226) * C154024 +
            C110422 * C82856) *
               C577 -
           (((C98635 + C98634) * C154226 + C98321 * C154406) * C82856 +
            (C102857 * C154226 + (C97906 + C97907) * C154406) * C154024 +
            ((C102898 + C102899) * C154226 +
             (C97277 * C602 - C97278 * C585 - C97277 * C603 + C154268 * C621 +
              C97275 * C600 - C97276 * C584 - C97275 * C601 + C97273 * C620) *
                 C154406) *
                C154016) *
               C578 +
           (((C97275 * C602 - C97276 * C585 - C97275 * C603 + C97273 * C621 +
              C97277 * C2337 - C97278 * C2328 - C97277 * C2338 +
              C154268 * C2343) *
                 C154406 +
             (C103715 + C103716) * C154226) *
                C154016 +
            ((C97908 + C97909) * C154406 + (C101870 + C101871) * C154226) *
                C154024 +
            ((C97910 + C97911) * C154406 + (C111016 + C111017) * C154226) *
                C82856) *
               C579) *
              C154066 * C341 +
          ((((C97907 + C97906) * C154406 + C102874 * C154226) * C154016 +
            ((C97905 + C97904) * C154406 + (C98634 + C98635) * C154226) *
                C154024 +
            ((C97903 + C97902) * C154406 + (C98636 + C98637) * C154226) *
                C82856) *
               C578 -
           (C110423 * C82856 +
            (C98109 * C154226 + (C97343 + C97342) * C154406) * C154024 +
            (C101477 * C154226 + (C97341 + C97340) * C154406) * C154016) *
               C577 -
           (((C97277 * C8648 - C97278 * C8647 - C97277 * C8649 +
              C154268 * C8650 + C97275 * C1548 - C97276 * C1542 -
              C97275 * C1549 + C97273 * C1557) *
                 C154226 +
             (C97913 + C97912) * C154406) *
                C82856 +
            ((C111017 + C111016) * C154226 + (C97911 + C97910) * C154406) *
                C154024 +
            ((C101871 + C101870) * C154226 + (C97909 + C97908) * C154406) *
                C154016) *
               C579) *
              C154066 * C154053)) /
            (p * q * std::sqrt(p + q));
    d2ee[228] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
              C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
                 C154406 +
             (C101527 + C101528) * C154226) *
                C154016 +
            ((C97340 + C97341) * C154406 + C101466 * C154226) * C154024 +
            C110422 * C82856) *
               C154393 -
           (C111605 * C82856 +
            (C102857 * C154226 + (C97906 + C97907) * C154406) * C154024 +
            ((C102898 + C102899) * C154226 +
             (C97277 * C602 - C97278 * C585 - C97277 * C603 + C154268 * C621 +
              C97275 * C600 - C97276 * C584 - C97275 * C601 + C97273 * C620) *
                 C154406) *
                C154016) *
               C154146) *
              C154066 * C154461 +
          ((((C97907 + C97906) * C154406 + C102874 * C154226) * C154016 +
            ((C97905 + C97904) * C154406 + (C98634 + C98635) * C154226) *
                C154024 +
            ((C97903 + C97902) * C154406 + (C98636 + C98637) * C154226) *
                C82856) *
               C154146 -
           (C110423 * C82856 +
            (C98109 * C154226 + (C97343 + C97342) * C154406) * C154024 +
            (C101477 * C154226 + (C97341 + C97340) * C154406) * C154016) *
               C154393) *
              C154066 * C154462 +
          ((C110422 * C154016 +
            (C97351 * C154406 + C111310 * C154226) * C154024 +
            ((C97347 + C97346) * C154406 + (C98124 + C98125) * C154226) *
                C82856) *
               C154393 -
           (((C97277 * C1546 - C97278 * C1541 - C97277 * C1547 +
              C154268 * C1556 + C97275 * C1143 - C97276 * C1133 -
              C97275 * C1144 + C97273 * C1151) *
                 C154226 +
             (C98337 + C98336) * C154406) *
                C82856 +
            ((C98637 + C98636) * C154226 + C98320 * C154406) * C154024 +
            C111605 * C154016) *
               C154146) *
              C154066 * C818)) /
        (p * q * std::sqrt(p + q));
    d2ee[229] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
             C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
                C154406 +
            (C101527 + C101528) * C154226) *
               C154016 +
           ((C97340 + C97341) * C154406 + C101466 * C154226) * C154024 +
           C110422 * C82856) *
              C154082 * C154066 * C130 -
          (C110423 * C82856 +
           (C98109 * C154226 + (C97343 + C97342) * C154406) * C154024 +
           (C101477 * C154226 + (C97341 + C97340) * C154406) * C154016) *
              C154082 * C154066 * C131 +
          (C110422 * C154016 +
           (C97351 * C154406 + (C97625 + C97624) * C154226) * C154024 +
           ((C97347 + C97346) * C154406 + (C98124 + C98125) * C154226) *
               C82856) *
              C154082 * C154066 * C132 -
          (((C97277 * C1145 - C97278 * C1134 - C97277 * C1146 +
             C154268 * C1152 + C97275 * C375 - C97276 * C353 - C97275 * C376 +
             C97273 * C389) *
                C154226 +
            (C97349 + C97348) * C154406) *
               C82856 +
           ((C98125 + C98124) * C154226 + C97352 * C154406) * C154024 +
           C110423 * C154016) *
              C154082 * C154066 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
              C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
                 C154406 +
             (C101527 + C101528) * C154226) *
                C154016 +
            ((C97340 + C97341) * C154406 + C101466 * C154226) * C154024 +
            C110422 * C82856) *
               C154082 * C338 -
           ((C101502 * C154226 + C98109 * C154406) * C82856 +
            (C101476 * C154226 + C101477 * C154406) * C154024 +
            ((C101530 + C101529) * C154226 + (C101528 + C101527) * C154406) *
                C154016) *
               C154082 * C339 +
           ((C101539 * C154406 + (C101534 + C101533) * C154226) * C154016 +
            (C101467 * C154406 + C101541 * C154226) * C154024 +
            (C102165 * C154406 + (C101537 + C101538) * C154226) * C82856) *
               C154082 * C340) *
              C341 +
          (((C101466 * C154406 + C101467 * C154226) * C154016 +
            (C102164 * C154406 + C102165 * C154226) * C154024 +
            ((C97625 + C97624) * C154406 + (C97634 + C97635) * C154226) *
                C82856) *
               C154082 * C339 -
           (C110423 * C82856 +
            (C98109 * C154226 + (C97343 + C97342) * C154406) * C154024 +
            (C101477 * C154226 + (C97341 + C97340) * C154406) * C154016) *
               C154082 * C338 -
           (((C97277 * C4264 - C97278 * C4257 - C97277 * C4265 +
              C154268 * C4269 + C97275 * C1406 - C97276 * C1400 -
              C97275 * C1407 + C97273 * C1415) *
                 C154226 +
             (C97635 + C97634) * C154406) *
                C82856 +
            ((C101538 + C101537) * C154226 + C101502 * C154406) * C154024 +
            (C101540 * C154226 + C101476 * C154406) * C154016) *
               C154082 * C340) *
              C154053)) /
            (p * q * std::sqrt(p + q));
    d2ee[230] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
              C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
                 C154406 +
             (C101527 + C101528) * C154226) *
                C154016 +
            ((C97340 + C97341) * C154406 + C101466 * C154226) * C154024 +
            C110422 * C82856) *
               C154082 * C154463 -
           (C111311 * C82856 +
            (C101476 * C154226 + C101477 * C154406) * C154024 +
            ((C101530 + C101529) * C154226 + (C101528 + C101527) * C154406) *
                C154016) *
               C154082 * C154464 +
           ((C101539 * C154406 + (C101534 + C101533) * C154226) * C154016 +
            (C101467 * C154406 + C101541 * C154226) * C154024 +
            (C102165 * C154406 + (C101537 + C101538) * C154226) * C82856) *
               C154082 * C1685) *
              C154384 +
          (((C101466 * C154406 + C101467 * C154226) * C154016 +
            (C102164 * C154406 + C102165 * C154226) * C154024 +
            (C111310 * C154406 + (C97634 + C97635) * C154226) * C82856) *
               C154082 * C154464 -
           (C110423 * C82856 +
            (C98109 * C154226 + (C97343 + C97342) * C154406) * C154024 +
            (C101477 * C154226 + (C97341 + C97340) * C154406) * C154016) *
               C154082 * C154463 -
           (((C97277 * C4264 - C97278 * C4257 - C97277 * C4265 +
              C154268 * C4269 + C97275 * C1406 - C97276 * C1400 -
              C97275 * C1407 + C97273 * C1415) *
                 C154226 +
             (C97635 + C97634) * C154406) *
                C82856 +
            ((C101538 + C101537) * C154226 + C101502 * C154406) * C154024 +
            (C101540 * C154226 + C101476 * C154406) * C154016) *
               C154082 * C1685) *
              C154053)) /
        (p * q * std::sqrt(p + q));
    d2ee[231] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
              C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
                 C154406 +
             (C101527 + C101528) * C154226) *
                C154016 +
            ((C97340 + C97341) * C154406 + C101466 * C154226) * C154024 +
            C110422 * C82856) *
               C154393 -
           (C111605 * C82856 +
            (C102857 * C154226 + (C97906 + C97907) * C154406) * C154024 +
            ((C102898 + C102899) * C154226 +
             (C97277 * C602 - C97278 * C585 - C97277 * C603 + C154268 * C621 +
              C97275 * C600 - C97276 * C584 - C97275 * C601 + C97273 * C620) *
                 C154406) *
                C154016) *
               C154146) *
              C154463 +
          ((((C102899 + C102898) * C154406 + (C102897 + C102896) * C154226) *
                C154016 +
            (C102874 * C154406 + C102875 * C154226) * C154024 +
            (C111992 * C154406 + (C102468 + C102469) * C154226) * C82856) *
               C154146 -
           (C111311 * C82856 +
            (C101476 * C154226 + C101477 * C154406) * C154024 +
            ((C101530 + C101529) * C154226 + (C101528 + C101527) * C154406) *
                C154016) *
               C154393) *
              C154464 +
          (((C101539 * C154406 + (C101534 + C101533) * C154226) * C154016 +
            (C101467 * C154406 + C101541 * C154226) * C154024 +
            (C102165 * C154406 + (C101537 + C101538) * C154226) * C82856) *
               C154393 -
           (((C97277 * C4908 - C97278 * C4905 - C97277 * C4909 +
              C154268 * C4914 + C97275 * C4262 - C97276 * C4256 -
              C97275 * C4263 + C97273 * C4268) *
                 C154226 +
             (C102469 + C102468) * C154406) *
                C82856 +
            ((C102901 + C102900) * C154226 + C102856 * C154406) * C154024 +
            ((C104699 + C104698) * C154226 + C104685 * C154406) * C154016) *
               C154146) *
              C1685) *
         C154047) /
        (p * q * std::sqrt(p + q));
    d2ee[232] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
             C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
                C154406 +
            (C101527 + C101528) * C154226) *
               C154016 +
           ((C97340 + C97341) * C154406 + C101466 * C154226) * C154024 +
           C110422 * C82856) *
              C154082 * C1394 -
          (C111311 * C82856 +
           (C101476 * C154226 + C101477 * C154406) * C154024 +
           ((C101530 + C101529) * C154226 + (C101528 + C101527) * C154406) *
               C154016) *
              C154082 * C1395 +
          ((C101539 * C154406 + (C101534 + C101533) * C154226) * C154016 +
           (C101467 * C154406 + C101541 * C154226) * C154024 +
           (C102165 * C154406 + (C101537 + C101538) * C154226) * C82856) *
              C154082 * C1396 -
          (((C97277 * C5660 - C97278 * C5657 - C97277 * C5661 +
             C154268 * C5666 + C97275 * C3147 - C97276 * C3141 -
             C97275 * C3148 + C97273 * C3153) *
                C154226 +
            (C101538 + C101537) * C154406) *
               C82856 +
           ((C101536 + C101535) * C154226 + C101540 * C154406) * C154024 +
           ((C103400 + C103399) * C154226 + C103386 * C154406) * C154016) *
              C154082 * C1397) *
         C154047) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
              C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
                 C154406 +
             (C101527 + C101528) * C154226) *
                C154016 +
            ((C97340 + C97341) * C154406 + C101466 * C154226) * C154024 +
            C110422 * C82856) *
               C154082 * C1307 -
           (C111311 * C82856 +
            (C101476 * C154226 + C101477 * C154406) * C154024 +
            ((C101530 + C101529) * C154226 + (C101528 + C101527) * C154406) *
                C154016) *
               C154082 * C154118) *
              C1309 +
          (((C101466 * C154406 + C101467 * C154226) * C154016 +
            (C102164 * C154406 + C102165 * C154226) * C154024 +
            (C111310 * C154406 + (C97634 + C97635) * C154226) * C82856) *
               C154082 * C154118 -
           (C110423 * C82856 +
            (C98109 * C154226 + (C97343 + C97342) * C154406) * C154024 +
            (C101477 * C154226 + (C97341 + C97340) * C154406) * C154016) *
               C154082 * C1307) *
              C1310 +
          ((C110422 * C154016 +
            (C97351 * C154406 + C111310 * C154226) * C154024 +
            ((C97347 + C97346) * C154406 + (C98124 + C98125) * C154226) *
                C82856) *
               C154082 * C1307 -
           (((C97277 * C1977 - C97278 * C1972 - C97277 * C1978 +
              C154268 * C1987 + C97275 * C373 - C97276 * C352 - C97275 * C374 +
              C97273 * C388) *
                 C154226 +
             (C98125 + C98124) * C154406) *
                C82856 +
            ((C97635 + C97634) * C154226 + C98108 * C154406) * C154024 +
            C111311 * C154016) *
               C154082 * C154118) *
              C1311)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
              C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
                 C154406 +
             (C101527 + C101528) * C154226) *
                C154016 +
            ((C97340 + C97341) * C154406 + C101466 * C154226) * C154024 +
            C110422 * C82856) *
               C577 -
           (C111605 * C82856 +
            (C102857 * C154226 + (C97906 + C97907) * C154406) * C154024 +
            ((C102898 + C102899) * C154226 +
             (C97277 * C602 - C97278 * C585 - C97277 * C603 + C154268 * C621 +
              C97275 * C600 - C97276 * C584 - C97275 * C601 + C97273 * C620) *
                 C154406) *
                C154016) *
               C578 +
           (((C97275 * C602 - C97276 * C585 - C97275 * C603 + C97273 * C621 +
              C97277 * C2337 - C97278 * C2328 - C97277 * C2338 +
              C154268 * C2343) *
                 C154406 +
             (C103715 + C103716) * C154226) *
                C154016 +
            ((C97908 + C97909) * C154406 + (C101870 + C101871) * C154226) *
                C154024 +
            ((C97910 + C97911) * C154406 + (C111016 + C111017) * C154226) *
                C82856) *
               C579) *
              C1307 +
          ((((C102899 + C102898) * C154406 + (C102897 + C102896) * C154226) *
                C154016 +
            (C102874 * C154406 + C102875 * C154226) * C154024 +
            (C111992 * C154406 + (C102468 + C102469) * C154226) * C82856) *
               C578 -
           (C111311 * C82856 +
            (C101476 * C154226 + C101477 * C154406) * C154024 +
            ((C101530 + C101529) * C154226 + (C101528 + C101527) * C154406) *
                C154016) *
               C577 -
           (((C97277 * C6264 - C97278 * C6258 - C97277 * C6265 +
              C154268 * C6276 + C97275 * C3449 - C97276 * C3443 -
              C97275 * C3450 + C97273 * C3455) *
                 C154226 +
             (C111017 + C111016) * C154406) *
                C82856 +
            ((C101873 + C101872) * C154226 + (C101871 + C101870) * C154406) *
                C154024 +
            ((C103718 + C103717) * C154226 + (C103716 + C103715) * C154406) *
                C154016) *
               C579) *
              C154118) *
         C154047) /
            (p * q * std::sqrt(p + q));
    d2ee[233] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
               C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
                  C154406 +
              (C101527 + C101528) * C154226) *
                 C154016 +
             ((C97340 + C97341) * C154406 + C101466 * C154226) * C154024 +
             C110422 * C82856) *
                C154393 -
            (C111605 * C82856 +
             (C102857 * C154226 + (C97906 + C97907) * C154406) * C154024 +
             ((C102898 + C102899) * C154226 +
              (C97277 * C602 - C97278 * C585 - C97277 * C603 + C154268 * C621 +
               C97275 * C600 - C97276 * C584 - C97275 * C601 + C97273 * C620) *
                  C154406) *
                 C154016) *
                C154146) *
               C1307 +
           ((((C102899 + C102898) * C154406 + (C102897 + C102896) * C154226) *
                 C154016 +
             (C102874 * C154406 + C102875 * C154226) * C154024 +
             (C111992 * C154406 + (C102468 + C102469) * C154226) * C82856) *
                C154146 -
            (C111311 * C82856 +
             (C101476 * C154226 + C101477 * C154406) * C154024 +
             ((C101530 + C101529) * C154226 + (C101528 + C101527) * C154406) *
                 C154016) *
                C154393) *
               C154118) *
              C154384 +
          (((((C97907 + C97906) * C154406 + C102874 * C154226) * C154016 +
             ((C97905 + C97904) * C154406 + C111992 * C154226) * C154024 +
             ((C97903 + C97902) * C154406 + (C98636 + C98637) * C154226) *
                 C82856) *
                C154146 -
            (C110423 * C82856 +
             (C98109 * C154226 + (C97343 + C97342) * C154406) * C154024 +
             (C101477 * C154226 + (C97341 + C97340) * C154406) * C154016) *
                C154393) *
               C1307 +
           (((C101466 * C154406 + C101467 * C154226) * C154016 +
             (C102164 * C154406 + C102165 * C154226) * C154024 +
             (C111310 * C154406 + (C97634 + C97635) * C154226) * C82856) *
                C154393 -
            (((C97277 * C3451 - C97278 * C3444 - C97277 * C3452 +
               C154268 * C3456 + C97275 * C1979 - C97276 * C1973 -
               C97275 * C1980 + C97273 * C1988) *
                  C154226 +
              (C98637 + C98636) * C154406) *
                 C82856 +
             ((C102469 + C102468) * C154226 + C111602 * C154406) * C154024 +
             (C102856 * C154226 + C102857 * C154406) * C154016) *
                C154146) *
               C154118) *
              C154053)) /
        (p * q * std::sqrt(p + q));
    d2ee[234] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
              C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
                 C154406 +
             (C101527 + C101528) * C154226) *
                C154016 +
            ((C97340 + C97341) * C154406 + C101466 * C154226) * C154024 +
            C110422 * C82856) *
               C154082 * C1307 -
           (C111311 * C82856 +
            (C101476 * C154226 + C101477 * C154406) * C154024 +
            ((C101530 + C101529) * C154226 + (C101528 + C101527) * C154406) *
                C154016) *
               C154082 * C154118) *
              C1309 +
          (((C101466 * C154406 + C101467 * C154226) * C154016 +
            (C102164 * C154406 + C102165 * C154226) * C154024 +
            (C111310 * C154406 + (C97634 + C97635) * C154226) * C82856) *
               C154082 * C154118 -
           (C110423 * C82856 +
            (C98109 * C154226 + (C97343 + C97342) * C154406) * C154024 +
            (C101477 * C154226 + (C97341 + C97340) * C154406) * C154016) *
               C154082 * C1307) *
              C1310 +
          ((C110422 * C154016 +
            (C97351 * C154406 + C111310 * C154226) * C154024 +
            ((C97347 + C97346) * C154406 + (C98124 + C98125) * C154226) *
                C82856) *
               C154082 * C1307 -
           (((C97277 * C1977 - C97278 * C1972 - C97277 * C1978 +
              C154268 * C1987 + C97275 * C373 - C97276 * C352 - C97275 * C374 +
              C97273 * C388) *
                 C154226 +
             (C98125 + C98124) * C154406) *
                C82856 +
            ((C97635 + C97634) * C154226 + C98108 * C154406) * C154024 +
            C111311 * C154016) *
               C154082 * C154118) *
              C1311)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
             C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
                C154406 +
            (C101527 + C101528) * C154226) *
               C154016 +
           ((C97340 + C97341) * C154406 + C101466 * C154226) * C154024 +
           C110422 * C82856) *
              C154082 * C1394 -
          (C111311 * C82856 +
           (C101476 * C154226 + C101477 * C154406) * C154024 +
           ((C101530 + C101529) * C154226 + (C101528 + C101527) * C154406) *
               C154016) *
              C154082 * C1395 +
          ((C101539 * C154406 + (C101534 + C101533) * C154226) * C154016 +
           (C101467 * C154406 + C101541 * C154226) * C154024 +
           (C102165 * C154406 + (C101537 + C101538) * C154226) * C82856) *
              C154082 * C1396 -
          (((C97277 * C5660 - C97278 * C5657 - C97277 * C5661 +
             C154268 * C5666 + C97275 * C3147 - C97276 * C3141 -
             C97275 * C3148 + C97273 * C3153) *
                C154226 +
            (C101538 + C101537) * C154406) *
               C82856 +
           ((C101536 + C101535) * C154226 + C101540 * C154406) * C154024 +
           ((C103400 + C103399) * C154226 + C103386 * C154406) * C154016) *
              C154082 * C1397) *
         C154047) /
            (p * q * std::sqrt(p + q));
    d2ee[235] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
               C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
                  C154406 +
              (C101527 + C101528) * C154226) *
                 C154016 +
             ((C97340 + C97341) * C154406 + C101466 * C154226) * C154024 +
             C110422 * C82856) *
                C2114 -
            (C111605 * C82856 +
             (C102857 * C154226 + (C97906 + C97907) * C154406) * C154024 +
             ((C102898 + C102899) * C154226 +
              (C97277 * C602 - C97278 * C585 - C97277 * C603 + C154268 * C621 +
               C97275 * C600 - C97276 * C584 - C97275 * C601 + C97273 * C620) *
                  C154406) *
                 C154016) *
                C154146) *
               C154392 +
           ((((C102899 + C102898) * C154406 + (C102897 + C102896) * C154226) *
                 C154016 +
             (C102874 * C154406 + C102875 * C154226) * C154024 +
             (C111992 * C154406 + (C102468 + C102469) * C154226) * C82856) *
                C154146 -
            (C111311 * C82856 +
             (C101476 * C154226 + C101477 * C154406) * C154024 +
             ((C101530 + C101529) * C154226 + (C101528 + C101527) * C154406) *
                 C154016) *
                C2114) *
               C154118) *
              C154384 +
          (((((C97907 + C97906) * C154406 + C102874 * C154226) * C154016 +
             ((C97905 + C97904) * C154406 + C111992 * C154226) * C154024 +
             ((C97903 + C97902) * C154406 + (C98636 + C98637) * C154226) *
                 C82856) *
                C154146 -
            (C110423 * C82856 +
             (C98109 * C154226 + (C97343 + C97342) * C154406) * C154024 +
             (C101477 * C154226 + (C97341 + C97340) * C154406) * C154016) *
                C2114) *
               C154392 +
           (((C101466 * C154406 + C101467 * C154226) * C154016 +
             (C102164 * C154406 + C102165 * C154226) * C154024 +
             (C111310 * C154406 + (C97634 + C97635) * C154226) * C82856) *
                C2114 -
            (((C97277 * C3451 - C97278 * C3444 - C97277 * C3452 +
               C154268 * C3456 + C97275 * C1979 - C97276 * C1973 -
               C97275 * C1980 + C97273 * C1988) *
                  C154226 +
              (C98637 + C98636) * C154406) *
                 C82856 +
             ((C102469 + C102468) * C154226 + C111602 * C154406) * C154024 +
             (C102856 * C154226 + C102857 * C154406) * C154016) *
                C154146) *
               C154118) *
              C154053)) /
        (p * q * std::sqrt(p + q));
    d2ee[236] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
              C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
                 C154406 +
             (C101527 + C101528) * C154226) *
                C154016 +
            ((C97340 + C97341) * C154406 + C101466 * C154226) * C154024 +
            C110422 * C82856) *
               C154465 -
           (C111605 * C82856 +
            (C102857 * C154226 + (C97906 + C97907) * C154406) * C154024 +
            ((C102898 + C102899) * C154226 +
             (C97277 * C602 - C97278 * C585 - C97277 * C603 + C154268 * C621 +
              C97275 * C600 - C97276 * C584 - C97275 * C601 + C97273 * C620) *
                 C154406) *
                C154016) *
               C154466 +
           (((C97275 * C602 - C97276 * C585 - C97275 * C603 + C97273 * C621 +
              C97277 * C2337 - C97278 * C2328 - C97277 * C2338 +
              C154268 * C2343) *
                 C154406 +
             (C103715 + C103716) * C154226) *
                C154016 +
            ((C97908 + C97909) * C154406 + (C101870 + C101871) * C154226) *
                C154024 +
            ((C97910 + C97911) * C154406 + (C111016 + C111017) * C154226) *
                C82856) *
               C2630) *
              C154392 +
          ((((C102899 + C102898) * C154406 + (C102897 + C102896) * C154226) *
                C154016 +
            (C102874 * C154406 + C102875 * C154226) * C154024 +
            (C111992 * C154406 + (C102468 + C102469) * C154226) * C82856) *
               C154466 -
           (C111311 * C82856 +
            (C101476 * C154226 + C101477 * C154406) * C154024 +
            ((C101530 + C101529) * C154226 + (C101528 + C101527) * C154406) *
                C154016) *
               C154465 -
           (((C97277 * C6264 - C97278 * C6258 - C97277 * C6265 +
              C154268 * C6276 + C97275 * C3449 - C97276 * C3443 -
              C97275 * C3450 + C97273 * C3455) *
                 C154226 +
             (C111017 + C111016) * C154406) *
                C82856 +
            ((C101873 + C101872) * C154226 + (C101871 + C101870) * C154406) *
                C154024 +
            ((C103718 + C103717) * C154226 + (C103716 + C103715) * C154406) *
                C154016) *
               C2630) *
              C154118) *
         C154047) /
        (p * q * std::sqrt(p + q));
    d2ee[237] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
              C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
                 C154406 +
             (C101527 + C101528) * C154226) *
                C154016 +
            ((C97340 + C97341) * C154406 + C101466 * C154226) * C154024 +
            C110422 * C82856) *
               C2114 -
           (C111605 * C82856 +
            (C102857 * C154226 + (C97906 + C97907) * C154406) * C154024 +
            ((C102898 + C102899) * C154226 +
             (C97277 * C602 - C97278 * C585 - C97277 * C603 + C154268 * C621 +
              C97275 * C600 - C97276 * C584 - C97275 * C601 + C97273 * C620) *
                 C154406) *
                C154016) *
               C154146) *
              C338 +
          ((((C102899 + C102898) * C154406 + (C102897 + C102896) * C154226) *
                C154016 +
            (C102874 * C154406 + C102875 * C154226) * C154024 +
            (C111992 * C154406 + (C102468 + C102469) * C154226) * C82856) *
               C154146 -
           (C111311 * C82856 +
            (C101476 * C154226 + C101477 * C154406) * C154024 +
            ((C101530 + C101529) * C154226 + (C101528 + C101527) * C154406) *
                C154016) *
               C2114) *
              C339 +
          (((C101539 * C154406 + (C101534 + C101533) * C154226) * C154016 +
            (C101467 * C154406 + C101541 * C154226) * C154024 +
            (C102165 * C154406 + (C101537 + C101538) * C154226) * C82856) *
               C2114 -
           (((C97277 * C4908 - C97278 * C4905 - C97277 * C4909 +
              C154268 * C4914 + C97275 * C4262 - C97276 * C4256 -
              C97275 * C4263 + C97273 * C4268) *
                 C154226 +
             (C102469 + C102468) * C154406) *
                C82856 +
            ((C102901 + C102900) * C154226 + C102856 * C154406) * C154024 +
            ((C104699 + C104698) * C154226 + C104685 * C154406) * C154016) *
               C154146) *
              C340) *
         C154047) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
              C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
                 C154406 +
             (C101527 + C101528) * C154226) *
                C154016 +
            ((C97340 + C97341) * C154406 + C101466 * C154226) * C154024 +
            C110422 * C82856) *
               C2114 -
           (C111605 * C82856 +
            (C102857 * C154226 + (C97906 + C97907) * C154406) * C154024 +
            ((C102898 + C102899) * C154226 +
             (C97277 * C602 - C97278 * C585 - C97277 * C603 + C154268 * C621 +
              C97275 * C600 - C97276 * C584 - C97275 * C601 + C97273 * C620) *
                 C154406) *
                C154016) *
               C154146) *
              C154066 * C1309 +
          ((((C97907 + C97906) * C154406 + C102874 * C154226) * C154016 +
            ((C97905 + C97904) * C154406 + C111992 * C154226) * C154024 +
            ((C97903 + C97902) * C154406 + (C98636 + C98637) * C154226) *
                C82856) *
               C154146 -
           (C110423 * C82856 +
            (C98109 * C154226 + (C97343 + C97342) * C154406) * C154024 +
            (C101477 * C154226 + (C97341 + C97340) * C154406) * C154016) *
               C2114) *
              C154066 * C1310 +
          ((C110422 * C154016 +
            (C97351 * C154406 + C111310 * C154226) * C154024 +
            ((C97347 + C97346) * C154406 + (C98124 + C98125) * C154226) *
                C82856) *
               C2114 -
           (((C97277 * C1546 - C97278 * C1541 - C97277 * C1547 +
              C154268 * C1556 + C97275 * C1143 - C97276 * C1133 -
              C97275 * C1144 + C97273 * C1151) *
                 C154226 +
             (C98337 + C98336) * C154406) *
                C82856 +
            ((C98637 + C98636) * C154226 + C98320 * C154406) * C154024 +
            C111605 * C154016) *
               C154146) *
              C154066 * C1311)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
             C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
                C154406 +
            (C101527 + C101528) * C154226) *
               C154016 +
           ((C97340 + C97341) * C154406 + C101466 * C154226) * C154024 +
           C110422 * C82856) *
              C2320 -
          (C111605 * C82856 +
           (C102857 * C154226 + (C97906 + C97907) * C154406) * C154024 +
           ((C102898 + C102899) * C154226 +
            (C97277 * C602 - C97278 * C585 - C97277 * C603 + C154268 * C621 +
             C97275 * C600 - C97276 * C584 - C97275 * C601 + C97273 * C620) *
                C154406) *
               C154016) *
              C2321 +
          (((C97275 * C602 - C97276 * C585 - C97275 * C603 + C97273 * C621 +
             C97277 * C2337 - C97278 * C2328 - C97277 * C2338 +
             C154268 * C2343) *
                C154406 +
            (C103715 + C103716) * C154226) *
               C154016 +
           ((C97908 + C97909) * C154406 + (C101870 + C101871) * C154226) *
               C154024 +
           ((C97910 + C97911) * C154406 + (C111016 + C111017) * C154226) *
               C82856) *
              C2322 -
          (((C97277 * C9278 - C97278 * C9275 - C97277 * C9279 +
             C154268 * C9284 + C97275 * C6266 - C97276 * C6259 -
             C97275 * C6267 + C97273 * C6277) *
                C154226 +
            (C97277 * C7781 - C97278 * C7775 - C97277 * C7782 +
             C154268 * C7787 + C97275 * C2333 - C97276 * C2326 -
             C97275 * C2334 + C97273 * C2341) *
                C154406) *
               C82856 +
           ((C97277 * C9280 - C97278 * C9276 - C97277 * C9281 +
             C154268 * C9285 + C97275 * C6270 - C97276 * C6261 -
             C97275 * C6271 + C97273 * C6279) *
                C154226 +
            (C97277 * C7779 - C97278 * C7774 - C97277 * C7780 +
             C154268 * C7786 + C97275 * C2335 - C97276 * C2327 -
             C97275 * C2336 + C97273 * C2342) *
                C154406) *
               C154024 +
           ((C97277 * C9282 - C97278 * C9277 - C97277 * C9283 +
             C154268 * C9286 + C97275 * C6274 - C97276 * C6263 -
             C97275 * C6275 + C97273 * C6281) *
                C154226 +
            (C97277 * C7777 - C97278 * C7773 - C97277 * C7778 +
             C154268 * C7785 + C97275 * C2337 - C97276 * C2328 -
             C97275 * C2338 + C97273 * C2343) *
                C154406) *
               C154016) *
              C2323) *
         C154066 * C154047) /
            (p * q * std::sqrt(p + q));
    d2ee[238] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
              C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
                 C154406 +
             (C101527 + C101528) * C154226) *
                C154016 +
            ((C97340 + C97341) * C154406 + C101466 * C154226) * C154024 +
            C110422 * C82856) *
               C154465 -
           (C111605 * C82856 +
            (C102857 * C154226 + (C97906 + C97907) * C154406) * C154024 +
            ((C102898 + C102899) * C154226 +
             (C97277 * C602 - C97278 * C585 - C97277 * C603 + C154268 * C621 +
              C97275 * C600 - C97276 * C584 - C97275 * C601 + C97273 * C620) *
                 C154406) *
                C154016) *
               C154466 +
           (((C97275 * C602 - C97276 * C585 - C97275 * C603 + C97273 * C621 +
              C97277 * C2337 - C97278 * C2328 - C97277 * C2338 +
              C154268 * C2343) *
                 C154406 +
             (C103715 + C103716) * C154226) *
                C154016 +
            ((C97908 + C97909) * C154406 + (C101870 + C101871) * C154226) *
                C154024 +
            ((C97910 + C97911) * C154406 + (C111016 + C111017) * C154226) *
                C82856) *
               C2630) *
              C154066 * C154384 +
          ((((C97907 + C97906) * C154406 + C102874 * C154226) * C154016 +
            ((C97905 + C97904) * C154406 + C111992 * C154226) * C154024 +
            ((C97903 + C97902) * C154406 + (C98636 + C98637) * C154226) *
                C82856) *
               C154466 -
           (C110423 * C82856 +
            (C98109 * C154226 + (C97343 + C97342) * C154406) * C154024 +
            (C101477 * C154226 + (C97341 + C97340) * C154406) * C154016) *
               C154465 -
           (((C97277 * C8648 - C97278 * C8647 - C97277 * C8649 +
              C154268 * C8650 + C97275 * C1548 - C97276 * C1542 -
              C97275 * C1549 + C97273 * C1557) *
                 C154226 +
             (C97913 + C97912) * C154406) *
                C82856 +
            ((C111017 + C111016) * C154226 + (C97911 + C97910) * C154406) *
                C154024 +
            ((C101871 + C101870) * C154226 + (C97909 + C97908) * C154406) *
                C154016) *
               C2630) *
              C154066 * C154053)) /
        (p * q * std::sqrt(p + q));
    d2ee[239] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
              C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
                 C154406 +
             (C101527 + C101528) * C154226) *
                C154016 +
            ((C97340 + C97341) * C154406 + C101466 * C154226) * C154024 +
            C110422 * C82856) *
               C2114 -
           (C111605 * C82856 +
            (C102857 * C154226 + (C97906 + C97907) * C154406) * C154024 +
            ((C102898 + C102899) * C154226 +
             (C97277 * C602 - C97278 * C585 - C97277 * C603 + C154268 * C621 +
              C97275 * C600 - C97276 * C584 - C97275 * C601 + C97273 * C620) *
                 C154406) *
                C154016) *
               C154146) *
              C154066 * C1309 +
          ((((C97907 + C97906) * C154406 + C102874 * C154226) * C154016 +
            ((C97905 + C97904) * C154406 + C111992 * C154226) * C154024 +
            ((C97903 + C97902) * C154406 + (C98636 + C98637) * C154226) *
                C82856) *
               C154146 -
           (C110423 * C82856 +
            (C98109 * C154226 + (C97343 + C97342) * C154406) * C154024 +
            (C101477 * C154226 + (C97341 + C97340) * C154406) * C154016) *
               C2114) *
              C154066 * C1310 +
          ((C110422 * C154016 +
            (C97351 * C154406 + C111310 * C154226) * C154024 +
            ((C97347 + C97346) * C154406 + (C98124 + C98125) * C154226) *
                C82856) *
               C2114 -
           (((C97277 * C1546 - C97278 * C1541 - C97277 * C1547 +
              C154268 * C1556 + C97275 * C1143 - C97276 * C1133 -
              C97275 * C1144 + C97273 * C1151) *
                 C154226 +
             (C98337 + C98336) * C154406) *
                C82856 +
            ((C98637 + C98636) * C154226 + C98320 * C154406) * C154024 +
            C111605 * C154016) *
               C154146) *
              C154066 * C1311)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
              C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
                 C154406 +
             (C101527 + C101528) * C154226) *
                C154016 +
            ((C97340 + C97341) * C154406 + C101466 * C154226) * C154024 +
            C110422 * C82856) *
               C2114 -
           (C111605 * C82856 +
            (C102857 * C154226 + (C97906 + C97907) * C154406) * C154024 +
            ((C102898 + C102899) * C154226 +
             (C97277 * C602 - C97278 * C585 - C97277 * C603 + C154268 * C621 +
              C97275 * C600 - C97276 * C584 - C97275 * C601 + C97273 * C620) *
                 C154406) *
                C154016) *
               C154146) *
              C338 +
          ((((C102899 + C102898) * C154406 + (C102897 + C102896) * C154226) *
                C154016 +
            (C102874 * C154406 + C102875 * C154226) * C154024 +
            (C111992 * C154406 + (C102468 + C102469) * C154226) * C82856) *
               C154146 -
           (C111311 * C82856 +
            (C101476 * C154226 + C101477 * C154406) * C154024 +
            ((C101530 + C101529) * C154226 + (C101528 + C101527) * C154406) *
                C154016) *
               C2114) *
              C339 +
          (((C101539 * C154406 + (C101534 + C101533) * C154226) * C154016 +
            (C101467 * C154406 + C101541 * C154226) * C154024 +
            (C102165 * C154406 + (C101537 + C101538) * C154226) * C82856) *
               C2114 -
           (((C97277 * C4908 - C97278 * C4905 - C97277 * C4909 +
              C154268 * C4914 + C97275 * C4262 - C97276 * C4256 -
              C97275 * C4263 + C97273 * C4268) *
                 C154226 +
             (C102469 + C102468) * C154406) *
                C82856 +
            ((C102901 + C102900) * C154226 + C102856 * C154406) * C154024 +
            ((C104699 + C104698) * C154226 + C104685 * C154406) * C154016) *
               C154146) *
              C340) *
         C154047) /
            (p * q * std::sqrt(p + q));
    d2ee[240] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C152148 * C144 - C152187 * C136 - C152148 * C145 +
              C154264 * C160 + C152145 * C600 - C152180 * C584 -
              C152145 * C601 + C154271 * C620 + C152193 * C602 -
              C115626 * C585 - C152193 * C603 + C115620 * C621) *
                 C154406 +
             (C120300 + C120301 + C120302) * C154226) *
                C74048 +
            ((C115700 + C115701 + C115702) * C154406 + C120281 * C154226) *
                C154021) *
               C154082 * C154392 -
           ((C120282 * C154226 + C120283 * C154406) * C154021 +
            ((C120303 + C120304 + C120305) * C154226 +
             (C120302 + C120301 + C120300) * C154406) *
                C74048) *
               C154082 * C154118) *
              C154461 +
          (((C120281 * C154406 + C120287 * C154226) * C74048 +
            (C120911 * C154406 + (C116017 + C116018 + C116019) * C154226) *
                C154021) *
               C154082 * C154118 -
           ((C116553 * C154226 + (C115705 + C115704 + C115703) * C154406) *
                C154021 +
            (C120283 * C154226 + (C115702 + C115701 + C115700) * C154406) *
                C74048) *
               C154082 * C154392) *
              C154462 +
          (((C115714 * C154406 + C120911 * C154226) * C74048 +
            ((C115708 + C115707 + C115706) * C154406 +
             (C116561 + C116562 + C116563) * C154226) *
                C154021) *
               C154082 * C154392 -
           (((C152193 * C3451 - C115626 * C3444 - C152193 * C3452 +
              C115620 * C3456 + C152145 * C1979 - C152180 * C1973 -
              C152145 * C1980 + C154271 * C1988 + C152148 * C371 -
              C152187 * C351 - C152148 * C372 + C154264 * C387) *
                 C154226 +
             (C116563 + C116562 + C116561) * C154406) *
                C154021 +
            ((C116019 + C116018 + C116017) * C154226 + C116553 * C154406) *
                C74048) *
               C154082 * C154118) *
              C818)) /
        (p * q * std::sqrt(p + q));
    d2ee[241] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C152148 * C144 - C152187 * C136 - C152148 * C145 +
               C154264 * C160 + C152145 * C600 - C152180 * C584 -
               C152145 * C601 + C154271 * C620 + C152193 * C602 -
               C115626 * C585 - C152193 * C603 + C115620 * C621) *
                  C154406 +
              (C120300 + C120301 + C120302) * C154226) *
                 C74048 +
             ((C115700 + C115701 + C115702) * C154406 + C120281 * C154226) *
                 C154021) *
                C154393 -
            ((C121614 * C154226 + (C116313 + C116314 + C116315) * C154406) *
                 C154021 +
             ((C121628 + C121629 + C121630) * C154226 +
              (C152193 * C2337 - C115626 * C2328 - C152193 * C2338 +
               C115620 * C2343 + C152145 * C602 - C152180 * C585 -
               C152145 * C603 + C154271 * C621 + C152148 * C600 -
               C152187 * C584 - C152148 * C601 + C154264 * C620) *
                  C154406) *
                 C74048) *
                C154146) *
               C154392 +
           ((((C121630 + C121629 + C121628) * C154406 +
              (C152148 * C1985 - C152187 * C1976 - C152148 * C1986 +
               C154264 * C1991 + C152145 * C3445 - C152180 * C3441 -
               C152145 * C3446 + C154271 * C3453 + C152193 * C6272 -
               C115626 * C6262 - C152193 * C6273 + C115620 * C6280) *
                  C154226) *
                 C74048 +
             (C121618 * C154406 + (C121631 + C121632 + C121633) * C154226) *
                 C154021) *
                C154146 -
            ((C120282 * C154226 + C120283 * C154406) * C154021 +
             ((C120303 + C120304 + C120305) * C154226 +
              (C120302 + C120301 + C120300) * C154406) *
                 C74048) *
                C154393) *
               C154118) *
              C341 +
          (((((C116315 + C116314 + C116313) * C154406 + C121618 * C154226) *
                 C74048 +
             ((C116312 + C116311 + C116310) * C154406 +
              (C117135 + C117136 + C117137) * C154226) *
                 C154021) *
                C154146 -
            ((C116553 * C154226 + (C115705 + C115704 + C115703) * C154406) *
                 C154021 +
             (C120283 * C154226 + (C115702 + C115701 + C115700) * C154406) *
                 C74048) *
                C154393) *
               C154392 +
           (((C120281 * C154406 + C120287 * C154226) * C74048 +
             (C120911 * C154406 + (C116017 + C116018 + C116019) * C154226) *
                 C154021) *
                C154393 -
            (((C152193 * C6264 - C115626 * C6258 - C152193 * C6265 +
               C115620 * C6276 + C152145 * C3449 - C152180 * C3443 -
               C152145 * C3450 + C154271 * C3455 + C152148 * C1981 -
               C152187 * C1974 - C152148 * C1982 + C154264 * C1989) *
                  C154226 +
              (C117137 + C117136 + C117135) * C154406) *
                 C154021 +
             ((C121633 + C121632 + C121631) * C154226 + C121614 * C154406) *
                 C74048) *
                C154146) *
               C154118) *
              C154053)) /
        (p * q * std::sqrt(p + q));
    d2ee[242] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C152148 * C144 - C152187 * C136 - C152148 * C145 +
              C154264 * C160 + C152145 * C600 - C152180 * C584 -
              C152145 * C601 + C154271 * C620 + C152193 * C602 -
              C115626 * C585 - C152193 * C603 + C115620 * C621) *
                 C154406 +
             (C120300 + C120301 + C120302) * C154226) *
                C74048 +
            ((C115700 + C115701 + C115702) * C154406 + C120281 * C154226) *
                C154021) *
               C154082 * C338 -
           ((C120282 * C154226 + C120283 * C154406) * C154021 +
            ((C120303 + C120304 + C120305) * C154226 +
             (C120302 + C120301 + C120300) * C154406) *
                C74048) *
               C154082 * C339 +
           (((C120305 + C120304 + C120303) * C154406 +
             (C152148 * C1412 - C152187 * C1403 - C152148 * C1413 +
              C154264 * C1418 + C152145 * C4258 - C152180 * C4254 -
              C152145 * C4259 + C154271 * C4266 + C152193 * C4912 -
              C115626 * C4907 - C152193 * C4913 + C115620 * C4916) *
                 C154226) *
                C74048 +
            (C120287 * C154406 + (C120306 + C120307 + C120308) * C154226) *
                C154021) *
               C154082 * C340) *
              C341 +
          (((C120281 * C154406 + C120287 * C154226) * C74048 +
            ((C116010 + C116009 + C116008) * C154406 +
             (C116017 + C116018 + C116019) * C154226) *
                C154021) *
               C154082 * C339 -
           ((C116553 * C154226 + (C115705 + C115704 + C115703) * C154406) *
                C154021 +
            (C120283 * C154226 + (C115702 + C115701 + C115700) * C154406) *
                C74048) *
               C154082 * C338 -
           (((C152193 * C4908 - C115626 * C4905 - C152193 * C4909 +
              C115620 * C4914 + C152145 * C4262 - C152180 * C4256 -
              C152145 * C4263 + C154271 * C4268 + C152148 * C1408 -
              C152187 * C1401 - C152148 * C1409 + C154264 * C1416) *
                 C154226 +
             (C116019 + C116018 + C116017) * C154406) *
                C154021 +
            ((C120308 + C120307 + C120306) * C154226 + C120282 * C154406) *
                C74048) *
               C154082 * C340) *
              C154053)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C152148 * C144 - C152187 * C136 - C152148 * C145 + C154264 * C160 +
             C152145 * C600 - C152180 * C584 - C152145 * C601 + C154271 * C620 +
             C152193 * C602 - C115626 * C585 - C152193 * C603 +
             C115620 * C621) *
                C154406 +
            (C152148 * C363 - C152187 * C347 - C152148 * C364 + C154264 * C383 +
             C152145 * C1135 - C152180 * C1129 - C152145 * C1136 +
             C154271 * C1147 + C152193 * C1554 - C115626 * C1545 -
             C152193 * C1555 + C115620 * C1560) *
                C154226) *
               C74048 +
           ((C115700 + C115701 + C115702) * C154406 +
            (C116013 + C116012 + C116011) * C154226) *
               C154021) *
              C154082 * C154066 * C130 -
          ((C116553 * C154226 + (C115705 + C115704 + C115703) * C154406) *
               C154021 +
           ((C116011 + C116012 + C116013) * C154226 +
            (C115702 + C115701 + C115700) * C154406) *
               C74048) *
              C154082 * C154066 * C131 +
          ((C115714 * C154406 + (C116010 + C116009 + C116008) * C154226) *
               C74048 +
           ((C115708 + C115707 + C115706) * C154406 +
            (C116561 + C116562 + C116563) * C154226) *
               C154021) *
              C154082 * C154066 * C132 -
          (((C152193 * C1546 - C115626 * C1541 - C152193 * C1547 +
             C115620 * C1556 + C152145 * C1143 - C152180 * C1133 -
             C152145 * C1144 + C154271 * C1151 + C152148 * C355 -
             C152187 * C343 - C152148 * C356 + C154264 * C379) *
                C154226 +
            (C115711 + C115710 + C115709) * C154406) *
               C154021 +
           ((C116563 + C116562 + C116561) * C154226 + C115715 * C154406) *
               C74048) *
              C154082 * C154066 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C152148 * C144 - C152187 * C136 - C152148 * C145 +
              C154264 * C160 + C152145 * C600 - C152180 * C584 -
              C152145 * C601 + C154271 * C620 + C152193 * C602 -
              C115626 * C585 - C152193 * C603 + C115620 * C621) *
                 C154406 +
             (C120300 + C120301 + C120302) * C154226) *
                C74048 +
            ((C115700 + C115701 + C115702) * C154406 + C120281 * C154226) *
                C154021) *
               C577 -
           (((C117134 + C117133 + C117132) * C154226 +
             (C116313 + C116314 + C116315) * C154406) *
                C154021 +
            ((C152193 * C6274 - C115626 * C6263 - C152193 * C6275 +
              C115620 * C6281 + C152145 * C1554 - C152180 * C1545 -
              C152145 * C1555 + C154271 * C1560 + C152148 * C1135 -
              C152187 * C1129 - C152148 * C1136 + C154264 * C1147) *
                 C154226 +
             (C152193 * C2337 - C115626 * C2328 - C152193 * C2338 +
              C115620 * C2343 + C152145 * C602 - C152180 * C585 -
              C152145 * C603 + C154271 * C621 + C152148 * C600 -
              C152187 * C584 - C152148 * C601 + C154264 * C620) *
                 C154406) *
                C74048) *
               C578 +
           (((C152148 * C602 - C152187 * C585 - C152148 * C603 +
              C154264 * C621 + C152145 * C2337 - C152180 * C2328 -
              C152145 * C2338 + C154271 * C2343 + C152193 * C7777 -
              C115626 * C7773 - C152193 * C7778 + C115620 * C7785) *
                 C154406 +
             (C152148 * C1554 - C152187 * C1545 - C152148 * C1555 +
              C154264 * C1560 + C152145 * C6274 - C152180 * C6263 -
              C152145 * C6275 + C154271 * C6281 + C152193 * C9282 -
              C115626 * C9277 - C152193 * C9283 + C115620 * C9286) *
                 C154226) *
                C74048 +
            ((C116316 + C116317 + C116318) * C154406 +
             (C120617 + C120618 + C120619) * C154226) *
                C154021) *
               C579) *
              C154066 * C341 +
          ((((C116315 + C116314 + C116313) * C154406 +
             (C117132 + C117133 + C117134) * C154226) *
                C74048 +
            ((C116312 + C116311 + C116310) * C154406 +
             (C117135 + C117136 + C117137) * C154226) *
                C154021) *
               C578 -
           ((C116553 * C154226 + (C115705 + C115704 + C115703) * C154406) *
                C154021 +
            (C120283 * C154226 + (C115702 + C115701 + C115700) * C154406) *
                C74048) *
               C577 -
           (((C152193 * C9278 - C115626 * C9275 - C152193 * C9279 +
              C115620 * C9284 + C152145 * C6266 - C152180 * C6259 -
              C152145 * C6267 + C154271 * C6277 + C152148 * C1550 -
              C152187 * C1543 - C152148 * C1551 + C154264 * C1558) *
                 C154226 +
             (C116321 + C116320 + C116319) * C154406) *
                C154021 +
            ((C120619 + C120618 + C120617) * C154226 +
             (C116318 + C116317 + C116316) * C154406) *
                C74048) *
               C579) *
              C154066 * C154053)) /
            (p * q * std::sqrt(p + q));
    d2ee[243] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C152148 * C144 - C152187 * C136 - C152148 * C145 +
              C154264 * C160 + C152145 * C600 - C152180 * C584 -
              C152145 * C601 + C154271 * C620 + C152193 * C602 -
              C115626 * C585 - C152193 * C603 + C115620 * C621) *
                 C154406 +
             (C120300 + C120301 + C120302) * C154226) *
                C74048 +
            ((C115700 + C115701 + C115702) * C154406 + C120281 * C154226) *
                C154021) *
               C154393 -
           (((C117134 + C117133 + C117132) * C154226 +
             (C116313 + C116314 + C116315) * C154406) *
                C154021 +
            ((C152193 * C6274 - C115626 * C6263 - C152193 * C6275 +
              C115620 * C6281 + C152145 * C1554 - C152180 * C1545 -
              C152145 * C1555 + C154271 * C1560 + C152148 * C1135 -
              C152187 * C1129 - C152148 * C1136 + C154264 * C1147) *
                 C154226 +
             (C152193 * C2337 - C115626 * C2328 - C152193 * C2338 +
              C115620 * C2343 + C152145 * C602 - C152180 * C585 -
              C152145 * C603 + C154271 * C621 + C152148 * C600 -
              C152187 * C584 - C152148 * C601 + C154264 * C620) *
                 C154406) *
                C74048) *
               C154146) *
              C154066 * C154461 +
          ((((C116315 + C116314 + C116313) * C154406 +
             (C117132 + C117133 + C117134) * C154226) *
                C74048 +
            ((C116312 + C116311 + C116310) * C154406 +
             (C117135 + C117136 + C117137) * C154226) *
                C154021) *
               C154146 -
           ((C116553 * C154226 + (C115705 + C115704 + C115703) * C154406) *
                C154021 +
            (C120283 * C154226 + (C115702 + C115701 + C115700) * C154406) *
                C74048) *
               C154393) *
              C154066 * C154462 +
          (((C115714 * C154406 + C120911 * C154226) * C74048 +
            ((C115708 + C115707 + C115706) * C154406 +
             (C116561 + C116562 + C116563) * C154226) *
                C154021) *
               C154393 -
           (((C152193 * C8648 - C115626 * C8647 - C152193 * C8649 +
              C115620 * C8650 + C152145 * C1548 - C152180 * C1542 -
              C152145 * C1549 + C154271 * C1557 + C152148 * C1141 -
              C152187 * C1132 - C152148 * C1142 + C154264 * C1150) *
                 C154226 +
             (C116805 + C116804 + C116803) * C154406) *
                C154021 +
            ((C117137 + C117136 + C117135) * C154226 + C116795 * C154406) *
                C74048) *
               C154146) *
              C154066 * C818)) /
        (p * q * std::sqrt(p + q));
    d2ee[244] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C152148 * C144 - C152187 * C136 - C152148 * C145 + C154264 * C160 +
             C152145 * C600 - C152180 * C584 - C152145 * C601 + C154271 * C620 +
             C152193 * C602 - C115626 * C585 - C152193 * C603 +
             C115620 * C621) *
                C154406 +
            (C152148 * C363 - C152187 * C347 - C152148 * C364 + C154264 * C383 +
             C152145 * C1135 - C152180 * C1129 - C152145 * C1136 +
             C154271 * C1147 + C152193 * C1554 - C115626 * C1545 -
             C152193 * C1555 + C115620 * C1560) *
                C154226) *
               C74048 +
           ((C115700 + C115701 + C115702) * C154406 +
            (C116013 + C116012 + C116011) * C154226) *
               C154021) *
              C154082 * C154066 * C130 -
          ((C116553 * C154226 + (C115705 + C115704 + C115703) * C154406) *
               C154021 +
           ((C116011 + C116012 + C116013) * C154226 +
            (C115702 + C115701 + C115700) * C154406) *
               C74048) *
              C154082 * C154066 * C131 +
          ((C115714 * C154406 + (C116010 + C116009 + C116008) * C154226) *
               C74048 +
           ((C115708 + C115707 + C115706) * C154406 +
            (C116561 + C116562 + C116563) * C154226) *
               C154021) *
              C154082 * C154066 * C132 -
          (((C152193 * C1546 - C115626 * C1541 - C152193 * C1547 +
             C115620 * C1556 + C152145 * C1143 - C152180 * C1133 -
             C152145 * C1144 + C154271 * C1151 + C152148 * C355 -
             C152187 * C343 - C152148 * C356 + C154264 * C379) *
                C154226 +
            (C115711 + C115710 + C115709) * C154406) *
               C154021 +
           ((C116563 + C116562 + C116561) * C154226 + C115715 * C154406) *
               C74048) *
              C154082 * C154066 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C152148 * C144 - C152187 * C136 - C152148 * C145 +
              C154264 * C160 + C152145 * C600 - C152180 * C584 -
              C152145 * C601 + C154271 * C620 + C152193 * C602 -
              C115626 * C585 - C152193 * C603 + C115620 * C621) *
                 C154406 +
             (C120300 + C120301 + C120302) * C154226) *
                C74048 +
            ((C115700 + C115701 + C115702) * C154406 + C120281 * C154226) *
                C154021) *
               C154082 * C338 -
           ((C120282 * C154226 + C120283 * C154406) * C154021 +
            ((C120303 + C120304 + C120305) * C154226 +
             (C120302 + C120301 + C120300) * C154406) *
                C74048) *
               C154082 * C339 +
           (((C120305 + C120304 + C120303) * C154406 +
             (C152148 * C1412 - C152187 * C1403 - C152148 * C1413 +
              C154264 * C1418 + C152145 * C4258 - C152180 * C4254 -
              C152145 * C4259 + C154271 * C4266 + C152193 * C4912 -
              C115626 * C4907 - C152193 * C4913 + C115620 * C4916) *
                 C154226) *
                C74048 +
            (C120287 * C154406 + (C120306 + C120307 + C120308) * C154226) *
                C154021) *
               C154082 * C340) *
              C341 +
          (((C120281 * C154406 + C120287 * C154226) * C74048 +
            ((C116010 + C116009 + C116008) * C154406 +
             (C116017 + C116018 + C116019) * C154226) *
                C154021) *
               C154082 * C339 -
           ((C116553 * C154226 + (C115705 + C115704 + C115703) * C154406) *
                C154021 +
            (C120283 * C154226 + (C115702 + C115701 + C115700) * C154406) *
                C74048) *
               C154082 * C338 -
           (((C152193 * C4908 - C115626 * C4905 - C152193 * C4909 +
              C115620 * C4914 + C152145 * C4262 - C152180 * C4256 -
              C152145 * C4263 + C154271 * C4268 + C152148 * C1408 -
              C152187 * C1401 - C152148 * C1409 + C154264 * C1416) *
                 C154226 +
             (C116019 + C116018 + C116017) * C154406) *
                C154021 +
            ((C120308 + C120307 + C120306) * C154226 + C120282 * C154406) *
                C74048) *
               C154082 * C340) *
              C154053)) /
            (p * q * std::sqrt(p + q));
    d2ee[245] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C152148 * C144 - C152187 * C136 - C152148 * C145 +
              C154264 * C160 + C152145 * C600 - C152180 * C584 -
              C152145 * C601 + C154271 * C620 + C152193 * C602 -
              C115626 * C585 - C152193 * C603 + C115620 * C621) *
                 C154406 +
             (C120300 + C120301 + C120302) * C154226) *
                C74048 +
            ((C115700 + C115701 + C115702) * C154406 + C120281 * C154226) *
                C154021) *
               C154082 * C154463 -
           ((C120282 * C154226 + C120283 * C154406) * C154021 +
            ((C120303 + C120304 + C120305) * C154226 +
             (C120302 + C120301 + C120300) * C154406) *
                C74048) *
               C154082 * C154464 +
           (((C120305 + C120304 + C120303) * C154406 +
             (C122136 + C122137 + C122138) * C154226) *
                C74048 +
            (C120287 * C154406 + (C120306 + C120307 + C120308) * C154226) *
                C154021) *
               C154082 * C1685) *
              C154384 +
          (((C120281 * C154406 + C120287 * C154226) * C74048 +
            (C120911 * C154406 + (C116017 + C116018 + C116019) * C154226) *
                C154021) *
               C154082 * C154464 -
           ((C116553 * C154226 + (C115705 + C115704 + C115703) * C154406) *
                C154021 +
            (C120283 * C154226 + (C115702 + C115701 + C115700) * C154406) *
                C74048) *
               C154082 * C154463 -
           (((C152193 * C4908 - C115626 * C4905 - C152193 * C4909 +
              C115620 * C4914 + C152145 * C4262 - C152180 * C4256 -
              C152145 * C4263 + C154271 * C4268 + C152148 * C1408 -
              C152187 * C1401 - C152148 * C1409 + C154264 * C1416) *
                 C154226 +
             (C116019 + C116018 + C116017) * C154406) *
                C154021 +
            ((C120308 + C120307 + C120306) * C154226 + C120282 * C154406) *
                C74048) *
               C154082 * C1685) *
              C154053)) /
        (p * q * std::sqrt(p + q));
    d2ee[246] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C152148 * C144 - C152187 * C136 - C152148 * C145 +
              C154264 * C160 + C152145 * C600 - C152180 * C584 -
              C152145 * C601 + C154271 * C620 + C152193 * C602 -
              C115626 * C585 - C152193 * C603 + C115620 * C621) *
                 C154406 +
             (C120300 + C120301 + C120302) * C154226) *
                C74048 +
            ((C115700 + C115701 + C115702) * C154406 + C120281 * C154226) *
                C154021) *
               C154393 -
           ((C121614 * C154226 + (C116313 + C116314 + C116315) * C154406) *
                C154021 +
            ((C121628 + C121629 + C121630) * C154226 +
             (C152193 * C2337 - C115626 * C2328 - C152193 * C2338 +
              C115620 * C2343 + C152145 * C602 - C152180 * C585 -
              C152145 * C603 + C154271 * C621 + C152148 * C600 -
              C152187 * C584 - C152148 * C601 + C154264 * C620) *
                 C154406) *
                C74048) *
               C154146) *
              C154463 +
          ((((C121630 + C121629 + C121628) * C154406 +
             (C123434 + C123435 + C123436) * C154226) *
                C74048 +
            (C121618 * C154406 + (C121631 + C121632 + C121633) * C154226) *
                C154021) *
               C154146 -
           ((C120282 * C154226 + C120283 * C154406) * C154021 +
            ((C120303 + C120304 + C120305) * C154226 +
             (C120302 + C120301 + C120300) * C154406) *
                C74048) *
               C154393) *
              C154464 +
          ((((C120305 + C120304 + C120303) * C154406 +
             (C122136 + C122137 + C122138) * C154226) *
                C74048 +
            (C120287 * C154406 + (C120306 + C120307 + C120308) * C154226) *
                C154021) *
               C154393 -
           (((C152193 * C31817 - C115626 * C31816 - C152193 * C31818 +
              C115620 * C31819 + C152145 * C4910 - C152180 * C4906 -
              C152145 * C4911 + C154271 * C4915 + C152148 * C4260 -
              C152187 * C4255 - C152148 * C4261 + C154264 * C4267) *
                 C154226 +
             (C121633 + C121632 + C121631) * C154406) *
                C154021 +
            ((C152193 * C30002 - C115626 * C29999 - C152193 * C30003 +
              C115620 * C30005 + C152145 * C4912 - C152180 * C4907 -
              C152145 * C4913 + C154271 * C4916 + C152148 * C4258 -
              C152187 * C4254 - C152148 * C4259 + C154264 * C4266) *
                 C154226 +
             (C123436 + C123435 + C123434) * C154406) *
                C74048) *
               C154146) *
              C1685) *
         C154047) /
        (p * q * std::sqrt(p + q));
    d2ee[247] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C152148 * C144 - C152187 * C136 - C152148 * C145 + C154264 * C160 +
             C152145 * C600 - C152180 * C584 - C152145 * C601 + C154271 * C620 +
             C152193 * C602 - C115626 * C585 - C152193 * C603 +
             C115620 * C621) *
                C154406 +
            (C120300 + C120301 + C120302) * C154226) *
               C74048 +
           ((C115700 + C115701 + C115702) * C154406 + C120281 * C154226) *
               C154021) *
              C154082 * C1394 -
          ((C120282 * C154226 + C120283 * C154406) * C154021 +
           ((C120303 + C120304 + C120305) * C154226 +
            (C120302 + C120301 + C120300) * C154406) *
               C74048) *
              C154082 * C1395 +
          (((C120305 + C120304 + C120303) * C154406 +
            (C122136 + C122137 + C122138) * C154226) *
               C74048 +
           (C120287 * C154406 + (C120306 + C120307 + C120308) * C154226) *
               C154021) *
              C154082 * C1396 -
          (((C152193 * C28468 - C115626 * C28465 - C152193 * C28469 +
             C115620 * C28471 + C152145 * C5662 - C152180 * C5658 -
             C152145 * C5663 + C154271 * C5667 + C152148 * C3145 -
             C152187 * C3140 - C152148 * C3146 + C154264 * C3152) *
                C154226 +
            (C120308 + C120307 + C120306) * C154406) *
               C154021 +
           ((C152193 * C28466 - C115626 * C28464 - C152193 * C28467 +
             C115620 * C28470 + C152145 * C5664 - C152180 * C5659 -
             C152145 * C5665 + C154271 * C5668 + C152148 * C3143 -
             C152187 * C3139 - C152148 * C3144 + C154264 * C3151) *
                C154226 +
            (C122138 + C122137 + C122136) * C154406) *
               C74048) *
              C154082 * C1397) *
         C154047) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C152148 * C144 - C152187 * C136 - C152148 * C145 +
              C154264 * C160 + C152145 * C600 - C152180 * C584 -
              C152145 * C601 + C154271 * C620 + C152193 * C602 -
              C115626 * C585 - C152193 * C603 + C115620 * C621) *
                 C154406 +
             (C120300 + C120301 + C120302) * C154226) *
                C74048 +
            ((C115700 + C115701 + C115702) * C154406 + C120281 * C154226) *
                C154021) *
               C154082 * C1307 -
           ((C120282 * C154226 + C120283 * C154406) * C154021 +
            ((C120303 + C120304 + C120305) * C154226 +
             (C120302 + C120301 + C120300) * C154406) *
                C74048) *
               C154082 * C154118) *
              C1309 +
          (((C120281 * C154406 + C120287 * C154226) * C74048 +
            (C120911 * C154406 + (C116017 + C116018 + C116019) * C154226) *
                C154021) *
               C154082 * C154118 -
           ((C116553 * C154226 + (C115705 + C115704 + C115703) * C154406) *
                C154021 +
            (C120283 * C154226 + (C115702 + C115701 + C115700) * C154406) *
                C74048) *
               C154082 * C1307) *
              C1310 +
          (((C115714 * C154406 + C120911 * C154226) * C74048 +
            ((C115708 + C115707 + C115706) * C154406 +
             (C116561 + C116562 + C116563) * C154226) *
                C154021) *
               C154082 * C1307 -
           (((C152193 * C3451 - C115626 * C3444 - C152193 * C3452 +
              C115620 * C3456 + C152145 * C1979 - C152180 * C1973 -
              C152145 * C1980 + C154271 * C1988 + C152148 * C371 -
              C152187 * C351 - C152148 * C372 + C154264 * C387) *
                 C154226 +
             (C116563 + C116562 + C116561) * C154406) *
                C154021 +
            ((C116019 + C116018 + C116017) * C154226 + C116553 * C154406) *
                C74048) *
               C154082 * C154118) *
              C1311)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C152148 * C144 - C152187 * C136 - C152148 * C145 +
              C154264 * C160 + C152145 * C600 - C152180 * C584 -
              C152145 * C601 + C154271 * C620 + C152193 * C602 -
              C115626 * C585 - C152193 * C603 + C115620 * C621) *
                 C154406 +
             (C120300 + C120301 + C120302) * C154226) *
                C74048 +
            ((C115700 + C115701 + C115702) * C154406 + C120281 * C154226) *
                C154021) *
               C577 -
           ((C121614 * C154226 + (C116313 + C116314 + C116315) * C154406) *
                C154021 +
            ((C121628 + C121629 + C121630) * C154226 +
             (C152193 * C2337 - C115626 * C2328 - C152193 * C2338 +
              C115620 * C2343 + C152145 * C602 - C152180 * C585 -
              C152145 * C603 + C154271 * C621 + C152148 * C600 -
              C152187 * C584 - C152148 * C601 + C154264 * C620) *
                 C154406) *
                C74048) *
               C578 +
           (((C152148 * C602 - C152187 * C585 - C152148 * C603 +
              C154264 * C621 + C152145 * C2337 - C152180 * C2328 -
              C152145 * C2338 + C154271 * C2343 + C152193 * C7777 -
              C115626 * C7773 - C152193 * C7778 + C115620 * C7785) *
                 C154406 +
             (C122447 + C122448 + C122449) * C154226) *
                C74048 +
            ((C116316 + C116317 + C116318) * C154406 +
             (C120617 + C120618 + C120619) * C154226) *
                C154021) *
               C579) *
              C1307 +
          ((((C121630 + C121629 + C121628) * C154406 +
             (C152148 * C1985 - C152187 * C1976 - C152148 * C1986 +
              C154264 * C1991 + C152145 * C3445 - C152180 * C3441 -
              C152145 * C3446 + C154271 * C3453 + C152193 * C6272 -
              C115626 * C6262 - C152193 * C6273 + C115620 * C6280) *
                 C154226) *
                C74048 +
            (C121618 * C154406 + (C121631 + C121632 + C121633) * C154226) *
                C154021) *
               C578 -
           ((C120282 * C154226 + C120283 * C154406) * C154021 +
            ((C120303 + C120304 + C120305) * C154226 +
             (C120302 + C120301 + C120300) * C154406) *
                C74048) *
               C577 -
           (((C152193 * C31086 - C115626 * C31083 - C152193 * C31087 +
              C115620 * C31089 + C152145 * C6268 - C152180 * C6260 -
              C152145 * C6269 + C154271 * C6278 + C152148 * C3447 -
              C152187 * C3442 - C152148 * C3448 + C154264 * C3454) *
                 C154226 +
             (C120619 + C120618 + C120617) * C154406) *
                C154021 +
            ((C152193 * C31084 - C115626 * C31082 - C152193 * C31085 +
              C115620 * C31088 + C152145 * C6272 - C152180 * C6262 -
              C152145 * C6273 + C154271 * C6280 + C152148 * C3445 -
              C152187 * C3441 - C152148 * C3446 + C154264 * C3453) *
                 C154226 +
             (C122449 + C122448 + C122447) * C154406) *
                C74048) *
               C579) *
              C154118) *
         C154047) /
            (p * q * std::sqrt(p + q));
    d2ee[248] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C152148 * C144 - C152187 * C136 - C152148 * C145 +
               C154264 * C160 + C152145 * C600 - C152180 * C584 -
               C152145 * C601 + C154271 * C620 + C152193 * C602 -
               C115626 * C585 - C152193 * C603 + C115620 * C621) *
                  C154406 +
              (C120300 + C120301 + C120302) * C154226) *
                 C74048 +
             ((C115700 + C115701 + C115702) * C154406 + C120281 * C154226) *
                 C154021) *
                C154393 -
            ((C121614 * C154226 + (C116313 + C116314 + C116315) * C154406) *
                 C154021 +
             ((C121628 + C121629 + C121630) * C154226 +
              (C152193 * C2337 - C115626 * C2328 - C152193 * C2338 +
               C115620 * C2343 + C152145 * C602 - C152180 * C585 -
               C152145 * C603 + C154271 * C621 + C152148 * C600 -
               C152187 * C584 - C152148 * C601 + C154264 * C620) *
                  C154406) *
                 C74048) *
                C154146) *
               C1307 +
           ((((C121630 + C121629 + C121628) * C154406 +
              (C152148 * C1985 - C152187 * C1976 - C152148 * C1986 +
               C154264 * C1991 + C152145 * C3445 - C152180 * C3441 -
               C152145 * C3446 + C154271 * C3453 + C152193 * C6272 -
               C115626 * C6262 - C152193 * C6273 + C115620 * C6280) *
                  C154226) *
                 C74048 +
             (C121618 * C154406 + (C121631 + C121632 + C121633) * C154226) *
                 C154021) *
                C154146 -
            ((C120282 * C154226 + C120283 * C154406) * C154021 +
             ((C120303 + C120304 + C120305) * C154226 +
              (C120302 + C120301 + C120300) * C154406) *
                 C74048) *
                C154393) *
               C154118) *
              C154384 +
          (((((C116315 + C116314 + C116313) * C154406 + C121618 * C154226) *
                 C74048 +
             ((C116312 + C116311 + C116310) * C154406 +
              (C117135 + C117136 + C117137) * C154226) *
                 C154021) *
                C154146 -
            ((C116553 * C154226 + (C115705 + C115704 + C115703) * C154406) *
                 C154021 +
             (C120283 * C154226 + (C115702 + C115701 + C115700) * C154406) *
                 C74048) *
                C154393) *
               C1307 +
           (((C120281 * C154406 + C120287 * C154226) * C74048 +
             (C120911 * C154406 + (C116017 + C116018 + C116019) * C154226) *
                 C154021) *
                C154393 -
            (((C152193 * C6264 - C115626 * C6258 - C152193 * C6265 +
               C115620 * C6276 + C152145 * C3449 - C152180 * C3443 -
               C152145 * C3450 + C154271 * C3455 + C152148 * C1981 -
               C152187 * C1974 - C152148 * C1982 + C154264 * C1989) *
                  C154226 +
              (C117137 + C117136 + C117135) * C154406) *
                 C154021 +
             ((C121633 + C121632 + C121631) * C154226 + C121614 * C154406) *
                 C74048) *
                C154146) *
               C154118) *
              C154053)) /
        (p * q * std::sqrt(p + q));
    d2ee[249] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C152148 * C144 - C152187 * C136 - C152148 * C145 +
              C154264 * C160 + C152145 * C600 - C152180 * C584 -
              C152145 * C601 + C154271 * C620 + C152193 * C602 -
              C115626 * C585 - C152193 * C603 + C115620 * C621) *
                 C154406 +
             (C120300 + C120301 + C120302) * C154226) *
                C74048 +
            ((C115700 + C115701 + C115702) * C154406 + C120281 * C154226) *
                C154021) *
               C154082 * C1307 -
           ((C120282 * C154226 + C120283 * C154406) * C154021 +
            ((C120303 + C120304 + C120305) * C154226 +
             (C120302 + C120301 + C120300) * C154406) *
                C74048) *
               C154082 * C154118) *
              C1309 +
          (((C120281 * C154406 + C120287 * C154226) * C74048 +
            (C120911 * C154406 + (C116017 + C116018 + C116019) * C154226) *
                C154021) *
               C154082 * C154118 -
           ((C116553 * C154226 + (C115705 + C115704 + C115703) * C154406) *
                C154021 +
            (C120283 * C154226 + (C115702 + C115701 + C115700) * C154406) *
                C74048) *
               C154082 * C1307) *
              C1310 +
          (((C115714 * C154406 + C120911 * C154226) * C74048 +
            ((C115708 + C115707 + C115706) * C154406 +
             (C116561 + C116562 + C116563) * C154226) *
                C154021) *
               C154082 * C1307 -
           (((C152193 * C3451 - C115626 * C3444 - C152193 * C3452 +
              C115620 * C3456 + C152145 * C1979 - C152180 * C1973 -
              C152145 * C1980 + C154271 * C1988 + C152148 * C371 -
              C152187 * C351 - C152148 * C372 + C154264 * C387) *
                 C154226 +
             (C116563 + C116562 + C116561) * C154406) *
                C154021 +
            ((C116019 + C116018 + C116017) * C154226 + C116553 * C154406) *
                C74048) *
               C154082 * C154118) *
              C1311)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C152148 * C144 - C152187 * C136 - C152148 * C145 + C154264 * C160 +
             C152145 * C600 - C152180 * C584 - C152145 * C601 + C154271 * C620 +
             C152193 * C602 - C115626 * C585 - C152193 * C603 +
             C115620 * C621) *
                C154406 +
            (C120300 + C120301 + C120302) * C154226) *
               C74048 +
           ((C115700 + C115701 + C115702) * C154406 + C120281 * C154226) *
               C154021) *
              C154082 * C1394 -
          ((C120282 * C154226 + C120283 * C154406) * C154021 +
           ((C120303 + C120304 + C120305) * C154226 +
            (C120302 + C120301 + C120300) * C154406) *
               C74048) *
              C154082 * C1395 +
          (((C120305 + C120304 + C120303) * C154406 +
            (C122136 + C122137 + C122138) * C154226) *
               C74048 +
           (C120287 * C154406 + (C120306 + C120307 + C120308) * C154226) *
               C154021) *
              C154082 * C1396 -
          (((C152193 * C28468 - C115626 * C28465 - C152193 * C28469 +
             C115620 * C28471 + C152145 * C5662 - C152180 * C5658 -
             C152145 * C5663 + C154271 * C5667 + C152148 * C3145 -
             C152187 * C3140 - C152148 * C3146 + C154264 * C3152) *
                C154226 +
            (C120308 + C120307 + C120306) * C154406) *
               C154021 +
           ((C152193 * C28466 - C115626 * C28464 - C152193 * C28467 +
             C115620 * C28470 + C152145 * C5664 - C152180 * C5659 -
             C152145 * C5665 + C154271 * C5668 + C152148 * C3143 -
             C152187 * C3139 - C152148 * C3144 + C154264 * C3151) *
                C154226 +
            (C122138 + C122137 + C122136) * C154406) *
               C74048) *
              C154082 * C1397) *
         C154047) /
            (p * q * std::sqrt(p + q));
    d2ee[250] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C152148 * C144 - C152187 * C136 - C152148 * C145 +
               C154264 * C160 + C152145 * C600 - C152180 * C584 -
               C152145 * C601 + C154271 * C620 + C152193 * C602 -
               C115626 * C585 - C152193 * C603 + C115620 * C621) *
                  C154406 +
              (C120300 + C120301 + C120302) * C154226) *
                 C74048 +
             ((C115700 + C115701 + C115702) * C154406 + C120281 * C154226) *
                 C154021) *
                C2114 -
            ((C121614 * C154226 + (C116313 + C116314 + C116315) * C154406) *
                 C154021 +
             ((C121628 + C121629 + C121630) * C154226 +
              (C152193 * C2337 - C115626 * C2328 - C152193 * C2338 +
               C115620 * C2343 + C152145 * C602 - C152180 * C585 -
               C152145 * C603 + C154271 * C621 + C152148 * C600 -
               C152187 * C584 - C152148 * C601 + C154264 * C620) *
                  C154406) *
                 C74048) *
                C154146) *
               C154392 +
           ((((C121630 + C121629 + C121628) * C154406 +
              (C123434 + C123435 + C123436) * C154226) *
                 C74048 +
             (C121618 * C154406 + (C121631 + C121632 + C121633) * C154226) *
                 C154021) *
                C154146 -
            ((C120282 * C154226 + C120283 * C154406) * C154021 +
             ((C120303 + C120304 + C120305) * C154226 +
              (C120302 + C120301 + C120300) * C154406) *
                 C74048) *
                C2114) *
               C154118) *
              C154384 +
          (((((C116315 + C116314 + C116313) * C154406 + C121618 * C154226) *
                 C74048 +
             ((C116312 + C116311 + C116310) * C154406 +
              (C117135 + C117136 + C117137) * C154226) *
                 C154021) *
                C154146 -
            ((C116553 * C154226 + (C115705 + C115704 + C115703) * C154406) *
                 C154021 +
             (C120283 * C154226 + (C115702 + C115701 + C115700) * C154406) *
                 C74048) *
                C2114) *
               C154392 +
           (((C120281 * C154406 + C120287 * C154226) * C74048 +
             (C120911 * C154406 + (C116017 + C116018 + C116019) * C154226) *
                 C154021) *
                C2114 -
            (((C152193 * C6264 - C115626 * C6258 - C152193 * C6265 +
               C115620 * C6276 + C152145 * C3449 - C152180 * C3443 -
               C152145 * C3450 + C154271 * C3455 + C152148 * C1981 -
               C152187 * C1974 - C152148 * C1982 + C154264 * C1989) *
                  C154226 +
              (C117137 + C117136 + C117135) * C154406) *
                 C154021 +
             ((C121633 + C121632 + C121631) * C154226 + C121614 * C154406) *
                 C74048) *
                C154146) *
               C154118) *
              C154053)) /
        (p * q * std::sqrt(p + q));
    d2ee[251] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C152148 * C144 - C152187 * C136 - C152148 * C145 +
              C154264 * C160 + C152145 * C600 - C152180 * C584 -
              C152145 * C601 + C154271 * C620 + C152193 * C602 -
              C115626 * C585 - C152193 * C603 + C115620 * C621) *
                 C154406 +
             (C120300 + C120301 + C120302) * C154226) *
                C74048 +
            ((C115700 + C115701 + C115702) * C154406 + C120281 * C154226) *
                C154021) *
               C154465 -
           ((C121614 * C154226 + (C116313 + C116314 + C116315) * C154406) *
                C154021 +
            ((C121628 + C121629 + C121630) * C154226 +
             (C152193 * C2337 - C115626 * C2328 - C152193 * C2338 +
              C115620 * C2343 + C152145 * C602 - C152180 * C585 -
              C152145 * C603 + C154271 * C621 + C152148 * C600 -
              C152187 * C584 - C152148 * C601 + C154264 * C620) *
                 C154406) *
                C74048) *
               C154466 +
           (((C152148 * C602 - C152187 * C585 - C152148 * C603 +
              C154264 * C621 + C152145 * C2337 - C152180 * C2328 -
              C152145 * C2338 + C154271 * C2343 + C152193 * C7777 -
              C115626 * C7773 - C152193 * C7778 + C115620 * C7785) *
                 C154406 +
             (C122447 + C122448 + C122449) * C154226) *
                C74048 +
            ((C116316 + C116317 + C116318) * C154406 +
             (C120617 + C120618 + C120619) * C154226) *
                C154021) *
               C2630) *
              C154392 +
          ((((C121630 + C121629 + C121628) * C154406 +
             (C123434 + C123435 + C123436) * C154226) *
                C74048 +
            (C121618 * C154406 + (C121631 + C121632 + C121633) * C154226) *
                C154021) *
               C154466 -
           ((C120282 * C154226 + C120283 * C154406) * C154021 +
            ((C120303 + C120304 + C120305) * C154226 +
             (C120302 + C120301 + C120300) * C154406) *
                C74048) *
               C154465 -
           (((C152193 * C31086 - C115626 * C31083 - C152193 * C31087 +
              C115620 * C31089 + C152145 * C6268 - C152180 * C6260 -
              C152145 * C6269 + C154271 * C6278 + C152148 * C3447 -
              C152187 * C3442 - C152148 * C3448 + C154264 * C3454) *
                 C154226 +
             (C120619 + C120618 + C120617) * C154406) *
                C154021 +
            ((C152193 * C31084 - C115626 * C31082 - C152193 * C31085 +
              C115620 * C31088 + C152145 * C6272 - C152180 * C6262 -
              C152145 * C6273 + C154271 * C6280 + C152148 * C3445 -
              C152187 * C3441 - C152148 * C3446 + C154264 * C3453) *
                 C154226 +
             (C122449 + C122448 + C122447) * C154406) *
                C74048) *
               C2630) *
              C154118) *
         C154047) /
        (p * q * std::sqrt(p + q));
    d2ee[252] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C152148 * C144 - C152187 * C136 - C152148 * C145 +
              C154264 * C160 + C152145 * C600 - C152180 * C584 -
              C152145 * C601 + C154271 * C620 + C152193 * C602 -
              C115626 * C585 - C152193 * C603 + C115620 * C621) *
                 C154406 +
             (C120300 + C120301 + C120302) * C154226) *
                C74048 +
            ((C115700 + C115701 + C115702) * C154406 + C120281 * C154226) *
                C154021) *
               C2114 -
           ((C121614 * C154226 + (C116313 + C116314 + C116315) * C154406) *
                C154021 +
            ((C121628 + C121629 + C121630) * C154226 +
             (C152193 * C2337 - C115626 * C2328 - C152193 * C2338 +
              C115620 * C2343 + C152145 * C602 - C152180 * C585 -
              C152145 * C603 + C154271 * C621 + C152148 * C600 -
              C152187 * C584 - C152148 * C601 + C154264 * C620) *
                 C154406) *
                C74048) *
               C154146) *
              C338 +
          ((((C121630 + C121629 + C121628) * C154406 +
             (C123434 + C123435 + C123436) * C154226) *
                C74048 +
            (C121618 * C154406 + (C121631 + C121632 + C121633) * C154226) *
                C154021) *
               C154146 -
           ((C120282 * C154226 + C120283 * C154406) * C154021 +
            ((C120303 + C120304 + C120305) * C154226 +
             (C120302 + C120301 + C120300) * C154406) *
                C74048) *
               C2114) *
              C339 +
          ((((C120305 + C120304 + C120303) * C154406 +
             (C122136 + C122137 + C122138) * C154226) *
                C74048 +
            (C120287 * C154406 + (C120306 + C120307 + C120308) * C154226) *
                C154021) *
               C2114 -
           (((C152193 * C31817 - C115626 * C31816 - C152193 * C31818 +
              C115620 * C31819 + C152145 * C4910 - C152180 * C4906 -
              C152145 * C4911 + C154271 * C4915 + C152148 * C4260 -
              C152187 * C4255 - C152148 * C4261 + C154264 * C4267) *
                 C154226 +
             (C121633 + C121632 + C121631) * C154406) *
                C154021 +
            ((C152193 * C30002 - C115626 * C29999 - C152193 * C30003 +
              C115620 * C30005 + C152145 * C4912 - C152180 * C4907 -
              C152145 * C4913 + C154271 * C4916 + C152148 * C4258 -
              C152187 * C4254 - C152148 * C4259 + C154264 * C4266) *
                 C154226 +
             (C123436 + C123435 + C123434) * C154406) *
                C74048) *
               C154146) *
              C340) *
         C154047) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C152148 * C144 - C152187 * C136 - C152148 * C145 +
              C154264 * C160 + C152145 * C600 - C152180 * C584 -
              C152145 * C601 + C154271 * C620 + C152193 * C602 -
              C115626 * C585 - C152193 * C603 + C115620 * C621) *
                 C154406 +
             (C120300 + C120301 + C120302) * C154226) *
                C74048 +
            ((C115700 + C115701 + C115702) * C154406 + C120281 * C154226) *
                C154021) *
               C2114 -
           ((C121614 * C154226 + (C116313 + C116314 + C116315) * C154406) *
                C154021 +
            ((C121628 + C121629 + C121630) * C154226 +
             (C152193 * C2337 - C115626 * C2328 - C152193 * C2338 +
              C115620 * C2343 + C152145 * C602 - C152180 * C585 -
              C152145 * C603 + C154271 * C621 + C152148 * C600 -
              C152187 * C584 - C152148 * C601 + C154264 * C620) *
                 C154406) *
                C74048) *
               C154146) *
              C154066 * C1309 +
          ((((C116315 + C116314 + C116313) * C154406 + C121618 * C154226) *
                C74048 +
            ((C116312 + C116311 + C116310) * C154406 +
             (C117135 + C117136 + C117137) * C154226) *
                C154021) *
               C154146 -
           ((C116553 * C154226 + (C115705 + C115704 + C115703) * C154406) *
                C154021 +
            (C120283 * C154226 + (C115702 + C115701 + C115700) * C154406) *
                C74048) *
               C2114) *
              C154066 * C1310 +
          (((C115714 * C154406 + C120911 * C154226) * C74048 +
            ((C115708 + C115707 + C115706) * C154406 +
             (C116561 + C116562 + C116563) * C154226) *
                C154021) *
               C2114 -
           (((C152193 * C8648 - C115626 * C8647 - C152193 * C8649 +
              C115620 * C8650 + C152145 * C1548 - C152180 * C1542 -
              C152145 * C1549 + C154271 * C1557 + C152148 * C1141 -
              C152187 * C1132 - C152148 * C1142 + C154264 * C1150) *
                 C154226 +
             (C116805 + C116804 + C116803) * C154406) *
                C154021 +
            ((C117137 + C117136 + C117135) * C154226 + C116795 * C154406) *
                C74048) *
               C154146) *
              C154066 * C1311)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C152148 * C144 - C152187 * C136 - C152148 * C145 + C154264 * C160 +
             C152145 * C600 - C152180 * C584 - C152145 * C601 + C154271 * C620 +
             C152193 * C602 - C115626 * C585 - C152193 * C603 +
             C115620 * C621) *
                C154406 +
            (C120300 + C120301 + C120302) * C154226) *
               C74048 +
           ((C115700 + C115701 + C115702) * C154406 + C120281 * C154226) *
               C154021) *
              C2320 -
          ((C121614 * C154226 + (C116313 + C116314 + C116315) * C154406) *
               C154021 +
           ((C121628 + C121629 + C121630) * C154226 +
            (C152193 * C2337 - C115626 * C2328 - C152193 * C2338 +
             C115620 * C2343 + C152145 * C602 - C152180 * C585 -
             C152145 * C603 + C154271 * C621 + C152148 * C600 - C152187 * C584 -
             C152148 * C601 + C154264 * C620) *
                C154406) *
               C74048) *
              C2321 +
          (((C152148 * C602 - C152187 * C585 - C152148 * C603 + C154264 * C621 +
             C152145 * C2337 - C152180 * C2328 - C152145 * C2338 +
             C154271 * C2343 + C152193 * C7777 - C115626 * C7773 -
             C152193 * C7778 + C115620 * C7785) *
                C154406 +
            (C122447 + C122448 + C122449) * C154226) *
               C74048 +
           ((C116316 + C116317 + C116318) * C154406 +
            (C120617 + C120618 + C120619) * C154226) *
               C154021) *
              C2322 -
          (((C152193 * C56192 - C115626 * C56191 - C152193 * C56193 +
             C115620 * C56194 + C152145 * C9280 - C152180 * C9276 -
             C152145 * C9281 + C154271 * C9285 + C152148 * C6270 -
             C152187 * C6261 - C152148 * C6271 + C154264 * C6279) *
                C154226 +
            (C152193 * C10600 - C115626 * C10596 - C152193 * C10601 +
             C115620 * C10605 + C152145 * C7779 - C152180 * C7774 -
             C152145 * C7780 + C154271 * C7786 + C152148 * C2335 -
             C152187 * C2327 - C152148 * C2336 + C154264 * C2342) *
                C154406) *
               C154021 +
           ((C152193 * C33869 - C115626 * C33866 - C152193 * C33870 +
             C115620 * C33872 + C152145 * C9282 - C152180 * C9277 -
             C152145 * C9283 + C154271 * C9286 + C152148 * C6274 -
             C152187 * C6263 - C152148 * C6275 + C154264 * C6281) *
                C154226 +
            (C152193 * C10602 - C115626 * C10597 - C152193 * C10603 +
             C115620 * C10606 + C152145 * C7777 - C152180 * C7773 -
             C152145 * C7778 + C154271 * C7785 + C152148 * C2337 -
             C152187 * C2328 - C152148 * C2338 + C154264 * C2343) *
                C154406) *
               C74048) *
              C2323) *
         C154066 * C154047) /
            (p * q * std::sqrt(p + q));
    d2ee[253] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C152148 * C144 - C152187 * C136 - C152148 * C145 +
              C154264 * C160 + C152145 * C600 - C152180 * C584 -
              C152145 * C601 + C154271 * C620 + C152193 * C602 -
              C115626 * C585 - C152193 * C603 + C115620 * C621) *
                 C154406 +
             (C120300 + C120301 + C120302) * C154226) *
                C74048 +
            ((C115700 + C115701 + C115702) * C154406 + C120281 * C154226) *
                C154021) *
               C154465 -
           ((C121614 * C154226 + (C116313 + C116314 + C116315) * C154406) *
                C154021 +
            ((C121628 + C121629 + C121630) * C154226 +
             (C152193 * C2337 - C115626 * C2328 - C152193 * C2338 +
              C115620 * C2343 + C152145 * C602 - C152180 * C585 -
              C152145 * C603 + C154271 * C621 + C152148 * C600 -
              C152187 * C584 - C152148 * C601 + C154264 * C620) *
                 C154406) *
                C74048) *
               C154466 +
           (((C152148 * C602 - C152187 * C585 - C152148 * C603 +
              C154264 * C621 + C152145 * C2337 - C152180 * C2328 -
              C152145 * C2338 + C154271 * C2343 + C152193 * C7777 -
              C115626 * C7773 - C152193 * C7778 + C115620 * C7785) *
                 C154406 +
             (C122447 + C122448 + C122449) * C154226) *
                C74048 +
            ((C116316 + C116317 + C116318) * C154406 +
             (C120617 + C120618 + C120619) * C154226) *
                C154021) *
               C2630) *
              C154066 * C154384 +
          ((((C116315 + C116314 + C116313) * C154406 + C121618 * C154226) *
                C74048 +
            ((C116312 + C116311 + C116310) * C154406 +
             (C117135 + C117136 + C117137) * C154226) *
                C154021) *
               C154466 -
           ((C116553 * C154226 + (C115705 + C115704 + C115703) * C154406) *
                C154021 +
            (C120283 * C154226 + (C115702 + C115701 + C115700) * C154406) *
                C74048) *
               C154465 -
           (((C152193 * C9278 - C115626 * C9275 - C152193 * C9279 +
              C115620 * C9284 + C152145 * C6266 - C152180 * C6259 -
              C152145 * C6267 + C154271 * C6277 + C152148 * C1550 -
              C152187 * C1543 - C152148 * C1551 + C154264 * C1558) *
                 C154226 +
             (C116321 + C116320 + C116319) * C154406) *
                C154021 +
            ((C120619 + C120618 + C120617) * C154226 +
             (C116318 + C116317 + C116316) * C154406) *
                C74048) *
               C2630) *
              C154066 * C154053)) /
        (p * q * std::sqrt(p + q));
    d2ee[254] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C152148 * C144 - C152187 * C136 - C152148 * C145 +
              C154264 * C160 + C152145 * C600 - C152180 * C584 -
              C152145 * C601 + C154271 * C620 + C152193 * C602 -
              C115626 * C585 - C152193 * C603 + C115620 * C621) *
                 C154406 +
             (C120300 + C120301 + C120302) * C154226) *
                C74048 +
            ((C115700 + C115701 + C115702) * C154406 + C120281 * C154226) *
                C154021) *
               C2114 -
           ((C121614 * C154226 + (C116313 + C116314 + C116315) * C154406) *
                C154021 +
            ((C121628 + C121629 + C121630) * C154226 +
             (C152193 * C2337 - C115626 * C2328 - C152193 * C2338 +
              C115620 * C2343 + C152145 * C602 - C152180 * C585 -
              C152145 * C603 + C154271 * C621 + C152148 * C600 -
              C152187 * C584 - C152148 * C601 + C154264 * C620) *
                 C154406) *
                C74048) *
               C154146) *
              C154066 * C1309 +
          ((((C116315 + C116314 + C116313) * C154406 + C121618 * C154226) *
                C74048 +
            ((C116312 + C116311 + C116310) * C154406 +
             (C117135 + C117136 + C117137) * C154226) *
                C154021) *
               C154146 -
           ((C116553 * C154226 + (C115705 + C115704 + C115703) * C154406) *
                C154021 +
            (C120283 * C154226 + (C115702 + C115701 + C115700) * C154406) *
                C74048) *
               C2114) *
              C154066 * C1310 +
          (((C115714 * C154406 + C120911 * C154226) * C74048 +
            ((C115708 + C115707 + C115706) * C154406 +
             (C116561 + C116562 + C116563) * C154226) *
                C154021) *
               C2114 -
           (((C152193 * C8648 - C115626 * C8647 - C152193 * C8649 +
              C115620 * C8650 + C152145 * C1548 - C152180 * C1542 -
              C152145 * C1549 + C154271 * C1557 + C152148 * C1141 -
              C152187 * C1132 - C152148 * C1142 + C154264 * C1150) *
                 C154226 +
             (C116805 + C116804 + C116803) * C154406) *
                C154021 +
            ((C117137 + C117136 + C117135) * C154226 + C116795 * C154406) *
                C74048) *
               C154146) *
              C154066 * C1311)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C152148 * C144 - C152187 * C136 - C152148 * C145 +
              C154264 * C160 + C152145 * C600 - C152180 * C584 -
              C152145 * C601 + C154271 * C620 + C152193 * C602 -
              C115626 * C585 - C152193 * C603 + C115620 * C621) *
                 C154406 +
             (C120300 + C120301 + C120302) * C154226) *
                C74048 +
            ((C115700 + C115701 + C115702) * C154406 + C120281 * C154226) *
                C154021) *
               C2114 -
           ((C121614 * C154226 + (C116313 + C116314 + C116315) * C154406) *
                C154021 +
            ((C121628 + C121629 + C121630) * C154226 +
             (C152193 * C2337 - C115626 * C2328 - C152193 * C2338 +
              C115620 * C2343 + C152145 * C602 - C152180 * C585 -
              C152145 * C603 + C154271 * C621 + C152148 * C600 -
              C152187 * C584 - C152148 * C601 + C154264 * C620) *
                 C154406) *
                C74048) *
               C154146) *
              C338 +
          ((((C121630 + C121629 + C121628) * C154406 +
             (C123434 + C123435 + C123436) * C154226) *
                C74048 +
            (C121618 * C154406 + (C121631 + C121632 + C121633) * C154226) *
                C154021) *
               C154146 -
           ((C120282 * C154226 + C120283 * C154406) * C154021 +
            ((C120303 + C120304 + C120305) * C154226 +
             (C120302 + C120301 + C120300) * C154406) *
                C74048) *
               C2114) *
              C339 +
          ((((C120305 + C120304 + C120303) * C154406 +
             (C122136 + C122137 + C122138) * C154226) *
                C74048 +
            (C120287 * C154406 + (C120306 + C120307 + C120308) * C154226) *
                C154021) *
               C2114 -
           (((C152193 * C31817 - C115626 * C31816 - C152193 * C31818 +
              C115620 * C31819 + C152145 * C4910 - C152180 * C4906 -
              C152145 * C4911 + C154271 * C4915 + C152148 * C4260 -
              C152187 * C4255 - C152148 * C4261 + C154264 * C4267) *
                 C154226 +
             (C121633 + C121632 + C121631) * C154406) *
                C154021 +
            ((C152193 * C30002 - C115626 * C29999 - C152193 * C30003 +
              C115620 * C30005 + C152145 * C4912 - C152180 * C4907 -
              C152145 * C4913 + C154271 * C4916 + C152148 * C4258 -
              C152187 * C4254 - C152148 * C4259 + C154264 * C4266) *
                 C154226 +
             (C123436 + C123435 + C123434) * C154406) *
                C74048) *
               C154146) *
              C340) *
         C154047) /
            (p * q * std::sqrt(p + q));
    d2ee[255] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
              C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
                 C154480 +
             (C101527 + C101528) * C154468 + C101539 * C154442) *
                C74048 +
            ((C97340 + C97341) * C154480 + C101466 * C154468 +
             C101467 * C154442) *
                C154021) *
               C154082 * C154392 -
           ((C101540 * C154442 + C101476 * C154468 + C101477 * C154480) *
                C154021 +
            ((C101533 + C101534) * C154442 + (C101530 + C101529) * C154468 +
             (C101528 + C101527) * C154480) *
                C74048) *
               C154082 * C154118) *
              C154461 +
          (((C101466 * C154480 + C101467 * C154468 + C101541 * C154442) *
                C74048 +
            (C102164 * C154480 + C102165 * C154468 +
             (C101537 + C101538) * C154442) *
                C154021) *
               C154082 * C154118 -
           ((C101502 * C154442 + C98109 * C154468 +
             (C97343 + C97342) * C154480) *
                C154021 +
            (C101476 * C154442 + C101477 * C154468 +
             (C97341 + C97340) * C154480) *
                C74048) *
               C154082 * C154392) *
              C154462 +
          (((C97350 * C154480 + C102164 * C154468 + C102165 * C154442) *
                C74048 +
            (C97351 * C154480 + (C97625 + C97624) * C154468 +
             (C97634 + C97635) * C154442) *
                C154021) *
               C154082 * C154392 -
           (((C97277 * C4264 - C97278 * C4257 - C97277 * C4265 +
              C154268 * C4269 + C97275 * C1406 - C97276 * C1400 -
              C97275 * C1407 + C97273 * C1415) *
                 C154442 +
             (C97635 + C97634) * C154468 + C98108 * C154480) *
                C154021 +
            ((C101538 + C101537) * C154442 + C101502 * C154468 +
             C98109 * C154480) *
                C74048) *
               C154082 * C154118) *
              C818)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
             C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
                C154164 * C154486 +
            (C97340 + C97341) * C154164 * C154479 + C97354 * C154460 +
            C97355 * C154407) *
               C154082 * C154392 -
           (C98118 * C154407 + C98119 * C154460 +
            (C97628 + C97629) * C154164 * C154479 +
            (C97277 * C1135 - C97278 * C1129 - C97277 * C1136 +
             C154268 * C1147 + C97275 * C363 - C97276 * C347 - C97275 * C364 +
             C97273 * C383) *
                C154164 * C154486) *
               C154082 * C154118) *
              C154461 +
          (((C97629 + C97628) * C154164 * C154486 +
            (C97627 + C97626) * C154164 * C154479 +
            (C97625 + C97624) * C154164 * C154460 +
            (C98124 + C98125) * C154164 * C154407) *
               C154082 * C154118 -
           (C97356 * C154407 + C97357 * C154460 +
            (C97343 + C97342) * C154164 * C154479 +
            (C97341 + C97340) * C154164 * C154486) *
               C154082 * C154392) *
              C154462 +
          ((C97354 * C154486 + C97355 * C154479 +
            (C97347 + C97346) * C154164 * C154460 +
            (C97348 + C97349) * C154164 * C154407) *
               C154082 * C154392 -
           ((C97277 * C1145 - C97278 * C1134 - C97277 * C1146 +
             C154268 * C1152 + C97275 * C375 - C97276 * C353 - C97275 * C376 +
             C97273 * C389) *
                C154164 * C154407 +
            (C98125 + C98124) * C154164 * C154460 + C98118 * C154479 +
            C98119 * C154486) *
               C154082 * C154118) *
              C818)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C106573 * C144 - C106574 * C136 - C106573 * C145 + C154488 * C160 +
             C106575 * C600 - C106576 * C584 - C106575 * C601 + C154485 * C620 +
             C106577 * C602 - C106578 * C585 - C106577 * C603 + C154476 * C621 +
             C106579 * C2337 - C106580 * C2328 - C106579 * C2338 +
             C154422 * C2343) *
                C154164 * C74048 +
            (C106654 + C106655 + C106656 + C106657) * C154164 * C154021) *
               C154082 * C154392 -
           ((C106908 + C106909 + C106910 + C106911) * C154164 * C154021 +
            (C106579 * C6274 - C106580 * C6263 - C106579 * C6275 +
             C154422 * C6281 + C106577 * C1554 - C106578 * C1545 -
             C106577 * C1555 + C154476 * C1560 + C106575 * C1135 -
             C106576 * C1129 - C106575 * C1136 + C154485 * C1147 +
             C106573 * C363 - C106574 * C347 - C106573 * C364 +
             C154488 * C383) *
                C154164 * C74048) *
               C154082 * C154118) *
              C154461 +
          (((C106911 + C106910 + C106909 + C106908) * C154164 * C74048 +
            (C107384 + C107385 + C107386 + C107387) * C154164 * C154021) *
               C154082 * C154118 -
           ((C106658 + C106659 + C106660 + C106661) * C154164 * C154021 +
            (C106657 + C106656 + C106655 + C106654) * C154164 * C74048) *
               C154082 * C154392) *
              C154462 +
          (((C106661 + C106660 + C106659 + C106658) * C154164 * C74048 +
            (C106662 + C106663 + C106664 + C106665) * C154164 * C154021) *
               C154082 * C154392 -
           ((C106579 * C8648 - C106580 * C8647 - C106579 * C8649 +
             C154422 * C8650 + C106577 * C1548 - C106578 * C1542 -
             C106577 * C1549 + C154476 * C1557 + C106575 * C1141 -
             C106576 * C1132 - C106575 * C1142 + C154485 * C1150 +
             C106573 * C357 - C106574 * C344 - C106573 * C358 +
             C154488 * C380) *
                C154164 * C154021 +
            (C107387 + C107386 + C107385 + C107384) * C154164 * C74048) *
               C154082 * C154118) *
              C818)) /
            (p * q * std::sqrt(p + q));
    d2ee[256] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
               C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
                  C154480 +
              (C101527 + C101528) * C154468 + C101539 * C154442) *
                 C74048 +
             ((C97340 + C97341) * C154480 + C101466 * C154468 +
              C101467 * C154442) *
                 C154021) *
                C154393 -
            ((C102856 * C154442 + C102857 * C154468 +
              (C97906 + C97907) * C154480) *
                 C154021 +
             ((C102896 + C102897) * C154442 + (C102898 + C102899) * C154468 +
              (C97277 * C602 - C97278 * C585 - C97277 * C603 + C154268 * C621 +
               C97275 * C600 - C97276 * C584 - C97275 * C601 + C97273 * C620) *
                  C154480) *
                 C74048) *
                C154146) *
               C154392 +
           ((((C102899 + C102898) * C154480 + (C102897 + C102896) * C154468 +
              (C97275 * C4258 - C97276 * C4254 - C97275 * C4259 +
               C97273 * C4266 + C97277 * C4912 - C97278 * C4907 -
               C97277 * C4913 + C154268 * C4916) *
                  C154442) *
                 C74048 +
             (C102874 * C154480 + C102875 * C154468 +
              (C102900 + C102901) * C154442) *
                 C154021) *
                C154146 -
            ((C101540 * C154442 + C101476 * C154468 + C101477 * C154480) *
                 C154021 +
             ((C101533 + C101534) * C154442 + (C101530 + C101529) * C154468 +
              (C101528 + C101527) * C154480) *
                 C74048) *
                C154393) *
               C154118) *
              C341 +
          (((((C97907 + C97906) * C154480 + C102874 * C154468 +
              C102875 * C154442) *
                 C74048 +
             ((C97905 + C97904) * C154480 + (C98634 + C98635) * C154468 +
              (C102468 + C102469) * C154442) *
                 C154021) *
                C154146 -
            ((C101502 * C154442 + C98109 * C154468 +
              (C97343 + C97342) * C154480) *
                 C154021 +
             (C101476 * C154442 + C101477 * C154468 +
              (C97341 + C97340) * C154480) *
                 C74048) *
                C154393) *
               C154392 +
           (((C101466 * C154480 + C101467 * C154468 + C101541 * C154442) *
                 C74048 +
             (C102164 * C154480 + C102165 * C154468 +
              (C101537 + C101538) * C154442) *
                 C154021) *
                C154393 -
            (((C97277 * C4908 - C97278 * C4905 - C97277 * C4909 +
               C154268 * C4914 + C97275 * C4262 - C97276 * C4256 -
               C97275 * C4263 + C97273 * C4268) *
                  C154442 +
              (C102469 + C102468) * C154468 + (C98635 + C98634) * C154480) *
                 C154021 +
             ((C102901 + C102900) * C154442 + C102856 * C154468 +
              C102857 * C154480) *
                 C74048) *
                C154146) *
               C154118) *
              C154053)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
              C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
                 C154164 * C154486 +
             (C97340 + C97341) * C154164 * C154479 + C97354 * C154460 +
             C97355 * C154407) *
                C154393 -
            (C98330 * C154407 + C98331 * C154460 +
             (C97906 + C97907) * C154164 * C154479 +
             (C97277 * C602 - C97278 * C585 - C97277 * C603 + C154268 * C621 +
              C97275 * C600 - C97276 * C584 - C97275 * C601 + C97273 * C620) *
                 C154164 * C154486) *
                C154146) *
               C154392 +
           (((C97275 * C1135 - C97276 * C1129 - C97275 * C1136 +
              C97273 * C1147 + C97277 * C1554 - C97278 * C1545 -
              C97277 * C1555 + C154268 * C1560) *
                 C154164 * C154486 +
             (C98632 + C98633) * C154164 * C154479 +
             (C98634 + C98635) * C154164 * C154460 +
             (C98636 + C98637) * C154164 * C154407) *
                C154146 -
            (C98118 * C154407 + C98119 * C154460 +
             (C97628 + C97629) * C154164 * C154479 +
             (C97277 * C1135 - C97278 * C1129 - C97277 * C1136 +
              C154268 * C1147 + C97275 * C363 - C97276 * C347 - C97275 * C364 +
              C97273 * C383) *
                 C154164 * C154486) *
                C154393) *
               C154118) *
              C341 +
          ((((C97907 + C97906) * C154164 * C154486 +
             (C97905 + C97904) * C154164 * C154479 +
             (C97903 + C97902) * C154164 * C154460 +
             (C98336 + C98337) * C154164 * C154407) *
                C154146 -
            (C97356 * C154407 + C97357 * C154460 +
             (C97343 + C97342) * C154164 * C154479 +
             (C97341 + C97340) * C154164 * C154486) *
                C154393) *
               C154392 +
           (((C97629 + C97628) * C154164 * C154486 +
             (C97627 + C97626) * C154164 * C154479 +
             (C97625 + C97624) * C154164 * C154460 +
             (C98124 + C98125) * C154164 * C154407) *
                C154393 -
            ((C97277 * C1546 - C97278 * C1541 - C97277 * C1547 +
              C154268 * C1556 + C97275 * C1143 - C97276 * C1133 -
              C97275 * C1144 + C97273 * C1151) *
                 C154164 * C154407 +
             (C98637 + C98636) * C154164 * C154460 +
             (C98635 + C98634) * C154164 * C154479 +
             (C98633 + C98632) * C154164 * C154486) *
                C154146) *
               C154118) *
              C154053)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C106573 * C144 - C106574 * C136 - C106573 * C145 +
              C154488 * C160 + C106575 * C600 - C106576 * C584 -
              C106575 * C601 + C154485 * C620 + C106577 * C602 -
              C106578 * C585 - C106577 * C603 + C154476 * C621 +
              C106579 * C2337 - C106580 * C2328 - C106579 * C2338 +
              C154422 * C2343) *
                 C154164 * C74048 +
             (C106654 + C106655 + C106656 + C106657) * C154164 * C154021) *
                C154393 -
            ((C107158 + C107159 + C107160 + C107161) * C154164 * C154021 +
             (C106579 * C7777 - C106580 * C7773 - C106579 * C7778 +
              C154422 * C7785 + C106577 * C2337 - C106578 * C2328 -
              C106577 * C2338 + C154476 * C2343 + C106575 * C602 -
              C106576 * C585 - C106575 * C603 + C154485 * C621 +
              C106573 * C600 - C106574 * C584 - C106573 * C601 +
              C154488 * C620) *
                 C154164 * C74048) *
                C154146) *
               C154392 +
           (((C106573 * C1135 - C106574 * C1129 - C106573 * C1136 +
              C154488 * C1147 + C106575 * C1554 - C106576 * C1545 -
              C106575 * C1555 + C154485 * C1560 + C106577 * C6274 -
              C106578 * C6263 - C106577 * C6275 + C154476 * C6281 +
              C106579 * C9282 - C106580 * C9277 - C106579 * C9283 +
              C154422 * C9286) *
                 C154164 * C74048 +
             (C107892 + C107893 + C107894 + C107895) * C154164 * C154021) *
                C154146 -
            ((C106908 + C106909 + C106910 + C106911) * C154164 * C154021 +
             (C106579 * C6274 - C106580 * C6263 - C106579 * C6275 +
              C154422 * C6281 + C106577 * C1554 - C106578 * C1545 -
              C106577 * C1555 + C154476 * C1560 + C106575 * C1135 -
              C106576 * C1129 - C106575 * C1136 + C154485 * C1147 +
              C106573 * C363 - C106574 * C347 - C106573 * C364 +
              C154488 * C383) *
                 C154164 * C74048) *
                C154393) *
               C154118) *
              C341 +
          ((((C107161 + C107160 + C107159 + C107158) * C154164 * C74048 +
             (C107606 + C107607 + C107608 + C107609) * C154164 * C154021) *
                C154146 -
            ((C106658 + C106659 + C106660 + C106661) * C154164 * C154021 +
             (C106657 + C106656 + C106655 + C106654) * C154164 * C74048) *
                C154393) *
               C154392 +
           (((C106911 + C106910 + C106909 + C106908) * C154164 * C74048 +
             (C107384 + C107385 + C107386 + C107387) * C154164 * C154021) *
                C154393 -
            ((C106579 * C9278 - C106580 * C9275 - C106579 * C9279 +
              C154422 * C9284 + C106577 * C6266 - C106578 * C6259 -
              C106577 * C6267 + C154476 * C6277 + C106575 * C1550 -
              C106576 * C1543 - C106575 * C1551 + C154485 * C1558 +
              C106573 * C1139 - C106574 * C1131 - C106573 * C1140 +
              C154488 * C1149) *
                 C154164 * C154021 +
             (C107895 + C107894 + C107893 + C107892) * C154164 * C74048) *
                C154146) *
               C154118) *
              C154053)) /
            (p * q * std::sqrt(p + q));
    d2ee[257] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
                C97277 * C600 - C97278 * C584 - C97277 * C601 +
                C154268 * C620) *
                   C154164 * C154486 +
               (C97340 + C97341) * C154164 * C154479 + C97354 * C154460 +
               C97355 * C154407) *
                  C154082 * C154066 * C130 -
              (C97356 * C154407 + C97357 * C154460 +
               (C97343 + C97342) * C154164 * C154479 +
               (C97341 + C97340) * C154164 * C154486) *
                  C154082 * C154066 * C131 +
              (C97354 * C154486 + C97355 * C154479 +
               (C97347 + C97346) * C154164 * C154460 +
               (C97348 + C97349) * C154164 * C154407) *
                  C154082 * C154066 * C132 -
              ((C97277 * C956 - C97278 * C955 - C97277 * C957 + C154268 * C958 +
                C97275 * C156 - C97276 * C142 - C97275 * C157 + C97273 * C166) *
                   C154164 * C154407 +
               (C97349 + C97348) * C154164 * C154460 + C97356 * C154479 +
               C97357 * C154486) *
                  C154082 * C154066 * C133) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
                 C97277 * C600 - C97278 * C584 - C97277 * C601 +
                 C154268 * C620) *
                    C154164 * C154486 +
                (C97340 + C97341) * C154164 * C154479 + C97354 * C154460 +
                C97355 * C154407) *
                   C154082 * C338 -
               ((C97624 + C97625) * C154164 * C154407 +
                (C97626 + C97627) * C154164 * C154460 +
                (C97628 + C97629) * C154164 * C154479 +
                (C97277 * C1135 - C97278 * C1129 - C97277 * C1136 +
                 C154268 * C1147 + C97275 * C363 - C97276 * C347 -
                 C97275 * C364 + C97273 * C383) *
                    C154164 * C154486) *
                   C154082 * C339 +
               ((C97275 * C365 - C97276 * C348 - C97275 * C366 + C97273 * C384 +
                 C97277 * C1985 - C97278 * C1976 - C97277 * C1986 +
                 C154268 * C1991) *
                    C154164 * C154486 +
                (C97630 + C97631) * C154164 * C154479 +
                (C97632 + C97633) * C154164 * C154460 +
                (C97634 + C97635) * C154164 * C154407) *
                   C154082 * C340) *
                  C341 +
              (((C97629 + C97628) * C154164 * C154486 +
                (C97627 + C97626) * C154164 * C154479 +
                (C97625 + C97624) * C154164 * C154460 +
                (C97275 * C355 - C97276 * C343 - C97275 * C356 + C97273 * C379 +
                 C97277 * C1143 - C97278 * C1133 - C97277 * C1144 +
                 C154268 * C1151) *
                    C154164 * C154407) *
                   C154082 * C339 -
               (C97356 * C154407 + C97357 * C154460 +
                (C97343 + C97342) * C154164 * C154479 +
                (C97341 + C97340) * C154164 * C154486) *
                   C154082 * C338 -
               ((C97277 * C1977 - C97278 * C1972 - C97277 * C1978 +
                 C154268 * C1987 + C97275 * C373 - C97276 * C352 -
                 C97275 * C374 + C97273 * C388) *
                    C154164 * C154407 +
                (C97635 + C97634) * C154164 * C154460 +
                (C97633 + C97632) * C154164 * C154479 +
                (C97631 + C97630) * C154164 * C154486) *
                   C154082 * C340) *
                  C154053)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
             C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
                C154164 * C154486 +
            (C97340 + C97341) * C154164 * C154479 + C97354 * C154460 +
            C97355 * C154407) *
               C577 -
           ((C97902 + C97903) * C154164 * C154407 +
            (C97904 + C97905) * C154164 * C154460 +
            (C97906 + C97907) * C154164 * C154479 +
            (C97277 * C602 - C97278 * C585 - C97277 * C603 + C154268 * C621 +
             C97275 * C600 - C97276 * C584 - C97275 * C601 + C97273 * C620) *
                C154164 * C154486) *
               C578 +
           ((C97275 * C602 - C97276 * C585 - C97275 * C603 + C97273 * C621 +
             C97277 * C2337 - C97278 * C2328 - C97277 * C2338 +
             C154268 * C2343) *
                C154164 * C154486 +
            (C97908 + C97909) * C154164 * C154479 +
            (C97910 + C97911) * C154164 * C154460 +
            (C97912 + C97913) * C154164 * C154407) *
               C579) *
              C154066 * C341 +
          (((C97907 + C97906) * C154164 * C154486 +
            (C97905 + C97904) * C154164 * C154479 +
            (C97903 + C97902) * C154164 * C154460 +
            (C97275 * C592 - C97276 * C580 - C97275 * C593 + C97273 * C616 +
             C97277 * C610 - C97278 * C589 - C97277 * C611 + C154268 * C625) *
                C154164 * C154407) *
               C578 -
           (C97356 * C154407 + C97357 * C154460 +
            (C97343 + C97342) * C154164 * C154479 +
            (C97341 + C97340) * C154164 * C154486) *
               C577 -
           ((C97277 * C2329 - C97278 * C2324 - C97277 * C2330 +
             C154268 * C2339 + C97275 * C610 - C97276 * C589 - C97275 * C611 +
             C97273 * C625) *
                C154164 * C154407 +
            (C97913 + C97912) * C154164 * C154460 +
            (C97911 + C97910) * C154164 * C154479 +
            (C97909 + C97908) * C154164 * C154486) *
               C579) *
              C154066 * C154053)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
             C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
                C154480 +
            (C97275 * C363 - C97276 * C347 - C97275 * C364 + C97273 * C383 +
             C97277 * C1135 - C97278 * C1129 - C97277 * C1136 +
             C154268 * C1147) *
                C154468 +
            (C97275 * C365 - C97276 * C348 - C97275 * C366 + C97273 * C384 +
             C97277 * C1985 - C97278 * C1976 - C97277 * C1986 +
             C154268 * C1991) *
                C154442) *
               C74048 +
           ((C97340 + C97341) * C154480 + (C97629 + C97628) * C154468 +
            (C97630 + C97631) * C154442) *
               C154021) *
              C154082 * C154066 * C130 -
          (((C97633 + C97632) * C154442 + C98109 * C154468 +
            (C97343 + C97342) * C154480) *
               C154021 +
           ((C97631 + C97630) * C154442 + (C97628 + C97629) * C154468 +
            (C97341 + C97340) * C154480) *
               C74048) *
              C154082 * C154066 * C131 +
          ((C97350 * C154480 + (C97627 + C97626) * C154468 +
            (C97632 + C97633) * C154442) *
               C74048 +
           (C97351 * C154480 + (C97625 + C97624) * C154468 +
            (C97634 + C97635) * C154442) *
               C154021) *
              C154082 * C154066 * C132 -
          (((C97277 * C1977 - C97278 * C1972 - C97277 * C1978 +
             C154268 * C1987 + C97275 * C373 - C97276 * C352 - C97275 * C374 +
             C97273 * C388) *
                C154442 +
            (C98125 + C98124) * C154468 + C97352 * C154480) *
               C154021 +
           ((C97635 + C97634) * C154442 + C98108 * C154468 + C97353 * C154480) *
               C74048) *
              C154082 * C154066 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
              C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
                 C154480 +
             (C101527 + C101528) * C154468 + C101539 * C154442) *
                C74048 +
            ((C97340 + C97341) * C154480 + C101466 * C154468 +
             C101467 * C154442) *
                C154021) *
               C154082 * C338 -
           ((C101540 * C154442 + C101476 * C154468 + C101477 * C154480) *
                C154021 +
            ((C101533 + C101534) * C154442 + (C101530 + C101529) * C154468 +
             (C101528 + C101527) * C154480) *
                C74048) *
               C154082 * C339 +
           ((C101539 * C154480 + (C101534 + C101533) * C154468 +
             (C97275 * C3143 - C97276 * C3139 - C97275 * C3144 +
              C97273 * C3151 + C97277 * C5664 - C97278 * C5659 -
              C97277 * C5665 + C154268 * C5668) *
                 C154442) *
                C74048 +
            (C101467 * C154480 + C101541 * C154468 +
             (C101535 + C101536) * C154442) *
                C154021) *
               C154082 * C340) *
              C341 +
          (((C101466 * C154480 + C101467 * C154468 + C101541 * C154442) *
                C74048 +
            ((C97627 + C97626) * C154480 + (C97632 + C97633) * C154468 +
             (C101537 + C101538) * C154442) *
                C154021) *
               C154082 * C339 -
           ((C101502 * C154442 + C98109 * C154468 +
             (C97343 + C97342) * C154480) *
                C154021 +
            (C101476 * C154442 + C101477 * C154468 +
             (C97341 + C97340) * C154480) *
                C74048) *
               C154082 * C338 -
           (((C97277 * C5660 - C97278 * C5657 - C97277 * C5661 +
              C154268 * C5666 + C97275 * C3147 - C97276 * C3141 -
              C97275 * C3148 + C97273 * C3153) *
                 C154442 +
             (C101538 + C101537) * C154468 + C101502 * C154480) *
                C154021 +
            ((C101536 + C101535) * C154442 + C101540 * C154468 +
             C101476 * C154480) *
                C74048) *
               C154082 * C340) *
              C154053)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
              C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
                 C154480 +
             (C101527 + C101528) * C154468 + C101539 * C154442) *
                C74048 +
            ((C97340 + C97341) * C154480 + C101466 * C154468 +
             C101467 * C154442) *
                C154021) *
               C577 -
           (((C101868 + C101869) * C154442 + (C98633 + C98632) * C154468 +
             (C97906 + C97907) * C154480) *
                C154021 +
            ((C97277 * C3445 - C97278 * C3441 - C97277 * C3446 +
              C154268 * C3453 + C97275 * C1985 - C97276 * C1976 -
              C97275 * C1986 + C97273 * C1991) *
                 C154442 +
             (C97277 * C1554 - C97278 * C1545 - C97277 * C1555 +
              C154268 * C1560 + C97275 * C1135 - C97276 * C1129 -
              C97275 * C1136 + C97273 * C1147) *
                 C154468 +
             (C97277 * C602 - C97278 * C585 - C97277 * C603 + C154268 * C621 +
              C97275 * C600 - C97276 * C584 - C97275 * C601 + C97273 * C620) *
                 C154480) *
                C74048) *
               C578 +
           (((C97275 * C602 - C97276 * C585 - C97275 * C603 + C97273 * C621 +
              C97277 * C2337 - C97278 * C2328 - C97277 * C2338 +
              C154268 * C2343) *
                 C154480 +
             (C97275 * C1554 - C97276 * C1545 - C97275 * C1555 +
              C97273 * C1560 + C97277 * C6274 - C97278 * C6263 -
              C97277 * C6275 + C154268 * C6281) *
                 C154468 +
             (C97275 * C3445 - C97276 * C3441 - C97275 * C3446 +
              C97273 * C3453 + C97277 * C6272 - C97278 * C6262 -
              C97277 * C6273 + C154268 * C6280) *
                 C154442) *
                C74048 +
            ((C97908 + C97909) * C154480 + (C101870 + C101871) * C154468 +
             (C101872 + C101873) * C154442) *
                C154021) *
               C579) *
              C154066 * C341 +
          ((((C97907 + C97906) * C154480 + (C98632 + C98633) * C154468 +
             (C101869 + C101868) * C154442) *
                C74048 +
            ((C97905 + C97904) * C154480 + (C98634 + C98635) * C154468 +
             (C97275 * C1981 - C97276 * C1974 - C97275 * C1982 +
              C97273 * C1989 + C97277 * C3449 - C97278 * C3443 -
              C97277 * C3450 + C154268 * C3455) *
                 C154442) *
                C154021) *
               C578 -
           ((C101502 * C154442 + C98109 * C154468 +
             (C97343 + C97342) * C154480) *
                C154021 +
            (C101476 * C154442 + C101477 * C154468 +
             (C97341 + C97340) * C154480) *
                C74048) *
               C577 -
           (((C97277 * C6264 - C97278 * C6258 - C97277 * C6265 +
              C154268 * C6276 + C97275 * C3449 - C97276 * C3443 -
              C97275 * C3450 + C97273 * C3455) *
                 C154442 +
             (C97277 * C6266 - C97278 * C6259 - C97277 * C6267 +
              C154268 * C6277 + C97275 * C1550 - C97276 * C1543 -
              C97275 * C1551 + C97273 * C1558) *
                 C154468 +
             (C97911 + C97910) * C154480) *
                C154021 +
            ((C101873 + C101872) * C154442 + (C101871 + C101870) * C154468 +
             (C97909 + C97908) * C154480) *
                C74048) *
               C579) *
              C154066 * C154053)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C106573 * C144 - C106574 * C136 - C106573 * C145 + C154488 * C160 +
            C106575 * C600 - C106576 * C584 - C106575 * C601 + C154485 * C620 +
            C106577 * C602 - C106578 * C585 - C106577 * C603 + C154476 * C621 +
            C106579 * C2337 - C106580 * C2328 - C106579 * C2338 +
            C154422 * C2343) *
               C154164 * C74048 +
           (C106654 + C106655 + C106656 + C106657) * C154164 * C154021) *
              C154082 * C154066 * C130 -
          ((C106658 + C106659 + C106660 + C106661) * C154164 * C154021 +
           (C106657 + C106656 + C106655 + C106654) * C154164 * C74048) *
              C154082 * C154066 * C131 +
          ((C106661 + C106660 + C106659 + C106658) * C154164 * C74048 +
           (C106662 + C106663 + C106664 + C106665) * C154164 * C154021) *
              C154082 * C154066 * C132 -
          ((C106579 * C2329 - C106580 * C2324 - C106579 * C2330 +
            C154422 * C2339 + C106577 * C610 - C106578 * C589 - C106577 * C611 +
            C154476 * C625 + C106575 * C592 - C106576 * C580 - C106575 * C593 +
            C154485 * C616 + C106573 * C152 - C106574 * C140 - C106573 * C153 +
            C154488 * C164) *
               C154164 * C154021 +
           (C106665 + C106664 + C106663 + C106662) * C154164 * C74048) *
              C154082 * C154066 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C106573 * C144 - C106574 * C136 - C106573 * C145 + C154488 * C160 +
             C106575 * C600 - C106576 * C584 - C106575 * C601 + C154485 * C620 +
             C106577 * C602 - C106578 * C585 - C106577 * C603 + C154476 * C621 +
             C106579 * C2337 - C106580 * C2328 - C106579 * C2338 +
             C154422 * C2343) *
                C154164 * C74048 +
            (C106654 + C106655 + C106656 + C106657) * C154164 * C154021) *
               C154082 * C338 -
           ((C106908 + C106909 + C106910 + C106911) * C154164 * C154021 +
            (C106579 * C6274 - C106580 * C6263 - C106579 * C6275 +
             C154422 * C6281 + C106577 * C1554 - C106578 * C1545 -
             C106577 * C1555 + C154476 * C1560 + C106575 * C1135 -
             C106576 * C1129 - C106575 * C1136 + C154485 * C1147 +
             C106573 * C363 - C106574 * C347 - C106573 * C364 +
             C154488 * C383) *
                C154164 * C74048) *
               C154082 * C339 +
           ((C106573 * C365 - C106574 * C348 - C106573 * C366 + C154488 * C384 +
             C106575 * C1985 - C106576 * C1976 - C106575 * C1986 +
             C154485 * C1991 + C106577 * C3445 - C106578 * C3441 -
             C106577 * C3446 + C154476 * C3453 + C106579 * C6272 -
             C106580 * C6262 - C106579 * C6273 + C154422 * C6280) *
                C154164 * C74048 +
            (C106912 + C106913 + C106914 + C106915) * C154164 * C154021) *
               C154082 * C340) *
              C341 +
          (((C106911 + C106910 + C106909 + C106908) * C154164 * C74048 +
            (C106573 * C359 - C106574 * C345 - C106573 * C360 + C154488 * C381 +
             C106575 * C1139 - C106576 * C1131 - C106575 * C1140 +
             C154485 * C1149 + C106577 * C1550 - C106578 * C1543 -
             C106577 * C1551 + C154476 * C1558 + C106579 * C6266 -
             C106580 * C6259 - C106579 * C6267 + C154422 * C6277) *
                C154164 * C154021) *
               C154082 * C339 -
           ((C106658 + C106659 + C106660 + C106661) * C154164 * C154021 +
            (C106657 + C106656 + C106655 + C106654) * C154164 * C74048) *
               C154082 * C338 -
           ((C106579 * C6264 - C106580 * C6258 - C106579 * C6265 +
             C154422 * C6276 + C106577 * C3449 - C106578 * C3443 -
             C106577 * C3450 + C154476 * C3455 + C106575 * C1981 -
             C106576 * C1974 - C106575 * C1982 + C154485 * C1989 +
             C106573 * C369 - C106574 * C350 - C106573 * C370 +
             C154488 * C386) *
                C154164 * C154021 +
            (C106915 + C106914 + C106913 + C106912) * C154164 * C74048) *
               C154082 * C340) *
              C154053)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C106573 * C144 - C106574 * C136 - C106573 * C145 + C154488 * C160 +
             C106575 * C600 - C106576 * C584 - C106575 * C601 + C154485 * C620 +
             C106577 * C602 - C106578 * C585 - C106577 * C603 + C154476 * C621 +
             C106579 * C2337 - C106580 * C2328 - C106579 * C2338 +
             C154422 * C2343) *
                C154164 * C74048 +
            (C106654 + C106655 + C106656 + C106657) * C154164 * C154021) *
               C577 -
           ((C107158 + C107159 + C107160 + C107161) * C154164 * C154021 +
            (C106579 * C7777 - C106580 * C7773 - C106579 * C7778 +
             C154422 * C7785 + C106577 * C2337 - C106578 * C2328 -
             C106577 * C2338 + C154476 * C2343 + C106575 * C602 -
             C106576 * C585 - C106575 * C603 + C154485 * C621 + C106573 * C600 -
             C106574 * C584 - C106573 * C601 + C154488 * C620) *
                C154164 * C74048) *
               C578 +
           ((C106573 * C602 - C106574 * C585 - C106573 * C603 + C154488 * C621 +
             C106575 * C2337 - C106576 * C2328 - C106575 * C2338 +
             C154485 * C2343 + C106577 * C7777 - C106578 * C7773 -
             C106577 * C7778 + C154476 * C7785 + C106579 * C10602 -
             C106580 * C10597 - C106579 * C10603 + C154422 * C10606) *
                C154164 * C74048 +
            (C107162 + C107163 + C107164 + C107165) * C154164 * C154021) *
               C579) *
              C154066 * C341 +
          (((C107161 + C107160 + C107159 + C107158) * C154164 * C74048 +
            (C106573 * C596 - C106574 * C582 - C106573 * C597 + C154488 * C618 +
             C106575 * C606 - C106576 * C587 - C106575 * C607 + C154485 * C623 +
             C106577 * C2333 - C106578 * C2326 - C106577 * C2334 +
             C154476 * C2341 + C106579 * C7781 - C106580 * C7775 -
             C106579 * C7782 + C154422 * C7787) *
                C154164 * C154021) *
               C578 -
           ((C106658 + C106659 + C106660 + C106661) * C154164 * C154021 +
            (C106657 + C106656 + C106655 + C106654) * C154164 * C74048) *
               C577 -
           ((C106579 * C10598 - C106580 * C10595 - C106579 * C10599 +
             C154422 * C10604 + C106577 * C7781 - C106578 * C7775 -
             C106577 * C7782 + C154476 * C7787 + C106575 * C2333 -
             C106576 * C2326 - C106575 * C2334 + C154485 * C2341 +
             C106573 * C606 - C106574 * C587 - C106573 * C607 +
             C154488 * C623) *
                C154164 * C154021 +
            (C107165 + C107164 + C107163 + C107162) * C154164 * C74048) *
               C579) *
              C154066 * C154053)) /
            (p * q * std::sqrt(p + q));
    d2ee[258] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
              C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
                 C154480 +
             (C101527 + C101528) * C154468 + C101539 * C154442) *
                C74048 +
            ((C97340 + C97341) * C154480 + C101466 * C154468 +
             C101467 * C154442) *
                C154021) *
               C154393 -
           (((C101868 + C101869) * C154442 + (C98633 + C98632) * C154468 +
             (C97906 + C97907) * C154480) *
                C154021 +
            ((C97277 * C3445 - C97278 * C3441 - C97277 * C3446 +
              C154268 * C3453 + C97275 * C1985 - C97276 * C1976 -
              C97275 * C1986 + C97273 * C1991) *
                 C154442 +
             (C97277 * C1554 - C97278 * C1545 - C97277 * C1555 +
              C154268 * C1560 + C97275 * C1135 - C97276 * C1129 -
              C97275 * C1136 + C97273 * C1147) *
                 C154468 +
             (C97277 * C602 - C97278 * C585 - C97277 * C603 + C154268 * C621 +
              C97275 * C600 - C97276 * C584 - C97275 * C601 + C97273 * C620) *
                 C154480) *
                C74048) *
               C154146) *
              C154066 * C154461 +
          ((((C97907 + C97906) * C154480 + (C98632 + C98633) * C154468 +
             (C101869 + C101868) * C154442) *
                C74048 +
            ((C97905 + C97904) * C154480 + (C98634 + C98635) * C154468 +
             (C102468 + C102469) * C154442) *
                C154021) *
               C154146 -
           ((C101502 * C154442 + C98109 * C154468 +
             (C97343 + C97342) * C154480) *
                C154021 +
            (C101476 * C154442 + C101477 * C154468 +
             (C97341 + C97340) * C154480) *
                C74048) *
               C154393) *
              C154066 * C154462 +
          (((C97350 * C154480 + C102164 * C154468 + C102165 * C154442) *
                C74048 +
            (C97351 * C154480 + (C97625 + C97624) * C154468 +
             (C97634 + C97635) * C154442) *
                C154021) *
               C154393 -
           (((C97277 * C3451 - C97278 * C3444 - C97277 * C3452 +
              C154268 * C3456 + C97275 * C1979 - C97276 * C1973 -
              C97275 * C1980 + C97273 * C1988) *
                 C154442 +
             (C98637 + C98636) * C154468 + C98320 * C154480) *
                C154021 +
            ((C102469 + C102468) * C154442 + (C98635 + C98634) * C154468 +
             C98321 * C154480) *
                C74048) *
               C154146) *
              C154066 * C818)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
             C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
                C154164 * C154486 +
            (C97340 + C97341) * C154164 * C154479 + C97354 * C154460 +
            C97355 * C154407) *
               C154393 -
           (C98330 * C154407 + C98331 * C154460 +
            (C97906 + C97907) * C154164 * C154479 +
            (C97277 * C602 - C97278 * C585 - C97277 * C603 + C154268 * C621 +
             C97275 * C600 - C97276 * C584 - C97275 * C601 + C97273 * C620) *
                C154164 * C154486) *
               C154146) *
              C154066 * C154461 +
          (((C97907 + C97906) * C154164 * C154486 +
            (C97905 + C97904) * C154164 * C154479 +
            (C97903 + C97902) * C154164 * C154460 +
            (C98336 + C98337) * C154164 * C154407) *
               C154146 -
           (C97356 * C154407 + C97357 * C154460 +
            (C97343 + C97342) * C154164 * C154479 +
            (C97341 + C97340) * C154164 * C154486) *
               C154393) *
              C154066 * C154462 +
          ((C97354 * C154486 + C97355 * C154479 +
            (C97347 + C97346) * C154164 * C154460 +
            (C97348 + C97349) * C154164 * C154407) *
               C154393 -
           ((C97277 * C614 - C97278 * C591 - C97277 * C615 + C154268 * C627 +
             C97275 * C612 - C97276 * C590 - C97275 * C613 + C97273 * C626) *
                C154164 * C154407 +
            (C98337 + C98336) * C154164 * C154460 + C98330 * C154479 +
            C98331 * C154486) *
               C154146) *
              C154066 * C818)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C106573 * C144 - C106574 * C136 - C106573 * C145 + C154488 * C160 +
             C106575 * C600 - C106576 * C584 - C106575 * C601 + C154485 * C620 +
             C106577 * C602 - C106578 * C585 - C106577 * C603 + C154476 * C621 +
             C106579 * C2337 - C106580 * C2328 - C106579 * C2338 +
             C154422 * C2343) *
                C154164 * C74048 +
            (C106654 + C106655 + C106656 + C106657) * C154164 * C154021) *
               C154393 -
           ((C107158 + C107159 + C107160 + C107161) * C154164 * C154021 +
            (C106579 * C7777 - C106580 * C7773 - C106579 * C7778 +
             C154422 * C7785 + C106577 * C2337 - C106578 * C2328 -
             C106577 * C2338 + C154476 * C2343 + C106575 * C602 -
             C106576 * C585 - C106575 * C603 + C154485 * C621 + C106573 * C600 -
             C106574 * C584 - C106573 * C601 + C154488 * C620) *
                C154164 * C74048) *
               C154146) *
              C154066 * C154461 +
          (((C107161 + C107160 + C107159 + C107158) * C154164 * C74048 +
            (C107606 + C107607 + C107608 + C107609) * C154164 * C154021) *
               C154146 -
           ((C106658 + C106659 + C106660 + C106661) * C154164 * C154021 +
            (C106657 + C106656 + C106655 + C106654) * C154164 * C74048) *
               C154393) *
              C154066 * C154462 +
          (((C106661 + C106660 + C106659 + C106658) * C154164 * C74048 +
            (C106662 + C106663 + C106664 + C106665) * C154164 * C154021) *
               C154393 -
           ((C106579 * C7783 - C106580 * C7776 - C106579 * C7784 +
             C154422 * C7788 + C106577 * C2331 - C106578 * C2325 -
             C106577 * C2332 + C154476 * C2340 + C106575 * C608 -
             C106576 * C588 - C106575 * C609 + C154485 * C624 + C106573 * C594 -
             C106574 * C581 - C106573 * C595 + C154488 * C617) *
                C154164 * C154021 +
            (C107609 + C107608 + C107607 + C107606) * C154164 * C74048) *
               C154146) *
              C154066 * C818)) /
            (p * q * std::sqrt(p + q));
    d2ee[259] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
             C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
                C154164 * C154486 +
            (C97340 + C97341) * C154164 * C154479 + C97354 * C154460 +
            C97355 * C154407) *
               C154082 * C338 -
           ((C97624 + C97625) * C154164 * C154407 +
            (C97626 + C97627) * C154164 * C154460 +
            (C97628 + C97629) * C154164 * C154479 +
            (C97277 * C1135 - C97278 * C1129 - C97277 * C1136 +
             C154268 * C1147 + C97275 * C363 - C97276 * C347 - C97275 * C364 +
             C97273 * C383) *
                C154164 * C154486) *
               C154082 * C339 +
           ((C97275 * C365 - C97276 * C348 - C97275 * C366 + C97273 * C384 +
             C97277 * C1985 - C97278 * C1976 - C97277 * C1986 +
             C154268 * C1991) *
                C154164 * C154486 +
            (C97630 + C97631) * C154164 * C154479 +
            (C97632 + C97633) * C154164 * C154460 +
            (C97634 + C97635) * C154164 * C154407) *
               C154082 * C340) *
              C341 +
          (((C97629 + C97628) * C154164 * C154486 +
            (C97627 + C97626) * C154164 * C154479 +
            (C97625 + C97624) * C154164 * C154460 +
            (C97275 * C355 - C97276 * C343 - C97275 * C356 + C97273 * C379 +
             C97277 * C1143 - C97278 * C1133 - C97277 * C1144 +
             C154268 * C1151) *
                C154164 * C154407) *
               C154082 * C339 -
           (C97356 * C154407 + C97357 * C154460 +
            (C97343 + C97342) * C154164 * C154479 +
            (C97341 + C97340) * C154164 * C154486) *
               C154082 * C338 -
           ((C97277 * C1977 - C97278 * C1972 - C97277 * C1978 +
             C154268 * C1987 + C97275 * C373 - C97276 * C352 - C97275 * C374 +
             C97273 * C388) *
                C154164 * C154407 +
            (C97635 + C97634) * C154164 * C154460 +
            (C97633 + C97632) * C154164 * C154479 +
            (C97631 + C97630) * C154164 * C154486) *
               C154082 * C340) *
              C154053)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
            C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
               C154164 * C154486 +
           (C97340 + C97341) * C154164 * C154479 + C97354 * C154460 +
           C97355 * C154407) *
              C154082 * C154066 * C130 -
          (C97356 * C154407 + C97357 * C154460 +
           (C97343 + C97342) * C154164 * C154479 +
           (C97341 + C97340) * C154164 * C154486) *
              C154082 * C154066 * C131 +
          (C97354 * C154486 + C97355 * C154479 +
           (C97347 + C97346) * C154164 * C154460 +
           (C97348 + C97349) * C154164 * C154407) *
              C154082 * C154066 * C132 -
          ((C97277 * C956 - C97278 * C955 - C97277 * C957 + C154268 * C958 +
            C97275 * C156 - C97276 * C142 - C97275 * C157 + C97273 * C166) *
               C154164 * C154407 +
           (C97349 + C97348) * C154164 * C154460 + C97356 * C154479 +
           C97357 * C154486) *
              C154082 * C154066 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
             C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
                C154480 +
            (C97275 * C363 - C97276 * C347 - C97275 * C364 + C97273 * C383 +
             C97277 * C1135 - C97278 * C1129 - C97277 * C1136 +
             C154268 * C1147) *
                C154468 +
            (C97275 * C365 - C97276 * C348 - C97275 * C366 + C97273 * C384 +
             C97277 * C1985 - C97278 * C1976 - C97277 * C1986 +
             C154268 * C1991) *
                C154442) *
               C74048 +
           ((C97340 + C97341) * C154480 + (C97629 + C97628) * C154468 +
            (C97630 + C97631) * C154442) *
               C154021) *
              C154082 * C154066 * C130 -
          (((C97633 + C97632) * C154442 + C98109 * C154468 +
            (C97343 + C97342) * C154480) *
               C154021 +
           ((C97631 + C97630) * C154442 + (C97628 + C97629) * C154468 +
            (C97341 + C97340) * C154480) *
               C74048) *
              C154082 * C154066 * C131 +
          ((C97350 * C154480 + (C97627 + C97626) * C154468 +
            (C97632 + C97633) * C154442) *
               C74048 +
           (C97351 * C154480 + (C97625 + C97624) * C154468 +
            (C97634 + C97635) * C154442) *
               C154021) *
              C154082 * C154066 * C132 -
          (((C97277 * C1977 - C97278 * C1972 - C97277 * C1978 +
             C154268 * C1987 + C97275 * C373 - C97276 * C352 - C97275 * C374 +
             C97273 * C388) *
                C154442 +
            (C98125 + C98124) * C154468 + C97352 * C154480) *
               C154021 +
           ((C97635 + C97634) * C154442 + C98108 * C154468 + C97353 * C154480) *
               C74048) *
              C154082 * C154066 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
              C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
                 C154480 +
             (C101527 + C101528) * C154468 + C101539 * C154442) *
                C74048 +
            ((C97340 + C97341) * C154480 + C101466 * C154468 +
             C101467 * C154442) *
                C154021) *
               C154082 * C338 -
           ((C101540 * C154442 + C101476 * C154468 + C101477 * C154480) *
                C154021 +
            ((C101533 + C101534) * C154442 + (C101530 + C101529) * C154468 +
             (C101528 + C101527) * C154480) *
                C74048) *
               C154082 * C339 +
           ((C101539 * C154480 + (C101534 + C101533) * C154468 +
             (C97275 * C3143 - C97276 * C3139 - C97275 * C3144 +
              C97273 * C3151 + C97277 * C5664 - C97278 * C5659 -
              C97277 * C5665 + C154268 * C5668) *
                 C154442) *
                C74048 +
            (C101467 * C154480 + C101541 * C154468 +
             (C101535 + C101536) * C154442) *
                C154021) *
               C154082 * C340) *
              C341 +
          (((C101466 * C154480 + C101467 * C154468 + C101541 * C154442) *
                C74048 +
            ((C97627 + C97626) * C154480 + (C97632 + C97633) * C154468 +
             (C101537 + C101538) * C154442) *
                C154021) *
               C154082 * C339 -
           ((C101502 * C154442 + C98109 * C154468 +
             (C97343 + C97342) * C154480) *
                C154021 +
            (C101476 * C154442 + C101477 * C154468 +
             (C97341 + C97340) * C154480) *
                C74048) *
               C154082 * C338 -
           (((C97277 * C5660 - C97278 * C5657 - C97277 * C5661 +
              C154268 * C5666 + C97275 * C3147 - C97276 * C3141 -
              C97275 * C3148 + C97273 * C3153) *
                 C154442 +
             (C101538 + C101537) * C154468 + C101502 * C154480) *
                C154021 +
            ((C101536 + C101535) * C154442 + C101540 * C154468 +
             C101476 * C154480) *
                C74048) *
               C154082 * C340) *
              C154053)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C106573 * C144 - C106574 * C136 - C106573 * C145 + C154488 * C160 +
            C106575 * C600 - C106576 * C584 - C106575 * C601 + C154485 * C620 +
            C106577 * C602 - C106578 * C585 - C106577 * C603 + C154476 * C621 +
            C106579 * C2337 - C106580 * C2328 - C106579 * C2338 +
            C154422 * C2343) *
               C154164 * C74048 +
           (C106654 + C106655 + C106656 + C106657) * C154164 * C154021) *
              C154082 * C154066 * C130 -
          ((C106658 + C106659 + C106660 + C106661) * C154164 * C154021 +
           (C106657 + C106656 + C106655 + C106654) * C154164 * C74048) *
              C154082 * C154066 * C131 +
          ((C106661 + C106660 + C106659 + C106658) * C154164 * C74048 +
           (C106662 + C106663 + C106664 + C106665) * C154164 * C154021) *
              C154082 * C154066 * C132 -
          ((C106579 * C2329 - C106580 * C2324 - C106579 * C2330 +
            C154422 * C2339 + C106577 * C610 - C106578 * C589 - C106577 * C611 +
            C154476 * C625 + C106575 * C592 - C106576 * C580 - C106575 * C593 +
            C154485 * C616 + C106573 * C152 - C106574 * C140 - C106573 * C153 +
            C154488 * C164) *
               C154164 * C154021 +
           (C106665 + C106664 + C106663 + C106662) * C154164 * C74048) *
              C154082 * C154066 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C106573 * C144 - C106574 * C136 - C106573 * C145 + C154488 * C160 +
             C106575 * C600 - C106576 * C584 - C106575 * C601 + C154485 * C620 +
             C106577 * C602 - C106578 * C585 - C106577 * C603 + C154476 * C621 +
             C106579 * C2337 - C106580 * C2328 - C106579 * C2338 +
             C154422 * C2343) *
                C154164 * C74048 +
            (C106654 + C106655 + C106656 + C106657) * C154164 * C154021) *
               C154082 * C338 -
           ((C106908 + C106909 + C106910 + C106911) * C154164 * C154021 +
            (C106579 * C6274 - C106580 * C6263 - C106579 * C6275 +
             C154422 * C6281 + C106577 * C1554 - C106578 * C1545 -
             C106577 * C1555 + C154476 * C1560 + C106575 * C1135 -
             C106576 * C1129 - C106575 * C1136 + C154485 * C1147 +
             C106573 * C363 - C106574 * C347 - C106573 * C364 +
             C154488 * C383) *
                C154164 * C74048) *
               C154082 * C339 +
           ((C106573 * C365 - C106574 * C348 - C106573 * C366 + C154488 * C384 +
             C106575 * C1985 - C106576 * C1976 - C106575 * C1986 +
             C154485 * C1991 + C106577 * C3445 - C106578 * C3441 -
             C106577 * C3446 + C154476 * C3453 + C106579 * C6272 -
             C106580 * C6262 - C106579 * C6273 + C154422 * C6280) *
                C154164 * C74048 +
            (C106912 + C106913 + C106914 + C106915) * C154164 * C154021) *
               C154082 * C340) *
              C341 +
          (((C106911 + C106910 + C106909 + C106908) * C154164 * C74048 +
            (C106573 * C359 - C106574 * C345 - C106573 * C360 + C154488 * C381 +
             C106575 * C1139 - C106576 * C1131 - C106575 * C1140 +
             C154485 * C1149 + C106577 * C1550 - C106578 * C1543 -
             C106577 * C1551 + C154476 * C1558 + C106579 * C6266 -
             C106580 * C6259 - C106579 * C6267 + C154422 * C6277) *
                C154164 * C154021) *
               C154082 * C339 -
           ((C106658 + C106659 + C106660 + C106661) * C154164 * C154021 +
            (C106657 + C106656 + C106655 + C106654) * C154164 * C74048) *
               C154082 * C338 -
           ((C106579 * C6264 - C106580 * C6258 - C106579 * C6265 +
             C154422 * C6276 + C106577 * C3449 - C106578 * C3443 -
             C106577 * C3450 + C154476 * C3455 + C106575 * C1981 -
             C106576 * C1974 - C106575 * C1982 + C154485 * C1989 +
             C106573 * C369 - C106574 * C350 - C106573 * C370 +
             C154488 * C386) *
                C154164 * C154021 +
            (C106915 + C106914 + C106913 + C106912) * C154164 * C74048) *
               C154082 * C340) *
              C154053)) /
            (p * q * std::sqrt(p + q));
    d2ee[260] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
              C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
                 C154480 +
             (C101527 + C101528) * C154468 + C101539 * C154442) *
                C74048 +
            ((C97340 + C97341) * C154480 + C101466 * C154468 +
             C101467 * C154442) *
                C154021) *
               C154082 * C154463 -
           ((C101540 * C154442 + C101476 * C154468 + C101477 * C154480) *
                C154021 +
            (C103386 * C154442 + (C101530 + C101529) * C154468 +
             (C101528 + C101527) * C154480) *
                C74048) *
               C154082 * C154464 +
           ((C101539 * C154480 + (C101534 + C101533) * C154468 +
             (C103399 + C103400) * C154442) *
                C74048 +
            (C101467 * C154480 + C101541 * C154468 +
             (C101535 + C101536) * C154442) *
                C154021) *
               C154082 * C1685) *
              C154384 +
          (((C101466 * C154480 + C101467 * C154468 + C101541 * C154442) *
                C74048 +
            (C102164 * C154480 + C102165 * C154468 +
             (C101537 + C101538) * C154442) *
                C154021) *
               C154082 * C154464 -
           ((C101502 * C154442 + C98109 * C154468 +
             (C97343 + C97342) * C154480) *
                C154021 +
            (C101476 * C154442 + C101477 * C154468 +
             (C97341 + C97340) * C154480) *
                C74048) *
               C154082 * C154463 -
           (((C97277 * C5660 - C97278 * C5657 - C97277 * C5661 +
              C154268 * C5666 + C97275 * C3147 - C97276 * C3141 -
              C97275 * C3148 + C97273 * C3153) *
                 C154442 +
             (C101538 + C101537) * C154468 + C101502 * C154480) *
                C154021 +
            ((C101536 + C101535) * C154442 + C101540 * C154468 +
             C101476 * C154480) *
                C74048) *
               C154082 * C1685) *
              C154053)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
             C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
                C154164 * C154486 +
            (C97340 + C97341) * C154164 * C154479 + C97354 * C154460 +
            C97355 * C154407) *
               C154082 * C154463 -
           (C98118 * C154407 + C98119 * C154460 +
            (C97628 + C97629) * C154164 * C154479 +
            (C97277 * C1135 - C97278 * C1129 - C97277 * C1136 +
             C154268 * C1147 + C97275 * C363 - C97276 * C347 - C97275 * C364 +
             C97273 * C383) *
                C154164 * C154486) *
               C154082 * C154464 +
           ((C97275 * C365 - C97276 * C348 - C97275 * C366 + C97273 * C384 +
             C97277 * C1985 - C97278 * C1976 - C97277 * C1986 +
             C154268 * C1991) *
                C154164 * C154486 +
            (C97630 + C97631) * C154164 * C154479 +
            (C97632 + C97633) * C154164 * C154460 +
            (C97634 + C97635) * C154164 * C154407) *
               C154082 * C1685) *
              C154384 +
          (((C97629 + C97628) * C154164 * C154486 +
            (C97627 + C97626) * C154164 * C154479 +
            (C97625 + C97624) * C154164 * C154460 +
            (C98124 + C98125) * C154164 * C154407) *
               C154082 * C154464 -
           (C97356 * C154407 + C97357 * C154460 +
            (C97343 + C97342) * C154164 * C154479 +
            (C97341 + C97340) * C154164 * C154486) *
               C154082 * C154463 -
           ((C97277 * C1977 - C97278 * C1972 - C97277 * C1978 +
             C154268 * C1987 + C97275 * C373 - C97276 * C352 - C97275 * C374 +
             C97273 * C388) *
                C154164 * C154407 +
            (C97635 + C97634) * C154164 * C154460 +
            (C97633 + C97632) * C154164 * C154479 +
            (C97631 + C97630) * C154164 * C154486) *
               C154082 * C1685) *
              C154053)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C106573 * C144 - C106574 * C136 - C106573 * C145 + C154488 * C160 +
             C106575 * C600 - C106576 * C584 - C106575 * C601 + C154485 * C620 +
             C106577 * C602 - C106578 * C585 - C106577 * C603 + C154476 * C621 +
             C106579 * C2337 - C106580 * C2328 - C106579 * C2338 +
             C154422 * C2343) *
                C154164 * C74048 +
            (C106654 + C106655 + C106656 + C106657) * C154164 * C154021) *
               C154082 * C154463 -
           ((C106908 + C106909 + C106910 + C106911) * C154164 * C154021 +
            (C106579 * C6274 - C106580 * C6263 - C106579 * C6275 +
             C154422 * C6281 + C106577 * C1554 - C106578 * C1545 -
             C106577 * C1555 + C154476 * C1560 + C106575 * C1135 -
             C106576 * C1129 - C106575 * C1136 + C154485 * C1147 +
             C106573 * C363 - C106574 * C347 - C106573 * C364 +
             C154488 * C383) *
                C154164 * C74048) *
               C154082 * C154464 +
           ((C106573 * C365 - C106574 * C348 - C106573 * C366 + C154488 * C384 +
             C106575 * C1985 - C106576 * C1976 - C106575 * C1986 +
             C154485 * C1991 + C106577 * C3445 - C106578 * C3441 -
             C106577 * C3446 + C154476 * C3453 + C106579 * C6272 -
             C106580 * C6262 - C106579 * C6273 + C154422 * C6280) *
                C154164 * C74048 +
            (C106912 + C106913 + C106914 + C106915) * C154164 * C154021) *
               C154082 * C1685) *
              C154384 +
          (((C106911 + C106910 + C106909 + C106908) * C154164 * C74048 +
            (C107384 + C107385 + C107386 + C107387) * C154164 * C154021) *
               C154082 * C154464 -
           ((C106658 + C106659 + C106660 + C106661) * C154164 * C154021 +
            (C106657 + C106656 + C106655 + C106654) * C154164 * C74048) *
               C154082 * C154463 -
           ((C106579 * C6264 - C106580 * C6258 - C106579 * C6265 +
             C154422 * C6276 + C106577 * C3449 - C106578 * C3443 -
             C106577 * C3450 + C154476 * C3455 + C106575 * C1981 -
             C106576 * C1974 - C106575 * C1982 + C154485 * C1989 +
             C106573 * C369 - C106574 * C350 - C106573 * C370 +
             C154488 * C386) *
                C154164 * C154021 +
            (C106915 + C106914 + C106913 + C106912) * C154164 * C74048) *
               C154082 * C1685) *
              C154053)) /
            (p * q * std::sqrt(p + q));
    d2ee[261] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
              C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
                 C154480 +
             (C101527 + C101528) * C154468 + C101539 * C154442) *
                C74048 +
            ((C97340 + C97341) * C154480 + C101466 * C154468 +
             C101467 * C154442) *
                C154021) *
               C154393 -
           ((C102856 * C154442 + C102857 * C154468 +
             (C97906 + C97907) * C154480) *
                C154021 +
            (C104685 * C154442 + (C102898 + C102899) * C154468 +
             (C97277 * C602 - C97278 * C585 - C97277 * C603 + C154268 * C621 +
              C97275 * C600 - C97276 * C584 - C97275 * C601 + C97273 * C620) *
                 C154480) *
                C74048) *
               C154146) *
              C154463 +
          ((((C102899 + C102898) * C154480 + (C102897 + C102896) * C154468 +
             (C104698 + C104699) * C154442) *
                C74048 +
            (C102874 * C154480 + C102875 * C154468 +
             (C102900 + C102901) * C154442) *
                C154021) *
               C154146 -
           ((C101540 * C154442 + C101476 * C154468 + C101477 * C154480) *
                C154021 +
            (C103386 * C154442 + (C101530 + C101529) * C154468 +
             (C101528 + C101527) * C154480) *
                C74048) *
               C154393) *
              C154464 +
          (((C101539 * C154480 + (C101534 + C101533) * C154468 +
             (C103399 + C103400) * C154442) *
                C74048 +
            (C101467 * C154480 + C101541 * C154468 +
             (C101535 + C101536) * C154442) *
                C154021) *
               C154393 -
           (((C97277 * C28468 - C97278 * C28465 - C97277 * C28469 +
              C154268 * C28471 + C97275 * C5662 - C97276 * C5658 -
              C97275 * C5663 + C97273 * C5667) *
                 C154442 +
             (C102901 + C102900) * C154468 + C102856 * C154480) *
                C154021 +
            ((C97277 * C28466 - C97278 * C28464 - C97277 * C28467 +
              C154268 * C28470 + C97275 * C5664 - C97276 * C5659 -
              C97275 * C5665 + C97273 * C5668) *
                 C154442 +
             (C104699 + C104698) * C154468 + C104685 * C154480) *
                C74048) *
               C154146) *
              C1685) *
         C154047) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
             C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
                C154164 * C154486 +
            (C97340 + C97341) * C154164 * C154479 + C97354 * C154460 +
            C97355 * C154407) *
               C154393 -
           (C98330 * C154407 + C98331 * C154460 +
            (C97906 + C97907) * C154164 * C154479 +
            (C97277 * C602 - C97278 * C585 - C97277 * C603 + C154268 * C621 +
             C97275 * C600 - C97276 * C584 - C97275 * C601 + C97273 * C620) *
                C154164 * C154486) *
               C154146) *
              C154463 +
          (((C97275 * C1135 - C97276 * C1129 - C97275 * C1136 + C97273 * C1147 +
             C97277 * C1554 - C97278 * C1545 - C97277 * C1555 +
             C154268 * C1560) *
                C154164 * C154486 +
            (C98632 + C98633) * C154164 * C154479 +
            (C98634 + C98635) * C154164 * C154460 +
            (C98636 + C98637) * C154164 * C154407) *
               C154146 -
           (C98118 * C154407 + C98119 * C154460 +
            (C97628 + C97629) * C154164 * C154479 +
            (C97277 * C1135 - C97278 * C1129 - C97277 * C1136 +
             C154268 * C1147 + C97275 * C363 - C97276 * C347 - C97275 * C364 +
             C97273 * C383) *
                C154164 * C154486) *
               C154393) *
              C154464 +
          (((C97275 * C365 - C97276 * C348 - C97275 * C366 + C97273 * C384 +
             C97277 * C1985 - C97278 * C1976 - C97277 * C1986 +
             C154268 * C1991) *
                C154164 * C154486 +
            (C97630 + C97631) * C154164 * C154479 +
            (C97632 + C97633) * C154164 * C154460 +
            (C97634 + C97635) * C154164 * C154407) *
               C154393 -
           ((C97277 * C3451 - C97278 * C3444 - C97277 * C3452 +
             C154268 * C3456 + C97275 * C1979 - C97276 * C1973 -
             C97275 * C1980 + C97273 * C1988) *
                C154164 * C154407 +
            (C97277 * C3449 - C97278 * C3443 - C97277 * C3450 +
             C154268 * C3455 + C97275 * C1981 - C97276 * C1974 -
             C97275 * C1982 + C97273 * C1989) *
                C154164 * C154460 +
            (C97277 * C3447 - C97278 * C3442 - C97277 * C3448 +
             C154268 * C3454 + C97275 * C1983 - C97276 * C1975 -
             C97275 * C1984 + C97273 * C1990) *
                C154164 * C154479 +
            (C97277 * C3445 - C97278 * C3441 - C97277 * C3446 +
             C154268 * C3453 + C97275 * C1985 - C97276 * C1976 -
             C97275 * C1986 + C97273 * C1991) *
                C154164 * C154486) *
               C154146) *
              C1685) *
         C154047) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C106573 * C144 - C106574 * C136 - C106573 * C145 + C154488 * C160 +
             C106575 * C600 - C106576 * C584 - C106575 * C601 + C154485 * C620 +
             C106577 * C602 - C106578 * C585 - C106577 * C603 + C154476 * C621 +
             C106579 * C2337 - C106580 * C2328 - C106579 * C2338 +
             C154422 * C2343) *
                C154164 * C74048 +
            (C106654 + C106655 + C106656 + C106657) * C154164 * C154021) *
               C154393 -
           ((C107158 + C107159 + C107160 + C107161) * C154164 * C154021 +
            (C106579 * C7777 - C106580 * C7773 - C106579 * C7778 +
             C154422 * C7785 + C106577 * C2337 - C106578 * C2328 -
             C106577 * C2338 + C154476 * C2343 + C106575 * C602 -
             C106576 * C585 - C106575 * C603 + C154485 * C621 + C106573 * C600 -
             C106574 * C584 - C106573 * C601 + C154488 * C620) *
                C154164 * C74048) *
               C154146) *
              C154463 +
          (((C106573 * C1135 - C106574 * C1129 - C106573 * C1136 +
             C154488 * C1147 + C106575 * C1554 - C106576 * C1545 -
             C106575 * C1555 + C154485 * C1560 + C106577 * C6274 -
             C106578 * C6263 - C106577 * C6275 + C154476 * C6281 +
             C106579 * C9282 - C106580 * C9277 - C106579 * C9283 +
             C154422 * C9286) *
                C154164 * C74048 +
            (C107892 + C107893 + C107894 + C107895) * C154164 * C154021) *
               C154146 -
           ((C106908 + C106909 + C106910 + C106911) * C154164 * C154021 +
            (C106579 * C6274 - C106580 * C6263 - C106579 * C6275 +
             C154422 * C6281 + C106577 * C1554 - C106578 * C1545 -
             C106577 * C1555 + C154476 * C1560 + C106575 * C1135 -
             C106576 * C1129 - C106575 * C1136 + C154485 * C1147 +
             C106573 * C363 - C106574 * C347 - C106573 * C364 +
             C154488 * C383) *
                C154164 * C74048) *
               C154393) *
              C154464 +
          (((C106573 * C365 - C106574 * C348 - C106573 * C366 + C154488 * C384 +
             C106575 * C1985 - C106576 * C1976 - C106575 * C1986 +
             C154485 * C1991 + C106577 * C3445 - C106578 * C3441 -
             C106577 * C3446 + C154476 * C3453 + C106579 * C6272 -
             C106580 * C6262 - C106579 * C6273 + C154422 * C6280) *
                C154164 * C74048 +
            (C106912 + C106913 + C106914 + C106915) * C154164 * C154021) *
               C154393 -
           ((C106579 * C31086 - C106580 * C31083 - C106579 * C31087 +
             C154422 * C31089 + C106577 * C6268 - C106578 * C6260 -
             C106577 * C6269 + C154476 * C6278 + C106575 * C3447 -
             C106576 * C3442 - C106575 * C3448 + C154485 * C3454 +
             C106573 * C1983 - C106574 * C1975 - C106573 * C1984 +
             C154488 * C1990) *
                C154164 * C154021 +
            (C106579 * C31084 - C106580 * C31082 - C106579 * C31085 +
             C154422 * C31088 + C106577 * C6272 - C106578 * C6262 -
             C106577 * C6273 + C154476 * C6280 + C106575 * C3445 -
             C106576 * C3441 - C106575 * C3446 + C154485 * C3453 +
             C106573 * C1985 - C106574 * C1976 - C106573 * C1986 +
             C154488 * C1991) *
                C154164 * C74048) *
               C154146) *
              C1685) *
         C154047) /
            (p * q * std::sqrt(p + q));
    d2ee[262] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
                 C97277 * C600 - C97278 * C584 - C97277 * C601 +
                 C154268 * C620) *
                    C154164 * C154486 +
                (C97340 + C97341) * C154164 * C154479 + C97354 * C154460 +
                C97355 * C154407) *
                   C154082 * C1307 -
               (C98118 * C154407 + C98119 * C154460 +
                (C97628 + C97629) * C154164 * C154479 +
                (C97277 * C1135 - C97278 * C1129 - C97277 * C1136 +
                 C154268 * C1147 + C97275 * C363 - C97276 * C347 -
                 C97275 * C364 + C97273 * C383) *
                    C154164 * C154486) *
                   C154082 * C154118) *
                  C1309 +
              (((C97629 + C97628) * C154164 * C154486 +
                (C97627 + C97626) * C154164 * C154479 +
                (C97625 + C97624) * C154164 * C154460 +
                (C98124 + C98125) * C154164 * C154407) *
                   C154082 * C154118 -
               (C97356 * C154407 + C97357 * C154460 +
                (C97343 + C97342) * C154164 * C154479 +
                (C97341 + C97340) * C154164 * C154486) *
                   C154082 * C1307) *
                  C1310 +
              ((C97354 * C154486 + C97355 * C154479 +
                (C97347 + C97346) * C154164 * C154460 +
                (C97348 + C97349) * C154164 * C154407) *
                   C154082 * C1307 -
               ((C97277 * C1145 - C97278 * C1134 - C97277 * C1146 +
                 C154268 * C1152 + C97275 * C375 - C97276 * C353 -
                 C97275 * C376 + C97273 * C389) *
                    C154164 * C154407 +
                (C98125 + C98124) * C154164 * C154460 + C98118 * C154479 +
                C98119 * C154486) *
                   C154082 * C154118) *
                  C1311) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
                C97277 * C600 - C97278 * C584 - C97277 * C601 +
                C154268 * C620) *
                   C154164 * C154486 +
               (C97340 + C97341) * C154164 * C154479 + C97354 * C154460 +
               C97355 * C154407) *
                  C154082 * C1394 -
              (C98118 * C154407 + C98119 * C154460 +
               (C97628 + C97629) * C154164 * C154479 +
               (C97277 * C1135 - C97278 * C1129 - C97277 * C1136 +
                C154268 * C1147 + C97275 * C363 - C97276 * C347 -
                C97275 * C364 + C97273 * C383) *
                   C154164 * C154486) *
                  C154082 * C1395 +
              ((C97275 * C365 - C97276 * C348 - C97275 * C366 + C97273 * C384 +
                C97277 * C1985 - C97278 * C1976 - C97277 * C1986 +
                C154268 * C1991) *
                   C154164 * C154486 +
               (C97630 + C97631) * C154164 * C154479 +
               (C97632 + C97633) * C154164 * C154460 +
               (C97634 + C97635) * C154164 * C154407) *
                  C154082 * C1396 -
              ((C97277 * C4264 - C97278 * C4257 - C97277 * C4265 +
                C154268 * C4269 + C97275 * C1406 - C97276 * C1400 -
                C97275 * C1407 + C97273 * C1415) *
                   C154164 * C154407 +
               (C97277 * C4262 - C97278 * C4256 - C97277 * C4263 +
                C154268 * C4268 + C97275 * C1408 - C97276 * C1401 -
                C97275 * C1409 + C97273 * C1416) *
                   C154164 * C154460 +
               (C97277 * C4260 - C97278 * C4255 - C97277 * C4261 +
                C154268 * C4267 + C97275 * C1410 - C97276 * C1402 -
                C97275 * C1411 + C97273 * C1417) *
                   C154164 * C154479 +
               (C97277 * C4258 - C97278 * C4254 - C97277 * C4259 +
                C154268 * C4266 + C97275 * C1412 - C97276 * C1403 -
                C97275 * C1413 + C97273 * C1418) *
                   C154164 * C154486) *
                  C154082 * C1397) *
             C154047) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
             C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
                C154164 * C154486 +
            (C97340 + C97341) * C154164 * C154479 + C97354 * C154460 +
            C97355 * C154407) *
               C577 -
           (C98330 * C154407 + C98331 * C154460 +
            (C97906 + C97907) * C154164 * C154479 +
            (C97277 * C602 - C97278 * C585 - C97277 * C603 + C154268 * C621 +
             C97275 * C600 - C97276 * C584 - C97275 * C601 + C97273 * C620) *
                C154164 * C154486) *
               C578 +
           ((C97275 * C602 - C97276 * C585 - C97275 * C603 + C97273 * C621 +
             C97277 * C2337 - C97278 * C2328 - C97277 * C2338 +
             C154268 * C2343) *
                C154164 * C154486 +
            (C97908 + C97909) * C154164 * C154479 +
            (C97910 + C97911) * C154164 * C154460 +
            (C97912 + C97913) * C154164 * C154407) *
               C579) *
              C1307 +
          (((C97275 * C1135 - C97276 * C1129 - C97275 * C1136 + C97273 * C1147 +
             C97277 * C1554 - C97278 * C1545 - C97277 * C1555 +
             C154268 * C1560) *
                C154164 * C154486 +
            (C98632 + C98633) * C154164 * C154479 +
            (C98634 + C98635) * C154164 * C154460 +
            (C98636 + C98637) * C154164 * C154407) *
               C578 -
           (C98118 * C154407 + C98119 * C154460 +
            (C97628 + C97629) * C154164 * C154479 +
            (C97277 * C1135 - C97278 * C1129 - C97277 * C1136 +
             C154268 * C1147 + C97275 * C363 - C97276 * C347 - C97275 * C364 +
             C97273 * C383) *
                C154164 * C154486) *
               C577 -
           ((C97277 * C8648 - C97278 * C8647 - C97277 * C8649 +
             C154268 * C8650 + C97275 * C1548 - C97276 * C1542 -
             C97275 * C1549 + C97273 * C1557) *
                C154164 * C154407 +
            (C97277 * C6266 - C97278 * C6259 - C97277 * C6267 +
             C154268 * C6277 + C97275 * C1550 - C97276 * C1543 -
             C97275 * C1551 + C97273 * C1558) *
                C154164 * C154460 +
            (C97277 * C6270 - C97278 * C6261 - C97277 * C6271 +
             C154268 * C6279 + C97275 * C1552 - C97276 * C1544 -
             C97275 * C1553 + C97273 * C1559) *
                C154164 * C154479 +
            (C97277 * C6274 - C97278 * C6263 - C97277 * C6275 +
             C154268 * C6281 + C97275 * C1554 - C97276 * C1545 -
             C97275 * C1555 + C97273 * C1560) *
                C154164 * C154486) *
               C579) *
              C154118) *
         C154047) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
              C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
                 C154480 +
             (C101527 + C101528) * C154468 + C101539 * C154442) *
                C74048 +
            ((C97340 + C97341) * C154480 + C101466 * C154468 +
             C101467 * C154442) *
                C154021) *
               C154082 * C1307 -
           ((C101540 * C154442 + C101476 * C154468 + C101477 * C154480) *
                C154021 +
            ((C101533 + C101534) * C154442 + (C101530 + C101529) * C154468 +
             (C101528 + C101527) * C154480) *
                C74048) *
               C154082 * C154118) *
              C1309 +
          (((C101466 * C154480 + C101467 * C154468 + C101541 * C154442) *
                C74048 +
            (C102164 * C154480 + C102165 * C154468 +
             (C101537 + C101538) * C154442) *
                C154021) *
               C154082 * C154118 -
           ((C101502 * C154442 + C98109 * C154468 +
             (C97343 + C97342) * C154480) *
                C154021 +
            (C101476 * C154442 + C101477 * C154468 +
             (C97341 + C97340) * C154480) *
                C74048) *
               C154082 * C1307) *
              C1310 +
          (((C97350 * C154480 + C102164 * C154468 + C102165 * C154442) *
                C74048 +
            (C97351 * C154480 + (C97625 + C97624) * C154468 +
             (C97634 + C97635) * C154442) *
                C154021) *
               C154082 * C1307 -
           (((C97277 * C4264 - C97278 * C4257 - C97277 * C4265 +
              C154268 * C4269 + C97275 * C1406 - C97276 * C1400 -
              C97275 * C1407 + C97273 * C1415) *
                 C154442 +
             (C97635 + C97634) * C154468 + C98108 * C154480) *
                C154021 +
            ((C101538 + C101537) * C154442 + C101502 * C154468 +
             C98109 * C154480) *
                C74048) *
               C154082 * C154118) *
              C1311)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
             C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
                C154480 +
            (C101527 + C101528) * C154468 + C101539 * C154442) *
               C74048 +
           ((C97340 + C97341) * C154480 + C101466 * C154468 +
            C101467 * C154442) *
               C154021) *
              C154082 * C1394 -
          ((C101540 * C154442 + C101476 * C154468 + C101477 * C154480) *
               C154021 +
           (C103386 * C154442 + (C101530 + C101529) * C154468 +
            (C101528 + C101527) * C154480) *
               C74048) *
              C154082 * C1395 +
          ((C101539 * C154480 + (C101534 + C101533) * C154468 +
            (C103399 + C103400) * C154442) *
               C74048 +
           (C101467 * C154480 + C101541 * C154468 +
            (C101535 + C101536) * C154442) *
               C154021) *
              C154082 * C1396 -
          (((C97277 * C28882 - C97278 * C28879 - C97277 * C28883 +
             C154268 * C28885 + C97275 * C4673 - C97276 * C4669 -
             C97275 * C4674 + C97273 * C4678) *
                C154442 +
            (C101536 + C101535) * C154468 + C101540 * C154480) *
               C154021 +
           ((C97277 * C28880 - C97278 * C28878 - C97277 * C28881 +
             C154268 * C28884 + C97275 * C4675 - C97276 * C4670 -
             C97275 * C4676 + C97273 * C4679) *
                C154442 +
            (C103400 + C103399) * C154468 + C103386 * C154480) *
               C74048) *
              C154082 * C1397) *
         C154047) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
              C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
                 C154480 +
             (C101527 + C101528) * C154468 + C101539 * C154442) *
                C74048 +
            ((C97340 + C97341) * C154480 + C101466 * C154468 +
             C101467 * C154442) *
                C154021) *
               C577 -
           ((C102856 * C154442 + C102857 * C154468 +
             (C97906 + C97907) * C154480) *
                C154021 +
            ((C102896 + C102897) * C154442 + (C102898 + C102899) * C154468 +
             (C97277 * C602 - C97278 * C585 - C97277 * C603 + C154268 * C621 +
              C97275 * C600 - C97276 * C584 - C97275 * C601 + C97273 * C620) *
                 C154480) *
                C74048) *
               C578 +
           (((C97275 * C602 - C97276 * C585 - C97275 * C603 + C97273 * C621 +
              C97277 * C2337 - C97278 * C2328 - C97277 * C2338 +
              C154268 * C2343) *
                 C154480 +
             (C103715 + C103716) * C154468 + (C103717 + C103718) * C154442) *
                C74048 +
            ((C97908 + C97909) * C154480 + (C101870 + C101871) * C154468 +
             (C101872 + C101873) * C154442) *
                C154021) *
               C579) *
              C1307 +
          ((((C102899 + C102898) * C154480 + (C102897 + C102896) * C154468 +
             (C97275 * C4258 - C97276 * C4254 - C97275 * C4259 +
              C97273 * C4266 + C97277 * C4912 - C97278 * C4907 -
              C97277 * C4913 + C154268 * C4916) *
                 C154442) *
                C74048 +
            (C102874 * C154480 + C102875 * C154468 +
             (C102900 + C102901) * C154442) *
                C154021) *
               C578 -
           ((C101540 * C154442 + C101476 * C154468 + C101477 * C154480) *
                C154021 +
            (C103386 * C154442 + (C101530 + C101529) * C154468 +
             (C101528 + C101527) * C154480) *
                C74048) *
               C577 -
           (((C97277 * C31817 - C97278 * C31816 - C97277 * C31818 +
              C154268 * C31819 + C97275 * C4910 - C97276 * C4906 -
              C97275 * C4911 + C97273 * C4915) *
                 C154442 +
             (C101873 + C101872) * C154468 + (C101871 + C101870) * C154480) *
                C154021 +
            ((C97277 * C30002 - C97278 * C29999 - C97277 * C30003 +
              C154268 * C30005 + C97275 * C4912 - C97276 * C4907 -
              C97275 * C4913 + C97273 * C4916) *
                 C154442 +
             (C103718 + C103717) * C154468 + (C103716 + C103715) * C154480) *
                C74048) *
               C579) *
              C154118) *
         C154047) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C106573 * C144 - C106574 * C136 - C106573 * C145 + C154488 * C160 +
             C106575 * C600 - C106576 * C584 - C106575 * C601 + C154485 * C620 +
             C106577 * C602 - C106578 * C585 - C106577 * C603 + C154476 * C621 +
             C106579 * C2337 - C106580 * C2328 - C106579 * C2338 +
             C154422 * C2343) *
                C154164 * C74048 +
            (C106654 + C106655 + C106656 + C106657) * C154164 * C154021) *
               C154082 * C1307 -
           ((C106908 + C106909 + C106910 + C106911) * C154164 * C154021 +
            (C106579 * C6274 - C106580 * C6263 - C106579 * C6275 +
             C154422 * C6281 + C106577 * C1554 - C106578 * C1545 -
             C106577 * C1555 + C154476 * C1560 + C106575 * C1135 -
             C106576 * C1129 - C106575 * C1136 + C154485 * C1147 +
             C106573 * C363 - C106574 * C347 - C106573 * C364 +
             C154488 * C383) *
                C154164 * C74048) *
               C154082 * C154118) *
              C1309 +
          (((C106911 + C106910 + C106909 + C106908) * C154164 * C74048 +
            (C107384 + C107385 + C107386 + C107387) * C154164 * C154021) *
               C154082 * C154118 -
           ((C106658 + C106659 + C106660 + C106661) * C154164 * C154021 +
            (C106657 + C106656 + C106655 + C106654) * C154164 * C74048) *
               C154082 * C1307) *
              C1310 +
          (((C106661 + C106660 + C106659 + C106658) * C154164 * C74048 +
            (C106662 + C106663 + C106664 + C106665) * C154164 * C154021) *
               C154082 * C1307 -
           ((C106579 * C8648 - C106580 * C8647 - C106579 * C8649 +
             C154422 * C8650 + C106577 * C1548 - C106578 * C1542 -
             C106577 * C1549 + C154476 * C1557 + C106575 * C1141 -
             C106576 * C1132 - C106575 * C1142 + C154485 * C1150 +
             C106573 * C357 - C106574 * C344 - C106573 * C358 +
             C154488 * C380) *
                C154164 * C154021 +
            (C107387 + C107386 + C107385 + C107384) * C154164 * C74048) *
               C154082 * C154118) *
              C1311)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C106573 * C144 - C106574 * C136 - C106573 * C145 + C154488 * C160 +
            C106575 * C600 - C106576 * C584 - C106575 * C601 + C154485 * C620 +
            C106577 * C602 - C106578 * C585 - C106577 * C603 + C154476 * C621 +
            C106579 * C2337 - C106580 * C2328 - C106579 * C2338 +
            C154422 * C2343) *
               C154164 * C74048 +
           (C106654 + C106655 + C106656 + C106657) * C154164 * C154021) *
              C154082 * C1394 -
          ((C106908 + C106909 + C106910 + C106911) * C154164 * C154021 +
           (C106579 * C6274 - C106580 * C6263 - C106579 * C6275 +
            C154422 * C6281 + C106577 * C1554 - C106578 * C1545 -
            C106577 * C1555 + C154476 * C1560 + C106575 * C1135 -
            C106576 * C1129 - C106575 * C1136 + C154485 * C1147 +
            C106573 * C363 - C106574 * C347 - C106573 * C364 + C154488 * C383) *
               C154164 * C74048) *
              C154082 * C1395 +
          ((C106573 * C365 - C106574 * C348 - C106573 * C366 + C154488 * C384 +
            C106575 * C1985 - C106576 * C1976 - C106575 * C1986 +
            C154485 * C1991 + C106577 * C3445 - C106578 * C3441 -
            C106577 * C3446 + C154476 * C3453 + C106579 * C6272 -
            C106580 * C6262 - C106579 * C6273 + C154422 * C6280) *
               C154164 * C74048 +
           (C106912 + C106913 + C106914 + C106915) * C154164 * C154021) *
              C154082 * C1396 -
          ((C106579 * C31817 - C106580 * C31816 - C106579 * C31818 +
            C154422 * C31819 + C106577 * C4910 - C106578 * C4906 -
            C106577 * C4911 + C154476 * C4915 + C106575 * C4260 -
            C106576 * C4255 - C106575 * C4261 + C154485 * C4267 +
            C106573 * C1410 - C106574 * C1402 - C106573 * C1411 +
            C154488 * C1417) *
               C154164 * C154021 +
           (C106579 * C30002 - C106580 * C29999 - C106579 * C30003 +
            C154422 * C30005 + C106577 * C4912 - C106578 * C4907 -
            C106577 * C4913 + C154476 * C4916 + C106575 * C4258 -
            C106576 * C4254 - C106575 * C4259 + C154485 * C4266 +
            C106573 * C1412 - C106574 * C1403 - C106573 * C1413 +
            C154488 * C1418) *
               C154164 * C74048) *
              C154082 * C1397) *
         C154047) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C106573 * C144 - C106574 * C136 - C106573 * C145 + C154488 * C160 +
             C106575 * C600 - C106576 * C584 - C106575 * C601 + C154485 * C620 +
             C106577 * C602 - C106578 * C585 - C106577 * C603 + C154476 * C621 +
             C106579 * C2337 - C106580 * C2328 - C106579 * C2338 +
             C154422 * C2343) *
                C154164 * C74048 +
            (C106654 + C106655 + C106656 + C106657) * C154164 * C154021) *
               C577 -
           ((C107158 + C107159 + C107160 + C107161) * C154164 * C154021 +
            (C106579 * C7777 - C106580 * C7773 - C106579 * C7778 +
             C154422 * C7785 + C106577 * C2337 - C106578 * C2328 -
             C106577 * C2338 + C154476 * C2343 + C106575 * C602 -
             C106576 * C585 - C106575 * C603 + C154485 * C621 + C106573 * C600 -
             C106574 * C584 - C106573 * C601 + C154488 * C620) *
                C154164 * C74048) *
               C578 +
           ((C106573 * C602 - C106574 * C585 - C106573 * C603 + C154488 * C621 +
             C106575 * C2337 - C106576 * C2328 - C106575 * C2338 +
             C154485 * C2343 + C106577 * C7777 - C106578 * C7773 -
             C106577 * C7778 + C154476 * C7785 + C106579 * C10602 -
             C106580 * C10597 - C106579 * C10603 + C154422 * C10606) *
                C154164 * C74048 +
            (C107162 + C107163 + C107164 + C107165) * C154164 * C154021) *
               C579) *
              C1307 +
          (((C106573 * C1135 - C106574 * C1129 - C106573 * C1136 +
             C154488 * C1147 + C106575 * C1554 - C106576 * C1545 -
             C106575 * C1555 + C154485 * C1560 + C106577 * C6274 -
             C106578 * C6263 - C106577 * C6275 + C154476 * C6281 +
             C106579 * C9282 - C106580 * C9277 - C106579 * C9283 +
             C154422 * C9286) *
                C154164 * C74048 +
            (C107892 + C107893 + C107894 + C107895) * C154164 * C154021) *
               C578 -
           ((C106908 + C106909 + C106910 + C106911) * C154164 * C154021 +
            (C106579 * C6274 - C106580 * C6263 - C106579 * C6275 +
             C154422 * C6281 + C106577 * C1554 - C106578 * C1545 -
             C106577 * C1555 + C154476 * C1560 + C106575 * C1135 -
             C106576 * C1129 - C106575 * C1136 + C154485 * C1147 +
             C106573 * C363 - C106574 * C347 - C106573 * C364 +
             C154488 * C383) *
                C154164 * C74048) *
               C577 -
           ((C106579 * C56192 - C106580 * C56191 - C106579 * C56193 +
             C154422 * C56194 + C106577 * C9280 - C106578 * C9276 -
             C106577 * C9281 + C154476 * C9285 + C106575 * C6270 -
             C106576 * C6261 - C106575 * C6271 + C154485 * C6279 +
             C106573 * C1552 - C106574 * C1544 - C106573 * C1553 +
             C154488 * C1559) *
                C154164 * C154021 +
            (C106579 * C33869 - C106580 * C33866 - C106579 * C33870 +
             C154422 * C33872 + C106577 * C9282 - C106578 * C9277 -
             C106577 * C9283 + C154476 * C9286 + C106575 * C6274 -
             C106576 * C6263 - C106575 * C6275 + C154485 * C6281 +
             C106573 * C1554 - C106574 * C1545 - C106573 * C1555 +
             C154488 * C1560) *
                C154164 * C74048) *
               C579) *
              C154118) *
         C154047) /
            (p * q * std::sqrt(p + q));
    d2ee[263] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
               C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
                  C154480 +
              (C101527 + C101528) * C154468 + C101539 * C154442) *
                 C74048 +
             ((C97340 + C97341) * C154480 + C101466 * C154468 +
              C101467 * C154442) *
                 C154021) *
                C154393 -
            ((C102856 * C154442 + C102857 * C154468 +
              (C97906 + C97907) * C154480) *
                 C154021 +
             ((C102896 + C102897) * C154442 + (C102898 + C102899) * C154468 +
              (C97277 * C602 - C97278 * C585 - C97277 * C603 + C154268 * C621 +
               C97275 * C600 - C97276 * C584 - C97275 * C601 + C97273 * C620) *
                  C154480) *
                 C74048) *
                C154146) *
               C1307 +
           ((((C102899 + C102898) * C154480 + (C102897 + C102896) * C154468 +
              (C97275 * C4258 - C97276 * C4254 - C97275 * C4259 +
               C97273 * C4266 + C97277 * C4912 - C97278 * C4907 -
               C97277 * C4913 + C154268 * C4916) *
                  C154442) *
                 C74048 +
             (C102874 * C154480 + C102875 * C154468 +
              (C102900 + C102901) * C154442) *
                 C154021) *
                C154146 -
            ((C101540 * C154442 + C101476 * C154468 + C101477 * C154480) *
                 C154021 +
             (C103386 * C154442 + (C101530 + C101529) * C154468 +
              (C101528 + C101527) * C154480) *
                 C74048) *
                C154393) *
               C154118) *
              C154384 +
          (((((C97907 + C97906) * C154480 + C102874 * C154468 +
              C102875 * C154442) *
                 C74048 +
             ((C97905 + C97904) * C154480 + (C98634 + C98635) * C154468 +
              (C102468 + C102469) * C154442) *
                 C154021) *
                C154146 -
            ((C101502 * C154442 + C98109 * C154468 +
              (C97343 + C97342) * C154480) *
                 C154021 +
             (C101476 * C154442 + C101477 * C154468 +
              (C97341 + C97340) * C154480) *
                 C74048) *
                C154393) *
               C1307 +
           (((C101466 * C154480 + C101467 * C154468 + C101541 * C154442) *
                 C74048 +
             (C102164 * C154480 + C102165 * C154468 +
              (C101537 + C101538) * C154442) *
                 C154021) *
                C154393 -
            (((C97277 * C4908 - C97278 * C4905 - C97277 * C4909 +
               C154268 * C4914 + C97275 * C4262 - C97276 * C4256 -
               C97275 * C4263 + C97273 * C4268) *
                  C154442 +
              (C102469 + C102468) * C154468 + (C98635 + C98634) * C154480) *
                 C154021 +
             ((C102901 + C102900) * C154442 + C102856 * C154468 +
              C102857 * C154480) *
                 C74048) *
                C154146) *
               C154118) *
              C154053)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
              C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
                 C154164 * C154486 +
             (C97340 + C97341) * C154164 * C154479 + C97354 * C154460 +
             C97355 * C154407) *
                C154393 -
            (C98330 * C154407 + C98331 * C154460 +
             (C97906 + C97907) * C154164 * C154479 +
             (C97277 * C602 - C97278 * C585 - C97277 * C603 + C154268 * C621 +
              C97275 * C600 - C97276 * C584 - C97275 * C601 + C97273 * C620) *
                 C154164 * C154486) *
                C154146) *
               C1307 +
           (((C97275 * C1135 - C97276 * C1129 - C97275 * C1136 +
              C97273 * C1147 + C97277 * C1554 - C97278 * C1545 -
              C97277 * C1555 + C154268 * C1560) *
                 C154164 * C154486 +
             (C98632 + C98633) * C154164 * C154479 +
             (C98634 + C98635) * C154164 * C154460 +
             (C98636 + C98637) * C154164 * C154407) *
                C154146 -
            (C98118 * C154407 + C98119 * C154460 +
             (C97628 + C97629) * C154164 * C154479 +
             (C97277 * C1135 - C97278 * C1129 - C97277 * C1136 +
              C154268 * C1147 + C97275 * C363 - C97276 * C347 - C97275 * C364 +
              C97273 * C383) *
                 C154164 * C154486) *
                C154393) *
               C154118) *
              C154384 +
          ((((C97907 + C97906) * C154164 * C154486 +
             (C97905 + C97904) * C154164 * C154479 +
             (C97903 + C97902) * C154164 * C154460 +
             (C98336 + C98337) * C154164 * C154407) *
                C154146 -
            (C97356 * C154407 + C97357 * C154460 +
             (C97343 + C97342) * C154164 * C154479 +
             (C97341 + C97340) * C154164 * C154486) *
                C154393) *
               C1307 +
           (((C97629 + C97628) * C154164 * C154486 +
             (C97627 + C97626) * C154164 * C154479 +
             (C97625 + C97624) * C154164 * C154460 +
             (C98124 + C98125) * C154164 * C154407) *
                C154393 -
            ((C97277 * C1546 - C97278 * C1541 - C97277 * C1547 +
              C154268 * C1556 + C97275 * C1143 - C97276 * C1133 -
              C97275 * C1144 + C97273 * C1151) *
                 C154164 * C154407 +
             (C98637 + C98636) * C154164 * C154460 +
             (C98635 + C98634) * C154164 * C154479 +
             (C98633 + C98632) * C154164 * C154486) *
                C154146) *
               C154118) *
              C154053)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C106573 * C144 - C106574 * C136 - C106573 * C145 +
              C154488 * C160 + C106575 * C600 - C106576 * C584 -
              C106575 * C601 + C154485 * C620 + C106577 * C602 -
              C106578 * C585 - C106577 * C603 + C154476 * C621 +
              C106579 * C2337 - C106580 * C2328 - C106579 * C2338 +
              C154422 * C2343) *
                 C154164 * C74048 +
             (C106654 + C106655 + C106656 + C106657) * C154164 * C154021) *
                C154393 -
            ((C107158 + C107159 + C107160 + C107161) * C154164 * C154021 +
             (C106579 * C7777 - C106580 * C7773 - C106579 * C7778 +
              C154422 * C7785 + C106577 * C2337 - C106578 * C2328 -
              C106577 * C2338 + C154476 * C2343 + C106575 * C602 -
              C106576 * C585 - C106575 * C603 + C154485 * C621 +
              C106573 * C600 - C106574 * C584 - C106573 * C601 +
              C154488 * C620) *
                 C154164 * C74048) *
                C154146) *
               C1307 +
           (((C106573 * C1135 - C106574 * C1129 - C106573 * C1136 +
              C154488 * C1147 + C106575 * C1554 - C106576 * C1545 -
              C106575 * C1555 + C154485 * C1560 + C106577 * C6274 -
              C106578 * C6263 - C106577 * C6275 + C154476 * C6281 +
              C106579 * C9282 - C106580 * C9277 - C106579 * C9283 +
              C154422 * C9286) *
                 C154164 * C74048 +
             (C107892 + C107893 + C107894 + C107895) * C154164 * C154021) *
                C154146 -
            ((C106908 + C106909 + C106910 + C106911) * C154164 * C154021 +
             (C106579 * C6274 - C106580 * C6263 - C106579 * C6275 +
              C154422 * C6281 + C106577 * C1554 - C106578 * C1545 -
              C106577 * C1555 + C154476 * C1560 + C106575 * C1135 -
              C106576 * C1129 - C106575 * C1136 + C154485 * C1147 +
              C106573 * C363 - C106574 * C347 - C106573 * C364 +
              C154488 * C383) *
                 C154164 * C74048) *
                C154393) *
               C154118) *
              C154384 +
          ((((C107161 + C107160 + C107159 + C107158) * C154164 * C74048 +
             (C107606 + C107607 + C107608 + C107609) * C154164 * C154021) *
                C154146 -
            ((C106658 + C106659 + C106660 + C106661) * C154164 * C154021 +
             (C106657 + C106656 + C106655 + C106654) * C154164 * C74048) *
                C154393) *
               C1307 +
           (((C106911 + C106910 + C106909 + C106908) * C154164 * C74048 +
             (C107384 + C107385 + C107386 + C107387) * C154164 * C154021) *
                C154393 -
            ((C106579 * C9278 - C106580 * C9275 - C106579 * C9279 +
              C154422 * C9284 + C106577 * C6266 - C106578 * C6259 -
              C106577 * C6267 + C154476 * C6277 + C106575 * C1550 -
              C106576 * C1543 - C106575 * C1551 + C154485 * C1558 +
              C106573 * C1139 - C106574 * C1131 - C106573 * C1140 +
              C154488 * C1149) *
                 C154164 * C154021 +
             (C107895 + C107894 + C107893 + C107892) * C154164 * C74048) *
                C154146) *
               C154118) *
              C154053)) /
            (p * q * std::sqrt(p + q));
    d2ee[264] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
            C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
               C154164 * C154486 +
           (C97340 + C97341) * C154164 * C154479 + C97354 * C154460 +
           C97355 * C154407) *
              C154082 * C1394 -
          (C98118 * C154407 + C98119 * C154460 +
           (C97628 + C97629) * C154164 * C154479 +
           (C97277 * C1135 - C97278 * C1129 - C97277 * C1136 + C154268 * C1147 +
            C97275 * C363 - C97276 * C347 - C97275 * C364 + C97273 * C383) *
               C154164 * C154486) *
              C154082 * C1395 +
          ((C97275 * C365 - C97276 * C348 - C97275 * C366 + C97273 * C384 +
            C97277 * C1985 - C97278 * C1976 - C97277 * C1986 +
            C154268 * C1991) *
               C154164 * C154486 +
           (C97630 + C97631) * C154164 * C154479 +
           (C97632 + C97633) * C154164 * C154460 +
           (C97634 + C97635) * C154164 * C154407) *
              C154082 * C1396 -
          ((C97277 * C4264 - C97278 * C4257 - C97277 * C4265 + C154268 * C4269 +
            C97275 * C1406 - C97276 * C1400 - C97275 * C1407 + C97273 * C1415) *
               C154164 * C154407 +
           (C97277 * C4262 - C97278 * C4256 - C97277 * C4263 + C154268 * C4268 +
            C97275 * C1408 - C97276 * C1401 - C97275 * C1409 + C97273 * C1416) *
               C154164 * C154460 +
           (C97277 * C4260 - C97278 * C4255 - C97277 * C4261 + C154268 * C4267 +
            C97275 * C1410 - C97276 * C1402 - C97275 * C1411 + C97273 * C1417) *
               C154164 * C154479 +
           (C97277 * C4258 - C97278 * C4254 - C97277 * C4259 + C154268 * C4266 +
            C97275 * C1412 - C97276 * C1403 - C97275 * C1413 + C97273 * C1418) *
               C154164 * C154486) *
              C154082 * C1397) *
         C154047) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
             C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
                C154164 * C154486 +
            (C97340 + C97341) * C154164 * C154479 + C97354 * C154460 +
            C97355 * C154407) *
               C154082 * C1307 -
           (C98118 * C154407 + C98119 * C154460 +
            (C97628 + C97629) * C154164 * C154479 +
            (C97277 * C1135 - C97278 * C1129 - C97277 * C1136 +
             C154268 * C1147 + C97275 * C363 - C97276 * C347 - C97275 * C364 +
             C97273 * C383) *
                C154164 * C154486) *
               C154082 * C154118) *
              C1309 +
          (((C97629 + C97628) * C154164 * C154486 +
            (C97627 + C97626) * C154164 * C154479 +
            (C97625 + C97624) * C154164 * C154460 +
            (C98124 + C98125) * C154164 * C154407) *
               C154082 * C154118 -
           (C97356 * C154407 + C97357 * C154460 +
            (C97343 + C97342) * C154164 * C154479 +
            (C97341 + C97340) * C154164 * C154486) *
               C154082 * C1307) *
              C1310 +
          ((C97354 * C154486 + C97355 * C154479 +
            (C97347 + C97346) * C154164 * C154460 +
            (C97348 + C97349) * C154164 * C154407) *
               C154082 * C1307 -
           ((C97277 * C1145 - C97278 * C1134 - C97277 * C1146 +
             C154268 * C1152 + C97275 * C375 - C97276 * C353 - C97275 * C376 +
             C97273 * C389) *
                C154164 * C154407 +
            (C98125 + C98124) * C154164 * C154460 + C98118 * C154479 +
            C98119 * C154486) *
               C154082 * C154118) *
              C1311)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
              C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
                 C154480 +
             (C101527 + C101528) * C154468 + C101539 * C154442) *
                C74048 +
            ((C97340 + C97341) * C154480 + C101466 * C154468 +
             C101467 * C154442) *
                C154021) *
               C154082 * C1307 -
           ((C101540 * C154442 + C101476 * C154468 + C101477 * C154480) *
                C154021 +
            ((C101533 + C101534) * C154442 + (C101530 + C101529) * C154468 +
             (C101528 + C101527) * C154480) *
                C74048) *
               C154082 * C154118) *
              C1309 +
          (((C101466 * C154480 + C101467 * C154468 + C101541 * C154442) *
                C74048 +
            (C102164 * C154480 + C102165 * C154468 +
             (C101537 + C101538) * C154442) *
                C154021) *
               C154082 * C154118 -
           ((C101502 * C154442 + C98109 * C154468 +
             (C97343 + C97342) * C154480) *
                C154021 +
            (C101476 * C154442 + C101477 * C154468 +
             (C97341 + C97340) * C154480) *
                C74048) *
               C154082 * C1307) *
              C1310 +
          (((C97350 * C154480 + C102164 * C154468 + C102165 * C154442) *
                C74048 +
            (C97351 * C154480 + (C97625 + C97624) * C154468 +
             (C97634 + C97635) * C154442) *
                C154021) *
               C154082 * C1307 -
           (((C97277 * C4264 - C97278 * C4257 - C97277 * C4265 +
              C154268 * C4269 + C97275 * C1406 - C97276 * C1400 -
              C97275 * C1407 + C97273 * C1415) *
                 C154442 +
             (C97635 + C97634) * C154468 + C98108 * C154480) *
                C154021 +
            ((C101538 + C101537) * C154442 + C101502 * C154468 +
             C98109 * C154480) *
                C74048) *
               C154082 * C154118) *
              C1311)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
             C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
                C154480 +
            (C101527 + C101528) * C154468 + C101539 * C154442) *
               C74048 +
           ((C97340 + C97341) * C154480 + C101466 * C154468 +
            C101467 * C154442) *
               C154021) *
              C154082 * C1394 -
          ((C101540 * C154442 + C101476 * C154468 + C101477 * C154480) *
               C154021 +
           (C103386 * C154442 + (C101530 + C101529) * C154468 +
            (C101528 + C101527) * C154480) *
               C74048) *
              C154082 * C1395 +
          ((C101539 * C154480 + (C101534 + C101533) * C154468 +
            (C103399 + C103400) * C154442) *
               C74048 +
           (C101467 * C154480 + C101541 * C154468 +
            (C101535 + C101536) * C154442) *
               C154021) *
              C154082 * C1396 -
          (((C97277 * C28882 - C97278 * C28879 - C97277 * C28883 +
             C154268 * C28885 + C97275 * C4673 - C97276 * C4669 -
             C97275 * C4674 + C97273 * C4678) *
                C154442 +
            (C101536 + C101535) * C154468 + C101540 * C154480) *
               C154021 +
           ((C97277 * C28880 - C97278 * C28878 - C97277 * C28881 +
             C154268 * C28884 + C97275 * C4675 - C97276 * C4670 -
             C97275 * C4676 + C97273 * C4679) *
                C154442 +
            (C103400 + C103399) * C154468 + C103386 * C154480) *
               C74048) *
              C154082 * C1397) *
         C154047) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C106573 * C144 - C106574 * C136 - C106573 * C145 + C154488 * C160 +
             C106575 * C600 - C106576 * C584 - C106575 * C601 + C154485 * C620 +
             C106577 * C602 - C106578 * C585 - C106577 * C603 + C154476 * C621 +
             C106579 * C2337 - C106580 * C2328 - C106579 * C2338 +
             C154422 * C2343) *
                C154164 * C74048 +
            (C106654 + C106655 + C106656 + C106657) * C154164 * C154021) *
               C154082 * C1307 -
           ((C106908 + C106909 + C106910 + C106911) * C154164 * C154021 +
            (C106579 * C6274 - C106580 * C6263 - C106579 * C6275 +
             C154422 * C6281 + C106577 * C1554 - C106578 * C1545 -
             C106577 * C1555 + C154476 * C1560 + C106575 * C1135 -
             C106576 * C1129 - C106575 * C1136 + C154485 * C1147 +
             C106573 * C363 - C106574 * C347 - C106573 * C364 +
             C154488 * C383) *
                C154164 * C74048) *
               C154082 * C154118) *
              C1309 +
          (((C106911 + C106910 + C106909 + C106908) * C154164 * C74048 +
            (C107384 + C107385 + C107386 + C107387) * C154164 * C154021) *
               C154082 * C154118 -
           ((C106658 + C106659 + C106660 + C106661) * C154164 * C154021 +
            (C106657 + C106656 + C106655 + C106654) * C154164 * C74048) *
               C154082 * C1307) *
              C1310 +
          (((C106661 + C106660 + C106659 + C106658) * C154164 * C74048 +
            (C106662 + C106663 + C106664 + C106665) * C154164 * C154021) *
               C154082 * C1307 -
           ((C106579 * C8648 - C106580 * C8647 - C106579 * C8649 +
             C154422 * C8650 + C106577 * C1548 - C106578 * C1542 -
             C106577 * C1549 + C154476 * C1557 + C106575 * C1141 -
             C106576 * C1132 - C106575 * C1142 + C154485 * C1150 +
             C106573 * C357 - C106574 * C344 - C106573 * C358 +
             C154488 * C380) *
                C154164 * C154021 +
            (C107387 + C107386 + C107385 + C107384) * C154164 * C74048) *
               C154082 * C154118) *
              C1311)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C106573 * C144 - C106574 * C136 - C106573 * C145 + C154488 * C160 +
            C106575 * C600 - C106576 * C584 - C106575 * C601 + C154485 * C620 +
            C106577 * C602 - C106578 * C585 - C106577 * C603 + C154476 * C621 +
            C106579 * C2337 - C106580 * C2328 - C106579 * C2338 +
            C154422 * C2343) *
               C154164 * C74048 +
           (C106654 + C106655 + C106656 + C106657) * C154164 * C154021) *
              C154082 * C1394 -
          ((C106908 + C106909 + C106910 + C106911) * C154164 * C154021 +
           (C106579 * C6274 - C106580 * C6263 - C106579 * C6275 +
            C154422 * C6281 + C106577 * C1554 - C106578 * C1545 -
            C106577 * C1555 + C154476 * C1560 + C106575 * C1135 -
            C106576 * C1129 - C106575 * C1136 + C154485 * C1147 +
            C106573 * C363 - C106574 * C347 - C106573 * C364 + C154488 * C383) *
               C154164 * C74048) *
              C154082 * C1395 +
          ((C106573 * C365 - C106574 * C348 - C106573 * C366 + C154488 * C384 +
            C106575 * C1985 - C106576 * C1976 - C106575 * C1986 +
            C154485 * C1991 + C106577 * C3445 - C106578 * C3441 -
            C106577 * C3446 + C154476 * C3453 + C106579 * C6272 -
            C106580 * C6262 - C106579 * C6273 + C154422 * C6280) *
               C154164 * C74048 +
           (C106912 + C106913 + C106914 + C106915) * C154164 * C154021) *
              C154082 * C1396 -
          ((C106579 * C31817 - C106580 * C31816 - C106579 * C31818 +
            C154422 * C31819 + C106577 * C4910 - C106578 * C4906 -
            C106577 * C4911 + C154476 * C4915 + C106575 * C4260 -
            C106576 * C4255 - C106575 * C4261 + C154485 * C4267 +
            C106573 * C1410 - C106574 * C1402 - C106573 * C1411 +
            C154488 * C1417) *
               C154164 * C154021 +
           (C106579 * C30002 - C106580 * C29999 - C106579 * C30003 +
            C154422 * C30005 + C106577 * C4912 - C106578 * C4907 -
            C106577 * C4913 + C154476 * C4916 + C106575 * C4258 -
            C106576 * C4254 - C106575 * C4259 + C154485 * C4266 +
            C106573 * C1412 - C106574 * C1403 - C106573 * C1413 +
            C154488 * C1418) *
               C154164 * C74048) *
              C154082 * C1397) *
         C154047) /
            (p * q * std::sqrt(p + q));
    d2ee[265] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
               C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
                  C154480 +
              (C101527 + C101528) * C154468 + C101539 * C154442) *
                 C74048 +
             ((C97340 + C97341) * C154480 + C101466 * C154468 +
              C101467 * C154442) *
                 C154021) *
                C2114 -
            ((C102856 * C154442 + C102857 * C154468 +
              (C97906 + C97907) * C154480) *
                 C154021 +
             (C104685 * C154442 + (C102898 + C102899) * C154468 +
              (C97277 * C602 - C97278 * C585 - C97277 * C603 + C154268 * C621 +
               C97275 * C600 - C97276 * C584 - C97275 * C601 + C97273 * C620) *
                  C154480) *
                 C74048) *
                C154146) *
               C154392 +
           ((((C102899 + C102898) * C154480 + (C102897 + C102896) * C154468 +
              (C104698 + C104699) * C154442) *
                 C74048 +
             (C102874 * C154480 + C102875 * C154468 +
              (C102900 + C102901) * C154442) *
                 C154021) *
                C154146 -
            ((C101540 * C154442 + C101476 * C154468 + C101477 * C154480) *
                 C154021 +
             (C103386 * C154442 + (C101530 + C101529) * C154468 +
              (C101528 + C101527) * C154480) *
                 C74048) *
                C2114) *
               C154118) *
              C154384 +
          (((((C97907 + C97906) * C154480 + C102874 * C154468 +
              C102875 * C154442) *
                 C74048 +
             ((C97905 + C97904) * C154480 + (C98634 + C98635) * C154468 +
              (C102468 + C102469) * C154442) *
                 C154021) *
                C154146 -
            ((C101502 * C154442 + C98109 * C154468 +
              (C97343 + C97342) * C154480) *
                 C154021 +
             (C101476 * C154442 + C101477 * C154468 +
              (C97341 + C97340) * C154480) *
                 C74048) *
                C2114) *
               C154392 +
           (((C101466 * C154480 + C101467 * C154468 + C101541 * C154442) *
                 C74048 +
             (C102164 * C154480 + C102165 * C154468 +
              (C101537 + C101538) * C154442) *
                 C154021) *
                C2114 -
            (((C97277 * C4908 - C97278 * C4905 - C97277 * C4909 +
               C154268 * C4914 + C97275 * C4262 - C97276 * C4256 -
               C97275 * C4263 + C97273 * C4268) *
                  C154442 +
              (C102469 + C102468) * C154468 + (C98635 + C98634) * C154480) *
                 C154021 +
             ((C102901 + C102900) * C154442 + C102856 * C154468 +
              C102857 * C154480) *
                 C74048) *
                C154146) *
               C154118) *
              C154053)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
              C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
                 C154164 * C154486 +
             (C97340 + C97341) * C154164 * C154479 + C97354 * C154460 +
             C97355 * C154407) *
                C2114 -
            (C98330 * C154407 + C98331 * C154460 +
             (C97906 + C97907) * C154164 * C154479 +
             (C97277 * C602 - C97278 * C585 - C97277 * C603 + C154268 * C621 +
              C97275 * C600 - C97276 * C584 - C97275 * C601 + C97273 * C620) *
                 C154164 * C154486) *
                C154146) *
               C154392 +
           (((C97275 * C1135 - C97276 * C1129 - C97275 * C1136 +
              C97273 * C1147 + C97277 * C1554 - C97278 * C1545 -
              C97277 * C1555 + C154268 * C1560) *
                 C154164 * C154486 +
             (C98632 + C98633) * C154164 * C154479 +
             (C98634 + C98635) * C154164 * C154460 +
             (C98636 + C98637) * C154164 * C154407) *
                C154146 -
            (C98118 * C154407 + C98119 * C154460 +
             (C97628 + C97629) * C154164 * C154479 +
             (C97277 * C1135 - C97278 * C1129 - C97277 * C1136 +
              C154268 * C1147 + C97275 * C363 - C97276 * C347 - C97275 * C364 +
              C97273 * C383) *
                 C154164 * C154486) *
                C2114) *
               C154118) *
              C154384 +
          ((((C97907 + C97906) * C154164 * C154486 +
             (C97905 + C97904) * C154164 * C154479 +
             (C97903 + C97902) * C154164 * C154460 +
             (C98336 + C98337) * C154164 * C154407) *
                C154146 -
            (C97356 * C154407 + C97357 * C154460 +
             (C97343 + C97342) * C154164 * C154479 +
             (C97341 + C97340) * C154164 * C154486) *
                C2114) *
               C154392 +
           (((C97629 + C97628) * C154164 * C154486 +
             (C97627 + C97626) * C154164 * C154479 +
             (C97625 + C97624) * C154164 * C154460 +
             (C98124 + C98125) * C154164 * C154407) *
                C2114 -
            ((C97277 * C1546 - C97278 * C1541 - C97277 * C1547 +
              C154268 * C1556 + C97275 * C1143 - C97276 * C1133 -
              C97275 * C1144 + C97273 * C1151) *
                 C154164 * C154407 +
             (C98637 + C98636) * C154164 * C154460 +
             (C98635 + C98634) * C154164 * C154479 +
             (C98633 + C98632) * C154164 * C154486) *
                C154146) *
               C154118) *
              C154053)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C106573 * C144 - C106574 * C136 - C106573 * C145 +
              C154488 * C160 + C106575 * C600 - C106576 * C584 -
              C106575 * C601 + C154485 * C620 + C106577 * C602 -
              C106578 * C585 - C106577 * C603 + C154476 * C621 +
              C106579 * C2337 - C106580 * C2328 - C106579 * C2338 +
              C154422 * C2343) *
                 C154164 * C74048 +
             (C106654 + C106655 + C106656 + C106657) * C154164 * C154021) *
                C2114 -
            ((C107158 + C107159 + C107160 + C107161) * C154164 * C154021 +
             (C106579 * C7777 - C106580 * C7773 - C106579 * C7778 +
              C154422 * C7785 + C106577 * C2337 - C106578 * C2328 -
              C106577 * C2338 + C154476 * C2343 + C106575 * C602 -
              C106576 * C585 - C106575 * C603 + C154485 * C621 +
              C106573 * C600 - C106574 * C584 - C106573 * C601 +
              C154488 * C620) *
                 C154164 * C74048) *
                C154146) *
               C154392 +
           (((C106573 * C1135 - C106574 * C1129 - C106573 * C1136 +
              C154488 * C1147 + C106575 * C1554 - C106576 * C1545 -
              C106575 * C1555 + C154485 * C1560 + C106577 * C6274 -
              C106578 * C6263 - C106577 * C6275 + C154476 * C6281 +
              C106579 * C9282 - C106580 * C9277 - C106579 * C9283 +
              C154422 * C9286) *
                 C154164 * C74048 +
             (C107892 + C107893 + C107894 + C107895) * C154164 * C154021) *
                C154146 -
            ((C106908 + C106909 + C106910 + C106911) * C154164 * C154021 +
             (C106579 * C6274 - C106580 * C6263 - C106579 * C6275 +
              C154422 * C6281 + C106577 * C1554 - C106578 * C1545 -
              C106577 * C1555 + C154476 * C1560 + C106575 * C1135 -
              C106576 * C1129 - C106575 * C1136 + C154485 * C1147 +
              C106573 * C363 - C106574 * C347 - C106573 * C364 +
              C154488 * C383) *
                 C154164 * C74048) *
                C2114) *
               C154118) *
              C154384 +
          ((((C107161 + C107160 + C107159 + C107158) * C154164 * C74048 +
             (C107606 + C107607 + C107608 + C107609) * C154164 * C154021) *
                C154146 -
            ((C106658 + C106659 + C106660 + C106661) * C154164 * C154021 +
             (C106657 + C106656 + C106655 + C106654) * C154164 * C74048) *
                C2114) *
               C154392 +
           (((C106911 + C106910 + C106909 + C106908) * C154164 * C74048 +
             (C107384 + C107385 + C107386 + C107387) * C154164 * C154021) *
                C2114 -
            ((C106579 * C9278 - C106580 * C9275 - C106579 * C9279 +
              C154422 * C9284 + C106577 * C6266 - C106578 * C6259 -
              C106577 * C6267 + C154476 * C6277 + C106575 * C1550 -
              C106576 * C1543 - C106575 * C1551 + C154485 * C1558 +
              C106573 * C1139 - C106574 * C1131 - C106573 * C1140 +
              C154488 * C1149) *
                 C154164 * C154021 +
             (C107895 + C107894 + C107893 + C107892) * C154164 * C74048) *
                C154146) *
               C154118) *
              C154053)) /
            (p * q * std::sqrt(p + q));
    d2ee[266] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
              C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
                 C154480 +
             (C101527 + C101528) * C154468 + C101539 * C154442) *
                C74048 +
            ((C97340 + C97341) * C154480 + C101466 * C154468 +
             C101467 * C154442) *
                C154021) *
               C154465 -
           ((C102856 * C154442 + C102857 * C154468 +
             (C97906 + C97907) * C154480) *
                C154021 +
            (C104685 * C154442 + (C102898 + C102899) * C154468 +
             (C97277 * C602 - C97278 * C585 - C97277 * C603 + C154268 * C621 +
              C97275 * C600 - C97276 * C584 - C97275 * C601 + C97273 * C620) *
                 C154480) *
                C74048) *
               C154466 +
           (((C97275 * C602 - C97276 * C585 - C97275 * C603 + C97273 * C621 +
              C97277 * C2337 - C97278 * C2328 - C97277 * C2338 +
              C154268 * C2343) *
                 C154480 +
             (C103715 + C103716) * C154468 + (C103717 + C103718) * C154442) *
                C74048 +
            ((C97908 + C97909) * C154480 + (C101870 + C101871) * C154468 +
             (C101872 + C101873) * C154442) *
                C154021) *
               C2630) *
              C154392 +
          ((((C102899 + C102898) * C154480 + (C102897 + C102896) * C154468 +
             (C104698 + C104699) * C154442) *
                C74048 +
            (C102874 * C154480 + C102875 * C154468 +
             (C102900 + C102901) * C154442) *
                C154021) *
               C154466 -
           ((C101540 * C154442 + C101476 * C154468 + C101477 * C154480) *
                C154021 +
            (C103386 * C154442 + (C101530 + C101529) * C154468 +
             (C101528 + C101527) * C154480) *
                C74048) *
               C154465 -
           (((C97277 * C31817 - C97278 * C31816 - C97277 * C31818 +
              C154268 * C31819 + C97275 * C4910 - C97276 * C4906 -
              C97275 * C4911 + C97273 * C4915) *
                 C154442 +
             (C101873 + C101872) * C154468 + (C101871 + C101870) * C154480) *
                C154021 +
            ((C97277 * C30002 - C97278 * C29999 - C97277 * C30003 +
              C154268 * C30005 + C97275 * C4912 - C97276 * C4907 -
              C97275 * C4913 + C97273 * C4916) *
                 C154442 +
             (C103718 + C103717) * C154468 + (C103716 + C103715) * C154480) *
                C74048) *
               C2630) *
              C154118) *
         C154047) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
             C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
                C154164 * C154486 +
            (C97340 + C97341) * C154164 * C154479 + C97354 * C154460 +
            C97355 * C154407) *
               C154465 -
           (C98330 * C154407 + C98331 * C154460 +
            (C97906 + C97907) * C154164 * C154479 +
            (C97277 * C602 - C97278 * C585 - C97277 * C603 + C154268 * C621 +
             C97275 * C600 - C97276 * C584 - C97275 * C601 + C97273 * C620) *
                C154164 * C154486) *
               C154466 +
           ((C97275 * C602 - C97276 * C585 - C97275 * C603 + C97273 * C621 +
             C97277 * C2337 - C97278 * C2328 - C97277 * C2338 +
             C154268 * C2343) *
                C154164 * C154486 +
            (C97908 + C97909) * C154164 * C154479 +
            (C97910 + C97911) * C154164 * C154460 +
            (C97912 + C97913) * C154164 * C154407) *
               C2630) *
              C154392 +
          (((C97275 * C1135 - C97276 * C1129 - C97275 * C1136 + C97273 * C1147 +
             C97277 * C1554 - C97278 * C1545 - C97277 * C1555 +
             C154268 * C1560) *
                C154164 * C154486 +
            (C98632 + C98633) * C154164 * C154479 +
            (C98634 + C98635) * C154164 * C154460 +
            (C98636 + C98637) * C154164 * C154407) *
               C154466 -
           (C98118 * C154407 + C98119 * C154460 +
            (C97628 + C97629) * C154164 * C154479 +
            (C97277 * C1135 - C97278 * C1129 - C97277 * C1136 +
             C154268 * C1147 + C97275 * C363 - C97276 * C347 - C97275 * C364 +
             C97273 * C383) *
                C154164 * C154486) *
               C154465 -
           ((C97277 * C8648 - C97278 * C8647 - C97277 * C8649 +
             C154268 * C8650 + C97275 * C1548 - C97276 * C1542 -
             C97275 * C1549 + C97273 * C1557) *
                C154164 * C154407 +
            (C97277 * C6266 - C97278 * C6259 - C97277 * C6267 +
             C154268 * C6277 + C97275 * C1550 - C97276 * C1543 -
             C97275 * C1551 + C97273 * C1558) *
                C154164 * C154460 +
            (C97277 * C6270 - C97278 * C6261 - C97277 * C6271 +
             C154268 * C6279 + C97275 * C1552 - C97276 * C1544 -
             C97275 * C1553 + C97273 * C1559) *
                C154164 * C154479 +
            (C97277 * C6274 - C97278 * C6263 - C97277 * C6275 +
             C154268 * C6281 + C97275 * C1554 - C97276 * C1545 -
             C97275 * C1555 + C97273 * C1560) *
                C154164 * C154486) *
               C2630) *
              C154118) *
         C154047) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C106573 * C144 - C106574 * C136 - C106573 * C145 + C154488 * C160 +
             C106575 * C600 - C106576 * C584 - C106575 * C601 + C154485 * C620 +
             C106577 * C602 - C106578 * C585 - C106577 * C603 + C154476 * C621 +
             C106579 * C2337 - C106580 * C2328 - C106579 * C2338 +
             C154422 * C2343) *
                C154164 * C74048 +
            (C106654 + C106655 + C106656 + C106657) * C154164 * C154021) *
               C154465 -
           ((C107158 + C107159 + C107160 + C107161) * C154164 * C154021 +
            (C106579 * C7777 - C106580 * C7773 - C106579 * C7778 +
             C154422 * C7785 + C106577 * C2337 - C106578 * C2328 -
             C106577 * C2338 + C154476 * C2343 + C106575 * C602 -
             C106576 * C585 - C106575 * C603 + C154485 * C621 + C106573 * C600 -
             C106574 * C584 - C106573 * C601 + C154488 * C620) *
                C154164 * C74048) *
               C154466 +
           ((C106573 * C602 - C106574 * C585 - C106573 * C603 + C154488 * C621 +
             C106575 * C2337 - C106576 * C2328 - C106575 * C2338 +
             C154485 * C2343 + C106577 * C7777 - C106578 * C7773 -
             C106577 * C7778 + C154476 * C7785 + C106579 * C10602 -
             C106580 * C10597 - C106579 * C10603 + C154422 * C10606) *
                C154164 * C74048 +
            (C107162 + C107163 + C107164 + C107165) * C154164 * C154021) *
               C2630) *
              C154392 +
          (((C106573 * C1135 - C106574 * C1129 - C106573 * C1136 +
             C154488 * C1147 + C106575 * C1554 - C106576 * C1545 -
             C106575 * C1555 + C154485 * C1560 + C106577 * C6274 -
             C106578 * C6263 - C106577 * C6275 + C154476 * C6281 +
             C106579 * C9282 - C106580 * C9277 - C106579 * C9283 +
             C154422 * C9286) *
                C154164 * C74048 +
            (C107892 + C107893 + C107894 + C107895) * C154164 * C154021) *
               C154466 -
           ((C106908 + C106909 + C106910 + C106911) * C154164 * C154021 +
            (C106579 * C6274 - C106580 * C6263 - C106579 * C6275 +
             C154422 * C6281 + C106577 * C1554 - C106578 * C1545 -
             C106577 * C1555 + C154476 * C1560 + C106575 * C1135 -
             C106576 * C1129 - C106575 * C1136 + C154485 * C1147 +
             C106573 * C363 - C106574 * C347 - C106573 * C364 +
             C154488 * C383) *
                C154164 * C74048) *
               C154465 -
           ((C106579 * C56192 - C106580 * C56191 - C106579 * C56193 +
             C154422 * C56194 + C106577 * C9280 - C106578 * C9276 -
             C106577 * C9281 + C154476 * C9285 + C106575 * C6270 -
             C106576 * C6261 - C106575 * C6271 + C154485 * C6279 +
             C106573 * C1552 - C106574 * C1544 - C106573 * C1553 +
             C154488 * C1559) *
                C154164 * C154021 +
            (C106579 * C33869 - C106580 * C33866 - C106579 * C33870 +
             C154422 * C33872 + C106577 * C9282 - C106578 * C9277 -
             C106577 * C9283 + C154476 * C9286 + C106575 * C6274 -
             C106576 * C6263 - C106575 * C6275 + C154485 * C6281 +
             C106573 * C1554 - C106574 * C1545 - C106573 * C1555 +
             C154488 * C1560) *
                C154164 * C74048) *
               C2630) *
              C154118) *
         C154047) /
            (p * q * std::sqrt(p + q));
    d2ee[267] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
                 C97277 * C600 - C97278 * C584 - C97277 * C601 +
                 C154268 * C620) *
                    C154164 * C154486 +
                (C97340 + C97341) * C154164 * C154479 + C97354 * C154460 +
                C97355 * C154407) *
                   C2114 -
               (C98330 * C154407 + C98331 * C154460 +
                (C97906 + C97907) * C154164 * C154479 +
                (C97277 * C602 - C97278 * C585 - C97277 * C603 +
                 C154268 * C621 + C97275 * C600 - C97276 * C584 -
                 C97275 * C601 + C97273 * C620) *
                    C154164 * C154486) *
                   C154146) *
                  C154066 * C1309 +
              (((C97907 + C97906) * C154164 * C154486 +
                (C97905 + C97904) * C154164 * C154479 +
                (C97903 + C97902) * C154164 * C154460 +
                (C98336 + C98337) * C154164 * C154407) *
                   C154146 -
               (C97356 * C154407 + C97357 * C154460 +
                (C97343 + C97342) * C154164 * C154479 +
                (C97341 + C97340) * C154164 * C154486) *
                   C2114) *
                  C154066 * C1310 +
              ((C97354 * C154486 + C97355 * C154479 +
                (C97347 + C97346) * C154164 * C154460 +
                (C97348 + C97349) * C154164 * C154407) *
                   C2114 -
               ((C97277 * C614 - C97278 * C591 - C97277 * C615 +
                 C154268 * C627 + C97275 * C612 - C97276 * C590 -
                 C97275 * C613 + C97273 * C626) *
                    C154164 * C154407 +
                (C98337 + C98336) * C154164 * C154460 + C98330 * C154479 +
                C98331 * C154486) *
                   C154146) *
                  C154066 * C1311) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
                 C97277 * C600 - C97278 * C584 - C97277 * C601 +
                 C154268 * C620) *
                    C154164 * C154486 +
                (C97340 + C97341) * C154164 * C154479 + C97354 * C154460 +
                C97355 * C154407) *
                   C2114 -
               (C98330 * C154407 + C98331 * C154460 +
                (C97906 + C97907) * C154164 * C154479 +
                (C97277 * C602 - C97278 * C585 - C97277 * C603 +
                 C154268 * C621 + C97275 * C600 - C97276 * C584 -
                 C97275 * C601 + C97273 * C620) *
                    C154164 * C154486) *
                   C154146) *
                  C338 +
              (((C97275 * C1135 - C97276 * C1129 - C97275 * C1136 +
                 C97273 * C1147 + C97277 * C1554 - C97278 * C1545 -
                 C97277 * C1555 + C154268 * C1560) *
                    C154164 * C154486 +
                (C98632 + C98633) * C154164 * C154479 +
                (C98634 + C98635) * C154164 * C154460 +
                (C98636 + C98637) * C154164 * C154407) *
                   C154146 -
               (C98118 * C154407 + C98119 * C154460 +
                (C97628 + C97629) * C154164 * C154479 +
                (C97277 * C1135 - C97278 * C1129 - C97277 * C1136 +
                 C154268 * C1147 + C97275 * C363 - C97276 * C347 -
                 C97275 * C364 + C97273 * C383) *
                    C154164 * C154486) *
                   C2114) *
                  C339 +
              (((C97275 * C365 - C97276 * C348 - C97275 * C366 + C97273 * C384 +
                 C97277 * C1985 - C97278 * C1976 - C97277 * C1986 +
                 C154268 * C1991) *
                    C154164 * C154486 +
                (C97630 + C97631) * C154164 * C154479 +
                (C97632 + C97633) * C154164 * C154460 +
                (C97634 + C97635) * C154164 * C154407) *
                   C2114 -
               ((C97277 * C3451 - C97278 * C3444 - C97277 * C3452 +
                 C154268 * C3456 + C97275 * C1979 - C97276 * C1973 -
                 C97275 * C1980 + C97273 * C1988) *
                    C154164 * C154407 +
                (C97277 * C3449 - C97278 * C3443 - C97277 * C3450 +
                 C154268 * C3455 + C97275 * C1981 - C97276 * C1974 -
                 C97275 * C1982 + C97273 * C1989) *
                    C154164 * C154460 +
                (C97277 * C3447 - C97278 * C3442 - C97277 * C3448 +
                 C154268 * C3454 + C97275 * C1983 - C97276 * C1975 -
                 C97275 * C1984 + C97273 * C1990) *
                    C154164 * C154479 +
                (C97277 * C3445 - C97278 * C3441 - C97277 * C3446 +
                 C154268 * C3453 + C97275 * C1985 - C97276 * C1976 -
                 C97275 * C1986 + C97273 * C1991) *
                    C154164 * C154486) *
                   C154146) *
                  C340) *
             C154047) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
            C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
               C154164 * C154486 +
           (C97340 + C97341) * C154164 * C154479 + C97354 * C154460 +
           C97355 * C154407) *
              C2320 -
          (C98330 * C154407 + C98331 * C154460 +
           (C97906 + C97907) * C154164 * C154479 +
           (C97277 * C602 - C97278 * C585 - C97277 * C603 + C154268 * C621 +
            C97275 * C600 - C97276 * C584 - C97275 * C601 + C97273 * C620) *
               C154164 * C154486) *
              C2321 +
          ((C97275 * C602 - C97276 * C585 - C97275 * C603 + C97273 * C621 +
            C97277 * C2337 - C97278 * C2328 - C97277 * C2338 +
            C154268 * C2343) *
               C154164 * C154486 +
           (C97908 + C97909) * C154164 * C154479 +
           (C97910 + C97911) * C154164 * C154460 +
           (C97912 + C97913) * C154164 * C154407) *
              C2322 -
          ((C97277 * C7783 - C97278 * C7776 - C97277 * C7784 + C154268 * C7788 +
            C97275 * C2331 - C97276 * C2325 - C97275 * C2332 + C97273 * C2340) *
               C154164 * C154407 +
           (C97277 * C7781 - C97278 * C7775 - C97277 * C7782 + C154268 * C7787 +
            C97275 * C2333 - C97276 * C2326 - C97275 * C2334 + C97273 * C2341) *
               C154164 * C154460 +
           (C97277 * C7779 - C97278 * C7774 - C97277 * C7780 + C154268 * C7786 +
            C97275 * C2335 - C97276 * C2327 - C97275 * C2336 + C97273 * C2342) *
               C154164 * C154479 +
           (C97277 * C7777 - C97278 * C7773 - C97277 * C7778 + C154268 * C7785 +
            C97275 * C2337 - C97276 * C2328 - C97275 * C2338 + C97273 * C2343) *
               C154164 * C154486) *
              C2323) *
         C154066 * C154047) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
              C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
                 C154480 +
             (C101527 + C101528) * C154468 + C101539 * C154442) *
                C74048 +
            ((C97340 + C97341) * C154480 + C101466 * C154468 +
             C101467 * C154442) *
                C154021) *
               C2114 -
           ((C102856 * C154442 + C102857 * C154468 +
             (C97906 + C97907) * C154480) *
                C154021 +
            (C104685 * C154442 + (C102898 + C102899) * C154468 +
             (C97277 * C602 - C97278 * C585 - C97277 * C603 + C154268 * C621 +
              C97275 * C600 - C97276 * C584 - C97275 * C601 + C97273 * C620) *
                 C154480) *
                C74048) *
               C154146) *
              C154066 * C1309 +
          ((((C97907 + C97906) * C154480 + C102874 * C154468 +
             C102875 * C154442) *
                C74048 +
            ((C97905 + C97904) * C154480 + (C98634 + C98635) * C154468 +
             (C102468 + C102469) * C154442) *
                C154021) *
               C154146 -
           ((C101502 * C154442 + C98109 * C154468 +
             (C97343 + C97342) * C154480) *
                C154021 +
            (C101476 * C154442 + C101477 * C154468 +
             (C97341 + C97340) * C154480) *
                C74048) *
               C2114) *
              C154066 * C1310 +
          (((C97350 * C154480 + C102164 * C154468 + C102165 * C154442) *
                C74048 +
            (C97351 * C154480 + (C97625 + C97624) * C154468 +
             (C97634 + C97635) * C154442) *
                C154021) *
               C2114 -
           (((C97277 * C3451 - C97278 * C3444 - C97277 * C3452 +
              C154268 * C3456 + C97275 * C1979 - C97276 * C1973 -
              C97275 * C1980 + C97273 * C1988) *
                 C154442 +
             (C98637 + C98636) * C154468 + C98320 * C154480) *
                C154021 +
            ((C102469 + C102468) * C154442 + (C98635 + C98634) * C154468 +
             C98321 * C154480) *
                C74048) *
               C154146) *
              C154066 * C1311)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
              C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
                 C154480 +
             (C101527 + C101528) * C154468 + C101539 * C154442) *
                C74048 +
            ((C97340 + C97341) * C154480 + C101466 * C154468 +
             C101467 * C154442) *
                C154021) *
               C2114 -
           ((C102856 * C154442 + C102857 * C154468 +
             (C97906 + C97907) * C154480) *
                C154021 +
            (C104685 * C154442 + (C102898 + C102899) * C154468 +
             (C97277 * C602 - C97278 * C585 - C97277 * C603 + C154268 * C621 +
              C97275 * C600 - C97276 * C584 - C97275 * C601 + C97273 * C620) *
                 C154480) *
                C74048) *
               C154146) *
              C338 +
          ((((C102899 + C102898) * C154480 + (C102897 + C102896) * C154468 +
             (C104698 + C104699) * C154442) *
                C74048 +
            (C102874 * C154480 + C102875 * C154468 +
             (C102900 + C102901) * C154442) *
                C154021) *
               C154146 -
           ((C101540 * C154442 + C101476 * C154468 + C101477 * C154480) *
                C154021 +
            (C103386 * C154442 + (C101530 + C101529) * C154468 +
             (C101528 + C101527) * C154480) *
                C74048) *
               C2114) *
              C339 +
          (((C101539 * C154480 + (C101534 + C101533) * C154468 +
             (C103399 + C103400) * C154442) *
                C74048 +
            (C101467 * C154480 + C101541 * C154468 +
             (C101535 + C101536) * C154442) *
                C154021) *
               C2114 -
           (((C97277 * C28468 - C97278 * C28465 - C97277 * C28469 +
              C154268 * C28471 + C97275 * C5662 - C97276 * C5658 -
              C97275 * C5663 + C97273 * C5667) *
                 C154442 +
             (C102901 + C102900) * C154468 + C102856 * C154480) *
                C154021 +
            ((C97277 * C28466 - C97278 * C28464 - C97277 * C28467 +
              C154268 * C28470 + C97275 * C5664 - C97276 * C5659 -
              C97275 * C5665 + C97273 * C5668) *
                 C154442 +
             (C104699 + C104698) * C154468 + C104685 * C154480) *
                C74048) *
               C154146) *
              C340) *
         C154047) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
             C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
                C154480 +
            (C101527 + C101528) * C154468 + C101539 * C154442) *
               C74048 +
           ((C97340 + C97341) * C154480 + C101466 * C154468 +
            C101467 * C154442) *
               C154021) *
              C2320 -
          ((C102856 * C154442 + C102857 * C154468 +
            (C97906 + C97907) * C154480) *
               C154021 +
           (C104685 * C154442 + (C102898 + C102899) * C154468 +
            (C97277 * C602 - C97278 * C585 - C97277 * C603 + C154268 * C621 +
             C97275 * C600 - C97276 * C584 - C97275 * C601 + C97273 * C620) *
                C154480) *
               C74048) *
              C2321 +
          (((C97275 * C602 - C97276 * C585 - C97275 * C603 + C97273 * C621 +
             C97277 * C2337 - C97278 * C2328 - C97277 * C2338 +
             C154268 * C2343) *
                C154480 +
            (C103715 + C103716) * C154468 + (C103717 + C103718) * C154442) *
               C74048 +
           ((C97908 + C97909) * C154480 + (C101870 + C101871) * C154468 +
            (C101872 + C101873) * C154442) *
               C154021) *
              C2322 -
          (((C97277 * C31086 - C97278 * C31083 - C97277 * C31087 +
             C154268 * C31089 + C97275 * C6268 - C97276 * C6260 -
             C97275 * C6269 + C97273 * C6278) *
                C154442 +
            (C97277 * C9280 - C97278 * C9276 - C97277 * C9281 +
             C154268 * C9285 + C97275 * C6270 - C97276 * C6261 -
             C97275 * C6271 + C97273 * C6279) *
                C154468 +
            (C97277 * C7779 - C97278 * C7774 - C97277 * C7780 +
             C154268 * C7786 + C97275 * C2335 - C97276 * C2327 -
             C97275 * C2336 + C97273 * C2342) *
                C154480) *
               C154021 +
           ((C97277 * C31084 - C97278 * C31082 - C97277 * C31085 +
             C154268 * C31088 + C97275 * C6272 - C97276 * C6262 -
             C97275 * C6273 + C97273 * C6280) *
                C154442 +
            (C97277 * C9282 - C97278 * C9277 - C97277 * C9283 +
             C154268 * C9286 + C97275 * C6274 - C97276 * C6263 -
             C97275 * C6275 + C97273 * C6281) *
                C154468 +
            (C97277 * C7777 - C97278 * C7773 - C97277 * C7778 +
             C154268 * C7785 + C97275 * C2337 - C97276 * C2328 -
             C97275 * C2338 + C97273 * C2343) *
                C154480) *
               C74048) *
              C2323) *
         C154066 * C154047) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C106573 * C144 - C106574 * C136 - C106573 * C145 + C154488 * C160 +
             C106575 * C600 - C106576 * C584 - C106575 * C601 + C154485 * C620 +
             C106577 * C602 - C106578 * C585 - C106577 * C603 + C154476 * C621 +
             C106579 * C2337 - C106580 * C2328 - C106579 * C2338 +
             C154422 * C2343) *
                C154164 * C74048 +
            (C106654 + C106655 + C106656 + C106657) * C154164 * C154021) *
               C2114 -
           ((C107158 + C107159 + C107160 + C107161) * C154164 * C154021 +
            (C106579 * C7777 - C106580 * C7773 - C106579 * C7778 +
             C154422 * C7785 + C106577 * C2337 - C106578 * C2328 -
             C106577 * C2338 + C154476 * C2343 + C106575 * C602 -
             C106576 * C585 - C106575 * C603 + C154485 * C621 + C106573 * C600 -
             C106574 * C584 - C106573 * C601 + C154488 * C620) *
                C154164 * C74048) *
               C154146) *
              C154066 * C1309 +
          (((C107161 + C107160 + C107159 + C107158) * C154164 * C74048 +
            (C107606 + C107607 + C107608 + C107609) * C154164 * C154021) *
               C154146 -
           ((C106658 + C106659 + C106660 + C106661) * C154164 * C154021 +
            (C106657 + C106656 + C106655 + C106654) * C154164 * C74048) *
               C2114) *
              C154066 * C1310 +
          (((C106661 + C106660 + C106659 + C106658) * C154164 * C74048 +
            (C106662 + C106663 + C106664 + C106665) * C154164 * C154021) *
               C2114 -
           ((C106579 * C7783 - C106580 * C7776 - C106579 * C7784 +
             C154422 * C7788 + C106577 * C2331 - C106578 * C2325 -
             C106577 * C2332 + C154476 * C2340 + C106575 * C608 -
             C106576 * C588 - C106575 * C609 + C154485 * C624 + C106573 * C594 -
             C106574 * C581 - C106573 * C595 + C154488 * C617) *
                C154164 * C154021 +
            (C107609 + C107608 + C107607 + C107606) * C154164 * C74048) *
               C154146) *
              C154066 * C1311)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C106573 * C144 - C106574 * C136 - C106573 * C145 + C154488 * C160 +
             C106575 * C600 - C106576 * C584 - C106575 * C601 + C154485 * C620 +
             C106577 * C602 - C106578 * C585 - C106577 * C603 + C154476 * C621 +
             C106579 * C2337 - C106580 * C2328 - C106579 * C2338 +
             C154422 * C2343) *
                C154164 * C74048 +
            (C106654 + C106655 + C106656 + C106657) * C154164 * C154021) *
               C2114 -
           ((C107158 + C107159 + C107160 + C107161) * C154164 * C154021 +
            (C106579 * C7777 - C106580 * C7773 - C106579 * C7778 +
             C154422 * C7785 + C106577 * C2337 - C106578 * C2328 -
             C106577 * C2338 + C154476 * C2343 + C106575 * C602 -
             C106576 * C585 - C106575 * C603 + C154485 * C621 + C106573 * C600 -
             C106574 * C584 - C106573 * C601 + C154488 * C620) *
                C154164 * C74048) *
               C154146) *
              C338 +
          (((C106573 * C1135 - C106574 * C1129 - C106573 * C1136 +
             C154488 * C1147 + C106575 * C1554 - C106576 * C1545 -
             C106575 * C1555 + C154485 * C1560 + C106577 * C6274 -
             C106578 * C6263 - C106577 * C6275 + C154476 * C6281 +
             C106579 * C9282 - C106580 * C9277 - C106579 * C9283 +
             C154422 * C9286) *
                C154164 * C74048 +
            (C107892 + C107893 + C107894 + C107895) * C154164 * C154021) *
               C154146 -
           ((C106908 + C106909 + C106910 + C106911) * C154164 * C154021 +
            (C106579 * C6274 - C106580 * C6263 - C106579 * C6275 +
             C154422 * C6281 + C106577 * C1554 - C106578 * C1545 -
             C106577 * C1555 + C154476 * C1560 + C106575 * C1135 -
             C106576 * C1129 - C106575 * C1136 + C154485 * C1147 +
             C106573 * C363 - C106574 * C347 - C106573 * C364 +
             C154488 * C383) *
                C154164 * C74048) *
               C2114) *
              C339 +
          (((C106573 * C365 - C106574 * C348 - C106573 * C366 + C154488 * C384 +
             C106575 * C1985 - C106576 * C1976 - C106575 * C1986 +
             C154485 * C1991 + C106577 * C3445 - C106578 * C3441 -
             C106577 * C3446 + C154476 * C3453 + C106579 * C6272 -
             C106580 * C6262 - C106579 * C6273 + C154422 * C6280) *
                C154164 * C74048 +
            (C106912 + C106913 + C106914 + C106915) * C154164 * C154021) *
               C2114 -
           ((C106579 * C31086 - C106580 * C31083 - C106579 * C31087 +
             C154422 * C31089 + C106577 * C6268 - C106578 * C6260 -
             C106577 * C6269 + C154476 * C6278 + C106575 * C3447 -
             C106576 * C3442 - C106575 * C3448 + C154485 * C3454 +
             C106573 * C1983 - C106574 * C1975 - C106573 * C1984 +
             C154488 * C1990) *
                C154164 * C154021 +
            (C106579 * C31084 - C106580 * C31082 - C106579 * C31085 +
             C154422 * C31088 + C106577 * C6272 - C106578 * C6262 -
             C106577 * C6273 + C154476 * C6280 + C106575 * C3445 -
             C106576 * C3441 - C106575 * C3446 + C154485 * C3453 +
             C106573 * C1985 - C106574 * C1976 - C106573 * C1986 +
             C154488 * C1991) *
                C154164 * C74048) *
               C154146) *
              C340) *
         C154047) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C106573 * C144 - C106574 * C136 - C106573 * C145 + C154488 * C160 +
            C106575 * C600 - C106576 * C584 - C106575 * C601 + C154485 * C620 +
            C106577 * C602 - C106578 * C585 - C106577 * C603 + C154476 * C621 +
            C106579 * C2337 - C106580 * C2328 - C106579 * C2338 +
            C154422 * C2343) *
               C154164 * C74048 +
           (C106654 + C106655 + C106656 + C106657) * C154164 * C154021) *
              C2320 -
          ((C107158 + C107159 + C107160 + C107161) * C154164 * C154021 +
           (C106579 * C7777 - C106580 * C7773 - C106579 * C7778 +
            C154422 * C7785 + C106577 * C2337 - C106578 * C2328 -
            C106577 * C2338 + C154476 * C2343 + C106575 * C602 -
            C106576 * C585 - C106575 * C603 + C154485 * C621 + C106573 * C600 -
            C106574 * C584 - C106573 * C601 + C154488 * C620) *
               C154164 * C74048) *
              C2321 +
          ((C106573 * C602 - C106574 * C585 - C106573 * C603 + C154488 * C621 +
            C106575 * C2337 - C106576 * C2328 - C106575 * C2338 +
            C154485 * C2343 + C106577 * C7777 - C106578 * C7773 -
            C106577 * C7778 + C154476 * C7785 + C106579 * C10602 -
            C106580 * C10597 - C106579 * C10603 + C154422 * C10606) *
               C154164 * C74048 +
           (C107162 + C107163 + C107164 + C107165) * C154164 * C154021) *
              C2322 -
          ((C106579 * C55781 - C106580 * C55778 - C106579 * C55782 +
            C154422 * C55784 + C106577 * C10600 - C106578 * C10596 -
            C106577 * C10601 + C154476 * C10605 + C106575 * C7779 -
            C106576 * C7774 - C106575 * C7780 + C154485 * C7786 +
            C106573 * C2335 - C106574 * C2327 - C106573 * C2336 +
            C154488 * C2342) *
               C154164 * C154021 +
           (C106579 * C55779 - C106580 * C55777 - C106579 * C55780 +
            C154422 * C55783 + C106577 * C10602 - C106578 * C10597 -
            C106577 * C10603 + C154476 * C10606 + C106575 * C7777 -
            C106576 * C7773 - C106575 * C7778 + C154485 * C7785 +
            C106573 * C2337 - C106574 * C2328 - C106573 * C2338 +
            C154488 * C2343) *
               C154164 * C74048) *
              C2323) *
         C154066 * C154047) /
            (p * q * std::sqrt(p + q));
    d2ee[268] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
              C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
                 C154480 +
             (C101527 + C101528) * C154468 + C101539 * C154442) *
                C74048 +
            ((C97340 + C97341) * C154480 + C101466 * C154468 +
             C101467 * C154442) *
                C154021) *
               C154465 -
           ((C102856 * C154442 + C102857 * C154468 +
             (C97906 + C97907) * C154480) *
                C154021 +
            (C104685 * C154442 + (C102898 + C102899) * C154468 +
             (C97277 * C602 - C97278 * C585 - C97277 * C603 + C154268 * C621 +
              C97275 * C600 - C97276 * C584 - C97275 * C601 + C97273 * C620) *
                 C154480) *
                C74048) *
               C154466 +
           (((C97275 * C602 - C97276 * C585 - C97275 * C603 + C97273 * C621 +
              C97277 * C2337 - C97278 * C2328 - C97277 * C2338 +
              C154268 * C2343) *
                 C154480 +
             (C103715 + C103716) * C154468 + (C103717 + C103718) * C154442) *
                C74048 +
            ((C97908 + C97909) * C154480 + (C101870 + C101871) * C154468 +
             (C101872 + C101873) * C154442) *
                C154021) *
               C2630) *
              C154066 * C154384 +
          ((((C97907 + C97906) * C154480 + C102874 * C154468 +
             C102875 * C154442) *
                C74048 +
            ((C97905 + C97904) * C154480 + (C98634 + C98635) * C154468 +
             (C102468 + C102469) * C154442) *
                C154021) *
               C154466 -
           ((C101502 * C154442 + C98109 * C154468 +
             (C97343 + C97342) * C154480) *
                C154021 +
            (C101476 * C154442 + C101477 * C154468 +
             (C97341 + C97340) * C154480) *
                C74048) *
               C154465 -
           (((C97277 * C6264 - C97278 * C6258 - C97277 * C6265 +
              C154268 * C6276 + C97275 * C3449 - C97276 * C3443 -
              C97275 * C3450 + C97273 * C3455) *
                 C154442 +
             (C97277 * C6266 - C97278 * C6259 - C97277 * C6267 +
              C154268 * C6277 + C97275 * C1550 - C97276 * C1543 -
              C97275 * C1551 + C97273 * C1558) *
                 C154468 +
             (C97911 + C97910) * C154480) *
                C154021 +
            ((C101873 + C101872) * C154442 + (C101871 + C101870) * C154468 +
             (C97909 + C97908) * C154480) *
                C74048) *
               C2630) *
              C154066 * C154053)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
             C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
                C154164 * C154486 +
            (C97340 + C97341) * C154164 * C154479 + C97354 * C154460 +
            C97355 * C154407) *
               C154465 -
           (C98330 * C154407 + C98331 * C154460 +
            (C97906 + C97907) * C154164 * C154479 +
            (C97277 * C602 - C97278 * C585 - C97277 * C603 + C154268 * C621 +
             C97275 * C600 - C97276 * C584 - C97275 * C601 + C97273 * C620) *
                C154164 * C154486) *
               C154466 +
           ((C97275 * C602 - C97276 * C585 - C97275 * C603 + C97273 * C621 +
             C97277 * C2337 - C97278 * C2328 - C97277 * C2338 +
             C154268 * C2343) *
                C154164 * C154486 +
            (C97908 + C97909) * C154164 * C154479 +
            (C97910 + C97911) * C154164 * C154460 +
            (C97912 + C97913) * C154164 * C154407) *
               C2630) *
              C154066 * C154384 +
          (((C97907 + C97906) * C154164 * C154486 +
            (C97905 + C97904) * C154164 * C154479 +
            (C97903 + C97902) * C154164 * C154460 +
            (C98336 + C98337) * C154164 * C154407) *
               C154466 -
           (C97356 * C154407 + C97357 * C154460 +
            (C97343 + C97342) * C154164 * C154479 +
            (C97341 + C97340) * C154164 * C154486) *
               C154465 -
           ((C97277 * C2329 - C97278 * C2324 - C97277 * C2330 +
             C154268 * C2339 + C97275 * C610 - C97276 * C589 - C97275 * C611 +
             C97273 * C625) *
                C154164 * C154407 +
            (C97913 + C97912) * C154164 * C154460 +
            (C97911 + C97910) * C154164 * C154479 +
            (C97909 + C97908) * C154164 * C154486) *
               C2630) *
              C154066 * C154053)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C106573 * C144 - C106574 * C136 - C106573 * C145 + C154488 * C160 +
             C106575 * C600 - C106576 * C584 - C106575 * C601 + C154485 * C620 +
             C106577 * C602 - C106578 * C585 - C106577 * C603 + C154476 * C621 +
             C106579 * C2337 - C106580 * C2328 - C106579 * C2338 +
             C154422 * C2343) *
                C154164 * C74048 +
            (C106654 + C106655 + C106656 + C106657) * C154164 * C154021) *
               C154465 -
           ((C107158 + C107159 + C107160 + C107161) * C154164 * C154021 +
            (C106579 * C7777 - C106580 * C7773 - C106579 * C7778 +
             C154422 * C7785 + C106577 * C2337 - C106578 * C2328 -
             C106577 * C2338 + C154476 * C2343 + C106575 * C602 -
             C106576 * C585 - C106575 * C603 + C154485 * C621 + C106573 * C600 -
             C106574 * C584 - C106573 * C601 + C154488 * C620) *
                C154164 * C74048) *
               C154466 +
           ((C106573 * C602 - C106574 * C585 - C106573 * C603 + C154488 * C621 +
             C106575 * C2337 - C106576 * C2328 - C106575 * C2338 +
             C154485 * C2343 + C106577 * C7777 - C106578 * C7773 -
             C106577 * C7778 + C154476 * C7785 + C106579 * C10602 -
             C106580 * C10597 - C106579 * C10603 + C154422 * C10606) *
                C154164 * C74048 +
            (C107162 + C107163 + C107164 + C107165) * C154164 * C154021) *
               C2630) *
              C154066 * C154384 +
          (((C107161 + C107160 + C107159 + C107158) * C154164 * C74048 +
            (C107606 + C107607 + C107608 + C107609) * C154164 * C154021) *
               C154466 -
           ((C106658 + C106659 + C106660 + C106661) * C154164 * C154021 +
            (C106657 + C106656 + C106655 + C106654) * C154164 * C74048) *
               C154465 -
           ((C106579 * C10598 - C106580 * C10595 - C106579 * C10599 +
             C154422 * C10604 + C106577 * C7781 - C106578 * C7775 -
             C106577 * C7782 + C154476 * C7787 + C106575 * C2333 -
             C106576 * C2326 - C106575 * C2334 + C154485 * C2341 +
             C106573 * C606 - C106574 * C587 - C106573 * C607 +
             C154488 * C623) *
                C154164 * C154021 +
            (C107165 + C107164 + C107163 + C107162) * C154164 * C74048) *
               C2630) *
              C154066 * C154053)) /
            (p * q * std::sqrt(p + q));
    d2ee[269] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
             C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
                C154164 * C154486 +
            (C97340 + C97341) * C154164 * C154479 + C97354 * C154460 +
            C97355 * C154407) *
               C2114 -
           (C98330 * C154407 + C98331 * C154460 +
            (C97906 + C97907) * C154164 * C154479 +
            (C97277 * C602 - C97278 * C585 - C97277 * C603 + C154268 * C621 +
             C97275 * C600 - C97276 * C584 - C97275 * C601 + C97273 * C620) *
                C154164 * C154486) *
               C154146) *
              C338 +
          (((C97275 * C1135 - C97276 * C1129 - C97275 * C1136 + C97273 * C1147 +
             C97277 * C1554 - C97278 * C1545 - C97277 * C1555 +
             C154268 * C1560) *
                C154164 * C154486 +
            (C98632 + C98633) * C154164 * C154479 +
            (C98634 + C98635) * C154164 * C154460 +
            (C98636 + C98637) * C154164 * C154407) *
               C154146 -
           (C98118 * C154407 + C98119 * C154460 +
            (C97628 + C97629) * C154164 * C154479 +
            (C97277 * C1135 - C97278 * C1129 - C97277 * C1136 +
             C154268 * C1147 + C97275 * C363 - C97276 * C347 - C97275 * C364 +
             C97273 * C383) *
                C154164 * C154486) *
               C2114) *
              C339 +
          (((C97275 * C365 - C97276 * C348 - C97275 * C366 + C97273 * C384 +
             C97277 * C1985 - C97278 * C1976 - C97277 * C1986 +
             C154268 * C1991) *
                C154164 * C154486 +
            (C97630 + C97631) * C154164 * C154479 +
            (C97632 + C97633) * C154164 * C154460 +
            (C97634 + C97635) * C154164 * C154407) *
               C2114 -
           ((C97277 * C3451 - C97278 * C3444 - C97277 * C3452 +
             C154268 * C3456 + C97275 * C1979 - C97276 * C1973 -
             C97275 * C1980 + C97273 * C1988) *
                C154164 * C154407 +
            (C97277 * C3449 - C97278 * C3443 - C97277 * C3450 +
             C154268 * C3455 + C97275 * C1981 - C97276 * C1974 -
             C97275 * C1982 + C97273 * C1989) *
                C154164 * C154460 +
            (C97277 * C3447 - C97278 * C3442 - C97277 * C3448 +
             C154268 * C3454 + C97275 * C1983 - C97276 * C1975 -
             C97275 * C1984 + C97273 * C1990) *
                C154164 * C154479 +
            (C97277 * C3445 - C97278 * C3441 - C97277 * C3446 +
             C154268 * C3453 + C97275 * C1985 - C97276 * C1976 -
             C97275 * C1986 + C97273 * C1991) *
                C154164 * C154486) *
               C154146) *
              C340) *
         C154047) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
             C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
                C154164 * C154486 +
            (C97340 + C97341) * C154164 * C154479 + C97354 * C154460 +
            C97355 * C154407) *
               C2114 -
           (C98330 * C154407 + C98331 * C154460 +
            (C97906 + C97907) * C154164 * C154479 +
            (C97277 * C602 - C97278 * C585 - C97277 * C603 + C154268 * C621 +
             C97275 * C600 - C97276 * C584 - C97275 * C601 + C97273 * C620) *
                C154164 * C154486) *
               C154146) *
              C154066 * C1309 +
          (((C97907 + C97906) * C154164 * C154486 +
            (C97905 + C97904) * C154164 * C154479 +
            (C97903 + C97902) * C154164 * C154460 +
            (C98336 + C98337) * C154164 * C154407) *
               C154146 -
           (C97356 * C154407 + C97357 * C154460 +
            (C97343 + C97342) * C154164 * C154479 +
            (C97341 + C97340) * C154164 * C154486) *
               C2114) *
              C154066 * C1310 +
          ((C97354 * C154486 + C97355 * C154479 +
            (C97347 + C97346) * C154164 * C154460 +
            (C97348 + C97349) * C154164 * C154407) *
               C2114 -
           ((C97277 * C614 - C97278 * C591 - C97277 * C615 + C154268 * C627 +
             C97275 * C612 - C97276 * C590 - C97275 * C613 + C97273 * C626) *
                C154164 * C154407 +
            (C98337 + C98336) * C154164 * C154460 + C98330 * C154479 +
            C98331 * C154486) *
               C154146) *
              C154066 * C1311)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
              C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
                 C154480 +
             (C101527 + C101528) * C154468 + C101539 * C154442) *
                C74048 +
            ((C97340 + C97341) * C154480 + C101466 * C154468 +
             C101467 * C154442) *
                C154021) *
               C2114 -
           ((C102856 * C154442 + C102857 * C154468 +
             (C97906 + C97907) * C154480) *
                C154021 +
            (C104685 * C154442 + (C102898 + C102899) * C154468 +
             (C97277 * C602 - C97278 * C585 - C97277 * C603 + C154268 * C621 +
              C97275 * C600 - C97276 * C584 - C97275 * C601 + C97273 * C620) *
                 C154480) *
                C74048) *
               C154146) *
              C154066 * C1309 +
          ((((C97907 + C97906) * C154480 + C102874 * C154468 +
             C102875 * C154442) *
                C74048 +
            ((C97905 + C97904) * C154480 + (C98634 + C98635) * C154468 +
             (C102468 + C102469) * C154442) *
                C154021) *
               C154146 -
           ((C101502 * C154442 + C98109 * C154468 +
             (C97343 + C97342) * C154480) *
                C154021 +
            (C101476 * C154442 + C101477 * C154468 +
             (C97341 + C97340) * C154480) *
                C74048) *
               C2114) *
              C154066 * C1310 +
          (((C97350 * C154480 + C102164 * C154468 + C102165 * C154442) *
                C74048 +
            (C97351 * C154480 + (C97625 + C97624) * C154468 +
             (C97634 + C97635) * C154442) *
                C154021) *
               C2114 -
           (((C97277 * C3451 - C97278 * C3444 - C97277 * C3452 +
              C154268 * C3456 + C97275 * C1979 - C97276 * C1973 -
              C97275 * C1980 + C97273 * C1988) *
                 C154442 +
             (C98637 + C98636) * C154468 + C98320 * C154480) *
                C154021 +
            ((C102469 + C102468) * C154442 + (C98635 + C98634) * C154468 +
             C98321 * C154480) *
                C74048) *
               C154146) *
              C154066 * C1311)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
              C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
                 C154480 +
             (C101527 + C101528) * C154468 + C101539 * C154442) *
                C74048 +
            ((C97340 + C97341) * C154480 + C101466 * C154468 +
             C101467 * C154442) *
                C154021) *
               C2114 -
           ((C102856 * C154442 + C102857 * C154468 +
             (C97906 + C97907) * C154480) *
                C154021 +
            (C104685 * C154442 + (C102898 + C102899) * C154468 +
             (C97277 * C602 - C97278 * C585 - C97277 * C603 + C154268 * C621 +
              C97275 * C600 - C97276 * C584 - C97275 * C601 + C97273 * C620) *
                 C154480) *
                C74048) *
               C154146) *
              C338 +
          ((((C102899 + C102898) * C154480 + (C102897 + C102896) * C154468 +
             (C104698 + C104699) * C154442) *
                C74048 +
            (C102874 * C154480 + C102875 * C154468 +
             (C102900 + C102901) * C154442) *
                C154021) *
               C154146 -
           ((C101540 * C154442 + C101476 * C154468 + C101477 * C154480) *
                C154021 +
            (C103386 * C154442 + (C101530 + C101529) * C154468 +
             (C101528 + C101527) * C154480) *
                C74048) *
               C2114) *
              C339 +
          (((C101539 * C154480 + (C101534 + C101533) * C154468 +
             (C103399 + C103400) * C154442) *
                C74048 +
            (C101467 * C154480 + C101541 * C154468 +
             (C101535 + C101536) * C154442) *
                C154021) *
               C2114 -
           (((C97277 * C28468 - C97278 * C28465 - C97277 * C28469 +
              C154268 * C28471 + C97275 * C5662 - C97276 * C5658 -
              C97275 * C5663 + C97273 * C5667) *
                 C154442 +
             (C102901 + C102900) * C154468 + C102856 * C154480) *
                C154021 +
            ((C97277 * C28466 - C97278 * C28464 - C97277 * C28467 +
              C154268 * C28470 + C97275 * C5664 - C97276 * C5659 -
              C97275 * C5665 + C97273 * C5668) *
                 C154442 +
             (C104699 + C104698) * C154468 + C104685 * C154480) *
                C74048) *
               C154146) *
              C340) *
         C154047) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C106573 * C144 - C106574 * C136 - C106573 * C145 + C154488 * C160 +
             C106575 * C600 - C106576 * C584 - C106575 * C601 + C154485 * C620 +
             C106577 * C602 - C106578 * C585 - C106577 * C603 + C154476 * C621 +
             C106579 * C2337 - C106580 * C2328 - C106579 * C2338 +
             C154422 * C2343) *
                C154164 * C74048 +
            (C106654 + C106655 + C106656 + C106657) * C154164 * C154021) *
               C2114 -
           ((C107158 + C107159 + C107160 + C107161) * C154164 * C154021 +
            (C106579 * C7777 - C106580 * C7773 - C106579 * C7778 +
             C154422 * C7785 + C106577 * C2337 - C106578 * C2328 -
             C106577 * C2338 + C154476 * C2343 + C106575 * C602 -
             C106576 * C585 - C106575 * C603 + C154485 * C621 + C106573 * C600 -
             C106574 * C584 - C106573 * C601 + C154488 * C620) *
                C154164 * C74048) *
               C154146) *
              C154066 * C1309 +
          (((C107161 + C107160 + C107159 + C107158) * C154164 * C74048 +
            (C107606 + C107607 + C107608 + C107609) * C154164 * C154021) *
               C154146 -
           ((C106658 + C106659 + C106660 + C106661) * C154164 * C154021 +
            (C106657 + C106656 + C106655 + C106654) * C154164 * C74048) *
               C2114) *
              C154066 * C1310 +
          (((C106661 + C106660 + C106659 + C106658) * C154164 * C74048 +
            (C106662 + C106663 + C106664 + C106665) * C154164 * C154021) *
               C2114 -
           ((C106579 * C7783 - C106580 * C7776 - C106579 * C7784 +
             C154422 * C7788 + C106577 * C2331 - C106578 * C2325 -
             C106577 * C2332 + C154476 * C2340 + C106575 * C608 -
             C106576 * C588 - C106575 * C609 + C154485 * C624 + C106573 * C594 -
             C106574 * C581 - C106573 * C595 + C154488 * C617) *
                C154164 * C154021 +
            (C107609 + C107608 + C107607 + C107606) * C154164 * C74048) *
               C154146) *
              C154066 * C1311)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C106573 * C144 - C106574 * C136 - C106573 * C145 + C154488 * C160 +
             C106575 * C600 - C106576 * C584 - C106575 * C601 + C154485 * C620 +
             C106577 * C602 - C106578 * C585 - C106577 * C603 + C154476 * C621 +
             C106579 * C2337 - C106580 * C2328 - C106579 * C2338 +
             C154422 * C2343) *
                C154164 * C74048 +
            (C106654 + C106655 + C106656 + C106657) * C154164 * C154021) *
               C2114 -
           ((C107158 + C107159 + C107160 + C107161) * C154164 * C154021 +
            (C106579 * C7777 - C106580 * C7773 - C106579 * C7778 +
             C154422 * C7785 + C106577 * C2337 - C106578 * C2328 -
             C106577 * C2338 + C154476 * C2343 + C106575 * C602 -
             C106576 * C585 - C106575 * C603 + C154485 * C621 + C106573 * C600 -
             C106574 * C584 - C106573 * C601 + C154488 * C620) *
                C154164 * C74048) *
               C154146) *
              C338 +
          (((C106573 * C1135 - C106574 * C1129 - C106573 * C1136 +
             C154488 * C1147 + C106575 * C1554 - C106576 * C1545 -
             C106575 * C1555 + C154485 * C1560 + C106577 * C6274 -
             C106578 * C6263 - C106577 * C6275 + C154476 * C6281 +
             C106579 * C9282 - C106580 * C9277 - C106579 * C9283 +
             C154422 * C9286) *
                C154164 * C74048 +
            (C107892 + C107893 + C107894 + C107895) * C154164 * C154021) *
               C154146 -
           ((C106908 + C106909 + C106910 + C106911) * C154164 * C154021 +
            (C106579 * C6274 - C106580 * C6263 - C106579 * C6275 +
             C154422 * C6281 + C106577 * C1554 - C106578 * C1545 -
             C106577 * C1555 + C154476 * C1560 + C106575 * C1135 -
             C106576 * C1129 - C106575 * C1136 + C154485 * C1147 +
             C106573 * C363 - C106574 * C347 - C106573 * C364 +
             C154488 * C383) *
                C154164 * C74048) *
               C2114) *
              C339 +
          (((C106573 * C365 - C106574 * C348 - C106573 * C366 + C154488 * C384 +
             C106575 * C1985 - C106576 * C1976 - C106575 * C1986 +
             C154485 * C1991 + C106577 * C3445 - C106578 * C3441 -
             C106577 * C3446 + C154476 * C3453 + C106579 * C6272 -
             C106580 * C6262 - C106579 * C6273 + C154422 * C6280) *
                C154164 * C74048 +
            (C106912 + C106913 + C106914 + C106915) * C154164 * C154021) *
               C2114 -
           ((C106579 * C31086 - C106580 * C31083 - C106579 * C31087 +
             C154422 * C31089 + C106577 * C6268 - C106578 * C6260 -
             C106577 * C6269 + C154476 * C6278 + C106575 * C3447 -
             C106576 * C3442 - C106575 * C3448 + C154485 * C3454 +
             C106573 * C1983 - C106574 * C1975 - C106573 * C1984 +
             C154488 * C1990) *
                C154164 * C154021 +
            (C106579 * C31084 - C106580 * C31082 - C106579 * C31085 +
             C154422 * C31088 + C106577 * C6272 - C106578 * C6262 -
             C106577 * C6273 + C154476 * C6280 + C106575 * C3445 -
             C106576 * C3441 - C106575 * C3446 + C154485 * C3453 +
             C106573 * C1985 - C106574 * C1976 - C106573 * C1986 +
             C154488 * C1991) *
                C154164 * C74048) *
               C154146) *
              C340) *
         C154047) /
            (p * q * std::sqrt(p + q));
    d2ee[270] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                  ((((C152148 * C144 - C152187 * C136 - C152148 * C145 +
                      C154264 * C160 + C152145 * C600 - C152180 * C584 -
                      C152145 * C601 + C154271 * C620 + C152193 * C602 -
                      C115626 * C585 - C152193 * C603 + C115620 * C621) *
                         C154164 * C154016 +
                     (C115700 + C115701 + C115702) * C154164 * C154024 +
                     C115716 * C82856) *
                        C154082 * C154392 -
                    (C116557 * C82856 +
                     (C116011 + C116012 + C116013) * C154164 * C154024 +
                     (C152193 * C1554 - C115626 * C1545 - C152193 * C1555 +
                      C115620 * C1560 + C152145 * C1135 - C152180 * C1129 -
                      C152145 * C1136 + C154271 * C1147 + C152148 * C363 -
                      C152187 * C347 - C152148 * C364 + C154264 * C383) *
                         C154164 * C154016) *
                        C154082 * C154118) *
                       C154461 +
                   (((C116013 + C116012 + C116011) * C154164 * C154016 +
                     (C116010 + C116009 + C116008) * C154164 * C154024 +
                     (C116561 + C116562 + C116563) * C154164 * C82856) *
                        C154082 * C154118 -
                    (C115717 * C82856 +
                     (C115705 + C115704 + C115703) * C154164 * C154024 +
                     (C115702 + C115701 + C115700) * C154164 * C154016) *
                        C154082 * C154392) *
                       C154462 +
                   ((C115716 * C154016 +
                     (C115708 + C115707 + C115706) * C154164 * C154024 +
                     (C115709 + C115710 + C115711) * C154164 * C82856) *
                        C154082 * C154392 -
                    ((C152193 * C1546 - C115626 * C1541 - C152193 * C1547 +
                      C115620 * C1556 + C152145 * C1143 - C152180 * C1133 -
                      C152145 * C1144 + C154271 * C1151 + C152148 * C355 -
                      C152187 * C343 - C152148 * C356 + C154264 * C379) *
                         C154164 * C82856 +
                     (C116563 + C116562 + C116561) * C154164 * C154024 +
                     C116557 * C154016) *
                        C154082 * C154118) *
                       C818)) /
                 (p * q * std::sqrt(p + q));
    d2ee[271] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                  (((((C152148 * C144 - C152187 * C136 - C152148 * C145 +
                       C154264 * C160 + C152145 * C600 - C152180 * C584 -
                       C152145 * C601 + C154271 * C620 + C152193 * C602 -
                       C115626 * C585 - C152193 * C603 + C115620 * C621) *
                          C154164 * C154016 +
                      (C115700 + C115701 + C115702) * C154164 * C154024 +
                      C115716 * C82856) *
                         C154393 -
                     (C116799 * C82856 +
                      (C116313 + C116314 + C116315) * C154164 * C154024 +
                      (C152193 * C2337 - C115626 * C2328 - C152193 * C2338 +
                       C115620 * C2343 + C152145 * C602 - C152180 * C585 -
                       C152145 * C603 + C154271 * C621 + C152148 * C600 -
                       C152187 * C584 - C152148 * C601 + C154264 * C620) *
                          C154164 * C154016) *
                         C154146) *
                        C154392 +
                    (((C152148 * C1135 - C152187 * C1129 - C152148 * C1136 +
                       C154264 * C1147 + C152145 * C1554 - C152180 * C1545 -
                       C152145 * C1555 + C154271 * C1560 + C152193 * C6274 -
                       C115626 * C6263 - C152193 * C6275 + C115620 * C6281) *
                          C154164 * C154016 +
                      (C117132 + C117133 + C117134) * C154164 * C154024 +
                      (C117135 + C117136 + C117137) * C154164 * C82856) *
                         C154146 -
                     (C116557 * C82856 +
                      (C116011 + C116012 + C116013) * C154164 * C154024 +
                      (C152193 * C1554 - C115626 * C1545 - C152193 * C1555 +
                       C115620 * C1560 + C152145 * C1135 - C152180 * C1129 -
                       C152145 * C1136 + C154271 * C1147 + C152148 * C363 -
                       C152187 * C347 - C152148 * C364 + C154264 * C383) *
                          C154164 * C154016) *
                         C154393) *
                        C154118) *
                       C341 +
                   ((((C116315 + C116314 + C116313) * C154164 * C154016 +
                      (C116312 + C116311 + C116310) * C154164 * C154024 +
                      (C116803 + C116804 + C116805) * C154164 * C82856) *
                         C154146 -
                     (C115717 * C82856 +
                      (C115705 + C115704 + C115703) * C154164 * C154024 +
                      (C115702 + C115701 + C115700) * C154164 * C154016) *
                         C154393) *
                        C154392 +
                    (((C116013 + C116012 + C116011) * C154164 * C154016 +
                      (C116010 + C116009 + C116008) * C154164 * C154024 +
                      (C116561 + C116562 + C116563) * C154164 * C82856) *
                         C154393 -
                     ((C152193 * C8648 - C115626 * C8647 - C152193 * C8649 +
                       C115620 * C8650 + C152145 * C1548 - C152180 * C1542 -
                       C152145 * C1549 + C154271 * C1557 + C152148 * C1141 -
                       C152187 * C1132 - C152148 * C1142 + C154264 * C1150) *
                          C154164 * C82856 +
                      (C117137 + C117136 + C117135) * C154164 * C154024 +
                      (C117134 + C117133 + C117132) * C154164 * C154016) *
                         C154146) *
                        C154118) *
                       C154053)) /
                 (p * q * std::sqrt(p + q));
    d2ee[272] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C152148 * C144 - C152187 * C136 - C152148 * C145 + C154264 * C160 +
             C152145 * C600 - C152180 * C584 - C152145 * C601 + C154271 * C620 +
             C152193 * C602 - C115626 * C585 - C152193 * C603 +
             C115620 * C621) *
                C154164 * C154016 +
            (C115700 + C115701 + C115702) * C154164 * C154024 +
            C115716 * C82856) *
               C154082 * C338 -
           ((C116008 + C116009 + C116010) * C154164 * C82856 +
            (C116011 + C116012 + C116013) * C154164 * C154024 +
            (C152193 * C1554 - C115626 * C1545 - C152193 * C1555 +
             C115620 * C1560 + C152145 * C1135 - C152180 * C1129 -
             C152145 * C1136 + C154271 * C1147 + C152148 * C363 -
             C152187 * C347 - C152148 * C364 + C154264 * C383) *
                C154164 * C154016) *
               C154082 * C339 +
           ((C152148 * C365 - C152187 * C348 - C152148 * C366 + C154264 * C384 +
             C152145 * C1985 - C152180 * C1976 - C152145 * C1986 +
             C154271 * C1991 + C152193 * C3445 - C115626 * C3441 -
             C152193 * C3446 + C115620 * C3453) *
                C154164 * C154016 +
            (C116014 + C116015 + C116016) * C154164 * C154024 +
            (C116017 + C116018 + C116019) * C154164 * C82856) *
               C154082 * C340) *
              C341 +
          (((C116013 + C116012 + C116011) * C154164 * C154016 +
            (C116010 + C116009 + C116008) * C154164 * C154024 +
            (C152148 * C357 - C152187 * C344 - C152148 * C358 + C154264 * C380 +
             C152145 * C1141 - C152180 * C1132 - C152145 * C1142 +
             C154271 * C1150 + C152193 * C1548 - C115626 * C1542 -
             C152193 * C1549 + C115620 * C1557) *
                C154164 * C82856) *
               C154082 * C339 -
           (C115717 * C82856 +
            (C115705 + C115704 + C115703) * C154164 * C154024 +
            (C115702 + C115701 + C115700) * C154164 * C154016) *
               C154082 * C338 -
           ((C152193 * C3451 - C115626 * C3444 - C152193 * C3452 +
             C115620 * C3456 + C152145 * C1979 - C152180 * C1973 -
             C152145 * C1980 + C154271 * C1988 + C152148 * C371 -
             C152187 * C351 - C152148 * C372 + C154264 * C387) *
                C154164 * C82856 +
            (C116019 + C116018 + C116017) * C154164 * C154024 +
            (C116016 + C116015 + C116014) * C154164 * C154016) *
               C154082 * C340) *
              C154053)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C152148 * C144 - C152187 * C136 - C152148 * C145 + C154264 * C160 +
            C152145 * C600 - C152180 * C584 - C152145 * C601 + C154271 * C620 +
            C152193 * C602 - C115626 * C585 - C152193 * C603 + C115620 * C621) *
               C154164 * C154016 +
           (C115700 + C115701 + C115702) * C154164 * C154024 +
           C115716 * C82856) *
              C154082 * C154066 * C130 -
          (C115717 * C82856 +
           (C115705 + C115704 + C115703) * C154164 * C154024 +
           (C115702 + C115701 + C115700) * C154164 * C154016) *
              C154082 * C154066 * C131 +
          (C115716 * C154016 +
           (C115708 + C115707 + C115706) * C154164 * C154024 +
           (C115709 + C115710 + C115711) * C154164 * C82856) *
              C154082 * C154066 * C132 -
          ((C152193 * C614 - C115626 * C591 - C152193 * C615 + C115620 * C627 +
            C152145 * C612 - C152180 * C590 - C152145 * C613 + C154271 * C626 +
            C152148 * C154 - C152187 * C141 - C152148 * C155 + C154264 * C165) *
               C154164 * C82856 +
           (C115711 + C115710 + C115709) * C154164 * C154024 +
           C115717 * C154016) *
              C154082 * C154066 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C152148 * C144 - C152187 * C136 - C152148 * C145 + C154264 * C160 +
             C152145 * C600 - C152180 * C584 - C152145 * C601 + C154271 * C620 +
             C152193 * C602 - C115626 * C585 - C152193 * C603 +
             C115620 * C621) *
                C154164 * C154016 +
            (C115700 + C115701 + C115702) * C154164 * C154024 +
            C115716 * C82856) *
               C577 -
           ((C116310 + C116311 + C116312) * C154164 * C82856 +
            (C116313 + C116314 + C116315) * C154164 * C154024 +
            (C152193 * C2337 - C115626 * C2328 - C152193 * C2338 +
             C115620 * C2343 + C152145 * C602 - C152180 * C585 -
             C152145 * C603 + C154271 * C621 + C152148 * C600 - C152187 * C584 -
             C152148 * C601 + C154264 * C620) *
                C154164 * C154016) *
               C578 +
           ((C152148 * C602 - C152187 * C585 - C152148 * C603 + C154264 * C621 +
             C152145 * C2337 - C152180 * C2328 - C152145 * C2338 +
             C154271 * C2343 + C152193 * C7777 - C115626 * C7773 -
             C152193 * C7778 + C115620 * C7785) *
                C154164 * C154016 +
            (C116316 + C116317 + C116318) * C154164 * C154024 +
            (C116319 + C116320 + C116321) * C154164 * C82856) *
               C579) *
              C154066 * C341 +
          (((C116315 + C116314 + C116313) * C154164 * C154016 +
            (C116312 + C116311 + C116310) * C154164 * C154024 +
            (C152148 * C594 - C152187 * C581 - C152148 * C595 + C154264 * C617 +
             C152145 * C608 - C152180 * C588 - C152145 * C609 + C154271 * C624 +
             C152193 * C2331 - C115626 * C2325 - C152193 * C2332 +
             C115620 * C2340) *
                C154164 * C82856) *
               C578 -
           (C115717 * C82856 +
            (C115705 + C115704 + C115703) * C154164 * C154024 +
            (C115702 + C115701 + C115700) * C154164 * C154016) *
               C577 -
           ((C152193 * C7783 - C115626 * C7776 - C152193 * C7784 +
             C115620 * C7788 + C152145 * C2331 - C152180 * C2325 -
             C152145 * C2332 + C154271 * C2340 + C152148 * C608 -
             C152187 * C588 - C152148 * C609 + C154264 * C624) *
                C154164 * C82856 +
            (C116321 + C116320 + C116319) * C154164 * C154024 +
            (C116318 + C116317 + C116316) * C154164 * C154016) *
               C579) *
              C154066 * C154053)) /
            (p * q * std::sqrt(p + q));
    d2ee[273] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                  ((((C152148 * C144 - C152187 * C136 - C152148 * C145 +
                      C154264 * C160 + C152145 * C600 - C152180 * C584 -
                      C152145 * C601 + C154271 * C620 + C152193 * C602 -
                      C115626 * C585 - C152193 * C603 + C115620 * C621) *
                         C154164 * C154016 +
                     (C115700 + C115701 + C115702) * C154164 * C154024 +
                     C115716 * C82856) *
                        C154393 -
                    (C116799 * C82856 +
                     (C116313 + C116314 + C116315) * C154164 * C154024 +
                     (C152193 * C2337 - C115626 * C2328 - C152193 * C2338 +
                      C115620 * C2343 + C152145 * C602 - C152180 * C585 -
                      C152145 * C603 + C154271 * C621 + C152148 * C600 -
                      C152187 * C584 - C152148 * C601 + C154264 * C620) *
                         C154164 * C154016) *
                        C154146) *
                       C154066 * C154461 +
                   (((C116315 + C116314 + C116313) * C154164 * C154016 +
                     (C116312 + C116311 + C116310) * C154164 * C154024 +
                     (C116803 + C116804 + C116805) * C154164 * C82856) *
                        C154146 -
                    (C115717 * C82856 +
                     (C115705 + C115704 + C115703) * C154164 * C154024 +
                     (C115702 + C115701 + C115700) * C154164 * C154016) *
                        C154393) *
                       C154066 * C154462 +
                   ((C115716 * C154016 +
                     (C115708 + C115707 + C115706) * C154164 * C154024 +
                     (C115709 + C115710 + C115711) * C154164 * C82856) *
                        C154393 -
                    ((C152193 * C2329 - C115626 * C2324 - C152193 * C2330 +
                      C115620 * C2339 + C152145 * C610 - C152180 * C589 -
                      C152145 * C611 + C154271 * C625 + C152148 * C592 -
                      C152187 * C580 - C152148 * C593 + C154264 * C616) *
                         C154164 * C82856 +
                     (C116805 + C116804 + C116803) * C154164 * C154024 +
                     C116799 * C154016) *
                        C154146) *
                       C154066 * C818)) /
                 (p * q * std::sqrt(p + q));
    d2ee[274] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((C152148 * C144 - C152187 * C136 - C152148 * C145 + C154264 * C160 +
            C152145 * C600 - C152180 * C584 - C152145 * C601 + C154271 * C620 +
            C152193 * C602 - C115626 * C585 - C152193 * C603 + C115620 * C621) *
               C154164 * C154016 +
           (C115700 + C115701 + C115702) * C154164 * C154024 +
           C115716 * C82856) *
              C154082 * C154066 * C130 -
          (C115717 * C82856 +
           (C115705 + C115704 + C115703) * C154164 * C154024 +
           (C115702 + C115701 + C115700) * C154164 * C154016) *
              C154082 * C154066 * C131 +
          (C115716 * C154016 +
           (C115708 + C115707 + C115706) * C154164 * C154024 +
           (C115709 + C115710 + C115711) * C154164 * C82856) *
              C154082 * C154066 * C132 -
          ((C152193 * C614 - C115626 * C591 - C152193 * C615 + C115620 * C627 +
            C152145 * C612 - C152180 * C590 - C152145 * C613 + C154271 * C626 +
            C152148 * C154 - C152187 * C141 - C152148 * C155 + C154264 * C165) *
               C154164 * C82856 +
           (C115711 + C115710 + C115709) * C154164 * C154024 +
           C115717 * C154016) *
              C154082 * C154066 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C152148 * C144 - C152187 * C136 - C152148 * C145 + C154264 * C160 +
             C152145 * C600 - C152180 * C584 - C152145 * C601 + C154271 * C620 +
             C152193 * C602 - C115626 * C585 - C152193 * C603 +
             C115620 * C621) *
                C154164 * C154016 +
            (C115700 + C115701 + C115702) * C154164 * C154024 +
            C115716 * C82856) *
               C154082 * C338 -
           ((C116008 + C116009 + C116010) * C154164 * C82856 +
            (C116011 + C116012 + C116013) * C154164 * C154024 +
            (C152193 * C1554 - C115626 * C1545 - C152193 * C1555 +
             C115620 * C1560 + C152145 * C1135 - C152180 * C1129 -
             C152145 * C1136 + C154271 * C1147 + C152148 * C363 -
             C152187 * C347 - C152148 * C364 + C154264 * C383) *
                C154164 * C154016) *
               C154082 * C339 +
           ((C152148 * C365 - C152187 * C348 - C152148 * C366 + C154264 * C384 +
             C152145 * C1985 - C152180 * C1976 - C152145 * C1986 +
             C154271 * C1991 + C152193 * C3445 - C115626 * C3441 -
             C152193 * C3446 + C115620 * C3453) *
                C154164 * C154016 +
            (C116014 + C116015 + C116016) * C154164 * C154024 +
            (C116017 + C116018 + C116019) * C154164 * C82856) *
               C154082 * C340) *
              C341 +
          (((C116013 + C116012 + C116011) * C154164 * C154016 +
            (C116010 + C116009 + C116008) * C154164 * C154024 +
            (C152148 * C357 - C152187 * C344 - C152148 * C358 + C154264 * C380 +
             C152145 * C1141 - C152180 * C1132 - C152145 * C1142 +
             C154271 * C1150 + C152193 * C1548 - C115626 * C1542 -
             C152193 * C1549 + C115620 * C1557) *
                C154164 * C82856) *
               C154082 * C339 -
           (C115717 * C82856 +
            (C115705 + C115704 + C115703) * C154164 * C154024 +
            (C115702 + C115701 + C115700) * C154164 * C154016) *
               C154082 * C338 -
           ((C152193 * C3451 - C115626 * C3444 - C152193 * C3452 +
             C115620 * C3456 + C152145 * C1979 - C152180 * C1973 -
             C152145 * C1980 + C154271 * C1988 + C152148 * C371 -
             C152187 * C351 - C152148 * C372 + C154264 * C387) *
                C154164 * C82856 +
            (C116019 + C116018 + C116017) * C154164 * C154024 +
            (C116016 + C116015 + C116014) * C154164 * C154016) *
               C154082 * C340) *
              C154053)) /
            (p * q * std::sqrt(p + q));
    d2ee[275] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                  ((((C152148 * C144 - C152187 * C136 - C152148 * C145 +
                      C154264 * C160 + C152145 * C600 - C152180 * C584 -
                      C152145 * C601 + C154271 * C620 + C152193 * C602 -
                      C115626 * C585 - C152193 * C603 + C115620 * C621) *
                         C154164 * C154016 +
                     (C115700 + C115701 + C115702) * C154164 * C154024 +
                     C115716 * C82856) *
                        C154082 * C154463 -
                    (C116557 * C82856 +
                     (C116011 + C116012 + C116013) * C154164 * C154024 +
                     (C152193 * C1554 - C115626 * C1545 - C152193 * C1555 +
                      C115620 * C1560 + C152145 * C1135 - C152180 * C1129 -
                      C152145 * C1136 + C154271 * C1147 + C152148 * C363 -
                      C152187 * C347 - C152148 * C364 + C154264 * C383) *
                         C154164 * C154016) *
                        C154082 * C154464 +
                    ((C152148 * C365 - C152187 * C348 - C152148 * C366 +
                      C154264 * C384 + C152145 * C1985 - C152180 * C1976 -
                      C152145 * C1986 + C154271 * C1991 + C152193 * C3445 -
                      C115626 * C3441 - C152193 * C3446 + C115620 * C3453) *
                         C154164 * C154016 +
                     (C116014 + C116015 + C116016) * C154164 * C154024 +
                     (C116017 + C116018 + C116019) * C154164 * C82856) *
                        C154082 * C1685) *
                       C154384 +
                   (((C116013 + C116012 + C116011) * C154164 * C154016 +
                     (C116010 + C116009 + C116008) * C154164 * C154024 +
                     (C116561 + C116562 + C116563) * C154164 * C82856) *
                        C154082 * C154464 -
                    (C115717 * C82856 +
                     (C115705 + C115704 + C115703) * C154164 * C154024 +
                     (C115702 + C115701 + C115700) * C154164 * C154016) *
                        C154082 * C154463 -
                    ((C152193 * C3451 - C115626 * C3444 - C152193 * C3452 +
                      C115620 * C3456 + C152145 * C1979 - C152180 * C1973 -
                      C152145 * C1980 + C154271 * C1988 + C152148 * C371 -
                      C152187 * C351 - C152148 * C372 + C154264 * C387) *
                         C154164 * C82856 +
                     (C116019 + C116018 + C116017) * C154164 * C154024 +
                     (C116016 + C116015 + C116014) * C154164 * C154016) *
                        C154082 * C1685) *
                       C154053)) /
                 (p * q * std::sqrt(p + q));
    d2ee[276] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                  ((((C152148 * C144 - C152187 * C136 - C152148 * C145 +
                      C154264 * C160 + C152145 * C600 - C152180 * C584 -
                      C152145 * C601 + C154271 * C620 + C152193 * C602 -
                      C115626 * C585 - C152193 * C603 + C115620 * C621) *
                         C154164 * C154016 +
                     (C115700 + C115701 + C115702) * C154164 * C154024 +
                     C115716 * C82856) *
                        C154393 -
                    (C116799 * C82856 +
                     (C116313 + C116314 + C116315) * C154164 * C154024 +
                     (C152193 * C2337 - C115626 * C2328 - C152193 * C2338 +
                      C115620 * C2343 + C152145 * C602 - C152180 * C585 -
                      C152145 * C603 + C154271 * C621 + C152148 * C600 -
                      C152187 * C584 - C152148 * C601 + C154264 * C620) *
                         C154164 * C154016) *
                        C154146) *
                       C154463 +
                   (((C152148 * C1135 - C152187 * C1129 - C152148 * C1136 +
                      C154264 * C1147 + C152145 * C1554 - C152180 * C1545 -
                      C152145 * C1555 + C154271 * C1560 + C152193 * C6274 -
                      C115626 * C6263 - C152193 * C6275 + C115620 * C6281) *
                         C154164 * C154016 +
                     (C117132 + C117133 + C117134) * C154164 * C154024 +
                     (C117135 + C117136 + C117137) * C154164 * C82856) *
                        C154146 -
                    (C116557 * C82856 +
                     (C116011 + C116012 + C116013) * C154164 * C154024 +
                     (C152193 * C1554 - C115626 * C1545 - C152193 * C1555 +
                      C115620 * C1560 + C152145 * C1135 - C152180 * C1129 -
                      C152145 * C1136 + C154271 * C1147 + C152148 * C363 -
                      C152187 * C347 - C152148 * C364 + C154264 * C383) *
                         C154164 * C154016) *
                        C154393) *
                       C154464 +
                   (((C152148 * C365 - C152187 * C348 - C152148 * C366 +
                      C154264 * C384 + C152145 * C1985 - C152180 * C1976 -
                      C152145 * C1986 + C154271 * C1991 + C152193 * C3445 -
                      C115626 * C3441 - C152193 * C3446 + C115620 * C3453) *
                         C154164 * C154016 +
                     (C116014 + C116015 + C116016) * C154164 * C154024 +
                     (C116017 + C116018 + C116019) * C154164 * C82856) *
                        C154393 -
                    ((C152193 * C6264 - C115626 * C6258 - C152193 * C6265 +
                      C115620 * C6276 + C152145 * C3449 - C152180 * C3443 -
                      C152145 * C3450 + C154271 * C3455 + C152148 * C1981 -
                      C152187 * C1974 - C152148 * C1982 + C154264 * C1989) *
                         C154164 * C82856 +
                     (C152193 * C6268 - C115626 * C6260 - C152193 * C6269 +
                      C115620 * C6278 + C152145 * C3447 - C152180 * C3442 -
                      C152145 * C3448 + C154271 * C3454 + C152148 * C1983 -
                      C152187 * C1975 - C152148 * C1984 + C154264 * C1990) *
                         C154164 * C154024 +
                     (C152193 * C6272 - C115626 * C6262 - C152193 * C6273 +
                      C115620 * C6280 + C152145 * C3445 - C152180 * C3441 -
                      C152145 * C3446 + C154271 * C3453 + C152148 * C1985 -
                      C152187 * C1976 - C152148 * C1986 + C154264 * C1991) *
                         C154164 * C154016) *
                        C154146) *
                       C1685) *
                  C154047) /
                 (p * q * std::sqrt(p + q));
    d2ee[277] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C152148 * C144 - C152187 * C136 - C152148 * C145 + C154264 * C160 +
            C152145 * C600 - C152180 * C584 - C152145 * C601 + C154271 * C620 +
            C152193 * C602 - C115626 * C585 - C152193 * C603 + C115620 * C621) *
               C154164 * C154016 +
           (C115700 + C115701 + C115702) * C154164 * C154024 +
           C115716 * C82856) *
              C154082 * C1394 -
          (C116557 * C82856 +
           (C116011 + C116012 + C116013) * C154164 * C154024 +
           (C152193 * C1554 - C115626 * C1545 - C152193 * C1555 +
            C115620 * C1560 + C152145 * C1135 - C152180 * C1129 -
            C152145 * C1136 + C154271 * C1147 + C152148 * C363 -
            C152187 * C347 - C152148 * C364 + C154264 * C383) *
               C154164 * C154016) *
              C154082 * C1395 +
          ((C152148 * C365 - C152187 * C348 - C152148 * C366 + C154264 * C384 +
            C152145 * C1985 - C152180 * C1976 - C152145 * C1986 +
            C154271 * C1991 + C152193 * C3445 - C115626 * C3441 -
            C152193 * C3446 + C115620 * C3453) *
               C154164 * C154016 +
           (C116014 + C116015 + C116016) * C154164 * C154024 +
           (C116017 + C116018 + C116019) * C154164 * C82856) *
              C154082 * C1396 -
          ((C152193 * C4908 - C115626 * C4905 - C152193 * C4909 +
            C115620 * C4914 + C152145 * C4262 - C152180 * C4256 -
            C152145 * C4263 + C154271 * C4268 + C152148 * C1408 -
            C152187 * C1401 - C152148 * C1409 + C154264 * C1416) *
               C154164 * C82856 +
           (C152193 * C4910 - C115626 * C4906 - C152193 * C4911 +
            C115620 * C4915 + C152145 * C4260 - C152180 * C4255 -
            C152145 * C4261 + C154271 * C4267 + C152148 * C1410 -
            C152187 * C1402 - C152148 * C1411 + C154264 * C1417) *
               C154164 * C154024 +
           (C152193 * C4912 - C115626 * C4907 - C152193 * C4913 +
            C115620 * C4916 + C152145 * C4258 - C152180 * C4254 -
            C152145 * C4259 + C154271 * C4266 + C152148 * C1412 -
            C152187 * C1403 - C152148 * C1413 + C154264 * C1418) *
               C154164 * C154016) *
              C154082 * C1397) *
         C154047) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C152148 * C144 - C152187 * C136 - C152148 * C145 + C154264 * C160 +
             C152145 * C600 - C152180 * C584 - C152145 * C601 + C154271 * C620 +
             C152193 * C602 - C115626 * C585 - C152193 * C603 +
             C115620 * C621) *
                C154164 * C154016 +
            (C115700 + C115701 + C115702) * C154164 * C154024 +
            C115716 * C82856) *
               C154082 * C1307 -
           (C116557 * C82856 +
            (C116011 + C116012 + C116013) * C154164 * C154024 +
            (C152193 * C1554 - C115626 * C1545 - C152193 * C1555 +
             C115620 * C1560 + C152145 * C1135 - C152180 * C1129 -
             C152145 * C1136 + C154271 * C1147 + C152148 * C363 -
             C152187 * C347 - C152148 * C364 + C154264 * C383) *
                C154164 * C154016) *
               C154082 * C154118) *
              C1309 +
          (((C116013 + C116012 + C116011) * C154164 * C154016 +
            (C116010 + C116009 + C116008) * C154164 * C154024 +
            (C116561 + C116562 + C116563) * C154164 * C82856) *
               C154082 * C154118 -
           (C115717 * C82856 +
            (C115705 + C115704 + C115703) * C154164 * C154024 +
            (C115702 + C115701 + C115700) * C154164 * C154016) *
               C154082 * C1307) *
              C1310 +
          ((C115716 * C154016 +
            (C115708 + C115707 + C115706) * C154164 * C154024 +
            (C115709 + C115710 + C115711) * C154164 * C82856) *
               C154082 * C1307 -
           ((C152193 * C1546 - C115626 * C1541 - C152193 * C1547 +
             C115620 * C1556 + C152145 * C1143 - C152180 * C1133 -
             C152145 * C1144 + C154271 * C1151 + C152148 * C355 -
             C152187 * C343 - C152148 * C356 + C154264 * C379) *
                C154164 * C82856 +
            (C116563 + C116562 + C116561) * C154164 * C154024 +
            C116557 * C154016) *
               C154082 * C154118) *
              C1311)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C152148 * C144 - C152187 * C136 - C152148 * C145 + C154264 * C160 +
             C152145 * C600 - C152180 * C584 - C152145 * C601 + C154271 * C620 +
             C152193 * C602 - C115626 * C585 - C152193 * C603 +
             C115620 * C621) *
                C154164 * C154016 +
            (C115700 + C115701 + C115702) * C154164 * C154024 +
            C115716 * C82856) *
               C577 -
           (C116799 * C82856 +
            (C116313 + C116314 + C116315) * C154164 * C154024 +
            (C152193 * C2337 - C115626 * C2328 - C152193 * C2338 +
             C115620 * C2343 + C152145 * C602 - C152180 * C585 -
             C152145 * C603 + C154271 * C621 + C152148 * C600 - C152187 * C584 -
             C152148 * C601 + C154264 * C620) *
                C154164 * C154016) *
               C578 +
           ((C152148 * C602 - C152187 * C585 - C152148 * C603 + C154264 * C621 +
             C152145 * C2337 - C152180 * C2328 - C152145 * C2338 +
             C154271 * C2343 + C152193 * C7777 - C115626 * C7773 -
             C152193 * C7778 + C115620 * C7785) *
                C154164 * C154016 +
            (C116316 + C116317 + C116318) * C154164 * C154024 +
            (C116319 + C116320 + C116321) * C154164 * C82856) *
               C579) *
              C1307 +
          (((C152148 * C1135 - C152187 * C1129 - C152148 * C1136 +
             C154264 * C1147 + C152145 * C1554 - C152180 * C1545 -
             C152145 * C1555 + C154271 * C1560 + C152193 * C6274 -
             C115626 * C6263 - C152193 * C6275 + C115620 * C6281) *
                C154164 * C154016 +
            (C117132 + C117133 + C117134) * C154164 * C154024 +
            (C117135 + C117136 + C117137) * C154164 * C82856) *
               C578 -
           (C116557 * C82856 +
            (C116011 + C116012 + C116013) * C154164 * C154024 +
            (C152193 * C1554 - C115626 * C1545 - C152193 * C1555 +
             C115620 * C1560 + C152145 * C1135 - C152180 * C1129 -
             C152145 * C1136 + C154271 * C1147 + C152148 * C363 -
             C152187 * C347 - C152148 * C364 + C154264 * C383) *
                C154164 * C154016) *
               C577 -
           ((C152193 * C9278 - C115626 * C9275 - C152193 * C9279 +
             C115620 * C9284 + C152145 * C6266 - C152180 * C6259 -
             C152145 * C6267 + C154271 * C6277 + C152148 * C1550 -
             C152187 * C1543 - C152148 * C1551 + C154264 * C1558) *
                C154164 * C82856 +
            (C152193 * C9280 - C115626 * C9276 - C152193 * C9281 +
             C115620 * C9285 + C152145 * C6270 - C152180 * C6261 -
             C152145 * C6271 + C154271 * C6279 + C152148 * C1552 -
             C152187 * C1544 - C152148 * C1553 + C154264 * C1559) *
                C154164 * C154024 +
            (C152193 * C9282 - C115626 * C9277 - C152193 * C9283 +
             C115620 * C9286 + C152145 * C6274 - C152180 * C6263 -
             C152145 * C6275 + C154271 * C6281 + C152148 * C1554 -
             C152187 * C1545 - C152148 * C1555 + C154264 * C1560) *
                C154164 * C154016) *
               C579) *
              C154118) *
         C154047) /
            (p * q * std::sqrt(p + q));
    d2ee[278] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                  (((((C152148 * C144 - C152187 * C136 - C152148 * C145 +
                       C154264 * C160 + C152145 * C600 - C152180 * C584 -
                       C152145 * C601 + C154271 * C620 + C152193 * C602 -
                       C115626 * C585 - C152193 * C603 + C115620 * C621) *
                          C154164 * C154016 +
                      (C115700 + C115701 + C115702) * C154164 * C154024 +
                      C115716 * C82856) *
                         C154393 -
                     (C116799 * C82856 +
                      (C116313 + C116314 + C116315) * C154164 * C154024 +
                      (C152193 * C2337 - C115626 * C2328 - C152193 * C2338 +
                       C115620 * C2343 + C152145 * C602 - C152180 * C585 -
                       C152145 * C603 + C154271 * C621 + C152148 * C600 -
                       C152187 * C584 - C152148 * C601 + C154264 * C620) *
                          C154164 * C154016) *
                         C154146) *
                        C1307 +
                    (((C152148 * C1135 - C152187 * C1129 - C152148 * C1136 +
                       C154264 * C1147 + C152145 * C1554 - C152180 * C1545 -
                       C152145 * C1555 + C154271 * C1560 + C152193 * C6274 -
                       C115626 * C6263 - C152193 * C6275 + C115620 * C6281) *
                          C154164 * C154016 +
                      (C117132 + C117133 + C117134) * C154164 * C154024 +
                      (C117135 + C117136 + C117137) * C154164 * C82856) *
                         C154146 -
                     (C116557 * C82856 +
                      (C116011 + C116012 + C116013) * C154164 * C154024 +
                      (C152193 * C1554 - C115626 * C1545 - C152193 * C1555 +
                       C115620 * C1560 + C152145 * C1135 - C152180 * C1129 -
                       C152145 * C1136 + C154271 * C1147 + C152148 * C363 -
                       C152187 * C347 - C152148 * C364 + C154264 * C383) *
                          C154164 * C154016) *
                         C154393) *
                        C154118) *
                       C154384 +
                   ((((C116315 + C116314 + C116313) * C154164 * C154016 +
                      (C116312 + C116311 + C116310) * C154164 * C154024 +
                      (C116803 + C116804 + C116805) * C154164 * C82856) *
                         C154146 -
                     (C115717 * C82856 +
                      (C115705 + C115704 + C115703) * C154164 * C154024 +
                      (C115702 + C115701 + C115700) * C154164 * C154016) *
                         C154393) *
                        C1307 +
                    (((C116013 + C116012 + C116011) * C154164 * C154016 +
                      (C116010 + C116009 + C116008) * C154164 * C154024 +
                      (C116561 + C116562 + C116563) * C154164 * C82856) *
                         C154393 -
                     ((C152193 * C8648 - C115626 * C8647 - C152193 * C8649 +
                       C115620 * C8650 + C152145 * C1548 - C152180 * C1542 -
                       C152145 * C1549 + C154271 * C1557 + C152148 * C1141 -
                       C152187 * C1132 - C152148 * C1142 + C154264 * C1150) *
                          C154164 * C82856 +
                      (C117137 + C117136 + C117135) * C154164 * C154024 +
                      (C117134 + C117133 + C117132) * C154164 * C154016) *
                         C154146) *
                        C154118) *
                       C154053)) /
                 (p * q * std::sqrt(p + q));
    d2ee[279] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C152148 * C144 - C152187 * C136 - C152148 * C145 + C154264 * C160 +
             C152145 * C600 - C152180 * C584 - C152145 * C601 + C154271 * C620 +
             C152193 * C602 - C115626 * C585 - C152193 * C603 +
             C115620 * C621) *
                C154164 * C154016 +
            (C115700 + C115701 + C115702) * C154164 * C154024 +
            C115716 * C82856) *
               C154082 * C1307 -
           (C116557 * C82856 +
            (C116011 + C116012 + C116013) * C154164 * C154024 +
            (C152193 * C1554 - C115626 * C1545 - C152193 * C1555 +
             C115620 * C1560 + C152145 * C1135 - C152180 * C1129 -
             C152145 * C1136 + C154271 * C1147 + C152148 * C363 -
             C152187 * C347 - C152148 * C364 + C154264 * C383) *
                C154164 * C154016) *
               C154082 * C154118) *
              C1309 +
          (((C116013 + C116012 + C116011) * C154164 * C154016 +
            (C116010 + C116009 + C116008) * C154164 * C154024 +
            (C116561 + C116562 + C116563) * C154164 * C82856) *
               C154082 * C154118 -
           (C115717 * C82856 +
            (C115705 + C115704 + C115703) * C154164 * C154024 +
            (C115702 + C115701 + C115700) * C154164 * C154016) *
               C154082 * C1307) *
              C1310 +
          ((C115716 * C154016 +
            (C115708 + C115707 + C115706) * C154164 * C154024 +
            (C115709 + C115710 + C115711) * C154164 * C82856) *
               C154082 * C1307 -
           ((C152193 * C1546 - C115626 * C1541 - C152193 * C1547 +
             C115620 * C1556 + C152145 * C1143 - C152180 * C1133 -
             C152145 * C1144 + C154271 * C1151 + C152148 * C355 -
             C152187 * C343 - C152148 * C356 + C154264 * C379) *
                C154164 * C82856 +
            (C116563 + C116562 + C116561) * C154164 * C154024 +
            C116557 * C154016) *
               C154082 * C154118) *
              C1311)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((C152148 * C144 - C152187 * C136 - C152148 * C145 + C154264 * C160 +
            C152145 * C600 - C152180 * C584 - C152145 * C601 + C154271 * C620 +
            C152193 * C602 - C115626 * C585 - C152193 * C603 + C115620 * C621) *
               C154164 * C154016 +
           (C115700 + C115701 + C115702) * C154164 * C154024 +
           C115716 * C82856) *
              C154082 * C1394 -
          (C116557 * C82856 +
           (C116011 + C116012 + C116013) * C154164 * C154024 +
           (C152193 * C1554 - C115626 * C1545 - C152193 * C1555 +
            C115620 * C1560 + C152145 * C1135 - C152180 * C1129 -
            C152145 * C1136 + C154271 * C1147 + C152148 * C363 -
            C152187 * C347 - C152148 * C364 + C154264 * C383) *
               C154164 * C154016) *
              C154082 * C1395 +
          ((C152148 * C365 - C152187 * C348 - C152148 * C366 + C154264 * C384 +
            C152145 * C1985 - C152180 * C1976 - C152145 * C1986 +
            C154271 * C1991 + C152193 * C3445 - C115626 * C3441 -
            C152193 * C3446 + C115620 * C3453) *
               C154164 * C154016 +
           (C116014 + C116015 + C116016) * C154164 * C154024 +
           (C116017 + C116018 + C116019) * C154164 * C82856) *
              C154082 * C1396 -
          ((C152193 * C4908 - C115626 * C4905 - C152193 * C4909 +
            C115620 * C4914 + C152145 * C4262 - C152180 * C4256 -
            C152145 * C4263 + C154271 * C4268 + C152148 * C1408 -
            C152187 * C1401 - C152148 * C1409 + C154264 * C1416) *
               C154164 * C82856 +
           (C152193 * C4910 - C115626 * C4906 - C152193 * C4911 +
            C115620 * C4915 + C152145 * C4260 - C152180 * C4255 -
            C152145 * C4261 + C154271 * C4267 + C152148 * C1410 -
            C152187 * C1402 - C152148 * C1411 + C154264 * C1417) *
               C154164 * C154024 +
           (C152193 * C4912 - C115626 * C4907 - C152193 * C4913 +
            C115620 * C4916 + C152145 * C4258 - C152180 * C4254 -
            C152145 * C4259 + C154271 * C4266 + C152148 * C1412 -
            C152187 * C1403 - C152148 * C1413 + C154264 * C1418) *
               C154164 * C154016) *
              C154082 * C1397) *
         C154047) /
            (p * q * std::sqrt(p + q));
    d2ee[280] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                  (((((C152148 * C144 - C152187 * C136 - C152148 * C145 +
                       C154264 * C160 + C152145 * C600 - C152180 * C584 -
                       C152145 * C601 + C154271 * C620 + C152193 * C602 -
                       C115626 * C585 - C152193 * C603 + C115620 * C621) *
                          C154164 * C154016 +
                      (C115700 + C115701 + C115702) * C154164 * C154024 +
                      C115716 * C82856) *
                         C2114 -
                     (C116799 * C82856 +
                      (C116313 + C116314 + C116315) * C154164 * C154024 +
                      (C152193 * C2337 - C115626 * C2328 - C152193 * C2338 +
                       C115620 * C2343 + C152145 * C602 - C152180 * C585 -
                       C152145 * C603 + C154271 * C621 + C152148 * C600 -
                       C152187 * C584 - C152148 * C601 + C154264 * C620) *
                          C154164 * C154016) *
                         C154146) *
                        C154392 +
                    (((C152148 * C1135 - C152187 * C1129 - C152148 * C1136 +
                       C154264 * C1147 + C152145 * C1554 - C152180 * C1545 -
                       C152145 * C1555 + C154271 * C1560 + C152193 * C6274 -
                       C115626 * C6263 - C152193 * C6275 + C115620 * C6281) *
                          C154164 * C154016 +
                      (C117132 + C117133 + C117134) * C154164 * C154024 +
                      (C117135 + C117136 + C117137) * C154164 * C82856) *
                         C154146 -
                     (C116557 * C82856 +
                      (C116011 + C116012 + C116013) * C154164 * C154024 +
                      (C152193 * C1554 - C115626 * C1545 - C152193 * C1555 +
                       C115620 * C1560 + C152145 * C1135 - C152180 * C1129 -
                       C152145 * C1136 + C154271 * C1147 + C152148 * C363 -
                       C152187 * C347 - C152148 * C364 + C154264 * C383) *
                          C154164 * C154016) *
                         C2114) *
                        C154118) *
                       C154384 +
                   ((((C116315 + C116314 + C116313) * C154164 * C154016 +
                      (C116312 + C116311 + C116310) * C154164 * C154024 +
                      (C116803 + C116804 + C116805) * C154164 * C82856) *
                         C154146 -
                     (C115717 * C82856 +
                      (C115705 + C115704 + C115703) * C154164 * C154024 +
                      (C115702 + C115701 + C115700) * C154164 * C154016) *
                         C2114) *
                        C154392 +
                    (((C116013 + C116012 + C116011) * C154164 * C154016 +
                      (C116010 + C116009 + C116008) * C154164 * C154024 +
                      (C116561 + C116562 + C116563) * C154164 * C82856) *
                         C2114 -
                     ((C152193 * C8648 - C115626 * C8647 - C152193 * C8649 +
                       C115620 * C8650 + C152145 * C1548 - C152180 * C1542 -
                       C152145 * C1549 + C154271 * C1557 + C152148 * C1141 -
                       C152187 * C1132 - C152148 * C1142 + C154264 * C1150) *
                          C154164 * C82856 +
                      (C117137 + C117136 + C117135) * C154164 * C154024 +
                      (C117134 + C117133 + C117132) * C154164 * C154016) *
                         C154146) *
                        C154118) *
                       C154053)) /
                 (p * q * std::sqrt(p + q));
    d2ee[281] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                  ((((C152148 * C144 - C152187 * C136 - C152148 * C145 +
                      C154264 * C160 + C152145 * C600 - C152180 * C584 -
                      C152145 * C601 + C154271 * C620 + C152193 * C602 -
                      C115626 * C585 - C152193 * C603 + C115620 * C621) *
                         C154164 * C154016 +
                     (C115700 + C115701 + C115702) * C154164 * C154024 +
                     C115716 * C82856) *
                        C154465 -
                    (C116799 * C82856 +
                     (C116313 + C116314 + C116315) * C154164 * C154024 +
                     (C152193 * C2337 - C115626 * C2328 - C152193 * C2338 +
                      C115620 * C2343 + C152145 * C602 - C152180 * C585 -
                      C152145 * C603 + C154271 * C621 + C152148 * C600 -
                      C152187 * C584 - C152148 * C601 + C154264 * C620) *
                         C154164 * C154016) *
                        C154466 +
                    ((C152148 * C602 - C152187 * C585 - C152148 * C603 +
                      C154264 * C621 + C152145 * C2337 - C152180 * C2328 -
                      C152145 * C2338 + C154271 * C2343 + C152193 * C7777 -
                      C115626 * C7773 - C152193 * C7778 + C115620 * C7785) *
                         C154164 * C154016 +
                     (C116316 + C116317 + C116318) * C154164 * C154024 +
                     (C116319 + C116320 + C116321) * C154164 * C82856) *
                        C2630) *
                       C154392 +
                   (((C152148 * C1135 - C152187 * C1129 - C152148 * C1136 +
                      C154264 * C1147 + C152145 * C1554 - C152180 * C1545 -
                      C152145 * C1555 + C154271 * C1560 + C152193 * C6274 -
                      C115626 * C6263 - C152193 * C6275 + C115620 * C6281) *
                         C154164 * C154016 +
                     (C117132 + C117133 + C117134) * C154164 * C154024 +
                     (C117135 + C117136 + C117137) * C154164 * C82856) *
                        C154466 -
                    (C116557 * C82856 +
                     (C116011 + C116012 + C116013) * C154164 * C154024 +
                     (C152193 * C1554 - C115626 * C1545 - C152193 * C1555 +
                      C115620 * C1560 + C152145 * C1135 - C152180 * C1129 -
                      C152145 * C1136 + C154271 * C1147 + C152148 * C363 -
                      C152187 * C347 - C152148 * C364 + C154264 * C383) *
                         C154164 * C154016) *
                        C154465 -
                    ((C152193 * C9278 - C115626 * C9275 - C152193 * C9279 +
                      C115620 * C9284 + C152145 * C6266 - C152180 * C6259 -
                      C152145 * C6267 + C154271 * C6277 + C152148 * C1550 -
                      C152187 * C1543 - C152148 * C1551 + C154264 * C1558) *
                         C154164 * C82856 +
                     (C152193 * C9280 - C115626 * C9276 - C152193 * C9281 +
                      C115620 * C9285 + C152145 * C6270 - C152180 * C6261 -
                      C152145 * C6271 + C154271 * C6279 + C152148 * C1552 -
                      C152187 * C1544 - C152148 * C1553 + C154264 * C1559) *
                         C154164 * C154024 +
                     (C152193 * C9282 - C115626 * C9277 - C152193 * C9283 +
                      C115620 * C9286 + C152145 * C6274 - C152180 * C6263 -
                      C152145 * C6275 + C154271 * C6281 + C152148 * C1554 -
                      C152187 * C1545 - C152148 * C1555 + C154264 * C1560) *
                         C154164 * C154016) *
                        C2630) *
                       C154118) *
                  C154047) /
                 (p * q * std::sqrt(p + q));
    d2ee[282] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C152148 * C144 - C152187 * C136 - C152148 * C145 + C154264 * C160 +
             C152145 * C600 - C152180 * C584 - C152145 * C601 + C154271 * C620 +
             C152193 * C602 - C115626 * C585 - C152193 * C603 +
             C115620 * C621) *
                C154164 * C154016 +
            (C115700 + C115701 + C115702) * C154164 * C154024 +
            C115716 * C82856) *
               C2114 -
           (C116799 * C82856 +
            (C116313 + C116314 + C116315) * C154164 * C154024 +
            (C152193 * C2337 - C115626 * C2328 - C152193 * C2338 +
             C115620 * C2343 + C152145 * C602 - C152180 * C585 -
             C152145 * C603 + C154271 * C621 + C152148 * C600 - C152187 * C584 -
             C152148 * C601 + C154264 * C620) *
                C154164 * C154016) *
               C154146) *
              C338 +
          (((C152148 * C1135 - C152187 * C1129 - C152148 * C1136 +
             C154264 * C1147 + C152145 * C1554 - C152180 * C1545 -
             C152145 * C1555 + C154271 * C1560 + C152193 * C6274 -
             C115626 * C6263 - C152193 * C6275 + C115620 * C6281) *
                C154164 * C154016 +
            (C117132 + C117133 + C117134) * C154164 * C154024 +
            (C117135 + C117136 + C117137) * C154164 * C82856) *
               C154146 -
           (C116557 * C82856 +
            (C116011 + C116012 + C116013) * C154164 * C154024 +
            (C152193 * C1554 - C115626 * C1545 - C152193 * C1555 +
             C115620 * C1560 + C152145 * C1135 - C152180 * C1129 -
             C152145 * C1136 + C154271 * C1147 + C152148 * C363 -
             C152187 * C347 - C152148 * C364 + C154264 * C383) *
                C154164 * C154016) *
               C2114) *
              C339 +
          (((C152148 * C365 - C152187 * C348 - C152148 * C366 + C154264 * C384 +
             C152145 * C1985 - C152180 * C1976 - C152145 * C1986 +
             C154271 * C1991 + C152193 * C3445 - C115626 * C3441 -
             C152193 * C3446 + C115620 * C3453) *
                C154164 * C154016 +
            (C116014 + C116015 + C116016) * C154164 * C154024 +
            (C116017 + C116018 + C116019) * C154164 * C82856) *
               C2114 -
           ((C152193 * C6264 - C115626 * C6258 - C152193 * C6265 +
             C115620 * C6276 + C152145 * C3449 - C152180 * C3443 -
             C152145 * C3450 + C154271 * C3455 + C152148 * C1981 -
             C152187 * C1974 - C152148 * C1982 + C154264 * C1989) *
                C154164 * C82856 +
            (C152193 * C6268 - C115626 * C6260 - C152193 * C6269 +
             C115620 * C6278 + C152145 * C3447 - C152180 * C3442 -
             C152145 * C3448 + C154271 * C3454 + C152148 * C1983 -
             C152187 * C1975 - C152148 * C1984 + C154264 * C1990) *
                C154164 * C154024 +
            (C152193 * C6272 - C115626 * C6262 - C152193 * C6273 +
             C115620 * C6280 + C152145 * C3445 - C152180 * C3441 -
             C152145 * C3446 + C154271 * C3453 + C152148 * C1985 -
             C152187 * C1976 - C152148 * C1986 + C154264 * C1991) *
                C154164 * C154016) *
               C154146) *
              C340) *
         C154047) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C152148 * C144 - C152187 * C136 - C152148 * C145 + C154264 * C160 +
             C152145 * C600 - C152180 * C584 - C152145 * C601 + C154271 * C620 +
             C152193 * C602 - C115626 * C585 - C152193 * C603 +
             C115620 * C621) *
                C154164 * C154016 +
            (C115700 + C115701 + C115702) * C154164 * C154024 +
            C115716 * C82856) *
               C2114 -
           (C116799 * C82856 +
            (C116313 + C116314 + C116315) * C154164 * C154024 +
            (C152193 * C2337 - C115626 * C2328 - C152193 * C2338 +
             C115620 * C2343 + C152145 * C602 - C152180 * C585 -
             C152145 * C603 + C154271 * C621 + C152148 * C600 - C152187 * C584 -
             C152148 * C601 + C154264 * C620) *
                C154164 * C154016) *
               C154146) *
              C154066 * C1309 +
          (((C116315 + C116314 + C116313) * C154164 * C154016 +
            (C116312 + C116311 + C116310) * C154164 * C154024 +
            (C116803 + C116804 + C116805) * C154164 * C82856) *
               C154146 -
           (C115717 * C82856 +
            (C115705 + C115704 + C115703) * C154164 * C154024 +
            (C115702 + C115701 + C115700) * C154164 * C154016) *
               C2114) *
              C154066 * C1310 +
          ((C115716 * C154016 +
            (C115708 + C115707 + C115706) * C154164 * C154024 +
            (C115709 + C115710 + C115711) * C154164 * C82856) *
               C2114 -
           ((C152193 * C2329 - C115626 * C2324 - C152193 * C2330 +
             C115620 * C2339 + C152145 * C610 - C152180 * C589 -
             C152145 * C611 + C154271 * C625 + C152148 * C592 - C152187 * C580 -
             C152148 * C593 + C154264 * C616) *
                C154164 * C82856 +
            (C116805 + C116804 + C116803) * C154164 * C154024 +
            C116799 * C154016) *
               C154146) *
              C154066 * C1311)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((C152148 * C144 - C152187 * C136 - C152148 * C145 + C154264 * C160 +
            C152145 * C600 - C152180 * C584 - C152145 * C601 + C154271 * C620 +
            C152193 * C602 - C115626 * C585 - C152193 * C603 + C115620 * C621) *
               C154164 * C154016 +
           (C115700 + C115701 + C115702) * C154164 * C154024 +
           C115716 * C82856) *
              C2320 -
          (C116799 * C82856 +
           (C116313 + C116314 + C116315) * C154164 * C154024 +
           (C152193 * C2337 - C115626 * C2328 - C152193 * C2338 +
            C115620 * C2343 + C152145 * C602 - C152180 * C585 - C152145 * C603 +
            C154271 * C621 + C152148 * C600 - C152187 * C584 - C152148 * C601 +
            C154264 * C620) *
               C154164 * C154016) *
              C2321 +
          ((C152148 * C602 - C152187 * C585 - C152148 * C603 + C154264 * C621 +
            C152145 * C2337 - C152180 * C2328 - C152145 * C2338 +
            C154271 * C2343 + C152193 * C7777 - C115626 * C7773 -
            C152193 * C7778 + C115620 * C7785) *
               C154164 * C154016 +
           (C116316 + C116317 + C116318) * C154164 * C154024 +
           (C116319 + C116320 + C116321) * C154164 * C82856) *
              C2322 -
          ((C152193 * C10598 - C115626 * C10595 - C152193 * C10599 +
            C115620 * C10604 + C152145 * C7781 - C152180 * C7775 -
            C152145 * C7782 + C154271 * C7787 + C152148 * C2333 -
            C152187 * C2326 - C152148 * C2334 + C154264 * C2341) *
               C154164 * C82856 +
           (C152193 * C10600 - C115626 * C10596 - C152193 * C10601 +
            C115620 * C10605 + C152145 * C7779 - C152180 * C7774 -
            C152145 * C7780 + C154271 * C7786 + C152148 * C2335 -
            C152187 * C2327 - C152148 * C2336 + C154264 * C2342) *
               C154164 * C154024 +
           (C152193 * C10602 - C115626 * C10597 - C152193 * C10603 +
            C115620 * C10606 + C152145 * C7777 - C152180 * C7773 -
            C152145 * C7778 + C154271 * C7785 + C152148 * C2337 -
            C152187 * C2328 - C152148 * C2338 + C154264 * C2343) *
               C154164 * C154016) *
              C2323) *
         C154066 * C154047) /
            (p * q * std::sqrt(p + q));
    d2ee[283] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                  ((((C152148 * C144 - C152187 * C136 - C152148 * C145 +
                      C154264 * C160 + C152145 * C600 - C152180 * C584 -
                      C152145 * C601 + C154271 * C620 + C152193 * C602 -
                      C115626 * C585 - C152193 * C603 + C115620 * C621) *
                         C154164 * C154016 +
                     (C115700 + C115701 + C115702) * C154164 * C154024 +
                     C115716 * C82856) *
                        C154465 -
                    (C116799 * C82856 +
                     (C116313 + C116314 + C116315) * C154164 * C154024 +
                     (C152193 * C2337 - C115626 * C2328 - C152193 * C2338 +
                      C115620 * C2343 + C152145 * C602 - C152180 * C585 -
                      C152145 * C603 + C154271 * C621 + C152148 * C600 -
                      C152187 * C584 - C152148 * C601 + C154264 * C620) *
                         C154164 * C154016) *
                        C154466 +
                    ((C152148 * C602 - C152187 * C585 - C152148 * C603 +
                      C154264 * C621 + C152145 * C2337 - C152180 * C2328 -
                      C152145 * C2338 + C154271 * C2343 + C152193 * C7777 -
                      C115626 * C7773 - C152193 * C7778 + C115620 * C7785) *
                         C154164 * C154016 +
                     (C116316 + C116317 + C116318) * C154164 * C154024 +
                     (C116319 + C116320 + C116321) * C154164 * C82856) *
                        C2630) *
                       C154066 * C154384 +
                   (((C116315 + C116314 + C116313) * C154164 * C154016 +
                     (C116312 + C116311 + C116310) * C154164 * C154024 +
                     (C116803 + C116804 + C116805) * C154164 * C82856) *
                        C154466 -
                    (C115717 * C82856 +
                     (C115705 + C115704 + C115703) * C154164 * C154024 +
                     (C115702 + C115701 + C115700) * C154164 * C154016) *
                        C154465 -
                    ((C152193 * C7783 - C115626 * C7776 - C152193 * C7784 +
                      C115620 * C7788 + C152145 * C2331 - C152180 * C2325 -
                      C152145 * C2332 + C154271 * C2340 + C152148 * C608 -
                      C152187 * C588 - C152148 * C609 + C154264 * C624) *
                         C154164 * C82856 +
                     (C116321 + C116320 + C116319) * C154164 * C154024 +
                     (C116318 + C116317 + C116316) * C154164 * C154016) *
                        C2630) *
                       C154066 * C154053)) /
                 (p * q * std::sqrt(p + q));
    d2ee[284] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C152148 * C144 - C152187 * C136 - C152148 * C145 +
                      C154264 * C160 + C152145 * C600 - C152180 * C584 -
                      C152145 * C601 + C154271 * C620 + C152193 * C602 -
                      C115626 * C585 - C152193 * C603 + C115620 * C621) *
                         C154164 * C154016 +
                     (C115700 + C115701 + C115702) * C154164 * C154024 +
                     C115716 * C82856) *
                        C2114 -
                    (C116799 * C82856 +
                     (C116313 + C116314 + C116315) * C154164 * C154024 +
                     (C152193 * C2337 - C115626 * C2328 - C152193 * C2338 +
                      C115620 * C2343 + C152145 * C602 - C152180 * C585 -
                      C152145 * C603 + C154271 * C621 + C152148 * C600 -
                      C152187 * C584 - C152148 * C601 + C154264 * C620) *
                         C154164 * C154016) *
                        C154146) *
                       C154066 * C1309 +
                   (((C116315 + C116314 + C116313) * C154164 * C154016 +
                     (C116312 + C116311 + C116310) * C154164 * C154024 +
                     (C116803 + C116804 + C116805) * C154164 * C82856) *
                        C154146 -
                    (C115717 * C82856 +
                     (C115705 + C115704 + C115703) * C154164 * C154024 +
                     (C115702 + C115701 + C115700) * C154164 * C154016) *
                        C2114) *
                       C154066 * C1310 +
                   ((C115716 * C154016 +
                     (C115708 + C115707 + C115706) * C154164 * C154024 +
                     (C115709 + C115710 + C115711) * C154164 * C82856) *
                        C2114 -
                    ((C152193 * C2329 - C115626 * C2324 - C152193 * C2330 +
                      C115620 * C2339 + C152145 * C610 - C152180 * C589 -
                      C152145 * C611 + C154271 * C625 + C152148 * C592 -
                      C152187 * C580 - C152148 * C593 + C154264 * C616) *
                         C154164 * C82856 +
                     (C116805 + C116804 + C116803) * C154164 * C154024 +
                     C116799 * C154016) *
                        C154146) *
                       C154066 * C1311)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C152148 * C144 - C152187 * C136 - C152148 * C145 +
                      C154264 * C160 + C152145 * C600 - C152180 * C584 -
                      C152145 * C601 + C154271 * C620 + C152193 * C602 -
                      C115626 * C585 - C152193 * C603 + C115620 * C621) *
                         C154164 * C154016 +
                     (C115700 + C115701 + C115702) * C154164 * C154024 +
                     C115716 * C82856) *
                        C2114 -
                    (C116799 * C82856 +
                     (C116313 + C116314 + C116315) * C154164 * C154024 +
                     (C152193 * C2337 - C115626 * C2328 - C152193 * C2338 +
                      C115620 * C2343 + C152145 * C602 - C152180 * C585 -
                      C152145 * C603 + C154271 * C621 + C152148 * C600 -
                      C152187 * C584 - C152148 * C601 + C154264 * C620) *
                         C154164 * C154016) *
                        C154146) *
                       C338 +
                   (((C152148 * C1135 - C152187 * C1129 - C152148 * C1136 +
                      C154264 * C1147 + C152145 * C1554 - C152180 * C1545 -
                      C152145 * C1555 + C154271 * C1560 + C152193 * C6274 -
                      C115626 * C6263 - C152193 * C6275 + C115620 * C6281) *
                         C154164 * C154016 +
                     (C117132 + C117133 + C117134) * C154164 * C154024 +
                     (C117135 + C117136 + C117137) * C154164 * C82856) *
                        C154146 -
                    (C116557 * C82856 +
                     (C116011 + C116012 + C116013) * C154164 * C154024 +
                     (C152193 * C1554 - C115626 * C1545 - C152193 * C1555 +
                      C115620 * C1560 + C152145 * C1135 - C152180 * C1129 -
                      C152145 * C1136 + C154271 * C1147 + C152148 * C363 -
                      C152187 * C347 - C152148 * C364 + C154264 * C383) *
                         C154164 * C154016) *
                        C2114) *
                       C339 +
                   (((C152148 * C365 - C152187 * C348 - C152148 * C366 +
                      C154264 * C384 + C152145 * C1985 - C152180 * C1976 -
                      C152145 * C1986 + C154271 * C1991 + C152193 * C3445 -
                      C115626 * C3441 - C152193 * C3446 + C115620 * C3453) *
                         C154164 * C154016 +
                     (C116014 + C116015 + C116016) * C154164 * C154024 +
                     (C116017 + C116018 + C116019) * C154164 * C82856) *
                        C2114 -
                    ((C152193 * C6264 - C115626 * C6258 - C152193 * C6265 +
                      C115620 * C6276 + C152145 * C3449 - C152180 * C3443 -
                      C152145 * C3450 + C154271 * C3455 + C152148 * C1981 -
                      C152187 * C1974 - C152148 * C1982 + C154264 * C1989) *
                         C154164 * C82856 +
                     (C152193 * C6268 - C115626 * C6260 - C152193 * C6269 +
                      C115620 * C6278 + C152145 * C3447 - C152180 * C3442 -
                      C152145 * C3448 + C154271 * C3454 + C152148 * C1983 -
                      C152187 * C1975 - C152148 * C1984 + C154264 * C1990) *
                         C154164 * C154024 +
                     (C152193 * C6272 - C115626 * C6262 - C152193 * C6273 +
                      C115620 * C6280 + C152145 * C3445 - C152180 * C3441 -
                      C152145 * C3446 + C154271 * C3453 + C152148 * C1985 -
                      C152187 * C1976 - C152148 * C1986 + C154264 * C1991) *
                         C154164 * C154016) *
                        C154146) *
                       C340) *
                  C154047) /
                     (p * q * std::sqrt(p + q));
    d2ee[285] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
             C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
                C154164 * C154486 +
            (C97340 + C97341) * C154164 * C154479 + C97354 * C154460 +
            C97355 * C154407) *
               C154082 * C154392 -
           (C98118 * C154407 + C98119 * C154460 +
            (C97628 + C97629) * C154164 * C154479 +
            (C97277 * C1135 - C97278 * C1129 - C97277 * C1136 +
             C154268 * C1147 + C97275 * C363 - C97276 * C347 - C97275 * C364 +
             C97273 * C383) *
                C154164 * C154486) *
               C154082 * C154118) *
              C154461 +
          (((C97629 + C97628) * C154164 * C154486 +
            (C97627 + C97626) * C154164 * C154479 +
            (C97625 + C97624) * C154164 * C154460 +
            (C98124 + C98125) * C154164 * C154407) *
               C154082 * C154118 -
           (C97356 * C154407 + C97357 * C154460 +
            (C97343 + C97342) * C154164 * C154479 +
            (C97341 + C97340) * C154164 * C154486) *
               C154082 * C154392) *
              C154462 +
          ((C97354 * C154486 + C97355 * C154479 +
            (C97347 + C97346) * C154164 * C154460 +
            (C97348 + C97349) * C154164 * C154407) *
               C154082 * C154392 -
           ((C97277 * C1145 - C97278 * C1134 - C97277 * C1146 +
             C154268 * C1152 + C97275 * C375 - C97276 * C353 - C97275 * C376 +
             C97273 * C389) *
                C154164 * C154407 +
            (C98125 + C98124) * C154164 * C154460 + C98118 * C154479 +
            C98119 * C154486) *
               C154082 * C154118) *
              C818)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
              C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
                 C154480 +
             (C101527 + C101528) * C154468 + C101539 * C154442) *
                C74048 +
            ((C97340 + C97341) * C154480 + C101466 * C154468 +
             C101467 * C154442) *
                C154021) *
               C154082 * C154392 -
           ((C101540 * C154442 + C101476 * C154468 + C101477 * C154480) *
                C154021 +
            ((C101533 + C101534) * C154442 + (C101530 + C101529) * C154468 +
             (C101528 + C101527) * C154480) *
                C74048) *
               C154082 * C154118) *
              C154461 +
          (((C101466 * C154480 + C101467 * C154468 + C101541 * C154442) *
                C74048 +
            (C102164 * C154480 + C102165 * C154468 +
             (C101537 + C101538) * C154442) *
                C154021) *
               C154082 * C154118 -
           ((C101502 * C154442 + C98109 * C154468 +
             (C97343 + C97342) * C154480) *
                C154021 +
            (C101476 * C154442 + C101477 * C154468 +
             (C97341 + C97340) * C154480) *
                C74048) *
               C154082 * C154392) *
              C154462 +
          (((C97350 * C154480 + C102164 * C154468 + C102165 * C154442) *
                C74048 +
            (C97351 * C154480 + (C97625 + C97624) * C154468 +
             (C97634 + C97635) * C154442) *
                C154021) *
               C154082 * C154392 -
           (((C97277 * C4264 - C97278 * C4257 - C97277 * C4265 +
              C154268 * C4269 + C97275 * C1406 - C97276 * C1400 -
              C97275 * C1407 + C97273 * C1415) *
                 C154442 +
             (C97635 + C97634) * C154468 + C98108 * C154480) *
                C154021 +
            ((C101538 + C101537) * C154442 + C101502 * C154468 +
             C98109 * C154480) *
                C74048) *
               C154082 * C154118) *
              C818)) /
            (p * q * std::sqrt(p + q));
    d2ee[286] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
              C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
                 C154164 * C154486 +
             (C97340 + C97341) * C154164 * C154479 + C97354 * C154460 +
             C97355 * C154407) *
                C154393 -
            (C98330 * C154407 + C98331 * C154460 +
             (C97906 + C97907) * C154164 * C154479 +
             (C97277 * C602 - C97278 * C585 - C97277 * C603 + C154268 * C621 +
              C97275 * C600 - C97276 * C584 - C97275 * C601 + C97273 * C620) *
                 C154164 * C154486) *
                C154146) *
               C154392 +
           (((C97275 * C1135 - C97276 * C1129 - C97275 * C1136 +
              C97273 * C1147 + C97277 * C1554 - C97278 * C1545 -
              C97277 * C1555 + C154268 * C1560) *
                 C154164 * C154486 +
             (C98632 + C98633) * C154164 * C154479 +
             (C98634 + C98635) * C154164 * C154460 +
             (C98636 + C98637) * C154164 * C154407) *
                C154146 -
            (C98118 * C154407 + C98119 * C154460 +
             (C97628 + C97629) * C154164 * C154479 +
             (C97277 * C1135 - C97278 * C1129 - C97277 * C1136 +
              C154268 * C1147 + C97275 * C363 - C97276 * C347 - C97275 * C364 +
              C97273 * C383) *
                 C154164 * C154486) *
                C154393) *
               C154118) *
              C341 +
          ((((C97907 + C97906) * C154164 * C154486 +
             (C97905 + C97904) * C154164 * C154479 +
             (C97903 + C97902) * C154164 * C154460 +
             (C98336 + C98337) * C154164 * C154407) *
                C154146 -
            (C97356 * C154407 + C97357 * C154460 +
             (C97343 + C97342) * C154164 * C154479 +
             (C97341 + C97340) * C154164 * C154486) *
                C154393) *
               C154392 +
           (((C97629 + C97628) * C154164 * C154486 +
             (C97627 + C97626) * C154164 * C154479 +
             (C97625 + C97624) * C154164 * C154460 +
             (C98124 + C98125) * C154164 * C154407) *
                C154393 -
            ((C97277 * C1546 - C97278 * C1541 - C97277 * C1547 +
              C154268 * C1556 + C97275 * C1143 - C97276 * C1133 -
              C97275 * C1144 + C97273 * C1151) *
                 C154164 * C154407 +
             (C98637 + C98636) * C154164 * C154460 +
             (C98635 + C98634) * C154164 * C154479 +
             (C98633 + C98632) * C154164 * C154486) *
                C154146) *
               C154118) *
              C154053)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
               C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
                  C154480 +
              (C101527 + C101528) * C154468 + C101539 * C154442) *
                 C74048 +
             ((C97340 + C97341) * C154480 + C101466 * C154468 +
              C101467 * C154442) *
                 C154021) *
                C154393 -
            ((C102856 * C154442 + C102857 * C154468 +
              (C97906 + C97907) * C154480) *
                 C154021 +
             ((C102896 + C102897) * C154442 + (C102898 + C102899) * C154468 +
              (C97277 * C602 - C97278 * C585 - C97277 * C603 + C154268 * C621 +
               C97275 * C600 - C97276 * C584 - C97275 * C601 + C97273 * C620) *
                  C154480) *
                 C74048) *
                C154146) *
               C154392 +
           ((((C102899 + C102898) * C154480 + (C102897 + C102896) * C154468 +
              (C97275 * C4258 - C97276 * C4254 - C97275 * C4259 +
               C97273 * C4266 + C97277 * C4912 - C97278 * C4907 -
               C97277 * C4913 + C154268 * C4916) *
                  C154442) *
                 C74048 +
             (C102874 * C154480 + C102875 * C154468 +
              (C102900 + C102901) * C154442) *
                 C154021) *
                C154146 -
            ((C101540 * C154442 + C101476 * C154468 + C101477 * C154480) *
                 C154021 +
             ((C101533 + C101534) * C154442 + (C101530 + C101529) * C154468 +
              (C101528 + C101527) * C154480) *
                 C74048) *
                C154393) *
               C154118) *
              C341 +
          (((((C97907 + C97906) * C154480 + C102874 * C154468 +
              C102875 * C154442) *
                 C74048 +
             ((C97905 + C97904) * C154480 + (C98634 + C98635) * C154468 +
              (C102468 + C102469) * C154442) *
                 C154021) *
                C154146 -
            ((C101502 * C154442 + C98109 * C154468 +
              (C97343 + C97342) * C154480) *
                 C154021 +
             (C101476 * C154442 + C101477 * C154468 +
              (C97341 + C97340) * C154480) *
                 C74048) *
                C154393) *
               C154392 +
           (((C101466 * C154480 + C101467 * C154468 + C101541 * C154442) *
                 C74048 +
             (C102164 * C154480 + C102165 * C154468 +
              (C101537 + C101538) * C154442) *
                 C154021) *
                C154393 -
            (((C97277 * C4908 - C97278 * C4905 - C97277 * C4909 +
               C154268 * C4914 + C97275 * C4262 - C97276 * C4256 -
               C97275 * C4263 + C97273 * C4268) *
                  C154442 +
              (C102469 + C102468) * C154468 + (C98635 + C98634) * C154480) *
                 C154021 +
             ((C102901 + C102900) * C154442 + C102856 * C154468 +
              C102857 * C154480) *
                 C74048) *
                C154146) *
               C154118) *
              C154053)) /
            (p * q * std::sqrt(p + q));
    d2ee[287] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
             C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
                C154164 * C154486 +
            (C97340 + C97341) * C154164 * C154479 + C97354 * C154460 +
            C97355 * C154407) *
               C154082 * C338 -
           ((C97624 + C97625) * C154164 * C154407 +
            (C97626 + C97627) * C154164 * C154460 +
            (C97628 + C97629) * C154164 * C154479 +
            (C97277 * C1135 - C97278 * C1129 - C97277 * C1136 +
             C154268 * C1147 + C97275 * C363 - C97276 * C347 - C97275 * C364 +
             C97273 * C383) *
                C154164 * C154486) *
               C154082 * C339 +
           ((C97275 * C365 - C97276 * C348 - C97275 * C366 + C97273 * C384 +
             C97277 * C1985 - C97278 * C1976 - C97277 * C1986 +
             C154268 * C1991) *
                C154164 * C154486 +
            (C97630 + C97631) * C154164 * C154479 +
            (C97632 + C97633) * C154164 * C154460 +
            (C97634 + C97635) * C154164 * C154407) *
               C154082 * C340) *
              C341 +
          (((C97629 + C97628) * C154164 * C154486 +
            (C97627 + C97626) * C154164 * C154479 +
            (C97625 + C97624) * C154164 * C154460 +
            (C97275 * C355 - C97276 * C343 - C97275 * C356 + C97273 * C379 +
             C97277 * C1143 - C97278 * C1133 - C97277 * C1144 +
             C154268 * C1151) *
                C154164 * C154407) *
               C154082 * C339 -
           (C97356 * C154407 + C97357 * C154460 +
            (C97343 + C97342) * C154164 * C154479 +
            (C97341 + C97340) * C154164 * C154486) *
               C154082 * C338 -
           ((C97277 * C1977 - C97278 * C1972 - C97277 * C1978 +
             C154268 * C1987 + C97275 * C373 - C97276 * C352 - C97275 * C374 +
             C97273 * C388) *
                C154164 * C154407 +
            (C97635 + C97634) * C154164 * C154460 +
            (C97633 + C97632) * C154164 * C154479 +
            (C97631 + C97630) * C154164 * C154486) *
               C154082 * C340) *
              C154053)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
            C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
               C154164 * C154486 +
           (C97340 + C97341) * C154164 * C154479 + C97354 * C154460 +
           C97355 * C154407) *
              C154082 * C154066 * C130 -
          (C97356 * C154407 + C97357 * C154460 +
           (C97343 + C97342) * C154164 * C154479 +
           (C97341 + C97340) * C154164 * C154486) *
              C154082 * C154066 * C131 +
          (C97354 * C154486 + C97355 * C154479 +
           (C97347 + C97346) * C154164 * C154460 +
           (C97348 + C97349) * C154164 * C154407) *
              C154082 * C154066 * C132 -
          ((C97277 * C956 - C97278 * C955 - C97277 * C957 + C154268 * C958 +
            C97275 * C156 - C97276 * C142 - C97275 * C157 + C97273 * C166) *
               C154164 * C154407 +
           (C97349 + C97348) * C154164 * C154460 + C97356 * C154479 +
           C97357 * C154486) *
              C154082 * C154066 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
             C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
                C154164 * C154486 +
            (C97340 + C97341) * C154164 * C154479 + C97354 * C154460 +
            C97355 * C154407) *
               C577 -
           ((C97902 + C97903) * C154164 * C154407 +
            (C97904 + C97905) * C154164 * C154460 +
            (C97906 + C97907) * C154164 * C154479 +
            (C97277 * C602 - C97278 * C585 - C97277 * C603 + C154268 * C621 +
             C97275 * C600 - C97276 * C584 - C97275 * C601 + C97273 * C620) *
                C154164 * C154486) *
               C578 +
           ((C97275 * C602 - C97276 * C585 - C97275 * C603 + C97273 * C621 +
             C97277 * C2337 - C97278 * C2328 - C97277 * C2338 +
             C154268 * C2343) *
                C154164 * C154486 +
            (C97908 + C97909) * C154164 * C154479 +
            (C97910 + C97911) * C154164 * C154460 +
            (C97912 + C97913) * C154164 * C154407) *
               C579) *
              C154066 * C341 +
          (((C97907 + C97906) * C154164 * C154486 +
            (C97905 + C97904) * C154164 * C154479 +
            (C97903 + C97902) * C154164 * C154460 +
            (C97275 * C592 - C97276 * C580 - C97275 * C593 + C97273 * C616 +
             C97277 * C610 - C97278 * C589 - C97277 * C611 + C154268 * C625) *
                C154164 * C154407) *
               C578 -
           (C97356 * C154407 + C97357 * C154460 +
            (C97343 + C97342) * C154164 * C154479 +
            (C97341 + C97340) * C154164 * C154486) *
               C577 -
           ((C97277 * C2329 - C97278 * C2324 - C97277 * C2330 +
             C154268 * C2339 + C97275 * C610 - C97276 * C589 - C97275 * C611 +
             C97273 * C625) *
                C154164 * C154407 +
            (C97913 + C97912) * C154164 * C154460 +
            (C97911 + C97910) * C154164 * C154479 +
            (C97909 + C97908) * C154164 * C154486) *
               C579) *
              C154066 * C154053)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
             C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
                C154480 +
            (C97275 * C363 - C97276 * C347 - C97275 * C364 + C97273 * C383 +
             C97277 * C1135 - C97278 * C1129 - C97277 * C1136 +
             C154268 * C1147) *
                C154468 +
            (C97275 * C365 - C97276 * C348 - C97275 * C366 + C97273 * C384 +
             C97277 * C1985 - C97278 * C1976 - C97277 * C1986 +
             C154268 * C1991) *
                C154442) *
               C74048 +
           ((C97340 + C97341) * C154480 + (C97629 + C97628) * C154468 +
            (C97630 + C97631) * C154442) *
               C154021) *
              C154082 * C154066 * C130 -
          (((C97633 + C97632) * C154442 + C98109 * C154468 +
            (C97343 + C97342) * C154480) *
               C154021 +
           ((C97631 + C97630) * C154442 + (C97628 + C97629) * C154468 +
            (C97341 + C97340) * C154480) *
               C74048) *
              C154082 * C154066 * C131 +
          ((C97350 * C154480 + (C97627 + C97626) * C154468 +
            (C97632 + C97633) * C154442) *
               C74048 +
           (C97351 * C154480 + (C97625 + C97624) * C154468 +
            (C97634 + C97635) * C154442) *
               C154021) *
              C154082 * C154066 * C132 -
          (((C97277 * C1977 - C97278 * C1972 - C97277 * C1978 +
             C154268 * C1987 + C97275 * C373 - C97276 * C352 - C97275 * C374 +
             C97273 * C388) *
                C154442 +
            (C98125 + C98124) * C154468 + C97352 * C154480) *
               C154021 +
           ((C97635 + C97634) * C154442 + C98108 * C154468 + C97353 * C154480) *
               C74048) *
              C154082 * C154066 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
              C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
                 C154480 +
             (C101527 + C101528) * C154468 + C101539 * C154442) *
                C74048 +
            ((C97340 + C97341) * C154480 + C101466 * C154468 +
             C101467 * C154442) *
                C154021) *
               C154082 * C338 -
           ((C101540 * C154442 + C101476 * C154468 + C101477 * C154480) *
                C154021 +
            ((C101533 + C101534) * C154442 + (C101530 + C101529) * C154468 +
             (C101528 + C101527) * C154480) *
                C74048) *
               C154082 * C339 +
           ((C101539 * C154480 + (C101534 + C101533) * C154468 +
             (C97275 * C3143 - C97276 * C3139 - C97275 * C3144 +
              C97273 * C3151 + C97277 * C5664 - C97278 * C5659 -
              C97277 * C5665 + C154268 * C5668) *
                 C154442) *
                C74048 +
            (C101467 * C154480 + C101541 * C154468 +
             (C101535 + C101536) * C154442) *
                C154021) *
               C154082 * C340) *
              C341 +
          (((C101466 * C154480 + C101467 * C154468 + C101541 * C154442) *
                C74048 +
            ((C97627 + C97626) * C154480 + (C97632 + C97633) * C154468 +
             (C101537 + C101538) * C154442) *
                C154021) *
               C154082 * C339 -
           ((C101502 * C154442 + C98109 * C154468 +
             (C97343 + C97342) * C154480) *
                C154021 +
            (C101476 * C154442 + C101477 * C154468 +
             (C97341 + C97340) * C154480) *
                C74048) *
               C154082 * C338 -
           (((C97277 * C5660 - C97278 * C5657 - C97277 * C5661 +
              C154268 * C5666 + C97275 * C3147 - C97276 * C3141 -
              C97275 * C3148 + C97273 * C3153) *
                 C154442 +
             (C101538 + C101537) * C154468 + C101502 * C154480) *
                C154021 +
            ((C101536 + C101535) * C154442 + C101540 * C154468 +
             C101476 * C154480) *
                C74048) *
               C154082 * C340) *
              C154053)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
              C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
                 C154480 +
             (C101527 + C101528) * C154468 + C101539 * C154442) *
                C74048 +
            ((C97340 + C97341) * C154480 + C101466 * C154468 +
             C101467 * C154442) *
                C154021) *
               C577 -
           (((C101868 + C101869) * C154442 + (C98633 + C98632) * C154468 +
             (C97906 + C97907) * C154480) *
                C154021 +
            ((C97277 * C3445 - C97278 * C3441 - C97277 * C3446 +
              C154268 * C3453 + C97275 * C1985 - C97276 * C1976 -
              C97275 * C1986 + C97273 * C1991) *
                 C154442 +
             (C97277 * C1554 - C97278 * C1545 - C97277 * C1555 +
              C154268 * C1560 + C97275 * C1135 - C97276 * C1129 -
              C97275 * C1136 + C97273 * C1147) *
                 C154468 +
             (C97277 * C602 - C97278 * C585 - C97277 * C603 + C154268 * C621 +
              C97275 * C600 - C97276 * C584 - C97275 * C601 + C97273 * C620) *
                 C154480) *
                C74048) *
               C578 +
           (((C97275 * C602 - C97276 * C585 - C97275 * C603 + C97273 * C621 +
              C97277 * C2337 - C97278 * C2328 - C97277 * C2338 +
              C154268 * C2343) *
                 C154480 +
             (C97275 * C1554 - C97276 * C1545 - C97275 * C1555 +
              C97273 * C1560 + C97277 * C6274 - C97278 * C6263 -
              C97277 * C6275 + C154268 * C6281) *
                 C154468 +
             (C97275 * C3445 - C97276 * C3441 - C97275 * C3446 +
              C97273 * C3453 + C97277 * C6272 - C97278 * C6262 -
              C97277 * C6273 + C154268 * C6280) *
                 C154442) *
                C74048 +
            ((C97908 + C97909) * C154480 + (C101870 + C101871) * C154468 +
             (C101872 + C101873) * C154442) *
                C154021) *
               C579) *
              C154066 * C341 +
          ((((C97907 + C97906) * C154480 + (C98632 + C98633) * C154468 +
             (C101869 + C101868) * C154442) *
                C74048 +
            ((C97905 + C97904) * C154480 + (C98634 + C98635) * C154468 +
             (C97275 * C1981 - C97276 * C1974 - C97275 * C1982 +
              C97273 * C1989 + C97277 * C3449 - C97278 * C3443 -
              C97277 * C3450 + C154268 * C3455) *
                 C154442) *
                C154021) *
               C578 -
           ((C101502 * C154442 + C98109 * C154468 +
             (C97343 + C97342) * C154480) *
                C154021 +
            (C101476 * C154442 + C101477 * C154468 +
             (C97341 + C97340) * C154480) *
                C74048) *
               C577 -
           (((C97277 * C6264 - C97278 * C6258 - C97277 * C6265 +
              C154268 * C6276 + C97275 * C3449 - C97276 * C3443 -
              C97275 * C3450 + C97273 * C3455) *
                 C154442 +
             (C97277 * C6266 - C97278 * C6259 - C97277 * C6267 +
              C154268 * C6277 + C97275 * C1550 - C97276 * C1543 -
              C97275 * C1551 + C97273 * C1558) *
                 C154468 +
             (C97911 + C97910) * C154480) *
                C154021 +
            ((C101873 + C101872) * C154442 + (C101871 + C101870) * C154468 +
             (C97909 + C97908) * C154480) *
                C74048) *
               C579) *
              C154066 * C154053)) /
            (p * q * std::sqrt(p + q));
    d2ee[288] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
             C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
                C154164 * C154486 +
            (C97340 + C97341) * C154164 * C154479 + C97354 * C154460 +
            C97355 * C154407) *
               C154393 -
           (C98330 * C154407 + C98331 * C154460 +
            (C97906 + C97907) * C154164 * C154479 +
            (C97277 * C602 - C97278 * C585 - C97277 * C603 + C154268 * C621 +
             C97275 * C600 - C97276 * C584 - C97275 * C601 + C97273 * C620) *
                C154164 * C154486) *
               C154146) *
              C154066 * C154461 +
          (((C97907 + C97906) * C154164 * C154486 +
            (C97905 + C97904) * C154164 * C154479 +
            (C97903 + C97902) * C154164 * C154460 +
            (C98336 + C98337) * C154164 * C154407) *
               C154146 -
           (C97356 * C154407 + C97357 * C154460 +
            (C97343 + C97342) * C154164 * C154479 +
            (C97341 + C97340) * C154164 * C154486) *
               C154393) *
              C154066 * C154462 +
          ((C97354 * C154486 + C97355 * C154479 +
            (C97347 + C97346) * C154164 * C154460 +
            (C97348 + C97349) * C154164 * C154407) *
               C154393 -
           ((C97277 * C614 - C97278 * C591 - C97277 * C615 + C154268 * C627 +
             C97275 * C612 - C97276 * C590 - C97275 * C613 + C97273 * C626) *
                C154164 * C154407 +
            (C98337 + C98336) * C154164 * C154460 + C98330 * C154479 +
            C98331 * C154486) *
               C154146) *
              C154066 * C818)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
              C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
                 C154480 +
             (C101527 + C101528) * C154468 + C101539 * C154442) *
                C74048 +
            ((C97340 + C97341) * C154480 + C101466 * C154468 +
             C101467 * C154442) *
                C154021) *
               C154393 -
           (((C101868 + C101869) * C154442 + (C98633 + C98632) * C154468 +
             (C97906 + C97907) * C154480) *
                C154021 +
            ((C97277 * C3445 - C97278 * C3441 - C97277 * C3446 +
              C154268 * C3453 + C97275 * C1985 - C97276 * C1976 -
              C97275 * C1986 + C97273 * C1991) *
                 C154442 +
             (C97277 * C1554 - C97278 * C1545 - C97277 * C1555 +
              C154268 * C1560 + C97275 * C1135 - C97276 * C1129 -
              C97275 * C1136 + C97273 * C1147) *
                 C154468 +
             (C97277 * C602 - C97278 * C585 - C97277 * C603 + C154268 * C621 +
              C97275 * C600 - C97276 * C584 - C97275 * C601 + C97273 * C620) *
                 C154480) *
                C74048) *
               C154146) *
              C154066 * C154461 +
          ((((C97907 + C97906) * C154480 + (C98632 + C98633) * C154468 +
             (C101869 + C101868) * C154442) *
                C74048 +
            ((C97905 + C97904) * C154480 + (C98634 + C98635) * C154468 +
             (C102468 + C102469) * C154442) *
                C154021) *
               C154146 -
           ((C101502 * C154442 + C98109 * C154468 +
             (C97343 + C97342) * C154480) *
                C154021 +
            (C101476 * C154442 + C101477 * C154468 +
             (C97341 + C97340) * C154480) *
                C74048) *
               C154393) *
              C154066 * C154462 +
          (((C97350 * C154480 + C102164 * C154468 + C102165 * C154442) *
                C74048 +
            (C97351 * C154480 + (C97625 + C97624) * C154468 +
             (C97634 + C97635) * C154442) *
                C154021) *
               C154393 -
           (((C97277 * C3451 - C97278 * C3444 - C97277 * C3452 +
              C154268 * C3456 + C97275 * C1979 - C97276 * C1973 -
              C97275 * C1980 + C97273 * C1988) *
                 C154442 +
             (C98637 + C98636) * C154468 + C98320 * C154480) *
                C154021 +
            ((C102469 + C102468) * C154442 + (C98635 + C98634) * C154468 +
             C98321 * C154480) *
                C74048) *
               C154146) *
              C154066 * C818)) /
            (p * q * std::sqrt(p + q));
    d2ee[289] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
            C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
               C154164 * C154486 +
           (C97340 + C97341) * C154164 * C154479 + C97354 * C154460 +
           C97355 * C154407) *
              C154082 * C154066 * C130 -
          (C97356 * C154407 + C97357 * C154460 +
           (C97343 + C97342) * C154164 * C154479 +
           (C97341 + C97340) * C154164 * C154486) *
              C154082 * C154066 * C131 +
          (C97354 * C154486 + C97355 * C154479 +
           (C97347 + C97346) * C154164 * C154460 +
           (C97348 + C97349) * C154164 * C154407) *
              C154082 * C154066 * C132 -
          ((C97277 * C956 - C97278 * C955 - C97277 * C957 + C154268 * C958 +
            C97275 * C156 - C97276 * C142 - C97275 * C157 + C97273 * C166) *
               C154164 * C154407 +
           (C97349 + C97348) * C154164 * C154460 + C97356 * C154479 +
           C97357 * C154486) *
              C154082 * C154066 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
             C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
                C154164 * C154486 +
            (C97340 + C97341) * C154164 * C154479 + C97354 * C154460 +
            C97355 * C154407) *
               C154082 * C338 -
           ((C97624 + C97625) * C154164 * C154407 +
            (C97626 + C97627) * C154164 * C154460 +
            (C97628 + C97629) * C154164 * C154479 +
            (C97277 * C1135 - C97278 * C1129 - C97277 * C1136 +
             C154268 * C1147 + C97275 * C363 - C97276 * C347 - C97275 * C364 +
             C97273 * C383) *
                C154164 * C154486) *
               C154082 * C339 +
           ((C97275 * C365 - C97276 * C348 - C97275 * C366 + C97273 * C384 +
             C97277 * C1985 - C97278 * C1976 - C97277 * C1986 +
             C154268 * C1991) *
                C154164 * C154486 +
            (C97630 + C97631) * C154164 * C154479 +
            (C97632 + C97633) * C154164 * C154460 +
            (C97634 + C97635) * C154164 * C154407) *
               C154082 * C340) *
              C341 +
          (((C97629 + C97628) * C154164 * C154486 +
            (C97627 + C97626) * C154164 * C154479 +
            (C97625 + C97624) * C154164 * C154460 +
            (C97275 * C355 - C97276 * C343 - C97275 * C356 + C97273 * C379 +
             C97277 * C1143 - C97278 * C1133 - C97277 * C1144 +
             C154268 * C1151) *
                C154164 * C154407) *
               C154082 * C339 -
           (C97356 * C154407 + C97357 * C154460 +
            (C97343 + C97342) * C154164 * C154479 +
            (C97341 + C97340) * C154164 * C154486) *
               C154082 * C338 -
           ((C97277 * C1977 - C97278 * C1972 - C97277 * C1978 +
             C154268 * C1987 + C97275 * C373 - C97276 * C352 - C97275 * C374 +
             C97273 * C388) *
                C154164 * C154407 +
            (C97635 + C97634) * C154164 * C154460 +
            (C97633 + C97632) * C154164 * C154479 +
            (C97631 + C97630) * C154164 * C154486) *
               C154082 * C340) *
              C154053)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
             C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
                C154480 +
            (C97275 * C363 - C97276 * C347 - C97275 * C364 + C97273 * C383 +
             C97277 * C1135 - C97278 * C1129 - C97277 * C1136 +
             C154268 * C1147) *
                C154468 +
            (C97275 * C365 - C97276 * C348 - C97275 * C366 + C97273 * C384 +
             C97277 * C1985 - C97278 * C1976 - C97277 * C1986 +
             C154268 * C1991) *
                C154442) *
               C74048 +
           ((C97340 + C97341) * C154480 + (C97629 + C97628) * C154468 +
            (C97630 + C97631) * C154442) *
               C154021) *
              C154082 * C154066 * C130 -
          (((C97633 + C97632) * C154442 + C98109 * C154468 +
            (C97343 + C97342) * C154480) *
               C154021 +
           ((C97631 + C97630) * C154442 + (C97628 + C97629) * C154468 +
            (C97341 + C97340) * C154480) *
               C74048) *
              C154082 * C154066 * C131 +
          ((C97350 * C154480 + (C97627 + C97626) * C154468 +
            (C97632 + C97633) * C154442) *
               C74048 +
           (C97351 * C154480 + (C97625 + C97624) * C154468 +
            (C97634 + C97635) * C154442) *
               C154021) *
              C154082 * C154066 * C132 -
          (((C97277 * C1977 - C97278 * C1972 - C97277 * C1978 +
             C154268 * C1987 + C97275 * C373 - C97276 * C352 - C97275 * C374 +
             C97273 * C388) *
                C154442 +
            (C98125 + C98124) * C154468 + C97352 * C154480) *
               C154021 +
           ((C97635 + C97634) * C154442 + C98108 * C154468 + C97353 * C154480) *
               C74048) *
              C154082 * C154066 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
              C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
                 C154480 +
             (C101527 + C101528) * C154468 + C101539 * C154442) *
                C74048 +
            ((C97340 + C97341) * C154480 + C101466 * C154468 +
             C101467 * C154442) *
                C154021) *
               C154082 * C338 -
           ((C101540 * C154442 + C101476 * C154468 + C101477 * C154480) *
                C154021 +
            ((C101533 + C101534) * C154442 + (C101530 + C101529) * C154468 +
             (C101528 + C101527) * C154480) *
                C74048) *
               C154082 * C339 +
           ((C101539 * C154480 + (C101534 + C101533) * C154468 +
             (C97275 * C3143 - C97276 * C3139 - C97275 * C3144 +
              C97273 * C3151 + C97277 * C5664 - C97278 * C5659 -
              C97277 * C5665 + C154268 * C5668) *
                 C154442) *
                C74048 +
            (C101467 * C154480 + C101541 * C154468 +
             (C101535 + C101536) * C154442) *
                C154021) *
               C154082 * C340) *
              C341 +
          (((C101466 * C154480 + C101467 * C154468 + C101541 * C154442) *
                C74048 +
            ((C97627 + C97626) * C154480 + (C97632 + C97633) * C154468 +
             (C101537 + C101538) * C154442) *
                C154021) *
               C154082 * C339 -
           ((C101502 * C154442 + C98109 * C154468 +
             (C97343 + C97342) * C154480) *
                C154021 +
            (C101476 * C154442 + C101477 * C154468 +
             (C97341 + C97340) * C154480) *
                C74048) *
               C154082 * C338 -
           (((C97277 * C5660 - C97278 * C5657 - C97277 * C5661 +
              C154268 * C5666 + C97275 * C3147 - C97276 * C3141 -
              C97275 * C3148 + C97273 * C3153) *
                 C154442 +
             (C101538 + C101537) * C154468 + C101502 * C154480) *
                C154021 +
            ((C101536 + C101535) * C154442 + C101540 * C154468 +
             C101476 * C154480) *
                C74048) *
               C154082 * C340) *
              C154053)) /
            (p * q * std::sqrt(p + q));
    d2ee[290] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
             C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
                C154164 * C154486 +
            (C97340 + C97341) * C154164 * C154479 + C97354 * C154460 +
            C97355 * C154407) *
               C154082 * C154463 -
           (C98118 * C154407 + C98119 * C154460 +
            (C97628 + C97629) * C154164 * C154479 +
            (C97277 * C1135 - C97278 * C1129 - C97277 * C1136 +
             C154268 * C1147 + C97275 * C363 - C97276 * C347 - C97275 * C364 +
             C97273 * C383) *
                C154164 * C154486) *
               C154082 * C154464 +
           ((C97275 * C365 - C97276 * C348 - C97275 * C366 + C97273 * C384 +
             C97277 * C1985 - C97278 * C1976 - C97277 * C1986 +
             C154268 * C1991) *
                C154164 * C154486 +
            (C97630 + C97631) * C154164 * C154479 +
            (C97632 + C97633) * C154164 * C154460 +
            (C97634 + C97635) * C154164 * C154407) *
               C154082 * C1685) *
              C154384 +
          (((C97629 + C97628) * C154164 * C154486 +
            (C97627 + C97626) * C154164 * C154479 +
            (C97625 + C97624) * C154164 * C154460 +
            (C98124 + C98125) * C154164 * C154407) *
               C154082 * C154464 -
           (C97356 * C154407 + C97357 * C154460 +
            (C97343 + C97342) * C154164 * C154479 +
            (C97341 + C97340) * C154164 * C154486) *
               C154082 * C154463 -
           ((C97277 * C1977 - C97278 * C1972 - C97277 * C1978 +
             C154268 * C1987 + C97275 * C373 - C97276 * C352 - C97275 * C374 +
             C97273 * C388) *
                C154164 * C154407 +
            (C97635 + C97634) * C154164 * C154460 +
            (C97633 + C97632) * C154164 * C154479 +
            (C97631 + C97630) * C154164 * C154486) *
               C154082 * C1685) *
              C154053)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
              C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
                 C154480 +
             (C101527 + C101528) * C154468 + C101539 * C154442) *
                C74048 +
            ((C97340 + C97341) * C154480 + C101466 * C154468 +
             C101467 * C154442) *
                C154021) *
               C154082 * C154463 -
           ((C101540 * C154442 + C101476 * C154468 + C101477 * C154480) *
                C154021 +
            (C103386 * C154442 + (C101530 + C101529) * C154468 +
             (C101528 + C101527) * C154480) *
                C74048) *
               C154082 * C154464 +
           ((C101539 * C154480 + (C101534 + C101533) * C154468 +
             (C103399 + C103400) * C154442) *
                C74048 +
            (C101467 * C154480 + C101541 * C154468 +
             (C101535 + C101536) * C154442) *
                C154021) *
               C154082 * C1685) *
              C154384 +
          (((C101466 * C154480 + C101467 * C154468 + C101541 * C154442) *
                C74048 +
            (C102164 * C154480 + C102165 * C154468 +
             (C101537 + C101538) * C154442) *
                C154021) *
               C154082 * C154464 -
           ((C101502 * C154442 + C98109 * C154468 +
             (C97343 + C97342) * C154480) *
                C154021 +
            (C101476 * C154442 + C101477 * C154468 +
             (C97341 + C97340) * C154480) *
                C74048) *
               C154082 * C154463 -
           (((C97277 * C5660 - C97278 * C5657 - C97277 * C5661 +
              C154268 * C5666 + C97275 * C3147 - C97276 * C3141 -
              C97275 * C3148 + C97273 * C3153) *
                 C154442 +
             (C101538 + C101537) * C154468 + C101502 * C154480) *
                C154021 +
            ((C101536 + C101535) * C154442 + C101540 * C154468 +
             C101476 * C154480) *
                C74048) *
               C154082 * C1685) *
              C154053)) /
            (p * q * std::sqrt(p + q));
    d2ee[291] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
             C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
                C154164 * C154486 +
            (C97340 + C97341) * C154164 * C154479 + C97354 * C154460 +
            C97355 * C154407) *
               C154393 -
           (C98330 * C154407 + C98331 * C154460 +
            (C97906 + C97907) * C154164 * C154479 +
            (C97277 * C602 - C97278 * C585 - C97277 * C603 + C154268 * C621 +
             C97275 * C600 - C97276 * C584 - C97275 * C601 + C97273 * C620) *
                C154164 * C154486) *
               C154146) *
              C154463 +
          (((C97275 * C1135 - C97276 * C1129 - C97275 * C1136 + C97273 * C1147 +
             C97277 * C1554 - C97278 * C1545 - C97277 * C1555 +
             C154268 * C1560) *
                C154164 * C154486 +
            (C98632 + C98633) * C154164 * C154479 +
            (C98634 + C98635) * C154164 * C154460 +
            (C98636 + C98637) * C154164 * C154407) *
               C154146 -
           (C98118 * C154407 + C98119 * C154460 +
            (C97628 + C97629) * C154164 * C154479 +
            (C97277 * C1135 - C97278 * C1129 - C97277 * C1136 +
             C154268 * C1147 + C97275 * C363 - C97276 * C347 - C97275 * C364 +
             C97273 * C383) *
                C154164 * C154486) *
               C154393) *
              C154464 +
          (((C97275 * C365 - C97276 * C348 - C97275 * C366 + C97273 * C384 +
             C97277 * C1985 - C97278 * C1976 - C97277 * C1986 +
             C154268 * C1991) *
                C154164 * C154486 +
            (C97630 + C97631) * C154164 * C154479 +
            (C97632 + C97633) * C154164 * C154460 +
            (C97634 + C97635) * C154164 * C154407) *
               C154393 -
           ((C97277 * C3451 - C97278 * C3444 - C97277 * C3452 +
             C154268 * C3456 + C97275 * C1979 - C97276 * C1973 -
             C97275 * C1980 + C97273 * C1988) *
                C154164 * C154407 +
            (C97277 * C3449 - C97278 * C3443 - C97277 * C3450 +
             C154268 * C3455 + C97275 * C1981 - C97276 * C1974 -
             C97275 * C1982 + C97273 * C1989) *
                C154164 * C154460 +
            (C97277 * C3447 - C97278 * C3442 - C97277 * C3448 +
             C154268 * C3454 + C97275 * C1983 - C97276 * C1975 -
             C97275 * C1984 + C97273 * C1990) *
                C154164 * C154479 +
            (C97277 * C3445 - C97278 * C3441 - C97277 * C3446 +
             C154268 * C3453 + C97275 * C1985 - C97276 * C1976 -
             C97275 * C1986 + C97273 * C1991) *
                C154164 * C154486) *
               C154146) *
              C1685) *
         C154047) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
              C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
                 C154480 +
             (C101527 + C101528) * C154468 + C101539 * C154442) *
                C74048 +
            ((C97340 + C97341) * C154480 + C101466 * C154468 +
             C101467 * C154442) *
                C154021) *
               C154393 -
           ((C102856 * C154442 + C102857 * C154468 +
             (C97906 + C97907) * C154480) *
                C154021 +
            (C104685 * C154442 + (C102898 + C102899) * C154468 +
             (C97277 * C602 - C97278 * C585 - C97277 * C603 + C154268 * C621 +
              C97275 * C600 - C97276 * C584 - C97275 * C601 + C97273 * C620) *
                 C154480) *
                C74048) *
               C154146) *
              C154463 +
          ((((C102899 + C102898) * C154480 + (C102897 + C102896) * C154468 +
             (C104698 + C104699) * C154442) *
                C74048 +
            (C102874 * C154480 + C102875 * C154468 +
             (C102900 + C102901) * C154442) *
                C154021) *
               C154146 -
           ((C101540 * C154442 + C101476 * C154468 + C101477 * C154480) *
                C154021 +
            (C103386 * C154442 + (C101530 + C101529) * C154468 +
             (C101528 + C101527) * C154480) *
                C74048) *
               C154393) *
              C154464 +
          (((C101539 * C154480 + (C101534 + C101533) * C154468 +
             (C103399 + C103400) * C154442) *
                C74048 +
            (C101467 * C154480 + C101541 * C154468 +
             (C101535 + C101536) * C154442) *
                C154021) *
               C154393 -
           (((C97277 * C28468 - C97278 * C28465 - C97277 * C28469 +
              C154268 * C28471 + C97275 * C5662 - C97276 * C5658 -
              C97275 * C5663 + C97273 * C5667) *
                 C154442 +
             (C102901 + C102900) * C154468 + C102856 * C154480) *
                C154021 +
            ((C97277 * C28466 - C97278 * C28464 - C97277 * C28467 +
              C154268 * C28470 + C97275 * C5664 - C97276 * C5659 -
              C97275 * C5665 + C97273 * C5668) *
                 C154442 +
             (C104699 + C104698) * C154468 + C104685 * C154480) *
                C74048) *
               C154146) *
              C1685) *
         C154047) /
            (p * q * std::sqrt(p + q));
    d2ee[292] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
            C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
               C154164 * C154486 +
           (C97340 + C97341) * C154164 * C154479 + C97354 * C154460 +
           C97355 * C154407) *
              C154082 * C1394 -
          (C98118 * C154407 + C98119 * C154460 +
           (C97628 + C97629) * C154164 * C154479 +
           (C97277 * C1135 - C97278 * C1129 - C97277 * C1136 + C154268 * C1147 +
            C97275 * C363 - C97276 * C347 - C97275 * C364 + C97273 * C383) *
               C154164 * C154486) *
              C154082 * C1395 +
          ((C97275 * C365 - C97276 * C348 - C97275 * C366 + C97273 * C384 +
            C97277 * C1985 - C97278 * C1976 - C97277 * C1986 +
            C154268 * C1991) *
               C154164 * C154486 +
           (C97630 + C97631) * C154164 * C154479 +
           (C97632 + C97633) * C154164 * C154460 +
           (C97634 + C97635) * C154164 * C154407) *
              C154082 * C1396 -
          ((C97277 * C4264 - C97278 * C4257 - C97277 * C4265 + C154268 * C4269 +
            C97275 * C1406 - C97276 * C1400 - C97275 * C1407 + C97273 * C1415) *
               C154164 * C154407 +
           (C97277 * C4262 - C97278 * C4256 - C97277 * C4263 + C154268 * C4268 +
            C97275 * C1408 - C97276 * C1401 - C97275 * C1409 + C97273 * C1416) *
               C154164 * C154460 +
           (C97277 * C4260 - C97278 * C4255 - C97277 * C4261 + C154268 * C4267 +
            C97275 * C1410 - C97276 * C1402 - C97275 * C1411 + C97273 * C1417) *
               C154164 * C154479 +
           (C97277 * C4258 - C97278 * C4254 - C97277 * C4259 + C154268 * C4266 +
            C97275 * C1412 - C97276 * C1403 - C97275 * C1413 + C97273 * C1418) *
               C154164 * C154486) *
              C154082 * C1397) *
         C154047) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
             C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
                C154164 * C154486 +
            (C97340 + C97341) * C154164 * C154479 + C97354 * C154460 +
            C97355 * C154407) *
               C154082 * C1307 -
           (C98118 * C154407 + C98119 * C154460 +
            (C97628 + C97629) * C154164 * C154479 +
            (C97277 * C1135 - C97278 * C1129 - C97277 * C1136 +
             C154268 * C1147 + C97275 * C363 - C97276 * C347 - C97275 * C364 +
             C97273 * C383) *
                C154164 * C154486) *
               C154082 * C154118) *
              C1309 +
          (((C97629 + C97628) * C154164 * C154486 +
            (C97627 + C97626) * C154164 * C154479 +
            (C97625 + C97624) * C154164 * C154460 +
            (C98124 + C98125) * C154164 * C154407) *
               C154082 * C154118 -
           (C97356 * C154407 + C97357 * C154460 +
            (C97343 + C97342) * C154164 * C154479 +
            (C97341 + C97340) * C154164 * C154486) *
               C154082 * C1307) *
              C1310 +
          ((C97354 * C154486 + C97355 * C154479 +
            (C97347 + C97346) * C154164 * C154460 +
            (C97348 + C97349) * C154164 * C154407) *
               C154082 * C1307 -
           ((C97277 * C1145 - C97278 * C1134 - C97277 * C1146 +
             C154268 * C1152 + C97275 * C375 - C97276 * C353 - C97275 * C376 +
             C97273 * C389) *
                C154164 * C154407 +
            (C98125 + C98124) * C154164 * C154460 + C98118 * C154479 +
            C98119 * C154486) *
               C154082 * C154118) *
              C1311)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
             C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
                C154164 * C154486 +
            (C97340 + C97341) * C154164 * C154479 + C97354 * C154460 +
            C97355 * C154407) *
               C577 -
           (C98330 * C154407 + C98331 * C154460 +
            (C97906 + C97907) * C154164 * C154479 +
            (C97277 * C602 - C97278 * C585 - C97277 * C603 + C154268 * C621 +
             C97275 * C600 - C97276 * C584 - C97275 * C601 + C97273 * C620) *
                C154164 * C154486) *
               C578 +
           ((C97275 * C602 - C97276 * C585 - C97275 * C603 + C97273 * C621 +
             C97277 * C2337 - C97278 * C2328 - C97277 * C2338 +
             C154268 * C2343) *
                C154164 * C154486 +
            (C97908 + C97909) * C154164 * C154479 +
            (C97910 + C97911) * C154164 * C154460 +
            (C97912 + C97913) * C154164 * C154407) *
               C579) *
              C1307 +
          (((C97275 * C1135 - C97276 * C1129 - C97275 * C1136 + C97273 * C1147 +
             C97277 * C1554 - C97278 * C1545 - C97277 * C1555 +
             C154268 * C1560) *
                C154164 * C154486 +
            (C98632 + C98633) * C154164 * C154479 +
            (C98634 + C98635) * C154164 * C154460 +
            (C98636 + C98637) * C154164 * C154407) *
               C578 -
           (C98118 * C154407 + C98119 * C154460 +
            (C97628 + C97629) * C154164 * C154479 +
            (C97277 * C1135 - C97278 * C1129 - C97277 * C1136 +
             C154268 * C1147 + C97275 * C363 - C97276 * C347 - C97275 * C364 +
             C97273 * C383) *
                C154164 * C154486) *
               C577 -
           ((C97277 * C8648 - C97278 * C8647 - C97277 * C8649 +
             C154268 * C8650 + C97275 * C1548 - C97276 * C1542 -
             C97275 * C1549 + C97273 * C1557) *
                C154164 * C154407 +
            (C97277 * C6266 - C97278 * C6259 - C97277 * C6267 +
             C154268 * C6277 + C97275 * C1550 - C97276 * C1543 -
             C97275 * C1551 + C97273 * C1558) *
                C154164 * C154460 +
            (C97277 * C6270 - C97278 * C6261 - C97277 * C6271 +
             C154268 * C6279 + C97275 * C1552 - C97276 * C1544 -
             C97275 * C1553 + C97273 * C1559) *
                C154164 * C154479 +
            (C97277 * C6274 - C97278 * C6263 - C97277 * C6275 +
             C154268 * C6281 + C97275 * C1554 - C97276 * C1545 -
             C97275 * C1555 + C97273 * C1560) *
                C154164 * C154486) *
               C579) *
              C154118) *
         C154047) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
              C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
                 C154480 +
             (C101527 + C101528) * C154468 + C101539 * C154442) *
                C74048 +
            ((C97340 + C97341) * C154480 + C101466 * C154468 +
             C101467 * C154442) *
                C154021) *
               C154082 * C1307 -
           ((C101540 * C154442 + C101476 * C154468 + C101477 * C154480) *
                C154021 +
            ((C101533 + C101534) * C154442 + (C101530 + C101529) * C154468 +
             (C101528 + C101527) * C154480) *
                C74048) *
               C154082 * C154118) *
              C1309 +
          (((C101466 * C154480 + C101467 * C154468 + C101541 * C154442) *
                C74048 +
            (C102164 * C154480 + C102165 * C154468 +
             (C101537 + C101538) * C154442) *
                C154021) *
               C154082 * C154118 -
           ((C101502 * C154442 + C98109 * C154468 +
             (C97343 + C97342) * C154480) *
                C154021 +
            (C101476 * C154442 + C101477 * C154468 +
             (C97341 + C97340) * C154480) *
                C74048) *
               C154082 * C1307) *
              C1310 +
          (((C97350 * C154480 + C102164 * C154468 + C102165 * C154442) *
                C74048 +
            (C97351 * C154480 + (C97625 + C97624) * C154468 +
             (C97634 + C97635) * C154442) *
                C154021) *
               C154082 * C1307 -
           (((C97277 * C4264 - C97278 * C4257 - C97277 * C4265 +
              C154268 * C4269 + C97275 * C1406 - C97276 * C1400 -
              C97275 * C1407 + C97273 * C1415) *
                 C154442 +
             (C97635 + C97634) * C154468 + C98108 * C154480) *
                C154021 +
            ((C101538 + C101537) * C154442 + C101502 * C154468 +
             C98109 * C154480) *
                C74048) *
               C154082 * C154118) *
              C1311)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
             C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
                C154480 +
            (C101527 + C101528) * C154468 + C101539 * C154442) *
               C74048 +
           ((C97340 + C97341) * C154480 + C101466 * C154468 +
            C101467 * C154442) *
               C154021) *
              C154082 * C1394 -
          ((C101540 * C154442 + C101476 * C154468 + C101477 * C154480) *
               C154021 +
           (C103386 * C154442 + (C101530 + C101529) * C154468 +
            (C101528 + C101527) * C154480) *
               C74048) *
              C154082 * C1395 +
          ((C101539 * C154480 + (C101534 + C101533) * C154468 +
            (C103399 + C103400) * C154442) *
               C74048 +
           (C101467 * C154480 + C101541 * C154468 +
            (C101535 + C101536) * C154442) *
               C154021) *
              C154082 * C1396 -
          (((C97277 * C28882 - C97278 * C28879 - C97277 * C28883 +
             C154268 * C28885 + C97275 * C4673 - C97276 * C4669 -
             C97275 * C4674 + C97273 * C4678) *
                C154442 +
            (C101536 + C101535) * C154468 + C101540 * C154480) *
               C154021 +
           ((C97277 * C28880 - C97278 * C28878 - C97277 * C28881 +
             C154268 * C28884 + C97275 * C4675 - C97276 * C4670 -
             C97275 * C4676 + C97273 * C4679) *
                C154442 +
            (C103400 + C103399) * C154468 + C103386 * C154480) *
               C74048) *
              C154082 * C1397) *
         C154047) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
              C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
                 C154480 +
             (C101527 + C101528) * C154468 + C101539 * C154442) *
                C74048 +
            ((C97340 + C97341) * C154480 + C101466 * C154468 +
             C101467 * C154442) *
                C154021) *
               C577 -
           ((C102856 * C154442 + C102857 * C154468 +
             (C97906 + C97907) * C154480) *
                C154021 +
            ((C102896 + C102897) * C154442 + (C102898 + C102899) * C154468 +
             (C97277 * C602 - C97278 * C585 - C97277 * C603 + C154268 * C621 +
              C97275 * C600 - C97276 * C584 - C97275 * C601 + C97273 * C620) *
                 C154480) *
                C74048) *
               C578 +
           (((C97275 * C602 - C97276 * C585 - C97275 * C603 + C97273 * C621 +
              C97277 * C2337 - C97278 * C2328 - C97277 * C2338 +
              C154268 * C2343) *
                 C154480 +
             (C103715 + C103716) * C154468 + (C103717 + C103718) * C154442) *
                C74048 +
            ((C97908 + C97909) * C154480 + (C101870 + C101871) * C154468 +
             (C101872 + C101873) * C154442) *
                C154021) *
               C579) *
              C1307 +
          ((((C102899 + C102898) * C154480 + (C102897 + C102896) * C154468 +
             (C97275 * C4258 - C97276 * C4254 - C97275 * C4259 +
              C97273 * C4266 + C97277 * C4912 - C97278 * C4907 -
              C97277 * C4913 + C154268 * C4916) *
                 C154442) *
                C74048 +
            (C102874 * C154480 + C102875 * C154468 +
             (C102900 + C102901) * C154442) *
                C154021) *
               C578 -
           ((C101540 * C154442 + C101476 * C154468 + C101477 * C154480) *
                C154021 +
            (C103386 * C154442 + (C101530 + C101529) * C154468 +
             (C101528 + C101527) * C154480) *
                C74048) *
               C577 -
           (((C97277 * C31817 - C97278 * C31816 - C97277 * C31818 +
              C154268 * C31819 + C97275 * C4910 - C97276 * C4906 -
              C97275 * C4911 + C97273 * C4915) *
                 C154442 +
             (C101873 + C101872) * C154468 + (C101871 + C101870) * C154480) *
                C154021 +
            ((C97277 * C30002 - C97278 * C29999 - C97277 * C30003 +
              C154268 * C30005 + C97275 * C4912 - C97276 * C4907 -
              C97275 * C4913 + C97273 * C4916) *
                 C154442 +
             (C103718 + C103717) * C154468 + (C103716 + C103715) * C154480) *
                C74048) *
               C579) *
              C154118) *
         C154047) /
            (p * q * std::sqrt(p + q));
    d2ee[293] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
              C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
                 C154164 * C154486 +
             (C97340 + C97341) * C154164 * C154479 + C97354 * C154460 +
             C97355 * C154407) *
                C154393 -
            (C98330 * C154407 + C98331 * C154460 +
             (C97906 + C97907) * C154164 * C154479 +
             (C97277 * C602 - C97278 * C585 - C97277 * C603 + C154268 * C621 +
              C97275 * C600 - C97276 * C584 - C97275 * C601 + C97273 * C620) *
                 C154164 * C154486) *
                C154146) *
               C1307 +
           (((C97275 * C1135 - C97276 * C1129 - C97275 * C1136 +
              C97273 * C1147 + C97277 * C1554 - C97278 * C1545 -
              C97277 * C1555 + C154268 * C1560) *
                 C154164 * C154486 +
             (C98632 + C98633) * C154164 * C154479 +
             (C98634 + C98635) * C154164 * C154460 +
             (C98636 + C98637) * C154164 * C154407) *
                C154146 -
            (C98118 * C154407 + C98119 * C154460 +
             (C97628 + C97629) * C154164 * C154479 +
             (C97277 * C1135 - C97278 * C1129 - C97277 * C1136 +
              C154268 * C1147 + C97275 * C363 - C97276 * C347 - C97275 * C364 +
              C97273 * C383) *
                 C154164 * C154486) *
                C154393) *
               C154118) *
              C154384 +
          ((((C97907 + C97906) * C154164 * C154486 +
             (C97905 + C97904) * C154164 * C154479 +
             (C97903 + C97902) * C154164 * C154460 +
             (C98336 + C98337) * C154164 * C154407) *
                C154146 -
            (C97356 * C154407 + C97357 * C154460 +
             (C97343 + C97342) * C154164 * C154479 +
             (C97341 + C97340) * C154164 * C154486) *
                C154393) *
               C1307 +
           (((C97629 + C97628) * C154164 * C154486 +
             (C97627 + C97626) * C154164 * C154479 +
             (C97625 + C97624) * C154164 * C154460 +
             (C98124 + C98125) * C154164 * C154407) *
                C154393 -
            ((C97277 * C1546 - C97278 * C1541 - C97277 * C1547 +
              C154268 * C1556 + C97275 * C1143 - C97276 * C1133 -
              C97275 * C1144 + C97273 * C1151) *
                 C154164 * C154407 +
             (C98637 + C98636) * C154164 * C154460 +
             (C98635 + C98634) * C154164 * C154479 +
             (C98633 + C98632) * C154164 * C154486) *
                C154146) *
               C154118) *
              C154053)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
               C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
                  C154480 +
              (C101527 + C101528) * C154468 + C101539 * C154442) *
                 C74048 +
             ((C97340 + C97341) * C154480 + C101466 * C154468 +
              C101467 * C154442) *
                 C154021) *
                C154393 -
            ((C102856 * C154442 + C102857 * C154468 +
              (C97906 + C97907) * C154480) *
                 C154021 +
             ((C102896 + C102897) * C154442 + (C102898 + C102899) * C154468 +
              (C97277 * C602 - C97278 * C585 - C97277 * C603 + C154268 * C621 +
               C97275 * C600 - C97276 * C584 - C97275 * C601 + C97273 * C620) *
                  C154480) *
                 C74048) *
                C154146) *
               C1307 +
           ((((C102899 + C102898) * C154480 + (C102897 + C102896) * C154468 +
              (C97275 * C4258 - C97276 * C4254 - C97275 * C4259 +
               C97273 * C4266 + C97277 * C4912 - C97278 * C4907 -
               C97277 * C4913 + C154268 * C4916) *
                  C154442) *
                 C74048 +
             (C102874 * C154480 + C102875 * C154468 +
              (C102900 + C102901) * C154442) *
                 C154021) *
                C154146 -
            ((C101540 * C154442 + C101476 * C154468 + C101477 * C154480) *
                 C154021 +
             (C103386 * C154442 + (C101530 + C101529) * C154468 +
              (C101528 + C101527) * C154480) *
                 C74048) *
                C154393) *
               C154118) *
              C154384 +
          (((((C97907 + C97906) * C154480 + C102874 * C154468 +
              C102875 * C154442) *
                 C74048 +
             ((C97905 + C97904) * C154480 + (C98634 + C98635) * C154468 +
              (C102468 + C102469) * C154442) *
                 C154021) *
                C154146 -
            ((C101502 * C154442 + C98109 * C154468 +
              (C97343 + C97342) * C154480) *
                 C154021 +
             (C101476 * C154442 + C101477 * C154468 +
              (C97341 + C97340) * C154480) *
                 C74048) *
                C154393) *
               C1307 +
           (((C101466 * C154480 + C101467 * C154468 + C101541 * C154442) *
                 C74048 +
             (C102164 * C154480 + C102165 * C154468 +
              (C101537 + C101538) * C154442) *
                 C154021) *
                C154393 -
            (((C97277 * C4908 - C97278 * C4905 - C97277 * C4909 +
               C154268 * C4914 + C97275 * C4262 - C97276 * C4256 -
               C97275 * C4263 + C97273 * C4268) *
                  C154442 +
              (C102469 + C102468) * C154468 + (C98635 + C98634) * C154480) *
                 C154021 +
             ((C102901 + C102900) * C154442 + C102856 * C154468 +
              C102857 * C154480) *
                 C74048) *
                C154146) *
               C154118) *
              C154053)) /
            (p * q * std::sqrt(p + q));
    d2ee[294] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
             C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
                C154164 * C154486 +
            (C97340 + C97341) * C154164 * C154479 + C97354 * C154460 +
            C97355 * C154407) *
               C154082 * C1307 -
           (C98118 * C154407 + C98119 * C154460 +
            (C97628 + C97629) * C154164 * C154479 +
            (C97277 * C1135 - C97278 * C1129 - C97277 * C1136 +
             C154268 * C1147 + C97275 * C363 - C97276 * C347 - C97275 * C364 +
             C97273 * C383) *
                C154164 * C154486) *
               C154082 * C154118) *
              C1309 +
          (((C97629 + C97628) * C154164 * C154486 +
            (C97627 + C97626) * C154164 * C154479 +
            (C97625 + C97624) * C154164 * C154460 +
            (C98124 + C98125) * C154164 * C154407) *
               C154082 * C154118 -
           (C97356 * C154407 + C97357 * C154460 +
            (C97343 + C97342) * C154164 * C154479 +
            (C97341 + C97340) * C154164 * C154486) *
               C154082 * C1307) *
              C1310 +
          ((C97354 * C154486 + C97355 * C154479 +
            (C97347 + C97346) * C154164 * C154460 +
            (C97348 + C97349) * C154164 * C154407) *
               C154082 * C1307 -
           ((C97277 * C1145 - C97278 * C1134 - C97277 * C1146 +
             C154268 * C1152 + C97275 * C375 - C97276 * C353 - C97275 * C376 +
             C97273 * C389) *
                C154164 * C154407 +
            (C98125 + C98124) * C154164 * C154460 + C98118 * C154479 +
            C98119 * C154486) *
               C154082 * C154118) *
              C1311)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
            C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
               C154164 * C154486 +
           (C97340 + C97341) * C154164 * C154479 + C97354 * C154460 +
           C97355 * C154407) *
              C154082 * C1394 -
          (C98118 * C154407 + C98119 * C154460 +
           (C97628 + C97629) * C154164 * C154479 +
           (C97277 * C1135 - C97278 * C1129 - C97277 * C1136 + C154268 * C1147 +
            C97275 * C363 - C97276 * C347 - C97275 * C364 + C97273 * C383) *
               C154164 * C154486) *
              C154082 * C1395 +
          ((C97275 * C365 - C97276 * C348 - C97275 * C366 + C97273 * C384 +
            C97277 * C1985 - C97278 * C1976 - C97277 * C1986 +
            C154268 * C1991) *
               C154164 * C154486 +
           (C97630 + C97631) * C154164 * C154479 +
           (C97632 + C97633) * C154164 * C154460 +
           (C97634 + C97635) * C154164 * C154407) *
              C154082 * C1396 -
          ((C97277 * C4264 - C97278 * C4257 - C97277 * C4265 + C154268 * C4269 +
            C97275 * C1406 - C97276 * C1400 - C97275 * C1407 + C97273 * C1415) *
               C154164 * C154407 +
           (C97277 * C4262 - C97278 * C4256 - C97277 * C4263 + C154268 * C4268 +
            C97275 * C1408 - C97276 * C1401 - C97275 * C1409 + C97273 * C1416) *
               C154164 * C154460 +
           (C97277 * C4260 - C97278 * C4255 - C97277 * C4261 + C154268 * C4267 +
            C97275 * C1410 - C97276 * C1402 - C97275 * C1411 + C97273 * C1417) *
               C154164 * C154479 +
           (C97277 * C4258 - C97278 * C4254 - C97277 * C4259 + C154268 * C4266 +
            C97275 * C1412 - C97276 * C1403 - C97275 * C1413 + C97273 * C1418) *
               C154164 * C154486) *
              C154082 * C1397) *
         C154047) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
              C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
                 C154480 +
             (C101527 + C101528) * C154468 + C101539 * C154442) *
                C74048 +
            ((C97340 + C97341) * C154480 + C101466 * C154468 +
             C101467 * C154442) *
                C154021) *
               C154082 * C1307 -
           ((C101540 * C154442 + C101476 * C154468 + C101477 * C154480) *
                C154021 +
            ((C101533 + C101534) * C154442 + (C101530 + C101529) * C154468 +
             (C101528 + C101527) * C154480) *
                C74048) *
               C154082 * C154118) *
              C1309 +
          (((C101466 * C154480 + C101467 * C154468 + C101541 * C154442) *
                C74048 +
            (C102164 * C154480 + C102165 * C154468 +
             (C101537 + C101538) * C154442) *
                C154021) *
               C154082 * C154118 -
           ((C101502 * C154442 + C98109 * C154468 +
             (C97343 + C97342) * C154480) *
                C154021 +
            (C101476 * C154442 + C101477 * C154468 +
             (C97341 + C97340) * C154480) *
                C74048) *
               C154082 * C1307) *
              C1310 +
          (((C97350 * C154480 + C102164 * C154468 + C102165 * C154442) *
                C74048 +
            (C97351 * C154480 + (C97625 + C97624) * C154468 +
             (C97634 + C97635) * C154442) *
                C154021) *
               C154082 * C1307 -
           (((C97277 * C4264 - C97278 * C4257 - C97277 * C4265 +
              C154268 * C4269 + C97275 * C1406 - C97276 * C1400 -
              C97275 * C1407 + C97273 * C1415) *
                 C154442 +
             (C97635 + C97634) * C154468 + C98108 * C154480) *
                C154021 +
            ((C101538 + C101537) * C154442 + C101502 * C154468 +
             C98109 * C154480) *
                C74048) *
               C154082 * C154118) *
              C1311)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
             C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
                C154480 +
            (C101527 + C101528) * C154468 + C101539 * C154442) *
               C74048 +
           ((C97340 + C97341) * C154480 + C101466 * C154468 +
            C101467 * C154442) *
               C154021) *
              C154082 * C1394 -
          ((C101540 * C154442 + C101476 * C154468 + C101477 * C154480) *
               C154021 +
           (C103386 * C154442 + (C101530 + C101529) * C154468 +
            (C101528 + C101527) * C154480) *
               C74048) *
              C154082 * C1395 +
          ((C101539 * C154480 + (C101534 + C101533) * C154468 +
            (C103399 + C103400) * C154442) *
               C74048 +
           (C101467 * C154480 + C101541 * C154468 +
            (C101535 + C101536) * C154442) *
               C154021) *
              C154082 * C1396 -
          (((C97277 * C28882 - C97278 * C28879 - C97277 * C28883 +
             C154268 * C28885 + C97275 * C4673 - C97276 * C4669 -
             C97275 * C4674 + C97273 * C4678) *
                C154442 +
            (C101536 + C101535) * C154468 + C101540 * C154480) *
               C154021 +
           ((C97277 * C28880 - C97278 * C28878 - C97277 * C28881 +
             C154268 * C28884 + C97275 * C4675 - C97276 * C4670 -
             C97275 * C4676 + C97273 * C4679) *
                C154442 +
            (C103400 + C103399) * C154468 + C103386 * C154480) *
               C74048) *
              C154082 * C1397) *
         C154047) /
            (p * q * std::sqrt(p + q));
    d2ee[295] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
              C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
                 C154164 * C154486 +
             (C97340 + C97341) * C154164 * C154479 + C97354 * C154460 +
             C97355 * C154407) *
                C2114 -
            (C98330 * C154407 + C98331 * C154460 +
             (C97906 + C97907) * C154164 * C154479 +
             (C97277 * C602 - C97278 * C585 - C97277 * C603 + C154268 * C621 +
              C97275 * C600 - C97276 * C584 - C97275 * C601 + C97273 * C620) *
                 C154164 * C154486) *
                C154146) *
               C154392 +
           (((C97275 * C1135 - C97276 * C1129 - C97275 * C1136 +
              C97273 * C1147 + C97277 * C1554 - C97278 * C1545 -
              C97277 * C1555 + C154268 * C1560) *
                 C154164 * C154486 +
             (C98632 + C98633) * C154164 * C154479 +
             (C98634 + C98635) * C154164 * C154460 +
             (C98636 + C98637) * C154164 * C154407) *
                C154146 -
            (C98118 * C154407 + C98119 * C154460 +
             (C97628 + C97629) * C154164 * C154479 +
             (C97277 * C1135 - C97278 * C1129 - C97277 * C1136 +
              C154268 * C1147 + C97275 * C363 - C97276 * C347 - C97275 * C364 +
              C97273 * C383) *
                 C154164 * C154486) *
                C2114) *
               C154118) *
              C154384 +
          ((((C97907 + C97906) * C154164 * C154486 +
             (C97905 + C97904) * C154164 * C154479 +
             (C97903 + C97902) * C154164 * C154460 +
             (C98336 + C98337) * C154164 * C154407) *
                C154146 -
            (C97356 * C154407 + C97357 * C154460 +
             (C97343 + C97342) * C154164 * C154479 +
             (C97341 + C97340) * C154164 * C154486) *
                C2114) *
               C154392 +
           (((C97629 + C97628) * C154164 * C154486 +
             (C97627 + C97626) * C154164 * C154479 +
             (C97625 + C97624) * C154164 * C154460 +
             (C98124 + C98125) * C154164 * C154407) *
                C2114 -
            ((C97277 * C1546 - C97278 * C1541 - C97277 * C1547 +
              C154268 * C1556 + C97275 * C1143 - C97276 * C1133 -
              C97275 * C1144 + C97273 * C1151) *
                 C154164 * C154407 +
             (C98637 + C98636) * C154164 * C154460 +
             (C98635 + C98634) * C154164 * C154479 +
             (C98633 + C98632) * C154164 * C154486) *
                C154146) *
               C154118) *
              C154053)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
               C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
                  C154480 +
              (C101527 + C101528) * C154468 + C101539 * C154442) *
                 C74048 +
             ((C97340 + C97341) * C154480 + C101466 * C154468 +
              C101467 * C154442) *
                 C154021) *
                C2114 -
            ((C102856 * C154442 + C102857 * C154468 +
              (C97906 + C97907) * C154480) *
                 C154021 +
             (C104685 * C154442 + (C102898 + C102899) * C154468 +
              (C97277 * C602 - C97278 * C585 - C97277 * C603 + C154268 * C621 +
               C97275 * C600 - C97276 * C584 - C97275 * C601 + C97273 * C620) *
                  C154480) *
                 C74048) *
                C154146) *
               C154392 +
           ((((C102899 + C102898) * C154480 + (C102897 + C102896) * C154468 +
              (C104698 + C104699) * C154442) *
                 C74048 +
             (C102874 * C154480 + C102875 * C154468 +
              (C102900 + C102901) * C154442) *
                 C154021) *
                C154146 -
            ((C101540 * C154442 + C101476 * C154468 + C101477 * C154480) *
                 C154021 +
             (C103386 * C154442 + (C101530 + C101529) * C154468 +
              (C101528 + C101527) * C154480) *
                 C74048) *
                C2114) *
               C154118) *
              C154384 +
          (((((C97907 + C97906) * C154480 + C102874 * C154468 +
              C102875 * C154442) *
                 C74048 +
             ((C97905 + C97904) * C154480 + (C98634 + C98635) * C154468 +
              (C102468 + C102469) * C154442) *
                 C154021) *
                C154146 -
            ((C101502 * C154442 + C98109 * C154468 +
              (C97343 + C97342) * C154480) *
                 C154021 +
             (C101476 * C154442 + C101477 * C154468 +
              (C97341 + C97340) * C154480) *
                 C74048) *
                C2114) *
               C154392 +
           (((C101466 * C154480 + C101467 * C154468 + C101541 * C154442) *
                 C74048 +
             (C102164 * C154480 + C102165 * C154468 +
              (C101537 + C101538) * C154442) *
                 C154021) *
                C2114 -
            (((C97277 * C4908 - C97278 * C4905 - C97277 * C4909 +
               C154268 * C4914 + C97275 * C4262 - C97276 * C4256 -
               C97275 * C4263 + C97273 * C4268) *
                  C154442 +
              (C102469 + C102468) * C154468 + (C98635 + C98634) * C154480) *
                 C154021 +
             ((C102901 + C102900) * C154442 + C102856 * C154468 +
              C102857 * C154480) *
                 C74048) *
                C154146) *
               C154118) *
              C154053)) /
            (p * q * std::sqrt(p + q));
    d2ee[296] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
             C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
                C154164 * C154486 +
            (C97340 + C97341) * C154164 * C154479 + C97354 * C154460 +
            C97355 * C154407) *
               C154465 -
           (C98330 * C154407 + C98331 * C154460 +
            (C97906 + C97907) * C154164 * C154479 +
            (C97277 * C602 - C97278 * C585 - C97277 * C603 + C154268 * C621 +
             C97275 * C600 - C97276 * C584 - C97275 * C601 + C97273 * C620) *
                C154164 * C154486) *
               C154466 +
           ((C97275 * C602 - C97276 * C585 - C97275 * C603 + C97273 * C621 +
             C97277 * C2337 - C97278 * C2328 - C97277 * C2338 +
             C154268 * C2343) *
                C154164 * C154486 +
            (C97908 + C97909) * C154164 * C154479 +
            (C97910 + C97911) * C154164 * C154460 +
            (C97912 + C97913) * C154164 * C154407) *
               C2630) *
              C154392 +
          (((C97275 * C1135 - C97276 * C1129 - C97275 * C1136 + C97273 * C1147 +
             C97277 * C1554 - C97278 * C1545 - C97277 * C1555 +
             C154268 * C1560) *
                C154164 * C154486 +
            (C98632 + C98633) * C154164 * C154479 +
            (C98634 + C98635) * C154164 * C154460 +
            (C98636 + C98637) * C154164 * C154407) *
               C154466 -
           (C98118 * C154407 + C98119 * C154460 +
            (C97628 + C97629) * C154164 * C154479 +
            (C97277 * C1135 - C97278 * C1129 - C97277 * C1136 +
             C154268 * C1147 + C97275 * C363 - C97276 * C347 - C97275 * C364 +
             C97273 * C383) *
                C154164 * C154486) *
               C154465 -
           ((C97277 * C8648 - C97278 * C8647 - C97277 * C8649 +
             C154268 * C8650 + C97275 * C1548 - C97276 * C1542 -
             C97275 * C1549 + C97273 * C1557) *
                C154164 * C154407 +
            (C97277 * C6266 - C97278 * C6259 - C97277 * C6267 +
             C154268 * C6277 + C97275 * C1550 - C97276 * C1543 -
             C97275 * C1551 + C97273 * C1558) *
                C154164 * C154460 +
            (C97277 * C6270 - C97278 * C6261 - C97277 * C6271 +
             C154268 * C6279 + C97275 * C1552 - C97276 * C1544 -
             C97275 * C1553 + C97273 * C1559) *
                C154164 * C154479 +
            (C97277 * C6274 - C97278 * C6263 - C97277 * C6275 +
             C154268 * C6281 + C97275 * C1554 - C97276 * C1545 -
             C97275 * C1555 + C97273 * C1560) *
                C154164 * C154486) *
               C2630) *
              C154118) *
         C154047) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
              C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
                 C154480 +
             (C101527 + C101528) * C154468 + C101539 * C154442) *
                C74048 +
            ((C97340 + C97341) * C154480 + C101466 * C154468 +
             C101467 * C154442) *
                C154021) *
               C154465 -
           ((C102856 * C154442 + C102857 * C154468 +
             (C97906 + C97907) * C154480) *
                C154021 +
            (C104685 * C154442 + (C102898 + C102899) * C154468 +
             (C97277 * C602 - C97278 * C585 - C97277 * C603 + C154268 * C621 +
              C97275 * C600 - C97276 * C584 - C97275 * C601 + C97273 * C620) *
                 C154480) *
                C74048) *
               C154466 +
           (((C97275 * C602 - C97276 * C585 - C97275 * C603 + C97273 * C621 +
              C97277 * C2337 - C97278 * C2328 - C97277 * C2338 +
              C154268 * C2343) *
                 C154480 +
             (C103715 + C103716) * C154468 + (C103717 + C103718) * C154442) *
                C74048 +
            ((C97908 + C97909) * C154480 + (C101870 + C101871) * C154468 +
             (C101872 + C101873) * C154442) *
                C154021) *
               C2630) *
              C154392 +
          ((((C102899 + C102898) * C154480 + (C102897 + C102896) * C154468 +
             (C104698 + C104699) * C154442) *
                C74048 +
            (C102874 * C154480 + C102875 * C154468 +
             (C102900 + C102901) * C154442) *
                C154021) *
               C154466 -
           ((C101540 * C154442 + C101476 * C154468 + C101477 * C154480) *
                C154021 +
            (C103386 * C154442 + (C101530 + C101529) * C154468 +
             (C101528 + C101527) * C154480) *
                C74048) *
               C154465 -
           (((C97277 * C31817 - C97278 * C31816 - C97277 * C31818 +
              C154268 * C31819 + C97275 * C4910 - C97276 * C4906 -
              C97275 * C4911 + C97273 * C4915) *
                 C154442 +
             (C101873 + C101872) * C154468 + (C101871 + C101870) * C154480) *
                C154021 +
            ((C97277 * C30002 - C97278 * C29999 - C97277 * C30003 +
              C154268 * C30005 + C97275 * C4912 - C97276 * C4907 -
              C97275 * C4913 + C97273 * C4916) *
                 C154442 +
             (C103718 + C103717) * C154468 + (C103716 + C103715) * C154480) *
                C74048) *
               C2630) *
              C154118) *
         C154047) /
            (p * q * std::sqrt(p + q));
    d2ee[297] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
             C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
                C154164 * C154486 +
            (C97340 + C97341) * C154164 * C154479 + C97354 * C154460 +
            C97355 * C154407) *
               C2114 -
           (C98330 * C154407 + C98331 * C154460 +
            (C97906 + C97907) * C154164 * C154479 +
            (C97277 * C602 - C97278 * C585 - C97277 * C603 + C154268 * C621 +
             C97275 * C600 - C97276 * C584 - C97275 * C601 + C97273 * C620) *
                C154164 * C154486) *
               C154146) *
              C338 +
          (((C97275 * C1135 - C97276 * C1129 - C97275 * C1136 + C97273 * C1147 +
             C97277 * C1554 - C97278 * C1545 - C97277 * C1555 +
             C154268 * C1560) *
                C154164 * C154486 +
            (C98632 + C98633) * C154164 * C154479 +
            (C98634 + C98635) * C154164 * C154460 +
            (C98636 + C98637) * C154164 * C154407) *
               C154146 -
           (C98118 * C154407 + C98119 * C154460 +
            (C97628 + C97629) * C154164 * C154479 +
            (C97277 * C1135 - C97278 * C1129 - C97277 * C1136 +
             C154268 * C1147 + C97275 * C363 - C97276 * C347 - C97275 * C364 +
             C97273 * C383) *
                C154164 * C154486) *
               C2114) *
              C339 +
          (((C97275 * C365 - C97276 * C348 - C97275 * C366 + C97273 * C384 +
             C97277 * C1985 - C97278 * C1976 - C97277 * C1986 +
             C154268 * C1991) *
                C154164 * C154486 +
            (C97630 + C97631) * C154164 * C154479 +
            (C97632 + C97633) * C154164 * C154460 +
            (C97634 + C97635) * C154164 * C154407) *
               C2114 -
           ((C97277 * C3451 - C97278 * C3444 - C97277 * C3452 +
             C154268 * C3456 + C97275 * C1979 - C97276 * C1973 -
             C97275 * C1980 + C97273 * C1988) *
                C154164 * C154407 +
            (C97277 * C3449 - C97278 * C3443 - C97277 * C3450 +
             C154268 * C3455 + C97275 * C1981 - C97276 * C1974 -
             C97275 * C1982 + C97273 * C1989) *
                C154164 * C154460 +
            (C97277 * C3447 - C97278 * C3442 - C97277 * C3448 +
             C154268 * C3454 + C97275 * C1983 - C97276 * C1975 -
             C97275 * C1984 + C97273 * C1990) *
                C154164 * C154479 +
            (C97277 * C3445 - C97278 * C3441 - C97277 * C3446 +
             C154268 * C3453 + C97275 * C1985 - C97276 * C1976 -
             C97275 * C1986 + C97273 * C1991) *
                C154164 * C154486) *
               C154146) *
              C340) *
         C154047) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
             C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
                C154164 * C154486 +
            (C97340 + C97341) * C154164 * C154479 + C97354 * C154460 +
            C97355 * C154407) *
               C2114 -
           (C98330 * C154407 + C98331 * C154460 +
            (C97906 + C97907) * C154164 * C154479 +
            (C97277 * C602 - C97278 * C585 - C97277 * C603 + C154268 * C621 +
             C97275 * C600 - C97276 * C584 - C97275 * C601 + C97273 * C620) *
                C154164 * C154486) *
               C154146) *
              C154066 * C1309 +
          (((C97907 + C97906) * C154164 * C154486 +
            (C97905 + C97904) * C154164 * C154479 +
            (C97903 + C97902) * C154164 * C154460 +
            (C98336 + C98337) * C154164 * C154407) *
               C154146 -
           (C97356 * C154407 + C97357 * C154460 +
            (C97343 + C97342) * C154164 * C154479 +
            (C97341 + C97340) * C154164 * C154486) *
               C2114) *
              C154066 * C1310 +
          ((C97354 * C154486 + C97355 * C154479 +
            (C97347 + C97346) * C154164 * C154460 +
            (C97348 + C97349) * C154164 * C154407) *
               C2114 -
           ((C97277 * C614 - C97278 * C591 - C97277 * C615 + C154268 * C627 +
             C97275 * C612 - C97276 * C590 - C97275 * C613 + C97273 * C626) *
                C154164 * C154407 +
            (C98337 + C98336) * C154164 * C154460 + C98330 * C154479 +
            C98331 * C154486) *
               C154146) *
              C154066 * C1311)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
            C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
               C154164 * C154486 +
           (C97340 + C97341) * C154164 * C154479 + C97354 * C154460 +
           C97355 * C154407) *
              C2320 -
          (C98330 * C154407 + C98331 * C154460 +
           (C97906 + C97907) * C154164 * C154479 +
           (C97277 * C602 - C97278 * C585 - C97277 * C603 + C154268 * C621 +
            C97275 * C600 - C97276 * C584 - C97275 * C601 + C97273 * C620) *
               C154164 * C154486) *
              C2321 +
          ((C97275 * C602 - C97276 * C585 - C97275 * C603 + C97273 * C621 +
            C97277 * C2337 - C97278 * C2328 - C97277 * C2338 +
            C154268 * C2343) *
               C154164 * C154486 +
           (C97908 + C97909) * C154164 * C154479 +
           (C97910 + C97911) * C154164 * C154460 +
           (C97912 + C97913) * C154164 * C154407) *
              C2322 -
          ((C97277 * C7783 - C97278 * C7776 - C97277 * C7784 + C154268 * C7788 +
            C97275 * C2331 - C97276 * C2325 - C97275 * C2332 + C97273 * C2340) *
               C154164 * C154407 +
           (C97277 * C7781 - C97278 * C7775 - C97277 * C7782 + C154268 * C7787 +
            C97275 * C2333 - C97276 * C2326 - C97275 * C2334 + C97273 * C2341) *
               C154164 * C154460 +
           (C97277 * C7779 - C97278 * C7774 - C97277 * C7780 + C154268 * C7786 +
            C97275 * C2335 - C97276 * C2327 - C97275 * C2336 + C97273 * C2342) *
               C154164 * C154479 +
           (C97277 * C7777 - C97278 * C7773 - C97277 * C7778 + C154268 * C7785 +
            C97275 * C2337 - C97276 * C2328 - C97275 * C2338 + C97273 * C2343) *
               C154164 * C154486) *
              C2323) *
         C154066 * C154047) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
              C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
                 C154480 +
             (C101527 + C101528) * C154468 + C101539 * C154442) *
                C74048 +
            ((C97340 + C97341) * C154480 + C101466 * C154468 +
             C101467 * C154442) *
                C154021) *
               C2114 -
           ((C102856 * C154442 + C102857 * C154468 +
             (C97906 + C97907) * C154480) *
                C154021 +
            (C104685 * C154442 + (C102898 + C102899) * C154468 +
             (C97277 * C602 - C97278 * C585 - C97277 * C603 + C154268 * C621 +
              C97275 * C600 - C97276 * C584 - C97275 * C601 + C97273 * C620) *
                 C154480) *
                C74048) *
               C154146) *
              C154066 * C1309 +
          ((((C97907 + C97906) * C154480 + C102874 * C154468 +
             C102875 * C154442) *
                C74048 +
            ((C97905 + C97904) * C154480 + (C98634 + C98635) * C154468 +
             (C102468 + C102469) * C154442) *
                C154021) *
               C154146 -
           ((C101502 * C154442 + C98109 * C154468 +
             (C97343 + C97342) * C154480) *
                C154021 +
            (C101476 * C154442 + C101477 * C154468 +
             (C97341 + C97340) * C154480) *
                C74048) *
               C2114) *
              C154066 * C1310 +
          (((C97350 * C154480 + C102164 * C154468 + C102165 * C154442) *
                C74048 +
            (C97351 * C154480 + (C97625 + C97624) * C154468 +
             (C97634 + C97635) * C154442) *
                C154021) *
               C2114 -
           (((C97277 * C3451 - C97278 * C3444 - C97277 * C3452 +
              C154268 * C3456 + C97275 * C1979 - C97276 * C1973 -
              C97275 * C1980 + C97273 * C1988) *
                 C154442 +
             (C98637 + C98636) * C154468 + C98320 * C154480) *
                C154021 +
            ((C102469 + C102468) * C154442 + (C98635 + C98634) * C154468 +
             C98321 * C154480) *
                C74048) *
               C154146) *
              C154066 * C1311)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
              C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
                 C154480 +
             (C101527 + C101528) * C154468 + C101539 * C154442) *
                C74048 +
            ((C97340 + C97341) * C154480 + C101466 * C154468 +
             C101467 * C154442) *
                C154021) *
               C2114 -
           ((C102856 * C154442 + C102857 * C154468 +
             (C97906 + C97907) * C154480) *
                C154021 +
            (C104685 * C154442 + (C102898 + C102899) * C154468 +
             (C97277 * C602 - C97278 * C585 - C97277 * C603 + C154268 * C621 +
              C97275 * C600 - C97276 * C584 - C97275 * C601 + C97273 * C620) *
                 C154480) *
                C74048) *
               C154146) *
              C338 +
          ((((C102899 + C102898) * C154480 + (C102897 + C102896) * C154468 +
             (C104698 + C104699) * C154442) *
                C74048 +
            (C102874 * C154480 + C102875 * C154468 +
             (C102900 + C102901) * C154442) *
                C154021) *
               C154146 -
           ((C101540 * C154442 + C101476 * C154468 + C101477 * C154480) *
                C154021 +
            (C103386 * C154442 + (C101530 + C101529) * C154468 +
             (C101528 + C101527) * C154480) *
                C74048) *
               C2114) *
              C339 +
          (((C101539 * C154480 + (C101534 + C101533) * C154468 +
             (C103399 + C103400) * C154442) *
                C74048 +
            (C101467 * C154480 + C101541 * C154468 +
             (C101535 + C101536) * C154442) *
                C154021) *
               C2114 -
           (((C97277 * C28468 - C97278 * C28465 - C97277 * C28469 +
              C154268 * C28471 + C97275 * C5662 - C97276 * C5658 -
              C97275 * C5663 + C97273 * C5667) *
                 C154442 +
             (C102901 + C102900) * C154468 + C102856 * C154480) *
                C154021 +
            ((C97277 * C28466 - C97278 * C28464 - C97277 * C28467 +
              C154268 * C28470 + C97275 * C5664 - C97276 * C5659 -
              C97275 * C5665 + C97273 * C5668) *
                 C154442 +
             (C104699 + C104698) * C154468 + C104685 * C154480) *
                C74048) *
               C154146) *
              C340) *
         C154047) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
             C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
                C154480 +
            (C101527 + C101528) * C154468 + C101539 * C154442) *
               C74048 +
           ((C97340 + C97341) * C154480 + C101466 * C154468 +
            C101467 * C154442) *
               C154021) *
              C2320 -
          ((C102856 * C154442 + C102857 * C154468 +
            (C97906 + C97907) * C154480) *
               C154021 +
           (C104685 * C154442 + (C102898 + C102899) * C154468 +
            (C97277 * C602 - C97278 * C585 - C97277 * C603 + C154268 * C621 +
             C97275 * C600 - C97276 * C584 - C97275 * C601 + C97273 * C620) *
                C154480) *
               C74048) *
              C2321 +
          (((C97275 * C602 - C97276 * C585 - C97275 * C603 + C97273 * C621 +
             C97277 * C2337 - C97278 * C2328 - C97277 * C2338 +
             C154268 * C2343) *
                C154480 +
            (C103715 + C103716) * C154468 + (C103717 + C103718) * C154442) *
               C74048 +
           ((C97908 + C97909) * C154480 + (C101870 + C101871) * C154468 +
            (C101872 + C101873) * C154442) *
               C154021) *
              C2322 -
          (((C97277 * C31086 - C97278 * C31083 - C97277 * C31087 +
             C154268 * C31089 + C97275 * C6268 - C97276 * C6260 -
             C97275 * C6269 + C97273 * C6278) *
                C154442 +
            (C97277 * C9280 - C97278 * C9276 - C97277 * C9281 +
             C154268 * C9285 + C97275 * C6270 - C97276 * C6261 -
             C97275 * C6271 + C97273 * C6279) *
                C154468 +
            (C97277 * C7779 - C97278 * C7774 - C97277 * C7780 +
             C154268 * C7786 + C97275 * C2335 - C97276 * C2327 -
             C97275 * C2336 + C97273 * C2342) *
                C154480) *
               C154021 +
           ((C97277 * C31084 - C97278 * C31082 - C97277 * C31085 +
             C154268 * C31088 + C97275 * C6272 - C97276 * C6262 -
             C97275 * C6273 + C97273 * C6280) *
                C154442 +
            (C97277 * C9282 - C97278 * C9277 - C97277 * C9283 +
             C154268 * C9286 + C97275 * C6274 - C97276 * C6263 -
             C97275 * C6275 + C97273 * C6281) *
                C154468 +
            (C97277 * C7777 - C97278 * C7773 - C97277 * C7778 +
             C154268 * C7785 + C97275 * C2337 - C97276 * C2328 -
             C97275 * C2338 + C97273 * C2343) *
                C154480) *
               C74048) *
              C2323) *
         C154066 * C154047) /
            (p * q * std::sqrt(p + q));
    d2ee[298] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
             C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
                C154164 * C154486 +
            (C97340 + C97341) * C154164 * C154479 + C97354 * C154460 +
            C97355 * C154407) *
               C154465 -
           (C98330 * C154407 + C98331 * C154460 +
            (C97906 + C97907) * C154164 * C154479 +
            (C97277 * C602 - C97278 * C585 - C97277 * C603 + C154268 * C621 +
             C97275 * C600 - C97276 * C584 - C97275 * C601 + C97273 * C620) *
                C154164 * C154486) *
               C154466 +
           ((C97275 * C602 - C97276 * C585 - C97275 * C603 + C97273 * C621 +
             C97277 * C2337 - C97278 * C2328 - C97277 * C2338 +
             C154268 * C2343) *
                C154164 * C154486 +
            (C97908 + C97909) * C154164 * C154479 +
            (C97910 + C97911) * C154164 * C154460 +
            (C97912 + C97913) * C154164 * C154407) *
               C2630) *
              C154066 * C154384 +
          (((C97907 + C97906) * C154164 * C154486 +
            (C97905 + C97904) * C154164 * C154479 +
            (C97903 + C97902) * C154164 * C154460 +
            (C98336 + C98337) * C154164 * C154407) *
               C154466 -
           (C97356 * C154407 + C97357 * C154460 +
            (C97343 + C97342) * C154164 * C154479 +
            (C97341 + C97340) * C154164 * C154486) *
               C154465 -
           ((C97277 * C2329 - C97278 * C2324 - C97277 * C2330 +
             C154268 * C2339 + C97275 * C610 - C97276 * C589 - C97275 * C611 +
             C97273 * C625) *
                C154164 * C154407 +
            (C97913 + C97912) * C154164 * C154460 +
            (C97911 + C97910) * C154164 * C154479 +
            (C97909 + C97908) * C154164 * C154486) *
               C2630) *
              C154066 * C154053)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
              C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
                 C154480 +
             (C101527 + C101528) * C154468 + C101539 * C154442) *
                C74048 +
            ((C97340 + C97341) * C154480 + C101466 * C154468 +
             C101467 * C154442) *
                C154021) *
               C154465 -
           ((C102856 * C154442 + C102857 * C154468 +
             (C97906 + C97907) * C154480) *
                C154021 +
            (C104685 * C154442 + (C102898 + C102899) * C154468 +
             (C97277 * C602 - C97278 * C585 - C97277 * C603 + C154268 * C621 +
              C97275 * C600 - C97276 * C584 - C97275 * C601 + C97273 * C620) *
                 C154480) *
                C74048) *
               C154466 +
           (((C97275 * C602 - C97276 * C585 - C97275 * C603 + C97273 * C621 +
              C97277 * C2337 - C97278 * C2328 - C97277 * C2338 +
              C154268 * C2343) *
                 C154480 +
             (C103715 + C103716) * C154468 + (C103717 + C103718) * C154442) *
                C74048 +
            ((C97908 + C97909) * C154480 + (C101870 + C101871) * C154468 +
             (C101872 + C101873) * C154442) *
                C154021) *
               C2630) *
              C154066 * C154384 +
          ((((C97907 + C97906) * C154480 + C102874 * C154468 +
             C102875 * C154442) *
                C74048 +
            ((C97905 + C97904) * C154480 + (C98634 + C98635) * C154468 +
             (C102468 + C102469) * C154442) *
                C154021) *
               C154466 -
           ((C101502 * C154442 + C98109 * C154468 +
             (C97343 + C97342) * C154480) *
                C154021 +
            (C101476 * C154442 + C101477 * C154468 +
             (C97341 + C97340) * C154480) *
                C74048) *
               C154465 -
           (((C97277 * C6264 - C97278 * C6258 - C97277 * C6265 +
              C154268 * C6276 + C97275 * C3449 - C97276 * C3443 -
              C97275 * C3450 + C97273 * C3455) *
                 C154442 +
             (C97277 * C6266 - C97278 * C6259 - C97277 * C6267 +
              C154268 * C6277 + C97275 * C1550 - C97276 * C1543 -
              C97275 * C1551 + C97273 * C1558) *
                 C154468 +
             (C97911 + C97910) * C154480) *
                C154021 +
            ((C101873 + C101872) * C154442 + (C101871 + C101870) * C154468 +
             (C97909 + C97908) * C154480) *
                C74048) *
               C2630) *
              C154066 * C154053)) /
            (p * q * std::sqrt(p + q));
    d2ee[299] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
             C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
                C154164 * C154486 +
            (C97340 + C97341) * C154164 * C154479 + C97354 * C154460 +
            C97355 * C154407) *
               C2114 -
           (C98330 * C154407 + C98331 * C154460 +
            (C97906 + C97907) * C154164 * C154479 +
            (C97277 * C602 - C97278 * C585 - C97277 * C603 + C154268 * C621 +
             C97275 * C600 - C97276 * C584 - C97275 * C601 + C97273 * C620) *
                C154164 * C154486) *
               C154146) *
              C154066 * C1309 +
          (((C97907 + C97906) * C154164 * C154486 +
            (C97905 + C97904) * C154164 * C154479 +
            (C97903 + C97902) * C154164 * C154460 +
            (C98336 + C98337) * C154164 * C154407) *
               C154146 -
           (C97356 * C154407 + C97357 * C154460 +
            (C97343 + C97342) * C154164 * C154479 +
            (C97341 + C97340) * C154164 * C154486) *
               C2114) *
              C154066 * C1310 +
          ((C97354 * C154486 + C97355 * C154479 +
            (C97347 + C97346) * C154164 * C154460 +
            (C97348 + C97349) * C154164 * C154407) *
               C2114 -
           ((C97277 * C614 - C97278 * C591 - C97277 * C615 + C154268 * C627 +
             C97275 * C612 - C97276 * C590 - C97275 * C613 + C97273 * C626) *
                C154164 * C154407 +
            (C98337 + C98336) * C154164 * C154460 + C98330 * C154479 +
            C98331 * C154486) *
               C154146) *
              C154066 * C1311)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
             C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
                C154164 * C154486 +
            (C97340 + C97341) * C154164 * C154479 + C97354 * C154460 +
            C97355 * C154407) *
               C2114 -
           (C98330 * C154407 + C98331 * C154460 +
            (C97906 + C97907) * C154164 * C154479 +
            (C97277 * C602 - C97278 * C585 - C97277 * C603 + C154268 * C621 +
             C97275 * C600 - C97276 * C584 - C97275 * C601 + C97273 * C620) *
                C154164 * C154486) *
               C154146) *
              C338 +
          (((C97275 * C1135 - C97276 * C1129 - C97275 * C1136 + C97273 * C1147 +
             C97277 * C1554 - C97278 * C1545 - C97277 * C1555 +
             C154268 * C1560) *
                C154164 * C154486 +
            (C98632 + C98633) * C154164 * C154479 +
            (C98634 + C98635) * C154164 * C154460 +
            (C98636 + C98637) * C154164 * C154407) *
               C154146 -
           (C98118 * C154407 + C98119 * C154460 +
            (C97628 + C97629) * C154164 * C154479 +
            (C97277 * C1135 - C97278 * C1129 - C97277 * C1136 +
             C154268 * C1147 + C97275 * C363 - C97276 * C347 - C97275 * C364 +
             C97273 * C383) *
                C154164 * C154486) *
               C2114) *
              C339 +
          (((C97275 * C365 - C97276 * C348 - C97275 * C366 + C97273 * C384 +
             C97277 * C1985 - C97278 * C1976 - C97277 * C1986 +
             C154268 * C1991) *
                C154164 * C154486 +
            (C97630 + C97631) * C154164 * C154479 +
            (C97632 + C97633) * C154164 * C154460 +
            (C97634 + C97635) * C154164 * C154407) *
               C2114 -
           ((C97277 * C3451 - C97278 * C3444 - C97277 * C3452 +
             C154268 * C3456 + C97275 * C1979 - C97276 * C1973 -
             C97275 * C1980 + C97273 * C1988) *
                C154164 * C154407 +
            (C97277 * C3449 - C97278 * C3443 - C97277 * C3450 +
             C154268 * C3455 + C97275 * C1981 - C97276 * C1974 -
             C97275 * C1982 + C97273 * C1989) *
                C154164 * C154460 +
            (C97277 * C3447 - C97278 * C3442 - C97277 * C3448 +
             C154268 * C3454 + C97275 * C1983 - C97276 * C1975 -
             C97275 * C1984 + C97273 * C1990) *
                C154164 * C154479 +
            (C97277 * C3445 - C97278 * C3441 - C97277 * C3446 +
             C154268 * C3453 + C97275 * C1985 - C97276 * C1976 -
             C97275 * C1986 + C97273 * C1991) *
                C154164 * C154486) *
               C154146) *
              C340) *
         C154047) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
              C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
                 C154480 +
             (C101527 + C101528) * C154468 + C101539 * C154442) *
                C74048 +
            ((C97340 + C97341) * C154480 + C101466 * C154468 +
             C101467 * C154442) *
                C154021) *
               C2114 -
           ((C102856 * C154442 + C102857 * C154468 +
             (C97906 + C97907) * C154480) *
                C154021 +
            (C104685 * C154442 + (C102898 + C102899) * C154468 +
             (C97277 * C602 - C97278 * C585 - C97277 * C603 + C154268 * C621 +
              C97275 * C600 - C97276 * C584 - C97275 * C601 + C97273 * C620) *
                 C154480) *
                C74048) *
               C154146) *
              C154066 * C1309 +
          ((((C97907 + C97906) * C154480 + C102874 * C154468 +
             C102875 * C154442) *
                C74048 +
            ((C97905 + C97904) * C154480 + (C98634 + C98635) * C154468 +
             (C102468 + C102469) * C154442) *
                C154021) *
               C154146 -
           ((C101502 * C154442 + C98109 * C154468 +
             (C97343 + C97342) * C154480) *
                C154021 +
            (C101476 * C154442 + C101477 * C154468 +
             (C97341 + C97340) * C154480) *
                C74048) *
               C2114) *
              C154066 * C1310 +
          (((C97350 * C154480 + C102164 * C154468 + C102165 * C154442) *
                C74048 +
            (C97351 * C154480 + (C97625 + C97624) * C154468 +
             (C97634 + C97635) * C154442) *
                C154021) *
               C2114 -
           (((C97277 * C3451 - C97278 * C3444 - C97277 * C3452 +
              C154268 * C3456 + C97275 * C1979 - C97276 * C1973 -
              C97275 * C1980 + C97273 * C1988) *
                 C154442 +
             (C98637 + C98636) * C154468 + C98320 * C154480) *
                C154021 +
            ((C102469 + C102468) * C154442 + (C98635 + C98634) * C154468 +
             C98321 * C154480) *
                C74048) *
               C154146) *
              C154066 * C1311)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C97275 * C144 - C97276 * C136 - C97275 * C145 + C97273 * C160 +
              C97277 * C600 - C97278 * C584 - C97277 * C601 + C154268 * C620) *
                 C154480 +
             (C101527 + C101528) * C154468 + C101539 * C154442) *
                C74048 +
            ((C97340 + C97341) * C154480 + C101466 * C154468 +
             C101467 * C154442) *
                C154021) *
               C2114 -
           ((C102856 * C154442 + C102857 * C154468 +
             (C97906 + C97907) * C154480) *
                C154021 +
            (C104685 * C154442 + (C102898 + C102899) * C154468 +
             (C97277 * C602 - C97278 * C585 - C97277 * C603 + C154268 * C621 +
              C97275 * C600 - C97276 * C584 - C97275 * C601 + C97273 * C620) *
                 C154480) *
                C74048) *
               C154146) *
              C338 +
          ((((C102899 + C102898) * C154480 + (C102897 + C102896) * C154468 +
             (C104698 + C104699) * C154442) *
                C74048 +
            (C102874 * C154480 + C102875 * C154468 +
             (C102900 + C102901) * C154442) *
                C154021) *
               C154146 -
           ((C101540 * C154442 + C101476 * C154468 + C101477 * C154480) *
                C154021 +
            (C103386 * C154442 + (C101530 + C101529) * C154468 +
             (C101528 + C101527) * C154480) *
                C74048) *
               C2114) *
              C339 +
          (((C101539 * C154480 + (C101534 + C101533) * C154468 +
             (C103399 + C103400) * C154442) *
                C74048 +
            (C101467 * C154480 + C101541 * C154468 +
             (C101535 + C101536) * C154442) *
                C154021) *
               C2114 -
           (((C97277 * C28468 - C97278 * C28465 - C97277 * C28469 +
              C154268 * C28471 + C97275 * C5662 - C97276 * C5658 -
              C97275 * C5663 + C97273 * C5667) *
                 C154442 +
             (C102901 + C102900) * C154468 + C102856 * C154480) *
                C154021 +
            ((C97277 * C28466 - C97278 * C28464 - C97277 * C28467 +
              C154268 * C28470 + C97275 * C5664 - C97276 * C5659 -
              C97275 * C5665 + C97273 * C5668) *
                 C154442 +
             (C104699 + C104698) * C154468 + C104685 * C154480) *
                C74048) *
               C154146) *
              C340) *
         C154047) /
            (p * q * std::sqrt(p + q));
    d2ee[300] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C154406 +
             C3210 * C154226) *
                C11465 +
            (C11470 + C11471) * C11466 + C11480 * C11467 + C11481 * C154407) *
               C154082 * C154392 -
           (C12097 * C154407 + C12098 * C11467 + (C11682 + C11683) * C11466 +
            (C3211 * C154226 + C3210 * C154406) * C11465) *
               C154082 * C154118) *
              C154461 +
          (((C11683 + C11682) * C11465 + (C11681 + C11680) * C11466 +
            (C11679 + C11678) * C11467 + (C12099 + C12100) * C154407) *
               C154082 * C154118 -
           (C11482 * C154407 + C11483 * C11467 + (C11473 + C11472) * C11466 +
            (C11471 + C11470) * C11465) *
               C154082 * C154392) *
              C154462 +
          ((C11480 * C11465 + C11481 * C11466 + (C11477 + C11476) * C11467 +
            (C11478 + C11479) * C154407) *
               C154082 * C154392 -
           (((C134 * C377 - C135 * C354 - C134 * C378 + C154181 * C390) *
                 C154226 +
             C830 * C154406) *
                C154407 +
            (C12100 + C12099) * C11467 + C12097 * C11466 + C12098 * C11465) *
               C154082 * C154118) *
              C818)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C34729 +
             C3210 * C34730 + C3211 * C34731 + C3214 * C154415) *
                C154373 +
            (C34736 + C34737 + C34738 + C34739) * C154021) *
               C154082 * C154392 -
           ((C34942 + C34943 + C34944 + C34945) * C154021 +
            (C4687 * C154415 + C3214 * C34731 + C3211 * C34730 +
             C3210 * C34729) *
                C154373) *
               C154082 * C154118) *
              C154461 +
          (((C34945 + C34944 + C34943 + C34942) * C154373 +
            (C35353 + C35354 + C35355 + C35356) * C154021) *
               C154082 * C154118 -
           ((C34740 + C34741 + C34742 + C34743) * C154021 +
            (C34739 + C34738 + C34737 + C34736) * C154373) *
               C154082 * C154392) *
              C154462 +
          (((C34743 + C34742 + C34741 + C34740) * C154373 +
            (C34744 + C34745 + C34746 + C34747) * C154021) *
               C154082 * C154392 -
           (((C134 * C3149 - C135 * C3142 - C134 * C3150 + C154181 * C3154) *
                 C154415 +
             C3217 * C34731 + C446 * C34730 + C441 * C34729) *
                C154021 +
            (C35356 + C35355 + C35354 + C35353) * C154373) *
               C154082 * C154118) *
              C818)) /
            (p * q * std::sqrt(p + q));
    d2ee[301] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                  C154406 +
              C3210 * C154226) *
                 C11465 +
             (C11470 + C11471) * C11466 + C11480 * C11467 + C11481 * C154407) *
                C154393 -
            (C12295 * C154407 + C12296 * C11467 + (C11888 + C11889) * C11466 +
             (C4300 * C154226 +
              (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                  C154406) *
                 C11465) *
                C154146) *
               C154392 +
           (((C4300 * C154406 + C4299 * C154226) * C11465 +
             (C12557 + C12558) * C11466 + (C12559 + C12560) * C11467 +
             (C12561 + C12562) * C154407) *
                C154146 -
            (C12097 * C154407 + C12098 * C11467 + (C11682 + C11683) * C11466 +
             (C3211 * C154226 + C3210 * C154406) * C11465) *
                C154393) *
               C154118) *
              C341 +
          ((((C11889 + C11888) * C11465 + (C11887 + C11886) * C11466 +
             (C11885 + C11884) * C11467 + (C12297 + C12298) * C154407) *
                C154146 -
            (C11482 * C154407 + C11483 * C11467 + (C11473 + C11472) * C11466 +
             (C11471 + C11470) * C11465) *
                C154393) *
               C154392 +
           (((C11683 + C11682) * C11465 + (C11681 + C11680) * C11466 +
             (C11679 + C11678) * C11467 + (C12099 + C12100) * C154407) *
                C154393 -
            (((C134 * C1977 - C135 * C1972 - C134 * C1978 + C154181 * C1987) *
                  C154226 +
              C1181 * C154406) *
                 C154407 +
             (C12562 + C12561) * C11467 + (C12560 + C12559) * C11466 +
             (C12558 + C12557) * C11465) *
                C154146) *
               C154118) *
              C154053)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                  C34729 +
              C3210 * C34730 + C3211 * C34731 + C3214 * C154415) *
                 C154373 +
             (C34736 + C34737 + C34738 + C34739) * C154021) *
                C154393 -
            ((C35144 + C35145 + C35146 + C35147) * C154021 +
             (C5676 * C154415 + C4299 * C34731 + C4300 * C34730 +
              (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                  C34729) *
                 C154373) *
                C154146) *
               C154392 +
           (((C4300 * C34729 + C4299 * C34730 + C5676 * C34731 +
              C28899 * C154415) *
                 C154373 +
             (C35813 + C35814 + C35815 + C35816) * C154021) *
                C154146 -
            ((C34942 + C34943 + C34944 + C34945) * C154021 +
             (C4687 * C154415 + C3214 * C34731 + C3211 * C34730 +
              C3210 * C34729) *
                 C154373) *
                C154393) *
               C154118) *
              C341 +
          ((((C35147 + C35146 + C35145 + C35144) * C154373 +
             (C35551 + C35552 + C35553 + C35554) * C154021) *
                C154146 -
            ((C34740 + C34741 + C34742 + C34743) * C154021 +
             (C34739 + C34738 + C34737 + C34736) * C154373) *
                C154393) *
               C154392 +
           (((C34945 + C34944 + C34943 + C34942) * C154373 +
             (C35353 + C35354 + C35355 + C35356) * C154021) *
                C154393 -
            (((C134 * C5660 - C135 * C5657 - C134 * C5661 + C154181 * C5666) *
                  C154415 +
              C4302 * C34731 + C3500 * C34730 + C1179 * C34729) *
                 C154021 +
             (C35816 + C35815 + C35814 + C35813) * C154373) *
                C154146) *
               C154118) *
              C154053)) /
            (p * q * std::sqrt(p + q));
    d2ee[302] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C154406 +
             C3210 * C154226) *
                C11465 +
            (C11470 + C11471) * C11466 + C11480 * C11467 + C11481 * C154407) *
               C154082 * C338 -
           ((C11678 + C11679) * C154407 + (C11680 + C11681) * C11467 +
            (C11682 + C11683) * C11466 +
            (C3211 * C154226 + C3210 * C154406) * C11465) *
               C154082 * C339 +
           ((C3211 * C154406 + C3214 * C154226) * C11465 +
            (C11684 + C11685) * C11466 + (C11686 + C11687) * C11467 +
            (C11688 + C11689) * C154407) *
               C154082 * C340) *
              C341 +
          (((C11683 + C11682) * C11465 + (C11681 + C11680) * C11466 +
            (C11679 + C11678) * C11467 +
            (C440 * C154406 + C447 * C154226) * C154407) *
               C154082 * C339 -
           (C11482 * C154407 + C11483 * C11467 + (C11473 + C11472) * C11466 +
            (C11471 + C11470) * C11465) *
               C154082 * C338 -
           (((C134 * C1404 - C135 * C1399 - C134 * C1405 + C154181 * C1414) *
                 C154226 +
             C447 * C154406) *
                C154407 +
            (C11689 + C11688) * C11467 + (C11687 + C11686) * C11466 +
            (C11685 + C11684) * C11465) *
               C154082 * C340) *
              C154053)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                C154406 +
            C3210 * C154226) *
               C11465 +
           (C11470 + C11471) * C11466 + C11480 * C11467 + C11481 * C154407) *
              C154082 * C154066 * C130 -
          (C11482 * C154407 + C11483 * C11467 + (C11473 + C11472) * C11466 +
           (C11471 + C11470) * C11465) *
              C154082 * C154066 * C131 +
          (C11480 * C11465 + C11481 * C11466 + (C11477 + C11476) * C11467 +
           (C11478 + C11479) * C154407) *
              C154082 * C154066 * C132 -
          (((C134 * C820 - C135 * C819 - C134 * C821 + C154181 * C822) *
                C154226 +
            C210 * C154406) *
               C154407 +
           (C11479 + C11478) * C11467 + C11482 * C11466 + C11483 * C11465) *
              C154082 * C154066 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C154406 +
             C3210 * C154226) *
                C11465 +
            (C11470 + C11471) * C11466 + C11480 * C11467 + C11481 * C154407) *
               C577 -
           ((C11884 + C11885) * C154407 + (C11886 + C11887) * C11467 +
            (C11888 + C11889) * C11466 +
            (C4300 * C154226 +
             (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                 C154406) *
                C11465) *
               C578 +
           (((C134 * C602 - C135 * C585 - C134 * C603 + C154181 * C621) *
                 C154406 +
             C4930 * C154226) *
                C11465 +
            (C11890 + C11891) * C11466 + (C11892 + C11893) * C11467 +
            (C11894 + C11902) * C154407) *
               C579) *
              C154066 * C341 +
          (((C11889 + C11888) * C11465 + (C11887 + C11886) * C11466 +
            (C11885 + C11884) * C11467 +
            (C677 * C154406 + C1181 * C154226) * C154407) *
               C578 -
           (C11482 * C154407 + C11483 * C11467 + (C11473 + C11472) * C11466 +
            (C11471 + C11470) * C11465) *
               C577 -
           (((C134 * C1546 - C135 * C1541 - C134 * C1547 + C154181 * C1556) *
                 C154226 +
             C684 * C154406) *
                C154407 +
            (C11902 + C11894) * C11467 + (C11893 + C11892) * C11466 +
            (C11891 + C11890) * C11465) *
               C579) *
              C154066 * C154053)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                C34729 +
            C3210 * C34730 + C3211 * C34731 + C3214 * C154415) *
               C154373 +
           (C34736 + C34737 + C34738 + C34739) * C154021) *
              C154082 * C154066 * C130 -
          ((C34740 + C34741 + C34742 + C34743) * C154021 +
           (C34739 + C34738 + C34737 + C34736) * C154373) *
              C154082 * C154066 * C131 +
          ((C34743 + C34742 + C34741 + C34740) * C154373 +
           (C34744 + C34745 + C34746 + C34747) * C154021) *
              C154082 * C154066 * C132 -
          (((C134 * C1404 - C135 * C1399 - C134 * C1405 + C154181 * C1414) *
                C154415 +
            C447 * C34731 + C440 * C34730 + C208 * C34729) *
               C154021 +
           (C34747 + C34746 + C34745 + C34744) * C154373) *
              C154082 * C154066 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C34729 +
             C3210 * C34730 + C3211 * C34731 + C3214 * C154415) *
                C154373 +
            (C34736 + C34737 + C34738 + C34739) * C154021) *
               C154082 * C338 -
           ((C34942 + C34943 + C34944 + C34945) * C154021 +
            (C4687 * C154415 + C3214 * C34731 + C3211 * C34730 +
             C3210 * C34729) *
                C154373) *
               C154082 * C339 +
           ((C3211 * C34729 + C3214 * C34730 + C4687 * C34731 +
             C28341 * C154415) *
                C154373 +
            (C34946 + C34947 + C34948 + C34949) * C154021) *
               C154082 * C340) *
              C341 +
          (((C34945 + C34944 + C34943 + C34942) * C154373 +
            (C442 * C34729 + C445 * C34730 + C3212 * C34731 + C3216 * C154415) *
                C154021) *
               C154082 * C339 -
           ((C34740 + C34741 + C34742 + C34743) * C154021 +
            (C34739 + C34738 + C34737 + C34736) * C154373) *
               C154082 * C338 -
           (((C134 * C4671 - C135 * C4668 - C134 * C4672 + C154181 * C4677) *
                 C154415 +
             C3216 * C34731 + C3212 * C34730 + C445 * C34729) *
                C154021 +
            (C34949 + C34948 + C34947 + C34946) * C154373) *
               C154082 * C340) *
              C154053)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C34729 +
             C3210 * C34730 + C3211 * C34731 + C3214 * C154415) *
                C154373 +
            (C34736 + C34737 + C34738 + C34739) * C154021) *
               C577 -
           ((C35144 + C35145 + C35146 + C35147) * C154021 +
            (C5676 * C154415 + C4299 * C34731 + C4300 * C34730 +
             (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                 C34729) *
                C154373) *
               C578 +
           (((C134 * C602 - C135 * C585 - C134 * C603 + C154181 * C621) *
                 C34729 +
             C4930 * C34730 + C4931 * C34731 + C29254 * C154415) *
                C154373 +
            (C35148 + C35149 + C35150 + C35158) * C154021) *
               C579) *
              C154066 * C341 +
          (((C35147 + C35146 + C35145 + C35144) * C154373 +
            (C679 * C34729 + C1179 * C34730 + C3500 * C34731 +
             C4302 * C154415) *
                C154021) *
               C578 -
           ((C34740 + C34741 + C34742 + C34743) * C154021 +
            (C34739 + C34738 + C34737 + C34736) * C154373) *
               C577 -
           (((C134 * C4908 - C135 * C4905 - C134 * C4909 + C154181 * C4914) *
                 C154415 +
             C3505 * C34731 + C3504 * C34730 + C682 * C34729) *
                C154021 +
            (C35158 + C35150 + C35149 + C35148) * C154373) *
               C579) *
              C154066 * C154053)) /
            (p * q * std::sqrt(p + q));
    d2ee[303] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C154406 +
             C3210 * C154226) *
                C11465 +
            (C11470 + C11471) * C11466 + C11480 * C11467 + C11481 * C154407) *
               C154393 -
           (C12295 * C154407 + C12296 * C11467 + (C11888 + C11889) * C11466 +
            (C4300 * C154226 +
             (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                 C154406) *
                C11465) *
               C154146) *
              C154066 * C154461 +
          (((C11889 + C11888) * C11465 + (C11887 + C11886) * C11466 +
            (C11885 + C11884) * C11467 + (C12297 + C12298) * C154407) *
               C154146 -
           (C11482 * C154407 + C11483 * C11467 + (C11473 + C11472) * C11466 +
            (C11471 + C11470) * C11465) *
               C154393) *
              C154066 * C154462 +
          ((C11480 * C11465 + C11481 * C11466 + (C11477 + C11476) * C11467 +
            (C11478 + C11479) * C154407) *
               C154393 -
           (((C134 * C1145 - C135 * C1134 - C134 * C1146 + C154181 * C1152) *
                 C154226 +
             C966 * C154406) *
                C154407 +
            (C12298 + C12297) * C11467 + C12295 * C11466 + C12296 * C11465) *
               C154146) *
              C154066 * C818)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C34729 +
             C3210 * C34730 + C3211 * C34731 + C3214 * C154415) *
                C154373 +
            (C34736 + C34737 + C34738 + C34739) * C154021) *
               C154393 -
           ((C35144 + C35145 + C35146 + C35147) * C154021 +
            (C5676 * C154415 + C4299 * C34731 + C4300 * C34730 +
             (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                 C34729) *
                C154373) *
               C154146) *
              C154066 * C154461 +
          (((C35147 + C35146 + C35145 + C35144) * C154373 +
            (C35551 + C35552 + C35553 + C35554) * C154021) *
               C154146 -
           ((C34740 + C34741 + C34742 + C34743) * C154021 +
            (C34739 + C34738 + C34737 + C34736) * C154373) *
               C154393) *
              C154066 * C154462 +
          (((C34743 + C34742 + C34741 + C34740) * C154373 +
            (C34744 + C34745 + C34746 + C34747) * C154021) *
               C154393 -
           (((C134 * C4264 - C135 * C4257 - C134 * C4265 + C154181 * C4269) *
                 C154415 +
             C3963 * C34731 + C1180 * C34730 + C678 * C34729) *
                C154021 +
            (C35554 + C35553 + C35552 + C35551) * C154373) *
               C154146) *
              C154066 * C818)) /
            (p * q * std::sqrt(p + q));
    d2ee[304] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                C154406 +
            C3210 * C154226) *
               C11465 +
           (C11470 + C11471) * C11466 + C11480 * C11467 + C11481 * C154407) *
              C154082 * C154066 * C130 -
          (C11482 * C154407 + C11483 * C11467 + (C11473 + C11472) * C11466 +
           (C11471 + C11470) * C11465) *
              C154082 * C154066 * C131 +
          (C11480 * C11465 + C11481 * C11466 + (C11477 + C11476) * C11467 +
           (C11478 + C11479) * C154407) *
              C154082 * C154066 * C132 -
          (((C134 * C820 - C135 * C819 - C134 * C821 + C154181 * C822) *
                C154226 +
            C210 * C154406) *
               C154407 +
           (C11479 + C11478) * C11467 + C11482 * C11466 + C11483 * C11465) *
              C154082 * C154066 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C154406 +
             C3210 * C154226) *
                C11465 +
            (C11470 + C11471) * C11466 + C11480 * C11467 + C11481 * C154407) *
               C154082 * C338 -
           ((C11678 + C11679) * C154407 + (C11680 + C11681) * C11467 +
            (C11682 + C11683) * C11466 +
            (C3211 * C154226 + C3210 * C154406) * C11465) *
               C154082 * C339 +
           ((C3211 * C154406 + C3214 * C154226) * C11465 +
            (C11684 + C11685) * C11466 + (C11686 + C11687) * C11467 +
            (C11688 + C11689) * C154407) *
               C154082 * C340) *
              C341 +
          (((C11683 + C11682) * C11465 + (C11681 + C11680) * C11466 +
            (C11679 + C11678) * C11467 +
            (C440 * C154406 + C447 * C154226) * C154407) *
               C154082 * C339 -
           (C11482 * C154407 + C11483 * C11467 + (C11473 + C11472) * C11466 +
            (C11471 + C11470) * C11465) *
               C154082 * C338 -
           (((C134 * C1404 - C135 * C1399 - C134 * C1405 + C154181 * C1414) *
                 C154226 +
             C447 * C154406) *
                C154407 +
            (C11689 + C11688) * C11467 + (C11687 + C11686) * C11466 +
            (C11685 + C11684) * C11465) *
               C154082 * C340) *
              C154053)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                C34729 +
            C3210 * C34730 + C3211 * C34731 + C3214 * C154415) *
               C154373 +
           (C34736 + C34737 + C34738 + C34739) * C154021) *
              C154082 * C154066 * C130 -
          ((C34740 + C34741 + C34742 + C34743) * C154021 +
           (C34739 + C34738 + C34737 + C34736) * C154373) *
              C154082 * C154066 * C131 +
          ((C34743 + C34742 + C34741 + C34740) * C154373 +
           (C34744 + C34745 + C34746 + C34747) * C154021) *
              C154082 * C154066 * C132 -
          (((C134 * C1404 - C135 * C1399 - C134 * C1405 + C154181 * C1414) *
                C154415 +
            C447 * C34731 + C440 * C34730 + C208 * C34729) *
               C154021 +
           (C34747 + C34746 + C34745 + C34744) * C154373) *
              C154082 * C154066 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C34729 +
             C3210 * C34730 + C3211 * C34731 + C3214 * C154415) *
                C154373 +
            (C34736 + C34737 + C34738 + C34739) * C154021) *
               C154082 * C338 -
           ((C34942 + C34943 + C34944 + C34945) * C154021 +
            (C4687 * C154415 + C3214 * C34731 + C3211 * C34730 +
             C3210 * C34729) *
                C154373) *
               C154082 * C339 +
           ((C3211 * C34729 + C3214 * C34730 + C4687 * C34731 +
             C28341 * C154415) *
                C154373 +
            (C34946 + C34947 + C34948 + C34949) * C154021) *
               C154082 * C340) *
              C341 +
          (((C34945 + C34944 + C34943 + C34942) * C154373 +
            (C442 * C34729 + C445 * C34730 + C3212 * C34731 + C3216 * C154415) *
                C154021) *
               C154082 * C339 -
           ((C34740 + C34741 + C34742 + C34743) * C154021 +
            (C34739 + C34738 + C34737 + C34736) * C154373) *
               C154082 * C338 -
           (((C134 * C4671 - C135 * C4668 - C134 * C4672 + C154181 * C4677) *
                 C154415 +
             C3216 * C34731 + C3212 * C34730 + C445 * C34729) *
                C154021 +
            (C34949 + C34948 + C34947 + C34946) * C154373) *
               C154082 * C340) *
              C154053)) /
            (p * q * std::sqrt(p + q));
    d2ee[305] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C154406 +
             C3210 * C154226) *
                C11465 +
            (C11470 + C11471) * C11466 + C11480 * C11467 + C11481 * C154407) *
               C154082 * C154463 -
           (C12097 * C154407 + C12098 * C11467 + (C11682 + C11683) * C11466 +
            (C3211 * C154226 + C3210 * C154406) * C11465) *
               C154082 * C154464 +
           ((C3211 * C154406 + C3214 * C154226) * C11465 +
            (C11684 + C11685) * C11466 + (C11686 + C11687) * C11467 +
            (C11688 + C11689) * C154407) *
               C154082 * C1685) *
              C154384 +
          (((C11683 + C11682) * C11465 + (C11681 + C11680) * C11466 +
            (C11679 + C11678) * C11467 + (C12099 + C12100) * C154407) *
               C154082 * C154464 -
           (C11482 * C154407 + C11483 * C11467 + (C11473 + C11472) * C11466 +
            (C11471 + C11470) * C11465) *
               C154082 * C154463 -
           (((C134 * C1404 - C135 * C1399 - C134 * C1405 + C154181 * C1414) *
                 C154226 +
             C447 * C154406) *
                C154407 +
            (C11689 + C11688) * C11467 + (C11687 + C11686) * C11466 +
            (C11685 + C11684) * C11465) *
               C154082 * C1685) *
              C154053)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C34729 +
             C3210 * C34730 + C3211 * C34731 + C3214 * C154415) *
                C154373 +
            (C34736 + C34737 + C34738 + C34739) * C154021) *
               C154082 * C154463 -
           ((C34942 + C34943 + C34944 + C34945) * C154021 +
            (C4687 * C154415 + C3214 * C34731 + C3211 * C34730 +
             C3210 * C34729) *
                C154373) *
               C154082 * C154464 +
           ((C3211 * C34729 + C3214 * C34730 + C4687 * C34731 +
             C28341 * C154415) *
                C154373 +
            (C34946 + C34947 + C34948 + C34949) * C154021) *
               C154082 * C1685) *
              C154384 +
          (((C34945 + C34944 + C34943 + C34942) * C154373 +
            (C35353 + C35354 + C35355 + C35356) * C154021) *
               C154082 * C154464 -
           ((C34740 + C34741 + C34742 + C34743) * C154021 +
            (C34739 + C34738 + C34737 + C34736) * C154373) *
               C154082 * C154463 -
           (((C134 * C4671 - C135 * C4668 - C134 * C4672 + C154181 * C4677) *
                 C154415 +
             C3216 * C34731 + C3212 * C34730 + C445 * C34729) *
                C154021 +
            (C34949 + C34948 + C34947 + C34946) * C154373) *
               C154082 * C1685) *
              C154053)) /
            (p * q * std::sqrt(p + q));
    d2ee[306] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C154406 +
             C3210 * C154226) *
                C11465 +
            (C11470 + C11471) * C11466 + C11480 * C11467 + C11481 * C154407) *
               C154393 -
           (C12295 * C154407 + C12296 * C11467 + (C11888 + C11889) * C11466 +
            (C4300 * C154226 +
             (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                 C154406) *
                C11465) *
               C154146) *
              C154463 +
          (((C4300 * C154406 + C4299 * C154226) * C11465 +
            (C12557 + C12558) * C11466 + (C12559 + C12560) * C11467 +
            (C12561 + C12562) * C154407) *
               C154146 -
           (C12097 * C154407 + C12098 * C11467 + (C11682 + C11683) * C11466 +
            (C3211 * C154226 + C3210 * C154406) * C11465) *
               C154393) *
              C154464 +
          (((C3211 * C154406 + C3214 * C154226) * C11465 +
            (C11684 + C11685) * C11466 + (C11686 + C11687) * C11467 +
            (C11688 + C11689) * C154407) *
               C154393 -
           (((C134 * C4264 - C135 * C4257 - C134 * C4265 + C154181 * C4269) *
                 C154226 +
             C3963 * C154406) *
                C154407 +
            (C4302 * C154226 + C3500 * C154406) * C11467 +
            (C4301 * C154226 + C3501 * C154406) * C11466 +
            (C5676 * C154226 + C4299 * C154406) * C11465) *
               C154146) *
              C1685) *
         C154047) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C34729 +
             C3210 * C34730 + C3211 * C34731 + C3214 * C154415) *
                C154373 +
            (C34736 + C34737 + C34738 + C34739) * C154021) *
               C154393 -
           ((C35144 + C35145 + C35146 + C35147) * C154021 +
            (C5676 * C154415 + C4299 * C34731 + C4300 * C34730 +
             (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                 C34729) *
                C154373) *
               C154146) *
              C154463 +
          (((C4300 * C34729 + C4299 * C34730 + C5676 * C34731 +
             C28899 * C154415) *
                C154373 +
            (C35813 + C35814 + C35815 + C35816) * C154021) *
               C154146 -
           ((C34942 + C34943 + C34944 + C34945) * C154021 +
            (C4687 * C154415 + C3214 * C34731 + C3211 * C34730 +
             C3210 * C34729) *
                C154373) *
               C154393) *
              C154464 +
          (((C3211 * C34729 + C3214 * C34730 + C4687 * C34731 +
             C28341 * C154415) *
                C154373 +
            (C34946 + C34947 + C34948 + C34949) * C154021) *
               C154393 -
           (((C134 * C28882 - C135 * C28879 - C134 * C28883 +
              C154181 * C28885) *
                 C154415 +
             C28900 * C34731 + C4301 * C34730 + C3501 * C34729) *
                C154021 +
            (C29672 * C154415 + C28899 * C34731 + C5676 * C34730 +
             C4299 * C34729) *
                C154373) *
               C154146) *
              C1685) *
         C154047) /
            (p * q * std::sqrt(p + q));
    d2ee[307] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                C154406 +
            C3210 * C154226) *
               C11465 +
           (C11470 + C11471) * C11466 + C11480 * C11467 + C11481 * C154407) *
              C154082 * C1394 -
          (C12097 * C154407 + C12098 * C11467 + (C11682 + C11683) * C11466 +
           (C3211 * C154226 + C3210 * C154406) * C11465) *
              C154082 * C1395 +
          ((C3211 * C154406 + C3214 * C154226) * C11465 +
           (C11684 + C11685) * C11466 + (C11686 + C11687) * C11467 +
           (C11688 + C11689) * C154407) *
              C154082 * C1396 -
          (((C134 * C3149 - C135 * C3142 - C134 * C3150 + C154181 * C3154) *
                C154226 +
            C3217 * C154406) *
               C154407 +
           (C3216 * C154226 + C3212 * C154406) * C11467 +
           (C3215 * C154226 + C3213 * C154406) * C11466 +
           (C4687 * C154226 + C3214 * C154406) * C11465) *
              C154082 * C1397) *
         C154047) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C154406 +
             C3210 * C154226) *
                C11465 +
            (C11470 + C11471) * C11466 + C11480 * C11467 + C11481 * C154407) *
               C154082 * C1307 -
           (C12097 * C154407 + C12098 * C11467 + (C11682 + C11683) * C11466 +
            (C3211 * C154226 + C3210 * C154406) * C11465) *
               C154082 * C154118) *
              C1309 +
          (((C11683 + C11682) * C11465 + (C11681 + C11680) * C11466 +
            (C11679 + C11678) * C11467 + (C12099 + C12100) * C154407) *
               C154082 * C154118 -
           (C11482 * C154407 + C11483 * C11467 + (C11473 + C11472) * C11466 +
            (C11471 + C11470) * C11465) *
               C154082 * C1307) *
              C1310 +
          ((C11480 * C11465 + C11481 * C11466 + (C11477 + C11476) * C11467 +
            (C11478 + C11479) * C154407) *
               C154082 * C1307 -
           (((C134 * C377 - C135 * C354 - C134 * C378 + C154181 * C390) *
                 C154226 +
             C830 * C154406) *
                C154407 +
            (C12100 + C12099) * C11467 + C12097 * C11466 + C12098 * C11465) *
               C154082 * C154118) *
              C1311)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C154406 +
             C3210 * C154226) *
                C11465 +
            (C11470 + C11471) * C11466 + C11480 * C11467 + C11481 * C154407) *
               C577 -
           (C12295 * C154407 + C12296 * C11467 + (C11888 + C11889) * C11466 +
            (C4300 * C154226 +
             (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                 C154406) *
                C11465) *
               C578 +
           (((C134 * C602 - C135 * C585 - C134 * C603 + C154181 * C621) *
                 C154406 +
             C4930 * C154226) *
                C11465 +
            (C11890 + C11891) * C11466 + (C11892 + C11893) * C11467 +
            (C11894 + C11902) * C154407) *
               C579) *
              C1307 +
          (((C4300 * C154406 + C4299 * C154226) * C11465 +
            (C12557 + C12558) * C11466 + (C12559 + C12560) * C11467 +
            (C12561 + C12562) * C154407) *
               C578 -
           (C12097 * C154407 + C12098 * C11467 + (C11682 + C11683) * C11466 +
            (C3211 * C154226 + C3210 * C154406) * C11465) *
               C577 -
           (((C134 * C3451 - C135 * C3444 - C134 * C3452 + C154181 * C3456) *
                 C154226 +
             C11901 * C154406) *
                C154407 +
            (C3505 * C154226 + C3504 * C154406) * C11467 +
            (C3503 * C154226 + C3502 * C154406) * C11466 +
            (C4931 * C154226 + C4930 * C154406) * C11465) *
               C579) *
              C154118) *
         C154047) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C34729 +
             C3210 * C34730 + C3211 * C34731 + C3214 * C154415) *
                C154373 +
            (C34736 + C34737 + C34738 + C34739) * C154021) *
               C154082 * C1307 -
           ((C34942 + C34943 + C34944 + C34945) * C154021 +
            (C4687 * C154415 + C3214 * C34731 + C3211 * C34730 +
             C3210 * C34729) *
                C154373) *
               C154082 * C154118) *
              C1309 +
          (((C34945 + C34944 + C34943 + C34942) * C154373 +
            (C35353 + C35354 + C35355 + C35356) * C154021) *
               C154082 * C154118 -
           ((C34740 + C34741 + C34742 + C34743) * C154021 +
            (C34739 + C34738 + C34737 + C34736) * C154373) *
               C154082 * C1307) *
              C1310 +
          (((C34743 + C34742 + C34741 + C34740) * C154373 +
            (C34744 + C34745 + C34746 + C34747) * C154021) *
               C154082 * C1307 -
           (((C134 * C3149 - C135 * C3142 - C134 * C3150 + C154181 * C3154) *
                 C154415 +
             C3217 * C34731 + C446 * C34730 + C441 * C34729) *
                C154021 +
            (C35356 + C35355 + C35354 + C35353) * C154373) *
               C154082 * C154118) *
              C1311)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                C34729 +
            C3210 * C34730 + C3211 * C34731 + C3214 * C154415) *
               C154373 +
           (C34736 + C34737 + C34738 + C34739) * C154021) *
              C154082 * C1394 -
          ((C34942 + C34943 + C34944 + C34945) * C154021 +
           (C4687 * C154415 + C3214 * C34731 + C3211 * C34730 +
            C3210 * C34729) *
               C154373) *
              C154082 * C1395 +
          ((C3211 * C34729 + C3214 * C34730 + C4687 * C34731 +
            C28341 * C154415) *
               C154373 +
           (C34946 + C34947 + C34948 + C34949) * C154021) *
              C154082 * C1396 -
          (((C134 * C28324 - C135 * C28321 - C134 * C28325 + C154181 * C28327) *
                C154415 +
            C28342 * C34731 + C3215 * C34730 + C3213 * C34729) *
               C154021 +
           (C29115 * C154415 + C28341 * C34731 + C4687 * C34730 +
            C3214 * C34729) *
               C154373) *
              C154082 * C1397) *
         C154047) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C34729 +
             C3210 * C34730 + C3211 * C34731 + C3214 * C154415) *
                C154373 +
            (C34736 + C34737 + C34738 + C34739) * C154021) *
               C577 -
           ((C35144 + C35145 + C35146 + C35147) * C154021 +
            (C5676 * C154415 + C4299 * C34731 + C4300 * C34730 +
             (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                 C34729) *
                C154373) *
               C578 +
           (((C134 * C602 - C135 * C585 - C134 * C603 + C154181 * C621) *
                 C34729 +
             C4930 * C34730 + C4931 * C34731 + C29254 * C154415) *
                C154373 +
            (C35148 + C35149 + C35150 + C35158) * C154021) *
               C579) *
              C1307 +
          (((C4300 * C34729 + C4299 * C34730 + C5676 * C34731 +
             C28899 * C154415) *
                C154373 +
            (C35813 + C35814 + C35815 + C35816) * C154021) *
               C578 -
           ((C34942 + C34943 + C34944 + C34945) * C154021 +
            (C4687 * C154415 + C3214 * C34731 + C3211 * C34730 +
             C3210 * C34729) *
                C154373) *
               C577 -
           (((C134 * C28468 - C135 * C28465 - C134 * C28469 +
              C154181 * C28471) *
                 C154415 +
             C35157 * C34731 + C3503 * C34730 + C3502 * C34729) *
                C154021 +
            (C29255 * C154415 + C29254 * C34731 + C4931 * C34730 +
             C4930 * C34729) *
                C154373) *
               C579) *
              C154118) *
         C154047) /
            (p * q * std::sqrt(p + q));
    d2ee[308] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                  C154406 +
              C3210 * C154226) *
                 C11465 +
             (C11470 + C11471) * C11466 + C11480 * C11467 + C11481 * C154407) *
                C154393 -
            (C12295 * C154407 + C12296 * C11467 + (C11888 + C11889) * C11466 +
             (C4300 * C154226 +
              (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                  C154406) *
                 C11465) *
                C154146) *
               C1307 +
           (((C4300 * C154406 + C4299 * C154226) * C11465 +
             (C12557 + C12558) * C11466 + (C12559 + C12560) * C11467 +
             (C12561 + C12562) * C154407) *
                C154146 -
            (C12097 * C154407 + C12098 * C11467 + (C11682 + C11683) * C11466 +
             (C3211 * C154226 + C3210 * C154406) * C11465) *
                C154393) *
               C154118) *
              C154384 +
          ((((C11889 + C11888) * C11465 + (C11887 + C11886) * C11466 +
             (C11885 + C11884) * C11467 + (C12297 + C12298) * C154407) *
                C154146 -
            (C11482 * C154407 + C11483 * C11467 + (C11473 + C11472) * C11466 +
             (C11471 + C11470) * C11465) *
                C154393) *
               C1307 +
           (((C11683 + C11682) * C11465 + (C11681 + C11680) * C11466 +
             (C11679 + C11678) * C11467 + (C12099 + C12100) * C154407) *
                C154393 -
            (((C134 * C1977 - C135 * C1972 - C134 * C1978 + C154181 * C1987) *
                  C154226 +
              C1181 * C154406) *
                 C154407 +
             (C12562 + C12561) * C11467 + (C12560 + C12559) * C11466 +
             (C12558 + C12557) * C11465) *
                C154146) *
               C154118) *
              C154053)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                  C34729 +
              C3210 * C34730 + C3211 * C34731 + C3214 * C154415) *
                 C154373 +
             (C34736 + C34737 + C34738 + C34739) * C154021) *
                C154393 -
            ((C35144 + C35145 + C35146 + C35147) * C154021 +
             (C5676 * C154415 + C4299 * C34731 + C4300 * C34730 +
              (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                  C34729) *
                 C154373) *
                C154146) *
               C1307 +
           (((C4300 * C34729 + C4299 * C34730 + C5676 * C34731 +
              C28899 * C154415) *
                 C154373 +
             (C35813 + C35814 + C35815 + C35816) * C154021) *
                C154146 -
            ((C34942 + C34943 + C34944 + C34945) * C154021 +
             (C4687 * C154415 + C3214 * C34731 + C3211 * C34730 +
              C3210 * C34729) *
                 C154373) *
                C154393) *
               C154118) *
              C154384 +
          ((((C35147 + C35146 + C35145 + C35144) * C154373 +
             (C35551 + C35552 + C35553 + C35554) * C154021) *
                C154146 -
            ((C34740 + C34741 + C34742 + C34743) * C154021 +
             (C34739 + C34738 + C34737 + C34736) * C154373) *
                C154393) *
               C1307 +
           (((C34945 + C34944 + C34943 + C34942) * C154373 +
             (C35353 + C35354 + C35355 + C35356) * C154021) *
                C154393 -
            (((C134 * C5660 - C135 * C5657 - C134 * C5661 + C154181 * C5666) *
                  C154415 +
              C4302 * C34731 + C3500 * C34730 + C1179 * C34729) *
                 C154021 +
             (C35816 + C35815 + C35814 + C35813) * C154373) *
                C154146) *
               C154118) *
              C154053)) /
            (p * q * std::sqrt(p + q));
    d2ee[309] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C154406 +
             C3210 * C154226) *
                C11465 +
            (C11470 + C11471) * C11466 + C11480 * C11467 + C11481 * C154407) *
               C154082 * C1307 -
           (C12097 * C154407 + C12098 * C11467 + (C11682 + C11683) * C11466 +
            (C3211 * C154226 + C3210 * C154406) * C11465) *
               C154082 * C154118) *
              C1309 +
          (((C11683 + C11682) * C11465 + (C11681 + C11680) * C11466 +
            (C11679 + C11678) * C11467 + (C12099 + C12100) * C154407) *
               C154082 * C154118 -
           (C11482 * C154407 + C11483 * C11467 + (C11473 + C11472) * C11466 +
            (C11471 + C11470) * C11465) *
               C154082 * C1307) *
              C1310 +
          ((C11480 * C11465 + C11481 * C11466 + (C11477 + C11476) * C11467 +
            (C11478 + C11479) * C154407) *
               C154082 * C1307 -
           (((C134 * C377 - C135 * C354 - C134 * C378 + C154181 * C390) *
                 C154226 +
             C830 * C154406) *
                C154407 +
            (C12100 + C12099) * C11467 + C12097 * C11466 + C12098 * C11465) *
               C154082 * C154118) *
              C1311)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                C154406 +
            C3210 * C154226) *
               C11465 +
           (C11470 + C11471) * C11466 + C11480 * C11467 + C11481 * C154407) *
              C154082 * C1394 -
          (C12097 * C154407 + C12098 * C11467 + (C11682 + C11683) * C11466 +
           (C3211 * C154226 + C3210 * C154406) * C11465) *
              C154082 * C1395 +
          ((C3211 * C154406 + C3214 * C154226) * C11465 +
           (C11684 + C11685) * C11466 + (C11686 + C11687) * C11467 +
           (C11688 + C11689) * C154407) *
              C154082 * C1396 -
          (((C134 * C3149 - C135 * C3142 - C134 * C3150 + C154181 * C3154) *
                C154226 +
            C3217 * C154406) *
               C154407 +
           (C3216 * C154226 + C3212 * C154406) * C11467 +
           (C3215 * C154226 + C3213 * C154406) * C11466 +
           (C4687 * C154226 + C3214 * C154406) * C11465) *
              C154082 * C1397) *
         C154047) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C34729 +
             C3210 * C34730 + C3211 * C34731 + C3214 * C154415) *
                C154373 +
            (C34736 + C34737 + C34738 + C34739) * C154021) *
               C154082 * C1307 -
           ((C34942 + C34943 + C34944 + C34945) * C154021 +
            (C4687 * C154415 + C3214 * C34731 + C3211 * C34730 +
             C3210 * C34729) *
                C154373) *
               C154082 * C154118) *
              C1309 +
          (((C34945 + C34944 + C34943 + C34942) * C154373 +
            (C35353 + C35354 + C35355 + C35356) * C154021) *
               C154082 * C154118 -
           ((C34740 + C34741 + C34742 + C34743) * C154021 +
            (C34739 + C34738 + C34737 + C34736) * C154373) *
               C154082 * C1307) *
              C1310 +
          (((C34743 + C34742 + C34741 + C34740) * C154373 +
            (C34744 + C34745 + C34746 + C34747) * C154021) *
               C154082 * C1307 -
           (((C134 * C3149 - C135 * C3142 - C134 * C3150 + C154181 * C3154) *
                 C154415 +
             C3217 * C34731 + C446 * C34730 + C441 * C34729) *
                C154021 +
            (C35356 + C35355 + C35354 + C35353) * C154373) *
               C154082 * C154118) *
              C1311)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                C34729 +
            C3210 * C34730 + C3211 * C34731 + C3214 * C154415) *
               C154373 +
           (C34736 + C34737 + C34738 + C34739) * C154021) *
              C154082 * C1394 -
          ((C34942 + C34943 + C34944 + C34945) * C154021 +
           (C4687 * C154415 + C3214 * C34731 + C3211 * C34730 +
            C3210 * C34729) *
               C154373) *
              C154082 * C1395 +
          ((C3211 * C34729 + C3214 * C34730 + C4687 * C34731 +
            C28341 * C154415) *
               C154373 +
           (C34946 + C34947 + C34948 + C34949) * C154021) *
              C154082 * C1396 -
          (((C134 * C28324 - C135 * C28321 - C134 * C28325 + C154181 * C28327) *
                C154415 +
            C28342 * C34731 + C3215 * C34730 + C3213 * C34729) *
               C154021 +
           (C29115 * C154415 + C28341 * C34731 + C4687 * C34730 +
            C3214 * C34729) *
               C154373) *
              C154082 * C1397) *
         C154047) /
            (p * q * std::sqrt(p + q));
    d2ee[310] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                  C154406 +
              C3210 * C154226) *
                 C11465 +
             (C11470 + C11471) * C11466 + C11480 * C11467 + C11481 * C154407) *
                C2114 -
            (C12295 * C154407 + C12296 * C11467 + (C11888 + C11889) * C11466 +
             (C4300 * C154226 +
              (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                  C154406) *
                 C11465) *
                C154146) *
               C154392 +
           (((C4300 * C154406 + C4299 * C154226) * C11465 +
             (C12557 + C12558) * C11466 + (C12559 + C12560) * C11467 +
             (C12561 + C12562) * C154407) *
                C154146 -
            (C12097 * C154407 + C12098 * C11467 + (C11682 + C11683) * C11466 +
             (C3211 * C154226 + C3210 * C154406) * C11465) *
                C2114) *
               C154118) *
              C154384 +
          ((((C11889 + C11888) * C11465 + (C11887 + C11886) * C11466 +
             (C11885 + C11884) * C11467 + (C12297 + C12298) * C154407) *
                C154146 -
            (C11482 * C154407 + C11483 * C11467 + (C11473 + C11472) * C11466 +
             (C11471 + C11470) * C11465) *
                C2114) *
               C154392 +
           (((C11683 + C11682) * C11465 + (C11681 + C11680) * C11466 +
             (C11679 + C11678) * C11467 + (C12099 + C12100) * C154407) *
                C2114 -
            (((C134 * C1977 - C135 * C1972 - C134 * C1978 + C154181 * C1987) *
                  C154226 +
              C1181 * C154406) *
                 C154407 +
             (C12562 + C12561) * C11467 + (C12560 + C12559) * C11466 +
             (C12558 + C12557) * C11465) *
                C154146) *
               C154118) *
              C154053)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                  C34729 +
              C3210 * C34730 + C3211 * C34731 + C3214 * C154415) *
                 C154373 +
             (C34736 + C34737 + C34738 + C34739) * C154021) *
                C2114 -
            ((C35144 + C35145 + C35146 + C35147) * C154021 +
             (C5676 * C154415 + C4299 * C34731 + C4300 * C34730 +
              (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                  C34729) *
                 C154373) *
                C154146) *
               C154392 +
           (((C4300 * C34729 + C4299 * C34730 + C5676 * C34731 +
              C28899 * C154415) *
                 C154373 +
             (C35813 + C35814 + C35815 + C35816) * C154021) *
                C154146 -
            ((C34942 + C34943 + C34944 + C34945) * C154021 +
             (C4687 * C154415 + C3214 * C34731 + C3211 * C34730 +
              C3210 * C34729) *
                 C154373) *
                C2114) *
               C154118) *
              C154384 +
          ((((C35147 + C35146 + C35145 + C35144) * C154373 +
             (C35551 + C35552 + C35553 + C35554) * C154021) *
                C154146 -
            ((C34740 + C34741 + C34742 + C34743) * C154021 +
             (C34739 + C34738 + C34737 + C34736) * C154373) *
                C2114) *
               C154392 +
           (((C34945 + C34944 + C34943 + C34942) * C154373 +
             (C35353 + C35354 + C35355 + C35356) * C154021) *
                C2114 -
            (((C134 * C5660 - C135 * C5657 - C134 * C5661 + C154181 * C5666) *
                  C154415 +
              C4302 * C34731 + C3500 * C34730 + C1179 * C34729) *
                 C154021 +
             (C35816 + C35815 + C35814 + C35813) * C154373) *
                C154146) *
               C154118) *
              C154053)) /
            (p * q * std::sqrt(p + q));
    d2ee[311] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C154406 +
             C3210 * C154226) *
                C11465 +
            (C11470 + C11471) * C11466 + C11480 * C11467 + C11481 * C154407) *
               C154465 -
           (C12295 * C154407 + C12296 * C11467 + (C11888 + C11889) * C11466 +
            (C4300 * C154226 +
             (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                 C154406) *
                C11465) *
               C154466 +
           (((C134 * C602 - C135 * C585 - C134 * C603 + C154181 * C621) *
                 C154406 +
             C4930 * C154226) *
                C11465 +
            (C11890 + C11891) * C11466 + (C11892 + C11893) * C11467 +
            (C11894 + C11902) * C154407) *
               C2630) *
              C154392 +
          (((C4300 * C154406 + C4299 * C154226) * C11465 +
            (C12557 + C12558) * C11466 + (C12559 + C12560) * C11467 +
            (C12561 + C12562) * C154407) *
               C154466 -
           (C12097 * C154407 + C12098 * C11467 + (C11682 + C11683) * C11466 +
            (C3211 * C154226 + C3210 * C154406) * C11465) *
               C154465 -
           (((C134 * C3451 - C135 * C3444 - C134 * C3452 + C154181 * C3456) *
                 C154226 +
             C11901 * C154406) *
                C154407 +
            (C3505 * C154226 + C3504 * C154406) * C11467 +
            (C3503 * C154226 + C3502 * C154406) * C11466 +
            (C4931 * C154226 + C4930 * C154406) * C11465) *
               C2630) *
              C154118) *
         C154047) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C34729 +
             C3210 * C34730 + C3211 * C34731 + C3214 * C154415) *
                C154373 +
            (C34736 + C34737 + C34738 + C34739) * C154021) *
               C154465 -
           ((C35144 + C35145 + C35146 + C35147) * C154021 +
            (C5676 * C154415 + C4299 * C34731 + C4300 * C34730 +
             (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                 C34729) *
                C154373) *
               C154466 +
           (((C134 * C602 - C135 * C585 - C134 * C603 + C154181 * C621) *
                 C34729 +
             C4930 * C34730 + C4931 * C34731 + C29254 * C154415) *
                C154373 +
            (C35148 + C35149 + C35150 + C35158) * C154021) *
               C2630) *
              C154392 +
          (((C4300 * C34729 + C4299 * C34730 + C5676 * C34731 +
             C28899 * C154415) *
                C154373 +
            (C35813 + C35814 + C35815 + C35816) * C154021) *
               C154466 -
           ((C34942 + C34943 + C34944 + C34945) * C154021 +
            (C4687 * C154415 + C3214 * C34731 + C3211 * C34730 +
             C3210 * C34729) *
                C154373) *
               C154465 -
           (((C134 * C28468 - C135 * C28465 - C134 * C28469 +
              C154181 * C28471) *
                 C154415 +
             C35157 * C34731 + C3503 * C34730 + C3502 * C34729) *
                C154021 +
            (C29255 * C154415 + C29254 * C34731 + C4931 * C34730 +
             C4930 * C34729) *
                C154373) *
               C2630) *
              C154118) *
         C154047) /
            (p * q * std::sqrt(p + q));
    d2ee[312] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C154406 +
             C3210 * C154226) *
                C11465 +
            (C11470 + C11471) * C11466 + C11480 * C11467 + C11481 * C154407) *
               C2114 -
           (C12295 * C154407 + C12296 * C11467 + (C11888 + C11889) * C11466 +
            (C4300 * C154226 +
             (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                 C154406) *
                C11465) *
               C154146) *
              C338 +
          (((C4300 * C154406 + C4299 * C154226) * C11465 +
            (C12557 + C12558) * C11466 + (C12559 + C12560) * C11467 +
            (C12561 + C12562) * C154407) *
               C154146 -
           (C12097 * C154407 + C12098 * C11467 + (C11682 + C11683) * C11466 +
            (C3211 * C154226 + C3210 * C154406) * C11465) *
               C2114) *
              C339 +
          (((C3211 * C154406 + C3214 * C154226) * C11465 +
            (C11684 + C11685) * C11466 + (C11686 + C11687) * C11467 +
            (C11688 + C11689) * C154407) *
               C2114 -
           (((C134 * C4264 - C135 * C4257 - C134 * C4265 + C154181 * C4269) *
                 C154226 +
             C3963 * C154406) *
                C154407 +
            (C4302 * C154226 + C3500 * C154406) * C11467 +
            (C4301 * C154226 + C3501 * C154406) * C11466 +
            (C5676 * C154226 + C4299 * C154406) * C11465) *
               C154146) *
              C340) *
         C154047) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C154406 +
             C3210 * C154226) *
                C11465 +
            (C11470 + C11471) * C11466 + C11480 * C11467 + C11481 * C154407) *
               C2114 -
           (C12295 * C154407 + C12296 * C11467 + (C11888 + C11889) * C11466 +
            (C4300 * C154226 +
             (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                 C154406) *
                C11465) *
               C154146) *
              C154066 * C1309 +
          (((C11889 + C11888) * C11465 + (C11887 + C11886) * C11466 +
            (C11885 + C11884) * C11467 + (C12297 + C12298) * C154407) *
               C154146 -
           (C11482 * C154407 + C11483 * C11467 + (C11473 + C11472) * C11466 +
            (C11471 + C11470) * C11465) *
               C2114) *
              C154066 * C1310 +
          ((C11480 * C11465 + C11481 * C11466 + (C11477 + C11476) * C11467 +
            (C11478 + C11479) * C154407) *
               C2114 -
           (((C134 * C1145 - C135 * C1134 - C134 * C1146 + C154181 * C1152) *
                 C154226 +
             C966 * C154406) *
                C154407 +
            (C12298 + C12297) * C11467 + C12295 * C11466 + C12296 * C11465) *
               C154146) *
              C154066 * C1311)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                C154406 +
            C3210 * C154226) *
               C11465 +
           (C11470 + C11471) * C11466 + C11480 * C11467 + C11481 * C154407) *
              C2320 -
          (C12295 * C154407 + C12296 * C11467 + (C11888 + C11889) * C11466 +
           (C4300 * C154226 +
            (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                C154406) *
               C11465) *
              C2321 +
          (((C134 * C602 - C135 * C585 - C134 * C603 + C154181 * C621) *
                C154406 +
            C4930 * C154226) *
               C11465 +
           (C11890 + C11891) * C11466 + (C11892 + C11893) * C11467 +
           (C11894 + C11902) * C154407) *
              C2322 -
          (((C134 * C8648 - C135 * C8647 - C134 * C8649 + C154181 * C8650) *
                C154226 +
            (C134 * C2331 - C135 * C2325 - C134 * C2332 + C154181 * C2340) *
                C154406) *
               C154407 +
           ((C134 * C6266 - C135 * C6259 - C134 * C6267 + C154181 * C6277) *
                C154226 +
            (C134 * C2333 - C135 * C2326 - C134 * C2334 + C154181 * C2341) *
                C154406) *
               C11467 +
           ((C134 * C6270 - C135 * C6261 - C134 * C6271 + C154181 * C6279) *
                C154226 +
            (C134 * C2335 - C135 * C2327 - C134 * C2336 + C154181 * C2342) *
                C154406) *
               C11466 +
           ((C134 * C6274 - C135 * C6263 - C134 * C6275 + C154181 * C6281) *
                C154226 +
            (C134 * C2337 - C135 * C2328 - C134 * C2338 + C154181 * C2343) *
                C154406) *
               C11465) *
              C2323) *
         C154066 * C154047) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C34729 +
             C3210 * C34730 + C3211 * C34731 + C3214 * C154415) *
                C154373 +
            (C34736 + C34737 + C34738 + C34739) * C154021) *
               C2114 -
           ((C35144 + C35145 + C35146 + C35147) * C154021 +
            (C5676 * C154415 + C4299 * C34731 + C4300 * C34730 +
             (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                 C34729) *
                C154373) *
               C154146) *
              C154066 * C1309 +
          (((C35147 + C35146 + C35145 + C35144) * C154373 +
            (C35551 + C35552 + C35553 + C35554) * C154021) *
               C154146 -
           ((C34740 + C34741 + C34742 + C34743) * C154021 +
            (C34739 + C34738 + C34737 + C34736) * C154373) *
               C2114) *
              C154066 * C1310 +
          (((C34743 + C34742 + C34741 + C34740) * C154373 +
            (C34744 + C34745 + C34746 + C34747) * C154021) *
               C2114 -
           (((C134 * C4264 - C135 * C4257 - C134 * C4265 + C154181 * C4269) *
                 C154415 +
             C3963 * C34731 + C1180 * C34730 + C678 * C34729) *
                C154021 +
            (C35554 + C35553 + C35552 + C35551) * C154373) *
               C154146) *
              C154066 * C1311)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C34729 +
             C3210 * C34730 + C3211 * C34731 + C3214 * C154415) *
                C154373 +
            (C34736 + C34737 + C34738 + C34739) * C154021) *
               C2114 -
           ((C35144 + C35145 + C35146 + C35147) * C154021 +
            (C5676 * C154415 + C4299 * C34731 + C4300 * C34730 +
             (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                 C34729) *
                C154373) *
               C154146) *
              C338 +
          (((C4300 * C34729 + C4299 * C34730 + C5676 * C34731 +
             C28899 * C154415) *
                C154373 +
            (C35813 + C35814 + C35815 + C35816) * C154021) *
               C154146 -
           ((C34942 + C34943 + C34944 + C34945) * C154021 +
            (C4687 * C154415 + C3214 * C34731 + C3211 * C34730 +
             C3210 * C34729) *
                C154373) *
               C2114) *
              C339 +
          (((C3211 * C34729 + C3214 * C34730 + C4687 * C34731 +
             C28341 * C154415) *
                C154373 +
            (C34946 + C34947 + C34948 + C34949) * C154021) *
               C2114 -
           (((C134 * C28882 - C135 * C28879 - C134 * C28883 +
              C154181 * C28885) *
                 C154415 +
             C28900 * C34731 + C4301 * C34730 + C3501 * C34729) *
                C154021 +
            (C29672 * C154415 + C28899 * C34731 + C5676 * C34730 +
             C4299 * C34729) *
                C154373) *
               C154146) *
              C340) *
         C154047) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                C34729 +
            C3210 * C34730 + C3211 * C34731 + C3214 * C154415) *
               C154373 +
           (C34736 + C34737 + C34738 + C34739) * C154021) *
              C2320 -
          ((C35144 + C35145 + C35146 + C35147) * C154021 +
           (C5676 * C154415 + C4299 * C34731 + C4300 * C34730 +
            (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                C34729) *
               C154373) *
              C2321 +
          (((C134 * C602 - C135 * C585 - C134 * C603 + C154181 * C621) *
                C34729 +
            C4930 * C34730 + C4931 * C34731 + C29254 * C154415) *
               C154373 +
           (C35148 + C35149 + C35150 + C35158) * C154021) *
              C2322 -
          (((C134 * C31817 - C135 * C31816 - C134 * C31818 + C154181 * C31819) *
                C154415 +
            (C134 * C6268 - C135 * C6260 - C134 * C6269 + C154181 * C6278) *
                C34731 +
            (C134 * C6270 - C135 * C6261 - C134 * C6271 + C154181 * C6279) *
                C34730 +
            (C134 * C2335 - C135 * C2327 - C134 * C2336 + C154181 * C2342) *
                C34729) *
               C154021 +
           ((C134 * C30002 - C135 * C29999 - C134 * C30003 + C154181 * C30005) *
                C154415 +
            (C134 * C6272 - C135 * C6262 - C134 * C6273 + C154181 * C6280) *
                C34731 +
            (C134 * C6274 - C135 * C6263 - C134 * C6275 + C154181 * C6281) *
                C34730 +
            (C134 * C2337 - C135 * C2328 - C134 * C2338 + C154181 * C2343) *
                C34729) *
               C154373) *
              C2323) *
         C154066 * C154047) /
            (p * q * std::sqrt(p + q));
    d2ee[313] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C154406 +
             C3210 * C154226) *
                C11465 +
            (C11470 + C11471) * C11466 + C11480 * C11467 + C11481 * C154407) *
               C154465 -
           (C12295 * C154407 + C12296 * C11467 + (C11888 + C11889) * C11466 +
            (C4300 * C154226 +
             (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                 C154406) *
                C11465) *
               C154466 +
           (((C134 * C602 - C135 * C585 - C134 * C603 + C154181 * C621) *
                 C154406 +
             C4930 * C154226) *
                C11465 +
            (C11890 + C11891) * C11466 + (C11892 + C11893) * C11467 +
            (C11894 + C11902) * C154407) *
               C2630) *
              C154066 * C154384 +
          (((C11889 + C11888) * C11465 + (C11887 + C11886) * C11466 +
            (C11885 + C11884) * C11467 + (C12297 + C12298) * C154407) *
               C154466 -
           (C11482 * C154407 + C11483 * C11467 + (C11473 + C11472) * C11466 +
            (C11471 + C11470) * C11465) *
               C154465 -
           (((C134 * C1546 - C135 * C1541 - C134 * C1547 + C154181 * C1556) *
                 C154226 +
             C684 * C154406) *
                C154407 +
            (C11902 + C11894) * C11467 + (C11893 + C11892) * C11466 +
            (C11891 + C11890) * C11465) *
               C2630) *
              C154066 * C154053)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C34729 +
             C3210 * C34730 + C3211 * C34731 + C3214 * C154415) *
                C154373 +
            (C34736 + C34737 + C34738 + C34739) * C154021) *
               C154465 -
           ((C35144 + C35145 + C35146 + C35147) * C154021 +
            (C5676 * C154415 + C4299 * C34731 + C4300 * C34730 +
             (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                 C34729) *
                C154373) *
               C154466 +
           (((C134 * C602 - C135 * C585 - C134 * C603 + C154181 * C621) *
                 C34729 +
             C4930 * C34730 + C4931 * C34731 + C29254 * C154415) *
                C154373 +
            (C35148 + C35149 + C35150 + C35158) * C154021) *
               C2630) *
              C154066 * C154384 +
          (((C35147 + C35146 + C35145 + C35144) * C154373 +
            (C35551 + C35552 + C35553 + C35554) * C154021) *
               C154466 -
           ((C34740 + C34741 + C34742 + C34743) * C154021 +
            (C34739 + C34738 + C34737 + C34736) * C154373) *
               C154465 -
           (((C134 * C4908 - C135 * C4905 - C134 * C4909 + C154181 * C4914) *
                 C154415 +
             C3505 * C34731 + C3504 * C34730 + C682 * C34729) *
                C154021 +
            (C35158 + C35150 + C35149 + C35148) * C154373) *
               C2630) *
              C154066 * C154053)) /
            (p * q * std::sqrt(p + q));
    d2ee[314] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C154406 +
             C3210 * C154226) *
                C11465 +
            (C11470 + C11471) * C11466 + C11480 * C11467 + C11481 * C154407) *
               C2114 -
           (C12295 * C154407 + C12296 * C11467 + (C11888 + C11889) * C11466 +
            (C4300 * C154226 +
             (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                 C154406) *
                C11465) *
               C154146) *
              C154066 * C1309 +
          (((C11889 + C11888) * C11465 + (C11887 + C11886) * C11466 +
            (C11885 + C11884) * C11467 + (C12297 + C12298) * C154407) *
               C154146 -
           (C11482 * C154407 + C11483 * C11467 + (C11473 + C11472) * C11466 +
            (C11471 + C11470) * C11465) *
               C2114) *
              C154066 * C1310 +
          ((C11480 * C11465 + C11481 * C11466 + (C11477 + C11476) * C11467 +
            (C11478 + C11479) * C154407) *
               C2114 -
           (((C134 * C1145 - C135 * C1134 - C134 * C1146 + C154181 * C1152) *
                 C154226 +
             C966 * C154406) *
                C154407 +
            (C12298 + C12297) * C11467 + C12295 * C11466 + C12296 * C11465) *
               C154146) *
              C154066 * C1311)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C154406 +
             C3210 * C154226) *
                C11465 +
            (C11470 + C11471) * C11466 + C11480 * C11467 + C11481 * C154407) *
               C2114 -
           (C12295 * C154407 + C12296 * C11467 + (C11888 + C11889) * C11466 +
            (C4300 * C154226 +
             (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                 C154406) *
                C11465) *
               C154146) *
              C338 +
          (((C4300 * C154406 + C4299 * C154226) * C11465 +
            (C12557 + C12558) * C11466 + (C12559 + C12560) * C11467 +
            (C12561 + C12562) * C154407) *
               C154146 -
           (C12097 * C154407 + C12098 * C11467 + (C11682 + C11683) * C11466 +
            (C3211 * C154226 + C3210 * C154406) * C11465) *
               C2114) *
              C339 +
          (((C3211 * C154406 + C3214 * C154226) * C11465 +
            (C11684 + C11685) * C11466 + (C11686 + C11687) * C11467 +
            (C11688 + C11689) * C154407) *
               C2114 -
           (((C134 * C4264 - C135 * C4257 - C134 * C4265 + C154181 * C4269) *
                 C154226 +
             C3963 * C154406) *
                C154407 +
            (C4302 * C154226 + C3500 * C154406) * C11467 +
            (C4301 * C154226 + C3501 * C154406) * C11466 +
            (C5676 * C154226 + C4299 * C154406) * C11465) *
               C154146) *
              C340) *
         C154047) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C34729 +
             C3210 * C34730 + C3211 * C34731 + C3214 * C154415) *
                C154373 +
            (C34736 + C34737 + C34738 + C34739) * C154021) *
               C2114 -
           ((C35144 + C35145 + C35146 + C35147) * C154021 +
            (C5676 * C154415 + C4299 * C34731 + C4300 * C34730 +
             (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                 C34729) *
                C154373) *
               C154146) *
              C154066 * C1309 +
          (((C35147 + C35146 + C35145 + C35144) * C154373 +
            (C35551 + C35552 + C35553 + C35554) * C154021) *
               C154146 -
           ((C34740 + C34741 + C34742 + C34743) * C154021 +
            (C34739 + C34738 + C34737 + C34736) * C154373) *
               C2114) *
              C154066 * C1310 +
          (((C34743 + C34742 + C34741 + C34740) * C154373 +
            (C34744 + C34745 + C34746 + C34747) * C154021) *
               C2114 -
           (((C134 * C4264 - C135 * C4257 - C134 * C4265 + C154181 * C4269) *
                 C154415 +
             C3963 * C34731 + C1180 * C34730 + C678 * C34729) *
                C154021 +
            (C35554 + C35553 + C35552 + C35551) * C154373) *
               C154146) *
              C154066 * C1311)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C34729 +
             C3210 * C34730 + C3211 * C34731 + C3214 * C154415) *
                C154373 +
            (C34736 + C34737 + C34738 + C34739) * C154021) *
               C2114 -
           ((C35144 + C35145 + C35146 + C35147) * C154021 +
            (C5676 * C154415 + C4299 * C34731 + C4300 * C34730 +
             (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                 C34729) *
                C154373) *
               C154146) *
              C338 +
          (((C4300 * C34729 + C4299 * C34730 + C5676 * C34731 +
             C28899 * C154415) *
                C154373 +
            (C35813 + C35814 + C35815 + C35816) * C154021) *
               C154146 -
           ((C34942 + C34943 + C34944 + C34945) * C154021 +
            (C4687 * C154415 + C3214 * C34731 + C3211 * C34730 +
             C3210 * C34729) *
                C154373) *
               C2114) *
              C339 +
          (((C3211 * C34729 + C3214 * C34730 + C4687 * C34731 +
             C28341 * C154415) *
                C154373 +
            (C34946 + C34947 + C34948 + C34949) * C154021) *
               C2114 -
           (((C134 * C28882 - C135 * C28879 - C134 * C28883 +
              C154181 * C28885) *
                 C154415 +
             C28900 * C34731 + C4301 * C34730 + C3501 * C34729) *
                C154021 +
            (C29672 * C154415 + C28899 * C34731 + C5676 * C34730 +
             C4299 * C34729) *
                C154373) *
               C154146) *
              C340) *
         C154047) /
            (p * q * std::sqrt(p + q));
    d2ee[315] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
              C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
                 C154406 +
             (C19258 + C19259) * C154226) *
                C2902 +
            ((C15087 + C15088) * C154406 + C19212 * C154226) * C2903 +
            C18913 * C154429) *
               C154082 * C154392 -
           (C19877 * C154429 + (C19214 * C154226 + C19215 * C154406) * C2903 +
            ((C19260 + C19261) * C154226 + (C19259 + C19258) * C154406) *
                C2902) *
               C154082 * C154118) *
              C154461 +
          (((C19212 * C154406 + C19224 * C154226) * C2902 +
            (C18908 * C154406 + C19233 * C154226) * C2903 +
            (C19876 * C154406 + (C15381 + C15382) * C154226) * C154429) *
               C154082 * C154118 -
           (C18912 * C154429 +
            (C15856 * C154226 + (C15090 + C15089) * C154406) * C2903 +
            (C19215 * C154226 + (C15088 + C15087) * C154406) * C2902) *
               C154082 * C154392) *
              C154462 +
          ((C18913 * C2902 + (C15098 * C154406 + C19876 * C154226) * C2903 +
            ((C15094 + C15093) * C154406 + (C15871 + C15872) * C154226) *
                C154429) *
               C154082 * C154392 -
           (((C15024 * C1977 - C15025 * C1972 - C15024 * C1978 +
              C154268 * C1987 + C15022 * C373 - C15023 * C352 - C15022 * C374 +
              C154408 * C388) *
                 C154226 +
             (C15872 + C15871) * C154406) *
                C154429 +
            ((C15382 + C15381) * C154226 + C15855 * C154406) * C2903 +
            C19877 * C2902) *
               C154082 * C154118) *
              C818)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
             C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
                C34729 +
            (C19258 + C19259) * C34730 + C38629 * C34731 + C43780 * C154415) *
               C154011 * C154082 * C154392 -
           ((C40430 + C40429) * C154415 + C40416 * C34731 +
            (C19260 + C19261) * C34730 + (C19259 + C19258) * C34729) *
               C154011 * C154082 * C154118) *
              C154461 +
          ((C19212 * C34729 + C19224 * C34730 + C38631 * C34731 +
            (C38644 + C38645) * C154415) *
               C154011 * C154082 * C154118 -
           (C38630 * C154415 + C19214 * C34731 + C19215 * C34730 +
            (C15088 + C15087) * C34729) *
               C154011 * C154082 * C154392) *
              C154462 +
          ((C15097 * C34729 + C18908 * C34730 + C19233 * C34731 +
            (C19264 + C19265) * C154415) *
               C154011 * C154082 * C154392 -
           ((C15024 * C5660 - C15025 * C5657 - C15024 * C5661 +
             C154268 * C5666 + C15022 * C3147 - C15023 * C3141 -
             C15022 * C3148 + C154408 * C3153) *
                C154415 +
            (C19265 + C19264) * C34731 + C19213 * C34730 + C15856 * C34729) *
               C154011 * C154082 * C154118) *
              C818)) /
            (p * q * std::sqrt(p + q));
    d2ee[316] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
               C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
                  C154406 +
              (C19258 + C19259) * C154226) *
                 C2902 +
             ((C15087 + C15088) * C154406 + C19212 * C154226) * C2903 +
             C18913 * C154429) *
                C154393 -
            (C20171 * C154429 +
             (C20558 * C154226 + (C15653 + C15654) * C154406) * C2903 +
             ((C20597 + C20598) * C154226 +
              (C15024 * C602 - C15025 * C585 - C15024 * C603 + C154268 * C621 +
               C15022 * C600 - C15023 * C584 - C15022 * C601 + C154408 * C620) *
                  C154406) *
                 C2902) *
                C154146) *
               C154392 +
           ((((C20598 + C20597) * C154406 +
              (C15022 * C1985 - C15023 * C1976 - C15022 * C1986 +
               C154408 * C1991 + C15024 * C3445 - C15025 * C3441 -
               C15024 * C3446 + C154268 * C3453) *
                  C154226) *
                 C2902 +
             (C20567 * C154406 + (C20599 + C20600) * C154226) * C2903 +
             (C20576 * C154406 + (C20601 + C20602) * C154226) * C154429) *
                C154146 -
            (C19877 * C154429 + (C19214 * C154226 + C19215 * C154406) * C2903 +
             ((C19260 + C19261) * C154226 + (C19259 + C19258) * C154406) *
                 C2902) *
                C154393) *
               C154118) *
              C341 +
          (((((C15654 + C15653) * C154406 + C20567 * C154226) * C2902 +
             ((C15652 + C15651) * C154406 + C20576 * C154226) * C2903 +
             ((C15650 + C15649) * C154406 + (C16383 + C16384) * C154226) *
                 C154429) *
                C154146 -
            (C18912 * C154429 +
             (C15856 * C154226 + (C15090 + C15089) * C154406) * C2903 +
             (C19215 * C154226 + (C15088 + C15087) * C154406) * C2902) *
                C154393) *
               C154392 +
           (((C19212 * C154406 + C19224 * C154226) * C2902 +
             (C18908 * C154406 + C19233 * C154226) * C2903 +
             (C19876 * C154406 + (C15381 + C15382) * C154226) * C154429) *
                C154393 -
            (((C15024 * C3451 - C15025 * C3444 - C15024 * C3452 +
               C154268 * C3456 + C15022 * C1979 - C15023 * C1973 -
               C15022 * C1980 + C154408 * C1988) *
                  C154226 +
              (C16384 + C16383) * C154406) *
                 C154429 +
             ((C20602 + C20601) * C154226 + C20168 * C154406) * C2903 +
             ((C20600 + C20599) * C154226 + C20558 * C154406) * C2902) *
                C154146) *
               C154118) *
              C154053)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
              C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
                 C34729 +
             (C19258 + C19259) * C34730 + C38629 * C34731 + C43780 * C154415) *
                C154011 * C154393 -
            ((C41715 + C41714) * C154415 + C41701 * C34731 +
             (C20597 + C20598) * C34730 +
             (C15024 * C602 - C15025 * C585 - C15024 * C603 + C154268 * C621 +
              C15022 * C600 - C15023 * C584 - C15022 * C601 + C154408 * C620) *
                 C34729) *
                C154011 * C154146) *
               C154392 +
           (((C20598 + C20597) * C34729 + (C22383 + C22384) * C34730 +
             (C41714 + C41715) * C34731 +
             (C15022 * C5664 - C15023 * C5659 - C15022 * C5665 +
              C154408 * C5668 + C15024 * C28466 - C15025 * C28464 -
              C15024 * C28467 + C154268 * C28470) *
                 C154415) *
                C154011 * C154146 -
            ((C40430 + C40429) * C154415 + C40416 * C34731 +
             (C19260 + C19261) * C34730 + (C19259 + C19258) * C34729) *
                C154011 * C154393) *
               C154118) *
              C341 +
          ((((C15654 + C15653) * C34729 + C20567 * C34730 + C39917 * C34731 +
             (C39930 + C39931) * C154415) *
                C154011 * C154146 -
            (C38630 * C154415 + C19214 * C34731 + C19215 * C34730 +
             (C15088 + C15087) * C34729) *
                C154011 * C154393) *
               C154392 +
           ((C19212 * C34729 + C19224 * C34730 + C38631 * C34731 +
             (C38644 + C38645) * C154415) *
                C154011 * C154393 -
            ((C15024 * C28468 - C15025 * C28465 - C15024 * C28469 +
              C154268 * C28471 + C15022 * C5662 - C15023 * C5658 -
              C15022 * C5663 + C154408 * C5667) *
                 C154415 +
             (C39931 + C39930) * C34731 + C39916 * C34730 + C20558 * C34729) *
                C154011 * C154146) *
               C154118) *
              C154053)) /
            (p * q * std::sqrt(p + q));
    d2ee[317] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
              C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
                 C154406 +
             (C19258 + C19259) * C154226) *
                C2902 +
            ((C15087 + C15088) * C154406 + C19212 * C154226) * C2903 +
            C18913 * C154429) *
               C154082 * C338 -
           ((C19213 * C154226 + C15856 * C154406) * C154429 +
            (C19214 * C154226 + C19215 * C154406) * C2903 +
            ((C19260 + C19261) * C154226 + (C19259 + C19258) * C154406) *
                C2902) *
               C154082 * C339 +
           (((C19261 + C19260) * C154406 +
             (C15022 * C1412 - C15023 * C1403 - C15022 * C1413 +
              C154408 * C1418 + C15024 * C4258 - C15025 * C4254 -
              C15024 * C4259 + C154268 * C4266) *
                 C154226) *
                C2902 +
            (C19224 * C154406 + (C19262 + C19263) * C154226) * C2903 +
            (C19233 * C154406 + (C19264 + C19265) * C154226) * C154429) *
               C154082 * C340) *
              C341 +
          (((C19212 * C154406 + C19224 * C154226) * C2902 +
            (C18908 * C154406 + C19233 * C154226) * C2903 +
            ((C15372 + C15371) * C154406 + (C15381 + C15382) * C154226) *
                C154429) *
               C154082 * C339 -
           (C18912 * C154429 +
            (C15856 * C154226 + (C15090 + C15089) * C154406) * C2903 +
            (C19215 * C154226 + (C15088 + C15087) * C154406) * C2902) *
               C154082 * C338 -
           (((C15024 * C4264 - C15025 * C4257 - C15024 * C4265 +
              C154268 * C4269 + C15022 * C1406 - C15023 * C1400 -
              C15022 * C1407 + C154408 * C1415) *
                 C154226 +
             (C15382 + C15381) * C154406) *
                C154429 +
            ((C19265 + C19264) * C154226 + C19213 * C154406) * C2903 +
            ((C19263 + C19262) * C154226 + C19214 * C154406) * C2902) *
               C154082 * C340) *
              C154053)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
             C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
                C154406 +
            (C15022 * C363 - C15023 * C347 - C15022 * C364 + C154408 * C383 +
             C15024 * C1135 - C15025 * C1129 - C15024 * C1136 +
             C154268 * C1147) *
                C154226) *
               C2902 +
           ((C15087 + C15088) * C154406 + (C15376 + C15375) * C154226) * C2903 +
           C18913 * C154429) *
              C154082 * C154066 * C130 -
          (C18912 * C154429 +
           (C15856 * C154226 + (C15090 + C15089) * C154406) * C2903 +
           ((C15375 + C15376) * C154226 + (C15088 + C15087) * C154406) *
               C2902) *
              C154082 * C154066 * C131 +
          (C18913 * C2902 +
           (C15098 * C154406 + (C15372 + C15371) * C154226) * C2903 +
           ((C15094 + C15093) * C154406 + (C15871 + C15872) * C154226) *
               C154429) *
              C154082 * C154066 * C132 -
          (((C15024 * C1145 - C15025 * C1134 - C15024 * C1146 +
             C154268 * C1152 + C15022 * C375 - C15023 * C353 - C15022 * C376 +
             C154408 * C389) *
                C154226 +
            (C15096 + C15095) * C154406) *
               C154429 +
           ((C15872 + C15871) * C154226 + C15099 * C154406) * C2903 +
           C18912 * C2902) *
              C154082 * C154066 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
              C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
                 C154406 +
             (C19258 + C19259) * C154226) *
                C2902 +
            ((C15087 + C15088) * C154406 + C19212 * C154226) * C2903 +
            C18913 * C154429) *
               C577 -
           (((C16382 + C16381) * C154226 + C16068 * C154406) * C154429 +
            ((C16380 + C16379) * C154226 + (C15653 + C15654) * C154406) *
                C2903 +
            ((C15024 * C1554 - C15025 * C1545 - C15024 * C1555 +
              C154268 * C1560 + C15022 * C1135 - C15023 * C1129 -
              C15022 * C1136 + C154408 * C1147) *
                 C154226 +
             (C15024 * C602 - C15025 * C585 - C15024 * C603 + C154268 * C621 +
              C15022 * C600 - C15023 * C584 - C15022 * C601 + C154408 * C620) *
                 C154406) *
                C2902) *
               C578 +
           (((C15022 * C602 - C15023 * C585 - C15022 * C603 + C154408 * C621 +
              C15024 * C2337 - C15025 * C2328 - C15024 * C2338 +
              C154268 * C2343) *
                 C154406 +
             (C15022 * C1554 - C15023 * C1545 - C15022 * C1555 +
              C154408 * C1560 + C15024 * C6274 - C15025 * C6263 -
              C15024 * C6275 + C154268 * C6281) *
                 C154226) *
                C2902 +
            ((C15655 + C15656) * C154406 + (C19580 + C19581) * C154226) *
                C2903 +
            ((C15657 + C15658) * C154406 + (C19582 + C19583) * C154226) *
                C154429) *
               C579) *
              C154066 * C341 +
          ((((C15654 + C15653) * C154406 + (C16379 + C16380) * C154226) *
                C2902 +
            ((C15652 + C15651) * C154406 + (C16381 + C16382) * C154226) *
                C2903 +
            ((C15650 + C15649) * C154406 + (C16383 + C16384) * C154226) *
                C154429) *
               C578 -
           (C18912 * C154429 +
            (C15856 * C154226 + (C15090 + C15089) * C154406) * C2903 +
            (C19215 * C154226 + (C15088 + C15087) * C154406) * C2902) *
               C577 -
           (((C15024 * C8648 - C15025 * C8647 - C15024 * C8649 +
              C154268 * C8650 + C15022 * C1548 - C15023 * C1542 -
              C15022 * C1549 + C154408 * C1557) *
                 C154226 +
             (C15660 + C15659) * C154406) *
                C154429 +
            ((C19583 + C19582) * C154226 + (C15658 + C15657) * C154406) *
                C2903 +
            ((C19581 + C19580) * C154226 + (C15656 + C15655) * C154406) *
                C2902) *
               C579) *
              C154066 * C154053)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
            C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
               C34729 +
           (C19258 + C19259) * C34730 + C38629 * C34731 +
           (C21099 + C21100) * C154415) *
              C154011 * C154082 * C154066 * C130 -
          (C38630 * C154415 + C19214 * C34731 + C19215 * C34730 +
           (C15088 + C15087) * C34729) *
              C154011 * C154082 * C154066 * C131 +
          (C15097 * C34729 + C18908 * C34730 + C19233 * C34731 +
           (C19264 + C19265) * C154415) *
              C154011 * C154082 * C154066 * C132 -
          ((C15024 * C4264 - C15025 * C4257 - C15024 * C4265 + C154268 * C4269 +
            C15022 * C1406 - C15023 * C1400 - C15022 * C1407 +
            C154408 * C1415) *
               C154415 +
           (C15382 + C15381) * C34731 + C15855 * C34730 + C15100 * C34729) *
              C154011 * C154082 * C154066 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
             C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
                C34729 +
            (C19258 + C19259) * C34730 + C38629 * C34731 + C43780 * C154415) *
               C154011 * C154082 * C338 -
           ((C40430 + C40429) * C154415 + C40416 * C34731 +
            (C19260 + C19261) * C34730 + (C19259 + C19258) * C34729) *
               C154011 * C154082 * C339 +
           (C38629 * C34729 + C43780 * C34730 + (C40429 + C40430) * C34731 +
            (C15022 * C4675 - C15023 * C4670 - C15022 * C4676 +
             C154408 * C4679 + C15024 * C28880 - C15025 * C28878 -
             C15024 * C28881 + C154268 * C28884) *
                C154415) *
               C154011 * C154082 * C340) *
              C341 +
          ((C19212 * C34729 + C19224 * C34730 + C38631 * C34731 +
            (C38644 + C38645) * C154415) *
               C154011 * C154082 * C339 -
           (C38630 * C154415 + C19214 * C34731 + C19215 * C34730 +
            (C15088 + C15087) * C34729) *
               C154011 * C154082 * C338 -
           ((C15024 * C28882 - C15025 * C28879 - C15024 * C28883 +
             C154268 * C28885 + C15022 * C4673 - C15023 * C4669 -
             C15022 * C4674 + C154408 * C4678) *
                C154415 +
            (C38645 + C38644) * C34731 + C38630 * C34730 + C19214 * C34729) *
               C154011 * C154082 * C340) *
              C154053)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
             C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
                C34729 +
            (C19258 + C19259) * C34730 + C38629 * C34731 + C43780 * C154415) *
               C154011 * C577 -
           ((C41715 + C41714) * C154415 + C41701 * C34731 +
            (C20597 + C20598) * C34730 +
            (C15024 * C602 - C15025 * C585 - C15024 * C603 + C154268 * C621 +
             C15022 * C600 - C15023 * C584 - C15022 * C601 + C154408 * C620) *
                C34729) *
               C154011 * C578 +
           ((C15022 * C602 - C15023 * C585 - C15022 * C603 + C154408 * C621 +
             C15024 * C2337 - C15025 * C2328 - C15024 * C2338 +
             C154268 * C2343) *
                C34729 +
            (C21403 + C21404) * C34730 + (C40733 + C40734) * C34731 +
            (C15022 * C4912 - C15023 * C4907 - C15022 * C4913 +
             C154408 * C4916 + C15024 * C30002 - C15025 * C29999 -
             C15024 * C30003 + C154268 * C30005) *
                C154415) *
               C154011 * C579) *
              C154066 * C341 +
          (((C15654 + C15653) * C34729 + C20567 * C34730 + C39917 * C34731 +
            (C39930 + C39931) * C154415) *
               C154011 * C578 -
           (C38630 * C154415 + C19214 * C34731 + C19215 * C34730 +
            (C15088 + C15087) * C34729) *
               C154011 * C577 -
           ((C15024 * C31817 - C15025 * C31816 - C15024 * C31818 +
             C154268 * C31819 + C15022 * C4910 - C15023 * C4906 -
             C15022 * C4911 + C154408 * C4915) *
                C154415 +
            (C38949 + C38948) * C34731 + (C19581 + C19580) * C34730 +
            (C15656 + C15655) * C34729) *
               C154011 * C579) *
              C154066 * C154053)) /
            (p * q * std::sqrt(p + q));
    d2ee[318] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
              C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
                 C154406 +
             (C19258 + C19259) * C154226) *
                C2902 +
            ((C15087 + C15088) * C154406 + C19212 * C154226) * C2903 +
            C18913 * C154429) *
               C154393 -
           (C20171 * C154429 +
            ((C16380 + C16379) * C154226 + (C15653 + C15654) * C154406) *
                C2903 +
            ((C15024 * C1554 - C15025 * C1545 - C15024 * C1555 +
              C154268 * C1560 + C15022 * C1135 - C15023 * C1129 -
              C15022 * C1136 + C154408 * C1147) *
                 C154226 +
             (C15024 * C602 - C15025 * C585 - C15024 * C603 + C154268 * C621 +
              C15022 * C600 - C15023 * C584 - C15022 * C601 + C154408 * C620) *
                 C154406) *
                C2902) *
               C154146) *
              C154066 * C154461 +
          ((((C15654 + C15653) * C154406 + (C16379 + C16380) * C154226) *
                C2902 +
            ((C15652 + C15651) * C154406 + (C16381 + C16382) * C154226) *
                C2903 +
            ((C15650 + C15649) * C154406 + (C16383 + C16384) * C154226) *
                C154429) *
               C154146 -
           (C18912 * C154429 +
            (C15856 * C154226 + (C15090 + C15089) * C154406) * C2903 +
            (C19215 * C154226 + (C15088 + C15087) * C154406) * C2902) *
               C154393) *
              C154066 * C154462 +
          ((C18913 * C2902 + (C15098 * C154406 + C19876 * C154226) * C2903 +
            ((C15094 + C15093) * C154406 + (C15871 + C15872) * C154226) *
                C154429) *
               C154393 -
           (((C15024 * C1546 - C15025 * C1541 - C15024 * C1547 +
              C154268 * C1556 + C15022 * C1143 - C15023 * C1133 -
              C15022 * C1144 + C154408 * C1151) *
                 C154226 +
             (C16084 + C16083) * C154406) *
                C154429 +
            ((C16384 + C16383) * C154226 + C16067 * C154406) * C2903 +
            C20171 * C2902) *
               C154146) *
              C154066 * C818)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
             C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
                C34729 +
            (C19258 + C19259) * C34730 + C38629 * C34731 + C43780 * C154415) *
               C154011 * C154393 -
           ((C41715 + C41714) * C154415 + C41701 * C34731 +
            (C20597 + C20598) * C34730 +
            (C15024 * C602 - C15025 * C585 - C15024 * C603 + C154268 * C621 +
             C15022 * C600 - C15023 * C584 - C15022 * C601 + C154408 * C620) *
                C34729) *
               C154011 * C154146) *
              C154066 * C154461 +
          (((C15654 + C15653) * C34729 + C20567 * C34730 + C39917 * C34731 +
            (C39930 + C39931) * C154415) *
               C154011 * C154146 -
           (C38630 * C154415 + C19214 * C34731 + C19215 * C34730 +
            (C15088 + C15087) * C34729) *
               C154011 * C154393) *
              C154066 * C154462 +
          ((C15097 * C34729 + C18908 * C34730 + C19233 * C34731 +
            (C19264 + C19265) * C154415) *
               C154011 * C154393 -
           ((C15024 * C4908 - C15025 * C4905 - C15024 * C4909 +
             C154268 * C4914 + C15022 * C4262 - C15023 * C4256 -
             C15022 * C4263 + C154408 * C4268) *
                C154415 +
            (C20602 + C20601) * C34731 + C20168 * C34730 + C16068 * C34729) *
               C154011 * C154146) *
              C154066 * C818)) /
            (p * q * std::sqrt(p + q));
    d2ee[319] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
             C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
                C154406 +
            (C15022 * C363 - C15023 * C347 - C15022 * C364 + C154408 * C383 +
             C15024 * C1135 - C15025 * C1129 - C15024 * C1136 +
             C154268 * C1147) *
                C154226) *
               C2902 +
           ((C15087 + C15088) * C154406 + (C15376 + C15375) * C154226) * C2903 +
           C18913 * C154429) *
              C154082 * C154066 * C130 -
          (C18912 * C154429 +
           (C15856 * C154226 + (C15090 + C15089) * C154406) * C2903 +
           ((C15375 + C15376) * C154226 + (C15088 + C15087) * C154406) *
               C2902) *
              C154082 * C154066 * C131 +
          (C18913 * C2902 +
           (C15098 * C154406 + (C15372 + C15371) * C154226) * C2903 +
           ((C15094 + C15093) * C154406 + (C15871 + C15872) * C154226) *
               C154429) *
              C154082 * C154066 * C132 -
          (((C15024 * C1145 - C15025 * C1134 - C15024 * C1146 +
             C154268 * C1152 + C15022 * C375 - C15023 * C353 - C15022 * C376 +
             C154408 * C389) *
                C154226 +
            (C15096 + C15095) * C154406) *
               C154429 +
           ((C15872 + C15871) * C154226 + C15099 * C154406) * C2903 +
           C18912 * C2902) *
              C154082 * C154066 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
              C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
                 C154406 +
             (C19258 + C19259) * C154226) *
                C2902 +
            ((C15087 + C15088) * C154406 + C19212 * C154226) * C2903 +
            C18913 * C154429) *
               C154082 * C338 -
           ((C19213 * C154226 + C15856 * C154406) * C154429 +
            (C19214 * C154226 + C19215 * C154406) * C2903 +
            ((C19260 + C19261) * C154226 + (C19259 + C19258) * C154406) *
                C2902) *
               C154082 * C339 +
           (((C19261 + C19260) * C154406 +
             (C15022 * C1412 - C15023 * C1403 - C15022 * C1413 +
              C154408 * C1418 + C15024 * C4258 - C15025 * C4254 -
              C15024 * C4259 + C154268 * C4266) *
                 C154226) *
                C2902 +
            (C19224 * C154406 + (C19262 + C19263) * C154226) * C2903 +
            (C19233 * C154406 + (C19264 + C19265) * C154226) * C154429) *
               C154082 * C340) *
              C341 +
          (((C19212 * C154406 + C19224 * C154226) * C2902 +
            (C18908 * C154406 + C19233 * C154226) * C2903 +
            ((C15372 + C15371) * C154406 + (C15381 + C15382) * C154226) *
                C154429) *
               C154082 * C339 -
           (C18912 * C154429 +
            (C15856 * C154226 + (C15090 + C15089) * C154406) * C2903 +
            (C19215 * C154226 + (C15088 + C15087) * C154406) * C2902) *
               C154082 * C338 -
           (((C15024 * C4264 - C15025 * C4257 - C15024 * C4265 +
              C154268 * C4269 + C15022 * C1406 - C15023 * C1400 -
              C15022 * C1407 + C154408 * C1415) *
                 C154226 +
             (C15382 + C15381) * C154406) *
                C154429 +
            ((C19265 + C19264) * C154226 + C19213 * C154406) * C2903 +
            ((C19263 + C19262) * C154226 + C19214 * C154406) * C2902) *
               C154082 * C340) *
              C154053)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
            C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
               C34729 +
           (C19258 + C19259) * C34730 + C38629 * C34731 +
           (C21099 + C21100) * C154415) *
              C154011 * C154082 * C154066 * C130 -
          (C38630 * C154415 + C19214 * C34731 + C19215 * C34730 +
           (C15088 + C15087) * C34729) *
              C154011 * C154082 * C154066 * C131 +
          (C15097 * C34729 + C18908 * C34730 + C19233 * C34731 +
           (C19264 + C19265) * C154415) *
              C154011 * C154082 * C154066 * C132 -
          ((C15024 * C4264 - C15025 * C4257 - C15024 * C4265 + C154268 * C4269 +
            C15022 * C1406 - C15023 * C1400 - C15022 * C1407 +
            C154408 * C1415) *
               C154415 +
           (C15382 + C15381) * C34731 + C15855 * C34730 + C15100 * C34729) *
              C154011 * C154082 * C154066 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
             C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
                C34729 +
            (C19258 + C19259) * C34730 + C38629 * C34731 + C43780 * C154415) *
               C154011 * C154082 * C338 -
           ((C40430 + C40429) * C154415 + C40416 * C34731 +
            (C19260 + C19261) * C34730 + (C19259 + C19258) * C34729) *
               C154011 * C154082 * C339 +
           (C38629 * C34729 + C43780 * C34730 + (C40429 + C40430) * C34731 +
            (C15022 * C4675 - C15023 * C4670 - C15022 * C4676 +
             C154408 * C4679 + C15024 * C28880 - C15025 * C28878 -
             C15024 * C28881 + C154268 * C28884) *
                C154415) *
               C154011 * C154082 * C340) *
              C341 +
          ((C19212 * C34729 + C19224 * C34730 + C38631 * C34731 +
            (C38644 + C38645) * C154415) *
               C154011 * C154082 * C339 -
           (C38630 * C154415 + C19214 * C34731 + C19215 * C34730 +
            (C15088 + C15087) * C34729) *
               C154011 * C154082 * C338 -
           ((C15024 * C28882 - C15025 * C28879 - C15024 * C28883 +
             C154268 * C28885 + C15022 * C4673 - C15023 * C4669 -
             C15022 * C4674 + C154408 * C4678) *
                C154415 +
            (C38645 + C38644) * C34731 + C38630 * C34730 + C19214 * C34729) *
               C154011 * C154082 * C340) *
              C154053)) /
            (p * q * std::sqrt(p + q));
    d2ee[320] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
              C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
                 C154406 +
             (C19258 + C19259) * C154226) *
                C2902 +
            ((C15087 + C15088) * C154406 + C19212 * C154226) * C2903 +
            C18913 * C154429) *
               C154082 * C154463 -
           (C19877 * C154429 + (C19214 * C154226 + C19215 * C154406) * C2903 +
            ((C19260 + C19261) * C154226 + (C19259 + C19258) * C154406) *
                C2902) *
               C154082 * C154464 +
           (((C19261 + C19260) * C154406 + (C21099 + C21100) * C154226) *
                C2902 +
            (C19224 * C154406 + (C19262 + C19263) * C154226) * C2903 +
            (C19233 * C154406 + (C19264 + C19265) * C154226) * C154429) *
               C154082 * C1685) *
              C154384 +
          (((C19212 * C154406 + C19224 * C154226) * C2902 +
            (C18908 * C154406 + C19233 * C154226) * C2903 +
            (C19876 * C154406 + (C15381 + C15382) * C154226) * C154429) *
               C154082 * C154464 -
           (C18912 * C154429 +
            (C15856 * C154226 + (C15090 + C15089) * C154406) * C2903 +
            (C19215 * C154226 + (C15088 + C15087) * C154406) * C2902) *
               C154082 * C154463 -
           (((C15024 * C4264 - C15025 * C4257 - C15024 * C4265 +
              C154268 * C4269 + C15022 * C1406 - C15023 * C1400 -
              C15022 * C1407 + C154408 * C1415) *
                 C154226 +
             (C15382 + C15381) * C154406) *
                C154429 +
            ((C19265 + C19264) * C154226 + C19213 * C154406) * C2903 +
            ((C19263 + C19262) * C154226 + C19214 * C154406) * C2902) *
               C154082 * C1685) *
              C154053)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
             C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
                C34729 +
            (C19258 + C19259) * C34730 + C38629 * C34731 + C43780 * C154415) *
               C154011 * C154082 * C154463 -
           (C44945 * C154415 + C40416 * C34731 + (C19260 + C19261) * C34730 +
            (C19259 + C19258) * C34729) *
               C154011 * C154082 * C154464 +
           (C38629 * C34729 + C43780 * C34730 + (C40429 + C40430) * C34731 +
            (C44958 + C44959) * C154415) *
               C154011 * C154082 * C1685) *
              C154384 +
          ((C19212 * C34729 + C19224 * C34730 + C38631 * C34731 +
            (C38644 + C38645) * C154415) *
               C154011 * C154082 * C154464 -
           (C38630 * C154415 + C19214 * C34731 + C19215 * C34730 +
            (C15088 + C15087) * C34729) *
               C154011 * C154082 * C154463 -
           ((C15024 * C28882 - C15025 * C28879 - C15024 * C28883 +
             C154268 * C28885 + C15022 * C4673 - C15023 * C4669 -
             C15022 * C4674 + C154408 * C4678) *
                C154415 +
            (C38645 + C38644) * C34731 + C38630 * C34730 + C19214 * C34729) *
               C154011 * C154082 * C1685) *
              C154053)) /
            (p * q * std::sqrt(p + q));
    d2ee[321] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
              C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
                 C154406 +
             (C19258 + C19259) * C154226) *
                C2902 +
            ((C15087 + C15088) * C154406 + C19212 * C154226) * C2903 +
            C18913 * C154429) *
               C154393 -
           (C20171 * C154429 +
            (C20558 * C154226 + (C15653 + C15654) * C154406) * C2903 +
            ((C20597 + C20598) * C154226 +
             (C15024 * C602 - C15025 * C585 - C15024 * C603 + C154268 * C621 +
              C15022 * C600 - C15023 * C584 - C15022 * C601 + C154408 * C620) *
                 C154406) *
                C2902) *
               C154146) *
              C154463 +
          ((((C20598 + C20597) * C154406 + (C22383 + C22384) * C154226) *
                C2902 +
            (C20567 * C154406 + (C20599 + C20600) * C154226) * C2903 +
            (C20576 * C154406 + (C20601 + C20602) * C154226) * C154429) *
               C154146 -
           (C19877 * C154429 + (C19214 * C154226 + C19215 * C154406) * C2903 +
            ((C19260 + C19261) * C154226 + (C19259 + C19258) * C154406) *
                C2902) *
               C154393) *
              C154464 +
          ((((C19261 + C19260) * C154406 + (C21099 + C21100) * C154226) *
                C2902 +
            (C19224 * C154406 + (C19262 + C19263) * C154226) * C2903 +
            (C19233 * C154406 + (C19264 + C19265) * C154226) * C154429) *
               C154393 -
           (((C15024 * C4908 - C15025 * C4905 - C15024 * C4909 +
              C154268 * C4914 + C15022 * C4262 - C15023 * C4256 -
              C15022 * C4263 + C154408 * C4268) *
                 C154226 +
             (C20602 + C20601) * C154406) *
                C154429 +
            ((C15024 * C4910 - C15025 * C4906 - C15024 * C4911 +
              C154268 * C4915 + C15022 * C4260 - C15023 * C4255 -
              C15022 * C4261 + C154408 * C4267) *
                 C154226 +
             (C20600 + C20599) * C154406) *
                C2903 +
            ((C15024 * C4912 - C15025 * C4907 - C15024 * C4913 +
              C154268 * C4916 + C15022 * C4258 - C15023 * C4254 -
              C15022 * C4259 + C154408 * C4266) *
                 C154226 +
             (C22384 + C22383) * C154406) *
                C2902) *
               C154146) *
              C1685) *
         C154047) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
             C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
                C34729 +
            (C19258 + C19259) * C34730 + C38629 * C34731 + C43780 * C154415) *
               C154011 * C154393 -
           (C45814 * C154415 + C41701 * C34731 + (C20597 + C20598) * C34730 +
            (C15024 * C602 - C15025 * C585 - C15024 * C603 + C154268 * C621 +
             C15022 * C600 - C15023 * C584 - C15022 * C601 + C154408 * C620) *
                C34729) *
               C154011 * C154146) *
              C154463 +
          (((C20598 + C20597) * C34729 + (C22383 + C22384) * C34730 +
            (C41714 + C41715) * C34731 + (C45827 + C45828) * C154415) *
               C154011 * C154146 -
           (C44945 * C154415 + C40416 * C34731 + (C19260 + C19261) * C34730 +
            (C19259 + C19258) * C34729) *
               C154011 * C154393) *
              C154464 +
          ((C38629 * C34729 + C43780 * C34730 + (C40429 + C40430) * C34731 +
            (C44958 + C44959) * C154415) *
               C154011 * C154393 -
           ((C15024 * C29238 - C15025 * C29237 - C15024 * C29239 +
             C154268 * C29240 + C15022 * C28880 - C15023 * C28878 -
             C15022 * C28881 + C154408 * C28884) *
                C154415 +
            (C45828 + C45827) * C34731 + C45814 * C34730 + C41701 * C34729) *
               C154011 * C154146) *
              C1685) *
         C154047) /
            (p * q * std::sqrt(p + q));
    d2ee[322] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
             C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
                C154406 +
            (C19258 + C19259) * C154226) *
               C2902 +
           ((C15087 + C15088) * C154406 + C19212 * C154226) * C2903 +
           C18913 * C154429) *
              C154082 * C1394 -
          (C19877 * C154429 + (C19214 * C154226 + C19215 * C154406) * C2903 +
           ((C19260 + C19261) * C154226 + (C19259 + C19258) * C154406) *
               C2902) *
              C154082 * C1395 +
          (((C19261 + C19260) * C154406 + (C21099 + C21100) * C154226) * C2902 +
           (C19224 * C154406 + (C19262 + C19263) * C154226) * C2903 +
           (C19233 * C154406 + (C19264 + C19265) * C154226) * C154429) *
              C154082 * C1396 -
          (((C15024 * C5660 - C15025 * C5657 - C15024 * C5661 +
             C154268 * C5666 + C15022 * C3147 - C15023 * C3141 -
             C15022 * C3148 + C154408 * C3153) *
                C154226 +
            (C19265 + C19264) * C154406) *
               C154429 +
           ((C15024 * C5662 - C15025 * C5658 - C15024 * C5663 +
             C154268 * C5667 + C15022 * C3145 - C15023 * C3140 -
             C15022 * C3146 + C154408 * C3152) *
                C154226 +
            (C19263 + C19262) * C154406) *
               C2903 +
           ((C15024 * C5664 - C15025 * C5659 - C15024 * C5665 +
             C154268 * C5668 + C15022 * C3143 - C15023 * C3139 -
             C15022 * C3144 + C154408 * C3151) *
                C154226 +
            (C21100 + C21099) * C154406) *
               C2902) *
              C154082 * C1397) *
         C154047) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
              C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
                 C154406 +
             (C19258 + C19259) * C154226) *
                C2902 +
            ((C15087 + C15088) * C154406 + C19212 * C154226) * C2903 +
            C18913 * C154429) *
               C154082 * C1307 -
           (C19877 * C154429 + (C19214 * C154226 + C19215 * C154406) * C2903 +
            ((C19260 + C19261) * C154226 + (C19259 + C19258) * C154406) *
                C2902) *
               C154082 * C154118) *
              C1309 +
          (((C19212 * C154406 + C19224 * C154226) * C2902 +
            (C18908 * C154406 + C19233 * C154226) * C2903 +
            (C19876 * C154406 + (C15381 + C15382) * C154226) * C154429) *
               C154082 * C154118 -
           (C18912 * C154429 +
            (C15856 * C154226 + (C15090 + C15089) * C154406) * C2903 +
            (C19215 * C154226 + (C15088 + C15087) * C154406) * C2902) *
               C154082 * C1307) *
              C1310 +
          ((C18913 * C2902 + (C15098 * C154406 + C19876 * C154226) * C2903 +
            ((C15094 + C15093) * C154406 + (C15871 + C15872) * C154226) *
                C154429) *
               C154082 * C1307 -
           (((C15024 * C1977 - C15025 * C1972 - C15024 * C1978 +
              C154268 * C1987 + C15022 * C373 - C15023 * C352 - C15022 * C374 +
              C154408 * C388) *
                 C154226 +
             (C15872 + C15871) * C154406) *
                C154429 +
            ((C15382 + C15381) * C154226 + C15855 * C154406) * C2903 +
            C19877 * C2902) *
               C154082 * C154118) *
              C1311)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
              C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
                 C154406 +
             (C19258 + C19259) * C154226) *
                C2902 +
            ((C15087 + C15088) * C154406 + C19212 * C154226) * C2903 +
            C18913 * C154429) *
               C577 -
           (C20171 * C154429 +
            (C20558 * C154226 + (C15653 + C15654) * C154406) * C2903 +
            ((C20597 + C20598) * C154226 +
             (C15024 * C602 - C15025 * C585 - C15024 * C603 + C154268 * C621 +
              C15022 * C600 - C15023 * C584 - C15022 * C601 + C154408 * C620) *
                 C154406) *
                C2902) *
               C578 +
           (((C15022 * C602 - C15023 * C585 - C15022 * C603 + C154408 * C621 +
              C15024 * C2337 - C15025 * C2328 - C15024 * C2338 +
              C154268 * C2343) *
                 C154406 +
             (C21403 + C21404) * C154226) *
                C2902 +
            ((C15655 + C15656) * C154406 + (C19580 + C19581) * C154226) *
                C2903 +
            ((C15657 + C15658) * C154406 + (C19582 + C19583) * C154226) *
                C154429) *
               C579) *
              C1307 +
          ((((C20598 + C20597) * C154406 +
             (C15022 * C1985 - C15023 * C1976 - C15022 * C1986 +
              C154408 * C1991 + C15024 * C3445 - C15025 * C3441 -
              C15024 * C3446 + C154268 * C3453) *
                 C154226) *
                C2902 +
            (C20567 * C154406 + (C20599 + C20600) * C154226) * C2903 +
            (C20576 * C154406 + (C20601 + C20602) * C154226) * C154429) *
               C578 -
           (C19877 * C154429 + (C19214 * C154226 + C19215 * C154406) * C2903 +
            ((C19260 + C19261) * C154226 + (C19259 + C19258) * C154406) *
                C2902) *
               C577 -
           (((C15024 * C6264 - C15025 * C6258 - C15024 * C6265 +
              C154268 * C6276 + C15022 * C3449 - C15023 * C3443 -
              C15022 * C3450 + C154408 * C3455) *
                 C154226 +
             (C19583 + C19582) * C154406) *
                C154429 +
            ((C15024 * C6268 - C15025 * C6260 - C15024 * C6269 +
              C154268 * C6278 + C15022 * C3447 - C15023 * C3442 -
              C15022 * C3448 + C154408 * C3454) *
                 C154226 +
             (C19581 + C19580) * C154406) *
                C2903 +
            ((C15024 * C6272 - C15025 * C6262 - C15024 * C6273 +
              C154268 * C6280 + C15022 * C3445 - C15023 * C3441 -
              C15022 * C3446 + C154408 * C3453) *
                 C154226 +
             (C21404 + C21403) * C154406) *
                C2902) *
               C579) *
              C154118) *
         C154047) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
             C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
                C34729 +
            (C19258 + C19259) * C34730 + C38629 * C34731 + C43780 * C154415) *
               C154011 * C154082 * C1307 -
           ((C40430 + C40429) * C154415 + C40416 * C34731 +
            (C19260 + C19261) * C34730 + (C19259 + C19258) * C34729) *
               C154011 * C154082 * C154118) *
              C1309 +
          ((C19212 * C34729 + C19224 * C34730 + C38631 * C34731 +
            (C38644 + C38645) * C154415) *
               C154011 * C154082 * C154118 -
           (C38630 * C154415 + C19214 * C34731 + C19215 * C34730 +
            (C15088 + C15087) * C34729) *
               C154011 * C154082 * C1307) *
              C1310 +
          ((C15097 * C34729 + C18908 * C34730 + C19233 * C34731 +
            (C19264 + C19265) * C154415) *
               C154011 * C154082 * C1307 -
           ((C15024 * C5660 - C15025 * C5657 - C15024 * C5661 +
             C154268 * C5666 + C15022 * C3147 - C15023 * C3141 -
             C15022 * C3148 + C154408 * C3153) *
                C154415 +
            (C19265 + C19264) * C34731 + C19213 * C34730 + C15856 * C34729) *
               C154011 * C154082 * C154118) *
              C1311)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
            C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
               C34729 +
           (C19258 + C19259) * C34730 + C38629 * C34731 + C43780 * C154415) *
              C154011 * C154082 * C1394 -
          (C44945 * C154415 + C40416 * C34731 + (C19260 + C19261) * C34730 +
           (C19259 + C19258) * C34729) *
              C154011 * C154082 * C1395 +
          (C38629 * C34729 + C43780 * C34730 + (C40429 + C40430) * C34731 +
           (C44958 + C44959) * C154415) *
              C154011 * C154082 * C1396 -
          ((C15024 * C29662 - C15025 * C29661 - C15024 * C29663 +
            C154268 * C29664 + C15022 * C28322 - C15023 * C28320 -
            C15022 * C28323 + C154408 * C28326) *
               C154415 +
           (C44959 + C44958) * C34731 + C44945 * C34730 + C40416 * C34729) *
              C154011 * C154082 * C1397) *
         C154047) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
             C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
                C34729 +
            (C19258 + C19259) * C34730 + C38629 * C34731 + C43780 * C154415) *
               C154011 * C577 -
           ((C41715 + C41714) * C154415 + C41701 * C34731 +
            (C20597 + C20598) * C34730 +
            (C15024 * C602 - C15025 * C585 - C15024 * C603 + C154268 * C621 +
             C15022 * C600 - C15023 * C584 - C15022 * C601 + C154408 * C620) *
                C34729) *
               C154011 * C578 +
           ((C15022 * C602 - C15023 * C585 - C15022 * C603 + C154408 * C621 +
             C15024 * C2337 - C15025 * C2328 - C15024 * C2338 +
             C154268 * C2343) *
                C34729 +
            (C21403 + C21404) * C34730 + (C40733 + C40734) * C34731 +
            (C45166 + C45167) * C154415) *
               C154011 * C579) *
              C1307 +
          (((C20598 + C20597) * C34729 + (C22383 + C22384) * C34730 +
            (C41714 + C41715) * C34731 +
            (C15022 * C5664 - C15023 * C5659 - C15022 * C5665 +
             C154408 * C5668 + C15024 * C28466 - C15025 * C28464 -
             C15024 * C28467 + C154268 * C28470) *
                C154415) *
               C154011 * C578 -
           (C44945 * C154415 + C40416 * C34731 + (C19260 + C19261) * C34730 +
            (C19259 + C19258) * C34729) *
               C154011 * C577 -
           ((C15024 * C30000 - C15025 * C29998 - C15024 * C30001 +
             C154268 * C30004 + C15022 * C28466 - C15023 * C28464 -
             C15022 * C28467 + C154408 * C28470) *
                C154415 +
            (C45167 + C45166) * C34731 + (C40734 + C40733) * C34730 +
            (C21404 + C21403) * C34729) *
               C154011 * C579) *
              C154118) *
         C154047) /
            (p * q * std::sqrt(p + q));
    d2ee[323] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
               C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
                  C154406 +
              (C19258 + C19259) * C154226) *
                 C2902 +
             ((C15087 + C15088) * C154406 + C19212 * C154226) * C2903 +
             C18913 * C154429) *
                C154393 -
            (C20171 * C154429 +
             (C20558 * C154226 + (C15653 + C15654) * C154406) * C2903 +
             ((C20597 + C20598) * C154226 +
              (C15024 * C602 - C15025 * C585 - C15024 * C603 + C154268 * C621 +
               C15022 * C600 - C15023 * C584 - C15022 * C601 + C154408 * C620) *
                  C154406) *
                 C2902) *
                C154146) *
               C1307 +
           ((((C20598 + C20597) * C154406 +
              (C15022 * C1985 - C15023 * C1976 - C15022 * C1986 +
               C154408 * C1991 + C15024 * C3445 - C15025 * C3441 -
               C15024 * C3446 + C154268 * C3453) *
                  C154226) *
                 C2902 +
             (C20567 * C154406 + (C20599 + C20600) * C154226) * C2903 +
             (C20576 * C154406 + (C20601 + C20602) * C154226) * C154429) *
                C154146 -
            (C19877 * C154429 + (C19214 * C154226 + C19215 * C154406) * C2903 +
             ((C19260 + C19261) * C154226 + (C19259 + C19258) * C154406) *
                 C2902) *
                C154393) *
               C154118) *
              C154384 +
          (((((C15654 + C15653) * C154406 + C20567 * C154226) * C2902 +
             ((C15652 + C15651) * C154406 + C20576 * C154226) * C2903 +
             ((C15650 + C15649) * C154406 + (C16383 + C16384) * C154226) *
                 C154429) *
                C154146 -
            (C18912 * C154429 +
             (C15856 * C154226 + (C15090 + C15089) * C154406) * C2903 +
             (C19215 * C154226 + (C15088 + C15087) * C154406) * C2902) *
                C154393) *
               C1307 +
           (((C19212 * C154406 + C19224 * C154226) * C2902 +
             (C18908 * C154406 + C19233 * C154226) * C2903 +
             (C19876 * C154406 + (C15381 + C15382) * C154226) * C154429) *
                C154393 -
            (((C15024 * C3451 - C15025 * C3444 - C15024 * C3452 +
               C154268 * C3456 + C15022 * C1979 - C15023 * C1973 -
               C15022 * C1980 + C154408 * C1988) *
                  C154226 +
              (C16384 + C16383) * C154406) *
                 C154429 +
             ((C20602 + C20601) * C154226 + C20168 * C154406) * C2903 +
             ((C20600 + C20599) * C154226 + C20558 * C154406) * C2902) *
                C154146) *
               C154118) *
              C154053)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
              C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
                 C34729 +
             (C19258 + C19259) * C34730 + C38629 * C34731 + C43780 * C154415) *
                C154011 * C154393 -
            ((C41715 + C41714) * C154415 + C41701 * C34731 +
             (C20597 + C20598) * C34730 +
             (C15024 * C602 - C15025 * C585 - C15024 * C603 + C154268 * C621 +
              C15022 * C600 - C15023 * C584 - C15022 * C601 + C154408 * C620) *
                 C34729) *
                C154011 * C154146) *
               C1307 +
           (((C20598 + C20597) * C34729 + (C22383 + C22384) * C34730 +
             (C41714 + C41715) * C34731 +
             (C15022 * C5664 - C15023 * C5659 - C15022 * C5665 +
              C154408 * C5668 + C15024 * C28466 - C15025 * C28464 -
              C15024 * C28467 + C154268 * C28470) *
                 C154415) *
                C154011 * C154146 -
            (C44945 * C154415 + C40416 * C34731 + (C19260 + C19261) * C34730 +
             (C19259 + C19258) * C34729) *
                C154011 * C154393) *
               C154118) *
              C154384 +
          ((((C15654 + C15653) * C34729 + C20567 * C34730 + C39917 * C34731 +
             (C39930 + C39931) * C154415) *
                C154011 * C154146 -
            (C38630 * C154415 + C19214 * C34731 + C19215 * C34730 +
             (C15088 + C15087) * C34729) *
                C154011 * C154393) *
               C1307 +
           ((C19212 * C34729 + C19224 * C34730 + C38631 * C34731 +
             (C38644 + C38645) * C154415) *
                C154011 * C154393 -
            ((C15024 * C28468 - C15025 * C28465 - C15024 * C28469 +
              C154268 * C28471 + C15022 * C5662 - C15023 * C5658 -
              C15022 * C5663 + C154408 * C5667) *
                 C154415 +
             (C39931 + C39930) * C34731 + C39916 * C34730 + C20558 * C34729) *
                C154011 * C154146) *
               C154118) *
              C154053)) /
            (p * q * std::sqrt(p + q));
    d2ee[324] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
              C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
                 C154406 +
             (C19258 + C19259) * C154226) *
                C2902 +
            ((C15087 + C15088) * C154406 + C19212 * C154226) * C2903 +
            C18913 * C154429) *
               C154082 * C1307 -
           (C19877 * C154429 + (C19214 * C154226 + C19215 * C154406) * C2903 +
            ((C19260 + C19261) * C154226 + (C19259 + C19258) * C154406) *
                C2902) *
               C154082 * C154118) *
              C1309 +
          (((C19212 * C154406 + C19224 * C154226) * C2902 +
            (C18908 * C154406 + C19233 * C154226) * C2903 +
            (C19876 * C154406 + (C15381 + C15382) * C154226) * C154429) *
               C154082 * C154118 -
           (C18912 * C154429 +
            (C15856 * C154226 + (C15090 + C15089) * C154406) * C2903 +
            (C19215 * C154226 + (C15088 + C15087) * C154406) * C2902) *
               C154082 * C1307) *
              C1310 +
          ((C18913 * C2902 + (C15098 * C154406 + C19876 * C154226) * C2903 +
            ((C15094 + C15093) * C154406 + (C15871 + C15872) * C154226) *
                C154429) *
               C154082 * C1307 -
           (((C15024 * C1977 - C15025 * C1972 - C15024 * C1978 +
              C154268 * C1987 + C15022 * C373 - C15023 * C352 - C15022 * C374 +
              C154408 * C388) *
                 C154226 +
             (C15872 + C15871) * C154406) *
                C154429 +
            ((C15382 + C15381) * C154226 + C15855 * C154406) * C2903 +
            C19877 * C2902) *
               C154082 * C154118) *
              C1311)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
             C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
                C154406 +
            (C19258 + C19259) * C154226) *
               C2902 +
           ((C15087 + C15088) * C154406 + C19212 * C154226) * C2903 +
           C18913 * C154429) *
              C154082 * C1394 -
          (C19877 * C154429 + (C19214 * C154226 + C19215 * C154406) * C2903 +
           ((C19260 + C19261) * C154226 + (C19259 + C19258) * C154406) *
               C2902) *
              C154082 * C1395 +
          (((C19261 + C19260) * C154406 + (C21099 + C21100) * C154226) * C2902 +
           (C19224 * C154406 + (C19262 + C19263) * C154226) * C2903 +
           (C19233 * C154406 + (C19264 + C19265) * C154226) * C154429) *
              C154082 * C1396 -
          (((C15024 * C5660 - C15025 * C5657 - C15024 * C5661 +
             C154268 * C5666 + C15022 * C3147 - C15023 * C3141 -
             C15022 * C3148 + C154408 * C3153) *
                C154226 +
            (C19265 + C19264) * C154406) *
               C154429 +
           ((C15024 * C5662 - C15025 * C5658 - C15024 * C5663 +
             C154268 * C5667 + C15022 * C3145 - C15023 * C3140 -
             C15022 * C3146 + C154408 * C3152) *
                C154226 +
            (C19263 + C19262) * C154406) *
               C2903 +
           ((C15024 * C5664 - C15025 * C5659 - C15024 * C5665 +
             C154268 * C5668 + C15022 * C3143 - C15023 * C3139 -
             C15022 * C3144 + C154408 * C3151) *
                C154226 +
            (C21100 + C21099) * C154406) *
               C2902) *
              C154082 * C1397) *
         C154047) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
             C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
                C34729 +
            (C19258 + C19259) * C34730 + C38629 * C34731 + C43780 * C154415) *
               C154011 * C154082 * C1307 -
           ((C40430 + C40429) * C154415 + C40416 * C34731 +
            (C19260 + C19261) * C34730 + (C19259 + C19258) * C34729) *
               C154011 * C154082 * C154118) *
              C1309 +
          ((C19212 * C34729 + C19224 * C34730 + C38631 * C34731 +
            (C38644 + C38645) * C154415) *
               C154011 * C154082 * C154118 -
           (C38630 * C154415 + C19214 * C34731 + C19215 * C34730 +
            (C15088 + C15087) * C34729) *
               C154011 * C154082 * C1307) *
              C1310 +
          ((C15097 * C34729 + C18908 * C34730 + C19233 * C34731 +
            (C19264 + C19265) * C154415) *
               C154011 * C154082 * C1307 -
           ((C15024 * C5660 - C15025 * C5657 - C15024 * C5661 +
             C154268 * C5666 + C15022 * C3147 - C15023 * C3141 -
             C15022 * C3148 + C154408 * C3153) *
                C154415 +
            (C19265 + C19264) * C34731 + C19213 * C34730 + C15856 * C34729) *
               C154011 * C154082 * C154118) *
              C1311)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
            C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
               C34729 +
           (C19258 + C19259) * C34730 + C38629 * C34731 + C43780 * C154415) *
              C154011 * C154082 * C1394 -
          (C44945 * C154415 + C40416 * C34731 + (C19260 + C19261) * C34730 +
           (C19259 + C19258) * C34729) *
              C154011 * C154082 * C1395 +
          (C38629 * C34729 + C43780 * C34730 + (C40429 + C40430) * C34731 +
           (C44958 + C44959) * C154415) *
              C154011 * C154082 * C1396 -
          ((C15024 * C29662 - C15025 * C29661 - C15024 * C29663 +
            C154268 * C29664 + C15022 * C28322 - C15023 * C28320 -
            C15022 * C28323 + C154408 * C28326) *
               C154415 +
           (C44959 + C44958) * C34731 + C44945 * C34730 + C40416 * C34729) *
              C154011 * C154082 * C1397) *
         C154047) /
            (p * q * std::sqrt(p + q));
    d2ee[325] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
               C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
                  C154406 +
              (C19258 + C19259) * C154226) *
                 C2902 +
             ((C15087 + C15088) * C154406 + C19212 * C154226) * C2903 +
             C18913 * C154429) *
                C2114 -
            (C20171 * C154429 +
             (C20558 * C154226 + (C15653 + C15654) * C154406) * C2903 +
             ((C20597 + C20598) * C154226 +
              (C15024 * C602 - C15025 * C585 - C15024 * C603 + C154268 * C621 +
               C15022 * C600 - C15023 * C584 - C15022 * C601 + C154408 * C620) *
                  C154406) *
                 C2902) *
                C154146) *
               C154392 +
           ((((C20598 + C20597) * C154406 + (C22383 + C22384) * C154226) *
                 C2902 +
             (C20567 * C154406 + (C20599 + C20600) * C154226) * C2903 +
             (C20576 * C154406 + (C20601 + C20602) * C154226) * C154429) *
                C154146 -
            (C19877 * C154429 + (C19214 * C154226 + C19215 * C154406) * C2903 +
             ((C19260 + C19261) * C154226 + (C19259 + C19258) * C154406) *
                 C2902) *
                C2114) *
               C154118) *
              C154384 +
          (((((C15654 + C15653) * C154406 + C20567 * C154226) * C2902 +
             ((C15652 + C15651) * C154406 + C20576 * C154226) * C2903 +
             ((C15650 + C15649) * C154406 + (C16383 + C16384) * C154226) *
                 C154429) *
                C154146 -
            (C18912 * C154429 +
             (C15856 * C154226 + (C15090 + C15089) * C154406) * C2903 +
             (C19215 * C154226 + (C15088 + C15087) * C154406) * C2902) *
                C2114) *
               C154392 +
           (((C19212 * C154406 + C19224 * C154226) * C2902 +
             (C18908 * C154406 + C19233 * C154226) * C2903 +
             (C19876 * C154406 + (C15381 + C15382) * C154226) * C154429) *
                C2114 -
            (((C15024 * C3451 - C15025 * C3444 - C15024 * C3452 +
               C154268 * C3456 + C15022 * C1979 - C15023 * C1973 -
               C15022 * C1980 + C154408 * C1988) *
                  C154226 +
              (C16384 + C16383) * C154406) *
                 C154429 +
             ((C20602 + C20601) * C154226 + C20168 * C154406) * C2903 +
             ((C20600 + C20599) * C154226 + C20558 * C154406) * C2902) *
                C154146) *
               C154118) *
              C154053)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
              C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
                 C34729 +
             (C19258 + C19259) * C34730 + C38629 * C34731 + C43780 * C154415) *
                C154011 * C2114 -
            (C45814 * C154415 + C41701 * C34731 + (C20597 + C20598) * C34730 +
             (C15024 * C602 - C15025 * C585 - C15024 * C603 + C154268 * C621 +
              C15022 * C600 - C15023 * C584 - C15022 * C601 + C154408 * C620) *
                 C34729) *
                C154011 * C154146) *
               C154392 +
           (((C20598 + C20597) * C34729 + (C22383 + C22384) * C34730 +
             (C41714 + C41715) * C34731 + (C45827 + C45828) * C154415) *
                C154011 * C154146 -
            (C44945 * C154415 + C40416 * C34731 + (C19260 + C19261) * C34730 +
             (C19259 + C19258) * C34729) *
                C154011 * C2114) *
               C154118) *
              C154384 +
          ((((C15654 + C15653) * C34729 + C20567 * C34730 + C39917 * C34731 +
             (C39930 + C39931) * C154415) *
                C154011 * C154146 -
            (C38630 * C154415 + C19214 * C34731 + C19215 * C34730 +
             (C15088 + C15087) * C34729) *
                C154011 * C2114) *
               C154392 +
           ((C19212 * C34729 + C19224 * C34730 + C38631 * C34731 +
             (C38644 + C38645) * C154415) *
                C154011 * C2114 -
            ((C15024 * C28468 - C15025 * C28465 - C15024 * C28469 +
              C154268 * C28471 + C15022 * C5662 - C15023 * C5658 -
              C15022 * C5663 + C154408 * C5667) *
                 C154415 +
             (C39931 + C39930) * C34731 + C39916 * C34730 + C20558 * C34729) *
                C154011 * C154146) *
               C154118) *
              C154053)) /
            (p * q * std::sqrt(p + q));
    d2ee[326] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
              C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
                 C154406 +
             (C19258 + C19259) * C154226) *
                C2902 +
            ((C15087 + C15088) * C154406 + C19212 * C154226) * C2903 +
            C18913 * C154429) *
               C154465 -
           (C20171 * C154429 +
            (C20558 * C154226 + (C15653 + C15654) * C154406) * C2903 +
            ((C20597 + C20598) * C154226 +
             (C15024 * C602 - C15025 * C585 - C15024 * C603 + C154268 * C621 +
              C15022 * C600 - C15023 * C584 - C15022 * C601 + C154408 * C620) *
                 C154406) *
                C2902) *
               C154466 +
           (((C15022 * C602 - C15023 * C585 - C15022 * C603 + C154408 * C621 +
              C15024 * C2337 - C15025 * C2328 - C15024 * C2338 +
              C154268 * C2343) *
                 C154406 +
             (C21403 + C21404) * C154226) *
                C2902 +
            ((C15655 + C15656) * C154406 + (C19580 + C19581) * C154226) *
                C2903 +
            ((C15657 + C15658) * C154406 + (C19582 + C19583) * C154226) *
                C154429) *
               C2630) *
              C154392 +
          ((((C20598 + C20597) * C154406 + (C22383 + C22384) * C154226) *
                C2902 +
            (C20567 * C154406 + (C20599 + C20600) * C154226) * C2903 +
            (C20576 * C154406 + (C20601 + C20602) * C154226) * C154429) *
               C154466 -
           (C19877 * C154429 + (C19214 * C154226 + C19215 * C154406) * C2903 +
            ((C19260 + C19261) * C154226 + (C19259 + C19258) * C154406) *
                C2902) *
               C154465 -
           (((C15024 * C6264 - C15025 * C6258 - C15024 * C6265 +
              C154268 * C6276 + C15022 * C3449 - C15023 * C3443 -
              C15022 * C3450 + C154408 * C3455) *
                 C154226 +
             (C19583 + C19582) * C154406) *
                C154429 +
            ((C15024 * C6268 - C15025 * C6260 - C15024 * C6269 +
              C154268 * C6278 + C15022 * C3447 - C15023 * C3442 -
              C15022 * C3448 + C154408 * C3454) *
                 C154226 +
             (C19581 + C19580) * C154406) *
                C2903 +
            ((C15024 * C6272 - C15025 * C6262 - C15024 * C6273 +
              C154268 * C6280 + C15022 * C3445 - C15023 * C3441 -
              C15022 * C3446 + C154408 * C3453) *
                 C154226 +
             (C21404 + C21403) * C154406) *
                C2902) *
               C2630) *
              C154118) *
         C154047) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
             C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
                C34729 +
            (C19258 + C19259) * C34730 + C38629 * C34731 + C43780 * C154415) *
               C154011 * C154465 -
           (C45814 * C154415 + C41701 * C34731 + (C20597 + C20598) * C34730 +
            (C15024 * C602 - C15025 * C585 - C15024 * C603 + C154268 * C621 +
             C15022 * C600 - C15023 * C584 - C15022 * C601 + C154408 * C620) *
                C34729) *
               C154011 * C154466 +
           ((C15022 * C602 - C15023 * C585 - C15022 * C603 + C154408 * C621 +
             C15024 * C2337 - C15025 * C2328 - C15024 * C2338 +
             C154268 * C2343) *
                C34729 +
            (C21403 + C21404) * C34730 + (C40733 + C40734) * C34731 +
            (C45166 + C45167) * C154415) *
               C154011 * C2630) *
              C154392 +
          (((C20598 + C20597) * C34729 + (C22383 + C22384) * C34730 +
            (C41714 + C41715) * C34731 + (C45827 + C45828) * C154415) *
               C154011 * C154466 -
           (C44945 * C154415 + C40416 * C34731 + (C19260 + C19261) * C34730 +
            (C19259 + C19258) * C34729) *
               C154011 * C154465 -
           ((C15024 * C30000 - C15025 * C29998 - C15024 * C30001 +
             C154268 * C30004 + C15022 * C28466 - C15023 * C28464 -
             C15022 * C28467 + C154408 * C28470) *
                C154415 +
            (C45167 + C45166) * C34731 + (C40734 + C40733) * C34730 +
            (C21404 + C21403) * C34729) *
               C154011 * C2630) *
              C154118) *
         C154047) /
            (p * q * std::sqrt(p + q));
    d2ee[327] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
              C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
                 C154406 +
             (C19258 + C19259) * C154226) *
                C2902 +
            ((C15087 + C15088) * C154406 + C19212 * C154226) * C2903 +
            C18913 * C154429) *
               C2114 -
           (C20171 * C154429 +
            (C20558 * C154226 + (C15653 + C15654) * C154406) * C2903 +
            ((C20597 + C20598) * C154226 +
             (C15024 * C602 - C15025 * C585 - C15024 * C603 + C154268 * C621 +
              C15022 * C600 - C15023 * C584 - C15022 * C601 + C154408 * C620) *
                 C154406) *
                C2902) *
               C154146) *
              C338 +
          ((((C20598 + C20597) * C154406 + (C22383 + C22384) * C154226) *
                C2902 +
            (C20567 * C154406 + (C20599 + C20600) * C154226) * C2903 +
            (C20576 * C154406 + (C20601 + C20602) * C154226) * C154429) *
               C154146 -
           (C19877 * C154429 + (C19214 * C154226 + C19215 * C154406) * C2903 +
            ((C19260 + C19261) * C154226 + (C19259 + C19258) * C154406) *
                C2902) *
               C2114) *
              C339 +
          ((((C19261 + C19260) * C154406 + (C21099 + C21100) * C154226) *
                C2902 +
            (C19224 * C154406 + (C19262 + C19263) * C154226) * C2903 +
            (C19233 * C154406 + (C19264 + C19265) * C154226) * C154429) *
               C2114 -
           (((C15024 * C4908 - C15025 * C4905 - C15024 * C4909 +
              C154268 * C4914 + C15022 * C4262 - C15023 * C4256 -
              C15022 * C4263 + C154408 * C4268) *
                 C154226 +
             (C20602 + C20601) * C154406) *
                C154429 +
            ((C15024 * C4910 - C15025 * C4906 - C15024 * C4911 +
              C154268 * C4915 + C15022 * C4260 - C15023 * C4255 -
              C15022 * C4261 + C154408 * C4267) *
                 C154226 +
             (C20600 + C20599) * C154406) *
                C2903 +
            ((C15024 * C4912 - C15025 * C4907 - C15024 * C4913 +
              C154268 * C4916 + C15022 * C4258 - C15023 * C4254 -
              C15022 * C4259 + C154408 * C4266) *
                 C154226 +
             (C22384 + C22383) * C154406) *
                C2902) *
               C154146) *
              C340) *
         C154047) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
              C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
                 C154406 +
             (C19258 + C19259) * C154226) *
                C2902 +
            ((C15087 + C15088) * C154406 + C19212 * C154226) * C2903 +
            C18913 * C154429) *
               C2114 -
           (C20171 * C154429 +
            (C20558 * C154226 + (C15653 + C15654) * C154406) * C2903 +
            ((C20597 + C20598) * C154226 +
             (C15024 * C602 - C15025 * C585 - C15024 * C603 + C154268 * C621 +
              C15022 * C600 - C15023 * C584 - C15022 * C601 + C154408 * C620) *
                 C154406) *
                C2902) *
               C154146) *
              C154066 * C1309 +
          ((((C15654 + C15653) * C154406 + C20567 * C154226) * C2902 +
            ((C15652 + C15651) * C154406 + C20576 * C154226) * C2903 +
            ((C15650 + C15649) * C154406 + (C16383 + C16384) * C154226) *
                C154429) *
               C154146 -
           (C18912 * C154429 +
            (C15856 * C154226 + (C15090 + C15089) * C154406) * C2903 +
            (C19215 * C154226 + (C15088 + C15087) * C154406) * C2902) *
               C2114) *
              C154066 * C1310 +
          ((C18913 * C2902 + (C15098 * C154406 + C19876 * C154226) * C2903 +
            ((C15094 + C15093) * C154406 + (C15871 + C15872) * C154226) *
                C154429) *
               C2114 -
           (((C15024 * C1546 - C15025 * C1541 - C15024 * C1547 +
              C154268 * C1556 + C15022 * C1143 - C15023 * C1133 -
              C15022 * C1144 + C154408 * C1151) *
                 C154226 +
             (C16084 + C16083) * C154406) *
                C154429 +
            ((C16384 + C16383) * C154226 + C16067 * C154406) * C2903 +
            C20171 * C2902) *
               C154146) *
              C154066 * C1311)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
             C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
                C154406 +
            (C19258 + C19259) * C154226) *
               C2902 +
           ((C15087 + C15088) * C154406 + C19212 * C154226) * C2903 +
           C18913 * C154429) *
              C2320 -
          (C20171 * C154429 +
           (C20558 * C154226 + (C15653 + C15654) * C154406) * C2903 +
           ((C20597 + C20598) * C154226 +
            (C15024 * C602 - C15025 * C585 - C15024 * C603 + C154268 * C621 +
             C15022 * C600 - C15023 * C584 - C15022 * C601 + C154408 * C620) *
                C154406) *
               C2902) *
              C2321 +
          (((C15022 * C602 - C15023 * C585 - C15022 * C603 + C154408 * C621 +
             C15024 * C2337 - C15025 * C2328 - C15024 * C2338 +
             C154268 * C2343) *
                C154406 +
            (C21403 + C21404) * C154226) *
               C2902 +
           ((C15655 + C15656) * C154406 + (C19580 + C19581) * C154226) * C2903 +
           ((C15657 + C15658) * C154406 + (C19582 + C19583) * C154226) *
               C154429) *
              C2322 -
          (((C15024 * C9278 - C15025 * C9275 - C15024 * C9279 +
             C154268 * C9284 + C15022 * C6266 - C15023 * C6259 -
             C15022 * C6267 + C154408 * C6277) *
                C154226 +
            (C15024 * C7781 - C15025 * C7775 - C15024 * C7782 +
             C154268 * C7787 + C15022 * C2333 - C15023 * C2326 -
             C15022 * C2334 + C154408 * C2341) *
                C154406) *
               C154429 +
           ((C15024 * C9280 - C15025 * C9276 - C15024 * C9281 +
             C154268 * C9285 + C15022 * C6270 - C15023 * C6261 -
             C15022 * C6271 + C154408 * C6279) *
                C154226 +
            (C15024 * C7779 - C15025 * C7774 - C15024 * C7780 +
             C154268 * C7786 + C15022 * C2335 - C15023 * C2327 -
             C15022 * C2336 + C154408 * C2342) *
                C154406) *
               C2903 +
           ((C15024 * C9282 - C15025 * C9277 - C15024 * C9283 +
             C154268 * C9286 + C15022 * C6274 - C15023 * C6263 -
             C15022 * C6275 + C154408 * C6281) *
                C154226 +
            (C15024 * C7777 - C15025 * C7773 - C15024 * C7778 +
             C154268 * C7785 + C15022 * C2337 - C15023 * C2328 -
             C15022 * C2338 + C154408 * C2343) *
                C154406) *
               C2902) *
              C2323) *
         C154066 * C154047) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
             C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
                C34729 +
            (C19258 + C19259) * C34730 + C38629 * C34731 + C43780 * C154415) *
               C154011 * C2114 -
           (C45814 * C154415 + C41701 * C34731 + (C20597 + C20598) * C34730 +
            (C15024 * C602 - C15025 * C585 - C15024 * C603 + C154268 * C621 +
             C15022 * C600 - C15023 * C584 - C15022 * C601 + C154408 * C620) *
                C34729) *
               C154011 * C154146) *
              C154066 * C1309 +
          (((C15654 + C15653) * C34729 + C20567 * C34730 + C39917 * C34731 +
            (C39930 + C39931) * C154415) *
               C154011 * C154146 -
           (C38630 * C154415 + C19214 * C34731 + C19215 * C34730 +
            (C15088 + C15087) * C34729) *
               C154011 * C2114) *
              C154066 * C1310 +
          ((C15097 * C34729 + C18908 * C34730 + C19233 * C34731 +
            (C19264 + C19265) * C154415) *
               C154011 * C2114 -
           ((C15024 * C4908 - C15025 * C4905 - C15024 * C4909 +
             C154268 * C4914 + C15022 * C4262 - C15023 * C4256 -
             C15022 * C4263 + C154408 * C4268) *
                C154415 +
            (C20602 + C20601) * C34731 + C20168 * C34730 + C16068 * C34729) *
               C154011 * C154146) *
              C154066 * C1311)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
             C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
                C34729 +
            (C19258 + C19259) * C34730 + C38629 * C34731 + C43780 * C154415) *
               C154011 * C2114 -
           (C45814 * C154415 + C41701 * C34731 + (C20597 + C20598) * C34730 +
            (C15024 * C602 - C15025 * C585 - C15024 * C603 + C154268 * C621 +
             C15022 * C600 - C15023 * C584 - C15022 * C601 + C154408 * C620) *
                C34729) *
               C154011 * C154146) *
              C338 +
          (((C20598 + C20597) * C34729 + (C22383 + C22384) * C34730 +
            (C41714 + C41715) * C34731 + (C45827 + C45828) * C154415) *
               C154011 * C154146 -
           (C44945 * C154415 + C40416 * C34731 + (C19260 + C19261) * C34730 +
            (C19259 + C19258) * C34729) *
               C154011 * C2114) *
              C339 +
          ((C38629 * C34729 + C43780 * C34730 + (C40429 + C40430) * C34731 +
            (C44958 + C44959) * C154415) *
               C154011 * C2114 -
           ((C15024 * C29238 - C15025 * C29237 - C15024 * C29239 +
             C154268 * C29240 + C15022 * C28880 - C15023 * C28878 -
             C15022 * C28881 + C154408 * C28884) *
                C154415 +
            (C45828 + C45827) * C34731 + C45814 * C34730 + C41701 * C34729) *
               C154011 * C154146) *
              C340) *
         C154047) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
            C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
               C34729 +
           (C19258 + C19259) * C34730 + C38629 * C34731 + C43780 * C154415) *
              C154011 * C2320 -
          (C45814 * C154415 + C41701 * C34731 + (C20597 + C20598) * C34730 +
           (C15024 * C602 - C15025 * C585 - C15024 * C603 + C154268 * C621 +
            C15022 * C600 - C15023 * C584 - C15022 * C601 + C154408 * C620) *
               C34729) *
              C154011 * C2321 +
          ((C15022 * C602 - C15023 * C585 - C15022 * C603 + C154408 * C621 +
            C15024 * C2337 - C15025 * C2328 - C15024 * C2338 +
            C154268 * C2343) *
               C34729 +
           (C21403 + C21404) * C34730 + (C40733 + C40734) * C34731 +
           (C45166 + C45167) * C154415) *
              C154011 * C2322 -
          ((C15024 * C32489 - C15025 * C32488 - C15024 * C32490 +
            C154268 * C32491 + C15022 * C30002 - C15023 * C29999 -
            C15022 * C30003 + C154408 * C30005) *
               C154415 +
           (C15024 * C31084 - C15025 * C31082 - C15024 * C31085 +
            C154268 * C31088 + C15022 * C6272 - C15023 * C6262 -
            C15022 * C6273 + C154408 * C6280) *
               C34731 +
           (C15024 * C9282 - C15025 * C9277 - C15024 * C9283 + C154268 * C9286 +
            C15022 * C6274 - C15023 * C6263 - C15022 * C6275 +
            C154408 * C6281) *
               C34730 +
           (C15024 * C7777 - C15025 * C7773 - C15024 * C7778 + C154268 * C7785 +
            C15022 * C2337 - C15023 * C2328 - C15022 * C2338 +
            C154408 * C2343) *
               C34729) *
              C154011 * C2323) *
         C154066 * C154047) /
            (p * q * std::sqrt(p + q));
    d2ee[328] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
              C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
                 C154406 +
             (C19258 + C19259) * C154226) *
                C2902 +
            ((C15087 + C15088) * C154406 + C19212 * C154226) * C2903 +
            C18913 * C154429) *
               C154465 -
           (C20171 * C154429 +
            (C20558 * C154226 + (C15653 + C15654) * C154406) * C2903 +
            ((C20597 + C20598) * C154226 +
             (C15024 * C602 - C15025 * C585 - C15024 * C603 + C154268 * C621 +
              C15022 * C600 - C15023 * C584 - C15022 * C601 + C154408 * C620) *
                 C154406) *
                C2902) *
               C154466 +
           (((C15022 * C602 - C15023 * C585 - C15022 * C603 + C154408 * C621 +
              C15024 * C2337 - C15025 * C2328 - C15024 * C2338 +
              C154268 * C2343) *
                 C154406 +
             (C21403 + C21404) * C154226) *
                C2902 +
            ((C15655 + C15656) * C154406 + (C19580 + C19581) * C154226) *
                C2903 +
            ((C15657 + C15658) * C154406 + (C19582 + C19583) * C154226) *
                C154429) *
               C2630) *
              C154066 * C154384 +
          ((((C15654 + C15653) * C154406 + C20567 * C154226) * C2902 +
            ((C15652 + C15651) * C154406 + C20576 * C154226) * C2903 +
            ((C15650 + C15649) * C154406 + (C16383 + C16384) * C154226) *
                C154429) *
               C154466 -
           (C18912 * C154429 +
            (C15856 * C154226 + (C15090 + C15089) * C154406) * C2903 +
            (C19215 * C154226 + (C15088 + C15087) * C154406) * C2902) *
               C154465 -
           (((C15024 * C8648 - C15025 * C8647 - C15024 * C8649 +
              C154268 * C8650 + C15022 * C1548 - C15023 * C1542 -
              C15022 * C1549 + C154408 * C1557) *
                 C154226 +
             (C15660 + C15659) * C154406) *
                C154429 +
            ((C19583 + C19582) * C154226 + (C15658 + C15657) * C154406) *
                C2903 +
            ((C19581 + C19580) * C154226 + (C15656 + C15655) * C154406) *
                C2902) *
               C2630) *
              C154066 * C154053)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
             C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
                C34729 +
            (C19258 + C19259) * C34730 + C38629 * C34731 + C43780 * C154415) *
               C154011 * C154465 -
           (C45814 * C154415 + C41701 * C34731 + (C20597 + C20598) * C34730 +
            (C15024 * C602 - C15025 * C585 - C15024 * C603 + C154268 * C621 +
             C15022 * C600 - C15023 * C584 - C15022 * C601 + C154408 * C620) *
                C34729) *
               C154011 * C154466 +
           ((C15022 * C602 - C15023 * C585 - C15022 * C603 + C154408 * C621 +
             C15024 * C2337 - C15025 * C2328 - C15024 * C2338 +
             C154268 * C2343) *
                C34729 +
            (C21403 + C21404) * C34730 + (C40733 + C40734) * C34731 +
            (C45166 + C45167) * C154415) *
               C154011 * C2630) *
              C154066 * C154384 +
          (((C15654 + C15653) * C34729 + C20567 * C34730 + C39917 * C34731 +
            (C39930 + C39931) * C154415) *
               C154011 * C154466 -
           (C38630 * C154415 + C19214 * C34731 + C19215 * C34730 +
            (C15088 + C15087) * C34729) *
               C154011 * C154465 -
           ((C15024 * C31817 - C15025 * C31816 - C15024 * C31818 +
             C154268 * C31819 + C15022 * C4910 - C15023 * C4906 -
             C15022 * C4911 + C154408 * C4915) *
                C154415 +
            (C38949 + C38948) * C34731 + (C19581 + C19580) * C34730 +
            (C15656 + C15655) * C34729) *
               C154011 * C2630) *
              C154066 * C154053)) /
            (p * q * std::sqrt(p + q));
    d2ee[329] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
              C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
                 C154406 +
             (C19258 + C19259) * C154226) *
                C2902 +
            ((C15087 + C15088) * C154406 + C19212 * C154226) * C2903 +
            C18913 * C154429) *
               C2114 -
           (C20171 * C154429 +
            (C20558 * C154226 + (C15653 + C15654) * C154406) * C2903 +
            ((C20597 + C20598) * C154226 +
             (C15024 * C602 - C15025 * C585 - C15024 * C603 + C154268 * C621 +
              C15022 * C600 - C15023 * C584 - C15022 * C601 + C154408 * C620) *
                 C154406) *
                C2902) *
               C154146) *
              C154066 * C1309 +
          ((((C15654 + C15653) * C154406 + C20567 * C154226) * C2902 +
            ((C15652 + C15651) * C154406 + C20576 * C154226) * C2903 +
            ((C15650 + C15649) * C154406 + (C16383 + C16384) * C154226) *
                C154429) *
               C154146 -
           (C18912 * C154429 +
            (C15856 * C154226 + (C15090 + C15089) * C154406) * C2903 +
            (C19215 * C154226 + (C15088 + C15087) * C154406) * C2902) *
               C2114) *
              C154066 * C1310 +
          ((C18913 * C2902 + (C15098 * C154406 + C19876 * C154226) * C2903 +
            ((C15094 + C15093) * C154406 + (C15871 + C15872) * C154226) *
                C154429) *
               C2114 -
           (((C15024 * C1546 - C15025 * C1541 - C15024 * C1547 +
              C154268 * C1556 + C15022 * C1143 - C15023 * C1133 -
              C15022 * C1144 + C154408 * C1151) *
                 C154226 +
             (C16084 + C16083) * C154406) *
                C154429 +
            ((C16384 + C16383) * C154226 + C16067 * C154406) * C2903 +
            C20171 * C2902) *
               C154146) *
              C154066 * C1311)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
              C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
                 C154406 +
             (C19258 + C19259) * C154226) *
                C2902 +
            ((C15087 + C15088) * C154406 + C19212 * C154226) * C2903 +
            C18913 * C154429) *
               C2114 -
           (C20171 * C154429 +
            (C20558 * C154226 + (C15653 + C15654) * C154406) * C2903 +
            ((C20597 + C20598) * C154226 +
             (C15024 * C602 - C15025 * C585 - C15024 * C603 + C154268 * C621 +
              C15022 * C600 - C15023 * C584 - C15022 * C601 + C154408 * C620) *
                 C154406) *
                C2902) *
               C154146) *
              C338 +
          ((((C20598 + C20597) * C154406 + (C22383 + C22384) * C154226) *
                C2902 +
            (C20567 * C154406 + (C20599 + C20600) * C154226) * C2903 +
            (C20576 * C154406 + (C20601 + C20602) * C154226) * C154429) *
               C154146 -
           (C19877 * C154429 + (C19214 * C154226 + C19215 * C154406) * C2903 +
            ((C19260 + C19261) * C154226 + (C19259 + C19258) * C154406) *
                C2902) *
               C2114) *
              C339 +
          ((((C19261 + C19260) * C154406 + (C21099 + C21100) * C154226) *
                C2902 +
            (C19224 * C154406 + (C19262 + C19263) * C154226) * C2903 +
            (C19233 * C154406 + (C19264 + C19265) * C154226) * C154429) *
               C2114 -
           (((C15024 * C4908 - C15025 * C4905 - C15024 * C4909 +
              C154268 * C4914 + C15022 * C4262 - C15023 * C4256 -
              C15022 * C4263 + C154408 * C4268) *
                 C154226 +
             (C20602 + C20601) * C154406) *
                C154429 +
            ((C15024 * C4910 - C15025 * C4906 - C15024 * C4911 +
              C154268 * C4915 + C15022 * C4260 - C15023 * C4255 -
              C15022 * C4261 + C154408 * C4267) *
                 C154226 +
             (C20600 + C20599) * C154406) *
                C2903 +
            ((C15024 * C4912 - C15025 * C4907 - C15024 * C4913 +
              C154268 * C4916 + C15022 * C4258 - C15023 * C4254 -
              C15022 * C4259 + C154408 * C4266) *
                 C154226 +
             (C22384 + C22383) * C154406) *
                C2902) *
               C154146) *
              C340) *
         C154047) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
             C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
                C34729 +
            (C19258 + C19259) * C34730 + C38629 * C34731 + C43780 * C154415) *
               C154011 * C2114 -
           (C45814 * C154415 + C41701 * C34731 + (C20597 + C20598) * C34730 +
            (C15024 * C602 - C15025 * C585 - C15024 * C603 + C154268 * C621 +
             C15022 * C600 - C15023 * C584 - C15022 * C601 + C154408 * C620) *
                C34729) *
               C154011 * C154146) *
              C154066 * C1309 +
          (((C15654 + C15653) * C34729 + C20567 * C34730 + C39917 * C34731 +
            (C39930 + C39931) * C154415) *
               C154011 * C154146 -
           (C38630 * C154415 + C19214 * C34731 + C19215 * C34730 +
            (C15088 + C15087) * C34729) *
               C154011 * C2114) *
              C154066 * C1310 +
          ((C15097 * C34729 + C18908 * C34730 + C19233 * C34731 +
            (C19264 + C19265) * C154415) *
               C154011 * C2114 -
           ((C15024 * C4908 - C15025 * C4905 - C15024 * C4909 +
             C154268 * C4914 + C15022 * C4262 - C15023 * C4256 -
             C15022 * C4263 + C154408 * C4268) *
                C154415 +
            (C20602 + C20601) * C34731 + C20168 * C34730 + C16068 * C34729) *
               C154011 * C154146) *
              C154066 * C1311)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
             C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
                C34729 +
            (C19258 + C19259) * C34730 + C38629 * C34731 + C43780 * C154415) *
               C154011 * C2114 -
           (C45814 * C154415 + C41701 * C34731 + (C20597 + C20598) * C34730 +
            (C15024 * C602 - C15025 * C585 - C15024 * C603 + C154268 * C621 +
             C15022 * C600 - C15023 * C584 - C15022 * C601 + C154408 * C620) *
                C34729) *
               C154011 * C154146) *
              C338 +
          (((C20598 + C20597) * C34729 + (C22383 + C22384) * C34730 +
            (C41714 + C41715) * C34731 + (C45827 + C45828) * C154415) *
               C154011 * C154146 -
           (C44945 * C154415 + C40416 * C34731 + (C19260 + C19261) * C34730 +
            (C19259 + C19258) * C34729) *
               C154011 * C2114) *
              C339 +
          ((C38629 * C34729 + C43780 * C34730 + (C40429 + C40430) * C34731 +
            (C44958 + C44959) * C154415) *
               C154011 * C2114 -
           ((C15024 * C29238 - C15025 * C29237 - C15024 * C29239 +
             C154268 * C29240 + C15022 * C28880 - C15023 * C28878 -
             C15022 * C28881 + C154408 * C28884) *
                C154415 +
            (C45828 + C45827) * C34731 + C45814 * C34730 + C41701 * C34729) *
               C154011 * C154146) *
              C340) *
         C154047) /
            (p * q * std::sqrt(p + q));
    d2ee[330] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C154480 +
             C3210 * C154468 + C3211 * C154442) *
                C2902 +
            (C2906 + C2907 + C2908) * C2903 + C2920 * C154429) *
               C154082 * C154392 -
           (C3734 * C154429 + (C3219 + C3174 + C3175) * C2903 +
            (C3214 * C154442 + C3211 * C154468 + C3210 * C154480) * C2902) *
               C154082 * C154118) *
              C154461 +
          (((C3175 + C3174 + C3219) * C2902 + (C3169 + C3168 + C3218) * C2903 +
            (C3731 + C3732 + C3733) * C154429) *
               C154082 * C154118 -
           (C2921 * C154429 + (C2911 + C2910 + C2909) * C2903 +
            (C2908 + C2907 + C2906) * C2902) *
               C154082 * C154392) *
              C154462 +
          ((C2920 * C2902 + (C2914 + C2913 + C2912) * C2903 +
            (C2915 + C2916 + C2917) * C154429) *
               C154082 * C154392 -
           (((C134 * C1404 - C135 * C1399 - C134 * C1405 + C154181 * C1414) *
                 C154442 +
             C447 * C154468 + C440 * C154480) *
                C154429 +
            (C3733 + C3732 + C3731) * C2903 + C3734 * C2902) *
               C154082 * C154118) *
              C818)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                C154164 * C123 +
            C211 * C124 + C212 * C125 + C213 * C126 + C214 * C127) *
               C154082 * C154392 -
           (C448 * C127 + C449 * C126 + C450 * C125 + C451 * C124 +
            (C134 * C363 - C135 * C347 - C134 * C364 + C154181 * C383) *
                C154164 * C123) *
               C154082 * C154118) *
              C154461 +
          ((C451 * C123 + C450 * C124 + C449 * C125 + C448 * C126 +
            C831 * C127) *
               C154082 * C154118 -
           (C215 * C127 + C214 * C126 + C213 * C125 + C212 * C124 +
            C211 * C123) *
               C154082 * C154392) *
              C154462 +
          ((C212 * C123 + C213 * C124 + C214 * C125 + C215 * C126 +
            C216 * C127) *
               C154082 * C154392 -
           ((C134 * C820 - C135 * C819 - C134 * C821 + C154181 * C822) *
                C154164 * C127 +
            C831 * C126 + C448 * C125 + C449 * C124 + C450 * C123) *
               C154082 * C154118) *
              C818)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C7157 * C144 - C7158 * C136 - C7157 * C145 + C154481 * C160 +
             C7159 * C600 - C7160 * C584 - C7159 * C601 + C154470 * C620 +
             C7161 * C602 - C7162 * C585 - C7161 * C603 + C154445 * C621) *
                C154164 * C2902 +
            (C7236 + C7237 + C7238) * C154164 * C2903 + C7252 * C154429) *
               C154082 * C154392 -
           (C8109 * C154429 + (C7547 + C7548 + C7549) * C154164 * C2903 +
            (C7161 * C1554 - C7162 * C1545 - C7161 * C1555 + C154445 * C1560 +
             C7159 * C1135 - C7160 * C1129 - C7159 * C1136 + C154470 * C1147 +
             C7157 * C363 - C7158 * C347 - C7157 * C364 + C154481 * C383) *
                C154164 * C2902) *
               C154082 * C154118) *
              C154461 +
          (((C7549 + C7548 + C7547) * C154164 * C2902 +
            (C7546 + C7545 + C7544) * C154164 * C2903 +
            (C8113 + C8114 + C8115) * C154164 * C154429) *
               C154082 * C154118 -
           (C7253 * C154429 + (C7241 + C7240 + C7239) * C154164 * C2903 +
            (C7238 + C7237 + C7236) * C154164 * C2902) *
               C154082 * C154392) *
              C154462 +
          ((C7252 * C2902 + (C7244 + C7243 + C7242) * C154164 * C2903 +
            (C7245 + C7246 + C7247) * C154164 * C154429) *
               C154082 * C154392 -
           ((C7161 * C1546 - C7162 * C1541 - C7161 * C1547 + C154445 * C1556 +
             C7159 * C1143 - C7160 * C1133 - C7159 * C1144 + C154470 * C1151 +
             C7157 * C355 - C7158 * C343 - C7157 * C356 + C154481 * C379) *
                C154164 * C154429 +
            (C8115 + C8114 + C8113) * C154164 * C2903 + C8109 * C2902) *
               C154082 * C154118) *
              C818)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C24270 +
             C3210 * C24271 + C3211 * C154442) *
                C154477 +
            (C24277 + C24278 + C24279) * C154458 + C24291 * C154429) *
               C154082 * C154392 -
           (C24975 * C154429 + (C24514 + C24515 + C24516) * C154458 +
            (C3214 * C154442 + C3211 * C24271 + C3210 * C24270) * C154477) *
               C154082 * C154118) *
              C154461 +
          (((C24516 + C24515 + C24514) * C154477 +
            (C24513 + C24512 + C24511) * C154458 +
            (C24972 + C24973 + C24974) * C154429) *
               C154082 * C154118 -
           (C24292 * C154429 + (C24282 + C24281 + C24280) * C154458 +
            (C24279 + C24278 + C24277) * C154477) *
               C154082 * C154392) *
              C154462 +
          ((C24291 * C154477 + (C24285 + C24284 + C24283) * C154458 +
            (C24286 + C24287 + C24288) * C154429) *
               C154082 * C154392 -
           (((C134 * C1404 - C135 * C1399 - C134 * C1405 + C154181 * C1414) *
                 C154442 +
             C447 * C24271 + C440 * C24270) *
                C154429 +
            (C24974 + C24973 + C24972) * C154458 + C24975 * C154477) *
               C154082 * C154118) *
              C818)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                C28192 +
            C3210 * C28193 + C3211 * C28194 + C3214 * C28195 + C4687 * C28196) *
               C154011 * C154082 * C154392 -
           (C28341 * C28196 + C4687 * C28195 + C3214 * C28194 + C3211 * C28193 +
            C3210 * C28192) *
               C154011 * C154082 * C154118) *
              C154461 +
          ((C443 * C28192 + C444 * C28193 + C3213 * C28194 + C3215 * C28195 +
            C28342 * C28196) *
               C154011 * C154082 * C154118 -
           (C3215 * C28196 + C3213 * C28195 + C444 * C28194 + C443 * C28193 +
            C205 * C28192) *
               C154011 * C154082 * C154392) *
              C154462 +
          ((C206 * C28192 + C442 * C28193 + C445 * C28194 + C3212 * C28195 +
            C3216 * C28196) *
               C154011 * C154082 * C154392 -
           ((C134 * C4671 - C135 * C4668 - C134 * C4672 + C154181 * C4677) *
                C28196 +
            C3216 * C28195 + C3212 * C28194 + C445 * C28193 + C442 * C28192) *
               C154011 * C154082 * C154118) *
              C818)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C7157 * C144 - C7158 * C136 - C7157 * C145 + C154481 * C160 +
             C7159 * C600 - C7160 * C584 - C7159 * C601 + C154470 * C620 +
             C7161 * C602 - C7162 * C585 - C7161 * C603 + C154445 * C621) *
                C24270 +
            (C30851 + C30852 + C30853) * C24271 + C30864 * C154442) *
               C154011 * C154082 * C154392 -
           ((C30857 + C30858 + C30859) * C154442 +
            (C30856 + C30855 + C30854) * C24271 +
            (C30853 + C30852 + C30851) * C24270) *
               C154011 * C154082 * C154118) *
              C154461 +
          (((C7549 + C7548 + C7547) * C24270 +
            (C7550 + C7551 + C7552) * C24271 +
            (C30860 + C30861 + C30862) * C154442) *
               C154011 * C154082 * C154118 -
           (C30838 * C154442 + (C7547 + C7548 + C7549) * C24271 +
            (C7238 + C7237 + C7236) * C24270) *
               C154011 * C154082 * C154392) *
              C154462 +
          ((C7250 * C24270 + (C7546 + C7545 + C7544) * C24271 +
            (C7553 + C7554 + C7555) * C154442) *
               C154011 * C154082 * C154392 -
           ((C7161 * C4908 - C7162 * C4905 - C7161 * C4909 + C154445 * C4914 +
             C7159 * C4262 - C7160 * C4256 - C7159 * C4263 + C154470 * C4268 +
             C7157 * C1408 - C7158 * C1401 - C7157 * C1409 + C154481 * C1416) *
                C154442 +
            (C7555 + C7554 + C7553) * C24271 + C8105 * C24270) *
               C154011 * C154082 * C154118) *
              C818)) /
            (p * q * std::sqrt(p + q));
    d2ee[331] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                  C154480 +
              C3210 * C154468 + C3211 * C154442) *
                 C2902 +
             (C2906 + C2907 + C2908) * C2903 + C2920 * C154429) *
                C154393 -
            (C3960 * C154429 + (C3507 + C3468 + C3469) * C2903 +
             (C4299 * C154442 + C4300 * C154468 +
              (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                  C154480) *
                 C2902) *
                C154146) *
               C154392 +
           (((C4300 * C154480 + C4299 * C154468 +
              (C134 * C4258 - C135 * C4254 - C134 * C4259 + C154181 * C4266) *
                  C154442) *
                 C2902 +
             (C4279 + C4280 + C4303) * C2903 +
             (C4285 + C4286 + C4304) * C154429) *
                C154146 -
            (C3734 * C154429 + (C3219 + C3174 + C3175) * C2903 +
             (C3214 * C154442 + C3211 * C154468 + C3210 * C154480) * C2902) *
                C154393) *
               C154118) *
              C341 +
          ((((C3469 + C3468 + C3507) * C2902 + (C3463 + C3462 + C3506) * C2903 +
             (C3954 + C3955 + C3964) * C154429) *
                C154146 -
            (C2921 * C154429 + (C2911 + C2910 + C2909) * C2903 +
             (C2908 + C2907 + C2906) * C2902) *
                C154393) *
               C154392 +
           (((C3175 + C3174 + C3219) * C2902 + (C3169 + C3168 + C3218) * C2903 +
             (C3731 + C3732 + C3733) * C154429) *
                C154393 -
            (((C134 * C4264 - C135 * C4257 - C134 * C4265 + C154181 * C4269) *
                  C154442 +
              C3963 * C154468 + C1180 * C154480) *
                 C154429 +
             (C4304 + C4286 + C4285) * C2903 +
             (C4303 + C4280 + C4279) * C2902) *
                C154146) *
               C154118) *
              C154053)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C154164 * C123 +
             C211 * C124 + C212 * C125 + C213 * C126 + C214 * C127) *
                C154393 -
            (C685 * C127 + C686 * C126 + C687 * C125 + C688 * C124 +
             (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                 C154164 * C123) *
                C154146) *
               C154392 +
           (((C134 * C1135 - C135 * C1129 - C134 * C1136 + C154181 * C1147) *
                 C154164 * C123 +
             C1182 * C124 + C1183 * C125 + C1184 * C126 + C1185 * C127) *
                C154146 -
            (C448 * C127 + C449 * C126 + C450 * C125 + C451 * C124 +
             (C134 * C363 - C135 * C347 - C134 * C364 + C154181 * C383) *
                 C154164 * C123) *
                C154393) *
               C154118) *
              C341 +
          (((C688 * C123 + C687 * C124 + C686 * C125 + C685 * C126 +
             C967 * C127) *
                C154146 -
            (C215 * C127 + C214 * C126 + C213 * C125 + C212 * C124 +
             C211 * C123) *
                C154393) *
               C154392 +
           ((C451 * C123 + C450 * C124 + C449 * C125 + C448 * C126 +
             C831 * C127) *
                C154393 -
            ((C134 * C1145 - C135 * C1134 - C134 * C1146 + C154181 * C1152) *
                 C154164 * C127 +
             C1185 * C126 + C1184 * C125 + C1183 * C124 + C1182 * C123) *
                C154146) *
               C154118) *
              C154053)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C7157 * C144 - C7158 * C136 - C7157 * C145 + C154481 * C160 +
              C7159 * C600 - C7160 * C584 - C7159 * C601 + C154470 * C620 +
              C7161 * C602 - C7162 * C585 - C7161 * C603 + C154445 * C621) *
                 C154164 * C2902 +
             (C7236 + C7237 + C7238) * C154164 * C2903 + C7252 * C154429) *
                C154393 -
            (C8351 * C154429 + (C7865 + C7866 + C7867) * C154164 * C2903 +
             (C7161 * C2337 - C7162 * C2328 - C7161 * C2338 + C154445 * C2343 +
              C7159 * C602 - C7160 * C585 - C7159 * C603 + C154470 * C621 +
              C7157 * C600 - C7158 * C584 - C7157 * C601 + C154481 * C620) *
                 C154164 * C2902) *
                C154146) *
               C154392 +
           (((C7157 * C1135 - C7158 * C1129 - C7157 * C1136 + C154481 * C1147 +
              C7159 * C1554 - C7160 * C1545 - C7159 * C1555 + C154470 * C1560 +
              C7161 * C6274 - C7162 * C6263 - C7161 * C6275 + C154445 * C6281) *
                 C154164 * C2902 +
             (C8688 + C8689 + C8690) * C154164 * C2903 +
             (C8691 + C8692 + C8693) * C154164 * C154429) *
                C154146 -
            (C8109 * C154429 + (C7547 + C7548 + C7549) * C154164 * C2903 +
             (C7161 * C1554 - C7162 * C1545 - C7161 * C1555 + C154445 * C1560 +
              C7159 * C1135 - C7160 * C1129 - C7159 * C1136 + C154470 * C1147 +
              C7157 * C363 - C7158 * C347 - C7157 * C364 + C154481 * C383) *
                 C154164 * C2902) *
                C154393) *
               C154118) *
              C341 +
          ((((C7867 + C7866 + C7865) * C154164 * C2902 +
             (C7864 + C7863 + C7862) * C154164 * C2903 +
             (C8355 + C8356 + C8357) * C154164 * C154429) *
                C154146 -
            (C7253 * C154429 + (C7241 + C7240 + C7239) * C154164 * C2903 +
             (C7238 + C7237 + C7236) * C154164 * C2902) *
                C154393) *
               C154392 +
           (((C7549 + C7548 + C7547) * C154164 * C2902 +
             (C7546 + C7545 + C7544) * C154164 * C2903 +
             (C8113 + C8114 + C8115) * C154164 * C154429) *
                C154393 -
            ((C7161 * C8648 - C7162 * C8647 - C7161 * C8649 + C154445 * C8650 +
              C7159 * C1548 - C7160 * C1542 - C7159 * C1549 + C154470 * C1557 +
              C7157 * C1141 - C7158 * C1132 - C7157 * C1142 + C154481 * C1150) *
                 C154164 * C154429 +
             (C8693 + C8692 + C8691) * C154164 * C2903 +
             (C8690 + C8689 + C8688) * C154164 * C2902) *
                C154146) *
               C154118) *
              C154053)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                  C24270 +
              C3210 * C24271 + C3211 * C154442) *
                 C154477 +
             (C24277 + C24278 + C24279) * C154458 + C24291 * C154429) *
                C154393 -
            (C25198 * C154429 + (C24744 + C24745 + C24746) * C154458 +
             (C4299 * C154442 + C4300 * C24271 +
              (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                  C24270) *
                 C154477) *
                C154146) *
               C154392 +
           (((C4300 * C24270 + C4299 * C24271 + C5676 * C154442) * C154477 +
             (C25489 + C25490 + C25491) * C154458 +
             (C25492 + C25493 + C25494) * C154429) *
                C154146 -
            (C24975 * C154429 + (C24514 + C24515 + C24516) * C154458 +
             (C3214 * C154442 + C3211 * C24271 + C3210 * C24270) * C154477) *
                C154393) *
               C154118) *
              C341 +
          ((((C24746 + C24745 + C24744) * C154477 +
             (C24743 + C24742 + C24741) * C154458 +
             (C25195 + C25196 + C25197) * C154429) *
                C154146 -
            (C24292 * C154429 + (C24282 + C24281 + C24280) * C154458 +
             (C24279 + C24278 + C24277) * C154477) *
                C154393) *
               C154392 +
           (((C24516 + C24515 + C24514) * C154477 +
             (C24513 + C24512 + C24511) * C154458 +
             (C24972 + C24973 + C24974) * C154429) *
                C154393 -
            (((C134 * C4264 - C135 * C4257 - C134 * C4265 + C154181 * C4269) *
                  C154442 +
              C3963 * C24271 + C1180 * C24270) *
                 C154429 +
             (C25494 + C25493 + C25492) * C154458 +
             (C25491 + C25490 + C25489) * C154477) *
                C154146) *
               C154118) *
              C154053)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C28192 +
             C3210 * C28193 + C3211 * C28194 + C3214 * C28195 +
             C4687 * C28196) *
                C154011 * C154393 -
            (C28899 * C28196 + C5676 * C28195 + C4299 * C28194 +
             C4300 * C28193 +
             (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                 C28192) *
                C154011 * C154146) *
               C154392 +
           ((C4300 * C28192 + C4299 * C28193 + C5676 * C28194 +
             C28899 * C28195 +
             (C134 * C28880 - C135 * C28878 - C134 * C28881 +
              C154181 * C28884) *
                 C28196) *
                C154011 * C154146 -
            (C28341 * C28196 + C4687 * C28195 + C3214 * C28194 +
             C3211 * C28193 + C3210 * C28192) *
                C154011 * C154393) *
               C154118) *
              C341 +
          (((C680 * C28192 + C1178 * C28193 + C3501 * C28194 + C4301 * C28195 +
             C28900 * C28196) *
                C154011 * C154146 -
            (C3215 * C28196 + C3213 * C28195 + C444 * C28194 + C443 * C28193 +
             C205 * C28192) *
                C154011 * C154393) *
               C154392 +
           ((C443 * C28192 + C444 * C28193 + C3213 * C28194 + C3215 * C28195 +
             C28342 * C28196) *
                C154011 * C154393 -
            ((C134 * C28882 - C135 * C28879 - C134 * C28883 +
              C154181 * C28885) *
                 C28196 +
             C28900 * C28195 + C4301 * C28194 + C3501 * C28193 +
             C1178 * C28192) *
                C154011 * C154146) *
               C154118) *
              C154053)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C7157 * C144 - C7158 * C136 - C7157 * C145 + C154481 * C160 +
              C7159 * C600 - C7160 * C584 - C7159 * C601 + C154470 * C620 +
              C7161 * C602 - C7162 * C585 - C7161 * C603 + C154445 * C621) *
                 C24270 +
             (C30851 + C30852 + C30853) * C24271 + C30864 * C154442) *
                C154011 * C154393 -
            ((C31875 + C31876 + C31877) * C154442 +
             (C31878 + C31879 + C31880) * C24271 +
             (C7161 * C2337 - C7162 * C2328 - C7161 * C2338 + C154445 * C2343 +
              C7159 * C602 - C7160 * C585 - C7159 * C603 + C154470 * C621 +
              C7157 * C600 - C7158 * C584 - C7157 * C601 + C154481 * C620) *
                 C24270) *
                C154011 * C154146) *
               C154392 +
           (((C31880 + C31879 + C31878) * C24270 +
             (C31877 + C31876 + C31875) * C24271 +
             (C7157 * C4258 - C7158 * C4254 - C7157 * C4259 + C154481 * C4266 +
              C7159 * C4912 - C7160 * C4907 - C7159 * C4913 + C154470 * C4916 +
              C7161 * C30002 - C7162 * C29999 - C7161 * C30003 +
              C154445 * C30005) *
                 C154442) *
                C154011 * C154146 -
            ((C30857 + C30858 + C30859) * C154442 +
             (C30856 + C30855 + C30854) * C24271 +
             (C30853 + C30852 + C30851) * C24270) *
                C154011 * C154393) *
               C154118) *
              C341 +
          ((((C7867 + C7866 + C7865) * C24270 +
             (C8688 + C8689 + C8690) * C24271 +
             (C31881 + C31882 + C31883) * C154442) *
                C154011 * C154146 -
            (C30838 * C154442 + (C7547 + C7548 + C7549) * C24271 +
             (C7238 + C7237 + C7236) * C24270) *
                C154011 * C154393) *
               C154392 +
           (((C7549 + C7548 + C7547) * C24270 +
             (C7550 + C7551 + C7552) * C24271 +
             (C30860 + C30861 + C30862) * C154442) *
                C154011 * C154393 -
            ((C7161 * C31817 - C7162 * C31816 - C7161 * C31818 +
              C154445 * C31819 + C7159 * C4910 - C7160 * C4906 - C7159 * C4911 +
              C154470 * C4915 + C7157 * C4260 - C7158 * C4255 - C7157 * C4261 +
              C154481 * C4267) *
                 C154442 +
             (C31883 + C31882 + C31881) * C24271 +
             (C8690 + C8689 + C8688) * C24270) *
                C154011 * C154146) *
               C154118) *
              C154053)) /
            (p * q * std::sqrt(p + q));
    d2ee[332] +=
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             (((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                   C154164 * C123 +
               C211 * C124 + C212 * C125 + C213 * C126 + C214 * C127) *
                  C154082 * C154066 * C130 -
              (C215 * C127 + C214 * C126 + C213 * C125 + C212 * C124 +
               C211 * C123) *
                  C154082 * C154066 * C131 +
              (C212 * C123 + C213 * C124 + C214 * C125 + C215 * C126 +
               C216 * C127) *
                  C154082 * C154066 * C132 -
              ((C134 * C158 - C135 * C143 - C134 * C159 + C154181 * C167) *
                   C154164 * C127 +
               C216 * C126 + C215 * C125 + C214 * C124 + C213 * C123) *
                  C154082 * C154066 * C133) +
         std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             ((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                    C154164 * C123 +
                C211 * C124 + C212 * C125 + C213 * C126 + C214 * C127) *
                   C154082 * C338 -
               (C448 * C127 + C449 * C126 + C450 * C125 + C451 * C124 +
                (C134 * C363 - C135 * C347 - C134 * C364 + C154181 * C383) *
                    C154164 * C123) *
                   C154082 * C339 +
               ((C134 * C365 - C135 * C348 - C134 * C366 + C154181 * C384) *
                    C154164 * C123 +
                C452 * C124 + C453 * C125 + C454 * C126 + C455 * C127) *
                   C154082 * C340) *
                  C341 +
              ((C451 * C123 + C450 * C124 + C449 * C125 + C448 * C126 +
                (C134 * C375 - C135 * C353 - C134 * C376 + C154181 * C389) *
                    C154164 * C127) *
                   C154082 * C339 -
               (C215 * C127 + C214 * C126 + C213 * C125 + C212 * C124 +
                C211 * C123) *
                   C154082 * C338 -
               ((C134 * C377 - C135 * C354 - C134 * C378 + C154181 * C390) *
                    C154164 * C127 +
                C455 * C126 + C454 * C125 + C453 * C124 + C452 * C123) *
                   C154082 * C340) *
                  C154053)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                C154164 * C123 +
            C211 * C124 + C212 * C125 + C213 * C126 + C214 * C127) *
               C577 -
           (C685 * C127 + C686 * C126 + C687 * C125 + C688 * C124 +
            (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                C154164 * C123) *
               C578 +
           ((C134 * C602 - C135 * C585 - C134 * C603 + C154181 * C621) *
                C154164 * C123 +
            C689 * C124 + C690 * C125 + C691 * C126 + C692 * C127) *
               C579) *
              C154066 * C341 +
          ((C688 * C123 + C687 * C124 + C686 * C125 + C685 * C126 +
            (C134 * C612 - C135 * C590 - C134 * C613 + C154181 * C626) *
                C154164 * C127) *
               C578 -
           (C215 * C127 + C214 * C126 + C213 * C125 + C212 * C124 +
            C211 * C123) *
               C577 -
           ((C134 * C614 - C135 * C591 - C134 * C615 + C154181 * C627) *
                C154164 * C127 +
            C692 * C126 + C691 * C125 + C690 * C124 + C689 * C123) *
               C579) *
              C154066 * C154053)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                C154480 +
            (C134 * C363 - C135 * C347 - C134 * C364 + C154181 * C383) *
                C154468 +
            (C134 * C365 - C135 * C348 - C134 * C366 + C154181 * C384) *
                C154442) *
               C2902 +
           (C2906 + C2907 + C2908) * C2903 + C2920 * C154429) *
              C154082 * C154066 * C130 -
          (C2921 * C154429 + (C2911 + C2910 + C2909) * C2903 +
           (C2908 + C2907 + C2906) * C2902) *
              C154082 * C154066 * C131 +
          (C2920 * C2902 + (C2914 + C2913 + C2912) * C2903 +
           (C2915 + C2916 + C2917) * C154429) *
              C154082 * C154066 * C132 -
          (((C134 * C377 - C135 * C354 - C134 * C378 + C154181 * C390) *
                C154442 +
            C830 * C154468 + C209 * C154480) *
               C154429 +
           (C2917 + C2916 + C2915) * C2903 + C2921 * C2902) *
              C154082 * C154066 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C154480 +
             C3210 * C154468 + C3211 * C154442) *
                C2902 +
            (C2906 + C2907 + C2908) * C2903 + C2920 * C154429) *
               C154082 * C338 -
           ((C3218 + C3168 + C3169) * C154429 +
            (C3219 + C3174 + C3175) * C2903 +
            (C3214 * C154442 + C3211 * C154468 + C3210 * C154480) * C2902) *
               C154082 * C339 +
           ((C3211 * C154480 + C3214 * C154468 +
             (C134 * C3143 - C135 * C3139 - C134 * C3144 + C154181 * C3151) *
                 C154442) *
                C2902 +
            (C3180 + C3220 + C3221) * C2903 +
            (C3185 + C3222 + C3223) * C154429) *
               C154082 * C340) *
              C341 +
          (((C3175 + C3174 + C3219) * C2902 + (C3169 + C3168 + C3218) * C2903 +
            (C441 * C154480 + C446 * C154468 + C3217 * C154442) * C154429) *
               C154082 * C339 -
           (C2921 * C154429 + (C2911 + C2910 + C2909) * C2903 +
            (C2908 + C2907 + C2906) * C2902) *
               C154082 * C338 -
           (((C134 * C3149 - C135 * C3142 - C134 * C3150 + C154181 * C3154) *
                 C154442 +
             C3217 * C154468 + C446 * C154480) *
                C154429 +
            (C3223 + C3222 + C3185) * C2903 + (C3221 + C3220 + C3180) * C2902) *
               C154082 * C340) *
              C154053)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C154480 +
             C3210 * C154468 + C3211 * C154442) *
                C2902 +
            (C2906 + C2907 + C2908) * C2903 + C2920 * C154429) *
               C577 -
           ((C3506 + C3462 + C3463) * C154429 +
            (C3507 + C3468 + C3469) * C2903 +
            ((C134 * C1985 - C135 * C1976 - C134 * C1986 + C154181 * C1991) *
                 C154442 +
             (C134 * C1135 - C135 * C1129 - C134 * C1136 + C154181 * C1147) *
                 C154468 +
             (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                 C154480) *
                C2902) *
               C578 +
           (((C134 * C602 - C135 * C585 - C134 * C603 + C154181 * C621) *
                 C154480 +
             (C134 * C1554 - C135 * C1545 - C134 * C1555 + C154181 * C1560) *
                 C154468 +
             (C134 * C3445 - C135 * C3441 - C134 * C3446 + C154181 * C3453) *
                 C154442) *
                C2902 +
            (C3470 + C3508 + C3509) * C2903 +
            (C3479 + C3510 + C3511) * C154429) *
               C579) *
              C154066 * C341 +
          (((C3469 + C3468 + C3507) * C2902 + (C3463 + C3462 + C3506) * C2903 +
            (C678 * C154480 + C1180 * C154468 +
             (C134 * C1979 - C135 * C1973 - C134 * C1980 + C154181 * C1988) *
                 C154442) *
                C154429) *
               C578 -
           (C2921 * C154429 + (C2911 + C2910 + C2909) * C2903 +
            (C2908 + C2907 + C2906) * C2902) *
               C577 -
           (((C134 * C3451 - C135 * C3444 - C134 * C3452 + C154181 * C3456) *
                 C154442 +
             (C134 * C1548 - C135 * C1542 - C134 * C1549 + C154181 * C1557) *
                 C154468 +
             C683 * C154480) *
                C154429 +
            (C3511 + C3510 + C3479) * C2903 + (C3509 + C3508 + C3470) * C2902) *
               C579) *
              C154066 * C154053)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C7157 * C144 - C7158 * C136 - C7157 * C145 + C154481 * C160 +
            C7159 * C600 - C7160 * C584 - C7159 * C601 + C154470 * C620 +
            C7161 * C602 - C7162 * C585 - C7161 * C603 + C154445 * C621) *
               C154164 * C2902 +
           (C7236 + C7237 + C7238) * C154164 * C2903 + C7252 * C154429) *
              C154082 * C154066 * C130 -
          (C7253 * C154429 + (C7241 + C7240 + C7239) * C154164 * C2903 +
           (C7238 + C7237 + C7236) * C154164 * C2902) *
              C154082 * C154066 * C131 +
          (C7252 * C2902 + (C7244 + C7243 + C7242) * C154164 * C2903 +
           (C7245 + C7246 + C7247) * C154164 * C154429) *
              C154082 * C154066 * C132 -
          ((C7161 * C614 - C7162 * C591 - C7161 * C615 + C154445 * C627 +
            C7159 * C612 - C7160 * C590 - C7159 * C613 + C154470 * C626 +
            C7157 * C154 - C7158 * C141 - C7157 * C155 + C154481 * C165) *
               C154164 * C154429 +
           (C7247 + C7246 + C7245) * C154164 * C2903 + C7253 * C2902) *
              C154082 * C154066 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C7157 * C144 - C7158 * C136 - C7157 * C145 + C154481 * C160 +
             C7159 * C600 - C7160 * C584 - C7159 * C601 + C154470 * C620 +
             C7161 * C602 - C7162 * C585 - C7161 * C603 + C154445 * C621) *
                C154164 * C2902 +
            (C7236 + C7237 + C7238) * C154164 * C2903 + C7252 * C154429) *
               C154082 * C338 -
           ((C7544 + C7545 + C7546) * C154164 * C154429 +
            (C7547 + C7548 + C7549) * C154164 * C2903 +
            (C7161 * C1554 - C7162 * C1545 - C7161 * C1555 + C154445 * C1560 +
             C7159 * C1135 - C7160 * C1129 - C7159 * C1136 + C154470 * C1147 +
             C7157 * C363 - C7158 * C347 - C7157 * C364 + C154481 * C383) *
                C154164 * C2902) *
               C154082 * C339 +
           ((C7157 * C365 - C7158 * C348 - C7157 * C366 + C154481 * C384 +
             C7159 * C1985 - C7160 * C1976 - C7159 * C1986 + C154470 * C1991 +
             C7161 * C3445 - C7162 * C3441 - C7161 * C3446 + C154445 * C3453) *
                C154164 * C2902 +
            (C7550 + C7551 + C7552) * C154164 * C2903 +
            (C7553 + C7554 + C7555) * C154164 * C154429) *
               C154082 * C340) *
              C341 +
          (((C7549 + C7548 + C7547) * C154164 * C2902 +
            (C7546 + C7545 + C7544) * C154164 * C2903 +
            (C7157 * C357 - C7158 * C344 - C7157 * C358 + C154481 * C380 +
             C7159 * C1141 - C7160 * C1132 - C7159 * C1142 + C154470 * C1150 +
             C7161 * C1548 - C7162 * C1542 - C7161 * C1549 + C154445 * C1557) *
                C154164 * C154429) *
               C154082 * C339 -
           (C7253 * C154429 + (C7241 + C7240 + C7239) * C154164 * C2903 +
            (C7238 + C7237 + C7236) * C154164 * C2902) *
               C154082 * C338 -
           ((C7161 * C3451 - C7162 * C3444 - C7161 * C3452 + C154445 * C3456 +
             C7159 * C1979 - C7160 * C1973 - C7159 * C1980 + C154470 * C1988 +
             C7157 * C371 - C7158 * C351 - C7157 * C372 + C154481 * C387) *
                C154164 * C154429 +
            (C7555 + C7554 + C7553) * C154164 * C2903 +
            (C7552 + C7551 + C7550) * C154164 * C2902) *
               C154082 * C340) *
              C154053)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C7157 * C144 - C7158 * C136 - C7157 * C145 + C154481 * C160 +
             C7159 * C600 - C7160 * C584 - C7159 * C601 + C154470 * C620 +
             C7161 * C602 - C7162 * C585 - C7161 * C603 + C154445 * C621) *
                C154164 * C2902 +
            (C7236 + C7237 + C7238) * C154164 * C2903 + C7252 * C154429) *
               C577 -
           ((C7862 + C7863 + C7864) * C154164 * C154429 +
            (C7865 + C7866 + C7867) * C154164 * C2903 +
            (C7161 * C2337 - C7162 * C2328 - C7161 * C2338 + C154445 * C2343 +
             C7159 * C602 - C7160 * C585 - C7159 * C603 + C154470 * C621 +
             C7157 * C600 - C7158 * C584 - C7157 * C601 + C154481 * C620) *
                C154164 * C2902) *
               C578 +
           ((C7157 * C602 - C7158 * C585 - C7157 * C603 + C154481 * C621 +
             C7159 * C2337 - C7160 * C2328 - C7159 * C2338 + C154470 * C2343 +
             C7161 * C7777 - C7162 * C7773 - C7161 * C7778 + C154445 * C7785) *
                C154164 * C2902 +
            (C7868 + C7869 + C7870) * C154164 * C2903 +
            (C7871 + C7872 + C7873) * C154164 * C154429) *
               C579) *
              C154066 * C341 +
          (((C7867 + C7866 + C7865) * C154164 * C2902 +
            (C7864 + C7863 + C7862) * C154164 * C2903 +
            (C7157 * C594 - C7158 * C581 - C7157 * C595 + C154481 * C617 +
             C7159 * C608 - C7160 * C588 - C7159 * C609 + C154470 * C624 +
             C7161 * C2331 - C7162 * C2325 - C7161 * C2332 + C154445 * C2340) *
                C154164 * C154429) *
               C578 -
           (C7253 * C154429 + (C7241 + C7240 + C7239) * C154164 * C2903 +
            (C7238 + C7237 + C7236) * C154164 * C2902) *
               C577 -
           ((C7161 * C7783 - C7162 * C7776 - C7161 * C7784 + C154445 * C7788 +
             C7159 * C2331 - C7160 * C2325 - C7159 * C2332 + C154470 * C2340 +
             C7157 * C608 - C7158 * C588 - C7157 * C609 + C154481 * C624) *
                C154164 * C154429 +
            (C7873 + C7872 + C7871) * C154164 * C2903 +
            (C7870 + C7869 + C7868) * C154164 * C2902) *
               C579) *
              C154066 * C154053)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                C24270 +
            C3210 * C24271 + C3211 * C154442) *
               C154477 +
           (C24277 + C24278 + C24279) * C154458 + C24291 * C154429) *
              C154082 * C154066 * C130 -
          (C24292 * C154429 + (C24282 + C24281 + C24280) * C154458 +
           (C24279 + C24278 + C24277) * C154477) *
              C154082 * C154066 * C131 +
          (C24291 * C154477 + (C24285 + C24284 + C24283) * C154458 +
           (C24286 + C24287 + C24288) * C154429) *
              C154082 * C154066 * C132 -
          (((C134 * C377 - C135 * C354 - C134 * C378 + C154181 * C390) *
                C154442 +
            C830 * C24271 + C209 * C24270) *
               C154429 +
           (C24288 + C24287 + C24286) * C154458 + C24292 * C154477) *
              C154082 * C154066 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C24270 +
             C3210 * C24271 + C3211 * C154442) *
                C154477 +
            (C24277 + C24278 + C24279) * C154458 + C24291 * C154429) *
               C154082 * C338 -
           ((C24511 + C24512 + C24513) * C154429 +
            (C24514 + C24515 + C24516) * C154458 +
            (C3214 * C154442 + C3211 * C24271 + C3210 * C24270) * C154477) *
               C154082 * C339 +
           ((C3211 * C24270 + C3214 * C24271 + C4687 * C154442) * C154477 +
            (C24517 + C24518 + C24519) * C154458 +
            (C24520 + C24521 + C24522) * C154429) *
               C154082 * C340) *
              C341 +
          (((C24516 + C24515 + C24514) * C154477 +
            (C24513 + C24512 + C24511) * C154458 +
            (C441 * C24270 + C446 * C24271 + C3217 * C154442) * C154429) *
               C154082 * C339 -
           (C24292 * C154429 + (C24282 + C24281 + C24280) * C154458 +
            (C24279 + C24278 + C24277) * C154477) *
               C154082 * C338 -
           (((C134 * C3149 - C135 * C3142 - C134 * C3150 + C154181 * C3154) *
                 C154442 +
             C3217 * C24271 + C446 * C24270) *
                C154429 +
            (C24522 + C24521 + C24520) * C154458 +
            (C24519 + C24518 + C24517) * C154477) *
               C154082 * C340) *
              C154053)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C24270 +
             C3210 * C24271 + C3211 * C154442) *
                C154477 +
            (C24277 + C24278 + C24279) * C154458 + C24291 * C154429) *
               C577 -
           ((C24741 + C24742 + C24743) * C154429 +
            (C24744 + C24745 + C24746) * C154458 +
            (C4299 * C154442 + C4300 * C24271 +
             (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                 C24270) *
                C154477) *
               C578 +
           (((C134 * C602 - C135 * C585 - C134 * C603 + C154181 * C621) *
                 C24270 +
             C4930 * C24271 + C4931 * C154442) *
                C154477 +
            (C24747 + C24748 + C24749) * C154458 +
            (C24750 + C24751 + C24752) * C154429) *
               C579) *
              C154066 * C341 +
          (((C24746 + C24745 + C24744) * C154477 +
            (C24743 + C24742 + C24741) * C154458 +
            (C678 * C24270 + C1180 * C24271 + C3963 * C154442) * C154429) *
               C578 -
           (C24292 * C154429 + (C24282 + C24281 + C24280) * C154458 +
            (C24279 + C24278 + C24277) * C154477) *
               C577 -
           (((C134 * C3451 - C135 * C3444 - C134 * C3452 + C154181 * C3456) *
                 C154442 +
             C11901 * C24271 + C683 * C24270) *
                C154429 +
            (C24752 + C24751 + C24750) * C154458 +
            (C24749 + C24748 + C24747) * C154477) *
               C579) *
              C154066 * C154053)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) * C28192 +
           C3210 * C28193 + C3211 * C28194 + C3214 * C28195 + C4687 * C28196) *
              C154011 * C154082 * C154066 * C130 -
          (C3215 * C28196 + C3213 * C28195 + C444 * C28194 + C443 * C28193 +
           C205 * C28192) *
              C154011 * C154082 * C154066 * C131 +
          (C206 * C28192 + C442 * C28193 + C445 * C28194 + C3212 * C28195 +
           C3216 * C28196) *
              C154011 * C154082 * C154066 * C132 -
          ((C134 * C3149 - C135 * C3142 - C134 * C3150 + C154181 * C3154) *
               C28196 +
           C3217 * C28195 + C446 * C28194 + C441 * C28193 + C207 * C28192) *
              C154011 * C154082 * C154066 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                C28192 +
            C3210 * C28193 + C3211 * C28194 + C3214 * C28195 + C4687 * C28196) *
               C154011 * C154082 * C338 -
           (C28341 * C28196 + C4687 * C28195 + C3214 * C28194 + C3211 * C28193 +
            C3210 * C28192) *
               C154011 * C154082 * C339 +
           (C3211 * C28192 + C3214 * C28193 + C4687 * C28194 + C28341 * C28195 +
            (C134 * C28322 - C135 * C28320 - C134 * C28323 + C154181 * C28326) *
                C28196) *
               C154011 * C154082 * C340) *
              C341 +
          ((C443 * C28192 + C444 * C28193 + C3213 * C28194 + C3215 * C28195 +
            C28342 * C28196) *
               C154011 * C154082 * C339 -
           (C3215 * C28196 + C3213 * C28195 + C444 * C28194 + C443 * C28193 +
            C205 * C28192) *
               C154011 * C154082 * C338 -
           ((C134 * C28324 - C135 * C28321 - C134 * C28325 + C154181 * C28327) *
                C28196 +
            C28342 * C28195 + C3215 * C28194 + C3213 * C28193 + C444 * C28192) *
               C154011 * C154082 * C340) *
              C154053)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                C28192 +
            C3210 * C28193 + C3211 * C28194 + C3214 * C28195 + C4687 * C28196) *
               C154011 * C577 -
           ((C134 * C5664 - C135 * C5659 - C134 * C5665 + C154181 * C5668) *
                C28196 +
            C5676 * C28195 + C4299 * C28194 + C4300 * C28193 +
            (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                C28192) *
               C154011 * C578 +
           ((C134 * C602 - C135 * C585 - C134 * C603 + C154181 * C621) *
                C28192 +
            C4930 * C28193 + C4931 * C28194 +
            (C134 * C4912 - C135 * C4907 - C134 * C4913 + C154181 * C4916) *
                C28195 +
            (C134 * C28466 - C135 * C28464 - C134 * C28467 + C154181 * C28470) *
                C28196) *
               C154011 * C579) *
              C154066 * C341 +
          ((C680 * C28192 + C1178 * C28193 + C3501 * C28194 + C4301 * C28195 +
            (C134 * C5662 - C135 * C5658 - C134 * C5663 + C154181 * C5667) *
                C28196) *
               C154011 * C578 -
           (C3215 * C28196 + C3213 * C28195 + C444 * C28194 + C443 * C28193 +
            C205 * C28192) *
               C154011 * C577 -
           ((C134 * C28468 - C135 * C28465 - C134 * C28469 + C154181 * C28471) *
                C28196 +
            (C134 * C4910 - C135 * C4906 - C134 * C4911 + C154181 * C4915) *
                C28195 +
            C3503 * C28194 + C3502 * C28193 + C681 * C28192) *
               C154011 * C579) *
              C154066 * C154053)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C7157 * C144 - C7158 * C136 - C7157 * C145 + C154481 * C160 +
            C7159 * C600 - C7160 * C584 - C7159 * C601 + C154470 * C620 +
            C7161 * C602 - C7162 * C585 - C7161 * C603 + C154445 * C621) *
               C24270 +
           (C7157 * C363 - C7158 * C347 - C7157 * C364 + C154481 * C383 +
            C7159 * C1135 - C7160 * C1129 - C7159 * C1136 + C154470 * C1147 +
            C7161 * C1554 - C7162 * C1545 - C7161 * C1555 + C154445 * C1560) *
               C24271 +
           (C7157 * C365 - C7158 * C348 - C7157 * C366 + C154481 * C384 +
            C7159 * C1985 - C7160 * C1976 - C7159 * C1986 + C154470 * C1991 +
            C7161 * C3445 - C7162 * C3441 - C7161 * C3446 + C154445 * C3453) *
               C154442) *
              C154011 * C154082 * C154066 * C130 -
          ((C7552 + C7551 + C7550) * C154442 +
           (C7547 + C7548 + C7549) * C24271 +
           (C7238 + C7237 + C7236) * C24270) *
              C154011 * C154082 * C154066 * C131 +
          (C7250 * C24270 + (C7546 + C7545 + C7544) * C24271 +
           (C7553 + C7554 + C7555) * C154442) *
              C154011 * C154082 * C154066 * C132 -
          ((C7161 * C3451 - C7162 * C3444 - C7161 * C3452 + C154445 * C3456 +
            C7159 * C1979 - C7160 * C1973 - C7159 * C1980 + C154470 * C1988 +
            C7157 * C371 - C7158 * C351 - C7157 * C372 + C154481 * C387) *
               C154442 +
           (C8115 + C8114 + C8113) * C24271 + C7251 * C24270) *
              C154011 * C154082 * C154066 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C7157 * C144 - C7158 * C136 - C7157 * C145 + C154481 * C160 +
             C7159 * C600 - C7160 * C584 - C7159 * C601 + C154470 * C620 +
             C7161 * C602 - C7162 * C585 - C7161 * C603 + C154445 * C621) *
                C24270 +
            (C30851 + C30852 + C30853) * C24271 + C30864 * C154442) *
               C154011 * C154082 * C338 -
           ((C30857 + C30858 + C30859) * C154442 +
            (C30856 + C30855 + C30854) * C24271 +
            (C30853 + C30852 + C30851) * C24270) *
               C154011 * C154082 * C339 +
           (C30864 * C24270 + (C30859 + C30858 + C30857) * C24271 +
            (C7157 * C3143 - C7158 * C3139 - C7157 * C3144 + C154481 * C3151 +
             C7159 * C5664 - C7160 * C5659 - C7159 * C5665 + C154470 * C5668 +
             C7161 * C28466 - C7162 * C28464 - C7161 * C28467 +
             C154445 * C28470) *
                C154442) *
               C154011 * C154082 * C340) *
              C341 +
          (((C7549 + C7548 + C7547) * C24270 +
            (C7550 + C7551 + C7552) * C24271 +
            (C30860 + C30861 + C30862) * C154442) *
               C154011 * C154082 * C339 -
           (C30838 * C154442 + (C7547 + C7548 + C7549) * C24271 +
            (C7238 + C7237 + C7236) * C24270) *
               C154011 * C154082 * C338 -
           ((C7161 * C28468 - C7162 * C28465 - C7161 * C28469 +
             C154445 * C28471 + C7159 * C5662 - C7160 * C5658 - C7159 * C5663 +
             C154470 * C5667 + C7157 * C3145 - C7158 * C3140 - C7157 * C3146 +
             C154481 * C3152) *
                C154442 +
            (C30862 + C30861 + C30860) * C24271 + C30838 * C24270) *
               C154011 * C154082 * C340) *
              C154053)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C7157 * C144 - C7158 * C136 - C7157 * C145 + C154481 * C160 +
             C7159 * C600 - C7160 * C584 - C7159 * C601 + C154470 * C620 +
             C7161 * C602 - C7162 * C585 - C7161 * C603 + C154445 * C621) *
                C24270 +
            (C30851 + C30852 + C30853) * C24271 + C30864 * C154442) *
               C154011 * C577 -
           ((C7161 * C6272 - C7162 * C6262 - C7161 * C6273 + C154445 * C6280 +
             C7159 * C3445 - C7160 * C3441 - C7159 * C3446 + C154470 * C3453 +
             C7157 * C1985 - C7158 * C1976 - C7157 * C1986 + C154481 * C1991) *
                C154442 +
            (C7161 * C6274 - C7162 * C6263 - C7161 * C6275 + C154445 * C6281 +
             C7159 * C1554 - C7160 * C1545 - C7159 * C1555 + C154470 * C1560 +
             C7157 * C1135 - C7158 * C1129 - C7157 * C1136 + C154481 * C1147) *
                C24271 +
            (C7161 * C2337 - C7162 * C2328 - C7161 * C2338 + C154445 * C2343 +
             C7159 * C602 - C7160 * C585 - C7159 * C603 + C154470 * C621 +
             C7157 * C600 - C7158 * C584 - C7157 * C601 + C154481 * C620) *
                C24270) *
               C154011 * C578 +
           ((C7157 * C602 - C7158 * C585 - C7157 * C603 + C154481 * C621 +
             C7159 * C2337 - C7160 * C2328 - C7159 * C2338 + C154470 * C2343 +
             C7161 * C7777 - C7162 * C7773 - C7161 * C7778 + C154445 * C7785) *
                C24270 +
            (C7157 * C1554 - C7158 * C1545 - C7157 * C1555 + C154481 * C1560 +
             C7159 * C6274 - C7160 * C6263 - C7159 * C6275 + C154470 * C6281 +
             C7161 * C9282 - C7162 * C9277 - C7161 * C9283 + C154445 * C9286) *
                C24271 +
            (C7157 * C3445 - C7158 * C3441 - C7157 * C3446 + C154481 * C3453 +
             C7159 * C6272 - C7160 * C6262 - C7159 * C6273 + C154470 * C6280 +
             C7161 * C31084 - C7162 * C31082 - C7161 * C31085 +
             C154445 * C31088) *
                C154442) *
               C154011 * C579) *
              C154066 * C341 +
          (((C7867 + C7866 + C7865) * C24270 +
            (C8688 + C8689 + C8690) * C24271 +
            (C7157 * C1983 - C7158 * C1975 - C7157 * C1984 + C154481 * C1990 +
             C7159 * C3447 - C7160 * C3442 - C7159 * C3448 + C154470 * C3454 +
             C7161 * C6268 - C7162 * C6260 - C7161 * C6269 + C154445 * C6278) *
                C154442) *
               C154011 * C578 -
           (C30838 * C154442 + (C7547 + C7548 + C7549) * C24271 +
            (C7238 + C7237 + C7236) * C24270) *
               C154011 * C577 -
           ((C7161 * C31086 - C7162 * C31083 - C7161 * C31087 +
             C154445 * C31089 + C7159 * C6268 - C7160 * C6260 - C7159 * C6269 +
             C154470 * C6278 + C7157 * C3447 - C7158 * C3442 - C7157 * C3448 +
             C154481 * C3454) *
                C154442 +
            (C7161 * C9280 - C7162 * C9276 - C7161 * C9281 + C154445 * C9285 +
             C7159 * C6270 - C7160 * C6261 - C7159 * C6271 + C154470 * C6279 +
             C7157 * C1552 - C7158 * C1544 - C7157 * C1553 + C154481 * C1559) *
                C24271 +
            (C7870 + C7869 + C7868) * C24270) *
               C154011 * C579) *
              C154066 * C154053)) /
            (p * q * std::sqrt(p + q));
    d2ee[333] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C154480 +
             C3210 * C154468 + C3211 * C154442) *
                C2902 +
            (C2906 + C2907 + C2908) * C2903 + C2920 * C154429) *
               C154393 -
           (C3960 * C154429 + (C3507 + C3468 + C3469) * C2903 +
            ((C134 * C1985 - C135 * C1976 - C134 * C1986 + C154181 * C1991) *
                 C154442 +
             (C134 * C1135 - C135 * C1129 - C134 * C1136 + C154181 * C1147) *
                 C154468 +
             (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                 C154480) *
                C2902) *
               C154146) *
              C154066 * C154461 +
          (((C3469 + C3468 + C3507) * C2902 + (C3463 + C3462 + C3506) * C2903 +
            (C3954 + C3955 + C3964) * C154429) *
               C154146 -
           (C2921 * C154429 + (C2911 + C2910 + C2909) * C2903 +
            (C2908 + C2907 + C2906) * C2902) *
               C154393) *
              C154066 * C154462 +
          ((C2920 * C2902 + (C2914 + C2913 + C2912) * C2903 +
            (C2915 + C2916 + C2917) * C154429) *
               C154393 -
           (((C134 * C1977 - C135 * C1972 - C134 * C1978 + C154181 * C1987) *
                 C154442 +
             C1181 * C154468 + C677 * C154480) *
                C154429 +
            (C3964 + C3955 + C3954) * C2903 + C3960 * C2902) *
               C154146) *
              C154066 * C818)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                C154164 * C123 +
            C211 * C124 + C212 * C125 + C213 * C126 + C214 * C127) *
               C154393 -
           (C685 * C127 + C686 * C126 + C687 * C125 + C688 * C124 +
            (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                C154164 * C123) *
               C154146) *
              C154066 * C154461 +
          ((C688 * C123 + C687 * C124 + C686 * C125 + C685 * C126 +
            C967 * C127) *
               C154146 -
           (C215 * C127 + C214 * C126 + C213 * C125 + C212 * C124 +
            C211 * C123) *
               C154393) *
              C154066 * C154462 +
          ((C212 * C123 + C213 * C124 + C214 * C125 + C215 * C126 +
            C216 * C127) *
               C154393 -
           ((C134 * C956 - C135 * C955 - C134 * C957 + C154181 * C958) *
                C154164 * C127 +
            C967 * C126 + C685 * C125 + C686 * C124 + C687 * C123) *
               C154146) *
              C154066 * C818)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C7157 * C144 - C7158 * C136 - C7157 * C145 + C154481 * C160 +
             C7159 * C600 - C7160 * C584 - C7159 * C601 + C154470 * C620 +
             C7161 * C602 - C7162 * C585 - C7161 * C603 + C154445 * C621) *
                C154164 * C2902 +
            (C7236 + C7237 + C7238) * C154164 * C2903 + C7252 * C154429) *
               C154393 -
           (C8351 * C154429 + (C7865 + C7866 + C7867) * C154164 * C2903 +
            (C7161 * C2337 - C7162 * C2328 - C7161 * C2338 + C154445 * C2343 +
             C7159 * C602 - C7160 * C585 - C7159 * C603 + C154470 * C621 +
             C7157 * C600 - C7158 * C584 - C7157 * C601 + C154481 * C620) *
                C154164 * C2902) *
               C154146) *
              C154066 * C154461 +
          (((C7867 + C7866 + C7865) * C154164 * C2902 +
            (C7864 + C7863 + C7862) * C154164 * C2903 +
            (C8355 + C8356 + C8357) * C154164 * C154429) *
               C154146 -
           (C7253 * C154429 + (C7241 + C7240 + C7239) * C154164 * C2903 +
            (C7238 + C7237 + C7236) * C154164 * C2902) *
               C154393) *
              C154066 * C154462 +
          ((C7252 * C2902 + (C7244 + C7243 + C7242) * C154164 * C2903 +
            (C7245 + C7246 + C7247) * C154164 * C154429) *
               C154393 -
           ((C7161 * C2329 - C7162 * C2324 - C7161 * C2330 + C154445 * C2339 +
             C7159 * C610 - C7160 * C589 - C7159 * C611 + C154470 * C625 +
             C7157 * C592 - C7158 * C580 - C7157 * C593 + C154481 * C616) *
                C154164 * C154429 +
            (C8357 + C8356 + C8355) * C154164 * C2903 + C8351 * C2902) *
               C154146) *
              C154066 * C818)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C24270 +
             C3210 * C24271 + C3211 * C154442) *
                C154477 +
            (C24277 + C24278 + C24279) * C154458 + C24291 * C154429) *
               C154393 -
           (C25198 * C154429 + (C24744 + C24745 + C24746) * C154458 +
            (C4299 * C154442 + C4300 * C24271 +
             (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                 C24270) *
                C154477) *
               C154146) *
              C154066 * C154461 +
          (((C24746 + C24745 + C24744) * C154477 +
            (C24743 + C24742 + C24741) * C154458 +
            (C25195 + C25196 + C25197) * C154429) *
               C154146 -
           (C24292 * C154429 + (C24282 + C24281 + C24280) * C154458 +
            (C24279 + C24278 + C24277) * C154477) *
               C154393) *
              C154066 * C154462 +
          ((C24291 * C154477 + (C24285 + C24284 + C24283) * C154458 +
            (C24286 + C24287 + C24288) * C154429) *
               C154393 -
           (((C134 * C1977 - C135 * C1972 - C134 * C1978 + C154181 * C1987) *
                 C154442 +
             C1181 * C24271 + C677 * C24270) *
                C154429 +
            (C25197 + C25196 + C25195) * C154458 + C25198 * C154477) *
               C154146) *
              C154066 * C818)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                C28192 +
            C3210 * C28193 + C3211 * C28194 + C3214 * C28195 + C4687 * C28196) *
               C154011 * C154393 -
           ((C134 * C5664 - C135 * C5659 - C134 * C5665 + C154181 * C5668) *
                C28196 +
            C5676 * C28195 + C4299 * C28194 + C4300 * C28193 +
            (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                C28192) *
               C154011 * C154146) *
              C154066 * C154461 +
          ((C680 * C28192 + C1178 * C28193 + C3501 * C28194 + C4301 * C28195 +
            (C134 * C5662 - C135 * C5658 - C134 * C5663 + C154181 * C5667) *
                C28196) *
               C154011 * C154146 -
           (C3215 * C28196 + C3213 * C28195 + C444 * C28194 + C443 * C28193 +
            C205 * C28192) *
               C154011 * C154393) *
              C154066 * C154462 +
          ((C206 * C28192 + C442 * C28193 + C445 * C28194 + C3212 * C28195 +
            C3216 * C28196) *
               C154011 * C154393 -
           ((C134 * C5660 - C135 * C5657 - C134 * C5661 + C154181 * C5666) *
                C28196 +
            C4302 * C28195 + C3500 * C28194 + C1179 * C28193 + C679 * C28192) *
               C154011 * C154146) *
              C154066 * C818)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C7157 * C144 - C7158 * C136 - C7157 * C145 + C154481 * C160 +
             C7159 * C600 - C7160 * C584 - C7159 * C601 + C154470 * C620 +
             C7161 * C602 - C7162 * C585 - C7161 * C603 + C154445 * C621) *
                C24270 +
            (C30851 + C30852 + C30853) * C24271 + C30864 * C154442) *
               C154011 * C154393 -
           ((C7161 * C6272 - C7162 * C6262 - C7161 * C6273 + C154445 * C6280 +
             C7159 * C3445 - C7160 * C3441 - C7159 * C3446 + C154470 * C3453 +
             C7157 * C1985 - C7158 * C1976 - C7157 * C1986 + C154481 * C1991) *
                C154442 +
            (C7161 * C6274 - C7162 * C6263 - C7161 * C6275 + C154445 * C6281 +
             C7159 * C1554 - C7160 * C1545 - C7159 * C1555 + C154470 * C1560 +
             C7157 * C1135 - C7158 * C1129 - C7157 * C1136 + C154481 * C1147) *
                C24271 +
            (C7161 * C2337 - C7162 * C2328 - C7161 * C2338 + C154445 * C2343 +
             C7159 * C602 - C7160 * C585 - C7159 * C603 + C154470 * C621 +
             C7157 * C600 - C7158 * C584 - C7157 * C601 + C154481 * C620) *
                C24270) *
               C154011 * C154146) *
              C154066 * C154461 +
          (((C7867 + C7866 + C7865) * C24270 +
            (C8688 + C8689 + C8690) * C24271 +
            (C7157 * C1983 - C7158 * C1975 - C7157 * C1984 + C154481 * C1990 +
             C7159 * C3447 - C7160 * C3442 - C7159 * C3448 + C154470 * C3454 +
             C7161 * C6268 - C7162 * C6260 - C7161 * C6269 + C154445 * C6278) *
                C154442) *
               C154011 * C154146 -
           (C30838 * C154442 + (C7547 + C7548 + C7549) * C24271 +
            (C7238 + C7237 + C7236) * C24270) *
               C154011 * C154393) *
              C154066 * C154462 +
          ((C7250 * C24270 + (C7546 + C7545 + C7544) * C24271 +
            (C7553 + C7554 + C7555) * C154442) *
               C154011 * C154393 -
           ((C7161 * C6264 - C7162 * C6258 - C7161 * C6265 + C154445 * C6276 +
             C7159 * C3449 - C7160 * C3443 - C7159 * C3450 + C154470 * C3455 +
             C7157 * C1981 - C7158 * C1974 - C7157 * C1982 + C154481 * C1989) *
                C154442 +
            (C8693 + C8692 + C8691) * C24271 + C8347 * C24270) *
               C154011 * C154146) *
              C154066 * C818)) /
            (p * q * std::sqrt(p + q));
    d2ee[334] +=
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                C154164 * C123 +
            C211 * C124 + C212 * C125 + C213 * C126 + C214 * C127) *
               C154082 * C338 -
           (C448 * C127 + C449 * C126 + C450 * C125 + C451 * C124 +
            (C134 * C363 - C135 * C347 - C134 * C364 + C154181 * C383) *
                C154164 * C123) *
               C154082 * C339 +
           ((C134 * C365 - C135 * C348 - C134 * C366 + C154181 * C384) *
                C154164 * C123 +
            C452 * C124 + C453 * C125 + C454 * C126 + C455 * C127) *
               C154082 * C340) *
              C341 +
          ((C451 * C123 + C450 * C124 + C449 * C125 + C448 * C126 +
            (C134 * C375 - C135 * C353 - C134 * C376 + C154181 * C389) *
                C154164 * C127) *
               C154082 * C339 -
           (C215 * C127 + C214 * C126 + C213 * C125 + C212 * C124 +
            C211 * C123) *
               C154082 * C338 -
           ((C134 * C377 - C135 * C354 - C134 * C378 + C154181 * C390) *
                C154164 * C127 +
            C455 * C126 + C454 * C125 + C453 * C124 + C452 * C123) *
               C154082 * C340) *
              C154053)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
               C154164 * C123 +
           C211 * C124 + C212 * C125 + C213 * C126 + C214 * C127) *
              C154082 * C154066 * C130 -
          (C215 * C127 + C214 * C126 + C213 * C125 + C212 * C124 +
           C211 * C123) *
              C154082 * C154066 * C131 +
          (C212 * C123 + C213 * C124 + C214 * C125 + C215 * C126 +
           C216 * C127) *
              C154082 * C154066 * C132 -
          ((C134 * C158 - C135 * C143 - C134 * C159 + C154181 * C167) *
               C154164 * C127 +
           C216 * C126 + C215 * C125 + C214 * C124 + C213 * C123) *
              C154082 * C154066 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                C154480 +
            (C134 * C363 - C135 * C347 - C134 * C364 + C154181 * C383) *
                C154468 +
            (C134 * C365 - C135 * C348 - C134 * C366 + C154181 * C384) *
                C154442) *
               C2902 +
           (C2906 + C2907 + C2908) * C2903 + C2920 * C154429) *
              C154082 * C154066 * C130 -
          (C2921 * C154429 + (C2911 + C2910 + C2909) * C2903 +
           (C2908 + C2907 + C2906) * C2902) *
              C154082 * C154066 * C131 +
          (C2920 * C2902 + (C2914 + C2913 + C2912) * C2903 +
           (C2915 + C2916 + C2917) * C154429) *
              C154082 * C154066 * C132 -
          (((C134 * C377 - C135 * C354 - C134 * C378 + C154181 * C390) *
                C154442 +
            C830 * C154468 + C209 * C154480) *
               C154429 +
           (C2917 + C2916 + C2915) * C2903 + C2921 * C2902) *
              C154082 * C154066 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C154480 +
             C3210 * C154468 + C3211 * C154442) *
                C2902 +
            (C2906 + C2907 + C2908) * C2903 + C2920 * C154429) *
               C154082 * C338 -
           ((C3218 + C3168 + C3169) * C154429 +
            (C3219 + C3174 + C3175) * C2903 +
            (C3214 * C154442 + C3211 * C154468 + C3210 * C154480) * C2902) *
               C154082 * C339 +
           ((C3211 * C154480 + C3214 * C154468 +
             (C134 * C3143 - C135 * C3139 - C134 * C3144 + C154181 * C3151) *
                 C154442) *
                C2902 +
            (C3180 + C3220 + C3221) * C2903 +
            (C3185 + C3222 + C3223) * C154429) *
               C154082 * C340) *
              C341 +
          (((C3175 + C3174 + C3219) * C2902 + (C3169 + C3168 + C3218) * C2903 +
            (C441 * C154480 + C446 * C154468 + C3217 * C154442) * C154429) *
               C154082 * C339 -
           (C2921 * C154429 + (C2911 + C2910 + C2909) * C2903 +
            (C2908 + C2907 + C2906) * C2902) *
               C154082 * C338 -
           (((C134 * C3149 - C135 * C3142 - C134 * C3150 + C154181 * C3154) *
                 C154442 +
             C3217 * C154468 + C446 * C154480) *
                C154429 +
            (C3223 + C3222 + C3185) * C2903 + (C3221 + C3220 + C3180) * C2902) *
               C154082 * C340) *
              C154053)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C7157 * C144 - C7158 * C136 - C7157 * C145 + C154481 * C160 +
            C7159 * C600 - C7160 * C584 - C7159 * C601 + C154470 * C620 +
            C7161 * C602 - C7162 * C585 - C7161 * C603 + C154445 * C621) *
               C154164 * C2902 +
           (C7236 + C7237 + C7238) * C154164 * C2903 + C7252 * C154429) *
              C154082 * C154066 * C130 -
          (C7253 * C154429 + (C7241 + C7240 + C7239) * C154164 * C2903 +
           (C7238 + C7237 + C7236) * C154164 * C2902) *
              C154082 * C154066 * C131 +
          (C7252 * C2902 + (C7244 + C7243 + C7242) * C154164 * C2903 +
           (C7245 + C7246 + C7247) * C154164 * C154429) *
              C154082 * C154066 * C132 -
          ((C7161 * C614 - C7162 * C591 - C7161 * C615 + C154445 * C627 +
            C7159 * C612 - C7160 * C590 - C7159 * C613 + C154470 * C626 +
            C7157 * C154 - C7158 * C141 - C7157 * C155 + C154481 * C165) *
               C154164 * C154429 +
           (C7247 + C7246 + C7245) * C154164 * C2903 + C7253 * C2902) *
              C154082 * C154066 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C7157 * C144 - C7158 * C136 - C7157 * C145 + C154481 * C160 +
             C7159 * C600 - C7160 * C584 - C7159 * C601 + C154470 * C620 +
             C7161 * C602 - C7162 * C585 - C7161 * C603 + C154445 * C621) *
                C154164 * C2902 +
            (C7236 + C7237 + C7238) * C154164 * C2903 + C7252 * C154429) *
               C154082 * C338 -
           ((C7544 + C7545 + C7546) * C154164 * C154429 +
            (C7547 + C7548 + C7549) * C154164 * C2903 +
            (C7161 * C1554 - C7162 * C1545 - C7161 * C1555 + C154445 * C1560 +
             C7159 * C1135 - C7160 * C1129 - C7159 * C1136 + C154470 * C1147 +
             C7157 * C363 - C7158 * C347 - C7157 * C364 + C154481 * C383) *
                C154164 * C2902) *
               C154082 * C339 +
           ((C7157 * C365 - C7158 * C348 - C7157 * C366 + C154481 * C384 +
             C7159 * C1985 - C7160 * C1976 - C7159 * C1986 + C154470 * C1991 +
             C7161 * C3445 - C7162 * C3441 - C7161 * C3446 + C154445 * C3453) *
                C154164 * C2902 +
            (C7550 + C7551 + C7552) * C154164 * C2903 +
            (C7553 + C7554 + C7555) * C154164 * C154429) *
               C154082 * C340) *
              C341 +
          (((C7549 + C7548 + C7547) * C154164 * C2902 +
            (C7546 + C7545 + C7544) * C154164 * C2903 +
            (C7157 * C357 - C7158 * C344 - C7157 * C358 + C154481 * C380 +
             C7159 * C1141 - C7160 * C1132 - C7159 * C1142 + C154470 * C1150 +
             C7161 * C1548 - C7162 * C1542 - C7161 * C1549 + C154445 * C1557) *
                C154164 * C154429) *
               C154082 * C339 -
           (C7253 * C154429 + (C7241 + C7240 + C7239) * C154164 * C2903 +
            (C7238 + C7237 + C7236) * C154164 * C2902) *
               C154082 * C338 -
           ((C7161 * C3451 - C7162 * C3444 - C7161 * C3452 + C154445 * C3456 +
             C7159 * C1979 - C7160 * C1973 - C7159 * C1980 + C154470 * C1988 +
             C7157 * C371 - C7158 * C351 - C7157 * C372 + C154481 * C387) *
                C154164 * C154429 +
            (C7555 + C7554 + C7553) * C154164 * C2903 +
            (C7552 + C7551 + C7550) * C154164 * C2902) *
               C154082 * C340) *
              C154053)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                C24270 +
            C3210 * C24271 + C3211 * C154442) *
               C154477 +
           (C24277 + C24278 + C24279) * C154458 + C24291 * C154429) *
              C154082 * C154066 * C130 -
          (C24292 * C154429 + (C24282 + C24281 + C24280) * C154458 +
           (C24279 + C24278 + C24277) * C154477) *
              C154082 * C154066 * C131 +
          (C24291 * C154477 + (C24285 + C24284 + C24283) * C154458 +
           (C24286 + C24287 + C24288) * C154429) *
              C154082 * C154066 * C132 -
          (((C134 * C377 - C135 * C354 - C134 * C378 + C154181 * C390) *
                C154442 +
            C830 * C24271 + C209 * C24270) *
               C154429 +
           (C24288 + C24287 + C24286) * C154458 + C24292 * C154477) *
              C154082 * C154066 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C24270 +
             C3210 * C24271 + C3211 * C154442) *
                C154477 +
            (C24277 + C24278 + C24279) * C154458 + C24291 * C154429) *
               C154082 * C338 -
           ((C24511 + C24512 + C24513) * C154429 +
            (C24514 + C24515 + C24516) * C154458 +
            (C3214 * C154442 + C3211 * C24271 + C3210 * C24270) * C154477) *
               C154082 * C339 +
           ((C3211 * C24270 + C3214 * C24271 + C4687 * C154442) * C154477 +
            (C24517 + C24518 + C24519) * C154458 +
            (C24520 + C24521 + C24522) * C154429) *
               C154082 * C340) *
              C341 +
          (((C24516 + C24515 + C24514) * C154477 +
            (C24513 + C24512 + C24511) * C154458 +
            (C441 * C24270 + C446 * C24271 + C3217 * C154442) * C154429) *
               C154082 * C339 -
           (C24292 * C154429 + (C24282 + C24281 + C24280) * C154458 +
            (C24279 + C24278 + C24277) * C154477) *
               C154082 * C338 -
           (((C134 * C3149 - C135 * C3142 - C134 * C3150 + C154181 * C3154) *
                 C154442 +
             C3217 * C24271 + C446 * C24270) *
                C154429 +
            (C24522 + C24521 + C24520) * C154458 +
            (C24519 + C24518 + C24517) * C154477) *
               C154082 * C340) *
              C154053)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) * C28192 +
           C3210 * C28193 + C3211 * C28194 + C3214 * C28195 + C4687 * C28196) *
              C154011 * C154082 * C154066 * C130 -
          (C3215 * C28196 + C3213 * C28195 + C444 * C28194 + C443 * C28193 +
           C205 * C28192) *
              C154011 * C154082 * C154066 * C131 +
          (C206 * C28192 + C442 * C28193 + C445 * C28194 + C3212 * C28195 +
           C3216 * C28196) *
              C154011 * C154082 * C154066 * C132 -
          ((C134 * C3149 - C135 * C3142 - C134 * C3150 + C154181 * C3154) *
               C28196 +
           C3217 * C28195 + C446 * C28194 + C441 * C28193 + C207 * C28192) *
              C154011 * C154082 * C154066 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                C28192 +
            C3210 * C28193 + C3211 * C28194 + C3214 * C28195 + C4687 * C28196) *
               C154011 * C154082 * C338 -
           (C28341 * C28196 + C4687 * C28195 + C3214 * C28194 + C3211 * C28193 +
            C3210 * C28192) *
               C154011 * C154082 * C339 +
           (C3211 * C28192 + C3214 * C28193 + C4687 * C28194 + C28341 * C28195 +
            (C134 * C28322 - C135 * C28320 - C134 * C28323 + C154181 * C28326) *
                C28196) *
               C154011 * C154082 * C340) *
              C341 +
          ((C443 * C28192 + C444 * C28193 + C3213 * C28194 + C3215 * C28195 +
            C28342 * C28196) *
               C154011 * C154082 * C339 -
           (C3215 * C28196 + C3213 * C28195 + C444 * C28194 + C443 * C28193 +
            C205 * C28192) *
               C154011 * C154082 * C338 -
           ((C134 * C28324 - C135 * C28321 - C134 * C28325 + C154181 * C28327) *
                C28196 +
            C28342 * C28195 + C3215 * C28194 + C3213 * C28193 + C444 * C28192) *
               C154011 * C154082 * C340) *
              C154053)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C7157 * C144 - C7158 * C136 - C7157 * C145 + C154481 * C160 +
            C7159 * C600 - C7160 * C584 - C7159 * C601 + C154470 * C620 +
            C7161 * C602 - C7162 * C585 - C7161 * C603 + C154445 * C621) *
               C24270 +
           (C7157 * C363 - C7158 * C347 - C7157 * C364 + C154481 * C383 +
            C7159 * C1135 - C7160 * C1129 - C7159 * C1136 + C154470 * C1147 +
            C7161 * C1554 - C7162 * C1545 - C7161 * C1555 + C154445 * C1560) *
               C24271 +
           (C7157 * C365 - C7158 * C348 - C7157 * C366 + C154481 * C384 +
            C7159 * C1985 - C7160 * C1976 - C7159 * C1986 + C154470 * C1991 +
            C7161 * C3445 - C7162 * C3441 - C7161 * C3446 + C154445 * C3453) *
               C154442) *
              C154011 * C154082 * C154066 * C130 -
          ((C7552 + C7551 + C7550) * C154442 +
           (C7547 + C7548 + C7549) * C24271 +
           (C7238 + C7237 + C7236) * C24270) *
              C154011 * C154082 * C154066 * C131 +
          (C7250 * C24270 + (C7546 + C7545 + C7544) * C24271 +
           (C7553 + C7554 + C7555) * C154442) *
              C154011 * C154082 * C154066 * C132 -
          ((C7161 * C3451 - C7162 * C3444 - C7161 * C3452 + C154445 * C3456 +
            C7159 * C1979 - C7160 * C1973 - C7159 * C1980 + C154470 * C1988 +
            C7157 * C371 - C7158 * C351 - C7157 * C372 + C154481 * C387) *
               C154442 +
           (C8115 + C8114 + C8113) * C24271 + C7251 * C24270) *
              C154011 * C154082 * C154066 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C7157 * C144 - C7158 * C136 - C7157 * C145 + C154481 * C160 +
             C7159 * C600 - C7160 * C584 - C7159 * C601 + C154470 * C620 +
             C7161 * C602 - C7162 * C585 - C7161 * C603 + C154445 * C621) *
                C24270 +
            (C30851 + C30852 + C30853) * C24271 + C30864 * C154442) *
               C154011 * C154082 * C338 -
           ((C30857 + C30858 + C30859) * C154442 +
            (C30856 + C30855 + C30854) * C24271 +
            (C30853 + C30852 + C30851) * C24270) *
               C154011 * C154082 * C339 +
           (C30864 * C24270 + (C30859 + C30858 + C30857) * C24271 +
            (C7157 * C3143 - C7158 * C3139 - C7157 * C3144 + C154481 * C3151 +
             C7159 * C5664 - C7160 * C5659 - C7159 * C5665 + C154470 * C5668 +
             C7161 * C28466 - C7162 * C28464 - C7161 * C28467 +
             C154445 * C28470) *
                C154442) *
               C154011 * C154082 * C340) *
              C341 +
          (((C7549 + C7548 + C7547) * C24270 +
            (C7550 + C7551 + C7552) * C24271 +
            (C30860 + C30861 + C30862) * C154442) *
               C154011 * C154082 * C339 -
           (C30838 * C154442 + (C7547 + C7548 + C7549) * C24271 +
            (C7238 + C7237 + C7236) * C24270) *
               C154011 * C154082 * C338 -
           ((C7161 * C28468 - C7162 * C28465 - C7161 * C28469 +
             C154445 * C28471 + C7159 * C5662 - C7160 * C5658 - C7159 * C5663 +
             C154470 * C5667 + C7157 * C3145 - C7158 * C3140 - C7157 * C3146 +
             C154481 * C3152) *
                C154442 +
            (C30862 + C30861 + C30860) * C24271 + C30838 * C24270) *
               C154011 * C154082 * C340) *
              C154053)) /
            (p * q * std::sqrt(p + q));
    d2ee[335] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C154480 +
             C3210 * C154468 + C3211 * C154442) *
                C2902 +
            (C2906 + C2907 + C2908) * C2903 + C2920 * C154429) *
               C154082 * C154463 -
           (C3734 * C154429 + (C3219 + C3174 + C3175) * C2903 +
            (C3214 * C154442 + C3211 * C154468 + C3210 * C154480) * C2902) *
               C154082 * C154464 +
           ((C3211 * C154480 + C3214 * C154468 + C4687 * C154442) * C2902 +
            (C3180 + C3220 + C3221) * C2903 +
            (C3185 + C3222 + C3223) * C154429) *
               C154082 * C1685) *
              C154384 +
          (((C3175 + C3174 + C3219) * C2902 + (C3169 + C3168 + C3218) * C2903 +
            (C3731 + C3732 + C3733) * C154429) *
               C154082 * C154464 -
           (C2921 * C154429 + (C2911 + C2910 + C2909) * C2903 +
            (C2908 + C2907 + C2906) * C2902) *
               C154082 * C154463 -
           (((C134 * C3149 - C135 * C3142 - C134 * C3150 + C154181 * C3154) *
                 C154442 +
             C3217 * C154468 + C446 * C154480) *
                C154429 +
            (C3223 + C3222 + C3185) * C2903 + (C3221 + C3220 + C3180) * C2902) *
               C154082 * C1685) *
              C154053)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                C154164 * C123 +
            C211 * C124 + C212 * C125 + C213 * C126 + C214 * C127) *
               C154082 * C154463 -
           (C448 * C127 + C449 * C126 + C450 * C125 + C451 * C124 +
            (C134 * C363 - C135 * C347 - C134 * C364 + C154181 * C383) *
                C154164 * C123) *
               C154082 * C154464 +
           ((C134 * C365 - C135 * C348 - C134 * C366 + C154181 * C384) *
                C154164 * C123 +
            C452 * C124 + C453 * C125 + C454 * C126 + C455 * C127) *
               C154082 * C1685) *
              C154384 +
          ((C451 * C123 + C450 * C124 + C449 * C125 + C448 * C126 +
            C831 * C127) *
               C154082 * C154464 -
           (C215 * C127 + C214 * C126 + C213 * C125 + C212 * C124 +
            C211 * C123) *
               C154082 * C154463 -
           ((C134 * C377 - C135 * C354 - C134 * C378 + C154181 * C390) *
                C154164 * C127 +
            C455 * C126 + C454 * C125 + C453 * C124 + C452 * C123) *
               C154082 * C1685) *
              C154053)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C7157 * C144 - C7158 * C136 - C7157 * C145 + C154481 * C160 +
             C7159 * C600 - C7160 * C584 - C7159 * C601 + C154470 * C620 +
             C7161 * C602 - C7162 * C585 - C7161 * C603 + C154445 * C621) *
                C154164 * C2902 +
            (C7236 + C7237 + C7238) * C154164 * C2903 + C7252 * C154429) *
               C154082 * C154463 -
           (C8109 * C154429 + (C7547 + C7548 + C7549) * C154164 * C2903 +
            (C7161 * C1554 - C7162 * C1545 - C7161 * C1555 + C154445 * C1560 +
             C7159 * C1135 - C7160 * C1129 - C7159 * C1136 + C154470 * C1147 +
             C7157 * C363 - C7158 * C347 - C7157 * C364 + C154481 * C383) *
                C154164 * C2902) *
               C154082 * C154464 +
           ((C7157 * C365 - C7158 * C348 - C7157 * C366 + C154481 * C384 +
             C7159 * C1985 - C7160 * C1976 - C7159 * C1986 + C154470 * C1991 +
             C7161 * C3445 - C7162 * C3441 - C7161 * C3446 + C154445 * C3453) *
                C154164 * C2902 +
            (C7550 + C7551 + C7552) * C154164 * C2903 +
            (C7553 + C7554 + C7555) * C154164 * C154429) *
               C154082 * C1685) *
              C154384 +
          (((C7549 + C7548 + C7547) * C154164 * C2902 +
            (C7546 + C7545 + C7544) * C154164 * C2903 +
            (C8113 + C8114 + C8115) * C154164 * C154429) *
               C154082 * C154464 -
           (C7253 * C154429 + (C7241 + C7240 + C7239) * C154164 * C2903 +
            (C7238 + C7237 + C7236) * C154164 * C2902) *
               C154082 * C154463 -
           ((C7161 * C3451 - C7162 * C3444 - C7161 * C3452 + C154445 * C3456 +
             C7159 * C1979 - C7160 * C1973 - C7159 * C1980 + C154470 * C1988 +
             C7157 * C371 - C7158 * C351 - C7157 * C372 + C154481 * C387) *
                C154164 * C154429 +
            (C7555 + C7554 + C7553) * C154164 * C2903 +
            (C7552 + C7551 + C7550) * C154164 * C2902) *
               C154082 * C1685) *
              C154053)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C24270 +
             C3210 * C24271 + C3211 * C154442) *
                C154477 +
            (C24277 + C24278 + C24279) * C154458 + C24291 * C154429) *
               C154082 * C154463 -
           (C24975 * C154429 + (C24514 + C24515 + C24516) * C154458 +
            (C3214 * C154442 + C3211 * C24271 + C3210 * C24270) * C154477) *
               C154082 * C154464 +
           ((C3211 * C24270 + C3214 * C24271 + C4687 * C154442) * C154477 +
            (C24517 + C24518 + C24519) * C154458 +
            (C24520 + C24521 + C24522) * C154429) *
               C154082 * C1685) *
              C154384 +
          (((C24516 + C24515 + C24514) * C154477 +
            (C24513 + C24512 + C24511) * C154458 +
            (C24972 + C24973 + C24974) * C154429) *
               C154082 * C154464 -
           (C24292 * C154429 + (C24282 + C24281 + C24280) * C154458 +
            (C24279 + C24278 + C24277) * C154477) *
               C154082 * C154463 -
           (((C134 * C3149 - C135 * C3142 - C134 * C3150 + C154181 * C3154) *
                 C154442 +
             C3217 * C24271 + C446 * C24270) *
                C154429 +
            (C24522 + C24521 + C24520) * C154458 +
            (C24519 + C24518 + C24517) * C154477) *
               C154082 * C1685) *
              C154053)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                C28192 +
            C3210 * C28193 + C3211 * C28194 + C3214 * C28195 + C4687 * C28196) *
               C154011 * C154082 * C154463 -
           (C28341 * C28196 + C4687 * C28195 + C3214 * C28194 + C3211 * C28193 +
            C3210 * C28192) *
               C154011 * C154082 * C154464 +
           (C3211 * C28192 + C3214 * C28193 + C4687 * C28194 + C28341 * C28195 +
            C29115 * C28196) *
               C154011 * C154082 * C1685) *
              C154384 +
          ((C443 * C28192 + C444 * C28193 + C3213 * C28194 + C3215 * C28195 +
            C28342 * C28196) *
               C154011 * C154082 * C154464 -
           (C3215 * C28196 + C3213 * C28195 + C444 * C28194 + C443 * C28193 +
            C205 * C28192) *
               C154011 * C154082 * C154463 -
           ((C134 * C28324 - C135 * C28321 - C134 * C28325 + C154181 * C28327) *
                C28196 +
            C28342 * C28195 + C3215 * C28194 + C3213 * C28193 + C444 * C28192) *
               C154011 * C154082 * C1685) *
              C154053)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C7157 * C144 - C7158 * C136 - C7157 * C145 + C154481 * C160 +
             C7159 * C600 - C7160 * C584 - C7159 * C601 + C154470 * C620 +
             C7161 * C602 - C7162 * C585 - C7161 * C603 + C154445 * C621) *
                C24270 +
            (C30851 + C30852 + C30853) * C24271 + C30864 * C154442) *
               C154011 * C154082 * C154463 -
           (C32261 * C154442 + (C30856 + C30855 + C30854) * C24271 +
            (C30853 + C30852 + C30851) * C24270) *
               C154011 * C154082 * C154464 +
           (C30864 * C24270 + (C30859 + C30858 + C30857) * C24271 +
            (C32268 + C32269 + C32270) * C154442) *
               C154011 * C154082 * C1685) *
              C154384 +
          (((C7549 + C7548 + C7547) * C24270 +
            (C7550 + C7551 + C7552) * C24271 +
            (C30860 + C30861 + C30862) * C154442) *
               C154011 * C154082 * C154464 -
           (C30838 * C154442 + (C7547 + C7548 + C7549) * C24271 +
            (C7238 + C7237 + C7236) * C24270) *
               C154011 * C154082 * C154463 -
           ((C7161 * C28468 - C7162 * C28465 - C7161 * C28469 +
             C154445 * C28471 + C7159 * C5662 - C7160 * C5658 - C7159 * C5663 +
             C154470 * C5667 + C7157 * C3145 - C7158 * C3140 - C7157 * C3146 +
             C154481 * C3152) *
                C154442 +
            (C30862 + C30861 + C30860) * C24271 + C30838 * C24270) *
               C154011 * C154082 * C1685) *
              C154053)) /
            (p * q * std::sqrt(p + q));
    d2ee[336] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C154480 +
             C3210 * C154468 + C3211 * C154442) *
                C2902 +
            (C2906 + C2907 + C2908) * C2903 + C2920 * C154429) *
               C154393 -
           (C3960 * C154429 + (C3507 + C3468 + C3469) * C2903 +
            (C4299 * C154442 + C4300 * C154468 +
             (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                 C154480) *
                C2902) *
               C154146) *
              C154463 +
          (((C4300 * C154480 + C4299 * C154468 + C5676 * C154442) * C2902 +
            (C4279 + C4280 + C4303) * C2903 +
            (C4285 + C4286 + C4304) * C154429) *
               C154146 -
           (C3734 * C154429 + (C3219 + C3174 + C3175) * C2903 +
            (C3214 * C154442 + C3211 * C154468 + C3210 * C154480) * C2902) *
               C154393) *
              C154464 +
          (((C3211 * C154480 + C3214 * C154468 + C4687 * C154442) * C2902 +
            (C3180 + C3220 + C3221) * C2903 +
            (C3185 + C3222 + C3223) * C154429) *
               C154393 -
           (((C134 * C5660 - C135 * C5657 - C134 * C5661 + C154181 * C5666) *
                 C154442 +
             C4302 * C154468 + C3500 * C154480) *
                C154429 +
            ((C134 * C5662 - C135 * C5658 - C134 * C5663 + C154181 * C5667) *
                 C154442 +
             C4301 * C154468 + C3501 * C154480) *
                C2903 +
            ((C134 * C5664 - C135 * C5659 - C134 * C5665 + C154181 * C5668) *
                 C154442 +
             C5676 * C154468 + C4299 * C154480) *
                C2902) *
               C154146) *
              C1685) *
         C154047) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                C154164 * C123 +
            C211 * C124 + C212 * C125 + C213 * C126 + C214 * C127) *
               C154393 -
           (C685 * C127 + C686 * C126 + C687 * C125 + C688 * C124 +
            (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                C154164 * C123) *
               C154146) *
              C154463 +
          (((C134 * C1135 - C135 * C1129 - C134 * C1136 + C154181 * C1147) *
                C154164 * C123 +
            C1182 * C124 + C1183 * C125 + C1184 * C126 + C1185 * C127) *
               C154146 -
           (C448 * C127 + C449 * C126 + C450 * C125 + C451 * C124 +
            (C134 * C363 - C135 * C347 - C134 * C364 + C154181 * C383) *
                C154164 * C123) *
               C154393) *
              C154464 +
          (((C134 * C365 - C135 * C348 - C134 * C366 + C154181 * C384) *
                C154164 * C123 +
            C452 * C124 + C453 * C125 + C454 * C126 + C455 * C127) *
               C154393 -
           ((C134 * C1977 - C135 * C1972 - C134 * C1978 + C154181 * C1987) *
                C154164 * C127 +
            (C134 * C1979 - C135 * C1973 - C134 * C1980 + C154181 * C1988) *
                C154164 * C126 +
            (C134 * C1981 - C135 * C1974 - C134 * C1982 + C154181 * C1989) *
                C154164 * C125 +
            (C134 * C1983 - C135 * C1975 - C134 * C1984 + C154181 * C1990) *
                C154164 * C124 +
            (C134 * C1985 - C135 * C1976 - C134 * C1986 + C154181 * C1991) *
                C154164 * C123) *
               C154146) *
              C1685) *
         C154047) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C7157 * C144 - C7158 * C136 - C7157 * C145 + C154481 * C160 +
             C7159 * C600 - C7160 * C584 - C7159 * C601 + C154470 * C620 +
             C7161 * C602 - C7162 * C585 - C7161 * C603 + C154445 * C621) *
                C154164 * C2902 +
            (C7236 + C7237 + C7238) * C154164 * C2903 + C7252 * C154429) *
               C154393 -
           (C8351 * C154429 + (C7865 + C7866 + C7867) * C154164 * C2903 +
            (C7161 * C2337 - C7162 * C2328 - C7161 * C2338 + C154445 * C2343 +
             C7159 * C602 - C7160 * C585 - C7159 * C603 + C154470 * C621 +
             C7157 * C600 - C7158 * C584 - C7157 * C601 + C154481 * C620) *
                C154164 * C2902) *
               C154146) *
              C154463 +
          (((C7157 * C1135 - C7158 * C1129 - C7157 * C1136 + C154481 * C1147 +
             C7159 * C1554 - C7160 * C1545 - C7159 * C1555 + C154470 * C1560 +
             C7161 * C6274 - C7162 * C6263 - C7161 * C6275 + C154445 * C6281) *
                C154164 * C2902 +
            (C8688 + C8689 + C8690) * C154164 * C2903 +
            (C8691 + C8692 + C8693) * C154164 * C154429) *
               C154146 -
           (C8109 * C154429 + (C7547 + C7548 + C7549) * C154164 * C2903 +
            (C7161 * C1554 - C7162 * C1545 - C7161 * C1555 + C154445 * C1560 +
             C7159 * C1135 - C7160 * C1129 - C7159 * C1136 + C154470 * C1147 +
             C7157 * C363 - C7158 * C347 - C7157 * C364 + C154481 * C383) *
                C154164 * C2902) *
               C154393) *
              C154464 +
          (((C7157 * C365 - C7158 * C348 - C7157 * C366 + C154481 * C384 +
             C7159 * C1985 - C7160 * C1976 - C7159 * C1986 + C154470 * C1991 +
             C7161 * C3445 - C7162 * C3441 - C7161 * C3446 + C154445 * C3453) *
                C154164 * C2902 +
            (C7550 + C7551 + C7552) * C154164 * C2903 +
            (C7553 + C7554 + C7555) * C154164 * C154429) *
               C154393 -
           ((C7161 * C6264 - C7162 * C6258 - C7161 * C6265 + C154445 * C6276 +
             C7159 * C3449 - C7160 * C3443 - C7159 * C3450 + C154470 * C3455 +
             C7157 * C1981 - C7158 * C1974 - C7157 * C1982 + C154481 * C1989) *
                C154164 * C154429 +
            (C7161 * C6268 - C7162 * C6260 - C7161 * C6269 + C154445 * C6278 +
             C7159 * C3447 - C7160 * C3442 - C7159 * C3448 + C154470 * C3454 +
             C7157 * C1983 - C7158 * C1975 - C7157 * C1984 + C154481 * C1990) *
                C154164 * C2903 +
            (C7161 * C6272 - C7162 * C6262 - C7161 * C6273 + C154445 * C6280 +
             C7159 * C3445 - C7160 * C3441 - C7159 * C3446 + C154470 * C3453 +
             C7157 * C1985 - C7158 * C1976 - C7157 * C1986 + C154481 * C1991) *
                C154164 * C2902) *
               C154146) *
              C1685) *
         C154047) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C24270 +
             C3210 * C24271 + C3211 * C154442) *
                C154477 +
            (C24277 + C24278 + C24279) * C154458 + C24291 * C154429) *
               C154393 -
           (C25198 * C154429 + (C24744 + C24745 + C24746) * C154458 +
            (C4299 * C154442 + C4300 * C24271 +
             (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                 C24270) *
                C154477) *
               C154146) *
              C154463 +
          (((C4300 * C24270 + C4299 * C24271 + C5676 * C154442) * C154477 +
            (C25489 + C25490 + C25491) * C154458 +
            (C25492 + C25493 + C25494) * C154429) *
               C154146 -
           (C24975 * C154429 + (C24514 + C24515 + C24516) * C154458 +
            (C3214 * C154442 + C3211 * C24271 + C3210 * C24270) * C154477) *
               C154393) *
              C154464 +
          (((C3211 * C24270 + C3214 * C24271 + C4687 * C154442) * C154477 +
            (C24517 + C24518 + C24519) * C154458 +
            (C24520 + C24521 + C24522) * C154429) *
               C154393 -
           (((C134 * C5660 - C135 * C5657 - C134 * C5661 + C154181 * C5666) *
                 C154442 +
             C4302 * C24271 + C3500 * C24270) *
                C154429 +
            ((C134 * C5662 - C135 * C5658 - C134 * C5663 + C154181 * C5667) *
                 C154442 +
             C4301 * C24271 + C3501 * C24270) *
                C154458 +
            ((C134 * C5664 - C135 * C5659 - C134 * C5665 + C154181 * C5668) *
                 C154442 +
             C5676 * C24271 + C4299 * C24270) *
                C154477) *
               C154146) *
              C1685) *
         C154047) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                C28192 +
            C3210 * C28193 + C3211 * C28194 + C3214 * C28195 + C4687 * C28196) *
               C154011 * C154393 -
           (C28899 * C28196 + C5676 * C28195 + C4299 * C28194 + C4300 * C28193 +
            (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                C28192) *
               C154011 * C154146) *
              C154463 +
          ((C4300 * C28192 + C4299 * C28193 + C5676 * C28194 + C28899 * C28195 +
            C29672 * C28196) *
               C154011 * C154146 -
           (C28341 * C28196 + C4687 * C28195 + C3214 * C28194 + C3211 * C28193 +
            C3210 * C28192) *
               C154011 * C154393) *
              C154464 +
          ((C3211 * C28192 + C3214 * C28193 + C4687 * C28194 + C28341 * C28195 +
            C29115 * C28196) *
               C154011 * C154393 -
           ((C134 * C29662 - C135 * C29661 - C134 * C29663 + C154181 * C29664) *
                C28196 +
            C29672 * C28195 + C28899 * C28194 + C5676 * C28193 +
            C4299 * C28192) *
               C154011 * C154146) *
              C1685) *
         C154047) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C7157 * C144 - C7158 * C136 - C7157 * C145 + C154481 * C160 +
             C7159 * C600 - C7160 * C584 - C7159 * C601 + C154470 * C620 +
             C7161 * C602 - C7162 * C585 - C7161 * C603 + C154445 * C621) *
                C24270 +
            (C30851 + C30852 + C30853) * C24271 + C30864 * C154442) *
               C154011 * C154393 -
           (C33274 * C154442 + (C31878 + C31879 + C31880) * C24271 +
            (C7161 * C2337 - C7162 * C2328 - C7161 * C2338 + C154445 * C2343 +
             C7159 * C602 - C7160 * C585 - C7159 * C603 + C154470 * C621 +
             C7157 * C600 - C7158 * C584 - C7157 * C601 + C154481 * C620) *
                C24270) *
               C154011 * C154146) *
              C154463 +
          (((C31880 + C31879 + C31878) * C24270 +
            (C31877 + C31876 + C31875) * C24271 +
            (C33281 + C33282 + C33283) * C154442) *
               C154011 * C154146 -
           (C32261 * C154442 + (C30856 + C30855 + C30854) * C24271 +
            (C30853 + C30852 + C30851) * C24270) *
               C154011 * C154393) *
              C154464 +
          ((C30864 * C24270 + (C30859 + C30858 + C30857) * C24271 +
            (C32268 + C32269 + C32270) * C154442) *
               C154011 * C154393 -
           ((C7161 * C30000 - C7162 * C29998 - C7161 * C30001 +
             C154445 * C30004 + C7159 * C28466 - C7160 * C28464 -
             C7159 * C28467 + C154470 * C28470 + C7157 * C5664 - C7158 * C5659 -
             C7157 * C5665 + C154481 * C5668) *
                C154442 +
            (C33283 + C33282 + C33281) * C24271 + C33274 * C24270) *
               C154011 * C154146) *
              C1685) *
         C154047) /
            (p * q * std::sqrt(p + q));
    d2ee[337] +=
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             ((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                    C154164 * C123 +
                C211 * C124 + C212 * C125 + C213 * C126 + C214 * C127) *
                   C154082 * C1307 -
               (C448 * C127 + C449 * C126 + C450 * C125 + C451 * C124 +
                (C134 * C363 - C135 * C347 - C134 * C364 + C154181 * C383) *
                    C154164 * C123) *
                   C154082 * C154118) *
                  C1309 +
              ((C451 * C123 + C450 * C124 + C449 * C125 + C448 * C126 +
                C831 * C127) *
                   C154082 * C154118 -
               (C215 * C127 + C214 * C126 + C213 * C125 + C212 * C124 +
                C211 * C123) *
                   C154082 * C1307) *
                  C1310 +
              ((C212 * C123 + C213 * C124 + C214 * C125 + C215 * C126 +
                C216 * C127) *
                   C154082 * C1307 -
               ((C134 * C820 - C135 * C819 - C134 * C821 + C154181 * C822) *
                    C154164 * C127 +
                C831 * C126 + C448 * C125 + C449 * C124 + C450 * C123) *
                   C154082 * C154118) *
                  C1311) +
         std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             (((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                   C154164 * C123 +
               C211 * C124 + C212 * C125 + C213 * C126 + C214 * C127) *
                  C154082 * C1394 -
              (C448 * C127 + C449 * C126 + C450 * C125 + C451 * C124 +
               (C134 * C363 - C135 * C347 - C134 * C364 + C154181 * C383) *
                   C154164 * C123) *
                  C154082 * C1395 +
              ((C134 * C365 - C135 * C348 - C134 * C366 + C154181 * C384) *
                   C154164 * C123 +
               C452 * C124 + C453 * C125 + C454 * C126 + C455 * C127) *
                  C154082 * C1396 -
              ((C134 * C1404 - C135 * C1399 - C134 * C1405 + C154181 * C1414) *
                   C154164 * C127 +
               (C134 * C1406 - C135 * C1400 - C134 * C1407 + C154181 * C1415) *
                   C154164 * C126 +
               (C134 * C1408 - C135 * C1401 - C134 * C1409 + C154181 * C1416) *
                   C154164 * C125 +
               (C134 * C1410 - C135 * C1402 - C134 * C1411 + C154181 * C1417) *
                   C154164 * C124 +
               (C134 * C1412 - C135 * C1403 - C134 * C1413 + C154181 * C1418) *
                   C154164 * C123) *
                  C154082 * C1397) *
             C154047) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                C154164 * C123 +
            C211 * C124 + C212 * C125 + C213 * C126 + C214 * C127) *
               C577 -
           (C685 * C127 + C686 * C126 + C687 * C125 + C688 * C124 +
            (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                C154164 * C123) *
               C578 +
           ((C134 * C602 - C135 * C585 - C134 * C603 + C154181 * C621) *
                C154164 * C123 +
            C689 * C124 + C690 * C125 + C691 * C126 + C692 * C127) *
               C579) *
              C1307 +
          (((C134 * C1135 - C135 * C1129 - C134 * C1136 + C154181 * C1147) *
                C154164 * C123 +
            C1182 * C124 + C1183 * C125 + C1184 * C126 + C1185 * C127) *
               C578 -
           (C448 * C127 + C449 * C126 + C450 * C125 + C451 * C124 +
            (C134 * C363 - C135 * C347 - C134 * C364 + C154181 * C383) *
                C154164 * C123) *
               C577 -
           ((C134 * C1546 - C135 * C1541 - C134 * C1547 + C154181 * C1556) *
                C154164 * C127 +
            (C134 * C1548 - C135 * C1542 - C134 * C1549 + C154181 * C1557) *
                C154164 * C126 +
            (C134 * C1550 - C135 * C1543 - C134 * C1551 + C154181 * C1558) *
                C154164 * C125 +
            (C134 * C1552 - C135 * C1544 - C134 * C1553 + C154181 * C1559) *
                C154164 * C124 +
            (C134 * C1554 - C135 * C1545 - C134 * C1555 + C154181 * C1560) *
                C154164 * C123) *
               C579) *
              C154118) *
         C154047) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C154480 +
             C3210 * C154468 + C3211 * C154442) *
                C2902 +
            (C2906 + C2907 + C2908) * C2903 + C2920 * C154429) *
               C154082 * C1307 -
           (C3734 * C154429 + (C3219 + C3174 + C3175) * C2903 +
            (C3214 * C154442 + C3211 * C154468 + C3210 * C154480) * C2902) *
               C154082 * C154118) *
              C1309 +
          (((C3175 + C3174 + C3219) * C2902 + (C3169 + C3168 + C3218) * C2903 +
            (C3731 + C3732 + C3733) * C154429) *
               C154082 * C154118 -
           (C2921 * C154429 + (C2911 + C2910 + C2909) * C2903 +
            (C2908 + C2907 + C2906) * C2902) *
               C154082 * C1307) *
              C1310 +
          ((C2920 * C2902 + (C2914 + C2913 + C2912) * C2903 +
            (C2915 + C2916 + C2917) * C154429) *
               C154082 * C1307 -
           (((C134 * C1404 - C135 * C1399 - C134 * C1405 + C154181 * C1414) *
                 C154442 +
             C447 * C154468 + C440 * C154480) *
                C154429 +
            (C3733 + C3732 + C3731) * C2903 + C3734 * C2902) *
               C154082 * C154118) *
              C1311)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                C154480 +
            C3210 * C154468 + C3211 * C154442) *
               C2902 +
           (C2906 + C2907 + C2908) * C2903 + C2920 * C154429) *
              C154082 * C1394 -
          (C3734 * C154429 + (C3219 + C3174 + C3175) * C2903 +
           (C3214 * C154442 + C3211 * C154468 + C3210 * C154480) * C2902) *
              C154082 * C1395 +
          ((C3211 * C154480 + C3214 * C154468 + C4687 * C154442) * C2902 +
           (C3180 + C3220 + C3221) * C2903 +
           (C3185 + C3222 + C3223) * C154429) *
              C154082 * C1396 -
          (((C134 * C4671 - C135 * C4668 - C134 * C4672 + C154181 * C4677) *
                C154442 +
            C3216 * C154468 + C3212 * C154480) *
               C154429 +
           ((C134 * C4673 - C135 * C4669 - C134 * C4674 + C154181 * C4678) *
                C154442 +
            C3215 * C154468 + C3213 * C154480) *
               C2903 +
           ((C134 * C4675 - C135 * C4670 - C134 * C4676 + C154181 * C4679) *
                C154442 +
            C4687 * C154468 + C3214 * C154480) *
               C2902) *
              C154082 * C1397) *
         C154047) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C154480 +
             C3210 * C154468 + C3211 * C154442) *
                C2902 +
            (C2906 + C2907 + C2908) * C2903 + C2920 * C154429) *
               C577 -
           (C3960 * C154429 + (C3507 + C3468 + C3469) * C2903 +
            (C4299 * C154442 + C4300 * C154468 +
             (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                 C154480) *
                C2902) *
               C578 +
           (((C134 * C602 - C135 * C585 - C134 * C603 + C154181 * C621) *
                 C154480 +
             C4930 * C154468 + C4931 * C154442) *
                C2902 +
            (C3470 + C3508 + C3509) * C2903 +
            (C3479 + C3510 + C3511) * C154429) *
               C579) *
              C1307 +
          (((C4300 * C154480 + C4299 * C154468 +
             (C134 * C4258 - C135 * C4254 - C134 * C4259 + C154181 * C4266) *
                 C154442) *
                C2902 +
            (C4279 + C4280 + C4303) * C2903 +
            (C4285 + C4286 + C4304) * C154429) *
               C578 -
           (C3734 * C154429 + (C3219 + C3174 + C3175) * C2903 +
            (C3214 * C154442 + C3211 * C154468 + C3210 * C154480) * C2902) *
               C577 -
           (((C134 * C4908 - C135 * C4905 - C134 * C4909 + C154181 * C4914) *
                 C154442 +
             C3505 * C154468 + C3504 * C154480) *
                C154429 +
            ((C134 * C4910 - C135 * C4906 - C134 * C4911 + C154181 * C4915) *
                 C154442 +
             C3503 * C154468 + C3502 * C154480) *
                C2903 +
            ((C134 * C4912 - C135 * C4907 - C134 * C4913 + C154181 * C4916) *
                 C154442 +
             C4931 * C154468 + C4930 * C154480) *
                C2902) *
               C579) *
              C154118) *
         C154047) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C7157 * C144 - C7158 * C136 - C7157 * C145 + C154481 * C160 +
             C7159 * C600 - C7160 * C584 - C7159 * C601 + C154470 * C620 +
             C7161 * C602 - C7162 * C585 - C7161 * C603 + C154445 * C621) *
                C154164 * C2902 +
            (C7236 + C7237 + C7238) * C154164 * C2903 + C7252 * C154429) *
               C154082 * C1307 -
           (C8109 * C154429 + (C7547 + C7548 + C7549) * C154164 * C2903 +
            (C7161 * C1554 - C7162 * C1545 - C7161 * C1555 + C154445 * C1560 +
             C7159 * C1135 - C7160 * C1129 - C7159 * C1136 + C154470 * C1147 +
             C7157 * C363 - C7158 * C347 - C7157 * C364 + C154481 * C383) *
                C154164 * C2902) *
               C154082 * C154118) *
              C1309 +
          (((C7549 + C7548 + C7547) * C154164 * C2902 +
            (C7546 + C7545 + C7544) * C154164 * C2903 +
            (C8113 + C8114 + C8115) * C154164 * C154429) *
               C154082 * C154118 -
           (C7253 * C154429 + (C7241 + C7240 + C7239) * C154164 * C2903 +
            (C7238 + C7237 + C7236) * C154164 * C2902) *
               C154082 * C1307) *
              C1310 +
          ((C7252 * C2902 + (C7244 + C7243 + C7242) * C154164 * C2903 +
            (C7245 + C7246 + C7247) * C154164 * C154429) *
               C154082 * C1307 -
           ((C7161 * C1546 - C7162 * C1541 - C7161 * C1547 + C154445 * C1556 +
             C7159 * C1143 - C7160 * C1133 - C7159 * C1144 + C154470 * C1151 +
             C7157 * C355 - C7158 * C343 - C7157 * C356 + C154481 * C379) *
                C154164 * C154429 +
            (C8115 + C8114 + C8113) * C154164 * C2903 + C8109 * C2902) *
               C154082 * C154118) *
              C1311)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C7157 * C144 - C7158 * C136 - C7157 * C145 + C154481 * C160 +
            C7159 * C600 - C7160 * C584 - C7159 * C601 + C154470 * C620 +
            C7161 * C602 - C7162 * C585 - C7161 * C603 + C154445 * C621) *
               C154164 * C2902 +
           (C7236 + C7237 + C7238) * C154164 * C2903 + C7252 * C154429) *
              C154082 * C1394 -
          (C8109 * C154429 + (C7547 + C7548 + C7549) * C154164 * C2903 +
           (C7161 * C1554 - C7162 * C1545 - C7161 * C1555 + C154445 * C1560 +
            C7159 * C1135 - C7160 * C1129 - C7159 * C1136 + C154470 * C1147 +
            C7157 * C363 - C7158 * C347 - C7157 * C364 + C154481 * C383) *
               C154164 * C2902) *
              C154082 * C1395 +
          ((C7157 * C365 - C7158 * C348 - C7157 * C366 + C154481 * C384 +
            C7159 * C1985 - C7160 * C1976 - C7159 * C1986 + C154470 * C1991 +
            C7161 * C3445 - C7162 * C3441 - C7161 * C3446 + C154445 * C3453) *
               C154164 * C2902 +
           (C7550 + C7551 + C7552) * C154164 * C2903 +
           (C7553 + C7554 + C7555) * C154164 * C154429) *
              C154082 * C1396 -
          ((C7161 * C4908 - C7162 * C4905 - C7161 * C4909 + C154445 * C4914 +
            C7159 * C4262 - C7160 * C4256 - C7159 * C4263 + C154470 * C4268 +
            C7157 * C1408 - C7158 * C1401 - C7157 * C1409 + C154481 * C1416) *
               C154164 * C154429 +
           (C7161 * C4910 - C7162 * C4906 - C7161 * C4911 + C154445 * C4915 +
            C7159 * C4260 - C7160 * C4255 - C7159 * C4261 + C154470 * C4267 +
            C7157 * C1410 - C7158 * C1402 - C7157 * C1411 + C154481 * C1417) *
               C154164 * C2903 +
           (C7161 * C4912 - C7162 * C4907 - C7161 * C4913 + C154445 * C4916 +
            C7159 * C4258 - C7160 * C4254 - C7159 * C4259 + C154470 * C4266 +
            C7157 * C1412 - C7158 * C1403 - C7157 * C1413 + C154481 * C1418) *
               C154164 * C2902) *
              C154082 * C1397) *
         C154047) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C7157 * C144 - C7158 * C136 - C7157 * C145 + C154481 * C160 +
             C7159 * C600 - C7160 * C584 - C7159 * C601 + C154470 * C620 +
             C7161 * C602 - C7162 * C585 - C7161 * C603 + C154445 * C621) *
                C154164 * C2902 +
            (C7236 + C7237 + C7238) * C154164 * C2903 + C7252 * C154429) *
               C577 -
           (C8351 * C154429 + (C7865 + C7866 + C7867) * C154164 * C2903 +
            (C7161 * C2337 - C7162 * C2328 - C7161 * C2338 + C154445 * C2343 +
             C7159 * C602 - C7160 * C585 - C7159 * C603 + C154470 * C621 +
             C7157 * C600 - C7158 * C584 - C7157 * C601 + C154481 * C620) *
                C154164 * C2902) *
               C578 +
           ((C7157 * C602 - C7158 * C585 - C7157 * C603 + C154481 * C621 +
             C7159 * C2337 - C7160 * C2328 - C7159 * C2338 + C154470 * C2343 +
             C7161 * C7777 - C7162 * C7773 - C7161 * C7778 + C154445 * C7785) *
                C154164 * C2902 +
            (C7868 + C7869 + C7870) * C154164 * C2903 +
            (C7871 + C7872 + C7873) * C154164 * C154429) *
               C579) *
              C1307 +
          (((C7157 * C1135 - C7158 * C1129 - C7157 * C1136 + C154481 * C1147 +
             C7159 * C1554 - C7160 * C1545 - C7159 * C1555 + C154470 * C1560 +
             C7161 * C6274 - C7162 * C6263 - C7161 * C6275 + C154445 * C6281) *
                C154164 * C2902 +
            (C8688 + C8689 + C8690) * C154164 * C2903 +
            (C8691 + C8692 + C8693) * C154164 * C154429) *
               C578 -
           (C8109 * C154429 + (C7547 + C7548 + C7549) * C154164 * C2903 +
            (C7161 * C1554 - C7162 * C1545 - C7161 * C1555 + C154445 * C1560 +
             C7159 * C1135 - C7160 * C1129 - C7159 * C1136 + C154470 * C1147 +
             C7157 * C363 - C7158 * C347 - C7157 * C364 + C154481 * C383) *
                C154164 * C2902) *
               C577 -
           ((C7161 * C9278 - C7162 * C9275 - C7161 * C9279 + C154445 * C9284 +
             C7159 * C6266 - C7160 * C6259 - C7159 * C6267 + C154470 * C6277 +
             C7157 * C1550 - C7158 * C1543 - C7157 * C1551 + C154481 * C1558) *
                C154164 * C154429 +
            (C7161 * C9280 - C7162 * C9276 - C7161 * C9281 + C154445 * C9285 +
             C7159 * C6270 - C7160 * C6261 - C7159 * C6271 + C154470 * C6279 +
             C7157 * C1552 - C7158 * C1544 - C7157 * C1553 + C154481 * C1559) *
                C154164 * C2903 +
            (C7161 * C9282 - C7162 * C9277 - C7161 * C9283 + C154445 * C9286 +
             C7159 * C6274 - C7160 * C6263 - C7159 * C6275 + C154470 * C6281 +
             C7157 * C1554 - C7158 * C1545 - C7157 * C1555 + C154481 * C1560) *
                C154164 * C2902) *
               C579) *
              C154118) *
         C154047) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C24270 +
             C3210 * C24271 + C3211 * C154442) *
                C154477 +
            (C24277 + C24278 + C24279) * C154458 + C24291 * C154429) *
               C154082 * C1307 -
           (C24975 * C154429 + (C24514 + C24515 + C24516) * C154458 +
            (C3214 * C154442 + C3211 * C24271 + C3210 * C24270) * C154477) *
               C154082 * C154118) *
              C1309 +
          (((C24516 + C24515 + C24514) * C154477 +
            (C24513 + C24512 + C24511) * C154458 +
            (C24972 + C24973 + C24974) * C154429) *
               C154082 * C154118 -
           (C24292 * C154429 + (C24282 + C24281 + C24280) * C154458 +
            (C24279 + C24278 + C24277) * C154477) *
               C154082 * C1307) *
              C1310 +
          ((C24291 * C154477 + (C24285 + C24284 + C24283) * C154458 +
            (C24286 + C24287 + C24288) * C154429) *
               C154082 * C1307 -
           (((C134 * C1404 - C135 * C1399 - C134 * C1405 + C154181 * C1414) *
                 C154442 +
             C447 * C24271 + C440 * C24270) *
                C154429 +
            (C24974 + C24973 + C24972) * C154458 + C24975 * C154477) *
               C154082 * C154118) *
              C1311)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                C24270 +
            C3210 * C24271 + C3211 * C154442) *
               C154477 +
           (C24277 + C24278 + C24279) * C154458 + C24291 * C154429) *
              C154082 * C1394 -
          (C24975 * C154429 + (C24514 + C24515 + C24516) * C154458 +
           (C3214 * C154442 + C3211 * C24271 + C3210 * C24270) * C154477) *
              C154082 * C1395 +
          ((C3211 * C24270 + C3214 * C24271 + C4687 * C154442) * C154477 +
           (C24517 + C24518 + C24519) * C154458 +
           (C24520 + C24521 + C24522) * C154429) *
              C154082 * C1396 -
          (((C134 * C4671 - C135 * C4668 - C134 * C4672 + C154181 * C4677) *
                C154442 +
            C3216 * C24271 + C3212 * C24270) *
               C154429 +
           ((C134 * C4673 - C135 * C4669 - C134 * C4674 + C154181 * C4678) *
                C154442 +
            C3215 * C24271 + C3213 * C24270) *
               C154458 +
           ((C134 * C4675 - C135 * C4670 - C134 * C4676 + C154181 * C4679) *
                C154442 +
            C4687 * C24271 + C3214 * C24270) *
               C154477) *
              C154082 * C1397) *
         C154047) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C24270 +
             C3210 * C24271 + C3211 * C154442) *
                C154477 +
            (C24277 + C24278 + C24279) * C154458 + C24291 * C154429) *
               C577 -
           (C25198 * C154429 + (C24744 + C24745 + C24746) * C154458 +
            (C4299 * C154442 + C4300 * C24271 +
             (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                 C24270) *
                C154477) *
               C578 +
           (((C134 * C602 - C135 * C585 - C134 * C603 + C154181 * C621) *
                 C24270 +
             C4930 * C24271 + C4931 * C154442) *
                C154477 +
            (C24747 + C24748 + C24749) * C154458 +
            (C24750 + C24751 + C24752) * C154429) *
               C579) *
              C1307 +
          (((C4300 * C24270 + C4299 * C24271 + C5676 * C154442) * C154477 +
            (C25489 + C25490 + C25491) * C154458 +
            (C25492 + C25493 + C25494) * C154429) *
               C578 -
           (C24975 * C154429 + (C24514 + C24515 + C24516) * C154458 +
            (C3214 * C154442 + C3211 * C24271 + C3210 * C24270) * C154477) *
               C577 -
           (((C134 * C4908 - C135 * C4905 - C134 * C4909 + C154181 * C4914) *
                 C154442 +
             C3505 * C24271 + C3504 * C24270) *
                C154429 +
            ((C134 * C4910 - C135 * C4906 - C134 * C4911 + C154181 * C4915) *
                 C154442 +
             C3503 * C24271 + C3502 * C24270) *
                C154458 +
            ((C134 * C4912 - C135 * C4907 - C134 * C4913 + C154181 * C4916) *
                 C154442 +
             C4931 * C24271 + C4930 * C24270) *
                C154477) *
               C579) *
              C154118) *
         C154047) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                C28192 +
            C3210 * C28193 + C3211 * C28194 + C3214 * C28195 + C4687 * C28196) *
               C154011 * C154082 * C1307 -
           (C28341 * C28196 + C4687 * C28195 + C3214 * C28194 + C3211 * C28193 +
            C3210 * C28192) *
               C154011 * C154082 * C154118) *
              C1309 +
          ((C443 * C28192 + C444 * C28193 + C3213 * C28194 + C3215 * C28195 +
            C28342 * C28196) *
               C154011 * C154082 * C154118 -
           (C3215 * C28196 + C3213 * C28195 + C444 * C28194 + C443 * C28193 +
            C205 * C28192) *
               C154011 * C154082 * C1307) *
              C1310 +
          ((C206 * C28192 + C442 * C28193 + C445 * C28194 + C3212 * C28195 +
            C3216 * C28196) *
               C154011 * C154082 * C1307 -
           ((C134 * C4671 - C135 * C4668 - C134 * C4672 + C154181 * C4677) *
                C28196 +
            C3216 * C28195 + C3212 * C28194 + C445 * C28193 + C442 * C28192) *
               C154011 * C154082 * C154118) *
              C1311)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) * C28192 +
           C3210 * C28193 + C3211 * C28194 + C3214 * C28195 + C4687 * C28196) *
              C154011 * C154082 * C1394 -
          (C28341 * C28196 + C4687 * C28195 + C3214 * C28194 + C3211 * C28193 +
           C3210 * C28192) *
              C154011 * C154082 * C1395 +
          (C3211 * C28192 + C3214 * C28193 + C4687 * C28194 + C28341 * C28195 +
           C29115 * C28196) *
              C154011 * C154082 * C1396 -
          ((C134 * C29105 - C135 * C29104 - C134 * C29106 + C154181 * C29107) *
               C28196 +
           C29115 * C28195 + C28341 * C28194 + C4687 * C28193 +
           C3214 * C28192) *
              C154011 * C154082 * C1397) *
         C154047) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                C28192 +
            C3210 * C28193 + C3211 * C28194 + C3214 * C28195 + C4687 * C28196) *
               C154011 * C577 -
           (C28899 * C28196 + C5676 * C28195 + C4299 * C28194 + C4300 * C28193 +
            (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                C28192) *
               C154011 * C578 +
           ((C134 * C602 - C135 * C585 - C134 * C603 + C154181 * C621) *
                C28192 +
            C4930 * C28193 + C4931 * C28194 + C29254 * C28195 +
            C29255 * C28196) *
               C154011 * C579) *
              C1307 +
          ((C4300 * C28192 + C4299 * C28193 + C5676 * C28194 + C28899 * C28195 +
            (C134 * C28880 - C135 * C28878 - C134 * C28881 + C154181 * C28884) *
                C28196) *
               C154011 * C578 -
           (C28341 * C28196 + C4687 * C28195 + C3214 * C28194 + C3211 * C28193 +
            C3210 * C28192) *
               C154011 * C577 -
           ((C134 * C29238 - C135 * C29237 - C134 * C29239 + C154181 * C29240) *
                C28196 +
            C29255 * C28195 + C29254 * C28194 + C4931 * C28193 +
            C4930 * C28192) *
               C154011 * C579) *
              C154118) *
         C154047) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C7157 * C144 - C7158 * C136 - C7157 * C145 + C154481 * C160 +
             C7159 * C600 - C7160 * C584 - C7159 * C601 + C154470 * C620 +
             C7161 * C602 - C7162 * C585 - C7161 * C603 + C154445 * C621) *
                C24270 +
            (C30851 + C30852 + C30853) * C24271 + C30864 * C154442) *
               C154011 * C154082 * C1307 -
           ((C30857 + C30858 + C30859) * C154442 +
            (C30856 + C30855 + C30854) * C24271 +
            (C30853 + C30852 + C30851) * C24270) *
               C154011 * C154082 * C154118) *
              C1309 +
          (((C7549 + C7548 + C7547) * C24270 +
            (C7550 + C7551 + C7552) * C24271 +
            (C30860 + C30861 + C30862) * C154442) *
               C154011 * C154082 * C154118 -
           (C30838 * C154442 + (C7547 + C7548 + C7549) * C24271 +
            (C7238 + C7237 + C7236) * C24270) *
               C154011 * C154082 * C1307) *
              C1310 +
          ((C7250 * C24270 + (C7546 + C7545 + C7544) * C24271 +
            (C7553 + C7554 + C7555) * C154442) *
               C154011 * C154082 * C1307 -
           ((C7161 * C4908 - C7162 * C4905 - C7161 * C4909 + C154445 * C4914 +
             C7159 * C4262 - C7160 * C4256 - C7159 * C4263 + C154470 * C4268 +
             C7157 * C1408 - C7158 * C1401 - C7157 * C1409 + C154481 * C1416) *
                C154442 +
            (C7555 + C7554 + C7553) * C24271 + C8105 * C24270) *
               C154011 * C154082 * C154118) *
              C1311)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C7157 * C144 - C7158 * C136 - C7157 * C145 + C154481 * C160 +
            C7159 * C600 - C7160 * C584 - C7159 * C601 + C154470 * C620 +
            C7161 * C602 - C7162 * C585 - C7161 * C603 + C154445 * C621) *
               C24270 +
           (C30851 + C30852 + C30853) * C24271 + C30864 * C154442) *
              C154011 * C154082 * C1394 -
          (C32261 * C154442 + (C30856 + C30855 + C30854) * C24271 +
           (C30853 + C30852 + C30851) * C24270) *
              C154011 * C154082 * C1395 +
          (C30864 * C24270 + (C30859 + C30858 + C30857) * C24271 +
           (C32268 + C32269 + C32270) * C154442) *
              C154011 * C154082 * C1396 -
          ((C7161 * C29238 - C7162 * C29237 - C7161 * C29239 +
            C154445 * C29240 + C7159 * C28880 - C7160 * C28878 -
            C7159 * C28881 + C154470 * C28884 + C7157 * C4675 - C7158 * C4670 -
            C7157 * C4676 + C154481 * C4679) *
               C154442 +
           (C32270 + C32269 + C32268) * C24271 + C32261 * C24270) *
              C154011 * C154082 * C1397) *
         C154047) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C7157 * C144 - C7158 * C136 - C7157 * C145 + C154481 * C160 +
             C7159 * C600 - C7160 * C584 - C7159 * C601 + C154470 * C620 +
             C7161 * C602 - C7162 * C585 - C7161 * C603 + C154445 * C621) *
                C24270 +
            (C30851 + C30852 + C30853) * C24271 + C30864 * C154442) *
               C154011 * C577 -
           ((C31875 + C31876 + C31877) * C154442 +
            (C31878 + C31879 + C31880) * C24271 +
            (C7161 * C2337 - C7162 * C2328 - C7161 * C2338 + C154445 * C2343 +
             C7159 * C602 - C7160 * C585 - C7159 * C603 + C154470 * C621 +
             C7157 * C600 - C7158 * C584 - C7157 * C601 + C154481 * C620) *
                C24270) *
               C154011 * C578 +
           ((C7157 * C602 - C7158 * C585 - C7157 * C603 + C154481 * C621 +
             C7159 * C2337 - C7160 * C2328 - C7159 * C2338 + C154470 * C2343 +
             C7161 * C7777 - C7162 * C7773 - C7161 * C7778 + C154445 * C7785) *
                C24270 +
            (C32529 + C32530 + C32531) * C24271 +
            (C32532 + C32533 + C32534) * C154442) *
               C154011 * C579) *
              C1307 +
          (((C31880 + C31879 + C31878) * C24270 +
            (C31877 + C31876 + C31875) * C24271 +
            (C7157 * C4258 - C7158 * C4254 - C7157 * C4259 + C154481 * C4266 +
             C7159 * C4912 - C7160 * C4907 - C7159 * C4913 + C154470 * C4916 +
             C7161 * C30002 - C7162 * C29999 - C7161 * C30003 +
             C154445 * C30005) *
                C154442) *
               C154011 * C578 -
           (C32261 * C154442 + (C30856 + C30855 + C30854) * C24271 +
            (C30853 + C30852 + C30851) * C24270) *
               C154011 * C577 -
           ((C7161 * C32489 - C7162 * C32488 - C7161 * C32490 +
             C154445 * C32491 + C7159 * C30002 - C7160 * C29999 -
             C7159 * C30003 + C154470 * C30005 + C7157 * C4912 - C7158 * C4907 -
             C7157 * C4913 + C154481 * C4916) *
                C154442 +
            (C32534 + C32533 + C32532) * C24271 +
            (C32531 + C32530 + C32529) * C24270) *
               C154011 * C579) *
              C154118) *
         C154047) /
            (p * q * std::sqrt(p + q));
    d2ee[338] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                  C154480 +
              C3210 * C154468 + C3211 * C154442) *
                 C2902 +
             (C2906 + C2907 + C2908) * C2903 + C2920 * C154429) *
                C154393 -
            (C3960 * C154429 + (C3507 + C3468 + C3469) * C2903 +
             (C4299 * C154442 + C4300 * C154468 +
              (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                  C154480) *
                 C2902) *
                C154146) *
               C1307 +
           (((C4300 * C154480 + C4299 * C154468 +
              (C134 * C4258 - C135 * C4254 - C134 * C4259 + C154181 * C4266) *
                  C154442) *
                 C2902 +
             (C4279 + C4280 + C4303) * C2903 +
             (C4285 + C4286 + C4304) * C154429) *
                C154146 -
            (C3734 * C154429 + (C3219 + C3174 + C3175) * C2903 +
             (C3214 * C154442 + C3211 * C154468 + C3210 * C154480) * C2902) *
                C154393) *
               C154118) *
              C154384 +
          ((((C3469 + C3468 + C3507) * C2902 + (C3463 + C3462 + C3506) * C2903 +
             (C3954 + C3955 + C3964) * C154429) *
                C154146 -
            (C2921 * C154429 + (C2911 + C2910 + C2909) * C2903 +
             (C2908 + C2907 + C2906) * C2902) *
                C154393) *
               C1307 +
           (((C3175 + C3174 + C3219) * C2902 + (C3169 + C3168 + C3218) * C2903 +
             (C3731 + C3732 + C3733) * C154429) *
                C154393 -
            (((C134 * C4264 - C135 * C4257 - C134 * C4265 + C154181 * C4269) *
                  C154442 +
              C3963 * C154468 + C1180 * C154480) *
                 C154429 +
             (C4304 + C4286 + C4285) * C2903 +
             (C4303 + C4280 + C4279) * C2902) *
                C154146) *
               C154118) *
              C154053)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C154164 * C123 +
             C211 * C124 + C212 * C125 + C213 * C126 + C214 * C127) *
                C154393 -
            (C685 * C127 + C686 * C126 + C687 * C125 + C688 * C124 +
             (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                 C154164 * C123) *
                C154146) *
               C1307 +
           (((C134 * C1135 - C135 * C1129 - C134 * C1136 + C154181 * C1147) *
                 C154164 * C123 +
             C1182 * C124 + C1183 * C125 + C1184 * C126 + C1185 * C127) *
                C154146 -
            (C448 * C127 + C449 * C126 + C450 * C125 + C451 * C124 +
             (C134 * C363 - C135 * C347 - C134 * C364 + C154181 * C383) *
                 C154164 * C123) *
                C154393) *
               C154118) *
              C154384 +
          (((C688 * C123 + C687 * C124 + C686 * C125 + C685 * C126 +
             C967 * C127) *
                C154146 -
            (C215 * C127 + C214 * C126 + C213 * C125 + C212 * C124 +
             C211 * C123) *
                C154393) *
               C1307 +
           ((C451 * C123 + C450 * C124 + C449 * C125 + C448 * C126 +
             C831 * C127) *
                C154393 -
            ((C134 * C1145 - C135 * C1134 - C134 * C1146 + C154181 * C1152) *
                 C154164 * C127 +
             C1185 * C126 + C1184 * C125 + C1183 * C124 + C1182 * C123) *
                C154146) *
               C154118) *
              C154053)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C7157 * C144 - C7158 * C136 - C7157 * C145 + C154481 * C160 +
              C7159 * C600 - C7160 * C584 - C7159 * C601 + C154470 * C620 +
              C7161 * C602 - C7162 * C585 - C7161 * C603 + C154445 * C621) *
                 C154164 * C2902 +
             (C7236 + C7237 + C7238) * C154164 * C2903 + C7252 * C154429) *
                C154393 -
            (C8351 * C154429 + (C7865 + C7866 + C7867) * C154164 * C2903 +
             (C7161 * C2337 - C7162 * C2328 - C7161 * C2338 + C154445 * C2343 +
              C7159 * C602 - C7160 * C585 - C7159 * C603 + C154470 * C621 +
              C7157 * C600 - C7158 * C584 - C7157 * C601 + C154481 * C620) *
                 C154164 * C2902) *
                C154146) *
               C1307 +
           (((C7157 * C1135 - C7158 * C1129 - C7157 * C1136 + C154481 * C1147 +
              C7159 * C1554 - C7160 * C1545 - C7159 * C1555 + C154470 * C1560 +
              C7161 * C6274 - C7162 * C6263 - C7161 * C6275 + C154445 * C6281) *
                 C154164 * C2902 +
             (C8688 + C8689 + C8690) * C154164 * C2903 +
             (C8691 + C8692 + C8693) * C154164 * C154429) *
                C154146 -
            (C8109 * C154429 + (C7547 + C7548 + C7549) * C154164 * C2903 +
             (C7161 * C1554 - C7162 * C1545 - C7161 * C1555 + C154445 * C1560 +
              C7159 * C1135 - C7160 * C1129 - C7159 * C1136 + C154470 * C1147 +
              C7157 * C363 - C7158 * C347 - C7157 * C364 + C154481 * C383) *
                 C154164 * C2902) *
                C154393) *
               C154118) *
              C154384 +
          ((((C7867 + C7866 + C7865) * C154164 * C2902 +
             (C7864 + C7863 + C7862) * C154164 * C2903 +
             (C8355 + C8356 + C8357) * C154164 * C154429) *
                C154146 -
            (C7253 * C154429 + (C7241 + C7240 + C7239) * C154164 * C2903 +
             (C7238 + C7237 + C7236) * C154164 * C2902) *
                C154393) *
               C1307 +
           (((C7549 + C7548 + C7547) * C154164 * C2902 +
             (C7546 + C7545 + C7544) * C154164 * C2903 +
             (C8113 + C8114 + C8115) * C154164 * C154429) *
                C154393 -
            ((C7161 * C8648 - C7162 * C8647 - C7161 * C8649 + C154445 * C8650 +
              C7159 * C1548 - C7160 * C1542 - C7159 * C1549 + C154470 * C1557 +
              C7157 * C1141 - C7158 * C1132 - C7157 * C1142 + C154481 * C1150) *
                 C154164 * C154429 +
             (C8693 + C8692 + C8691) * C154164 * C2903 +
             (C8690 + C8689 + C8688) * C154164 * C2902) *
                C154146) *
               C154118) *
              C154053)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                  C24270 +
              C3210 * C24271 + C3211 * C154442) *
                 C154477 +
             (C24277 + C24278 + C24279) * C154458 + C24291 * C154429) *
                C154393 -
            (C25198 * C154429 + (C24744 + C24745 + C24746) * C154458 +
             (C4299 * C154442 + C4300 * C24271 +
              (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                  C24270) *
                 C154477) *
                C154146) *
               C1307 +
           (((C4300 * C24270 + C4299 * C24271 + C5676 * C154442) * C154477 +
             (C25489 + C25490 + C25491) * C154458 +
             (C25492 + C25493 + C25494) * C154429) *
                C154146 -
            (C24975 * C154429 + (C24514 + C24515 + C24516) * C154458 +
             (C3214 * C154442 + C3211 * C24271 + C3210 * C24270) * C154477) *
                C154393) *
               C154118) *
              C154384 +
          ((((C24746 + C24745 + C24744) * C154477 +
             (C24743 + C24742 + C24741) * C154458 +
             (C25195 + C25196 + C25197) * C154429) *
                C154146 -
            (C24292 * C154429 + (C24282 + C24281 + C24280) * C154458 +
             (C24279 + C24278 + C24277) * C154477) *
                C154393) *
               C1307 +
           (((C24516 + C24515 + C24514) * C154477 +
             (C24513 + C24512 + C24511) * C154458 +
             (C24972 + C24973 + C24974) * C154429) *
                C154393 -
            (((C134 * C4264 - C135 * C4257 - C134 * C4265 + C154181 * C4269) *
                  C154442 +
              C3963 * C24271 + C1180 * C24270) *
                 C154429 +
             (C25494 + C25493 + C25492) * C154458 +
             (C25491 + C25490 + C25489) * C154477) *
                C154146) *
               C154118) *
              C154053)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C28192 +
             C3210 * C28193 + C3211 * C28194 + C3214 * C28195 +
             C4687 * C28196) *
                C154011 * C154393 -
            (C28899 * C28196 + C5676 * C28195 + C4299 * C28194 +
             C4300 * C28193 +
             (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                 C28192) *
                C154011 * C154146) *
               C1307 +
           ((C4300 * C28192 + C4299 * C28193 + C5676 * C28194 +
             C28899 * C28195 +
             (C134 * C28880 - C135 * C28878 - C134 * C28881 +
              C154181 * C28884) *
                 C28196) *
                C154011 * C154146 -
            (C28341 * C28196 + C4687 * C28195 + C3214 * C28194 +
             C3211 * C28193 + C3210 * C28192) *
                C154011 * C154393) *
               C154118) *
              C154384 +
          (((C680 * C28192 + C1178 * C28193 + C3501 * C28194 + C4301 * C28195 +
             C28900 * C28196) *
                C154011 * C154146 -
            (C3215 * C28196 + C3213 * C28195 + C444 * C28194 + C443 * C28193 +
             C205 * C28192) *
                C154011 * C154393) *
               C1307 +
           ((C443 * C28192 + C444 * C28193 + C3213 * C28194 + C3215 * C28195 +
             C28342 * C28196) *
                C154011 * C154393 -
            ((C134 * C28882 - C135 * C28879 - C134 * C28883 +
              C154181 * C28885) *
                 C28196 +
             C28900 * C28195 + C4301 * C28194 + C3501 * C28193 +
             C1178 * C28192) *
                C154011 * C154146) *
               C154118) *
              C154053)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C7157 * C144 - C7158 * C136 - C7157 * C145 + C154481 * C160 +
              C7159 * C600 - C7160 * C584 - C7159 * C601 + C154470 * C620 +
              C7161 * C602 - C7162 * C585 - C7161 * C603 + C154445 * C621) *
                 C24270 +
             (C30851 + C30852 + C30853) * C24271 + C30864 * C154442) *
                C154011 * C154393 -
            ((C31875 + C31876 + C31877) * C154442 +
             (C31878 + C31879 + C31880) * C24271 +
             (C7161 * C2337 - C7162 * C2328 - C7161 * C2338 + C154445 * C2343 +
              C7159 * C602 - C7160 * C585 - C7159 * C603 + C154470 * C621 +
              C7157 * C600 - C7158 * C584 - C7157 * C601 + C154481 * C620) *
                 C24270) *
                C154011 * C154146) *
               C1307 +
           (((C31880 + C31879 + C31878) * C24270 +
             (C31877 + C31876 + C31875) * C24271 +
             (C7157 * C4258 - C7158 * C4254 - C7157 * C4259 + C154481 * C4266 +
              C7159 * C4912 - C7160 * C4907 - C7159 * C4913 + C154470 * C4916 +
              C7161 * C30002 - C7162 * C29999 - C7161 * C30003 +
              C154445 * C30005) *
                 C154442) *
                C154011 * C154146 -
            (C32261 * C154442 + (C30856 + C30855 + C30854) * C24271 +
             (C30853 + C30852 + C30851) * C24270) *
                C154011 * C154393) *
               C154118) *
              C154384 +
          ((((C7867 + C7866 + C7865) * C24270 +
             (C8688 + C8689 + C8690) * C24271 +
             (C31881 + C31882 + C31883) * C154442) *
                C154011 * C154146 -
            (C30838 * C154442 + (C7547 + C7548 + C7549) * C24271 +
             (C7238 + C7237 + C7236) * C24270) *
                C154011 * C154393) *
               C1307 +
           (((C7549 + C7548 + C7547) * C24270 +
             (C7550 + C7551 + C7552) * C24271 +
             (C30860 + C30861 + C30862) * C154442) *
                C154011 * C154393 -
            ((C7161 * C31817 - C7162 * C31816 - C7161 * C31818 +
              C154445 * C31819 + C7159 * C4910 - C7160 * C4906 - C7159 * C4911 +
              C154470 * C4915 + C7157 * C4260 - C7158 * C4255 - C7157 * C4261 +
              C154481 * C4267) *
                 C154442 +
             (C31883 + C31882 + C31881) * C24271 +
             (C8690 + C8689 + C8688) * C24270) *
                C154011 * C154146) *
               C154118) *
              C154053)) /
            (p * q * std::sqrt(p + q));
    d2ee[339] +=
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
               C154164 * C123 +
           C211 * C124 + C212 * C125 + C213 * C126 + C214 * C127) *
              C154082 * C1394 -
          (C448 * C127 + C449 * C126 + C450 * C125 + C451 * C124 +
           (C134 * C363 - C135 * C347 - C134 * C364 + C154181 * C383) *
               C154164 * C123) *
              C154082 * C1395 +
          ((C134 * C365 - C135 * C348 - C134 * C366 + C154181 * C384) *
               C154164 * C123 +
           C452 * C124 + C453 * C125 + C454 * C126 + C455 * C127) *
              C154082 * C1396 -
          ((C134 * C1404 - C135 * C1399 - C134 * C1405 + C154181 * C1414) *
               C154164 * C127 +
           (C134 * C1406 - C135 * C1400 - C134 * C1407 + C154181 * C1415) *
               C154164 * C126 +
           (C134 * C1408 - C135 * C1401 - C134 * C1409 + C154181 * C1416) *
               C154164 * C125 +
           (C134 * C1410 - C135 * C1402 - C134 * C1411 + C154181 * C1417) *
               C154164 * C124 +
           (C134 * C1412 - C135 * C1403 - C134 * C1413 + C154181 * C1418) *
               C154164 * C123) *
              C154082 * C1397) *
         C154047) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                C154164 * C123 +
            C211 * C124 + C212 * C125 + C213 * C126 + C214 * C127) *
               C154082 * C1307 -
           (C448 * C127 + C449 * C126 + C450 * C125 + C451 * C124 +
            (C134 * C363 - C135 * C347 - C134 * C364 + C154181 * C383) *
                C154164 * C123) *
               C154082 * C154118) *
              C1309 +
          ((C451 * C123 + C450 * C124 + C449 * C125 + C448 * C126 +
            C831 * C127) *
               C154082 * C154118 -
           (C215 * C127 + C214 * C126 + C213 * C125 + C212 * C124 +
            C211 * C123) *
               C154082 * C1307) *
              C1310 +
          ((C212 * C123 + C213 * C124 + C214 * C125 + C215 * C126 +
            C216 * C127) *
               C154082 * C1307 -
           ((C134 * C820 - C135 * C819 - C134 * C821 + C154181 * C822) *
                C154164 * C127 +
            C831 * C126 + C448 * C125 + C449 * C124 + C450 * C123) *
               C154082 * C154118) *
              C1311)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C154480 +
             C3210 * C154468 + C3211 * C154442) *
                C2902 +
            (C2906 + C2907 + C2908) * C2903 + C2920 * C154429) *
               C154082 * C1307 -
           (C3734 * C154429 + (C3219 + C3174 + C3175) * C2903 +
            (C3214 * C154442 + C3211 * C154468 + C3210 * C154480) * C2902) *
               C154082 * C154118) *
              C1309 +
          (((C3175 + C3174 + C3219) * C2902 + (C3169 + C3168 + C3218) * C2903 +
            (C3731 + C3732 + C3733) * C154429) *
               C154082 * C154118 -
           (C2921 * C154429 + (C2911 + C2910 + C2909) * C2903 +
            (C2908 + C2907 + C2906) * C2902) *
               C154082 * C1307) *
              C1310 +
          ((C2920 * C2902 + (C2914 + C2913 + C2912) * C2903 +
            (C2915 + C2916 + C2917) * C154429) *
               C154082 * C1307 -
           (((C134 * C1404 - C135 * C1399 - C134 * C1405 + C154181 * C1414) *
                 C154442 +
             C447 * C154468 + C440 * C154480) *
                C154429 +
            (C3733 + C3732 + C3731) * C2903 + C3734 * C2902) *
               C154082 * C154118) *
              C1311)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                C154480 +
            C3210 * C154468 + C3211 * C154442) *
               C2902 +
           (C2906 + C2907 + C2908) * C2903 + C2920 * C154429) *
              C154082 * C1394 -
          (C3734 * C154429 + (C3219 + C3174 + C3175) * C2903 +
           (C3214 * C154442 + C3211 * C154468 + C3210 * C154480) * C2902) *
              C154082 * C1395 +
          ((C3211 * C154480 + C3214 * C154468 + C4687 * C154442) * C2902 +
           (C3180 + C3220 + C3221) * C2903 +
           (C3185 + C3222 + C3223) * C154429) *
              C154082 * C1396 -
          (((C134 * C4671 - C135 * C4668 - C134 * C4672 + C154181 * C4677) *
                C154442 +
            C3216 * C154468 + C3212 * C154480) *
               C154429 +
           ((C134 * C4673 - C135 * C4669 - C134 * C4674 + C154181 * C4678) *
                C154442 +
            C3215 * C154468 + C3213 * C154480) *
               C2903 +
           ((C134 * C4675 - C135 * C4670 - C134 * C4676 + C154181 * C4679) *
                C154442 +
            C4687 * C154468 + C3214 * C154480) *
               C2902) *
              C154082 * C1397) *
         C154047) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C7157 * C144 - C7158 * C136 - C7157 * C145 + C154481 * C160 +
             C7159 * C600 - C7160 * C584 - C7159 * C601 + C154470 * C620 +
             C7161 * C602 - C7162 * C585 - C7161 * C603 + C154445 * C621) *
                C154164 * C2902 +
            (C7236 + C7237 + C7238) * C154164 * C2903 + C7252 * C154429) *
               C154082 * C1307 -
           (C8109 * C154429 + (C7547 + C7548 + C7549) * C154164 * C2903 +
            (C7161 * C1554 - C7162 * C1545 - C7161 * C1555 + C154445 * C1560 +
             C7159 * C1135 - C7160 * C1129 - C7159 * C1136 + C154470 * C1147 +
             C7157 * C363 - C7158 * C347 - C7157 * C364 + C154481 * C383) *
                C154164 * C2902) *
               C154082 * C154118) *
              C1309 +
          (((C7549 + C7548 + C7547) * C154164 * C2902 +
            (C7546 + C7545 + C7544) * C154164 * C2903 +
            (C8113 + C8114 + C8115) * C154164 * C154429) *
               C154082 * C154118 -
           (C7253 * C154429 + (C7241 + C7240 + C7239) * C154164 * C2903 +
            (C7238 + C7237 + C7236) * C154164 * C2902) *
               C154082 * C1307) *
              C1310 +
          ((C7252 * C2902 + (C7244 + C7243 + C7242) * C154164 * C2903 +
            (C7245 + C7246 + C7247) * C154164 * C154429) *
               C154082 * C1307 -
           ((C7161 * C1546 - C7162 * C1541 - C7161 * C1547 + C154445 * C1556 +
             C7159 * C1143 - C7160 * C1133 - C7159 * C1144 + C154470 * C1151 +
             C7157 * C355 - C7158 * C343 - C7157 * C356 + C154481 * C379) *
                C154164 * C154429 +
            (C8115 + C8114 + C8113) * C154164 * C2903 + C8109 * C2902) *
               C154082 * C154118) *
              C1311)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C7157 * C144 - C7158 * C136 - C7157 * C145 + C154481 * C160 +
            C7159 * C600 - C7160 * C584 - C7159 * C601 + C154470 * C620 +
            C7161 * C602 - C7162 * C585 - C7161 * C603 + C154445 * C621) *
               C154164 * C2902 +
           (C7236 + C7237 + C7238) * C154164 * C2903 + C7252 * C154429) *
              C154082 * C1394 -
          (C8109 * C154429 + (C7547 + C7548 + C7549) * C154164 * C2903 +
           (C7161 * C1554 - C7162 * C1545 - C7161 * C1555 + C154445 * C1560 +
            C7159 * C1135 - C7160 * C1129 - C7159 * C1136 + C154470 * C1147 +
            C7157 * C363 - C7158 * C347 - C7157 * C364 + C154481 * C383) *
               C154164 * C2902) *
              C154082 * C1395 +
          ((C7157 * C365 - C7158 * C348 - C7157 * C366 + C154481 * C384 +
            C7159 * C1985 - C7160 * C1976 - C7159 * C1986 + C154470 * C1991 +
            C7161 * C3445 - C7162 * C3441 - C7161 * C3446 + C154445 * C3453) *
               C154164 * C2902 +
           (C7550 + C7551 + C7552) * C154164 * C2903 +
           (C7553 + C7554 + C7555) * C154164 * C154429) *
              C154082 * C1396 -
          ((C7161 * C4908 - C7162 * C4905 - C7161 * C4909 + C154445 * C4914 +
            C7159 * C4262 - C7160 * C4256 - C7159 * C4263 + C154470 * C4268 +
            C7157 * C1408 - C7158 * C1401 - C7157 * C1409 + C154481 * C1416) *
               C154164 * C154429 +
           (C7161 * C4910 - C7162 * C4906 - C7161 * C4911 + C154445 * C4915 +
            C7159 * C4260 - C7160 * C4255 - C7159 * C4261 + C154470 * C4267 +
            C7157 * C1410 - C7158 * C1402 - C7157 * C1411 + C154481 * C1417) *
               C154164 * C2903 +
           (C7161 * C4912 - C7162 * C4907 - C7161 * C4913 + C154445 * C4916 +
            C7159 * C4258 - C7160 * C4254 - C7159 * C4259 + C154470 * C4266 +
            C7157 * C1412 - C7158 * C1403 - C7157 * C1413 + C154481 * C1418) *
               C154164 * C2902) *
              C154082 * C1397) *
         C154047) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C24270 +
             C3210 * C24271 + C3211 * C154442) *
                C154477 +
            (C24277 + C24278 + C24279) * C154458 + C24291 * C154429) *
               C154082 * C1307 -
           (C24975 * C154429 + (C24514 + C24515 + C24516) * C154458 +
            (C3214 * C154442 + C3211 * C24271 + C3210 * C24270) * C154477) *
               C154082 * C154118) *
              C1309 +
          (((C24516 + C24515 + C24514) * C154477 +
            (C24513 + C24512 + C24511) * C154458 +
            (C24972 + C24973 + C24974) * C154429) *
               C154082 * C154118 -
           (C24292 * C154429 + (C24282 + C24281 + C24280) * C154458 +
            (C24279 + C24278 + C24277) * C154477) *
               C154082 * C1307) *
              C1310 +
          ((C24291 * C154477 + (C24285 + C24284 + C24283) * C154458 +
            (C24286 + C24287 + C24288) * C154429) *
               C154082 * C1307 -
           (((C134 * C1404 - C135 * C1399 - C134 * C1405 + C154181 * C1414) *
                 C154442 +
             C447 * C24271 + C440 * C24270) *
                C154429 +
            (C24974 + C24973 + C24972) * C154458 + C24975 * C154477) *
               C154082 * C154118) *
              C1311)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                C24270 +
            C3210 * C24271 + C3211 * C154442) *
               C154477 +
           (C24277 + C24278 + C24279) * C154458 + C24291 * C154429) *
              C154082 * C1394 -
          (C24975 * C154429 + (C24514 + C24515 + C24516) * C154458 +
           (C3214 * C154442 + C3211 * C24271 + C3210 * C24270) * C154477) *
              C154082 * C1395 +
          ((C3211 * C24270 + C3214 * C24271 + C4687 * C154442) * C154477 +
           (C24517 + C24518 + C24519) * C154458 +
           (C24520 + C24521 + C24522) * C154429) *
              C154082 * C1396 -
          (((C134 * C4671 - C135 * C4668 - C134 * C4672 + C154181 * C4677) *
                C154442 +
            C3216 * C24271 + C3212 * C24270) *
               C154429 +
           ((C134 * C4673 - C135 * C4669 - C134 * C4674 + C154181 * C4678) *
                C154442 +
            C3215 * C24271 + C3213 * C24270) *
               C154458 +
           ((C134 * C4675 - C135 * C4670 - C134 * C4676 + C154181 * C4679) *
                C154442 +
            C4687 * C24271 + C3214 * C24270) *
               C154477) *
              C154082 * C1397) *
         C154047) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                C28192 +
            C3210 * C28193 + C3211 * C28194 + C3214 * C28195 + C4687 * C28196) *
               C154011 * C154082 * C1307 -
           (C28341 * C28196 + C4687 * C28195 + C3214 * C28194 + C3211 * C28193 +
            C3210 * C28192) *
               C154011 * C154082 * C154118) *
              C1309 +
          ((C443 * C28192 + C444 * C28193 + C3213 * C28194 + C3215 * C28195 +
            C28342 * C28196) *
               C154011 * C154082 * C154118 -
           (C3215 * C28196 + C3213 * C28195 + C444 * C28194 + C443 * C28193 +
            C205 * C28192) *
               C154011 * C154082 * C1307) *
              C1310 +
          ((C206 * C28192 + C442 * C28193 + C445 * C28194 + C3212 * C28195 +
            C3216 * C28196) *
               C154011 * C154082 * C1307 -
           ((C134 * C4671 - C135 * C4668 - C134 * C4672 + C154181 * C4677) *
                C28196 +
            C3216 * C28195 + C3212 * C28194 + C445 * C28193 + C442 * C28192) *
               C154011 * C154082 * C154118) *
              C1311)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) * C28192 +
           C3210 * C28193 + C3211 * C28194 + C3214 * C28195 + C4687 * C28196) *
              C154011 * C154082 * C1394 -
          (C28341 * C28196 + C4687 * C28195 + C3214 * C28194 + C3211 * C28193 +
           C3210 * C28192) *
              C154011 * C154082 * C1395 +
          (C3211 * C28192 + C3214 * C28193 + C4687 * C28194 + C28341 * C28195 +
           C29115 * C28196) *
              C154011 * C154082 * C1396 -
          ((C134 * C29105 - C135 * C29104 - C134 * C29106 + C154181 * C29107) *
               C28196 +
           C29115 * C28195 + C28341 * C28194 + C4687 * C28193 +
           C3214 * C28192) *
              C154011 * C154082 * C1397) *
         C154047) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C7157 * C144 - C7158 * C136 - C7157 * C145 + C154481 * C160 +
             C7159 * C600 - C7160 * C584 - C7159 * C601 + C154470 * C620 +
             C7161 * C602 - C7162 * C585 - C7161 * C603 + C154445 * C621) *
                C24270 +
            (C30851 + C30852 + C30853) * C24271 + C30864 * C154442) *
               C154011 * C154082 * C1307 -
           ((C30857 + C30858 + C30859) * C154442 +
            (C30856 + C30855 + C30854) * C24271 +
            (C30853 + C30852 + C30851) * C24270) *
               C154011 * C154082 * C154118) *
              C1309 +
          (((C7549 + C7548 + C7547) * C24270 +
            (C7550 + C7551 + C7552) * C24271 +
            (C30860 + C30861 + C30862) * C154442) *
               C154011 * C154082 * C154118 -
           (C30838 * C154442 + (C7547 + C7548 + C7549) * C24271 +
            (C7238 + C7237 + C7236) * C24270) *
               C154011 * C154082 * C1307) *
              C1310 +
          ((C7250 * C24270 + (C7546 + C7545 + C7544) * C24271 +
            (C7553 + C7554 + C7555) * C154442) *
               C154011 * C154082 * C1307 -
           ((C7161 * C4908 - C7162 * C4905 - C7161 * C4909 + C154445 * C4914 +
             C7159 * C4262 - C7160 * C4256 - C7159 * C4263 + C154470 * C4268 +
             C7157 * C1408 - C7158 * C1401 - C7157 * C1409 + C154481 * C1416) *
                C154442 +
            (C7555 + C7554 + C7553) * C24271 + C8105 * C24270) *
               C154011 * C154082 * C154118) *
              C1311)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C7157 * C144 - C7158 * C136 - C7157 * C145 + C154481 * C160 +
            C7159 * C600 - C7160 * C584 - C7159 * C601 + C154470 * C620 +
            C7161 * C602 - C7162 * C585 - C7161 * C603 + C154445 * C621) *
               C24270 +
           (C30851 + C30852 + C30853) * C24271 + C30864 * C154442) *
              C154011 * C154082 * C1394 -
          (C32261 * C154442 + (C30856 + C30855 + C30854) * C24271 +
           (C30853 + C30852 + C30851) * C24270) *
              C154011 * C154082 * C1395 +
          (C30864 * C24270 + (C30859 + C30858 + C30857) * C24271 +
           (C32268 + C32269 + C32270) * C154442) *
              C154011 * C154082 * C1396 -
          ((C7161 * C29238 - C7162 * C29237 - C7161 * C29239 +
            C154445 * C29240 + C7159 * C28880 - C7160 * C28878 -
            C7159 * C28881 + C154470 * C28884 + C7157 * C4675 - C7158 * C4670 -
            C7157 * C4676 + C154481 * C4679) *
               C154442 +
           (C32270 + C32269 + C32268) * C24271 + C32261 * C24270) *
              C154011 * C154082 * C1397) *
         C154047) /
            (p * q * std::sqrt(p + q));
    d2ee[340] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                  C154480 +
              C3210 * C154468 + C3211 * C154442) *
                 C2902 +
             (C2906 + C2907 + C2908) * C2903 + C2920 * C154429) *
                C2114 -
            (C3960 * C154429 + (C3507 + C3468 + C3469) * C2903 +
             (C4299 * C154442 + C4300 * C154468 +
              (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                  C154480) *
                 C2902) *
                C154146) *
               C154392 +
           (((C4300 * C154480 + C4299 * C154468 + C5676 * C154442) * C2902 +
             (C4279 + C4280 + C4303) * C2903 +
             (C4285 + C4286 + C4304) * C154429) *
                C154146 -
            (C3734 * C154429 + (C3219 + C3174 + C3175) * C2903 +
             (C3214 * C154442 + C3211 * C154468 + C3210 * C154480) * C2902) *
                C2114) *
               C154118) *
              C154384 +
          ((((C3469 + C3468 + C3507) * C2902 + (C3463 + C3462 + C3506) * C2903 +
             (C3954 + C3955 + C3964) * C154429) *
                C154146 -
            (C2921 * C154429 + (C2911 + C2910 + C2909) * C2903 +
             (C2908 + C2907 + C2906) * C2902) *
                C2114) *
               C154392 +
           (((C3175 + C3174 + C3219) * C2902 + (C3169 + C3168 + C3218) * C2903 +
             (C3731 + C3732 + C3733) * C154429) *
                C2114 -
            (((C134 * C4264 - C135 * C4257 - C134 * C4265 + C154181 * C4269) *
                  C154442 +
              C3963 * C154468 + C1180 * C154480) *
                 C154429 +
             (C4304 + C4286 + C4285) * C2903 +
             (C4303 + C4280 + C4279) * C2902) *
                C154146) *
               C154118) *
              C154053)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C154164 * C123 +
             C211 * C124 + C212 * C125 + C213 * C126 + C214 * C127) *
                C2114 -
            (C685 * C127 + C686 * C126 + C687 * C125 + C688 * C124 +
             (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                 C154164 * C123) *
                C154146) *
               C154392 +
           (((C134 * C1135 - C135 * C1129 - C134 * C1136 + C154181 * C1147) *
                 C154164 * C123 +
             C1182 * C124 + C1183 * C125 + C1184 * C126 + C1185 * C127) *
                C154146 -
            (C448 * C127 + C449 * C126 + C450 * C125 + C451 * C124 +
             (C134 * C363 - C135 * C347 - C134 * C364 + C154181 * C383) *
                 C154164 * C123) *
                C2114) *
               C154118) *
              C154384 +
          (((C688 * C123 + C687 * C124 + C686 * C125 + C685 * C126 +
             C967 * C127) *
                C154146 -
            (C215 * C127 + C214 * C126 + C213 * C125 + C212 * C124 +
             C211 * C123) *
                C2114) *
               C154392 +
           ((C451 * C123 + C450 * C124 + C449 * C125 + C448 * C126 +
             C831 * C127) *
                C2114 -
            ((C134 * C1145 - C135 * C1134 - C134 * C1146 + C154181 * C1152) *
                 C154164 * C127 +
             C1185 * C126 + C1184 * C125 + C1183 * C124 + C1182 * C123) *
                C154146) *
               C154118) *
              C154053)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C7157 * C144 - C7158 * C136 - C7157 * C145 + C154481 * C160 +
              C7159 * C600 - C7160 * C584 - C7159 * C601 + C154470 * C620 +
              C7161 * C602 - C7162 * C585 - C7161 * C603 + C154445 * C621) *
                 C154164 * C2902 +
             (C7236 + C7237 + C7238) * C154164 * C2903 + C7252 * C154429) *
                C2114 -
            (C8351 * C154429 + (C7865 + C7866 + C7867) * C154164 * C2903 +
             (C7161 * C2337 - C7162 * C2328 - C7161 * C2338 + C154445 * C2343 +
              C7159 * C602 - C7160 * C585 - C7159 * C603 + C154470 * C621 +
              C7157 * C600 - C7158 * C584 - C7157 * C601 + C154481 * C620) *
                 C154164 * C2902) *
                C154146) *
               C154392 +
           (((C7157 * C1135 - C7158 * C1129 - C7157 * C1136 + C154481 * C1147 +
              C7159 * C1554 - C7160 * C1545 - C7159 * C1555 + C154470 * C1560 +
              C7161 * C6274 - C7162 * C6263 - C7161 * C6275 + C154445 * C6281) *
                 C154164 * C2902 +
             (C8688 + C8689 + C8690) * C154164 * C2903 +
             (C8691 + C8692 + C8693) * C154164 * C154429) *
                C154146 -
            (C8109 * C154429 + (C7547 + C7548 + C7549) * C154164 * C2903 +
             (C7161 * C1554 - C7162 * C1545 - C7161 * C1555 + C154445 * C1560 +
              C7159 * C1135 - C7160 * C1129 - C7159 * C1136 + C154470 * C1147 +
              C7157 * C363 - C7158 * C347 - C7157 * C364 + C154481 * C383) *
                 C154164 * C2902) *
                C2114) *
               C154118) *
              C154384 +
          ((((C7867 + C7866 + C7865) * C154164 * C2902 +
             (C7864 + C7863 + C7862) * C154164 * C2903 +
             (C8355 + C8356 + C8357) * C154164 * C154429) *
                C154146 -
            (C7253 * C154429 + (C7241 + C7240 + C7239) * C154164 * C2903 +
             (C7238 + C7237 + C7236) * C154164 * C2902) *
                C2114) *
               C154392 +
           (((C7549 + C7548 + C7547) * C154164 * C2902 +
             (C7546 + C7545 + C7544) * C154164 * C2903 +
             (C8113 + C8114 + C8115) * C154164 * C154429) *
                C2114 -
            ((C7161 * C8648 - C7162 * C8647 - C7161 * C8649 + C154445 * C8650 +
              C7159 * C1548 - C7160 * C1542 - C7159 * C1549 + C154470 * C1557 +
              C7157 * C1141 - C7158 * C1132 - C7157 * C1142 + C154481 * C1150) *
                 C154164 * C154429 +
             (C8693 + C8692 + C8691) * C154164 * C2903 +
             (C8690 + C8689 + C8688) * C154164 * C2902) *
                C154146) *
               C154118) *
              C154053)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                  C24270 +
              C3210 * C24271 + C3211 * C154442) *
                 C154477 +
             (C24277 + C24278 + C24279) * C154458 + C24291 * C154429) *
                C2114 -
            (C25198 * C154429 + (C24744 + C24745 + C24746) * C154458 +
             (C4299 * C154442 + C4300 * C24271 +
              (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                  C24270) *
                 C154477) *
                C154146) *
               C154392 +
           (((C4300 * C24270 + C4299 * C24271 + C5676 * C154442) * C154477 +
             (C25489 + C25490 + C25491) * C154458 +
             (C25492 + C25493 + C25494) * C154429) *
                C154146 -
            (C24975 * C154429 + (C24514 + C24515 + C24516) * C154458 +
             (C3214 * C154442 + C3211 * C24271 + C3210 * C24270) * C154477) *
                C2114) *
               C154118) *
              C154384 +
          ((((C24746 + C24745 + C24744) * C154477 +
             (C24743 + C24742 + C24741) * C154458 +
             (C25195 + C25196 + C25197) * C154429) *
                C154146 -
            (C24292 * C154429 + (C24282 + C24281 + C24280) * C154458 +
             (C24279 + C24278 + C24277) * C154477) *
                C2114) *
               C154392 +
           (((C24516 + C24515 + C24514) * C154477 +
             (C24513 + C24512 + C24511) * C154458 +
             (C24972 + C24973 + C24974) * C154429) *
                C2114 -
            (((C134 * C4264 - C135 * C4257 - C134 * C4265 + C154181 * C4269) *
                  C154442 +
              C3963 * C24271 + C1180 * C24270) *
                 C154429 +
             (C25494 + C25493 + C25492) * C154458 +
             (C25491 + C25490 + C25489) * C154477) *
                C154146) *
               C154118) *
              C154053)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C28192 +
             C3210 * C28193 + C3211 * C28194 + C3214 * C28195 +
             C4687 * C28196) *
                C154011 * C2114 -
            (C28899 * C28196 + C5676 * C28195 + C4299 * C28194 +
             C4300 * C28193 +
             (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                 C28192) *
                C154011 * C154146) *
               C154392 +
           ((C4300 * C28192 + C4299 * C28193 + C5676 * C28194 +
             C28899 * C28195 + C29672 * C28196) *
                C154011 * C154146 -
            (C28341 * C28196 + C4687 * C28195 + C3214 * C28194 +
             C3211 * C28193 + C3210 * C28192) *
                C154011 * C2114) *
               C154118) *
              C154384 +
          (((C680 * C28192 + C1178 * C28193 + C3501 * C28194 + C4301 * C28195 +
             C28900 * C28196) *
                C154011 * C154146 -
            (C3215 * C28196 + C3213 * C28195 + C444 * C28194 + C443 * C28193 +
             C205 * C28192) *
                C154011 * C2114) *
               C154392 +
           ((C443 * C28192 + C444 * C28193 + C3213 * C28194 + C3215 * C28195 +
             C28342 * C28196) *
                C154011 * C2114 -
            ((C134 * C28882 - C135 * C28879 - C134 * C28883 +
              C154181 * C28885) *
                 C28196 +
             C28900 * C28195 + C4301 * C28194 + C3501 * C28193 +
             C1178 * C28192) *
                C154011 * C154146) *
               C154118) *
              C154053)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C7157 * C144 - C7158 * C136 - C7157 * C145 + C154481 * C160 +
              C7159 * C600 - C7160 * C584 - C7159 * C601 + C154470 * C620 +
              C7161 * C602 - C7162 * C585 - C7161 * C603 + C154445 * C621) *
                 C24270 +
             (C30851 + C30852 + C30853) * C24271 + C30864 * C154442) *
                C154011 * C2114 -
            (C33274 * C154442 + (C31878 + C31879 + C31880) * C24271 +
             (C7161 * C2337 - C7162 * C2328 - C7161 * C2338 + C154445 * C2343 +
              C7159 * C602 - C7160 * C585 - C7159 * C603 + C154470 * C621 +
              C7157 * C600 - C7158 * C584 - C7157 * C601 + C154481 * C620) *
                 C24270) *
                C154011 * C154146) *
               C154392 +
           (((C31880 + C31879 + C31878) * C24270 +
             (C31877 + C31876 + C31875) * C24271 +
             (C33281 + C33282 + C33283) * C154442) *
                C154011 * C154146 -
            (C32261 * C154442 + (C30856 + C30855 + C30854) * C24271 +
             (C30853 + C30852 + C30851) * C24270) *
                C154011 * C2114) *
               C154118) *
              C154384 +
          ((((C7867 + C7866 + C7865) * C24270 +
             (C8688 + C8689 + C8690) * C24271 +
             (C31881 + C31882 + C31883) * C154442) *
                C154011 * C154146 -
            (C30838 * C154442 + (C7547 + C7548 + C7549) * C24271 +
             (C7238 + C7237 + C7236) * C24270) *
                C154011 * C2114) *
               C154392 +
           (((C7549 + C7548 + C7547) * C24270 +
             (C7550 + C7551 + C7552) * C24271 +
             (C30860 + C30861 + C30862) * C154442) *
                C154011 * C2114 -
            ((C7161 * C31817 - C7162 * C31816 - C7161 * C31818 +
              C154445 * C31819 + C7159 * C4910 - C7160 * C4906 - C7159 * C4911 +
              C154470 * C4915 + C7157 * C4260 - C7158 * C4255 - C7157 * C4261 +
              C154481 * C4267) *
                 C154442 +
             (C31883 + C31882 + C31881) * C24271 +
             (C8690 + C8689 + C8688) * C24270) *
                C154011 * C154146) *
               C154118) *
              C154053)) /
            (p * q * std::sqrt(p + q));
    d2ee[341] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C154480 +
             C3210 * C154468 + C3211 * C154442) *
                C2902 +
            (C2906 + C2907 + C2908) * C2903 + C2920 * C154429) *
               C154465 -
           (C3960 * C154429 + (C3507 + C3468 + C3469) * C2903 +
            (C4299 * C154442 + C4300 * C154468 +
             (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                 C154480) *
                C2902) *
               C154466 +
           (((C134 * C602 - C135 * C585 - C134 * C603 + C154181 * C621) *
                 C154480 +
             C4930 * C154468 + C4931 * C154442) *
                C2902 +
            (C3470 + C3508 + C3509) * C2903 +
            (C3479 + C3510 + C3511) * C154429) *
               C2630) *
              C154392 +
          (((C4300 * C154480 + C4299 * C154468 + C5676 * C154442) * C2902 +
            (C4279 + C4280 + C4303) * C2903 +
            (C4285 + C4286 + C4304) * C154429) *
               C154466 -
           (C3734 * C154429 + (C3219 + C3174 + C3175) * C2903 +
            (C3214 * C154442 + C3211 * C154468 + C3210 * C154480) * C2902) *
               C154465 -
           (((C134 * C4908 - C135 * C4905 - C134 * C4909 + C154181 * C4914) *
                 C154442 +
             C3505 * C154468 + C3504 * C154480) *
                C154429 +
            ((C134 * C4910 - C135 * C4906 - C134 * C4911 + C154181 * C4915) *
                 C154442 +
             C3503 * C154468 + C3502 * C154480) *
                C2903 +
            ((C134 * C4912 - C135 * C4907 - C134 * C4913 + C154181 * C4916) *
                 C154442 +
             C4931 * C154468 + C4930 * C154480) *
                C2902) *
               C2630) *
              C154118) *
         C154047) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                C154164 * C123 +
            C211 * C124 + C212 * C125 + C213 * C126 + C214 * C127) *
               C154465 -
           (C685 * C127 + C686 * C126 + C687 * C125 + C688 * C124 +
            (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                C154164 * C123) *
               C154466 +
           ((C134 * C602 - C135 * C585 - C134 * C603 + C154181 * C621) *
                C154164 * C123 +
            C689 * C124 + C690 * C125 + C691 * C126 + C692 * C127) *
               C2630) *
              C154392 +
          (((C134 * C1135 - C135 * C1129 - C134 * C1136 + C154181 * C1147) *
                C154164 * C123 +
            C1182 * C124 + C1183 * C125 + C1184 * C126 + C1185 * C127) *
               C154466 -
           (C448 * C127 + C449 * C126 + C450 * C125 + C451 * C124 +
            (C134 * C363 - C135 * C347 - C134 * C364 + C154181 * C383) *
                C154164 * C123) *
               C154465 -
           ((C134 * C1546 - C135 * C1541 - C134 * C1547 + C154181 * C1556) *
                C154164 * C127 +
            (C134 * C1548 - C135 * C1542 - C134 * C1549 + C154181 * C1557) *
                C154164 * C126 +
            (C134 * C1550 - C135 * C1543 - C134 * C1551 + C154181 * C1558) *
                C154164 * C125 +
            (C134 * C1552 - C135 * C1544 - C134 * C1553 + C154181 * C1559) *
                C154164 * C124 +
            (C134 * C1554 - C135 * C1545 - C134 * C1555 + C154181 * C1560) *
                C154164 * C123) *
               C2630) *
              C154118) *
         C154047) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C7157 * C144 - C7158 * C136 - C7157 * C145 + C154481 * C160 +
             C7159 * C600 - C7160 * C584 - C7159 * C601 + C154470 * C620 +
             C7161 * C602 - C7162 * C585 - C7161 * C603 + C154445 * C621) *
                C154164 * C2902 +
            (C7236 + C7237 + C7238) * C154164 * C2903 + C7252 * C154429) *
               C154465 -
           (C8351 * C154429 + (C7865 + C7866 + C7867) * C154164 * C2903 +
            (C7161 * C2337 - C7162 * C2328 - C7161 * C2338 + C154445 * C2343 +
             C7159 * C602 - C7160 * C585 - C7159 * C603 + C154470 * C621 +
             C7157 * C600 - C7158 * C584 - C7157 * C601 + C154481 * C620) *
                C154164 * C2902) *
               C154466 +
           ((C7157 * C602 - C7158 * C585 - C7157 * C603 + C154481 * C621 +
             C7159 * C2337 - C7160 * C2328 - C7159 * C2338 + C154470 * C2343 +
             C7161 * C7777 - C7162 * C7773 - C7161 * C7778 + C154445 * C7785) *
                C154164 * C2902 +
            (C7868 + C7869 + C7870) * C154164 * C2903 +
            (C7871 + C7872 + C7873) * C154164 * C154429) *
               C2630) *
              C154392 +
          (((C7157 * C1135 - C7158 * C1129 - C7157 * C1136 + C154481 * C1147 +
             C7159 * C1554 - C7160 * C1545 - C7159 * C1555 + C154470 * C1560 +
             C7161 * C6274 - C7162 * C6263 - C7161 * C6275 + C154445 * C6281) *
                C154164 * C2902 +
            (C8688 + C8689 + C8690) * C154164 * C2903 +
            (C8691 + C8692 + C8693) * C154164 * C154429) *
               C154466 -
           (C8109 * C154429 + (C7547 + C7548 + C7549) * C154164 * C2903 +
            (C7161 * C1554 - C7162 * C1545 - C7161 * C1555 + C154445 * C1560 +
             C7159 * C1135 - C7160 * C1129 - C7159 * C1136 + C154470 * C1147 +
             C7157 * C363 - C7158 * C347 - C7157 * C364 + C154481 * C383) *
                C154164 * C2902) *
               C154465 -
           ((C7161 * C9278 - C7162 * C9275 - C7161 * C9279 + C154445 * C9284 +
             C7159 * C6266 - C7160 * C6259 - C7159 * C6267 + C154470 * C6277 +
             C7157 * C1550 - C7158 * C1543 - C7157 * C1551 + C154481 * C1558) *
                C154164 * C154429 +
            (C7161 * C9280 - C7162 * C9276 - C7161 * C9281 + C154445 * C9285 +
             C7159 * C6270 - C7160 * C6261 - C7159 * C6271 + C154470 * C6279 +
             C7157 * C1552 - C7158 * C1544 - C7157 * C1553 + C154481 * C1559) *
                C154164 * C2903 +
            (C7161 * C9282 - C7162 * C9277 - C7161 * C9283 + C154445 * C9286 +
             C7159 * C6274 - C7160 * C6263 - C7159 * C6275 + C154470 * C6281 +
             C7157 * C1554 - C7158 * C1545 - C7157 * C1555 + C154481 * C1560) *
                C154164 * C2902) *
               C2630) *
              C154118) *
         C154047) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C24270 +
             C3210 * C24271 + C3211 * C154442) *
                C154477 +
            (C24277 + C24278 + C24279) * C154458 + C24291 * C154429) *
               C154465 -
           (C25198 * C154429 + (C24744 + C24745 + C24746) * C154458 +
            (C4299 * C154442 + C4300 * C24271 +
             (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                 C24270) *
                C154477) *
               C154466 +
           (((C134 * C602 - C135 * C585 - C134 * C603 + C154181 * C621) *
                 C24270 +
             C4930 * C24271 + C4931 * C154442) *
                C154477 +
            (C24747 + C24748 + C24749) * C154458 +
            (C24750 + C24751 + C24752) * C154429) *
               C2630) *
              C154392 +
          (((C4300 * C24270 + C4299 * C24271 + C5676 * C154442) * C154477 +
            (C25489 + C25490 + C25491) * C154458 +
            (C25492 + C25493 + C25494) * C154429) *
               C154466 -
           (C24975 * C154429 + (C24514 + C24515 + C24516) * C154458 +
            (C3214 * C154442 + C3211 * C24271 + C3210 * C24270) * C154477) *
               C154465 -
           (((C134 * C4908 - C135 * C4905 - C134 * C4909 + C154181 * C4914) *
                 C154442 +
             C3505 * C24271 + C3504 * C24270) *
                C154429 +
            ((C134 * C4910 - C135 * C4906 - C134 * C4911 + C154181 * C4915) *
                 C154442 +
             C3503 * C24271 + C3502 * C24270) *
                C154458 +
            ((C134 * C4912 - C135 * C4907 - C134 * C4913 + C154181 * C4916) *
                 C154442 +
             C4931 * C24271 + C4930 * C24270) *
                C154477) *
               C2630) *
              C154118) *
         C154047) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                C28192 +
            C3210 * C28193 + C3211 * C28194 + C3214 * C28195 + C4687 * C28196) *
               C154011 * C154465 -
           (C28899 * C28196 + C5676 * C28195 + C4299 * C28194 + C4300 * C28193 +
            (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                C28192) *
               C154011 * C154466 +
           ((C134 * C602 - C135 * C585 - C134 * C603 + C154181 * C621) *
                C28192 +
            C4930 * C28193 + C4931 * C28194 + C29254 * C28195 +
            C29255 * C28196) *
               C154011 * C2630) *
              C154392 +
          ((C4300 * C28192 + C4299 * C28193 + C5676 * C28194 + C28899 * C28195 +
            C29672 * C28196) *
               C154011 * C154466 -
           (C28341 * C28196 + C4687 * C28195 + C3214 * C28194 + C3211 * C28193 +
            C3210 * C28192) *
               C154011 * C154465 -
           ((C134 * C29238 - C135 * C29237 - C134 * C29239 + C154181 * C29240) *
                C28196 +
            C29255 * C28195 + C29254 * C28194 + C4931 * C28193 +
            C4930 * C28192) *
               C154011 * C2630) *
              C154118) *
         C154047) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C7157 * C144 - C7158 * C136 - C7157 * C145 + C154481 * C160 +
             C7159 * C600 - C7160 * C584 - C7159 * C601 + C154470 * C620 +
             C7161 * C602 - C7162 * C585 - C7161 * C603 + C154445 * C621) *
                C24270 +
            (C30851 + C30852 + C30853) * C24271 + C30864 * C154442) *
               C154011 * C154465 -
           (C33274 * C154442 + (C31878 + C31879 + C31880) * C24271 +
            (C7161 * C2337 - C7162 * C2328 - C7161 * C2338 + C154445 * C2343 +
             C7159 * C602 - C7160 * C585 - C7159 * C603 + C154470 * C621 +
             C7157 * C600 - C7158 * C584 - C7157 * C601 + C154481 * C620) *
                C24270) *
               C154011 * C154466 +
           ((C7157 * C602 - C7158 * C585 - C7157 * C603 + C154481 * C621 +
             C7159 * C2337 - C7160 * C2328 - C7159 * C2338 + C154470 * C2343 +
             C7161 * C7777 - C7162 * C7773 - C7161 * C7778 + C154445 * C7785) *
                C24270 +
            (C32529 + C32530 + C32531) * C24271 +
            (C32532 + C32533 + C32534) * C154442) *
               C154011 * C2630) *
              C154392 +
          (((C31880 + C31879 + C31878) * C24270 +
            (C31877 + C31876 + C31875) * C24271 +
            (C33281 + C33282 + C33283) * C154442) *
               C154011 * C154466 -
           (C32261 * C154442 + (C30856 + C30855 + C30854) * C24271 +
            (C30853 + C30852 + C30851) * C24270) *
               C154011 * C154465 -
           ((C7161 * C32489 - C7162 * C32488 - C7161 * C32490 +
             C154445 * C32491 + C7159 * C30002 - C7160 * C29999 -
             C7159 * C30003 + C154470 * C30005 + C7157 * C4912 - C7158 * C4907 -
             C7157 * C4913 + C154481 * C4916) *
                C154442 +
            (C32534 + C32533 + C32532) * C24271 +
            (C32531 + C32530 + C32529) * C24270) *
               C154011 * C2630) *
              C154118) *
         C154047) /
            (p * q * std::sqrt(p + q));
    d2ee[342] +=
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             ((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                    C154164 * C123 +
                C211 * C124 + C212 * C125 + C213 * C126 + C214 * C127) *
                   C2114 -
               (C685 * C127 + C686 * C126 + C687 * C125 + C688 * C124 +
                (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                    C154164 * C123) *
                   C154146) *
                  C154066 * C1309 +
              ((C688 * C123 + C687 * C124 + C686 * C125 + C685 * C126 +
                C967 * C127) *
                   C154146 -
               (C215 * C127 + C214 * C126 + C213 * C125 + C212 * C124 +
                C211 * C123) *
                   C2114) *
                  C154066 * C1310 +
              ((C212 * C123 + C213 * C124 + C214 * C125 + C215 * C126 +
                C216 * C127) *
                   C2114 -
               ((C134 * C956 - C135 * C955 - C134 * C957 + C154181 * C958) *
                    C154164 * C127 +
                C967 * C126 + C685 * C125 + C686 * C124 + C687 * C123) *
                   C154146) *
                  C154066 * C1311) +
         std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             ((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                    C154164 * C123 +
                C211 * C124 + C212 * C125 + C213 * C126 + C214 * C127) *
                   C2114 -
               (C685 * C127 + C686 * C126 + C687 * C125 + C688 * C124 +
                (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                    C154164 * C123) *
                   C154146) *
                  C338 +
              (((C134 * C1135 - C135 * C1129 - C134 * C1136 + C154181 * C1147) *
                    C154164 * C123 +
                C1182 * C124 + C1183 * C125 + C1184 * C126 + C1185 * C127) *
                   C154146 -
               (C448 * C127 + C449 * C126 + C450 * C125 + C451 * C124 +
                (C134 * C363 - C135 * C347 - C134 * C364 + C154181 * C383) *
                    C154164 * C123) *
                   C2114) *
                  C339 +
              (((C134 * C365 - C135 * C348 - C134 * C366 + C154181 * C384) *
                    C154164 * C123 +
                C452 * C124 + C453 * C125 + C454 * C126 + C455 * C127) *
                   C2114 -
               ((C134 * C1977 - C135 * C1972 - C134 * C1978 + C154181 * C1987) *
                    C154164 * C127 +
                (C134 * C1979 - C135 * C1973 - C134 * C1980 + C154181 * C1988) *
                    C154164 * C126 +
                (C134 * C1981 - C135 * C1974 - C134 * C1982 + C154181 * C1989) *
                    C154164 * C125 +
                (C134 * C1983 - C135 * C1975 - C134 * C1984 + C154181 * C1990) *
                    C154164 * C124 +
                (C134 * C1985 - C135 * C1976 - C134 * C1986 + C154181 * C1991) *
                    C154164 * C123) *
                   C154146) *
                  C340) *
             C154047) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
               C154164 * C123 +
           C211 * C124 + C212 * C125 + C213 * C126 + C214 * C127) *
              C2320 -
          (C685 * C127 + C686 * C126 + C687 * C125 + C688 * C124 +
           (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
               C154164 * C123) *
              C2321 +
          ((C134 * C602 - C135 * C585 - C134 * C603 + C154181 * C621) *
               C154164 * C123 +
           C689 * C124 + C690 * C125 + C691 * C126 + C692 * C127) *
              C2322 -
          ((C134 * C2329 - C135 * C2324 - C134 * C2330 + C154181 * C2339) *
               C154164 * C127 +
           (C134 * C2331 - C135 * C2325 - C134 * C2332 + C154181 * C2340) *
               C154164 * C126 +
           (C134 * C2333 - C135 * C2326 - C134 * C2334 + C154181 * C2341) *
               C154164 * C125 +
           (C134 * C2335 - C135 * C2327 - C134 * C2336 + C154181 * C2342) *
               C154164 * C124 +
           (C134 * C2337 - C135 * C2328 - C134 * C2338 + C154181 * C2343) *
               C154164 * C123) *
              C2323) *
         C154066 * C154047) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C154480 +
             C3210 * C154468 + C3211 * C154442) *
                C2902 +
            (C2906 + C2907 + C2908) * C2903 + C2920 * C154429) *
               C2114 -
           (C3960 * C154429 + (C3507 + C3468 + C3469) * C2903 +
            (C4299 * C154442 + C4300 * C154468 +
             (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                 C154480) *
                C2902) *
               C154146) *
              C154066 * C1309 +
          (((C3469 + C3468 + C3507) * C2902 + (C3463 + C3462 + C3506) * C2903 +
            (C3954 + C3955 + C3964) * C154429) *
               C154146 -
           (C2921 * C154429 + (C2911 + C2910 + C2909) * C2903 +
            (C2908 + C2907 + C2906) * C2902) *
               C2114) *
              C154066 * C1310 +
          ((C2920 * C2902 + (C2914 + C2913 + C2912) * C2903 +
            (C2915 + C2916 + C2917) * C154429) *
               C2114 -
           (((C134 * C1977 - C135 * C1972 - C134 * C1978 + C154181 * C1987) *
                 C154442 +
             C1181 * C154468 + C677 * C154480) *
                C154429 +
            (C3964 + C3955 + C3954) * C2903 + C3960 * C2902) *
               C154146) *
              C154066 * C1311)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C154480 +
             C3210 * C154468 + C3211 * C154442) *
                C2902 +
            (C2906 + C2907 + C2908) * C2903 + C2920 * C154429) *
               C2114 -
           (C3960 * C154429 + (C3507 + C3468 + C3469) * C2903 +
            (C4299 * C154442 + C4300 * C154468 +
             (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                 C154480) *
                C2902) *
               C154146) *
              C338 +
          (((C4300 * C154480 + C4299 * C154468 + C5676 * C154442) * C2902 +
            (C4279 + C4280 + C4303) * C2903 +
            (C4285 + C4286 + C4304) * C154429) *
               C154146 -
           (C3734 * C154429 + (C3219 + C3174 + C3175) * C2903 +
            (C3214 * C154442 + C3211 * C154468 + C3210 * C154480) * C2902) *
               C2114) *
              C339 +
          (((C3211 * C154480 + C3214 * C154468 + C4687 * C154442) * C2902 +
            (C3180 + C3220 + C3221) * C2903 +
            (C3185 + C3222 + C3223) * C154429) *
               C2114 -
           (((C134 * C5660 - C135 * C5657 - C134 * C5661 + C154181 * C5666) *
                 C154442 +
             C4302 * C154468 + C3500 * C154480) *
                C154429 +
            ((C134 * C5662 - C135 * C5658 - C134 * C5663 + C154181 * C5667) *
                 C154442 +
             C4301 * C154468 + C3501 * C154480) *
                C2903 +
            ((C134 * C5664 - C135 * C5659 - C134 * C5665 + C154181 * C5668) *
                 C154442 +
             C5676 * C154468 + C4299 * C154480) *
                C2902) *
               C154146) *
              C340) *
         C154047) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                C154480 +
            C3210 * C154468 + C3211 * C154442) *
               C2902 +
           (C2906 + C2907 + C2908) * C2903 + C2920 * C154429) *
              C2320 -
          (C3960 * C154429 + (C3507 + C3468 + C3469) * C2903 +
           (C4299 * C154442 + C4300 * C154468 +
            (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                C154480) *
               C2902) *
              C2321 +
          (((C134 * C602 - C135 * C585 - C134 * C603 + C154181 * C621) *
                C154480 +
            C4930 * C154468 + C4931 * C154442) *
               C2902 +
           (C3470 + C3508 + C3509) * C2903 +
           (C3479 + C3510 + C3511) * C154429) *
              C2322 -
          (((C134 * C6264 - C135 * C6258 - C134 * C6265 + C154181 * C6276) *
                C154442 +
            (C134 * C6266 - C135 * C6259 - C134 * C6267 + C154181 * C6277) *
                C154468 +
            (C134 * C2333 - C135 * C2326 - C134 * C2334 + C154181 * C2341) *
                C154480) *
               C154429 +
           ((C134 * C6268 - C135 * C6260 - C134 * C6269 + C154181 * C6278) *
                C154442 +
            (C134 * C6270 - C135 * C6261 - C134 * C6271 + C154181 * C6279) *
                C154468 +
            (C134 * C2335 - C135 * C2327 - C134 * C2336 + C154181 * C2342) *
                C154480) *
               C2903 +
           ((C134 * C6272 - C135 * C6262 - C134 * C6273 + C154181 * C6280) *
                C154442 +
            (C134 * C6274 - C135 * C6263 - C134 * C6275 + C154181 * C6281) *
                C154468 +
            (C134 * C2337 - C135 * C2328 - C134 * C2338 + C154181 * C2343) *
                C154480) *
               C2902) *
              C2323) *
         C154066 * C154047) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C7157 * C144 - C7158 * C136 - C7157 * C145 + C154481 * C160 +
             C7159 * C600 - C7160 * C584 - C7159 * C601 + C154470 * C620 +
             C7161 * C602 - C7162 * C585 - C7161 * C603 + C154445 * C621) *
                C154164 * C2902 +
            (C7236 + C7237 + C7238) * C154164 * C2903 + C7252 * C154429) *
               C2114 -
           (C8351 * C154429 + (C7865 + C7866 + C7867) * C154164 * C2903 +
            (C7161 * C2337 - C7162 * C2328 - C7161 * C2338 + C154445 * C2343 +
             C7159 * C602 - C7160 * C585 - C7159 * C603 + C154470 * C621 +
             C7157 * C600 - C7158 * C584 - C7157 * C601 + C154481 * C620) *
                C154164 * C2902) *
               C154146) *
              C154066 * C1309 +
          (((C7867 + C7866 + C7865) * C154164 * C2902 +
            (C7864 + C7863 + C7862) * C154164 * C2903 +
            (C8355 + C8356 + C8357) * C154164 * C154429) *
               C154146 -
           (C7253 * C154429 + (C7241 + C7240 + C7239) * C154164 * C2903 +
            (C7238 + C7237 + C7236) * C154164 * C2902) *
               C2114) *
              C154066 * C1310 +
          ((C7252 * C2902 + (C7244 + C7243 + C7242) * C154164 * C2903 +
            (C7245 + C7246 + C7247) * C154164 * C154429) *
               C2114 -
           ((C7161 * C2329 - C7162 * C2324 - C7161 * C2330 + C154445 * C2339 +
             C7159 * C610 - C7160 * C589 - C7159 * C611 + C154470 * C625 +
             C7157 * C592 - C7158 * C580 - C7157 * C593 + C154481 * C616) *
                C154164 * C154429 +
            (C8357 + C8356 + C8355) * C154164 * C2903 + C8351 * C2902) *
               C154146) *
              C154066 * C1311)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C7157 * C144 - C7158 * C136 - C7157 * C145 + C154481 * C160 +
             C7159 * C600 - C7160 * C584 - C7159 * C601 + C154470 * C620 +
             C7161 * C602 - C7162 * C585 - C7161 * C603 + C154445 * C621) *
                C154164 * C2902 +
            (C7236 + C7237 + C7238) * C154164 * C2903 + C7252 * C154429) *
               C2114 -
           (C8351 * C154429 + (C7865 + C7866 + C7867) * C154164 * C2903 +
            (C7161 * C2337 - C7162 * C2328 - C7161 * C2338 + C154445 * C2343 +
             C7159 * C602 - C7160 * C585 - C7159 * C603 + C154470 * C621 +
             C7157 * C600 - C7158 * C584 - C7157 * C601 + C154481 * C620) *
                C154164 * C2902) *
               C154146) *
              C338 +
          (((C7157 * C1135 - C7158 * C1129 - C7157 * C1136 + C154481 * C1147 +
             C7159 * C1554 - C7160 * C1545 - C7159 * C1555 + C154470 * C1560 +
             C7161 * C6274 - C7162 * C6263 - C7161 * C6275 + C154445 * C6281) *
                C154164 * C2902 +
            (C8688 + C8689 + C8690) * C154164 * C2903 +
            (C8691 + C8692 + C8693) * C154164 * C154429) *
               C154146 -
           (C8109 * C154429 + (C7547 + C7548 + C7549) * C154164 * C2903 +
            (C7161 * C1554 - C7162 * C1545 - C7161 * C1555 + C154445 * C1560 +
             C7159 * C1135 - C7160 * C1129 - C7159 * C1136 + C154470 * C1147 +
             C7157 * C363 - C7158 * C347 - C7157 * C364 + C154481 * C383) *
                C154164 * C2902) *
               C2114) *
              C339 +
          (((C7157 * C365 - C7158 * C348 - C7157 * C366 + C154481 * C384 +
             C7159 * C1985 - C7160 * C1976 - C7159 * C1986 + C154470 * C1991 +
             C7161 * C3445 - C7162 * C3441 - C7161 * C3446 + C154445 * C3453) *
                C154164 * C2902 +
            (C7550 + C7551 + C7552) * C154164 * C2903 +
            (C7553 + C7554 + C7555) * C154164 * C154429) *
               C2114 -
           ((C7161 * C6264 - C7162 * C6258 - C7161 * C6265 + C154445 * C6276 +
             C7159 * C3449 - C7160 * C3443 - C7159 * C3450 + C154470 * C3455 +
             C7157 * C1981 - C7158 * C1974 - C7157 * C1982 + C154481 * C1989) *
                C154164 * C154429 +
            (C7161 * C6268 - C7162 * C6260 - C7161 * C6269 + C154445 * C6278 +
             C7159 * C3447 - C7160 * C3442 - C7159 * C3448 + C154470 * C3454 +
             C7157 * C1983 - C7158 * C1975 - C7157 * C1984 + C154481 * C1990) *
                C154164 * C2903 +
            (C7161 * C6272 - C7162 * C6262 - C7161 * C6273 + C154445 * C6280 +
             C7159 * C3445 - C7160 * C3441 - C7159 * C3446 + C154470 * C3453 +
             C7157 * C1985 - C7158 * C1976 - C7157 * C1986 + C154481 * C1991) *
                C154164 * C2902) *
               C154146) *
              C340) *
         C154047) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C7157 * C144 - C7158 * C136 - C7157 * C145 + C154481 * C160 +
            C7159 * C600 - C7160 * C584 - C7159 * C601 + C154470 * C620 +
            C7161 * C602 - C7162 * C585 - C7161 * C603 + C154445 * C621) *
               C154164 * C2902 +
           (C7236 + C7237 + C7238) * C154164 * C2903 + C7252 * C154429) *
              C2320 -
          (C8351 * C154429 + (C7865 + C7866 + C7867) * C154164 * C2903 +
           (C7161 * C2337 - C7162 * C2328 - C7161 * C2338 + C154445 * C2343 +
            C7159 * C602 - C7160 * C585 - C7159 * C603 + C154470 * C621 +
            C7157 * C600 - C7158 * C584 - C7157 * C601 + C154481 * C620) *
               C154164 * C2902) *
              C2321 +
          ((C7157 * C602 - C7158 * C585 - C7157 * C603 + C154481 * C621 +
            C7159 * C2337 - C7160 * C2328 - C7159 * C2338 + C154470 * C2343 +
            C7161 * C7777 - C7162 * C7773 - C7161 * C7778 + C154445 * C7785) *
               C154164 * C2902 +
           (C7868 + C7869 + C7870) * C154164 * C2903 +
           (C7871 + C7872 + C7873) * C154164 * C154429) *
              C2322 -
          ((C7161 * C10598 - C7162 * C10595 - C7161 * C10599 +
            C154445 * C10604 + C7159 * C7781 - C7160 * C7775 - C7159 * C7782 +
            C154470 * C7787 + C7157 * C2333 - C7158 * C2326 - C7157 * C2334 +
            C154481 * C2341) *
               C154164 * C154429 +
           (C7161 * C10600 - C7162 * C10596 - C7161 * C10601 +
            C154445 * C10605 + C7159 * C7779 - C7160 * C7774 - C7159 * C7780 +
            C154470 * C7786 + C7157 * C2335 - C7158 * C2327 - C7157 * C2336 +
            C154481 * C2342) *
               C154164 * C2903 +
           (C7161 * C10602 - C7162 * C10597 - C7161 * C10603 +
            C154445 * C10606 + C7159 * C7777 - C7160 * C7773 - C7159 * C7778 +
            C154470 * C7785 + C7157 * C2337 - C7158 * C2328 - C7157 * C2338 +
            C154481 * C2343) *
               C154164 * C2902) *
              C2323) *
         C154066 * C154047) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C24270 +
             C3210 * C24271 + C3211 * C154442) *
                C154477 +
            (C24277 + C24278 + C24279) * C154458 + C24291 * C154429) *
               C2114 -
           (C25198 * C154429 + (C24744 + C24745 + C24746) * C154458 +
            (C4299 * C154442 + C4300 * C24271 +
             (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                 C24270) *
                C154477) *
               C154146) *
              C154066 * C1309 +
          (((C24746 + C24745 + C24744) * C154477 +
            (C24743 + C24742 + C24741) * C154458 +
            (C25195 + C25196 + C25197) * C154429) *
               C154146 -
           (C24292 * C154429 + (C24282 + C24281 + C24280) * C154458 +
            (C24279 + C24278 + C24277) * C154477) *
               C2114) *
              C154066 * C1310 +
          ((C24291 * C154477 + (C24285 + C24284 + C24283) * C154458 +
            (C24286 + C24287 + C24288) * C154429) *
               C2114 -
           (((C134 * C1977 - C135 * C1972 - C134 * C1978 + C154181 * C1987) *
                 C154442 +
             C1181 * C24271 + C677 * C24270) *
                C154429 +
            (C25197 + C25196 + C25195) * C154458 + C25198 * C154477) *
               C154146) *
              C154066 * C1311)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C24270 +
             C3210 * C24271 + C3211 * C154442) *
                C154477 +
            (C24277 + C24278 + C24279) * C154458 + C24291 * C154429) *
               C2114 -
           (C25198 * C154429 + (C24744 + C24745 + C24746) * C154458 +
            (C4299 * C154442 + C4300 * C24271 +
             (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                 C24270) *
                C154477) *
               C154146) *
              C338 +
          (((C4300 * C24270 + C4299 * C24271 + C5676 * C154442) * C154477 +
            (C25489 + C25490 + C25491) * C154458 +
            (C25492 + C25493 + C25494) * C154429) *
               C154146 -
           (C24975 * C154429 + (C24514 + C24515 + C24516) * C154458 +
            (C3214 * C154442 + C3211 * C24271 + C3210 * C24270) * C154477) *
               C2114) *
              C339 +
          (((C3211 * C24270 + C3214 * C24271 + C4687 * C154442) * C154477 +
            (C24517 + C24518 + C24519) * C154458 +
            (C24520 + C24521 + C24522) * C154429) *
               C2114 -
           (((C134 * C5660 - C135 * C5657 - C134 * C5661 + C154181 * C5666) *
                 C154442 +
             C4302 * C24271 + C3500 * C24270) *
                C154429 +
            ((C134 * C5662 - C135 * C5658 - C134 * C5663 + C154181 * C5667) *
                 C154442 +
             C4301 * C24271 + C3501 * C24270) *
                C154458 +
            ((C134 * C5664 - C135 * C5659 - C134 * C5665 + C154181 * C5668) *
                 C154442 +
             C5676 * C24271 + C4299 * C24270) *
                C154477) *
               C154146) *
              C340) *
         C154047) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                C24270 +
            C3210 * C24271 + C3211 * C154442) *
               C154477 +
           (C24277 + C24278 + C24279) * C154458 + C24291 * C154429) *
              C2320 -
          (C25198 * C154429 + (C24744 + C24745 + C24746) * C154458 +
           (C4299 * C154442 + C4300 * C24271 +
            (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                C24270) *
               C154477) *
              C2321 +
          (((C134 * C602 - C135 * C585 - C134 * C603 + C154181 * C621) *
                C24270 +
            C4930 * C24271 + C4931 * C154442) *
               C154477 +
           (C24747 + C24748 + C24749) * C154458 +
           (C24750 + C24751 + C24752) * C154429) *
              C2322 -
          (((C134 * C6264 - C135 * C6258 - C134 * C6265 + C154181 * C6276) *
                C154442 +
            (C134 * C6266 - C135 * C6259 - C134 * C6267 + C154181 * C6277) *
                C24271 +
            (C134 * C2333 - C135 * C2326 - C134 * C2334 + C154181 * C2341) *
                C24270) *
               C154429 +
           ((C134 * C6268 - C135 * C6260 - C134 * C6269 + C154181 * C6278) *
                C154442 +
            (C134 * C6270 - C135 * C6261 - C134 * C6271 + C154181 * C6279) *
                C24271 +
            (C134 * C2335 - C135 * C2327 - C134 * C2336 + C154181 * C2342) *
                C24270) *
               C154458 +
           ((C134 * C6272 - C135 * C6262 - C134 * C6273 + C154181 * C6280) *
                C154442 +
            (C134 * C6274 - C135 * C6263 - C134 * C6275 + C154181 * C6281) *
                C24271 +
            (C134 * C2337 - C135 * C2328 - C134 * C2338 + C154181 * C2343) *
                C24270) *
               C154477) *
              C2323) *
         C154066 * C154047) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                C28192 +
            C3210 * C28193 + C3211 * C28194 + C3214 * C28195 + C4687 * C28196) *
               C154011 * C2114 -
           (C28899 * C28196 + C5676 * C28195 + C4299 * C28194 + C4300 * C28193 +
            (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                C28192) *
               C154011 * C154146) *
              C154066 * C1309 +
          ((C680 * C28192 + C1178 * C28193 + C3501 * C28194 + C4301 * C28195 +
            C28900 * C28196) *
               C154011 * C154146 -
           (C3215 * C28196 + C3213 * C28195 + C444 * C28194 + C443 * C28193 +
            C205 * C28192) *
               C154011 * C2114) *
              C154066 * C1310 +
          ((C206 * C28192 + C442 * C28193 + C445 * C28194 + C3212 * C28195 +
            C3216 * C28196) *
               C154011 * C2114 -
           ((C134 * C5660 - C135 * C5657 - C134 * C5661 + C154181 * C5666) *
                C28196 +
            C4302 * C28195 + C3500 * C28194 + C1179 * C28193 + C679 * C28192) *
               C154011 * C154146) *
              C154066 * C1311)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                C28192 +
            C3210 * C28193 + C3211 * C28194 + C3214 * C28195 + C4687 * C28196) *
               C154011 * C2114 -
           (C28899 * C28196 + C5676 * C28195 + C4299 * C28194 + C4300 * C28193 +
            (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                C28192) *
               C154011 * C154146) *
              C338 +
          ((C4300 * C28192 + C4299 * C28193 + C5676 * C28194 + C28899 * C28195 +
            C29672 * C28196) *
               C154011 * C154146 -
           (C28341 * C28196 + C4687 * C28195 + C3214 * C28194 + C3211 * C28193 +
            C3210 * C28192) *
               C154011 * C2114) *
              C339 +
          ((C3211 * C28192 + C3214 * C28193 + C4687 * C28194 + C28341 * C28195 +
            C29115 * C28196) *
               C154011 * C2114 -
           ((C134 * C29662 - C135 * C29661 - C134 * C29663 + C154181 * C29664) *
                C28196 +
            C29672 * C28195 + C28899 * C28194 + C5676 * C28193 +
            C4299 * C28192) *
               C154011 * C154146) *
              C340) *
         C154047) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) * C28192 +
           C3210 * C28193 + C3211 * C28194 + C3214 * C28195 + C4687 * C28196) *
              C154011 * C2320 -
          (C28899 * C28196 + C5676 * C28195 + C4299 * C28194 + C4300 * C28193 +
           (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
               C28192) *
              C154011 * C2321 +
          ((C134 * C602 - C135 * C585 - C134 * C603 + C154181 * C621) * C28192 +
           C4930 * C28193 + C4931 * C28194 + C29254 * C28195 +
           C29255 * C28196) *
              C154011 * C2322 -
          ((C134 * C30000 - C135 * C29998 - C134 * C30001 + C154181 * C30004) *
               C28196 +
           (C134 * C30002 - C135 * C29999 - C134 * C30003 + C154181 * C30005) *
               C28195 +
           (C134 * C6272 - C135 * C6262 - C134 * C6273 + C154181 * C6280) *
               C28194 +
           (C134 * C6274 - C135 * C6263 - C134 * C6275 + C154181 * C6281) *
               C28193 +
           (C134 * C2337 - C135 * C2328 - C134 * C2338 + C154181 * C2343) *
               C28192) *
              C154011 * C2323) *
         C154066 * C154047) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C7157 * C144 - C7158 * C136 - C7157 * C145 + C154481 * C160 +
             C7159 * C600 - C7160 * C584 - C7159 * C601 + C154470 * C620 +
             C7161 * C602 - C7162 * C585 - C7161 * C603 + C154445 * C621) *
                C24270 +
            (C30851 + C30852 + C30853) * C24271 + C30864 * C154442) *
               C154011 * C2114 -
           (C33274 * C154442 + (C31878 + C31879 + C31880) * C24271 +
            (C7161 * C2337 - C7162 * C2328 - C7161 * C2338 + C154445 * C2343 +
             C7159 * C602 - C7160 * C585 - C7159 * C603 + C154470 * C621 +
             C7157 * C600 - C7158 * C584 - C7157 * C601 + C154481 * C620) *
                C24270) *
               C154011 * C154146) *
              C154066 * C1309 +
          (((C7867 + C7866 + C7865) * C24270 +
            (C8688 + C8689 + C8690) * C24271 +
            (C31881 + C31882 + C31883) * C154442) *
               C154011 * C154146 -
           (C30838 * C154442 + (C7547 + C7548 + C7549) * C24271 +
            (C7238 + C7237 + C7236) * C24270) *
               C154011 * C2114) *
              C154066 * C1310 +
          ((C7250 * C24270 + (C7546 + C7545 + C7544) * C24271 +
            (C7553 + C7554 + C7555) * C154442) *
               C154011 * C2114 -
           ((C7161 * C6264 - C7162 * C6258 - C7161 * C6265 + C154445 * C6276 +
             C7159 * C3449 - C7160 * C3443 - C7159 * C3450 + C154470 * C3455 +
             C7157 * C1981 - C7158 * C1974 - C7157 * C1982 + C154481 * C1989) *
                C154442 +
            (C8693 + C8692 + C8691) * C24271 + C8347 * C24270) *
               C154011 * C154146) *
              C154066 * C1311)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C7157 * C144 - C7158 * C136 - C7157 * C145 + C154481 * C160 +
             C7159 * C600 - C7160 * C584 - C7159 * C601 + C154470 * C620 +
             C7161 * C602 - C7162 * C585 - C7161 * C603 + C154445 * C621) *
                C24270 +
            (C30851 + C30852 + C30853) * C24271 + C30864 * C154442) *
               C154011 * C2114 -
           (C33274 * C154442 + (C31878 + C31879 + C31880) * C24271 +
            (C7161 * C2337 - C7162 * C2328 - C7161 * C2338 + C154445 * C2343 +
             C7159 * C602 - C7160 * C585 - C7159 * C603 + C154470 * C621 +
             C7157 * C600 - C7158 * C584 - C7157 * C601 + C154481 * C620) *
                C24270) *
               C154011 * C154146) *
              C338 +
          (((C31880 + C31879 + C31878) * C24270 +
            (C31877 + C31876 + C31875) * C24271 +
            (C33281 + C33282 + C33283) * C154442) *
               C154011 * C154146 -
           (C32261 * C154442 + (C30856 + C30855 + C30854) * C24271 +
            (C30853 + C30852 + C30851) * C24270) *
               C154011 * C2114) *
              C339 +
          ((C30864 * C24270 + (C30859 + C30858 + C30857) * C24271 +
            (C32268 + C32269 + C32270) * C154442) *
               C154011 * C2114 -
           ((C7161 * C30000 - C7162 * C29998 - C7161 * C30001 +
             C154445 * C30004 + C7159 * C28466 - C7160 * C28464 -
             C7159 * C28467 + C154470 * C28470 + C7157 * C5664 - C7158 * C5659 -
             C7157 * C5665 + C154481 * C5668) *
                C154442 +
            (C33283 + C33282 + C33281) * C24271 + C33274 * C24270) *
               C154011 * C154146) *
              C340) *
         C154047) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C7157 * C144 - C7158 * C136 - C7157 * C145 + C154481 * C160 +
            C7159 * C600 - C7160 * C584 - C7159 * C601 + C154470 * C620 +
            C7161 * C602 - C7162 * C585 - C7161 * C603 + C154445 * C621) *
               C24270 +
           (C30851 + C30852 + C30853) * C24271 + C30864 * C154442) *
              C154011 * C2320 -
          (C33274 * C154442 + (C31878 + C31879 + C31880) * C24271 +
           (C7161 * C2337 - C7162 * C2328 - C7161 * C2338 + C154445 * C2343 +
            C7159 * C602 - C7160 * C585 - C7159 * C603 + C154470 * C621 +
            C7157 * C600 - C7158 * C584 - C7157 * C601 + C154481 * C620) *
               C24270) *
              C154011 * C2321 +
          ((C7157 * C602 - C7158 * C585 - C7157 * C603 + C154481 * C621 +
            C7159 * C2337 - C7160 * C2328 - C7159 * C2338 + C154470 * C2343 +
            C7161 * C7777 - C7162 * C7773 - C7161 * C7778 + C154445 * C7785) *
               C24270 +
           (C32529 + C32530 + C32531) * C24271 +
           (C32532 + C32533 + C32534) * C154442) *
              C154011 * C2322 -
          ((C7161 * C33867 - C7162 * C33865 - C7161 * C33868 +
            C154445 * C33871 + C7159 * C31084 - C7160 * C31082 -
            C7159 * C31085 + C154470 * C31088 + C7157 * C6272 - C7158 * C6262 -
            C7157 * C6273 + C154481 * C6280) *
               C154442 +
           (C7161 * C33869 - C7162 * C33866 - C7161 * C33870 +
            C154445 * C33872 + C7159 * C9282 - C7160 * C9277 - C7159 * C9283 +
            C154470 * C9286 + C7157 * C6274 - C7158 * C6263 - C7157 * C6275 +
            C154481 * C6281) *
               C24271 +
           (C7161 * C10602 - C7162 * C10597 - C7161 * C10603 +
            C154445 * C10606 + C7159 * C7777 - C7160 * C7773 - C7159 * C7778 +
            C154470 * C7785 + C7157 * C2337 - C7158 * C2328 - C7157 * C2338 +
            C154481 * C2343) *
               C24270) *
              C154011 * C2323) *
         C154066 * C154047) /
            (p * q * std::sqrt(p + q));
    d2ee[343] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C154480 +
             C3210 * C154468 + C3211 * C154442) *
                C2902 +
            (C2906 + C2907 + C2908) * C2903 + C2920 * C154429) *
               C154465 -
           (C3960 * C154429 + (C3507 + C3468 + C3469) * C2903 +
            (C4299 * C154442 + C4300 * C154468 +
             (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                 C154480) *
                C2902) *
               C154466 +
           (((C134 * C602 - C135 * C585 - C134 * C603 + C154181 * C621) *
                 C154480 +
             C4930 * C154468 + C4931 * C154442) *
                C2902 +
            (C3470 + C3508 + C3509) * C2903 +
            (C3479 + C3510 + C3511) * C154429) *
               C2630) *
              C154066 * C154384 +
          (((C3469 + C3468 + C3507) * C2902 + (C3463 + C3462 + C3506) * C2903 +
            (C3954 + C3955 + C3964) * C154429) *
               C154466 -
           (C2921 * C154429 + (C2911 + C2910 + C2909) * C2903 +
            (C2908 + C2907 + C2906) * C2902) *
               C154465 -
           (((C134 * C3451 - C135 * C3444 - C134 * C3452 + C154181 * C3456) *
                 C154442 +
             (C134 * C1548 - C135 * C1542 - C134 * C1549 + C154181 * C1557) *
                 C154468 +
             C683 * C154480) *
                C154429 +
            (C3511 + C3510 + C3479) * C2903 + (C3509 + C3508 + C3470) * C2902) *
               C2630) *
              C154066 * C154053)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                C154164 * C123 +
            C211 * C124 + C212 * C125 + C213 * C126 + C214 * C127) *
               C154465 -
           (C685 * C127 + C686 * C126 + C687 * C125 + C688 * C124 +
            (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                C154164 * C123) *
               C154466 +
           ((C134 * C602 - C135 * C585 - C134 * C603 + C154181 * C621) *
                C154164 * C123 +
            C689 * C124 + C690 * C125 + C691 * C126 + C692 * C127) *
               C2630) *
              C154066 * C154384 +
          ((C688 * C123 + C687 * C124 + C686 * C125 + C685 * C126 +
            C967 * C127) *
               C154466 -
           (C215 * C127 + C214 * C126 + C213 * C125 + C212 * C124 +
            C211 * C123) *
               C154465 -
           ((C134 * C614 - C135 * C591 - C134 * C615 + C154181 * C627) *
                C154164 * C127 +
            C692 * C126 + C691 * C125 + C690 * C124 + C689 * C123) *
               C2630) *
              C154066 * C154053)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C7157 * C144 - C7158 * C136 - C7157 * C145 + C154481 * C160 +
             C7159 * C600 - C7160 * C584 - C7159 * C601 + C154470 * C620 +
             C7161 * C602 - C7162 * C585 - C7161 * C603 + C154445 * C621) *
                C154164 * C2902 +
            (C7236 + C7237 + C7238) * C154164 * C2903 + C7252 * C154429) *
               C154465 -
           (C8351 * C154429 + (C7865 + C7866 + C7867) * C154164 * C2903 +
            (C7161 * C2337 - C7162 * C2328 - C7161 * C2338 + C154445 * C2343 +
             C7159 * C602 - C7160 * C585 - C7159 * C603 + C154470 * C621 +
             C7157 * C600 - C7158 * C584 - C7157 * C601 + C154481 * C620) *
                C154164 * C2902) *
               C154466 +
           ((C7157 * C602 - C7158 * C585 - C7157 * C603 + C154481 * C621 +
             C7159 * C2337 - C7160 * C2328 - C7159 * C2338 + C154470 * C2343 +
             C7161 * C7777 - C7162 * C7773 - C7161 * C7778 + C154445 * C7785) *
                C154164 * C2902 +
            (C7868 + C7869 + C7870) * C154164 * C2903 +
            (C7871 + C7872 + C7873) * C154164 * C154429) *
               C2630) *
              C154066 * C154384 +
          (((C7867 + C7866 + C7865) * C154164 * C2902 +
            (C7864 + C7863 + C7862) * C154164 * C2903 +
            (C8355 + C8356 + C8357) * C154164 * C154429) *
               C154466 -
           (C7253 * C154429 + (C7241 + C7240 + C7239) * C154164 * C2903 +
            (C7238 + C7237 + C7236) * C154164 * C2902) *
               C154465 -
           ((C7161 * C7783 - C7162 * C7776 - C7161 * C7784 + C154445 * C7788 +
             C7159 * C2331 - C7160 * C2325 - C7159 * C2332 + C154470 * C2340 +
             C7157 * C608 - C7158 * C588 - C7157 * C609 + C154481 * C624) *
                C154164 * C154429 +
            (C7873 + C7872 + C7871) * C154164 * C2903 +
            (C7870 + C7869 + C7868) * C154164 * C2902) *
               C2630) *
              C154066 * C154053)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C24270 +
             C3210 * C24271 + C3211 * C154442) *
                C154477 +
            (C24277 + C24278 + C24279) * C154458 + C24291 * C154429) *
               C154465 -
           (C25198 * C154429 + (C24744 + C24745 + C24746) * C154458 +
            (C4299 * C154442 + C4300 * C24271 +
             (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                 C24270) *
                C154477) *
               C154466 +
           (((C134 * C602 - C135 * C585 - C134 * C603 + C154181 * C621) *
                 C24270 +
             C4930 * C24271 + C4931 * C154442) *
                C154477 +
            (C24747 + C24748 + C24749) * C154458 +
            (C24750 + C24751 + C24752) * C154429) *
               C2630) *
              C154066 * C154384 +
          (((C24746 + C24745 + C24744) * C154477 +
            (C24743 + C24742 + C24741) * C154458 +
            (C25195 + C25196 + C25197) * C154429) *
               C154466 -
           (C24292 * C154429 + (C24282 + C24281 + C24280) * C154458 +
            (C24279 + C24278 + C24277) * C154477) *
               C154465 -
           (((C134 * C3451 - C135 * C3444 - C134 * C3452 + C154181 * C3456) *
                 C154442 +
             C11901 * C24271 + C683 * C24270) *
                C154429 +
            (C24752 + C24751 + C24750) * C154458 +
            (C24749 + C24748 + C24747) * C154477) *
               C2630) *
              C154066 * C154053)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                C28192 +
            C3210 * C28193 + C3211 * C28194 + C3214 * C28195 + C4687 * C28196) *
               C154011 * C154465 -
           (C28899 * C28196 + C5676 * C28195 + C4299 * C28194 + C4300 * C28193 +
            (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                C28192) *
               C154011 * C154466 +
           ((C134 * C602 - C135 * C585 - C134 * C603 + C154181 * C621) *
                C28192 +
            C4930 * C28193 + C4931 * C28194 + C29254 * C28195 +
            C29255 * C28196) *
               C154011 * C2630) *
              C154066 * C154384 +
          ((C680 * C28192 + C1178 * C28193 + C3501 * C28194 + C4301 * C28195 +
            C28900 * C28196) *
               C154011 * C154466 -
           (C3215 * C28196 + C3213 * C28195 + C444 * C28194 + C443 * C28193 +
            C205 * C28192) *
               C154011 * C154465 -
           ((C134 * C28468 - C135 * C28465 - C134 * C28469 + C154181 * C28471) *
                C28196 +
            (C134 * C4910 - C135 * C4906 - C134 * C4911 + C154181 * C4915) *
                C28195 +
            C3503 * C28194 + C3502 * C28193 + C681 * C28192) *
               C154011 * C2630) *
              C154066 * C154053)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C7157 * C144 - C7158 * C136 - C7157 * C145 + C154481 * C160 +
             C7159 * C600 - C7160 * C584 - C7159 * C601 + C154470 * C620 +
             C7161 * C602 - C7162 * C585 - C7161 * C603 + C154445 * C621) *
                C24270 +
            (C30851 + C30852 + C30853) * C24271 + C30864 * C154442) *
               C154011 * C154465 -
           (C33274 * C154442 + (C31878 + C31879 + C31880) * C24271 +
            (C7161 * C2337 - C7162 * C2328 - C7161 * C2338 + C154445 * C2343 +
             C7159 * C602 - C7160 * C585 - C7159 * C603 + C154470 * C621 +
             C7157 * C600 - C7158 * C584 - C7157 * C601 + C154481 * C620) *
                C24270) *
               C154011 * C154466 +
           ((C7157 * C602 - C7158 * C585 - C7157 * C603 + C154481 * C621 +
             C7159 * C2337 - C7160 * C2328 - C7159 * C2338 + C154470 * C2343 +
             C7161 * C7777 - C7162 * C7773 - C7161 * C7778 + C154445 * C7785) *
                C24270 +
            (C32529 + C32530 + C32531) * C24271 +
            (C32532 + C32533 + C32534) * C154442) *
               C154011 * C2630) *
              C154066 * C154384 +
          (((C7867 + C7866 + C7865) * C24270 +
            (C8688 + C8689 + C8690) * C24271 +
            (C31881 + C31882 + C31883) * C154442) *
               C154011 * C154466 -
           (C30838 * C154442 + (C7547 + C7548 + C7549) * C24271 +
            (C7238 + C7237 + C7236) * C24270) *
               C154011 * C154465 -
           ((C7161 * C31086 - C7162 * C31083 - C7161 * C31087 +
             C154445 * C31089 + C7159 * C6268 - C7160 * C6260 - C7159 * C6269 +
             C154470 * C6278 + C7157 * C3447 - C7158 * C3442 - C7157 * C3448 +
             C154481 * C3454) *
                C154442 +
            (C7161 * C9280 - C7162 * C9276 - C7161 * C9281 + C154445 * C9285 +
             C7159 * C6270 - C7160 * C6261 - C7159 * C6271 + C154470 * C6279 +
             C7157 * C1552 - C7158 * C1544 - C7157 * C1553 + C154481 * C1559) *
                C24271 +
            (C7870 + C7869 + C7868) * C24270) *
               C154011 * C2630) *
              C154066 * C154053)) /
            (p * q * std::sqrt(p + q));
    d2ee[344] +=
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                C154164 * C123 +
            C211 * C124 + C212 * C125 + C213 * C126 + C214 * C127) *
               C2114 -
           (C685 * C127 + C686 * C126 + C687 * C125 + C688 * C124 +
            (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                C154164 * C123) *
               C154146) *
              C338 +
          (((C134 * C1135 - C135 * C1129 - C134 * C1136 + C154181 * C1147) *
                C154164 * C123 +
            C1182 * C124 + C1183 * C125 + C1184 * C126 + C1185 * C127) *
               C154146 -
           (C448 * C127 + C449 * C126 + C450 * C125 + C451 * C124 +
            (C134 * C363 - C135 * C347 - C134 * C364 + C154181 * C383) *
                C154164 * C123) *
               C2114) *
              C339 +
          (((C134 * C365 - C135 * C348 - C134 * C366 + C154181 * C384) *
                C154164 * C123 +
            C452 * C124 + C453 * C125 + C454 * C126 + C455 * C127) *
               C2114 -
           ((C134 * C1977 - C135 * C1972 - C134 * C1978 + C154181 * C1987) *
                C154164 * C127 +
            (C134 * C1979 - C135 * C1973 - C134 * C1980 + C154181 * C1988) *
                C154164 * C126 +
            (C134 * C1981 - C135 * C1974 - C134 * C1982 + C154181 * C1989) *
                C154164 * C125 +
            (C134 * C1983 - C135 * C1975 - C134 * C1984 + C154181 * C1990) *
                C154164 * C124 +
            (C134 * C1985 - C135 * C1976 - C134 * C1986 + C154181 * C1991) *
                C154164 * C123) *
               C154146) *
              C340) *
         C154047) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                C154164 * C123 +
            C211 * C124 + C212 * C125 + C213 * C126 + C214 * C127) *
               C2114 -
           (C685 * C127 + C686 * C126 + C687 * C125 + C688 * C124 +
            (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                C154164 * C123) *
               C154146) *
              C154066 * C1309 +
          ((C688 * C123 + C687 * C124 + C686 * C125 + C685 * C126 +
            C967 * C127) *
               C154146 -
           (C215 * C127 + C214 * C126 + C213 * C125 + C212 * C124 +
            C211 * C123) *
               C2114) *
              C154066 * C1310 +
          ((C212 * C123 + C213 * C124 + C214 * C125 + C215 * C126 +
            C216 * C127) *
               C2114 -
           ((C134 * C956 - C135 * C955 - C134 * C957 + C154181 * C958) *
                C154164 * C127 +
            C967 * C126 + C685 * C125 + C686 * C124 + C687 * C123) *
               C154146) *
              C154066 * C1311)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C154480 +
             C3210 * C154468 + C3211 * C154442) *
                C2902 +
            (C2906 + C2907 + C2908) * C2903 + C2920 * C154429) *
               C2114 -
           (C3960 * C154429 + (C3507 + C3468 + C3469) * C2903 +
            (C4299 * C154442 + C4300 * C154468 +
             (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                 C154480) *
                C2902) *
               C154146) *
              C154066 * C1309 +
          (((C3469 + C3468 + C3507) * C2902 + (C3463 + C3462 + C3506) * C2903 +
            (C3954 + C3955 + C3964) * C154429) *
               C154146 -
           (C2921 * C154429 + (C2911 + C2910 + C2909) * C2903 +
            (C2908 + C2907 + C2906) * C2902) *
               C2114) *
              C154066 * C1310 +
          ((C2920 * C2902 + (C2914 + C2913 + C2912) * C2903 +
            (C2915 + C2916 + C2917) * C154429) *
               C2114 -
           (((C134 * C1977 - C135 * C1972 - C134 * C1978 + C154181 * C1987) *
                 C154442 +
             C1181 * C154468 + C677 * C154480) *
                C154429 +
            (C3964 + C3955 + C3954) * C2903 + C3960 * C2902) *
               C154146) *
              C154066 * C1311)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C154480 +
             C3210 * C154468 + C3211 * C154442) *
                C2902 +
            (C2906 + C2907 + C2908) * C2903 + C2920 * C154429) *
               C2114 -
           (C3960 * C154429 + (C3507 + C3468 + C3469) * C2903 +
            (C4299 * C154442 + C4300 * C154468 +
             (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                 C154480) *
                C2902) *
               C154146) *
              C338 +
          (((C4300 * C154480 + C4299 * C154468 + C5676 * C154442) * C2902 +
            (C4279 + C4280 + C4303) * C2903 +
            (C4285 + C4286 + C4304) * C154429) *
               C154146 -
           (C3734 * C154429 + (C3219 + C3174 + C3175) * C2903 +
            (C3214 * C154442 + C3211 * C154468 + C3210 * C154480) * C2902) *
               C2114) *
              C339 +
          (((C3211 * C154480 + C3214 * C154468 + C4687 * C154442) * C2902 +
            (C3180 + C3220 + C3221) * C2903 +
            (C3185 + C3222 + C3223) * C154429) *
               C2114 -
           (((C134 * C5660 - C135 * C5657 - C134 * C5661 + C154181 * C5666) *
                 C154442 +
             C4302 * C154468 + C3500 * C154480) *
                C154429 +
            ((C134 * C5662 - C135 * C5658 - C134 * C5663 + C154181 * C5667) *
                 C154442 +
             C4301 * C154468 + C3501 * C154480) *
                C2903 +
            ((C134 * C5664 - C135 * C5659 - C134 * C5665 + C154181 * C5668) *
                 C154442 +
             C5676 * C154468 + C4299 * C154480) *
                C2902) *
               C154146) *
              C340) *
         C154047) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C7157 * C144 - C7158 * C136 - C7157 * C145 + C154481 * C160 +
             C7159 * C600 - C7160 * C584 - C7159 * C601 + C154470 * C620 +
             C7161 * C602 - C7162 * C585 - C7161 * C603 + C154445 * C621) *
                C154164 * C2902 +
            (C7236 + C7237 + C7238) * C154164 * C2903 + C7252 * C154429) *
               C2114 -
           (C8351 * C154429 + (C7865 + C7866 + C7867) * C154164 * C2903 +
            (C7161 * C2337 - C7162 * C2328 - C7161 * C2338 + C154445 * C2343 +
             C7159 * C602 - C7160 * C585 - C7159 * C603 + C154470 * C621 +
             C7157 * C600 - C7158 * C584 - C7157 * C601 + C154481 * C620) *
                C154164 * C2902) *
               C154146) *
              C154066 * C1309 +
          (((C7867 + C7866 + C7865) * C154164 * C2902 +
            (C7864 + C7863 + C7862) * C154164 * C2903 +
            (C8355 + C8356 + C8357) * C154164 * C154429) *
               C154146 -
           (C7253 * C154429 + (C7241 + C7240 + C7239) * C154164 * C2903 +
            (C7238 + C7237 + C7236) * C154164 * C2902) *
               C2114) *
              C154066 * C1310 +
          ((C7252 * C2902 + (C7244 + C7243 + C7242) * C154164 * C2903 +
            (C7245 + C7246 + C7247) * C154164 * C154429) *
               C2114 -
           ((C7161 * C2329 - C7162 * C2324 - C7161 * C2330 + C154445 * C2339 +
             C7159 * C610 - C7160 * C589 - C7159 * C611 + C154470 * C625 +
             C7157 * C592 - C7158 * C580 - C7157 * C593 + C154481 * C616) *
                C154164 * C154429 +
            (C8357 + C8356 + C8355) * C154164 * C2903 + C8351 * C2902) *
               C154146) *
              C154066 * C1311)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C7157 * C144 - C7158 * C136 - C7157 * C145 + C154481 * C160 +
             C7159 * C600 - C7160 * C584 - C7159 * C601 + C154470 * C620 +
             C7161 * C602 - C7162 * C585 - C7161 * C603 + C154445 * C621) *
                C154164 * C2902 +
            (C7236 + C7237 + C7238) * C154164 * C2903 + C7252 * C154429) *
               C2114 -
           (C8351 * C154429 + (C7865 + C7866 + C7867) * C154164 * C2903 +
            (C7161 * C2337 - C7162 * C2328 - C7161 * C2338 + C154445 * C2343 +
             C7159 * C602 - C7160 * C585 - C7159 * C603 + C154470 * C621 +
             C7157 * C600 - C7158 * C584 - C7157 * C601 + C154481 * C620) *
                C154164 * C2902) *
               C154146) *
              C338 +
          (((C7157 * C1135 - C7158 * C1129 - C7157 * C1136 + C154481 * C1147 +
             C7159 * C1554 - C7160 * C1545 - C7159 * C1555 + C154470 * C1560 +
             C7161 * C6274 - C7162 * C6263 - C7161 * C6275 + C154445 * C6281) *
                C154164 * C2902 +
            (C8688 + C8689 + C8690) * C154164 * C2903 +
            (C8691 + C8692 + C8693) * C154164 * C154429) *
               C154146 -
           (C8109 * C154429 + (C7547 + C7548 + C7549) * C154164 * C2903 +
            (C7161 * C1554 - C7162 * C1545 - C7161 * C1555 + C154445 * C1560 +
             C7159 * C1135 - C7160 * C1129 - C7159 * C1136 + C154470 * C1147 +
             C7157 * C363 - C7158 * C347 - C7157 * C364 + C154481 * C383) *
                C154164 * C2902) *
               C2114) *
              C339 +
          (((C7157 * C365 - C7158 * C348 - C7157 * C366 + C154481 * C384 +
             C7159 * C1985 - C7160 * C1976 - C7159 * C1986 + C154470 * C1991 +
             C7161 * C3445 - C7162 * C3441 - C7161 * C3446 + C154445 * C3453) *
                C154164 * C2902 +
            (C7550 + C7551 + C7552) * C154164 * C2903 +
            (C7553 + C7554 + C7555) * C154164 * C154429) *
               C2114 -
           ((C7161 * C6264 - C7162 * C6258 - C7161 * C6265 + C154445 * C6276 +
             C7159 * C3449 - C7160 * C3443 - C7159 * C3450 + C154470 * C3455 +
             C7157 * C1981 - C7158 * C1974 - C7157 * C1982 + C154481 * C1989) *
                C154164 * C154429 +
            (C7161 * C6268 - C7162 * C6260 - C7161 * C6269 + C154445 * C6278 +
             C7159 * C3447 - C7160 * C3442 - C7159 * C3448 + C154470 * C3454 +
             C7157 * C1983 - C7158 * C1975 - C7157 * C1984 + C154481 * C1990) *
                C154164 * C2903 +
            (C7161 * C6272 - C7162 * C6262 - C7161 * C6273 + C154445 * C6280 +
             C7159 * C3445 - C7160 * C3441 - C7159 * C3446 + C154470 * C3453 +
             C7157 * C1985 - C7158 * C1976 - C7157 * C1986 + C154481 * C1991) *
                C154164 * C2902) *
               C154146) *
              C340) *
         C154047) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C24270 +
             C3210 * C24271 + C3211 * C154442) *
                C154477 +
            (C24277 + C24278 + C24279) * C154458 + C24291 * C154429) *
               C2114 -
           (C25198 * C154429 + (C24744 + C24745 + C24746) * C154458 +
            (C4299 * C154442 + C4300 * C24271 +
             (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                 C24270) *
                C154477) *
               C154146) *
              C154066 * C1309 +
          (((C24746 + C24745 + C24744) * C154477 +
            (C24743 + C24742 + C24741) * C154458 +
            (C25195 + C25196 + C25197) * C154429) *
               C154146 -
           (C24292 * C154429 + (C24282 + C24281 + C24280) * C154458 +
            (C24279 + C24278 + C24277) * C154477) *
               C2114) *
              C154066 * C1310 +
          ((C24291 * C154477 + (C24285 + C24284 + C24283) * C154458 +
            (C24286 + C24287 + C24288) * C154429) *
               C2114 -
           (((C134 * C1977 - C135 * C1972 - C134 * C1978 + C154181 * C1987) *
                 C154442 +
             C1181 * C24271 + C677 * C24270) *
                C154429 +
            (C25197 + C25196 + C25195) * C154458 + C25198 * C154477) *
               C154146) *
              C154066 * C1311)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C24270 +
             C3210 * C24271 + C3211 * C154442) *
                C154477 +
            (C24277 + C24278 + C24279) * C154458 + C24291 * C154429) *
               C2114 -
           (C25198 * C154429 + (C24744 + C24745 + C24746) * C154458 +
            (C4299 * C154442 + C4300 * C24271 +
             (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                 C24270) *
                C154477) *
               C154146) *
              C338 +
          (((C4300 * C24270 + C4299 * C24271 + C5676 * C154442) * C154477 +
            (C25489 + C25490 + C25491) * C154458 +
            (C25492 + C25493 + C25494) * C154429) *
               C154146 -
           (C24975 * C154429 + (C24514 + C24515 + C24516) * C154458 +
            (C3214 * C154442 + C3211 * C24271 + C3210 * C24270) * C154477) *
               C2114) *
              C339 +
          (((C3211 * C24270 + C3214 * C24271 + C4687 * C154442) * C154477 +
            (C24517 + C24518 + C24519) * C154458 +
            (C24520 + C24521 + C24522) * C154429) *
               C2114 -
           (((C134 * C5660 - C135 * C5657 - C134 * C5661 + C154181 * C5666) *
                 C154442 +
             C4302 * C24271 + C3500 * C24270) *
                C154429 +
            ((C134 * C5662 - C135 * C5658 - C134 * C5663 + C154181 * C5667) *
                 C154442 +
             C4301 * C24271 + C3501 * C24270) *
                C154458 +
            ((C134 * C5664 - C135 * C5659 - C134 * C5665 + C154181 * C5668) *
                 C154442 +
             C5676 * C24271 + C4299 * C24270) *
                C154477) *
               C154146) *
              C340) *
         C154047) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                C28192 +
            C3210 * C28193 + C3211 * C28194 + C3214 * C28195 + C4687 * C28196) *
               C154011 * C2114 -
           (C28899 * C28196 + C5676 * C28195 + C4299 * C28194 + C4300 * C28193 +
            (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                C28192) *
               C154011 * C154146) *
              C154066 * C1309 +
          ((C680 * C28192 + C1178 * C28193 + C3501 * C28194 + C4301 * C28195 +
            C28900 * C28196) *
               C154011 * C154146 -
           (C3215 * C28196 + C3213 * C28195 + C444 * C28194 + C443 * C28193 +
            C205 * C28192) *
               C154011 * C2114) *
              C154066 * C1310 +
          ((C206 * C28192 + C442 * C28193 + C445 * C28194 + C3212 * C28195 +
            C3216 * C28196) *
               C154011 * C2114 -
           ((C134 * C5660 - C135 * C5657 - C134 * C5661 + C154181 * C5666) *
                C28196 +
            C4302 * C28195 + C3500 * C28194 + C1179 * C28193 + C679 * C28192) *
               C154011 * C154146) *
              C154066 * C1311)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                C28192 +
            C3210 * C28193 + C3211 * C28194 + C3214 * C28195 + C4687 * C28196) *
               C154011 * C2114 -
           (C28899 * C28196 + C5676 * C28195 + C4299 * C28194 + C4300 * C28193 +
            (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                C28192) *
               C154011 * C154146) *
              C338 +
          ((C4300 * C28192 + C4299 * C28193 + C5676 * C28194 + C28899 * C28195 +
            C29672 * C28196) *
               C154011 * C154146 -
           (C28341 * C28196 + C4687 * C28195 + C3214 * C28194 + C3211 * C28193 +
            C3210 * C28192) *
               C154011 * C2114) *
              C339 +
          ((C3211 * C28192 + C3214 * C28193 + C4687 * C28194 + C28341 * C28195 +
            C29115 * C28196) *
               C154011 * C2114 -
           ((C134 * C29662 - C135 * C29661 - C134 * C29663 + C154181 * C29664) *
                C28196 +
            C29672 * C28195 + C28899 * C28194 + C5676 * C28193 +
            C4299 * C28192) *
               C154011 * C154146) *
              C340) *
         C154047) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C7157 * C144 - C7158 * C136 - C7157 * C145 + C154481 * C160 +
             C7159 * C600 - C7160 * C584 - C7159 * C601 + C154470 * C620 +
             C7161 * C602 - C7162 * C585 - C7161 * C603 + C154445 * C621) *
                C24270 +
            (C30851 + C30852 + C30853) * C24271 + C30864 * C154442) *
               C154011 * C2114 -
           (C33274 * C154442 + (C31878 + C31879 + C31880) * C24271 +
            (C7161 * C2337 - C7162 * C2328 - C7161 * C2338 + C154445 * C2343 +
             C7159 * C602 - C7160 * C585 - C7159 * C603 + C154470 * C621 +
             C7157 * C600 - C7158 * C584 - C7157 * C601 + C154481 * C620) *
                C24270) *
               C154011 * C154146) *
              C154066 * C1309 +
          (((C7867 + C7866 + C7865) * C24270 +
            (C8688 + C8689 + C8690) * C24271 +
            (C31881 + C31882 + C31883) * C154442) *
               C154011 * C154146 -
           (C30838 * C154442 + (C7547 + C7548 + C7549) * C24271 +
            (C7238 + C7237 + C7236) * C24270) *
               C154011 * C2114) *
              C154066 * C1310 +
          ((C7250 * C24270 + (C7546 + C7545 + C7544) * C24271 +
            (C7553 + C7554 + C7555) * C154442) *
               C154011 * C2114 -
           ((C7161 * C6264 - C7162 * C6258 - C7161 * C6265 + C154445 * C6276 +
             C7159 * C3449 - C7160 * C3443 - C7159 * C3450 + C154470 * C3455 +
             C7157 * C1981 - C7158 * C1974 - C7157 * C1982 + C154481 * C1989) *
                C154442 +
            (C8693 + C8692 + C8691) * C24271 + C8347 * C24270) *
               C154011 * C154146) *
              C154066 * C1311)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C7157 * C144 - C7158 * C136 - C7157 * C145 + C154481 * C160 +
             C7159 * C600 - C7160 * C584 - C7159 * C601 + C154470 * C620 +
             C7161 * C602 - C7162 * C585 - C7161 * C603 + C154445 * C621) *
                C24270 +
            (C30851 + C30852 + C30853) * C24271 + C30864 * C154442) *
               C154011 * C2114 -
           (C33274 * C154442 + (C31878 + C31879 + C31880) * C24271 +
            (C7161 * C2337 - C7162 * C2328 - C7161 * C2338 + C154445 * C2343 +
             C7159 * C602 - C7160 * C585 - C7159 * C603 + C154470 * C621 +
             C7157 * C600 - C7158 * C584 - C7157 * C601 + C154481 * C620) *
                C24270) *
               C154011 * C154146) *
              C338 +
          (((C31880 + C31879 + C31878) * C24270 +
            (C31877 + C31876 + C31875) * C24271 +
            (C33281 + C33282 + C33283) * C154442) *
               C154011 * C154146 -
           (C32261 * C154442 + (C30856 + C30855 + C30854) * C24271 +
            (C30853 + C30852 + C30851) * C24270) *
               C154011 * C2114) *
              C339 +
          ((C30864 * C24270 + (C30859 + C30858 + C30857) * C24271 +
            (C32268 + C32269 + C32270) * C154442) *
               C154011 * C2114 -
           ((C7161 * C30000 - C7162 * C29998 - C7161 * C30001 +
             C154445 * C30004 + C7159 * C28466 - C7160 * C28464 -
             C7159 * C28467 + C154470 * C28470 + C7157 * C5664 - C7158 * C5659 -
             C7157 * C5665 + C154481 * C5668) *
                C154442 +
            (C33283 + C33282 + C33281) * C24271 + C33274 * C24270) *
               C154011 * C154146) *
              C340) *
         C154047) /
            (p * q * std::sqrt(p + q));
    d2ee[345] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
             C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
                C154164 * C11465 +
            (C15087 + C15088) * C154164 * C11466 + C15101 * C11467 +
            C15102 * C154407) *
               C154082 * C154392 -
           (C15865 * C154407 + C15866 * C11467 +
            (C15375 + C15376) * C154164 * C11466 +
            (C15024 * C1135 - C15025 * C1129 - C15024 * C1136 +
             C154268 * C1147 + C15022 * C363 - C15023 * C347 - C15022 * C364 +
             C154408 * C383) *
                C154164 * C11465) *
               C154082 * C154118) *
              C154461 +
          (((C15376 + C15375) * C154164 * C11465 +
            (C15374 + C15373) * C154164 * C11466 +
            (C15372 + C15371) * C154164 * C11467 +
            (C15871 + C15872) * C154164 * C154407) *
               C154082 * C154118 -
           (C15103 * C154407 + C15104 * C11467 +
            (C15090 + C15089) * C154164 * C11466 +
            (C15088 + C15087) * C154164 * C11465) *
               C154082 * C154392) *
              C154462 +
          ((C15101 * C11465 + C15102 * C11466 +
            (C15094 + C15093) * C154164 * C11467 +
            (C15095 + C15096) * C154164 * C154407) *
               C154082 * C154392 -
           ((C15024 * C1145 - C15025 * C1134 - C15024 * C1146 +
             C154268 * C1152 + C15022 * C375 - C15023 * C353 - C15022 * C376 +
             C154408 * C389) *
                C154164 * C154407 +
            (C15872 + C15871) * C154164 * C11467 + C15865 * C11466 +
            C15866 * C11465) *
               C154082 * C154118) *
              C818)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
              C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
                 C24270 +
             (C19258 + C19259) * C24271 + C38629 * C154442) *
                C154373 +
            ((C15087 + C15088) * C24270 + C19212 * C24271 + C19224 * C154442) *
                C154021) *
               C154082 * C154392 -
           ((C38630 * C154442 + C19214 * C24271 + C19215 * C24270) * C154021 +
            ((C21100 + C21099) * C154442 + (C19260 + C19261) * C24271 +
             (C19259 + C19258) * C24270) *
                C154373) *
               C154082 * C154118) *
              C154461 +
          (((C19212 * C24270 + C19224 * C24271 + C38631 * C154442) * C154373 +
            (C18908 * C24270 + C19233 * C24271 + (C19264 + C19265) * C154442) *
                C154021) *
               C154082 * C154118 -
           ((C19213 * C154442 + C15856 * C24271 + (C15090 + C15089) * C24270) *
                C154021 +
            (C19214 * C154442 + C19215 * C24271 + (C15088 + C15087) * C24270) *
                C154373) *
               C154082 * C154392) *
              C154462 +
          (((C15097 * C24270 + C18908 * C24271 + C19233 * C154442) * C154373 +
            (C15098 * C24270 + C19876 * C24271 + (C15381 + C15382) * C154442) *
                C154021) *
               C154082 * C154392 -
           (((C15024 * C4264 - C15025 * C4257 - C15024 * C4265 +
              C154268 * C4269 + C15022 * C1406 - C15023 * C1400 -
              C15022 * C1407 + C154408 * C1415) *
                 C154442 +
             (C15382 + C15381) * C24271 + C15855 * C24270) *
                C154021 +
            ((C19265 + C19264) * C154442 + C19213 * C24271 + C15856 * C24270) *
                C154373) *
               C154082 * C154118) *
              C818)) /
            (p * q * std::sqrt(p + q));
    d2ee[346] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
              C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
                 C154164 * C11465 +
             (C15087 + C15088) * C154164 * C11466 + C15101 * C11467 +
             C15102 * C154407) *
                C154393 -
            (C16077 * C154407 + C16078 * C11467 +
             (C15653 + C15654) * C154164 * C11466 +
             (C15024 * C602 - C15025 * C585 - C15024 * C603 + C154268 * C621 +
              C15022 * C600 - C15023 * C584 - C15022 * C601 + C154408 * C620) *
                 C154164 * C11465) *
                C154146) *
               C154392 +
           (((C15022 * C1135 - C15023 * C1129 - C15022 * C1136 +
              C154408 * C1147 + C15024 * C1554 - C15025 * C1545 -
              C15024 * C1555 + C154268 * C1560) *
                 C154164 * C11465 +
             (C16379 + C16380) * C154164 * C11466 +
             (C16381 + C16382) * C154164 * C11467 +
             (C16383 + C16384) * C154164 * C154407) *
                C154146 -
            (C15865 * C154407 + C15866 * C11467 +
             (C15375 + C15376) * C154164 * C11466 +
             (C15024 * C1135 - C15025 * C1129 - C15024 * C1136 +
              C154268 * C1147 + C15022 * C363 - C15023 * C347 - C15022 * C364 +
              C154408 * C383) *
                 C154164 * C11465) *
                C154393) *
               C154118) *
              C341 +
          ((((C15654 + C15653) * C154164 * C11465 +
             (C15652 + C15651) * C154164 * C11466 +
             (C15650 + C15649) * C154164 * C11467 +
             (C16083 + C16084) * C154164 * C154407) *
                C154146 -
            (C15103 * C154407 + C15104 * C11467 +
             (C15090 + C15089) * C154164 * C11466 +
             (C15088 + C15087) * C154164 * C11465) *
                C154393) *
               C154392 +
           (((C15376 + C15375) * C154164 * C11465 +
             (C15374 + C15373) * C154164 * C11466 +
             (C15372 + C15371) * C154164 * C11467 +
             (C15871 + C15872) * C154164 * C154407) *
                C154393 -
            ((C15024 * C1546 - C15025 * C1541 - C15024 * C1547 +
              C154268 * C1556 + C15022 * C1143 - C15023 * C1133 -
              C15022 * C1144 + C154408 * C1151) *
                 C154164 * C154407 +
             (C16384 + C16383) * C154164 * C11467 +
             (C16382 + C16381) * C154164 * C11466 +
             (C16380 + C16379) * C154164 * C11465) *
                C154146) *
               C154118) *
              C154053)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
               C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
                  C24270 +
              (C19258 + C19259) * C24271 + C38629 * C154442) *
                 C154373 +
             ((C15087 + C15088) * C24270 + C19212 * C24271 + C19224 * C154442) *
                 C154021) *
                C154393 -
            ((C39916 * C154442 + C20558 * C24271 + (C15653 + C15654) * C24270) *
                 C154021 +
             ((C22384 + C22383) * C154442 + (C20597 + C20598) * C24271 +
              (C15024 * C602 - C15025 * C585 - C15024 * C603 + C154268 * C621 +
               C15022 * C600 - C15023 * C584 - C15022 * C601 + C154408 * C620) *
                  C24270) *
                 C154373) *
                C154146) *
               C154392 +
           ((((C20598 + C20597) * C24270 + (C22383 + C22384) * C24271 +
              (C15022 * C4258 - C15023 * C4254 - C15022 * C4259 +
               C154408 * C4266 + C15024 * C4912 - C15025 * C4907 -
               C15024 * C4913 + C154268 * C4916) *
                  C154442) *
                 C154373 +
             (C20567 * C24270 + C39917 * C24271 + (C39930 + C39931) * C154442) *
                 C154021) *
                C154146 -
            ((C38630 * C154442 + C19214 * C24271 + C19215 * C24270) * C154021 +
             ((C21100 + C21099) * C154442 + (C19260 + C19261) * C24271 +
              (C19259 + C19258) * C24270) *
                 C154373) *
                C154393) *
               C154118) *
              C341 +
          (((((C15654 + C15653) * C24270 + C20567 * C24271 + C39917 * C154442) *
                 C154373 +
             ((C15652 + C15651) * C24270 + C20576 * C24271 +
              (C20601 + C20602) * C154442) *
                 C154021) *
                C154146 -
            ((C19213 * C154442 + C15856 * C24271 + (C15090 + C15089) * C24270) *
                 C154021 +
             (C19214 * C154442 + C19215 * C24271 + (C15088 + C15087) * C24270) *
                 C154373) *
                C154393) *
               C154392 +
           (((C19212 * C24270 + C19224 * C24271 + C38631 * C154442) * C154373 +
             (C18908 * C24270 + C19233 * C24271 + (C19264 + C19265) * C154442) *
                 C154021) *
                C154393 -
            (((C15024 * C4908 - C15025 * C4905 - C15024 * C4909 +
               C154268 * C4914 + C15022 * C4262 - C15023 * C4256 -
               C15022 * C4263 + C154408 * C4268) *
                  C154442 +
              (C20602 + C20601) * C24271 + C20168 * C24270) *
                 C154021 +
             ((C39931 + C39930) * C154442 + C39916 * C24271 + C20558 * C24270) *
                 C154373) *
                C154146) *
               C154118) *
              C154053)) /
            (p * q * std::sqrt(p + q));
    d2ee[347] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
             C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
                C154164 * C11465 +
            (C15087 + C15088) * C154164 * C11466 + C15101 * C11467 +
            C15102 * C154407) *
               C154082 * C338 -
           ((C15371 + C15372) * C154164 * C154407 +
            (C15373 + C15374) * C154164 * C11467 +
            (C15375 + C15376) * C154164 * C11466 +
            (C15024 * C1135 - C15025 * C1129 - C15024 * C1136 +
             C154268 * C1147 + C15022 * C363 - C15023 * C347 - C15022 * C364 +
             C154408 * C383) *
                C154164 * C11465) *
               C154082 * C339 +
           ((C15022 * C365 - C15023 * C348 - C15022 * C366 + C154408 * C384 +
             C15024 * C1985 - C15025 * C1976 - C15024 * C1986 +
             C154268 * C1991) *
                C154164 * C11465 +
            (C15377 + C15378) * C154164 * C11466 +
            (C15379 + C15380) * C154164 * C11467 +
            (C15381 + C15382) * C154164 * C154407) *
               C154082 * C340) *
              C341 +
          (((C15376 + C15375) * C154164 * C11465 +
            (C15374 + C15373) * C154164 * C11466 +
            (C15372 + C15371) * C154164 * C11467 +
            (C15022 * C355 - C15023 * C343 - C15022 * C356 + C154408 * C379 +
             C15024 * C1143 - C15025 * C1133 - C15024 * C1144 +
             C154268 * C1151) *
                C154164 * C154407) *
               C154082 * C339 -
           (C15103 * C154407 + C15104 * C11467 +
            (C15090 + C15089) * C154164 * C11466 +
            (C15088 + C15087) * C154164 * C11465) *
               C154082 * C338 -
           ((C15024 * C1977 - C15025 * C1972 - C15024 * C1978 +
             C154268 * C1987 + C15022 * C373 - C15023 * C352 - C15022 * C374 +
             C154408 * C388) *
                C154164 * C154407 +
            (C15382 + C15381) * C154164 * C11467 +
            (C15380 + C15379) * C154164 * C11466 +
            (C15378 + C15377) * C154164 * C11465) *
               C154082 * C340) *
              C154053)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
            C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
               C154164 * C11465 +
           (C15087 + C15088) * C154164 * C11466 + C15101 * C11467 +
           C15102 * C154407) *
              C154082 * C154066 * C130 -
          (C15103 * C154407 + C15104 * C11467 +
           (C15090 + C15089) * C154164 * C11466 +
           (C15088 + C15087) * C154164 * C11465) *
              C154082 * C154066 * C131 +
          (C15101 * C11465 + C15102 * C11466 +
           (C15094 + C15093) * C154164 * C11467 +
           (C15095 + C15096) * C154164 * C154407) *
              C154082 * C154066 * C132 -
          ((C15024 * C956 - C15025 * C955 - C15024 * C957 + C154268 * C958 +
            C15022 * C156 - C15023 * C142 - C15022 * C157 + C154408 * C166) *
               C154164 * C154407 +
           (C15096 + C15095) * C154164 * C11467 + C15103 * C11466 +
           C15104 * C11465) *
              C154082 * C154066 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
             C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
                C154164 * C11465 +
            (C15087 + C15088) * C154164 * C11466 + C15101 * C11467 +
            C15102 * C154407) *
               C577 -
           ((C15649 + C15650) * C154164 * C154407 +
            (C15651 + C15652) * C154164 * C11467 +
            (C15653 + C15654) * C154164 * C11466 +
            (C15024 * C602 - C15025 * C585 - C15024 * C603 + C154268 * C621 +
             C15022 * C600 - C15023 * C584 - C15022 * C601 + C154408 * C620) *
                C154164 * C11465) *
               C578 +
           ((C15022 * C602 - C15023 * C585 - C15022 * C603 + C154408 * C621 +
             C15024 * C2337 - C15025 * C2328 - C15024 * C2338 +
             C154268 * C2343) *
                C154164 * C11465 +
            (C15655 + C15656) * C154164 * C11466 +
            (C15657 + C15658) * C154164 * C11467 +
            (C15659 + C15660) * C154164 * C154407) *
               C579) *
              C154066 * C341 +
          (((C15654 + C15653) * C154164 * C11465 +
            (C15652 + C15651) * C154164 * C11466 +
            (C15650 + C15649) * C154164 * C11467 +
            (C15022 * C592 - C15023 * C580 - C15022 * C593 + C154408 * C616 +
             C15024 * C610 - C15025 * C589 - C15024 * C611 + C154268 * C625) *
                C154164 * C154407) *
               C578 -
           (C15103 * C154407 + C15104 * C11467 +
            (C15090 + C15089) * C154164 * C11466 +
            (C15088 + C15087) * C154164 * C11465) *
               C577 -
           ((C15024 * C2329 - C15025 * C2324 - C15024 * C2330 +
             C154268 * C2339 + C15022 * C610 - C15023 * C589 - C15022 * C611 +
             C154408 * C625) *
                C154164 * C154407 +
            (C15660 + C15659) * C154164 * C11467 +
            (C15658 + C15657) * C154164 * C11466 +
            (C15656 + C15655) * C154164 * C11465) *
               C579) *
              C154066 * C154053)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
             C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
                C24270 +
            (C19258 + C19259) * C24271 + (C19261 + C19260) * C154442) *
               C154373 +
           ((C15087 + C15088) * C24270 + C19212 * C24271 + C19224 * C154442) *
               C154021) *
              C154082 * C154066 * C130 -
          ((C19213 * C154442 + C15856 * C24271 + (C15090 + C15089) * C24270) *
               C154021 +
           (C19214 * C154442 + C19215 * C24271 + (C15088 + C15087) * C24270) *
               C154373) *
              C154082 * C154066 * C131 +
          ((C15097 * C24270 + C18908 * C24271 + C19233 * C154442) * C154373 +
           (C15098 * C24270 + C19876 * C24271 + (C15381 + C15382) * C154442) *
               C154021) *
              C154082 * C154066 * C132 -
          (((C15024 * C1977 - C15025 * C1972 - C15024 * C1978 +
             C154268 * C1987 + C15022 * C373 - C15023 * C352 - C15022 * C374 +
             C154408 * C388) *
                C154442 +
            (C15872 + C15871) * C24271 + C15099 * C24270) *
               C154021 +
           ((C15382 + C15381) * C154442 + C15855 * C24271 + C15100 * C24270) *
               C154373) *
              C154082 * C154066 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
              C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
                 C24270 +
             (C19258 + C19259) * C24271 + C38629 * C154442) *
                C154373 +
            ((C15087 + C15088) * C24270 + C19212 * C24271 + C19224 * C154442) *
                C154021) *
               C154082 * C338 -
           ((C38630 * C154442 + C19214 * C24271 + C19215 * C24270) * C154021 +
            ((C21100 + C21099) * C154442 + (C19260 + C19261) * C24271 +
             (C19259 + C19258) * C24270) *
                C154373) *
               C154082 * C339 +
           ((C38629 * C24270 + (C21099 + C21100) * C24271 +
             (C15022 * C3143 - C15023 * C3139 - C15022 * C3144 +
              C154408 * C3151 + C15024 * C5664 - C15025 * C5659 -
              C15024 * C5665 + C154268 * C5668) *
                 C154442) *
                C154373 +
            (C19224 * C24270 + C38631 * C24271 + (C38644 + C38645) * C154442) *
                C154021) *
               C154082 * C340) *
              C341 +
          (((C19212 * C24270 + C19224 * C24271 + C38631 * C154442) * C154373 +
            (C18908 * C24270 + C19233 * C24271 + (C19264 + C19265) * C154442) *
                C154021) *
               C154082 * C339 -
           ((C19213 * C154442 + C15856 * C24271 + (C15090 + C15089) * C24270) *
                C154021 +
            (C19214 * C154442 + C19215 * C24271 + (C15088 + C15087) * C24270) *
                C154373) *
               C154082 * C338 -
           (((C15024 * C5660 - C15025 * C5657 - C15024 * C5661 +
              C154268 * C5666 + C15022 * C3147 - C15023 * C3141 -
              C15022 * C3148 + C154408 * C3153) *
                 C154442 +
             (C19265 + C19264) * C24271 + C19213 * C24270) *
                C154021 +
            ((C38645 + C38644) * C154442 + C38630 * C24271 + C19214 * C24270) *
                C154373) *
               C154082 * C340) *
              C154053)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
              C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
                 C24270 +
             (C19258 + C19259) * C24271 + C38629 * C154442) *
                C154373 +
            ((C15087 + C15088) * C24270 + C19212 * C24271 + C19224 * C154442) *
                C154021) *
               C577 -
           (((C20600 + C20599) * C154442 + C20558 * C24271 +
             (C15653 + C15654) * C24270) *
                C154021 +
            ((C22384 + C22383) * C154442 + (C20597 + C20598) * C24271 +
             (C15024 * C602 - C15025 * C585 - C15024 * C603 + C154268 * C621 +
              C15022 * C600 - C15023 * C584 - C15022 * C601 + C154408 * C620) *
                 C24270) *
                C154373) *
               C578 +
           (((C15022 * C602 - C15023 * C585 - C15022 * C603 + C154408 * C621 +
              C15024 * C2337 - C15025 * C2328 - C15024 * C2338 +
              C154268 * C2343) *
                 C24270 +
             (C21403 + C21404) * C24271 +
             (C15022 * C3445 - C15023 * C3441 - C15022 * C3446 +
              C154408 * C3453 + C15024 * C6272 - C15025 * C6262 -
              C15024 * C6273 + C154268 * C6280) *
                 C154442) *
                C154373 +
            ((C15655 + C15656) * C24270 + (C19580 + C19581) * C24271 +
             (C38948 + C38949) * C154442) *
                C154021) *
               C579) *
              C154066 * C341 +
          ((((C15654 + C15653) * C24270 + C20567 * C24271 +
             (C20599 + C20600) * C154442) *
                C154373 +
            ((C15652 + C15651) * C24270 + C20576 * C24271 +
             (C20601 + C20602) * C154442) *
                C154021) *
               C578 -
           ((C19213 * C154442 + C15856 * C24271 + (C15090 + C15089) * C24270) *
                C154021 +
            (C19214 * C154442 + C19215 * C24271 + (C15088 + C15087) * C24270) *
                C154373) *
               C577 -
           (((C15024 * C6264 - C15025 * C6258 - C15024 * C6265 +
              C154268 * C6276 + C15022 * C3449 - C15023 * C3443 -
              C15022 * C3450 + C154408 * C3455) *
                 C154442 +
             (C19583 + C19582) * C24271 + (C15658 + C15657) * C24270) *
                C154021 +
            ((C38949 + C38948) * C154442 + (C19581 + C19580) * C24271 +
             (C15656 + C15655) * C24270) *
                C154373) *
               C579) *
              C154066 * C154053)) /
            (p * q * std::sqrt(p + q));
    d2ee[348] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
             C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
                C154164 * C11465 +
            (C15087 + C15088) * C154164 * C11466 + C15101 * C11467 +
            C15102 * C154407) *
               C154393 -
           (C16077 * C154407 + C16078 * C11467 +
            (C15653 + C15654) * C154164 * C11466 +
            (C15024 * C602 - C15025 * C585 - C15024 * C603 + C154268 * C621 +
             C15022 * C600 - C15023 * C584 - C15022 * C601 + C154408 * C620) *
                C154164 * C11465) *
               C154146) *
              C154066 * C154461 +
          (((C15654 + C15653) * C154164 * C11465 +
            (C15652 + C15651) * C154164 * C11466 +
            (C15650 + C15649) * C154164 * C11467 +
            (C16083 + C16084) * C154164 * C154407) *
               C154146 -
           (C15103 * C154407 + C15104 * C11467 +
            (C15090 + C15089) * C154164 * C11466 +
            (C15088 + C15087) * C154164 * C11465) *
               C154393) *
              C154066 * C154462 +
          ((C15101 * C11465 + C15102 * C11466 +
            (C15094 + C15093) * C154164 * C11467 +
            (C15095 + C15096) * C154164 * C154407) *
               C154393 -
           ((C15024 * C614 - C15025 * C591 - C15024 * C615 + C154268 * C627 +
             C15022 * C612 - C15023 * C590 - C15022 * C613 + C154408 * C626) *
                C154164 * C154407 +
            (C16084 + C16083) * C154164 * C11467 + C16077 * C11466 +
            C16078 * C11465) *
               C154146) *
              C154066 * C818)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
              C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
                 C24270 +
             (C19258 + C19259) * C24271 + C38629 * C154442) *
                C154373 +
            ((C15087 + C15088) * C24270 + C19212 * C24271 + C19224 * C154442) *
                C154021) *
               C154393 -
           (((C20600 + C20599) * C154442 + C20558 * C24271 +
             (C15653 + C15654) * C24270) *
                C154021 +
            ((C22384 + C22383) * C154442 + (C20597 + C20598) * C24271 +
             (C15024 * C602 - C15025 * C585 - C15024 * C603 + C154268 * C621 +
              C15022 * C600 - C15023 * C584 - C15022 * C601 + C154408 * C620) *
                 C24270) *
                C154373) *
               C154146) *
              C154066 * C154461 +
          ((((C15654 + C15653) * C24270 + C20567 * C24271 +
             (C20599 + C20600) * C154442) *
                C154373 +
            ((C15652 + C15651) * C24270 + C20576 * C24271 +
             (C20601 + C20602) * C154442) *
                C154021) *
               C154146 -
           ((C19213 * C154442 + C15856 * C24271 + (C15090 + C15089) * C24270) *
                C154021 +
            (C19214 * C154442 + C19215 * C24271 + (C15088 + C15087) * C24270) *
                C154373) *
               C154393) *
              C154066 * C154462 +
          (((C15097 * C24270 + C18908 * C24271 + C19233 * C154442) * C154373 +
            (C15098 * C24270 + C19876 * C24271 + (C15381 + C15382) * C154442) *
                C154021) *
               C154393 -
           (((C15024 * C3451 - C15025 * C3444 - C15024 * C3452 +
              C154268 * C3456 + C15022 * C1979 - C15023 * C1973 -
              C15022 * C1980 + C154408 * C1988) *
                 C154442 +
             (C16384 + C16383) * C24271 + C16067 * C24270) *
                C154021 +
            ((C20602 + C20601) * C154442 + C20168 * C24271 + C16068 * C24270) *
                C154373) *
               C154146) *
              C154066 * C818)) /
            (p * q * std::sqrt(p + q));
    d2ee[349] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
            C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
               C154164 * C11465 +
           (C15087 + C15088) * C154164 * C11466 + C15101 * C11467 +
           C15102 * C154407) *
              C154082 * C154066 * C130 -
          (C15103 * C154407 + C15104 * C11467 +
           (C15090 + C15089) * C154164 * C11466 +
           (C15088 + C15087) * C154164 * C11465) *
              C154082 * C154066 * C131 +
          (C15101 * C11465 + C15102 * C11466 +
           (C15094 + C15093) * C154164 * C11467 +
           (C15095 + C15096) * C154164 * C154407) *
              C154082 * C154066 * C132 -
          ((C15024 * C956 - C15025 * C955 - C15024 * C957 + C154268 * C958 +
            C15022 * C156 - C15023 * C142 - C15022 * C157 + C154408 * C166) *
               C154164 * C154407 +
           (C15096 + C15095) * C154164 * C11467 + C15103 * C11466 +
           C15104 * C11465) *
              C154082 * C154066 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
             C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
                C154164 * C11465 +
            (C15087 + C15088) * C154164 * C11466 + C15101 * C11467 +
            C15102 * C154407) *
               C154082 * C338 -
           ((C15371 + C15372) * C154164 * C154407 +
            (C15373 + C15374) * C154164 * C11467 +
            (C15375 + C15376) * C154164 * C11466 +
            (C15024 * C1135 - C15025 * C1129 - C15024 * C1136 +
             C154268 * C1147 + C15022 * C363 - C15023 * C347 - C15022 * C364 +
             C154408 * C383) *
                C154164 * C11465) *
               C154082 * C339 +
           ((C15022 * C365 - C15023 * C348 - C15022 * C366 + C154408 * C384 +
             C15024 * C1985 - C15025 * C1976 - C15024 * C1986 +
             C154268 * C1991) *
                C154164 * C11465 +
            (C15377 + C15378) * C154164 * C11466 +
            (C15379 + C15380) * C154164 * C11467 +
            (C15381 + C15382) * C154164 * C154407) *
               C154082 * C340) *
              C341 +
          (((C15376 + C15375) * C154164 * C11465 +
            (C15374 + C15373) * C154164 * C11466 +
            (C15372 + C15371) * C154164 * C11467 +
            (C15022 * C355 - C15023 * C343 - C15022 * C356 + C154408 * C379 +
             C15024 * C1143 - C15025 * C1133 - C15024 * C1144 +
             C154268 * C1151) *
                C154164 * C154407) *
               C154082 * C339 -
           (C15103 * C154407 + C15104 * C11467 +
            (C15090 + C15089) * C154164 * C11466 +
            (C15088 + C15087) * C154164 * C11465) *
               C154082 * C338 -
           ((C15024 * C1977 - C15025 * C1972 - C15024 * C1978 +
             C154268 * C1987 + C15022 * C373 - C15023 * C352 - C15022 * C374 +
             C154408 * C388) *
                C154164 * C154407 +
            (C15382 + C15381) * C154164 * C11467 +
            (C15380 + C15379) * C154164 * C11466 +
            (C15378 + C15377) * C154164 * C11465) *
               C154082 * C340) *
              C154053)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
             C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
                C24270 +
            (C19258 + C19259) * C24271 + (C19261 + C19260) * C154442) *
               C154373 +
           ((C15087 + C15088) * C24270 + C19212 * C24271 + C19224 * C154442) *
               C154021) *
              C154082 * C154066 * C130 -
          ((C19213 * C154442 + C15856 * C24271 + (C15090 + C15089) * C24270) *
               C154021 +
           (C19214 * C154442 + C19215 * C24271 + (C15088 + C15087) * C24270) *
               C154373) *
              C154082 * C154066 * C131 +
          ((C15097 * C24270 + C18908 * C24271 + C19233 * C154442) * C154373 +
           (C15098 * C24270 + C19876 * C24271 + (C15381 + C15382) * C154442) *
               C154021) *
              C154082 * C154066 * C132 -
          (((C15024 * C1977 - C15025 * C1972 - C15024 * C1978 +
             C154268 * C1987 + C15022 * C373 - C15023 * C352 - C15022 * C374 +
             C154408 * C388) *
                C154442 +
            (C15872 + C15871) * C24271 + C15099 * C24270) *
               C154021 +
           ((C15382 + C15381) * C154442 + C15855 * C24271 + C15100 * C24270) *
               C154373) *
              C154082 * C154066 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
              C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
                 C24270 +
             (C19258 + C19259) * C24271 + C38629 * C154442) *
                C154373 +
            ((C15087 + C15088) * C24270 + C19212 * C24271 + C19224 * C154442) *
                C154021) *
               C154082 * C338 -
           ((C38630 * C154442 + C19214 * C24271 + C19215 * C24270) * C154021 +
            ((C21100 + C21099) * C154442 + (C19260 + C19261) * C24271 +
             (C19259 + C19258) * C24270) *
                C154373) *
               C154082 * C339 +
           ((C38629 * C24270 + (C21099 + C21100) * C24271 +
             (C15022 * C3143 - C15023 * C3139 - C15022 * C3144 +
              C154408 * C3151 + C15024 * C5664 - C15025 * C5659 -
              C15024 * C5665 + C154268 * C5668) *
                 C154442) *
                C154373 +
            (C19224 * C24270 + C38631 * C24271 + (C38644 + C38645) * C154442) *
                C154021) *
               C154082 * C340) *
              C341 +
          (((C19212 * C24270 + C19224 * C24271 + C38631 * C154442) * C154373 +
            (C18908 * C24270 + C19233 * C24271 + (C19264 + C19265) * C154442) *
                C154021) *
               C154082 * C339 -
           ((C19213 * C154442 + C15856 * C24271 + (C15090 + C15089) * C24270) *
                C154021 +
            (C19214 * C154442 + C19215 * C24271 + (C15088 + C15087) * C24270) *
                C154373) *
               C154082 * C338 -
           (((C15024 * C5660 - C15025 * C5657 - C15024 * C5661 +
              C154268 * C5666 + C15022 * C3147 - C15023 * C3141 -
              C15022 * C3148 + C154408 * C3153) *
                 C154442 +
             (C19265 + C19264) * C24271 + C19213 * C24270) *
                C154021 +
            ((C38645 + C38644) * C154442 + C38630 * C24271 + C19214 * C24270) *
                C154373) *
               C154082 * C340) *
              C154053)) /
            (p * q * std::sqrt(p + q));
    d2ee[350] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
             C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
                C154164 * C11465 +
            (C15087 + C15088) * C154164 * C11466 + C15101 * C11467 +
            C15102 * C154407) *
               C154082 * C154463 -
           (C15865 * C154407 + C15866 * C11467 +
            (C15375 + C15376) * C154164 * C11466 +
            (C15024 * C1135 - C15025 * C1129 - C15024 * C1136 +
             C154268 * C1147 + C15022 * C363 - C15023 * C347 - C15022 * C364 +
             C154408 * C383) *
                C154164 * C11465) *
               C154082 * C154464 +
           ((C15022 * C365 - C15023 * C348 - C15022 * C366 + C154408 * C384 +
             C15024 * C1985 - C15025 * C1976 - C15024 * C1986 +
             C154268 * C1991) *
                C154164 * C11465 +
            (C15377 + C15378) * C154164 * C11466 +
            (C15379 + C15380) * C154164 * C11467 +
            (C15381 + C15382) * C154164 * C154407) *
               C154082 * C1685) *
              C154384 +
          (((C15376 + C15375) * C154164 * C11465 +
            (C15374 + C15373) * C154164 * C11466 +
            (C15372 + C15371) * C154164 * C11467 +
            (C15871 + C15872) * C154164 * C154407) *
               C154082 * C154464 -
           (C15103 * C154407 + C15104 * C11467 +
            (C15090 + C15089) * C154164 * C11466 +
            (C15088 + C15087) * C154164 * C11465) *
               C154082 * C154463 -
           ((C15024 * C1977 - C15025 * C1972 - C15024 * C1978 +
             C154268 * C1987 + C15022 * C373 - C15023 * C352 - C15022 * C374 +
             C154408 * C388) *
                C154164 * C154407 +
            (C15382 + C15381) * C154164 * C11467 +
            (C15380 + C15379) * C154164 * C11466 +
            (C15378 + C15377) * C154164 * C11465) *
               C154082 * C1685) *
              C154053)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
              C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
                 C24270 +
             (C19258 + C19259) * C24271 + C38629 * C154442) *
                C154373 +
            ((C15087 + C15088) * C24270 + C19212 * C24271 + C19224 * C154442) *
                C154021) *
               C154082 * C154463 -
           ((C38630 * C154442 + C19214 * C24271 + C19215 * C24270) * C154021 +
            (C40416 * C154442 + (C19260 + C19261) * C24271 +
             (C19259 + C19258) * C24270) *
                C154373) *
               C154082 * C154464 +
           ((C38629 * C24270 + (C21099 + C21100) * C24271 +
             (C40429 + C40430) * C154442) *
                C154373 +
            (C19224 * C24270 + C38631 * C24271 + (C38644 + C38645) * C154442) *
                C154021) *
               C154082 * C1685) *
              C154384 +
          (((C19212 * C24270 + C19224 * C24271 + C38631 * C154442) * C154373 +
            (C18908 * C24270 + C19233 * C24271 + (C19264 + C19265) * C154442) *
                C154021) *
               C154082 * C154464 -
           ((C19213 * C154442 + C15856 * C24271 + (C15090 + C15089) * C24270) *
                C154021 +
            (C19214 * C154442 + C19215 * C24271 + (C15088 + C15087) * C24270) *
                C154373) *
               C154082 * C154463 -
           (((C15024 * C5660 - C15025 * C5657 - C15024 * C5661 +
              C154268 * C5666 + C15022 * C3147 - C15023 * C3141 -
              C15022 * C3148 + C154408 * C3153) *
                 C154442 +
             (C19265 + C19264) * C24271 + C19213 * C24270) *
                C154021 +
            ((C38645 + C38644) * C154442 + C38630 * C24271 + C19214 * C24270) *
                C154373) *
               C154082 * C1685) *
              C154053)) /
            (p * q * std::sqrt(p + q));
    d2ee[351] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
             C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
                C154164 * C11465 +
            (C15087 + C15088) * C154164 * C11466 + C15101 * C11467 +
            C15102 * C154407) *
               C154393 -
           (C16077 * C154407 + C16078 * C11467 +
            (C15653 + C15654) * C154164 * C11466 +
            (C15024 * C602 - C15025 * C585 - C15024 * C603 + C154268 * C621 +
             C15022 * C600 - C15023 * C584 - C15022 * C601 + C154408 * C620) *
                C154164 * C11465) *
               C154146) *
              C154463 +
          (((C15022 * C1135 - C15023 * C1129 - C15022 * C1136 +
             C154408 * C1147 + C15024 * C1554 - C15025 * C1545 -
             C15024 * C1555 + C154268 * C1560) *
                C154164 * C11465 +
            (C16379 + C16380) * C154164 * C11466 +
            (C16381 + C16382) * C154164 * C11467 +
            (C16383 + C16384) * C154164 * C154407) *
               C154146 -
           (C15865 * C154407 + C15866 * C11467 +
            (C15375 + C15376) * C154164 * C11466 +
            (C15024 * C1135 - C15025 * C1129 - C15024 * C1136 +
             C154268 * C1147 + C15022 * C363 - C15023 * C347 - C15022 * C364 +
             C154408 * C383) *
                C154164 * C11465) *
               C154393) *
              C154464 +
          (((C15022 * C365 - C15023 * C348 - C15022 * C366 + C154408 * C384 +
             C15024 * C1985 - C15025 * C1976 - C15024 * C1986 +
             C154268 * C1991) *
                C154164 * C11465 +
            (C15377 + C15378) * C154164 * C11466 +
            (C15379 + C15380) * C154164 * C11467 +
            (C15381 + C15382) * C154164 * C154407) *
               C154393 -
           ((C15024 * C3451 - C15025 * C3444 - C15024 * C3452 +
             C154268 * C3456 + C15022 * C1979 - C15023 * C1973 -
             C15022 * C1980 + C154408 * C1988) *
                C154164 * C154407 +
            (C15024 * C3449 - C15025 * C3443 - C15024 * C3450 +
             C154268 * C3455 + C15022 * C1981 - C15023 * C1974 -
             C15022 * C1982 + C154408 * C1989) *
                C154164 * C11467 +
            (C15024 * C3447 - C15025 * C3442 - C15024 * C3448 +
             C154268 * C3454 + C15022 * C1983 - C15023 * C1975 -
             C15022 * C1984 + C154408 * C1990) *
                C154164 * C11466 +
            (C15024 * C3445 - C15025 * C3441 - C15024 * C3446 +
             C154268 * C3453 + C15022 * C1985 - C15023 * C1976 -
             C15022 * C1986 + C154408 * C1991) *
                C154164 * C11465) *
               C154146) *
              C1685) *
         C154047) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
              C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
                 C24270 +
             (C19258 + C19259) * C24271 + C38629 * C154442) *
                C154373 +
            ((C15087 + C15088) * C24270 + C19212 * C24271 + C19224 * C154442) *
                C154021) *
               C154393 -
           ((C39916 * C154442 + C20558 * C24271 + (C15653 + C15654) * C24270) *
                C154021 +
            (C41701 * C154442 + (C20597 + C20598) * C24271 +
             (C15024 * C602 - C15025 * C585 - C15024 * C603 + C154268 * C621 +
              C15022 * C600 - C15023 * C584 - C15022 * C601 + C154408 * C620) *
                 C24270) *
                C154373) *
               C154146) *
              C154463 +
          ((((C20598 + C20597) * C24270 + (C22383 + C22384) * C24271 +
             (C41714 + C41715) * C154442) *
                C154373 +
            (C20567 * C24270 + C39917 * C24271 + (C39930 + C39931) * C154442) *
                C154021) *
               C154146 -
           ((C38630 * C154442 + C19214 * C24271 + C19215 * C24270) * C154021 +
            (C40416 * C154442 + (C19260 + C19261) * C24271 +
             (C19259 + C19258) * C24270) *
                C154373) *
               C154393) *
              C154464 +
          (((C38629 * C24270 + (C21099 + C21100) * C24271 +
             (C40429 + C40430) * C154442) *
                C154373 +
            (C19224 * C24270 + C38631 * C24271 + (C38644 + C38645) * C154442) *
                C154021) *
               C154393 -
           (((C15024 * C28468 - C15025 * C28465 - C15024 * C28469 +
              C154268 * C28471 + C15022 * C5662 - C15023 * C5658 -
              C15022 * C5663 + C154408 * C5667) *
                 C154442 +
             (C39931 + C39930) * C24271 + C39916 * C24270) *
                C154021 +
            ((C15024 * C28466 - C15025 * C28464 - C15024 * C28467 +
              C154268 * C28470 + C15022 * C5664 - C15023 * C5659 -
              C15022 * C5665 + C154408 * C5668) *
                 C154442 +
             (C41715 + C41714) * C24271 + C41701 * C24270) *
                C154373) *
               C154146) *
              C1685) *
         C154047) /
            (p * q * std::sqrt(p + q));
    d2ee[352] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
            C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
               C154164 * C11465 +
           (C15087 + C15088) * C154164 * C11466 + C15101 * C11467 +
           C15102 * C154407) *
              C154082 * C1394 -
          (C15865 * C154407 + C15866 * C11467 +
           (C15375 + C15376) * C154164 * C11466 +
           (C15024 * C1135 - C15025 * C1129 - C15024 * C1136 + C154268 * C1147 +
            C15022 * C363 - C15023 * C347 - C15022 * C364 + C154408 * C383) *
               C154164 * C11465) *
              C154082 * C1395 +
          ((C15022 * C365 - C15023 * C348 - C15022 * C366 + C154408 * C384 +
            C15024 * C1985 - C15025 * C1976 - C15024 * C1986 +
            C154268 * C1991) *
               C154164 * C11465 +
           (C15377 + C15378) * C154164 * C11466 +
           (C15379 + C15380) * C154164 * C11467 +
           (C15381 + C15382) * C154164 * C154407) *
              C154082 * C1396 -
          ((C15024 * C4264 - C15025 * C4257 - C15024 * C4265 + C154268 * C4269 +
            C15022 * C1406 - C15023 * C1400 - C15022 * C1407 +
            C154408 * C1415) *
               C154164 * C154407 +
           (C15024 * C4262 - C15025 * C4256 - C15024 * C4263 + C154268 * C4268 +
            C15022 * C1408 - C15023 * C1401 - C15022 * C1409 +
            C154408 * C1416) *
               C154164 * C11467 +
           (C15024 * C4260 - C15025 * C4255 - C15024 * C4261 + C154268 * C4267 +
            C15022 * C1410 - C15023 * C1402 - C15022 * C1411 +
            C154408 * C1417) *
               C154164 * C11466 +
           (C15024 * C4258 - C15025 * C4254 - C15024 * C4259 + C154268 * C4266 +
            C15022 * C1412 - C15023 * C1403 - C15022 * C1413 +
            C154408 * C1418) *
               C154164 * C11465) *
              C154082 * C1397) *
         C154047) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
             C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
                C154164 * C11465 +
            (C15087 + C15088) * C154164 * C11466 + C15101 * C11467 +
            C15102 * C154407) *
               C154082 * C1307 -
           (C15865 * C154407 + C15866 * C11467 +
            (C15375 + C15376) * C154164 * C11466 +
            (C15024 * C1135 - C15025 * C1129 - C15024 * C1136 +
             C154268 * C1147 + C15022 * C363 - C15023 * C347 - C15022 * C364 +
             C154408 * C383) *
                C154164 * C11465) *
               C154082 * C154118) *
              C1309 +
          (((C15376 + C15375) * C154164 * C11465 +
            (C15374 + C15373) * C154164 * C11466 +
            (C15372 + C15371) * C154164 * C11467 +
            (C15871 + C15872) * C154164 * C154407) *
               C154082 * C154118 -
           (C15103 * C154407 + C15104 * C11467 +
            (C15090 + C15089) * C154164 * C11466 +
            (C15088 + C15087) * C154164 * C11465) *
               C154082 * C1307) *
              C1310 +
          ((C15101 * C11465 + C15102 * C11466 +
            (C15094 + C15093) * C154164 * C11467 +
            (C15095 + C15096) * C154164 * C154407) *
               C154082 * C1307 -
           ((C15024 * C1145 - C15025 * C1134 - C15024 * C1146 +
             C154268 * C1152 + C15022 * C375 - C15023 * C353 - C15022 * C376 +
             C154408 * C389) *
                C154164 * C154407 +
            (C15872 + C15871) * C154164 * C11467 + C15865 * C11466 +
            C15866 * C11465) *
               C154082 * C154118) *
              C1311)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
             C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
                C154164 * C11465 +
            (C15087 + C15088) * C154164 * C11466 + C15101 * C11467 +
            C15102 * C154407) *
               C577 -
           (C16077 * C154407 + C16078 * C11467 +
            (C15653 + C15654) * C154164 * C11466 +
            (C15024 * C602 - C15025 * C585 - C15024 * C603 + C154268 * C621 +
             C15022 * C600 - C15023 * C584 - C15022 * C601 + C154408 * C620) *
                C154164 * C11465) *
               C578 +
           ((C15022 * C602 - C15023 * C585 - C15022 * C603 + C154408 * C621 +
             C15024 * C2337 - C15025 * C2328 - C15024 * C2338 +
             C154268 * C2343) *
                C154164 * C11465 +
            (C15655 + C15656) * C154164 * C11466 +
            (C15657 + C15658) * C154164 * C11467 +
            (C15659 + C15660) * C154164 * C154407) *
               C579) *
              C1307 +
          (((C15022 * C1135 - C15023 * C1129 - C15022 * C1136 +
             C154408 * C1147 + C15024 * C1554 - C15025 * C1545 -
             C15024 * C1555 + C154268 * C1560) *
                C154164 * C11465 +
            (C16379 + C16380) * C154164 * C11466 +
            (C16381 + C16382) * C154164 * C11467 +
            (C16383 + C16384) * C154164 * C154407) *
               C578 -
           (C15865 * C154407 + C15866 * C11467 +
            (C15375 + C15376) * C154164 * C11466 +
            (C15024 * C1135 - C15025 * C1129 - C15024 * C1136 +
             C154268 * C1147 + C15022 * C363 - C15023 * C347 - C15022 * C364 +
             C154408 * C383) *
                C154164 * C11465) *
               C577 -
           ((C15024 * C8648 - C15025 * C8647 - C15024 * C8649 +
             C154268 * C8650 + C15022 * C1548 - C15023 * C1542 -
             C15022 * C1549 + C154408 * C1557) *
                C154164 * C154407 +
            (C15024 * C6266 - C15025 * C6259 - C15024 * C6267 +
             C154268 * C6277 + C15022 * C1550 - C15023 * C1543 -
             C15022 * C1551 + C154408 * C1558) *
                C154164 * C11467 +
            (C15024 * C6270 - C15025 * C6261 - C15024 * C6271 +
             C154268 * C6279 + C15022 * C1552 - C15023 * C1544 -
             C15022 * C1553 + C154408 * C1559) *
                C154164 * C11466 +
            (C15024 * C6274 - C15025 * C6263 - C15024 * C6275 +
             C154268 * C6281 + C15022 * C1554 - C15023 * C1545 -
             C15022 * C1555 + C154408 * C1560) *
                C154164 * C11465) *
               C579) *
              C154118) *
         C154047) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
              C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
                 C24270 +
             (C19258 + C19259) * C24271 + C38629 * C154442) *
                C154373 +
            ((C15087 + C15088) * C24270 + C19212 * C24271 + C19224 * C154442) *
                C154021) *
               C154082 * C1307 -
           ((C38630 * C154442 + C19214 * C24271 + C19215 * C24270) * C154021 +
            ((C21100 + C21099) * C154442 + (C19260 + C19261) * C24271 +
             (C19259 + C19258) * C24270) *
                C154373) *
               C154082 * C154118) *
              C1309 +
          (((C19212 * C24270 + C19224 * C24271 + C38631 * C154442) * C154373 +
            (C18908 * C24270 + C19233 * C24271 + (C19264 + C19265) * C154442) *
                C154021) *
               C154082 * C154118 -
           ((C19213 * C154442 + C15856 * C24271 + (C15090 + C15089) * C24270) *
                C154021 +
            (C19214 * C154442 + C19215 * C24271 + (C15088 + C15087) * C24270) *
                C154373) *
               C154082 * C1307) *
              C1310 +
          (((C15097 * C24270 + C18908 * C24271 + C19233 * C154442) * C154373 +
            (C15098 * C24270 + C19876 * C24271 + (C15381 + C15382) * C154442) *
                C154021) *
               C154082 * C1307 -
           (((C15024 * C4264 - C15025 * C4257 - C15024 * C4265 +
              C154268 * C4269 + C15022 * C1406 - C15023 * C1400 -
              C15022 * C1407 + C154408 * C1415) *
                 C154442 +
             (C15382 + C15381) * C24271 + C15855 * C24270) *
                C154021 +
            ((C19265 + C19264) * C154442 + C19213 * C24271 + C15856 * C24270) *
                C154373) *
               C154082 * C154118) *
              C1311)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
             C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
                C24270 +
            (C19258 + C19259) * C24271 + C38629 * C154442) *
               C154373 +
           ((C15087 + C15088) * C24270 + C19212 * C24271 + C19224 * C154442) *
               C154021) *
              C154082 * C1394 -
          ((C38630 * C154442 + C19214 * C24271 + C19215 * C24270) * C154021 +
           (C40416 * C154442 + (C19260 + C19261) * C24271 +
            (C19259 + C19258) * C24270) *
               C154373) *
              C154082 * C1395 +
          ((C38629 * C24270 + (C21099 + C21100) * C24271 +
            (C40429 + C40430) * C154442) *
               C154373 +
           (C19224 * C24270 + C38631 * C24271 + (C38644 + C38645) * C154442) *
               C154021) *
              C154082 * C1396 -
          (((C15024 * C28882 - C15025 * C28879 - C15024 * C28883 +
             C154268 * C28885 + C15022 * C4673 - C15023 * C4669 -
             C15022 * C4674 + C154408 * C4678) *
                C154442 +
            (C38645 + C38644) * C24271 + C38630 * C24270) *
               C154021 +
           ((C15024 * C28880 - C15025 * C28878 - C15024 * C28881 +
             C154268 * C28884 + C15022 * C4675 - C15023 * C4670 -
             C15022 * C4676 + C154408 * C4679) *
                C154442 +
            (C40430 + C40429) * C24271 + C40416 * C24270) *
               C154373) *
              C154082 * C1397) *
         C154047) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
              C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
                 C24270 +
             (C19258 + C19259) * C24271 + C38629 * C154442) *
                C154373 +
            ((C15087 + C15088) * C24270 + C19212 * C24271 + C19224 * C154442) *
                C154021) *
               C577 -
           ((C39916 * C154442 + C20558 * C24271 + (C15653 + C15654) * C24270) *
                C154021 +
            ((C22384 + C22383) * C154442 + (C20597 + C20598) * C24271 +
             (C15024 * C602 - C15025 * C585 - C15024 * C603 + C154268 * C621 +
              C15022 * C600 - C15023 * C584 - C15022 * C601 + C154408 * C620) *
                 C24270) *
                C154373) *
               C578 +
           (((C15022 * C602 - C15023 * C585 - C15022 * C603 + C154408 * C621 +
              C15024 * C2337 - C15025 * C2328 - C15024 * C2338 +
              C154268 * C2343) *
                 C24270 +
             (C21403 + C21404) * C24271 + (C40733 + C40734) * C154442) *
                C154373 +
            ((C15655 + C15656) * C24270 + (C19580 + C19581) * C24271 +
             (C38948 + C38949) * C154442) *
                C154021) *
               C579) *
              C1307 +
          ((((C20598 + C20597) * C24270 + (C22383 + C22384) * C24271 +
             (C15022 * C4258 - C15023 * C4254 - C15022 * C4259 +
              C154408 * C4266 + C15024 * C4912 - C15025 * C4907 -
              C15024 * C4913 + C154268 * C4916) *
                 C154442) *
                C154373 +
            (C20567 * C24270 + C39917 * C24271 + (C39930 + C39931) * C154442) *
                C154021) *
               C578 -
           ((C38630 * C154442 + C19214 * C24271 + C19215 * C24270) * C154021 +
            (C40416 * C154442 + (C19260 + C19261) * C24271 +
             (C19259 + C19258) * C24270) *
                C154373) *
               C577 -
           (((C15024 * C31817 - C15025 * C31816 - C15024 * C31818 +
              C154268 * C31819 + C15022 * C4910 - C15023 * C4906 -
              C15022 * C4911 + C154408 * C4915) *
                 C154442 +
             (C38949 + C38948) * C24271 + (C19581 + C19580) * C24270) *
                C154021 +
            ((C15024 * C30002 - C15025 * C29999 - C15024 * C30003 +
              C154268 * C30005 + C15022 * C4912 - C15023 * C4907 -
              C15022 * C4913 + C154408 * C4916) *
                 C154442 +
             (C40734 + C40733) * C24271 + (C21404 + C21403) * C24270) *
                C154373) *
               C579) *
              C154118) *
         C154047) /
            (p * q * std::sqrt(p + q));
    d2ee[353] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
              C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
                 C154164 * C11465 +
             (C15087 + C15088) * C154164 * C11466 + C15101 * C11467 +
             C15102 * C154407) *
                C154393 -
            (C16077 * C154407 + C16078 * C11467 +
             (C15653 + C15654) * C154164 * C11466 +
             (C15024 * C602 - C15025 * C585 - C15024 * C603 + C154268 * C621 +
              C15022 * C600 - C15023 * C584 - C15022 * C601 + C154408 * C620) *
                 C154164 * C11465) *
                C154146) *
               C1307 +
           (((C15022 * C1135 - C15023 * C1129 - C15022 * C1136 +
              C154408 * C1147 + C15024 * C1554 - C15025 * C1545 -
              C15024 * C1555 + C154268 * C1560) *
                 C154164 * C11465 +
             (C16379 + C16380) * C154164 * C11466 +
             (C16381 + C16382) * C154164 * C11467 +
             (C16383 + C16384) * C154164 * C154407) *
                C154146 -
            (C15865 * C154407 + C15866 * C11467 +
             (C15375 + C15376) * C154164 * C11466 +
             (C15024 * C1135 - C15025 * C1129 - C15024 * C1136 +
              C154268 * C1147 + C15022 * C363 - C15023 * C347 - C15022 * C364 +
              C154408 * C383) *
                 C154164 * C11465) *
                C154393) *
               C154118) *
              C154384 +
          ((((C15654 + C15653) * C154164 * C11465 +
             (C15652 + C15651) * C154164 * C11466 +
             (C15650 + C15649) * C154164 * C11467 +
             (C16083 + C16084) * C154164 * C154407) *
                C154146 -
            (C15103 * C154407 + C15104 * C11467 +
             (C15090 + C15089) * C154164 * C11466 +
             (C15088 + C15087) * C154164 * C11465) *
                C154393) *
               C1307 +
           (((C15376 + C15375) * C154164 * C11465 +
             (C15374 + C15373) * C154164 * C11466 +
             (C15372 + C15371) * C154164 * C11467 +
             (C15871 + C15872) * C154164 * C154407) *
                C154393 -
            ((C15024 * C1546 - C15025 * C1541 - C15024 * C1547 +
              C154268 * C1556 + C15022 * C1143 - C15023 * C1133 -
              C15022 * C1144 + C154408 * C1151) *
                 C154164 * C154407 +
             (C16384 + C16383) * C154164 * C11467 +
             (C16382 + C16381) * C154164 * C11466 +
             (C16380 + C16379) * C154164 * C11465) *
                C154146) *
               C154118) *
              C154053)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
               C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
                  C24270 +
              (C19258 + C19259) * C24271 + C38629 * C154442) *
                 C154373 +
             ((C15087 + C15088) * C24270 + C19212 * C24271 + C19224 * C154442) *
                 C154021) *
                C154393 -
            ((C39916 * C154442 + C20558 * C24271 + (C15653 + C15654) * C24270) *
                 C154021 +
             ((C22384 + C22383) * C154442 + (C20597 + C20598) * C24271 +
              (C15024 * C602 - C15025 * C585 - C15024 * C603 + C154268 * C621 +
               C15022 * C600 - C15023 * C584 - C15022 * C601 + C154408 * C620) *
                  C24270) *
                 C154373) *
                C154146) *
               C1307 +
           ((((C20598 + C20597) * C24270 + (C22383 + C22384) * C24271 +
              (C15022 * C4258 - C15023 * C4254 - C15022 * C4259 +
               C154408 * C4266 + C15024 * C4912 - C15025 * C4907 -
               C15024 * C4913 + C154268 * C4916) *
                  C154442) *
                 C154373 +
             (C20567 * C24270 + C39917 * C24271 + (C39930 + C39931) * C154442) *
                 C154021) *
                C154146 -
            ((C38630 * C154442 + C19214 * C24271 + C19215 * C24270) * C154021 +
             (C40416 * C154442 + (C19260 + C19261) * C24271 +
              (C19259 + C19258) * C24270) *
                 C154373) *
                C154393) *
               C154118) *
              C154384 +
          (((((C15654 + C15653) * C24270 + C20567 * C24271 + C39917 * C154442) *
                 C154373 +
             ((C15652 + C15651) * C24270 + C20576 * C24271 +
              (C20601 + C20602) * C154442) *
                 C154021) *
                C154146 -
            ((C19213 * C154442 + C15856 * C24271 + (C15090 + C15089) * C24270) *
                 C154021 +
             (C19214 * C154442 + C19215 * C24271 + (C15088 + C15087) * C24270) *
                 C154373) *
                C154393) *
               C1307 +
           (((C19212 * C24270 + C19224 * C24271 + C38631 * C154442) * C154373 +
             (C18908 * C24270 + C19233 * C24271 + (C19264 + C19265) * C154442) *
                 C154021) *
                C154393 -
            (((C15024 * C4908 - C15025 * C4905 - C15024 * C4909 +
               C154268 * C4914 + C15022 * C4262 - C15023 * C4256 -
               C15022 * C4263 + C154408 * C4268) *
                  C154442 +
              (C20602 + C20601) * C24271 + C20168 * C24270) *
                 C154021 +
             ((C39931 + C39930) * C154442 + C39916 * C24271 + C20558 * C24270) *
                 C154373) *
                C154146) *
               C154118) *
              C154053)) /
            (p * q * std::sqrt(p + q));
    d2ee[354] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
             C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
                C154164 * C11465 +
            (C15087 + C15088) * C154164 * C11466 + C15101 * C11467 +
            C15102 * C154407) *
               C154082 * C1307 -
           (C15865 * C154407 + C15866 * C11467 +
            (C15375 + C15376) * C154164 * C11466 +
            (C15024 * C1135 - C15025 * C1129 - C15024 * C1136 +
             C154268 * C1147 + C15022 * C363 - C15023 * C347 - C15022 * C364 +
             C154408 * C383) *
                C154164 * C11465) *
               C154082 * C154118) *
              C1309 +
          (((C15376 + C15375) * C154164 * C11465 +
            (C15374 + C15373) * C154164 * C11466 +
            (C15372 + C15371) * C154164 * C11467 +
            (C15871 + C15872) * C154164 * C154407) *
               C154082 * C154118 -
           (C15103 * C154407 + C15104 * C11467 +
            (C15090 + C15089) * C154164 * C11466 +
            (C15088 + C15087) * C154164 * C11465) *
               C154082 * C1307) *
              C1310 +
          ((C15101 * C11465 + C15102 * C11466 +
            (C15094 + C15093) * C154164 * C11467 +
            (C15095 + C15096) * C154164 * C154407) *
               C154082 * C1307 -
           ((C15024 * C1145 - C15025 * C1134 - C15024 * C1146 +
             C154268 * C1152 + C15022 * C375 - C15023 * C353 - C15022 * C376 +
             C154408 * C389) *
                C154164 * C154407 +
            (C15872 + C15871) * C154164 * C11467 + C15865 * C11466 +
            C15866 * C11465) *
               C154082 * C154118) *
              C1311)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
            C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
               C154164 * C11465 +
           (C15087 + C15088) * C154164 * C11466 + C15101 * C11467 +
           C15102 * C154407) *
              C154082 * C1394 -
          (C15865 * C154407 + C15866 * C11467 +
           (C15375 + C15376) * C154164 * C11466 +
           (C15024 * C1135 - C15025 * C1129 - C15024 * C1136 + C154268 * C1147 +
            C15022 * C363 - C15023 * C347 - C15022 * C364 + C154408 * C383) *
               C154164 * C11465) *
              C154082 * C1395 +
          ((C15022 * C365 - C15023 * C348 - C15022 * C366 + C154408 * C384 +
            C15024 * C1985 - C15025 * C1976 - C15024 * C1986 +
            C154268 * C1991) *
               C154164 * C11465 +
           (C15377 + C15378) * C154164 * C11466 +
           (C15379 + C15380) * C154164 * C11467 +
           (C15381 + C15382) * C154164 * C154407) *
              C154082 * C1396 -
          ((C15024 * C4264 - C15025 * C4257 - C15024 * C4265 + C154268 * C4269 +
            C15022 * C1406 - C15023 * C1400 - C15022 * C1407 +
            C154408 * C1415) *
               C154164 * C154407 +
           (C15024 * C4262 - C15025 * C4256 - C15024 * C4263 + C154268 * C4268 +
            C15022 * C1408 - C15023 * C1401 - C15022 * C1409 +
            C154408 * C1416) *
               C154164 * C11467 +
           (C15024 * C4260 - C15025 * C4255 - C15024 * C4261 + C154268 * C4267 +
            C15022 * C1410 - C15023 * C1402 - C15022 * C1411 +
            C154408 * C1417) *
               C154164 * C11466 +
           (C15024 * C4258 - C15025 * C4254 - C15024 * C4259 + C154268 * C4266 +
            C15022 * C1412 - C15023 * C1403 - C15022 * C1413 +
            C154408 * C1418) *
               C154164 * C11465) *
              C154082 * C1397) *
         C154047) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
              C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
                 C24270 +
             (C19258 + C19259) * C24271 + C38629 * C154442) *
                C154373 +
            ((C15087 + C15088) * C24270 + C19212 * C24271 + C19224 * C154442) *
                C154021) *
               C154082 * C1307 -
           ((C38630 * C154442 + C19214 * C24271 + C19215 * C24270) * C154021 +
            ((C21100 + C21099) * C154442 + (C19260 + C19261) * C24271 +
             (C19259 + C19258) * C24270) *
                C154373) *
               C154082 * C154118) *
              C1309 +
          (((C19212 * C24270 + C19224 * C24271 + C38631 * C154442) * C154373 +
            (C18908 * C24270 + C19233 * C24271 + (C19264 + C19265) * C154442) *
                C154021) *
               C154082 * C154118 -
           ((C19213 * C154442 + C15856 * C24271 + (C15090 + C15089) * C24270) *
                C154021 +
            (C19214 * C154442 + C19215 * C24271 + (C15088 + C15087) * C24270) *
                C154373) *
               C154082 * C1307) *
              C1310 +
          (((C15097 * C24270 + C18908 * C24271 + C19233 * C154442) * C154373 +
            (C15098 * C24270 + C19876 * C24271 + (C15381 + C15382) * C154442) *
                C154021) *
               C154082 * C1307 -
           (((C15024 * C4264 - C15025 * C4257 - C15024 * C4265 +
              C154268 * C4269 + C15022 * C1406 - C15023 * C1400 -
              C15022 * C1407 + C154408 * C1415) *
                 C154442 +
             (C15382 + C15381) * C24271 + C15855 * C24270) *
                C154021 +
            ((C19265 + C19264) * C154442 + C19213 * C24271 + C15856 * C24270) *
                C154373) *
               C154082 * C154118) *
              C1311)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
             C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
                C24270 +
            (C19258 + C19259) * C24271 + C38629 * C154442) *
               C154373 +
           ((C15087 + C15088) * C24270 + C19212 * C24271 + C19224 * C154442) *
               C154021) *
              C154082 * C1394 -
          ((C38630 * C154442 + C19214 * C24271 + C19215 * C24270) * C154021 +
           (C40416 * C154442 + (C19260 + C19261) * C24271 +
            (C19259 + C19258) * C24270) *
               C154373) *
              C154082 * C1395 +
          ((C38629 * C24270 + (C21099 + C21100) * C24271 +
            (C40429 + C40430) * C154442) *
               C154373 +
           (C19224 * C24270 + C38631 * C24271 + (C38644 + C38645) * C154442) *
               C154021) *
              C154082 * C1396 -
          (((C15024 * C28882 - C15025 * C28879 - C15024 * C28883 +
             C154268 * C28885 + C15022 * C4673 - C15023 * C4669 -
             C15022 * C4674 + C154408 * C4678) *
                C154442 +
            (C38645 + C38644) * C24271 + C38630 * C24270) *
               C154021 +
           ((C15024 * C28880 - C15025 * C28878 - C15024 * C28881 +
             C154268 * C28884 + C15022 * C4675 - C15023 * C4670 -
             C15022 * C4676 + C154408 * C4679) *
                C154442 +
            (C40430 + C40429) * C24271 + C40416 * C24270) *
               C154373) *
              C154082 * C1397) *
         C154047) /
            (p * q * std::sqrt(p + q));
    d2ee[355] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
              C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
                 C154164 * C11465 +
             (C15087 + C15088) * C154164 * C11466 + C15101 * C11467 +
             C15102 * C154407) *
                C2114 -
            (C16077 * C154407 + C16078 * C11467 +
             (C15653 + C15654) * C154164 * C11466 +
             (C15024 * C602 - C15025 * C585 - C15024 * C603 + C154268 * C621 +
              C15022 * C600 - C15023 * C584 - C15022 * C601 + C154408 * C620) *
                 C154164 * C11465) *
                C154146) *
               C154392 +
           (((C15022 * C1135 - C15023 * C1129 - C15022 * C1136 +
              C154408 * C1147 + C15024 * C1554 - C15025 * C1545 -
              C15024 * C1555 + C154268 * C1560) *
                 C154164 * C11465 +
             (C16379 + C16380) * C154164 * C11466 +
             (C16381 + C16382) * C154164 * C11467 +
             (C16383 + C16384) * C154164 * C154407) *
                C154146 -
            (C15865 * C154407 + C15866 * C11467 +
             (C15375 + C15376) * C154164 * C11466 +
             (C15024 * C1135 - C15025 * C1129 - C15024 * C1136 +
              C154268 * C1147 + C15022 * C363 - C15023 * C347 - C15022 * C364 +
              C154408 * C383) *
                 C154164 * C11465) *
                C2114) *
               C154118) *
              C154384 +
          ((((C15654 + C15653) * C154164 * C11465 +
             (C15652 + C15651) * C154164 * C11466 +
             (C15650 + C15649) * C154164 * C11467 +
             (C16083 + C16084) * C154164 * C154407) *
                C154146 -
            (C15103 * C154407 + C15104 * C11467 +
             (C15090 + C15089) * C154164 * C11466 +
             (C15088 + C15087) * C154164 * C11465) *
                C2114) *
               C154392 +
           (((C15376 + C15375) * C154164 * C11465 +
             (C15374 + C15373) * C154164 * C11466 +
             (C15372 + C15371) * C154164 * C11467 +
             (C15871 + C15872) * C154164 * C154407) *
                C2114 -
            ((C15024 * C1546 - C15025 * C1541 - C15024 * C1547 +
              C154268 * C1556 + C15022 * C1143 - C15023 * C1133 -
              C15022 * C1144 + C154408 * C1151) *
                 C154164 * C154407 +
             (C16384 + C16383) * C154164 * C11467 +
             (C16382 + C16381) * C154164 * C11466 +
             (C16380 + C16379) * C154164 * C11465) *
                C154146) *
               C154118) *
              C154053)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
               C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
                  C24270 +
              (C19258 + C19259) * C24271 + C38629 * C154442) *
                 C154373 +
             ((C15087 + C15088) * C24270 + C19212 * C24271 + C19224 * C154442) *
                 C154021) *
                C2114 -
            ((C39916 * C154442 + C20558 * C24271 + (C15653 + C15654) * C24270) *
                 C154021 +
             (C41701 * C154442 + (C20597 + C20598) * C24271 +
              (C15024 * C602 - C15025 * C585 - C15024 * C603 + C154268 * C621 +
               C15022 * C600 - C15023 * C584 - C15022 * C601 + C154408 * C620) *
                  C24270) *
                 C154373) *
                C154146) *
               C154392 +
           ((((C20598 + C20597) * C24270 + (C22383 + C22384) * C24271 +
              (C41714 + C41715) * C154442) *
                 C154373 +
             (C20567 * C24270 + C39917 * C24271 + (C39930 + C39931) * C154442) *
                 C154021) *
                C154146 -
            ((C38630 * C154442 + C19214 * C24271 + C19215 * C24270) * C154021 +
             (C40416 * C154442 + (C19260 + C19261) * C24271 +
              (C19259 + C19258) * C24270) *
                 C154373) *
                C2114) *
               C154118) *
              C154384 +
          (((((C15654 + C15653) * C24270 + C20567 * C24271 + C39917 * C154442) *
                 C154373 +
             ((C15652 + C15651) * C24270 + C20576 * C24271 +
              (C20601 + C20602) * C154442) *
                 C154021) *
                C154146 -
            ((C19213 * C154442 + C15856 * C24271 + (C15090 + C15089) * C24270) *
                 C154021 +
             (C19214 * C154442 + C19215 * C24271 + (C15088 + C15087) * C24270) *
                 C154373) *
                C2114) *
               C154392 +
           (((C19212 * C24270 + C19224 * C24271 + C38631 * C154442) * C154373 +
             (C18908 * C24270 + C19233 * C24271 + (C19264 + C19265) * C154442) *
                 C154021) *
                C2114 -
            (((C15024 * C4908 - C15025 * C4905 - C15024 * C4909 +
               C154268 * C4914 + C15022 * C4262 - C15023 * C4256 -
               C15022 * C4263 + C154408 * C4268) *
                  C154442 +
              (C20602 + C20601) * C24271 + C20168 * C24270) *
                 C154021 +
             ((C39931 + C39930) * C154442 + C39916 * C24271 + C20558 * C24270) *
                 C154373) *
                C154146) *
               C154118) *
              C154053)) /
            (p * q * std::sqrt(p + q));
    d2ee[356] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
             C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
                C154164 * C11465 +
            (C15087 + C15088) * C154164 * C11466 + C15101 * C11467 +
            C15102 * C154407) *
               C154465 -
           (C16077 * C154407 + C16078 * C11467 +
            (C15653 + C15654) * C154164 * C11466 +
            (C15024 * C602 - C15025 * C585 - C15024 * C603 + C154268 * C621 +
             C15022 * C600 - C15023 * C584 - C15022 * C601 + C154408 * C620) *
                C154164 * C11465) *
               C154466 +
           ((C15022 * C602 - C15023 * C585 - C15022 * C603 + C154408 * C621 +
             C15024 * C2337 - C15025 * C2328 - C15024 * C2338 +
             C154268 * C2343) *
                C154164 * C11465 +
            (C15655 + C15656) * C154164 * C11466 +
            (C15657 + C15658) * C154164 * C11467 +
            (C15659 + C15660) * C154164 * C154407) *
               C2630) *
              C154392 +
          (((C15022 * C1135 - C15023 * C1129 - C15022 * C1136 +
             C154408 * C1147 + C15024 * C1554 - C15025 * C1545 -
             C15024 * C1555 + C154268 * C1560) *
                C154164 * C11465 +
            (C16379 + C16380) * C154164 * C11466 +
            (C16381 + C16382) * C154164 * C11467 +
            (C16383 + C16384) * C154164 * C154407) *
               C154466 -
           (C15865 * C154407 + C15866 * C11467 +
            (C15375 + C15376) * C154164 * C11466 +
            (C15024 * C1135 - C15025 * C1129 - C15024 * C1136 +
             C154268 * C1147 + C15022 * C363 - C15023 * C347 - C15022 * C364 +
             C154408 * C383) *
                C154164 * C11465) *
               C154465 -
           ((C15024 * C8648 - C15025 * C8647 - C15024 * C8649 +
             C154268 * C8650 + C15022 * C1548 - C15023 * C1542 -
             C15022 * C1549 + C154408 * C1557) *
                C154164 * C154407 +
            (C15024 * C6266 - C15025 * C6259 - C15024 * C6267 +
             C154268 * C6277 + C15022 * C1550 - C15023 * C1543 -
             C15022 * C1551 + C154408 * C1558) *
                C154164 * C11467 +
            (C15024 * C6270 - C15025 * C6261 - C15024 * C6271 +
             C154268 * C6279 + C15022 * C1552 - C15023 * C1544 -
             C15022 * C1553 + C154408 * C1559) *
                C154164 * C11466 +
            (C15024 * C6274 - C15025 * C6263 - C15024 * C6275 +
             C154268 * C6281 + C15022 * C1554 - C15023 * C1545 -
             C15022 * C1555 + C154408 * C1560) *
                C154164 * C11465) *
               C2630) *
              C154118) *
         C154047) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
              C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
                 C24270 +
             (C19258 + C19259) * C24271 + C38629 * C154442) *
                C154373 +
            ((C15087 + C15088) * C24270 + C19212 * C24271 + C19224 * C154442) *
                C154021) *
               C154465 -
           ((C39916 * C154442 + C20558 * C24271 + (C15653 + C15654) * C24270) *
                C154021 +
            (C41701 * C154442 + (C20597 + C20598) * C24271 +
             (C15024 * C602 - C15025 * C585 - C15024 * C603 + C154268 * C621 +
              C15022 * C600 - C15023 * C584 - C15022 * C601 + C154408 * C620) *
                 C24270) *
                C154373) *
               C154466 +
           (((C15022 * C602 - C15023 * C585 - C15022 * C603 + C154408 * C621 +
              C15024 * C2337 - C15025 * C2328 - C15024 * C2338 +
              C154268 * C2343) *
                 C24270 +
             (C21403 + C21404) * C24271 + (C40733 + C40734) * C154442) *
                C154373 +
            ((C15655 + C15656) * C24270 + (C19580 + C19581) * C24271 +
             (C38948 + C38949) * C154442) *
                C154021) *
               C2630) *
              C154392 +
          ((((C20598 + C20597) * C24270 + (C22383 + C22384) * C24271 +
             (C41714 + C41715) * C154442) *
                C154373 +
            (C20567 * C24270 + C39917 * C24271 + (C39930 + C39931) * C154442) *
                C154021) *
               C154466 -
           ((C38630 * C154442 + C19214 * C24271 + C19215 * C24270) * C154021 +
            (C40416 * C154442 + (C19260 + C19261) * C24271 +
             (C19259 + C19258) * C24270) *
                C154373) *
               C154465 -
           (((C15024 * C31817 - C15025 * C31816 - C15024 * C31818 +
              C154268 * C31819 + C15022 * C4910 - C15023 * C4906 -
              C15022 * C4911 + C154408 * C4915) *
                 C154442 +
             (C38949 + C38948) * C24271 + (C19581 + C19580) * C24270) *
                C154021 +
            ((C15024 * C30002 - C15025 * C29999 - C15024 * C30003 +
              C154268 * C30005 + C15022 * C4912 - C15023 * C4907 -
              C15022 * C4913 + C154408 * C4916) *
                 C154442 +
             (C40734 + C40733) * C24271 + (C21404 + C21403) * C24270) *
                C154373) *
               C2630) *
              C154118) *
         C154047) /
            (p * q * std::sqrt(p + q));
    d2ee[357] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
             C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
                C154164 * C11465 +
            (C15087 + C15088) * C154164 * C11466 + C15101 * C11467 +
            C15102 * C154407) *
               C2114 -
           (C16077 * C154407 + C16078 * C11467 +
            (C15653 + C15654) * C154164 * C11466 +
            (C15024 * C602 - C15025 * C585 - C15024 * C603 + C154268 * C621 +
             C15022 * C600 - C15023 * C584 - C15022 * C601 + C154408 * C620) *
                C154164 * C11465) *
               C154146) *
              C338 +
          (((C15022 * C1135 - C15023 * C1129 - C15022 * C1136 +
             C154408 * C1147 + C15024 * C1554 - C15025 * C1545 -
             C15024 * C1555 + C154268 * C1560) *
                C154164 * C11465 +
            (C16379 + C16380) * C154164 * C11466 +
            (C16381 + C16382) * C154164 * C11467 +
            (C16383 + C16384) * C154164 * C154407) *
               C154146 -
           (C15865 * C154407 + C15866 * C11467 +
            (C15375 + C15376) * C154164 * C11466 +
            (C15024 * C1135 - C15025 * C1129 - C15024 * C1136 +
             C154268 * C1147 + C15022 * C363 - C15023 * C347 - C15022 * C364 +
             C154408 * C383) *
                C154164 * C11465) *
               C2114) *
              C339 +
          (((C15022 * C365 - C15023 * C348 - C15022 * C366 + C154408 * C384 +
             C15024 * C1985 - C15025 * C1976 - C15024 * C1986 +
             C154268 * C1991) *
                C154164 * C11465 +
            (C15377 + C15378) * C154164 * C11466 +
            (C15379 + C15380) * C154164 * C11467 +
            (C15381 + C15382) * C154164 * C154407) *
               C2114 -
           ((C15024 * C3451 - C15025 * C3444 - C15024 * C3452 +
             C154268 * C3456 + C15022 * C1979 - C15023 * C1973 -
             C15022 * C1980 + C154408 * C1988) *
                C154164 * C154407 +
            (C15024 * C3449 - C15025 * C3443 - C15024 * C3450 +
             C154268 * C3455 + C15022 * C1981 - C15023 * C1974 -
             C15022 * C1982 + C154408 * C1989) *
                C154164 * C11467 +
            (C15024 * C3447 - C15025 * C3442 - C15024 * C3448 +
             C154268 * C3454 + C15022 * C1983 - C15023 * C1975 -
             C15022 * C1984 + C154408 * C1990) *
                C154164 * C11466 +
            (C15024 * C3445 - C15025 * C3441 - C15024 * C3446 +
             C154268 * C3453 + C15022 * C1985 - C15023 * C1976 -
             C15022 * C1986 + C154408 * C1991) *
                C154164 * C11465) *
               C154146) *
              C340) *
         C154047) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
             C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
                C154164 * C11465 +
            (C15087 + C15088) * C154164 * C11466 + C15101 * C11467 +
            C15102 * C154407) *
               C2114 -
           (C16077 * C154407 + C16078 * C11467 +
            (C15653 + C15654) * C154164 * C11466 +
            (C15024 * C602 - C15025 * C585 - C15024 * C603 + C154268 * C621 +
             C15022 * C600 - C15023 * C584 - C15022 * C601 + C154408 * C620) *
                C154164 * C11465) *
               C154146) *
              C154066 * C1309 +
          (((C15654 + C15653) * C154164 * C11465 +
            (C15652 + C15651) * C154164 * C11466 +
            (C15650 + C15649) * C154164 * C11467 +
            (C16083 + C16084) * C154164 * C154407) *
               C154146 -
           (C15103 * C154407 + C15104 * C11467 +
            (C15090 + C15089) * C154164 * C11466 +
            (C15088 + C15087) * C154164 * C11465) *
               C2114) *
              C154066 * C1310 +
          ((C15101 * C11465 + C15102 * C11466 +
            (C15094 + C15093) * C154164 * C11467 +
            (C15095 + C15096) * C154164 * C154407) *
               C2114 -
           ((C15024 * C614 - C15025 * C591 - C15024 * C615 + C154268 * C627 +
             C15022 * C612 - C15023 * C590 - C15022 * C613 + C154408 * C626) *
                C154164 * C154407 +
            (C16084 + C16083) * C154164 * C11467 + C16077 * C11466 +
            C16078 * C11465) *
               C154146) *
              C154066 * C1311)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
            C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
               C154164 * C11465 +
           (C15087 + C15088) * C154164 * C11466 + C15101 * C11467 +
           C15102 * C154407) *
              C2320 -
          (C16077 * C154407 + C16078 * C11467 +
           (C15653 + C15654) * C154164 * C11466 +
           (C15024 * C602 - C15025 * C585 - C15024 * C603 + C154268 * C621 +
            C15022 * C600 - C15023 * C584 - C15022 * C601 + C154408 * C620) *
               C154164 * C11465) *
              C2321 +
          ((C15022 * C602 - C15023 * C585 - C15022 * C603 + C154408 * C621 +
            C15024 * C2337 - C15025 * C2328 - C15024 * C2338 +
            C154268 * C2343) *
               C154164 * C11465 +
           (C15655 + C15656) * C154164 * C11466 +
           (C15657 + C15658) * C154164 * C11467 +
           (C15659 + C15660) * C154164 * C154407) *
              C2322 -
          ((C15024 * C7783 - C15025 * C7776 - C15024 * C7784 + C154268 * C7788 +
            C15022 * C2331 - C15023 * C2325 - C15022 * C2332 +
            C154408 * C2340) *
               C154164 * C154407 +
           (C15024 * C7781 - C15025 * C7775 - C15024 * C7782 + C154268 * C7787 +
            C15022 * C2333 - C15023 * C2326 - C15022 * C2334 +
            C154408 * C2341) *
               C154164 * C11467 +
           (C15024 * C7779 - C15025 * C7774 - C15024 * C7780 + C154268 * C7786 +
            C15022 * C2335 - C15023 * C2327 - C15022 * C2336 +
            C154408 * C2342) *
               C154164 * C11466 +
           (C15024 * C7777 - C15025 * C7773 - C15024 * C7778 + C154268 * C7785 +
            C15022 * C2337 - C15023 * C2328 - C15022 * C2338 +
            C154408 * C2343) *
               C154164 * C11465) *
              C2323) *
         C154066 * C154047) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
              C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
                 C24270 +
             (C19258 + C19259) * C24271 + C38629 * C154442) *
                C154373 +
            ((C15087 + C15088) * C24270 + C19212 * C24271 + C19224 * C154442) *
                C154021) *
               C2114 -
           ((C39916 * C154442 + C20558 * C24271 + (C15653 + C15654) * C24270) *
                C154021 +
            (C41701 * C154442 + (C20597 + C20598) * C24271 +
             (C15024 * C602 - C15025 * C585 - C15024 * C603 + C154268 * C621 +
              C15022 * C600 - C15023 * C584 - C15022 * C601 + C154408 * C620) *
                 C24270) *
                C154373) *
               C154146) *
              C154066 * C1309 +
          ((((C15654 + C15653) * C24270 + C20567 * C24271 + C39917 * C154442) *
                C154373 +
            ((C15652 + C15651) * C24270 + C20576 * C24271 +
             (C20601 + C20602) * C154442) *
                C154021) *
               C154146 -
           ((C19213 * C154442 + C15856 * C24271 + (C15090 + C15089) * C24270) *
                C154021 +
            (C19214 * C154442 + C19215 * C24271 + (C15088 + C15087) * C24270) *
                C154373) *
               C2114) *
              C154066 * C1310 +
          (((C15097 * C24270 + C18908 * C24271 + C19233 * C154442) * C154373 +
            (C15098 * C24270 + C19876 * C24271 + (C15381 + C15382) * C154442) *
                C154021) *
               C2114 -
           (((C15024 * C3451 - C15025 * C3444 - C15024 * C3452 +
              C154268 * C3456 + C15022 * C1979 - C15023 * C1973 -
              C15022 * C1980 + C154408 * C1988) *
                 C154442 +
             (C16384 + C16383) * C24271 + C16067 * C24270) *
                C154021 +
            ((C20602 + C20601) * C154442 + C20168 * C24271 + C16068 * C24270) *
                C154373) *
               C154146) *
              C154066 * C1311)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
              C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
                 C24270 +
             (C19258 + C19259) * C24271 + C38629 * C154442) *
                C154373 +
            ((C15087 + C15088) * C24270 + C19212 * C24271 + C19224 * C154442) *
                C154021) *
               C2114 -
           ((C39916 * C154442 + C20558 * C24271 + (C15653 + C15654) * C24270) *
                C154021 +
            (C41701 * C154442 + (C20597 + C20598) * C24271 +
             (C15024 * C602 - C15025 * C585 - C15024 * C603 + C154268 * C621 +
              C15022 * C600 - C15023 * C584 - C15022 * C601 + C154408 * C620) *
                 C24270) *
                C154373) *
               C154146) *
              C338 +
          ((((C20598 + C20597) * C24270 + (C22383 + C22384) * C24271 +
             (C41714 + C41715) * C154442) *
                C154373 +
            (C20567 * C24270 + C39917 * C24271 + (C39930 + C39931) * C154442) *
                C154021) *
               C154146 -
           ((C38630 * C154442 + C19214 * C24271 + C19215 * C24270) * C154021 +
            (C40416 * C154442 + (C19260 + C19261) * C24271 +
             (C19259 + C19258) * C24270) *
                C154373) *
               C2114) *
              C339 +
          (((C38629 * C24270 + (C21099 + C21100) * C24271 +
             (C40429 + C40430) * C154442) *
                C154373 +
            (C19224 * C24270 + C38631 * C24271 + (C38644 + C38645) * C154442) *
                C154021) *
               C2114 -
           (((C15024 * C28468 - C15025 * C28465 - C15024 * C28469 +
              C154268 * C28471 + C15022 * C5662 - C15023 * C5658 -
              C15022 * C5663 + C154408 * C5667) *
                 C154442 +
             (C39931 + C39930) * C24271 + C39916 * C24270) *
                C154021 +
            ((C15024 * C28466 - C15025 * C28464 - C15024 * C28467 +
              C154268 * C28470 + C15022 * C5664 - C15023 * C5659 -
              C15022 * C5665 + C154408 * C5668) *
                 C154442 +
             (C41715 + C41714) * C24271 + C41701 * C24270) *
                C154373) *
               C154146) *
              C340) *
         C154047) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
             C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
                C24270 +
            (C19258 + C19259) * C24271 + C38629 * C154442) *
               C154373 +
           ((C15087 + C15088) * C24270 + C19212 * C24271 + C19224 * C154442) *
               C154021) *
              C2320 -
          ((C39916 * C154442 + C20558 * C24271 + (C15653 + C15654) * C24270) *
               C154021 +
           (C41701 * C154442 + (C20597 + C20598) * C24271 +
            (C15024 * C602 - C15025 * C585 - C15024 * C603 + C154268 * C621 +
             C15022 * C600 - C15023 * C584 - C15022 * C601 + C154408 * C620) *
                C24270) *
               C154373) *
              C2321 +
          (((C15022 * C602 - C15023 * C585 - C15022 * C603 + C154408 * C621 +
             C15024 * C2337 - C15025 * C2328 - C15024 * C2338 +
             C154268 * C2343) *
                C24270 +
            (C21403 + C21404) * C24271 + (C40733 + C40734) * C154442) *
               C154373 +
           ((C15655 + C15656) * C24270 + (C19580 + C19581) * C24271 +
            (C38948 + C38949) * C154442) *
               C154021) *
              C2322 -
          (((C15024 * C31086 - C15025 * C31083 - C15024 * C31087 +
             C154268 * C31089 + C15022 * C6268 - C15023 * C6260 -
             C15022 * C6269 + C154408 * C6278) *
                C154442 +
            (C15024 * C9280 - C15025 * C9276 - C15024 * C9281 +
             C154268 * C9285 + C15022 * C6270 - C15023 * C6261 -
             C15022 * C6271 + C154408 * C6279) *
                C24271 +
            (C15024 * C7779 - C15025 * C7774 - C15024 * C7780 +
             C154268 * C7786 + C15022 * C2335 - C15023 * C2327 -
             C15022 * C2336 + C154408 * C2342) *
                C24270) *
               C154021 +
           ((C15024 * C31084 - C15025 * C31082 - C15024 * C31085 +
             C154268 * C31088 + C15022 * C6272 - C15023 * C6262 -
             C15022 * C6273 + C154408 * C6280) *
                C154442 +
            (C15024 * C9282 - C15025 * C9277 - C15024 * C9283 +
             C154268 * C9286 + C15022 * C6274 - C15023 * C6263 -
             C15022 * C6275 + C154408 * C6281) *
                C24271 +
            (C15024 * C7777 - C15025 * C7773 - C15024 * C7778 +
             C154268 * C7785 + C15022 * C2337 - C15023 * C2328 -
             C15022 * C2338 + C154408 * C2343) *
                C24270) *
               C154373) *
              C2323) *
         C154066 * C154047) /
            (p * q * std::sqrt(p + q));
    d2ee[358] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
             C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
                C154164 * C11465 +
            (C15087 + C15088) * C154164 * C11466 + C15101 * C11467 +
            C15102 * C154407) *
               C154465 -
           (C16077 * C154407 + C16078 * C11467 +
            (C15653 + C15654) * C154164 * C11466 +
            (C15024 * C602 - C15025 * C585 - C15024 * C603 + C154268 * C621 +
             C15022 * C600 - C15023 * C584 - C15022 * C601 + C154408 * C620) *
                C154164 * C11465) *
               C154466 +
           ((C15022 * C602 - C15023 * C585 - C15022 * C603 + C154408 * C621 +
             C15024 * C2337 - C15025 * C2328 - C15024 * C2338 +
             C154268 * C2343) *
                C154164 * C11465 +
            (C15655 + C15656) * C154164 * C11466 +
            (C15657 + C15658) * C154164 * C11467 +
            (C15659 + C15660) * C154164 * C154407) *
               C2630) *
              C154066 * C154384 +
          (((C15654 + C15653) * C154164 * C11465 +
            (C15652 + C15651) * C154164 * C11466 +
            (C15650 + C15649) * C154164 * C11467 +
            (C16083 + C16084) * C154164 * C154407) *
               C154466 -
           (C15103 * C154407 + C15104 * C11467 +
            (C15090 + C15089) * C154164 * C11466 +
            (C15088 + C15087) * C154164 * C11465) *
               C154465 -
           ((C15024 * C2329 - C15025 * C2324 - C15024 * C2330 +
             C154268 * C2339 + C15022 * C610 - C15023 * C589 - C15022 * C611 +
             C154408 * C625) *
                C154164 * C154407 +
            (C15660 + C15659) * C154164 * C11467 +
            (C15658 + C15657) * C154164 * C11466 +
            (C15656 + C15655) * C154164 * C11465) *
               C2630) *
              C154066 * C154053)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
              C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
                 C24270 +
             (C19258 + C19259) * C24271 + C38629 * C154442) *
                C154373 +
            ((C15087 + C15088) * C24270 + C19212 * C24271 + C19224 * C154442) *
                C154021) *
               C154465 -
           ((C39916 * C154442 + C20558 * C24271 + (C15653 + C15654) * C24270) *
                C154021 +
            (C41701 * C154442 + (C20597 + C20598) * C24271 +
             (C15024 * C602 - C15025 * C585 - C15024 * C603 + C154268 * C621 +
              C15022 * C600 - C15023 * C584 - C15022 * C601 + C154408 * C620) *
                 C24270) *
                C154373) *
               C154466 +
           (((C15022 * C602 - C15023 * C585 - C15022 * C603 + C154408 * C621 +
              C15024 * C2337 - C15025 * C2328 - C15024 * C2338 +
              C154268 * C2343) *
                 C24270 +
             (C21403 + C21404) * C24271 + (C40733 + C40734) * C154442) *
                C154373 +
            ((C15655 + C15656) * C24270 + (C19580 + C19581) * C24271 +
             (C38948 + C38949) * C154442) *
                C154021) *
               C2630) *
              C154066 * C154384 +
          ((((C15654 + C15653) * C24270 + C20567 * C24271 + C39917 * C154442) *
                C154373 +
            ((C15652 + C15651) * C24270 + C20576 * C24271 +
             (C20601 + C20602) * C154442) *
                C154021) *
               C154466 -
           ((C19213 * C154442 + C15856 * C24271 + (C15090 + C15089) * C24270) *
                C154021 +
            (C19214 * C154442 + C19215 * C24271 + (C15088 + C15087) * C24270) *
                C154373) *
               C154465 -
           (((C15024 * C6264 - C15025 * C6258 - C15024 * C6265 +
              C154268 * C6276 + C15022 * C3449 - C15023 * C3443 -
              C15022 * C3450 + C154408 * C3455) *
                 C154442 +
             (C19583 + C19582) * C24271 + (C15658 + C15657) * C24270) *
                C154021 +
            ((C38949 + C38948) * C154442 + (C19581 + C19580) * C24271 +
             (C15656 + C15655) * C24270) *
                C154373) *
               C2630) *
              C154066 * C154053)) /
            (p * q * std::sqrt(p + q));
    d2ee[359] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
             C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
                C154164 * C11465 +
            (C15087 + C15088) * C154164 * C11466 + C15101 * C11467 +
            C15102 * C154407) *
               C2114 -
           (C16077 * C154407 + C16078 * C11467 +
            (C15653 + C15654) * C154164 * C11466 +
            (C15024 * C602 - C15025 * C585 - C15024 * C603 + C154268 * C621 +
             C15022 * C600 - C15023 * C584 - C15022 * C601 + C154408 * C620) *
                C154164 * C11465) *
               C154146) *
              C154066 * C1309 +
          (((C15654 + C15653) * C154164 * C11465 +
            (C15652 + C15651) * C154164 * C11466 +
            (C15650 + C15649) * C154164 * C11467 +
            (C16083 + C16084) * C154164 * C154407) *
               C154146 -
           (C15103 * C154407 + C15104 * C11467 +
            (C15090 + C15089) * C154164 * C11466 +
            (C15088 + C15087) * C154164 * C11465) *
               C2114) *
              C154066 * C1310 +
          ((C15101 * C11465 + C15102 * C11466 +
            (C15094 + C15093) * C154164 * C11467 +
            (C15095 + C15096) * C154164 * C154407) *
               C2114 -
           ((C15024 * C614 - C15025 * C591 - C15024 * C615 + C154268 * C627 +
             C15022 * C612 - C15023 * C590 - C15022 * C613 + C154408 * C626) *
                C154164 * C154407 +
            (C16084 + C16083) * C154164 * C11467 + C16077 * C11466 +
            C16078 * C11465) *
               C154146) *
              C154066 * C1311)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
             C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
                C154164 * C11465 +
            (C15087 + C15088) * C154164 * C11466 + C15101 * C11467 +
            C15102 * C154407) *
               C2114 -
           (C16077 * C154407 + C16078 * C11467 +
            (C15653 + C15654) * C154164 * C11466 +
            (C15024 * C602 - C15025 * C585 - C15024 * C603 + C154268 * C621 +
             C15022 * C600 - C15023 * C584 - C15022 * C601 + C154408 * C620) *
                C154164 * C11465) *
               C154146) *
              C338 +
          (((C15022 * C1135 - C15023 * C1129 - C15022 * C1136 +
             C154408 * C1147 + C15024 * C1554 - C15025 * C1545 -
             C15024 * C1555 + C154268 * C1560) *
                C154164 * C11465 +
            (C16379 + C16380) * C154164 * C11466 +
            (C16381 + C16382) * C154164 * C11467 +
            (C16383 + C16384) * C154164 * C154407) *
               C154146 -
           (C15865 * C154407 + C15866 * C11467 +
            (C15375 + C15376) * C154164 * C11466 +
            (C15024 * C1135 - C15025 * C1129 - C15024 * C1136 +
             C154268 * C1147 + C15022 * C363 - C15023 * C347 - C15022 * C364 +
             C154408 * C383) *
                C154164 * C11465) *
               C2114) *
              C339 +
          (((C15022 * C365 - C15023 * C348 - C15022 * C366 + C154408 * C384 +
             C15024 * C1985 - C15025 * C1976 - C15024 * C1986 +
             C154268 * C1991) *
                C154164 * C11465 +
            (C15377 + C15378) * C154164 * C11466 +
            (C15379 + C15380) * C154164 * C11467 +
            (C15381 + C15382) * C154164 * C154407) *
               C2114 -
           ((C15024 * C3451 - C15025 * C3444 - C15024 * C3452 +
             C154268 * C3456 + C15022 * C1979 - C15023 * C1973 -
             C15022 * C1980 + C154408 * C1988) *
                C154164 * C154407 +
            (C15024 * C3449 - C15025 * C3443 - C15024 * C3450 +
             C154268 * C3455 + C15022 * C1981 - C15023 * C1974 -
             C15022 * C1982 + C154408 * C1989) *
                C154164 * C11467 +
            (C15024 * C3447 - C15025 * C3442 - C15024 * C3448 +
             C154268 * C3454 + C15022 * C1983 - C15023 * C1975 -
             C15022 * C1984 + C154408 * C1990) *
                C154164 * C11466 +
            (C15024 * C3445 - C15025 * C3441 - C15024 * C3446 +
             C154268 * C3453 + C15022 * C1985 - C15023 * C1976 -
             C15022 * C1986 + C154408 * C1991) *
                C154164 * C11465) *
               C154146) *
              C340) *
         C154047) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
              C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
                 C24270 +
             (C19258 + C19259) * C24271 + C38629 * C154442) *
                C154373 +
            ((C15087 + C15088) * C24270 + C19212 * C24271 + C19224 * C154442) *
                C154021) *
               C2114 -
           ((C39916 * C154442 + C20558 * C24271 + (C15653 + C15654) * C24270) *
                C154021 +
            (C41701 * C154442 + (C20597 + C20598) * C24271 +
             (C15024 * C602 - C15025 * C585 - C15024 * C603 + C154268 * C621 +
              C15022 * C600 - C15023 * C584 - C15022 * C601 + C154408 * C620) *
                 C24270) *
                C154373) *
               C154146) *
              C154066 * C1309 +
          ((((C15654 + C15653) * C24270 + C20567 * C24271 + C39917 * C154442) *
                C154373 +
            ((C15652 + C15651) * C24270 + C20576 * C24271 +
             (C20601 + C20602) * C154442) *
                C154021) *
               C154146 -
           ((C19213 * C154442 + C15856 * C24271 + (C15090 + C15089) * C24270) *
                C154021 +
            (C19214 * C154442 + C19215 * C24271 + (C15088 + C15087) * C24270) *
                C154373) *
               C2114) *
              C154066 * C1310 +
          (((C15097 * C24270 + C18908 * C24271 + C19233 * C154442) * C154373 +
            (C15098 * C24270 + C19876 * C24271 + (C15381 + C15382) * C154442) *
                C154021) *
               C2114 -
           (((C15024 * C3451 - C15025 * C3444 - C15024 * C3452 +
              C154268 * C3456 + C15022 * C1979 - C15023 * C1973 -
              C15022 * C1980 + C154408 * C1988) *
                 C154442 +
             (C16384 + C16383) * C24271 + C16067 * C24270) *
                C154021 +
            ((C20602 + C20601) * C154442 + C20168 * C24271 + C16068 * C24270) *
                C154373) *
               C154146) *
              C154066 * C1311)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C15022 * C144 - C15023 * C136 - C15022 * C145 + C154408 * C160 +
              C15024 * C600 - C15025 * C584 - C15024 * C601 + C154268 * C620) *
                 C24270 +
             (C19258 + C19259) * C24271 + C38629 * C154442) *
                C154373 +
            ((C15087 + C15088) * C24270 + C19212 * C24271 + C19224 * C154442) *
                C154021) *
               C2114 -
           ((C39916 * C154442 + C20558 * C24271 + (C15653 + C15654) * C24270) *
                C154021 +
            (C41701 * C154442 + (C20597 + C20598) * C24271 +
             (C15024 * C602 - C15025 * C585 - C15024 * C603 + C154268 * C621 +
              C15022 * C600 - C15023 * C584 - C15022 * C601 + C154408 * C620) *
                 C24270) *
                C154373) *
               C154146) *
              C338 +
          ((((C20598 + C20597) * C24270 + (C22383 + C22384) * C24271 +
             (C41714 + C41715) * C154442) *
                C154373 +
            (C20567 * C24270 + C39917 * C24271 + (C39930 + C39931) * C154442) *
                C154021) *
               C154146 -
           ((C38630 * C154442 + C19214 * C24271 + C19215 * C24270) * C154021 +
            (C40416 * C154442 + (C19260 + C19261) * C24271 +
             (C19259 + C19258) * C24270) *
                C154373) *
               C2114) *
              C339 +
          (((C38629 * C24270 + (C21099 + C21100) * C24271 +
             (C40429 + C40430) * C154442) *
                C154373 +
            (C19224 * C24270 + C38631 * C24271 + (C38644 + C38645) * C154442) *
                C154021) *
               C2114 -
           (((C15024 * C28468 - C15025 * C28465 - C15024 * C28469 +
              C154268 * C28471 + C15022 * C5662 - C15023 * C5658 -
              C15022 * C5663 + C154408 * C5667) *
                 C154442 +
             (C39931 + C39930) * C24271 + C39916 * C24270) *
                C154021 +
            ((C15024 * C28466 - C15025 * C28464 - C15024 * C28467 +
              C154268 * C28470 + C15022 * C5664 - C15023 * C5659 -
              C15022 * C5665 + C154408 * C5668) *
                 C154442 +
             (C41715 + C41714) * C24271 + C41701 * C24270) *
                C154373) *
               C154146) *
              C340) *
         C154047) /
            (p * q * std::sqrt(p + q));
    d2ee[360] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                C154164 * C123 +
            C211 * C124 + C212 * C125 + C213 * C126 + C214 * C127) *
               C154082 * C154392 -
           (C448 * C127 + C449 * C126 + C450 * C125 + C451 * C124 +
            (C134 * C363 - C135 * C347 - C134 * C364 + C154181 * C383) *
                C154164 * C123) *
               C154082 * C154118) *
              C154461 +
          ((C451 * C123 + C450 * C124 + C449 * C125 + C448 * C126 +
            C831 * C127) *
               C154082 * C154118 -
           (C215 * C127 + C214 * C126 + C213 * C125 + C212 * C124 +
            C211 * C123) *
               C154082 * C154392) *
              C154462 +
          ((C212 * C123 + C213 * C124 + C214 * C125 + C215 * C126 +
            C216 * C127) *
               C154082 * C154392 -
           ((C134 * C820 - C135 * C819 - C134 * C821 + C154181 * C822) *
                C154164 * C127 +
            C831 * C126 + C448 * C125 + C449 * C124 + C450 * C123) *
               C154082 * C154118) *
              C818)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C154480 +
             C3210 * C154468 + C3211 * C154442) *
                C2902 +
            (C2906 + C2907 + C2908) * C2903 + C2920 * C154429) *
               C154082 * C154392 -
           (C3734 * C154429 + (C3219 + C3174 + C3175) * C2903 +
            (C3214 * C154442 + C3211 * C154468 + C3210 * C154480) * C2902) *
               C154082 * C154118) *
              C154461 +
          (((C3175 + C3174 + C3219) * C2902 + (C3169 + C3168 + C3218) * C2903 +
            (C3731 + C3732 + C3733) * C154429) *
               C154082 * C154118 -
           (C2921 * C154429 + (C2911 + C2910 + C2909) * C2903 +
            (C2908 + C2907 + C2906) * C2902) *
               C154082 * C154392) *
              C154462 +
          ((C2920 * C2902 + (C2914 + C2913 + C2912) * C2903 +
            (C2915 + C2916 + C2917) * C154429) *
               C154082 * C154392 -
           (((C134 * C1404 - C135 * C1399 - C134 * C1405 + C154181 * C1414) *
                 C154442 +
             C447 * C154468 + C440 * C154480) *
                C154429 +
            (C3733 + C3732 + C3731) * C2903 + C3734 * C2902) *
               C154082 * C154118) *
              C818)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C24270 +
             C3210 * C24271 + C3211 * C154442) *
                C154477 +
            (C24277 + C24278 + C24279) * C154458 + C24291 * C154429) *
               C154082 * C154392 -
           (C24975 * C154429 + (C24514 + C24515 + C24516) * C154458 +
            (C3214 * C154442 + C3211 * C24271 + C3210 * C24270) * C154477) *
               C154082 * C154118) *
              C154461 +
          (((C24516 + C24515 + C24514) * C154477 +
            (C24513 + C24512 + C24511) * C154458 +
            (C24972 + C24973 + C24974) * C154429) *
               C154082 * C154118 -
           (C24292 * C154429 + (C24282 + C24281 + C24280) * C154458 +
            (C24279 + C24278 + C24277) * C154477) *
               C154082 * C154392) *
              C154462 +
          ((C24291 * C154477 + (C24285 + C24284 + C24283) * C154458 +
            (C24286 + C24287 + C24288) * C154429) *
               C154082 * C154392 -
           (((C134 * C1404 - C135 * C1399 - C134 * C1405 + C154181 * C1414) *
                 C154442 +
             C447 * C24271 + C440 * C24270) *
                C154429 +
            (C24974 + C24973 + C24972) * C154458 + C24975 * C154477) *
               C154082 * C154118) *
              C818)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                C28192 +
            C3210 * C28193 + C3211 * C28194 + C3214 * C28195 + C4687 * C28196) *
               C154011 * C154082 * C154392 -
           (C28341 * C28196 + C4687 * C28195 + C3214 * C28194 + C3211 * C28193 +
            C3210 * C28192) *
               C154011 * C154082 * C154118) *
              C154461 +
          ((C443 * C28192 + C444 * C28193 + C3213 * C28194 + C3215 * C28195 +
            C28342 * C28196) *
               C154011 * C154082 * C154118 -
           (C3215 * C28196 + C3213 * C28195 + C444 * C28194 + C443 * C28193 +
            C205 * C28192) *
               C154011 * C154082 * C154392) *
              C154462 +
          ((C206 * C28192 + C442 * C28193 + C445 * C28194 + C3212 * C28195 +
            C3216 * C28196) *
               C154011 * C154082 * C154392 -
           ((C134 * C4671 - C135 * C4668 - C134 * C4672 + C154181 * C4677) *
                C28196 +
            C3216 * C28195 + C3212 * C28194 + C445 * C28193 + C442 * C28192) *
               C154011 * C154082 * C154118) *
              C818)) /
            (p * q * std::sqrt(p + q));
    d2ee[361] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C154164 * C123 +
             C211 * C124 + C212 * C125 + C213 * C126 + C214 * C127) *
                C154393 -
            (C685 * C127 + C686 * C126 + C687 * C125 + C688 * C124 +
             (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                 C154164 * C123) *
                C154146) *
               C154392 +
           (((C134 * C1135 - C135 * C1129 - C134 * C1136 + C154181 * C1147) *
                 C154164 * C123 +
             C1182 * C124 + C1183 * C125 + C1184 * C126 + C1185 * C127) *
                C154146 -
            (C448 * C127 + C449 * C126 + C450 * C125 + C451 * C124 +
             (C134 * C363 - C135 * C347 - C134 * C364 + C154181 * C383) *
                 C154164 * C123) *
                C154393) *
               C154118) *
              C341 +
          (((C688 * C123 + C687 * C124 + C686 * C125 + C685 * C126 +
             C967 * C127) *
                C154146 -
            (C215 * C127 + C214 * C126 + C213 * C125 + C212 * C124 +
             C211 * C123) *
                C154393) *
               C154392 +
           ((C451 * C123 + C450 * C124 + C449 * C125 + C448 * C126 +
             C831 * C127) *
                C154393 -
            ((C134 * C1145 - C135 * C1134 - C134 * C1146 + C154181 * C1152) *
                 C154164 * C127 +
             C1185 * C126 + C1184 * C125 + C1183 * C124 + C1182 * C123) *
                C154146) *
               C154118) *
              C154053)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                  C154480 +
              C3210 * C154468 + C3211 * C154442) *
                 C2902 +
             (C2906 + C2907 + C2908) * C2903 + C2920 * C154429) *
                C154393 -
            (C3960 * C154429 + (C3507 + C3468 + C3469) * C2903 +
             (C4299 * C154442 + C4300 * C154468 +
              (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                  C154480) *
                 C2902) *
                C154146) *
               C154392 +
           (((C4300 * C154480 + C4299 * C154468 +
              (C134 * C4258 - C135 * C4254 - C134 * C4259 + C154181 * C4266) *
                  C154442) *
                 C2902 +
             (C4279 + C4280 + C4303) * C2903 +
             (C4285 + C4286 + C4304) * C154429) *
                C154146 -
            (C3734 * C154429 + (C3219 + C3174 + C3175) * C2903 +
             (C3214 * C154442 + C3211 * C154468 + C3210 * C154480) * C2902) *
                C154393) *
               C154118) *
              C341 +
          ((((C3469 + C3468 + C3507) * C2902 + (C3463 + C3462 + C3506) * C2903 +
             (C3954 + C3955 + C3964) * C154429) *
                C154146 -
            (C2921 * C154429 + (C2911 + C2910 + C2909) * C2903 +
             (C2908 + C2907 + C2906) * C2902) *
                C154393) *
               C154392 +
           (((C3175 + C3174 + C3219) * C2902 + (C3169 + C3168 + C3218) * C2903 +
             (C3731 + C3732 + C3733) * C154429) *
                C154393 -
            (((C134 * C4264 - C135 * C4257 - C134 * C4265 + C154181 * C4269) *
                  C154442 +
              C3963 * C154468 + C1180 * C154480) *
                 C154429 +
             (C4304 + C4286 + C4285) * C2903 +
             (C4303 + C4280 + C4279) * C2902) *
                C154146) *
               C154118) *
              C154053)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                  C24270 +
              C3210 * C24271 + C3211 * C154442) *
                 C154477 +
             (C24277 + C24278 + C24279) * C154458 + C24291 * C154429) *
                C154393 -
            (C25198 * C154429 + (C24744 + C24745 + C24746) * C154458 +
             (C4299 * C154442 + C4300 * C24271 +
              (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                  C24270) *
                 C154477) *
                C154146) *
               C154392 +
           (((C4300 * C24270 + C4299 * C24271 + C5676 * C154442) * C154477 +
             (C25489 + C25490 + C25491) * C154458 +
             (C25492 + C25493 + C25494) * C154429) *
                C154146 -
            (C24975 * C154429 + (C24514 + C24515 + C24516) * C154458 +
             (C3214 * C154442 + C3211 * C24271 + C3210 * C24270) * C154477) *
                C154393) *
               C154118) *
              C341 +
          ((((C24746 + C24745 + C24744) * C154477 +
             (C24743 + C24742 + C24741) * C154458 +
             (C25195 + C25196 + C25197) * C154429) *
                C154146 -
            (C24292 * C154429 + (C24282 + C24281 + C24280) * C154458 +
             (C24279 + C24278 + C24277) * C154477) *
                C154393) *
               C154392 +
           (((C24516 + C24515 + C24514) * C154477 +
             (C24513 + C24512 + C24511) * C154458 +
             (C24972 + C24973 + C24974) * C154429) *
                C154393 -
            (((C134 * C4264 - C135 * C4257 - C134 * C4265 + C154181 * C4269) *
                  C154442 +
              C3963 * C24271 + C1180 * C24270) *
                 C154429 +
             (C25494 + C25493 + C25492) * C154458 +
             (C25491 + C25490 + C25489) * C154477) *
                C154146) *
               C154118) *
              C154053)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C28192 +
             C3210 * C28193 + C3211 * C28194 + C3214 * C28195 +
             C4687 * C28196) *
                C154011 * C154393 -
            (C28899 * C28196 + C5676 * C28195 + C4299 * C28194 +
             C4300 * C28193 +
             (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                 C28192) *
                C154011 * C154146) *
               C154392 +
           ((C4300 * C28192 + C4299 * C28193 + C5676 * C28194 +
             C28899 * C28195 +
             (C134 * C28880 - C135 * C28878 - C134 * C28881 +
              C154181 * C28884) *
                 C28196) *
                C154011 * C154146 -
            (C28341 * C28196 + C4687 * C28195 + C3214 * C28194 +
             C3211 * C28193 + C3210 * C28192) *
                C154011 * C154393) *
               C154118) *
              C341 +
          (((C680 * C28192 + C1178 * C28193 + C3501 * C28194 + C4301 * C28195 +
             C28900 * C28196) *
                C154011 * C154146 -
            (C3215 * C28196 + C3213 * C28195 + C444 * C28194 + C443 * C28193 +
             C205 * C28192) *
                C154011 * C154393) *
               C154392 +
           ((C443 * C28192 + C444 * C28193 + C3213 * C28194 + C3215 * C28195 +
             C28342 * C28196) *
                C154011 * C154393 -
            ((C134 * C28882 - C135 * C28879 - C134 * C28883 +
              C154181 * C28885) *
                 C28196 +
             C28900 * C28195 + C4301 * C28194 + C3501 * C28193 +
             C1178 * C28192) *
                C154011 * C154146) *
               C154118) *
              C154053)) /
            (p * q * std::sqrt(p + q));
    d2ee[362] +=
        (-std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                C154164 * C123 +
            C211 * C124 + C212 * C125 + C213 * C126 + C214 * C127) *
               C154082 * C338 -
           (C448 * C127 + C449 * C126 + C450 * C125 + C451 * C124 +
            (C134 * C363 - C135 * C347 - C134 * C364 + C154181 * C383) *
                C154164 * C123) *
               C154082 * C339 +
           ((C134 * C365 - C135 * C348 - C134 * C366 + C154181 * C384) *
                C154164 * C123 +
            C452 * C124 + C453 * C125 + C454 * C126 + C455 * C127) *
               C154082 * C340) *
              C341 +
          ((C451 * C123 + C450 * C124 + C449 * C125 + C448 * C126 +
            (C134 * C375 - C135 * C353 - C134 * C376 + C154181 * C389) *
                C154164 * C127) *
               C154082 * C339 -
           (C215 * C127 + C214 * C126 + C213 * C125 + C212 * C124 +
            C211 * C123) *
               C154082 * C338 -
           ((C134 * C377 - C135 * C354 - C134 * C378 + C154181 * C390) *
                C154164 * C127 +
            C455 * C126 + C454 * C125 + C453 * C124 + C452 * C123) *
               C154082 * C340) *
              C154053)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
               C154164 * C123 +
           C211 * C124 + C212 * C125 + C213 * C126 + C214 * C127) *
              C154082 * C154066 * C130 -
          (C215 * C127 + C214 * C126 + C213 * C125 + C212 * C124 +
           C211 * C123) *
              C154082 * C154066 * C131 +
          (C212 * C123 + C213 * C124 + C214 * C125 + C215 * C126 +
           C216 * C127) *
              C154082 * C154066 * C132 -
          ((C134 * C158 - C135 * C143 - C134 * C159 + C154181 * C167) *
               C154164 * C127 +
           C216 * C126 + C215 * C125 + C214 * C124 + C213 * C123) *
              C154082 * C154066 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                C154164 * C123 +
            C211 * C124 + C212 * C125 + C213 * C126 + C214 * C127) *
               C577 -
           (C685 * C127 + C686 * C126 + C687 * C125 + C688 * C124 +
            (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                C154164 * C123) *
               C578 +
           ((C134 * C602 - C135 * C585 - C134 * C603 + C154181 * C621) *
                C154164 * C123 +
            C689 * C124 + C690 * C125 + C691 * C126 + C692 * C127) *
               C579) *
              C154066 * C341 +
          ((C688 * C123 + C687 * C124 + C686 * C125 + C685 * C126 +
            (C134 * C612 - C135 * C590 - C134 * C613 + C154181 * C626) *
                C154164 * C127) *
               C578 -
           (C215 * C127 + C214 * C126 + C213 * C125 + C212 * C124 +
            C211 * C123) *
               C577 -
           ((C134 * C614 - C135 * C591 - C134 * C615 + C154181 * C627) *
                C154164 * C127 +
            C692 * C126 + C691 * C125 + C690 * C124 + C689 * C123) *
               C579) *
              C154066 * C154053)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                C154480 +
            (C134 * C363 - C135 * C347 - C134 * C364 + C154181 * C383) *
                C154468 +
            (C134 * C365 - C135 * C348 - C134 * C366 + C154181 * C384) *
                C154442) *
               C2902 +
           (C2906 + C2907 + C2908) * C2903 + C2920 * C154429) *
              C154082 * C154066 * C130 -
          (C2921 * C154429 + (C2911 + C2910 + C2909) * C2903 +
           (C2908 + C2907 + C2906) * C2902) *
              C154082 * C154066 * C131 +
          (C2920 * C2902 + (C2914 + C2913 + C2912) * C2903 +
           (C2915 + C2916 + C2917) * C154429) *
              C154082 * C154066 * C132 -
          (((C134 * C377 - C135 * C354 - C134 * C378 + C154181 * C390) *
                C154442 +
            C830 * C154468 + C209 * C154480) *
               C154429 +
           (C2917 + C2916 + C2915) * C2903 + C2921 * C2902) *
              C154082 * C154066 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C154480 +
             C3210 * C154468 + C3211 * C154442) *
                C2902 +
            (C2906 + C2907 + C2908) * C2903 + C2920 * C154429) *
               C154082 * C338 -
           ((C3218 + C3168 + C3169) * C154429 +
            (C3219 + C3174 + C3175) * C2903 +
            (C3214 * C154442 + C3211 * C154468 + C3210 * C154480) * C2902) *
               C154082 * C339 +
           ((C3211 * C154480 + C3214 * C154468 +
             (C134 * C3143 - C135 * C3139 - C134 * C3144 + C154181 * C3151) *
                 C154442) *
                C2902 +
            (C3180 + C3220 + C3221) * C2903 +
            (C3185 + C3222 + C3223) * C154429) *
               C154082 * C340) *
              C341 +
          (((C3175 + C3174 + C3219) * C2902 + (C3169 + C3168 + C3218) * C2903 +
            (C441 * C154480 + C446 * C154468 + C3217 * C154442) * C154429) *
               C154082 * C339 -
           (C2921 * C154429 + (C2911 + C2910 + C2909) * C2903 +
            (C2908 + C2907 + C2906) * C2902) *
               C154082 * C338 -
           (((C134 * C3149 - C135 * C3142 - C134 * C3150 + C154181 * C3154) *
                 C154442 +
             C3217 * C154468 + C446 * C154480) *
                C154429 +
            (C3223 + C3222 + C3185) * C2903 + (C3221 + C3220 + C3180) * C2902) *
               C154082 * C340) *
              C154053)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C154480 +
             C3210 * C154468 + C3211 * C154442) *
                C2902 +
            (C2906 + C2907 + C2908) * C2903 + C2920 * C154429) *
               C577 -
           ((C3506 + C3462 + C3463) * C154429 +
            (C3507 + C3468 + C3469) * C2903 +
            ((C134 * C1985 - C135 * C1976 - C134 * C1986 + C154181 * C1991) *
                 C154442 +
             (C134 * C1135 - C135 * C1129 - C134 * C1136 + C154181 * C1147) *
                 C154468 +
             (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                 C154480) *
                C2902) *
               C578 +
           (((C134 * C602 - C135 * C585 - C134 * C603 + C154181 * C621) *
                 C154480 +
             (C134 * C1554 - C135 * C1545 - C134 * C1555 + C154181 * C1560) *
                 C154468 +
             (C134 * C3445 - C135 * C3441 - C134 * C3446 + C154181 * C3453) *
                 C154442) *
                C2902 +
            (C3470 + C3508 + C3509) * C2903 +
            (C3479 + C3510 + C3511) * C154429) *
               C579) *
              C154066 * C341 +
          (((C3469 + C3468 + C3507) * C2902 + (C3463 + C3462 + C3506) * C2903 +
            (C678 * C154480 + C1180 * C154468 +
             (C134 * C1979 - C135 * C1973 - C134 * C1980 + C154181 * C1988) *
                 C154442) *
                C154429) *
               C578 -
           (C2921 * C154429 + (C2911 + C2910 + C2909) * C2903 +
            (C2908 + C2907 + C2906) * C2902) *
               C577 -
           (((C134 * C3451 - C135 * C3444 - C134 * C3452 + C154181 * C3456) *
                 C154442 +
             (C134 * C1548 - C135 * C1542 - C134 * C1549 + C154181 * C1557) *
                 C154468 +
             C683 * C154480) *
                C154429 +
            (C3511 + C3510 + C3479) * C2903 + (C3509 + C3508 + C3470) * C2902) *
               C579) *
              C154066 * C154053)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                C24270 +
            C3210 * C24271 + C3211 * C154442) *
               C154477 +
           (C24277 + C24278 + C24279) * C154458 + C24291 * C154429) *
              C154082 * C154066 * C130 -
          (C24292 * C154429 + (C24282 + C24281 + C24280) * C154458 +
           (C24279 + C24278 + C24277) * C154477) *
              C154082 * C154066 * C131 +
          (C24291 * C154477 + (C24285 + C24284 + C24283) * C154458 +
           (C24286 + C24287 + C24288) * C154429) *
              C154082 * C154066 * C132 -
          (((C134 * C377 - C135 * C354 - C134 * C378 + C154181 * C390) *
                C154442 +
            C830 * C24271 + C209 * C24270) *
               C154429 +
           (C24288 + C24287 + C24286) * C154458 + C24292 * C154477) *
              C154082 * C154066 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C24270 +
             C3210 * C24271 + C3211 * C154442) *
                C154477 +
            (C24277 + C24278 + C24279) * C154458 + C24291 * C154429) *
               C154082 * C338 -
           ((C24511 + C24512 + C24513) * C154429 +
            (C24514 + C24515 + C24516) * C154458 +
            (C3214 * C154442 + C3211 * C24271 + C3210 * C24270) * C154477) *
               C154082 * C339 +
           ((C3211 * C24270 + C3214 * C24271 + C4687 * C154442) * C154477 +
            (C24517 + C24518 + C24519) * C154458 +
            (C24520 + C24521 + C24522) * C154429) *
               C154082 * C340) *
              C341 +
          (((C24516 + C24515 + C24514) * C154477 +
            (C24513 + C24512 + C24511) * C154458 +
            (C441 * C24270 + C446 * C24271 + C3217 * C154442) * C154429) *
               C154082 * C339 -
           (C24292 * C154429 + (C24282 + C24281 + C24280) * C154458 +
            (C24279 + C24278 + C24277) * C154477) *
               C154082 * C338 -
           (((C134 * C3149 - C135 * C3142 - C134 * C3150 + C154181 * C3154) *
                 C154442 +
             C3217 * C24271 + C446 * C24270) *
                C154429 +
            (C24522 + C24521 + C24520) * C154458 +
            (C24519 + C24518 + C24517) * C154477) *
               C154082 * C340) *
              C154053)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C24270 +
             C3210 * C24271 + C3211 * C154442) *
                C154477 +
            (C24277 + C24278 + C24279) * C154458 + C24291 * C154429) *
               C577 -
           ((C24741 + C24742 + C24743) * C154429 +
            (C24744 + C24745 + C24746) * C154458 +
            (C4299 * C154442 + C4300 * C24271 +
             (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                 C24270) *
                C154477) *
               C578 +
           (((C134 * C602 - C135 * C585 - C134 * C603 + C154181 * C621) *
                 C24270 +
             C4930 * C24271 + C4931 * C154442) *
                C154477 +
            (C24747 + C24748 + C24749) * C154458 +
            (C24750 + C24751 + C24752) * C154429) *
               C579) *
              C154066 * C341 +
          (((C24746 + C24745 + C24744) * C154477 +
            (C24743 + C24742 + C24741) * C154458 +
            (C678 * C24270 + C1180 * C24271 + C3963 * C154442) * C154429) *
               C578 -
           (C24292 * C154429 + (C24282 + C24281 + C24280) * C154458 +
            (C24279 + C24278 + C24277) * C154477) *
               C577 -
           (((C134 * C3451 - C135 * C3444 - C134 * C3452 + C154181 * C3456) *
                 C154442 +
             C11901 * C24271 + C683 * C24270) *
                C154429 +
            (C24752 + C24751 + C24750) * C154458 +
            (C24749 + C24748 + C24747) * C154477) *
               C579) *
              C154066 * C154053)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) * C28192 +
           C3210 * C28193 + C3211 * C28194 + C3214 * C28195 + C4687 * C28196) *
              C154011 * C154082 * C154066 * C130 -
          (C3215 * C28196 + C3213 * C28195 + C444 * C28194 + C443 * C28193 +
           C205 * C28192) *
              C154011 * C154082 * C154066 * C131 +
          (C206 * C28192 + C442 * C28193 + C445 * C28194 + C3212 * C28195 +
           C3216 * C28196) *
              C154011 * C154082 * C154066 * C132 -
          ((C134 * C3149 - C135 * C3142 - C134 * C3150 + C154181 * C3154) *
               C28196 +
           C3217 * C28195 + C446 * C28194 + C441 * C28193 + C207 * C28192) *
              C154011 * C154082 * C154066 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                C28192 +
            C3210 * C28193 + C3211 * C28194 + C3214 * C28195 + C4687 * C28196) *
               C154011 * C154082 * C338 -
           (C28341 * C28196 + C4687 * C28195 + C3214 * C28194 + C3211 * C28193 +
            C3210 * C28192) *
               C154011 * C154082 * C339 +
           (C3211 * C28192 + C3214 * C28193 + C4687 * C28194 + C28341 * C28195 +
            (C134 * C28322 - C135 * C28320 - C134 * C28323 + C154181 * C28326) *
                C28196) *
               C154011 * C154082 * C340) *
              C341 +
          ((C443 * C28192 + C444 * C28193 + C3213 * C28194 + C3215 * C28195 +
            C28342 * C28196) *
               C154011 * C154082 * C339 -
           (C3215 * C28196 + C3213 * C28195 + C444 * C28194 + C443 * C28193 +
            C205 * C28192) *
               C154011 * C154082 * C338 -
           ((C134 * C28324 - C135 * C28321 - C134 * C28325 + C154181 * C28327) *
                C28196 +
            C28342 * C28195 + C3215 * C28194 + C3213 * C28193 + C444 * C28192) *
               C154011 * C154082 * C340) *
              C154053)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                C28192 +
            C3210 * C28193 + C3211 * C28194 + C3214 * C28195 + C4687 * C28196) *
               C154011 * C577 -
           ((C134 * C5664 - C135 * C5659 - C134 * C5665 + C154181 * C5668) *
                C28196 +
            C5676 * C28195 + C4299 * C28194 + C4300 * C28193 +
            (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                C28192) *
               C154011 * C578 +
           ((C134 * C602 - C135 * C585 - C134 * C603 + C154181 * C621) *
                C28192 +
            C4930 * C28193 + C4931 * C28194 +
            (C134 * C4912 - C135 * C4907 - C134 * C4913 + C154181 * C4916) *
                C28195 +
            (C134 * C28466 - C135 * C28464 - C134 * C28467 + C154181 * C28470) *
                C28196) *
               C154011 * C579) *
              C154066 * C341 +
          ((C680 * C28192 + C1178 * C28193 + C3501 * C28194 + C4301 * C28195 +
            (C134 * C5662 - C135 * C5658 - C134 * C5663 + C154181 * C5667) *
                C28196) *
               C154011 * C578 -
           (C3215 * C28196 + C3213 * C28195 + C444 * C28194 + C443 * C28193 +
            C205 * C28192) *
               C154011 * C577 -
           ((C134 * C28468 - C135 * C28465 - C134 * C28469 + C154181 * C28471) *
                C28196 +
            (C134 * C4910 - C135 * C4906 - C134 * C4911 + C154181 * C4915) *
                C28195 +
            C3503 * C28194 + C3502 * C28193 + C681 * C28192) *
               C154011 * C579) *
              C154066 * C154053)) /
            (p * q * std::sqrt(p + q));
    d2ee[363] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                C154164 * C123 +
            C211 * C124 + C212 * C125 + C213 * C126 + C214 * C127) *
               C154393 -
           (C685 * C127 + C686 * C126 + C687 * C125 + C688 * C124 +
            (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                C154164 * C123) *
               C154146) *
              C154066 * C154461 +
          ((C688 * C123 + C687 * C124 + C686 * C125 + C685 * C126 +
            C967 * C127) *
               C154146 -
           (C215 * C127 + C214 * C126 + C213 * C125 + C212 * C124 +
            C211 * C123) *
               C154393) *
              C154066 * C154462 +
          ((C212 * C123 + C213 * C124 + C214 * C125 + C215 * C126 +
            C216 * C127) *
               C154393 -
           ((C134 * C956 - C135 * C955 - C134 * C957 + C154181 * C958) *
                C154164 * C127 +
            C967 * C126 + C685 * C125 + C686 * C124 + C687 * C123) *
               C154146) *
              C154066 * C818)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C154480 +
             C3210 * C154468 + C3211 * C154442) *
                C2902 +
            (C2906 + C2907 + C2908) * C2903 + C2920 * C154429) *
               C154393 -
           (C3960 * C154429 + (C3507 + C3468 + C3469) * C2903 +
            ((C134 * C1985 - C135 * C1976 - C134 * C1986 + C154181 * C1991) *
                 C154442 +
             (C134 * C1135 - C135 * C1129 - C134 * C1136 + C154181 * C1147) *
                 C154468 +
             (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                 C154480) *
                C2902) *
               C154146) *
              C154066 * C154461 +
          (((C3469 + C3468 + C3507) * C2902 + (C3463 + C3462 + C3506) * C2903 +
            (C3954 + C3955 + C3964) * C154429) *
               C154146 -
           (C2921 * C154429 + (C2911 + C2910 + C2909) * C2903 +
            (C2908 + C2907 + C2906) * C2902) *
               C154393) *
              C154066 * C154462 +
          ((C2920 * C2902 + (C2914 + C2913 + C2912) * C2903 +
            (C2915 + C2916 + C2917) * C154429) *
               C154393 -
           (((C134 * C1977 - C135 * C1972 - C134 * C1978 + C154181 * C1987) *
                 C154442 +
             C1181 * C154468 + C677 * C154480) *
                C154429 +
            (C3964 + C3955 + C3954) * C2903 + C3960 * C2902) *
               C154146) *
              C154066 * C818)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C24270 +
             C3210 * C24271 + C3211 * C154442) *
                C154477 +
            (C24277 + C24278 + C24279) * C154458 + C24291 * C154429) *
               C154393 -
           (C25198 * C154429 + (C24744 + C24745 + C24746) * C154458 +
            (C4299 * C154442 + C4300 * C24271 +
             (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                 C24270) *
                C154477) *
               C154146) *
              C154066 * C154461 +
          (((C24746 + C24745 + C24744) * C154477 +
            (C24743 + C24742 + C24741) * C154458 +
            (C25195 + C25196 + C25197) * C154429) *
               C154146 -
           (C24292 * C154429 + (C24282 + C24281 + C24280) * C154458 +
            (C24279 + C24278 + C24277) * C154477) *
               C154393) *
              C154066 * C154462 +
          ((C24291 * C154477 + (C24285 + C24284 + C24283) * C154458 +
            (C24286 + C24287 + C24288) * C154429) *
               C154393 -
           (((C134 * C1977 - C135 * C1972 - C134 * C1978 + C154181 * C1987) *
                 C154442 +
             C1181 * C24271 + C677 * C24270) *
                C154429 +
            (C25197 + C25196 + C25195) * C154458 + C25198 * C154477) *
               C154146) *
              C154066 * C818)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                C28192 +
            C3210 * C28193 + C3211 * C28194 + C3214 * C28195 + C4687 * C28196) *
               C154011 * C154393 -
           ((C134 * C5664 - C135 * C5659 - C134 * C5665 + C154181 * C5668) *
                C28196 +
            C5676 * C28195 + C4299 * C28194 + C4300 * C28193 +
            (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                C28192) *
               C154011 * C154146) *
              C154066 * C154461 +
          ((C680 * C28192 + C1178 * C28193 + C3501 * C28194 + C4301 * C28195 +
            (C134 * C5662 - C135 * C5658 - C134 * C5663 + C154181 * C5667) *
                C28196) *
               C154011 * C154146 -
           (C3215 * C28196 + C3213 * C28195 + C444 * C28194 + C443 * C28193 +
            C205 * C28192) *
               C154011 * C154393) *
              C154066 * C154462 +
          ((C206 * C28192 + C442 * C28193 + C445 * C28194 + C3212 * C28195 +
            C3216 * C28196) *
               C154011 * C154393 -
           ((C134 * C5660 - C135 * C5657 - C134 * C5661 + C154181 * C5666) *
                C28196 +
            C4302 * C28195 + C3500 * C28194 + C1179 * C28193 + C679 * C28192) *
               C154011 * C154146) *
              C154066 * C818)) /
            (p * q * std::sqrt(p + q));
    d2ee[364] +=
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
               C154164 * C123 +
           C211 * C124 + C212 * C125 + C213 * C126 + C214 * C127) *
              C154082 * C154066 * C130 -
          (C215 * C127 + C214 * C126 + C213 * C125 + C212 * C124 +
           C211 * C123) *
              C154082 * C154066 * C131 +
          (C212 * C123 + C213 * C124 + C214 * C125 + C215 * C126 +
           C216 * C127) *
              C154082 * C154066 * C132 -
          ((C134 * C158 - C135 * C143 - C134 * C159 + C154181 * C167) *
               C154164 * C127 +
           C216 * C126 + C215 * C125 + C214 * C124 + C213 * C123) *
              C154082 * C154066 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                C154164 * C123 +
            C211 * C124 + C212 * C125 + C213 * C126 + C214 * C127) *
               C154082 * C338 -
           (C448 * C127 + C449 * C126 + C450 * C125 + C451 * C124 +
            (C134 * C363 - C135 * C347 - C134 * C364 + C154181 * C383) *
                C154164 * C123) *
               C154082 * C339 +
           ((C134 * C365 - C135 * C348 - C134 * C366 + C154181 * C384) *
                C154164 * C123 +
            C452 * C124 + C453 * C125 + C454 * C126 + C455 * C127) *
               C154082 * C340) *
              C341 +
          ((C451 * C123 + C450 * C124 + C449 * C125 + C448 * C126 +
            (C134 * C375 - C135 * C353 - C134 * C376 + C154181 * C389) *
                C154164 * C127) *
               C154082 * C339 -
           (C215 * C127 + C214 * C126 + C213 * C125 + C212 * C124 +
            C211 * C123) *
               C154082 * C338 -
           ((C134 * C377 - C135 * C354 - C134 * C378 + C154181 * C390) *
                C154164 * C127 +
            C455 * C126 + C454 * C125 + C453 * C124 + C452 * C123) *
               C154082 * C340) *
              C154053)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                C154480 +
            (C134 * C363 - C135 * C347 - C134 * C364 + C154181 * C383) *
                C154468 +
            (C134 * C365 - C135 * C348 - C134 * C366 + C154181 * C384) *
                C154442) *
               C2902 +
           (C2906 + C2907 + C2908) * C2903 + C2920 * C154429) *
              C154082 * C154066 * C130 -
          (C2921 * C154429 + (C2911 + C2910 + C2909) * C2903 +
           (C2908 + C2907 + C2906) * C2902) *
              C154082 * C154066 * C131 +
          (C2920 * C2902 + (C2914 + C2913 + C2912) * C2903 +
           (C2915 + C2916 + C2917) * C154429) *
              C154082 * C154066 * C132 -
          (((C134 * C377 - C135 * C354 - C134 * C378 + C154181 * C390) *
                C154442 +
            C830 * C154468 + C209 * C154480) *
               C154429 +
           (C2917 + C2916 + C2915) * C2903 + C2921 * C2902) *
              C154082 * C154066 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C154480 +
             C3210 * C154468 + C3211 * C154442) *
                C2902 +
            (C2906 + C2907 + C2908) * C2903 + C2920 * C154429) *
               C154082 * C338 -
           ((C3218 + C3168 + C3169) * C154429 +
            (C3219 + C3174 + C3175) * C2903 +
            (C3214 * C154442 + C3211 * C154468 + C3210 * C154480) * C2902) *
               C154082 * C339 +
           ((C3211 * C154480 + C3214 * C154468 +
             (C134 * C3143 - C135 * C3139 - C134 * C3144 + C154181 * C3151) *
                 C154442) *
                C2902 +
            (C3180 + C3220 + C3221) * C2903 +
            (C3185 + C3222 + C3223) * C154429) *
               C154082 * C340) *
              C341 +
          (((C3175 + C3174 + C3219) * C2902 + (C3169 + C3168 + C3218) * C2903 +
            (C441 * C154480 + C446 * C154468 + C3217 * C154442) * C154429) *
               C154082 * C339 -
           (C2921 * C154429 + (C2911 + C2910 + C2909) * C2903 +
            (C2908 + C2907 + C2906) * C2902) *
               C154082 * C338 -
           (((C134 * C3149 - C135 * C3142 - C134 * C3150 + C154181 * C3154) *
                 C154442 +
             C3217 * C154468 + C446 * C154480) *
                C154429 +
            (C3223 + C3222 + C3185) * C2903 + (C3221 + C3220 + C3180) * C2902) *
               C154082 * C340) *
              C154053)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                C24270 +
            C3210 * C24271 + C3211 * C154442) *
               C154477 +
           (C24277 + C24278 + C24279) * C154458 + C24291 * C154429) *
              C154082 * C154066 * C130 -
          (C24292 * C154429 + (C24282 + C24281 + C24280) * C154458 +
           (C24279 + C24278 + C24277) * C154477) *
              C154082 * C154066 * C131 +
          (C24291 * C154477 + (C24285 + C24284 + C24283) * C154458 +
           (C24286 + C24287 + C24288) * C154429) *
              C154082 * C154066 * C132 -
          (((C134 * C377 - C135 * C354 - C134 * C378 + C154181 * C390) *
                C154442 +
            C830 * C24271 + C209 * C24270) *
               C154429 +
           (C24288 + C24287 + C24286) * C154458 + C24292 * C154477) *
              C154082 * C154066 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C24270 +
             C3210 * C24271 + C3211 * C154442) *
                C154477 +
            (C24277 + C24278 + C24279) * C154458 + C24291 * C154429) *
               C154082 * C338 -
           ((C24511 + C24512 + C24513) * C154429 +
            (C24514 + C24515 + C24516) * C154458 +
            (C3214 * C154442 + C3211 * C24271 + C3210 * C24270) * C154477) *
               C154082 * C339 +
           ((C3211 * C24270 + C3214 * C24271 + C4687 * C154442) * C154477 +
            (C24517 + C24518 + C24519) * C154458 +
            (C24520 + C24521 + C24522) * C154429) *
               C154082 * C340) *
              C341 +
          (((C24516 + C24515 + C24514) * C154477 +
            (C24513 + C24512 + C24511) * C154458 +
            (C441 * C24270 + C446 * C24271 + C3217 * C154442) * C154429) *
               C154082 * C339 -
           (C24292 * C154429 + (C24282 + C24281 + C24280) * C154458 +
            (C24279 + C24278 + C24277) * C154477) *
               C154082 * C338 -
           (((C134 * C3149 - C135 * C3142 - C134 * C3150 + C154181 * C3154) *
                 C154442 +
             C3217 * C24271 + C446 * C24270) *
                C154429 +
            (C24522 + C24521 + C24520) * C154458 +
            (C24519 + C24518 + C24517) * C154477) *
               C154082 * C340) *
              C154053)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) * C28192 +
           C3210 * C28193 + C3211 * C28194 + C3214 * C28195 + C4687 * C28196) *
              C154011 * C154082 * C154066 * C130 -
          (C3215 * C28196 + C3213 * C28195 + C444 * C28194 + C443 * C28193 +
           C205 * C28192) *
              C154011 * C154082 * C154066 * C131 +
          (C206 * C28192 + C442 * C28193 + C445 * C28194 + C3212 * C28195 +
           C3216 * C28196) *
              C154011 * C154082 * C154066 * C132 -
          ((C134 * C3149 - C135 * C3142 - C134 * C3150 + C154181 * C3154) *
               C28196 +
           C3217 * C28195 + C446 * C28194 + C441 * C28193 + C207 * C28192) *
              C154011 * C154082 * C154066 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                C28192 +
            C3210 * C28193 + C3211 * C28194 + C3214 * C28195 + C4687 * C28196) *
               C154011 * C154082 * C338 -
           (C28341 * C28196 + C4687 * C28195 + C3214 * C28194 + C3211 * C28193 +
            C3210 * C28192) *
               C154011 * C154082 * C339 +
           (C3211 * C28192 + C3214 * C28193 + C4687 * C28194 + C28341 * C28195 +
            (C134 * C28322 - C135 * C28320 - C134 * C28323 + C154181 * C28326) *
                C28196) *
               C154011 * C154082 * C340) *
              C341 +
          ((C443 * C28192 + C444 * C28193 + C3213 * C28194 + C3215 * C28195 +
            C28342 * C28196) *
               C154011 * C154082 * C339 -
           (C3215 * C28196 + C3213 * C28195 + C444 * C28194 + C443 * C28193 +
            C205 * C28192) *
               C154011 * C154082 * C338 -
           ((C134 * C28324 - C135 * C28321 - C134 * C28325 + C154181 * C28327) *
                C28196 +
            C28342 * C28195 + C3215 * C28194 + C3213 * C28193 + C444 * C28192) *
               C154011 * C154082 * C340) *
              C154053)) /
            (p * q * std::sqrt(p + q));
    d2ee[365] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                C154164 * C123 +
            C211 * C124 + C212 * C125 + C213 * C126 + C214 * C127) *
               C154082 * C154463 -
           (C448 * C127 + C449 * C126 + C450 * C125 + C451 * C124 +
            (C134 * C363 - C135 * C347 - C134 * C364 + C154181 * C383) *
                C154164 * C123) *
               C154082 * C154464 +
           ((C134 * C365 - C135 * C348 - C134 * C366 + C154181 * C384) *
                C154164 * C123 +
            C452 * C124 + C453 * C125 + C454 * C126 + C455 * C127) *
               C154082 * C1685) *
              C154384 +
          ((C451 * C123 + C450 * C124 + C449 * C125 + C448 * C126 +
            C831 * C127) *
               C154082 * C154464 -
           (C215 * C127 + C214 * C126 + C213 * C125 + C212 * C124 +
            C211 * C123) *
               C154082 * C154463 -
           ((C134 * C377 - C135 * C354 - C134 * C378 + C154181 * C390) *
                C154164 * C127 +
            C455 * C126 + C454 * C125 + C453 * C124 + C452 * C123) *
               C154082 * C1685) *
              C154053)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C154480 +
             C3210 * C154468 + C3211 * C154442) *
                C2902 +
            (C2906 + C2907 + C2908) * C2903 + C2920 * C154429) *
               C154082 * C154463 -
           (C3734 * C154429 + (C3219 + C3174 + C3175) * C2903 +
            (C3214 * C154442 + C3211 * C154468 + C3210 * C154480) * C2902) *
               C154082 * C154464 +
           ((C3211 * C154480 + C3214 * C154468 + C4687 * C154442) * C2902 +
            (C3180 + C3220 + C3221) * C2903 +
            (C3185 + C3222 + C3223) * C154429) *
               C154082 * C1685) *
              C154384 +
          (((C3175 + C3174 + C3219) * C2902 + (C3169 + C3168 + C3218) * C2903 +
            (C3731 + C3732 + C3733) * C154429) *
               C154082 * C154464 -
           (C2921 * C154429 + (C2911 + C2910 + C2909) * C2903 +
            (C2908 + C2907 + C2906) * C2902) *
               C154082 * C154463 -
           (((C134 * C3149 - C135 * C3142 - C134 * C3150 + C154181 * C3154) *
                 C154442 +
             C3217 * C154468 + C446 * C154480) *
                C154429 +
            (C3223 + C3222 + C3185) * C2903 + (C3221 + C3220 + C3180) * C2902) *
               C154082 * C1685) *
              C154053)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C24270 +
             C3210 * C24271 + C3211 * C154442) *
                C154477 +
            (C24277 + C24278 + C24279) * C154458 + C24291 * C154429) *
               C154082 * C154463 -
           (C24975 * C154429 + (C24514 + C24515 + C24516) * C154458 +
            (C3214 * C154442 + C3211 * C24271 + C3210 * C24270) * C154477) *
               C154082 * C154464 +
           ((C3211 * C24270 + C3214 * C24271 + C4687 * C154442) * C154477 +
            (C24517 + C24518 + C24519) * C154458 +
            (C24520 + C24521 + C24522) * C154429) *
               C154082 * C1685) *
              C154384 +
          (((C24516 + C24515 + C24514) * C154477 +
            (C24513 + C24512 + C24511) * C154458 +
            (C24972 + C24973 + C24974) * C154429) *
               C154082 * C154464 -
           (C24292 * C154429 + (C24282 + C24281 + C24280) * C154458 +
            (C24279 + C24278 + C24277) * C154477) *
               C154082 * C154463 -
           (((C134 * C3149 - C135 * C3142 - C134 * C3150 + C154181 * C3154) *
                 C154442 +
             C3217 * C24271 + C446 * C24270) *
                C154429 +
            (C24522 + C24521 + C24520) * C154458 +
            (C24519 + C24518 + C24517) * C154477) *
               C154082 * C1685) *
              C154053)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                C28192 +
            C3210 * C28193 + C3211 * C28194 + C3214 * C28195 + C4687 * C28196) *
               C154011 * C154082 * C154463 -
           (C28341 * C28196 + C4687 * C28195 + C3214 * C28194 + C3211 * C28193 +
            C3210 * C28192) *
               C154011 * C154082 * C154464 +
           (C3211 * C28192 + C3214 * C28193 + C4687 * C28194 + C28341 * C28195 +
            C29115 * C28196) *
               C154011 * C154082 * C1685) *
              C154384 +
          ((C443 * C28192 + C444 * C28193 + C3213 * C28194 + C3215 * C28195 +
            C28342 * C28196) *
               C154011 * C154082 * C154464 -
           (C3215 * C28196 + C3213 * C28195 + C444 * C28194 + C443 * C28193 +
            C205 * C28192) *
               C154011 * C154082 * C154463 -
           ((C134 * C28324 - C135 * C28321 - C134 * C28325 + C154181 * C28327) *
                C28196 +
            C28342 * C28195 + C3215 * C28194 + C3213 * C28193 + C444 * C28192) *
               C154011 * C154082 * C1685) *
              C154053)) /
            (p * q * std::sqrt(p + q));
    d2ee[366] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                C154164 * C123 +
            C211 * C124 + C212 * C125 + C213 * C126 + C214 * C127) *
               C154393 -
           (C685 * C127 + C686 * C126 + C687 * C125 + C688 * C124 +
            (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                C154164 * C123) *
               C154146) *
              C154463 +
          (((C134 * C1135 - C135 * C1129 - C134 * C1136 + C154181 * C1147) *
                C154164 * C123 +
            C1182 * C124 + C1183 * C125 + C1184 * C126 + C1185 * C127) *
               C154146 -
           (C448 * C127 + C449 * C126 + C450 * C125 + C451 * C124 +
            (C134 * C363 - C135 * C347 - C134 * C364 + C154181 * C383) *
                C154164 * C123) *
               C154393) *
              C154464 +
          (((C134 * C365 - C135 * C348 - C134 * C366 + C154181 * C384) *
                C154164 * C123 +
            C452 * C124 + C453 * C125 + C454 * C126 + C455 * C127) *
               C154393 -
           ((C134 * C1977 - C135 * C1972 - C134 * C1978 + C154181 * C1987) *
                C154164 * C127 +
            (C134 * C1979 - C135 * C1973 - C134 * C1980 + C154181 * C1988) *
                C154164 * C126 +
            (C134 * C1981 - C135 * C1974 - C134 * C1982 + C154181 * C1989) *
                C154164 * C125 +
            (C134 * C1983 - C135 * C1975 - C134 * C1984 + C154181 * C1990) *
                C154164 * C124 +
            (C134 * C1985 - C135 * C1976 - C134 * C1986 + C154181 * C1991) *
                C154164 * C123) *
               C154146) *
              C1685) *
         C154047) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C154480 +
             C3210 * C154468 + C3211 * C154442) *
                C2902 +
            (C2906 + C2907 + C2908) * C2903 + C2920 * C154429) *
               C154393 -
           (C3960 * C154429 + (C3507 + C3468 + C3469) * C2903 +
            (C4299 * C154442 + C4300 * C154468 +
             (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                 C154480) *
                C2902) *
               C154146) *
              C154463 +
          (((C4300 * C154480 + C4299 * C154468 + C5676 * C154442) * C2902 +
            (C4279 + C4280 + C4303) * C2903 +
            (C4285 + C4286 + C4304) * C154429) *
               C154146 -
           (C3734 * C154429 + (C3219 + C3174 + C3175) * C2903 +
            (C3214 * C154442 + C3211 * C154468 + C3210 * C154480) * C2902) *
               C154393) *
              C154464 +
          (((C3211 * C154480 + C3214 * C154468 + C4687 * C154442) * C2902 +
            (C3180 + C3220 + C3221) * C2903 +
            (C3185 + C3222 + C3223) * C154429) *
               C154393 -
           (((C134 * C5660 - C135 * C5657 - C134 * C5661 + C154181 * C5666) *
                 C154442 +
             C4302 * C154468 + C3500 * C154480) *
                C154429 +
            ((C134 * C5662 - C135 * C5658 - C134 * C5663 + C154181 * C5667) *
                 C154442 +
             C4301 * C154468 + C3501 * C154480) *
                C2903 +
            ((C134 * C5664 - C135 * C5659 - C134 * C5665 + C154181 * C5668) *
                 C154442 +
             C5676 * C154468 + C4299 * C154480) *
                C2902) *
               C154146) *
              C1685) *
         C154047) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C24270 +
             C3210 * C24271 + C3211 * C154442) *
                C154477 +
            (C24277 + C24278 + C24279) * C154458 + C24291 * C154429) *
               C154393 -
           (C25198 * C154429 + (C24744 + C24745 + C24746) * C154458 +
            (C4299 * C154442 + C4300 * C24271 +
             (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                 C24270) *
                C154477) *
               C154146) *
              C154463 +
          (((C4300 * C24270 + C4299 * C24271 + C5676 * C154442) * C154477 +
            (C25489 + C25490 + C25491) * C154458 +
            (C25492 + C25493 + C25494) * C154429) *
               C154146 -
           (C24975 * C154429 + (C24514 + C24515 + C24516) * C154458 +
            (C3214 * C154442 + C3211 * C24271 + C3210 * C24270) * C154477) *
               C154393) *
              C154464 +
          (((C3211 * C24270 + C3214 * C24271 + C4687 * C154442) * C154477 +
            (C24517 + C24518 + C24519) * C154458 +
            (C24520 + C24521 + C24522) * C154429) *
               C154393 -
           (((C134 * C5660 - C135 * C5657 - C134 * C5661 + C154181 * C5666) *
                 C154442 +
             C4302 * C24271 + C3500 * C24270) *
                C154429 +
            ((C134 * C5662 - C135 * C5658 - C134 * C5663 + C154181 * C5667) *
                 C154442 +
             C4301 * C24271 + C3501 * C24270) *
                C154458 +
            ((C134 * C5664 - C135 * C5659 - C134 * C5665 + C154181 * C5668) *
                 C154442 +
             C5676 * C24271 + C4299 * C24270) *
                C154477) *
               C154146) *
              C1685) *
         C154047) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                C28192 +
            C3210 * C28193 + C3211 * C28194 + C3214 * C28195 + C4687 * C28196) *
               C154011 * C154393 -
           (C28899 * C28196 + C5676 * C28195 + C4299 * C28194 + C4300 * C28193 +
            (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                C28192) *
               C154011 * C154146) *
              C154463 +
          ((C4300 * C28192 + C4299 * C28193 + C5676 * C28194 + C28899 * C28195 +
            C29672 * C28196) *
               C154011 * C154146 -
           (C28341 * C28196 + C4687 * C28195 + C3214 * C28194 + C3211 * C28193 +
            C3210 * C28192) *
               C154011 * C154393) *
              C154464 +
          ((C3211 * C28192 + C3214 * C28193 + C4687 * C28194 + C28341 * C28195 +
            C29115 * C28196) *
               C154011 * C154393 -
           ((C134 * C29662 - C135 * C29661 - C134 * C29663 + C154181 * C29664) *
                C28196 +
            C29672 * C28195 + C28899 * C28194 + C5676 * C28193 +
            C4299 * C28192) *
               C154011 * C154146) *
              C1685) *
         C154047) /
            (p * q * std::sqrt(p + q));
    d2ee[367] +=
        (-std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
               C154164 * C123 +
           C211 * C124 + C212 * C125 + C213 * C126 + C214 * C127) *
              C154082 * C1394 -
          (C448 * C127 + C449 * C126 + C450 * C125 + C451 * C124 +
           (C134 * C363 - C135 * C347 - C134 * C364 + C154181 * C383) *
               C154164 * C123) *
              C154082 * C1395 +
          ((C134 * C365 - C135 * C348 - C134 * C366 + C154181 * C384) *
               C154164 * C123 +
           C452 * C124 + C453 * C125 + C454 * C126 + C455 * C127) *
              C154082 * C1396 -
          ((C134 * C1404 - C135 * C1399 - C134 * C1405 + C154181 * C1414) *
               C154164 * C127 +
           (C134 * C1406 - C135 * C1400 - C134 * C1407 + C154181 * C1415) *
               C154164 * C126 +
           (C134 * C1408 - C135 * C1401 - C134 * C1409 + C154181 * C1416) *
               C154164 * C125 +
           (C134 * C1410 - C135 * C1402 - C134 * C1411 + C154181 * C1417) *
               C154164 * C124 +
           (C134 * C1412 - C135 * C1403 - C134 * C1413 + C154181 * C1418) *
               C154164 * C123) *
              C154082 * C1397) *
         C154047) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                C154164 * C123 +
            C211 * C124 + C212 * C125 + C213 * C126 + C214 * C127) *
               C154082 * C1307 -
           (C448 * C127 + C449 * C126 + C450 * C125 + C451 * C124 +
            (C134 * C363 - C135 * C347 - C134 * C364 + C154181 * C383) *
                C154164 * C123) *
               C154082 * C154118) *
              C1309 +
          ((C451 * C123 + C450 * C124 + C449 * C125 + C448 * C126 +
            C831 * C127) *
               C154082 * C154118 -
           (C215 * C127 + C214 * C126 + C213 * C125 + C212 * C124 +
            C211 * C123) *
               C154082 * C1307) *
              C1310 +
          ((C212 * C123 + C213 * C124 + C214 * C125 + C215 * C126 +
            C216 * C127) *
               C154082 * C1307 -
           ((C134 * C820 - C135 * C819 - C134 * C821 + C154181 * C822) *
                C154164 * C127 +
            C831 * C126 + C448 * C125 + C449 * C124 + C450 * C123) *
               C154082 * C154118) *
              C1311)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                C154164 * C123 +
            C211 * C124 + C212 * C125 + C213 * C126 + C214 * C127) *
               C577 -
           (C685 * C127 + C686 * C126 + C687 * C125 + C688 * C124 +
            (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                C154164 * C123) *
               C578 +
           ((C134 * C602 - C135 * C585 - C134 * C603 + C154181 * C621) *
                C154164 * C123 +
            C689 * C124 + C690 * C125 + C691 * C126 + C692 * C127) *
               C579) *
              C1307 +
          (((C134 * C1135 - C135 * C1129 - C134 * C1136 + C154181 * C1147) *
                C154164 * C123 +
            C1182 * C124 + C1183 * C125 + C1184 * C126 + C1185 * C127) *
               C578 -
           (C448 * C127 + C449 * C126 + C450 * C125 + C451 * C124 +
            (C134 * C363 - C135 * C347 - C134 * C364 + C154181 * C383) *
                C154164 * C123) *
               C577 -
           ((C134 * C1546 - C135 * C1541 - C134 * C1547 + C154181 * C1556) *
                C154164 * C127 +
            (C134 * C1548 - C135 * C1542 - C134 * C1549 + C154181 * C1557) *
                C154164 * C126 +
            (C134 * C1550 - C135 * C1543 - C134 * C1551 + C154181 * C1558) *
                C154164 * C125 +
            (C134 * C1552 - C135 * C1544 - C134 * C1553 + C154181 * C1559) *
                C154164 * C124 +
            (C134 * C1554 - C135 * C1545 - C134 * C1555 + C154181 * C1560) *
                C154164 * C123) *
               C579) *
              C154118) *
         C154047) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C154480 +
             C3210 * C154468 + C3211 * C154442) *
                C2902 +
            (C2906 + C2907 + C2908) * C2903 + C2920 * C154429) *
               C154082 * C1307 -
           (C3734 * C154429 + (C3219 + C3174 + C3175) * C2903 +
            (C3214 * C154442 + C3211 * C154468 + C3210 * C154480) * C2902) *
               C154082 * C154118) *
              C1309 +
          (((C3175 + C3174 + C3219) * C2902 + (C3169 + C3168 + C3218) * C2903 +
            (C3731 + C3732 + C3733) * C154429) *
               C154082 * C154118 -
           (C2921 * C154429 + (C2911 + C2910 + C2909) * C2903 +
            (C2908 + C2907 + C2906) * C2902) *
               C154082 * C1307) *
              C1310 +
          ((C2920 * C2902 + (C2914 + C2913 + C2912) * C2903 +
            (C2915 + C2916 + C2917) * C154429) *
               C154082 * C1307 -
           (((C134 * C1404 - C135 * C1399 - C134 * C1405 + C154181 * C1414) *
                 C154442 +
             C447 * C154468 + C440 * C154480) *
                C154429 +
            (C3733 + C3732 + C3731) * C2903 + C3734 * C2902) *
               C154082 * C154118) *
              C1311)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                C154480 +
            C3210 * C154468 + C3211 * C154442) *
               C2902 +
           (C2906 + C2907 + C2908) * C2903 + C2920 * C154429) *
              C154082 * C1394 -
          (C3734 * C154429 + (C3219 + C3174 + C3175) * C2903 +
           (C3214 * C154442 + C3211 * C154468 + C3210 * C154480) * C2902) *
              C154082 * C1395 +
          ((C3211 * C154480 + C3214 * C154468 + C4687 * C154442) * C2902 +
           (C3180 + C3220 + C3221) * C2903 +
           (C3185 + C3222 + C3223) * C154429) *
              C154082 * C1396 -
          (((C134 * C4671 - C135 * C4668 - C134 * C4672 + C154181 * C4677) *
                C154442 +
            C3216 * C154468 + C3212 * C154480) *
               C154429 +
           ((C134 * C4673 - C135 * C4669 - C134 * C4674 + C154181 * C4678) *
                C154442 +
            C3215 * C154468 + C3213 * C154480) *
               C2903 +
           ((C134 * C4675 - C135 * C4670 - C134 * C4676 + C154181 * C4679) *
                C154442 +
            C4687 * C154468 + C3214 * C154480) *
               C2902) *
              C154082 * C1397) *
         C154047) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C154480 +
             C3210 * C154468 + C3211 * C154442) *
                C2902 +
            (C2906 + C2907 + C2908) * C2903 + C2920 * C154429) *
               C577 -
           (C3960 * C154429 + (C3507 + C3468 + C3469) * C2903 +
            (C4299 * C154442 + C4300 * C154468 +
             (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                 C154480) *
                C2902) *
               C578 +
           (((C134 * C602 - C135 * C585 - C134 * C603 + C154181 * C621) *
                 C154480 +
             C4930 * C154468 + C4931 * C154442) *
                C2902 +
            (C3470 + C3508 + C3509) * C2903 +
            (C3479 + C3510 + C3511) * C154429) *
               C579) *
              C1307 +
          (((C4300 * C154480 + C4299 * C154468 +
             (C134 * C4258 - C135 * C4254 - C134 * C4259 + C154181 * C4266) *
                 C154442) *
                C2902 +
            (C4279 + C4280 + C4303) * C2903 +
            (C4285 + C4286 + C4304) * C154429) *
               C578 -
           (C3734 * C154429 + (C3219 + C3174 + C3175) * C2903 +
            (C3214 * C154442 + C3211 * C154468 + C3210 * C154480) * C2902) *
               C577 -
           (((C134 * C4908 - C135 * C4905 - C134 * C4909 + C154181 * C4914) *
                 C154442 +
             C3505 * C154468 + C3504 * C154480) *
                C154429 +
            ((C134 * C4910 - C135 * C4906 - C134 * C4911 + C154181 * C4915) *
                 C154442 +
             C3503 * C154468 + C3502 * C154480) *
                C2903 +
            ((C134 * C4912 - C135 * C4907 - C134 * C4913 + C154181 * C4916) *
                 C154442 +
             C4931 * C154468 + C4930 * C154480) *
                C2902) *
               C579) *
              C154118) *
         C154047) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C24270 +
             C3210 * C24271 + C3211 * C154442) *
                C154477 +
            (C24277 + C24278 + C24279) * C154458 + C24291 * C154429) *
               C154082 * C1307 -
           (C24975 * C154429 + (C24514 + C24515 + C24516) * C154458 +
            (C3214 * C154442 + C3211 * C24271 + C3210 * C24270) * C154477) *
               C154082 * C154118) *
              C1309 +
          (((C24516 + C24515 + C24514) * C154477 +
            (C24513 + C24512 + C24511) * C154458 +
            (C24972 + C24973 + C24974) * C154429) *
               C154082 * C154118 -
           (C24292 * C154429 + (C24282 + C24281 + C24280) * C154458 +
            (C24279 + C24278 + C24277) * C154477) *
               C154082 * C1307) *
              C1310 +
          ((C24291 * C154477 + (C24285 + C24284 + C24283) * C154458 +
            (C24286 + C24287 + C24288) * C154429) *
               C154082 * C1307 -
           (((C134 * C1404 - C135 * C1399 - C134 * C1405 + C154181 * C1414) *
                 C154442 +
             C447 * C24271 + C440 * C24270) *
                C154429 +
            (C24974 + C24973 + C24972) * C154458 + C24975 * C154477) *
               C154082 * C154118) *
              C1311)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                C24270 +
            C3210 * C24271 + C3211 * C154442) *
               C154477 +
           (C24277 + C24278 + C24279) * C154458 + C24291 * C154429) *
              C154082 * C1394 -
          (C24975 * C154429 + (C24514 + C24515 + C24516) * C154458 +
           (C3214 * C154442 + C3211 * C24271 + C3210 * C24270) * C154477) *
              C154082 * C1395 +
          ((C3211 * C24270 + C3214 * C24271 + C4687 * C154442) * C154477 +
           (C24517 + C24518 + C24519) * C154458 +
           (C24520 + C24521 + C24522) * C154429) *
              C154082 * C1396 -
          (((C134 * C4671 - C135 * C4668 - C134 * C4672 + C154181 * C4677) *
                C154442 +
            C3216 * C24271 + C3212 * C24270) *
               C154429 +
           ((C134 * C4673 - C135 * C4669 - C134 * C4674 + C154181 * C4678) *
                C154442 +
            C3215 * C24271 + C3213 * C24270) *
               C154458 +
           ((C134 * C4675 - C135 * C4670 - C134 * C4676 + C154181 * C4679) *
                C154442 +
            C4687 * C24271 + C3214 * C24270) *
               C154477) *
              C154082 * C1397) *
         C154047) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C24270 +
             C3210 * C24271 + C3211 * C154442) *
                C154477 +
            (C24277 + C24278 + C24279) * C154458 + C24291 * C154429) *
               C577 -
           (C25198 * C154429 + (C24744 + C24745 + C24746) * C154458 +
            (C4299 * C154442 + C4300 * C24271 +
             (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                 C24270) *
                C154477) *
               C578 +
           (((C134 * C602 - C135 * C585 - C134 * C603 + C154181 * C621) *
                 C24270 +
             C4930 * C24271 + C4931 * C154442) *
                C154477 +
            (C24747 + C24748 + C24749) * C154458 +
            (C24750 + C24751 + C24752) * C154429) *
               C579) *
              C1307 +
          (((C4300 * C24270 + C4299 * C24271 + C5676 * C154442) * C154477 +
            (C25489 + C25490 + C25491) * C154458 +
            (C25492 + C25493 + C25494) * C154429) *
               C578 -
           (C24975 * C154429 + (C24514 + C24515 + C24516) * C154458 +
            (C3214 * C154442 + C3211 * C24271 + C3210 * C24270) * C154477) *
               C577 -
           (((C134 * C4908 - C135 * C4905 - C134 * C4909 + C154181 * C4914) *
                 C154442 +
             C3505 * C24271 + C3504 * C24270) *
                C154429 +
            ((C134 * C4910 - C135 * C4906 - C134 * C4911 + C154181 * C4915) *
                 C154442 +
             C3503 * C24271 + C3502 * C24270) *
                C154458 +
            ((C134 * C4912 - C135 * C4907 - C134 * C4913 + C154181 * C4916) *
                 C154442 +
             C4931 * C24271 + C4930 * C24270) *
                C154477) *
               C579) *
              C154118) *
         C154047) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                C28192 +
            C3210 * C28193 + C3211 * C28194 + C3214 * C28195 + C4687 * C28196) *
               C154011 * C154082 * C1307 -
           (C28341 * C28196 + C4687 * C28195 + C3214 * C28194 + C3211 * C28193 +
            C3210 * C28192) *
               C154011 * C154082 * C154118) *
              C1309 +
          ((C443 * C28192 + C444 * C28193 + C3213 * C28194 + C3215 * C28195 +
            C28342 * C28196) *
               C154011 * C154082 * C154118 -
           (C3215 * C28196 + C3213 * C28195 + C444 * C28194 + C443 * C28193 +
            C205 * C28192) *
               C154011 * C154082 * C1307) *
              C1310 +
          ((C206 * C28192 + C442 * C28193 + C445 * C28194 + C3212 * C28195 +
            C3216 * C28196) *
               C154011 * C154082 * C1307 -
           ((C134 * C4671 - C135 * C4668 - C134 * C4672 + C154181 * C4677) *
                C28196 +
            C3216 * C28195 + C3212 * C28194 + C445 * C28193 + C442 * C28192) *
               C154011 * C154082 * C154118) *
              C1311)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) * C28192 +
           C3210 * C28193 + C3211 * C28194 + C3214 * C28195 + C4687 * C28196) *
              C154011 * C154082 * C1394 -
          (C28341 * C28196 + C4687 * C28195 + C3214 * C28194 + C3211 * C28193 +
           C3210 * C28192) *
              C154011 * C154082 * C1395 +
          (C3211 * C28192 + C3214 * C28193 + C4687 * C28194 + C28341 * C28195 +
           C29115 * C28196) *
              C154011 * C154082 * C1396 -
          ((C134 * C29105 - C135 * C29104 - C134 * C29106 + C154181 * C29107) *
               C28196 +
           C29115 * C28195 + C28341 * C28194 + C4687 * C28193 +
           C3214 * C28192) *
              C154011 * C154082 * C1397) *
         C154047) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                C28192 +
            C3210 * C28193 + C3211 * C28194 + C3214 * C28195 + C4687 * C28196) *
               C154011 * C577 -
           (C28899 * C28196 + C5676 * C28195 + C4299 * C28194 + C4300 * C28193 +
            (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                C28192) *
               C154011 * C578 +
           ((C134 * C602 - C135 * C585 - C134 * C603 + C154181 * C621) *
                C28192 +
            C4930 * C28193 + C4931 * C28194 + C29254 * C28195 +
            C29255 * C28196) *
               C154011 * C579) *
              C1307 +
          ((C4300 * C28192 + C4299 * C28193 + C5676 * C28194 + C28899 * C28195 +
            (C134 * C28880 - C135 * C28878 - C134 * C28881 + C154181 * C28884) *
                C28196) *
               C154011 * C578 -
           (C28341 * C28196 + C4687 * C28195 + C3214 * C28194 + C3211 * C28193 +
            C3210 * C28192) *
               C154011 * C577 -
           ((C134 * C29238 - C135 * C29237 - C134 * C29239 + C154181 * C29240) *
                C28196 +
            C29255 * C28195 + C29254 * C28194 + C4931 * C28193 +
            C4930 * C28192) *
               C154011 * C579) *
              C154118) *
         C154047) /
            (p * q * std::sqrt(p + q));
    d2ee[368] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C154164 * C123 +
             C211 * C124 + C212 * C125 + C213 * C126 + C214 * C127) *
                C154393 -
            (C685 * C127 + C686 * C126 + C687 * C125 + C688 * C124 +
             (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                 C154164 * C123) *
                C154146) *
               C1307 +
           (((C134 * C1135 - C135 * C1129 - C134 * C1136 + C154181 * C1147) *
                 C154164 * C123 +
             C1182 * C124 + C1183 * C125 + C1184 * C126 + C1185 * C127) *
                C154146 -
            (C448 * C127 + C449 * C126 + C450 * C125 + C451 * C124 +
             (C134 * C363 - C135 * C347 - C134 * C364 + C154181 * C383) *
                 C154164 * C123) *
                C154393) *
               C154118) *
              C154384 +
          (((C688 * C123 + C687 * C124 + C686 * C125 + C685 * C126 +
             C967 * C127) *
                C154146 -
            (C215 * C127 + C214 * C126 + C213 * C125 + C212 * C124 +
             C211 * C123) *
                C154393) *
               C1307 +
           ((C451 * C123 + C450 * C124 + C449 * C125 + C448 * C126 +
             C831 * C127) *
                C154393 -
            ((C134 * C1145 - C135 * C1134 - C134 * C1146 + C154181 * C1152) *
                 C154164 * C127 +
             C1185 * C126 + C1184 * C125 + C1183 * C124 + C1182 * C123) *
                C154146) *
               C154118) *
              C154053)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                  C154480 +
              C3210 * C154468 + C3211 * C154442) *
                 C2902 +
             (C2906 + C2907 + C2908) * C2903 + C2920 * C154429) *
                C154393 -
            (C3960 * C154429 + (C3507 + C3468 + C3469) * C2903 +
             (C4299 * C154442 + C4300 * C154468 +
              (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                  C154480) *
                 C2902) *
                C154146) *
               C1307 +
           (((C4300 * C154480 + C4299 * C154468 +
              (C134 * C4258 - C135 * C4254 - C134 * C4259 + C154181 * C4266) *
                  C154442) *
                 C2902 +
             (C4279 + C4280 + C4303) * C2903 +
             (C4285 + C4286 + C4304) * C154429) *
                C154146 -
            (C3734 * C154429 + (C3219 + C3174 + C3175) * C2903 +
             (C3214 * C154442 + C3211 * C154468 + C3210 * C154480) * C2902) *
                C154393) *
               C154118) *
              C154384 +
          ((((C3469 + C3468 + C3507) * C2902 + (C3463 + C3462 + C3506) * C2903 +
             (C3954 + C3955 + C3964) * C154429) *
                C154146 -
            (C2921 * C154429 + (C2911 + C2910 + C2909) * C2903 +
             (C2908 + C2907 + C2906) * C2902) *
                C154393) *
               C1307 +
           (((C3175 + C3174 + C3219) * C2902 + (C3169 + C3168 + C3218) * C2903 +
             (C3731 + C3732 + C3733) * C154429) *
                C154393 -
            (((C134 * C4264 - C135 * C4257 - C134 * C4265 + C154181 * C4269) *
                  C154442 +
              C3963 * C154468 + C1180 * C154480) *
                 C154429 +
             (C4304 + C4286 + C4285) * C2903 +
             (C4303 + C4280 + C4279) * C2902) *
                C154146) *
               C154118) *
              C154053)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                  C24270 +
              C3210 * C24271 + C3211 * C154442) *
                 C154477 +
             (C24277 + C24278 + C24279) * C154458 + C24291 * C154429) *
                C154393 -
            (C25198 * C154429 + (C24744 + C24745 + C24746) * C154458 +
             (C4299 * C154442 + C4300 * C24271 +
              (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                  C24270) *
                 C154477) *
                C154146) *
               C1307 +
           (((C4300 * C24270 + C4299 * C24271 + C5676 * C154442) * C154477 +
             (C25489 + C25490 + C25491) * C154458 +
             (C25492 + C25493 + C25494) * C154429) *
                C154146 -
            (C24975 * C154429 + (C24514 + C24515 + C24516) * C154458 +
             (C3214 * C154442 + C3211 * C24271 + C3210 * C24270) * C154477) *
                C154393) *
               C154118) *
              C154384 +
          ((((C24746 + C24745 + C24744) * C154477 +
             (C24743 + C24742 + C24741) * C154458 +
             (C25195 + C25196 + C25197) * C154429) *
                C154146 -
            (C24292 * C154429 + (C24282 + C24281 + C24280) * C154458 +
             (C24279 + C24278 + C24277) * C154477) *
                C154393) *
               C1307 +
           (((C24516 + C24515 + C24514) * C154477 +
             (C24513 + C24512 + C24511) * C154458 +
             (C24972 + C24973 + C24974) * C154429) *
                C154393 -
            (((C134 * C4264 - C135 * C4257 - C134 * C4265 + C154181 * C4269) *
                  C154442 +
              C3963 * C24271 + C1180 * C24270) *
                 C154429 +
             (C25494 + C25493 + C25492) * C154458 +
             (C25491 + C25490 + C25489) * C154477) *
                C154146) *
               C154118) *
              C154053)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C28192 +
             C3210 * C28193 + C3211 * C28194 + C3214 * C28195 +
             C4687 * C28196) *
                C154011 * C154393 -
            (C28899 * C28196 + C5676 * C28195 + C4299 * C28194 +
             C4300 * C28193 +
             (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                 C28192) *
                C154011 * C154146) *
               C1307 +
           ((C4300 * C28192 + C4299 * C28193 + C5676 * C28194 +
             C28899 * C28195 +
             (C134 * C28880 - C135 * C28878 - C134 * C28881 +
              C154181 * C28884) *
                 C28196) *
                C154011 * C154146 -
            (C28341 * C28196 + C4687 * C28195 + C3214 * C28194 +
             C3211 * C28193 + C3210 * C28192) *
                C154011 * C154393) *
               C154118) *
              C154384 +
          (((C680 * C28192 + C1178 * C28193 + C3501 * C28194 + C4301 * C28195 +
             C28900 * C28196) *
                C154011 * C154146 -
            (C3215 * C28196 + C3213 * C28195 + C444 * C28194 + C443 * C28193 +
             C205 * C28192) *
                C154011 * C154393) *
               C1307 +
           ((C443 * C28192 + C444 * C28193 + C3213 * C28194 + C3215 * C28195 +
             C28342 * C28196) *
                C154011 * C154393 -
            ((C134 * C28882 - C135 * C28879 - C134 * C28883 +
              C154181 * C28885) *
                 C28196 +
             C28900 * C28195 + C4301 * C28194 + C3501 * C28193 +
             C1178 * C28192) *
                C154011 * C154146) *
               C154118) *
              C154053)) /
            (p * q * std::sqrt(p + q));
    d2ee[369] +=
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                C154164 * C123 +
            C211 * C124 + C212 * C125 + C213 * C126 + C214 * C127) *
               C154082 * C1307 -
           (C448 * C127 + C449 * C126 + C450 * C125 + C451 * C124 +
            (C134 * C363 - C135 * C347 - C134 * C364 + C154181 * C383) *
                C154164 * C123) *
               C154082 * C154118) *
              C1309 +
          ((C451 * C123 + C450 * C124 + C449 * C125 + C448 * C126 +
            C831 * C127) *
               C154082 * C154118 -
           (C215 * C127 + C214 * C126 + C213 * C125 + C212 * C124 +
            C211 * C123) *
               C154082 * C1307) *
              C1310 +
          ((C212 * C123 + C213 * C124 + C214 * C125 + C215 * C126 +
            C216 * C127) *
               C154082 * C1307 -
           ((C134 * C820 - C135 * C819 - C134 * C821 + C154181 * C822) *
                C154164 * C127 +
            C831 * C126 + C448 * C125 + C449 * C124 + C450 * C123) *
               C154082 * C154118) *
              C1311)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
               C154164 * C123 +
           C211 * C124 + C212 * C125 + C213 * C126 + C214 * C127) *
              C154082 * C1394 -
          (C448 * C127 + C449 * C126 + C450 * C125 + C451 * C124 +
           (C134 * C363 - C135 * C347 - C134 * C364 + C154181 * C383) *
               C154164 * C123) *
              C154082 * C1395 +
          ((C134 * C365 - C135 * C348 - C134 * C366 + C154181 * C384) *
               C154164 * C123 +
           C452 * C124 + C453 * C125 + C454 * C126 + C455 * C127) *
              C154082 * C1396 -
          ((C134 * C1404 - C135 * C1399 - C134 * C1405 + C154181 * C1414) *
               C154164 * C127 +
           (C134 * C1406 - C135 * C1400 - C134 * C1407 + C154181 * C1415) *
               C154164 * C126 +
           (C134 * C1408 - C135 * C1401 - C134 * C1409 + C154181 * C1416) *
               C154164 * C125 +
           (C134 * C1410 - C135 * C1402 - C134 * C1411 + C154181 * C1417) *
               C154164 * C124 +
           (C134 * C1412 - C135 * C1403 - C134 * C1413 + C154181 * C1418) *
               C154164 * C123) *
              C154082 * C1397) *
         C154047) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C154480 +
             C3210 * C154468 + C3211 * C154442) *
                C2902 +
            (C2906 + C2907 + C2908) * C2903 + C2920 * C154429) *
               C154082 * C1307 -
           (C3734 * C154429 + (C3219 + C3174 + C3175) * C2903 +
            (C3214 * C154442 + C3211 * C154468 + C3210 * C154480) * C2902) *
               C154082 * C154118) *
              C1309 +
          (((C3175 + C3174 + C3219) * C2902 + (C3169 + C3168 + C3218) * C2903 +
            (C3731 + C3732 + C3733) * C154429) *
               C154082 * C154118 -
           (C2921 * C154429 + (C2911 + C2910 + C2909) * C2903 +
            (C2908 + C2907 + C2906) * C2902) *
               C154082 * C1307) *
              C1310 +
          ((C2920 * C2902 + (C2914 + C2913 + C2912) * C2903 +
            (C2915 + C2916 + C2917) * C154429) *
               C154082 * C1307 -
           (((C134 * C1404 - C135 * C1399 - C134 * C1405 + C154181 * C1414) *
                 C154442 +
             C447 * C154468 + C440 * C154480) *
                C154429 +
            (C3733 + C3732 + C3731) * C2903 + C3734 * C2902) *
               C154082 * C154118) *
              C1311)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                C154480 +
            C3210 * C154468 + C3211 * C154442) *
               C2902 +
           (C2906 + C2907 + C2908) * C2903 + C2920 * C154429) *
              C154082 * C1394 -
          (C3734 * C154429 + (C3219 + C3174 + C3175) * C2903 +
           (C3214 * C154442 + C3211 * C154468 + C3210 * C154480) * C2902) *
              C154082 * C1395 +
          ((C3211 * C154480 + C3214 * C154468 + C4687 * C154442) * C2902 +
           (C3180 + C3220 + C3221) * C2903 +
           (C3185 + C3222 + C3223) * C154429) *
              C154082 * C1396 -
          (((C134 * C4671 - C135 * C4668 - C134 * C4672 + C154181 * C4677) *
                C154442 +
            C3216 * C154468 + C3212 * C154480) *
               C154429 +
           ((C134 * C4673 - C135 * C4669 - C134 * C4674 + C154181 * C4678) *
                C154442 +
            C3215 * C154468 + C3213 * C154480) *
               C2903 +
           ((C134 * C4675 - C135 * C4670 - C134 * C4676 + C154181 * C4679) *
                C154442 +
            C4687 * C154468 + C3214 * C154480) *
               C2902) *
              C154082 * C1397) *
         C154047) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C24270 +
             C3210 * C24271 + C3211 * C154442) *
                C154477 +
            (C24277 + C24278 + C24279) * C154458 + C24291 * C154429) *
               C154082 * C1307 -
           (C24975 * C154429 + (C24514 + C24515 + C24516) * C154458 +
            (C3214 * C154442 + C3211 * C24271 + C3210 * C24270) * C154477) *
               C154082 * C154118) *
              C1309 +
          (((C24516 + C24515 + C24514) * C154477 +
            (C24513 + C24512 + C24511) * C154458 +
            (C24972 + C24973 + C24974) * C154429) *
               C154082 * C154118 -
           (C24292 * C154429 + (C24282 + C24281 + C24280) * C154458 +
            (C24279 + C24278 + C24277) * C154477) *
               C154082 * C1307) *
              C1310 +
          ((C24291 * C154477 + (C24285 + C24284 + C24283) * C154458 +
            (C24286 + C24287 + C24288) * C154429) *
               C154082 * C1307 -
           (((C134 * C1404 - C135 * C1399 - C134 * C1405 + C154181 * C1414) *
                 C154442 +
             C447 * C24271 + C440 * C24270) *
                C154429 +
            (C24974 + C24973 + C24972) * C154458 + C24975 * C154477) *
               C154082 * C154118) *
              C1311)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                C24270 +
            C3210 * C24271 + C3211 * C154442) *
               C154477 +
           (C24277 + C24278 + C24279) * C154458 + C24291 * C154429) *
              C154082 * C1394 -
          (C24975 * C154429 + (C24514 + C24515 + C24516) * C154458 +
           (C3214 * C154442 + C3211 * C24271 + C3210 * C24270) * C154477) *
              C154082 * C1395 +
          ((C3211 * C24270 + C3214 * C24271 + C4687 * C154442) * C154477 +
           (C24517 + C24518 + C24519) * C154458 +
           (C24520 + C24521 + C24522) * C154429) *
              C154082 * C1396 -
          (((C134 * C4671 - C135 * C4668 - C134 * C4672 + C154181 * C4677) *
                C154442 +
            C3216 * C24271 + C3212 * C24270) *
               C154429 +
           ((C134 * C4673 - C135 * C4669 - C134 * C4674 + C154181 * C4678) *
                C154442 +
            C3215 * C24271 + C3213 * C24270) *
               C154458 +
           ((C134 * C4675 - C135 * C4670 - C134 * C4676 + C154181 * C4679) *
                C154442 +
            C4687 * C24271 + C3214 * C24270) *
               C154477) *
              C154082 * C1397) *
         C154047) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                C28192 +
            C3210 * C28193 + C3211 * C28194 + C3214 * C28195 + C4687 * C28196) *
               C154011 * C154082 * C1307 -
           (C28341 * C28196 + C4687 * C28195 + C3214 * C28194 + C3211 * C28193 +
            C3210 * C28192) *
               C154011 * C154082 * C154118) *
              C1309 +
          ((C443 * C28192 + C444 * C28193 + C3213 * C28194 + C3215 * C28195 +
            C28342 * C28196) *
               C154011 * C154082 * C154118 -
           (C3215 * C28196 + C3213 * C28195 + C444 * C28194 + C443 * C28193 +
            C205 * C28192) *
               C154011 * C154082 * C1307) *
              C1310 +
          ((C206 * C28192 + C442 * C28193 + C445 * C28194 + C3212 * C28195 +
            C3216 * C28196) *
               C154011 * C154082 * C1307 -
           ((C134 * C4671 - C135 * C4668 - C134 * C4672 + C154181 * C4677) *
                C28196 +
            C3216 * C28195 + C3212 * C28194 + C445 * C28193 + C442 * C28192) *
               C154011 * C154082 * C154118) *
              C1311)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) * C28192 +
           C3210 * C28193 + C3211 * C28194 + C3214 * C28195 + C4687 * C28196) *
              C154011 * C154082 * C1394 -
          (C28341 * C28196 + C4687 * C28195 + C3214 * C28194 + C3211 * C28193 +
           C3210 * C28192) *
              C154011 * C154082 * C1395 +
          (C3211 * C28192 + C3214 * C28193 + C4687 * C28194 + C28341 * C28195 +
           C29115 * C28196) *
              C154011 * C154082 * C1396 -
          ((C134 * C29105 - C135 * C29104 - C134 * C29106 + C154181 * C29107) *
               C28196 +
           C29115 * C28195 + C28341 * C28194 + C4687 * C28193 +
           C3214 * C28192) *
              C154011 * C154082 * C1397) *
         C154047) /
            (p * q * std::sqrt(p + q));
    d2ee[370] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C154164 * C123 +
             C211 * C124 + C212 * C125 + C213 * C126 + C214 * C127) *
                C2114 -
            (C685 * C127 + C686 * C126 + C687 * C125 + C688 * C124 +
             (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                 C154164 * C123) *
                C154146) *
               C154392 +
           (((C134 * C1135 - C135 * C1129 - C134 * C1136 + C154181 * C1147) *
                 C154164 * C123 +
             C1182 * C124 + C1183 * C125 + C1184 * C126 + C1185 * C127) *
                C154146 -
            (C448 * C127 + C449 * C126 + C450 * C125 + C451 * C124 +
             (C134 * C363 - C135 * C347 - C134 * C364 + C154181 * C383) *
                 C154164 * C123) *
                C2114) *
               C154118) *
              C154384 +
          (((C688 * C123 + C687 * C124 + C686 * C125 + C685 * C126 +
             C967 * C127) *
                C154146 -
            (C215 * C127 + C214 * C126 + C213 * C125 + C212 * C124 +
             C211 * C123) *
                C2114) *
               C154392 +
           ((C451 * C123 + C450 * C124 + C449 * C125 + C448 * C126 +
             C831 * C127) *
                C2114 -
            ((C134 * C1145 - C135 * C1134 - C134 * C1146 + C154181 * C1152) *
                 C154164 * C127 +
             C1185 * C126 + C1184 * C125 + C1183 * C124 + C1182 * C123) *
                C154146) *
               C154118) *
              C154053)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                  C154480 +
              C3210 * C154468 + C3211 * C154442) *
                 C2902 +
             (C2906 + C2907 + C2908) * C2903 + C2920 * C154429) *
                C2114 -
            (C3960 * C154429 + (C3507 + C3468 + C3469) * C2903 +
             (C4299 * C154442 + C4300 * C154468 +
              (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                  C154480) *
                 C2902) *
                C154146) *
               C154392 +
           (((C4300 * C154480 + C4299 * C154468 + C5676 * C154442) * C2902 +
             (C4279 + C4280 + C4303) * C2903 +
             (C4285 + C4286 + C4304) * C154429) *
                C154146 -
            (C3734 * C154429 + (C3219 + C3174 + C3175) * C2903 +
             (C3214 * C154442 + C3211 * C154468 + C3210 * C154480) * C2902) *
                C2114) *
               C154118) *
              C154384 +
          ((((C3469 + C3468 + C3507) * C2902 + (C3463 + C3462 + C3506) * C2903 +
             (C3954 + C3955 + C3964) * C154429) *
                C154146 -
            (C2921 * C154429 + (C2911 + C2910 + C2909) * C2903 +
             (C2908 + C2907 + C2906) * C2902) *
                C2114) *
               C154392 +
           (((C3175 + C3174 + C3219) * C2902 + (C3169 + C3168 + C3218) * C2903 +
             (C3731 + C3732 + C3733) * C154429) *
                C2114 -
            (((C134 * C4264 - C135 * C4257 - C134 * C4265 + C154181 * C4269) *
                  C154442 +
              C3963 * C154468 + C1180 * C154480) *
                 C154429 +
             (C4304 + C4286 + C4285) * C2903 +
             (C4303 + C4280 + C4279) * C2902) *
                C154146) *
               C154118) *
              C154053)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                  C24270 +
              C3210 * C24271 + C3211 * C154442) *
                 C154477 +
             (C24277 + C24278 + C24279) * C154458 + C24291 * C154429) *
                C2114 -
            (C25198 * C154429 + (C24744 + C24745 + C24746) * C154458 +
             (C4299 * C154442 + C4300 * C24271 +
              (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                  C24270) *
                 C154477) *
                C154146) *
               C154392 +
           (((C4300 * C24270 + C4299 * C24271 + C5676 * C154442) * C154477 +
             (C25489 + C25490 + C25491) * C154458 +
             (C25492 + C25493 + C25494) * C154429) *
                C154146 -
            (C24975 * C154429 + (C24514 + C24515 + C24516) * C154458 +
             (C3214 * C154442 + C3211 * C24271 + C3210 * C24270) * C154477) *
                C2114) *
               C154118) *
              C154384 +
          ((((C24746 + C24745 + C24744) * C154477 +
             (C24743 + C24742 + C24741) * C154458 +
             (C25195 + C25196 + C25197) * C154429) *
                C154146 -
            (C24292 * C154429 + (C24282 + C24281 + C24280) * C154458 +
             (C24279 + C24278 + C24277) * C154477) *
                C2114) *
               C154392 +
           (((C24516 + C24515 + C24514) * C154477 +
             (C24513 + C24512 + C24511) * C154458 +
             (C24972 + C24973 + C24974) * C154429) *
                C2114 -
            (((C134 * C4264 - C135 * C4257 - C134 * C4265 + C154181 * C4269) *
                  C154442 +
              C3963 * C24271 + C1180 * C24270) *
                 C154429 +
             (C25494 + C25493 + C25492) * C154458 +
             (C25491 + C25490 + C25489) * C154477) *
                C154146) *
               C154118) *
              C154053)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C28192 +
             C3210 * C28193 + C3211 * C28194 + C3214 * C28195 +
             C4687 * C28196) *
                C154011 * C2114 -
            (C28899 * C28196 + C5676 * C28195 + C4299 * C28194 +
             C4300 * C28193 +
             (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                 C28192) *
                C154011 * C154146) *
               C154392 +
           ((C4300 * C28192 + C4299 * C28193 + C5676 * C28194 +
             C28899 * C28195 + C29672 * C28196) *
                C154011 * C154146 -
            (C28341 * C28196 + C4687 * C28195 + C3214 * C28194 +
             C3211 * C28193 + C3210 * C28192) *
                C154011 * C2114) *
               C154118) *
              C154384 +
          (((C680 * C28192 + C1178 * C28193 + C3501 * C28194 + C4301 * C28195 +
             C28900 * C28196) *
                C154011 * C154146 -
            (C3215 * C28196 + C3213 * C28195 + C444 * C28194 + C443 * C28193 +
             C205 * C28192) *
                C154011 * C2114) *
               C154392 +
           ((C443 * C28192 + C444 * C28193 + C3213 * C28194 + C3215 * C28195 +
             C28342 * C28196) *
                C154011 * C2114 -
            ((C134 * C28882 - C135 * C28879 - C134 * C28883 +
              C154181 * C28885) *
                 C28196 +
             C28900 * C28195 + C4301 * C28194 + C3501 * C28193 +
             C1178 * C28192) *
                C154011 * C154146) *
               C154118) *
              C154053)) /
            (p * q * std::sqrt(p + q));
    d2ee[371] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                C154164 * C123 +
            C211 * C124 + C212 * C125 + C213 * C126 + C214 * C127) *
               C154465 -
           (C685 * C127 + C686 * C126 + C687 * C125 + C688 * C124 +
            (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                C154164 * C123) *
               C154466 +
           ((C134 * C602 - C135 * C585 - C134 * C603 + C154181 * C621) *
                C154164 * C123 +
            C689 * C124 + C690 * C125 + C691 * C126 + C692 * C127) *
               C2630) *
              C154392 +
          (((C134 * C1135 - C135 * C1129 - C134 * C1136 + C154181 * C1147) *
                C154164 * C123 +
            C1182 * C124 + C1183 * C125 + C1184 * C126 + C1185 * C127) *
               C154466 -
           (C448 * C127 + C449 * C126 + C450 * C125 + C451 * C124 +
            (C134 * C363 - C135 * C347 - C134 * C364 + C154181 * C383) *
                C154164 * C123) *
               C154465 -
           ((C134 * C1546 - C135 * C1541 - C134 * C1547 + C154181 * C1556) *
                C154164 * C127 +
            (C134 * C1548 - C135 * C1542 - C134 * C1549 + C154181 * C1557) *
                C154164 * C126 +
            (C134 * C1550 - C135 * C1543 - C134 * C1551 + C154181 * C1558) *
                C154164 * C125 +
            (C134 * C1552 - C135 * C1544 - C134 * C1553 + C154181 * C1559) *
                C154164 * C124 +
            (C134 * C1554 - C135 * C1545 - C134 * C1555 + C154181 * C1560) *
                C154164 * C123) *
               C2630) *
              C154118) *
         C154047) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C154480 +
             C3210 * C154468 + C3211 * C154442) *
                C2902 +
            (C2906 + C2907 + C2908) * C2903 + C2920 * C154429) *
               C154465 -
           (C3960 * C154429 + (C3507 + C3468 + C3469) * C2903 +
            (C4299 * C154442 + C4300 * C154468 +
             (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                 C154480) *
                C2902) *
               C154466 +
           (((C134 * C602 - C135 * C585 - C134 * C603 + C154181 * C621) *
                 C154480 +
             C4930 * C154468 + C4931 * C154442) *
                C2902 +
            (C3470 + C3508 + C3509) * C2903 +
            (C3479 + C3510 + C3511) * C154429) *
               C2630) *
              C154392 +
          (((C4300 * C154480 + C4299 * C154468 + C5676 * C154442) * C2902 +
            (C4279 + C4280 + C4303) * C2903 +
            (C4285 + C4286 + C4304) * C154429) *
               C154466 -
           (C3734 * C154429 + (C3219 + C3174 + C3175) * C2903 +
            (C3214 * C154442 + C3211 * C154468 + C3210 * C154480) * C2902) *
               C154465 -
           (((C134 * C4908 - C135 * C4905 - C134 * C4909 + C154181 * C4914) *
                 C154442 +
             C3505 * C154468 + C3504 * C154480) *
                C154429 +
            ((C134 * C4910 - C135 * C4906 - C134 * C4911 + C154181 * C4915) *
                 C154442 +
             C3503 * C154468 + C3502 * C154480) *
                C2903 +
            ((C134 * C4912 - C135 * C4907 - C134 * C4913 + C154181 * C4916) *
                 C154442 +
             C4931 * C154468 + C4930 * C154480) *
                C2902) *
               C2630) *
              C154118) *
         C154047) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C24270 +
             C3210 * C24271 + C3211 * C154442) *
                C154477 +
            (C24277 + C24278 + C24279) * C154458 + C24291 * C154429) *
               C154465 -
           (C25198 * C154429 + (C24744 + C24745 + C24746) * C154458 +
            (C4299 * C154442 + C4300 * C24271 +
             (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                 C24270) *
                C154477) *
               C154466 +
           (((C134 * C602 - C135 * C585 - C134 * C603 + C154181 * C621) *
                 C24270 +
             C4930 * C24271 + C4931 * C154442) *
                C154477 +
            (C24747 + C24748 + C24749) * C154458 +
            (C24750 + C24751 + C24752) * C154429) *
               C2630) *
              C154392 +
          (((C4300 * C24270 + C4299 * C24271 + C5676 * C154442) * C154477 +
            (C25489 + C25490 + C25491) * C154458 +
            (C25492 + C25493 + C25494) * C154429) *
               C154466 -
           (C24975 * C154429 + (C24514 + C24515 + C24516) * C154458 +
            (C3214 * C154442 + C3211 * C24271 + C3210 * C24270) * C154477) *
               C154465 -
           (((C134 * C4908 - C135 * C4905 - C134 * C4909 + C154181 * C4914) *
                 C154442 +
             C3505 * C24271 + C3504 * C24270) *
                C154429 +
            ((C134 * C4910 - C135 * C4906 - C134 * C4911 + C154181 * C4915) *
                 C154442 +
             C3503 * C24271 + C3502 * C24270) *
                C154458 +
            ((C134 * C4912 - C135 * C4907 - C134 * C4913 + C154181 * C4916) *
                 C154442 +
             C4931 * C24271 + C4930 * C24270) *
                C154477) *
               C2630) *
              C154118) *
         C154047) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                C28192 +
            C3210 * C28193 + C3211 * C28194 + C3214 * C28195 + C4687 * C28196) *
               C154011 * C154465 -
           (C28899 * C28196 + C5676 * C28195 + C4299 * C28194 + C4300 * C28193 +
            (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                C28192) *
               C154011 * C154466 +
           ((C134 * C602 - C135 * C585 - C134 * C603 + C154181 * C621) *
                C28192 +
            C4930 * C28193 + C4931 * C28194 + C29254 * C28195 +
            C29255 * C28196) *
               C154011 * C2630) *
              C154392 +
          ((C4300 * C28192 + C4299 * C28193 + C5676 * C28194 + C28899 * C28195 +
            C29672 * C28196) *
               C154011 * C154466 -
           (C28341 * C28196 + C4687 * C28195 + C3214 * C28194 + C3211 * C28193 +
            C3210 * C28192) *
               C154011 * C154465 -
           ((C134 * C29238 - C135 * C29237 - C134 * C29239 + C154181 * C29240) *
                C28196 +
            C29255 * C28195 + C29254 * C28194 + C4931 * C28193 +
            C4930 * C28192) *
               C154011 * C2630) *
              C154118) *
         C154047) /
            (p * q * std::sqrt(p + q));
    d2ee[372] +=
        (-std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                C154164 * C123 +
            C211 * C124 + C212 * C125 + C213 * C126 + C214 * C127) *
               C2114 -
           (C685 * C127 + C686 * C126 + C687 * C125 + C688 * C124 +
            (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                C154164 * C123) *
               C154146) *
              C338 +
          (((C134 * C1135 - C135 * C1129 - C134 * C1136 + C154181 * C1147) *
                C154164 * C123 +
            C1182 * C124 + C1183 * C125 + C1184 * C126 + C1185 * C127) *
               C154146 -
           (C448 * C127 + C449 * C126 + C450 * C125 + C451 * C124 +
            (C134 * C363 - C135 * C347 - C134 * C364 + C154181 * C383) *
                C154164 * C123) *
               C2114) *
              C339 +
          (((C134 * C365 - C135 * C348 - C134 * C366 + C154181 * C384) *
                C154164 * C123 +
            C452 * C124 + C453 * C125 + C454 * C126 + C455 * C127) *
               C2114 -
           ((C134 * C1977 - C135 * C1972 - C134 * C1978 + C154181 * C1987) *
                C154164 * C127 +
            (C134 * C1979 - C135 * C1973 - C134 * C1980 + C154181 * C1988) *
                C154164 * C126 +
            (C134 * C1981 - C135 * C1974 - C134 * C1982 + C154181 * C1989) *
                C154164 * C125 +
            (C134 * C1983 - C135 * C1975 - C134 * C1984 + C154181 * C1990) *
                C154164 * C124 +
            (C134 * C1985 - C135 * C1976 - C134 * C1986 + C154181 * C1991) *
                C154164 * C123) *
               C154146) *
              C340) *
         C154047) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                C154164 * C123 +
            C211 * C124 + C212 * C125 + C213 * C126 + C214 * C127) *
               C2114 -
           (C685 * C127 + C686 * C126 + C687 * C125 + C688 * C124 +
            (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                C154164 * C123) *
               C154146) *
              C154066 * C1309 +
          ((C688 * C123 + C687 * C124 + C686 * C125 + C685 * C126 +
            C967 * C127) *
               C154146 -
           (C215 * C127 + C214 * C126 + C213 * C125 + C212 * C124 +
            C211 * C123) *
               C2114) *
              C154066 * C1310 +
          ((C212 * C123 + C213 * C124 + C214 * C125 + C215 * C126 +
            C216 * C127) *
               C2114 -
           ((C134 * C956 - C135 * C955 - C134 * C957 + C154181 * C958) *
                C154164 * C127 +
            C967 * C126 + C685 * C125 + C686 * C124 + C687 * C123) *
               C154146) *
              C154066 * C1311)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
               C154164 * C123 +
           C211 * C124 + C212 * C125 + C213 * C126 + C214 * C127) *
              C2320 -
          (C685 * C127 + C686 * C126 + C687 * C125 + C688 * C124 +
           (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
               C154164 * C123) *
              C2321 +
          ((C134 * C602 - C135 * C585 - C134 * C603 + C154181 * C621) *
               C154164 * C123 +
           C689 * C124 + C690 * C125 + C691 * C126 + C692 * C127) *
              C2322 -
          ((C134 * C2329 - C135 * C2324 - C134 * C2330 + C154181 * C2339) *
               C154164 * C127 +
           (C134 * C2331 - C135 * C2325 - C134 * C2332 + C154181 * C2340) *
               C154164 * C126 +
           (C134 * C2333 - C135 * C2326 - C134 * C2334 + C154181 * C2341) *
               C154164 * C125 +
           (C134 * C2335 - C135 * C2327 - C134 * C2336 + C154181 * C2342) *
               C154164 * C124 +
           (C134 * C2337 - C135 * C2328 - C134 * C2338 + C154181 * C2343) *
               C154164 * C123) *
              C2323) *
         C154066 * C154047) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C154480 +
             C3210 * C154468 + C3211 * C154442) *
                C2902 +
            (C2906 + C2907 + C2908) * C2903 + C2920 * C154429) *
               C2114 -
           (C3960 * C154429 + (C3507 + C3468 + C3469) * C2903 +
            (C4299 * C154442 + C4300 * C154468 +
             (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                 C154480) *
                C2902) *
               C154146) *
              C154066 * C1309 +
          (((C3469 + C3468 + C3507) * C2902 + (C3463 + C3462 + C3506) * C2903 +
            (C3954 + C3955 + C3964) * C154429) *
               C154146 -
           (C2921 * C154429 + (C2911 + C2910 + C2909) * C2903 +
            (C2908 + C2907 + C2906) * C2902) *
               C2114) *
              C154066 * C1310 +
          ((C2920 * C2902 + (C2914 + C2913 + C2912) * C2903 +
            (C2915 + C2916 + C2917) * C154429) *
               C2114 -
           (((C134 * C1977 - C135 * C1972 - C134 * C1978 + C154181 * C1987) *
                 C154442 +
             C1181 * C154468 + C677 * C154480) *
                C154429 +
            (C3964 + C3955 + C3954) * C2903 + C3960 * C2902) *
               C154146) *
              C154066 * C1311)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C154480 +
             C3210 * C154468 + C3211 * C154442) *
                C2902 +
            (C2906 + C2907 + C2908) * C2903 + C2920 * C154429) *
               C2114 -
           (C3960 * C154429 + (C3507 + C3468 + C3469) * C2903 +
            (C4299 * C154442 + C4300 * C154468 +
             (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                 C154480) *
                C2902) *
               C154146) *
              C338 +
          (((C4300 * C154480 + C4299 * C154468 + C5676 * C154442) * C2902 +
            (C4279 + C4280 + C4303) * C2903 +
            (C4285 + C4286 + C4304) * C154429) *
               C154146 -
           (C3734 * C154429 + (C3219 + C3174 + C3175) * C2903 +
            (C3214 * C154442 + C3211 * C154468 + C3210 * C154480) * C2902) *
               C2114) *
              C339 +
          (((C3211 * C154480 + C3214 * C154468 + C4687 * C154442) * C2902 +
            (C3180 + C3220 + C3221) * C2903 +
            (C3185 + C3222 + C3223) * C154429) *
               C2114 -
           (((C134 * C5660 - C135 * C5657 - C134 * C5661 + C154181 * C5666) *
                 C154442 +
             C4302 * C154468 + C3500 * C154480) *
                C154429 +
            ((C134 * C5662 - C135 * C5658 - C134 * C5663 + C154181 * C5667) *
                 C154442 +
             C4301 * C154468 + C3501 * C154480) *
                C2903 +
            ((C134 * C5664 - C135 * C5659 - C134 * C5665 + C154181 * C5668) *
                 C154442 +
             C5676 * C154468 + C4299 * C154480) *
                C2902) *
               C154146) *
              C340) *
         C154047) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                C154480 +
            C3210 * C154468 + C3211 * C154442) *
               C2902 +
           (C2906 + C2907 + C2908) * C2903 + C2920 * C154429) *
              C2320 -
          (C3960 * C154429 + (C3507 + C3468 + C3469) * C2903 +
           (C4299 * C154442 + C4300 * C154468 +
            (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                C154480) *
               C2902) *
              C2321 +
          (((C134 * C602 - C135 * C585 - C134 * C603 + C154181 * C621) *
                C154480 +
            C4930 * C154468 + C4931 * C154442) *
               C2902 +
           (C3470 + C3508 + C3509) * C2903 +
           (C3479 + C3510 + C3511) * C154429) *
              C2322 -
          (((C134 * C6264 - C135 * C6258 - C134 * C6265 + C154181 * C6276) *
                C154442 +
            (C134 * C6266 - C135 * C6259 - C134 * C6267 + C154181 * C6277) *
                C154468 +
            (C134 * C2333 - C135 * C2326 - C134 * C2334 + C154181 * C2341) *
                C154480) *
               C154429 +
           ((C134 * C6268 - C135 * C6260 - C134 * C6269 + C154181 * C6278) *
                C154442 +
            (C134 * C6270 - C135 * C6261 - C134 * C6271 + C154181 * C6279) *
                C154468 +
            (C134 * C2335 - C135 * C2327 - C134 * C2336 + C154181 * C2342) *
                C154480) *
               C2903 +
           ((C134 * C6272 - C135 * C6262 - C134 * C6273 + C154181 * C6280) *
                C154442 +
            (C134 * C6274 - C135 * C6263 - C134 * C6275 + C154181 * C6281) *
                C154468 +
            (C134 * C2337 - C135 * C2328 - C134 * C2338 + C154181 * C2343) *
                C154480) *
               C2902) *
              C2323) *
         C154066 * C154047) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C24270 +
             C3210 * C24271 + C3211 * C154442) *
                C154477 +
            (C24277 + C24278 + C24279) * C154458 + C24291 * C154429) *
               C2114 -
           (C25198 * C154429 + (C24744 + C24745 + C24746) * C154458 +
            (C4299 * C154442 + C4300 * C24271 +
             (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                 C24270) *
                C154477) *
               C154146) *
              C154066 * C1309 +
          (((C24746 + C24745 + C24744) * C154477 +
            (C24743 + C24742 + C24741) * C154458 +
            (C25195 + C25196 + C25197) * C154429) *
               C154146 -
           (C24292 * C154429 + (C24282 + C24281 + C24280) * C154458 +
            (C24279 + C24278 + C24277) * C154477) *
               C2114) *
              C154066 * C1310 +
          ((C24291 * C154477 + (C24285 + C24284 + C24283) * C154458 +
            (C24286 + C24287 + C24288) * C154429) *
               C2114 -
           (((C134 * C1977 - C135 * C1972 - C134 * C1978 + C154181 * C1987) *
                 C154442 +
             C1181 * C24271 + C677 * C24270) *
                C154429 +
            (C25197 + C25196 + C25195) * C154458 + C25198 * C154477) *
               C154146) *
              C154066 * C1311)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C24270 +
             C3210 * C24271 + C3211 * C154442) *
                C154477 +
            (C24277 + C24278 + C24279) * C154458 + C24291 * C154429) *
               C2114 -
           (C25198 * C154429 + (C24744 + C24745 + C24746) * C154458 +
            (C4299 * C154442 + C4300 * C24271 +
             (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                 C24270) *
                C154477) *
               C154146) *
              C338 +
          (((C4300 * C24270 + C4299 * C24271 + C5676 * C154442) * C154477 +
            (C25489 + C25490 + C25491) * C154458 +
            (C25492 + C25493 + C25494) * C154429) *
               C154146 -
           (C24975 * C154429 + (C24514 + C24515 + C24516) * C154458 +
            (C3214 * C154442 + C3211 * C24271 + C3210 * C24270) * C154477) *
               C2114) *
              C339 +
          (((C3211 * C24270 + C3214 * C24271 + C4687 * C154442) * C154477 +
            (C24517 + C24518 + C24519) * C154458 +
            (C24520 + C24521 + C24522) * C154429) *
               C2114 -
           (((C134 * C5660 - C135 * C5657 - C134 * C5661 + C154181 * C5666) *
                 C154442 +
             C4302 * C24271 + C3500 * C24270) *
                C154429 +
            ((C134 * C5662 - C135 * C5658 - C134 * C5663 + C154181 * C5667) *
                 C154442 +
             C4301 * C24271 + C3501 * C24270) *
                C154458 +
            ((C134 * C5664 - C135 * C5659 - C134 * C5665 + C154181 * C5668) *
                 C154442 +
             C5676 * C24271 + C4299 * C24270) *
                C154477) *
               C154146) *
              C340) *
         C154047) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                C24270 +
            C3210 * C24271 + C3211 * C154442) *
               C154477 +
           (C24277 + C24278 + C24279) * C154458 + C24291 * C154429) *
              C2320 -
          (C25198 * C154429 + (C24744 + C24745 + C24746) * C154458 +
           (C4299 * C154442 + C4300 * C24271 +
            (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                C24270) *
               C154477) *
              C2321 +
          (((C134 * C602 - C135 * C585 - C134 * C603 + C154181 * C621) *
                C24270 +
            C4930 * C24271 + C4931 * C154442) *
               C154477 +
           (C24747 + C24748 + C24749) * C154458 +
           (C24750 + C24751 + C24752) * C154429) *
              C2322 -
          (((C134 * C6264 - C135 * C6258 - C134 * C6265 + C154181 * C6276) *
                C154442 +
            (C134 * C6266 - C135 * C6259 - C134 * C6267 + C154181 * C6277) *
                C24271 +
            (C134 * C2333 - C135 * C2326 - C134 * C2334 + C154181 * C2341) *
                C24270) *
               C154429 +
           ((C134 * C6268 - C135 * C6260 - C134 * C6269 + C154181 * C6278) *
                C154442 +
            (C134 * C6270 - C135 * C6261 - C134 * C6271 + C154181 * C6279) *
                C24271 +
            (C134 * C2335 - C135 * C2327 - C134 * C2336 + C154181 * C2342) *
                C24270) *
               C154458 +
           ((C134 * C6272 - C135 * C6262 - C134 * C6273 + C154181 * C6280) *
                C154442 +
            (C134 * C6274 - C135 * C6263 - C134 * C6275 + C154181 * C6281) *
                C24271 +
            (C134 * C2337 - C135 * C2328 - C134 * C2338 + C154181 * C2343) *
                C24270) *
               C154477) *
              C2323) *
         C154066 * C154047) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                C28192 +
            C3210 * C28193 + C3211 * C28194 + C3214 * C28195 + C4687 * C28196) *
               C154011 * C2114 -
           (C28899 * C28196 + C5676 * C28195 + C4299 * C28194 + C4300 * C28193 +
            (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                C28192) *
               C154011 * C154146) *
              C154066 * C1309 +
          ((C680 * C28192 + C1178 * C28193 + C3501 * C28194 + C4301 * C28195 +
            C28900 * C28196) *
               C154011 * C154146 -
           (C3215 * C28196 + C3213 * C28195 + C444 * C28194 + C443 * C28193 +
            C205 * C28192) *
               C154011 * C2114) *
              C154066 * C1310 +
          ((C206 * C28192 + C442 * C28193 + C445 * C28194 + C3212 * C28195 +
            C3216 * C28196) *
               C154011 * C2114 -
           ((C134 * C5660 - C135 * C5657 - C134 * C5661 + C154181 * C5666) *
                C28196 +
            C4302 * C28195 + C3500 * C28194 + C1179 * C28193 + C679 * C28192) *
               C154011 * C154146) *
              C154066 * C1311)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                C28192 +
            C3210 * C28193 + C3211 * C28194 + C3214 * C28195 + C4687 * C28196) *
               C154011 * C2114 -
           (C28899 * C28196 + C5676 * C28195 + C4299 * C28194 + C4300 * C28193 +
            (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                C28192) *
               C154011 * C154146) *
              C338 +
          ((C4300 * C28192 + C4299 * C28193 + C5676 * C28194 + C28899 * C28195 +
            C29672 * C28196) *
               C154011 * C154146 -
           (C28341 * C28196 + C4687 * C28195 + C3214 * C28194 + C3211 * C28193 +
            C3210 * C28192) *
               C154011 * C2114) *
              C339 +
          ((C3211 * C28192 + C3214 * C28193 + C4687 * C28194 + C28341 * C28195 +
            C29115 * C28196) *
               C154011 * C2114 -
           ((C134 * C29662 - C135 * C29661 - C134 * C29663 + C154181 * C29664) *
                C28196 +
            C29672 * C28195 + C28899 * C28194 + C5676 * C28193 +
            C4299 * C28192) *
               C154011 * C154146) *
              C340) *
         C154047) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) * C28192 +
           C3210 * C28193 + C3211 * C28194 + C3214 * C28195 + C4687 * C28196) *
              C154011 * C2320 -
          (C28899 * C28196 + C5676 * C28195 + C4299 * C28194 + C4300 * C28193 +
           (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
               C28192) *
              C154011 * C2321 +
          ((C134 * C602 - C135 * C585 - C134 * C603 + C154181 * C621) * C28192 +
           C4930 * C28193 + C4931 * C28194 + C29254 * C28195 +
           C29255 * C28196) *
              C154011 * C2322 -
          ((C134 * C30000 - C135 * C29998 - C134 * C30001 + C154181 * C30004) *
               C28196 +
           (C134 * C30002 - C135 * C29999 - C134 * C30003 + C154181 * C30005) *
               C28195 +
           (C134 * C6272 - C135 * C6262 - C134 * C6273 + C154181 * C6280) *
               C28194 +
           (C134 * C6274 - C135 * C6263 - C134 * C6275 + C154181 * C6281) *
               C28193 +
           (C134 * C2337 - C135 * C2328 - C134 * C2338 + C154181 * C2343) *
               C28192) *
              C154011 * C2323) *
         C154066 * C154047) /
            (p * q * std::sqrt(p + q));
    d2ee[373] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                C154164 * C123 +
            C211 * C124 + C212 * C125 + C213 * C126 + C214 * C127) *
               C154465 -
           (C685 * C127 + C686 * C126 + C687 * C125 + C688 * C124 +
            (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                C154164 * C123) *
               C154466 +
           ((C134 * C602 - C135 * C585 - C134 * C603 + C154181 * C621) *
                C154164 * C123 +
            C689 * C124 + C690 * C125 + C691 * C126 + C692 * C127) *
               C2630) *
              C154066 * C154384 +
          ((C688 * C123 + C687 * C124 + C686 * C125 + C685 * C126 +
            C967 * C127) *
               C154466 -
           (C215 * C127 + C214 * C126 + C213 * C125 + C212 * C124 +
            C211 * C123) *
               C154465 -
           ((C134 * C614 - C135 * C591 - C134 * C615 + C154181 * C627) *
                C154164 * C127 +
            C692 * C126 + C691 * C125 + C690 * C124 + C689 * C123) *
               C2630) *
              C154066 * C154053)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C154480 +
             C3210 * C154468 + C3211 * C154442) *
                C2902 +
            (C2906 + C2907 + C2908) * C2903 + C2920 * C154429) *
               C154465 -
           (C3960 * C154429 + (C3507 + C3468 + C3469) * C2903 +
            (C4299 * C154442 + C4300 * C154468 +
             (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                 C154480) *
                C2902) *
               C154466 +
           (((C134 * C602 - C135 * C585 - C134 * C603 + C154181 * C621) *
                 C154480 +
             C4930 * C154468 + C4931 * C154442) *
                C2902 +
            (C3470 + C3508 + C3509) * C2903 +
            (C3479 + C3510 + C3511) * C154429) *
               C2630) *
              C154066 * C154384 +
          (((C3469 + C3468 + C3507) * C2902 + (C3463 + C3462 + C3506) * C2903 +
            (C3954 + C3955 + C3964) * C154429) *
               C154466 -
           (C2921 * C154429 + (C2911 + C2910 + C2909) * C2903 +
            (C2908 + C2907 + C2906) * C2902) *
               C154465 -
           (((C134 * C3451 - C135 * C3444 - C134 * C3452 + C154181 * C3456) *
                 C154442 +
             (C134 * C1548 - C135 * C1542 - C134 * C1549 + C154181 * C1557) *
                 C154468 +
             C683 * C154480) *
                C154429 +
            (C3511 + C3510 + C3479) * C2903 + (C3509 + C3508 + C3470) * C2902) *
               C2630) *
              C154066 * C154053)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C24270 +
             C3210 * C24271 + C3211 * C154442) *
                C154477 +
            (C24277 + C24278 + C24279) * C154458 + C24291 * C154429) *
               C154465 -
           (C25198 * C154429 + (C24744 + C24745 + C24746) * C154458 +
            (C4299 * C154442 + C4300 * C24271 +
             (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                 C24270) *
                C154477) *
               C154466 +
           (((C134 * C602 - C135 * C585 - C134 * C603 + C154181 * C621) *
                 C24270 +
             C4930 * C24271 + C4931 * C154442) *
                C154477 +
            (C24747 + C24748 + C24749) * C154458 +
            (C24750 + C24751 + C24752) * C154429) *
               C2630) *
              C154066 * C154384 +
          (((C24746 + C24745 + C24744) * C154477 +
            (C24743 + C24742 + C24741) * C154458 +
            (C25195 + C25196 + C25197) * C154429) *
               C154466 -
           (C24292 * C154429 + (C24282 + C24281 + C24280) * C154458 +
            (C24279 + C24278 + C24277) * C154477) *
               C154465 -
           (((C134 * C3451 - C135 * C3444 - C134 * C3452 + C154181 * C3456) *
                 C154442 +
             C11901 * C24271 + C683 * C24270) *
                C154429 +
            (C24752 + C24751 + C24750) * C154458 +
            (C24749 + C24748 + C24747) * C154477) *
               C2630) *
              C154066 * C154053)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                C28192 +
            C3210 * C28193 + C3211 * C28194 + C3214 * C28195 + C4687 * C28196) *
               C154011 * C154465 -
           (C28899 * C28196 + C5676 * C28195 + C4299 * C28194 + C4300 * C28193 +
            (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                C28192) *
               C154011 * C154466 +
           ((C134 * C602 - C135 * C585 - C134 * C603 + C154181 * C621) *
                C28192 +
            C4930 * C28193 + C4931 * C28194 + C29254 * C28195 +
            C29255 * C28196) *
               C154011 * C2630) *
              C154066 * C154384 +
          ((C680 * C28192 + C1178 * C28193 + C3501 * C28194 + C4301 * C28195 +
            C28900 * C28196) *
               C154011 * C154466 -
           (C3215 * C28196 + C3213 * C28195 + C444 * C28194 + C443 * C28193 +
            C205 * C28192) *
               C154011 * C154465 -
           ((C134 * C28468 - C135 * C28465 - C134 * C28469 + C154181 * C28471) *
                C28196 +
            (C134 * C4910 - C135 * C4906 - C134 * C4911 + C154181 * C4915) *
                C28195 +
            C3503 * C28194 + C3502 * C28193 + C681 * C28192) *
               C154011 * C2630) *
              C154066 * C154053)) /
            (p * q * std::sqrt(p + q));
    d2ee[374] +=
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                C154164 * C123 +
            C211 * C124 + C212 * C125 + C213 * C126 + C214 * C127) *
               C2114 -
           (C685 * C127 + C686 * C126 + C687 * C125 + C688 * C124 +
            (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                C154164 * C123) *
               C154146) *
              C154066 * C1309 +
          ((C688 * C123 + C687 * C124 + C686 * C125 + C685 * C126 +
            C967 * C127) *
               C154146 -
           (C215 * C127 + C214 * C126 + C213 * C125 + C212 * C124 +
            C211 * C123) *
               C2114) *
              C154066 * C1310 +
          ((C212 * C123 + C213 * C124 + C214 * C125 + C215 * C126 +
            C216 * C127) *
               C2114 -
           ((C134 * C956 - C135 * C955 - C134 * C957 + C154181 * C958) *
                C154164 * C127 +
            C967 * C126 + C685 * C125 + C686 * C124 + C687 * C123) *
               C154146) *
              C154066 * C1311)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                C154164 * C123 +
            C211 * C124 + C212 * C125 + C213 * C126 + C214 * C127) *
               C2114 -
           (C685 * C127 + C686 * C126 + C687 * C125 + C688 * C124 +
            (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                C154164 * C123) *
               C154146) *
              C338 +
          (((C134 * C1135 - C135 * C1129 - C134 * C1136 + C154181 * C1147) *
                C154164 * C123 +
            C1182 * C124 + C1183 * C125 + C1184 * C126 + C1185 * C127) *
               C154146 -
           (C448 * C127 + C449 * C126 + C450 * C125 + C451 * C124 +
            (C134 * C363 - C135 * C347 - C134 * C364 + C154181 * C383) *
                C154164 * C123) *
               C2114) *
              C339 +
          (((C134 * C365 - C135 * C348 - C134 * C366 + C154181 * C384) *
                C154164 * C123 +
            C452 * C124 + C453 * C125 + C454 * C126 + C455 * C127) *
               C2114 -
           ((C134 * C1977 - C135 * C1972 - C134 * C1978 + C154181 * C1987) *
                C154164 * C127 +
            (C134 * C1979 - C135 * C1973 - C134 * C1980 + C154181 * C1988) *
                C154164 * C126 +
            (C134 * C1981 - C135 * C1974 - C134 * C1982 + C154181 * C1989) *
                C154164 * C125 +
            (C134 * C1983 - C135 * C1975 - C134 * C1984 + C154181 * C1990) *
                C154164 * C124 +
            (C134 * C1985 - C135 * C1976 - C134 * C1986 + C154181 * C1991) *
                C154164 * C123) *
               C154146) *
              C340) *
         C154047) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C154480 +
             C3210 * C154468 + C3211 * C154442) *
                C2902 +
            (C2906 + C2907 + C2908) * C2903 + C2920 * C154429) *
               C2114 -
           (C3960 * C154429 + (C3507 + C3468 + C3469) * C2903 +
            (C4299 * C154442 + C4300 * C154468 +
             (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                 C154480) *
                C2902) *
               C154146) *
              C154066 * C1309 +
          (((C3469 + C3468 + C3507) * C2902 + (C3463 + C3462 + C3506) * C2903 +
            (C3954 + C3955 + C3964) * C154429) *
               C154146 -
           (C2921 * C154429 + (C2911 + C2910 + C2909) * C2903 +
            (C2908 + C2907 + C2906) * C2902) *
               C2114) *
              C154066 * C1310 +
          ((C2920 * C2902 + (C2914 + C2913 + C2912) * C2903 +
            (C2915 + C2916 + C2917) * C154429) *
               C2114 -
           (((C134 * C1977 - C135 * C1972 - C134 * C1978 + C154181 * C1987) *
                 C154442 +
             C1181 * C154468 + C677 * C154480) *
                C154429 +
            (C3964 + C3955 + C3954) * C2903 + C3960 * C2902) *
               C154146) *
              C154066 * C1311)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C154480 +
             C3210 * C154468 + C3211 * C154442) *
                C2902 +
            (C2906 + C2907 + C2908) * C2903 + C2920 * C154429) *
               C2114 -
           (C3960 * C154429 + (C3507 + C3468 + C3469) * C2903 +
            (C4299 * C154442 + C4300 * C154468 +
             (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                 C154480) *
                C2902) *
               C154146) *
              C338 +
          (((C4300 * C154480 + C4299 * C154468 + C5676 * C154442) * C2902 +
            (C4279 + C4280 + C4303) * C2903 +
            (C4285 + C4286 + C4304) * C154429) *
               C154146 -
           (C3734 * C154429 + (C3219 + C3174 + C3175) * C2903 +
            (C3214 * C154442 + C3211 * C154468 + C3210 * C154480) * C2902) *
               C2114) *
              C339 +
          (((C3211 * C154480 + C3214 * C154468 + C4687 * C154442) * C2902 +
            (C3180 + C3220 + C3221) * C2903 +
            (C3185 + C3222 + C3223) * C154429) *
               C2114 -
           (((C134 * C5660 - C135 * C5657 - C134 * C5661 + C154181 * C5666) *
                 C154442 +
             C4302 * C154468 + C3500 * C154480) *
                C154429 +
            ((C134 * C5662 - C135 * C5658 - C134 * C5663 + C154181 * C5667) *
                 C154442 +
             C4301 * C154468 + C3501 * C154480) *
                C2903 +
            ((C134 * C5664 - C135 * C5659 - C134 * C5665 + C154181 * C5668) *
                 C154442 +
             C5676 * C154468 + C4299 * C154480) *
                C2902) *
               C154146) *
              C340) *
         C154047) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C24270 +
             C3210 * C24271 + C3211 * C154442) *
                C154477 +
            (C24277 + C24278 + C24279) * C154458 + C24291 * C154429) *
               C2114 -
           (C25198 * C154429 + (C24744 + C24745 + C24746) * C154458 +
            (C4299 * C154442 + C4300 * C24271 +
             (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                 C24270) *
                C154477) *
               C154146) *
              C154066 * C1309 +
          (((C24746 + C24745 + C24744) * C154477 +
            (C24743 + C24742 + C24741) * C154458 +
            (C25195 + C25196 + C25197) * C154429) *
               C154146 -
           (C24292 * C154429 + (C24282 + C24281 + C24280) * C154458 +
            (C24279 + C24278 + C24277) * C154477) *
               C2114) *
              C154066 * C1310 +
          ((C24291 * C154477 + (C24285 + C24284 + C24283) * C154458 +
            (C24286 + C24287 + C24288) * C154429) *
               C2114 -
           (((C134 * C1977 - C135 * C1972 - C134 * C1978 + C154181 * C1987) *
                 C154442 +
             C1181 * C24271 + C677 * C24270) *
                C154429 +
            (C25197 + C25196 + C25195) * C154458 + C25198 * C154477) *
               C154146) *
              C154066 * C1311)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                 C24270 +
             C3210 * C24271 + C3211 * C154442) *
                C154477 +
            (C24277 + C24278 + C24279) * C154458 + C24291 * C154429) *
               C2114 -
           (C25198 * C154429 + (C24744 + C24745 + C24746) * C154458 +
            (C4299 * C154442 + C4300 * C24271 +
             (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                 C24270) *
                C154477) *
               C154146) *
              C338 +
          (((C4300 * C24270 + C4299 * C24271 + C5676 * C154442) * C154477 +
            (C25489 + C25490 + C25491) * C154458 +
            (C25492 + C25493 + C25494) * C154429) *
               C154146 -
           (C24975 * C154429 + (C24514 + C24515 + C24516) * C154458 +
            (C3214 * C154442 + C3211 * C24271 + C3210 * C24270) * C154477) *
               C2114) *
              C339 +
          (((C3211 * C24270 + C3214 * C24271 + C4687 * C154442) * C154477 +
            (C24517 + C24518 + C24519) * C154458 +
            (C24520 + C24521 + C24522) * C154429) *
               C2114 -
           (((C134 * C5660 - C135 * C5657 - C134 * C5661 + C154181 * C5666) *
                 C154442 +
             C4302 * C24271 + C3500 * C24270) *
                C154429 +
            ((C134 * C5662 - C135 * C5658 - C134 * C5663 + C154181 * C5667) *
                 C154442 +
             C4301 * C24271 + C3501 * C24270) *
                C154458 +
            ((C134 * C5664 - C135 * C5659 - C134 * C5665 + C154181 * C5668) *
                 C154442 +
             C5676 * C24271 + C4299 * C24270) *
                C154477) *
               C154146) *
              C340) *
         C154047) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                C28192 +
            C3210 * C28193 + C3211 * C28194 + C3214 * C28195 + C4687 * C28196) *
               C154011 * C2114 -
           (C28899 * C28196 + C5676 * C28195 + C4299 * C28194 + C4300 * C28193 +
            (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                C28192) *
               C154011 * C154146) *
              C154066 * C1309 +
          ((C680 * C28192 + C1178 * C28193 + C3501 * C28194 + C4301 * C28195 +
            C28900 * C28196) *
               C154011 * C154146 -
           (C3215 * C28196 + C3213 * C28195 + C444 * C28194 + C443 * C28193 +
            C205 * C28192) *
               C154011 * C2114) *
              C154066 * C1310 +
          ((C206 * C28192 + C442 * C28193 + C445 * C28194 + C3212 * C28195 +
            C3216 * C28196) *
               C154011 * C2114 -
           ((C134 * C5660 - C135 * C5657 - C134 * C5661 + C154181 * C5666) *
                C28196 +
            C4302 * C28195 + C3500 * C28194 + C1179 * C28193 + C679 * C28192) *
               C154011 * C154146) *
              C154066 * C1311)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C154181 * C160) *
                C28192 +
            C3210 * C28193 + C3211 * C28194 + C3214 * C28195 + C4687 * C28196) *
               C154011 * C2114 -
           (C28899 * C28196 + C5676 * C28195 + C4299 * C28194 + C4300 * C28193 +
            (C134 * C600 - C135 * C584 - C134 * C601 + C154181 * C620) *
                C28192) *
               C154011 * C154146) *
              C338 +
          ((C4300 * C28192 + C4299 * C28193 + C5676 * C28194 + C28899 * C28195 +
            C29672 * C28196) *
               C154011 * C154146 -
           (C28341 * C28196 + C4687 * C28195 + C3214 * C28194 + C3211 * C28193 +
            C3210 * C28192) *
               C154011 * C2114) *
              C339 +
          ((C3211 * C28192 + C3214 * C28193 + C4687 * C28194 + C28341 * C28195 +
            C29115 * C28196) *
               C154011 * C2114 -
           ((C134 * C29662 - C135 * C29661 - C134 * C29663 + C154181 * C29664) *
                C28196 +
            C29672 * C28195 + C28899 * C28194 + C5676 * C28193 +
            C4299 * C28192) *
               C154011 * C154146) *
              C340) *
         C154047) /
            (p * q * std::sqrt(p + q));
}
