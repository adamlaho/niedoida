/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

#include "gto_d2_kit/d2_ee_ddsd_AA_xz.hpp"
#include <cmath>
/*

*/
#pragma GCC optimize("O0")
namespace {
    const double Pi = M_PI;
}
#pragma GCC optimize("O0")

void second_derivative_ee_2202_11_13(const double ae,
                                     const double xA,
                                     const double yA,
                                     const double zA,
                                     const double be,
                                     const double xB,
                                     const double yB,
                                     const double zB,
                                     const double ce,
                                     const double xC,
                                     const double yC,
                                     const double zC,
                                     const double de,
                                     const double xD,
                                     const double yD,
                                     const double zD,
                                     const double* const bs,
                                     double* const d2ee)
{
    const double p = ae + be;
    const double q = ce + de;
    const double xP = (ae * xA + be * xB) / p;
    const double yP = (ae * yA + be * yB) / p;
    const double zP = (ae * zA + be * zB) / p;
    const double xQ = (ce * xC + de * xD) / q;
    const double yQ = (ce * yC + de * yD) / q;
    const double zQ = (ce * zC + de * zD) / q;
    const double C31518 = 0 * ae;
    const double C31517 = ae * be;
    const double C31516 = 0 * be;
    const double C31515 = 0 * be;
    const double C31514 = ae + be;
    const double C31513 = 0 * be;
    const double C31512 = xA - xB;
    const double C31573 = 0 * be;
    const double C31598 = 0 * be;
    const double C31597 = zA - zB;
    const double C31653 = 0 * ae;
    const double C31648 = 0 * be;
    const double C31647 = 0 * be;
    const double C31698 = 0 * be;
    const double C31758 = xP - xQ;
    const double C31757 = zP - zQ;
    const double C31756 = p + q;
    const double C31755 = p * q;
    const double C31765 = std::pow(ae, 2);
    const double C31763 = bs[3];
    const double C31773 = bs[4];
    const double C31782 = bs[5];
    const double C31796 = bs[6];
    const double C31818 = bs[7];
    const double C31927 = yP - yQ;
    const double C32136 = bs[2];
    const double C119 = bs[0];
    const double C32572 = ce + de;
    const double C32571 = ce * de;
    const double C32570 = xC - xD;
    const double C32584 = yC - yD;
    const double C32598 = zC - zD;
    const double C32628 = yA - yB;
    const double C31525 = C31518 / C31514;
    const double C31522 = C31516 / C31514;
    const double C31520 = 2 * C31514;
    const double C31519 = std::pow(C31514, 2);
    const double C31524 = C31517 * C31512;
    const double C31523 = C31512 * C31516;
    const double C31521 = C31512 * C31515;
    const double C32538 = C31512 * be;
    const double C32537 = C31512 * ae;
    const double C32536 = std::pow(C31512, 2);
    const double C31574 = C31573 / C31514;
    const double C31649 = C31598 / C31514;
    const double C31599 = C31517 * C31597;
    const double C31650 = C31597 * C31598;
    const double C32640 = std::pow(C31597, 2);
    const double C32723 = C31597 * be;
    const double C32721 = C31597 * ae;
    const double C31660 = C31653 / C31514;
    const double C31655 = C31597 * C31648;
    const double C31699 = C31698 / C31514;
    const double C31783 = std::pow(C31758, 2);
    const double C31851 = C31758 * ae;
    const double C31766 = C31757 * ae;
    const double C31764 = C31758 * C31757;
    const double C31969 = std::pow(C31757, 2);
    const double C31759 = 2 * C31755;
    const double C31936 = std::pow(C31927, 2);
    const double C32878 = 2 * C32572;
    const double C32877 = std::pow(C32572, 2);
    const double C32573 = std::pow(C32570, 2);
    const double C32876 = C32570 * ce;
    const double C32585 = std::pow(C32584, 2);
    const double C32879 = C32584 * ce;
    const double C32599 = std::pow(C32598, 2);
    const double C32880 = C32598 * ce;
    const double C32629 = std::pow(C32628, 2);
    const double C32683 = C32628 * be;
    const double C32681 = C32628 * ae;
    const double C32550 = std::pow(C31520, -1);
    const double C32871 = std::pow(C31520, -2);
    const double C31526 = 2 * C31519;
    const double C140 = (std::pow((2 * p * q) / (p + q), 2) * bs[2] *
                         (xP - xQ) * (zP - zQ) * std::pow(ae, 2)) /
                        C31519;
    const double C32875 = C31519 * C31520;
    const double C32874 = 4 * C31519;
    const double C31528 = C31523 / C31514;
    const double C31527 = C31521 / C31514;
    const double C32864 = std::pow(C32537, 2);
    const double C32539 = C32536 * C31517;
    const double C31658 = C31650 / C31514;
    const double C32641 = C32640 * C31517;
    const double C32883 = std::pow(C32721, 2);
    const double C31661 = C31655 / C31514;
    const double C31854 = C31782 * C31851;
    const double C31863 = C31773 * C31851;
    const double C31870 = C31763 * C31851;
    const double C31883 = C31796 * C31851;
    const double C31900 = C31818 * C31851;
    const double C31769 = C31763 * C31766;
    const double C31775 = C31773 * C31766;
    const double C31785 = C31782 * C31766;
    const double C31800 = C31796 * C31766;
    const double C31824 = C31818 * C31766;
    const double C31768 = C31764 * C31765;
    const double C31760 = C31759 / C31756;
    const double C126 = (-(bs[1] * C31766 * C31759) / C31756) / C31514;
    const double C127 = (-(bs[1] * C31851 * C31759) / C31756) / C31514;
    const double C120 = -(C31758 * bs[1] * C31759) / C31756;
    const double C247 = -(C31927 * bs[1] * C31759) / C31756;
    const double C352 = -(C31757 * bs[1] * C31759) / C31756;
    const double C32911 = std::pow(C32878, -2);
    const double C32909 = std::pow(C32878, -1);
    const double C32574 = C32573 * C32571;
    const double C32586 = C32585 * C32571;
    const double C32600 = C32599 * C32571;
    const double C32630 = C32629 * C31517;
    const double C32881 = std::pow(C32681, 2);
    const double C31535 = C31516 / C31526;
    const double C31532 = C31515 / C31526;
    const double C31531 = C31513 / C31526;
    const double C31652 = C31598 / C31526;
    const double C31657 = C31648 / C31526;
    const double C31656 = C31647 / C31526;
    const double C32908 = 4 * C32875;
    const double C32907 = C31514 * C32874;
    const double C31533 = 0 - C31528;
    const double C31530 = 0 - C31527;
    const double C32540 = C32539 / C31514;
    const double C31662 = 0 - C31658;
    const double C32642 = C32641 / C31514;
    const double C31665 = 0 - C31661;
    const double C31774 = C31773 * C31768;
    const double C31784 = C31782 * C31768;
    const double C31798 = C31796 * C31768;
    const double C31822 = C31818 * C31768;
    const double C31762 = -C31760;
    const double C31772 = std::pow(C31760, 4);
    const double C31795 = std::pow(C31760, 6);
    const double C141 = (ae * std::pow(C31760, 2) * bs[2] * C31757 * ae +
                         C31758 * std::pow(-C31760, 3) * bs[3] * C31758 *
                             C31757 * std::pow(ae, 2)) /
                        C31519;
    const double C32135 = std::pow(C31760, 2);
    const double C128 =
        (C31758 * std::pow(C31760, 2) * bs[2] * C31766) / C31514;
    const double C129 =
        (C31758 * std::pow(C31760, 2) * bs[2] * C31851) / C31514 -
        (ae * bs[1] * C31759) / (C31756 * C31514);
    const double C32575 = C32574 / C32572;
    const double C32587 = C32586 / C32572;
    const double C32601 = C32600 / C32572;
    const double C32631 = C32630 / C31514;
    const double C31538 = C31533 * ae;
    const double C31537 = C31530 * ae;
    const double C32541 = -C32540;
    const double C31666 = C31662 * ae;
    const double C32643 = -C32642;
    const double C31669 = C31665 * ae;
    const double C31767 = std::pow(C31762, 3);
    const double C31781 = std::pow(C31762, 5);
    const double C31817 = std::pow(C31762, 7);
    const double C31777 = C31772 * C31775;
    const double C31776 = C31772 * C31774;
    const double C31852 = C31773 * C31772;
    const double C31865 = C31772 * C31863;
    const double C31803 = C31795 * C31800;
    const double C31802 = C31795 * C31798;
    const double C31887 = C31795 * C31883;
    const double C31901 = C31796 * C31795;
    const double C32137 = C32136 * C32135;
    const double C261 = (C31927 * C32135 * C32136 * C31851) / C31514;
    const double C262 = (C31927 * C32135 * C32136 * C31766) / C31514;
    const double C366 = (C31757 * C32135 * C32136 * C31851) / C31514;
    const double C367 = (C31757 * C32135 * C32136 * C31766) / C31514 -
                        (ae * bs[1] * C31759) / (C31756 * C31514);
    const double C32576 = -C32575;
    const double C32588 = -C32587;
    const double C32602 = -C32601;
    const double C32632 = -C32631;
    const double C31542 = C31538 / C31514;
    const double C31541 = C31537 / C31514;
    const double C32542 = std::exp(C32541);
    const double C31670 = C31666 / C31514;
    const double C32644 = std::exp(C32643);
    const double C31673 = C31669 / C31514;
    const double C31770 = C31767 * C31769;
    const double C31864 = C31763 * C31767;
    const double C31871 = C31767 * C31870;
    const double C277 = ((yP - yQ) * C31767 * C31763 * C31768) / C31519;
    const double C382 = (ae * std::pow(C31760, 2) * bs[2] * C31851 +
                         C31757 * C31767 * C31763 * C31768) /
                        C31519;
    const double C31787 = C31781 * C31785;
    const double C31786 = C31781 * C31784;
    const double C31853 = C31782 * C31781;
    const double C31858 = C31781 * C31854;
    const double C31827 = C31817 * C31824;
    const double C31826 = C31817 * C31822;
    const double C31903 = C31817 * C31900;
    const double C31780 = ae * C31777;
    const double C31779 = C31758 * C31777;
    const double C32265 = C31757 * C31777;
    const double C32291 = C31927 * C31777;
    const double C278 =
        (C31767 * C31763 * C31768 + C31776 * std::pow(yP - yQ, 2)) / C31519;
    const double C31856 = C31758 * C31852;
    const double C31855 = C31852 * ae;
    const double C32143 = C31852 * C31783;
    const double C32237 = C31852 * C31936;
    const double C32267 = C31852 * C31969;
    const double C32292 = C31927 * C31852;
    const double C32374 = C31757 * C31852;
    const double C31873 = C31758 * C31865;
    const double C31943 = C31927 * C31865;
    const double C31967 = ae * C31865;
    const double C31966 = C31757 * C31865;
    const double C31805 = C31803 * C31783;
    const double C31816 = ae * C31803;
    const double C31815 = C31758 * C31803;
    const double C32308 = C31803 * C31936;
    const double C32387 = C31757 * C31803;
    const double C32432 = C31927 * C31803;
    const double C31804 = C31758 * C31802;
    const double C32000 = C31802 * C31936;
    const double C32003 = C31927 * C31802;
    const double C32057 = C31757 * C31802;
    const double C31889 = C31758 * C31887;
    const double C32012 = C31887 * C31936;
    const double C32018 = C31927 * C31887;
    const double C32058 = C31887 * C31969;
    const double C32072 = ae * C31887;
    const double C32071 = C31757 * C31887;
    const double C31906 = C31901 * C31783;
    const double C31905 = C31758 * C31901;
    const double C31904 = C31901 * ae;
    const double C32326 = C31901 * C31936;
    const double C32390 = C31901 * C31969;
    const double C32435 = C31927 * C31901;
    const double C121 = C32137 * C31783 - (bs[1] * C31759) / C31756;
    const double C246 = C31927 * C31758 * C32137;
    const double C248 = C32137 * C31936 - (bs[1] * C31759) / C31756;
    const double C351 = C31757 * C31758 * C32137;
    const double C353 = C32137 * C31969 - (bs[1] * C31759) / C31756;
    const double C696 = C31757 * C31927 * C32137;
    const double C32577 = std::exp(C32576);
    const double C32589 = std::exp(C32588);
    const double C32603 = std::exp(C32602);
    const double C32633 = std::exp(C32632);
    const double C31546 = C31542 - C31532;
    const double C31545 = C31541 - C31531;
    const double C31529 = C31524 * C32542;
    const double C32544 = C32542 * C32537;
    const double C32543 = C32542 / C31520;
    const double C32552 = C32550 * C32542;
    const double C32867 = C32542 * C32538;
    const double C32905 = C32871 * C32542;
    const double C32899 = C32542 * C32864;
    const double C31674 = C31670 - C31657;
    const double C151 = C32644 * C141;
    const double C149 = C32644 * C128;
    const double C989 = C32644 * C262;
    const double C31600 = C31599 * C32644;
    const double C113 = -(2 * ae * be * (zA - zB) * C32644) / (ae + be);
    const double C32722 = C32644 / C31520;
    const double C32724 = C32644 * C32721;
    const double C32731 = C32550 * C32644;
    const double C32893 = C32644 * C32723;
    const double C32919 = C32871 * C32644;
    const double C32917 = C32644 * C32883;
    const double C31677 = C31673 - C31656;
    const double C142 = (C31767 * C31763 * C31768 + ae * C31758 * C31770 +
                         C31758 * (ae * C31770 + C31758 * std::pow(C31760, 4) *
                                                     bs[4] * C31768)) /
                        C31519;
    const double C143 =
        (2 * (ae * C31770 + C31758 * C31776) +
         ae * (C31770 + C31777 * std::pow(C31758, 2)) +
         C31758 * (C31776 + ae * C31758 * C31777 +
                   C31758 * (ae * C31777 +
                             C31758 * std::pow(C31762, 5) * bs[5] * C31768))) /
        C31519;
    const double C276 = ((yP - yQ) * (ae * C31770 + C31758 * C31776)) / C31519;
    const double C381 = (ae * (C31758 * C31767 * C31763 * C31851 +
                               bs[2] * std::pow(C31760, 2) * ae) +
                         C31757 * (ae * C31770 + C31758 * C31776)) /
                        C31519;
    const double C130 =
        (std::pow(C31760, 2) * bs[2] * C31766 + C31770 * C31783) / C31514;
    const double C132 =
        (2 * C31758 * C31770 + C31758 * (C31770 + C31777 * C31783)) / C31514;
    const double C258 = (C31927 * (C31770 + C31777 * C31783)) / C31514;
    const double C260 = (C31927 * C31758 * C31770) / C31514;
    const double C263 = (C32135 * C32136 * C31766 + C31770 * C31936) / C31514;
    const double C365 =
        (C31757 * C31758 * C31770 + C31758 * C32137 * ae) / C31514;
    const double C368 =
        (C32135 * C32136 * C31766 + C31757 * (C31757 * C31770 + C32137 * ae) +
         C31757 * C32137 * ae) /
        C31514;
    const double C701 =
        (C31757 * C31927 * C31770 + C31927 * C32137 * ae) / C31514;
    const double C974 =
        (2 * C31927 * C31770 + C31927 * (C31770 + C31777 * C31936)) / C31514;
    const double C31874 = C31864 * ae;
    const double C32142 = C31758 * C31864;
    const double C32228 = C31927 * C31864;
    const double C32266 = C31757 * C31864;
    const double C363 = (C31757 * (C31770 + C31777 * C31783) +
                         (C32137 + C31864 * C31783) * ae) /
                        C31514;
    const double C1164 = (C31757 * (C31770 + C31777 * C31936) +
                          (C32137 + C31864 * C31936) * ae) /
                         C31514;
    const double C122 =
        2 * C31758 * C32137 + C31758 * (C32137 + C31864 * C31783);
    const double C245 = C31927 * (C32137 + C31864 * C31783);
    const double C350 = C31757 * (C32137 + C31864 * C31783);
    const double C965 =
        2 * C31927 * C32137 + C31927 * (C32137 + C31864 * C31936);
    const double C1152 = C31757 * (C32137 + C31864 * C31936);
    const double C2100 =
        2 * C31757 * C32137 + C31757 * (C32137 + C31864 * C31969);
    const double C383 = (C31767 * C31763 * C31768 + ae * C31757 * C31871 +
                         C31757 * (ae * C31871 + C31757 * C31776)) /
                        C31519;
    const double C711 =
        (ae * C31927 * C31871 + C31757 * C31927 * C31776) / C31519;
    const double C131 =
        (C32135 * C32136 * C31851 + C31758 * (C31758 * C31871 + C32137 * ae) +
         C31758 * C32137 * ae) /
        C31514;
    const double C259 = (C31927 * (C31758 * C31871 + C32137 * ae)) / C31514;
    const double C264 = (C32135 * C32136 * C31851 + C31871 * C31936) / C31514;
    const double C364 = (C31757 * (C31758 * C31871 + C32137 * ae)) / C31514;
    const double C369 = (C32135 * C32136 * C31851 + C31871 * C31969) / C31514;
    const double C702 = (C31757 * C31927 * C31871) / C31514;
    const double C973 =
        (2 * C31927 * C31871 + C31927 * (C31871 + C31865 * C31936)) / C31514;
    const double C1163 = (C31757 * (C31871 + C31865 * C31936)) / C31514;
    const double C2108 =
        (2 * C31757 * C31871 + C31757 * (C31871 + C31865 * C31969)) / C31514;
    const double C991 = C32644 * C277;
    const double C31789 = C31787 * C31783;
    const double C31794 = ae * C31787;
    const double C31793 = C31758 * C31787;
    const double C32304 = C31787 * C31936;
    const double C32307 = C31927 * C31787;
    const double C32373 = C31757 * C31787;
    const double C975 =
        (3 * (C31770 + C31777 * C31936) +
         C31927 * (2 * C31927 * C31777 + C31927 * (C31777 + C31787 * C31936))) /
        C31514;
    const double C31788 = C31758 * C31786;
    const double C31968 = C31757 * C31786;
    const double C31991 = C31927 * C31786;
    const double C983 = (2 * C31927 * C31776 +
                         C31927 * (C31776 + C31786 * std::pow(C31927, 2))) /
                        C31519;
    const double C984 =
        (3 * (C31776 + C31786 * C31936) +
         C31927 * (2 * C31927 * C31786 + C31927 * (C31786 + C31802 * C31936))) /
        C31519;
    const double C1179 = (ae * (C31871 + C31865 * C31936) +
                          C31757 * (C31776 + C31786 * C31936)) /
                         C31519;
    const double C2118 = (2 * (ae * C31871 + C31757 * C31776) +
                          ae * (C31871 + C31865 * std::pow(C31757, 2)) +
                          C31757 * (C31776 + ae * C31757 * C31865 +
                                    C31757 * (ae * C31865 + C31757 * C31786))) /
                         C31519;
    const double C31857 = C31853 * C31783;
    const double C31885 = C31758 * C31853;
    const double C31884 = C31853 * ae;
    const double C32318 = C31853 * C31936;
    const double C32325 = C31927 * C31853;
    const double C32375 = C31853 * C31969;
    const double C32388 = C31757 * C31853;
    const double C31860 = C31758 * C31858;
    const double C31949 = C31858 * C31936;
    const double C31971 = C31858 * C31969;
    const double C31992 = C31927 * C31858;
    const double C32056 = ae * C31858;
    const double C32055 = C31757 * C31858;
    const double C31829 = C31827 * C31783;
    const double C31828 = C31758 * C31826;
    const double C32004 = C31826 * C31936;
    const double C32073 = C31757 * C31826;
    const double C32116 = C31927 * C31826;
    const double C31907 = C31758 * C31903;
    const double C32019 = C31903 * C31936;
    const double C32075 = C31903 * C31969;
    const double C32117 = C31927 * C31903;
    const double C265 = (C31758 * C31770 + C31779 * C31936) / C31514;
    const double C999 = C32644 * C278;
    const double C31878 = C31856 * ae;
    const double C32146 = 2 * C31856;
    const double C32231 = C31927 * C31856;
    const double C32273 = C31757 * C31856;
    const double C32144 = C31864 + C32143;
    const double C32238 = C31864 + C32237;
    const double C32269 = C31864 + C32267;
    const double C32317 = 2 * C32292;
    const double C32347 = C31757 * C32292;
    const double C32346 = C32292 * ae;
    const double C32379 = 2 * C32374;
    const double C32377 = C32374 * ae;
    const double C1180 = (C31927 * C31776 + ae * C31757 * C31943 +
                          C31757 * (ae * C31943 + C31757 * C31927 * C31786)) /
                         C31519;
    const double C1166 = (C31927 * C31871 + C31943 * C31969) / C31514;
    const double C31807 = C31787 + C31805;
    const double C31823 = 2 * C31815;
    const double C31821 = ae * C31815;
    const double C32335 = C31815 * C31936;
    const double C32408 = C31927 * C31815;
    const double C32418 = C31757 * C31815;
    const double C32310 = C31787 + C32308;
    const double C32436 = C31757 * C32432;
    const double C32001 = C31786 + C32000;
    const double C32005 = 2 * C32003;
    const double C32035 = C31757 * C32003;
    const double C32013 = C31858 + C32012;
    const double C32020 = 2 * C32018;
    const double C32036 = C32018 * C31969;
    const double C32115 = ae * C32018;
    const double C32114 = C31757 * C32018;
    const double C32062 = C31858 + C32058;
    const double C32079 = 2 * C32071;
    const double C32077 = ae * C32071;
    const double C31909 = C31853 + C31906;
    const double C31908 = C31905 * ae;
    const double C32362 = C31905 * C31936;
    const double C32411 = C31927 * C31905;
    const double C32420 = C31905 * C31969;
    const double C32328 = C31853 + C32326;
    const double C32394 = C31853 + C32390;
    const double C32438 = C32435 * C31969;
    const double C32910 = C32577 * C32876;
    const double C110 =
        (C32577 * std::pow(C32876, 2)) / C32877 + C32577 / C32878;
    const double C112 = C32911 * C32577;
    const double C473 = C32909 * C32577;
    const double C32912 = C32589 * C32879;
    const double C239 =
        (C32589 * std::pow(C32879, 2)) / C32877 + C32589 / C32878;
    const double C241 = C32911 * C32589;
    const double C471 = C32909 * C32589;
    const double C32913 = C32603 * C32880;
    const double C345 =
        (C32603 * std::pow(C32880, 2)) / C32877 + C32603 / C32878;
    const double C347 = C32911 * C32603;
    const double C585 = C32909 * C32603;
    const double C32682 = C32633 / C31520;
    const double C32684 = C32633 * C32681;
    const double C32691 = C32550 * C32633;
    const double C32887 = C32633 * C32683;
    const double C32916 = C32871 * C32633;
    const double C32914 = C32633 * C32881;
    const double C31551 = C31546 / C31520;
    const double C31550 = C31512 * C31546;
    const double C31549 = C31545 + C31522;
    const double C31536 = C31529 / C31519;
    const double C31534 = 2 * C31529;
    const double C32545 = C32544 * C32538;
    const double C32551 = C32544 / C31526;
    const double C32868 = C32550 * C32544;
    const double C32866 = C32544 / C31514;
    const double C826 = (C32542 * std::pow(C32538, 2)) / C31519 + C32543;
    const double C32553 = C32552 * C32538;
    const double C32872 = C32537 * C32552;
    const double C32870 = 2 * C32552;
    const double C32920 = C32552 / C32874;
    const double C106 = C32552 / C32908;
    const double C17571 = C32552 / C31520;
    const double C32901 = C32867 / C31514;
    const double C827 = (-2 * C32550 * C32867) / C31514;
    const double C32933 = C32899 / C31519;
    const double C31679 = C31674 / C31520;
    const double C31678 = C31597 * C31674;
    const double C31632 = 2 * C31600;
    const double C31654 = C31600 / C31519;
    const double C1819 =
        ((0 * ae) / C31514 - C31600 / C31519) / C31520 + (0 * ae) / C31514;
    const double C3484 =
        ((C32644 - (C31597 * 2 * C31600) / C31514) * ae) / C31514 -
        C31598 / C31526;
    const double C3485 = (0 * ae) / C31514 - C31600 / C31519;
    const double C152 = C113 * C121;
    const double C150 = C113 * C129;
    const double C148 = C113 * C120;
    const double C493 = C113 * C246;
    const double C605 = C113 * C351;
    const double C996 = C113 * C248;
    const double C990 = C113 * C261;
    const double C988 = C113 * C247;
    const double C1695 = C113 * C696;
    const double C10220 = (C32644 * std::pow(C32723, 2)) / C31519 + C32722;
    const double C32725 = C32724 * C32723;
    const double C32730 = C32724 / C31526;
    const double C32886 = C32724 / C31514;
    const double C32884 = C32550 * C32724;
    const double C1818 =
        (((C32644 - (C31597 * 2 * C31600) / C31514) * ae) / C31514 -
         C31598 / C31526) /
            C31520 +
        ((C31597 * ((0 * ae) / C31514 - C31600 / C31519) + C32731) * ae) /
            C31514;
    const double C32732 = C32731 * C32723;
    const double C32897 = C32721 * C32731;
    const double C32896 = 2 * C32731;
    const double C32932 = C32731 / C32874;
    const double C11963 = C32731 / C32908;
    const double C24235 = C32731 / C31520;
    const double C32928 = C32893 / C31514;
    const double C10221 = (-2 * C32550 * C32893) / C31514;
    const double C32940 = C32917 / C31519;
    const double C31683 = C31677 + C31649;
    const double C155 = C32644 * C142;
    const double C159 = C32644 * C143;
    const double C492 = C32644 * C276;
    const double C604 = C32644 * C381;
    const double C3494 = C32731 * C381;
    const double C20440 = C32731 * C381;
    const double C153 = C32644 * C130;
    const double C157 = C32644 * C132;
    const double C490 = C32644 * C258;
    const double C494 = C32644 * C260;
    const double C997 = C32644 * C263;
    const double C606 = C32644 * C365;
    const double C3490 = C32731 * C365;
    const double C20436 = C32731 * C365;
    const double C1696 = C32644 * C701;
    const double C4494 = C32731 * C701;
    const double C21462 = C32731 * C701;
    const double C1015 = C32644 * C974;
    const double C31875 = C31873 + C31874;
    const double C32268 = C32265 + C31874;
    const double C2109 =
        (2 * (C31757 * C31770 + C32137 * ae) +
         C31757 * (C31770 + C31757 * (C31757 * C31777 + C31874) +
                   C31757 * C31864 * ae) +
         (C32137 + C31864 * C31969) * ae) /
        C31514;
    const double C370 =
        (C31758 * C31770 + C31757 * (C31757 * C31779 + C32142 * ae) +
         C31757 * C32142 * ae) /
        C31514;
    const double C703 =
        (C31757 * C31927 * C31779 + C31927 * C32142 * ae) / C31514;
    const double C249 = C31758 * C32137 + C32142 * C31936;
    const double C354 = C31758 * C32137 + C32142 * C31969;
    const double C697 = C31757 * C31927 * C32142;
    const double C964 =
        2 * C31927 * C32142 + C31927 * (C32142 + C31856 * C31936);
    const double C1151 = C31757 * (C32142 + C31856 * C31936);
    const double C2099 =
        2 * C31757 * C32142 + C31757 * (C32142 + C31856 * C31969);
    const double C1165 =
        (C31927 * C31770 + C31757 * (C31757 * C31927 * C31777 + C32228 * ae) +
         C31757 * C32228 * ae) /
        C31514;
    const double C2643 =
        (2 * (C31757 * C32291 + C32228 * ae) +
         C31757 * (C32291 + C31757 * (C31757 * C31927 * C31787 + C32292 * ae) +
                   C31757 * C32292 * ae) +
         (C32228 + C32292 * C31969) * ae) /
        C31514;
    const double C1153 = C31927 * C32137 + C32228 * C31969;
    const double C2640 =
        2 * C31757 * C32228 + C31757 * (C32228 + C32292 * C31969);
    const double C602 = C32644 * C363;
    const double C3498 = C32731 * C363;
    const double C20444 = C32731 * C363;
    const double C1688 = C32644 * C1164;
    const double C4520 = C32731 * C1164;
    const double C21470 = C32731 * C1164;
    const double C156 = C113 * C122;
    const double C489 = C113 * C245;
    const double C601 = C113 * C350;
    const double C1014 = C113 * C965;
    const double C1687 = C113 * C1152;
    const double C1694 = C32644 * C711;
    const double C4498 = C32731 * C711;
    const double C21466 = C32731 * C711;
    const double C154 = C113 * C131;
    const double C491 = C113 * C259;
    const double C998 = C113 * C264;
    const double C603 = C113 * C364;
    const double C1693 = C113 * C702;
    const double C1012 = C113 * C973;
    const double C1685 = C113 * C1163;
    const double C31791 = C31777 + C31789;
    const double C31806 = C31794 + C31804;
    const double C31799 = 2 * C31793;
    const double C31797 = ae * C31793;
    const double C32272 = C31757 * C31793;
    const double C32295 = C31927 * C31793;
    const double C972 =
        (2 * C31927 * C31779 + C31927 * (C31779 + C31793 * C31936)) / C31514;
    const double C977 =
        (3 * (C31779 + C31793 * C31936) +
         C31927 * (2 * C31927 * C31793 + C31927 * (C31793 + C31815 * C31936))) /
        C31514;
    const double C1162 = (C31757 * (C31779 + C31793 * C31936) +
                          (C32142 + C31856 * C31936) * ae) /
                         C31514;
    const double C32305 = C31777 + C32304;
    const double C32309 = 2 * C32307;
    const double C32345 = C31757 * C32307;
    const double C32376 = C32373 + C31855;
    const double C6279 = C32644 * C975;
    const double C31790 = C31780 + C31788;
    const double C31970 = C31967 + C31968;
    const double C1013 = C32644 * C983;
    const double C6281 = C32644 * C984;
    const double C1686 = C32644 * C1179;
    const double C4516 = C32731 * C1179;
    const double C21474 = C32731 * C1179;
    const double C31859 = C31852 + C31857;
    const double C31888 = C31885 * ae;
    const double C31902 = 2 * C31885;
    const double C32241 = C31885 * C31936;
    const double C32274 = C31885 * C31969;
    const double C32296 = C31927 * C31885;
    const double C32419 = C31757 * C31885;
    const double C31890 = C31889 + C31884;
    const double C32392 = C32387 + C31884;
    const double C32319 = C31852 + C32318;
    const double C32327 = 2 * C32325;
    const double C32348 = C32325 * C31969;
    const double C32434 = C31757 * C32325;
    const double C32433 = C32325 * ae;
    const double C32378 = C31852 + C32375;
    const double C32395 = 2 * C32388;
    const double C32393 = C32388 * ae;
    const double C31861 = C31860 + C31855;
    const double C31950 = C31865 + C31949;
    const double C31972 = C31865 + C31971;
    const double C32011 = 2 * C31992;
    const double C32034 = ae * C31992;
    const double C32033 = C31757 * C31992;
    const double C2649 =
        (2 * (ae * C31943 + C31757 * C31991) + ae * (C31943 + C31992 * C31969) +
         C31757 * (C31991 + ae * C31757 * C31992 +
                   C31757 * (ae * C31992 + C31757 * C31927 * C31802))) /
        C31519;
    const double C2644 =
        (2 * C31757 * C31943 + C31757 * (C31943 + C31992 * C31969)) / C31514;
    const double C32060 = C32056 + C32057;
    const double C32061 = 2 * C32055;
    const double C32059 = ae * C32055;
    const double C31831 = C31803 + C31829;
    const double C31830 = C31816 + C31828;
    const double C32006 = C31802 + C32004;
    const double C32078 = C32072 + C32073;
    const double C32119 = C31757 * C32116;
    const double C31910 = C31907 + C31904;
    const double C32021 = C31887 + C32019;
    const double C32080 = C31887 + C32075;
    const double C32121 = C32117 * C31969;
    const double C837 = C32644 * C265;
    const double C2107 =
        (2 * (C31757 * C31779 + C32142 * ae) +
         C31757 * (C31779 + C31757 * (C31757 * C31793 + C31878) +
                   C31757 * C31856 * ae) +
         (C32142 + C31856 * C31969) * ae) /
        C31514;
    const double C1167 =
        (C31927 * C31779 + C31757 * (C31757 * C31927 * C31793 + C32231 * ae) +
         C31757 * C32231 * ae) /
        C31514;
    const double C1154 = C31927 * C32142 + C32231 * C31969;
    const double C123 = 3 * (C32137 + C31864 * C31783) +
                        C31758 * (2 * C32142 + C31758 * C32144);
    const double C244 = C31927 * (2 * C32142 + C31758 * C32144);
    const double C250 = C32137 + C31864 * C31783 + C32144 * C31936;
    const double C349 = C31757 * (2 * C32142 + C31758 * C32144);
    const double C355 = C32137 + C31864 * C31783 + C32144 * C31969;
    const double C698 = C31757 * C31927 * C32144;
    const double C1171 =
        (C31770 + C31777 * C31936 +
         C31757 * (C31757 * (C31777 + C31787 * C31936) + C32238 * ae) +
         C31757 * C32238 * ae) /
        C31514;
    const double C1671 =
        (C31757 * (2 * C31927 * C31777 + C31927 * (C31777 + C31787 * C31936)) +
         (2 * C32228 + C31927 * C32238) * ae) /
        C31514;
    const double C966 = 3 * (C32137 + C31864 * C31936) +
                        C31927 * (2 * C32228 + C31927 * C32238);
    const double C1156 = C32137 + C31864 * C31936 + C32238 * C31969;
    const double C1668 = C31757 * (2 * C32228 + C31927 * C32238);
    const double C2101 = 3 * (C32137 + C31864 * C31969) +
                         C31757 * (2 * C32266 + C31757 * C32269);
    const double C5298 = C32731 * C1180;
    const double C6894 = C32919 * C1180;
    const double C11246 = C32919 * C1180;
    const double C22285 = C32731 * C1180;
    const double C31809 = C31758 * C31807;
    const double C31819 = 3 * C31807;
    const double C31814 = ae * C31807;
    const double C32279 = C31757 * C31807;
    const double C32299 = C31927 * C31807;
    const double C31825 = C31802 + C31821;
    const double C32336 = C31793 + C32335;
    const double C32412 = C31757 * C32408;
    const double C32311 = C31927 * C32310;
    const double C32353 = C31757 * C32310;
    const double C6269 =
        (4 * (2 * C31991 + C31927 * C32001) +
         C31927 *
             (3 * C32001 + C31927 * (2 * C31927 * C31802 +
                                     C31927 * (C31802 + C31826 * C31936)))) /
        C31519;
    const double C32014 = C31927 * C32013;
    const double C32017 = 3 * C32013;
    const double C32041 = ae * C32013;
    const double C32040 = C31757 * C32013;
    const double C32038 = C31992 + C32036;
    const double C32120 = 2 * C32114;
    const double C32118 = ae * C32114;
    const double C32065 = C31757 * C32062;
    const double C32074 = 3 * C32062;
    const double C32070 = ae * C32062;
    const double C32081 = C31802 + C32077;
    const double C31912 = C31758 * C31909;
    const double C31911 = C31909 * ae;
    const double C32245 = C31909 * C31936;
    const double C32281 = C31909 * C31969;
    const double C32300 = C31927 * C31909;
    const double C32363 = C31885 + C32362;
    const double C32413 = C32411 * C31969;
    const double C32423 = C31885 + C32420;
    const double C32329 = C31927 * C32328;
    const double C32356 = C32328 * C31969;
    const double C32397 = C31757 * C32394;
    const double C32441 = C32325 + C32438;
    const double C111 = (2 * C32909 * C32910) / C32572;
    const double C472 = C32910 / C32572;
    const double C240 = (2 * C32909 * C32912) / C32572;
    const double C470 = C32912 / C32572;
    const double C346 = (2 * C32909 * C32913) / C32572;
    const double C584 = C32913 / C32572;
    const double C5421 = (C32633 * std::pow(C32683, 2)) / C31519 + C32682;
    const double C32685 = C32684 * C32683;
    const double C32690 = C32684 / C31526;
    const double C32885 = C32684 / C31514;
    const double C32882 = C32550 * C32684;
    const double C32692 = C32691 * C32683;
    const double C32891 = C32681 * C32691;
    const double C32890 = 2 * C32691;
    const double C32926 = C32691 / C32874;
    const double C6199 = C32691 / C32908;
    const double C17574 = C32691 / C31520;
    const double C32922 = C32887 / C31514;
    const double C5422 = (-2 * C32550 * C32887) / C31514;
    const double C32938 = C32914 / C31519;
    const double C31555 = C31550 + 0;
    const double C31554 = C31549 / C31520;
    const double C31540 = C31525 - C31536;
    const double C31539 = C31512 * C31534;
    const double C834 =
        ((-C31534 / C31514) / C31520 - (0 * be) / C31514) / C31520 -
        (0 * be) / C31514;
    const double C6200 = -C31534 / C31514;
    const double C15780 = (-C31534 / C31514) / C31520 - (0 * be) / C31514;
    const double C32546 = C32545 / C31519;
    const double C32902 = 2 * C32868;
    const double C32554 = C32553 / C31514;
    const double C32906 = C32872 / C31526;
    const double C32934 = C32866 - C32901;
    const double C15773 = -C32901;
    const double C32948 = C32933 + C32543;
    const double C31684 = C31678 + 0;
    const double C31651 = C31597 * C31632;
    const double C10224 =
        ((-C31598 / C31514) / C31520 -
         ((C32644 - (C31597 * C31632) / C31514) * be) / C31514) /
            C31520 -
        ((C31597 * ((-C31632 / C31514) / C31520 - (0 * be) / C31514) + C32731) *
         be) /
            C31514;
    const double C10225 =
        ((-C31632 / C31514) / C31520 - (0 * be) / C31514) / C31520 -
        (0 * be) / C31514;
    const double C20431 = (-C31632 / C31514) / C31520 - (0 * be) / C31514;
    const double C31664 = C31660 - C31654;
    const double C6893 = C1819 * C1166;
    const double C3503 = C3484 * C122;
    const double C3499 = C3484 * C131;
    const double C3495 = C3484 * C121;
    const double C3491 = C3484 * C129;
    const double C3487 = C3484 * C120;
    const double C3887 = C3484 * C246;
    const double C3883 = C3484 * C259;
    const double C3879 = C3484 * C245;
    const double C4053 = C3484 * C351;
    const double C4049 = C3484 * C364;
    const double C4045 = C3484 * C350;
    const double C4521 = C3484 * C248;
    const double C4517 = C3484 * C264;
    const double C4495 = C3484 * C261;
    const double C4491 = C3484 * C247;
    const double C5303 = C3484 * C696;
    const double C5299 = C3484 * C702;
    const double C8624 = C3484 * C965;
    const double C8620 = C3484 * C973;
    const double C9389 = C3484 * C1152;
    const double C9385 = C3484 * C1163;
    const double C3497 = C3485 * C350;
    const double C3493 = C3485 * C364;
    const double C3489 = C3485 * C351;
    const double C4519 = C3485 * C1152;
    const double C4515 = C3485 * C1163;
    const double C4497 = C3485 * C702;
    const double C4493 = C3485 * C696;
    const double C5297 = C3485 * C1166;
    const double C169 = C150 + C151;
    const double C168 = C148 + C149;
    const double C1017 = C990 + C991;
    const double C1016 = C988 + C989;
    const double C10262 = C10220 * C132;
    const double C10256 = C10220 * C143;
    const double C10246 = C10220 * C142;
    const double C10240 = C10220 * C130;
    const double C10234 = C10220 * C141;
    const double C10228 = C10220 * C128;
    const double C10674 = C10220 * C260;
    const double C10668 = C10220 * C276;
    const double C10662 = C10220 * C258;
    const double C10856 = C10220 * C365;
    const double C10850 = C10220 * C381;
    const double C10844 = C10220 * C363;
    const double C11270 = C10220 * C974;
    const double C11264 = C10220 * C983;
    const double C11254 = C10220 * C278;
    const double C11248 = C10220 * C263;
    const double C11242 = C10220 * C277;
    const double C11236 = C10220 * C262;
    const double C11553 = C10220 * C265;
    const double C11885 = C10220 * C701;
    const double C11879 = C10220 * C711;
    const double C11873 = C10220 * C1164;
    const double C11867 = C10220 * C1179;
    const double C32726 = C32725 / C31519;
    const double C3508 = C32886 * C143;
    const double C3504 = C32886 * C132;
    const double C3500 = C32886 * C142;
    const double C3496 = C32886 * C130;
    const double C3492 = C32886 * C141;
    const double C3488 = C32886 * C128;
    const double C3888 = C32886 * C260;
    const double C3884 = C32886 * C276;
    const double C3880 = C32886 * C258;
    const double C4054 = C32886 * C365;
    const double C4050 = C32886 * C381;
    const double C4046 = C32886 * C363;
    const double C4522 = C32886 * C263;
    const double C4518 = C32886 * C278;
    const double C4514 = C32886 * C265;
    const double C4496 = C32886 * C277;
    const double C4492 = C32886 * C262;
    const double C5304 = C32886 * C701;
    const double C5300 = C32886 * C711;
    const double C8625 = C32886 * C974;
    const double C8621 = C32886 * C983;
    const double C9390 = C32886 * C1164;
    const double C9386 = C32886 * C1179;
    const double C9602 = C32886 * C975;
    const double C9598 = C32886 * C984;
    const double C1817 =
        (((0 - (C31597 * C31598) / C31514) * ae) / C31514 - (0 * be) / C31526) /
            C31520 +
        ((C31597 * (((C32644 - (C31597 * 2 * C31600) / C31514) * ae) / C31514 -
                    C31598 / C31526) +
          C32886) *
         ae) /
            C31514 +
        (0 * ae) / C31514 - C31600 / C31519;
    const double C32918 = 2 * C32884;
    const double C1835 = C1818 * C350;
    const double C1829 = C1818 * C364;
    const double C1823 = C1818 * C351;
    const double C6903 = C1818 * C1163;
    const double C6897 = C1818 * C1152;
    const double C6891 = C1818 * C702;
    const double C6885 = C1818 * C696;
    const double C7548 = C1818 * C1166;
    const double C32733 = C32732 / C31514;
    const double C32931 = C32897 / C31526;
    const double C25331 = C24235 * C1180;
    const double C32945 = C32886 - C32928;
    const double C20428 = -C32928;
    const double C10242 = C10221 * C363;
    const double C10236 = C10221 * C381;
    const double C10230 = C10221 * C365;
    const double C11256 = C10221 * C1179;
    const double C11250 = C10221 * C1164;
    const double C11244 = C10221 * C711;
    const double C11238 = C10221 * C701;
    const double C11877 = C10221 * C1180;
    const double C32952 = C32940 + C32722;
    const double C31687 = C31683 / C31520;
    const double C170 = C152 + C153;
    const double C502 = C493 + C494;
    const double C1018 = C996 + C997;
    const double C614 = C605 + C606;
    const double C1700 = C1695 + C1696;
    const double C133 =
        (2 * (C31758 * C31871 + C32137 * ae) +
         C31758 * (C31871 + C31758 * C31875 + C31758 * C31864 * ae) +
         (C32137 + C31864 * C31783) * ae) /
        C31514;
    const double C257 =
        (C31927 * (C31871 + C31758 * C31875 + C32142 * ae)) / C31514;
    const double C266 =
        (C31758 * C31871 + C32137 * ae + C31875 * C31936) / C31514;
    const double C362 =
        (C31757 * (C31871 + C31758 * C31875 + C32142 * ae)) / C31514;
    const double C371 =
        (C31758 * C31871 + C32137 * ae + C31875 * C31969) / C31514;
    const double C704 = (C31757 * C31927 * C31875) / C31514;
    const double C2110 =
        (3 * (C31770 + C31757 * C32268 + C32266 * ae) +
         C31757 * (2 * C32268 +
                   C31757 * (C31777 + C31757 * (C31757 * C31787 + C31855) +
                             C31757 * C31852 * ae) +
                   C32269 * ae) +
         (2 * C32266 + C31757 * C32269) * ae) /
        C31514;
    const double C1826 = C32919 * C370;
    const double C4052 = C32731 * C370;
    const double C10232 = C32919 * C370;
    const double C10854 = C10221 * C370;
    const double C20998 = C32731 * C370;
    const double C24245 = C24235 * C370;
    const double C1514 = C32644 * C703;
    const double C3886 = C32731 * C703;
    const double C5094 = C32886 * C703;
    const double C10672 = C10221 * C703;
    const double C13205 = C10220 * C703;
    const double C20832 = C32731 * C703;
    const double C836 = C113 * C249;
    const double C4513 = C3484 * C249;
    const double C1825 = C1819 * C354;
    const double C2479 = C1818 * C354;
    const double C4051 = C3485 * C354;
    const double C1513 = C113 * C697;
    const double C2293 = C1818 * C697;
    const double C3885 = C3485 * C697;
    const double C5093 = C3484 * C697;
    const double C1010 = C113 * C964;
    const double C8616 = C3484 * C964;
    const double C1505 = C113 * C1151;
    const double C4511 = C3485 * C1151;
    const double C7218 = C1818 * C1151;
    const double C9183 = C3484 * C1151;
    const double C2477 = C1819 * C2099;
    const double C5302 = C32731 * C1165;
    const double C6888 = C32919 * C1165;
    const double C11240 = C32919 * C1165;
    const double C11883 = C10221 * C1165;
    const double C22289 = C32731 * C1165;
    const double C25325 = C24235 * C1165;
    const double C7553 = C32919 * C2643;
    const double C11881 = C32919 * C2643;
    const double C14397 = C32932 * C2643;
    const double C26135 = C24235 * C2643;
    const double C28085 = C32932 * C2643;
    const double C5301 = C3485 * C1153;
    const double C6887 = C1819 * C1153;
    const double C7554 = C1818 * C1153;
    const double C7552 = C1819 * C2640;
    const double C172 = C156 + C157;
    const double C500 = C489 + C490;
    const double C612 = C601 + C602;
    const double C1025 = C1014 + C1015;
    const double C1698 = C1687 + C1688;
    const double C171 = C154 + C155;
    const double C501 = C491 + C492;
    const double C1019 = C998 + C999;
    const double C613 = C603 + C604;
    const double C1699 = C1693 + C1694;
    const double C134 = (3 * (C31770 + C31777 * C31783) +
                         C31758 * (2 * C31779 + C31758 * C31791)) /
                        C31514;
    const double C256 = (C31927 * (2 * C31779 + C31758 * C31791)) / C31514;
    const double C267 = (C31770 + C31777 * C31783 + C31791 * C31936) / C31514;
    const double C361 = (C31757 * (2 * C31779 + C31758 * C31791) +
                         (2 * C32142 + C31758 * C32144) * ae) /
                        C31514;
    const double C372 =
        (C31770 + C31777 * C31783 + C31757 * (C31757 * C31791 + C32144 * ae) +
         C31757 * C32144 * ae) /
        C31514;
    const double C705 =
        (C31757 * C31927 * C31791 + C31927 * C32144 * ae) / C31514;
    const double C970 =
        (2 * C31927 * C31791 + C31927 * (C31791 + C31807 * C31936)) / C31514;
    const double C31808 = C31758 * C31806;
    const double C31813 = 2 * C31806;
    const double C31976 = C31757 * C31806;
    const double C31994 = C31927 * C31806;
    const double C31801 = C31786 + C31797;
    const double C32275 = C32272 + C31878;
    const double C1011 = C32644 * C972;
    const double C8617 = C32886 * C972;
    const double C6464 = C32644 * C977;
    const double C1506 = C32644 * C1162;
    const double C4512 = C32731 * C1162;
    const double C9184 = C32886 * C1162;
    const double C11555 = C10221 * C1162;
    const double C21292 = C32731 * C1162;
    const double C6266 =
        (4 * (2 * C32291 + C31927 * C32305) +
         C31927 *
             (3 * C32305 + C31927 * (2 * C31927 * C31787 +
                                     C31927 * (C31787 + C31803 * C31936)))) /
        C31514;
    const double C32349 = C32345 + C32346;
    const double C32380 = C31757 * C32376;
    const double C32386 = 2 * C32376;
    const double C144 =
        (3 * (C31776 + ae * C31779 + C31758 * C31790) +
         ae * (2 * C31779 + C31758 * C31791) +
         C31758 *
             (2 * C31790 + ae * C31791 +
              C31758 * (C31786 + ae * C31758 * C31787 +
                        C31758 * (ae * C31787 + C31758 * std::pow(C31760, 6) *
                                                    bs[6] * C31768)))) /
        C31519;
    const double C275 =
        ((yP - yQ) * (C31776 + ae * C31779 + C31758 * C31790)) / C31519;
    const double C279 =
        (ae * C31770 + C31758 * C31776 + C31790 * std::pow(yP - yQ, 2)) /
        C31519;
    const double C380 = (ae * (C31767 * C31763 * C31851 +
                               C31758 * (C31758 * C31865 + C31864 * ae) +
                               C31758 * C31864 * ae) +
                         C31757 * (C31776 + ae * C31779 + C31758 * C31790)) /
                        C31519;
    const double C384 = (ae * C31770 + C31758 * C31776 + ae * C31757 * C31875 +
                         C31757 * (ae * C31875 + C31757 * C31790)) /
                        C31519;
    const double C712 =
        (ae * C31927 * C31875 + C31757 * C31927 * C31790) / C31519;
    const double C982 = (2 * C31927 * C31790 +
                         C31927 * (C31790 + C31806 * std::pow(C31927, 2))) /
                        C31519;
    const double C1024 = C1012 + C1013;
    const double C1697 = C1685 + C1686;
    const double C31886 = C31859 * ae;
    const double C32147 = C31758 * C31859;
    const double C32152 = 3 * C31859;
    const double C32234 = C31927 * C31859;
    const double C32280 = C31757 * C31859;
    const double C1160 = (C31757 * (C31791 + C31807 * C31936) +
                          (C32144 + C31859 * C31936) * ae) /
                         C31514;
    const double C963 =
        2 * C31927 * C32144 + C31927 * (C32144 + C31859 * C31936);
    const double C1150 = C31757 * (C32144 + C31859 * C31936);
    const double C2098 =
        2 * C31757 * C32144 + C31757 * (C32144 + C31859 * C31969);
    const double C32421 = C32418 + C31888;
    const double C32242 = C31856 + C32241;
    const double C32276 = C31856 + C32274;
    const double C32361 = 2 * C32296;
    const double C32410 = C31757 * C32296;
    const double C32409 = C32296 * ae;
    const double C2645 =
        (2 * (C31757 * C32295 + C32231 * ae) +
         C31757 * (C32295 + C31757 * (C31757 * C31927 * C31815 + C32296 * ae) +
                   C31757 * C32296 * ae) +
         (C32231 + C32296 * C31969) * ae) /
        C31514;
    const double C2641 =
        2 * C31757 * C32231 + C31757 * (C32231 + C32296 * C31969);
    const double C32424 = 2 * C32419;
    const double C32422 = C32419 * ae;
    const double C31891 = C31758 * C31890;
    const double C31899 = 2 * C31890;
    const double C31952 = C31890 * C31936;
    const double C31977 = C31890 * C31969;
    const double C31995 = C31927 * C31890;
    const double C32101 = ae * C31890;
    const double C32100 = C31757 * C31890;
    const double C32396 = C31757 * C32392;
    const double C32320 = C31927 * C32319;
    const double C32324 = 3 * C32319;
    const double C32355 = C31757 * C32319;
    const double C32354 = C32319 * ae;
    const double C7057 =
        (2 * (C31757 * C32305 + C32238 * ae) +
         C31757 * (C32305 + C31757 * (C31757 * C32310 + C32319 * ae) +
                   C31757 * C32319 * ae) +
         (C32238 + C32319 * C31969) * ae) /
        C31514;
    const double C7053 =
        2 * C31757 * C32238 + C31757 * (C32238 + C32319 * C31969);
    const double C32350 = C32292 + C32348;
    const double C32439 = 2 * C32434;
    const double C32437 = C32434 * ae;
    const double C32440 = C32436 + C32433;
    const double C32381 = C31757 * C32378;
    const double C32391 = 3 * C32378;
    const double C32389 = C32378 * ae;
    const double C31877 = C31758 * C31861;
    const double C31882 = 2 * C31861;
    const double C31945 = C31927 * C31861;
    const double C31975 = ae * C31861;
    const double C31974 = C31757 * C31861;
    const double C1178 = (ae * (C31875 + C31861 * C31936) +
                          C31757 * (C31790 + C31806 * C31936)) /
                         C31519;
    const double C2117 = (2 * (ae * C31875 + C31757 * C31790) +
                          ae * (C31875 + C31861 * std::pow(C31757, 2)) +
                          C31757 * (C31790 + ae * C31757 * C31861 +
                                    C31757 * (ae * C31861 + C31757 * C31806))) /
                         C31519;
    const double C971 =
        (2 * C31927 * C31875 + C31927 * (C31875 + C31861 * C31936)) / C31514;
    const double C1161 = (C31757 * (C31875 + C31861 * C31936)) / C31514;
    const double C2106 =
        (2 * C31757 * C31875 + C31757 * (C31875 + C31861 * C31969)) / C31514;
    const double C1183 =
        (C31776 + C31786 * C31936 + ae * C31757 * C31950 +
         C31757 * (ae * C31950 + C31757 * (C31786 + C31802 * C31936))) /
        C31519;
    const double C1677 =
        (ae * (2 * C31943 + C31927 * C31950) +
         C31757 * (2 * C31927 * C31786 + C31927 * (C31786 + C31802 * C31936))) /
        C31519;
    const double C976 = (3 * (C31871 + C31865 * C31936) +
                         C31927 * (2 * C31943 + C31927 * C31950)) /
                        C31514;
    const double C1172 = (C31871 + C31865 * C31936 + C31950 * C31969) / C31514;
    const double C1672 = (C31757 * (2 * C31943 + C31927 * C31950)) / C31514;
    const double C7056 =
        (2 * C31757 * C31950 + C31757 * (C31950 + C32013 * C31969)) / C31514;
    const double C2119 =
        (3 * (C31776 + ae * C31966 + C31757 * C31970) +
         ae * (2 * C31966 + C31757 * C31972) +
         C31757 * (2 * C31970 + ae * C31972 +
                   C31757 * (C31786 + ae * C31757 * C31858 +
                             C31757 * (ae * C31858 + C31757 * C31802)))) /
        C31519;
    const double C2111 = (3 * (C31871 + C31865 * C31969) +
                          C31757 * (2 * C31966 + C31757 * C31972)) /
                         C31514;
    const double C32037 = C32034 + C32035;
    const double C7547 = C32919 * C2649;
    const double C11875 = C32919 * C2649;
    const double C14405 = C32932 * C2649;
    const double C26129 = C24235 * C2649;
    const double C28093 = C32932 * C2649;
    const double C7546 = C1819 * C2644;
    const double C32064 = C31757 * C32060;
    const double C32069 = 2 * C32060;
    const double C32063 = C31786 + C32059;
    const double C31833 = C31758 * C31831;
    const double C979 =
        (3 * (C31791 + C31807 * C31936) +
         C31927 * (2 * C31927 * C31807 + C31927 * (C31807 + C31831 * C31936))) /
        C31514;
    const double C31832 = C31758 * C31830;
    const double C32027 = C31830 * C31936;
    const double C32093 = C31927 * C31830;
    const double C32102 = C31757 * C31830;
    const double C985 =
        (3 * (C31790 + C31806 * C31936) +
         C31927 * (2 * C31927 * C31806 + C31927 * (C31806 + C31830 * C31936))) /
        C31519;
    const double C32007 = C31927 * C32006;
    const double C32042 = C31757 * C32006;
    const double C7062 =
        (2 * (ae * C31950 + C31757 * C32001) + ae * (C31950 + C32013 * C31969) +
         C31757 * (C32001 + ae * C31757 * C32013 +
                   C31757 * (ae * C32013 + C31757 * C32006))) /
        C31519;
    const double C32082 = C31757 * C32078;
    const double C32123 = C32115 + C32119;
    const double C31913 = C31758 * C31910;
    const double C32048 = C31910 * C31936;
    const double C32094 = C31927 * C31910;
    const double C32103 = C31910 * C31969;
    const double C32022 = C31927 * C32021;
    const double C32043 = C32021 * C31969;
    const double C32083 = C31757 * C32080;
    const double C32124 = C32018 + C32121;
    const double C2478 = C32919 * C2107;
    const double C10852 = C32919 * C2107;
    const double C13519 = C32932 * C2107;
    const double C22413 = C32932 * C2107;
    const double C24865 = C24235 * C2107;
    const double C2292 = C32919 * C1167;
    const double C5092 = C32731 * C1167;
    const double C10670 = C32919 * C1167;
    const double C13203 = C10221 * C1167;
    const double C22071 = C32731 * C1167;
    const double C24683 = C24235 * C1167;
    const double C2291 = C1819 * C1154;
    const double C5091 = C3485 * C1154;
    const double C17256 = C1818 * C1154;
    const double C160 = C113 * C123;
    const double C3517 = C3484 * C123;
    const double C485 = C113 * C244;
    const double C3871 = C3484 * C244;
    const double C840 = C113 * C250;
    const double C4505 = C3484 * C250;
    const double C597 = C113 * C349;
    const double C1853 = C1818 * C349;
    const double C3505 = C3485 * C349;
    const double C4037 = C3484 * C349;
    const double C1837 = C1819 * C355;
    const double C2467 = C1818 * C355;
    const double C4043 = C3485 * C355;
    const double C1509 = C113 * C698;
    const double C2281 = C1818 * C698;
    const double C3877 = C3485 * C698;
    const double C5085 = C3484 * C698;
    const double C6900 = C32919 * C1171;
    const double C9388 = C32731 * C1171;
    const double C11252 = C32919 * C1171;
    const double C11871 = C10221 * C1171;
    const double C22281 = C32731 * C1171;
    const double C25351 = C24235 * C1171;
    const double C6650 = C32644 * C1671;
    const double C8623 = C32731 * C1671;
    const double C10106 = C32886 * C1671;
    const double C11268 = C10221 * C1671;
    const double C21490 = C32731 * C1671;
    const double C6278 = C113 * C966;
    const double C9601 = C3484 * C966;
    const double C6899 = C1819 * C1156;
    const double C7542 = C1818 * C1156;
    const double C9387 = C3485 * C1156;
    const double C6649 = C113 * C1668;
    const double C6915 = C1818 * C1668;
    const double C8622 = C3485 * C1668;
    const double C10105 = C3484 * C1668;
    const double C31811 = C31799 + C31809;
    const double C6453 =
        (4 * (2 * C32295 + C31927 * C32336) +
         C31927 * (3 * C32336 +
                   C31927 * (2 * C31927 * C31815 +
                             C31927 * (C31815 + C31758 * C31827 * C31936)))) /
        C31514;
    const double C32312 = C32309 + C32311;
    const double C6283 = C32644 * C6269;
    const double C32015 = C32011 + C32014;
    const double C7059 = (3 * (C31943 + C31992 * C31969) +
                          C31757 * (2 * C32033 + C31757 * C32038)) /
                         C31514;
    const double C32122 = C32003 + C32118;
    const double C32067 = C32061 + C32065;
    const double C31914 = C31902 + C31912;
    const double C32246 = C31859 + C32245;
    const double C32283 = C31859 + C32281;
    const double C32364 = C31927 * C32363;
    const double C32415 = C32296 + C32413;
    const double C32426 = C31757 * C32423;
    const double C32330 = C32327 + C32329;
    const double C32358 = C32319 + C32356;
    const double C32399 = C32395 + C32397;
    const double C32443 = C31757 * C32441;
    const double C32686 = C32685 / C31519;
    const double C32915 = 2 * C32882;
    const double C32693 = C32692 / C31514;
    const double C32925 = C32891 / C31526;
    const double C32942 = C32885 - C32922;
    const double C15051 = -C32922;
    const double C32951 = C32938 + C32682;
    const double C31558 = C31555 * be;
    const double C31544 = C31512 * C31540;
    const double C31572 = C31540 / C31520;
    const double C31543 = C31539 / C31514;
    const double C32547 = C32543 - C32546;
    const double C32935 = C32902 / C31514;
    const double C32555 = C32551 - C32554;
    const double C32949 = C32934 / C31520;
    const double C31688 = C31684 * be;
    const double C31659 = C31651 / C31514;
    const double C10259 = C10224 * C349;
    const double C10241 = C10224 * C350;
    const double C10235 = C10224 * C364;
    const double C10229 = C10224 * C351;
    const double C10671 = C10224 * C697;
    const double C10659 = C10224 * C698;
    const double C10853 = C10224 * C354;
    const double C10841 = C10224 * C355;
    const double C11267 = C10224 * C1668;
    const double C11255 = C10224 * C1163;
    const double C11249 = C10224 * C1152;
    const double C11243 = C10224 * C702;
    const double C11237 = C10224 * C696;
    const double C11554 = C10224 * C1151;
    const double C11882 = C10224 * C1153;
    const double C11876 = C10224 * C1166;
    const double C11870 = C10224 * C1156;
    const double C13202 = C10224 * C1154;
    const double C10243 = C10225 * C355;
    const double C10231 = C10225 * C354;
    const double C10669 = C10225 * C1154;
    const double C10851 = C10225 * C2099;
    const double C11251 = C10225 * C1156;
    const double C11245 = C10225 * C1166;
    const double C11239 = C10225 * C1153;
    const double C11880 = C10225 * C2640;
    const double C11874 = C10225 * C2644;
    const double C20451 = C20431 * C349;
    const double C20443 = C20431 * C350;
    const double C20439 = C20431 * C364;
    const double C20435 = C20431 * C351;
    const double C20831 = C20431 * C697;
    const double C20823 = C20431 * C698;
    const double C20997 = C20431 * C354;
    const double C20989 = C20431 * C355;
    const double C21291 = C20431 * C1151;
    const double C21489 = C20431 * C1668;
    const double C21473 = C20431 * C1163;
    const double C21469 = C20431 * C1152;
    const double C21465 = C20431 * C702;
    const double C21461 = C20431 * C696;
    const double C22070 = C20431 * C1154;
    const double C22288 = C20431 * C1153;
    const double C22284 = C20431 * C1166;
    const double C22280 = C20431 * C1156;
    const double C31668 = C31597 * C31664;
    const double C31697 = C31664 / C31520;
    const double C6924 = C6893 + C6894;
    const double C3524 = C3497 + C3498;
    const double C3522 = C3493 + C3494;
    const double C3520 = C3489 + C3490;
    const double C4537 = C4519 + C4520;
    const double C4535 = C4515 + C4516;
    const double C4526 = C4497 + C4498;
    const double C4524 = C4493 + C4494;
    const double C5305 = C5297 + C5298;
    const double C1027 = C1017 * C826;
    const double C5539 = C1017 * C32948;
    const double C6273 = C1017 * C32542;
    const double C7775 = C1017 * C32866;
    const double C15881 = C1017 * C15773;
    const double C6272 = C1016 * C6200;
    const double C32727 = C32722 - C32726;
    const double C3527 = C3503 + C3504;
    const double C3525 = C3499 + C3500;
    const double C3523 = C3495 + C3496;
    const double C3521 = C3491 + C3492;
    const double C3519 = C3487 + C3488;
    const double C3900 = C3887 + C3888;
    const double C3898 = C3883 + C3884;
    const double C3896 = C3879 + C3880;
    const double C4066 = C4053 + C4054;
    const double C4064 = C4049 + C4050;
    const double C4062 = C4045 + C4046;
    const double C4538 = C4521 + C4522;
    const double C4536 = C4517 + C4518;
    const double C4525 = C4495 + C4496;
    const double C4523 = C4491 + C4492;
    const double C5308 = C5303 + C5304;
    const double C5306 = C5299 + C5300;
    const double C8637 = C8624 + C8625;
    const double C8635 = C8620 + C8621;
    const double C9394 = C9389 + C9390;
    const double C9392 = C9385 + C9386;
    const double C1855 = C1817 * C122;
    const double C1839 = C1817 * C131;
    const double C1833 = C1817 * C121;
    const double C1827 = C1817 * C129;
    const double C1821 = C1817 * C120;
    const double C2295 = C1817 * C246;
    const double C2289 = C1817 * C259;
    const double C2283 = C1817 * C245;
    const double C2481 = C1817 * C351;
    const double C2475 = C1817 * C364;
    const double C2469 = C1817 * C350;
    const double C6917 = C1817 * C965;
    const double C6911 = C1817 * C973;
    const double C6901 = C1817 * C264;
    const double C6895 = C1817 * C248;
    const double C6889 = C1817 * C261;
    const double C6883 = C1817 * C247;
    const double C7216 = C1817 * C249;
    const double C7556 = C1817 * C696;
    const double C7550 = C1817 * C702;
    const double C7544 = C1817 * C1152;
    const double C7538 = C1817 * C1163;
    const double C17258 = C1817 * C697;
    const double C32941 = C32918 / C31514;
    const double C32734 = C32730 - C32733;
    const double C32955 = C32945 / C31520;
    const double C20454 = C20428 * C143;
    const double C20450 = C20428 * C132;
    const double C20446 = C20428 * C142;
    const double C20442 = C20428 * C130;
    const double C20438 = C20428 * C141;
    const double C20434 = C20428 * C128;
    const double C20834 = C20428 * C260;
    const double C20830 = C20428 * C276;
    const double C20826 = C20428 * C258;
    const double C21000 = C20428 * C365;
    const double C20996 = C20428 * C381;
    const double C20992 = C20428 * C363;
    const double C21290 = C20428 * C265;
    const double C21492 = C20428 * C974;
    const double C21488 = C20428 * C983;
    const double C21484 = C20428 * C972;
    const double C21472 = C20428 * C278;
    const double C21468 = C20428 * C263;
    const double C21464 = C20428 * C277;
    const double C21460 = C20428 * C262;
    const double C22073 = C20428 * C703;
    const double C22065 = C20428 * C1162;
    const double C22291 = C20428 * C701;
    const double C22287 = C20428 * C711;
    const double C22283 = C20428 * C1164;
    const double C22279 = C20428 * C1179;
    const double C27373 = C20428 * C975;
    const double C27369 = C20428 * C984;
    const double C27877 = C20428 * C1671;
    const double C10223 =
        ((-(0 * be) / C31514) / C31520 -
         ((0 - (C31597 * C31598) / C31514) * be) / C31514) /
            C31520 -
        ((C31597 * ((-C31598 / C31514) / C31520 -
                    ((C32644 - (C31597 * C31632) / C31514) * be) / C31514) +
          C20428) *
         be) /
            C31514 +
        (-C31632 / C31514) / C31520 - (0 * be) / C31514;
    const double C1856 = C32952 * C132;
    const double C1850 = C32952 * C143;
    const double C1840 = C32952 * C142;
    const double C1834 = C32952 * C130;
    const double C1828 = C32952 * C141;
    const double C1822 = C32952 * C128;
    const double C2296 = C32952 * C260;
    const double C2290 = C32952 * C276;
    const double C2284 = C32952 * C258;
    const double C2482 = C32952 * C365;
    const double C2476 = C32952 * C381;
    const double C2470 = C32952 * C363;
    const double C6918 = C32952 * C974;
    const double C6912 = C32952 * C983;
    const double C6902 = C32952 * C278;
    const double C6896 = C32952 * C263;
    const double C6890 = C32952 * C277;
    const double C6884 = C32952 * C262;
    const double C7217 = C32952 * C265;
    const double C7557 = C32952 * C701;
    const double C7551 = C32952 * C711;
    const double C7545 = C32952 * C1164;
    const double C7539 = C32952 * C1179;
    const double C17259 = C32952 * C703;
    const double C6457 = C502 * C6200;
    const double C7776 = C502 * C31540;
    const double C15882 = C502 * C15780;
    const double C6274 = C1018 * C6200;
    const double C6654 = C1700 * C6200;
    const double C158 = C113 * C133;
    const double C1849 = C1817 * C133;
    const double C3507 = C3484 * C133;
    const double C487 = C113 * C257;
    const double C2277 = C1817 * C257;
    const double C3875 = C3484 * C257;
    const double C838 = C113 * C266;
    const double C4509 = C3484 * C266;
    const double C7222 = C1817 * C266;
    const double C599 = C113 * C362;
    const double C1841 = C1818 * C362;
    const double C2463 = C1817 * C362;
    const double C3501 = C3485 * C362;
    const double C4041 = C3484 * C362;
    const double C10247 = C10224 * C362;
    const double C20447 = C20431 * C362;
    const double C1831 = C1819 * C371;
    const double C2473 = C1818 * C371;
    const double C4047 = C3485 * C371;
    const double C10237 = C10225 * C371;
    const double C10847 = C10224 * C371;
    const double C20993 = C20431 * C371;
    const double C1511 = C113 * C704;
    const double C2287 = C1818 * C704;
    const double C3881 = C3485 * C704;
    const double C5089 = C3484 * C704;
    const double C10665 = C10224 * C704;
    const double C17252 = C1817 * C704;
    const double C20827 = C20431 * C704;
    const double C848 = C836 + C837;
    const double C4534 = C4513 + C4514;
    const double C1859 = C1825 + C1826;
    const double C4065 = C4051 + C4052;
    const double C1522 = C1513 + C1514;
    const double C3899 = C3885 + C3886;
    const double C5102 = C5093 + C5094;
    const double C5307 = C5301 + C5302;
    const double C6921 = C6887 + C6888;
    const double C7567 = C7552 + C7553;
    const double C994 = C500 * C834;
    const double C8026 = C500 * C31540;
    const double C16132 = C500 * C15780;
    const double C6276 = C1025 * C6200;
    const double C6652 = C1698 * C6200;
    const double C993 = C501 * C827;
    const double C1338 = C501 * C826;
    const double C5818 = C501 * C32948;
    const double C6458 = C501 * C32542;
    const double C7777 = C501 * C32552;
    const double C8025 = C501 * C32866;
    const double C15883 = C501 * C32552;
    const double C16131 = C501 * C15773;
    const double C1029 = C1019 * C826;
    const double C5545 = C1019 * C32948;
    const double C6275 = C1019 * C32542;
    const double C7779 = C1019 * C32866;
    const double C15885 = C1019 * C15773;
    const double C1703 = C1699 * C826;
    const double C6131 = C1699 * C32948;
    const double C6653 = C1699 * C32542;
    const double C8312 = C1699 * C32866;
    const double C16412 = C1699 * C15773;
    const double C161 = C32644 * C134;
    const double C3518 = C32886 * C134;
    const double C20464 = C20428 * C134;
    const double C486 = C32644 * C256;
    const double C3872 = C32886 * C256;
    const double C20818 = C20428 * C256;
    const double C841 = C32644 * C267;
    const double C4506 = C32886 * C267;
    const double C21304 = C20428 * C267;
    const double C598 = C32644 * C361;
    const double C3506 = C32731 * C361;
    const double C4038 = C32886 * C361;
    const double C10260 = C10221 * C361;
    const double C20452 = C32731 * C361;
    const double C20984 = C20428 * C361;
    const double C1838 = C32919 * C372;
    const double C4044 = C32731 * C372;
    const double C10244 = C32919 * C372;
    const double C10842 = C10221 * C372;
    const double C20990 = C32731 * C372;
    const double C24257 = C24235 * C372;
    const double C1510 = C32644 * C705;
    const double C3878 = C32731 * C705;
    const double C5086 = C32886 * C705;
    const double C10660 = C10221 * C705;
    const double C20824 = C32731 * C705;
    const double C23925 = C20428 * C705;
    const double C1007 = C32644 * C970;
    const double C31820 = C31813 + C31814;
    const double C31810 = C31801 + C31808;
    const double C1023 = C1010 + C1011;
    const double C8633 = C8616 + C8617;
    const double C1518 = C1505 + C1506;
    const double C4533 = C4511 + C4512;
    const double C9188 = C9183 + C9184;
    const double C6285 = C32644 * C6266;
    const double C32382 = C31777 + C32380;
    const double C163 = C32644 * C144;
    const double C3514 = C32886 * C144;
    const double C20460 = C20428 * C144;
    const double C488 = C32644 * C275;
    const double C2278 = C32952 * C275;
    const double C3876 = C32886 * C275;
    const double C10656 = C10220 * C275;
    const double C20822 = C20428 * C275;
    const double C839 = C32644 * C279;
    const double C4510 = C32886 * C279;
    const double C7223 = C32952 * C279;
    const double C11559 = C10220 * C279;
    const double C21294 = C20428 * C279;
    const double C600 = C32644 * C380;
    const double C2464 = C32952 * C380;
    const double C3502 = C32731 * C380;
    const double C4042 = C32886 * C380;
    const double C10248 = C10221 * C380;
    const double C10838 = C10220 * C380;
    const double C20448 = C32731 * C380;
    const double C20988 = C20428 * C380;
    const double C1832 = C32919 * C384;
    const double C4048 = C32731 * C384;
    const double C10238 = C32919 * C384;
    const double C10848 = C10221 * C384;
    const double C20994 = C32731 * C384;
    const double C24251 = C24235 * C384;
    const double C1512 = C32644 * C712;
    const double C3882 = C32731 * C712;
    const double C5090 = C32886 * C712;
    const double C10666 = C10221 * C712;
    const double C13199 = C10220 * C712;
    const double C17253 = C32952 * C712;
    const double C20828 = C32731 * C712;
    const double C22069 = C20428 * C712;
    const double C1009 = C32644 * C982;
    const double C8613 = C32886 * C982;
    const double C21480 = C20428 * C982;
    const double C1034 = C1024 * C826;
    const double C5554 = C1024 * C32948;
    const double C6277 = C1024 * C32542;
    const double C7783 = C1024 * C32866;
    const double C15889 = C1024 * C15773;
    const double C1701 = C1697 * C826;
    const double C6125 = C1697 * C32948;
    const double C6651 = C1697 * C32542;
    const double C8308 = C1697 * C32866;
    const double C16408 = C1697 * C15773;
    const double C32282 = C32279 + C31886;
    const double C2105 =
        (2 * (C31757 * C31791 + C32144 * ae) +
         C31757 * (C31791 + C31757 * (C31757 * C31807 + C31886) +
                   C31757 * C31859 * ae) +
         (C32144 + C31859 * C31969) * ae) /
        C31514;
    const double C32148 = C32146 + C32147;
    const double C1169 =
        (C31927 * C31791 + C31757 * (C31757 * C31927 * C31807 + C32234 * ae) +
         C31757 * C32234 * ae) /
        C31514;
    const double C2647 =
        (2 * (C31757 * C32299 + C32234 * ae) +
         C31757 * (C32299 + C31757 * (C31757 * C31927 * C31831 + C32300 * ae) +
                   C31757 * C32300 * ae) +
         (C32234 + C32300 * C31969) * ae) /
        C31514;
    const double C1155 = C31927 * C32144 + C32234 * C31969;
    const double C2642 =
        2 * C31757 * C32234 + C31757 * (C32234 + C32300 * C31969);
    const double C1502 = C32644 * C1160;
    const double C4504 = C32731 * C1160;
    const double C21302 = C32731 * C1160;
    const double C1006 = C113 * C963;
    const double C1501 = C113 * C1150;
    const double C4503 = C3485 * C1150;
    const double C21301 = C20431 * C1150;
    const double C2465 = C1819 * C2098;
    const double C10839 = C10225 * C2098;
    const double C32425 = C31757 * C32421;
    const double C1173 =
        (C31779 + C31793 * C31936 +
         C31757 * (C31757 * (C31793 + C31815 * C31936) + C32242 * ae) +
         C31757 * C32242 * ae) /
        C31514;
    const double C1673 =
        (C31757 * (2 * C31927 * C31793 + C31927 * (C31793 + C31815 * C31936)) +
         (2 * C32231 + C31927 * C32242) * ae) /
        C31514;
    const double C6553 =
        (C31757 * (3 * C32336 +
                   C31927 * (2 * C31927 * C31815 +
                             C31927 * (C31815 + C31758 * C31827 * C31936))) +
         (3 * C32242 +
          C31927 * (2 * C32296 + C31927 * (C31885 + C31905 * C31936))) *
             ae) /
        C31514;
    const double C7380 =
        (2 * (C31757 * C32336 + C32242 * ae) +
         C31757 * (C32336 +
                   C31757 * (C31757 * (C31815 + C31758 * C31827 * C31936) +
                             C32363 * ae) +
                   C31757 * C32363 * ae) +
         (C32242 + C32363 * C31969) * ae) /
        C31514;
    const double C967 = 3 * (C32142 + C31856 * C31936) +
                        C31927 * (2 * C32231 + C31927 * C32242);
    const double C1157 = C32142 + C31856 * C31936 + C32242 * C31969;
    const double C1669 = C31757 * (2 * C32231 + C31927 * C32242);
    const double C7379 =
        2 * C31757 * C32242 + C31757 * (C32242 + C32363 * C31969);
    const double C2112 =
        (3 * (C31779 + C31757 * C32275 + C32273 * ae) +
         C31757 * (2 * C32275 +
                   C31757 * (C31793 + C31757 * (C31757 * C31815 + C31888) +
                             C31757 * C31885 * ae) +
                   C32276 * ae) +
         (2 * C32273 + C31757 * C32276) * ae) /
        C31514;
    const double C2102 = 3 * (C32142 + C31856 * C31969) +
                         C31757 * (2 * C32273 + C31757 * C32276);
    const double C32414 = C32412 + C32409;
    const double C13201 = C32919 * C2645;
    const double C13895 = C32932 * C2645;
    const double C17255 = C32919 * C2645;
    const double C22789 = C32932 * C2645;
    const double C25923 = C24235 * C2645;
    const double C13200 = C10225 * C2641;
    const double C17254 = C1819 * C2641;
    const double C31892 = C31858 + C31891;
    const double C31953 = C31861 + C31952;
    const double C31979 = C31861 + C31977;
    const double C32047 = 2 * C31995;
    const double C32092 = ae * C31995;
    const double C32091 = C31757 * C31995;
    const double C32106 = 2 * C32100;
    const double C32104 = ae * C32100;
    const double C32398 = C31787 + C32396;
    const double C32321 = C32317 + C32320;
    const double C32357 = C32353 + C32354;
    const double C7541 = C32919 * C7057;
    const double C11869 = C32919 * C7057;
    const double C14415 = C32932 * C7057;
    const double C28103 = C32932 * C7057;
    const double C31485 = C24235 * C7057;
    const double C7540 = C1819 * C7053;
    const double C11868 = C10225 * C7053;
    const double C7058 =
        (3 * (C32291 + C31757 * C32349 + C32347 * ae) +
         C31757 * (2 * C32349 +
                   C31757 * (C32307 +
                             C31757 * (C31757 * C31927 * C31803 + C32325 * ae) +
                             C31757 * C32325 * ae) +
                   C32350 * ae) +
         (2 * C32347 + C31757 * C32350) * ae) /
        C31514;
    const double C7054 = 3 * (C32228 + C32292 * C31969) +
                         C31757 * (2 * C32347 + C31757 * C32350);
    const double C32442 = C31757 * C32440;
    const double C32383 = C32379 + C32381;
    const double C31879 = C31865 + C31877;
    const double C1181 = (C31927 * C31790 + ae * C31757 * C31945 +
                          C31757 * (ae * C31945 + C31757 * C31927 * C31806)) /
                         C31519;
    const double C2650 =
        (2 * (ae * C31945 + C31757 * C31994) + ae * (C31945 + C31995 * C31969) +
         C31757 * (C31994 + ae * C31757 * C31995 +
                   C31757 * (ae * C31995 + C31757 * C31927 * C31830))) /
        C31519;
    const double C1168 = (C31927 * C31875 + C31945 * C31969) / C31514;
    const double C2646 =
        (2 * C31757 * C31945 + C31757 * (C31945 + C31995 * C31969)) / C31514;
    const double C31978 = C31975 + C31976;
    const double C1504 = C32644 * C1178;
    const double C4508 = C32731 * C1178;
    const double C9180 = C32886 * C1178;
    const double C11561 = C10221 * C1178;
    const double C21296 = C32731 * C1178;
    const double C22061 = C20428 * C1178;
    const double C2472 = C32919 * C2117;
    const double C10846 = C32919 * C2117;
    const double C13527 = C32932 * C2117;
    const double C22421 = C32932 * C2117;
    const double C24859 = C24235 * C2117;
    const double C1008 = C113 * C971;
    const double C8612 = C3484 * C971;
    const double C1503 = C113 * C1161;
    const double C4507 = C3485 * C1161;
    const double C7224 = C1818 * C1161;
    const double C9179 = C3484 * C1161;
    const double C11560 = C10224 * C1161;
    const double C21295 = C20431 * C1161;
    const double C2471 = C1819 * C2106;
    const double C10845 = C10225 * C2106;
    const double C6906 = C32919 * C1183;
    const double C9384 = C32731 * C1183;
    const double C11258 = C32919 * C1183;
    const double C11865 = C10221 * C1183;
    const double C22277 = C32731 * C1183;
    const double C25345 = C24235 * C1183;
    const double C6648 = C32644 * C1677;
    const double C8619 = C32731 * C1677;
    const double C10102 = C32886 * C1677;
    const double C11262 = C10221 * C1677;
    const double C21486 = C32731 * C1677;
    const double C27873 = C20428 * C1677;
    const double C6280 = C113 * C976;
    const double C9597 = C3484 * C976;
    const double C6905 = C1819 * C1172;
    const double C7536 = C1818 * C1172;
    const double C9383 = C3485 * C1172;
    const double C11257 = C10225 * C1172;
    const double C11864 = C10224 * C1172;
    const double C22276 = C20431 * C1172;
    const double C6647 = C113 * C1672;
    const double C6909 = C1818 * C1672;
    const double C8618 = C3485 * C1672;
    const double C10101 = C3484 * C1672;
    const double C11261 = C10224 * C1672;
    const double C21485 = C20431 * C1672;
    const double C7534 = C1819 * C7056;
    const double C11862 = C10225 * C7056;
    const double C7063 =
        (3 * (C31991 + ae * C32033 + C31757 * C32037) +
         ae * (2 * C32033 + C31757 * C32038) +
         C31757 *
             (2 * C32037 + ae * C32038 +
              C31757 * (C32003 + ae * C31757 * C32018 +
                        C31757 * (ae * C32018 + C31757 * C31927 * C31826)))) /
        C31519;
    const double C7564 = C7546 + C7547;
    const double C32076 = C32069 + C32070;
    const double C32066 = C32063 + C32064;
    const double C31835 = C31823 + C31833;
    const double C31834 = C31825 + C31832;
    const double C32028 = C31806 + C32027;
    const double C32095 = C31757 * C32093;
    const double C32105 = C32101 + C32102;
    const double C6466 = C32644 * C985;
    const double C32008 = C32005 + C32007;
    const double C32044 = C32041 + C32042;
    const double C7535 = C32919 * C7062;
    const double C11863 = C32919 * C7062;
    const double C14407 = C32932 * C7062;
    const double C28095 = C32932 * C7062;
    const double C31479 = C24235 * C7062;
    const double C32084 = C32081 + C32082;
    const double C32125 = C31757 * C32123;
    const double C31915 = C31887 + C31913;
    const double C32049 = C31890 + C32048;
    const double C32096 = C32094 * C31969;
    const double C32107 = C31890 + C32103;
    const double C32023 = C32020 + C32022;
    const double C32045 = C32013 + C32043;
    const double C32085 = C32079 + C32083;
    const double C32126 = C31757 * C32124;
    const double C2492 = C2477 + C2478;
    const double C2306 = C2291 + C2292;
    const double C5101 = C5091 + C5092;
    const double C6288 = C6278 + C6279;
    const double C9609 = C9601 + C9602;
    const double C6927 = C6899 + C6900;
    const double C9393 = C9387 + C9388;
    const double C6658 = C6649 + C6650;
    const double C8636 = C8622 + C8623;
    const double C10110 = C10105 + C10106;
    const double C137 = (4 * (2 * C31779 + C31758 * C31791) +
                         C31758 * (3 * C31791 + C31758 * C31811)) /
                        C31514;
    const double C254 = (C31927 * (3 * C31791 + C31758 * C31811)) / C31514;
    const double C269 =
        (2 * C31779 + C31758 * C31791 + C31811 * C31936) / C31514;
    const double C6267 =
        (5 * (3 * C32305 + C31927 * C32312) +
         C31927 * (4 * C32312 +
                   C31927 * (3 * C32310 +
                             C31927 * (2 * C31927 * C31803 +
                                       C31927 * (C31803 + C31827 * C31936))))) /
        C31514;
    const double C6362 =
        (C31757 * (3 * C32305 + C31927 * C32312) +
         (3 * C32238 +
          C31927 * (2 * C32292 + C31927 * (C31852 + C31853 * C31936))) *
             ae) /
        C31514;
    const double C6265 = (4 * (2 * C31943 + C31927 * C31950) +
                          C31927 * (3 * C31950 + C31927 * C32015)) /
                         C31514;
    const double C6361 = (C31757 * (3 * C31950 + C31927 * C32015)) / C31514;
    const double C6364 =
        (2 * C31943 + C31927 * C31950 + C32015 * C31969) / C31514;
    const double C12095 = (4 * (2 * C31966 + C31757 * C31972) +
                           C31757 * (3 * C31972 + C31757 * C32067)) /
                          C31514;
    const double C31916 = C31914 * ae;
    const double C32153 = C31758 * C31914;
    const double C32286 = C31927 * C31914;
    const double C1175 =
        (C31791 + C31807 * C31936 +
         C31757 * (C31757 * (C31807 + C31831 * C31936) + C32246 * ae) +
         C31757 * C32246 * ae) /
        C31514;
    const double C1675 =
        (C31757 * (2 * C31927 * C31807 + C31927 * (C31807 + C31831 * C31936)) +
         (2 * C32234 + C31927 * C32246) * ae) /
        C31514;
    const double C968 = 3 * (C32144 + C31859 * C31936) +
                        C31927 * (2 * C32234 + C31927 * C32246);
    const double C1158 = C32144 + C31859 * C31936 + C32246 * C31969;
    const double C1670 = C31757 * (2 * C32234 + C31927 * C32246);
    const double C2103 = 3 * (C32144 + C31859 * C31969) +
                         C31757 * (2 * C32280 + C31757 * C32283);
    const double C32365 = C32361 + C32364;
    const double C12183 = 3 * (C32231 + C32296 * C31969) +
                          C31757 * (2 * C32410 + C31757 * C32415);
    const double C32428 = C32424 + C32426;
    const double C32331 = C31927 * C32330;
    const double C7055 = 3 * (C32238 + C32319 * C31969) +
                         C31757 * (2 * C32355 + C31757 * C32358);
    const double C32401 = C31757 * C32399;
    const double C32445 = C32439 + C32443;
    const double C32687 = C32682 - C32686;
    const double C32939 = C32915 / C31514;
    const double C32694 = C32690 - C32693;
    const double C32953 = C32942 / C31520;
    const double C31560 = C31558 / C31514;
    const double C31548 = C31544 + C32552;
    const double C31575 = C31572 - C31574;
    const double C5426 = C31572 + (0 * ae) / C31514;
    const double C31547 = C32542 - C31543;
    const double C17705 = C1024 * C32547;
    const double C17696 = C1019 * C32547;
    const double C17690 = C1017 * C32547;
    const double C17969 = C501 * C32547;
    const double C18282 = C1699 * C32547;
    const double C18276 = C1697 * C32547;
    const double C32865 = C32547 * C32537;
    const double C32904 = C32870 + C32547;
    const double C5541 = C501 * C32935;
    const double C17692 = C501 * C32555;
    const double C32873 = C32555 / C31520;
    const double C32869 = C32555 * C32537;
    const double C2750 = C32949 - (C32547 * C32538) / C31514;
    const double C31690 = C31688 / C31514;
    const double C31663 = C32644 - C31659;
    const double C10270 = C10241 + C10242;
    const double C10267 = C10235 + C10236;
    const double C10264 = C10229 + C10230;
    const double C10685 = C10671 + C10672;
    const double C10867 = C10853 + C10854;
    const double C11287 = C11267 + C11268;
    const double C11281 = C11255 + C11256;
    const double C11278 = C11249 + C11250;
    const double C11275 = C11243 + C11244;
    const double C11272 = C11237 + C11238;
    const double C11565 = C11554 + C11555;
    const double C11896 = C11882 + C11883;
    const double C11893 = C11876 + C11877;
    const double C11890 = C11870 + C11871;
    const double C13210 = C13202 + C13203;
    const double C10265 = C10231 + C10232;
    const double C10684 = C10669 + C10670;
    const double C10866 = C10851 + C10852;
    const double C11279 = C11251 + C11252;
    const double C11276 = C11245 + C11246;
    const double C11273 = C11239 + C11240;
    const double C11895 = C11880 + C11881;
    const double C11892 = C11874 + C11875;
    const double C20470 = C20443 + C20444;
    const double C20468 = C20439 + C20440;
    const double C20466 = C20435 + C20436;
    const double C20845 = C20831 + C20832;
    const double C21011 = C20997 + C20998;
    const double C21306 = C21291 + C21292;
    const double C21509 = C21489 + C21490;
    const double C21500 = C21473 + C21474;
    const double C21498 = C21469 + C21470;
    const double C21496 = C21465 + C21466;
    const double C21494 = C21461 + C21462;
    const double C22080 = C22070 + C22071;
    const double C22298 = C22288 + C22289;
    const double C22296 = C22284 + C22285;
    const double C22294 = C22280 + C22281;
    const double C31672 = C31668 + C32731;
    const double C31700 = C31697 - C31699;
    const double C24275 = C32727 * C132;
    const double C24269 = C32727 * C143;
    const double C24259 = C32727 * C142;
    const double C24253 = C32727 * C130;
    const double C24247 = C32727 * C141;
    const double C24241 = C32727 * C128;
    const double C24687 = C32727 * C260;
    const double C24681 = C32727 * C276;
    const double C24675 = C32727 * C258;
    const double C24669 = C32727 * C275;
    const double C24869 = C32727 * C365;
    const double C24863 = C32727 * C381;
    const double C24857 = C32727 * C363;
    const double C24851 = C32727 * C380;
    const double C25355 = C32727 * C263;
    const double C25349 = C32727 * C278;
    const double C25343 = C32727 * C265;
    const double C25337 = C32727 * C279;
    const double C25327 = C32727 * C277;
    const double C25321 = C32727 * C262;
    const double C25927 = C32727 * C703;
    const double C25921 = C32727 * C712;
    const double C26139 = C32727 * C701;
    const double C26133 = C32727 * C711;
    const double C30918 = C32727 * C974;
    const double C30912 = C32727 * C983;
    const double C31489 = C32727 * C1164;
    const double C31483 = C32727 * C1179;
    const double C32894 = C32727 * C32721;
    const double C32930 = C32896 + C32727;
    const double C3535 = C3523 + C3524;
    const double C8606 = C4538 + C4537;
    const double C8607 = C4536 + C4535;
    const double C1854 = C32941 * C361;
    const double C1842 = C32941 * C380;
    const double C1836 = C32941 * C363;
    const double C1830 = C32941 * C381;
    const double C1824 = C32941 * C365;
    const double C2294 = C32941 * C703;
    const double C2288 = C32941 * C712;
    const double C2282 = C32941 * C705;
    const double C2480 = C32941 * C370;
    const double C2474 = C32941 * C384;
    const double C2468 = C32941 * C372;
    const double C6916 = C32941 * C1671;
    const double C6910 = C32941 * C1677;
    const double C6904 = C32941 * C1179;
    const double C6898 = C32941 * C1164;
    const double C6892 = C32941 * C711;
    const double C6886 = C32941 * C701;
    const double C7225 = C32941 * C1178;
    const double C7219 = C32941 * C1162;
    const double C7555 = C32941 * C1165;
    const double C7549 = C32941 * C1180;
    const double C7543 = C32941 * C1171;
    const double C7537 = C32941 * C1183;
    const double C17257 = C32941 * C1167;
    const double C24273 = C32734 * C361;
    const double C24261 = C32734 * C380;
    const double C24255 = C32734 * C363;
    const double C24249 = C32734 * C381;
    const double C24243 = C32734 * C365;
    const double C24685 = C32734 * C703;
    const double C24679 = C32734 * C712;
    const double C24673 = C32734 * C705;
    const double C24867 = C32734 * C370;
    const double C24861 = C32734 * C384;
    const double C24855 = C32734 * C372;
    const double C25353 = C32734 * C1164;
    const double C25347 = C32734 * C1179;
    const double C25341 = C32734 * C1162;
    const double C25335 = C32734 * C1178;
    const double C25329 = C32734 * C711;
    const double C25323 = C32734 * C701;
    const double C25925 = C32734 * C1167;
    const double C26137 = C32734 * C1165;
    const double C26131 = C32734 * C1180;
    const double C30916 = C32734 * C1671;
    const double C30910 = C32734 * C1677;
    const double C31487 = C32734 * C1171;
    const double C31481 = C32734 * C1183;
    const double C32898 = C32734 / C31520;
    const double C32895 = C32734 * C32721;
    const double C13503 = C32955 - (C32727 * C32723) / C31514;
    const double C10261 = C10223 * C122;
    const double C10255 = C10223 * C133;
    const double C10245 = C10223 * C131;
    const double C10239 = C10223 * C121;
    const double C10233 = C10223 * C129;
    const double C10227 = C10223 * C120;
    const double C10673 = C10223 * C246;
    const double C10667 = C10223 * C259;
    const double C10661 = C10223 * C245;
    const double C10655 = C10223 * C257;
    const double C10855 = C10223 * C351;
    const double C10849 = C10223 * C364;
    const double C10843 = C10223 * C350;
    const double C10837 = C10223 * C362;
    const double C11269 = C10223 * C965;
    const double C11263 = C10223 * C973;
    const double C11253 = C10223 * C264;
    const double C11247 = C10223 * C248;
    const double C11241 = C10223 * C261;
    const double C11235 = C10223 * C247;
    const double C11558 = C10223 * C266;
    const double C11552 = C10223 * C249;
    const double C11884 = C10223 * C696;
    const double C11878 = C10223 * C702;
    const double C11872 = C10223 * C1152;
    const double C11866 = C10223 * C1163;
    const double C13204 = C10223 * C697;
    const double C13198 = C10223 * C704;
    const double C1874 = C1855 + C1856;
    const double C1866 = C1839 + C1840;
    const double C1863 = C1833 + C1834;
    const double C1860 = C1827 + C1828;
    const double C1857 = C1821 + C1822;
    const double C2308 = C2295 + C2296;
    const double C2305 = C2289 + C2290;
    const double C2302 = C2283 + C2284;
    const double C2494 = C2481 + C2482;
    const double C2491 = C2475 + C2476;
    const double C2488 = C2469 + C2470;
    const double C6936 = C6917 + C6918;
    const double C6933 = C6911 + C6912;
    const double C6928 = C6901 + C6902;
    const double C6925 = C6895 + C6896;
    const double C6922 = C6889 + C6890;
    const double C6919 = C6883 + C6884;
    const double C7228 = C7216 + C7217;
    const double C7569 = C7556 + C7557;
    const double C7566 = C7550 + C7551;
    const double C7563 = C7544 + C7545;
    const double C7560 = C7538 + C7539;
    const double C17265 = C17258 + C17259;
    const double C173 = C158 + C159;
    const double C1871 = C1849 + C1850;
    const double C3529 = C3507 + C3508;
    const double C6459 = C848 * C6200;
    const double C7780 = C848 * C31540;
    const double C15886 = C848 * C15780;
    const double C8311 = C1522 * C31540;
    const double C16411 = C1522 * C15780;
    const double C4884 = C3899 + C3900;
    const double C4879 = C3900 + C3899;
    const double C6286 = C6274 + C6275;
    const double C174 = C160 + C161;
    const double C3534 = C3517 + C3518;
    const double C498 = C485 + C486;
    const double C3892 = C3871 + C3872;
    const double C850 = C840 + C841;
    const double C4530 = C4505 + C4506;
    const double C610 = C597 + C598;
    const double C3528 = C3505 + C3506;
    const double C4058 = C4037 + C4038;
    const double C10279 = C10259 + C10260;
    const double C20474 = C20451 + C20452;
    const double C1865 = C1837 + C1838;
    const double C4061 = C4043 + C4044;
    const double C10271 = C10243 + C10244;
    const double C10861 = C10841 + C10842;
    const double C21007 = C20989 + C20990;
    const double C1520 = C1509 + C1510;
    const double C3895 = C3877 + C3878;
    const double C5098 = C5085 + C5086;
    const double C10679 = C10659 + C10660;
    const double C20841 = C20823 + C20824;
    const double C145 =
        (4 * (2 * C31790 + ae * C31791 + C31758 * C31810) +
         ae * (3 * C31791 + C31758 * C31811) +
         C31758 * (3 * C31810 + ae * C31811 +
                   C31758 * (2 * C31806 + ae * C31807 +
                             C31758 * (C31802 + ae * C31758 * C31803 +
                                       C31758 * (ae * C31803 +
                                                 C31758 * std::pow(C31762, 7) *
                                                     bs[7] * C31768))))) /
        C31519;
    const double C274 =
        ((yP - yQ) * (2 * C31790 + ae * C31791 + C31758 * C31810)) / C31519;
    const double C280 = (C31776 + ae * C31779 + C31758 * C31790 +
                         C31810 * std::pow(yP - yQ, 2)) /
                        C31519;
    const double C379 =
        (ae * (2 * (C31758 * C31865 + C31864 * ae) +
               C31758 * (C31865 + C31758 * C31861 + C31856 * ae) +
               (C31864 + C31852 * C31783) * ae) +
         C31757 * (2 * C31790 + ae * C31791 + C31758 * C31810)) /
        C31519;
    const double C6461 = C1023 * C6200;
    const double C7784 = C1023 * C31540;
    const double C15890 = C1023 * C15780;
    const double C8307 = C1518 * C31540;
    const double C16407 = C1518 * C15780;
    const double C8608 = C4534 + C4533;
    const double C8982 = C4533 + C4534;
    const double C32384 = C32382 + C32377;
    const double C499 = C487 + C488;
    const double C2299 = C2277 + C2278;
    const double C3894 = C3875 + C3876;
    const double C849 = C838 + C839;
    const double C4532 = C4509 + C4510;
    const double C7231 = C7222 + C7223;
    const double C611 = C599 + C600;
    const double C2485 = C2463 + C2464;
    const double C3526 = C3501 + C3502;
    const double C4060 = C4041 + C4042;
    const double C10273 = C10247 + C10248;
    const double C20472 = C20447 + C20448;
    const double C1862 = C1831 + C1832;
    const double C4063 = C4047 + C4048;
    const double C10268 = C10237 + C10238;
    const double C10864 = C10847 + C10848;
    const double C21009 = C20993 + C20994;
    const double C1521 = C1511 + C1512;
    const double C3897 = C3881 + C3882;
    const double C5100 = C5089 + C5090;
    const double C10682 = C10665 + C10666;
    const double C17262 = C17252 + C17253;
    const double C20843 = C20827 + C20828;
    const double C6287 = C6276 + C6277;
    const double C2114 =
        (3 * (C31791 + C31757 * C32282 + C32280 * ae) +
         C31757 * (2 * C32282 +
                   C31757 * (C31807 + C31757 * (C31757 * C31831 + C31911) +
                             C31757 * C31909 * ae) +
                   C32283 * ae) +
         (2 * C32280 + C31757 * C32283) * ae) /
        C31514;
    const double C2466 = C32919 * C2105;
    const double C10840 = C32919 * C2105;
    const double C13537 = C32932 * C2105;
    const double C22431 = C32932 * C2105;
    const double C24853 = C24235 * C2105;
    const double C359 = (C31757 * (3 * C31791 + C31758 * C31811) +
                         (3 * C32144 + C31758 * C32148) * ae) /
                        C31514;
    const double C374 =
        (2 * C31779 + C31758 * C31791 +
         C31757 * (C31757 * C31811 + C32148 * ae) + C31757 * C32148 * ae) /
        C31514;
    const double C707 =
        (C31757 * C31927 * C31811 + C31927 * C32148 * ae) / C31514;
    const double C124 = 4 * (2 * C32142 + C31758 * C32144) +
                        C31758 * (3 * C32144 + C31758 * C32148);
    const double C243 = C31927 * (3 * C32144 + C31758 * C32148);
    const double C251 = 2 * C32142 + C31758 * C32144 + C32148 * C31936;
    const double C348 = C31757 * (3 * C32144 + C31758 * C32148);
    const double C356 = 2 * C32142 + C31758 * C32144 + C32148 * C31969;
    const double C699 = C31757 * C31927 * C32148;
    const double C1332 =
        2 * C31927 * C32148 + C31927 * (C32148 + C31914 * C31936);
    const double C1494 = C31757 * (C32148 + C31914 * C31936);
    const double C2454 =
        2 * C31757 * C32148 + C31757 * (C32148 + C31914 * C31969);
    const double C2280 = C32919 * C1169;
    const double C5084 = C32731 * C1169;
    const double C10658 = C32919 * C1169;
    const double C23923 = C32731 * C1169;
    const double C24671 = C24235 * C1169;
    const double C2279 = C1819 * C1155;
    const double C5083 = C3485 * C1155;
    const double C10657 = C10225 * C1155;
    const double C23922 = C20431 * C1155;
    const double C1021 = C1006 + C1007;
    const double C1516 = C1501 + C1502;
    const double C4529 = C4503 + C4504;
    const double C21311 = C21301 + C21302;
    const double C32427 = C31793 + C32425;
    const double C7221 = C32919 * C1173;
    const double C9182 = C32731 * C1173;
    const double C11557 = C32919 * C1173;
    const double C22063 = C32731 * C1173;
    const double C25339 = C24235 * C1173;
    const double C8169 = C32644 * C1673;
    const double C8615 = C32731 * C1673;
    const double C21482 = C32731 * C1673;
    const double C6463 = C113 * C967;
    const double C7220 = C1819 * C1157;
    const double C9181 = C3485 * C1157;
    const double C11556 = C10225 * C1157;
    const double C22062 = C20431 * C1157;
    const double C8168 = C113 * C1669;
    const double C8614 = C3485 * C1669;
    const double C21481 = C20431 * C1669;
    const double C14049 = C32932 * C2112;
    const double C22943 = C32932 * C2112;
    const double C12184 =
        (3 * (C32295 + C31757 * C32414 + C32410 * ae) +
         C31757 * (2 * C32414 +
                   C31757 * (C32408 +
                             C31757 * (C31757 * C31927 * C31758 * C31827 +
                                       C32411 * ae) +
                             C31757 * C32411 * ae) +
                   C32415 * ae) +
         (2 * C32410 + C31757 * C32415) * ae) /
        C31514;
    const double C13209 = C13200 + C13201;
    const double C17263 = C17254 + C17255;
    const double C31893 = C31892 + C31888;
    const double C1184 =
        (C31790 + C31806 * C31936 + ae * C31757 * C31953 +
         C31757 * (ae * C31953 + C31757 * (C31806 + C31830 * C31936))) /
        C31519;
    const double C1678 =
        (ae * (2 * C31945 + C31927 * C31953) +
         C31757 * (2 * C31927 * C31806 + C31927 * (C31806 + C31830 * C31936))) /
        C31519;
    const double C978 = (3 * (C31875 + C31861 * C31936) +
                         C31927 * (2 * C31945 + C31927 * C31953)) /
                        C31514;
    const double C1174 = (C31875 + C31861 * C31936 + C31953 * C31969) / C31514;
    const double C1674 = (C31757 * (2 * C31945 + C31927 * C31953)) / C31514;
    const double C2113 = (3 * (C31875 + C31861 * C31969) +
                          C31757 * (2 * C31974 + C31757 * C31979)) /
                         C31514;
    const double C32108 = C31806 + C32104;
    const double C32400 = C32398 + C32393;
    const double C6363 =
        (2 * C32291 + C31927 * C32305 +
         C31757 * (C31757 * C32312 + C32321 * ae) + C31757 * C32321 * ae) /
        C31514;
    const double C7530 =
        (2 * (C31757 * C32312 + C32321 * ae) +
         C31757 * (C32312 +
                   C31757 * (C31757 * (2 * C31927 * C31803 +
                                       C31927 * (C31803 + C31827 * C31936)) +
                             C32330 * ae) +
                   C31757 * C32330 * ae) +
         (C32321 + C32330 * C31969) * ae) /
        C31514;
    const double C6263 = 4 * (2 * C32228 + C31927 * C32238) +
                         C31927 * (3 * C32238 + C31927 * C32321);
    const double C6358 = C31757 * (3 * C32238 + C31927 * C32321);
    const double C6359 = 2 * C32228 + C31927 * C32238 + C32321 * C31969;
    const double C7529 =
        2 * C31757 * C32321 + C31757 * (C32321 + C32330 * C31969);
    const double C7060 =
        (3 * (C32305 + C31757 * C32357 + C32355 * ae) +
         C31757 * (2 * C32357 +
                   C31757 * (C32310 +
                             C31757 * (C31757 * (C31803 + C31827 * C31936) +
                                       C32328 * ae) +
                             C31757 * C32328 * ae) +
                   C32358 * ae) +
         (2 * C32355 + C31757 * C32358) * ae) /
        C31514;
    const double C7561 = C7540 + C7541;
    const double C11889 = C11868 + C11869;
    const double C14935 = C32932 * C7058;
    const double C28623 = C32932 * C7058;
    const double C32444 = C32307 + C32442;
    const double C12093 = 4 * (2 * C32266 + C31757 * C32269) +
                          C31757 * (3 * C32269 + C31757 * C32383);
    const double C31880 = C31879 + C31878;
    const double C2286 = C32919 * C1181;
    const double C5088 = C32731 * C1181;
    const double C10664 = C32919 * C1181;
    const double C13197 = C10221 * C1181;
    const double C17251 = C32941 * C1181;
    const double C22067 = C32731 * C1181;
    const double C24677 = C24235 * C1181;
    const double C25919 = C32734 * C1181;
    const double C13195 = C32919 * C2650;
    const double C13887 = C32932 * C2650;
    const double C17249 = C32919 * C2650;
    const double C22781 = C32932 * C2650;
    const double C25917 = C24235 * C2650;
    const double C2285 = C1819 * C1168;
    const double C5087 = C3485 * C1168;
    const double C10663 = C10225 * C1168;
    const double C13196 = C10224 * C1168;
    const double C17250 = C1818 * C1168;
    const double C22066 = C20431 * C1168;
    const double C13194 = C10225 * C2646;
    const double C17248 = C1819 * C2646;
    const double C2120 =
        (3 * (C31790 + ae * C31974 + C31757 * C31978) +
         ae * (2 * C31974 + C31757 * C31979) +
         C31757 * (2 * C31978 + ae * C31979 +
                   C31757 * (C31806 + ae * C31757 * C31890 +
                             C31757 * (ae * C31890 + C31757 * C31830)))) /
        C31519;
    const double C1022 = C1008 + C1009;
    const double C8631 = C8612 + C8613;
    const double C1517 = C1503 + C1504;
    const double C4531 = C4507 + C4508;
    const double C9186 = C9179 + C9180;
    const double C11568 = C11560 + C11561;
    const double C21308 = C21295 + C21296;
    const double C2489 = C2471 + C2472;
    const double C10863 = C10845 + C10846;
    const double C6289 = C6280 + C6281;
    const double C9607 = C9597 + C9598;
    const double C6930 = C6905 + C6906;
    const double C9391 = C9383 + C9384;
    const double C11282 = C11257 + C11258;
    const double C11887 = C11864 + C11865;
    const double C22292 = C22276 + C22277;
    const double C6657 = C6647 + C6648;
    const double C8634 = C8618 + C8619;
    const double C10108 = C10101 + C10102;
    const double C11284 = C11261 + C11262;
    const double C21507 = C21485 + C21486;
    const double C14927 = C32932 * C7063;
    const double C28615 = C32932 * C7063;
    const double C12099 =
        (4 * (2 * C31970 + ae * C31972 + C31757 * C32066) +
         ae * (3 * C31972 + C31757 * C32067) +
         C31757 *
             (3 * C32066 + ae * C32067 +
              C31757 * (2 * C32060 + ae * C32062 +
                        C31757 * (C31802 + ae * C31757 * C31887 +
                                  C31757 * (ae * C31887 + C31757 * C31826))))) /
        C31519;
    const double C31837 = C31758 * C31835;
    const double C1333 =
        (2 * C31927 * C31811 + C31927 * (C31811 + C31835 * C31936)) / C31514;
    const double C1495 = (C31757 * (C31811 + C31835 * C31936) +
                          (C32148 + C31914 * C31936) * ae) /
                         C31514;
    const double C31836 = C31758 * C31834;
    const double C31983 = C31757 * C31834;
    const double C31997 = C31927 * C31834;
    const double C981 = (2 * C31927 * C31810 +
                         C31927 * (C31810 + C31834 * std::pow(C31927, 2))) /
                        C31519;
    const double C986 =
        (3 * (C31810 + C31834 * C31936) +
         C31927 * (2 * C31927 * C31834 +
                   C31927 * (C31834 + (C31826 + ae * C31758 * C31827 +
                                       C31758 * (ae * C31827 +
                                                 C31758 * std::pow(C31760, 8) *
                                                     bs[8] * C31768)) *
                                          C31936))) /
        C31519;
    const double C6455 =
        (4 * (2 * C31994 + C31927 * C32028) +
         C31927 * (3 * C32028 +
                   C31927 * (2 * C31927 * C31830 +
                             C31927 * (C31830 + (ae * C31827 +
                                                 C31758 * std::pow(C31760, 8) *
                                                     bs[8] * C31768) *
                                                    C31936)))) /
        C31519;
    const double C6555 =
        (ae * (3 * C31953 +
               C31927 * (2 * C31995 + C31927 * (C31890 + C31910 * C31936))) +
         C31757 * (3 * C32028 +
                   C31927 * (2 * C31927 * C31830 +
                             C31927 * (C31830 + (ae * C31827 +
                                                 C31758 * std::pow(C31760, 8) *
                                                     bs[8] * C31768) *
                                                    C31936)))) /
        C31519;
    const double C32097 = C32092 + C32095;
    const double C32109 = C31757 * C32105;
    const double C6270 =
        (5 * (3 * C32001 + C31927 * C32008) +
         C31927 * (4 * C32008 +
                   C31927 * (3 * C32006 +
                             C31927 * (2 * C31927 * C31826 +
                                       C31927 * (C31826 + std::pow(C31760, 8) *
                                                              bs[8] * C31768 *
                                                              C31936))))) /
        C31519;
    const double C6367 =
        (ae * (3 * C31950 +
               C31927 * (2 * C31992 + C31927 * (C31858 + C31887 * C31936))) +
         C31757 * (3 * C32001 + C31927 * C32008)) /
        C31519;
    const double C6368 = (2 * C31991 + C31927 * C32001 + ae * C31757 * C32015 +
                          C31757 * (ae * C32015 + C31757 * C32008)) /
                         C31519;
    const double C7558 = C7534 + C7535;
    const double C11886 = C11862 + C11863;
    const double C32086 = C31757 * C32084;
    const double C32127 = C32122 + C32125;
    const double C31917 = C31915 + C31908;
    const double C32050 = C31927 * C32049;
    const double C7382 =
        (2 * (ae * C31953 + C31757 * C32028) + ae * (C31953 + C32049 * C31969) +
         C31757 * (C32028 + ae * C31757 * C32049 +
                   C31757 * (ae * C32049 +
                             C31757 * (C31830 + (ae * C31827 +
                                                 C31758 * std::pow(C31760, 8) *
                                                     bs[8] * C31768) *
                                                    C31936)))) /
        C31519;
    const double C7381 =
        (2 * C31757 * C31953 + C31757 * (C31953 + C32049 * C31969)) / C31514;
    const double C32098 = C31995 + C32096;
    const double C32110 = C31757 * C32107;
    const double C32024 = C31927 * C32023;
    const double C7532 =
        (2 * (ae * C32015 + C31757 * C32008) + ae * (C32015 + C32023 * C31969) +
         C31757 * (C32008 + ae * C31757 * C32023 +
                   C31757 * (ae * C32023 +
                             C31757 * (2 * C31927 * C31826 +
                                       C31927 * (C31826 + std::pow(C31760, 8) *
                                                              bs[8] * C31768 *
                                                              C31936))))) /
        C31519;
    const double C7531 =
        (2 * C31757 * C32015 + C31757 * (C32015 + C32023 * C31969)) / C31514;
    const double C7064 =
        (3 * (C32001 + ae * C32040 + C31757 * C32044) +
         ae * (2 * C32040 + C31757 * C32045) +
         C31757 * (2 * C32044 + ae * C32045 +
                   C31757 * (C32006 + ae * C31757 * C32021 +
                             C31757 * (ae * C32021 +
                                       C31757 * (C31826 + std::pow(C31760, 8) *
                                                              bs[8] * C31768 *
                                                              C31936))))) /
        C31519;
    const double C7061 = (3 * (C31950 + C32013 * C31969) +
                          C31757 * (2 * C32040 + C31757 * C32045)) /
                         C31514;
    const double C32087 = C31757 * C32085;
    const double C32128 = C32120 + C32126;
    const double C6292 = C6288 * C6200;
    const double C6662 = C6658 * C6200;
    const double C9593 = C8637 + C8636;
    const double C167 = C32644 * C137;
    const double C482 = C32644 * C254;
    const double C847 = C32644 * C269;
    const double C6646 = C32644 * C6362;
    const double C9600 = C32731 * C6362;
    const double C27371 = C32731 * C6362;
    const double C6282 = C113 * C6265;
    const double C6643 = C113 * C6361;
    const double C9595 = C3485 * C6361;
    const double C27366 = C20431 * C6361;
    const double C6907 = C1819 * C6364;
    const double C10099 = C3485 * C6364;
    const double C11259 = C10225 * C6364;
    const double C27870 = C20431 * C6364;
    const double C2455 =
        (2 * (C31757 * C31811 + C32148 * ae) +
         C31757 * (C31811 + C31757 * (C31757 * C31835 + C31916) +
                   C31757 * C31914 * ae) +
         (C32148 + C31914 * C31969) * ae) /
        C31514;
    const double C32154 = C32152 + C32153;
    const double C2269 =
        (C31927 * C31811 + C31757 * (C31757 * C31927 * C31835 + C32286 * ae) +
         C31757 * C32286 * ae) /
        C31514;
    const double C2268 = C31927 * C32148 + C32286 * C31969;
    const double C7212 =
        (2 * C32295 + C31927 * C32336 +
         C31757 * (C31757 * (2 * C31927 * C31815 +
                             C31927 * (C31815 + C31758 * C31827 * C31936)) +
                   C32365 * ae) +
         C31757 * C32365 * ae) /
        C31514;
    const double C6452 = 4 * (2 * C32231 + C31927 * C32242) +
                         C31927 * (3 * C32242 + C31927 * C32365);
    const double C6552 = C31757 * (3 * C32242 + C31927 * C32365);
    const double C7211 = 2 * C32231 + C31927 * C32242 + C32365 * C31969;
    const double C12269 = 4 * (2 * C32273 + C31757 * C32276) +
                          C31757 * (3 * C32276 + C31757 * C32428);
    const double C32332 = C32324 + C32331;
    const double C32403 = C32391 + C32401;
    const double C12355 = 4 * (2 * C32347 + C31757 * C32350) +
                          C31757 * (3 * C32350 + C31757 * C32445);
    const double C32888 = C32687 * C32681;
    const double C32924 = C32890 + C32687;
    const double C32892 = C32694 / C31520;
    const double C32889 = C32694 * C32681;
    const double C7669 = C32953 - (C32687 * C32683) / C31514;
    const double C31563 = C31554 - C31560;
    const double C31553 = C31548 * be;
    const double C17693 = C500 * C31575;
    const double C118 =
        (C31575 / C31520 + (0 * ae) / C31514) / C31520 - (0 * be) / C31514;
    const double C2759 = C31575 / C31520 - (0 * be) / C31514;
    const double C15056 = C31575 / C31520 + (0 * ae) / C31514;
    const double C5542 = C500 * C5426;
    const double C31552 = C31547 * ae;
    const double C832 =
        ((-C31515 / C31514) / C31520 - (C31533 * be) / C31514) / C31520 -
        ((C31512 * ((-C31522) / C31520 - (C31547 * be) / C31514) + C15773) *
         be) /
            C31514 +
        (-C31534 / C31514) / C31520 - (0 * be) / C31514;
    const double C833 =
        ((-C31522) / C31520 - (C31547 * be) / C31514) / C31520 -
        ((C31512 * ((-C31534 / C31514) / C31520 - (0 * be) / C31514) + C32552) *
         be) /
            C31514;
    const double C15779 = (-C31522) / C31520 - (C31547 * be) / C31514;
    const double C32900 = C32865 / C31514;
    const double C32936 = C32904 / C31520;
    const double C32937 = C32906 + C32873;
    const double C2752 = C32873 - C32553 / C31526;
    const double C32903 = C32869 / C31514;
    const double C2873 = C1019 * C2750;
    const double C2860 = C1017 * C2750;
    const double C3104 = C501 * C2750;
    const double C3383 = C1699 * C2750;
    const double C31692 = C31687 - C31690;
    const double C31667 = C31663 * ae;
    const double C20430 = (-C31649) / C31520 - (C31663 * be) / C31514;
    const double C31676 = C31672 * be;
    const double C24256 = C31700 * C355;
    const double C24250 = C31700 * C371;
    const double C24244 = C31700 * C354;
    const double C24682 = C31700 * C1154;
    const double C24676 = C31700 * C1168;
    const double C24670 = C31700 * C1155;
    const double C24864 = C31700 * C2099;
    const double C24858 = C31700 * C2106;
    const double C24852 = C31700 * C2098;
    const double C25350 = C31700 * C1156;
    const double C25344 = C31700 * C1172;
    const double C25338 = C31700 * C1157;
    const double C25330 = C31700 * C1166;
    const double C25324 = C31700 * C1153;
    const double C25922 = C31700 * C2641;
    const double C25916 = C31700 * C2646;
    const double C26134 = C31700 * C2640;
    const double C26128 = C31700 * C2644;
    const double C30907 = C31700 * C6364;
    const double C31484 = C31700 * C7053;
    const double C31478 = C31700 * C7056;
    const double C11968 =
        (C31700 / C31520 + (0 * ae) / C31514) / C31520 - (0 * be) / C31514;
    const double C13510 = C31700 / C31520 - (0 * be) / C31514;
    const double C22404 = C31700 / C31520 + (0 * ae) / C31514;
    const double C32927 = C32894 / C31514;
    const double C32946 = C32930 / C31520;
    const double C9591 = C8606 * C6200;
    const double C8627 = C8607 * C32866;
    const double C9592 = C8607 * C32542;
    const double C19597 = C8607 * C15773;
    const double C1873 = C1853 + C1854;
    const double C1867 = C1841 + C1842;
    const double C1864 = C1835 + C1836;
    const double C1861 = C1829 + C1830;
    const double C1858 = C1823 + C1824;
    const double C2307 = C2293 + C2294;
    const double C2304 = C2287 + C2288;
    const double C2301 = C2281 + C2282;
    const double C2493 = C2479 + C2480;
    const double C2490 = C2473 + C2474;
    const double C2487 = C2467 + C2468;
    const double C6935 = C6915 + C6916;
    const double C6932 = C6909 + C6910;
    const double C6929 = C6903 + C6904;
    const double C6926 = C6897 + C6898;
    const double C6923 = C6891 + C6892;
    const double C6920 = C6885 + C6886;
    const double C7232 = C7224 + C7225;
    const double C7229 = C7218 + C7219;
    const double C7568 = C7554 + C7555;
    const double C7565 = C7548 + C7549;
    const double C7562 = C7542 + C7543;
    const double C7559 = C7536 + C7537;
    const double C17264 = C17256 + C17257;
    const double C32947 = C32931 + C32898;
    const double C13505 = C32898 - C32732 / C31526;
    const double C32929 = C32895 / C31514;
    const double C13543 = C13503 * C130;
    const double C13535 = C13503 * C142;
    const double C13521 = C13503 * C141;
    const double C13513 = C13503 * C128;
    const double C13901 = C13503 * C260;
    const double C13893 = C13503 * C276;
    const double C14055 = C13503 * C365;
    const double C14047 = C13503 * C381;
    const double C14421 = C13503 * C263;
    const double C14413 = C13503 * C278;
    const double C14399 = C13503 * C277;
    const double C14391 = C13503 * C262;
    const double C14941 = C13503 * C701;
    const double C14933 = C13503 * C711;
    const double C10280 = C10261 + C10262;
    const double C10277 = C10255 + C10256;
    const double C10272 = C10245 + C10246;
    const double C10269 = C10239 + C10240;
    const double C10266 = C10233 + C10234;
    const double C10263 = C10227 + C10228;
    const double C10686 = C10673 + C10674;
    const double C10683 = C10667 + C10668;
    const double C10680 = C10661 + C10662;
    const double C10677 = C10655 + C10656;
    const double C10868 = C10855 + C10856;
    const double C10865 = C10849 + C10850;
    const double C10862 = C10843 + C10844;
    const double C10859 = C10837 + C10838;
    const double C11288 = C11269 + C11270;
    const double C11285 = C11263 + C11264;
    const double C11280 = C11253 + C11254;
    const double C11277 = C11247 + C11248;
    const double C11274 = C11241 + C11242;
    const double C11271 = C11235 + C11236;
    const double C11567 = C11558 + C11559;
    const double C11564 = C11552 + C11553;
    const double C11897 = C11884 + C11885;
    const double C11894 = C11878 + C11879;
    const double C11891 = C11872 + C11873;
    const double C11888 = C11866 + C11867;
    const double C13211 = C13204 + C13205;
    const double C13208 = C13198 + C13199;
    const double C1341 = C498 * C834;
    const double C5821 = C498 * C5426;
    const double C17972 = C498 * C31575;
    const double C1002 = C850 * C834;
    const double C5548 = C850 * C5426;
    const double C8030 = C850 * C31540;
    const double C16136 = C850 * C15780;
    const double C17699 = C850 * C31575;
    const double C3537 = C3527 + C3528;
    const double C1690 = C1520 * C834;
    const double C6128 = C1520 * C5426;
    const double C18279 = C1520 * C31575;
    const double C4343 = C3896 + C3895;
    const double C4882 = C3895 + C3896;
    const double C165 = C32644 * C145;
    const double C484 = C32644 * C274;
    const double C3868 = C32886 * C274;
    const double C20814 = C20428 * C274;
    const double C843 = C32644 * C280;
    const double C4502 = C32886 * C280;
    const double C21300 = C20428 * C280;
    const double C596 = C32644 * C379;
    const double C1848 = C32941 * C379;
    const double C3510 = C32731 * C379;
    const double C4034 = C32886 * C379;
    const double C10254 = C10221 * C379;
    const double C20456 = C32731 * C379;
    const double C20980 = C20428 * C379;
    const double C24267 = C32734 * C379;
    const double C8628 = C8608 * C31540;
    const double C19598 = C8608 * C15780;
    const double C12096 =
        (4 * (2 * C32268 + C31757 * C32384 + C32269 * ae) +
         C31757 *
             (3 * C32384 +
              C31757 * (2 * C32376 +
                        C31757 * (C31787 + C31757 * (C31757 * C31803 + C31884) +
                                  C31757 * C31853 * ae) +
                        C32378 * ae) +
              C32383 * ae) +
         (3 * C32269 + C31757 * C32383) * ae) /
        C31514;
    const double C995 = C499 * C32905;
    const double C1340 = C499 * C827;
    const double C5543 = C499 * C32905;
    const double C5820 = C499 * C32935;
    const double C8027 = C499 * C32552;
    const double C16133 = C499 * C32552;
    const double C17694 = C499 * C17571;
    const double C17971 = C499 * C32555;
    const double C1001 = C849 * C827;
    const double C1344 = C849 * C826;
    const double C5547 = C849 * C32935;
    const double C5824 = C849 * C32948;
    const double C6460 = C849 * C32542;
    const double C7781 = C849 * C32552;
    const double C8029 = C849 * C32866;
    const double C15887 = C849 * C32552;
    const double C16135 = C849 * C15773;
    const double C17698 = C849 * C32555;
    const double C17975 = C849 * C32547;
    const double C3536 = C3525 + C3526;
    const double C1691 = C1521 * C827;
    const double C6129 = C1521 * C32935;
    const double C8310 = C1521 * C32552;
    const double C16410 = C1521 * C32552;
    const double C18280 = C1521 * C32555;
    const double C4883 = C3897 + C3898;
    const double C4880 = C3898 + C3897;
    const double C2486 = C2465 + C2466;
    const double C10860 = C10839 + C10840;
    const double C594 = C32644 * C359;
    const double C3516 = C32731 * C359;
    const double C20462 = C32731 * C359;
    const double C1852 = C32919 * C374;
    const double C4036 = C32731 * C374;
    const double C10258 = C32919 * C374;
    const double C20982 = C32731 * C374;
    const double C24271 = C24235 * C374;
    const double C3244 = C32644 * C707;
    const double C3870 = C32731 * C707;
    const double C20816 = C32731 * C707;
    const double C166 = C113 * C124;
    const double C481 = C113 * C243;
    const double C846 = C113 * C251;
    const double C593 = C113 * C348;
    const double C3515 = C3485 * C348;
    const double C20461 = C20431 * C348;
    const double C1851 = C1819 * C356;
    const double C4035 = C3485 * C356;
    const double C10257 = C10225 * C356;
    const double C20981 = C20431 * C356;
    const double C24270 = C31700 * C356;
    const double C3243 = C113 * C699;
    const double C3869 = C3485 * C699;
    const double C20815 = C20431 * C699;
    const double C2300 = C2279 + C2280;
    const double C5097 = C5083 + C5084;
    const double C10678 = C10657 + C10658;
    const double C23928 = C23922 + C23923;
    const double C1031 = C1021 * C834;
    const double C5551 = C1021 * C5426;
    const double C8034 = C1021 * C31540;
    const double C16140 = C1021 * C15780;
    const double C17702 = C1021 * C31575;
    const double C1682 = C1516 * C834;
    const double C6122 = C1516 * C5426;
    const double C18273 = C1516 * C31575;
    const double C32429 = C32427 + C32422;
    const double C6467 = C6463 + C6464;
    const double C7230 = C7220 + C7221;
    const double C9187 = C9181 + C9182;
    const double C11566 = C11556 + C11557;
    const double C22076 = C22062 + C22063;
    const double C8171 = C8168 + C8169;
    const double C8632 = C8614 + C8615;
    const double C21505 = C21481 + C21482;
    const double C31894 = C31758 * C31893;
    const double C31898 = 3 * C31893;
    const double C31947 = C31927 * C31893;
    const double C31982 = ae * C31893;
    const double C31981 = C31757 * C31893;
    const double C7227 = C32919 * C1184;
    const double C9178 = C32731 * C1184;
    const double C11563 = C32919 * C1184;
    const double C22059 = C32731 * C1184;
    const double C25333 = C24235 * C1184;
    const double C8167 = C32644 * C1678;
    const double C8611 = C32731 * C1678;
    const double C21478 = C32731 * C1678;
    const double C6465 = C113 * C978;
    const double C7226 = C1819 * C1174;
    const double C9177 = C3485 * C1174;
    const double C11562 = C10225 * C1174;
    const double C22058 = C20431 * C1174;
    const double C25332 = C31700 * C1174;
    const double C8166 = C113 * C1674;
    const double C8610 = C3485 * C1674;
    const double C21477 = C20431 * C1674;
    const double C32402 = C31757 * C32400;
    const double C6914 = C32919 * C6363;
    const double C10104 = C32731 * C6363;
    const double C11266 = C32919 * C6363;
    const double C27875 = C32731 * C6363;
    const double C30914 = C24235 * C6363;
    const double C6284 = C113 * C6263;
    const double C6645 = C113 * C6358;
    const double C9599 = C3485 * C6358;
    const double C27370 = C20431 * C6358;
    const double C6913 = C1819 * C6359;
    const double C10103 = C3485 * C6359;
    const double C11265 = C10225 * C6359;
    const double C27874 = C20431 * C6359;
    const double C30913 = C31700 * C6359;
    const double C32446 = C32444 + C32437;
    const double C385 =
        (C31776 + ae * C31779 + C31758 * C31790 + ae * C31757 * C31880 +
         C31757 * (ae * C31880 + C31757 * C31810)) /
        C31519;
    const double C713 =
        (ae * C31927 * C31880 + C31757 * C31927 * C31810) / C31519;
    const double C1177 = (ae * (C31880 + C31893 * C31936) +
                          C31757 * (C31810 + C31834 * C31936)) /
                         C31519;
    const double C2116 = (2 * (ae * C31880 + C31757 * C31810) +
                          ae * (C31880 + C31893 * std::pow(C31757, 2)) +
                          C31757 * (C31810 + ae * C31757 * C31893 +
                                    C31757 * (ae * C31893 + C31757 * C31834))) /
                         C31519;
    const double C135 = (3 * (C31871 + C31758 * C31875 + C32142 * ae) +
                         C31758 * (2 * C31875 + C31758 * C31880 + C32144 * ae) +
                         (2 * C32142 + C31758 * C32144) * ae) /
                        C31514;
    const double C255 =
        (C31927 * (2 * C31875 + C31758 * C31880 + C32144 * ae)) / C31514;
    const double C268 =
        (C31871 + C31758 * C31875 + C32142 * ae + C31880 * C31936) / C31514;
    const double C360 =
        (C31757 * (2 * C31875 + C31758 * C31880 + C32144 * ae)) / C31514;
    const double C373 =
        (C31871 + C31758 * C31875 + C32142 * ae + C31880 * C31969) / C31514;
    const double C706 = (C31757 * C31927 * C31880) / C31514;
    const double C969 =
        (2 * C31927 * C31880 + C31927 * (C31880 + C31893 * C31936)) / C31514;
    const double C1159 = (C31757 * (C31880 + C31893 * C31936)) / C31514;
    const double C2104 =
        (2 * C31757 * C31880 + C31757 * (C31880 + C31893 * C31969)) / C31514;
    const double C2303 = C2285 + C2286;
    const double C5099 = C5087 + C5088;
    const double C10681 = C10663 + C10664;
    const double C13207 = C13196 + C13197;
    const double C17261 = C17250 + C17251;
    const double C22078 = C22066 + C22067;
    const double C13206 = C13194 + C13195;
    const double C17260 = C17248 + C17249;
    const double C14041 = C32932 * C2120;
    const double C22935 = C32932 * C2120;
    const double C1032 = C1022 * C827;
    const double C5552 = C1022 * C32935;
    const double C6462 = C1022 * C32542;
    const double C7785 = C1022 * C32552;
    const double C8033 = C1022 * C32866;
    const double C15891 = C1022 * C32552;
    const double C16139 = C1022 * C15773;
    const double C17703 = C1022 * C32555;
    const double C1683 = C1517 * C827;
    const double C6123 = C1517 * C32935;
    const double C8306 = C1517 * C32552;
    const double C16406 = C1517 * C32552;
    const double C18274 = C1517 * C32555;
    const double C8609 = C4532 + C4531;
    const double C8981 = C4531 + C4532;
    const double C6293 = C6289 * C32542;
    const double C7788 = C6289 * C32866;
    const double C15894 = C6289 * C15773;
    const double C6661 = C6657 * C32542;
    const double C8304 = C6657 * C32866;
    const double C16404 = C6657 * C15773;
    const double C9594 = C8635 + C8634;
    const double C31839 = C31819 + C31837;
    const double C31838 = C31820 + C31836;
    const double C1005 = C32644 * C981;
    const double C32111 = C32108 + C32109;
    const double C6644 = C32644 * C6367;
    const double C9596 = C32731 * C6367;
    const double C27367 = C32731 * C6367;
    const double C6908 = C32919 * C6368;
    const double C10100 = C32731 * C6368;
    const double C11260 = C32919 * C6368;
    const double C27871 = C32731 * C6368;
    const double C30908 = C24235 * C6368;
    const double C32088 = C32076 + C32086;
    const double C31918 = C31758 * C31917;
    const double C31955 = C31917 * C31936;
    const double C31984 = C31917 * C31969;
    const double C31998 = C31927 * C31917;
    const double C32051 = C32047 + C32050;
    const double C12186 =
        (3 * (C31994 + ae * C32091 + C31757 * C32097) +
         ae * (2 * C32091 + C31757 * C32098) +
         C31757 * (2 * C32097 + ae * C32098 +
                   C31757 * (C32093 + ae * C31757 * C32094 +
                             C31757 * (ae * C32094 +
                                       C31757 * C31927 *
                                           (ae * C31827 +
                                            C31758 * std::pow(C31760, 8) *
                                                bs[8] * C31768))))) /
        C31519;
    const double C12185 = (3 * (C31945 + C31995 * C31969) +
                           C31757 * (2 * C32091 + C31757 * C32098)) /
                          C31514;
    const double C32112 = C32106 + C32110;
    const double C32025 = C32017 + C32024;
    const double C32089 = C32074 + C32087;
    const double C12358 =
        (4 * (2 * C32037 + ae * C32038 + C31757 * C32127) +
         ae * (3 * C32038 + C31757 * C32128) +
         C31757 * (3 * C32127 + ae * C32128 +
                   C31757 * (2 * C32123 + ae * C32124 +
                             C31757 * (C32116 + ae * C31757 * C32117 +
                                       C31757 * (ae * C32117 +
                                                 C31757 * C31927 *
                                                     std::pow(C31760, 8) *
                                                     bs[8] * C31768))))) /
        C31519;
    const double C12357 = (4 * (2 * C32033 + C31757 * C32038) +
                           C31757 * (3 * C32038 + C31757 * C32128)) /
                          C31514;
    const double C9604 = C9593 * C6200;
    const double C6290 = C6282 + C6283;
    const double C125 = 5 * (3 * C32144 + C31758 * C32148) +
                        C31758 * (4 * C32148 + C31758 * C32154);
    const double C252 = 3 * C32144 + C31758 * C32148 + C32154 * C31936;
    const double C357 = 3 * C32144 + C31758 * C32148 + C32154 * C31969;
    const double C474 = C31927 * (4 * C32148 + C31758 * C32154);
    const double C586 = C31757 * (4 * C32148 + C31758 * C32154);
    const double C700 = C31757 * C31927 * C32154;
    const double C6365 =
        (3 * C32305 + C31927 * C32312 +
         C31757 * (C31757 * (3 * C32310 +
                             C31927 * (2 * C31927 * C31803 +
                                       C31927 * (C31803 + C31827 * C31936))) +
                   C32332 * ae) +
         C31757 * C32332 * ae) /
        C31514;
    const double C6639 =
        (C31757 * (4 * C32312 +
                   C31927 * (3 * C32310 +
                             C31927 * (2 * C31927 * C31803 +
                                       C31927 * (C31803 + C31827 * C31936)))) +
         (4 * C32321 + C31927 * C32332) * ae) /
        C31514;
    const double C6264 = 5 * (3 * C32238 + C31927 * C32321) +
                         C31927 * (4 * C32321 + C31927 * C32332);
    const double C6360 = 3 * C32238 + C31927 * C32321 + C32332 * C31969;
    const double C6638 = C31757 * (4 * C32321 + C31927 * C32332);
    const double C12094 = 5 * (3 * C32269 + C31757 * C32383) +
                          C31757 * (4 * C32383 + C31757 * C32403);
    const double C32921 = C32888 / C31514;
    const double C32943 = C32924 / C31520;
    const double C32944 = C32925 + C32892;
    const double C7671 = C32892 - C32692 / C31526;
    const double C32923 = C32889 / C31514;
    const double C31557 = C31553 / C31514;
    const double C2865 = C498 * C2759;
    const double C15162 = C498 * C15056;
    const double C31556 = C31552 / C31514;
    const double C1035 = C1025 * C832;
    const double C1028 = C1018 * C832;
    const double C1026 = C1016 * C832;
    const double C1343 = C848 * C832;
    const double C1337 = C502 * C832;
    const double C1704 = C1700 * C832;
    const double C1702 = C1698 * C832;
    const double C1000 = C848 * C833;
    const double C992 = C502 * C833;
    const double C1033 = C1023 * C833;
    const double C1345 = C850 * C833;
    const double C1339 = C500 * C833;
    const double C1692 = C1522 * C833;
    const double C1684 = C1518 * C833;
    const double C15895 = C6288 * C15779;
    const double C15888 = C1025 * C15779;
    const double C15884 = C1018 * C15779;
    const double C15880 = C1016 * C15779;
    const double C16138 = C1023 * C15779;
    const double C16134 = C848 * C15779;
    const double C16130 = C502 * C15779;
    const double C16413 = C1700 * C15779;
    const double C16409 = C1698 * C15779;
    const double C16405 = C6658 * C15779;
    const double C19596 = C8606 * C15779;
    const double C32957 = C32900 + C32949;
    const double C2751 = C32936 - (C32555 * C32538) / C31514;
    const double C15161 = C499 * C32937;
    const double C105 = C32937 / C31520 - C32553 / C32907;
    const double C2864 = C499 * C2752;
    const double C32950 = C32903 + C32936;
    const double C31671 = C31667 / C31514;
    const double C20463 = C20430 * C123;
    const double C20453 = C20430 * C133;
    const double C20449 = C20430 * C122;
    const double C20445 = C20430 * C131;
    const double C20441 = C20430 * C121;
    const double C20437 = C20430 * C129;
    const double C20433 = C20430 * C120;
    const double C20833 = C20430 * C246;
    const double C20829 = C20430 * C259;
    const double C20825 = C20430 * C245;
    const double C20821 = C20430 * C257;
    const double C20817 = C20430 * C244;
    const double C20999 = C20430 * C351;
    const double C20995 = C20430 * C364;
    const double C20991 = C20430 * C350;
    const double C20987 = C20430 * C362;
    const double C20983 = C20430 * C349;
    const double C21303 = C20430 * C250;
    const double C21293 = C20430 * C266;
    const double C21289 = C20430 * C249;
    const double C21491 = C20430 * C965;
    const double C21487 = C20430 * C973;
    const double C21483 = C20430 * C964;
    const double C21479 = C20430 * C971;
    const double C21471 = C20430 * C264;
    const double C21467 = C20430 * C248;
    const double C21463 = C20430 * C261;
    const double C21459 = C20430 * C247;
    const double C22072 = C20430 * C697;
    const double C22068 = C20430 * C704;
    const double C22064 = C20430 * C1151;
    const double C22060 = C20430 * C1161;
    const double C22290 = C20430 * C696;
    const double C22286 = C20430 * C702;
    const double C22282 = C20430 * C1152;
    const double C22278 = C20430 * C1163;
    const double C23924 = C20430 * C698;
    const double C27372 = C20430 * C966;
    const double C27368 = C20430 * C976;
    const double C27876 = C20430 * C1668;
    const double C27872 = C20430 * C1672;
    const double C31682 = C31676 / C31514;
    const double C24284 = C24256 + C24257;
    const double C24281 = C24250 + C24251;
    const double C24278 = C24244 + C24245;
    const double C24697 = C24682 + C24683;
    const double C24694 = C24676 + C24677;
    const double C24691 = C24670 + C24671;
    const double C24879 = C24864 + C24865;
    const double C24876 = C24858 + C24859;
    const double C24873 = C24852 + C24853;
    const double C25371 = C25350 + C25351;
    const double C25368 = C25344 + C25345;
    const double C25365 = C25338 + C25339;
    const double C25361 = C25330 + C25331;
    const double C25358 = C25324 + C25325;
    const double C25931 = C25922 + C25923;
    const double C25928 = C25916 + C25917;
    const double C26143 = C26134 + C26135;
    const double C26140 = C26128 + C26129;
    const double C31493 = C31484 + C31485;
    const double C31490 = C31478 + C31479;
    const double C13536 = C13510 * C2098;
    const double C13526 = C13510 * C2106;
    const double C13518 = C13510 * C2099;
    const double C13894 = C13510 * C2641;
    const double C13886 = C13510 * C2646;
    const double C14048 = C13510 * C2102;
    const double C14040 = C13510 * C2113;
    const double C14414 = C13510 * C7053;
    const double C14406 = C13510 * C7056;
    const double C14404 = C13510 * C2644;
    const double C14396 = C13510 * C2640;
    const double C14934 = C13510 * C7054;
    const double C14926 = C13510 * C7059;
    const double C22430 = C22404 * C2098;
    const double C22420 = C22404 * C2106;
    const double C22412 = C22404 * C2099;
    const double C22788 = C22404 * C2641;
    const double C22780 = C22404 * C2646;
    const double C22942 = C22404 * C2102;
    const double C22934 = C22404 * C2113;
    const double C28102 = C22404 * C7053;
    const double C28094 = C22404 * C7056;
    const double C28092 = C22404 * C2644;
    const double C28084 = C22404 * C2640;
    const double C28622 = C22404 * C7054;
    const double C28614 = C22404 * C7059;
    const double C32959 = C32927 + C32955;
    const double C13504 = C32946 - (C32734 * C32723) / C31514;
    const double C9603 = C9591 + C9592;
    const double C1876 = C1866 + C1867;
    const double C1875 = C1863 + C1864;
    const double C17049 = C2307 + C2308;
    const double C17046 = C2308 + C2307;
    const double C17048 = C2304 + C2305;
    const double C17047 = C2305 + C2304;
    const double C6938 = C6928 + C6929;
    const double C6937 = C6925 + C6926;
    const double C22433 = C32947 * C372;
    const double C22419 = C32947 * C384;
    const double C22411 = C32947 * C370;
    const double C22791 = C32947 * C1167;
    const double C22783 = C32947 * C1181;
    const double C22945 = C32947 * C2107;
    const double C22937 = C32947 * C2117;
    const double C28105 = C32947 * C1171;
    const double C28097 = C32947 * C1183;
    const double C28091 = C32947 * C1180;
    const double C28083 = C32947 * C1165;
    const double C28625 = C32947 * C2643;
    const double C28617 = C32947 * C2649;
    const double C11962 = C32947 / C31520 - C32732 / C32907;
    const double C13539 = C13505 * C372;
    const double C13525 = C13505 * C384;
    const double C13517 = C13505 * C370;
    const double C13897 = C13505 * C1167;
    const double C13889 = C13505 * C1181;
    const double C14051 = C13505 * C2107;
    const double C14043 = C13505 * C2117;
    const double C14417 = C13505 * C1171;
    const double C14409 = C13505 * C1183;
    const double C14403 = C13505 * C1180;
    const double C14395 = C13505 * C1165;
    const double C14937 = C13505 * C2643;
    const double C14929 = C13505 * C2649;
    const double C32956 = C32929 + C32946;
    const double C10282 = C10272 + C10273;
    const double C10281 = C10269 + C10270;
    const double C12995 = C10685 + C10686;
    const double C12992 = C10686 + C10685;
    const double C12994 = C10682 + C10683;
    const double C12993 = C10683 + C10682;
    const double C11290 = C11280 + C11281;
    const double C11289 = C11277 + C11278;
    const double C177 = C166 + C167;
    const double C496 = C481 + C482;
    const double C853 = C846 + C847;
    const double C608 = C593 + C594;
    const double C3533 = C3515 + C3516;
    const double C20479 = C20461 + C20462;
    const double C1872 = C1851 + C1852;
    const double C4057 = C4035 + C4036;
    const double C10278 = C10257 + C10258;
    const double C21003 = C20981 + C20982;
    const double C24291 = C24270 + C24271;
    const double C3246 = C3243 + C3244;
    const double C3891 = C3869 + C3870;
    const double C20837 = C20815 + C20816;
    const double C12270 =
        (4 * (2 * C32275 + C31757 * C32429 + C32276 * ae) +
         C31757 *
             (3 * C32429 +
              C31757 * (2 * C32421 +
                        C31757 * (C31815 +
                                  C31757 * (C31757 * C31758 * C31827 + C31908) +
                                  C31757 * C31905 * ae) +
                        C32423 * ae) +
              C32428 * ae) +
         (3 * C32276 + C31757 * C32428) * ae) /
        C31514;
    const double C6469 = C6467 * C6200;
    const double C7787 = C6467 * C31540;
    const double C15893 = C6467 * C15780;
    const double C8303 = C8171 * C31540;
    const double C16403 = C8171 * C15780;
    const double C31895 = C31882 + C31894;
    const double C1182 = (C31927 * C31810 + ae * C31757 * C31947 +
                          C31757 * (ae * C31947 + C31757 * C31927 * C31834)) /
                         C31519;
    const double C1170 = (C31927 * C31880 + C31947 * C31969) / C31514;
    const double C31985 = C31982 + C31983;
    const double C6468 = C6465 + C6466;
    const double C7233 = C7226 + C7227;
    const double C9185 = C9177 + C9178;
    const double C11569 = C11562 + C11563;
    const double C22074 = C22058 + C22059;
    const double C25362 = C25332 + C25333;
    const double C8170 = C8166 + C8167;
    const double C8630 = C8610 + C8611;
    const double C21503 = C21477 + C21478;
    const double C32404 = C32386 + C32402;
    const double C6291 = C6284 + C6285;
    const double C6656 = C6645 + C6646;
    const double C9608 = C9599 + C9600;
    const double C27379 = C27370 + C27371;
    const double C6934 = C6913 + C6914;
    const double C10109 = C10103 + C10104;
    const double C11286 = C11265 + C11266;
    const double C27880 = C27874 + C27875;
    const double C30924 = C30913 + C30914;
    const double C12356 =
        (4 * (2 * C32349 + C31757 * C32446 + C32350 * ae) +
         C31757 * (3 * C32446 +
                   C31757 * (2 * C32440 +
                             C31757 * (C32432 +
                                       C31757 * (C31757 * C31927 * C31827 +
                                                 C32435 * ae) +
                                       C31757 * C32435 * ae) +
                             C32441 * ae) +
                   C32445 * ae) +
         (3 * C32350 + C31757 * C32445) * ae) /
        C31514;
    const double C1844 = C32919 * C385;
    const double C2462 = C32941 * C385;
    const double C4040 = C32731 * C385;
    const double C10250 = C32919 * C385;
    const double C10836 = C10221 * C385;
    const double C13531 = C13505 * C385;
    const double C20986 = C32731 * C385;
    const double C22425 = C32947 * C385;
    const double C24263 = C24235 * C385;
    const double C24849 = C32734 * C385;
    const double C1508 = C32644 * C713;
    const double C2276 = C32941 * C713;
    const double C3874 = C32731 * C713;
    const double C5082 = C32886 * C713;
    const double C10654 = C10221 * C713;
    const double C20820 = C32731 * C713;
    const double C23921 = C20428 * C713;
    const double C24667 = C32734 * C713;
    const double C1500 = C32644 * C1177;
    const double C4500 = C32731 * C1177;
    const double C21298 = C32731 * C1177;
    const double C2460 = C32919 * C2116;
    const double C10834 = C32919 * C2116;
    const double C13529 = C32932 * C2116;
    const double C22423 = C32932 * C2116;
    const double C24847 = C24235 * C2116;
    const double C162 = C113 * C135;
    const double C3513 = C3484 * C135;
    const double C20459 = C20430 * C135;
    const double C483 = C113 * C255;
    const double C3867 = C3484 * C255;
    const double C20813 = C20430 * C255;
    const double C842 = C113 * C268;
    const double C4501 = C3484 * C268;
    const double C21299 = C20430 * C268;
    const double C595 = C113 * C360;
    const double C1847 = C1818 * C360;
    const double C3509 = C3485 * C360;
    const double C4033 = C3484 * C360;
    const double C10253 = C10224 * C360;
    const double C20455 = C20431 * C360;
    const double C20979 = C20430 * C360;
    const double C1843 = C1819 * C373;
    const double C2461 = C1818 * C373;
    const double C4039 = C3485 * C373;
    const double C10249 = C10225 * C373;
    const double C10835 = C10224 * C373;
    const double C20985 = C20431 * C373;
    const double C24262 = C31700 * C373;
    const double C1507 = C113 * C706;
    const double C2275 = C1818 * C706;
    const double C3873 = C3485 * C706;
    const double C5081 = C3484 * C706;
    const double C10653 = C10224 * C706;
    const double C20819 = C20431 * C706;
    const double C23920 = C20430 * C706;
    const double C1004 = C113 * C969;
    const double C1499 = C113 * C1159;
    const double C4499 = C3485 * C1159;
    const double C21297 = C20431 * C1159;
    const double C2459 = C1819 * C2104;
    const double C10833 = C10225 * C2104;
    const double C13528 = C13510 * C2104;
    const double C22422 = C22404 * C2104;
    const double C24846 = C31700 * C2104;
    const double C8629 = C8609 * C32552;
    const double C19599 = C8609 * C32552;
    const double C6296 = C6292 + C6293;
    const double C9605 = C9594 * C32542;
    const double C138 = (5 * (3 * C31791 + C31758 * C31811) +
                         C31758 * (4 * C31811 + C31758 * C31839)) /
                        C31514;
    const double C271 =
        (3 * C31791 + C31758 * C31811 + C31839 * C31936) / C31514;
    const double C376 =
        (3 * C31791 + C31758 * C31811 +
         C31757 * (C31757 * C31839 + C32154 * ae) + C31757 * C32154 * ae) /
        C31514;
    const double C475 = (C31927 * (4 * C31811 + C31758 * C31839)) / C31514;
    const double C587 = (C31757 * (4 * C31811 + C31758 * C31839) +
                         (4 * C32148 + C31758 * C32154) * ae) /
                        C31514;
    const double C709 =
        (C31757 * C31927 * C31839 + C31927 * C32154 * ae) / C31514;
    const double C146 =
        (5 * (3 * C31810 + ae * C31811 + C31758 * C31838) +
         ae * (4 * C31811 + C31758 * C31839) +
         C31758 *
             (4 * C31838 + ae * C31839 +
              C31758 *
                  (3 * C31834 + ae * C31835 +
                   C31758 * (2 * C31830 + ae * C31831 +
                             C31758 * (C31826 + ae * C31758 * C31827 +
                                       C31758 * (ae * C31827 +
                                                 C31758 * std::pow(C31760, 8) *
                                                     bs[8] * C31768)))))) /
        C31519;
    const double C273 =
        ((yP - yQ) * (3 * C31810 + ae * C31811 + C31758 * C31838)) / C31519;
    const double C281 = (2 * C31790 + ae * C31791 + C31758 * C31810 +
                         C31838 * std::pow(yP - yQ, 2)) /
                        C31519;
    const double C282 =
        (3 * C31810 + ae * C31811 + C31758 * C31838 +
         (3 * C31834 + ae * C31835 +
          C31758 *
              (2 * C31830 + ae * C31831 +
               C31758 * (C31826 + ae * C31758 * C31827 +
                         C31758 * (ae * C31827 + C31758 * std::pow(C31760, 8) *
                                                     bs[8] * C31768)))) *
             std::pow(yP - yQ, 2)) /
        C31519;
    const double C378 =
        (ae * (3 * (C31772 * C31773 * C31851 + C31758 * C31861 + C31856 * ae) +
               C31758 * (2 * C31861 +
                         C31758 * (C31858 +
                                   C31758 * (C31758 * C31795 * C31796 * C31851 +
                                             C31853 * ae) +
                                   C31758 * C31853 * ae) +
                         C31859 * ae) +
               (2 * C31856 + C31758 * C31859) * ae) +
         C31757 * (3 * C31810 + ae * C31811 + C31758 * C31838)) /
        C31519;
    const double C477 =
        ((yP - yQ) *
         (4 * C31838 + ae * C31839 +
          C31758 * (3 * C31834 + ae * C31835 +
                    C31758 * (2 * C31830 + ae * C31831 +
                              C31758 * (C31826 + ae * C31758 * C31827 +
                                        C31758 * (ae * C31827 +
                                                  C31758 * std::pow(C31760, 8) *
                                                      bs[8] * C31768)))))) /
        C31519;
    const double C1335 =
        (2 * C31927 * C31838 +
         C31927 * (C31838 + (2 * C31830 + ae * C31831 +
                             C31758 * (C31826 + ae * C31758 * C31827 +
                                       C31758 * (ae * C31827 +
                                                 C31758 * std::pow(C31760, 8) *
                                                     bs[8] * C31768))) *
                                C31936)) /
        C31519;
    const double C6655 = C6643 + C6644;
    const double C9606 = C9595 + C9596;
    const double C27377 = C27366 + C27367;
    const double C6931 = C6907 + C6908;
    const double C10107 = C10099 + C10100;
    const double C11283 = C11259 + C11260;
    const double C27878 = C27870 + C27871;
    const double C30921 = C30907 + C30908;
    const double C31919 = C31899 + C31918;
    const double C31956 = C31893 + C31955;
    const double C31986 = C31893 + C31984;
    const double C2651 =
        (2 * (ae * C31947 + C31757 * C31997) + ae * (C31947 + C31998 * C31969) +
         C31757 * (C31997 + ae * C31757 * C31998 +
                   C31757 * (ae * C31998 +
                             C31757 * C31927 *
                                 (C31826 + ae * C31758 * C31827 +
                                  C31758 * (ae * C31827 +
                                            C31758 * std::pow(C31760, 8) *
                                                bs[8] * C31768))))) /
        C31519;
    const double C2648 =
        (2 * C31757 * C31947 + C31757 * (C31947 + C31998 * C31969)) / C31514;
    const double C7214 =
        (2 * C31994 + C31927 * C32028 + ae * C31757 * C32051 +
         C31757 * (ae * C32051 +
                   C31757 * (2 * C31927 * C31830 +
                             C31927 * (C31830 + (ae * C31827 +
                                                 C31758 * std::pow(C31760, 8) *
                                                     bs[8] * C31768) *
                                                    C31936)))) /
        C31519;
    const double C6454 = (4 * (2 * C31945 + C31927 * C31953) +
                          C31927 * (3 * C31953 + C31927 * C32051)) /
                         C31514;
    const double C6554 = (C31757 * (3 * C31953 + C31927 * C32051)) / C31514;
    const double C7213 =
        (2 * C31945 + C31927 * C31953 + C32051 * C31969) / C31514;
    const double C12272 =
        (4 * (2 * C31978 + ae * C31979 + C31757 * C32111) +
         ae * (3 * C31979 + C31757 * C32112) +
         C31757 *
             (3 * C32111 + ae * C32112 +
              C31757 *
                  (2 * C32105 + ae * C32107 +
                   C31757 * (C31830 + ae * C31757 * C31910 +
                             C31757 * (ae * C31910 +
                                       C31757 * (ae * C31827 +
                                                 C31758 * std::pow(C31760, 8) *
                                                     bs[8] * C31768)))))) /
        C31519;
    const double C12271 = (4 * (2 * C31974 + C31757 * C31979) +
                           C31757 * (3 * C31979 + C31757 * C32112)) /
                          C31514;
    const double C6369 =
        (3 * C32001 + C31927 * C32008 + ae * C31757 * C32025 +
         C31757 * (ae * C32025 +
                   C31757 * (3 * C32006 +
                             C31927 * (2 * C31927 * C31826 +
                                       C31927 * (C31826 + std::pow(C31760, 8) *
                                                              bs[8] * C31768 *
                                                              C31936))))) /
        C31519;
    const double C6641 =
        (ae * (4 * C32015 + C31927 * C32025) +
         C31757 * (4 * C32008 +
                   C31927 * (3 * C32006 +
                             C31927 * (2 * C31927 * C31826 +
                                       C31927 * (C31826 + std::pow(C31760, 8) *
                                                              bs[8] * C31768 *
                                                              C31936))))) /
        C31519;
    const double C6268 = (5 * (3 * C31950 + C31927 * C32015) +
                          C31927 * (4 * C32015 + C31927 * C32025)) /
                         C31514;
    const double C6366 =
        (3 * C31950 + C31927 * C32015 + C32025 * C31969) / C31514;
    const double C6640 = (C31757 * (4 * C32015 + C31927 * C32025)) / C31514;
    const double C12100 =
        (5 * (3 * C32066 + ae * C32067 + C31757 * C32088) +
         ae * (4 * C32067 + C31757 * C32089) +
         C31757 *
             (4 * C32088 + ae * C32089 +
              C31757 *
                  (3 * C32084 + ae * C32085 +
                   C31757 * (2 * C32078 + ae * C32080 +
                             C31757 * (C31826 + ae * C31757 * C31903 +
                                       C31757 * (ae * C31903 +
                                                 C31757 * std::pow(C31760, 8) *
                                                     bs[8] * C31768)))))) /
        C31519;
    const double C12098 = (5 * (3 * C31972 + C31757 * C32067) +
                           C31757 * (4 * C32067 + C31757 * C32089)) /
                          C31514;
    const double C6294 = C6290 * C32542;
    const double C32958 = C32921 + C32953;
    const double C7670 = C32943 - (C32694 * C32683) / C31514;
    const double C6198 = C32944 / C31520 - C32692 / C32907;
    const double C32954 = C32923 + C32943;
    const double C31559 = C31556 - C31535;
    const double C1036 = C1028 + C1029;
    const double C15897 = C15888 + C15889;
    const double C15896 = C15884 + C15885;
    const double C19600 = C19596 + C19597;
    const double C15170 = C1019 * C32957;
    const double C15157 = C1017 * C32957;
    const double C15401 = C501 * C32957;
    const double C15674 = C1699 * C32957;
    const double C102 =
        (C32948 + 2 * C32547) / C31520 - (C32957 * C32538) / C31514;
    const double C2871 = C849 * C2751;
    const double C2862 = C501 * C2751;
    const double C3106 = C499 * C2751;
    const double C3381 = C1521 * C2751;
    const double C15168 = C849 * C32950;
    const double C15159 = C501 * C32950;
    const double C15403 = C499 * C32950;
    const double C15672 = C1521 * C32950;
    const double C103 =
        (C32935 + 2 * C32555 + C32957) / C31520 - (C32950 * C32538) / C31514;
    const double C104 = (C32905 + C32552 / C31514 + C32950) / C31520 -
                        (C32937 * C32538) / C31514;
    const double C31675 = C31671 - C31652;
    const double C20480 = C20463 + C20464;
    const double C20475 = C20453 + C20454;
    const double C20473 = C20449 + C20450;
    const double C20471 = C20445 + C20446;
    const double C20469 = C20441 + C20442;
    const double C20467 = C20437 + C20438;
    const double C20465 = C20433 + C20434;
    const double C20846 = C20833 + C20834;
    const double C20844 = C20829 + C20830;
    const double C20842 = C20825 + C20826;
    const double C20840 = C20821 + C20822;
    const double C20838 = C20817 + C20818;
    const double C21012 = C20999 + C21000;
    const double C21010 = C20995 + C20996;
    const double C21008 = C20991 + C20992;
    const double C21006 = C20987 + C20988;
    const double C21004 = C20983 + C20984;
    const double C21312 = C21303 + C21304;
    const double C21307 = C21293 + C21294;
    const double C21305 = C21289 + C21290;
    const double C21510 = C21491 + C21492;
    const double C21508 = C21487 + C21488;
    const double C21506 = C21483 + C21484;
    const double C21504 = C21479 + C21480;
    const double C21499 = C21471 + C21472;
    const double C21497 = C21467 + C21468;
    const double C21495 = C21463 + C21464;
    const double C21493 = C21459 + C21460;
    const double C22081 = C22072 + C22073;
    const double C22079 = C22068 + C22069;
    const double C22077 = C22064 + C22065;
    const double C22075 = C22060 + C22061;
    const double C22299 = C22290 + C22291;
    const double C22297 = C22286 + C22287;
    const double C22295 = C22282 + C22283;
    const double C22293 = C22278 + C22279;
    const double C23929 = C23924 + C23925;
    const double C27380 = C27372 + C27373;
    const double C27378 = C27368 + C27369;
    const double C27881 = C27876 + C27877;
    const double C27879 = C27872 + C27873;
    const double C13556 = C13536 + C13537;
    const double C13551 = C13526 + C13527;
    const double C13547 = C13518 + C13519;
    const double C13906 = C13894 + C13895;
    const double C13902 = C13886 + C13887;
    const double C14060 = C14048 + C14049;
    const double C14056 = C14040 + C14041;
    const double C14434 = C14414 + C14415;
    const double C14430 = C14406 + C14407;
    const double C14429 = C14404 + C14405;
    const double C14425 = C14396 + C14397;
    const double C14946 = C14934 + C14935;
    const double C14942 = C14926 + C14927;
    const double C22450 = C22430 + C22431;
    const double C22445 = C22420 + C22421;
    const double C22441 = C22412 + C22413;
    const double C22800 = C22788 + C22789;
    const double C22796 = C22780 + C22781;
    const double C22954 = C22942 + C22943;
    const double C22950 = C22934 + C22935;
    const double C28122 = C28102 + C28103;
    const double C28118 = C28094 + C28095;
    const double C28117 = C28092 + C28093;
    const double C28113 = C28084 + C28085;
    const double C28634 = C28622 + C28623;
    const double C28630 = C28614 + C28615;
    const double C22437 = C32959 * C130;
    const double C22429 = C32959 * C142;
    const double C22415 = C32959 * C141;
    const double C22407 = C32959 * C128;
    const double C22795 = C32959 * C260;
    const double C22787 = C32959 * C276;
    const double C22949 = C32959 * C365;
    const double C22941 = C32959 * C381;
    const double C28109 = C32959 * C263;
    const double C28101 = C32959 * C278;
    const double C28087 = C32959 * C277;
    const double C28079 = C32959 * C262;
    const double C28629 = C32959 * C701;
    const double C28621 = C32959 * C711;
    const double C11959 =
        (C32952 + 2 * C32727) / C31520 - (C32959 * C32723) / C31514;
    const double C13541 = C13504 * C363;
    const double C13533 = C13504 * C380;
    const double C13523 = C13504 * C381;
    const double C13515 = C13504 * C365;
    const double C13899 = C13504 * C703;
    const double C13891 = C13504 * C712;
    const double C14053 = C13504 * C370;
    const double C14045 = C13504 * C384;
    const double C14419 = C13504 * C1164;
    const double C14411 = C13504 * C1179;
    const double C14401 = C13504 * C711;
    const double C14393 = C13504 * C701;
    const double C14939 = C13504 * C1165;
    const double C14931 = C13504 * C1180;
    const double C1877 = C1875 + C1865;
    const double C17053 = C2306 + C17049;
    const double C17050 = C17046 + C2306;
    const double C17052 = C2303 + C17048;
    const double C17051 = C17047 + C2303;
    const double C6940 = C6938 + C6930;
    const double C6939 = C6937 + C6927;
    const double C22435 = C32956 * C363;
    const double C22427 = C32956 * C380;
    const double C22417 = C32956 * C381;
    const double C22409 = C32956 * C365;
    const double C22793 = C32956 * C703;
    const double C22785 = C32956 * C712;
    const double C22947 = C32956 * C370;
    const double C22939 = C32956 * C384;
    const double C28107 = C32956 * C1164;
    const double C28099 = C32956 * C1179;
    const double C28089 = C32956 * C711;
    const double C28081 = C32956 * C701;
    const double C28627 = C32956 * C1165;
    const double C28619 = C32956 * C1180;
    const double C11960 =
        (C32941 + 2 * C32734 + C32959) / C31520 - (C32956 * C32723) / C31514;
    const double C11961 = (C32919 + C32731 / C31514 + C32956) / C31520 -
                          (C32947 * C32723) / C31514;
    const double C10283 = C10281 + C10271;
    const double C12999 = C10684 + C12995;
    const double C12996 = C12992 + C10684;
    const double C12998 = C10681 + C12994;
    const double C12997 = C12993 + C10681;
    const double C11292 = C11290 + C11282;
    const double C11291 = C11289 + C11279;
    const double C3109 = C496 * C2759;
    const double C15406 = C496 * C15056;
    const double C1347 = C853 * C834;
    const double C2868 = C853 * C2759;
    const double C5827 = C853 * C5426;
    const double C15165 = C853 * C15056;
    const double C17978 = C853 * C31575;
    const double C3378 = C3246 * C2759;
    const double C15669 = C3246 * C15056;
    const double C31896 = C31895 + C31886;
    const double C2274 = C32919 * C1182;
    const double C5080 = C32731 * C1182;
    const double C10652 = C32919 * C1182;
    const double C23919 = C32731 * C1182;
    const double C24665 = C24235 * C1182;
    const double C2273 = C1819 * C1170;
    const double C5079 = C3485 * C1170;
    const double C10651 = C10225 * C1170;
    const double C23918 = C20431 * C1170;
    const double C24664 = C31700 * C1170;
    const double C6470 = C6468 * C32542;
    const double C7786 = C6468 * C32552;
    const double C15892 = C6468 * C32552;
    const double C8302 = C8170 * C32552;
    const double C16402 = C8170 * C32552;
    const double C32405 = C32404 + C32389;
    const double C6295 = C6291 * C6200;
    const double C6660 = C6656 * C6200;
    const double C175 = C162 + C163;
    const double C3532 = C3513 + C3514;
    const double C20478 = C20459 + C20460;
    const double C497 = C483 + C484;
    const double C3890 = C3867 + C3868;
    const double C20836 = C20813 + C20814;
    const double C851 = C842 + C843;
    const double C4528 = C4501 + C4502;
    const double C21310 = C21299 + C21300;
    const double C609 = C595 + C596;
    const double C1870 = C1847 + C1848;
    const double C3530 = C3509 + C3510;
    const double C4056 = C4033 + C4034;
    const double C10276 = C10253 + C10254;
    const double C20476 = C20455 + C20456;
    const double C21002 = C20979 + C20980;
    const double C1868 = C1843 + C1844;
    const double C2484 = C2461 + C2462;
    const double C4059 = C4039 + C4040;
    const double C10274 = C10249 + C10250;
    const double C10858 = C10835 + C10836;
    const double C21005 = C20985 + C20986;
    const double C24287 = C24262 + C24263;
    const double C1519 = C1507 + C1508;
    const double C2298 = C2275 + C2276;
    const double C3893 = C3873 + C3874;
    const double C5096 = C5081 + C5082;
    const double C10676 = C10653 + C10654;
    const double C20839 = C20819 + C20820;
    const double C23927 = C23920 + C23921;
    const double C1020 = C1004 + C1005;
    const double C1515 = C1499 + C1500;
    const double C4527 = C4499 + C4500;
    const double C21309 = C21297 + C21298;
    const double C2483 = C2459 + C2460;
    const double C10857 = C10833 + C10834;
    const double C13552 = C13528 + C13529;
    const double C22446 = C22422 + C22423;
    const double C24870 = C24846 + C24847;
    const double C9610 = C9604 + C9605;
    const double C480 = C32644 * C273;
    const double C845 = C32644 * C281;
    const double C592 = C32644 * C378;
    const double C3512 = C32731 * C378;
    const double C20458 = C32731 * C378;
    const double C6659 = C6655 * C32542;
    const double C31920 = C31919 + C31911;
    const double C1185 =
        (C31810 + C31834 * C31936 + ae * C31757 * C31956 +
         C31757 * (ae * C31956 +
                   C31757 * (C31834 + (C31826 + ae * C31758 * C31827 +
                                       C31758 * (ae * C31827 +
                                                 C31758 * std::pow(C31760, 8) *
                                                     bs[8] * C31768)) *
                                          C31936))) /
        C31519;
    const double C1679 =
        (ae * (2 * C31947 + C31927 * C31956) +
         C31757 * (2 * C31927 * C31834 +
                   C31927 * (C31834 + (C31826 + ae * C31758 * C31827 +
                                       C31758 * (ae * C31827 +
                                                 C31758 * std::pow(C31760, 8) *
                                                     bs[8] * C31768)) *
                                          C31936))) /
        C31519;
    const double C980 = (3 * (C31880 + C31893 * C31936) +
                         C31927 * (2 * C31947 + C31927 * C31956)) /
                        C31514;
    const double C1176 = (C31880 + C31893 * C31936 + C31956 * C31969) / C31514;
    const double C1676 = (C31757 * (2 * C31947 + C31927 * C31956)) / C31514;
    const double C2121 =
        (3 * (C31810 + ae * C31981 + C31757 * C31985) +
         ae * (2 * C31981 + C31757 * C31986) +
         C31757 *
             (2 * C31985 + ae * C31986 +
              C31757 *
                  (C31834 + ae * C31757 * C31917 +
                   C31757 * (ae * C31917 +
                             C31757 * (C31826 + ae * C31758 * C31827 +
                                       C31758 * (ae * C31827 +
                                                 C31758 * std::pow(C31760, 8) *
                                                     bs[8] * C31768)))))) /
        C31519;
    const double C2115 = (3 * (C31880 + C31893 * C31969) +
                          C31757 * (2 * C31981 + C31757 * C31986)) /
                         C31514;
    const double C6195 =
        (C32951 + 2 * C32687) / C31520 - (C32958 * C32683) / C31514;
    const double C6196 =
        (C32939 + 2 * C32694 + C32958) / C31520 - (C32954 * C32683) / C31514;
    const double C6197 = (C32916 + C32691 / C31514 + C32954) / C31520 -
                         (C32944 * C32683) / C31514;
    const double C7789 = C6288 * C31559;
    const double C7782 = C1025 * C31559;
    const double C7778 = C1018 * C31559;
    const double C7774 = C1016 * C31559;
    const double C8032 = C1023 * C31559;
    const double C8028 = C848 * C31559;
    const double C8024 = C502 * C31559;
    const double C8313 = C1700 * C31559;
    const double C8309 = C1698 * C31559;
    const double C8305 = C6658 * C31559;
    const double C8626 = C8606 * C31559;
    const double C31562 = C31559 / C31520;
    const double C31561 = C31512 * C31559;
    const double C1037 = C1036 + C1000;
    const double C15899 = C15897 + C15890;
    const double C15898 = C15896 + C15886;
    const double C19601 = C19600 + C19598;
    const double C31681 = C31675 / C31520;
    const double C31680 = C31597 * C31675;
    const double C20483 = C20473 + C20474;
    const double C20482 = C20471 + C20472;
    const double C20481 = C20469 + C20470;
    const double C21863 = C20845 + C20846;
    const double C21858 = C20846 + C20845;
    const double C21862 = C20843 + C20844;
    const double C21859 = C20844 + C20843;
    const double C23234 = C20842 + C20841;
    const double C23723 = C20841 + C20842;
    const double C21476 = C21307 + C21308;
    const double C21860 = C21308 + C21307;
    const double C21475 = C21305 + C21306;
    const double C21861 = C21306 + C21305;
    const double C27364 = C21510 + C21509;
    const double C27365 = C21508 + C21507;
    const double C21512 = C21499 + C21500;
    const double C21511 = C21497 + C21498;
    const double C6942 = C6940 * C32542;
    const double C6941 = C6939 * C6200;
    const double C11294 = C11292 * C32542;
    const double C11293 = C11291 * C6200;
    const double C386 =
        (2 * C31790 + ae * C31791 + C31758 * C31810 + ae * C31757 * C31896 +
         C31757 * (ae * C31896 + C31757 * C31838)) /
        C31519;
    const double C714 =
        (ae * C31927 * C31896 + C31757 * C31927 * C31838) / C31519;
    const double C136 = (4 * (2 * C31875 + C31758 * C31880 + C32144 * ae) +
                         C31758 * (3 * C31880 + C31758 * C31896 + C32148 * ae) +
                         (3 * C32144 + C31758 * C32148) * ae) /
                        C31514;
    const double C253 =
        (C31927 * (3 * C31880 + C31758 * C31896 + C32148 * ae)) / C31514;
    const double C270 =
        (2 * C31875 + C31758 * C31880 + C32144 * ae + C31896 * C31936) / C31514;
    const double C358 =
        (C31757 * (3 * C31880 + C31758 * C31896 + C32148 * ae)) / C31514;
    const double C375 =
        (2 * C31875 + C31758 * C31880 + C32144 * ae + C31896 * C31969) / C31514;
    const double C708 = (C31757 * C31927 * C31896) / C31514;
    const double C2297 = C2273 + C2274;
    const double C5095 = C5079 + C5080;
    const double C10675 = C10651 + C10652;
    const double C23926 = C23918 + C23919;
    const double C24688 = C24664 + C24665;
    const double C12097 =
        (5 * (3 * C32384 + C31757 * C32405 + C32383 * ae) +
         C31757 *
             (4 * C32405 +
              C31757 *
                  (3 * C32400 +
                   C31757 *
                       (2 * C32392 +
                        C31757 * (C31803 + C31757 * (C31757 * C31827 + C31904) +
                                  C31757 * C31901 * ae) +
                        C32394 * ae) +
                   C32399 * ae) +
              C32403 * ae) +
         (4 * C32383 + C31757 * C32403) * ae) /
        C31514;
    const double C1342 = C497 * C32905;
    const double C2866 = C497 * C32920;
    const double C3108 = C497 * C2752;
    const double C5822 = C497 * C32905;
    const double C15163 = C497 * C32920;
    const double C15405 = C497 * C32937;
    const double C17973 = C497 * C17571;
    const double C1003 = C851 * C32905;
    const double C1346 = C851 * C827;
    const double C2869 = C851 * C2752;
    const double C5549 = C851 * C32905;
    const double C5826 = C851 * C32935;
    const double C8031 = C851 * C32552;
    const double C15166 = C851 * C32937;
    const double C16137 = C851 * C32552;
    const double C17700 = C851 * C17571;
    const double C17977 = C851 * C32555;
    const double C3538 = C3529 + C3530;
    const double C20484 = C20475 + C20476;
    const double C1878 = C1876 + C1868;
    const double C10284 = C10282 + C10274;
    const double C1689 = C1519 * C32905;
    const double C3379 = C1519 * C2752;
    const double C6127 = C1519 * C32905;
    const double C15670 = C1519 * C32937;
    const double C18278 = C1519 * C17571;
    const double C4344 = C3894 + C3893;
    const double C4881 = C3893 + C3894;
    const double C23235 = C20840 + C20839;
    const double C23722 = C20839 + C20840;
    const double C1030 = C1020 * C32905;
    const double C5550 = C1020 * C32905;
    const double C8035 = C1020 * C32552;
    const double C16141 = C1020 * C32552;
    const double C17701 = C1020 * C17571;
    const double C1681 = C1515 * C32905;
    const double C6121 = C1515 * C32905;
    const double C18272 = C1515 * C17571;
    const double C31921 = C31758 * C31920;
    const double C31988 = C31927 * C31920;
    const double C1497 =
        (ae * (C31896 + C31920 * C31936) +
         C31757 * (C31838 + (2 * C31830 + ae * C31831 +
                             C31758 * (C31826 + ae * C31758 * C31827 +
                                       C31758 * (ae * C31827 +
                                                 C31758 * std::pow(C31760, 8) *
                                                     bs[8] * C31768))) *
                                C31936)) /
        C31519;
    const double C2457 =
        (2 * (ae * C31896 + C31757 * C31838) + ae * (C31896 + C31920 * C31969) +
         C31757 *
             (C31838 + ae * C31757 * C31920 +
              C31757 *
                  (ae * C31920 +
                   C31757 * (2 * C31830 + ae * C31831 +
                             C31758 * (C31826 + ae * C31758 * C31827 +
                                       C31758 * (ae * C31827 +
                                                 C31758 * std::pow(C31760, 8) *
                                                     bs[8] * C31768)))))) /
        C31519;
    const double C1334 =
        (2 * C31927 * C31896 + C31927 * (C31896 + C31920 * C31936)) / C31514;
    const double C1496 = (C31757 * (C31896 + C31920 * C31936)) / C31514;
    const double C2456 =
        (2 * C31757 * C31896 + C31757 * (C31896 + C31920 * C31969)) / C31514;
    const double C7791 = C7782 + C7783;
    const double C7790 = C7778 + C7779;
    const double C8638 = C8626 + C8627;
    const double C31565 = C31562 - C31557;
    const double C5425 = C31562 + (C31548 * ae) / C31514;
    const double C31564 = C31561 + C32866;
    const double C1038 = C1037 + C1001;
    const double C15901 = C15899 + C15891;
    const double C15900 = C15898 + C15887;
    const double C19602 = C19601 + C19599;
    const double C31686 = C31681 - C31682;
    const double C31685 = C31680 + C32886;
    const double C21502 = C21476 * C32552;
    const double C28933 = C21476 * C32552;
    const double C21501 = C21475 * C15780;
    const double C28932 = C21475 * C31540;
    const double C27375 = C27364 * C6200;
    const double C27376 = C27365 * C32542;
    const double C21514 = C21512 * C15773;
    const double C27363 = C21512 * C32542;
    const double C28931 = C21512 * C32866;
    const double C21513 = C21511 * C15779;
    const double C27362 = C21511 * C6200;
    const double C28930 = C21511 * C31559;
    const double C6943 = C6941 + C6942;
    const double C11295 = C11293 + C11294;
    const double C1846 = C32919 * C386;
    const double C4032 = C32731 * C386;
    const double C10252 = C32919 * C386;
    const double C20978 = C32731 * C386;
    const double C24265 = C24235 * C386;
    const double C3242 = C32644 * C714;
    const double C3866 = C32731 * C714;
    const double C20812 = C32731 * C714;
    const double C164 = C113 * C136;
    const double C479 = C113 * C253;
    const double C844 = C113 * C270;
    const double C591 = C113 * C358;
    const double C3511 = C3485 * C358;
    const double C20457 = C20431 * C358;
    const double C1845 = C1819 * C375;
    const double C4031 = C3485 * C375;
    const double C10251 = C10225 * C375;
    const double C20977 = C20431 * C375;
    const double C24264 = C31700 * C375;
    const double C3241 = C113 * C708;
    const double C3865 = C3485 * C708;
    const double C20811 = C20431 * C708;
    const double C31922 = C31898 + C31921;
    const double C2271 =
        (C31927 * C31838 + ae * C31757 * C31988 +
         C31757 * (ae * C31988 +
                   C31757 * C31927 *
                       (2 * C31830 + ae * C31831 +
                        C31758 * (C31826 + ae * C31758 * C31827 +
                                  C31758 * (ae * C31827 +
                                            C31758 * std::pow(C31760, 8) *
                                                bs[8] * C31768))))) /
        C31519;
    const double C2270 = (C31927 * C31896 + C31988 * C31969) / C31514;
    const double C7793 = C7791 + C7784;
    const double C7792 = C7790 + C7780;
    const double C8639 = C8638 + C8628;
    const double C17704 = C1023 * C31565;
    const double C17697 = C848 * C31565;
    const double C17691 = C502 * C31565;
    const double C17976 = C850 * C31565;
    const double C17970 = C500 * C31565;
    const double C18281 = C1522 * C31565;
    const double C18275 = C1518 * C31565;
    const double C117 =
        (C31565 / C31520 + ((C31512 * C31575 + C17571) * ae) / C31514) /
            C31520 -
        ((C31512 * (C31575 / C31520 + (0 * ae) / C31514) + C32920) * be) /
            C31514;
    const double C2758 =
        C31565 / C31520 - ((C31512 * C31575 + C17571) * be) / C31514;
    const double C15055 =
        C31565 / C31520 + ((C31512 * C31575 + C17571) * ae) / C31514;
    const double C5553 = C1023 * C5425;
    const double C5546 = C848 * C5425;
    const double C5540 = C502 * C5425;
    const double C5825 = C850 * C5425;
    const double C5819 = C500 * C5425;
    const double C6130 = C1522 * C5425;
    const double C6124 = C1518 * C5425;
    const double C31566 = C31564 * be;
    const double C5424 = C31551 + (C31564 * ae) / C31514 + C31540;
    const double C1039 = C1038 + C1002;
    const double C24272 = C31686 * C349;
    const double C24266 = C31686 * C360;
    const double C24260 = C31686 * C362;
    const double C24254 = C31686 * C350;
    const double C24248 = C31686 * C364;
    const double C24242 = C31686 * C351;
    const double C24684 = C31686 * C697;
    const double C24678 = C31686 * C704;
    const double C24672 = C31686 * C698;
    const double C24666 = C31686 * C706;
    const double C24866 = C31686 * C354;
    const double C24860 = C31686 * C371;
    const double C24854 = C31686 * C355;
    const double C24848 = C31686 * C373;
    const double C25352 = C31686 * C1152;
    const double C25346 = C31686 * C1163;
    const double C25340 = C31686 * C1151;
    const double C25334 = C31686 * C1161;
    const double C25328 = C31686 * C702;
    const double C25322 = C31686 * C696;
    const double C25924 = C31686 * C1154;
    const double C25918 = C31686 * C1168;
    const double C26136 = C31686 * C1153;
    const double C26130 = C31686 * C1166;
    const double C30915 = C31686 * C1668;
    const double C30909 = C31686 * C1672;
    const double C31486 = C31686 * C1156;
    const double C31480 = C31686 * C1172;
    const double C11967 =
        (C31686 / C31520 + ((C31597 * C31700 + C24235) * ae) / C31514) /
            C31520 -
        ((C31597 * (C31700 / C31520 + (0 * ae) / C31514) + C32932) * be) /
            C31514;
    const double C13509 =
        C31686 / C31520 - ((C31597 * C31700 + C24235) * be) / C31514;
    const double C22403 =
        C31686 / C31520 + ((C31597 * C31700 + C24235) * ae) / C31514;
    const double C31689 = C31685 * be;
    const double C27381 = C27375 + C27376;
    const double C21515 = C21513 + C21514;
    const double C27374 = C27362 + C27363;
    const double C28934 = C28930 + C28931;
    const double C176 = C164 + C165;
    const double C495 = C479 + C480;
    const double C852 = C844 + C845;
    const double C607 = C591 + C592;
    const double C3531 = C3511 + C3512;
    const double C20477 = C20457 + C20458;
    const double C1869 = C1845 + C1846;
    const double C4055 = C4031 + C4032;
    const double C10275 = C10251 + C10252;
    const double C21001 = C20977 + C20978;
    const double C24288 = C24264 + C24265;
    const double C3245 = C3241 + C3242;
    const double C3889 = C3865 + C3866;
    const double C20835 = C20811 + C20812;
    const double C31923 = C31922 + C31916;
    const double C7795 = C7793 + C7785;
    const double C7794 = C7792 + C7781;
    const double C8640 = C8639 + C8629;
    const double C2870 = C850 * C2758;
    const double C2863 = C500 * C2758;
    const double C3107 = C498 * C2758;
    const double C3380 = C1520 * C2758;
    const double C15167 = C850 * C15055;
    const double C15160 = C500 * C15055;
    const double C15404 = C498 * C15055;
    const double C15671 = C1520 * C15055;
    const double C31567 = C31566 / C31514;
    const double C5555 = C1025 * C5424;
    const double C5544 = C1018 * C5424;
    const double C5538 = C1016 * C5424;
    const double C5823 = C848 * C5424;
    const double C5817 = C502 * C5424;
    const double C6132 = C1700 * C5424;
    const double C6126 = C1698 * C5424;
    const double C1040 = C1039 + C1003;
    const double C24292 = C24272 + C24273;
    const double C24289 = C24266 + C24267;
    const double C24286 = C24260 + C24261;
    const double C24283 = C24254 + C24255;
    const double C24280 = C24248 + C24249;
    const double C24277 = C24242 + C24243;
    const double C24698 = C24684 + C24685;
    const double C24695 = C24678 + C24679;
    const double C24692 = C24672 + C24673;
    const double C24689 = C24666 + C24667;
    const double C24880 = C24866 + C24867;
    const double C24877 = C24860 + C24861;
    const double C24874 = C24854 + C24855;
    const double C24871 = C24848 + C24849;
    const double C25372 = C25352 + C25353;
    const double C25369 = C25346 + C25347;
    const double C25366 = C25340 + C25341;
    const double C25363 = C25334 + C25335;
    const double C25360 = C25328 + C25329;
    const double C25357 = C25322 + C25323;
    const double C25932 = C25924 + C25925;
    const double C25929 = C25918 + C25919;
    const double C26144 = C26136 + C26137;
    const double C26141 = C26130 + C26131;
    const double C30925 = C30915 + C30916;
    const double C30922 = C30909 + C30910;
    const double C31494 = C31486 + C31487;
    const double C31491 = C31480 + C31481;
    const double C13538 = C13509 * C355;
    const double C13530 = C13509 * C373;
    const double C13524 = C13509 * C371;
    const double C13516 = C13509 * C354;
    const double C13896 = C13509 * C1154;
    const double C13888 = C13509 * C1168;
    const double C14050 = C13509 * C2099;
    const double C14042 = C13509 * C2106;
    const double C14416 = C13509 * C1156;
    const double C14408 = C13509 * C1172;
    const double C14402 = C13509 * C1166;
    const double C14394 = C13509 * C1153;
    const double C14936 = C13509 * C2640;
    const double C14928 = C13509 * C2644;
    const double C22432 = C22403 * C355;
    const double C22424 = C22403 * C373;
    const double C22418 = C22403 * C371;
    const double C22410 = C22403 * C354;
    const double C22790 = C22403 * C1154;
    const double C22782 = C22403 * C1168;
    const double C22944 = C22403 * C2099;
    const double C22936 = C22403 * C2106;
    const double C28104 = C22403 * C1156;
    const double C28096 = C22403 * C1172;
    const double C28090 = C22403 * C1166;
    const double C28082 = C22403 * C1153;
    const double C28624 = C22403 * C2640;
    const double C28616 = C22403 * C2644;
    const double C31691 = C31689 / C31514;
    const double C21516 = C21515 + C21501;
    const double C28935 = C28934 + C28932;
    const double C3110 = C495 * C32920;
    const double C15407 = C495 * C32920;
    const double C1348 = C852 * C32905;
    const double C2867 = C852 * C32920;
    const double C5828 = C852 * C32905;
    const double C15164 = C852 * C32920;
    const double C17979 = C852 * C17571;
    const double C3377 = C3245 * C32920;
    const double C15668 = C3245 * C32920;
    const double C387 =
        (3 * C31810 + ae * C31811 + C31758 * C31838 + ae * C31757 * C31923 +
         C31757 *
             (ae * C31923 +
              C31757 *
                  (3 * C31834 + ae * C31835 +
                   C31758 * (2 * C31830 + ae * C31831 +
                             C31758 * (C31826 + ae * C31758 * C31827 +
                                       C31758 * (ae * C31827 +
                                                 C31758 * std::pow(C31760, 8) *
                                                     bs[8] * C31768)))))) /
        C31519;
    const double C589 =
        (ae * (4 * C31896 + C31758 * C31923 +
               (3 * C31859 + C31758 * C31914) * ae) +
         C31757 *
             (4 * C31838 + ae * C31839 +
              C31758 *
                  (3 * C31834 + ae * C31835 +
                   C31758 * (2 * C31830 + ae * C31831 +
                             C31758 * (C31826 + ae * C31758 * C31827 +
                                       C31758 * (ae * C31827 +
                                                 C31758 * std::pow(C31760, 8) *
                                                     bs[8] * C31768)))))) /
        C31519;
    const double C715 =
        (ae * C31927 * C31923 +
         C31757 * C31927 *
             (3 * C31834 + ae * C31835 +
              C31758 * (2 * C31830 + ae * C31831 +
                        C31758 * (C31826 + ae * C31758 * C31827 +
                                  C31758 * (ae * C31827 +
                                            C31758 * std::pow(C31760, 8) *
                                                bs[8] * C31768))))) /
        C31519;
    const double C139 = (5 * (3 * C31880 + C31758 * C31896 + C32148 * ae) +
                         C31758 * (4 * C31896 + C31758 * C31923 + C32154 * ae) +
                         (4 * C32148 + C31758 * C32154) * ae) /
                        C31514;
    const double C272 =
        (3 * C31880 + C31758 * C31896 + C32148 * ae + C31923 * C31936) / C31514;
    const double C377 =
        (3 * C31880 + C31758 * C31896 + C32148 * ae + C31923 * C31969) / C31514;
    const double C476 =
        (C31927 * (4 * C31896 + C31758 * C31923 + C32154 * ae)) / C31514;
    const double C588 =
        (C31757 * (4 * C31896 + C31758 * C31923 + C32154 * ae)) / C31514;
    const double C710 = (C31757 * C31927 * C31923) / C31514;
    const double C31568 = C31551 - C31567;
    const double C5556 = C5544 + C5545;
    const double C13557 = C13538 + C13539;
    const double C13553 = C13530 + C13531;
    const double C13550 = C13524 + C13525;
    const double C13546 = C13516 + C13517;
    const double C13907 = C13896 + C13897;
    const double C13903 = C13888 + C13889;
    const double C14061 = C14050 + C14051;
    const double C14057 = C14042 + C14043;
    const double C14435 = C14416 + C14417;
    const double C14431 = C14408 + C14409;
    const double C14428 = C14402 + C14403;
    const double C14424 = C14394 + C14395;
    const double C14947 = C14936 + C14937;
    const double C14943 = C14928 + C14929;
    const double C22451 = C22432 + C22433;
    const double C22447 = C22424 + C22425;
    const double C22444 = C22418 + C22419;
    const double C22440 = C22410 + C22411;
    const double C22801 = C22790 + C22791;
    const double C22797 = C22782 + C22783;
    const double C22955 = C22944 + C22945;
    const double C22951 = C22936 + C22937;
    const double C28123 = C28104 + C28105;
    const double C28119 = C28096 + C28097;
    const double C28116 = C28090 + C28091;
    const double C28112 = C28082 + C28083;
    const double C28635 = C28624 + C28625;
    const double C28631 = C28616 + C28617;
    const double C31693 = C31679 - C31691;
    const double C21517 = C21516 + C21502;
    const double C28936 = C28935 + C28933;
    const double C31569 = C31568 + C31540;
    const double C5557 = C5556 + C5546;
    const double C31694 = C31693 + C31664;
    const double C17706 = C1025 * C31569;
    const double C17695 = C1018 * C31569;
    const double C17689 = C1016 * C31569;
    const double C17974 = C848 * C31569;
    const double C17968 = C502 * C31569;
    const double C18283 = C1700 * C31569;
    const double C18277 = C1698 * C31569;
    const double C114 =
        (((((0 - (C31512 * C31513) / C31514) * ae) / C31514 -
           (0 * be) / C31526 + (2 * C31515) / C31514) /
              C31520 -
          ((C31512 * C31549 + 0) * be) / C31514 + C31532 - C31542) /
             C31520 +
         ((C31512 * C31563 + 0) * ae) / C31514) /
            C31520 -
        ((C31512 * (C31563 / C31520 +
                    ((C31512 * C31569 + C32547) * ae) / C31514 + C31565) +
          C32957) *
         be) /
            C31514 +
        C31569 / C31520 + ((C31512 * C31565 + C32555) * ae) / C31514 +
        2 * (C31540 / C31520 - (0 * be) / C31514);
    const double C115 =
        (C31563 / C31520 + ((C31512 * C31569 + C32547) * ae) / C31514 +
         C31565) /
            C31520 -
        ((C31512 * (C31569 / C31520 +
                    ((C31512 * C31565 + C32555) * ae) / C31514 + 2 * C31575) +
          C32950) *
         be) /
            C31514 +
        2 * (C31565 / C31520 + ((C31512 * C31575 + C17571) * ae) / C31514);
    const double C116 =
        (C31569 / C31520 + ((C31512 * C31565 + C32555) * ae) / C31514 +
         2 * C31575) /
            C31520 -
        ((C31512 *
              (C31565 / C31520 + ((C31512 * C31575 + C17571) * ae) / C31514) +
          C32937) *
         be) /
            C31514 +
        3 * (C31575 / C31520 + (0 * ae) / C31514);
    const double C2756 =
        C31563 / C31520 - ((C31512 * C31569 + C32547) * be) / C31514 + C31565;
    const double C2757 = C31569 / C31520 -
                         ((C31512 * C31565 + C32555) * be) / C31514 +
                         2 * C31575;
    const double C15053 =
        C31563 / C31520 + ((C31512 * C31569 + C32547) * ae) / C31514 + C31565;
    const double C15054 = C31569 / C31520 +
                          ((C31512 * C31565 + C32555) * ae) / C31514 +
                          2 * C31575;
    const double C5558 = C5557 + C5547;
    const double C24274 = C31694 * C122;
    const double C24268 = C31694 * C133;
    const double C24258 = C31694 * C131;
    const double C24252 = C31694 * C121;
    const double C24246 = C31694 * C129;
    const double C24240 = C31694 * C120;
    const double C24686 = C31694 * C246;
    const double C24680 = C31694 * C259;
    const double C24674 = C31694 * C245;
    const double C24668 = C31694 * C257;
    const double C24868 = C31694 * C351;
    const double C24862 = C31694 * C364;
    const double C24856 = C31694 * C350;
    const double C24850 = C31694 * C362;
    const double C25354 = C31694 * C248;
    const double C25348 = C31694 * C264;
    const double C25342 = C31694 * C249;
    const double C25336 = C31694 * C266;
    const double C25326 = C31694 * C261;
    const double C25320 = C31694 * C247;
    const double C25926 = C31694 * C697;
    const double C25920 = C31694 * C704;
    const double C26138 = C31694 * C696;
    const double C26132 = C31694 * C702;
    const double C30917 = C31694 * C965;
    const double C30911 = C31694 * C973;
    const double C31488 = C31694 * C1152;
    const double C31482 = C31694 * C1163;
    const double C11964 =
        (((((0 - (C31597 * C31647) / C31514) * ae) / C31514 -
           (0 * be) / C31526 + (2 * C31648) / C31514) /
              C31520 -
          ((C31597 * C31683 + 0) * be) / C31514 + C31657 - C31670) /
             C31520 +
         ((C31597 * C31692 + 0) * ae) / C31514) /
            C31520 -
        ((C31597 * (C31692 / C31520 +
                    ((C31597 * C31694 + C32727) * ae) / C31514 + C31686) +
          C32959) *
         be) /
            C31514 +
        C31694 / C31520 + ((C31597 * C31686 + C32734) * ae) / C31514 +
        2 * (C31664 / C31520 - (0 * be) / C31514);
    const double C11965 =
        (C31692 / C31520 + ((C31597 * C31694 + C32727) * ae) / C31514 +
         C31686) /
            C31520 -
        ((C31597 * (C31694 / C31520 +
                    ((C31597 * C31686 + C32734) * ae) / C31514 + 2 * C31700) +
          C32956) *
         be) /
            C31514 +
        2 * (C31686 / C31520 + ((C31597 * C31700 + C24235) * ae) / C31514);
    const double C11966 =
        (C31694 / C31520 + ((C31597 * C31686 + C32734) * ae) / C31514 +
         2 * C31700) /
            C31520 -
        ((C31597 *
              (C31686 / C31520 + ((C31597 * C31700 + C24235) * ae) / C31514) +
          C32947) *
         be) /
            C31514 +
        3 * (C31700 / C31520 + (0 * ae) / C31514);
    const double C13507 =
        C31692 / C31520 - ((C31597 * C31694 + C32727) * be) / C31514 + C31686;
    const double C13508 = C31694 / C31520 -
                          ((C31597 * C31686 + C32734) * be) / C31514 +
                          2 * C31700;
    const double C22401 =
        C31692 / C31520 + ((C31597 * C31694 + C32727) * ae) / C31514 + C31686;
    const double C22402 = C31694 / C31520 +
                          ((C31597 * C31686 + C32734) * ae) / C31514 +
                          2 * C31700;
    const double C17707 = C17695 + C17696;
    const double C2874 = C1018 * C2756;
    const double C2859 = C1016 * C2756;
    const double C3103 = C502 * C2756;
    const double C3384 = C1700 * C2756;
    const double C2872 = C848 * C2757;
    const double C2861 = C502 * C2757;
    const double C3105 = C500 * C2757;
    const double C3382 = C1522 * C2757;
    const double C15171 = C1018 * C15053;
    const double C15156 = C1016 * C15053;
    const double C15400 = C502 * C15053;
    const double C15675 = C1700 * C15053;
    const double C15169 = C848 * C15054;
    const double C15158 = C502 * C15054;
    const double C15402 = C500 * C15054;
    const double C15673 = C1522 * C15054;
    const double C5559 = C5558 + C5548;
    const double C24293 = C24274 + C24275;
    const double C24290 = C24268 + C24269;
    const double C24285 = C24258 + C24259;
    const double C24282 = C24252 + C24253;
    const double C24279 = C24246 + C24247;
    const double C24276 = C24240 + C24241;
    const double C24699 = C24686 + C24687;
    const double C24696 = C24680 + C24681;
    const double C24693 = C24674 + C24675;
    const double C24690 = C24668 + C24669;
    const double C24881 = C24868 + C24869;
    const double C24878 = C24862 + C24863;
    const double C24875 = C24856 + C24857;
    const double C24872 = C24850 + C24851;
    const double C25373 = C25354 + C25355;
    const double C25370 = C25348 + C25349;
    const double C25367 = C25342 + C25343;
    const double C25364 = C25336 + C25337;
    const double C25359 = C25326 + C25327;
    const double C25356 = C25320 + C25321;
    const double C25933 = C25926 + C25927;
    const double C25930 = C25920 + C25921;
    const double C26145 = C26138 + C26139;
    const double C26142 = C26132 + C26133;
    const double C30926 = C30917 + C30918;
    const double C30923 = C30911 + C30912;
    const double C31495 = C31488 + C31489;
    const double C31492 = C31482 + C31483;
    const double C13542 = C13507 * C121;
    const double C13534 = C13507 * C131;
    const double C13520 = C13507 * C129;
    const double C13512 = C13507 * C120;
    const double C13900 = C13507 * C246;
    const double C13892 = C13507 * C259;
    const double C14054 = C13507 * C351;
    const double C14046 = C13507 * C364;
    const double C14420 = C13507 * C248;
    const double C14412 = C13507 * C264;
    const double C14398 = C13507 * C261;
    const double C14390 = C13507 * C247;
    const double C14940 = C13507 * C696;
    const double C14932 = C13507 * C702;
    const double C13540 = C13508 * C350;
    const double C13532 = C13508 * C362;
    const double C13522 = C13508 * C364;
    const double C13514 = C13508 * C351;
    const double C13898 = C13508 * C697;
    const double C13890 = C13508 * C704;
    const double C14052 = C13508 * C354;
    const double C14044 = C13508 * C371;
    const double C14418 = C13508 * C1152;
    const double C14410 = C13508 * C1163;
    const double C14400 = C13508 * C702;
    const double C14392 = C13508 * C696;
    const double C14938 = C13508 * C1153;
    const double C14930 = C13508 * C1166;
    const double C22436 = C22401 * C121;
    const double C22428 = C22401 * C131;
    const double C22414 = C22401 * C129;
    const double C22406 = C22401 * C120;
    const double C22794 = C22401 * C246;
    const double C22786 = C22401 * C259;
    const double C22948 = C22401 * C351;
    const double C22940 = C22401 * C364;
    const double C28108 = C22401 * C248;
    const double C28100 = C22401 * C264;
    const double C28086 = C22401 * C261;
    const double C28078 = C22401 * C247;
    const double C28628 = C22401 * C696;
    const double C28620 = C22401 * C702;
    const double C22434 = C22402 * C350;
    const double C22426 = C22402 * C362;
    const double C22416 = C22402 * C364;
    const double C22408 = C22402 * C351;
    const double C22792 = C22402 * C697;
    const double C22784 = C22402 * C704;
    const double C22946 = C22402 * C354;
    const double C22938 = C22402 * C371;
    const double C28106 = C22402 * C1152;
    const double C28098 = C22402 * C1163;
    const double C28088 = C22402 * C702;
    const double C28080 = C22402 * C696;
    const double C28626 = C22402 * C1153;
    const double C28618 = C22402 * C1166;
    const double C17708 = C17707 + C17697;
    const double C5560 = C5559 + C5549;
    const double C24295 = C24285 + C24286;
    const double C24294 = C24282 + C24283;
    const double C25717 = C24698 + C24699;
    const double C25714 = C24699 + C24698;
    const double C25716 = C24695 + C24696;
    const double C25715 = C24696 + C24695;
    const double C30905 = C25373 + C25372;
    const double C30906 = C25370 + C25369;
    const double C13559 = C13542 + C13543;
    const double C13555 = C13534 + C13535;
    const double C13548 = C13520 + C13521;
    const double C13544 = C13512 + C13513;
    const double C13909 = C13900 + C13901;
    const double C13905 = C13892 + C13893;
    const double C14063 = C14054 + C14055;
    const double C14059 = C14046 + C14047;
    const double C14437 = C14420 + C14421;
    const double C14433 = C14412 + C14413;
    const double C14426 = C14398 + C14399;
    const double C14422 = C14390 + C14391;
    const double C14949 = C14940 + C14941;
    const double C14945 = C14932 + C14933;
    const double C13558 = C13540 + C13541;
    const double C13554 = C13532 + C13533;
    const double C13549 = C13522 + C13523;
    const double C13545 = C13514 + C13515;
    const double C13908 = C13898 + C13899;
    const double C13904 = C13890 + C13891;
    const double C14062 = C14052 + C14053;
    const double C14058 = C14044 + C14045;
    const double C14436 = C14418 + C14419;
    const double C14432 = C14410 + C14411;
    const double C14427 = C14400 + C14401;
    const double C14423 = C14392 + C14393;
    const double C14948 = C14938 + C14939;
    const double C14944 = C14930 + C14931;
    const double C22453 = C22436 + C22437;
    const double C22449 = C22428 + C22429;
    const double C22442 = C22414 + C22415;
    const double C22438 = C22406 + C22407;
    const double C22803 = C22794 + C22795;
    const double C22799 = C22786 + C22787;
    const double C22957 = C22948 + C22949;
    const double C22953 = C22940 + C22941;
    const double C28125 = C28108 + C28109;
    const double C28121 = C28100 + C28101;
    const double C28114 = C28086 + C28087;
    const double C28110 = C28078 + C28079;
    const double C28637 = C28628 + C28629;
    const double C28633 = C28620 + C28621;
    const double C22452 = C22434 + C22435;
    const double C22448 = C22426 + C22427;
    const double C22443 = C22416 + C22417;
    const double C22439 = C22408 + C22409;
    const double C22802 = C22792 + C22793;
    const double C22798 = C22784 + C22785;
    const double C22956 = C22946 + C22947;
    const double C22952 = C22938 + C22939;
    const double C28124 = C28106 + C28107;
    const double C28120 = C28098 + C28099;
    const double C28115 = C28088 + C28089;
    const double C28111 = C28080 + C28081;
    const double C28636 = C28626 + C28627;
    const double C28632 = C28618 + C28619;
    const double C17709 = C17708 + C17698;
    const double C24297 = C24295 + C24287;
    const double C24296 = C24294 + C24284;
    const double C25721 = C24697 + C25717;
    const double C25718 = C25714 + C24697;
    const double C25720 = C24694 + C25716;
    const double C25719 = C25715 + C24694;
    const double C30919 = C30905 + C25371;
    const double C30920 = C30906 + C25368;
    const double C17710 = C17709 + C17699;
    const double C30927 = C30919 * C6200;
    const double C30928 = C30920 * C32542;
    const double C17711 = C17710 + C17700;
    const double C30929 = C30927 + C30928;
    d2ee[0] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C119 + C32644 * C126) * C31569 +
             (C113 * C127 + C32644 * C140) * C32547 + C168 * C31565 +
             C169 * C32555 + C170 * C31575 + C171 * C17571) *
                C32687 +
            (C17689 + C17690 + C17691 + C17692 + C17693 + C17694) * C32694 +
            C17711 * C17574) *
               C32603 * C470 -
           ((C17701 + C17702 + C17703 + C17704 + C17705 + C17706) * C17574 +
            (C17700 + C17699 + C17698 + C17697 + C17696 + C17695) * C32694 +
            (C17694 + C17693 + C17692 + C17691 + C17690 + C17689) * C32687) *
               C32603 * C471) *
              C472 +
          (((C17968 + C17969 + C17970 + C17971 + C17972 + C17973) * C32687 +
            (C17974 + C17975 + C17976 + C17977 + C17978 + C17979) * C32694 +
            (C1023 * C31569 + C1022 * C32547 + C1021 * C31565 + C1020 * C32555 +
             (C113 * C1332 + C32644 * C1333) * C31575 +
             (C113 * C1334 + C32644 * C1335) * C17571) *
                C17574) *
               C32603 * C471 -
           ((C17979 + C17978 + C17977 + C17976 + C17975 + C17974) * C17574 +
            (C17973 + C17972 + C17971 + C17970 + C17969 + C17968) * C32694 +
            (C173 * C17571 + C172 * C31575 + C171 * C32555 + C170 * C31565 +
             C169 * C32547 + C168 * C31569) *
                C32687) *
               C32603 * C470) *
              C473)) /
        (p * q * std::sqrt(p + q));
    d2ee[1] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C119 + C32644 * C126) * C31569 +
             (C113 * C127 + C32644 * C140) * C32547 + C168 * C31565 +
             C169 * C32555 + C170 * C31575 + C171 * C17571) *
                C32687 +
            (C17689 + C17690 + C17691 + C17692 + C17693 + C17694) * C32694 +
            C17711 * C17574) *
               C584 -
           ((C18272 + C18273 + C18274 + C18275 + C18276 + C18277) * C17574 +
            (C18278 + C18279 + C18280 + C18281 + C18282 + C18283) * C32694 +
            (C611 * C17571 + C612 * C31575 + C613 * C32555 + C614 * C31565 +
             (C113 * C366 + C32644 * C382) * C32547 +
             (C113 * C352 + C32644 * C367) * C31569) *
                C32687) *
               C585) *
              C470 +
          (((C18283 + C18282 + C18281 + C18280 + C18279 + C18278) * C32687 +
            (C18277 + C18276 + C18275 + C18274 + C18273 + C18272) * C32694 +
            (C6658 * C31569 + C6657 * C32547 + C8171 * C31565 + C8170 * C32555 +
             (C113 * C1670 + C32644 * C1675) * C31575 +
             (C113 * C1676 + C32644 * C1679) * C17571) *
                C17574) *
               C585 -
           ((C17701 + C17702 + C17703 + C17704 + C17705 + C17706) * C17574 +
            (C17700 + C17699 + C17698 + C17697 + C17696 + C17695) * C32694 +
            (C17694 + C17693 + C17692 + C17691 + C17690 + C17689) * C32687) *
               C584) *
              C471) *
         C32577) /
        (p * q * std::sqrt(p + q));
    d2ee[2] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C119 + C32644 * C126) * C31569 +
            (C113 * C127 + C32644 * C140) * C32547 + C168 * C31565 +
            C169 * C32555 + C170 * C31575 + C171 * C17571) *
               C32687 +
           (C17689 + C17690 + C17691 + C17692 + C17693 + C17694) * C32694 +
           C17711 * C17574) *
              C32603 * C239 -
          ((C17701 + C17702 + C17703 + C17704 + C17705 + C17706) * C17574 +
           (C17700 + C17699 + C17698 + C17697 + C17696 + C17695) * C32694 +
           (C17694 + C17693 + C17692 + C17691 + C17690 + C17689) * C32687) *
              C32603 * C240 +
          (C17711 * C32687 +
           (C17706 + C17705 + C17704 + C17703 + C17702 + C17701) * C32694 +
           (C6288 * C31569 + C6289 * C32547 + C6467 * C31565 + C6468 * C32555 +
            (C113 * C968 + C32644 * C979) * C31575 +
            (C113 * C980 + C32644 * C986) * C17571) *
               C17574) *
              C32603 * C241) *
         C32577) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C119 + C32644 * C126) * C31569 +
            (C113 * C127 + C32644 * C140) * C32547 + C168 * C31565 +
            C169 * C32555 + C170 * C31575 + C171 * C17571) *
               C32687 +
           (C1016 * C31569 + C1017 * C32547 + C502 * C31565 + C501 * C32555 +
            C500 * C31575 + C499 * C17571) *
               C32694 +
           (C1018 * C31569 + C1019 * C32547 + C848 * C31565 + C849 * C32555 +
            C850 * C31575 + C851 * C17571) *
               C17574) *
              C32603 * C32589 * C110 -
          ((C852 * C17571 + C853 * C31575 + C851 * C32555 + C850 * C31565 +
            C849 * C32547 + C848 * C31569) *
               C17574 +
           (C497 * C17571 + C498 * C31575 + C499 * C32555 + C500 * C31565 +
            C501 * C32547 + C502 * C31569) *
               C32694 +
           (C173 * C17571 + C172 * C31575 + C171 * C32555 + C170 * C31565 +
            C169 * C32547 + C168 * C31569) *
               C32687) *
              C32603 * C32589 * C111 +
          ((C170 * C31569 + C171 * C32547 + C172 * C31565 + C173 * C32555 +
            C174 * C31575 + C175 * C17571) *
               C32687 +
           (C500 * C31569 + C499 * C32547 + C498 * C31565 + C497 * C32555 +
            C496 * C31575 + C495 * C17571) *
               C32694 +
           (C850 * C31569 + C851 * C32547 + C853 * C31565 + C852 * C32555 +
            (C113 * C252 + C32644 * C271) * C31575 +
            (C113 * C272 + C32644 * C282) * C17571) *
               C17574) *
              C32603 * C32589 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C119 + C32644 * C126) * C31569 +
            (C113 * C127 + C32644 * C140) * C32547 + C168 * C31565 +
            C169 * C32555 + C170 * C31575 + C171 * C17571) *
               C32687 +
           (C17689 + C17690 + C17691 + C17692 + C17693 + C17694) * C32694 +
           C17711 * C17574) *
              C345 -
          ((C1515 * C17571 + C1516 * C31575 + C1517 * C32555 + C1518 * C31565 +
            C1697 * C32547 + C1698 * C31569) *
               C17574 +
           (C1519 * C17571 + C1520 * C31575 + C1521 * C32555 + C1522 * C31565 +
            C1699 * C32547 + C1700 * C31569) *
               C32694 +
           (C611 * C17571 + C612 * C31575 + C613 * C32555 + C614 * C31565 +
            (C113 * C366 + C32644 * C382) * C32547 +
            (C113 * C352 + C32644 * C367) * C31569) *
               C32687) *
              C346 +
          (((C113 * C353 + C32644 * C368) * C31569 +
            (C113 * C369 + C32644 * C383) * C32547 +
            (C113 * C354 + C32644 * C370) * C31565 +
            (C113 * C371 + C32644 * C384) * C32555 +
            (C113 * C355 + C32644 * C372) * C31575 +
            (C113 * C373 + C32644 * C385) * C17571) *
               C32687 +
           ((C113 * C1153 + C32644 * C1165) * C31569 +
            (C113 * C1166 + C32644 * C1180) * C32547 +
            (C113 * C1154 + C32644 * C1167) * C31565 +
            (C113 * C1168 + C32644 * C1181) * C32555 +
            (C113 * C1155 + C32644 * C1169) * C31575 +
            (C113 * C1170 + C32644 * C1182) * C17571) *
               C32694 +
           ((C113 * C1156 + C32644 * C1171) * C31569 +
            (C113 * C1172 + C32644 * C1183) * C32547 +
            (C113 * C1157 + C32644 * C1173) * C31565 +
            (C113 * C1174 + C32644 * C1184) * C32555 +
            (C113 * C1158 + C32644 * C1175) * C31575 +
            (C113 * C1176 + C32644 * C1185) * C17571) *
               C17574) *
              C347) *
         C32589 * C32577) /
            (p * q * std::sqrt(p + q));
    d2ee[3] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C119 + C32644 * C126) * C31569 +
             (C113 * C127 + C32644 * C140) * C32547 + C168 * C31565 +
             C169 * C32555 + C170 * C31575 + C171 * C17571) *
                C32687 +
            (C17689 + C17690 + C17691 + C17692 + C17693 + C17694) * C32694 +
            C17711 * C17574) *
               C584 -
           ((C1515 * C17571 + C1516 * C31575 + C1517 * C32555 + C1518 * C31565 +
             C1697 * C32547 + C1698 * C31569) *
                C17574 +
            (C1519 * C17571 + C1520 * C31575 + C1521 * C32555 + C1522 * C31565 +
             C1699 * C32547 + C1700 * C31569) *
                C32694 +
            (C611 * C17571 + C612 * C31575 + C613 * C32555 + C614 * C31565 +
             (C113 * C366 + C32644 * C382) * C32547 +
             (C113 * C352 + C32644 * C367) * C31569) *
                C32687) *
               C585) *
              C32589 * C472 +
          (((C614 * C31569 + C613 * C32547 + C612 * C31565 + C611 * C32555 +
             C610 * C31575 + C609 * C17571) *
                C32687 +
            (C1522 * C31569 + C1521 * C32547 + C1520 * C31565 + C1519 * C32555 +
             C3246 * C31575 + C3245 * C17571) *
                C32694 +
            (C1518 * C31569 + C1517 * C32547 + C1516 * C31565 + C1515 * C32555 +
             (C113 * C1494 + C32644 * C1495) * C31575 +
             (C113 * C1496 + C32644 * C1497) * C17571) *
                C17574) *
               C585 -
           ((C17979 + C17978 + C17977 + C17976 + C17975 + C17974) * C17574 +
            (C17973 + C17972 + C17971 + C17970 + C17969 + C17968) * C32694 +
            (C173 * C17571 + C172 * C31575 + C171 * C32555 + C170 * C31565 +
             C169 * C32547 + C168 * C31569) *
                C32687) *
               C584) *
              C32589 * C473)) /
        (p * q * std::sqrt(p + q));
    d2ee[4] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C119 + C32644 * C126) * C31569 +
            (C113 * C127 + C32644 * C140) * C32547 + C168 * C31565 +
            C169 * C32555 + C170 * C31575 + C171 * C17571) *
               C32687 +
           (C1016 * C31569 + C1017 * C32547 + C502 * C31565 + C501 * C32555 +
            C500 * C31575 + C499 * C17571) *
               C32694 +
           (C1018 * C31569 + C1019 * C32547 + C848 * C31565 + C849 * C32555 +
            C850 * C31575 + C851 * C17571) *
               C17574) *
              C32603 * C32589 * C110 -
          ((C852 * C17571 + C853 * C31575 + C851 * C32555 + C850 * C31565 +
            C849 * C32547 + C848 * C31569) *
               C17574 +
           (C497 * C17571 + C498 * C31575 + C499 * C32555 + C500 * C31565 +
            C501 * C32547 + C502 * C31569) *
               C32694 +
           (C173 * C17571 + C172 * C31575 + C171 * C32555 + C170 * C31565 +
            C169 * C32547 + C168 * C31569) *
               C32687) *
              C32603 * C32589 * C111 +
          ((C170 * C31569 + C171 * C32547 + C172 * C31565 + C173 * C32555 +
            C174 * C31575 + C175 * C17571) *
               C32687 +
           (C500 * C31569 + C499 * C32547 + C498 * C31565 + C497 * C32555 +
            C496 * C31575 + C495 * C17571) *
               C32694 +
           (C850 * C31569 + C851 * C32547 + C853 * C31565 + C852 * C32555 +
            (C113 * C252 + C32644 * C271) * C31575 +
            (C113 * C272 + C32644 * C282) * C17571) *
               C17574) *
              C32603 * C32589 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C119 + C32644 * C126) * C31569 +
            (C113 * C127 + C32644 * C140) * C32547 + C168 * C31565 +
            C169 * C32555 + C170 * C31575 + C171 * C17571) *
               C32687 +
           (C17689 + C17690 + C17691 + C17692 + C17693 + C17694) * C32694 +
           C17711 * C17574) *
              C32603 * C239 -
          ((C17701 + C17702 + C17703 + C17704 + C17705 + C17706) * C17574 +
           (C17700 + C17699 + C17698 + C17697 + C17696 + C17695) * C32694 +
           (C17694 + C17693 + C17692 + C17691 + C17690 + C17689) * C32687) *
              C32603 * C240 +
          (C17711 * C32687 +
           (C17706 + C17705 + C17704 + C17703 + C17702 + C17701) * C32694 +
           (C6288 * C31569 + C6289 * C32547 + C6467 * C31565 + C6468 * C32555 +
            (C113 * C968 + C32644 * C979) * C31575 +
            (C113 * C980 + C32644 * C986) * C17571) *
               C17574) *
              C32603 * C241) *
         C32577) /
            (p * q * std::sqrt(p + q));
    d2ee[5] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C3484 * C119 + C32886 * C126 + C3485 * C352 + C32731 * C367) *
                 C15779 +
             (C3484 * C127 + C32886 * C140 + C3485 * C366 + C32731 * C382) *
                 C15773 +
             (C3519 + C3520) * C15780 + (C3521 + C3522) * C32552) *
                C32687 +
            ((C4523 + C4524) * C15779 + (C4525 + C4526) * C15773 +
             C4879 * C15780 + C4880 * C32552) *
                C32694 +
            C19602 * C17574) *
               C32603 * C470 -
           (((C8630 + C8631) * C32552 + (C8632 + C8633) * C15780 +
             (C8634 + C8635) * C15773 + (C8636 + C8637) * C15779) *
                C17574 +
            (C8981 * C32552 + C8982 * C15780 + (C4535 + C4536) * C15773 +
             (C4537 + C4538) * C15779) *
                C32694 +
            (C4883 * C32552 + C4884 * C15780 + (C4526 + C4525) * C15773 +
             (C4524 + C4523) * C15779) *
                C32687) *
               C32603 * C471) *
              C472 +
          (((C4879 * C15779 + C4880 * C15773 + C4343 * C15780 +
             C4344 * C32552) *
                C32687 +
            (C8608 * C15779 + C8609 * C15773 + (C4530 + C4529) * C15780 +
             (C4528 + C4527) * C32552) *
                C32694 +
            ((C8633 + C8632) * C15779 + (C8631 + C8630) * C15773 +
             (C3484 * C963 + C32886 * C970 + C3485 * C1670 + C32731 * C1675) *
                 C15780 +
             (C3484 * C969 + C32886 * C981 + C3485 * C1676 + C32731 * C1679) *
                 C32552) *
                C17574) *
               C32603 * C471 -
           (((C4527 + C4528) * C32552 + (C4529 + C4530) * C15780 +
             C8981 * C15773 + C8982 * C15779) *
                C17574 +
            (C4881 * C32552 + C4882 * C15780 + C4883 * C15773 +
             C4884 * C15779) *
                C32694 +
            ((C3526 + C3525) * C32552 + (C3524 + C3523) * C15780 +
             (C3522 + C3521) * C15773 + (C3520 + C3519) * C15779) *
                C32687) *
               C32603 * C470) *
              C473)) /
        (p * q * std::sqrt(p + q));
    d2ee[6] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C3484 * C119 + C32886 * C126 + C3485 * C352 + C32731 * C367) *
                 C15779 +
             (C3484 * C127 + C32886 * C140 + C3485 * C366 + C32731 * C382) *
                 C15773 +
             (C3519 + C3520) * C15780 + (C3521 + C3522) * C32552) *
                C32687 +
            ((C4523 + C4524) * C15779 + (C4525 + C4526) * C15773 +
             C4879 * C15780 + C4880 * C32552) *
                C32694 +
            C19602 * C17574) *
               C584 -
           (((C9185 + C9186) * C32552 + (C9187 + C9188) * C15780 +
             (C9391 + C9392) * C15773 + (C9393 + C9394) * C15779) *
                C17574 +
            ((C5099 + C5100) * C32552 + (C5101 + C5102) * C15780 +
             (C5305 + C5306) * C15773 + (C5307 + C5308) * C15779) *
                C32694 +
            ((C4063 + C4064) * C32552 + (C4065 + C4066) * C15780 +
             (C3485 * C369 + C32731 * C383 + C3484 * C366 + C32886 * C382) *
                 C15773 +
             (C3485 * C353 + C32731 * C368 + C3484 * C352 + C32886 * C367) *
                 C15779) *
                C32687) *
               C585) *
              C470 +
          ((((C5308 + C5307) * C15779 + (C5306 + C5305) * C15773 +
             (C5102 + C5101) * C15780 + (C5100 + C5099) * C32552) *
                C32687 +
            ((C9394 + C9393) * C15779 + (C9392 + C9391) * C15773 +
             (C9188 + C9187) * C15780 + (C9186 + C9185) * C32552) *
                C32694 +
            ((C10110 + C10109) * C15779 + (C10108 + C10107) * C15773 +
             (C3484 * C1669 + C32886 * C1673 + C3485 * C7211 + C32731 * C7212) *
                 C15780 +
             (C3484 * C1674 + C32886 * C1678 + C3485 * C7213 + C32731 * C7214) *
                 C32552) *
                C17574) *
               C585 -
           (((C8630 + C8631) * C32552 + (C8632 + C8633) * C15780 +
             (C8634 + C8635) * C15773 + (C8636 + C8637) * C15779) *
                C17574 +
            (C8981 * C32552 + C8982 * C15780 + (C4535 + C4536) * C15773 +
             (C4537 + C4538) * C15779) *
                C32694 +
            (C4883 * C32552 + C4884 * C15780 + (C4526 + C4525) * C15773 +
             (C4524 + C4523) * C15779) *
                C32687) *
               C584) *
              C471) *
         C32577) /
        (p * q * std::sqrt(p + q));
    d2ee[7] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C3484 * C119 + C32886 * C126 + C3485 * C352 + C32731 * C367) *
                C15779 +
            (C3484 * C127 + C32886 * C140 + C3485 * C366 + C32731 * C382) *
                C15773 +
            (C3519 + C3520) * C15780 + (C3521 + C3522) * C32552) *
               C32687 +
           ((C4523 + C4524) * C15779 + (C4525 + C4526) * C15773 +
            C4879 * C15780 + C4880 * C32552) *
               C32694 +
           C19602 * C17574) *
              C32603 * C239 -
          (((C8630 + C8631) * C32552 + (C8632 + C8633) * C15780 +
            (C8634 + C8635) * C15773 + (C8636 + C8637) * C15779) *
               C17574 +
           (C8981 * C32552 + C8982 * C15780 + (C4535 + C4536) * C15773 +
            (C4537 + C4538) * C15779) *
               C32694 +
           (C4883 * C32552 + C4884 * C15780 + (C4526 + C4525) * C15773 +
            (C4524 + C4523) * C15779) *
               C32687) *
              C32603 * C240 +
          (C19602 * C32687 +
           (C9593 * C15779 + C9594 * C15773 + (C8633 + C8632) * C15780 +
            (C8631 + C8630) * C32552) *
               C32694 +
           ((C9609 + C9608) * C15779 + (C9607 + C9606) * C15773 +
            (C3484 * C967 + C32886 * C977 + C3485 * C6552 + C32731 * C6553) *
                C15780 +
            (C3484 * C978 + C32886 * C985 + C3485 * C6554 + C32731 * C6555) *
                C32552) *
               C17574) *
              C32603 * C241) *
         C32577) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C3484 * C119 + C32886 * C126 + C3485 * C352 + C32731 * C367) *
                C15779 +
            (C3484 * C127 + C32886 * C140 + C3485 * C366 + C32731 * C382) *
                C15773 +
            (C3519 + C3520) * C15780 + (C3521 + C3522) * C32552) *
               C32687 +
           ((C4523 + C4524) * C15779 + (C4525 + C4526) * C15773 +
            C4879 * C15780 + C4880 * C32552) *
               C32694 +
           (C8606 * C15779 + C8607 * C15773 + C8608 * C15780 + C8609 * C32552) *
               C17574) *
              C32603 * C32589 * C110 -
          (((C4527 + C4528) * C32552 + (C4529 + C4530) * C15780 +
            C8981 * C15773 + C8982 * C15779) *
               C17574 +
           (C4881 * C32552 + C4882 * C15780 + C4883 * C15773 + C4884 * C15779) *
               C32694 +
           ((C3526 + C3525) * C32552 + (C3524 + C3523) * C15780 +
            (C3522 + C3521) * C15773 + (C3520 + C3519) * C15779) *
               C32687) *
              C32603 * C32589 * C111 +
          ((C3535 * C15779 + C3536 * C15773 + C3537 * C15780 + C3538 * C32552) *
               C32687 +
           (C4343 * C15779 + C4344 * C15773 + (C3892 + C3891) * C15780 +
            (C3890 + C3889) * C32552) *
               C32694 +
           ((C4530 + C4529) * C15779 + (C4528 + C4527) * C15773 +
            (C3484 * C251 + C32886 * C269 + C3485 * C1494 + C32731 * C1495) *
                C15780 +
            (C3484 * C270 + C32886 * C281 + C3485 * C1496 + C32731 * C1497) *
                C32552) *
               C17574) *
              C32603 * C32589 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C3484 * C119 + C32886 * C126 + C3485 * C352 + C32731 * C367) *
                C15779 +
            (C3484 * C127 + C32886 * C140 + C3485 * C366 + C32731 * C382) *
                C15773 +
            (C3519 + C3520) * C15780 + (C3521 + C3522) * C32552) *
               C32687 +
           ((C4523 + C4524) * C15779 + (C4525 + C4526) * C15773 +
            C4879 * C15780 + C4880 * C32552) *
               C32694 +
           C19602 * C17574) *
              C345 -
          (((C9185 + C9186) * C32552 + (C9187 + C9188) * C15780 +
            (C9391 + C9392) * C15773 + (C9393 + C9394) * C15779) *
               C17574 +
           ((C5099 + C5100) * C32552 + (C5101 + C5102) * C15780 +
            (C5305 + C5306) * C15773 + (C5307 + C5308) * C15779) *
               C32694 +
           ((C4063 + C4064) * C32552 + (C4065 + C4066) * C15780 +
            (C3485 * C369 + C32731 * C383 + C3484 * C366 + C32886 * C382) *
                C15773 +
            (C3485 * C353 + C32731 * C368 + C3484 * C352 + C32886 * C367) *
                C15779) *
               C32687) *
              C346 +
          (((C3484 * C353 + C32886 * C368 + C3485 * C2100 + C32731 * C2109) *
                C15779 +
            (C3484 * C369 + C32886 * C383 + C3485 * C2108 + C32731 * C2118) *
                C15773 +
            (C3484 * C354 + C32886 * C370 + C3485 * C2099 + C32731 * C2107) *
                C15780 +
            (C3484 * C371 + C32886 * C384 + C3485 * C2106 + C32731 * C2117) *
                C32552) *
               C32687 +
           ((C3484 * C1153 + C32886 * C1165 + C3485 * C2640 + C32731 * C2643) *
                C15779 +
            (C3484 * C1166 + C32886 * C1180 + C3485 * C2644 + C32731 * C2649) *
                C15773 +
            (C3484 * C1154 + C32886 * C1167 + C3485 * C2641 + C32731 * C2645) *
                C15780 +
            (C3484 * C1168 + C32886 * C1181 + C3485 * C2646 + C32731 * C2650) *
                C32552) *
               C32694 +
           ((C3484 * C1156 + C32886 * C1171 + C3485 * C7053 + C32731 * C7057) *
                C15779 +
            (C3484 * C1172 + C32886 * C1183 + C3485 * C7056 + C32731 * C7062) *
                C15773 +
            (C3484 * C1157 + C32886 * C1173 + C3485 * C7379 + C32731 * C7380) *
                C15780 +
            (C3484 * C1174 + C32886 * C1184 + C3485 * C7381 + C32731 * C7382) *
                C32552) *
               C17574) *
              C347) *
         C32589 * C32577) /
            (p * q * std::sqrt(p + q));
    d2ee[8] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C3484 * C119 + C32886 * C126 + C3485 * C352 + C32731 * C367) *
                 C15779 +
             (C3484 * C127 + C32886 * C140 + C3485 * C366 + C32731 * C382) *
                 C15773 +
             (C3519 + C3520) * C15780 + (C3521 + C3522) * C32552) *
                C32687 +
            ((C4523 + C4524) * C15779 + (C4525 + C4526) * C15773 +
             C4879 * C15780 + C4880 * C32552) *
                C32694 +
            C19602 * C17574) *
               C584 -
           (((C9185 + C9186) * C32552 + (C9187 + C9188) * C15780 +
             (C9391 + C9392) * C15773 + (C9393 + C9394) * C15779) *
                C17574 +
            ((C5099 + C5100) * C32552 + (C5101 + C5102) * C15780 +
             (C5305 + C5306) * C15773 + (C5307 + C5308) * C15779) *
                C32694 +
            ((C4063 + C4064) * C32552 + (C4065 + C4066) * C15780 +
             (C3485 * C369 + C32731 * C383 + C3484 * C366 + C32886 * C382) *
                 C15773 +
             (C3485 * C353 + C32731 * C368 + C3484 * C352 + C32886 * C367) *
                 C15779) *
                C32687) *
               C585) *
              C32589 * C472 +
          ((((C4066 + C4065) * C15779 + (C4064 + C4063) * C15773 +
             (C4062 + C4061) * C15780 + (C4060 + C4059) * C32552) *
                C32687 +
            ((C5102 + C5101) * C15779 + (C5100 + C5099) * C15773 +
             (C5098 + C5097) * C15780 + (C5096 + C5095) * C32552) *
                C32694 +
            ((C9188 + C9187) * C15779 + (C9186 + C9185) * C15773 +
             (C3484 * C1150 + C32886 * C1160 + C3485 * C1158 + C32731 * C1175) *
                 C15780 +
             (C3484 * C1159 + C32886 * C1177 + C3485 * C1176 + C32731 * C1185) *
                 C32552) *
                C17574) *
               C585 -
           (((C4527 + C4528) * C32552 + (C4529 + C4530) * C15780 +
             C8981 * C15773 + C8982 * C15779) *
                C17574 +
            (C4881 * C32552 + C4882 * C15780 + C4883 * C15773 +
             C4884 * C15779) *
                C32694 +
            ((C3526 + C3525) * C32552 + (C3524 + C3523) * C15780 +
             (C3522 + C3521) * C15773 + (C3520 + C3519) * C15779) *
                C32687) *
               C584) *
              C32589 * C473)) /
        (p * q * std::sqrt(p + q));
    d2ee[9] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C3484 * C119 + C32886 * C126 + C3485 * C352 + C32731 * C367) *
                C15779 +
            (C3484 * C127 + C32886 * C140 + C3485 * C366 + C32731 * C382) *
                C15773 +
            (C3519 + C3520) * C15780 + (C3521 + C3522) * C32552) *
               C32687 +
           ((C4523 + C4524) * C15779 + (C4525 + C4526) * C15773 +
            C4879 * C15780 + C4880 * C32552) *
               C32694 +
           (C8606 * C15779 + C8607 * C15773 + C8608 * C15780 + C8609 * C32552) *
               C17574) *
              C32603 * C32589 * C110 -
          (((C4527 + C4528) * C32552 + (C4529 + C4530) * C15780 +
            C8981 * C15773 + C8982 * C15779) *
               C17574 +
           (C4881 * C32552 + C4882 * C15780 + C4883 * C15773 + C4884 * C15779) *
               C32694 +
           ((C3526 + C3525) * C32552 + (C3524 + C3523) * C15780 +
            (C3522 + C3521) * C15773 + (C3520 + C3519) * C15779) *
               C32687) *
              C32603 * C32589 * C111 +
          ((C3535 * C15779 + C3536 * C15773 + C3537 * C15780 + C3538 * C32552) *
               C32687 +
           (C4343 * C15779 + C4344 * C15773 + (C3892 + C3891) * C15780 +
            (C3890 + C3889) * C32552) *
               C32694 +
           ((C4530 + C4529) * C15779 + (C4528 + C4527) * C15773 +
            (C3484 * C251 + C32886 * C269 + C3485 * C1494 + C32731 * C1495) *
                C15780 +
            (C3484 * C270 + C32886 * C281 + C3485 * C1496 + C32731 * C1497) *
                C32552) *
               C17574) *
              C32603 * C32589 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C3484 * C119 + C32886 * C126 + C3485 * C352 + C32731 * C367) *
                C15779 +
            (C3484 * C127 + C32886 * C140 + C3485 * C366 + C32731 * C382) *
                C15773 +
            (C3519 + C3520) * C15780 + (C3521 + C3522) * C32552) *
               C32687 +
           ((C4523 + C4524) * C15779 + (C4525 + C4526) * C15773 +
            C4879 * C15780 + C4880 * C32552) *
               C32694 +
           C19602 * C17574) *
              C32603 * C239 -
          (((C8630 + C8631) * C32552 + (C8632 + C8633) * C15780 +
            (C8634 + C8635) * C15773 + (C8636 + C8637) * C15779) *
               C17574 +
           (C8981 * C32552 + C8982 * C15780 + (C4535 + C4536) * C15773 +
            (C4537 + C4538) * C15779) *
               C32694 +
           (C4883 * C32552 + C4884 * C15780 + (C4526 + C4525) * C15773 +
            (C4524 + C4523) * C15779) *
               C32687) *
              C32603 * C240 +
          (C19602 * C32687 +
           (C9593 * C15779 + C9594 * C15773 + (C8633 + C8632) * C15780 +
            (C8631 + C8630) * C32552) *
               C32694 +
           ((C9609 + C9608) * C15779 + (C9607 + C9606) * C15773 +
            (C3484 * C967 + C32886 * C977 + C3485 * C6552 + C32731 * C6553) *
                C15780 +
            (C3484 * C978 + C32886 * C985 + C3485 * C6554 + C32731 * C6555) *
                C32552) *
               C17574) *
              C32603 * C241) *
         C32577) /
            (p * q * std::sqrt(p + q));
    d2ee[10] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C119 + C32644 * C126) * C15779 +
             (C113 * C127 + C32644 * C140) * C15773 + C168 * C15780 +
             C169 * C32552) *
                C32958 +
            (C15880 + C15881 + C15882 + C15883) * C32954 + C15900 * C32944 +
            C15901 * C32926) *
               C32603 * C470 -
           ((C15892 + C15893 + C15894 + C15895) * C32926 +
            (C15891 + C15890 + C15889 + C15888) * C32944 +
            (C15887 + C15886 + C15885 + C15884) * C32954 +
            (C15883 + C15882 + C15881 + C15880) * C32958) *
               C32603 * C471) *
              C472 +
          (((C16130 + C16131 + C16132 + C16133) * C32958 +
            (C16134 + C16135 + C16136 + C16137) * C32954 +
            (C16138 + C16139 + C16140 + C16141) * C32944 +
            (C6467 * C15779 + C6468 * C15773 +
             (C113 * C968 + C32644 * C979) * C15780 +
             (C113 * C980 + C32644 * C986) * C32552) *
                C32926) *
               C32603 * C471 -
           ((C16141 + C16140 + C16139 + C16138) * C32926 +
            (C16137 + C16136 + C16135 + C16134) * C32944 +
            (C16133 + C16132 + C16131 + C16130) * C32954 +
            (C171 * C32552 + C170 * C15780 + C169 * C15773 + C168 * C15779) *
                C32958) *
               C32603 * C470) *
              C473)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C119 + C32644 * C126) * C15053 +
             (C113 * C127 + C32644 * C140) * C32957 + C168 * C15054 +
             C169 * C32950 + C170 * C15055 + C171 * C32937 + C172 * C15056 +
             C173 * C32920) *
                C15051 +
            (C15156 + C15157 + C15158 + C15159 + C15160 + C15161 + C15162 +
             C15163) *
                C32691) *
               C32603 * C470 -
           ((C15164 + C15165 + C15166 + C15167 + C15168 + C15169 + C15170 +
             C15171) *
                C32691 +
            (C15163 + C15162 + C15161 + C15160 + C15159 + C15158 + C15157 +
             C15156) *
                C15051) *
               C32603 * C471) *
              C472 +
          (((C15400 + C15401 + C15402 + C15403 + C15404 + C15405 + C15406 +
             C15407) *
                C15051 +
            (C848 * C15053 + C849 * C32957 + C850 * C15054 + C851 * C32950 +
             C853 * C15055 + C852 * C32937 +
             (C113 * C252 + C32644 * C271) * C15056 +
             (C113 * C272 + C32644 * C282) * C32920) *
                C32691) *
               C32603 * C471 -
           ((C15407 + C15406 + C15405 + C15404 + C15403 + C15402 + C15401 +
             C15400) *
                C32691 +
            (C175 * C32920 + C174 * C15056 + C173 * C32937 + C172 * C15055 +
             C171 * C32950 + C170 * C15054 + C169 * C32957 + C168 * C15053) *
                C15051) *
               C32603 * C470) *
              C473)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C1817 * C119 + C32952 * C126 + C1818 * C352 + C32941 * C367 +
              C1819 * C353 + C32919 * C368) *
                 C15779 +
             (C1817 * C127 + C32952 * C140 + C1818 * C366 + C32941 * C382 +
              C1819 * C369 + C32919 * C383) *
                 C15773 +
             (C1857 + C1858 + C1859) * C15780 +
             (C1860 + C1861 + C1862) * C32552) *
                C15051 +
            ((C6919 + C6920 + C6921) * C15779 +
             (C6922 + C6923 + C6924) * C15773 + C17050 * C15780 +
             C17051 * C32552) *
                C32691) *
               C32603 * C470 -
           (((C7233 + C7232 + C7231) * C32552 +
             (C7230 + C7229 + C7228) * C15780 +
             (C6930 + C6929 + C6928) * C15773 +
             (C6927 + C6926 + C6925) * C15779) *
                C32691 +
            (C17052 * C32552 + C17053 * C15780 +
             (C6924 + C6923 + C6922) * C15773 +
             (C6921 + C6920 + C6919) * C15779) *
                C15051) *
               C32603 * C471) *
              C472 +
          (((C17050 * C15779 + C17051 * C15773 +
             (C2302 + C2301 + C2300) * C15780 +
             (C2299 + C2298 + C2297) * C32552) *
                C15051 +
            ((C7228 + C7229 + C7230) * C15779 +
             (C7231 + C7232 + C7233) * C15773 +
             (C1817 * C250 + C32952 * C267 + C1818 * C1150 + C32941 * C1160 +
              C1819 * C1158 + C32919 * C1175) *
                 C15780 +
             (C1817 * C268 + C32952 * C280 + C1818 * C1159 + C32941 * C1177 +
              C1819 * C1176 + C32919 * C1185) *
                 C32552) *
                C32691) *
               C32603 * C471 -
           (((C2297 + C2298 + C2299) * C32552 +
             (C2300 + C2301 + C2302) * C15780 + C17052 * C15773 +
             C17053 * C15779) *
                C32691 +
            ((C1868 + C1867 + C1866) * C32552 +
             (C1865 + C1864 + C1863) * C15780 +
             (C1862 + C1861 + C1860) * C15773 +
             (C1859 + C1858 + C1857) * C15779) *
                C15051) *
               C32603 * C470) *
              C473)) /
            (p * q * std::sqrt(p + q));
    d2ee[11] += (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((((C113 * C119 + C32644 * C126) * C15779 +
                     (C113 * C127 + C32644 * C140) * C15773 + C168 * C15780 +
                     C169 * C32552) *
                        C32958 +
                    (C15880 + C15881 + C15882 + C15883) * C32954 +
                    C15900 * C32944 + C15901 * C32926) *
                       C584 -
                   ((C16402 + C16403 + C16404 + C16405) * C32926 +
                    (C16406 + C16407 + C16408 + C16409) * C32944 +
                    (C16410 + C16411 + C16412 + C16413) * C32954 +
                    (C613 * C32552 + C614 * C15780 +
                     (C113 * C366 + C32644 * C382) * C15773 +
                     (C113 * C352 + C32644 * C367) * C15779) *
                        C32958) *
                       C585) *
                      C470 +
                  (((C16413 + C16412 + C16411 + C16410) * C32958 +
                    (C16409 + C16408 + C16407 + C16406) * C32954 +
                    (C16405 + C16404 + C16403 + C16402) * C32944 +
                    (C6656 * C15779 + C6655 * C15773 +
                     (C113 * C6552 + C32644 * C6553) * C15780 +
                     (C113 * C6554 + C32644 * C6555) * C32552) *
                        C32926) *
                       C585 -
                   ((C15892 + C15893 + C15894 + C15895) * C32926 +
                    (C15891 + C15890 + C15889 + C15888) * C32944 +
                    (C15887 + C15886 + C15885 + C15884) * C32954 +
                    (C15883 + C15882 + C15881 + C15880) * C32958) *
                       C584) *
                      C471) *
                 C32577) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((((C113 * C119 + C32644 * C126) * C15053 +
                     (C113 * C127 + C32644 * C140) * C32957 + C168 * C15054 +
                     C169 * C32950 + C170 * C15055 + C171 * C32937 +
                     C172 * C15056 + C173 * C32920) *
                        C15051 +
                    (C15156 + C15157 + C15158 + C15159 + C15160 + C15161 +
                     C15162 + C15163) *
                        C32691) *
                       C584 -
                   ((C15668 + C15669 + C15670 + C15671 + C15672 + C15673 +
                     C15674 + C15675) *
                        C32691 +
                    (C609 * C32920 + C610 * C15056 + C611 * C32937 +
                     C612 * C15055 + C613 * C32950 + C614 * C15054 +
                     (C113 * C366 + C32644 * C382) * C32957 +
                     (C113 * C352 + C32644 * C367) * C15053) *
                        C15051) *
                       C585) *
                      C470 +
                  (((C15675 + C15674 + C15673 + C15672 + C15671 + C15670 +
                     C15669 + C15668) *
                        C15051 +
                    (C1698 * C15053 + C1697 * C32957 + C1518 * C15054 +
                     C1517 * C32950 + C1516 * C15055 + C1515 * C32937 +
                     (C113 * C1494 + C32644 * C1495) * C15056 +
                     (C113 * C1496 + C32644 * C1497) * C32920) *
                        C32691) *
                       C585 -
                   ((C15164 + C15165 + C15166 + C15167 + C15168 + C15169 +
                     C15170 + C15171) *
                        C32691 +
                    (C15163 + C15162 + C15161 + C15160 + C15159 + C15158 +
                     C15157 + C15156) *
                        C15051) *
                       C584) *
                      C471) *
                 C32577) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C1817 * C119 + C32952 * C126 + C1818 * C352 +
                      C32941 * C367 + C1819 * C353 + C32919 * C368) *
                         C15779 +
                     (C1817 * C127 + C32952 * C140 + C1818 * C366 +
                      C32941 * C382 + C1819 * C369 + C32919 * C383) *
                         C15773 +
                     (C1857 + C1858 + C1859) * C15780 +
                     (C1860 + C1861 + C1862) * C32552) *
                        C15051 +
                    ((C6919 + C6920 + C6921) * C15779 +
                     (C6922 + C6923 + C6924) * C15773 + C17050 * C15780 +
                     C17051 * C32552) *
                        C32691) *
                       C584 -
                   (((C17260 + C17261 + C17262) * C32552 +
                     (C17263 + C17264 + C17265) * C15780 +
                     (C7564 + C7565 + C7566) * C15773 +
                     (C7567 + C7568 + C7569) * C15779) *
                        C32691 +
                    ((C2489 + C2490 + C2491) * C32552 +
                     (C2492 + C2493 + C2494) * C15780 +
                     (C1819 * C2108 + C32919 * C2118 + C1818 * C369 +
                      C32941 * C383 + C1817 * C366 + C32952 * C382) *
                         C15773 +
                     (C1819 * C2100 + C32919 * C2109 + C1818 * C353 +
                      C32941 * C368 + C1817 * C352 + C32952 * C367) *
                         C15779) *
                        C15051) *
                       C585) *
                      C470 +
                  ((((C7569 + C7568 + C7567) * C15779 +
                     (C7566 + C7565 + C7564) * C15773 +
                     (C17265 + C17264 + C17263) * C15780 +
                     (C17262 + C17261 + C17260) * C32552) *
                        C15051 +
                    ((C7563 + C7562 + C7561) * C15779 +
                     (C7560 + C7559 + C7558) * C15773 +
                     (C1817 * C1151 + C32952 * C1162 + C1818 * C1157 +
                      C32941 * C1173 + C1819 * C7379 + C32919 * C7380) *
                         C15780 +
                     (C1817 * C1161 + C32952 * C1178 + C1818 * C1174 +
                      C32941 * C1184 + C1819 * C7381 + C32919 * C7382) *
                         C32552) *
                        C32691) *
                       C585 -
                   (((C7233 + C7232 + C7231) * C32552 +
                     (C7230 + C7229 + C7228) * C15780 +
                     (C6930 + C6929 + C6928) * C15773 +
                     (C6927 + C6926 + C6925) * C15779) *
                        C32691 +
                    (C17052 * C32552 + C17053 * C15780 +
                     (C6924 + C6923 + C6922) * C15773 +
                     (C6921 + C6920 + C6919) * C15779) *
                        C15051) *
                       C584) *
                      C471) *
                 C32577) /
                    (p * q * std::sqrt(p + q));
    d2ee[12] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C113 * C119 + C32644 * C126) * C15053 +
                (C113 * C127 + C32644 * C140) * C32957 + C168 * C15054 +
                C169 * C32950 + C170 * C15055 + C171 * C32937 + C172 * C15056 +
                C173 * C32920) *
                   C15051 +
               (C1016 * C15053 + C1017 * C32957 + C502 * C15054 +
                C501 * C32950 + C500 * C15055 + C499 * C32937 + C498 * C15056 +
                C497 * C32920) *
                   C32691) *
                  C32603 * C32589 * C110 -
              ((C495 * C32920 + C496 * C15056 + C497 * C32937 + C498 * C15055 +
                C499 * C32950 + C500 * C15054 + C501 * C32957 + C502 * C15053) *
                   C32691 +
               (C175 * C32920 + C174 * C15056 + C173 * C32937 + C172 * C15055 +
                C171 * C32950 + C170 * C15054 + C169 * C32957 + C168 * C15053) *
                   C15051) *
                  C32603 * C32589 * C111 +
              ((C170 * C15053 + C171 * C32957 + C172 * C15054 + C173 * C32950 +
                C174 * C15055 + C175 * C32937 + C177 * C15056 + C176 * C32920) *
                   C15051 +
               (C500 * C15053 + C499 * C32957 + C498 * C15054 + C497 * C32950 +
                C496 * C15055 + C495 * C32937 +
                (C113 * C474 + C32644 * C475) * C15056 +
                (C113 * C476 + C32644 * C477) * C32920) *
                   C32691) *
                  C32603 * C32589 * C112) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C113 * C119 + C32644 * C126) * C15053 +
                (C113 * C127 + C32644 * C140) * C32957 + C168 * C15054 +
                C169 * C32950 + C170 * C15055 + C171 * C32937 + C172 * C15056 +
                C173 * C32920) *
                   C15051 +
               (C15156 + C15157 + C15158 + C15159 + C15160 + C15161 + C15162 +
                C15163) *
                   C32691) *
                  C32603 * C239 -
              ((C15164 + C15165 + C15166 + C15167 + C15168 + C15169 + C15170 +
                C15171) *
                   C32691 +
               (C15163 + C15162 + C15161 + C15160 + C15159 + C15158 + C15157 +
                C15156) *
                   C15051) *
                  C32603 * C240 +
              ((C15171 + C15170 + C15169 + C15168 + C15167 + C15166 + C15165 +
                C15164) *
                   C15051 +
               (C1025 * C15053 + C1024 * C32957 + C1023 * C15054 +
                C1022 * C32950 + C1021 * C15055 + C1020 * C32937 +
                (C113 * C1332 + C32644 * C1333) * C15056 +
                (C113 * C1334 + C32644 * C1335) * C32920) *
                   C32691) *
                  C32603 * C241) *
             C32577) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C119 + C32644 * C126) * C15053 +
            (C113 * C127 + C32644 * C140) * C32957 + C168 * C15054 +
            C169 * C32950 + C170 * C15055 + C171 * C32937 + C172 * C15056 +
            C173 * C32920) *
               C15051 +
           (C15156 + C15157 + C15158 + C15159 + C15160 + C15161 + C15162 +
            C15163) *
               C32691) *
              C345 -
          ((C3245 * C32920 + C3246 * C15056 + C1519 * C32937 + C1520 * C15055 +
            C1521 * C32950 + C1522 * C15054 + C1699 * C32957 + C1700 * C15053) *
               C32691 +
           (C609 * C32920 + C610 * C15056 + C611 * C32937 + C612 * C15055 +
            C613 * C32950 + C614 * C15054 +
            (C113 * C366 + C32644 * C382) * C32957 +
            (C113 * C352 + C32644 * C367) * C15053) *
               C15051) *
              C346 +
          (((C113 * C353 + C32644 * C368) * C15053 +
            (C113 * C369 + C32644 * C383) * C32957 +
            (C113 * C354 + C32644 * C370) * C15054 +
            (C113 * C371 + C32644 * C384) * C32950 +
            (C113 * C355 + C32644 * C372) * C15055 +
            (C113 * C373 + C32644 * C385) * C32937 +
            (C113 * C356 + C32644 * C374) * C15056 +
            (C113 * C375 + C32644 * C386) * C32920) *
               C15051 +
           ((C113 * C1153 + C32644 * C1165) * C15053 +
            (C113 * C1166 + C32644 * C1180) * C32957 +
            (C113 * C1154 + C32644 * C1167) * C15054 +
            (C113 * C1168 + C32644 * C1181) * C32950 +
            (C113 * C1155 + C32644 * C1169) * C15055 +
            (C113 * C1170 + C32644 * C1182) * C32937 +
            (C113 * C2268 + C32644 * C2269) * C15056 +
            (C113 * C2270 + C32644 * C2271) * C32920) *
               C32691) *
              C347) *
         C32589 * C32577) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C119 + C32644 * C126) * C15779 +
            (C113 * C127 + C32644 * C140) * C15773 + C168 * C15780 +
            C169 * C32552) *
               C32958 +
           (C1016 * C15779 + C1017 * C15773 + C502 * C15780 + C501 * C32552) *
               C32954 +
           (C1018 * C15779 + C1019 * C15773 + C848 * C15780 + C849 * C32552) *
               C32944 +
           (C1025 * C15779 + C1024 * C15773 + C1023 * C15780 + C1022 * C32552) *
               C32926) *
              C32603 * C32589 * C110 -
          ((C1020 * C32552 + C1021 * C15780 + C1022 * C15773 + C1023 * C15779) *
               C32926 +
           (C851 * C32552 + C850 * C15780 + C849 * C15773 + C848 * C15779) *
               C32944 +
           (C499 * C32552 + C500 * C15780 + C501 * C15773 + C502 * C15779) *
               C32954 +
           (C171 * C32552 + C170 * C15780 + C169 * C15773 + C168 * C15779) *
               C32958) *
              C32603 * C32589 * C111 +
          ((C170 * C15779 + C171 * C15773 + C172 * C15780 + C173 * C32552) *
               C32958 +
           (C500 * C15779 + C499 * C15773 + C498 * C15780 + C497 * C32552) *
               C32954 +
           (C850 * C15779 + C851 * C15773 + C853 * C15780 + C852 * C32552) *
               C32944 +
           (C1021 * C15779 + C1020 * C15773 +
            (C113 * C1332 + C32644 * C1333) * C15780 +
            (C113 * C1334 + C32644 * C1335) * C32552) *
               C32926) *
              C32603 * C32589 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C119 + C32644 * C126) * C15779 +
            (C113 * C127 + C32644 * C140) * C15773 + C168 * C15780 +
            C169 * C32552) *
               C32958 +
           (C15880 + C15881 + C15882 + C15883) * C32954 + C15900 * C32944 +
           C15901 * C32926) *
              C32603 * C239 -
          ((C15892 + C15893 + C15894 + C15895) * C32926 +
           (C15891 + C15890 + C15889 + C15888) * C32944 +
           (C15887 + C15886 + C15885 + C15884) * C32954 +
           (C15883 + C15882 + C15881 + C15880) * C32958) *
              C32603 * C240 +
          (C15900 * C32958 + C15901 * C32954 +
           (C15895 + C15894 + C15893 + C15892) * C32944 +
           (C6291 * C15779 + C6290 * C15773 +
            (C113 * C6452 + C32644 * C6453) * C15780 +
            (C113 * C6454 + C32644 * C6455) * C32552) *
               C32926) *
              C32603 * C241) *
         C32577) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C119 + C32644 * C126) * C15779 +
            (C113 * C127 + C32644 * C140) * C15773 + C168 * C15780 +
            C169 * C32552) *
               C32958 +
           (C15880 + C15881 + C15882 + C15883) * C32954 + C15900 * C32944 +
           C15901 * C32926) *
              C345 -
          ((C8170 * C32552 + C8171 * C15780 + C6657 * C15773 + C6658 * C15779) *
               C32926 +
           (C1517 * C32552 + C1518 * C15780 + C1697 * C15773 + C1698 * C15779) *
               C32944 +
           (C1521 * C32552 + C1522 * C15780 + C1699 * C15773 + C1700 * C15779) *
               C32954 +
           (C613 * C32552 + C614 * C15780 +
            (C113 * C366 + C32644 * C382) * C15773 +
            (C113 * C352 + C32644 * C367) * C15779) *
               C32958) *
              C346 +
          (((C113 * C353 + C32644 * C368) * C15779 +
            (C113 * C369 + C32644 * C383) * C15773 +
            (C113 * C354 + C32644 * C370) * C15780 +
            (C113 * C371 + C32644 * C384) * C32552) *
               C32958 +
           ((C113 * C1153 + C32644 * C1165) * C15779 +
            (C113 * C1166 + C32644 * C1180) * C15773 +
            (C113 * C1154 + C32644 * C1167) * C15780 +
            (C113 * C1168 + C32644 * C1181) * C32552) *
               C32954 +
           ((C113 * C1156 + C32644 * C1171) * C15779 +
            (C113 * C1172 + C32644 * C1183) * C15773 +
            (C113 * C1157 + C32644 * C1173) * C15780 +
            (C113 * C1174 + C32644 * C1184) * C32552) *
               C32944 +
           ((C113 * C6359 + C32644 * C6363) * C15779 +
            (C113 * C6364 + C32644 * C6368) * C15773 +
            (C113 * C7211 + C32644 * C7212) * C15780 +
            (C113 * C7213 + C32644 * C7214) * C32552) *
               C32926) *
              C347) *
         C32589 * C32577) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C1817 * C119 + C32952 * C126 + C1818 * C352 + C32941 * C367 +
             C1819 * C353 + C32919 * C368) *
                C15779 +
            (C1817 * C127 + C32952 * C140 + C1818 * C366 + C32941 * C382 +
             C1819 * C369 + C32919 * C383) *
                C15773 +
            (C1857 + C1858 + C1859) * C15780 +
            (C1860 + C1861 + C1862) * C32552) *
               C15051 +
           ((C6919 + C6920 + C6921) * C15779 +
            (C6922 + C6923 + C6924) * C15773 +
            (C2308 + C2307 + C2306) * C15780 +
            (C2305 + C2304 + C2303) * C32552) *
               C32691) *
              C32603 * C32589 * C110 -
          (((C2297 + C2298 + C2299) * C32552 +
            (C2300 + C2301 + C2302) * C15780 +
            (C2303 + C2304 + C2305) * C15773 +
            (C2306 + C2307 + C2308) * C15779) *
               C32691 +
           ((C1868 + C1867 + C1866) * C32552 +
            (C1865 + C1864 + C1863) * C15780 +
            (C1862 + C1861 + C1860) * C15773 +
            (C1859 + C1858 + C1857) * C15779) *
               C15051) *
              C32603 * C32589 * C111 +
          ((C1877 * C15779 + C1878 * C15773 + (C1874 + C1873 + C1872) * C15780 +
            (C1871 + C1870 + C1869) * C32552) *
               C15051 +
           ((C2302 + C2301 + C2300) * C15779 +
            (C2299 + C2298 + C2297) * C15773 +
            (C1817 * C244 + C32952 * C256 + C1818 * C699 + C32941 * C707 +
             C1819 * C2268 + C32919 * C2269) *
                C15780 +
            (C1817 * C255 + C32952 * C274 + C1818 * C708 + C32941 * C714 +
             C1819 * C2270 + C32919 * C2271) *
                C32552) *
               C32691) *
              C32603 * C32589 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C1817 * C119 + C32952 * C126 + C1818 * C352 + C32941 * C367 +
             C1819 * C353 + C32919 * C368) *
                C15779 +
            (C1817 * C127 + C32952 * C140 + C1818 * C366 + C32941 * C382 +
             C1819 * C369 + C32919 * C383) *
                C15773 +
            (C1857 + C1858 + C1859) * C15780 +
            (C1860 + C1861 + C1862) * C32552) *
               C15051 +
           ((C6919 + C6920 + C6921) * C15779 +
            (C6922 + C6923 + C6924) * C15773 +
            (C2308 + C2307 + C2306) * C15780 +
            (C2305 + C2304 + C2303) * C32552) *
               C32691) *
              C32603 * C239 -
          (((C7233 + C7232 + C7231) * C32552 +
            (C7230 + C7229 + C7228) * C15780 +
            (C6930 + C6929 + C6928) * C15773 +
            (C6927 + C6926 + C6925) * C15779) *
               C32691 +
           ((C2303 + C2304 + C2305) * C32552 +
            (C2306 + C2307 + C2308) * C15780 +
            (C6924 + C6923 + C6922) * C15773 +
            (C6921 + C6920 + C6919) * C15779) *
               C15051) *
              C32603 * C240 +
          ((C6939 * C15779 + C6940 * C15773 + (C7228 + C7229 + C7230) * C15780 +
            (C7231 + C7232 + C7233) * C32552) *
               C15051 +
           ((C6936 + C6935 + C6934) * C15779 +
            (C6933 + C6932 + C6931) * C15773 +
            (C1817 * C964 + C32952 * C972 + C1818 * C1669 + C32941 * C1673 +
             C1819 * C7211 + C32919 * C7212) *
                C15780 +
            (C1817 * C971 + C32952 * C982 + C1818 * C1674 + C32941 * C1678 +
             C1819 * C7213 + C32919 * C7214) *
                C32552) *
               C32691) *
              C32603 * C241) *
         C32577) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C1817 * C119 + C32952 * C126 + C1818 * C352 + C32941 * C367 +
             C1819 * C353 + C32919 * C368) *
                C15779 +
            (C1817 * C127 + C32952 * C140 + C1818 * C366 + C32941 * C382 +
             C1819 * C369 + C32919 * C383) *
                C15773 +
            (C1857 + C1858 + C1859) * C15780 +
            (C1860 + C1861 + C1862) * C32552) *
               C15051 +
           ((C6919 + C6920 + C6921) * C15779 +
            (C6922 + C6923 + C6924) * C15773 +
            (C2308 + C2307 + C2306) * C15780 +
            (C2305 + C2304 + C2303) * C32552) *
               C32691) *
              C345 -
          (((C1819 * C2646 + C32919 * C2650 + C1818 * C1168 + C32941 * C1181 +
             C1817 * C704 + C32952 * C712) *
                C32552 +
            (C1819 * C2641 + C32919 * C2645 + C1818 * C1154 + C32941 * C1167 +
             C1817 * C697 + C32952 * C703) *
                C15780 +
            (C7564 + C7565 + C7566) * C15773 +
            (C7567 + C7568 + C7569) * C15779) *
               C32691 +
           ((C2489 + C2490 + C2491) * C32552 +
            (C2492 + C2493 + C2494) * C15780 +
            (C1819 * C2108 + C32919 * C2118 + C1818 * C369 + C32941 * C383 +
             C1817 * C366 + C32952 * C382) *
                C15773 +
            (C1819 * C2100 + C32919 * C2109 + C1818 * C353 + C32941 * C368 +
             C1817 * C352 + C32952 * C367) *
                C15779) *
               C15051) *
              C346 +
          (((C1817 * C353 + C32952 * C368 + C1818 * C2100 + C32941 * C2109 +
             C1819 * C2101 + C32919 * C2110) *
                C15779 +
            (C1817 * C369 + C32952 * C383 + C1818 * C2108 + C32941 * C2118 +
             C1819 * C2111 + C32919 * C2119) *
                C15773 +
            (C1817 * C354 + C32952 * C370 + C1818 * C2099 + C32941 * C2107 +
             C1819 * C2102 + C32919 * C2112) *
                C15780 +
            (C1817 * C371 + C32952 * C384 + C1818 * C2106 + C32941 * C2117 +
             C1819 * C2113 + C32919 * C2120) *
                C32552) *
               C15051 +
           ((C1817 * C1153 + C32952 * C1165 + C1818 * C2640 + C32941 * C2643 +
             C1819 * C7054 + C32919 * C7058) *
                C15779 +
            (C1817 * C1166 + C32952 * C1180 + C1818 * C2644 + C32941 * C2649 +
             C1819 * C7059 + C32919 * C7063) *
                C15773 +
            (C1817 * C1154 + C32952 * C1167 + C1818 * C2641 + C32941 * C2645 +
             C1819 * C12183 + C32919 * C12184) *
                C15780 +
            (C1817 * C1168 + C32952 * C1181 + C1818 * C2646 + C32941 * C2650 +
             C1819 * C12185 + C32919 * C12186) *
                C32552) *
               C32691) *
              C347) *
         C32589 * C32577) /
            (p * q * std::sqrt(p + q));
    d2ee[13] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C119 + C32644 * C126) * C15779 +
             (C113 * C127 + C32644 * C140) * C15773 + C168 * C15780 +
             C169 * C32552) *
                C32958 +
            (C15880 + C15881 + C15882 + C15883) * C32954 + C15900 * C32944 +
            C15901 * C32926) *
               C584 -
           ((C8170 * C32552 + C8171 * C15780 + C6657 * C15773 +
             C6658 * C15779) *
                C32926 +
            (C1517 * C32552 + C1518 * C15780 + C1697 * C15773 +
             C1698 * C15779) *
                C32944 +
            (C1521 * C32552 + C1522 * C15780 + C1699 * C15773 +
             C1700 * C15779) *
                C32954 +
            (C613 * C32552 + C614 * C15780 +
             (C113 * C366 + C32644 * C382) * C15773 +
             (C113 * C352 + C32644 * C367) * C15779) *
                C32958) *
               C585) *
              C32589 * C472 +
          (((C614 * C15779 + C613 * C15773 + C612 * C15780 + C611 * C32552) *
                C32958 +
            (C1522 * C15779 + C1521 * C15773 + C1520 * C15780 +
             C1519 * C32552) *
                C32954 +
            (C1518 * C15779 + C1517 * C15773 + C1516 * C15780 +
             C1515 * C32552) *
                C32944 +
            (C8171 * C15779 + C8170 * C15773 +
             (C113 * C1670 + C32644 * C1675) * C15780 +
             (C113 * C1676 + C32644 * C1679) * C32552) *
                C32926) *
               C585 -
           ((C16141 + C16140 + C16139 + C16138) * C32926 +
            (C16137 + C16136 + C16135 + C16134) * C32944 +
            (C16133 + C16132 + C16131 + C16130) * C32954 +
            (C171 * C32552 + C170 * C15780 + C169 * C15773 + C168 * C15779) *
                C32958) *
               C584) *
              C32589 * C473)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C119 + C32644 * C126) * C15053 +
             (C113 * C127 + C32644 * C140) * C32957 + C168 * C15054 +
             C169 * C32950 + C170 * C15055 + C171 * C32937 + C172 * C15056 +
             C173 * C32920) *
                C15051 +
            (C15156 + C15157 + C15158 + C15159 + C15160 + C15161 + C15162 +
             C15163) *
                C32691) *
               C584 -
           ((C3245 * C32920 + C3246 * C15056 + C1519 * C32937 + C1520 * C15055 +
             C1521 * C32950 + C1522 * C15054 + C1699 * C32957 +
             C1700 * C15053) *
                C32691 +
            (C609 * C32920 + C610 * C15056 + C611 * C32937 + C612 * C15055 +
             C613 * C32950 + C614 * C15054 +
             (C113 * C366 + C32644 * C382) * C32957 +
             (C113 * C352 + C32644 * C367) * C15053) *
                C15051) *
               C585) *
              C32589 * C472 +
          (((C614 * C15053 + C613 * C32957 + C612 * C15054 + C611 * C32950 +
             C610 * C15055 + C609 * C32937 + C608 * C15056 + C607 * C32920) *
                C15051 +
            (C1522 * C15053 + C1521 * C32957 + C1520 * C15054 + C1519 * C32950 +
             C3246 * C15055 + C3245 * C32937 +
             (C113 * C700 + C32644 * C709) * C15056 +
             (C113 * C710 + C32644 * C715) * C32920) *
                C32691) *
               C585 -
           ((C15407 + C15406 + C15405 + C15404 + C15403 + C15402 + C15401 +
             C15400) *
                C32691 +
            (C175 * C32920 + C174 * C15056 + C173 * C32937 + C172 * C15055 +
             C171 * C32950 + C170 * C15054 + C169 * C32957 + C168 * C15053) *
                C15051) *
               C584) *
              C32589 * C473)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C1817 * C119 + C32952 * C126 + C1818 * C352 + C32941 * C367 +
              C1819 * C353 + C32919 * C368) *
                 C15779 +
             (C1817 * C127 + C32952 * C140 + C1818 * C366 + C32941 * C382 +
              C1819 * C369 + C32919 * C383) *
                 C15773 +
             (C1857 + C1858 + C1859) * C15780 +
             (C1860 + C1861 + C1862) * C32552) *
                C15051 +
            ((C6919 + C6920 + C6921) * C15779 +
             (C6922 + C6923 + C6924) * C15773 + C17050 * C15780 +
             C17051 * C32552) *
                C32691) *
               C584 -
           (((C17260 + C17261 + C17262) * C32552 +
             (C17263 + C17264 + C17265) * C15780 +
             (C7564 + C7565 + C7566) * C15773 +
             (C7567 + C7568 + C7569) * C15779) *
                C32691 +
            ((C2489 + C2490 + C2491) * C32552 +
             (C2492 + C2493 + C2494) * C15780 +
             (C1819 * C2108 + C32919 * C2118 + C1818 * C369 + C32941 * C383 +
              C1817 * C366 + C32952 * C382) *
                 C15773 +
             (C1819 * C2100 + C32919 * C2109 + C1818 * C353 + C32941 * C368 +
              C1817 * C352 + C32952 * C367) *
                 C15779) *
                C15051) *
               C585) *
              C32589 * C472 +
          ((((C2494 + C2493 + C2492) * C15779 +
             (C2491 + C2490 + C2489) * C15773 +
             (C2488 + C2487 + C2486) * C15780 +
             (C2485 + C2484 + C2483) * C32552) *
                C15051 +
            ((C17265 + C17264 + C17263) * C15779 +
             (C17262 + C17261 + C17260) * C15773 +
             (C1817 * C698 + C32952 * C705 + C1818 * C1155 + C32941 * C1169 +
              C1819 * C2642 + C32919 * C2647) *
                 C15780 +
             (C1817 * C706 + C32952 * C713 + C1818 * C1170 + C32941 * C1182 +
              C1819 * C2648 + C32919 * C2651) *
                 C32552) *
                C32691) *
               C585 -
           (((C2297 + C2298 + C2299) * C32552 +
             (C2300 + C2301 + C2302) * C15780 + C17052 * C15773 +
             C17053 * C15779) *
                C32691 +
            ((C1868 + C1867 + C1866) * C32552 +
             (C1865 + C1864 + C1863) * C15780 +
             (C1862 + C1861 + C1860) * C15773 +
             (C1859 + C1858 + C1857) * C15779) *
                C15051) *
               C584) *
              C32589 * C473)) /
            (p * q * std::sqrt(p + q));
    d2ee[14] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C119 + C32644 * C126) * C15053 +
            (C113 * C127 + C32644 * C140) * C32957 + C168 * C15054 +
            C169 * C32950 + C170 * C15055 + C171 * C32937 + C172 * C15056 +
            C173 * C32920) *
               C15051 +
           (C15156 + C15157 + C15158 + C15159 + C15160 + C15161 + C15162 +
            C15163) *
               C32691) *
              C32603 * C239 -
          ((C15164 + C15165 + C15166 + C15167 + C15168 + C15169 + C15170 +
            C15171) *
               C32691 +
           (C15163 + C15162 + C15161 + C15160 + C15159 + C15158 + C15157 +
            C15156) *
               C15051) *
              C32603 * C240 +
          ((C15171 + C15170 + C15169 + C15168 + C15167 + C15166 + C15165 +
            C15164) *
               C15051 +
           (C1025 * C15053 + C1024 * C32957 + C1023 * C15054 + C1022 * C32950 +
            C1021 * C15055 + C1020 * C32937 +
            (C113 * C1332 + C32644 * C1333) * C15056 +
            (C113 * C1334 + C32644 * C1335) * C32920) *
               C32691) *
              C32603 * C241) *
         C32577) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C119 + C32644 * C126) * C15053 +
            (C113 * C127 + C32644 * C140) * C32957 + C168 * C15054 +
            C169 * C32950 + C170 * C15055 + C171 * C32937 + C172 * C15056 +
            C173 * C32920) *
               C15051 +
           (C1016 * C15053 + C1017 * C32957 + C502 * C15054 + C501 * C32950 +
            C500 * C15055 + C499 * C32937 + C498 * C15056 + C497 * C32920) *
               C32691) *
              C32603 * C32589 * C110 -
          ((C495 * C32920 + C496 * C15056 + C497 * C32937 + C498 * C15055 +
            C499 * C32950 + C500 * C15054 + C501 * C32957 + C502 * C15053) *
               C32691 +
           (C175 * C32920 + C174 * C15056 + C173 * C32937 + C172 * C15055 +
            C171 * C32950 + C170 * C15054 + C169 * C32957 + C168 * C15053) *
               C15051) *
              C32603 * C32589 * C111 +
          ((C170 * C15053 + C171 * C32957 + C172 * C15054 + C173 * C32950 +
            C174 * C15055 + C175 * C32937 + C177 * C15056 + C176 * C32920) *
               C15051 +
           (C500 * C15053 + C499 * C32957 + C498 * C15054 + C497 * C32950 +
            C496 * C15055 + C495 * C32937 +
            (C113 * C474 + C32644 * C475) * C15056 +
            (C113 * C476 + C32644 * C477) * C32920) *
               C32691) *
              C32603 * C32589 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C119 + C32644 * C126) * C15779 +
            (C113 * C127 + C32644 * C140) * C15773 + C168 * C15780 +
            C169 * C32552) *
               C32958 +
           (C1016 * C15779 + C1017 * C15773 + C502 * C15780 + C501 * C32552) *
               C32954 +
           (C1018 * C15779 + C1019 * C15773 + C848 * C15780 + C849 * C32552) *
               C32944 +
           (C1025 * C15779 + C1024 * C15773 + C1023 * C15780 + C1022 * C32552) *
               C32926) *
              C32603 * C32589 * C110 -
          ((C1020 * C32552 + C1021 * C15780 + C1022 * C15773 + C1023 * C15779) *
               C32926 +
           (C851 * C32552 + C850 * C15780 + C849 * C15773 + C848 * C15779) *
               C32944 +
           (C499 * C32552 + C500 * C15780 + C501 * C15773 + C502 * C15779) *
               C32954 +
           (C171 * C32552 + C170 * C15780 + C169 * C15773 + C168 * C15779) *
               C32958) *
              C32603 * C32589 * C111 +
          ((C170 * C15779 + C171 * C15773 + C172 * C15780 + C173 * C32552) *
               C32958 +
           (C500 * C15779 + C499 * C15773 + C498 * C15780 + C497 * C32552) *
               C32954 +
           (C850 * C15779 + C851 * C15773 + C853 * C15780 + C852 * C32552) *
               C32944 +
           (C1021 * C15779 + C1020 * C15773 +
            (C113 * C1332 + C32644 * C1333) * C15780 +
            (C113 * C1334 + C32644 * C1335) * C32552) *
               C32926) *
              C32603 * C32589 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C119 + C32644 * C126) * C15779 +
            (C113 * C127 + C32644 * C140) * C15773 + C168 * C15780 +
            C169 * C32552) *
               C32958 +
           (C15880 + C15881 + C15882 + C15883) * C32954 + C15900 * C32944 +
           C15901 * C32926) *
              C32603 * C239 -
          ((C15892 + C15893 + C15894 + C15895) * C32926 +
           (C15891 + C15890 + C15889 + C15888) * C32944 +
           (C15887 + C15886 + C15885 + C15884) * C32954 +
           (C15883 + C15882 + C15881 + C15880) * C32958) *
              C32603 * C240 +
          (C15900 * C32958 + C15901 * C32954 +
           (C15895 + C15894 + C15893 + C15892) * C32944 +
           (C6291 * C15779 + C6290 * C15773 +
            (C113 * C6452 + C32644 * C6453) * C15780 +
            (C113 * C6454 + C32644 * C6455) * C32552) *
               C32926) *
              C32603 * C241) *
         C32577) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C1817 * C119 + C32952 * C126 + C1818 * C352 + C32941 * C367 +
             C1819 * C353 + C32919 * C368) *
                C15779 +
            (C1817 * C127 + C32952 * C140 + C1818 * C366 + C32941 * C382 +
             C1819 * C369 + C32919 * C383) *
                C15773 +
            (C1857 + C1858 + C1859) * C15780 +
            (C1860 + C1861 + C1862) * C32552) *
               C15051 +
           ((C6919 + C6920 + C6921) * C15779 +
            (C6922 + C6923 + C6924) * C15773 +
            (C2308 + C2307 + C2306) * C15780 +
            (C2305 + C2304 + C2303) * C32552) *
               C32691) *
              C32603 * C32589 * C110 -
          (((C2297 + C2298 + C2299) * C32552 +
            (C2300 + C2301 + C2302) * C15780 +
            (C2303 + C2304 + C2305) * C15773 +
            (C2306 + C2307 + C2308) * C15779) *
               C32691 +
           ((C1868 + C1867 + C1866) * C32552 +
            (C1865 + C1864 + C1863) * C15780 +
            (C1862 + C1861 + C1860) * C15773 +
            (C1859 + C1858 + C1857) * C15779) *
               C15051) *
              C32603 * C32589 * C111 +
          ((C1877 * C15779 + C1878 * C15773 + (C1874 + C1873 + C1872) * C15780 +
            (C1871 + C1870 + C1869) * C32552) *
               C15051 +
           ((C2302 + C2301 + C2300) * C15779 +
            (C2299 + C2298 + C2297) * C15773 +
            (C1817 * C244 + C32952 * C256 + C1818 * C699 + C32941 * C707 +
             C1819 * C2268 + C32919 * C2269) *
                C15780 +
            (C1817 * C255 + C32952 * C274 + C1818 * C708 + C32941 * C714 +
             C1819 * C2270 + C32919 * C2271) *
                C32552) *
               C32691) *
              C32603 * C32589 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C1817 * C119 + C32952 * C126 + C1818 * C352 + C32941 * C367 +
             C1819 * C353 + C32919 * C368) *
                C15779 +
            (C1817 * C127 + C32952 * C140 + C1818 * C366 + C32941 * C382 +
             C1819 * C369 + C32919 * C383) *
                C15773 +
            (C1857 + C1858 + C1859) * C15780 +
            (C1860 + C1861 + C1862) * C32552) *
               C15051 +
           ((C6919 + C6920 + C6921) * C15779 +
            (C6922 + C6923 + C6924) * C15773 +
            (C2308 + C2307 + C2306) * C15780 +
            (C2305 + C2304 + C2303) * C32552) *
               C32691) *
              C32603 * C239 -
          (((C7233 + C7232 + C7231) * C32552 +
            (C7230 + C7229 + C7228) * C15780 +
            (C6930 + C6929 + C6928) * C15773 +
            (C6927 + C6926 + C6925) * C15779) *
               C32691 +
           ((C2303 + C2304 + C2305) * C32552 +
            (C2306 + C2307 + C2308) * C15780 +
            (C6924 + C6923 + C6922) * C15773 +
            (C6921 + C6920 + C6919) * C15779) *
               C15051) *
              C32603 * C240 +
          ((C6939 * C15779 + C6940 * C15773 + (C7228 + C7229 + C7230) * C15780 +
            (C7231 + C7232 + C7233) * C32552) *
               C15051 +
           ((C6936 + C6935 + C6934) * C15779 +
            (C6933 + C6932 + C6931) * C15773 +
            (C1817 * C964 + C32952 * C972 + C1818 * C1669 + C32941 * C1673 +
             C1819 * C7211 + C32919 * C7212) *
                C15780 +
            (C1817 * C971 + C32952 * C982 + C1818 * C1674 + C32941 * C1678 +
             C1819 * C7213 + C32919 * C7214) *
                C32552) *
               C32691) *
              C32603 * C241) *
         C32577) /
            (p * q * std::sqrt(p + q));
    d2ee[15] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C3484 * C119 + C32886 * C126 + C3485 * C352 + C32731 * C367) *
                 C31569 +
             (C3484 * C127 + C32886 * C140 + C3485 * C366 + C32731 * C382) *
                 C32547 +
             (C3519 + C3520) * C31565 + (C3521 + C3522) * C32555 +
             C3535 * C31575 + C3536 * C17571) *
                C15051 +
            ((C4523 + C4524) * C31569 + (C4525 + C4526) * C32547 +
             C4879 * C31565 + C4880 * C32555 + C4343 * C31575 +
             C4344 * C17571) *
                C32691) *
               C32603 * C470 -
           (((C4527 + C4528) * C17571 + (C4529 + C4530) * C31575 +
             C8981 * C32555 + C8982 * C31565 + (C4535 + C4536) * C32547 +
             (C4537 + C4538) * C31569) *
                C32691 +
            (C4881 * C17571 + C4882 * C31575 + C4883 * C32555 + C4884 * C31565 +
             (C4526 + C4525) * C32547 + (C4524 + C4523) * C31569) *
                C15051) *
               C32603 * C471) *
              C472 +
          (((C4879 * C31569 + C4880 * C32547 + C4343 * C31565 + C4344 * C32555 +
             (C3892 + C3891) * C31575 + (C3890 + C3889) * C17571) *
                C15051 +
            (C8608 * C31569 + C8609 * C32547 + (C4530 + C4529) * C31565 +
             (C4528 + C4527) * C32555 +
             (C3484 * C251 + C32886 * C269 + C3485 * C1494 + C32731 * C1495) *
                 C31575 +
             (C3484 * C270 + C32886 * C281 + C3485 * C1496 + C32731 * C1497) *
                 C17571) *
                C32691) *
               C32603 * C471 -
           (((C3889 + C3890) * C17571 + (C3891 + C3892) * C31575 +
             C4881 * C32555 + C4882 * C31565 + C4883 * C32547 +
             C4884 * C31569) *
                C32691 +
            ((C3530 + C3529) * C17571 + (C3528 + C3527) * C31575 +
             (C3526 + C3525) * C32555 + (C3524 + C3523) * C31565 +
             (C3522 + C3521) * C32547 + (C3520 + C3519) * C31569) *
                C15051) *
               C32603 * C470) *
              C473)) /
        (p * q * std::sqrt(p + q));
    d2ee[16] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C3484 * C119 + C32886 * C126 + C3485 * C352 + C32731 * C367) *
                 C31569 +
             (C3484 * C127 + C32886 * C140 + C3485 * C366 + C32731 * C382) *
                 C32547 +
             (C3519 + C3520) * C31565 + (C3521 + C3522) * C32555 +
             C3535 * C31575 + C3536 * C17571) *
                C15051 +
            ((C4523 + C4524) * C31569 + (C4525 + C4526) * C32547 +
             C4879 * C31565 + C4880 * C32555 + C4343 * C31575 +
             C4344 * C17571) *
                C32691) *
               C584 -
           (((C5095 + C5096) * C17571 + (C5097 + C5098) * C31575 +
             (C5099 + C5100) * C32555 + (C5101 + C5102) * C31565 +
             (C5305 + C5306) * C32547 + (C5307 + C5308) * C31569) *
                C32691 +
            ((C4059 + C4060) * C17571 + (C4061 + C4062) * C31575 +
             (C4063 + C4064) * C32555 + (C4065 + C4066) * C31565 +
             (C3485 * C369 + C32731 * C383 + C3484 * C366 + C32886 * C382) *
                 C32547 +
             (C3485 * C353 + C32731 * C368 + C3484 * C352 + C32886 * C367) *
                 C31569) *
                C15051) *
               C585) *
              C470 +
          ((((C5308 + C5307) * C31569 + (C5306 + C5305) * C32547 +
             (C5102 + C5101) * C31565 + (C5100 + C5099) * C32555 +
             (C5098 + C5097) * C31575 + (C5096 + C5095) * C17571) *
                C15051 +
            ((C9394 + C9393) * C31569 + (C9392 + C9391) * C32547 +
             (C9188 + C9187) * C31565 + (C9186 + C9185) * C32555 +
             (C3484 * C1150 + C32886 * C1160 + C3485 * C1158 + C32731 * C1175) *
                 C31575 +
             (C3484 * C1159 + C32886 * C1177 + C3485 * C1176 + C32731 * C1185) *
                 C17571) *
                C32691) *
               C585 -
           (((C4527 + C4528) * C17571 + (C4529 + C4530) * C31575 +
             C8981 * C32555 + C8982 * C31565 + (C4535 + C4536) * C32547 +
             (C4537 + C4538) * C31569) *
                C32691 +
            (C4881 * C17571 + C4882 * C31575 + C4883 * C32555 + C4884 * C31565 +
             (C4526 + C4525) * C32547 + (C4524 + C4523) * C31569) *
                C15051) *
               C584) *
              C471) *
         C32577) /
        (p * q * std::sqrt(p + q));
    d2ee[17] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C3484 * C119 + C32886 * C126 + C3485 * C352 + C32731 * C367) *
                C31569 +
            (C3484 * C127 + C32886 * C140 + C3485 * C366 + C32731 * C382) *
                C32547 +
            (C3519 + C3520) * C31565 + (C3521 + C3522) * C32555 +
            C3535 * C31575 + C3536 * C17571) *
               C15051 +
           ((C4523 + C4524) * C31569 + (C4525 + C4526) * C32547 +
            C4879 * C31565 + C4880 * C32555 + C4343 * C31575 + C4344 * C17571) *
               C32691) *
              C32603 * C239 -
          (((C4527 + C4528) * C17571 + (C4529 + C4530) * C31575 +
            C8981 * C32555 + C8982 * C31565 + (C4535 + C4536) * C32547 +
            (C4537 + C4538) * C31569) *
               C32691 +
           (C4881 * C17571 + C4882 * C31575 + C4883 * C32555 + C4884 * C31565 +
            (C4526 + C4525) * C32547 + (C4524 + C4523) * C31569) *
               C15051) *
              C32603 * C240 +
          ((C8606 * C31569 + C8607 * C32547 + C8608 * C31565 + C8609 * C32555 +
            (C4530 + C4529) * C31575 + (C4528 + C4527) * C17571) *
               C15051 +
           (C9593 * C31569 + C9594 * C32547 + (C8633 + C8632) * C31565 +
            (C8631 + C8630) * C32555 +
            (C3484 * C963 + C32886 * C970 + C3485 * C1670 + C32731 * C1675) *
                C31575 +
            (C3484 * C969 + C32886 * C981 + C3485 * C1676 + C32731 * C1679) *
                C17571) *
               C32691) *
              C32603 * C241) *
         C32577) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C3484 * C119 + C32886 * C126 + C3485 * C352 + C32731 * C367) *
                C31569 +
            (C3484 * C127 + C32886 * C140 + C3485 * C366 + C32731 * C382) *
                C32547 +
            (C3519 + C3520) * C31565 + (C3521 + C3522) * C32555 +
            C3535 * C31575 + C3536 * C17571) *
               C15051 +
           ((C4523 + C4524) * C31569 + (C4525 + C4526) * C32547 +
            C4879 * C31565 + C4880 * C32555 + C4343 * C31575 + C4344 * C17571) *
               C32691) *
              C32603 * C32589 * C110 -
          (((C3889 + C3890) * C17571 + (C3891 + C3892) * C31575 +
            C4881 * C32555 + C4882 * C31565 + C4883 * C32547 + C4884 * C31569) *
               C32691 +
           ((C3530 + C3529) * C17571 + (C3528 + C3527) * C31575 +
            (C3526 + C3525) * C32555 + (C3524 + C3523) * C31565 +
            (C3522 + C3521) * C32547 + (C3520 + C3519) * C31569) *
               C15051) *
              C32603 * C32589 * C111 +
          ((C3535 * C31569 + C3536 * C32547 + C3537 * C31565 + C3538 * C32555 +
            (C3534 + C3533) * C31575 + (C3532 + C3531) * C17571) *
               C15051 +
           (C4343 * C31569 + C4344 * C32547 + (C3892 + C3891) * C31565 +
            (C3890 + C3889) * C32555 +
            (C3484 * C243 + C32886 * C254 + C3485 * C700 + C32731 * C709) *
                C31575 +
            (C3484 * C253 + C32886 * C273 + C3485 * C710 + C32731 * C715) *
                C17571) *
               C32691) *
              C32603 * C32589 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C3484 * C119 + C32886 * C126 + C3485 * C352 + C32731 * C367) *
                C31569 +
            (C3484 * C127 + C32886 * C140 + C3485 * C366 + C32731 * C382) *
                C32547 +
            (C3519 + C3520) * C31565 + (C3521 + C3522) * C32555 +
            C3535 * C31575 + C3536 * C17571) *
               C15051 +
           ((C4523 + C4524) * C31569 + (C4525 + C4526) * C32547 +
            C4879 * C31565 + C4880 * C32555 + C4343 * C31575 + C4344 * C17571) *
               C32691) *
              C345 -
          (((C5095 + C5096) * C17571 + (C5097 + C5098) * C31575 +
            (C5099 + C5100) * C32555 + (C5101 + C5102) * C31565 +
            (C5305 + C5306) * C32547 + (C5307 + C5308) * C31569) *
               C32691 +
           ((C4059 + C4060) * C17571 + (C4061 + C4062) * C31575 +
            (C4063 + C4064) * C32555 + (C4065 + C4066) * C31565 +
            (C3485 * C369 + C32731 * C383 + C3484 * C366 + C32886 * C382) *
                C32547 +
            (C3485 * C353 + C32731 * C368 + C3484 * C352 + C32886 * C367) *
                C31569) *
               C15051) *
              C346 +
          (((C3484 * C353 + C32886 * C368 + C3485 * C2100 + C32731 * C2109) *
                C31569 +
            (C3484 * C369 + C32886 * C383 + C3485 * C2108 + C32731 * C2118) *
                C32547 +
            (C3484 * C354 + C32886 * C370 + C3485 * C2099 + C32731 * C2107) *
                C31565 +
            (C3484 * C371 + C32886 * C384 + C3485 * C2106 + C32731 * C2117) *
                C32555 +
            (C3484 * C355 + C32886 * C372 + C3485 * C2098 + C32731 * C2105) *
                C31575 +
            (C3484 * C373 + C32886 * C385 + C3485 * C2104 + C32731 * C2116) *
                C17571) *
               C15051 +
           ((C3484 * C1153 + C32886 * C1165 + C3485 * C2640 + C32731 * C2643) *
                C31569 +
            (C3484 * C1166 + C32886 * C1180 + C3485 * C2644 + C32731 * C2649) *
                C32547 +
            (C3484 * C1154 + C32886 * C1167 + C3485 * C2641 + C32731 * C2645) *
                C31565 +
            (C3484 * C1168 + C32886 * C1181 + C3485 * C2646 + C32731 * C2650) *
                C32555 +
            (C3484 * C1155 + C32886 * C1169 + C3485 * C2642 + C32731 * C2647) *
                C31575 +
            (C3484 * C1170 + C32886 * C1182 + C3485 * C2648 + C32731 * C2651) *
                C17571) *
               C32691) *
              C347) *
         C32589 * C32577) /
            (p * q * std::sqrt(p + q));
    d2ee[18] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C3484 * C119 + C32886 * C126 + C3485 * C352 + C32731 * C367) *
                 C31569 +
             (C3484 * C127 + C32886 * C140 + C3485 * C366 + C32731 * C382) *
                 C32547 +
             (C3519 + C3520) * C31565 + (C3521 + C3522) * C32555 +
             C3535 * C31575 + C3536 * C17571) *
                C15051 +
            ((C4523 + C4524) * C31569 + (C4525 + C4526) * C32547 +
             C4879 * C31565 + C4880 * C32555 + C4343 * C31575 +
             C4344 * C17571) *
                C32691) *
               C584 -
           (((C5095 + C5096) * C17571 + (C5097 + C5098) * C31575 +
             (C5099 + C5100) * C32555 + (C5101 + C5102) * C31565 +
             (C5305 + C5306) * C32547 + (C5307 + C5308) * C31569) *
                C32691 +
            ((C4059 + C4060) * C17571 + (C4061 + C4062) * C31575 +
             (C4063 + C4064) * C32555 + (C4065 + C4066) * C31565 +
             (C3485 * C369 + C32731 * C383 + C3484 * C366 + C32886 * C382) *
                 C32547 +
             (C3485 * C353 + C32731 * C368 + C3484 * C352 + C32886 * C367) *
                 C31569) *
                C15051) *
               C585) *
              C32589 * C472 +
          ((((C4066 + C4065) * C31569 + (C4064 + C4063) * C32547 +
             (C4062 + C4061) * C31565 + (C4060 + C4059) * C32555 +
             (C4058 + C4057) * C31575 + (C4056 + C4055) * C17571) *
                C15051 +
            ((C5102 + C5101) * C31569 + (C5100 + C5099) * C32547 +
             (C5098 + C5097) * C31565 + (C5096 + C5095) * C32555 +
             (C3484 * C699 + C32886 * C707 + C3485 * C2268 + C32731 * C2269) *
                 C31575 +
             (C3484 * C708 + C32886 * C714 + C3485 * C2270 + C32731 * C2271) *
                 C17571) *
                C32691) *
               C585 -
           (((C3889 + C3890) * C17571 + (C3891 + C3892) * C31575 +
             C4881 * C32555 + C4882 * C31565 + C4883 * C32547 +
             C4884 * C31569) *
                C32691 +
            ((C3530 + C3529) * C17571 + (C3528 + C3527) * C31575 +
             (C3526 + C3525) * C32555 + (C3524 + C3523) * C31565 +
             (C3522 + C3521) * C32547 + (C3520 + C3519) * C31569) *
                C15051) *
               C584) *
              C32589 * C473)) /
        (p * q * std::sqrt(p + q));
    d2ee[19] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C3484 * C119 + C32886 * C126 + C3485 * C352 + C32731 * C367) *
                C31569 +
            (C3484 * C127 + C32886 * C140 + C3485 * C366 + C32731 * C382) *
                C32547 +
            (C3519 + C3520) * C31565 + (C3521 + C3522) * C32555 +
            C3535 * C31575 + C3536 * C17571) *
               C15051 +
           ((C4523 + C4524) * C31569 + (C4525 + C4526) * C32547 +
            C4879 * C31565 + C4880 * C32555 + C4343 * C31575 + C4344 * C17571) *
               C32691) *
              C32603 * C32589 * C110 -
          (((C3889 + C3890) * C17571 + (C3891 + C3892) * C31575 +
            C4881 * C32555 + C4882 * C31565 + C4883 * C32547 + C4884 * C31569) *
               C32691 +
           ((C3530 + C3529) * C17571 + (C3528 + C3527) * C31575 +
            (C3526 + C3525) * C32555 + (C3524 + C3523) * C31565 +
            (C3522 + C3521) * C32547 + (C3520 + C3519) * C31569) *
               C15051) *
              C32603 * C32589 * C111 +
          ((C3535 * C31569 + C3536 * C32547 + C3537 * C31565 + C3538 * C32555 +
            (C3534 + C3533) * C31575 + (C3532 + C3531) * C17571) *
               C15051 +
           (C4343 * C31569 + C4344 * C32547 + (C3892 + C3891) * C31565 +
            (C3890 + C3889) * C32555 +
            (C3484 * C243 + C32886 * C254 + C3485 * C700 + C32731 * C709) *
                C31575 +
            (C3484 * C253 + C32886 * C273 + C3485 * C710 + C32731 * C715) *
                C17571) *
               C32691) *
              C32603 * C32589 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C3484 * C119 + C32886 * C126 + C3485 * C352 + C32731 * C367) *
                C31569 +
            (C3484 * C127 + C32886 * C140 + C3485 * C366 + C32731 * C382) *
                C32547 +
            (C3519 + C3520) * C31565 + (C3521 + C3522) * C32555 +
            C3535 * C31575 + C3536 * C17571) *
               C15051 +
           ((C4523 + C4524) * C31569 + (C4525 + C4526) * C32547 +
            C4879 * C31565 + C4880 * C32555 + C4343 * C31575 + C4344 * C17571) *
               C32691) *
              C32603 * C239 -
          (((C4527 + C4528) * C17571 + (C4529 + C4530) * C31575 +
            C8981 * C32555 + C8982 * C31565 + (C4535 + C4536) * C32547 +
            (C4537 + C4538) * C31569) *
               C32691 +
           (C4881 * C17571 + C4882 * C31575 + C4883 * C32555 + C4884 * C31565 +
            (C4526 + C4525) * C32547 + (C4524 + C4523) * C31569) *
               C15051) *
              C32603 * C240 +
          ((C8606 * C31569 + C8607 * C32547 + C8608 * C31565 + C8609 * C32555 +
            (C4530 + C4529) * C31575 + (C4528 + C4527) * C17571) *
               C15051 +
           (C9593 * C31569 + C9594 * C32547 + (C8633 + C8632) * C31565 +
            (C8631 + C8630) * C32555 +
            (C3484 * C963 + C32886 * C970 + C3485 * C1670 + C32731 * C1675) *
                C31575 +
            (C3484 * C969 + C32886 * C981 + C3485 * C1676 + C32731 * C1679) *
                C17571) *
               C32691) *
              C32603 * C241) *
         C32577) /
            (p * q * std::sqrt(p + q));
    d2ee[20] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C119 + C32644 * C126) * C15053 +
             (C113 * C127 + C32644 * C140) * C32957 + C168 * C15054 +
             C169 * C32950 + C170 * C15055 + C171 * C32937 + C172 * C15056 +
             C173 * C32920) *
                C15051 +
            (C15156 + C15157 + C15158 + C15159 + C15160 + C15161 + C15162 +
             C15163) *
                C32691) *
               C32603 * C470 -
           ((C15164 + C15165 + C15166 + C15167 + C15168 + C15169 + C15170 +
             C15171) *
                C32691 +
            (C15163 + C15162 + C15161 + C15160 + C15159 + C15158 + C15157 +
             C15156) *
                C15051) *
               C32603 * C471) *
              C472 +
          (((C15400 + C15401 + C15402 + C15403 + C15404 + C15405 + C15406 +
             C15407) *
                C15051 +
            (C848 * C15053 + C849 * C32957 + C850 * C15054 + C851 * C32950 +
             C853 * C15055 + C852 * C32937 +
             (C113 * C252 + C32644 * C271) * C15056 +
             (C113 * C272 + C32644 * C282) * C32920) *
                C32691) *
               C32603 * C471 -
           ((C15407 + C15406 + C15405 + C15404 + C15403 + C15402 + C15401 +
             C15400) *
                C32691 +
            (C175 * C32920 + C174 * C15056 + C173 * C32937 + C172 * C15055 +
             C171 * C32950 + C170 * C15054 + C169 * C32957 + C168 * C15053) *
                C15051) *
               C32603 * C470) *
              C473)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C119 + C32644 * C126) * C15779 +
             (C113 * C127 + C32644 * C140) * C15773 + C168 * C15780 +
             C169 * C32552) *
                C32958 +
            (C15880 + C15881 + C15882 + C15883) * C32954 + C15900 * C32944 +
            C15901 * C32926) *
               C32603 * C470 -
           ((C15892 + C15893 + C15894 + C15895) * C32926 +
            (C15891 + C15890 + C15889 + C15888) * C32944 +
            (C15887 + C15886 + C15885 + C15884) * C32954 +
            (C15883 + C15882 + C15881 + C15880) * C32958) *
               C32603 * C471) *
              C472 +
          (((C16130 + C16131 + C16132 + C16133) * C32958 +
            (C16134 + C16135 + C16136 + C16137) * C32954 +
            (C16138 + C16139 + C16140 + C16141) * C32944 +
            (C6467 * C15779 + C6468 * C15773 +
             (C113 * C968 + C32644 * C979) * C15780 +
             (C113 * C980 + C32644 * C986) * C32552) *
                C32926) *
               C32603 * C471 -
           ((C16141 + C16140 + C16139 + C16138) * C32926 +
            (C16137 + C16136 + C16135 + C16134) * C32944 +
            (C16133 + C16132 + C16131 + C16130) * C32954 +
            (C171 * C32552 + C170 * C15780 + C169 * C15773 + C168 * C15779) *
                C32958) *
               C32603 * C470) *
              C473)) /
            (p * q * std::sqrt(p + q));
    d2ee[21] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                 (((((C113 * C119 + C32644 * C126) * C15053 +
                     (C113 * C127 + C32644 * C140) * C32957 + C168 * C15054 +
                     C169 * C32950 + C170 * C15055 + C171 * C32937 +
                     C172 * C15056 + C173 * C32920) *
                        C15051 +
                    (C15156 + C15157 + C15158 + C15159 + C15160 + C15161 +
                     C15162 + C15163) *
                        C32691) *
                       C584 -
                   ((C15668 + C15669 + C15670 + C15671 + C15672 + C15673 +
                     C15674 + C15675) *
                        C32691 +
                    (C609 * C32920 + C610 * C15056 + C611 * C32937 +
                     C612 * C15055 + C613 * C32950 + C614 * C15054 +
                     (C113 * C366 + C32644 * C382) * C32957 +
                     (C113 * C352 + C32644 * C367) * C15053) *
                        C15051) *
                       C585) *
                      C470 +
                  (((C15675 + C15674 + C15673 + C15672 + C15671 + C15670 +
                     C15669 + C15668) *
                        C15051 +
                    (C1698 * C15053 + C1697 * C32957 + C1518 * C15054 +
                     C1517 * C32950 + C1516 * C15055 + C1515 * C32937 +
                     (C113 * C1494 + C32644 * C1495) * C15056 +
                     (C113 * C1496 + C32644 * C1497) * C32920) *
                        C32691) *
                       C585 -
                   ((C15164 + C15165 + C15166 + C15167 + C15168 + C15169 +
                     C15170 + C15171) *
                        C32691 +
                    (C15163 + C15162 + C15161 + C15160 + C15159 + C15158 +
                     C15157 + C15156) *
                        C15051) *
                       C584) *
                      C471) *
                 C32577) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                 (((((C113 * C119 + C32644 * C126) * C15779 +
                     (C113 * C127 + C32644 * C140) * C15773 + C168 * C15780 +
                     C169 * C32552) *
                        C32958 +
                    (C15880 + C15881 + C15882 + C15883) * C32954 +
                    C15900 * C32944 + C15901 * C32926) *
                       C584 -
                   ((C16402 + C16403 + C16404 + C16405) * C32926 +
                    (C16406 + C16407 + C16408 + C16409) * C32944 +
                    (C16410 + C16411 + C16412 + C16413) * C32954 +
                    (C613 * C32552 + C614 * C15780 +
                     (C113 * C366 + C32644 * C382) * C15773 +
                     (C113 * C352 + C32644 * C367) * C15779) *
                        C32958) *
                       C585) *
                      C470 +
                  (((C16413 + C16412 + C16411 + C16410) * C32958 +
                    (C16409 + C16408 + C16407 + C16406) * C32954 +
                    (C16405 + C16404 + C16403 + C16402) * C32944 +
                    (C6656 * C15779 + C6655 * C15773 +
                     (C113 * C6552 + C32644 * C6553) * C15780 +
                     (C113 * C6554 + C32644 * C6555) * C32552) *
                        C32926) *
                       C585 -
                   ((C15892 + C15893 + C15894 + C15895) * C32926 +
                    (C15891 + C15890 + C15889 + C15888) * C32944 +
                    (C15887 + C15886 + C15885 + C15884) * C32954 +
                    (C15883 + C15882 + C15881 + C15880) * C32958) *
                       C584) *
                      C471) *
                 C32577) /
                    (p * q * std::sqrt(p + q));
    d2ee[22] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C119 + C32644 * C126) * C15053 +
            (C113 * C127 + C32644 * C140) * C32957 + C168 * C15054 +
            C169 * C32950 + C170 * C15055 + C171 * C32937 + C172 * C15056 +
            C173 * C32920) *
               C15051 +
           (C15156 + C15157 + C15158 + C15159 + C15160 + C15161 + C15162 +
            C15163) *
               C32691) *
              C32603 * C239 -
          ((C15164 + C15165 + C15166 + C15167 + C15168 + C15169 + C15170 +
            C15171) *
               C32691 +
           (C15163 + C15162 + C15161 + C15160 + C15159 + C15158 + C15157 +
            C15156) *
               C15051) *
              C32603 * C240 +
          ((C15171 + C15170 + C15169 + C15168 + C15167 + C15166 + C15165 +
            C15164) *
               C15051 +
           (C1025 * C15053 + C1024 * C32957 + C1023 * C15054 + C1022 * C32950 +
            C1021 * C15055 + C1020 * C32937 +
            (C113 * C1332 + C32644 * C1333) * C15056 +
            (C113 * C1334 + C32644 * C1335) * C32920) *
               C32691) *
              C32603 * C241) *
         C32577) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C119 + C32644 * C126) * C15053 +
            (C113 * C127 + C32644 * C140) * C32957 + C168 * C15054 +
            C169 * C32950 + C170 * C15055 + C171 * C32937 + C172 * C15056 +
            C173 * C32920) *
               C15051 +
           (C1016 * C15053 + C1017 * C32957 + C502 * C15054 + C501 * C32950 +
            C500 * C15055 + C499 * C32937 + C498 * C15056 + C497 * C32920) *
               C32691) *
              C32603 * C32589 * C110 -
          ((C495 * C32920 + C496 * C15056 + C497 * C32937 + C498 * C15055 +
            C499 * C32950 + C500 * C15054 + C501 * C32957 + C502 * C15053) *
               C32691 +
           (C175 * C32920 + C174 * C15056 + C173 * C32937 + C172 * C15055 +
            C171 * C32950 + C170 * C15054 + C169 * C32957 + C168 * C15053) *
               C15051) *
              C32603 * C32589 * C111 +
          ((C170 * C15053 + C171 * C32957 + C172 * C15054 + C173 * C32950 +
            C174 * C15055 + C175 * C32937 + C177 * C15056 + C176 * C32920) *
               C15051 +
           (C500 * C15053 + C499 * C32957 + C498 * C15054 + C497 * C32950 +
            C496 * C15055 + C495 * C32937 +
            (C113 * C474 + C32644 * C475) * C15056 +
            (C113 * C476 + C32644 * C477) * C32920) *
               C32691) *
              C32603 * C32589 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C119 + C32644 * C126) * C15053 +
            (C113 * C127 + C32644 * C140) * C32957 + C168 * C15054 +
            C169 * C32950 + C170 * C15055 + C171 * C32937 + C172 * C15056 +
            C173 * C32920) *
               C15051 +
           (C15156 + C15157 + C15158 + C15159 + C15160 + C15161 + C15162 +
            C15163) *
               C32691) *
              C345 -
          ((C3245 * C32920 + C3246 * C15056 + C1519 * C32937 + C1520 * C15055 +
            C1521 * C32950 + C1522 * C15054 + C1699 * C32957 + C1700 * C15053) *
               C32691 +
           (C609 * C32920 + C610 * C15056 + C611 * C32937 + C612 * C15055 +
            C613 * C32950 + C614 * C15054 +
            (C113 * C366 + C32644 * C382) * C32957 +
            (C113 * C352 + C32644 * C367) * C15053) *
               C15051) *
              C346 +
          (((C113 * C353 + C32644 * C368) * C15053 +
            (C113 * C369 + C32644 * C383) * C32957 +
            (C113 * C354 + C32644 * C370) * C15054 +
            (C113 * C371 + C32644 * C384) * C32950 +
            (C113 * C355 + C32644 * C372) * C15055 +
            (C113 * C373 + C32644 * C385) * C32937 +
            (C113 * C356 + C32644 * C374) * C15056 +
            (C113 * C375 + C32644 * C386) * C32920) *
               C15051 +
           ((C113 * C1153 + C32644 * C1165) * C15053 +
            (C113 * C1166 + C32644 * C1180) * C32957 +
            (C113 * C1154 + C32644 * C1167) * C15054 +
            (C113 * C1168 + C32644 * C1181) * C32950 +
            (C113 * C1155 + C32644 * C1169) * C15055 +
            (C113 * C1170 + C32644 * C1182) * C32937 +
            (C113 * C2268 + C32644 * C2269) * C15056 +
            (C113 * C2270 + C32644 * C2271) * C32920) *
               C32691) *
              C347) *
         C32589 * C32577) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C119 + C32644 * C126) * C15779 +
            (C113 * C127 + C32644 * C140) * C15773 + C168 * C15780 +
            C169 * C32552) *
               C32958 +
           (C1016 * C15779 + C1017 * C15773 + C502 * C15780 + C501 * C32552) *
               C32954 +
           (C1018 * C15779 + C1019 * C15773 + C848 * C15780 + C849 * C32552) *
               C32944 +
           (C1025 * C15779 + C1024 * C15773 + C1023 * C15780 + C1022 * C32552) *
               C32926) *
              C32603 * C32589 * C110 -
          ((C1020 * C32552 + C1021 * C15780 + C1022 * C15773 + C1023 * C15779) *
               C32926 +
           (C851 * C32552 + C850 * C15780 + C849 * C15773 + C848 * C15779) *
               C32944 +
           (C499 * C32552 + C500 * C15780 + C501 * C15773 + C502 * C15779) *
               C32954 +
           (C171 * C32552 + C170 * C15780 + C169 * C15773 + C168 * C15779) *
               C32958) *
              C32603 * C32589 * C111 +
          ((C170 * C15779 + C171 * C15773 + C172 * C15780 + C173 * C32552) *
               C32958 +
           (C500 * C15779 + C499 * C15773 + C498 * C15780 + C497 * C32552) *
               C32954 +
           (C850 * C15779 + C851 * C15773 + C853 * C15780 + C852 * C32552) *
               C32944 +
           (C1021 * C15779 + C1020 * C15773 +
            (C113 * C1332 + C32644 * C1333) * C15780 +
            (C113 * C1334 + C32644 * C1335) * C32552) *
               C32926) *
              C32603 * C32589 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C119 + C32644 * C126) * C15779 +
            (C113 * C127 + C32644 * C140) * C15773 + C168 * C15780 +
            C169 * C32552) *
               C32958 +
           (C15880 + C15881 + C15882 + C15883) * C32954 + C15900 * C32944 +
           C15901 * C32926) *
              C32603 * C239 -
          ((C15892 + C15893 + C15894 + C15895) * C32926 +
           (C15891 + C15890 + C15889 + C15888) * C32944 +
           (C15887 + C15886 + C15885 + C15884) * C32954 +
           (C15883 + C15882 + C15881 + C15880) * C32958) *
              C32603 * C240 +
          (C15900 * C32958 + C15901 * C32954 +
           (C15895 + C15894 + C15893 + C15892) * C32944 +
           (C6291 * C15779 + C6290 * C15773 +
            (C113 * C6452 + C32644 * C6453) * C15780 +
            (C113 * C6454 + C32644 * C6455) * C32552) *
               C32926) *
              C32603 * C241) *
         C32577) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C119 + C32644 * C126) * C15779 +
            (C113 * C127 + C32644 * C140) * C15773 + C168 * C15780 +
            C169 * C32552) *
               C32958 +
           (C15880 + C15881 + C15882 + C15883) * C32954 + C15900 * C32944 +
           C15901 * C32926) *
              C345 -
          ((C8170 * C32552 + C8171 * C15780 + C6657 * C15773 + C6658 * C15779) *
               C32926 +
           (C1517 * C32552 + C1518 * C15780 + C1697 * C15773 + C1698 * C15779) *
               C32944 +
           (C1521 * C32552 + C1522 * C15780 + C1699 * C15773 + C1700 * C15779) *
               C32954 +
           (C613 * C32552 + C614 * C15780 +
            (C113 * C366 + C32644 * C382) * C15773 +
            (C113 * C352 + C32644 * C367) * C15779) *
               C32958) *
              C346 +
          (((C113 * C353 + C32644 * C368) * C15779 +
            (C113 * C369 + C32644 * C383) * C15773 +
            (C113 * C354 + C32644 * C370) * C15780 +
            (C113 * C371 + C32644 * C384) * C32552) *
               C32958 +
           ((C113 * C1153 + C32644 * C1165) * C15779 +
            (C113 * C1166 + C32644 * C1180) * C15773 +
            (C113 * C1154 + C32644 * C1167) * C15780 +
            (C113 * C1168 + C32644 * C1181) * C32552) *
               C32954 +
           ((C113 * C1156 + C32644 * C1171) * C15779 +
            (C113 * C1172 + C32644 * C1183) * C15773 +
            (C113 * C1157 + C32644 * C1173) * C15780 +
            (C113 * C1174 + C32644 * C1184) * C32552) *
               C32944 +
           ((C113 * C6359 + C32644 * C6363) * C15779 +
            (C113 * C6364 + C32644 * C6368) * C15773 +
            (C113 * C7211 + C32644 * C7212) * C15780 +
            (C113 * C7213 + C32644 * C7214) * C32552) *
               C32926) *
              C347) *
         C32589 * C32577) /
            (p * q * std::sqrt(p + q));
    d2ee[23] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C119 + C32644 * C126) * C15053 +
             (C113 * C127 + C32644 * C140) * C32957 + C168 * C15054 +
             C169 * C32950 + C170 * C15055 + C171 * C32937 + C172 * C15056 +
             C173 * C32920) *
                C15051 +
            (C15156 + C15157 + C15158 + C15159 + C15160 + C15161 + C15162 +
             C15163) *
                C32691) *
               C584 -
           ((C3245 * C32920 + C3246 * C15056 + C1519 * C32937 + C1520 * C15055 +
             C1521 * C32950 + C1522 * C15054 + C1699 * C32957 +
             C1700 * C15053) *
                C32691 +
            (C609 * C32920 + C610 * C15056 + C611 * C32937 + C612 * C15055 +
             C613 * C32950 + C614 * C15054 +
             (C113 * C366 + C32644 * C382) * C32957 +
             (C113 * C352 + C32644 * C367) * C15053) *
                C15051) *
               C585) *
              C32589 * C472 +
          (((C614 * C15053 + C613 * C32957 + C612 * C15054 + C611 * C32950 +
             C610 * C15055 + C609 * C32937 + C608 * C15056 + C607 * C32920) *
                C15051 +
            (C1522 * C15053 + C1521 * C32957 + C1520 * C15054 + C1519 * C32950 +
             C3246 * C15055 + C3245 * C32937 +
             (C113 * C700 + C32644 * C709) * C15056 +
             (C113 * C710 + C32644 * C715) * C32920) *
                C32691) *
               C585 -
           ((C15407 + C15406 + C15405 + C15404 + C15403 + C15402 + C15401 +
             C15400) *
                C32691 +
            (C175 * C32920 + C174 * C15056 + C173 * C32937 + C172 * C15055 +
             C171 * C32950 + C170 * C15054 + C169 * C32957 + C168 * C15053) *
                C15051) *
               C584) *
              C32589 * C473)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C119 + C32644 * C126) * C15779 +
             (C113 * C127 + C32644 * C140) * C15773 + C168 * C15780 +
             C169 * C32552) *
                C32958 +
            (C15880 + C15881 + C15882 + C15883) * C32954 + C15900 * C32944 +
            C15901 * C32926) *
               C584 -
           ((C8170 * C32552 + C8171 * C15780 + C6657 * C15773 +
             C6658 * C15779) *
                C32926 +
            (C1517 * C32552 + C1518 * C15780 + C1697 * C15773 +
             C1698 * C15779) *
                C32944 +
            (C1521 * C32552 + C1522 * C15780 + C1699 * C15773 +
             C1700 * C15779) *
                C32954 +
            (C613 * C32552 + C614 * C15780 +
             (C113 * C366 + C32644 * C382) * C15773 +
             (C113 * C352 + C32644 * C367) * C15779) *
                C32958) *
               C585) *
              C32589 * C472 +
          (((C614 * C15779 + C613 * C15773 + C612 * C15780 + C611 * C32552) *
                C32958 +
            (C1522 * C15779 + C1521 * C15773 + C1520 * C15780 +
             C1519 * C32552) *
                C32954 +
            (C1518 * C15779 + C1517 * C15773 + C1516 * C15780 +
             C1515 * C32552) *
                C32944 +
            (C8171 * C15779 + C8170 * C15773 +
             (C113 * C1670 + C32644 * C1675) * C15780 +
             (C113 * C1676 + C32644 * C1679) * C32552) *
                C32926) *
               C585 -
           ((C16141 + C16140 + C16139 + C16138) * C32926 +
            (C16137 + C16136 + C16135 + C16134) * C32944 +
            (C16133 + C16132 + C16131 + C16130) * C32954 +
            (C171 * C32552 + C170 * C15780 + C169 * C15773 + C168 * C15779) *
                C32958) *
               C584) *
              C32589 * C473)) /
            (p * q * std::sqrt(p + q));
    d2ee[24] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C119 + C32644 * C126) * C15053 +
            (C113 * C127 + C32644 * C140) * C32957 + C168 * C15054 +
            C169 * C32950 + C170 * C15055 + C171 * C32937 + C172 * C15056 +
            C173 * C32920) *
               C15051 +
           (C1016 * C15053 + C1017 * C32957 + C502 * C15054 + C501 * C32950 +
            C500 * C15055 + C499 * C32937 + C498 * C15056 + C497 * C32920) *
               C32691) *
              C32603 * C32589 * C110 -
          ((C495 * C32920 + C496 * C15056 + C497 * C32937 + C498 * C15055 +
            C499 * C32950 + C500 * C15054 + C501 * C32957 + C502 * C15053) *
               C32691 +
           (C175 * C32920 + C174 * C15056 + C173 * C32937 + C172 * C15055 +
            C171 * C32950 + C170 * C15054 + C169 * C32957 + C168 * C15053) *
               C15051) *
              C32603 * C32589 * C111 +
          ((C170 * C15053 + C171 * C32957 + C172 * C15054 + C173 * C32950 +
            C174 * C15055 + C175 * C32937 + C177 * C15056 + C176 * C32920) *
               C15051 +
           (C500 * C15053 + C499 * C32957 + C498 * C15054 + C497 * C32950 +
            C496 * C15055 + C495 * C32937 +
            (C113 * C474 + C32644 * C475) * C15056 +
            (C113 * C476 + C32644 * C477) * C32920) *
               C32691) *
              C32603 * C32589 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C119 + C32644 * C126) * C15053 +
            (C113 * C127 + C32644 * C140) * C32957 + C168 * C15054 +
            C169 * C32950 + C170 * C15055 + C171 * C32937 + C172 * C15056 +
            C173 * C32920) *
               C15051 +
           (C15156 + C15157 + C15158 + C15159 + C15160 + C15161 + C15162 +
            C15163) *
               C32691) *
              C32603 * C239 -
          ((C15164 + C15165 + C15166 + C15167 + C15168 + C15169 + C15170 +
            C15171) *
               C32691 +
           (C15163 + C15162 + C15161 + C15160 + C15159 + C15158 + C15157 +
            C15156) *
               C15051) *
              C32603 * C240 +
          ((C15171 + C15170 + C15169 + C15168 + C15167 + C15166 + C15165 +
            C15164) *
               C15051 +
           (C1025 * C15053 + C1024 * C32957 + C1023 * C15054 + C1022 * C32950 +
            C1021 * C15055 + C1020 * C32937 +
            (C113 * C1332 + C32644 * C1333) * C15056 +
            (C113 * C1334 + C32644 * C1335) * C32920) *
               C32691) *
              C32603 * C241) *
         C32577) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C119 + C32644 * C126) * C15779 +
            (C113 * C127 + C32644 * C140) * C15773 + C168 * C15780 +
            C169 * C32552) *
               C32958 +
           (C1016 * C15779 + C1017 * C15773 + C502 * C15780 + C501 * C32552) *
               C32954 +
           (C1018 * C15779 + C1019 * C15773 + C848 * C15780 + C849 * C32552) *
               C32944 +
           (C1025 * C15779 + C1024 * C15773 + C1023 * C15780 + C1022 * C32552) *
               C32926) *
              C32603 * C32589 * C110 -
          ((C1020 * C32552 + C1021 * C15780 + C1022 * C15773 + C1023 * C15779) *
               C32926 +
           (C851 * C32552 + C850 * C15780 + C849 * C15773 + C848 * C15779) *
               C32944 +
           (C499 * C32552 + C500 * C15780 + C501 * C15773 + C502 * C15779) *
               C32954 +
           (C171 * C32552 + C170 * C15780 + C169 * C15773 + C168 * C15779) *
               C32958) *
              C32603 * C32589 * C111 +
          ((C170 * C15779 + C171 * C15773 + C172 * C15780 + C173 * C32552) *
               C32958 +
           (C500 * C15779 + C499 * C15773 + C498 * C15780 + C497 * C32552) *
               C32954 +
           (C850 * C15779 + C851 * C15773 + C853 * C15780 + C852 * C32552) *
               C32944 +
           (C1021 * C15779 + C1020 * C15773 +
            (C113 * C1332 + C32644 * C1333) * C15780 +
            (C113 * C1334 + C32644 * C1335) * C32552) *
               C32926) *
              C32603 * C32589 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C119 + C32644 * C126) * C15779 +
            (C113 * C127 + C32644 * C140) * C15773 + C168 * C15780 +
            C169 * C32552) *
               C32958 +
           (C15880 + C15881 + C15882 + C15883) * C32954 + C15900 * C32944 +
           C15901 * C32926) *
              C32603 * C239 -
          ((C15892 + C15893 + C15894 + C15895) * C32926 +
           (C15891 + C15890 + C15889 + C15888) * C32944 +
           (C15887 + C15886 + C15885 + C15884) * C32954 +
           (C15883 + C15882 + C15881 + C15880) * C32958) *
              C32603 * C240 +
          (C15900 * C32958 + C15901 * C32954 +
           (C15895 + C15894 + C15893 + C15892) * C32944 +
           (C6291 * C15779 + C6290 * C15773 +
            (C113 * C6452 + C32644 * C6453) * C15780 +
            (C113 * C6454 + C32644 * C6455) * C32552) *
               C32926) *
              C32603 * C241) *
         C32577) /
            (p * q * std::sqrt(p + q));
    d2ee[25] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C20430 * C119 + C20428 * C126 + C20431 * C352 + C32731 * C367) *
                 C31559 +
             (C20430 * C127 + C20428 * C140 + C20431 * C366 + C32731 * C382) *
                 C32866 +
             (C20465 + C20466) * C31540 + (C20467 + C20468) * C32552) *
                C32687 +
            ((C21493 + C21494) * C31559 + (C21495 + C21496) * C32866 +
             C21858 * C31540 + C21859 * C32552) *
                C32694 +
            C28936 * C17574) *
               C32603 * C470 -
           (((C21503 + C21504) * C32552 + (C21505 + C21506) * C31540 +
             (C21507 + C21508) * C32866 + (C21509 + C21510) * C31559) *
                C17574 +
            (C21860 * C32552 + C21861 * C31540 + (C21500 + C21499) * C32866 +
             (C21498 + C21497) * C31559) *
                C32694 +
            (C21862 * C32552 + C21863 * C31540 + (C21496 + C21495) * C32866 +
             (C21494 + C21493) * C31559) *
                C32687) *
               C32603 * C471) *
              C472 +
          (((C21858 * C31559 + C21859 * C32866 + C23234 * C31540 +
             C23235 * C32552) *
                C32687 +
            (C21475 * C31559 + C21476 * C32866 + (C21312 + C21311) * C31540 +
             (C21310 + C21309) * C32552) *
                C32694 +
            ((C21506 + C21505) * C31559 + (C21504 + C21503) * C32866 +
             (C20430 * C963 + C20428 * C970 + C20431 * C1670 + C32731 * C1675) *
                 C31540 +
             (C20430 * C969 + C20428 * C981 + C20431 * C1676 + C32731 * C1679) *
                 C32552) *
                C17574) *
               C32603 * C471 -
           (((C21309 + C21310) * C32552 + (C21311 + C21312) * C31540 +
             C21860 * C32866 + C21861 * C31559) *
                C17574 +
            (C23722 * C32552 + C23723 * C31540 + C21862 * C32866 +
             C21863 * C31559) *
                C32694 +
            ((C20472 + C20471) * C32552 + (C20470 + C20469) * C31540 +
             (C20468 + C20467) * C32866 + (C20466 + C20465) * C31559) *
                C32687) *
               C32603 * C470) *
              C473)) /
        (p * q * std::sqrt(p + q));
    d2ee[26] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C20430 * C119 + C20428 * C126 + C20431 * C352 + C32731 * C367) *
                 C31559 +
             (C20430 * C127 + C20428 * C140 + C20431 * C366 + C32731 * C382) *
                 C32866 +
             (C20465 + C20466) * C31540 + (C20467 + C20468) * C32552) *
                C32687 +
            ((C21493 + C21494) * C31559 + (C21495 + C21496) * C32866 +
             C21858 * C31540 + C21859 * C32552) *
                C32694 +
            C28936 * C17574) *
               C584 -
           (((C22074 + C22075) * C32552 + (C22076 + C22077) * C31540 +
             (C22292 + C22293) * C32866 + (C22294 + C22295) * C31559) *
                C17574 +
            ((C22078 + C22079) * C32552 + (C22080 + C22081) * C31540 +
             (C22296 + C22297) * C32866 + (C22298 + C22299) * C31559) *
                C32694 +
            ((C21009 + C21010) * C32552 + (C21011 + C21012) * C31540 +
             (C20431 * C369 + C32731 * C383 + C20430 * C366 + C20428 * C382) *
                 C32866 +
             (C20431 * C353 + C32731 * C368 + C20430 * C352 + C20428 * C367) *
                 C31559) *
                C32687) *
               C585) *
              C470 +
          ((((C22299 + C22298) * C31559 + (C22297 + C22296) * C32866 +
             (C22081 + C22080) * C31540 + (C22079 + C22078) * C32552) *
                C32687 +
            ((C22295 + C22294) * C31559 + (C22293 + C22292) * C32866 +
             (C22077 + C22076) * C31540 + (C22075 + C22074) * C32552) *
                C32694 +
            ((C27881 + C27880) * C31559 + (C27879 + C27878) * C32866 +
             (C20430 * C1669 + C20428 * C1673 + C20431 * C7211 +
              C32731 * C7212) *
                 C31540 +
             (C20430 * C1674 + C20428 * C1678 + C20431 * C7213 +
              C32731 * C7214) *
                 C32552) *
                C17574) *
               C585 -
           (((C21503 + C21504) * C32552 + (C21505 + C21506) * C31540 +
             (C21507 + C21508) * C32866 + (C21509 + C21510) * C31559) *
                C17574 +
            (C21860 * C32552 + C21861 * C31540 + (C21500 + C21499) * C32866 +
             (C21498 + C21497) * C31559) *
                C32694 +
            (C21862 * C32552 + C21863 * C31540 + (C21496 + C21495) * C32866 +
             (C21494 + C21493) * C31559) *
                C32687) *
               C584) *
              C471) *
         C32577) /
        (p * q * std::sqrt(p + q));
    d2ee[27] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C20430 * C119 + C20428 * C126 + C20431 * C352 + C32731 * C367) *
                C31559 +
            (C20430 * C127 + C20428 * C140 + C20431 * C366 + C32731 * C382) *
                C32866 +
            (C20465 + C20466) * C31540 + (C20467 + C20468) * C32552) *
               C32687 +
           ((C21493 + C21494) * C31559 + (C21495 + C21496) * C32866 +
            C21858 * C31540 + C21859 * C32552) *
               C32694 +
           C28936 * C17574) *
              C32603 * C239 -
          (((C21503 + C21504) * C32552 + (C21505 + C21506) * C31540 +
            (C21507 + C21508) * C32866 + (C21509 + C21510) * C31559) *
               C17574 +
           (C21860 * C32552 + C21861 * C31540 + (C21500 + C21499) * C32866 +
            (C21498 + C21497) * C31559) *
               C32694 +
           (C21862 * C32552 + C21863 * C31540 + (C21496 + C21495) * C32866 +
            (C21494 + C21493) * C31559) *
               C32687) *
              C32603 * C240 +
          (C28936 * C32687 +
           (C27364 * C31559 + C27365 * C32866 + (C21506 + C21505) * C31540 +
            (C21504 + C21503) * C32552) *
               C32694 +
           ((C27380 + C27379) * C31559 + (C27378 + C27377) * C32866 +
            (C20430 * C967 + C20428 * C977 + C20431 * C6552 + C32731 * C6553) *
                C31540 +
            (C20430 * C978 + C20428 * C985 + C20431 * C6554 + C32731 * C6555) *
                C32552) *
               C17574) *
              C32603 * C241) *
         C32577) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C20430 * C119 + C20428 * C126 + C20431 * C352 + C32731 * C367) *
                C31559 +
            (C20430 * C127 + C20428 * C140 + C20431 * C366 + C32731 * C382) *
                C32866 +
            (C20465 + C20466) * C31540 + (C20467 + C20468) * C32552) *
               C32687 +
           ((C21493 + C21494) * C31559 + (C21495 + C21496) * C32866 +
            C21858 * C31540 + C21859 * C32552) *
               C32694 +
           (C21511 * C31559 + C21512 * C32866 + C21475 * C31540 +
            C21476 * C32552) *
               C17574) *
              C32603 * C32589 * C110 -
          (((C21309 + C21310) * C32552 + (C21311 + C21312) * C31540 +
            C21860 * C32866 + C21861 * C31559) *
               C17574 +
           (C23722 * C32552 + C23723 * C31540 + C21862 * C32866 +
            C21863 * C31559) *
               C32694 +
           ((C20472 + C20471) * C32552 + (C20470 + C20469) * C31540 +
            (C20468 + C20467) * C32866 + (C20466 + C20465) * C31559) *
               C32687) *
              C32603 * C32589 * C111 +
          ((C20481 * C31559 + C20482 * C32866 + C20483 * C31540 +
            C20484 * C32552) *
               C32687 +
           (C23234 * C31559 + C23235 * C32866 + (C20838 + C20837) * C31540 +
            (C20836 + C20835) * C32552) *
               C32694 +
           ((C21312 + C21311) * C31559 + (C21310 + C21309) * C32866 +
            (C20430 * C251 + C20428 * C269 + C20431 * C1494 + C32731 * C1495) *
                C31540 +
            (C20430 * C270 + C20428 * C281 + C20431 * C1496 + C32731 * C1497) *
                C32552) *
               C17574) *
              C32603 * C32589 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C20430 * C119 + C20428 * C126 + C20431 * C352 + C32731 * C367) *
                C31559 +
            (C20430 * C127 + C20428 * C140 + C20431 * C366 + C32731 * C382) *
                C32866 +
            (C20465 + C20466) * C31540 + (C20467 + C20468) * C32552) *
               C32687 +
           ((C21493 + C21494) * C31559 + (C21495 + C21496) * C32866 +
            C21858 * C31540 + C21859 * C32552) *
               C32694 +
           C28936 * C17574) *
              C345 -
          (((C22074 + C22075) * C32552 + (C22076 + C22077) * C31540 +
            (C22292 + C22293) * C32866 + (C22294 + C22295) * C31559) *
               C17574 +
           ((C22078 + C22079) * C32552 + (C22080 + C22081) * C31540 +
            (C22296 + C22297) * C32866 + (C22298 + C22299) * C31559) *
               C32694 +
           ((C21009 + C21010) * C32552 + (C21011 + C21012) * C31540 +
            (C20431 * C369 + C32731 * C383 + C20430 * C366 + C20428 * C382) *
                C32866 +
            (C20431 * C353 + C32731 * C368 + C20430 * C352 + C20428 * C367) *
                C31559) *
               C32687) *
              C346 +
          (((C20430 * C353 + C20428 * C368 + C20431 * C2100 + C32731 * C2109) *
                C31559 +
            (C20430 * C369 + C20428 * C383 + C20431 * C2108 + C32731 * C2118) *
                C32866 +
            (C20430 * C354 + C20428 * C370 + C20431 * C2099 + C32731 * C2107) *
                C31540 +
            (C20430 * C371 + C20428 * C384 + C20431 * C2106 + C32731 * C2117) *
                C32552) *
               C32687 +
           ((C20430 * C1153 + C20428 * C1165 + C20431 * C2640 +
             C32731 * C2643) *
                C31559 +
            (C20430 * C1166 + C20428 * C1180 + C20431 * C2644 +
             C32731 * C2649) *
                C32866 +
            (C20430 * C1154 + C20428 * C1167 + C20431 * C2641 +
             C32731 * C2645) *
                C31540 +
            (C20430 * C1168 + C20428 * C1181 + C20431 * C2646 +
             C32731 * C2650) *
                C32552) *
               C32694 +
           ((C20430 * C1156 + C20428 * C1171 + C20431 * C7053 +
             C32731 * C7057) *
                C31559 +
            (C20430 * C1172 + C20428 * C1183 + C20431 * C7056 +
             C32731 * C7062) *
                C32866 +
            (C20430 * C1157 + C20428 * C1173 + C20431 * C7379 +
             C32731 * C7380) *
                C31540 +
            (C20430 * C1174 + C20428 * C1184 + C20431 * C7381 +
             C32731 * C7382) *
                C32552) *
               C17574) *
              C347) *
         C32589 * C32577) /
            (p * q * std::sqrt(p + q));
    d2ee[28] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C20430 * C119 + C20428 * C126 + C20431 * C352 + C32731 * C367) *
                 C31559 +
             (C20430 * C127 + C20428 * C140 + C20431 * C366 + C32731 * C382) *
                 C32866 +
             (C20465 + C20466) * C31540 + (C20467 + C20468) * C32552) *
                C32687 +
            ((C21493 + C21494) * C31559 + (C21495 + C21496) * C32866 +
             C21858 * C31540 + C21859 * C32552) *
                C32694 +
            C28936 * C17574) *
               C584 -
           (((C22074 + C22075) * C32552 + (C22076 + C22077) * C31540 +
             (C22292 + C22293) * C32866 + (C22294 + C22295) * C31559) *
                C17574 +
            ((C22078 + C22079) * C32552 + (C22080 + C22081) * C31540 +
             (C22296 + C22297) * C32866 + (C22298 + C22299) * C31559) *
                C32694 +
            ((C21009 + C21010) * C32552 + (C21011 + C21012) * C31540 +
             (C20431 * C369 + C32731 * C383 + C20430 * C366 + C20428 * C382) *
                 C32866 +
             (C20431 * C353 + C32731 * C368 + C20430 * C352 + C20428 * C367) *
                 C31559) *
                C32687) *
               C585) *
              C32589 * C472 +
          ((((C21012 + C21011) * C31559 + (C21010 + C21009) * C32866 +
             (C21008 + C21007) * C31540 + (C21006 + C21005) * C32552) *
                C32687 +
            ((C22081 + C22080) * C31559 + (C22079 + C22078) * C32866 +
             (C23929 + C23928) * C31540 + (C23927 + C23926) * C32552) *
                C32694 +
            ((C22077 + C22076) * C31559 + (C22075 + C22074) * C32866 +
             (C20430 * C1150 + C20428 * C1160 + C20431 * C1158 +
              C32731 * C1175) *
                 C31540 +
             (C20430 * C1159 + C20428 * C1177 + C20431 * C1176 +
              C32731 * C1185) *
                 C32552) *
                C17574) *
               C585 -
           (((C21309 + C21310) * C32552 + (C21311 + C21312) * C31540 +
             C21860 * C32866 + C21861 * C31559) *
                C17574 +
            (C23722 * C32552 + C23723 * C31540 + C21862 * C32866 +
             C21863 * C31559) *
                C32694 +
            ((C20472 + C20471) * C32552 + (C20470 + C20469) * C31540 +
             (C20468 + C20467) * C32866 + (C20466 + C20465) * C31559) *
                C32687) *
               C584) *
              C32589 * C473)) /
        (p * q * std::sqrt(p + q));
    d2ee[29] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C20430 * C119 + C20428 * C126 + C20431 * C352 + C32731 * C367) *
                C31559 +
            (C20430 * C127 + C20428 * C140 + C20431 * C366 + C32731 * C382) *
                C32866 +
            (C20465 + C20466) * C31540 + (C20467 + C20468) * C32552) *
               C32687 +
           ((C21493 + C21494) * C31559 + (C21495 + C21496) * C32866 +
            C21858 * C31540 + C21859 * C32552) *
               C32694 +
           (C21511 * C31559 + C21512 * C32866 + C21475 * C31540 +
            C21476 * C32552) *
               C17574) *
              C32603 * C32589 * C110 -
          (((C21309 + C21310) * C32552 + (C21311 + C21312) * C31540 +
            C21860 * C32866 + C21861 * C31559) *
               C17574 +
           (C23722 * C32552 + C23723 * C31540 + C21862 * C32866 +
            C21863 * C31559) *
               C32694 +
           ((C20472 + C20471) * C32552 + (C20470 + C20469) * C31540 +
            (C20468 + C20467) * C32866 + (C20466 + C20465) * C31559) *
               C32687) *
              C32603 * C32589 * C111 +
          ((C20481 * C31559 + C20482 * C32866 + C20483 * C31540 +
            C20484 * C32552) *
               C32687 +
           (C23234 * C31559 + C23235 * C32866 + (C20838 + C20837) * C31540 +
            (C20836 + C20835) * C32552) *
               C32694 +
           ((C21312 + C21311) * C31559 + (C21310 + C21309) * C32866 +
            (C20430 * C251 + C20428 * C269 + C20431 * C1494 + C32731 * C1495) *
                C31540 +
            (C20430 * C270 + C20428 * C281 + C20431 * C1496 + C32731 * C1497) *
                C32552) *
               C17574) *
              C32603 * C32589 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C20430 * C119 + C20428 * C126 + C20431 * C352 + C32731 * C367) *
                C31559 +
            (C20430 * C127 + C20428 * C140 + C20431 * C366 + C32731 * C382) *
                C32866 +
            (C20465 + C20466) * C31540 + (C20467 + C20468) * C32552) *
               C32687 +
           ((C21493 + C21494) * C31559 + (C21495 + C21496) * C32866 +
            C21858 * C31540 + C21859 * C32552) *
               C32694 +
           C28936 * C17574) *
              C32603 * C239 -
          (((C21503 + C21504) * C32552 + (C21505 + C21506) * C31540 +
            (C21507 + C21508) * C32866 + (C21509 + C21510) * C31559) *
               C17574 +
           (C21860 * C32552 + C21861 * C31540 + (C21500 + C21499) * C32866 +
            (C21498 + C21497) * C31559) *
               C32694 +
           (C21862 * C32552 + C21863 * C31540 + (C21496 + C21495) * C32866 +
            (C21494 + C21493) * C31559) *
               C32687) *
              C32603 * C240 +
          (C28936 * C32687 +
           (C27364 * C31559 + C27365 * C32866 + (C21506 + C21505) * C31540 +
            (C21504 + C21503) * C32552) *
               C32694 +
           ((C27380 + C27379) * C31559 + (C27378 + C27377) * C32866 +
            (C20430 * C967 + C20428 * C977 + C20431 * C6552 + C32731 * C6553) *
                C31540 +
            (C20430 * C978 + C20428 * C985 + C20431 * C6554 + C32731 * C6555) *
                C32552) *
               C17574) *
              C32603 * C241) *
         C32577) /
            (p * q * std::sqrt(p + q));
    d2ee[30] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                 (((((C31694 * C119 + C32727 * C126 + C31686 * C352 +
                      C32734 * C367 + C31700 * C353 + C24235 * C368) *
                         C6200 +
                     (C31694 * C127 + C32727 * C140 + C31686 * C366 +
                      C32734 * C382 + C31700 * C369 + C24235 * C383) *
                         C32542) *
                        C32687 +
                    ((C25356 + C25357 + C25358) * C6200 +
                     (C25359 + C25360 + C25361) * C32542) *
                        C32694 +
                    C30929 * C17574) *
                       C32603 * C470 -
                   (((C30921 + C30922 + C30923) * C32542 +
                     (C30924 + C30925 + C30926) * C6200) *
                        C17574 +
                    ((C25368 + C25369 + C25370) * C32542 +
                     (C25371 + C25372 + C25373) * C6200) *
                        C32694 +
                    ((C25361 + C25360 + C25359) * C32542 +
                     (C25358 + C25357 + C25356) * C6200) *
                        C32687) *
                       C32603 * C471) *
                      C472 +
                  (((C25718 * C6200 + C25719 * C32542) * C32687 +
                    ((C25367 + C25366 + C25365) * C6200 +
                     (C25364 + C25363 + C25362) * C32542) *
                        C32694 +
                    ((C31694 * C964 + C32727 * C972 + C31686 * C1669 +
                      C32734 * C1673 + C31700 * C7211 + C24235 * C7212) *
                         C6200 +
                     (C31694 * C971 + C32727 * C982 + C31686 * C1674 +
                      C32734 * C1678 + C31700 * C7213 + C24235 * C7214) *
                         C32542) *
                        C17574) *
                       C32603 * C471 -
                   (((C25362 + C25363 + C25364) * C32542 +
                     (C25365 + C25366 + C25367) * C6200) *
                        C17574 +
                    (C25720 * C32542 + C25721 * C6200) * C32694 +
                    ((C24281 + C24280 + C24279) * C32542 +
                     (C24278 + C24277 + C24276) * C6200) *
                        C32687) *
                       C32603 * C470) *
                      C473)) /
                (p * q * std::sqrt(p + q));
    d2ee[31] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                 (((((C31694 * C119 + C32727 * C126 + C31686 * C352 +
                      C32734 * C367 + C31700 * C353 + C24235 * C368) *
                         C6200 +
                     (C31694 * C127 + C32727 * C140 + C31686 * C366 +
                      C32734 * C382 + C31700 * C369 + C24235 * C383) *
                         C32542) *
                        C32687 +
                    ((C25356 + C25357 + C25358) * C6200 +
                     (C25359 + C25360 + C25361) * C32542) *
                        C32694 +
                    C30929 * C17574) *
                       C584 -
                   (((C31490 + C31491 + C31492) * C32542 +
                     (C31493 + C31494 + C31495) * C6200) *
                        C17574 +
                    ((C26140 + C26141 + C26142) * C32542 +
                     (C26143 + C26144 + C26145) * C6200) *
                        C32694 +
                    ((C31700 * C2108 + C24235 * C2118 + C31686 * C369 +
                      C32734 * C383 + C31694 * C366 + C32727 * C382) *
                         C32542 +
                     (C31700 * C2100 + C24235 * C2109 + C31686 * C353 +
                      C32734 * C368 + C31694 * C352 + C32727 * C367) *
                         C6200) *
                        C32687) *
                       C585) *
                      C470 +
                  ((((C26145 + C26144 + C26143) * C6200 +
                     (C26142 + C26141 + C26140) * C32542) *
                        C32687 +
                    ((C31495 + C31494 + C31493) * C6200 +
                     (C31492 + C31491 + C31490) * C32542) *
                        C32694 +
                    ((C31694 * C1668 + C32727 * C1671 + C31686 * C6359 +
                      C32734 * C6363 + C31700 * C7529 + C24235 * C7530) *
                         C6200 +
                     (C31694 * C1672 + C32727 * C1677 + C31686 * C6364 +
                      C32734 * C6368 + C31700 * C7531 + C24235 * C7532) *
                         C32542) *
                        C17574) *
                       C585 -
                   (((C30921 + C30922 + C30923) * C32542 +
                     (C30924 + C30925 + C30926) * C6200) *
                        C17574 +
                    ((C25368 + C25369 + C25370) * C32542 +
                     (C25371 + C25372 + C25373) * C6200) *
                        C32694 +
                    ((C25361 + C25360 + C25359) * C32542 +
                     (C25358 + C25357 + C25356) * C6200) *
                        C32687) *
                       C584) *
                      C471) *
                 C32577) /
                (p * q * std::sqrt(p + q));
    d2ee[32] += (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C31694 * C119 + C32727 * C126 + C31686 * C352 +
                     C32734 * C367 + C31700 * C353 + C24235 * C368) *
                        C6200 +
                    (C31694 * C127 + C32727 * C140 + C31686 * C366 +
                     C32734 * C382 + C31700 * C369 + C24235 * C383) *
                        C32542) *
                       C32687 +
                   ((C25356 + C25357 + C25358) * C6200 +
                    (C25359 + C25360 + C25361) * C32542) *
                       C32694 +
                   C30929 * C17574) *
                      C32603 * C239 -
                  (((C30921 + C30922 + C30923) * C32542 +
                    (C30924 + C30925 + C30926) * C6200) *
                       C17574 +
                   ((C25368 + C25369 + C25370) * C32542 +
                    (C25371 + C25372 + C25373) * C6200) *
                       C32694 +
                   ((C25361 + C25360 + C25359) * C32542 +
                    (C25358 + C25357 + C25356) * C6200) *
                       C32687) *
                      C32603 * C240 +
                  (C30929 * C32687 +
                   ((C30926 + C30925 + C30924) * C6200 +
                    (C30923 + C30922 + C30921) * C32542) *
                       C32694 +
                   ((C31694 * C966 + C32727 * C975 + C31686 * C6358 +
                     C32734 * C6362 + C31700 * C6360 + C24235 * C6365) *
                        C6200 +
                    (C31694 * C976 + C32727 * C984 + C31686 * C6361 +
                     C32734 * C6367 + C31700 * C6366 + C24235 * C6369) *
                        C32542) *
                       C17574) *
                      C32603 * C241) *
                 C32577) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C31694 * C119 + C32727 * C126 + C31686 * C352 +
                     C32734 * C367 + C31700 * C353 + C24235 * C368) *
                        C6200 +
                    (C31694 * C127 + C32727 * C140 + C31686 * C366 +
                     C32734 * C382 + C31700 * C369 + C24235 * C383) *
                        C32542) *
                       C32687 +
                   ((C25356 + C25357 + C25358) * C6200 +
                    (C25359 + C25360 + C25361) * C32542) *
                       C32694 +
                   ((C25373 + C25372 + C25371) * C6200 +
                    (C25370 + C25369 + C25368) * C32542) *
                       C17574) *
                      C32603 * C32589 * C110 -
                  (((C25362 + C25363 + C25364) * C32542 +
                    (C25365 + C25366 + C25367) * C6200) *
                       C17574 +
                   (C25720 * C32542 + C25721 * C6200) * C32694 +
                   ((C24281 + C24280 + C24279) * C32542 +
                    (C24278 + C24277 + C24276) * C6200) *
                       C32687) *
                      C32603 * C32589 * C111 +
                  ((C24296 * C6200 + C24297 * C32542) * C32687 +
                   ((C24693 + C24692 + C24691) * C6200 +
                    (C24690 + C24689 + C24688) * C32542) *
                       C32694 +
                   ((C31694 * C250 + C32727 * C267 + C31686 * C1150 +
                     C32734 * C1160 + C31700 * C1158 + C24235 * C1175) *
                        C6200 +
                    (C31694 * C268 + C32727 * C280 + C31686 * C1159 +
                     C32734 * C1177 + C31700 * C1176 + C24235 * C1185) *
                        C32542) *
                       C17574) *
                      C32603 * C32589 * C112)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((C31694 * C119 + C32727 * C126 + C31686 * C352 +
                     C32734 * C367 + C31700 * C353 + C24235 * C368) *
                        C6200 +
                    (C31694 * C127 + C32727 * C140 + C31686 * C366 +
                     C32734 * C382 + C31700 * C369 + C24235 * C383) *
                        C32542) *
                       C32687 +
                   ((C25356 + C25357 + C25358) * C6200 +
                    (C25359 + C25360 + C25361) * C32542) *
                       C32694 +
                   C30929 * C17574) *
                      C345 -
                  (((C31700 * C7056 + C24235 * C7062 + C31686 * C1172 +
                     C32734 * C1183 + C31694 * C1163 + C32727 * C1179) *
                        C32542 +
                    (C31700 * C7053 + C24235 * C7057 + C31686 * C1156 +
                     C32734 * C1171 + C31694 * C1152 + C32727 * C1164) *
                        C6200) *
                       C17574 +
                   ((C26140 + C26141 + C26142) * C32542 +
                    (C26143 + C26144 + C26145) * C6200) *
                       C32694 +
                   ((C31700 * C2108 + C24235 * C2118 + C31686 * C369 +
                     C32734 * C383 + C31694 * C366 + C32727 * C382) *
                        C32542 +
                    (C31700 * C2100 + C24235 * C2109 + C31686 * C353 +
                     C32734 * C368 + C31694 * C352 + C32727 * C367) *
                        C6200) *
                       C32687) *
                      C346 +
                  (((C31694 * C353 + C32727 * C368 + C31686 * C2100 +
                     C32734 * C2109 + C31700 * C2101 + C24235 * C2110) *
                        C6200 +
                    (C31694 * C369 + C32727 * C383 + C31686 * C2108 +
                     C32734 * C2118 + C31700 * C2111 + C24235 * C2119) *
                        C32542) *
                       C32687 +
                   ((C31694 * C1153 + C32727 * C1165 + C31686 * C2640 +
                     C32734 * C2643 + C31700 * C7054 + C24235 * C7058) *
                        C6200 +
                    (C31694 * C1166 + C32727 * C1180 + C31686 * C2644 +
                     C32734 * C2649 + C31700 * C7059 + C24235 * C7063) *
                        C32542) *
                       C32694 +
                   ((C31694 * C1156 + C32727 * C1171 + C31686 * C7053 +
                     C32734 * C7057 + C31700 * C7055 + C24235 * C7060) *
                        C6200 +
                    (C31694 * C1172 + C32727 * C1183 + C31686 * C7056 +
                     C32734 * C7062 + C31700 * C7061 + C24235 * C7064) *
                        C32542) *
                       C17574) *
                      C347) *
                 C32589 * C32577) /
                    (p * q * std::sqrt(p + q));
    d2ee[33] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                 (((((C31694 * C119 + C32727 * C126 + C31686 * C352 +
                      C32734 * C367 + C31700 * C353 + C24235 * C368) *
                         C6200 +
                     (C31694 * C127 + C32727 * C140 + C31686 * C366 +
                      C32734 * C382 + C31700 * C369 + C24235 * C383) *
                         C32542) *
                        C32687 +
                    ((C25356 + C25357 + C25358) * C6200 +
                     (C25359 + C25360 + C25361) * C32542) *
                        C32694 +
                    C30929 * C17574) *
                       C584 -
                   (((C31700 * C7056 + C24235 * C7062 + C31686 * C1172 +
                      C32734 * C1183 + C31694 * C1163 + C32727 * C1179) *
                         C32542 +
                     (C31700 * C7053 + C24235 * C7057 + C31686 * C1156 +
                      C32734 * C1171 + C31694 * C1152 + C32727 * C1164) *
                         C6200) *
                        C17574 +
                    ((C26140 + C26141 + C26142) * C32542 +
                     (C26143 + C26144 + C26145) * C6200) *
                        C32694 +
                    ((C31700 * C2108 + C24235 * C2118 + C31686 * C369 +
                      C32734 * C383 + C31694 * C366 + C32727 * C382) *
                         C32542 +
                     (C31700 * C2100 + C24235 * C2109 + C31686 * C353 +
                      C32734 * C368 + C31694 * C352 + C32727 * C367) *
                         C6200) *
                        C32687) *
                       C585) *
                      C32589 * C472 +
                  ((((C24881 + C24880 + C24879) * C6200 +
                     (C24878 + C24877 + C24876) * C32542) *
                        C32687 +
                    ((C25933 + C25932 + C25931) * C6200 +
                     (C25930 + C25929 + C25928) * C32542) *
                        C32694 +
                    ((C31694 * C1151 + C32727 * C1162 + C31686 * C1157 +
                      C32734 * C1173 + C31700 * C7379 + C24235 * C7380) *
                         C6200 +
                     (C31694 * C1161 + C32727 * C1178 + C31686 * C1174 +
                      C32734 * C1184 + C31700 * C7381 + C24235 * C7382) *
                         C32542) *
                        C17574) *
                       C585 -
                   (((C25362 + C25363 + C25364) * C32542 +
                     (C25365 + C25366 + C25367) * C6200) *
                        C17574 +
                    (C25720 * C32542 + C25721 * C6200) * C32694 +
                    ((C24281 + C24280 + C24279) * C32542 +
                     (C24278 + C24277 + C24276) * C6200) *
                        C32687) *
                       C584) *
                      C32589 * C473)) /
                (p * q * std::sqrt(p + q));
    d2ee[34] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C31694 * C119 + C32727 * C126 + C31686 * C352 +
                     C32734 * C367 + C31700 * C353 + C24235 * C368) *
                        C6200 +
                    (C31694 * C127 + C32727 * C140 + C31686 * C366 +
                     C32734 * C382 + C31700 * C369 + C24235 * C383) *
                        C32542) *
                       C32687 +
                   ((C25356 + C25357 + C25358) * C6200 +
                    (C25359 + C25360 + C25361) * C32542) *
                       C32694 +
                   ((C25373 + C25372 + C25371) * C6200 +
                    (C25370 + C25369 + C25368) * C32542) *
                       C17574) *
                      C32603 * C32589 * C110 -
                  (((C25362 + C25363 + C25364) * C32542 +
                    (C25365 + C25366 + C25367) * C6200) *
                       C17574 +
                   (C25720 * C32542 + C25721 * C6200) * C32694 +
                   ((C24281 + C24280 + C24279) * C32542 +
                    (C24278 + C24277 + C24276) * C6200) *
                       C32687) *
                      C32603 * C32589 * C111 +
                  ((C24296 * C6200 + C24297 * C32542) * C32687 +
                   ((C24693 + C24692 + C24691) * C6200 +
                    (C24690 + C24689 + C24688) * C32542) *
                       C32694 +
                   ((C31694 * C250 + C32727 * C267 + C31686 * C1150 +
                     C32734 * C1160 + C31700 * C1158 + C24235 * C1175) *
                        C6200 +
                    (C31694 * C268 + C32727 * C280 + C31686 * C1159 +
                     C32734 * C1177 + C31700 * C1176 + C24235 * C1185) *
                        C32542) *
                       C17574) *
                      C32603 * C32589 * C112)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C31694 * C119 + C32727 * C126 + C31686 * C352 +
                     C32734 * C367 + C31700 * C353 + C24235 * C368) *
                        C6200 +
                    (C31694 * C127 + C32727 * C140 + C31686 * C366 +
                     C32734 * C382 + C31700 * C369 + C24235 * C383) *
                        C32542) *
                       C32687 +
                   ((C25356 + C25357 + C25358) * C6200 +
                    (C25359 + C25360 + C25361) * C32542) *
                       C32694 +
                   C30929 * C17574) *
                      C32603 * C239 -
                  (((C30921 + C30922 + C30923) * C32542 +
                    (C30924 + C30925 + C30926) * C6200) *
                       C17574 +
                   ((C25368 + C25369 + C25370) * C32542 +
                    (C25371 + C25372 + C25373) * C6200) *
                       C32694 +
                   ((C25361 + C25360 + C25359) * C32542 +
                    (C25358 + C25357 + C25356) * C6200) *
                       C32687) *
                      C32603 * C240 +
                  (C30929 * C32687 +
                   ((C30926 + C30925 + C30924) * C6200 +
                    (C30923 + C30922 + C30921) * C32542) *
                       C32694 +
                   ((C31694 * C966 + C32727 * C975 + C31686 * C6358 +
                     C32734 * C6362 + C31700 * C6360 + C24235 * C6365) *
                        C6200 +
                    (C31694 * C976 + C32727 * C984 + C31686 * C6361 +
                     C32734 * C6367 + C31700 * C6366 + C24235 * C6369) *
                        C32542) *
                       C17574) *
                      C32603 * C241) *
                 C32577) /
                    (p * q * std::sqrt(p + q));
    d2ee[35] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C20430 * C119 + C20428 * C126 + C20431 * C352 + C32731 * C367) *
                 C6200 +
             (C20430 * C127 + C20428 * C140 + C20431 * C366 + C32731 * C382) *
                 C32542) *
                C32958 +
            ((C21493 + C21494) * C6200 + (C21495 + C21496) * C32542) * C32954 +
            C27374 * C32944 + C27381 * C32926) *
               C32603 * C470 -
           (((C27377 + C27378) * C32542 + (C27379 + C27380) * C6200) * C32926 +
            ((C21507 + C21508) * C32542 + (C21509 + C21510) * C6200) * C32944 +
            ((C21500 + C21499) * C32542 + (C21498 + C21497) * C6200) * C32954 +
            ((C21496 + C21495) * C32542 + (C21494 + C21493) * C6200) * C32958) *
               C32603 * C471) *
              C472 +
          (((C21858 * C6200 + C21859 * C32542) * C32958 +
            (C21475 * C6200 + C21476 * C32542) * C32954 +
            ((C21506 + C21505) * C6200 + (C21504 + C21503) * C32542) * C32944 +
            ((C20430 * C967 + C20428 * C977 + C20431 * C6552 + C32731 * C6553) *
                 C6200 +
             (C20430 * C978 + C20428 * C985 + C20431 * C6554 + C32731 * C6555) *
                 C32542) *
                C32926) *
               C32603 * C471 -
           (((C21503 + C21504) * C32542 + (C21505 + C21506) * C6200) * C32926 +
            (C21860 * C32542 + C21861 * C6200) * C32944 +
            (C21862 * C32542 + C21863 * C6200) * C32954 +
            ((C20468 + C20467) * C32542 + (C20466 + C20465) * C6200) * C32958) *
               C32603 * C470) *
              C473)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C20430 * C119 + C20428 * C126 + C20431 * C352 + C32731 * C367) *
                 C5424 +
             (C20430 * C127 + C20428 * C140 + C20431 * C366 + C32731 * C382) *
                 C32948 +
             (C20465 + C20466) * C5425 + (C20467 + C20468) * C32935 +
             C20481 * C5426 + C20482 * C32905) *
                C15051 +
            ((C21493 + C21494) * C5424 + (C21495 + C21496) * C32948 +
             C21858 * C5425 + C21859 * C32935 + C23234 * C5426 +
             C23235 * C32905) *
                C32691) *
               C32603 * C470 -
           (((C21309 + C21310) * C32905 + (C21311 + C21312) * C5426 +
             C21860 * C32935 + C21861 * C5425 + (C21500 + C21499) * C32948 +
             (C21498 + C21497) * C5424) *
                C32691 +
            (C23722 * C32905 + C23723 * C5426 + C21862 * C32935 +
             C21863 * C5425 + (C21496 + C21495) * C32948 +
             (C21494 + C21493) * C5424) *
                C15051) *
               C32603 * C471) *
              C472 +
          (((C21858 * C5424 + C21859 * C32948 + C23234 * C5425 +
             C23235 * C32935 + (C20838 + C20837) * C5426 +
             (C20836 + C20835) * C32905) *
                C15051 +
            (C21475 * C5424 + C21476 * C32948 + (C21312 + C21311) * C5425 +
             (C21310 + C21309) * C32935 +
             (C20430 * C251 + C20428 * C269 + C20431 * C1494 + C32731 * C1495) *
                 C5426 +
             (C20430 * C270 + C20428 * C281 + C20431 * C1496 + C32731 * C1497) *
                 C32905) *
                C32691) *
               C32603 * C471 -
           (((C20835 + C20836) * C32905 + (C20837 + C20838) * C5426 +
             C23722 * C32935 + C23723 * C5425 + C21862 * C32948 +
             C21863 * C5424) *
                C32691 +
            ((C20476 + C20475) * C32905 + (C20474 + C20473) * C5426 +
             (C20472 + C20471) * C32935 + (C20470 + C20469) * C5425 +
             (C20468 + C20467) * C32948 + (C20466 + C20465) * C5424) *
                C15051) *
               C32603 * C470) *
              C473)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C22401 * C119 + C32959 * C126 + C22402 * C352 + C32956 * C367 +
              C22403 * C353 + C32947 * C368 + C22404 * C2100 + C32932 * C2109) *
                 C6200 +
             (C22401 * C127 + C32959 * C140 + C22402 * C366 + C32956 * C382 +
              C22403 * C369 + C32947 * C383 + C22404 * C2108 + C32932 * C2118) *
                 C32542) *
                C15051 +
            ((C28110 + C28111 + C28112 + C28113) * C6200 +
             (C28114 + C28115 + C28116 + C28117) * C32542) *
                C32691) *
               C32603 * C470 -
           (((C28118 + C28119 + C28120 + C28121) * C32542 +
             (C28122 + C28123 + C28124 + C28125) * C6200) *
                C32691 +
            ((C28117 + C28116 + C28115 + C28114) * C32542 +
             (C28113 + C28112 + C28111 + C28110) * C6200) *
                C15051) *
               C32603 * C471) *
              C472 +
          ((((C22803 + C22802 + C22801 + C22800) * C6200 +
             (C22799 + C22798 + C22797 + C22796) * C32542) *
                C15051 +
            ((C22401 * C249 + C32959 * C265 + C22402 * C1151 + C32956 * C1162 +
              C22403 * C1157 + C32947 * C1173 + C22404 * C7379 +
              C32932 * C7380) *
                 C6200 +
             (C22401 * C266 + C32959 * C279 + C22402 * C1161 + C32956 * C1178 +
              C22403 * C1174 + C32947 * C1184 + C22404 * C7381 +
              C32932 * C7382) *
                 C32542) *
                C32691) *
               C32603 * C471 -
           (((C22796 + C22797 + C22798 + C22799) * C32542 +
             (C22800 + C22801 + C22802 + C22803) * C6200) *
                C32691 +
            ((C22445 + C22444 + C22443 + C22442) * C32542 +
             (C22441 + C22440 + C22439 + C22438) * C6200) *
                C15051) *
               C32603 * C470) *
              C473)) /
            (p * q * std::sqrt(p + q));
    d2ee[36] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C20430 * C119 + C20428 * C126 + C20431 * C352 + C32731 * C367) *
                 C6200 +
             (C20430 * C127 + C20428 * C140 + C20431 * C366 + C32731 * C382) *
                 C32542) *
                C32958 +
            ((C21493 + C21494) * C6200 + (C21495 + C21496) * C32542) * C32954 +
            C27374 * C32944 + C27381 * C32926) *
               C584 -
           (((C27878 + C27879) * C32542 + (C27880 + C27881) * C6200) * C32926 +
            ((C22292 + C22293) * C32542 + (C22294 + C22295) * C6200) * C32944 +
            ((C22296 + C22297) * C32542 + (C22298 + C22299) * C6200) * C32954 +
            ((C20431 * C369 + C32731 * C383 + C20430 * C366 + C20428 * C382) *
                 C32542 +
             (C20431 * C353 + C32731 * C368 + C20430 * C352 + C20428 * C367) *
                 C6200) *
                C32958) *
               C585) *
              C470 +
          ((((C22299 + C22298) * C6200 + (C22297 + C22296) * C32542) * C32958 +
            ((C22295 + C22294) * C6200 + (C22293 + C22292) * C32542) * C32954 +
            ((C27881 + C27880) * C6200 + (C27879 + C27878) * C32542) * C32944 +
            ((C20430 * C6358 + C20428 * C6362 + C20431 * C6360 +
              C32731 * C6365) *
                 C6200 +
             (C20430 * C6361 + C20428 * C6367 + C20431 * C6366 +
              C32731 * C6369) *
                 C32542) *
                C32926) *
               C585 -
           (((C27377 + C27378) * C32542 + (C27379 + C27380) * C6200) * C32926 +
            ((C21507 + C21508) * C32542 + (C21509 + C21510) * C6200) * C32944 +
            ((C21500 + C21499) * C32542 + (C21498 + C21497) * C6200) * C32954 +
            ((C21496 + C21495) * C32542 + (C21494 + C21493) * C6200) * C32958) *
               C584) *
              C471) *
         C32577) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C20430 * C119 + C20428 * C126 + C20431 * C352 + C32731 * C367) *
                 C5424 +
             (C20430 * C127 + C20428 * C140 + C20431 * C366 + C32731 * C382) *
                 C32948 +
             (C20465 + C20466) * C5425 + (C20467 + C20468) * C32935 +
             C20481 * C5426 + C20482 * C32905) *
                C15051 +
            ((C21493 + C21494) * C5424 + (C21495 + C21496) * C32948 +
             C21858 * C5425 + C21859 * C32935 + C23234 * C5426 +
             C23235 * C32905) *
                C32691) *
               C584 -
           (((C23926 + C23927) * C32905 + (C23928 + C23929) * C5426 +
             (C22078 + C22079) * C32935 + (C22080 + C22081) * C5425 +
             (C22296 + C22297) * C32948 + (C22298 + C22299) * C5424) *
                C32691 +
            ((C21005 + C21006) * C32905 + (C21007 + C21008) * C5426 +
             (C21009 + C21010) * C32935 + (C21011 + C21012) * C5425 +
             (C20431 * C369 + C32731 * C383 + C20430 * C366 + C20428 * C382) *
                 C32948 +
             (C20431 * C353 + C32731 * C368 + C20430 * C352 + C20428 * C367) *
                 C5424) *
                C15051) *
               C585) *
              C470 +
          ((((C22299 + C22298) * C5424 + (C22297 + C22296) * C32948 +
             (C22081 + C22080) * C5425 + (C22079 + C22078) * C32935 +
             (C23929 + C23928) * C5426 + (C23927 + C23926) * C32905) *
                C15051 +
            ((C22295 + C22294) * C5424 + (C22293 + C22292) * C32948 +
             (C22077 + C22076) * C5425 + (C22075 + C22074) * C32935 +
             (C20430 * C1150 + C20428 * C1160 + C20431 * C1158 +
              C32731 * C1175) *
                 C5426 +
             (C20430 * C1159 + C20428 * C1177 + C20431 * C1176 +
              C32731 * C1185) *
                 C32905) *
                C32691) *
               C585 -
           (((C21309 + C21310) * C32905 + (C21311 + C21312) * C5426 +
             C21860 * C32935 + C21861 * C5425 + (C21500 + C21499) * C32948 +
             (C21498 + C21497) * C5424) *
                C32691 +
            (C23722 * C32905 + C23723 * C5426 + C21862 * C32935 +
             C21863 * C5425 + (C21496 + C21495) * C32948 +
             (C21494 + C21493) * C5424) *
                C15051) *
               C584) *
              C471) *
         C32577) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C22401 * C119 + C32959 * C126 + C22402 * C352 + C32956 * C367 +
              C22403 * C353 + C32947 * C368 + C22404 * C2100 + C32932 * C2109) *
                 C6200 +
             (C22401 * C127 + C32959 * C140 + C22402 * C366 + C32956 * C382 +
              C22403 * C369 + C32947 * C383 + C22404 * C2108 + C32932 * C2118) *
                 C32542) *
                C15051 +
            ((C28110 + C28111 + C28112 + C28113) * C6200 +
             (C28114 + C28115 + C28116 + C28117) * C32542) *
                C32691) *
               C584 -
           (((C28630 + C28631 + C28632 + C28633) * C32542 +
             (C28634 + C28635 + C28636 + C28637) * C6200) *
                C32691 +
            ((C22404 * C2111 + C32932 * C2119 + C22403 * C2108 +
              C32947 * C2118 + C22402 * C369 + C32956 * C383 + C22401 * C366 +
              C32959 * C382) *
                 C32542 +
             (C22404 * C2101 + C32932 * C2110 + C22403 * C2100 +
              C32947 * C2109 + C22402 * C353 + C32956 * C368 + C22401 * C352 +
              C32959 * C367) *
                 C6200) *
                C15051) *
               C585) *
              C470 +
          ((((C28637 + C28636 + C28635 + C28634) * C6200 +
             (C28633 + C28632 + C28631 + C28630) * C32542) *
                C15051 +
            ((C22401 * C1152 + C32959 * C1164 + C22402 * C1156 +
              C32956 * C1171 + C22403 * C7053 + C32947 * C7057 +
              C22404 * C7055 + C32932 * C7060) *
                 C6200 +
             (C22401 * C1163 + C32959 * C1179 + C22402 * C1172 +
              C32956 * C1183 + C22403 * C7056 + C32947 * C7062 +
              C22404 * C7061 + C32932 * C7064) *
                 C32542) *
                C32691) *
               C585 -
           (((C28118 + C28119 + C28120 + C28121) * C32542 +
             (C28122 + C28123 + C28124 + C28125) * C6200) *
                C32691 +
            ((C28117 + C28116 + C28115 + C28114) * C32542 +
             (C28113 + C28112 + C28111 + C28110) * C6200) *
                C15051) *
               C584) *
              C471) *
         C32577) /
            (p * q * std::sqrt(p + q));
    d2ee[37] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C20430 * C119 + C20428 * C126 + C20431 * C352 +
                 C32731 * C367) *
                    C5424 +
                (C20430 * C127 + C20428 * C140 + C20431 * C366 +
                 C32731 * C382) *
                    C32948 +
                (C20465 + C20466) * C5425 + (C20467 + C20468) * C32935 +
                C20481 * C5426 + C20482 * C32905) *
                   C15051 +
               ((C21493 + C21494) * C5424 + (C21495 + C21496) * C32948 +
                C21858 * C5425 + C21859 * C32935 + C23234 * C5426 +
                C23235 * C32905) *
                   C32691) *
                  C32603 * C32589 * C110 -
              (((C20835 + C20836) * C32905 + (C20837 + C20838) * C5426 +
                C23722 * C32935 + C23723 * C5425 + C21862 * C32948 +
                C21863 * C5424) *
                   C32691 +
               ((C20476 + C20475) * C32905 + (C20474 + C20473) * C5426 +
                (C20472 + C20471) * C32935 + (C20470 + C20469) * C5425 +
                (C20468 + C20467) * C32948 + (C20466 + C20465) * C5424) *
                   C15051) *
                  C32603 * C32589 * C111 +
              ((C20481 * C5424 + C20482 * C32948 + C20483 * C5425 +
                C20484 * C32935 + (C20480 + C20479) * C5426 +
                (C20478 + C20477) * C32905) *
                   C15051 +
               (C23234 * C5424 + C23235 * C32948 + (C20838 + C20837) * C5425 +
                (C20836 + C20835) * C32935 +
                (C20430 * C243 + C20428 * C254 + C20431 * C700 +
                 C32731 * C709) *
                    C5426 +
                (C20430 * C253 + C20428 * C273 + C20431 * C710 +
                 C32731 * C715) *
                    C32905) *
                   C32691) *
                  C32603 * C32589 * C112) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C20430 * C119 + C20428 * C126 + C20431 * C352 +
                 C32731 * C367) *
                    C5424 +
                (C20430 * C127 + C20428 * C140 + C20431 * C366 +
                 C32731 * C382) *
                    C32948 +
                (C20465 + C20466) * C5425 + (C20467 + C20468) * C32935 +
                C20481 * C5426 + C20482 * C32905) *
                   C15051 +
               ((C21493 + C21494) * C5424 + (C21495 + C21496) * C32948 +
                C21858 * C5425 + C21859 * C32935 + C23234 * C5426 +
                C23235 * C32905) *
                   C32691) *
                  C32603 * C239 -
              (((C21309 + C21310) * C32905 + (C21311 + C21312) * C5426 +
                C21860 * C32935 + C21861 * C5425 + (C21500 + C21499) * C32948 +
                (C21498 + C21497) * C5424) *
                   C32691 +
               (C23722 * C32905 + C23723 * C5426 + C21862 * C32935 +
                C21863 * C5425 + (C21496 + C21495) * C32948 +
                (C21494 + C21493) * C5424) *
                   C15051) *
                  C32603 * C240 +
              ((C21511 * C5424 + C21512 * C32948 + C21475 * C5425 +
                C21476 * C32935 + (C21312 + C21311) * C5426 +
                (C21310 + C21309) * C32905) *
                   C15051 +
               ((C21510 + C21509) * C5424 + (C21508 + C21507) * C32948 +
                (C21506 + C21505) * C5425 + (C21504 + C21503) * C32935 +
                (C20430 * C963 + C20428 * C970 + C20431 * C1670 +
                 C32731 * C1675) *
                    C5426 +
                (C20430 * C969 + C20428 * C981 + C20431 * C1676 +
                 C32731 * C1679) *
                    C32905) *
                   C32691) *
                  C32603 * C241) *
             C32577) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C20430 * C119 + C20428 * C126 + C20431 * C352 + C32731 * C367) *
                C5424 +
            (C20430 * C127 + C20428 * C140 + C20431 * C366 + C32731 * C382) *
                C32948 +
            (C20465 + C20466) * C5425 + (C20467 + C20468) * C32935 +
            C20481 * C5426 + C20482 * C32905) *
               C15051 +
           ((C21493 + C21494) * C5424 + (C21495 + C21496) * C32948 +
            C21858 * C5425 + C21859 * C32935 + C23234 * C5426 +
            C23235 * C32905) *
               C32691) *
              C345 -
          (((C23926 + C23927) * C32905 + (C23928 + C23929) * C5426 +
            (C22078 + C22079) * C32935 + (C22080 + C22081) * C5425 +
            (C22296 + C22297) * C32948 + (C22298 + C22299) * C5424) *
               C32691 +
           ((C21005 + C21006) * C32905 + (C21007 + C21008) * C5426 +
            (C21009 + C21010) * C32935 + (C21011 + C21012) * C5425 +
            (C20431 * C369 + C32731 * C383 + C20430 * C366 + C20428 * C382) *
                C32948 +
            (C20431 * C353 + C32731 * C368 + C20430 * C352 + C20428 * C367) *
                C5424) *
               C15051) *
              C346 +
          (((C20430 * C353 + C20428 * C368 + C20431 * C2100 + C32731 * C2109) *
                C5424 +
            (C20430 * C369 + C20428 * C383 + C20431 * C2108 + C32731 * C2118) *
                C32948 +
            (C20430 * C354 + C20428 * C370 + C20431 * C2099 + C32731 * C2107) *
                C5425 +
            (C20430 * C371 + C20428 * C384 + C20431 * C2106 + C32731 * C2117) *
                C32935 +
            (C20430 * C355 + C20428 * C372 + C20431 * C2098 + C32731 * C2105) *
                C5426 +
            (C20430 * C373 + C20428 * C385 + C20431 * C2104 + C32731 * C2116) *
                C32905) *
               C15051 +
           ((C20430 * C1153 + C20428 * C1165 + C20431 * C2640 +
             C32731 * C2643) *
                C5424 +
            (C20430 * C1166 + C20428 * C1180 + C20431 * C2644 +
             C32731 * C2649) *
                C32948 +
            (C20430 * C1154 + C20428 * C1167 + C20431 * C2641 +
             C32731 * C2645) *
                C5425 +
            (C20430 * C1168 + C20428 * C1181 + C20431 * C2646 +
             C32731 * C2650) *
                C32935 +
            (C20430 * C1155 + C20428 * C1169 + C20431 * C2642 +
             C32731 * C2647) *
                C5426 +
            (C20430 * C1170 + C20428 * C1182 + C20431 * C2648 +
             C32731 * C2651) *
                C32905) *
               C32691) *
              C347) *
         C32589 * C32577) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C20430 * C119 + C20428 * C126 + C20431 * C352 + C32731 * C367) *
                C6200 +
            (C20430 * C127 + C20428 * C140 + C20431 * C366 + C32731 * C382) *
                C32542) *
               C32958 +
           ((C21493 + C21494) * C6200 + (C21495 + C21496) * C32542) * C32954 +
           (C21511 * C6200 + C21512 * C32542) * C32944 +
           ((C21510 + C21509) * C6200 + (C21508 + C21507) * C32542) * C32926) *
              C32603 * C32589 * C110 -
          (((C21503 + C21504) * C32542 + (C21505 + C21506) * C6200) * C32926 +
           (C21860 * C32542 + C21861 * C6200) * C32944 +
           (C21862 * C32542 + C21863 * C6200) * C32954 +
           ((C20468 + C20467) * C32542 + (C20466 + C20465) * C6200) * C32958) *
              C32603 * C32589 * C111 +
          ((C20481 * C6200 + C20482 * C32542) * C32958 +
           (C23234 * C6200 + C23235 * C32542) * C32954 +
           ((C21312 + C21311) * C6200 + (C21310 + C21309) * C32542) * C32944 +
           ((C20430 * C963 + C20428 * C970 + C20431 * C1670 + C32731 * C1675) *
                C6200 +
            (C20430 * C969 + C20428 * C981 + C20431 * C1676 + C32731 * C1679) *
                C32542) *
               C32926) *
              C32603 * C32589 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C20430 * C119 + C20428 * C126 + C20431 * C352 + C32731 * C367) *
                C6200 +
            (C20430 * C127 + C20428 * C140 + C20431 * C366 + C32731 * C382) *
                C32542) *
               C32958 +
           ((C21493 + C21494) * C6200 + (C21495 + C21496) * C32542) * C32954 +
           C27374 * C32944 + C27381 * C32926) *
              C32603 * C239 -
          (((C27377 + C27378) * C32542 + (C27379 + C27380) * C6200) * C32926 +
           ((C21507 + C21508) * C32542 + (C21509 + C21510) * C6200) * C32944 +
           ((C21500 + C21499) * C32542 + (C21498 + C21497) * C6200) * C32954 +
           ((C21496 + C21495) * C32542 + (C21494 + C21493) * C6200) * C32958) *
              C32603 * C240 +
          (C27374 * C32958 + C27381 * C32954 +
           ((C27380 + C27379) * C6200 + (C27378 + C27377) * C32542) * C32944 +
           ((C20430 * C6263 + C20428 * C6266 + C20431 * C6638 +
             C32731 * C6639) *
                C6200 +
            (C20430 * C6265 + C20428 * C6269 + C20431 * C6640 +
             C32731 * C6641) *
                C32542) *
               C32926) *
              C32603 * C241) *
         C32577) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C20430 * C119 + C20428 * C126 + C20431 * C352 + C32731 * C367) *
                C6200 +
            (C20430 * C127 + C20428 * C140 + C20431 * C366 + C32731 * C382) *
                C32542) *
               C32958 +
           ((C21493 + C21494) * C6200 + (C21495 + C21496) * C32542) * C32954 +
           C27374 * C32944 + C27381 * C32926) *
              C345 -
          (((C20431 * C6364 + C32731 * C6368 + C20430 * C1672 +
             C20428 * C1677) *
                C32542 +
            (C20431 * C6359 + C32731 * C6363 + C20430 * C1668 +
             C20428 * C1671) *
                C6200) *
               C32926 +
           ((C22292 + C22293) * C32542 + (C22294 + C22295) * C6200) * C32944 +
           ((C22296 + C22297) * C32542 + (C22298 + C22299) * C6200) * C32954 +
           ((C20431 * C369 + C32731 * C383 + C20430 * C366 + C20428 * C382) *
                C32542 +
            (C20431 * C353 + C32731 * C368 + C20430 * C352 + C20428 * C367) *
                C6200) *
               C32958) *
              C346 +
          (((C20430 * C353 + C20428 * C368 + C20431 * C2100 + C32731 * C2109) *
                C6200 +
            (C20430 * C369 + C20428 * C383 + C20431 * C2108 + C32731 * C2118) *
                C32542) *
               C32958 +
           ((C20430 * C1153 + C20428 * C1165 + C20431 * C2640 +
             C32731 * C2643) *
                C6200 +
            (C20430 * C1166 + C20428 * C1180 + C20431 * C2644 +
             C32731 * C2649) *
                C32542) *
               C32954 +
           ((C20430 * C1156 + C20428 * C1171 + C20431 * C7053 +
             C32731 * C7057) *
                C6200 +
            (C20430 * C1172 + C20428 * C1183 + C20431 * C7056 +
             C32731 * C7062) *
                C32542) *
               C32944 +
           ((C20430 * C6359 + C20428 * C6363 + C20431 * C7529 +
             C32731 * C7530) *
                C6200 +
            (C20430 * C6364 + C20428 * C6368 + C20431 * C7531 +
             C32731 * C7532) *
                C32542) *
               C32926) *
              C347) *
         C32589 * C32577) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C22401 * C119 + C32959 * C126 + C22402 * C352 + C32956 * C367 +
             C22403 * C353 + C32947 * C368 + C22404 * C2100 + C32932 * C2109) *
                C6200 +
            (C22401 * C127 + C32959 * C140 + C22402 * C366 + C32956 * C382 +
             C22403 * C369 + C32947 * C383 + C22404 * C2108 + C32932 * C2118) *
                C32542) *
               C15051 +
           ((C22401 * C247 + C32959 * C262 + C22402 * C696 + C32956 * C701 +
             C22403 * C1153 + C32947 * C1165 + C22404 * C2640 +
             C32932 * C2643) *
                C6200 +
            (C22401 * C261 + C32959 * C277 + C22402 * C702 + C32956 * C711 +
             C22403 * C1166 + C32947 * C1180 + C22404 * C2644 +
             C32932 * C2649) *
                C32542) *
               C32691) *
              C32603 * C32589 * C110 -
          (((C22796 + C22797 + C22798 + C22799) * C32542 +
            (C22800 + C22801 + C22802 + C22803) * C6200) *
               C32691 +
           ((C22445 + C22444 + C22443 + C22442) * C32542 +
            (C22441 + C22440 + C22439 + C22438) * C6200) *
               C15051) *
              C32603 * C32589 * C111 +
          (((C22453 + C22452 + C22451 + C22450) * C6200 +
            (C22449 + C22448 + C22447 + C22446) * C32542) *
               C15051 +
           ((C22401 * C245 + C32959 * C258 + C22402 * C698 + C32956 * C705 +
             C22403 * C1155 + C32947 * C1169 + C22404 * C2642 +
             C32932 * C2647) *
                C6200 +
            (C22401 * C257 + C32959 * C275 + C22402 * C706 + C32956 * C713 +
             C22403 * C1170 + C32947 * C1182 + C22404 * C2648 +
             C32932 * C2651) *
                C32542) *
               C32691) *
              C32603 * C32589 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C22401 * C119 + C32959 * C126 + C22402 * C352 + C32956 * C367 +
             C22403 * C353 + C32947 * C368 + C22404 * C2100 + C32932 * C2109) *
                C6200 +
            (C22401 * C127 + C32959 * C140 + C22402 * C366 + C32956 * C382 +
             C22403 * C369 + C32947 * C383 + C22404 * C2108 + C32932 * C2118) *
                C32542) *
               C15051 +
           ((C28110 + C28111 + C28112 + C28113) * C6200 +
            (C28114 + C28115 + C28116 + C28117) * C32542) *
               C32691) *
              C32603 * C239 -
          (((C28118 + C28119 + C28120 + C28121) * C32542 +
            (C28122 + C28123 + C28124 + C28125) * C6200) *
               C32691 +
           ((C28117 + C28116 + C28115 + C28114) * C32542 +
            (C28113 + C28112 + C28111 + C28110) * C6200) *
               C15051) *
              C32603 * C240 +
          (((C28125 + C28124 + C28123 + C28122) * C6200 +
            (C28121 + C28120 + C28119 + C28118) * C32542) *
               C15051 +
           ((C22401 * C965 + C32959 * C974 + C22402 * C1668 + C32956 * C1671 +
             C22403 * C6359 + C32947 * C6363 + C22404 * C7529 +
             C32932 * C7530) *
                C6200 +
            (C22401 * C973 + C32959 * C983 + C22402 * C1672 + C32956 * C1677 +
             C22403 * C6364 + C32947 * C6368 + C22404 * C7531 +
             C32932 * C7532) *
                C32542) *
               C32691) *
              C32603 * C241) *
         C32577) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C22401 * C119 + C32959 * C126 + C22402 * C352 + C32956 * C367 +
             C22403 * C353 + C32947 * C368 + C22404 * C2100 + C32932 * C2109) *
                C6200 +
            (C22401 * C127 + C32959 * C140 + C22402 * C366 + C32956 * C382 +
             C22403 * C369 + C32947 * C383 + C22404 * C2108 + C32932 * C2118) *
                C32542) *
               C15051 +
           ((C28110 + C28111 + C28112 + C28113) * C6200 +
            (C28114 + C28115 + C28116 + C28117) * C32542) *
               C32691) *
              C345 -
          (((C22404 * C7059 + C32932 * C7063 + C22403 * C2644 + C32947 * C2649 +
             C22402 * C1166 + C32956 * C1180 + C22401 * C702 + C32959 * C711) *
                C32542 +
            (C22404 * C7054 + C32932 * C7058 + C22403 * C2640 + C32947 * C2643 +
             C22402 * C1153 + C32956 * C1165 + C22401 * C696 + C32959 * C701) *
                C6200) *
               C32691 +
           ((C22404 * C2111 + C32932 * C2119 + C22403 * C2108 + C32947 * C2118 +
             C22402 * C369 + C32956 * C383 + C22401 * C366 + C32959 * C382) *
                C32542 +
            (C22404 * C2101 + C32932 * C2110 + C22403 * C2100 + C32947 * C2109 +
             C22402 * C353 + C32956 * C368 + C22401 * C352 + C32959 * C367) *
                C6200) *
               C15051) *
              C346 +
          (((C22401 * C353 + C32959 * C368 + C22402 * C2100 + C32956 * C2109 +
             C22403 * C2101 + C32947 * C2110 + C22404 * C12093 +
             C32932 * C12096) *
                C6200 +
            (C22401 * C369 + C32959 * C383 + C22402 * C2108 + C32956 * C2118 +
             C22403 * C2111 + C32947 * C2119 + C22404 * C12095 +
             C32932 * C12099) *
                C32542) *
               C15051 +
           ((C22401 * C1153 + C32959 * C1165 + C22402 * C2640 + C32956 * C2643 +
             C22403 * C7054 + C32947 * C7058 + C22404 * C12355 +
             C32932 * C12356) *
                C6200 +
            (C22401 * C1166 + C32959 * C1180 + C22402 * C2644 + C32956 * C2649 +
             C22403 * C7059 + C32947 * C7063 + C22404 * C12357 +
             C32932 * C12358) *
                C32542) *
               C32691) *
              C347) *
         C32589 * C32577) /
            (p * q * std::sqrt(p + q));
    d2ee[38] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C20430 * C119 + C20428 * C126 + C20431 * C352 + C32731 * C367) *
                 C6200 +
             (C20430 * C127 + C20428 * C140 + C20431 * C366 + C32731 * C382) *
                 C32542) *
                C32958 +
            ((C21493 + C21494) * C6200 + (C21495 + C21496) * C32542) * C32954 +
            C27374 * C32944 + C27381 * C32926) *
               C584 -
           (((C20431 * C6364 + C32731 * C6368 + C20430 * C1672 +
              C20428 * C1677) *
                 C32542 +
             (C20431 * C6359 + C32731 * C6363 + C20430 * C1668 +
              C20428 * C1671) *
                 C6200) *
                C32926 +
            ((C22292 + C22293) * C32542 + (C22294 + C22295) * C6200) * C32944 +
            ((C22296 + C22297) * C32542 + (C22298 + C22299) * C6200) * C32954 +
            ((C20431 * C369 + C32731 * C383 + C20430 * C366 + C20428 * C382) *
                 C32542 +
             (C20431 * C353 + C32731 * C368 + C20430 * C352 + C20428 * C367) *
                 C6200) *
                C32958) *
               C585) *
              C32589 * C472 +
          ((((C21012 + C21011) * C6200 + (C21010 + C21009) * C32542) * C32958 +
            ((C22081 + C22080) * C6200 + (C22079 + C22078) * C32542) * C32954 +
            ((C22077 + C22076) * C6200 + (C22075 + C22074) * C32542) * C32944 +
            ((C20430 * C1669 + C20428 * C1673 + C20431 * C7211 +
              C32731 * C7212) *
                 C6200 +
             (C20430 * C1674 + C20428 * C1678 + C20431 * C7213 +
              C32731 * C7214) *
                 C32542) *
                C32926) *
               C585 -
           (((C21503 + C21504) * C32542 + (C21505 + C21506) * C6200) * C32926 +
            (C21860 * C32542 + C21861 * C6200) * C32944 +
            (C21862 * C32542 + C21863 * C6200) * C32954 +
            ((C20468 + C20467) * C32542 + (C20466 + C20465) * C6200) * C32958) *
               C584) *
              C32589 * C473)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C20430 * C119 + C20428 * C126 + C20431 * C352 + C32731 * C367) *
                 C5424 +
             (C20430 * C127 + C20428 * C140 + C20431 * C366 + C32731 * C382) *
                 C32948 +
             (C20465 + C20466) * C5425 + (C20467 + C20468) * C32935 +
             C20481 * C5426 + C20482 * C32905) *
                C15051 +
            ((C21493 + C21494) * C5424 + (C21495 + C21496) * C32948 +
             C21858 * C5425 + C21859 * C32935 + C23234 * C5426 +
             C23235 * C32905) *
                C32691) *
               C584 -
           (((C23926 + C23927) * C32905 + (C23928 + C23929) * C5426 +
             (C22078 + C22079) * C32935 + (C22080 + C22081) * C5425 +
             (C22296 + C22297) * C32948 + (C22298 + C22299) * C5424) *
                C32691 +
            ((C21005 + C21006) * C32905 + (C21007 + C21008) * C5426 +
             (C21009 + C21010) * C32935 + (C21011 + C21012) * C5425 +
             (C20431 * C369 + C32731 * C383 + C20430 * C366 + C20428 * C382) *
                 C32948 +
             (C20431 * C353 + C32731 * C368 + C20430 * C352 + C20428 * C367) *
                 C5424) *
                C15051) *
               C585) *
              C32589 * C472 +
          ((((C21012 + C21011) * C5424 + (C21010 + C21009) * C32948 +
             (C21008 + C21007) * C5425 + (C21006 + C21005) * C32935 +
             (C21004 + C21003) * C5426 + (C21002 + C21001) * C32905) *
                C15051 +
            ((C22081 + C22080) * C5424 + (C22079 + C22078) * C32948 +
             (C23929 + C23928) * C5425 + (C23927 + C23926) * C32935 +
             (C20430 * C699 + C20428 * C707 + C20431 * C2268 + C32731 * C2269) *
                 C5426 +
             (C20430 * C708 + C20428 * C714 + C20431 * C2270 + C32731 * C2271) *
                 C32905) *
                C32691) *
               C585 -
           (((C20835 + C20836) * C32905 + (C20837 + C20838) * C5426 +
             C23722 * C32935 + C23723 * C5425 + C21862 * C32948 +
             C21863 * C5424) *
                C32691 +
            ((C20476 + C20475) * C32905 + (C20474 + C20473) * C5426 +
             (C20472 + C20471) * C32935 + (C20470 + C20469) * C5425 +
             (C20468 + C20467) * C32948 + (C20466 + C20465) * C5424) *
                C15051) *
               C584) *
              C32589 * C473)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C22401 * C119 + C32959 * C126 + C22402 * C352 + C32956 * C367 +
              C22403 * C353 + C32947 * C368 + C22404 * C2100 + C32932 * C2109) *
                 C6200 +
             (C22401 * C127 + C32959 * C140 + C22402 * C366 + C32956 * C382 +
              C22403 * C369 + C32947 * C383 + C22404 * C2108 + C32932 * C2118) *
                 C32542) *
                C15051 +
            ((C28110 + C28111 + C28112 + C28113) * C6200 +
             (C28114 + C28115 + C28116 + C28117) * C32542) *
                C32691) *
               C584 -
           (((C22404 * C7059 + C32932 * C7063 + C22403 * C2644 +
              C32947 * C2649 + C22402 * C1166 + C32956 * C1180 + C22401 * C702 +
              C32959 * C711) *
                 C32542 +
             (C22404 * C7054 + C32932 * C7058 + C22403 * C2640 +
              C32947 * C2643 + C22402 * C1153 + C32956 * C1165 + C22401 * C696 +
              C32959 * C701) *
                 C6200) *
                C32691 +
            ((C22404 * C2111 + C32932 * C2119 + C22403 * C2108 +
              C32947 * C2118 + C22402 * C369 + C32956 * C383 + C22401 * C366 +
              C32959 * C382) *
                 C32542 +
             (C22404 * C2101 + C32932 * C2110 + C22403 * C2100 +
              C32947 * C2109 + C22402 * C353 + C32956 * C368 + C22401 * C352 +
              C32959 * C367) *
                 C6200) *
                C15051) *
               C585) *
              C32589 * C472 +
          ((((C22957 + C22956 + C22955 + C22954) * C6200 +
             (C22953 + C22952 + C22951 + C22950) * C32542) *
                C15051 +
            ((C22401 * C697 + C32959 * C703 + C22402 * C1154 + C32956 * C1167 +
              C22403 * C2641 + C32947 * C2645 + C22404 * C12183 +
              C32932 * C12184) *
                 C6200 +
             (C22401 * C704 + C32959 * C712 + C22402 * C1168 + C32956 * C1181 +
              C22403 * C2646 + C32947 * C2650 + C22404 * C12185 +
              C32932 * C12186) *
                 C32542) *
                C32691) *
               C585 -
           (((C22796 + C22797 + C22798 + C22799) * C32542 +
             (C22800 + C22801 + C22802 + C22803) * C6200) *
                C32691 +
            ((C22445 + C22444 + C22443 + C22442) * C32542 +
             (C22441 + C22440 + C22439 + C22438) * C6200) *
                C15051) *
               C584) *
              C32589 * C473)) /
            (p * q * std::sqrt(p + q));
    d2ee[39] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C20430 * C119 + C20428 * C126 + C20431 * C352 + C32731 * C367) *
                C5424 +
            (C20430 * C127 + C20428 * C140 + C20431 * C366 + C32731 * C382) *
                C32948 +
            (C20465 + C20466) * C5425 + (C20467 + C20468) * C32935 +
            C20481 * C5426 + C20482 * C32905) *
               C15051 +
           ((C21493 + C21494) * C5424 + (C21495 + C21496) * C32948 +
            C21858 * C5425 + C21859 * C32935 + C23234 * C5426 +
            C23235 * C32905) *
               C32691) *
              C32603 * C239 -
          (((C21309 + C21310) * C32905 + (C21311 + C21312) * C5426 +
            C21860 * C32935 + C21861 * C5425 + (C21500 + C21499) * C32948 +
            (C21498 + C21497) * C5424) *
               C32691 +
           (C23722 * C32905 + C23723 * C5426 + C21862 * C32935 +
            C21863 * C5425 + (C21496 + C21495) * C32948 +
            (C21494 + C21493) * C5424) *
               C15051) *
              C32603 * C240 +
          ((C21511 * C5424 + C21512 * C32948 + C21475 * C5425 +
            C21476 * C32935 + (C21312 + C21311) * C5426 +
            (C21310 + C21309) * C32905) *
               C15051 +
           ((C21510 + C21509) * C5424 + (C21508 + C21507) * C32948 +
            (C21506 + C21505) * C5425 + (C21504 + C21503) * C32935 +
            (C20430 * C963 + C20428 * C970 + C20431 * C1670 + C32731 * C1675) *
                C5426 +
            (C20430 * C969 + C20428 * C981 + C20431 * C1676 + C32731 * C1679) *
                C32905) *
               C32691) *
              C32603 * C241) *
         C32577) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C20430 * C119 + C20428 * C126 + C20431 * C352 + C32731 * C367) *
                C5424 +
            (C20430 * C127 + C20428 * C140 + C20431 * C366 + C32731 * C382) *
                C32948 +
            (C20465 + C20466) * C5425 + (C20467 + C20468) * C32935 +
            C20481 * C5426 + C20482 * C32905) *
               C15051 +
           ((C21493 + C21494) * C5424 + (C21495 + C21496) * C32948 +
            C21858 * C5425 + C21859 * C32935 + C23234 * C5426 +
            C23235 * C32905) *
               C32691) *
              C32603 * C32589 * C110 -
          (((C20835 + C20836) * C32905 + (C20837 + C20838) * C5426 +
            C23722 * C32935 + C23723 * C5425 + C21862 * C32948 +
            C21863 * C5424) *
               C32691 +
           ((C20476 + C20475) * C32905 + (C20474 + C20473) * C5426 +
            (C20472 + C20471) * C32935 + (C20470 + C20469) * C5425 +
            (C20468 + C20467) * C32948 + (C20466 + C20465) * C5424) *
               C15051) *
              C32603 * C32589 * C111 +
          ((C20481 * C5424 + C20482 * C32948 + C20483 * C5425 +
            C20484 * C32935 + (C20480 + C20479) * C5426 +
            (C20478 + C20477) * C32905) *
               C15051 +
           (C23234 * C5424 + C23235 * C32948 + (C20838 + C20837) * C5425 +
            (C20836 + C20835) * C32935 +
            (C20430 * C243 + C20428 * C254 + C20431 * C700 + C32731 * C709) *
                C5426 +
            (C20430 * C253 + C20428 * C273 + C20431 * C710 + C32731 * C715) *
                C32905) *
               C32691) *
              C32603 * C32589 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C20430 * C119 + C20428 * C126 + C20431 * C352 + C32731 * C367) *
                C6200 +
            (C20430 * C127 + C20428 * C140 + C20431 * C366 + C32731 * C382) *
                C32542) *
               C32958 +
           ((C21493 + C21494) * C6200 + (C21495 + C21496) * C32542) * C32954 +
           (C21511 * C6200 + C21512 * C32542) * C32944 +
           ((C21510 + C21509) * C6200 + (C21508 + C21507) * C32542) * C32926) *
              C32603 * C32589 * C110 -
          (((C21503 + C21504) * C32542 + (C21505 + C21506) * C6200) * C32926 +
           (C21860 * C32542 + C21861 * C6200) * C32944 +
           (C21862 * C32542 + C21863 * C6200) * C32954 +
           ((C20468 + C20467) * C32542 + (C20466 + C20465) * C6200) * C32958) *
              C32603 * C32589 * C111 +
          ((C20481 * C6200 + C20482 * C32542) * C32958 +
           (C23234 * C6200 + C23235 * C32542) * C32954 +
           ((C21312 + C21311) * C6200 + (C21310 + C21309) * C32542) * C32944 +
           ((C20430 * C963 + C20428 * C970 + C20431 * C1670 + C32731 * C1675) *
                C6200 +
            (C20430 * C969 + C20428 * C981 + C20431 * C1676 + C32731 * C1679) *
                C32542) *
               C32926) *
              C32603 * C32589 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C20430 * C119 + C20428 * C126 + C20431 * C352 + C32731 * C367) *
                C6200 +
            (C20430 * C127 + C20428 * C140 + C20431 * C366 + C32731 * C382) *
                C32542) *
               C32958 +
           ((C21493 + C21494) * C6200 + (C21495 + C21496) * C32542) * C32954 +
           C27374 * C32944 + C27381 * C32926) *
              C32603 * C239 -
          (((C27377 + C27378) * C32542 + (C27379 + C27380) * C6200) * C32926 +
           ((C21507 + C21508) * C32542 + (C21509 + C21510) * C6200) * C32944 +
           ((C21500 + C21499) * C32542 + (C21498 + C21497) * C6200) * C32954 +
           ((C21496 + C21495) * C32542 + (C21494 + C21493) * C6200) * C32958) *
              C32603 * C240 +
          (C27374 * C32958 + C27381 * C32954 +
           ((C27380 + C27379) * C6200 + (C27378 + C27377) * C32542) * C32944 +
           ((C20430 * C6263 + C20428 * C6266 + C20431 * C6638 +
             C32731 * C6639) *
                C6200 +
            (C20430 * C6265 + C20428 * C6269 + C20431 * C6640 +
             C32731 * C6641) *
                C32542) *
               C32926) *
              C32603 * C241) *
         C32577) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C22401 * C119 + C32959 * C126 + C22402 * C352 + C32956 * C367 +
             C22403 * C353 + C32947 * C368 + C22404 * C2100 + C32932 * C2109) *
                C6200 +
            (C22401 * C127 + C32959 * C140 + C22402 * C366 + C32956 * C382 +
             C22403 * C369 + C32947 * C383 + C22404 * C2108 + C32932 * C2118) *
                C32542) *
               C15051 +
           ((C22401 * C247 + C32959 * C262 + C22402 * C696 + C32956 * C701 +
             C22403 * C1153 + C32947 * C1165 + C22404 * C2640 +
             C32932 * C2643) *
                C6200 +
            (C22401 * C261 + C32959 * C277 + C22402 * C702 + C32956 * C711 +
             C22403 * C1166 + C32947 * C1180 + C22404 * C2644 +
             C32932 * C2649) *
                C32542) *
               C32691) *
              C32603 * C32589 * C110 -
          (((C22796 + C22797 + C22798 + C22799) * C32542 +
            (C22800 + C22801 + C22802 + C22803) * C6200) *
               C32691 +
           ((C22445 + C22444 + C22443 + C22442) * C32542 +
            (C22441 + C22440 + C22439 + C22438) * C6200) *
               C15051) *
              C32603 * C32589 * C111 +
          (((C22453 + C22452 + C22451 + C22450) * C6200 +
            (C22449 + C22448 + C22447 + C22446) * C32542) *
               C15051 +
           ((C22401 * C245 + C32959 * C258 + C22402 * C698 + C32956 * C705 +
             C22403 * C1155 + C32947 * C1169 + C22404 * C2642 +
             C32932 * C2647) *
                C6200 +
            (C22401 * C257 + C32959 * C275 + C22402 * C706 + C32956 * C713 +
             C22403 * C1170 + C32947 * C1182 + C22404 * C2648 +
             C32932 * C2651) *
                C32542) *
               C32691) *
              C32603 * C32589 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C22401 * C119 + C32959 * C126 + C22402 * C352 + C32956 * C367 +
             C22403 * C353 + C32947 * C368 + C22404 * C2100 + C32932 * C2109) *
                C6200 +
            (C22401 * C127 + C32959 * C140 + C22402 * C366 + C32956 * C382 +
             C22403 * C369 + C32947 * C383 + C22404 * C2108 + C32932 * C2118) *
                C32542) *
               C15051 +
           ((C28110 + C28111 + C28112 + C28113) * C6200 +
            (C28114 + C28115 + C28116 + C28117) * C32542) *
               C32691) *
              C32603 * C239 -
          (((C28118 + C28119 + C28120 + C28121) * C32542 +
            (C28122 + C28123 + C28124 + C28125) * C6200) *
               C32691 +
           ((C28117 + C28116 + C28115 + C28114) * C32542 +
            (C28113 + C28112 + C28111 + C28110) * C6200) *
               C15051) *
              C32603 * C240 +
          (((C28125 + C28124 + C28123 + C28122) * C6200 +
            (C28121 + C28120 + C28119 + C28118) * C32542) *
               C15051 +
           ((C22401 * C965 + C32959 * C974 + C22402 * C1668 + C32956 * C1671 +
             C22403 * C6359 + C32947 * C6363 + C22404 * C7529 +
             C32932 * C7530) *
                C6200 +
            (C22401 * C973 + C32959 * C983 + C22402 * C1672 + C32956 * C1677 +
             C22403 * C6364 + C32947 * C6368 + C22404 * C7531 +
             C32932 * C7532) *
                C32542) *
               C32691) *
              C32603 * C241) *
         C32577) /
            (p * q * std::sqrt(p + q));
    d2ee[40] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                 (((((C31694 * C119 + C32727 * C126 + C31686 * C352 +
                      C32734 * C367 + C31700 * C353 + C24235 * C368) *
                         C31559 +
                     (C31694 * C127 + C32727 * C140 + C31686 * C366 +
                      C32734 * C382 + C31700 * C369 + C24235 * C383) *
                         C32866 +
                     (C24276 + C24277 + C24278) * C31540 +
                     (C24279 + C24280 + C24281) * C32552) *
                        C15051 +
                    ((C25356 + C25357 + C25358) * C31559 +
                     (C25359 + C25360 + C25361) * C32866 + C25718 * C31540 +
                     C25719 * C32552) *
                        C32691) *
                       C32603 * C470 -
                   (((C25362 + C25363 + C25364) * C32552 +
                     (C25365 + C25366 + C25367) * C31540 +
                     (C25368 + C25369 + C25370) * C32866 +
                     (C25371 + C25372 + C25373) * C31559) *
                        C32691 +
                    (C25720 * C32552 + C25721 * C31540 +
                     (C25361 + C25360 + C25359) * C32866 +
                     (C25358 + C25357 + C25356) * C31559) *
                        C15051) *
                       C32603 * C471) *
                      C472 +
                  (((C25718 * C31559 + C25719 * C32866 +
                     (C24693 + C24692 + C24691) * C31540 +
                     (C24690 + C24689 + C24688) * C32552) *
                        C15051 +
                    ((C25367 + C25366 + C25365) * C31559 +
                     (C25364 + C25363 + C25362) * C32866 +
                     (C31694 * C250 + C32727 * C267 + C31686 * C1150 +
                      C32734 * C1160 + C31700 * C1158 + C24235 * C1175) *
                         C31540 +
                     (C31694 * C268 + C32727 * C280 + C31686 * C1159 +
                      C32734 * C1177 + C31700 * C1176 + C24235 * C1185) *
                         C32552) *
                        C32691) *
                       C32603 * C471 -
                   (((C24688 + C24689 + C24690) * C32552 +
                     (C24691 + C24692 + C24693) * C31540 + C25720 * C32866 +
                     C25721 * C31559) *
                        C32691 +
                    ((C24287 + C24286 + C24285) * C32552 +
                     (C24284 + C24283 + C24282) * C31540 +
                     (C24281 + C24280 + C24279) * C32866 +
                     (C24278 + C24277 + C24276) * C31559) *
                        C15051) *
                       C32603 * C470) *
                      C473)) /
                (p * q * std::sqrt(p + q));
    d2ee[41] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                 (((((C31694 * C119 + C32727 * C126 + C31686 * C352 +
                      C32734 * C367 + C31700 * C353 + C24235 * C368) *
                         C31559 +
                     (C31694 * C127 + C32727 * C140 + C31686 * C366 +
                      C32734 * C382 + C31700 * C369 + C24235 * C383) *
                         C32866 +
                     (C24276 + C24277 + C24278) * C31540 +
                     (C24279 + C24280 + C24281) * C32552) *
                        C15051 +
                    ((C25356 + C25357 + C25358) * C31559 +
                     (C25359 + C25360 + C25361) * C32866 + C25718 * C31540 +
                     C25719 * C32552) *
                        C32691) *
                       C584 -
                   (((C25928 + C25929 + C25930) * C32552 +
                     (C25931 + C25932 + C25933) * C31540 +
                     (C26140 + C26141 + C26142) * C32866 +
                     (C26143 + C26144 + C26145) * C31559) *
                        C32691 +
                    ((C24876 + C24877 + C24878) * C32552 +
                     (C24879 + C24880 + C24881) * C31540 +
                     (C31700 * C2108 + C24235 * C2118 + C31686 * C369 +
                      C32734 * C383 + C31694 * C366 + C32727 * C382) *
                         C32866 +
                     (C31700 * C2100 + C24235 * C2109 + C31686 * C353 +
                      C32734 * C368 + C31694 * C352 + C32727 * C367) *
                         C31559) *
                        C15051) *
                       C585) *
                      C470 +
                  ((((C26145 + C26144 + C26143) * C31559 +
                     (C26142 + C26141 + C26140) * C32866 +
                     (C25933 + C25932 + C25931) * C31540 +
                     (C25930 + C25929 + C25928) * C32552) *
                        C15051 +
                    ((C31694 * C1152 + C32727 * C1164 + C31686 * C1156 +
                      C32734 * C1171 + C31700 * C7053 + C24235 * C7057) *
                         C31559 +
                     (C31694 * C1163 + C32727 * C1179 + C31686 * C1172 +
                      C32734 * C1183 + C31700 * C7056 + C24235 * C7062) *
                         C32866 +
                     (C31694 * C1151 + C32727 * C1162 + C31686 * C1157 +
                      C32734 * C1173 + C31700 * C7379 + C24235 * C7380) *
                         C31540 +
                     (C31694 * C1161 + C32727 * C1178 + C31686 * C1174 +
                      C32734 * C1184 + C31700 * C7381 + C24235 * C7382) *
                         C32552) *
                        C32691) *
                       C585 -
                   (((C25362 + C25363 + C25364) * C32552 +
                     (C25365 + C25366 + C25367) * C31540 +
                     (C25368 + C25369 + C25370) * C32866 +
                     (C25371 + C25372 + C25373) * C31559) *
                        C32691 +
                    (C25720 * C32552 + C25721 * C31540 +
                     (C25361 + C25360 + C25359) * C32866 +
                     (C25358 + C25357 + C25356) * C31559) *
                        C15051) *
                       C584) *
                      C471) *
                 C32577) /
                (p * q * std::sqrt(p + q));
    d2ee[42] += (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C31694 * C119 + C32727 * C126 + C31686 * C352 +
                     C32734 * C367 + C31700 * C353 + C24235 * C368) *
                        C31559 +
                    (C31694 * C127 + C32727 * C140 + C31686 * C366 +
                     C32734 * C382 + C31700 * C369 + C24235 * C383) *
                        C32866 +
                    (C24276 + C24277 + C24278) * C31540 +
                    (C24279 + C24280 + C24281) * C32552) *
                       C15051 +
                   ((C25356 + C25357 + C25358) * C31559 +
                    (C25359 + C25360 + C25361) * C32866 + C25718 * C31540 +
                    C25719 * C32552) *
                       C32691) *
                      C32603 * C239 -
                  (((C25362 + C25363 + C25364) * C32552 +
                    (C25365 + C25366 + C25367) * C31540 +
                    (C25368 + C25369 + C25370) * C32866 +
                    (C25371 + C25372 + C25373) * C31559) *
                       C32691 +
                   (C25720 * C32552 + C25721 * C31540 +
                    (C25361 + C25360 + C25359) * C32866 +
                    (C25358 + C25357 + C25356) * C31559) *
                       C15051) *
                      C32603 * C240 +
                  (((C25373 + C25372 + C25371) * C31559 +
                    (C25370 + C25369 + C25368) * C32866 +
                    (C25367 + C25366 + C25365) * C31540 +
                    (C25364 + C25363 + C25362) * C32552) *
                       C15051 +
                   ((C31694 * C965 + C32727 * C974 + C31686 * C1668 +
                     C32734 * C1671 + C31700 * C6359 + C24235 * C6363) *
                        C31559 +
                    (C31694 * C973 + C32727 * C983 + C31686 * C1672 +
                     C32734 * C1677 + C31700 * C6364 + C24235 * C6368) *
                        C32866 +
                    (C31694 * C964 + C32727 * C972 + C31686 * C1669 +
                     C32734 * C1673 + C31700 * C7211 + C24235 * C7212) *
                        C31540 +
                    (C31694 * C971 + C32727 * C982 + C31686 * C1674 +
                     C32734 * C1678 + C31700 * C7213 + C24235 * C7214) *
                        C32552) *
                       C32691) *
                      C32603 * C241) *
                 C32577) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C31694 * C119 + C32727 * C126 + C31686 * C352 +
                     C32734 * C367 + C31700 * C353 + C24235 * C368) *
                        C31559 +
                    (C31694 * C127 + C32727 * C140 + C31686 * C366 +
                     C32734 * C382 + C31700 * C369 + C24235 * C383) *
                        C32866 +
                    (C24276 + C24277 + C24278) * C31540 +
                    (C24279 + C24280 + C24281) * C32552) *
                       C15051 +
                   ((C25356 + C25357 + C25358) * C31559 +
                    (C25359 + C25360 + C25361) * C32866 + C25718 * C31540 +
                    C25719 * C32552) *
                       C32691) *
                      C32603 * C32589 * C110 -
                  (((C24688 + C24689 + C24690) * C32552 +
                    (C24691 + C24692 + C24693) * C31540 + C25720 * C32866 +
                    C25721 * C31559) *
                       C32691 +
                   ((C24287 + C24286 + C24285) * C32552 +
                    (C24284 + C24283 + C24282) * C31540 +
                    (C24281 + C24280 + C24279) * C32866 +
                    (C24278 + C24277 + C24276) * C31559) *
                       C15051) *
                      C32603 * C32589 * C111 +
                  ((C24296 * C31559 + C24297 * C32866 +
                    (C24293 + C24292 + C24291) * C31540 +
                    (C24290 + C24289 + C24288) * C32552) *
                       C15051 +
                   ((C24693 + C24692 + C24691) * C31559 +
                    (C24690 + C24689 + C24688) * C32866 +
                    (C31694 * C244 + C32727 * C256 + C31686 * C699 +
                     C32734 * C707 + C31700 * C2268 + C24235 * C2269) *
                        C31540 +
                    (C31694 * C255 + C32727 * C274 + C31686 * C708 +
                     C32734 * C714 + C31700 * C2270 + C24235 * C2271) *
                        C32552) *
                       C32691) *
                      C32603 * C32589 * C112)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((C31694 * C119 + C32727 * C126 + C31686 * C352 +
                     C32734 * C367 + C31700 * C353 + C24235 * C368) *
                        C31559 +
                    (C31694 * C127 + C32727 * C140 + C31686 * C366 +
                     C32734 * C382 + C31700 * C369 + C24235 * C383) *
                        C32866 +
                    (C24276 + C24277 + C24278) * C31540 +
                    (C24279 + C24280 + C24281) * C32552) *
                       C15051 +
                   ((C25356 + C25357 + C25358) * C31559 +
                    (C25359 + C25360 + C25361) * C32866 + C25718 * C31540 +
                    C25719 * C32552) *
                       C32691) *
                      C345 -
                  (((C25928 + C25929 + C25930) * C32552 +
                    (C25931 + C25932 + C25933) * C31540 +
                    (C26140 + C26141 + C26142) * C32866 +
                    (C26143 + C26144 + C26145) * C31559) *
                       C32691 +
                   ((C24876 + C24877 + C24878) * C32552 +
                    (C24879 + C24880 + C24881) * C31540 +
                    (C31700 * C2108 + C24235 * C2118 + C31686 * C369 +
                     C32734 * C383 + C31694 * C366 + C32727 * C382) *
                        C32866 +
                    (C31700 * C2100 + C24235 * C2109 + C31686 * C353 +
                     C32734 * C368 + C31694 * C352 + C32727 * C367) *
                        C31559) *
                       C15051) *
                      C346 +
                  (((C31694 * C353 + C32727 * C368 + C31686 * C2100 +
                     C32734 * C2109 + C31700 * C2101 + C24235 * C2110) *
                        C31559 +
                    (C31694 * C369 + C32727 * C383 + C31686 * C2108 +
                     C32734 * C2118 + C31700 * C2111 + C24235 * C2119) *
                        C32866 +
                    (C31694 * C354 + C32727 * C370 + C31686 * C2099 +
                     C32734 * C2107 + C31700 * C2102 + C24235 * C2112) *
                        C31540 +
                    (C31694 * C371 + C32727 * C384 + C31686 * C2106 +
                     C32734 * C2117 + C31700 * C2113 + C24235 * C2120) *
                        C32552) *
                       C15051 +
                   ((C31694 * C1153 + C32727 * C1165 + C31686 * C2640 +
                     C32734 * C2643 + C31700 * C7054 + C24235 * C7058) *
                        C31559 +
                    (C31694 * C1166 + C32727 * C1180 + C31686 * C2644 +
                     C32734 * C2649 + C31700 * C7059 + C24235 * C7063) *
                        C32866 +
                    (C31694 * C1154 + C32727 * C1167 + C31686 * C2641 +
                     C32734 * C2645 + C31700 * C12183 + C24235 * C12184) *
                        C31540 +
                    (C31694 * C1168 + C32727 * C1181 + C31686 * C2646 +
                     C32734 * C2650 + C31700 * C12185 + C24235 * C12186) *
                        C32552) *
                       C32691) *
                      C347) *
                 C32589 * C32577) /
                    (p * q * std::sqrt(p + q));
    d2ee[43] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                 (((((C31694 * C119 + C32727 * C126 + C31686 * C352 +
                      C32734 * C367 + C31700 * C353 + C24235 * C368) *
                         C31559 +
                     (C31694 * C127 + C32727 * C140 + C31686 * C366 +
                      C32734 * C382 + C31700 * C369 + C24235 * C383) *
                         C32866 +
                     (C24276 + C24277 + C24278) * C31540 +
                     (C24279 + C24280 + C24281) * C32552) *
                        C15051 +
                    ((C25356 + C25357 + C25358) * C31559 +
                     (C25359 + C25360 + C25361) * C32866 + C25718 * C31540 +
                     C25719 * C32552) *
                        C32691) *
                       C584 -
                   (((C25928 + C25929 + C25930) * C32552 +
                     (C25931 + C25932 + C25933) * C31540 +
                     (C26140 + C26141 + C26142) * C32866 +
                     (C26143 + C26144 + C26145) * C31559) *
                        C32691 +
                    ((C24876 + C24877 + C24878) * C32552 +
                     (C24879 + C24880 + C24881) * C31540 +
                     (C31700 * C2108 + C24235 * C2118 + C31686 * C369 +
                      C32734 * C383 + C31694 * C366 + C32727 * C382) *
                         C32866 +
                     (C31700 * C2100 + C24235 * C2109 + C31686 * C353 +
                      C32734 * C368 + C31694 * C352 + C32727 * C367) *
                         C31559) *
                        C15051) *
                       C585) *
                      C32589 * C472 +
                  ((((C24881 + C24880 + C24879) * C31559 +
                     (C24878 + C24877 + C24876) * C32866 +
                     (C24875 + C24874 + C24873) * C31540 +
                     (C24872 + C24871 + C24870) * C32552) *
                        C15051 +
                    ((C25933 + C25932 + C25931) * C31559 +
                     (C25930 + C25929 + C25928) * C32866 +
                     (C31694 * C698 + C32727 * C705 + C31686 * C1155 +
                      C32734 * C1169 + C31700 * C2642 + C24235 * C2647) *
                         C31540 +
                     (C31694 * C706 + C32727 * C713 + C31686 * C1170 +
                      C32734 * C1182 + C31700 * C2648 + C24235 * C2651) *
                         C32552) *
                        C32691) *
                       C585 -
                   (((C24688 + C24689 + C24690) * C32552 +
                     (C24691 + C24692 + C24693) * C31540 + C25720 * C32866 +
                     C25721 * C31559) *
                        C32691 +
                    ((C24287 + C24286 + C24285) * C32552 +
                     (C24284 + C24283 + C24282) * C31540 +
                     (C24281 + C24280 + C24279) * C32866 +
                     (C24278 + C24277 + C24276) * C31559) *
                        C15051) *
                       C584) *
                      C32589 * C473)) /
                (p * q * std::sqrt(p + q));
    d2ee[44] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C31694 * C119 + C32727 * C126 + C31686 * C352 +
                     C32734 * C367 + C31700 * C353 + C24235 * C368) *
                        C31559 +
                    (C31694 * C127 + C32727 * C140 + C31686 * C366 +
                     C32734 * C382 + C31700 * C369 + C24235 * C383) *
                        C32866 +
                    (C24276 + C24277 + C24278) * C31540 +
                    (C24279 + C24280 + C24281) * C32552) *
                       C15051 +
                   ((C25356 + C25357 + C25358) * C31559 +
                    (C25359 + C25360 + C25361) * C32866 + C25718 * C31540 +
                    C25719 * C32552) *
                       C32691) *
                      C32603 * C32589 * C110 -
                  (((C24688 + C24689 + C24690) * C32552 +
                    (C24691 + C24692 + C24693) * C31540 + C25720 * C32866 +
                    C25721 * C31559) *
                       C32691 +
                   ((C24287 + C24286 + C24285) * C32552 +
                    (C24284 + C24283 + C24282) * C31540 +
                    (C24281 + C24280 + C24279) * C32866 +
                    (C24278 + C24277 + C24276) * C31559) *
                       C15051) *
                      C32603 * C32589 * C111 +
                  ((C24296 * C31559 + C24297 * C32866 +
                    (C24293 + C24292 + C24291) * C31540 +
                    (C24290 + C24289 + C24288) * C32552) *
                       C15051 +
                   ((C24693 + C24692 + C24691) * C31559 +
                    (C24690 + C24689 + C24688) * C32866 +
                    (C31694 * C244 + C32727 * C256 + C31686 * C699 +
                     C32734 * C707 + C31700 * C2268 + C24235 * C2269) *
                        C31540 +
                    (C31694 * C255 + C32727 * C274 + C31686 * C708 +
                     C32734 * C714 + C31700 * C2270 + C24235 * C2271) *
                        C32552) *
                       C32691) *
                      C32603 * C32589 * C112)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C31694 * C119 + C32727 * C126 + C31686 * C352 +
                     C32734 * C367 + C31700 * C353 + C24235 * C368) *
                        C31559 +
                    (C31694 * C127 + C32727 * C140 + C31686 * C366 +
                     C32734 * C382 + C31700 * C369 + C24235 * C383) *
                        C32866 +
                    (C24276 + C24277 + C24278) * C31540 +
                    (C24279 + C24280 + C24281) * C32552) *
                       C15051 +
                   ((C25356 + C25357 + C25358) * C31559 +
                    (C25359 + C25360 + C25361) * C32866 + C25718 * C31540 +
                    C25719 * C32552) *
                       C32691) *
                      C32603 * C239 -
                  (((C25362 + C25363 + C25364) * C32552 +
                    (C25365 + C25366 + C25367) * C31540 +
                    (C25368 + C25369 + C25370) * C32866 +
                    (C25371 + C25372 + C25373) * C31559) *
                       C32691 +
                   (C25720 * C32552 + C25721 * C31540 +
                    (C25361 + C25360 + C25359) * C32866 +
                    (C25358 + C25357 + C25356) * C31559) *
                       C15051) *
                      C32603 * C240 +
                  (((C25373 + C25372 + C25371) * C31559 +
                    (C25370 + C25369 + C25368) * C32866 +
                    (C25367 + C25366 + C25365) * C31540 +
                    (C25364 + C25363 + C25362) * C32552) *
                       C15051 +
                   ((C31694 * C965 + C32727 * C974 + C31686 * C1668 +
                     C32734 * C1671 + C31700 * C6359 + C24235 * C6363) *
                        C31559 +
                    (C31694 * C973 + C32727 * C983 + C31686 * C1672 +
                     C32734 * C1677 + C31700 * C6364 + C24235 * C6368) *
                        C32866 +
                    (C31694 * C964 + C32727 * C972 + C31686 * C1669 +
                     C32734 * C1673 + C31700 * C7211 + C24235 * C7212) *
                        C31540 +
                    (C31694 * C971 + C32727 * C982 + C31686 * C1674 +
                     C32734 * C1678 + C31700 * C7213 + C24235 * C7214) *
                        C32552) *
                       C32691) *
                      C32603 * C241) *
                 C32577) /
                    (p * q * std::sqrt(p + q));
    d2ee[45] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C20430 * C119 + C20428 * C126 + C20431 * C352 + C32731 * C367) *
                 C5424 +
             (C20430 * C127 + C20428 * C140 + C20431 * C366 + C32731 * C382) *
                 C32948 +
             (C20465 + C20466) * C5425 + (C20467 + C20468) * C32935 +
             C20481 * C5426 + C20482 * C32905) *
                C15051 +
            ((C21493 + C21494) * C5424 + (C21495 + C21496) * C32948 +
             C21858 * C5425 + C21859 * C32935 + C23234 * C5426 +
             C23235 * C32905) *
                C32691) *
               C32603 * C470 -
           (((C21309 + C21310) * C32905 + (C21311 + C21312) * C5426 +
             C21860 * C32935 + C21861 * C5425 + (C21500 + C21499) * C32948 +
             (C21498 + C21497) * C5424) *
                C32691 +
            (C23722 * C32905 + C23723 * C5426 + C21862 * C32935 +
             C21863 * C5425 + (C21496 + C21495) * C32948 +
             (C21494 + C21493) * C5424) *
                C15051) *
               C32603 * C471) *
              C472 +
          (((C21858 * C5424 + C21859 * C32948 + C23234 * C5425 +
             C23235 * C32935 + (C20838 + C20837) * C5426 +
             (C20836 + C20835) * C32905) *
                C15051 +
            (C21475 * C5424 + C21476 * C32948 + (C21312 + C21311) * C5425 +
             (C21310 + C21309) * C32935 +
             (C20430 * C251 + C20428 * C269 + C20431 * C1494 + C32731 * C1495) *
                 C5426 +
             (C20430 * C270 + C20428 * C281 + C20431 * C1496 + C32731 * C1497) *
                 C32905) *
                C32691) *
               C32603 * C471 -
           (((C20835 + C20836) * C32905 + (C20837 + C20838) * C5426 +
             C23722 * C32935 + C23723 * C5425 + C21862 * C32948 +
             C21863 * C5424) *
                C32691 +
            ((C20476 + C20475) * C32905 + (C20474 + C20473) * C5426 +
             (C20472 + C20471) * C32935 + (C20470 + C20469) * C5425 +
             (C20468 + C20467) * C32948 + (C20466 + C20465) * C5424) *
                C15051) *
               C32603 * C470) *
              C473)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C20430 * C119 + C20428 * C126 + C20431 * C352 + C32731 * C367) *
                 C6200 +
             (C20430 * C127 + C20428 * C140 + C20431 * C366 + C32731 * C382) *
                 C32542) *
                C32958 +
            ((C21493 + C21494) * C6200 + (C21495 + C21496) * C32542) * C32954 +
            C27374 * C32944 + C27381 * C32926) *
               C32603 * C470 -
           (((C27377 + C27378) * C32542 + (C27379 + C27380) * C6200) * C32926 +
            ((C21507 + C21508) * C32542 + (C21509 + C21510) * C6200) * C32944 +
            ((C21500 + C21499) * C32542 + (C21498 + C21497) * C6200) * C32954 +
            ((C21496 + C21495) * C32542 + (C21494 + C21493) * C6200) * C32958) *
               C32603 * C471) *
              C472 +
          (((C21858 * C6200 + C21859 * C32542) * C32958 +
            (C21475 * C6200 + C21476 * C32542) * C32954 +
            ((C21506 + C21505) * C6200 + (C21504 + C21503) * C32542) * C32944 +
            ((C20430 * C967 + C20428 * C977 + C20431 * C6552 + C32731 * C6553) *
                 C6200 +
             (C20430 * C978 + C20428 * C985 + C20431 * C6554 + C32731 * C6555) *
                 C32542) *
                C32926) *
               C32603 * C471 -
           (((C21503 + C21504) * C32542 + (C21505 + C21506) * C6200) * C32926 +
            (C21860 * C32542 + C21861 * C6200) * C32944 +
            (C21862 * C32542 + C21863 * C6200) * C32954 +
            ((C20468 + C20467) * C32542 + (C20466 + C20465) * C6200) * C32958) *
               C32603 * C470) *
              C473)) /
            (p * q * std::sqrt(p + q));
    d2ee[46] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C20430 * C119 + C20428 * C126 + C20431 * C352 + C32731 * C367) *
                 C5424 +
             (C20430 * C127 + C20428 * C140 + C20431 * C366 + C32731 * C382) *
                 C32948 +
             (C20465 + C20466) * C5425 + (C20467 + C20468) * C32935 +
             C20481 * C5426 + C20482 * C32905) *
                C15051 +
            ((C21493 + C21494) * C5424 + (C21495 + C21496) * C32948 +
             C21858 * C5425 + C21859 * C32935 + C23234 * C5426 +
             C23235 * C32905) *
                C32691) *
               C584 -
           (((C23926 + C23927) * C32905 + (C23928 + C23929) * C5426 +
             (C22078 + C22079) * C32935 + (C22080 + C22081) * C5425 +
             (C22296 + C22297) * C32948 + (C22298 + C22299) * C5424) *
                C32691 +
            ((C21005 + C21006) * C32905 + (C21007 + C21008) * C5426 +
             (C21009 + C21010) * C32935 + (C21011 + C21012) * C5425 +
             (C20431 * C369 + C32731 * C383 + C20430 * C366 + C20428 * C382) *
                 C32948 +
             (C20431 * C353 + C32731 * C368 + C20430 * C352 + C20428 * C367) *
                 C5424) *
                C15051) *
               C585) *
              C470 +
          ((((C22299 + C22298) * C5424 + (C22297 + C22296) * C32948 +
             (C22081 + C22080) * C5425 + (C22079 + C22078) * C32935 +
             (C23929 + C23928) * C5426 + (C23927 + C23926) * C32905) *
                C15051 +
            ((C22295 + C22294) * C5424 + (C22293 + C22292) * C32948 +
             (C22077 + C22076) * C5425 + (C22075 + C22074) * C32935 +
             (C20430 * C1150 + C20428 * C1160 + C20431 * C1158 +
              C32731 * C1175) *
                 C5426 +
             (C20430 * C1159 + C20428 * C1177 + C20431 * C1176 +
              C32731 * C1185) *
                 C32905) *
                C32691) *
               C585 -
           (((C21309 + C21310) * C32905 + (C21311 + C21312) * C5426 +
             C21860 * C32935 + C21861 * C5425 + (C21500 + C21499) * C32948 +
             (C21498 + C21497) * C5424) *
                C32691 +
            (C23722 * C32905 + C23723 * C5426 + C21862 * C32935 +
             C21863 * C5425 + (C21496 + C21495) * C32948 +
             (C21494 + C21493) * C5424) *
                C15051) *
               C584) *
              C471) *
         C32577) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C20430 * C119 + C20428 * C126 + C20431 * C352 + C32731 * C367) *
                 C6200 +
             (C20430 * C127 + C20428 * C140 + C20431 * C366 + C32731 * C382) *
                 C32542) *
                C32958 +
            ((C21493 + C21494) * C6200 + (C21495 + C21496) * C32542) * C32954 +
            C27374 * C32944 + C27381 * C32926) *
               C584 -
           (((C27878 + C27879) * C32542 + (C27880 + C27881) * C6200) * C32926 +
            ((C22292 + C22293) * C32542 + (C22294 + C22295) * C6200) * C32944 +
            ((C22296 + C22297) * C32542 + (C22298 + C22299) * C6200) * C32954 +
            ((C20431 * C369 + C32731 * C383 + C20430 * C366 + C20428 * C382) *
                 C32542 +
             (C20431 * C353 + C32731 * C368 + C20430 * C352 + C20428 * C367) *
                 C6200) *
                C32958) *
               C585) *
              C470 +
          ((((C22299 + C22298) * C6200 + (C22297 + C22296) * C32542) * C32958 +
            ((C22295 + C22294) * C6200 + (C22293 + C22292) * C32542) * C32954 +
            ((C27881 + C27880) * C6200 + (C27879 + C27878) * C32542) * C32944 +
            ((C20430 * C6358 + C20428 * C6362 + C20431 * C6360 +
              C32731 * C6365) *
                 C6200 +
             (C20430 * C6361 + C20428 * C6367 + C20431 * C6366 +
              C32731 * C6369) *
                 C32542) *
                C32926) *
               C585 -
           (((C27377 + C27378) * C32542 + (C27379 + C27380) * C6200) * C32926 +
            ((C21507 + C21508) * C32542 + (C21509 + C21510) * C6200) * C32944 +
            ((C21500 + C21499) * C32542 + (C21498 + C21497) * C6200) * C32954 +
            ((C21496 + C21495) * C32542 + (C21494 + C21493) * C6200) * C32958) *
               C584) *
              C471) *
         C32577) /
            (p * q * std::sqrt(p + q));
    d2ee[47] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C20430 * C119 + C20428 * C126 + C20431 * C352 + C32731 * C367) *
                C5424 +
            (C20430 * C127 + C20428 * C140 + C20431 * C366 + C32731 * C382) *
                C32948 +
            (C20465 + C20466) * C5425 + (C20467 + C20468) * C32935 +
            C20481 * C5426 + C20482 * C32905) *
               C15051 +
           ((C21493 + C21494) * C5424 + (C21495 + C21496) * C32948 +
            C21858 * C5425 + C21859 * C32935 + C23234 * C5426 +
            C23235 * C32905) *
               C32691) *
              C32603 * C239 -
          (((C21309 + C21310) * C32905 + (C21311 + C21312) * C5426 +
            C21860 * C32935 + C21861 * C5425 + (C21500 + C21499) * C32948 +
            (C21498 + C21497) * C5424) *
               C32691 +
           (C23722 * C32905 + C23723 * C5426 + C21862 * C32935 +
            C21863 * C5425 + (C21496 + C21495) * C32948 +
            (C21494 + C21493) * C5424) *
               C15051) *
              C32603 * C240 +
          ((C21511 * C5424 + C21512 * C32948 + C21475 * C5425 +
            C21476 * C32935 + (C21312 + C21311) * C5426 +
            (C21310 + C21309) * C32905) *
               C15051 +
           ((C21510 + C21509) * C5424 + (C21508 + C21507) * C32948 +
            (C21506 + C21505) * C5425 + (C21504 + C21503) * C32935 +
            (C20430 * C963 + C20428 * C970 + C20431 * C1670 + C32731 * C1675) *
                C5426 +
            (C20430 * C969 + C20428 * C981 + C20431 * C1676 + C32731 * C1679) *
                C32905) *
               C32691) *
              C32603 * C241) *
         C32577) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C20430 * C119 + C20428 * C126 + C20431 * C352 + C32731 * C367) *
                C5424 +
            (C20430 * C127 + C20428 * C140 + C20431 * C366 + C32731 * C382) *
                C32948 +
            (C20465 + C20466) * C5425 + (C20467 + C20468) * C32935 +
            C20481 * C5426 + C20482 * C32905) *
               C15051 +
           ((C21493 + C21494) * C5424 + (C21495 + C21496) * C32948 +
            C21858 * C5425 + C21859 * C32935 + C23234 * C5426 +
            C23235 * C32905) *
               C32691) *
              C32603 * C32589 * C110 -
          (((C20835 + C20836) * C32905 + (C20837 + C20838) * C5426 +
            C23722 * C32935 + C23723 * C5425 + C21862 * C32948 +
            C21863 * C5424) *
               C32691 +
           ((C20476 + C20475) * C32905 + (C20474 + C20473) * C5426 +
            (C20472 + C20471) * C32935 + (C20470 + C20469) * C5425 +
            (C20468 + C20467) * C32948 + (C20466 + C20465) * C5424) *
               C15051) *
              C32603 * C32589 * C111 +
          ((C20481 * C5424 + C20482 * C32948 + C20483 * C5425 +
            C20484 * C32935 + (C20480 + C20479) * C5426 +
            (C20478 + C20477) * C32905) *
               C15051 +
           (C23234 * C5424 + C23235 * C32948 + (C20838 + C20837) * C5425 +
            (C20836 + C20835) * C32935 +
            (C20430 * C243 + C20428 * C254 + C20431 * C700 + C32731 * C709) *
                C5426 +
            (C20430 * C253 + C20428 * C273 + C20431 * C710 + C32731 * C715) *
                C32905) *
               C32691) *
              C32603 * C32589 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C20430 * C119 + C20428 * C126 + C20431 * C352 + C32731 * C367) *
                C5424 +
            (C20430 * C127 + C20428 * C140 + C20431 * C366 + C32731 * C382) *
                C32948 +
            (C20465 + C20466) * C5425 + (C20467 + C20468) * C32935 +
            C20481 * C5426 + C20482 * C32905) *
               C15051 +
           ((C21493 + C21494) * C5424 + (C21495 + C21496) * C32948 +
            C21858 * C5425 + C21859 * C32935 + C23234 * C5426 +
            C23235 * C32905) *
               C32691) *
              C345 -
          (((C23926 + C23927) * C32905 + (C23928 + C23929) * C5426 +
            (C22078 + C22079) * C32935 + (C22080 + C22081) * C5425 +
            (C22296 + C22297) * C32948 + (C22298 + C22299) * C5424) *
               C32691 +
           ((C21005 + C21006) * C32905 + (C21007 + C21008) * C5426 +
            (C21009 + C21010) * C32935 + (C21011 + C21012) * C5425 +
            (C20431 * C369 + C32731 * C383 + C20430 * C366 + C20428 * C382) *
                C32948 +
            (C20431 * C353 + C32731 * C368 + C20430 * C352 + C20428 * C367) *
                C5424) *
               C15051) *
              C346 +
          (((C20430 * C353 + C20428 * C368 + C20431 * C2100 + C32731 * C2109) *
                C5424 +
            (C20430 * C369 + C20428 * C383 + C20431 * C2108 + C32731 * C2118) *
                C32948 +
            (C20430 * C354 + C20428 * C370 + C20431 * C2099 + C32731 * C2107) *
                C5425 +
            (C20430 * C371 + C20428 * C384 + C20431 * C2106 + C32731 * C2117) *
                C32935 +
            (C20430 * C355 + C20428 * C372 + C20431 * C2098 + C32731 * C2105) *
                C5426 +
            (C20430 * C373 + C20428 * C385 + C20431 * C2104 + C32731 * C2116) *
                C32905) *
               C15051 +
           ((C20430 * C1153 + C20428 * C1165 + C20431 * C2640 +
             C32731 * C2643) *
                C5424 +
            (C20430 * C1166 + C20428 * C1180 + C20431 * C2644 +
             C32731 * C2649) *
                C32948 +
            (C20430 * C1154 + C20428 * C1167 + C20431 * C2641 +
             C32731 * C2645) *
                C5425 +
            (C20430 * C1168 + C20428 * C1181 + C20431 * C2646 +
             C32731 * C2650) *
                C32935 +
            (C20430 * C1155 + C20428 * C1169 + C20431 * C2642 +
             C32731 * C2647) *
                C5426 +
            (C20430 * C1170 + C20428 * C1182 + C20431 * C2648 +
             C32731 * C2651) *
                C32905) *
               C32691) *
              C347) *
         C32589 * C32577) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C20430 * C119 + C20428 * C126 + C20431 * C352 + C32731 * C367) *
                C6200 +
            (C20430 * C127 + C20428 * C140 + C20431 * C366 + C32731 * C382) *
                C32542) *
               C32958 +
           ((C21493 + C21494) * C6200 + (C21495 + C21496) * C32542) * C32954 +
           (C21511 * C6200 + C21512 * C32542) * C32944 +
           ((C21510 + C21509) * C6200 + (C21508 + C21507) * C32542) * C32926) *
              C32603 * C32589 * C110 -
          (((C21503 + C21504) * C32542 + (C21505 + C21506) * C6200) * C32926 +
           (C21860 * C32542 + C21861 * C6200) * C32944 +
           (C21862 * C32542 + C21863 * C6200) * C32954 +
           ((C20468 + C20467) * C32542 + (C20466 + C20465) * C6200) * C32958) *
              C32603 * C32589 * C111 +
          ((C20481 * C6200 + C20482 * C32542) * C32958 +
           (C23234 * C6200 + C23235 * C32542) * C32954 +
           ((C21312 + C21311) * C6200 + (C21310 + C21309) * C32542) * C32944 +
           ((C20430 * C963 + C20428 * C970 + C20431 * C1670 + C32731 * C1675) *
                C6200 +
            (C20430 * C969 + C20428 * C981 + C20431 * C1676 + C32731 * C1679) *
                C32542) *
               C32926) *
              C32603 * C32589 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C20430 * C119 + C20428 * C126 + C20431 * C352 + C32731 * C367) *
                C6200 +
            (C20430 * C127 + C20428 * C140 + C20431 * C366 + C32731 * C382) *
                C32542) *
               C32958 +
           ((C21493 + C21494) * C6200 + (C21495 + C21496) * C32542) * C32954 +
           C27374 * C32944 + C27381 * C32926) *
              C32603 * C239 -
          (((C27377 + C27378) * C32542 + (C27379 + C27380) * C6200) * C32926 +
           ((C21507 + C21508) * C32542 + (C21509 + C21510) * C6200) * C32944 +
           ((C21500 + C21499) * C32542 + (C21498 + C21497) * C6200) * C32954 +
           ((C21496 + C21495) * C32542 + (C21494 + C21493) * C6200) * C32958) *
              C32603 * C240 +
          (C27374 * C32958 + C27381 * C32954 +
           ((C27380 + C27379) * C6200 + (C27378 + C27377) * C32542) * C32944 +
           ((C20430 * C6263 + C20428 * C6266 + C20431 * C6638 +
             C32731 * C6639) *
                C6200 +
            (C20430 * C6265 + C20428 * C6269 + C20431 * C6640 +
             C32731 * C6641) *
                C32542) *
               C32926) *
              C32603 * C241) *
         C32577) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C20430 * C119 + C20428 * C126 + C20431 * C352 + C32731 * C367) *
                C6200 +
            (C20430 * C127 + C20428 * C140 + C20431 * C366 + C32731 * C382) *
                C32542) *
               C32958 +
           ((C21493 + C21494) * C6200 + (C21495 + C21496) * C32542) * C32954 +
           C27374 * C32944 + C27381 * C32926) *
              C345 -
          (((C20431 * C6364 + C32731 * C6368 + C20430 * C1672 +
             C20428 * C1677) *
                C32542 +
            (C20431 * C6359 + C32731 * C6363 + C20430 * C1668 +
             C20428 * C1671) *
                C6200) *
               C32926 +
           ((C22292 + C22293) * C32542 + (C22294 + C22295) * C6200) * C32944 +
           ((C22296 + C22297) * C32542 + (C22298 + C22299) * C6200) * C32954 +
           ((C20431 * C369 + C32731 * C383 + C20430 * C366 + C20428 * C382) *
                C32542 +
            (C20431 * C353 + C32731 * C368 + C20430 * C352 + C20428 * C367) *
                C6200) *
               C32958) *
              C346 +
          (((C20430 * C353 + C20428 * C368 + C20431 * C2100 + C32731 * C2109) *
                C6200 +
            (C20430 * C369 + C20428 * C383 + C20431 * C2108 + C32731 * C2118) *
                C32542) *
               C32958 +
           ((C20430 * C1153 + C20428 * C1165 + C20431 * C2640 +
             C32731 * C2643) *
                C6200 +
            (C20430 * C1166 + C20428 * C1180 + C20431 * C2644 +
             C32731 * C2649) *
                C32542) *
               C32954 +
           ((C20430 * C1156 + C20428 * C1171 + C20431 * C7053 +
             C32731 * C7057) *
                C6200 +
            (C20430 * C1172 + C20428 * C1183 + C20431 * C7056 +
             C32731 * C7062) *
                C32542) *
               C32944 +
           ((C20430 * C6359 + C20428 * C6363 + C20431 * C7529 +
             C32731 * C7530) *
                C6200 +
            (C20430 * C6364 + C20428 * C6368 + C20431 * C7531 +
             C32731 * C7532) *
                C32542) *
               C32926) *
              C347) *
         C32589 * C32577) /
            (p * q * std::sqrt(p + q));
    d2ee[48] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C20430 * C119 + C20428 * C126 + C20431 * C352 + C32731 * C367) *
                 C5424 +
             (C20430 * C127 + C20428 * C140 + C20431 * C366 + C32731 * C382) *
                 C32948 +
             (C20465 + C20466) * C5425 + (C20467 + C20468) * C32935 +
             C20481 * C5426 + C20482 * C32905) *
                C15051 +
            ((C21493 + C21494) * C5424 + (C21495 + C21496) * C32948 +
             C21858 * C5425 + C21859 * C32935 + C23234 * C5426 +
             C23235 * C32905) *
                C32691) *
               C584 -
           (((C23926 + C23927) * C32905 + (C23928 + C23929) * C5426 +
             (C22078 + C22079) * C32935 + (C22080 + C22081) * C5425 +
             (C22296 + C22297) * C32948 + (C22298 + C22299) * C5424) *
                C32691 +
            ((C21005 + C21006) * C32905 + (C21007 + C21008) * C5426 +
             (C21009 + C21010) * C32935 + (C21011 + C21012) * C5425 +
             (C20431 * C369 + C32731 * C383 + C20430 * C366 + C20428 * C382) *
                 C32948 +
             (C20431 * C353 + C32731 * C368 + C20430 * C352 + C20428 * C367) *
                 C5424) *
                C15051) *
               C585) *
              C32589 * C472 +
          ((((C21012 + C21011) * C5424 + (C21010 + C21009) * C32948 +
             (C21008 + C21007) * C5425 + (C21006 + C21005) * C32935 +
             (C21004 + C21003) * C5426 + (C21002 + C21001) * C32905) *
                C15051 +
            ((C22081 + C22080) * C5424 + (C22079 + C22078) * C32948 +
             (C23929 + C23928) * C5425 + (C23927 + C23926) * C32935 +
             (C20430 * C699 + C20428 * C707 + C20431 * C2268 + C32731 * C2269) *
                 C5426 +
             (C20430 * C708 + C20428 * C714 + C20431 * C2270 + C32731 * C2271) *
                 C32905) *
                C32691) *
               C585 -
           (((C20835 + C20836) * C32905 + (C20837 + C20838) * C5426 +
             C23722 * C32935 + C23723 * C5425 + C21862 * C32948 +
             C21863 * C5424) *
                C32691 +
            ((C20476 + C20475) * C32905 + (C20474 + C20473) * C5426 +
             (C20472 + C20471) * C32935 + (C20470 + C20469) * C5425 +
             (C20468 + C20467) * C32948 + (C20466 + C20465) * C5424) *
                C15051) *
               C584) *
              C32589 * C473)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C20430 * C119 + C20428 * C126 + C20431 * C352 + C32731 * C367) *
                 C6200 +
             (C20430 * C127 + C20428 * C140 + C20431 * C366 + C32731 * C382) *
                 C32542) *
                C32958 +
            ((C21493 + C21494) * C6200 + (C21495 + C21496) * C32542) * C32954 +
            C27374 * C32944 + C27381 * C32926) *
               C584 -
           (((C20431 * C6364 + C32731 * C6368 + C20430 * C1672 +
              C20428 * C1677) *
                 C32542 +
             (C20431 * C6359 + C32731 * C6363 + C20430 * C1668 +
              C20428 * C1671) *
                 C6200) *
                C32926 +
            ((C22292 + C22293) * C32542 + (C22294 + C22295) * C6200) * C32944 +
            ((C22296 + C22297) * C32542 + (C22298 + C22299) * C6200) * C32954 +
            ((C20431 * C369 + C32731 * C383 + C20430 * C366 + C20428 * C382) *
                 C32542 +
             (C20431 * C353 + C32731 * C368 + C20430 * C352 + C20428 * C367) *
                 C6200) *
                C32958) *
               C585) *
              C32589 * C472 +
          ((((C21012 + C21011) * C6200 + (C21010 + C21009) * C32542) * C32958 +
            ((C22081 + C22080) * C6200 + (C22079 + C22078) * C32542) * C32954 +
            ((C22077 + C22076) * C6200 + (C22075 + C22074) * C32542) * C32944 +
            ((C20430 * C1669 + C20428 * C1673 + C20431 * C7211 +
              C32731 * C7212) *
                 C6200 +
             (C20430 * C1674 + C20428 * C1678 + C20431 * C7213 +
              C32731 * C7214) *
                 C32542) *
                C32926) *
               C585 -
           (((C21503 + C21504) * C32542 + (C21505 + C21506) * C6200) * C32926 +
            (C21860 * C32542 + C21861 * C6200) * C32944 +
            (C21862 * C32542 + C21863 * C6200) * C32954 +
            ((C20468 + C20467) * C32542 + (C20466 + C20465) * C6200) * C32958) *
               C584) *
              C32589 * C473)) /
            (p * q * std::sqrt(p + q));
    d2ee[49] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C20430 * C119 + C20428 * C126 + C20431 * C352 + C32731 * C367) *
                C5424 +
            (C20430 * C127 + C20428 * C140 + C20431 * C366 + C32731 * C382) *
                C32948 +
            (C20465 + C20466) * C5425 + (C20467 + C20468) * C32935 +
            C20481 * C5426 + C20482 * C32905) *
               C15051 +
           ((C21493 + C21494) * C5424 + (C21495 + C21496) * C32948 +
            C21858 * C5425 + C21859 * C32935 + C23234 * C5426 +
            C23235 * C32905) *
               C32691) *
              C32603 * C32589 * C110 -
          (((C20835 + C20836) * C32905 + (C20837 + C20838) * C5426 +
            C23722 * C32935 + C23723 * C5425 + C21862 * C32948 +
            C21863 * C5424) *
               C32691 +
           ((C20476 + C20475) * C32905 + (C20474 + C20473) * C5426 +
            (C20472 + C20471) * C32935 + (C20470 + C20469) * C5425 +
            (C20468 + C20467) * C32948 + (C20466 + C20465) * C5424) *
               C15051) *
              C32603 * C32589 * C111 +
          ((C20481 * C5424 + C20482 * C32948 + C20483 * C5425 +
            C20484 * C32935 + (C20480 + C20479) * C5426 +
            (C20478 + C20477) * C32905) *
               C15051 +
           (C23234 * C5424 + C23235 * C32948 + (C20838 + C20837) * C5425 +
            (C20836 + C20835) * C32935 +
            (C20430 * C243 + C20428 * C254 + C20431 * C700 + C32731 * C709) *
                C5426 +
            (C20430 * C253 + C20428 * C273 + C20431 * C710 + C32731 * C715) *
                C32905) *
               C32691) *
              C32603 * C32589 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C20430 * C119 + C20428 * C126 + C20431 * C352 + C32731 * C367) *
                C5424 +
            (C20430 * C127 + C20428 * C140 + C20431 * C366 + C32731 * C382) *
                C32948 +
            (C20465 + C20466) * C5425 + (C20467 + C20468) * C32935 +
            C20481 * C5426 + C20482 * C32905) *
               C15051 +
           ((C21493 + C21494) * C5424 + (C21495 + C21496) * C32948 +
            C21858 * C5425 + C21859 * C32935 + C23234 * C5426 +
            C23235 * C32905) *
               C32691) *
              C32603 * C239 -
          (((C21309 + C21310) * C32905 + (C21311 + C21312) * C5426 +
            C21860 * C32935 + C21861 * C5425 + (C21500 + C21499) * C32948 +
            (C21498 + C21497) * C5424) *
               C32691 +
           (C23722 * C32905 + C23723 * C5426 + C21862 * C32935 +
            C21863 * C5425 + (C21496 + C21495) * C32948 +
            (C21494 + C21493) * C5424) *
               C15051) *
              C32603 * C240 +
          ((C21511 * C5424 + C21512 * C32948 + C21475 * C5425 +
            C21476 * C32935 + (C21312 + C21311) * C5426 +
            (C21310 + C21309) * C32905) *
               C15051 +
           ((C21510 + C21509) * C5424 + (C21508 + C21507) * C32948 +
            (C21506 + C21505) * C5425 + (C21504 + C21503) * C32935 +
            (C20430 * C963 + C20428 * C970 + C20431 * C1670 + C32731 * C1675) *
                C5426 +
            (C20430 * C969 + C20428 * C981 + C20431 * C1676 + C32731 * C1679) *
                C32905) *
               C32691) *
              C32603 * C241) *
         C32577) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C20430 * C119 + C20428 * C126 + C20431 * C352 + C32731 * C367) *
                C6200 +
            (C20430 * C127 + C20428 * C140 + C20431 * C366 + C32731 * C382) *
                C32542) *
               C32958 +
           ((C21493 + C21494) * C6200 + (C21495 + C21496) * C32542) * C32954 +
           (C21511 * C6200 + C21512 * C32542) * C32944 +
           ((C21510 + C21509) * C6200 + (C21508 + C21507) * C32542) * C32926) *
              C32603 * C32589 * C110 -
          (((C21503 + C21504) * C32542 + (C21505 + C21506) * C6200) * C32926 +
           (C21860 * C32542 + C21861 * C6200) * C32944 +
           (C21862 * C32542 + C21863 * C6200) * C32954 +
           ((C20468 + C20467) * C32542 + (C20466 + C20465) * C6200) * C32958) *
              C32603 * C32589 * C111 +
          ((C20481 * C6200 + C20482 * C32542) * C32958 +
           (C23234 * C6200 + C23235 * C32542) * C32954 +
           ((C21312 + C21311) * C6200 + (C21310 + C21309) * C32542) * C32944 +
           ((C20430 * C963 + C20428 * C970 + C20431 * C1670 + C32731 * C1675) *
                C6200 +
            (C20430 * C969 + C20428 * C981 + C20431 * C1676 + C32731 * C1679) *
                C32542) *
               C32926) *
              C32603 * C32589 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C20430 * C119 + C20428 * C126 + C20431 * C352 + C32731 * C367) *
                C6200 +
            (C20430 * C127 + C20428 * C140 + C20431 * C366 + C32731 * C382) *
                C32542) *
               C32958 +
           ((C21493 + C21494) * C6200 + (C21495 + C21496) * C32542) * C32954 +
           C27374 * C32944 + C27381 * C32926) *
              C32603 * C239 -
          (((C27377 + C27378) * C32542 + (C27379 + C27380) * C6200) * C32926 +
           ((C21507 + C21508) * C32542 + (C21509 + C21510) * C6200) * C32944 +
           ((C21500 + C21499) * C32542 + (C21498 + C21497) * C6200) * C32954 +
           ((C21496 + C21495) * C32542 + (C21494 + C21493) * C6200) * C32958) *
              C32603 * C240 +
          (C27374 * C32958 + C27381 * C32954 +
           ((C27380 + C27379) * C6200 + (C27378 + C27377) * C32542) * C32944 +
           ((C20430 * C6263 + C20428 * C6266 + C20431 * C6638 +
             C32731 * C6639) *
                C6200 +
            (C20430 * C6265 + C20428 * C6269 + C20431 * C6640 +
             C32731 * C6641) *
                C32542) *
               C32926) *
              C32603 * C241) *
         C32577) /
            (p * q * std::sqrt(p + q));
    d2ee[50] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C119 + C32644 * C126) * C31559 +
             (C113 * C127 + C32644 * C140) * C32866 + C168 * C31540 +
             C169 * C32552) *
                C7669 +
            (C7774 + C7775 + C7776 + C7777) * C7670 + C7794 * C7671 +
            C7795 * C32926) *
               C32603 * C470 -
           ((C7786 + C7787 + C7788 + C7789) * C32926 +
            (C7785 + C7784 + C7783 + C7782) * C7671 +
            (C7781 + C7780 + C7779 + C7778) * C7670 +
            (C7777 + C7776 + C7775 + C7774) * C7669) *
               C32603 * C471) *
              C472 +
          (((C8024 + C8025 + C8026 + C8027) * C7669 +
            (C8028 + C8029 + C8030 + C8031) * C7670 +
            (C8032 + C8033 + C8034 + C8035) * C7671 +
            (C6467 * C31559 + C6468 * C32866 +
             (C113 * C968 + C32644 * C979) * C31540 +
             (C113 * C980 + C32644 * C986) * C32552) *
                C32926) *
               C32603 * C471 -
           ((C8035 + C8034 + C8033 + C8032) * C32926 +
            (C8031 + C8030 + C8029 + C8028) * C7671 +
            (C8027 + C8026 + C8025 + C8024) * C7670 +
            (C171 * C32552 + C170 * C31540 + C169 * C32866 + C168 * C31559) *
                C7669) *
               C32603 * C470) *
              C473)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C119 + C32644 * C126) * C2756 +
             (C113 * C127 + C32644 * C140) * C2750 + C168 * C2757 +
             C169 * C2751 + C170 * C2758 + C171 * C2752 + C172 * C2759 +
             C173 * C32920) *
                C32885 +
            (C2859 + C2860 + C2861 + C2862 + C2863 + C2864 + C2865 + C2866) *
                C32691) *
               C32603 * C470 -
           ((C2867 + C2868 + C2869 + C2870 + C2871 + C2872 + C2873 + C2874) *
                C32691 +
            (C2866 + C2865 + C2864 + C2863 + C2862 + C2861 + C2860 + C2859) *
                C32885) *
               C32603 * C471) *
              C472 +
          (((C3103 + C3104 + C3105 + C3106 + C3107 + C3108 + C3109 + C3110) *
                C32885 +
            (C848 * C2756 + C849 * C2750 + C850 * C2757 + C851 * C2751 +
             C853 * C2758 + C852 * C2752 +
             (C113 * C252 + C32644 * C271) * C2759 +
             (C113 * C272 + C32644 * C282) * C32920) *
                C32691) *
               C32603 * C471 -
           ((C3110 + C3109 + C3108 + C3107 + C3106 + C3105 + C3104 + C3103) *
                C32691 +
            (C175 * C32920 + C174 * C2759 + C173 * C2752 + C172 * C2758 +
             C171 * C2751 + C170 * C2757 + C169 * C2750 + C168 * C2756) *
                C32885) *
               C32603 * C470) *
              C473)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C10223 * C119 + C10220 * C126 + C10224 * C352 + C10221 * C367 +
              C10225 * C353 + C32919 * C368) *
                 C31559 +
             (C10223 * C127 + C10220 * C140 + C10224 * C366 + C10221 * C382 +
              C10225 * C369 + C32919 * C383) *
                 C32866 +
             (C10263 + C10264 + C10265) * C31540 +
             (C10266 + C10267 + C10268) * C32552) *
                C32885 +
            ((C11271 + C11272 + C11273) * C31559 +
             (C11274 + C11275 + C11276) * C32866 + C12996 * C31540 +
             C12997 * C32552) *
                C32691) *
               C32603 * C470 -
           (((C11569 + C11568 + C11567) * C32552 +
             (C11566 + C11565 + C11564) * C31540 +
             (C11282 + C11281 + C11280) * C32866 +
             (C11279 + C11278 + C11277) * C31559) *
                C32691 +
            (C12998 * C32552 + C12999 * C31540 +
             (C11276 + C11275 + C11274) * C32866 +
             (C11273 + C11272 + C11271) * C31559) *
                C32885) *
               C32603 * C471) *
              C472 +
          (((C12996 * C31559 + C12997 * C32866 +
             (C10680 + C10679 + C10678) * C31540 +
             (C10677 + C10676 + C10675) * C32552) *
                C32885 +
            ((C11564 + C11565 + C11566) * C31559 +
             (C11567 + C11568 + C11569) * C32866 +
             (C10223 * C250 + C10220 * C267 + C10224 * C1150 + C10221 * C1160 +
              C10225 * C1158 + C32919 * C1175) *
                 C31540 +
             (C10223 * C268 + C10220 * C280 + C10224 * C1159 + C10221 * C1177 +
              C10225 * C1176 + C32919 * C1185) *
                 C32552) *
                C32691) *
               C32603 * C471 -
           (((C10675 + C10676 + C10677) * C32552 +
             (C10678 + C10679 + C10680) * C31540 + C12998 * C32866 +
             C12999 * C31559) *
                C32691 +
            ((C10274 + C10273 + C10272) * C32552 +
             (C10271 + C10270 + C10269) * C31540 +
             (C10268 + C10267 + C10266) * C32866 +
             (C10265 + C10264 + C10263) * C31559) *
                C32885) *
               C32603 * C470) *
              C473)) /
            (p * q * std::sqrt(p + q));
    d2ee[51] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C119 + C32644 * C126) * C31559 +
             (C113 * C127 + C32644 * C140) * C32866 + C168 * C31540 +
             C169 * C32552) *
                C7669 +
            (C7774 + C7775 + C7776 + C7777) * C7670 + C7794 * C7671 +
            C7795 * C32926) *
               C584 -
           ((C8302 + C8303 + C8304 + C8305) * C32926 +
            (C8306 + C8307 + C8308 + C8309) * C7671 +
            (C8310 + C8311 + C8312 + C8313) * C7670 +
            (C613 * C32552 + C614 * C31540 +
             (C113 * C366 + C32644 * C382) * C32866 +
             (C113 * C352 + C32644 * C367) * C31559) *
                C7669) *
               C585) *
              C470 +
          (((C8313 + C8312 + C8311 + C8310) * C7669 +
            (C8309 + C8308 + C8307 + C8306) * C7670 +
            (C8305 + C8304 + C8303 + C8302) * C7671 +
            (C6656 * C31559 + C6655 * C32866 +
             (C113 * C6552 + C32644 * C6553) * C31540 +
             (C113 * C6554 + C32644 * C6555) * C32552) *
                C32926) *
               C585 -
           ((C7786 + C7787 + C7788 + C7789) * C32926 +
            (C7785 + C7784 + C7783 + C7782) * C7671 +
            (C7781 + C7780 + C7779 + C7778) * C7670 +
            (C7777 + C7776 + C7775 + C7774) * C7669) *
               C584) *
              C471) *
         C32577) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C119 + C32644 * C126) * C2756 +
             (C113 * C127 + C32644 * C140) * C2750 + C168 * C2757 +
             C169 * C2751 + C170 * C2758 + C171 * C2752 + C172 * C2759 +
             C173 * C32920) *
                C32885 +
            (C2859 + C2860 + C2861 + C2862 + C2863 + C2864 + C2865 + C2866) *
                C32691) *
               C584 -
           ((C3377 + C3378 + C3379 + C3380 + C3381 + C3382 + C3383 + C3384) *
                C32691 +
            (C609 * C32920 + C610 * C2759 + C611 * C2752 + C612 * C2758 +
             C613 * C2751 + C614 * C2757 +
             (C113 * C366 + C32644 * C382) * C2750 +
             (C113 * C352 + C32644 * C367) * C2756) *
                C32885) *
               C585) *
              C470 +
          (((C3384 + C3383 + C3382 + C3381 + C3380 + C3379 + C3378 + C3377) *
                C32885 +
            (C1698 * C2756 + C1697 * C2750 + C1518 * C2757 + C1517 * C2751 +
             C1516 * C2758 + C1515 * C2752 +
             (C113 * C1494 + C32644 * C1495) * C2759 +
             (C113 * C1496 + C32644 * C1497) * C32920) *
                C32691) *
               C585 -
           ((C2867 + C2868 + C2869 + C2870 + C2871 + C2872 + C2873 + C2874) *
                C32691 +
            (C2866 + C2865 + C2864 + C2863 + C2862 + C2861 + C2860 + C2859) *
                C32885) *
               C584) *
              C471) *
         C32577) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C10223 * C119 + C10220 * C126 + C10224 * C352 + C10221 * C367 +
              C10225 * C353 + C32919 * C368) *
                 C31559 +
             (C10223 * C127 + C10220 * C140 + C10224 * C366 + C10221 * C382 +
              C10225 * C369 + C32919 * C383) *
                 C32866 +
             (C10263 + C10264 + C10265) * C31540 +
             (C10266 + C10267 + C10268) * C32552) *
                C32885 +
            ((C11271 + C11272 + C11273) * C31559 +
             (C11274 + C11275 + C11276) * C32866 + C12996 * C31540 +
             C12997 * C32552) *
                C32691) *
               C584 -
           (((C13206 + C13207 + C13208) * C32552 +
             (C13209 + C13210 + C13211) * C31540 +
             (C11892 + C11893 + C11894) * C32866 +
             (C11895 + C11896 + C11897) * C31559) *
                C32691 +
            ((C10863 + C10864 + C10865) * C32552 +
             (C10866 + C10867 + C10868) * C31540 +
             (C10225 * C2108 + C32919 * C2118 + C10224 * C369 + C10221 * C383 +
              C10223 * C366 + C10220 * C382) *
                 C32866 +
             (C10225 * C2100 + C32919 * C2109 + C10224 * C353 + C10221 * C368 +
              C10223 * C352 + C10220 * C367) *
                 C31559) *
                C32885) *
               C585) *
              C470 +
          ((((C11897 + C11896 + C11895) * C31559 +
             (C11894 + C11893 + C11892) * C32866 +
             (C13211 + C13210 + C13209) * C31540 +
             (C13208 + C13207 + C13206) * C32552) *
                C32885 +
            ((C11891 + C11890 + C11889) * C31559 +
             (C11888 + C11887 + C11886) * C32866 +
             (C10223 * C1151 + C10220 * C1162 + C10224 * C1157 +
              C10221 * C1173 + C10225 * C7379 + C32919 * C7380) *
                 C31540 +
             (C10223 * C1161 + C10220 * C1178 + C10224 * C1174 +
              C10221 * C1184 + C10225 * C7381 + C32919 * C7382) *
                 C32552) *
                C32691) *
               C585 -
           (((C11569 + C11568 + C11567) * C32552 +
             (C11566 + C11565 + C11564) * C31540 +
             (C11282 + C11281 + C11280) * C32866 +
             (C11279 + C11278 + C11277) * C31559) *
                C32691 +
            (C12998 * C32552 + C12999 * C31540 +
             (C11276 + C11275 + C11274) * C32866 +
             (C11273 + C11272 + C11271) * C31559) *
                C32885) *
               C584) *
              C471) *
         C32577) /
            (p * q * std::sqrt(p + q));
    d2ee[52] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C113 * C119 + C32644 * C126) * C2756 +
                (C113 * C127 + C32644 * C140) * C2750 + C168 * C2757 +
                C169 * C2751 + C170 * C2758 + C171 * C2752 + C172 * C2759 +
                C173 * C32920) *
                   C32885 +
               (C1016 * C2756 + C1017 * C2750 + C502 * C2757 + C501 * C2751 +
                C500 * C2758 + C499 * C2752 + C498 * C2759 + C497 * C32920) *
                   C32691) *
                  C32603 * C32589 * C110 -
              ((C495 * C32920 + C496 * C2759 + C497 * C2752 + C498 * C2758 +
                C499 * C2751 + C500 * C2757 + C501 * C2750 + C502 * C2756) *
                   C32691 +
               (C175 * C32920 + C174 * C2759 + C173 * C2752 + C172 * C2758 +
                C171 * C2751 + C170 * C2757 + C169 * C2750 + C168 * C2756) *
                   C32885) *
                  C32603 * C32589 * C111 +
              ((C170 * C2756 + C171 * C2750 + C172 * C2757 + C173 * C2751 +
                C174 * C2758 + C175 * C2752 + C177 * C2759 + C176 * C32920) *
                   C32885 +
               (C500 * C2756 + C499 * C2750 + C498 * C2757 + C497 * C2751 +
                C496 * C2758 + C495 * C2752 +
                (C113 * C474 + C32644 * C475) * C2759 +
                (C113 * C476 + C32644 * C477) * C32920) *
                   C32691) *
                  C32603 * C32589 * C112) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C113 * C119 + C32644 * C126) * C2756 +
                (C113 * C127 + C32644 * C140) * C2750 + C168 * C2757 +
                C169 * C2751 + C170 * C2758 + C171 * C2752 + C172 * C2759 +
                C173 * C32920) *
                   C32885 +
               (C2859 + C2860 + C2861 + C2862 + C2863 + C2864 + C2865 + C2866) *
                   C32691) *
                  C32603 * C239 -
              ((C2867 + C2868 + C2869 + C2870 + C2871 + C2872 + C2873 + C2874) *
                   C32691 +
               (C2866 + C2865 + C2864 + C2863 + C2862 + C2861 + C2860 + C2859) *
                   C32885) *
                  C32603 * C240 +
              ((C2874 + C2873 + C2872 + C2871 + C2870 + C2869 + C2868 + C2867) *
                   C32885 +
               (C1025 * C2756 + C1024 * C2750 + C1023 * C2757 + C1022 * C2751 +
                C1021 * C2758 + C1020 * C2752 +
                (C113 * C1332 + C32644 * C1333) * C2759 +
                (C113 * C1334 + C32644 * C1335) * C32920) *
                   C32691) *
                  C32603 * C241) *
             C32577) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C119 + C32644 * C126) * C2756 +
            (C113 * C127 + C32644 * C140) * C2750 + C168 * C2757 +
            C169 * C2751 + C170 * C2758 + C171 * C2752 + C172 * C2759 +
            C173 * C32920) *
               C32885 +
           (C2859 + C2860 + C2861 + C2862 + C2863 + C2864 + C2865 + C2866) *
               C32691) *
              C345 -
          (((C113 * C708 + C32644 * C714) * C32920 +
            (C113 * C699 + C32644 * C707) * C2759 + C1519 * C2752 +
            C1520 * C2758 + C1521 * C2751 + C1522 * C2757 + C1699 * C2750 +
            C1700 * C2756) *
               C32691 +
           (C609 * C32920 + C610 * C2759 + C611 * C2752 + C612 * C2758 +
            C613 * C2751 + C614 * C2757 +
            (C113 * C366 + C32644 * C382) * C2750 +
            (C113 * C352 + C32644 * C367) * C2756) *
               C32885) *
              C346 +
          (((C113 * C353 + C32644 * C368) * C2756 +
            (C113 * C369 + C32644 * C383) * C2750 +
            (C113 * C354 + C32644 * C370) * C2757 +
            (C113 * C371 + C32644 * C384) * C2751 +
            (C113 * C355 + C32644 * C372) * C2758 +
            (C113 * C373 + C32644 * C385) * C2752 +
            (C113 * C356 + C32644 * C374) * C2759 +
            (C113 * C375 + C32644 * C386) * C32920) *
               C32885 +
           ((C113 * C1153 + C32644 * C1165) * C2756 +
            (C113 * C1166 + C32644 * C1180) * C2750 +
            (C113 * C1154 + C32644 * C1167) * C2757 +
            (C113 * C1168 + C32644 * C1181) * C2751 +
            (C113 * C1155 + C32644 * C1169) * C2758 +
            (C113 * C1170 + C32644 * C1182) * C2752 +
            (C113 * C2268 + C32644 * C2269) * C2759 +
            (C113 * C2270 + C32644 * C2271) * C32920) *
               C32691) *
              C347) *
         C32589 * C32577) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C119 + C32644 * C126) * C31559 +
            (C113 * C127 + C32644 * C140) * C32866 + C168 * C31540 +
            C169 * C32552) *
               C7669 +
           (C1016 * C31559 + C1017 * C32866 + C502 * C31540 + C501 * C32552) *
               C7670 +
           (C1018 * C31559 + C1019 * C32866 + C848 * C31540 + C849 * C32552) *
               C7671 +
           (C1025 * C31559 + C1024 * C32866 + C1023 * C31540 + C1022 * C32552) *
               C32926) *
              C32603 * C32589 * C110 -
          ((C1020 * C32552 + C1021 * C31540 + C1022 * C32866 + C1023 * C31559) *
               C32926 +
           (C851 * C32552 + C850 * C31540 + C849 * C32866 + C848 * C31559) *
               C7671 +
           (C499 * C32552 + C500 * C31540 + C501 * C32866 + C502 * C31559) *
               C7670 +
           (C171 * C32552 + C170 * C31540 + C169 * C32866 + C168 * C31559) *
               C7669) *
              C32603 * C32589 * C111 +
          ((C170 * C31559 + C171 * C32866 + C172 * C31540 + C173 * C32552) *
               C7669 +
           (C500 * C31559 + C499 * C32866 + C498 * C31540 + C497 * C32552) *
               C7670 +
           (C850 * C31559 + C851 * C32866 + C853 * C31540 + C852 * C32552) *
               C7671 +
           (C1021 * C31559 + C1020 * C32866 +
            (C113 * C1332 + C32644 * C1333) * C31540 +
            (C113 * C1334 + C32644 * C1335) * C32552) *
               C32926) *
              C32603 * C32589 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C119 + C32644 * C126) * C31559 +
            (C113 * C127 + C32644 * C140) * C32866 + C168 * C31540 +
            C169 * C32552) *
               C7669 +
           (C7774 + C7775 + C7776 + C7777) * C7670 + C7794 * C7671 +
           C7795 * C32926) *
              C32603 * C239 -
          ((C7786 + C7787 + C7788 + C7789) * C32926 +
           (C7785 + C7784 + C7783 + C7782) * C7671 +
           (C7781 + C7780 + C7779 + C7778) * C7670 +
           (C7777 + C7776 + C7775 + C7774) * C7669) *
              C32603 * C240 +
          (C7794 * C7669 + C7795 * C7670 +
           (C7789 + C7788 + C7787 + C7786) * C7671 +
           (C6291 * C31559 + C6290 * C32866 +
            (C113 * C6452 + C32644 * C6453) * C31540 +
            (C113 * C6454 + C32644 * C6455) * C32552) *
               C32926) *
              C32603 * C241) *
         C32577) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C119 + C32644 * C126) * C31559 +
            (C113 * C127 + C32644 * C140) * C32866 + C168 * C31540 +
            C169 * C32552) *
               C7669 +
           (C7774 + C7775 + C7776 + C7777) * C7670 + C7794 * C7671 +
           C7795 * C32926) *
              C345 -
          (((C113 * C1674 + C32644 * C1678) * C32552 +
            (C113 * C1669 + C32644 * C1673) * C31540 + C6657 * C32866 +
            C6658 * C31559) *
               C32926 +
           (C1517 * C32552 + C1518 * C31540 + C1697 * C32866 + C1698 * C31559) *
               C7671 +
           (C1521 * C32552 + C1522 * C31540 + C1699 * C32866 + C1700 * C31559) *
               C7670 +
           (C613 * C32552 + C614 * C31540 +
            (C113 * C366 + C32644 * C382) * C32866 +
            (C113 * C352 + C32644 * C367) * C31559) *
               C7669) *
              C346 +
          (((C113 * C353 + C32644 * C368) * C31559 +
            (C113 * C369 + C32644 * C383) * C32866 +
            (C113 * C354 + C32644 * C370) * C31540 +
            (C113 * C371 + C32644 * C384) * C32552) *
               C7669 +
           ((C113 * C1153 + C32644 * C1165) * C31559 +
            (C113 * C1166 + C32644 * C1180) * C32866 +
            (C113 * C1154 + C32644 * C1167) * C31540 +
            (C113 * C1168 + C32644 * C1181) * C32552) *
               C7670 +
           ((C113 * C1156 + C32644 * C1171) * C31559 +
            (C113 * C1172 + C32644 * C1183) * C32866 +
            (C113 * C1157 + C32644 * C1173) * C31540 +
            (C113 * C1174 + C32644 * C1184) * C32552) *
               C7671 +
           ((C113 * C6359 + C32644 * C6363) * C31559 +
            (C113 * C6364 + C32644 * C6368) * C32866 +
            (C113 * C7211 + C32644 * C7212) * C31540 +
            (C113 * C7213 + C32644 * C7214) * C32552) *
               C32926) *
              C347) *
         C32589 * C32577) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C10223 * C119 + C10220 * C126 + C10224 * C352 + C10221 * C367 +
             C10225 * C353 + C32919 * C368) *
                C31559 +
            (C10223 * C127 + C10220 * C140 + C10224 * C366 + C10221 * C382 +
             C10225 * C369 + C32919 * C383) *
                C32866 +
            (C10263 + C10264 + C10265) * C31540 +
            (C10266 + C10267 + C10268) * C32552) *
               C32885 +
           ((C11271 + C11272 + C11273) * C31559 +
            (C11274 + C11275 + C11276) * C32866 +
            (C10686 + C10685 + C10684) * C31540 +
            (C10683 + C10682 + C10681) * C32552) *
               C32691) *
              C32603 * C32589 * C110 -
          (((C10675 + C10676 + C10677) * C32552 +
            (C10678 + C10679 + C10680) * C31540 +
            (C10681 + C10682 + C10683) * C32866 +
            (C10684 + C10685 + C10686) * C31559) *
               C32691 +
           ((C10274 + C10273 + C10272) * C32552 +
            (C10271 + C10270 + C10269) * C31540 +
            (C10268 + C10267 + C10266) * C32866 +
            (C10265 + C10264 + C10263) * C31559) *
               C32885) *
              C32603 * C32589 * C111 +
          ((C10283 * C31559 + C10284 * C32866 +
            (C10280 + C10279 + C10278) * C31540 +
            (C10277 + C10276 + C10275) * C32552) *
               C32885 +
           ((C10680 + C10679 + C10678) * C31559 +
            (C10677 + C10676 + C10675) * C32866 +
            (C10223 * C244 + C10220 * C256 + C10224 * C699 + C10221 * C707 +
             C10225 * C2268 + C32919 * C2269) *
                C31540 +
            (C10223 * C255 + C10220 * C274 + C10224 * C708 + C10221 * C714 +
             C10225 * C2270 + C32919 * C2271) *
                C32552) *
               C32691) *
              C32603 * C32589 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C10223 * C119 + C10220 * C126 + C10224 * C352 + C10221 * C367 +
             C10225 * C353 + C32919 * C368) *
                C31559 +
            (C10223 * C127 + C10220 * C140 + C10224 * C366 + C10221 * C382 +
             C10225 * C369 + C32919 * C383) *
                C32866 +
            (C10263 + C10264 + C10265) * C31540 +
            (C10266 + C10267 + C10268) * C32552) *
               C32885 +
           ((C11271 + C11272 + C11273) * C31559 +
            (C11274 + C11275 + C11276) * C32866 +
            (C10686 + C10685 + C10684) * C31540 +
            (C10683 + C10682 + C10681) * C32552) *
               C32691) *
              C32603 * C239 -
          (((C11569 + C11568 + C11567) * C32552 +
            (C11566 + C11565 + C11564) * C31540 +
            (C11282 + C11281 + C11280) * C32866 +
            (C11279 + C11278 + C11277) * C31559) *
               C32691 +
           ((C10681 + C10682 + C10683) * C32552 +
            (C10684 + C10685 + C10686) * C31540 +
            (C11276 + C11275 + C11274) * C32866 +
            (C11273 + C11272 + C11271) * C31559) *
               C32885) *
              C32603 * C240 +
          ((C11291 * C31559 + C11292 * C32866 +
            (C11564 + C11565 + C11566) * C31540 +
            (C11567 + C11568 + C11569) * C32552) *
               C32885 +
           ((C11288 + C11287 + C11286) * C31559 +
            (C11285 + C11284 + C11283) * C32866 +
            (C10223 * C964 + C10220 * C972 + C10224 * C1669 + C10221 * C1673 +
             C10225 * C7211 + C32919 * C7212) *
                C31540 +
            (C10223 * C971 + C10220 * C982 + C10224 * C1674 + C10221 * C1678 +
             C10225 * C7213 + C32919 * C7214) *
                C32552) *
               C32691) *
              C32603 * C241) *
         C32577) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C10223 * C119 + C10220 * C126 + C10224 * C352 + C10221 * C367 +
             C10225 * C353 + C32919 * C368) *
                C31559 +
            (C10223 * C127 + C10220 * C140 + C10224 * C366 + C10221 * C382 +
             C10225 * C369 + C32919 * C383) *
                C32866 +
            (C10263 + C10264 + C10265) * C31540 +
            (C10266 + C10267 + C10268) * C32552) *
               C32885 +
           ((C11271 + C11272 + C11273) * C31559 +
            (C11274 + C11275 + C11276) * C32866 +
            (C10686 + C10685 + C10684) * C31540 +
            (C10683 + C10682 + C10681) * C32552) *
               C32691) *
              C345 -
          (((C10225 * C2646 + C32919 * C2650 + C10224 * C1168 + C10221 * C1181 +
             C10223 * C704 + C10220 * C712) *
                C32552 +
            (C10225 * C2641 + C32919 * C2645 + C10224 * C1154 + C10221 * C1167 +
             C10223 * C697 + C10220 * C703) *
                C31540 +
            (C11892 + C11893 + C11894) * C32866 +
            (C11895 + C11896 + C11897) * C31559) *
               C32691 +
           ((C10863 + C10864 + C10865) * C32552 +
            (C10866 + C10867 + C10868) * C31540 +
            (C10225 * C2108 + C32919 * C2118 + C10224 * C369 + C10221 * C383 +
             C10223 * C366 + C10220 * C382) *
                C32866 +
            (C10225 * C2100 + C32919 * C2109 + C10224 * C353 + C10221 * C368 +
             C10223 * C352 + C10220 * C367) *
                C31559) *
               C32885) *
              C346 +
          (((C10223 * C353 + C10220 * C368 + C10224 * C2100 + C10221 * C2109 +
             C10225 * C2101 + C32919 * C2110) *
                C31559 +
            (C10223 * C369 + C10220 * C383 + C10224 * C2108 + C10221 * C2118 +
             C10225 * C2111 + C32919 * C2119) *
                C32866 +
            (C10223 * C354 + C10220 * C370 + C10224 * C2099 + C10221 * C2107 +
             C10225 * C2102 + C32919 * C2112) *
                C31540 +
            (C10223 * C371 + C10220 * C384 + C10224 * C2106 + C10221 * C2117 +
             C10225 * C2113 + C32919 * C2120) *
                C32552) *
               C32885 +
           ((C10223 * C1153 + C10220 * C1165 + C10224 * C2640 + C10221 * C2643 +
             C10225 * C7054 + C32919 * C7058) *
                C31559 +
            (C10223 * C1166 + C10220 * C1180 + C10224 * C2644 + C10221 * C2649 +
             C10225 * C7059 + C32919 * C7063) *
                C32866 +
            (C10223 * C1154 + C10220 * C1167 + C10224 * C2641 + C10221 * C2645 +
             C10225 * C12183 + C32919 * C12184) *
                C31540 +
            (C10223 * C1168 + C10220 * C1181 + C10224 * C2646 + C10221 * C2650 +
             C10225 * C12185 + C32919 * C12186) *
                C32552) *
               C32691) *
              C347) *
         C32589 * C32577) /
            (p * q * std::sqrt(p + q));
    d2ee[53] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C119 + C32644 * C126) * C31559 +
             (C113 * C127 + C32644 * C140) * C32866 + C168 * C31540 +
             C169 * C32552) *
                C7669 +
            (C7774 + C7775 + C7776 + C7777) * C7670 + C7794 * C7671 +
            C7795 * C32926) *
               C584 -
           ((C8170 * C32552 + C8171 * C31540 + C6657 * C32866 +
             C6658 * C31559) *
                C32926 +
            (C1517 * C32552 + C1518 * C31540 + C1697 * C32866 +
             C1698 * C31559) *
                C7671 +
            (C1521 * C32552 + C1522 * C31540 + C1699 * C32866 +
             C1700 * C31559) *
                C7670 +
            (C613 * C32552 + C614 * C31540 +
             (C113 * C366 + C32644 * C382) * C32866 +
             (C113 * C352 + C32644 * C367) * C31559) *
                C7669) *
               C585) *
              C32589 * C472 +
          (((C614 * C31559 + C613 * C32866 + C612 * C31540 + C611 * C32552) *
                C7669 +
            (C1522 * C31559 + C1521 * C32866 + C1520 * C31540 +
             C1519 * C32552) *
                C7670 +
            (C1518 * C31559 + C1517 * C32866 + C1516 * C31540 +
             C1515 * C32552) *
                C7671 +
            (C8171 * C31559 + C8170 * C32866 +
             (C113 * C1670 + C32644 * C1675) * C31540 +
             (C113 * C1676 + C32644 * C1679) * C32552) *
                C32926) *
               C585 -
           ((C8035 + C8034 + C8033 + C8032) * C32926 +
            (C8031 + C8030 + C8029 + C8028) * C7671 +
            (C8027 + C8026 + C8025 + C8024) * C7670 +
            (C171 * C32552 + C170 * C31540 + C169 * C32866 + C168 * C31559) *
                C7669) *
               C584) *
              C32589 * C473)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C119 + C32644 * C126) * C2756 +
             (C113 * C127 + C32644 * C140) * C2750 + C168 * C2757 +
             C169 * C2751 + C170 * C2758 + C171 * C2752 + C172 * C2759 +
             C173 * C32920) *
                C32885 +
            (C2859 + C2860 + C2861 + C2862 + C2863 + C2864 + C2865 + C2866) *
                C32691) *
               C584 -
           ((C3245 * C32920 + C3246 * C2759 + C1519 * C2752 + C1520 * C2758 +
             C1521 * C2751 + C1522 * C2757 + C1699 * C2750 + C1700 * C2756) *
                C32691 +
            (C609 * C32920 + C610 * C2759 + C611 * C2752 + C612 * C2758 +
             C613 * C2751 + C614 * C2757 +
             (C113 * C366 + C32644 * C382) * C2750 +
             (C113 * C352 + C32644 * C367) * C2756) *
                C32885) *
               C585) *
              C32589 * C472 +
          (((C614 * C2756 + C613 * C2750 + C612 * C2757 + C611 * C2751 +
             C610 * C2758 + C609 * C2752 + C608 * C2759 + C607 * C32920) *
                C32885 +
            (C1522 * C2756 + C1521 * C2750 + C1520 * C2757 + C1519 * C2751 +
             C3246 * C2758 + C3245 * C2752 +
             (C113 * C700 + C32644 * C709) * C2759 +
             (C113 * C710 + C32644 * C715) * C32920) *
                C32691) *
               C585 -
           ((C3110 + C3109 + C3108 + C3107 + C3106 + C3105 + C3104 + C3103) *
                C32691 +
            (C175 * C32920 + C174 * C2759 + C173 * C2752 + C172 * C2758 +
             C171 * C2751 + C170 * C2757 + C169 * C2750 + C168 * C2756) *
                C32885) *
               C584) *
              C32589 * C473)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C10223 * C119 + C10220 * C126 + C10224 * C352 + C10221 * C367 +
              C10225 * C353 + C32919 * C368) *
                 C31559 +
             (C10223 * C127 + C10220 * C140 + C10224 * C366 + C10221 * C382 +
              C10225 * C369 + C32919 * C383) *
                 C32866 +
             (C10263 + C10264 + C10265) * C31540 +
             (C10266 + C10267 + C10268) * C32552) *
                C32885 +
            ((C11271 + C11272 + C11273) * C31559 +
             (C11274 + C11275 + C11276) * C32866 + C12996 * C31540 +
             C12997 * C32552) *
                C32691) *
               C584 -
           (((C13206 + C13207 + C13208) * C32552 +
             (C13209 + C13210 + C13211) * C31540 +
             (C11892 + C11893 + C11894) * C32866 +
             (C11895 + C11896 + C11897) * C31559) *
                C32691 +
            ((C10863 + C10864 + C10865) * C32552 +
             (C10866 + C10867 + C10868) * C31540 +
             (C10225 * C2108 + C32919 * C2118 + C10224 * C369 + C10221 * C383 +
              C10223 * C366 + C10220 * C382) *
                 C32866 +
             (C10225 * C2100 + C32919 * C2109 + C10224 * C353 + C10221 * C368 +
              C10223 * C352 + C10220 * C367) *
                 C31559) *
                C32885) *
               C585) *
              C32589 * C472 +
          ((((C10868 + C10867 + C10866) * C31559 +
             (C10865 + C10864 + C10863) * C32866 +
             (C10862 + C10861 + C10860) * C31540 +
             (C10859 + C10858 + C10857) * C32552) *
                C32885 +
            ((C13211 + C13210 + C13209) * C31559 +
             (C13208 + C13207 + C13206) * C32866 +
             (C10223 * C698 + C10220 * C705 + C10224 * C1155 + C10221 * C1169 +
              C10225 * C2642 + C32919 * C2647) *
                 C31540 +
             (C10223 * C706 + C10220 * C713 + C10224 * C1170 + C10221 * C1182 +
              C10225 * C2648 + C32919 * C2651) *
                 C32552) *
                C32691) *
               C585 -
           (((C10675 + C10676 + C10677) * C32552 +
             (C10678 + C10679 + C10680) * C31540 + C12998 * C32866 +
             C12999 * C31559) *
                C32691 +
            ((C10274 + C10273 + C10272) * C32552 +
             (C10271 + C10270 + C10269) * C31540 +
             (C10268 + C10267 + C10266) * C32866 +
             (C10265 + C10264 + C10263) * C31559) *
                C32885) *
               C584) *
              C32589 * C473)) /
            (p * q * std::sqrt(p + q));
    d2ee[54] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C119 + C32644 * C126) * C2756 +
            (C113 * C127 + C32644 * C140) * C2750 + C168 * C2757 +
            C169 * C2751 + C170 * C2758 + C171 * C2752 + C172 * C2759 +
            C173 * C32920) *
               C32885 +
           (C2859 + C2860 + C2861 + C2862 + C2863 + C2864 + C2865 + C2866) *
               C32691) *
              C32603 * C239 -
          ((C2867 + C2868 + C2869 + C2870 + C2871 + C2872 + C2873 + C2874) *
               C32691 +
           (C2866 + C2865 + C2864 + C2863 + C2862 + C2861 + C2860 + C2859) *
               C32885) *
              C32603 * C240 +
          ((C2874 + C2873 + C2872 + C2871 + C2870 + C2869 + C2868 + C2867) *
               C32885 +
           (C1025 * C2756 + C1024 * C2750 + C1023 * C2757 + C1022 * C2751 +
            C1021 * C2758 + C1020 * C2752 +
            (C113 * C1332 + C32644 * C1333) * C2759 +
            (C113 * C1334 + C32644 * C1335) * C32920) *
               C32691) *
              C32603 * C241) *
         C32577) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C119 + C32644 * C126) * C2756 +
            (C113 * C127 + C32644 * C140) * C2750 + C168 * C2757 +
            C169 * C2751 + C170 * C2758 + C171 * C2752 + C172 * C2759 +
            C173 * C32920) *
               C32885 +
           (C1016 * C2756 + C1017 * C2750 + C502 * C2757 + C501 * C2751 +
            C500 * C2758 + C499 * C2752 + C498 * C2759 + C497 * C32920) *
               C32691) *
              C32603 * C32589 * C110 -
          ((C495 * C32920 + C496 * C2759 + C497 * C2752 + C498 * C2758 +
            C499 * C2751 + C500 * C2757 + C501 * C2750 + C502 * C2756) *
               C32691 +
           (C175 * C32920 + C174 * C2759 + C173 * C2752 + C172 * C2758 +
            C171 * C2751 + C170 * C2757 + C169 * C2750 + C168 * C2756) *
               C32885) *
              C32603 * C32589 * C111 +
          ((C170 * C2756 + C171 * C2750 + C172 * C2757 + C173 * C2751 +
            C174 * C2758 + C175 * C2752 + C177 * C2759 + C176 * C32920) *
               C32885 +
           (C500 * C2756 + C499 * C2750 + C498 * C2757 + C497 * C2751 +
            C496 * C2758 + C495 * C2752 +
            (C113 * C474 + C32644 * C475) * C2759 +
            (C113 * C476 + C32644 * C477) * C32920) *
               C32691) *
              C32603 * C32589 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C119 + C32644 * C126) * C31559 +
            (C113 * C127 + C32644 * C140) * C32866 + C168 * C31540 +
            C169 * C32552) *
               C7669 +
           (C1016 * C31559 + C1017 * C32866 + C502 * C31540 + C501 * C32552) *
               C7670 +
           (C1018 * C31559 + C1019 * C32866 + C848 * C31540 + C849 * C32552) *
               C7671 +
           (C1025 * C31559 + C1024 * C32866 + C1023 * C31540 + C1022 * C32552) *
               C32926) *
              C32603 * C32589 * C110 -
          ((C1020 * C32552 + C1021 * C31540 + C1022 * C32866 + C1023 * C31559) *
               C32926 +
           (C851 * C32552 + C850 * C31540 + C849 * C32866 + C848 * C31559) *
               C7671 +
           (C499 * C32552 + C500 * C31540 + C501 * C32866 + C502 * C31559) *
               C7670 +
           (C171 * C32552 + C170 * C31540 + C169 * C32866 + C168 * C31559) *
               C7669) *
              C32603 * C32589 * C111 +
          ((C170 * C31559 + C171 * C32866 + C172 * C31540 + C173 * C32552) *
               C7669 +
           (C500 * C31559 + C499 * C32866 + C498 * C31540 + C497 * C32552) *
               C7670 +
           (C850 * C31559 + C851 * C32866 + C853 * C31540 + C852 * C32552) *
               C7671 +
           (C1021 * C31559 + C1020 * C32866 +
            (C113 * C1332 + C32644 * C1333) * C31540 +
            (C113 * C1334 + C32644 * C1335) * C32552) *
               C32926) *
              C32603 * C32589 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C119 + C32644 * C126) * C31559 +
            (C113 * C127 + C32644 * C140) * C32866 + C168 * C31540 +
            C169 * C32552) *
               C7669 +
           (C7774 + C7775 + C7776 + C7777) * C7670 + C7794 * C7671 +
           C7795 * C32926) *
              C32603 * C239 -
          ((C7786 + C7787 + C7788 + C7789) * C32926 +
           (C7785 + C7784 + C7783 + C7782) * C7671 +
           (C7781 + C7780 + C7779 + C7778) * C7670 +
           (C7777 + C7776 + C7775 + C7774) * C7669) *
              C32603 * C240 +
          (C7794 * C7669 + C7795 * C7670 +
           (C7789 + C7788 + C7787 + C7786) * C7671 +
           (C6291 * C31559 + C6290 * C32866 +
            (C113 * C6452 + C32644 * C6453) * C31540 +
            (C113 * C6454 + C32644 * C6455) * C32552) *
               C32926) *
              C32603 * C241) *
         C32577) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C10223 * C119 + C10220 * C126 + C10224 * C352 + C10221 * C367 +
             C10225 * C353 + C32919 * C368) *
                C31559 +
            (C10223 * C127 + C10220 * C140 + C10224 * C366 + C10221 * C382 +
             C10225 * C369 + C32919 * C383) *
                C32866 +
            (C10263 + C10264 + C10265) * C31540 +
            (C10266 + C10267 + C10268) * C32552) *
               C32885 +
           ((C11271 + C11272 + C11273) * C31559 +
            (C11274 + C11275 + C11276) * C32866 +
            (C10686 + C10685 + C10684) * C31540 +
            (C10683 + C10682 + C10681) * C32552) *
               C32691) *
              C32603 * C32589 * C110 -
          (((C10675 + C10676 + C10677) * C32552 +
            (C10678 + C10679 + C10680) * C31540 +
            (C10681 + C10682 + C10683) * C32866 +
            (C10684 + C10685 + C10686) * C31559) *
               C32691 +
           ((C10274 + C10273 + C10272) * C32552 +
            (C10271 + C10270 + C10269) * C31540 +
            (C10268 + C10267 + C10266) * C32866 +
            (C10265 + C10264 + C10263) * C31559) *
               C32885) *
              C32603 * C32589 * C111 +
          ((C10283 * C31559 + C10284 * C32866 +
            (C10280 + C10279 + C10278) * C31540 +
            (C10277 + C10276 + C10275) * C32552) *
               C32885 +
           ((C10680 + C10679 + C10678) * C31559 +
            (C10677 + C10676 + C10675) * C32866 +
            (C10223 * C244 + C10220 * C256 + C10224 * C699 + C10221 * C707 +
             C10225 * C2268 + C32919 * C2269) *
                C31540 +
            (C10223 * C255 + C10220 * C274 + C10224 * C708 + C10221 * C714 +
             C10225 * C2270 + C32919 * C2271) *
                C32552) *
               C32691) *
              C32603 * C32589 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C10223 * C119 + C10220 * C126 + C10224 * C352 + C10221 * C367 +
             C10225 * C353 + C32919 * C368) *
                C31559 +
            (C10223 * C127 + C10220 * C140 + C10224 * C366 + C10221 * C382 +
             C10225 * C369 + C32919 * C383) *
                C32866 +
            (C10263 + C10264 + C10265) * C31540 +
            (C10266 + C10267 + C10268) * C32552) *
               C32885 +
           ((C11271 + C11272 + C11273) * C31559 +
            (C11274 + C11275 + C11276) * C32866 +
            (C10686 + C10685 + C10684) * C31540 +
            (C10683 + C10682 + C10681) * C32552) *
               C32691) *
              C32603 * C239 -
          (((C11569 + C11568 + C11567) * C32552 +
            (C11566 + C11565 + C11564) * C31540 +
            (C11282 + C11281 + C11280) * C32866 +
            (C11279 + C11278 + C11277) * C31559) *
               C32691 +
           ((C10681 + C10682 + C10683) * C32552 +
            (C10684 + C10685 + C10686) * C31540 +
            (C11276 + C11275 + C11274) * C32866 +
            (C11273 + C11272 + C11271) * C31559) *
               C32885) *
              C32603 * C240 +
          ((C11291 * C31559 + C11292 * C32866 +
            (C11564 + C11565 + C11566) * C31540 +
            (C11567 + C11568 + C11569) * C32552) *
               C32885 +
           ((C11288 + C11287 + C11286) * C31559 +
            (C11285 + C11284 + C11283) * C32866 +
            (C10223 * C964 + C10220 * C972 + C10224 * C1669 + C10221 * C1673 +
             C10225 * C7211 + C32919 * C7212) *
                C31540 +
            (C10223 * C971 + C10220 * C982 + C10224 * C1674 + C10221 * C1678 +
             C10225 * C7213 + C32919 * C7214) *
                C32552) *
               C32691) *
              C32603 * C241) *
         C32577) /
            (p * q * std::sqrt(p + q));
    d2ee[55] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C3484 * C119 + C32886 * C126 + C3485 * C352 + C32731 * C367) *
                 C6200 +
             (C3484 * C127 + C32886 * C140 + C3485 * C366 + C32731 * C382) *
                 C32542) *
                C7669 +
            ((C4523 + C4524) * C6200 + (C4525 + C4526) * C32542) * C7670 +
            C9603 * C7671 + C9610 * C32926) *
               C32603 * C470 -
           (((C9606 + C9607) * C32542 + (C9608 + C9609) * C6200) * C32926 +
            ((C8634 + C8635) * C32542 + (C8636 + C8637) * C6200) * C7671 +
            ((C4535 + C4536) * C32542 + (C4537 + C4538) * C6200) * C7670 +
            ((C4526 + C4525) * C32542 + (C4524 + C4523) * C6200) * C7669) *
               C32603 * C471) *
              C472 +
          (((C4879 * C6200 + C4880 * C32542) * C7669 +
            (C8608 * C6200 + C8609 * C32542) * C7670 +
            ((C8633 + C8632) * C6200 + (C8631 + C8630) * C32542) * C7671 +
            ((C3484 * C967 + C32886 * C977 + C3485 * C6552 + C32731 * C6553) *
                 C6200 +
             (C3484 * C978 + C32886 * C985 + C3485 * C6554 + C32731 * C6555) *
                 C32542) *
                C32926) *
               C32603 * C471 -
           (((C8630 + C8631) * C32542 + (C8632 + C8633) * C6200) * C32926 +
            (C8981 * C32542 + C8982 * C6200) * C7671 +
            (C4883 * C32542 + C4884 * C6200) * C7670 +
            ((C3522 + C3521) * C32542 + (C3520 + C3519) * C6200) * C7669) *
               C32603 * C470) *
              C473)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C3484 * C119 + C32886 * C126 + C3485 * C352 + C32731 * C367) *
                 C832 +
             (C3484 * C127 + C32886 * C140 + C3485 * C366 + C32731 * C382) *
                 C826 +
             (C3519 + C3520) * C833 + (C3521 + C3522) * C827 + C3535 * C834 +
             C3536 * C32905) *
                C32885 +
            ((C4523 + C4524) * C832 + (C4525 + C4526) * C826 + C4879 * C833 +
             C4880 * C827 + C4343 * C834 + C4344 * C32905) *
                C32691) *
               C32603 * C470 -
           (((C4527 + C4528) * C32905 + (C4529 + C4530) * C834 +
             (C4531 + C4532) * C827 + (C4533 + C4534) * C833 +
             (C4535 + C4536) * C826 + (C4537 + C4538) * C832) *
                C32691 +
            (C4881 * C32905 + C4882 * C834 + C4883 * C827 + C4884 * C833 +
             (C4526 + C4525) * C826 + (C4524 + C4523) * C832) *
                C32885) *
               C32603 * C471) *
              C472 +
          (((C4879 * C832 + C4880 * C826 + C4343 * C833 + C4344 * C827 +
             (C3892 + C3891) * C834 + (C3890 + C3889) * C32905) *
                C32885 +
            ((C4534 + C4533) * C832 + (C4532 + C4531) * C826 +
             (C4530 + C4529) * C833 + (C4528 + C4527) * C827 +
             (C3484 * C251 + C32886 * C269 + C3485 * C1494 + C32731 * C1495) *
                 C834 +
             (C3484 * C270 + C32886 * C281 + C3485 * C1496 + C32731 * C1497) *
                 C32905) *
                C32691) *
               C32603 * C471 -
           (((C3889 + C3890) * C32905 + (C3891 + C3892) * C834 + C4881 * C827 +
             C4882 * C833 + C4883 * C826 + C4884 * C832) *
                C32691 +
            ((C3530 + C3529) * C32905 + (C3528 + C3527) * C834 +
             (C3526 + C3525) * C827 + (C3524 + C3523) * C833 +
             (C3522 + C3521) * C826 + (C3520 + C3519) * C832) *
                C32885) *
               C32603 * C470) *
              C473)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C13507 * C119 + C13503 * C126 + C13508 * C352 + C13504 * C367 +
              C13509 * C353 + C13505 * C368 + C13510 * C2100 + C32932 * C2109) *
                 C6200 +
             (C13507 * C127 + C13503 * C140 + C13508 * C366 + C13504 * C382 +
              C13509 * C369 + C13505 * C383 + C13510 * C2108 + C32932 * C2118) *
                 C32542) *
                C32885 +
            ((C14422 + C14423 + C14424 + C14425) * C6200 +
             (C14426 + C14427 + C14428 + C14429) * C32542) *
                C32691) *
               C32603 * C470 -
           (((C14430 + C14431 + C14432 + C14433) * C32542 +
             (C14434 + C14435 + C14436 + C14437) * C6200) *
                C32691 +
            ((C14429 + C14428 + C14427 + C14426) * C32542 +
             (C14425 + C14424 + C14423 + C14422) * C6200) *
                C32885) *
               C32603 * C471) *
              C472 +
          ((((C13909 + C13908 + C13907 + C13906) * C6200 +
             (C13905 + C13904 + C13903 + C13902) * C32542) *
                C32885 +
            ((C13507 * C249 + C13503 * C265 + C13508 * C1151 + C13504 * C1162 +
              C13509 * C1157 + C13505 * C1173 + C13510 * C7379 +
              C32932 * C7380) *
                 C6200 +
             (C13507 * C266 + C13503 * C279 + C13508 * C1161 + C13504 * C1178 +
              C13509 * C1174 + C13505 * C1184 + C13510 * C7381 +
              C32932 * C7382) *
                 C32542) *
                C32691) *
               C32603 * C471 -
           (((C13902 + C13903 + C13904 + C13905) * C32542 +
             (C13906 + C13907 + C13908 + C13909) * C6200) *
                C32691 +
            ((C13551 + C13550 + C13549 + C13548) * C32542 +
             (C13547 + C13546 + C13545 + C13544) * C6200) *
                C32885) *
               C32603 * C470) *
              C473)) /
            (p * q * std::sqrt(p + q));
    d2ee[56] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C3484 * C119 + C32886 * C126 + C3485 * C352 + C32731 * C367) *
                 C6200 +
             (C3484 * C127 + C32886 * C140 + C3485 * C366 + C32731 * C382) *
                 C32542) *
                C7669 +
            ((C4523 + C4524) * C6200 + (C4525 + C4526) * C32542) * C7670 +
            C9603 * C7671 + C9610 * C32926) *
               C584 -
           (((C10107 + C10108) * C32542 + (C10109 + C10110) * C6200) * C32926 +
            ((C9391 + C9392) * C32542 + (C9393 + C9394) * C6200) * C7671 +
            ((C5305 + C5306) * C32542 + (C5307 + C5308) * C6200) * C7670 +
            ((C3485 * C369 + C32731 * C383 + C3484 * C366 + C32886 * C382) *
                 C32542 +
             (C3485 * C353 + C32731 * C368 + C3484 * C352 + C32886 * C367) *
                 C6200) *
                C7669) *
               C585) *
              C470 +
          ((((C5308 + C5307) * C6200 + (C5306 + C5305) * C32542) * C7669 +
            ((C9394 + C9393) * C6200 + (C9392 + C9391) * C32542) * C7670 +
            ((C10110 + C10109) * C6200 + (C10108 + C10107) * C32542) * C7671 +
            ((C3484 * C6358 + C32886 * C6362 + C3485 * C6360 + C32731 * C6365) *
                 C6200 +
             (C3484 * C6361 + C32886 * C6367 + C3485 * C6366 + C32731 * C6369) *
                 C32542) *
                C32926) *
               C585 -
           (((C9606 + C9607) * C32542 + (C9608 + C9609) * C6200) * C32926 +
            ((C8634 + C8635) * C32542 + (C8636 + C8637) * C6200) * C7671 +
            ((C4535 + C4536) * C32542 + (C4537 + C4538) * C6200) * C7670 +
            ((C4526 + C4525) * C32542 + (C4524 + C4523) * C6200) * C7669) *
               C584) *
              C471) *
         C32577) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C3484 * C119 + C32886 * C126 + C3485 * C352 + C32731 * C367) *
                 C832 +
             (C3484 * C127 + C32886 * C140 + C3485 * C366 + C32731 * C382) *
                 C826 +
             (C3519 + C3520) * C833 + (C3521 + C3522) * C827 + C3535 * C834 +
             C3536 * C32905) *
                C32885 +
            ((C4523 + C4524) * C832 + (C4525 + C4526) * C826 + C4879 * C833 +
             C4880 * C827 + C4343 * C834 + C4344 * C32905) *
                C32691) *
               C584 -
           (((C5095 + C5096) * C32905 + (C5097 + C5098) * C834 +
             (C5099 + C5100) * C827 + (C5101 + C5102) * C833 +
             (C5305 + C5306) * C826 + (C5307 + C5308) * C832) *
                C32691 +
            ((C4059 + C4060) * C32905 + (C4061 + C4062) * C834 +
             (C4063 + C4064) * C827 + (C4065 + C4066) * C833 +
             (C3485 * C369 + C32731 * C383 + C3484 * C366 + C32886 * C382) *
                 C826 +
             (C3485 * C353 + C32731 * C368 + C3484 * C352 + C32886 * C367) *
                 C832) *
                C32885) *
               C585) *
              C470 +
          ((((C5308 + C5307) * C832 + (C5306 + C5305) * C826 +
             (C5102 + C5101) * C833 + (C5100 + C5099) * C827 +
             (C5098 + C5097) * C834 + (C5096 + C5095) * C32905) *
                C32885 +
            ((C3484 * C1152 + C32886 * C1164 + C3485 * C1156 + C32731 * C1171) *
                 C832 +
             (C3484 * C1163 + C32886 * C1179 + C3485 * C1172 + C32731 * C1183) *
                 C826 +
             (C3484 * C1151 + C32886 * C1162 + C3485 * C1157 + C32731 * C1173) *
                 C833 +
             (C3484 * C1161 + C32886 * C1178 + C3485 * C1174 + C32731 * C1184) *
                 C827 +
             (C3484 * C1150 + C32886 * C1160 + C3485 * C1158 + C32731 * C1175) *
                 C834 +
             (C3484 * C1159 + C32886 * C1177 + C3485 * C1176 + C32731 * C1185) *
                 C32905) *
                C32691) *
               C585 -
           (((C4527 + C4528) * C32905 + (C4529 + C4530) * C834 +
             (C4531 + C4532) * C827 + (C4533 + C4534) * C833 +
             (C4535 + C4536) * C826 + (C4537 + C4538) * C832) *
                C32691 +
            (C4881 * C32905 + C4882 * C834 + C4883 * C827 + C4884 * C833 +
             (C4526 + C4525) * C826 + (C4524 + C4523) * C832) *
                C32885) *
               C584) *
              C471) *
         C32577) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C13507 * C119 + C13503 * C126 + C13508 * C352 + C13504 * C367 +
              C13509 * C353 + C13505 * C368 + C13510 * C2100 + C32932 * C2109) *
                 C6200 +
             (C13507 * C127 + C13503 * C140 + C13508 * C366 + C13504 * C382 +
              C13509 * C369 + C13505 * C383 + C13510 * C2108 + C32932 * C2118) *
                 C32542) *
                C32885 +
            ((C14422 + C14423 + C14424 + C14425) * C6200 +
             (C14426 + C14427 + C14428 + C14429) * C32542) *
                C32691) *
               C584 -
           (((C14942 + C14943 + C14944 + C14945) * C32542 +
             (C14946 + C14947 + C14948 + C14949) * C6200) *
                C32691 +
            ((C13510 * C2111 + C32932 * C2119 + C13509 * C2108 +
              C13505 * C2118 + C13508 * C369 + C13504 * C383 + C13507 * C366 +
              C13503 * C382) *
                 C32542 +
             (C13510 * C2101 + C32932 * C2110 + C13509 * C2100 +
              C13505 * C2109 + C13508 * C353 + C13504 * C368 + C13507 * C352 +
              C13503 * C367) *
                 C6200) *
                C32885) *
               C585) *
              C470 +
          ((((C14949 + C14948 + C14947 + C14946) * C6200 +
             (C14945 + C14944 + C14943 + C14942) * C32542) *
                C32885 +
            ((C13507 * C1152 + C13503 * C1164 + C13508 * C1156 +
              C13504 * C1171 + C13509 * C7053 + C13505 * C7057 +
              C13510 * C7055 + C32932 * C7060) *
                 C6200 +
             (C13507 * C1163 + C13503 * C1179 + C13508 * C1172 +
              C13504 * C1183 + C13509 * C7056 + C13505 * C7062 +
              C13510 * C7061 + C32932 * C7064) *
                 C32542) *
                C32691) *
               C585 -
           (((C14430 + C14431 + C14432 + C14433) * C32542 +
             (C14434 + C14435 + C14436 + C14437) * C6200) *
                C32691 +
            ((C14429 + C14428 + C14427 + C14426) * C32542 +
             (C14425 + C14424 + C14423 + C14422) * C6200) *
                C32885) *
               C584) *
              C471) *
         C32577) /
            (p * q * std::sqrt(p + q));
    d2ee[57] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C3484 * C119 + C32886 * C126 + C3485 * C352 + C32731 * C367) *
                    C832 +
                (C3484 * C127 + C32886 * C140 + C3485 * C366 + C32731 * C382) *
                    C826 +
                (C3519 + C3520) * C833 + (C3521 + C3522) * C827 + C3535 * C834 +
                C3536 * C32905) *
                   C32885 +
               ((C3484 * C247 + C32886 * C262 + C3485 * C696 + C32731 * C701) *
                    C832 +
                (C3484 * C261 + C32886 * C277 + C3485 * C702 + C32731 * C711) *
                    C826 +
                (C3900 + C3899) * C833 + (C3898 + C3897) * C827 + C4343 * C834 +
                C4344 * C32905) *
                   C32691) *
                  C32603 * C32589 * C110 -
              (((C3889 + C3890) * C32905 + (C3891 + C3892) * C834 +
                (C3893 + C3894) * C827 + (C3895 + C3896) * C833 +
                (C3897 + C3898) * C826 + (C3899 + C3900) * C832) *
                   C32691 +
               ((C3530 + C3529) * C32905 + (C3528 + C3527) * C834 +
                (C3526 + C3525) * C827 + (C3524 + C3523) * C833 +
                (C3522 + C3521) * C826 + (C3520 + C3519) * C832) *
                   C32885) *
                  C32603 * C32589 * C111 +
              ((C3535 * C832 + C3536 * C826 + C3537 * C833 + C3538 * C827 +
                (C3534 + C3533) * C834 + (C3532 + C3531) * C32905) *
                   C32885 +
               (C4343 * C832 + C4344 * C826 + (C3892 + C3891) * C833 +
                (C3890 + C3889) * C827 +
                (C3484 * C243 + C32886 * C254 + C3485 * C700 + C32731 * C709) *
                    C834 +
                (C3484 * C253 + C32886 * C273 + C3485 * C710 + C32731 * C715) *
                    C32905) *
                   C32691) *
                  C32603 * C32589 * C112) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C3484 * C119 + C32886 * C126 + C3485 * C352 + C32731 * C367) *
                    C832 +
                (C3484 * C127 + C32886 * C140 + C3485 * C366 + C32731 * C382) *
                    C826 +
                (C3519 + C3520) * C833 + (C3521 + C3522) * C827 + C3535 * C834 +
                C3536 * C32905) *
                   C32885 +
               ((C4523 + C4524) * C832 + (C4525 + C4526) * C826 +
                (C3900 + C3899) * C833 + (C3898 + C3897) * C827 + C4343 * C834 +
                C4344 * C32905) *
                   C32691) *
                  C32603 * C239 -
              (((C4527 + C4528) * C32905 + (C4529 + C4530) * C834 +
                (C4531 + C4532) * C827 + (C4533 + C4534) * C833 +
                (C4535 + C4536) * C826 + (C4537 + C4538) * C832) *
                   C32691 +
               ((C3893 + C3894) * C32905 + (C3895 + C3896) * C834 +
                (C3897 + C3898) * C827 + (C3899 + C3900) * C833 +
                (C4526 + C4525) * C826 + (C4524 + C4523) * C832) *
                   C32885) *
                  C32603 * C240 +
              (((C4538 + C4537) * C832 + (C4536 + C4535) * C826 +
                (C4534 + C4533) * C833 + (C4532 + C4531) * C827 +
                (C4530 + C4529) * C834 + (C4528 + C4527) * C32905) *
                   C32885 +
               ((C3484 * C965 + C32886 * C974 + C3485 * C1668 +
                 C32731 * C1671) *
                    C832 +
                (C3484 * C973 + C32886 * C983 + C3485 * C1672 +
                 C32731 * C1677) *
                    C826 +
                (C3484 * C964 + C32886 * C972 + C3485 * C1669 +
                 C32731 * C1673) *
                    C833 +
                (C3484 * C971 + C32886 * C982 + C3485 * C1674 +
                 C32731 * C1678) *
                    C827 +
                (C3484 * C963 + C32886 * C970 + C3485 * C1670 +
                 C32731 * C1675) *
                    C834 +
                (C3484 * C969 + C32886 * C981 + C3485 * C1676 +
                 C32731 * C1679) *
                    C32905) *
                   C32691) *
                  C32603 * C241) *
             C32577) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C3484 * C119 + C32886 * C126 + C3485 * C352 + C32731 * C367) *
                C832 +
            (C3484 * C127 + C32886 * C140 + C3485 * C366 + C32731 * C382) *
                C826 +
            (C3519 + C3520) * C833 + (C3521 + C3522) * C827 + C3535 * C834 +
            C3536 * C32905) *
               C32885 +
           ((C4523 + C4524) * C832 + (C4525 + C4526) * C826 +
            (C3900 + C3899) * C833 + (C3898 + C3897) * C827 + C4343 * C834 +
            C4344 * C32905) *
               C32691) *
              C345 -
          (((C3485 * C1170 + C32731 * C1182 + C3484 * C706 + C32886 * C713) *
                C32905 +
            (C3485 * C1155 + C32731 * C1169 + C3484 * C698 + C32886 * C705) *
                C834 +
            (C3485 * C1168 + C32731 * C1181 + C3484 * C704 + C32886 * C712) *
                C827 +
            (C3485 * C1154 + C32731 * C1167 + C3484 * C697 + C32886 * C703) *
                C833 +
            (C3485 * C1166 + C32731 * C1180 + C3484 * C702 + C32886 * C711) *
                C826 +
            (C3485 * C1153 + C32731 * C1165 + C3484 * C696 + C32886 * C701) *
                C832) *
               C32691 +
           ((C4059 + C4060) * C32905 + (C4061 + C4062) * C834 +
            (C4063 + C4064) * C827 + (C4065 + C4066) * C833 +
            (C3485 * C369 + C32731 * C383 + C3484 * C366 + C32886 * C382) *
                C826 +
            (C3485 * C353 + C32731 * C368 + C3484 * C352 + C32886 * C367) *
                C832) *
               C32885) *
              C346 +
          (((C3484 * C353 + C32886 * C368 + C3485 * C2100 + C32731 * C2109) *
                C832 +
            (C3484 * C369 + C32886 * C383 + C3485 * C2108 + C32731 * C2118) *
                C826 +
            (C3484 * C354 + C32886 * C370 + C3485 * C2099 + C32731 * C2107) *
                C833 +
            (C3484 * C371 + C32886 * C384 + C3485 * C2106 + C32731 * C2117) *
                C827 +
            (C3484 * C355 + C32886 * C372 + C3485 * C2098 + C32731 * C2105) *
                C834 +
            (C3484 * C373 + C32886 * C385 + C3485 * C2104 + C32731 * C2116) *
                C32905) *
               C32885 +
           ((C3484 * C1153 + C32886 * C1165 + C3485 * C2640 + C32731 * C2643) *
                C832 +
            (C3484 * C1166 + C32886 * C1180 + C3485 * C2644 + C32731 * C2649) *
                C826 +
            (C3484 * C1154 + C32886 * C1167 + C3485 * C2641 + C32731 * C2645) *
                C833 +
            (C3484 * C1168 + C32886 * C1181 + C3485 * C2646 + C32731 * C2650) *
                C827 +
            (C3484 * C1155 + C32886 * C1169 + C3485 * C2642 + C32731 * C2647) *
                C834 +
            (C3484 * C1170 + C32886 * C1182 + C3485 * C2648 + C32731 * C2651) *
                C32905) *
               C32691) *
              C347) *
         C32589 * C32577) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C3484 * C119 + C32886 * C126 + C3485 * C352 + C32731 * C367) *
                C6200 +
            (C3484 * C127 + C32886 * C140 + C3485 * C366 + C32731 * C382) *
                C32542) *
               C7669 +
           ((C4523 + C4524) * C6200 + (C4525 + C4526) * C32542) * C7670 +
           (C8606 * C6200 + C8607 * C32542) * C7671 +
           ((C8637 + C8636) * C6200 + (C8635 + C8634) * C32542) * C32926) *
              C32603 * C32589 * C110 -
          (((C8630 + C8631) * C32542 + (C8632 + C8633) * C6200) * C32926 +
           (C8981 * C32542 + C8982 * C6200) * C7671 +
           (C4883 * C32542 + C4884 * C6200) * C7670 +
           ((C3522 + C3521) * C32542 + (C3520 + C3519) * C6200) * C7669) *
              C32603 * C32589 * C111 +
          ((C3535 * C6200 + C3536 * C32542) * C7669 +
           (C4343 * C6200 + C4344 * C32542) * C7670 +
           ((C4530 + C4529) * C6200 + (C4528 + C4527) * C32542) * C7671 +
           ((C3484 * C963 + C32886 * C970 + C3485 * C1670 + C32731 * C1675) *
                C6200 +
            (C3484 * C969 + C32886 * C981 + C3485 * C1676 + C32731 * C1679) *
                C32542) *
               C32926) *
              C32603 * C32589 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C3484 * C119 + C32886 * C126 + C3485 * C352 + C32731 * C367) *
                C6200 +
            (C3484 * C127 + C32886 * C140 + C3485 * C366 + C32731 * C382) *
                C32542) *
               C7669 +
           ((C4523 + C4524) * C6200 + (C4525 + C4526) * C32542) * C7670 +
           C9603 * C7671 + C9610 * C32926) *
              C32603 * C239 -
          (((C9606 + C9607) * C32542 + (C9608 + C9609) * C6200) * C32926 +
           ((C8634 + C8635) * C32542 + (C8636 + C8637) * C6200) * C7671 +
           ((C4535 + C4536) * C32542 + (C4537 + C4538) * C6200) * C7670 +
           ((C4526 + C4525) * C32542 + (C4524 + C4523) * C6200) * C7669) *
              C32603 * C240 +
          (C9603 * C7669 + C9610 * C7670 +
           ((C9609 + C9608) * C6200 + (C9607 + C9606) * C32542) * C7671 +
           ((C3484 * C6263 + C32886 * C6266 + C3485 * C6638 + C32731 * C6639) *
                C6200 +
            (C3484 * C6265 + C32886 * C6269 + C3485 * C6640 + C32731 * C6641) *
                C32542) *
               C32926) *
              C32603 * C241) *
         C32577) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C3484 * C119 + C32886 * C126 + C3485 * C352 + C32731 * C367) *
                C6200 +
            (C3484 * C127 + C32886 * C140 + C3485 * C366 + C32731 * C382) *
                C32542) *
               C7669 +
           ((C4523 + C4524) * C6200 + (C4525 + C4526) * C32542) * C7670 +
           C9603 * C7671 + C9610 * C32926) *
              C345 -
          (((C3485 * C6364 + C32731 * C6368 + C3484 * C1672 + C32886 * C1677) *
                C32542 +
            (C3485 * C6359 + C32731 * C6363 + C3484 * C1668 + C32886 * C1671) *
                C6200) *
               C32926 +
           ((C9391 + C9392) * C32542 + (C9393 + C9394) * C6200) * C7671 +
           ((C5305 + C5306) * C32542 + (C5307 + C5308) * C6200) * C7670 +
           ((C3485 * C369 + C32731 * C383 + C3484 * C366 + C32886 * C382) *
                C32542 +
            (C3485 * C353 + C32731 * C368 + C3484 * C352 + C32886 * C367) *
                C6200) *
               C7669) *
              C346 +
          (((C3484 * C353 + C32886 * C368 + C3485 * C2100 + C32731 * C2109) *
                C6200 +
            (C3484 * C369 + C32886 * C383 + C3485 * C2108 + C32731 * C2118) *
                C32542) *
               C7669 +
           ((C3484 * C1153 + C32886 * C1165 + C3485 * C2640 + C32731 * C2643) *
                C6200 +
            (C3484 * C1166 + C32886 * C1180 + C3485 * C2644 + C32731 * C2649) *
                C32542) *
               C7670 +
           ((C3484 * C1156 + C32886 * C1171 + C3485 * C7053 + C32731 * C7057) *
                C6200 +
            (C3484 * C1172 + C32886 * C1183 + C3485 * C7056 + C32731 * C7062) *
                C32542) *
               C7671 +
           ((C3484 * C6359 + C32886 * C6363 + C3485 * C7529 + C32731 * C7530) *
                C6200 +
            (C3484 * C6364 + C32886 * C6368 + C3485 * C7531 + C32731 * C7532) *
                C32542) *
               C32926) *
              C347) *
         C32589 * C32577) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C13507 * C119 + C13503 * C126 + C13508 * C352 + C13504 * C367 +
             C13509 * C353 + C13505 * C368 + C13510 * C2100 + C32932 * C2109) *
                C6200 +
            (C13507 * C127 + C13503 * C140 + C13508 * C366 + C13504 * C382 +
             C13509 * C369 + C13505 * C383 + C13510 * C2108 + C32932 * C2118) *
                C32542) *
               C32885 +
           ((C13507 * C247 + C13503 * C262 + C13508 * C696 + C13504 * C701 +
             C13509 * C1153 + C13505 * C1165 + C13510 * C2640 +
             C32932 * C2643) *
                C6200 +
            (C13507 * C261 + C13503 * C277 + C13508 * C702 + C13504 * C711 +
             C13509 * C1166 + C13505 * C1180 + C13510 * C2644 +
             C32932 * C2649) *
                C32542) *
               C32691) *
              C32603 * C32589 * C110 -
          (((C13902 + C13903 + C13904 + C13905) * C32542 +
            (C13906 + C13907 + C13908 + C13909) * C6200) *
               C32691 +
           ((C13551 + C13550 + C13549 + C13548) * C32542 +
            (C13547 + C13546 + C13545 + C13544) * C6200) *
               C32885) *
              C32603 * C32589 * C111 +
          (((C13559 + C13558 + C13557 + C13556) * C6200 +
            (C13555 + C13554 + C13553 + C13552) * C32542) *
               C32885 +
           ((C13507 * C245 + C13503 * C258 + C13508 * C698 + C13504 * C705 +
             C13509 * C1155 + C13505 * C1169 + C13510 * C2642 +
             C32932 * C2647) *
                C6200 +
            (C13507 * C257 + C13503 * C275 + C13508 * C706 + C13504 * C713 +
             C13509 * C1170 + C13505 * C1182 + C13510 * C2648 +
             C32932 * C2651) *
                C32542) *
               C32691) *
              C32603 * C32589 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C13507 * C119 + C13503 * C126 + C13508 * C352 + C13504 * C367 +
             C13509 * C353 + C13505 * C368 + C13510 * C2100 + C32932 * C2109) *
                C6200 +
            (C13507 * C127 + C13503 * C140 + C13508 * C366 + C13504 * C382 +
             C13509 * C369 + C13505 * C383 + C13510 * C2108 + C32932 * C2118) *
                C32542) *
               C32885 +
           ((C14422 + C14423 + C14424 + C14425) * C6200 +
            (C14426 + C14427 + C14428 + C14429) * C32542) *
               C32691) *
              C32603 * C239 -
          (((C14430 + C14431 + C14432 + C14433) * C32542 +
            (C14434 + C14435 + C14436 + C14437) * C6200) *
               C32691 +
           ((C14429 + C14428 + C14427 + C14426) * C32542 +
            (C14425 + C14424 + C14423 + C14422) * C6200) *
               C32885) *
              C32603 * C240 +
          (((C14437 + C14436 + C14435 + C14434) * C6200 +
            (C14433 + C14432 + C14431 + C14430) * C32542) *
               C32885 +
           ((C13507 * C965 + C13503 * C974 + C13508 * C1668 + C13504 * C1671 +
             C13509 * C6359 + C13505 * C6363 + C13510 * C7529 +
             C32932 * C7530) *
                C6200 +
            (C13507 * C973 + C13503 * C983 + C13508 * C1672 + C13504 * C1677 +
             C13509 * C6364 + C13505 * C6368 + C13510 * C7531 +
             C32932 * C7532) *
                C32542) *
               C32691) *
              C32603 * C241) *
         C32577) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C13507 * C119 + C13503 * C126 + C13508 * C352 + C13504 * C367 +
             C13509 * C353 + C13505 * C368 + C13510 * C2100 + C32932 * C2109) *
                C6200 +
            (C13507 * C127 + C13503 * C140 + C13508 * C366 + C13504 * C382 +
             C13509 * C369 + C13505 * C383 + C13510 * C2108 + C32932 * C2118) *
                C32542) *
               C32885 +
           ((C14422 + C14423 + C14424 + C14425) * C6200 +
            (C14426 + C14427 + C14428 + C14429) * C32542) *
               C32691) *
              C345 -
          (((C13510 * C7059 + C32932 * C7063 + C13509 * C2644 + C13505 * C2649 +
             C13508 * C1166 + C13504 * C1180 + C13507 * C702 + C13503 * C711) *
                C32542 +
            (C13510 * C7054 + C32932 * C7058 + C13509 * C2640 + C13505 * C2643 +
             C13508 * C1153 + C13504 * C1165 + C13507 * C696 + C13503 * C701) *
                C6200) *
               C32691 +
           ((C13510 * C2111 + C32932 * C2119 + C13509 * C2108 + C13505 * C2118 +
             C13508 * C369 + C13504 * C383 + C13507 * C366 + C13503 * C382) *
                C32542 +
            (C13510 * C2101 + C32932 * C2110 + C13509 * C2100 + C13505 * C2109 +
             C13508 * C353 + C13504 * C368 + C13507 * C352 + C13503 * C367) *
                C6200) *
               C32885) *
              C346 +
          (((C13507 * C353 + C13503 * C368 + C13508 * C2100 + C13504 * C2109 +
             C13509 * C2101 + C13505 * C2110 + C13510 * C12093 +
             C32932 * C12096) *
                C6200 +
            (C13507 * C369 + C13503 * C383 + C13508 * C2108 + C13504 * C2118 +
             C13509 * C2111 + C13505 * C2119 + C13510 * C12095 +
             C32932 * C12099) *
                C32542) *
               C32885 +
           ((C13507 * C1153 + C13503 * C1165 + C13508 * C2640 + C13504 * C2643 +
             C13509 * C7054 + C13505 * C7058 + C13510 * C12355 +
             C32932 * C12356) *
                C6200 +
            (C13507 * C1166 + C13503 * C1180 + C13508 * C2644 + C13504 * C2649 +
             C13509 * C7059 + C13505 * C7063 + C13510 * C12357 +
             C32932 * C12358) *
                C32542) *
               C32691) *
              C347) *
         C32589 * C32577) /
            (p * q * std::sqrt(p + q));
    d2ee[58] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C3484 * C119 + C32886 * C126 + C3485 * C352 + C32731 * C367) *
                 C6200 +
             (C3484 * C127 + C32886 * C140 + C3485 * C366 + C32731 * C382) *
                 C32542) *
                C7669 +
            ((C4523 + C4524) * C6200 + (C4525 + C4526) * C32542) * C7670 +
            C9603 * C7671 + C9610 * C32926) *
               C584 -
           (((C3485 * C6364 + C32731 * C6368 + C3484 * C1672 + C32886 * C1677) *
                 C32542 +
             (C3485 * C6359 + C32731 * C6363 + C3484 * C1668 + C32886 * C1671) *
                 C6200) *
                C32926 +
            ((C9391 + C9392) * C32542 + (C9393 + C9394) * C6200) * C7671 +
            ((C5305 + C5306) * C32542 + (C5307 + C5308) * C6200) * C7670 +
            ((C3485 * C369 + C32731 * C383 + C3484 * C366 + C32886 * C382) *
                 C32542 +
             (C3485 * C353 + C32731 * C368 + C3484 * C352 + C32886 * C367) *
                 C6200) *
                C7669) *
               C585) *
              C32589 * C472 +
          ((((C4066 + C4065) * C6200 + (C4064 + C4063) * C32542) * C7669 +
            ((C5102 + C5101) * C6200 + (C5100 + C5099) * C32542) * C7670 +
            ((C9188 + C9187) * C6200 + (C9186 + C9185) * C32542) * C7671 +
            ((C3484 * C1669 + C32886 * C1673 + C3485 * C7211 + C32731 * C7212) *
                 C6200 +
             (C3484 * C1674 + C32886 * C1678 + C3485 * C7213 + C32731 * C7214) *
                 C32542) *
                C32926) *
               C585 -
           (((C8630 + C8631) * C32542 + (C8632 + C8633) * C6200) * C32926 +
            (C8981 * C32542 + C8982 * C6200) * C7671 +
            (C4883 * C32542 + C4884 * C6200) * C7670 +
            ((C3522 + C3521) * C32542 + (C3520 + C3519) * C6200) * C7669) *
               C584) *
              C32589 * C473)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C3484 * C119 + C32886 * C126 + C3485 * C352 + C32731 * C367) *
                 C832 +
             (C3484 * C127 + C32886 * C140 + C3485 * C366 + C32731 * C382) *
                 C826 +
             (C3519 + C3520) * C833 + (C3521 + C3522) * C827 + C3535 * C834 +
             C3536 * C32905) *
                C32885 +
            ((C4523 + C4524) * C832 + (C4525 + C4526) * C826 + C4879 * C833 +
             C4880 * C827 + C4343 * C834 + C4344 * C32905) *
                C32691) *
               C584 -
           (((C5095 + C5096) * C32905 + (C5097 + C5098) * C834 +
             (C5099 + C5100) * C827 + (C5101 + C5102) * C833 +
             (C3485 * C1166 + C32731 * C1180 + C3484 * C702 + C32886 * C711) *
                 C826 +
             (C3485 * C1153 + C32731 * C1165 + C3484 * C696 + C32886 * C701) *
                 C832) *
                C32691 +
            ((C4059 + C4060) * C32905 + (C4061 + C4062) * C834 +
             (C4063 + C4064) * C827 + (C4065 + C4066) * C833 +
             (C3485 * C369 + C32731 * C383 + C3484 * C366 + C32886 * C382) *
                 C826 +
             (C3485 * C353 + C32731 * C368 + C3484 * C352 + C32886 * C367) *
                 C832) *
                C32885) *
               C585) *
              C32589 * C472 +
          ((((C4066 + C4065) * C832 + (C4064 + C4063) * C826 +
             (C4062 + C4061) * C833 + (C4060 + C4059) * C827 +
             (C4058 + C4057) * C834 + (C4056 + C4055) * C32905) *
                C32885 +
            ((C5102 + C5101) * C832 + (C5100 + C5099) * C826 +
             (C5098 + C5097) * C833 + (C5096 + C5095) * C827 +
             (C3484 * C699 + C32886 * C707 + C3485 * C2268 + C32731 * C2269) *
                 C834 +
             (C3484 * C708 + C32886 * C714 + C3485 * C2270 + C32731 * C2271) *
                 C32905) *
                C32691) *
               C585 -
           (((C3889 + C3890) * C32905 + (C3891 + C3892) * C834 + C4881 * C827 +
             C4882 * C833 + C4883 * C826 + C4884 * C832) *
                C32691 +
            ((C3530 + C3529) * C32905 + (C3528 + C3527) * C834 +
             (C3526 + C3525) * C827 + (C3524 + C3523) * C833 +
             (C3522 + C3521) * C826 + (C3520 + C3519) * C832) *
                C32885) *
               C584) *
              C32589 * C473)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C13507 * C119 + C13503 * C126 + C13508 * C352 + C13504 * C367 +
              C13509 * C353 + C13505 * C368 + C13510 * C2100 + C32932 * C2109) *
                 C6200 +
             (C13507 * C127 + C13503 * C140 + C13508 * C366 + C13504 * C382 +
              C13509 * C369 + C13505 * C383 + C13510 * C2108 + C32932 * C2118) *
                 C32542) *
                C32885 +
            ((C14422 + C14423 + C14424 + C14425) * C6200 +
             (C14426 + C14427 + C14428 + C14429) * C32542) *
                C32691) *
               C584 -
           (((C13510 * C7059 + C32932 * C7063 + C13509 * C2644 +
              C13505 * C2649 + C13508 * C1166 + C13504 * C1180 + C13507 * C702 +
              C13503 * C711) *
                 C32542 +
             (C13510 * C7054 + C32932 * C7058 + C13509 * C2640 +
              C13505 * C2643 + C13508 * C1153 + C13504 * C1165 + C13507 * C696 +
              C13503 * C701) *
                 C6200) *
                C32691 +
            ((C13510 * C2111 + C32932 * C2119 + C13509 * C2108 +
              C13505 * C2118 + C13508 * C369 + C13504 * C383 + C13507 * C366 +
              C13503 * C382) *
                 C32542 +
             (C13510 * C2101 + C32932 * C2110 + C13509 * C2100 +
              C13505 * C2109 + C13508 * C353 + C13504 * C368 + C13507 * C352 +
              C13503 * C367) *
                 C6200) *
                C32885) *
               C585) *
              C32589 * C472 +
          ((((C14063 + C14062 + C14061 + C14060) * C6200 +
             (C14059 + C14058 + C14057 + C14056) * C32542) *
                C32885 +
            ((C13507 * C697 + C13503 * C703 + C13508 * C1154 + C13504 * C1167 +
              C13509 * C2641 + C13505 * C2645 + C13510 * C12183 +
              C32932 * C12184) *
                 C6200 +
             (C13507 * C704 + C13503 * C712 + C13508 * C1168 + C13504 * C1181 +
              C13509 * C2646 + C13505 * C2650 + C13510 * C12185 +
              C32932 * C12186) *
                 C32542) *
                C32691) *
               C585 -
           (((C13902 + C13903 + C13904 + C13905) * C32542 +
             (C13906 + C13907 + C13908 + C13909) * C6200) *
                C32691 +
            ((C13551 + C13550 + C13549 + C13548) * C32542 +
             (C13547 + C13546 + C13545 + C13544) * C6200) *
                C32885) *
               C584) *
              C32589 * C473)) /
            (p * q * std::sqrt(p + q));
    d2ee[59] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C3484 * C119 + C32886 * C126 + C3485 * C352 + C32731 * C367) *
                C832 +
            (C3484 * C127 + C32886 * C140 + C3485 * C366 + C32731 * C382) *
                C826 +
            (C3519 + C3520) * C833 + (C3521 + C3522) * C827 + C3535 * C834 +
            C3536 * C32905) *
               C32885 +
           ((C4523 + C4524) * C832 + (C4525 + C4526) * C826 +
            (C3900 + C3899) * C833 + (C3898 + C3897) * C827 + C4343 * C834 +
            C4344 * C32905) *
               C32691) *
              C32603 * C239 -
          (((C4527 + C4528) * C32905 + (C4529 + C4530) * C834 +
            (C4531 + C4532) * C827 + (C4533 + C4534) * C833 +
            (C4535 + C4536) * C826 + (C4537 + C4538) * C832) *
               C32691 +
           ((C3893 + C3894) * C32905 + (C3895 + C3896) * C834 +
            (C3897 + C3898) * C827 + (C3899 + C3900) * C833 +
            (C4526 + C4525) * C826 + (C4524 + C4523) * C832) *
               C32885) *
              C32603 * C240 +
          (((C4538 + C4537) * C832 + (C4536 + C4535) * C826 +
            (C4534 + C4533) * C833 + (C4532 + C4531) * C827 +
            (C4530 + C4529) * C834 + (C4528 + C4527) * C32905) *
               C32885 +
           ((C3484 * C965 + C32886 * C974 + C3485 * C1668 + C32731 * C1671) *
                C832 +
            (C3484 * C973 + C32886 * C983 + C3485 * C1672 + C32731 * C1677) *
                C826 +
            (C3484 * C964 + C32886 * C972 + C3485 * C1669 + C32731 * C1673) *
                C833 +
            (C3484 * C971 + C32886 * C982 + C3485 * C1674 + C32731 * C1678) *
                C827 +
            (C3484 * C963 + C32886 * C970 + C3485 * C1670 + C32731 * C1675) *
                C834 +
            (C3484 * C969 + C32886 * C981 + C3485 * C1676 + C32731 * C1679) *
                C32905) *
               C32691) *
              C32603 * C241) *
         C32577) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C3484 * C119 + C32886 * C126 + C3485 * C352 + C32731 * C367) *
                C832 +
            (C3484 * C127 + C32886 * C140 + C3485 * C366 + C32731 * C382) *
                C826 +
            (C3519 + C3520) * C833 + (C3521 + C3522) * C827 + C3535 * C834 +
            C3536 * C32905) *
               C32885 +
           ((C3484 * C247 + C32886 * C262 + C3485 * C696 + C32731 * C701) *
                C832 +
            (C3484 * C261 + C32886 * C277 + C3485 * C702 + C32731 * C711) *
                C826 +
            (C3900 + C3899) * C833 + (C3898 + C3897) * C827 + C4343 * C834 +
            C4344 * C32905) *
               C32691) *
              C32603 * C32589 * C110 -
          (((C3889 + C3890) * C32905 + (C3891 + C3892) * C834 +
            (C3893 + C3894) * C827 + (C3895 + C3896) * C833 +
            (C3897 + C3898) * C826 + (C3899 + C3900) * C832) *
               C32691 +
           ((C3530 + C3529) * C32905 + (C3528 + C3527) * C834 +
            (C3526 + C3525) * C827 + (C3524 + C3523) * C833 +
            (C3522 + C3521) * C826 + (C3520 + C3519) * C832) *
               C32885) *
              C32603 * C32589 * C111 +
          ((C3535 * C832 + C3536 * C826 + C3537 * C833 + C3538 * C827 +
            (C3534 + C3533) * C834 + (C3532 + C3531) * C32905) *
               C32885 +
           (C4343 * C832 + C4344 * C826 + (C3892 + C3891) * C833 +
            (C3890 + C3889) * C827 +
            (C3484 * C243 + C32886 * C254 + C3485 * C700 + C32731 * C709) *
                C834 +
            (C3484 * C253 + C32886 * C273 + C3485 * C710 + C32731 * C715) *
                C32905) *
               C32691) *
              C32603 * C32589 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C3484 * C119 + C32886 * C126 + C3485 * C352 + C32731 * C367) *
                C6200 +
            (C3484 * C127 + C32886 * C140 + C3485 * C366 + C32731 * C382) *
                C32542) *
               C7669 +
           ((C4523 + C4524) * C6200 + (C4525 + C4526) * C32542) * C7670 +
           (C8606 * C6200 + C8607 * C32542) * C7671 +
           ((C8637 + C8636) * C6200 + (C8635 + C8634) * C32542) * C32926) *
              C32603 * C32589 * C110 -
          (((C8630 + C8631) * C32542 + (C8632 + C8633) * C6200) * C32926 +
           (C8981 * C32542 + C8982 * C6200) * C7671 +
           (C4883 * C32542 + C4884 * C6200) * C7670 +
           ((C3522 + C3521) * C32542 + (C3520 + C3519) * C6200) * C7669) *
              C32603 * C32589 * C111 +
          ((C3535 * C6200 + C3536 * C32542) * C7669 +
           (C4343 * C6200 + C4344 * C32542) * C7670 +
           ((C4530 + C4529) * C6200 + (C4528 + C4527) * C32542) * C7671 +
           ((C3484 * C963 + C32886 * C970 + C3485 * C1670 + C32731 * C1675) *
                C6200 +
            (C3484 * C969 + C32886 * C981 + C3485 * C1676 + C32731 * C1679) *
                C32542) *
               C32926) *
              C32603 * C32589 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C3484 * C119 + C32886 * C126 + C3485 * C352 + C32731 * C367) *
                C6200 +
            (C3484 * C127 + C32886 * C140 + C3485 * C366 + C32731 * C382) *
                C32542) *
               C7669 +
           ((C4523 + C4524) * C6200 + (C4525 + C4526) * C32542) * C7670 +
           C9603 * C7671 + C9610 * C32926) *
              C32603 * C239 -
          (((C9606 + C9607) * C32542 + (C9608 + C9609) * C6200) * C32926 +
           ((C8634 + C8635) * C32542 + (C8636 + C8637) * C6200) * C7671 +
           ((C4535 + C4536) * C32542 + (C4537 + C4538) * C6200) * C7670 +
           ((C4526 + C4525) * C32542 + (C4524 + C4523) * C6200) * C7669) *
              C32603 * C240 +
          (C9603 * C7669 + C9610 * C7670 +
           ((C9609 + C9608) * C6200 + (C9607 + C9606) * C32542) * C7671 +
           ((C3484 * C6263 + C32886 * C6266 + C3485 * C6638 + C32731 * C6639) *
                C6200 +
            (C3484 * C6265 + C32886 * C6269 + C3485 * C6640 + C32731 * C6641) *
                C32542) *
               C32926) *
              C32603 * C241) *
         C32577) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C13507 * C119 + C13503 * C126 + C13508 * C352 + C13504 * C367 +
             C13509 * C353 + C13505 * C368 + C13510 * C2100 + C32932 * C2109) *
                C6200 +
            (C13507 * C127 + C13503 * C140 + C13508 * C366 + C13504 * C382 +
             C13509 * C369 + C13505 * C383 + C13510 * C2108 + C32932 * C2118) *
                C32542) *
               C32885 +
           ((C13507 * C247 + C13503 * C262 + C13508 * C696 + C13504 * C701 +
             C13509 * C1153 + C13505 * C1165 + C13510 * C2640 +
             C32932 * C2643) *
                C6200 +
            (C13507 * C261 + C13503 * C277 + C13508 * C702 + C13504 * C711 +
             C13509 * C1166 + C13505 * C1180 + C13510 * C2644 +
             C32932 * C2649) *
                C32542) *
               C32691) *
              C32603 * C32589 * C110 -
          (((C13902 + C13903 + C13904 + C13905) * C32542 +
            (C13906 + C13907 + C13908 + C13909) * C6200) *
               C32691 +
           ((C13551 + C13550 + C13549 + C13548) * C32542 +
            (C13547 + C13546 + C13545 + C13544) * C6200) *
               C32885) *
              C32603 * C32589 * C111 +
          (((C13559 + C13558 + C13557 + C13556) * C6200 +
            (C13555 + C13554 + C13553 + C13552) * C32542) *
               C32885 +
           ((C13507 * C245 + C13503 * C258 + C13508 * C698 + C13504 * C705 +
             C13509 * C1155 + C13505 * C1169 + C13510 * C2642 +
             C32932 * C2647) *
                C6200 +
            (C13507 * C257 + C13503 * C275 + C13508 * C706 + C13504 * C713 +
             C13509 * C1170 + C13505 * C1182 + C13510 * C2648 +
             C32932 * C2651) *
                C32542) *
               C32691) *
              C32603 * C32589 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C13507 * C119 + C13503 * C126 + C13508 * C352 + C13504 * C367 +
             C13509 * C353 + C13505 * C368 + C13510 * C2100 + C32932 * C2109) *
                C6200 +
            (C13507 * C127 + C13503 * C140 + C13508 * C366 + C13504 * C382 +
             C13509 * C369 + C13505 * C383 + C13510 * C2108 + C32932 * C2118) *
                C32542) *
               C32885 +
           ((C14422 + C14423 + C14424 + C14425) * C6200 +
            (C14426 + C14427 + C14428 + C14429) * C32542) *
               C32691) *
              C32603 * C239 -
          (((C14430 + C14431 + C14432 + C14433) * C32542 +
            (C14434 + C14435 + C14436 + C14437) * C6200) *
               C32691 +
           ((C14429 + C14428 + C14427 + C14426) * C32542 +
            (C14425 + C14424 + C14423 + C14422) * C6200) *
               C32885) *
              C32603 * C240 +
          (((C14437 + C14436 + C14435 + C14434) * C6200 +
            (C14433 + C14432 + C14431 + C14430) * C32542) *
               C32885 +
           ((C13507 * C965 + C13503 * C974 + C13508 * C1668 + C13504 * C1671 +
             C13509 * C6359 + C13505 * C6363 + C13510 * C7529 +
             C32932 * C7530) *
                C6200 +
            (C13507 * C973 + C13503 * C983 + C13508 * C1672 + C13504 * C1677 +
             C13509 * C6364 + C13505 * C6368 + C13510 * C7531 +
             C32932 * C7532) *
                C32542) *
               C32691) *
              C32603 * C241) *
         C32577) /
            (p * q * std::sqrt(p + q));
    d2ee[60] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C113 * C119 + C32644 * C126) * C114 +
                (C113 * C127 + C32644 * C140) * C102 + C168 * C115 +
                C169 * C103 + C170 * C116 + C171 * C104 + C172 * C117 +
                C173 * C105 + C174 * C118 + C175 * C106) *
                   C32633 * C32603 * C470 -
               (C495 * C106 + C496 * C118 + C497 * C105 + C498 * C117 +
                C499 * C104 + C500 * C116 + C501 * C103 + C502 * C115 +
                (C113 * C261 + C32644 * C277) * C102 +
                (C113 * C247 + C32644 * C262) * C114) *
                   C32633 * C32603 * C471) *
                  C472 +
              ((C502 * C114 + C501 * C102 + C500 * C115 + C499 * C103 +
                C498 * C116 + C497 * C104 + C496 * C117 + C495 * C105 +
                (C113 * C474 + C32644 * C475) * C118 +
                (C113 * C476 + C32644 * C477) * C106) *
                   C32633 * C32603 * C471 -
               (C176 * C106 + C177 * C118 + C175 * C105 + C174 * C117 +
                C173 * C104 + C172 * C116 + C171 * C103 + C170 * C115 +
                C169 * C102 + C168 * C114) *
                   C32633 * C32603 * C470) *
                  C473) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C113 * C119 + C32644 * C126) * C832 +
                 (C113 * C127 + C32644 * C140) * C826 + C168 * C833 +
                 C169 * C827 + C170 * C834 + C171 * C32905) *
                    C32951 +
                (C1026 + C1027 + C992 + C993 + C994 + C995) * C32939 +
                C1040 * C32916) *
                   C32603 * C470 -
               ((C1030 + C1031 + C1032 + C1033 + C1034 + C1035) * C32916 +
                (C1003 + C1002 + C1001 + C1000 + C1029 + C1028) * C32939 +
                (C995 + C994 + C993 + C992 + C1027 + C1026) * C32951) *
                   C32603 * C471) *
                  C472 +
              (((C1337 + C1338 + C1339 + C1340 + C1341 + C1342) * C32951 +
                (C1343 + C1344 + C1345 + C1346 + C1347 + C1348) * C32939 +
                (C1023 * C832 + C1022 * C826 + C1021 * C833 + C1020 * C827 +
                 (C113 * C1332 + C32644 * C1333) * C834 +
                 (C113 * C1334 + C32644 * C1335) * C32905) *
                    C32916) *
                   C32603 * C471 -
               ((C1348 + C1347 + C1346 + C1345 + C1344 + C1343) * C32916 +
                (C1342 + C1341 + C1340 + C1339 + C1338 + C1337) * C32939 +
                (C173 * C32905 + C172 * C834 + C171 * C827 + C170 * C833 +
                 C169 * C826 + C168 * C832) *
                    C32951) *
                   C32603 * C470) *
                  C473)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C1817 * C119 + C32952 * C126 + C1818 * C352 + C32941 * C367 +
             C1819 * C353 + C32919 * C368) *
                C832 +
            (C1817 * C127 + C32952 * C140 + C1818 * C366 + C32941 * C382 +
             C1819 * C369 + C32919 * C383) *
                C826 +
            (C1857 + C1858 + C1859) * C833 + (C1860 + C1861 + C1862) * C827 +
            C1877 * C834 + C1878 * C32905) *
               C32633 * C32603 * C470 -
           ((C2297 + C2298 + C2299) * C32905 + (C2300 + C2301 + C2302) * C834 +
            (C2303 + C2304 + C2305) * C827 + (C2306 + C2307 + C2308) * C833 +
            (C1819 * C1166 + C32919 * C1180 + C1818 * C702 + C32941 * C711 +
             C1817 * C261 + C32952 * C277) *
                C826 +
            (C1819 * C1153 + C32919 * C1165 + C1818 * C696 + C32941 * C701 +
             C1817 * C247 + C32952 * C262) *
                C832) *
               C32633 * C32603 * C471) *
              C472 +
          (((C2308 + C2307 + C2306) * C832 + (C2305 + C2304 + C2303) * C826 +
            (C2302 + C2301 + C2300) * C833 + (C2299 + C2298 + C2297) * C827 +
            (C1817 * C244 + C32952 * C256 + C1818 * C699 + C32941 * C707 +
             C1819 * C2268 + C32919 * C2269) *
                C834 +
            (C1817 * C255 + C32952 * C274 + C1818 * C708 + C32941 * C714 +
             C1819 * C2270 + C32919 * C2271) *
                C32905) *
               C32633 * C32603 * C471 -
           ((C1869 + C1870 + C1871) * C32905 + (C1872 + C1873 + C1874) * C834 +
            (C1868 + C1867 + C1866) * C827 + (C1865 + C1864 + C1863) * C833 +
            (C1862 + C1861 + C1860) * C826 + (C1859 + C1858 + C1857) * C832) *
               C32633 * C32603 * C470) *
              C473)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C119 + C32644 * C126) * C5424 +
             (C113 * C127 + C32644 * C140) * C32948 + C168 * C5425 +
             C169 * C32935 + C170 * C5426 + C171 * C32905) *
                C5421 +
            (C5538 + C5539 + C5540 + C5541 + C5542 + C5543) * C5422 +
            C5560 * C32916) *
               C32603 * C470 -
           ((C5550 + C5551 + C5552 + C5553 + C5554 + C5555) * C32916 +
            (C5549 + C5548 + C5547 + C5546 + C5545 + C5544) * C5422 +
            (C5543 + C5542 + C5541 + C5540 + C5539 + C5538) * C5421) *
               C32603 * C471) *
              C472 +
          (((C5817 + C5818 + C5819 + C5820 + C5821 + C5822) * C5421 +
            (C5823 + C5824 + C5825 + C5826 + C5827 + C5828) * C5422 +
            (C1023 * C5424 + C1022 * C32948 + C1021 * C5425 + C1020 * C32935 +
             (C113 * C1332 + C32644 * C1333) * C5426 +
             (C113 * C1334 + C32644 * C1335) * C32905) *
                C32916) *
               C32603 * C471 -
           ((C5828 + C5827 + C5826 + C5825 + C5824 + C5823) * C32916 +
            (C5822 + C5821 + C5820 + C5819 + C5818 + C5817) * C5422 +
            (C173 * C32905 + C172 * C5426 + C171 * C32935 + C170 * C5425 +
             C169 * C32948 + C168 * C5424) *
                C5421) *
               C32603 * C470) *
              C473)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C119 + C32644 * C126) * C6200 +
             (C113 * C127 + C32644 * C140) * C32542) *
                C6195 +
            (C6272 + C6273) * C6196 + C6286 * C6197 + C6287 * C6198 +
            C6296 * C6199) *
               C32603 * C470 -
           ((C6294 + C6295) * C6199 + (C6293 + C6292) * C6198 +
            (C6277 + C6276) * C6197 + (C6275 + C6274) * C6196 +
            (C6273 + C6272) * C6195) *
               C32603 * C471) *
              C472 +
          (((C6457 + C6458) * C6195 + (C6459 + C6460) * C6196 +
            (C6461 + C6462) * C6197 + (C6469 + C6470) * C6198 +
            ((C113 * C6452 + C32644 * C6453) * C6200 +
             (C113 * C6454 + C32644 * C6455) * C32542) *
                C6199) *
               C32603 * C471 -
           ((C6470 + C6469) * C6199 + (C6462 + C6461) * C6198 +
            (C6460 + C6459) * C6197 + (C6458 + C6457) * C6196 +
            (C169 * C32542 + C168 * C6200) * C6195) *
               C32603 * C470) *
              C473)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C1817 * C119 + C32952 * C126 + C1818 * C352 + C32941 * C367 +
              C1819 * C353 + C32919 * C368) *
                 C6200 +
             (C1817 * C127 + C32952 * C140 + C1818 * C366 + C32941 * C382 +
              C1819 * C369 + C32919 * C383) *
                 C32542) *
                C5421 +
            ((C6919 + C6920 + C6921) * C6200 +
             (C6922 + C6923 + C6924) * C32542) *
                C5422 +
            C6943 * C32916) *
               C32603 * C470 -
           (((C6931 + C6932 + C6933) * C32542 +
             (C6934 + C6935 + C6936) * C6200) *
                C32916 +
            ((C6930 + C6929 + C6928) * C32542 +
             (C6927 + C6926 + C6925) * C6200) *
                C5422 +
            ((C6924 + C6923 + C6922) * C32542 +
             (C6921 + C6920 + C6919) * C6200) *
                C5421) *
               C32603 * C471) *
              C472 +
          ((((C2308 + C2307 + C2306) * C6200 +
             (C2305 + C2304 + C2303) * C32542) *
                C5421 +
            ((C7228 + C7229 + C7230) * C6200 +
             (C7231 + C7232 + C7233) * C32542) *
                C5422 +
            ((C1817 * C964 + C32952 * C972 + C1818 * C1669 + C32941 * C1673 +
              C1819 * C7211 + C32919 * C7212) *
                 C6200 +
             (C1817 * C971 + C32952 * C982 + C1818 * C1674 + C32941 * C1678 +
              C1819 * C7213 + C32919 * C7214) *
                 C32542) *
                C32916) *
               C32603 * C471 -
           (((C7233 + C7232 + C7231) * C32542 +
             (C7230 + C7229 + C7228) * C6200) *
                C32916 +
            ((C2303 + C2304 + C2305) * C32542 +
             (C2306 + C2307 + C2308) * C6200) *
                C5422 +
            ((C1862 + C1861 + C1860) * C32542 +
             (C1859 + C1858 + C1857) * C6200) *
                C5421) *
               C32603 * C470) *
              C473)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C10223 * C119 + C10220 * C126 + C10224 * C352 + C10221 * C367 +
             C10225 * C353 + C32919 * C368) *
                C5424 +
            (C10223 * C127 + C10220 * C140 + C10224 * C366 + C10221 * C382 +
             C10225 * C369 + C32919 * C383) *
                C32948 +
            (C10263 + C10264 + C10265) * C5425 +
            (C10266 + C10267 + C10268) * C32935 + C10283 * C5426 +
            C10284 * C32905) *
               C32633 * C32603 * C470 -
           ((C10675 + C10676 + C10677) * C32905 +
            (C10678 + C10679 + C10680) * C5426 +
            (C10681 + C10682 + C10683) * C32935 +
            (C10684 + C10685 + C10686) * C5425 +
            (C10225 * C1166 + C32919 * C1180 + C10224 * C702 + C10221 * C711 +
             C10223 * C261 + C10220 * C277) *
                C32948 +
            (C10225 * C1153 + C32919 * C1165 + C10224 * C696 + C10221 * C701 +
             C10223 * C247 + C10220 * C262) *
                C5424) *
               C32633 * C32603 * C471) *
              C472 +
          (((C10686 + C10685 + C10684) * C5424 +
            (C10683 + C10682 + C10681) * C32948 +
            (C10680 + C10679 + C10678) * C5425 +
            (C10677 + C10676 + C10675) * C32935 +
            (C10223 * C244 + C10220 * C256 + C10224 * C699 + C10221 * C707 +
             C10225 * C2268 + C32919 * C2269) *
                C5426 +
            (C10223 * C255 + C10220 * C274 + C10224 * C708 + C10221 * C714 +
             C10225 * C2270 + C32919 * C2271) *
                C32905) *
               C32633 * C32603 * C471 -
           ((C10275 + C10276 + C10277) * C32905 +
            (C10278 + C10279 + C10280) * C5426 +
            (C10274 + C10273 + C10272) * C32935 +
            (C10271 + C10270 + C10269) * C5425 +
            (C10268 + C10267 + C10266) * C32948 +
            (C10265 + C10264 + C10263) * C5424) *
               C32633 * C32603 * C470) *
              C473)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C10223 * C119 + C10220 * C126 + C10224 * C352 + C10221 * C367 +
              C10225 * C353 + C32919 * C368) *
                 C6200 +
             (C10223 * C127 + C10220 * C140 + C10224 * C366 + C10221 * C382 +
              C10225 * C369 + C32919 * C383) *
                 C32542) *
                C32951 +
            ((C11271 + C11272 + C11273) * C6200 +
             (C11274 + C11275 + C11276) * C32542) *
                C32939 +
            C11295 * C32916) *
               C32603 * C470 -
           (((C11283 + C11284 + C11285) * C32542 +
             (C11286 + C11287 + C11288) * C6200) *
                C32916 +
            ((C11282 + C11281 + C11280) * C32542 +
             (C11279 + C11278 + C11277) * C6200) *
                C32939 +
            ((C11276 + C11275 + C11274) * C32542 +
             (C11273 + C11272 + C11271) * C6200) *
                C32951) *
               C32603 * C471) *
              C472 +
          ((((C10686 + C10685 + C10684) * C6200 +
             (C10683 + C10682 + C10681) * C32542) *
                C32951 +
            ((C11564 + C11565 + C11566) * C6200 +
             (C11567 + C11568 + C11569) * C32542) *
                C32939 +
            ((C10223 * C964 + C10220 * C972 + C10224 * C1669 + C10221 * C1673 +
              C10225 * C7211 + C32919 * C7212) *
                 C6200 +
             (C10223 * C971 + C10220 * C982 + C10224 * C1674 + C10221 * C1678 +
              C10225 * C7213 + C32919 * C7214) *
                 C32542) *
                C32916) *
               C32603 * C471 -
           (((C11569 + C11568 + C11567) * C32542 +
             (C11566 + C11565 + C11564) * C6200) *
                C32916 +
            ((C10681 + C10682 + C10683) * C32542 +
             (C10684 + C10685 + C10686) * C6200) *
                C32939 +
            ((C10268 + C10267 + C10266) * C32542 +
             (C10265 + C10264 + C10263) * C6200) *
                C32951) *
               C32603 * C470) *
              C473)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C11964 * C119 + C11959 * C126 + C11965 * C352 + C11960 * C367 +
             C11966 * C353 + C11961 * C368 + C11967 * C2100 + C11962 * C2109 +
             C11968 * C2101 + C11963 * C2110) *
                C6200 +
            (C11964 * C127 + C11959 * C140 + C11965 * C366 + C11960 * C382 +
             C11966 * C369 + C11961 * C383 + C11967 * C2108 + C11962 * C2118 +
             C11968 * C2111 + C11963 * C2119) *
                C32542) *
               C32633 * C32603 * C470 -
           ((C11968 * C7059 + C11963 * C7063 + C11967 * C2644 + C11962 * C2649 +
             C11966 * C1166 + C11961 * C1180 + C11965 * C702 + C11960 * C711 +
             C11964 * C261 + C11959 * C277) *
                C32542 +
            (C11968 * C7054 + C11963 * C7058 + C11967 * C2640 + C11962 * C2643 +
             C11966 * C1153 + C11961 * C1165 + C11965 * C696 + C11960 * C701 +
             C11964 * C247 + C11959 * C262) *
                C6200) *
               C32633 * C32603 * C471) *
              C472 +
          (((C11964 * C246 + C11959 * C260 + C11965 * C697 + C11960 * C703 +
             C11966 * C1154 + C11961 * C1167 + C11967 * C2641 + C11962 * C2645 +
             C11968 * C12183 + C11963 * C12184) *
                C6200 +
            (C11964 * C259 + C11959 * C276 + C11965 * C704 + C11960 * C712 +
             C11966 * C1168 + C11961 * C1181 + C11967 * C2646 + C11962 * C2650 +
             C11968 * C12185 + C11963 * C12186) *
                C32542) *
               C32633 * C32603 * C471 -
           ((C11968 * C2113 + C11963 * C2120 + C11967 * C2106 + C11962 * C2117 +
             C11966 * C371 + C11961 * C384 + C11965 * C364 + C11960 * C381 +
             C11964 * C129 + C11959 * C141) *
                C32542 +
            (C11968 * C2102 + C11963 * C2112 + C11967 * C2099 + C11962 * C2107 +
             C11966 * C354 + C11961 * C370 + C11965 * C351 + C11960 * C365 +
             C11964 * C120 + C11959 * C128) *
                C6200) *
               C32633 * C32603 * C470) *
              C473)) /
            (p * q * std::sqrt(p + q));
    d2ee[61] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C113 * C119 + C32644 * C126) * C114 +
                (C113 * C127 + C32644 * C140) * C102 + C168 * C115 +
                C169 * C103 + C170 * C116 + C171 * C104 + C172 * C117 +
                C173 * C105 + C174 * C118 + C175 * C106) *
                   C32633 * C584 -
               (C607 * C106 + C608 * C118 + C609 * C105 + C610 * C117 +
                C611 * C104 + C612 * C116 + C613 * C103 + C614 * C115 +
                (C113 * C366 + C32644 * C382) * C102 +
                (C113 * C352 + C32644 * C367) * C114) *
                   C32633 * C585) *
                  C470 +
              (((C113 * C696 + C32644 * C701) * C114 +
                (C113 * C702 + C32644 * C711) * C102 +
                (C113 * C697 + C32644 * C703) * C115 +
                (C113 * C704 + C32644 * C712) * C103 +
                (C113 * C698 + C32644 * C705) * C116 +
                (C113 * C706 + C32644 * C713) * C104 +
                (C113 * C699 + C32644 * C707) * C117 +
                (C113 * C708 + C32644 * C714) * C105 +
                (C113 * C700 + C32644 * C709) * C118 +
                (C113 * C710 + C32644 * C715) * C106) *
                   C32633 * C585 -
               (C495 * C106 + C496 * C118 + C497 * C105 + C498 * C117 +
                C499 * C104 + C500 * C116 + C501 * C103 + C502 * C115 +
                (C113 * C261 + C32644 * C277) * C102 +
                (C113 * C247 + C32644 * C262) * C114) *
                   C32633 * C584) *
                  C471) *
             C32577 +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C113 * C119 + C32644 * C126) * C832 +
                 (C113 * C127 + C32644 * C140) * C826 + C168 * C833 +
                 C169 * C827 + C170 * C834 + C171 * C32905) *
                    C32951 +
                (C1026 + C1027 + C992 + C993 + C994 + C995) * C32939 +
                C1040 * C32916) *
                   C584 -
               ((C1681 + C1682 + C1683 + C1684 + C1701 + C1702) * C32916 +
                (C1689 + C1690 + C1691 + C1692 + C1703 + C1704) * C32939 +
                (C611 * C32905 + C612 * C834 + C613 * C827 + C614 * C833 +
                 (C113 * C366 + C32644 * C382) * C826 +
                 (C113 * C352 + C32644 * C367) * C832) *
                    C32951) *
                   C585) *
                  C470 +
              (((C1704 + C1703 + C1692 + C1691 + C1690 + C1689) * C32951 +
                (C1702 + C1701 + C1684 + C1683 + C1682 + C1681) * C32939 +
                ((C113 * C1668 + C32644 * C1671) * C832 +
                 (C113 * C1672 + C32644 * C1677) * C826 +
                 (C113 * C1669 + C32644 * C1673) * C833 +
                 (C113 * C1674 + C32644 * C1678) * C827 +
                 (C113 * C1670 + C32644 * C1675) * C834 +
                 (C113 * C1676 + C32644 * C1679) * C32905) *
                    C32916) *
                   C585 -
               ((C1030 + C1031 + C1032 + C1033 + C1034 + C1035) * C32916 +
                (C1003 + C1002 + C1001 + C1000 + C1029 + C1028) * C32939 +
                (C995 + C994 + C993 + C992 + C1027 + C1026) * C32951) *
                   C584) *
                  C471) *
             C32577) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C1817 * C119 + C32952 * C126 + C1818 * C352 + C32941 * C367 +
             C1819 * C353 + C32919 * C368) *
                C832 +
            (C1817 * C127 + C32952 * C140 + C1818 * C366 + C32941 * C382 +
             C1819 * C369 + C32919 * C383) *
                C826 +
            (C1857 + C1858 + C1859) * C833 + (C1860 + C1861 + C1862) * C827 +
            C1877 * C834 + C1878 * C32905) *
               C32633 * C584 -
           ((C2483 + C2484 + C2485) * C32905 + (C2486 + C2487 + C2488) * C834 +
            (C2489 + C2490 + C2491) * C827 + (C2492 + C2493 + C2494) * C833 +
            (C1819 * C2108 + C32919 * C2118 + C1818 * C369 + C32941 * C383 +
             C1817 * C366 + C32952 * C382) *
                C826 +
            (C1819 * C2100 + C32919 * C2109 + C1818 * C353 + C32941 * C368 +
             C1817 * C352 + C32952 * C367) *
                C832) *
               C32633 * C585) *
              C470 +
          (((C1817 * C696 + C32952 * C701 + C1818 * C1153 + C32941 * C1165 +
             C1819 * C2640 + C32919 * C2643) *
                C832 +
            (C1817 * C702 + C32952 * C711 + C1818 * C1166 + C32941 * C1180 +
             C1819 * C2644 + C32919 * C2649) *
                C826 +
            (C1817 * C697 + C32952 * C703 + C1818 * C1154 + C32941 * C1167 +
             C1819 * C2641 + C32919 * C2645) *
                C833 +
            (C1817 * C704 + C32952 * C712 + C1818 * C1168 + C32941 * C1181 +
             C1819 * C2646 + C32919 * C2650) *
                C827 +
            (C1817 * C698 + C32952 * C705 + C1818 * C1155 + C32941 * C1169 +
             C1819 * C2642 + C32919 * C2647) *
                C834 +
            (C1817 * C706 + C32952 * C713 + C1818 * C1170 + C32941 * C1182 +
             C1819 * C2648 + C32919 * C2651) *
                C32905) *
               C32633 * C585 -
           ((C2297 + C2298 + C2299) * C32905 + (C2300 + C2301 + C2302) * C834 +
            (C2303 + C2304 + C2305) * C827 + (C2306 + C2307 + C2308) * C833 +
            (C1819 * C1166 + C32919 * C1180 + C1818 * C702 + C32941 * C711 +
             C1817 * C261 + C32952 * C277) *
                C826 +
            (C1819 * C1153 + C32919 * C1165 + C1818 * C696 + C32941 * C701 +
             C1817 * C247 + C32952 * C262) *
                C832) *
               C32633 * C584) *
              C471) *
         C32577) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C119 + C32644 * C126) * C5424 +
             (C113 * C127 + C32644 * C140) * C32948 + C168 * C5425 +
             C169 * C32935 + C170 * C5426 + C171 * C32905) *
                C5421 +
            (C5538 + C5539 + C5540 + C5541 + C5542 + C5543) * C5422 +
            C5560 * C32916) *
               C584 -
           ((C6121 + C6122 + C6123 + C6124 + C6125 + C6126) * C32916 +
            (C6127 + C6128 + C6129 + C6130 + C6131 + C6132) * C5422 +
            (C611 * C32905 + C612 * C5426 + C613 * C32935 + C614 * C5425 +
             (C113 * C366 + C32644 * C382) * C32948 +
             (C113 * C352 + C32644 * C367) * C5424) *
                C5421) *
               C585) *
              C470 +
          (((C6132 + C6131 + C6130 + C6129 + C6128 + C6127) * C5421 +
            (C6126 + C6125 + C6124 + C6123 + C6122 + C6121) * C5422 +
            ((C113 * C1668 + C32644 * C1671) * C5424 +
             (C113 * C1672 + C32644 * C1677) * C32948 +
             (C113 * C1669 + C32644 * C1673) * C5425 +
             (C113 * C1674 + C32644 * C1678) * C32935 +
             (C113 * C1670 + C32644 * C1675) * C5426 +
             (C113 * C1676 + C32644 * C1679) * C32905) *
                C32916) *
               C585 -
           ((C5550 + C5551 + C5552 + C5553 + C5554 + C5555) * C32916 +
            (C5549 + C5548 + C5547 + C5546 + C5545 + C5544) * C5422 +
            (C5543 + C5542 + C5541 + C5540 + C5539 + C5538) * C5421) *
               C584) *
              C471) *
         C32577) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C119 + C32644 * C126) * C6200 +
             (C113 * C127 + C32644 * C140) * C32542) *
                C6195 +
            (C6272 + C6273) * C6196 + C6286 * C6197 + C6287 * C6198 +
            C6296 * C6199) *
               C584 -
           ((C6659 + C6660) * C6199 + (C6661 + C6662) * C6198 +
            (C6651 + C6652) * C6197 + (C6653 + C6654) * C6196 +
            ((C113 * C366 + C32644 * C382) * C32542 +
             (C113 * C352 + C32644 * C367) * C6200) *
                C6195) *
               C585) *
              C470 +
          (((C6654 + C6653) * C6195 + (C6652 + C6651) * C6196 +
            (C6662 + C6661) * C6197 + (C6660 + C6659) * C6198 +
            ((C113 * C6638 + C32644 * C6639) * C6200 +
             (C113 * C6640 + C32644 * C6641) * C32542) *
                C6199) *
               C585 -
           ((C6294 + C6295) * C6199 + (C6293 + C6292) * C6198 +
            (C6277 + C6276) * C6197 + (C6275 + C6274) * C6196 +
            (C6273 + C6272) * C6195) *
               C584) *
              C471) *
         C32577) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C1817 * C119 + C32952 * C126 + C1818 * C352 + C32941 * C367 +
              C1819 * C353 + C32919 * C368) *
                 C6200 +
             (C1817 * C127 + C32952 * C140 + C1818 * C366 + C32941 * C382 +
              C1819 * C369 + C32919 * C383) *
                 C32542) *
                C5421 +
            ((C6919 + C6920 + C6921) * C6200 +
             (C6922 + C6923 + C6924) * C32542) *
                C5422 +
            C6943 * C32916) *
               C584 -
           (((C7558 + C7559 + C7560) * C32542 +
             (C7561 + C7562 + C7563) * C6200) *
                C32916 +
            ((C7564 + C7565 + C7566) * C32542 +
             (C7567 + C7568 + C7569) * C6200) *
                C5422 +
            ((C1819 * C2108 + C32919 * C2118 + C1818 * C369 + C32941 * C383 +
              C1817 * C366 + C32952 * C382) *
                 C32542 +
             (C1819 * C2100 + C32919 * C2109 + C1818 * C353 + C32941 * C368 +
              C1817 * C352 + C32952 * C367) *
                 C6200) *
                C5421) *
               C585) *
              C470 +
          ((((C7569 + C7568 + C7567) * C6200 +
             (C7566 + C7565 + C7564) * C32542) *
                C5421 +
            ((C7563 + C7562 + C7561) * C6200 +
             (C7560 + C7559 + C7558) * C32542) *
                C5422 +
            ((C1817 * C1668 + C32952 * C1671 + C1818 * C6359 + C32941 * C6363 +
              C1819 * C7529 + C32919 * C7530) *
                 C6200 +
             (C1817 * C1672 + C32952 * C1677 + C1818 * C6364 + C32941 * C6368 +
              C1819 * C7531 + C32919 * C7532) *
                 C32542) *
                C32916) *
               C585 -
           (((C6931 + C6932 + C6933) * C32542 +
             (C6934 + C6935 + C6936) * C6200) *
                C32916 +
            ((C6930 + C6929 + C6928) * C32542 +
             (C6927 + C6926 + C6925) * C6200) *
                C5422 +
            ((C6924 + C6923 + C6922) * C32542 +
             (C6921 + C6920 + C6919) * C6200) *
                C5421) *
               C584) *
              C471) *
         C32577) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C10223 * C119 + C10220 * C126 + C10224 * C352 + C10221 * C367 +
             C10225 * C353 + C32919 * C368) *
                C5424 +
            (C10223 * C127 + C10220 * C140 + C10224 * C366 + C10221 * C382 +
             C10225 * C369 + C32919 * C383) *
                C32948 +
            (C10263 + C10264 + C10265) * C5425 +
            (C10266 + C10267 + C10268) * C32935 + C10283 * C5426 +
            C10284 * C32905) *
               C32633 * C584 -
           ((C10857 + C10858 + C10859) * C32905 +
            (C10860 + C10861 + C10862) * C5426 +
            (C10863 + C10864 + C10865) * C32935 +
            (C10866 + C10867 + C10868) * C5425 +
            (C10225 * C2108 + C32919 * C2118 + C10224 * C369 + C10221 * C383 +
             C10223 * C366 + C10220 * C382) *
                C32948 +
            (C10225 * C2100 + C32919 * C2109 + C10224 * C353 + C10221 * C368 +
             C10223 * C352 + C10220 * C367) *
                C5424) *
               C32633 * C585) *
              C470 +
          (((C10223 * C696 + C10220 * C701 + C10224 * C1153 + C10221 * C1165 +
             C10225 * C2640 + C32919 * C2643) *
                C5424 +
            (C10223 * C702 + C10220 * C711 + C10224 * C1166 + C10221 * C1180 +
             C10225 * C2644 + C32919 * C2649) *
                C32948 +
            (C10223 * C697 + C10220 * C703 + C10224 * C1154 + C10221 * C1167 +
             C10225 * C2641 + C32919 * C2645) *
                C5425 +
            (C10223 * C704 + C10220 * C712 + C10224 * C1168 + C10221 * C1181 +
             C10225 * C2646 + C32919 * C2650) *
                C32935 +
            (C10223 * C698 + C10220 * C705 + C10224 * C1155 + C10221 * C1169 +
             C10225 * C2642 + C32919 * C2647) *
                C5426 +
            (C10223 * C706 + C10220 * C713 + C10224 * C1170 + C10221 * C1182 +
             C10225 * C2648 + C32919 * C2651) *
                C32905) *
               C32633 * C585 -
           ((C10675 + C10676 + C10677) * C32905 +
            (C10678 + C10679 + C10680) * C5426 +
            (C10681 + C10682 + C10683) * C32935 +
            (C10684 + C10685 + C10686) * C5425 +
            (C10225 * C1166 + C32919 * C1180 + C10224 * C702 + C10221 * C711 +
             C10223 * C261 + C10220 * C277) *
                C32948 +
            (C10225 * C1153 + C32919 * C1165 + C10224 * C696 + C10221 * C701 +
             C10223 * C247 + C10220 * C262) *
                C5424) *
               C32633 * C584) *
              C471) *
         C32577) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C10223 * C119 + C10220 * C126 + C10224 * C352 + C10221 * C367 +
              C10225 * C353 + C32919 * C368) *
                 C6200 +
             (C10223 * C127 + C10220 * C140 + C10224 * C366 + C10221 * C382 +
              C10225 * C369 + C32919 * C383) *
                 C32542) *
                C32951 +
            ((C11271 + C11272 + C11273) * C6200 +
             (C11274 + C11275 + C11276) * C32542) *
                C32939 +
            C11295 * C32916) *
               C584 -
           (((C11886 + C11887 + C11888) * C32542 +
             (C11889 + C11890 + C11891) * C6200) *
                C32916 +
            ((C11892 + C11893 + C11894) * C32542 +
             (C11895 + C11896 + C11897) * C6200) *
                C32939 +
            ((C10225 * C2108 + C32919 * C2118 + C10224 * C369 + C10221 * C383 +
              C10223 * C366 + C10220 * C382) *
                 C32542 +
             (C10225 * C2100 + C32919 * C2109 + C10224 * C353 + C10221 * C368 +
              C10223 * C352 + C10220 * C367) *
                 C6200) *
                C32951) *
               C585) *
              C470 +
          ((((C11897 + C11896 + C11895) * C6200 +
             (C11894 + C11893 + C11892) * C32542) *
                C32951 +
            ((C11891 + C11890 + C11889) * C6200 +
             (C11888 + C11887 + C11886) * C32542) *
                C32939 +
            ((C10223 * C1668 + C10220 * C1671 + C10224 * C6359 +
              C10221 * C6363 + C10225 * C7529 + C32919 * C7530) *
                 C6200 +
             (C10223 * C1672 + C10220 * C1677 + C10224 * C6364 +
              C10221 * C6368 + C10225 * C7531 + C32919 * C7532) *
                 C32542) *
                C32916) *
               C585 -
           (((C11283 + C11284 + C11285) * C32542 +
             (C11286 + C11287 + C11288) * C6200) *
                C32916 +
            ((C11282 + C11281 + C11280) * C32542 +
             (C11279 + C11278 + C11277) * C6200) *
                C32939 +
            ((C11276 + C11275 + C11274) * C32542 +
             (C11273 + C11272 + C11271) * C6200) *
                C32951) *
               C584) *
              C471) *
         C32577) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C11964 * C119 + C11959 * C126 + C11965 * C352 + C11960 * C367 +
             C11966 * C353 + C11961 * C368 + C11967 * C2100 + C11962 * C2109 +
             C11968 * C2101 + C11963 * C2110) *
                C6200 +
            (C11964 * C127 + C11959 * C140 + C11965 * C366 + C11960 * C382 +
             C11966 * C369 + C11961 * C383 + C11967 * C2108 + C11962 * C2118 +
             C11968 * C2111 + C11963 * C2119) *
                C32542) *
               C32633 * C584 -
           ((C11968 * C12095 + C11963 * C12099 + C11967 * C2111 +
             C11962 * C2119 + C11966 * C2108 + C11961 * C2118 + C11965 * C369 +
             C11960 * C383 + C11964 * C366 + C11959 * C382) *
                C32542 +
            (C11968 * C12093 + C11963 * C12096 + C11967 * C2101 +
             C11962 * C2110 + C11966 * C2100 + C11961 * C2109 + C11965 * C353 +
             C11960 * C368 + C11964 * C352 + C11959 * C367) *
                C6200) *
               C32633 * C585) *
              C470 +
          (((C11964 * C696 + C11959 * C701 + C11965 * C1153 + C11960 * C1165 +
             C11966 * C2640 + C11961 * C2643 + C11967 * C7054 + C11962 * C7058 +
             C11968 * C12355 + C11963 * C12356) *
                C6200 +
            (C11964 * C702 + C11959 * C711 + C11965 * C1166 + C11960 * C1180 +
             C11966 * C2644 + C11961 * C2649 + C11967 * C7059 + C11962 * C7063 +
             C11968 * C12357 + C11963 * C12358) *
                C32542) *
               C32633 * C585 -
           ((C11968 * C7059 + C11963 * C7063 + C11967 * C2644 + C11962 * C2649 +
             C11966 * C1166 + C11961 * C1180 + C11965 * C702 + C11960 * C711 +
             C11964 * C261 + C11959 * C277) *
                C32542 +
            (C11968 * C7054 + C11963 * C7058 + C11967 * C2640 + C11962 * C2643 +
             C11966 * C1153 + C11961 * C1165 + C11965 * C696 + C11960 * C701 +
             C11964 * C247 + C11959 * C262) *
                C6200) *
               C32633 * C584) *
              C471) *
         C32577) /
            (p * q * std::sqrt(p + q));
    d2ee[62] +=
        (-0.25 * std::pow(Pi, 2.5) *
             (((C113 * C119 + C32644 * C126) * C114 +
               (C113 * C127 + C32644 * C140) * C102 + C168 * C115 +
               C169 * C103 + C170 * C116 + C171 * C104 + C172 * C117 +
               C173 * C105 + C174 * C118 + C175 * C106) *
                  C32633 * C32603 * C32589 * C110 -
              (C176 * C106 + C177 * C118 + C175 * C105 + C174 * C117 +
               C173 * C104 + C172 * C116 + C171 * C103 + C170 * C115 +
               C169 * C102 + C168 * C114) *
                  C32633 * C32603 * C32589 * C111 +
              (C170 * C114 + C171 * C102 + C172 * C115 + C173 * C103 +
               C174 * C116 + C175 * C104 + C177 * C117 + C176 * C105 +
               (C113 * C125 + C32644 * C138) * C118 +
               (C113 * C139 + C32644 * C146) * C106) *
                  C32633 * C32603 * C32589 * C112) -
         0.25 * std::pow(Pi, 2.5) *
             (((C113 * C119 + C32644 * C126) * C114 +
               (C113 * C127 + C32644 * C140) * C102 + C168 * C115 +
               C169 * C103 + C170 * C116 + C171 * C104 + C172 * C117 +
               C173 * C105 + C174 * C118 + C175 * C106) *
                  C32633 * C32603 * C239 -
              ((C113 * C253 + C32644 * C273) * C106 +
               (C113 * C243 + C32644 * C254) * C118 +
               (C113 * C255 + C32644 * C274) * C105 +
               (C113 * C244 + C32644 * C256) * C117 +
               (C113 * C257 + C32644 * C275) * C104 +
               (C113 * C245 + C32644 * C258) * C116 +
               (C113 * C259 + C32644 * C276) * C103 +
               (C113 * C246 + C32644 * C260) * C115 +
               (C113 * C261 + C32644 * C277) * C102 +
               (C113 * C247 + C32644 * C262) * C114) *
                  C32633 * C32603 * C240 +
              ((C113 * C248 + C32644 * C263) * C114 +
               (C113 * C264 + C32644 * C278) * C102 +
               (C113 * C249 + C32644 * C265) * C115 +
               (C113 * C266 + C32644 * C279) * C103 +
               (C113 * C250 + C32644 * C267) * C116 +
               (C113 * C268 + C32644 * C280) * C104 +
               (C113 * C251 + C32644 * C269) * C117 +
               (C113 * C270 + C32644 * C281) * C105 +
               (C113 * C252 + C32644 * C271) * C118 +
               (C113 * C272 + C32644 * C282) * C106) *
                  C32633 * C32603 * C241) *
             C32577 +
         0.5 * std::pow(Pi, 2.5) *
             (((C113 * C119 + C32644 * C126) * C114 +
               (C113 * C127 + C32644 * C140) * C102 + C168 * C115 +
               C169 * C103 + C170 * C116 + C171 * C104 + C172 * C117 +
               C173 * C105 + C174 * C118 + C175 * C106) *
                  C32633 * C345 -
              ((C113 * C358 + C32644 * C378) * C106 +
               (C113 * C348 + C32644 * C359) * C118 +
               (C113 * C360 + C32644 * C379) * C105 +
               (C113 * C349 + C32644 * C361) * C117 +
               (C113 * C362 + C32644 * C380) * C104 +
               (C113 * C350 + C32644 * C363) * C116 +
               (C113 * C364 + C32644 * C381) * C103 +
               (C113 * C351 + C32644 * C365) * C115 +
               (C113 * C366 + C32644 * C382) * C102 +
               (C113 * C352 + C32644 * C367) * C114) *
                  C32633 * C346 +
              ((C113 * C353 + C32644 * C368) * C114 +
               (C113 * C369 + C32644 * C383) * C102 +
               (C113 * C354 + C32644 * C370) * C115 +
               (C113 * C371 + C32644 * C384) * C103 +
               (C113 * C355 + C32644 * C372) * C116 +
               (C113 * C373 + C32644 * C385) * C104 +
               (C113 * C356 + C32644 * C374) * C117 +
               (C113 * C375 + C32644 * C386) * C105 +
               (C113 * C357 + C32644 * C376) * C118 +
               (C113 * C377 + C32644 * C387) * C106) *
                  C32633 * C347) *
             C32589 * C32577 -
         0.25 * std::pow(Pi, 2.5) *
             ((((C113 * C119 + C32644 * C126) * C832 +
                (C113 * C127 + C32644 * C140) * C826 + C168 * C833 +
                C169 * C827 + C170 * C834 + C171 * C32905) *
                   C32951 +
               ((C113 * C247 + C32644 * C262) * C832 +
                (C113 * C261 + C32644 * C277) * C826 + C502 * C833 +
                C501 * C827 + C500 * C834 + C499 * C32905) *
                   C32939 +
               ((C113 * C248 + C32644 * C263) * C832 +
                (C113 * C264 + C32644 * C278) * C826 + C848 * C833 +
                C849 * C827 + C850 * C834 + C851 * C32905) *
                   C32916) *
                  C32603 * C32589 * C110 -
              ((C852 * C32905 + C853 * C834 + C851 * C827 + C850 * C833 +
                C849 * C826 + C848 * C832) *
                   C32916 +
               (C497 * C32905 + C498 * C834 + C499 * C827 + C500 * C833 +
                C501 * C826 + C502 * C832) *
                   C32939 +
               (C173 * C32905 + C172 * C834 + C171 * C827 + C170 * C833 +
                C169 * C826 + C168 * C832) *
                   C32951) *
                  C32603 * C32589 * C111 +
              ((C170 * C832 + C171 * C826 + C172 * C833 + C173 * C827 +
                C174 * C834 + C175 * C32905) *
                   C32951 +
               (C500 * C832 + C499 * C826 + C498 * C833 + C497 * C827 +
                C496 * C834 + C495 * C32905) *
                   C32939 +
               (C850 * C832 + C851 * C826 + C853 * C833 + C852 * C827 +
                (C113 * C252 + C32644 * C271) * C834 +
                (C113 * C272 + C32644 * C282) * C32905) *
                   C32916) *
                  C32603 * C32589 * C112) -
         0.25 * std::pow(Pi, 2.5) *
             ((((C113 * C119 + C32644 * C126) * C832 +
                (C113 * C127 + C32644 * C140) * C826 + C168 * C833 +
                C169 * C827 + C170 * C834 + C171 * C32905) *
                   C32951 +
               (C1026 + C1027 + C992 + C993 + C994 + C995) * C32939 +
               C1040 * C32916) *
                  C32603 * C239 -
              ((C1030 + C1031 + C1032 + C1033 + C1034 + C1035) * C32916 +
               (C1003 + C1002 + C1001 + C1000 + C1029 + C1028) * C32939 +
               (C995 + C994 + C993 + C992 + C1027 + C1026) * C32951) *
                  C32603 * C240 +
              (C1040 * C32951 +
               (C1035 + C1034 + C1033 + C1032 + C1031 + C1030) * C32939 +
               ((C113 * C966 + C32644 * C975) * C832 +
                (C113 * C976 + C32644 * C984) * C826 +
                (C113 * C967 + C32644 * C977) * C833 +
                (C113 * C978 + C32644 * C985) * C827 +
                (C113 * C968 + C32644 * C979) * C834 +
                (C113 * C980 + C32644 * C986) * C32905) *
                   C32916) *
                  C32603 * C241) *
             C32577 +
         0.5 * std::pow(Pi, 2.5) *
             ((((C113 * C119 + C32644 * C126) * C832 +
                (C113 * C127 + C32644 * C140) * C826 + C168 * C833 +
                C169 * C827 + C170 * C834 + C171 * C32905) *
                   C32951 +
               (C1026 + C1027 + C992 + C993 + C994 + C995) * C32939 +
               C1040 * C32916) *
                  C345 -
              (((C113 * C1159 + C32644 * C1177) * C32905 +
                (C113 * C1150 + C32644 * C1160) * C834 +
                (C113 * C1161 + C32644 * C1178) * C827 +
                (C113 * C1151 + C32644 * C1162) * C833 +
                (C113 * C1163 + C32644 * C1179) * C826 +
                (C113 * C1152 + C32644 * C1164) * C832) *
                   C32916 +
               ((C113 * C706 + C32644 * C713) * C32905 +
                (C113 * C698 + C32644 * C705) * C834 +
                (C113 * C704 + C32644 * C712) * C827 +
                (C113 * C697 + C32644 * C703) * C833 +
                (C113 * C702 + C32644 * C711) * C826 +
                (C113 * C696 + C32644 * C701) * C832) *
                   C32939 +
               (C611 * C32905 + C612 * C834 + C613 * C827 + C614 * C833 +
                (C113 * C366 + C32644 * C382) * C826 +
                (C113 * C352 + C32644 * C367) * C832) *
                   C32951) *
                  C346 +
              (((C113 * C353 + C32644 * C368) * C832 +
                (C113 * C369 + C32644 * C383) * C826 +
                (C113 * C354 + C32644 * C370) * C833 +
                (C113 * C371 + C32644 * C384) * C827 +
                (C113 * C355 + C32644 * C372) * C834 +
                (C113 * C373 + C32644 * C385) * C32905) *
                   C32951 +
               ((C113 * C1153 + C32644 * C1165) * C832 +
                (C113 * C1166 + C32644 * C1180) * C826 +
                (C113 * C1154 + C32644 * C1167) * C833 +
                (C113 * C1168 + C32644 * C1181) * C827 +
                (C113 * C1155 + C32644 * C1169) * C834 +
                (C113 * C1170 + C32644 * C1182) * C32905) *
                   C32939 +
               ((C113 * C1156 + C32644 * C1171) * C832 +
                (C113 * C1172 + C32644 * C1183) * C826 +
                (C113 * C1157 + C32644 * C1173) * C833 +
                (C113 * C1174 + C32644 * C1184) * C827 +
                (C113 * C1158 + C32644 * C1175) * C834 +
                (C113 * C1176 + C32644 * C1185) * C32905) *
                   C32916) *
                  C347) *
             C32589 * C32577 +
         0.5 * std::pow(Pi, 2.5) *
             (((C1817 * C119 + C32952 * C126 + C1818 * C352 + C32941 * C367 +
                C1819 * C353 + C32919 * C368) *
                   C832 +
               (C1817 * C127 + C32952 * C140 + C1818 * C366 + C32941 * C382 +
                C1819 * C369 + C32919 * C383) *
                   C826 +
               (C1857 + C1858 + C1859) * C833 + (C1860 + C1861 + C1862) * C827 +
               C1877 * C834 + C1878 * C32905) *
                  C32633 * C32603 * C32589 * C110 -
              ((C1869 + C1870 + C1871) * C32905 +
               (C1872 + C1873 + C1874) * C834 + (C1868 + C1867 + C1866) * C827 +
               (C1865 + C1864 + C1863) * C833 + (C1862 + C1861 + C1860) * C826 +
               (C1859 + C1858 + C1857) * C832) *
                  C32633 * C32603 * C32589 * C111 +
              (C1877 * C832 + C1878 * C826 + (C1874 + C1873 + C1872) * C833 +
               (C1871 + C1870 + C1869) * C827 +
               (C1817 * C123 + C32952 * C134 + C1818 * C348 + C32941 * C359 +
                C1819 * C357 + C32919 * C376) *
                   C834 +
               (C1817 * C135 + C32952 * C144 + C1818 * C358 + C32941 * C378 +
                C1819 * C377 + C32919 * C387) *
                   C32905) *
                  C32633 * C32603 * C32589 * C112) +
         0.5 * std::pow(Pi, 2.5) *
             (((C1817 * C119 + C32952 * C126 + C1818 * C352 + C32941 * C367 +
                C1819 * C353 + C32919 * C368) *
                   C832 +
               (C1817 * C127 + C32952 * C140 + C1818 * C366 + C32941 * C382 +
                C1819 * C369 + C32919 * C383) *
                   C826 +
               (C1857 + C1858 + C1859) * C833 + (C1860 + C1861 + C1862) * C827 +
               C1877 * C834 + C1878 * C32905) *
                  C32633 * C32603 * C239 -
              ((C1819 * C1170 + C32919 * C1182 + C1818 * C706 + C32941 * C713 +
                C1817 * C257 + C32952 * C275) *
                   C32905 +
               (C1819 * C1155 + C32919 * C1169 + C1818 * C698 + C32941 * C705 +
                C1817 * C245 + C32952 * C258) *
                   C834 +
               (C1819 * C1168 + C32919 * C1181 + C1818 * C704 + C32941 * C712 +
                C1817 * C259 + C32952 * C276) *
                   C827 +
               (C1819 * C1154 + C32919 * C1167 + C1818 * C697 + C32941 * C703 +
                C1817 * C246 + C32952 * C260) *
                   C833 +
               (C1819 * C1166 + C32919 * C1180 + C1818 * C702 + C32941 * C711 +
                C1817 * C261 + C32952 * C277) *
                   C826 +
               (C1819 * C1153 + C32919 * C1165 + C1818 * C696 + C32941 * C701 +
                C1817 * C247 + C32952 * C262) *
                   C832) *
                  C32633 * C32603 * C240 +
              ((C1817 * C248 + C32952 * C263 + C1818 * C1152 + C32941 * C1164 +
                C1819 * C1156 + C32919 * C1171) *
                   C832 +
               (C1817 * C264 + C32952 * C278 + C1818 * C1163 + C32941 * C1179 +
                C1819 * C1172 + C32919 * C1183) *
                   C826 +
               (C1817 * C249 + C32952 * C265 + C1818 * C1151 + C32941 * C1162 +
                C1819 * C1157 + C32919 * C1173) *
                   C833 +
               (C1817 * C266 + C32952 * C279 + C1818 * C1161 + C32941 * C1178 +
                C1819 * C1174 + C32919 * C1184) *
                   C827 +
               (C1817 * C250 + C32952 * C267 + C1818 * C1150 + C32941 * C1160 +
                C1819 * C1158 + C32919 * C1175) *
                   C834 +
               (C1817 * C268 + C32952 * C280 + C1818 * C1159 + C32941 * C1177 +
                C1819 * C1176 + C32919 * C1185) *
                   C32905) *
                  C32633 * C32603 * C241) *
             C32577) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C1817 * C119 + C32952 * C126 + C1818 * C352 + C32941 * C367 +
            C1819 * C353 + C32919 * C368) *
               C832 +
           (C1817 * C127 + C32952 * C140 + C1818 * C366 + C32941 * C382 +
            C1819 * C369 + C32919 * C383) *
               C826 +
           (C1857 + C1858 + C1859) * C833 + (C1860 + C1861 + C1862) * C827 +
           C1877 * C834 + C1878 * C32905) *
              C32633 * C345 -
          ((C1819 * C2104 + C32919 * C2116 + C1818 * C373 + C32941 * C385 +
            C1817 * C362 + C32952 * C380) *
               C32905 +
           (C1819 * C2098 + C32919 * C2105 + C1818 * C355 + C32941 * C372 +
            C1817 * C350 + C32952 * C363) *
               C834 +
           (C1819 * C2106 + C32919 * C2117 + C1818 * C371 + C32941 * C384 +
            C1817 * C364 + C32952 * C381) *
               C827 +
           (C1819 * C2099 + C32919 * C2107 + C1818 * C354 + C32941 * C370 +
            C1817 * C351 + C32952 * C365) *
               C833 +
           (C1819 * C2108 + C32919 * C2118 + C1818 * C369 + C32941 * C383 +
            C1817 * C366 + C32952 * C382) *
               C826 +
           (C1819 * C2100 + C32919 * C2109 + C1818 * C353 + C32941 * C368 +
            C1817 * C352 + C32952 * C367) *
               C832) *
              C32633 * C346 +
          ((C1817 * C353 + C32952 * C368 + C1818 * C2100 + C32941 * C2109 +
            C1819 * C2101 + C32919 * C2110) *
               C832 +
           (C1817 * C369 + C32952 * C383 + C1818 * C2108 + C32941 * C2118 +
            C1819 * C2111 + C32919 * C2119) *
               C826 +
           (C1817 * C354 + C32952 * C370 + C1818 * C2099 + C32941 * C2107 +
            C1819 * C2102 + C32919 * C2112) *
               C833 +
           (C1817 * C371 + C32952 * C384 + C1818 * C2106 + C32941 * C2117 +
            C1819 * C2113 + C32919 * C2120) *
               C827 +
           (C1817 * C355 + C32952 * C372 + C1818 * C2098 + C32941 * C2105 +
            C1819 * C2103 + C32919 * C2114) *
               C834 +
           (C1817 * C373 + C32952 * C385 + C1818 * C2104 + C32941 * C2116 +
            C1819 * C2115 + C32919 * C2121) *
               C32905) *
              C32633 * C347) *
         C32589 * C32577) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         ((((C113 * C119 + C32644 * C126) * C5424 +
            (C113 * C127 + C32644 * C140) * C32948 + C168 * C5425 +
            C169 * C32935 + C170 * C5426 + C171 * C32905) *
               C5421 +
           (C1016 * C5424 + C1017 * C32948 + C502 * C5425 + C501 * C32935 +
            C500 * C5426 + C499 * C32905) *
               C5422 +
           (C1018 * C5424 + C1019 * C32948 + C848 * C5425 + C849 * C32935 +
            C850 * C5426 + C851 * C32905) *
               C32916) *
              C32603 * C32589 * C110 -
          ((C852 * C32905 + C853 * C5426 + C851 * C32935 + C850 * C5425 +
            C849 * C32948 + C848 * C5424) *
               C32916 +
           (C497 * C32905 + C498 * C5426 + C499 * C32935 + C500 * C5425 +
            C501 * C32948 + C502 * C5424) *
               C5422 +
           (C173 * C32905 + C172 * C5426 + C171 * C32935 + C170 * C5425 +
            C169 * C32948 + C168 * C5424) *
               C5421) *
              C32603 * C32589 * C111 +
          ((C170 * C5424 + C171 * C32948 + C172 * C5425 + C173 * C32935 +
            C174 * C5426 + C175 * C32905) *
               C5421 +
           (C500 * C5424 + C499 * C32948 + C498 * C5425 + C497 * C32935 +
            C496 * C5426 + C495 * C32905) *
               C5422 +
           (C850 * C5424 + C851 * C32948 + C853 * C5425 + C852 * C32935 +
            (C113 * C252 + C32644 * C271) * C5426 +
            (C113 * C272 + C32644 * C282) * C32905) *
               C32916) *
              C32603 * C32589 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         ((((C113 * C119 + C32644 * C126) * C5424 +
            (C113 * C127 + C32644 * C140) * C32948 + C168 * C5425 +
            C169 * C32935 + C170 * C5426 + C171 * C32905) *
               C5421 +
           (C5538 + C5539 + C5540 + C5541 + C5542 + C5543) * C5422 +
           C5560 * C32916) *
              C32603 * C239 -
          ((C5550 + C5551 + C5552 + C5553 + C5554 + C5555) * C32916 +
           (C5549 + C5548 + C5547 + C5546 + C5545 + C5544) * C5422 +
           (C5543 + C5542 + C5541 + C5540 + C5539 + C5538) * C5421) *
              C32603 * C240 +
          (C5560 * C5421 +
           (C5555 + C5554 + C5553 + C5552 + C5551 + C5550) * C5422 +
           ((C113 * C966 + C32644 * C975) * C5424 +
            (C113 * C976 + C32644 * C984) * C32948 +
            (C113 * C967 + C32644 * C977) * C5425 +
            (C113 * C978 + C32644 * C985) * C32935 +
            (C113 * C968 + C32644 * C979) * C5426 +
            (C113 * C980 + C32644 * C986) * C32905) *
               C32916) *
              C32603 * C241) *
         C32577) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C113 * C119 + C32644 * C126) * C5424 +
            (C113 * C127 + C32644 * C140) * C32948 + C168 * C5425 +
            C169 * C32935 + C170 * C5426 + C171 * C32905) *
               C5421 +
           (C5538 + C5539 + C5540 + C5541 + C5542 + C5543) * C5422 +
           C5560 * C32916) *
              C345 -
          ((C1515 * C32905 + C1516 * C5426 + C1517 * C32935 + C1518 * C5425 +
            C1697 * C32948 + C1698 * C5424) *
               C32916 +
           (C1519 * C32905 + C1520 * C5426 + C1521 * C32935 + C1522 * C5425 +
            C1699 * C32948 + C1700 * C5424) *
               C5422 +
           (C611 * C32905 + C612 * C5426 + C613 * C32935 + C614 * C5425 +
            (C113 * C366 + C32644 * C382) * C32948 +
            (C113 * C352 + C32644 * C367) * C5424) *
               C5421) *
              C346 +
          (((C113 * C353 + C32644 * C368) * C5424 +
            (C113 * C369 + C32644 * C383) * C32948 +
            (C113 * C354 + C32644 * C370) * C5425 +
            (C113 * C371 + C32644 * C384) * C32935 +
            (C113 * C355 + C32644 * C372) * C5426 +
            (C113 * C373 + C32644 * C385) * C32905) *
               C5421 +
           ((C113 * C1153 + C32644 * C1165) * C5424 +
            (C113 * C1166 + C32644 * C1180) * C32948 +
            (C113 * C1154 + C32644 * C1167) * C5425 +
            (C113 * C1168 + C32644 * C1181) * C32935 +
            (C113 * C1155 + C32644 * C1169) * C5426 +
            (C113 * C1170 + C32644 * C1182) * C32905) *
               C5422 +
           ((C113 * C1156 + C32644 * C1171) * C5424 +
            (C113 * C1172 + C32644 * C1183) * C32948 +
            (C113 * C1157 + C32644 * C1173) * C5425 +
            (C113 * C1174 + C32644 * C1184) * C32935 +
            (C113 * C1158 + C32644 * C1175) * C5426 +
            (C113 * C1176 + C32644 * C1185) * C32905) *
               C32916) *
              C347) *
         C32589 * C32577) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         ((((C113 * C119 + C32644 * C126) * C6200 +
            (C113 * C127 + C32644 * C140) * C32542) *
               C6195 +
           (C1016 * C6200 + C1017 * C32542) * C6196 +
           (C1018 * C6200 + C1019 * C32542) * C6197 +
           (C1025 * C6200 + C1024 * C32542) * C6198 +
           ((C113 * C966 + C32644 * C975) * C6200 +
            (C113 * C976 + C32644 * C984) * C32542) *
               C6199) *
              C32603 * C32589 * C110 -
          (((C113 * C978 + C32644 * C985) * C32542 +
            (C113 * C967 + C32644 * C977) * C6200) *
               C6199 +
           (C1022 * C32542 + C1023 * C6200) * C6198 +
           (C849 * C32542 + C848 * C6200) * C6197 +
           (C501 * C32542 + C502 * C6200) * C6196 +
           (C169 * C32542 + C168 * C6200) * C6195) *
              C32603 * C32589 * C111 +
          ((C170 * C6200 + C171 * C32542) * C6195 +
           (C500 * C6200 + C499 * C32542) * C6196 +
           (C850 * C6200 + C851 * C32542) * C6197 +
           (C1021 * C6200 + C1020 * C32542) * C6198 +
           ((C113 * C968 + C32644 * C979) * C6200 +
            (C113 * C980 + C32644 * C986) * C32542) *
               C6199) *
              C32603 * C32589 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         ((((C113 * C119 + C32644 * C126) * C6200 +
            (C113 * C127 + C32644 * C140) * C32542) *
               C6195 +
           (C6272 + C6273) * C6196 + C6286 * C6197 + C6287 * C6198 +
           C6296 * C6199) *
              C32603 * C239 -
          ((C6294 + C6295) * C6199 + (C6293 + C6292) * C6198 +
           (C6277 + C6276) * C6197 + (C6275 + C6274) * C6196 +
           (C6273 + C6272) * C6195) *
              C32603 * C240 +
          (C6286 * C6195 + C6287 * C6196 + C6296 * C6197 +
           (C6295 + C6294) * C6198 +
           ((C113 * C6264 + C32644 * C6267) * C6200 +
            (C113 * C6268 + C32644 * C6270) * C32542) *
               C6199) *
              C32603 * C241) *
         C32577) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C113 * C119 + C32644 * C126) * C6200 +
            (C113 * C127 + C32644 * C140) * C32542) *
               C6195 +
           (C6272 + C6273) * C6196 + C6286 * C6197 + C6287 * C6198 +
           C6296 * C6199) *
              C345 -
          (((C113 * C6361 + C32644 * C6367) * C32542 +
            (C113 * C6358 + C32644 * C6362) * C6200) *
               C6199 +
           ((C113 * C1672 + C32644 * C1677) * C32542 +
            (C113 * C1668 + C32644 * C1671) * C6200) *
               C6198 +
           (C1697 * C32542 + C1698 * C6200) * C6197 +
           (C1699 * C32542 + C1700 * C6200) * C6196 +
           ((C113 * C366 + C32644 * C382) * C32542 +
            (C113 * C352 + C32644 * C367) * C6200) *
               C6195) *
              C346 +
          (((C113 * C353 + C32644 * C368) * C6200 +
            (C113 * C369 + C32644 * C383) * C32542) *
               C6195 +
           ((C113 * C1153 + C32644 * C1165) * C6200 +
            (C113 * C1166 + C32644 * C1180) * C32542) *
               C6196 +
           ((C113 * C1156 + C32644 * C1171) * C6200 +
            (C113 * C1172 + C32644 * C1183) * C32542) *
               C6197 +
           ((C113 * C6359 + C32644 * C6363) * C6200 +
            (C113 * C6364 + C32644 * C6368) * C32542) *
               C6198 +
           ((C113 * C6360 + C32644 * C6365) * C6200 +
            (C113 * C6366 + C32644 * C6369) * C32542) *
               C6199) *
              C347) *
         C32589 * C32577) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C1817 * C119 + C32952 * C126 + C1818 * C352 + C32941 * C367 +
             C1819 * C353 + C32919 * C368) *
                C6200 +
            (C1817 * C127 + C32952 * C140 + C1818 * C366 + C32941 * C382 +
             C1819 * C369 + C32919 * C383) *
                C32542) *
               C5421 +
           ((C1817 * C247 + C32952 * C262 + C1818 * C696 + C32941 * C701 +
             C1819 * C1153 + C32919 * C1165) *
                C6200 +
            (C1817 * C261 + C32952 * C277 + C1818 * C702 + C32941 * C711 +
             C1819 * C1166 + C32919 * C1180) *
                C32542) *
               C5422 +
           ((C1817 * C248 + C32952 * C263 + C1818 * C1152 + C32941 * C1164 +
             C1819 * C1156 + C32919 * C1171) *
                C6200 +
            (C1817 * C264 + C32952 * C278 + C1818 * C1163 + C32941 * C1179 +
             C1819 * C1172 + C32919 * C1183) *
                C32542) *
               C32916) *
              C32603 * C32589 * C110 -
          (((C1819 * C1174 + C32919 * C1184 + C1818 * C1161 + C32941 * C1178 +
             C1817 * C266 + C32952 * C279) *
                C32542 +
            (C1819 * C1157 + C32919 * C1173 + C1818 * C1151 + C32941 * C1162 +
             C1817 * C249 + C32952 * C265) *
                C6200) *
               C32916 +
           ((C2303 + C2304 + C2305) * C32542 +
            (C2306 + C2307 + C2308) * C6200) *
               C5422 +
           ((C1862 + C1861 + C1860) * C32542 +
            (C1859 + C1858 + C1857) * C6200) *
               C5421) *
              C32603 * C32589 * C111 +
          ((C1877 * C6200 + C1878 * C32542) * C5421 +
           ((C2302 + C2301 + C2300) * C6200 +
            (C2299 + C2298 + C2297) * C32542) *
               C5422 +
           ((C1817 * C250 + C32952 * C267 + C1818 * C1150 + C32941 * C1160 +
             C1819 * C1158 + C32919 * C1175) *
                C6200 +
            (C1817 * C268 + C32952 * C280 + C1818 * C1159 + C32941 * C1177 +
             C1819 * C1176 + C32919 * C1185) *
                C32542) *
               C32916) *
              C32603 * C32589 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C1817 * C119 + C32952 * C126 + C1818 * C352 + C32941 * C367 +
             C1819 * C353 + C32919 * C368) *
                C6200 +
            (C1817 * C127 + C32952 * C140 + C1818 * C366 + C32941 * C382 +
             C1819 * C369 + C32919 * C383) *
                C32542) *
               C5421 +
           ((C6919 + C6920 + C6921) * C6200 +
            (C6922 + C6923 + C6924) * C32542) *
               C5422 +
           C6943 * C32916) *
              C32603 * C239 -
          (((C6931 + C6932 + C6933) * C32542 +
            (C6934 + C6935 + C6936) * C6200) *
               C32916 +
           ((C6930 + C6929 + C6928) * C32542 +
            (C6927 + C6926 + C6925) * C6200) *
               C5422 +
           ((C6924 + C6923 + C6922) * C32542 +
            (C6921 + C6920 + C6919) * C6200) *
               C5421) *
              C32603 * C240 +
          (C6943 * C5421 +
           ((C6936 + C6935 + C6934) * C6200 +
            (C6933 + C6932 + C6931) * C32542) *
               C5422 +
           ((C1817 * C966 + C32952 * C975 + C1818 * C6358 + C32941 * C6362 +
             C1819 * C6360 + C32919 * C6365) *
                C6200 +
            (C1817 * C976 + C32952 * C984 + C1818 * C6361 + C32941 * C6367 +
             C1819 * C6366 + C32919 * C6369) *
                C32542) *
               C32916) *
              C32603 * C241) *
         C32577) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C1817 * C119 + C32952 * C126 + C1818 * C352 + C32941 * C367 +
             C1819 * C353 + C32919 * C368) *
                C6200 +
            (C1817 * C127 + C32952 * C140 + C1818 * C366 + C32941 * C382 +
             C1819 * C369 + C32919 * C383) *
                C32542) *
               C5421 +
           ((C6919 + C6920 + C6921) * C6200 +
            (C6922 + C6923 + C6924) * C32542) *
               C5422 +
           C6943 * C32916) *
              C345 -
          (((C1819 * C7056 + C32919 * C7062 + C1818 * C1172 + C32941 * C1183 +
             C1817 * C1163 + C32952 * C1179) *
                C32542 +
            (C1819 * C7053 + C32919 * C7057 + C1818 * C1156 + C32941 * C1171 +
             C1817 * C1152 + C32952 * C1164) *
                C6200) *
               C32916 +
           ((C1819 * C2644 + C32919 * C2649 + C1818 * C1166 + C32941 * C1180 +
             C1817 * C702 + C32952 * C711) *
                C32542 +
            (C1819 * C2640 + C32919 * C2643 + C1818 * C1153 + C32941 * C1165 +
             C1817 * C696 + C32952 * C701) *
                C6200) *
               C5422 +
           ((C1819 * C2108 + C32919 * C2118 + C1818 * C369 + C32941 * C383 +
             C1817 * C366 + C32952 * C382) *
                C32542 +
            (C1819 * C2100 + C32919 * C2109 + C1818 * C353 + C32941 * C368 +
             C1817 * C352 + C32952 * C367) *
                C6200) *
               C5421) *
              C346 +
          (((C1817 * C353 + C32952 * C368 + C1818 * C2100 + C32941 * C2109 +
             C1819 * C2101 + C32919 * C2110) *
                C6200 +
            (C1817 * C369 + C32952 * C383 + C1818 * C2108 + C32941 * C2118 +
             C1819 * C2111 + C32919 * C2119) *
                C32542) *
               C5421 +
           ((C1817 * C1153 + C32952 * C1165 + C1818 * C2640 + C32941 * C2643 +
             C1819 * C7054 + C32919 * C7058) *
                C6200 +
            (C1817 * C1166 + C32952 * C1180 + C1818 * C2644 + C32941 * C2649 +
             C1819 * C7059 + C32919 * C7063) *
                C32542) *
               C5422 +
           ((C1817 * C1156 + C32952 * C1171 + C1818 * C7053 + C32941 * C7057 +
             C1819 * C7055 + C32919 * C7060) *
                C6200 +
            (C1817 * C1172 + C32952 * C1183 + C1818 * C7056 + C32941 * C7062 +
             C1819 * C7061 + C32919 * C7064) *
                C32542) *
               C32916) *
              C347) *
         C32589 * C32577) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C10223 * C119 + C10220 * C126 + C10224 * C352 + C10221 * C367 +
            C10225 * C353 + C32919 * C368) *
               C5424 +
           (C10223 * C127 + C10220 * C140 + C10224 * C366 + C10221 * C382 +
            C10225 * C369 + C32919 * C383) *
               C32948 +
           (C10263 + C10264 + C10265) * C5425 +
           (C10266 + C10267 + C10268) * C32935 + C10283 * C5426 +
           C10284 * C32905) *
              C32633 * C32603 * C32589 * C110 -
          ((C10275 + C10276 + C10277) * C32905 +
           (C10278 + C10279 + C10280) * C5426 +
           (C10274 + C10273 + C10272) * C32935 +
           (C10271 + C10270 + C10269) * C5425 +
           (C10268 + C10267 + C10266) * C32948 +
           (C10265 + C10264 + C10263) * C5424) *
              C32633 * C32603 * C32589 * C111 +
          (C10283 * C5424 + C10284 * C32948 +
           (C10280 + C10279 + C10278) * C5425 +
           (C10277 + C10276 + C10275) * C32935 +
           (C10223 * C123 + C10220 * C134 + C10224 * C348 + C10221 * C359 +
            C10225 * C357 + C32919 * C376) *
               C5426 +
           (C10223 * C135 + C10220 * C144 + C10224 * C358 + C10221 * C378 +
            C10225 * C377 + C32919 * C387) *
               C32905) *
              C32633 * C32603 * C32589 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C10223 * C119 + C10220 * C126 + C10224 * C352 + C10221 * C367 +
            C10225 * C353 + C32919 * C368) *
               C5424 +
           (C10223 * C127 + C10220 * C140 + C10224 * C366 + C10221 * C382 +
            C10225 * C369 + C32919 * C383) *
               C32948 +
           (C10263 + C10264 + C10265) * C5425 +
           (C10266 + C10267 + C10268) * C32935 + C10283 * C5426 +
           C10284 * C32905) *
              C32633 * C32603 * C239 -
          ((C10225 * C1170 + C32919 * C1182 + C10224 * C706 + C10221 * C713 +
            C10223 * C257 + C10220 * C275) *
               C32905 +
           (C10225 * C1155 + C32919 * C1169 + C10224 * C698 + C10221 * C705 +
            C10223 * C245 + C10220 * C258) *
               C5426 +
           (C10225 * C1168 + C32919 * C1181 + C10224 * C704 + C10221 * C712 +
            C10223 * C259 + C10220 * C276) *
               C32935 +
           (C10225 * C1154 + C32919 * C1167 + C10224 * C697 + C10221 * C703 +
            C10223 * C246 + C10220 * C260) *
               C5425 +
           (C10225 * C1166 + C32919 * C1180 + C10224 * C702 + C10221 * C711 +
            C10223 * C261 + C10220 * C277) *
               C32948 +
           (C10225 * C1153 + C32919 * C1165 + C10224 * C696 + C10221 * C701 +
            C10223 * C247 + C10220 * C262) *
               C5424) *
              C32633 * C32603 * C240 +
          ((C10223 * C248 + C10220 * C263 + C10224 * C1152 + C10221 * C1164 +
            C10225 * C1156 + C32919 * C1171) *
               C5424 +
           (C10223 * C264 + C10220 * C278 + C10224 * C1163 + C10221 * C1179 +
            C10225 * C1172 + C32919 * C1183) *
               C32948 +
           (C10223 * C249 + C10220 * C265 + C10224 * C1151 + C10221 * C1162 +
            C10225 * C1157 + C32919 * C1173) *
               C5425 +
           (C10223 * C266 + C10220 * C279 + C10224 * C1161 + C10221 * C1178 +
            C10225 * C1174 + C32919 * C1184) *
               C32935 +
           (C10223 * C250 + C10220 * C267 + C10224 * C1150 + C10221 * C1160 +
            C10225 * C1158 + C32919 * C1175) *
               C5426 +
           (C10223 * C268 + C10220 * C280 + C10224 * C1159 + C10221 * C1177 +
            C10225 * C1176 + C32919 * C1185) *
               C32905) *
              C32633 * C32603 * C241) *
         C32577) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C10223 * C119 + C10220 * C126 + C10224 * C352 + C10221 * C367 +
            C10225 * C353 + C32919 * C368) *
               C5424 +
           (C10223 * C127 + C10220 * C140 + C10224 * C366 + C10221 * C382 +
            C10225 * C369 + C32919 * C383) *
               C32948 +
           (C10263 + C10264 + C10265) * C5425 +
           (C10266 + C10267 + C10268) * C32935 + C10283 * C5426 +
           C10284 * C32905) *
              C32633 * C345 -
          ((C10225 * C2104 + C32919 * C2116 + C10224 * C373 + C10221 * C385 +
            C10223 * C362 + C10220 * C380) *
               C32905 +
           (C10225 * C2098 + C32919 * C2105 + C10224 * C355 + C10221 * C372 +
            C10223 * C350 + C10220 * C363) *
               C5426 +
           (C10225 * C2106 + C32919 * C2117 + C10224 * C371 + C10221 * C384 +
            C10223 * C364 + C10220 * C381) *
               C32935 +
           (C10225 * C2099 + C32919 * C2107 + C10224 * C354 + C10221 * C370 +
            C10223 * C351 + C10220 * C365) *
               C5425 +
           (C10225 * C2108 + C32919 * C2118 + C10224 * C369 + C10221 * C383 +
            C10223 * C366 + C10220 * C382) *
               C32948 +
           (C10225 * C2100 + C32919 * C2109 + C10224 * C353 + C10221 * C368 +
            C10223 * C352 + C10220 * C367) *
               C5424) *
              C32633 * C346 +
          ((C10223 * C353 + C10220 * C368 + C10224 * C2100 + C10221 * C2109 +
            C10225 * C2101 + C32919 * C2110) *
               C5424 +
           (C10223 * C369 + C10220 * C383 + C10224 * C2108 + C10221 * C2118 +
            C10225 * C2111 + C32919 * C2119) *
               C32948 +
           (C10223 * C354 + C10220 * C370 + C10224 * C2099 + C10221 * C2107 +
            C10225 * C2102 + C32919 * C2112) *
               C5425 +
           (C10223 * C371 + C10220 * C384 + C10224 * C2106 + C10221 * C2117 +
            C10225 * C2113 + C32919 * C2120) *
               C32935 +
           (C10223 * C355 + C10220 * C372 + C10224 * C2098 + C10221 * C2105 +
            C10225 * C2103 + C32919 * C2114) *
               C5426 +
           (C10223 * C373 + C10220 * C385 + C10224 * C2104 + C10221 * C2116 +
            C10225 * C2115 + C32919 * C2121) *
               C32905) *
              C32633 * C347) *
         C32589 * C32577) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C10223 * C119 + C10220 * C126 + C10224 * C352 + C10221 * C367 +
             C10225 * C353 + C32919 * C368) *
                C6200 +
            (C10223 * C127 + C10220 * C140 + C10224 * C366 + C10221 * C382 +
             C10225 * C369 + C32919 * C383) *
                C32542) *
               C32951 +
           ((C10223 * C247 + C10220 * C262 + C10224 * C696 + C10221 * C701 +
             C10225 * C1153 + C32919 * C1165) *
                C6200 +
            (C10223 * C261 + C10220 * C277 + C10224 * C702 + C10221 * C711 +
             C10225 * C1166 + C32919 * C1180) *
                C32542) *
               C32939 +
           ((C10223 * C248 + C10220 * C263 + C10224 * C1152 + C10221 * C1164 +
             C10225 * C1156 + C32919 * C1171) *
                C6200 +
            (C10223 * C264 + C10220 * C278 + C10224 * C1163 + C10221 * C1179 +
             C10225 * C1172 + C32919 * C1183) *
                C32542) *
               C32916) *
              C32603 * C32589 * C110 -
          (((C10225 * C1174 + C32919 * C1184 + C10224 * C1161 + C10221 * C1178 +
             C10223 * C266 + C10220 * C279) *
                C32542 +
            (C10225 * C1157 + C32919 * C1173 + C10224 * C1151 + C10221 * C1162 +
             C10223 * C249 + C10220 * C265) *
                C6200) *
               C32916 +
           ((C10681 + C10682 + C10683) * C32542 +
            (C10684 + C10685 + C10686) * C6200) *
               C32939 +
           ((C10268 + C10267 + C10266) * C32542 +
            (C10265 + C10264 + C10263) * C6200) *
               C32951) *
              C32603 * C32589 * C111 +
          ((C10283 * C6200 + C10284 * C32542) * C32951 +
           ((C10680 + C10679 + C10678) * C6200 +
            (C10677 + C10676 + C10675) * C32542) *
               C32939 +
           ((C10223 * C250 + C10220 * C267 + C10224 * C1150 + C10221 * C1160 +
             C10225 * C1158 + C32919 * C1175) *
                C6200 +
            (C10223 * C268 + C10220 * C280 + C10224 * C1159 + C10221 * C1177 +
             C10225 * C1176 + C32919 * C1185) *
                C32542) *
               C32916) *
              C32603 * C32589 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C10223 * C119 + C10220 * C126 + C10224 * C352 + C10221 * C367 +
             C10225 * C353 + C32919 * C368) *
                C6200 +
            (C10223 * C127 + C10220 * C140 + C10224 * C366 + C10221 * C382 +
             C10225 * C369 + C32919 * C383) *
                C32542) *
               C32951 +
           ((C11271 + C11272 + C11273) * C6200 +
            (C11274 + C11275 + C11276) * C32542) *
               C32939 +
           C11295 * C32916) *
              C32603 * C239 -
          (((C11283 + C11284 + C11285) * C32542 +
            (C11286 + C11287 + C11288) * C6200) *
               C32916 +
           ((C11282 + C11281 + C11280) * C32542 +
            (C11279 + C11278 + C11277) * C6200) *
               C32939 +
           ((C11276 + C11275 + C11274) * C32542 +
            (C11273 + C11272 + C11271) * C6200) *
               C32951) *
              C32603 * C240 +
          (C11295 * C32951 +
           ((C11288 + C11287 + C11286) * C6200 +
            (C11285 + C11284 + C11283) * C32542) *
               C32939 +
           ((C10223 * C966 + C10220 * C975 + C10224 * C6358 + C10221 * C6362 +
             C10225 * C6360 + C32919 * C6365) *
                C6200 +
            (C10223 * C976 + C10220 * C984 + C10224 * C6361 + C10221 * C6367 +
             C10225 * C6366 + C32919 * C6369) *
                C32542) *
               C32916) *
              C32603 * C241) *
         C32577) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C10223 * C119 + C10220 * C126 + C10224 * C352 + C10221 * C367 +
             C10225 * C353 + C32919 * C368) *
                C6200 +
            (C10223 * C127 + C10220 * C140 + C10224 * C366 + C10221 * C382 +
             C10225 * C369 + C32919 * C383) *
                C32542) *
               C32951 +
           ((C11271 + C11272 + C11273) * C6200 +
            (C11274 + C11275 + C11276) * C32542) *
               C32939 +
           C11295 * C32916) *
              C345 -
          (((C10225 * C7056 + C32919 * C7062 + C10224 * C1172 + C10221 * C1183 +
             C10223 * C1163 + C10220 * C1179) *
                C32542 +
            (C10225 * C7053 + C32919 * C7057 + C10224 * C1156 + C10221 * C1171 +
             C10223 * C1152 + C10220 * C1164) *
                C6200) *
               C32916 +
           ((C10225 * C2644 + C32919 * C2649 + C10224 * C1166 + C10221 * C1180 +
             C10223 * C702 + C10220 * C711) *
                C32542 +
            (C10225 * C2640 + C32919 * C2643 + C10224 * C1153 + C10221 * C1165 +
             C10223 * C696 + C10220 * C701) *
                C6200) *
               C32939 +
           ((C10225 * C2108 + C32919 * C2118 + C10224 * C369 + C10221 * C383 +
             C10223 * C366 + C10220 * C382) *
                C32542 +
            (C10225 * C2100 + C32919 * C2109 + C10224 * C353 + C10221 * C368 +
             C10223 * C352 + C10220 * C367) *
                C6200) *
               C32951) *
              C346 +
          (((C10223 * C353 + C10220 * C368 + C10224 * C2100 + C10221 * C2109 +
             C10225 * C2101 + C32919 * C2110) *
                C6200 +
            (C10223 * C369 + C10220 * C383 + C10224 * C2108 + C10221 * C2118 +
             C10225 * C2111 + C32919 * C2119) *
                C32542) *
               C32951 +
           ((C10223 * C1153 + C10220 * C1165 + C10224 * C2640 + C10221 * C2643 +
             C10225 * C7054 + C32919 * C7058) *
                C6200 +
            (C10223 * C1166 + C10220 * C1180 + C10224 * C2644 + C10221 * C2649 +
             C10225 * C7059 + C32919 * C7063) *
                C32542) *
               C32939 +
           ((C10223 * C1156 + C10220 * C1171 + C10224 * C7053 + C10221 * C7057 +
             C10225 * C7055 + C32919 * C7060) *
                C6200 +
            (C10223 * C1172 + C10220 * C1183 + C10224 * C7056 + C10221 * C7062 +
             C10225 * C7061 + C32919 * C7064) *
                C32542) *
               C32916) *
              C347) *
         C32589 * C32577) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C11964 * C119 + C11959 * C126 + C11965 * C352 + C11960 * C367 +
            C11966 * C353 + C11961 * C368 + C11967 * C2100 + C11962 * C2109 +
            C11968 * C2101 + C11963 * C2110) *
               C6200 +
           (C11964 * C127 + C11959 * C140 + C11965 * C366 + C11960 * C382 +
            C11966 * C369 + C11961 * C383 + C11967 * C2108 + C11962 * C2118 +
            C11968 * C2111 + C11963 * C2119) *
               C32542) *
              C32633 * C32603 * C32589 * C110 -
          ((C11968 * C2113 + C11963 * C2120 + C11967 * C2106 + C11962 * C2117 +
            C11966 * C371 + C11961 * C384 + C11965 * C364 + C11960 * C381 +
            C11964 * C129 + C11959 * C141) *
               C32542 +
           (C11968 * C2102 + C11963 * C2112 + C11967 * C2099 + C11962 * C2107 +
            C11966 * C354 + C11961 * C370 + C11965 * C351 + C11960 * C365 +
            C11964 * C120 + C11959 * C128) *
               C6200) *
              C32633 * C32603 * C32589 * C111 +
          ((C11964 * C121 + C11959 * C130 + C11965 * C350 + C11960 * C363 +
            C11966 * C355 + C11961 * C372 + C11967 * C2098 + C11962 * C2105 +
            C11968 * C2103 + C11963 * C2114) *
               C6200 +
           (C11964 * C131 + C11959 * C142 + C11965 * C362 + C11960 * C380 +
            C11966 * C373 + C11961 * C385 + C11967 * C2104 + C11962 * C2116 +
            C11968 * C2115 + C11963 * C2121) *
               C32542) *
              C32633 * C32603 * C32589 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C11964 * C119 + C11959 * C126 + C11965 * C352 + C11960 * C367 +
            C11966 * C353 + C11961 * C368 + C11967 * C2100 + C11962 * C2109 +
            C11968 * C2101 + C11963 * C2110) *
               C6200 +
           (C11964 * C127 + C11959 * C140 + C11965 * C366 + C11960 * C382 +
            C11966 * C369 + C11961 * C383 + C11967 * C2108 + C11962 * C2118 +
            C11968 * C2111 + C11963 * C2119) *
               C32542) *
              C32633 * C32603 * C239 -
          ((C11968 * C7059 + C11963 * C7063 + C11967 * C2644 + C11962 * C2649 +
            C11966 * C1166 + C11961 * C1180 + C11965 * C702 + C11960 * C711 +
            C11964 * C261 + C11959 * C277) *
               C32542 +
           (C11968 * C7054 + C11963 * C7058 + C11967 * C2640 + C11962 * C2643 +
            C11966 * C1153 + C11961 * C1165 + C11965 * C696 + C11960 * C701 +
            C11964 * C247 + C11959 * C262) *
               C6200) *
              C32633 * C32603 * C240 +
          ((C11964 * C248 + C11959 * C263 + C11965 * C1152 + C11960 * C1164 +
            C11966 * C1156 + C11961 * C1171 + C11967 * C7053 + C11962 * C7057 +
            C11968 * C7055 + C11963 * C7060) *
               C6200 +
           (C11964 * C264 + C11959 * C278 + C11965 * C1163 + C11960 * C1179 +
            C11966 * C1172 + C11961 * C1183 + C11967 * C7056 + C11962 * C7062 +
            C11968 * C7061 + C11963 * C7064) *
               C32542) *
              C32633 * C32603 * C241) *
         C32577) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C11964 * C119 + C11959 * C126 + C11965 * C352 + C11960 * C367 +
            C11966 * C353 + C11961 * C368 + C11967 * C2100 + C11962 * C2109 +
            C11968 * C2101 + C11963 * C2110) *
               C6200 +
           (C11964 * C127 + C11959 * C140 + C11965 * C366 + C11960 * C382 +
            C11966 * C369 + C11961 * C383 + C11967 * C2108 + C11962 * C2118 +
            C11968 * C2111 + C11963 * C2119) *
               C32542) *
              C32633 * C345 -
          ((C11968 * C12095 + C11963 * C12099 + C11967 * C2111 +
            C11962 * C2119 + C11966 * C2108 + C11961 * C2118 + C11965 * C369 +
            C11960 * C383 + C11964 * C366 + C11959 * C382) *
               C32542 +
           (C11968 * C12093 + C11963 * C12096 + C11967 * C2101 +
            C11962 * C2110 + C11966 * C2100 + C11961 * C2109 + C11965 * C353 +
            C11960 * C368 + C11964 * C352 + C11959 * C367) *
               C6200) *
              C32633 * C346 +
          ((C11964 * C353 + C11959 * C368 + C11965 * C2100 + C11960 * C2109 +
            C11966 * C2101 + C11961 * C2110 + C11967 * C12093 +
            C11962 * C12096 + C11968 * C12094 + C11963 * C12097) *
               C6200 +
           (C11964 * C369 + C11959 * C383 + C11965 * C2108 + C11960 * C2118 +
            C11966 * C2111 + C11961 * C2119 + C11967 * C12095 +
            C11962 * C12099 + C11968 * C12098 + C11963 * C12100) *
               C32542) *
              C32633 * C347) *
         C32589 * C32577) /
            (p * q * std::sqrt(p + q));
    d2ee[63] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C113 * C119 + C32644 * C126) * C114 +
                (C113 * C127 + C32644 * C140) * C102 + C168 * C115 +
                C169 * C103 + C170 * C116 + C171 * C104 + C172 * C117 +
                C173 * C105 + C174 * C118 + C175 * C106) *
                   C32633 * C584 -
               (C607 * C106 + C608 * C118 + C609 * C105 + C610 * C117 +
                C611 * C104 + C612 * C116 + C613 * C103 + C614 * C115 +
                (C113 * C366 + C32644 * C382) * C102 +
                (C113 * C352 + C32644 * C367) * C114) *
                   C32633 * C585) *
                  C32589 * C472 +
              ((C614 * C114 + C613 * C102 + C612 * C115 + C611 * C103 +
                C610 * C116 + C609 * C104 + C608 * C117 + C607 * C105 +
                (C113 * C586 + C32644 * C587) * C118 +
                (C113 * C588 + C32644 * C589) * C106) *
                   C32633 * C585 -
               (C176 * C106 + C177 * C118 + C175 * C105 + C174 * C117 +
                C173 * C104 + C172 * C116 + C171 * C103 + C170 * C115 +
                C169 * C102 + C168 * C114) *
                   C32633 * C584) *
                  C32589 * C473) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C113 * C119 + C32644 * C126) * C832 +
                 (C113 * C127 + C32644 * C140) * C826 + C168 * C833 +
                 C169 * C827 + C170 * C834 + C171 * C32905) *
                    C32951 +
                (C1026 + C1027 + C992 + C993 + C994 + C995) * C32939 +
                C1040 * C32916) *
                   C584 -
               ((C1515 * C32905 + C1516 * C834 + C1517 * C827 + C1518 * C833 +
                 (C113 * C1163 + C32644 * C1179) * C826 +
                 (C113 * C1152 + C32644 * C1164) * C832) *
                    C32916 +
                (C1519 * C32905 + C1520 * C834 + C1521 * C827 + C1522 * C833 +
                 (C113 * C702 + C32644 * C711) * C826 +
                 (C113 * C696 + C32644 * C701) * C832) *
                    C32939 +
                (C611 * C32905 + C612 * C834 + C613 * C827 + C614 * C833 +
                 (C113 * C366 + C32644 * C382) * C826 +
                 (C113 * C352 + C32644 * C367) * C832) *
                    C32951) *
                   C585) *
                  C32589 * C472 +
              (((C614 * C832 + C613 * C826 + C612 * C833 + C611 * C827 +
                 C610 * C834 + C609 * C32905) *
                    C32951 +
                (C1522 * C832 + C1521 * C826 + C1520 * C833 + C1519 * C827 +
                 (C113 * C699 + C32644 * C707) * C834 +
                 (C113 * C708 + C32644 * C714) * C32905) *
                    C32939 +
                (C1518 * C832 + C1517 * C826 + C1516 * C833 + C1515 * C827 +
                 (C113 * C1494 + C32644 * C1495) * C834 +
                 (C113 * C1496 + C32644 * C1497) * C32905) *
                    C32916) *
                   C585 -
               ((C1348 + C1347 + C1346 + C1345 + C1344 + C1343) * C32916 +
                (C1342 + C1341 + C1340 + C1339 + C1338 + C1337) * C32939 +
                (C173 * C32905 + C172 * C834 + C171 * C827 + C170 * C833 +
                 C169 * C826 + C168 * C832) *
                    C32951) *
                   C584) *
                  C32589 * C473)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C1817 * C119 + C32952 * C126 + C1818 * C352 + C32941 * C367 +
             C1819 * C353 + C32919 * C368) *
                C832 +
            (C1817 * C127 + C32952 * C140 + C1818 * C366 + C32941 * C382 +
             C1819 * C369 + C32919 * C383) *
                C826 +
            (C1857 + C1858 + C1859) * C833 + (C1860 + C1861 + C1862) * C827 +
            C1877 * C834 + C1878 * C32905) *
               C32633 * C584 -
           ((C2483 + C2484 + C2485) * C32905 + (C2486 + C2487 + C2488) * C834 +
            (C2489 + C2490 + C2491) * C827 + (C2492 + C2493 + C2494) * C833 +
            (C1819 * C2108 + C32919 * C2118 + C1818 * C369 + C32941 * C383 +
             C1817 * C366 + C32952 * C382) *
                C826 +
            (C1819 * C2100 + C32919 * C2109 + C1818 * C353 + C32941 * C368 +
             C1817 * C352 + C32952 * C367) *
                C832) *
               C32633 * C585) *
              C32589 * C472 +
          (((C2494 + C2493 + C2492) * C832 + (C2491 + C2490 + C2489) * C826 +
            (C2488 + C2487 + C2486) * C833 + (C2485 + C2484 + C2483) * C827 +
            (C1817 * C349 + C32952 * C361 + C1818 * C356 + C32941 * C374 +
             C1819 * C2454 + C32919 * C2455) *
                C834 +
            (C1817 * C360 + C32952 * C379 + C1818 * C375 + C32941 * C386 +
             C1819 * C2456 + C32919 * C2457) *
                C32905) *
               C32633 * C585 -
           ((C1869 + C1870 + C1871) * C32905 + (C1872 + C1873 + C1874) * C834 +
            (C1868 + C1867 + C1866) * C827 + (C1865 + C1864 + C1863) * C833 +
            (C1862 + C1861 + C1860) * C826 + (C1859 + C1858 + C1857) * C832) *
               C32633 * C584) *
              C32589 * C473)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C119 + C32644 * C126) * C5424 +
             (C113 * C127 + C32644 * C140) * C32948 + C168 * C5425 +
             C169 * C32935 + C170 * C5426 + C171 * C32905) *
                C5421 +
            (C5538 + C5539 + C5540 + C5541 + C5542 + C5543) * C5422 +
            C5560 * C32916) *
               C584 -
           ((C1515 * C32905 + C1516 * C5426 + C1517 * C32935 + C1518 * C5425 +
             C1697 * C32948 + C1698 * C5424) *
                C32916 +
            (C1519 * C32905 + C1520 * C5426 + C1521 * C32935 + C1522 * C5425 +
             C1699 * C32948 + C1700 * C5424) *
                C5422 +
            (C611 * C32905 + C612 * C5426 + C613 * C32935 + C614 * C5425 +
             (C113 * C366 + C32644 * C382) * C32948 +
             (C113 * C352 + C32644 * C367) * C5424) *
                C5421) *
               C585) *
              C32589 * C472 +
          (((C614 * C5424 + C613 * C32948 + C612 * C5425 + C611 * C32935 +
             C610 * C5426 + C609 * C32905) *
                C5421 +
            (C1522 * C5424 + C1521 * C32948 + C1520 * C5425 + C1519 * C32935 +
             C3246 * C5426 + C3245 * C32905) *
                C5422 +
            (C1518 * C5424 + C1517 * C32948 + C1516 * C5425 + C1515 * C32935 +
             (C113 * C1494 + C32644 * C1495) * C5426 +
             (C113 * C1496 + C32644 * C1497) * C32905) *
                C32916) *
               C585 -
           ((C5828 + C5827 + C5826 + C5825 + C5824 + C5823) * C32916 +
            (C5822 + C5821 + C5820 + C5819 + C5818 + C5817) * C5422 +
            (C173 * C32905 + C172 * C5426 + C171 * C32935 + C170 * C5425 +
             C169 * C32948 + C168 * C5424) *
                C5421) *
               C584) *
              C32589 * C473)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C119 + C32644 * C126) * C6200 +
             (C113 * C127 + C32644 * C140) * C32542) *
                C6195 +
            (C6272 + C6273) * C6196 + C6286 * C6197 + C6287 * C6198 +
            C6296 * C6199) *
               C584 -
           (((C113 * C6361 + C32644 * C6367) * C32542 +
             (C113 * C6358 + C32644 * C6362) * C6200) *
                C6199 +
            ((C113 * C1672 + C32644 * C1677) * C32542 +
             (C113 * C1668 + C32644 * C1671) * C6200) *
                C6198 +
            (C1697 * C32542 + C1698 * C6200) * C6197 +
            (C1699 * C32542 + C1700 * C6200) * C6196 +
            ((C113 * C366 + C32644 * C382) * C32542 +
             (C113 * C352 + C32644 * C367) * C6200) *
                C6195) *
               C585) *
              C32589 * C472 +
          (((C614 * C6200 + C613 * C32542) * C6195 +
            (C1522 * C6200 + C1521 * C32542) * C6196 +
            (C1518 * C6200 + C1517 * C32542) * C6197 +
            ((C113 * C1669 + C32644 * C1673) * C6200 +
             (C113 * C1674 + C32644 * C1678) * C32542) *
                C6198 +
            ((C113 * C6552 + C32644 * C6553) * C6200 +
             (C113 * C6554 + C32644 * C6555) * C32542) *
                C6199) *
               C585 -
           ((C6470 + C6469) * C6199 + (C6462 + C6461) * C6198 +
            (C6460 + C6459) * C6197 + (C6458 + C6457) * C6196 +
            (C169 * C32542 + C168 * C6200) * C6195) *
               C584) *
              C32589 * C473)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C1817 * C119 + C32952 * C126 + C1818 * C352 + C32941 * C367 +
              C1819 * C353 + C32919 * C368) *
                 C6200 +
             (C1817 * C127 + C32952 * C140 + C1818 * C366 + C32941 * C382 +
              C1819 * C369 + C32919 * C383) *
                 C32542) *
                C5421 +
            ((C6919 + C6920 + C6921) * C6200 +
             (C6922 + C6923 + C6924) * C32542) *
                C5422 +
            C6943 * C32916) *
               C584 -
           (((C1819 * C7056 + C32919 * C7062 + C1818 * C1172 + C32941 * C1183 +
              C1817 * C1163 + C32952 * C1179) *
                 C32542 +
             (C1819 * C7053 + C32919 * C7057 + C1818 * C1156 + C32941 * C1171 +
              C1817 * C1152 + C32952 * C1164) *
                 C6200) *
                C32916 +
            ((C1819 * C2644 + C32919 * C2649 + C1818 * C1166 + C32941 * C1180 +
              C1817 * C702 + C32952 * C711) *
                 C32542 +
             (C1819 * C2640 + C32919 * C2643 + C1818 * C1153 + C32941 * C1165 +
              C1817 * C696 + C32952 * C701) *
                 C6200) *
                C5422 +
            ((C1819 * C2108 + C32919 * C2118 + C1818 * C369 + C32941 * C383 +
              C1817 * C366 + C32952 * C382) *
                 C32542 +
             (C1819 * C2100 + C32919 * C2109 + C1818 * C353 + C32941 * C368 +
              C1817 * C352 + C32952 * C367) *
                 C6200) *
                C5421) *
               C585) *
              C32589 * C472 +
          ((((C2494 + C2493 + C2492) * C6200 +
             (C2491 + C2490 + C2489) * C32542) *
                C5421 +
            ((C1817 * C697 + C32952 * C703 + C1818 * C1154 + C32941 * C1167 +
              C1819 * C2641 + C32919 * C2645) *
                 C6200 +
             (C1817 * C704 + C32952 * C712 + C1818 * C1168 + C32941 * C1181 +
              C1819 * C2646 + C32919 * C2650) *
                 C32542) *
                C5422 +
            ((C1817 * C1151 + C32952 * C1162 + C1818 * C1157 + C32941 * C1173 +
              C1819 * C7379 + C32919 * C7380) *
                 C6200 +
             (C1817 * C1161 + C32952 * C1178 + C1818 * C1174 + C32941 * C1184 +
              C1819 * C7381 + C32919 * C7382) *
                 C32542) *
                C32916) *
               C585 -
           (((C7233 + C7232 + C7231) * C32542 +
             (C7230 + C7229 + C7228) * C6200) *
                C32916 +
            ((C2303 + C2304 + C2305) * C32542 +
             (C2306 + C2307 + C2308) * C6200) *
                C5422 +
            ((C1862 + C1861 + C1860) * C32542 +
             (C1859 + C1858 + C1857) * C6200) *
                C5421) *
               C584) *
              C32589 * C473)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C10223 * C119 + C10220 * C126 + C10224 * C352 + C10221 * C367 +
             C10225 * C353 + C32919 * C368) *
                C5424 +
            (C10223 * C127 + C10220 * C140 + C10224 * C366 + C10221 * C382 +
             C10225 * C369 + C32919 * C383) *
                C32948 +
            (C10263 + C10264 + C10265) * C5425 +
            (C10266 + C10267 + C10268) * C32935 + C10283 * C5426 +
            C10284 * C32905) *
               C32633 * C584 -
           ((C10857 + C10858 + C10859) * C32905 +
            (C10860 + C10861 + C10862) * C5426 +
            (C10863 + C10864 + C10865) * C32935 +
            (C10866 + C10867 + C10868) * C5425 +
            (C10225 * C2108 + C32919 * C2118 + C10224 * C369 + C10221 * C383 +
             C10223 * C366 + C10220 * C382) *
                C32948 +
            (C10225 * C2100 + C32919 * C2109 + C10224 * C353 + C10221 * C368 +
             C10223 * C352 + C10220 * C367) *
                C5424) *
               C32633 * C585) *
              C32589 * C472 +
          (((C10868 + C10867 + C10866) * C5424 +
            (C10865 + C10864 + C10863) * C32948 +
            (C10862 + C10861 + C10860) * C5425 +
            (C10859 + C10858 + C10857) * C32935 +
            (C10223 * C349 + C10220 * C361 + C10224 * C356 + C10221 * C374 +
             C10225 * C2454 + C32919 * C2455) *
                C5426 +
            (C10223 * C360 + C10220 * C379 + C10224 * C375 + C10221 * C386 +
             C10225 * C2456 + C32919 * C2457) *
                C32905) *
               C32633 * C585 -
           ((C10275 + C10276 + C10277) * C32905 +
            (C10278 + C10279 + C10280) * C5426 +
            (C10274 + C10273 + C10272) * C32935 +
            (C10271 + C10270 + C10269) * C5425 +
            (C10268 + C10267 + C10266) * C32948 +
            (C10265 + C10264 + C10263) * C5424) *
               C32633 * C584) *
              C32589 * C473)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C10223 * C119 + C10220 * C126 + C10224 * C352 + C10221 * C367 +
              C10225 * C353 + C32919 * C368) *
                 C6200 +
             (C10223 * C127 + C10220 * C140 + C10224 * C366 + C10221 * C382 +
              C10225 * C369 + C32919 * C383) *
                 C32542) *
                C32951 +
            ((C11271 + C11272 + C11273) * C6200 +
             (C11274 + C11275 + C11276) * C32542) *
                C32939 +
            C11295 * C32916) *
               C584 -
           (((C10225 * C7056 + C32919 * C7062 + C10224 * C1172 +
              C10221 * C1183 + C10223 * C1163 + C10220 * C1179) *
                 C32542 +
             (C10225 * C7053 + C32919 * C7057 + C10224 * C1156 +
              C10221 * C1171 + C10223 * C1152 + C10220 * C1164) *
                 C6200) *
                C32916 +
            ((C10225 * C2644 + C32919 * C2649 + C10224 * C1166 +
              C10221 * C1180 + C10223 * C702 + C10220 * C711) *
                 C32542 +
             (C10225 * C2640 + C32919 * C2643 + C10224 * C1153 +
              C10221 * C1165 + C10223 * C696 + C10220 * C701) *
                 C6200) *
                C32939 +
            ((C10225 * C2108 + C32919 * C2118 + C10224 * C369 + C10221 * C383 +
              C10223 * C366 + C10220 * C382) *
                 C32542 +
             (C10225 * C2100 + C32919 * C2109 + C10224 * C353 + C10221 * C368 +
              C10223 * C352 + C10220 * C367) *
                 C6200) *
                C32951) *
               C585) *
              C32589 * C472 +
          ((((C10868 + C10867 + C10866) * C6200 +
             (C10865 + C10864 + C10863) * C32542) *
                C32951 +
            ((C10223 * C697 + C10220 * C703 + C10224 * C1154 + C10221 * C1167 +
              C10225 * C2641 + C32919 * C2645) *
                 C6200 +
             (C10223 * C704 + C10220 * C712 + C10224 * C1168 + C10221 * C1181 +
              C10225 * C2646 + C32919 * C2650) *
                 C32542) *
                C32939 +
            ((C10223 * C1151 + C10220 * C1162 + C10224 * C1157 +
              C10221 * C1173 + C10225 * C7379 + C32919 * C7380) *
                 C6200 +
             (C10223 * C1161 + C10220 * C1178 + C10224 * C1174 +
              C10221 * C1184 + C10225 * C7381 + C32919 * C7382) *
                 C32542) *
                C32916) *
               C585 -
           (((C11569 + C11568 + C11567) * C32542 +
             (C11566 + C11565 + C11564) * C6200) *
                C32916 +
            ((C10681 + C10682 + C10683) * C32542 +
             (C10684 + C10685 + C10686) * C6200) *
                C32939 +
            ((C10268 + C10267 + C10266) * C32542 +
             (C10265 + C10264 + C10263) * C6200) *
                C32951) *
               C584) *
              C32589 * C473)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C11964 * C119 + C11959 * C126 + C11965 * C352 + C11960 * C367 +
             C11966 * C353 + C11961 * C368 + C11967 * C2100 + C11962 * C2109 +
             C11968 * C2101 + C11963 * C2110) *
                C6200 +
            (C11964 * C127 + C11959 * C140 + C11965 * C366 + C11960 * C382 +
             C11966 * C369 + C11961 * C383 + C11967 * C2108 + C11962 * C2118 +
             C11968 * C2111 + C11963 * C2119) *
                C32542) *
               C32633 * C584 -
           ((C11968 * C12095 + C11963 * C12099 + C11967 * C2111 +
             C11962 * C2119 + C11966 * C2108 + C11961 * C2118 + C11965 * C369 +
             C11960 * C383 + C11964 * C366 + C11959 * C382) *
                C32542 +
            (C11968 * C12093 + C11963 * C12096 + C11967 * C2101 +
             C11962 * C2110 + C11966 * C2100 + C11961 * C2109 + C11965 * C353 +
             C11960 * C368 + C11964 * C352 + C11959 * C367) *
                C6200) *
               C32633 * C585) *
              C32589 * C472 +
          (((C11964 * C351 + C11959 * C365 + C11965 * C354 + C11960 * C370 +
             C11966 * C2099 + C11961 * C2107 + C11967 * C2102 + C11962 * C2112 +
             C11968 * C12269 + C11963 * C12270) *
                C6200 +
            (C11964 * C364 + C11959 * C381 + C11965 * C371 + C11960 * C384 +
             C11966 * C2106 + C11961 * C2117 + C11967 * C2113 + C11962 * C2120 +
             C11968 * C12271 + C11963 * C12272) *
                C32542) *
               C32633 * C585 -
           ((C11968 * C2113 + C11963 * C2120 + C11967 * C2106 + C11962 * C2117 +
             C11966 * C371 + C11961 * C384 + C11965 * C364 + C11960 * C381 +
             C11964 * C129 + C11959 * C141) *
                C32542 +
            (C11968 * C2102 + C11963 * C2112 + C11967 * C2099 + C11962 * C2107 +
             C11966 * C354 + C11961 * C370 + C11965 * C351 + C11960 * C365 +
             C11964 * C120 + C11959 * C128) *
                C6200) *
               C32633 * C584) *
              C32589 * C473)) /
            (p * q * std::sqrt(p + q));
    d2ee[64] +=
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C119 + C32644 * C126) * C114 +
           (C113 * C127 + C32644 * C140) * C102 + C168 * C115 + C169 * C103 +
           C170 * C116 + C171 * C104 + C172 * C117 + C173 * C105 + C174 * C118 +
           C175 * C106) *
              C32633 * C32603 * C32589 * C110 -
          (C176 * C106 + C177 * C118 + C175 * C105 + C174 * C117 + C173 * C104 +
           C172 * C116 + C171 * C103 + C170 * C115 + C169 * C102 +
           C168 * C114) *
              C32633 * C32603 * C32589 * C111 +
          (C170 * C114 + C171 * C102 + C172 * C115 + C173 * C103 + C174 * C116 +
           C175 * C104 + C177 * C117 + C176 * C105 +
           (C113 * C125 + C32644 * C138) * C118 +
           (C113 * C139 + C32644 * C146) * C106) *
              C32633 * C32603 * C32589 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C119 + C32644 * C126) * C114 +
           (C113 * C127 + C32644 * C140) * C102 + C168 * C115 + C169 * C103 +
           C170 * C116 + C171 * C104 + C172 * C117 + C173 * C105 + C174 * C118 +
           C175 * C106) *
              C32633 * C32603 * C239 -
          ((C113 * C253 + C32644 * C273) * C106 +
           (C113 * C243 + C32644 * C254) * C118 +
           (C113 * C255 + C32644 * C274) * C105 +
           (C113 * C244 + C32644 * C256) * C117 +
           (C113 * C257 + C32644 * C275) * C104 +
           (C113 * C245 + C32644 * C258) * C116 +
           (C113 * C259 + C32644 * C276) * C103 +
           (C113 * C246 + C32644 * C260) * C115 +
           (C113 * C261 + C32644 * C277) * C102 +
           (C113 * C247 + C32644 * C262) * C114) *
              C32633 * C32603 * C240 +
          ((C113 * C248 + C32644 * C263) * C114 +
           (C113 * C264 + C32644 * C278) * C102 +
           (C113 * C249 + C32644 * C265) * C115 +
           (C113 * C266 + C32644 * C279) * C103 +
           (C113 * C250 + C32644 * C267) * C116 +
           (C113 * C268 + C32644 * C280) * C104 +
           (C113 * C251 + C32644 * C269) * C117 +
           (C113 * C270 + C32644 * C281) * C105 +
           (C113 * C252 + C32644 * C271) * C118 +
           (C113 * C272 + C32644 * C282) * C106) *
              C32633 * C32603 * C241) *
         C32577) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C119 + C32644 * C126) * C832 +
            (C113 * C127 + C32644 * C140) * C826 + C168 * C833 + C169 * C827 +
            C170 * C834 + C171 * C32905) *
               C32951 +
           ((C113 * C247 + C32644 * C262) * C832 +
            (C113 * C261 + C32644 * C277) * C826 + C502 * C833 + C501 * C827 +
            C500 * C834 + C499 * C32905) *
               C32939 +
           ((C113 * C248 + C32644 * C263) * C832 +
            (C113 * C264 + C32644 * C278) * C826 + C848 * C833 + C849 * C827 +
            C850 * C834 + C851 * C32905) *
               C32916) *
              C32603 * C32589 * C110 -
          ((C852 * C32905 + C853 * C834 + C851 * C827 + C850 * C833 +
            C849 * C826 + C848 * C832) *
               C32916 +
           (C497 * C32905 + C498 * C834 + C499 * C827 + C500 * C833 +
            C501 * C826 + C502 * C832) *
               C32939 +
           (C173 * C32905 + C172 * C834 + C171 * C827 + C170 * C833 +
            C169 * C826 + C168 * C832) *
               C32951) *
              C32603 * C32589 * C111 +
          ((C170 * C832 + C171 * C826 + C172 * C833 + C173 * C827 +
            C174 * C834 + C175 * C32905) *
               C32951 +
           (C500 * C832 + C499 * C826 + C498 * C833 + C497 * C827 +
            C496 * C834 + C495 * C32905) *
               C32939 +
           (C850 * C832 + C851 * C826 + C853 * C833 + C852 * C827 +
            (C113 * C252 + C32644 * C271) * C834 +
            (C113 * C272 + C32644 * C282) * C32905) *
               C32916) *
              C32603 * C32589 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C119 + C32644 * C126) * C832 +
            (C113 * C127 + C32644 * C140) * C826 + C168 * C833 + C169 * C827 +
            C170 * C834 + C171 * C32905) *
               C32951 +
           (C1026 + C1027 + C992 + C993 + C994 + C995) * C32939 +
           C1040 * C32916) *
              C32603 * C239 -
          ((C1030 + C1031 + C1032 + C1033 + C1034 + C1035) * C32916 +
           (C1003 + C1002 + C1001 + C1000 + C1029 + C1028) * C32939 +
           (C995 + C994 + C993 + C992 + C1027 + C1026) * C32951) *
              C32603 * C240 +
          (C1040 * C32951 +
           (C1035 + C1034 + C1033 + C1032 + C1031 + C1030) * C32939 +
           ((C113 * C966 + C32644 * C975) * C832 +
            (C113 * C976 + C32644 * C984) * C826 +
            (C113 * C967 + C32644 * C977) * C833 +
            (C113 * C978 + C32644 * C985) * C827 +
            (C113 * C968 + C32644 * C979) * C834 +
            (C113 * C980 + C32644 * C986) * C32905) *
               C32916) *
              C32603 * C241) *
         C32577) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C1817 * C119 + C32952 * C126 + C1818 * C352 + C32941 * C367 +
            C1819 * C353 + C32919 * C368) *
               C832 +
           (C1817 * C127 + C32952 * C140 + C1818 * C366 + C32941 * C382 +
            C1819 * C369 + C32919 * C383) *
               C826 +
           (C1857 + C1858 + C1859) * C833 + (C1860 + C1861 + C1862) * C827 +
           C1877 * C834 + C1878 * C32905) *
              C32633 * C32603 * C32589 * C110 -
          ((C1869 + C1870 + C1871) * C32905 + (C1872 + C1873 + C1874) * C834 +
           (C1868 + C1867 + C1866) * C827 + (C1865 + C1864 + C1863) * C833 +
           (C1862 + C1861 + C1860) * C826 + (C1859 + C1858 + C1857) * C832) *
              C32633 * C32603 * C32589 * C111 +
          (C1877 * C832 + C1878 * C826 + (C1874 + C1873 + C1872) * C833 +
           (C1871 + C1870 + C1869) * C827 +
           (C1817 * C123 + C32952 * C134 + C1818 * C348 + C32941 * C359 +
            C1819 * C357 + C32919 * C376) *
               C834 +
           (C1817 * C135 + C32952 * C144 + C1818 * C358 + C32941 * C378 +
            C1819 * C377 + C32919 * C387) *
               C32905) *
              C32633 * C32603 * C32589 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C1817 * C119 + C32952 * C126 + C1818 * C352 + C32941 * C367 +
            C1819 * C353 + C32919 * C368) *
               C832 +
           (C1817 * C127 + C32952 * C140 + C1818 * C366 + C32941 * C382 +
            C1819 * C369 + C32919 * C383) *
               C826 +
           (C1857 + C1858 + C1859) * C833 + (C1860 + C1861 + C1862) * C827 +
           C1877 * C834 + C1878 * C32905) *
              C32633 * C32603 * C239 -
          ((C1819 * C1170 + C32919 * C1182 + C1818 * C706 + C32941 * C713 +
            C1817 * C257 + C32952 * C275) *
               C32905 +
           (C1819 * C1155 + C32919 * C1169 + C1818 * C698 + C32941 * C705 +
            C1817 * C245 + C32952 * C258) *
               C834 +
           (C1819 * C1168 + C32919 * C1181 + C1818 * C704 + C32941 * C712 +
            C1817 * C259 + C32952 * C276) *
               C827 +
           (C1819 * C1154 + C32919 * C1167 + C1818 * C697 + C32941 * C703 +
            C1817 * C246 + C32952 * C260) *
               C833 +
           (C1819 * C1166 + C32919 * C1180 + C1818 * C702 + C32941 * C711 +
            C1817 * C261 + C32952 * C277) *
               C826 +
           (C1819 * C1153 + C32919 * C1165 + C1818 * C696 + C32941 * C701 +
            C1817 * C247 + C32952 * C262) *
               C832) *
              C32633 * C32603 * C240 +
          ((C1817 * C248 + C32952 * C263 + C1818 * C1152 + C32941 * C1164 +
            C1819 * C1156 + C32919 * C1171) *
               C832 +
           (C1817 * C264 + C32952 * C278 + C1818 * C1163 + C32941 * C1179 +
            C1819 * C1172 + C32919 * C1183) *
               C826 +
           (C1817 * C249 + C32952 * C265 + C1818 * C1151 + C32941 * C1162 +
            C1819 * C1157 + C32919 * C1173) *
               C833 +
           (C1817 * C266 + C32952 * C279 + C1818 * C1161 + C32941 * C1178 +
            C1819 * C1174 + C32919 * C1184) *
               C827 +
           (C1817 * C250 + C32952 * C267 + C1818 * C1150 + C32941 * C1160 +
            C1819 * C1158 + C32919 * C1175) *
               C834 +
           (C1817 * C268 + C32952 * C280 + C1818 * C1159 + C32941 * C1177 +
            C1819 * C1176 + C32919 * C1185) *
               C32905) *
              C32633 * C32603 * C241) *
         C32577) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C119 + C32644 * C126) * C5424 +
            (C113 * C127 + C32644 * C140) * C32948 + C168 * C5425 +
            C169 * C32935 + C170 * C5426 + C171 * C32905) *
               C5421 +
           (C1016 * C5424 + C1017 * C32948 + C502 * C5425 + C501 * C32935 +
            C500 * C5426 + C499 * C32905) *
               C5422 +
           (C1018 * C5424 + C1019 * C32948 + C848 * C5425 + C849 * C32935 +
            C850 * C5426 + C851 * C32905) *
               C32916) *
              C32603 * C32589 * C110 -
          ((C852 * C32905 + C853 * C5426 + C851 * C32935 + C850 * C5425 +
            C849 * C32948 + C848 * C5424) *
               C32916 +
           (C497 * C32905 + C498 * C5426 + C499 * C32935 + C500 * C5425 +
            C501 * C32948 + C502 * C5424) *
               C5422 +
           (C173 * C32905 + C172 * C5426 + C171 * C32935 + C170 * C5425 +
            C169 * C32948 + C168 * C5424) *
               C5421) *
              C32603 * C32589 * C111 +
          ((C170 * C5424 + C171 * C32948 + C172 * C5425 + C173 * C32935 +
            C174 * C5426 + C175 * C32905) *
               C5421 +
           (C500 * C5424 + C499 * C32948 + C498 * C5425 + C497 * C32935 +
            C496 * C5426 + C495 * C32905) *
               C5422 +
           (C850 * C5424 + C851 * C32948 + C853 * C5425 + C852 * C32935 +
            (C113 * C252 + C32644 * C271) * C5426 +
            (C113 * C272 + C32644 * C282) * C32905) *
               C32916) *
              C32603 * C32589 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C119 + C32644 * C126) * C5424 +
            (C113 * C127 + C32644 * C140) * C32948 + C168 * C5425 +
            C169 * C32935 + C170 * C5426 + C171 * C32905) *
               C5421 +
           (C5538 + C5539 + C5540 + C5541 + C5542 + C5543) * C5422 +
           C5560 * C32916) *
              C32603 * C239 -
          ((C5550 + C5551 + C5552 + C5553 + C5554 + C5555) * C32916 +
           (C5549 + C5548 + C5547 + C5546 + C5545 + C5544) * C5422 +
           (C5543 + C5542 + C5541 + C5540 + C5539 + C5538) * C5421) *
              C32603 * C240 +
          (C5560 * C5421 +
           (C5555 + C5554 + C5553 + C5552 + C5551 + C5550) * C5422 +
           ((C113 * C966 + C32644 * C975) * C5424 +
            (C113 * C976 + C32644 * C984) * C32948 +
            (C113 * C967 + C32644 * C977) * C5425 +
            (C113 * C978 + C32644 * C985) * C32935 +
            (C113 * C968 + C32644 * C979) * C5426 +
            (C113 * C980 + C32644 * C986) * C32905) *
               C32916) *
              C32603 * C241) *
         C32577) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C119 + C32644 * C126) * C6200 +
            (C113 * C127 + C32644 * C140) * C32542) *
               C6195 +
           (C1016 * C6200 + C1017 * C32542) * C6196 +
           (C1018 * C6200 + C1019 * C32542) * C6197 +
           (C1025 * C6200 + C1024 * C32542) * C6198 +
           ((C113 * C966 + C32644 * C975) * C6200 +
            (C113 * C976 + C32644 * C984) * C32542) *
               C6199) *
              C32603 * C32589 * C110 -
          (((C113 * C978 + C32644 * C985) * C32542 +
            (C113 * C967 + C32644 * C977) * C6200) *
               C6199 +
           (C1022 * C32542 + C1023 * C6200) * C6198 +
           (C849 * C32542 + C848 * C6200) * C6197 +
           (C501 * C32542 + C502 * C6200) * C6196 +
           (C169 * C32542 + C168 * C6200) * C6195) *
              C32603 * C32589 * C111 +
          ((C170 * C6200 + C171 * C32542) * C6195 +
           (C500 * C6200 + C499 * C32542) * C6196 +
           (C850 * C6200 + C851 * C32542) * C6197 +
           (C1021 * C6200 + C1020 * C32542) * C6198 +
           ((C113 * C968 + C32644 * C979) * C6200 +
            (C113 * C980 + C32644 * C986) * C32542) *
               C6199) *
              C32603 * C32589 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C119 + C32644 * C126) * C6200 +
            (C113 * C127 + C32644 * C140) * C32542) *
               C6195 +
           (C6272 + C6273) * C6196 + C6286 * C6197 + C6287 * C6198 +
           C6296 * C6199) *
              C32603 * C239 -
          ((C6294 + C6295) * C6199 + (C6293 + C6292) * C6198 +
           (C6277 + C6276) * C6197 + (C6275 + C6274) * C6196 +
           (C6273 + C6272) * C6195) *
              C32603 * C240 +
          (C6286 * C6195 + C6287 * C6196 + C6296 * C6197 +
           (C6295 + C6294) * C6198 +
           ((C113 * C6264 + C32644 * C6267) * C6200 +
            (C113 * C6268 + C32644 * C6270) * C32542) *
               C6199) *
              C32603 * C241) *
         C32577) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C1817 * C119 + C32952 * C126 + C1818 * C352 + C32941 * C367 +
             C1819 * C353 + C32919 * C368) *
                C6200 +
            (C1817 * C127 + C32952 * C140 + C1818 * C366 + C32941 * C382 +
             C1819 * C369 + C32919 * C383) *
                C32542) *
               C5421 +
           ((C1817 * C247 + C32952 * C262 + C1818 * C696 + C32941 * C701 +
             C1819 * C1153 + C32919 * C1165) *
                C6200 +
            (C1817 * C261 + C32952 * C277 + C1818 * C702 + C32941 * C711 +
             C1819 * C1166 + C32919 * C1180) *
                C32542) *
               C5422 +
           ((C1817 * C248 + C32952 * C263 + C1818 * C1152 + C32941 * C1164 +
             C1819 * C1156 + C32919 * C1171) *
                C6200 +
            (C1817 * C264 + C32952 * C278 + C1818 * C1163 + C32941 * C1179 +
             C1819 * C1172 + C32919 * C1183) *
                C32542) *
               C32916) *
              C32603 * C32589 * C110 -
          (((C1819 * C1174 + C32919 * C1184 + C1818 * C1161 + C32941 * C1178 +
             C1817 * C266 + C32952 * C279) *
                C32542 +
            (C1819 * C1157 + C32919 * C1173 + C1818 * C1151 + C32941 * C1162 +
             C1817 * C249 + C32952 * C265) *
                C6200) *
               C32916 +
           ((C2303 + C2304 + C2305) * C32542 +
            (C2306 + C2307 + C2308) * C6200) *
               C5422 +
           ((C1862 + C1861 + C1860) * C32542 +
            (C1859 + C1858 + C1857) * C6200) *
               C5421) *
              C32603 * C32589 * C111 +
          ((C1877 * C6200 + C1878 * C32542) * C5421 +
           ((C2302 + C2301 + C2300) * C6200 +
            (C2299 + C2298 + C2297) * C32542) *
               C5422 +
           ((C1817 * C250 + C32952 * C267 + C1818 * C1150 + C32941 * C1160 +
             C1819 * C1158 + C32919 * C1175) *
                C6200 +
            (C1817 * C268 + C32952 * C280 + C1818 * C1159 + C32941 * C1177 +
             C1819 * C1176 + C32919 * C1185) *
                C32542) *
               C32916) *
              C32603 * C32589 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C1817 * C119 + C32952 * C126 + C1818 * C352 + C32941 * C367 +
             C1819 * C353 + C32919 * C368) *
                C6200 +
            (C1817 * C127 + C32952 * C140 + C1818 * C366 + C32941 * C382 +
             C1819 * C369 + C32919 * C383) *
                C32542) *
               C5421 +
           ((C6919 + C6920 + C6921) * C6200 +
            (C6922 + C6923 + C6924) * C32542) *
               C5422 +
           C6943 * C32916) *
              C32603 * C239 -
          (((C6931 + C6932 + C6933) * C32542 +
            (C6934 + C6935 + C6936) * C6200) *
               C32916 +
           ((C6930 + C6929 + C6928) * C32542 +
            (C6927 + C6926 + C6925) * C6200) *
               C5422 +
           ((C6924 + C6923 + C6922) * C32542 +
            (C6921 + C6920 + C6919) * C6200) *
               C5421) *
              C32603 * C240 +
          (C6943 * C5421 +
           ((C6936 + C6935 + C6934) * C6200 +
            (C6933 + C6932 + C6931) * C32542) *
               C5422 +
           ((C1817 * C966 + C32952 * C975 + C1818 * C6358 + C32941 * C6362 +
             C1819 * C6360 + C32919 * C6365) *
                C6200 +
            (C1817 * C976 + C32952 * C984 + C1818 * C6361 + C32941 * C6367 +
             C1819 * C6366 + C32919 * C6369) *
                C32542) *
               C32916) *
              C32603 * C241) *
         C32577) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C10223 * C119 + C10220 * C126 + C10224 * C352 + C10221 * C367 +
            C10225 * C353 + C32919 * C368) *
               C5424 +
           (C10223 * C127 + C10220 * C140 + C10224 * C366 + C10221 * C382 +
            C10225 * C369 + C32919 * C383) *
               C32948 +
           (C10263 + C10264 + C10265) * C5425 +
           (C10266 + C10267 + C10268) * C32935 + C10283 * C5426 +
           C10284 * C32905) *
              C32633 * C32603 * C32589 * C110 -
          ((C10275 + C10276 + C10277) * C32905 +
           (C10278 + C10279 + C10280) * C5426 +
           (C10274 + C10273 + C10272) * C32935 +
           (C10271 + C10270 + C10269) * C5425 +
           (C10268 + C10267 + C10266) * C32948 +
           (C10265 + C10264 + C10263) * C5424) *
              C32633 * C32603 * C32589 * C111 +
          (C10283 * C5424 + C10284 * C32948 +
           (C10280 + C10279 + C10278) * C5425 +
           (C10277 + C10276 + C10275) * C32935 +
           (C10223 * C123 + C10220 * C134 + C10224 * C348 + C10221 * C359 +
            C10225 * C357 + C32919 * C376) *
               C5426 +
           (C10223 * C135 + C10220 * C144 + C10224 * C358 + C10221 * C378 +
            C10225 * C377 + C32919 * C387) *
               C32905) *
              C32633 * C32603 * C32589 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C10223 * C119 + C10220 * C126 + C10224 * C352 + C10221 * C367 +
            C10225 * C353 + C32919 * C368) *
               C5424 +
           (C10223 * C127 + C10220 * C140 + C10224 * C366 + C10221 * C382 +
            C10225 * C369 + C32919 * C383) *
               C32948 +
           (C10263 + C10264 + C10265) * C5425 +
           (C10266 + C10267 + C10268) * C32935 + C10283 * C5426 +
           C10284 * C32905) *
              C32633 * C32603 * C239 -
          ((C10225 * C1170 + C32919 * C1182 + C10224 * C706 + C10221 * C713 +
            C10223 * C257 + C10220 * C275) *
               C32905 +
           (C10225 * C1155 + C32919 * C1169 + C10224 * C698 + C10221 * C705 +
            C10223 * C245 + C10220 * C258) *
               C5426 +
           (C10225 * C1168 + C32919 * C1181 + C10224 * C704 + C10221 * C712 +
            C10223 * C259 + C10220 * C276) *
               C32935 +
           (C10225 * C1154 + C32919 * C1167 + C10224 * C697 + C10221 * C703 +
            C10223 * C246 + C10220 * C260) *
               C5425 +
           (C10225 * C1166 + C32919 * C1180 + C10224 * C702 + C10221 * C711 +
            C10223 * C261 + C10220 * C277) *
               C32948 +
           (C10225 * C1153 + C32919 * C1165 + C10224 * C696 + C10221 * C701 +
            C10223 * C247 + C10220 * C262) *
               C5424) *
              C32633 * C32603 * C240 +
          ((C10223 * C248 + C10220 * C263 + C10224 * C1152 + C10221 * C1164 +
            C10225 * C1156 + C32919 * C1171) *
               C5424 +
           (C10223 * C264 + C10220 * C278 + C10224 * C1163 + C10221 * C1179 +
            C10225 * C1172 + C32919 * C1183) *
               C32948 +
           (C10223 * C249 + C10220 * C265 + C10224 * C1151 + C10221 * C1162 +
            C10225 * C1157 + C32919 * C1173) *
               C5425 +
           (C10223 * C266 + C10220 * C279 + C10224 * C1161 + C10221 * C1178 +
            C10225 * C1174 + C32919 * C1184) *
               C32935 +
           (C10223 * C250 + C10220 * C267 + C10224 * C1150 + C10221 * C1160 +
            C10225 * C1158 + C32919 * C1175) *
               C5426 +
           (C10223 * C268 + C10220 * C280 + C10224 * C1159 + C10221 * C1177 +
            C10225 * C1176 + C32919 * C1185) *
               C32905) *
              C32633 * C32603 * C241) *
         C32577) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C10223 * C119 + C10220 * C126 + C10224 * C352 + C10221 * C367 +
             C10225 * C353 + C32919 * C368) *
                C6200 +
            (C10223 * C127 + C10220 * C140 + C10224 * C366 + C10221 * C382 +
             C10225 * C369 + C32919 * C383) *
                C32542) *
               C32951 +
           ((C10223 * C247 + C10220 * C262 + C10224 * C696 + C10221 * C701 +
             C10225 * C1153 + C32919 * C1165) *
                C6200 +
            (C10223 * C261 + C10220 * C277 + C10224 * C702 + C10221 * C711 +
             C10225 * C1166 + C32919 * C1180) *
                C32542) *
               C32939 +
           ((C10223 * C248 + C10220 * C263 + C10224 * C1152 + C10221 * C1164 +
             C10225 * C1156 + C32919 * C1171) *
                C6200 +
            (C10223 * C264 + C10220 * C278 + C10224 * C1163 + C10221 * C1179 +
             C10225 * C1172 + C32919 * C1183) *
                C32542) *
               C32916) *
              C32603 * C32589 * C110 -
          (((C10225 * C1174 + C32919 * C1184 + C10224 * C1161 + C10221 * C1178 +
             C10223 * C266 + C10220 * C279) *
                C32542 +
            (C10225 * C1157 + C32919 * C1173 + C10224 * C1151 + C10221 * C1162 +
             C10223 * C249 + C10220 * C265) *
                C6200) *
               C32916 +
           ((C10681 + C10682 + C10683) * C32542 +
            (C10684 + C10685 + C10686) * C6200) *
               C32939 +
           ((C10268 + C10267 + C10266) * C32542 +
            (C10265 + C10264 + C10263) * C6200) *
               C32951) *
              C32603 * C32589 * C111 +
          ((C10283 * C6200 + C10284 * C32542) * C32951 +
           ((C10680 + C10679 + C10678) * C6200 +
            (C10677 + C10676 + C10675) * C32542) *
               C32939 +
           ((C10223 * C250 + C10220 * C267 + C10224 * C1150 + C10221 * C1160 +
             C10225 * C1158 + C32919 * C1175) *
                C6200 +
            (C10223 * C268 + C10220 * C280 + C10224 * C1159 + C10221 * C1177 +
             C10225 * C1176 + C32919 * C1185) *
                C32542) *
               C32916) *
              C32603 * C32589 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C10223 * C119 + C10220 * C126 + C10224 * C352 + C10221 * C367 +
             C10225 * C353 + C32919 * C368) *
                C6200 +
            (C10223 * C127 + C10220 * C140 + C10224 * C366 + C10221 * C382 +
             C10225 * C369 + C32919 * C383) *
                C32542) *
               C32951 +
           ((C11271 + C11272 + C11273) * C6200 +
            (C11274 + C11275 + C11276) * C32542) *
               C32939 +
           C11295 * C32916) *
              C32603 * C239 -
          (((C11283 + C11284 + C11285) * C32542 +
            (C11286 + C11287 + C11288) * C6200) *
               C32916 +
           ((C11282 + C11281 + C11280) * C32542 +
            (C11279 + C11278 + C11277) * C6200) *
               C32939 +
           ((C11276 + C11275 + C11274) * C32542 +
            (C11273 + C11272 + C11271) * C6200) *
               C32951) *
              C32603 * C240 +
          (C11295 * C32951 +
           ((C11288 + C11287 + C11286) * C6200 +
            (C11285 + C11284 + C11283) * C32542) *
               C32939 +
           ((C10223 * C966 + C10220 * C975 + C10224 * C6358 + C10221 * C6362 +
             C10225 * C6360 + C32919 * C6365) *
                C6200 +
            (C10223 * C976 + C10220 * C984 + C10224 * C6361 + C10221 * C6367 +
             C10225 * C6366 + C32919 * C6369) *
                C32542) *
               C32916) *
              C32603 * C241) *
         C32577) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C11964 * C119 + C11959 * C126 + C11965 * C352 + C11960 * C367 +
            C11966 * C353 + C11961 * C368 + C11967 * C2100 + C11962 * C2109 +
            C11968 * C2101 + C11963 * C2110) *
               C6200 +
           (C11964 * C127 + C11959 * C140 + C11965 * C366 + C11960 * C382 +
            C11966 * C369 + C11961 * C383 + C11967 * C2108 + C11962 * C2118 +
            C11968 * C2111 + C11963 * C2119) *
               C32542) *
              C32633 * C32603 * C32589 * C110 -
          ((C11968 * C2113 + C11963 * C2120 + C11967 * C2106 + C11962 * C2117 +
            C11966 * C371 + C11961 * C384 + C11965 * C364 + C11960 * C381 +
            C11964 * C129 + C11959 * C141) *
               C32542 +
           (C11968 * C2102 + C11963 * C2112 + C11967 * C2099 + C11962 * C2107 +
            C11966 * C354 + C11961 * C370 + C11965 * C351 + C11960 * C365 +
            C11964 * C120 + C11959 * C128) *
               C6200) *
              C32633 * C32603 * C32589 * C111 +
          ((C11964 * C121 + C11959 * C130 + C11965 * C350 + C11960 * C363 +
            C11966 * C355 + C11961 * C372 + C11967 * C2098 + C11962 * C2105 +
            C11968 * C2103 + C11963 * C2114) *
               C6200 +
           (C11964 * C131 + C11959 * C142 + C11965 * C362 + C11960 * C380 +
            C11966 * C373 + C11961 * C385 + C11967 * C2104 + C11962 * C2116 +
            C11968 * C2115 + C11963 * C2121) *
               C32542) *
              C32633 * C32603 * C32589 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C11964 * C119 + C11959 * C126 + C11965 * C352 + C11960 * C367 +
            C11966 * C353 + C11961 * C368 + C11967 * C2100 + C11962 * C2109 +
            C11968 * C2101 + C11963 * C2110) *
               C6200 +
           (C11964 * C127 + C11959 * C140 + C11965 * C366 + C11960 * C382 +
            C11966 * C369 + C11961 * C383 + C11967 * C2108 + C11962 * C2118 +
            C11968 * C2111 + C11963 * C2119) *
               C32542) *
              C32633 * C32603 * C239 -
          ((C11968 * C7059 + C11963 * C7063 + C11967 * C2644 + C11962 * C2649 +
            C11966 * C1166 + C11961 * C1180 + C11965 * C702 + C11960 * C711 +
            C11964 * C261 + C11959 * C277) *
               C32542 +
           (C11968 * C7054 + C11963 * C7058 + C11967 * C2640 + C11962 * C2643 +
            C11966 * C1153 + C11961 * C1165 + C11965 * C696 + C11960 * C701 +
            C11964 * C247 + C11959 * C262) *
               C6200) *
              C32633 * C32603 * C240 +
          ((C11964 * C248 + C11959 * C263 + C11965 * C1152 + C11960 * C1164 +
            C11966 * C1156 + C11961 * C1171 + C11967 * C7053 + C11962 * C7057 +
            C11968 * C7055 + C11963 * C7060) *
               C6200 +
           (C11964 * C264 + C11959 * C278 + C11965 * C1163 + C11960 * C1179 +
            C11966 * C1172 + C11961 * C1183 + C11967 * C7056 + C11962 * C7062 +
            C11968 * C7061 + C11963 * C7064) *
               C32542) *
              C32633 * C32603 * C241) *
         C32577) /
            (p * q * std::sqrt(p + q));
    d2ee[65] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C3484 * C119 + C32886 * C126 + C3485 * C352 + C32731 * C367) *
                 C31559 +
             (C3484 * C127 + C32886 * C140 + C3485 * C366 + C32731 * C382) *
                 C32866 +
             (C3519 + C3520) * C31540 + (C3521 + C3522) * C32552) *
                C5421 +
            ((C4523 + C4524) * C31559 + (C4525 + C4526) * C32866 +
             C4879 * C31540 + C4880 * C32552) *
                C5422 +
            C8640 * C32916) *
               C32603 * C470 -
           (((C8630 + C8631) * C32552 + (C8632 + C8633) * C31540 +
             (C8634 + C8635) * C32866 + (C8636 + C8637) * C31559) *
                C32916 +
            (C8981 * C32552 + C8982 * C31540 + (C4535 + C4536) * C32866 +
             (C4537 + C4538) * C31559) *
                C5422 +
            (C4883 * C32552 + C4884 * C31540 + (C4526 + C4525) * C32866 +
             (C4524 + C4523) * C31559) *
                C5421) *
               C32603 * C471) *
              C472 +
          (((C4879 * C31559 + C4880 * C32866 + C4343 * C31540 +
             C4344 * C32552) *
                C5421 +
            (C8608 * C31559 + C8609 * C32866 + (C4530 + C4529) * C31540 +
             (C4528 + C4527) * C32552) *
                C5422 +
            ((C8633 + C8632) * C31559 + (C8631 + C8630) * C32866 +
             (C3484 * C963 + C32886 * C970 + C3485 * C1670 + C32731 * C1675) *
                 C31540 +
             (C3484 * C969 + C32886 * C981 + C3485 * C1676 + C32731 * C1679) *
                 C32552) *
                C32916) *
               C32603 * C471 -
           (((C4527 + C4528) * C32552 + (C4529 + C4530) * C31540 +
             C8981 * C32866 + C8982 * C31559) *
                C32916 +
            (C4881 * C32552 + C4882 * C31540 + C4883 * C32866 +
             C4884 * C31559) *
                C5422 +
            ((C3526 + C3525) * C32552 + (C3524 + C3523) * C31540 +
             (C3522 + C3521) * C32866 + (C3520 + C3519) * C31559) *
                C5421) *
               C32603 * C470) *
              C473)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C3484 * C119 + C32886 * C126 + C3485 * C352 + C32731 * C367) *
                C2756 +
            (C3484 * C127 + C32886 * C140 + C3485 * C366 + C32731 * C382) *
                C2750 +
            (C3519 + C3520) * C2757 + (C3521 + C3522) * C2751 + C3535 * C2758 +
            C3536 * C2752 + C3537 * C2759 + C3538 * C32920) *
               C32633 * C32603 * C470 -
           ((C3889 + C3890) * C32920 + (C3891 + C3892) * C2759 +
            (C3893 + C3894) * C2752 + (C3895 + C3896) * C2758 +
            (C3897 + C3898) * C2751 + (C3899 + C3900) * C2757 +
            (C3485 * C702 + C32731 * C711 + C3484 * C261 + C32886 * C277) *
                C2750 +
            (C3485 * C696 + C32731 * C701 + C3484 * C247 + C32886 * C262) *
                C2756) *
               C32633 * C32603 * C471) *
              C472 +
          (((C3900 + C3899) * C2756 + (C3898 + C3897) * C2750 +
            (C3896 + C3895) * C2757 + (C3894 + C3893) * C2751 +
            (C3892 + C3891) * C2758 + (C3890 + C3889) * C2752 +
            (C3484 * C243 + C32886 * C254 + C3485 * C700 + C32731 * C709) *
                C2759 +
            (C3484 * C253 + C32886 * C273 + C3485 * C710 + C32731 * C715) *
                C32920) *
               C32633 * C32603 * C471 -
           ((C3531 + C3532) * C32920 + (C3533 + C3534) * C2759 +
            (C3530 + C3529) * C2752 + (C3528 + C3527) * C2758 +
            (C3526 + C3525) * C2751 + (C3524 + C3523) * C2757 +
            (C3522 + C3521) * C2750 + (C3520 + C3519) * C2756) *
               C32633 * C32603 * C470) *
              C473)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C13507 * C119 + C13503 * C126 + C13508 * C352 + C13504 * C367 +
             C13509 * C353 + C13505 * C368 + C13510 * C2100 + C32932 * C2109) *
                C31559 +
            (C13507 * C127 + C13503 * C140 + C13508 * C366 + C13504 * C382 +
             C13509 * C369 + C13505 * C383 + C13510 * C2108 + C32932 * C2118) *
                C32866 +
            (C13544 + C13545 + C13546 + C13547) * C31540 +
            (C13548 + C13549 + C13550 + C13551) * C32552) *
               C32633 * C32603 * C470 -
           ((C13902 + C13903 + C13904 + C13905) * C32552 +
            (C13906 + C13907 + C13908 + C13909) * C31540 +
            (C13510 * C2644 + C32932 * C2649 + C13509 * C1166 + C13505 * C1180 +
             C13508 * C702 + C13504 * C711 + C13507 * C261 + C13503 * C277) *
                C32866 +
            (C13510 * C2640 + C32932 * C2643 + C13509 * C1153 + C13505 * C1165 +
             C13508 * C696 + C13504 * C701 + C13507 * C247 + C13503 * C262) *
                C31559) *
               C32633 * C32603 * C471) *
              C472 +
          (((C13909 + C13908 + C13907 + C13906) * C31559 +
            (C13905 + C13904 + C13903 + C13902) * C32866 +
            (C13507 * C245 + C13503 * C258 + C13508 * C698 + C13504 * C705 +
             C13509 * C1155 + C13505 * C1169 + C13510 * C2642 +
             C32932 * C2647) *
                C31540 +
            (C13507 * C257 + C13503 * C275 + C13508 * C706 + C13504 * C713 +
             C13509 * C1170 + C13505 * C1182 + C13510 * C2648 +
             C32932 * C2651) *
                C32552) *
               C32633 * C32603 * C471 -
           ((C13552 + C13553 + C13554 + C13555) * C32552 +
            (C13556 + C13557 + C13558 + C13559) * C31540 +
            (C13551 + C13550 + C13549 + C13548) * C32866 +
            (C13547 + C13546 + C13545 + C13544) * C31559) *
               C32633 * C32603 * C470) *
              C473)) /
            (p * q * std::sqrt(p + q));
    d2ee[66] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C3484 * C119 + C32886 * C126 + C3485 * C352 + C32731 * C367) *
                 C31559 +
             (C3484 * C127 + C32886 * C140 + C3485 * C366 + C32731 * C382) *
                 C32866 +
             (C3519 + C3520) * C31540 + (C3521 + C3522) * C32552) *
                C5421 +
            ((C4523 + C4524) * C31559 + (C4525 + C4526) * C32866 +
             C4879 * C31540 + C4880 * C32552) *
                C5422 +
            C8640 * C32916) *
               C584 -
           (((C9185 + C9186) * C32552 + (C9187 + C9188) * C31540 +
             (C9391 + C9392) * C32866 + (C9393 + C9394) * C31559) *
                C32916 +
            ((C5099 + C5100) * C32552 + (C5101 + C5102) * C31540 +
             (C5305 + C5306) * C32866 + (C5307 + C5308) * C31559) *
                C5422 +
            ((C4063 + C4064) * C32552 + (C4065 + C4066) * C31540 +
             (C3485 * C369 + C32731 * C383 + C3484 * C366 + C32886 * C382) *
                 C32866 +
             (C3485 * C353 + C32731 * C368 + C3484 * C352 + C32886 * C367) *
                 C31559) *
                C5421) *
               C585) *
              C470 +
          ((((C5308 + C5307) * C31559 + (C5306 + C5305) * C32866 +
             (C5102 + C5101) * C31540 + (C5100 + C5099) * C32552) *
                C5421 +
            ((C9394 + C9393) * C31559 + (C9392 + C9391) * C32866 +
             (C9188 + C9187) * C31540 + (C9186 + C9185) * C32552) *
                C5422 +
            ((C3484 * C1668 + C32886 * C1671 + C3485 * C6359 + C32731 * C6363) *
                 C31559 +
             (C3484 * C1672 + C32886 * C1677 + C3485 * C6364 + C32731 * C6368) *
                 C32866 +
             (C3484 * C1669 + C32886 * C1673 + C3485 * C7211 + C32731 * C7212) *
                 C31540 +
             (C3484 * C1674 + C32886 * C1678 + C3485 * C7213 + C32731 * C7214) *
                 C32552) *
                C32916) *
               C585 -
           (((C8630 + C8631) * C32552 + (C8632 + C8633) * C31540 +
             (C8634 + C8635) * C32866 + (C8636 + C8637) * C31559) *
                C32916 +
            (C8981 * C32552 + C8982 * C31540 + (C4535 + C4536) * C32866 +
             (C4537 + C4538) * C31559) *
                C5422 +
            (C4883 * C32552 + C4884 * C31540 + (C4526 + C4525) * C32866 +
             (C4524 + C4523) * C31559) *
                C5421) *
               C584) *
              C471) *
         C32577) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C3484 * C119 + C32886 * C126 + C3485 * C352 + C32731 * C367) *
                C2756 +
            (C3484 * C127 + C32886 * C140 + C3485 * C366 + C32731 * C382) *
                C2750 +
            (C3519 + C3520) * C2757 + (C3521 + C3522) * C2751 + C3535 * C2758 +
            C3536 * C2752 + C3537 * C2759 + C3538 * C32920) *
               C32633 * C584 -
           ((C4055 + C4056) * C32920 + (C4057 + C4058) * C2759 +
            (C4059 + C4060) * C2752 + (C4061 + C4062) * C2758 +
            (C4063 + C4064) * C2751 + (C4065 + C4066) * C2757 +
            (C3485 * C369 + C32731 * C383 + C3484 * C366 + C32886 * C382) *
                C2750 +
            (C3485 * C353 + C32731 * C368 + C3484 * C352 + C32886 * C367) *
                C2756) *
               C32633 * C585) *
              C470 +
          (((C3484 * C696 + C32886 * C701 + C3485 * C1153 + C32731 * C1165) *
                C2756 +
            (C3484 * C702 + C32886 * C711 + C3485 * C1166 + C32731 * C1180) *
                C2750 +
            (C3484 * C697 + C32886 * C703 + C3485 * C1154 + C32731 * C1167) *
                C2757 +
            (C3484 * C704 + C32886 * C712 + C3485 * C1168 + C32731 * C1181) *
                C2751 +
            (C3484 * C698 + C32886 * C705 + C3485 * C1155 + C32731 * C1169) *
                C2758 +
            (C3484 * C706 + C32886 * C713 + C3485 * C1170 + C32731 * C1182) *
                C2752 +
            (C3484 * C699 + C32886 * C707 + C3485 * C2268 + C32731 * C2269) *
                C2759 +
            (C3484 * C708 + C32886 * C714 + C3485 * C2270 + C32731 * C2271) *
                C32920) *
               C32633 * C585 -
           ((C3889 + C3890) * C32920 + (C3891 + C3892) * C2759 +
            (C3893 + C3894) * C2752 + (C3895 + C3896) * C2758 +
            (C3897 + C3898) * C2751 + (C3899 + C3900) * C2757 +
            (C3485 * C702 + C32731 * C711 + C3484 * C261 + C32886 * C277) *
                C2750 +
            (C3485 * C696 + C32731 * C701 + C3484 * C247 + C32886 * C262) *
                C2756) *
               C32633 * C584) *
              C471) *
         C32577) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C13507 * C119 + C13503 * C126 + C13508 * C352 + C13504 * C367 +
             C13509 * C353 + C13505 * C368 + C13510 * C2100 + C32932 * C2109) *
                C31559 +
            (C13507 * C127 + C13503 * C140 + C13508 * C366 + C13504 * C382 +
             C13509 * C369 + C13505 * C383 + C13510 * C2108 + C32932 * C2118) *
                C32866 +
            (C13544 + C13545 + C13546 + C13547) * C31540 +
            (C13548 + C13549 + C13550 + C13551) * C32552) *
               C32633 * C584 -
           ((C14056 + C14057 + C14058 + C14059) * C32552 +
            (C14060 + C14061 + C14062 + C14063) * C31540 +
            (C13510 * C2111 + C32932 * C2119 + C13509 * C2108 + C13505 * C2118 +
             C13508 * C369 + C13504 * C383 + C13507 * C366 + C13503 * C382) *
                C32866 +
            (C13510 * C2101 + C32932 * C2110 + C13509 * C2100 + C13505 * C2109 +
             C13508 * C353 + C13504 * C368 + C13507 * C352 + C13503 * C367) *
                C31559) *
               C32633 * C585) *
              C470 +
          (((C13507 * C696 + C13503 * C701 + C13508 * C1153 + C13504 * C1165 +
             C13509 * C2640 + C13505 * C2643 + C13510 * C7054 +
             C32932 * C7058) *
                C31559 +
            (C13507 * C702 + C13503 * C711 + C13508 * C1166 + C13504 * C1180 +
             C13509 * C2644 + C13505 * C2649 + C13510 * C7059 +
             C32932 * C7063) *
                C32866 +
            (C13507 * C697 + C13503 * C703 + C13508 * C1154 + C13504 * C1167 +
             C13509 * C2641 + C13505 * C2645 + C13510 * C12183 +
             C32932 * C12184) *
                C31540 +
            (C13507 * C704 + C13503 * C712 + C13508 * C1168 + C13504 * C1181 +
             C13509 * C2646 + C13505 * C2650 + C13510 * C12185 +
             C32932 * C12186) *
                C32552) *
               C32633 * C585 -
           ((C13902 + C13903 + C13904 + C13905) * C32552 +
            (C13906 + C13907 + C13908 + C13909) * C31540 +
            (C13510 * C2644 + C32932 * C2649 + C13509 * C1166 + C13505 * C1180 +
             C13508 * C702 + C13504 * C711 + C13507 * C261 + C13503 * C277) *
                C32866 +
            (C13510 * C2640 + C32932 * C2643 + C13509 * C1153 + C13505 * C1165 +
             C13508 * C696 + C13504 * C701 + C13507 * C247 + C13503 * C262) *
                C31559) *
               C32633 * C584) *
              C471) *
         C32577) /
            (p * q * std::sqrt(p + q));
    d2ee[67] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((C3484 * C119 + C32886 * C126 + C3485 * C352 + C32731 * C367) *
                   C2756 +
               (C3484 * C127 + C32886 * C140 + C3485 * C366 + C32731 * C382) *
                   C2750 +
               (C3519 + C3520) * C2757 + (C3521 + C3522) * C2751 +
               C3535 * C2758 + C3536 * C2752 + C3537 * C2759 + C3538 * C32920) *
                  C32633 * C32603 * C32589 * C110 -
              ((C3531 + C3532) * C32920 + (C3533 + C3534) * C2759 +
               (C3530 + C3529) * C2752 + (C3528 + C3527) * C2758 +
               (C3526 + C3525) * C2751 + (C3524 + C3523) * C2757 +
               (C3522 + C3521) * C2750 + (C3520 + C3519) * C2756) *
                  C32633 * C32603 * C32589 * C111 +
              (C3535 * C2756 + C3536 * C2750 + C3537 * C2757 + C3538 * C2751 +
               (C3534 + C3533) * C2758 + (C3532 + C3531) * C2752 +
               (C3484 * C124 + C32886 * C137 + C3485 * C586 + C32731 * C587) *
                   C2759 +
               (C3484 * C136 + C32886 * C145 + C3485 * C588 + C32731 * C589) *
                   C32920) *
                  C32633 * C32603 * C32589 * C112) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((C3484 * C119 + C32886 * C126 + C3485 * C352 + C32731 * C367) *
                   C2756 +
               (C3484 * C127 + C32886 * C140 + C3485 * C366 + C32731 * C382) *
                   C2750 +
               (C3519 + C3520) * C2757 + (C3521 + C3522) * C2751 +
               C3535 * C2758 + C3536 * C2752 + C3537 * C2759 + C3538 * C32920) *
                  C32633 * C32603 * C239 -
              ((C3485 * C708 + C32731 * C714 + C3484 * C255 + C32886 * C274) *
                   C32920 +
               (C3485 * C699 + C32731 * C707 + C3484 * C244 + C32886 * C256) *
                   C2759 +
               (C3485 * C706 + C32731 * C713 + C3484 * C257 + C32886 * C275) *
                   C2752 +
               (C3485 * C698 + C32731 * C705 + C3484 * C245 + C32886 * C258) *
                   C2758 +
               (C3485 * C704 + C32731 * C712 + C3484 * C259 + C32886 * C276) *
                   C2751 +
               (C3485 * C697 + C32731 * C703 + C3484 * C246 + C32886 * C260) *
                   C2757 +
               (C3485 * C702 + C32731 * C711 + C3484 * C261 + C32886 * C277) *
                   C2750 +
               (C3485 * C696 + C32731 * C701 + C3484 * C247 + C32886 * C262) *
                   C2756) *
                  C32633 * C32603 * C240 +
              ((C3484 * C248 + C32886 * C263 + C3485 * C1152 + C32731 * C1164) *
                   C2756 +
               (C3484 * C264 + C32886 * C278 + C3485 * C1163 + C32731 * C1179) *
                   C2750 +
               (C3484 * C249 + C32886 * C265 + C3485 * C1151 + C32731 * C1162) *
                   C2757 +
               (C3484 * C266 + C32886 * C279 + C3485 * C1161 + C32731 * C1178) *
                   C2751 +
               (C3484 * C250 + C32886 * C267 + C3485 * C1150 + C32731 * C1160) *
                   C2758 +
               (C3484 * C268 + C32886 * C280 + C3485 * C1159 + C32731 * C1177) *
                   C2752 +
               (C3484 * C251 + C32886 * C269 + C3485 * C1494 + C32731 * C1495) *
                   C2759 +
               (C3484 * C270 + C32886 * C281 + C3485 * C1496 + C32731 * C1497) *
                   C32920) *
                  C32633 * C32603 * C241) *
             C32577) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C3484 * C119 + C32886 * C126 + C3485 * C352 + C32731 * C367) *
               C2756 +
           (C3484 * C127 + C32886 * C140 + C3485 * C366 + C32731 * C382) *
               C2750 +
           (C3519 + C3520) * C2757 + (C3521 + C3522) * C2751 + C3535 * C2758 +
           C3536 * C2752 + C3537 * C2759 + C3538 * C32920) *
              C32633 * C345 -
          ((C3485 * C375 + C32731 * C386 + C3484 * C360 + C32886 * C379) *
               C32920 +
           (C3485 * C356 + C32731 * C374 + C3484 * C349 + C32886 * C361) *
               C2759 +
           (C3485 * C373 + C32731 * C385 + C3484 * C362 + C32886 * C380) *
               C2752 +
           (C3485 * C355 + C32731 * C372 + C3484 * C350 + C32886 * C363) *
               C2758 +
           (C3485 * C371 + C32731 * C384 + C3484 * C364 + C32886 * C381) *
               C2751 +
           (C3485 * C354 + C32731 * C370 + C3484 * C351 + C32886 * C365) *
               C2757 +
           (C3485 * C369 + C32731 * C383 + C3484 * C366 + C32886 * C382) *
               C2750 +
           (C3485 * C353 + C32731 * C368 + C3484 * C352 + C32886 * C367) *
               C2756) *
              C32633 * C346 +
          ((C3484 * C353 + C32886 * C368 + C3485 * C2100 + C32731 * C2109) *
               C2756 +
           (C3484 * C369 + C32886 * C383 + C3485 * C2108 + C32731 * C2118) *
               C2750 +
           (C3484 * C354 + C32886 * C370 + C3485 * C2099 + C32731 * C2107) *
               C2757 +
           (C3484 * C371 + C32886 * C384 + C3485 * C2106 + C32731 * C2117) *
               C2751 +
           (C3484 * C355 + C32886 * C372 + C3485 * C2098 + C32731 * C2105) *
               C2758 +
           (C3484 * C373 + C32886 * C385 + C3485 * C2104 + C32731 * C2116) *
               C2752 +
           (C3484 * C356 + C32886 * C374 + C3485 * C2454 + C32731 * C2455) *
               C2759 +
           (C3484 * C375 + C32886 * C386 + C3485 * C2456 + C32731 * C2457) *
               C32920) *
              C32633 * C347) *
         C32589 * C32577) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C3484 * C119 + C32886 * C126 + C3485 * C352 + C32731 * C367) *
                C31559 +
            (C3484 * C127 + C32886 * C140 + C3485 * C366 + C32731 * C382) *
                C32866 +
            (C3519 + C3520) * C31540 + (C3521 + C3522) * C32552) *
               C5421 +
           ((C4523 + C4524) * C31559 + (C4525 + C4526) * C32866 +
            C4879 * C31540 + C4880 * C32552) *
               C5422 +
           ((C4538 + C4537) * C31559 + (C4536 + C4535) * C32866 +
            (C4534 + C4533) * C31540 + (C4532 + C4531) * C32552) *
               C32916) *
              C32603 * C32589 * C110 -
          (((C4527 + C4528) * C32552 + (C4529 + C4530) * C31540 +
            (C4531 + C4532) * C32866 + (C4533 + C4534) * C31559) *
               C32916 +
           (C4881 * C32552 + C4882 * C31540 + C4883 * C32866 + C4884 * C31559) *
               C5422 +
           ((C3526 + C3525) * C32552 + (C3524 + C3523) * C31540 +
            (C3522 + C3521) * C32866 + (C3520 + C3519) * C31559) *
               C5421) *
              C32603 * C32589 * C111 +
          ((C3535 * C31559 + C3536 * C32866 + C3537 * C31540 + C3538 * C32552) *
               C5421 +
           (C4343 * C31559 + C4344 * C32866 + (C3892 + C3891) * C31540 +
            (C3890 + C3889) * C32552) *
               C5422 +
           ((C4530 + C4529) * C31559 + (C4528 + C4527) * C32866 +
            (C3484 * C251 + C32886 * C269 + C3485 * C1494 + C32731 * C1495) *
                C31540 +
            (C3484 * C270 + C32886 * C281 + C3485 * C1496 + C32731 * C1497) *
                C32552) *
               C32916) *
              C32603 * C32589 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C3484 * C119 + C32886 * C126 + C3485 * C352 + C32731 * C367) *
                C31559 +
            (C3484 * C127 + C32886 * C140 + C3485 * C366 + C32731 * C382) *
                C32866 +
            (C3519 + C3520) * C31540 + (C3521 + C3522) * C32552) *
               C5421 +
           ((C4523 + C4524) * C31559 + (C4525 + C4526) * C32866 +
            C4879 * C31540 + C4880 * C32552) *
               C5422 +
           C8640 * C32916) *
              C32603 * C239 -
          (((C8630 + C8631) * C32552 + (C8632 + C8633) * C31540 +
            (C8634 + C8635) * C32866 + (C8636 + C8637) * C31559) *
               C32916 +
           ((C4531 + C4532) * C32552 + (C4533 + C4534) * C31540 +
            (C4535 + C4536) * C32866 + (C4537 + C4538) * C31559) *
               C5422 +
           (C4883 * C32552 + C4884 * C31540 + (C4526 + C4525) * C32866 +
            (C4524 + C4523) * C31559) *
               C5421) *
              C32603 * C240 +
          (C8640 * C5421 +
           ((C8637 + C8636) * C31559 + (C8635 + C8634) * C32866 +
            (C8633 + C8632) * C31540 + (C8631 + C8630) * C32552) *
               C5422 +
           ((C3484 * C966 + C32886 * C975 + C3485 * C6358 + C32731 * C6362) *
                C31559 +
            (C3484 * C976 + C32886 * C984 + C3485 * C6361 + C32731 * C6367) *
                C32866 +
            (C3484 * C967 + C32886 * C977 + C3485 * C6552 + C32731 * C6553) *
                C31540 +
            (C3484 * C978 + C32886 * C985 + C3485 * C6554 + C32731 * C6555) *
                C32552) *
               C32916) *
              C32603 * C241) *
         C32577) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C3484 * C119 + C32886 * C126 + C3485 * C352 + C32731 * C367) *
                C31559 +
            (C3484 * C127 + C32886 * C140 + C3485 * C366 + C32731 * C382) *
                C32866 +
            (C3519 + C3520) * C31540 + (C3521 + C3522) * C32552) *
               C5421 +
           ((C4523 + C4524) * C31559 + (C4525 + C4526) * C32866 +
            C4879 * C31540 + C4880 * C32552) *
               C5422 +
           C8640 * C32916) *
              C345 -
          (((C3485 * C1174 + C32731 * C1184 + C3484 * C1161 + C32886 * C1178) *
                C32552 +
            (C3485 * C1157 + C32731 * C1173 + C3484 * C1151 + C32886 * C1162) *
                C31540 +
            (C3485 * C1172 + C32731 * C1183 + C3484 * C1163 + C32886 * C1179) *
                C32866 +
            (C3485 * C1156 + C32731 * C1171 + C3484 * C1152 + C32886 * C1164) *
                C31559) *
               C32916 +
           ((C5099 + C5100) * C32552 + (C5101 + C5102) * C31540 +
            (C5305 + C5306) * C32866 + (C5307 + C5308) * C31559) *
               C5422 +
           ((C4063 + C4064) * C32552 + (C4065 + C4066) * C31540 +
            (C3485 * C369 + C32731 * C383 + C3484 * C366 + C32886 * C382) *
                C32866 +
            (C3485 * C353 + C32731 * C368 + C3484 * C352 + C32886 * C367) *
                C31559) *
               C5421) *
              C346 +
          (((C3484 * C353 + C32886 * C368 + C3485 * C2100 + C32731 * C2109) *
                C31559 +
            (C3484 * C369 + C32886 * C383 + C3485 * C2108 + C32731 * C2118) *
                C32866 +
            (C3484 * C354 + C32886 * C370 + C3485 * C2099 + C32731 * C2107) *
                C31540 +
            (C3484 * C371 + C32886 * C384 + C3485 * C2106 + C32731 * C2117) *
                C32552) *
               C5421 +
           ((C3484 * C1153 + C32886 * C1165 + C3485 * C2640 + C32731 * C2643) *
                C31559 +
            (C3484 * C1166 + C32886 * C1180 + C3485 * C2644 + C32731 * C2649) *
                C32866 +
            (C3484 * C1154 + C32886 * C1167 + C3485 * C2641 + C32731 * C2645) *
                C31540 +
            (C3484 * C1168 + C32886 * C1181 + C3485 * C2646 + C32731 * C2650) *
                C32552) *
               C5422 +
           ((C3484 * C1156 + C32886 * C1171 + C3485 * C7053 + C32731 * C7057) *
                C31559 +
            (C3484 * C1172 + C32886 * C1183 + C3485 * C7056 + C32731 * C7062) *
                C32866 +
            (C3484 * C1157 + C32886 * C1173 + C3485 * C7379 + C32731 * C7380) *
                C31540 +
            (C3484 * C1174 + C32886 * C1184 + C3485 * C7381 + C32731 * C7382) *
                C32552) *
               C32916) *
              C347) *
         C32589 * C32577) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C13507 * C119 + C13503 * C126 + C13508 * C352 + C13504 * C367 +
            C13509 * C353 + C13505 * C368 + C13510 * C2100 + C32932 * C2109) *
               C31559 +
           (C13507 * C127 + C13503 * C140 + C13508 * C366 + C13504 * C382 +
            C13509 * C369 + C13505 * C383 + C13510 * C2108 + C32932 * C2118) *
               C32866 +
           (C13544 + C13545 + C13546 + C13547) * C31540 +
           (C13548 + C13549 + C13550 + C13551) * C32552) *
              C32633 * C32603 * C32589 * C110 -
          ((C13552 + C13553 + C13554 + C13555) * C32552 +
           (C13556 + C13557 + C13558 + C13559) * C31540 +
           (C13551 + C13550 + C13549 + C13548) * C32866 +
           (C13547 + C13546 + C13545 + C13544) * C31559) *
              C32633 * C32603 * C32589 * C111 +
          ((C13559 + C13558 + C13557 + C13556) * C31559 +
           (C13555 + C13554 + C13553 + C13552) * C32866 +
           (C13507 * C122 + C13503 * C132 + C13508 * C349 + C13504 * C361 +
            C13509 * C356 + C13505 * C374 + C13510 * C2454 + C32932 * C2455) *
               C31540 +
           (C13507 * C133 + C13503 * C143 + C13508 * C360 + C13504 * C379 +
            C13509 * C375 + C13505 * C386 + C13510 * C2456 + C32932 * C2457) *
               C32552) *
              C32633 * C32603 * C32589 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C13507 * C119 + C13503 * C126 + C13508 * C352 + C13504 * C367 +
            C13509 * C353 + C13505 * C368 + C13510 * C2100 + C32932 * C2109) *
               C31559 +
           (C13507 * C127 + C13503 * C140 + C13508 * C366 + C13504 * C382 +
            C13509 * C369 + C13505 * C383 + C13510 * C2108 + C32932 * C2118) *
               C32866 +
           (C13544 + C13545 + C13546 + C13547) * C31540 +
           (C13548 + C13549 + C13550 + C13551) * C32552) *
              C32633 * C32603 * C239 -
          ((C13510 * C2646 + C32932 * C2650 + C13509 * C1168 + C13505 * C1181 +
            C13508 * C704 + C13504 * C712 + C13507 * C259 + C13503 * C276) *
               C32552 +
           (C13510 * C2641 + C32932 * C2645 + C13509 * C1154 + C13505 * C1167 +
            C13508 * C697 + C13504 * C703 + C13507 * C246 + C13503 * C260) *
               C31540 +
           (C13510 * C2644 + C32932 * C2649 + C13509 * C1166 + C13505 * C1180 +
            C13508 * C702 + C13504 * C711 + C13507 * C261 + C13503 * C277) *
               C32866 +
           (C13510 * C2640 + C32932 * C2643 + C13509 * C1153 + C13505 * C1165 +
            C13508 * C696 + C13504 * C701 + C13507 * C247 + C13503 * C262) *
               C31559) *
              C32633 * C32603 * C240 +
          ((C13507 * C248 + C13503 * C263 + C13508 * C1152 + C13504 * C1164 +
            C13509 * C1156 + C13505 * C1171 + C13510 * C7053 + C32932 * C7057) *
               C31559 +
           (C13507 * C264 + C13503 * C278 + C13508 * C1163 + C13504 * C1179 +
            C13509 * C1172 + C13505 * C1183 + C13510 * C7056 + C32932 * C7062) *
               C32866 +
           (C13507 * C249 + C13503 * C265 + C13508 * C1151 + C13504 * C1162 +
            C13509 * C1157 + C13505 * C1173 + C13510 * C7379 + C32932 * C7380) *
               C31540 +
           (C13507 * C266 + C13503 * C279 + C13508 * C1161 + C13504 * C1178 +
            C13509 * C1174 + C13505 * C1184 + C13510 * C7381 + C32932 * C7382) *
               C32552) *
              C32633 * C32603 * C241) *
         C32577) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C13507 * C119 + C13503 * C126 + C13508 * C352 + C13504 * C367 +
            C13509 * C353 + C13505 * C368 + C13510 * C2100 + C32932 * C2109) *
               C31559 +
           (C13507 * C127 + C13503 * C140 + C13508 * C366 + C13504 * C382 +
            C13509 * C369 + C13505 * C383 + C13510 * C2108 + C32932 * C2118) *
               C32866 +
           (C13544 + C13545 + C13546 + C13547) * C31540 +
           (C13548 + C13549 + C13550 + C13551) * C32552) *
              C32633 * C345 -
          ((C13510 * C2113 + C32932 * C2120 + C13509 * C2106 + C13505 * C2117 +
            C13508 * C371 + C13504 * C384 + C13507 * C364 + C13503 * C381) *
               C32552 +
           (C13510 * C2102 + C32932 * C2112 + C13509 * C2099 + C13505 * C2107 +
            C13508 * C354 + C13504 * C370 + C13507 * C351 + C13503 * C365) *
               C31540 +
           (C13510 * C2111 + C32932 * C2119 + C13509 * C2108 + C13505 * C2118 +
            C13508 * C369 + C13504 * C383 + C13507 * C366 + C13503 * C382) *
               C32866 +
           (C13510 * C2101 + C32932 * C2110 + C13509 * C2100 + C13505 * C2109 +
            C13508 * C353 + C13504 * C368 + C13507 * C352 + C13503 * C367) *
               C31559) *
              C32633 * C346 +
          ((C13507 * C353 + C13503 * C368 + C13508 * C2100 + C13504 * C2109 +
            C13509 * C2101 + C13505 * C2110 + C13510 * C12093 +
            C32932 * C12096) *
               C31559 +
           (C13507 * C369 + C13503 * C383 + C13508 * C2108 + C13504 * C2118 +
            C13509 * C2111 + C13505 * C2119 + C13510 * C12095 +
            C32932 * C12099) *
               C32866 +
           (C13507 * C354 + C13503 * C370 + C13508 * C2099 + C13504 * C2107 +
            C13509 * C2102 + C13505 * C2112 + C13510 * C12269 +
            C32932 * C12270) *
               C31540 +
           (C13507 * C371 + C13503 * C384 + C13508 * C2106 + C13504 * C2117 +
            C13509 * C2113 + C13505 * C2120 + C13510 * C12271 +
            C32932 * C12272) *
               C32552) *
              C32633 * C347) *
         C32589 * C32577) /
            (p * q * std::sqrt(p + q));
    d2ee[68] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C3484 * C119 + C32886 * C126 + C3485 * C352 + C32731 * C367) *
                 C31559 +
             (C3484 * C127 + C32886 * C140 + C3485 * C366 + C32731 * C382) *
                 C32866 +
             (C3519 + C3520) * C31540 + (C3521 + C3522) * C32552) *
                C5421 +
            ((C4523 + C4524) * C31559 + (C4525 + C4526) * C32866 +
             C4879 * C31540 + C4880 * C32552) *
                C5422 +
            C8640 * C32916) *
               C584 -
           (((C9185 + C9186) * C32552 + (C9187 + C9188) * C31540 +
             (C3485 * C1172 + C32731 * C1183 + C3484 * C1163 + C32886 * C1179) *
                 C32866 +
             (C3485 * C1156 + C32731 * C1171 + C3484 * C1152 + C32886 * C1164) *
                 C31559) *
                C32916 +
            ((C5099 + C5100) * C32552 + (C5101 + C5102) * C31540 +
             (C5305 + C5306) * C32866 + (C5307 + C5308) * C31559) *
                C5422 +
            ((C4063 + C4064) * C32552 + (C4065 + C4066) * C31540 +
             (C3485 * C369 + C32731 * C383 + C3484 * C366 + C32886 * C382) *
                 C32866 +
             (C3485 * C353 + C32731 * C368 + C3484 * C352 + C32886 * C367) *
                 C31559) *
                C5421) *
               C585) *
              C32589 * C472 +
          ((((C4066 + C4065) * C31559 + (C4064 + C4063) * C32866 +
             (C4062 + C4061) * C31540 + (C4060 + C4059) * C32552) *
                C5421 +
            ((C5102 + C5101) * C31559 + (C5100 + C5099) * C32866 +
             (C5098 + C5097) * C31540 + (C5096 + C5095) * C32552) *
                C5422 +
            ((C9188 + C9187) * C31559 + (C9186 + C9185) * C32866 +
             (C3484 * C1150 + C32886 * C1160 + C3485 * C1158 + C32731 * C1175) *
                 C31540 +
             (C3484 * C1159 + C32886 * C1177 + C3485 * C1176 + C32731 * C1185) *
                 C32552) *
                C32916) *
               C585 -
           (((C4527 + C4528) * C32552 + (C4529 + C4530) * C31540 +
             C8981 * C32866 + C8982 * C31559) *
                C32916 +
            (C4881 * C32552 + C4882 * C31540 + C4883 * C32866 +
             C4884 * C31559) *
                C5422 +
            ((C3526 + C3525) * C32552 + (C3524 + C3523) * C31540 +
             (C3522 + C3521) * C32866 + (C3520 + C3519) * C31559) *
                C5421) *
               C584) *
              C32589 * C473)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C3484 * C119 + C32886 * C126 + C3485 * C352 + C32731 * C367) *
                C2756 +
            (C3484 * C127 + C32886 * C140 + C3485 * C366 + C32731 * C382) *
                C2750 +
            (C3519 + C3520) * C2757 + (C3521 + C3522) * C2751 + C3535 * C2758 +
            C3536 * C2752 + C3537 * C2759 + C3538 * C32920) *
               C32633 * C584 -
           ((C4055 + C4056) * C32920 + (C4057 + C4058) * C2759 +
            (C4059 + C4060) * C2752 + (C4061 + C4062) * C2758 +
            (C4063 + C4064) * C2751 + (C4065 + C4066) * C2757 +
            (C3485 * C369 + C32731 * C383 + C3484 * C366 + C32886 * C382) *
                C2750 +
            (C3485 * C353 + C32731 * C368 + C3484 * C352 + C32886 * C367) *
                C2756) *
               C32633 * C585) *
              C32589 * C472 +
          (((C4066 + C4065) * C2756 + (C4064 + C4063) * C2750 +
            (C4062 + C4061) * C2757 + (C4060 + C4059) * C2751 +
            (C4058 + C4057) * C2758 + (C4056 + C4055) * C2752 +
            (C3484 * C348 + C32886 * C359 + C3485 * C357 + C32731 * C376) *
                C2759 +
            (C3484 * C358 + C32886 * C378 + C3485 * C377 + C32731 * C387) *
                C32920) *
               C32633 * C585 -
           ((C3531 + C3532) * C32920 + (C3533 + C3534) * C2759 +
            (C3530 + C3529) * C2752 + (C3528 + C3527) * C2758 +
            (C3526 + C3525) * C2751 + (C3524 + C3523) * C2757 +
            (C3522 + C3521) * C2750 + (C3520 + C3519) * C2756) *
               C32633 * C584) *
              C32589 * C473)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C13507 * C119 + C13503 * C126 + C13508 * C352 + C13504 * C367 +
             C13509 * C353 + C13505 * C368 + C13510 * C2100 + C32932 * C2109) *
                C31559 +
            (C13507 * C127 + C13503 * C140 + C13508 * C366 + C13504 * C382 +
             C13509 * C369 + C13505 * C383 + C13510 * C2108 + C32932 * C2118) *
                C32866 +
            (C13544 + C13545 + C13546 + C13547) * C31540 +
            (C13548 + C13549 + C13550 + C13551) * C32552) *
               C32633 * C584 -
           ((C14056 + C14057 + C14058 + C14059) * C32552 +
            (C14060 + C14061 + C14062 + C14063) * C31540 +
            (C13510 * C2111 + C32932 * C2119 + C13509 * C2108 + C13505 * C2118 +
             C13508 * C369 + C13504 * C383 + C13507 * C366 + C13503 * C382) *
                C32866 +
            (C13510 * C2101 + C32932 * C2110 + C13509 * C2100 + C13505 * C2109 +
             C13508 * C353 + C13504 * C368 + C13507 * C352 + C13503 * C367) *
                C31559) *
               C32633 * C585) *
              C32589 * C472 +
          (((C14063 + C14062 + C14061 + C14060) * C31559 +
            (C14059 + C14058 + C14057 + C14056) * C32866 +
            (C13507 * C350 + C13503 * C363 + C13508 * C355 + C13504 * C372 +
             C13509 * C2098 + C13505 * C2105 + C13510 * C2103 +
             C32932 * C2114) *
                C31540 +
            (C13507 * C362 + C13503 * C380 + C13508 * C373 + C13504 * C385 +
             C13509 * C2104 + C13505 * C2116 + C13510 * C2115 +
             C32932 * C2121) *
                C32552) *
               C32633 * C585 -
           ((C13552 + C13553 + C13554 + C13555) * C32552 +
            (C13556 + C13557 + C13558 + C13559) * C31540 +
            (C13551 + C13550 + C13549 + C13548) * C32866 +
            (C13547 + C13546 + C13545 + C13544) * C31559) *
               C32633 * C584) *
              C32589 * C473)) /
            (p * q * std::sqrt(p + q));
    d2ee[69] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C3484 * C119 + C32886 * C126 + C3485 * C352 + C32731 * C367) *
               C2756 +
           (C3484 * C127 + C32886 * C140 + C3485 * C366 + C32731 * C382) *
               C2750 +
           (C3519 + C3520) * C2757 + (C3521 + C3522) * C2751 + C3535 * C2758 +
           C3536 * C2752 + C3537 * C2759 + C3538 * C32920) *
              C32633 * C32603 * C239 -
          ((C3485 * C708 + C32731 * C714 + C3484 * C255 + C32886 * C274) *
               C32920 +
           (C3485 * C699 + C32731 * C707 + C3484 * C244 + C32886 * C256) *
               C2759 +
           (C3485 * C706 + C32731 * C713 + C3484 * C257 + C32886 * C275) *
               C2752 +
           (C3485 * C698 + C32731 * C705 + C3484 * C245 + C32886 * C258) *
               C2758 +
           (C3485 * C704 + C32731 * C712 + C3484 * C259 + C32886 * C276) *
               C2751 +
           (C3485 * C697 + C32731 * C703 + C3484 * C246 + C32886 * C260) *
               C2757 +
           (C3485 * C702 + C32731 * C711 + C3484 * C261 + C32886 * C277) *
               C2750 +
           (C3485 * C696 + C32731 * C701 + C3484 * C247 + C32886 * C262) *
               C2756) *
              C32633 * C32603 * C240 +
          ((C3484 * C248 + C32886 * C263 + C3485 * C1152 + C32731 * C1164) *
               C2756 +
           (C3484 * C264 + C32886 * C278 + C3485 * C1163 + C32731 * C1179) *
               C2750 +
           (C3484 * C249 + C32886 * C265 + C3485 * C1151 + C32731 * C1162) *
               C2757 +
           (C3484 * C266 + C32886 * C279 + C3485 * C1161 + C32731 * C1178) *
               C2751 +
           (C3484 * C250 + C32886 * C267 + C3485 * C1150 + C32731 * C1160) *
               C2758 +
           (C3484 * C268 + C32886 * C280 + C3485 * C1159 + C32731 * C1177) *
               C2752 +
           (C3484 * C251 + C32886 * C269 + C3485 * C1494 + C32731 * C1495) *
               C2759 +
           (C3484 * C270 + C32886 * C281 + C3485 * C1496 + C32731 * C1497) *
               C32920) *
              C32633 * C32603 * C241) *
         C32577) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C3484 * C119 + C32886 * C126 + C3485 * C352 + C32731 * C367) *
               C2756 +
           (C3484 * C127 + C32886 * C140 + C3485 * C366 + C32731 * C382) *
               C2750 +
           (C3519 + C3520) * C2757 + (C3521 + C3522) * C2751 + C3535 * C2758 +
           C3536 * C2752 + C3537 * C2759 + C3538 * C32920) *
              C32633 * C32603 * C32589 * C110 -
          ((C3531 + C3532) * C32920 + (C3533 + C3534) * C2759 +
           (C3530 + C3529) * C2752 + (C3528 + C3527) * C2758 +
           (C3526 + C3525) * C2751 + (C3524 + C3523) * C2757 +
           (C3522 + C3521) * C2750 + (C3520 + C3519) * C2756) *
              C32633 * C32603 * C32589 * C111 +
          (C3535 * C2756 + C3536 * C2750 + C3537 * C2757 + C3538 * C2751 +
           (C3534 + C3533) * C2758 + (C3532 + C3531) * C2752 +
           (C3484 * C124 + C32886 * C137 + C3485 * C586 + C32731 * C587) *
               C2759 +
           (C3484 * C136 + C32886 * C145 + C3485 * C588 + C32731 * C589) *
               C32920) *
              C32633 * C32603 * C32589 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C3484 * C119 + C32886 * C126 + C3485 * C352 + C32731 * C367) *
                C31559 +
            (C3484 * C127 + C32886 * C140 + C3485 * C366 + C32731 * C382) *
                C32866 +
            (C3519 + C3520) * C31540 + (C3521 + C3522) * C32552) *
               C5421 +
           ((C4523 + C4524) * C31559 + (C4525 + C4526) * C32866 +
            C4879 * C31540 + C4880 * C32552) *
               C5422 +
           ((C4538 + C4537) * C31559 + (C4536 + C4535) * C32866 +
            (C4534 + C4533) * C31540 + (C4532 + C4531) * C32552) *
               C32916) *
              C32603 * C32589 * C110 -
          (((C4527 + C4528) * C32552 + (C4529 + C4530) * C31540 +
            (C4531 + C4532) * C32866 + (C4533 + C4534) * C31559) *
               C32916 +
           (C4881 * C32552 + C4882 * C31540 + C4883 * C32866 + C4884 * C31559) *
               C5422 +
           ((C3526 + C3525) * C32552 + (C3524 + C3523) * C31540 +
            (C3522 + C3521) * C32866 + (C3520 + C3519) * C31559) *
               C5421) *
              C32603 * C32589 * C111 +
          ((C3535 * C31559 + C3536 * C32866 + C3537 * C31540 + C3538 * C32552) *
               C5421 +
           (C4343 * C31559 + C4344 * C32866 + (C3892 + C3891) * C31540 +
            (C3890 + C3889) * C32552) *
               C5422 +
           ((C4530 + C4529) * C31559 + (C4528 + C4527) * C32866 +
            (C3484 * C251 + C32886 * C269 + C3485 * C1494 + C32731 * C1495) *
                C31540 +
            (C3484 * C270 + C32886 * C281 + C3485 * C1496 + C32731 * C1497) *
                C32552) *
               C32916) *
              C32603 * C32589 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C3484 * C119 + C32886 * C126 + C3485 * C352 + C32731 * C367) *
                C31559 +
            (C3484 * C127 + C32886 * C140 + C3485 * C366 + C32731 * C382) *
                C32866 +
            (C3519 + C3520) * C31540 + (C3521 + C3522) * C32552) *
               C5421 +
           ((C4523 + C4524) * C31559 + (C4525 + C4526) * C32866 +
            C4879 * C31540 + C4880 * C32552) *
               C5422 +
           C8640 * C32916) *
              C32603 * C239 -
          (((C8630 + C8631) * C32552 + (C8632 + C8633) * C31540 +
            (C8634 + C8635) * C32866 + (C8636 + C8637) * C31559) *
               C32916 +
           ((C4531 + C4532) * C32552 + (C4533 + C4534) * C31540 +
            (C4535 + C4536) * C32866 + (C4537 + C4538) * C31559) *
               C5422 +
           (C4883 * C32552 + C4884 * C31540 + (C4526 + C4525) * C32866 +
            (C4524 + C4523) * C31559) *
               C5421) *
              C32603 * C240 +
          (C8640 * C5421 +
           ((C8637 + C8636) * C31559 + (C8635 + C8634) * C32866 +
            (C8633 + C8632) * C31540 + (C8631 + C8630) * C32552) *
               C5422 +
           ((C3484 * C966 + C32886 * C975 + C3485 * C6358 + C32731 * C6362) *
                C31559 +
            (C3484 * C976 + C32886 * C984 + C3485 * C6361 + C32731 * C6367) *
                C32866 +
            (C3484 * C967 + C32886 * C977 + C3485 * C6552 + C32731 * C6553) *
                C31540 +
            (C3484 * C978 + C32886 * C985 + C3485 * C6554 + C32731 * C6555) *
                C32552) *
               C32916) *
              C32603 * C241) *
         C32577) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C13507 * C119 + C13503 * C126 + C13508 * C352 + C13504 * C367 +
            C13509 * C353 + C13505 * C368 + C13510 * C2100 + C32932 * C2109) *
               C31559 +
           (C13507 * C127 + C13503 * C140 + C13508 * C366 + C13504 * C382 +
            C13509 * C369 + C13505 * C383 + C13510 * C2108 + C32932 * C2118) *
               C32866 +
           (C13544 + C13545 + C13546 + C13547) * C31540 +
           (C13548 + C13549 + C13550 + C13551) * C32552) *
              C32633 * C32603 * C32589 * C110 -
          ((C13552 + C13553 + C13554 + C13555) * C32552 +
           (C13556 + C13557 + C13558 + C13559) * C31540 +
           (C13551 + C13550 + C13549 + C13548) * C32866 +
           (C13547 + C13546 + C13545 + C13544) * C31559) *
              C32633 * C32603 * C32589 * C111 +
          ((C13559 + C13558 + C13557 + C13556) * C31559 +
           (C13555 + C13554 + C13553 + C13552) * C32866 +
           (C13507 * C122 + C13503 * C132 + C13508 * C349 + C13504 * C361 +
            C13509 * C356 + C13505 * C374 + C13510 * C2454 + C32932 * C2455) *
               C31540 +
           (C13507 * C133 + C13503 * C143 + C13508 * C360 + C13504 * C379 +
            C13509 * C375 + C13505 * C386 + C13510 * C2456 + C32932 * C2457) *
               C32552) *
              C32633 * C32603 * C32589 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C13507 * C119 + C13503 * C126 + C13508 * C352 + C13504 * C367 +
            C13509 * C353 + C13505 * C368 + C13510 * C2100 + C32932 * C2109) *
               C31559 +
           (C13507 * C127 + C13503 * C140 + C13508 * C366 + C13504 * C382 +
            C13509 * C369 + C13505 * C383 + C13510 * C2108 + C32932 * C2118) *
               C32866 +
           (C13544 + C13545 + C13546 + C13547) * C31540 +
           (C13548 + C13549 + C13550 + C13551) * C32552) *
              C32633 * C32603 * C239 -
          ((C13510 * C2646 + C32932 * C2650 + C13509 * C1168 + C13505 * C1181 +
            C13508 * C704 + C13504 * C712 + C13507 * C259 + C13503 * C276) *
               C32552 +
           (C13510 * C2641 + C32932 * C2645 + C13509 * C1154 + C13505 * C1167 +
            C13508 * C697 + C13504 * C703 + C13507 * C246 + C13503 * C260) *
               C31540 +
           (C13510 * C2644 + C32932 * C2649 + C13509 * C1166 + C13505 * C1180 +
            C13508 * C702 + C13504 * C711 + C13507 * C261 + C13503 * C277) *
               C32866 +
           (C13510 * C2640 + C32932 * C2643 + C13509 * C1153 + C13505 * C1165 +
            C13508 * C696 + C13504 * C701 + C13507 * C247 + C13503 * C262) *
               C31559) *
              C32633 * C32603 * C240 +
          ((C13507 * C248 + C13503 * C263 + C13508 * C1152 + C13504 * C1164 +
            C13509 * C1156 + C13505 * C1171 + C13510 * C7053 + C32932 * C7057) *
               C31559 +
           (C13507 * C264 + C13503 * C278 + C13508 * C1163 + C13504 * C1179 +
            C13509 * C1172 + C13505 * C1183 + C13510 * C7056 + C32932 * C7062) *
               C32866 +
           (C13507 * C249 + C13503 * C265 + C13508 * C1151 + C13504 * C1162 +
            C13509 * C1157 + C13505 * C1173 + C13510 * C7379 + C32932 * C7380) *
               C31540 +
           (C13507 * C266 + C13503 * C279 + C13508 * C1161 + C13504 * C1178 +
            C13509 * C1174 + C13505 * C1184 + C13510 * C7381 + C32932 * C7382) *
               C32552) *
              C32633 * C32603 * C241) *
         C32577) /
            (p * q * std::sqrt(p + q));
    d2ee[70] += (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                 (((((C113 * C119 + C32644 * C126) * C832 +
                     (C113 * C127 + C32644 * C140) * C826 + C168 * C833 +
                     C169 * C827 + C170 * C834 + C171 * C32905) *
                        C32951 +
                    (C1026 + C1027 + C992 + C993 + C994 + C995) * C32939 +
                    C1040 * C32916) *
                       C32603 * C470 -
                   ((C1030 + C1031 + C1032 + C1033 + C1034 + C1035) * C32916 +
                    (C1003 + C1002 + C1001 + C1000 + C1029 + C1028) * C32939 +
                    (C995 + C994 + C993 + C992 + C1027 + C1026) * C32951) *
                       C32603 * C471) *
                      C472 +
                  (((C1337 + C1338 + C1339 + C1340 + C1341 + C1342) * C32951 +
                    (C1343 + C1344 + C1345 + C1346 + C1347 + C1348) * C32939 +
                    (C1023 * C832 + C1022 * C826 + C1021 * C833 + C1020 * C827 +
                     (C113 * C1332 + C32644 * C1333) * C834 +
                     (C113 * C1334 + C32644 * C1335) * C32905) *
                        C32916) *
                       C32603 * C471 -
                   ((C1348 + C1347 + C1346 + C1345 + C1344 + C1343) * C32916 +
                    (C1342 + C1341 + C1340 + C1339 + C1338 + C1337) * C32939 +
                    (C173 * C32905 + C172 * C834 + C171 * C827 + C170 * C833 +
                     C169 * C826 + C168 * C832) *
                        C32951) *
                       C32603 * C470) *
                      C473)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                 ((((C113 * C119 + C32644 * C126) * C114 +
                    (C113 * C127 + C32644 * C140) * C102 + C168 * C115 +
                    C169 * C103 + C170 * C116 + C171 * C104 + C172 * C117 +
                    C173 * C105 + C174 * C118 + C175 * C106) *
                       C32633 * C32603 * C470 -
                   (C495 * C106 + C496 * C118 + C497 * C105 + C498 * C117 +
                    C499 * C104 + C500 * C116 + C501 * C103 + C502 * C115 +
                    (C113 * C261 + C32644 * C277) * C102 +
                    (C113 * C247 + C32644 * C262) * C114) *
                       C32633 * C32603 * C471) *
                      C472 +
                  ((C502 * C114 + C501 * C102 + C500 * C115 + C499 * C103 +
                    C498 * C116 + C497 * C104 + C496 * C117 + C495 * C105 +
                    (C113 * C474 + C32644 * C475) * C118 +
                    (C113 * C476 + C32644 * C477) * C106) *
                       C32633 * C32603 * C471 -
                   (C176 * C106 + C177 * C118 + C175 * C105 + C174 * C117 +
                    C173 * C104 + C172 * C116 + C171 * C103 + C170 * C115 +
                    C169 * C102 + C168 * C114) *
                       C32633 * C32603 * C470) *
                      C473)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                 (((((C113 * C119 + C32644 * C126) * C5424 +
                     (C113 * C127 + C32644 * C140) * C32948 + C168 * C5425 +
                     C169 * C32935 + C170 * C5426 + C171 * C32905) *
                        C5421 +
                    (C5538 + C5539 + C5540 + C5541 + C5542 + C5543) * C5422 +
                    C5560 * C32916) *
                       C32603 * C470 -
                   ((C5550 + C5551 + C5552 + C5553 + C5554 + C5555) * C32916 +
                    (C5549 + C5548 + C5547 + C5546 + C5545 + C5544) * C5422 +
                    (C5543 + C5542 + C5541 + C5540 + C5539 + C5538) * C5421) *
                       C32603 * C471) *
                      C472 +
                  (((C5817 + C5818 + C5819 + C5820 + C5821 + C5822) * C5421 +
                    (C5823 + C5824 + C5825 + C5826 + C5827 + C5828) * C5422 +
                    (C1023 * C5424 + C1022 * C32948 + C1021 * C5425 +
                     C1020 * C32935 + (C113 * C1332 + C32644 * C1333) * C5426 +
                     (C113 * C1334 + C32644 * C1335) * C32905) *
                        C32916) *
                       C32603 * C471 -
                   ((C5828 + C5827 + C5826 + C5825 + C5824 + C5823) * C32916 +
                    (C5822 + C5821 + C5820 + C5819 + C5818 + C5817) * C5422 +
                    (C173 * C32905 + C172 * C5426 + C171 * C32935 +
                     C170 * C5425 + C169 * C32948 + C168 * C5424) *
                        C5421) *
                       C32603 * C470) *
                      C473)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                 (((((C113 * C119 + C32644 * C126) * C6200 +
                     (C113 * C127 + C32644 * C140) * C32542) *
                        C6195 +
                    (C6272 + C6273) * C6196 + C6286 * C6197 + C6287 * C6198 +
                    C6296 * C6199) *
                       C32603 * C470 -
                   ((C6294 + C6295) * C6199 + (C6293 + C6292) * C6198 +
                    (C6277 + C6276) * C6197 + (C6275 + C6274) * C6196 +
                    (C6273 + C6272) * C6195) *
                       C32603 * C471) *
                      C472 +
                  (((C6457 + C6458) * C6195 + (C6459 + C6460) * C6196 +
                    (C6461 + C6462) * C6197 + (C6469 + C6470) * C6198 +
                    ((C113 * C6452 + C32644 * C6453) * C6200 +
                     (C113 * C6454 + C32644 * C6455) * C32542) *
                        C6199) *
                       C32603 * C471 -
                   ((C6470 + C6469) * C6199 + (C6462 + C6461) * C6198 +
                    (C6460 + C6459) * C6197 + (C6458 + C6457) * C6196 +
                    (C169 * C32542 + C168 * C6200) * C6195) *
                       C32603 * C470) *
                      C473)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C10223 * C119 + C10220 * C126 + C10224 * C352 +
                     C10221 * C367 + C10225 * C353 + C32919 * C368) *
                        C5424 +
                    (C10223 * C127 + C10220 * C140 + C10224 * C366 +
                     C10221 * C382 + C10225 * C369 + C32919 * C383) *
                        C32948 +
                    (C10263 + C10264 + C10265) * C5425 +
                    (C10266 + C10267 + C10268) * C32935 + C10283 * C5426 +
                    C10284 * C32905) *
                       C32633 * C32603 * C470 -
                   ((C10675 + C10676 + C10677) * C32905 +
                    (C10678 + C10679 + C10680) * C5426 +
                    (C10681 + C10682 + C10683) * C32935 +
                    (C10684 + C10685 + C10686) * C5425 +
                    (C10225 * C1166 + C32919 * C1180 + C10224 * C702 +
                     C10221 * C711 + C10223 * C261 + C10220 * C277) *
                        C32948 +
                    (C10225 * C1153 + C32919 * C1165 + C10224 * C696 +
                     C10221 * C701 + C10223 * C247 + C10220 * C262) *
                        C5424) *
                       C32633 * C32603 * C471) *
                      C472 +
                  (((C10686 + C10685 + C10684) * C5424 +
                    (C10683 + C10682 + C10681) * C32948 +
                    (C10680 + C10679 + C10678) * C5425 +
                    (C10677 + C10676 + C10675) * C32935 +
                    (C10223 * C244 + C10220 * C256 + C10224 * C699 +
                     C10221 * C707 + C10225 * C2268 + C32919 * C2269) *
                        C5426 +
                    (C10223 * C255 + C10220 * C274 + C10224 * C708 +
                     C10221 * C714 + C10225 * C2270 + C32919 * C2271) *
                        C32905) *
                       C32633 * C32603 * C471 -
                   ((C10275 + C10276 + C10277) * C32905 +
                    (C10278 + C10279 + C10280) * C5426 +
                    (C10274 + C10273 + C10272) * C32935 +
                    (C10271 + C10270 + C10269) * C5425 +
                    (C10268 + C10267 + C10266) * C32948 +
                    (C10265 + C10264 + C10263) * C5424) *
                       C32633 * C32603 * C470) *
                      C473)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((((C10223 * C119 + C10220 * C126 + C10224 * C352 +
                      C10221 * C367 + C10225 * C353 + C32919 * C368) *
                         C6200 +
                     (C10223 * C127 + C10220 * C140 + C10224 * C366 +
                      C10221 * C382 + C10225 * C369 + C32919 * C383) *
                         C32542) *
                        C32951 +
                    ((C11271 + C11272 + C11273) * C6200 +
                     (C11274 + C11275 + C11276) * C32542) *
                        C32939 +
                    C11295 * C32916) *
                       C32603 * C470 -
                   (((C11283 + C11284 + C11285) * C32542 +
                     (C11286 + C11287 + C11288) * C6200) *
                        C32916 +
                    ((C11282 + C11281 + C11280) * C32542 +
                     (C11279 + C11278 + C11277) * C6200) *
                        C32939 +
                    ((C11276 + C11275 + C11274) * C32542 +
                     (C11273 + C11272 + C11271) * C6200) *
                        C32951) *
                       C32603 * C471) *
                      C472 +
                  ((((C10686 + C10685 + C10684) * C6200 +
                     (C10683 + C10682 + C10681) * C32542) *
                        C32951 +
                    ((C11564 + C11565 + C11566) * C6200 +
                     (C11567 + C11568 + C11569) * C32542) *
                        C32939 +
                    ((C10223 * C964 + C10220 * C972 + C10224 * C1669 +
                      C10221 * C1673 + C10225 * C7211 + C32919 * C7212) *
                         C6200 +
                     (C10223 * C971 + C10220 * C982 + C10224 * C1674 +
                      C10221 * C1678 + C10225 * C7213 + C32919 * C7214) *
                         C32542) *
                        C32916) *
                       C32603 * C471 -
                   (((C11569 + C11568 + C11567) * C32542 +
                     (C11566 + C11565 + C11564) * C6200) *
                        C32916 +
                    ((C10681 + C10682 + C10683) * C32542 +
                     (C10684 + C10685 + C10686) * C6200) *
                        C32939 +
                    ((C10268 + C10267 + C10266) * C32542 +
                     (C10265 + C10264 + C10263) * C6200) *
                        C32951) *
                       C32603 * C470) *
                      C473)) /
                    (p * q * std::sqrt(p + q));
    d2ee[71] += (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                 (((((C113 * C119 + C32644 * C126) * C832 +
                     (C113 * C127 + C32644 * C140) * C826 + C168 * C833 +
                     C169 * C827 + C170 * C834 + C171 * C32905) *
                        C32951 +
                    (C1026 + C1027 + C992 + C993 + C994 + C995) * C32939 +
                    C1040 * C32916) *
                       C584 -
                   ((C1681 + C1682 + C1683 + C1684 + C1701 + C1702) * C32916 +
                    (C1689 + C1690 + C1691 + C1692 + C1703 + C1704) * C32939 +
                    (C611 * C32905 + C612 * C834 + C613 * C827 + C614 * C833 +
                     (C113 * C366 + C32644 * C382) * C826 +
                     (C113 * C352 + C32644 * C367) * C832) *
                        C32951) *
                       C585) *
                      C470 +
                  (((C1704 + C1703 + C1692 + C1691 + C1690 + C1689) * C32951 +
                    (C1702 + C1701 + C1684 + C1683 + C1682 + C1681) * C32939 +
                    ((C113 * C1668 + C32644 * C1671) * C832 +
                     (C113 * C1672 + C32644 * C1677) * C826 +
                     (C113 * C1669 + C32644 * C1673) * C833 +
                     (C113 * C1674 + C32644 * C1678) * C827 +
                     (C113 * C1670 + C32644 * C1675) * C834 +
                     (C113 * C1676 + C32644 * C1679) * C32905) *
                        C32916) *
                       C585 -
                   ((C1030 + C1031 + C1032 + C1033 + C1034 + C1035) * C32916 +
                    (C1003 + C1002 + C1001 + C1000 + C1029 + C1028) * C32939 +
                    (C995 + C994 + C993 + C992 + C1027 + C1026) * C32951) *
                       C584) *
                      C471) *
                 C32577) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                 ((((C113 * C119 + C32644 * C126) * C114 +
                    (C113 * C127 + C32644 * C140) * C102 + C168 * C115 +
                    C169 * C103 + C170 * C116 + C171 * C104 + C172 * C117 +
                    C173 * C105 + C174 * C118 + C175 * C106) *
                       C32633 * C584 -
                   (C607 * C106 + C608 * C118 + C609 * C105 + C610 * C117 +
                    C611 * C104 + C612 * C116 + C613 * C103 + C614 * C115 +
                    (C113 * C366 + C32644 * C382) * C102 +
                    (C113 * C352 + C32644 * C367) * C114) *
                       C32633 * C585) *
                      C470 +
                  (((C113 * C696 + C32644 * C701) * C114 +
                    (C113 * C702 + C32644 * C711) * C102 +
                    (C113 * C697 + C32644 * C703) * C115 +
                    (C113 * C704 + C32644 * C712) * C103 +
                    (C113 * C698 + C32644 * C705) * C116 +
                    (C113 * C706 + C32644 * C713) * C104 +
                    (C113 * C699 + C32644 * C707) * C117 +
                    (C113 * C708 + C32644 * C714) * C105 +
                    (C113 * C700 + C32644 * C709) * C118 +
                    (C113 * C710 + C32644 * C715) * C106) *
                       C32633 * C585 -
                   (C495 * C106 + C496 * C118 + C497 * C105 + C498 * C117 +
                    C499 * C104 + C500 * C116 + C501 * C103 + C502 * C115 +
                    (C113 * C261 + C32644 * C277) * C102 +
                    (C113 * C247 + C32644 * C262) * C114) *
                       C32633 * C584) *
                      C471) *
                 C32577) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                 (((((C113 * C119 + C32644 * C126) * C5424 +
                     (C113 * C127 + C32644 * C140) * C32948 + C168 * C5425 +
                     C169 * C32935 + C170 * C5426 + C171 * C32905) *
                        C5421 +
                    (C5538 + C5539 + C5540 + C5541 + C5542 + C5543) * C5422 +
                    C5560 * C32916) *
                       C584 -
                   ((C6121 + C6122 + C6123 + C6124 + C6125 + C6126) * C32916 +
                    (C6127 + C6128 + C6129 + C6130 + C6131 + C6132) * C5422 +
                    (C611 * C32905 + C612 * C5426 + C613 * C32935 +
                     C614 * C5425 + (C113 * C366 + C32644 * C382) * C32948 +
                     (C113 * C352 + C32644 * C367) * C5424) *
                        C5421) *
                       C585) *
                      C470 +
                  (((C6132 + C6131 + C6130 + C6129 + C6128 + C6127) * C5421 +
                    (C6126 + C6125 + C6124 + C6123 + C6122 + C6121) * C5422 +
                    ((C113 * C1668 + C32644 * C1671) * C5424 +
                     (C113 * C1672 + C32644 * C1677) * C32948 +
                     (C113 * C1669 + C32644 * C1673) * C5425 +
                     (C113 * C1674 + C32644 * C1678) * C32935 +
                     (C113 * C1670 + C32644 * C1675) * C5426 +
                     (C113 * C1676 + C32644 * C1679) * C32905) *
                        C32916) *
                       C585 -
                   ((C5550 + C5551 + C5552 + C5553 + C5554 + C5555) * C32916 +
                    (C5549 + C5548 + C5547 + C5546 + C5545 + C5544) * C5422 +
                    (C5543 + C5542 + C5541 + C5540 + C5539 + C5538) * C5421) *
                       C584) *
                      C471) *
                 C32577) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                 (((((C113 * C119 + C32644 * C126) * C6200 +
                     (C113 * C127 + C32644 * C140) * C32542) *
                        C6195 +
                    (C6272 + C6273) * C6196 + C6286 * C6197 + C6287 * C6198 +
                    C6296 * C6199) *
                       C584 -
                   ((C6659 + C6660) * C6199 + (C6661 + C6662) * C6198 +
                    (C6651 + C6652) * C6197 + (C6653 + C6654) * C6196 +
                    ((C113 * C366 + C32644 * C382) * C32542 +
                     (C113 * C352 + C32644 * C367) * C6200) *
                        C6195) *
                       C585) *
                      C470 +
                  (((C6654 + C6653) * C6195 + (C6652 + C6651) * C6196 +
                    (C6662 + C6661) * C6197 + (C6660 + C6659) * C6198 +
                    ((C113 * C6638 + C32644 * C6639) * C6200 +
                     (C113 * C6640 + C32644 * C6641) * C32542) *
                        C6199) *
                       C585 -
                   ((C6294 + C6295) * C6199 + (C6293 + C6292) * C6198 +
                    (C6277 + C6276) * C6197 + (C6275 + C6274) * C6196 +
                    (C6273 + C6272) * C6195) *
                       C584) *
                      C471) *
                 C32577) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C10223 * C119 + C10220 * C126 + C10224 * C352 +
                     C10221 * C367 + C10225 * C353 + C32919 * C368) *
                        C5424 +
                    (C10223 * C127 + C10220 * C140 + C10224 * C366 +
                     C10221 * C382 + C10225 * C369 + C32919 * C383) *
                        C32948 +
                    (C10263 + C10264 + C10265) * C5425 +
                    (C10266 + C10267 + C10268) * C32935 + C10283 * C5426 +
                    C10284 * C32905) *
                       C32633 * C584 -
                   ((C10857 + C10858 + C10859) * C32905 +
                    (C10860 + C10861 + C10862) * C5426 +
                    (C10863 + C10864 + C10865) * C32935 +
                    (C10866 + C10867 + C10868) * C5425 +
                    (C10225 * C2108 + C32919 * C2118 + C10224 * C369 +
                     C10221 * C383 + C10223 * C366 + C10220 * C382) *
                        C32948 +
                    (C10225 * C2100 + C32919 * C2109 + C10224 * C353 +
                     C10221 * C368 + C10223 * C352 + C10220 * C367) *
                        C5424) *
                       C32633 * C585) *
                      C470 +
                  (((C10223 * C696 + C10220 * C701 + C10224 * C1153 +
                     C10221 * C1165 + C10225 * C2640 + C32919 * C2643) *
                        C5424 +
                    (C10223 * C702 + C10220 * C711 + C10224 * C1166 +
                     C10221 * C1180 + C10225 * C2644 + C32919 * C2649) *
                        C32948 +
                    (C10223 * C697 + C10220 * C703 + C10224 * C1154 +
                     C10221 * C1167 + C10225 * C2641 + C32919 * C2645) *
                        C5425 +
                    (C10223 * C704 + C10220 * C712 + C10224 * C1168 +
                     C10221 * C1181 + C10225 * C2646 + C32919 * C2650) *
                        C32935 +
                    (C10223 * C698 + C10220 * C705 + C10224 * C1155 +
                     C10221 * C1169 + C10225 * C2642 + C32919 * C2647) *
                        C5426 +
                    (C10223 * C706 + C10220 * C713 + C10224 * C1170 +
                     C10221 * C1182 + C10225 * C2648 + C32919 * C2651) *
                        C32905) *
                       C32633 * C585 -
                   ((C10675 + C10676 + C10677) * C32905 +
                    (C10678 + C10679 + C10680) * C5426 +
                    (C10681 + C10682 + C10683) * C32935 +
                    (C10684 + C10685 + C10686) * C5425 +
                    (C10225 * C1166 + C32919 * C1180 + C10224 * C702 +
                     C10221 * C711 + C10223 * C261 + C10220 * C277) *
                        C32948 +
                    (C10225 * C1153 + C32919 * C1165 + C10224 * C696 +
                     C10221 * C701 + C10223 * C247 + C10220 * C262) *
                        C5424) *
                       C32633 * C584) *
                      C471) *
                 C32577) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((((C10223 * C119 + C10220 * C126 + C10224 * C352 +
                      C10221 * C367 + C10225 * C353 + C32919 * C368) *
                         C6200 +
                     (C10223 * C127 + C10220 * C140 + C10224 * C366 +
                      C10221 * C382 + C10225 * C369 + C32919 * C383) *
                         C32542) *
                        C32951 +
                    ((C11271 + C11272 + C11273) * C6200 +
                     (C11274 + C11275 + C11276) * C32542) *
                        C32939 +
                    C11295 * C32916) *
                       C584 -
                   (((C11886 + C11887 + C11888) * C32542 +
                     (C11889 + C11890 + C11891) * C6200) *
                        C32916 +
                    ((C11892 + C11893 + C11894) * C32542 +
                     (C11895 + C11896 + C11897) * C6200) *
                        C32939 +
                    ((C10225 * C2108 + C32919 * C2118 + C10224 * C369 +
                      C10221 * C383 + C10223 * C366 + C10220 * C382) *
                         C32542 +
                     (C10225 * C2100 + C32919 * C2109 + C10224 * C353 +
                      C10221 * C368 + C10223 * C352 + C10220 * C367) *
                         C6200) *
                        C32951) *
                       C585) *
                      C470 +
                  ((((C11897 + C11896 + C11895) * C6200 +
                     (C11894 + C11893 + C11892) * C32542) *
                        C32951 +
                    ((C11891 + C11890 + C11889) * C6200 +
                     (C11888 + C11887 + C11886) * C32542) *
                        C32939 +
                    ((C10223 * C1668 + C10220 * C1671 + C10224 * C6359 +
                      C10221 * C6363 + C10225 * C7529 + C32919 * C7530) *
                         C6200 +
                     (C10223 * C1672 + C10220 * C1677 + C10224 * C6364 +
                      C10221 * C6368 + C10225 * C7531 + C32919 * C7532) *
                         C32542) *
                        C32916) *
                       C585 -
                   (((C11283 + C11284 + C11285) * C32542 +
                     (C11286 + C11287 + C11288) * C6200) *
                        C32916 +
                    ((C11282 + C11281 + C11280) * C32542 +
                     (C11279 + C11278 + C11277) * C6200) *
                        C32939 +
                    ((C11276 + C11275 + C11274) * C32542 +
                     (C11273 + C11272 + C11271) * C6200) *
                        C32951) *
                       C584) *
                      C471) *
                 C32577) /
                    (p * q * std::sqrt(p + q));
    d2ee[72] += (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
                     (((C113 * C119 + C32644 * C126) * C114 +
                       (C113 * C127 + C32644 * C140) * C102 + C168 * C115 +
                       C169 * C103 + C170 * C116 + C171 * C104 + C172 * C117 +
                       C173 * C105 + C174 * C118 + C175 * C106) *
                          C32633 * C32603 * C32589 * C110 -
                      (C176 * C106 + C177 * C118 + C175 * C105 + C174 * C117 +
                       C173 * C104 + C172 * C116 + C171 * C103 + C170 * C115 +
                       C169 * C102 + C168 * C114) *
                          C32633 * C32603 * C32589 * C111 +
                      (C170 * C114 + C171 * C102 + C172 * C115 + C173 * C103 +
                       C174 * C116 + C175 * C104 + C177 * C117 + C176 * C105 +
                       (C113 * C125 + C32644 * C138) * C118 +
                       (C113 * C139 + C32644 * C146) * C106) *
                          C32633 * C32603 * C32589 * C112) +
                 std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
                     (((C113 * C119 + C32644 * C126) * C114 +
                       (C113 * C127 + C32644 * C140) * C102 + C168 * C115 +
                       C169 * C103 + C170 * C116 + C171 * C104 + C172 * C117 +
                       C173 * C105 + C174 * C118 + C175 * C106) *
                          C32633 * C32603 * C239 -
                      ((C113 * C253 + C32644 * C273) * C106 +
                       (C113 * C243 + C32644 * C254) * C118 +
                       (C113 * C255 + C32644 * C274) * C105 +
                       (C113 * C244 + C32644 * C256) * C117 +
                       (C113 * C257 + C32644 * C275) * C104 +
                       (C113 * C245 + C32644 * C258) * C116 +
                       (C113 * C259 + C32644 * C276) * C103 +
                       (C113 * C246 + C32644 * C260) * C115 +
                       (C113 * C261 + C32644 * C277) * C102 +
                       (C113 * C247 + C32644 * C262) * C114) *
                          C32633 * C32603 * C240 +
                      ((C113 * C248 + C32644 * C263) * C114 +
                       (C113 * C264 + C32644 * C278) * C102 +
                       (C113 * C249 + C32644 * C265) * C115 +
                       (C113 * C266 + C32644 * C279) * C103 +
                       (C113 * C250 + C32644 * C267) * C116 +
                       (C113 * C268 + C32644 * C280) * C104 +
                       (C113 * C251 + C32644 * C269) * C117 +
                       (C113 * C270 + C32644 * C281) * C105 +
                       (C113 * C252 + C32644 * C271) * C118 +
                       (C113 * C272 + C32644 * C282) * C106) *
                          C32633 * C32603 * C241) *
                     C32577) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                 (((C113 * C119 + C32644 * C126) * C114 +
                   (C113 * C127 + C32644 * C140) * C102 + C168 * C115 +
                   C169 * C103 + C170 * C116 + C171 * C104 + C172 * C117 +
                   C173 * C105 + C174 * C118 + C175 * C106) *
                      C32633 * C345 -
                  ((C113 * C358 + C32644 * C378) * C106 +
                   (C113 * C348 + C32644 * C359) * C118 +
                   (C113 * C360 + C32644 * C379) * C105 +
                   (C113 * C349 + C32644 * C361) * C117 +
                   (C113 * C362 + C32644 * C380) * C104 +
                   (C113 * C350 + C32644 * C363) * C116 +
                   (C113 * C364 + C32644 * C381) * C103 +
                   (C113 * C351 + C32644 * C365) * C115 +
                   (C113 * C366 + C32644 * C382) * C102 +
                   (C113 * C352 + C32644 * C367) * C114) *
                      C32633 * C346 +
                  ((C113 * C353 + C32644 * C368) * C114 +
                   (C113 * C369 + C32644 * C383) * C102 +
                   (C113 * C354 + C32644 * C370) * C115 +
                   (C113 * C371 + C32644 * C384) * C103 +
                   (C113 * C355 + C32644 * C372) * C116 +
                   (C113 * C373 + C32644 * C385) * C104 +
                   (C113 * C356 + C32644 * C374) * C117 +
                   (C113 * C375 + C32644 * C386) * C105 +
                   (C113 * C357 + C32644 * C376) * C118 +
                   (C113 * C377 + C32644 * C387) * C106) *
                      C32633 * C347) *
                 C32589 * C32577) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
                 ((((C113 * C119 + C32644 * C126) * C832 +
                    (C113 * C127 + C32644 * C140) * C826 + C168 * C833 +
                    C169 * C827 + C170 * C834 + C171 * C32905) *
                       C32951 +
                   ((C113 * C247 + C32644 * C262) * C832 +
                    (C113 * C261 + C32644 * C277) * C826 + C502 * C833 +
                    C501 * C827 + C500 * C834 + C499 * C32905) *
                       C32939 +
                   ((C113 * C248 + C32644 * C263) * C832 +
                    (C113 * C264 + C32644 * C278) * C826 + C848 * C833 +
                    C849 * C827 + C850 * C834 + C851 * C32905) *
                       C32916) *
                      C32603 * C32589 * C110 -
                  ((C852 * C32905 + C853 * C834 + C851 * C827 + C850 * C833 +
                    C849 * C826 + C848 * C832) *
                       C32916 +
                   (C497 * C32905 + C498 * C834 + C499 * C827 + C500 * C833 +
                    C501 * C826 + C502 * C832) *
                       C32939 +
                   (C173 * C32905 + C172 * C834 + C171 * C827 + C170 * C833 +
                    C169 * C826 + C168 * C832) *
                       C32951) *
                      C32603 * C32589 * C111 +
                  ((C170 * C832 + C171 * C826 + C172 * C833 + C173 * C827 +
                    C174 * C834 + C175 * C32905) *
                       C32951 +
                   (C500 * C832 + C499 * C826 + C498 * C833 + C497 * C827 +
                    C496 * C834 + C495 * C32905) *
                       C32939 +
                   (C850 * C832 + C851 * C826 + C853 * C833 + C852 * C827 +
                    (C113 * C252 + C32644 * C271) * C834 +
                    (C113 * C272 + C32644 * C282) * C32905) *
                       C32916) *
                      C32603 * C32589 * C112)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
                 ((((C113 * C119 + C32644 * C126) * C832 +
                    (C113 * C127 + C32644 * C140) * C826 + C168 * C833 +
                    C169 * C827 + C170 * C834 + C171 * C32905) *
                       C32951 +
                   (C1026 + C1027 + C992 + C993 + C994 + C995) * C32939 +
                   C1040 * C32916) *
                      C32603 * C239 -
                  ((C1030 + C1031 + C1032 + C1033 + C1034 + C1035) * C32916 +
                   (C1003 + C1002 + C1001 + C1000 + C1029 + C1028) * C32939 +
                   (C995 + C994 + C993 + C992 + C1027 + C1026) * C32951) *
                      C32603 * C240 +
                  (C1040 * C32951 +
                   (C1035 + C1034 + C1033 + C1032 + C1031 + C1030) * C32939 +
                   ((C113 * C966 + C32644 * C975) * C832 +
                    (C113 * C976 + C32644 * C984) * C826 +
                    (C113 * C967 + C32644 * C977) * C833 +
                    (C113 * C978 + C32644 * C985) * C827 +
                    (C113 * C968 + C32644 * C979) * C834 +
                    (C113 * C980 + C32644 * C986) * C32905) *
                       C32916) *
                      C32603 * C241) *
                 C32577) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                 ((((C113 * C119 + C32644 * C126) * C832 +
                    (C113 * C127 + C32644 * C140) * C826 + C168 * C833 +
                    C169 * C827 + C170 * C834 + C171 * C32905) *
                       C32951 +
                   (C1026 + C1027 + C992 + C993 + C994 + C995) * C32939 +
                   C1040 * C32916) *
                      C345 -
                  (((C113 * C1159 + C32644 * C1177) * C32905 +
                    (C113 * C1150 + C32644 * C1160) * C834 +
                    (C113 * C1161 + C32644 * C1178) * C827 +
                    (C113 * C1151 + C32644 * C1162) * C833 +
                    (C113 * C1163 + C32644 * C1179) * C826 +
                    (C113 * C1152 + C32644 * C1164) * C832) *
                       C32916 +
                   ((C113 * C706 + C32644 * C713) * C32905 +
                    (C113 * C698 + C32644 * C705) * C834 +
                    (C113 * C704 + C32644 * C712) * C827 +
                    (C113 * C697 + C32644 * C703) * C833 +
                    (C113 * C702 + C32644 * C711) * C826 +
                    (C113 * C696 + C32644 * C701) * C832) *
                       C32939 +
                   (C611 * C32905 + C612 * C834 + C613 * C827 + C614 * C833 +
                    (C113 * C366 + C32644 * C382) * C826 +
                    (C113 * C352 + C32644 * C367) * C832) *
                       C32951) *
                      C346 +
                  (((C113 * C353 + C32644 * C368) * C832 +
                    (C113 * C369 + C32644 * C383) * C826 +
                    (C113 * C354 + C32644 * C370) * C833 +
                    (C113 * C371 + C32644 * C384) * C827 +
                    (C113 * C355 + C32644 * C372) * C834 +
                    (C113 * C373 + C32644 * C385) * C32905) *
                       C32951 +
                   ((C113 * C1153 + C32644 * C1165) * C832 +
                    (C113 * C1166 + C32644 * C1180) * C826 +
                    (C113 * C1154 + C32644 * C1167) * C833 +
                    (C113 * C1168 + C32644 * C1181) * C827 +
                    (C113 * C1155 + C32644 * C1169) * C834 +
                    (C113 * C1170 + C32644 * C1182) * C32905) *
                       C32939 +
                   ((C113 * C1156 + C32644 * C1171) * C832 +
                    (C113 * C1172 + C32644 * C1183) * C826 +
                    (C113 * C1157 + C32644 * C1173) * C833 +
                    (C113 * C1174 + C32644 * C1184) * C827 +
                    (C113 * C1158 + C32644 * C1175) * C834 +
                    (C113 * C1176 + C32644 * C1185) * C32905) *
                       C32916) *
                      C347) *
                 C32589 * C32577) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
                 ((((C113 * C119 + C32644 * C126) * C5424 +
                    (C113 * C127 + C32644 * C140) * C32948 + C168 * C5425 +
                    C169 * C32935 + C170 * C5426 + C171 * C32905) *
                       C5421 +
                   (C1016 * C5424 + C1017 * C32948 + C502 * C5425 +
                    C501 * C32935 + C500 * C5426 + C499 * C32905) *
                       C5422 +
                   (C1018 * C5424 + C1019 * C32948 + C848 * C5425 +
                    C849 * C32935 + C850 * C5426 + C851 * C32905) *
                       C32916) *
                      C32603 * C32589 * C110 -
                  ((C852 * C32905 + C853 * C5426 + C851 * C32935 +
                    C850 * C5425 + C849 * C32948 + C848 * C5424) *
                       C32916 +
                   (C497 * C32905 + C498 * C5426 + C499 * C32935 +
                    C500 * C5425 + C501 * C32948 + C502 * C5424) *
                       C5422 +
                   (C173 * C32905 + C172 * C5426 + C171 * C32935 +
                    C170 * C5425 + C169 * C32948 + C168 * C5424) *
                       C5421) *
                      C32603 * C32589 * C111 +
                  ((C170 * C5424 + C171 * C32948 + C172 * C5425 +
                    C173 * C32935 + C174 * C5426 + C175 * C32905) *
                       C5421 +
                   (C500 * C5424 + C499 * C32948 + C498 * C5425 +
                    C497 * C32935 + C496 * C5426 + C495 * C32905) *
                       C5422 +
                   (C850 * C5424 + C851 * C32948 + C853 * C5425 +
                    C852 * C32935 + (C113 * C252 + C32644 * C271) * C5426 +
                    (C113 * C272 + C32644 * C282) * C32905) *
                       C32916) *
                      C32603 * C32589 * C112)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
                 ((((C113 * C119 + C32644 * C126) * C5424 +
                    (C113 * C127 + C32644 * C140) * C32948 + C168 * C5425 +
                    C169 * C32935 + C170 * C5426 + C171 * C32905) *
                       C5421 +
                   (C5538 + C5539 + C5540 + C5541 + C5542 + C5543) * C5422 +
                   C5560 * C32916) *
                      C32603 * C239 -
                  ((C5550 + C5551 + C5552 + C5553 + C5554 + C5555) * C32916 +
                   (C5549 + C5548 + C5547 + C5546 + C5545 + C5544) * C5422 +
                   (C5543 + C5542 + C5541 + C5540 + C5539 + C5538) * C5421) *
                      C32603 * C240 +
                  (C5560 * C5421 +
                   (C5555 + C5554 + C5553 + C5552 + C5551 + C5550) * C5422 +
                   ((C113 * C966 + C32644 * C975) * C5424 +
                    (C113 * C976 + C32644 * C984) * C32948 +
                    (C113 * C967 + C32644 * C977) * C5425 +
                    (C113 * C978 + C32644 * C985) * C32935 +
                    (C113 * C968 + C32644 * C979) * C5426 +
                    (C113 * C980 + C32644 * C986) * C32905) *
                       C32916) *
                      C32603 * C241) *
                 C32577) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                 ((((C113 * C119 + C32644 * C126) * C5424 +
                    (C113 * C127 + C32644 * C140) * C32948 + C168 * C5425 +
                    C169 * C32935 + C170 * C5426 + C171 * C32905) *
                       C5421 +
                   (C5538 + C5539 + C5540 + C5541 + C5542 + C5543) * C5422 +
                   C5560 * C32916) *
                      C345 -
                  ((C1515 * C32905 + C1516 * C5426 + C1517 * C32935 +
                    C1518 * C5425 + C1697 * C32948 + C1698 * C5424) *
                       C32916 +
                   (C1519 * C32905 + C1520 * C5426 + C1521 * C32935 +
                    C1522 * C5425 + C1699 * C32948 + C1700 * C5424) *
                       C5422 +
                   (C611 * C32905 + C612 * C5426 + C613 * C32935 +
                    C614 * C5425 + (C113 * C366 + C32644 * C382) * C32948 +
                    (C113 * C352 + C32644 * C367) * C5424) *
                       C5421) *
                      C346 +
                  (((C113 * C353 + C32644 * C368) * C5424 +
                    (C113 * C369 + C32644 * C383) * C32948 +
                    (C113 * C354 + C32644 * C370) * C5425 +
                    (C113 * C371 + C32644 * C384) * C32935 +
                    (C113 * C355 + C32644 * C372) * C5426 +
                    (C113 * C373 + C32644 * C385) * C32905) *
                       C5421 +
                   ((C113 * C1153 + C32644 * C1165) * C5424 +
                    (C113 * C1166 + C32644 * C1180) * C32948 +
                    (C113 * C1154 + C32644 * C1167) * C5425 +
                    (C113 * C1168 + C32644 * C1181) * C32935 +
                    (C113 * C1155 + C32644 * C1169) * C5426 +
                    (C113 * C1170 + C32644 * C1182) * C32905) *
                       C5422 +
                   ((C113 * C1156 + C32644 * C1171) * C5424 +
                    (C113 * C1172 + C32644 * C1183) * C32948 +
                    (C113 * C1157 + C32644 * C1173) * C5425 +
                    (C113 * C1174 + C32644 * C1184) * C32935 +
                    (C113 * C1158 + C32644 * C1175) * C5426 +
                    (C113 * C1176 + C32644 * C1185) * C32905) *
                       C32916) *
                      C347) *
                 C32589 * C32577) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
                 ((((C113 * C119 + C32644 * C126) * C6200 +
                    (C113 * C127 + C32644 * C140) * C32542) *
                       C6195 +
                   (C1016 * C6200 + C1017 * C32542) * C6196 +
                   (C1018 * C6200 + C1019 * C32542) * C6197 +
                   (C1025 * C6200 + C1024 * C32542) * C6198 +
                   ((C113 * C966 + C32644 * C975) * C6200 +
                    (C113 * C976 + C32644 * C984) * C32542) *
                       C6199) *
                      C32603 * C32589 * C110 -
                  (((C113 * C978 + C32644 * C985) * C32542 +
                    (C113 * C967 + C32644 * C977) * C6200) *
                       C6199 +
                   (C1022 * C32542 + C1023 * C6200) * C6198 +
                   (C849 * C32542 + C848 * C6200) * C6197 +
                   (C501 * C32542 + C502 * C6200) * C6196 +
                   (C169 * C32542 + C168 * C6200) * C6195) *
                      C32603 * C32589 * C111 +
                  ((C170 * C6200 + C171 * C32542) * C6195 +
                   (C500 * C6200 + C499 * C32542) * C6196 +
                   (C850 * C6200 + C851 * C32542) * C6197 +
                   (C1021 * C6200 + C1020 * C32542) * C6198 +
                   ((C113 * C968 + C32644 * C979) * C6200 +
                    (C113 * C980 + C32644 * C986) * C32542) *
                       C6199) *
                      C32603 * C32589 * C112)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
                 ((((C113 * C119 + C32644 * C126) * C6200 +
                    (C113 * C127 + C32644 * C140) * C32542) *
                       C6195 +
                   (C6272 + C6273) * C6196 + C6286 * C6197 + C6287 * C6198 +
                   C6296 * C6199) *
                      C32603 * C239 -
                  ((C6294 + C6295) * C6199 + (C6293 + C6292) * C6198 +
                   (C6277 + C6276) * C6197 + (C6275 + C6274) * C6196 +
                   (C6273 + C6272) * C6195) *
                      C32603 * C240 +
                  (C6286 * C6195 + C6287 * C6196 + C6296 * C6197 +
                   (C6295 + C6294) * C6198 +
                   ((C113 * C6264 + C32644 * C6267) * C6200 +
                    (C113 * C6268 + C32644 * C6270) * C32542) *
                       C6199) *
                      C32603 * C241) *
                 C32577) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                 ((((C113 * C119 + C32644 * C126) * C6200 +
                    (C113 * C127 + C32644 * C140) * C32542) *
                       C6195 +
                   (C6272 + C6273) * C6196 + C6286 * C6197 + C6287 * C6198 +
                   C6296 * C6199) *
                      C345 -
                  (((C113 * C6361 + C32644 * C6367) * C32542 +
                    (C113 * C6358 + C32644 * C6362) * C6200) *
                       C6199 +
                   ((C113 * C1672 + C32644 * C1677) * C32542 +
                    (C113 * C1668 + C32644 * C1671) * C6200) *
                       C6198 +
                   (C1697 * C32542 + C1698 * C6200) * C6197 +
                   (C1699 * C32542 + C1700 * C6200) * C6196 +
                   ((C113 * C366 + C32644 * C382) * C32542 +
                    (C113 * C352 + C32644 * C367) * C6200) *
                       C6195) *
                      C346 +
                  (((C113 * C353 + C32644 * C368) * C6200 +
                    (C113 * C369 + C32644 * C383) * C32542) *
                       C6195 +
                   ((C113 * C1153 + C32644 * C1165) * C6200 +
                    (C113 * C1166 + C32644 * C1180) * C32542) *
                       C6196 +
                   ((C113 * C1156 + C32644 * C1171) * C6200 +
                    (C113 * C1172 + C32644 * C1183) * C32542) *
                       C6197 +
                   ((C113 * C6359 + C32644 * C6363) * C6200 +
                    (C113 * C6364 + C32644 * C6368) * C32542) *
                       C6198 +
                   ((C113 * C6360 + C32644 * C6365) * C6200 +
                    (C113 * C6366 + C32644 * C6369) * C32542) *
                       C6199) *
                      C347) *
                 C32589 * C32577) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                 (((C10223 * C119 + C10220 * C126 + C10224 * C352 +
                    C10221 * C367 + C10225 * C353 + C32919 * C368) *
                       C5424 +
                   (C10223 * C127 + C10220 * C140 + C10224 * C366 +
                    C10221 * C382 + C10225 * C369 + C32919 * C383) *
                       C32948 +
                   (C10263 + C10264 + C10265) * C5425 +
                   (C10266 + C10267 + C10268) * C32935 + C10283 * C5426 +
                   C10284 * C32905) *
                      C32633 * C32603 * C32589 * C110 -
                  ((C10275 + C10276 + C10277) * C32905 +
                   (C10278 + C10279 + C10280) * C5426 +
                   (C10274 + C10273 + C10272) * C32935 +
                   (C10271 + C10270 + C10269) * C5425 +
                   (C10268 + C10267 + C10266) * C32948 +
                   (C10265 + C10264 + C10263) * C5424) *
                      C32633 * C32603 * C32589 * C111 +
                  (C10283 * C5424 + C10284 * C32948 +
                   (C10280 + C10279 + C10278) * C5425 +
                   (C10277 + C10276 + C10275) * C32935 +
                   (C10223 * C123 + C10220 * C134 + C10224 * C348 +
                    C10221 * C359 + C10225 * C357 + C32919 * C376) *
                       C5426 +
                   (C10223 * C135 + C10220 * C144 + C10224 * C358 +
                    C10221 * C378 + C10225 * C377 + C32919 * C387) *
                       C32905) *
                      C32633 * C32603 * C32589 * C112)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                 (((C10223 * C119 + C10220 * C126 + C10224 * C352 +
                    C10221 * C367 + C10225 * C353 + C32919 * C368) *
                       C5424 +
                   (C10223 * C127 + C10220 * C140 + C10224 * C366 +
                    C10221 * C382 + C10225 * C369 + C32919 * C383) *
                       C32948 +
                   (C10263 + C10264 + C10265) * C5425 +
                   (C10266 + C10267 + C10268) * C32935 + C10283 * C5426 +
                   C10284 * C32905) *
                      C32633 * C32603 * C239 -
                  ((C10225 * C1170 + C32919 * C1182 + C10224 * C706 +
                    C10221 * C713 + C10223 * C257 + C10220 * C275) *
                       C32905 +
                   (C10225 * C1155 + C32919 * C1169 + C10224 * C698 +
                    C10221 * C705 + C10223 * C245 + C10220 * C258) *
                       C5426 +
                   (C10225 * C1168 + C32919 * C1181 + C10224 * C704 +
                    C10221 * C712 + C10223 * C259 + C10220 * C276) *
                       C32935 +
                   (C10225 * C1154 + C32919 * C1167 + C10224 * C697 +
                    C10221 * C703 + C10223 * C246 + C10220 * C260) *
                       C5425 +
                   (C10225 * C1166 + C32919 * C1180 + C10224 * C702 +
                    C10221 * C711 + C10223 * C261 + C10220 * C277) *
                       C32948 +
                   (C10225 * C1153 + C32919 * C1165 + C10224 * C696 +
                    C10221 * C701 + C10223 * C247 + C10220 * C262) *
                       C5424) *
                      C32633 * C32603 * C240 +
                  ((C10223 * C248 + C10220 * C263 + C10224 * C1152 +
                    C10221 * C1164 + C10225 * C1156 + C32919 * C1171) *
                       C5424 +
                   (C10223 * C264 + C10220 * C278 + C10224 * C1163 +
                    C10221 * C1179 + C10225 * C1172 + C32919 * C1183) *
                       C32948 +
                   (C10223 * C249 + C10220 * C265 + C10224 * C1151 +
                    C10221 * C1162 + C10225 * C1157 + C32919 * C1173) *
                       C5425 +
                   (C10223 * C266 + C10220 * C279 + C10224 * C1161 +
                    C10221 * C1178 + C10225 * C1174 + C32919 * C1184) *
                       C32935 +
                   (C10223 * C250 + C10220 * C267 + C10224 * C1150 +
                    C10221 * C1160 + C10225 * C1158 + C32919 * C1175) *
                       C5426 +
                   (C10223 * C268 + C10220 * C280 + C10224 * C1159 +
                    C10221 * C1177 + C10225 * C1176 + C32919 * C1185) *
                       C32905) *
                      C32633 * C32603 * C241) *
                 C32577) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 (((C10223 * C119 + C10220 * C126 + C10224 * C352 +
                    C10221 * C367 + C10225 * C353 + C32919 * C368) *
                       C5424 +
                   (C10223 * C127 + C10220 * C140 + C10224 * C366 +
                    C10221 * C382 + C10225 * C369 + C32919 * C383) *
                       C32948 +
                   (C10263 + C10264 + C10265) * C5425 +
                   (C10266 + C10267 + C10268) * C32935 + C10283 * C5426 +
                   C10284 * C32905) *
                      C32633 * C345 -
                  ((C10225 * C2104 + C32919 * C2116 + C10224 * C373 +
                    C10221 * C385 + C10223 * C362 + C10220 * C380) *
                       C32905 +
                   (C10225 * C2098 + C32919 * C2105 + C10224 * C355 +
                    C10221 * C372 + C10223 * C350 + C10220 * C363) *
                       C5426 +
                   (C10225 * C2106 + C32919 * C2117 + C10224 * C371 +
                    C10221 * C384 + C10223 * C364 + C10220 * C381) *
                       C32935 +
                   (C10225 * C2099 + C32919 * C2107 + C10224 * C354 +
                    C10221 * C370 + C10223 * C351 + C10220 * C365) *
                       C5425 +
                   (C10225 * C2108 + C32919 * C2118 + C10224 * C369 +
                    C10221 * C383 + C10223 * C366 + C10220 * C382) *
                       C32948 +
                   (C10225 * C2100 + C32919 * C2109 + C10224 * C353 +
                    C10221 * C368 + C10223 * C352 + C10220 * C367) *
                       C5424) *
                      C32633 * C346 +
                  ((C10223 * C353 + C10220 * C368 + C10224 * C2100 +
                    C10221 * C2109 + C10225 * C2101 + C32919 * C2110) *
                       C5424 +
                   (C10223 * C369 + C10220 * C383 + C10224 * C2108 +
                    C10221 * C2118 + C10225 * C2111 + C32919 * C2119) *
                       C32948 +
                   (C10223 * C354 + C10220 * C370 + C10224 * C2099 +
                    C10221 * C2107 + C10225 * C2102 + C32919 * C2112) *
                       C5425 +
                   (C10223 * C371 + C10220 * C384 + C10224 * C2106 +
                    C10221 * C2117 + C10225 * C2113 + C32919 * C2120) *
                       C32935 +
                   (C10223 * C355 + C10220 * C372 + C10224 * C2098 +
                    C10221 * C2105 + C10225 * C2103 + C32919 * C2114) *
                       C5426 +
                   (C10223 * C373 + C10220 * C385 + C10224 * C2104 +
                    C10221 * C2116 + C10225 * C2115 + C32919 * C2121) *
                       C32905) *
                      C32633 * C347) *
                 C32589 * C32577) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                 ((((C10223 * C119 + C10220 * C126 + C10224 * C352 +
                     C10221 * C367 + C10225 * C353 + C32919 * C368) *
                        C6200 +
                    (C10223 * C127 + C10220 * C140 + C10224 * C366 +
                     C10221 * C382 + C10225 * C369 + C32919 * C383) *
                        C32542) *
                       C32951 +
                   ((C10223 * C247 + C10220 * C262 + C10224 * C696 +
                     C10221 * C701 + C10225 * C1153 + C32919 * C1165) *
                        C6200 +
                    (C10223 * C261 + C10220 * C277 + C10224 * C702 +
                     C10221 * C711 + C10225 * C1166 + C32919 * C1180) *
                        C32542) *
                       C32939 +
                   ((C10223 * C248 + C10220 * C263 + C10224 * C1152 +
                     C10221 * C1164 + C10225 * C1156 + C32919 * C1171) *
                        C6200 +
                    (C10223 * C264 + C10220 * C278 + C10224 * C1163 +
                     C10221 * C1179 + C10225 * C1172 + C32919 * C1183) *
                        C32542) *
                       C32916) *
                      C32603 * C32589 * C110 -
                  (((C10225 * C1174 + C32919 * C1184 + C10224 * C1161 +
                     C10221 * C1178 + C10223 * C266 + C10220 * C279) *
                        C32542 +
                    (C10225 * C1157 + C32919 * C1173 + C10224 * C1151 +
                     C10221 * C1162 + C10223 * C249 + C10220 * C265) *
                        C6200) *
                       C32916 +
                   ((C10681 + C10682 + C10683) * C32542 +
                    (C10684 + C10685 + C10686) * C6200) *
                       C32939 +
                   ((C10268 + C10267 + C10266) * C32542 +
                    (C10265 + C10264 + C10263) * C6200) *
                       C32951) *
                      C32603 * C32589 * C111 +
                  ((C10283 * C6200 + C10284 * C32542) * C32951 +
                   ((C10680 + C10679 + C10678) * C6200 +
                    (C10677 + C10676 + C10675) * C32542) *
                       C32939 +
                   ((C10223 * C250 + C10220 * C267 + C10224 * C1150 +
                     C10221 * C1160 + C10225 * C1158 + C32919 * C1175) *
                        C6200 +
                    (C10223 * C268 + C10220 * C280 + C10224 * C1159 +
                     C10221 * C1177 + C10225 * C1176 + C32919 * C1185) *
                        C32542) *
                       C32916) *
                      C32603 * C32589 * C112)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                 ((((C10223 * C119 + C10220 * C126 + C10224 * C352 +
                     C10221 * C367 + C10225 * C353 + C32919 * C368) *
                        C6200 +
                    (C10223 * C127 + C10220 * C140 + C10224 * C366 +
                     C10221 * C382 + C10225 * C369 + C32919 * C383) *
                        C32542) *
                       C32951 +
                   ((C11271 + C11272 + C11273) * C6200 +
                    (C11274 + C11275 + C11276) * C32542) *
                       C32939 +
                   C11295 * C32916) *
                      C32603 * C239 -
                  (((C11283 + C11284 + C11285) * C32542 +
                    (C11286 + C11287 + C11288) * C6200) *
                       C32916 +
                   ((C11282 + C11281 + C11280) * C32542 +
                    (C11279 + C11278 + C11277) * C6200) *
                       C32939 +
                   ((C11276 + C11275 + C11274) * C32542 +
                    (C11273 + C11272 + C11271) * C6200) *
                       C32951) *
                      C32603 * C240 +
                  (C11295 * C32951 +
                   ((C11288 + C11287 + C11286) * C6200 +
                    (C11285 + C11284 + C11283) * C32542) *
                       C32939 +
                   ((C10223 * C966 + C10220 * C975 + C10224 * C6358 +
                     C10221 * C6362 + C10225 * C6360 + C32919 * C6365) *
                        C6200 +
                    (C10223 * C976 + C10220 * C984 + C10224 * C6361 +
                     C10221 * C6367 + C10225 * C6366 + C32919 * C6369) *
                        C32542) *
                       C32916) *
                      C32603 * C241) *
                 C32577) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C10223 * C119 + C10220 * C126 + C10224 * C352 +
                     C10221 * C367 + C10225 * C353 + C32919 * C368) *
                        C6200 +
                    (C10223 * C127 + C10220 * C140 + C10224 * C366 +
                     C10221 * C382 + C10225 * C369 + C32919 * C383) *
                        C32542) *
                       C32951 +
                   ((C11271 + C11272 + C11273) * C6200 +
                    (C11274 + C11275 + C11276) * C32542) *
                       C32939 +
                   C11295 * C32916) *
                      C345 -
                  (((C10225 * C7056 + C32919 * C7062 + C10224 * C1172 +
                     C10221 * C1183 + C10223 * C1163 + C10220 * C1179) *
                        C32542 +
                    (C10225 * C7053 + C32919 * C7057 + C10224 * C1156 +
                     C10221 * C1171 + C10223 * C1152 + C10220 * C1164) *
                        C6200) *
                       C32916 +
                   ((C10225 * C2644 + C32919 * C2649 + C10224 * C1166 +
                     C10221 * C1180 + C10223 * C702 + C10220 * C711) *
                        C32542 +
                    (C10225 * C2640 + C32919 * C2643 + C10224 * C1153 +
                     C10221 * C1165 + C10223 * C696 + C10220 * C701) *
                        C6200) *
                       C32939 +
                   ((C10225 * C2108 + C32919 * C2118 + C10224 * C369 +
                     C10221 * C383 + C10223 * C366 + C10220 * C382) *
                        C32542 +
                    (C10225 * C2100 + C32919 * C2109 + C10224 * C353 +
                     C10221 * C368 + C10223 * C352 + C10220 * C367) *
                        C6200) *
                       C32951) *
                      C346 +
                  (((C10223 * C353 + C10220 * C368 + C10224 * C2100 +
                     C10221 * C2109 + C10225 * C2101 + C32919 * C2110) *
                        C6200 +
                    (C10223 * C369 + C10220 * C383 + C10224 * C2108 +
                     C10221 * C2118 + C10225 * C2111 + C32919 * C2119) *
                        C32542) *
                       C32951 +
                   ((C10223 * C1153 + C10220 * C1165 + C10224 * C2640 +
                     C10221 * C2643 + C10225 * C7054 + C32919 * C7058) *
                        C6200 +
                    (C10223 * C1166 + C10220 * C1180 + C10224 * C2644 +
                     C10221 * C2649 + C10225 * C7059 + C32919 * C7063) *
                        C32542) *
                       C32939 +
                   ((C10223 * C1156 + C10220 * C1171 + C10224 * C7053 +
                     C10221 * C7057 + C10225 * C7055 + C32919 * C7060) *
                        C6200 +
                    (C10223 * C1172 + C10220 * C1183 + C10224 * C7056 +
                     C10221 * C7062 + C10225 * C7061 + C32919 * C7064) *
                        C32542) *
                       C32916) *
                      C347) *
                 C32589 * C32577) /
                    (p * q * std::sqrt(p + q));
    d2ee[73] += (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                 (((((C113 * C119 + C32644 * C126) * C832 +
                     (C113 * C127 + C32644 * C140) * C826 + C168 * C833 +
                     C169 * C827 + C170 * C834 + C171 * C32905) *
                        C32951 +
                    (C1026 + C1027 + C992 + C993 + C994 + C995) * C32939 +
                    C1040 * C32916) *
                       C584 -
                   ((C1515 * C32905 + C1516 * C834 + C1517 * C827 +
                     C1518 * C833 + (C113 * C1163 + C32644 * C1179) * C826 +
                     (C113 * C1152 + C32644 * C1164) * C832) *
                        C32916 +
                    (C1519 * C32905 + C1520 * C834 + C1521 * C827 +
                     C1522 * C833 + (C113 * C702 + C32644 * C711) * C826 +
                     (C113 * C696 + C32644 * C701) * C832) *
                        C32939 +
                    (C611 * C32905 + C612 * C834 + C613 * C827 + C614 * C833 +
                     (C113 * C366 + C32644 * C382) * C826 +
                     (C113 * C352 + C32644 * C367) * C832) *
                        C32951) *
                       C585) *
                      C32589 * C472 +
                  (((C614 * C832 + C613 * C826 + C612 * C833 + C611 * C827 +
                     C610 * C834 + C609 * C32905) *
                        C32951 +
                    (C1522 * C832 + C1521 * C826 + C1520 * C833 + C1519 * C827 +
                     (C113 * C699 + C32644 * C707) * C834 +
                     (C113 * C708 + C32644 * C714) * C32905) *
                        C32939 +
                    (C1518 * C832 + C1517 * C826 + C1516 * C833 + C1515 * C827 +
                     (C113 * C1494 + C32644 * C1495) * C834 +
                     (C113 * C1496 + C32644 * C1497) * C32905) *
                        C32916) *
                       C585 -
                   ((C1348 + C1347 + C1346 + C1345 + C1344 + C1343) * C32916 +
                    (C1342 + C1341 + C1340 + C1339 + C1338 + C1337) * C32939 +
                    (C173 * C32905 + C172 * C834 + C171 * C827 + C170 * C833 +
                     C169 * C826 + C168 * C832) *
                        C32951) *
                       C584) *
                      C32589 * C473)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                 ((((C113 * C119 + C32644 * C126) * C114 +
                    (C113 * C127 + C32644 * C140) * C102 + C168 * C115 +
                    C169 * C103 + C170 * C116 + C171 * C104 + C172 * C117 +
                    C173 * C105 + C174 * C118 + C175 * C106) *
                       C32633 * C584 -
                   (C607 * C106 + C608 * C118 + C609 * C105 + C610 * C117 +
                    C611 * C104 + C612 * C116 + C613 * C103 + C614 * C115 +
                    (C113 * C366 + C32644 * C382) * C102 +
                    (C113 * C352 + C32644 * C367) * C114) *
                       C32633 * C585) *
                      C32589 * C472 +
                  ((C614 * C114 + C613 * C102 + C612 * C115 + C611 * C103 +
                    C610 * C116 + C609 * C104 + C608 * C117 + C607 * C105 +
                    (C113 * C586 + C32644 * C587) * C118 +
                    (C113 * C588 + C32644 * C589) * C106) *
                       C32633 * C585 -
                   (C176 * C106 + C177 * C118 + C175 * C105 + C174 * C117 +
                    C173 * C104 + C172 * C116 + C171 * C103 + C170 * C115 +
                    C169 * C102 + C168 * C114) *
                       C32633 * C584) *
                      C32589 * C473)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                 (((((C113 * C119 + C32644 * C126) * C5424 +
                     (C113 * C127 + C32644 * C140) * C32948 + C168 * C5425 +
                     C169 * C32935 + C170 * C5426 + C171 * C32905) *
                        C5421 +
                    (C5538 + C5539 + C5540 + C5541 + C5542 + C5543) * C5422 +
                    C5560 * C32916) *
                       C584 -
                   ((C1515 * C32905 + C1516 * C5426 + C1517 * C32935 +
                     C1518 * C5425 + C1697 * C32948 + C1698 * C5424) *
                        C32916 +
                    (C1519 * C32905 + C1520 * C5426 + C1521 * C32935 +
                     C1522 * C5425 + C1699 * C32948 + C1700 * C5424) *
                        C5422 +
                    (C611 * C32905 + C612 * C5426 + C613 * C32935 +
                     C614 * C5425 + (C113 * C366 + C32644 * C382) * C32948 +
                     (C113 * C352 + C32644 * C367) * C5424) *
                        C5421) *
                       C585) *
                      C32589 * C472 +
                  (((C614 * C5424 + C613 * C32948 + C612 * C5425 +
                     C611 * C32935 + C610 * C5426 + C609 * C32905) *
                        C5421 +
                    (C1522 * C5424 + C1521 * C32948 + C1520 * C5425 +
                     C1519 * C32935 + C3246 * C5426 + C3245 * C32905) *
                        C5422 +
                    (C1518 * C5424 + C1517 * C32948 + C1516 * C5425 +
                     C1515 * C32935 + (C113 * C1494 + C32644 * C1495) * C5426 +
                     (C113 * C1496 + C32644 * C1497) * C32905) *
                        C32916) *
                       C585 -
                   ((C5828 + C5827 + C5826 + C5825 + C5824 + C5823) * C32916 +
                    (C5822 + C5821 + C5820 + C5819 + C5818 + C5817) * C5422 +
                    (C173 * C32905 + C172 * C5426 + C171 * C32935 +
                     C170 * C5425 + C169 * C32948 + C168 * C5424) *
                        C5421) *
                       C584) *
                      C32589 * C473)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                 (((((C113 * C119 + C32644 * C126) * C6200 +
                     (C113 * C127 + C32644 * C140) * C32542) *
                        C6195 +
                    (C6272 + C6273) * C6196 + C6286 * C6197 + C6287 * C6198 +
                    C6296 * C6199) *
                       C584 -
                   (((C113 * C6361 + C32644 * C6367) * C32542 +
                     (C113 * C6358 + C32644 * C6362) * C6200) *
                        C6199 +
                    ((C113 * C1672 + C32644 * C1677) * C32542 +
                     (C113 * C1668 + C32644 * C1671) * C6200) *
                        C6198 +
                    (C1697 * C32542 + C1698 * C6200) * C6197 +
                    (C1699 * C32542 + C1700 * C6200) * C6196 +
                    ((C113 * C366 + C32644 * C382) * C32542 +
                     (C113 * C352 + C32644 * C367) * C6200) *
                        C6195) *
                       C585) *
                      C32589 * C472 +
                  (((C614 * C6200 + C613 * C32542) * C6195 +
                    (C1522 * C6200 + C1521 * C32542) * C6196 +
                    (C1518 * C6200 + C1517 * C32542) * C6197 +
                    ((C113 * C1669 + C32644 * C1673) * C6200 +
                     (C113 * C1674 + C32644 * C1678) * C32542) *
                        C6198 +
                    ((C113 * C6552 + C32644 * C6553) * C6200 +
                     (C113 * C6554 + C32644 * C6555) * C32542) *
                        C6199) *
                       C585 -
                   ((C6470 + C6469) * C6199 + (C6462 + C6461) * C6198 +
                    (C6460 + C6459) * C6197 + (C6458 + C6457) * C6196 +
                    (C169 * C32542 + C168 * C6200) * C6195) *
                       C584) *
                      C32589 * C473)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C10223 * C119 + C10220 * C126 + C10224 * C352 +
                     C10221 * C367 + C10225 * C353 + C32919 * C368) *
                        C5424 +
                    (C10223 * C127 + C10220 * C140 + C10224 * C366 +
                     C10221 * C382 + C10225 * C369 + C32919 * C383) *
                        C32948 +
                    (C10263 + C10264 + C10265) * C5425 +
                    (C10266 + C10267 + C10268) * C32935 + C10283 * C5426 +
                    C10284 * C32905) *
                       C32633 * C584 -
                   ((C10857 + C10858 + C10859) * C32905 +
                    (C10860 + C10861 + C10862) * C5426 +
                    (C10863 + C10864 + C10865) * C32935 +
                    (C10866 + C10867 + C10868) * C5425 +
                    (C10225 * C2108 + C32919 * C2118 + C10224 * C369 +
                     C10221 * C383 + C10223 * C366 + C10220 * C382) *
                        C32948 +
                    (C10225 * C2100 + C32919 * C2109 + C10224 * C353 +
                     C10221 * C368 + C10223 * C352 + C10220 * C367) *
                        C5424) *
                       C32633 * C585) *
                      C32589 * C472 +
                  (((C10868 + C10867 + C10866) * C5424 +
                    (C10865 + C10864 + C10863) * C32948 +
                    (C10862 + C10861 + C10860) * C5425 +
                    (C10859 + C10858 + C10857) * C32935 +
                    (C10223 * C349 + C10220 * C361 + C10224 * C356 +
                     C10221 * C374 + C10225 * C2454 + C32919 * C2455) *
                        C5426 +
                    (C10223 * C360 + C10220 * C379 + C10224 * C375 +
                     C10221 * C386 + C10225 * C2456 + C32919 * C2457) *
                        C32905) *
                       C32633 * C585 -
                   ((C10275 + C10276 + C10277) * C32905 +
                    (C10278 + C10279 + C10280) * C5426 +
                    (C10274 + C10273 + C10272) * C32935 +
                    (C10271 + C10270 + C10269) * C5425 +
                    (C10268 + C10267 + C10266) * C32948 +
                    (C10265 + C10264 + C10263) * C5424) *
                       C32633 * C584) *
                      C32589 * C473)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((((C10223 * C119 + C10220 * C126 + C10224 * C352 +
                      C10221 * C367 + C10225 * C353 + C32919 * C368) *
                         C6200 +
                     (C10223 * C127 + C10220 * C140 + C10224 * C366 +
                      C10221 * C382 + C10225 * C369 + C32919 * C383) *
                         C32542) *
                        C32951 +
                    ((C11271 + C11272 + C11273) * C6200 +
                     (C11274 + C11275 + C11276) * C32542) *
                        C32939 +
                    C11295 * C32916) *
                       C584 -
                   (((C10225 * C7056 + C32919 * C7062 + C10224 * C1172 +
                      C10221 * C1183 + C10223 * C1163 + C10220 * C1179) *
                         C32542 +
                     (C10225 * C7053 + C32919 * C7057 + C10224 * C1156 +
                      C10221 * C1171 + C10223 * C1152 + C10220 * C1164) *
                         C6200) *
                        C32916 +
                    ((C10225 * C2644 + C32919 * C2649 + C10224 * C1166 +
                      C10221 * C1180 + C10223 * C702 + C10220 * C711) *
                         C32542 +
                     (C10225 * C2640 + C32919 * C2643 + C10224 * C1153 +
                      C10221 * C1165 + C10223 * C696 + C10220 * C701) *
                         C6200) *
                        C32939 +
                    ((C10225 * C2108 + C32919 * C2118 + C10224 * C369 +
                      C10221 * C383 + C10223 * C366 + C10220 * C382) *
                         C32542 +
                     (C10225 * C2100 + C32919 * C2109 + C10224 * C353 +
                      C10221 * C368 + C10223 * C352 + C10220 * C367) *
                         C6200) *
                        C32951) *
                       C585) *
                      C32589 * C472 +
                  ((((C10868 + C10867 + C10866) * C6200 +
                     (C10865 + C10864 + C10863) * C32542) *
                        C32951 +
                    ((C10223 * C697 + C10220 * C703 + C10224 * C1154 +
                      C10221 * C1167 + C10225 * C2641 + C32919 * C2645) *
                         C6200 +
                     (C10223 * C704 + C10220 * C712 + C10224 * C1168 +
                      C10221 * C1181 + C10225 * C2646 + C32919 * C2650) *
                         C32542) *
                        C32939 +
                    ((C10223 * C1151 + C10220 * C1162 + C10224 * C1157 +
                      C10221 * C1173 + C10225 * C7379 + C32919 * C7380) *
                         C6200 +
                     (C10223 * C1161 + C10220 * C1178 + C10224 * C1174 +
                      C10221 * C1184 + C10225 * C7381 + C32919 * C7382) *
                         C32542) *
                        C32916) *
                       C585 -
                   (((C11569 + C11568 + C11567) * C32542 +
                     (C11566 + C11565 + C11564) * C6200) *
                        C32916 +
                    ((C10681 + C10682 + C10683) * C32542 +
                     (C10684 + C10685 + C10686) * C6200) *
                        C32939 +
                    ((C10268 + C10267 + C10266) * C32542 +
                     (C10265 + C10264 + C10263) * C6200) *
                        C32951) *
                       C584) *
                      C32589 * C473)) /
                    (p * q * std::sqrt(p + q));
    d2ee[74] += (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
                 (((C113 * C119 + C32644 * C126) * C114 +
                   (C113 * C127 + C32644 * C140) * C102 + C168 * C115 +
                   C169 * C103 + C170 * C116 + C171 * C104 + C172 * C117 +
                   C173 * C105 + C174 * C118 + C175 * C106) *
                      C32633 * C32603 * C239 -
                  ((C113 * C253 + C32644 * C273) * C106 +
                   (C113 * C243 + C32644 * C254) * C118 +
                   (C113 * C255 + C32644 * C274) * C105 +
                   (C113 * C244 + C32644 * C256) * C117 +
                   (C113 * C257 + C32644 * C275) * C104 +
                   (C113 * C245 + C32644 * C258) * C116 +
                   (C113 * C259 + C32644 * C276) * C103 +
                   (C113 * C246 + C32644 * C260) * C115 +
                   (C113 * C261 + C32644 * C277) * C102 +
                   (C113 * C247 + C32644 * C262) * C114) *
                      C32633 * C32603 * C240 +
                  ((C113 * C248 + C32644 * C263) * C114 +
                   (C113 * C264 + C32644 * C278) * C102 +
                   (C113 * C249 + C32644 * C265) * C115 +
                   (C113 * C266 + C32644 * C279) * C103 +
                   (C113 * C250 + C32644 * C267) * C116 +
                   (C113 * C268 + C32644 * C280) * C104 +
                   (C113 * C251 + C32644 * C269) * C117 +
                   (C113 * C270 + C32644 * C281) * C105 +
                   (C113 * C252 + C32644 * C271) * C118 +
                   (C113 * C272 + C32644 * C282) * C106) *
                      C32633 * C32603 * C241) *
                 C32577) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
                 (((C113 * C119 + C32644 * C126) * C114 +
                   (C113 * C127 + C32644 * C140) * C102 + C168 * C115 +
                   C169 * C103 + C170 * C116 + C171 * C104 + C172 * C117 +
                   C173 * C105 + C174 * C118 + C175 * C106) *
                      C32633 * C32603 * C32589 * C110 -
                  (C176 * C106 + C177 * C118 + C175 * C105 + C174 * C117 +
                   C173 * C104 + C172 * C116 + C171 * C103 + C170 * C115 +
                   C169 * C102 + C168 * C114) *
                      C32633 * C32603 * C32589 * C111 +
                  (C170 * C114 + C171 * C102 + C172 * C115 + C173 * C103 +
                   C174 * C116 + C175 * C104 + C177 * C117 + C176 * C105 +
                   (C113 * C125 + C32644 * C138) * C118 +
                   (C113 * C139 + C32644 * C146) * C106) *
                      C32633 * C32603 * C32589 * C112)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
                 ((((C113 * C119 + C32644 * C126) * C832 +
                    (C113 * C127 + C32644 * C140) * C826 + C168 * C833 +
                    C169 * C827 + C170 * C834 + C171 * C32905) *
                       C32951 +
                   ((C113 * C247 + C32644 * C262) * C832 +
                    (C113 * C261 + C32644 * C277) * C826 + C502 * C833 +
                    C501 * C827 + C500 * C834 + C499 * C32905) *
                       C32939 +
                   ((C113 * C248 + C32644 * C263) * C832 +
                    (C113 * C264 + C32644 * C278) * C826 + C848 * C833 +
                    C849 * C827 + C850 * C834 + C851 * C32905) *
                       C32916) *
                      C32603 * C32589 * C110 -
                  ((C852 * C32905 + C853 * C834 + C851 * C827 + C850 * C833 +
                    C849 * C826 + C848 * C832) *
                       C32916 +
                   (C497 * C32905 + C498 * C834 + C499 * C827 + C500 * C833 +
                    C501 * C826 + C502 * C832) *
                       C32939 +
                   (C173 * C32905 + C172 * C834 + C171 * C827 + C170 * C833 +
                    C169 * C826 + C168 * C832) *
                       C32951) *
                      C32603 * C32589 * C111 +
                  ((C170 * C832 + C171 * C826 + C172 * C833 + C173 * C827 +
                    C174 * C834 + C175 * C32905) *
                       C32951 +
                   (C500 * C832 + C499 * C826 + C498 * C833 + C497 * C827 +
                    C496 * C834 + C495 * C32905) *
                       C32939 +
                   (C850 * C832 + C851 * C826 + C853 * C833 + C852 * C827 +
                    (C113 * C252 + C32644 * C271) * C834 +
                    (C113 * C272 + C32644 * C282) * C32905) *
                       C32916) *
                      C32603 * C32589 * C112)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
                 ((((C113 * C119 + C32644 * C126) * C832 +
                    (C113 * C127 + C32644 * C140) * C826 + C168 * C833 +
                    C169 * C827 + C170 * C834 + C171 * C32905) *
                       C32951 +
                   (C1026 + C1027 + C992 + C993 + C994 + C995) * C32939 +
                   C1040 * C32916) *
                      C32603 * C239 -
                  ((C1030 + C1031 + C1032 + C1033 + C1034 + C1035) * C32916 +
                   (C1003 + C1002 + C1001 + C1000 + C1029 + C1028) * C32939 +
                   (C995 + C994 + C993 + C992 + C1027 + C1026) * C32951) *
                      C32603 * C240 +
                  (C1040 * C32951 +
                   (C1035 + C1034 + C1033 + C1032 + C1031 + C1030) * C32939 +
                   ((C113 * C966 + C32644 * C975) * C832 +
                    (C113 * C976 + C32644 * C984) * C826 +
                    (C113 * C967 + C32644 * C977) * C833 +
                    (C113 * C978 + C32644 * C985) * C827 +
                    (C113 * C968 + C32644 * C979) * C834 +
                    (C113 * C980 + C32644 * C986) * C32905) *
                       C32916) *
                      C32603 * C241) *
                 C32577) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
                 ((((C113 * C119 + C32644 * C126) * C5424 +
                    (C113 * C127 + C32644 * C140) * C32948 + C168 * C5425 +
                    C169 * C32935 + C170 * C5426 + C171 * C32905) *
                       C5421 +
                   (C1016 * C5424 + C1017 * C32948 + C502 * C5425 +
                    C501 * C32935 + C500 * C5426 + C499 * C32905) *
                       C5422 +
                   (C1018 * C5424 + C1019 * C32948 + C848 * C5425 +
                    C849 * C32935 + C850 * C5426 + C851 * C32905) *
                       C32916) *
                      C32603 * C32589 * C110 -
                  ((C852 * C32905 + C853 * C5426 + C851 * C32935 +
                    C850 * C5425 + C849 * C32948 + C848 * C5424) *
                       C32916 +
                   (C497 * C32905 + C498 * C5426 + C499 * C32935 +
                    C500 * C5425 + C501 * C32948 + C502 * C5424) *
                       C5422 +
                   (C173 * C32905 + C172 * C5426 + C171 * C32935 +
                    C170 * C5425 + C169 * C32948 + C168 * C5424) *
                       C5421) *
                      C32603 * C32589 * C111 +
                  ((C170 * C5424 + C171 * C32948 + C172 * C5425 +
                    C173 * C32935 + C174 * C5426 + C175 * C32905) *
                       C5421 +
                   (C500 * C5424 + C499 * C32948 + C498 * C5425 +
                    C497 * C32935 + C496 * C5426 + C495 * C32905) *
                       C5422 +
                   (C850 * C5424 + C851 * C32948 + C853 * C5425 +
                    C852 * C32935 + (C113 * C252 + C32644 * C271) * C5426 +
                    (C113 * C272 + C32644 * C282) * C32905) *
                       C32916) *
                      C32603 * C32589 * C112)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
                 ((((C113 * C119 + C32644 * C126) * C5424 +
                    (C113 * C127 + C32644 * C140) * C32948 + C168 * C5425 +
                    C169 * C32935 + C170 * C5426 + C171 * C32905) *
                       C5421 +
                   (C5538 + C5539 + C5540 + C5541 + C5542 + C5543) * C5422 +
                   C5560 * C32916) *
                      C32603 * C239 -
                  ((C5550 + C5551 + C5552 + C5553 + C5554 + C5555) * C32916 +
                   (C5549 + C5548 + C5547 + C5546 + C5545 + C5544) * C5422 +
                   (C5543 + C5542 + C5541 + C5540 + C5539 + C5538) * C5421) *
                      C32603 * C240 +
                  (C5560 * C5421 +
                   (C5555 + C5554 + C5553 + C5552 + C5551 + C5550) * C5422 +
                   ((C113 * C966 + C32644 * C975) * C5424 +
                    (C113 * C976 + C32644 * C984) * C32948 +
                    (C113 * C967 + C32644 * C977) * C5425 +
                    (C113 * C978 + C32644 * C985) * C32935 +
                    (C113 * C968 + C32644 * C979) * C5426 +
                    (C113 * C980 + C32644 * C986) * C32905) *
                       C32916) *
                      C32603 * C241) *
                 C32577) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
                 ((((C113 * C119 + C32644 * C126) * C6200 +
                    (C113 * C127 + C32644 * C140) * C32542) *
                       C6195 +
                   (C1016 * C6200 + C1017 * C32542) * C6196 +
                   (C1018 * C6200 + C1019 * C32542) * C6197 +
                   (C1025 * C6200 + C1024 * C32542) * C6198 +
                   ((C113 * C966 + C32644 * C975) * C6200 +
                    (C113 * C976 + C32644 * C984) * C32542) *
                       C6199) *
                      C32603 * C32589 * C110 -
                  (((C113 * C978 + C32644 * C985) * C32542 +
                    (C113 * C967 + C32644 * C977) * C6200) *
                       C6199 +
                   (C1022 * C32542 + C1023 * C6200) * C6198 +
                   (C849 * C32542 + C848 * C6200) * C6197 +
                   (C501 * C32542 + C502 * C6200) * C6196 +
                   (C169 * C32542 + C168 * C6200) * C6195) *
                      C32603 * C32589 * C111 +
                  ((C170 * C6200 + C171 * C32542) * C6195 +
                   (C500 * C6200 + C499 * C32542) * C6196 +
                   (C850 * C6200 + C851 * C32542) * C6197 +
                   (C1021 * C6200 + C1020 * C32542) * C6198 +
                   ((C113 * C968 + C32644 * C979) * C6200 +
                    (C113 * C980 + C32644 * C986) * C32542) *
                       C6199) *
                      C32603 * C32589 * C112)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
                 ((((C113 * C119 + C32644 * C126) * C6200 +
                    (C113 * C127 + C32644 * C140) * C32542) *
                       C6195 +
                   (C6272 + C6273) * C6196 + C6286 * C6197 + C6287 * C6198 +
                   C6296 * C6199) *
                      C32603 * C239 -
                  ((C6294 + C6295) * C6199 + (C6293 + C6292) * C6198 +
                   (C6277 + C6276) * C6197 + (C6275 + C6274) * C6196 +
                   (C6273 + C6272) * C6195) *
                      C32603 * C240 +
                  (C6286 * C6195 + C6287 * C6196 + C6296 * C6197 +
                   (C6295 + C6294) * C6198 +
                   ((C113 * C6264 + C32644 * C6267) * C6200 +
                    (C113 * C6268 + C32644 * C6270) * C32542) *
                       C6199) *
                      C32603 * C241) *
                 C32577) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                 (((C10223 * C119 + C10220 * C126 + C10224 * C352 +
                    C10221 * C367 + C10225 * C353 + C32919 * C368) *
                       C5424 +
                   (C10223 * C127 + C10220 * C140 + C10224 * C366 +
                    C10221 * C382 + C10225 * C369 + C32919 * C383) *
                       C32948 +
                   (C10263 + C10264 + C10265) * C5425 +
                   (C10266 + C10267 + C10268) * C32935 + C10283 * C5426 +
                   C10284 * C32905) *
                      C32633 * C32603 * C32589 * C110 -
                  ((C10275 + C10276 + C10277) * C32905 +
                   (C10278 + C10279 + C10280) * C5426 +
                   (C10274 + C10273 + C10272) * C32935 +
                   (C10271 + C10270 + C10269) * C5425 +
                   (C10268 + C10267 + C10266) * C32948 +
                   (C10265 + C10264 + C10263) * C5424) *
                      C32633 * C32603 * C32589 * C111 +
                  (C10283 * C5424 + C10284 * C32948 +
                   (C10280 + C10279 + C10278) * C5425 +
                   (C10277 + C10276 + C10275) * C32935 +
                   (C10223 * C123 + C10220 * C134 + C10224 * C348 +
                    C10221 * C359 + C10225 * C357 + C32919 * C376) *
                       C5426 +
                   (C10223 * C135 + C10220 * C144 + C10224 * C358 +
                    C10221 * C378 + C10225 * C377 + C32919 * C387) *
                       C32905) *
                      C32633 * C32603 * C32589 * C112)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                 (((C10223 * C119 + C10220 * C126 + C10224 * C352 +
                    C10221 * C367 + C10225 * C353 + C32919 * C368) *
                       C5424 +
                   (C10223 * C127 + C10220 * C140 + C10224 * C366 +
                    C10221 * C382 + C10225 * C369 + C32919 * C383) *
                       C32948 +
                   (C10263 + C10264 + C10265) * C5425 +
                   (C10266 + C10267 + C10268) * C32935 + C10283 * C5426 +
                   C10284 * C32905) *
                      C32633 * C32603 * C239 -
                  ((C10225 * C1170 + C32919 * C1182 + C10224 * C706 +
                    C10221 * C713 + C10223 * C257 + C10220 * C275) *
                       C32905 +
                   (C10225 * C1155 + C32919 * C1169 + C10224 * C698 +
                    C10221 * C705 + C10223 * C245 + C10220 * C258) *
                       C5426 +
                   (C10225 * C1168 + C32919 * C1181 + C10224 * C704 +
                    C10221 * C712 + C10223 * C259 + C10220 * C276) *
                       C32935 +
                   (C10225 * C1154 + C32919 * C1167 + C10224 * C697 +
                    C10221 * C703 + C10223 * C246 + C10220 * C260) *
                       C5425 +
                   (C10225 * C1166 + C32919 * C1180 + C10224 * C702 +
                    C10221 * C711 + C10223 * C261 + C10220 * C277) *
                       C32948 +
                   (C10225 * C1153 + C32919 * C1165 + C10224 * C696 +
                    C10221 * C701 + C10223 * C247 + C10220 * C262) *
                       C5424) *
                      C32633 * C32603 * C240 +
                  ((C10223 * C248 + C10220 * C263 + C10224 * C1152 +
                    C10221 * C1164 + C10225 * C1156 + C32919 * C1171) *
                       C5424 +
                   (C10223 * C264 + C10220 * C278 + C10224 * C1163 +
                    C10221 * C1179 + C10225 * C1172 + C32919 * C1183) *
                       C32948 +
                   (C10223 * C249 + C10220 * C265 + C10224 * C1151 +
                    C10221 * C1162 + C10225 * C1157 + C32919 * C1173) *
                       C5425 +
                   (C10223 * C266 + C10220 * C279 + C10224 * C1161 +
                    C10221 * C1178 + C10225 * C1174 + C32919 * C1184) *
                       C32935 +
                   (C10223 * C250 + C10220 * C267 + C10224 * C1150 +
                    C10221 * C1160 + C10225 * C1158 + C32919 * C1175) *
                       C5426 +
                   (C10223 * C268 + C10220 * C280 + C10224 * C1159 +
                    C10221 * C1177 + C10225 * C1176 + C32919 * C1185) *
                       C32905) *
                      C32633 * C32603 * C241) *
                 C32577) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                 ((((C10223 * C119 + C10220 * C126 + C10224 * C352 +
                     C10221 * C367 + C10225 * C353 + C32919 * C368) *
                        C6200 +
                    (C10223 * C127 + C10220 * C140 + C10224 * C366 +
                     C10221 * C382 + C10225 * C369 + C32919 * C383) *
                        C32542) *
                       C32951 +
                   ((C10223 * C247 + C10220 * C262 + C10224 * C696 +
                     C10221 * C701 + C10225 * C1153 + C32919 * C1165) *
                        C6200 +
                    (C10223 * C261 + C10220 * C277 + C10224 * C702 +
                     C10221 * C711 + C10225 * C1166 + C32919 * C1180) *
                        C32542) *
                       C32939 +
                   ((C10223 * C248 + C10220 * C263 + C10224 * C1152 +
                     C10221 * C1164 + C10225 * C1156 + C32919 * C1171) *
                        C6200 +
                    (C10223 * C264 + C10220 * C278 + C10224 * C1163 +
                     C10221 * C1179 + C10225 * C1172 + C32919 * C1183) *
                        C32542) *
                       C32916) *
                      C32603 * C32589 * C110 -
                  (((C10225 * C1174 + C32919 * C1184 + C10224 * C1161 +
                     C10221 * C1178 + C10223 * C266 + C10220 * C279) *
                        C32542 +
                    (C10225 * C1157 + C32919 * C1173 + C10224 * C1151 +
                     C10221 * C1162 + C10223 * C249 + C10220 * C265) *
                        C6200) *
                       C32916 +
                   ((C10681 + C10682 + C10683) * C32542 +
                    (C10684 + C10685 + C10686) * C6200) *
                       C32939 +
                   ((C10268 + C10267 + C10266) * C32542 +
                    (C10265 + C10264 + C10263) * C6200) *
                       C32951) *
                      C32603 * C32589 * C111 +
                  ((C10283 * C6200 + C10284 * C32542) * C32951 +
                   ((C10680 + C10679 + C10678) * C6200 +
                    (C10677 + C10676 + C10675) * C32542) *
                       C32939 +
                   ((C10223 * C250 + C10220 * C267 + C10224 * C1150 +
                     C10221 * C1160 + C10225 * C1158 + C32919 * C1175) *
                        C6200 +
                    (C10223 * C268 + C10220 * C280 + C10224 * C1159 +
                     C10221 * C1177 + C10225 * C1176 + C32919 * C1185) *
                        C32542) *
                       C32916) *
                      C32603 * C32589 * C112)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                 ((((C10223 * C119 + C10220 * C126 + C10224 * C352 +
                     C10221 * C367 + C10225 * C353 + C32919 * C368) *
                        C6200 +
                    (C10223 * C127 + C10220 * C140 + C10224 * C366 +
                     C10221 * C382 + C10225 * C369 + C32919 * C383) *
                        C32542) *
                       C32951 +
                   ((C11271 + C11272 + C11273) * C6200 +
                    (C11274 + C11275 + C11276) * C32542) *
                       C32939 +
                   C11295 * C32916) *
                      C32603 * C239 -
                  (((C11283 + C11284 + C11285) * C32542 +
                    (C11286 + C11287 + C11288) * C6200) *
                       C32916 +
                   ((C11282 + C11281 + C11280) * C32542 +
                    (C11279 + C11278 + C11277) * C6200) *
                       C32939 +
                   ((C11276 + C11275 + C11274) * C32542 +
                    (C11273 + C11272 + C11271) * C6200) *
                       C32951) *
                      C32603 * C240 +
                  (C11295 * C32951 +
                   ((C11288 + C11287 + C11286) * C6200 +
                    (C11285 + C11284 + C11283) * C32542) *
                       C32939 +
                   ((C10223 * C966 + C10220 * C975 + C10224 * C6358 +
                     C10221 * C6362 + C10225 * C6360 + C32919 * C6365) *
                        C6200 +
                    (C10223 * C976 + C10220 * C984 + C10224 * C6361 +
                     C10221 * C6367 + C10225 * C6366 + C32919 * C6369) *
                        C32542) *
                       C32916) *
                      C32603 * C241) *
                 C32577) /
                    (p * q * std::sqrt(p + q));
    d2ee[75] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C20430 * C119 + C20428 * C126 + C20431 * C352 + C32731 * C367) *
                 C31569 +
             (C20430 * C127 + C20428 * C140 + C20431 * C366 + C32731 * C382) *
                 C32547 +
             (C20465 + C20466) * C31565 + (C20467 + C20468) * C32555 +
             C20481 * C31575 + C20482 * C17571) *
                C32885 +
            ((C21493 + C21494) * C31569 + (C21495 + C21496) * C32547 +
             C21858 * C31565 + C21859 * C32555 + C23234 * C31575 +
             C23235 * C17571) *
                C32691) *
               C32603 * C470 -
           (((C21309 + C21310) * C17571 + (C21311 + C21312) * C31575 +
             C21860 * C32555 + C21861 * C31565 + (C21500 + C21499) * C32547 +
             (C21498 + C21497) * C31569) *
                C32691 +
            (C23722 * C17571 + C23723 * C31575 + C21862 * C32555 +
             C21863 * C31565 + (C21496 + C21495) * C32547 +
             (C21494 + C21493) * C31569) *
                C32885) *
               C32603 * C471) *
              C472 +
          (((C21858 * C31569 + C21859 * C32547 + C23234 * C31565 +
             C23235 * C32555 + (C20838 + C20837) * C31575 +
             (C20836 + C20835) * C17571) *
                C32885 +
            (C21475 * C31569 + C21476 * C32547 + (C21312 + C21311) * C31565 +
             (C21310 + C21309) * C32555 +
             (C20430 * C251 + C20428 * C269 + C20431 * C1494 + C32731 * C1495) *
                 C31575 +
             (C20430 * C270 + C20428 * C281 + C20431 * C1496 + C32731 * C1497) *
                 C17571) *
                C32691) *
               C32603 * C471 -
           (((C20835 + C20836) * C17571 + (C20837 + C20838) * C31575 +
             C23722 * C32555 + C23723 * C31565 + C21862 * C32547 +
             C21863 * C31569) *
                C32691 +
            ((C20476 + C20475) * C17571 + (C20474 + C20473) * C31575 +
             (C20472 + C20471) * C32555 + (C20470 + C20469) * C31565 +
             (C20468 + C20467) * C32547 + (C20466 + C20465) * C31569) *
                C32885) *
               C32603 * C470) *
              C473)) /
        (p * q * std::sqrt(p + q));
    d2ee[76] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C20430 * C119 + C20428 * C126 + C20431 * C352 + C32731 * C367) *
                 C31569 +
             (C20430 * C127 + C20428 * C140 + C20431 * C366 + C32731 * C382) *
                 C32547 +
             (C20465 + C20466) * C31565 + (C20467 + C20468) * C32555 +
             C20481 * C31575 + C20482 * C17571) *
                C32885 +
            ((C21493 + C21494) * C31569 + (C21495 + C21496) * C32547 +
             C21858 * C31565 + C21859 * C32555 + C23234 * C31575 +
             C23235 * C17571) *
                C32691) *
               C584 -
           (((C23926 + C23927) * C17571 + (C23928 + C23929) * C31575 +
             (C22078 + C22079) * C32555 + (C22080 + C22081) * C31565 +
             (C22296 + C22297) * C32547 + (C22298 + C22299) * C31569) *
                C32691 +
            ((C21005 + C21006) * C17571 + (C21007 + C21008) * C31575 +
             (C21009 + C21010) * C32555 + (C21011 + C21012) * C31565 +
             (C20431 * C369 + C32731 * C383 + C20430 * C366 + C20428 * C382) *
                 C32547 +
             (C20431 * C353 + C32731 * C368 + C20430 * C352 + C20428 * C367) *
                 C31569) *
                C32885) *
               C585) *
              C470 +
          ((((C22299 + C22298) * C31569 + (C22297 + C22296) * C32547 +
             (C22081 + C22080) * C31565 + (C22079 + C22078) * C32555 +
             (C23929 + C23928) * C31575 + (C23927 + C23926) * C17571) *
                C32885 +
            ((C22295 + C22294) * C31569 + (C22293 + C22292) * C32547 +
             (C22077 + C22076) * C31565 + (C22075 + C22074) * C32555 +
             (C20430 * C1150 + C20428 * C1160 + C20431 * C1158 +
              C32731 * C1175) *
                 C31575 +
             (C20430 * C1159 + C20428 * C1177 + C20431 * C1176 +
              C32731 * C1185) *
                 C17571) *
                C32691) *
               C585 -
           (((C21309 + C21310) * C17571 + (C21311 + C21312) * C31575 +
             C21860 * C32555 + C21861 * C31565 + (C21500 + C21499) * C32547 +
             (C21498 + C21497) * C31569) *
                C32691 +
            (C23722 * C17571 + C23723 * C31575 + C21862 * C32555 +
             C21863 * C31565 + (C21496 + C21495) * C32547 +
             (C21494 + C21493) * C31569) *
                C32885) *
               C584) *
              C471) *
         C32577) /
        (p * q * std::sqrt(p + q));
    d2ee[77] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C20430 * C119 + C20428 * C126 + C20431 * C352 + C32731 * C367) *
                C31569 +
            (C20430 * C127 + C20428 * C140 + C20431 * C366 + C32731 * C382) *
                C32547 +
            (C20465 + C20466) * C31565 + (C20467 + C20468) * C32555 +
            C20481 * C31575 + C20482 * C17571) *
               C32885 +
           ((C21493 + C21494) * C31569 + (C21495 + C21496) * C32547 +
            C21858 * C31565 + C21859 * C32555 + C23234 * C31575 +
            C23235 * C17571) *
               C32691) *
              C32603 * C239 -
          (((C21309 + C21310) * C17571 + (C21311 + C21312) * C31575 +
            C21860 * C32555 + C21861 * C31565 + (C21500 + C21499) * C32547 +
            (C21498 + C21497) * C31569) *
               C32691 +
           ((C20839 + C20840) * C17571 + (C20841 + C20842) * C31575 +
            C21862 * C32555 + C21863 * C31565 + (C21496 + C21495) * C32547 +
            (C21494 + C21493) * C31569) *
               C32885) *
              C32603 * C240 +
          ((C21511 * C31569 + C21512 * C32547 + C21475 * C31565 +
            C21476 * C32555 + (C21312 + C21311) * C31575 +
            (C21310 + C21309) * C17571) *
               C32885 +
           ((C21510 + C21509) * C31569 + (C21508 + C21507) * C32547 +
            (C21506 + C21505) * C31565 + (C21504 + C21503) * C32555 +
            (C20430 * C963 + C20428 * C970 + C20431 * C1670 + C32731 * C1675) *
                C31575 +
            (C20430 * C969 + C20428 * C981 + C20431 * C1676 + C32731 * C1679) *
                C17571) *
               C32691) *
              C32603 * C241) *
         C32577) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C20430 * C119 + C20428 * C126 + C20431 * C352 + C32731 * C367) *
                C31569 +
            (C20430 * C127 + C20428 * C140 + C20431 * C366 + C32731 * C382) *
                C32547 +
            (C20465 + C20466) * C31565 + (C20467 + C20468) * C32555 +
            C20481 * C31575 + C20482 * C17571) *
               C32885 +
           ((C21493 + C21494) * C31569 + (C21495 + C21496) * C32547 +
            C21858 * C31565 + C21859 * C32555 + C23234 * C31575 +
            C23235 * C17571) *
               C32691) *
              C32603 * C32589 * C110 -
          (((C20835 + C20836) * C17571 + (C20837 + C20838) * C31575 +
            (C20839 + C20840) * C32555 + (C20841 + C20842) * C31565 +
            C21862 * C32547 + C21863 * C31569) *
               C32691 +
           ((C20476 + C20475) * C17571 + (C20474 + C20473) * C31575 +
            (C20472 + C20471) * C32555 + (C20470 + C20469) * C31565 +
            (C20468 + C20467) * C32547 + (C20466 + C20465) * C31569) *
               C32885) *
              C32603 * C32589 * C111 +
          ((C20481 * C31569 + C20482 * C32547 + C20483 * C31565 +
            C20484 * C32555 + (C20480 + C20479) * C31575 +
            (C20478 + C20477) * C17571) *
               C32885 +
           (C23234 * C31569 + C23235 * C32547 + (C20838 + C20837) * C31565 +
            (C20836 + C20835) * C32555 +
            (C20430 * C243 + C20428 * C254 + C20431 * C700 + C32731 * C709) *
                C31575 +
            (C20430 * C253 + C20428 * C273 + C20431 * C710 + C32731 * C715) *
                C17571) *
               C32691) *
              C32603 * C32589 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C20430 * C119 + C20428 * C126 + C20431 * C352 + C32731 * C367) *
                C31569 +
            (C20430 * C127 + C20428 * C140 + C20431 * C366 + C32731 * C382) *
                C32547 +
            (C20465 + C20466) * C31565 + (C20467 + C20468) * C32555 +
            C20481 * C31575 + C20482 * C17571) *
               C32885 +
           ((C21493 + C21494) * C31569 + (C21495 + C21496) * C32547 +
            C21858 * C31565 + C21859 * C32555 + C23234 * C31575 +
            C23235 * C17571) *
               C32691) *
              C345 -
          (((C20431 * C1170 + C32731 * C1182 + C20430 * C706 + C20428 * C713) *
                C17571 +
            (C20431 * C1155 + C32731 * C1169 + C20430 * C698 + C20428 * C705) *
                C31575 +
            (C22078 + C22079) * C32555 + (C22080 + C22081) * C31565 +
            (C22296 + C22297) * C32547 + (C22298 + C22299) * C31569) *
               C32691 +
           ((C21005 + C21006) * C17571 + (C21007 + C21008) * C31575 +
            (C21009 + C21010) * C32555 + (C21011 + C21012) * C31565 +
            (C20431 * C369 + C32731 * C383 + C20430 * C366 + C20428 * C382) *
                C32547 +
            (C20431 * C353 + C32731 * C368 + C20430 * C352 + C20428 * C367) *
                C31569) *
               C32885) *
              C346 +
          (((C20430 * C353 + C20428 * C368 + C20431 * C2100 + C32731 * C2109) *
                C31569 +
            (C20430 * C369 + C20428 * C383 + C20431 * C2108 + C32731 * C2118) *
                C32547 +
            (C20430 * C354 + C20428 * C370 + C20431 * C2099 + C32731 * C2107) *
                C31565 +
            (C20430 * C371 + C20428 * C384 + C20431 * C2106 + C32731 * C2117) *
                C32555 +
            (C20430 * C355 + C20428 * C372 + C20431 * C2098 + C32731 * C2105) *
                C31575 +
            (C20430 * C373 + C20428 * C385 + C20431 * C2104 + C32731 * C2116) *
                C17571) *
               C32885 +
           ((C20430 * C1153 + C20428 * C1165 + C20431 * C2640 +
             C32731 * C2643) *
                C31569 +
            (C20430 * C1166 + C20428 * C1180 + C20431 * C2644 +
             C32731 * C2649) *
                C32547 +
            (C20430 * C1154 + C20428 * C1167 + C20431 * C2641 +
             C32731 * C2645) *
                C31565 +
            (C20430 * C1168 + C20428 * C1181 + C20431 * C2646 +
             C32731 * C2650) *
                C32555 +
            (C20430 * C1155 + C20428 * C1169 + C20431 * C2642 +
             C32731 * C2647) *
                C31575 +
            (C20430 * C1170 + C20428 * C1182 + C20431 * C2648 +
             C32731 * C2651) *
                C17571) *
               C32691) *
              C347) *
         C32589 * C32577) /
            (p * q * std::sqrt(p + q));
    d2ee[78] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C20430 * C119 + C20428 * C126 + C20431 * C352 + C32731 * C367) *
                 C31569 +
             (C20430 * C127 + C20428 * C140 + C20431 * C366 + C32731 * C382) *
                 C32547 +
             (C20465 + C20466) * C31565 + (C20467 + C20468) * C32555 +
             C20481 * C31575 + C20482 * C17571) *
                C32885 +
            ((C21493 + C21494) * C31569 + (C21495 + C21496) * C32547 +
             C21858 * C31565 + C21859 * C32555 + C23234 * C31575 +
             C23235 * C17571) *
                C32691) *
               C584 -
           (((C23926 + C23927) * C17571 + (C23928 + C23929) * C31575 +
             (C22078 + C22079) * C32555 + (C22080 + C22081) * C31565 +
             (C22296 + C22297) * C32547 + (C22298 + C22299) * C31569) *
                C32691 +
            ((C21005 + C21006) * C17571 + (C21007 + C21008) * C31575 +
             (C21009 + C21010) * C32555 + (C21011 + C21012) * C31565 +
             (C20431 * C369 + C32731 * C383 + C20430 * C366 + C20428 * C382) *
                 C32547 +
             (C20431 * C353 + C32731 * C368 + C20430 * C352 + C20428 * C367) *
                 C31569) *
                C32885) *
               C585) *
              C32589 * C472 +
          ((((C21012 + C21011) * C31569 + (C21010 + C21009) * C32547 +
             (C21008 + C21007) * C31565 + (C21006 + C21005) * C32555 +
             (C21004 + C21003) * C31575 + (C21002 + C21001) * C17571) *
                C32885 +
            ((C22081 + C22080) * C31569 + (C22079 + C22078) * C32547 +
             (C23929 + C23928) * C31565 + (C23927 + C23926) * C32555 +
             (C20430 * C699 + C20428 * C707 + C20431 * C2268 + C32731 * C2269) *
                 C31575 +
             (C20430 * C708 + C20428 * C714 + C20431 * C2270 + C32731 * C2271) *
                 C17571) *
                C32691) *
               C585 -
           (((C20835 + C20836) * C17571 + (C20837 + C20838) * C31575 +
             C23722 * C32555 + C23723 * C31565 + C21862 * C32547 +
             C21863 * C31569) *
                C32691 +
            ((C20476 + C20475) * C17571 + (C20474 + C20473) * C31575 +
             (C20472 + C20471) * C32555 + (C20470 + C20469) * C31565 +
             (C20468 + C20467) * C32547 + (C20466 + C20465) * C31569) *
                C32885) *
               C584) *
              C32589 * C473)) /
        (p * q * std::sqrt(p + q));
    d2ee[79] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C20430 * C119 + C20428 * C126 + C20431 * C352 + C32731 * C367) *
                C31569 +
            (C20430 * C127 + C20428 * C140 + C20431 * C366 + C32731 * C382) *
                C32547 +
            (C20465 + C20466) * C31565 + (C20467 + C20468) * C32555 +
            C20481 * C31575 + C20482 * C17571) *
               C32885 +
           ((C21493 + C21494) * C31569 + (C21495 + C21496) * C32547 +
            C21858 * C31565 + C21859 * C32555 + C23234 * C31575 +
            C23235 * C17571) *
               C32691) *
              C32603 * C32589 * C110 -
          (((C20835 + C20836) * C17571 + (C20837 + C20838) * C31575 +
            (C20839 + C20840) * C32555 + (C20841 + C20842) * C31565 +
            C21862 * C32547 + C21863 * C31569) *
               C32691 +
           ((C20476 + C20475) * C17571 + (C20474 + C20473) * C31575 +
            (C20472 + C20471) * C32555 + (C20470 + C20469) * C31565 +
            (C20468 + C20467) * C32547 + (C20466 + C20465) * C31569) *
               C32885) *
              C32603 * C32589 * C111 +
          ((C20481 * C31569 + C20482 * C32547 + C20483 * C31565 +
            C20484 * C32555 + (C20480 + C20479) * C31575 +
            (C20478 + C20477) * C17571) *
               C32885 +
           (C23234 * C31569 + C23235 * C32547 + (C20838 + C20837) * C31565 +
            (C20836 + C20835) * C32555 +
            (C20430 * C243 + C20428 * C254 + C20431 * C700 + C32731 * C709) *
                C31575 +
            (C20430 * C253 + C20428 * C273 + C20431 * C710 + C32731 * C715) *
                C17571) *
               C32691) *
              C32603 * C32589 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C20430 * C119 + C20428 * C126 + C20431 * C352 + C32731 * C367) *
                C31569 +
            (C20430 * C127 + C20428 * C140 + C20431 * C366 + C32731 * C382) *
                C32547 +
            (C20465 + C20466) * C31565 + (C20467 + C20468) * C32555 +
            C20481 * C31575 + C20482 * C17571) *
               C32885 +
           ((C21493 + C21494) * C31569 + (C21495 + C21496) * C32547 +
            C21858 * C31565 + C21859 * C32555 + C23234 * C31575 +
            C23235 * C17571) *
               C32691) *
              C32603 * C239 -
          (((C21309 + C21310) * C17571 + (C21311 + C21312) * C31575 +
            C21860 * C32555 + C21861 * C31565 + (C21500 + C21499) * C32547 +
            (C21498 + C21497) * C31569) *
               C32691 +
           ((C20839 + C20840) * C17571 + (C20841 + C20842) * C31575 +
            C21862 * C32555 + C21863 * C31565 + (C21496 + C21495) * C32547 +
            (C21494 + C21493) * C31569) *
               C32885) *
              C32603 * C240 +
          ((C21511 * C31569 + C21512 * C32547 + C21475 * C31565 +
            C21476 * C32555 + (C21312 + C21311) * C31575 +
            (C21310 + C21309) * C17571) *
               C32885 +
           ((C21510 + C21509) * C31569 + (C21508 + C21507) * C32547 +
            (C21506 + C21505) * C31565 + (C21504 + C21503) * C32555 +
            (C20430 * C963 + C20428 * C970 + C20431 * C1670 + C32731 * C1675) *
                C31575 +
            (C20430 * C969 + C20428 * C981 + C20431 * C1676 + C32731 * C1679) *
                C17571) *
               C32691) *
              C32603 * C241) *
         C32577) /
            (p * q * std::sqrt(p + q));
    d2ee[80] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                 (((((C31694 * C119 + C32727 * C126 + C31686 * C352 +
                      C32734 * C367 + C31700 * C353 + C24235 * C368) *
                         C15779 +
                     (C31694 * C127 + C32727 * C140 + C31686 * C366 +
                      C32734 * C382 + C31700 * C369 + C24235 * C383) *
                         C15773 +
                     (C24276 + C24277 + C24278) * C15780 +
                     (C24279 + C24280 + C24281) * C32552) *
                        C32885 +
                    ((C25356 + C25357 + C25358) * C15779 +
                     (C25359 + C25360 + C25361) * C15773 + C25718 * C15780 +
                     C25719 * C32552) *
                        C32691) *
                       C32603 * C470 -
                   (((C25362 + C25363 + C25364) * C32552 +
                     (C25365 + C25366 + C25367) * C15780 +
                     (C25368 + C25369 + C25370) * C15773 +
                     (C25371 + C25372 + C25373) * C15779) *
                        C32691 +
                    (C25720 * C32552 + C25721 * C15780 +
                     (C25361 + C25360 + C25359) * C15773 +
                     (C25358 + C25357 + C25356) * C15779) *
                        C32885) *
                       C32603 * C471) *
                      C472 +
                  (((C25718 * C15779 + C25719 * C15773 +
                     (C24693 + C24692 + C24691) * C15780 +
                     (C24690 + C24689 + C24688) * C32552) *
                        C32885 +
                    ((C25367 + C25366 + C25365) * C15779 +
                     (C25364 + C25363 + C25362) * C15773 +
                     (C31694 * C250 + C32727 * C267 + C31686 * C1150 +
                      C32734 * C1160 + C31700 * C1158 + C24235 * C1175) *
                         C15780 +
                     (C31694 * C268 + C32727 * C280 + C31686 * C1159 +
                      C32734 * C1177 + C31700 * C1176 + C24235 * C1185) *
                         C32552) *
                        C32691) *
                       C32603 * C471 -
                   (((C24688 + C24689 + C24690) * C32552 +
                     (C24691 + C24692 + C24693) * C15780 + C25720 * C15773 +
                     C25721 * C15779) *
                        C32691 +
                    ((C24287 + C24286 + C24285) * C32552 +
                     (C24284 + C24283 + C24282) * C15780 +
                     (C24281 + C24280 + C24279) * C15773 +
                     (C24278 + C24277 + C24276) * C15779) *
                        C32885) *
                       C32603 * C470) *
                      C473)) /
                (p * q * std::sqrt(p + q));
    d2ee[81] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                 (((((C31694 * C119 + C32727 * C126 + C31686 * C352 +
                      C32734 * C367 + C31700 * C353 + C24235 * C368) *
                         C15779 +
                     (C31694 * C127 + C32727 * C140 + C31686 * C366 +
                      C32734 * C382 + C31700 * C369 + C24235 * C383) *
                         C15773 +
                     (C24276 + C24277 + C24278) * C15780 +
                     (C24279 + C24280 + C24281) * C32552) *
                        C32885 +
                    ((C25356 + C25357 + C25358) * C15779 +
                     (C25359 + C25360 + C25361) * C15773 + C25718 * C15780 +
                     C25719 * C32552) *
                        C32691) *
                       C584 -
                   (((C25928 + C25929 + C25930) * C32552 +
                     (C25931 + C25932 + C25933) * C15780 +
                     (C26140 + C26141 + C26142) * C15773 +
                     (C26143 + C26144 + C26145) * C15779) *
                        C32691 +
                    ((C24876 + C24877 + C24878) * C32552 +
                     (C24879 + C24880 + C24881) * C15780 +
                     (C31700 * C2108 + C24235 * C2118 + C31686 * C369 +
                      C32734 * C383 + C31694 * C366 + C32727 * C382) *
                         C15773 +
                     (C31700 * C2100 + C24235 * C2109 + C31686 * C353 +
                      C32734 * C368 + C31694 * C352 + C32727 * C367) *
                         C15779) *
                        C32885) *
                       C585) *
                      C470 +
                  ((((C26145 + C26144 + C26143) * C15779 +
                     (C26142 + C26141 + C26140) * C15773 +
                     (C25933 + C25932 + C25931) * C15780 +
                     (C25930 + C25929 + C25928) * C32552) *
                        C32885 +
                    ((C31694 * C1152 + C32727 * C1164 + C31686 * C1156 +
                      C32734 * C1171 + C31700 * C7053 + C24235 * C7057) *
                         C15779 +
                     (C31694 * C1163 + C32727 * C1179 + C31686 * C1172 +
                      C32734 * C1183 + C31700 * C7056 + C24235 * C7062) *
                         C15773 +
                     (C31694 * C1151 + C32727 * C1162 + C31686 * C1157 +
                      C32734 * C1173 + C31700 * C7379 + C24235 * C7380) *
                         C15780 +
                     (C31694 * C1161 + C32727 * C1178 + C31686 * C1174 +
                      C32734 * C1184 + C31700 * C7381 + C24235 * C7382) *
                         C32552) *
                        C32691) *
                       C585 -
                   (((C25362 + C25363 + C25364) * C32552 +
                     (C25365 + C25366 + C25367) * C15780 +
                     (C25368 + C25369 + C25370) * C15773 +
                     (C25371 + C25372 + C25373) * C15779) *
                        C32691 +
                    (C25720 * C32552 + C25721 * C15780 +
                     (C25361 + C25360 + C25359) * C15773 +
                     (C25358 + C25357 + C25356) * C15779) *
                        C32885) *
                       C584) *
                      C471) *
                 C32577) /
                (p * q * std::sqrt(p + q));
    d2ee[82] += (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C31694 * C119 + C32727 * C126 + C31686 * C352 +
                     C32734 * C367 + C31700 * C353 + C24235 * C368) *
                        C15779 +
                    (C31694 * C127 + C32727 * C140 + C31686 * C366 +
                     C32734 * C382 + C31700 * C369 + C24235 * C383) *
                        C15773 +
                    (C24276 + C24277 + C24278) * C15780 +
                    (C24279 + C24280 + C24281) * C32552) *
                       C32885 +
                   ((C25356 + C25357 + C25358) * C15779 +
                    (C25359 + C25360 + C25361) * C15773 +
                    (C24699 + C24698 + C24697) * C15780 +
                    (C24696 + C24695 + C24694) * C32552) *
                       C32691) *
                      C32603 * C239 -
                  (((C25362 + C25363 + C25364) * C32552 +
                    (C25365 + C25366 + C25367) * C15780 +
                    (C25368 + C25369 + C25370) * C15773 +
                    (C25371 + C25372 + C25373) * C15779) *
                       C32691 +
                   ((C24694 + C24695 + C24696) * C32552 +
                    (C24697 + C24698 + C24699) * C15780 +
                    (C25361 + C25360 + C25359) * C15773 +
                    (C25358 + C25357 + C25356) * C15779) *
                       C32885) *
                      C32603 * C240 +
                  (((C25373 + C25372 + C25371) * C15779 +
                    (C25370 + C25369 + C25368) * C15773 +
                    (C25367 + C25366 + C25365) * C15780 +
                    (C25364 + C25363 + C25362) * C32552) *
                       C32885 +
                   ((C31694 * C965 + C32727 * C974 + C31686 * C1668 +
                     C32734 * C1671 + C31700 * C6359 + C24235 * C6363) *
                        C15779 +
                    (C31694 * C973 + C32727 * C983 + C31686 * C1672 +
                     C32734 * C1677 + C31700 * C6364 + C24235 * C6368) *
                        C15773 +
                    (C31694 * C964 + C32727 * C972 + C31686 * C1669 +
                     C32734 * C1673 + C31700 * C7211 + C24235 * C7212) *
                        C15780 +
                    (C31694 * C971 + C32727 * C982 + C31686 * C1674 +
                     C32734 * C1678 + C31700 * C7213 + C24235 * C7214) *
                        C32552) *
                       C32691) *
                      C32603 * C241) *
                 C32577) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C31694 * C119 + C32727 * C126 + C31686 * C352 +
                     C32734 * C367 + C31700 * C353 + C24235 * C368) *
                        C15779 +
                    (C31694 * C127 + C32727 * C140 + C31686 * C366 +
                     C32734 * C382 + C31700 * C369 + C24235 * C383) *
                        C15773 +
                    (C24276 + C24277 + C24278) * C15780 +
                    (C24279 + C24280 + C24281) * C32552) *
                       C32885 +
                   ((C31694 * C247 + C32727 * C262 + C31686 * C696 +
                     C32734 * C701 + C31700 * C1153 + C24235 * C1165) *
                        C15779 +
                    (C31694 * C261 + C32727 * C277 + C31686 * C702 +
                     C32734 * C711 + C31700 * C1166 + C24235 * C1180) *
                        C15773 +
                    (C24699 + C24698 + C24697) * C15780 +
                    (C24696 + C24695 + C24694) * C32552) *
                       C32691) *
                      C32603 * C32589 * C110 -
                  (((C24688 + C24689 + C24690) * C32552 +
                    (C24691 + C24692 + C24693) * C15780 +
                    (C24694 + C24695 + C24696) * C15773 +
                    (C24697 + C24698 + C24699) * C15779) *
                       C32691 +
                   ((C24287 + C24286 + C24285) * C32552 +
                    (C24284 + C24283 + C24282) * C15780 +
                    (C24281 + C24280 + C24279) * C15773 +
                    (C24278 + C24277 + C24276) * C15779) *
                       C32885) *
                      C32603 * C32589 * C111 +
                  ((C24296 * C15779 + C24297 * C15773 +
                    (C24293 + C24292 + C24291) * C15780 +
                    (C24290 + C24289 + C24288) * C32552) *
                       C32885 +
                   ((C24693 + C24692 + C24691) * C15779 +
                    (C24690 + C24689 + C24688) * C15773 +
                    (C31694 * C244 + C32727 * C256 + C31686 * C699 +
                     C32734 * C707 + C31700 * C2268 + C24235 * C2269) *
                        C15780 +
                    (C31694 * C255 + C32727 * C274 + C31686 * C708 +
                     C32734 * C714 + C31700 * C2270 + C24235 * C2271) *
                        C32552) *
                       C32691) *
                      C32603 * C32589 * C112)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((C31694 * C119 + C32727 * C126 + C31686 * C352 +
                     C32734 * C367 + C31700 * C353 + C24235 * C368) *
                        C15779 +
                    (C31694 * C127 + C32727 * C140 + C31686 * C366 +
                     C32734 * C382 + C31700 * C369 + C24235 * C383) *
                        C15773 +
                    (C24276 + C24277 + C24278) * C15780 +
                    (C24279 + C24280 + C24281) * C32552) *
                       C32885 +
                   ((C25356 + C25357 + C25358) * C15779 +
                    (C25359 + C25360 + C25361) * C15773 +
                    (C24699 + C24698 + C24697) * C15780 +
                    (C24696 + C24695 + C24694) * C32552) *
                       C32691) *
                      C345 -
                  (((C31700 * C2646 + C24235 * C2650 + C31686 * C1168 +
                     C32734 * C1181 + C31694 * C704 + C32727 * C712) *
                        C32552 +
                    (C31700 * C2641 + C24235 * C2645 + C31686 * C1154 +
                     C32734 * C1167 + C31694 * C697 + C32727 * C703) *
                        C15780 +
                    (C31700 * C2644 + C24235 * C2649 + C31686 * C1166 +
                     C32734 * C1180 + C31694 * C702 + C32727 * C711) *
                        C15773 +
                    (C31700 * C2640 + C24235 * C2643 + C31686 * C1153 +
                     C32734 * C1165 + C31694 * C696 + C32727 * C701) *
                        C15779) *
                       C32691 +
                   ((C24876 + C24877 + C24878) * C32552 +
                    (C24879 + C24880 + C24881) * C15780 +
                    (C31700 * C2108 + C24235 * C2118 + C31686 * C369 +
                     C32734 * C383 + C31694 * C366 + C32727 * C382) *
                        C15773 +
                    (C31700 * C2100 + C24235 * C2109 + C31686 * C353 +
                     C32734 * C368 + C31694 * C352 + C32727 * C367) *
                        C15779) *
                       C32885) *
                      C346 +
                  (((C31694 * C353 + C32727 * C368 + C31686 * C2100 +
                     C32734 * C2109 + C31700 * C2101 + C24235 * C2110) *
                        C15779 +
                    (C31694 * C369 + C32727 * C383 + C31686 * C2108 +
                     C32734 * C2118 + C31700 * C2111 + C24235 * C2119) *
                        C15773 +
                    (C31694 * C354 + C32727 * C370 + C31686 * C2099 +
                     C32734 * C2107 + C31700 * C2102 + C24235 * C2112) *
                        C15780 +
                    (C31694 * C371 + C32727 * C384 + C31686 * C2106 +
                     C32734 * C2117 + C31700 * C2113 + C24235 * C2120) *
                        C32552) *
                       C32885 +
                   ((C31694 * C1153 + C32727 * C1165 + C31686 * C2640 +
                     C32734 * C2643 + C31700 * C7054 + C24235 * C7058) *
                        C15779 +
                    (C31694 * C1166 + C32727 * C1180 + C31686 * C2644 +
                     C32734 * C2649 + C31700 * C7059 + C24235 * C7063) *
                        C15773 +
                    (C31694 * C1154 + C32727 * C1167 + C31686 * C2641 +
                     C32734 * C2645 + C31700 * C12183 + C24235 * C12184) *
                        C15780 +
                    (C31694 * C1168 + C32727 * C1181 + C31686 * C2646 +
                     C32734 * C2650 + C31700 * C12185 + C24235 * C12186) *
                        C32552) *
                       C32691) *
                      C347) *
                 C32589 * C32577) /
                    (p * q * std::sqrt(p + q));
    d2ee[83] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                 (((((C31694 * C119 + C32727 * C126 + C31686 * C352 +
                      C32734 * C367 + C31700 * C353 + C24235 * C368) *
                         C15779 +
                     (C31694 * C127 + C32727 * C140 + C31686 * C366 +
                      C32734 * C382 + C31700 * C369 + C24235 * C383) *
                         C15773 +
                     (C24276 + C24277 + C24278) * C15780 +
                     (C24279 + C24280 + C24281) * C32552) *
                        C32885 +
                    ((C25356 + C25357 + C25358) * C15779 +
                     (C25359 + C25360 + C25361) * C15773 + C25718 * C15780 +
                     C25719 * C32552) *
                        C32691) *
                       C584 -
                   (((C25928 + C25929 + C25930) * C32552 +
                     (C25931 + C25932 + C25933) * C15780 +
                     (C31700 * C2644 + C24235 * C2649 + C31686 * C1166 +
                      C32734 * C1180 + C31694 * C702 + C32727 * C711) *
                         C15773 +
                     (C31700 * C2640 + C24235 * C2643 + C31686 * C1153 +
                      C32734 * C1165 + C31694 * C696 + C32727 * C701) *
                         C15779) *
                        C32691 +
                    ((C24876 + C24877 + C24878) * C32552 +
                     (C24879 + C24880 + C24881) * C15780 +
                     (C31700 * C2108 + C24235 * C2118 + C31686 * C369 +
                      C32734 * C383 + C31694 * C366 + C32727 * C382) *
                         C15773 +
                     (C31700 * C2100 + C24235 * C2109 + C31686 * C353 +
                      C32734 * C368 + C31694 * C352 + C32727 * C367) *
                         C15779) *
                        C32885) *
                       C585) *
                      C32589 * C472 +
                  ((((C24881 + C24880 + C24879) * C15779 +
                     (C24878 + C24877 + C24876) * C15773 +
                     (C24875 + C24874 + C24873) * C15780 +
                     (C24872 + C24871 + C24870) * C32552) *
                        C32885 +
                    ((C25933 + C25932 + C25931) * C15779 +
                     (C25930 + C25929 + C25928) * C15773 +
                     (C31694 * C698 + C32727 * C705 + C31686 * C1155 +
                      C32734 * C1169 + C31700 * C2642 + C24235 * C2647) *
                         C15780 +
                     (C31694 * C706 + C32727 * C713 + C31686 * C1170 +
                      C32734 * C1182 + C31700 * C2648 + C24235 * C2651) *
                         C32552) *
                        C32691) *
                       C585 -
                   (((C24688 + C24689 + C24690) * C32552 +
                     (C24691 + C24692 + C24693) * C15780 + C25720 * C15773 +
                     C25721 * C15779) *
                        C32691 +
                    ((C24287 + C24286 + C24285) * C32552 +
                     (C24284 + C24283 + C24282) * C15780 +
                     (C24281 + C24280 + C24279) * C15773 +
                     (C24278 + C24277 + C24276) * C15779) *
                        C32885) *
                       C584) *
                      C32589 * C473)) /
                (p * q * std::sqrt(p + q));
    d2ee[84] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C31694 * C119 + C32727 * C126 + C31686 * C352 +
                     C32734 * C367 + C31700 * C353 + C24235 * C368) *
                        C15779 +
                    (C31694 * C127 + C32727 * C140 + C31686 * C366 +
                     C32734 * C382 + C31700 * C369 + C24235 * C383) *
                        C15773 +
                    (C24276 + C24277 + C24278) * C15780 +
                    (C24279 + C24280 + C24281) * C32552) *
                       C32885 +
                   ((C31694 * C247 + C32727 * C262 + C31686 * C696 +
                     C32734 * C701 + C31700 * C1153 + C24235 * C1165) *
                        C15779 +
                    (C31694 * C261 + C32727 * C277 + C31686 * C702 +
                     C32734 * C711 + C31700 * C1166 + C24235 * C1180) *
                        C15773 +
                    (C24699 + C24698 + C24697) * C15780 +
                    (C24696 + C24695 + C24694) * C32552) *
                       C32691) *
                      C32603 * C32589 * C110 -
                  (((C24688 + C24689 + C24690) * C32552 +
                    (C24691 + C24692 + C24693) * C15780 +
                    (C24694 + C24695 + C24696) * C15773 +
                    (C24697 + C24698 + C24699) * C15779) *
                       C32691 +
                   ((C24287 + C24286 + C24285) * C32552 +
                    (C24284 + C24283 + C24282) * C15780 +
                    (C24281 + C24280 + C24279) * C15773 +
                    (C24278 + C24277 + C24276) * C15779) *
                       C32885) *
                      C32603 * C32589 * C111 +
                  ((C24296 * C15779 + C24297 * C15773 +
                    (C24293 + C24292 + C24291) * C15780 +
                    (C24290 + C24289 + C24288) * C32552) *
                       C32885 +
                   ((C24693 + C24692 + C24691) * C15779 +
                    (C24690 + C24689 + C24688) * C15773 +
                    (C31694 * C244 + C32727 * C256 + C31686 * C699 +
                     C32734 * C707 + C31700 * C2268 + C24235 * C2269) *
                        C15780 +
                    (C31694 * C255 + C32727 * C274 + C31686 * C708 +
                     C32734 * C714 + C31700 * C2270 + C24235 * C2271) *
                        C32552) *
                       C32691) *
                      C32603 * C32589 * C112)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C31694 * C119 + C32727 * C126 + C31686 * C352 +
                     C32734 * C367 + C31700 * C353 + C24235 * C368) *
                        C15779 +
                    (C31694 * C127 + C32727 * C140 + C31686 * C366 +
                     C32734 * C382 + C31700 * C369 + C24235 * C383) *
                        C15773 +
                    (C24276 + C24277 + C24278) * C15780 +
                    (C24279 + C24280 + C24281) * C32552) *
                       C32885 +
                   ((C25356 + C25357 + C25358) * C15779 +
                    (C25359 + C25360 + C25361) * C15773 +
                    (C24699 + C24698 + C24697) * C15780 +
                    (C24696 + C24695 + C24694) * C32552) *
                       C32691) *
                      C32603 * C239 -
                  (((C25362 + C25363 + C25364) * C32552 +
                    (C25365 + C25366 + C25367) * C15780 +
                    (C25368 + C25369 + C25370) * C15773 +
                    (C25371 + C25372 + C25373) * C15779) *
                       C32691 +
                   ((C24694 + C24695 + C24696) * C32552 +
                    (C24697 + C24698 + C24699) * C15780 +
                    (C25361 + C25360 + C25359) * C15773 +
                    (C25358 + C25357 + C25356) * C15779) *
                       C32885) *
                      C32603 * C240 +
                  (((C25373 + C25372 + C25371) * C15779 +
                    (C25370 + C25369 + C25368) * C15773 +
                    (C25367 + C25366 + C25365) * C15780 +
                    (C25364 + C25363 + C25362) * C32552) *
                       C32885 +
                   ((C31694 * C965 + C32727 * C974 + C31686 * C1668 +
                     C32734 * C1671 + C31700 * C6359 + C24235 * C6363) *
                        C15779 +
                    (C31694 * C973 + C32727 * C983 + C31686 * C1672 +
                     C32734 * C1677 + C31700 * C6364 + C24235 * C6368) *
                        C15773 +
                    (C31694 * C964 + C32727 * C972 + C31686 * C1669 +
                     C32734 * C1673 + C31700 * C7211 + C24235 * C7212) *
                        C15780 +
                    (C31694 * C971 + C32727 * C982 + C31686 * C1674 +
                     C32734 * C1678 + C31700 * C7213 + C24235 * C7214) *
                        C32552) *
                       C32691) *
                      C32603 * C241) *
                 C32577) /
                    (p * q * std::sqrt(p + q));
    d2ee[85] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C20430 * C119 + C20428 * C126 + C20431 * C352 + C32731 * C367) *
                 C15779 +
             (C20430 * C127 + C20428 * C140 + C20431 * C366 + C32731 * C382) *
                 C15773 +
             (C20465 + C20466) * C15780 + (C20467 + C20468) * C32552) *
                C32951 +
            ((C21493 + C21494) * C15779 + (C21495 + C21496) * C15773 +
             C21858 * C15780 + C21859 * C32552) *
                C32939 +
            C21517 * C32916) *
               C32603 * C470 -
           (((C21503 + C21504) * C32552 + (C21505 + C21506) * C15780 +
             (C21507 + C21508) * C15773 + (C21509 + C21510) * C15779) *
                C32916 +
            (C21860 * C32552 + C21861 * C15780 + (C21500 + C21499) * C15773 +
             (C21498 + C21497) * C15779) *
                C32939 +
            (C21862 * C32552 + C21863 * C15780 + (C21496 + C21495) * C15773 +
             (C21494 + C21493) * C15779) *
                C32951) *
               C32603 * C471) *
              C472 +
          (((C21858 * C15779 + C21859 * C15773 + (C20842 + C20841) * C15780 +
             (C20840 + C20839) * C32552) *
                C32951 +
            (C21475 * C15779 + C21476 * C15773 + (C21312 + C21311) * C15780 +
             (C21310 + C21309) * C32552) *
                C32939 +
            ((C21506 + C21505) * C15779 + (C21504 + C21503) * C15773 +
             (C20430 * C963 + C20428 * C970 + C20431 * C1670 + C32731 * C1675) *
                 C15780 +
             (C20430 * C969 + C20428 * C981 + C20431 * C1676 + C32731 * C1679) *
                 C32552) *
                C32916) *
               C32603 * C471 -
           (((C21309 + C21310) * C32552 + (C21311 + C21312) * C15780 +
             C21860 * C15773 + C21861 * C15779) *
                C32916 +
            ((C20839 + C20840) * C32552 + (C20841 + C20842) * C15780 +
             C21862 * C15773 + C21863 * C15779) *
                C32939 +
            ((C20472 + C20471) * C32552 + (C20470 + C20469) * C15780 +
             (C20468 + C20467) * C15773 + (C20466 + C20465) * C15779) *
                C32951) *
               C32603 * C470) *
              C473)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C20430 * C119 + C20428 * C126 + C20431 * C352 + C32731 * C367) *
                C15053 +
            (C20430 * C127 + C20428 * C140 + C20431 * C366 + C32731 * C382) *
                C32957 +
            (C20465 + C20466) * C15054 + (C20467 + C20468) * C32950 +
            C20481 * C15055 + C20482 * C32937 + C20483 * C15056 +
            C20484 * C32920) *
               C32633 * C32603 * C470 -
           ((C20835 + C20836) * C32920 + (C20837 + C20838) * C15056 +
            (C20839 + C20840) * C32937 + (C20841 + C20842) * C15055 +
            (C20843 + C20844) * C32950 + (C20845 + C20846) * C15054 +
            (C20431 * C702 + C32731 * C711 + C20430 * C261 + C20428 * C277) *
                C32957 +
            (C20431 * C696 + C32731 * C701 + C20430 * C247 + C20428 * C262) *
                C15053) *
               C32633 * C32603 * C471) *
              C472 +
          (((C20846 + C20845) * C15053 + (C20844 + C20843) * C32957 +
            (C20842 + C20841) * C15054 + (C20840 + C20839) * C32950 +
            (C20838 + C20837) * C15055 + (C20836 + C20835) * C32937 +
            (C20430 * C243 + C20428 * C254 + C20431 * C700 + C32731 * C709) *
                C15056 +
            (C20430 * C253 + C20428 * C273 + C20431 * C710 + C32731 * C715) *
                C32920) *
               C32633 * C32603 * C471 -
           ((C20477 + C20478) * C32920 + (C20479 + C20480) * C15056 +
            (C20476 + C20475) * C32937 + (C20474 + C20473) * C15055 +
            (C20472 + C20471) * C32950 + (C20470 + C20469) * C15054 +
            (C20468 + C20467) * C32957 + (C20466 + C20465) * C15053) *
               C32633 * C32603 * C470) *
              C473)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C22401 * C119 + C32959 * C126 + C22402 * C352 + C32956 * C367 +
             C22403 * C353 + C32947 * C368 + C22404 * C2100 + C32932 * C2109) *
                C15779 +
            (C22401 * C127 + C32959 * C140 + C22402 * C366 + C32956 * C382 +
             C22403 * C369 + C32947 * C383 + C22404 * C2108 + C32932 * C2118) *
                C15773 +
            (C22438 + C22439 + C22440 + C22441) * C15780 +
            (C22442 + C22443 + C22444 + C22445) * C32552) *
               C32633 * C32603 * C470 -
           ((C22796 + C22797 + C22798 + C22799) * C32552 +
            (C22800 + C22801 + C22802 + C22803) * C15780 +
            (C22404 * C2644 + C32932 * C2649 + C22403 * C1166 + C32947 * C1180 +
             C22402 * C702 + C32956 * C711 + C22401 * C261 + C32959 * C277) *
                C15773 +
            (C22404 * C2640 + C32932 * C2643 + C22403 * C1153 + C32947 * C1165 +
             C22402 * C696 + C32956 * C701 + C22401 * C247 + C32959 * C262) *
                C15779) *
               C32633 * C32603 * C471) *
              C472 +
          (((C22803 + C22802 + C22801 + C22800) * C15779 +
            (C22799 + C22798 + C22797 + C22796) * C15773 +
            (C22401 * C245 + C32959 * C258 + C22402 * C698 + C32956 * C705 +
             C22403 * C1155 + C32947 * C1169 + C22404 * C2642 +
             C32932 * C2647) *
                C15780 +
            (C22401 * C257 + C32959 * C275 + C22402 * C706 + C32956 * C713 +
             C22403 * C1170 + C32947 * C1182 + C22404 * C2648 +
             C32932 * C2651) *
                C32552) *
               C32633 * C32603 * C471 -
           ((C22446 + C22447 + C22448 + C22449) * C32552 +
            (C22450 + C22451 + C22452 + C22453) * C15780 +
            (C22445 + C22444 + C22443 + C22442) * C15773 +
            (C22441 + C22440 + C22439 + C22438) * C15779) *
               C32633 * C32603 * C470) *
              C473)) /
            (p * q * std::sqrt(p + q));
    d2ee[86] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C20430 * C119 + C20428 * C126 + C20431 * C352 + C32731 * C367) *
                 C15779 +
             (C20430 * C127 + C20428 * C140 + C20431 * C366 + C32731 * C382) *
                 C15773 +
             (C20465 + C20466) * C15780 + (C20467 + C20468) * C32552) *
                C32951 +
            ((C21493 + C21494) * C15779 + (C21495 + C21496) * C15773 +
             C21858 * C15780 + C21859 * C32552) *
                C32939 +
            C21517 * C32916) *
               C584 -
           (((C22074 + C22075) * C32552 + (C22076 + C22077) * C15780 +
             (C22292 + C22293) * C15773 + (C22294 + C22295) * C15779) *
                C32916 +
            ((C22078 + C22079) * C32552 + (C22080 + C22081) * C15780 +
             (C22296 + C22297) * C15773 + (C22298 + C22299) * C15779) *
                C32939 +
            ((C21009 + C21010) * C32552 + (C21011 + C21012) * C15780 +
             (C20431 * C369 + C32731 * C383 + C20430 * C366 + C20428 * C382) *
                 C15773 +
             (C20431 * C353 + C32731 * C368 + C20430 * C352 + C20428 * C367) *
                 C15779) *
                C32951) *
               C585) *
              C470 +
          ((((C22299 + C22298) * C15779 + (C22297 + C22296) * C15773 +
             (C22081 + C22080) * C15780 + (C22079 + C22078) * C32552) *
                C32951 +
            ((C22295 + C22294) * C15779 + (C22293 + C22292) * C15773 +
             (C22077 + C22076) * C15780 + (C22075 + C22074) * C32552) *
                C32939 +
            ((C20430 * C1668 + C20428 * C1671 + C20431 * C6359 +
              C32731 * C6363) *
                 C15779 +
             (C20430 * C1672 + C20428 * C1677 + C20431 * C6364 +
              C32731 * C6368) *
                 C15773 +
             (C20430 * C1669 + C20428 * C1673 + C20431 * C7211 +
              C32731 * C7212) *
                 C15780 +
             (C20430 * C1674 + C20428 * C1678 + C20431 * C7213 +
              C32731 * C7214) *
                 C32552) *
                C32916) *
               C585 -
           (((C21503 + C21504) * C32552 + (C21505 + C21506) * C15780 +
             (C21507 + C21508) * C15773 + (C21509 + C21510) * C15779) *
                C32916 +
            (C21860 * C32552 + C21861 * C15780 + (C21500 + C21499) * C15773 +
             (C21498 + C21497) * C15779) *
                C32939 +
            (C21862 * C32552 + C21863 * C15780 + (C21496 + C21495) * C15773 +
             (C21494 + C21493) * C15779) *
                C32951) *
               C584) *
              C471) *
         C32577) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C20430 * C119 + C20428 * C126 + C20431 * C352 + C32731 * C367) *
                C15053 +
            (C20430 * C127 + C20428 * C140 + C20431 * C366 + C32731 * C382) *
                C32957 +
            (C20465 + C20466) * C15054 + (C20467 + C20468) * C32950 +
            C20481 * C15055 + C20482 * C32937 + C20483 * C15056 +
            C20484 * C32920) *
               C32633 * C584 -
           ((C21001 + C21002) * C32920 + (C21003 + C21004) * C15056 +
            (C21005 + C21006) * C32937 + (C21007 + C21008) * C15055 +
            (C21009 + C21010) * C32950 + (C21011 + C21012) * C15054 +
            (C20431 * C369 + C32731 * C383 + C20430 * C366 + C20428 * C382) *
                C32957 +
            (C20431 * C353 + C32731 * C368 + C20430 * C352 + C20428 * C367) *
                C15053) *
               C32633 * C585) *
              C470 +
          (((C20430 * C696 + C20428 * C701 + C20431 * C1153 + C32731 * C1165) *
                C15053 +
            (C20430 * C702 + C20428 * C711 + C20431 * C1166 + C32731 * C1180) *
                C32957 +
            (C20430 * C697 + C20428 * C703 + C20431 * C1154 + C32731 * C1167) *
                C15054 +
            (C20430 * C704 + C20428 * C712 + C20431 * C1168 + C32731 * C1181) *
                C32950 +
            (C20430 * C698 + C20428 * C705 + C20431 * C1155 + C32731 * C1169) *
                C15055 +
            (C20430 * C706 + C20428 * C713 + C20431 * C1170 + C32731 * C1182) *
                C32937 +
            (C20430 * C699 + C20428 * C707 + C20431 * C2268 + C32731 * C2269) *
                C15056 +
            (C20430 * C708 + C20428 * C714 + C20431 * C2270 + C32731 * C2271) *
                C32920) *
               C32633 * C585 -
           ((C20835 + C20836) * C32920 + (C20837 + C20838) * C15056 +
            (C20839 + C20840) * C32937 + (C20841 + C20842) * C15055 +
            (C20843 + C20844) * C32950 + (C20845 + C20846) * C15054 +
            (C20431 * C702 + C32731 * C711 + C20430 * C261 + C20428 * C277) *
                C32957 +
            (C20431 * C696 + C32731 * C701 + C20430 * C247 + C20428 * C262) *
                C15053) *
               C32633 * C584) *
              C471) *
         C32577) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C22401 * C119 + C32959 * C126 + C22402 * C352 + C32956 * C367 +
             C22403 * C353 + C32947 * C368 + C22404 * C2100 + C32932 * C2109) *
                C15779 +
            (C22401 * C127 + C32959 * C140 + C22402 * C366 + C32956 * C382 +
             C22403 * C369 + C32947 * C383 + C22404 * C2108 + C32932 * C2118) *
                C15773 +
            (C22438 + C22439 + C22440 + C22441) * C15780 +
            (C22442 + C22443 + C22444 + C22445) * C32552) *
               C32633 * C584 -
           ((C22950 + C22951 + C22952 + C22953) * C32552 +
            (C22954 + C22955 + C22956 + C22957) * C15780 +
            (C22404 * C2111 + C32932 * C2119 + C22403 * C2108 + C32947 * C2118 +
             C22402 * C369 + C32956 * C383 + C22401 * C366 + C32959 * C382) *
                C15773 +
            (C22404 * C2101 + C32932 * C2110 + C22403 * C2100 + C32947 * C2109 +
             C22402 * C353 + C32956 * C368 + C22401 * C352 + C32959 * C367) *
                C15779) *
               C32633 * C585) *
              C470 +
          (((C22401 * C696 + C32959 * C701 + C22402 * C1153 + C32956 * C1165 +
             C22403 * C2640 + C32947 * C2643 + C22404 * C7054 +
             C32932 * C7058) *
                C15779 +
            (C22401 * C702 + C32959 * C711 + C22402 * C1166 + C32956 * C1180 +
             C22403 * C2644 + C32947 * C2649 + C22404 * C7059 +
             C32932 * C7063) *
                C15773 +
            (C22401 * C697 + C32959 * C703 + C22402 * C1154 + C32956 * C1167 +
             C22403 * C2641 + C32947 * C2645 + C22404 * C12183 +
             C32932 * C12184) *
                C15780 +
            (C22401 * C704 + C32959 * C712 + C22402 * C1168 + C32956 * C1181 +
             C22403 * C2646 + C32947 * C2650 + C22404 * C12185 +
             C32932 * C12186) *
                C32552) *
               C32633 * C585 -
           ((C22796 + C22797 + C22798 + C22799) * C32552 +
            (C22800 + C22801 + C22802 + C22803) * C15780 +
            (C22404 * C2644 + C32932 * C2649 + C22403 * C1166 + C32947 * C1180 +
             C22402 * C702 + C32956 * C711 + C22401 * C261 + C32959 * C277) *
                C15773 +
            (C22404 * C2640 + C32932 * C2643 + C22403 * C1153 + C32947 * C1165 +
             C22402 * C696 + C32956 * C701 + C22401 * C247 + C32959 * C262) *
                C15779) *
               C32633 * C584) *
              C471) *
         C32577) /
            (p * q * std::sqrt(p + q));
    d2ee[87] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((C20430 * C119 + C20428 * C126 + C20431 * C352 + C32731 * C367) *
                   C15053 +
               (C20430 * C127 + C20428 * C140 + C20431 * C366 + C32731 * C382) *
                   C32957 +
               (C20465 + C20466) * C15054 + (C20467 + C20468) * C32950 +
               C20481 * C15055 + C20482 * C32937 + C20483 * C15056 +
               C20484 * C32920) *
                  C32633 * C32603 * C32589 * C110 -
              ((C20477 + C20478) * C32920 + (C20479 + C20480) * C15056 +
               (C20476 + C20475) * C32937 + (C20474 + C20473) * C15055 +
               (C20472 + C20471) * C32950 + (C20470 + C20469) * C15054 +
               (C20468 + C20467) * C32957 + (C20466 + C20465) * C15053) *
                  C32633 * C32603 * C32589 * C111 +
              (C20481 * C15053 + C20482 * C32957 + C20483 * C15054 +
               C20484 * C32950 + (C20480 + C20479) * C15055 +
               (C20478 + C20477) * C32937 +
               (C20430 * C124 + C20428 * C137 + C20431 * C586 + C32731 * C587) *
                   C15056 +
               (C20430 * C136 + C20428 * C145 + C20431 * C588 + C32731 * C589) *
                   C32920) *
                  C32633 * C32603 * C32589 * C112) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((C20430 * C119 + C20428 * C126 + C20431 * C352 + C32731 * C367) *
                   C15053 +
               (C20430 * C127 + C20428 * C140 + C20431 * C366 + C32731 * C382) *
                   C32957 +
               (C20465 + C20466) * C15054 + (C20467 + C20468) * C32950 +
               C20481 * C15055 + C20482 * C32937 + C20483 * C15056 +
               C20484 * C32920) *
                  C32633 * C32603 * C239 -
              ((C20431 * C708 + C32731 * C714 + C20430 * C255 + C20428 * C274) *
                   C32920 +
               (C20431 * C699 + C32731 * C707 + C20430 * C244 + C20428 * C256) *
                   C15056 +
               (C20431 * C706 + C32731 * C713 + C20430 * C257 + C20428 * C275) *
                   C32937 +
               (C20431 * C698 + C32731 * C705 + C20430 * C245 + C20428 * C258) *
                   C15055 +
               (C20431 * C704 + C32731 * C712 + C20430 * C259 + C20428 * C276) *
                   C32950 +
               (C20431 * C697 + C32731 * C703 + C20430 * C246 + C20428 * C260) *
                   C15054 +
               (C20431 * C702 + C32731 * C711 + C20430 * C261 + C20428 * C277) *
                   C32957 +
               (C20431 * C696 + C32731 * C701 + C20430 * C247 + C20428 * C262) *
                   C15053) *
                  C32633 * C32603 * C240 +
              ((C20430 * C248 + C20428 * C263 + C20431 * C1152 +
                C32731 * C1164) *
                   C15053 +
               (C20430 * C264 + C20428 * C278 + C20431 * C1163 +
                C32731 * C1179) *
                   C32957 +
               (C20430 * C249 + C20428 * C265 + C20431 * C1151 +
                C32731 * C1162) *
                   C15054 +
               (C20430 * C266 + C20428 * C279 + C20431 * C1161 +
                C32731 * C1178) *
                   C32950 +
               (C20430 * C250 + C20428 * C267 + C20431 * C1150 +
                C32731 * C1160) *
                   C15055 +
               (C20430 * C268 + C20428 * C280 + C20431 * C1159 +
                C32731 * C1177) *
                   C32937 +
               (C20430 * C251 + C20428 * C269 + C20431 * C1494 +
                C32731 * C1495) *
                   C15056 +
               (C20430 * C270 + C20428 * C281 + C20431 * C1496 +
                C32731 * C1497) *
                   C32920) *
                  C32633 * C32603 * C241) *
             C32577) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C20430 * C119 + C20428 * C126 + C20431 * C352 + C32731 * C367) *
               C15053 +
           (C20430 * C127 + C20428 * C140 + C20431 * C366 + C32731 * C382) *
               C32957 +
           (C20465 + C20466) * C15054 + (C20467 + C20468) * C32950 +
           C20481 * C15055 + C20482 * C32937 + C20483 * C15056 +
           C20484 * C32920) *
              C32633 * C345 -
          ((C20431 * C375 + C32731 * C386 + C20430 * C360 + C20428 * C379) *
               C32920 +
           (C20431 * C356 + C32731 * C374 + C20430 * C349 + C20428 * C361) *
               C15056 +
           (C20431 * C373 + C32731 * C385 + C20430 * C362 + C20428 * C380) *
               C32937 +
           (C20431 * C355 + C32731 * C372 + C20430 * C350 + C20428 * C363) *
               C15055 +
           (C20431 * C371 + C32731 * C384 + C20430 * C364 + C20428 * C381) *
               C32950 +
           (C20431 * C354 + C32731 * C370 + C20430 * C351 + C20428 * C365) *
               C15054 +
           (C20431 * C369 + C32731 * C383 + C20430 * C366 + C20428 * C382) *
               C32957 +
           (C20431 * C353 + C32731 * C368 + C20430 * C352 + C20428 * C367) *
               C15053) *
              C32633 * C346 +
          ((C20430 * C353 + C20428 * C368 + C20431 * C2100 + C32731 * C2109) *
               C15053 +
           (C20430 * C369 + C20428 * C383 + C20431 * C2108 + C32731 * C2118) *
               C32957 +
           (C20430 * C354 + C20428 * C370 + C20431 * C2099 + C32731 * C2107) *
               C15054 +
           (C20430 * C371 + C20428 * C384 + C20431 * C2106 + C32731 * C2117) *
               C32950 +
           (C20430 * C355 + C20428 * C372 + C20431 * C2098 + C32731 * C2105) *
               C15055 +
           (C20430 * C373 + C20428 * C385 + C20431 * C2104 + C32731 * C2116) *
               C32937 +
           (C20430 * C356 + C20428 * C374 + C20431 * C2454 + C32731 * C2455) *
               C15056 +
           (C20430 * C375 + C20428 * C386 + C20431 * C2456 + C32731 * C2457) *
               C32920) *
              C32633 * C347) *
         C32589 * C32577) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C20430 * C119 + C20428 * C126 + C20431 * C352 + C32731 * C367) *
                C15779 +
            (C20430 * C127 + C20428 * C140 + C20431 * C366 + C32731 * C382) *
                C15773 +
            (C20465 + C20466) * C15780 + (C20467 + C20468) * C32552) *
               C32951 +
           ((C20430 * C247 + C20428 * C262 + C20431 * C696 + C32731 * C701) *
                C15779 +
            (C20430 * C261 + C20428 * C277 + C20431 * C702 + C32731 * C711) *
                C15773 +
            (C20846 + C20845) * C15780 + (C20844 + C20843) * C32552) *
               C32939 +
           ((C20430 * C248 + C20428 * C263 + C20431 * C1152 + C32731 * C1164) *
                C15779 +
            (C20430 * C264 + C20428 * C278 + C20431 * C1163 + C32731 * C1179) *
                C15773 +
            (C21305 + C21306) * C15780 + (C21307 + C21308) * C32552) *
               C32916) *
              C32603 * C32589 * C110 -
          (((C21309 + C21310) * C32552 + (C21311 + C21312) * C15780 +
            (C21308 + C21307) * C15773 + (C21306 + C21305) * C15779) *
               C32916 +
           ((C20839 + C20840) * C32552 + (C20841 + C20842) * C15780 +
            (C20843 + C20844) * C15773 + (C20845 + C20846) * C15779) *
               C32939 +
           ((C20472 + C20471) * C32552 + (C20470 + C20469) * C15780 +
            (C20468 + C20467) * C15773 + (C20466 + C20465) * C15779) *
               C32951) *
              C32603 * C32589 * C111 +
          ((C20481 * C15779 + C20482 * C15773 + C20483 * C15780 +
            C20484 * C32552) *
               C32951 +
           ((C20842 + C20841) * C15779 + (C20840 + C20839) * C15773 +
            (C20838 + C20837) * C15780 + (C20836 + C20835) * C32552) *
               C32939 +
           ((C21312 + C21311) * C15779 + (C21310 + C21309) * C15773 +
            (C20430 * C251 + C20428 * C269 + C20431 * C1494 + C32731 * C1495) *
                C15780 +
            (C20430 * C270 + C20428 * C281 + C20431 * C1496 + C32731 * C1497) *
                C32552) *
               C32916) *
              C32603 * C32589 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C20430 * C119 + C20428 * C126 + C20431 * C352 + C32731 * C367) *
                C15779 +
            (C20430 * C127 + C20428 * C140 + C20431 * C366 + C32731 * C382) *
                C15773 +
            (C20465 + C20466) * C15780 + (C20467 + C20468) * C32552) *
               C32951 +
           ((C21493 + C21494) * C15779 + (C21495 + C21496) * C15773 +
            (C20846 + C20845) * C15780 + (C20844 + C20843) * C32552) *
               C32939 +
           C21517 * C32916) *
              C32603 * C239 -
          (((C21503 + C21504) * C32552 + (C21505 + C21506) * C15780 +
            (C21507 + C21508) * C15773 + (C21509 + C21510) * C15779) *
               C32916 +
           ((C21308 + C21307) * C32552 + (C21306 + C21305) * C15780 +
            (C21500 + C21499) * C15773 + (C21498 + C21497) * C15779) *
               C32939 +
           ((C20843 + C20844) * C32552 + (C20845 + C20846) * C15780 +
            (C21496 + C21495) * C15773 + (C21494 + C21493) * C15779) *
               C32951) *
              C32603 * C240 +
          (C21517 * C32951 +
           ((C21510 + C21509) * C15779 + (C21508 + C21507) * C15773 +
            (C21506 + C21505) * C15780 + (C21504 + C21503) * C32552) *
               C32939 +
           ((C20430 * C966 + C20428 * C975 + C20431 * C6358 + C32731 * C6362) *
                C15779 +
            (C20430 * C976 + C20428 * C984 + C20431 * C6361 + C32731 * C6367) *
                C15773 +
            (C20430 * C967 + C20428 * C977 + C20431 * C6552 + C32731 * C6553) *
                C15780 +
            (C20430 * C978 + C20428 * C985 + C20431 * C6554 + C32731 * C6555) *
                C32552) *
               C32916) *
              C32603 * C241) *
         C32577) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C20430 * C119 + C20428 * C126 + C20431 * C352 + C32731 * C367) *
                C15779 +
            (C20430 * C127 + C20428 * C140 + C20431 * C366 + C32731 * C382) *
                C15773 +
            (C20465 + C20466) * C15780 + (C20467 + C20468) * C32552) *
               C32951 +
           ((C21493 + C21494) * C15779 + (C21495 + C21496) * C15773 +
            (C20846 + C20845) * C15780 + (C20844 + C20843) * C32552) *
               C32939 +
           C21517 * C32916) *
              C345 -
          (((C20431 * C1174 + C32731 * C1184 + C20430 * C1161 +
             C20428 * C1178) *
                C32552 +
            (C20431 * C1157 + C32731 * C1173 + C20430 * C1151 +
             C20428 * C1162) *
                C15780 +
            (C20431 * C1172 + C32731 * C1183 + C20430 * C1163 +
             C20428 * C1179) *
                C15773 +
            (C20431 * C1156 + C32731 * C1171 + C20430 * C1152 +
             C20428 * C1164) *
                C15779) *
               C32916 +
           ((C20431 * C1168 + C32731 * C1181 + C20430 * C704 + C20428 * C712) *
                C32552 +
            (C20431 * C1154 + C32731 * C1167 + C20430 * C697 + C20428 * C703) *
                C15780 +
            (C20431 * C1166 + C32731 * C1180 + C20430 * C702 + C20428 * C711) *
                C15773 +
            (C20431 * C1153 + C32731 * C1165 + C20430 * C696 + C20428 * C701) *
                C15779) *
               C32939 +
           ((C21009 + C21010) * C32552 + (C21011 + C21012) * C15780 +
            (C20431 * C369 + C32731 * C383 + C20430 * C366 + C20428 * C382) *
                C15773 +
            (C20431 * C353 + C32731 * C368 + C20430 * C352 + C20428 * C367) *
                C15779) *
               C32951) *
              C346 +
          (((C20430 * C353 + C20428 * C368 + C20431 * C2100 + C32731 * C2109) *
                C15779 +
            (C20430 * C369 + C20428 * C383 + C20431 * C2108 + C32731 * C2118) *
                C15773 +
            (C20430 * C354 + C20428 * C370 + C20431 * C2099 + C32731 * C2107) *
                C15780 +
            (C20430 * C371 + C20428 * C384 + C20431 * C2106 + C32731 * C2117) *
                C32552) *
               C32951 +
           ((C20430 * C1153 + C20428 * C1165 + C20431 * C2640 +
             C32731 * C2643) *
                C15779 +
            (C20430 * C1166 + C20428 * C1180 + C20431 * C2644 +
             C32731 * C2649) *
                C15773 +
            (C20430 * C1154 + C20428 * C1167 + C20431 * C2641 +
             C32731 * C2645) *
                C15780 +
            (C20430 * C1168 + C20428 * C1181 + C20431 * C2646 +
             C32731 * C2650) *
                C32552) *
               C32939 +
           ((C20430 * C1156 + C20428 * C1171 + C20431 * C7053 +
             C32731 * C7057) *
                C15779 +
            (C20430 * C1172 + C20428 * C1183 + C20431 * C7056 +
             C32731 * C7062) *
                C15773 +
            (C20430 * C1157 + C20428 * C1173 + C20431 * C7379 +
             C32731 * C7380) *
                C15780 +
            (C20430 * C1174 + C20428 * C1184 + C20431 * C7381 +
             C32731 * C7382) *
                C32552) *
               C32916) *
              C347) *
         C32589 * C32577) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C22401 * C119 + C32959 * C126 + C22402 * C352 + C32956 * C367 +
            C22403 * C353 + C32947 * C368 + C22404 * C2100 + C32932 * C2109) *
               C15779 +
           (C22401 * C127 + C32959 * C140 + C22402 * C366 + C32956 * C382 +
            C22403 * C369 + C32947 * C383 + C22404 * C2108 + C32932 * C2118) *
               C15773 +
           (C22438 + C22439 + C22440 + C22441) * C15780 +
           (C22442 + C22443 + C22444 + C22445) * C32552) *
              C32633 * C32603 * C32589 * C110 -
          ((C22446 + C22447 + C22448 + C22449) * C32552 +
           (C22450 + C22451 + C22452 + C22453) * C15780 +
           (C22445 + C22444 + C22443 + C22442) * C15773 +
           (C22441 + C22440 + C22439 + C22438) * C15779) *
              C32633 * C32603 * C32589 * C111 +
          ((C22453 + C22452 + C22451 + C22450) * C15779 +
           (C22449 + C22448 + C22447 + C22446) * C15773 +
           (C22401 * C122 + C32959 * C132 + C22402 * C349 + C32956 * C361 +
            C22403 * C356 + C32947 * C374 + C22404 * C2454 + C32932 * C2455) *
               C15780 +
           (C22401 * C133 + C32959 * C143 + C22402 * C360 + C32956 * C379 +
            C22403 * C375 + C32947 * C386 + C22404 * C2456 + C32932 * C2457) *
               C32552) *
              C32633 * C32603 * C32589 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C22401 * C119 + C32959 * C126 + C22402 * C352 + C32956 * C367 +
            C22403 * C353 + C32947 * C368 + C22404 * C2100 + C32932 * C2109) *
               C15779 +
           (C22401 * C127 + C32959 * C140 + C22402 * C366 + C32956 * C382 +
            C22403 * C369 + C32947 * C383 + C22404 * C2108 + C32932 * C2118) *
               C15773 +
           (C22438 + C22439 + C22440 + C22441) * C15780 +
           (C22442 + C22443 + C22444 + C22445) * C32552) *
              C32633 * C32603 * C239 -
          ((C22404 * C2646 + C32932 * C2650 + C22403 * C1168 + C32947 * C1181 +
            C22402 * C704 + C32956 * C712 + C22401 * C259 + C32959 * C276) *
               C32552 +
           (C22404 * C2641 + C32932 * C2645 + C22403 * C1154 + C32947 * C1167 +
            C22402 * C697 + C32956 * C703 + C22401 * C246 + C32959 * C260) *
               C15780 +
           (C22404 * C2644 + C32932 * C2649 + C22403 * C1166 + C32947 * C1180 +
            C22402 * C702 + C32956 * C711 + C22401 * C261 + C32959 * C277) *
               C15773 +
           (C22404 * C2640 + C32932 * C2643 + C22403 * C1153 + C32947 * C1165 +
            C22402 * C696 + C32956 * C701 + C22401 * C247 + C32959 * C262) *
               C15779) *
              C32633 * C32603 * C240 +
          ((C22401 * C248 + C32959 * C263 + C22402 * C1152 + C32956 * C1164 +
            C22403 * C1156 + C32947 * C1171 + C22404 * C7053 + C32932 * C7057) *
               C15779 +
           (C22401 * C264 + C32959 * C278 + C22402 * C1163 + C32956 * C1179 +
            C22403 * C1172 + C32947 * C1183 + C22404 * C7056 + C32932 * C7062) *
               C15773 +
           (C22401 * C249 + C32959 * C265 + C22402 * C1151 + C32956 * C1162 +
            C22403 * C1157 + C32947 * C1173 + C22404 * C7379 + C32932 * C7380) *
               C15780 +
           (C22401 * C266 + C32959 * C279 + C22402 * C1161 + C32956 * C1178 +
            C22403 * C1174 + C32947 * C1184 + C22404 * C7381 + C32932 * C7382) *
               C32552) *
              C32633 * C32603 * C241) *
         C32577) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C22401 * C119 + C32959 * C126 + C22402 * C352 + C32956 * C367 +
            C22403 * C353 + C32947 * C368 + C22404 * C2100 + C32932 * C2109) *
               C15779 +
           (C22401 * C127 + C32959 * C140 + C22402 * C366 + C32956 * C382 +
            C22403 * C369 + C32947 * C383 + C22404 * C2108 + C32932 * C2118) *
               C15773 +
           (C22438 + C22439 + C22440 + C22441) * C15780 +
           (C22442 + C22443 + C22444 + C22445) * C32552) *
              C32633 * C345 -
          ((C22404 * C2113 + C32932 * C2120 + C22403 * C2106 + C32947 * C2117 +
            C22402 * C371 + C32956 * C384 + C22401 * C364 + C32959 * C381) *
               C32552 +
           (C22404 * C2102 + C32932 * C2112 + C22403 * C2099 + C32947 * C2107 +
            C22402 * C354 + C32956 * C370 + C22401 * C351 + C32959 * C365) *
               C15780 +
           (C22404 * C2111 + C32932 * C2119 + C22403 * C2108 + C32947 * C2118 +
            C22402 * C369 + C32956 * C383 + C22401 * C366 + C32959 * C382) *
               C15773 +
           (C22404 * C2101 + C32932 * C2110 + C22403 * C2100 + C32947 * C2109 +
            C22402 * C353 + C32956 * C368 + C22401 * C352 + C32959 * C367) *
               C15779) *
              C32633 * C346 +
          ((C22401 * C353 + C32959 * C368 + C22402 * C2100 + C32956 * C2109 +
            C22403 * C2101 + C32947 * C2110 + C22404 * C12093 +
            C32932 * C12096) *
               C15779 +
           (C22401 * C369 + C32959 * C383 + C22402 * C2108 + C32956 * C2118 +
            C22403 * C2111 + C32947 * C2119 + C22404 * C12095 +
            C32932 * C12099) *
               C15773 +
           (C22401 * C354 + C32959 * C370 + C22402 * C2099 + C32956 * C2107 +
            C22403 * C2102 + C32947 * C2112 + C22404 * C12269 +
            C32932 * C12270) *
               C15780 +
           (C22401 * C371 + C32959 * C384 + C22402 * C2106 + C32956 * C2117 +
            C22403 * C2113 + C32947 * C2120 + C22404 * C12271 +
            C32932 * C12272) *
               C32552) *
              C32633 * C347) *
         C32589 * C32577) /
            (p * q * std::sqrt(p + q));
    d2ee[88] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C20430 * C119 + C20428 * C126 + C20431 * C352 + C32731 * C367) *
                 C15779 +
             (C20430 * C127 + C20428 * C140 + C20431 * C366 + C32731 * C382) *
                 C15773 +
             (C20465 + C20466) * C15780 + (C20467 + C20468) * C32552) *
                C32951 +
            ((C21493 + C21494) * C15779 + (C21495 + C21496) * C15773 +
             C21858 * C15780 + C21859 * C32552) *
                C32939 +
            C21517 * C32916) *
               C584 -
           (((C22074 + C22075) * C32552 + (C22076 + C22077) * C15780 +
             (C20431 * C1172 + C32731 * C1183 + C20430 * C1163 +
              C20428 * C1179) *
                 C15773 +
             (C20431 * C1156 + C32731 * C1171 + C20430 * C1152 +
              C20428 * C1164) *
                 C15779) *
                C32916 +
            ((C22078 + C22079) * C32552 + (C22080 + C22081) * C15780 +
             (C20431 * C1166 + C32731 * C1180 + C20430 * C702 + C20428 * C711) *
                 C15773 +
             (C20431 * C1153 + C32731 * C1165 + C20430 * C696 + C20428 * C701) *
                 C15779) *
                C32939 +
            ((C21009 + C21010) * C32552 + (C21011 + C21012) * C15780 +
             (C20431 * C369 + C32731 * C383 + C20430 * C366 + C20428 * C382) *
                 C15773 +
             (C20431 * C353 + C32731 * C368 + C20430 * C352 + C20428 * C367) *
                 C15779) *
                C32951) *
               C585) *
              C32589 * C472 +
          ((((C21012 + C21011) * C15779 + (C21010 + C21009) * C15773 +
             (C21008 + C21007) * C15780 + (C21006 + C21005) * C32552) *
                C32951 +
            ((C22081 + C22080) * C15779 + (C22079 + C22078) * C15773 +
             (C20430 * C698 + C20428 * C705 + C20431 * C1155 + C32731 * C1169) *
                 C15780 +
             (C20430 * C706 + C20428 * C713 + C20431 * C1170 + C32731 * C1182) *
                 C32552) *
                C32939 +
            ((C22077 + C22076) * C15779 + (C22075 + C22074) * C15773 +
             (C20430 * C1150 + C20428 * C1160 + C20431 * C1158 +
              C32731 * C1175) *
                 C15780 +
             (C20430 * C1159 + C20428 * C1177 + C20431 * C1176 +
              C32731 * C1185) *
                 C32552) *
                C32916) *
               C585 -
           (((C21309 + C21310) * C32552 + (C21311 + C21312) * C15780 +
             C21860 * C15773 + C21861 * C15779) *
                C32916 +
            ((C20839 + C20840) * C32552 + (C20841 + C20842) * C15780 +
             C21862 * C15773 + C21863 * C15779) *
                C32939 +
            ((C20472 + C20471) * C32552 + (C20470 + C20469) * C15780 +
             (C20468 + C20467) * C15773 + (C20466 + C20465) * C15779) *
                C32951) *
               C584) *
              C32589 * C473)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C20430 * C119 + C20428 * C126 + C20431 * C352 + C32731 * C367) *
                C15053 +
            (C20430 * C127 + C20428 * C140 + C20431 * C366 + C32731 * C382) *
                C32957 +
            (C20465 + C20466) * C15054 + (C20467 + C20468) * C32950 +
            C20481 * C15055 + C20482 * C32937 + C20483 * C15056 +
            C20484 * C32920) *
               C32633 * C584 -
           ((C21001 + C21002) * C32920 + (C21003 + C21004) * C15056 +
            (C21005 + C21006) * C32937 + (C21007 + C21008) * C15055 +
            (C21009 + C21010) * C32950 + (C21011 + C21012) * C15054 +
            (C20431 * C369 + C32731 * C383 + C20430 * C366 + C20428 * C382) *
                C32957 +
            (C20431 * C353 + C32731 * C368 + C20430 * C352 + C20428 * C367) *
                C15053) *
               C32633 * C585) *
              C32589 * C472 +
          (((C21012 + C21011) * C15053 + (C21010 + C21009) * C32957 +
            (C21008 + C21007) * C15054 + (C21006 + C21005) * C32950 +
            (C21004 + C21003) * C15055 + (C21002 + C21001) * C32937 +
            (C20430 * C348 + C20428 * C359 + C20431 * C357 + C32731 * C376) *
                C15056 +
            (C20430 * C358 + C20428 * C378 + C20431 * C377 + C32731 * C387) *
                C32920) *
               C32633 * C585 -
           ((C20477 + C20478) * C32920 + (C20479 + C20480) * C15056 +
            (C20476 + C20475) * C32937 + (C20474 + C20473) * C15055 +
            (C20472 + C20471) * C32950 + (C20470 + C20469) * C15054 +
            (C20468 + C20467) * C32957 + (C20466 + C20465) * C15053) *
               C32633 * C584) *
              C32589 * C473)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C22401 * C119 + C32959 * C126 + C22402 * C352 + C32956 * C367 +
             C22403 * C353 + C32947 * C368 + C22404 * C2100 + C32932 * C2109) *
                C15779 +
            (C22401 * C127 + C32959 * C140 + C22402 * C366 + C32956 * C382 +
             C22403 * C369 + C32947 * C383 + C22404 * C2108 + C32932 * C2118) *
                C15773 +
            (C22438 + C22439 + C22440 + C22441) * C15780 +
            (C22442 + C22443 + C22444 + C22445) * C32552) *
               C32633 * C584 -
           ((C22950 + C22951 + C22952 + C22953) * C32552 +
            (C22954 + C22955 + C22956 + C22957) * C15780 +
            (C22404 * C2111 + C32932 * C2119 + C22403 * C2108 + C32947 * C2118 +
             C22402 * C369 + C32956 * C383 + C22401 * C366 + C32959 * C382) *
                C15773 +
            (C22404 * C2101 + C32932 * C2110 + C22403 * C2100 + C32947 * C2109 +
             C22402 * C353 + C32956 * C368 + C22401 * C352 + C32959 * C367) *
                C15779) *
               C32633 * C585) *
              C32589 * C472 +
          (((C22957 + C22956 + C22955 + C22954) * C15779 +
            (C22953 + C22952 + C22951 + C22950) * C15773 +
            (C22401 * C350 + C32959 * C363 + C22402 * C355 + C32956 * C372 +
             C22403 * C2098 + C32947 * C2105 + C22404 * C2103 +
             C32932 * C2114) *
                C15780 +
            (C22401 * C362 + C32959 * C380 + C22402 * C373 + C32956 * C385 +
             C22403 * C2104 + C32947 * C2116 + C22404 * C2115 +
             C32932 * C2121) *
                C32552) *
               C32633 * C585 -
           ((C22446 + C22447 + C22448 + C22449) * C32552 +
            (C22450 + C22451 + C22452 + C22453) * C15780 +
            (C22445 + C22444 + C22443 + C22442) * C15773 +
            (C22441 + C22440 + C22439 + C22438) * C15779) *
               C32633 * C584) *
              C32589 * C473)) /
            (p * q * std::sqrt(p + q));
    d2ee[89] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C20430 * C119 + C20428 * C126 + C20431 * C352 + C32731 * C367) *
               C15053 +
           (C20430 * C127 + C20428 * C140 + C20431 * C366 + C32731 * C382) *
               C32957 +
           (C20465 + C20466) * C15054 + (C20467 + C20468) * C32950 +
           C20481 * C15055 + C20482 * C32937 + C20483 * C15056 +
           C20484 * C32920) *
              C32633 * C32603 * C239 -
          ((C20431 * C708 + C32731 * C714 + C20430 * C255 + C20428 * C274) *
               C32920 +
           (C20431 * C699 + C32731 * C707 + C20430 * C244 + C20428 * C256) *
               C15056 +
           (C20431 * C706 + C32731 * C713 + C20430 * C257 + C20428 * C275) *
               C32937 +
           (C20431 * C698 + C32731 * C705 + C20430 * C245 + C20428 * C258) *
               C15055 +
           (C20431 * C704 + C32731 * C712 + C20430 * C259 + C20428 * C276) *
               C32950 +
           (C20431 * C697 + C32731 * C703 + C20430 * C246 + C20428 * C260) *
               C15054 +
           (C20431 * C702 + C32731 * C711 + C20430 * C261 + C20428 * C277) *
               C32957 +
           (C20431 * C696 + C32731 * C701 + C20430 * C247 + C20428 * C262) *
               C15053) *
              C32633 * C32603 * C240 +
          ((C20430 * C248 + C20428 * C263 + C20431 * C1152 + C32731 * C1164) *
               C15053 +
           (C20430 * C264 + C20428 * C278 + C20431 * C1163 + C32731 * C1179) *
               C32957 +
           (C20430 * C249 + C20428 * C265 + C20431 * C1151 + C32731 * C1162) *
               C15054 +
           (C20430 * C266 + C20428 * C279 + C20431 * C1161 + C32731 * C1178) *
               C32950 +
           (C20430 * C250 + C20428 * C267 + C20431 * C1150 + C32731 * C1160) *
               C15055 +
           (C20430 * C268 + C20428 * C280 + C20431 * C1159 + C32731 * C1177) *
               C32937 +
           (C20430 * C251 + C20428 * C269 + C20431 * C1494 + C32731 * C1495) *
               C15056 +
           (C20430 * C270 + C20428 * C281 + C20431 * C1496 + C32731 * C1497) *
               C32920) *
              C32633 * C32603 * C241) *
         C32577) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C20430 * C119 + C20428 * C126 + C20431 * C352 + C32731 * C367) *
               C15053 +
           (C20430 * C127 + C20428 * C140 + C20431 * C366 + C32731 * C382) *
               C32957 +
           (C20465 + C20466) * C15054 + (C20467 + C20468) * C32950 +
           C20481 * C15055 + C20482 * C32937 + C20483 * C15056 +
           C20484 * C32920) *
              C32633 * C32603 * C32589 * C110 -
          ((C20477 + C20478) * C32920 + (C20479 + C20480) * C15056 +
           (C20476 + C20475) * C32937 + (C20474 + C20473) * C15055 +
           (C20472 + C20471) * C32950 + (C20470 + C20469) * C15054 +
           (C20468 + C20467) * C32957 + (C20466 + C20465) * C15053) *
              C32633 * C32603 * C32589 * C111 +
          (C20481 * C15053 + C20482 * C32957 + C20483 * C15054 +
           C20484 * C32950 + (C20480 + C20479) * C15055 +
           (C20478 + C20477) * C32937 +
           (C20430 * C124 + C20428 * C137 + C20431 * C586 + C32731 * C587) *
               C15056 +
           (C20430 * C136 + C20428 * C145 + C20431 * C588 + C32731 * C589) *
               C32920) *
              C32633 * C32603 * C32589 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C20430 * C119 + C20428 * C126 + C20431 * C352 + C32731 * C367) *
                C15779 +
            (C20430 * C127 + C20428 * C140 + C20431 * C366 + C32731 * C382) *
                C15773 +
            (C20465 + C20466) * C15780 + (C20467 + C20468) * C32552) *
               C32951 +
           ((C20430 * C247 + C20428 * C262 + C20431 * C696 + C32731 * C701) *
                C15779 +
            (C20430 * C261 + C20428 * C277 + C20431 * C702 + C32731 * C711) *
                C15773 +
            (C20846 + C20845) * C15780 + (C20844 + C20843) * C32552) *
               C32939 +
           ((C20430 * C248 + C20428 * C263 + C20431 * C1152 + C32731 * C1164) *
                C15779 +
            (C20430 * C264 + C20428 * C278 + C20431 * C1163 + C32731 * C1179) *
                C15773 +
            (C21305 + C21306) * C15780 + (C21307 + C21308) * C32552) *
               C32916) *
              C32603 * C32589 * C110 -
          (((C21309 + C21310) * C32552 + (C21311 + C21312) * C15780 +
            (C21308 + C21307) * C15773 + (C21306 + C21305) * C15779) *
               C32916 +
           ((C20839 + C20840) * C32552 + (C20841 + C20842) * C15780 +
            (C20843 + C20844) * C15773 + (C20845 + C20846) * C15779) *
               C32939 +
           ((C20472 + C20471) * C32552 + (C20470 + C20469) * C15780 +
            (C20468 + C20467) * C15773 + (C20466 + C20465) * C15779) *
               C32951) *
              C32603 * C32589 * C111 +
          ((C20481 * C15779 + C20482 * C15773 + C20483 * C15780 +
            C20484 * C32552) *
               C32951 +
           ((C20842 + C20841) * C15779 + (C20840 + C20839) * C15773 +
            (C20838 + C20837) * C15780 + (C20836 + C20835) * C32552) *
               C32939 +
           ((C21312 + C21311) * C15779 + (C21310 + C21309) * C15773 +
            (C20430 * C251 + C20428 * C269 + C20431 * C1494 + C32731 * C1495) *
                C15780 +
            (C20430 * C270 + C20428 * C281 + C20431 * C1496 + C32731 * C1497) *
                C32552) *
               C32916) *
              C32603 * C32589 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C20430 * C119 + C20428 * C126 + C20431 * C352 + C32731 * C367) *
                C15779 +
            (C20430 * C127 + C20428 * C140 + C20431 * C366 + C32731 * C382) *
                C15773 +
            (C20465 + C20466) * C15780 + (C20467 + C20468) * C32552) *
               C32951 +
           ((C21493 + C21494) * C15779 + (C21495 + C21496) * C15773 +
            (C20846 + C20845) * C15780 + (C20844 + C20843) * C32552) *
               C32939 +
           C21517 * C32916) *
              C32603 * C239 -
          (((C21503 + C21504) * C32552 + (C21505 + C21506) * C15780 +
            (C21507 + C21508) * C15773 + (C21509 + C21510) * C15779) *
               C32916 +
           ((C21308 + C21307) * C32552 + (C21306 + C21305) * C15780 +
            (C21500 + C21499) * C15773 + (C21498 + C21497) * C15779) *
               C32939 +
           ((C20843 + C20844) * C32552 + (C20845 + C20846) * C15780 +
            (C21496 + C21495) * C15773 + (C21494 + C21493) * C15779) *
               C32951) *
              C32603 * C240 +
          (C21517 * C32951 +
           ((C21510 + C21509) * C15779 + (C21508 + C21507) * C15773 +
            (C21506 + C21505) * C15780 + (C21504 + C21503) * C32552) *
               C32939 +
           ((C20430 * C966 + C20428 * C975 + C20431 * C6358 + C32731 * C6362) *
                C15779 +
            (C20430 * C976 + C20428 * C984 + C20431 * C6361 + C32731 * C6367) *
                C15773 +
            (C20430 * C967 + C20428 * C977 + C20431 * C6552 + C32731 * C6553) *
                C15780 +
            (C20430 * C978 + C20428 * C985 + C20431 * C6554 + C32731 * C6555) *
                C32552) *
               C32916) *
              C32603 * C241) *
         C32577) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C22401 * C119 + C32959 * C126 + C22402 * C352 + C32956 * C367 +
            C22403 * C353 + C32947 * C368 + C22404 * C2100 + C32932 * C2109) *
               C15779 +
           (C22401 * C127 + C32959 * C140 + C22402 * C366 + C32956 * C382 +
            C22403 * C369 + C32947 * C383 + C22404 * C2108 + C32932 * C2118) *
               C15773 +
           (C22438 + C22439 + C22440 + C22441) * C15780 +
           (C22442 + C22443 + C22444 + C22445) * C32552) *
              C32633 * C32603 * C32589 * C110 -
          ((C22446 + C22447 + C22448 + C22449) * C32552 +
           (C22450 + C22451 + C22452 + C22453) * C15780 +
           (C22445 + C22444 + C22443 + C22442) * C15773 +
           (C22441 + C22440 + C22439 + C22438) * C15779) *
              C32633 * C32603 * C32589 * C111 +
          ((C22453 + C22452 + C22451 + C22450) * C15779 +
           (C22449 + C22448 + C22447 + C22446) * C15773 +
           (C22401 * C122 + C32959 * C132 + C22402 * C349 + C32956 * C361 +
            C22403 * C356 + C32947 * C374 + C22404 * C2454 + C32932 * C2455) *
               C15780 +
           (C22401 * C133 + C32959 * C143 + C22402 * C360 + C32956 * C379 +
            C22403 * C375 + C32947 * C386 + C22404 * C2456 + C32932 * C2457) *
               C32552) *
              C32633 * C32603 * C32589 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C22401 * C119 + C32959 * C126 + C22402 * C352 + C32956 * C367 +
            C22403 * C353 + C32947 * C368 + C22404 * C2100 + C32932 * C2109) *
               C15779 +
           (C22401 * C127 + C32959 * C140 + C22402 * C366 + C32956 * C382 +
            C22403 * C369 + C32947 * C383 + C22404 * C2108 + C32932 * C2118) *
               C15773 +
           (C22438 + C22439 + C22440 + C22441) * C15780 +
           (C22442 + C22443 + C22444 + C22445) * C32552) *
              C32633 * C32603 * C239 -
          ((C22404 * C2646 + C32932 * C2650 + C22403 * C1168 + C32947 * C1181 +
            C22402 * C704 + C32956 * C712 + C22401 * C259 + C32959 * C276) *
               C32552 +
           (C22404 * C2641 + C32932 * C2645 + C22403 * C1154 + C32947 * C1167 +
            C22402 * C697 + C32956 * C703 + C22401 * C246 + C32959 * C260) *
               C15780 +
           (C22404 * C2644 + C32932 * C2649 + C22403 * C1166 + C32947 * C1180 +
            C22402 * C702 + C32956 * C711 + C22401 * C261 + C32959 * C277) *
               C15773 +
           (C22404 * C2640 + C32932 * C2643 + C22403 * C1153 + C32947 * C1165 +
            C22402 * C696 + C32956 * C701 + C22401 * C247 + C32959 * C262) *
               C15779) *
              C32633 * C32603 * C240 +
          ((C22401 * C248 + C32959 * C263 + C22402 * C1152 + C32956 * C1164 +
            C22403 * C1156 + C32947 * C1171 + C22404 * C7053 + C32932 * C7057) *
               C15779 +
           (C22401 * C264 + C32959 * C278 + C22402 * C1163 + C32956 * C1179 +
            C22403 * C1172 + C32947 * C1183 + C22404 * C7056 + C32932 * C7062) *
               C15773 +
           (C22401 * C249 + C32959 * C265 + C22402 * C1151 + C32956 * C1162 +
            C22403 * C1157 + C32947 * C1173 + C22404 * C7379 + C32932 * C7380) *
               C15780 +
           (C22401 * C266 + C32959 * C279 + C22402 * C1161 + C32956 * C1178 +
            C22403 * C1174 + C32947 * C1184 + C22404 * C7381 + C32932 * C7382) *
               C32552) *
              C32633 * C32603 * C241) *
         C32577) /
            (p * q * std::sqrt(p + q));
    d2ee[90] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                 ((((C31694 * C119 + C32727 * C126 + C31686 * C352 +
                     C32734 * C367 + C31700 * C353 + C24235 * C368) *
                        C31569 +
                    (C31694 * C127 + C32727 * C140 + C31686 * C366 +
                     C32734 * C382 + C31700 * C369 + C24235 * C383) *
                        C32547 +
                    (C24276 + C24277 + C24278) * C31565 +
                    (C24279 + C24280 + C24281) * C32555 + C24296 * C31575 +
                    C24297 * C17571) *
                       C32633 * C32603 * C470 -
                   ((C24688 + C24689 + C24690) * C17571 +
                    (C24691 + C24692 + C24693) * C31575 +
                    (C24694 + C24695 + C24696) * C32555 +
                    (C24697 + C24698 + C24699) * C31565 +
                    (C31700 * C1166 + C24235 * C1180 + C31686 * C702 +
                     C32734 * C711 + C31694 * C261 + C32727 * C277) *
                        C32547 +
                    (C31700 * C1153 + C24235 * C1165 + C31686 * C696 +
                     C32734 * C701 + C31694 * C247 + C32727 * C262) *
                        C31569) *
                       C32633 * C32603 * C471) *
                      C472 +
                  (((C24699 + C24698 + C24697) * C31569 +
                    (C24696 + C24695 + C24694) * C32547 +
                    (C24693 + C24692 + C24691) * C31565 +
                    (C24690 + C24689 + C24688) * C32555 +
                    (C31694 * C244 + C32727 * C256 + C31686 * C699 +
                     C32734 * C707 + C31700 * C2268 + C24235 * C2269) *
                        C31575 +
                    (C31694 * C255 + C32727 * C274 + C31686 * C708 +
                     C32734 * C714 + C31700 * C2270 + C24235 * C2271) *
                        C17571) *
                       C32633 * C32603 * C471 -
                   ((C24288 + C24289 + C24290) * C17571 +
                    (C24291 + C24292 + C24293) * C31575 +
                    (C24287 + C24286 + C24285) * C32555 +
                    (C24284 + C24283 + C24282) * C31565 +
                    (C24281 + C24280 + C24279) * C32547 +
                    (C24278 + C24277 + C24276) * C31569) *
                       C32633 * C32603 * C470) *
                      C473)) /
                (p * q * std::sqrt(p + q));
    d2ee[91] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                 ((((C31694 * C119 + C32727 * C126 + C31686 * C352 +
                     C32734 * C367 + C31700 * C353 + C24235 * C368) *
                        C31569 +
                    (C31694 * C127 + C32727 * C140 + C31686 * C366 +
                     C32734 * C382 + C31700 * C369 + C24235 * C383) *
                        C32547 +
                    (C24276 + C24277 + C24278) * C31565 +
                    (C24279 + C24280 + C24281) * C32555 + C24296 * C31575 +
                    C24297 * C17571) *
                       C32633 * C584 -
                   ((C24870 + C24871 + C24872) * C17571 +
                    (C24873 + C24874 + C24875) * C31575 +
                    (C24876 + C24877 + C24878) * C32555 +
                    (C24879 + C24880 + C24881) * C31565 +
                    (C31700 * C2108 + C24235 * C2118 + C31686 * C369 +
                     C32734 * C383 + C31694 * C366 + C32727 * C382) *
                        C32547 +
                    (C31700 * C2100 + C24235 * C2109 + C31686 * C353 +
                     C32734 * C368 + C31694 * C352 + C32727 * C367) *
                        C31569) *
                       C32633 * C585) *
                      C470 +
                  (((C31694 * C696 + C32727 * C701 + C31686 * C1153 +
                     C32734 * C1165 + C31700 * C2640 + C24235 * C2643) *
                        C31569 +
                    (C31694 * C702 + C32727 * C711 + C31686 * C1166 +
                     C32734 * C1180 + C31700 * C2644 + C24235 * C2649) *
                        C32547 +
                    (C31694 * C697 + C32727 * C703 + C31686 * C1154 +
                     C32734 * C1167 + C31700 * C2641 + C24235 * C2645) *
                        C31565 +
                    (C31694 * C704 + C32727 * C712 + C31686 * C1168 +
                     C32734 * C1181 + C31700 * C2646 + C24235 * C2650) *
                        C32555 +
                    (C31694 * C698 + C32727 * C705 + C31686 * C1155 +
                     C32734 * C1169 + C31700 * C2642 + C24235 * C2647) *
                        C31575 +
                    (C31694 * C706 + C32727 * C713 + C31686 * C1170 +
                     C32734 * C1182 + C31700 * C2648 + C24235 * C2651) *
                        C17571) *
                       C32633 * C585 -
                   ((C24688 + C24689 + C24690) * C17571 +
                    (C24691 + C24692 + C24693) * C31575 +
                    (C24694 + C24695 + C24696) * C32555 +
                    (C24697 + C24698 + C24699) * C31565 +
                    (C31700 * C1166 + C24235 * C1180 + C31686 * C702 +
                     C32734 * C711 + C31694 * C261 + C32727 * C277) *
                        C32547 +
                    (C31700 * C1153 + C24235 * C1165 + C31686 * C696 +
                     C32734 * C701 + C31694 * C247 + C32727 * C262) *
                        C31569) *
                       C32633 * C584) *
                      C471) *
                 C32577) /
                (p * q * std::sqrt(p + q));
    d2ee[92] += (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((C31694 * C119 + C32727 * C126 + C31686 * C352 +
                    C32734 * C367 + C31700 * C353 + C24235 * C368) *
                       C31569 +
                   (C31694 * C127 + C32727 * C140 + C31686 * C366 +
                    C32734 * C382 + C31700 * C369 + C24235 * C383) *
                       C32547 +
                   (C24276 + C24277 + C24278) * C31565 +
                   (C24279 + C24280 + C24281) * C32555 + C24296 * C31575 +
                   C24297 * C17571) *
                      C32633 * C32603 * C239 -
                  ((C31700 * C1170 + C24235 * C1182 + C31686 * C706 +
                    C32734 * C713 + C31694 * C257 + C32727 * C275) *
                       C17571 +
                   (C31700 * C1155 + C24235 * C1169 + C31686 * C698 +
                    C32734 * C705 + C31694 * C245 + C32727 * C258) *
                       C31575 +
                   (C31700 * C1168 + C24235 * C1181 + C31686 * C704 +
                    C32734 * C712 + C31694 * C259 + C32727 * C276) *
                       C32555 +
                   (C31700 * C1154 + C24235 * C1167 + C31686 * C697 +
                    C32734 * C703 + C31694 * C246 + C32727 * C260) *
                       C31565 +
                   (C31700 * C1166 + C24235 * C1180 + C31686 * C702 +
                    C32734 * C711 + C31694 * C261 + C32727 * C277) *
                       C32547 +
                   (C31700 * C1153 + C24235 * C1165 + C31686 * C696 +
                    C32734 * C701 + C31694 * C247 + C32727 * C262) *
                       C31569) *
                      C32633 * C32603 * C240 +
                  ((C31694 * C248 + C32727 * C263 + C31686 * C1152 +
                    C32734 * C1164 + C31700 * C1156 + C24235 * C1171) *
                       C31569 +
                   (C31694 * C264 + C32727 * C278 + C31686 * C1163 +
                    C32734 * C1179 + C31700 * C1172 + C24235 * C1183) *
                       C32547 +
                   (C31694 * C249 + C32727 * C265 + C31686 * C1151 +
                    C32734 * C1162 + C31700 * C1157 + C24235 * C1173) *
                       C31565 +
                   (C31694 * C266 + C32727 * C279 + C31686 * C1161 +
                    C32734 * C1178 + C31700 * C1174 + C24235 * C1184) *
                       C32555 +
                   (C31694 * C250 + C32727 * C267 + C31686 * C1150 +
                    C32734 * C1160 + C31700 * C1158 + C24235 * C1175) *
                       C31575 +
                   (C31694 * C268 + C32727 * C280 + C31686 * C1159 +
                    C32734 * C1177 + C31700 * C1176 + C24235 * C1185) *
                       C17571) *
                      C32633 * C32603 * C241) *
                 C32577) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((C31694 * C119 + C32727 * C126 + C31686 * C352 +
                    C32734 * C367 + C31700 * C353 + C24235 * C368) *
                       C31569 +
                   (C31694 * C127 + C32727 * C140 + C31686 * C366 +
                    C32734 * C382 + C31700 * C369 + C24235 * C383) *
                       C32547 +
                   (C24276 + C24277 + C24278) * C31565 +
                   (C24279 + C24280 + C24281) * C32555 + C24296 * C31575 +
                   C24297 * C17571) *
                      C32633 * C32603 * C32589 * C110 -
                  ((C24288 + C24289 + C24290) * C17571 +
                   (C24291 + C24292 + C24293) * C31575 +
                   (C24287 + C24286 + C24285) * C32555 +
                   (C24284 + C24283 + C24282) * C31565 +
                   (C24281 + C24280 + C24279) * C32547 +
                   (C24278 + C24277 + C24276) * C31569) *
                      C32633 * C32603 * C32589 * C111 +
                  (C24296 * C31569 + C24297 * C32547 +
                   (C24293 + C24292 + C24291) * C31565 +
                   (C24290 + C24289 + C24288) * C32555 +
                   (C31694 * C123 + C32727 * C134 + C31686 * C348 +
                    C32734 * C359 + C31700 * C357 + C24235 * C376) *
                       C31575 +
                   (C31694 * C135 + C32727 * C144 + C31686 * C358 +
                    C32734 * C378 + C31700 * C377 + C24235 * C387) *
                       C17571) *
                      C32633 * C32603 * C32589 * C112)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((C31694 * C119 + C32727 * C126 + C31686 * C352 +
                    C32734 * C367 + C31700 * C353 + C24235 * C368) *
                       C31569 +
                   (C31694 * C127 + C32727 * C140 + C31686 * C366 +
                    C32734 * C382 + C31700 * C369 + C24235 * C383) *
                       C32547 +
                   (C24276 + C24277 + C24278) * C31565 +
                   (C24279 + C24280 + C24281) * C32555 + C24296 * C31575 +
                   C24297 * C17571) *
                      C32633 * C345 -
                  ((C31700 * C2104 + C24235 * C2116 + C31686 * C373 +
                    C32734 * C385 + C31694 * C362 + C32727 * C380) *
                       C17571 +
                   (C31700 * C2098 + C24235 * C2105 + C31686 * C355 +
                    C32734 * C372 + C31694 * C350 + C32727 * C363) *
                       C31575 +
                   (C31700 * C2106 + C24235 * C2117 + C31686 * C371 +
                    C32734 * C384 + C31694 * C364 + C32727 * C381) *
                       C32555 +
                   (C31700 * C2099 + C24235 * C2107 + C31686 * C354 +
                    C32734 * C370 + C31694 * C351 + C32727 * C365) *
                       C31565 +
                   (C31700 * C2108 + C24235 * C2118 + C31686 * C369 +
                    C32734 * C383 + C31694 * C366 + C32727 * C382) *
                       C32547 +
                   (C31700 * C2100 + C24235 * C2109 + C31686 * C353 +
                    C32734 * C368 + C31694 * C352 + C32727 * C367) *
                       C31569) *
                      C32633 * C346 +
                  ((C31694 * C353 + C32727 * C368 + C31686 * C2100 +
                    C32734 * C2109 + C31700 * C2101 + C24235 * C2110) *
                       C31569 +
                   (C31694 * C369 + C32727 * C383 + C31686 * C2108 +
                    C32734 * C2118 + C31700 * C2111 + C24235 * C2119) *
                       C32547 +
                   (C31694 * C354 + C32727 * C370 + C31686 * C2099 +
                    C32734 * C2107 + C31700 * C2102 + C24235 * C2112) *
                       C31565 +
                   (C31694 * C371 + C32727 * C384 + C31686 * C2106 +
                    C32734 * C2117 + C31700 * C2113 + C24235 * C2120) *
                       C32555 +
                   (C31694 * C355 + C32727 * C372 + C31686 * C2098 +
                    C32734 * C2105 + C31700 * C2103 + C24235 * C2114) *
                       C31575 +
                   (C31694 * C373 + C32727 * C385 + C31686 * C2104 +
                    C32734 * C2116 + C31700 * C2115 + C24235 * C2121) *
                       C17571) *
                      C32633 * C347) *
                 C32589 * C32577) /
                    (p * q * std::sqrt(p + q));
    d2ee[93] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                 ((((C31694 * C119 + C32727 * C126 + C31686 * C352 +
                     C32734 * C367 + C31700 * C353 + C24235 * C368) *
                        C31569 +
                    (C31694 * C127 + C32727 * C140 + C31686 * C366 +
                     C32734 * C382 + C31700 * C369 + C24235 * C383) *
                        C32547 +
                    (C24276 + C24277 + C24278) * C31565 +
                    (C24279 + C24280 + C24281) * C32555 + C24296 * C31575 +
                    C24297 * C17571) *
                       C32633 * C584 -
                   ((C24870 + C24871 + C24872) * C17571 +
                    (C24873 + C24874 + C24875) * C31575 +
                    (C24876 + C24877 + C24878) * C32555 +
                    (C24879 + C24880 + C24881) * C31565 +
                    (C31700 * C2108 + C24235 * C2118 + C31686 * C369 +
                     C32734 * C383 + C31694 * C366 + C32727 * C382) *
                        C32547 +
                    (C31700 * C2100 + C24235 * C2109 + C31686 * C353 +
                     C32734 * C368 + C31694 * C352 + C32727 * C367) *
                        C31569) *
                       C32633 * C585) *
                      C32589 * C472 +
                  (((C24881 + C24880 + C24879) * C31569 +
                    (C24878 + C24877 + C24876) * C32547 +
                    (C24875 + C24874 + C24873) * C31565 +
                    (C24872 + C24871 + C24870) * C32555 +
                    (C31694 * C349 + C32727 * C361 + C31686 * C356 +
                     C32734 * C374 + C31700 * C2454 + C24235 * C2455) *
                        C31575 +
                    (C31694 * C360 + C32727 * C379 + C31686 * C375 +
                     C32734 * C386 + C31700 * C2456 + C24235 * C2457) *
                        C17571) *
                       C32633 * C585 -
                   ((C24288 + C24289 + C24290) * C17571 +
                    (C24291 + C24292 + C24293) * C31575 +
                    (C24287 + C24286 + C24285) * C32555 +
                    (C24284 + C24283 + C24282) * C31565 +
                    (C24281 + C24280 + C24279) * C32547 +
                    (C24278 + C24277 + C24276) * C31569) *
                       C32633 * C584) *
                      C32589 * C473)) /
                (p * q * std::sqrt(p + q));
    d2ee[94] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                 (((C31694 * C119 + C32727 * C126 + C31686 * C352 +
                    C32734 * C367 + C31700 * C353 + C24235 * C368) *
                       C31569 +
                   (C31694 * C127 + C32727 * C140 + C31686 * C366 +
                    C32734 * C382 + C31700 * C369 + C24235 * C383) *
                       C32547 +
                   (C24276 + C24277 + C24278) * C31565 +
                   (C24279 + C24280 + C24281) * C32555 + C24296 * C31575 +
                   C24297 * C17571) *
                      C32633 * C32603 * C32589 * C110 -
                  ((C24288 + C24289 + C24290) * C17571 +
                   (C24291 + C24292 + C24293) * C31575 +
                   (C24287 + C24286 + C24285) * C32555 +
                   (C24284 + C24283 + C24282) * C31565 +
                   (C24281 + C24280 + C24279) * C32547 +
                   (C24278 + C24277 + C24276) * C31569) *
                      C32633 * C32603 * C32589 * C111 +
                  (C24296 * C31569 + C24297 * C32547 +
                   (C24293 + C24292 + C24291) * C31565 +
                   (C24290 + C24289 + C24288) * C32555 +
                   (C31694 * C123 + C32727 * C134 + C31686 * C348 +
                    C32734 * C359 + C31700 * C357 + C24235 * C376) *
                       C31575 +
                   (C31694 * C135 + C32727 * C144 + C31686 * C358 +
                    C32734 * C378 + C31700 * C377 + C24235 * C387) *
                       C17571) *
                      C32633 * C32603 * C32589 * C112)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                 (((C31694 * C119 + C32727 * C126 + C31686 * C352 +
                    C32734 * C367 + C31700 * C353 + C24235 * C368) *
                       C31569 +
                   (C31694 * C127 + C32727 * C140 + C31686 * C366 +
                    C32734 * C382 + C31700 * C369 + C24235 * C383) *
                       C32547 +
                   (C24276 + C24277 + C24278) * C31565 +
                   (C24279 + C24280 + C24281) * C32555 + C24296 * C31575 +
                   C24297 * C17571) *
                      C32633 * C32603 * C239 -
                  ((C31700 * C1170 + C24235 * C1182 + C31686 * C706 +
                    C32734 * C713 + C31694 * C257 + C32727 * C275) *
                       C17571 +
                   (C31700 * C1155 + C24235 * C1169 + C31686 * C698 +
                    C32734 * C705 + C31694 * C245 + C32727 * C258) *
                       C31575 +
                   (C31700 * C1168 + C24235 * C1181 + C31686 * C704 +
                    C32734 * C712 + C31694 * C259 + C32727 * C276) *
                       C32555 +
                   (C31700 * C1154 + C24235 * C1167 + C31686 * C697 +
                    C32734 * C703 + C31694 * C246 + C32727 * C260) *
                       C31565 +
                   (C31700 * C1166 + C24235 * C1180 + C31686 * C702 +
                    C32734 * C711 + C31694 * C261 + C32727 * C277) *
                       C32547 +
                   (C31700 * C1153 + C24235 * C1165 + C31686 * C696 +
                    C32734 * C701 + C31694 * C247 + C32727 * C262) *
                       C31569) *
                      C32633 * C32603 * C240 +
                  ((C31694 * C248 + C32727 * C263 + C31686 * C1152 +
                    C32734 * C1164 + C31700 * C1156 + C24235 * C1171) *
                       C31569 +
                   (C31694 * C264 + C32727 * C278 + C31686 * C1163 +
                    C32734 * C1179 + C31700 * C1172 + C24235 * C1183) *
                       C32547 +
                   (C31694 * C249 + C32727 * C265 + C31686 * C1151 +
                    C32734 * C1162 + C31700 * C1157 + C24235 * C1173) *
                       C31565 +
                   (C31694 * C266 + C32727 * C279 + C31686 * C1161 +
                    C32734 * C1178 + C31700 * C1174 + C24235 * C1184) *
                       C32555 +
                   (C31694 * C250 + C32727 * C267 + C31686 * C1150 +
                    C32734 * C1160 + C31700 * C1158 + C24235 * C1175) *
                       C31575 +
                   (C31694 * C268 + C32727 * C280 + C31686 * C1159 +
                    C32734 * C1177 + C31700 * C1176 + C24235 * C1185) *
                       C17571) *
                      C32633 * C32603 * C241) *
                 C32577) /
                    (p * q * std::sqrt(p + q));
    d2ee[95] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C20430 * C119 + C20428 * C126 + C20431 * C352 + C32731 * C367) *
                C15053 +
            (C20430 * C127 + C20428 * C140 + C20431 * C366 + C32731 * C382) *
                C32957 +
            (C20465 + C20466) * C15054 + (C20467 + C20468) * C32950 +
            C20481 * C15055 + C20482 * C32937 + C20483 * C15056 +
            C20484 * C32920) *
               C32633 * C32603 * C470 -
           ((C20835 + C20836) * C32920 + (C20837 + C20838) * C15056 +
            (C20839 + C20840) * C32937 + (C20841 + C20842) * C15055 +
            (C20843 + C20844) * C32950 + (C20845 + C20846) * C15054 +
            (C20431 * C702 + C32731 * C711 + C20430 * C261 + C20428 * C277) *
                C32957 +
            (C20431 * C696 + C32731 * C701 + C20430 * C247 + C20428 * C262) *
                C15053) *
               C32633 * C32603 * C471) *
              C472 +
          (((C20846 + C20845) * C15053 + (C20844 + C20843) * C32957 +
            (C20842 + C20841) * C15054 + (C20840 + C20839) * C32950 +
            (C20838 + C20837) * C15055 + (C20836 + C20835) * C32937 +
            (C20430 * C243 + C20428 * C254 + C20431 * C700 + C32731 * C709) *
                C15056 +
            (C20430 * C253 + C20428 * C273 + C20431 * C710 + C32731 * C715) *
                C32920) *
               C32633 * C32603 * C471 -
           ((C20477 + C20478) * C32920 + (C20479 + C20480) * C15056 +
            (C20476 + C20475) * C32937 + (C20474 + C20473) * C15055 +
            (C20472 + C20471) * C32950 + (C20470 + C20469) * C15054 +
            (C20468 + C20467) * C32957 + (C20466 + C20465) * C15053) *
               C32633 * C32603 * C470) *
              C473)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C20430 * C119 + C20428 * C126 + C20431 * C352 + C32731 * C367) *
                 C15779 +
             (C20430 * C127 + C20428 * C140 + C20431 * C366 + C32731 * C382) *
                 C15773 +
             (C20465 + C20466) * C15780 + (C20467 + C20468) * C32552) *
                C32951 +
            ((C21493 + C21494) * C15779 + (C21495 + C21496) * C15773 +
             C21858 * C15780 + C21859 * C32552) *
                C32939 +
            C21517 * C32916) *
               C32603 * C470 -
           (((C21503 + C21504) * C32552 + (C21505 + C21506) * C15780 +
             (C21507 + C21508) * C15773 + (C21509 + C21510) * C15779) *
                C32916 +
            (C21860 * C32552 + C21861 * C15780 + (C21500 + C21499) * C15773 +
             (C21498 + C21497) * C15779) *
                C32939 +
            (C21862 * C32552 + C21863 * C15780 + (C21496 + C21495) * C15773 +
             (C21494 + C21493) * C15779) *
                C32951) *
               C32603 * C471) *
              C472 +
          (((C21858 * C15779 + C21859 * C15773 + (C20842 + C20841) * C15780 +
             (C20840 + C20839) * C32552) *
                C32951 +
            (C21475 * C15779 + C21476 * C15773 + (C21312 + C21311) * C15780 +
             (C21310 + C21309) * C32552) *
                C32939 +
            ((C21506 + C21505) * C15779 + (C21504 + C21503) * C15773 +
             (C20430 * C963 + C20428 * C970 + C20431 * C1670 + C32731 * C1675) *
                 C15780 +
             (C20430 * C969 + C20428 * C981 + C20431 * C1676 + C32731 * C1679) *
                 C32552) *
                C32916) *
               C32603 * C471 -
           (((C21309 + C21310) * C32552 + (C21311 + C21312) * C15780 +
             C21860 * C15773 + C21861 * C15779) *
                C32916 +
            ((C20839 + C20840) * C32552 + (C20841 + C20842) * C15780 +
             C21862 * C15773 + C21863 * C15779) *
                C32939 +
            ((C20472 + C20471) * C32552 + (C20470 + C20469) * C15780 +
             (C20468 + C20467) * C15773 + (C20466 + C20465) * C15779) *
                C32951) *
               C32603 * C470) *
              C473)) /
            (p * q * std::sqrt(p + q));
    d2ee[96] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C20430 * C119 + C20428 * C126 + C20431 * C352 + C32731 * C367) *
                C15053 +
            (C20430 * C127 + C20428 * C140 + C20431 * C366 + C32731 * C382) *
                C32957 +
            (C20465 + C20466) * C15054 + (C20467 + C20468) * C32950 +
            C20481 * C15055 + C20482 * C32937 + C20483 * C15056 +
            C20484 * C32920) *
               C32633 * C584 -
           ((C21001 + C21002) * C32920 + (C21003 + C21004) * C15056 +
            (C21005 + C21006) * C32937 + (C21007 + C21008) * C15055 +
            (C21009 + C21010) * C32950 + (C21011 + C21012) * C15054 +
            (C20431 * C369 + C32731 * C383 + C20430 * C366 + C20428 * C382) *
                C32957 +
            (C20431 * C353 + C32731 * C368 + C20430 * C352 + C20428 * C367) *
                C15053) *
               C32633 * C585) *
              C470 +
          (((C20430 * C696 + C20428 * C701 + C20431 * C1153 + C32731 * C1165) *
                C15053 +
            (C20430 * C702 + C20428 * C711 + C20431 * C1166 + C32731 * C1180) *
                C32957 +
            (C20430 * C697 + C20428 * C703 + C20431 * C1154 + C32731 * C1167) *
                C15054 +
            (C20430 * C704 + C20428 * C712 + C20431 * C1168 + C32731 * C1181) *
                C32950 +
            (C20430 * C698 + C20428 * C705 + C20431 * C1155 + C32731 * C1169) *
                C15055 +
            (C20430 * C706 + C20428 * C713 + C20431 * C1170 + C32731 * C1182) *
                C32937 +
            (C20430 * C699 + C20428 * C707 + C20431 * C2268 + C32731 * C2269) *
                C15056 +
            (C20430 * C708 + C20428 * C714 + C20431 * C2270 + C32731 * C2271) *
                C32920) *
               C32633 * C585 -
           ((C20835 + C20836) * C32920 + (C20837 + C20838) * C15056 +
            (C20839 + C20840) * C32937 + (C20841 + C20842) * C15055 +
            (C20843 + C20844) * C32950 + (C20845 + C20846) * C15054 +
            (C20431 * C702 + C32731 * C711 + C20430 * C261 + C20428 * C277) *
                C32957 +
            (C20431 * C696 + C32731 * C701 + C20430 * C247 + C20428 * C262) *
                C15053) *
               C32633 * C584) *
              C471) *
         C32577) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C20430 * C119 + C20428 * C126 + C20431 * C352 + C32731 * C367) *
                 C15779 +
             (C20430 * C127 + C20428 * C140 + C20431 * C366 + C32731 * C382) *
                 C15773 +
             (C20465 + C20466) * C15780 + (C20467 + C20468) * C32552) *
                C32951 +
            ((C21493 + C21494) * C15779 + (C21495 + C21496) * C15773 +
             C21858 * C15780 + C21859 * C32552) *
                C32939 +
            C21517 * C32916) *
               C584 -
           (((C22074 + C22075) * C32552 + (C22076 + C22077) * C15780 +
             (C22292 + C22293) * C15773 + (C22294 + C22295) * C15779) *
                C32916 +
            ((C22078 + C22079) * C32552 + (C22080 + C22081) * C15780 +
             (C22296 + C22297) * C15773 + (C22298 + C22299) * C15779) *
                C32939 +
            ((C21009 + C21010) * C32552 + (C21011 + C21012) * C15780 +
             (C20431 * C369 + C32731 * C383 + C20430 * C366 + C20428 * C382) *
                 C15773 +
             (C20431 * C353 + C32731 * C368 + C20430 * C352 + C20428 * C367) *
                 C15779) *
                C32951) *
               C585) *
              C470 +
          ((((C22299 + C22298) * C15779 + (C22297 + C22296) * C15773 +
             (C22081 + C22080) * C15780 + (C22079 + C22078) * C32552) *
                C32951 +
            ((C22295 + C22294) * C15779 + (C22293 + C22292) * C15773 +
             (C22077 + C22076) * C15780 + (C22075 + C22074) * C32552) *
                C32939 +
            ((C20430 * C1668 + C20428 * C1671 + C20431 * C6359 +
              C32731 * C6363) *
                 C15779 +
             (C20430 * C1672 + C20428 * C1677 + C20431 * C6364 +
              C32731 * C6368) *
                 C15773 +
             (C20430 * C1669 + C20428 * C1673 + C20431 * C7211 +
              C32731 * C7212) *
                 C15780 +
             (C20430 * C1674 + C20428 * C1678 + C20431 * C7213 +
              C32731 * C7214) *
                 C32552) *
                C32916) *
               C585 -
           (((C21503 + C21504) * C32552 + (C21505 + C21506) * C15780 +
             (C21507 + C21508) * C15773 + (C21509 + C21510) * C15779) *
                C32916 +
            (C21860 * C32552 + C21861 * C15780 + (C21500 + C21499) * C15773 +
             (C21498 + C21497) * C15779) *
                C32939 +
            (C21862 * C32552 + C21863 * C15780 + (C21496 + C21495) * C15773 +
             (C21494 + C21493) * C15779) *
                C32951) *
               C584) *
              C471) *
         C32577) /
            (p * q * std::sqrt(p + q));
    d2ee[97] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C20430 * C119 + C20428 * C126 + C20431 * C352 + C32731 * C367) *
               C15053 +
           (C20430 * C127 + C20428 * C140 + C20431 * C366 + C32731 * C382) *
               C32957 +
           (C20465 + C20466) * C15054 + (C20467 + C20468) * C32950 +
           C20481 * C15055 + C20482 * C32937 + C20483 * C15056 +
           C20484 * C32920) *
              C32633 * C32603 * C239 -
          ((C20431 * C708 + C32731 * C714 + C20430 * C255 + C20428 * C274) *
               C32920 +
           (C20431 * C699 + C32731 * C707 + C20430 * C244 + C20428 * C256) *
               C15056 +
           (C20431 * C706 + C32731 * C713 + C20430 * C257 + C20428 * C275) *
               C32937 +
           (C20431 * C698 + C32731 * C705 + C20430 * C245 + C20428 * C258) *
               C15055 +
           (C20431 * C704 + C32731 * C712 + C20430 * C259 + C20428 * C276) *
               C32950 +
           (C20431 * C697 + C32731 * C703 + C20430 * C246 + C20428 * C260) *
               C15054 +
           (C20431 * C702 + C32731 * C711 + C20430 * C261 + C20428 * C277) *
               C32957 +
           (C20431 * C696 + C32731 * C701 + C20430 * C247 + C20428 * C262) *
               C15053) *
              C32633 * C32603 * C240 +
          ((C20430 * C248 + C20428 * C263 + C20431 * C1152 + C32731 * C1164) *
               C15053 +
           (C20430 * C264 + C20428 * C278 + C20431 * C1163 + C32731 * C1179) *
               C32957 +
           (C20430 * C249 + C20428 * C265 + C20431 * C1151 + C32731 * C1162) *
               C15054 +
           (C20430 * C266 + C20428 * C279 + C20431 * C1161 + C32731 * C1178) *
               C32950 +
           (C20430 * C250 + C20428 * C267 + C20431 * C1150 + C32731 * C1160) *
               C15055 +
           (C20430 * C268 + C20428 * C280 + C20431 * C1159 + C32731 * C1177) *
               C32937 +
           (C20430 * C251 + C20428 * C269 + C20431 * C1494 + C32731 * C1495) *
               C15056 +
           (C20430 * C270 + C20428 * C281 + C20431 * C1496 + C32731 * C1497) *
               C32920) *
              C32633 * C32603 * C241) *
         C32577) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C20430 * C119 + C20428 * C126 + C20431 * C352 + C32731 * C367) *
               C15053 +
           (C20430 * C127 + C20428 * C140 + C20431 * C366 + C32731 * C382) *
               C32957 +
           (C20465 + C20466) * C15054 + (C20467 + C20468) * C32950 +
           C20481 * C15055 + C20482 * C32937 + C20483 * C15056 +
           C20484 * C32920) *
              C32633 * C32603 * C32589 * C110 -
          ((C20477 + C20478) * C32920 + (C20479 + C20480) * C15056 +
           (C20476 + C20475) * C32937 + (C20474 + C20473) * C15055 +
           (C20472 + C20471) * C32950 + (C20470 + C20469) * C15054 +
           (C20468 + C20467) * C32957 + (C20466 + C20465) * C15053) *
              C32633 * C32603 * C32589 * C111 +
          (C20481 * C15053 + C20482 * C32957 + C20483 * C15054 +
           C20484 * C32950 + (C20480 + C20479) * C15055 +
           (C20478 + C20477) * C32937 +
           (C20430 * C124 + C20428 * C137 + C20431 * C586 + C32731 * C587) *
               C15056 +
           (C20430 * C136 + C20428 * C145 + C20431 * C588 + C32731 * C589) *
               C32920) *
              C32633 * C32603 * C32589 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C20430 * C119 + C20428 * C126 + C20431 * C352 + C32731 * C367) *
               C15053 +
           (C20430 * C127 + C20428 * C140 + C20431 * C366 + C32731 * C382) *
               C32957 +
           (C20465 + C20466) * C15054 + (C20467 + C20468) * C32950 +
           C20481 * C15055 + C20482 * C32937 + C20483 * C15056 +
           C20484 * C32920) *
              C32633 * C345 -
          ((C20431 * C375 + C32731 * C386 + C20430 * C360 + C20428 * C379) *
               C32920 +
           (C20431 * C356 + C32731 * C374 + C20430 * C349 + C20428 * C361) *
               C15056 +
           (C20431 * C373 + C32731 * C385 + C20430 * C362 + C20428 * C380) *
               C32937 +
           (C20431 * C355 + C32731 * C372 + C20430 * C350 + C20428 * C363) *
               C15055 +
           (C20431 * C371 + C32731 * C384 + C20430 * C364 + C20428 * C381) *
               C32950 +
           (C20431 * C354 + C32731 * C370 + C20430 * C351 + C20428 * C365) *
               C15054 +
           (C20431 * C369 + C32731 * C383 + C20430 * C366 + C20428 * C382) *
               C32957 +
           (C20431 * C353 + C32731 * C368 + C20430 * C352 + C20428 * C367) *
               C15053) *
              C32633 * C346 +
          ((C20430 * C353 + C20428 * C368 + C20431 * C2100 + C32731 * C2109) *
               C15053 +
           (C20430 * C369 + C20428 * C383 + C20431 * C2108 + C32731 * C2118) *
               C32957 +
           (C20430 * C354 + C20428 * C370 + C20431 * C2099 + C32731 * C2107) *
               C15054 +
           (C20430 * C371 + C20428 * C384 + C20431 * C2106 + C32731 * C2117) *
               C32950 +
           (C20430 * C355 + C20428 * C372 + C20431 * C2098 + C32731 * C2105) *
               C15055 +
           (C20430 * C373 + C20428 * C385 + C20431 * C2104 + C32731 * C2116) *
               C32937 +
           (C20430 * C356 + C20428 * C374 + C20431 * C2454 + C32731 * C2455) *
               C15056 +
           (C20430 * C375 + C20428 * C386 + C20431 * C2456 + C32731 * C2457) *
               C32920) *
              C32633 * C347) *
         C32589 * C32577) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C20430 * C119 + C20428 * C126 + C20431 * C352 + C32731 * C367) *
                C15779 +
            (C20430 * C127 + C20428 * C140 + C20431 * C366 + C32731 * C382) *
                C15773 +
            (C20465 + C20466) * C15780 + (C20467 + C20468) * C32552) *
               C32951 +
           ((C20430 * C247 + C20428 * C262 + C20431 * C696 + C32731 * C701) *
                C15779 +
            (C20430 * C261 + C20428 * C277 + C20431 * C702 + C32731 * C711) *
                C15773 +
            (C20846 + C20845) * C15780 + (C20844 + C20843) * C32552) *
               C32939 +
           ((C20430 * C248 + C20428 * C263 + C20431 * C1152 + C32731 * C1164) *
                C15779 +
            (C20430 * C264 + C20428 * C278 + C20431 * C1163 + C32731 * C1179) *
                C15773 +
            (C21305 + C21306) * C15780 + (C21307 + C21308) * C32552) *
               C32916) *
              C32603 * C32589 * C110 -
          (((C21309 + C21310) * C32552 + (C21311 + C21312) * C15780 +
            (C21308 + C21307) * C15773 + (C21306 + C21305) * C15779) *
               C32916 +
           ((C20839 + C20840) * C32552 + (C20841 + C20842) * C15780 +
            (C20843 + C20844) * C15773 + (C20845 + C20846) * C15779) *
               C32939 +
           ((C20472 + C20471) * C32552 + (C20470 + C20469) * C15780 +
            (C20468 + C20467) * C15773 + (C20466 + C20465) * C15779) *
               C32951) *
              C32603 * C32589 * C111 +
          ((C20481 * C15779 + C20482 * C15773 + C20483 * C15780 +
            C20484 * C32552) *
               C32951 +
           ((C20842 + C20841) * C15779 + (C20840 + C20839) * C15773 +
            (C20838 + C20837) * C15780 + (C20836 + C20835) * C32552) *
               C32939 +
           ((C21312 + C21311) * C15779 + (C21310 + C21309) * C15773 +
            (C20430 * C251 + C20428 * C269 + C20431 * C1494 + C32731 * C1495) *
                C15780 +
            (C20430 * C270 + C20428 * C281 + C20431 * C1496 + C32731 * C1497) *
                C32552) *
               C32916) *
              C32603 * C32589 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C20430 * C119 + C20428 * C126 + C20431 * C352 + C32731 * C367) *
                C15779 +
            (C20430 * C127 + C20428 * C140 + C20431 * C366 + C32731 * C382) *
                C15773 +
            (C20465 + C20466) * C15780 + (C20467 + C20468) * C32552) *
               C32951 +
           ((C21493 + C21494) * C15779 + (C21495 + C21496) * C15773 +
            (C20846 + C20845) * C15780 + (C20844 + C20843) * C32552) *
               C32939 +
           C21517 * C32916) *
              C32603 * C239 -
          (((C21503 + C21504) * C32552 + (C21505 + C21506) * C15780 +
            (C21507 + C21508) * C15773 + (C21509 + C21510) * C15779) *
               C32916 +
           ((C21308 + C21307) * C32552 + (C21306 + C21305) * C15780 +
            (C21500 + C21499) * C15773 + (C21498 + C21497) * C15779) *
               C32939 +
           ((C20843 + C20844) * C32552 + (C20845 + C20846) * C15780 +
            (C21496 + C21495) * C15773 + (C21494 + C21493) * C15779) *
               C32951) *
              C32603 * C240 +
          (C21517 * C32951 +
           ((C21510 + C21509) * C15779 + (C21508 + C21507) * C15773 +
            (C21506 + C21505) * C15780 + (C21504 + C21503) * C32552) *
               C32939 +
           ((C20430 * C966 + C20428 * C975 + C20431 * C6358 + C32731 * C6362) *
                C15779 +
            (C20430 * C976 + C20428 * C984 + C20431 * C6361 + C32731 * C6367) *
                C15773 +
            (C20430 * C967 + C20428 * C977 + C20431 * C6552 + C32731 * C6553) *
                C15780 +
            (C20430 * C978 + C20428 * C985 + C20431 * C6554 + C32731 * C6555) *
                C32552) *
               C32916) *
              C32603 * C241) *
         C32577) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C20430 * C119 + C20428 * C126 + C20431 * C352 + C32731 * C367) *
                C15779 +
            (C20430 * C127 + C20428 * C140 + C20431 * C366 + C32731 * C382) *
                C15773 +
            (C20465 + C20466) * C15780 + (C20467 + C20468) * C32552) *
               C32951 +
           ((C21493 + C21494) * C15779 + (C21495 + C21496) * C15773 +
            (C20846 + C20845) * C15780 + (C20844 + C20843) * C32552) *
               C32939 +
           C21517 * C32916) *
              C345 -
          (((C20431 * C1174 + C32731 * C1184 + C20430 * C1161 +
             C20428 * C1178) *
                C32552 +
            (C20431 * C1157 + C32731 * C1173 + C20430 * C1151 +
             C20428 * C1162) *
                C15780 +
            (C20431 * C1172 + C32731 * C1183 + C20430 * C1163 +
             C20428 * C1179) *
                C15773 +
            (C20431 * C1156 + C32731 * C1171 + C20430 * C1152 +
             C20428 * C1164) *
                C15779) *
               C32916 +
           ((C20431 * C1168 + C32731 * C1181 + C20430 * C704 + C20428 * C712) *
                C32552 +
            (C20431 * C1154 + C32731 * C1167 + C20430 * C697 + C20428 * C703) *
                C15780 +
            (C20431 * C1166 + C32731 * C1180 + C20430 * C702 + C20428 * C711) *
                C15773 +
            (C20431 * C1153 + C32731 * C1165 + C20430 * C696 + C20428 * C701) *
                C15779) *
               C32939 +
           ((C21009 + C21010) * C32552 + (C21011 + C21012) * C15780 +
            (C20431 * C369 + C32731 * C383 + C20430 * C366 + C20428 * C382) *
                C15773 +
            (C20431 * C353 + C32731 * C368 + C20430 * C352 + C20428 * C367) *
                C15779) *
               C32951) *
              C346 +
          (((C20430 * C353 + C20428 * C368 + C20431 * C2100 + C32731 * C2109) *
                C15779 +
            (C20430 * C369 + C20428 * C383 + C20431 * C2108 + C32731 * C2118) *
                C15773 +
            (C20430 * C354 + C20428 * C370 + C20431 * C2099 + C32731 * C2107) *
                C15780 +
            (C20430 * C371 + C20428 * C384 + C20431 * C2106 + C32731 * C2117) *
                C32552) *
               C32951 +
           ((C20430 * C1153 + C20428 * C1165 + C20431 * C2640 +
             C32731 * C2643) *
                C15779 +
            (C20430 * C1166 + C20428 * C1180 + C20431 * C2644 +
             C32731 * C2649) *
                C15773 +
            (C20430 * C1154 + C20428 * C1167 + C20431 * C2641 +
             C32731 * C2645) *
                C15780 +
            (C20430 * C1168 + C20428 * C1181 + C20431 * C2646 +
             C32731 * C2650) *
                C32552) *
               C32939 +
           ((C20430 * C1156 + C20428 * C1171 + C20431 * C7053 +
             C32731 * C7057) *
                C15779 +
            (C20430 * C1172 + C20428 * C1183 + C20431 * C7056 +
             C32731 * C7062) *
                C15773 +
            (C20430 * C1157 + C20428 * C1173 + C20431 * C7379 +
             C32731 * C7380) *
                C15780 +
            (C20430 * C1174 + C20428 * C1184 + C20431 * C7381 +
             C32731 * C7382) *
                C32552) *
               C32916) *
              C347) *
         C32589 * C32577) /
            (p * q * std::sqrt(p + q));
    d2ee[98] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C20430 * C119 + C20428 * C126 + C20431 * C352 + C32731 * C367) *
                C15053 +
            (C20430 * C127 + C20428 * C140 + C20431 * C366 + C32731 * C382) *
                C32957 +
            (C20465 + C20466) * C15054 + (C20467 + C20468) * C32950 +
            C20481 * C15055 + C20482 * C32937 + C20483 * C15056 +
            C20484 * C32920) *
               C32633 * C584 -
           ((C21001 + C21002) * C32920 + (C21003 + C21004) * C15056 +
            (C21005 + C21006) * C32937 + (C21007 + C21008) * C15055 +
            (C21009 + C21010) * C32950 + (C21011 + C21012) * C15054 +
            (C20431 * C369 + C32731 * C383 + C20430 * C366 + C20428 * C382) *
                C32957 +
            (C20431 * C353 + C32731 * C368 + C20430 * C352 + C20428 * C367) *
                C15053) *
               C32633 * C585) *
              C32589 * C472 +
          (((C21012 + C21011) * C15053 + (C21010 + C21009) * C32957 +
            (C21008 + C21007) * C15054 + (C21006 + C21005) * C32950 +
            (C21004 + C21003) * C15055 + (C21002 + C21001) * C32937 +
            (C20430 * C348 + C20428 * C359 + C20431 * C357 + C32731 * C376) *
                C15056 +
            (C20430 * C358 + C20428 * C378 + C20431 * C377 + C32731 * C387) *
                C32920) *
               C32633 * C585 -
           ((C20477 + C20478) * C32920 + (C20479 + C20480) * C15056 +
            (C20476 + C20475) * C32937 + (C20474 + C20473) * C15055 +
            (C20472 + C20471) * C32950 + (C20470 + C20469) * C15054 +
            (C20468 + C20467) * C32957 + (C20466 + C20465) * C15053) *
               C32633 * C584) *
              C32589 * C473)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C20430 * C119 + C20428 * C126 + C20431 * C352 + C32731 * C367) *
                 C15779 +
             (C20430 * C127 + C20428 * C140 + C20431 * C366 + C32731 * C382) *
                 C15773 +
             (C20465 + C20466) * C15780 + (C20467 + C20468) * C32552) *
                C32951 +
            ((C21493 + C21494) * C15779 + (C21495 + C21496) * C15773 +
             C21858 * C15780 + C21859 * C32552) *
                C32939 +
            C21517 * C32916) *
               C584 -
           (((C22074 + C22075) * C32552 + (C22076 + C22077) * C15780 +
             (C20431 * C1172 + C32731 * C1183 + C20430 * C1163 +
              C20428 * C1179) *
                 C15773 +
             (C20431 * C1156 + C32731 * C1171 + C20430 * C1152 +
              C20428 * C1164) *
                 C15779) *
                C32916 +
            ((C22078 + C22079) * C32552 + (C22080 + C22081) * C15780 +
             (C20431 * C1166 + C32731 * C1180 + C20430 * C702 + C20428 * C711) *
                 C15773 +
             (C20431 * C1153 + C32731 * C1165 + C20430 * C696 + C20428 * C701) *
                 C15779) *
                C32939 +
            ((C21009 + C21010) * C32552 + (C21011 + C21012) * C15780 +
             (C20431 * C369 + C32731 * C383 + C20430 * C366 + C20428 * C382) *
                 C15773 +
             (C20431 * C353 + C32731 * C368 + C20430 * C352 + C20428 * C367) *
                 C15779) *
                C32951) *
               C585) *
              C32589 * C472 +
          ((((C21012 + C21011) * C15779 + (C21010 + C21009) * C15773 +
             (C21008 + C21007) * C15780 + (C21006 + C21005) * C32552) *
                C32951 +
            ((C22081 + C22080) * C15779 + (C22079 + C22078) * C15773 +
             (C20430 * C698 + C20428 * C705 + C20431 * C1155 + C32731 * C1169) *
                 C15780 +
             (C20430 * C706 + C20428 * C713 + C20431 * C1170 + C32731 * C1182) *
                 C32552) *
                C32939 +
            ((C22077 + C22076) * C15779 + (C22075 + C22074) * C15773 +
             (C20430 * C1150 + C20428 * C1160 + C20431 * C1158 +
              C32731 * C1175) *
                 C15780 +
             (C20430 * C1159 + C20428 * C1177 + C20431 * C1176 +
              C32731 * C1185) *
                 C32552) *
                C32916) *
               C585 -
           (((C21309 + C21310) * C32552 + (C21311 + C21312) * C15780 +
             C21860 * C15773 + C21861 * C15779) *
                C32916 +
            ((C20839 + C20840) * C32552 + (C20841 + C20842) * C15780 +
             C21862 * C15773 + C21863 * C15779) *
                C32939 +
            ((C20472 + C20471) * C32552 + (C20470 + C20469) * C15780 +
             (C20468 + C20467) * C15773 + (C20466 + C20465) * C15779) *
                C32951) *
               C584) *
              C32589 * C473)) /
            (p * q * std::sqrt(p + q));
    d2ee[99] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C20430 * C119 + C20428 * C126 + C20431 * C352 + C32731 * C367) *
               C15053 +
           (C20430 * C127 + C20428 * C140 + C20431 * C366 + C32731 * C382) *
               C32957 +
           (C20465 + C20466) * C15054 + (C20467 + C20468) * C32950 +
           C20481 * C15055 + C20482 * C32937 + C20483 * C15056 +
           C20484 * C32920) *
              C32633 * C32603 * C32589 * C110 -
          ((C20477 + C20478) * C32920 + (C20479 + C20480) * C15056 +
           (C20476 + C20475) * C32937 + (C20474 + C20473) * C15055 +
           (C20472 + C20471) * C32950 + (C20470 + C20469) * C15054 +
           (C20468 + C20467) * C32957 + (C20466 + C20465) * C15053) *
              C32633 * C32603 * C32589 * C111 +
          (C20481 * C15053 + C20482 * C32957 + C20483 * C15054 +
           C20484 * C32950 + (C20480 + C20479) * C15055 +
           (C20478 + C20477) * C32937 +
           (C20430 * C124 + C20428 * C137 + C20431 * C586 + C32731 * C587) *
               C15056 +
           (C20430 * C136 + C20428 * C145 + C20431 * C588 + C32731 * C589) *
               C32920) *
              C32633 * C32603 * C32589 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C20430 * C119 + C20428 * C126 + C20431 * C352 + C32731 * C367) *
               C15053 +
           (C20430 * C127 + C20428 * C140 + C20431 * C366 + C32731 * C382) *
               C32957 +
           (C20465 + C20466) * C15054 + (C20467 + C20468) * C32950 +
           C20481 * C15055 + C20482 * C32937 + C20483 * C15056 +
           C20484 * C32920) *
              C32633 * C32603 * C239 -
          ((C20431 * C708 + C32731 * C714 + C20430 * C255 + C20428 * C274) *
               C32920 +
           (C20431 * C699 + C32731 * C707 + C20430 * C244 + C20428 * C256) *
               C15056 +
           (C20431 * C706 + C32731 * C713 + C20430 * C257 + C20428 * C275) *
               C32937 +
           (C20431 * C698 + C32731 * C705 + C20430 * C245 + C20428 * C258) *
               C15055 +
           (C20431 * C704 + C32731 * C712 + C20430 * C259 + C20428 * C276) *
               C32950 +
           (C20431 * C697 + C32731 * C703 + C20430 * C246 + C20428 * C260) *
               C15054 +
           (C20431 * C702 + C32731 * C711 + C20430 * C261 + C20428 * C277) *
               C32957 +
           (C20431 * C696 + C32731 * C701 + C20430 * C247 + C20428 * C262) *
               C15053) *
              C32633 * C32603 * C240 +
          ((C20430 * C248 + C20428 * C263 + C20431 * C1152 + C32731 * C1164) *
               C15053 +
           (C20430 * C264 + C20428 * C278 + C20431 * C1163 + C32731 * C1179) *
               C32957 +
           (C20430 * C249 + C20428 * C265 + C20431 * C1151 + C32731 * C1162) *
               C15054 +
           (C20430 * C266 + C20428 * C279 + C20431 * C1161 + C32731 * C1178) *
               C32950 +
           (C20430 * C250 + C20428 * C267 + C20431 * C1150 + C32731 * C1160) *
               C15055 +
           (C20430 * C268 + C20428 * C280 + C20431 * C1159 + C32731 * C1177) *
               C32937 +
           (C20430 * C251 + C20428 * C269 + C20431 * C1494 + C32731 * C1495) *
               C15056 +
           (C20430 * C270 + C20428 * C281 + C20431 * C1496 + C32731 * C1497) *
               C32920) *
              C32633 * C32603 * C241) *
         C32577) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C20430 * C119 + C20428 * C126 + C20431 * C352 + C32731 * C367) *
                C15779 +
            (C20430 * C127 + C20428 * C140 + C20431 * C366 + C32731 * C382) *
                C15773 +
            (C20465 + C20466) * C15780 + (C20467 + C20468) * C32552) *
               C32951 +
           ((C20430 * C247 + C20428 * C262 + C20431 * C696 + C32731 * C701) *
                C15779 +
            (C20430 * C261 + C20428 * C277 + C20431 * C702 + C32731 * C711) *
                C15773 +
            (C20846 + C20845) * C15780 + (C20844 + C20843) * C32552) *
               C32939 +
           ((C20430 * C248 + C20428 * C263 + C20431 * C1152 + C32731 * C1164) *
                C15779 +
            (C20430 * C264 + C20428 * C278 + C20431 * C1163 + C32731 * C1179) *
                C15773 +
            (C21305 + C21306) * C15780 + (C21307 + C21308) * C32552) *
               C32916) *
              C32603 * C32589 * C110 -
          (((C21309 + C21310) * C32552 + (C21311 + C21312) * C15780 +
            (C21308 + C21307) * C15773 + (C21306 + C21305) * C15779) *
               C32916 +
           ((C20839 + C20840) * C32552 + (C20841 + C20842) * C15780 +
            (C20843 + C20844) * C15773 + (C20845 + C20846) * C15779) *
               C32939 +
           ((C20472 + C20471) * C32552 + (C20470 + C20469) * C15780 +
            (C20468 + C20467) * C15773 + (C20466 + C20465) * C15779) *
               C32951) *
              C32603 * C32589 * C111 +
          ((C20481 * C15779 + C20482 * C15773 + C20483 * C15780 +
            C20484 * C32552) *
               C32951 +
           ((C20842 + C20841) * C15779 + (C20840 + C20839) * C15773 +
            (C20838 + C20837) * C15780 + (C20836 + C20835) * C32552) *
               C32939 +
           ((C21312 + C21311) * C15779 + (C21310 + C21309) * C15773 +
            (C20430 * C251 + C20428 * C269 + C20431 * C1494 + C32731 * C1495) *
                C15780 +
            (C20430 * C270 + C20428 * C281 + C20431 * C1496 + C32731 * C1497) *
                C32552) *
               C32916) *
              C32603 * C32589 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C20430 * C119 + C20428 * C126 + C20431 * C352 + C32731 * C367) *
                C15779 +
            (C20430 * C127 + C20428 * C140 + C20431 * C366 + C32731 * C382) *
                C15773 +
            (C20465 + C20466) * C15780 + (C20467 + C20468) * C32552) *
               C32951 +
           ((C21493 + C21494) * C15779 + (C21495 + C21496) * C15773 +
            (C20846 + C20845) * C15780 + (C20844 + C20843) * C32552) *
               C32939 +
           C21517 * C32916) *
              C32603 * C239 -
          (((C21503 + C21504) * C32552 + (C21505 + C21506) * C15780 +
            (C21507 + C21508) * C15773 + (C21509 + C21510) * C15779) *
               C32916 +
           ((C21308 + C21307) * C32552 + (C21306 + C21305) * C15780 +
            (C21500 + C21499) * C15773 + (C21498 + C21497) * C15779) *
               C32939 +
           ((C20843 + C20844) * C32552 + (C20845 + C20846) * C15780 +
            (C21496 + C21495) * C15773 + (C21494 + C21493) * C15779) *
               C32951) *
              C32603 * C240 +
          (C21517 * C32951 +
           ((C21510 + C21509) * C15779 + (C21508 + C21507) * C15773 +
            (C21506 + C21505) * C15780 + (C21504 + C21503) * C32552) *
               C32939 +
           ((C20430 * C966 + C20428 * C975 + C20431 * C6358 + C32731 * C6362) *
                C15779 +
            (C20430 * C976 + C20428 * C984 + C20431 * C6361 + C32731 * C6367) *
                C15773 +
            (C20430 * C967 + C20428 * C977 + C20431 * C6552 + C32731 * C6553) *
                C15780 +
            (C20430 * C978 + C20428 * C985 + C20431 * C6554 + C32731 * C6555) *
                C32552) *
               C32916) *
              C32603 * C241) *
         C32577) /
            (p * q * std::sqrt(p + q));
    d2ee[100] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C119 + C32644 * C126) * C2756 +
             (C113 * C127 + C32644 * C140) * C2750 + C168 * C2757 +
             C169 * C2751 + C170 * C2758 + C171 * C2752 + C172 * C2759 +
             C173 * C32920) *
                C32885 +
            (C2859 + C2860 + C2861 + C2862 + C2863 + C2864 + C2865 + C2866) *
                C32691) *
               C32603 * C470 -
           ((C2867 + C2868 + C2869 + C2870 + C2871 + C2872 + C2873 + C2874) *
                C32691 +
            (C2866 + C2865 + C2864 + C2863 + C2862 + C2861 + C2860 + C2859) *
                C32885) *
               C32603 * C471) *
              C472 +
          (((C3103 + C3104 + C3105 + C3106 + C3107 + C3108 + C3109 + C3110) *
                C32885 +
            (C848 * C2756 + C849 * C2750 + C850 * C2757 + C851 * C2751 +
             C853 * C2758 + C852 * C2752 +
             (C113 * C252 + C32644 * C271) * C2759 +
             (C113 * C272 + C32644 * C282) * C32920) *
                C32691) *
               C32603 * C471 -
           ((C3110 + C3109 + C3108 + C3107 + C3106 + C3105 + C3104 + C3103) *
                C32691 +
            (C175 * C32920 + C174 * C2759 + C173 * C2752 + C172 * C2758 +
             C171 * C2751 + C170 * C2757 + C169 * C2750 + C168 * C2756) *
                C32885) *
               C32603 * C470) *
              C473)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C119 + C32644 * C126) * C31559 +
             (C113 * C127 + C32644 * C140) * C32866 + C168 * C31540 +
             C169 * C32552) *
                C7669 +
            (C7774 + C7775 + C7776 + C7777) * C7670 + C7794 * C7671 +
            C7795 * C32926) *
               C32603 * C470 -
           ((C7786 + C7787 + C7788 + C7789) * C32926 +
            (C7785 + C7784 + C7783 + C7782) * C7671 +
            (C7781 + C7780 + C7779 + C7778) * C7670 +
            (C7777 + C7776 + C7775 + C7774) * C7669) *
               C32603 * C471) *
              C472 +
          (((C8024 + C8025 + C8026 + C8027) * C7669 +
            (C8028 + C8029 + C8030 + C8031) * C7670 +
            (C8032 + C8033 + C8034 + C8035) * C7671 +
            (C6467 * C31559 + C6468 * C32866 +
             (C113 * C968 + C32644 * C979) * C31540 +
             (C113 * C980 + C32644 * C986) * C32552) *
                C32926) *
               C32603 * C471 -
           ((C8035 + C8034 + C8033 + C8032) * C32926 +
            (C8031 + C8030 + C8029 + C8028) * C7671 +
            (C8027 + C8026 + C8025 + C8024) * C7670 +
            (C171 * C32552 + C170 * C31540 + C169 * C32866 + C168 * C31559) *
                C7669) *
               C32603 * C470) *
              C473)) /
            (p * q * std::sqrt(p + q));
    d2ee[101] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C119 + C32644 * C126) * C2756 +
             (C113 * C127 + C32644 * C140) * C2750 + C168 * C2757 +
             C169 * C2751 + C170 * C2758 + C171 * C2752 + C172 * C2759 +
             C173 * C32920) *
                C32885 +
            (C2859 + C2860 + C2861 + C2862 + C2863 + C2864 + C2865 + C2866) *
                C32691) *
               C584 -
           ((C3377 + C3378 + C3379 + C3380 + C3381 + C3382 + C3383 + C3384) *
                C32691 +
            (C609 * C32920 + C610 * C2759 + C611 * C2752 + C612 * C2758 +
             C613 * C2751 + C614 * C2757 +
             (C113 * C366 + C32644 * C382) * C2750 +
             (C113 * C352 + C32644 * C367) * C2756) *
                C32885) *
               C585) *
              C470 +
          (((C3384 + C3383 + C3382 + C3381 + C3380 + C3379 + C3378 + C3377) *
                C32885 +
            (C1698 * C2756 + C1697 * C2750 + C1518 * C2757 + C1517 * C2751 +
             C1516 * C2758 + C1515 * C2752 +
             (C113 * C1494 + C32644 * C1495) * C2759 +
             (C113 * C1496 + C32644 * C1497) * C32920) *
                C32691) *
               C585 -
           ((C2867 + C2868 + C2869 + C2870 + C2871 + C2872 + C2873 + C2874) *
                C32691 +
            (C2866 + C2865 + C2864 + C2863 + C2862 + C2861 + C2860 + C2859) *
                C32885) *
               C584) *
              C471) *
         C32577) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C119 + C32644 * C126) * C31559 +
             (C113 * C127 + C32644 * C140) * C32866 + C168 * C31540 +
             C169 * C32552) *
                C7669 +
            (C7774 + C7775 + C7776 + C7777) * C7670 + C7794 * C7671 +
            C7795 * C32926) *
               C584 -
           ((C8302 + C8303 + C8304 + C8305) * C32926 +
            (C8306 + C8307 + C8308 + C8309) * C7671 +
            (C8310 + C8311 + C8312 + C8313) * C7670 +
            (C613 * C32552 + C614 * C31540 +
             (C113 * C366 + C32644 * C382) * C32866 +
             (C113 * C352 + C32644 * C367) * C31559) *
                C7669) *
               C585) *
              C470 +
          (((C8313 + C8312 + C8311 + C8310) * C7669 +
            (C8309 + C8308 + C8307 + C8306) * C7670 +
            (C8305 + C8304 + C8303 + C8302) * C7671 +
            (C6656 * C31559 + C6655 * C32866 +
             (C113 * C6552 + C32644 * C6553) * C31540 +
             (C113 * C6554 + C32644 * C6555) * C32552) *
                C32926) *
               C585 -
           ((C7786 + C7787 + C7788 + C7789) * C32926 +
            (C7785 + C7784 + C7783 + C7782) * C7671 +
            (C7781 + C7780 + C7779 + C7778) * C7670 +
            (C7777 + C7776 + C7775 + C7774) * C7669) *
               C584) *
              C471) *
         C32577) /
            (p * q * std::sqrt(p + q));
    d2ee[102] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C119 + C32644 * C126) * C2756 +
            (C113 * C127 + C32644 * C140) * C2750 + C168 * C2757 +
            C169 * C2751 + C170 * C2758 + C171 * C2752 + C172 * C2759 +
            C173 * C32920) *
               C32885 +
           (C2859 + C2860 + C2861 + C2862 + C2863 + C2864 + C2865 + C2866) *
               C32691) *
              C32603 * C239 -
          ((C2867 + C2868 + C2869 + C2870 + C2871 + C2872 + C2873 + C2874) *
               C32691 +
           (C2866 + C2865 + C2864 + C2863 + C2862 + C2861 + C2860 + C2859) *
               C32885) *
              C32603 * C240 +
          ((C2874 + C2873 + C2872 + C2871 + C2870 + C2869 + C2868 + C2867) *
               C32885 +
           (C1025 * C2756 + C1024 * C2750 + C1023 * C2757 + C1022 * C2751 +
            C1021 * C2758 + C1020 * C2752 +
            (C113 * C1332 + C32644 * C1333) * C2759 +
            (C113 * C1334 + C32644 * C1335) * C32920) *
               C32691) *
              C32603 * C241) *
         C32577) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C119 + C32644 * C126) * C2756 +
            (C113 * C127 + C32644 * C140) * C2750 + C168 * C2757 +
            C169 * C2751 + C170 * C2758 + C171 * C2752 + C172 * C2759 +
            C173 * C32920) *
               C32885 +
           (C1016 * C2756 + C1017 * C2750 + C502 * C2757 + C501 * C2751 +
            C500 * C2758 + C499 * C2752 + C498 * C2759 + C497 * C32920) *
               C32691) *
              C32603 * C32589 * C110 -
          ((C495 * C32920 + C496 * C2759 + C497 * C2752 + C498 * C2758 +
            C499 * C2751 + C500 * C2757 + C501 * C2750 + C502 * C2756) *
               C32691 +
           (C175 * C32920 + C174 * C2759 + C173 * C2752 + C172 * C2758 +
            C171 * C2751 + C170 * C2757 + C169 * C2750 + C168 * C2756) *
               C32885) *
              C32603 * C32589 * C111 +
          ((C170 * C2756 + C171 * C2750 + C172 * C2757 + C173 * C2751 +
            C174 * C2758 + C175 * C2752 + C177 * C2759 + C176 * C32920) *
               C32885 +
           (C500 * C2756 + C499 * C2750 + C498 * C2757 + C497 * C2751 +
            C496 * C2758 + C495 * C2752 +
            (C113 * C474 + C32644 * C475) * C2759 +
            (C113 * C476 + C32644 * C477) * C32920) *
               C32691) *
              C32603 * C32589 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C119 + C32644 * C126) * C2756 +
            (C113 * C127 + C32644 * C140) * C2750 + C168 * C2757 +
            C169 * C2751 + C170 * C2758 + C171 * C2752 + C172 * C2759 +
            C173 * C32920) *
               C32885 +
           (C2859 + C2860 + C2861 + C2862 + C2863 + C2864 + C2865 + C2866) *
               C32691) *
              C345 -
          (((C113 * C708 + C32644 * C714) * C32920 +
            (C113 * C699 + C32644 * C707) * C2759 + C1519 * C2752 +
            C1520 * C2758 + C1521 * C2751 + C1522 * C2757 + C1699 * C2750 +
            C1700 * C2756) *
               C32691 +
           (C609 * C32920 + C610 * C2759 + C611 * C2752 + C612 * C2758 +
            C613 * C2751 + C614 * C2757 +
            (C113 * C366 + C32644 * C382) * C2750 +
            (C113 * C352 + C32644 * C367) * C2756) *
               C32885) *
              C346 +
          (((C113 * C353 + C32644 * C368) * C2756 +
            (C113 * C369 + C32644 * C383) * C2750 +
            (C113 * C354 + C32644 * C370) * C2757 +
            (C113 * C371 + C32644 * C384) * C2751 +
            (C113 * C355 + C32644 * C372) * C2758 +
            (C113 * C373 + C32644 * C385) * C2752 +
            (C113 * C356 + C32644 * C374) * C2759 +
            (C113 * C375 + C32644 * C386) * C32920) *
               C32885 +
           ((C113 * C1153 + C32644 * C1165) * C2756 +
            (C113 * C1166 + C32644 * C1180) * C2750 +
            (C113 * C1154 + C32644 * C1167) * C2757 +
            (C113 * C1168 + C32644 * C1181) * C2751 +
            (C113 * C1155 + C32644 * C1169) * C2758 +
            (C113 * C1170 + C32644 * C1182) * C2752 +
            (C113 * C2268 + C32644 * C2269) * C2759 +
            (C113 * C2270 + C32644 * C2271) * C32920) *
               C32691) *
              C347) *
         C32589 * C32577) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C119 + C32644 * C126) * C31559 +
            (C113 * C127 + C32644 * C140) * C32866 + C168 * C31540 +
            C169 * C32552) *
               C7669 +
           (C1016 * C31559 + C1017 * C32866 + C502 * C31540 + C501 * C32552) *
               C7670 +
           (C1018 * C31559 + C1019 * C32866 + C848 * C31540 + C849 * C32552) *
               C7671 +
           (C1025 * C31559 + C1024 * C32866 + C1023 * C31540 + C1022 * C32552) *
               C32926) *
              C32603 * C32589 * C110 -
          ((C1020 * C32552 + C1021 * C31540 + C1022 * C32866 + C1023 * C31559) *
               C32926 +
           (C851 * C32552 + C850 * C31540 + C849 * C32866 + C848 * C31559) *
               C7671 +
           (C499 * C32552 + C500 * C31540 + C501 * C32866 + C502 * C31559) *
               C7670 +
           (C171 * C32552 + C170 * C31540 + C169 * C32866 + C168 * C31559) *
               C7669) *
              C32603 * C32589 * C111 +
          ((C170 * C31559 + C171 * C32866 + C172 * C31540 + C173 * C32552) *
               C7669 +
           (C500 * C31559 + C499 * C32866 + C498 * C31540 + C497 * C32552) *
               C7670 +
           (C850 * C31559 + C851 * C32866 + C853 * C31540 + C852 * C32552) *
               C7671 +
           (C1021 * C31559 + C1020 * C32866 +
            (C113 * C1332 + C32644 * C1333) * C31540 +
            (C113 * C1334 + C32644 * C1335) * C32552) *
               C32926) *
              C32603 * C32589 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C119 + C32644 * C126) * C31559 +
            (C113 * C127 + C32644 * C140) * C32866 + C168 * C31540 +
            C169 * C32552) *
               C7669 +
           (C7774 + C7775 + C7776 + C7777) * C7670 + C7794 * C7671 +
           C7795 * C32926) *
              C32603 * C239 -
          ((C7786 + C7787 + C7788 + C7789) * C32926 +
           (C7785 + C7784 + C7783 + C7782) * C7671 +
           (C7781 + C7780 + C7779 + C7778) * C7670 +
           (C7777 + C7776 + C7775 + C7774) * C7669) *
              C32603 * C240 +
          (C7794 * C7669 + C7795 * C7670 +
           (C7789 + C7788 + C7787 + C7786) * C7671 +
           (C6291 * C31559 + C6290 * C32866 +
            (C113 * C6452 + C32644 * C6453) * C31540 +
            (C113 * C6454 + C32644 * C6455) * C32552) *
               C32926) *
              C32603 * C241) *
         C32577) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C119 + C32644 * C126) * C31559 +
            (C113 * C127 + C32644 * C140) * C32866 + C168 * C31540 +
            C169 * C32552) *
               C7669 +
           (C7774 + C7775 + C7776 + C7777) * C7670 + C7794 * C7671 +
           C7795 * C32926) *
              C345 -
          (((C113 * C1674 + C32644 * C1678) * C32552 +
            (C113 * C1669 + C32644 * C1673) * C31540 + C6657 * C32866 +
            C6658 * C31559) *
               C32926 +
           (C1517 * C32552 + C1518 * C31540 + C1697 * C32866 + C1698 * C31559) *
               C7671 +
           (C1521 * C32552 + C1522 * C31540 + C1699 * C32866 + C1700 * C31559) *
               C7670 +
           (C613 * C32552 + C614 * C31540 +
            (C113 * C366 + C32644 * C382) * C32866 +
            (C113 * C352 + C32644 * C367) * C31559) *
               C7669) *
              C346 +
          (((C113 * C353 + C32644 * C368) * C31559 +
            (C113 * C369 + C32644 * C383) * C32866 +
            (C113 * C354 + C32644 * C370) * C31540 +
            (C113 * C371 + C32644 * C384) * C32552) *
               C7669 +
           ((C113 * C1153 + C32644 * C1165) * C31559 +
            (C113 * C1166 + C32644 * C1180) * C32866 +
            (C113 * C1154 + C32644 * C1167) * C31540 +
            (C113 * C1168 + C32644 * C1181) * C32552) *
               C7670 +
           ((C113 * C1156 + C32644 * C1171) * C31559 +
            (C113 * C1172 + C32644 * C1183) * C32866 +
            (C113 * C1157 + C32644 * C1173) * C31540 +
            (C113 * C1174 + C32644 * C1184) * C32552) *
               C7671 +
           ((C113 * C6359 + C32644 * C6363) * C31559 +
            (C113 * C6364 + C32644 * C6368) * C32866 +
            (C113 * C7211 + C32644 * C7212) * C31540 +
            (C113 * C7213 + C32644 * C7214) * C32552) *
               C32926) *
              C347) *
         C32589 * C32577) /
            (p * q * std::sqrt(p + q));
    d2ee[103] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C119 + C32644 * C126) * C2756 +
             (C113 * C127 + C32644 * C140) * C2750 + C168 * C2757 +
             C169 * C2751 + C170 * C2758 + C171 * C2752 + C172 * C2759 +
             C173 * C32920) *
                C32885 +
            (C2859 + C2860 + C2861 + C2862 + C2863 + C2864 + C2865 + C2866) *
                C32691) *
               C584 -
           ((C3245 * C32920 + C3246 * C2759 + C1519 * C2752 + C1520 * C2758 +
             C1521 * C2751 + C1522 * C2757 + C1699 * C2750 + C1700 * C2756) *
                C32691 +
            (C609 * C32920 + C610 * C2759 + C611 * C2752 + C612 * C2758 +
             C613 * C2751 + C614 * C2757 +
             (C113 * C366 + C32644 * C382) * C2750 +
             (C113 * C352 + C32644 * C367) * C2756) *
                C32885) *
               C585) *
              C32589 * C472 +
          (((C614 * C2756 + C613 * C2750 + C612 * C2757 + C611 * C2751 +
             C610 * C2758 + C609 * C2752 + C608 * C2759 + C607 * C32920) *
                C32885 +
            (C1522 * C2756 + C1521 * C2750 + C1520 * C2757 + C1519 * C2751 +
             C3246 * C2758 + C3245 * C2752 +
             (C113 * C700 + C32644 * C709) * C2759 +
             (C113 * C710 + C32644 * C715) * C32920) *
                C32691) *
               C585 -
           ((C3110 + C3109 + C3108 + C3107 + C3106 + C3105 + C3104 + C3103) *
                C32691 +
            (C175 * C32920 + C174 * C2759 + C173 * C2752 + C172 * C2758 +
             C171 * C2751 + C170 * C2757 + C169 * C2750 + C168 * C2756) *
                C32885) *
               C584) *
              C32589 * C473)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C119 + C32644 * C126) * C31559 +
             (C113 * C127 + C32644 * C140) * C32866 + C168 * C31540 +
             C169 * C32552) *
                C7669 +
            (C7774 + C7775 + C7776 + C7777) * C7670 + C7794 * C7671 +
            C7795 * C32926) *
               C584 -
           ((C8170 * C32552 + C8171 * C31540 + C6657 * C32866 +
             C6658 * C31559) *
                C32926 +
            (C1517 * C32552 + C1518 * C31540 + C1697 * C32866 +
             C1698 * C31559) *
                C7671 +
            (C1521 * C32552 + C1522 * C31540 + C1699 * C32866 +
             C1700 * C31559) *
                C7670 +
            (C613 * C32552 + C614 * C31540 +
             (C113 * C366 + C32644 * C382) * C32866 +
             (C113 * C352 + C32644 * C367) * C31559) *
                C7669) *
               C585) *
              C32589 * C472 +
          (((C614 * C31559 + C613 * C32866 + C612 * C31540 + C611 * C32552) *
                C7669 +
            (C1522 * C31559 + C1521 * C32866 + C1520 * C31540 +
             C1519 * C32552) *
                C7670 +
            (C1518 * C31559 + C1517 * C32866 + C1516 * C31540 +
             C1515 * C32552) *
                C7671 +
            (C8171 * C31559 + C8170 * C32866 +
             (C113 * C1670 + C32644 * C1675) * C31540 +
             (C113 * C1676 + C32644 * C1679) * C32552) *
                C32926) *
               C585 -
           ((C8035 + C8034 + C8033 + C8032) * C32926 +
            (C8031 + C8030 + C8029 + C8028) * C7671 +
            (C8027 + C8026 + C8025 + C8024) * C7670 +
            (C171 * C32552 + C170 * C31540 + C169 * C32866 + C168 * C31559) *
                C7669) *
               C584) *
              C32589 * C473)) /
            (p * q * std::sqrt(p + q));
    d2ee[104] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C119 + C32644 * C126) * C2756 +
            (C113 * C127 + C32644 * C140) * C2750 + C168 * C2757 +
            C169 * C2751 + C170 * C2758 + C171 * C2752 + C172 * C2759 +
            C173 * C32920) *
               C32885 +
           (C1016 * C2756 + C1017 * C2750 + C502 * C2757 + C501 * C2751 +
            C500 * C2758 + C499 * C2752 + C498 * C2759 + C497 * C32920) *
               C32691) *
              C32603 * C32589 * C110 -
          ((C495 * C32920 + C496 * C2759 + C497 * C2752 + C498 * C2758 +
            C499 * C2751 + C500 * C2757 + C501 * C2750 + C502 * C2756) *
               C32691 +
           (C175 * C32920 + C174 * C2759 + C173 * C2752 + C172 * C2758 +
            C171 * C2751 + C170 * C2757 + C169 * C2750 + C168 * C2756) *
               C32885) *
              C32603 * C32589 * C111 +
          ((C170 * C2756 + C171 * C2750 + C172 * C2757 + C173 * C2751 +
            C174 * C2758 + C175 * C2752 + C177 * C2759 + C176 * C32920) *
               C32885 +
           (C500 * C2756 + C499 * C2750 + C498 * C2757 + C497 * C2751 +
            C496 * C2758 + C495 * C2752 +
            (C113 * C474 + C32644 * C475) * C2759 +
            (C113 * C476 + C32644 * C477) * C32920) *
               C32691) *
              C32603 * C32589 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C119 + C32644 * C126) * C2756 +
            (C113 * C127 + C32644 * C140) * C2750 + C168 * C2757 +
            C169 * C2751 + C170 * C2758 + C171 * C2752 + C172 * C2759 +
            C173 * C32920) *
               C32885 +
           (C2859 + C2860 + C2861 + C2862 + C2863 + C2864 + C2865 + C2866) *
               C32691) *
              C32603 * C239 -
          ((C2867 + C2868 + C2869 + C2870 + C2871 + C2872 + C2873 + C2874) *
               C32691 +
           (C2866 + C2865 + C2864 + C2863 + C2862 + C2861 + C2860 + C2859) *
               C32885) *
              C32603 * C240 +
          ((C2874 + C2873 + C2872 + C2871 + C2870 + C2869 + C2868 + C2867) *
               C32885 +
           (C1025 * C2756 + C1024 * C2750 + C1023 * C2757 + C1022 * C2751 +
            C1021 * C2758 + C1020 * C2752 +
            (C113 * C1332 + C32644 * C1333) * C2759 +
            (C113 * C1334 + C32644 * C1335) * C32920) *
               C32691) *
              C32603 * C241) *
         C32577) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C119 + C32644 * C126) * C31559 +
            (C113 * C127 + C32644 * C140) * C32866 + C168 * C31540 +
            C169 * C32552) *
               C7669 +
           (C1016 * C31559 + C1017 * C32866 + C502 * C31540 + C501 * C32552) *
               C7670 +
           (C1018 * C31559 + C1019 * C32866 + C848 * C31540 + C849 * C32552) *
               C7671 +
           (C1025 * C31559 + C1024 * C32866 + C1023 * C31540 + C1022 * C32552) *
               C32926) *
              C32603 * C32589 * C110 -
          ((C1020 * C32552 + C1021 * C31540 + C1022 * C32866 + C1023 * C31559) *
               C32926 +
           (C851 * C32552 + C850 * C31540 + C849 * C32866 + C848 * C31559) *
               C7671 +
           (C499 * C32552 + C500 * C31540 + C501 * C32866 + C502 * C31559) *
               C7670 +
           (C171 * C32552 + C170 * C31540 + C169 * C32866 + C168 * C31559) *
               C7669) *
              C32603 * C32589 * C111 +
          ((C170 * C31559 + C171 * C32866 + C172 * C31540 + C173 * C32552) *
               C7669 +
           (C500 * C31559 + C499 * C32866 + C498 * C31540 + C497 * C32552) *
               C7670 +
           (C850 * C31559 + C851 * C32866 + C853 * C31540 + C852 * C32552) *
               C7671 +
           (C1021 * C31559 + C1020 * C32866 +
            (C113 * C1332 + C32644 * C1333) * C31540 +
            (C113 * C1334 + C32644 * C1335) * C32552) *
               C32926) *
              C32603 * C32589 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C119 + C32644 * C126) * C31559 +
            (C113 * C127 + C32644 * C140) * C32866 + C168 * C31540 +
            C169 * C32552) *
               C7669 +
           (C7774 + C7775 + C7776 + C7777) * C7670 + C7794 * C7671 +
           C7795 * C32926) *
              C32603 * C239 -
          ((C7786 + C7787 + C7788 + C7789) * C32926 +
           (C7785 + C7784 + C7783 + C7782) * C7671 +
           (C7781 + C7780 + C7779 + C7778) * C7670 +
           (C7777 + C7776 + C7775 + C7774) * C7669) *
              C32603 * C240 +
          (C7794 * C7669 + C7795 * C7670 +
           (C7789 + C7788 + C7787 + C7786) * C7671 +
           (C6291 * C31559 + C6290 * C32866 +
            (C113 * C6452 + C32644 * C6453) * C31540 +
            (C113 * C6454 + C32644 * C6455) * C32552) *
               C32926) *
              C32603 * C241) *
         C32577) /
            (p * q * std::sqrt(p + q));
    d2ee[105] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C3484 * C119 + C32886 * C126 + C3485 * C352 + C32731 * C367) *
                 C832 +
             (C3484 * C127 + C32886 * C140 + C3485 * C366 + C32731 * C382) *
                 C826 +
             (C3519 + C3520) * C833 + (C3521 + C3522) * C827 + C3535 * C834 +
             C3536 * C32905) *
                C32885 +
            ((C4523 + C4524) * C832 + (C4525 + C4526) * C826 + C4879 * C833 +
             C4880 * C827 + C4343 * C834 + C4344 * C32905) *
                C32691) *
               C32603 * C470 -
           (((C4527 + C4528) * C32905 + (C4529 + C4530) * C834 +
             (C4531 + C4532) * C827 + (C4533 + C4534) * C833 +
             (C4535 + C4536) * C826 + (C4537 + C4538) * C832) *
                C32691 +
            (C4881 * C32905 + C4882 * C834 + C4883 * C827 + C4884 * C833 +
             (C4526 + C4525) * C826 + (C4524 + C4523) * C832) *
                C32885) *
               C32603 * C471) *
              C472 +
          (((C4879 * C832 + C4880 * C826 + C4343 * C833 + C4344 * C827 +
             (C3892 + C3891) * C834 + (C3890 + C3889) * C32905) *
                C32885 +
            ((C4534 + C4533) * C832 + (C4532 + C4531) * C826 +
             (C4530 + C4529) * C833 + (C4528 + C4527) * C827 +
             (C3484 * C251 + C32886 * C269 + C3485 * C1494 + C32731 * C1495) *
                 C834 +
             (C3484 * C270 + C32886 * C281 + C3485 * C1496 + C32731 * C1497) *
                 C32905) *
                C32691) *
               C32603 * C471 -
           (((C3889 + C3890) * C32905 + (C3891 + C3892) * C834 + C4881 * C827 +
             C4882 * C833 + C4883 * C826 + C4884 * C832) *
                C32691 +
            ((C3530 + C3529) * C32905 + (C3528 + C3527) * C834 +
             (C3526 + C3525) * C827 + (C3524 + C3523) * C833 +
             (C3522 + C3521) * C826 + (C3520 + C3519) * C832) *
                C32885) *
               C32603 * C470) *
              C473)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C3484 * C119 + C32886 * C126 + C3485 * C352 + C32731 * C367) *
                 C6200 +
             (C3484 * C127 + C32886 * C140 + C3485 * C366 + C32731 * C382) *
                 C32542) *
                C7669 +
            ((C4523 + C4524) * C6200 + (C4525 + C4526) * C32542) * C7670 +
            C9603 * C7671 + C9610 * C32926) *
               C32603 * C470 -
           (((C9606 + C9607) * C32542 + (C9608 + C9609) * C6200) * C32926 +
            ((C8634 + C8635) * C32542 + (C8636 + C8637) * C6200) * C7671 +
            ((C4535 + C4536) * C32542 + (C4537 + C4538) * C6200) * C7670 +
            ((C4526 + C4525) * C32542 + (C4524 + C4523) * C6200) * C7669) *
               C32603 * C471) *
              C472 +
          (((C4879 * C6200 + C4880 * C32542) * C7669 +
            (C8608 * C6200 + C8609 * C32542) * C7670 +
            ((C8633 + C8632) * C6200 + (C8631 + C8630) * C32542) * C7671 +
            ((C3484 * C967 + C32886 * C977 + C3485 * C6552 + C32731 * C6553) *
                 C6200 +
             (C3484 * C978 + C32886 * C985 + C3485 * C6554 + C32731 * C6555) *
                 C32542) *
                C32926) *
               C32603 * C471 -
           (((C8630 + C8631) * C32542 + (C8632 + C8633) * C6200) * C32926 +
            (C8981 * C32542 + C8982 * C6200) * C7671 +
            (C4883 * C32542 + C4884 * C6200) * C7670 +
            ((C3522 + C3521) * C32542 + (C3520 + C3519) * C6200) * C7669) *
               C32603 * C470) *
              C473)) /
            (p * q * std::sqrt(p + q));
    d2ee[106] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C3484 * C119 + C32886 * C126 + C3485 * C352 + C32731 * C367) *
                 C832 +
             (C3484 * C127 + C32886 * C140 + C3485 * C366 + C32731 * C382) *
                 C826 +
             (C3519 + C3520) * C833 + (C3521 + C3522) * C827 + C3535 * C834 +
             C3536 * C32905) *
                C32885 +
            ((C4523 + C4524) * C832 + (C4525 + C4526) * C826 + C4879 * C833 +
             C4880 * C827 + C4343 * C834 + C4344 * C32905) *
                C32691) *
               C584 -
           (((C5095 + C5096) * C32905 + (C5097 + C5098) * C834 +
             (C5099 + C5100) * C827 + (C5101 + C5102) * C833 +
             (C5305 + C5306) * C826 + (C5307 + C5308) * C832) *
                C32691 +
            ((C4059 + C4060) * C32905 + (C4061 + C4062) * C834 +
             (C4063 + C4064) * C827 + (C4065 + C4066) * C833 +
             (C3485 * C369 + C32731 * C383 + C3484 * C366 + C32886 * C382) *
                 C826 +
             (C3485 * C353 + C32731 * C368 + C3484 * C352 + C32886 * C367) *
                 C832) *
                C32885) *
               C585) *
              C470 +
          ((((C5308 + C5307) * C832 + (C5306 + C5305) * C826 +
             (C5102 + C5101) * C833 + (C5100 + C5099) * C827 +
             (C5098 + C5097) * C834 + (C5096 + C5095) * C32905) *
                C32885 +
            ((C3484 * C1152 + C32886 * C1164 + C3485 * C1156 + C32731 * C1171) *
                 C832 +
             (C3484 * C1163 + C32886 * C1179 + C3485 * C1172 + C32731 * C1183) *
                 C826 +
             (C3484 * C1151 + C32886 * C1162 + C3485 * C1157 + C32731 * C1173) *
                 C833 +
             (C3484 * C1161 + C32886 * C1178 + C3485 * C1174 + C32731 * C1184) *
                 C827 +
             (C3484 * C1150 + C32886 * C1160 + C3485 * C1158 + C32731 * C1175) *
                 C834 +
             (C3484 * C1159 + C32886 * C1177 + C3485 * C1176 + C32731 * C1185) *
                 C32905) *
                C32691) *
               C585 -
           (((C4527 + C4528) * C32905 + (C4529 + C4530) * C834 +
             (C4531 + C4532) * C827 + (C4533 + C4534) * C833 +
             (C4535 + C4536) * C826 + (C4537 + C4538) * C832) *
                C32691 +
            (C4881 * C32905 + C4882 * C834 + C4883 * C827 + C4884 * C833 +
             (C4526 + C4525) * C826 + (C4524 + C4523) * C832) *
                C32885) *
               C584) *
              C471) *
         C32577) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C3484 * C119 + C32886 * C126 + C3485 * C352 + C32731 * C367) *
                 C6200 +
             (C3484 * C127 + C32886 * C140 + C3485 * C366 + C32731 * C382) *
                 C32542) *
                C7669 +
            ((C4523 + C4524) * C6200 + (C4525 + C4526) * C32542) * C7670 +
            C9603 * C7671 + C9610 * C32926) *
               C584 -
           (((C10107 + C10108) * C32542 + (C10109 + C10110) * C6200) * C32926 +
            ((C9391 + C9392) * C32542 + (C9393 + C9394) * C6200) * C7671 +
            ((C5305 + C5306) * C32542 + (C5307 + C5308) * C6200) * C7670 +
            ((C3485 * C369 + C32731 * C383 + C3484 * C366 + C32886 * C382) *
                 C32542 +
             (C3485 * C353 + C32731 * C368 + C3484 * C352 + C32886 * C367) *
                 C6200) *
                C7669) *
               C585) *
              C470 +
          ((((C5308 + C5307) * C6200 + (C5306 + C5305) * C32542) * C7669 +
            ((C9394 + C9393) * C6200 + (C9392 + C9391) * C32542) * C7670 +
            ((C10110 + C10109) * C6200 + (C10108 + C10107) * C32542) * C7671 +
            ((C3484 * C6358 + C32886 * C6362 + C3485 * C6360 + C32731 * C6365) *
                 C6200 +
             (C3484 * C6361 + C32886 * C6367 + C3485 * C6366 + C32731 * C6369) *
                 C32542) *
                C32926) *
               C585 -
           (((C9606 + C9607) * C32542 + (C9608 + C9609) * C6200) * C32926 +
            ((C8634 + C8635) * C32542 + (C8636 + C8637) * C6200) * C7671 +
            ((C4535 + C4536) * C32542 + (C4537 + C4538) * C6200) * C7670 +
            ((C4526 + C4525) * C32542 + (C4524 + C4523) * C6200) * C7669) *
               C584) *
              C471) *
         C32577) /
            (p * q * std::sqrt(p + q));
    d2ee[107] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C3484 * C119 + C32886 * C126 + C3485 * C352 + C32731 * C367) *
                C832 +
            (C3484 * C127 + C32886 * C140 + C3485 * C366 + C32731 * C382) *
                C826 +
            (C3519 + C3520) * C833 + (C3521 + C3522) * C827 + C3535 * C834 +
            C3536 * C32905) *
               C32885 +
           ((C4523 + C4524) * C832 + (C4525 + C4526) * C826 +
            (C3900 + C3899) * C833 + (C3898 + C3897) * C827 + C4343 * C834 +
            C4344 * C32905) *
               C32691) *
              C32603 * C239 -
          (((C4527 + C4528) * C32905 + (C4529 + C4530) * C834 +
            (C4531 + C4532) * C827 + (C4533 + C4534) * C833 +
            (C4535 + C4536) * C826 + (C4537 + C4538) * C832) *
               C32691 +
           ((C3893 + C3894) * C32905 + (C3895 + C3896) * C834 +
            (C3897 + C3898) * C827 + (C3899 + C3900) * C833 +
            (C4526 + C4525) * C826 + (C4524 + C4523) * C832) *
               C32885) *
              C32603 * C240 +
          (((C4538 + C4537) * C832 + (C4536 + C4535) * C826 +
            (C4534 + C4533) * C833 + (C4532 + C4531) * C827 +
            (C4530 + C4529) * C834 + (C4528 + C4527) * C32905) *
               C32885 +
           ((C3484 * C965 + C32886 * C974 + C3485 * C1668 + C32731 * C1671) *
                C832 +
            (C3484 * C973 + C32886 * C983 + C3485 * C1672 + C32731 * C1677) *
                C826 +
            (C3484 * C964 + C32886 * C972 + C3485 * C1669 + C32731 * C1673) *
                C833 +
            (C3484 * C971 + C32886 * C982 + C3485 * C1674 + C32731 * C1678) *
                C827 +
            (C3484 * C963 + C32886 * C970 + C3485 * C1670 + C32731 * C1675) *
                C834 +
            (C3484 * C969 + C32886 * C981 + C3485 * C1676 + C32731 * C1679) *
                C32905) *
               C32691) *
              C32603 * C241) *
         C32577) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C3484 * C119 + C32886 * C126 + C3485 * C352 + C32731 * C367) *
                C832 +
            (C3484 * C127 + C32886 * C140 + C3485 * C366 + C32731 * C382) *
                C826 +
            (C3519 + C3520) * C833 + (C3521 + C3522) * C827 + C3535 * C834 +
            C3536 * C32905) *
               C32885 +
           ((C3484 * C247 + C32886 * C262 + C3485 * C696 + C32731 * C701) *
                C832 +
            (C3484 * C261 + C32886 * C277 + C3485 * C702 + C32731 * C711) *
                C826 +
            (C3900 + C3899) * C833 + (C3898 + C3897) * C827 + C4343 * C834 +
            C4344 * C32905) *
               C32691) *
              C32603 * C32589 * C110 -
          (((C3889 + C3890) * C32905 + (C3891 + C3892) * C834 +
            (C3893 + C3894) * C827 + (C3895 + C3896) * C833 +
            (C3897 + C3898) * C826 + (C3899 + C3900) * C832) *
               C32691 +
           ((C3530 + C3529) * C32905 + (C3528 + C3527) * C834 +
            (C3526 + C3525) * C827 + (C3524 + C3523) * C833 +
            (C3522 + C3521) * C826 + (C3520 + C3519) * C832) *
               C32885) *
              C32603 * C32589 * C111 +
          ((C3535 * C832 + C3536 * C826 + C3537 * C833 + C3538 * C827 +
            (C3534 + C3533) * C834 + (C3532 + C3531) * C32905) *
               C32885 +
           (C4343 * C832 + C4344 * C826 + (C3892 + C3891) * C833 +
            (C3890 + C3889) * C827 +
            (C3484 * C243 + C32886 * C254 + C3485 * C700 + C32731 * C709) *
                C834 +
            (C3484 * C253 + C32886 * C273 + C3485 * C710 + C32731 * C715) *
                C32905) *
               C32691) *
              C32603 * C32589 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C3484 * C119 + C32886 * C126 + C3485 * C352 + C32731 * C367) *
                C832 +
            (C3484 * C127 + C32886 * C140 + C3485 * C366 + C32731 * C382) *
                C826 +
            (C3519 + C3520) * C833 + (C3521 + C3522) * C827 + C3535 * C834 +
            C3536 * C32905) *
               C32885 +
           ((C4523 + C4524) * C832 + (C4525 + C4526) * C826 +
            (C3900 + C3899) * C833 + (C3898 + C3897) * C827 + C4343 * C834 +
            C4344 * C32905) *
               C32691) *
              C345 -
          (((C3485 * C1170 + C32731 * C1182 + C3484 * C706 + C32886 * C713) *
                C32905 +
            (C3485 * C1155 + C32731 * C1169 + C3484 * C698 + C32886 * C705) *
                C834 +
            (C3485 * C1168 + C32731 * C1181 + C3484 * C704 + C32886 * C712) *
                C827 +
            (C3485 * C1154 + C32731 * C1167 + C3484 * C697 + C32886 * C703) *
                C833 +
            (C3485 * C1166 + C32731 * C1180 + C3484 * C702 + C32886 * C711) *
                C826 +
            (C3485 * C1153 + C32731 * C1165 + C3484 * C696 + C32886 * C701) *
                C832) *
               C32691 +
           ((C4059 + C4060) * C32905 + (C4061 + C4062) * C834 +
            (C4063 + C4064) * C827 + (C4065 + C4066) * C833 +
            (C3485 * C369 + C32731 * C383 + C3484 * C366 + C32886 * C382) *
                C826 +
            (C3485 * C353 + C32731 * C368 + C3484 * C352 + C32886 * C367) *
                C832) *
               C32885) *
              C346 +
          (((C3484 * C353 + C32886 * C368 + C3485 * C2100 + C32731 * C2109) *
                C832 +
            (C3484 * C369 + C32886 * C383 + C3485 * C2108 + C32731 * C2118) *
                C826 +
            (C3484 * C354 + C32886 * C370 + C3485 * C2099 + C32731 * C2107) *
                C833 +
            (C3484 * C371 + C32886 * C384 + C3485 * C2106 + C32731 * C2117) *
                C827 +
            (C3484 * C355 + C32886 * C372 + C3485 * C2098 + C32731 * C2105) *
                C834 +
            (C3484 * C373 + C32886 * C385 + C3485 * C2104 + C32731 * C2116) *
                C32905) *
               C32885 +
           ((C3484 * C1153 + C32886 * C1165 + C3485 * C2640 + C32731 * C2643) *
                C832 +
            (C3484 * C1166 + C32886 * C1180 + C3485 * C2644 + C32731 * C2649) *
                C826 +
            (C3484 * C1154 + C32886 * C1167 + C3485 * C2641 + C32731 * C2645) *
                C833 +
            (C3484 * C1168 + C32886 * C1181 + C3485 * C2646 + C32731 * C2650) *
                C827 +
            (C3484 * C1155 + C32886 * C1169 + C3485 * C2642 + C32731 * C2647) *
                C834 +
            (C3484 * C1170 + C32886 * C1182 + C3485 * C2648 + C32731 * C2651) *
                C32905) *
               C32691) *
              C347) *
         C32589 * C32577) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C3484 * C119 + C32886 * C126 + C3485 * C352 + C32731 * C367) *
                C6200 +
            (C3484 * C127 + C32886 * C140 + C3485 * C366 + C32731 * C382) *
                C32542) *
               C7669 +
           ((C4523 + C4524) * C6200 + (C4525 + C4526) * C32542) * C7670 +
           (C8606 * C6200 + C8607 * C32542) * C7671 +
           ((C8637 + C8636) * C6200 + (C8635 + C8634) * C32542) * C32926) *
              C32603 * C32589 * C110 -
          (((C8630 + C8631) * C32542 + (C8632 + C8633) * C6200) * C32926 +
           (C8981 * C32542 + C8982 * C6200) * C7671 +
           (C4883 * C32542 + C4884 * C6200) * C7670 +
           ((C3522 + C3521) * C32542 + (C3520 + C3519) * C6200) * C7669) *
              C32603 * C32589 * C111 +
          ((C3535 * C6200 + C3536 * C32542) * C7669 +
           (C4343 * C6200 + C4344 * C32542) * C7670 +
           ((C4530 + C4529) * C6200 + (C4528 + C4527) * C32542) * C7671 +
           ((C3484 * C963 + C32886 * C970 + C3485 * C1670 + C32731 * C1675) *
                C6200 +
            (C3484 * C969 + C32886 * C981 + C3485 * C1676 + C32731 * C1679) *
                C32542) *
               C32926) *
              C32603 * C32589 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C3484 * C119 + C32886 * C126 + C3485 * C352 + C32731 * C367) *
                C6200 +
            (C3484 * C127 + C32886 * C140 + C3485 * C366 + C32731 * C382) *
                C32542) *
               C7669 +
           ((C4523 + C4524) * C6200 + (C4525 + C4526) * C32542) * C7670 +
           C9603 * C7671 + C9610 * C32926) *
              C32603 * C239 -
          (((C9606 + C9607) * C32542 + (C9608 + C9609) * C6200) * C32926 +
           ((C8634 + C8635) * C32542 + (C8636 + C8637) * C6200) * C7671 +
           ((C4535 + C4536) * C32542 + (C4537 + C4538) * C6200) * C7670 +
           ((C4526 + C4525) * C32542 + (C4524 + C4523) * C6200) * C7669) *
              C32603 * C240 +
          (C9603 * C7669 + C9610 * C7670 +
           ((C9609 + C9608) * C6200 + (C9607 + C9606) * C32542) * C7671 +
           ((C3484 * C6263 + C32886 * C6266 + C3485 * C6638 + C32731 * C6639) *
                C6200 +
            (C3484 * C6265 + C32886 * C6269 + C3485 * C6640 + C32731 * C6641) *
                C32542) *
               C32926) *
              C32603 * C241) *
         C32577) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C3484 * C119 + C32886 * C126 + C3485 * C352 + C32731 * C367) *
                C6200 +
            (C3484 * C127 + C32886 * C140 + C3485 * C366 + C32731 * C382) *
                C32542) *
               C7669 +
           ((C4523 + C4524) * C6200 + (C4525 + C4526) * C32542) * C7670 +
           C9603 * C7671 + C9610 * C32926) *
              C345 -
          (((C3485 * C6364 + C32731 * C6368 + C3484 * C1672 + C32886 * C1677) *
                C32542 +
            (C3485 * C6359 + C32731 * C6363 + C3484 * C1668 + C32886 * C1671) *
                C6200) *
               C32926 +
           ((C9391 + C9392) * C32542 + (C9393 + C9394) * C6200) * C7671 +
           ((C5305 + C5306) * C32542 + (C5307 + C5308) * C6200) * C7670 +
           ((C3485 * C369 + C32731 * C383 + C3484 * C366 + C32886 * C382) *
                C32542 +
            (C3485 * C353 + C32731 * C368 + C3484 * C352 + C32886 * C367) *
                C6200) *
               C7669) *
              C346 +
          (((C3484 * C353 + C32886 * C368 + C3485 * C2100 + C32731 * C2109) *
                C6200 +
            (C3484 * C369 + C32886 * C383 + C3485 * C2108 + C32731 * C2118) *
                C32542) *
               C7669 +
           ((C3484 * C1153 + C32886 * C1165 + C3485 * C2640 + C32731 * C2643) *
                C6200 +
            (C3484 * C1166 + C32886 * C1180 + C3485 * C2644 + C32731 * C2649) *
                C32542) *
               C7670 +
           ((C3484 * C1156 + C32886 * C1171 + C3485 * C7053 + C32731 * C7057) *
                C6200 +
            (C3484 * C1172 + C32886 * C1183 + C3485 * C7056 + C32731 * C7062) *
                C32542) *
               C7671 +
           ((C3484 * C6359 + C32886 * C6363 + C3485 * C7529 + C32731 * C7530) *
                C6200 +
            (C3484 * C6364 + C32886 * C6368 + C3485 * C7531 + C32731 * C7532) *
                C32542) *
               C32926) *
              C347) *
         C32589 * C32577) /
            (p * q * std::sqrt(p + q));
    d2ee[108] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C3484 * C119 + C32886 * C126 + C3485 * C352 + C32731 * C367) *
                 C832 +
             (C3484 * C127 + C32886 * C140 + C3485 * C366 + C32731 * C382) *
                 C826 +
             (C3519 + C3520) * C833 + (C3521 + C3522) * C827 + C3535 * C834 +
             C3536 * C32905) *
                C32885 +
            ((C4523 + C4524) * C832 + (C4525 + C4526) * C826 + C4879 * C833 +
             C4880 * C827 + C4343 * C834 + C4344 * C32905) *
                C32691) *
               C584 -
           (((C5095 + C5096) * C32905 + (C5097 + C5098) * C834 +
             (C5099 + C5100) * C827 + (C5101 + C5102) * C833 +
             (C3485 * C1166 + C32731 * C1180 + C3484 * C702 + C32886 * C711) *
                 C826 +
             (C3485 * C1153 + C32731 * C1165 + C3484 * C696 + C32886 * C701) *
                 C832) *
                C32691 +
            ((C4059 + C4060) * C32905 + (C4061 + C4062) * C834 +
             (C4063 + C4064) * C827 + (C4065 + C4066) * C833 +
             (C3485 * C369 + C32731 * C383 + C3484 * C366 + C32886 * C382) *
                 C826 +
             (C3485 * C353 + C32731 * C368 + C3484 * C352 + C32886 * C367) *
                 C832) *
                C32885) *
               C585) *
              C32589 * C472 +
          ((((C4066 + C4065) * C832 + (C4064 + C4063) * C826 +
             (C4062 + C4061) * C833 + (C4060 + C4059) * C827 +
             (C4058 + C4057) * C834 + (C4056 + C4055) * C32905) *
                C32885 +
            ((C5102 + C5101) * C832 + (C5100 + C5099) * C826 +
             (C5098 + C5097) * C833 + (C5096 + C5095) * C827 +
             (C3484 * C699 + C32886 * C707 + C3485 * C2268 + C32731 * C2269) *
                 C834 +
             (C3484 * C708 + C32886 * C714 + C3485 * C2270 + C32731 * C2271) *
                 C32905) *
                C32691) *
               C585 -
           (((C3889 + C3890) * C32905 + (C3891 + C3892) * C834 + C4881 * C827 +
             C4882 * C833 + C4883 * C826 + C4884 * C832) *
                C32691 +
            ((C3530 + C3529) * C32905 + (C3528 + C3527) * C834 +
             (C3526 + C3525) * C827 + (C3524 + C3523) * C833 +
             (C3522 + C3521) * C826 + (C3520 + C3519) * C832) *
                C32885) *
               C584) *
              C32589 * C473)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C3484 * C119 + C32886 * C126 + C3485 * C352 + C32731 * C367) *
                 C6200 +
             (C3484 * C127 + C32886 * C140 + C3485 * C366 + C32731 * C382) *
                 C32542) *
                C7669 +
            ((C4523 + C4524) * C6200 + (C4525 + C4526) * C32542) * C7670 +
            C9603 * C7671 + C9610 * C32926) *
               C584 -
           (((C3485 * C6364 + C32731 * C6368 + C3484 * C1672 + C32886 * C1677) *
                 C32542 +
             (C3485 * C6359 + C32731 * C6363 + C3484 * C1668 + C32886 * C1671) *
                 C6200) *
                C32926 +
            ((C9391 + C9392) * C32542 + (C9393 + C9394) * C6200) * C7671 +
            ((C5305 + C5306) * C32542 + (C5307 + C5308) * C6200) * C7670 +
            ((C3485 * C369 + C32731 * C383 + C3484 * C366 + C32886 * C382) *
                 C32542 +
             (C3485 * C353 + C32731 * C368 + C3484 * C352 + C32886 * C367) *
                 C6200) *
                C7669) *
               C585) *
              C32589 * C472 +
          ((((C4066 + C4065) * C6200 + (C4064 + C4063) * C32542) * C7669 +
            ((C5102 + C5101) * C6200 + (C5100 + C5099) * C32542) * C7670 +
            ((C9188 + C9187) * C6200 + (C9186 + C9185) * C32542) * C7671 +
            ((C3484 * C1669 + C32886 * C1673 + C3485 * C7211 + C32731 * C7212) *
                 C6200 +
             (C3484 * C1674 + C32886 * C1678 + C3485 * C7213 + C32731 * C7214) *
                 C32542) *
                C32926) *
               C585 -
           (((C8630 + C8631) * C32542 + (C8632 + C8633) * C6200) * C32926 +
            (C8981 * C32542 + C8982 * C6200) * C7671 +
            (C4883 * C32542 + C4884 * C6200) * C7670 +
            ((C3522 + C3521) * C32542 + (C3520 + C3519) * C6200) * C7669) *
               C584) *
              C32589 * C473)) /
            (p * q * std::sqrt(p + q));
    d2ee[109] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C3484 * C119 + C32886 * C126 + C3485 * C352 + C32731 * C367) *
                C832 +
            (C3484 * C127 + C32886 * C140 + C3485 * C366 + C32731 * C382) *
                C826 +
            (C3519 + C3520) * C833 + (C3521 + C3522) * C827 + C3535 * C834 +
            C3536 * C32905) *
               C32885 +
           ((C3484 * C247 + C32886 * C262 + C3485 * C696 + C32731 * C701) *
                C832 +
            (C3484 * C261 + C32886 * C277 + C3485 * C702 + C32731 * C711) *
                C826 +
            (C3900 + C3899) * C833 + (C3898 + C3897) * C827 + C4343 * C834 +
            C4344 * C32905) *
               C32691) *
              C32603 * C32589 * C110 -
          (((C3889 + C3890) * C32905 + (C3891 + C3892) * C834 +
            (C3893 + C3894) * C827 + (C3895 + C3896) * C833 +
            (C3897 + C3898) * C826 + (C3899 + C3900) * C832) *
               C32691 +
           ((C3530 + C3529) * C32905 + (C3528 + C3527) * C834 +
            (C3526 + C3525) * C827 + (C3524 + C3523) * C833 +
            (C3522 + C3521) * C826 + (C3520 + C3519) * C832) *
               C32885) *
              C32603 * C32589 * C111 +
          ((C3535 * C832 + C3536 * C826 + C3537 * C833 + C3538 * C827 +
            (C3534 + C3533) * C834 + (C3532 + C3531) * C32905) *
               C32885 +
           (C4343 * C832 + C4344 * C826 + (C3892 + C3891) * C833 +
            (C3890 + C3889) * C827 +
            (C3484 * C243 + C32886 * C254 + C3485 * C700 + C32731 * C709) *
                C834 +
            (C3484 * C253 + C32886 * C273 + C3485 * C710 + C32731 * C715) *
                C32905) *
               C32691) *
              C32603 * C32589 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C3484 * C119 + C32886 * C126 + C3485 * C352 + C32731 * C367) *
                C832 +
            (C3484 * C127 + C32886 * C140 + C3485 * C366 + C32731 * C382) *
                C826 +
            (C3519 + C3520) * C833 + (C3521 + C3522) * C827 + C3535 * C834 +
            C3536 * C32905) *
               C32885 +
           ((C4523 + C4524) * C832 + (C4525 + C4526) * C826 +
            (C3900 + C3899) * C833 + (C3898 + C3897) * C827 + C4343 * C834 +
            C4344 * C32905) *
               C32691) *
              C32603 * C239 -
          (((C4527 + C4528) * C32905 + (C4529 + C4530) * C834 +
            (C4531 + C4532) * C827 + (C4533 + C4534) * C833 +
            (C4535 + C4536) * C826 + (C4537 + C4538) * C832) *
               C32691 +
           ((C3893 + C3894) * C32905 + (C3895 + C3896) * C834 +
            (C3897 + C3898) * C827 + (C3899 + C3900) * C833 +
            (C4526 + C4525) * C826 + (C4524 + C4523) * C832) *
               C32885) *
              C32603 * C240 +
          (((C4538 + C4537) * C832 + (C4536 + C4535) * C826 +
            (C4534 + C4533) * C833 + (C4532 + C4531) * C827 +
            (C4530 + C4529) * C834 + (C4528 + C4527) * C32905) *
               C32885 +
           ((C3484 * C965 + C32886 * C974 + C3485 * C1668 + C32731 * C1671) *
                C832 +
            (C3484 * C973 + C32886 * C983 + C3485 * C1672 + C32731 * C1677) *
                C826 +
            (C3484 * C964 + C32886 * C972 + C3485 * C1669 + C32731 * C1673) *
                C833 +
            (C3484 * C971 + C32886 * C982 + C3485 * C1674 + C32731 * C1678) *
                C827 +
            (C3484 * C963 + C32886 * C970 + C3485 * C1670 + C32731 * C1675) *
                C834 +
            (C3484 * C969 + C32886 * C981 + C3485 * C1676 + C32731 * C1679) *
                C32905) *
               C32691) *
              C32603 * C241) *
         C32577) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C3484 * C119 + C32886 * C126 + C3485 * C352 + C32731 * C367) *
                C6200 +
            (C3484 * C127 + C32886 * C140 + C3485 * C366 + C32731 * C382) *
                C32542) *
               C7669 +
           ((C4523 + C4524) * C6200 + (C4525 + C4526) * C32542) * C7670 +
           (C8606 * C6200 + C8607 * C32542) * C7671 +
           ((C8637 + C8636) * C6200 + (C8635 + C8634) * C32542) * C32926) *
              C32603 * C32589 * C110 -
          (((C8630 + C8631) * C32542 + (C8632 + C8633) * C6200) * C32926 +
           (C8981 * C32542 + C8982 * C6200) * C7671 +
           (C4883 * C32542 + C4884 * C6200) * C7670 +
           ((C3522 + C3521) * C32542 + (C3520 + C3519) * C6200) * C7669) *
              C32603 * C32589 * C111 +
          ((C3535 * C6200 + C3536 * C32542) * C7669 +
           (C4343 * C6200 + C4344 * C32542) * C7670 +
           ((C4530 + C4529) * C6200 + (C4528 + C4527) * C32542) * C7671 +
           ((C3484 * C963 + C32886 * C970 + C3485 * C1670 + C32731 * C1675) *
                C6200 +
            (C3484 * C969 + C32886 * C981 + C3485 * C1676 + C32731 * C1679) *
                C32542) *
               C32926) *
              C32603 * C32589 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C3484 * C119 + C32886 * C126 + C3485 * C352 + C32731 * C367) *
                C6200 +
            (C3484 * C127 + C32886 * C140 + C3485 * C366 + C32731 * C382) *
                C32542) *
               C7669 +
           ((C4523 + C4524) * C6200 + (C4525 + C4526) * C32542) * C7670 +
           C9603 * C7671 + C9610 * C32926) *
              C32603 * C239 -
          (((C9606 + C9607) * C32542 + (C9608 + C9609) * C6200) * C32926 +
           ((C8634 + C8635) * C32542 + (C8636 + C8637) * C6200) * C7671 +
           ((C4535 + C4536) * C32542 + (C4537 + C4538) * C6200) * C7670 +
           ((C4526 + C4525) * C32542 + (C4524 + C4523) * C6200) * C7669) *
              C32603 * C240 +
          (C9603 * C7669 + C9610 * C7670 +
           ((C9609 + C9608) * C6200 + (C9607 + C9606) * C32542) * C7671 +
           ((C3484 * C6263 + C32886 * C6266 + C3485 * C6638 + C32731 * C6639) *
                C6200 +
            (C3484 * C6265 + C32886 * C6269 + C3485 * C6640 + C32731 * C6641) *
                C32542) *
               C32926) *
              C32603 * C241) *
         C32577) /
            (p * q * std::sqrt(p + q));
    d2ee[110] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C119 + C32644 * C126) * C832 +
             (C113 * C127 + C32644 * C140) * C826 + C168 * C833 + C169 * C827 +
             C170 * C834 + C171 * C32905) *
                C32951 +
            (C1026 + C1027 + C992 + C993 + C994 + C995) * C32939 +
            C1040 * C32916) *
               C32603 * C470 -
           ((C1030 + C1031 + C1032 + C1033 + C1034 + C1035) * C32916 +
            (C1003 + C1002 + C1001 + C1000 + C1029 + C1028) * C32939 +
            (C995 + C994 + C993 + C992 + C1027 + C1026) * C32951) *
               C32603 * C471) *
              C472 +
          (((C1337 + C1338 + C1339 + C1340 + C1341 + C1342) * C32951 +
            (C1343 + C1344 + C1345 + C1346 + C1347 + C1348) * C32939 +
            (C1023 * C832 + C1022 * C826 + C1021 * C833 + C1020 * C827 +
             (C113 * C1332 + C32644 * C1333) * C834 +
             (C113 * C1334 + C32644 * C1335) * C32905) *
                C32916) *
               C32603 * C471 -
           ((C1348 + C1347 + C1346 + C1345 + C1344 + C1343) * C32916 +
            (C1342 + C1341 + C1340 + C1339 + C1338 + C1337) * C32939 +
            (C173 * C32905 + C172 * C834 + C171 * C827 + C170 * C833 +
             C169 * C826 + C168 * C832) *
                C32951) *
               C32603 * C470) *
              C473)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C119 + C32644 * C126) * C114 +
            (C113 * C127 + C32644 * C140) * C102 + C168 * C115 + C169 * C103 +
            C170 * C116 + C171 * C104 + C172 * C117 + C173 * C105 +
            C174 * C118 + C175 * C106) *
               C32633 * C32603 * C470 -
           (C495 * C106 + C496 * C118 + C497 * C105 + C498 * C117 +
            C499 * C104 + C500 * C116 + C501 * C103 + C502 * C115 +
            (C113 * C261 + C32644 * C277) * C102 +
            (C113 * C247 + C32644 * C262) * C114) *
               C32633 * C32603 * C471) *
              C472 +
          ((C502 * C114 + C501 * C102 + C500 * C115 + C499 * C103 +
            C498 * C116 + C497 * C104 + C496 * C117 + C495 * C105 +
            (C113 * C474 + C32644 * C475) * C118 +
            (C113 * C476 + C32644 * C477) * C106) *
               C32633 * C32603 * C471 -
           (C176 * C106 + C177 * C118 + C175 * C105 + C174 * C117 +
            C173 * C104 + C172 * C116 + C171 * C103 + C170 * C115 +
            C169 * C102 + C168 * C114) *
               C32633 * C32603 * C470) *
              C473)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C1817 * C119 + C32952 * C126 + C1818 * C352 + C32941 * C367 +
             C1819 * C353 + C32919 * C368) *
                C832 +
            (C1817 * C127 + C32952 * C140 + C1818 * C366 + C32941 * C382 +
             C1819 * C369 + C32919 * C383) *
                C826 +
            (C1857 + C1858 + C1859) * C833 + (C1860 + C1861 + C1862) * C827 +
            C1877 * C834 + C1878 * C32905) *
               C32633 * C32603 * C470 -
           ((C2297 + C2298 + C2299) * C32905 + (C2300 + C2301 + C2302) * C834 +
            (C2303 + C2304 + C2305) * C827 + (C2306 + C2307 + C2308) * C833 +
            (C1819 * C1166 + C32919 * C1180 + C1818 * C702 + C32941 * C711 +
             C1817 * C261 + C32952 * C277) *
                C826 +
            (C1819 * C1153 + C32919 * C1165 + C1818 * C696 + C32941 * C701 +
             C1817 * C247 + C32952 * C262) *
                C832) *
               C32633 * C32603 * C471) *
              C472 +
          (((C2308 + C2307 + C2306) * C832 + (C2305 + C2304 + C2303) * C826 +
            (C2302 + C2301 + C2300) * C833 + (C2299 + C2298 + C2297) * C827 +
            (C1817 * C244 + C32952 * C256 + C1818 * C699 + C32941 * C707 +
             C1819 * C2268 + C32919 * C2269) *
                C834 +
            (C1817 * C255 + C32952 * C274 + C1818 * C708 + C32941 * C714 +
             C1819 * C2270 + C32919 * C2271) *
                C32905) *
               C32633 * C32603 * C471 -
           ((C1869 + C1870 + C1871) * C32905 + (C1872 + C1873 + C1874) * C834 +
            (C1868 + C1867 + C1866) * C827 + (C1865 + C1864 + C1863) * C833 +
            (C1862 + C1861 + C1860) * C826 + (C1859 + C1858 + C1857) * C832) *
               C32633 * C32603 * C470) *
              C473)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C119 + C32644 * C126) * C5424 +
             (C113 * C127 + C32644 * C140) * C32948 + C168 * C5425 +
             C169 * C32935 + C170 * C5426 + C171 * C32905) *
                C5421 +
            (C5538 + C5539 + C5540 + C5541 + C5542 + C5543) * C5422 +
            C5560 * C32916) *
               C32603 * C470 -
           ((C5550 + C5551 + C5552 + C5553 + C5554 + C5555) * C32916 +
            (C5549 + C5548 + C5547 + C5546 + C5545 + C5544) * C5422 +
            (C5543 + C5542 + C5541 + C5540 + C5539 + C5538) * C5421) *
               C32603 * C471) *
              C472 +
          (((C5817 + C5818 + C5819 + C5820 + C5821 + C5822) * C5421 +
            (C5823 + C5824 + C5825 + C5826 + C5827 + C5828) * C5422 +
            (C1023 * C5424 + C1022 * C32948 + C1021 * C5425 + C1020 * C32935 +
             (C113 * C1332 + C32644 * C1333) * C5426 +
             (C113 * C1334 + C32644 * C1335) * C32905) *
                C32916) *
               C32603 * C471 -
           ((C5828 + C5827 + C5826 + C5825 + C5824 + C5823) * C32916 +
            (C5822 + C5821 + C5820 + C5819 + C5818 + C5817) * C5422 +
            (C173 * C32905 + C172 * C5426 + C171 * C32935 + C170 * C5425 +
             C169 * C32948 + C168 * C5424) *
                C5421) *
               C32603 * C470) *
              C473)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C119 + C32644 * C126) * C6200 +
             (C113 * C127 + C32644 * C140) * C32542) *
                C6195 +
            (C6272 + C6273) * C6196 + C6286 * C6197 + C6287 * C6198 +
            C6296 * C6199) *
               C32603 * C470 -
           ((C6294 + C6295) * C6199 + (C6293 + C6292) * C6198 +
            (C6277 + C6276) * C6197 + (C6275 + C6274) * C6196 +
            (C6273 + C6272) * C6195) *
               C32603 * C471) *
              C472 +
          (((C6457 + C6458) * C6195 + (C6459 + C6460) * C6196 +
            (C6461 + C6462) * C6197 + (C6469 + C6470) * C6198 +
            ((C113 * C6452 + C32644 * C6453) * C6200 +
             (C113 * C6454 + C32644 * C6455) * C32542) *
                C6199) *
               C32603 * C471 -
           ((C6470 + C6469) * C6199 + (C6462 + C6461) * C6198 +
            (C6460 + C6459) * C6197 + (C6458 + C6457) * C6196 +
            (C169 * C32542 + C168 * C6200) * C6195) *
               C32603 * C470) *
              C473)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C1817 * C119 + C32952 * C126 + C1818 * C352 + C32941 * C367 +
              C1819 * C353 + C32919 * C368) *
                 C6200 +
             (C1817 * C127 + C32952 * C140 + C1818 * C366 + C32941 * C382 +
              C1819 * C369 + C32919 * C383) *
                 C32542) *
                C5421 +
            ((C6919 + C6920 + C6921) * C6200 +
             (C6922 + C6923 + C6924) * C32542) *
                C5422 +
            C6943 * C32916) *
               C32603 * C470 -
           (((C6931 + C6932 + C6933) * C32542 +
             (C6934 + C6935 + C6936) * C6200) *
                C32916 +
            ((C6930 + C6929 + C6928) * C32542 +
             (C6927 + C6926 + C6925) * C6200) *
                C5422 +
            ((C6924 + C6923 + C6922) * C32542 +
             (C6921 + C6920 + C6919) * C6200) *
                C5421) *
               C32603 * C471) *
              C472 +
          ((((C2308 + C2307 + C2306) * C6200 +
             (C2305 + C2304 + C2303) * C32542) *
                C5421 +
            ((C7228 + C7229 + C7230) * C6200 +
             (C7231 + C7232 + C7233) * C32542) *
                C5422 +
            ((C1817 * C964 + C32952 * C972 + C1818 * C1669 + C32941 * C1673 +
              C1819 * C7211 + C32919 * C7212) *
                 C6200 +
             (C1817 * C971 + C32952 * C982 + C1818 * C1674 + C32941 * C1678 +
              C1819 * C7213 + C32919 * C7214) *
                 C32542) *
                C32916) *
               C32603 * C471 -
           (((C7233 + C7232 + C7231) * C32542 +
             (C7230 + C7229 + C7228) * C6200) *
                C32916 +
            ((C2303 + C2304 + C2305) * C32542 +
             (C2306 + C2307 + C2308) * C6200) *
                C5422 +
            ((C1862 + C1861 + C1860) * C32542 +
             (C1859 + C1858 + C1857) * C6200) *
                C5421) *
               C32603 * C470) *
              C473)) /
            (p * q * std::sqrt(p + q));
    d2ee[111] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C119 + C32644 * C126) * C832 +
             (C113 * C127 + C32644 * C140) * C826 + C168 * C833 + C169 * C827 +
             C170 * C834 + C171 * C32905) *
                C32951 +
            (C1026 + C1027 + C992 + C993 + C994 + C995) * C32939 +
            C1040 * C32916) *
               C584 -
           ((C1681 + C1682 + C1683 + C1684 + C1701 + C1702) * C32916 +
            (C1689 + C1690 + C1691 + C1692 + C1703 + C1704) * C32939 +
            (C611 * C32905 + C612 * C834 + C613 * C827 + C614 * C833 +
             (C113 * C366 + C32644 * C382) * C826 +
             (C113 * C352 + C32644 * C367) * C832) *
                C32951) *
               C585) *
              C470 +
          (((C1704 + C1703 + C1692 + C1691 + C1690 + C1689) * C32951 +
            (C1702 + C1701 + C1684 + C1683 + C1682 + C1681) * C32939 +
            ((C113 * C1668 + C32644 * C1671) * C832 +
             (C113 * C1672 + C32644 * C1677) * C826 +
             (C113 * C1669 + C32644 * C1673) * C833 +
             (C113 * C1674 + C32644 * C1678) * C827 +
             (C113 * C1670 + C32644 * C1675) * C834 +
             (C113 * C1676 + C32644 * C1679) * C32905) *
                C32916) *
               C585 -
           ((C1030 + C1031 + C1032 + C1033 + C1034 + C1035) * C32916 +
            (C1003 + C1002 + C1001 + C1000 + C1029 + C1028) * C32939 +
            (C995 + C994 + C993 + C992 + C1027 + C1026) * C32951) *
               C584) *
              C471) *
         C32577) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C119 + C32644 * C126) * C114 +
            (C113 * C127 + C32644 * C140) * C102 + C168 * C115 + C169 * C103 +
            C170 * C116 + C171 * C104 + C172 * C117 + C173 * C105 +
            C174 * C118 + C175 * C106) *
               C32633 * C584 -
           (C607 * C106 + C608 * C118 + C609 * C105 + C610 * C117 +
            C611 * C104 + C612 * C116 + C613 * C103 + C614 * C115 +
            (C113 * C366 + C32644 * C382) * C102 +
            (C113 * C352 + C32644 * C367) * C114) *
               C32633 * C585) *
              C470 +
          (((C113 * C696 + C32644 * C701) * C114 +
            (C113 * C702 + C32644 * C711) * C102 +
            (C113 * C697 + C32644 * C703) * C115 +
            (C113 * C704 + C32644 * C712) * C103 +
            (C113 * C698 + C32644 * C705) * C116 +
            (C113 * C706 + C32644 * C713) * C104 +
            (C113 * C699 + C32644 * C707) * C117 +
            (C113 * C708 + C32644 * C714) * C105 +
            (C113 * C700 + C32644 * C709) * C118 +
            (C113 * C710 + C32644 * C715) * C106) *
               C32633 * C585 -
           (C495 * C106 + C496 * C118 + C497 * C105 + C498 * C117 +
            C499 * C104 + C500 * C116 + C501 * C103 + C502 * C115 +
            (C113 * C261 + C32644 * C277) * C102 +
            (C113 * C247 + C32644 * C262) * C114) *
               C32633 * C584) *
              C471) *
         C32577) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C1817 * C119 + C32952 * C126 + C1818 * C352 + C32941 * C367 +
             C1819 * C353 + C32919 * C368) *
                C832 +
            (C1817 * C127 + C32952 * C140 + C1818 * C366 + C32941 * C382 +
             C1819 * C369 + C32919 * C383) *
                C826 +
            (C1857 + C1858 + C1859) * C833 + (C1860 + C1861 + C1862) * C827 +
            C1877 * C834 + C1878 * C32905) *
               C32633 * C584 -
           ((C2483 + C2484 + C2485) * C32905 + (C2486 + C2487 + C2488) * C834 +
            (C2489 + C2490 + C2491) * C827 + (C2492 + C2493 + C2494) * C833 +
            (C1819 * C2108 + C32919 * C2118 + C1818 * C369 + C32941 * C383 +
             C1817 * C366 + C32952 * C382) *
                C826 +
            (C1819 * C2100 + C32919 * C2109 + C1818 * C353 + C32941 * C368 +
             C1817 * C352 + C32952 * C367) *
                C832) *
               C32633 * C585) *
              C470 +
          (((C1817 * C696 + C32952 * C701 + C1818 * C1153 + C32941 * C1165 +
             C1819 * C2640 + C32919 * C2643) *
                C832 +
            (C1817 * C702 + C32952 * C711 + C1818 * C1166 + C32941 * C1180 +
             C1819 * C2644 + C32919 * C2649) *
                C826 +
            (C1817 * C697 + C32952 * C703 + C1818 * C1154 + C32941 * C1167 +
             C1819 * C2641 + C32919 * C2645) *
                C833 +
            (C1817 * C704 + C32952 * C712 + C1818 * C1168 + C32941 * C1181 +
             C1819 * C2646 + C32919 * C2650) *
                C827 +
            (C1817 * C698 + C32952 * C705 + C1818 * C1155 + C32941 * C1169 +
             C1819 * C2642 + C32919 * C2647) *
                C834 +
            (C1817 * C706 + C32952 * C713 + C1818 * C1170 + C32941 * C1182 +
             C1819 * C2648 + C32919 * C2651) *
                C32905) *
               C32633 * C585 -
           ((C2297 + C2298 + C2299) * C32905 + (C2300 + C2301 + C2302) * C834 +
            (C2303 + C2304 + C2305) * C827 + (C2306 + C2307 + C2308) * C833 +
            (C1819 * C1166 + C32919 * C1180 + C1818 * C702 + C32941 * C711 +
             C1817 * C261 + C32952 * C277) *
                C826 +
            (C1819 * C1153 + C32919 * C1165 + C1818 * C696 + C32941 * C701 +
             C1817 * C247 + C32952 * C262) *
                C832) *
               C32633 * C584) *
              C471) *
         C32577) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C119 + C32644 * C126) * C5424 +
             (C113 * C127 + C32644 * C140) * C32948 + C168 * C5425 +
             C169 * C32935 + C170 * C5426 + C171 * C32905) *
                C5421 +
            (C5538 + C5539 + C5540 + C5541 + C5542 + C5543) * C5422 +
            C5560 * C32916) *
               C584 -
           ((C6121 + C6122 + C6123 + C6124 + C6125 + C6126) * C32916 +
            (C6127 + C6128 + C6129 + C6130 + C6131 + C6132) * C5422 +
            (C611 * C32905 + C612 * C5426 + C613 * C32935 + C614 * C5425 +
             (C113 * C366 + C32644 * C382) * C32948 +
             (C113 * C352 + C32644 * C367) * C5424) *
                C5421) *
               C585) *
              C470 +
          (((C6132 + C6131 + C6130 + C6129 + C6128 + C6127) * C5421 +
            (C6126 + C6125 + C6124 + C6123 + C6122 + C6121) * C5422 +
            ((C113 * C1668 + C32644 * C1671) * C5424 +
             (C113 * C1672 + C32644 * C1677) * C32948 +
             (C113 * C1669 + C32644 * C1673) * C5425 +
             (C113 * C1674 + C32644 * C1678) * C32935 +
             (C113 * C1670 + C32644 * C1675) * C5426 +
             (C113 * C1676 + C32644 * C1679) * C32905) *
                C32916) *
               C585 -
           ((C5550 + C5551 + C5552 + C5553 + C5554 + C5555) * C32916 +
            (C5549 + C5548 + C5547 + C5546 + C5545 + C5544) * C5422 +
            (C5543 + C5542 + C5541 + C5540 + C5539 + C5538) * C5421) *
               C584) *
              C471) *
         C32577) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C119 + C32644 * C126) * C6200 +
             (C113 * C127 + C32644 * C140) * C32542) *
                C6195 +
            (C6272 + C6273) * C6196 + C6286 * C6197 + C6287 * C6198 +
            C6296 * C6199) *
               C584 -
           ((C6659 + C6660) * C6199 + (C6661 + C6662) * C6198 +
            (C6651 + C6652) * C6197 + (C6653 + C6654) * C6196 +
            ((C113 * C366 + C32644 * C382) * C32542 +
             (C113 * C352 + C32644 * C367) * C6200) *
                C6195) *
               C585) *
              C470 +
          (((C6654 + C6653) * C6195 + (C6652 + C6651) * C6196 +
            (C6662 + C6661) * C6197 + (C6660 + C6659) * C6198 +
            ((C113 * C6638 + C32644 * C6639) * C6200 +
             (C113 * C6640 + C32644 * C6641) * C32542) *
                C6199) *
               C585 -
           ((C6294 + C6295) * C6199 + (C6293 + C6292) * C6198 +
            (C6277 + C6276) * C6197 + (C6275 + C6274) * C6196 +
            (C6273 + C6272) * C6195) *
               C584) *
              C471) *
         C32577) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C1817 * C119 + C32952 * C126 + C1818 * C352 + C32941 * C367 +
              C1819 * C353 + C32919 * C368) *
                 C6200 +
             (C1817 * C127 + C32952 * C140 + C1818 * C366 + C32941 * C382 +
              C1819 * C369 + C32919 * C383) *
                 C32542) *
                C5421 +
            ((C6919 + C6920 + C6921) * C6200 +
             (C6922 + C6923 + C6924) * C32542) *
                C5422 +
            C6943 * C32916) *
               C584 -
           (((C7558 + C7559 + C7560) * C32542 +
             (C7561 + C7562 + C7563) * C6200) *
                C32916 +
            ((C7564 + C7565 + C7566) * C32542 +
             (C7567 + C7568 + C7569) * C6200) *
                C5422 +
            ((C1819 * C2108 + C32919 * C2118 + C1818 * C369 + C32941 * C383 +
              C1817 * C366 + C32952 * C382) *
                 C32542 +
             (C1819 * C2100 + C32919 * C2109 + C1818 * C353 + C32941 * C368 +
              C1817 * C352 + C32952 * C367) *
                 C6200) *
                C5421) *
               C585) *
              C470 +
          ((((C7569 + C7568 + C7567) * C6200 +
             (C7566 + C7565 + C7564) * C32542) *
                C5421 +
            ((C7563 + C7562 + C7561) * C6200 +
             (C7560 + C7559 + C7558) * C32542) *
                C5422 +
            ((C1817 * C1668 + C32952 * C1671 + C1818 * C6359 + C32941 * C6363 +
              C1819 * C7529 + C32919 * C7530) *
                 C6200 +
             (C1817 * C1672 + C32952 * C1677 + C1818 * C6364 + C32941 * C6368 +
              C1819 * C7531 + C32919 * C7532) *
                 C32542) *
                C32916) *
               C585 -
           (((C6931 + C6932 + C6933) * C32542 +
             (C6934 + C6935 + C6936) * C6200) *
                C32916 +
            ((C6930 + C6929 + C6928) * C32542 +
             (C6927 + C6926 + C6925) * C6200) *
                C5422 +
            ((C6924 + C6923 + C6922) * C32542 +
             (C6921 + C6920 + C6919) * C6200) *
                C5421) *
               C584) *
              C471) *
         C32577) /
            (p * q * std::sqrt(p + q));
    d2ee[112] +=
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             (((C113 * C119 + C32644 * C126) * C114 +
               (C113 * C127 + C32644 * C140) * C102 + C168 * C115 +
               C169 * C103 + C170 * C116 + C171 * C104 + C172 * C117 +
               C173 * C105 + C174 * C118 + C175 * C106) *
                  C32633 * C32603 * C32589 * C110 -
              (C176 * C106 + C177 * C118 + C175 * C105 + C174 * C117 +
               C173 * C104 + C172 * C116 + C171 * C103 + C170 * C115 +
               C169 * C102 + C168 * C114) *
                  C32633 * C32603 * C32589 * C111 +
              (C170 * C114 + C171 * C102 + C172 * C115 + C173 * C103 +
               C174 * C116 + C175 * C104 + C177 * C117 + C176 * C105 +
               (C113 * C125 + C32644 * C138) * C118 +
               (C113 * C139 + C32644 * C146) * C106) *
                  C32633 * C32603 * C32589 * C112) +
         std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             (((C113 * C119 + C32644 * C126) * C114 +
               (C113 * C127 + C32644 * C140) * C102 + C168 * C115 +
               C169 * C103 + C170 * C116 + C171 * C104 + C172 * C117 +
               C173 * C105 + C174 * C118 + C175 * C106) *
                  C32633 * C32603 * C239 -
              ((C113 * C253 + C32644 * C273) * C106 +
               (C113 * C243 + C32644 * C254) * C118 +
               (C113 * C255 + C32644 * C274) * C105 +
               (C113 * C244 + C32644 * C256) * C117 +
               (C113 * C257 + C32644 * C275) * C104 +
               (C113 * C245 + C32644 * C258) * C116 +
               (C113 * C259 + C32644 * C276) * C103 +
               (C113 * C246 + C32644 * C260) * C115 +
               (C113 * C261 + C32644 * C277) * C102 +
               (C113 * C247 + C32644 * C262) * C114) *
                  C32633 * C32603 * C240 +
              ((C113 * C248 + C32644 * C263) * C114 +
               (C113 * C264 + C32644 * C278) * C102 +
               (C113 * C249 + C32644 * C265) * C115 +
               (C113 * C266 + C32644 * C279) * C103 +
               (C113 * C250 + C32644 * C267) * C116 +
               (C113 * C268 + C32644 * C280) * C104 +
               (C113 * C251 + C32644 * C269) * C117 +
               (C113 * C270 + C32644 * C281) * C105 +
               (C113 * C252 + C32644 * C271) * C118 +
               (C113 * C272 + C32644 * C282) * C106) *
                  C32633 * C32603 * C241) *
             C32577) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C119 + C32644 * C126) * C114 +
           (C113 * C127 + C32644 * C140) * C102 + C168 * C115 + C169 * C103 +
           C170 * C116 + C171 * C104 + C172 * C117 + C173 * C105 + C174 * C118 +
           C175 * C106) *
              C32633 * C345 -
          ((C113 * C358 + C32644 * C378) * C106 +
           (C113 * C348 + C32644 * C359) * C118 +
           (C113 * C360 + C32644 * C379) * C105 +
           (C113 * C349 + C32644 * C361) * C117 +
           (C113 * C362 + C32644 * C380) * C104 +
           (C113 * C350 + C32644 * C363) * C116 +
           (C113 * C364 + C32644 * C381) * C103 +
           (C113 * C351 + C32644 * C365) * C115 +
           (C113 * C366 + C32644 * C382) * C102 +
           (C113 * C352 + C32644 * C367) * C114) *
              C32633 * C346 +
          ((C113 * C353 + C32644 * C368) * C114 +
           (C113 * C369 + C32644 * C383) * C102 +
           (C113 * C354 + C32644 * C370) * C115 +
           (C113 * C371 + C32644 * C384) * C103 +
           (C113 * C355 + C32644 * C372) * C116 +
           (C113 * C373 + C32644 * C385) * C104 +
           (C113 * C356 + C32644 * C374) * C117 +
           (C113 * C375 + C32644 * C386) * C105 +
           (C113 * C357 + C32644 * C376) * C118 +
           (C113 * C377 + C32644 * C387) * C106) *
              C32633 * C347) *
         C32589 * C32577) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C119 + C32644 * C126) * C832 +
            (C113 * C127 + C32644 * C140) * C826 + C168 * C833 + C169 * C827 +
            C170 * C834 + C171 * C32905) *
               C32951 +
           ((C113 * C247 + C32644 * C262) * C832 +
            (C113 * C261 + C32644 * C277) * C826 + C502 * C833 + C501 * C827 +
            C500 * C834 + C499 * C32905) *
               C32939 +
           ((C113 * C248 + C32644 * C263) * C832 +
            (C113 * C264 + C32644 * C278) * C826 + C848 * C833 + C849 * C827 +
            C850 * C834 + C851 * C32905) *
               C32916) *
              C32603 * C32589 * C110 -
          ((C852 * C32905 + C853 * C834 + C851 * C827 + C850 * C833 +
            C849 * C826 + C848 * C832) *
               C32916 +
           (C497 * C32905 + C498 * C834 + C499 * C827 + C500 * C833 +
            C501 * C826 + C502 * C832) *
               C32939 +
           (C173 * C32905 + C172 * C834 + C171 * C827 + C170 * C833 +
            C169 * C826 + C168 * C832) *
               C32951) *
              C32603 * C32589 * C111 +
          ((C170 * C832 + C171 * C826 + C172 * C833 + C173 * C827 +
            C174 * C834 + C175 * C32905) *
               C32951 +
           (C500 * C832 + C499 * C826 + C498 * C833 + C497 * C827 +
            C496 * C834 + C495 * C32905) *
               C32939 +
           (C850 * C832 + C851 * C826 + C853 * C833 + C852 * C827 +
            (C113 * C252 + C32644 * C271) * C834 +
            (C113 * C272 + C32644 * C282) * C32905) *
               C32916) *
              C32603 * C32589 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C119 + C32644 * C126) * C832 +
            (C113 * C127 + C32644 * C140) * C826 + C168 * C833 + C169 * C827 +
            C170 * C834 + C171 * C32905) *
               C32951 +
           (C1026 + C1027 + C992 + C993 + C994 + C995) * C32939 +
           C1040 * C32916) *
              C32603 * C239 -
          ((C1030 + C1031 + C1032 + C1033 + C1034 + C1035) * C32916 +
           (C1003 + C1002 + C1001 + C1000 + C1029 + C1028) * C32939 +
           (C995 + C994 + C993 + C992 + C1027 + C1026) * C32951) *
              C32603 * C240 +
          (C1040 * C32951 +
           (C1035 + C1034 + C1033 + C1032 + C1031 + C1030) * C32939 +
           ((C113 * C966 + C32644 * C975) * C832 +
            (C113 * C976 + C32644 * C984) * C826 +
            (C113 * C967 + C32644 * C977) * C833 +
            (C113 * C978 + C32644 * C985) * C827 +
            (C113 * C968 + C32644 * C979) * C834 +
            (C113 * C980 + C32644 * C986) * C32905) *
               C32916) *
              C32603 * C241) *
         C32577) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C119 + C32644 * C126) * C832 +
            (C113 * C127 + C32644 * C140) * C826 + C168 * C833 + C169 * C827 +
            C170 * C834 + C171 * C32905) *
               C32951 +
           (C1026 + C1027 + C992 + C993 + C994 + C995) * C32939 +
           C1040 * C32916) *
              C345 -
          (((C113 * C1159 + C32644 * C1177) * C32905 +
            (C113 * C1150 + C32644 * C1160) * C834 +
            (C113 * C1161 + C32644 * C1178) * C827 +
            (C113 * C1151 + C32644 * C1162) * C833 +
            (C113 * C1163 + C32644 * C1179) * C826 +
            (C113 * C1152 + C32644 * C1164) * C832) *
               C32916 +
           ((C113 * C706 + C32644 * C713) * C32905 +
            (C113 * C698 + C32644 * C705) * C834 +
            (C113 * C704 + C32644 * C712) * C827 +
            (C113 * C697 + C32644 * C703) * C833 +
            (C113 * C702 + C32644 * C711) * C826 +
            (C113 * C696 + C32644 * C701) * C832) *
               C32939 +
           (C611 * C32905 + C612 * C834 + C613 * C827 + C614 * C833 +
            (C113 * C366 + C32644 * C382) * C826 +
            (C113 * C352 + C32644 * C367) * C832) *
               C32951) *
              C346 +
          (((C113 * C353 + C32644 * C368) * C832 +
            (C113 * C369 + C32644 * C383) * C826 +
            (C113 * C354 + C32644 * C370) * C833 +
            (C113 * C371 + C32644 * C384) * C827 +
            (C113 * C355 + C32644 * C372) * C834 +
            (C113 * C373 + C32644 * C385) * C32905) *
               C32951 +
           ((C113 * C1153 + C32644 * C1165) * C832 +
            (C113 * C1166 + C32644 * C1180) * C826 +
            (C113 * C1154 + C32644 * C1167) * C833 +
            (C113 * C1168 + C32644 * C1181) * C827 +
            (C113 * C1155 + C32644 * C1169) * C834 +
            (C113 * C1170 + C32644 * C1182) * C32905) *
               C32939 +
           ((C113 * C1156 + C32644 * C1171) * C832 +
            (C113 * C1172 + C32644 * C1183) * C826 +
            (C113 * C1157 + C32644 * C1173) * C833 +
            (C113 * C1174 + C32644 * C1184) * C827 +
            (C113 * C1158 + C32644 * C1175) * C834 +
            (C113 * C1176 + C32644 * C1185) * C32905) *
               C32916) *
              C347) *
         C32589 * C32577) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C1817 * C119 + C32952 * C126 + C1818 * C352 + C32941 * C367 +
            C1819 * C353 + C32919 * C368) *
               C832 +
           (C1817 * C127 + C32952 * C140 + C1818 * C366 + C32941 * C382 +
            C1819 * C369 + C32919 * C383) *
               C826 +
           (C1857 + C1858 + C1859) * C833 + (C1860 + C1861 + C1862) * C827 +
           C1877 * C834 + C1878 * C32905) *
              C32633 * C32603 * C32589 * C110 -
          ((C1869 + C1870 + C1871) * C32905 + (C1872 + C1873 + C1874) * C834 +
           (C1868 + C1867 + C1866) * C827 + (C1865 + C1864 + C1863) * C833 +
           (C1862 + C1861 + C1860) * C826 + (C1859 + C1858 + C1857) * C832) *
              C32633 * C32603 * C32589 * C111 +
          (C1877 * C832 + C1878 * C826 + (C1874 + C1873 + C1872) * C833 +
           (C1871 + C1870 + C1869) * C827 +
           (C1817 * C123 + C32952 * C134 + C1818 * C348 + C32941 * C359 +
            C1819 * C357 + C32919 * C376) *
               C834 +
           (C1817 * C135 + C32952 * C144 + C1818 * C358 + C32941 * C378 +
            C1819 * C377 + C32919 * C387) *
               C32905) *
              C32633 * C32603 * C32589 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C1817 * C119 + C32952 * C126 + C1818 * C352 + C32941 * C367 +
            C1819 * C353 + C32919 * C368) *
               C832 +
           (C1817 * C127 + C32952 * C140 + C1818 * C366 + C32941 * C382 +
            C1819 * C369 + C32919 * C383) *
               C826 +
           (C1857 + C1858 + C1859) * C833 + (C1860 + C1861 + C1862) * C827 +
           C1877 * C834 + C1878 * C32905) *
              C32633 * C32603 * C239 -
          ((C1819 * C1170 + C32919 * C1182 + C1818 * C706 + C32941 * C713 +
            C1817 * C257 + C32952 * C275) *
               C32905 +
           (C1819 * C1155 + C32919 * C1169 + C1818 * C698 + C32941 * C705 +
            C1817 * C245 + C32952 * C258) *
               C834 +
           (C1819 * C1168 + C32919 * C1181 + C1818 * C704 + C32941 * C712 +
            C1817 * C259 + C32952 * C276) *
               C827 +
           (C1819 * C1154 + C32919 * C1167 + C1818 * C697 + C32941 * C703 +
            C1817 * C246 + C32952 * C260) *
               C833 +
           (C1819 * C1166 + C32919 * C1180 + C1818 * C702 + C32941 * C711 +
            C1817 * C261 + C32952 * C277) *
               C826 +
           (C1819 * C1153 + C32919 * C1165 + C1818 * C696 + C32941 * C701 +
            C1817 * C247 + C32952 * C262) *
               C832) *
              C32633 * C32603 * C240 +
          ((C1817 * C248 + C32952 * C263 + C1818 * C1152 + C32941 * C1164 +
            C1819 * C1156 + C32919 * C1171) *
               C832 +
           (C1817 * C264 + C32952 * C278 + C1818 * C1163 + C32941 * C1179 +
            C1819 * C1172 + C32919 * C1183) *
               C826 +
           (C1817 * C249 + C32952 * C265 + C1818 * C1151 + C32941 * C1162 +
            C1819 * C1157 + C32919 * C1173) *
               C833 +
           (C1817 * C266 + C32952 * C279 + C1818 * C1161 + C32941 * C1178 +
            C1819 * C1174 + C32919 * C1184) *
               C827 +
           (C1817 * C250 + C32952 * C267 + C1818 * C1150 + C32941 * C1160 +
            C1819 * C1158 + C32919 * C1175) *
               C834 +
           (C1817 * C268 + C32952 * C280 + C1818 * C1159 + C32941 * C1177 +
            C1819 * C1176 + C32919 * C1185) *
               C32905) *
              C32633 * C32603 * C241) *
         C32577) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C1817 * C119 + C32952 * C126 + C1818 * C352 + C32941 * C367 +
            C1819 * C353 + C32919 * C368) *
               C832 +
           (C1817 * C127 + C32952 * C140 + C1818 * C366 + C32941 * C382 +
            C1819 * C369 + C32919 * C383) *
               C826 +
           (C1857 + C1858 + C1859) * C833 + (C1860 + C1861 + C1862) * C827 +
           C1877 * C834 + C1878 * C32905) *
              C32633 * C345 -
          ((C1819 * C2104 + C32919 * C2116 + C1818 * C373 + C32941 * C385 +
            C1817 * C362 + C32952 * C380) *
               C32905 +
           (C1819 * C2098 + C32919 * C2105 + C1818 * C355 + C32941 * C372 +
            C1817 * C350 + C32952 * C363) *
               C834 +
           (C1819 * C2106 + C32919 * C2117 + C1818 * C371 + C32941 * C384 +
            C1817 * C364 + C32952 * C381) *
               C827 +
           (C1819 * C2099 + C32919 * C2107 + C1818 * C354 + C32941 * C370 +
            C1817 * C351 + C32952 * C365) *
               C833 +
           (C1819 * C2108 + C32919 * C2118 + C1818 * C369 + C32941 * C383 +
            C1817 * C366 + C32952 * C382) *
               C826 +
           (C1819 * C2100 + C32919 * C2109 + C1818 * C353 + C32941 * C368 +
            C1817 * C352 + C32952 * C367) *
               C832) *
              C32633 * C346 +
          ((C1817 * C353 + C32952 * C368 + C1818 * C2100 + C32941 * C2109 +
            C1819 * C2101 + C32919 * C2110) *
               C832 +
           (C1817 * C369 + C32952 * C383 + C1818 * C2108 + C32941 * C2118 +
            C1819 * C2111 + C32919 * C2119) *
               C826 +
           (C1817 * C354 + C32952 * C370 + C1818 * C2099 + C32941 * C2107 +
            C1819 * C2102 + C32919 * C2112) *
               C833 +
           (C1817 * C371 + C32952 * C384 + C1818 * C2106 + C32941 * C2117 +
            C1819 * C2113 + C32919 * C2120) *
               C827 +
           (C1817 * C355 + C32952 * C372 + C1818 * C2098 + C32941 * C2105 +
            C1819 * C2103 + C32919 * C2114) *
               C834 +
           (C1817 * C373 + C32952 * C385 + C1818 * C2104 + C32941 * C2116 +
            C1819 * C2115 + C32919 * C2121) *
               C32905) *
              C32633 * C347) *
         C32589 * C32577) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C119 + C32644 * C126) * C5424 +
            (C113 * C127 + C32644 * C140) * C32948 + C168 * C5425 +
            C169 * C32935 + C170 * C5426 + C171 * C32905) *
               C5421 +
           (C1016 * C5424 + C1017 * C32948 + C502 * C5425 + C501 * C32935 +
            C500 * C5426 + C499 * C32905) *
               C5422 +
           (C1018 * C5424 + C1019 * C32948 + C848 * C5425 + C849 * C32935 +
            C850 * C5426 + C851 * C32905) *
               C32916) *
              C32603 * C32589 * C110 -
          ((C852 * C32905 + C853 * C5426 + C851 * C32935 + C850 * C5425 +
            C849 * C32948 + C848 * C5424) *
               C32916 +
           (C497 * C32905 + C498 * C5426 + C499 * C32935 + C500 * C5425 +
            C501 * C32948 + C502 * C5424) *
               C5422 +
           (C173 * C32905 + C172 * C5426 + C171 * C32935 + C170 * C5425 +
            C169 * C32948 + C168 * C5424) *
               C5421) *
              C32603 * C32589 * C111 +
          ((C170 * C5424 + C171 * C32948 + C172 * C5425 + C173 * C32935 +
            C174 * C5426 + C175 * C32905) *
               C5421 +
           (C500 * C5424 + C499 * C32948 + C498 * C5425 + C497 * C32935 +
            C496 * C5426 + C495 * C32905) *
               C5422 +
           (C850 * C5424 + C851 * C32948 + C853 * C5425 + C852 * C32935 +
            (C113 * C252 + C32644 * C271) * C5426 +
            (C113 * C272 + C32644 * C282) * C32905) *
               C32916) *
              C32603 * C32589 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C119 + C32644 * C126) * C5424 +
            (C113 * C127 + C32644 * C140) * C32948 + C168 * C5425 +
            C169 * C32935 + C170 * C5426 + C171 * C32905) *
               C5421 +
           (C5538 + C5539 + C5540 + C5541 + C5542 + C5543) * C5422 +
           C5560 * C32916) *
              C32603 * C239 -
          ((C5550 + C5551 + C5552 + C5553 + C5554 + C5555) * C32916 +
           (C5549 + C5548 + C5547 + C5546 + C5545 + C5544) * C5422 +
           (C5543 + C5542 + C5541 + C5540 + C5539 + C5538) * C5421) *
              C32603 * C240 +
          (C5560 * C5421 +
           (C5555 + C5554 + C5553 + C5552 + C5551 + C5550) * C5422 +
           ((C113 * C966 + C32644 * C975) * C5424 +
            (C113 * C976 + C32644 * C984) * C32948 +
            (C113 * C967 + C32644 * C977) * C5425 +
            (C113 * C978 + C32644 * C985) * C32935 +
            (C113 * C968 + C32644 * C979) * C5426 +
            (C113 * C980 + C32644 * C986) * C32905) *
               C32916) *
              C32603 * C241) *
         C32577) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C119 + C32644 * C126) * C5424 +
            (C113 * C127 + C32644 * C140) * C32948 + C168 * C5425 +
            C169 * C32935 + C170 * C5426 + C171 * C32905) *
               C5421 +
           (C5538 + C5539 + C5540 + C5541 + C5542 + C5543) * C5422 +
           C5560 * C32916) *
              C345 -
          ((C1515 * C32905 + C1516 * C5426 + C1517 * C32935 + C1518 * C5425 +
            C1697 * C32948 + C1698 * C5424) *
               C32916 +
           (C1519 * C32905 + C1520 * C5426 + C1521 * C32935 + C1522 * C5425 +
            C1699 * C32948 + C1700 * C5424) *
               C5422 +
           (C611 * C32905 + C612 * C5426 + C613 * C32935 + C614 * C5425 +
            (C113 * C366 + C32644 * C382) * C32948 +
            (C113 * C352 + C32644 * C367) * C5424) *
               C5421) *
              C346 +
          (((C113 * C353 + C32644 * C368) * C5424 +
            (C113 * C369 + C32644 * C383) * C32948 +
            (C113 * C354 + C32644 * C370) * C5425 +
            (C113 * C371 + C32644 * C384) * C32935 +
            (C113 * C355 + C32644 * C372) * C5426 +
            (C113 * C373 + C32644 * C385) * C32905) *
               C5421 +
           ((C113 * C1153 + C32644 * C1165) * C5424 +
            (C113 * C1166 + C32644 * C1180) * C32948 +
            (C113 * C1154 + C32644 * C1167) * C5425 +
            (C113 * C1168 + C32644 * C1181) * C32935 +
            (C113 * C1155 + C32644 * C1169) * C5426 +
            (C113 * C1170 + C32644 * C1182) * C32905) *
               C5422 +
           ((C113 * C1156 + C32644 * C1171) * C5424 +
            (C113 * C1172 + C32644 * C1183) * C32948 +
            (C113 * C1157 + C32644 * C1173) * C5425 +
            (C113 * C1174 + C32644 * C1184) * C32935 +
            (C113 * C1158 + C32644 * C1175) * C5426 +
            (C113 * C1176 + C32644 * C1185) * C32905) *
               C32916) *
              C347) *
         C32589 * C32577) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C119 + C32644 * C126) * C6200 +
            (C113 * C127 + C32644 * C140) * C32542) *
               C6195 +
           (C1016 * C6200 + C1017 * C32542) * C6196 +
           (C1018 * C6200 + C1019 * C32542) * C6197 +
           (C1025 * C6200 + C1024 * C32542) * C6198 +
           ((C113 * C966 + C32644 * C975) * C6200 +
            (C113 * C976 + C32644 * C984) * C32542) *
               C6199) *
              C32603 * C32589 * C110 -
          (((C113 * C978 + C32644 * C985) * C32542 +
            (C113 * C967 + C32644 * C977) * C6200) *
               C6199 +
           (C1022 * C32542 + C1023 * C6200) * C6198 +
           (C849 * C32542 + C848 * C6200) * C6197 +
           (C501 * C32542 + C502 * C6200) * C6196 +
           (C169 * C32542 + C168 * C6200) * C6195) *
              C32603 * C32589 * C111 +
          ((C170 * C6200 + C171 * C32542) * C6195 +
           (C500 * C6200 + C499 * C32542) * C6196 +
           (C850 * C6200 + C851 * C32542) * C6197 +
           (C1021 * C6200 + C1020 * C32542) * C6198 +
           ((C113 * C968 + C32644 * C979) * C6200 +
            (C113 * C980 + C32644 * C986) * C32542) *
               C6199) *
              C32603 * C32589 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C119 + C32644 * C126) * C6200 +
            (C113 * C127 + C32644 * C140) * C32542) *
               C6195 +
           (C6272 + C6273) * C6196 + C6286 * C6197 + C6287 * C6198 +
           C6296 * C6199) *
              C32603 * C239 -
          ((C6294 + C6295) * C6199 + (C6293 + C6292) * C6198 +
           (C6277 + C6276) * C6197 + (C6275 + C6274) * C6196 +
           (C6273 + C6272) * C6195) *
              C32603 * C240 +
          (C6286 * C6195 + C6287 * C6196 + C6296 * C6197 +
           (C6295 + C6294) * C6198 +
           ((C113 * C6264 + C32644 * C6267) * C6200 +
            (C113 * C6268 + C32644 * C6270) * C32542) *
               C6199) *
              C32603 * C241) *
         C32577) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C119 + C32644 * C126) * C6200 +
            (C113 * C127 + C32644 * C140) * C32542) *
               C6195 +
           (C6272 + C6273) * C6196 + C6286 * C6197 + C6287 * C6198 +
           C6296 * C6199) *
              C345 -
          (((C113 * C6361 + C32644 * C6367) * C32542 +
            (C113 * C6358 + C32644 * C6362) * C6200) *
               C6199 +
           ((C113 * C1672 + C32644 * C1677) * C32542 +
            (C113 * C1668 + C32644 * C1671) * C6200) *
               C6198 +
           (C1697 * C32542 + C1698 * C6200) * C6197 +
           (C1699 * C32542 + C1700 * C6200) * C6196 +
           ((C113 * C366 + C32644 * C382) * C32542 +
            (C113 * C352 + C32644 * C367) * C6200) *
               C6195) *
              C346 +
          (((C113 * C353 + C32644 * C368) * C6200 +
            (C113 * C369 + C32644 * C383) * C32542) *
               C6195 +
           ((C113 * C1153 + C32644 * C1165) * C6200 +
            (C113 * C1166 + C32644 * C1180) * C32542) *
               C6196 +
           ((C113 * C1156 + C32644 * C1171) * C6200 +
            (C113 * C1172 + C32644 * C1183) * C32542) *
               C6197 +
           ((C113 * C6359 + C32644 * C6363) * C6200 +
            (C113 * C6364 + C32644 * C6368) * C32542) *
               C6198 +
           ((C113 * C6360 + C32644 * C6365) * C6200 +
            (C113 * C6366 + C32644 * C6369) * C32542) *
               C6199) *
              C347) *
         C32589 * C32577) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C1817 * C119 + C32952 * C126 + C1818 * C352 + C32941 * C367 +
             C1819 * C353 + C32919 * C368) *
                C6200 +
            (C1817 * C127 + C32952 * C140 + C1818 * C366 + C32941 * C382 +
             C1819 * C369 + C32919 * C383) *
                C32542) *
               C5421 +
           ((C1817 * C247 + C32952 * C262 + C1818 * C696 + C32941 * C701 +
             C1819 * C1153 + C32919 * C1165) *
                C6200 +
            (C1817 * C261 + C32952 * C277 + C1818 * C702 + C32941 * C711 +
             C1819 * C1166 + C32919 * C1180) *
                C32542) *
               C5422 +
           ((C1817 * C248 + C32952 * C263 + C1818 * C1152 + C32941 * C1164 +
             C1819 * C1156 + C32919 * C1171) *
                C6200 +
            (C1817 * C264 + C32952 * C278 + C1818 * C1163 + C32941 * C1179 +
             C1819 * C1172 + C32919 * C1183) *
                C32542) *
               C32916) *
              C32603 * C32589 * C110 -
          (((C1819 * C1174 + C32919 * C1184 + C1818 * C1161 + C32941 * C1178 +
             C1817 * C266 + C32952 * C279) *
                C32542 +
            (C1819 * C1157 + C32919 * C1173 + C1818 * C1151 + C32941 * C1162 +
             C1817 * C249 + C32952 * C265) *
                C6200) *
               C32916 +
           ((C2303 + C2304 + C2305) * C32542 +
            (C2306 + C2307 + C2308) * C6200) *
               C5422 +
           ((C1862 + C1861 + C1860) * C32542 +
            (C1859 + C1858 + C1857) * C6200) *
               C5421) *
              C32603 * C32589 * C111 +
          ((C1877 * C6200 + C1878 * C32542) * C5421 +
           ((C2302 + C2301 + C2300) * C6200 +
            (C2299 + C2298 + C2297) * C32542) *
               C5422 +
           ((C1817 * C250 + C32952 * C267 + C1818 * C1150 + C32941 * C1160 +
             C1819 * C1158 + C32919 * C1175) *
                C6200 +
            (C1817 * C268 + C32952 * C280 + C1818 * C1159 + C32941 * C1177 +
             C1819 * C1176 + C32919 * C1185) *
                C32542) *
               C32916) *
              C32603 * C32589 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C1817 * C119 + C32952 * C126 + C1818 * C352 + C32941 * C367 +
             C1819 * C353 + C32919 * C368) *
                C6200 +
            (C1817 * C127 + C32952 * C140 + C1818 * C366 + C32941 * C382 +
             C1819 * C369 + C32919 * C383) *
                C32542) *
               C5421 +
           ((C6919 + C6920 + C6921) * C6200 +
            (C6922 + C6923 + C6924) * C32542) *
               C5422 +
           C6943 * C32916) *
              C32603 * C239 -
          (((C6931 + C6932 + C6933) * C32542 +
            (C6934 + C6935 + C6936) * C6200) *
               C32916 +
           ((C6930 + C6929 + C6928) * C32542 +
            (C6927 + C6926 + C6925) * C6200) *
               C5422 +
           ((C6924 + C6923 + C6922) * C32542 +
            (C6921 + C6920 + C6919) * C6200) *
               C5421) *
              C32603 * C240 +
          (C6943 * C5421 +
           ((C6936 + C6935 + C6934) * C6200 +
            (C6933 + C6932 + C6931) * C32542) *
               C5422 +
           ((C1817 * C966 + C32952 * C975 + C1818 * C6358 + C32941 * C6362 +
             C1819 * C6360 + C32919 * C6365) *
                C6200 +
            (C1817 * C976 + C32952 * C984 + C1818 * C6361 + C32941 * C6367 +
             C1819 * C6366 + C32919 * C6369) *
                C32542) *
               C32916) *
              C32603 * C241) *
         C32577) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C1817 * C119 + C32952 * C126 + C1818 * C352 + C32941 * C367 +
             C1819 * C353 + C32919 * C368) *
                C6200 +
            (C1817 * C127 + C32952 * C140 + C1818 * C366 + C32941 * C382 +
             C1819 * C369 + C32919 * C383) *
                C32542) *
               C5421 +
           ((C6919 + C6920 + C6921) * C6200 +
            (C6922 + C6923 + C6924) * C32542) *
               C5422 +
           C6943 * C32916) *
              C345 -
          (((C1819 * C7056 + C32919 * C7062 + C1818 * C1172 + C32941 * C1183 +
             C1817 * C1163 + C32952 * C1179) *
                C32542 +
            (C1819 * C7053 + C32919 * C7057 + C1818 * C1156 + C32941 * C1171 +
             C1817 * C1152 + C32952 * C1164) *
                C6200) *
               C32916 +
           ((C1819 * C2644 + C32919 * C2649 + C1818 * C1166 + C32941 * C1180 +
             C1817 * C702 + C32952 * C711) *
                C32542 +
            (C1819 * C2640 + C32919 * C2643 + C1818 * C1153 + C32941 * C1165 +
             C1817 * C696 + C32952 * C701) *
                C6200) *
               C5422 +
           ((C1819 * C2108 + C32919 * C2118 + C1818 * C369 + C32941 * C383 +
             C1817 * C366 + C32952 * C382) *
                C32542 +
            (C1819 * C2100 + C32919 * C2109 + C1818 * C353 + C32941 * C368 +
             C1817 * C352 + C32952 * C367) *
                C6200) *
               C5421) *
              C346 +
          (((C1817 * C353 + C32952 * C368 + C1818 * C2100 + C32941 * C2109 +
             C1819 * C2101 + C32919 * C2110) *
                C6200 +
            (C1817 * C369 + C32952 * C383 + C1818 * C2108 + C32941 * C2118 +
             C1819 * C2111 + C32919 * C2119) *
                C32542) *
               C5421 +
           ((C1817 * C1153 + C32952 * C1165 + C1818 * C2640 + C32941 * C2643 +
             C1819 * C7054 + C32919 * C7058) *
                C6200 +
            (C1817 * C1166 + C32952 * C1180 + C1818 * C2644 + C32941 * C2649 +
             C1819 * C7059 + C32919 * C7063) *
                C32542) *
               C5422 +
           ((C1817 * C1156 + C32952 * C1171 + C1818 * C7053 + C32941 * C7057 +
             C1819 * C7055 + C32919 * C7060) *
                C6200 +
            (C1817 * C1172 + C32952 * C1183 + C1818 * C7056 + C32941 * C7062 +
             C1819 * C7061 + C32919 * C7064) *
                C32542) *
               C32916) *
              C347) *
         C32589 * C32577) /
            (p * q * std::sqrt(p + q));
    d2ee[113] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C119 + C32644 * C126) * C832 +
             (C113 * C127 + C32644 * C140) * C826 + C168 * C833 + C169 * C827 +
             C170 * C834 + C171 * C32905) *
                C32951 +
            (C1026 + C1027 + C992 + C993 + C994 + C995) * C32939 +
            C1040 * C32916) *
               C584 -
           ((C1515 * C32905 + C1516 * C834 + C1517 * C827 + C1518 * C833 +
             (C113 * C1163 + C32644 * C1179) * C826 +
             (C113 * C1152 + C32644 * C1164) * C832) *
                C32916 +
            (C1519 * C32905 + C1520 * C834 + C1521 * C827 + C1522 * C833 +
             (C113 * C702 + C32644 * C711) * C826 +
             (C113 * C696 + C32644 * C701) * C832) *
                C32939 +
            (C611 * C32905 + C612 * C834 + C613 * C827 + C614 * C833 +
             (C113 * C366 + C32644 * C382) * C826 +
             (C113 * C352 + C32644 * C367) * C832) *
                C32951) *
               C585) *
              C32589 * C472 +
          (((C614 * C832 + C613 * C826 + C612 * C833 + C611 * C827 +
             C610 * C834 + C609 * C32905) *
                C32951 +
            (C1522 * C832 + C1521 * C826 + C1520 * C833 + C1519 * C827 +
             (C113 * C699 + C32644 * C707) * C834 +
             (C113 * C708 + C32644 * C714) * C32905) *
                C32939 +
            (C1518 * C832 + C1517 * C826 + C1516 * C833 + C1515 * C827 +
             (C113 * C1494 + C32644 * C1495) * C834 +
             (C113 * C1496 + C32644 * C1497) * C32905) *
                C32916) *
               C585 -
           ((C1348 + C1347 + C1346 + C1345 + C1344 + C1343) * C32916 +
            (C1342 + C1341 + C1340 + C1339 + C1338 + C1337) * C32939 +
            (C173 * C32905 + C172 * C834 + C171 * C827 + C170 * C833 +
             C169 * C826 + C168 * C832) *
                C32951) *
               C584) *
              C32589 * C473)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C119 + C32644 * C126) * C114 +
            (C113 * C127 + C32644 * C140) * C102 + C168 * C115 + C169 * C103 +
            C170 * C116 + C171 * C104 + C172 * C117 + C173 * C105 +
            C174 * C118 + C175 * C106) *
               C32633 * C584 -
           (C607 * C106 + C608 * C118 + C609 * C105 + C610 * C117 +
            C611 * C104 + C612 * C116 + C613 * C103 + C614 * C115 +
            (C113 * C366 + C32644 * C382) * C102 +
            (C113 * C352 + C32644 * C367) * C114) *
               C32633 * C585) *
              C32589 * C472 +
          ((C614 * C114 + C613 * C102 + C612 * C115 + C611 * C103 +
            C610 * C116 + C609 * C104 + C608 * C117 + C607 * C105 +
            (C113 * C586 + C32644 * C587) * C118 +
            (C113 * C588 + C32644 * C589) * C106) *
               C32633 * C585 -
           (C176 * C106 + C177 * C118 + C175 * C105 + C174 * C117 +
            C173 * C104 + C172 * C116 + C171 * C103 + C170 * C115 +
            C169 * C102 + C168 * C114) *
               C32633 * C584) *
              C32589 * C473)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C1817 * C119 + C32952 * C126 + C1818 * C352 + C32941 * C367 +
             C1819 * C353 + C32919 * C368) *
                C832 +
            (C1817 * C127 + C32952 * C140 + C1818 * C366 + C32941 * C382 +
             C1819 * C369 + C32919 * C383) *
                C826 +
            (C1857 + C1858 + C1859) * C833 + (C1860 + C1861 + C1862) * C827 +
            C1877 * C834 + C1878 * C32905) *
               C32633 * C584 -
           ((C2483 + C2484 + C2485) * C32905 + (C2486 + C2487 + C2488) * C834 +
            (C2489 + C2490 + C2491) * C827 + (C2492 + C2493 + C2494) * C833 +
            (C1819 * C2108 + C32919 * C2118 + C1818 * C369 + C32941 * C383 +
             C1817 * C366 + C32952 * C382) *
                C826 +
            (C1819 * C2100 + C32919 * C2109 + C1818 * C353 + C32941 * C368 +
             C1817 * C352 + C32952 * C367) *
                C832) *
               C32633 * C585) *
              C32589 * C472 +
          (((C2494 + C2493 + C2492) * C832 + (C2491 + C2490 + C2489) * C826 +
            (C2488 + C2487 + C2486) * C833 + (C2485 + C2484 + C2483) * C827 +
            (C1817 * C349 + C32952 * C361 + C1818 * C356 + C32941 * C374 +
             C1819 * C2454 + C32919 * C2455) *
                C834 +
            (C1817 * C360 + C32952 * C379 + C1818 * C375 + C32941 * C386 +
             C1819 * C2456 + C32919 * C2457) *
                C32905) *
               C32633 * C585 -
           ((C1869 + C1870 + C1871) * C32905 + (C1872 + C1873 + C1874) * C834 +
            (C1868 + C1867 + C1866) * C827 + (C1865 + C1864 + C1863) * C833 +
            (C1862 + C1861 + C1860) * C826 + (C1859 + C1858 + C1857) * C832) *
               C32633 * C584) *
              C32589 * C473)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C119 + C32644 * C126) * C5424 +
             (C113 * C127 + C32644 * C140) * C32948 + C168 * C5425 +
             C169 * C32935 + C170 * C5426 + C171 * C32905) *
                C5421 +
            (C5538 + C5539 + C5540 + C5541 + C5542 + C5543) * C5422 +
            C5560 * C32916) *
               C584 -
           ((C1515 * C32905 + C1516 * C5426 + C1517 * C32935 + C1518 * C5425 +
             C1697 * C32948 + C1698 * C5424) *
                C32916 +
            (C1519 * C32905 + C1520 * C5426 + C1521 * C32935 + C1522 * C5425 +
             C1699 * C32948 + C1700 * C5424) *
                C5422 +
            (C611 * C32905 + C612 * C5426 + C613 * C32935 + C614 * C5425 +
             (C113 * C366 + C32644 * C382) * C32948 +
             (C113 * C352 + C32644 * C367) * C5424) *
                C5421) *
               C585) *
              C32589 * C472 +
          (((C614 * C5424 + C613 * C32948 + C612 * C5425 + C611 * C32935 +
             C610 * C5426 + C609 * C32905) *
                C5421 +
            (C1522 * C5424 + C1521 * C32948 + C1520 * C5425 + C1519 * C32935 +
             C3246 * C5426 + C3245 * C32905) *
                C5422 +
            (C1518 * C5424 + C1517 * C32948 + C1516 * C5425 + C1515 * C32935 +
             (C113 * C1494 + C32644 * C1495) * C5426 +
             (C113 * C1496 + C32644 * C1497) * C32905) *
                C32916) *
               C585 -
           ((C5828 + C5827 + C5826 + C5825 + C5824 + C5823) * C32916 +
            (C5822 + C5821 + C5820 + C5819 + C5818 + C5817) * C5422 +
            (C173 * C32905 + C172 * C5426 + C171 * C32935 + C170 * C5425 +
             C169 * C32948 + C168 * C5424) *
                C5421) *
               C584) *
              C32589 * C473)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C119 + C32644 * C126) * C6200 +
             (C113 * C127 + C32644 * C140) * C32542) *
                C6195 +
            (C6272 + C6273) * C6196 + C6286 * C6197 + C6287 * C6198 +
            C6296 * C6199) *
               C584 -
           (((C113 * C6361 + C32644 * C6367) * C32542 +
             (C113 * C6358 + C32644 * C6362) * C6200) *
                C6199 +
            ((C113 * C1672 + C32644 * C1677) * C32542 +
             (C113 * C1668 + C32644 * C1671) * C6200) *
                C6198 +
            (C1697 * C32542 + C1698 * C6200) * C6197 +
            (C1699 * C32542 + C1700 * C6200) * C6196 +
            ((C113 * C366 + C32644 * C382) * C32542 +
             (C113 * C352 + C32644 * C367) * C6200) *
                C6195) *
               C585) *
              C32589 * C472 +
          (((C614 * C6200 + C613 * C32542) * C6195 +
            (C1522 * C6200 + C1521 * C32542) * C6196 +
            (C1518 * C6200 + C1517 * C32542) * C6197 +
            ((C113 * C1669 + C32644 * C1673) * C6200 +
             (C113 * C1674 + C32644 * C1678) * C32542) *
                C6198 +
            ((C113 * C6552 + C32644 * C6553) * C6200 +
             (C113 * C6554 + C32644 * C6555) * C32542) *
                C6199) *
               C585 -
           ((C6470 + C6469) * C6199 + (C6462 + C6461) * C6198 +
            (C6460 + C6459) * C6197 + (C6458 + C6457) * C6196 +
            (C169 * C32542 + C168 * C6200) * C6195) *
               C584) *
              C32589 * C473)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C1817 * C119 + C32952 * C126 + C1818 * C352 + C32941 * C367 +
              C1819 * C353 + C32919 * C368) *
                 C6200 +
             (C1817 * C127 + C32952 * C140 + C1818 * C366 + C32941 * C382 +
              C1819 * C369 + C32919 * C383) *
                 C32542) *
                C5421 +
            ((C6919 + C6920 + C6921) * C6200 +
             (C6922 + C6923 + C6924) * C32542) *
                C5422 +
            C6943 * C32916) *
               C584 -
           (((C1819 * C7056 + C32919 * C7062 + C1818 * C1172 + C32941 * C1183 +
              C1817 * C1163 + C32952 * C1179) *
                 C32542 +
             (C1819 * C7053 + C32919 * C7057 + C1818 * C1156 + C32941 * C1171 +
              C1817 * C1152 + C32952 * C1164) *
                 C6200) *
                C32916 +
            ((C1819 * C2644 + C32919 * C2649 + C1818 * C1166 + C32941 * C1180 +
              C1817 * C702 + C32952 * C711) *
                 C32542 +
             (C1819 * C2640 + C32919 * C2643 + C1818 * C1153 + C32941 * C1165 +
              C1817 * C696 + C32952 * C701) *
                 C6200) *
                C5422 +
            ((C1819 * C2108 + C32919 * C2118 + C1818 * C369 + C32941 * C383 +
              C1817 * C366 + C32952 * C382) *
                 C32542 +
             (C1819 * C2100 + C32919 * C2109 + C1818 * C353 + C32941 * C368 +
              C1817 * C352 + C32952 * C367) *
                 C6200) *
                C5421) *
               C585) *
              C32589 * C472 +
          ((((C2494 + C2493 + C2492) * C6200 +
             (C2491 + C2490 + C2489) * C32542) *
                C5421 +
            ((C1817 * C697 + C32952 * C703 + C1818 * C1154 + C32941 * C1167 +
              C1819 * C2641 + C32919 * C2645) *
                 C6200 +
             (C1817 * C704 + C32952 * C712 + C1818 * C1168 + C32941 * C1181 +
              C1819 * C2646 + C32919 * C2650) *
                 C32542) *
                C5422 +
            ((C1817 * C1151 + C32952 * C1162 + C1818 * C1157 + C32941 * C1173 +
              C1819 * C7379 + C32919 * C7380) *
                 C6200 +
             (C1817 * C1161 + C32952 * C1178 + C1818 * C1174 + C32941 * C1184 +
              C1819 * C7381 + C32919 * C7382) *
                 C32542) *
                C32916) *
               C585 -
           (((C7233 + C7232 + C7231) * C32542 +
             (C7230 + C7229 + C7228) * C6200) *
                C32916 +
            ((C2303 + C2304 + C2305) * C32542 +
             (C2306 + C2307 + C2308) * C6200) *
                C5422 +
            ((C1862 + C1861 + C1860) * C32542 +
             (C1859 + C1858 + C1857) * C6200) *
                C5421) *
               C584) *
              C32589 * C473)) /
            (p * q * std::sqrt(p + q));
    d2ee[114] +=
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C119 + C32644 * C126) * C114 +
           (C113 * C127 + C32644 * C140) * C102 + C168 * C115 + C169 * C103 +
           C170 * C116 + C171 * C104 + C172 * C117 + C173 * C105 + C174 * C118 +
           C175 * C106) *
              C32633 * C32603 * C239 -
          ((C113 * C253 + C32644 * C273) * C106 +
           (C113 * C243 + C32644 * C254) * C118 +
           (C113 * C255 + C32644 * C274) * C105 +
           (C113 * C244 + C32644 * C256) * C117 +
           (C113 * C257 + C32644 * C275) * C104 +
           (C113 * C245 + C32644 * C258) * C116 +
           (C113 * C259 + C32644 * C276) * C103 +
           (C113 * C246 + C32644 * C260) * C115 +
           (C113 * C261 + C32644 * C277) * C102 +
           (C113 * C247 + C32644 * C262) * C114) *
              C32633 * C32603 * C240 +
          ((C113 * C248 + C32644 * C263) * C114 +
           (C113 * C264 + C32644 * C278) * C102 +
           (C113 * C249 + C32644 * C265) * C115 +
           (C113 * C266 + C32644 * C279) * C103 +
           (C113 * C250 + C32644 * C267) * C116 +
           (C113 * C268 + C32644 * C280) * C104 +
           (C113 * C251 + C32644 * C269) * C117 +
           (C113 * C270 + C32644 * C281) * C105 +
           (C113 * C252 + C32644 * C271) * C118 +
           (C113 * C272 + C32644 * C282) * C106) *
              C32633 * C32603 * C241) *
         C32577) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C119 + C32644 * C126) * C114 +
           (C113 * C127 + C32644 * C140) * C102 + C168 * C115 + C169 * C103 +
           C170 * C116 + C171 * C104 + C172 * C117 + C173 * C105 + C174 * C118 +
           C175 * C106) *
              C32633 * C32603 * C32589 * C110 -
          (C176 * C106 + C177 * C118 + C175 * C105 + C174 * C117 + C173 * C104 +
           C172 * C116 + C171 * C103 + C170 * C115 + C169 * C102 +
           C168 * C114) *
              C32633 * C32603 * C32589 * C111 +
          (C170 * C114 + C171 * C102 + C172 * C115 + C173 * C103 + C174 * C116 +
           C175 * C104 + C177 * C117 + C176 * C105 +
           (C113 * C125 + C32644 * C138) * C118 +
           (C113 * C139 + C32644 * C146) * C106) *
              C32633 * C32603 * C32589 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C119 + C32644 * C126) * C832 +
            (C113 * C127 + C32644 * C140) * C826 + C168 * C833 + C169 * C827 +
            C170 * C834 + C171 * C32905) *
               C32951 +
           ((C113 * C247 + C32644 * C262) * C832 +
            (C113 * C261 + C32644 * C277) * C826 + C502 * C833 + C501 * C827 +
            C500 * C834 + C499 * C32905) *
               C32939 +
           ((C113 * C248 + C32644 * C263) * C832 +
            (C113 * C264 + C32644 * C278) * C826 + C848 * C833 + C849 * C827 +
            C850 * C834 + C851 * C32905) *
               C32916) *
              C32603 * C32589 * C110 -
          ((C852 * C32905 + C853 * C834 + C851 * C827 + C850 * C833 +
            C849 * C826 + C848 * C832) *
               C32916 +
           (C497 * C32905 + C498 * C834 + C499 * C827 + C500 * C833 +
            C501 * C826 + C502 * C832) *
               C32939 +
           (C173 * C32905 + C172 * C834 + C171 * C827 + C170 * C833 +
            C169 * C826 + C168 * C832) *
               C32951) *
              C32603 * C32589 * C111 +
          ((C170 * C832 + C171 * C826 + C172 * C833 + C173 * C827 +
            C174 * C834 + C175 * C32905) *
               C32951 +
           (C500 * C832 + C499 * C826 + C498 * C833 + C497 * C827 +
            C496 * C834 + C495 * C32905) *
               C32939 +
           (C850 * C832 + C851 * C826 + C853 * C833 + C852 * C827 +
            (C113 * C252 + C32644 * C271) * C834 +
            (C113 * C272 + C32644 * C282) * C32905) *
               C32916) *
              C32603 * C32589 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C119 + C32644 * C126) * C832 +
            (C113 * C127 + C32644 * C140) * C826 + C168 * C833 + C169 * C827 +
            C170 * C834 + C171 * C32905) *
               C32951 +
           (C1026 + C1027 + C992 + C993 + C994 + C995) * C32939 +
           C1040 * C32916) *
              C32603 * C239 -
          ((C1030 + C1031 + C1032 + C1033 + C1034 + C1035) * C32916 +
           (C1003 + C1002 + C1001 + C1000 + C1029 + C1028) * C32939 +
           (C995 + C994 + C993 + C992 + C1027 + C1026) * C32951) *
              C32603 * C240 +
          (C1040 * C32951 +
           (C1035 + C1034 + C1033 + C1032 + C1031 + C1030) * C32939 +
           ((C113 * C966 + C32644 * C975) * C832 +
            (C113 * C976 + C32644 * C984) * C826 +
            (C113 * C967 + C32644 * C977) * C833 +
            (C113 * C978 + C32644 * C985) * C827 +
            (C113 * C968 + C32644 * C979) * C834 +
            (C113 * C980 + C32644 * C986) * C32905) *
               C32916) *
              C32603 * C241) *
         C32577) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C1817 * C119 + C32952 * C126 + C1818 * C352 + C32941 * C367 +
            C1819 * C353 + C32919 * C368) *
               C832 +
           (C1817 * C127 + C32952 * C140 + C1818 * C366 + C32941 * C382 +
            C1819 * C369 + C32919 * C383) *
               C826 +
           (C1857 + C1858 + C1859) * C833 + (C1860 + C1861 + C1862) * C827 +
           C1877 * C834 + C1878 * C32905) *
              C32633 * C32603 * C32589 * C110 -
          ((C1869 + C1870 + C1871) * C32905 + (C1872 + C1873 + C1874) * C834 +
           (C1868 + C1867 + C1866) * C827 + (C1865 + C1864 + C1863) * C833 +
           (C1862 + C1861 + C1860) * C826 + (C1859 + C1858 + C1857) * C832) *
              C32633 * C32603 * C32589 * C111 +
          (C1877 * C832 + C1878 * C826 + (C1874 + C1873 + C1872) * C833 +
           (C1871 + C1870 + C1869) * C827 +
           (C1817 * C123 + C32952 * C134 + C1818 * C348 + C32941 * C359 +
            C1819 * C357 + C32919 * C376) *
               C834 +
           (C1817 * C135 + C32952 * C144 + C1818 * C358 + C32941 * C378 +
            C1819 * C377 + C32919 * C387) *
               C32905) *
              C32633 * C32603 * C32589 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C1817 * C119 + C32952 * C126 + C1818 * C352 + C32941 * C367 +
            C1819 * C353 + C32919 * C368) *
               C832 +
           (C1817 * C127 + C32952 * C140 + C1818 * C366 + C32941 * C382 +
            C1819 * C369 + C32919 * C383) *
               C826 +
           (C1857 + C1858 + C1859) * C833 + (C1860 + C1861 + C1862) * C827 +
           C1877 * C834 + C1878 * C32905) *
              C32633 * C32603 * C239 -
          ((C1819 * C1170 + C32919 * C1182 + C1818 * C706 + C32941 * C713 +
            C1817 * C257 + C32952 * C275) *
               C32905 +
           (C1819 * C1155 + C32919 * C1169 + C1818 * C698 + C32941 * C705 +
            C1817 * C245 + C32952 * C258) *
               C834 +
           (C1819 * C1168 + C32919 * C1181 + C1818 * C704 + C32941 * C712 +
            C1817 * C259 + C32952 * C276) *
               C827 +
           (C1819 * C1154 + C32919 * C1167 + C1818 * C697 + C32941 * C703 +
            C1817 * C246 + C32952 * C260) *
               C833 +
           (C1819 * C1166 + C32919 * C1180 + C1818 * C702 + C32941 * C711 +
            C1817 * C261 + C32952 * C277) *
               C826 +
           (C1819 * C1153 + C32919 * C1165 + C1818 * C696 + C32941 * C701 +
            C1817 * C247 + C32952 * C262) *
               C832) *
              C32633 * C32603 * C240 +
          ((C1817 * C248 + C32952 * C263 + C1818 * C1152 + C32941 * C1164 +
            C1819 * C1156 + C32919 * C1171) *
               C832 +
           (C1817 * C264 + C32952 * C278 + C1818 * C1163 + C32941 * C1179 +
            C1819 * C1172 + C32919 * C1183) *
               C826 +
           (C1817 * C249 + C32952 * C265 + C1818 * C1151 + C32941 * C1162 +
            C1819 * C1157 + C32919 * C1173) *
               C833 +
           (C1817 * C266 + C32952 * C279 + C1818 * C1161 + C32941 * C1178 +
            C1819 * C1174 + C32919 * C1184) *
               C827 +
           (C1817 * C250 + C32952 * C267 + C1818 * C1150 + C32941 * C1160 +
            C1819 * C1158 + C32919 * C1175) *
               C834 +
           (C1817 * C268 + C32952 * C280 + C1818 * C1159 + C32941 * C1177 +
            C1819 * C1176 + C32919 * C1185) *
               C32905) *
              C32633 * C32603 * C241) *
         C32577) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C119 + C32644 * C126) * C5424 +
            (C113 * C127 + C32644 * C140) * C32948 + C168 * C5425 +
            C169 * C32935 + C170 * C5426 + C171 * C32905) *
               C5421 +
           (C1016 * C5424 + C1017 * C32948 + C502 * C5425 + C501 * C32935 +
            C500 * C5426 + C499 * C32905) *
               C5422 +
           (C1018 * C5424 + C1019 * C32948 + C848 * C5425 + C849 * C32935 +
            C850 * C5426 + C851 * C32905) *
               C32916) *
              C32603 * C32589 * C110 -
          ((C852 * C32905 + C853 * C5426 + C851 * C32935 + C850 * C5425 +
            C849 * C32948 + C848 * C5424) *
               C32916 +
           (C497 * C32905 + C498 * C5426 + C499 * C32935 + C500 * C5425 +
            C501 * C32948 + C502 * C5424) *
               C5422 +
           (C173 * C32905 + C172 * C5426 + C171 * C32935 + C170 * C5425 +
            C169 * C32948 + C168 * C5424) *
               C5421) *
              C32603 * C32589 * C111 +
          ((C170 * C5424 + C171 * C32948 + C172 * C5425 + C173 * C32935 +
            C174 * C5426 + C175 * C32905) *
               C5421 +
           (C500 * C5424 + C499 * C32948 + C498 * C5425 + C497 * C32935 +
            C496 * C5426 + C495 * C32905) *
               C5422 +
           (C850 * C5424 + C851 * C32948 + C853 * C5425 + C852 * C32935 +
            (C113 * C252 + C32644 * C271) * C5426 +
            (C113 * C272 + C32644 * C282) * C32905) *
               C32916) *
              C32603 * C32589 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C119 + C32644 * C126) * C5424 +
            (C113 * C127 + C32644 * C140) * C32948 + C168 * C5425 +
            C169 * C32935 + C170 * C5426 + C171 * C32905) *
               C5421 +
           (C5538 + C5539 + C5540 + C5541 + C5542 + C5543) * C5422 +
           C5560 * C32916) *
              C32603 * C239 -
          ((C5550 + C5551 + C5552 + C5553 + C5554 + C5555) * C32916 +
           (C5549 + C5548 + C5547 + C5546 + C5545 + C5544) * C5422 +
           (C5543 + C5542 + C5541 + C5540 + C5539 + C5538) * C5421) *
              C32603 * C240 +
          (C5560 * C5421 +
           (C5555 + C5554 + C5553 + C5552 + C5551 + C5550) * C5422 +
           ((C113 * C966 + C32644 * C975) * C5424 +
            (C113 * C976 + C32644 * C984) * C32948 +
            (C113 * C967 + C32644 * C977) * C5425 +
            (C113 * C978 + C32644 * C985) * C32935 +
            (C113 * C968 + C32644 * C979) * C5426 +
            (C113 * C980 + C32644 * C986) * C32905) *
               C32916) *
              C32603 * C241) *
         C32577) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C119 + C32644 * C126) * C6200 +
            (C113 * C127 + C32644 * C140) * C32542) *
               C6195 +
           (C1016 * C6200 + C1017 * C32542) * C6196 +
           (C1018 * C6200 + C1019 * C32542) * C6197 +
           (C1025 * C6200 + C1024 * C32542) * C6198 +
           ((C113 * C966 + C32644 * C975) * C6200 +
            (C113 * C976 + C32644 * C984) * C32542) *
               C6199) *
              C32603 * C32589 * C110 -
          (((C113 * C978 + C32644 * C985) * C32542 +
            (C113 * C967 + C32644 * C977) * C6200) *
               C6199 +
           (C1022 * C32542 + C1023 * C6200) * C6198 +
           (C849 * C32542 + C848 * C6200) * C6197 +
           (C501 * C32542 + C502 * C6200) * C6196 +
           (C169 * C32542 + C168 * C6200) * C6195) *
              C32603 * C32589 * C111 +
          ((C170 * C6200 + C171 * C32542) * C6195 +
           (C500 * C6200 + C499 * C32542) * C6196 +
           (C850 * C6200 + C851 * C32542) * C6197 +
           (C1021 * C6200 + C1020 * C32542) * C6198 +
           ((C113 * C968 + C32644 * C979) * C6200 +
            (C113 * C980 + C32644 * C986) * C32542) *
               C6199) *
              C32603 * C32589 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C119 + C32644 * C126) * C6200 +
            (C113 * C127 + C32644 * C140) * C32542) *
               C6195 +
           (C6272 + C6273) * C6196 + C6286 * C6197 + C6287 * C6198 +
           C6296 * C6199) *
              C32603 * C239 -
          ((C6294 + C6295) * C6199 + (C6293 + C6292) * C6198 +
           (C6277 + C6276) * C6197 + (C6275 + C6274) * C6196 +
           (C6273 + C6272) * C6195) *
              C32603 * C240 +
          (C6286 * C6195 + C6287 * C6196 + C6296 * C6197 +
           (C6295 + C6294) * C6198 +
           ((C113 * C6264 + C32644 * C6267) * C6200 +
            (C113 * C6268 + C32644 * C6270) * C32542) *
               C6199) *
              C32603 * C241) *
         C32577) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C1817 * C119 + C32952 * C126 + C1818 * C352 + C32941 * C367 +
             C1819 * C353 + C32919 * C368) *
                C6200 +
            (C1817 * C127 + C32952 * C140 + C1818 * C366 + C32941 * C382 +
             C1819 * C369 + C32919 * C383) *
                C32542) *
               C5421 +
           ((C1817 * C247 + C32952 * C262 + C1818 * C696 + C32941 * C701 +
             C1819 * C1153 + C32919 * C1165) *
                C6200 +
            (C1817 * C261 + C32952 * C277 + C1818 * C702 + C32941 * C711 +
             C1819 * C1166 + C32919 * C1180) *
                C32542) *
               C5422 +
           ((C1817 * C248 + C32952 * C263 + C1818 * C1152 + C32941 * C1164 +
             C1819 * C1156 + C32919 * C1171) *
                C6200 +
            (C1817 * C264 + C32952 * C278 + C1818 * C1163 + C32941 * C1179 +
             C1819 * C1172 + C32919 * C1183) *
                C32542) *
               C32916) *
              C32603 * C32589 * C110 -
          (((C1819 * C1174 + C32919 * C1184 + C1818 * C1161 + C32941 * C1178 +
             C1817 * C266 + C32952 * C279) *
                C32542 +
            (C1819 * C1157 + C32919 * C1173 + C1818 * C1151 + C32941 * C1162 +
             C1817 * C249 + C32952 * C265) *
                C6200) *
               C32916 +
           ((C2303 + C2304 + C2305) * C32542 +
            (C2306 + C2307 + C2308) * C6200) *
               C5422 +
           ((C1862 + C1861 + C1860) * C32542 +
            (C1859 + C1858 + C1857) * C6200) *
               C5421) *
              C32603 * C32589 * C111 +
          ((C1877 * C6200 + C1878 * C32542) * C5421 +
           ((C2302 + C2301 + C2300) * C6200 +
            (C2299 + C2298 + C2297) * C32542) *
               C5422 +
           ((C1817 * C250 + C32952 * C267 + C1818 * C1150 + C32941 * C1160 +
             C1819 * C1158 + C32919 * C1175) *
                C6200 +
            (C1817 * C268 + C32952 * C280 + C1818 * C1159 + C32941 * C1177 +
             C1819 * C1176 + C32919 * C1185) *
                C32542) *
               C32916) *
              C32603 * C32589 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C1817 * C119 + C32952 * C126 + C1818 * C352 + C32941 * C367 +
             C1819 * C353 + C32919 * C368) *
                C6200 +
            (C1817 * C127 + C32952 * C140 + C1818 * C366 + C32941 * C382 +
             C1819 * C369 + C32919 * C383) *
                C32542) *
               C5421 +
           ((C6919 + C6920 + C6921) * C6200 +
            (C6922 + C6923 + C6924) * C32542) *
               C5422 +
           C6943 * C32916) *
              C32603 * C239 -
          (((C6931 + C6932 + C6933) * C32542 +
            (C6934 + C6935 + C6936) * C6200) *
               C32916 +
           ((C6930 + C6929 + C6928) * C32542 +
            (C6927 + C6926 + C6925) * C6200) *
               C5422 +
           ((C6924 + C6923 + C6922) * C32542 +
            (C6921 + C6920 + C6919) * C6200) *
               C5421) *
              C32603 * C240 +
          (C6943 * C5421 +
           ((C6936 + C6935 + C6934) * C6200 +
            (C6933 + C6932 + C6931) * C32542) *
               C5422 +
           ((C1817 * C966 + C32952 * C975 + C1818 * C6358 + C32941 * C6362 +
             C1819 * C6360 + C32919 * C6365) *
                C6200 +
            (C1817 * C976 + C32952 * C984 + C1818 * C6361 + C32941 * C6367 +
             C1819 * C6366 + C32919 * C6369) *
                C32542) *
               C32916) *
              C32603 * C241) *
         C32577) /
            (p * q * std::sqrt(p + q));
    d2ee[115] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C3484 * C119 + C32886 * C126 + C3485 * C352 + C32731 * C367) *
                C2756 +
            (C3484 * C127 + C32886 * C140 + C3485 * C366 + C32731 * C382) *
                C2750 +
            (C3519 + C3520) * C2757 + (C3521 + C3522) * C2751 + C3535 * C2758 +
            C3536 * C2752 + C3537 * C2759 + C3538 * C32920) *
               C32633 * C32603 * C470 -
           ((C3889 + C3890) * C32920 + (C3891 + C3892) * C2759 +
            (C3893 + C3894) * C2752 + (C3895 + C3896) * C2758 +
            (C3897 + C3898) * C2751 + (C3899 + C3900) * C2757 +
            (C3485 * C702 + C32731 * C711 + C3484 * C261 + C32886 * C277) *
                C2750 +
            (C3485 * C696 + C32731 * C701 + C3484 * C247 + C32886 * C262) *
                C2756) *
               C32633 * C32603 * C471) *
              C472 +
          (((C3900 + C3899) * C2756 + (C3898 + C3897) * C2750 +
            (C3896 + C3895) * C2757 + (C3894 + C3893) * C2751 +
            (C3892 + C3891) * C2758 + (C3890 + C3889) * C2752 +
            (C3484 * C243 + C32886 * C254 + C3485 * C700 + C32731 * C709) *
                C2759 +
            (C3484 * C253 + C32886 * C273 + C3485 * C710 + C32731 * C715) *
                C32920) *
               C32633 * C32603 * C471 -
           ((C3531 + C3532) * C32920 + (C3533 + C3534) * C2759 +
            (C3530 + C3529) * C2752 + (C3528 + C3527) * C2758 +
            (C3526 + C3525) * C2751 + (C3524 + C3523) * C2757 +
            (C3522 + C3521) * C2750 + (C3520 + C3519) * C2756) *
               C32633 * C32603 * C470) *
              C473)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C3484 * C119 + C32886 * C126 + C3485 * C352 + C32731 * C367) *
                 C31559 +
             (C3484 * C127 + C32886 * C140 + C3485 * C366 + C32731 * C382) *
                 C32866 +
             (C3519 + C3520) * C31540 + (C3521 + C3522) * C32552) *
                C5421 +
            ((C4523 + C4524) * C31559 + (C4525 + C4526) * C32866 +
             C4879 * C31540 + C4880 * C32552) *
                C5422 +
            C8640 * C32916) *
               C32603 * C470 -
           (((C8630 + C8631) * C32552 + (C8632 + C8633) * C31540 +
             (C8634 + C8635) * C32866 + (C8636 + C8637) * C31559) *
                C32916 +
            (C8981 * C32552 + C8982 * C31540 + (C4535 + C4536) * C32866 +
             (C4537 + C4538) * C31559) *
                C5422 +
            (C4883 * C32552 + C4884 * C31540 + (C4526 + C4525) * C32866 +
             (C4524 + C4523) * C31559) *
                C5421) *
               C32603 * C471) *
              C472 +
          (((C4879 * C31559 + C4880 * C32866 + C4343 * C31540 +
             C4344 * C32552) *
                C5421 +
            (C8608 * C31559 + C8609 * C32866 + (C4530 + C4529) * C31540 +
             (C4528 + C4527) * C32552) *
                C5422 +
            ((C8633 + C8632) * C31559 + (C8631 + C8630) * C32866 +
             (C3484 * C963 + C32886 * C970 + C3485 * C1670 + C32731 * C1675) *
                 C31540 +
             (C3484 * C969 + C32886 * C981 + C3485 * C1676 + C32731 * C1679) *
                 C32552) *
                C32916) *
               C32603 * C471 -
           (((C4527 + C4528) * C32552 + (C4529 + C4530) * C31540 +
             C8981 * C32866 + C8982 * C31559) *
                C32916 +
            (C4881 * C32552 + C4882 * C31540 + C4883 * C32866 +
             C4884 * C31559) *
                C5422 +
            ((C3526 + C3525) * C32552 + (C3524 + C3523) * C31540 +
             (C3522 + C3521) * C32866 + (C3520 + C3519) * C31559) *
                C5421) *
               C32603 * C470) *
              C473)) /
            (p * q * std::sqrt(p + q));
    d2ee[116] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C3484 * C119 + C32886 * C126 + C3485 * C352 + C32731 * C367) *
                C2756 +
            (C3484 * C127 + C32886 * C140 + C3485 * C366 + C32731 * C382) *
                C2750 +
            (C3519 + C3520) * C2757 + (C3521 + C3522) * C2751 + C3535 * C2758 +
            C3536 * C2752 + C3537 * C2759 + C3538 * C32920) *
               C32633 * C584 -
           ((C4055 + C4056) * C32920 + (C4057 + C4058) * C2759 +
            (C4059 + C4060) * C2752 + (C4061 + C4062) * C2758 +
            (C4063 + C4064) * C2751 + (C4065 + C4066) * C2757 +
            (C3485 * C369 + C32731 * C383 + C3484 * C366 + C32886 * C382) *
                C2750 +
            (C3485 * C353 + C32731 * C368 + C3484 * C352 + C32886 * C367) *
                C2756) *
               C32633 * C585) *
              C470 +
          (((C3484 * C696 + C32886 * C701 + C3485 * C1153 + C32731 * C1165) *
                C2756 +
            (C3484 * C702 + C32886 * C711 + C3485 * C1166 + C32731 * C1180) *
                C2750 +
            (C3484 * C697 + C32886 * C703 + C3485 * C1154 + C32731 * C1167) *
                C2757 +
            (C3484 * C704 + C32886 * C712 + C3485 * C1168 + C32731 * C1181) *
                C2751 +
            (C3484 * C698 + C32886 * C705 + C3485 * C1155 + C32731 * C1169) *
                C2758 +
            (C3484 * C706 + C32886 * C713 + C3485 * C1170 + C32731 * C1182) *
                C2752 +
            (C3484 * C699 + C32886 * C707 + C3485 * C2268 + C32731 * C2269) *
                C2759 +
            (C3484 * C708 + C32886 * C714 + C3485 * C2270 + C32731 * C2271) *
                C32920) *
               C32633 * C585 -
           ((C3889 + C3890) * C32920 + (C3891 + C3892) * C2759 +
            (C3893 + C3894) * C2752 + (C3895 + C3896) * C2758 +
            (C3897 + C3898) * C2751 + (C3899 + C3900) * C2757 +
            (C3485 * C702 + C32731 * C711 + C3484 * C261 + C32886 * C277) *
                C2750 +
            (C3485 * C696 + C32731 * C701 + C3484 * C247 + C32886 * C262) *
                C2756) *
               C32633 * C584) *
              C471) *
         C32577) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C3484 * C119 + C32886 * C126 + C3485 * C352 + C32731 * C367) *
                 C31559 +
             (C3484 * C127 + C32886 * C140 + C3485 * C366 + C32731 * C382) *
                 C32866 +
             (C3519 + C3520) * C31540 + (C3521 + C3522) * C32552) *
                C5421 +
            ((C4523 + C4524) * C31559 + (C4525 + C4526) * C32866 +
             C4879 * C31540 + C4880 * C32552) *
                C5422 +
            C8640 * C32916) *
               C584 -
           (((C9185 + C9186) * C32552 + (C9187 + C9188) * C31540 +
             (C9391 + C9392) * C32866 + (C9393 + C9394) * C31559) *
                C32916 +
            ((C5099 + C5100) * C32552 + (C5101 + C5102) * C31540 +
             (C5305 + C5306) * C32866 + (C5307 + C5308) * C31559) *
                C5422 +
            ((C4063 + C4064) * C32552 + (C4065 + C4066) * C31540 +
             (C3485 * C369 + C32731 * C383 + C3484 * C366 + C32886 * C382) *
                 C32866 +
             (C3485 * C353 + C32731 * C368 + C3484 * C352 + C32886 * C367) *
                 C31559) *
                C5421) *
               C585) *
              C470 +
          ((((C5308 + C5307) * C31559 + (C5306 + C5305) * C32866 +
             (C5102 + C5101) * C31540 + (C5100 + C5099) * C32552) *
                C5421 +
            ((C9394 + C9393) * C31559 + (C9392 + C9391) * C32866 +
             (C9188 + C9187) * C31540 + (C9186 + C9185) * C32552) *
                C5422 +
            ((C3484 * C1668 + C32886 * C1671 + C3485 * C6359 + C32731 * C6363) *
                 C31559 +
             (C3484 * C1672 + C32886 * C1677 + C3485 * C6364 + C32731 * C6368) *
                 C32866 +
             (C3484 * C1669 + C32886 * C1673 + C3485 * C7211 + C32731 * C7212) *
                 C31540 +
             (C3484 * C1674 + C32886 * C1678 + C3485 * C7213 + C32731 * C7214) *
                 C32552) *
                C32916) *
               C585 -
           (((C8630 + C8631) * C32552 + (C8632 + C8633) * C31540 +
             (C8634 + C8635) * C32866 + (C8636 + C8637) * C31559) *
                C32916 +
            (C8981 * C32552 + C8982 * C31540 + (C4535 + C4536) * C32866 +
             (C4537 + C4538) * C31559) *
                C5422 +
            (C4883 * C32552 + C4884 * C31540 + (C4526 + C4525) * C32866 +
             (C4524 + C4523) * C31559) *
                C5421) *
               C584) *
              C471) *
         C32577) /
            (p * q * std::sqrt(p + q));
    d2ee[117] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C3484 * C119 + C32886 * C126 + C3485 * C352 + C32731 * C367) *
               C2756 +
           (C3484 * C127 + C32886 * C140 + C3485 * C366 + C32731 * C382) *
               C2750 +
           (C3519 + C3520) * C2757 + (C3521 + C3522) * C2751 + C3535 * C2758 +
           C3536 * C2752 + C3537 * C2759 + C3538 * C32920) *
              C32633 * C32603 * C239 -
          ((C3485 * C708 + C32731 * C714 + C3484 * C255 + C32886 * C274) *
               C32920 +
           (C3485 * C699 + C32731 * C707 + C3484 * C244 + C32886 * C256) *
               C2759 +
           (C3485 * C706 + C32731 * C713 + C3484 * C257 + C32886 * C275) *
               C2752 +
           (C3485 * C698 + C32731 * C705 + C3484 * C245 + C32886 * C258) *
               C2758 +
           (C3485 * C704 + C32731 * C712 + C3484 * C259 + C32886 * C276) *
               C2751 +
           (C3485 * C697 + C32731 * C703 + C3484 * C246 + C32886 * C260) *
               C2757 +
           (C3485 * C702 + C32731 * C711 + C3484 * C261 + C32886 * C277) *
               C2750 +
           (C3485 * C696 + C32731 * C701 + C3484 * C247 + C32886 * C262) *
               C2756) *
              C32633 * C32603 * C240 +
          ((C3484 * C248 + C32886 * C263 + C3485 * C1152 + C32731 * C1164) *
               C2756 +
           (C3484 * C264 + C32886 * C278 + C3485 * C1163 + C32731 * C1179) *
               C2750 +
           (C3484 * C249 + C32886 * C265 + C3485 * C1151 + C32731 * C1162) *
               C2757 +
           (C3484 * C266 + C32886 * C279 + C3485 * C1161 + C32731 * C1178) *
               C2751 +
           (C3484 * C250 + C32886 * C267 + C3485 * C1150 + C32731 * C1160) *
               C2758 +
           (C3484 * C268 + C32886 * C280 + C3485 * C1159 + C32731 * C1177) *
               C2752 +
           (C3484 * C251 + C32886 * C269 + C3485 * C1494 + C32731 * C1495) *
               C2759 +
           (C3484 * C270 + C32886 * C281 + C3485 * C1496 + C32731 * C1497) *
               C32920) *
              C32633 * C32603 * C241) *
         C32577) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C3484 * C119 + C32886 * C126 + C3485 * C352 + C32731 * C367) *
               C2756 +
           (C3484 * C127 + C32886 * C140 + C3485 * C366 + C32731 * C382) *
               C2750 +
           (C3519 + C3520) * C2757 + (C3521 + C3522) * C2751 + C3535 * C2758 +
           C3536 * C2752 + C3537 * C2759 + C3538 * C32920) *
              C32633 * C32603 * C32589 * C110 -
          ((C3531 + C3532) * C32920 + (C3533 + C3534) * C2759 +
           (C3530 + C3529) * C2752 + (C3528 + C3527) * C2758 +
           (C3526 + C3525) * C2751 + (C3524 + C3523) * C2757 +
           (C3522 + C3521) * C2750 + (C3520 + C3519) * C2756) *
              C32633 * C32603 * C32589 * C111 +
          (C3535 * C2756 + C3536 * C2750 + C3537 * C2757 + C3538 * C2751 +
           (C3534 + C3533) * C2758 + (C3532 + C3531) * C2752 +
           (C3484 * C124 + C32886 * C137 + C3485 * C586 + C32731 * C587) *
               C2759 +
           (C3484 * C136 + C32886 * C145 + C3485 * C588 + C32731 * C589) *
               C32920) *
              C32633 * C32603 * C32589 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C3484 * C119 + C32886 * C126 + C3485 * C352 + C32731 * C367) *
               C2756 +
           (C3484 * C127 + C32886 * C140 + C3485 * C366 + C32731 * C382) *
               C2750 +
           (C3519 + C3520) * C2757 + (C3521 + C3522) * C2751 + C3535 * C2758 +
           C3536 * C2752 + C3537 * C2759 + C3538 * C32920) *
              C32633 * C345 -
          ((C3485 * C375 + C32731 * C386 + C3484 * C360 + C32886 * C379) *
               C32920 +
           (C3485 * C356 + C32731 * C374 + C3484 * C349 + C32886 * C361) *
               C2759 +
           (C3485 * C373 + C32731 * C385 + C3484 * C362 + C32886 * C380) *
               C2752 +
           (C3485 * C355 + C32731 * C372 + C3484 * C350 + C32886 * C363) *
               C2758 +
           (C3485 * C371 + C32731 * C384 + C3484 * C364 + C32886 * C381) *
               C2751 +
           (C3485 * C354 + C32731 * C370 + C3484 * C351 + C32886 * C365) *
               C2757 +
           (C3485 * C369 + C32731 * C383 + C3484 * C366 + C32886 * C382) *
               C2750 +
           (C3485 * C353 + C32731 * C368 + C3484 * C352 + C32886 * C367) *
               C2756) *
              C32633 * C346 +
          ((C3484 * C353 + C32886 * C368 + C3485 * C2100 + C32731 * C2109) *
               C2756 +
           (C3484 * C369 + C32886 * C383 + C3485 * C2108 + C32731 * C2118) *
               C2750 +
           (C3484 * C354 + C32886 * C370 + C3485 * C2099 + C32731 * C2107) *
               C2757 +
           (C3484 * C371 + C32886 * C384 + C3485 * C2106 + C32731 * C2117) *
               C2751 +
           (C3484 * C355 + C32886 * C372 + C3485 * C2098 + C32731 * C2105) *
               C2758 +
           (C3484 * C373 + C32886 * C385 + C3485 * C2104 + C32731 * C2116) *
               C2752 +
           (C3484 * C356 + C32886 * C374 + C3485 * C2454 + C32731 * C2455) *
               C2759 +
           (C3484 * C375 + C32886 * C386 + C3485 * C2456 + C32731 * C2457) *
               C32920) *
              C32633 * C347) *
         C32589 * C32577) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C3484 * C119 + C32886 * C126 + C3485 * C352 + C32731 * C367) *
                C31559 +
            (C3484 * C127 + C32886 * C140 + C3485 * C366 + C32731 * C382) *
                C32866 +
            (C3519 + C3520) * C31540 + (C3521 + C3522) * C32552) *
               C5421 +
           ((C4523 + C4524) * C31559 + (C4525 + C4526) * C32866 +
            C4879 * C31540 + C4880 * C32552) *
               C5422 +
           ((C4538 + C4537) * C31559 + (C4536 + C4535) * C32866 +
            (C4534 + C4533) * C31540 + (C4532 + C4531) * C32552) *
               C32916) *
              C32603 * C32589 * C110 -
          (((C4527 + C4528) * C32552 + (C4529 + C4530) * C31540 +
            (C4531 + C4532) * C32866 + (C4533 + C4534) * C31559) *
               C32916 +
           (C4881 * C32552 + C4882 * C31540 + C4883 * C32866 + C4884 * C31559) *
               C5422 +
           ((C3526 + C3525) * C32552 + (C3524 + C3523) * C31540 +
            (C3522 + C3521) * C32866 + (C3520 + C3519) * C31559) *
               C5421) *
              C32603 * C32589 * C111 +
          ((C3535 * C31559 + C3536 * C32866 + C3537 * C31540 + C3538 * C32552) *
               C5421 +
           (C4343 * C31559 + C4344 * C32866 + (C3892 + C3891) * C31540 +
            (C3890 + C3889) * C32552) *
               C5422 +
           ((C4530 + C4529) * C31559 + (C4528 + C4527) * C32866 +
            (C3484 * C251 + C32886 * C269 + C3485 * C1494 + C32731 * C1495) *
                C31540 +
            (C3484 * C270 + C32886 * C281 + C3485 * C1496 + C32731 * C1497) *
                C32552) *
               C32916) *
              C32603 * C32589 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C3484 * C119 + C32886 * C126 + C3485 * C352 + C32731 * C367) *
                C31559 +
            (C3484 * C127 + C32886 * C140 + C3485 * C366 + C32731 * C382) *
                C32866 +
            (C3519 + C3520) * C31540 + (C3521 + C3522) * C32552) *
               C5421 +
           ((C4523 + C4524) * C31559 + (C4525 + C4526) * C32866 +
            C4879 * C31540 + C4880 * C32552) *
               C5422 +
           C8640 * C32916) *
              C32603 * C239 -
          (((C8630 + C8631) * C32552 + (C8632 + C8633) * C31540 +
            (C8634 + C8635) * C32866 + (C8636 + C8637) * C31559) *
               C32916 +
           ((C4531 + C4532) * C32552 + (C4533 + C4534) * C31540 +
            (C4535 + C4536) * C32866 + (C4537 + C4538) * C31559) *
               C5422 +
           (C4883 * C32552 + C4884 * C31540 + (C4526 + C4525) * C32866 +
            (C4524 + C4523) * C31559) *
               C5421) *
              C32603 * C240 +
          (C8640 * C5421 +
           ((C8637 + C8636) * C31559 + (C8635 + C8634) * C32866 +
            (C8633 + C8632) * C31540 + (C8631 + C8630) * C32552) *
               C5422 +
           ((C3484 * C966 + C32886 * C975 + C3485 * C6358 + C32731 * C6362) *
                C31559 +
            (C3484 * C976 + C32886 * C984 + C3485 * C6361 + C32731 * C6367) *
                C32866 +
            (C3484 * C967 + C32886 * C977 + C3485 * C6552 + C32731 * C6553) *
                C31540 +
            (C3484 * C978 + C32886 * C985 + C3485 * C6554 + C32731 * C6555) *
                C32552) *
               C32916) *
              C32603 * C241) *
         C32577) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C3484 * C119 + C32886 * C126 + C3485 * C352 + C32731 * C367) *
                C31559 +
            (C3484 * C127 + C32886 * C140 + C3485 * C366 + C32731 * C382) *
                C32866 +
            (C3519 + C3520) * C31540 + (C3521 + C3522) * C32552) *
               C5421 +
           ((C4523 + C4524) * C31559 + (C4525 + C4526) * C32866 +
            C4879 * C31540 + C4880 * C32552) *
               C5422 +
           C8640 * C32916) *
              C345 -
          (((C3485 * C1174 + C32731 * C1184 + C3484 * C1161 + C32886 * C1178) *
                C32552 +
            (C3485 * C1157 + C32731 * C1173 + C3484 * C1151 + C32886 * C1162) *
                C31540 +
            (C3485 * C1172 + C32731 * C1183 + C3484 * C1163 + C32886 * C1179) *
                C32866 +
            (C3485 * C1156 + C32731 * C1171 + C3484 * C1152 + C32886 * C1164) *
                C31559) *
               C32916 +
           ((C5099 + C5100) * C32552 + (C5101 + C5102) * C31540 +
            (C5305 + C5306) * C32866 + (C5307 + C5308) * C31559) *
               C5422 +
           ((C4063 + C4064) * C32552 + (C4065 + C4066) * C31540 +
            (C3485 * C369 + C32731 * C383 + C3484 * C366 + C32886 * C382) *
                C32866 +
            (C3485 * C353 + C32731 * C368 + C3484 * C352 + C32886 * C367) *
                C31559) *
               C5421) *
              C346 +
          (((C3484 * C353 + C32886 * C368 + C3485 * C2100 + C32731 * C2109) *
                C31559 +
            (C3484 * C369 + C32886 * C383 + C3485 * C2108 + C32731 * C2118) *
                C32866 +
            (C3484 * C354 + C32886 * C370 + C3485 * C2099 + C32731 * C2107) *
                C31540 +
            (C3484 * C371 + C32886 * C384 + C3485 * C2106 + C32731 * C2117) *
                C32552) *
               C5421 +
           ((C3484 * C1153 + C32886 * C1165 + C3485 * C2640 + C32731 * C2643) *
                C31559 +
            (C3484 * C1166 + C32886 * C1180 + C3485 * C2644 + C32731 * C2649) *
                C32866 +
            (C3484 * C1154 + C32886 * C1167 + C3485 * C2641 + C32731 * C2645) *
                C31540 +
            (C3484 * C1168 + C32886 * C1181 + C3485 * C2646 + C32731 * C2650) *
                C32552) *
               C5422 +
           ((C3484 * C1156 + C32886 * C1171 + C3485 * C7053 + C32731 * C7057) *
                C31559 +
            (C3484 * C1172 + C32886 * C1183 + C3485 * C7056 + C32731 * C7062) *
                C32866 +
            (C3484 * C1157 + C32886 * C1173 + C3485 * C7379 + C32731 * C7380) *
                C31540 +
            (C3484 * C1174 + C32886 * C1184 + C3485 * C7381 + C32731 * C7382) *
                C32552) *
               C32916) *
              C347) *
         C32589 * C32577) /
            (p * q * std::sqrt(p + q));
    d2ee[118] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C3484 * C119 + C32886 * C126 + C3485 * C352 + C32731 * C367) *
                C2756 +
            (C3484 * C127 + C32886 * C140 + C3485 * C366 + C32731 * C382) *
                C2750 +
            (C3519 + C3520) * C2757 + (C3521 + C3522) * C2751 + C3535 * C2758 +
            C3536 * C2752 + C3537 * C2759 + C3538 * C32920) *
               C32633 * C584 -
           ((C4055 + C4056) * C32920 + (C4057 + C4058) * C2759 +
            (C4059 + C4060) * C2752 + (C4061 + C4062) * C2758 +
            (C4063 + C4064) * C2751 + (C4065 + C4066) * C2757 +
            (C3485 * C369 + C32731 * C383 + C3484 * C366 + C32886 * C382) *
                C2750 +
            (C3485 * C353 + C32731 * C368 + C3484 * C352 + C32886 * C367) *
                C2756) *
               C32633 * C585) *
              C32589 * C472 +
          (((C4066 + C4065) * C2756 + (C4064 + C4063) * C2750 +
            (C4062 + C4061) * C2757 + (C4060 + C4059) * C2751 +
            (C4058 + C4057) * C2758 + (C4056 + C4055) * C2752 +
            (C3484 * C348 + C32886 * C359 + C3485 * C357 + C32731 * C376) *
                C2759 +
            (C3484 * C358 + C32886 * C378 + C3485 * C377 + C32731 * C387) *
                C32920) *
               C32633 * C585 -
           ((C3531 + C3532) * C32920 + (C3533 + C3534) * C2759 +
            (C3530 + C3529) * C2752 + (C3528 + C3527) * C2758 +
            (C3526 + C3525) * C2751 + (C3524 + C3523) * C2757 +
            (C3522 + C3521) * C2750 + (C3520 + C3519) * C2756) *
               C32633 * C584) *
              C32589 * C473)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C3484 * C119 + C32886 * C126 + C3485 * C352 + C32731 * C367) *
                 C31559 +
             (C3484 * C127 + C32886 * C140 + C3485 * C366 + C32731 * C382) *
                 C32866 +
             (C3519 + C3520) * C31540 + (C3521 + C3522) * C32552) *
                C5421 +
            ((C4523 + C4524) * C31559 + (C4525 + C4526) * C32866 +
             C4879 * C31540 + C4880 * C32552) *
                C5422 +
            C8640 * C32916) *
               C584 -
           (((C9185 + C9186) * C32552 + (C9187 + C9188) * C31540 +
             (C3485 * C1172 + C32731 * C1183 + C3484 * C1163 + C32886 * C1179) *
                 C32866 +
             (C3485 * C1156 + C32731 * C1171 + C3484 * C1152 + C32886 * C1164) *
                 C31559) *
                C32916 +
            ((C5099 + C5100) * C32552 + (C5101 + C5102) * C31540 +
             (C5305 + C5306) * C32866 + (C5307 + C5308) * C31559) *
                C5422 +
            ((C4063 + C4064) * C32552 + (C4065 + C4066) * C31540 +
             (C3485 * C369 + C32731 * C383 + C3484 * C366 + C32886 * C382) *
                 C32866 +
             (C3485 * C353 + C32731 * C368 + C3484 * C352 + C32886 * C367) *
                 C31559) *
                C5421) *
               C585) *
              C32589 * C472 +
          ((((C4066 + C4065) * C31559 + (C4064 + C4063) * C32866 +
             (C4062 + C4061) * C31540 + (C4060 + C4059) * C32552) *
                C5421 +
            ((C5102 + C5101) * C31559 + (C5100 + C5099) * C32866 +
             (C5098 + C5097) * C31540 + (C5096 + C5095) * C32552) *
                C5422 +
            ((C9188 + C9187) * C31559 + (C9186 + C9185) * C32866 +
             (C3484 * C1150 + C32886 * C1160 + C3485 * C1158 + C32731 * C1175) *
                 C31540 +
             (C3484 * C1159 + C32886 * C1177 + C3485 * C1176 + C32731 * C1185) *
                 C32552) *
                C32916) *
               C585 -
           (((C4527 + C4528) * C32552 + (C4529 + C4530) * C31540 +
             C8981 * C32866 + C8982 * C31559) *
                C32916 +
            (C4881 * C32552 + C4882 * C31540 + C4883 * C32866 +
             C4884 * C31559) *
                C5422 +
            ((C3526 + C3525) * C32552 + (C3524 + C3523) * C31540 +
             (C3522 + C3521) * C32866 + (C3520 + C3519) * C31559) *
                C5421) *
               C584) *
              C32589 * C473)) /
            (p * q * std::sqrt(p + q));
    d2ee[119] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C3484 * C119 + C32886 * C126 + C3485 * C352 + C32731 * C367) *
               C2756 +
           (C3484 * C127 + C32886 * C140 + C3485 * C366 + C32731 * C382) *
               C2750 +
           (C3519 + C3520) * C2757 + (C3521 + C3522) * C2751 + C3535 * C2758 +
           C3536 * C2752 + C3537 * C2759 + C3538 * C32920) *
              C32633 * C32603 * C32589 * C110 -
          ((C3531 + C3532) * C32920 + (C3533 + C3534) * C2759 +
           (C3530 + C3529) * C2752 + (C3528 + C3527) * C2758 +
           (C3526 + C3525) * C2751 + (C3524 + C3523) * C2757 +
           (C3522 + C3521) * C2750 + (C3520 + C3519) * C2756) *
              C32633 * C32603 * C32589 * C111 +
          (C3535 * C2756 + C3536 * C2750 + C3537 * C2757 + C3538 * C2751 +
           (C3534 + C3533) * C2758 + (C3532 + C3531) * C2752 +
           (C3484 * C124 + C32886 * C137 + C3485 * C586 + C32731 * C587) *
               C2759 +
           (C3484 * C136 + C32886 * C145 + C3485 * C588 + C32731 * C589) *
               C32920) *
              C32633 * C32603 * C32589 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C3484 * C119 + C32886 * C126 + C3485 * C352 + C32731 * C367) *
               C2756 +
           (C3484 * C127 + C32886 * C140 + C3485 * C366 + C32731 * C382) *
               C2750 +
           (C3519 + C3520) * C2757 + (C3521 + C3522) * C2751 + C3535 * C2758 +
           C3536 * C2752 + C3537 * C2759 + C3538 * C32920) *
              C32633 * C32603 * C239 -
          ((C3485 * C708 + C32731 * C714 + C3484 * C255 + C32886 * C274) *
               C32920 +
           (C3485 * C699 + C32731 * C707 + C3484 * C244 + C32886 * C256) *
               C2759 +
           (C3485 * C706 + C32731 * C713 + C3484 * C257 + C32886 * C275) *
               C2752 +
           (C3485 * C698 + C32731 * C705 + C3484 * C245 + C32886 * C258) *
               C2758 +
           (C3485 * C704 + C32731 * C712 + C3484 * C259 + C32886 * C276) *
               C2751 +
           (C3485 * C697 + C32731 * C703 + C3484 * C246 + C32886 * C260) *
               C2757 +
           (C3485 * C702 + C32731 * C711 + C3484 * C261 + C32886 * C277) *
               C2750 +
           (C3485 * C696 + C32731 * C701 + C3484 * C247 + C32886 * C262) *
               C2756) *
              C32633 * C32603 * C240 +
          ((C3484 * C248 + C32886 * C263 + C3485 * C1152 + C32731 * C1164) *
               C2756 +
           (C3484 * C264 + C32886 * C278 + C3485 * C1163 + C32731 * C1179) *
               C2750 +
           (C3484 * C249 + C32886 * C265 + C3485 * C1151 + C32731 * C1162) *
               C2757 +
           (C3484 * C266 + C32886 * C279 + C3485 * C1161 + C32731 * C1178) *
               C2751 +
           (C3484 * C250 + C32886 * C267 + C3485 * C1150 + C32731 * C1160) *
               C2758 +
           (C3484 * C268 + C32886 * C280 + C3485 * C1159 + C32731 * C1177) *
               C2752 +
           (C3484 * C251 + C32886 * C269 + C3485 * C1494 + C32731 * C1495) *
               C2759 +
           (C3484 * C270 + C32886 * C281 + C3485 * C1496 + C32731 * C1497) *
               C32920) *
              C32633 * C32603 * C241) *
         C32577) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C3484 * C119 + C32886 * C126 + C3485 * C352 + C32731 * C367) *
                C31559 +
            (C3484 * C127 + C32886 * C140 + C3485 * C366 + C32731 * C382) *
                C32866 +
            (C3519 + C3520) * C31540 + (C3521 + C3522) * C32552) *
               C5421 +
           ((C4523 + C4524) * C31559 + (C4525 + C4526) * C32866 +
            C4879 * C31540 + C4880 * C32552) *
               C5422 +
           ((C4538 + C4537) * C31559 + (C4536 + C4535) * C32866 +
            (C4534 + C4533) * C31540 + (C4532 + C4531) * C32552) *
               C32916) *
              C32603 * C32589 * C110 -
          (((C4527 + C4528) * C32552 + (C4529 + C4530) * C31540 +
            (C4531 + C4532) * C32866 + (C4533 + C4534) * C31559) *
               C32916 +
           (C4881 * C32552 + C4882 * C31540 + C4883 * C32866 + C4884 * C31559) *
               C5422 +
           ((C3526 + C3525) * C32552 + (C3524 + C3523) * C31540 +
            (C3522 + C3521) * C32866 + (C3520 + C3519) * C31559) *
               C5421) *
              C32603 * C32589 * C111 +
          ((C3535 * C31559 + C3536 * C32866 + C3537 * C31540 + C3538 * C32552) *
               C5421 +
           (C4343 * C31559 + C4344 * C32866 + (C3892 + C3891) * C31540 +
            (C3890 + C3889) * C32552) *
               C5422 +
           ((C4530 + C4529) * C31559 + (C4528 + C4527) * C32866 +
            (C3484 * C251 + C32886 * C269 + C3485 * C1494 + C32731 * C1495) *
                C31540 +
            (C3484 * C270 + C32886 * C281 + C3485 * C1496 + C32731 * C1497) *
                C32552) *
               C32916) *
              C32603 * C32589 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C3484 * C119 + C32886 * C126 + C3485 * C352 + C32731 * C367) *
                C31559 +
            (C3484 * C127 + C32886 * C140 + C3485 * C366 + C32731 * C382) *
                C32866 +
            (C3519 + C3520) * C31540 + (C3521 + C3522) * C32552) *
               C5421 +
           ((C4523 + C4524) * C31559 + (C4525 + C4526) * C32866 +
            C4879 * C31540 + C4880 * C32552) *
               C5422 +
           C8640 * C32916) *
              C32603 * C239 -
          (((C8630 + C8631) * C32552 + (C8632 + C8633) * C31540 +
            (C8634 + C8635) * C32866 + (C8636 + C8637) * C31559) *
               C32916 +
           ((C4531 + C4532) * C32552 + (C4533 + C4534) * C31540 +
            (C4535 + C4536) * C32866 + (C4537 + C4538) * C31559) *
               C5422 +
           (C4883 * C32552 + C4884 * C31540 + (C4526 + C4525) * C32866 +
            (C4524 + C4523) * C31559) *
               C5421) *
              C32603 * C240 +
          (C8640 * C5421 +
           ((C8637 + C8636) * C31559 + (C8635 + C8634) * C32866 +
            (C8633 + C8632) * C31540 + (C8631 + C8630) * C32552) *
               C5422 +
           ((C3484 * C966 + C32886 * C975 + C3485 * C6358 + C32731 * C6362) *
                C31559 +
            (C3484 * C976 + C32886 * C984 + C3485 * C6361 + C32731 * C6367) *
                C32866 +
            (C3484 * C967 + C32886 * C977 + C3485 * C6552 + C32731 * C6553) *
                C31540 +
            (C3484 * C978 + C32886 * C985 + C3485 * C6554 + C32731 * C6555) *
                C32552) *
               C32916) *
              C32603 * C241) *
         C32577) /
            (p * q * std::sqrt(p + q));
    d2ee[120] += (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
                  ((((C113 * C119 + C32644 * C126) * C114 +
                     (C113 * C127 + C32644 * C140) * C102 + C168 * C115 +
                     C169 * C103 + C170 * C116 + C171 * C104 + C172 * C117 +
                     C173 * C105 + C174 * C118 + C175 * C106) *
                        C32633 * C32603 * C470 -
                    (C495 * C106 + C496 * C118 + C497 * C105 + C498 * C117 +
                     C499 * C104 + C500 * C116 + C501 * C103 + C502 * C115 +
                     (C113 * C261 + C32644 * C277) * C102 +
                     (C113 * C247 + C32644 * C262) * C114) *
                        C32633 * C32603 * C471) *
                       C472 +
                   ((C502 * C114 + C501 * C102 + C500 * C115 + C499 * C103 +
                     C498 * C116 + C497 * C104 + C496 * C117 + C495 * C105 +
                     (C113 * C474 + C32644 * C475) * C118 +
                     (C113 * C476 + C32644 * C477) * C106) *
                        C32633 * C32603 * C471 -
                    (C176 * C106 + C177 * C118 + C175 * C105 + C174 * C117 +
                     C173 * C104 + C172 * C116 + C171 * C103 + C170 * C115 +
                     C169 * C102 + C168 * C114) *
                        C32633 * C32603 * C470) *
                       C473)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
                  (((((C113 * C119 + C32644 * C126) * C832 +
                      (C113 * C127 + C32644 * C140) * C826 + C168 * C833 +
                      C169 * C827 + C170 * C834 + C171 * C32905) *
                         C32951 +
                     (C1026 + C1027 + C992 + C993 + C994 + C995) * C32939 +
                     C1040 * C32916) *
                        C32603 * C470 -
                    ((C1030 + C1031 + C1032 + C1033 + C1034 + C1035) * C32916 +
                     (C1003 + C1002 + C1001 + C1000 + C1029 + C1028) * C32939 +
                     (C995 + C994 + C993 + C992 + C1027 + C1026) * C32951) *
                        C32603 * C471) *
                       C472 +
                   (((C1337 + C1338 + C1339 + C1340 + C1341 + C1342) * C32951 +
                     (C1343 + C1344 + C1345 + C1346 + C1347 + C1348) * C32939 +
                     (C1023 * C832 + C1022 * C826 + C1021 * C833 +
                      C1020 * C827 + (C113 * C1332 + C32644 * C1333) * C834 +
                      (C113 * C1334 + C32644 * C1335) * C32905) *
                         C32916) *
                        C32603 * C471 -
                    ((C1348 + C1347 + C1346 + C1345 + C1344 + C1343) * C32916 +
                     (C1342 + C1341 + C1340 + C1339 + C1338 + C1337) * C32939 +
                     (C173 * C32905 + C172 * C834 + C171 * C827 + C170 * C833 +
                      C169 * C826 + C168 * C832) *
                         C32951) *
                        C32603 * C470) *
                       C473)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
                  (((((C113 * C119 + C32644 * C126) * C5424 +
                      (C113 * C127 + C32644 * C140) * C32948 + C168 * C5425 +
                      C169 * C32935 + C170 * C5426 + C171 * C32905) *
                         C5421 +
                     (C5538 + C5539 + C5540 + C5541 + C5542 + C5543) * C5422 +
                     C5560 * C32916) *
                        C32603 * C470 -
                    ((C5550 + C5551 + C5552 + C5553 + C5554 + C5555) * C32916 +
                     (C5549 + C5548 + C5547 + C5546 + C5545 + C5544) * C5422 +
                     (C5543 + C5542 + C5541 + C5540 + C5539 + C5538) * C5421) *
                        C32603 * C471) *
                       C472 +
                   (((C5817 + C5818 + C5819 + C5820 + C5821 + C5822) * C5421 +
                     (C5823 + C5824 + C5825 + C5826 + C5827 + C5828) * C5422 +
                     (C1023 * C5424 + C1022 * C32948 + C1021 * C5425 +
                      C1020 * C32935 + (C113 * C1332 + C32644 * C1333) * C5426 +
                      (C113 * C1334 + C32644 * C1335) * C32905) *
                         C32916) *
                        C32603 * C471 -
                    ((C5828 + C5827 + C5826 + C5825 + C5824 + C5823) * C32916 +
                     (C5822 + C5821 + C5820 + C5819 + C5818 + C5817) * C5422 +
                     (C173 * C32905 + C172 * C5426 + C171 * C32935 +
                      C170 * C5425 + C169 * C32948 + C168 * C5424) *
                         C5421) *
                        C32603 * C470) *
                       C473)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
                  (((((C113 * C119 + C32644 * C126) * C6200 +
                      (C113 * C127 + C32644 * C140) * C32542) *
                         C6195 +
                     (C6272 + C6273) * C6196 + C6286 * C6197 + C6287 * C6198 +
                     C6296 * C6199) *
                        C32603 * C470 -
                    ((C6294 + C6295) * C6199 + (C6293 + C6292) * C6198 +
                     (C6277 + C6276) * C6197 + (C6275 + C6274) * C6196 +
                     (C6273 + C6272) * C6195) *
                        C32603 * C471) *
                       C472 +
                   (((C6457 + C6458) * C6195 + (C6459 + C6460) * C6196 +
                     (C6461 + C6462) * C6197 + (C6469 + C6470) * C6198 +
                     ((C113 * C6452 + C32644 * C6453) * C6200 +
                      (C113 * C6454 + C32644 * C6455) * C32542) *
                         C6199) *
                        C32603 * C471 -
                    ((C6470 + C6469) * C6199 + (C6462 + C6461) * C6198 +
                     (C6460 + C6459) * C6197 + (C6458 + C6457) * C6196 +
                     (C169 * C32542 + C168 * C6200) * C6195) *
                        C32603 * C470) *
                       C473)) /
                     (p * q * std::sqrt(p + q));
    d2ee[121] += (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
                  ((((C113 * C119 + C32644 * C126) * C114 +
                     (C113 * C127 + C32644 * C140) * C102 + C168 * C115 +
                     C169 * C103 + C170 * C116 + C171 * C104 + C172 * C117 +
                     C173 * C105 + C174 * C118 + C175 * C106) *
                        C32633 * C584 -
                    (C607 * C106 + C608 * C118 + C609 * C105 + C610 * C117 +
                     C611 * C104 + C612 * C116 + C613 * C103 + C614 * C115 +
                     (C113 * C366 + C32644 * C382) * C102 +
                     (C113 * C352 + C32644 * C367) * C114) *
                        C32633 * C585) *
                       C470 +
                   (((C113 * C696 + C32644 * C701) * C114 +
                     (C113 * C702 + C32644 * C711) * C102 +
                     (C113 * C697 + C32644 * C703) * C115 +
                     (C113 * C704 + C32644 * C712) * C103 +
                     (C113 * C698 + C32644 * C705) * C116 +
                     (C113 * C706 + C32644 * C713) * C104 +
                     (C113 * C699 + C32644 * C707) * C117 +
                     (C113 * C708 + C32644 * C714) * C105 +
                     (C113 * C700 + C32644 * C709) * C118 +
                     (C113 * C710 + C32644 * C715) * C106) *
                        C32633 * C585 -
                    (C495 * C106 + C496 * C118 + C497 * C105 + C498 * C117 +
                     C499 * C104 + C500 * C116 + C501 * C103 + C502 * C115 +
                     (C113 * C261 + C32644 * C277) * C102 +
                     (C113 * C247 + C32644 * C262) * C114) *
                        C32633 * C584) *
                       C471) *
                  C32577) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
                  (((((C113 * C119 + C32644 * C126) * C832 +
                      (C113 * C127 + C32644 * C140) * C826 + C168 * C833 +
                      C169 * C827 + C170 * C834 + C171 * C32905) *
                         C32951 +
                     (C1026 + C1027 + C992 + C993 + C994 + C995) * C32939 +
                     C1040 * C32916) *
                        C584 -
                    ((C1681 + C1682 + C1683 + C1684 + C1701 + C1702) * C32916 +
                     (C1689 + C1690 + C1691 + C1692 + C1703 + C1704) * C32939 +
                     (C611 * C32905 + C612 * C834 + C613 * C827 + C614 * C833 +
                      (C113 * C366 + C32644 * C382) * C826 +
                      (C113 * C352 + C32644 * C367) * C832) *
                         C32951) *
                        C585) *
                       C470 +
                   (((C1704 + C1703 + C1692 + C1691 + C1690 + C1689) * C32951 +
                     (C1702 + C1701 + C1684 + C1683 + C1682 + C1681) * C32939 +
                     ((C113 * C1668 + C32644 * C1671) * C832 +
                      (C113 * C1672 + C32644 * C1677) * C826 +
                      (C113 * C1669 + C32644 * C1673) * C833 +
                      (C113 * C1674 + C32644 * C1678) * C827 +
                      (C113 * C1670 + C32644 * C1675) * C834 +
                      (C113 * C1676 + C32644 * C1679) * C32905) *
                         C32916) *
                        C585 -
                    ((C1030 + C1031 + C1032 + C1033 + C1034 + C1035) * C32916 +
                     (C1003 + C1002 + C1001 + C1000 + C1029 + C1028) * C32939 +
                     (C995 + C994 + C993 + C992 + C1027 + C1026) * C32951) *
                        C584) *
                       C471) *
                  C32577) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
                  (((((C113 * C119 + C32644 * C126) * C5424 +
                      (C113 * C127 + C32644 * C140) * C32948 + C168 * C5425 +
                      C169 * C32935 + C170 * C5426 + C171 * C32905) *
                         C5421 +
                     (C5538 + C5539 + C5540 + C5541 + C5542 + C5543) * C5422 +
                     C5560 * C32916) *
                        C584 -
                    ((C6121 + C6122 + C6123 + C6124 + C6125 + C6126) * C32916 +
                     (C6127 + C6128 + C6129 + C6130 + C6131 + C6132) * C5422 +
                     (C611 * C32905 + C612 * C5426 + C613 * C32935 +
                      C614 * C5425 + (C113 * C366 + C32644 * C382) * C32948 +
                      (C113 * C352 + C32644 * C367) * C5424) *
                         C5421) *
                        C585) *
                       C470 +
                   (((C6132 + C6131 + C6130 + C6129 + C6128 + C6127) * C5421 +
                     (C6126 + C6125 + C6124 + C6123 + C6122 + C6121) * C5422 +
                     ((C113 * C1668 + C32644 * C1671) * C5424 +
                      (C113 * C1672 + C32644 * C1677) * C32948 +
                      (C113 * C1669 + C32644 * C1673) * C5425 +
                      (C113 * C1674 + C32644 * C1678) * C32935 +
                      (C113 * C1670 + C32644 * C1675) * C5426 +
                      (C113 * C1676 + C32644 * C1679) * C32905) *
                         C32916) *
                        C585 -
                    ((C5550 + C5551 + C5552 + C5553 + C5554 + C5555) * C32916 +
                     (C5549 + C5548 + C5547 + C5546 + C5545 + C5544) * C5422 +
                     (C5543 + C5542 + C5541 + C5540 + C5539 + C5538) * C5421) *
                        C584) *
                       C471) *
                  C32577) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
                  (((((C113 * C119 + C32644 * C126) * C6200 +
                      (C113 * C127 + C32644 * C140) * C32542) *
                         C6195 +
                     (C6272 + C6273) * C6196 + C6286 * C6197 + C6287 * C6198 +
                     C6296 * C6199) *
                        C584 -
                    ((C6659 + C6660) * C6199 + (C6661 + C6662) * C6198 +
                     (C6651 + C6652) * C6197 + (C6653 + C6654) * C6196 +
                     ((C113 * C366 + C32644 * C382) * C32542 +
                      (C113 * C352 + C32644 * C367) * C6200) *
                         C6195) *
                        C585) *
                       C470 +
                   (((C6654 + C6653) * C6195 + (C6652 + C6651) * C6196 +
                     (C6662 + C6661) * C6197 + (C6660 + C6659) * C6198 +
                     ((C113 * C6638 + C32644 * C6639) * C6200 +
                      (C113 * C6640 + C32644 * C6641) * C32542) *
                         C6199) *
                        C585 -
                    ((C6294 + C6295) * C6199 + (C6293 + C6292) * C6198 +
                     (C6277 + C6276) * C6197 + (C6275 + C6274) * C6196 +
                     (C6273 + C6272) * C6195) *
                        C584) *
                       C471) *
                  C32577) /
                     (p * q * std::sqrt(p + q));
    d2ee[122] += (-std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
                  (((C113 * C119 + C32644 * C126) * C114 +
                    (C113 * C127 + C32644 * C140) * C102 + C168 * C115 +
                    C169 * C103 + C170 * C116 + C171 * C104 + C172 * C117 +
                    C173 * C105 + C174 * C118 + C175 * C106) *
                       C32633 * C32603 * C239 -
                   ((C113 * C253 + C32644 * C273) * C106 +
                    (C113 * C243 + C32644 * C254) * C118 +
                    (C113 * C255 + C32644 * C274) * C105 +
                    (C113 * C244 + C32644 * C256) * C117 +
                    (C113 * C257 + C32644 * C275) * C104 +
                    (C113 * C245 + C32644 * C258) * C116 +
                    (C113 * C259 + C32644 * C276) * C103 +
                    (C113 * C246 + C32644 * C260) * C115 +
                    (C113 * C261 + C32644 * C277) * C102 +
                    (C113 * C247 + C32644 * C262) * C114) *
                       C32633 * C32603 * C240 +
                   ((C113 * C248 + C32644 * C263) * C114 +
                    (C113 * C264 + C32644 * C278) * C102 +
                    (C113 * C249 + C32644 * C265) * C115 +
                    (C113 * C266 + C32644 * C279) * C103 +
                    (C113 * C250 + C32644 * C267) * C116 +
                    (C113 * C268 + C32644 * C280) * C104 +
                    (C113 * C251 + C32644 * C269) * C117 +
                    (C113 * C270 + C32644 * C281) * C105 +
                    (C113 * C252 + C32644 * C271) * C118 +
                    (C113 * C272 + C32644 * C282) * C106) *
                       C32633 * C32603 * C241) *
                  C32577) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
                  (((C113 * C119 + C32644 * C126) * C114 +
                    (C113 * C127 + C32644 * C140) * C102 + C168 * C115 +
                    C169 * C103 + C170 * C116 + C171 * C104 + C172 * C117 +
                    C173 * C105 + C174 * C118 + C175 * C106) *
                       C32633 * C32603 * C32589 * C110 -
                   (C176 * C106 + C177 * C118 + C175 * C105 + C174 * C117 +
                    C173 * C104 + C172 * C116 + C171 * C103 + C170 * C115 +
                    C169 * C102 + C168 * C114) *
                       C32633 * C32603 * C32589 * C111 +
                   (C170 * C114 + C171 * C102 + C172 * C115 + C173 * C103 +
                    C174 * C116 + C175 * C104 + C177 * C117 + C176 * C105 +
                    (C113 * C125 + C32644 * C138) * C118 +
                    (C113 * C139 + C32644 * C146) * C106) *
                       C32633 * C32603 * C32589 * C112)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  (((C113 * C119 + C32644 * C126) * C114 +
                    (C113 * C127 + C32644 * C140) * C102 + C168 * C115 +
                    C169 * C103 + C170 * C116 + C171 * C104 + C172 * C117 +
                    C173 * C105 + C174 * C118 + C175 * C106) *
                       C32633 * C345 -
                   ((C113 * C358 + C32644 * C378) * C106 +
                    (C113 * C348 + C32644 * C359) * C118 +
                    (C113 * C360 + C32644 * C379) * C105 +
                    (C113 * C349 + C32644 * C361) * C117 +
                    (C113 * C362 + C32644 * C380) * C104 +
                    (C113 * C350 + C32644 * C363) * C116 +
                    (C113 * C364 + C32644 * C381) * C103 +
                    (C113 * C351 + C32644 * C365) * C115 +
                    (C113 * C366 + C32644 * C382) * C102 +
                    (C113 * C352 + C32644 * C367) * C114) *
                       C32633 * C346 +
                   ((C113 * C353 + C32644 * C368) * C114 +
                    (C113 * C369 + C32644 * C383) * C102 +
                    (C113 * C354 + C32644 * C370) * C115 +
                    (C113 * C371 + C32644 * C384) * C103 +
                    (C113 * C355 + C32644 * C372) * C116 +
                    (C113 * C373 + C32644 * C385) * C104 +
                    (C113 * C356 + C32644 * C374) * C117 +
                    (C113 * C375 + C32644 * C386) * C105 +
                    (C113 * C357 + C32644 * C376) * C118 +
                    (C113 * C377 + C32644 * C387) * C106) *
                       C32633 * C347) *
                  C32589 * C32577) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
                  ((((C113 * C119 + C32644 * C126) * C832 +
                     (C113 * C127 + C32644 * C140) * C826 + C168 * C833 +
                     C169 * C827 + C170 * C834 + C171 * C32905) *
                        C32951 +
                    ((C113 * C247 + C32644 * C262) * C832 +
                     (C113 * C261 + C32644 * C277) * C826 + C502 * C833 +
                     C501 * C827 + C500 * C834 + C499 * C32905) *
                        C32939 +
                    ((C113 * C248 + C32644 * C263) * C832 +
                     (C113 * C264 + C32644 * C278) * C826 + C848 * C833 +
                     C849 * C827 + C850 * C834 + C851 * C32905) *
                        C32916) *
                       C32603 * C32589 * C110 -
                   ((C852 * C32905 + C853 * C834 + C851 * C827 + C850 * C833 +
                     C849 * C826 + C848 * C832) *
                        C32916 +
                    (C497 * C32905 + C498 * C834 + C499 * C827 + C500 * C833 +
                     C501 * C826 + C502 * C832) *
                        C32939 +
                    (C173 * C32905 + C172 * C834 + C171 * C827 + C170 * C833 +
                     C169 * C826 + C168 * C832) *
                        C32951) *
                       C32603 * C32589 * C111 +
                   ((C170 * C832 + C171 * C826 + C172 * C833 + C173 * C827 +
                     C174 * C834 + C175 * C32905) *
                        C32951 +
                    (C500 * C832 + C499 * C826 + C498 * C833 + C497 * C827 +
                     C496 * C834 + C495 * C32905) *
                        C32939 +
                    (C850 * C832 + C851 * C826 + C853 * C833 + C852 * C827 +
                     (C113 * C252 + C32644 * C271) * C834 +
                     (C113 * C272 + C32644 * C282) * C32905) *
                        C32916) *
                       C32603 * C32589 * C112)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
                  ((((C113 * C119 + C32644 * C126) * C832 +
                     (C113 * C127 + C32644 * C140) * C826 + C168 * C833 +
                     C169 * C827 + C170 * C834 + C171 * C32905) *
                        C32951 +
                    (C1026 + C1027 + C992 + C993 + C994 + C995) * C32939 +
                    C1040 * C32916) *
                       C32603 * C239 -
                   ((C1030 + C1031 + C1032 + C1033 + C1034 + C1035) * C32916 +
                    (C1003 + C1002 + C1001 + C1000 + C1029 + C1028) * C32939 +
                    (C995 + C994 + C993 + C992 + C1027 + C1026) * C32951) *
                       C32603 * C240 +
                   (C1040 * C32951 +
                    (C1035 + C1034 + C1033 + C1032 + C1031 + C1030) * C32939 +
                    ((C113 * C966 + C32644 * C975) * C832 +
                     (C113 * C976 + C32644 * C984) * C826 +
                     (C113 * C967 + C32644 * C977) * C833 +
                     (C113 * C978 + C32644 * C985) * C827 +
                     (C113 * C968 + C32644 * C979) * C834 +
                     (C113 * C980 + C32644 * C986) * C32905) *
                        C32916) *
                       C32603 * C241) *
                  C32577) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  ((((C113 * C119 + C32644 * C126) * C832 +
                     (C113 * C127 + C32644 * C140) * C826 + C168 * C833 +
                     C169 * C827 + C170 * C834 + C171 * C32905) *
                        C32951 +
                    (C1026 + C1027 + C992 + C993 + C994 + C995) * C32939 +
                    C1040 * C32916) *
                       C345 -
                   (((C113 * C1159 + C32644 * C1177) * C32905 +
                     (C113 * C1150 + C32644 * C1160) * C834 +
                     (C113 * C1161 + C32644 * C1178) * C827 +
                     (C113 * C1151 + C32644 * C1162) * C833 +
                     (C113 * C1163 + C32644 * C1179) * C826 +
                     (C113 * C1152 + C32644 * C1164) * C832) *
                        C32916 +
                    ((C113 * C706 + C32644 * C713) * C32905 +
                     (C113 * C698 + C32644 * C705) * C834 +
                     (C113 * C704 + C32644 * C712) * C827 +
                     (C113 * C697 + C32644 * C703) * C833 +
                     (C113 * C702 + C32644 * C711) * C826 +
                     (C113 * C696 + C32644 * C701) * C832) *
                        C32939 +
                    (C611 * C32905 + C612 * C834 + C613 * C827 + C614 * C833 +
                     (C113 * C366 + C32644 * C382) * C826 +
                     (C113 * C352 + C32644 * C367) * C832) *
                        C32951) *
                       C346 +
                   (((C113 * C353 + C32644 * C368) * C832 +
                     (C113 * C369 + C32644 * C383) * C826 +
                     (C113 * C354 + C32644 * C370) * C833 +
                     (C113 * C371 + C32644 * C384) * C827 +
                     (C113 * C355 + C32644 * C372) * C834 +
                     (C113 * C373 + C32644 * C385) * C32905) *
                        C32951 +
                    ((C113 * C1153 + C32644 * C1165) * C832 +
                     (C113 * C1166 + C32644 * C1180) * C826 +
                     (C113 * C1154 + C32644 * C1167) * C833 +
                     (C113 * C1168 + C32644 * C1181) * C827 +
                     (C113 * C1155 + C32644 * C1169) * C834 +
                     (C113 * C1170 + C32644 * C1182) * C32905) *
                        C32939 +
                    ((C113 * C1156 + C32644 * C1171) * C832 +
                     (C113 * C1172 + C32644 * C1183) * C826 +
                     (C113 * C1157 + C32644 * C1173) * C833 +
                     (C113 * C1174 + C32644 * C1184) * C827 +
                     (C113 * C1158 + C32644 * C1175) * C834 +
                     (C113 * C1176 + C32644 * C1185) * C32905) *
                        C32916) *
                       C347) *
                  C32589 * C32577) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
                  ((((C113 * C119 + C32644 * C126) * C5424 +
                     (C113 * C127 + C32644 * C140) * C32948 + C168 * C5425 +
                     C169 * C32935 + C170 * C5426 + C171 * C32905) *
                        C5421 +
                    (C1016 * C5424 + C1017 * C32948 + C502 * C5425 +
                     C501 * C32935 + C500 * C5426 + C499 * C32905) *
                        C5422 +
                    (C1018 * C5424 + C1019 * C32948 + C848 * C5425 +
                     C849 * C32935 + C850 * C5426 + C851 * C32905) *
                        C32916) *
                       C32603 * C32589 * C110 -
                   ((C852 * C32905 + C853 * C5426 + C851 * C32935 +
                     C850 * C5425 + C849 * C32948 + C848 * C5424) *
                        C32916 +
                    (C497 * C32905 + C498 * C5426 + C499 * C32935 +
                     C500 * C5425 + C501 * C32948 + C502 * C5424) *
                        C5422 +
                    (C173 * C32905 + C172 * C5426 + C171 * C32935 +
                     C170 * C5425 + C169 * C32948 + C168 * C5424) *
                        C5421) *
                       C32603 * C32589 * C111 +
                   ((C170 * C5424 + C171 * C32948 + C172 * C5425 +
                     C173 * C32935 + C174 * C5426 + C175 * C32905) *
                        C5421 +
                    (C500 * C5424 + C499 * C32948 + C498 * C5425 +
                     C497 * C32935 + C496 * C5426 + C495 * C32905) *
                        C5422 +
                    (C850 * C5424 + C851 * C32948 + C853 * C5425 +
                     C852 * C32935 + (C113 * C252 + C32644 * C271) * C5426 +
                     (C113 * C272 + C32644 * C282) * C32905) *
                        C32916) *
                       C32603 * C32589 * C112)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
                  ((((C113 * C119 + C32644 * C126) * C5424 +
                     (C113 * C127 + C32644 * C140) * C32948 + C168 * C5425 +
                     C169 * C32935 + C170 * C5426 + C171 * C32905) *
                        C5421 +
                    (C5538 + C5539 + C5540 + C5541 + C5542 + C5543) * C5422 +
                    C5560 * C32916) *
                       C32603 * C239 -
                   ((C5550 + C5551 + C5552 + C5553 + C5554 + C5555) * C32916 +
                    (C5549 + C5548 + C5547 + C5546 + C5545 + C5544) * C5422 +
                    (C5543 + C5542 + C5541 + C5540 + C5539 + C5538) * C5421) *
                       C32603 * C240 +
                   (C5560 * C5421 +
                    (C5555 + C5554 + C5553 + C5552 + C5551 + C5550) * C5422 +
                    ((C113 * C966 + C32644 * C975) * C5424 +
                     (C113 * C976 + C32644 * C984) * C32948 +
                     (C113 * C967 + C32644 * C977) * C5425 +
                     (C113 * C978 + C32644 * C985) * C32935 +
                     (C113 * C968 + C32644 * C979) * C5426 +
                     (C113 * C980 + C32644 * C986) * C32905) *
                        C32916) *
                       C32603 * C241) *
                  C32577) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  ((((C113 * C119 + C32644 * C126) * C5424 +
                     (C113 * C127 + C32644 * C140) * C32948 + C168 * C5425 +
                     C169 * C32935 + C170 * C5426 + C171 * C32905) *
                        C5421 +
                    (C5538 + C5539 + C5540 + C5541 + C5542 + C5543) * C5422 +
                    C5560 * C32916) *
                       C345 -
                   ((C1515 * C32905 + C1516 * C5426 + C1517 * C32935 +
                     C1518 * C5425 + C1697 * C32948 + C1698 * C5424) *
                        C32916 +
                    (C1519 * C32905 + C1520 * C5426 + C1521 * C32935 +
                     C1522 * C5425 + C1699 * C32948 + C1700 * C5424) *
                        C5422 +
                    (C611 * C32905 + C612 * C5426 + C613 * C32935 +
                     C614 * C5425 + (C113 * C366 + C32644 * C382) * C32948 +
                     (C113 * C352 + C32644 * C367) * C5424) *
                        C5421) *
                       C346 +
                   (((C113 * C353 + C32644 * C368) * C5424 +
                     (C113 * C369 + C32644 * C383) * C32948 +
                     (C113 * C354 + C32644 * C370) * C5425 +
                     (C113 * C371 + C32644 * C384) * C32935 +
                     (C113 * C355 + C32644 * C372) * C5426 +
                     (C113 * C373 + C32644 * C385) * C32905) *
                        C5421 +
                    ((C113 * C1153 + C32644 * C1165) * C5424 +
                     (C113 * C1166 + C32644 * C1180) * C32948 +
                     (C113 * C1154 + C32644 * C1167) * C5425 +
                     (C113 * C1168 + C32644 * C1181) * C32935 +
                     (C113 * C1155 + C32644 * C1169) * C5426 +
                     (C113 * C1170 + C32644 * C1182) * C32905) *
                        C5422 +
                    ((C113 * C1156 + C32644 * C1171) * C5424 +
                     (C113 * C1172 + C32644 * C1183) * C32948 +
                     (C113 * C1157 + C32644 * C1173) * C5425 +
                     (C113 * C1174 + C32644 * C1184) * C32935 +
                     (C113 * C1158 + C32644 * C1175) * C5426 +
                     (C113 * C1176 + C32644 * C1185) * C32905) *
                        C32916) *
                       C347) *
                  C32589 * C32577) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
                  ((((C113 * C119 + C32644 * C126) * C6200 +
                     (C113 * C127 + C32644 * C140) * C32542) *
                        C6195 +
                    (C1016 * C6200 + C1017 * C32542) * C6196 +
                    (C1018 * C6200 + C1019 * C32542) * C6197 +
                    (C1025 * C6200 + C1024 * C32542) * C6198 +
                    ((C113 * C966 + C32644 * C975) * C6200 +
                     (C113 * C976 + C32644 * C984) * C32542) *
                        C6199) *
                       C32603 * C32589 * C110 -
                   (((C113 * C978 + C32644 * C985) * C32542 +
                     (C113 * C967 + C32644 * C977) * C6200) *
                        C6199 +
                    (C1022 * C32542 + C1023 * C6200) * C6198 +
                    (C849 * C32542 + C848 * C6200) * C6197 +
                    (C501 * C32542 + C502 * C6200) * C6196 +
                    (C169 * C32542 + C168 * C6200) * C6195) *
                       C32603 * C32589 * C111 +
                   ((C170 * C6200 + C171 * C32542) * C6195 +
                    (C500 * C6200 + C499 * C32542) * C6196 +
                    (C850 * C6200 + C851 * C32542) * C6197 +
                    (C1021 * C6200 + C1020 * C32542) * C6198 +
                    ((C113 * C968 + C32644 * C979) * C6200 +
                     (C113 * C980 + C32644 * C986) * C32542) *
                        C6199) *
                       C32603 * C32589 * C112)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
                  ((((C113 * C119 + C32644 * C126) * C6200 +
                     (C113 * C127 + C32644 * C140) * C32542) *
                        C6195 +
                    (C6272 + C6273) * C6196 + C6286 * C6197 + C6287 * C6198 +
                    C6296 * C6199) *
                       C32603 * C239 -
                   ((C6294 + C6295) * C6199 + (C6293 + C6292) * C6198 +
                    (C6277 + C6276) * C6197 + (C6275 + C6274) * C6196 +
                    (C6273 + C6272) * C6195) *
                       C32603 * C240 +
                   (C6286 * C6195 + C6287 * C6196 + C6296 * C6197 +
                    (C6295 + C6294) * C6198 +
                    ((C113 * C6264 + C32644 * C6267) * C6200 +
                     (C113 * C6268 + C32644 * C6270) * C32542) *
                        C6199) *
                       C32603 * C241) *
                  C32577) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  ((((C113 * C119 + C32644 * C126) * C6200 +
                     (C113 * C127 + C32644 * C140) * C32542) *
                        C6195 +
                    (C6272 + C6273) * C6196 + C6286 * C6197 + C6287 * C6198 +
                    C6296 * C6199) *
                       C345 -
                   (((C113 * C6361 + C32644 * C6367) * C32542 +
                     (C113 * C6358 + C32644 * C6362) * C6200) *
                        C6199 +
                    ((C113 * C1672 + C32644 * C1677) * C32542 +
                     (C113 * C1668 + C32644 * C1671) * C6200) *
                        C6198 +
                    (C1697 * C32542 + C1698 * C6200) * C6197 +
                    (C1699 * C32542 + C1700 * C6200) * C6196 +
                    ((C113 * C366 + C32644 * C382) * C32542 +
                     (C113 * C352 + C32644 * C367) * C6200) *
                        C6195) *
                       C346 +
                   (((C113 * C353 + C32644 * C368) * C6200 +
                     (C113 * C369 + C32644 * C383) * C32542) *
                        C6195 +
                    ((C113 * C1153 + C32644 * C1165) * C6200 +
                     (C113 * C1166 + C32644 * C1180) * C32542) *
                        C6196 +
                    ((C113 * C1156 + C32644 * C1171) * C6200 +
                     (C113 * C1172 + C32644 * C1183) * C32542) *
                        C6197 +
                    ((C113 * C6359 + C32644 * C6363) * C6200 +
                     (C113 * C6364 + C32644 * C6368) * C32542) *
                        C6198 +
                    ((C113 * C6360 + C32644 * C6365) * C6200 +
                     (C113 * C6366 + C32644 * C6369) * C32542) *
                        C6199) *
                       C347) *
                  C32589 * C32577) /
                     (p * q * std::sqrt(p + q));
    d2ee[123] += (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
                  ((((C113 * C119 + C32644 * C126) * C114 +
                     (C113 * C127 + C32644 * C140) * C102 + C168 * C115 +
                     C169 * C103 + C170 * C116 + C171 * C104 + C172 * C117 +
                     C173 * C105 + C174 * C118 + C175 * C106) *
                        C32633 * C584 -
                    (C607 * C106 + C608 * C118 + C609 * C105 + C610 * C117 +
                     C611 * C104 + C612 * C116 + C613 * C103 + C614 * C115 +
                     (C113 * C366 + C32644 * C382) * C102 +
                     (C113 * C352 + C32644 * C367) * C114) *
                        C32633 * C585) *
                       C32589 * C472 +
                   ((C614 * C114 + C613 * C102 + C612 * C115 + C611 * C103 +
                     C610 * C116 + C609 * C104 + C608 * C117 + C607 * C105 +
                     (C113 * C586 + C32644 * C587) * C118 +
                     (C113 * C588 + C32644 * C589) * C106) *
                        C32633 * C585 -
                    (C176 * C106 + C177 * C118 + C175 * C105 + C174 * C117 +
                     C173 * C104 + C172 * C116 + C171 * C103 + C170 * C115 +
                     C169 * C102 + C168 * C114) *
                        C32633 * C584) *
                       C32589 * C473)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
                  (((((C113 * C119 + C32644 * C126) * C832 +
                      (C113 * C127 + C32644 * C140) * C826 + C168 * C833 +
                      C169 * C827 + C170 * C834 + C171 * C32905) *
                         C32951 +
                     (C1026 + C1027 + C992 + C993 + C994 + C995) * C32939 +
                     C1040 * C32916) *
                        C584 -
                    ((C1515 * C32905 + C1516 * C834 + C1517 * C827 +
                      C1518 * C833 + (C113 * C1163 + C32644 * C1179) * C826 +
                      (C113 * C1152 + C32644 * C1164) * C832) *
                         C32916 +
                     (C1519 * C32905 + C1520 * C834 + C1521 * C827 +
                      C1522 * C833 + (C113 * C702 + C32644 * C711) * C826 +
                      (C113 * C696 + C32644 * C701) * C832) *
                         C32939 +
                     (C611 * C32905 + C612 * C834 + C613 * C827 + C614 * C833 +
                      (C113 * C366 + C32644 * C382) * C826 +
                      (C113 * C352 + C32644 * C367) * C832) *
                         C32951) *
                        C585) *
                       C32589 * C472 +
                   (((C614 * C832 + C613 * C826 + C612 * C833 + C611 * C827 +
                      C610 * C834 + C609 * C32905) *
                         C32951 +
                     (C1522 * C832 + C1521 * C826 + C1520 * C833 +
                      C1519 * C827 + (C113 * C699 + C32644 * C707) * C834 +
                      (C113 * C708 + C32644 * C714) * C32905) *
                         C32939 +
                     (C1518 * C832 + C1517 * C826 + C1516 * C833 +
                      C1515 * C827 + (C113 * C1494 + C32644 * C1495) * C834 +
                      (C113 * C1496 + C32644 * C1497) * C32905) *
                         C32916) *
                        C585 -
                    ((C1348 + C1347 + C1346 + C1345 + C1344 + C1343) * C32916 +
                     (C1342 + C1341 + C1340 + C1339 + C1338 + C1337) * C32939 +
                     (C173 * C32905 + C172 * C834 + C171 * C827 + C170 * C833 +
                      C169 * C826 + C168 * C832) *
                         C32951) *
                        C584) *
                       C32589 * C473)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
                  (((((C113 * C119 + C32644 * C126) * C5424 +
                      (C113 * C127 + C32644 * C140) * C32948 + C168 * C5425 +
                      C169 * C32935 + C170 * C5426 + C171 * C32905) *
                         C5421 +
                     (C5538 + C5539 + C5540 + C5541 + C5542 + C5543) * C5422 +
                     C5560 * C32916) *
                        C584 -
                    ((C1515 * C32905 + C1516 * C5426 + C1517 * C32935 +
                      C1518 * C5425 + C1697 * C32948 + C1698 * C5424) *
                         C32916 +
                     (C1519 * C32905 + C1520 * C5426 + C1521 * C32935 +
                      C1522 * C5425 + C1699 * C32948 + C1700 * C5424) *
                         C5422 +
                     (C611 * C32905 + C612 * C5426 + C613 * C32935 +
                      C614 * C5425 + (C113 * C366 + C32644 * C382) * C32948 +
                      (C113 * C352 + C32644 * C367) * C5424) *
                         C5421) *
                        C585) *
                       C32589 * C472 +
                   (((C614 * C5424 + C613 * C32948 + C612 * C5425 +
                      C611 * C32935 + C610 * C5426 + C609 * C32905) *
                         C5421 +
                     (C1522 * C5424 + C1521 * C32948 + C1520 * C5425 +
                      C1519 * C32935 + C3246 * C5426 + C3245 * C32905) *
                         C5422 +
                     (C1518 * C5424 + C1517 * C32948 + C1516 * C5425 +
                      C1515 * C32935 + (C113 * C1494 + C32644 * C1495) * C5426 +
                      (C113 * C1496 + C32644 * C1497) * C32905) *
                         C32916) *
                        C585 -
                    ((C5828 + C5827 + C5826 + C5825 + C5824 + C5823) * C32916 +
                     (C5822 + C5821 + C5820 + C5819 + C5818 + C5817) * C5422 +
                     (C173 * C32905 + C172 * C5426 + C171 * C32935 +
                      C170 * C5425 + C169 * C32948 + C168 * C5424) *
                         C5421) *
                        C584) *
                       C32589 * C473)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
                  (((((C113 * C119 + C32644 * C126) * C6200 +
                      (C113 * C127 + C32644 * C140) * C32542) *
                         C6195 +
                     (C6272 + C6273) * C6196 + C6286 * C6197 + C6287 * C6198 +
                     C6296 * C6199) *
                        C584 -
                    (((C113 * C6361 + C32644 * C6367) * C32542 +
                      (C113 * C6358 + C32644 * C6362) * C6200) *
                         C6199 +
                     ((C113 * C1672 + C32644 * C1677) * C32542 +
                      (C113 * C1668 + C32644 * C1671) * C6200) *
                         C6198 +
                     (C1697 * C32542 + C1698 * C6200) * C6197 +
                     (C1699 * C32542 + C1700 * C6200) * C6196 +
                     ((C113 * C366 + C32644 * C382) * C32542 +
                      (C113 * C352 + C32644 * C367) * C6200) *
                         C6195) *
                        C585) *
                       C32589 * C472 +
                   (((C614 * C6200 + C613 * C32542) * C6195 +
                     (C1522 * C6200 + C1521 * C32542) * C6196 +
                     (C1518 * C6200 + C1517 * C32542) * C6197 +
                     ((C113 * C1669 + C32644 * C1673) * C6200 +
                      (C113 * C1674 + C32644 * C1678) * C32542) *
                         C6198 +
                     ((C113 * C6552 + C32644 * C6553) * C6200 +
                      (C113 * C6554 + C32644 * C6555) * C32542) *
                         C6199) *
                        C585 -
                    ((C6470 + C6469) * C6199 + (C6462 + C6461) * C6198 +
                     (C6460 + C6459) * C6197 + (C6458 + C6457) * C6196 +
                     (C169 * C32542 + C168 * C6200) * C6195) *
                        C584) *
                       C32589 * C473)) /
                     (p * q * std::sqrt(p + q));
    d2ee[124] += (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
                  (((C113 * C119 + C32644 * C126) * C114 +
                    (C113 * C127 + C32644 * C140) * C102 + C168 * C115 +
                    C169 * C103 + C170 * C116 + C171 * C104 + C172 * C117 +
                    C173 * C105 + C174 * C118 + C175 * C106) *
                       C32633 * C32603 * C32589 * C110 -
                   (C176 * C106 + C177 * C118 + C175 * C105 + C174 * C117 +
                    C173 * C104 + C172 * C116 + C171 * C103 + C170 * C115 +
                    C169 * C102 + C168 * C114) *
                       C32633 * C32603 * C32589 * C111 +
                   (C170 * C114 + C171 * C102 + C172 * C115 + C173 * C103 +
                    C174 * C116 + C175 * C104 + C177 * C117 + C176 * C105 +
                    (C113 * C125 + C32644 * C138) * C118 +
                    (C113 * C139 + C32644 * C146) * C106) *
                       C32633 * C32603 * C32589 * C112)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
                  (((C113 * C119 + C32644 * C126) * C114 +
                    (C113 * C127 + C32644 * C140) * C102 + C168 * C115 +
                    C169 * C103 + C170 * C116 + C171 * C104 + C172 * C117 +
                    C173 * C105 + C174 * C118 + C175 * C106) *
                       C32633 * C32603 * C239 -
                   ((C113 * C253 + C32644 * C273) * C106 +
                    (C113 * C243 + C32644 * C254) * C118 +
                    (C113 * C255 + C32644 * C274) * C105 +
                    (C113 * C244 + C32644 * C256) * C117 +
                    (C113 * C257 + C32644 * C275) * C104 +
                    (C113 * C245 + C32644 * C258) * C116 +
                    (C113 * C259 + C32644 * C276) * C103 +
                    (C113 * C246 + C32644 * C260) * C115 +
                    (C113 * C261 + C32644 * C277) * C102 +
                    (C113 * C247 + C32644 * C262) * C114) *
                       C32633 * C32603 * C240 +
                   ((C113 * C248 + C32644 * C263) * C114 +
                    (C113 * C264 + C32644 * C278) * C102 +
                    (C113 * C249 + C32644 * C265) * C115 +
                    (C113 * C266 + C32644 * C279) * C103 +
                    (C113 * C250 + C32644 * C267) * C116 +
                    (C113 * C268 + C32644 * C280) * C104 +
                    (C113 * C251 + C32644 * C269) * C117 +
                    (C113 * C270 + C32644 * C281) * C105 +
                    (C113 * C252 + C32644 * C271) * C118 +
                    (C113 * C272 + C32644 * C282) * C106) *
                       C32633 * C32603 * C241) *
                  C32577) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
                  ((((C113 * C119 + C32644 * C126) * C832 +
                     (C113 * C127 + C32644 * C140) * C826 + C168 * C833 +
                     C169 * C827 + C170 * C834 + C171 * C32905) *
                        C32951 +
                    ((C113 * C247 + C32644 * C262) * C832 +
                     (C113 * C261 + C32644 * C277) * C826 + C502 * C833 +
                     C501 * C827 + C500 * C834 + C499 * C32905) *
                        C32939 +
                    ((C113 * C248 + C32644 * C263) * C832 +
                     (C113 * C264 + C32644 * C278) * C826 + C848 * C833 +
                     C849 * C827 + C850 * C834 + C851 * C32905) *
                        C32916) *
                       C32603 * C32589 * C110 -
                   ((C852 * C32905 + C853 * C834 + C851 * C827 + C850 * C833 +
                     C849 * C826 + C848 * C832) *
                        C32916 +
                    (C497 * C32905 + C498 * C834 + C499 * C827 + C500 * C833 +
                     C501 * C826 + C502 * C832) *
                        C32939 +
                    (C173 * C32905 + C172 * C834 + C171 * C827 + C170 * C833 +
                     C169 * C826 + C168 * C832) *
                        C32951) *
                       C32603 * C32589 * C111 +
                   ((C170 * C832 + C171 * C826 + C172 * C833 + C173 * C827 +
                     C174 * C834 + C175 * C32905) *
                        C32951 +
                    (C500 * C832 + C499 * C826 + C498 * C833 + C497 * C827 +
                     C496 * C834 + C495 * C32905) *
                        C32939 +
                    (C850 * C832 + C851 * C826 + C853 * C833 + C852 * C827 +
                     (C113 * C252 + C32644 * C271) * C834 +
                     (C113 * C272 + C32644 * C282) * C32905) *
                        C32916) *
                       C32603 * C32589 * C112)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
                  ((((C113 * C119 + C32644 * C126) * C832 +
                     (C113 * C127 + C32644 * C140) * C826 + C168 * C833 +
                     C169 * C827 + C170 * C834 + C171 * C32905) *
                        C32951 +
                    (C1026 + C1027 + C992 + C993 + C994 + C995) * C32939 +
                    C1040 * C32916) *
                       C32603 * C239 -
                   ((C1030 + C1031 + C1032 + C1033 + C1034 + C1035) * C32916 +
                    (C1003 + C1002 + C1001 + C1000 + C1029 + C1028) * C32939 +
                    (C995 + C994 + C993 + C992 + C1027 + C1026) * C32951) *
                       C32603 * C240 +
                   (C1040 * C32951 +
                    (C1035 + C1034 + C1033 + C1032 + C1031 + C1030) * C32939 +
                    ((C113 * C966 + C32644 * C975) * C832 +
                     (C113 * C976 + C32644 * C984) * C826 +
                     (C113 * C967 + C32644 * C977) * C833 +
                     (C113 * C978 + C32644 * C985) * C827 +
                     (C113 * C968 + C32644 * C979) * C834 +
                     (C113 * C980 + C32644 * C986) * C32905) *
                        C32916) *
                       C32603 * C241) *
                  C32577) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
                  ((((C113 * C119 + C32644 * C126) * C5424 +
                     (C113 * C127 + C32644 * C140) * C32948 + C168 * C5425 +
                     C169 * C32935 + C170 * C5426 + C171 * C32905) *
                        C5421 +
                    (C1016 * C5424 + C1017 * C32948 + C502 * C5425 +
                     C501 * C32935 + C500 * C5426 + C499 * C32905) *
                        C5422 +
                    (C1018 * C5424 + C1019 * C32948 + C848 * C5425 +
                     C849 * C32935 + C850 * C5426 + C851 * C32905) *
                        C32916) *
                       C32603 * C32589 * C110 -
                   ((C852 * C32905 + C853 * C5426 + C851 * C32935 +
                     C850 * C5425 + C849 * C32948 + C848 * C5424) *
                        C32916 +
                    (C497 * C32905 + C498 * C5426 + C499 * C32935 +
                     C500 * C5425 + C501 * C32948 + C502 * C5424) *
                        C5422 +
                    (C173 * C32905 + C172 * C5426 + C171 * C32935 +
                     C170 * C5425 + C169 * C32948 + C168 * C5424) *
                        C5421) *
                       C32603 * C32589 * C111 +
                   ((C170 * C5424 + C171 * C32948 + C172 * C5425 +
                     C173 * C32935 + C174 * C5426 + C175 * C32905) *
                        C5421 +
                    (C500 * C5424 + C499 * C32948 + C498 * C5425 +
                     C497 * C32935 + C496 * C5426 + C495 * C32905) *
                        C5422 +
                    (C850 * C5424 + C851 * C32948 + C853 * C5425 +
                     C852 * C32935 + (C113 * C252 + C32644 * C271) * C5426 +
                     (C113 * C272 + C32644 * C282) * C32905) *
                        C32916) *
                       C32603 * C32589 * C112)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
                  ((((C113 * C119 + C32644 * C126) * C5424 +
                     (C113 * C127 + C32644 * C140) * C32948 + C168 * C5425 +
                     C169 * C32935 + C170 * C5426 + C171 * C32905) *
                        C5421 +
                    (C5538 + C5539 + C5540 + C5541 + C5542 + C5543) * C5422 +
                    C5560 * C32916) *
                       C32603 * C239 -
                   ((C5550 + C5551 + C5552 + C5553 + C5554 + C5555) * C32916 +
                    (C5549 + C5548 + C5547 + C5546 + C5545 + C5544) * C5422 +
                    (C5543 + C5542 + C5541 + C5540 + C5539 + C5538) * C5421) *
                       C32603 * C240 +
                   (C5560 * C5421 +
                    (C5555 + C5554 + C5553 + C5552 + C5551 + C5550) * C5422 +
                    ((C113 * C966 + C32644 * C975) * C5424 +
                     (C113 * C976 + C32644 * C984) * C32948 +
                     (C113 * C967 + C32644 * C977) * C5425 +
                     (C113 * C978 + C32644 * C985) * C32935 +
                     (C113 * C968 + C32644 * C979) * C5426 +
                     (C113 * C980 + C32644 * C986) * C32905) *
                        C32916) *
                       C32603 * C241) *
                  C32577) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
                  ((((C113 * C119 + C32644 * C126) * C6200 +
                     (C113 * C127 + C32644 * C140) * C32542) *
                        C6195 +
                    (C1016 * C6200 + C1017 * C32542) * C6196 +
                    (C1018 * C6200 + C1019 * C32542) * C6197 +
                    (C1025 * C6200 + C1024 * C32542) * C6198 +
                    ((C113 * C966 + C32644 * C975) * C6200 +
                     (C113 * C976 + C32644 * C984) * C32542) *
                        C6199) *
                       C32603 * C32589 * C110 -
                   (((C113 * C978 + C32644 * C985) * C32542 +
                     (C113 * C967 + C32644 * C977) * C6200) *
                        C6199 +
                    (C1022 * C32542 + C1023 * C6200) * C6198 +
                    (C849 * C32542 + C848 * C6200) * C6197 +
                    (C501 * C32542 + C502 * C6200) * C6196 +
                    (C169 * C32542 + C168 * C6200) * C6195) *
                       C32603 * C32589 * C111 +
                   ((C170 * C6200 + C171 * C32542) * C6195 +
                    (C500 * C6200 + C499 * C32542) * C6196 +
                    (C850 * C6200 + C851 * C32542) * C6197 +
                    (C1021 * C6200 + C1020 * C32542) * C6198 +
                    ((C113 * C968 + C32644 * C979) * C6200 +
                     (C113 * C980 + C32644 * C986) * C32542) *
                        C6199) *
                       C32603 * C32589 * C112)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
                  ((((C113 * C119 + C32644 * C126) * C6200 +
                     (C113 * C127 + C32644 * C140) * C32542) *
                        C6195 +
                    (C6272 + C6273) * C6196 + C6286 * C6197 + C6287 * C6198 +
                    C6296 * C6199) *
                       C32603 * C239 -
                   ((C6294 + C6295) * C6199 + (C6293 + C6292) * C6198 +
                    (C6277 + C6276) * C6197 + (C6275 + C6274) * C6196 +
                    (C6273 + C6272) * C6195) *
                       C32603 * C240 +
                   (C6286 * C6195 + C6287 * C6196 + C6296 * C6197 +
                    (C6295 + C6294) * C6198 +
                    ((C113 * C6264 + C32644 * C6267) * C6200 +
                     (C113 * C6268 + C32644 * C6270) * C32542) *
                        C6199) *
                       C32603 * C241) *
                  C32577) /
                     (p * q * std::sqrt(p + q));
}
