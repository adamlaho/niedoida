/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

#include "gto_d2_kit/d2_ee_ddsd_AA_yx.hpp"
#include <cmath>
/*

*/
#pragma GCC optimize("O0")
namespace {
    const double Pi = M_PI;
}
#pragma GCC optimize("O0")

void second_derivative_ee_2202_11_21(const double ae,
                                     const double xA,
                                     const double yA,
                                     const double zA,
                                     const double be,
                                     const double xB,
                                     const double yB,
                                     const double zB,
                                     const double ce,
                                     const double xC,
                                     const double yC,
                                     const double zC,
                                     const double de,
                                     const double xD,
                                     const double yD,
                                     const double zD,
                                     const double* const bs,
                                     double* const d2ee)
{
    const double p = ae + be;
    const double q = ce + de;
    const double xP = (ae * xA + be * xB) / p;
    const double yP = (ae * yA + be * yB) / p;
    const double zP = (ae * zA + be * zB) / p;
    const double xQ = (ce * xC + de * xD) / q;
    const double yQ = (ce * yC + de * yD) / q;
    const double zQ = (ce * zC + de * zD) / q;
    const double C31516 = 0 * ae;
    const double C31515 = ae * be;
    const double C31514 = 0 * be;
    const double C31513 = 0 * be;
    const double C31512 = ae + be;
    const double C31511 = 0 * be;
    const double C31510 = xA - xB;
    const double C31571 = 0 * be;
    const double C31598 = 0 * be;
    const double C31597 = yA - yB;
    const double C31649 = 0 * ae;
    const double C31644 = 0 * be;
    const double C31643 = 0 * be;
    const double C31694 = 0 * be;
    const double C31758 = xP - xQ;
    const double C31757 = yP - yQ;
    const double C31756 = p + q;
    const double C31755 = p * q;
    const double C31765 = std::pow(ae, 2);
    const double C31763 = bs[3];
    const double C31773 = bs[4];
    const double C31782 = bs[5];
    const double C31796 = bs[6];
    const double C31818 = bs[7];
    const double C31927 = zP - zQ;
    const double C32090 = bs[2];
    const double C119 = bs[0];
    const double C32482 = ce + de;
    const double C32481 = ce * de;
    const double C32480 = xC - xD;
    const double C32494 = yC - yD;
    const double C32508 = zC - zD;
    const double C32549 = zA - zB;
    const double C31523 = C31516 / C31512;
    const double C31520 = C31514 / C31512;
    const double C31518 = 2 * C31512;
    const double C31517 = std::pow(C31512, 2);
    const double C31522 = C31515 * C31510;
    const double C31521 = C31510 * C31514;
    const double C31519 = C31510 * C31513;
    const double C32446 = C31510 * be;
    const double C32445 = C31510 * ae;
    const double C32444 = std::pow(C31510, 2);
    const double C31572 = C31571 / C31512;
    const double C31645 = C31598 / C31512;
    const double C31599 = C31515 * C31597;
    const double C31646 = C31597 * C31598;
    const double C32538 = std::pow(C31597, 2);
    const double C32593 = C31597 * be;
    const double C32591 = C31597 * ae;
    const double C31656 = C31649 / C31512;
    const double C31651 = C31597 * C31644;
    const double C31695 = C31694 / C31512;
    const double C31783 = std::pow(C31758, 2);
    const double C31841 = C31758 * ae;
    const double C31766 = C31757 * ae;
    const double C31764 = C31757 * C31758;
    const double C31939 = std::pow(C31757, 2);
    const double C31759 = 2 * C31755;
    const double C31961 = std::pow(C31927, 2);
    const double C32788 = 2 * C32482;
    const double C32787 = std::pow(C32482, 2);
    const double C32483 = std::pow(C32480, 2);
    const double C32786 = C32480 * ce;
    const double C32495 = std::pow(C32494, 2);
    const double C32789 = C32494 * ce;
    const double C32509 = std::pow(C32508, 2);
    const double C32790 = C32508 * ce;
    const double C32550 = std::pow(C32549, 2);
    const double C32633 = C32549 * be;
    const double C32631 = C32549 * ae;
    const double C32458 = std::pow(C31518, -1);
    const double C32781 = std::pow(C31518, -2);
    const double C31524 = 2 * C31517;
    const double C140 = (std::pow((2 * p * q) / (p + q), 2) * bs[2] *
                         (yP - yQ) * (xP - xQ) * std::pow(ae, 2)) /
                        C31517;
    const double C32785 = C31517 * C31518;
    const double C32784 = 4 * C31517;
    const double C31526 = C31521 / C31512;
    const double C31525 = C31519 / C31512;
    const double C32774 = std::pow(C32445, 2);
    const double C32447 = C32444 * C31515;
    const double C31654 = C31646 / C31512;
    const double C32539 = C32538 * C31515;
    const double C32791 = std::pow(C32591, 2);
    const double C31657 = C31651 / C31512;
    const double C31844 = C31782 * C31841;
    const double C31853 = C31773 * C31841;
    const double C31860 = C31763 * C31841;
    const double C31873 = C31796 * C31841;
    const double C31890 = C31818 * C31841;
    const double C31769 = C31763 * C31766;
    const double C31775 = C31773 * C31766;
    const double C31785 = C31782 * C31766;
    const double C31800 = C31796 * C31766;
    const double C31824 = C31818 * C31766;
    const double C31768 = C31764 * C31765;
    const double C31760 = C31759 / C31756;
    const double C126 = (-(bs[1] * C31841 * C31759) / C31756) / C31512;
    const double C131 = (-(bs[1] * C31766 * C31759) / C31756) / C31512;
    const double C120 = -(C31758 * bs[1] * C31759) / C31756;
    const double C217 = -(C31757 * bs[1] * C31759) / C31756;
    const double C322 = -(C31927 * bs[1] * C31759) / C31756;
    const double C32821 = std::pow(C32788, -2);
    const double C32819 = std::pow(C32788, -1);
    const double C32484 = C32483 * C32481;
    const double C32496 = C32495 * C32481;
    const double C32510 = C32509 * C32481;
    const double C32551 = C32550 * C31515;
    const double C32793 = std::pow(C32631, 2);
    const double C31533 = C31514 / C31524;
    const double C31530 = C31513 / C31524;
    const double C31529 = C31511 / C31524;
    const double C31648 = C31598 / C31524;
    const double C31653 = C31644 / C31524;
    const double C31652 = C31643 / C31524;
    const double C32818 = 4 * C32785;
    const double C32817 = C31512 * C32784;
    const double C31531 = 0 - C31526;
    const double C31528 = 0 - C31525;
    const double C32448 = C32447 / C31512;
    const double C31658 = 0 - C31654;
    const double C32540 = C32539 / C31512;
    const double C31661 = 0 - C31657;
    const double C31774 = C31773 * C31768;
    const double C31784 = C31782 * C31768;
    const double C31798 = C31796 * C31768;
    const double C31822 = C31818 * C31768;
    const double C31762 = -C31760;
    const double C31772 = std::pow(C31760, 4);
    const double C31795 = std::pow(C31760, 6);
    const double C141 = (ae * std::pow(C31760, 2) * bs[2] * C31757 * ae +
                         C31758 * std::pow(-C31760, 3) * bs[3] * C31757 *
                             C31758 * std::pow(ae, 2)) /
                        C31517;
    const double C32089 = std::pow(C31760, 2);
    const double C127 =
        (C31758 * std::pow(C31760, 2) * bs[2] * C31841) / C31512 -
        (ae * bs[1] * C31759) / (C31756 * C31512);
    const double C32485 = C32484 / C32482;
    const double C32497 = C32496 / C32482;
    const double C32511 = C32510 / C32482;
    const double C32552 = C32551 / C31512;
    const double C31536 = C31531 * ae;
    const double C31535 = C31528 * ae;
    const double C32449 = -C32448;
    const double C31662 = C31658 * ae;
    const double C32541 = -C32540;
    const double C31665 = C31661 * ae;
    const double C31767 = std::pow(C31762, 3);
    const double C31781 = std::pow(C31762, 5);
    const double C31817 = std::pow(C31762, 7);
    const double C31777 = C31772 * C31775;
    const double C31776 = C31772 * C31774;
    const double C31842 = C31773 * C31772;
    const double C31855 = C31772 * C31853;
    const double C31803 = C31795 * C31800;
    const double C31802 = C31795 * C31798;
    const double C31877 = C31795 * C31873;
    const double C31891 = C31796 * C31795;
    const double C32091 = C32090 * C32089;
    const double C132 = (C31758 * C32089 * C32090 * C31766) / C31512;
    const double C227 = (C31757 * C32089 * C32090 * C31766) / C31512 -
                        (ae * bs[1] * C31759) / (C31756 * C31512);
    const double C232 = (C31757 * C32089 * C32090 * C31841) / C31512;
    const double C332 = (C31927 * C32089 * C32090 * C31766) / C31512;
    const double C337 = (C31927 * C32089 * C32090 * C31841) / C31512;
    const double C32486 = -C32485;
    const double C32498 = -C32497;
    const double C32512 = -C32511;
    const double C32553 = -C32552;
    const double C31540 = C31536 / C31512;
    const double C31539 = C31535 / C31512;
    const double C32450 = std::exp(C32449);
    const double C31666 = C31662 / C31512;
    const double C32542 = std::exp(C32541);
    const double C31669 = C31665 / C31512;
    const double C31770 = C31767 * C31769;
    const double C31854 = C31763 * C31767;
    const double C31861 = C31767 * C31860;
    const double C247 = (ae * std::pow(C31760, 2) * bs[2] * C31841 +
                         C31757 * C31767 * C31763 * C31768) /
                        C31517;
    const double C352 = ((zP - zQ) * C31767 * C31763 * C31768) / C31517;
    const double C31787 = C31781 * C31785;
    const double C31786 = C31781 * C31784;
    const double C31843 = C31782 * C31781;
    const double C31848 = C31781 * C31844;
    const double C31827 = C31817 * C31824;
    const double C31826 = C31817 * C31822;
    const double C31893 = C31817 * C31890;
    const double C31780 = ae * C31777;
    const double C31779 = C31758 * C31777;
    const double C32176 = C31757 * C31777;
    const double C353 =
        (C31767 * C31763 * C31768 + C31776 * std::pow(zP - zQ, 2)) / C31517;
    const double C31846 = C31758 * C31842;
    const double C31845 = C31842 * ae;
    const double C32095 = C31842 * C31783;
    const double C32178 = C31842 * C31939;
    const double C32245 = C31757 * C31842;
    const double C32426 = C31842 * C31961;
    const double C32429 = C31927 * C31842;
    const double C31863 = C31758 * C31855;
    const double C31937 = ae * C31855;
    const double C31936 = C31757 * C31855;
    const double C31805 = C31803 * C31783;
    const double C31816 = ae * C31803;
    const double C31815 = C31758 * C31803;
    const double C32260 = C31757 * C31803;
    const double C32327 = C31803 * C31961;
    const double C31804 = C31758 * C31802;
    const double C31989 = C31757 * C31802;
    const double C32024 = C31927 * C31802;
    const double C32029 = C31802 * C31961;
    const double C31879 = C31758 * C31877;
    const double C31990 = C31877 * C31939;
    const double C32004 = ae * C31877;
    const double C32003 = C31757 * C31877;
    const double C32032 = C31877 * C31961;
    const double C32061 = C31927 * C31877;
    const double C31896 = C31891 * C31783;
    const double C31895 = C31758 * C31891;
    const double C31894 = C31891 * ae;
    const double C32263 = C31891 * C31939;
    const double C121 = C32091 * C31783 - (bs[1] * C31759) / C31756;
    const double C216 = C31757 * C31758 * C32091;
    const double C218 = C32091 * C31939 - (bs[1] * C31759) / C31756;
    const double C321 = C31927 * C31758 * C32091;
    const double C323 = C32091 * C31961 - (bs[1] * C31759) / C31756;
    const double C618 = C31927 * C31757 * C32091;
    const double C32487 = std::exp(C32486);
    const double C32499 = std::exp(C32498);
    const double C32513 = std::exp(C32512);
    const double C32554 = std::exp(C32553);
    const double C31544 = C31540 - C31530;
    const double C31543 = C31539 - C31529;
    const double C6210 = C32450 * C232;
    const double C6980 = C32450 * C337;
    const double C31527 = C31522 * C32450;
    const double C32452 = C32450 * C32445;
    const double C32451 = C32450 / C31518;
    const double C32460 = C32458 * C32450;
    const double C32777 = C32450 * C32446;
    const double C32815 = C32781 * C32450;
    const double C32809 = C32450 * C32774;
    const double C31670 = C31666 - C31653;
    const double C31600 = C31599 * C32542;
    const double C118 = -(2 * C31515 * (yA - yB) * C32542) / C31512;
    const double C32592 = C32542 / C31518;
    const double C32594 = C32542 * C32591;
    const double C32601 = C32458 * C32542;
    const double C32797 = C32542 * C32593;
    const double C32826 = C32781 * C32542;
    const double C32824 = C32542 * C32791;
    const double C31673 = C31669 - C31652;
    const double C142 = (C31767 * C31763 * C31768 + ae * C31758 * C31770 +
                         C31758 * (ae * C31770 + C31758 * std::pow(C31760, 4) *
                                                     bs[4] * C31768)) /
                        C31517;
    const double C143 =
        (2 * (ae * C31770 + C31758 * C31776) +
         ae * (C31770 + C31777 * std::pow(C31758, 2)) +
         C31758 * (C31776 + ae * C31758 * C31777 +
                   C31758 * (ae * C31777 +
                             C31758 * std::pow(C31762, 5) * bs[5] * C31768))) /
        C31517;
    const double C246 = (ae * (C31758 * C31767 * C31763 * C31841 +
                               bs[2] * std::pow(C31760, 2) * ae) +
                         C31757 * (ae * C31770 + C31758 * C31776)) /
                        C31517;
    const double C351 = ((zP - zQ) * (ae * C31770 + C31758 * C31776)) / C31517;
    const double C133 = (C32089 * C32090 * C31766 + C31770 * C31783) / C31512;
    const double C134 =
        (2 * C31758 * C31770 + C31758 * (C31770 + C31777 * C31783)) / C31512;
    const double C226 =
        (C31757 * C31758 * C31770 + C31758 * C32091 * ae) / C31512;
    const double C238 =
        (C32089 * C32090 * C31766 + C31757 * (C31757 * C31770 + C32091 * ae) +
         C31757 * C32091 * ae) /
        C31512;
    const double C330 = (C31927 * (C31770 + C31777 * C31783)) / C31512;
    const double C331 = (C31927 * C31758 * C31770) / C31512;
    const double C343 = (C32089 * C32090 * C31766 + C31770 * C31961) / C31512;
    const double C628 = (C31927 * (C31757 * C31770 + C32091 * ae)) / C31512;
    const double C1969 =
        (2 * C31927 * C31770 + C31927 * (C31770 + C31777 * C31961)) / C31512;
    const double C31864 = C31854 * ae;
    const double C32094 = C31758 * C31854;
    const double C32177 = C31757 * C31854;
    const double C225 = (C31757 * (C31770 + C31777 * C31783) +
                         (C32091 + C31854 * C31783) * ae) /
                        C31512;
    const double C122 =
        2 * C31758 * C32091 + C31758 * (C32091 + C31854 * C31783);
    const double C215 = C31757 * (C32091 + C31854 * C31783);
    const double C320 = C31927 * (C32091 + C31854 * C31783);
    const double C872 =
        2 * C31757 * C32091 + C31757 * (C32091 + C31854 * C31939);
    const double C1064 = C31927 * (C32091 + C31854 * C31939);
    const double C1963 =
        2 * C31927 * C32091 + C31927 * (C32091 + C31854 * C31961);
    const double C1964 =
        3 * (C32091 + C31854 * C31961) +
        C31927 * (2 * C31927 * C31854 + C31927 * (C31854 + C31842 * C31961));
    const double C248 = (C31767 * C31763 * C31768 + ae * C31757 * C31861 +
                         C31757 * (ae * C31861 + C31757 * C31776)) /
                        C31517;
    const double C633 =
        (ae * C31927 * C31861 + C31757 * C31927 * C31776) / C31517;
    const double C128 =
        (C32089 * C32090 * C31841 + C31758 * (C31758 * C31861 + C32091 * ae) +
         C31758 * C32091 * ae) /
        C31512;
    const double C231 = (C31757 * (C31758 * C31861 + C32091 * ae)) / C31512;
    const double C233 = (C32089 * C32090 * C31841 + C31861 * C31939) / C31512;
    const double C336 = (C31927 * (C31758 * C31861 + C32091 * ae)) / C31512;
    const double C338 = (C32089 * C32090 * C31841 + C31861 * C31961) / C31512;
    const double C623 = (C31927 * C31757 * C31861) / C31512;
    const double C881 =
        (2 * C31757 * C31861 + C31757 * (C31861 + C31855 * C31939)) / C31512;
    const double C1076 = (C31927 * (C31861 + C31855 * C31939)) / C31512;
    const double C1972 =
        (2 * C31927 * C31861 + C31927 * (C31861 + C31855 * C31961)) / C31512;
    const double C6212 = C32450 * C247;
    const double C6982 = C32450 * C352;
    const double C31789 = C31787 * C31783;
    const double C31794 = ae * C31787;
    const double C31793 = C31758 * C31787;
    const double C32244 = C31757 * C31787;
    const double C32316 = C31787 * C31961;
    const double C32326 = C31927 * C31787;
    const double C1976 =
        (3 * (C31770 + C31777 * C31961) +
         C31927 * (2 * C31927 * C31777 + C31927 * (C31777 + C31787 * C31961))) /
        C31512;
    const double C31788 = C31758 * C31786;
    const double C31938 = C31757 * C31786;
    const double C31970 = C31927 * C31786;
    const double C890 = (2 * (ae * C31861 + C31757 * C31776) +
                         ae * (C31861 + C31855 * std::pow(C31757, 2)) +
                         C31757 * (C31776 + ae * C31757 * C31855 +
                                   C31757 * (ae * C31855 + C31757 * C31786))) /
                        C31517;
    const double C1092 = (ae * (C31861 + C31855 * C31961) +
                          C31757 * (C31776 + C31786 * C31961)) /
                         C31517;
    const double C1981 =
        (2 * C31927 * C31776 + C31927 * (C31776 + C31786 * C31961)) / C31517;
    const double C31847 = C31843 * C31783;
    const double C31875 = C31758 * C31843;
    const double C31874 = C31843 * ae;
    const double C32246 = C31843 * C31939;
    const double C32261 = C31757 * C31843;
    const double C32430 = C31843 * C31961;
    const double C31850 = C31758 * C31848;
    const double C31941 = C31848 * C31939;
    const double C31988 = ae * C31848;
    const double C31987 = C31757 * C31848;
    const double C32023 = C31927 * C31848;
    const double C32319 = C31848 * C31961;
    const double C1973 =
        (3 * (C31861 + C31855 * C31961) +
         C31927 * (2 * C31927 * C31855 + C31927 * (C31855 + C31848 * C31961))) /
        C31512;
    const double C31829 = C31827 * C31783;
    const double C31828 = C31758 * C31826;
    const double C32005 = C31757 * C31826;
    const double C32033 = C31826 * C31961;
    const double C32062 = C31927 * C31826;
    const double C31897 = C31758 * C31893;
    const double C32007 = C31893 * C31939;
    const double C344 = (C31758 * C31770 + C31779 * C31961) / C31512;
    const double C6990 = C32450 * C353;
    const double C31868 = C31846 * ae;
    const double C32104 = 2 * C31846;
    const double C32183 = C31757 * C31846;
    const double C32096 = C31854 + C32095;
    const double C32180 = C31854 + C32178;
    const double C32250 = 2 * C32245;
    const double C32248 = C32245 * ae;
    const double C32427 = C31854 + C32426;
    const double C32431 = 2 * C32429;
    const double C1091 =
        (C31927 * C31776 + ae * C31927 * C31936 +
         C31757 * (ae * C31927 * C31855 + C31757 * C31927 * C31786)) /
        C31517;
    const double C1095 =
        (C31776 + C31786 * C31961 + ae * (C31936 + C31757 * C31848 * C31961) +
         C31757 * (ae * (C31855 + C31848 * C31961) +
                   C31757 * (C31786 + C31802 * C31961))) /
        C31517;
    const double C1077 = (C31757 * C31861 + C31936 * C31961) / C31512;
    const double C31807 = C31787 + C31805;
    const double C31823 = 2 * C31815;
    const double C31821 = ae * C31815;
    const double C32287 = C31757 * C31815;
    const double C32338 = C31815 * C31961;
    const double C32329 = C31787 + C32327;
    const double C32026 = C31757 * C32024;
    const double C32078 = 2 * C32024;
    const double C32030 = C31786 + C32029;
    const double C31994 = C31848 + C31990;
    const double C32011 = 2 * C32003;
    const double C32009 = ae * C32003;
    const double C32060 = C31927 * C32003;
    const double C32341 = C32003 * C31961;
    const double C32034 = C31848 + C32032;
    const double C32064 = ae * C32061;
    const double C31899 = C31843 + C31896;
    const double C31898 = C31895 * ae;
    const double C32289 = C31895 * C31939;
    const double C32267 = C31843 + C32263;
    const double C32820 = C32487 * C32786;
    const double C110 =
        (C32487 * std::pow(C32786, 2)) / C32787 + C32487 / C32788;
    const double C112 = C32821 * C32487;
    const double C443 = C32819 * C32487;
    const double C32822 = C32499 * C32789;
    const double C209 =
        (C32499 * std::pow(C32789, 2)) / C32787 + C32499 / C32788;
    const double C211 = C32821 * C32499;
    const double C441 = C32819 * C32499;
    const double C32823 = C32513 * C32790;
    const double C315 =
        (C32513 * std::pow(C32790, 2)) / C32787 + C32513 / C32788;
    const double C317 = C32821 * C32513;
    const double C531 = C32819 * C32513;
    const double C32632 = C32554 / C31518;
    const double C32634 = C32554 * C32631;
    const double C32641 = C32458 * C32554;
    const double C32803 = C32554 * C32633;
    const double C32829 = C32781 * C32554;
    const double C32827 = C32554 * C32793;
    const double C31549 = C31544 / C31518;
    const double C31548 = C31510 * C31544;
    const double C31547 = C31543 + C31520;
    const double C31534 = C31527 / C31517;
    const double C31532 = 2 * C31527;
    const double C32453 = C32452 * C32446;
    const double C32459 = C32452 / C31524;
    const double C32778 = C32458 * C32452;
    const double C32776 = C32452 / C31512;
    const double C748 = (C32450 * std::pow(C32446, 2)) / C31517 + C32451;
    const double C32461 = C32460 * C32446;
    const double C32782 = C32445 * C32460;
    const double C32780 = 2 * C32460;
    const double C32830 = C32460 / C32784;
    const double C105 = C32460 / C32818;
    const double C17830 = C32460 / C31518;
    const double C32811 = C32777 / C31512;
    const double C749 = (-2 * C32458 * C32777) / C31512;
    const double C32843 = C32809 / C31517;
    const double C31675 = C31670 / C31518;
    const double C31674 = C31597 * C31670;
    const double C31626 = 2 * C31600;
    const double C31650 = C31600 / C31517;
    const double C759 =
        ((0 * ae) / C31512 - C31600 / C31517) / C31518 + (0 * ae) / C31512;
    const double C2666 =
        ((C32542 - (C31597 * 2 * C31600) / C31512) * ae) / C31512 -
        C31598 / C31524;
    const double C2667 = (0 * ae) / C31512 - C31600 / C31517;
    const double C5267 = (C32542 * std::pow(C32593, 2)) / C31517 + C32592;
    const double C32595 = C32594 * C32593;
    const double C32600 = C32594 / C31524;
    const double C32795 = C32594 / C31512;
    const double C32792 = C32458 * C32594;
    const double C758 =
        (((C32542 - (C31597 * 2 * C31600) / C31512) * ae) / C31512 -
         C31598 / C31524) /
            C31518 +
        ((C31597 * ((0 * ae) / C31512 - C31600 / C31517) + C32601) * ae) /
            C31512;
    const double C32602 = C32601 * C32593;
    const double C32801 = C32591 * C32601;
    const double C32800 = 2 * C32601;
    const double C32836 = C32601 / C32784;
    const double C6131 = C32601 / C32818;
    const double C17833 = C32601 / C31518;
    const double C32832 = C32797 / C31512;
    const double C5268 = (-2 * C32458 * C32797) / C31512;
    const double C32848 = C32824 / C31517;
    const double C31679 = C31673 + C31645;
    const double C6402 = C32450 * C246;
    const double C7757 = C32460 * C246;
    const double C15957 = C32460 * C246;
    const double C7359 = C32450 * C351;
    const double C8809 = C32460 * C351;
    const double C17031 = C32460 * C351;
    const double C31865 = C31863 + C31864;
    const double C32179 = C32176 + C31864;
    const double C878 =
        (2 * (C31757 * C31770 + C32091 * ae) +
         C31757 * (C31770 + C31757 * (C31757 * C31777 + C31864) +
                   C31757 * C31854 * ae) +
         (C32091 + C31854 * C31939) * ae) /
        C31512;
    const double C239 =
        (C31758 * C31770 + C31757 * (C31757 * C31779 + C32094 * ae) +
         C31757 * C32094 * ae) /
        C31512;
    const double C629 = (C31927 * (C31757 * C31779 + C32094 * ae)) / C31512;
    const double C219 = C31758 * C32091 + C32094 * C31939;
    const double C324 = C31758 * C32091 + C32094 * C31961;
    const double C619 = C31927 * C31757 * C32094;
    const double C871 =
        2 * C31757 * C32094 + C31757 * (C32094 + C31846 * C31939);
    const double C1063 = C31927 * (C32094 + C31846 * C31939);
    const double C1962 =
        2 * C31927 * C32094 + C31927 * (C32094 + C31846 * C31961);
    const double C1065 = C31757 * C32091 + C32177 * C31961;
    const double C2528 =
        2 * C31927 * C32177 + C31927 * (C32177 + C32245 * C31961);
    const double C6216 = C32450 * C248;
    const double C6608 = C32450 * C633;
    const double C6400 = C32450 * C231;
    const double C7753 = C32460 * C231;
    const double C15953 = C32460 * C231;
    const double C6214 = C32450 * C233;
    const double C7357 = C32450 * C336;
    const double C8805 = C32460 * C336;
    const double C17027 = C32460 * C336;
    const double C6988 = C32450 * C338;
    const double C6610 = C32450 * C623;
    const double C6218 = C32450 * C881;
    const double C6606 = C32450 * C1076;
    const double C7006 = C32450 * C1972;
    const double C31791 = C31777 + C31789;
    const double C31806 = C31794 + C31804;
    const double C31799 = 2 * C31793;
    const double C31797 = ae * C31793;
    const double C32182 = C31757 * C31793;
    const double C1968 =
        (2 * C31927 * C31779 + C31927 * (C31779 + C31793 * C31961)) / C31512;
    const double C1977 =
        (3 * (C31779 + C31793 * C31961) +
         C31927 * (2 * C31927 * C31793 + C31927 * (C31793 + C31815 * C31961))) /
        C31512;
    const double C32247 = C32244 + C31845;
    const double C32317 = C31777 + C32316;
    const double C32328 = 2 * C32326;
    const double C31790 = C31780 + C31788;
    const double C31940 = C31937 + C31938;
    const double C1982 =
        (3 * (C31776 + C31786 * C31961) +
         C31927 * (2 * C31970 + C31927 * (C31786 + C31802 * C31961))) /
        C31517;
    const double C2537 =
        (ae * (2 * C31927 * C31855 + C31927 * (C31855 + C31848 * C31961)) +
         C31757 * (2 * C31970 + C31927 * (C31786 + C31802 * C31961))) /
        C31517;
    const double C6220 = C32450 * C890;
    const double C6842 = C32450 * C1092;
    const double C7004 = C32450 * C1981;
    const double C31849 = C31842 + C31847;
    const double C31878 = C31875 * ae;
    const double C31892 = 2 * C31875;
    const double C32184 = C31875 * C31939;
    const double C32288 = C31757 * C31875;
    const double C32437 = C31875 * C31961;
    const double C1965 =
        3 * (C32094 + C31846 * C31961) +
        C31927 * (2 * C31927 * C31846 + C31927 * (C31846 + C31875 * C31961));
    const double C31880 = C31879 + C31874;
    const double C32265 = C32260 + C31874;
    const double C32249 = C31842 + C32246;
    const double C32268 = 2 * C32261;
    const double C32266 = C32261 * ae;
    const double C32440 = C32261 * C31961;
    const double C6967 =
        3 * (C32177 + C32245 * C31961) +
        C31927 * (2 * C31927 * C32245 + C31927 * (C32245 + C32261 * C31961));
    const double C32432 = C31842 + C32430;
    const double C31851 = C31850 + C31845;
    const double C31942 = C31855 + C31941;
    const double C31992 = C31988 + C31989;
    const double C31993 = 2 * C31987;
    const double C31991 = ae * C31987;
    const double C2531 =
        (2 * C31927 * C31936 + C31927 * (C31936 + C31987 * C31961)) / C31512;
    const double C6971 =
        (3 * (C31936 + C31987 * C31961) +
         C31927 * (2 * C31927 * C31987 + C31927 * (C31987 + C32003 * C31961))) /
        C31512;
    const double C32025 = ae * C32023;
    const double C32322 = 2 * C32023;
    const double C32320 = C31855 + C32319;
    const double C12103 = C32450 * C1973;
    const double C31831 = C31803 + C31829;
    const double C31830 = C31816 + C31828;
    const double C32010 = C32004 + C32005;
    const double C32035 = C31802 + C32033;
    const double C32065 = C31757 * C32062;
    const double C31900 = C31897 + C31894;
    const double C32012 = C31877 + C32007;
    const double C877 =
        (2 * (C31757 * C31779 + C32094 * ae) +
         C31757 * (C31779 + C31757 * (C31757 * C31793 + C31868) +
                   C31757 * C31846 * ae) +
         (C32094 + C31846 * C31939) * ae) /
        C31512;
    const double C1066 = C31757 * C32094 + C32183 * C31961;
    const double C123 = 3 * (C32091 + C31854 * C31783) +
                        C31758 * (2 * C32094 + C31758 * C32096);
    const double C214 = C31757 * (2 * C32094 + C31758 * C32096);
    const double C220 = C32091 + C31854 * C31783 + C32096 * C31939;
    const double C319 = C31927 * (2 * C32094 + C31758 * C32096);
    const double C325 = C32091 + C31854 * C31783 + C32096 * C31961;
    const double C620 = C31927 * C31757 * C32096;
    const double C873 = 3 * (C32091 + C31854 * C31939) +
                        C31757 * (2 * C32177 + C31757 * C32180);
    const double C1068 = C32091 + C31854 * C31939 + C32180 * C31961;
    const double C1580 = C31927 * (2 * C32177 + C31757 * C32180);
    const double C12087 =
        4 * (2 * C31927 * C31854 + C31927 * C32427) +
        C31927 * (3 * C32427 + C31927 * (2 * C31927 * C31842 +
                                         C31927 * (C31842 + C31843 * C31961)));
    const double C6604 = C32450 * C1091;
    const double C6846 = C32450 * C1095;
    const double C6840 = C32450 * C1077;
    const double C31809 = C31758 * C31807;
    const double C31819 = 3 * C31807;
    const double C31814 = ae * C31807;
    const double C32188 = C31757 * C31807;
    const double C31825 = C31802 + C31821;
    const double C32339 = C31793 + C32338;
    const double C32330 = C31927 * C32329;
    const double C31997 = C31757 * C31994;
    const double C32006 = 3 * C31994;
    const double C32002 = ae * C31994;
    const double C32013 = C31802 + C32009;
    const double C32063 = ae * C32060;
    const double C32342 = C31987 + C32341;
    const double C32036 = ae * C32034;
    const double C32323 = C31927 * C32034;
    const double C31902 = C31758 * C31899;
    const double C31901 = C31899 * ae;
    const double C32190 = C31899 * C31939;
    const double C32292 = C31875 + C32289;
    const double C32270 = C31757 * C32267;
    const double C111 = (2 * C32819 * C32820) / C32482;
    const double C442 = C32820 / C32482;
    const double C210 = (2 * C32819 * C32822) / C32482;
    const double C440 = C32822 / C32482;
    const double C316 = (2 * C32819 * C32823) / C32482;
    const double C530 = C32823 / C32482;
    const double C10305 = (C32554 * std::pow(C32633, 2)) / C31517 + C32632;
    const double C32635 = C32634 * C32633;
    const double C32640 = C32634 / C31524;
    const double C32796 = C32634 / C31512;
    const double C32794 = C32458 * C32634;
    const double C32642 = C32641 * C32633;
    const double C32807 = C32631 * C32641;
    const double C32806 = 2 * C32641;
    const double C32842 = C32641 / C32784;
    const double C11962 = C32641 / C32818;
    const double C24412 = C32641 / C31518;
    const double C32838 = C32803 / C31512;
    const double C10306 = (-2 * C32458 * C32803) / C31512;
    const double C32850 = C32827 / C31517;
    const double C31553 = C31548 + 0;
    const double C31552 = C31547 / C31518;
    const double C31538 = C31523 - C31534;
    const double C31537 = C31510 * C31532;
    const double C756 =
        ((-C31532 / C31512) / C31518 - (0 * be) / C31512) / C31518 -
        (0 * be) / C31512;
    const double C6132 = -C31532 / C31512;
    const double C15846 = (-C31532 / C31512) / C31518 - (0 * be) / C31512;
    const double C32454 = C32453 / C31517;
    const double C32812 = 2 * C32778;
    const double C7771 = C32776 * C890;
    const double C7767 = C32776 * C881;
    const double C7763 = C32776 * C248;
    const double C7759 = C32776 * C233;
    const double C7755 = C32776 * C247;
    const double C7751 = C32776 * C232;
    const double C8035 = C32776 * C246;
    const double C8031 = C32776 * C231;
    const double C8349 = C32776 * C623;
    const double C8345 = C32776 * C633;
    const double C8341 = C32776 * C1076;
    const double C8337 = C32776 * C1091;
    const double C8833 = C32776 * C338;
    const double C8829 = C32776 * C353;
    const double C8825 = C32776 * C1077;
    const double C8821 = C32776 * C1092;
    const double C8813 = C32776 * C1095;
    const double C8807 = C32776 * C352;
    const double C8803 = C32776 * C337;
    const double C9267 = C32776 * C351;
    const double C9263 = C32776 * C336;
    const double C12870 = C32776 * C1972;
    const double C12866 = C32776 * C1981;
    const double C13803 = C32776 * C1973;
    const double C930 = C748 * C881;
    const double C924 = C748 * C890;
    const double C914 = C748 * C248;
    const double C908 = C748 * C233;
    const double C902 = C748 * C247;
    const double C896 = C748 * C232;
    const double C1256 = C748 * C246;
    const double C1250 = C748 * C231;
    const double C1616 = C748 * C623;
    const double C1610 = C748 * C633;
    const double C1604 = C748 * C1076;
    const double C1598 = C748 * C1091;
    const double C2021 = C748 * C1972;
    const double C2015 = C748 * C1981;
    const double C2005 = C748 * C353;
    const double C1999 = C748 * C338;
    const double C1993 = C748 * C352;
    const double C1987 = C748 * C337;
    const double C2354 = C748 * C351;
    const double C2348 = C748 * C336;
    const double C2548 = C748 * C1092;
    const double C2542 = C748 * C1077;
    const double C32462 = C32461 / C31512;
    const double C32816 = C32782 / C31524;
    const double C32844 = C32776 - C32811;
    const double C15839 = -C32811;
    const double C904 = C749 * C246;
    const double C898 = C749 * C231;
    const double C1995 = C749 * C351;
    const double C1989 = C749 * C336;
    const double C32858 = C32843 + C32451;
    const double C31680 = C31674 + 0;
    const double C31647 = C31597 * C31626;
    const double C5274 =
        ((-C31598 / C31512) / C31518 -
         ((C32542 - (C31597 * C31626) / C31512) * be) / C31512) /
            C31518 -
        ((C31597 * ((-C31626 / C31512) / C31518 - (0 * be) / C31512) + C32601) *
         be) /
            C31512;
    const double C5275 =
        ((-C31626 / C31512) / C31518 - (0 * be) / C31512) / C31518 -
        (0 * be) / C31512;
    const double C15058 = (-C31626 / C31512) / C31518 - (0 * be) / C31512;
    const double C31660 = C31656 - C31650;
    const double C32596 = C32595 / C31517;
    const double C757 =
        (((0 - (C31597 * C31598) / C31512) * ae) / C31512 - (0 * be) / C31524) /
            C31518 +
        ((C31597 * (((C32542 - (C31597 * 2 * C31600) / C31512) * ae) / C31512 -
                    C31598 / C31524) +
          C32795) *
         ae) /
            C31512 +
        (0 * ae) / C31512 - C31600 / C31517;
    const double C32825 = 2 * C32792;
    const double C32603 = C32602 / C31512;
    const double C32835 = C32801 / C31524;
    const double C32852 = C32795 - C32832;
    const double C15051 = -C32832;
    const double C32861 = C32848 + C32592;
    const double C31683 = C31679 / C31518;
    const double C129 =
        (2 * (C31758 * C31861 + C32091 * ae) +
         C31758 * (C31861 + C31758 * C31865 + C31758 * C31854 * ae) +
         (C32091 + C31854 * C31783) * ae) /
        C31512;
    const double C230 =
        (C31757 * (C31861 + C31758 * C31865 + C32094 * ae)) / C31512;
    const double C234 =
        (C31758 * C31861 + C32091 * ae + C31865 * C31939) / C31512;
    const double C335 =
        (C31927 * (C31861 + C31758 * C31865 + C32094 * ae)) / C31512;
    const double C339 =
        (C31758 * C31861 + C32091 * ae + C31865 * C31961) / C31512;
    const double C624 = (C31927 * C31757 * C31865) / C31512;
    const double C885 =
        (3 * (C31770 + C31757 * C32179 + C32177 * ae) +
         C31757 * (2 * C32179 +
                   C31757 * (C31777 + C31757 * (C31757 * C31787 + C31845) +
                             C31757 * C31842 * ae) +
                   C32180 * ae) +
         (2 * C32177 + C31757 * C32180) * ae) /
        C31512;
    const double C1073 =
        (C31927 * (C31770 + C31757 * C32179 + C32177 * ae)) / C31512;
    const double C1080 =
        (C31757 * C31770 + C32091 * ae + C32179 * C31961) / C31512;
    const double C1086 =
        (C31770 + C31757 * C32179 + C32177 * ae +
         (C31777 + C31757 * (C31757 * C31787 + C31845) + C31757 * C31842 * ae) *
             C31961) /
        C31512;
    const double C1586 =
        (C31927 * (2 * C32179 +
                   C31757 * (C31777 + C31757 * (C31757 * C31787 + C31845) +
                             C31757 * C31842 * ae) +
                   C32180 * ae)) /
        C31512;
    const double C2534 =
        (2 * C31927 * C32179 +
         C31927 * (C32179 + (C31757 * C31787 + C31845) * C31961)) /
        C31512;
    const double C135 = (3 * (C31770 + C31777 * C31783) +
                         C31758 * (2 * C31779 + C31758 * C31791)) /
                        C31512;
    const double C224 = (C31757 * (2 * C31779 + C31758 * C31791) +
                         (2 * C32094 + C31758 * C32096) * ae) /
                        C31512;
    const double C240 =
        (C31770 + C31777 * C31783 + C31757 * (C31757 * C31791 + C32096 * ae) +
         C31757 * C32096 * ae) /
        C31512;
    const double C329 = (C31927 * (2 * C31779 + C31758 * C31791)) / C31512;
    const double C345 = (C31770 + C31777 * C31783 + C31791 * C31961) / C31512;
    const double C630 = (C31927 * (C31757 * C31791 + C32096 * ae)) / C31512;
    const double C1967 =
        (2 * C31927 * C31791 + C31927 * (C31791 + C31807 * C31961)) / C31512;
    const double C31808 = C31758 * C31806;
    const double C31813 = 2 * C31806;
    const double C31946 = C31757 * C31806;
    const double C31972 = C31927 * C31806;
    const double C31801 = C31786 + C31797;
    const double C32185 = C32182 + C31868;
    const double C32251 = C31757 * C32247;
    const double C32259 = 2 * C32247;
    const double C12089 =
        (4 * (2 * C31927 * C31777 + C31927 * C32317) +
         C31927 *
             (3 * C32317 + C31927 * (2 * C31927 * C31787 +
                                     C31927 * (C31787 + C31803 * C31961)))) /
        C31512;
    const double C144 =
        (3 * (C31776 + ae * C31779 + C31758 * C31790) +
         ae * (2 * C31779 + C31758 * C31791) +
         C31758 *
             (2 * C31790 + ae * C31791 +
              C31758 * (C31786 + ae * C31758 * C31787 +
                        C31758 * (ae * C31787 + C31758 * std::pow(C31760, 6) *
                                                    bs[6] * C31768)))) /
        C31517;
    const double C245 = (ae * (C31767 * C31763 * C31841 +
                               C31758 * (C31758 * C31855 + C31854 * ae) +
                               C31758 * C31854 * ae) +
                         C31757 * (C31776 + ae * C31779 + C31758 * C31790)) /
                        C31517;
    const double C249 = (ae * C31770 + C31758 * C31776 + ae * C31757 * C31865 +
                         C31757 * (ae * C31865 + C31757 * C31790)) /
                        C31517;
    const double C350 =
        ((zP - zQ) * (C31776 + ae * C31779 + C31758 * C31790)) / C31517;
    const double C354 =
        (ae * C31770 + C31758 * C31776 + C31790 * std::pow(zP - zQ, 2)) /
        C31517;
    const double C634 =
        (ae * C31927 * C31865 + C31757 * C31927 * C31790) / C31517;
    const double C1980 =
        (2 * C31927 * C31790 + C31927 * (C31790 + C31806 * C31961)) / C31517;
    const double C12105 = C32450 * C1982;
    const double C13799 = C32776 * C1982;
    const double C7000 = C32450 * C2537;
    const double C12858 = C32776 * C2537;
    const double C31876 = C31849 * ae;
    const double C32105 = C31758 * C31849;
    const double C32108 = 3 * C31849;
    const double C32189 = C31757 * C31849;
    const double C870 =
        2 * C31757 * C32096 + C31757 * (C32096 + C31849 * C31939);
    const double C1062 = C31927 * (C32096 + C31849 * C31939);
    const double C1961 =
        2 * C31927 * C32096 + C31927 * (C32096 + C31849 * C31961);
    const double C1966 =
        3 * (C32096 + C31849 * C31961) +
        C31927 * (2 * C31927 * C31849 + C31927 * (C31849 + C31899 * C31961));
    const double C32290 = C32287 + C31878;
    const double C32186 = C31846 + C32184;
    const double C32293 = 2 * C32288;
    const double C32291 = C32288 * ae;
    const double C2529 =
        2 * C31927 * C32183 + C31927 * (C32183 + C32288 * C31961);
    const double C12202 =
        3 * (C32183 + C32288 * C31961) +
        C31927 * (2 * C31927 * C32288 +
                  C31927 * (C32288 + C31757 * C31895 * C31961));
    const double C32438 = C31846 + C32437;
    const double C31881 = C31758 * C31880;
    const double C31889 = 2 * C31880;
    const double C31947 = C31880 * C31939;
    const double C32041 = ae * C31880;
    const double C32040 = C31757 * C31880;
    const double C32054 = C31927 * C31880;
    const double C32335 = C31880 * C31961;
    const double C32269 = C31757 * C32265;
    const double C32344 = C32265 * C31961;
    const double C6972 =
        (3 * (C32179 + C32247 * C31961) +
         C31927 * (2 * C31927 * C32247 + C31927 * (C32247 + C32265 * C31961))) /
        C31512;
    const double C32252 = C31757 * C32249;
    const double C32264 = 3 * C32249;
    const double C32262 = C32249 * ae;
    const double C6966 =
        2 * C31927 * C32180 + C31927 * (C32180 + C32249 * C31961);
    const double C6968 =
        3 * (C32180 + C32249 * C31961) +
        C31927 * (2 * C31927 * C32249 + C31927 * (C32249 + C32267 * C31961));
    const double C32441 = C32245 + C32440;
    const double C32433 = C31927 * C32432;
    const double C31867 = C31758 * C31851;
    const double C31872 = 2 * C31851;
    const double C31945 = ae * C31851;
    const double C31944 = C31757 * C31851;
    const double C889 = (2 * (ae * C31865 + C31757 * C31790) +
                         ae * (C31865 + C31851 * std::pow(C31757, 2)) +
                         C31757 * (C31790 + ae * C31757 * C31851 +
                                   C31757 * (ae * C31851 + C31757 * C31806))) /
                        C31517;
    const double C1093 = (ae * (C31865 + C31851 * C31961) +
                          C31757 * (C31790 + C31806 * C31961)) /
                         C31517;
    const double C880 =
        (2 * C31757 * C31865 + C31757 * (C31865 + C31851 * C31939)) / C31512;
    const double C1075 = (C31927 * (C31865 + C31851 * C31939)) / C31512;
    const double C1971 =
        (2 * C31927 * C31865 + C31927 * (C31865 + C31851 * C31961)) / C31512;
    const double C1974 =
        (3 * (C31865 + C31851 * C31961) +
         C31927 * (2 * C31927 * C31851 + C31927 * (C31851 + C31880 * C31961))) /
        C31512;
    const double C891 =
        (3 * (C31776 + ae * C31936 + C31757 * C31940) +
         ae * (2 * C31936 + C31757 * C31942) +
         C31757 * (2 * C31940 + ae * C31942 +
                   C31757 * (C31786 + ae * C31757 * C31848 +
                             C31757 * (ae * C31848 + C31757 * C31802)))) /
        C31517;
    const double C1589 =
        (2 * (ae * C31927 * C31855 + C31757 * C31970) + ae * C31927 * C31942 +
         C31757 *
             (C31970 + ae * C31927 * C31757 * C31848 +
              C31757 * (ae * C31927 * C31848 + C31757 * C31927 * C31802))) /
        C31517;
    const double C6310 =
        (2 * (ae * (C31855 + C31848 * C31961) + C31757 * C32030) +
         ae * (C31942 + C31994 * C31961) +
         C31757 * (C32030 + ae * (C31987 + C32003 * C31961) +
                   C31757 * (ae * (C31848 + C31877 * C31961) +
                             C31757 * (C31802 + C31826 * C31961)))) /
        C31517;
    const double C882 = (3 * (C31861 + C31855 * C31939) +
                         C31757 * (2 * C31936 + C31757 * C31942)) /
                        C31512;
    const double C1083 = (C31861 + C31855 * C31939 + C31942 * C31961) / C31512;
    const double C1583 = (C31927 * (2 * C31936 + C31757 * C31942)) / C31512;
    const double C6970 =
        (2 * C31927 * C31942 + C31927 * (C31942 + C31994 * C31961)) / C31512;
    const double C31996 = C31757 * C31992;
    const double C32001 = 2 * C31992;
    const double C31995 = C31786 + C31991;
    const double C7002 = C32450 * C2531;
    const double C12862 = C32776 * C2531;
    const double C12406 = C32450 * C6971;
    const double C32027 = C32025 + C32026;
    const double C12090 =
        (4 * (2 * C31927 * C31855 + C31927 * C32320) +
         C31927 * (3 * C32320 + C31927 * (2 * C32023 + C31927 * C32034))) /
        C31512;
    const double C31833 = C31758 * C31831;
    const double C1978 =
        (3 * (C31791 + C31807 * C31961) +
         C31927 * (2 * C31927 * C31807 + C31927 * (C31807 + C31831 * C31961))) /
        C31512;
    const double C31832 = C31758 * C31830;
    const double C32042 = C31757 * C31830;
    const double C32055 = C31927 * C31830;
    const double C32074 = C31830 * C31961;
    const double C32014 = C31757 * C32010;
    const double C32037 = C31757 * C32035;
    const double C32079 = C31927 * C32035;
    const double C6975 =
        (2 * C31970 + C31927 * C32030 +
         ae * (2 * C31927 * C31987 + C31927 * (C31987 + C32003 * C31961)) +
         C31757 * (ae * (2 * C32023 + C31927 * C32034) +
                   C31757 * (2 * C32024 + C31927 * C32035))) /
        C31517;
    const double C6976 =
        (ae * (3 * (C31855 + C31848 * C31961) +
               C31927 * (2 * C32023 + C31927 * C32034)) +
         C31757 * (3 * C32030 + C31927 * (2 * C32024 + C31927 * C32035))) /
        C31517;
    const double C6977 =
        (3 * C32030 + C31927 * (2 * C32024 + C31927 * C32035) +
         ae * (3 * (C31987 + C32003 * C31961) +
               C31927 * (2 * C32060 +
                         C31927 * (C32003 + C31757 * C31893 * C31961))) +
         C31757 * (ae * (3 * C32034 +
                         C31927 * (2 * C32061 +
                                   C31927 * (C31877 + C31893 * C31961))) +
                   C31757 * (3 * C32035 +
                             C31927 * (2 * C32062 +
                                       C31927 * (C31826 + std::pow(C31760, 8) *
                                                              bs[8] * C31768 *
                                                              C31961))))) /
        C31517;
    const double C32067 = C32064 + C32065;
    const double C31903 = C31758 * C31900;
    const double C32043 = C31900 * C31939;
    const double C32015 = C31757 * C32012;
    const double C6973 =
        (3 * (C31942 + C31994 * C31961) +
         C31927 * (2 * C31927 * C31994 + C31927 * (C31994 + C32012 * C31961))) /
        C31512;
    const double C31811 = C31799 + C31809;
    const double C12290 =
        (4 * (2 * C31927 * C31793 + C31927 * C32339) +
         C31927 * (3 * C32339 +
                   C31927 * (2 * C31927 * C31815 +
                             C31927 * (C31815 + C31758 * C31827 * C31961)))) /
        C31512;
    const double C32331 = C32328 + C32330;
    const double C31999 = C31993 + C31997;
    const double C32066 = C32024 + C32063;
    const double C12395 =
        (4 * (2 * C31927 * C31987 + C31927 * C32342) +
         C31927 * (3 * C32342 +
                   C31927 * (2 * C32060 +
                             C31927 * (C32003 + C31757 * C31893 * C31961)))) /
        C31512;
    const double C32324 = C32322 + C32323;
    const double C31904 = C31892 + C31902;
    const double C32192 = C31849 + C32190;
    const double C32295 = C31757 * C32292;
    const double C32272 = C32268 + C32270;
    const double C32636 = C32635 / C31517;
    const double C32828 = 2 * C32794;
    const double C32643 = C32642 / C31512;
    const double C32841 = C32807 / C31524;
    const double C32855 = C32796 - C32838;
    const double C20880 = -C32838;
    const double C32862 = C32850 + C32632;
    const double C31556 = C31553 * be;
    const double C7772 = C31538 * C877;
    const double C7768 = C31538 * C871;
    const double C7764 = C31538 * C239;
    const double C7760 = C31538 * C219;
    const double C7756 = C31538 * C226;
    const double C7752 = C31538 * C216;
    const double C8040 = C31538 * C220;
    const double C8036 = C31538 * C225;
    const double C8032 = C31538 * C215;
    const double C8346 = C31538 * C619;
    const double C8342 = C31538 * C629;
    const double C8338 = C31538 * C1063;
    const double C8830 = C31538 * C324;
    const double C8826 = C31538 * C344;
    const double C8822 = C31538 * C1066;
    const double C8808 = C31538 * C331;
    const double C8804 = C31538 * C321;
    const double C9046 = C31538 * C620;
    const double C9268 = C31538 * C330;
    const double C9264 = C31538 * C320;
    const double C12867 = C31538 * C1962;
    const double C12863 = C31538 * C1968;
    const double C13288 = C31538 * C325;
    const double C13800 = C31538 * C1965;
    const double C13796 = C31538 * C1977;
    const double C31542 = C31510 * C31538;
    const double C31570 = C31538 / C31518;
    const double C31541 = C31537 / C31512;
    const double C911 = C756 * C220;
    const double C905 = C756 * C225;
    const double C899 = C756 * C215;
    const double C1253 = C756 * C214;
    const double C1611 = C756 * C620;
    const double C2002 = C756 * C325;
    const double C1996 = C756 * C330;
    const double C1990 = C756 * C320;
    const double C2351 = C756 * C319;
    const double C6221 = C6132 * C873;
    const double C6219 = C6132 * C878;
    const double C6217 = C6132 * C872;
    const double C6215 = C6132 * C238;
    const double C6213 = C6132 * C218;
    const double C6211 = C6132 * C227;
    const double C6209 = C6132 * C217;
    const double C6409 = C6132 * C877;
    const double C6407 = C6132 * C871;
    const double C6405 = C6132 * C239;
    const double C6403 = C6132 * C219;
    const double C6401 = C6132 * C226;
    const double C6399 = C6132 * C216;
    const double C6609 = C6132 * C618;
    const double C6607 = C6132 * C628;
    const double C6605 = C6132 * C1064;
    const double C6601 = C6132 * C1580;
    const double C6843 = C6132 * C1068;
    const double C6839 = C6132 * C1065;
    const double C7005 = C6132 * C1963;
    const double C7003 = C6132 * C1969;
    const double C7001 = C6132 * C2528;
    const double C6989 = C6132 * C343;
    const double C6987 = C6132 * C323;
    const double C6981 = C6132 * C332;
    const double C6979 = C6132 * C322;
    const double C7190 = C6132 * C1066;
    const double C7186 = C6132 * C1063;
    const double C7184 = C6132 * C629;
    const double C7182 = C6132 * C619;
    const double C7366 = C6132 * C344;
    const double C7364 = C6132 * C324;
    const double C7358 = C6132 * C331;
    const double C7356 = C6132 * C321;
    const double C12108 = C6132 * C12087;
    const double C12104 = C6132 * C1976;
    const double C12102 = C6132 * C1964;
    const double C12303 = C6132 * C1977;
    const double C12301 = C6132 * C1965;
    const double C12299 = C6132 * C1968;
    const double C12297 = C6132 * C1962;
    const double C12405 = C6132 * C6967;
    const double C15972 = C15846 * C877;
    const double C15968 = C15846 * C871;
    const double C15964 = C15846 * C239;
    const double C15960 = C15846 * C219;
    const double C15956 = C15846 * C226;
    const double C15952 = C15846 * C216;
    const double C16240 = C15846 * C220;
    const double C16236 = C15846 * C225;
    const double C16232 = C15846 * C215;
    const double C16546 = C15846 * C619;
    const double C16542 = C15846 * C629;
    const double C16538 = C15846 * C1063;
    const double C16856 = C15846 * C1066;
    const double C17054 = C15846 * C1962;
    const double C17050 = C15846 * C1968;
    const double C17038 = C15846 * C344;
    const double C17034 = C15846 * C324;
    const double C17030 = C15846 * C331;
    const double C17026 = C15846 * C321;
    const double C17279 = C15846 * C620;
    const double C17505 = C15846 * C325;
    const double C17501 = C15846 * C330;
    const double C17497 = C15846 * C320;
    const double C22867 = C15846 * C1965;
    const double C22863 = C15846 * C1977;
    const double C32455 = C32451 - C32454;
    const double C32845 = C32812 / C31512;
    const double C32463 = C32459 - C32462;
    const double C32859 = C32844 / C31518;
    const double C15971 = C15839 * C890;
    const double C15967 = C15839 * C881;
    const double C15963 = C15839 * C248;
    const double C15959 = C15839 * C233;
    const double C15955 = C15839 * C247;
    const double C15951 = C15839 * C232;
    const double C16235 = C15839 * C246;
    const double C16231 = C15839 * C231;
    const double C16549 = C15839 * C623;
    const double C16545 = C15839 * C633;
    const double C16541 = C15839 * C1076;
    const double C16537 = C15839 * C1091;
    const double C16865 = C15839 * C1095;
    const double C16859 = C15839 * C1092;
    const double C16855 = C15839 * C1077;
    const double C17057 = C15839 * C1972;
    const double C17053 = C15839 * C1981;
    const double C17049 = C15839 * C2531;
    const double C17045 = C15839 * C2537;
    const double C17037 = C15839 * C353;
    const double C17033 = C15839 * C338;
    const double C17029 = C15839 * C352;
    const double C17025 = C15839 * C337;
    const double C17500 = C15839 * C351;
    const double C17496 = C15839 * C336;
    const double C22870 = C15839 * C1973;
    const double C22866 = C15839 * C1982;
    const double C5422 = C32858 * C881;
    const double C5416 = C32858 * C890;
    const double C5406 = C32858 * C248;
    const double C5400 = C32858 * C233;
    const double C5394 = C32858 * C247;
    const double C5388 = C32858 * C232;
    const double C5708 = C32858 * C246;
    const double C5702 = C32858 * C231;
    const double C6052 = C32858 * C623;
    const double C6046 = C32858 * C633;
    const double C6040 = C32858 * C1076;
    const double C6034 = C32858 * C1091;
    const double C10564 = C32858 * C1972;
    const double C10558 = C32858 * C1981;
    const double C10548 = C32858 * C353;
    const double C10542 = C32858 * C338;
    const double C10536 = C32858 * C352;
    const double C10530 = C32858 * C337;
    const double C10889 = C32858 * C351;
    const double C10883 = C32858 * C336;
    const double C11071 = C32858 * C1092;
    const double C11065 = C32858 * C1077;
    const double C31684 = C31680 * be;
    const double C31655 = C31647 / C31512;
    const double C31664 = C31597 * C31660;
    const double C31693 = C31660 / C31518;
    const double C32597 = C32592 - C32596;
    const double C32849 = C32825 / C31512;
    const double C32604 = C32600 - C32603;
    const double C32863 = C32852 / C31518;
    const double C5273 =
        ((-(0 * be) / C31512) / C31518 -
         ((0 - (C31597 * C31598) / C31512) * be) / C31512) /
            C31518 -
        ((C31597 * ((-C31598 / C31512) / C31518 -
                    ((C32542 - (C31597 * C31626) / C31512) * be) / C31512) +
          C15051) *
         be) /
            C31512 +
        (-C31626 / C31512) / C31518 - (0 * be) / C31512;
    const double C900 = C32815 * C230;
    const double C1252 = C749 * C230;
    const double C5392 = C32815 * C230;
    const double C8033 = C32460 * C230;
    const double C16233 = C32460 * C230;
    const double C17956 = C17830 * C230;
    const double C910 = C749 * C234;
    const double C1262 = C748 * C234;
    const double C5714 = C32858 * C234;
    const double C6404 = C32450 * C234;
    const double C7761 = C32460 * C234;
    const double C8039 = C32776 * C234;
    const double C15961 = C32460 * C234;
    const double C16239 = C15839 * C234;
    const double C1991 = C32815 * C335;
    const double C2350 = C749 * C335;
    const double C9265 = C32460 * C335;
    const double C10534 = C32815 * C335;
    const double C17498 = C32460 * C335;
    const double C19072 = C17830 * C335;
    const double C2001 = C749 * C339;
    const double C2360 = C748 * C339;
    const double C7365 = C32450 * C339;
    const double C8831 = C32460 * C339;
    const double C10895 = C32858 * C339;
    const double C13287 = C32776 * C339;
    const double C17035 = C32460 * C339;
    const double C17504 = C15839 * C339;
    const double C1614 = C749 * C624;
    const double C4742 = C748 * C624;
    const double C7183 = C32450 * C624;
    const double C8347 = C32460 * C624;
    const double C9045 = C32776 * C624;
    const double C16547 = C32460 * C624;
    const double C17278 = C15839 * C624;
    const double C26775 = C32858 * C624;
    const double C6223 = C6132 * C885;
    const double C6603 = C6132 * C1073;
    const double C6841 = C6132 * C1080;
    const double C6845 = C6132 * C1086;
    const double C6599 = C6132 * C1586;
    const double C6999 = C6132 * C2534;
    const double C1259 = C756 * C224;
    const double C917 = C756 * C240;
    const double C8044 = C31538 * C240;
    const double C16244 = C15846 * C240;
    const double C2357 = C756 * C329;
    const double C2008 = C756 * C345;
    const double C13292 = C31538 * C345;
    const double C17509 = C15846 * C345;
    const double C1605 = C756 * C630;
    const double C9050 = C31538 * C630;
    const double C17283 = C15846 * C630;
    const double C2010 = C756 * C1967;
    const double C14078 = C31538 * C1967;
    const double C23145 = C15846 * C1967;
    const double C31820 = C31813 + C31814;
    const double C1983 =
        (3 * (C31790 + C31806 * C31961) +
         C31927 * (2 * C31972 + C31927 * (C31806 + C31830 * C31961))) /
        C31517;
    const double C2538 =
        (ae * (2 * C31927 * C31851 + C31927 * (C31851 + C31880 * C31961)) +
         C31757 * (2 * C31972 + C31927 * (C31806 + C31830 * C31961))) /
        C31517;
    const double C31810 = C31801 + C31808;
    const double C1072 =
        (C31927 * (C31779 + C31757 * C32185 + C32183 * ae)) / C31512;
    const double C1081 =
        (C31757 * C31779 + C32094 * ae + C32185 * C31961) / C31512;
    const double C1087 =
        (C31779 + C31757 * C32185 + C32183 * ae +
         (C31793 + C31757 * (C31757 * C31815 + C31878) + C31757 * C31875 * ae) *
             C31961) /
        C31512;
    const double C2535 =
        (2 * C31927 * C32185 +
         C31927 * (C32185 + (C31757 * C31815 + C31878) * C31961)) /
        C31512;
    const double C32253 = C31777 + C32251;
    const double C12106 = C6132 * C12089;
    const double C906 = C32815 * C245;
    const double C1258 = C749 * C245;
    const double C5398 = C32815 * C245;
    const double C8037 = C32460 * C245;
    const double C16237 = C32460 * C245;
    const double C17962 = C17830 * C245;
    const double C916 = C749 * C249;
    const double C1268 = C748 * C249;
    const double C5720 = C32858 * C249;
    const double C6406 = C32450 * C249;
    const double C7765 = C32460 * C249;
    const double C8043 = C32776 * C249;
    const double C15965 = C32460 * C249;
    const double C16243 = C15839 * C249;
    const double C1997 = C32815 * C350;
    const double C2356 = C749 * C350;
    const double C9269 = C32460 * C350;
    const double C10540 = C32815 * C350;
    const double C17502 = C32460 * C350;
    const double C19078 = C17830 * C350;
    const double C2007 = C749 * C354;
    const double C2366 = C748 * C354;
    const double C7367 = C32450 * C354;
    const double C8827 = C32460 * C354;
    const double C10901 = C32858 * C354;
    const double C13291 = C32776 * C354;
    const double C17039 = C32460 * C354;
    const double C17508 = C15839 * C354;
    const double C1608 = C749 * C634;
    const double C4748 = C748 * C634;
    const double C7185 = C32450 * C634;
    const double C8343 = C32460 * C634;
    const double C9049 = C32776 * C634;
    const double C16543 = C32460 * C634;
    const double C17282 = C15839 * C634;
    const double C26781 = C32858 * C634;
    const double C2013 = C749 * C1980;
    const double C12300 = C32450 * C1980;
    const double C12864 = C32460 * C1980;
    const double C14077 = C32776 * C1980;
    const double C17051 = C32460 * C1980;
    const double C23144 = C15839 * C1980;
    const double C32191 = C32188 + C31876;
    const double C876 =
        (2 * (C31757 * C31791 + C32096 * ae) +
         C31757 * (C31791 + C31757 * (C31757 * C31807 + C31876) +
                   C31757 * C31849 * ae) +
         (C32096 + C31849 * C31939) * ae) /
        C31512;
    const double C32106 = C32104 + C32105;
    const double C1067 = C31757 * C32096 + C32189 * C31961;
    const double C2530 =
        2 * C31927 * C32189 + C31927 * (C32189 + C31757 * C31899 * C31961);
    const double C925 = C756 * C870;
    const double C8048 = C31538 * C870;
    const double C16248 = C15846 * C870;
    const double C1599 = C756 * C1062;
    const double C9054 = C31538 * C1062;
    const double C20383 = C15846 * C1062;
    const double C2016 = C756 * C1961;
    const double C14074 = C31538 * C1961;
    const double C23141 = C15846 * C1961;
    const double C32294 = C31757 * C32290;
    const double C12204 =
        (3 * (C32185 + C32290 * C31961) +
         C31927 * (2 * C31927 * C32290 +
                   C31927 * (C32290 +
                             (C31757 * C31758 * C31827 + C31898) * C31961))) /
        C31512;
    const double C886 =
        (3 * (C31779 + C31757 * C32185 + C32183 * ae) +
         C31757 * (2 * C32185 +
                   C31757 * (C31793 + C31757 * (C31757 * C31815 + C31878) +
                             C31757 * C31875 * ae) +
                   C32186 * ae) +
         (2 * C32183 + C31757 * C32186) * ae) /
        C31512;
    const double C1587 =
        (C31927 * (2 * C32185 +
                   C31757 * (C31793 + C31757 * (C31757 * C31815 + C31878) +
                             C31757 * C31875 * ae) +
                   C32186 * ae)) /
        C31512;
    const double C874 = 3 * (C32094 + C31846 * C31939) +
                        C31757 * (2 * C32183 + C31757 * C32186);
    const double C1069 = C32094 + C31846 * C31939 + C32186 * C31961;
    const double C1581 = C31927 * (2 * C32183 + C31757 * C32186);
    const double C7351 =
        2 * C31927 * C32186 + C31927 * (C32186 + C32292 * C31961);
    const double C12859 = C31538 * C2529;
    const double C14660 = C6132 * C2529;
    const double C17046 = C15846 * C2529;
    const double C12288 =
        4 * (2 * C31927 * C31846 + C31927 * C32438) +
        C31927 * (3 * C32438 + C31927 * (2 * C31927 * C31875 +
                                         C31927 * (C31875 + C31895 * C31961)));
    const double C31882 = C31848 + C31881;
    const double C31949 = C31851 + C31947;
    const double C32046 = 2 * C32040;
    const double C32044 = ae * C32040;
    const double C32056 = ae * C32054;
    const double C32336 = C31851 + C32335;
    const double C32271 = C31787 + C32269;
    const double C32345 = C32247 + C32344;
    const double C12407 = C6132 * C6972;
    const double C32254 = C32250 + C32252;
    const double C6997 = C6132 * C6966;
    const double C12394 =
        4 * (2 * C31927 * C32245 + C31927 * C32441) +
        C31927 * (3 * C32441 +
                  C31927 * (2 * C31927 * C32261 +
                            C31927 * (C32261 + C31757 * C31891 * C31961)));
    const double C32434 = C32431 + C32433;
    const double C31869 = C31855 + C31867;
    const double C31948 = C31945 + C31946;
    const double C1090 =
        (C31927 * C31790 + ae * C31927 * C31944 +
         C31757 * (ae * C31927 * C31851 + C31757 * C31927 * C31806)) /
        C31517;
    const double C1096 =
        (C31790 + C31806 * C31961 + ae * (C31944 + C31757 * C31880 * C31961) +
         C31757 * (ae * (C31851 + C31880 * C31961) +
                   C31757 * (C31806 + C31830 * C31961))) /
        C31517;
    const double C1078 = (C31757 * C31865 + C31944 * C31961) / C31512;
    const double C2532 =
        (2 * C31927 * C31944 + C31927 * (C31944 + C32040 * C31961)) / C31512;
    const double C12203 =
        (3 * (C31944 + C32040 * C31961) +
         C31927 * (2 * C31927 * C32040 +
                   C31927 * (C32040 + C31757 * C31900 * C31961))) /
        C31512;
    const double C922 = C749 * C889;
    const double C6410 = C32450 * C889;
    const double C7773 = C32460 * C889;
    const double C8051 = C32776 * C889;
    const double C15973 = C32460 * C889;
    const double C16251 = C15839 * C889;
    const double C2550 = C749 * C1093;
    const double C7193 = C32450 * C1093;
    const double C8819 = C32460 * C1093;
    const double C13085 = C32776 * C1093;
    const double C16861 = C32460 * C1093;
    const double C17290 = C15839 * C1093;
    const double C928 = C749 * C880;
    const double C6408 = C32450 * C880;
    const double C7769 = C32460 * C880;
    const double C8047 = C32776 * C880;
    const double C15969 = C32460 * C880;
    const double C16247 = C15839 * C880;
    const double C1602 = C749 * C1075;
    const double C7187 = C32450 * C1075;
    const double C8339 = C32460 * C1075;
    const double C9053 = C32776 * C1075;
    const double C16539 = C32460 * C1075;
    const double C20382 = C15839 * C1075;
    const double C2019 = C749 * C1971;
    const double C12298 = C32450 * C1971;
    const double C12868 = C32460 * C1971;
    const double C14073 = C32776 * C1971;
    const double C17055 = C32460 * C1971;
    const double C23140 = C15839 * C1971;
    const double C12302 = C32450 * C1974;
    const double C13801 = C32460 * C1974;
    const double C22868 = C32460 * C1974;
    const double C6224 = C32450 * C891;
    const double C7777 = C32776 * C891;
    const double C15977 = C15839 * C891;
    const double C6600 = C32450 * C1589;
    const double C8329 = C32776 * C1589;
    const double C16529 = C15839 * C1589;
    const double C6848 = C32450 * C6310;
    const double C6222 = C32450 * C882;
    const double C7781 = C32776 * C882;
    const double C15981 = C15839 * C882;
    const double C6844 = C32450 * C1083;
    const double C8817 = C32776 * C1083;
    const double C16869 = C15839 * C1083;
    const double C6602 = C32450 * C1583;
    const double C8333 = C32776 * C1583;
    const double C16533 = C15839 * C1583;
    const double C6998 = C32450 * C6970;
    const double C32008 = C32001 + C32002;
    const double C31998 = C31995 + C31996;
    const double C12109 = C32450 * C12090;
    const double C31835 = C31823 + C31833;
    const double C31834 = C31825 + C31832;
    const double C32045 = C32041 + C32042;
    const double C32057 = C31757 * C32055;
    const double C32075 = C31806 + C32074;
    const double C32016 = C32013 + C32014;
    const double C32038 = C32036 + C32037;
    const double C32080 = C32078 + C32079;
    const double C6996 = C32450 * C6975;
    const double C12408 = C32450 * C6976;
    const double C32068 = C31757 * C32067;
    const double C31905 = C31877 + C31903;
    const double C32047 = C31880 + C32043;
    const double C32017 = C32011 + C32015;
    const double C136 = (4 * (2 * C31779 + C31758 * C31791) +
                         C31758 * (3 * C31791 + C31758 * C31811)) /
                        C31512;
    const double C328 = (C31927 * (3 * C31791 + C31758 * C31811)) / C31512;
    const double C346 =
        (2 * C31779 + C31758 * C31791 + C31811 * C31961) / C31512;
    const double C12092 =
        (5 * (3 * C32317 + C31927 * C32331) +
         C31927 * (4 * C32331 +
                   C31927 * (3 * C32329 +
                             C31927 * (2 * C31927 * C31803 +
                                       C31927 * (C31803 + C31827 * C31961))))) /
        C31512;
    const double C6309 =
        (3 * (C31970 + ae * C31927 * C31987 + C31757 * C32027) +
         ae * C31927 * C31999 +
         C31757 * (2 * C32027 + ae * C31927 * C31994 +
                   C31757 * (C32024 + ae * C31927 * C32003 +
                             C31757 * (ae * C31927 * C31877 +
                                       C31757 * C31927 * C31826)))) /
        C31517;
    const double C6203 = (4 * (2 * C31936 + C31757 * C31942) +
                          C31757 * (3 * C31942 + C31757 * C31999)) /
                         C31512;
    const double C6304 = (C31927 * (3 * C31942 + C31757 * C31999)) / C31512;
    const double C6305 =
        (2 * C31936 + C31757 * C31942 + C31999 * C31961) / C31512;
    const double C12091 =
        (5 * (3 * C32320 + C31927 * C32324) +
         C31927 * (4 * C32324 +
                   C31927 * (3 * C32034 +
                             C31927 * (2 * C32061 +
                                       C31927 * (C31877 + C31893 * C31961))))) /
        C31512;
    const double C31906 = C31904 * ae;
    const double C32109 = C31758 * C31904;
    const double C875 = 3 * (C32096 + C31849 * C31939) +
                        C31757 * (2 * C32189 + C31757 * C32192);
    const double C1070 = C32096 + C31849 * C31939 + C32192 * C31961;
    const double C1582 = C31927 * (2 * C32189 + C31757 * C32192);
    const double C32297 = C32293 + C32295;
    const double C32274 = C31757 * C32272;
    const double C32637 = C32632 - C32636;
    const double C32851 = C32828 / C31512;
    const double C32644 = C32640 - C32643;
    const double C32865 = C32855 / C31518;
    const double C31558 = C31556 / C31512;
    const double C7785 = C7756 + C7757;
    const double C7783 = C7752 + C7753;
    const double C8837 = C8808 + C8809;
    const double C8835 = C8804 + C8805;
    const double C31546 = C31542 + C32460;
    const double C31573 = C31570 - C31572;
    const double C5272 = C31570 + (0 * ae) / C31512;
    const double C31545 = C32450 - C31541;
    const double C6234 = C6219 + C6220;
    const double C6233 = C6217 + C6218;
    const double C6232 = C6215 + C6216;
    const double C6231 = C6213 + C6214;
    const double C6230 = C6211 + C6212;
    const double C6229 = C6209 + C6210;
    const double C6416 = C6401 + C6402;
    const double C6415 = C6399 + C6400;
    const double C6618 = C6609 + C6610;
    const double C6617 = C6607 + C6608;
    const double C6616 = C6605 + C6606;
    const double C6851 = C6839 + C6840;
    const double C7016 = C7005 + C7006;
    const double C7015 = C7003 + C7004;
    const double C7014 = C7001 + C7002;
    const double C7010 = C6989 + C6990;
    const double C7009 = C6987 + C6988;
    const double C7008 = C6981 + C6982;
    const double C7007 = C6979 + C6980;
    const double C7373 = C7358 + C7359;
    const double C7372 = C7356 + C7357;
    const double C12113 = C12104 + C12105;
    const double C12112 = C12102 + C12103;
    const double C12409 = C12405 + C12406;
    const double C15985 = C15956 + C15957;
    const double C15983 = C15952 + C15953;
    const double C17061 = C17030 + C17031;
    const double C17059 = C17026 + C17027;
    const double C17986 = C32455 * C881;
    const double C17980 = C32455 * C890;
    const double C17970 = C32455 * C248;
    const double C17964 = C32455 * C233;
    const double C17958 = C32455 * C247;
    const double C17952 = C32455 * C232;
    const double C18284 = C32455 * C249;
    const double C18278 = C32455 * C234;
    const double C18272 = C32455 * C246;
    const double C18266 = C32455 * C231;
    const double C18616 = C32455 * C623;
    const double C18610 = C32455 * C633;
    const double C18604 = C32455 * C1076;
    const double C18598 = C32455 * C1091;
    const double C19102 = C32455 * C338;
    const double C19096 = C32455 * C353;
    const double C19090 = C32455 * C1077;
    const double C19084 = C32455 * C1092;
    const double C19074 = C32455 * C352;
    const double C19068 = C32455 * C337;
    const double C19322 = C32455 * C634;
    const double C19316 = C32455 * C624;
    const double C19534 = C32455 * C351;
    const double C19528 = C32455 * C336;
    const double C24647 = C32455 * C1972;
    const double C24641 = C32455 * C1981;
    const double C24958 = C32455 * C354;
    const double C24952 = C32455 * C339;
    const double C32775 = C32455 * C32445;
    const double C32814 = C32780 + C32455;
    const double C5420 = C32845 * C880;
    const double C5414 = C32845 * C889;
    const double C5408 = C32845 * C249;
    const double C5402 = C32845 * C234;
    const double C5396 = C32845 * C246;
    const double C5390 = C32845 * C231;
    const double C5710 = C32845 * C245;
    const double C5704 = C32845 * C230;
    const double C6050 = C32845 * C624;
    const double C6044 = C32845 * C634;
    const double C6038 = C32845 * C1075;
    const double C10562 = C32845 * C1971;
    const double C10556 = C32845 * C1980;
    const double C10550 = C32845 * C354;
    const double C10544 = C32845 * C339;
    const double C10538 = C32845 * C351;
    const double C10532 = C32845 * C336;
    const double C10891 = C32845 * C350;
    const double C10885 = C32845 * C335;
    const double C11073 = C32845 * C1093;
    const double C17984 = C32463 * C880;
    const double C17978 = C32463 * C889;
    const double C17972 = C32463 * C249;
    const double C17966 = C32463 * C234;
    const double C17960 = C32463 * C246;
    const double C17954 = C32463 * C231;
    const double C18274 = C32463 * C245;
    const double C18268 = C32463 * C230;
    const double C18614 = C32463 * C624;
    const double C18608 = C32463 * C634;
    const double C18602 = C32463 * C1075;
    const double C19100 = C32463 * C339;
    const double C19094 = C32463 * C354;
    const double C19082 = C32463 * C1093;
    const double C19076 = C32463 * C351;
    const double C19070 = C32463 * C336;
    const double C19536 = C32463 * C350;
    const double C19530 = C32463 * C335;
    const double C24645 = C32463 * C1971;
    const double C24639 = C32463 * C1980;
    const double C32783 = C32463 / C31518;
    const double C32779 = C32463 * C32445;
    const double C2656 = C32859 - (C32455 * C32446) / C31512;
    const double C31686 = C31684 / C31512;
    const double C31659 = C32542 - C31655;
    const double C31668 = C31664 + C32601;
    const double C31696 = C31693 - C31695;
    const double C32798 = C32597 * C32591;
    const double C32834 = C32800 + C32597;
    const double C32802 = C32604 / C31518;
    const double C32799 = C32604 * C32591;
    const double C7641 = C32863 - (C32597 * C32593) / C31512;
    const double C933 = C899 + C900;
    const double C8055 = C8032 + C8033;
    const double C16255 = C16232 + C16233;
    const double C6417 = C6403 + C6404;
    const double C7787 = C7760 + C7761;
    const double C15987 = C15960 + C15961;
    const double C2024 = C1990 + C1991;
    const double C9271 = C9264 + C9265;
    const double C17512 = C17497 + C17498;
    const double C7374 = C7364 + C7365;
    const double C8848 = C8830 + C8831;
    const double C17063 = C17034 + C17035;
    const double C7198 = C7182 + C7183;
    const double C8360 = C8346 + C8347;
    const double C16560 = C16546 + C16547;
    const double C6615 = C6603 + C6604;
    const double C6852 = C6841 + C6842;
    const double C6854 = C6845 + C6846;
    const double C7013 = C6999 + C7000;
    const double C12304 = C32450 * C1983;
    const double C13797 = C32460 * C1983;
    const double C22864 = C32460 * C1983;
    const double C12856 = C32460 * C2538;
    const double C14663 = C32450 * C2538;
    const double C17043 = C32460 * C2538;
    const double C145 =
        (4 * (2 * C31790 + ae * C31791 + C31758 * C31810) +
         ae * (3 * C31791 + C31758 * C31811) +
         C31758 * (3 * C31810 + ae * C31811 +
                   C31758 * (2 * C31806 + ae * C31807 +
                             C31758 * (C31802 + ae * C31758 * C31803 +
                                       C31758 * (ae * C31803 +
                                                 C31758 * std::pow(C31762, 7) *
                                                     bs[7] * C31768))))) /
        C31517;
    const double C244 =
        (ae * (2 * (C31758 * C31855 + C31854 * ae) +
               C31758 * (C31855 + C31758 * C31851 + C31846 * ae) +
               (C31854 + C31842 * C31783) * ae) +
         C31757 * (2 * C31790 + ae * C31791 + C31758 * C31810)) /
        C31517;
    const double C349 =
        ((zP - zQ) * (2 * C31790 + ae * C31791 + C31758 * C31810)) / C31517;
    const double C355 = (C31776 + ae * C31779 + C31758 * C31790 +
                         C31810 * std::pow(zP - zQ, 2)) /
                        C31517;
    const double C7188 = C6132 * C1072;
    const double C8334 = C31538 * C1072;
    const double C16534 = C15846 * C1072;
    const double C7192 = C6132 * C1081;
    const double C8818 = C31538 * C1081;
    const double C16860 = C15846 * C1081;
    const double C7196 = C6132 * C1087;
    const double C8810 = C31538 * C1087;
    const double C16862 = C15846 * C1087;
    const double C12855 = C31538 * C2535;
    const double C14662 = C6132 * C2535;
    const double C17042 = C15846 * C2535;
    const double C32255 = C32253 + C32248;
    const double C936 = C905 + C906;
    const double C8057 = C8036 + C8037;
    const double C16257 = C16236 + C16237;
    const double C6418 = C6405 + C6406;
    const double C7789 = C7764 + C7765;
    const double C15989 = C15964 + C15965;
    const double C2027 = C1996 + C1997;
    const double C9273 = C9268 + C9269;
    const double C17514 = C17501 + C17502;
    const double C7375 = C7366 + C7367;
    const double C8846 = C8826 + C8827;
    const double C17065 = C17038 + C17039;
    const double C7199 = C7184 + C7185;
    const double C8358 = C8342 + C8343;
    const double C16558 = C16542 + C16543;
    const double C12306 = C12299 + C12300;
    const double C12879 = C12863 + C12864;
    const double C17072 = C17050 + C17051;
    const double C887 =
        (3 * (C31791 + C31757 * C32191 + C32189 * ae) +
         C31757 * (2 * C32191 +
                   C31757 * (C31807 + C31757 * (C31757 * C31831 + C31901) +
                             C31757 * C31899 * ae) +
                   C32192 * ae) +
         (2 * C32189 + C31757 * C32192) * ae) /
        C31512;
    const double C1071 =
        (C31927 * (C31791 + C31757 * C32191 + C32189 * ae)) / C31512;
    const double C1082 =
        (C31757 * C31791 + C32096 * ae + C32191 * C31961) / C31512;
    const double C1088 =
        (C31791 + C31757 * C32191 + C32189 * ae +
         (C31807 + C31757 * (C31757 * C31831 + C31901) + C31757 * C31899 * ae) *
             C31961) /
        C31512;
    const double C1588 =
        (C31927 * (2 * C32191 +
                   C31757 * (C31807 + C31757 * (C31757 * C31831 + C31901) +
                             C31757 * C31899 * ae) +
                   C32192 * ae)) /
        C31512;
    const double C2536 =
        (2 * C31927 * C32191 +
         C31927 * (C32191 + (C31757 * C31831 + C31901) * C31961)) /
        C31512;
    const double C919 = C756 * C876;
    const double C8052 = C31538 * C876;
    const double C16252 = C15846 * C876;
    const double C223 = (C31757 * (3 * C31791 + C31758 * C31811) +
                         (3 * C32096 + C31758 * C32106) * ae) /
                        C31512;
    const double C241 =
        (2 * C31779 + C31758 * C31791 +
         C31757 * (C31757 * C31811 + C32106 * ae) + C31757 * C32106 * ae) /
        C31512;
    const double C631 = (C31927 * (C31757 * C31811 + C32106 * ae)) / C31512;
    const double C124 = 4 * (2 * C32094 + C31758 * C32096) +
                        C31758 * (3 * C32096 + C31758 * C32106);
    const double C213 = C31757 * (3 * C32096 + C31758 * C32106);
    const double C221 = 2 * C32094 + C31758 * C32096 + C32106 * C31939;
    const double C318 = C31927 * (3 * C32096 + C31758 * C32106);
    const double C326 = 2 * C32094 + C31758 * C32096 + C32106 * C31961;
    const double C621 = C31927 * C31757 * C32106;
    const double C1244 =
        2 * C31757 * C32106 + C31757 * (C32106 + C31904 * C31939);
    const double C1430 = C31927 * (C32106 + C31904 * C31939);
    const double C2192 = C31757 * C32106 + C31757 * C31904 * C31961;
    const double C2342 =
        2 * C31927 * C32106 + C31927 * (C32106 + C31904 * C31961);
    const double C2545 = C756 * C1067;
    const double C13082 = C31538 * C1067;
    const double C17287 = C15846 * C1067;
    const double C32296 = C31793 + C32294;
    const double C6413 = C6132 * C886;
    const double C7774 = C31538 * C886;
    const double C15974 = C15846 * C886;
    const double C8326 = C31538 * C1587;
    const double C9916 = C6132 * C1587;
    const double C16526 = C15846 * C1587;
    const double C6411 = C6132 * C874;
    const double C7778 = C31538 * C874;
    const double C15978 = C15846 * C874;
    const double C7194 = C6132 * C1069;
    const double C8814 = C31538 * C1069;
    const double C16866 = C15846 * C1069;
    const double C8330 = C31538 * C1581;
    const double C9914 = C6132 * C1581;
    const double C16530 = C15846 * C1581;
    const double C31883 = C31882 + C31878;
    const double C1590 =
        (2 * (ae * C31927 * C31851 + C31757 * C31972) + ae * C31927 * C31949 +
         C31757 *
             (C31972 + ae * C31927 * C31757 * C31880 +
              C31757 * (ae * C31927 * C31880 + C31757 * C31927 * C31830))) /
        C31517;
    const double C883 = (3 * (C31865 + C31851 * C31939) +
                         C31757 * (2 * C31944 + C31757 * C31949)) /
                        C31512;
    const double C1084 = (C31865 + C31851 * C31939 + C31949 * C31961) / C31512;
    const double C1584 = (C31927 * (2 * C31944 + C31757 * C31949)) / C31512;
    const double C32048 = C31806 + C32044;
    const double C12289 =
        (4 * (2 * C31927 * C31851 + C31927 * C32336) +
         C31927 *
             (3 * C32336 +
              C31927 * (2 * C32054 + C31927 * (C31880 + C31900 * C31961)))) /
        C31512;
    const double C32273 = C32271 + C32266;
    const double C12396 =
        (4 * (2 * C31927 * C32247 + C31927 * C32345) +
         C31927 * (3 * C32345 +
                   C31927 * (2 * C31927 * C32265 +
                             C31927 * (C32265 +
                                       (C31757 * C31827 + C31894) * C31961)))) /
        C31512;
    const double C6200 = 4 * (2 * C32177 + C31757 * C32180) +
                         C31757 * (3 * C32180 + C31757 * C32254);
    const double C6300 = C31927 * (3 * C32180 + C31757 * C32254);
    const double C6301 = 2 * C32177 + C31757 * C32180 + C32254 * C31961;
    const double C7525 =
        2 * C31927 * C32254 + C31927 * (C32254 + C32272 * C31961);
    const double C12088 =
        5 * (3 * C32427 + C31927 * C32434) +
        C31927 * (4 * C32434 +
                  C31927 * (3 * C32432 +
                            C31927 * (2 * C31927 * C31843 +
                                      C31927 * (C31843 + C31891 * C31961))));
    const double C31870 = C31869 + C31868;
    const double C892 =
        (3 * (C31790 + ae * C31944 + C31757 * C31948) +
         ae * (2 * C31944 + C31757 * C31949) +
         C31757 * (2 * C31948 + ae * C31949 +
                   C31757 * (C31806 + ae * C31757 * C31880 +
                             C31757 * (ae * C31880 + C31757 * C31830)))) /
        C31517;
    const double C1596 = C749 * C1090;
    const double C6032 = C32845 * C1090;
    const double C7189 = C32450 * C1090;
    const double C8335 = C32460 * C1090;
    const double C9057 = C32776 * C1090;
    const double C16535 = C32460 * C1090;
    const double C18596 = C32463 * C1090;
    const double C20386 = C15839 * C1090;
    const double C7197 = C32450 * C1096;
    const double C8811 = C32460 * C1096;
    const double C16863 = C32460 * C1096;
    const double C2544 = C749 * C1078;
    const double C7191 = C32450 * C1078;
    const double C8823 = C32460 * C1078;
    const double C11067 = C32845 * C1078;
    const double C13081 = C32776 * C1078;
    const double C16857 = C32460 * C1078;
    const double C17286 = C15839 * C1078;
    const double C19088 = C32463 * C1078;
    const double C12860 = C32460 * C2532;
    const double C14661 = C32450 * C2532;
    const double C17047 = C32460 * C2532;
    const double C6420 = C6409 + C6410;
    const double C7793 = C7772 + C7773;
    const double C15993 = C15972 + C15973;
    const double C6419 = C6407 + C6408;
    const double C7791 = C7768 + C7769;
    const double C15991 = C15968 + C15969;
    const double C7200 = C7186 + C7187;
    const double C8356 = C8338 + C8339;
    const double C16556 = C16538 + C16539;
    const double C12305 = C12297 + C12298;
    const double C12881 = C12867 + C12868;
    const double C17074 = C17054 + C17055;
    const double C12307 = C12301 + C12302;
    const double C13809 = C13800 + C13801;
    const double C22876 = C22867 + C22868;
    const double C6236 = C6223 + C6224;
    const double C6613 = C6599 + C6600;
    const double C6235 = C6221 + C6222;
    const double C6853 = C6843 + C6844;
    const double C6614 = C6601 + C6602;
    const double C7012 = C6997 + C6998;
    const double C6206 =
        (4 * (2 * C31940 + ae * C31942 + C31757 * C31998) +
         ae * (3 * C31942 + C31757 * C31999) +
         C31757 *
             (3 * C31998 + ae * C31999 +
              C31757 * (2 * C31992 + ae * C31994 +
                        C31757 * (C31802 + ae * C31757 * C31877 +
                                  C31757 * (ae * C31877 + C31757 * C31826))))) /
        C31517;
    const double C12115 = C12108 + C12109;
    const double C31837 = C31758 * C31835;
    const double C2344 =
        (2 * C31927 * C31811 + C31927 * (C31811 + C31835 * C31961)) / C31512;
    const double C31836 = C31758 * C31834;
    const double C31953 = C31757 * C31834;
    const double C31974 = C31927 * C31834;
    const double C1979 =
        (2 * C31927 * C31810 + C31927 * (C31810 + C31834 * C31961)) / C31517;
    const double C32049 = C31757 * C32045;
    const double C32058 = C32056 + C32057;
    const double C7354 =
        (2 * C31972 + C31927 * C32075 +
         ae * (2 * C31927 * C32040 +
               C31927 * (C32040 + C31757 * C31900 * C31961)) +
         C31757 * (ae * (2 * C32054 + C31927 * (C31880 + C31900 * C31961)) +
                   C31757 * (2 * C32055 +
                             C31927 * (C31830 + (ae * C31827 +
                                                 C31758 * std::pow(C31760, 8) *
                                                     bs[8] * C31768) *
                                                    C31961)))) /
        C31517;
    const double C12205 =
        (ae * (3 * (C31851 + C31880 * C31961) +
               C31927 * (2 * C32054 + C31927 * (C31880 + C31900 * C31961))) +
         C31757 * (3 * C32075 +
                   C31927 * (2 * C32055 +
                             C31927 * (C31830 + (ae * C31827 +
                                                 C31758 * std::pow(C31760, 8) *
                                                     bs[8] * C31768) *
                                                    C31961)))) /
        C31517;
    const double C12291 =
        (4 * (2 * C31972 + C31927 * C32075) +
         C31927 * (3 * C32075 +
                   C31927 * (2 * C32055 +
                             C31927 * (C31830 + (ae * C31827 +
                                                 C31758 * std::pow(C31760, 8) *
                                                     bs[8] * C31768) *
                                                    C31961)))) /
        C31517;
    const double C32018 = C31757 * C32016;
    const double C7528 =
        (2 * (ae * (2 * C32023 + C31927 * C32034) + C31757 * C32080) +
         ae * (2 * C31927 * C31994 + C31927 * (C31994 + C32012 * C31961)) +
         C31757 *
             (C32080 +
              ae * (2 * C32060 + C31927 * (C32003 + C31757 * C31893 * C31961)) +
              C31757 *
                  (ae * (2 * C32061 + C31927 * (C31877 + C31893 * C31961)) +
                   C31757 * (2 * C32062 +
                             C31927 * (C31826 + std::pow(C31760, 8) * bs[8] *
                                                    C31768 * C31961))))) /
        C31517;
    const double C12093 = (4 * (2 * C31970 + C31927 * C32030) +
                           C31927 * (3 * C32030 + C31927 * C32080)) /
                          C31517;
    const double C12094 =
        (5 * (3 * C32030 + C31927 * C32080) +
         C31927 * (4 * C32080 +
                   C31927 * (3 * C32035 +
                             C31927 * (2 * C32062 +
                                       C31927 * (C31826 + std::pow(C31760, 8) *
                                                              bs[8] * C31768 *
                                                              C31961))))) /
        C31517;
    const double C12397 =
        (ae * (4 * (2 * C32023 + C31927 * C32034) +
               C31927 * (3 * C32034 +
                         C31927 * (2 * C32061 +
                                   C31927 * (C31877 + C31893 * C31961)))) +
         C31757 * (4 * C32080 +
                   C31927 * (3 * C32035 +
                             C31927 * (2 * C32062 +
                                       C31927 * (C31826 + std::pow(C31760, 8) *
                                                              bs[8] * C31768 *
                                                              C31961))))) /
        C31517;
    const double C12410 = C12407 + C12408;
    const double C32069 = C32066 + C32068;
    const double C31907 = C31905 + C31898;
    const double C32050 = C31757 * C32047;
    const double C7180 =
        (2 * (ae * (C31851 + C31880 * C31961) + C31757 * C32075) +
         ae * (C31949 + C32047 * C31961) +
         C31757 * (C32075 + ae * (C32040 + C31757 * C31900 * C31961) +
                   C31757 * (ae * (C31880 + C31900 * C31961) +
                             C31757 * (C31830 + (ae * C31827 +
                                                 C31758 * std::pow(C31760, 8) *
                                                     bs[8] * C31768) *
                                                    C31961)))) /
        C31517;
    const double C7352 =
        (2 * C31927 * C31949 + C31927 * (C31949 + C32047 * C31961)) / C31512;
    const double C32019 = C31757 * C32017;
    const double C6311 =
        (3 * (C32030 + ae * (C31987 + C32003 * C31961) + C31757 * C32038) +
         ae * (C31999 + C32017 * C31961) +
         C31757 * (2 * C32038 + ae * (C31994 + C32012 * C31961) +
                   C31757 * (C32035 + ae * (C32003 + C31757 * C31893 * C31961) +
                             C31757 * (ae * (C31877 + C31893 * C31961) +
                                       C31757 * (C31826 + std::pow(C31760, 8) *
                                                              bs[8] * C31768 *
                                                              C31961))))) /
        C31517;
    const double C7526 =
        (2 * C31927 * C31999 + C31927 * (C31999 + C32017 * C31961)) / C31512;
    const double C2369 = C756 * C346;
    const double C6596 = C32450 * C6309;
    const double C6228 = C32450 * C6203;
    const double C6598 = C32450 * C6304;
    const double C6850 = C32450 * C6305;
    const double C1246 =
        (2 * (C31757 * C31811 + C32106 * ae) +
         C31757 * (C31811 + C31757 * (C31757 * C31835 + C31906) +
                   C31757 * C31904 * ae) +
         (C32106 + C31904 * C31939) * ae) /
        C31512;
    const double C1432 =
        (C31927 * (C31811 + C31757 * (C31757 * C31835 + C31906) +
                   C31757 * C31904 * ae)) /
        C31512;
    const double C2194 =
        (C31757 * C31811 + C32106 * ae + (C31757 * C31835 + C31906) * C31961) /
        C31512;
    const double C32110 = C32108 + C32109;
    const double C6394 = 4 * (2 * C32183 + C31757 * C32186) +
                         C31757 * (3 * C32186 + C31757 * C32297);
    const double C6504 = C31927 * (3 * C32186 + C31757 * C32297);
    const double C7177 = 2 * C32183 + C31757 * C32186 + C32297 * C31961;
    const double C32276 = C32264 + C32274;
    const double C32804 = C32637 * C32631;
    const double C32840 = C32806 + C32637;
    const double C32808 = C32644 / C31518;
    const double C32805 = C32644 * C32631;
    const double C13591 = C32865 - (C32637 * C32633) / C31512;
    const double C31561 = C31552 - C31558;
    const double C31551 = C31546 * be;
    const double C17981 = C31573 * C870;
    const double C17975 = C31573 * C876;
    const double C17973 = C31573 * C240;
    const double C17967 = C31573 * C220;
    const double C17961 = C31573 * C225;
    const double C17955 = C31573 * C215;
    const double C18275 = C31573 * C224;
    const double C18269 = C31573 * C214;
    const double C18611 = C31573 * C620;
    const double C18605 = C31573 * C630;
    const double C18599 = C31573 * C1062;
    const double C19097 = C31573 * C325;
    const double C19091 = C31573 * C345;
    const double C19085 = C31573 * C1067;
    const double C19077 = C31573 * C330;
    const double C19071 = C31573 * C320;
    const double C19537 = C31573 * C329;
    const double C19531 = C31573 * C319;
    const double C24642 = C31573 * C1961;
    const double C24636 = C31573 * C1967;
    const double C24961 = C31573 * C346;
    const double C117 =
        (C31573 / C31518 + (0 * ae) / C31512) / C31518 - (0 * be) / C31512;
    const double C2665 = C31573 / C31518 - (0 * be) / C31512;
    const double C15056 = C31573 / C31518 + (0 * ae) / C31512;
    const double C5417 = C5272 * C870;
    const double C5411 = C5272 * C876;
    const double C5409 = C5272 * C240;
    const double C5403 = C5272 * C220;
    const double C5397 = C5272 * C225;
    const double C5391 = C5272 * C215;
    const double C5711 = C5272 * C224;
    const double C5705 = C5272 * C214;
    const double C6047 = C5272 * C620;
    const double C6041 = C5272 * C630;
    const double C6035 = C5272 * C1062;
    const double C10559 = C5272 * C1961;
    const double C10553 = C5272 * C1967;
    const double C10551 = C5272 * C345;
    const double C10545 = C5272 * C325;
    const double C10539 = C5272 * C330;
    const double C10533 = C5272 * C320;
    const double C10904 = C5272 * C346;
    const double C10892 = C5272 * C329;
    const double C10886 = C5272 * C319;
    const double C11068 = C5272 * C1067;
    const double C31550 = C31545 * ae;
    const double C754 =
        ((-C31513 / C31512) / C31518 - (C31531 * be) / C31512) / C31518 -
        ((C31510 * ((-C31520) / C31518 - (C31545 * be) / C31512) + C15839) *
         be) /
            C31512 +
        (-C31532 / C31512) / C31518 - (0 * be) / C31512;
    const double C755 =
        ((-C31520) / C31518 - (C31545 * be) / C31512) / C31518 -
        ((C31510 * ((-C31532 / C31512) / C31518 - (0 * be) / C31512) + C32460) *
         be) /
            C31512;
    const double C15845 = (-C31520) / C31518 - (C31545 * be) / C31512;
    const double C6983 = C6618 * C5274;
    const double C7530 = C6618 * C5273;
    const double C11414 = C6618 * C758;
    const double C11885 = C6618 * C757;
    const double C12399 = C6618 * C118;
    const double C14510 = C6618 * C2667;
    const double C14938 = C6618 * C2666;
    const double C28200 = C6618 * C15058;
    const double C6984 = C6617 * C5268;
    const double C7531 = C6617 * C5267;
    const double C11415 = C6617 * C32849;
    const double C11886 = C6617 * C32861;
    const double C12400 = C6617 * C32542;
    const double C14511 = C6617 * C32601;
    const double C14939 = C6617 * C32795;
    const double C28201 = C6617 * C32601;
    const double C28623 = C6617 * C15051;
    const double C31014 = C6617 * C32604;
    const double C31485 = C6617 * C32597;
    const double C6985 = C6616 * C5275;
    const double C7532 = C6616 * C5274;
    const double C11416 = C6616 * C759;
    const double C11887 = C6616 * C758;
    const double C14940 = C6616 * C2667;
    const double C28624 = C6616 * C15058;
    const double C6991 = C6851 * C5274;
    const double C7536 = C6851 * C5273;
    const double C11420 = C6851 * C758;
    const double C11891 = C6851 * C757;
    const double C12401 = C6851 * C118;
    const double C14514 = C6851 * C2667;
    const double C14942 = C6851 * C2666;
    const double C28204 = C6851 * C15058;
    const double C7026 = C7016 * C5273;
    const double C11429 = C7016 * C757;
    const double C12100 = C7016 * C118;
    const double C14516 = C7016 * C2666;
    const double C7025 = C7015 * C5267;
    const double C11428 = C7015 * C32861;
    const double C12101 = C7015 * C32542;
    const double C14517 = C7015 * C32795;
    const double C28207 = C7015 * C15051;
    const double C31027 = C7015 * C32597;
    const double C7024 = C7014 * C5274;
    const double C11427 = C7014 * C758;
    const double C12403 = C7014 * C118;
    const double C14518 = C7014 * C2667;
    const double C14946 = C7014 * C2666;
    const double C28208 = C7014 * C15058;
    const double C7020 = C7010 * C5267;
    const double C11419 = C7010 * C32861;
    const double C12099 = C7010 * C32542;
    const double C14513 = C7010 * C32795;
    const double C28203 = C7010 * C15051;
    const double C31018 = C7010 * C32597;
    const double C7019 = C7009 * C5273;
    const double C11418 = C7009 * C757;
    const double C12098 = C7009 * C118;
    const double C14512 = C7009 * C2666;
    const double C7018 = C7008 * C5267;
    const double C11413 = C7008 * C32861;
    const double C12097 = C7008 * C32542;
    const double C14509 = C7008 * C32795;
    const double C28199 = C7008 * C15051;
    const double C31012 = C7008 * C32597;
    const double C7017 = C7007 * C5273;
    const double C11412 = C7007 * C757;
    const double C12096 = C7007 * C118;
    const double C14508 = C7007 * C2666;
    const double C7377 = C7373 * C5267;
    const double C11728 = C7373 * C32861;
    const double C12294 = C7373 * C32542;
    const double C14797 = C7373 * C32795;
    const double C28481 = C7373 * C15051;
    const double C31327 = C7373 * C32597;
    const double C7376 = C7372 * C5273;
    const double C11727 = C7372 * C757;
    const double C12293 = C7372 * C118;
    const double C14796 = C7372 * C2666;
    const double C12117 = C12113 * C32542;
    const double C14522 = C12113 * C32795;
    const double C28212 = C12113 * C15051;
    const double C12116 = C12112 * C118;
    const double C14523 = C12112 * C2666;
    const double C12411 = C12409 * C118;
    const double C14521 = C12409 * C2667;
    const double C28211 = C12409 * C15058;
    const double C32810 = C32775 / C31512;
    const double C32846 = C32814 / C31518;
    const double C32847 = C32816 + C32783;
    const double C2658 = C32783 - C32461 / C31524;
    const double C32813 = C32779 / C31512;
    const double C2798 = C2656 * C233;
    const double C2790 = C2656 * C248;
    const double C2776 = C2656 * C247;
    const double C2768 = C2656 * C232;
    const double C3052 = C2656 * C246;
    const double C3044 = C2656 * C231;
    const double C3342 = C2656 * C623;
    const double C3334 = C2656 * C633;
    const double C3678 = C2656 * C338;
    const double C3670 = C2656 * C353;
    const double C3656 = C2656 * C352;
    const double C3648 = C2656 * C337;
    const double C3964 = C2656 * C351;
    const double C3956 = C2656 * C336;
    const double C31688 = C31683 - C31686;
    const double C31663 = C31659 * ae;
    const double C15057 = (-C31645) / C31518 - (C31659 * be) / C31512;
    const double C31672 = C31668 * be;
    const double C31015 = C6616 * C31696;
    const double C6137 =
        (C31696 / C31518 + (0 * ae) / C31512) / C31518 - (0 * be) / C31512;
    const double C7650 = C31696 / C31518 - (0 * be) / C31512;
    const double C15850 = C31696 / C31518 + (0 * ae) / C31512;
    const double C32831 = C32798 / C31512;
    const double C32853 = C32834 / C31518;
    const double C32854 = C32835 + C32802;
    const double C7643 = C32802 - C32602 / C31524;
    const double C32833 = C32799 / C31512;
    const double C9782 = C7010 * C7641;
    const double C9769 = C7008 * C7641;
    const double C10051 = C7373 * C7641;
    const double C10189 = C6617 * C7641;
    const double C7378 = C7374 * C5273;
    const double C11733 = C7374 * C757;
    const double C12295 = C7374 * C118;
    const double C14800 = C7374 * C2666;
    const double C7360 = C7198 * C5274;
    const double C11729 = C7198 * C758;
    const double C14798 = C7198 * C2667;
    const double C28482 = C7198 * C15058;
    const double C6986 = C6615 * C32826;
    const double C7533 = C6615 * C5268;
    const double C11417 = C6615 * C32826;
    const double C11888 = C6615 * C32849;
    const double C14941 = C6615 * C32601;
    const double C28625 = C6615 * C32601;
    const double C31016 = C6615 * C17833;
    const double C31487 = C6615 * C32604;
    const double C6992 = C6852 * C5268;
    const double C7537 = C6852 * C5267;
    const double C11421 = C6852 * C32849;
    const double C11892 = C6852 * C32861;
    const double C12402 = C6852 * C32542;
    const double C14515 = C6852 * C32601;
    const double C14943 = C6852 * C32795;
    const double C28205 = C6852 * C32601;
    const double C28627 = C6852 * C15051;
    const double C31020 = C6852 * C32604;
    const double C31491 = C6852 * C32597;
    const double C6994 = C6854 * C32826;
    const double C7539 = C6854 * C5268;
    const double C11423 = C6854 * C32826;
    const double C11894 = C6854 * C32849;
    const double C14945 = C6854 * C32601;
    const double C28629 = C6854 * C32601;
    const double C31022 = C6854 * C17833;
    const double C31493 = C6854 * C32604;
    const double C7023 = C7013 * C5268;
    const double C11426 = C7013 * C32849;
    const double C12404 = C7013 * C32542;
    const double C14519 = C7013 * C32601;
    const double C14947 = C7013 * C32795;
    const double C28209 = C7013 * C32601;
    const double C28631 = C7013 * C15051;
    const double C31025 = C7013 * C32604;
    const double C12308 = C12303 + C12304;
    const double C13807 = C13796 + C13797;
    const double C22874 = C22863 + C22864;
    const double C1260 = C32815 * C244;
    const double C2782 = C32830 * C244;
    const double C5712 = C32815 * C244;
    const double C15173 = C32830 * C244;
    const double C18276 = C17830 * C244;
    const double C2358 = C32815 * C349;
    const double C3662 = C32830 * C349;
    const double C10893 = C32815 * C349;
    const double C19538 = C17830 * C349;
    const double C21094 = C32830 * C349;
    const double C2009 = C32815 * C355;
    const double C2368 = C749 * C355;
    const double C10552 = C32815 * C355;
    const double C10903 = C32845 * C355;
    const double C13293 = C32460 * C355;
    const double C17510 = C32460 * C355;
    const double C19092 = C17830 * C355;
    const double C24960 = C32463 * C355;
    const double C7203 = C7192 + C7193;
    const double C8842 = C8818 + C8819;
    const double C16873 = C16860 + C16861;
    const double C12875 = C12855 + C12856;
    const double C14665 = C14662 + C14663;
    const double C17068 = C17042 + C17043;
    const double C6202 =
        (4 * (2 * C32179 + C31757 * C32255 + C32180 * ae) +
         C31757 *
             (3 * C32255 +
              C31757 * (2 * C32247 +
                        C31757 * (C31787 + C31757 * (C31757 * C31803 + C31874) +
                                  C31757 * C31843 * ae) +
                        C32249 * ae) +
              C32254 * ae) +
         (3 * C32180 + C31757 * C32254) * ae) /
        C31512;
    const double C7379 = C7375 * C5267;
    const double C11734 = C7375 * C32861;
    const double C12296 = C7375 * C32542;
    const double C14801 = C7375 * C32795;
    const double C28485 = C7375 * C15051;
    const double C31333 = C7375 * C32597;
    const double C7361 = C7199 * C5268;
    const double C11730 = C7199 * C32849;
    const double C14799 = C7199 * C32601;
    const double C28483 = C7199 * C32601;
    const double C31329 = C7199 * C32604;
    const double C12310 = C12306 * C32542;
    const double C14805 = C12306 * C32795;
    const double C28489 = C12306 * C15051;
    const double C1593 = C756 * C1071;
    const double C6029 = C5272 * C1071;
    const double C9058 = C31538 * C1071;
    const double C18593 = C31573 * C1071;
    const double C20387 = C15846 * C1071;
    const double C2551 = C756 * C1082;
    const double C11074 = C5272 * C1082;
    const double C13086 = C31538 * C1082;
    const double C17291 = C15846 * C1082;
    const double C19079 = C31573 * C1082;
    const double C1271 = C756 * C241;
    const double C5723 = C5272 * C241;
    const double C18287 = C31573 * C241;
    const double C4751 = C756 * C631;
    const double C19325 = C31573 * C631;
    const double C26784 = C5272 * C631;
    const double C1265 = C756 * C221;
    const double C5717 = C5272 * C221;
    const double C18281 = C31573 * C221;
    const double C2363 = C756 * C326;
    const double C10898 = C5272 * C326;
    const double C24955 = C31573 * C326;
    const double C4745 = C756 * C621;
    const double C19319 = C31573 * C621;
    const double C26778 = C5272 * C621;
    const double C32298 = C32296 + C32291;
    const double C31884 = C31758 * C31883;
    const double C31888 = 3 * C31883;
    const double C31952 = ae * C31883;
    const double C31951 = C31757 * C31883;
    const double C8327 = C32460 * C1590;
    const double C9917 = C32450 * C1590;
    const double C16527 = C32460 * C1590;
    const double C6412 = C32450 * C883;
    const double C7779 = C32460 * C883;
    const double C15979 = C32460 * C883;
    const double C7195 = C32450 * C1084;
    const double C8815 = C32460 * C1084;
    const double C16867 = C32460 * C1084;
    const double C8331 = C32460 * C1584;
    const double C9915 = C32450 * C1584;
    const double C16531 = C32460 * C1584;
    const double C32275 = C31757 * C32273;
    const double C6969 =
        (2 * C31927 * C32255 + C31927 * (C32255 + C32273 * C31961)) / C31512;
    const double C6974 =
        (3 * (C32255 + C32273 * C31961) +
         C31927 *
             (2 * C31927 * C32273 +
              C31927 * (C32273 + (C31803 + C31757 * (C31757 * C31827 + C31894) +
                                  C31757 * C31891 * ae) *
                                     C31961))) /
        C31512;
    const double C6227 = C6132 * C6200;
    const double C6597 = C6132 * C6300;
    const double C6849 = C6132 * C6301;
    const double C250 =
        (C31776 + ae * C31779 + C31758 * C31790 + ae * C31757 * C31870 +
         C31757 * (ae * C31870 + C31757 * C31810)) /
        C31517;
    const double C635 =
        (ae * C31927 * C31870 + C31757 * C31927 * C31810) / C31517;
    const double C888 = (2 * (ae * C31870 + C31757 * C31810) +
                         ae * (C31870 + C31883 * std::pow(C31757, 2)) +
                         C31757 * (C31810 + ae * C31757 * C31883 +
                                   C31757 * (ae * C31883 + C31757 * C31834))) /
                        C31517;
    const double C1094 = (ae * (C31870 + C31883 * C31961) +
                          C31757 * (C31810 + C31834 * C31961)) /
                         C31517;
    const double C130 = (3 * (C31861 + C31758 * C31865 + C32094 * ae) +
                         C31758 * (2 * C31865 + C31758 * C31870 + C32096 * ae) +
                         (2 * C32094 + C31758 * C32096) * ae) /
                        C31512;
    const double C229 =
        (C31757 * (2 * C31865 + C31758 * C31870 + C32096 * ae)) / C31512;
    const double C235 =
        (C31861 + C31758 * C31865 + C32094 * ae + C31870 * C31939) / C31512;
    const double C334 =
        (C31927 * (2 * C31865 + C31758 * C31870 + C32096 * ae)) / C31512;
    const double C340 =
        (C31861 + C31758 * C31865 + C32094 * ae + C31870 * C31961) / C31512;
    const double C625 = (C31927 * C31757 * C31870) / C31512;
    const double C879 =
        (2 * C31757 * C31870 + C31757 * (C31870 + C31883 * C31939)) / C31512;
    const double C1074 = (C31927 * (C31870 + C31883 * C31939)) / C31512;
    const double C1970 =
        (2 * C31927 * C31870 + C31927 * (C31870 + C31883 * C31961)) / C31512;
    const double C6414 = C32450 * C892;
    const double C7775 = C32460 * C892;
    const double C15975 = C32460 * C892;
    const double C7201 = C7188 + C7189;
    const double C8354 = C8334 + C8335;
    const double C16554 = C16534 + C16535;
    const double C7205 = C7196 + C7197;
    const double C8838 = C8810 + C8811;
    const double C16874 = C16862 + C16863;
    const double C7202 = C7190 + C7191;
    const double C8844 = C8822 + C8823;
    const double C16871 = C16856 + C16857;
    const double C12877 = C12859 + C12860;
    const double C14664 = C14660 + C14661;
    const double C17070 = C17046 + C17047;
    const double C7362 = C7200 * C5275;
    const double C11731 = C7200 * C759;
    const double C31330 = C7200 * C31696;
    const double C12309 = C12305 * C118;
    const double C14804 = C12305 * C2666;
    const double C12311 = C12307 * C118;
    const double C7535 = C6613 * C32826;
    const double C9775 = C6613 * C32836;
    const double C11890 = C6613 * C32826;
    const double C27489 = C6613 * C32836;
    const double C31489 = C6613 * C17833;
    const double C6993 = C6853 * C5275;
    const double C7538 = C6853 * C5274;
    const double C11422 = C6853 * C759;
    const double C11893 = C6853 * C758;
    const double C14944 = C6853 * C2667;
    const double C28628 = C6853 * C15058;
    const double C31021 = C6853 * C31696;
    const double C7534 = C6614 * C5275;
    const double C11889 = C6614 * C759;
    const double C31488 = C6614 * C31696;
    const double C7022 = C7012 * C5275;
    const double C11425 = C7012 * C759;
    const double C14948 = C7012 * C2667;
    const double C28632 = C7012 * C15058;
    const double C31024 = C7012 * C31696;
    const double C6226 = C32450 * C6206;
    const double C12119 = C12115 * C118;
    const double C31839 = C31819 + C31837;
    const double C31838 = C31820 + C31836;
    const double C1984 =
        (3 * (C31810 + C31834 * C31961) +
         C31927 * (2 * C31974 +
                   C31927 * (C31834 + (C31826 + ae * C31758 * C31827 +
                                       C31758 * (ae * C31827 +
                                                 C31758 * std::pow(C31760, 8) *
                                                     bs[8] * C31768)) *
                                          C31961))) /
        C31517;
    const double C2011 = C32815 * C1979;
    const double C10554 = C32815 * C1979;
    const double C14079 = C32460 * C1979;
    const double C23146 = C32460 * C1979;
    const double C24637 = C17830 * C1979;
    const double C32051 = C32048 + C32049;
    const double C32020 = C32008 + C32018;
    const double C12107 = C32450 * C12093;
    const double C12412 = C12410 * C32542;
    const double C14520 = C12410 * C32601;
    const double C28210 = C12410 * C32601;
    const double C31908 = C31758 * C31907;
    const double C31954 = C31907 * C31939;
    const double C2539 =
        (ae * (2 * C31927 * C31883 + C31927 * (C31883 + C31907 * C31961)) +
         C31757 * (2 * C31974 +
                   C31927 * (C31834 + (C31826 + ae * C31758 * C31827 +
                                       C31758 * (ae * C31827 +
                                                 C31758 * std::pow(C31760, 8) *
                                                     bs[8] * C31768)) *
                                          C31961))) /
        C31517;
    const double C1975 =
        (3 * (C31870 + C31883 * C31961) +
         C31927 * (2 * C31927 * C31883 + C31927 * (C31883 + C31907 * C31961))) /
        C31512;
    const double C32052 = C32046 + C32050;
    const double C32021 = C32006 + C32019;
    const double C125 = 5 * (3 * C32096 + C31758 * C32106) +
                        C31758 * (4 * C32106 + C31758 * C32110);
    const double C222 = 3 * C32096 + C31758 * C32106 + C32110 * C31939;
    const double C327 = 3 * C32096 + C31758 * C32106 + C32110 * C31961;
    const double C444 = C31757 * (4 * C32106 + C31758 * C32110);
    const double C532 = C31927 * (4 * C32106 + C31758 * C32110);
    const double C622 = C31927 * C31757 * C32110;
    const double C6201 = 5 * (3 * C32180 + C31757 * C32254) +
                         C31757 * (4 * C32254 + C31757 * C32276);
    const double C6302 = 3 * C32180 + C31757 * C32254 + C32276 * C31961;
    const double C6590 = C31927 * (4 * C32254 + C31757 * C32276);
    const double C32837 = C32804 / C31512;
    const double C32856 = C32840 / C31518;
    const double C32857 = C32841 + C32808;
    const double C13593 = C32808 - C32642 / C31524;
    const double C32839 = C32805 / C31512;
    const double C31555 = C31551 / C31512;
    const double C17992 = C17961 + C17962;
    const double C17989 = C17955 + C17956;
    const double C19108 = C19077 + C19078;
    const double C19105 = C19071 + C19072;
    const double C2791 = C2665 * C221;
    const double C2783 = C2665 * C241;
    const double C2781 = C2665 * C224;
    const double C2773 = C2665 * C214;
    const double C3057 = C2665 * C223;
    const double C3049 = C2665 * C213;
    const double C3335 = C2665 * C621;
    const double C3327 = C2665 * C631;
    const double C3671 = C2665 * C326;
    const double C3663 = C2665 * C346;
    const double C3661 = C2665 * C329;
    const double C3653 = C2665 * C319;
    const double C3969 = C2665 * C328;
    const double C3961 = C2665 * C318;
    const double C15182 = C15056 * C221;
    const double C15174 = C15056 * C241;
    const double C15172 = C15056 * C224;
    const double C15164 = C15056 * C214;
    const double C15448 = C15056 * C223;
    const double C15440 = C15056 * C213;
    const double C15726 = C15056 * C621;
    const double C15718 = C15056 * C631;
    const double C21103 = C15056 * C326;
    const double C21095 = C15056 * C346;
    const double C21093 = C15056 * C329;
    const double C21085 = C15056 * C319;
    const double C21401 = C15056 * C328;
    const double C21393 = C15056 * C318;
    const double C5428 = C5397 + C5398;
    const double C5425 = C5391 + C5392;
    const double C10570 = C10539 + C10540;
    const double C10567 = C10533 + C10534;
    const double C31554 = C31550 / C31512;
    const double C929 = C754 * C872;
    const double C923 = C754 * C878;
    const double C913 = C754 * C238;
    const double C907 = C754 * C218;
    const double C901 = C754 * C227;
    const double C895 = C754 * C217;
    const double C1267 = C754 * C239;
    const double C1261 = C754 * C219;
    const double C1255 = C754 * C226;
    const double C1249 = C754 * C216;
    const double C1615 = C754 * C618;
    const double C1609 = C754 * C628;
    const double C1603 = C754 * C1064;
    const double C1597 = C754 * C1073;
    const double C2020 = C754 * C1963;
    const double C2014 = C754 * C1969;
    const double C2004 = C754 * C343;
    const double C1998 = C754 * C323;
    const double C1992 = C754 * C332;
    const double C1986 = C754 * C322;
    const double C2365 = C754 * C344;
    const double C2359 = C754 * C324;
    const double C2353 = C754 * C331;
    const double C2347 = C754 * C321;
    const double C2547 = C754 * C1080;
    const double C2541 = C754 * C1065;
    const double C4747 = C754 * C629;
    const double C4741 = C754 * C619;
    const double C927 = C755 * C871;
    const double C921 = C755 * C877;
    const double C915 = C755 * C239;
    const double C909 = C755 * C219;
    const double C903 = C755 * C226;
    const double C897 = C755 * C216;
    const double C1269 = C755 * C240;
    const double C1263 = C755 * C220;
    const double C1257 = C755 * C225;
    const double C1251 = C755 * C215;
    const double C1613 = C755 * C619;
    const double C1607 = C755 * C629;
    const double C1601 = C755 * C1063;
    const double C1595 = C755 * C1072;
    const double C2018 = C755 * C1962;
    const double C2012 = C755 * C1968;
    const double C2006 = C755 * C344;
    const double C2000 = C755 * C324;
    const double C1994 = C755 * C331;
    const double C1988 = C755 * C321;
    const double C2367 = C755 * C345;
    const double C2361 = C755 * C325;
    const double C2355 = C755 * C330;
    const double C2349 = C755 * C320;
    const double C2549 = C755 * C1081;
    const double C2543 = C755 * C1066;
    const double C4749 = C755 * C630;
    const double C4743 = C755 * C620;
    const double C15980 = C15845 * C873;
    const double C15976 = C15845 * C885;
    const double C15970 = C15845 * C878;
    const double C15966 = C15845 * C872;
    const double C15962 = C15845 * C238;
    const double C15958 = C15845 * C218;
    const double C15954 = C15845 * C227;
    const double C15950 = C15845 * C217;
    const double C16250 = C15845 * C877;
    const double C16246 = C15845 * C871;
    const double C16242 = C15845 * C239;
    const double C16238 = C15845 * C219;
    const double C16234 = C15845 * C226;
    const double C16230 = C15845 * C216;
    const double C16548 = C15845 * C618;
    const double C16544 = C15845 * C628;
    const double C16540 = C15845 * C1064;
    const double C16536 = C15845 * C1073;
    const double C16532 = C15845 * C1580;
    const double C16528 = C15845 * C1586;
    const double C16868 = C15845 * C1068;
    const double C16864 = C15845 * C1086;
    const double C16858 = C15845 * C1080;
    const double C16854 = C15845 * C1065;
    const double C17056 = C15845 * C1963;
    const double C17052 = C15845 * C1969;
    const double C17048 = C15845 * C2528;
    const double C17044 = C15845 * C2534;
    const double C17036 = C15845 * C343;
    const double C17032 = C15845 * C323;
    const double C17028 = C15845 * C332;
    const double C17024 = C15845 * C322;
    const double C17289 = C15845 * C1081;
    const double C17285 = C15845 * C1066;
    const double C17281 = C15845 * C629;
    const double C17277 = C15845 * C619;
    const double C17507 = C15845 * C344;
    const double C17503 = C15845 * C324;
    const double C17499 = C15845 * C331;
    const double C17495 = C15845 * C321;
    const double C20385 = C15845 * C1072;
    const double C20381 = C15845 * C1063;
    const double C22869 = C15845 * C1964;
    const double C22865 = C15845 * C1976;
    const double C23143 = C15845 * C1968;
    const double C23139 = C15845 * C1962;
    const double C12111 = C12100 + C12101;
    const double C14525 = C14516 + C14517;
    const double C7027 = C7019 + C7020;
    const double C11430 = C11418 + C11419;
    const double C12110 = C12098 + C12099;
    const double C14524 = C14512 + C14513;
    const double C12120 = C12116 + C12117;
    const double C32867 = C32810 + C32859;
    const double C2657 = C32846 - (C32463 * C32446) / C31512;
    const double C15171 = C32847 * C245;
    const double C15163 = C32847 * C230;
    const double C15447 = C32847 * C244;
    const double C21098 = C32847 * C355;
    const double C21092 = C32847 * C350;
    const double C21084 = C32847 * C335;
    const double C21400 = C32847 * C349;
    const double C104 = C32847 / C31518 - C32461 / C32817;
    const double C2780 = C2658 * C245;
    const double C2772 = C2658 * C230;
    const double C3056 = C2658 * C244;
    const double C3666 = C2658 * C355;
    const double C3660 = C2658 * C350;
    const double C3652 = C2658 * C335;
    const double C3968 = C2658 * C349;
    const double C32860 = C32813 + C32846;
    const double C31667 = C31663 / C31512;
    const double C28213 = C12112 * C15057;
    const double C28206 = C7016 * C15057;
    const double C28202 = C7009 * C15057;
    const double C28198 = C7007 * C15057;
    const double C28488 = C12305 * C15057;
    const double C28484 = C7374 * C15057;
    const double C28480 = C7372 * C15057;
    const double C28630 = C7014 * C15057;
    const double C28626 = C6851 * C15057;
    const double C28622 = C6618 * C15057;
    const double C31678 = C31672 / C31512;
    const double C9774 = C6614 * C7650;
    const double C27488 = C6614 * C15850;
    const double C32868 = C32831 + C32863;
    const double C7642 = C32853 - (C32604 * C32593) / C31512;
    const double C27492 = C6854 * C32854;
    const double C27487 = C6615 * C32854;
    const double C27901 = C6613 * C32854;
    const double C6130 = C32854 / C31518 - C32602 / C32817;
    const double C9778 = C6854 * C7643;
    const double C9773 = C6615 * C7643;
    const double C10193 = C6613 * C7643;
    const double C32864 = C32833 + C32853;
    const double C12312 = C12308 * C32542;
    const double C1278 = C1259 + C1260;
    const double C5730 = C5711 + C5712;
    const double C18294 = C18275 + C18276;
    const double C2376 = C2357 + C2358;
    const double C10911 = C10892 + C10893;
    const double C19544 = C19537 + C19538;
    const double C2033 = C2008 + C2009;
    const double C10576 = C10551 + C10552;
    const double C13297 = C13292 + C13293;
    const double C17518 = C17509 + C17510;
    const double C19115 = C19091 + C19092;
    const double C7369 = C7203 * C5268;
    const double C11736 = C7203 * C32849;
    const double C14803 = C7203 * C32601;
    const double C28487 = C7203 * C32601;
    const double C31335 = C7203 * C32604;
    const double C14807 = C14665 * C32601;
    const double C28491 = C14665 * C32601;
    const double C6225 = C6132 * C6202;
    const double C6396 =
        (4 * (2 * C32185 + C31757 * C32298 + C32186 * ae) +
         C31757 *
             (3 * C32298 +
              C31757 * (2 * C32290 +
                        C31757 * (C31815 +
                                  C31757 * (C31757 * C31758 * C31827 + C31898) +
                                  C31757 * C31895 * ae) +
                        C32292 * ae) +
              C32297 * ae) +
         (3 * C32186 + C31757 * C32297) * ae) /
        C31512;
    const double C6506 =
        (C31927 *
         (3 * C32298 +
          C31757 *
              (2 * C32290 +
               C31757 * (C31815 + C31757 * (C31757 * C31758 * C31827 + C31898) +
                         C31757 * C31895 * ae) +
               C32292 * ae) +
          C32297 * ae)) /
        C31512;
    const double C7179 =
        (2 * C32185 + C31757 * C32298 + C32186 * ae +
         (2 * C32290 +
          C31757 * (C31815 + C31757 * (C31757 * C31758 * C31827 + C31898) +
                    C31757 * C31895 * ae) +
          C32292 * ae) *
             C31961) /
        C31512;
    const double C7353 =
        (2 * C31927 * C32298 +
         C31927 *
             (C32298 + (C31815 + C31757 * (C31757 * C31758 * C31827 + C31898) +
                        C31757 * C31895 * ae) *
                           C31961)) /
        C31512;
    const double C31885 = C31872 + C31884;
    const double C31955 = C31952 + C31953;
    const double C1089 =
        (C31927 * C31810 + ae * C31927 * C31951 +
         C31757 * (ae * C31927 * C31883 + C31757 * C31927 * C31834)) /
        C31517;
    const double C1097 =
        (C31810 + C31834 * C31961 + ae * (C31951 + C31757 * C31907 * C31961) +
         C31757 * (ae * (C31883 + C31907 * C31961) +
                   C31757 * (C31834 + (C31826 + ae * C31758 * C31827 +
                                       C31758 * (ae * C31827 +
                                                 C31758 * std::pow(C31760, 8) *
                                                     bs[8] * C31768)) *
                                          C31961))) /
        C31517;
    const double C1079 = (C31757 * C31870 + C31951 * C31961) / C31512;
    const double C2533 =
        (2 * C31927 * C31951 + C31927 * (C31951 + C31757 * C31907 * C31961)) /
        C31512;
    const double C8350 = C8326 + C8327;
    const double C9919 = C9916 + C9917;
    const double C16550 = C16526 + C16527;
    const double C6421 = C6411 + C6412;
    const double C7796 = C7778 + C7779;
    const double C15996 = C15978 + C15979;
    const double C7204 = C7194 + C7195;
    const double C8840 = C8814 + C8815;
    const double C16876 = C16866 + C16867;
    const double C8352 = C8330 + C8331;
    const double C9918 = C9914 + C9915;
    const double C16552 = C16530 + C16531;
    const double C32277 = C32259 + C32275;
    const double C6995 = C6132 * C6969;
    const double C6238 = C6227 + C6228;
    const double C6612 = C6597 + C6598;
    const double C6856 = C6849 + C6850;
    const double C918 = C32815 * C250;
    const double C1270 = C749 * C250;
    const double C2786 = C2658 * C250;
    const double C5410 = C32815 * C250;
    const double C5722 = C32845 * C250;
    const double C8045 = C32460 * C250;
    const double C15177 = C32847 * C250;
    const double C16245 = C32460 * C250;
    const double C17974 = C17830 * C250;
    const double C18286 = C32463 * C250;
    const double C1606 = C32815 * C635;
    const double C3330 = C2658 * C635;
    const double C4750 = C749 * C635;
    const double C6042 = C32815 * C635;
    const double C9051 = C32460 * C635;
    const double C15721 = C32847 * C635;
    const double C17284 = C32460 * C635;
    const double C18606 = C17830 * C635;
    const double C19324 = C32463 * C635;
    const double C26783 = C32845 * C635;
    const double C920 = C32815 * C888;
    const double C5412 = C32815 * C888;
    const double C8053 = C32460 * C888;
    const double C16253 = C32460 * C888;
    const double C17976 = C17830 * C888;
    const double C2552 = C32815 * C1094;
    const double C11075 = C32815 * C1094;
    const double C13087 = C32460 * C1094;
    const double C17292 = C32460 * C1094;
    const double C19080 = C17830 * C1094;
    const double C1254 = C32815 * C229;
    const double C2774 = C32830 * C229;
    const double C3048 = C2658 * C229;
    const double C5706 = C32815 * C229;
    const double C15165 = C32830 * C229;
    const double C15439 = C32847 * C229;
    const double C18270 = C17830 * C229;
    const double C912 = C32815 * C235;
    const double C1264 = C749 * C235;
    const double C2794 = C2658 * C235;
    const double C5404 = C32815 * C235;
    const double C5716 = C32845 * C235;
    const double C8041 = C32460 * C235;
    const double C15185 = C32847 * C235;
    const double C16241 = C32460 * C235;
    const double C17968 = C17830 * C235;
    const double C18280 = C32463 * C235;
    const double C2352 = C32815 * C334;
    const double C3654 = C32830 * C334;
    const double C3960 = C2658 * C334;
    const double C10887 = C32815 * C334;
    const double C19532 = C17830 * C334;
    const double C21086 = C32830 * C334;
    const double C21392 = C32847 * C334;
    const double C2003 = C32815 * C340;
    const double C2362 = C749 * C340;
    const double C3674 = C2658 * C340;
    const double C10546 = C32815 * C340;
    const double C10897 = C32845 * C340;
    const double C13289 = C32460 * C340;
    const double C17506 = C32460 * C340;
    const double C19098 = C17830 * C340;
    const double C21106 = C32847 * C340;
    const double C24954 = C32463 * C340;
    const double C1612 = C32815 * C625;
    const double C3338 = C2658 * C625;
    const double C4744 = C749 * C625;
    const double C6048 = C32815 * C625;
    const double C9047 = C32460 * C625;
    const double C15729 = C32847 * C625;
    const double C17280 = C32460 * C625;
    const double C18612 = C17830 * C625;
    const double C19318 = C32463 * C625;
    const double C26777 = C32845 * C625;
    const double C926 = C32815 * C879;
    const double C5418 = C32815 * C879;
    const double C8049 = C32460 * C879;
    const double C16249 = C32460 * C879;
    const double C17982 = C17830 * C879;
    const double C1600 = C32815 * C1074;
    const double C6036 = C32815 * C1074;
    const double C9055 = C32460 * C1074;
    const double C18600 = C17830 * C1074;
    const double C20384 = C32460 * C1074;
    const double C2017 = C32815 * C1970;
    const double C10560 = C32815 * C1970;
    const double C14075 = C32460 * C1970;
    const double C23142 = C32460 * C1970;
    const double C24643 = C17830 * C1970;
    const double C6422 = C6413 + C6414;
    const double C7794 = C7774 + C7775;
    const double C15994 = C15974 + C15975;
    const double C7363 = C7201 * C32826;
    const double C10055 = C7201 * C7643;
    const double C11732 = C7201 * C32826;
    const double C27763 = C7201 * C32854;
    const double C31331 = C7201 * C17833;
    const double C7371 = C7205 * C32826;
    const double C11738 = C7205 * C32826;
    const double C31337 = C7205 * C17833;
    const double C7368 = C7202 * C5274;
    const double C11735 = C7202 * C758;
    const double C14802 = C7202 * C2667;
    const double C28486 = C7202 * C15058;
    const double C14806 = C14664 * C2667;
    const double C28490 = C14664 * C15058;
    const double C139 = (5 * (3 * C31791 + C31758 * C31811) +
                         C31758 * (4 * C31811 + C31758 * C31839)) /
                        C31512;
    const double C242 =
        (3 * C31791 + C31758 * C31811 +
         C31757 * (C31757 * C31839 + C32110 * ae) + C31757 * C32110 * ae) /
        C31512;
    const double C347 =
        (3 * C31791 + C31758 * C31811 + C31839 * C31961) / C31512;
    const double C446 = (C31757 * (4 * C31811 + C31758 * C31839) +
                         (4 * C32106 + C31758 * C32110) * ae) /
                        C31512;
    const double C534 = (C31927 * (4 * C31811 + C31758 * C31839)) / C31512;
    const double C632 = (C31927 * (C31757 * C31839 + C32110 * ae)) / C31512;
    const double C146 =
        (5 * (3 * C31810 + ae * C31811 + C31758 * C31838) +
         ae * (4 * C31811 + C31758 * C31839) +
         C31758 *
             (4 * C31838 + ae * C31839 +
              C31758 *
                  (3 * C31834 + ae * C31835 +
                   C31758 * (2 * C31830 + ae * C31831 +
                             C31758 * (C31826 + ae * C31758 * C31827 +
                                       C31758 * (ae * C31827 +
                                                 C31758 * std::pow(C31760, 8) *
                                                     bs[8] * C31768)))))) /
        C31517;
    const double C243 =
        (ae * (3 * (C31772 * C31773 * C31841 + C31758 * C31851 + C31846 * ae) +
               C31758 * (2 * C31851 +
                         C31758 * (C31848 +
                                   C31758 * (C31758 * C31795 * C31796 * C31841 +
                                             C31843 * ae) +
                                   C31758 * C31843 * ae) +
                         C31849 * ae) +
               (2 * C31846 + C31758 * C31849) * ae) +
         C31757 * (3 * C31810 + ae * C31811 + C31758 * C31838)) /
        C31517;
    const double C348 =
        ((zP - zQ) * (3 * C31810 + ae * C31811 + C31758 * C31838)) / C31517;
    const double C356 = (2 * C31790 + ae * C31791 + C31758 * C31810 +
                         C31838 * std::pow(zP - zQ, 2)) /
                        C31517;
    const double C357 =
        (3 * C31810 + ae * C31811 + C31758 * C31838 +
         (3 * C31834 + ae * C31835 +
          C31758 *
              (2 * C31830 + ae * C31831 +
               C31758 * (C31826 + ae * C31758 * C31827 +
                         C31758 * (ae * C31827 + C31758 * std::pow(C31760, 8) *
                                                     bs[8] * C31768)))) *
             std::pow(zP - zQ, 2)) /
        C31517;
    const double C535 =
        ((zP - zQ) *
         (4 * C31838 + ae * C31839 +
          C31758 * (3 * C31834 + ae * C31835 +
                    C31758 * (2 * C31830 + ae * C31831 +
                              C31758 * (C31826 + ae * C31758 * C31827 +
                                        C31758 * (ae * C31827 +
                                                  C31758 * std::pow(C31760, 8) *
                                                      bs[8] * C31768)))))) /
        C31517;
    const double C2345 =
        (2 * C31927 * C31838 +
         C31927 * (C31838 + (2 * C31830 + ae * C31831 +
                             C31758 * (C31826 + ae * C31758 * C31827 +
                                       C31758 * (ae * C31827 +
                                                 C31758 * std::pow(C31760, 8) *
                                                     bs[8] * C31768))) *
                                C31961)) /
        C31517;
    const double C2034 = C2010 + C2011;
    const double C10577 = C10553 + C10554;
    const double C14083 = C14078 + C14079;
    const double C23150 = C23145 + C23146;
    const double C24650 = C24636 + C24637;
    const double C12114 = C12106 + C12107;
    const double C31909 = C31889 + C31908;
    const double C31956 = C31883 + C31954;
    const double C6397 =
        (4 * (2 * C31948 + ae * C31949 + C31757 * C32051) +
         ae * (3 * C31949 + C31757 * C32052) +
         C31757 *
             (3 * C32051 + ae * C32052 +
              C31757 *
                  (2 * C32045 + ae * C32047 +
                   C31757 * (C31830 + ae * C31757 * C31900 +
                             C31757 * (ae * C31900 +
                                       C31757 * (ae * C31827 +
                                                 C31758 * std::pow(C31760, 8) *
                                                     bs[8] * C31768)))))) /
        C31517;
    const double C6507 =
        (3 * (C31972 + ae * C31927 * C32040 + C31757 * C32058) +
         ae * C31927 * C32052 +
         C31757 * (2 * C32058 + ae * C31927 * C32047 +
                   C31757 * (C32055 + ae * C31927 * C31757 * C31900 +
                             C31757 * (ae * C31927 * C31900 +
                                       C31757 * C31927 *
                                           (ae * C31827 +
                                            C31758 * std::pow(C31760, 8) *
                                                bs[8] * C31768))))) /
        C31517;
    const double C6395 = (4 * (2 * C31944 + C31757 * C31949) +
                          C31757 * (3 * C31949 + C31757 * C32052)) /
                         C31512;
    const double C6505 = (C31927 * (3 * C31949 + C31757 * C32052)) / C31512;
    const double C7178 =
        (2 * C31944 + C31757 * C31949 + C32052 * C31961) / C31512;
    const double C6207 =
        (5 * (3 * C31998 + ae * C31999 + C31757 * C32020) +
         ae * (4 * C31999 + C31757 * C32021) +
         C31757 *
             (4 * C32020 + ae * C32021 +
              C31757 *
                  (3 * C32016 + ae * C32017 +
                   C31757 * (2 * C32010 + ae * C32012 +
                             C31757 * (C31826 + ae * C31757 * C31893 +
                                       C31757 * (ae * C31893 +
                                                 C31757 * std::pow(C31760, 8) *
                                                     bs[8] * C31768)))))) /
        C31517;
    const double C6593 =
        (4 * (2 * C32027 + ae * C31927 * C31994 + C31757 * C32069) +
         ae * C31927 * C32021 +
         C31757 * (3 * C32069 + ae * C31927 * C32017 +
                   C31757 * (2 * C32067 + ae * C31927 * C32012 +
                             C31757 * (C32062 + ae * C31927 * C31757 * C31893 +
                                       C31757 * (ae * C31927 * C31893 +
                                                 C31757 * C31927 *
                                                     std::pow(C31760, 8) *
                                                     bs[8] * C31768))))) /
        C31517;
    const double C6204 = (5 * (3 * C31942 + C31757 * C31999) +
                          C31757 * (4 * C31999 + C31757 * C32021)) /
                         C31512;
    const double C6307 =
        (3 * C31942 + C31757 * C31999 + C32021 * C31961) / C31512;
    const double C6591 = (C31927 * (4 * C31999 + C31757 * C32021)) / C31512;
    const double C32869 = C32837 + C32865;
    const double C13592 = C32856 - (C32644 * C32633) / C31512;
    const double C11961 = C32857 / C31518 - C32642 / C32817;
    const double C32866 = C32839 + C32856;
    const double C2806 = C2781 + C2782;
    const double C3686 = C3661 + C3662;
    const double C15197 = C15172 + C15173;
    const double C21118 = C21093 + C21094;
    const double C31557 = C31554 - C31533;
    const double C948 = C929 + C930;
    const double C945 = C923 + C924;
    const double C940 = C913 + C914;
    const double C937 = C907 + C908;
    const double C934 = C901 + C902;
    const double C931 = C895 + C896;
    const double C1282 = C1267 + C1268;
    const double C1279 = C1261 + C1262;
    const double C1276 = C1255 + C1256;
    const double C1273 = C1249 + C1250;
    const double C1628 = C1615 + C1616;
    const double C1625 = C1609 + C1610;
    const double C1622 = C1603 + C1604;
    const double C1619 = C1597 + C1598;
    const double C2039 = C2020 + C2021;
    const double C2036 = C2014 + C2015;
    const double C2031 = C2004 + C2005;
    const double C2028 = C1998 + C1999;
    const double C2025 = C1992 + C1993;
    const double C2022 = C1986 + C1987;
    const double C2380 = C2365 + C2366;
    const double C2377 = C2359 + C2360;
    const double C2374 = C2353 + C2354;
    const double C2371 = C2347 + C2348;
    const double C2556 = C2547 + C2548;
    const double C2553 = C2541 + C2542;
    const double C4756 = C4747 + C4748;
    const double C4753 = C4741 + C4742;
    const double C947 = C927 + C928;
    const double C944 = C921 + C922;
    const double C941 = C915 + C916;
    const double C938 = C909 + C910;
    const double C935 = C903 + C904;
    const double C932 = C897 + C898;
    const double C1277 = C1257 + C1258;
    const double C1274 = C1251 + C1252;
    const double C1627 = C1613 + C1614;
    const double C1624 = C1607 + C1608;
    const double C1621 = C1601 + C1602;
    const double C1618 = C1595 + C1596;
    const double C2038 = C2018 + C2019;
    const double C2035 = C2012 + C2013;
    const double C2032 = C2006 + C2007;
    const double C2029 = C2000 + C2001;
    const double C2026 = C1994 + C1995;
    const double C2023 = C1988 + C1989;
    const double C2381 = C2367 + C2368;
    const double C2375 = C2355 + C2356;
    const double C2372 = C2349 + C2350;
    const double C2557 = C2549 + C2550;
    const double C2554 = C2543 + C2544;
    const double C15997 = C15980 + C15981;
    const double C15995 = C15976 + C15977;
    const double C15992 = C15970 + C15971;
    const double C15990 = C15966 + C15967;
    const double C15988 = C15962 + C15963;
    const double C15986 = C15958 + C15959;
    const double C15984 = C15954 + C15955;
    const double C15982 = C15950 + C15951;
    const double C16264 = C16250 + C16251;
    const double C16262 = C16246 + C16247;
    const double C16260 = C16242 + C16243;
    const double C16258 = C16238 + C16239;
    const double C16256 = C16234 + C16235;
    const double C16254 = C16230 + C16231;
    const double C16561 = C16548 + C16549;
    const double C16559 = C16544 + C16545;
    const double C16557 = C16540 + C16541;
    const double C16555 = C16536 + C16537;
    const double C16553 = C16532 + C16533;
    const double C16551 = C16528 + C16529;
    const double C16877 = C16868 + C16869;
    const double C16875 = C16864 + C16865;
    const double C16872 = C16858 + C16859;
    const double C16870 = C16854 + C16855;
    const double C17075 = C17056 + C17057;
    const double C17073 = C17052 + C17053;
    const double C17071 = C17048 + C17049;
    const double C17069 = C17044 + C17045;
    const double C17064 = C17036 + C17037;
    const double C17062 = C17032 + C17033;
    const double C17060 = C17028 + C17029;
    const double C17058 = C17024 + C17025;
    const double C17299 = C17289 + C17290;
    const double C17297 = C17285 + C17286;
    const double C17295 = C17281 + C17282;
    const double C17293 = C17277 + C17278;
    const double C17517 = C17507 + C17508;
    const double C17515 = C17503 + C17504;
    const double C17513 = C17499 + C17500;
    const double C17511 = C17495 + C17496;
    const double C20391 = C20385 + C20386;
    const double C20389 = C20381 + C20382;
    const double C22877 = C22869 + C22870;
    const double C22875 = C22865 + C22866;
    const double C23149 = C23143 + C23144;
    const double C23147 = C23139 + C23140;
    const double C14527 = C14525 + C14518;
    const double C7028 = C7027 + C6991;
    const double C11431 = C11430 + C11420;
    const double C14526 = C14524 + C14514;
    const double C15189 = C32867 * C233;
    const double C15181 = C32867 * C248;
    const double C15167 = C32867 * C247;
    const double C15159 = C32867 * C232;
    const double C15443 = C32867 * C246;
    const double C15435 = C32867 * C231;
    const double C15733 = C32867 * C623;
    const double C15725 = C32867 * C633;
    const double C21110 = C32867 * C338;
    const double C21102 = C32867 * C353;
    const double C21088 = C32867 * C352;
    const double C21080 = C32867 * C337;
    const double C21396 = C32867 * C351;
    const double C21388 = C32867 * C336;
    const double C101 =
        (C32858 + 2 * C32455) / C31518 - (C32867 * C32446) / C31512;
    const double C2796 = C2657 * C234;
    const double C2788 = C2657 * C249;
    const double C2778 = C2657 * C246;
    const double C2770 = C2657 * C231;
    const double C3054 = C2657 * C245;
    const double C3046 = C2657 * C230;
    const double C3340 = C2657 * C624;
    const double C3332 = C2657 * C634;
    const double C3676 = C2657 * C339;
    const double C3668 = C2657 * C354;
    const double C3658 = C2657 * C351;
    const double C3650 = C2657 * C336;
    const double C3966 = C2657 * C350;
    const double C3958 = C2657 * C335;
    const double C15187 = C32860 * C234;
    const double C15179 = C32860 * C249;
    const double C15169 = C32860 * C246;
    const double C15161 = C32860 * C231;
    const double C15445 = C32860 * C245;
    const double C15437 = C32860 * C230;
    const double C15731 = C32860 * C624;
    const double C15723 = C32860 * C634;
    const double C21108 = C32860 * C339;
    const double C21100 = C32860 * C354;
    const double C21090 = C32860 * C351;
    const double C21082 = C32860 * C336;
    const double C21398 = C32860 * C350;
    const double C21390 = C32860 * C335;
    const double C102 =
        (C32845 + 2 * C32463 + C32867) / C31518 - (C32860 * C32446) / C31512;
    const double C103 = (C32815 + C32460 / C31512 + C32860) / C31518 -
                        (C32847 * C32446) / C31512;
    const double C31671 = C31667 - C31648;
    const double C28215 = C28206 + C28207;
    const double C28214 = C28202 + C28203;
    const double C27496 = C7010 * C32868;
    const double C27483 = C7008 * C32868;
    const double C27759 = C7373 * C32868;
    const double C27897 = C6617 * C32868;
    const double C6127 =
        (C32861 + 2 * C32597) / C31518 - (C32868 * C32593) / C31512;
    const double C9780 = C6852 * C7642;
    const double C9771 = C6617 * C7642;
    const double C10053 = C7199 * C7642;
    const double C10191 = C6615 * C7642;
    const double C27494 = C6852 * C32864;
    const double C27485 = C6617 * C32864;
    const double C27761 = C7199 * C32864;
    const double C27899 = C6615 * C32864;
    const double C6128 =
        (C32849 + 2 * C32604 + C32868) / C31518 - (C32864 * C32593) / C31512;
    const double C6129 = (C32826 + C32601 / C31512 + C32864) / C31518 -
                         (C32854 * C32593) / C31512;
    const double C6237 = C6225 + C6226;
    const double C31886 = C31885 + C31876;
    const double C1594 = C32815 * C1089;
    const double C6030 = C32815 * C1089;
    const double C9059 = C32460 * C1089;
    const double C18594 = C17830 * C1089;
    const double C20388 = C32460 * C1089;
    const double C2546 = C32815 * C1079;
    const double C11069 = C32815 * C1079;
    const double C13083 = C32460 * C1079;
    const double C17288 = C32460 * C1079;
    const double C19086 = C17830 * C1079;
    const double C10057 = C9919 * C32836;
    const double C27765 = C9919 * C32836;
    const double C7370 = C7204 * C5275;
    const double C11737 = C7204 * C759;
    const double C31336 = C7204 * C31696;
    const double C10056 = C9918 * C7650;
    const double C27764 = C9918 * C15850;
    const double C32278 = C32277 + C32262;
    const double C7011 = C6995 + C6996;
    const double C10194 = C6612 * C7650;
    const double C27902 = C6612 * C15850;
    const double C7540 = C6856 * C5275;
    const double C9777 = C6856 * C7650;
    const double C11895 = C6856 * C759;
    const double C27491 = C6856 * C15850;
    const double C31494 = C6856 * C31696;
    const double C942 = C917 + C918;
    const double C1283 = C1269 + C1270;
    const double C5434 = C5409 + C5410;
    const double C8061 = C8044 + C8045;
    const double C16261 = C16244 + C16245;
    const double C17998 = C17973 + C17974;
    const double C1623 = C1605 + C1606;
    const double C4757 = C4749 + C4750;
    const double C6059 = C6041 + C6042;
    const double C9063 = C9050 + C9051;
    const double C17296 = C17283 + C17284;
    const double C18623 = C18605 + C18606;
    const double C943 = C919 + C920;
    const double C5435 = C5411 + C5412;
    const double C8065 = C8052 + C8053;
    const double C16265 = C16252 + C16253;
    const double C17999 = C17975 + C17976;
    const double C2558 = C2551 + C2552;
    const double C11081 = C11074 + C11075;
    const double C13091 = C13086 + C13087;
    const double C17300 = C17291 + C17292;
    const double C19109 = C19079 + C19080;
    const double C1275 = C1253 + C1254;
    const double C2802 = C2773 + C2774;
    const double C5727 = C5705 + C5706;
    const double C15193 = C15164 + C15165;
    const double C18291 = C18269 + C18270;
    const double C939 = C911 + C912;
    const double C1280 = C1263 + C1264;
    const double C5431 = C5403 + C5404;
    const double C8059 = C8040 + C8041;
    const double C16259 = C16240 + C16241;
    const double C17995 = C17967 + C17968;
    const double C2373 = C2351 + C2352;
    const double C3682 = C3653 + C3654;
    const double C10908 = C10886 + C10887;
    const double C19541 = C19531 + C19532;
    const double C21114 = C21085 + C21086;
    const double C2030 = C2002 + C2003;
    const double C2378 = C2361 + C2362;
    const double C10573 = C10545 + C10546;
    const double C13295 = C13288 + C13289;
    const double C17516 = C17505 + C17506;
    const double C19118 = C19097 + C19098;
    const double C1626 = C1611 + C1612;
    const double C4754 = C4743 + C4744;
    const double C6062 = C6047 + C6048;
    const double C9061 = C9046 + C9047;
    const double C17294 = C17279 + C17280;
    const double C18626 = C18611 + C18612;
    const double C946 = C925 + C926;
    const double C5438 = C5417 + C5418;
    const double C8063 = C8048 + C8049;
    const double C16263 = C16248 + C16249;
    const double C18002 = C17981 + C17982;
    const double C1620 = C1599 + C1600;
    const double C6056 = C6035 + C6036;
    const double C9065 = C9054 + C9055;
    const double C18620 = C18599 + C18600;
    const double C20390 = C20383 + C20384;
    const double C2037 = C2016 + C2017;
    const double C10580 = C10559 + C10560;
    const double C14081 = C14074 + C14075;
    const double C23148 = C23141 + C23142;
    const double C24653 = C24642 + C24643;
    const double C3058 = C32830 * C243;
    const double C15449 = C32830 * C243;
    const double C3970 = C32830 * C348;
    const double C21402 = C32830 * C348;
    const double C2370 = C32815 * C356;
    const double C3664 = C32830 * C356;
    const double C10905 = C32815 * C356;
    const double C21096 = C32830 * C356;
    const double C24962 = C17830 * C356;
    const double C12118 = C12114 * C32542;
    const double C31910 = C31909 + C31901;
    const double C893 =
        (3 * (C31810 + ae * C31951 + C31757 * C31955) +
         ae * (2 * C31951 + C31757 * C31956) +
         C31757 *
             (2 * C31955 + ae * C31956 +
              C31757 *
                  (C31834 + ae * C31757 * C31907 +
                   C31757 * (ae * C31907 +
                             C31757 * (C31826 + ae * C31758 * C31827 +
                                       C31758 * (ae * C31827 +
                                                 C31758 * std::pow(C31760, 8) *
                                                     bs[8] * C31768)))))) /
        C31517;
    const double C1591 =
        (2 * (ae * C31927 * C31883 + C31757 * C31974) + ae * C31927 * C31956 +
         C31757 * (C31974 + ae * C31927 * C31757 * C31907 +
                   C31757 * (ae * C31927 * C31907 +
                             C31757 * C31927 *
                                 (C31826 + ae * C31758 * C31827 +
                                  C31758 * (ae * C31827 +
                                            C31758 * std::pow(C31760, 8) *
                                                bs[8] * C31768))))) /
        C31517;
    const double C884 = (3 * (C31870 + C31883 * C31939) +
                         C31757 * (2 * C31951 + C31757 * C31956)) /
                        C31512;
    const double C1085 = (C31870 + C31883 * C31939 + C31956 * C31961) / C31512;
    const double C1585 = (C31927 * (2 * C31951 + C31757 * C31956)) / C31512;
    const double C11958 =
        (C32862 + 2 * C32637) / C31518 - (C32869 * C32633) / C31512;
    const double C11959 =
        (C32851 + 2 * C32644 + C32869) / C31518 - (C32866 * C32633) / C31512;
    const double C11960 = (C32829 + C32641 / C31512 + C32866) / C31518 -
                          (C32857 * C32633) / C31512;
    const double C7780 = C31557 * C873;
    const double C7776 = C31557 * C885;
    const double C7770 = C31557 * C878;
    const double C7766 = C31557 * C872;
    const double C7762 = C31557 * C238;
    const double C7758 = C31557 * C218;
    const double C7754 = C31557 * C227;
    const double C7750 = C31557 * C217;
    const double C8050 = C31557 * C877;
    const double C8046 = C31557 * C871;
    const double C8042 = C31557 * C239;
    const double C8038 = C31557 * C219;
    const double C8034 = C31557 * C226;
    const double C8030 = C31557 * C216;
    const double C8348 = C31557 * C618;
    const double C8344 = C31557 * C628;
    const double C8340 = C31557 * C1064;
    const double C8336 = C31557 * C1073;
    const double C8332 = C31557 * C1580;
    const double C8328 = C31557 * C1586;
    const double C8832 = C31557 * C323;
    const double C8828 = C31557 * C343;
    const double C8824 = C31557 * C1065;
    const double C8820 = C31557 * C1080;
    const double C8816 = C31557 * C1068;
    const double C8812 = C31557 * C1086;
    const double C8806 = C31557 * C332;
    const double C8802 = C31557 * C322;
    const double C9056 = C31557 * C1072;
    const double C9052 = C31557 * C1063;
    const double C9048 = C31557 * C629;
    const double C9044 = C31557 * C619;
    const double C9266 = C31557 * C331;
    const double C9262 = C31557 * C321;
    const double C12869 = C31557 * C1963;
    const double C12865 = C31557 * C1969;
    const double C12861 = C31557 * C2528;
    const double C12857 = C31557 * C2534;
    const double C13084 = C31557 * C1081;
    const double C13080 = C31557 * C1066;
    const double C13290 = C31557 * C344;
    const double C13286 = C31557 * C324;
    const double C13802 = C31557 * C1964;
    const double C13798 = C31557 * C1976;
    const double C14076 = C31557 * C1968;
    const double C14072 = C31557 * C1962;
    const double C31560 = C31557 / C31518;
    const double C31559 = C31510 * C31557;
    const double C950 = C940 + C941;
    const double C949 = C937 + C938;
    const double C5150 = C1627 + C1628;
    const double C5147 = C1628 + C1627;
    const double C5149 = C1624 + C1625;
    const double C5148 = C1625 + C1624;
    const double C2041 = C2031 + C2032;
    const double C2040 = C2028 + C2029;
    const double C16001 = C15992 + C15993;
    const double C16000 = C15990 + C15991;
    const double C15999 = C15988 + C15989;
    const double C15998 = C15986 + C15987;
    const double C17718 = C16560 + C16561;
    const double C17713 = C16561 + C16560;
    const double C17717 = C16558 + C16559;
    const double C17714 = C16559 + C16558;
    const double C20039 = C16557 + C16556;
    const double C20782 = C16556 + C16557;
    const double C20040 = C16555 + C16554;
    const double C20781 = C16554 + C16555;
    const double C17041 = C16872 + C16873;
    const double C17715 = C16873 + C16872;
    const double C17040 = C16870 + C16871;
    const double C17716 = C16871 + C16870;
    const double C22861 = C17075 + C17074;
    const double C22862 = C17073 + C17072;
    const double C17077 = C17064 + C17065;
    const double C17076 = C17062 + C17063;
    const double C14529 = C14527 + C14519;
    const double C7029 = C7028 + C6992;
    const double C11432 = C11431 + C11421;
    const double C14528 = C14526 + C14515;
    const double C31677 = C31671 / C31518;
    const double C31676 = C31597 * C31671;
    const double C28217 = C28215 + C28208;
    const double C28216 = C28214 + C28204;
    const double C251 =
        (2 * C31790 + ae * C31791 + C31758 * C31810 + ae * C31757 * C31886 +
         C31757 * (ae * C31886 + C31757 * C31838)) /
        C31517;
    const double C636 =
        (ae * C31927 * C31886 + C31757 * C31927 * C31838) / C31517;
    const double C137 = (4 * (2 * C31865 + C31758 * C31870 + C32096 * ae) +
                         C31758 * (3 * C31870 + C31758 * C31886 + C32106 * ae) +
                         (3 * C32096 + C31758 * C32106) * ae) /
                        C31512;
    const double C228 =
        (C31757 * (3 * C31870 + C31758 * C31886 + C32106 * ae)) / C31512;
    const double C236 =
        (2 * C31865 + C31758 * C31870 + C32096 * ae + C31886 * C31939) / C31512;
    const double C333 =
        (C31927 * (3 * C31870 + C31758 * C31886 + C32106 * ae)) / C31512;
    const double C341 =
        (2 * C31865 + C31758 * C31870 + C32096 * ae + C31886 * C31961) / C31512;
    const double C626 = (C31927 * C31757 * C31886) / C31512;
    const double C1617 = C1593 + C1594;
    const double C6053 = C6029 + C6030;
    const double C9067 = C9058 + C9059;
    const double C18617 = C18593 + C18594;
    const double C20392 = C20387 + C20388;
    const double C2555 = C2545 + C2546;
    const double C11078 = C11068 + C11069;
    const double C13089 = C13082 + C13083;
    const double C17298 = C17287 + C17288;
    const double C19112 = C19085 + C19086;
    const double C6205 =
        (5 * (3 * C32255 + C31757 * C32278 + C32254 * ae) +
         C31757 *
             (4 * C32278 +
              C31757 *
                  (3 * C32273 +
                   C31757 *
                       (2 * C32265 +
                        C31757 * (C31803 + C31757 * (C31757 * C31827 + C31894) +
                                  C31757 * C31891 * ae) +
                        C32267 * ae) +
                   C32272 * ae) +
              C32276 * ae) +
         (4 * C32254 + C31757 * C32276) * ae) /
        C31512;
    const double C6303 =
        (C31927 * (3 * C32255 + C31757 * C32278 + C32254 * ae)) / C31512;
    const double C6306 =
        (2 * C32179 + C31757 * C32255 + C32180 * ae + C32278 * C31961) / C31512;
    const double C6308 =
        (3 * C32255 + C31757 * C32278 + C32254 * ae +
         (3 * C32273 +
          C31757 * (2 * C32265 +
                    C31757 * (C31803 + C31757 * (C31757 * C31827 + C31894) +
                              C31757 * C31891 * ae) +
                    C32267 * ae) +
          C32272 * ae) *
             C31961) /
        C31512;
    const double C6592 =
        (C31927 *
         (4 * C32278 +
          C31757 * (3 * C32273 +
                    C31757 * (2 * C32265 +
                              C31757 * (C31803 +
                                        C31757 * (C31757 * C31827 + C31894) +
                                        C31757 * C31891 * ae) +
                              C32267 * ae) +
                    C32272 * ae) +
          C32276 * ae)) /
        C31512;
    const double C7527 =
        (2 * C31927 * C32278 +
         C31927 *
             (C32278 + (2 * C32265 +
                        C31757 * (C31803 + C31757 * (C31757 * C31827 + C31894) +
                                  C31757 * C31891 * ae) +
                        C32267 * ae) *
                           C31961)) /
        C31512;
    const double C7021 = C7011 * C32826;
    const double C11424 = C7011 * C32826;
    const double C14949 = C7011 * C32601;
    const double C28633 = C7011 * C32601;
    const double C31023 = C7011 * C17833;
    const double C3066 = C3057 + C3058;
    const double C15457 = C15448 + C15449;
    const double C3978 = C3969 + C3970;
    const double C21410 = C21401 + C21402;
    const double C2382 = C2369 + C2370;
    const double C3687 = C3663 + C3664;
    const double C10917 = C10904 + C10905;
    const double C21119 = C21095 + C21096;
    const double C24968 = C24961 + C24962;
    const double C31911 = C31758 * C31910;
    const double C1247 =
        (2 * (ae * C31886 + C31757 * C31838) + ae * (C31886 + C31910 * C31939) +
         C31757 *
             (C31838 + ae * C31757 * C31910 +
              C31757 *
                  (ae * C31910 +
                   C31757 * (2 * C31830 + ae * C31831 +
                             C31758 * (C31826 + ae * C31758 * C31827 +
                                       C31758 * (ae * C31827 +
                                                 C31758 * std::pow(C31760, 8) *
                                                     bs[8] * C31768)))))) /
        C31517;
    const double C1433 =
        (C31927 * C31838 + ae * C31927 * C31757 * C31910 +
         C31757 * (ae * C31927 * C31910 +
                   C31757 * C31927 *
                       (2 * C31830 + ae * C31831 +
                        C31758 * (C31826 + ae * C31758 * C31827 +
                                  C31758 * (ae * C31827 +
                                            C31758 * std::pow(C31760, 8) *
                                                bs[8] * C31768))))) /
        C31517;
    const double C2195 =
        (ae * (C31886 + C31910 * C31961) +
         C31757 * (C31838 + (2 * C31830 + ae * C31831 +
                             C31758 * (C31826 + ae * C31758 * C31827 +
                                       C31758 * (ae * C31827 +
                                                 C31758 * std::pow(C31760, 8) *
                                                     bs[8] * C31768))) *
                                C31961)) /
        C31517;
    const double C1245 =
        (2 * C31757 * C31886 + C31757 * (C31886 + C31910 * C31939)) / C31512;
    const double C1431 = (C31927 * (C31886 + C31910 * C31939)) / C31512;
    const double C2193 = (C31757 * C31886 + C31757 * C31910 * C31961) / C31512;
    const double C2343 =
        (2 * C31927 * C31886 + C31927 * (C31886 + C31910 * C31961)) / C31512;
    const double C7797 = C7780 + C7781;
    const double C7795 = C7776 + C7777;
    const double C7792 = C7770 + C7771;
    const double C7790 = C7766 + C7767;
    const double C7788 = C7762 + C7763;
    const double C7786 = C7758 + C7759;
    const double C7784 = C7754 + C7755;
    const double C7782 = C7750 + C7751;
    const double C8064 = C8050 + C8051;
    const double C8062 = C8046 + C8047;
    const double C8060 = C8042 + C8043;
    const double C8058 = C8038 + C8039;
    const double C8056 = C8034 + C8035;
    const double C8054 = C8030 + C8031;
    const double C8361 = C8348 + C8349;
    const double C8359 = C8344 + C8345;
    const double C8357 = C8340 + C8341;
    const double C8355 = C8336 + C8337;
    const double C8353 = C8332 + C8333;
    const double C8351 = C8328 + C8329;
    const double C8849 = C8832 + C8833;
    const double C8847 = C8828 + C8829;
    const double C8845 = C8824 + C8825;
    const double C8843 = C8820 + C8821;
    const double C8841 = C8816 + C8817;
    const double C8839 = C8812 + C8813;
    const double C8836 = C8806 + C8807;
    const double C8834 = C8802 + C8803;
    const double C9066 = C9056 + C9057;
    const double C9064 = C9052 + C9053;
    const double C9062 = C9048 + C9049;
    const double C9060 = C9044 + C9045;
    const double C9272 = C9266 + C9267;
    const double C9270 = C9262 + C9263;
    const double C12882 = C12869 + C12870;
    const double C12880 = C12865 + C12866;
    const double C12878 = C12861 + C12862;
    const double C12876 = C12857 + C12858;
    const double C13090 = C13084 + C13085;
    const double C13088 = C13080 + C13081;
    const double C13296 = C13290 + C13291;
    const double C13294 = C13286 + C13287;
    const double C13810 = C13802 + C13803;
    const double C13808 = C13798 + C13799;
    const double C14082 = C14076 + C14077;
    const double C14080 = C14072 + C14073;
    const double C31563 = C31560 - C31555;
    const double C5271 = C31560 + (C31546 * ae) / C31512;
    const double C31562 = C31559 + C32776;
    const double C952 = C950 + C942;
    const double C951 = C949 + C939;
    const double C5154 = C1626 + C5150;
    const double C5151 = C5147 + C1626;
    const double C5153 = C1623 + C5149;
    const double C5152 = C5148 + C1623;
    const double C2043 = C2041 + C2033;
    const double C2042 = C2040 + C2030;
    const double C17067 = C17041 * C32601;
    const double C25556 = C17041 * C32601;
    const double C17066 = C17040 * C15058;
    const double C25555 = C17040 * C2667;
    const double C22872 = C22861 * C118;
    const double C22873 = C22862 * C32542;
    const double C17079 = C17077 * C15051;
    const double C22860 = C17077 * C32542;
    const double C25554 = C17077 * C32795;
    const double C17078 = C17076 * C15057;
    const double C22859 = C17076 * C118;
    const double C25553 = C17076 * C2666;
    const double C7030 = C7029 + C6993;
    const double C11433 = C11432 + C11422;
    const double C31682 = C31677 - C31678;
    const double C31681 = C31676 + C32795;
    const double C28219 = C28217 + C28209;
    const double C28218 = C28216 + C28205;
    const double C1272 = C32815 * C251;
    const double C2784 = C32830 * C251;
    const double C5724 = C32815 * C251;
    const double C15175 = C32830 * C251;
    const double C18288 = C17830 * C251;
    const double C3328 = C32830 * C636;
    const double C4752 = C32815 * C636;
    const double C15719 = C32830 * C636;
    const double C19326 = C17830 * C636;
    const double C26785 = C32815 * C636;
    const double C3050 = C32830 * C228;
    const double C15441 = C32830 * C228;
    const double C1266 = C32815 * C236;
    const double C2792 = C32830 * C236;
    const double C5718 = C32815 * C236;
    const double C15183 = C32830 * C236;
    const double C18282 = C17830 * C236;
    const double C3962 = C32830 * C333;
    const double C21394 = C32830 * C333;
    const double C2364 = C32815 * C341;
    const double C3672 = C32830 * C341;
    const double C10899 = C32815 * C341;
    const double C21104 = C32830 * C341;
    const double C24956 = C17830 * C341;
    const double C3336 = C32830 * C626;
    const double C4746 = C32815 * C626;
    const double C15727 = C32830 * C626;
    const double C19320 = C17830 * C626;
    const double C26779 = C32815 * C626;
    const double C6595 = C6132 * C6303;
    const double C6847 = C6132 * C6306;
    const double C31912 = C31888 + C31911;
    const double C7801 = C7792 + C7793;
    const double C7800 = C7790 + C7791;
    const double C7799 = C7788 + C7789;
    const double C7798 = C7786 + C7787;
    const double C9473 = C8360 + C8361;
    const double C9468 = C8361 + C8360;
    const double C9472 = C8358 + C8359;
    const double C9469 = C8359 + C8358;
    const double C8654 = C8357 + C8356;
    const double C9471 = C8356 + C8357;
    const double C8655 = C8355 + C8354;
    const double C9470 = C8354 + C8355;
    const double C12851 = C8849 + C8848;
    const double C12852 = C8847 + C8846;
    const double C12853 = C8845 + C8844;
    const double C13493 = C8844 + C8845;
    const double C12854 = C8843 + C8842;
    const double C13492 = C8842 + C8843;
    const double C13794 = C12882 + C12881;
    const double C13795 = C12880 + C12879;
    const double C17983 = C31563 * C871;
    const double C17977 = C31563 * C877;
    const double C17971 = C31563 * C239;
    const double C17965 = C31563 * C219;
    const double C17959 = C31563 * C226;
    const double C17953 = C31563 * C216;
    const double C18285 = C31563 * C240;
    const double C18279 = C31563 * C220;
    const double C18273 = C31563 * C225;
    const double C18267 = C31563 * C215;
    const double C18613 = C31563 * C619;
    const double C18607 = C31563 * C629;
    const double C18601 = C31563 * C1063;
    const double C18595 = C31563 * C1072;
    const double C19099 = C31563 * C324;
    const double C19093 = C31563 * C344;
    const double C19087 = C31563 * C1066;
    const double C19081 = C31563 * C1081;
    const double C19075 = C31563 * C331;
    const double C19069 = C31563 * C321;
    const double C19323 = C31563 * C630;
    const double C19317 = C31563 * C620;
    const double C19535 = C31563 * C330;
    const double C19529 = C31563 * C320;
    const double C24644 = C31563 * C1962;
    const double C24638 = C31563 * C1968;
    const double C24959 = C31563 * C345;
    const double C24953 = C31563 * C325;
    const double C116 =
        (C31563 / C31518 + ((C31510 * C31573 + C17830) * ae) / C31512) /
            C31518 -
        ((C31510 * (C31573 / C31518 + (0 * ae) / C31512) + C32830) * be) /
            C31512;
    const double C2664 =
        C31563 / C31518 - ((C31510 * C31573 + C17830) * be) / C31512;
    const double C15055 =
        C31563 / C31518 + ((C31510 * C31573 + C17830) * ae) / C31512;
    const double C5419 = C5271 * C871;
    const double C5413 = C5271 * C877;
    const double C5407 = C5271 * C239;
    const double C5401 = C5271 * C219;
    const double C5395 = C5271 * C226;
    const double C5389 = C5271 * C216;
    const double C5721 = C5271 * C240;
    const double C5715 = C5271 * C220;
    const double C5709 = C5271 * C225;
    const double C5703 = C5271 * C215;
    const double C6049 = C5271 * C619;
    const double C6043 = C5271 * C629;
    const double C6037 = C5271 * C1063;
    const double C6031 = C5271 * C1072;
    const double C10561 = C5271 * C1962;
    const double C10555 = C5271 * C1968;
    const double C10549 = C5271 * C344;
    const double C10543 = C5271 * C324;
    const double C10537 = C5271 * C331;
    const double C10531 = C5271 * C321;
    const double C10902 = C5271 * C345;
    const double C10896 = C5271 * C325;
    const double C10890 = C5271 * C330;
    const double C10884 = C5271 * C320;
    const double C11072 = C5271 * C1081;
    const double C11066 = C5271 * C1066;
    const double C26782 = C5271 * C630;
    const double C26776 = C5271 * C620;
    const double C31564 = C31562 * be;
    const double C5270 = C31549 + (C31562 * ae) / C31512 + C31538;
    const double C2045 = C2043 * C32542;
    const double C2044 = C2042 * C118;
    const double C22878 = C22872 + C22873;
    const double C17080 = C17078 + C17079;
    const double C22871 = C22859 + C22860;
    const double C25557 = C25553 + C25554;
    const double C7031 = C7030 + C6994;
    const double C11434 = C11433 + C11423;
    const double C31026 = C7014 * C31682;
    const double C31019 = C6851 * C31682;
    const double C31013 = C6618 * C31682;
    const double C31334 = C7202 * C31682;
    const double C31328 = C7198 * C31682;
    const double C31492 = C6853 * C31682;
    const double C31486 = C6616 * C31682;
    const double C6136 =
        (C31682 / C31518 + ((C31597 * C31696 + C17833) * ae) / C31512) /
            C31518 -
        ((C31597 * (C31696 / C31518 + (0 * ae) / C31512) + C32836) * be) /
            C31512;
    const double C7649 =
        C31682 / C31518 - ((C31597 * C31696 + C17833) * be) / C31512;
    const double C15849 =
        C31682 / C31518 + ((C31597 * C31696 + C17833) * ae) / C31512;
    const double C31685 = C31681 * be;
    const double C1284 = C1271 + C1272;
    const double C2807 = C2783 + C2784;
    const double C5736 = C5723 + C5724;
    const double C15198 = C15174 + C15175;
    const double C18300 = C18287 + C18288;
    const double C3343 = C3327 + C3328;
    const double C4758 = C4751 + C4752;
    const double C15734 = C15718 + C15719;
    const double C19332 = C19325 + C19326;
    const double C26791 = C26784 + C26785;
    const double C3062 = C3049 + C3050;
    const double C15453 = C15440 + C15441;
    const double C1281 = C1265 + C1266;
    const double C2811 = C2791 + C2792;
    const double C5733 = C5717 + C5718;
    const double C15202 = C15182 + C15183;
    const double C18297 = C18281 + C18282;
    const double C3974 = C3961 + C3962;
    const double C21406 = C21393 + C21394;
    const double C2379 = C2363 + C2364;
    const double C3691 = C3671 + C3672;
    const double C10914 = C10898 + C10899;
    const double C21123 = C21103 + C21104;
    const double C24965 = C24955 + C24956;
    const double C3347 = C3335 + C3336;
    const double C4755 = C4745 + C4746;
    const double C15738 = C15726 + C15727;
    const double C19329 = C19319 + C19320;
    const double C26788 = C26778 + C26779;
    const double C6611 = C6595 + C6596;
    const double C6855 = C6847 + C6848;
    const double C31913 = C31912 + C31906;
    const double C12871 = C12851 * C2666;
    const double C13792 = C12851 * C118;
    const double C30092 = C12851 * C15057;
    const double C12872 = C12852 * C32795;
    const double C13793 = C12852 * C32542;
    const double C30093 = C12852 * C15051;
    const double C12873 = C12853 * C2667;
    const double C30094 = C12853 * C15058;
    const double C12874 = C12854 * C32601;
    const double C30095 = C12854 * C32601;
    const double C13805 = C13794 * C118;
    const double C13806 = C13795 * C32542;
    const double C18003 = C17983 + C17984;
    const double C18000 = C17977 + C17978;
    const double C17997 = C17971 + C17972;
    const double C17994 = C17965 + C17966;
    const double C17991 = C17959 + C17960;
    const double C17988 = C17953 + C17954;
    const double C18299 = C18285 + C18286;
    const double C18296 = C18279 + C18280;
    const double C18293 = C18273 + C18274;
    const double C18290 = C18267 + C18268;
    const double C18627 = C18613 + C18614;
    const double C18624 = C18607 + C18608;
    const double C18621 = C18601 + C18602;
    const double C18618 = C18595 + C18596;
    const double C19119 = C19099 + C19100;
    const double C19116 = C19093 + C19094;
    const double C19113 = C19087 + C19088;
    const double C19110 = C19081 + C19082;
    const double C19107 = C19075 + C19076;
    const double C19104 = C19069 + C19070;
    const double C19331 = C19323 + C19324;
    const double C19328 = C19317 + C19318;
    const double C19543 = C19535 + C19536;
    const double C19540 = C19529 + C19530;
    const double C24654 = C24644 + C24645;
    const double C24651 = C24638 + C24639;
    const double C24967 = C24959 + C24960;
    const double C24964 = C24953 + C24954;
    const double C2793 = C2664 * C220;
    const double C2785 = C2664 * C240;
    const double C2779 = C2664 * C225;
    const double C2771 = C2664 * C215;
    const double C3055 = C2664 * C224;
    const double C3047 = C2664 * C214;
    const double C3337 = C2664 * C620;
    const double C3329 = C2664 * C630;
    const double C3673 = C2664 * C325;
    const double C3665 = C2664 * C345;
    const double C3659 = C2664 * C330;
    const double C3651 = C2664 * C320;
    const double C3967 = C2664 * C329;
    const double C3959 = C2664 * C319;
    const double C15184 = C15055 * C220;
    const double C15176 = C15055 * C240;
    const double C15170 = C15055 * C225;
    const double C15162 = C15055 * C215;
    const double C15446 = C15055 * C224;
    const double C15438 = C15055 * C214;
    const double C15728 = C15055 * C620;
    const double C15720 = C15055 * C630;
    const double C21105 = C15055 * C325;
    const double C21097 = C15055 * C345;
    const double C21091 = C15055 * C330;
    const double C21083 = C15055 * C320;
    const double C21399 = C15055 * C329;
    const double C21391 = C15055 * C319;
    const double C5439 = C5419 + C5420;
    const double C5436 = C5413 + C5414;
    const double C5433 = C5407 + C5408;
    const double C5430 = C5401 + C5402;
    const double C5427 = C5395 + C5396;
    const double C5424 = C5389 + C5390;
    const double C5735 = C5721 + C5722;
    const double C5732 = C5715 + C5716;
    const double C5729 = C5709 + C5710;
    const double C5726 = C5703 + C5704;
    const double C6063 = C6049 + C6050;
    const double C6060 = C6043 + C6044;
    const double C6057 = C6037 + C6038;
    const double C6054 = C6031 + C6032;
    const double C10581 = C10561 + C10562;
    const double C10578 = C10555 + C10556;
    const double C10575 = C10549 + C10550;
    const double C10572 = C10543 + C10544;
    const double C10569 = C10537 + C10538;
    const double C10566 = C10531 + C10532;
    const double C10916 = C10902 + C10903;
    const double C10913 = C10896 + C10897;
    const double C10910 = C10890 + C10891;
    const double C10907 = C10884 + C10885;
    const double C11080 = C11072 + C11073;
    const double C11077 = C11066 + C11067;
    const double C26790 = C26782 + C26783;
    const double C26787 = C26776 + C26777;
    const double C31565 = C31564 / C31512;
    const double C5421 = C5270 * C872;
    const double C5415 = C5270 * C878;
    const double C5405 = C5270 * C238;
    const double C5399 = C5270 * C218;
    const double C5393 = C5270 * C227;
    const double C5387 = C5270 * C217;
    const double C5719 = C5270 * C239;
    const double C5713 = C5270 * C219;
    const double C5707 = C5270 * C226;
    const double C5701 = C5270 * C216;
    const double C6051 = C5270 * C618;
    const double C6045 = C5270 * C628;
    const double C6039 = C5270 * C1064;
    const double C6033 = C5270 * C1073;
    const double C10563 = C5270 * C1963;
    const double C10557 = C5270 * C1969;
    const double C10547 = C5270 * C343;
    const double C10541 = C5270 * C323;
    const double C10535 = C5270 * C332;
    const double C10529 = C5270 * C322;
    const double C10900 = C5270 * C344;
    const double C10894 = C5270 * C324;
    const double C10888 = C5270 * C331;
    const double C10882 = C5270 * C321;
    const double C11070 = C5270 * C1080;
    const double C11064 = C5270 * C1065;
    const double C26780 = C5270 * C629;
    const double C26774 = C5270 * C619;
    const double C2046 = C2044 + C2045;
    const double C17081 = C17080 + C17066;
    const double C25558 = C25557 + C25555;
    const double C9779 = C6853 * C7649;
    const double C9772 = C6616 * C7649;
    const double C10054 = C7200 * C7649;
    const double C10192 = C6614 * C7649;
    const double C27493 = C6853 * C15849;
    const double C27486 = C6616 * C15849;
    const double C27762 = C7200 * C15849;
    const double C27900 = C6614 * C15849;
    const double C31687 = C31685 / C31512;
    const double C10195 = C6611 * C32836;
    const double C27903 = C6611 * C32836;
    const double C7541 = C6855 * C32826;
    const double C9776 = C6855 * C32836;
    const double C11896 = C6855 * C32826;
    const double C27490 = C6855 * C32836;
    const double C31495 = C6855 * C17833;
    const double C252 =
        (3 * C31810 + ae * C31811 + C31758 * C31838 + ae * C31757 * C31913 +
         C31757 *
             (ae * C31913 +
              C31757 *
                  (3 * C31834 + ae * C31835 +
                   C31758 * (2 * C31830 + ae * C31831 +
                             C31758 * (C31826 + ae * C31758 * C31827 +
                                       C31758 * (ae * C31827 +
                                                 C31758 * std::pow(C31760, 8) *
                                                     bs[8] * C31768)))))) /
        C31517;
    const double C447 =
        (ae * (4 * C31886 + C31758 * C31913 +
               (3 * C31849 + C31758 * C31904) * ae) +
         C31757 *
             (4 * C31838 + ae * C31839 +
              C31758 *
                  (3 * C31834 + ae * C31835 +
                   C31758 * (2 * C31830 + ae * C31831 +
                             C31758 * (C31826 + ae * C31758 * C31827 +
                                       C31758 * (ae * C31827 +
                                                 C31758 * std::pow(C31760, 8) *
                                                     bs[8] * C31768)))))) /
        C31517;
    const double C637 =
        (ae * C31927 * C31913 +
         C31757 * C31927 *
             (3 * C31834 + ae * C31835 +
              C31758 * (2 * C31830 + ae * C31831 +
                        C31758 * (C31826 + ae * C31758 * C31827 +
                                  C31758 * (ae * C31827 +
                                            C31758 * std::pow(C31760, 8) *
                                                bs[8] * C31768))))) /
        C31517;
    const double C138 = (5 * (3 * C31870 + C31758 * C31886 + C32106 * ae) +
                         C31758 * (4 * C31886 + C31758 * C31913 + C32110 * ae) +
                         (4 * C32106 + C31758 * C32110) * ae) /
                        C31512;
    const double C237 =
        (3 * C31870 + C31758 * C31886 + C32106 * ae + C31913 * C31939) / C31512;
    const double C342 =
        (3 * C31870 + C31758 * C31886 + C32106 * ae + C31913 * C31961) / C31512;
    const double C445 =
        (C31757 * (4 * C31886 + C31758 * C31913 + C32110 * ae)) / C31512;
    const double C533 =
        (C31927 * (4 * C31886 + C31758 * C31913 + C32110 * ae)) / C31512;
    const double C627 = (C31927 * C31757 * C31913) / C31512;
    const double C12883 = C12871 + C12872;
    const double C13804 = C13792 + C13793;
    const double C30096 = C30092 + C30093;
    const double C13811 = C13805 + C13806;
    const double C2812 = C2793 + C2794;
    const double C2808 = C2785 + C2786;
    const double C2805 = C2779 + C2780;
    const double C2801 = C2771 + C2772;
    const double C3065 = C3055 + C3056;
    const double C3061 = C3047 + C3048;
    const double C3348 = C3337 + C3338;
    const double C3344 = C3329 + C3330;
    const double C3692 = C3673 + C3674;
    const double C3688 = C3665 + C3666;
    const double C3685 = C3659 + C3660;
    const double C3681 = C3651 + C3652;
    const double C3977 = C3967 + C3968;
    const double C3973 = C3959 + C3960;
    const double C15203 = C15184 + C15185;
    const double C15199 = C15176 + C15177;
    const double C15196 = C15170 + C15171;
    const double C15192 = C15162 + C15163;
    const double C15456 = C15446 + C15447;
    const double C15452 = C15438 + C15439;
    const double C15739 = C15728 + C15729;
    const double C15735 = C15720 + C15721;
    const double C21124 = C21105 + C21106;
    const double C21120 = C21097 + C21098;
    const double C21117 = C21091 + C21092;
    const double C21113 = C21083 + C21084;
    const double C21409 = C21399 + C21400;
    const double C21405 = C21391 + C21392;
    const double C31566 = C31549 - C31565;
    const double C5440 = C5421 + C5422;
    const double C5437 = C5415 + C5416;
    const double C5432 = C5405 + C5406;
    const double C5429 = C5399 + C5400;
    const double C5426 = C5393 + C5394;
    const double C5423 = C5387 + C5388;
    const double C5734 = C5719 + C5720;
    const double C5731 = C5713 + C5714;
    const double C5728 = C5707 + C5708;
    const double C5725 = C5701 + C5702;
    const double C6064 = C6051 + C6052;
    const double C6061 = C6045 + C6046;
    const double C6058 = C6039 + C6040;
    const double C6055 = C6033 + C6034;
    const double C10582 = C10563 + C10564;
    const double C10579 = C10557 + C10558;
    const double C10574 = C10547 + C10548;
    const double C10571 = C10541 + C10542;
    const double C10568 = C10535 + C10536;
    const double C10565 = C10529 + C10530;
    const double C10915 = C10900 + C10901;
    const double C10912 = C10894 + C10895;
    const double C10909 = C10888 + C10889;
    const double C10906 = C10882 + C10883;
    const double C11079 = C11070 + C11071;
    const double C11076 = C11064 + C11065;
    const double C26789 = C26780 + C26781;
    const double C26786 = C26774 + C26775;
    const double C17082 = C17081 + C17067;
    const double C25559 = C25558 + C25556;
    const double C31689 = C31675 - C31687;
    const double C12884 = C12883 + C12873;
    const double C30097 = C30096 + C30094;
    const double C31567 = C31566 + C31538;
    const double C5442 = C5432 + C5433;
    const double C5441 = C5429 + C5430;
    const double C27183 = C6063 + C6064;
    const double C27180 = C6064 + C6063;
    const double C27182 = C6060 + C6061;
    const double C27181 = C6061 + C6060;
    const double C10584 = C10574 + C10575;
    const double C10583 = C10571 + C10572;
    const double C31690 = C31689 + C31660;
    const double C12885 = C12884 + C12874;
    const double C30098 = C30097 + C30095;
    const double C17985 = C31567 * C872;
    const double C17979 = C31567 * C878;
    const double C17969 = C31567 * C238;
    const double C17963 = C31567 * C218;
    const double C17957 = C31567 * C227;
    const double C17951 = C31567 * C217;
    const double C18283 = C31567 * C239;
    const double C18277 = C31567 * C219;
    const double C18271 = C31567 * C226;
    const double C18265 = C31567 * C216;
    const double C18615 = C31567 * C618;
    const double C18609 = C31567 * C628;
    const double C18603 = C31567 * C1064;
    const double C18597 = C31567 * C1073;
    const double C19101 = C31567 * C323;
    const double C19095 = C31567 * C343;
    const double C19089 = C31567 * C1065;
    const double C19083 = C31567 * C1080;
    const double C19073 = C31567 * C332;
    const double C19067 = C31567 * C322;
    const double C19321 = C31567 * C629;
    const double C19315 = C31567 * C619;
    const double C19533 = C31567 * C331;
    const double C19527 = C31567 * C321;
    const double C24646 = C31567 * C1963;
    const double C24640 = C31567 * C1969;
    const double C24957 = C31567 * C344;
    const double C24951 = C31567 * C324;
    const double C113 =
        (((((0 - (C31510 * C31511) / C31512) * ae) / C31512 -
           (0 * be) / C31524 + (2 * C31513) / C31512) /
              C31518 -
          ((C31510 * C31547 + 0) * be) / C31512 + C31530 - C31540) /
             C31518 +
         ((C31510 * C31561 + 0) * ae) / C31512) /
            C31518 -
        ((C31510 * (C31561 / C31518 +
                    ((C31510 * C31567 + C32455) * ae) / C31512 + C31563) +
          C32867) *
         be) /
            C31512 +
        C31567 / C31518 + ((C31510 * C31563 + C32463) * ae) / C31512 +
        2 * (C31538 / C31518 - (0 * be) / C31512);
    const double C114 =
        (C31561 / C31518 + ((C31510 * C31567 + C32455) * ae) / C31512 +
         C31563) /
            C31518 -
        ((C31510 * (C31567 / C31518 +
                    ((C31510 * C31563 + C32463) * ae) / C31512 + 2 * C31573) +
          C32860) *
         be) /
            C31512 +
        2 * (C31563 / C31518 + ((C31510 * C31573 + C17830) * ae) / C31512);
    const double C115 =
        (C31567 / C31518 + ((C31510 * C31563 + C32463) * ae) / C31512 +
         2 * C31573) /
            C31518 -
        ((C31510 *
              (C31563 / C31518 + ((C31510 * C31573 + C17830) * ae) / C31512) +
          C32847) *
         be) /
            C31512 +
        3 * (C31573 / C31518 + (0 * ae) / C31512);
    const double C2662 =
        C31561 / C31518 - ((C31510 * C31567 + C32455) * be) / C31512 + C31563;
    const double C2663 = C31567 / C31518 -
                         ((C31510 * C31563 + C32463) * be) / C31512 +
                         2 * C31573;
    const double C15053 =
        C31561 / C31518 + ((C31510 * C31567 + C32455) * ae) / C31512 + C31563;
    const double C15054 = C31567 / C31518 +
                          ((C31510 * C31563 + C32463) * ae) / C31512 +
                          2 * C31573;
    const double C5444 = C5442 + C5434;
    const double C5443 = C5441 + C5431;
    const double C27187 = C6062 + C27183;
    const double C27184 = C27180 + C6062;
    const double C27186 = C6059 + C27182;
    const double C27185 = C27181 + C6059;
    const double C10586 = C10584 + C10576;
    const double C10585 = C10583 + C10573;
    const double C31028 = C7016 * C31690;
    const double C31017 = C7009 * C31690;
    const double C31011 = C7007 * C31690;
    const double C31332 = C7374 * C31690;
    const double C31326 = C7372 * C31690;
    const double C31490 = C6851 * C31690;
    const double C31484 = C6618 * C31690;
    const double C6133 =
        (((((0 - (C31597 * C31643) / C31512) * ae) / C31512 -
           (0 * be) / C31524 + (2 * C31644) / C31512) /
              C31518 -
          ((C31597 * C31679 + 0) * be) / C31512 + C31653 - C31666) /
             C31518 +
         ((C31597 * C31688 + 0) * ae) / C31512) /
            C31518 -
        ((C31597 * (C31688 / C31518 +
                    ((C31597 * C31690 + C32597) * ae) / C31512 + C31682) +
          C32868) *
         be) /
            C31512 +
        C31690 / C31518 + ((C31597 * C31682 + C32604) * ae) / C31512 +
        2 * (C31660 / C31518 - (0 * be) / C31512);
    const double C6134 =
        (C31688 / C31518 + ((C31597 * C31690 + C32597) * ae) / C31512 +
         C31682) /
            C31518 -
        ((C31597 * (C31690 / C31518 +
                    ((C31597 * C31682 + C32604) * ae) / C31512 + 2 * C31696) +
          C32864) *
         be) /
            C31512 +
        2 * (C31682 / C31518 + ((C31597 * C31696 + C17833) * ae) / C31512);
    const double C6135 =
        (C31690 / C31518 + ((C31597 * C31682 + C32604) * ae) / C31512 +
         2 * C31696) /
            C31518 -
        ((C31597 *
              (C31682 / C31518 + ((C31597 * C31696 + C17833) * ae) / C31512) +
          C32854) *
         be) /
            C31512 +
        3 * (C31696 / C31518 + (0 * ae) / C31512);
    const double C7647 =
        C31688 / C31518 - ((C31597 * C31690 + C32597) * be) / C31512 + C31682;
    const double C7648 = C31690 / C31518 -
                         ((C31597 * C31682 + C32604) * be) / C31512 +
                         2 * C31696;
    const double C15847 =
        C31688 / C31518 + ((C31597 * C31690 + C32597) * ae) / C31512 + C31682;
    const double C15848 = C31690 / C31518 +
                          ((C31597 * C31682 + C32604) * ae) / C31512 +
                          2 * C31696;
    const double C18004 = C17985 + C17986;
    const double C18001 = C17979 + C17980;
    const double C17996 = C17969 + C17970;
    const double C17993 = C17963 + C17964;
    const double C17990 = C17957 + C17958;
    const double C17987 = C17951 + C17952;
    const double C18298 = C18283 + C18284;
    const double C18295 = C18277 + C18278;
    const double C18292 = C18271 + C18272;
    const double C18289 = C18265 + C18266;
    const double C18628 = C18615 + C18616;
    const double C18625 = C18609 + C18610;
    const double C18622 = C18603 + C18604;
    const double C18619 = C18597 + C18598;
    const double C19120 = C19101 + C19102;
    const double C19117 = C19095 + C19096;
    const double C19114 = C19089 + C19090;
    const double C19111 = C19083 + C19084;
    const double C19106 = C19073 + C19074;
    const double C19103 = C19067 + C19068;
    const double C19330 = C19321 + C19322;
    const double C19327 = C19315 + C19316;
    const double C19542 = C19533 + C19534;
    const double C19539 = C19527 + C19528;
    const double C24655 = C24646 + C24647;
    const double C24652 = C24640 + C24641;
    const double C24966 = C24957 + C24958;
    const double C24963 = C24951 + C24952;
    const double C2797 = C2662 * C218;
    const double C2789 = C2662 * C238;
    const double C2775 = C2662 * C227;
    const double C2767 = C2662 * C217;
    const double C3051 = C2662 * C226;
    const double C3043 = C2662 * C216;
    const double C3341 = C2662 * C618;
    const double C3333 = C2662 * C628;
    const double C3677 = C2662 * C323;
    const double C3669 = C2662 * C343;
    const double C3655 = C2662 * C332;
    const double C3647 = C2662 * C322;
    const double C3963 = C2662 * C331;
    const double C3955 = C2662 * C321;
    const double C2795 = C2663 * C219;
    const double C2787 = C2663 * C239;
    const double C2777 = C2663 * C226;
    const double C2769 = C2663 * C216;
    const double C3053 = C2663 * C225;
    const double C3045 = C2663 * C215;
    const double C3339 = C2663 * C619;
    const double C3331 = C2663 * C629;
    const double C3675 = C2663 * C324;
    const double C3667 = C2663 * C344;
    const double C3657 = C2663 * C331;
    const double C3649 = C2663 * C321;
    const double C3965 = C2663 * C330;
    const double C3957 = C2663 * C320;
    const double C15188 = C15053 * C218;
    const double C15180 = C15053 * C238;
    const double C15166 = C15053 * C227;
    const double C15158 = C15053 * C217;
    const double C15442 = C15053 * C226;
    const double C15434 = C15053 * C216;
    const double C15732 = C15053 * C618;
    const double C15724 = C15053 * C628;
    const double C21109 = C15053 * C323;
    const double C21101 = C15053 * C343;
    const double C21087 = C15053 * C332;
    const double C21079 = C15053 * C322;
    const double C21395 = C15053 * C331;
    const double C21387 = C15053 * C321;
    const double C15186 = C15054 * C219;
    const double C15178 = C15054 * C239;
    const double C15168 = C15054 * C226;
    const double C15160 = C15054 * C216;
    const double C15444 = C15054 * C225;
    const double C15436 = C15054 * C215;
    const double C15730 = C15054 * C619;
    const double C15722 = C15054 * C629;
    const double C21107 = C15054 * C324;
    const double C21099 = C15054 * C344;
    const double C21089 = C15054 * C331;
    const double C21081 = C15054 * C321;
    const double C21397 = C15054 * C330;
    const double C21389 = C15054 * C320;
    const double C10588 = C10586 * C32542;
    const double C10587 = C10585 * C118;
    const double C31029 = C31017 + C31018;
    const double C9783 = C7009 * C7647;
    const double C9768 = C7007 * C7647;
    const double C10050 = C7372 * C7647;
    const double C10188 = C6618 * C7647;
    const double C9781 = C6851 * C7648;
    const double C9770 = C6618 * C7648;
    const double C10052 = C7198 * C7648;
    const double C10190 = C6616 * C7648;
    const double C27497 = C7009 * C15847;
    const double C27482 = C7007 * C15847;
    const double C27758 = C7372 * C15847;
    const double C27896 = C6618 * C15847;
    const double C27495 = C6851 * C15848;
    const double C27484 = C6618 * C15848;
    const double C27760 = C7198 * C15848;
    const double C27898 = C6616 * C15848;
    const double C18006 = C17996 + C17997;
    const double C18005 = C17993 + C17994;
    const double C19742 = C18627 + C18628;
    const double C19739 = C18628 + C18627;
    const double C19741 = C18624 + C18625;
    const double C19740 = C18625 + C18624;
    const double C24634 = C19120 + C19119;
    const double C24635 = C19117 + C19116;
    const double C2814 = C2797 + C2798;
    const double C2810 = C2789 + C2790;
    const double C2803 = C2775 + C2776;
    const double C2799 = C2767 + C2768;
    const double C3063 = C3051 + C3052;
    const double C3059 = C3043 + C3044;
    const double C3350 = C3341 + C3342;
    const double C3346 = C3333 + C3334;
    const double C3694 = C3677 + C3678;
    const double C3690 = C3669 + C3670;
    const double C3683 = C3655 + C3656;
    const double C3679 = C3647 + C3648;
    const double C3975 = C3963 + C3964;
    const double C3971 = C3955 + C3956;
    const double C2813 = C2795 + C2796;
    const double C2809 = C2787 + C2788;
    const double C2804 = C2777 + C2778;
    const double C2800 = C2769 + C2770;
    const double C3064 = C3053 + C3054;
    const double C3060 = C3045 + C3046;
    const double C3349 = C3339 + C3340;
    const double C3345 = C3331 + C3332;
    const double C3693 = C3675 + C3676;
    const double C3689 = C3667 + C3668;
    const double C3684 = C3657 + C3658;
    const double C3680 = C3649 + C3650;
    const double C3976 = C3965 + C3966;
    const double C3972 = C3957 + C3958;
    const double C15205 = C15188 + C15189;
    const double C15201 = C15180 + C15181;
    const double C15194 = C15166 + C15167;
    const double C15190 = C15158 + C15159;
    const double C15454 = C15442 + C15443;
    const double C15450 = C15434 + C15435;
    const double C15741 = C15732 + C15733;
    const double C15737 = C15724 + C15725;
    const double C21126 = C21109 + C21110;
    const double C21122 = C21101 + C21102;
    const double C21115 = C21087 + C21088;
    const double C21111 = C21079 + C21080;
    const double C21407 = C21395 + C21396;
    const double C21403 = C21387 + C21388;
    const double C15204 = C15186 + C15187;
    const double C15200 = C15178 + C15179;
    const double C15195 = C15168 + C15169;
    const double C15191 = C15160 + C15161;
    const double C15455 = C15444 + C15445;
    const double C15451 = C15436 + C15437;
    const double C15740 = C15730 + C15731;
    const double C15736 = C15722 + C15723;
    const double C21125 = C21107 + C21108;
    const double C21121 = C21099 + C21100;
    const double C21116 = C21089 + C21090;
    const double C21112 = C21081 + C21082;
    const double C21408 = C21397 + C21398;
    const double C21404 = C21389 + C21390;
    const double C10589 = C10587 + C10588;
    const double C31030 = C31029 + C31019;
    const double C18008 = C18006 + C17998;
    const double C18007 = C18005 + C17995;
    const double C19746 = C18626 + C19742;
    const double C19743 = C19739 + C18626;
    const double C19745 = C18623 + C19741;
    const double C19744 = C19740 + C18623;
    const double C24648 = C24634 + C19118;
    const double C24649 = C24635 + C19115;
    const double C31031 = C31030 + C31020;
    const double C24656 = C24648 * C118;
    const double C24657 = C24649 * C32542;
    const double C31032 = C31031 + C31021;
    const double C24658 = C24656 + C24657;
    const double C31033 = C31032 + C31022;
    d2ee[0] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                ((((C31567 * C119 + C32455 * C126 + C31563 * C120 +
                    C32463 * C127 + C31573 * C121 + C17830 * C128) *
                       C31690 +
                   (C31567 * C131 + C32455 * C140 + C31563 * C132 +
                    C32463 * C141 + C31573 * C133 + C17830 * C142) *
                       C32597 +
                   (C17987 + C17988 + C17989) * C31682 +
                   (C17990 + C17991 + C17992) * C32604 + C18007 * C31696 +
                   C18008 * C17833) *
                      C32554 * C32513 * C440 -
                  ((C17999 + C18000 + C18001) * C17833 +
                   (C18002 + C18003 + C18004) * C31696 +
                   (C17998 + C17997 + C17996) * C32604 +
                   (C17995 + C17994 + C17993) * C31682 +
                   (C17992 + C17991 + C17990) * C32597 +
                   (C17989 + C17988 + C17987) * C31690) *
                      C32554 * C32513 * C441) *
                     C442 +
                 (((C18289 + C18290 + C18291) * C31690 +
                   (C18292 + C18293 + C18294) * C32597 +
                   (C18295 + C18296 + C18297) * C31682 +
                   (C18298 + C18299 + C18300) * C32604 +
                   (C31567 * C871 + C32455 * C880 + C31563 * C870 +
                    C32463 * C879 + C31573 * C1244 + C17830 * C1245) *
                       C31696 +
                   (C31567 * C877 + C32455 * C889 + C31563 * C876 +
                    C32463 * C888 + C31573 * C1246 + C17830 * C1247) *
                       C17833) *
                      C32554 * C32513 * C441 -
                  ((C18300 + C18299 + C18298) * C17833 +
                   (C18297 + C18296 + C18295) * C31696 +
                   (C18294 + C18293 + C18292) * C32604 +
                   (C18291 + C18290 + C18289) * C31682 +
                   (C31573 * C134 + C17830 * C143 + C31563 * C133 +
                    C32463 * C142 + C31567 * C132 + C32455 * C141) *
                       C32597 +
                   (C31573 * C122 + C17830 * C129 + C31563 * C121 +
                    C32463 * C128 + C31567 * C120 + C32455 * C127) *
                       C31690) *
                      C32554 * C32513 * C440) *
                     C443)) /
               (p * q * std::sqrt(p + q));
    d2ee[1] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                ((((C31567 * C119 + C32455 * C126 + C31563 * C120 +
                    C32463 * C127 + C31573 * C121 + C17830 * C128) *
                       C31690 +
                   (C31567 * C131 + C32455 * C140 + C31563 * C132 +
                    C32463 * C141 + C31573 * C133 + C17830 * C142) *
                       C32597 +
                   (C17987 + C17988 + C17989) * C31682 +
                   (C17990 + C17991 + C17992) * C32604 + C18007 * C31696 +
                   C18008 * C17833) *
                      C32554 * C530 -
                  ((C18617 + C18618 + C18619) * C17833 +
                   (C18620 + C18621 + C18622) * C31696 +
                   (C18623 + C18624 + C18625) * C32604 +
                   (C18626 + C18627 + C18628) * C31682 +
                   (C31573 * C330 + C17830 * C350 + C31563 * C331 +
                    C32463 * C351 + C31567 * C332 + C32455 * C352) *
                       C32597 +
                   (C31573 * C320 + C17830 * C335 + C31563 * C321 +
                    C32463 * C336 + C31567 * C322 + C32455 * C337) *
                       C31690) *
                      C32554 * C531) *
                     C440 +
                 (((C18628 + C18627 + C18626) * C31690 +
                   (C18625 + C18624 + C18623) * C32597 +
                   (C18622 + C18621 + C18620) * C31682 +
                   (C18619 + C18618 + C18617) * C32604 +
                   (C31567 * C1580 + C32455 * C1583 + C31563 * C1581 +
                    C32463 * C1584 + C31573 * C1582 + C17830 * C1585) *
                       C31696 +
                   (C31567 * C1586 + C32455 * C1589 + C31563 * C1587 +
                    C32463 * C1590 + C31573 * C1588 + C17830 * C1591) *
                       C17833) *
                      C32554 * C531 -
                  ((C17999 + C18000 + C18001) * C17833 +
                   (C18002 + C18003 + C18004) * C31696 +
                   (C17998 + C17997 + C17996) * C32604 +
                   (C17995 + C17994 + C17993) * C31682 +
                   (C17992 + C17991 + C17990) * C32597 +
                   (C17989 + C17988 + C17987) * C31690) *
                      C32554 * C530) *
                     C441) *
                C32487) /
               (p * q * std::sqrt(p + q));
    d2ee[2] += (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                (((C31567 * C119 + C32455 * C126 + C31563 * C120 +
                   C32463 * C127 + C31573 * C121 + C17830 * C128) *
                      C31690 +
                  (C31567 * C131 + C32455 * C140 + C31563 * C132 +
                   C32463 * C141 + C31573 * C133 + C17830 * C142) *
                      C32597 +
                  (C17987 + C17988 + C17989) * C31682 +
                  (C17990 + C17991 + C17992) * C32604 + C18007 * C31696 +
                  C18008 * C17833) *
                     C32554 * C32513 * C209 -
                 ((C17999 + C18000 + C18001) * C17833 +
                  (C18002 + C18003 + C18004) * C31696 +
                  (C17998 + C17997 + C17996) * C32604 +
                  (C17995 + C17994 + C17993) * C31682 +
                  (C17992 + C17991 + C17990) * C32597 +
                  (C17989 + C17988 + C17987) * C31690) *
                     C32554 * C32513 * C210 +
                 (C18007 * C31690 + C18008 * C32597 +
                  (C18004 + C18003 + C18002) * C31682 +
                  (C18001 + C18000 + C17999) * C32604 +
                  (C31567 * C873 + C32455 * C882 + C31563 * C874 +
                   C32463 * C883 + C31573 * C875 + C17830 * C884) *
                      C31696 +
                  (C31567 * C885 + C32455 * C891 + C31563 * C886 +
                   C32463 * C892 + C31573 * C887 + C17830 * C893) *
                      C17833) *
                     C32554 * C32513 * C211) *
                C32487) /
                   (p * q * std::sqrt(p + q)) -
               (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                (((C31567 * C119 + C32455 * C126 + C31563 * C120 +
                   C32463 * C127 + C31573 * C121 + C17830 * C128) *
                      C31690 +
                  (C31567 * C131 + C32455 * C140 + C31563 * C132 +
                   C32463 * C141 + C31573 * C133 + C17830 * C142) *
                      C32597 +
                  (C31567 * C217 + C32455 * C232 + C31563 * C216 +
                   C32463 * C231 + C31573 * C215 + C17830 * C230) *
                      C31682 +
                  (C31567 * C227 + C32455 * C247 + C31563 * C226 +
                   C32463 * C246 + C31573 * C225 + C17830 * C245) *
                      C32604 +
                  (C31567 * C218 + C32455 * C233 + C31563 * C219 +
                   C32463 * C234 + C31573 * C220 + C17830 * C235) *
                      C31696 +
                  (C31567 * C238 + C32455 * C248 + C31563 * C239 +
                   C32463 * C249 + C31573 * C240 + C17830 * C250) *
                      C17833) *
                     C32554 * C32513 * C32499 * C110 -
                 ((C31573 * C241 + C17830 * C251 + C31563 * C240 +
                   C32463 * C250 + C31567 * C239 + C32455 * C249) *
                      C17833 +
                  (C31573 * C221 + C17830 * C236 + C31563 * C220 +
                   C32463 * C235 + C31567 * C219 + C32455 * C234) *
                      C31696 +
                  (C31573 * C224 + C17830 * C244 + C31563 * C225 +
                   C32463 * C245 + C31567 * C226 + C32455 * C246) *
                      C32604 +
                  (C31573 * C214 + C17830 * C229 + C31563 * C215 +
                   C32463 * C230 + C31567 * C216 + C32455 * C231) *
                      C31682 +
                  (C31573 * C134 + C17830 * C143 + C31563 * C133 +
                   C32463 * C142 + C31567 * C132 + C32455 * C141) *
                      C32597 +
                  (C31573 * C122 + C17830 * C129 + C31563 * C121 +
                   C32463 * C128 + C31567 * C120 + C32455 * C127) *
                      C31690) *
                     C32554 * C32513 * C32499 * C111 +
                 ((C31567 * C121 + C32455 * C128 + C31563 * C122 +
                   C32463 * C129 + C31573 * C123 + C17830 * C130) *
                      C31690 +
                  (C31567 * C133 + C32455 * C142 + C31563 * C134 +
                   C32463 * C143 + C31573 * C135 + C17830 * C144) *
                      C32597 +
                  (C31567 * C215 + C32455 * C230 + C31563 * C214 +
                   C32463 * C229 + C31573 * C213 + C17830 * C228) *
                      C31682 +
                  (C31567 * C225 + C32455 * C245 + C31563 * C224 +
                   C32463 * C244 + C31573 * C223 + C17830 * C243) *
                      C32604 +
                  (C31567 * C220 + C32455 * C235 + C31563 * C221 +
                   C32463 * C236 + C31573 * C222 + C17830 * C237) *
                      C31696 +
                  (C31567 * C240 + C32455 * C250 + C31563 * C241 +
                   C32463 * C251 + C31573 * C242 + C17830 * C252) *
                      C17833) *
                     C32554 * C32513 * C32499 * C112)) /
                   (p * q * std::sqrt(p + q)) +
               (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                (((C31567 * C119 + C32455 * C126 + C31563 * C120 +
                   C32463 * C127 + C31573 * C121 + C17830 * C128) *
                      C31690 +
                  (C31567 * C131 + C32455 * C140 + C31563 * C132 +
                   C32463 * C141 + C31573 * C133 + C17830 * C142) *
                      C32597 +
                  (C17987 + C17988 + C17989) * C31682 +
                  (C17990 + C17991 + C17992) * C32604 + C18007 * C31696 +
                  C18008 * C17833) *
                     C32554 * C315 -
                 ((C31573 * C1071 + C17830 * C1089 + C31563 * C1072 +
                   C32463 * C1090 + C31567 * C1073 + C32455 * C1091) *
                      C17833 +
                  (C31573 * C1062 + C17830 * C1074 + C31563 * C1063 +
                   C32463 * C1075 + C31567 * C1064 + C32455 * C1076) *
                      C31696 +
                  (C31573 * C630 + C17830 * C635 + C31563 * C629 +
                   C32463 * C634 + C31567 * C628 + C32455 * C633) *
                      C32604 +
                  (C31573 * C620 + C17830 * C625 + C31563 * C619 +
                   C32463 * C624 + C31567 * C618 + C32455 * C623) *
                      C31682 +
                  (C31573 * C330 + C17830 * C350 + C31563 * C331 +
                   C32463 * C351 + C31567 * C332 + C32455 * C352) *
                      C32597 +
                  (C31573 * C320 + C17830 * C335 + C31563 * C321 +
                   C32463 * C336 + C31567 * C322 + C32455 * C337) *
                      C31690) *
                     C32554 * C316 +
                 ((C31567 * C323 + C32455 * C338 + C31563 * C324 +
                   C32463 * C339 + C31573 * C325 + C17830 * C340) *
                      C31690 +
                  (C31567 * C343 + C32455 * C353 + C31563 * C344 +
                   C32463 * C354 + C31573 * C345 + C17830 * C355) *
                      C32597 +
                  (C31567 * C1065 + C32455 * C1077 + C31563 * C1066 +
                   C32463 * C1078 + C31573 * C1067 + C17830 * C1079) *
                      C31682 +
                  (C31567 * C1080 + C32455 * C1092 + C31563 * C1081 +
                   C32463 * C1093 + C31573 * C1082 + C17830 * C1094) *
                      C32604 +
                  (C31567 * C1068 + C32455 * C1083 + C31563 * C1069 +
                   C32463 * C1084 + C31573 * C1070 + C17830 * C1085) *
                      C31696 +
                  (C31567 * C1086 + C32455 * C1095 + C31563 * C1087 +
                   C32463 * C1096 + C31573 * C1088 + C17830 * C1097) *
                      C17833) *
                     C32554 * C317) *
                C32499 * C32487) /
                   (p * q * std::sqrt(p + q));
    d2ee[3] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                ((((C31567 * C119 + C32455 * C126 + C31563 * C120 +
                    C32463 * C127 + C31573 * C121 + C17830 * C128) *
                       C31690 +
                   (C31567 * C131 + C32455 * C140 + C31563 * C132 +
                    C32463 * C141 + C31573 * C133 + C17830 * C142) *
                       C32597 +
                   (C17987 + C17988 + C17989) * C31682 +
                   (C17990 + C17991 + C17992) * C32604 + C18007 * C31696 +
                   C18008 * C17833) *
                      C32554 * C530 -
                  ((C31573 * C1071 + C17830 * C1089 + C31563 * C1072 +
                    C32463 * C1090 + C31567 * C1073 + C32455 * C1091) *
                       C17833 +
                   (C31573 * C1062 + C17830 * C1074 + C31563 * C1063 +
                    C32463 * C1075 + C31567 * C1064 + C32455 * C1076) *
                       C31696 +
                   (C31573 * C630 + C17830 * C635 + C31563 * C629 +
                    C32463 * C634 + C31567 * C628 + C32455 * C633) *
                       C32604 +
                   (C31573 * C620 + C17830 * C625 + C31563 * C619 +
                    C32463 * C624 + C31567 * C618 + C32455 * C623) *
                       C31682 +
                   (C31573 * C330 + C17830 * C350 + C31563 * C331 +
                    C32463 * C351 + C31567 * C332 + C32455 * C352) *
                       C32597 +
                   (C31573 * C320 + C17830 * C335 + C31563 * C321 +
                    C32463 * C336 + C31567 * C322 + C32455 * C337) *
                       C31690) *
                      C32554 * C531) *
                     C32499 * C442 +
                 (((C31567 * C321 + C32455 * C336 + C31563 * C320 +
                    C32463 * C335 + C31573 * C319 + C17830 * C334) *
                       C31690 +
                   (C31567 * C331 + C32455 * C351 + C31563 * C330 +
                    C32463 * C350 + C31573 * C329 + C17830 * C349) *
                       C32597 +
                   (C31567 * C619 + C32455 * C624 + C31563 * C620 +
                    C32463 * C625 + C31573 * C621 + C17830 * C626) *
                       C31682 +
                   (C31567 * C629 + C32455 * C634 + C31563 * C630 +
                    C32463 * C635 + C31573 * C631 + C17830 * C636) *
                       C32604 +
                   (C31567 * C1063 + C32455 * C1075 + C31563 * C1062 +
                    C32463 * C1074 + C31573 * C1430 + C17830 * C1431) *
                       C31696 +
                   (C31567 * C1072 + C32455 * C1090 + C31563 * C1071 +
                    C32463 * C1089 + C31573 * C1432 + C17830 * C1433) *
                       C17833) *
                      C32554 * C531 -
                  ((C18300 + C18299 + C18298) * C17833 +
                   (C18297 + C18296 + C18295) * C31696 +
                   (C18294 + C18293 + C18292) * C32604 +
                   (C18291 + C18290 + C18289) * C31682 +
                   (C31573 * C134 + C17830 * C143 + C31563 * C133 +
                    C32463 * C142 + C31567 * C132 + C32455 * C141) *
                       C32597 +
                   (C31573 * C122 + C17830 * C129 + C31563 * C121 +
                    C32463 * C128 + C31567 * C120 + C32455 * C127) *
                       C31690) *
                      C32554 * C530) *
                     C32499 * C443)) /
               (p * q * std::sqrt(p + q));
    d2ee[4] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                (((C31567 * C119 + C32455 * C126 + C31563 * C120 +
                   C32463 * C127 + C31573 * C121 + C17830 * C128) *
                      C31690 +
                  (C31567 * C131 + C32455 * C140 + C31563 * C132 +
                   C32463 * C141 + C31573 * C133 + C17830 * C142) *
                      C32597 +
                  (C31567 * C217 + C32455 * C232 + C31563 * C216 +
                   C32463 * C231 + C31573 * C215 + C17830 * C230) *
                      C31682 +
                  (C31567 * C227 + C32455 * C247 + C31563 * C226 +
                   C32463 * C246 + C31573 * C225 + C17830 * C245) *
                      C32604 +
                  (C31567 * C218 + C32455 * C233 + C31563 * C219 +
                   C32463 * C234 + C31573 * C220 + C17830 * C235) *
                      C31696 +
                  (C31567 * C238 + C32455 * C248 + C31563 * C239 +
                   C32463 * C249 + C31573 * C240 + C17830 * C250) *
                      C17833) *
                     C32554 * C32513 * C32499 * C110 -
                 ((C31573 * C241 + C17830 * C251 + C31563 * C240 +
                   C32463 * C250 + C31567 * C239 + C32455 * C249) *
                      C17833 +
                  (C31573 * C221 + C17830 * C236 + C31563 * C220 +
                   C32463 * C235 + C31567 * C219 + C32455 * C234) *
                      C31696 +
                  (C31573 * C224 + C17830 * C244 + C31563 * C225 +
                   C32463 * C245 + C31567 * C226 + C32455 * C246) *
                      C32604 +
                  (C31573 * C214 + C17830 * C229 + C31563 * C215 +
                   C32463 * C230 + C31567 * C216 + C32455 * C231) *
                      C31682 +
                  (C31573 * C134 + C17830 * C143 + C31563 * C133 +
                   C32463 * C142 + C31567 * C132 + C32455 * C141) *
                      C32597 +
                  (C31573 * C122 + C17830 * C129 + C31563 * C121 +
                   C32463 * C128 + C31567 * C120 + C32455 * C127) *
                      C31690) *
                     C32554 * C32513 * C32499 * C111 +
                 ((C31567 * C121 + C32455 * C128 + C31563 * C122 +
                   C32463 * C129 + C31573 * C123 + C17830 * C130) *
                      C31690 +
                  (C31567 * C133 + C32455 * C142 + C31563 * C134 +
                   C32463 * C143 + C31573 * C135 + C17830 * C144) *
                      C32597 +
                  (C31567 * C215 + C32455 * C230 + C31563 * C214 +
                   C32463 * C229 + C31573 * C213 + C17830 * C228) *
                      C31682 +
                  (C31567 * C225 + C32455 * C245 + C31563 * C224 +
                   C32463 * C244 + C31573 * C223 + C17830 * C243) *
                      C32604 +
                  (C31567 * C220 + C32455 * C235 + C31563 * C221 +
                   C32463 * C236 + C31573 * C222 + C17830 * C237) *
                      C31696 +
                  (C31567 * C240 + C32455 * C250 + C31563 * C241 +
                   C32463 * C251 + C31573 * C242 + C17830 * C252) *
                      C17833) *
                     C32554 * C32513 * C32499 * C112)) /
                   (p * q * std::sqrt(p + q)) -
               (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                (((C31567 * C119 + C32455 * C126 + C31563 * C120 +
                   C32463 * C127 + C31573 * C121 + C17830 * C128) *
                      C31690 +
                  (C31567 * C131 + C32455 * C140 + C31563 * C132 +
                   C32463 * C141 + C31573 * C133 + C17830 * C142) *
                      C32597 +
                  (C17987 + C17988 + C17989) * C31682 +
                  (C17990 + C17991 + C17992) * C32604 + C18007 * C31696 +
                  C18008 * C17833) *
                     C32554 * C32513 * C209 -
                 ((C17999 + C18000 + C18001) * C17833 +
                  (C18002 + C18003 + C18004) * C31696 +
                  (C17998 + C17997 + C17996) * C32604 +
                  (C17995 + C17994 + C17993) * C31682 +
                  (C17992 + C17991 + C17990) * C32597 +
                  (C17989 + C17988 + C17987) * C31690) *
                     C32554 * C32513 * C210 +
                 (C18007 * C31690 + C18008 * C32597 +
                  (C18004 + C18003 + C18002) * C31682 +
                  (C18001 + C18000 + C17999) * C32604 +
                  (C31567 * C873 + C32455 * C882 + C31563 * C874 +
                   C32463 * C883 + C31573 * C875 + C17830 * C884) *
                      C31696 +
                  (C31567 * C885 + C32455 * C891 + C31563 * C886 +
                   C32463 * C892 + C31573 * C887 + C17830 * C893) *
                      C17833) *
                     C32554 * C32513 * C211) *
                C32487) /
                   (p * q * std::sqrt(p + q));
    d2ee[5] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C15845 * C119 + C15839 * C126 + C15846 * C120 + C32460 * C127) *
                 C31690 +
             (C15845 * C131 + C15839 * C140 + C15846 * C132 + C32460 * C141) *
                 C32597 +
             (C15982 + C15983) * C31682 + (C15984 + C15985) * C32604 +
             C15998 * C31696 + C15999 * C17833) *
                C32796 +
            ((C17058 + C17059) * C31690 + (C17060 + C17061) * C32597 +
             C17713 * C31682 + C17714 * C32604 + C20039 * C31696 +
             C20040 * C17833) *
                C32641) *
               C32513 * C440 -
           (((C16550 + C16551) * C17833 + (C16552 + C16553) * C31696 +
             (C16554 + C16555) * C32604 + (C16556 + C16557) * C31682 +
             C17717 * C32597 + C17718 * C31690) *
                C32641 +
            ((C15993 + C15992) * C17833 + (C15991 + C15990) * C31696 +
             (C15989 + C15988) * C32604 + (C15987 + C15986) * C31682 +
             (C15985 + C15984) * C32597 + (C15983 + C15982) * C31690) *
                C32796) *
               C32513 * C441) *
              C442 +
          ((((C16254 + C16255) * C31690 + (C16256 + C16257) * C32597 +
             (C16258 + C16259) * C31682 + (C16260 + C16261) * C32604 +
             (C16262 + C16263) * C31696 + (C16264 + C16265) * C17833) *
                C32796 +
            ((C17293 + C17294) * C31690 + (C17295 + C17296) * C32597 +
             (C20389 + C20390) * C31682 + (C20391 + C20392) * C32604 +
             (C15845 * C1581 + C15839 * C1584 + C15846 * C1582 +
              C32460 * C1585) *
                 C31696 +
             (C15845 * C1587 + C15839 * C1590 + C15846 * C1588 +
              C32460 * C1591) *
                 C17833) *
                C32641) *
               C32513 * C441 -
           (((C20392 + C20391) * C17833 + (C20390 + C20389) * C31696 +
             (C17296 + C17295) * C32604 + (C17294 + C17293) * C31682 +
             (C17514 + C17513) * C32597 + (C17512 + C17511) * C31690) *
                C32641 +
            ((C16261 + C16260) * C17833 + (C16259 + C16258) * C31696 +
             (C16257 + C16256) * C32604 + (C16255 + C16254) * C31682 +
             (C15846 * C133 + C32460 * C142 + C15845 * C132 + C15839 * C141) *
                 C32597 +
             (C15846 * C121 + C32460 * C128 + C15845 * C120 + C15839 * C127) *
                 C31690) *
                C32796) *
               C32513 * C440) *
              C443)) /
        (p * q * std::sqrt(p + q));
    d2ee[6] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C15845 * C119 + C15839 * C126 + C15846 * C120 + C32460 * C127) *
                 C31690 +
             (C15845 * C131 + C15839 * C140 + C15846 * C132 + C32460 * C141) *
                 C32597 +
             (C15982 + C15983) * C31682 + (C15984 + C15985) * C32604 +
             C15998 * C31696 + C15999 * C17833) *
                C32796 +
            ((C17058 + C17059) * C31690 + (C17060 + C17061) * C32597 +
             C17713 * C31682 + C17714 * C32604 + C20039 * C31696 +
             C20040 * C17833) *
                C32641) *
               C530 -
           (((C16874 + C16875) * C17833 + (C16876 + C16877) * C31696 +
             C17715 * C32604 + C17716 * C31682 + (C17065 + C17064) * C32597 +
             (C17063 + C17062) * C31690) *
                C32641 +
            (C20781 * C17833 + C20782 * C31696 + C17717 * C32604 +
             C17718 * C31682 + (C17061 + C17060) * C32597 +
             (C17059 + C17058) * C31690) *
                C32796) *
               C531) *
              C440 +
          (((C17713 * C31690 + C17714 * C32597 + C20039 * C31682 +
             C20040 * C32604 + (C16553 + C16552) * C31696 +
             (C16551 + C16550) * C17833) *
                C32796 +
            (C17040 * C31690 + C17041 * C32597 + (C16877 + C16876) * C31682 +
             (C16875 + C16874) * C32604 +
             (C15845 * C6301 + C15839 * C6305 + C15846 * C7177 +
              C32460 * C7178) *
                 C31696 +
             (C15845 * C6306 + C15839 * C6310 + C15846 * C7179 +
              C32460 * C7180) *
                 C17833) *
                C32641) *
               C531 -
           (((C16550 + C16551) * C17833 + (C16552 + C16553) * C31696 +
             C20781 * C32604 + C20782 * C31682 + C17717 * C32597 +
             C17718 * C31690) *
                C32641 +
            ((C15993 + C15992) * C17833 + (C15991 + C15990) * C31696 +
             (C15989 + C15988) * C32604 + (C15987 + C15986) * C31682 +
             (C15985 + C15984) * C32597 + (C15983 + C15982) * C31690) *
                C32796) *
               C530) *
              C441) *
         C32487) /
        (p * q * std::sqrt(p + q));
    d2ee[7] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C15845 * C119 + C15839 * C126 + C15846 * C120 + C32460 * C127) *
                C31690 +
            (C15845 * C131 + C15839 * C140 + C15846 * C132 + C32460 * C141) *
                C32597 +
            (C15982 + C15983) * C31682 + (C15984 + C15985) * C32604 +
            C15998 * C31696 + C15999 * C17833) *
               C32796 +
           ((C17058 + C17059) * C31690 + (C17060 + C17061) * C32597 +
            C17713 * C31682 + C17714 * C32604 + C20039 * C31696 +
            C20040 * C17833) *
               C32641) *
              C32513 * C209 -
          (((C16550 + C16551) * C17833 + (C16552 + C16553) * C31696 +
            (C16554 + C16555) * C32604 + (C16556 + C16557) * C31682 +
            C17717 * C32597 + C17718 * C31690) *
               C32641 +
           ((C15993 + C15992) * C17833 + (C15991 + C15990) * C31696 +
            (C15989 + C15988) * C32604 + (C15987 + C15986) * C31682 +
            (C15985 + C15984) * C32597 + (C15983 + C15982) * C31690) *
               C32796) *
              C32513 * C210 +
          ((C15998 * C31690 + C15999 * C32597 + C16000 * C31682 +
            C16001 * C32604 + (C15997 + C15996) * C31696 +
            (C15995 + C15994) * C17833) *
               C32796 +
           (C20039 * C31690 + C20040 * C32597 + (C16553 + C16552) * C31682 +
            (C16551 + C16550) * C32604 +
            (C15845 * C6300 + C15839 * C6304 + C15846 * C6504 +
             C32460 * C6505) *
                C31696 +
            (C15845 * C6303 + C15839 * C6309 + C15846 * C6506 +
             C32460 * C6507) *
                C17833) *
               C32641) *
              C32513 * C211) *
         C32487) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C15845 * C119 + C15839 * C126 + C15846 * C120 + C32460 * C127) *
                C31690 +
            (C15845 * C131 + C15839 * C140 + C15846 * C132 + C32460 * C141) *
                C32597 +
            (C15982 + C15983) * C31682 + (C15984 + C15985) * C32604 +
            C15998 * C31696 + C15999 * C17833) *
               C32796 +
           ((C17058 + C17059) * C31690 + (C17060 + C17061) * C32597 +
            C17713 * C31682 + C17714 * C32604 + (C16557 + C16556) * C31696 +
            (C16555 + C16554) * C17833) *
               C32641) *
              C32513 * C32499 * C110 -
          (((C15846 * C1071 + C32460 * C1089 + C15845 * C1072 +
             C15839 * C1090) *
                C17833 +
            (C15846 * C1062 + C32460 * C1074 + C15845 * C1063 +
             C15839 * C1075) *
                C31696 +
            (C17296 + C17295) * C32604 + (C17294 + C17293) * C31682 +
            (C17514 + C17513) * C32597 + (C17512 + C17511) * C31690) *
               C32641 +
           ((C16261 + C16260) * C17833 + (C16259 + C16258) * C31696 +
            (C16257 + C16256) * C32604 + (C16255 + C16254) * C31682 +
            (C15846 * C133 + C32460 * C142 + C15845 * C132 + C15839 * C141) *
                C32597 +
            (C15846 * C121 + C32460 * C128 + C15845 * C120 + C15839 * C127) *
                C31690) *
               C32796) *
              C32513 * C32499 * C111 +
          (((C15845 * C121 + C15839 * C128 + C15846 * C122 + C32460 * C129) *
                C31690 +
            (C15845 * C133 + C15839 * C142 + C15846 * C134 + C32460 * C143) *
                C32597 +
            (C15845 * C215 + C15839 * C230 + C15846 * C214 + C32460 * C229) *
                C31682 +
            (C15845 * C225 + C15839 * C245 + C15846 * C224 + C32460 * C244) *
                C32604 +
            (C15845 * C220 + C15839 * C235 + C15846 * C221 + C32460 * C236) *
                C31696 +
            (C15845 * C240 + C15839 * C250 + C15846 * C241 + C32460 * C251) *
                C17833) *
               C32796 +
           ((C15845 * C320 + C15839 * C335 + C15846 * C319 + C32460 * C334) *
                C31690 +
            (C15845 * C330 + C15839 * C350 + C15846 * C329 + C32460 * C349) *
                C32597 +
            (C15845 * C620 + C15839 * C625 + C15846 * C621 + C32460 * C626) *
                C31682 +
            (C15845 * C630 + C15839 * C635 + C15846 * C631 + C32460 * C636) *
                C32604 +
            (C15845 * C1062 + C15839 * C1074 + C15846 * C1430 +
             C32460 * C1431) *
                C31696 +
            (C15845 * C1071 + C15839 * C1089 + C15846 * C1432 +
             C32460 * C1433) *
                C17833) *
               C32641) *
              C32513 * C32499 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C15845 * C119 + C15839 * C126 + C15846 * C120 + C32460 * C127) *
                C31690 +
            (C15845 * C131 + C15839 * C140 + C15846 * C132 + C32460 * C141) *
                C32597 +
            (C15982 + C15983) * C31682 + (C15984 + C15985) * C32604 +
            C15998 * C31696 + C15999 * C17833) *
               C32796 +
           ((C17058 + C17059) * C31690 + (C17060 + C17061) * C32597 +
            C17713 * C31682 + C17714 * C32604 + C20039 * C31696 +
            C20040 * C17833) *
               C32641) *
              C315 -
          (((C16874 + C16875) * C17833 + (C16876 + C16877) * C31696 +
            C17715 * C32604 + C17716 * C31682 + (C17065 + C17064) * C32597 +
            (C17063 + C17062) * C31690) *
               C32641 +
           ((C16554 + C16555) * C17833 + (C16556 + C16557) * C31696 +
            C17717 * C32604 + C17718 * C31682 + (C17061 + C17060) * C32597 +
            (C17059 + C17058) * C31690) *
               C32796) *
              C316 +
          ((C17076 * C31690 + C17077 * C32597 + C17040 * C31682 +
            C17041 * C32604 + (C16877 + C16876) * C31696 +
            (C16875 + C16874) * C17833) *
               C32796 +
           ((C17075 + C17074) * C31690 + (C17073 + C17072) * C32597 +
            (C17071 + C17070) * C31682 + (C17069 + C17068) * C32604 +
            (C15845 * C6966 + C15839 * C6970 + C15846 * C7351 +
             C32460 * C7352) *
                C31696 +
            (C15845 * C6969 + C15839 * C6975 + C15846 * C7353 +
             C32460 * C7354) *
                C17833) *
               C32641) *
              C317) *
         C32499 * C32487) /
            (p * q * std::sqrt(p + q));
    d2ee[8] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C15845 * C119 + C15839 * C126 + C15846 * C120 + C32460 * C127) *
                 C31690 +
             (C15845 * C131 + C15839 * C140 + C15846 * C132 + C32460 * C141) *
                 C32597 +
             (C15982 + C15983) * C31682 + (C15984 + C15985) * C32604 +
             C15998 * C31696 + C15999 * C17833) *
                C32796 +
            ((C17058 + C17059) * C31690 + (C17060 + C17061) * C32597 +
             C17713 * C31682 + C17714 * C32604 + C20039 * C31696 +
             C20040 * C17833) *
                C32641) *
               C530 -
           (((C16874 + C16875) * C17833 + (C16876 + C16877) * C31696 +
             C17715 * C32604 + C17716 * C31682 + (C17065 + C17064) * C32597 +
             (C17063 + C17062) * C31690) *
                C32641 +
            ((C16554 + C16555) * C17833 + (C16556 + C16557) * C31696 +
             C17717 * C32604 + C17718 * C31682 + (C17061 + C17060) * C32597 +
             (C17059 + C17058) * C31690) *
                C32796) *
               C531) *
              C32499 * C442 +
          ((((C17511 + C17512) * C31690 + (C17513 + C17514) * C32597 +
             (C17293 + C17294) * C31682 + (C17295 + C17296) * C32604 +
             (C20389 + C20390) * C31696 + (C20391 + C20392) * C17833) *
                C32796 +
            ((C17515 + C17516) * C31690 + (C17517 + C17518) * C32597 +
             (C17297 + C17298) * C31682 + (C17299 + C17300) * C32604 +
             (C15845 * C1069 + C15839 * C1084 + C15846 * C1070 +
              C32460 * C1085) *
                 C31696 +
             (C15845 * C1087 + C15839 * C1096 + C15846 * C1088 +
              C32460 * C1097) *
                 C17833) *
                C32641) *
               C531 -
           (((C20392 + C20391) * C17833 + (C20390 + C20389) * C31696 +
             (C17296 + C17295) * C32604 + (C17294 + C17293) * C31682 +
             (C17514 + C17513) * C32597 + (C17512 + C17511) * C31690) *
                C32641 +
            ((C16261 + C16260) * C17833 + (C16259 + C16258) * C31696 +
             (C16257 + C16256) * C32604 + (C16255 + C16254) * C31682 +
             (C15846 * C133 + C32460 * C142 + C15845 * C132 + C15839 * C141) *
                 C32597 +
             (C15846 * C121 + C32460 * C128 + C15845 * C120 + C15839 * C127) *
                 C31690) *
                C32796) *
               C530) *
              C32499 * C443)) /
        (p * q * std::sqrt(p + q));
    d2ee[9] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C15845 * C119 + C15839 * C126 + C15846 * C120 + C32460 * C127) *
                C31690 +
            (C15845 * C131 + C15839 * C140 + C15846 * C132 + C32460 * C141) *
                C32597 +
            (C15982 + C15983) * C31682 + (C15984 + C15985) * C32604 +
            C15998 * C31696 + C15999 * C17833) *
               C32796 +
           ((C17058 + C17059) * C31690 + (C17060 + C17061) * C32597 +
            C17713 * C31682 + C17714 * C32604 + (C16557 + C16556) * C31696 +
            (C16555 + C16554) * C17833) *
               C32641) *
              C32513 * C32499 * C110 -
          (((C15846 * C1071 + C32460 * C1089 + C15845 * C1072 +
             C15839 * C1090) *
                C17833 +
            (C15846 * C1062 + C32460 * C1074 + C15845 * C1063 +
             C15839 * C1075) *
                C31696 +
            (C17296 + C17295) * C32604 + (C17294 + C17293) * C31682 +
            (C17514 + C17513) * C32597 + (C17512 + C17511) * C31690) *
               C32641 +
           ((C16261 + C16260) * C17833 + (C16259 + C16258) * C31696 +
            (C16257 + C16256) * C32604 + (C16255 + C16254) * C31682 +
            (C15846 * C133 + C32460 * C142 + C15845 * C132 + C15839 * C141) *
                C32597 +
            (C15846 * C121 + C32460 * C128 + C15845 * C120 + C15839 * C127) *
                C31690) *
               C32796) *
              C32513 * C32499 * C111 +
          (((C15845 * C121 + C15839 * C128 + C15846 * C122 + C32460 * C129) *
                C31690 +
            (C15845 * C133 + C15839 * C142 + C15846 * C134 + C32460 * C143) *
                C32597 +
            (C15845 * C215 + C15839 * C230 + C15846 * C214 + C32460 * C229) *
                C31682 +
            (C15845 * C225 + C15839 * C245 + C15846 * C224 + C32460 * C244) *
                C32604 +
            (C15845 * C220 + C15839 * C235 + C15846 * C221 + C32460 * C236) *
                C31696 +
            (C15845 * C240 + C15839 * C250 + C15846 * C241 + C32460 * C251) *
                C17833) *
               C32796 +
           ((C15845 * C320 + C15839 * C335 + C15846 * C319 + C32460 * C334) *
                C31690 +
            (C15845 * C330 + C15839 * C350 + C15846 * C329 + C32460 * C349) *
                C32597 +
            (C15845 * C620 + C15839 * C625 + C15846 * C621 + C32460 * C626) *
                C31682 +
            (C15845 * C630 + C15839 * C635 + C15846 * C631 + C32460 * C636) *
                C32604 +
            (C15845 * C1062 + C15839 * C1074 + C15846 * C1430 +
             C32460 * C1431) *
                C31696 +
            (C15845 * C1071 + C15839 * C1089 + C15846 * C1432 +
             C32460 * C1433) *
                C17833) *
               C32641) *
              C32513 * C32499 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C15845 * C119 + C15839 * C126 + C15846 * C120 + C32460 * C127) *
                C31690 +
            (C15845 * C131 + C15839 * C140 + C15846 * C132 + C32460 * C141) *
                C32597 +
            (C15982 + C15983) * C31682 + (C15984 + C15985) * C32604 +
            C15998 * C31696 + C15999 * C17833) *
               C32796 +
           ((C17058 + C17059) * C31690 + (C17060 + C17061) * C32597 +
            C17713 * C31682 + C17714 * C32604 + C20039 * C31696 +
            C20040 * C17833) *
               C32641) *
              C32513 * C209 -
          (((C16550 + C16551) * C17833 + (C16552 + C16553) * C31696 +
            (C16554 + C16555) * C32604 + (C16556 + C16557) * C31682 +
            C17717 * C32597 + C17718 * C31690) *
               C32641 +
           ((C15993 + C15992) * C17833 + (C15991 + C15990) * C31696 +
            (C15989 + C15988) * C32604 + (C15987 + C15986) * C31682 +
            (C15985 + C15984) * C32597 + (C15983 + C15982) * C31690) *
               C32796) *
              C32513 * C210 +
          ((C15998 * C31690 + C15999 * C32597 + C16000 * C31682 +
            C16001 * C32604 + (C15997 + C15996) * C31696 +
            (C15995 + C15994) * C17833) *
               C32796 +
           (C20039 * C31690 + C20040 * C32597 + (C16553 + C16552) * C31682 +
            (C16551 + C16550) * C32604 +
            (C15845 * C6300 + C15839 * C6304 + C15846 * C6504 +
             C32460 * C6505) *
                C31696 +
            (C15845 * C6303 + C15839 * C6309 + C15846 * C6506 +
             C32460 * C6507) *
                C17833) *
               C32641) *
              C32513 * C211) *
         C32487) /
            (p * q * std::sqrt(p + q));
    d2ee[10] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C15845 * C119 + C15839 * C126 + C15846 * C120 + C32460 * C127) *
                C15847 +
            (C15845 * C131 + C15839 * C140 + C15846 * C132 + C32460 * C141) *
                C32868 +
            (C15982 + C15983) * C15848 + (C15984 + C15985) * C32864 +
            C15998 * C15849 + C15999 * C32854 + C16000 * C15850 +
            C16001 * C32836) *
               C32554 * C32513 * C440 -
           ((C15994 + C15995) * C32836 + (C15996 + C15997) * C15850 +
            (C15993 + C15992) * C32854 + (C15991 + C15990) * C15849 +
            (C15989 + C15988) * C32864 + (C15987 + C15986) * C15848 +
            (C15985 + C15984) * C32868 + (C15983 + C15982) * C15847) *
               C32554 * C32513 * C441) *
              C442 +
          (((C16254 + C16255) * C15847 + (C16256 + C16257) * C32868 +
            (C16258 + C16259) * C15848 + (C16260 + C16261) * C32864 +
            (C16262 + C16263) * C15849 + (C16264 + C16265) * C32854 +
            (C15845 * C874 + C15839 * C883 + C15846 * C875 + C32460 * C884) *
                C15850 +
            (C15845 * C886 + C15839 * C892 + C15846 * C887 + C32460 * C893) *
                C32836) *
               C32554 * C32513 * C441 -
           ((C16265 + C16264) * C32836 + (C16263 + C16262) * C15850 +
            (C16261 + C16260) * C32854 + (C16259 + C16258) * C15849 +
            (C16257 + C16256) * C32864 + (C16255 + C16254) * C15848 +
            (C15846 * C133 + C32460 * C142 + C15845 * C132 + C15839 * C141) *
                C32868 +
            (C15846 * C121 + C32460 * C128 + C15845 * C120 + C15839 * C127) *
                C15847) *
               C32554 * C32513 * C440) *
              C443)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C15053 * C119 + C32867 * C126 + C15054 * C120 + C32860 * C127 +
             C15055 * C121 + C32847 * C128 + C15056 * C122 + C32830 * C129) *
                C15057 +
            (C15053 * C131 + C32867 * C140 + C15054 * C132 + C32860 * C141 +
             C15055 * C133 + C32847 * C142 + C15056 * C134 + C32830 * C143) *
                C15051 +
            (C15190 + C15191 + C15192 + C15193) * C15058 +
            (C15194 + C15195 + C15196 + C15197) * C32601) *
               C32554 * C32513 * C440 -
           ((C15198 + C15199 + C15200 + C15201) * C32601 +
            (C15202 + C15203 + C15204 + C15205) * C15058 +
            (C15197 + C15196 + C15195 + C15194) * C15051 +
            (C15193 + C15192 + C15191 + C15190) * C15057) *
               C32554 * C32513 * C441) *
              C442 +
          (((C15450 + C15451 + C15452 + C15453) * C15057 +
            (C15454 + C15455 + C15456 + C15457) * C15051 +
            (C15053 * C219 + C32867 * C234 + C15054 * C220 + C32860 * C235 +
             C15055 * C221 + C32847 * C236 + C15056 * C222 + C32830 * C237) *
                C15058 +
            (C15053 * C239 + C32867 * C249 + C15054 * C240 + C32860 * C250 +
             C15055 * C241 + C32847 * C251 + C15056 * C242 + C32830 * C252) *
                C32601) *
               C32554 * C32513 * C441 -
           ((C15457 + C15456 + C15455 + C15454) * C32601 +
            (C15453 + C15452 + C15451 + C15450) * C15058 +
            (C15056 * C135 + C32830 * C144 + C15055 * C134 + C32847 * C143 +
             C15054 * C133 + C32860 * C142 + C15053 * C132 + C32867 * C141) *
                C15051 +
            (C15056 * C123 + C32830 * C130 + C15055 * C122 + C32847 * C129 +
             C15054 * C121 + C32860 * C128 + C15053 * C120 + C32867 * C127) *
                C15057) *
               C32554 * C32513 * C440) *
              C443)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C15845 * C119 + C15839 * C126 + C15846 * C120 + C32460 * C127) *
                 C15057 +
             (C15845 * C131 + C15839 * C140 + C15846 * C132 + C32460 * C141) *
                 C15051 +
             (C15982 + C15983) * C15058 + (C15984 + C15985) * C32601) *
                C32862 +
            ((C17058 + C17059) * C15057 + (C17060 + C17061) * C15051 +
             (C16561 + C16560) * C15058 + (C16559 + C16558) * C32601) *
                C32851 +
            C17082 * C32829) *
               C32513 * C440 -
           (((C16874 + C16875) * C32601 + (C16876 + C16877) * C15058 +
             (C16873 + C16872) * C15051 + (C16871 + C16870) * C15057) *
                C32829 +
            ((C16554 + C16555) * C32601 + (C16556 + C16557) * C15058 +
             (C16558 + C16559) * C15051 + (C16560 + C16561) * C15057) *
                C32851 +
            ((C15989 + C15988) * C32601 + (C15987 + C15986) * C15058 +
             (C15985 + C15984) * C15051 + (C15983 + C15982) * C15057) *
                C32862) *
               C32513 * C441) *
              C442 +
          ((((C16254 + C16255) * C15057 + (C16256 + C16257) * C15051 +
             (C16258 + C16259) * C15058 + (C16260 + C16261) * C32601) *
                C32862 +
            ((C17293 + C17294) * C15057 + (C17295 + C17296) * C15051 +
             (C15845 * C1063 + C15839 * C1075 + C15846 * C1062 +
              C32460 * C1074) *
                 C15058 +
             (C15845 * C1072 + C15839 * C1090 + C15846 * C1071 +
              C32460 * C1089) *
                 C32601) *
                C32851 +
            ((C17297 + C17298) * C15057 + (C17299 + C17300) * C15051 +
             (C15845 * C1069 + C15839 * C1084 + C15846 * C1070 +
              C32460 * C1085) *
                 C15058 +
             (C15845 * C1087 + C15839 * C1096 + C15846 * C1088 +
              C32460 * C1097) *
                 C32601) *
                C32829) *
               C32513 * C441 -
           (((C17300 + C17299) * C32601 + (C17298 + C17297) * C15058 +
             (C15846 * C345 + C32460 * C355 + C15845 * C344 + C15839 * C354) *
                 C15051 +
             (C15846 * C325 + C32460 * C340 + C15845 * C324 + C15839 * C339) *
                 C15057) *
                C32829 +
            ((C17296 + C17295) * C32601 + (C17294 + C17293) * C15058 +
             (C15846 * C330 + C32460 * C350 + C15845 * C331 + C15839 * C351) *
                 C15051 +
             (C15846 * C320 + C32460 * C335 + C15845 * C321 + C15839 * C336) *
                 C15057) *
                C32851 +
            ((C16257 + C16256) * C32601 + (C16255 + C16254) * C15058 +
             (C15846 * C133 + C32460 * C142 + C15845 * C132 + C15839 * C141) *
                 C15051 +
             (C15846 * C121 + C32460 * C128 + C15845 * C120 + C15839 * C127) *
                 C15057) *
                C32862) *
               C32513 * C440) *
              C443)) /
            (p * q * std::sqrt(p + q));
    d2ee[11] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C15845 * C119 + C15839 * C126 + C15846 * C120 + C32460 * C127) *
                C15847 +
            (C15845 * C131 + C15839 * C140 + C15846 * C132 + C32460 * C141) *
                C32868 +
            (C15982 + C15983) * C15848 + (C15984 + C15985) * C32864 +
            C15998 * C15849 + C15999 * C32854 + C16000 * C15850 +
            C16001 * C32836) *
               C32554 * C530 -
           ((C16550 + C16551) * C32836 + (C16552 + C16553) * C15850 +
            (C16554 + C16555) * C32854 + (C16556 + C16557) * C15849 +
            (C16558 + C16559) * C32864 + (C16560 + C16561) * C15848 +
            (C15846 * C331 + C32460 * C351 + C15845 * C332 + C15839 * C352) *
                C32868 +
            (C15846 * C321 + C32460 * C336 + C15845 * C322 + C15839 * C337) *
                C15847) *
               C32554 * C531) *
              C440 +
          (((C16561 + C16560) * C15847 + (C16559 + C16558) * C32868 +
            (C16557 + C16556) * C15848 + (C16555 + C16554) * C32864 +
            (C16553 + C16552) * C15849 + (C16551 + C16550) * C32854 +
            (C15845 * C6300 + C15839 * C6304 + C15846 * C6504 +
             C32460 * C6505) *
                C15850 +
            (C15845 * C6303 + C15839 * C6309 + C15846 * C6506 +
             C32460 * C6507) *
                C32836) *
               C32554 * C531 -
           ((C15994 + C15995) * C32836 + (C15996 + C15997) * C15850 +
            (C15993 + C15992) * C32854 + (C15991 + C15990) * C15849 +
            (C15989 + C15988) * C32864 + (C15987 + C15986) * C15848 +
            (C15985 + C15984) * C32868 + (C15983 + C15982) * C15847) *
               C32554 * C530) *
              C441) *
         C32487) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C15053 * C119 + C32867 * C126 + C15054 * C120 + C32860 * C127 +
             C15055 * C121 + C32847 * C128 + C15056 * C122 + C32830 * C129) *
                C15057 +
            (C15053 * C131 + C32867 * C140 + C15054 * C132 + C32860 * C141 +
             C15055 * C133 + C32847 * C142 + C15056 * C134 + C32830 * C143) *
                C15051 +
            (C15190 + C15191 + C15192 + C15193) * C15058 +
            (C15194 + C15195 + C15196 + C15197) * C32601) *
               C32554 * C530 -
           ((C15734 + C15735 + C15736 + C15737) * C32601 +
            (C15738 + C15739 + C15740 + C15741) * C15058 +
            (C15056 * C329 + C32830 * C349 + C15055 * C330 + C32847 * C350 +
             C15054 * C331 + C32860 * C351 + C15053 * C332 + C32867 * C352) *
                C15051 +
            (C15056 * C319 + C32830 * C334 + C15055 * C320 + C32847 * C335 +
             C15054 * C321 + C32860 * C336 + C15053 * C322 + C32867 * C337) *
                C15057) *
               C32554 * C531) *
              C440 +
          (((C15741 + C15740 + C15739 + C15738) * C15057 +
            (C15737 + C15736 + C15735 + C15734) * C15051 +
            (C15053 * C1064 + C32867 * C1076 + C15054 * C1063 + C32860 * C1075 +
             C15055 * C1062 + C32847 * C1074 + C15056 * C1430 +
             C32830 * C1431) *
                C15058 +
            (C15053 * C1073 + C32867 * C1091 + C15054 * C1072 + C32860 * C1090 +
             C15055 * C1071 + C32847 * C1089 + C15056 * C1432 +
             C32830 * C1433) *
                C32601) *
               C32554 * C531 -
           ((C15198 + C15199 + C15200 + C15201) * C32601 +
            (C15202 + C15203 + C15204 + C15205) * C15058 +
            (C15197 + C15196 + C15195 + C15194) * C15051 +
            (C15193 + C15192 + C15191 + C15190) * C15057) *
               C32554 * C530) *
              C441) *
         C32487) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C15845 * C119 + C15839 * C126 + C15846 * C120 + C32460 * C127) *
                 C15057 +
             (C15845 * C131 + C15839 * C140 + C15846 * C132 + C32460 * C141) *
                 C15051 +
             (C15982 + C15983) * C15058 + (C15984 + C15985) * C32601) *
                C32862 +
            ((C17058 + C17059) * C15057 + (C17060 + C17061) * C15051 +
             C17713 * C15058 + C17714 * C32601) *
                C32851 +
            C17082 * C32829) *
               C530 -
           (((C17068 + C17069) * C32601 + (C17070 + C17071) * C15058 +
             (C17072 + C17073) * C15051 + (C17074 + C17075) * C15057) *
                C32829 +
            (C17715 * C32601 + C17716 * C15058 + (C17065 + C17064) * C15051 +
             (C17063 + C17062) * C15057) *
                C32851 +
            (C17717 * C32601 + C17718 * C15058 + (C17061 + C17060) * C15051 +
             (C17059 + C17058) * C15057) *
                C32862) *
               C531) *
              C440 +
          (((C17713 * C15057 + C17714 * C15051 + (C16557 + C16556) * C15058 +
             (C16555 + C16554) * C32601) *
                C32862 +
            (C17040 * C15057 + C17041 * C15051 + (C16877 + C16876) * C15058 +
             (C16875 + C16874) * C32601) *
                C32851 +
            ((C17071 + C17070) * C15057 + (C17069 + C17068) * C15051 +
             (C15845 * C6966 + C15839 * C6970 + C15846 * C7351 +
              C32460 * C7352) *
                 C15058 +
             (C15845 * C6969 + C15839 * C6975 + C15846 * C7353 +
              C32460 * C7354) *
                 C32601) *
                C32829) *
               C531 -
           (((C16874 + C16875) * C32601 + (C16876 + C16877) * C15058 +
             C17715 * C15051 + C17716 * C15057) *
                C32829 +
            ((C16554 + C16555) * C32601 + (C16556 + C16557) * C15058 +
             C17717 * C15051 + C17718 * C15057) *
                C32851 +
            ((C15989 + C15988) * C32601 + (C15987 + C15986) * C15058 +
             (C15985 + C15984) * C15051 + (C15983 + C15982) * C15057) *
                C32862) *
               C530) *
              C441) *
         C32487) /
            (p * q * std::sqrt(p + q));
    d2ee[12] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((C15053 * C119 + C32867 * C126 + C15054 * C120 + C32860 * C127 +
                C15055 * C121 + C32847 * C128 + C15056 * C122 + C32830 * C129) *
                   C15057 +
               (C15053 * C131 + C32867 * C140 + C15054 * C132 + C32860 * C141 +
                C15055 * C133 + C32847 * C142 + C15056 * C134 + C32830 * C143) *
                   C15051 +
               (C15053 * C217 + C32867 * C232 + C15054 * C216 + C32860 * C231 +
                C15055 * C215 + C32847 * C230 + C15056 * C214 + C32830 * C229) *
                   C15058 +
               (C15053 * C227 + C32867 * C247 + C15054 * C226 + C32860 * C246 +
                C15055 * C225 + C32847 * C245 + C15056 * C224 + C32830 * C244) *
                   C32601) *
                  C32554 * C32513 * C32499 * C110 -
              ((C15056 * C223 + C32830 * C243 + C15055 * C224 + C32847 * C244 +
                C15054 * C225 + C32860 * C245 + C15053 * C226 + C32867 * C246) *
                   C32601 +
               (C15056 * C213 + C32830 * C228 + C15055 * C214 + C32847 * C229 +
                C15054 * C215 + C32860 * C230 + C15053 * C216 + C32867 * C231) *
                   C15058 +
               (C15056 * C135 + C32830 * C144 + C15055 * C134 + C32847 * C143 +
                C15054 * C133 + C32860 * C142 + C15053 * C132 + C32867 * C141) *
                   C15051 +
               (C15056 * C123 + C32830 * C130 + C15055 * C122 + C32847 * C129 +
                C15054 * C121 + C32860 * C128 + C15053 * C120 + C32867 * C127) *
                   C15057) *
                  C32554 * C32513 * C32499 * C111 +
              ((C15053 * C121 + C32867 * C128 + C15054 * C122 + C32860 * C129 +
                C15055 * C123 + C32847 * C130 + C15056 * C124 + C32830 * C137) *
                   C15057 +
               (C15053 * C133 + C32867 * C142 + C15054 * C134 + C32860 * C143 +
                C15055 * C135 + C32847 * C144 + C15056 * C136 + C32830 * C145) *
                   C15051 +
               (C15053 * C215 + C32867 * C230 + C15054 * C214 + C32860 * C229 +
                C15055 * C213 + C32847 * C228 + C15056 * C444 + C32830 * C445) *
                   C15058 +
               (C15053 * C225 + C32867 * C245 + C15054 * C224 + C32860 * C244 +
                C15055 * C223 + C32847 * C243 + C15056 * C446 + C32830 * C447) *
                   C32601) *
                  C32554 * C32513 * C32499 * C112) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((C15053 * C119 + C32867 * C126 + C15054 * C120 + C32860 * C127 +
                C15055 * C121 + C32847 * C128 + C15056 * C122 + C32830 * C129) *
                   C15057 +
               (C15053 * C131 + C32867 * C140 + C15054 * C132 + C32860 * C141 +
                C15055 * C133 + C32847 * C142 + C15056 * C134 + C32830 * C143) *
                   C15051 +
               (C15190 + C15191 + C15192 + C15193) * C15058 +
               (C15194 + C15195 + C15196 + C15197) * C32601) *
                  C32554 * C32513 * C209 -
              ((C15198 + C15199 + C15200 + C15201) * C32601 +
               (C15202 + C15203 + C15204 + C15205) * C15058 +
               (C15197 + C15196 + C15195 + C15194) * C15051 +
               (C15193 + C15192 + C15191 + C15190) * C15057) *
                  C32554 * C32513 * C210 +
              ((C15205 + C15204 + C15203 + C15202) * C15057 +
               (C15201 + C15200 + C15199 + C15198) * C15051 +
               (C15053 * C872 + C32867 * C881 + C15054 * C871 + C32860 * C880 +
                C15055 * C870 + C32847 * C879 + C15056 * C1244 +
                C32830 * C1245) *
                   C15058 +
               (C15053 * C878 + C32867 * C890 + C15054 * C877 + C32860 * C889 +
                C15055 * C876 + C32847 * C888 + C15056 * C1246 +
                C32830 * C1247) *
                   C32601) *
                  C32554 * C32513 * C211) *
             C32487) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C15053 * C119 + C32867 * C126 + C15054 * C120 + C32860 * C127 +
            C15055 * C121 + C32847 * C128 + C15056 * C122 + C32830 * C129) *
               C15057 +
           (C15053 * C131 + C32867 * C140 + C15054 * C132 + C32860 * C141 +
            C15055 * C133 + C32847 * C142 + C15056 * C134 + C32830 * C143) *
               C15051 +
           (C15190 + C15191 + C15192 + C15193) * C15058 +
           (C15194 + C15195 + C15196 + C15197) * C32601) *
              C32554 * C315 -
          ((C15056 * C631 + C32830 * C636 + C15055 * C630 + C32847 * C635 +
            C15054 * C629 + C32860 * C634 + C15053 * C628 + C32867 * C633) *
               C32601 +
           (C15056 * C621 + C32830 * C626 + C15055 * C620 + C32847 * C625 +
            C15054 * C619 + C32860 * C624 + C15053 * C618 + C32867 * C623) *
               C15058 +
           (C15056 * C329 + C32830 * C349 + C15055 * C330 + C32847 * C350 +
            C15054 * C331 + C32860 * C351 + C15053 * C332 + C32867 * C352) *
               C15051 +
           (C15056 * C319 + C32830 * C334 + C15055 * C320 + C32847 * C335 +
            C15054 * C321 + C32860 * C336 + C15053 * C322 + C32867 * C337) *
               C15057) *
              C32554 * C316 +
          ((C15053 * C323 + C32867 * C338 + C15054 * C324 + C32860 * C339 +
            C15055 * C325 + C32847 * C340 + C15056 * C326 + C32830 * C341) *
               C15057 +
           (C15053 * C343 + C32867 * C353 + C15054 * C344 + C32860 * C354 +
            C15055 * C345 + C32847 * C355 + C15056 * C346 + C32830 * C356) *
               C15051 +
           (C15053 * C1065 + C32867 * C1077 + C15054 * C1066 + C32860 * C1078 +
            C15055 * C1067 + C32847 * C1079 + C15056 * C2192 + C32830 * C2193) *
               C15058 +
           (C15053 * C1080 + C32867 * C1092 + C15054 * C1081 + C32860 * C1093 +
            C15055 * C1082 + C32847 * C1094 + C15056 * C2194 + C32830 * C2195) *
               C32601) *
              C32554 * C317) *
         C32499 * C32487) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C15845 * C119 + C15839 * C126 + C15846 * C120 + C32460 * C127) *
               C15847 +
           (C15845 * C131 + C15839 * C140 + C15846 * C132 + C32460 * C141) *
               C32868 +
           (C15845 * C217 + C15839 * C232 + C15846 * C216 + C32460 * C231) *
               C15848 +
           (C15845 * C227 + C15839 * C247 + C15846 * C226 + C32460 * C246) *
               C32864 +
           (C15845 * C218 + C15839 * C233 + C15846 * C219 + C32460 * C234) *
               C15849 +
           (C15845 * C238 + C15839 * C248 + C15846 * C239 + C32460 * C249) *
               C32854 +
           (C15845 * C872 + C15839 * C881 + C15846 * C871 + C32460 * C880) *
               C15850 +
           (C15845 * C878 + C15839 * C890 + C15846 * C877 + C32460 * C889) *
               C32836) *
              C32554 * C32513 * C32499 * C110 -
          ((C15846 * C876 + C32460 * C888 + C15845 * C877 + C15839 * C889) *
               C32836 +
           (C15846 * C870 + C32460 * C879 + C15845 * C871 + C15839 * C880) *
               C15850 +
           (C15846 * C240 + C32460 * C250 + C15845 * C239 + C15839 * C249) *
               C32854 +
           (C15846 * C220 + C32460 * C235 + C15845 * C219 + C15839 * C234) *
               C15849 +
           (C15846 * C225 + C32460 * C245 + C15845 * C226 + C15839 * C246) *
               C32864 +
           (C15846 * C215 + C32460 * C230 + C15845 * C216 + C15839 * C231) *
               C15848 +
           (C15846 * C133 + C32460 * C142 + C15845 * C132 + C15839 * C141) *
               C32868 +
           (C15846 * C121 + C32460 * C128 + C15845 * C120 + C15839 * C127) *
               C15847) *
              C32554 * C32513 * C32499 * C111 +
          ((C15845 * C121 + C15839 * C128 + C15846 * C122 + C32460 * C129) *
               C15847 +
           (C15845 * C133 + C15839 * C142 + C15846 * C134 + C32460 * C143) *
               C32868 +
           (C15845 * C215 + C15839 * C230 + C15846 * C214 + C32460 * C229) *
               C15848 +
           (C15845 * C225 + C15839 * C245 + C15846 * C224 + C32460 * C244) *
               C32864 +
           (C15845 * C220 + C15839 * C235 + C15846 * C221 + C32460 * C236) *
               C15849 +
           (C15845 * C240 + C15839 * C250 + C15846 * C241 + C32460 * C251) *
               C32854 +
           (C15845 * C870 + C15839 * C879 + C15846 * C1244 + C32460 * C1245) *
               C15850 +
           (C15845 * C876 + C15839 * C888 + C15846 * C1246 + C32460 * C1247) *
               C32836) *
              C32554 * C32513 * C32499 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C15845 * C119 + C15839 * C126 + C15846 * C120 + C32460 * C127) *
               C15847 +
           (C15845 * C131 + C15839 * C140 + C15846 * C132 + C32460 * C141) *
               C32868 +
           (C15982 + C15983) * C15848 + (C15984 + C15985) * C32864 +
           C15998 * C15849 + C15999 * C32854 + C16000 * C15850 +
           C16001 * C32836) *
              C32554 * C32513 * C209 -
          ((C15994 + C15995) * C32836 + (C15996 + C15997) * C15850 +
           (C15993 + C15992) * C32854 + (C15991 + C15990) * C15849 +
           (C15989 + C15988) * C32864 + (C15987 + C15986) * C15848 +
           (C15985 + C15984) * C32868 + (C15983 + C15982) * C15847) *
              C32554 * C32513 * C210 +
          (C15998 * C15847 + C15999 * C32868 + C16000 * C15848 +
           C16001 * C32864 + (C15997 + C15996) * C15849 +
           (C15995 + C15994) * C32854 +
           (C15845 * C6200 + C15839 * C6203 + C15846 * C6394 + C32460 * C6395) *
               C15850 +
           (C15845 * C6202 + C15839 * C6206 + C15846 * C6396 + C32460 * C6397) *
               C32836) *
              C32554 * C32513 * C211) *
         C32487) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C15845 * C119 + C15839 * C126 + C15846 * C120 + C32460 * C127) *
               C15847 +
           (C15845 * C131 + C15839 * C140 + C15846 * C132 + C32460 * C141) *
               C32868 +
           (C15982 + C15983) * C15848 + (C15984 + C15985) * C32864 +
           C15998 * C15849 + C15999 * C32854 + C16000 * C15850 +
           C16001 * C32836) *
              C32554 * C315 -
          ((C15846 * C1587 + C32460 * C1590 + C15845 * C1586 + C15839 * C1589) *
               C32836 +
           (C15846 * C1581 + C32460 * C1584 + C15845 * C1580 + C15839 * C1583) *
               C15850 +
           (C15846 * C1072 + C32460 * C1090 + C15845 * C1073 + C15839 * C1091) *
               C32854 +
           (C15846 * C1063 + C32460 * C1075 + C15845 * C1064 + C15839 * C1076) *
               C15849 +
           (C15846 * C629 + C32460 * C634 + C15845 * C628 + C15839 * C633) *
               C32864 +
           (C15846 * C619 + C32460 * C624 + C15845 * C618 + C15839 * C623) *
               C15848 +
           (C15846 * C331 + C32460 * C351 + C15845 * C332 + C15839 * C352) *
               C32868 +
           (C15846 * C321 + C32460 * C336 + C15845 * C322 + C15839 * C337) *
               C15847) *
              C32554 * C316 +
          ((C15845 * C323 + C15839 * C338 + C15846 * C324 + C32460 * C339) *
               C15847 +
           (C15845 * C343 + C15839 * C353 + C15846 * C344 + C32460 * C354) *
               C32868 +
           (C15845 * C1065 + C15839 * C1077 + C15846 * C1066 + C32460 * C1078) *
               C15848 +
           (C15845 * C1080 + C15839 * C1092 + C15846 * C1081 + C32460 * C1093) *
               C32864 +
           (C15845 * C1068 + C15839 * C1083 + C15846 * C1069 + C32460 * C1084) *
               C15849 +
           (C15845 * C1086 + C15839 * C1095 + C15846 * C1087 + C32460 * C1096) *
               C32854 +
           (C15845 * C6301 + C15839 * C6305 + C15846 * C7177 + C32460 * C7178) *
               C15850 +
           (C15845 * C6306 + C15839 * C6310 + C15846 * C7179 + C32460 * C7180) *
               C32836) *
              C32554 * C317) *
         C32499 * C32487) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C15845 * C119 + C15839 * C126 + C15846 * C120 + C32460 * C127) *
                C15057 +
            (C15845 * C131 + C15839 * C140 + C15846 * C132 + C32460 * C141) *
                C15051 +
            (C15982 + C15983) * C15058 + (C15984 + C15985) * C32601) *
               C32862 +
           ((C15845 * C322 + C15839 * C337 + C15846 * C321 + C32460 * C336) *
                C15057 +
            (C15845 * C332 + C15839 * C352 + C15846 * C331 + C32460 * C351) *
                C15051 +
            (C16561 + C16560) * C15058 + (C16559 + C16558) * C32601) *
               C32851 +
           ((C15845 * C323 + C15839 * C338 + C15846 * C324 + C32460 * C339) *
                C15057 +
            (C15845 * C343 + C15839 * C353 + C15846 * C344 + C32460 * C354) *
                C15051 +
            (C15845 * C1065 + C15839 * C1077 + C15846 * C1066 +
             C32460 * C1078) *
                C15058 +
            (C15845 * C1080 + C15839 * C1092 + C15846 * C1081 +
             C32460 * C1093) *
                C32601) *
               C32829) *
              C32513 * C32499 * C110 -
          (((C15846 * C1082 + C32460 * C1094 + C15845 * C1081 +
             C15839 * C1093) *
                C32601 +
            (C15846 * C1067 + C32460 * C1079 + C15845 * C1066 +
             C15839 * C1078) *
                C15058 +
            (C15846 * C345 + C32460 * C355 + C15845 * C344 + C15839 * C354) *
                C15051 +
            (C15846 * C325 + C32460 * C340 + C15845 * C324 + C15839 * C339) *
                C15057) *
               C32829 +
           ((C15846 * C630 + C32460 * C635 + C15845 * C629 + C15839 * C634) *
                C32601 +
            (C15846 * C620 + C32460 * C625 + C15845 * C619 + C15839 * C624) *
                C15058 +
            (C15846 * C330 + C32460 * C350 + C15845 * C331 + C15839 * C351) *
                C15051 +
            (C15846 * C320 + C32460 * C335 + C15845 * C321 + C15839 * C336) *
                C15057) *
               C32851 +
           ((C16257 + C16256) * C32601 + (C16255 + C16254) * C15058 +
            (C15846 * C133 + C32460 * C142 + C15845 * C132 + C15839 * C141) *
                C15051 +
            (C15846 * C121 + C32460 * C128 + C15845 * C120 + C15839 * C127) *
                C15057) *
               C32862) *
              C32513 * C32499 * C111 +
          (((C15845 * C121 + C15839 * C128 + C15846 * C122 + C32460 * C129) *
                C15057 +
            (C15845 * C133 + C15839 * C142 + C15846 * C134 + C32460 * C143) *
                C15051 +
            (C15845 * C215 + C15839 * C230 + C15846 * C214 + C32460 * C229) *
                C15058 +
            (C15845 * C225 + C15839 * C245 + C15846 * C224 + C32460 * C244) *
                C32601) *
               C32862 +
           ((C15845 * C320 + C15839 * C335 + C15846 * C319 + C32460 * C334) *
                C15057 +
            (C15845 * C330 + C15839 * C350 + C15846 * C329 + C32460 * C349) *
                C15051 +
            (C15845 * C620 + C15839 * C625 + C15846 * C621 + C32460 * C626) *
                C15058 +
            (C15845 * C630 + C15839 * C635 + C15846 * C631 + C32460 * C636) *
                C32601) *
               C32851 +
           ((C15845 * C325 + C15839 * C340 + C15846 * C326 + C32460 * C341) *
                C15057 +
            (C15845 * C345 + C15839 * C355 + C15846 * C346 + C32460 * C356) *
                C15051 +
            (C15845 * C1067 + C15839 * C1079 + C15846 * C2192 +
             C32460 * C2193) *
                C15058 +
            (C15845 * C1082 + C15839 * C1094 + C15846 * C2194 +
             C32460 * C2195) *
                C32601) *
               C32829) *
              C32513 * C32499 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C15845 * C119 + C15839 * C126 + C15846 * C120 + C32460 * C127) *
                C15057 +
            (C15845 * C131 + C15839 * C140 + C15846 * C132 + C32460 * C141) *
                C15051 +
            (C15982 + C15983) * C15058 + (C15984 + C15985) * C32601) *
               C32862 +
           ((C15845 * C322 + C15839 * C337 + C15846 * C321 + C32460 * C336) *
                C15057 +
            (C15845 * C332 + C15839 * C352 + C15846 * C331 + C32460 * C351) *
                C15051 +
            (C16561 + C16560) * C15058 + (C16559 + C16558) * C32601) *
               C32851 +
           ((C15845 * C323 + C15839 * C338 + C15846 * C324 + C32460 * C339) *
                C15057 +
            (C15845 * C343 + C15839 * C353 + C15846 * C344 + C32460 * C354) *
                C15051 +
            (C16870 + C16871) * C15058 + (C16872 + C16873) * C32601) *
               C32829) *
              C32513 * C209 -
          (((C16874 + C16875) * C32601 + (C16876 + C16877) * C15058 +
            (C16873 + C16872) * C15051 + (C16871 + C16870) * C15057) *
               C32829 +
           ((C16554 + C16555) * C32601 + (C16556 + C16557) * C15058 +
            (C16558 + C16559) * C15051 + (C16560 + C16561) * C15057) *
               C32851 +
           ((C15989 + C15988) * C32601 + (C15987 + C15986) * C15058 +
            (C15985 + C15984) * C15051 + (C15983 + C15982) * C15057) *
               C32862) *
              C32513 * C210 +
          ((C15998 * C15057 + C15999 * C15051 + C16000 * C15058 +
            C16001 * C32601) *
               C32862 +
           ((C16557 + C16556) * C15057 + (C16555 + C16554) * C15051 +
            (C16553 + C16552) * C15058 + (C16551 + C16550) * C32601) *
               C32851 +
           ((C16877 + C16876) * C15057 + (C16875 + C16874) * C15051 +
            (C15845 * C6301 + C15839 * C6305 + C15846 * C7177 +
             C32460 * C7178) *
                C15058 +
            (C15845 * C6306 + C15839 * C6310 + C15846 * C7179 +
             C32460 * C7180) *
                C32601) *
               C32829) *
              C32513 * C211) *
         C32487) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C15845 * C119 + C15839 * C126 + C15846 * C120 + C32460 * C127) *
                C15057 +
            (C15845 * C131 + C15839 * C140 + C15846 * C132 + C32460 * C141) *
                C15051 +
            (C15982 + C15983) * C15058 + (C15984 + C15985) * C32601) *
               C32862 +
           ((C17058 + C17059) * C15057 + (C17060 + C17061) * C15051 +
            (C16561 + C16560) * C15058 + (C16559 + C16558) * C32601) *
               C32851 +
           C17082 * C32829) *
              C315 -
          (((C17068 + C17069) * C32601 + (C17070 + C17071) * C15058 +
            (C17072 + C17073) * C15051 + (C17074 + C17075) * C15057) *
               C32829 +
           ((C16873 + C16872) * C32601 + (C16871 + C16870) * C15058 +
            (C17065 + C17064) * C15051 + (C17063 + C17062) * C15057) *
               C32851 +
           ((C16558 + C16559) * C32601 + (C16560 + C16561) * C15058 +
            (C17061 + C17060) * C15051 + (C17059 + C17058) * C15057) *
               C32862) *
              C316 +
          (C17082 * C32862 +
           ((C17075 + C17074) * C15057 + (C17073 + C17072) * C15051 +
            (C17071 + C17070) * C15058 + (C17069 + C17068) * C32601) *
               C32851 +
           ((C15845 * C1964 + C15839 * C1973 + C15846 * C1965 +
             C32460 * C1974) *
                C15057 +
            (C15845 * C1976 + C15839 * C1982 + C15846 * C1977 +
             C32460 * C1983) *
                C15051 +
            (C15845 * C6967 + C15839 * C6971 + C15846 * C12202 +
             C32460 * C12203) *
                C15058 +
            (C15845 * C6972 + C15839 * C6976 + C15846 * C12204 +
             C32460 * C12205) *
                C32601) *
               C32829) *
              C317) *
         C32499 * C32487) /
            (p * q * std::sqrt(p + q));
    d2ee[13] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C15845 * C119 + C15839 * C126 + C15846 * C120 + C32460 * C127) *
                C15847 +
            (C15845 * C131 + C15839 * C140 + C15846 * C132 + C32460 * C141) *
                C32868 +
            (C15982 + C15983) * C15848 + (C15984 + C15985) * C32864 +
            C15998 * C15849 + C15999 * C32854 + C16000 * C15850 +
            C16001 * C32836) *
               C32554 * C530 -
           ((C15846 * C1587 + C32460 * C1590 + C15845 * C1586 +
             C15839 * C1589) *
                C32836 +
            (C15846 * C1581 + C32460 * C1584 + C15845 * C1580 +
             C15839 * C1583) *
                C15850 +
            (C15846 * C1072 + C32460 * C1090 + C15845 * C1073 +
             C15839 * C1091) *
                C32854 +
            (C15846 * C1063 + C32460 * C1075 + C15845 * C1064 +
             C15839 * C1076) *
                C15849 +
            (C15846 * C629 + C32460 * C634 + C15845 * C628 + C15839 * C633) *
                C32864 +
            (C15846 * C619 + C32460 * C624 + C15845 * C618 + C15839 * C623) *
                C15848 +
            (C15846 * C331 + C32460 * C351 + C15845 * C332 + C15839 * C352) *
                C32868 +
            (C15846 * C321 + C32460 * C336 + C15845 * C322 + C15839 * C337) *
                C15847) *
               C32554 * C531) *
              C32499 * C442 +
          (((C15845 * C321 + C15839 * C336 + C15846 * C320 + C32460 * C335) *
                C15847 +
            (C15845 * C331 + C15839 * C351 + C15846 * C330 + C32460 * C350) *
                C32868 +
            (C15845 * C619 + C15839 * C624 + C15846 * C620 + C32460 * C625) *
                C15848 +
            (C15845 * C629 + C15839 * C634 + C15846 * C630 + C32460 * C635) *
                C32864 +
            (C15845 * C1063 + C15839 * C1075 + C15846 * C1062 +
             C32460 * C1074) *
                C15849 +
            (C15845 * C1072 + C15839 * C1090 + C15846 * C1071 +
             C32460 * C1089) *
                C32854 +
            (C15845 * C1581 + C15839 * C1584 + C15846 * C1582 +
             C32460 * C1585) *
                C15850 +
            (C15845 * C1587 + C15839 * C1590 + C15846 * C1588 +
             C32460 * C1591) *
                C32836) *
               C32554 * C531 -
           ((C16265 + C16264) * C32836 + (C16263 + C16262) * C15850 +
            (C16261 + C16260) * C32854 + (C16259 + C16258) * C15849 +
            (C16257 + C16256) * C32864 + (C16255 + C16254) * C15848 +
            (C15846 * C133 + C32460 * C142 + C15845 * C132 + C15839 * C141) *
                C32868 +
            (C15846 * C121 + C32460 * C128 + C15845 * C120 + C15839 * C127) *
                C15847) *
               C32554 * C530) *
              C32499 * C443)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C15053 * C119 + C32867 * C126 + C15054 * C120 + C32860 * C127 +
             C15055 * C121 + C32847 * C128 + C15056 * C122 + C32830 * C129) *
                C15057 +
            (C15053 * C131 + C32867 * C140 + C15054 * C132 + C32860 * C141 +
             C15055 * C133 + C32847 * C142 + C15056 * C134 + C32830 * C143) *
                C15051 +
            (C15190 + C15191 + C15192 + C15193) * C15058 +
            (C15194 + C15195 + C15196 + C15197) * C32601) *
               C32554 * C530 -
           ((C15056 * C631 + C32830 * C636 + C15055 * C630 + C32847 * C635 +
             C15054 * C629 + C32860 * C634 + C15053 * C628 + C32867 * C633) *
                C32601 +
            (C15056 * C621 + C32830 * C626 + C15055 * C620 + C32847 * C625 +
             C15054 * C619 + C32860 * C624 + C15053 * C618 + C32867 * C623) *
                C15058 +
            (C15056 * C329 + C32830 * C349 + C15055 * C330 + C32847 * C350 +
             C15054 * C331 + C32860 * C351 + C15053 * C332 + C32867 * C352) *
                C15051 +
            (C15056 * C319 + C32830 * C334 + C15055 * C320 + C32847 * C335 +
             C15054 * C321 + C32860 * C336 + C15053 * C322 + C32867 * C337) *
                C15057) *
               C32554 * C531) *
              C32499 * C442 +
          (((C15053 * C321 + C32867 * C336 + C15054 * C320 + C32860 * C335 +
             C15055 * C319 + C32847 * C334 + C15056 * C318 + C32830 * C333) *
                C15057 +
            (C15053 * C331 + C32867 * C351 + C15054 * C330 + C32860 * C350 +
             C15055 * C329 + C32847 * C349 + C15056 * C328 + C32830 * C348) *
                C15051 +
            (C15053 * C619 + C32867 * C624 + C15054 * C620 + C32860 * C625 +
             C15055 * C621 + C32847 * C626 + C15056 * C622 + C32830 * C627) *
                C15058 +
            (C15053 * C629 + C32867 * C634 + C15054 * C630 + C32860 * C635 +
             C15055 * C631 + C32847 * C636 + C15056 * C632 + C32830 * C637) *
                C32601) *
               C32554 * C531 -
           ((C15457 + C15456 + C15455 + C15454) * C32601 +
            (C15453 + C15452 + C15451 + C15450) * C15058 +
            (C15056 * C135 + C32830 * C144 + C15055 * C134 + C32847 * C143 +
             C15054 * C133 + C32860 * C142 + C15053 * C132 + C32867 * C141) *
                C15051 +
            (C15056 * C123 + C32830 * C130 + C15055 * C122 + C32847 * C129 +
             C15054 * C121 + C32860 * C128 + C15053 * C120 + C32867 * C127) *
                C15057) *
               C32554 * C530) *
              C32499 * C443)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C15845 * C119 + C15839 * C126 + C15846 * C120 + C32460 * C127) *
                 C15057 +
             (C15845 * C131 + C15839 * C140 + C15846 * C132 + C32460 * C141) *
                 C15051 +
             (C15982 + C15983) * C15058 + (C15984 + C15985) * C32601) *
                C32862 +
            ((C17058 + C17059) * C15057 + (C17060 + C17061) * C15051 +
             (C16561 + C16560) * C15058 + (C16559 + C16558) * C32601) *
                C32851 +
            C17082 * C32829) *
               C530 -
           (((C17068 + C17069) * C32601 + (C17070 + C17071) * C15058 +
             (C17072 + C17073) * C15051 + (C17074 + C17075) * C15057) *
                C32829 +
            ((C16873 + C16872) * C32601 + (C16871 + C16870) * C15058 +
             (C17065 + C17064) * C15051 + (C17063 + C17062) * C15057) *
                C32851 +
            ((C16558 + C16559) * C32601 + (C16560 + C16561) * C15058 +
             (C17061 + C17060) * C15051 + (C17059 + C17058) * C15057) *
                C32862) *
               C531) *
              C32499 * C442 +
          ((((C17511 + C17512) * C15057 + (C17513 + C17514) * C15051 +
             (C17293 + C17294) * C15058 + (C17295 + C17296) * C32601) *
                C32862 +
            ((C17515 + C17516) * C15057 + (C17517 + C17518) * C15051 +
             (C17297 + C17298) * C15058 + (C17299 + C17300) * C32601) *
                C32851 +
            ((C15845 * C1962 + C15839 * C1971 + C15846 * C1961 +
              C32460 * C1970) *
                 C15057 +
             (C15845 * C1968 + C15839 * C1980 + C15846 * C1967 +
              C32460 * C1979) *
                 C15051 +
             (C15845 * C2529 + C15839 * C2532 + C15846 * C2530 +
              C32460 * C2533) *
                 C15058 +
             (C15845 * C2535 + C15839 * C2538 + C15846 * C2536 +
              C32460 * C2539) *
                 C32601) *
                C32829) *
               C531 -
           (((C17300 + C17299) * C32601 + (C17298 + C17297) * C15058 +
             (C17518 + C17517) * C15051 + (C17516 + C17515) * C15057) *
                C32829 +
            ((C17296 + C17295) * C32601 + (C17294 + C17293) * C15058 +
             (C17514 + C17513) * C15051 + (C17512 + C17511) * C15057) *
                C32851 +
            ((C16257 + C16256) * C32601 + (C16255 + C16254) * C15058 +
             (C15846 * C133 + C32460 * C142 + C15845 * C132 + C15839 * C141) *
                 C15051 +
             (C15846 * C121 + C32460 * C128 + C15845 * C120 + C15839 * C127) *
                 C15057) *
                C32862) *
               C530) *
              C32499 * C443)) /
            (p * q * std::sqrt(p + q));
    d2ee[14] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C15053 * C119 + C32867 * C126 + C15054 * C120 + C32860 * C127 +
            C15055 * C121 + C32847 * C128 + C15056 * C122 + C32830 * C129) *
               C15057 +
           (C15053 * C131 + C32867 * C140 + C15054 * C132 + C32860 * C141 +
            C15055 * C133 + C32847 * C142 + C15056 * C134 + C32830 * C143) *
               C15051 +
           (C15190 + C15191 + C15192 + C15193) * C15058 +
           (C15194 + C15195 + C15196 + C15197) * C32601) *
              C32554 * C32513 * C209 -
          ((C15198 + C15199 + C15200 + C15201) * C32601 +
           (C15202 + C15203 + C15204 + C15205) * C15058 +
           (C15197 + C15196 + C15195 + C15194) * C15051 +
           (C15193 + C15192 + C15191 + C15190) * C15057) *
              C32554 * C32513 * C210 +
          ((C15205 + C15204 + C15203 + C15202) * C15057 +
           (C15201 + C15200 + C15199 + C15198) * C15051 +
           (C15053 * C872 + C32867 * C881 + C15054 * C871 + C32860 * C880 +
            C15055 * C870 + C32847 * C879 + C15056 * C1244 + C32830 * C1245) *
               C15058 +
           (C15053 * C878 + C32867 * C890 + C15054 * C877 + C32860 * C889 +
            C15055 * C876 + C32847 * C888 + C15056 * C1246 + C32830 * C1247) *
               C32601) *
              C32554 * C32513 * C211) *
         C32487) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C15053 * C119 + C32867 * C126 + C15054 * C120 + C32860 * C127 +
            C15055 * C121 + C32847 * C128 + C15056 * C122 + C32830 * C129) *
               C15057 +
           (C15053 * C131 + C32867 * C140 + C15054 * C132 + C32860 * C141 +
            C15055 * C133 + C32847 * C142 + C15056 * C134 + C32830 * C143) *
               C15051 +
           (C15053 * C217 + C32867 * C232 + C15054 * C216 + C32860 * C231 +
            C15055 * C215 + C32847 * C230 + C15056 * C214 + C32830 * C229) *
               C15058 +
           (C15053 * C227 + C32867 * C247 + C15054 * C226 + C32860 * C246 +
            C15055 * C225 + C32847 * C245 + C15056 * C224 + C32830 * C244) *
               C32601) *
              C32554 * C32513 * C32499 * C110 -
          ((C15056 * C223 + C32830 * C243 + C15055 * C224 + C32847 * C244 +
            C15054 * C225 + C32860 * C245 + C15053 * C226 + C32867 * C246) *
               C32601 +
           (C15056 * C213 + C32830 * C228 + C15055 * C214 + C32847 * C229 +
            C15054 * C215 + C32860 * C230 + C15053 * C216 + C32867 * C231) *
               C15058 +
           (C15056 * C135 + C32830 * C144 + C15055 * C134 + C32847 * C143 +
            C15054 * C133 + C32860 * C142 + C15053 * C132 + C32867 * C141) *
               C15051 +
           (C15056 * C123 + C32830 * C130 + C15055 * C122 + C32847 * C129 +
            C15054 * C121 + C32860 * C128 + C15053 * C120 + C32867 * C127) *
               C15057) *
              C32554 * C32513 * C32499 * C111 +
          ((C15053 * C121 + C32867 * C128 + C15054 * C122 + C32860 * C129 +
            C15055 * C123 + C32847 * C130 + C15056 * C124 + C32830 * C137) *
               C15057 +
           (C15053 * C133 + C32867 * C142 + C15054 * C134 + C32860 * C143 +
            C15055 * C135 + C32847 * C144 + C15056 * C136 + C32830 * C145) *
               C15051 +
           (C15053 * C215 + C32867 * C230 + C15054 * C214 + C32860 * C229 +
            C15055 * C213 + C32847 * C228 + C15056 * C444 + C32830 * C445) *
               C15058 +
           (C15053 * C225 + C32867 * C245 + C15054 * C224 + C32860 * C244 +
            C15055 * C223 + C32847 * C243 + C15056 * C446 + C32830 * C447) *
               C32601) *
              C32554 * C32513 * C32499 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C15845 * C119 + C15839 * C126 + C15846 * C120 + C32460 * C127) *
               C15847 +
           (C15845 * C131 + C15839 * C140 + C15846 * C132 + C32460 * C141) *
               C32868 +
           (C15845 * C217 + C15839 * C232 + C15846 * C216 + C32460 * C231) *
               C15848 +
           (C15845 * C227 + C15839 * C247 + C15846 * C226 + C32460 * C246) *
               C32864 +
           (C15845 * C218 + C15839 * C233 + C15846 * C219 + C32460 * C234) *
               C15849 +
           (C15845 * C238 + C15839 * C248 + C15846 * C239 + C32460 * C249) *
               C32854 +
           (C15845 * C872 + C15839 * C881 + C15846 * C871 + C32460 * C880) *
               C15850 +
           (C15845 * C878 + C15839 * C890 + C15846 * C877 + C32460 * C889) *
               C32836) *
              C32554 * C32513 * C32499 * C110 -
          ((C15846 * C876 + C32460 * C888 + C15845 * C877 + C15839 * C889) *
               C32836 +
           (C15846 * C870 + C32460 * C879 + C15845 * C871 + C15839 * C880) *
               C15850 +
           (C15846 * C240 + C32460 * C250 + C15845 * C239 + C15839 * C249) *
               C32854 +
           (C15846 * C220 + C32460 * C235 + C15845 * C219 + C15839 * C234) *
               C15849 +
           (C15846 * C225 + C32460 * C245 + C15845 * C226 + C15839 * C246) *
               C32864 +
           (C15846 * C215 + C32460 * C230 + C15845 * C216 + C15839 * C231) *
               C15848 +
           (C15846 * C133 + C32460 * C142 + C15845 * C132 + C15839 * C141) *
               C32868 +
           (C15846 * C121 + C32460 * C128 + C15845 * C120 + C15839 * C127) *
               C15847) *
              C32554 * C32513 * C32499 * C111 +
          ((C15845 * C121 + C15839 * C128 + C15846 * C122 + C32460 * C129) *
               C15847 +
           (C15845 * C133 + C15839 * C142 + C15846 * C134 + C32460 * C143) *
               C32868 +
           (C15845 * C215 + C15839 * C230 + C15846 * C214 + C32460 * C229) *
               C15848 +
           (C15845 * C225 + C15839 * C245 + C15846 * C224 + C32460 * C244) *
               C32864 +
           (C15845 * C220 + C15839 * C235 + C15846 * C221 + C32460 * C236) *
               C15849 +
           (C15845 * C240 + C15839 * C250 + C15846 * C241 + C32460 * C251) *
               C32854 +
           (C15845 * C870 + C15839 * C879 + C15846 * C1244 + C32460 * C1245) *
               C15850 +
           (C15845 * C876 + C15839 * C888 + C15846 * C1246 + C32460 * C1247) *
               C32836) *
              C32554 * C32513 * C32499 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C15845 * C119 + C15839 * C126 + C15846 * C120 + C32460 * C127) *
               C15847 +
           (C15845 * C131 + C15839 * C140 + C15846 * C132 + C32460 * C141) *
               C32868 +
           (C15982 + C15983) * C15848 + (C15984 + C15985) * C32864 +
           C15998 * C15849 + C15999 * C32854 + C16000 * C15850 +
           C16001 * C32836) *
              C32554 * C32513 * C209 -
          ((C15994 + C15995) * C32836 + (C15996 + C15997) * C15850 +
           (C15993 + C15992) * C32854 + (C15991 + C15990) * C15849 +
           (C15989 + C15988) * C32864 + (C15987 + C15986) * C15848 +
           (C15985 + C15984) * C32868 + (C15983 + C15982) * C15847) *
              C32554 * C32513 * C210 +
          (C15998 * C15847 + C15999 * C32868 + C16000 * C15848 +
           C16001 * C32864 + (C15997 + C15996) * C15849 +
           (C15995 + C15994) * C32854 +
           (C15845 * C6200 + C15839 * C6203 + C15846 * C6394 + C32460 * C6395) *
               C15850 +
           (C15845 * C6202 + C15839 * C6206 + C15846 * C6396 + C32460 * C6397) *
               C32836) *
              C32554 * C32513 * C211) *
         C32487) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C15845 * C119 + C15839 * C126 + C15846 * C120 + C32460 * C127) *
                C15057 +
            (C15845 * C131 + C15839 * C140 + C15846 * C132 + C32460 * C141) *
                C15051 +
            (C15982 + C15983) * C15058 + (C15984 + C15985) * C32601) *
               C32862 +
           ((C15845 * C322 + C15839 * C337 + C15846 * C321 + C32460 * C336) *
                C15057 +
            (C15845 * C332 + C15839 * C352 + C15846 * C331 + C32460 * C351) *
                C15051 +
            (C16561 + C16560) * C15058 + (C16559 + C16558) * C32601) *
               C32851 +
           ((C15845 * C323 + C15839 * C338 + C15846 * C324 + C32460 * C339) *
                C15057 +
            (C15845 * C343 + C15839 * C353 + C15846 * C344 + C32460 * C354) *
                C15051 +
            (C15845 * C1065 + C15839 * C1077 + C15846 * C1066 +
             C32460 * C1078) *
                C15058 +
            (C15845 * C1080 + C15839 * C1092 + C15846 * C1081 +
             C32460 * C1093) *
                C32601) *
               C32829) *
              C32513 * C32499 * C110 -
          (((C15846 * C1082 + C32460 * C1094 + C15845 * C1081 +
             C15839 * C1093) *
                C32601 +
            (C15846 * C1067 + C32460 * C1079 + C15845 * C1066 +
             C15839 * C1078) *
                C15058 +
            (C15846 * C345 + C32460 * C355 + C15845 * C344 + C15839 * C354) *
                C15051 +
            (C15846 * C325 + C32460 * C340 + C15845 * C324 + C15839 * C339) *
                C15057) *
               C32829 +
           ((C15846 * C630 + C32460 * C635 + C15845 * C629 + C15839 * C634) *
                C32601 +
            (C15846 * C620 + C32460 * C625 + C15845 * C619 + C15839 * C624) *
                C15058 +
            (C15846 * C330 + C32460 * C350 + C15845 * C331 + C15839 * C351) *
                C15051 +
            (C15846 * C320 + C32460 * C335 + C15845 * C321 + C15839 * C336) *
                C15057) *
               C32851 +
           ((C16257 + C16256) * C32601 + (C16255 + C16254) * C15058 +
            (C15846 * C133 + C32460 * C142 + C15845 * C132 + C15839 * C141) *
                C15051 +
            (C15846 * C121 + C32460 * C128 + C15845 * C120 + C15839 * C127) *
                C15057) *
               C32862) *
              C32513 * C32499 * C111 +
          (((C15845 * C121 + C15839 * C128 + C15846 * C122 + C32460 * C129) *
                C15057 +
            (C15845 * C133 + C15839 * C142 + C15846 * C134 + C32460 * C143) *
                C15051 +
            (C15845 * C215 + C15839 * C230 + C15846 * C214 + C32460 * C229) *
                C15058 +
            (C15845 * C225 + C15839 * C245 + C15846 * C224 + C32460 * C244) *
                C32601) *
               C32862 +
           ((C15845 * C320 + C15839 * C335 + C15846 * C319 + C32460 * C334) *
                C15057 +
            (C15845 * C330 + C15839 * C350 + C15846 * C329 + C32460 * C349) *
                C15051 +
            (C15845 * C620 + C15839 * C625 + C15846 * C621 + C32460 * C626) *
                C15058 +
            (C15845 * C630 + C15839 * C635 + C15846 * C631 + C32460 * C636) *
                C32601) *
               C32851 +
           ((C15845 * C325 + C15839 * C340 + C15846 * C326 + C32460 * C341) *
                C15057 +
            (C15845 * C345 + C15839 * C355 + C15846 * C346 + C32460 * C356) *
                C15051 +
            (C15845 * C1067 + C15839 * C1079 + C15846 * C2192 +
             C32460 * C2193) *
                C15058 +
            (C15845 * C1082 + C15839 * C1094 + C15846 * C2194 +
             C32460 * C2195) *
                C32601) *
               C32829) *
              C32513 * C32499 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C15845 * C119 + C15839 * C126 + C15846 * C120 + C32460 * C127) *
                C15057 +
            (C15845 * C131 + C15839 * C140 + C15846 * C132 + C32460 * C141) *
                C15051 +
            (C15982 + C15983) * C15058 + (C15984 + C15985) * C32601) *
               C32862 +
           ((C15845 * C322 + C15839 * C337 + C15846 * C321 + C32460 * C336) *
                C15057 +
            (C15845 * C332 + C15839 * C352 + C15846 * C331 + C32460 * C351) *
                C15051 +
            (C16561 + C16560) * C15058 + (C16559 + C16558) * C32601) *
               C32851 +
           ((C15845 * C323 + C15839 * C338 + C15846 * C324 + C32460 * C339) *
                C15057 +
            (C15845 * C343 + C15839 * C353 + C15846 * C344 + C32460 * C354) *
                C15051 +
            (C16870 + C16871) * C15058 + (C16872 + C16873) * C32601) *
               C32829) *
              C32513 * C209 -
          (((C16874 + C16875) * C32601 + (C16876 + C16877) * C15058 +
            (C16873 + C16872) * C15051 + (C16871 + C16870) * C15057) *
               C32829 +
           ((C16554 + C16555) * C32601 + (C16556 + C16557) * C15058 +
            (C16558 + C16559) * C15051 + (C16560 + C16561) * C15057) *
               C32851 +
           ((C15989 + C15988) * C32601 + (C15987 + C15986) * C15058 +
            (C15985 + C15984) * C15051 + (C15983 + C15982) * C15057) *
               C32862) *
              C32513 * C210 +
          ((C15998 * C15057 + C15999 * C15051 + C16000 * C15058 +
            C16001 * C32601) *
               C32862 +
           ((C16557 + C16556) * C15057 + (C16555 + C16554) * C15051 +
            (C16553 + C16552) * C15058 + (C16551 + C16550) * C32601) *
               C32851 +
           ((C16877 + C16876) * C15057 + (C16875 + C16874) * C15051 +
            (C15845 * C6301 + C15839 * C6305 + C15846 * C7177 +
             C32460 * C7178) *
                C15058 +
            (C15845 * C6306 + C15839 * C6310 + C15846 * C7179 +
             C32460 * C7180) *
                C32601) *
               C32829) *
              C32513 * C211) *
         C32487) /
            (p * q * std::sqrt(p + q));
    d2ee[15] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                 (((((C31567 * C119 + C32455 * C126 + C31563 * C120 +
                      C32463 * C127 + C31573 * C121 + C17830 * C128) *
                         C15057 +
                     (C31567 * C131 + C32455 * C140 + C31563 * C132 +
                      C32463 * C141 + C31573 * C133 + C17830 * C142) *
                         C15051 +
                     (C17987 + C17988 + C17989) * C15058 +
                     (C17990 + C17991 + C17992) * C32601) *
                        C32796 +
                    ((C19103 + C19104 + C19105) * C15057 +
                     (C19106 + C19107 + C19108) * C15051 +
                     (C18628 + C18627 + C18626) * C15058 +
                     (C18625 + C18624 + C18623) * C32601) *
                        C32641) *
                       C32513 * C440 -
                   (((C18617 + C18618 + C18619) * C32601 +
                     (C18620 + C18621 + C18622) * C15058 +
                     (C18623 + C18624 + C18625) * C15051 +
                     (C18626 + C18627 + C18628) * C15057) *
                        C32641 +
                    ((C17998 + C17997 + C17996) * C32601 +
                     (C17995 + C17994 + C17993) * C15058 +
                     (C17992 + C17991 + C17990) * C15051 +
                     (C17989 + C17988 + C17987) * C15057) *
                        C32796) *
                       C32513 * C441) *
                      C442 +
                  ((((C18289 + C18290 + C18291) * C15057 +
                     (C18292 + C18293 + C18294) * C15051 +
                     (C18295 + C18296 + C18297) * C15058 +
                     (C18298 + C18299 + C18300) * C32601) *
                        C32796 +
                    ((C19327 + C19328 + C19329) * C15057 +
                     (C19330 + C19331 + C19332) * C15051 +
                     (C31567 * C1063 + C32455 * C1075 + C31563 * C1062 +
                      C32463 * C1074 + C31573 * C1430 + C17830 * C1431) *
                         C15058 +
                     (C31567 * C1072 + C32455 * C1090 + C31563 * C1071 +
                      C32463 * C1089 + C31573 * C1432 + C17830 * C1433) *
                         C32601) *
                        C32641) *
                       C32513 * C441 -
                   (((C19332 + C19331 + C19330) * C32601 +
                     (C19329 + C19328 + C19327) * C15058 +
                     (C31573 * C329 + C17830 * C349 + C31563 * C330 +
                      C32463 * C350 + C31567 * C331 + C32455 * C351) *
                         C15051 +
                     (C31573 * C319 + C17830 * C334 + C31563 * C320 +
                      C32463 * C335 + C31567 * C321 + C32455 * C336) *
                         C15057) *
                        C32641 +
                    ((C18294 + C18293 + C18292) * C32601 +
                     (C18291 + C18290 + C18289) * C15058 +
                     (C31573 * C134 + C17830 * C143 + C31563 * C133 +
                      C32463 * C142 + C31567 * C132 + C32455 * C141) *
                         C15051 +
                     (C31573 * C122 + C17830 * C129 + C31563 * C121 +
                      C32463 * C128 + C31567 * C120 + C32455 * C127) *
                         C15057) *
                        C32796) *
                       C32513 * C440) *
                      C443)) /
                (p * q * std::sqrt(p + q));
    d2ee[16] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                 (((((C31567 * C119 + C32455 * C126 + C31563 * C120 +
                      C32463 * C127 + C31573 * C121 + C17830 * C128) *
                         C15057 +
                     (C31567 * C131 + C32455 * C140 + C31563 * C132 +
                      C32463 * C141 + C31573 * C133 + C17830 * C142) *
                         C15051 +
                     (C17987 + C17988 + C17989) * C15058 +
                     (C17990 + C17991 + C17992) * C32601) *
                        C32796 +
                    ((C19103 + C19104 + C19105) * C15057 +
                     (C19106 + C19107 + C19108) * C15051 + C19743 * C15058 +
                     C19744 * C32601) *
                        C32641) *
                       C530 -
                   (((C19109 + C19110 + C19111) * C32601 +
                     (C19112 + C19113 + C19114) * C15058 +
                     (C19115 + C19116 + C19117) * C15051 +
                     (C19118 + C19119 + C19120) * C15057) *
                        C32641 +
                    (C19745 * C32601 + C19746 * C15058 +
                     (C19108 + C19107 + C19106) * C15051 +
                     (C19105 + C19104 + C19103) * C15057) *
                        C32796) *
                       C531) *
                      C440 +
                  (((C19743 * C15057 + C19744 * C15051 +
                     (C18622 + C18621 + C18620) * C15058 +
                     (C18619 + C18618 + C18617) * C32601) *
                        C32796 +
                    ((C19114 + C19113 + C19112) * C15057 +
                     (C19111 + C19110 + C19109) * C15051 +
                     (C31567 * C1068 + C32455 * C1083 + C31563 * C1069 +
                      C32463 * C1084 + C31573 * C1070 + C17830 * C1085) *
                         C15058 +
                     (C31567 * C1086 + C32455 * C1095 + C31563 * C1087 +
                      C32463 * C1096 + C31573 * C1088 + C17830 * C1097) *
                         C32601) *
                        C32641) *
                       C531 -
                   (((C18617 + C18618 + C18619) * C32601 +
                     (C18620 + C18621 + C18622) * C15058 + C19745 * C15051 +
                     C19746 * C15057) *
                        C32641 +
                    ((C17998 + C17997 + C17996) * C32601 +
                     (C17995 + C17994 + C17993) * C15058 +
                     (C17992 + C17991 + C17990) * C15051 +
                     (C17989 + C17988 + C17987) * C15057) *
                        C32796) *
                       C530) *
                      C441) *
                 C32487) /
                (p * q * std::sqrt(p + q));
    d2ee[17] += (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C31567 * C119 + C32455 * C126 + C31563 * C120 +
                     C32463 * C127 + C31573 * C121 + C17830 * C128) *
                        C15057 +
                    (C31567 * C131 + C32455 * C140 + C31563 * C132 +
                     C32463 * C141 + C31573 * C133 + C17830 * C142) *
                        C15051 +
                    (C17987 + C17988 + C17989) * C15058 +
                    (C17990 + C17991 + C17992) * C32601) *
                       C32796 +
                   ((C31567 * C322 + C32455 * C337 + C31563 * C321 +
                     C32463 * C336 + C31573 * C320 + C17830 * C335) *
                        C15057 +
                    (C31567 * C332 + C32455 * C352 + C31563 * C331 +
                     C32463 * C351 + C31573 * C330 + C17830 * C350) *
                        C15051 +
                    (C18628 + C18627 + C18626) * C15058 +
                    (C18625 + C18624 + C18623) * C32601) *
                       C32641) *
                      C32513 * C209 -
                  (((C18617 + C18618 + C18619) * C32601 +
                    (C18620 + C18621 + C18622) * C15058 +
                    (C18623 + C18624 + C18625) * C15051 +
                    (C18626 + C18627 + C18628) * C15057) *
                       C32641 +
                   ((C17998 + C17997 + C17996) * C32601 +
                    (C17995 + C17994 + C17993) * C15058 +
                    (C17992 + C17991 + C17990) * C15051 +
                    (C17989 + C17988 + C17987) * C15057) *
                       C32796) *
                      C32513 * C210 +
                  ((C18007 * C15057 + C18008 * C15051 +
                    (C18004 + C18003 + C18002) * C15058 +
                    (C18001 + C18000 + C17999) * C32601) *
                       C32796 +
                   ((C18622 + C18621 + C18620) * C15057 +
                    (C18619 + C18618 + C18617) * C15051 +
                    (C31567 * C1580 + C32455 * C1583 + C31563 * C1581 +
                     C32463 * C1584 + C31573 * C1582 + C17830 * C1585) *
                        C15058 +
                    (C31567 * C1586 + C32455 * C1589 + C31563 * C1587 +
                     C32463 * C1590 + C31573 * C1588 + C17830 * C1591) *
                        C32601) *
                       C32641) *
                      C32513 * C211) *
                 C32487) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C31567 * C119 + C32455 * C126 + C31563 * C120 +
                     C32463 * C127 + C31573 * C121 + C17830 * C128) *
                        C15057 +
                    (C31567 * C131 + C32455 * C140 + C31563 * C132 +
                     C32463 * C141 + C31573 * C133 + C17830 * C142) *
                        C15051 +
                    (C17987 + C17988 + C17989) * C15058 +
                    (C17990 + C17991 + C17992) * C32601) *
                       C32796 +
                   ((C31567 * C322 + C32455 * C337 + C31563 * C321 +
                     C32463 * C336 + C31573 * C320 + C17830 * C335) *
                        C15057 +
                    (C31567 * C332 + C32455 * C352 + C31563 * C331 +
                     C32463 * C351 + C31573 * C330 + C17830 * C350) *
                        C15051 +
                    (C18628 + C18627 + C18626) * C15058 +
                    (C18625 + C18624 + C18623) * C32601) *
                       C32641) *
                      C32513 * C32499 * C110 -
                  (((C31573 * C631 + C17830 * C636 + C31563 * C630 +
                     C32463 * C635 + C31567 * C629 + C32455 * C634) *
                        C32601 +
                    (C31573 * C621 + C17830 * C626 + C31563 * C620 +
                     C32463 * C625 + C31567 * C619 + C32455 * C624) *
                        C15058 +
                    (C31573 * C329 + C17830 * C349 + C31563 * C330 +
                     C32463 * C350 + C31567 * C331 + C32455 * C351) *
                        C15051 +
                    (C31573 * C319 + C17830 * C334 + C31563 * C320 +
                     C32463 * C335 + C31567 * C321 + C32455 * C336) *
                        C15057) *
                       C32641 +
                   ((C18294 + C18293 + C18292) * C32601 +
                    (C18291 + C18290 + C18289) * C15058 +
                    (C31573 * C134 + C17830 * C143 + C31563 * C133 +
                     C32463 * C142 + C31567 * C132 + C32455 * C141) *
                        C15051 +
                    (C31573 * C122 + C17830 * C129 + C31563 * C121 +
                     C32463 * C128 + C31567 * C120 + C32455 * C127) *
                        C15057) *
                       C32796) *
                      C32513 * C32499 * C111 +
                  (((C31567 * C121 + C32455 * C128 + C31563 * C122 +
                     C32463 * C129 + C31573 * C123 + C17830 * C130) *
                        C15057 +
                    (C31567 * C133 + C32455 * C142 + C31563 * C134 +
                     C32463 * C143 + C31573 * C135 + C17830 * C144) *
                        C15051 +
                    (C31567 * C215 + C32455 * C230 + C31563 * C214 +
                     C32463 * C229 + C31573 * C213 + C17830 * C228) *
                        C15058 +
                    (C31567 * C225 + C32455 * C245 + C31563 * C224 +
                     C32463 * C244 + C31573 * C223 + C17830 * C243) *
                        C32601) *
                       C32796 +
                   ((C31567 * C320 + C32455 * C335 + C31563 * C319 +
                     C32463 * C334 + C31573 * C318 + C17830 * C333) *
                        C15057 +
                    (C31567 * C330 + C32455 * C350 + C31563 * C329 +
                     C32463 * C349 + C31573 * C328 + C17830 * C348) *
                        C15051 +
                    (C31567 * C620 + C32455 * C625 + C31563 * C621 +
                     C32463 * C626 + C31573 * C622 + C17830 * C627) *
                        C15058 +
                    (C31567 * C630 + C32455 * C635 + C31563 * C631 +
                     C32463 * C636 + C31573 * C632 + C17830 * C637) *
                        C32601) *
                       C32641) *
                      C32513 * C32499 * C112)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((C31567 * C119 + C32455 * C126 + C31563 * C120 +
                     C32463 * C127 + C31573 * C121 + C17830 * C128) *
                        C15057 +
                    (C31567 * C131 + C32455 * C140 + C31563 * C132 +
                     C32463 * C141 + C31573 * C133 + C17830 * C142) *
                        C15051 +
                    (C17987 + C17988 + C17989) * C15058 +
                    (C17990 + C17991 + C17992) * C32601) *
                       C32796 +
                   ((C19103 + C19104 + C19105) * C15057 +
                    (C19106 + C19107 + C19108) * C15051 +
                    (C18628 + C18627 + C18626) * C15058 +
                    (C18625 + C18624 + C18623) * C32601) *
                       C32641) *
                      C315 -
                  (((C19109 + C19110 + C19111) * C32601 +
                    (C19112 + C19113 + C19114) * C15058 +
                    (C19115 + C19116 + C19117) * C15051 +
                    (C19118 + C19119 + C19120) * C15057) *
                       C32641 +
                   ((C18623 + C18624 + C18625) * C32601 +
                    (C18626 + C18627 + C18628) * C15058 +
                    (C19108 + C19107 + C19106) * C15051 +
                    (C19105 + C19104 + C19103) * C15057) *
                       C32796) *
                      C316 +
                  (((C19120 + C19119 + C19118) * C15057 +
                    (C19117 + C19116 + C19115) * C15051 +
                    (C19114 + C19113 + C19112) * C15058 +
                    (C19111 + C19110 + C19109) * C32601) *
                       C32796 +
                   ((C31567 * C1963 + C32455 * C1972 + C31563 * C1962 +
                     C32463 * C1971 + C31573 * C1961 + C17830 * C1970) *
                        C15057 +
                    (C31567 * C1969 + C32455 * C1981 + C31563 * C1968 +
                     C32463 * C1980 + C31573 * C1967 + C17830 * C1979) *
                        C15051 +
                    (C31567 * C2528 + C32455 * C2531 + C31563 * C2529 +
                     C32463 * C2532 + C31573 * C2530 + C17830 * C2533) *
                        C15058 +
                    (C31567 * C2534 + C32455 * C2537 + C31563 * C2535 +
                     C32463 * C2538 + C31573 * C2536 + C17830 * C2539) *
                        C32601) *
                       C32641) *
                      C317) *
                 C32499 * C32487) /
                    (p * q * std::sqrt(p + q));
    d2ee[18] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                 (((((C31567 * C119 + C32455 * C126 + C31563 * C120 +
                      C32463 * C127 + C31573 * C121 + C17830 * C128) *
                         C15057 +
                     (C31567 * C131 + C32455 * C140 + C31563 * C132 +
                      C32463 * C141 + C31573 * C133 + C17830 * C142) *
                         C15051 +
                     (C17987 + C17988 + C17989) * C15058 +
                     (C17990 + C17991 + C17992) * C32601) *
                        C32796 +
                    ((C19103 + C19104 + C19105) * C15057 +
                     (C19106 + C19107 + C19108) * C15051 +
                     (C18628 + C18627 + C18626) * C15058 +
                     (C18625 + C18624 + C18623) * C32601) *
                        C32641) *
                       C530 -
                   (((C19109 + C19110 + C19111) * C32601 +
                     (C19112 + C19113 + C19114) * C15058 +
                     (C19115 + C19116 + C19117) * C15051 +
                     (C19118 + C19119 + C19120) * C15057) *
                        C32641 +
                    ((C18623 + C18624 + C18625) * C32601 +
                     (C18626 + C18627 + C18628) * C15058 +
                     (C19108 + C19107 + C19106) * C15051 +
                     (C19105 + C19104 + C19103) * C15057) *
                        C32796) *
                       C531) *
                      C32499 * C442 +
                  ((((C19539 + C19540 + C19541) * C15057 +
                     (C19542 + C19543 + C19544) * C15051 +
                     (C19327 + C19328 + C19329) * C15058 +
                     (C19330 + C19331 + C19332) * C32601) *
                        C32796 +
                    ((C31567 * C324 + C32455 * C339 + C31563 * C325 +
                      C32463 * C340 + C31573 * C326 + C17830 * C341) *
                         C15057 +
                     (C31567 * C344 + C32455 * C354 + C31563 * C345 +
                      C32463 * C355 + C31573 * C346 + C17830 * C356) *
                         C15051 +
                     (C31567 * C1066 + C32455 * C1078 + C31563 * C1067 +
                      C32463 * C1079 + C31573 * C2192 + C17830 * C2193) *
                         C15058 +
                     (C31567 * C1081 + C32455 * C1093 + C31563 * C1082 +
                      C32463 * C1094 + C31573 * C2194 + C17830 * C2195) *
                         C32601) *
                        C32641) *
                       C531 -
                   (((C19332 + C19331 + C19330) * C32601 +
                     (C19329 + C19328 + C19327) * C15058 +
                     (C19544 + C19543 + C19542) * C15051 +
                     (C19541 + C19540 + C19539) * C15057) *
                        C32641 +
                    ((C18294 + C18293 + C18292) * C32601 +
                     (C18291 + C18290 + C18289) * C15058 +
                     (C31573 * C134 + C17830 * C143 + C31563 * C133 +
                      C32463 * C142 + C31567 * C132 + C32455 * C141) *
                         C15051 +
                     (C31573 * C122 + C17830 * C129 + C31563 * C121 +
                      C32463 * C128 + C31567 * C120 + C32455 * C127) *
                         C15057) *
                        C32796) *
                       C530) *
                      C32499 * C443)) /
                (p * q * std::sqrt(p + q));
    d2ee[19] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C31567 * C119 + C32455 * C126 + C31563 * C120 +
                     C32463 * C127 + C31573 * C121 + C17830 * C128) *
                        C15057 +
                    (C31567 * C131 + C32455 * C140 + C31563 * C132 +
                     C32463 * C141 + C31573 * C133 + C17830 * C142) *
                        C15051 +
                    (C17987 + C17988 + C17989) * C15058 +
                    (C17990 + C17991 + C17992) * C32601) *
                       C32796 +
                   ((C31567 * C322 + C32455 * C337 + C31563 * C321 +
                     C32463 * C336 + C31573 * C320 + C17830 * C335) *
                        C15057 +
                    (C31567 * C332 + C32455 * C352 + C31563 * C331 +
                     C32463 * C351 + C31573 * C330 + C17830 * C350) *
                        C15051 +
                    (C18628 + C18627 + C18626) * C15058 +
                    (C18625 + C18624 + C18623) * C32601) *
                       C32641) *
                      C32513 * C32499 * C110 -
                  (((C31573 * C631 + C17830 * C636 + C31563 * C630 +
                     C32463 * C635 + C31567 * C629 + C32455 * C634) *
                        C32601 +
                    (C31573 * C621 + C17830 * C626 + C31563 * C620 +
                     C32463 * C625 + C31567 * C619 + C32455 * C624) *
                        C15058 +
                    (C31573 * C329 + C17830 * C349 + C31563 * C330 +
                     C32463 * C350 + C31567 * C331 + C32455 * C351) *
                        C15051 +
                    (C31573 * C319 + C17830 * C334 + C31563 * C320 +
                     C32463 * C335 + C31567 * C321 + C32455 * C336) *
                        C15057) *
                       C32641 +
                   ((C18294 + C18293 + C18292) * C32601 +
                    (C18291 + C18290 + C18289) * C15058 +
                    (C31573 * C134 + C17830 * C143 + C31563 * C133 +
                     C32463 * C142 + C31567 * C132 + C32455 * C141) *
                        C15051 +
                    (C31573 * C122 + C17830 * C129 + C31563 * C121 +
                     C32463 * C128 + C31567 * C120 + C32455 * C127) *
                        C15057) *
                       C32796) *
                      C32513 * C32499 * C111 +
                  (((C31567 * C121 + C32455 * C128 + C31563 * C122 +
                     C32463 * C129 + C31573 * C123 + C17830 * C130) *
                        C15057 +
                    (C31567 * C133 + C32455 * C142 + C31563 * C134 +
                     C32463 * C143 + C31573 * C135 + C17830 * C144) *
                        C15051 +
                    (C31567 * C215 + C32455 * C230 + C31563 * C214 +
                     C32463 * C229 + C31573 * C213 + C17830 * C228) *
                        C15058 +
                    (C31567 * C225 + C32455 * C245 + C31563 * C224 +
                     C32463 * C244 + C31573 * C223 + C17830 * C243) *
                        C32601) *
                       C32796 +
                   ((C31567 * C320 + C32455 * C335 + C31563 * C319 +
                     C32463 * C334 + C31573 * C318 + C17830 * C333) *
                        C15057 +
                    (C31567 * C330 + C32455 * C350 + C31563 * C329 +
                     C32463 * C349 + C31573 * C328 + C17830 * C348) *
                        C15051 +
                    (C31567 * C620 + C32455 * C625 + C31563 * C621 +
                     C32463 * C626 + C31573 * C622 + C17830 * C627) *
                        C15058 +
                    (C31567 * C630 + C32455 * C635 + C31563 * C631 +
                     C32463 * C636 + C31573 * C632 + C17830 * C637) *
                        C32601) *
                       C32641) *
                      C32513 * C32499 * C112)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C31567 * C119 + C32455 * C126 + C31563 * C120 +
                     C32463 * C127 + C31573 * C121 + C17830 * C128) *
                        C15057 +
                    (C31567 * C131 + C32455 * C140 + C31563 * C132 +
                     C32463 * C141 + C31573 * C133 + C17830 * C142) *
                        C15051 +
                    (C17987 + C17988 + C17989) * C15058 +
                    (C17990 + C17991 + C17992) * C32601) *
                       C32796 +
                   ((C31567 * C322 + C32455 * C337 + C31563 * C321 +
                     C32463 * C336 + C31573 * C320 + C17830 * C335) *
                        C15057 +
                    (C31567 * C332 + C32455 * C352 + C31563 * C331 +
                     C32463 * C351 + C31573 * C330 + C17830 * C350) *
                        C15051 +
                    (C18628 + C18627 + C18626) * C15058 +
                    (C18625 + C18624 + C18623) * C32601) *
                       C32641) *
                      C32513 * C209 -
                  (((C18617 + C18618 + C18619) * C32601 +
                    (C18620 + C18621 + C18622) * C15058 +
                    (C18623 + C18624 + C18625) * C15051 +
                    (C18626 + C18627 + C18628) * C15057) *
                       C32641 +
                   ((C17998 + C17997 + C17996) * C32601 +
                    (C17995 + C17994 + C17993) * C15058 +
                    (C17992 + C17991 + C17990) * C15051 +
                    (C17989 + C17988 + C17987) * C15057) *
                       C32796) *
                      C32513 * C210 +
                  ((C18007 * C15057 + C18008 * C15051 +
                    (C18004 + C18003 + C18002) * C15058 +
                    (C18001 + C18000 + C17999) * C32601) *
                       C32796 +
                   ((C18622 + C18621 + C18620) * C15057 +
                    (C18619 + C18618 + C18617) * C15051 +
                    (C31567 * C1580 + C32455 * C1583 + C31563 * C1581 +
                     C32463 * C1584 + C31573 * C1582 + C17830 * C1585) *
                        C15058 +
                    (C31567 * C1586 + C32455 * C1589 + C31563 * C1587 +
                     C32463 * C1590 + C31573 * C1588 + C17830 * C1591) *
                        C32601) *
                       C32641) *
                      C32513 * C211) *
                 C32487) /
                    (p * q * std::sqrt(p + q));
    d2ee[20] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C15053 * C119 + C32867 * C126 + C15054 * C120 + C32860 * C127 +
             C15055 * C121 + C32847 * C128 + C15056 * C122 + C32830 * C129) *
                C15057 +
            (C15053 * C131 + C32867 * C140 + C15054 * C132 + C32860 * C141 +
             C15055 * C133 + C32847 * C142 + C15056 * C134 + C32830 * C143) *
                C15051 +
            (C15190 + C15191 + C15192 + C15193) * C15058 +
            (C15194 + C15195 + C15196 + C15197) * C32601) *
               C32554 * C32513 * C440 -
           ((C15198 + C15199 + C15200 + C15201) * C32601 +
            (C15202 + C15203 + C15204 + C15205) * C15058 +
            (C15197 + C15196 + C15195 + C15194) * C15051 +
            (C15193 + C15192 + C15191 + C15190) * C15057) *
               C32554 * C32513 * C441) *
              C442 +
          (((C15450 + C15451 + C15452 + C15453) * C15057 +
            (C15454 + C15455 + C15456 + C15457) * C15051 +
            (C15053 * C219 + C32867 * C234 + C15054 * C220 + C32860 * C235 +
             C15055 * C221 + C32847 * C236 + C15056 * C222 + C32830 * C237) *
                C15058 +
            (C15053 * C239 + C32867 * C249 + C15054 * C240 + C32860 * C250 +
             C15055 * C241 + C32847 * C251 + C15056 * C242 + C32830 * C252) *
                C32601) *
               C32554 * C32513 * C441 -
           ((C15457 + C15456 + C15455 + C15454) * C32601 +
            (C15453 + C15452 + C15451 + C15450) * C15058 +
            (C15056 * C135 + C32830 * C144 + C15055 * C134 + C32847 * C143 +
             C15054 * C133 + C32860 * C142 + C15053 * C132 + C32867 * C141) *
                C15051 +
            (C15056 * C123 + C32830 * C130 + C15055 * C122 + C32847 * C129 +
             C15054 * C121 + C32860 * C128 + C15053 * C120 + C32867 * C127) *
                C15057) *
               C32554 * C32513 * C440) *
              C443)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C15845 * C119 + C15839 * C126 + C15846 * C120 + C32460 * C127) *
                C15847 +
            (C15845 * C131 + C15839 * C140 + C15846 * C132 + C32460 * C141) *
                C32868 +
            (C15982 + C15983) * C15848 + (C15984 + C15985) * C32864 +
            C15998 * C15849 + C15999 * C32854 + C16000 * C15850 +
            C16001 * C32836) *
               C32554 * C32513 * C440 -
           ((C15994 + C15995) * C32836 + (C15996 + C15997) * C15850 +
            (C15993 + C15992) * C32854 + (C15991 + C15990) * C15849 +
            (C15989 + C15988) * C32864 + (C15987 + C15986) * C15848 +
            (C15985 + C15984) * C32868 + (C15983 + C15982) * C15847) *
               C32554 * C32513 * C441) *
              C442 +
          (((C16254 + C16255) * C15847 + (C16256 + C16257) * C32868 +
            (C16258 + C16259) * C15848 + (C16260 + C16261) * C32864 +
            (C16262 + C16263) * C15849 + (C16264 + C16265) * C32854 +
            (C15845 * C874 + C15839 * C883 + C15846 * C875 + C32460 * C884) *
                C15850 +
            (C15845 * C886 + C15839 * C892 + C15846 * C887 + C32460 * C893) *
                C32836) *
               C32554 * C32513 * C441 -
           ((C16265 + C16264) * C32836 + (C16263 + C16262) * C15850 +
            (C16261 + C16260) * C32854 + (C16259 + C16258) * C15849 +
            (C16257 + C16256) * C32864 + (C16255 + C16254) * C15848 +
            (C15846 * C133 + C32460 * C142 + C15845 * C132 + C15839 * C141) *
                C32868 +
            (C15846 * C121 + C32460 * C128 + C15845 * C120 + C15839 * C127) *
                C15847) *
               C32554 * C32513 * C440) *
              C443)) /
            (p * q * std::sqrt(p + q));
    d2ee[21] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C15053 * C119 + C32867 * C126 + C15054 * C120 + C32860 * C127 +
             C15055 * C121 + C32847 * C128 + C15056 * C122 + C32830 * C129) *
                C15057 +
            (C15053 * C131 + C32867 * C140 + C15054 * C132 + C32860 * C141 +
             C15055 * C133 + C32847 * C142 + C15056 * C134 + C32830 * C143) *
                C15051 +
            (C15190 + C15191 + C15192 + C15193) * C15058 +
            (C15194 + C15195 + C15196 + C15197) * C32601) *
               C32554 * C530 -
           ((C15734 + C15735 + C15736 + C15737) * C32601 +
            (C15738 + C15739 + C15740 + C15741) * C15058 +
            (C15056 * C329 + C32830 * C349 + C15055 * C330 + C32847 * C350 +
             C15054 * C331 + C32860 * C351 + C15053 * C332 + C32867 * C352) *
                C15051 +
            (C15056 * C319 + C32830 * C334 + C15055 * C320 + C32847 * C335 +
             C15054 * C321 + C32860 * C336 + C15053 * C322 + C32867 * C337) *
                C15057) *
               C32554 * C531) *
              C440 +
          (((C15741 + C15740 + C15739 + C15738) * C15057 +
            (C15737 + C15736 + C15735 + C15734) * C15051 +
            (C15053 * C1064 + C32867 * C1076 + C15054 * C1063 + C32860 * C1075 +
             C15055 * C1062 + C32847 * C1074 + C15056 * C1430 +
             C32830 * C1431) *
                C15058 +
            (C15053 * C1073 + C32867 * C1091 + C15054 * C1072 + C32860 * C1090 +
             C15055 * C1071 + C32847 * C1089 + C15056 * C1432 +
             C32830 * C1433) *
                C32601) *
               C32554 * C531 -
           ((C15198 + C15199 + C15200 + C15201) * C32601 +
            (C15202 + C15203 + C15204 + C15205) * C15058 +
            (C15197 + C15196 + C15195 + C15194) * C15051 +
            (C15193 + C15192 + C15191 + C15190) * C15057) *
               C32554 * C530) *
              C441) *
         C32487) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C15845 * C119 + C15839 * C126 + C15846 * C120 + C32460 * C127) *
                C15847 +
            (C15845 * C131 + C15839 * C140 + C15846 * C132 + C32460 * C141) *
                C32868 +
            (C15982 + C15983) * C15848 + (C15984 + C15985) * C32864 +
            C15998 * C15849 + C15999 * C32854 + C16000 * C15850 +
            C16001 * C32836) *
               C32554 * C530 -
           ((C16550 + C16551) * C32836 + (C16552 + C16553) * C15850 +
            (C16554 + C16555) * C32854 + (C16556 + C16557) * C15849 +
            (C16558 + C16559) * C32864 + (C16560 + C16561) * C15848 +
            (C15846 * C331 + C32460 * C351 + C15845 * C332 + C15839 * C352) *
                C32868 +
            (C15846 * C321 + C32460 * C336 + C15845 * C322 + C15839 * C337) *
                C15847) *
               C32554 * C531) *
              C440 +
          (((C16561 + C16560) * C15847 + (C16559 + C16558) * C32868 +
            (C16557 + C16556) * C15848 + (C16555 + C16554) * C32864 +
            (C16553 + C16552) * C15849 + (C16551 + C16550) * C32854 +
            (C15845 * C6300 + C15839 * C6304 + C15846 * C6504 +
             C32460 * C6505) *
                C15850 +
            (C15845 * C6303 + C15839 * C6309 + C15846 * C6506 +
             C32460 * C6507) *
                C32836) *
               C32554 * C531 -
           ((C15994 + C15995) * C32836 + (C15996 + C15997) * C15850 +
            (C15993 + C15992) * C32854 + (C15991 + C15990) * C15849 +
            (C15989 + C15988) * C32864 + (C15987 + C15986) * C15848 +
            (C15985 + C15984) * C32868 + (C15983 + C15982) * C15847) *
               C32554 * C530) *
              C441) *
         C32487) /
            (p * q * std::sqrt(p + q));
    d2ee[22] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C15053 * C119 + C32867 * C126 + C15054 * C120 + C32860 * C127 +
            C15055 * C121 + C32847 * C128 + C15056 * C122 + C32830 * C129) *
               C15057 +
           (C15053 * C131 + C32867 * C140 + C15054 * C132 + C32860 * C141 +
            C15055 * C133 + C32847 * C142 + C15056 * C134 + C32830 * C143) *
               C15051 +
           (C15190 + C15191 + C15192 + C15193) * C15058 +
           (C15194 + C15195 + C15196 + C15197) * C32601) *
              C32554 * C32513 * C209 -
          ((C15198 + C15199 + C15200 + C15201) * C32601 +
           (C15202 + C15203 + C15204 + C15205) * C15058 +
           (C15197 + C15196 + C15195 + C15194) * C15051 +
           (C15193 + C15192 + C15191 + C15190) * C15057) *
              C32554 * C32513 * C210 +
          ((C15205 + C15204 + C15203 + C15202) * C15057 +
           (C15201 + C15200 + C15199 + C15198) * C15051 +
           (C15053 * C872 + C32867 * C881 + C15054 * C871 + C32860 * C880 +
            C15055 * C870 + C32847 * C879 + C15056 * C1244 + C32830 * C1245) *
               C15058 +
           (C15053 * C878 + C32867 * C890 + C15054 * C877 + C32860 * C889 +
            C15055 * C876 + C32847 * C888 + C15056 * C1246 + C32830 * C1247) *
               C32601) *
              C32554 * C32513 * C211) *
         C32487) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C15053 * C119 + C32867 * C126 + C15054 * C120 + C32860 * C127 +
            C15055 * C121 + C32847 * C128 + C15056 * C122 + C32830 * C129) *
               C15057 +
           (C15053 * C131 + C32867 * C140 + C15054 * C132 + C32860 * C141 +
            C15055 * C133 + C32847 * C142 + C15056 * C134 + C32830 * C143) *
               C15051 +
           (C15053 * C217 + C32867 * C232 + C15054 * C216 + C32860 * C231 +
            C15055 * C215 + C32847 * C230 + C15056 * C214 + C32830 * C229) *
               C15058 +
           (C15053 * C227 + C32867 * C247 + C15054 * C226 + C32860 * C246 +
            C15055 * C225 + C32847 * C245 + C15056 * C224 + C32830 * C244) *
               C32601) *
              C32554 * C32513 * C32499 * C110 -
          ((C15056 * C223 + C32830 * C243 + C15055 * C224 + C32847 * C244 +
            C15054 * C225 + C32860 * C245 + C15053 * C226 + C32867 * C246) *
               C32601 +
           (C15056 * C213 + C32830 * C228 + C15055 * C214 + C32847 * C229 +
            C15054 * C215 + C32860 * C230 + C15053 * C216 + C32867 * C231) *
               C15058 +
           (C15056 * C135 + C32830 * C144 + C15055 * C134 + C32847 * C143 +
            C15054 * C133 + C32860 * C142 + C15053 * C132 + C32867 * C141) *
               C15051 +
           (C15056 * C123 + C32830 * C130 + C15055 * C122 + C32847 * C129 +
            C15054 * C121 + C32860 * C128 + C15053 * C120 + C32867 * C127) *
               C15057) *
              C32554 * C32513 * C32499 * C111 +
          ((C15053 * C121 + C32867 * C128 + C15054 * C122 + C32860 * C129 +
            C15055 * C123 + C32847 * C130 + C15056 * C124 + C32830 * C137) *
               C15057 +
           (C15053 * C133 + C32867 * C142 + C15054 * C134 + C32860 * C143 +
            C15055 * C135 + C32847 * C144 + C15056 * C136 + C32830 * C145) *
               C15051 +
           (C15053 * C215 + C32867 * C230 + C15054 * C214 + C32860 * C229 +
            C15055 * C213 + C32847 * C228 + C15056 * C444 + C32830 * C445) *
               C15058 +
           (C15053 * C225 + C32867 * C245 + C15054 * C224 + C32860 * C244 +
            C15055 * C223 + C32847 * C243 + C15056 * C446 + C32830 * C447) *
               C32601) *
              C32554 * C32513 * C32499 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C15053 * C119 + C32867 * C126 + C15054 * C120 + C32860 * C127 +
            C15055 * C121 + C32847 * C128 + C15056 * C122 + C32830 * C129) *
               C15057 +
           (C15053 * C131 + C32867 * C140 + C15054 * C132 + C32860 * C141 +
            C15055 * C133 + C32847 * C142 + C15056 * C134 + C32830 * C143) *
               C15051 +
           (C15190 + C15191 + C15192 + C15193) * C15058 +
           (C15194 + C15195 + C15196 + C15197) * C32601) *
              C32554 * C315 -
          ((C15056 * C631 + C32830 * C636 + C15055 * C630 + C32847 * C635 +
            C15054 * C629 + C32860 * C634 + C15053 * C628 + C32867 * C633) *
               C32601 +
           (C15056 * C621 + C32830 * C626 + C15055 * C620 + C32847 * C625 +
            C15054 * C619 + C32860 * C624 + C15053 * C618 + C32867 * C623) *
               C15058 +
           (C15056 * C329 + C32830 * C349 + C15055 * C330 + C32847 * C350 +
            C15054 * C331 + C32860 * C351 + C15053 * C332 + C32867 * C352) *
               C15051 +
           (C15056 * C319 + C32830 * C334 + C15055 * C320 + C32847 * C335 +
            C15054 * C321 + C32860 * C336 + C15053 * C322 + C32867 * C337) *
               C15057) *
              C32554 * C316 +
          ((C15053 * C323 + C32867 * C338 + C15054 * C324 + C32860 * C339 +
            C15055 * C325 + C32847 * C340 + C15056 * C326 + C32830 * C341) *
               C15057 +
           (C15053 * C343 + C32867 * C353 + C15054 * C344 + C32860 * C354 +
            C15055 * C345 + C32847 * C355 + C15056 * C346 + C32830 * C356) *
               C15051 +
           (C15053 * C1065 + C32867 * C1077 + C15054 * C1066 + C32860 * C1078 +
            C15055 * C1067 + C32847 * C1079 + C15056 * C2192 + C32830 * C2193) *
               C15058 +
           (C15053 * C1080 + C32867 * C1092 + C15054 * C1081 + C32860 * C1093 +
            C15055 * C1082 + C32847 * C1094 + C15056 * C2194 + C32830 * C2195) *
               C32601) *
              C32554 * C317) *
         C32499 * C32487) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C15845 * C119 + C15839 * C126 + C15846 * C120 + C32460 * C127) *
               C15847 +
           (C15845 * C131 + C15839 * C140 + C15846 * C132 + C32460 * C141) *
               C32868 +
           (C15845 * C217 + C15839 * C232 + C15846 * C216 + C32460 * C231) *
               C15848 +
           (C15845 * C227 + C15839 * C247 + C15846 * C226 + C32460 * C246) *
               C32864 +
           (C15845 * C218 + C15839 * C233 + C15846 * C219 + C32460 * C234) *
               C15849 +
           (C15845 * C238 + C15839 * C248 + C15846 * C239 + C32460 * C249) *
               C32854 +
           (C15845 * C872 + C15839 * C881 + C15846 * C871 + C32460 * C880) *
               C15850 +
           (C15845 * C878 + C15839 * C890 + C15846 * C877 + C32460 * C889) *
               C32836) *
              C32554 * C32513 * C32499 * C110 -
          ((C15846 * C876 + C32460 * C888 + C15845 * C877 + C15839 * C889) *
               C32836 +
           (C15846 * C870 + C32460 * C879 + C15845 * C871 + C15839 * C880) *
               C15850 +
           (C15846 * C240 + C32460 * C250 + C15845 * C239 + C15839 * C249) *
               C32854 +
           (C15846 * C220 + C32460 * C235 + C15845 * C219 + C15839 * C234) *
               C15849 +
           (C15846 * C225 + C32460 * C245 + C15845 * C226 + C15839 * C246) *
               C32864 +
           (C15846 * C215 + C32460 * C230 + C15845 * C216 + C15839 * C231) *
               C15848 +
           (C15846 * C133 + C32460 * C142 + C15845 * C132 + C15839 * C141) *
               C32868 +
           (C15846 * C121 + C32460 * C128 + C15845 * C120 + C15839 * C127) *
               C15847) *
              C32554 * C32513 * C32499 * C111 +
          ((C15845 * C121 + C15839 * C128 + C15846 * C122 + C32460 * C129) *
               C15847 +
           (C15845 * C133 + C15839 * C142 + C15846 * C134 + C32460 * C143) *
               C32868 +
           (C15845 * C215 + C15839 * C230 + C15846 * C214 + C32460 * C229) *
               C15848 +
           (C15845 * C225 + C15839 * C245 + C15846 * C224 + C32460 * C244) *
               C32864 +
           (C15845 * C220 + C15839 * C235 + C15846 * C221 + C32460 * C236) *
               C15849 +
           (C15845 * C240 + C15839 * C250 + C15846 * C241 + C32460 * C251) *
               C32854 +
           (C15845 * C870 + C15839 * C879 + C15846 * C1244 + C32460 * C1245) *
               C15850 +
           (C15845 * C876 + C15839 * C888 + C15846 * C1246 + C32460 * C1247) *
               C32836) *
              C32554 * C32513 * C32499 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C15845 * C119 + C15839 * C126 + C15846 * C120 + C32460 * C127) *
               C15847 +
           (C15845 * C131 + C15839 * C140 + C15846 * C132 + C32460 * C141) *
               C32868 +
           (C15982 + C15983) * C15848 + (C15984 + C15985) * C32864 +
           C15998 * C15849 + C15999 * C32854 + C16000 * C15850 +
           C16001 * C32836) *
              C32554 * C32513 * C209 -
          ((C15994 + C15995) * C32836 + (C15996 + C15997) * C15850 +
           (C15993 + C15992) * C32854 + (C15991 + C15990) * C15849 +
           (C15989 + C15988) * C32864 + (C15987 + C15986) * C15848 +
           (C15985 + C15984) * C32868 + (C15983 + C15982) * C15847) *
              C32554 * C32513 * C210 +
          (C15998 * C15847 + C15999 * C32868 + C16000 * C15848 +
           C16001 * C32864 + (C15997 + C15996) * C15849 +
           (C15995 + C15994) * C32854 +
           (C15845 * C6200 + C15839 * C6203 + C15846 * C6394 + C32460 * C6395) *
               C15850 +
           (C15845 * C6202 + C15839 * C6206 + C15846 * C6396 + C32460 * C6397) *
               C32836) *
              C32554 * C32513 * C211) *
         C32487) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C15845 * C119 + C15839 * C126 + C15846 * C120 + C32460 * C127) *
               C15847 +
           (C15845 * C131 + C15839 * C140 + C15846 * C132 + C32460 * C141) *
               C32868 +
           (C15982 + C15983) * C15848 + (C15984 + C15985) * C32864 +
           C15998 * C15849 + C15999 * C32854 + C16000 * C15850 +
           C16001 * C32836) *
              C32554 * C315 -
          ((C15846 * C1587 + C32460 * C1590 + C15845 * C1586 + C15839 * C1589) *
               C32836 +
           (C15846 * C1581 + C32460 * C1584 + C15845 * C1580 + C15839 * C1583) *
               C15850 +
           (C15846 * C1072 + C32460 * C1090 + C15845 * C1073 + C15839 * C1091) *
               C32854 +
           (C15846 * C1063 + C32460 * C1075 + C15845 * C1064 + C15839 * C1076) *
               C15849 +
           (C15846 * C629 + C32460 * C634 + C15845 * C628 + C15839 * C633) *
               C32864 +
           (C15846 * C619 + C32460 * C624 + C15845 * C618 + C15839 * C623) *
               C15848 +
           (C15846 * C331 + C32460 * C351 + C15845 * C332 + C15839 * C352) *
               C32868 +
           (C15846 * C321 + C32460 * C336 + C15845 * C322 + C15839 * C337) *
               C15847) *
              C32554 * C316 +
          ((C15845 * C323 + C15839 * C338 + C15846 * C324 + C32460 * C339) *
               C15847 +
           (C15845 * C343 + C15839 * C353 + C15846 * C344 + C32460 * C354) *
               C32868 +
           (C15845 * C1065 + C15839 * C1077 + C15846 * C1066 + C32460 * C1078) *
               C15848 +
           (C15845 * C1080 + C15839 * C1092 + C15846 * C1081 + C32460 * C1093) *
               C32864 +
           (C15845 * C1068 + C15839 * C1083 + C15846 * C1069 + C32460 * C1084) *
               C15849 +
           (C15845 * C1086 + C15839 * C1095 + C15846 * C1087 + C32460 * C1096) *
               C32854 +
           (C15845 * C6301 + C15839 * C6305 + C15846 * C7177 + C32460 * C7178) *
               C15850 +
           (C15845 * C6306 + C15839 * C6310 + C15846 * C7179 + C32460 * C7180) *
               C32836) *
              C32554 * C317) *
         C32499 * C32487) /
            (p * q * std::sqrt(p + q));
    d2ee[23] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C15053 * C119 + C32867 * C126 + C15054 * C120 + C32860 * C127 +
             C15055 * C121 + C32847 * C128 + C15056 * C122 + C32830 * C129) *
                C15057 +
            (C15053 * C131 + C32867 * C140 + C15054 * C132 + C32860 * C141 +
             C15055 * C133 + C32847 * C142 + C15056 * C134 + C32830 * C143) *
                C15051 +
            (C15190 + C15191 + C15192 + C15193) * C15058 +
            (C15194 + C15195 + C15196 + C15197) * C32601) *
               C32554 * C530 -
           ((C15056 * C631 + C32830 * C636 + C15055 * C630 + C32847 * C635 +
             C15054 * C629 + C32860 * C634 + C15053 * C628 + C32867 * C633) *
                C32601 +
            (C15056 * C621 + C32830 * C626 + C15055 * C620 + C32847 * C625 +
             C15054 * C619 + C32860 * C624 + C15053 * C618 + C32867 * C623) *
                C15058 +
            (C15056 * C329 + C32830 * C349 + C15055 * C330 + C32847 * C350 +
             C15054 * C331 + C32860 * C351 + C15053 * C332 + C32867 * C352) *
                C15051 +
            (C15056 * C319 + C32830 * C334 + C15055 * C320 + C32847 * C335 +
             C15054 * C321 + C32860 * C336 + C15053 * C322 + C32867 * C337) *
                C15057) *
               C32554 * C531) *
              C32499 * C442 +
          (((C15053 * C321 + C32867 * C336 + C15054 * C320 + C32860 * C335 +
             C15055 * C319 + C32847 * C334 + C15056 * C318 + C32830 * C333) *
                C15057 +
            (C15053 * C331 + C32867 * C351 + C15054 * C330 + C32860 * C350 +
             C15055 * C329 + C32847 * C349 + C15056 * C328 + C32830 * C348) *
                C15051 +
            (C15053 * C619 + C32867 * C624 + C15054 * C620 + C32860 * C625 +
             C15055 * C621 + C32847 * C626 + C15056 * C622 + C32830 * C627) *
                C15058 +
            (C15053 * C629 + C32867 * C634 + C15054 * C630 + C32860 * C635 +
             C15055 * C631 + C32847 * C636 + C15056 * C632 + C32830 * C637) *
                C32601) *
               C32554 * C531 -
           ((C15457 + C15456 + C15455 + C15454) * C32601 +
            (C15453 + C15452 + C15451 + C15450) * C15058 +
            (C15056 * C135 + C32830 * C144 + C15055 * C134 + C32847 * C143 +
             C15054 * C133 + C32860 * C142 + C15053 * C132 + C32867 * C141) *
                C15051 +
            (C15056 * C123 + C32830 * C130 + C15055 * C122 + C32847 * C129 +
             C15054 * C121 + C32860 * C128 + C15053 * C120 + C32867 * C127) *
                C15057) *
               C32554 * C530) *
              C32499 * C443)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C15845 * C119 + C15839 * C126 + C15846 * C120 + C32460 * C127) *
                C15847 +
            (C15845 * C131 + C15839 * C140 + C15846 * C132 + C32460 * C141) *
                C32868 +
            (C15982 + C15983) * C15848 + (C15984 + C15985) * C32864 +
            C15998 * C15849 + C15999 * C32854 + C16000 * C15850 +
            C16001 * C32836) *
               C32554 * C530 -
           ((C15846 * C1587 + C32460 * C1590 + C15845 * C1586 +
             C15839 * C1589) *
                C32836 +
            (C15846 * C1581 + C32460 * C1584 + C15845 * C1580 +
             C15839 * C1583) *
                C15850 +
            (C15846 * C1072 + C32460 * C1090 + C15845 * C1073 +
             C15839 * C1091) *
                C32854 +
            (C15846 * C1063 + C32460 * C1075 + C15845 * C1064 +
             C15839 * C1076) *
                C15849 +
            (C15846 * C629 + C32460 * C634 + C15845 * C628 + C15839 * C633) *
                C32864 +
            (C15846 * C619 + C32460 * C624 + C15845 * C618 + C15839 * C623) *
                C15848 +
            (C15846 * C331 + C32460 * C351 + C15845 * C332 + C15839 * C352) *
                C32868 +
            (C15846 * C321 + C32460 * C336 + C15845 * C322 + C15839 * C337) *
                C15847) *
               C32554 * C531) *
              C32499 * C442 +
          (((C15845 * C321 + C15839 * C336 + C15846 * C320 + C32460 * C335) *
                C15847 +
            (C15845 * C331 + C15839 * C351 + C15846 * C330 + C32460 * C350) *
                C32868 +
            (C15845 * C619 + C15839 * C624 + C15846 * C620 + C32460 * C625) *
                C15848 +
            (C15845 * C629 + C15839 * C634 + C15846 * C630 + C32460 * C635) *
                C32864 +
            (C15845 * C1063 + C15839 * C1075 + C15846 * C1062 +
             C32460 * C1074) *
                C15849 +
            (C15845 * C1072 + C15839 * C1090 + C15846 * C1071 +
             C32460 * C1089) *
                C32854 +
            (C15845 * C1581 + C15839 * C1584 + C15846 * C1582 +
             C32460 * C1585) *
                C15850 +
            (C15845 * C1587 + C15839 * C1590 + C15846 * C1588 +
             C32460 * C1591) *
                C32836) *
               C32554 * C531 -
           ((C16265 + C16264) * C32836 + (C16263 + C16262) * C15850 +
            (C16261 + C16260) * C32854 + (C16259 + C16258) * C15849 +
            (C16257 + C16256) * C32864 + (C16255 + C16254) * C15848 +
            (C15846 * C133 + C32460 * C142 + C15845 * C132 + C15839 * C141) *
                C32868 +
            (C15846 * C121 + C32460 * C128 + C15845 * C120 + C15839 * C127) *
                C15847) *
               C32554 * C530) *
              C32499 * C443)) /
            (p * q * std::sqrt(p + q));
    d2ee[24] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C15053 * C119 + C32867 * C126 + C15054 * C120 + C32860 * C127 +
            C15055 * C121 + C32847 * C128 + C15056 * C122 + C32830 * C129) *
               C15057 +
           (C15053 * C131 + C32867 * C140 + C15054 * C132 + C32860 * C141 +
            C15055 * C133 + C32847 * C142 + C15056 * C134 + C32830 * C143) *
               C15051 +
           (C15053 * C217 + C32867 * C232 + C15054 * C216 + C32860 * C231 +
            C15055 * C215 + C32847 * C230 + C15056 * C214 + C32830 * C229) *
               C15058 +
           (C15053 * C227 + C32867 * C247 + C15054 * C226 + C32860 * C246 +
            C15055 * C225 + C32847 * C245 + C15056 * C224 + C32830 * C244) *
               C32601) *
              C32554 * C32513 * C32499 * C110 -
          ((C15056 * C223 + C32830 * C243 + C15055 * C224 + C32847 * C244 +
            C15054 * C225 + C32860 * C245 + C15053 * C226 + C32867 * C246) *
               C32601 +
           (C15056 * C213 + C32830 * C228 + C15055 * C214 + C32847 * C229 +
            C15054 * C215 + C32860 * C230 + C15053 * C216 + C32867 * C231) *
               C15058 +
           (C15056 * C135 + C32830 * C144 + C15055 * C134 + C32847 * C143 +
            C15054 * C133 + C32860 * C142 + C15053 * C132 + C32867 * C141) *
               C15051 +
           (C15056 * C123 + C32830 * C130 + C15055 * C122 + C32847 * C129 +
            C15054 * C121 + C32860 * C128 + C15053 * C120 + C32867 * C127) *
               C15057) *
              C32554 * C32513 * C32499 * C111 +
          ((C15053 * C121 + C32867 * C128 + C15054 * C122 + C32860 * C129 +
            C15055 * C123 + C32847 * C130 + C15056 * C124 + C32830 * C137) *
               C15057 +
           (C15053 * C133 + C32867 * C142 + C15054 * C134 + C32860 * C143 +
            C15055 * C135 + C32847 * C144 + C15056 * C136 + C32830 * C145) *
               C15051 +
           (C15053 * C215 + C32867 * C230 + C15054 * C214 + C32860 * C229 +
            C15055 * C213 + C32847 * C228 + C15056 * C444 + C32830 * C445) *
               C15058 +
           (C15053 * C225 + C32867 * C245 + C15054 * C224 + C32860 * C244 +
            C15055 * C223 + C32847 * C243 + C15056 * C446 + C32830 * C447) *
               C32601) *
              C32554 * C32513 * C32499 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C15053 * C119 + C32867 * C126 + C15054 * C120 + C32860 * C127 +
            C15055 * C121 + C32847 * C128 + C15056 * C122 + C32830 * C129) *
               C15057 +
           (C15053 * C131 + C32867 * C140 + C15054 * C132 + C32860 * C141 +
            C15055 * C133 + C32847 * C142 + C15056 * C134 + C32830 * C143) *
               C15051 +
           (C15190 + C15191 + C15192 + C15193) * C15058 +
           (C15194 + C15195 + C15196 + C15197) * C32601) *
              C32554 * C32513 * C209 -
          ((C15198 + C15199 + C15200 + C15201) * C32601 +
           (C15202 + C15203 + C15204 + C15205) * C15058 +
           (C15197 + C15196 + C15195 + C15194) * C15051 +
           (C15193 + C15192 + C15191 + C15190) * C15057) *
              C32554 * C32513 * C210 +
          ((C15205 + C15204 + C15203 + C15202) * C15057 +
           (C15201 + C15200 + C15199 + C15198) * C15051 +
           (C15053 * C872 + C32867 * C881 + C15054 * C871 + C32860 * C880 +
            C15055 * C870 + C32847 * C879 + C15056 * C1244 + C32830 * C1245) *
               C15058 +
           (C15053 * C878 + C32867 * C890 + C15054 * C877 + C32860 * C889 +
            C15055 * C876 + C32847 * C888 + C15056 * C1246 + C32830 * C1247) *
               C32601) *
              C32554 * C32513 * C211) *
         C32487) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C15845 * C119 + C15839 * C126 + C15846 * C120 + C32460 * C127) *
               C15847 +
           (C15845 * C131 + C15839 * C140 + C15846 * C132 + C32460 * C141) *
               C32868 +
           (C15845 * C217 + C15839 * C232 + C15846 * C216 + C32460 * C231) *
               C15848 +
           (C15845 * C227 + C15839 * C247 + C15846 * C226 + C32460 * C246) *
               C32864 +
           (C15845 * C218 + C15839 * C233 + C15846 * C219 + C32460 * C234) *
               C15849 +
           (C15845 * C238 + C15839 * C248 + C15846 * C239 + C32460 * C249) *
               C32854 +
           (C15845 * C872 + C15839 * C881 + C15846 * C871 + C32460 * C880) *
               C15850 +
           (C15845 * C878 + C15839 * C890 + C15846 * C877 + C32460 * C889) *
               C32836) *
              C32554 * C32513 * C32499 * C110 -
          ((C15846 * C876 + C32460 * C888 + C15845 * C877 + C15839 * C889) *
               C32836 +
           (C15846 * C870 + C32460 * C879 + C15845 * C871 + C15839 * C880) *
               C15850 +
           (C15846 * C240 + C32460 * C250 + C15845 * C239 + C15839 * C249) *
               C32854 +
           (C15846 * C220 + C32460 * C235 + C15845 * C219 + C15839 * C234) *
               C15849 +
           (C15846 * C225 + C32460 * C245 + C15845 * C226 + C15839 * C246) *
               C32864 +
           (C15846 * C215 + C32460 * C230 + C15845 * C216 + C15839 * C231) *
               C15848 +
           (C15846 * C133 + C32460 * C142 + C15845 * C132 + C15839 * C141) *
               C32868 +
           (C15846 * C121 + C32460 * C128 + C15845 * C120 + C15839 * C127) *
               C15847) *
              C32554 * C32513 * C32499 * C111 +
          ((C15845 * C121 + C15839 * C128 + C15846 * C122 + C32460 * C129) *
               C15847 +
           (C15845 * C133 + C15839 * C142 + C15846 * C134 + C32460 * C143) *
               C32868 +
           (C15845 * C215 + C15839 * C230 + C15846 * C214 + C32460 * C229) *
               C15848 +
           (C15845 * C225 + C15839 * C245 + C15846 * C224 + C32460 * C244) *
               C32864 +
           (C15845 * C220 + C15839 * C235 + C15846 * C221 + C32460 * C236) *
               C15849 +
           (C15845 * C240 + C15839 * C250 + C15846 * C241 + C32460 * C251) *
               C32854 +
           (C15845 * C870 + C15839 * C879 + C15846 * C1244 + C32460 * C1245) *
               C15850 +
           (C15845 * C876 + C15839 * C888 + C15846 * C1246 + C32460 * C1247) *
               C32836) *
              C32554 * C32513 * C32499 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C15845 * C119 + C15839 * C126 + C15846 * C120 + C32460 * C127) *
               C15847 +
           (C15845 * C131 + C15839 * C140 + C15846 * C132 + C32460 * C141) *
               C32868 +
           (C15982 + C15983) * C15848 + (C15984 + C15985) * C32864 +
           C15998 * C15849 + C15999 * C32854 + C16000 * C15850 +
           C16001 * C32836) *
              C32554 * C32513 * C209 -
          ((C15994 + C15995) * C32836 + (C15996 + C15997) * C15850 +
           (C15993 + C15992) * C32854 + (C15991 + C15990) * C15849 +
           (C15989 + C15988) * C32864 + (C15987 + C15986) * C15848 +
           (C15985 + C15984) * C32868 + (C15983 + C15982) * C15847) *
              C32554 * C32513 * C210 +
          (C15998 * C15847 + C15999 * C32868 + C16000 * C15848 +
           C16001 * C32864 + (C15997 + C15996) * C15849 +
           (C15995 + C15994) * C32854 +
           (C15845 * C6200 + C15839 * C6203 + C15846 * C6394 + C32460 * C6395) *
               C15850 +
           (C15845 * C6202 + C15839 * C6206 + C15846 * C6396 + C32460 * C6397) *
               C32836) *
              C32554 * C32513 * C211) *
         C32487) /
            (p * q * std::sqrt(p + q));
    d2ee[25] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C31557 * C119 + C32776 * C126 + C31538 * C120 + C32460 * C127) *
                 C31690 +
             (C31557 * C131 + C32776 * C140 + C31538 * C132 + C32460 * C141) *
                 C32597 +
             (C7782 + C7783) * C31682 + (C7784 + C7785) * C32604 +
             C7798 * C31696 + C7799 * C17833) *
                C20880 +
            ((C8834 + C8835) * C31690 + (C8836 + C8837) * C32597 +
             C9468 * C31682 + C9469 * C32604 + C8654 * C31696 +
             C8655 * C17833) *
                C32641) *
               C32513 * C440 -
           (((C8350 + C8351) * C17833 + (C8352 + C8353) * C31696 +
             C9470 * C32604 + C9471 * C31682 + C9472 * C32597 +
             C9473 * C31690) *
                C32641 +
            ((C7793 + C7792) * C17833 + (C7791 + C7790) * C31696 +
             (C7789 + C7788) * C32604 + (C7787 + C7786) * C31682 +
             (C7785 + C7784) * C32597 + (C7783 + C7782) * C31690) *
                C20880) *
               C32513 * C441) *
              C442 +
          ((((C8054 + C8055) * C31690 + (C8056 + C8057) * C32597 +
             (C8058 + C8059) * C31682 + (C8060 + C8061) * C32604 +
             (C8062 + C8063) * C31696 + (C8064 + C8065) * C17833) *
                C20880 +
            ((C9060 + C9061) * C31690 + (C9062 + C9063) * C32597 +
             (C9064 + C9065) * C31682 + (C9066 + C9067) * C32604 +
             (C31557 * C1581 + C32776 * C1584 + C31538 * C1582 +
              C32460 * C1585) *
                 C31696 +
             (C31557 * C1587 + C32776 * C1590 + C31538 * C1588 +
              C32460 * C1591) *
                 C17833) *
                C32641) *
               C32513 * C441 -
           (((C9067 + C9066) * C17833 + (C9065 + C9064) * C31696 +
             (C9063 + C9062) * C32604 + (C9061 + C9060) * C31682 +
             (C9273 + C9272) * C32597 + (C9271 + C9270) * C31690) *
                C32641 +
            ((C8061 + C8060) * C17833 + (C8059 + C8058) * C31696 +
             (C8057 + C8056) * C32604 + (C8055 + C8054) * C31682 +
             (C31538 * C133 + C32460 * C142 + C31557 * C132 + C32776 * C141) *
                 C32597 +
             (C31538 * C121 + C32460 * C128 + C31557 * C120 + C32776 * C127) *
                 C31690) *
                C20880) *
               C32513 * C440) *
              C443)) /
        (p * q * std::sqrt(p + q));
    d2ee[26] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C31557 * C119 + C32776 * C126 + C31538 * C120 + C32460 * C127) *
                 C31690 +
             (C31557 * C131 + C32776 * C140 + C31538 * C132 + C32460 * C141) *
                 C32597 +
             (C7782 + C7783) * C31682 + (C7784 + C7785) * C32604 +
             C7798 * C31696 + C7799 * C17833) *
                C20880 +
            ((C8834 + C8835) * C31690 + (C8836 + C8837) * C32597 +
             C9468 * C31682 + C9469 * C32604 + C8654 * C31696 +
             C8655 * C17833) *
                C32641) *
               C530 -
           (((C8838 + C8839) * C17833 + (C8840 + C8841) * C31696 +
             C13492 * C32604 + C13493 * C31682 + (C8846 + C8847) * C32597 +
             (C8848 + C8849) * C31690) *
                C32641 +
            (C9470 * C17833 + C9471 * C31696 + C9472 * C32604 + C9473 * C31682 +
             (C8837 + C8836) * C32597 + (C8835 + C8834) * C31690) *
                C20880) *
               C531) *
              C440 +
          (((C9468 * C31690 + C9469 * C32597 + C8654 * C31682 + C8655 * C32604 +
             (C8353 + C8352) * C31696 + (C8351 + C8350) * C17833) *
                C20880 +
            (C12853 * C31690 + C12854 * C32597 + (C8841 + C8840) * C31682 +
             (C8839 + C8838) * C32604 +
             (C31557 * C6301 + C32776 * C6305 + C31538 * C7177 +
              C32460 * C7178) *
                 C31696 +
             (C31557 * C6306 + C32776 * C6310 + C31538 * C7179 +
              C32460 * C7180) *
                 C17833) *
                C32641) *
               C531 -
           (((C8350 + C8351) * C17833 + (C8352 + C8353) * C31696 +
             C9470 * C32604 + C9471 * C31682 + C9472 * C32597 +
             C9473 * C31690) *
                C32641 +
            ((C7793 + C7792) * C17833 + (C7791 + C7790) * C31696 +
             (C7789 + C7788) * C32604 + (C7787 + C7786) * C31682 +
             (C7785 + C7784) * C32597 + (C7783 + C7782) * C31690) *
                C20880) *
               C530) *
              C441) *
         C32487) /
        (p * q * std::sqrt(p + q));
    d2ee[27] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C31557 * C119 + C32776 * C126 + C31538 * C120 + C32460 * C127) *
                C31690 +
            (C31557 * C131 + C32776 * C140 + C31538 * C132 + C32460 * C141) *
                C32597 +
            (C7782 + C7783) * C31682 + (C7784 + C7785) * C32604 +
            C7798 * C31696 + C7799 * C17833) *
               C20880 +
           ((C8834 + C8835) * C31690 + (C8836 + C8837) * C32597 +
            C9468 * C31682 + C9469 * C32604 + C8654 * C31696 + C8655 * C17833) *
               C32641) *
              C32513 * C209 -
          (((C8350 + C8351) * C17833 + (C8352 + C8353) * C31696 +
            C9470 * C32604 + C9471 * C31682 + C9472 * C32597 + C9473 * C31690) *
               C32641 +
           ((C7793 + C7792) * C17833 + (C7791 + C7790) * C31696 +
            (C7789 + C7788) * C32604 + (C7787 + C7786) * C31682 +
            (C7785 + C7784) * C32597 + (C7783 + C7782) * C31690) *
               C20880) *
              C32513 * C210 +
          ((C7798 * C31690 + C7799 * C32597 + C7800 * C31682 + C7801 * C32604 +
            (C7797 + C7796) * C31696 + (C7795 + C7794) * C17833) *
               C20880 +
           (C8654 * C31690 + C8655 * C32597 + (C8353 + C8352) * C31682 +
            (C8351 + C8350) * C32604 +
            (C31557 * C6300 + C32776 * C6304 + C31538 * C6504 +
             C32460 * C6505) *
                C31696 +
            (C31557 * C6303 + C32776 * C6309 + C31538 * C6506 +
             C32460 * C6507) *
                C17833) *
               C32641) *
              C32513 * C211) *
         C32487) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C31557 * C119 + C32776 * C126 + C31538 * C120 + C32460 * C127) *
                C31690 +
            (C31557 * C131 + C32776 * C140 + C31538 * C132 + C32460 * C141) *
                C32597 +
            (C7782 + C7783) * C31682 + (C7784 + C7785) * C32604 +
            C7798 * C31696 + C7799 * C17833) *
               C20880 +
           ((C8834 + C8835) * C31690 + (C8836 + C8837) * C32597 +
            C9468 * C31682 + C9469 * C32604 + C8654 * C31696 + C8655 * C17833) *
               C32641) *
              C32513 * C32499 * C110 -
          (((C9067 + C9066) * C17833 + (C9065 + C9064) * C31696 +
            (C9063 + C9062) * C32604 + (C9061 + C9060) * C31682 +
            (C9273 + C9272) * C32597 + (C9271 + C9270) * C31690) *
               C32641 +
           ((C8061 + C8060) * C17833 + (C8059 + C8058) * C31696 +
            (C8057 + C8056) * C32604 + (C8055 + C8054) * C31682 +
            (C31538 * C133 + C32460 * C142 + C31557 * C132 + C32776 * C141) *
                C32597 +
            (C31538 * C121 + C32460 * C128 + C31557 * C120 + C32776 * C127) *
                C31690) *
               C20880) *
              C32513 * C32499 * C111 +
          (((C31557 * C121 + C32776 * C128 + C31538 * C122 + C32460 * C129) *
                C31690 +
            (C31557 * C133 + C32776 * C142 + C31538 * C134 + C32460 * C143) *
                C32597 +
            (C31557 * C215 + C32776 * C230 + C31538 * C214 + C32460 * C229) *
                C31682 +
            (C31557 * C225 + C32776 * C245 + C31538 * C224 + C32460 * C244) *
                C32604 +
            (C31557 * C220 + C32776 * C235 + C31538 * C221 + C32460 * C236) *
                C31696 +
            (C31557 * C240 + C32776 * C250 + C31538 * C241 + C32460 * C251) *
                C17833) *
               C20880 +
           ((C31557 * C320 + C32776 * C335 + C31538 * C319 + C32460 * C334) *
                C31690 +
            (C31557 * C330 + C32776 * C350 + C31538 * C329 + C32460 * C349) *
                C32597 +
            (C31557 * C620 + C32776 * C625 + C31538 * C621 + C32460 * C626) *
                C31682 +
            (C31557 * C630 + C32776 * C635 + C31538 * C631 + C32460 * C636) *
                C32604 +
            (C31557 * C1062 + C32776 * C1074 + C31538 * C1430 +
             C32460 * C1431) *
                C31696 +
            (C31557 * C1071 + C32776 * C1089 + C31538 * C1432 +
             C32460 * C1433) *
                C17833) *
               C32641) *
              C32513 * C32499 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C31557 * C119 + C32776 * C126 + C31538 * C120 + C32460 * C127) *
                C31690 +
            (C31557 * C131 + C32776 * C140 + C31538 * C132 + C32460 * C141) *
                C32597 +
            (C7782 + C7783) * C31682 + (C7784 + C7785) * C32604 +
            C7798 * C31696 + C7799 * C17833) *
               C20880 +
           ((C8834 + C8835) * C31690 + (C8836 + C8837) * C32597 +
            C9468 * C31682 + C9469 * C32604 + C8654 * C31696 + C8655 * C17833) *
               C32641) *
              C315 -
          (((C8838 + C8839) * C17833 + (C8840 + C8841) * C31696 +
            C13492 * C32604 + C13493 * C31682 + (C8846 + C8847) * C32597 +
            (C8848 + C8849) * C31690) *
               C32641 +
           (C9470 * C17833 + C9471 * C31696 + C9472 * C32604 + C9473 * C31682 +
            (C8837 + C8836) * C32597 + (C8835 + C8834) * C31690) *
               C20880) *
              C316 +
          ((C12851 * C31690 + C12852 * C32597 + C12853 * C31682 +
            C12854 * C32604 + (C8841 + C8840) * C31696 +
            (C8839 + C8838) * C17833) *
               C20880 +
           (C13794 * C31690 + C13795 * C32597 + (C12878 + C12877) * C31682 +
            (C12876 + C12875) * C32604 +
            (C31557 * C6966 + C32776 * C6970 + C31538 * C7351 +
             C32460 * C7352) *
                C31696 +
            (C31557 * C6969 + C32776 * C6975 + C31538 * C7353 +
             C32460 * C7354) *
                C17833) *
               C32641) *
              C317) *
         C32499 * C32487) /
            (p * q * std::sqrt(p + q));
    d2ee[28] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C31557 * C119 + C32776 * C126 + C31538 * C120 + C32460 * C127) *
                 C31690 +
             (C31557 * C131 + C32776 * C140 + C31538 * C132 + C32460 * C141) *
                 C32597 +
             (C7782 + C7783) * C31682 + (C7784 + C7785) * C32604 +
             C7798 * C31696 + C7799 * C17833) *
                C20880 +
            ((C8834 + C8835) * C31690 + (C8836 + C8837) * C32597 +
             C9468 * C31682 + C9469 * C32604 + C8654 * C31696 +
             C8655 * C17833) *
                C32641) *
               C530 -
           (((C8838 + C8839) * C17833 + (C8840 + C8841) * C31696 +
             C13492 * C32604 + C13493 * C31682 + (C8846 + C8847) * C32597 +
             (C8848 + C8849) * C31690) *
                C32641 +
            (C9470 * C17833 + C9471 * C31696 + C9472 * C32604 + C9473 * C31682 +
             (C8837 + C8836) * C32597 + (C8835 + C8834) * C31690) *
                C20880) *
               C531) *
              C32499 * C442 +
          ((((C9270 + C9271) * C31690 + (C9272 + C9273) * C32597 +
             (C9060 + C9061) * C31682 + (C9062 + C9063) * C32604 +
             (C9064 + C9065) * C31696 + (C9066 + C9067) * C17833) *
                C20880 +
            ((C13294 + C13295) * C31690 + (C13296 + C13297) * C32597 +
             (C13088 + C13089) * C31682 + (C13090 + C13091) * C32604 +
             (C31557 * C1069 + C32776 * C1084 + C31538 * C1070 +
              C32460 * C1085) *
                 C31696 +
             (C31557 * C1087 + C32776 * C1096 + C31538 * C1088 +
              C32460 * C1097) *
                 C17833) *
                C32641) *
               C531 -
           (((C9067 + C9066) * C17833 + (C9065 + C9064) * C31696 +
             (C9063 + C9062) * C32604 + (C9061 + C9060) * C31682 +
             (C9273 + C9272) * C32597 + (C9271 + C9270) * C31690) *
                C32641 +
            ((C8061 + C8060) * C17833 + (C8059 + C8058) * C31696 +
             (C8057 + C8056) * C32604 + (C8055 + C8054) * C31682 +
             (C31538 * C133 + C32460 * C142 + C31557 * C132 + C32776 * C141) *
                 C32597 +
             (C31538 * C121 + C32460 * C128 + C31557 * C120 + C32776 * C127) *
                 C31690) *
                C20880) *
               C530) *
              C32499 * C443)) /
        (p * q * std::sqrt(p + q));
    d2ee[29] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C31557 * C119 + C32776 * C126 + C31538 * C120 + C32460 * C127) *
                C31690 +
            (C31557 * C131 + C32776 * C140 + C31538 * C132 + C32460 * C141) *
                C32597 +
            (C7782 + C7783) * C31682 + (C7784 + C7785) * C32604 +
            C7798 * C31696 + C7799 * C17833) *
               C20880 +
           ((C8834 + C8835) * C31690 + (C8836 + C8837) * C32597 +
            C9468 * C31682 + C9469 * C32604 + C8654 * C31696 + C8655 * C17833) *
               C32641) *
              C32513 * C32499 * C110 -
          (((C9067 + C9066) * C17833 + (C9065 + C9064) * C31696 +
            (C9063 + C9062) * C32604 + (C9061 + C9060) * C31682 +
            (C9273 + C9272) * C32597 + (C9271 + C9270) * C31690) *
               C32641 +
           ((C8061 + C8060) * C17833 + (C8059 + C8058) * C31696 +
            (C8057 + C8056) * C32604 + (C8055 + C8054) * C31682 +
            (C31538 * C133 + C32460 * C142 + C31557 * C132 + C32776 * C141) *
                C32597 +
            (C31538 * C121 + C32460 * C128 + C31557 * C120 + C32776 * C127) *
                C31690) *
               C20880) *
              C32513 * C32499 * C111 +
          (((C31557 * C121 + C32776 * C128 + C31538 * C122 + C32460 * C129) *
                C31690 +
            (C31557 * C133 + C32776 * C142 + C31538 * C134 + C32460 * C143) *
                C32597 +
            (C31557 * C215 + C32776 * C230 + C31538 * C214 + C32460 * C229) *
                C31682 +
            (C31557 * C225 + C32776 * C245 + C31538 * C224 + C32460 * C244) *
                C32604 +
            (C31557 * C220 + C32776 * C235 + C31538 * C221 + C32460 * C236) *
                C31696 +
            (C31557 * C240 + C32776 * C250 + C31538 * C241 + C32460 * C251) *
                C17833) *
               C20880 +
           ((C31557 * C320 + C32776 * C335 + C31538 * C319 + C32460 * C334) *
                C31690 +
            (C31557 * C330 + C32776 * C350 + C31538 * C329 + C32460 * C349) *
                C32597 +
            (C31557 * C620 + C32776 * C625 + C31538 * C621 + C32460 * C626) *
                C31682 +
            (C31557 * C630 + C32776 * C635 + C31538 * C631 + C32460 * C636) *
                C32604 +
            (C31557 * C1062 + C32776 * C1074 + C31538 * C1430 +
             C32460 * C1431) *
                C31696 +
            (C31557 * C1071 + C32776 * C1089 + C31538 * C1432 +
             C32460 * C1433) *
                C17833) *
               C32641) *
              C32513 * C32499 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C31557 * C119 + C32776 * C126 + C31538 * C120 + C32460 * C127) *
                C31690 +
            (C31557 * C131 + C32776 * C140 + C31538 * C132 + C32460 * C141) *
                C32597 +
            (C7782 + C7783) * C31682 + (C7784 + C7785) * C32604 +
            C7798 * C31696 + C7799 * C17833) *
               C20880 +
           ((C8834 + C8835) * C31690 + (C8836 + C8837) * C32597 +
            C9468 * C31682 + C9469 * C32604 + C8654 * C31696 + C8655 * C17833) *
               C32641) *
              C32513 * C209 -
          (((C8350 + C8351) * C17833 + (C8352 + C8353) * C31696 +
            C9470 * C32604 + C9471 * C31682 + C9472 * C32597 + C9473 * C31690) *
               C32641 +
           ((C7793 + C7792) * C17833 + (C7791 + C7790) * C31696 +
            (C7789 + C7788) * C32604 + (C7787 + C7786) * C31682 +
            (C7785 + C7784) * C32597 + (C7783 + C7782) * C31690) *
               C20880) *
              C32513 * C210 +
          ((C7798 * C31690 + C7799 * C32597 + C7800 * C31682 + C7801 * C32604 +
            (C7797 + C7796) * C31696 + (C7795 + C7794) * C17833) *
               C20880 +
           (C8654 * C31690 + C8655 * C32597 + (C8353 + C8352) * C31682 +
            (C8351 + C8350) * C32604 +
            (C31557 * C6300 + C32776 * C6304 + C31538 * C6504 +
             C32460 * C6505) *
                C31696 +
            (C31557 * C6303 + C32776 * C6309 + C31538 * C6506 +
             C32460 * C6507) *
                C17833) *
               C32641) *
              C32513 * C211) *
         C32487) /
            (p * q * std::sqrt(p + q));
    d2ee[30] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C6132 * C119 + C32450 * C126) * C31690 +
             (C6132 * C131 + C32450 * C140) * C32597 + C6229 * C31682 +
             C6230 * C32604 + C6231 * C31696 + C6232 * C17833) *
                C32637 +
            (C31011 + C31012 + C31013 + C31014 + C31015 + C31016) * C32644 +
            C31033 * C24412) *
               C32513 * C440 -
           ((C6855 * C17833 + C6856 * C31696 + C6854 * C32604 + C6853 * C31682 +
             C6852 * C32597 + C6851 * C31690) *
                C24412 +
            (C6613 * C17833 + C6614 * C31696 + C6615 * C32604 + C6616 * C31682 +
             C6617 * C32597 + C6618 * C31690) *
                C32644 +
            (C6234 * C17833 + C6233 * C31696 + C6232 * C32604 + C6231 * C31682 +
             C6230 * C32597 + C6229 * C31690) *
                C32637) *
               C32513 * C441) *
              C442 +
          (((C6415 * C31690 + C6416 * C32597 + C6417 * C31682 + C6418 * C32604 +
             C6419 * C31696 + C6420 * C17833) *
                C32637 +
            (C7198 * C31690 + C7199 * C32597 + C7200 * C31682 + C7201 * C32604 +
             C9918 * C31696 + C9919 * C17833) *
                C32644 +
            (C7202 * C31690 + C7203 * C32597 + C7204 * C31682 + C7205 * C32604 +
             (C6132 * C7177 + C32450 * C7178) * C31696 +
             (C6132 * C7179 + C32450 * C7180) * C17833) *
                C24412) *
               C32513 * C441 -
           ((C7205 * C17833 + C7204 * C31696 + C7203 * C32604 + C7202 * C31682 +
             C7375 * C32597 + C7374 * C31690) *
                C24412 +
            (C7201 * C17833 + C7200 * C31696 + C7199 * C32604 + C7198 * C31682 +
             C7373 * C32597 + C7372 * C31690) *
                C32644 +
            (C6418 * C17833 + C6417 * C31696 + C6416 * C32604 + C6415 * C31682 +
             (C6132 * C132 + C32450 * C141) * C32597 +
             (C6132 * C120 + C32450 * C127) * C31690) *
                C32637) *
               C32513 * C440) *
              C443)) /
        (p * q * std::sqrt(p + q));
    d2ee[31] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C6132 * C119 + C32450 * C126) * C31690 +
             (C6132 * C131 + C32450 * C140) * C32597 + C6229 * C31682 +
             C6230 * C32604 + C6231 * C31696 + C6232 * C17833) *
                C32637 +
            (C31011 + C31012 + C31013 + C31014 + C31015 + C31016) * C32644 +
            C31033 * C24412) *
               C530 -
           ((C31023 + C31024 + C31025 + C31026 + C31027 + C31028) * C24412 +
            (C31022 + C31021 + C31020 + C31019 + C31018 + C31017) * C32644 +
            (C31016 + C31015 + C31014 + C31013 + C31012 + C31011) * C32637) *
               C531) *
              C440 +
          (((C31484 + C31485 + C31486 + C31487 + C31488 + C31489) * C32637 +
            (C31490 + C31491 + C31492 + C31493 + C31494 + C31495) * C32644 +
            (C7014 * C31690 + C7013 * C32597 + C7012 * C31682 + C7011 * C32604 +
             (C6132 * C7525 + C32450 * C7526) * C31696 +
             (C6132 * C7527 + C32450 * C7528) * C17833) *
                C24412) *
               C531 -
           ((C31495 + C31494 + C31493 + C31492 + C31491 + C31490) * C24412 +
            (C31489 + C31488 + C31487 + C31486 + C31485 + C31484) * C32644 +
            (C6234 * C17833 + C6233 * C31696 + C6232 * C32604 + C6231 * C31682 +
             C6230 * C32597 + C6229 * C31690) *
                C32637) *
               C530) *
              C441) *
         C32487) /
        (p * q * std::sqrt(p + q));
    d2ee[32] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C6132 * C119 + C32450 * C126) * C31690 +
            (C6132 * C131 + C32450 * C140) * C32597 + C6229 * C31682 +
            C6230 * C32604 + C6231 * C31696 + C6232 * C17833) *
               C32637 +
           (C7007 * C31690 + C7008 * C32597 + C6618 * C31682 + C6617 * C32604 +
            C6616 * C31696 + C6615 * C17833) *
               C32644 +
           (C7009 * C31690 + C7010 * C32597 + C6851 * C31682 + C6852 * C32604 +
            C6853 * C31696 + C6854 * C17833) *
               C24412) *
              C32513 * C209 -
          ((C6855 * C17833 + C6856 * C31696 + C6854 * C32604 + C6853 * C31682 +
            C6852 * C32597 + C6851 * C31690) *
               C24412 +
           (C6613 * C17833 + C6614 * C31696 + C6615 * C32604 + C6616 * C31682 +
            C6617 * C32597 + C6618 * C31690) *
               C32644 +
           (C6234 * C17833 + C6233 * C31696 + C6232 * C32604 + C6231 * C31682 +
            C6230 * C32597 + C6229 * C31690) *
               C32637) *
              C32513 * C210 +
          ((C6231 * C31690 + C6232 * C32597 + C6233 * C31682 + C6234 * C32604 +
            C6235 * C31696 + C6236 * C17833) *
               C32637 +
           (C6616 * C31690 + C6615 * C32597 + C6614 * C31682 + C6613 * C32604 +
            C6612 * C31696 + C6611 * C17833) *
               C32644 +
           (C6853 * C31690 + C6854 * C32597 + C6856 * C31682 + C6855 * C32604 +
            (C6132 * C6302 + C32450 * C6307) * C31696 +
            (C6132 * C6308 + C32450 * C6311) * C17833) *
               C24412) *
              C32513 * C211) *
         C32487) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C6132 * C119 + C32450 * C126) * C31690 +
            (C6132 * C131 + C32450 * C140) * C32597 + C6229 * C31682 +
            C6230 * C32604 + C6231 * C31696 + C6232 * C17833) *
               C32637 +
           (C7007 * C31690 + C7008 * C32597 + C6618 * C31682 + C6617 * C32604 +
            C6616 * C31696 + C6615 * C17833) *
               C32644 +
           (C7009 * C31690 + C7010 * C32597 + C6851 * C31682 + C6852 * C32604 +
            C6853 * C31696 + C6854 * C17833) *
               C24412) *
              C32513 * C32499 * C110 -
          ((C7205 * C17833 + C7204 * C31696 + C7203 * C32604 + C7202 * C31682 +
            C7375 * C32597 + C7374 * C31690) *
               C24412 +
           (C7201 * C17833 + C7200 * C31696 + C7199 * C32604 + C7198 * C31682 +
            C7373 * C32597 + C7372 * C31690) *
               C32644 +
           (C6418 * C17833 + C6417 * C31696 + C6416 * C32604 + C6415 * C31682 +
            (C6132 * C132 + C32450 * C141) * C32597 +
            (C6132 * C120 + C32450 * C127) * C31690) *
               C32637) *
              C32513 * C32499 * C111 +
          (((C6132 * C121 + C32450 * C128) * C31690 +
            (C6132 * C133 + C32450 * C142) * C32597 +
            (C6132 * C215 + C32450 * C230) * C31682 +
            (C6132 * C225 + C32450 * C245) * C32604 +
            (C6132 * C220 + C32450 * C235) * C31696 +
            (C6132 * C240 + C32450 * C250) * C17833) *
               C32637 +
           ((C6132 * C320 + C32450 * C335) * C31690 +
            (C6132 * C330 + C32450 * C350) * C32597 +
            (C6132 * C620 + C32450 * C625) * C31682 +
            (C6132 * C630 + C32450 * C635) * C32604 +
            (C6132 * C1062 + C32450 * C1074) * C31696 +
            (C6132 * C1071 + C32450 * C1089) * C17833) *
               C32644 +
           ((C6132 * C325 + C32450 * C340) * C31690 +
            (C6132 * C345 + C32450 * C355) * C32597 +
            (C6132 * C1067 + C32450 * C1079) * C31682 +
            (C6132 * C1082 + C32450 * C1094) * C32604 +
            (C6132 * C1070 + C32450 * C1085) * C31696 +
            (C6132 * C1088 + C32450 * C1097) * C17833) *
               C24412) *
              C32513 * C32499 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C6132 * C119 + C32450 * C126) * C31690 +
            (C6132 * C131 + C32450 * C140) * C32597 + C6229 * C31682 +
            C6230 * C32604 + C6231 * C31696 + C6232 * C17833) *
               C32637 +
           (C31011 + C31012 + C31013 + C31014 + C31015 + C31016) * C32644 +
           C31033 * C24412) *
              C315 -
          ((C31023 + C31024 + C31025 + C31026 + C31027 + C31028) * C24412 +
           (C31022 + C31021 + C31020 + C31019 + C31018 + C31017) * C32644 +
           (C31016 + C31015 + C31014 + C31013 + C31012 + C31011) * C32637) *
              C316 +
          (C31033 * C32637 +
           (C31028 + C31027 + C31026 + C31025 + C31024 + C31023) * C32644 +
           (C12112 * C31690 + C12113 * C32597 + C12409 * C31682 +
            C12410 * C32604 + (C6132 * C6968 + C32450 * C6973) * C31696 +
            (C6132 * C6974 + C32450 * C6977) * C17833) *
               C24412) *
              C317) *
         C32499 * C32487) /
            (p * q * std::sqrt(p + q));
    d2ee[33] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C6132 * C119 + C32450 * C126) * C31690 +
             (C6132 * C131 + C32450 * C140) * C32597 + C6229 * C31682 +
             C6230 * C32604 + C6231 * C31696 + C6232 * C17833) *
                C32637 +
            (C31011 + C31012 + C31013 + C31014 + C31015 + C31016) * C32644 +
            C31033 * C24412) *
               C530 -
           ((C31023 + C31024 + C31025 + C31026 + C31027 + C31028) * C24412 +
            (C31022 + C31021 + C31020 + C31019 + C31018 + C31017) * C32644 +
            (C31016 + C31015 + C31014 + C31013 + C31012 + C31011) * C32637) *
               C531) *
              C32499 * C442 +
          (((C31326 + C31327 + C31328 + C31329 + C31330 + C31331) * C32637 +
            (C31332 + C31333 + C31334 + C31335 + C31336 + C31337) * C32644 +
            (C12305 * C31690 + C12306 * C32597 + C14664 * C31682 +
             C14665 * C32604 + (C6132 * C7351 + C32450 * C7352) * C31696 +
             (C6132 * C7353 + C32450 * C7354) * C17833) *
                C24412) *
               C531 -
           ((C31337 + C31336 + C31335 + C31334 + C31333 + C31332) * C24412 +
            (C31331 + C31330 + C31329 + C31328 + C31327 + C31326) * C32644 +
            (C6418 * C17833 + C6417 * C31696 + C6416 * C32604 + C6415 * C31682 +
             (C6132 * C132 + C32450 * C141) * C32597 +
             (C6132 * C120 + C32450 * C127) * C31690) *
                C32637) *
               C530) *
              C32499 * C443)) /
        (p * q * std::sqrt(p + q));
    d2ee[34] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C6132 * C119 + C32450 * C126) * C31690 +
                    (C6132 * C131 + C32450 * C140) * C32597 + C6229 * C31682 +
                    C6230 * C32604 + C6231 * C31696 + C6232 * C17833) *
                       C32637 +
                   (C7007 * C31690 + C7008 * C32597 + C6618 * C31682 +
                    C6617 * C32604 + C6616 * C31696 + C6615 * C17833) *
                       C32644 +
                   (C7009 * C31690 + C7010 * C32597 + C6851 * C31682 +
                    C6852 * C32604 + C6853 * C31696 + C6854 * C17833) *
                       C24412) *
                      C32513 * C32499 * C110 -
                  ((C7205 * C17833 + C7204 * C31696 + C7203 * C32604 +
                    C7202 * C31682 + C7375 * C32597 + C7374 * C31690) *
                       C24412 +
                   (C7201 * C17833 + C7200 * C31696 + C7199 * C32604 +
                    C7198 * C31682 + C7373 * C32597 + C7372 * C31690) *
                       C32644 +
                   (C6418 * C17833 + C6417 * C31696 + C6416 * C32604 +
                    C6415 * C31682 + (C6132 * C132 + C32450 * C141) * C32597 +
                    (C6132 * C120 + C32450 * C127) * C31690) *
                       C32637) *
                      C32513 * C32499 * C111 +
                  (((C6132 * C121 + C32450 * C128) * C31690 +
                    (C6132 * C133 + C32450 * C142) * C32597 +
                    (C6132 * C215 + C32450 * C230) * C31682 +
                    (C6132 * C225 + C32450 * C245) * C32604 +
                    (C6132 * C220 + C32450 * C235) * C31696 +
                    (C6132 * C240 + C32450 * C250) * C17833) *
                       C32637 +
                   ((C6132 * C320 + C32450 * C335) * C31690 +
                    (C6132 * C330 + C32450 * C350) * C32597 +
                    (C6132 * C620 + C32450 * C625) * C31682 +
                    (C6132 * C630 + C32450 * C635) * C32604 +
                    (C6132 * C1062 + C32450 * C1074) * C31696 +
                    (C6132 * C1071 + C32450 * C1089) * C17833) *
                       C32644 +
                   ((C6132 * C325 + C32450 * C340) * C31690 +
                    (C6132 * C345 + C32450 * C355) * C32597 +
                    (C6132 * C1067 + C32450 * C1079) * C31682 +
                    (C6132 * C1082 + C32450 * C1094) * C32604 +
                    (C6132 * C1070 + C32450 * C1085) * C31696 +
                    (C6132 * C1088 + C32450 * C1097) * C17833) *
                       C24412) *
                      C32513 * C32499 * C112)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C6132 * C119 + C32450 * C126) * C31690 +
                    (C6132 * C131 + C32450 * C140) * C32597 + C6229 * C31682 +
                    C6230 * C32604 + C6231 * C31696 + C6232 * C17833) *
                       C32637 +
                   (C7007 * C31690 + C7008 * C32597 + C6618 * C31682 +
                    C6617 * C32604 + C6616 * C31696 + C6615 * C17833) *
                       C32644 +
                   (C7009 * C31690 + C7010 * C32597 + C6851 * C31682 +
                    C6852 * C32604 + C6853 * C31696 + C6854 * C17833) *
                       C24412) *
                      C32513 * C209 -
                  ((C6855 * C17833 + C6856 * C31696 + C6854 * C32604 +
                    C6853 * C31682 + C6852 * C32597 + C6851 * C31690) *
                       C24412 +
                   (C6613 * C17833 + C6614 * C31696 + C6615 * C32604 +
                    C6616 * C31682 + C6617 * C32597 + C6618 * C31690) *
                       C32644 +
                   (C6234 * C17833 + C6233 * C31696 + C6232 * C32604 +
                    C6231 * C31682 + C6230 * C32597 + C6229 * C31690) *
                       C32637) *
                      C32513 * C210 +
                  ((C6231 * C31690 + C6232 * C32597 + C6233 * C31682 +
                    C6234 * C32604 + C6235 * C31696 + C6236 * C17833) *
                       C32637 +
                   (C6616 * C31690 + C6615 * C32597 + C6614 * C31682 +
                    C6613 * C32604 + C6612 * C31696 + C6611 * C17833) *
                       C32644 +
                   (C6853 * C31690 + C6854 * C32597 + C6856 * C31682 +
                    C6855 * C32604 + (C6132 * C6302 + C32450 * C6307) * C31696 +
                    (C6132 * C6308 + C32450 * C6311) * C17833) *
                       C24412) *
                      C32513 * C211) *
                 C32487) /
                    (p * q * std::sqrt(p + q));
    d2ee[35] += (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((((C6132 * C119 + C32450 * C126) * C15847 +
                     (C6132 * C131 + C32450 * C140) * C32868 + C6229 * C15848 +
                     C6230 * C32864 + C6231 * C15849 + C6232 * C32854 +
                     C6233 * C15850 + C6234 * C32836) *
                        C20880 +
                    (C27482 + C27483 + C27484 + C27485 + C27486 + C27487 +
                     C27488 + C27489) *
                        C32641) *
                       C32513 * C440 -
                   ((C6611 * C32836 + C6612 * C15850 + C6613 * C32854 +
                     C6614 * C15849 + C6615 * C32864 + C6616 * C15848 +
                     C6617 * C32868 + C6618 * C15847) *
                        C32641 +
                    (C6236 * C32836 + C6235 * C15850 + C6234 * C32854 +
                     C6233 * C15849 + C6232 * C32864 + C6231 * C15848 +
                     C6230 * C32868 + C6229 * C15847) *
                        C20880) *
                       C32513 * C441) *
                      C442 +
                  (((C6415 * C15847 + C6416 * C32868 + C6417 * C15848 +
                     C6418 * C32864 + C6419 * C15849 + C6420 * C32854 +
                     C6421 * C15850 + C6422 * C32836) *
                        C20880 +
                    (C7198 * C15847 + C7199 * C32868 + C7200 * C15848 +
                     C7201 * C32864 + C9918 * C15849 + C9919 * C32854 +
                     (C6132 * C6504 + C32450 * C6505) * C15850 +
                     (C6132 * C6506 + C32450 * C6507) * C32836) *
                        C32641) *
                       C32513 * C441 -
                   ((C9919 * C32836 + C9918 * C15850 + C7201 * C32854 +
                     C7200 * C15849 + C7199 * C32864 + C7198 * C15848 +
                     C7373 * C32868 + C7372 * C15847) *
                        C32641 +
                    (C6420 * C32836 + C6419 * C15850 + C6418 * C32854 +
                     C6417 * C15849 + C6416 * C32864 + C6415 * C15848 +
                     (C6132 * C132 + C32450 * C141) * C32868 +
                     (C6132 * C120 + C32450 * C127) * C15847) *
                        C20880) *
                       C32513 * C440) *
                      C443)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((((C5270 * C119 + C32858 * C126 + C5271 * C120 +
                      C32845 * C127 + C5272 * C121 + C32815 * C128) *
                         C15057 +
                     (C5270 * C131 + C32858 * C140 + C5271 * C132 +
                      C32845 * C141 + C5272 * C133 + C32815 * C142) *
                         C15051 +
                     (C5423 + C5424 + C5425) * C15058 +
                     (C5426 + C5427 + C5428) * C32601) *
                        C20880 +
                    ((C10565 + C10566 + C10567) * C15057 +
                     (C10568 + C10569 + C10570) * C15051 +
                     (C6064 + C6063 + C6062) * C15058 +
                     (C6061 + C6060 + C6059) * C32601) *
                        C32641) *
                       C32513 * C440 -
                   (((C6053 + C6054 + C6055) * C32601 +
                     (C6056 + C6057 + C6058) * C15058 +
                     (C6059 + C6060 + C6061) * C15051 +
                     (C6062 + C6063 + C6064) * C15057) *
                        C32641 +
                    ((C5434 + C5433 + C5432) * C32601 +
                     (C5431 + C5430 + C5429) * C15058 +
                     (C5428 + C5427 + C5426) * C15051 +
                     (C5425 + C5424 + C5423) * C15057) *
                        C20880) *
                       C32513 * C441) *
                      C442 +
                  ((((C5725 + C5726 + C5727) * C15057 +
                     (C5728 + C5729 + C5730) * C15051 +
                     (C5731 + C5732 + C5733) * C15058 +
                     (C5734 + C5735 + C5736) * C32601) *
                        C20880 +
                    ((C26786 + C26787 + C26788) * C15057 +
                     (C26789 + C26790 + C26791) * C15051 +
                     (C5270 * C1063 + C32858 * C1075 + C5271 * C1062 +
                      C32845 * C1074 + C5272 * C1430 + C32815 * C1431) *
                         C15058 +
                     (C5270 * C1072 + C32858 * C1090 + C5271 * C1071 +
                      C32845 * C1089 + C5272 * C1432 + C32815 * C1433) *
                         C32601) *
                        C32641) *
                       C32513 * C441 -
                   (((C26791 + C26790 + C26789) * C32601 +
                     (C26788 + C26787 + C26786) * C15058 +
                     (C10911 + C10910 + C10909) * C15051 +
                     (C10908 + C10907 + C10906) * C15057) *
                        C32641 +
                    ((C5730 + C5729 + C5728) * C32601 +
                     (C5727 + C5726 + C5725) * C15058 +
                     (C5272 * C134 + C32815 * C143 + C5271 * C133 +
                      C32845 * C142 + C5270 * C132 + C32858 * C141) *
                         C15051 +
                     (C5272 * C122 + C32815 * C129 + C5271 * C121 +
                      C32845 * C128 + C5270 * C120 + C32858 * C127) *
                         C15057) *
                        C20880) *
                       C32513 * C440) *
                      C443)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C6132 * C119 + C32450 * C126) * C15057 +
                     (C6132 * C131 + C32450 * C140) * C15051 + C6229 * C15058 +
                     C6230 * C32601) *
                        C32869 +
                    (C28198 + C28199 + C28200 + C28201) * C32866 +
                    C28218 * C32857 + C28219 * C32842) *
                       C32513 * C440 -
                   ((C7011 * C32601 + C7012 * C15058 + C7013 * C15051 +
                     C7014 * C15057) *
                        C32842 +
                    (C6854 * C32601 + C6853 * C15058 + C6852 * C15051 +
                     C6851 * C15057) *
                        C32857 +
                    (C6615 * C32601 + C6616 * C15058 + C6617 * C15051 +
                     C6618 * C15057) *
                        C32866 +
                    (C6232 * C32601 + C6231 * C15058 + C6230 * C15051 +
                     C6229 * C15057) *
                        C32869) *
                       C32513 * C441) *
                      C442 +
                  (((C6415 * C15057 + C6416 * C15051 + C6417 * C15058 +
                     C6418 * C32601) *
                        C32869 +
                    (C7198 * C15057 + C7199 * C15051 + C7200 * C15058 +
                     C7201 * C32601) *
                        C32866 +
                    (C7202 * C15057 + C7203 * C15051 + C7204 * C15058 +
                     C7205 * C32601) *
                        C32857 +
                    (C14664 * C15057 + C14665 * C15051 +
                     (C6132 * C7351 + C32450 * C7352) * C15058 +
                     (C6132 * C7353 + C32450 * C7354) * C32601) *
                        C32842) *
                       C32513 * C441 -
                   ((C14665 * C32601 + C14664 * C15058 + C12306 * C15051 +
                     C12305 * C15057) *
                        C32842 +
                    (C7203 * C32601 + C7202 * C15058 + C7375 * C15051 +
                     C7374 * C15057) *
                        C32857 +
                    (C7199 * C32601 + C7198 * C15058 + C7373 * C15051 +
                     C7372 * C15057) *
                        C32866 +
                    (C6416 * C32601 + C6415 * C15058 +
                     (C6132 * C132 + C32450 * C141) * C15051 +
                     (C6132 * C120 + C32450 * C127) * C15057) *
                        C32869) *
                       C32513 * C440) *
                      C443)) /
                    (p * q * std::sqrt(p + q));
    d2ee[36] += (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((((C6132 * C119 + C32450 * C126) * C15847 +
                     (C6132 * C131 + C32450 * C140) * C32868 + C6229 * C15848 +
                     C6230 * C32864 + C6231 * C15849 + C6232 * C32854 +
                     C6233 * C15850 + C6234 * C32836) *
                        C20880 +
                    (C27482 + C27483 + C27484 + C27485 + C27486 + C27487 +
                     C27488 + C27489) *
                        C32641) *
                       C530 -
                   ((C27490 + C27491 + C27492 + C27493 + C27494 + C27495 +
                     C27496 + C27497) *
                        C32641 +
                    (C27489 + C27488 + C27487 + C27486 + C27485 + C27484 +
                     C27483 + C27482) *
                        C20880) *
                       C531) *
                      C440 +
                  (((C27896 + C27897 + C27898 + C27899 + C27900 + C27901 +
                     C27902 + C27903) *
                        C20880 +
                    (C6851 * C15847 + C6852 * C32868 + C6853 * C15848 +
                     C6854 * C32864 + C6856 * C15849 + C6855 * C32854 +
                     (C6132 * C6302 + C32450 * C6307) * C15850 +
                     (C6132 * C6308 + C32450 * C6311) * C32836) *
                        C32641) *
                       C531 -
                   ((C27903 + C27902 + C27901 + C27900 + C27899 + C27898 +
                     C27897 + C27896) *
                        C32641 +
                    (C6236 * C32836 + C6235 * C15850 + C6234 * C32854 +
                     C6233 * C15849 + C6232 * C32864 + C6231 * C15848 +
                     C6230 * C32868 + C6229 * C15847) *
                        C20880) *
                       C530) *
                      C441) *
                 C32487) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((((C5270 * C119 + C32858 * C126 + C5271 * C120 +
                      C32845 * C127 + C5272 * C121 + C32815 * C128) *
                         C15057 +
                     (C5270 * C131 + C32858 * C140 + C5271 * C132 +
                      C32845 * C141 + C5272 * C133 + C32815 * C142) *
                         C15051 +
                     (C5423 + C5424 + C5425) * C15058 +
                     (C5426 + C5427 + C5428) * C32601) *
                        C20880 +
                    ((C10565 + C10566 + C10567) * C15057 +
                     (C10568 + C10569 + C10570) * C15051 + C27184 * C15058 +
                     C27185 * C32601) *
                        C32641) *
                       C530 -
                   (((C11081 + C11080 + C11079) * C32601 +
                     (C11078 + C11077 + C11076) * C15058 +
                     (C10576 + C10575 + C10574) * C15051 +
                     (C10573 + C10572 + C10571) * C15057) *
                        C32641 +
                    (C27186 * C32601 + C27187 * C15058 +
                     (C10570 + C10569 + C10568) * C15051 +
                     (C10567 + C10566 + C10565) * C15057) *
                        C20880) *
                       C531) *
                      C440 +
                  (((C27184 * C15057 + C27185 * C15051 +
                     (C6058 + C6057 + C6056) * C15058 +
                     (C6055 + C6054 + C6053) * C32601) *
                        C20880 +
                    ((C11076 + C11077 + C11078) * C15057 +
                     (C11079 + C11080 + C11081) * C15051 +
                     (C5270 * C1068 + C32858 * C1083 + C5271 * C1069 +
                      C32845 * C1084 + C5272 * C1070 + C32815 * C1085) *
                         C15058 +
                     (C5270 * C1086 + C32858 * C1095 + C5271 * C1087 +
                      C32845 * C1096 + C5272 * C1088 + C32815 * C1097) *
                         C32601) *
                        C32641) *
                       C531 -
                   (((C6053 + C6054 + C6055) * C32601 +
                     (C6056 + C6057 + C6058) * C15058 + C27186 * C15051 +
                     C27187 * C15057) *
                        C32641 +
                    ((C5434 + C5433 + C5432) * C32601 +
                     (C5431 + C5430 + C5429) * C15058 +
                     (C5428 + C5427 + C5426) * C15051 +
                     (C5425 + C5424 + C5423) * C15057) *
                        C20880) *
                       C530) *
                      C441) *
                 C32487) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C6132 * C119 + C32450 * C126) * C15057 +
                     (C6132 * C131 + C32450 * C140) * C15051 + C6229 * C15058 +
                     C6230 * C32601) *
                        C32869 +
                    (C28198 + C28199 + C28200 + C28201) * C32866 +
                    C28218 * C32857 + C28219 * C32842) *
                       C530 -
                   ((C28210 + C28211 + C28212 + C28213) * C32842 +
                    (C28209 + C28208 + C28207 + C28206) * C32857 +
                    (C28205 + C28204 + C28203 + C28202) * C32866 +
                    (C28201 + C28200 + C28199 + C28198) * C32869) *
                       C531) *
                      C440 +
                  (((C28622 + C28623 + C28624 + C28625) * C32869 +
                    (C28626 + C28627 + C28628 + C28629) * C32866 +
                    (C28630 + C28631 + C28632 + C28633) * C32857 +
                    (C12409 * C15057 + C12410 * C15051 +
                     (C6132 * C6968 + C32450 * C6973) * C15058 +
                     (C6132 * C6974 + C32450 * C6977) * C32601) *
                        C32842) *
                       C531 -
                   ((C28633 + C28632 + C28631 + C28630) * C32842 +
                    (C28629 + C28628 + C28627 + C28626) * C32857 +
                    (C28625 + C28624 + C28623 + C28622) * C32866 +
                    (C6232 * C32601 + C6231 * C15058 + C6230 * C15051 +
                     C6229 * C15057) *
                        C32869) *
                       C530) *
                      C441) *
                 C32487) /
                    (p * q * std::sqrt(p + q));
    d2ee[37] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C5270 * C119 + C32858 * C126 + C5271 * C120 + C32845 * C127 +
                 C5272 * C121 + C32815 * C128) *
                    C15057 +
                (C5270 * C131 + C32858 * C140 + C5271 * C132 + C32845 * C141 +
                 C5272 * C133 + C32815 * C142) *
                    C15051 +
                (C5423 + C5424 + C5425) * C15058 +
                (C5426 + C5427 + C5428) * C32601) *
                   C20880 +
               ((C10565 + C10566 + C10567) * C15057 +
                (C10568 + C10569 + C10570) * C15051 +
                (C6064 + C6063 + C6062) * C15058 +
                (C6061 + C6060 + C6059) * C32601) *
                   C32641) *
                  C32513 * C32499 * C110 -
              (((C5272 * C631 + C32815 * C636 + C5271 * C630 + C32845 * C635 +
                 C5270 * C629 + C32858 * C634) *
                    C32601 +
                (C5272 * C621 + C32815 * C626 + C5271 * C620 + C32845 * C625 +
                 C5270 * C619 + C32858 * C624) *
                    C15058 +
                (C10911 + C10910 + C10909) * C15051 +
                (C10908 + C10907 + C10906) * C15057) *
                   C32641 +
               ((C5730 + C5729 + C5728) * C32601 +
                (C5727 + C5726 + C5725) * C15058 +
                (C5272 * C134 + C32815 * C143 + C5271 * C133 + C32845 * C142 +
                 C5270 * C132 + C32858 * C141) *
                    C15051 +
                (C5272 * C122 + C32815 * C129 + C5271 * C121 + C32845 * C128 +
                 C5270 * C120 + C32858 * C127) *
                    C15057) *
                   C20880) *
                  C32513 * C32499 * C111 +
              (((C5270 * C121 + C32858 * C128 + C5271 * C122 + C32845 * C129 +
                 C5272 * C123 + C32815 * C130) *
                    C15057 +
                (C5270 * C133 + C32858 * C142 + C5271 * C134 + C32845 * C143 +
                 C5272 * C135 + C32815 * C144) *
                    C15051 +
                (C5270 * C215 + C32858 * C230 + C5271 * C214 + C32845 * C229 +
                 C5272 * C213 + C32815 * C228) *
                    C15058 +
                (C5270 * C225 + C32858 * C245 + C5271 * C224 + C32845 * C244 +
                 C5272 * C223 + C32815 * C243) *
                    C32601) *
                   C20880 +
               ((C5270 * C320 + C32858 * C335 + C5271 * C319 + C32845 * C334 +
                 C5272 * C318 + C32815 * C333) *
                    C15057 +
                (C5270 * C330 + C32858 * C350 + C5271 * C329 + C32845 * C349 +
                 C5272 * C328 + C32815 * C348) *
                    C15051 +
                (C5270 * C620 + C32858 * C625 + C5271 * C621 + C32845 * C626 +
                 C5272 * C622 + C32815 * C627) *
                    C15058 +
                (C5270 * C630 + C32858 * C635 + C5271 * C631 + C32845 * C636 +
                 C5272 * C632 + C32815 * C637) *
                    C32601) *
                   C32641) *
                  C32513 * C32499 * C112) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C5270 * C119 + C32858 * C126 + C5271 * C120 + C32845 * C127 +
                 C5272 * C121 + C32815 * C128) *
                    C15057 +
                (C5270 * C131 + C32858 * C140 + C5271 * C132 + C32845 * C141 +
                 C5272 * C133 + C32815 * C142) *
                    C15051 +
                (C5423 + C5424 + C5425) * C15058 +
                (C5426 + C5427 + C5428) * C32601) *
                   C20880 +
               ((C10565 + C10566 + C10567) * C15057 +
                (C10568 + C10569 + C10570) * C15051 +
                (C6064 + C6063 + C6062) * C15058 +
                (C6061 + C6060 + C6059) * C32601) *
                   C32641) *
                  C32513 * C209 -
              (((C6053 + C6054 + C6055) * C32601 +
                (C6056 + C6057 + C6058) * C15058 +
                (C6059 + C6060 + C6061) * C15051 +
                (C6062 + C6063 + C6064) * C15057) *
                   C32641 +
               ((C5434 + C5433 + C5432) * C32601 +
                (C5431 + C5430 + C5429) * C15058 +
                (C5428 + C5427 + C5426) * C15051 +
                (C5425 + C5424 + C5423) * C15057) *
                   C20880) *
                  C32513 * C210 +
              ((C5443 * C15057 + C5444 * C15051 +
                (C5440 + C5439 + C5438) * C15058 +
                (C5437 + C5436 + C5435) * C32601) *
                   C20880 +
               ((C6058 + C6057 + C6056) * C15057 +
                (C6055 + C6054 + C6053) * C15051 +
                (C5270 * C1580 + C32858 * C1583 + C5271 * C1581 +
                 C32845 * C1584 + C5272 * C1582 + C32815 * C1585) *
                    C15058 +
                (C5270 * C1586 + C32858 * C1589 + C5271 * C1587 +
                 C32845 * C1590 + C5272 * C1588 + C32815 * C1591) *
                    C32601) *
                   C32641) *
                  C32513 * C211) *
             C32487) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C5270 * C119 + C32858 * C126 + C5271 * C120 + C32845 * C127 +
             C5272 * C121 + C32815 * C128) *
                C15057 +
            (C5270 * C131 + C32858 * C140 + C5271 * C132 + C32845 * C141 +
             C5272 * C133 + C32815 * C142) *
                C15051 +
            (C5423 + C5424 + C5425) * C15058 +
            (C5426 + C5427 + C5428) * C32601) *
               C20880 +
           ((C10565 + C10566 + C10567) * C15057 +
            (C10568 + C10569 + C10570) * C15051 +
            (C6064 + C6063 + C6062) * C15058 +
            (C6061 + C6060 + C6059) * C32601) *
               C32641) *
              C315 -
          (((C11081 + C11080 + C11079) * C32601 +
            (C11078 + C11077 + C11076) * C15058 +
            (C10576 + C10575 + C10574) * C15051 +
            (C10573 + C10572 + C10571) * C15057) *
               C32641 +
           ((C6059 + C6060 + C6061) * C32601 +
            (C6062 + C6063 + C6064) * C15058 +
            (C10570 + C10569 + C10568) * C15051 +
            (C10567 + C10566 + C10565) * C15057) *
               C20880) *
              C316 +
          ((C10585 * C15057 + C10586 * C15051 +
            (C11076 + C11077 + C11078) * C15058 +
            (C11079 + C11080 + C11081) * C32601) *
               C20880 +
           ((C10582 + C10581 + C10580) * C15057 +
            (C10579 + C10578 + C10577) * C15051 +
            (C5270 * C2528 + C32858 * C2531 + C5271 * C2529 + C32845 * C2532 +
             C5272 * C2530 + C32815 * C2533) *
                C15058 +
            (C5270 * C2534 + C32858 * C2537 + C5271 * C2535 + C32845 * C2538 +
             C5272 * C2536 + C32815 * C2539) *
                C32601) *
               C32641) *
              C317) *
         C32499 * C32487) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C6132 * C119 + C32450 * C126) * C15847 +
            (C6132 * C131 + C32450 * C140) * C32868 + C6229 * C15848 +
            C6230 * C32864 + C6231 * C15849 + C6232 * C32854 + C6233 * C15850 +
            C6234 * C32836) *
               C20880 +
           (C7007 * C15847 + C7008 * C32868 + C6618 * C15848 + C6617 * C32864 +
            C6616 * C15849 + C6615 * C32854 + C6614 * C15850 + C6613 * C32836) *
               C32641) *
              C32513 * C32499 * C110 -
          ((C9919 * C32836 + C9918 * C15850 + C7201 * C32854 + C7200 * C15849 +
            C7199 * C32864 + C7198 * C15848 + C7373 * C32868 + C7372 * C15847) *
               C32641 +
           (C6420 * C32836 + C6419 * C15850 + C6418 * C32854 + C6417 * C15849 +
            C6416 * C32864 + C6415 * C15848 +
            (C6132 * C132 + C32450 * C141) * C32868 +
            (C6132 * C120 + C32450 * C127) * C15847) *
               C20880) *
              C32513 * C32499 * C111 +
          (((C6132 * C121 + C32450 * C128) * C15847 +
            (C6132 * C133 + C32450 * C142) * C32868 +
            (C6132 * C215 + C32450 * C230) * C15848 +
            (C6132 * C225 + C32450 * C245) * C32864 +
            (C6132 * C220 + C32450 * C235) * C15849 +
            (C6132 * C240 + C32450 * C250) * C32854 +
            (C6132 * C870 + C32450 * C879) * C15850 +
            (C6132 * C876 + C32450 * C888) * C32836) *
               C20880 +
           ((C6132 * C320 + C32450 * C335) * C15847 +
            (C6132 * C330 + C32450 * C350) * C32868 +
            (C6132 * C620 + C32450 * C625) * C15848 +
            (C6132 * C630 + C32450 * C635) * C32864 +
            (C6132 * C1062 + C32450 * C1074) * C15849 +
            (C6132 * C1071 + C32450 * C1089) * C32854 +
            (C6132 * C1582 + C32450 * C1585) * C15850 +
            (C6132 * C1588 + C32450 * C1591) * C32836) *
               C32641) *
              C32513 * C32499 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C6132 * C119 + C32450 * C126) * C15847 +
            (C6132 * C131 + C32450 * C140) * C32868 + C6229 * C15848 +
            C6230 * C32864 + C6231 * C15849 + C6232 * C32854 + C6233 * C15850 +
            C6234 * C32836) *
               C20880 +
           (C7007 * C15847 + C7008 * C32868 + C6618 * C15848 + C6617 * C32864 +
            C6616 * C15849 + C6615 * C32854 + C6614 * C15850 + C6613 * C32836) *
               C32641) *
              C32513 * C209 -
          ((C6611 * C32836 + C6612 * C15850 + C6613 * C32854 + C6614 * C15849 +
            C6615 * C32864 + C6616 * C15848 + C6617 * C32868 + C6618 * C15847) *
               C32641 +
           (C6236 * C32836 + C6235 * C15850 + C6234 * C32854 + C6233 * C15849 +
            C6232 * C32864 + C6231 * C15848 + C6230 * C32868 + C6229 * C15847) *
               C20880) *
              C32513 * C210 +
          ((C6231 * C15847 + C6232 * C32868 + C6233 * C15848 + C6234 * C32864 +
            C6235 * C15849 + C6236 * C32854 + C6238 * C15850 + C6237 * C32836) *
               C20880 +
           (C6616 * C15847 + C6615 * C32868 + C6614 * C15848 + C6613 * C32864 +
            C6612 * C15849 + C6611 * C32854 +
            (C6132 * C6590 + C32450 * C6591) * C15850 +
            (C6132 * C6592 + C32450 * C6593) * C32836) *
               C32641) *
              C32513 * C211) *
         C32487) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C6132 * C119 + C32450 * C126) * C15847 +
            (C6132 * C131 + C32450 * C140) * C32868 + C6229 * C15848 +
            C6230 * C32864 + C6231 * C15849 + C6232 * C32854 + C6233 * C15850 +
            C6234 * C32836) *
               C20880 +
           (C27482 + C27483 + C27484 + C27485 + C27486 + C27487 + C27488 +
            C27489) *
               C32641) *
              C315 -
          ((C27490 + C27491 + C27492 + C27493 + C27494 + C27495 + C27496 +
            C27497) *
               C32641 +
           (C27489 + C27488 + C27487 + C27486 + C27485 + C27484 + C27483 +
            C27482) *
               C20880) *
              C316 +
          ((C27497 + C27496 + C27495 + C27494 + C27493 + C27492 + C27491 +
            C27490) *
               C20880 +
           (C7016 * C15847 + C7015 * C32868 + C7014 * C15848 + C7013 * C32864 +
            C7012 * C15849 + C7011 * C32854 +
            (C6132 * C7525 + C32450 * C7526) * C15850 +
            (C6132 * C7527 + C32450 * C7528) * C32836) *
               C32641) *
              C317) *
         C32499 * C32487) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C6132 * C119 + C32450 * C126) * C15057 +
            (C6132 * C131 + C32450 * C140) * C15051 + C6229 * C15058 +
            C6230 * C32601) *
               C32869 +
           (C7007 * C15057 + C7008 * C15051 + C6618 * C15058 + C6617 * C32601) *
               C32866 +
           (C7009 * C15057 + C7010 * C15051 + C6851 * C15058 + C6852 * C32601) *
               C32857 +
           (C7016 * C15057 + C7015 * C15051 + C7014 * C15058 + C7013 * C32601) *
               C32842) *
              C32513 * C32499 * C110 -
          ((C14665 * C32601 + C14664 * C15058 + C12306 * C15051 +
            C12305 * C15057) *
               C32842 +
           (C7203 * C32601 + C7202 * C15058 + C7375 * C15051 + C7374 * C15057) *
               C32857 +
           (C7199 * C32601 + C7198 * C15058 + C7373 * C15051 + C7372 * C15057) *
               C32866 +
           (C6416 * C32601 + C6415 * C15058 +
            (C6132 * C132 + C32450 * C141) * C15051 +
            (C6132 * C120 + C32450 * C127) * C15057) *
               C32869) *
              C32513 * C32499 * C111 +
          (((C6132 * C121 + C32450 * C128) * C15057 +
            (C6132 * C133 + C32450 * C142) * C15051 +
            (C6132 * C215 + C32450 * C230) * C15058 +
            (C6132 * C225 + C32450 * C245) * C32601) *
               C32869 +
           ((C6132 * C320 + C32450 * C335) * C15057 +
            (C6132 * C330 + C32450 * C350) * C15051 +
            (C6132 * C620 + C32450 * C625) * C15058 +
            (C6132 * C630 + C32450 * C635) * C32601) *
               C32866 +
           ((C6132 * C325 + C32450 * C340) * C15057 +
            (C6132 * C345 + C32450 * C355) * C15051 +
            (C6132 * C1067 + C32450 * C1079) * C15058 +
            (C6132 * C1082 + C32450 * C1094) * C32601) *
               C32857 +
           ((C6132 * C1961 + C32450 * C1970) * C15057 +
            (C6132 * C1967 + C32450 * C1979) * C15051 +
            (C6132 * C2530 + C32450 * C2533) * C15058 +
            (C6132 * C2536 + C32450 * C2539) * C32601) *
               C32842) *
              C32513 * C32499 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C6132 * C119 + C32450 * C126) * C15057 +
            (C6132 * C131 + C32450 * C140) * C15051 + C6229 * C15058 +
            C6230 * C32601) *
               C32869 +
           (C7007 * C15057 + C7008 * C15051 + C6618 * C15058 + C6617 * C32601) *
               C32866 +
           (C7009 * C15057 + C7010 * C15051 + C6851 * C15058 + C6852 * C32601) *
               C32857 +
           (C7016 * C15057 + C7015 * C15051 + C7014 * C15058 + C7013 * C32601) *
               C32842) *
              C32513 * C209 -
          ((C7011 * C32601 + C7012 * C15058 + C7013 * C15051 + C7014 * C15057) *
               C32842 +
           (C6854 * C32601 + C6853 * C15058 + C6852 * C15051 + C6851 * C15057) *
               C32857 +
           (C6615 * C32601 + C6616 * C15058 + C6617 * C15051 + C6618 * C15057) *
               C32866 +
           (C6232 * C32601 + C6231 * C15058 + C6230 * C15051 + C6229 * C15057) *
               C32869) *
              C32513 * C210 +
          ((C6231 * C15057 + C6232 * C15051 + C6233 * C15058 + C6234 * C32601) *
               C32869 +
           (C6616 * C15057 + C6615 * C15051 + C6614 * C15058 + C6613 * C32601) *
               C32866 +
           (C6853 * C15057 + C6854 * C15051 + C6856 * C15058 + C6855 * C32601) *
               C32857 +
           (C7012 * C15057 + C7011 * C15051 +
            (C6132 * C7525 + C32450 * C7526) * C15058 +
            (C6132 * C7527 + C32450 * C7528) * C32601) *
               C32842) *
              C32513 * C211) *
         C32487) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C6132 * C119 + C32450 * C126) * C15057 +
            (C6132 * C131 + C32450 * C140) * C15051 + C6229 * C15058 +
            C6230 * C32601) *
               C32869 +
           (C28198 + C28199 + C28200 + C28201) * C32866 + C28218 * C32857 +
           C28219 * C32842) *
              C315 -
          ((C28210 + C28211 + C28212 + C28213) * C32842 +
           (C28209 + C28208 + C28207 + C28206) * C32857 +
           (C28205 + C28204 + C28203 + C28202) * C32866 +
           (C28201 + C28200 + C28199 + C28198) * C32869) *
              C316 +
          (C28218 * C32869 + C28219 * C32866 +
           (C28213 + C28212 + C28211 + C28210) * C32857 +
           (C12115 * C15057 + C12114 * C15051 +
            (C6132 * C12394 + C32450 * C12395) * C15058 +
            (C6132 * C12396 + C32450 * C12397) * C32601) *
               C32842) *
              C317) *
         C32499 * C32487) /
            (p * q * std::sqrt(p + q));
    d2ee[38] += (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((((C6132 * C119 + C32450 * C126) * C15847 +
                     (C6132 * C131 + C32450 * C140) * C32868 + C6229 * C15848 +
                     C6230 * C32864 + C6231 * C15849 + C6232 * C32854 +
                     C6233 * C15850 + C6234 * C32836) *
                        C20880 +
                    (C27482 + C27483 + C27484 + C27485 + C27486 + C27487 +
                     C27488 + C27489) *
                        C32641) *
                       C530 -
                   ((C27490 + C27491 + C27492 + C27493 + C27494 + C27495 +
                     C27496 + C27497) *
                        C32641 +
                    (C27489 + C27488 + C27487 + C27486 + C27485 + C27484 +
                     C27483 + C27482) *
                        C20880) *
                       C531) *
                      C32499 * C442 +
                  (((C27758 + C27759 + C27760 + C27761 + C27762 + C27763 +
                     C27764 + C27765) *
                        C20880 +
                    (C7374 * C15847 + C7375 * C32868 + C7202 * C15848 +
                     C7203 * C32864 + C7204 * C15849 + C7205 * C32854 +
                     (C6132 * C7177 + C32450 * C7178) * C15850 +
                     (C6132 * C7179 + C32450 * C7180) * C32836) *
                        C32641) *
                       C531 -
                   ((C27765 + C27764 + C27763 + C27762 + C27761 + C27760 +
                     C27759 + C27758) *
                        C32641 +
                    (C6420 * C32836 + C6419 * C15850 + C6418 * C32854 +
                     C6417 * C15849 + C6416 * C32864 + C6415 * C15848 +
                     (C6132 * C132 + C32450 * C141) * C32868 +
                     (C6132 * C120 + C32450 * C127) * C15847) *
                        C20880) *
                       C530) *
                      C32499 * C443)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((((C5270 * C119 + C32858 * C126 + C5271 * C120 +
                      C32845 * C127 + C5272 * C121 + C32815 * C128) *
                         C15057 +
                     (C5270 * C131 + C32858 * C140 + C5271 * C132 +
                      C32845 * C141 + C5272 * C133 + C32815 * C142) *
                         C15051 +
                     (C5423 + C5424 + C5425) * C15058 +
                     (C5426 + C5427 + C5428) * C32601) *
                        C20880 +
                    ((C10565 + C10566 + C10567) * C15057 +
                     (C10568 + C10569 + C10570) * C15051 +
                     (C6064 + C6063 + C6062) * C15058 +
                     (C6061 + C6060 + C6059) * C32601) *
                        C32641) *
                       C530 -
                   (((C11081 + C11080 + C11079) * C32601 +
                     (C11078 + C11077 + C11076) * C15058 +
                     (C10576 + C10575 + C10574) * C15051 +
                     (C10573 + C10572 + C10571) * C15057) *
                        C32641 +
                    ((C6059 + C6060 + C6061) * C32601 +
                     (C6062 + C6063 + C6064) * C15058 +
                     (C10570 + C10569 + C10568) * C15051 +
                     (C10567 + C10566 + C10565) * C15057) *
                        C20880) *
                       C531) *
                      C32499 * C442 +
                  ((((C10906 + C10907 + C10908) * C15057 +
                     (C10909 + C10910 + C10911) * C15051 +
                     (C26786 + C26787 + C26788) * C15058 +
                     (C26789 + C26790 + C26791) * C32601) *
                        C20880 +
                    ((C10912 + C10913 + C10914) * C15057 +
                     (C10915 + C10916 + C10917) * C15051 +
                     (C5270 * C1066 + C32858 * C1078 + C5271 * C1067 +
                      C32845 * C1079 + C5272 * C2192 + C32815 * C2193) *
                         C15058 +
                     (C5270 * C1081 + C32858 * C1093 + C5271 * C1082 +
                      C32845 * C1094 + C5272 * C2194 + C32815 * C2195) *
                         C32601) *
                        C32641) *
                       C531 -
                   (((C26791 + C26790 + C26789) * C32601 +
                     (C26788 + C26787 + C26786) * C15058 +
                     (C10911 + C10910 + C10909) * C15051 +
                     (C10908 + C10907 + C10906) * C15057) *
                        C32641 +
                    ((C5730 + C5729 + C5728) * C32601 +
                     (C5727 + C5726 + C5725) * C15058 +
                     (C5272 * C134 + C32815 * C143 + C5271 * C133 +
                      C32845 * C142 + C5270 * C132 + C32858 * C141) *
                         C15051 +
                     (C5272 * C122 + C32815 * C129 + C5271 * C121 +
                      C32845 * C128 + C5270 * C120 + C32858 * C127) *
                         C15057) *
                        C20880) *
                       C530) *
                      C32499 * C443)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C6132 * C119 + C32450 * C126) * C15057 +
                     (C6132 * C131 + C32450 * C140) * C15051 + C6229 * C15058 +
                     C6230 * C32601) *
                        C32869 +
                    (C28198 + C28199 + C28200 + C28201) * C32866 +
                    C28218 * C32857 + C28219 * C32842) *
                       C530 -
                   ((C28210 + C28211 + C28212 + C28213) * C32842 +
                    (C28209 + C28208 + C28207 + C28206) * C32857 +
                    (C28205 + C28204 + C28203 + C28202) * C32866 +
                    (C28201 + C28200 + C28199 + C28198) * C32869) *
                       C531) *
                      C32499 * C442 +
                  (((C28480 + C28481 + C28482 + C28483) * C32869 +
                    (C28484 + C28485 + C28486 + C28487) * C32866 +
                    (C28488 + C28489 + C28490 + C28491) * C32857 +
                    (C12307 * C15057 + C12308 * C15051 +
                     (C6132 * C12202 + C32450 * C12203) * C15058 +
                     (C6132 * C12204 + C32450 * C12205) * C32601) *
                        C32842) *
                       C531 -
                   ((C28491 + C28490 + C28489 + C28488) * C32842 +
                    (C28487 + C28486 + C28485 + C28484) * C32857 +
                    (C28483 + C28482 + C28481 + C28480) * C32866 +
                    (C6416 * C32601 + C6415 * C15058 +
                     (C6132 * C132 + C32450 * C141) * C15051 +
                     (C6132 * C120 + C32450 * C127) * C15057) *
                        C32869) *
                       C530) *
                      C32499 * C443)) /
                    (p * q * std::sqrt(p + q));
    d2ee[39] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C5270 * C119 + C32858 * C126 + C5271 * C120 + C32845 * C127 +
             C5272 * C121 + C32815 * C128) *
                C15057 +
            (C5270 * C131 + C32858 * C140 + C5271 * C132 + C32845 * C141 +
             C5272 * C133 + C32815 * C142) *
                C15051 +
            (C5423 + C5424 + C5425) * C15058 +
            (C5426 + C5427 + C5428) * C32601) *
               C20880 +
           ((C10565 + C10566 + C10567) * C15057 +
            (C10568 + C10569 + C10570) * C15051 +
            (C6064 + C6063 + C6062) * C15058 +
            (C6061 + C6060 + C6059) * C32601) *
               C32641) *
              C32513 * C209 -
          (((C6053 + C6054 + C6055) * C32601 +
            (C6056 + C6057 + C6058) * C15058 +
            (C6059 + C6060 + C6061) * C15051 +
            (C6062 + C6063 + C6064) * C15057) *
               C32641 +
           ((C5434 + C5433 + C5432) * C32601 +
            (C5431 + C5430 + C5429) * C15058 +
            (C5428 + C5427 + C5426) * C15051 +
            (C5425 + C5424 + C5423) * C15057) *
               C20880) *
              C32513 * C210 +
          ((C5443 * C15057 + C5444 * C15051 + (C5440 + C5439 + C5438) * C15058 +
            (C5437 + C5436 + C5435) * C32601) *
               C20880 +
           ((C6058 + C6057 + C6056) * C15057 +
            (C6055 + C6054 + C6053) * C15051 +
            (C5270 * C1580 + C32858 * C1583 + C5271 * C1581 + C32845 * C1584 +
             C5272 * C1582 + C32815 * C1585) *
                C15058 +
            (C5270 * C1586 + C32858 * C1589 + C5271 * C1587 + C32845 * C1590 +
             C5272 * C1588 + C32815 * C1591) *
                C32601) *
               C32641) *
              C32513 * C211) *
         C32487) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C5270 * C119 + C32858 * C126 + C5271 * C120 + C32845 * C127 +
             C5272 * C121 + C32815 * C128) *
                C15057 +
            (C5270 * C131 + C32858 * C140 + C5271 * C132 + C32845 * C141 +
             C5272 * C133 + C32815 * C142) *
                C15051 +
            (C5423 + C5424 + C5425) * C15058 +
            (C5426 + C5427 + C5428) * C32601) *
               C20880 +
           ((C10565 + C10566 + C10567) * C15057 +
            (C10568 + C10569 + C10570) * C15051 +
            (C6064 + C6063 + C6062) * C15058 +
            (C6061 + C6060 + C6059) * C32601) *
               C32641) *
              C32513 * C32499 * C110 -
          (((C5272 * C631 + C32815 * C636 + C5271 * C630 + C32845 * C635 +
             C5270 * C629 + C32858 * C634) *
                C32601 +
            (C5272 * C621 + C32815 * C626 + C5271 * C620 + C32845 * C625 +
             C5270 * C619 + C32858 * C624) *
                C15058 +
            (C10911 + C10910 + C10909) * C15051 +
            (C10908 + C10907 + C10906) * C15057) *
               C32641 +
           ((C5730 + C5729 + C5728) * C32601 +
            (C5727 + C5726 + C5725) * C15058 +
            (C5272 * C134 + C32815 * C143 + C5271 * C133 + C32845 * C142 +
             C5270 * C132 + C32858 * C141) *
                C15051 +
            (C5272 * C122 + C32815 * C129 + C5271 * C121 + C32845 * C128 +
             C5270 * C120 + C32858 * C127) *
                C15057) *
               C20880) *
              C32513 * C32499 * C111 +
          (((C5270 * C121 + C32858 * C128 + C5271 * C122 + C32845 * C129 +
             C5272 * C123 + C32815 * C130) *
                C15057 +
            (C5270 * C133 + C32858 * C142 + C5271 * C134 + C32845 * C143 +
             C5272 * C135 + C32815 * C144) *
                C15051 +
            (C5270 * C215 + C32858 * C230 + C5271 * C214 + C32845 * C229 +
             C5272 * C213 + C32815 * C228) *
                C15058 +
            (C5270 * C225 + C32858 * C245 + C5271 * C224 + C32845 * C244 +
             C5272 * C223 + C32815 * C243) *
                C32601) *
               C20880 +
           ((C5270 * C320 + C32858 * C335 + C5271 * C319 + C32845 * C334 +
             C5272 * C318 + C32815 * C333) *
                C15057 +
            (C5270 * C330 + C32858 * C350 + C5271 * C329 + C32845 * C349 +
             C5272 * C328 + C32815 * C348) *
                C15051 +
            (C5270 * C620 + C32858 * C625 + C5271 * C621 + C32845 * C626 +
             C5272 * C622 + C32815 * C627) *
                C15058 +
            (C5270 * C630 + C32858 * C635 + C5271 * C631 + C32845 * C636 +
             C5272 * C632 + C32815 * C637) *
                C32601) *
               C32641) *
              C32513 * C32499 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C6132 * C119 + C32450 * C126) * C15847 +
            (C6132 * C131 + C32450 * C140) * C32868 + C6229 * C15848 +
            C6230 * C32864 + C6231 * C15849 + C6232 * C32854 + C6233 * C15850 +
            C6234 * C32836) *
               C20880 +
           (C7007 * C15847 + C7008 * C32868 + C6618 * C15848 + C6617 * C32864 +
            C6616 * C15849 + C6615 * C32854 + C6614 * C15850 + C6613 * C32836) *
               C32641) *
              C32513 * C32499 * C110 -
          ((C9919 * C32836 + C9918 * C15850 + C7201 * C32854 + C7200 * C15849 +
            C7199 * C32864 + C7198 * C15848 + C7373 * C32868 + C7372 * C15847) *
               C32641 +
           (C6420 * C32836 + C6419 * C15850 + C6418 * C32854 + C6417 * C15849 +
            C6416 * C32864 + C6415 * C15848 +
            (C6132 * C132 + C32450 * C141) * C32868 +
            (C6132 * C120 + C32450 * C127) * C15847) *
               C20880) *
              C32513 * C32499 * C111 +
          (((C6132 * C121 + C32450 * C128) * C15847 +
            (C6132 * C133 + C32450 * C142) * C32868 +
            (C6132 * C215 + C32450 * C230) * C15848 +
            (C6132 * C225 + C32450 * C245) * C32864 +
            (C6132 * C220 + C32450 * C235) * C15849 +
            (C6132 * C240 + C32450 * C250) * C32854 +
            (C6132 * C870 + C32450 * C879) * C15850 +
            (C6132 * C876 + C32450 * C888) * C32836) *
               C20880 +
           ((C6132 * C320 + C32450 * C335) * C15847 +
            (C6132 * C330 + C32450 * C350) * C32868 +
            (C6132 * C620 + C32450 * C625) * C15848 +
            (C6132 * C630 + C32450 * C635) * C32864 +
            (C6132 * C1062 + C32450 * C1074) * C15849 +
            (C6132 * C1071 + C32450 * C1089) * C32854 +
            (C6132 * C1582 + C32450 * C1585) * C15850 +
            (C6132 * C1588 + C32450 * C1591) * C32836) *
               C32641) *
              C32513 * C32499 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C6132 * C119 + C32450 * C126) * C15847 +
            (C6132 * C131 + C32450 * C140) * C32868 + C6229 * C15848 +
            C6230 * C32864 + C6231 * C15849 + C6232 * C32854 + C6233 * C15850 +
            C6234 * C32836) *
               C20880 +
           (C7007 * C15847 + C7008 * C32868 + C6618 * C15848 + C6617 * C32864 +
            C6616 * C15849 + C6615 * C32854 + C6614 * C15850 + C6613 * C32836) *
               C32641) *
              C32513 * C209 -
          ((C6611 * C32836 + C6612 * C15850 + C6613 * C32854 + C6614 * C15849 +
            C6615 * C32864 + C6616 * C15848 + C6617 * C32868 + C6618 * C15847) *
               C32641 +
           (C6236 * C32836 + C6235 * C15850 + C6234 * C32854 + C6233 * C15849 +
            C6232 * C32864 + C6231 * C15848 + C6230 * C32868 + C6229 * C15847) *
               C20880) *
              C32513 * C210 +
          ((C6231 * C15847 + C6232 * C32868 + C6233 * C15848 + C6234 * C32864 +
            C6235 * C15849 + C6236 * C32854 + C6238 * C15850 + C6237 * C32836) *
               C20880 +
           (C6616 * C15847 + C6615 * C32868 + C6614 * C15848 + C6613 * C32864 +
            C6612 * C15849 + C6611 * C32854 +
            (C6132 * C6590 + C32450 * C6591) * C15850 +
            (C6132 * C6592 + C32450 * C6593) * C32836) *
               C32641) *
              C32513 * C211) *
         C32487) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C6132 * C119 + C32450 * C126) * C15057 +
            (C6132 * C131 + C32450 * C140) * C15051 + C6229 * C15058 +
            C6230 * C32601) *
               C32869 +
           (C7007 * C15057 + C7008 * C15051 + C6618 * C15058 + C6617 * C32601) *
               C32866 +
           (C7009 * C15057 + C7010 * C15051 + C6851 * C15058 + C6852 * C32601) *
               C32857 +
           (C7016 * C15057 + C7015 * C15051 + C7014 * C15058 + C7013 * C32601) *
               C32842) *
              C32513 * C32499 * C110 -
          ((C14665 * C32601 + C14664 * C15058 + C12306 * C15051 +
            C12305 * C15057) *
               C32842 +
           (C7203 * C32601 + C7202 * C15058 + C7375 * C15051 + C7374 * C15057) *
               C32857 +
           (C7199 * C32601 + C7198 * C15058 + C7373 * C15051 + C7372 * C15057) *
               C32866 +
           (C6416 * C32601 + C6415 * C15058 +
            (C6132 * C132 + C32450 * C141) * C15051 +
            (C6132 * C120 + C32450 * C127) * C15057) *
               C32869) *
              C32513 * C32499 * C111 +
          (((C6132 * C121 + C32450 * C128) * C15057 +
            (C6132 * C133 + C32450 * C142) * C15051 +
            (C6132 * C215 + C32450 * C230) * C15058 +
            (C6132 * C225 + C32450 * C245) * C32601) *
               C32869 +
           ((C6132 * C320 + C32450 * C335) * C15057 +
            (C6132 * C330 + C32450 * C350) * C15051 +
            (C6132 * C620 + C32450 * C625) * C15058 +
            (C6132 * C630 + C32450 * C635) * C32601) *
               C32866 +
           ((C6132 * C325 + C32450 * C340) * C15057 +
            (C6132 * C345 + C32450 * C355) * C15051 +
            (C6132 * C1067 + C32450 * C1079) * C15058 +
            (C6132 * C1082 + C32450 * C1094) * C32601) *
               C32857 +
           ((C6132 * C1961 + C32450 * C1970) * C15057 +
            (C6132 * C1967 + C32450 * C1979) * C15051 +
            (C6132 * C2530 + C32450 * C2533) * C15058 +
            (C6132 * C2536 + C32450 * C2539) * C32601) *
               C32842) *
              C32513 * C32499 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C6132 * C119 + C32450 * C126) * C15057 +
            (C6132 * C131 + C32450 * C140) * C15051 + C6229 * C15058 +
            C6230 * C32601) *
               C32869 +
           (C7007 * C15057 + C7008 * C15051 + C6618 * C15058 + C6617 * C32601) *
               C32866 +
           (C7009 * C15057 + C7010 * C15051 + C6851 * C15058 + C6852 * C32601) *
               C32857 +
           (C7016 * C15057 + C7015 * C15051 + C7014 * C15058 + C7013 * C32601) *
               C32842) *
              C32513 * C209 -
          ((C7011 * C32601 + C7012 * C15058 + C7013 * C15051 + C7014 * C15057) *
               C32842 +
           (C6854 * C32601 + C6853 * C15058 + C6852 * C15051 + C6851 * C15057) *
               C32857 +
           (C6615 * C32601 + C6616 * C15058 + C6617 * C15051 + C6618 * C15057) *
               C32866 +
           (C6232 * C32601 + C6231 * C15058 + C6230 * C15051 + C6229 * C15057) *
               C32869) *
              C32513 * C210 +
          ((C6231 * C15057 + C6232 * C15051 + C6233 * C15058 + C6234 * C32601) *
               C32869 +
           (C6616 * C15057 + C6615 * C15051 + C6614 * C15058 + C6613 * C32601) *
               C32866 +
           (C6853 * C15057 + C6854 * C15051 + C6856 * C15058 + C6855 * C32601) *
               C32857 +
           (C7012 * C15057 + C7011 * C15051 +
            (C6132 * C7525 + C32450 * C7526) * C15058 +
            (C6132 * C7527 + C32450 * C7528) * C32601) *
               C32842) *
              C32513 * C211) *
         C32487) /
            (p * q * std::sqrt(p + q));
    d2ee[40] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C31557 * C119 + C32776 * C126 + C31538 * C120 + C32460 * C127) *
                 C15057 +
             (C31557 * C131 + C32776 * C140 + C31538 * C132 + C32460 * C141) *
                 C15051 +
             (C7782 + C7783) * C15058 + (C7784 + C7785) * C32601) *
                C32637 +
            ((C8834 + C8835) * C15057 + (C8836 + C8837) * C15051 +
             C9468 * C15058 + C9469 * C32601) *
                C32644 +
            C30098 * C24412) *
               C32513 * C440 -
           (((C8838 + C8839) * C32601 + (C8840 + C8841) * C15058 +
             C13492 * C15051 + C13493 * C15057) *
                C24412 +
            (C9470 * C32601 + C9471 * C15058 + C9472 * C15051 +
             C9473 * C15057) *
                C32644 +
            ((C7789 + C7788) * C32601 + (C7787 + C7786) * C15058 +
             (C7785 + C7784) * C15051 + (C7783 + C7782) * C15057) *
                C32637) *
               C32513 * C441) *
              C442 +
          ((((C8054 + C8055) * C15057 + (C8056 + C8057) * C15051 +
             (C8058 + C8059) * C15058 + (C8060 + C8061) * C32601) *
                C32637 +
            ((C9060 + C9061) * C15057 + (C9062 + C9063) * C15051 +
             (C9064 + C9065) * C15058 + (C9066 + C9067) * C32601) *
                C32644 +
            ((C13088 + C13089) * C15057 + (C13090 + C13091) * C15051 +
             (C31557 * C1069 + C32776 * C1084 + C31538 * C1070 +
              C32460 * C1085) *
                 C15058 +
             (C31557 * C1087 + C32776 * C1096 + C31538 * C1088 +
              C32460 * C1097) *
                 C32601) *
                C24412) *
               C32513 * C441 -
           (((C13091 + C13090) * C32601 + (C13089 + C13088) * C15058 +
             (C13297 + C13296) * C15051 + (C13295 + C13294) * C15057) *
                C24412 +
            ((C9063 + C9062) * C32601 + (C9061 + C9060) * C15058 +
             (C9273 + C9272) * C15051 + (C9271 + C9270) * C15057) *
                C32644 +
            ((C8057 + C8056) * C32601 + (C8055 + C8054) * C15058 +
             (C31538 * C133 + C32460 * C142 + C31557 * C132 + C32776 * C141) *
                 C15051 +
             (C31538 * C121 + C32460 * C128 + C31557 * C120 + C32776 * C127) *
                 C15057) *
                C32637) *
               C32513 * C440) *
              C443)) /
        (p * q * std::sqrt(p + q));
    d2ee[41] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C31557 * C119 + C32776 * C126 + C31538 * C120 + C32460 * C127) *
                 C15057 +
             (C31557 * C131 + C32776 * C140 + C31538 * C132 + C32460 * C141) *
                 C15051 +
             (C7782 + C7783) * C15058 + (C7784 + C7785) * C32601) *
                C32637 +
            ((C8834 + C8835) * C15057 + (C8836 + C8837) * C15051 +
             C9468 * C15058 + C9469 * C32601) *
                C32644 +
            C30098 * C24412) *
               C530 -
           (((C12875 + C12876) * C32601 + (C12877 + C12878) * C15058 +
             (C12879 + C12880) * C15051 + (C12881 + C12882) * C15057) *
                C24412 +
            (C13492 * C32601 + C13493 * C15058 + (C8846 + C8847) * C15051 +
             (C8848 + C8849) * C15057) *
                C32644 +
            (C9472 * C32601 + C9473 * C15058 + (C8837 + C8836) * C15051 +
             (C8835 + C8834) * C15057) *
                C32637) *
               C531) *
              C440 +
          (((C9468 * C15057 + C9469 * C15051 + C8654 * C15058 +
             C8655 * C32601) *
                C32637 +
            (C12853 * C15057 + C12854 * C15051 + (C8841 + C8840) * C15058 +
             (C8839 + C8838) * C32601) *
                C32644 +
            ((C12878 + C12877) * C15057 + (C12876 + C12875) * C15051 +
             (C31557 * C6966 + C32776 * C6970 + C31538 * C7351 +
              C32460 * C7352) *
                 C15058 +
             (C31557 * C6969 + C32776 * C6975 + C31538 * C7353 +
              C32460 * C7354) *
                 C32601) *
                C24412) *
               C531 -
           (((C8838 + C8839) * C32601 + (C8840 + C8841) * C15058 +
             C13492 * C15051 + C13493 * C15057) *
                C24412 +
            (C9470 * C32601 + C9471 * C15058 + C9472 * C15051 +
             C9473 * C15057) *
                C32644 +
            ((C7789 + C7788) * C32601 + (C7787 + C7786) * C15058 +
             (C7785 + C7784) * C15051 + (C7783 + C7782) * C15057) *
                C32637) *
               C530) *
              C441) *
         C32487) /
        (p * q * std::sqrt(p + q));
    d2ee[42] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C31557 * C119 + C32776 * C126 + C31538 * C120 + C32460 * C127) *
                C15057 +
            (C31557 * C131 + C32776 * C140 + C31538 * C132 + C32460 * C141) *
                C15051 +
            (C7782 + C7783) * C15058 + (C7784 + C7785) * C32601) *
               C32637 +
           ((C8834 + C8835) * C15057 + (C8836 + C8837) * C15051 +
            C9468 * C15058 + C9469 * C32601) *
               C32644 +
           (C12851 * C15057 + C12852 * C15051 + C12853 * C15058 +
            C12854 * C32601) *
               C24412) *
              C32513 * C209 -
          (((C8838 + C8839) * C32601 + (C8840 + C8841) * C15058 +
            C13492 * C15051 + C13493 * C15057) *
               C24412 +
           (C9470 * C32601 + C9471 * C15058 + C9472 * C15051 + C9473 * C15057) *
               C32644 +
           ((C7789 + C7788) * C32601 + (C7787 + C7786) * C15058 +
            (C7785 + C7784) * C15051 + (C7783 + C7782) * C15057) *
               C32637) *
              C32513 * C210 +
          ((C7798 * C15057 + C7799 * C15051 + C7800 * C15058 + C7801 * C32601) *
               C32637 +
           (C8654 * C15057 + C8655 * C15051 + (C8353 + C8352) * C15058 +
            (C8351 + C8350) * C32601) *
               C32644 +
           ((C8841 + C8840) * C15057 + (C8839 + C8838) * C15051 +
            (C31557 * C6301 + C32776 * C6305 + C31538 * C7177 +
             C32460 * C7178) *
                C15058 +
            (C31557 * C6306 + C32776 * C6310 + C31538 * C7179 +
             C32460 * C7180) *
                C32601) *
               C24412) *
              C32513 * C211) *
         C32487) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C31557 * C119 + C32776 * C126 + C31538 * C120 + C32460 * C127) *
                C15057 +
            (C31557 * C131 + C32776 * C140 + C31538 * C132 + C32460 * C141) *
                C15051 +
            (C7782 + C7783) * C15058 + (C7784 + C7785) * C32601) *
               C32637 +
           ((C8834 + C8835) * C15057 + (C8836 + C8837) * C15051 +
            C9468 * C15058 + C9469 * C32601) *
               C32644 +
           (C12851 * C15057 + C12852 * C15051 + C12853 * C15058 +
            C12854 * C32601) *
               C24412) *
              C32513 * C32499 * C110 -
          (((C13091 + C13090) * C32601 + (C13089 + C13088) * C15058 +
            (C13297 + C13296) * C15051 + (C13295 + C13294) * C15057) *
               C24412 +
           ((C9063 + C9062) * C32601 + (C9061 + C9060) * C15058 +
            (C9273 + C9272) * C15051 + (C9271 + C9270) * C15057) *
               C32644 +
           ((C8057 + C8056) * C32601 + (C8055 + C8054) * C15058 +
            (C31538 * C133 + C32460 * C142 + C31557 * C132 + C32776 * C141) *
                C15051 +
            (C31538 * C121 + C32460 * C128 + C31557 * C120 + C32776 * C127) *
                C15057) *
               C32637) *
              C32513 * C32499 * C111 +
          (((C31557 * C121 + C32776 * C128 + C31538 * C122 + C32460 * C129) *
                C15057 +
            (C31557 * C133 + C32776 * C142 + C31538 * C134 + C32460 * C143) *
                C15051 +
            (C31557 * C215 + C32776 * C230 + C31538 * C214 + C32460 * C229) *
                C15058 +
            (C31557 * C225 + C32776 * C245 + C31538 * C224 + C32460 * C244) *
                C32601) *
               C32637 +
           ((C31557 * C320 + C32776 * C335 + C31538 * C319 + C32460 * C334) *
                C15057 +
            (C31557 * C330 + C32776 * C350 + C31538 * C329 + C32460 * C349) *
                C15051 +
            (C31557 * C620 + C32776 * C625 + C31538 * C621 + C32460 * C626) *
                C15058 +
            (C31557 * C630 + C32776 * C635 + C31538 * C631 + C32460 * C636) *
                C32601) *
               C32644 +
           ((C31557 * C325 + C32776 * C340 + C31538 * C326 + C32460 * C341) *
                C15057 +
            (C31557 * C345 + C32776 * C355 + C31538 * C346 + C32460 * C356) *
                C15051 +
            (C31557 * C1067 + C32776 * C1079 + C31538 * C2192 +
             C32460 * C2193) *
                C15058 +
            (C31557 * C1082 + C32776 * C1094 + C31538 * C2194 +
             C32460 * C2195) *
                C32601) *
               C24412) *
              C32513 * C32499 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C31557 * C119 + C32776 * C126 + C31538 * C120 + C32460 * C127) *
                C15057 +
            (C31557 * C131 + C32776 * C140 + C31538 * C132 + C32460 * C141) *
                C15051 +
            (C7782 + C7783) * C15058 + (C7784 + C7785) * C32601) *
               C32637 +
           ((C8834 + C8835) * C15057 + (C8836 + C8837) * C15051 +
            C9468 * C15058 + C9469 * C32601) *
               C32644 +
           C30098 * C24412) *
              C315 -
          (((C12875 + C12876) * C32601 + (C12877 + C12878) * C15058 +
            (C12879 + C12880) * C15051 + (C12881 + C12882) * C15057) *
               C24412 +
           (C13492 * C32601 + C13493 * C15058 + (C8846 + C8847) * C15051 +
            (C8848 + C8849) * C15057) *
               C32644 +
           (C9472 * C32601 + C9473 * C15058 + (C8837 + C8836) * C15051 +
            (C8835 + C8834) * C15057) *
               C32637) *
              C316 +
          (C30098 * C32637 +
           (C13794 * C15057 + C13795 * C15051 + (C12878 + C12877) * C15058 +
            (C12876 + C12875) * C32601) *
               C32644 +
           ((C13810 + C13809) * C15057 + (C13808 + C13807) * C15051 +
            (C31557 * C6967 + C32776 * C6971 + C31538 * C12202 +
             C32460 * C12203) *
                C15058 +
            (C31557 * C6972 + C32776 * C6976 + C31538 * C12204 +
             C32460 * C12205) *
                C32601) *
               C24412) *
              C317) *
         C32499 * C32487) /
            (p * q * std::sqrt(p + q));
    d2ee[43] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C31557 * C119 + C32776 * C126 + C31538 * C120 + C32460 * C127) *
                 C15057 +
             (C31557 * C131 + C32776 * C140 + C31538 * C132 + C32460 * C141) *
                 C15051 +
             (C7782 + C7783) * C15058 + (C7784 + C7785) * C32601) *
                C32637 +
            ((C8834 + C8835) * C15057 + (C8836 + C8837) * C15051 +
             C9468 * C15058 + C9469 * C32601) *
                C32644 +
            C30098 * C24412) *
               C530 -
           (((C12875 + C12876) * C32601 + (C12877 + C12878) * C15058 +
             (C12879 + C12880) * C15051 + (C12881 + C12882) * C15057) *
                C24412 +
            (C13492 * C32601 + C13493 * C15058 + (C8846 + C8847) * C15051 +
             (C8848 + C8849) * C15057) *
                C32644 +
            (C9472 * C32601 + C9473 * C15058 + (C8837 + C8836) * C15051 +
             (C8835 + C8834) * C15057) *
                C32637) *
               C531) *
              C32499 * C442 +
          ((((C9270 + C9271) * C15057 + (C9272 + C9273) * C15051 +
             (C9060 + C9061) * C15058 + (C9062 + C9063) * C32601) *
                C32637 +
            ((C13294 + C13295) * C15057 + (C13296 + C13297) * C15051 +
             (C13088 + C13089) * C15058 + (C13090 + C13091) * C32601) *
                C32644 +
            ((C14080 + C14081) * C15057 + (C14082 + C14083) * C15051 +
             (C31557 * C2529 + C32776 * C2532 + C31538 * C2530 +
              C32460 * C2533) *
                 C15058 +
             (C31557 * C2535 + C32776 * C2538 + C31538 * C2536 +
              C32460 * C2539) *
                 C32601) *
                C24412) *
               C531 -
           (((C13091 + C13090) * C32601 + (C13089 + C13088) * C15058 +
             (C13297 + C13296) * C15051 + (C13295 + C13294) * C15057) *
                C24412 +
            ((C9063 + C9062) * C32601 + (C9061 + C9060) * C15058 +
             (C9273 + C9272) * C15051 + (C9271 + C9270) * C15057) *
                C32644 +
            ((C8057 + C8056) * C32601 + (C8055 + C8054) * C15058 +
             (C31538 * C133 + C32460 * C142 + C31557 * C132 + C32776 * C141) *
                 C15051 +
             (C31538 * C121 + C32460 * C128 + C31557 * C120 + C32776 * C127) *
                 C15057) *
                C32637) *
               C530) *
              C32499 * C443)) /
        (p * q * std::sqrt(p + q));
    d2ee[44] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C31557 * C119 + C32776 * C126 + C31538 * C120 + C32460 * C127) *
                C15057 +
            (C31557 * C131 + C32776 * C140 + C31538 * C132 + C32460 * C141) *
                C15051 +
            (C7782 + C7783) * C15058 + (C7784 + C7785) * C32601) *
               C32637 +
           ((C8834 + C8835) * C15057 + (C8836 + C8837) * C15051 +
            C9468 * C15058 + C9469 * C32601) *
               C32644 +
           (C12851 * C15057 + C12852 * C15051 + C12853 * C15058 +
            C12854 * C32601) *
               C24412) *
              C32513 * C32499 * C110 -
          (((C13091 + C13090) * C32601 + (C13089 + C13088) * C15058 +
            (C13297 + C13296) * C15051 + (C13295 + C13294) * C15057) *
               C24412 +
           ((C9063 + C9062) * C32601 + (C9061 + C9060) * C15058 +
            (C9273 + C9272) * C15051 + (C9271 + C9270) * C15057) *
               C32644 +
           ((C8057 + C8056) * C32601 + (C8055 + C8054) * C15058 +
            (C31538 * C133 + C32460 * C142 + C31557 * C132 + C32776 * C141) *
                C15051 +
            (C31538 * C121 + C32460 * C128 + C31557 * C120 + C32776 * C127) *
                C15057) *
               C32637) *
              C32513 * C32499 * C111 +
          (((C31557 * C121 + C32776 * C128 + C31538 * C122 + C32460 * C129) *
                C15057 +
            (C31557 * C133 + C32776 * C142 + C31538 * C134 + C32460 * C143) *
                C15051 +
            (C31557 * C215 + C32776 * C230 + C31538 * C214 + C32460 * C229) *
                C15058 +
            (C31557 * C225 + C32776 * C245 + C31538 * C224 + C32460 * C244) *
                C32601) *
               C32637 +
           ((C31557 * C320 + C32776 * C335 + C31538 * C319 + C32460 * C334) *
                C15057 +
            (C31557 * C330 + C32776 * C350 + C31538 * C329 + C32460 * C349) *
                C15051 +
            (C31557 * C620 + C32776 * C625 + C31538 * C621 + C32460 * C626) *
                C15058 +
            (C31557 * C630 + C32776 * C635 + C31538 * C631 + C32460 * C636) *
                C32601) *
               C32644 +
           ((C31557 * C325 + C32776 * C340 + C31538 * C326 + C32460 * C341) *
                C15057 +
            (C31557 * C345 + C32776 * C355 + C31538 * C346 + C32460 * C356) *
                C15051 +
            (C31557 * C1067 + C32776 * C1079 + C31538 * C2192 +
             C32460 * C2193) *
                C15058 +
            (C31557 * C1082 + C32776 * C1094 + C31538 * C2194 +
             C32460 * C2195) *
                C32601) *
               C24412) *
              C32513 * C32499 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C31557 * C119 + C32776 * C126 + C31538 * C120 + C32460 * C127) *
                C15057 +
            (C31557 * C131 + C32776 * C140 + C31538 * C132 + C32460 * C141) *
                C15051 +
            (C7782 + C7783) * C15058 + (C7784 + C7785) * C32601) *
               C32637 +
           ((C8834 + C8835) * C15057 + (C8836 + C8837) * C15051 +
            C9468 * C15058 + C9469 * C32601) *
               C32644 +
           (C12851 * C15057 + C12852 * C15051 + C12853 * C15058 +
            C12854 * C32601) *
               C24412) *
              C32513 * C209 -
          (((C8838 + C8839) * C32601 + (C8840 + C8841) * C15058 +
            C13492 * C15051 + C13493 * C15057) *
               C24412 +
           (C9470 * C32601 + C9471 * C15058 + C9472 * C15051 + C9473 * C15057) *
               C32644 +
           ((C7789 + C7788) * C32601 + (C7787 + C7786) * C15058 +
            (C7785 + C7784) * C15051 + (C7783 + C7782) * C15057) *
               C32637) *
              C32513 * C210 +
          ((C7798 * C15057 + C7799 * C15051 + C7800 * C15058 + C7801 * C32601) *
               C32637 +
           (C8654 * C15057 + C8655 * C15051 + (C8353 + C8352) * C15058 +
            (C8351 + C8350) * C32601) *
               C32644 +
           ((C8841 + C8840) * C15057 + (C8839 + C8838) * C15051 +
            (C31557 * C6301 + C32776 * C6305 + C31538 * C7177 +
             C32460 * C7178) *
                C15058 +
            (C31557 * C6306 + C32776 * C6310 + C31538 * C7179 +
             C32460 * C7180) *
                C32601) *
               C24412) *
              C32513 * C211) *
         C32487) /
            (p * q * std::sqrt(p + q));
    d2ee[45] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                 (((((C5270 * C119 + C32858 * C126 + C5271 * C120 +
                      C32845 * C127 + C5272 * C121 + C32815 * C128) *
                         C15057 +
                     (C5270 * C131 + C32858 * C140 + C5271 * C132 +
                      C32845 * C141 + C5272 * C133 + C32815 * C142) *
                         C15051 +
                     (C5423 + C5424 + C5425) * C15058 +
                     (C5426 + C5427 + C5428) * C32601) *
                        C20880 +
                    ((C10565 + C10566 + C10567) * C15057 +
                     (C10568 + C10569 + C10570) * C15051 +
                     (C6064 + C6063 + C6062) * C15058 +
                     (C6061 + C6060 + C6059) * C32601) *
                        C32641) *
                       C32513 * C440 -
                   (((C6053 + C6054 + C6055) * C32601 +
                     (C6056 + C6057 + C6058) * C15058 +
                     (C6059 + C6060 + C6061) * C15051 +
                     (C6062 + C6063 + C6064) * C15057) *
                        C32641 +
                    ((C5434 + C5433 + C5432) * C32601 +
                     (C5431 + C5430 + C5429) * C15058 +
                     (C5428 + C5427 + C5426) * C15051 +
                     (C5425 + C5424 + C5423) * C15057) *
                        C20880) *
                       C32513 * C441) *
                      C442 +
                  ((((C5725 + C5726 + C5727) * C15057 +
                     (C5728 + C5729 + C5730) * C15051 +
                     (C5731 + C5732 + C5733) * C15058 +
                     (C5734 + C5735 + C5736) * C32601) *
                        C20880 +
                    ((C26786 + C26787 + C26788) * C15057 +
                     (C26789 + C26790 + C26791) * C15051 +
                     (C5270 * C1063 + C32858 * C1075 + C5271 * C1062 +
                      C32845 * C1074 + C5272 * C1430 + C32815 * C1431) *
                         C15058 +
                     (C5270 * C1072 + C32858 * C1090 + C5271 * C1071 +
                      C32845 * C1089 + C5272 * C1432 + C32815 * C1433) *
                         C32601) *
                        C32641) *
                       C32513 * C441 -
                   (((C26791 + C26790 + C26789) * C32601 +
                     (C26788 + C26787 + C26786) * C15058 +
                     (C10911 + C10910 + C10909) * C15051 +
                     (C10908 + C10907 + C10906) * C15057) *
                        C32641 +
                    ((C5730 + C5729 + C5728) * C32601 +
                     (C5727 + C5726 + C5725) * C15058 +
                     (C5272 * C134 + C32815 * C143 + C5271 * C133 +
                      C32845 * C142 + C5270 * C132 + C32858 * C141) *
                         C15051 +
                     (C5272 * C122 + C32815 * C129 + C5271 * C121 +
                      C32845 * C128 + C5270 * C120 + C32858 * C127) *
                         C15057) *
                        C20880) *
                       C32513 * C440) *
                      C443)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                 (((((C6132 * C119 + C32450 * C126) * C15847 +
                     (C6132 * C131 + C32450 * C140) * C32868 + C6229 * C15848 +
                     C6230 * C32864 + C6231 * C15849 + C6232 * C32854 +
                     C6233 * C15850 + C6234 * C32836) *
                        C20880 +
                    (C27482 + C27483 + C27484 + C27485 + C27486 + C27487 +
                     C27488 + C27489) *
                        C32641) *
                       C32513 * C440 -
                   ((C6611 * C32836 + C6612 * C15850 + C6613 * C32854 +
                     C6614 * C15849 + C6615 * C32864 + C6616 * C15848 +
                     C6617 * C32868 + C6618 * C15847) *
                        C32641 +
                    (C6236 * C32836 + C6235 * C15850 + C6234 * C32854 +
                     C6233 * C15849 + C6232 * C32864 + C6231 * C15848 +
                     C6230 * C32868 + C6229 * C15847) *
                        C20880) *
                       C32513 * C441) *
                      C442 +
                  (((C6415 * C15847 + C6416 * C32868 + C6417 * C15848 +
                     C6418 * C32864 + C6419 * C15849 + C6420 * C32854 +
                     C6421 * C15850 + C6422 * C32836) *
                        C20880 +
                    (C7198 * C15847 + C7199 * C32868 + C7200 * C15848 +
                     C7201 * C32864 + C9918 * C15849 + C9919 * C32854 +
                     (C6132 * C6504 + C32450 * C6505) * C15850 +
                     (C6132 * C6506 + C32450 * C6507) * C32836) *
                        C32641) *
                       C32513 * C441 -
                   ((C9919 * C32836 + C9918 * C15850 + C7201 * C32854 +
                     C7200 * C15849 + C7199 * C32864 + C7198 * C15848 +
                     C7373 * C32868 + C7372 * C15847) *
                        C32641 +
                    (C6420 * C32836 + C6419 * C15850 + C6418 * C32854 +
                     C6417 * C15849 + C6416 * C32864 + C6415 * C15848 +
                     (C6132 * C132 + C32450 * C141) * C32868 +
                     (C6132 * C120 + C32450 * C127) * C15847) *
                        C20880) *
                       C32513 * C440) *
                      C443)) /
                    (p * q * std::sqrt(p + q));
    d2ee[46] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                 (((((C5270 * C119 + C32858 * C126 + C5271 * C120 +
                      C32845 * C127 + C5272 * C121 + C32815 * C128) *
                         C15057 +
                     (C5270 * C131 + C32858 * C140 + C5271 * C132 +
                      C32845 * C141 + C5272 * C133 + C32815 * C142) *
                         C15051 +
                     (C5423 + C5424 + C5425) * C15058 +
                     (C5426 + C5427 + C5428) * C32601) *
                        C20880 +
                    ((C10565 + C10566 + C10567) * C15057 +
                     (C10568 + C10569 + C10570) * C15051 + C27184 * C15058 +
                     C27185 * C32601) *
                        C32641) *
                       C530 -
                   (((C11081 + C11080 + C11079) * C32601 +
                     (C11078 + C11077 + C11076) * C15058 +
                     (C10576 + C10575 + C10574) * C15051 +
                     (C10573 + C10572 + C10571) * C15057) *
                        C32641 +
                    (C27186 * C32601 + C27187 * C15058 +
                     (C10570 + C10569 + C10568) * C15051 +
                     (C10567 + C10566 + C10565) * C15057) *
                        C20880) *
                       C531) *
                      C440 +
                  (((C27184 * C15057 + C27185 * C15051 +
                     (C6058 + C6057 + C6056) * C15058 +
                     (C6055 + C6054 + C6053) * C32601) *
                        C20880 +
                    ((C11076 + C11077 + C11078) * C15057 +
                     (C11079 + C11080 + C11081) * C15051 +
                     (C5270 * C1068 + C32858 * C1083 + C5271 * C1069 +
                      C32845 * C1084 + C5272 * C1070 + C32815 * C1085) *
                         C15058 +
                     (C5270 * C1086 + C32858 * C1095 + C5271 * C1087 +
                      C32845 * C1096 + C5272 * C1088 + C32815 * C1097) *
                         C32601) *
                        C32641) *
                       C531 -
                   (((C6053 + C6054 + C6055) * C32601 +
                     (C6056 + C6057 + C6058) * C15058 + C27186 * C15051 +
                     C27187 * C15057) *
                        C32641 +
                    ((C5434 + C5433 + C5432) * C32601 +
                     (C5431 + C5430 + C5429) * C15058 +
                     (C5428 + C5427 + C5426) * C15051 +
                     (C5425 + C5424 + C5423) * C15057) *
                        C20880) *
                       C530) *
                      C441) *
                 C32487) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                 (((((C6132 * C119 + C32450 * C126) * C15847 +
                     (C6132 * C131 + C32450 * C140) * C32868 + C6229 * C15848 +
                     C6230 * C32864 + C6231 * C15849 + C6232 * C32854 +
                     C6233 * C15850 + C6234 * C32836) *
                        C20880 +
                    (C27482 + C27483 + C27484 + C27485 + C27486 + C27487 +
                     C27488 + C27489) *
                        C32641) *
                       C530 -
                   ((C27490 + C27491 + C27492 + C27493 + C27494 + C27495 +
                     C27496 + C27497) *
                        C32641 +
                    (C27489 + C27488 + C27487 + C27486 + C27485 + C27484 +
                     C27483 + C27482) *
                        C20880) *
                       C531) *
                      C440 +
                  (((C27896 + C27897 + C27898 + C27899 + C27900 + C27901 +
                     C27902 + C27903) *
                        C20880 +
                    (C6851 * C15847 + C6852 * C32868 + C6853 * C15848 +
                     C6854 * C32864 + C6856 * C15849 + C6855 * C32854 +
                     (C6132 * C6302 + C32450 * C6307) * C15850 +
                     (C6132 * C6308 + C32450 * C6311) * C32836) *
                        C32641) *
                       C531 -
                   ((C27903 + C27902 + C27901 + C27900 + C27899 + C27898 +
                     C27897 + C27896) *
                        C32641 +
                    (C6236 * C32836 + C6235 * C15850 + C6234 * C32854 +
                     C6233 * C15849 + C6232 * C32864 + C6231 * C15848 +
                     C6230 * C32868 + C6229 * C15847) *
                        C20880) *
                       C530) *
                      C441) *
                 C32487) /
                    (p * q * std::sqrt(p + q));
    d2ee[47] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C5270 * C119 + C32858 * C126 + C5271 * C120 + C32845 * C127 +
             C5272 * C121 + C32815 * C128) *
                C15057 +
            (C5270 * C131 + C32858 * C140 + C5271 * C132 + C32845 * C141 +
             C5272 * C133 + C32815 * C142) *
                C15051 +
            (C5423 + C5424 + C5425) * C15058 +
            (C5426 + C5427 + C5428) * C32601) *
               C20880 +
           ((C10565 + C10566 + C10567) * C15057 +
            (C10568 + C10569 + C10570) * C15051 +
            (C6064 + C6063 + C6062) * C15058 +
            (C6061 + C6060 + C6059) * C32601) *
               C32641) *
              C32513 * C209 -
          (((C6053 + C6054 + C6055) * C32601 +
            (C6056 + C6057 + C6058) * C15058 +
            (C6059 + C6060 + C6061) * C15051 +
            (C6062 + C6063 + C6064) * C15057) *
               C32641 +
           ((C5434 + C5433 + C5432) * C32601 +
            (C5431 + C5430 + C5429) * C15058 +
            (C5428 + C5427 + C5426) * C15051 +
            (C5425 + C5424 + C5423) * C15057) *
               C20880) *
              C32513 * C210 +
          ((C5443 * C15057 + C5444 * C15051 + (C5440 + C5439 + C5438) * C15058 +
            (C5437 + C5436 + C5435) * C32601) *
               C20880 +
           ((C6058 + C6057 + C6056) * C15057 +
            (C6055 + C6054 + C6053) * C15051 +
            (C5270 * C1580 + C32858 * C1583 + C5271 * C1581 + C32845 * C1584 +
             C5272 * C1582 + C32815 * C1585) *
                C15058 +
            (C5270 * C1586 + C32858 * C1589 + C5271 * C1587 + C32845 * C1590 +
             C5272 * C1588 + C32815 * C1591) *
                C32601) *
               C32641) *
              C32513 * C211) *
         C32487) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C5270 * C119 + C32858 * C126 + C5271 * C120 + C32845 * C127 +
             C5272 * C121 + C32815 * C128) *
                C15057 +
            (C5270 * C131 + C32858 * C140 + C5271 * C132 + C32845 * C141 +
             C5272 * C133 + C32815 * C142) *
                C15051 +
            (C5423 + C5424 + C5425) * C15058 +
            (C5426 + C5427 + C5428) * C32601) *
               C20880 +
           ((C10565 + C10566 + C10567) * C15057 +
            (C10568 + C10569 + C10570) * C15051 +
            (C6064 + C6063 + C6062) * C15058 +
            (C6061 + C6060 + C6059) * C32601) *
               C32641) *
              C32513 * C32499 * C110 -
          (((C5272 * C631 + C32815 * C636 + C5271 * C630 + C32845 * C635 +
             C5270 * C629 + C32858 * C634) *
                C32601 +
            (C5272 * C621 + C32815 * C626 + C5271 * C620 + C32845 * C625 +
             C5270 * C619 + C32858 * C624) *
                C15058 +
            (C10911 + C10910 + C10909) * C15051 +
            (C10908 + C10907 + C10906) * C15057) *
               C32641 +
           ((C5730 + C5729 + C5728) * C32601 +
            (C5727 + C5726 + C5725) * C15058 +
            (C5272 * C134 + C32815 * C143 + C5271 * C133 + C32845 * C142 +
             C5270 * C132 + C32858 * C141) *
                C15051 +
            (C5272 * C122 + C32815 * C129 + C5271 * C121 + C32845 * C128 +
             C5270 * C120 + C32858 * C127) *
                C15057) *
               C20880) *
              C32513 * C32499 * C111 +
          (((C5270 * C121 + C32858 * C128 + C5271 * C122 + C32845 * C129 +
             C5272 * C123 + C32815 * C130) *
                C15057 +
            (C5270 * C133 + C32858 * C142 + C5271 * C134 + C32845 * C143 +
             C5272 * C135 + C32815 * C144) *
                C15051 +
            (C5270 * C215 + C32858 * C230 + C5271 * C214 + C32845 * C229 +
             C5272 * C213 + C32815 * C228) *
                C15058 +
            (C5270 * C225 + C32858 * C245 + C5271 * C224 + C32845 * C244 +
             C5272 * C223 + C32815 * C243) *
                C32601) *
               C20880 +
           ((C5270 * C320 + C32858 * C335 + C5271 * C319 + C32845 * C334 +
             C5272 * C318 + C32815 * C333) *
                C15057 +
            (C5270 * C330 + C32858 * C350 + C5271 * C329 + C32845 * C349 +
             C5272 * C328 + C32815 * C348) *
                C15051 +
            (C5270 * C620 + C32858 * C625 + C5271 * C621 + C32845 * C626 +
             C5272 * C622 + C32815 * C627) *
                C15058 +
            (C5270 * C630 + C32858 * C635 + C5271 * C631 + C32845 * C636 +
             C5272 * C632 + C32815 * C637) *
                C32601) *
               C32641) *
              C32513 * C32499 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C5270 * C119 + C32858 * C126 + C5271 * C120 + C32845 * C127 +
             C5272 * C121 + C32815 * C128) *
                C15057 +
            (C5270 * C131 + C32858 * C140 + C5271 * C132 + C32845 * C141 +
             C5272 * C133 + C32815 * C142) *
                C15051 +
            (C5423 + C5424 + C5425) * C15058 +
            (C5426 + C5427 + C5428) * C32601) *
               C20880 +
           ((C10565 + C10566 + C10567) * C15057 +
            (C10568 + C10569 + C10570) * C15051 +
            (C6064 + C6063 + C6062) * C15058 +
            (C6061 + C6060 + C6059) * C32601) *
               C32641) *
              C315 -
          (((C11081 + C11080 + C11079) * C32601 +
            (C11078 + C11077 + C11076) * C15058 +
            (C10576 + C10575 + C10574) * C15051 +
            (C10573 + C10572 + C10571) * C15057) *
               C32641 +
           ((C6059 + C6060 + C6061) * C32601 +
            (C6062 + C6063 + C6064) * C15058 +
            (C10570 + C10569 + C10568) * C15051 +
            (C10567 + C10566 + C10565) * C15057) *
               C20880) *
              C316 +
          ((C10585 * C15057 + C10586 * C15051 +
            (C11076 + C11077 + C11078) * C15058 +
            (C11079 + C11080 + C11081) * C32601) *
               C20880 +
           ((C10582 + C10581 + C10580) * C15057 +
            (C10579 + C10578 + C10577) * C15051 +
            (C5270 * C2528 + C32858 * C2531 + C5271 * C2529 + C32845 * C2532 +
             C5272 * C2530 + C32815 * C2533) *
                C15058 +
            (C5270 * C2534 + C32858 * C2537 + C5271 * C2535 + C32845 * C2538 +
             C5272 * C2536 + C32815 * C2539) *
                C32601) *
               C32641) *
              C317) *
         C32499 * C32487) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C6132 * C119 + C32450 * C126) * C15847 +
            (C6132 * C131 + C32450 * C140) * C32868 + C6229 * C15848 +
            C6230 * C32864 + C6231 * C15849 + C6232 * C32854 + C6233 * C15850 +
            C6234 * C32836) *
               C20880 +
           (C7007 * C15847 + C7008 * C32868 + C6618 * C15848 + C6617 * C32864 +
            C6616 * C15849 + C6615 * C32854 + C6614 * C15850 + C6613 * C32836) *
               C32641) *
              C32513 * C32499 * C110 -
          ((C9919 * C32836 + C9918 * C15850 + C7201 * C32854 + C7200 * C15849 +
            C7199 * C32864 + C7198 * C15848 + C7373 * C32868 + C7372 * C15847) *
               C32641 +
           (C6420 * C32836 + C6419 * C15850 + C6418 * C32854 + C6417 * C15849 +
            C6416 * C32864 + C6415 * C15848 +
            (C6132 * C132 + C32450 * C141) * C32868 +
            (C6132 * C120 + C32450 * C127) * C15847) *
               C20880) *
              C32513 * C32499 * C111 +
          (((C6132 * C121 + C32450 * C128) * C15847 +
            (C6132 * C133 + C32450 * C142) * C32868 +
            (C6132 * C215 + C32450 * C230) * C15848 +
            (C6132 * C225 + C32450 * C245) * C32864 +
            (C6132 * C220 + C32450 * C235) * C15849 +
            (C6132 * C240 + C32450 * C250) * C32854 +
            (C6132 * C870 + C32450 * C879) * C15850 +
            (C6132 * C876 + C32450 * C888) * C32836) *
               C20880 +
           ((C6132 * C320 + C32450 * C335) * C15847 +
            (C6132 * C330 + C32450 * C350) * C32868 +
            (C6132 * C620 + C32450 * C625) * C15848 +
            (C6132 * C630 + C32450 * C635) * C32864 +
            (C6132 * C1062 + C32450 * C1074) * C15849 +
            (C6132 * C1071 + C32450 * C1089) * C32854 +
            (C6132 * C1582 + C32450 * C1585) * C15850 +
            (C6132 * C1588 + C32450 * C1591) * C32836) *
               C32641) *
              C32513 * C32499 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C6132 * C119 + C32450 * C126) * C15847 +
            (C6132 * C131 + C32450 * C140) * C32868 + C6229 * C15848 +
            C6230 * C32864 + C6231 * C15849 + C6232 * C32854 + C6233 * C15850 +
            C6234 * C32836) *
               C20880 +
           (C7007 * C15847 + C7008 * C32868 + C6618 * C15848 + C6617 * C32864 +
            C6616 * C15849 + C6615 * C32854 + C6614 * C15850 + C6613 * C32836) *
               C32641) *
              C32513 * C209 -
          ((C6611 * C32836 + C6612 * C15850 + C6613 * C32854 + C6614 * C15849 +
            C6615 * C32864 + C6616 * C15848 + C6617 * C32868 + C6618 * C15847) *
               C32641 +
           (C6236 * C32836 + C6235 * C15850 + C6234 * C32854 + C6233 * C15849 +
            C6232 * C32864 + C6231 * C15848 + C6230 * C32868 + C6229 * C15847) *
               C20880) *
              C32513 * C210 +
          ((C6231 * C15847 + C6232 * C32868 + C6233 * C15848 + C6234 * C32864 +
            C6235 * C15849 + C6236 * C32854 + C6238 * C15850 + C6237 * C32836) *
               C20880 +
           (C6616 * C15847 + C6615 * C32868 + C6614 * C15848 + C6613 * C32864 +
            C6612 * C15849 + C6611 * C32854 +
            (C6132 * C6590 + C32450 * C6591) * C15850 +
            (C6132 * C6592 + C32450 * C6593) * C32836) *
               C32641) *
              C32513 * C211) *
         C32487) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C6132 * C119 + C32450 * C126) * C15847 +
            (C6132 * C131 + C32450 * C140) * C32868 + C6229 * C15848 +
            C6230 * C32864 + C6231 * C15849 + C6232 * C32854 + C6233 * C15850 +
            C6234 * C32836) *
               C20880 +
           (C27482 + C27483 + C27484 + C27485 + C27486 + C27487 + C27488 +
            C27489) *
               C32641) *
              C315 -
          ((C27490 + C27491 + C27492 + C27493 + C27494 + C27495 + C27496 +
            C27497) *
               C32641 +
           (C27489 + C27488 + C27487 + C27486 + C27485 + C27484 + C27483 +
            C27482) *
               C20880) *
              C316 +
          ((C27497 + C27496 + C27495 + C27494 + C27493 + C27492 + C27491 +
            C27490) *
               C20880 +
           (C7016 * C15847 + C7015 * C32868 + C7014 * C15848 + C7013 * C32864 +
            C7012 * C15849 + C7011 * C32854 +
            (C6132 * C7525 + C32450 * C7526) * C15850 +
            (C6132 * C7527 + C32450 * C7528) * C32836) *
               C32641) *
              C317) *
         C32499 * C32487) /
            (p * q * std::sqrt(p + q));
    d2ee[48] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                 (((((C5270 * C119 + C32858 * C126 + C5271 * C120 +
                      C32845 * C127 + C5272 * C121 + C32815 * C128) *
                         C15057 +
                     (C5270 * C131 + C32858 * C140 + C5271 * C132 +
                      C32845 * C141 + C5272 * C133 + C32815 * C142) *
                         C15051 +
                     (C5423 + C5424 + C5425) * C15058 +
                     (C5426 + C5427 + C5428) * C32601) *
                        C20880 +
                    ((C10565 + C10566 + C10567) * C15057 +
                     (C10568 + C10569 + C10570) * C15051 +
                     (C6064 + C6063 + C6062) * C15058 +
                     (C6061 + C6060 + C6059) * C32601) *
                        C32641) *
                       C530 -
                   (((C11081 + C11080 + C11079) * C32601 +
                     (C11078 + C11077 + C11076) * C15058 +
                     (C10576 + C10575 + C10574) * C15051 +
                     (C10573 + C10572 + C10571) * C15057) *
                        C32641 +
                    ((C6059 + C6060 + C6061) * C32601 +
                     (C6062 + C6063 + C6064) * C15058 +
                     (C10570 + C10569 + C10568) * C15051 +
                     (C10567 + C10566 + C10565) * C15057) *
                        C20880) *
                       C531) *
                      C32499 * C442 +
                  ((((C10906 + C10907 + C10908) * C15057 +
                     (C10909 + C10910 + C10911) * C15051 +
                     (C26786 + C26787 + C26788) * C15058 +
                     (C26789 + C26790 + C26791) * C32601) *
                        C20880 +
                    ((C10912 + C10913 + C10914) * C15057 +
                     (C10915 + C10916 + C10917) * C15051 +
                     (C5270 * C1066 + C32858 * C1078 + C5271 * C1067 +
                      C32845 * C1079 + C5272 * C2192 + C32815 * C2193) *
                         C15058 +
                     (C5270 * C1081 + C32858 * C1093 + C5271 * C1082 +
                      C32845 * C1094 + C5272 * C2194 + C32815 * C2195) *
                         C32601) *
                        C32641) *
                       C531 -
                   (((C26791 + C26790 + C26789) * C32601 +
                     (C26788 + C26787 + C26786) * C15058 +
                     (C10911 + C10910 + C10909) * C15051 +
                     (C10908 + C10907 + C10906) * C15057) *
                        C32641 +
                    ((C5730 + C5729 + C5728) * C32601 +
                     (C5727 + C5726 + C5725) * C15058 +
                     (C5272 * C134 + C32815 * C143 + C5271 * C133 +
                      C32845 * C142 + C5270 * C132 + C32858 * C141) *
                         C15051 +
                     (C5272 * C122 + C32815 * C129 + C5271 * C121 +
                      C32845 * C128 + C5270 * C120 + C32858 * C127) *
                         C15057) *
                        C20880) *
                       C530) *
                      C32499 * C443)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                 (((((C6132 * C119 + C32450 * C126) * C15847 +
                     (C6132 * C131 + C32450 * C140) * C32868 + C6229 * C15848 +
                     C6230 * C32864 + C6231 * C15849 + C6232 * C32854 +
                     C6233 * C15850 + C6234 * C32836) *
                        C20880 +
                    (C27482 + C27483 + C27484 + C27485 + C27486 + C27487 +
                     C27488 + C27489) *
                        C32641) *
                       C530 -
                   ((C27490 + C27491 + C27492 + C27493 + C27494 + C27495 +
                     C27496 + C27497) *
                        C32641 +
                    (C27489 + C27488 + C27487 + C27486 + C27485 + C27484 +
                     C27483 + C27482) *
                        C20880) *
                       C531) *
                      C32499 * C442 +
                  (((C27758 + C27759 + C27760 + C27761 + C27762 + C27763 +
                     C27764 + C27765) *
                        C20880 +
                    (C7374 * C15847 + C7375 * C32868 + C7202 * C15848 +
                     C7203 * C32864 + C7204 * C15849 + C7205 * C32854 +
                     (C6132 * C7177 + C32450 * C7178) * C15850 +
                     (C6132 * C7179 + C32450 * C7180) * C32836) *
                        C32641) *
                       C531 -
                   ((C27765 + C27764 + C27763 + C27762 + C27761 + C27760 +
                     C27759 + C27758) *
                        C32641 +
                    (C6420 * C32836 + C6419 * C15850 + C6418 * C32854 +
                     C6417 * C15849 + C6416 * C32864 + C6415 * C15848 +
                     (C6132 * C132 + C32450 * C141) * C32868 +
                     (C6132 * C120 + C32450 * C127) * C15847) *
                        C20880) *
                       C530) *
                      C32499 * C443)) /
                    (p * q * std::sqrt(p + q));
    d2ee[49] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C5270 * C119 + C32858 * C126 + C5271 * C120 + C32845 * C127 +
             C5272 * C121 + C32815 * C128) *
                C15057 +
            (C5270 * C131 + C32858 * C140 + C5271 * C132 + C32845 * C141 +
             C5272 * C133 + C32815 * C142) *
                C15051 +
            (C5423 + C5424 + C5425) * C15058 +
            (C5426 + C5427 + C5428) * C32601) *
               C20880 +
           ((C10565 + C10566 + C10567) * C15057 +
            (C10568 + C10569 + C10570) * C15051 +
            (C6064 + C6063 + C6062) * C15058 +
            (C6061 + C6060 + C6059) * C32601) *
               C32641) *
              C32513 * C32499 * C110 -
          (((C5272 * C631 + C32815 * C636 + C5271 * C630 + C32845 * C635 +
             C5270 * C629 + C32858 * C634) *
                C32601 +
            (C5272 * C621 + C32815 * C626 + C5271 * C620 + C32845 * C625 +
             C5270 * C619 + C32858 * C624) *
                C15058 +
            (C10911 + C10910 + C10909) * C15051 +
            (C10908 + C10907 + C10906) * C15057) *
               C32641 +
           ((C5730 + C5729 + C5728) * C32601 +
            (C5727 + C5726 + C5725) * C15058 +
            (C5272 * C134 + C32815 * C143 + C5271 * C133 + C32845 * C142 +
             C5270 * C132 + C32858 * C141) *
                C15051 +
            (C5272 * C122 + C32815 * C129 + C5271 * C121 + C32845 * C128 +
             C5270 * C120 + C32858 * C127) *
                C15057) *
               C20880) *
              C32513 * C32499 * C111 +
          (((C5270 * C121 + C32858 * C128 + C5271 * C122 + C32845 * C129 +
             C5272 * C123 + C32815 * C130) *
                C15057 +
            (C5270 * C133 + C32858 * C142 + C5271 * C134 + C32845 * C143 +
             C5272 * C135 + C32815 * C144) *
                C15051 +
            (C5270 * C215 + C32858 * C230 + C5271 * C214 + C32845 * C229 +
             C5272 * C213 + C32815 * C228) *
                C15058 +
            (C5270 * C225 + C32858 * C245 + C5271 * C224 + C32845 * C244 +
             C5272 * C223 + C32815 * C243) *
                C32601) *
               C20880 +
           ((C5270 * C320 + C32858 * C335 + C5271 * C319 + C32845 * C334 +
             C5272 * C318 + C32815 * C333) *
                C15057 +
            (C5270 * C330 + C32858 * C350 + C5271 * C329 + C32845 * C349 +
             C5272 * C328 + C32815 * C348) *
                C15051 +
            (C5270 * C620 + C32858 * C625 + C5271 * C621 + C32845 * C626 +
             C5272 * C622 + C32815 * C627) *
                C15058 +
            (C5270 * C630 + C32858 * C635 + C5271 * C631 + C32845 * C636 +
             C5272 * C632 + C32815 * C637) *
                C32601) *
               C32641) *
              C32513 * C32499 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C5270 * C119 + C32858 * C126 + C5271 * C120 + C32845 * C127 +
             C5272 * C121 + C32815 * C128) *
                C15057 +
            (C5270 * C131 + C32858 * C140 + C5271 * C132 + C32845 * C141 +
             C5272 * C133 + C32815 * C142) *
                C15051 +
            (C5423 + C5424 + C5425) * C15058 +
            (C5426 + C5427 + C5428) * C32601) *
               C20880 +
           ((C10565 + C10566 + C10567) * C15057 +
            (C10568 + C10569 + C10570) * C15051 +
            (C6064 + C6063 + C6062) * C15058 +
            (C6061 + C6060 + C6059) * C32601) *
               C32641) *
              C32513 * C209 -
          (((C6053 + C6054 + C6055) * C32601 +
            (C6056 + C6057 + C6058) * C15058 +
            (C6059 + C6060 + C6061) * C15051 +
            (C6062 + C6063 + C6064) * C15057) *
               C32641 +
           ((C5434 + C5433 + C5432) * C32601 +
            (C5431 + C5430 + C5429) * C15058 +
            (C5428 + C5427 + C5426) * C15051 +
            (C5425 + C5424 + C5423) * C15057) *
               C20880) *
              C32513 * C210 +
          ((C5443 * C15057 + C5444 * C15051 + (C5440 + C5439 + C5438) * C15058 +
            (C5437 + C5436 + C5435) * C32601) *
               C20880 +
           ((C6058 + C6057 + C6056) * C15057 +
            (C6055 + C6054 + C6053) * C15051 +
            (C5270 * C1580 + C32858 * C1583 + C5271 * C1581 + C32845 * C1584 +
             C5272 * C1582 + C32815 * C1585) *
                C15058 +
            (C5270 * C1586 + C32858 * C1589 + C5271 * C1587 + C32845 * C1590 +
             C5272 * C1588 + C32815 * C1591) *
                C32601) *
               C32641) *
              C32513 * C211) *
         C32487) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C6132 * C119 + C32450 * C126) * C15847 +
            (C6132 * C131 + C32450 * C140) * C32868 + C6229 * C15848 +
            C6230 * C32864 + C6231 * C15849 + C6232 * C32854 + C6233 * C15850 +
            C6234 * C32836) *
               C20880 +
           (C7007 * C15847 + C7008 * C32868 + C6618 * C15848 + C6617 * C32864 +
            C6616 * C15849 + C6615 * C32854 + C6614 * C15850 + C6613 * C32836) *
               C32641) *
              C32513 * C32499 * C110 -
          ((C9919 * C32836 + C9918 * C15850 + C7201 * C32854 + C7200 * C15849 +
            C7199 * C32864 + C7198 * C15848 + C7373 * C32868 + C7372 * C15847) *
               C32641 +
           (C6420 * C32836 + C6419 * C15850 + C6418 * C32854 + C6417 * C15849 +
            C6416 * C32864 + C6415 * C15848 +
            (C6132 * C132 + C32450 * C141) * C32868 +
            (C6132 * C120 + C32450 * C127) * C15847) *
               C20880) *
              C32513 * C32499 * C111 +
          (((C6132 * C121 + C32450 * C128) * C15847 +
            (C6132 * C133 + C32450 * C142) * C32868 +
            (C6132 * C215 + C32450 * C230) * C15848 +
            (C6132 * C225 + C32450 * C245) * C32864 +
            (C6132 * C220 + C32450 * C235) * C15849 +
            (C6132 * C240 + C32450 * C250) * C32854 +
            (C6132 * C870 + C32450 * C879) * C15850 +
            (C6132 * C876 + C32450 * C888) * C32836) *
               C20880 +
           ((C6132 * C320 + C32450 * C335) * C15847 +
            (C6132 * C330 + C32450 * C350) * C32868 +
            (C6132 * C620 + C32450 * C625) * C15848 +
            (C6132 * C630 + C32450 * C635) * C32864 +
            (C6132 * C1062 + C32450 * C1074) * C15849 +
            (C6132 * C1071 + C32450 * C1089) * C32854 +
            (C6132 * C1582 + C32450 * C1585) * C15850 +
            (C6132 * C1588 + C32450 * C1591) * C32836) *
               C32641) *
              C32513 * C32499 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C6132 * C119 + C32450 * C126) * C15847 +
            (C6132 * C131 + C32450 * C140) * C32868 + C6229 * C15848 +
            C6230 * C32864 + C6231 * C15849 + C6232 * C32854 + C6233 * C15850 +
            C6234 * C32836) *
               C20880 +
           (C7007 * C15847 + C7008 * C32868 + C6618 * C15848 + C6617 * C32864 +
            C6616 * C15849 + C6615 * C32854 + C6614 * C15850 + C6613 * C32836) *
               C32641) *
              C32513 * C209 -
          ((C6611 * C32836 + C6612 * C15850 + C6613 * C32854 + C6614 * C15849 +
            C6615 * C32864 + C6616 * C15848 + C6617 * C32868 + C6618 * C15847) *
               C32641 +
           (C6236 * C32836 + C6235 * C15850 + C6234 * C32854 + C6233 * C15849 +
            C6232 * C32864 + C6231 * C15848 + C6230 * C32868 + C6229 * C15847) *
               C20880) *
              C32513 * C210 +
          ((C6231 * C15847 + C6232 * C32868 + C6233 * C15848 + C6234 * C32864 +
            C6235 * C15849 + C6236 * C32854 + C6238 * C15850 + C6237 * C32836) *
               C20880 +
           (C6616 * C15847 + C6615 * C32868 + C6614 * C15848 + C6613 * C32864 +
            C6612 * C15849 + C6611 * C32854 +
            (C6132 * C6590 + C32450 * C6591) * C15850 +
            (C6132 * C6592 + C32450 * C6593) * C32836) *
               C32641) *
              C32513 * C211) *
         C32487) /
            (p * q * std::sqrt(p + q));
    d2ee[50] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C31557 * C119 + C32776 * C126 + C31538 * C120 + C32460 * C127) *
                C7647 +
            (C31557 * C131 + C32776 * C140 + C31538 * C132 + C32460 * C141) *
                C7641 +
            (C7782 + C7783) * C7648 + (C7784 + C7785) * C7642 + C7798 * C7649 +
            C7799 * C7643 + C7800 * C7650 + C7801 * C32836) *
               C32554 * C32513 * C440 -
           ((C7794 + C7795) * C32836 + (C7796 + C7797) * C7650 +
            (C7793 + C7792) * C7643 + (C7791 + C7790) * C7649 +
            (C7789 + C7788) * C7642 + (C7787 + C7786) * C7648 +
            (C7785 + C7784) * C7641 + (C7783 + C7782) * C7647) *
               C32554 * C32513 * C441) *
              C442 +
          (((C8054 + C8055) * C7647 + (C8056 + C8057) * C7641 +
            (C8058 + C8059) * C7648 + (C8060 + C8061) * C7642 +
            (C8062 + C8063) * C7649 + (C8064 + C8065) * C7643 +
            (C31557 * C874 + C32776 * C883 + C31538 * C875 + C32460 * C884) *
                C7650 +
            (C31557 * C886 + C32776 * C892 + C31538 * C887 + C32460 * C893) *
                C32836) *
               C32554 * C32513 * C441 -
           ((C8065 + C8064) * C32836 + (C8063 + C8062) * C7650 +
            (C8061 + C8060) * C7643 + (C8059 + C8058) * C7649 +
            (C8057 + C8056) * C7642 + (C8055 + C8054) * C7648 +
            (C31538 * C133 + C32460 * C142 + C31557 * C132 + C32776 * C141) *
                C7641 +
            (C31538 * C121 + C32460 * C128 + C31557 * C120 + C32776 * C127) *
                C7647) *
               C32554 * C32513 * C440) *
              C443)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C2662 * C119 + C2656 * C126 + C2663 * C120 + C2657 * C127 +
             C2664 * C121 + C2658 * C128 + C2665 * C122 + C32830 * C129) *
                C2666 +
            (C2662 * C131 + C2656 * C140 + C2663 * C132 + C2657 * C141 +
             C2664 * C133 + C2658 * C142 + C2665 * C134 + C32830 * C143) *
                C32795 +
            (C2799 + C2800 + C2801 + C2802) * C2667 +
            (C2803 + C2804 + C2805 + C2806) * C32601) *
               C32554 * C32513 * C440 -
           ((C2807 + C2808 + C2809 + C2810) * C32601 +
            (C2811 + C2812 + C2813 + C2814) * C2667 +
            (C2806 + C2805 + C2804 + C2803) * C32795 +
            (C2802 + C2801 + C2800 + C2799) * C2666) *
               C32554 * C32513 * C441) *
              C442 +
          (((C3059 + C3060 + C3061 + C3062) * C2666 +
            (C3063 + C3064 + C3065 + C3066) * C32795 +
            (C2662 * C219 + C2656 * C234 + C2663 * C220 + C2657 * C235 +
             C2664 * C221 + C2658 * C236 + C2665 * C222 + C32830 * C237) *
                C2667 +
            (C2662 * C239 + C2656 * C249 + C2663 * C240 + C2657 * C250 +
             C2664 * C241 + C2658 * C251 + C2665 * C242 + C32830 * C252) *
                C32601) *
               C32554 * C32513 * C441 -
           ((C3066 + C3065 + C3064 + C3063) * C32601 +
            (C3062 + C3061 + C3060 + C3059) * C2667 +
            (C2665 * C135 + C32830 * C144 + C2664 * C134 + C2658 * C143 +
             C2663 * C133 + C2657 * C142 + C2662 * C132 + C2656 * C141) *
                C32795 +
            (C2665 * C123 + C32830 * C130 + C2664 * C122 + C2658 * C129 +
             C2663 * C121 + C2657 * C128 + C2662 * C120 + C2656 * C127) *
                C2666) *
               C32554 * C32513 * C440) *
              C443)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C31557 * C119 + C32776 * C126 + C31538 * C120 + C32460 * C127) *
                 C2666 +
             (C31557 * C131 + C32776 * C140 + C31538 * C132 + C32460 * C141) *
                 C32795 +
             (C7782 + C7783) * C2667 + (C7784 + C7785) * C32601) *
                C10305 +
            ((C8834 + C8835) * C2666 + (C8836 + C8837) * C32795 +
             C9468 * C2667 + C9469 * C32601) *
                C10306 +
            C12885 * C32829) *
               C32513 * C440 -
           (((C8838 + C8839) * C32601 + (C8840 + C8841) * C2667 +
             (C8842 + C8843) * C32795 + (C8844 + C8845) * C2666) *
                C32829 +
            (C9470 * C32601 + C9471 * C2667 + C9472 * C32795 + C9473 * C2666) *
                C10306 +
            ((C7789 + C7788) * C32601 + (C7787 + C7786) * C2667 +
             (C7785 + C7784) * C32795 + (C7783 + C7782) * C2666) *
                C10305) *
               C32513 * C441) *
              C442 +
          ((((C8054 + C8055) * C2666 + (C8056 + C8057) * C32795 +
             (C8058 + C8059) * C2667 + (C8060 + C8061) * C32601) *
                C10305 +
            ((C9060 + C9061) * C2666 + (C9062 + C9063) * C32795 +
             (C9064 + C9065) * C2667 + (C9066 + C9067) * C32601) *
                C10306 +
            ((C13088 + C13089) * C2666 + (C13090 + C13091) * C32795 +
             (C31557 * C1069 + C32776 * C1084 + C31538 * C1070 +
              C32460 * C1085) *
                 C2667 +
             (C31557 * C1087 + C32776 * C1096 + C31538 * C1088 +
              C32460 * C1097) *
                 C32601) *
                C32829) *
               C32513 * C441 -
           (((C13091 + C13090) * C32601 + (C13089 + C13088) * C2667 +
             (C31538 * C345 + C32460 * C355 + C31557 * C344 + C32776 * C354) *
                 C32795 +
             (C31538 * C325 + C32460 * C340 + C31557 * C324 + C32776 * C339) *
                 C2666) *
                C32829 +
            ((C9063 + C9062) * C32601 + (C9061 + C9060) * C2667 +
             (C9273 + C9272) * C32795 + (C9271 + C9270) * C2666) *
                C10306 +
            ((C8057 + C8056) * C32601 + (C8055 + C8054) * C2667 +
             (C31538 * C133 + C32460 * C142 + C31557 * C132 + C32776 * C141) *
                 C32795 +
             (C31538 * C121 + C32460 * C128 + C31557 * C120 + C32776 * C127) *
                 C2666) *
                C10305) *
               C32513 * C440) *
              C443)) /
            (p * q * std::sqrt(p + q));
    d2ee[51] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C31557 * C119 + C32776 * C126 + C31538 * C120 + C32460 * C127) *
                C7647 +
            (C31557 * C131 + C32776 * C140 + C31538 * C132 + C32460 * C141) *
                C7641 +
            (C7782 + C7783) * C7648 + (C7784 + C7785) * C7642 + C7798 * C7649 +
            C7799 * C7643 + C7800 * C7650 + C7801 * C32836) *
               C32554 * C530 -
           ((C8350 + C8351) * C32836 + (C8352 + C8353) * C7650 +
            (C8354 + C8355) * C7643 + (C8356 + C8357) * C7649 +
            (C8358 + C8359) * C7642 + (C8360 + C8361) * C7648 +
            (C31538 * C331 + C32460 * C351 + C31557 * C332 + C32776 * C352) *
                C7641 +
            (C31538 * C321 + C32460 * C336 + C31557 * C322 + C32776 * C337) *
                C7647) *
               C32554 * C531) *
              C440 +
          (((C8361 + C8360) * C7647 + (C8359 + C8358) * C7641 +
            (C8357 + C8356) * C7648 + (C8355 + C8354) * C7642 +
            (C8353 + C8352) * C7649 + (C8351 + C8350) * C7643 +
            (C31557 * C6300 + C32776 * C6304 + C31538 * C6504 +
             C32460 * C6505) *
                C7650 +
            (C31557 * C6303 + C32776 * C6309 + C31538 * C6506 +
             C32460 * C6507) *
                C32836) *
               C32554 * C531 -
           ((C7794 + C7795) * C32836 + (C7796 + C7797) * C7650 +
            (C7793 + C7792) * C7643 + (C7791 + C7790) * C7649 +
            (C7789 + C7788) * C7642 + (C7787 + C7786) * C7648 +
            (C7785 + C7784) * C7641 + (C7783 + C7782) * C7647) *
               C32554 * C530) *
              C441) *
         C32487) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C2662 * C119 + C2656 * C126 + C2663 * C120 + C2657 * C127 +
             C2664 * C121 + C2658 * C128 + C2665 * C122 + C32830 * C129) *
                C2666 +
            (C2662 * C131 + C2656 * C140 + C2663 * C132 + C2657 * C141 +
             C2664 * C133 + C2658 * C142 + C2665 * C134 + C32830 * C143) *
                C32795 +
            (C2799 + C2800 + C2801 + C2802) * C2667 +
            (C2803 + C2804 + C2805 + C2806) * C32601) *
               C32554 * C530 -
           ((C3343 + C3344 + C3345 + C3346) * C32601 +
            (C3347 + C3348 + C3349 + C3350) * C2667 +
            (C2665 * C329 + C32830 * C349 + C2664 * C330 + C2658 * C350 +
             C2663 * C331 + C2657 * C351 + C2662 * C332 + C2656 * C352) *
                C32795 +
            (C2665 * C319 + C32830 * C334 + C2664 * C320 + C2658 * C335 +
             C2663 * C321 + C2657 * C336 + C2662 * C322 + C2656 * C337) *
                C2666) *
               C32554 * C531) *
              C440 +
          (((C3350 + C3349 + C3348 + C3347) * C2666 +
            (C3346 + C3345 + C3344 + C3343) * C32795 +
            (C2662 * C1064 + C2656 * C1076 + C2663 * C1063 + C2657 * C1075 +
             C2664 * C1062 + C2658 * C1074 + C2665 * C1430 + C32830 * C1431) *
                C2667 +
            (C2662 * C1073 + C2656 * C1091 + C2663 * C1072 + C2657 * C1090 +
             C2664 * C1071 + C2658 * C1089 + C2665 * C1432 + C32830 * C1433) *
                C32601) *
               C32554 * C531 -
           ((C2807 + C2808 + C2809 + C2810) * C32601 +
            (C2811 + C2812 + C2813 + C2814) * C2667 +
            (C2806 + C2805 + C2804 + C2803) * C32795 +
            (C2802 + C2801 + C2800 + C2799) * C2666) *
               C32554 * C530) *
              C441) *
         C32487) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C31557 * C119 + C32776 * C126 + C31538 * C120 + C32460 * C127) *
                 C2666 +
             (C31557 * C131 + C32776 * C140 + C31538 * C132 + C32460 * C141) *
                 C32795 +
             (C7782 + C7783) * C2667 + (C7784 + C7785) * C32601) *
                C10305 +
            ((C8834 + C8835) * C2666 + (C8836 + C8837) * C32795 +
             C9468 * C2667 + C9469 * C32601) *
                C10306 +
            C12885 * C32829) *
               C530 -
           (((C12875 + C12876) * C32601 + (C12877 + C12878) * C2667 +
             (C12879 + C12880) * C32795 + (C12881 + C12882) * C2666) *
                C32829 +
            (C13492 * C32601 + C13493 * C2667 + (C8846 + C8847) * C32795 +
             (C8848 + C8849) * C2666) *
                C10306 +
            (C9472 * C32601 + C9473 * C2667 + (C8837 + C8836) * C32795 +
             (C8835 + C8834) * C2666) *
                C10305) *
               C531) *
              C440 +
          (((C9468 * C2666 + C9469 * C32795 + C8654 * C2667 + C8655 * C32601) *
                C10305 +
            (C12853 * C2666 + C12854 * C32795 + (C8841 + C8840) * C2667 +
             (C8839 + C8838) * C32601) *
                C10306 +
            ((C12878 + C12877) * C2666 + (C12876 + C12875) * C32795 +
             (C31557 * C6966 + C32776 * C6970 + C31538 * C7351 +
              C32460 * C7352) *
                 C2667 +
             (C31557 * C6969 + C32776 * C6975 + C31538 * C7353 +
              C32460 * C7354) *
                 C32601) *
                C32829) *
               C531 -
           (((C8838 + C8839) * C32601 + (C8840 + C8841) * C2667 +
             C13492 * C32795 + C13493 * C2666) *
                C32829 +
            (C9470 * C32601 + C9471 * C2667 + C9472 * C32795 + C9473 * C2666) *
                C10306 +
            ((C7789 + C7788) * C32601 + (C7787 + C7786) * C2667 +
             (C7785 + C7784) * C32795 + (C7783 + C7782) * C2666) *
                C10305) *
               C530) *
              C441) *
         C32487) /
            (p * q * std::sqrt(p + q));
    d2ee[52] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((C2662 * C119 + C2656 * C126 + C2663 * C120 + C2657 * C127 +
                C2664 * C121 + C2658 * C128 + C2665 * C122 + C32830 * C129) *
                   C2666 +
               (C2662 * C131 + C2656 * C140 + C2663 * C132 + C2657 * C141 +
                C2664 * C133 + C2658 * C142 + C2665 * C134 + C32830 * C143) *
                   C32795 +
               (C2662 * C217 + C2656 * C232 + C2663 * C216 + C2657 * C231 +
                C2664 * C215 + C2658 * C230 + C2665 * C214 + C32830 * C229) *
                   C2667 +
               (C2662 * C227 + C2656 * C247 + C2663 * C226 + C2657 * C246 +
                C2664 * C225 + C2658 * C245 + C2665 * C224 + C32830 * C244) *
                   C32601) *
                  C32554 * C32513 * C32499 * C110 -
              ((C2665 * C223 + C32830 * C243 + C2664 * C224 + C2658 * C244 +
                C2663 * C225 + C2657 * C245 + C2662 * C226 + C2656 * C246) *
                   C32601 +
               (C2665 * C213 + C32830 * C228 + C2664 * C214 + C2658 * C229 +
                C2663 * C215 + C2657 * C230 + C2662 * C216 + C2656 * C231) *
                   C2667 +
               (C2665 * C135 + C32830 * C144 + C2664 * C134 + C2658 * C143 +
                C2663 * C133 + C2657 * C142 + C2662 * C132 + C2656 * C141) *
                   C32795 +
               (C2665 * C123 + C32830 * C130 + C2664 * C122 + C2658 * C129 +
                C2663 * C121 + C2657 * C128 + C2662 * C120 + C2656 * C127) *
                   C2666) *
                  C32554 * C32513 * C32499 * C111 +
              ((C2662 * C121 + C2656 * C128 + C2663 * C122 + C2657 * C129 +
                C2664 * C123 + C2658 * C130 + C2665 * C124 + C32830 * C137) *
                   C2666 +
               (C2662 * C133 + C2656 * C142 + C2663 * C134 + C2657 * C143 +
                C2664 * C135 + C2658 * C144 + C2665 * C136 + C32830 * C145) *
                   C32795 +
               (C2662 * C215 + C2656 * C230 + C2663 * C214 + C2657 * C229 +
                C2664 * C213 + C2658 * C228 + C2665 * C444 + C32830 * C445) *
                   C2667 +
               (C2662 * C225 + C2656 * C245 + C2663 * C224 + C2657 * C244 +
                C2664 * C223 + C2658 * C243 + C2665 * C446 + C32830 * C447) *
                   C32601) *
                  C32554 * C32513 * C32499 * C112) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((C2662 * C119 + C2656 * C126 + C2663 * C120 + C2657 * C127 +
                C2664 * C121 + C2658 * C128 + C2665 * C122 + C32830 * C129) *
                   C2666 +
               (C2662 * C131 + C2656 * C140 + C2663 * C132 + C2657 * C141 +
                C2664 * C133 + C2658 * C142 + C2665 * C134 + C32830 * C143) *
                   C32795 +
               (C2799 + C2800 + C2801 + C2802) * C2667 +
               (C2803 + C2804 + C2805 + C2806) * C32601) *
                  C32554 * C32513 * C209 -
              ((C2807 + C2808 + C2809 + C2810) * C32601 +
               (C2811 + C2812 + C2813 + C2814) * C2667 +
               (C2806 + C2805 + C2804 + C2803) * C32795 +
               (C2802 + C2801 + C2800 + C2799) * C2666) *
                  C32554 * C32513 * C210 +
              ((C2814 + C2813 + C2812 + C2811) * C2666 +
               (C2810 + C2809 + C2808 + C2807) * C32795 +
               (C2662 * C872 + C2656 * C881 + C2663 * C871 + C2657 * C880 +
                C2664 * C870 + C2658 * C879 + C2665 * C1244 + C32830 * C1245) *
                   C2667 +
               (C2662 * C878 + C2656 * C890 + C2663 * C877 + C2657 * C889 +
                C2664 * C876 + C2658 * C888 + C2665 * C1246 + C32830 * C1247) *
                   C32601) *
                  C32554 * C32513 * C211) *
             C32487) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C2662 * C119 + C2656 * C126 + C2663 * C120 + C2657 * C127 +
            C2664 * C121 + C2658 * C128 + C2665 * C122 + C32830 * C129) *
               C2666 +
           (C2662 * C131 + C2656 * C140 + C2663 * C132 + C2657 * C141 +
            C2664 * C133 + C2658 * C142 + C2665 * C134 + C32830 * C143) *
               C32795 +
           (C2799 + C2800 + C2801 + C2802) * C2667 +
           (C2803 + C2804 + C2805 + C2806) * C32601) *
              C32554 * C315 -
          ((C2665 * C631 + C32830 * C636 + C2664 * C630 + C2658 * C635 +
            C2663 * C629 + C2657 * C634 + C2662 * C628 + C2656 * C633) *
               C32601 +
           (C2665 * C621 + C32830 * C626 + C2664 * C620 + C2658 * C625 +
            C2663 * C619 + C2657 * C624 + C2662 * C618 + C2656 * C623) *
               C2667 +
           (C2665 * C329 + C32830 * C349 + C2664 * C330 + C2658 * C350 +
            C2663 * C331 + C2657 * C351 + C2662 * C332 + C2656 * C352) *
               C32795 +
           (C2665 * C319 + C32830 * C334 + C2664 * C320 + C2658 * C335 +
            C2663 * C321 + C2657 * C336 + C2662 * C322 + C2656 * C337) *
               C2666) *
              C32554 * C316 +
          ((C2662 * C323 + C2656 * C338 + C2663 * C324 + C2657 * C339 +
            C2664 * C325 + C2658 * C340 + C2665 * C326 + C32830 * C341) *
               C2666 +
           (C2662 * C343 + C2656 * C353 + C2663 * C344 + C2657 * C354 +
            C2664 * C345 + C2658 * C355 + C2665 * C346 + C32830 * C356) *
               C32795 +
           (C2662 * C1065 + C2656 * C1077 + C2663 * C1066 + C2657 * C1078 +
            C2664 * C1067 + C2658 * C1079 + C2665 * C2192 + C32830 * C2193) *
               C2667 +
           (C2662 * C1080 + C2656 * C1092 + C2663 * C1081 + C2657 * C1093 +
            C2664 * C1082 + C2658 * C1094 + C2665 * C2194 + C32830 * C2195) *
               C32601) *
              C32554 * C317) *
         C32499 * C32487) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C31557 * C119 + C32776 * C126 + C31538 * C120 + C32460 * C127) *
               C7647 +
           (C31557 * C131 + C32776 * C140 + C31538 * C132 + C32460 * C141) *
               C7641 +
           (C31557 * C217 + C32776 * C232 + C31538 * C216 + C32460 * C231) *
               C7648 +
           (C31557 * C227 + C32776 * C247 + C31538 * C226 + C32460 * C246) *
               C7642 +
           (C31557 * C218 + C32776 * C233 + C31538 * C219 + C32460 * C234) *
               C7649 +
           (C31557 * C238 + C32776 * C248 + C31538 * C239 + C32460 * C249) *
               C7643 +
           (C31557 * C872 + C32776 * C881 + C31538 * C871 + C32460 * C880) *
               C7650 +
           (C31557 * C878 + C32776 * C890 + C31538 * C877 + C32460 * C889) *
               C32836) *
              C32554 * C32513 * C32499 * C110 -
          ((C31538 * C876 + C32460 * C888 + C31557 * C877 + C32776 * C889) *
               C32836 +
           (C31538 * C870 + C32460 * C879 + C31557 * C871 + C32776 * C880) *
               C7650 +
           (C31538 * C240 + C32460 * C250 + C31557 * C239 + C32776 * C249) *
               C7643 +
           (C31538 * C220 + C32460 * C235 + C31557 * C219 + C32776 * C234) *
               C7649 +
           (C31538 * C225 + C32460 * C245 + C31557 * C226 + C32776 * C246) *
               C7642 +
           (C31538 * C215 + C32460 * C230 + C31557 * C216 + C32776 * C231) *
               C7648 +
           (C31538 * C133 + C32460 * C142 + C31557 * C132 + C32776 * C141) *
               C7641 +
           (C31538 * C121 + C32460 * C128 + C31557 * C120 + C32776 * C127) *
               C7647) *
              C32554 * C32513 * C32499 * C111 +
          ((C31557 * C121 + C32776 * C128 + C31538 * C122 + C32460 * C129) *
               C7647 +
           (C31557 * C133 + C32776 * C142 + C31538 * C134 + C32460 * C143) *
               C7641 +
           (C31557 * C215 + C32776 * C230 + C31538 * C214 + C32460 * C229) *
               C7648 +
           (C31557 * C225 + C32776 * C245 + C31538 * C224 + C32460 * C244) *
               C7642 +
           (C31557 * C220 + C32776 * C235 + C31538 * C221 + C32460 * C236) *
               C7649 +
           (C31557 * C240 + C32776 * C250 + C31538 * C241 + C32460 * C251) *
               C7643 +
           (C31557 * C870 + C32776 * C879 + C31538 * C1244 + C32460 * C1245) *
               C7650 +
           (C31557 * C876 + C32776 * C888 + C31538 * C1246 + C32460 * C1247) *
               C32836) *
              C32554 * C32513 * C32499 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C31557 * C119 + C32776 * C126 + C31538 * C120 + C32460 * C127) *
               C7647 +
           (C31557 * C131 + C32776 * C140 + C31538 * C132 + C32460 * C141) *
               C7641 +
           (C7782 + C7783) * C7648 + (C7784 + C7785) * C7642 + C7798 * C7649 +
           C7799 * C7643 + C7800 * C7650 + C7801 * C32836) *
              C32554 * C32513 * C209 -
          ((C7794 + C7795) * C32836 + (C7796 + C7797) * C7650 +
           (C7793 + C7792) * C7643 + (C7791 + C7790) * C7649 +
           (C7789 + C7788) * C7642 + (C7787 + C7786) * C7648 +
           (C7785 + C7784) * C7641 + (C7783 + C7782) * C7647) *
              C32554 * C32513 * C210 +
          (C7798 * C7647 + C7799 * C7641 + C7800 * C7648 + C7801 * C7642 +
           (C7797 + C7796) * C7649 + (C7795 + C7794) * C7643 +
           (C31557 * C6200 + C32776 * C6203 + C31538 * C6394 + C32460 * C6395) *
               C7650 +
           (C31557 * C6202 + C32776 * C6206 + C31538 * C6396 + C32460 * C6397) *
               C32836) *
              C32554 * C32513 * C211) *
         C32487) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C31557 * C119 + C32776 * C126 + C31538 * C120 + C32460 * C127) *
               C7647 +
           (C31557 * C131 + C32776 * C140 + C31538 * C132 + C32460 * C141) *
               C7641 +
           (C7782 + C7783) * C7648 + (C7784 + C7785) * C7642 + C7798 * C7649 +
           C7799 * C7643 + C7800 * C7650 + C7801 * C32836) *
              C32554 * C315 -
          ((C31538 * C1587 + C32460 * C1590 + C31557 * C1586 + C32776 * C1589) *
               C32836 +
           (C31538 * C1581 + C32460 * C1584 + C31557 * C1580 + C32776 * C1583) *
               C7650 +
           (C31538 * C1072 + C32460 * C1090 + C31557 * C1073 + C32776 * C1091) *
               C7643 +
           (C31538 * C1063 + C32460 * C1075 + C31557 * C1064 + C32776 * C1076) *
               C7649 +
           (C31538 * C629 + C32460 * C634 + C31557 * C628 + C32776 * C633) *
               C7642 +
           (C31538 * C619 + C32460 * C624 + C31557 * C618 + C32776 * C623) *
               C7648 +
           (C31538 * C331 + C32460 * C351 + C31557 * C332 + C32776 * C352) *
               C7641 +
           (C31538 * C321 + C32460 * C336 + C31557 * C322 + C32776 * C337) *
               C7647) *
              C32554 * C316 +
          ((C31557 * C323 + C32776 * C338 + C31538 * C324 + C32460 * C339) *
               C7647 +
           (C31557 * C343 + C32776 * C353 + C31538 * C344 + C32460 * C354) *
               C7641 +
           (C31557 * C1065 + C32776 * C1077 + C31538 * C1066 + C32460 * C1078) *
               C7648 +
           (C31557 * C1080 + C32776 * C1092 + C31538 * C1081 + C32460 * C1093) *
               C7642 +
           (C31557 * C1068 + C32776 * C1083 + C31538 * C1069 + C32460 * C1084) *
               C7649 +
           (C31557 * C1086 + C32776 * C1095 + C31538 * C1087 + C32460 * C1096) *
               C7643 +
           (C31557 * C6301 + C32776 * C6305 + C31538 * C7177 + C32460 * C7178) *
               C7650 +
           (C31557 * C6306 + C32776 * C6310 + C31538 * C7179 + C32460 * C7180) *
               C32836) *
              C32554 * C317) *
         C32499 * C32487) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C31557 * C119 + C32776 * C126 + C31538 * C120 + C32460 * C127) *
                C2666 +
            (C31557 * C131 + C32776 * C140 + C31538 * C132 + C32460 * C141) *
                C32795 +
            (C7782 + C7783) * C2667 + (C7784 + C7785) * C32601) *
               C10305 +
           ((C8834 + C8835) * C2666 + (C8836 + C8837) * C32795 + C9468 * C2667 +
            C9469 * C32601) *
               C10306 +
           ((C8849 + C8848) * C2666 + (C8847 + C8846) * C32795 +
            (C8845 + C8844) * C2667 + (C8843 + C8842) * C32601) *
               C32829) *
              C32513 * C32499 * C110 -
          (((C31538 * C1082 + C32460 * C1094 + C31557 * C1081 +
             C32776 * C1093) *
                C32601 +
            (C31538 * C1067 + C32460 * C1079 + C31557 * C1066 +
             C32776 * C1078) *
                C2667 +
            (C31538 * C345 + C32460 * C355 + C31557 * C344 + C32776 * C354) *
                C32795 +
            (C31538 * C325 + C32460 * C340 + C31557 * C324 + C32776 * C339) *
                C2666) *
               C32829 +
           ((C9063 + C9062) * C32601 + (C9061 + C9060) * C2667 +
            (C9273 + C9272) * C32795 + (C9271 + C9270) * C2666) *
               C10306 +
           ((C8057 + C8056) * C32601 + (C8055 + C8054) * C2667 +
            (C31538 * C133 + C32460 * C142 + C31557 * C132 + C32776 * C141) *
                C32795 +
            (C31538 * C121 + C32460 * C128 + C31557 * C120 + C32776 * C127) *
                C2666) *
               C10305) *
              C32513 * C32499 * C111 +
          (((C31557 * C121 + C32776 * C128 + C31538 * C122 + C32460 * C129) *
                C2666 +
            (C31557 * C133 + C32776 * C142 + C31538 * C134 + C32460 * C143) *
                C32795 +
            (C31557 * C215 + C32776 * C230 + C31538 * C214 + C32460 * C229) *
                C2667 +
            (C31557 * C225 + C32776 * C245 + C31538 * C224 + C32460 * C244) *
                C32601) *
               C10305 +
           ((C31557 * C320 + C32776 * C335 + C31538 * C319 + C32460 * C334) *
                C2666 +
            (C31557 * C330 + C32776 * C350 + C31538 * C329 + C32460 * C349) *
                C32795 +
            (C31557 * C620 + C32776 * C625 + C31538 * C621 + C32460 * C626) *
                C2667 +
            (C31557 * C630 + C32776 * C635 + C31538 * C631 + C32460 * C636) *
                C32601) *
               C10306 +
           ((C31557 * C325 + C32776 * C340 + C31538 * C326 + C32460 * C341) *
                C2666 +
            (C31557 * C345 + C32776 * C355 + C31538 * C346 + C32460 * C356) *
                C32795 +
            (C31557 * C1067 + C32776 * C1079 + C31538 * C2192 +
             C32460 * C2193) *
                C2667 +
            (C31557 * C1082 + C32776 * C1094 + C31538 * C2194 +
             C32460 * C2195) *
                C32601) *
               C32829) *
              C32513 * C32499 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C31557 * C119 + C32776 * C126 + C31538 * C120 + C32460 * C127) *
                C2666 +
            (C31557 * C131 + C32776 * C140 + C31538 * C132 + C32460 * C141) *
                C32795 +
            (C7782 + C7783) * C2667 + (C7784 + C7785) * C32601) *
               C10305 +
           ((C8834 + C8835) * C2666 + (C8836 + C8837) * C32795 + C9468 * C2667 +
            C9469 * C32601) *
               C10306 +
           ((C8849 + C8848) * C2666 + (C8847 + C8846) * C32795 +
            (C8845 + C8844) * C2667 + (C8843 + C8842) * C32601) *
               C32829) *
              C32513 * C209 -
          (((C8838 + C8839) * C32601 + (C8840 + C8841) * C2667 +
            (C8842 + C8843) * C32795 + (C8844 + C8845) * C2666) *
               C32829 +
           (C9470 * C32601 + C9471 * C2667 + C9472 * C32795 + C9473 * C2666) *
               C10306 +
           ((C7789 + C7788) * C32601 + (C7787 + C7786) * C2667 +
            (C7785 + C7784) * C32795 + (C7783 + C7782) * C2666) *
               C10305) *
              C32513 * C210 +
          ((C7798 * C2666 + C7799 * C32795 + C7800 * C2667 + C7801 * C32601) *
               C10305 +
           (C8654 * C2666 + C8655 * C32795 + (C8353 + C8352) * C2667 +
            (C8351 + C8350) * C32601) *
               C10306 +
           ((C8841 + C8840) * C2666 + (C8839 + C8838) * C32795 +
            (C31557 * C6301 + C32776 * C6305 + C31538 * C7177 +
             C32460 * C7178) *
                C2667 +
            (C31557 * C6306 + C32776 * C6310 + C31538 * C7179 +
             C32460 * C7180) *
                C32601) *
               C32829) *
              C32513 * C211) *
         C32487) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C31557 * C119 + C32776 * C126 + C31538 * C120 + C32460 * C127) *
                C2666 +
            (C31557 * C131 + C32776 * C140 + C31538 * C132 + C32460 * C141) *
                C32795 +
            (C7782 + C7783) * C2667 + (C7784 + C7785) * C32601) *
               C10305 +
           ((C8834 + C8835) * C2666 + (C8836 + C8837) * C32795 + C9468 * C2667 +
            C9469 * C32601) *
               C10306 +
           C12885 * C32829) *
              C315 -
          (((C12875 + C12876) * C32601 + (C12877 + C12878) * C2667 +
            (C12879 + C12880) * C32795 + (C12881 + C12882) * C2666) *
               C32829 +
           ((C8842 + C8843) * C32601 + (C8844 + C8845) * C2667 +
            (C8846 + C8847) * C32795 + (C8848 + C8849) * C2666) *
               C10306 +
           (C9472 * C32601 + C9473 * C2667 + (C8837 + C8836) * C32795 +
            (C8835 + C8834) * C2666) *
               C10305) *
              C316 +
          (C12885 * C10305 +
           ((C12882 + C12881) * C2666 + (C12880 + C12879) * C32795 +
            (C12878 + C12877) * C2667 + (C12876 + C12875) * C32601) *
               C10306 +
           ((C31557 * C1964 + C32776 * C1973 + C31538 * C1965 +
             C32460 * C1974) *
                C2666 +
            (C31557 * C1976 + C32776 * C1982 + C31538 * C1977 +
             C32460 * C1983) *
                C32795 +
            (C31557 * C6967 + C32776 * C6971 + C31538 * C12202 +
             C32460 * C12203) *
                C2667 +
            (C31557 * C6972 + C32776 * C6976 + C31538 * C12204 +
             C32460 * C12205) *
                C32601) *
               C32829) *
              C317) *
         C32499 * C32487) /
            (p * q * std::sqrt(p + q));
    d2ee[53] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C31557 * C119 + C32776 * C126 + C31538 * C120 + C32460 * C127) *
                C7647 +
            (C31557 * C131 + C32776 * C140 + C31538 * C132 + C32460 * C141) *
                C7641 +
            (C7782 + C7783) * C7648 + (C7784 + C7785) * C7642 + C7798 * C7649 +
            C7799 * C7643 + C7800 * C7650 + C7801 * C32836) *
               C32554 * C530 -
           ((C31538 * C1587 + C32460 * C1590 + C31557 * C1586 +
             C32776 * C1589) *
                C32836 +
            (C31538 * C1581 + C32460 * C1584 + C31557 * C1580 +
             C32776 * C1583) *
                C7650 +
            (C31538 * C1072 + C32460 * C1090 + C31557 * C1073 +
             C32776 * C1091) *
                C7643 +
            (C31538 * C1063 + C32460 * C1075 + C31557 * C1064 +
             C32776 * C1076) *
                C7649 +
            (C31538 * C629 + C32460 * C634 + C31557 * C628 + C32776 * C633) *
                C7642 +
            (C31538 * C619 + C32460 * C624 + C31557 * C618 + C32776 * C623) *
                C7648 +
            (C31538 * C331 + C32460 * C351 + C31557 * C332 + C32776 * C352) *
                C7641 +
            (C31538 * C321 + C32460 * C336 + C31557 * C322 + C32776 * C337) *
                C7647) *
               C32554 * C531) *
              C32499 * C442 +
          (((C31557 * C321 + C32776 * C336 + C31538 * C320 + C32460 * C335) *
                C7647 +
            (C31557 * C331 + C32776 * C351 + C31538 * C330 + C32460 * C350) *
                C7641 +
            (C31557 * C619 + C32776 * C624 + C31538 * C620 + C32460 * C625) *
                C7648 +
            (C31557 * C629 + C32776 * C634 + C31538 * C630 + C32460 * C635) *
                C7642 +
            (C31557 * C1063 + C32776 * C1075 + C31538 * C1062 +
             C32460 * C1074) *
                C7649 +
            (C31557 * C1072 + C32776 * C1090 + C31538 * C1071 +
             C32460 * C1089) *
                C7643 +
            (C31557 * C1581 + C32776 * C1584 + C31538 * C1582 +
             C32460 * C1585) *
                C7650 +
            (C31557 * C1587 + C32776 * C1590 + C31538 * C1588 +
             C32460 * C1591) *
                C32836) *
               C32554 * C531 -
           ((C8065 + C8064) * C32836 + (C8063 + C8062) * C7650 +
            (C8061 + C8060) * C7643 + (C8059 + C8058) * C7649 +
            (C8057 + C8056) * C7642 + (C8055 + C8054) * C7648 +
            (C31538 * C133 + C32460 * C142 + C31557 * C132 + C32776 * C141) *
                C7641 +
            (C31538 * C121 + C32460 * C128 + C31557 * C120 + C32776 * C127) *
                C7647) *
               C32554 * C530) *
              C32499 * C443)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C2662 * C119 + C2656 * C126 + C2663 * C120 + C2657 * C127 +
             C2664 * C121 + C2658 * C128 + C2665 * C122 + C32830 * C129) *
                C2666 +
            (C2662 * C131 + C2656 * C140 + C2663 * C132 + C2657 * C141 +
             C2664 * C133 + C2658 * C142 + C2665 * C134 + C32830 * C143) *
                C32795 +
            (C2799 + C2800 + C2801 + C2802) * C2667 +
            (C2803 + C2804 + C2805 + C2806) * C32601) *
               C32554 * C530 -
           ((C2665 * C631 + C32830 * C636 + C2664 * C630 + C2658 * C635 +
             C2663 * C629 + C2657 * C634 + C2662 * C628 + C2656 * C633) *
                C32601 +
            (C2665 * C621 + C32830 * C626 + C2664 * C620 + C2658 * C625 +
             C2663 * C619 + C2657 * C624 + C2662 * C618 + C2656 * C623) *
                C2667 +
            (C2665 * C329 + C32830 * C349 + C2664 * C330 + C2658 * C350 +
             C2663 * C331 + C2657 * C351 + C2662 * C332 + C2656 * C352) *
                C32795 +
            (C2665 * C319 + C32830 * C334 + C2664 * C320 + C2658 * C335 +
             C2663 * C321 + C2657 * C336 + C2662 * C322 + C2656 * C337) *
                C2666) *
               C32554 * C531) *
              C32499 * C442 +
          (((C2662 * C321 + C2656 * C336 + C2663 * C320 + C2657 * C335 +
             C2664 * C319 + C2658 * C334 + C2665 * C318 + C32830 * C333) *
                C2666 +
            (C2662 * C331 + C2656 * C351 + C2663 * C330 + C2657 * C350 +
             C2664 * C329 + C2658 * C349 + C2665 * C328 + C32830 * C348) *
                C32795 +
            (C2662 * C619 + C2656 * C624 + C2663 * C620 + C2657 * C625 +
             C2664 * C621 + C2658 * C626 + C2665 * C622 + C32830 * C627) *
                C2667 +
            (C2662 * C629 + C2656 * C634 + C2663 * C630 + C2657 * C635 +
             C2664 * C631 + C2658 * C636 + C2665 * C632 + C32830 * C637) *
                C32601) *
               C32554 * C531 -
           ((C3066 + C3065 + C3064 + C3063) * C32601 +
            (C3062 + C3061 + C3060 + C3059) * C2667 +
            (C2665 * C135 + C32830 * C144 + C2664 * C134 + C2658 * C143 +
             C2663 * C133 + C2657 * C142 + C2662 * C132 + C2656 * C141) *
                C32795 +
            (C2665 * C123 + C32830 * C130 + C2664 * C122 + C2658 * C129 +
             C2663 * C121 + C2657 * C128 + C2662 * C120 + C2656 * C127) *
                C2666) *
               C32554 * C530) *
              C32499 * C443)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C31557 * C119 + C32776 * C126 + C31538 * C120 + C32460 * C127) *
                 C2666 +
             (C31557 * C131 + C32776 * C140 + C31538 * C132 + C32460 * C141) *
                 C32795 +
             (C7782 + C7783) * C2667 + (C7784 + C7785) * C32601) *
                C10305 +
            ((C8834 + C8835) * C2666 + (C8836 + C8837) * C32795 +
             C9468 * C2667 + C9469 * C32601) *
                C10306 +
            C12885 * C32829) *
               C530 -
           (((C12875 + C12876) * C32601 + (C12877 + C12878) * C2667 +
             (C12879 + C12880) * C32795 + (C12881 + C12882) * C2666) *
                C32829 +
            ((C8842 + C8843) * C32601 + (C8844 + C8845) * C2667 +
             (C8846 + C8847) * C32795 + (C8848 + C8849) * C2666) *
                C10306 +
            (C9472 * C32601 + C9473 * C2667 + (C8837 + C8836) * C32795 +
             (C8835 + C8834) * C2666) *
                C10305) *
               C531) *
              C32499 * C442 +
          ((((C9270 + C9271) * C2666 + (C9272 + C9273) * C32795 +
             (C9060 + C9061) * C2667 + (C9062 + C9063) * C32601) *
                C10305 +
            ((C13294 + C13295) * C2666 + (C13296 + C13297) * C32795 +
             (C13088 + C13089) * C2667 + (C13090 + C13091) * C32601) *
                C10306 +
            ((C31557 * C1962 + C32776 * C1971 + C31538 * C1961 +
              C32460 * C1970) *
                 C2666 +
             (C31557 * C1968 + C32776 * C1980 + C31538 * C1967 +
              C32460 * C1979) *
                 C32795 +
             (C31557 * C2529 + C32776 * C2532 + C31538 * C2530 +
              C32460 * C2533) *
                 C2667 +
             (C31557 * C2535 + C32776 * C2538 + C31538 * C2536 +
              C32460 * C2539) *
                 C32601) *
                C32829) *
               C531 -
           (((C13091 + C13090) * C32601 + (C13089 + C13088) * C2667 +
             (C13297 + C13296) * C32795 + (C13295 + C13294) * C2666) *
                C32829 +
            ((C9063 + C9062) * C32601 + (C9061 + C9060) * C2667 +
             (C9273 + C9272) * C32795 + (C9271 + C9270) * C2666) *
                C10306 +
            ((C8057 + C8056) * C32601 + (C8055 + C8054) * C2667 +
             (C31538 * C133 + C32460 * C142 + C31557 * C132 + C32776 * C141) *
                 C32795 +
             (C31538 * C121 + C32460 * C128 + C31557 * C120 + C32776 * C127) *
                 C2666) *
                C10305) *
               C530) *
              C32499 * C443)) /
            (p * q * std::sqrt(p + q));
    d2ee[54] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C2662 * C119 + C2656 * C126 + C2663 * C120 + C2657 * C127 +
            C2664 * C121 + C2658 * C128 + C2665 * C122 + C32830 * C129) *
               C2666 +
           (C2662 * C131 + C2656 * C140 + C2663 * C132 + C2657 * C141 +
            C2664 * C133 + C2658 * C142 + C2665 * C134 + C32830 * C143) *
               C32795 +
           (C2799 + C2800 + C2801 + C2802) * C2667 +
           (C2803 + C2804 + C2805 + C2806) * C32601) *
              C32554 * C32513 * C209 -
          ((C2807 + C2808 + C2809 + C2810) * C32601 +
           (C2811 + C2812 + C2813 + C2814) * C2667 +
           (C2806 + C2805 + C2804 + C2803) * C32795 +
           (C2802 + C2801 + C2800 + C2799) * C2666) *
              C32554 * C32513 * C210 +
          ((C2814 + C2813 + C2812 + C2811) * C2666 +
           (C2810 + C2809 + C2808 + C2807) * C32795 +
           (C2662 * C872 + C2656 * C881 + C2663 * C871 + C2657 * C880 +
            C2664 * C870 + C2658 * C879 + C2665 * C1244 + C32830 * C1245) *
               C2667 +
           (C2662 * C878 + C2656 * C890 + C2663 * C877 + C2657 * C889 +
            C2664 * C876 + C2658 * C888 + C2665 * C1246 + C32830 * C1247) *
               C32601) *
              C32554 * C32513 * C211) *
         C32487) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C2662 * C119 + C2656 * C126 + C2663 * C120 + C2657 * C127 +
            C2664 * C121 + C2658 * C128 + C2665 * C122 + C32830 * C129) *
               C2666 +
           (C2662 * C131 + C2656 * C140 + C2663 * C132 + C2657 * C141 +
            C2664 * C133 + C2658 * C142 + C2665 * C134 + C32830 * C143) *
               C32795 +
           (C2662 * C217 + C2656 * C232 + C2663 * C216 + C2657 * C231 +
            C2664 * C215 + C2658 * C230 + C2665 * C214 + C32830 * C229) *
               C2667 +
           (C2662 * C227 + C2656 * C247 + C2663 * C226 + C2657 * C246 +
            C2664 * C225 + C2658 * C245 + C2665 * C224 + C32830 * C244) *
               C32601) *
              C32554 * C32513 * C32499 * C110 -
          ((C2665 * C223 + C32830 * C243 + C2664 * C224 + C2658 * C244 +
            C2663 * C225 + C2657 * C245 + C2662 * C226 + C2656 * C246) *
               C32601 +
           (C2665 * C213 + C32830 * C228 + C2664 * C214 + C2658 * C229 +
            C2663 * C215 + C2657 * C230 + C2662 * C216 + C2656 * C231) *
               C2667 +
           (C2665 * C135 + C32830 * C144 + C2664 * C134 + C2658 * C143 +
            C2663 * C133 + C2657 * C142 + C2662 * C132 + C2656 * C141) *
               C32795 +
           (C2665 * C123 + C32830 * C130 + C2664 * C122 + C2658 * C129 +
            C2663 * C121 + C2657 * C128 + C2662 * C120 + C2656 * C127) *
               C2666) *
              C32554 * C32513 * C32499 * C111 +
          ((C2662 * C121 + C2656 * C128 + C2663 * C122 + C2657 * C129 +
            C2664 * C123 + C2658 * C130 + C2665 * C124 + C32830 * C137) *
               C2666 +
           (C2662 * C133 + C2656 * C142 + C2663 * C134 + C2657 * C143 +
            C2664 * C135 + C2658 * C144 + C2665 * C136 + C32830 * C145) *
               C32795 +
           (C2662 * C215 + C2656 * C230 + C2663 * C214 + C2657 * C229 +
            C2664 * C213 + C2658 * C228 + C2665 * C444 + C32830 * C445) *
               C2667 +
           (C2662 * C225 + C2656 * C245 + C2663 * C224 + C2657 * C244 +
            C2664 * C223 + C2658 * C243 + C2665 * C446 + C32830 * C447) *
               C32601) *
              C32554 * C32513 * C32499 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C31557 * C119 + C32776 * C126 + C31538 * C120 + C32460 * C127) *
               C7647 +
           (C31557 * C131 + C32776 * C140 + C31538 * C132 + C32460 * C141) *
               C7641 +
           (C31557 * C217 + C32776 * C232 + C31538 * C216 + C32460 * C231) *
               C7648 +
           (C31557 * C227 + C32776 * C247 + C31538 * C226 + C32460 * C246) *
               C7642 +
           (C31557 * C218 + C32776 * C233 + C31538 * C219 + C32460 * C234) *
               C7649 +
           (C31557 * C238 + C32776 * C248 + C31538 * C239 + C32460 * C249) *
               C7643 +
           (C31557 * C872 + C32776 * C881 + C31538 * C871 + C32460 * C880) *
               C7650 +
           (C31557 * C878 + C32776 * C890 + C31538 * C877 + C32460 * C889) *
               C32836) *
              C32554 * C32513 * C32499 * C110 -
          ((C31538 * C876 + C32460 * C888 + C31557 * C877 + C32776 * C889) *
               C32836 +
           (C31538 * C870 + C32460 * C879 + C31557 * C871 + C32776 * C880) *
               C7650 +
           (C31538 * C240 + C32460 * C250 + C31557 * C239 + C32776 * C249) *
               C7643 +
           (C31538 * C220 + C32460 * C235 + C31557 * C219 + C32776 * C234) *
               C7649 +
           (C31538 * C225 + C32460 * C245 + C31557 * C226 + C32776 * C246) *
               C7642 +
           (C31538 * C215 + C32460 * C230 + C31557 * C216 + C32776 * C231) *
               C7648 +
           (C31538 * C133 + C32460 * C142 + C31557 * C132 + C32776 * C141) *
               C7641 +
           (C31538 * C121 + C32460 * C128 + C31557 * C120 + C32776 * C127) *
               C7647) *
              C32554 * C32513 * C32499 * C111 +
          ((C31557 * C121 + C32776 * C128 + C31538 * C122 + C32460 * C129) *
               C7647 +
           (C31557 * C133 + C32776 * C142 + C31538 * C134 + C32460 * C143) *
               C7641 +
           (C31557 * C215 + C32776 * C230 + C31538 * C214 + C32460 * C229) *
               C7648 +
           (C31557 * C225 + C32776 * C245 + C31538 * C224 + C32460 * C244) *
               C7642 +
           (C31557 * C220 + C32776 * C235 + C31538 * C221 + C32460 * C236) *
               C7649 +
           (C31557 * C240 + C32776 * C250 + C31538 * C241 + C32460 * C251) *
               C7643 +
           (C31557 * C870 + C32776 * C879 + C31538 * C1244 + C32460 * C1245) *
               C7650 +
           (C31557 * C876 + C32776 * C888 + C31538 * C1246 + C32460 * C1247) *
               C32836) *
              C32554 * C32513 * C32499 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C31557 * C119 + C32776 * C126 + C31538 * C120 + C32460 * C127) *
               C7647 +
           (C31557 * C131 + C32776 * C140 + C31538 * C132 + C32460 * C141) *
               C7641 +
           (C7782 + C7783) * C7648 + (C7784 + C7785) * C7642 + C7798 * C7649 +
           C7799 * C7643 + C7800 * C7650 + C7801 * C32836) *
              C32554 * C32513 * C209 -
          ((C7794 + C7795) * C32836 + (C7796 + C7797) * C7650 +
           (C7793 + C7792) * C7643 + (C7791 + C7790) * C7649 +
           (C7789 + C7788) * C7642 + (C7787 + C7786) * C7648 +
           (C7785 + C7784) * C7641 + (C7783 + C7782) * C7647) *
              C32554 * C32513 * C210 +
          (C7798 * C7647 + C7799 * C7641 + C7800 * C7648 + C7801 * C7642 +
           (C7797 + C7796) * C7649 + (C7795 + C7794) * C7643 +
           (C31557 * C6200 + C32776 * C6203 + C31538 * C6394 + C32460 * C6395) *
               C7650 +
           (C31557 * C6202 + C32776 * C6206 + C31538 * C6396 + C32460 * C6397) *
               C32836) *
              C32554 * C32513 * C211) *
         C32487) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C31557 * C119 + C32776 * C126 + C31538 * C120 + C32460 * C127) *
                C2666 +
            (C31557 * C131 + C32776 * C140 + C31538 * C132 + C32460 * C141) *
                C32795 +
            (C7782 + C7783) * C2667 + (C7784 + C7785) * C32601) *
               C10305 +
           ((C8834 + C8835) * C2666 + (C8836 + C8837) * C32795 + C9468 * C2667 +
            C9469 * C32601) *
               C10306 +
           ((C8849 + C8848) * C2666 + (C8847 + C8846) * C32795 +
            (C8845 + C8844) * C2667 + (C8843 + C8842) * C32601) *
               C32829) *
              C32513 * C32499 * C110 -
          (((C31538 * C1082 + C32460 * C1094 + C31557 * C1081 +
             C32776 * C1093) *
                C32601 +
            (C31538 * C1067 + C32460 * C1079 + C31557 * C1066 +
             C32776 * C1078) *
                C2667 +
            (C31538 * C345 + C32460 * C355 + C31557 * C344 + C32776 * C354) *
                C32795 +
            (C31538 * C325 + C32460 * C340 + C31557 * C324 + C32776 * C339) *
                C2666) *
               C32829 +
           ((C9063 + C9062) * C32601 + (C9061 + C9060) * C2667 +
            (C9273 + C9272) * C32795 + (C9271 + C9270) * C2666) *
               C10306 +
           ((C8057 + C8056) * C32601 + (C8055 + C8054) * C2667 +
            (C31538 * C133 + C32460 * C142 + C31557 * C132 + C32776 * C141) *
                C32795 +
            (C31538 * C121 + C32460 * C128 + C31557 * C120 + C32776 * C127) *
                C2666) *
               C10305) *
              C32513 * C32499 * C111 +
          (((C31557 * C121 + C32776 * C128 + C31538 * C122 + C32460 * C129) *
                C2666 +
            (C31557 * C133 + C32776 * C142 + C31538 * C134 + C32460 * C143) *
                C32795 +
            (C31557 * C215 + C32776 * C230 + C31538 * C214 + C32460 * C229) *
                C2667 +
            (C31557 * C225 + C32776 * C245 + C31538 * C224 + C32460 * C244) *
                C32601) *
               C10305 +
           ((C31557 * C320 + C32776 * C335 + C31538 * C319 + C32460 * C334) *
                C2666 +
            (C31557 * C330 + C32776 * C350 + C31538 * C329 + C32460 * C349) *
                C32795 +
            (C31557 * C620 + C32776 * C625 + C31538 * C621 + C32460 * C626) *
                C2667 +
            (C31557 * C630 + C32776 * C635 + C31538 * C631 + C32460 * C636) *
                C32601) *
               C10306 +
           ((C31557 * C325 + C32776 * C340 + C31538 * C326 + C32460 * C341) *
                C2666 +
            (C31557 * C345 + C32776 * C355 + C31538 * C346 + C32460 * C356) *
                C32795 +
            (C31557 * C1067 + C32776 * C1079 + C31538 * C2192 +
             C32460 * C2193) *
                C2667 +
            (C31557 * C1082 + C32776 * C1094 + C31538 * C2194 +
             C32460 * C2195) *
                C32601) *
               C32829) *
              C32513 * C32499 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C31557 * C119 + C32776 * C126 + C31538 * C120 + C32460 * C127) *
                C2666 +
            (C31557 * C131 + C32776 * C140 + C31538 * C132 + C32460 * C141) *
                C32795 +
            (C7782 + C7783) * C2667 + (C7784 + C7785) * C32601) *
               C10305 +
           ((C8834 + C8835) * C2666 + (C8836 + C8837) * C32795 + C9468 * C2667 +
            C9469 * C32601) *
               C10306 +
           ((C8849 + C8848) * C2666 + (C8847 + C8846) * C32795 +
            (C8845 + C8844) * C2667 + (C8843 + C8842) * C32601) *
               C32829) *
              C32513 * C209 -
          (((C8838 + C8839) * C32601 + (C8840 + C8841) * C2667 +
            (C8842 + C8843) * C32795 + (C8844 + C8845) * C2666) *
               C32829 +
           (C9470 * C32601 + C9471 * C2667 + C9472 * C32795 + C9473 * C2666) *
               C10306 +
           ((C7789 + C7788) * C32601 + (C7787 + C7786) * C2667 +
            (C7785 + C7784) * C32795 + (C7783 + C7782) * C2666) *
               C10305) *
              C32513 * C210 +
          ((C7798 * C2666 + C7799 * C32795 + C7800 * C2667 + C7801 * C32601) *
               C10305 +
           (C8654 * C2666 + C8655 * C32795 + (C8353 + C8352) * C2667 +
            (C8351 + C8350) * C32601) *
               C10306 +
           ((C8841 + C8840) * C2666 + (C8839 + C8838) * C32795 +
            (C31557 * C6301 + C32776 * C6305 + C31538 * C7177 +
             C32460 * C7178) *
                C2667 +
            (C31557 * C6306 + C32776 * C6310 + C31538 * C7179 +
             C32460 * C7180) *
                C32601) *
               C32829) *
              C32513 * C211) *
         C32487) /
            (p * q * std::sqrt(p + q));
    d2ee[55] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C6132 * C119 + C32450 * C126) * C7647 +
             (C6132 * C131 + C32450 * C140) * C7641 + C6229 * C7648 +
             C6230 * C7642 + C6231 * C7649 + C6232 * C7643 + C6233 * C7650 +
             C6234 * C32836) *
                C32796 +
            (C9768 + C9769 + C9770 + C9771 + C9772 + C9773 + C9774 + C9775) *
                C32641) *
               C32513 * C440 -
           ((C6611 * C32836 + C6612 * C7650 + C6613 * C7643 + C6614 * C7649 +
             C6615 * C7642 + C6616 * C7648 + C6617 * C7641 + C6618 * C7647) *
                C32641 +
            (C6236 * C32836 + C6235 * C7650 + C6234 * C7643 + C6233 * C7649 +
             C6232 * C7642 + C6231 * C7648 + C6230 * C7641 + C6229 * C7647) *
                C32796) *
               C32513 * C441) *
              C442 +
          (((C6415 * C7647 + C6416 * C7641 + C6417 * C7648 + C6418 * C7642 +
             C6419 * C7649 + C6420 * C7643 + C6421 * C7650 + C6422 * C32836) *
                C32796 +
            (C7198 * C7647 + C7199 * C7641 + C7200 * C7648 + C7201 * C7642 +
             C9918 * C7649 + C9919 * C7643 +
             (C6132 * C6504 + C32450 * C6505) * C7650 +
             (C6132 * C6506 + C32450 * C6507) * C32836) *
                C32641) *
               C32513 * C441 -
           ((C9919 * C32836 + C9918 * C7650 + C7201 * C7643 + C7200 * C7649 +
             C7199 * C7642 + C7198 * C7648 + C7373 * C7641 + C7372 * C7647) *
                C32641 +
            (C6420 * C32836 + C6419 * C7650 + C6418 * C7643 + C6417 * C7649 +
             C6416 * C7642 + C6415 * C7648 +
             (C6132 * C132 + C32450 * C141) * C7641 +
             (C6132 * C120 + C32450 * C127) * C7647) *
                C32796) *
               C32513 * C440) *
              C443)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C754 * C119 + C748 * C126 + C755 * C120 + C749 * C127 +
              C756 * C121 + C32815 * C128) *
                 C2666 +
             (C754 * C131 + C748 * C140 + C755 * C132 + C749 * C141 +
              C756 * C133 + C32815 * C142) *
                 C32795 +
             (C931 + C932 + C933) * C2667 + (C934 + C935 + C936) * C32601) *
                C32796 +
            ((C2022 + C2023 + C2024) * C2666 +
             (C2025 + C2026 + C2027) * C32795 +
             (C1628 + C1627 + C1626) * C2667 +
             (C1625 + C1624 + C1623) * C32601) *
                C32641) *
               C32513 * C440 -
           (((C1617 + C1618 + C1619) * C32601 +
             (C1620 + C1621 + C1622) * C2667 +
             (C1623 + C1624 + C1625) * C32795 +
             (C1626 + C1627 + C1628) * C2666) *
                C32641 +
            ((C942 + C941 + C940) * C32601 + (C939 + C938 + C937) * C2667 +
             (C936 + C935 + C934) * C32795 + (C933 + C932 + C931) * C2666) *
                C32796) *
               C32513 * C441) *
              C442 +
          ((((C1273 + C1274 + C1275) * C2666 +
             (C1276 + C1277 + C1278) * C32795 +
             (C1279 + C1280 + C1281) * C2667 +
             (C1282 + C1283 + C1284) * C32601) *
                C32796 +
            ((C4753 + C4754 + C4755) * C2666 +
             (C4756 + C4757 + C4758) * C32795 +
             (C754 * C1063 + C748 * C1075 + C755 * C1062 + C749 * C1074 +
              C756 * C1430 + C32815 * C1431) *
                 C2667 +
             (C754 * C1072 + C748 * C1090 + C755 * C1071 + C749 * C1089 +
              C756 * C1432 + C32815 * C1433) *
                 C32601) *
                C32641) *
               C32513 * C441 -
           (((C4758 + C4757 + C4756) * C32601 +
             (C4755 + C4754 + C4753) * C2667 +
             (C2376 + C2375 + C2374) * C32795 +
             (C2373 + C2372 + C2371) * C2666) *
                C32641 +
            ((C1278 + C1277 + C1276) * C32601 +
             (C1275 + C1274 + C1273) * C2667 +
             (C756 * C134 + C32815 * C143 + C755 * C133 + C749 * C142 +
              C754 * C132 + C748 * C141) *
                 C32795 +
             (C756 * C122 + C32815 * C129 + C755 * C121 + C749 * C128 +
              C754 * C120 + C748 * C127) *
                 C2666) *
                C32796) *
               C32513 * C440) *
              C443)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C6132 * C119 + C32450 * C126) * C2666 +
             (C6132 * C131 + C32450 * C140) * C32795 + C6229 * C2667 +
             C6230 * C32601) *
                C13591 +
            (C14508 + C14509 + C14510 + C14511) * C13592 + C14528 * C13593 +
            C14529 * C32842) *
               C32513 * C440 -
           ((C7011 * C32601 + C7012 * C2667 + C7013 * C32795 + C7014 * C2666) *
                C32842 +
            (C6854 * C32601 + C6853 * C2667 + C6852 * C32795 + C6851 * C2666) *
                C13593 +
            (C6615 * C32601 + C6616 * C2667 + C6617 * C32795 + C6618 * C2666) *
                C13592 +
            (C6232 * C32601 + C6231 * C2667 + C6230 * C32795 + C6229 * C2666) *
                C13591) *
               C32513 * C441) *
              C442 +
          (((C6415 * C2666 + C6416 * C32795 + C6417 * C2667 + C6418 * C32601) *
                C13591 +
            (C7198 * C2666 + C7199 * C32795 + C7200 * C2667 + C7201 * C32601) *
                C13592 +
            (C7202 * C2666 + C7203 * C32795 + C7204 * C2667 + C7205 * C32601) *
                C13593 +
            (C14664 * C2666 + C14665 * C32795 +
             (C6132 * C7351 + C32450 * C7352) * C2667 +
             (C6132 * C7353 + C32450 * C7354) * C32601) *
                C32842) *
               C32513 * C441 -
           ((C14665 * C32601 + C14664 * C2667 + C12306 * C32795 +
             C12305 * C2666) *
                C32842 +
            (C7203 * C32601 + C7202 * C2667 + C7375 * C32795 + C7374 * C2666) *
                C13593 +
            (C7199 * C32601 + C7198 * C2667 + C7373 * C32795 + C7372 * C2666) *
                C13592 +
            (C6416 * C32601 + C6415 * C2667 +
             (C6132 * C132 + C32450 * C141) * C32795 +
             (C6132 * C120 + C32450 * C127) * C2666) *
                C13591) *
               C32513 * C440) *
              C443)) /
            (p * q * std::sqrt(p + q));
    d2ee[56] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C6132 * C119 + C32450 * C126) * C7647 +
             (C6132 * C131 + C32450 * C140) * C7641 + C6229 * C7648 +
             C6230 * C7642 + C6231 * C7649 + C6232 * C7643 + C6233 * C7650 +
             C6234 * C32836) *
                C32796 +
            (C9768 + C9769 + C9770 + C9771 + C9772 + C9773 + C9774 + C9775) *
                C32641) *
               C530 -
           ((C9776 + C9777 + C9778 + C9779 + C9780 + C9781 + C9782 + C9783) *
                C32641 +
            (C9775 + C9774 + C9773 + C9772 + C9771 + C9770 + C9769 + C9768) *
                C32796) *
               C531) *
              C440 +
          (((C10188 + C10189 + C10190 + C10191 + C10192 + C10193 + C10194 +
             C10195) *
                C32796 +
            (C6851 * C7647 + C6852 * C7641 + C6853 * C7648 + C6854 * C7642 +
             C6856 * C7649 + C6855 * C7643 +
             (C6132 * C6302 + C32450 * C6307) * C7650 +
             (C6132 * C6308 + C32450 * C6311) * C32836) *
                C32641) *
               C531 -
           ((C10195 + C10194 + C10193 + C10192 + C10191 + C10190 + C10189 +
             C10188) *
                C32641 +
            (C6236 * C32836 + C6235 * C7650 + C6234 * C7643 + C6233 * C7649 +
             C6232 * C7642 + C6231 * C7648 + C6230 * C7641 + C6229 * C7647) *
                C32796) *
               C530) *
              C441) *
         C32487) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C754 * C119 + C748 * C126 + C755 * C120 + C749 * C127 +
              C756 * C121 + C32815 * C128) *
                 C2666 +
             (C754 * C131 + C748 * C140 + C755 * C132 + C749 * C141 +
              C756 * C133 + C32815 * C142) *
                 C32795 +
             (C931 + C932 + C933) * C2667 + (C934 + C935 + C936) * C32601) *
                C32796 +
            ((C2022 + C2023 + C2024) * C2666 +
             (C2025 + C2026 + C2027) * C32795 + C5151 * C2667 +
             C5152 * C32601) *
                C32641) *
               C530 -
           (((C2558 + C2557 + C2556) * C32601 +
             (C2555 + C2554 + C2553) * C2667 +
             (C2033 + C2032 + C2031) * C32795 +
             (C2030 + C2029 + C2028) * C2666) *
                C32641 +
            (C5153 * C32601 + C5154 * C2667 + (C2027 + C2026 + C2025) * C32795 +
             (C2024 + C2023 + C2022) * C2666) *
                C32796) *
               C531) *
              C440 +
          (((C5151 * C2666 + C5152 * C32795 + (C1622 + C1621 + C1620) * C2667 +
             (C1619 + C1618 + C1617) * C32601) *
                C32796 +
            ((C2553 + C2554 + C2555) * C2666 +
             (C2556 + C2557 + C2558) * C32795 +
             (C754 * C1068 + C748 * C1083 + C755 * C1069 + C749 * C1084 +
              C756 * C1070 + C32815 * C1085) *
                 C2667 +
             (C754 * C1086 + C748 * C1095 + C755 * C1087 + C749 * C1096 +
              C756 * C1088 + C32815 * C1097) *
                 C32601) *
                C32641) *
               C531 -
           (((C1617 + C1618 + C1619) * C32601 +
             (C1620 + C1621 + C1622) * C2667 + C5153 * C32795 + C5154 * C2666) *
                C32641 +
            ((C942 + C941 + C940) * C32601 + (C939 + C938 + C937) * C2667 +
             (C936 + C935 + C934) * C32795 + (C933 + C932 + C931) * C2666) *
                C32796) *
               C530) *
              C441) *
         C32487) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C6132 * C119 + C32450 * C126) * C2666 +
             (C6132 * C131 + C32450 * C140) * C32795 + C6229 * C2667 +
             C6230 * C32601) *
                C13591 +
            (C14508 + C14509 + C14510 + C14511) * C13592 + C14528 * C13593 +
            C14529 * C32842) *
               C530 -
           ((C14520 + C14521 + C14522 + C14523) * C32842 +
            (C14519 + C14518 + C14517 + C14516) * C13593 +
            (C14515 + C14514 + C14513 + C14512) * C13592 +
            (C14511 + C14510 + C14509 + C14508) * C13591) *
               C531) *
              C440 +
          (((C14938 + C14939 + C14940 + C14941) * C13591 +
            (C14942 + C14943 + C14944 + C14945) * C13592 +
            (C14946 + C14947 + C14948 + C14949) * C13593 +
            (C12409 * C2666 + C12410 * C32795 +
             (C6132 * C6968 + C32450 * C6973) * C2667 +
             (C6132 * C6974 + C32450 * C6977) * C32601) *
                C32842) *
               C531 -
           ((C14949 + C14948 + C14947 + C14946) * C32842 +
            (C14945 + C14944 + C14943 + C14942) * C13593 +
            (C14941 + C14940 + C14939 + C14938) * C13592 +
            (C6232 * C32601 + C6231 * C2667 + C6230 * C32795 + C6229 * C2666) *
                C13591) *
               C530) *
              C441) *
         C32487) /
            (p * q * std::sqrt(p + q));
    d2ee[57] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C754 * C119 + C748 * C126 + C755 * C120 + C749 * C127 +
                 C756 * C121 + C32815 * C128) *
                    C2666 +
                (C754 * C131 + C748 * C140 + C755 * C132 + C749 * C141 +
                 C756 * C133 + C32815 * C142) *
                    C32795 +
                (C931 + C932 + C933) * C2667 + (C934 + C935 + C936) * C32601) *
                   C32796 +
               ((C2022 + C2023 + C2024) * C2666 +
                (C2025 + C2026 + C2027) * C32795 +
                (C1628 + C1627 + C1626) * C2667 +
                (C1625 + C1624 + C1623) * C32601) *
                   C32641) *
                  C32513 * C32499 * C110 -
              (((C756 * C631 + C32815 * C636 + C755 * C630 + C749 * C635 +
                 C754 * C629 + C748 * C634) *
                    C32601 +
                (C756 * C621 + C32815 * C626 + C755 * C620 + C749 * C625 +
                 C754 * C619 + C748 * C624) *
                    C2667 +
                (C2376 + C2375 + C2374) * C32795 +
                (C2373 + C2372 + C2371) * C2666) *
                   C32641 +
               ((C1278 + C1277 + C1276) * C32601 +
                (C1275 + C1274 + C1273) * C2667 +
                (C756 * C134 + C32815 * C143 + C755 * C133 + C749 * C142 +
                 C754 * C132 + C748 * C141) *
                    C32795 +
                (C756 * C122 + C32815 * C129 + C755 * C121 + C749 * C128 +
                 C754 * C120 + C748 * C127) *
                    C2666) *
                   C32796) *
                  C32513 * C32499 * C111 +
              (((C754 * C121 + C748 * C128 + C755 * C122 + C749 * C129 +
                 C756 * C123 + C32815 * C130) *
                    C2666 +
                (C754 * C133 + C748 * C142 + C755 * C134 + C749 * C143 +
                 C756 * C135 + C32815 * C144) *
                    C32795 +
                (C754 * C215 + C748 * C230 + C755 * C214 + C749 * C229 +
                 C756 * C213 + C32815 * C228) *
                    C2667 +
                (C754 * C225 + C748 * C245 + C755 * C224 + C749 * C244 +
                 C756 * C223 + C32815 * C243) *
                    C32601) *
                   C32796 +
               ((C754 * C320 + C748 * C335 + C755 * C319 + C749 * C334 +
                 C756 * C318 + C32815 * C333) *
                    C2666 +
                (C754 * C330 + C748 * C350 + C755 * C329 + C749 * C349 +
                 C756 * C328 + C32815 * C348) *
                    C32795 +
                (C754 * C620 + C748 * C625 + C755 * C621 + C749 * C626 +
                 C756 * C622 + C32815 * C627) *
                    C2667 +
                (C754 * C630 + C748 * C635 + C755 * C631 + C749 * C636 +
                 C756 * C632 + C32815 * C637) *
                    C32601) *
                   C32641) *
                  C32513 * C32499 * C112) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C754 * C119 + C748 * C126 + C755 * C120 + C749 * C127 +
                 C756 * C121 + C32815 * C128) *
                    C2666 +
                (C754 * C131 + C748 * C140 + C755 * C132 + C749 * C141 +
                 C756 * C133 + C32815 * C142) *
                    C32795 +
                (C931 + C932 + C933) * C2667 + (C934 + C935 + C936) * C32601) *
                   C32796 +
               ((C2022 + C2023 + C2024) * C2666 +
                (C2025 + C2026 + C2027) * C32795 +
                (C1628 + C1627 + C1626) * C2667 +
                (C1625 + C1624 + C1623) * C32601) *
                   C32641) *
                  C32513 * C209 -
              (((C1617 + C1618 + C1619) * C32601 +
                (C1620 + C1621 + C1622) * C2667 +
                (C1623 + C1624 + C1625) * C32795 +
                (C1626 + C1627 + C1628) * C2666) *
                   C32641 +
               ((C942 + C941 + C940) * C32601 + (C939 + C938 + C937) * C2667 +
                (C936 + C935 + C934) * C32795 + (C933 + C932 + C931) * C2666) *
                   C32796) *
                  C32513 * C210 +
              ((C951 * C2666 + C952 * C32795 + (C948 + C947 + C946) * C2667 +
                (C945 + C944 + C943) * C32601) *
                   C32796 +
               ((C1622 + C1621 + C1620) * C2666 +
                (C1619 + C1618 + C1617) * C32795 +
                (C754 * C1580 + C748 * C1583 + C755 * C1581 + C749 * C1584 +
                 C756 * C1582 + C32815 * C1585) *
                    C2667 +
                (C754 * C1586 + C748 * C1589 + C755 * C1587 + C749 * C1590 +
                 C756 * C1588 + C32815 * C1591) *
                    C32601) *
                   C32641) *
                  C32513 * C211) *
             C32487) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C754 * C119 + C748 * C126 + C755 * C120 + C749 * C127 +
             C756 * C121 + C32815 * C128) *
                C2666 +
            (C754 * C131 + C748 * C140 + C755 * C132 + C749 * C141 +
             C756 * C133 + C32815 * C142) *
                C32795 +
            (C931 + C932 + C933) * C2667 + (C934 + C935 + C936) * C32601) *
               C32796 +
           ((C2022 + C2023 + C2024) * C2666 + (C2025 + C2026 + C2027) * C32795 +
            (C1628 + C1627 + C1626) * C2667 +
            (C1625 + C1624 + C1623) * C32601) *
               C32641) *
              C315 -
          (((C2558 + C2557 + C2556) * C32601 + (C2555 + C2554 + C2553) * C2667 +
            (C2033 + C2032 + C2031) * C32795 +
            (C2030 + C2029 + C2028) * C2666) *
               C32641 +
           ((C1623 + C1624 + C1625) * C32601 + (C1626 + C1627 + C1628) * C2667 +
            (C2027 + C2026 + C2025) * C32795 +
            (C2024 + C2023 + C2022) * C2666) *
               C32796) *
              C316 +
          ((C2042 * C2666 + C2043 * C32795 + (C2553 + C2554 + C2555) * C2667 +
            (C2556 + C2557 + C2558) * C32601) *
               C32796 +
           ((C2039 + C2038 + C2037) * C2666 + (C2036 + C2035 + C2034) * C32795 +
            (C754 * C2528 + C748 * C2531 + C755 * C2529 + C749 * C2532 +
             C756 * C2530 + C32815 * C2533) *
                C2667 +
            (C754 * C2534 + C748 * C2537 + C755 * C2535 + C749 * C2538 +
             C756 * C2536 + C32815 * C2539) *
                C32601) *
               C32641) *
              C317) *
         C32499 * C32487) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C6132 * C119 + C32450 * C126) * C7647 +
            (C6132 * C131 + C32450 * C140) * C7641 + C6229 * C7648 +
            C6230 * C7642 + C6231 * C7649 + C6232 * C7643 + C6233 * C7650 +
            C6234 * C32836) *
               C32796 +
           (C7007 * C7647 + C7008 * C7641 + C6618 * C7648 + C6617 * C7642 +
            C6616 * C7649 + C6615 * C7643 + C6614 * C7650 + C6613 * C32836) *
               C32641) *
              C32513 * C32499 * C110 -
          (((C6132 * C1587 + C32450 * C1590) * C32836 +
            (C6132 * C1581 + C32450 * C1584) * C7650 + C7201 * C7643 +
            C7200 * C7649 + C7199 * C7642 + C7198 * C7648 + C7373 * C7641 +
            C7372 * C7647) *
               C32641 +
           (C6420 * C32836 + C6419 * C7650 + C6418 * C7643 + C6417 * C7649 +
            C6416 * C7642 + C6415 * C7648 +
            (C6132 * C132 + C32450 * C141) * C7641 +
            (C6132 * C120 + C32450 * C127) * C7647) *
               C32796) *
              C32513 * C32499 * C111 +
          (((C6132 * C121 + C32450 * C128) * C7647 +
            (C6132 * C133 + C32450 * C142) * C7641 +
            (C6132 * C215 + C32450 * C230) * C7648 +
            (C6132 * C225 + C32450 * C245) * C7642 +
            (C6132 * C220 + C32450 * C235) * C7649 +
            (C6132 * C240 + C32450 * C250) * C7643 +
            (C6132 * C870 + C32450 * C879) * C7650 +
            (C6132 * C876 + C32450 * C888) * C32836) *
               C32796 +
           ((C6132 * C320 + C32450 * C335) * C7647 +
            (C6132 * C330 + C32450 * C350) * C7641 +
            (C6132 * C620 + C32450 * C625) * C7648 +
            (C6132 * C630 + C32450 * C635) * C7642 +
            (C6132 * C1062 + C32450 * C1074) * C7649 +
            (C6132 * C1071 + C32450 * C1089) * C7643 +
            (C6132 * C1582 + C32450 * C1585) * C7650 +
            (C6132 * C1588 + C32450 * C1591) * C32836) *
               C32641) *
              C32513 * C32499 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C6132 * C119 + C32450 * C126) * C7647 +
            (C6132 * C131 + C32450 * C140) * C7641 + C6229 * C7648 +
            C6230 * C7642 + C6231 * C7649 + C6232 * C7643 + C6233 * C7650 +
            C6234 * C32836) *
               C32796 +
           (C7007 * C7647 + C7008 * C7641 + C6618 * C7648 + C6617 * C7642 +
            C6616 * C7649 + C6615 * C7643 + C6614 * C7650 + C6613 * C32836) *
               C32641) *
              C32513 * C209 -
          ((C6611 * C32836 + C6612 * C7650 + C6613 * C7643 + C6614 * C7649 +
            C6615 * C7642 + C6616 * C7648 + C6617 * C7641 + C6618 * C7647) *
               C32641 +
           (C6236 * C32836 + C6235 * C7650 + C6234 * C7643 + C6233 * C7649 +
            C6232 * C7642 + C6231 * C7648 + C6230 * C7641 + C6229 * C7647) *
               C32796) *
              C32513 * C210 +
          ((C6231 * C7647 + C6232 * C7641 + C6233 * C7648 + C6234 * C7642 +
            C6235 * C7649 + C6236 * C7643 + C6238 * C7650 + C6237 * C32836) *
               C32796 +
           (C6616 * C7647 + C6615 * C7641 + C6614 * C7648 + C6613 * C7642 +
            C6612 * C7649 + C6611 * C7643 +
            (C6132 * C6590 + C32450 * C6591) * C7650 +
            (C6132 * C6592 + C32450 * C6593) * C32836) *
               C32641) *
              C32513 * C211) *
         C32487) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C6132 * C119 + C32450 * C126) * C7647 +
            (C6132 * C131 + C32450 * C140) * C7641 + C6229 * C7648 +
            C6230 * C7642 + C6231 * C7649 + C6232 * C7643 + C6233 * C7650 +
            C6234 * C32836) *
               C32796 +
           (C9768 + C9769 + C9770 + C9771 + C9772 + C9773 + C9774 + C9775) *
               C32641) *
              C315 -
          ((C9776 + C9777 + C9778 + C9779 + C9780 + C9781 + C9782 + C9783) *
               C32641 +
           (C9775 + C9774 + C9773 + C9772 + C9771 + C9770 + C9769 + C9768) *
               C32796) *
              C316 +
          ((C9783 + C9782 + C9781 + C9780 + C9779 + C9778 + C9777 + C9776) *
               C32796 +
           (C7016 * C7647 + C7015 * C7641 + C7014 * C7648 + C7013 * C7642 +
            C7012 * C7649 + C7011 * C7643 +
            (C6132 * C7525 + C32450 * C7526) * C7650 +
            (C6132 * C7527 + C32450 * C7528) * C32836) *
               C32641) *
              C317) *
         C32499 * C32487) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C6132 * C119 + C32450 * C126) * C2666 +
            (C6132 * C131 + C32450 * C140) * C32795 + C6229 * C2667 +
            C6230 * C32601) *
               C13591 +
           (C7007 * C2666 + C7008 * C32795 + C6618 * C2667 + C6617 * C32601) *
               C13592 +
           (C7009 * C2666 + C7010 * C32795 + C6851 * C2667 + C6852 * C32601) *
               C13593 +
           (C7016 * C2666 + C7015 * C32795 + C7014 * C2667 + C7013 * C32601) *
               C32842) *
              C32513 * C32499 * C110 -
          (((C6132 * C2535 + C32450 * C2538) * C32601 +
            (C6132 * C2529 + C32450 * C2532) * C2667 + C12306 * C32795 +
            C12305 * C2666) *
               C32842 +
           (C7203 * C32601 + C7202 * C2667 + C7375 * C32795 + C7374 * C2666) *
               C13593 +
           (C7199 * C32601 + C7198 * C2667 + C7373 * C32795 + C7372 * C2666) *
               C13592 +
           (C6416 * C32601 + C6415 * C2667 +
            (C6132 * C132 + C32450 * C141) * C32795 +
            (C6132 * C120 + C32450 * C127) * C2666) *
               C13591) *
              C32513 * C32499 * C111 +
          (((C6132 * C121 + C32450 * C128) * C2666 +
            (C6132 * C133 + C32450 * C142) * C32795 +
            (C6132 * C215 + C32450 * C230) * C2667 +
            (C6132 * C225 + C32450 * C245) * C32601) *
               C13591 +
           ((C6132 * C320 + C32450 * C335) * C2666 +
            (C6132 * C330 + C32450 * C350) * C32795 +
            (C6132 * C620 + C32450 * C625) * C2667 +
            (C6132 * C630 + C32450 * C635) * C32601) *
               C13592 +
           ((C6132 * C325 + C32450 * C340) * C2666 +
            (C6132 * C345 + C32450 * C355) * C32795 +
            (C6132 * C1067 + C32450 * C1079) * C2667 +
            (C6132 * C1082 + C32450 * C1094) * C32601) *
               C13593 +
           ((C6132 * C1961 + C32450 * C1970) * C2666 +
            (C6132 * C1967 + C32450 * C1979) * C32795 +
            (C6132 * C2530 + C32450 * C2533) * C2667 +
            (C6132 * C2536 + C32450 * C2539) * C32601) *
               C32842) *
              C32513 * C32499 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C6132 * C119 + C32450 * C126) * C2666 +
            (C6132 * C131 + C32450 * C140) * C32795 + C6229 * C2667 +
            C6230 * C32601) *
               C13591 +
           (C7007 * C2666 + C7008 * C32795 + C6618 * C2667 + C6617 * C32601) *
               C13592 +
           (C7009 * C2666 + C7010 * C32795 + C6851 * C2667 + C6852 * C32601) *
               C13593 +
           (C7016 * C2666 + C7015 * C32795 + C7014 * C2667 + C7013 * C32601) *
               C32842) *
              C32513 * C209 -
          ((C7011 * C32601 + C7012 * C2667 + C7013 * C32795 + C7014 * C2666) *
               C32842 +
           (C6854 * C32601 + C6853 * C2667 + C6852 * C32795 + C6851 * C2666) *
               C13593 +
           (C6615 * C32601 + C6616 * C2667 + C6617 * C32795 + C6618 * C2666) *
               C13592 +
           (C6232 * C32601 + C6231 * C2667 + C6230 * C32795 + C6229 * C2666) *
               C13591) *
              C32513 * C210 +
          ((C6231 * C2666 + C6232 * C32795 + C6233 * C2667 + C6234 * C32601) *
               C13591 +
           (C6616 * C2666 + C6615 * C32795 + C6614 * C2667 + C6613 * C32601) *
               C13592 +
           (C6853 * C2666 + C6854 * C32795 + C6856 * C2667 + C6855 * C32601) *
               C13593 +
           (C7012 * C2666 + C7011 * C32795 +
            (C6132 * C7525 + C32450 * C7526) * C2667 +
            (C6132 * C7527 + C32450 * C7528) * C32601) *
               C32842) *
              C32513 * C211) *
         C32487) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C6132 * C119 + C32450 * C126) * C2666 +
            (C6132 * C131 + C32450 * C140) * C32795 + C6229 * C2667 +
            C6230 * C32601) *
               C13591 +
           (C14508 + C14509 + C14510 + C14511) * C13592 + C14528 * C13593 +
           C14529 * C32842) *
              C315 -
          ((C14520 + C14521 + C14522 + C14523) * C32842 +
           (C14519 + C14518 + C14517 + C14516) * C13593 +
           (C14515 + C14514 + C14513 + C14512) * C13592 +
           (C14511 + C14510 + C14509 + C14508) * C13591) *
              C316 +
          (C14528 * C13591 + C14529 * C13592 +
           (C14523 + C14522 + C14521 + C14520) * C13593 +
           (C12115 * C2666 + C12114 * C32795 +
            (C6132 * C12394 + C32450 * C12395) * C2667 +
            (C6132 * C12396 + C32450 * C12397) * C32601) *
               C32842) *
              C317) *
         C32499 * C32487) /
            (p * q * std::sqrt(p + q));
    d2ee[58] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C6132 * C119 + C32450 * C126) * C7647 +
             (C6132 * C131 + C32450 * C140) * C7641 + C6229 * C7648 +
             C6230 * C7642 + C6231 * C7649 + C6232 * C7643 + C6233 * C7650 +
             C6234 * C32836) *
                C32796 +
            (C9768 + C9769 + C9770 + C9771 + C9772 + C9773 + C9774 + C9775) *
                C32641) *
               C530 -
           ((C9776 + C9777 + C9778 + C9779 + C9780 + C9781 + C9782 + C9783) *
                C32641 +
            (C9775 + C9774 + C9773 + C9772 + C9771 + C9770 + C9769 + C9768) *
                C32796) *
               C531) *
              C32499 * C442 +
          (((C10050 + C10051 + C10052 + C10053 + C10054 + C10055 + C10056 +
             C10057) *
                C32796 +
            (C7374 * C7647 + C7375 * C7641 + C7202 * C7648 + C7203 * C7642 +
             C7204 * C7649 + C7205 * C7643 +
             (C6132 * C7177 + C32450 * C7178) * C7650 +
             (C6132 * C7179 + C32450 * C7180) * C32836) *
                C32641) *
               C531 -
           ((C10057 + C10056 + C10055 + C10054 + C10053 + C10052 + C10051 +
             C10050) *
                C32641 +
            (C6420 * C32836 + C6419 * C7650 + C6418 * C7643 + C6417 * C7649 +
             C6416 * C7642 + C6415 * C7648 +
             (C6132 * C132 + C32450 * C141) * C7641 +
             (C6132 * C120 + C32450 * C127) * C7647) *
                C32796) *
               C530) *
              C32499 * C443)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C754 * C119 + C748 * C126 + C755 * C120 + C749 * C127 +
              C756 * C121 + C32815 * C128) *
                 C2666 +
             (C754 * C131 + C748 * C140 + C755 * C132 + C749 * C141 +
              C756 * C133 + C32815 * C142) *
                 C32795 +
             (C931 + C932 + C933) * C2667 + (C934 + C935 + C936) * C32601) *
                C32796 +
            ((C2022 + C2023 + C2024) * C2666 +
             (C2025 + C2026 + C2027) * C32795 +
             (C1628 + C1627 + C1626) * C2667 +
             (C1625 + C1624 + C1623) * C32601) *
                C32641) *
               C530 -
           (((C2558 + C2557 + C2556) * C32601 +
             (C2555 + C2554 + C2553) * C2667 +
             (C2033 + C2032 + C2031) * C32795 +
             (C2030 + C2029 + C2028) * C2666) *
                C32641 +
            ((C1623 + C1624 + C1625) * C32601 +
             (C1626 + C1627 + C1628) * C2667 +
             (C2027 + C2026 + C2025) * C32795 +
             (C2024 + C2023 + C2022) * C2666) *
                C32796) *
               C531) *
              C32499 * C442 +
          ((((C2371 + C2372 + C2373) * C2666 +
             (C2374 + C2375 + C2376) * C32795 +
             (C4753 + C4754 + C4755) * C2667 +
             (C4756 + C4757 + C4758) * C32601) *
                C32796 +
            ((C2377 + C2378 + C2379) * C2666 +
             (C2380 + C2381 + C2382) * C32795 +
             (C754 * C1066 + C748 * C1078 + C755 * C1067 + C749 * C1079 +
              C756 * C2192 + C32815 * C2193) *
                 C2667 +
             (C754 * C1081 + C748 * C1093 + C755 * C1082 + C749 * C1094 +
              C756 * C2194 + C32815 * C2195) *
                 C32601) *
                C32641) *
               C531 -
           (((C4758 + C4757 + C4756) * C32601 +
             (C4755 + C4754 + C4753) * C2667 +
             (C2376 + C2375 + C2374) * C32795 +
             (C2373 + C2372 + C2371) * C2666) *
                C32641 +
            ((C1278 + C1277 + C1276) * C32601 +
             (C1275 + C1274 + C1273) * C2667 +
             (C756 * C134 + C32815 * C143 + C755 * C133 + C749 * C142 +
              C754 * C132 + C748 * C141) *
                 C32795 +
             (C756 * C122 + C32815 * C129 + C755 * C121 + C749 * C128 +
              C754 * C120 + C748 * C127) *
                 C2666) *
                C32796) *
               C530) *
              C32499 * C443)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C6132 * C119 + C32450 * C126) * C2666 +
             (C6132 * C131 + C32450 * C140) * C32795 + C6229 * C2667 +
             C6230 * C32601) *
                C13591 +
            (C14508 + C14509 + C14510 + C14511) * C13592 + C14528 * C13593 +
            C14529 * C32842) *
               C530 -
           ((C14520 + C14521 + C14522 + C14523) * C32842 +
            (C14519 + C14518 + C14517 + C14516) * C13593 +
            (C14515 + C14514 + C14513 + C14512) * C13592 +
            (C14511 + C14510 + C14509 + C14508) * C13591) *
               C531) *
              C32499 * C442 +
          (((C14796 + C14797 + C14798 + C14799) * C13591 +
            (C14800 + C14801 + C14802 + C14803) * C13592 +
            (C14804 + C14805 + C14806 + C14807) * C13593 +
            (C12307 * C2666 + C12308 * C32795 +
             (C6132 * C12202 + C32450 * C12203) * C2667 +
             (C6132 * C12204 + C32450 * C12205) * C32601) *
                C32842) *
               C531 -
           ((C14807 + C14806 + C14805 + C14804) * C32842 +
            (C14803 + C14802 + C14801 + C14800) * C13593 +
            (C14799 + C14798 + C14797 + C14796) * C13592 +
            (C6416 * C32601 + C6415 * C2667 +
             (C6132 * C132 + C32450 * C141) * C32795 +
             (C6132 * C120 + C32450 * C127) * C2666) *
                C13591) *
               C530) *
              C32499 * C443)) /
            (p * q * std::sqrt(p + q));
    d2ee[59] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C754 * C119 + C748 * C126 + C755 * C120 + C749 * C127 +
             C756 * C121 + C32815 * C128) *
                C2666 +
            (C754 * C131 + C748 * C140 + C755 * C132 + C749 * C141 +
             C756 * C133 + C32815 * C142) *
                C32795 +
            (C931 + C932 + C933) * C2667 + (C934 + C935 + C936) * C32601) *
               C32796 +
           ((C2022 + C2023 + C2024) * C2666 + (C2025 + C2026 + C2027) * C32795 +
            (C1628 + C1627 + C1626) * C2667 +
            (C1625 + C1624 + C1623) * C32601) *
               C32641) *
              C32513 * C209 -
          (((C1617 + C1618 + C1619) * C32601 + (C1620 + C1621 + C1622) * C2667 +
            (C1623 + C1624 + C1625) * C32795 +
            (C1626 + C1627 + C1628) * C2666) *
               C32641 +
           ((C942 + C941 + C940) * C32601 + (C939 + C938 + C937) * C2667 +
            (C936 + C935 + C934) * C32795 + (C933 + C932 + C931) * C2666) *
               C32796) *
              C32513 * C210 +
          ((C951 * C2666 + C952 * C32795 + (C948 + C947 + C946) * C2667 +
            (C945 + C944 + C943) * C32601) *
               C32796 +
           ((C1622 + C1621 + C1620) * C2666 + (C1619 + C1618 + C1617) * C32795 +
            (C754 * C1580 + C748 * C1583 + C755 * C1581 + C749 * C1584 +
             C756 * C1582 + C32815 * C1585) *
                C2667 +
            (C754 * C1586 + C748 * C1589 + C755 * C1587 + C749 * C1590 +
             C756 * C1588 + C32815 * C1591) *
                C32601) *
               C32641) *
              C32513 * C211) *
         C32487) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C754 * C119 + C748 * C126 + C755 * C120 + C749 * C127 +
             C756 * C121 + C32815 * C128) *
                C2666 +
            (C754 * C131 + C748 * C140 + C755 * C132 + C749 * C141 +
             C756 * C133 + C32815 * C142) *
                C32795 +
            (C931 + C932 + C933) * C2667 + (C934 + C935 + C936) * C32601) *
               C32796 +
           ((C2022 + C2023 + C2024) * C2666 + (C2025 + C2026 + C2027) * C32795 +
            (C1628 + C1627 + C1626) * C2667 +
            (C1625 + C1624 + C1623) * C32601) *
               C32641) *
              C32513 * C32499 * C110 -
          (((C756 * C631 + C32815 * C636 + C755 * C630 + C749 * C635 +
             C754 * C629 + C748 * C634) *
                C32601 +
            (C756 * C621 + C32815 * C626 + C755 * C620 + C749 * C625 +
             C754 * C619 + C748 * C624) *
                C2667 +
            (C2376 + C2375 + C2374) * C32795 +
            (C2373 + C2372 + C2371) * C2666) *
               C32641 +
           ((C1278 + C1277 + C1276) * C32601 + (C1275 + C1274 + C1273) * C2667 +
            (C756 * C134 + C32815 * C143 + C755 * C133 + C749 * C142 +
             C754 * C132 + C748 * C141) *
                C32795 +
            (C756 * C122 + C32815 * C129 + C755 * C121 + C749 * C128 +
             C754 * C120 + C748 * C127) *
                C2666) *
               C32796) *
              C32513 * C32499 * C111 +
          (((C754 * C121 + C748 * C128 + C755 * C122 + C749 * C129 +
             C756 * C123 + C32815 * C130) *
                C2666 +
            (C754 * C133 + C748 * C142 + C755 * C134 + C749 * C143 +
             C756 * C135 + C32815 * C144) *
                C32795 +
            (C754 * C215 + C748 * C230 + C755 * C214 + C749 * C229 +
             C756 * C213 + C32815 * C228) *
                C2667 +
            (C754 * C225 + C748 * C245 + C755 * C224 + C749 * C244 +
             C756 * C223 + C32815 * C243) *
                C32601) *
               C32796 +
           ((C754 * C320 + C748 * C335 + C755 * C319 + C749 * C334 +
             C756 * C318 + C32815 * C333) *
                C2666 +
            (C754 * C330 + C748 * C350 + C755 * C329 + C749 * C349 +
             C756 * C328 + C32815 * C348) *
                C32795 +
            (C754 * C620 + C748 * C625 + C755 * C621 + C749 * C626 +
             C756 * C622 + C32815 * C627) *
                C2667 +
            (C754 * C630 + C748 * C635 + C755 * C631 + C749 * C636 +
             C756 * C632 + C32815 * C637) *
                C32601) *
               C32641) *
              C32513 * C32499 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C6132 * C119 + C32450 * C126) * C7647 +
            (C6132 * C131 + C32450 * C140) * C7641 + C6229 * C7648 +
            C6230 * C7642 + C6231 * C7649 + C6232 * C7643 + C6233 * C7650 +
            C6234 * C32836) *
               C32796 +
           (C7007 * C7647 + C7008 * C7641 + C6618 * C7648 + C6617 * C7642 +
            C6616 * C7649 + C6615 * C7643 + C6614 * C7650 + C6613 * C32836) *
               C32641) *
              C32513 * C32499 * C110 -
          (((C6132 * C1587 + C32450 * C1590) * C32836 +
            (C6132 * C1581 + C32450 * C1584) * C7650 + C7201 * C7643 +
            C7200 * C7649 + C7199 * C7642 + C7198 * C7648 + C7373 * C7641 +
            C7372 * C7647) *
               C32641 +
           (C6420 * C32836 + C6419 * C7650 + C6418 * C7643 + C6417 * C7649 +
            C6416 * C7642 + C6415 * C7648 +
            (C6132 * C132 + C32450 * C141) * C7641 +
            (C6132 * C120 + C32450 * C127) * C7647) *
               C32796) *
              C32513 * C32499 * C111 +
          (((C6132 * C121 + C32450 * C128) * C7647 +
            (C6132 * C133 + C32450 * C142) * C7641 +
            (C6132 * C215 + C32450 * C230) * C7648 +
            (C6132 * C225 + C32450 * C245) * C7642 +
            (C6132 * C220 + C32450 * C235) * C7649 +
            (C6132 * C240 + C32450 * C250) * C7643 +
            (C6132 * C870 + C32450 * C879) * C7650 +
            (C6132 * C876 + C32450 * C888) * C32836) *
               C32796 +
           ((C6132 * C320 + C32450 * C335) * C7647 +
            (C6132 * C330 + C32450 * C350) * C7641 +
            (C6132 * C620 + C32450 * C625) * C7648 +
            (C6132 * C630 + C32450 * C635) * C7642 +
            (C6132 * C1062 + C32450 * C1074) * C7649 +
            (C6132 * C1071 + C32450 * C1089) * C7643 +
            (C6132 * C1582 + C32450 * C1585) * C7650 +
            (C6132 * C1588 + C32450 * C1591) * C32836) *
               C32641) *
              C32513 * C32499 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C6132 * C119 + C32450 * C126) * C7647 +
            (C6132 * C131 + C32450 * C140) * C7641 + C6229 * C7648 +
            C6230 * C7642 + C6231 * C7649 + C6232 * C7643 + C6233 * C7650 +
            C6234 * C32836) *
               C32796 +
           (C7007 * C7647 + C7008 * C7641 + C6618 * C7648 + C6617 * C7642 +
            C6616 * C7649 + C6615 * C7643 + C6614 * C7650 + C6613 * C32836) *
               C32641) *
              C32513 * C209 -
          ((C6611 * C32836 + C6612 * C7650 + C6613 * C7643 + C6614 * C7649 +
            C6615 * C7642 + C6616 * C7648 + C6617 * C7641 + C6618 * C7647) *
               C32641 +
           (C6236 * C32836 + C6235 * C7650 + C6234 * C7643 + C6233 * C7649 +
            C6232 * C7642 + C6231 * C7648 + C6230 * C7641 + C6229 * C7647) *
               C32796) *
              C32513 * C210 +
          ((C6231 * C7647 + C6232 * C7641 + C6233 * C7648 + C6234 * C7642 +
            C6235 * C7649 + C6236 * C7643 + C6238 * C7650 + C6237 * C32836) *
               C32796 +
           (C6616 * C7647 + C6615 * C7641 + C6614 * C7648 + C6613 * C7642 +
            C6612 * C7649 + C6611 * C7643 +
            (C6132 * C6590 + C32450 * C6591) * C7650 +
            (C6132 * C6592 + C32450 * C6593) * C32836) *
               C32641) *
              C32513 * C211) *
         C32487) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C6132 * C119 + C32450 * C126) * C2666 +
            (C6132 * C131 + C32450 * C140) * C32795 + C6229 * C2667 +
            C6230 * C32601) *
               C13591 +
           (C7007 * C2666 + C7008 * C32795 + C6618 * C2667 + C6617 * C32601) *
               C13592 +
           (C7009 * C2666 + C7010 * C32795 + C6851 * C2667 + C6852 * C32601) *
               C13593 +
           (C7016 * C2666 + C7015 * C32795 + C7014 * C2667 + C7013 * C32601) *
               C32842) *
              C32513 * C32499 * C110 -
          (((C6132 * C2535 + C32450 * C2538) * C32601 +
            (C6132 * C2529 + C32450 * C2532) * C2667 + C12306 * C32795 +
            C12305 * C2666) *
               C32842 +
           (C7203 * C32601 + C7202 * C2667 + C7375 * C32795 + C7374 * C2666) *
               C13593 +
           (C7199 * C32601 + C7198 * C2667 + C7373 * C32795 + C7372 * C2666) *
               C13592 +
           (C6416 * C32601 + C6415 * C2667 +
            (C6132 * C132 + C32450 * C141) * C32795 +
            (C6132 * C120 + C32450 * C127) * C2666) *
               C13591) *
              C32513 * C32499 * C111 +
          (((C6132 * C121 + C32450 * C128) * C2666 +
            (C6132 * C133 + C32450 * C142) * C32795 +
            (C6132 * C215 + C32450 * C230) * C2667 +
            (C6132 * C225 + C32450 * C245) * C32601) *
               C13591 +
           ((C6132 * C320 + C32450 * C335) * C2666 +
            (C6132 * C330 + C32450 * C350) * C32795 +
            (C6132 * C620 + C32450 * C625) * C2667 +
            (C6132 * C630 + C32450 * C635) * C32601) *
               C13592 +
           ((C6132 * C325 + C32450 * C340) * C2666 +
            (C6132 * C345 + C32450 * C355) * C32795 +
            (C6132 * C1067 + C32450 * C1079) * C2667 +
            (C6132 * C1082 + C32450 * C1094) * C32601) *
               C13593 +
           ((C6132 * C1961 + C32450 * C1970) * C2666 +
            (C6132 * C1967 + C32450 * C1979) * C32795 +
            (C6132 * C2530 + C32450 * C2533) * C2667 +
            (C6132 * C2536 + C32450 * C2539) * C32601) *
               C32842) *
              C32513 * C32499 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C6132 * C119 + C32450 * C126) * C2666 +
            (C6132 * C131 + C32450 * C140) * C32795 + C6229 * C2667 +
            C6230 * C32601) *
               C13591 +
           (C7007 * C2666 + C7008 * C32795 + C6618 * C2667 + C6617 * C32601) *
               C13592 +
           (C7009 * C2666 + C7010 * C32795 + C6851 * C2667 + C6852 * C32601) *
               C13593 +
           (C7016 * C2666 + C7015 * C32795 + C7014 * C2667 + C7013 * C32601) *
               C32842) *
              C32513 * C209 -
          ((C7011 * C32601 + C7012 * C2667 + C7013 * C32795 + C7014 * C2666) *
               C32842 +
           (C6854 * C32601 + C6853 * C2667 + C6852 * C32795 + C6851 * C2666) *
               C13593 +
           (C6615 * C32601 + C6616 * C2667 + C6617 * C32795 + C6618 * C2666) *
               C13592 +
           (C6232 * C32601 + C6231 * C2667 + C6230 * C32795 + C6229 * C2666) *
               C13591) *
              C32513 * C210 +
          ((C6231 * C2666 + C6232 * C32795 + C6233 * C2667 + C6234 * C32601) *
               C13591 +
           (C6616 * C2666 + C6615 * C32795 + C6614 * C2667 + C6613 * C32601) *
               C13592 +
           (C6853 * C2666 + C6854 * C32795 + C6856 * C2667 + C6855 * C32601) *
               C13593 +
           (C7012 * C2666 + C7011 * C32795 +
            (C6132 * C7525 + C32450 * C7526) * C2667 +
            (C6132 * C7527 + C32450 * C7528) * C32601) *
               C32842) *
              C32513 * C211) *
         C32487) /
            (p * q * std::sqrt(p + q));
    d2ee[60] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C127 +
                 C115 * C121 + C103 * C128 + C116 * C122 + C104 * C129 +
                 C117 * C123 + C105 * C130) *
                    C118 +
                (C113 * C131 + C101 * C140 + C114 * C132 + C102 * C141 +
                 C115 * C133 + C103 * C142 + C116 * C134 + C104 * C143 +
                 C117 * C135 + C105 * C144) *
                    C32542) *
                   C32554 * C32513 * C440 -
               ((C117 * C223 + C105 * C243 + C116 * C224 + C104 * C244 +
                 C115 * C225 + C103 * C245 + C114 * C226 + C102 * C246 +
                 C113 * C227 + C101 * C247) *
                    C32542 +
                (C117 * C213 + C105 * C228 + C116 * C214 + C104 * C229 +
                 C115 * C215 + C103 * C230 + C114 * C216 + C102 * C231 +
                 C113 * C217 + C101 * C232) *
                    C118) *
                   C32554 * C32513 * C441) *
                  C442 +
              (((C113 * C216 + C101 * C231 + C114 * C215 + C102 * C230 +
                 C115 * C214 + C103 * C229 + C116 * C213 + C104 * C228 +
                 C117 * C444 + C105 * C445) *
                    C118 +
                (C113 * C226 + C101 * C246 + C114 * C225 + C102 * C245 +
                 C115 * C224 + C103 * C244 + C116 * C223 + C104 * C243 +
                 C117 * C446 + C105 * C447) *
                    C32542) *
                   C32554 * C32513 * C441 -
               ((C117 * C136 + C105 * C145 + C116 * C135 + C104 * C144 +
                 C115 * C134 + C103 * C143 + C114 * C133 + C102 * C142 +
                 C113 * C132 + C101 * C141) *
                    C32542 +
                (C117 * C124 + C105 * C137 + C116 * C123 + C104 * C130 +
                 C115 * C122 + C103 * C129 + C114 * C121 + C102 * C128 +
                 C113 * C120 + C101 * C127) *
                    C118) *
                   C32554 * C32513 * C440) *
                  C443) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C754 * C119 + C748 * C126 + C755 * C120 + C749 * C127 +
                 C756 * C121 + C32815 * C128) *
                    C757 +
                (C754 * C131 + C748 * C140 + C755 * C132 + C749 * C141 +
                 C756 * C133 + C32815 * C142) *
                    C32861 +
                (C931 + C932 + C933) * C758 + (C934 + C935 + C936) * C32849 +
                C951 * C759 + C952 * C32826) *
                   C32554 * C32513 * C440 -
               ((C943 + C944 + C945) * C32826 + (C946 + C947 + C948) * C759 +
                (C942 + C941 + C940) * C32849 + (C939 + C938 + C937) * C758 +
                (C936 + C935 + C934) * C32861 + (C933 + C932 + C931) * C757) *
                   C32554 * C32513 * C441) *
                  C442 +
              (((C1273 + C1274 + C1275) * C757 +
                (C1276 + C1277 + C1278) * C32861 +
                (C1279 + C1280 + C1281) * C758 +
                (C1282 + C1283 + C1284) * C32849 +
                (C754 * C871 + C748 * C880 + C755 * C870 + C749 * C879 +
                 C756 * C1244 + C32815 * C1245) *
                    C759 +
                (C754 * C877 + C748 * C889 + C755 * C876 + C749 * C888 +
                 C756 * C1246 + C32815 * C1247) *
                    C32826) *
                   C32554 * C32513 * C441 -
               ((C1284 + C1283 + C1282) * C32826 +
                (C1281 + C1280 + C1279) * C759 +
                (C1278 + C1277 + C1276) * C32849 +
                (C1275 + C1274 + C1273) * C758 +
                (C756 * C134 + C32815 * C143 + C755 * C133 + C749 * C142 +
                 C754 * C132 + C748 * C141) *
                    C32861 +
                (C756 * C122 + C32815 * C129 + C755 * C121 + C749 * C128 +
                 C754 * C120 + C748 * C127) *
                    C757) *
                   C32554 * C32513 * C440) *
                  C443)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C754 * C119 + C748 * C126 + C755 * C120 + C749 * C127 +
              C756 * C121 + C32815 * C128) *
                 C118 +
             (C754 * C131 + C748 * C140 + C755 * C132 + C749 * C141 +
              C756 * C133 + C32815 * C142) *
                 C32542) *
                C32862 +
            ((C2022 + C2023 + C2024) * C118 +
             (C2025 + C2026 + C2027) * C32542) *
                C32851 +
            C2046 * C32829) *
               C32513 * C440 -
           (((C756 * C1082 + C32815 * C1094 + C755 * C1081 + C749 * C1093 +
              C754 * C1080 + C748 * C1092) *
                 C32542 +
             (C756 * C1067 + C32815 * C1079 + C755 * C1066 + C749 * C1078 +
              C754 * C1065 + C748 * C1077) *
                 C118) *
                C32829 +
            ((C1623 + C1624 + C1625) * C32542 +
             (C1626 + C1627 + C1628) * C118) *
                C32851 +
            ((C936 + C935 + C934) * C32542 + (C933 + C932 + C931) * C118) *
                C32862) *
               C32513 * C441) *
              C442 +
          ((((C1273 + C1274 + C1275) * C118 +
             (C1276 + C1277 + C1278) * C32542) *
                C32862 +
            ((C754 * C619 + C748 * C624 + C755 * C620 + C749 * C625 +
              C756 * C621 + C32815 * C626) *
                 C118 +
             (C754 * C629 + C748 * C634 + C755 * C630 + C749 * C635 +
              C756 * C631 + C32815 * C636) *
                 C32542) *
                C32851 +
            ((C754 * C1066 + C748 * C1078 + C755 * C1067 + C749 * C1079 +
              C756 * C2192 + C32815 * C2193) *
                 C118 +
             (C754 * C1081 + C748 * C1093 + C755 * C1082 + C749 * C1094 +
              C756 * C2194 + C32815 * C2195) *
                 C32542) *
                C32829) *
               C32513 * C441 -
           (((C756 * C346 + C32815 * C356 + C755 * C345 + C749 * C355 +
              C754 * C344 + C748 * C354) *
                 C32542 +
             (C756 * C326 + C32815 * C341 + C755 * C325 + C749 * C340 +
              C754 * C324 + C748 * C339) *
                 C118) *
                C32829 +
            ((C756 * C329 + C32815 * C349 + C755 * C330 + C749 * C350 +
              C754 * C331 + C748 * C351) *
                 C32542 +
             (C756 * C319 + C32815 * C334 + C755 * C320 + C749 * C335 +
              C754 * C321 + C748 * C336) *
                 C118) *
                C32851 +
            ((C756 * C134 + C32815 * C143 + C755 * C133 + C749 * C142 +
              C754 * C132 + C748 * C141) *
                 C32542 +
             (C756 * C122 + C32815 * C129 + C755 * C121 + C749 * C128 +
              C754 * C120 + C748 * C127) *
                 C118) *
                C32862) *
               C32513 * C440) *
              C443)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C5270 * C119 + C32858 * C126 + C5271 * C120 + C32845 * C127 +
             C5272 * C121 + C32815 * C128) *
                C5273 +
            (C5270 * C131 + C32858 * C140 + C5271 * C132 + C32845 * C141 +
             C5272 * C133 + C32815 * C142) *
                C5267 +
            (C5423 + C5424 + C5425) * C5274 + (C5426 + C5427 + C5428) * C5268 +
            C5443 * C5275 + C5444 * C32826) *
               C32554 * C32513 * C440 -
           ((C5435 + C5436 + C5437) * C32826 + (C5438 + C5439 + C5440) * C5275 +
            (C5434 + C5433 + C5432) * C5268 + (C5431 + C5430 + C5429) * C5274 +
            (C5428 + C5427 + C5426) * C5267 + (C5425 + C5424 + C5423) * C5273) *
               C32554 * C32513 * C441) *
              C442 +
          (((C5725 + C5726 + C5727) * C5273 + (C5728 + C5729 + C5730) * C5267 +
            (C5731 + C5732 + C5733) * C5274 + (C5734 + C5735 + C5736) * C5268 +
            (C5270 * C871 + C32858 * C880 + C5271 * C870 + C32845 * C879 +
             C5272 * C1244 + C32815 * C1245) *
                C5275 +
            (C5270 * C877 + C32858 * C889 + C5271 * C876 + C32845 * C888 +
             C5272 * C1246 + C32815 * C1247) *
                C32826) *
               C32554 * C32513 * C441 -
           ((C5736 + C5735 + C5734) * C32826 + (C5733 + C5732 + C5731) * C5275 +
            (C5730 + C5729 + C5728) * C5268 + (C5727 + C5726 + C5725) * C5274 +
            (C5272 * C134 + C32815 * C143 + C5271 * C133 + C32845 * C142 +
             C5270 * C132 + C32858 * C141) *
                C5267 +
            (C5272 * C122 + C32815 * C129 + C5271 * C121 + C32845 * C128 +
             C5270 * C120 + C32858 * C127) *
                C5273) *
               C32554 * C32513 * C440) *
              C443)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C6132 * C119 + C32450 * C126) * C6133 +
            (C6132 * C131 + C32450 * C140) * C6127 + C6229 * C6134 +
            C6230 * C6128 + C6231 * C6135 + C6232 * C6129 + C6233 * C6136 +
            C6234 * C6130 + C6235 * C6137 + C6236 * C6131) *
               C32554 * C32513 * C440 -
           (C6237 * C6131 + C6238 * C6137 + C6236 * C6130 + C6235 * C6136 +
            C6234 * C6129 + C6233 * C6135 + C6232 * C6128 + C6231 * C6134 +
            C6230 * C6127 + C6229 * C6133) *
               C32554 * C32513 * C441) *
              C442 +
          ((C6415 * C6133 + C6416 * C6127 + C6417 * C6134 + C6418 * C6128 +
            C6419 * C6135 + C6420 * C6129 + C6421 * C6136 + C6422 * C6130 +
            (C6132 * C6394 + C32450 * C6395) * C6137 +
            (C6132 * C6396 + C32450 * C6397) * C6131) *
               C32554 * C32513 * C441 -
           (C6422 * C6131 + C6421 * C6137 + C6420 * C6130 + C6419 * C6136 +
            C6418 * C6129 + C6417 * C6135 + C6416 * C6128 + C6415 * C6134 +
            (C6132 * C132 + C32450 * C141) * C6127 +
            (C6132 * C120 + C32450 * C127) * C6133) *
               C32554 * C32513 * C440) *
              C443)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C6132 * C119 + C32450 * C126) * C5273 +
             (C6132 * C131 + C32450 * C140) * C5267 + C6229 * C5274 +
             C6230 * C5268 + C6231 * C5275 + C6232 * C32826) *
                C32862 +
            (C7017 + C7018 + C6983 + C6984 + C6985 + C6986) * C32851 +
            C7031 * C32829) *
               C32513 * C440 -
           ((C6855 * C32826 + C6856 * C5275 + C6854 * C5268 + C6853 * C5274 +
             C6852 * C5267 + C6851 * C5273) *
                C32829 +
            (C6613 * C32826 + C6614 * C5275 + C6615 * C5268 + C6616 * C5274 +
             C6617 * C5267 + C6618 * C5273) *
                C32851 +
            (C6234 * C32826 + C6233 * C5275 + C6232 * C5268 + C6231 * C5274 +
             C6230 * C5267 + C6229 * C5273) *
                C32862) *
               C32513 * C441) *
              C442 +
          (((C6415 * C5273 + C6416 * C5267 + C6417 * C5274 + C6418 * C5268 +
             C6419 * C5275 + C6420 * C32826) *
                C32862 +
            (C7198 * C5273 + C7199 * C5267 + C7200 * C5274 + C7201 * C5268 +
             (C6132 * C1581 + C32450 * C1584) * C5275 +
             (C6132 * C1587 + C32450 * C1590) * C32826) *
                C32851 +
            (C7202 * C5273 + C7203 * C5267 + C7204 * C5274 + C7205 * C5268 +
             (C6132 * C7177 + C32450 * C7178) * C5275 +
             (C6132 * C7179 + C32450 * C7180) * C32826) *
                C32829) *
               C32513 * C441 -
           ((C7205 * C32826 + C7204 * C5275 + C7203 * C5268 + C7202 * C5274 +
             (C6132 * C344 + C32450 * C354) * C5267 +
             (C6132 * C324 + C32450 * C339) * C5273) *
                C32829 +
            (C7201 * C32826 + C7200 * C5275 + C7199 * C5268 + C7198 * C5274 +
             (C6132 * C331 + C32450 * C351) * C5267 +
             (C6132 * C321 + C32450 * C336) * C5273) *
                C32851 +
            (C6418 * C32826 + C6417 * C5275 + C6416 * C5268 + C6415 * C5274 +
             (C6132 * C132 + C32450 * C141) * C5267 +
             (C6132 * C120 + C32450 * C127) * C5273) *
                C32862) *
               C32513 * C440) *
              C443)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C5270 * C119 + C32858 * C126 + C5271 * C120 + C32845 * C127 +
              C5272 * C121 + C32815 * C128) *
                 C118 +
             (C5270 * C131 + C32858 * C140 + C5271 * C132 + C32845 * C141 +
              C5272 * C133 + C32815 * C142) *
                 C32542) *
                C10305 +
            ((C10565 + C10566 + C10567) * C118 +
             (C10568 + C10569 + C10570) * C32542) *
                C10306 +
            C10589 * C32829) *
               C32513 * C440 -
           (((C5272 * C1082 + C32815 * C1094 + C5271 * C1081 + C32845 * C1093 +
              C5270 * C1080 + C32858 * C1092) *
                 C32542 +
             (C5272 * C1067 + C32815 * C1079 + C5271 * C1066 + C32845 * C1078 +
              C5270 * C1065 + C32858 * C1077) *
                 C118) *
                C32829 +
            ((C6059 + C6060 + C6061) * C32542 +
             (C6062 + C6063 + C6064) * C118) *
                C10306 +
            ((C5428 + C5427 + C5426) * C32542 +
             (C5425 + C5424 + C5423) * C118) *
                C10305) *
               C32513 * C441) *
              C442 +
          ((((C5725 + C5726 + C5727) * C118 +
             (C5728 + C5729 + C5730) * C32542) *
                C10305 +
            ((C5270 * C619 + C32858 * C624 + C5271 * C620 + C32845 * C625 +
              C5272 * C621 + C32815 * C626) *
                 C118 +
             (C5270 * C629 + C32858 * C634 + C5271 * C630 + C32845 * C635 +
              C5272 * C631 + C32815 * C636) *
                 C32542) *
                C10306 +
            ((C5270 * C1066 + C32858 * C1078 + C5271 * C1067 + C32845 * C1079 +
              C5272 * C2192 + C32815 * C2193) *
                 C118 +
             (C5270 * C1081 + C32858 * C1093 + C5271 * C1082 + C32845 * C1094 +
              C5272 * C2194 + C32815 * C2195) *
                 C32542) *
                C32829) *
               C32513 * C441 -
           (((C5272 * C346 + C32815 * C356 + C5271 * C345 + C32845 * C355 +
              C5270 * C344 + C32858 * C354) *
                 C32542 +
             (C5272 * C326 + C32815 * C341 + C5271 * C325 + C32845 * C340 +
              C5270 * C324 + C32858 * C339) *
                 C118) *
                C32829 +
            ((C5272 * C329 + C32815 * C349 + C5271 * C330 + C32845 * C350 +
              C5270 * C331 + C32858 * C351) *
                 C32542 +
             (C5272 * C319 + C32815 * C334 + C5271 * C320 + C32845 * C335 +
              C5270 * C321 + C32858 * C336) *
                 C118) *
                C10306 +
            ((C5272 * C134 + C32815 * C143 + C5271 * C133 + C32845 * C142 +
              C5270 * C132 + C32858 * C141) *
                 C32542 +
             (C5272 * C122 + C32815 * C129 + C5271 * C121 + C32845 * C128 +
              C5270 * C120 + C32858 * C127) *
                 C118) *
                C10305) *
               C32513 * C440) *
              C443)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C6132 * C119 + C32450 * C126) * C757 +
             (C6132 * C131 + C32450 * C140) * C32861 + C6229 * C758 +
             C6230 * C32849 + C6231 * C759 + C6232 * C32826) *
                C10305 +
            (C11412 + C11413 + C11414 + C11415 + C11416 + C11417) * C10306 +
            C11434 * C32829) *
               C32513 * C440 -
           ((C6855 * C32826 + C6856 * C759 + C6854 * C32849 + C6853 * C758 +
             C6852 * C32861 + C6851 * C757) *
                C32829 +
            (C6613 * C32826 + C6614 * C759 + C6615 * C32849 + C6616 * C758 +
             C6617 * C32861 + C6618 * C757) *
                C10306 +
            (C6234 * C32826 + C6233 * C759 + C6232 * C32849 + C6231 * C758 +
             C6230 * C32861 + C6229 * C757) *
                C10305) *
               C32513 * C441) *
              C442 +
          (((C6415 * C757 + C6416 * C32861 + C6417 * C758 + C6418 * C32849 +
             C6419 * C759 + C6420 * C32826) *
                C10305 +
            (C7198 * C757 + C7199 * C32861 + C7200 * C758 + C7201 * C32849 +
             C9918 * C759 + C9919 * C32826) *
                C10306 +
            (C7202 * C757 + C7203 * C32861 + C7204 * C758 + C7205 * C32849 +
             (C6132 * C7177 + C32450 * C7178) * C759 +
             (C6132 * C7179 + C32450 * C7180) * C32826) *
                C32829) *
               C32513 * C441 -
           ((C7205 * C32826 + C7204 * C759 + C7203 * C32849 + C7202 * C758 +
             C7375 * C32861 + C7374 * C757) *
                C32829 +
            (C7201 * C32826 + C7200 * C759 + C7199 * C32849 + C7198 * C758 +
             C7373 * C32861 + C7372 * C757) *
                C10306 +
            (C6418 * C32826 + C6417 * C759 + C6416 * C32849 + C6415 * C758 +
             (C6132 * C132 + C32450 * C141) * C32861 +
             (C6132 * C120 + C32450 * C127) * C757) *
                C10305) *
               C32513 * C440) *
              C443)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C6132 * C119 + C32450 * C126) * C118 +
             (C6132 * C131 + C32450 * C140) * C32542) *
                C11958 +
            (C12096 + C12097) * C11959 + C12110 * C11960 + C12111 * C11961 +
            C12120 * C11962) *
               C32513 * C440 -
           (((C6132 * C6972 + C32450 * C6976) * C32542 +
             (C6132 * C6967 + C32450 * C6971) * C118) *
                C11962 +
            (C7013 * C32542 + C7014 * C118) * C11961 +
            (C6852 * C32542 + C6851 * C118) * C11960 +
            (C6617 * C32542 + C6618 * C118) * C11959 +
            (C6230 * C32542 + C6229 * C118) * C11958) *
               C32513 * C441) *
              C442 +
          (((C6415 * C118 + C6416 * C32542) * C11958 +
            (C7198 * C118 + C7199 * C32542) * C11959 +
            (C7202 * C118 + C7203 * C32542) * C11960 +
            ((C6132 * C2529 + C32450 * C2532) * C118 +
             (C6132 * C2535 + C32450 * C2538) * C32542) *
                C11961 +
            ((C6132 * C12202 + C32450 * C12203) * C118 +
             (C6132 * C12204 + C32450 * C12205) * C32542) *
                C11962) *
               C32513 * C441 -
           (((C6132 * C1977 + C32450 * C1983) * C32542 +
             (C6132 * C1965 + C32450 * C1974) * C118) *
                C11962 +
            ((C6132 * C1968 + C32450 * C1980) * C32542 +
             (C6132 * C1962 + C32450 * C1971) * C118) *
                C11961 +
            (C7375 * C32542 + C7374 * C118) * C11960 +
            (C7373 * C32542 + C7372 * C118) * C11959 +
            ((C6132 * C132 + C32450 * C141) * C32542 +
             (C6132 * C120 + C32450 * C127) * C118) *
                C11958) *
               C32513 * C440) *
              C443)) /
            (p * q * std::sqrt(p + q));
    d2ee[61] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C127 +
                 C115 * C121 + C103 * C128 + C116 * C122 + C104 * C129 +
                 C117 * C123 + C105 * C130) *
                    C118 +
                (C113 * C131 + C101 * C140 + C114 * C132 + C102 * C141 +
                 C115 * C133 + C103 * C142 + C116 * C134 + C104 * C143 +
                 C117 * C135 + C105 * C144) *
                    C32542) *
                   C32554 * C530 -
               ((C117 * C328 + C105 * C348 + C116 * C329 + C104 * C349 +
                 C115 * C330 + C103 * C350 + C114 * C331 + C102 * C351 +
                 C113 * C332 + C101 * C352) *
                    C32542 +
                (C117 * C318 + C105 * C333 + C116 * C319 + C104 * C334 +
                 C115 * C320 + C103 * C335 + C114 * C321 + C102 * C336 +
                 C113 * C322 + C101 * C337) *
                    C118) *
                   C32554 * C531) *
                  C440 +
              (((C113 * C618 + C101 * C623 + C114 * C619 + C102 * C624 +
                 C115 * C620 + C103 * C625 + C116 * C621 + C104 * C626 +
                 C117 * C622 + C105 * C627) *
                    C118 +
                (C113 * C628 + C101 * C633 + C114 * C629 + C102 * C634 +
                 C115 * C630 + C103 * C635 + C116 * C631 + C104 * C636 +
                 C117 * C632 + C105 * C637) *
                    C32542) *
                   C32554 * C531 -
               ((C117 * C223 + C105 * C243 + C116 * C224 + C104 * C244 +
                 C115 * C225 + C103 * C245 + C114 * C226 + C102 * C246 +
                 C113 * C227 + C101 * C247) *
                    C32542 +
                (C117 * C213 + C105 * C228 + C116 * C214 + C104 * C229 +
                 C115 * C215 + C103 * C230 + C114 * C216 + C102 * C231 +
                 C113 * C217 + C101 * C232) *
                    C118) *
                   C32554 * C530) *
                  C441) *
             C32487 +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C754 * C119 + C748 * C126 + C755 * C120 + C749 * C127 +
                 C756 * C121 + C32815 * C128) *
                    C757 +
                (C754 * C131 + C748 * C140 + C755 * C132 + C749 * C141 +
                 C756 * C133 + C32815 * C142) *
                    C32861 +
                (C931 + C932 + C933) * C758 + (C934 + C935 + C936) * C32849 +
                C951 * C759 + C952 * C32826) *
                   C32554 * C530 -
               ((C1617 + C1618 + C1619) * C32826 +
                (C1620 + C1621 + C1622) * C759 +
                (C1623 + C1624 + C1625) * C32849 +
                (C1626 + C1627 + C1628) * C758 +
                (C756 * C330 + C32815 * C350 + C755 * C331 + C749 * C351 +
                 C754 * C332 + C748 * C352) *
                    C32861 +
                (C756 * C320 + C32815 * C335 + C755 * C321 + C749 * C336 +
                 C754 * C322 + C748 * C337) *
                    C757) *
                   C32554 * C531) *
                  C440 +
              (((C1628 + C1627 + C1626) * C757 +
                (C1625 + C1624 + C1623) * C32861 +
                (C1622 + C1621 + C1620) * C758 +
                (C1619 + C1618 + C1617) * C32849 +
                (C754 * C1580 + C748 * C1583 + C755 * C1581 + C749 * C1584 +
                 C756 * C1582 + C32815 * C1585) *
                    C759 +
                (C754 * C1586 + C748 * C1589 + C755 * C1587 + C749 * C1590 +
                 C756 * C1588 + C32815 * C1591) *
                    C32826) *
                   C32554 * C531 -
               ((C943 + C944 + C945) * C32826 + (C946 + C947 + C948) * C759 +
                (C942 + C941 + C940) * C32849 + (C939 + C938 + C937) * C758 +
                (C936 + C935 + C934) * C32861 + (C933 + C932 + C931) * C757) *
                   C32554 * C530) *
                  C441) *
             C32487) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C754 * C119 + C748 * C126 + C755 * C120 + C749 * C127 +
              C756 * C121 + C32815 * C128) *
                 C118 +
             (C754 * C131 + C748 * C140 + C755 * C132 + C749 * C141 +
              C756 * C133 + C32815 * C142) *
                 C32542) *
                C32862 +
            ((C2022 + C2023 + C2024) * C118 +
             (C2025 + C2026 + C2027) * C32542) *
                C32851 +
            C2046 * C32829) *
               C530 -
           (((C2034 + C2035 + C2036) * C32542 +
             (C2037 + C2038 + C2039) * C118) *
                C32829 +
            ((C2033 + C2032 + C2031) * C32542 +
             (C2030 + C2029 + C2028) * C118) *
                C32851 +
            ((C2027 + C2026 + C2025) * C32542 +
             (C2024 + C2023 + C2022) * C118) *
                C32862) *
               C531) *
              C440 +
          ((((C1628 + C1627 + C1626) * C118 +
             (C1625 + C1624 + C1623) * C32542) *
                C32862 +
            ((C2553 + C2554 + C2555) * C118 +
             (C2556 + C2557 + C2558) * C32542) *
                C32851 +
            ((C754 * C2528 + C748 * C2531 + C755 * C2529 + C749 * C2532 +
              C756 * C2530 + C32815 * C2533) *
                 C118 +
             (C754 * C2534 + C748 * C2537 + C755 * C2535 + C749 * C2538 +
              C756 * C2536 + C32815 * C2539) *
                 C32542) *
                C32829) *
               C531 -
           (((C2558 + C2557 + C2556) * C32542 +
             (C2555 + C2554 + C2553) * C118) *
                C32829 +
            ((C1623 + C1624 + C1625) * C32542 +
             (C1626 + C1627 + C1628) * C118) *
                C32851 +
            ((C936 + C935 + C934) * C32542 + (C933 + C932 + C931) * C118) *
                C32862) *
               C530) *
              C441) *
         C32487) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C5270 * C119 + C32858 * C126 + C5271 * C120 + C32845 * C127 +
             C5272 * C121 + C32815 * C128) *
                C5273 +
            (C5270 * C131 + C32858 * C140 + C5271 * C132 + C32845 * C141 +
             C5272 * C133 + C32815 * C142) *
                C5267 +
            (C5423 + C5424 + C5425) * C5274 + (C5426 + C5427 + C5428) * C5268 +
            C5443 * C5275 + C5444 * C32826) *
               C32554 * C530 -
           ((C6053 + C6054 + C6055) * C32826 + (C6056 + C6057 + C6058) * C5275 +
            (C6059 + C6060 + C6061) * C5268 + (C6062 + C6063 + C6064) * C5274 +
            (C5272 * C330 + C32815 * C350 + C5271 * C331 + C32845 * C351 +
             C5270 * C332 + C32858 * C352) *
                C5267 +
            (C5272 * C320 + C32815 * C335 + C5271 * C321 + C32845 * C336 +
             C5270 * C322 + C32858 * C337) *
                C5273) *
               C32554 * C531) *
              C440 +
          (((C6064 + C6063 + C6062) * C5273 + (C6061 + C6060 + C6059) * C5267 +
            (C6058 + C6057 + C6056) * C5274 + (C6055 + C6054 + C6053) * C5268 +
            (C5270 * C1580 + C32858 * C1583 + C5271 * C1581 + C32845 * C1584 +
             C5272 * C1582 + C32815 * C1585) *
                C5275 +
            (C5270 * C1586 + C32858 * C1589 + C5271 * C1587 + C32845 * C1590 +
             C5272 * C1588 + C32815 * C1591) *
                C32826) *
               C32554 * C531 -
           ((C5435 + C5436 + C5437) * C32826 + (C5438 + C5439 + C5440) * C5275 +
            (C5434 + C5433 + C5432) * C5268 + (C5431 + C5430 + C5429) * C5274 +
            (C5428 + C5427 + C5426) * C5267 + (C5425 + C5424 + C5423) * C5273) *
               C32554 * C530) *
              C441) *
         C32487) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C6132 * C119 + C32450 * C126) * C6133 +
            (C6132 * C131 + C32450 * C140) * C6127 + C6229 * C6134 +
            C6230 * C6128 + C6231 * C6135 + C6232 * C6129 + C6233 * C6136 +
            C6234 * C6130 + C6235 * C6137 + C6236 * C6131) *
               C32554 * C530 -
           (C6611 * C6131 + C6612 * C6137 + C6613 * C6130 + C6614 * C6136 +
            C6615 * C6129 + C6616 * C6135 + C6617 * C6128 + C6618 * C6134 +
            (C6132 * C332 + C32450 * C352) * C6127 +
            (C6132 * C322 + C32450 * C337) * C6133) *
               C32554 * C531) *
              C440 +
          ((C6618 * C6133 + C6617 * C6127 + C6616 * C6134 + C6615 * C6128 +
            C6614 * C6135 + C6613 * C6129 + C6612 * C6136 + C6611 * C6130 +
            (C6132 * C6590 + C32450 * C6591) * C6137 +
            (C6132 * C6592 + C32450 * C6593) * C6131) *
               C32554 * C531 -
           (C6237 * C6131 + C6238 * C6137 + C6236 * C6130 + C6235 * C6136 +
            C6234 * C6129 + C6233 * C6135 + C6232 * C6128 + C6231 * C6134 +
            C6230 * C6127 + C6229 * C6133) *
               C32554 * C530) *
              C441) *
         C32487) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C6132 * C119 + C32450 * C126) * C5273 +
             (C6132 * C131 + C32450 * C140) * C5267 + C6229 * C5274 +
             C6230 * C5268 + C6231 * C5275 + C6232 * C32826) *
                C32862 +
            (C7017 + C7018 + C6983 + C6984 + C6985 + C6986) * C32851 +
            C7031 * C32829) *
               C530 -
           ((C7021 + C7022 + C7023 + C7024 + C7025 + C7026) * C32829 +
            (C6994 + C6993 + C6992 + C6991 + C7020 + C7019) * C32851 +
            (C6986 + C6985 + C6984 + C6983 + C7018 + C7017) * C32862) *
               C531) *
              C440 +
          (((C7530 + C7531 + C7532 + C7533 + C7534 + C7535) * C32862 +
            (C7536 + C7537 + C7538 + C7539 + C7540 + C7541) * C32851 +
            (C7014 * C5273 + C7013 * C5267 + C7012 * C5274 + C7011 * C5268 +
             (C6132 * C7525 + C32450 * C7526) * C5275 +
             (C6132 * C7527 + C32450 * C7528) * C32826) *
                C32829) *
               C531 -
           ((C7541 + C7540 + C7539 + C7538 + C7537 + C7536) * C32829 +
            (C7535 + C7534 + C7533 + C7532 + C7531 + C7530) * C32851 +
            (C6234 * C32826 + C6233 * C5275 + C6232 * C5268 + C6231 * C5274 +
             C6230 * C5267 + C6229 * C5273) *
                C32862) *
               C530) *
              C441) *
         C32487) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C5270 * C119 + C32858 * C126 + C5271 * C120 + C32845 * C127 +
              C5272 * C121 + C32815 * C128) *
                 C118 +
             (C5270 * C131 + C32858 * C140 + C5271 * C132 + C32845 * C141 +
              C5272 * C133 + C32815 * C142) *
                 C32542) *
                C10305 +
            ((C10565 + C10566 + C10567) * C118 +
             (C10568 + C10569 + C10570) * C32542) *
                C10306 +
            C10589 * C32829) *
               C530 -
           (((C10577 + C10578 + C10579) * C32542 +
             (C10580 + C10581 + C10582) * C118) *
                C32829 +
            ((C10576 + C10575 + C10574) * C32542 +
             (C10573 + C10572 + C10571) * C118) *
                C10306 +
            ((C10570 + C10569 + C10568) * C32542 +
             (C10567 + C10566 + C10565) * C118) *
                C10305) *
               C531) *
              C440 +
          ((((C6064 + C6063 + C6062) * C118 +
             (C6061 + C6060 + C6059) * C32542) *
                C10305 +
            ((C11076 + C11077 + C11078) * C118 +
             (C11079 + C11080 + C11081) * C32542) *
                C10306 +
            ((C5270 * C2528 + C32858 * C2531 + C5271 * C2529 + C32845 * C2532 +
              C5272 * C2530 + C32815 * C2533) *
                 C118 +
             (C5270 * C2534 + C32858 * C2537 + C5271 * C2535 + C32845 * C2538 +
              C5272 * C2536 + C32815 * C2539) *
                 C32542) *
                C32829) *
               C531 -
           (((C11081 + C11080 + C11079) * C32542 +
             (C11078 + C11077 + C11076) * C118) *
                C32829 +
            ((C6059 + C6060 + C6061) * C32542 +
             (C6062 + C6063 + C6064) * C118) *
                C10306 +
            ((C5428 + C5427 + C5426) * C32542 +
             (C5425 + C5424 + C5423) * C118) *
                C10305) *
               C530) *
              C441) *
         C32487) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C6132 * C119 + C32450 * C126) * C757 +
             (C6132 * C131 + C32450 * C140) * C32861 + C6229 * C758 +
             C6230 * C32849 + C6231 * C759 + C6232 * C32826) *
                C10305 +
            (C11412 + C11413 + C11414 + C11415 + C11416 + C11417) * C10306 +
            C11434 * C32829) *
               C530 -
           ((C11424 + C11425 + C11426 + C11427 + C11428 + C11429) * C32829 +
            (C11423 + C11422 + C11421 + C11420 + C11419 + C11418) * C10306 +
            (C11417 + C11416 + C11415 + C11414 + C11413 + C11412) * C10305) *
               C531) *
              C440 +
          (((C11885 + C11886 + C11887 + C11888 + C11889 + C11890) * C10305 +
            (C11891 + C11892 + C11893 + C11894 + C11895 + C11896) * C10306 +
            (C7014 * C757 + C7013 * C32861 + C7012 * C758 + C7011 * C32849 +
             (C6132 * C7525 + C32450 * C7526) * C759 +
             (C6132 * C7527 + C32450 * C7528) * C32826) *
                C32829) *
               C531 -
           ((C11896 + C11895 + C11894 + C11893 + C11892 + C11891) * C32829 +
            (C11890 + C11889 + C11888 + C11887 + C11886 + C11885) * C10306 +
            (C6234 * C32826 + C6233 * C759 + C6232 * C32849 + C6231 * C758 +
             C6230 * C32861 + C6229 * C757) *
                C10305) *
               C530) *
              C441) *
         C32487) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C6132 * C119 + C32450 * C126) * C118 +
             (C6132 * C131 + C32450 * C140) * C32542) *
                C11958 +
            (C12096 + C12097) * C11959 + C12110 * C11960 + C12111 * C11961 +
            C12120 * C11962) *
               C530 -
           ((C12118 + C12119) * C11962 + (C12117 + C12116) * C11961 +
            (C12101 + C12100) * C11960 + (C12099 + C12098) * C11959 +
            (C12097 + C12096) * C11958) *
               C531) *
              C440 +
          (((C12399 + C12400) * C11958 + (C12401 + C12402) * C11959 +
            (C12403 + C12404) * C11960 + (C12411 + C12412) * C11961 +
            ((C6132 * C12394 + C32450 * C12395) * C118 +
             (C6132 * C12396 + C32450 * C12397) * C32542) *
                C11962) *
               C531 -
           ((C12412 + C12411) * C11962 + (C12404 + C12403) * C11961 +
            (C12402 + C12401) * C11960 + (C12400 + C12399) * C11959 +
            (C6230 * C32542 + C6229 * C118) * C11958) *
               C530) *
              C441) *
         C32487) /
            (p * q * std::sqrt(p + q));
    d2ee[62] +=
        (-0.25 * std::pow(Pi, 2.5) *
             (((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C127 +
                C115 * C121 + C103 * C128 + C116 * C122 + C104 * C129 +
                C117 * C123 + C105 * C130) *
                   C118 +
               (C113 * C131 + C101 * C140 + C114 * C132 + C102 * C141 +
                C115 * C133 + C103 * C142 + C116 * C134 + C104 * C143 +
                C117 * C135 + C105 * C144) *
                   C32542) *
                  C32554 * C32513 * C32499 * C110 -
              ((C117 * C136 + C105 * C145 + C116 * C135 + C104 * C144 +
                C115 * C134 + C103 * C143 + C114 * C133 + C102 * C142 +
                C113 * C132 + C101 * C141) *
                   C32542 +
               (C117 * C124 + C105 * C137 + C116 * C123 + C104 * C130 +
                C115 * C122 + C103 * C129 + C114 * C121 + C102 * C128 +
                C113 * C120 + C101 * C127) *
                   C118) *
                  C32554 * C32513 * C32499 * C111 +
              ((C113 * C121 + C101 * C128 + C114 * C122 + C102 * C129 +
                C115 * C123 + C103 * C130 + C116 * C124 + C104 * C137 +
                C117 * C125 + C105 * C138) *
                   C118 +
               (C113 * C133 + C101 * C142 + C114 * C134 + C102 * C143 +
                C115 * C135 + C103 * C144 + C116 * C136 + C104 * C145 +
                C117 * C139 + C105 * C146) *
                   C32542) *
                  C32554 * C32513 * C32499 * C112) -
         0.25 * std::pow(Pi, 2.5) *
             (((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C127 +
                C115 * C121 + C103 * C128 + C116 * C122 + C104 * C129 +
                C117 * C123 + C105 * C130) *
                   C118 +
               (C113 * C131 + C101 * C140 + C114 * C132 + C102 * C141 +
                C115 * C133 + C103 * C142 + C116 * C134 + C104 * C143 +
                C117 * C135 + C105 * C144) *
                   C32542) *
                  C32554 * C32513 * C209 -
              ((C117 * C223 + C105 * C243 + C116 * C224 + C104 * C244 +
                C115 * C225 + C103 * C245 + C114 * C226 + C102 * C246 +
                C113 * C227 + C101 * C247) *
                   C32542 +
               (C117 * C213 + C105 * C228 + C116 * C214 + C104 * C229 +
                C115 * C215 + C103 * C230 + C114 * C216 + C102 * C231 +
                C113 * C217 + C101 * C232) *
                   C118) *
                  C32554 * C32513 * C210 +
              ((C113 * C218 + C101 * C233 + C114 * C219 + C102 * C234 +
                C115 * C220 + C103 * C235 + C116 * C221 + C104 * C236 +
                C117 * C222 + C105 * C237) *
                   C118 +
               (C113 * C238 + C101 * C248 + C114 * C239 + C102 * C249 +
                C115 * C240 + C103 * C250 + C116 * C241 + C104 * C251 +
                C117 * C242 + C105 * C252) *
                   C32542) *
                  C32554 * C32513 * C211) *
             C32487 +
         0.5 * std::pow(Pi, 2.5) *
             (((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C127 +
                C115 * C121 + C103 * C128 + C116 * C122 + C104 * C129 +
                C117 * C123 + C105 * C130) *
                   C118 +
               (C113 * C131 + C101 * C140 + C114 * C132 + C102 * C141 +
                C115 * C133 + C103 * C142 + C116 * C134 + C104 * C143 +
                C117 * C135 + C105 * C144) *
                   C32542) *
                  C32554 * C315 -
              ((C117 * C328 + C105 * C348 + C116 * C329 + C104 * C349 +
                C115 * C330 + C103 * C350 + C114 * C331 + C102 * C351 +
                C113 * C332 + C101 * C352) *
                   C32542 +
               (C117 * C318 + C105 * C333 + C116 * C319 + C104 * C334 +
                C115 * C320 + C103 * C335 + C114 * C321 + C102 * C336 +
                C113 * C322 + C101 * C337) *
                   C118) *
                  C32554 * C316 +
              ((C113 * C323 + C101 * C338 + C114 * C324 + C102 * C339 +
                C115 * C325 + C103 * C340 + C116 * C326 + C104 * C341 +
                C117 * C327 + C105 * C342) *
                   C118 +
               (C113 * C343 + C101 * C353 + C114 * C344 + C102 * C354 +
                C115 * C345 + C103 * C355 + C116 * C346 + C104 * C356 +
                C117 * C347 + C105 * C357) *
                   C32542) *
                  C32554 * C317) *
             C32499 * C32487 -
         0.25 * std::pow(Pi, 2.5) *
             (((C754 * C119 + C748 * C126 + C755 * C120 + C749 * C127 +
                C756 * C121 + C32815 * C128) *
                   C757 +
               (C754 * C131 + C748 * C140 + C755 * C132 + C749 * C141 +
                C756 * C133 + C32815 * C142) *
                   C32861 +
               (C754 * C217 + C748 * C232 + C755 * C216 + C749 * C231 +
                C756 * C215 + C32815 * C230) *
                   C758 +
               (C754 * C227 + C748 * C247 + C755 * C226 + C749 * C246 +
                C756 * C225 + C32815 * C245) *
                   C32849 +
               (C754 * C218 + C748 * C233 + C755 * C219 + C749 * C234 +
                C756 * C220 + C32815 * C235) *
                   C759 +
               (C754 * C238 + C748 * C248 + C755 * C239 + C749 * C249 +
                C756 * C240 + C32815 * C250) *
                   C32826) *
                  C32554 * C32513 * C32499 * C110 -
              ((C756 * C241 + C32815 * C251 + C755 * C240 + C749 * C250 +
                C754 * C239 + C748 * C249) *
                   C32826 +
               (C756 * C221 + C32815 * C236 + C755 * C220 + C749 * C235 +
                C754 * C219 + C748 * C234) *
                   C759 +
               (C756 * C224 + C32815 * C244 + C755 * C225 + C749 * C245 +
                C754 * C226 + C748 * C246) *
                   C32849 +
               (C756 * C214 + C32815 * C229 + C755 * C215 + C749 * C230 +
                C754 * C216 + C748 * C231) *
                   C758 +
               (C756 * C134 + C32815 * C143 + C755 * C133 + C749 * C142 +
                C754 * C132 + C748 * C141) *
                   C32861 +
               (C756 * C122 + C32815 * C129 + C755 * C121 + C749 * C128 +
                C754 * C120 + C748 * C127) *
                   C757) *
                  C32554 * C32513 * C32499 * C111 +
              ((C754 * C121 + C748 * C128 + C755 * C122 + C749 * C129 +
                C756 * C123 + C32815 * C130) *
                   C757 +
               (C754 * C133 + C748 * C142 + C755 * C134 + C749 * C143 +
                C756 * C135 + C32815 * C144) *
                   C32861 +
               (C754 * C215 + C748 * C230 + C755 * C214 + C749 * C229 +
                C756 * C213 + C32815 * C228) *
                   C758 +
               (C754 * C225 + C748 * C245 + C755 * C224 + C749 * C244 +
                C756 * C223 + C32815 * C243) *
                   C32849 +
               (C754 * C220 + C748 * C235 + C755 * C221 + C749 * C236 +
                C756 * C222 + C32815 * C237) *
                   C759 +
               (C754 * C240 + C748 * C250 + C755 * C241 + C749 * C251 +
                C756 * C242 + C32815 * C252) *
                   C32826) *
                  C32554 * C32513 * C32499 * C112) -
         0.25 * std::pow(Pi, 2.5) *
             (((C754 * C119 + C748 * C126 + C755 * C120 + C749 * C127 +
                C756 * C121 + C32815 * C128) *
                   C757 +
               (C754 * C131 + C748 * C140 + C755 * C132 + C749 * C141 +
                C756 * C133 + C32815 * C142) *
                   C32861 +
               (C931 + C932 + C933) * C758 + (C934 + C935 + C936) * C32849 +
               C951 * C759 + C952 * C32826) *
                  C32554 * C32513 * C209 -
              ((C943 + C944 + C945) * C32826 + (C946 + C947 + C948) * C759 +
               (C942 + C941 + C940) * C32849 + (C939 + C938 + C937) * C758 +
               (C936 + C935 + C934) * C32861 + (C933 + C932 + C931) * C757) *
                  C32554 * C32513 * C210 +
              (C951 * C757 + C952 * C32861 + (C948 + C947 + C946) * C758 +
               (C945 + C944 + C943) * C32849 +
               (C754 * C873 + C748 * C882 + C755 * C874 + C749 * C883 +
                C756 * C875 + C32815 * C884) *
                   C759 +
               (C754 * C885 + C748 * C891 + C755 * C886 + C749 * C892 +
                C756 * C887 + C32815 * C893) *
                   C32826) *
                  C32554 * C32513 * C211) *
             C32487 +
         0.5 * std::pow(Pi, 2.5) *
             (((C754 * C119 + C748 * C126 + C755 * C120 + C749 * C127 +
                C756 * C121 + C32815 * C128) *
                   C757 +
               (C754 * C131 + C748 * C140 + C755 * C132 + C749 * C141 +
                C756 * C133 + C32815 * C142) *
                   C32861 +
               (C931 + C932 + C933) * C758 + (C934 + C935 + C936) * C32849 +
               C951 * C759 + C952 * C32826) *
                  C32554 * C315 -
              ((C756 * C1071 + C32815 * C1089 + C755 * C1072 + C749 * C1090 +
                C754 * C1073 + C748 * C1091) *
                   C32826 +
               (C756 * C1062 + C32815 * C1074 + C755 * C1063 + C749 * C1075 +
                C754 * C1064 + C748 * C1076) *
                   C759 +
               (C756 * C630 + C32815 * C635 + C755 * C629 + C749 * C634 +
                C754 * C628 + C748 * C633) *
                   C32849 +
               (C756 * C620 + C32815 * C625 + C755 * C619 + C749 * C624 +
                C754 * C618 + C748 * C623) *
                   C758 +
               (C756 * C330 + C32815 * C350 + C755 * C331 + C749 * C351 +
                C754 * C332 + C748 * C352) *
                   C32861 +
               (C756 * C320 + C32815 * C335 + C755 * C321 + C749 * C336 +
                C754 * C322 + C748 * C337) *
                   C757) *
                  C32554 * C316 +
              ((C754 * C323 + C748 * C338 + C755 * C324 + C749 * C339 +
                C756 * C325 + C32815 * C340) *
                   C757 +
               (C754 * C343 + C748 * C353 + C755 * C344 + C749 * C354 +
                C756 * C345 + C32815 * C355) *
                   C32861 +
               (C754 * C1065 + C748 * C1077 + C755 * C1066 + C749 * C1078 +
                C756 * C1067 + C32815 * C1079) *
                   C758 +
               (C754 * C1080 + C748 * C1092 + C755 * C1081 + C749 * C1093 +
                C756 * C1082 + C32815 * C1094) *
                   C32849 +
               (C754 * C1068 + C748 * C1083 + C755 * C1069 + C749 * C1084 +
                C756 * C1070 + C32815 * C1085) *
                   C759 +
               (C754 * C1086 + C748 * C1095 + C755 * C1087 + C749 * C1096 +
                C756 * C1088 + C32815 * C1097) *
                   C32826) *
                  C32554 * C317) *
             C32499 * C32487 +
         0.5 * std::pow(Pi, 2.5) *
             ((((C754 * C119 + C748 * C126 + C755 * C120 + C749 * C127 +
                 C756 * C121 + C32815 * C128) *
                    C118 +
                (C754 * C131 + C748 * C140 + C755 * C132 + C749 * C141 +
                 C756 * C133 + C32815 * C142) *
                    C32542) *
                   C32862 +
               ((C754 * C322 + C748 * C337 + C755 * C321 + C749 * C336 +
                 C756 * C320 + C32815 * C335) *
                    C118 +
                (C754 * C332 + C748 * C352 + C755 * C331 + C749 * C351 +
                 C756 * C330 + C32815 * C350) *
                    C32542) *
                   C32851 +
               ((C754 * C323 + C748 * C338 + C755 * C324 + C749 * C339 +
                 C756 * C325 + C32815 * C340) *
                    C118 +
                (C754 * C343 + C748 * C353 + C755 * C344 + C749 * C354 +
                 C756 * C345 + C32815 * C355) *
                    C32542) *
                   C32829) *
                  C32513 * C32499 * C110 -
              (((C756 * C346 + C32815 * C356 + C755 * C345 + C749 * C355 +
                 C754 * C344 + C748 * C354) *
                    C32542 +
                (C756 * C326 + C32815 * C341 + C755 * C325 + C749 * C340 +
                 C754 * C324 + C748 * C339) *
                    C118) *
                   C32829 +
               ((C756 * C329 + C32815 * C349 + C755 * C330 + C749 * C350 +
                 C754 * C331 + C748 * C351) *
                    C32542 +
                (C756 * C319 + C32815 * C334 + C755 * C320 + C749 * C335 +
                 C754 * C321 + C748 * C336) *
                    C118) *
                   C32851 +
               ((C756 * C134 + C32815 * C143 + C755 * C133 + C749 * C142 +
                 C754 * C132 + C748 * C141) *
                    C32542 +
                (C756 * C122 + C32815 * C129 + C755 * C121 + C749 * C128 +
                 C754 * C120 + C748 * C127) *
                    C118) *
                   C32862) *
                  C32513 * C32499 * C111 +
              (((C754 * C121 + C748 * C128 + C755 * C122 + C749 * C129 +
                 C756 * C123 + C32815 * C130) *
                    C118 +
                (C754 * C133 + C748 * C142 + C755 * C134 + C749 * C143 +
                 C756 * C135 + C32815 * C144) *
                    C32542) *
                   C32862 +
               ((C754 * C320 + C748 * C335 + C755 * C319 + C749 * C334 +
                 C756 * C318 + C32815 * C333) *
                    C118 +
                (C754 * C330 + C748 * C350 + C755 * C329 + C749 * C349 +
                 C756 * C328 + C32815 * C348) *
                    C32542) *
                   C32851 +
               ((C754 * C325 + C748 * C340 + C755 * C326 + C749 * C341 +
                 C756 * C327 + C32815 * C342) *
                    C118 +
                (C754 * C345 + C748 * C355 + C755 * C346 + C749 * C356 +
                 C756 * C347 + C32815 * C357) *
                    C32542) *
                   C32829) *
                  C32513 * C32499 * C112) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C754 * C119 + C748 * C126 + C755 * C120 + C749 * C127 +
                 C756 * C121 + C32815 * C128) *
                    C118 +
                (C754 * C131 + C748 * C140 + C755 * C132 + C749 * C141 +
                 C756 * C133 + C32815 * C142) *
                    C32542) *
                   C32862 +
               ((C754 * C322 + C748 * C337 + C755 * C321 + C749 * C336 +
                 C756 * C320 + C32815 * C335) *
                    C118 +
                (C754 * C332 + C748 * C352 + C755 * C331 + C749 * C351 +
                 C756 * C330 + C32815 * C350) *
                    C32542) *
                   C32851 +
               ((C754 * C323 + C748 * C338 + C755 * C324 + C749 * C339 +
                 C756 * C325 + C32815 * C340) *
                    C118 +
                (C754 * C343 + C748 * C353 + C755 * C344 + C749 * C354 +
                 C756 * C345 + C32815 * C355) *
                    C32542) *
                   C32829) *
                  C32513 * C209 -
              (((C756 * C1082 + C32815 * C1094 + C755 * C1081 + C749 * C1093 +
                 C754 * C1080 + C748 * C1092) *
                    C32542 +
                (C756 * C1067 + C32815 * C1079 + C755 * C1066 + C749 * C1078 +
                 C754 * C1065 + C748 * C1077) *
                    C118) *
                   C32829 +
               ((C1623 + C1624 + C1625) * C32542 +
                (C1626 + C1627 + C1628) * C118) *
                   C32851 +
               ((C936 + C935 + C934) * C32542 + (C933 + C932 + C931) * C118) *
                   C32862) *
                  C32513 * C210 +
              ((C951 * C118 + C952 * C32542) * C32862 +
               ((C1622 + C1621 + C1620) * C118 +
                (C1619 + C1618 + C1617) * C32542) *
                   C32851 +
               ((C754 * C1068 + C748 * C1083 + C755 * C1069 + C749 * C1084 +
                 C756 * C1070 + C32815 * C1085) *
                    C118 +
                (C754 * C1086 + C748 * C1095 + C755 * C1087 + C749 * C1096 +
                 C756 * C1088 + C32815 * C1097) *
                    C32542) *
                   C32829) *
                  C32513 * C211) *
             C32487) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C754 * C119 + C748 * C126 + C755 * C120 + C749 * C127 +
             C756 * C121 + C32815 * C128) *
                C118 +
            (C754 * C131 + C748 * C140 + C755 * C132 + C749 * C141 +
             C756 * C133 + C32815 * C142) *
                C32542) *
               C32862 +
           ((C2022 + C2023 + C2024) * C118 + (C2025 + C2026 + C2027) * C32542) *
               C32851 +
           C2046 * C32829) *
              C315 -
          (((C2034 + C2035 + C2036) * C32542 + (C2037 + C2038 + C2039) * C118) *
               C32829 +
           ((C2033 + C2032 + C2031) * C32542 + (C2030 + C2029 + C2028) * C118) *
               C32851 +
           ((C2027 + C2026 + C2025) * C32542 + (C2024 + C2023 + C2022) * C118) *
               C32862) *
              C316 +
          (C2046 * C32862 +
           ((C2039 + C2038 + C2037) * C118 + (C2036 + C2035 + C2034) * C32542) *
               C32851 +
           ((C754 * C1964 + C748 * C1973 + C755 * C1965 + C749 * C1974 +
             C756 * C1966 + C32815 * C1975) *
                C118 +
            (C754 * C1976 + C748 * C1982 + C755 * C1977 + C749 * C1983 +
             C756 * C1978 + C32815 * C1984) *
                C32542) *
               C32829) *
              C317) *
         C32499 * C32487) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         (((C5270 * C119 + C32858 * C126 + C5271 * C120 + C32845 * C127 +
            C5272 * C121 + C32815 * C128) *
               C5273 +
           (C5270 * C131 + C32858 * C140 + C5271 * C132 + C32845 * C141 +
            C5272 * C133 + C32815 * C142) *
               C5267 +
           (C5270 * C217 + C32858 * C232 + C5271 * C216 + C32845 * C231 +
            C5272 * C215 + C32815 * C230) *
               C5274 +
           (C5270 * C227 + C32858 * C247 + C5271 * C226 + C32845 * C246 +
            C5272 * C225 + C32815 * C245) *
               C5268 +
           (C5270 * C218 + C32858 * C233 + C5271 * C219 + C32845 * C234 +
            C5272 * C220 + C32815 * C235) *
               C5275 +
           (C5270 * C238 + C32858 * C248 + C5271 * C239 + C32845 * C249 +
            C5272 * C240 + C32815 * C250) *
               C32826) *
              C32554 * C32513 * C32499 * C110 -
          ((C5272 * C241 + C32815 * C251 + C5271 * C240 + C32845 * C250 +
            C5270 * C239 + C32858 * C249) *
               C32826 +
           (C5272 * C221 + C32815 * C236 + C5271 * C220 + C32845 * C235 +
            C5270 * C219 + C32858 * C234) *
               C5275 +
           (C5272 * C224 + C32815 * C244 + C5271 * C225 + C32845 * C245 +
            C5270 * C226 + C32858 * C246) *
               C5268 +
           (C5272 * C214 + C32815 * C229 + C5271 * C215 + C32845 * C230 +
            C5270 * C216 + C32858 * C231) *
               C5274 +
           (C5272 * C134 + C32815 * C143 + C5271 * C133 + C32845 * C142 +
            C5270 * C132 + C32858 * C141) *
               C5267 +
           (C5272 * C122 + C32815 * C129 + C5271 * C121 + C32845 * C128 +
            C5270 * C120 + C32858 * C127) *
               C5273) *
              C32554 * C32513 * C32499 * C111 +
          ((C5270 * C121 + C32858 * C128 + C5271 * C122 + C32845 * C129 +
            C5272 * C123 + C32815 * C130) *
               C5273 +
           (C5270 * C133 + C32858 * C142 + C5271 * C134 + C32845 * C143 +
            C5272 * C135 + C32815 * C144) *
               C5267 +
           (C5270 * C215 + C32858 * C230 + C5271 * C214 + C32845 * C229 +
            C5272 * C213 + C32815 * C228) *
               C5274 +
           (C5270 * C225 + C32858 * C245 + C5271 * C224 + C32845 * C244 +
            C5272 * C223 + C32815 * C243) *
               C5268 +
           (C5270 * C220 + C32858 * C235 + C5271 * C221 + C32845 * C236 +
            C5272 * C222 + C32815 * C237) *
               C5275 +
           (C5270 * C240 + C32858 * C250 + C5271 * C241 + C32845 * C251 +
            C5272 * C242 + C32815 * C252) *
               C32826) *
              C32554 * C32513 * C32499 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         (((C5270 * C119 + C32858 * C126 + C5271 * C120 + C32845 * C127 +
            C5272 * C121 + C32815 * C128) *
               C5273 +
           (C5270 * C131 + C32858 * C140 + C5271 * C132 + C32845 * C141 +
            C5272 * C133 + C32815 * C142) *
               C5267 +
           (C5423 + C5424 + C5425) * C5274 + (C5426 + C5427 + C5428) * C5268 +
           C5443 * C5275 + C5444 * C32826) *
              C32554 * C32513 * C209 -
          ((C5435 + C5436 + C5437) * C32826 + (C5438 + C5439 + C5440) * C5275 +
           (C5434 + C5433 + C5432) * C5268 + (C5431 + C5430 + C5429) * C5274 +
           (C5428 + C5427 + C5426) * C5267 + (C5425 + C5424 + C5423) * C5273) *
              C32554 * C32513 * C210 +
          (C5443 * C5273 + C5444 * C5267 + (C5440 + C5439 + C5438) * C5274 +
           (C5437 + C5436 + C5435) * C5268 +
           (C5270 * C873 + C32858 * C882 + C5271 * C874 + C32845 * C883 +
            C5272 * C875 + C32815 * C884) *
               C5275 +
           (C5270 * C885 + C32858 * C891 + C5271 * C886 + C32845 * C892 +
            C5272 * C887 + C32815 * C893) *
               C32826) *
              C32554 * C32513 * C211) *
         C32487) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C5270 * C119 + C32858 * C126 + C5271 * C120 + C32845 * C127 +
            C5272 * C121 + C32815 * C128) *
               C5273 +
           (C5270 * C131 + C32858 * C140 + C5271 * C132 + C32845 * C141 +
            C5272 * C133 + C32815 * C142) *
               C5267 +
           (C5423 + C5424 + C5425) * C5274 + (C5426 + C5427 + C5428) * C5268 +
           C5443 * C5275 + C5444 * C32826) *
              C32554 * C315 -
          ((C5272 * C1071 + C32815 * C1089 + C5271 * C1072 + C32845 * C1090 +
            C5270 * C1073 + C32858 * C1091) *
               C32826 +
           (C5272 * C1062 + C32815 * C1074 + C5271 * C1063 + C32845 * C1075 +
            C5270 * C1064 + C32858 * C1076) *
               C5275 +
           (C5272 * C630 + C32815 * C635 + C5271 * C629 + C32845 * C634 +
            C5270 * C628 + C32858 * C633) *
               C5268 +
           (C5272 * C620 + C32815 * C625 + C5271 * C619 + C32845 * C624 +
            C5270 * C618 + C32858 * C623) *
               C5274 +
           (C5272 * C330 + C32815 * C350 + C5271 * C331 + C32845 * C351 +
            C5270 * C332 + C32858 * C352) *
               C5267 +
           (C5272 * C320 + C32815 * C335 + C5271 * C321 + C32845 * C336 +
            C5270 * C322 + C32858 * C337) *
               C5273) *
              C32554 * C316 +
          ((C5270 * C323 + C32858 * C338 + C5271 * C324 + C32845 * C339 +
            C5272 * C325 + C32815 * C340) *
               C5273 +
           (C5270 * C343 + C32858 * C353 + C5271 * C344 + C32845 * C354 +
            C5272 * C345 + C32815 * C355) *
               C5267 +
           (C5270 * C1065 + C32858 * C1077 + C5271 * C1066 + C32845 * C1078 +
            C5272 * C1067 + C32815 * C1079) *
               C5274 +
           (C5270 * C1080 + C32858 * C1092 + C5271 * C1081 + C32845 * C1093 +
            C5272 * C1082 + C32815 * C1094) *
               C5268 +
           (C5270 * C1068 + C32858 * C1083 + C5271 * C1069 + C32845 * C1084 +
            C5272 * C1070 + C32815 * C1085) *
               C5275 +
           (C5270 * C1086 + C32858 * C1095 + C5271 * C1087 + C32845 * C1096 +
            C5272 * C1088 + C32815 * C1097) *
               C32826) *
              C32554 * C317) *
         C32499 * C32487) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         (((C6132 * C119 + C32450 * C126) * C6133 +
           (C6132 * C131 + C32450 * C140) * C6127 +
           (C6132 * C217 + C32450 * C232) * C6134 +
           (C6132 * C227 + C32450 * C247) * C6128 +
           (C6132 * C218 + C32450 * C233) * C6135 +
           (C6132 * C238 + C32450 * C248) * C6129 +
           (C6132 * C872 + C32450 * C881) * C6136 +
           (C6132 * C878 + C32450 * C890) * C6130 +
           (C6132 * C873 + C32450 * C882) * C6137 +
           (C6132 * C885 + C32450 * C891) * C6131) *
              C32554 * C32513 * C32499 * C110 -
          ((C6132 * C886 + C32450 * C892) * C6131 +
           (C6132 * C874 + C32450 * C883) * C6137 +
           (C6132 * C877 + C32450 * C889) * C6130 +
           (C6132 * C871 + C32450 * C880) * C6136 +
           (C6132 * C239 + C32450 * C249) * C6129 +
           (C6132 * C219 + C32450 * C234) * C6135 +
           (C6132 * C226 + C32450 * C246) * C6128 +
           (C6132 * C216 + C32450 * C231) * C6134 +
           (C6132 * C132 + C32450 * C141) * C6127 +
           (C6132 * C120 + C32450 * C127) * C6133) *
              C32554 * C32513 * C32499 * C111 +
          ((C6132 * C121 + C32450 * C128) * C6133 +
           (C6132 * C133 + C32450 * C142) * C6127 +
           (C6132 * C215 + C32450 * C230) * C6134 +
           (C6132 * C225 + C32450 * C245) * C6128 +
           (C6132 * C220 + C32450 * C235) * C6135 +
           (C6132 * C240 + C32450 * C250) * C6129 +
           (C6132 * C870 + C32450 * C879) * C6136 +
           (C6132 * C876 + C32450 * C888) * C6130 +
           (C6132 * C875 + C32450 * C884) * C6137 +
           (C6132 * C887 + C32450 * C893) * C6131) *
              C32554 * C32513 * C32499 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         (((C6132 * C119 + C32450 * C126) * C6133 +
           (C6132 * C131 + C32450 * C140) * C6127 + C6229 * C6134 +
           C6230 * C6128 + C6231 * C6135 + C6232 * C6129 + C6233 * C6136 +
           C6234 * C6130 + C6235 * C6137 + C6236 * C6131) *
              C32554 * C32513 * C209 -
          (C6237 * C6131 + C6238 * C6137 + C6236 * C6130 + C6235 * C6136 +
           C6234 * C6129 + C6233 * C6135 + C6232 * C6128 + C6231 * C6134 +
           C6230 * C6127 + C6229 * C6133) *
              C32554 * C32513 * C210 +
          (C6231 * C6133 + C6232 * C6127 + C6233 * C6134 + C6234 * C6128 +
           C6235 * C6135 + C6236 * C6129 + C6238 * C6136 + C6237 * C6130 +
           (C6132 * C6201 + C32450 * C6204) * C6137 +
           (C6132 * C6205 + C32450 * C6207) * C6131) *
              C32554 * C32513 * C211) *
         C32487) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C6132 * C119 + C32450 * C126) * C6133 +
           (C6132 * C131 + C32450 * C140) * C6127 + C6229 * C6134 +
           C6230 * C6128 + C6231 * C6135 + C6232 * C6129 + C6233 * C6136 +
           C6234 * C6130 + C6235 * C6137 + C6236 * C6131) *
              C32554 * C315 -
          ((C6132 * C6303 + C32450 * C6309) * C6131 +
           (C6132 * C6300 + C32450 * C6304) * C6137 +
           (C6132 * C1586 + C32450 * C1589) * C6130 +
           (C6132 * C1580 + C32450 * C1583) * C6136 +
           (C6132 * C1073 + C32450 * C1091) * C6129 +
           (C6132 * C1064 + C32450 * C1076) * C6135 +
           (C6132 * C628 + C32450 * C633) * C6128 +
           (C6132 * C618 + C32450 * C623) * C6134 +
           (C6132 * C332 + C32450 * C352) * C6127 +
           (C6132 * C322 + C32450 * C337) * C6133) *
              C32554 * C316 +
          ((C6132 * C323 + C32450 * C338) * C6133 +
           (C6132 * C343 + C32450 * C353) * C6127 +
           (C6132 * C1065 + C32450 * C1077) * C6134 +
           (C6132 * C1080 + C32450 * C1092) * C6128 +
           (C6132 * C1068 + C32450 * C1083) * C6135 +
           (C6132 * C1086 + C32450 * C1095) * C6129 +
           (C6132 * C6301 + C32450 * C6305) * C6136 +
           (C6132 * C6306 + C32450 * C6310) * C6130 +
           (C6132 * C6302 + C32450 * C6307) * C6137 +
           (C6132 * C6308 + C32450 * C6311) * C6131) *
              C32554 * C317) *
         C32499 * C32487) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C6132 * C119 + C32450 * C126) * C5273 +
            (C6132 * C131 + C32450 * C140) * C5267 + C6229 * C5274 +
            C6230 * C5268 + C6231 * C5275 + C6232 * C32826) *
               C32862 +
           ((C6132 * C322 + C32450 * C337) * C5273 +
            (C6132 * C332 + C32450 * C352) * C5267 + C6618 * C5274 +
            C6617 * C5268 + C6616 * C5275 + C6615 * C32826) *
               C32851 +
           ((C6132 * C323 + C32450 * C338) * C5273 +
            (C6132 * C343 + C32450 * C353) * C5267 +
            (C6132 * C1065 + C32450 * C1077) * C5274 +
            (C6132 * C1080 + C32450 * C1092) * C5268 +
            (C6132 * C1068 + C32450 * C1083) * C5275 +
            (C6132 * C1086 + C32450 * C1095) * C32826) *
               C32829) *
              C32513 * C32499 * C110 -
          (((C6132 * C1087 + C32450 * C1096) * C32826 +
            (C6132 * C1069 + C32450 * C1084) * C5275 +
            (C6132 * C1081 + C32450 * C1093) * C5268 +
            (C6132 * C1066 + C32450 * C1078) * C5274 +
            (C6132 * C344 + C32450 * C354) * C5267 +
            (C6132 * C324 + C32450 * C339) * C5273) *
               C32829 +
           ((C6132 * C1072 + C32450 * C1090) * C32826 +
            (C6132 * C1063 + C32450 * C1075) * C5275 +
            (C6132 * C629 + C32450 * C634) * C5268 +
            (C6132 * C619 + C32450 * C624) * C5274 +
            (C6132 * C331 + C32450 * C351) * C5267 +
            (C6132 * C321 + C32450 * C336) * C5273) *
               C32851 +
           (C6418 * C32826 + C6417 * C5275 + C6416 * C5268 + C6415 * C5274 +
            (C6132 * C132 + C32450 * C141) * C5267 +
            (C6132 * C120 + C32450 * C127) * C5273) *
               C32862) *
              C32513 * C32499 * C111 +
          (((C6132 * C121 + C32450 * C128) * C5273 +
            (C6132 * C133 + C32450 * C142) * C5267 +
            (C6132 * C215 + C32450 * C230) * C5274 +
            (C6132 * C225 + C32450 * C245) * C5268 +
            (C6132 * C220 + C32450 * C235) * C5275 +
            (C6132 * C240 + C32450 * C250) * C32826) *
               C32862 +
           ((C6132 * C320 + C32450 * C335) * C5273 +
            (C6132 * C330 + C32450 * C350) * C5267 +
            (C6132 * C620 + C32450 * C625) * C5274 +
            (C6132 * C630 + C32450 * C635) * C5268 +
            (C6132 * C1062 + C32450 * C1074) * C5275 +
            (C6132 * C1071 + C32450 * C1089) * C32826) *
               C32851 +
           ((C6132 * C325 + C32450 * C340) * C5273 +
            (C6132 * C345 + C32450 * C355) * C5267 +
            (C6132 * C1067 + C32450 * C1079) * C5274 +
            (C6132 * C1082 + C32450 * C1094) * C5268 +
            (C6132 * C1070 + C32450 * C1085) * C5275 +
            (C6132 * C1088 + C32450 * C1097) * C32826) *
               C32829) *
              C32513 * C32499 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C6132 * C119 + C32450 * C126) * C5273 +
            (C6132 * C131 + C32450 * C140) * C5267 + C6229 * C5274 +
            C6230 * C5268 + C6231 * C5275 + C6232 * C32826) *
               C32862 +
           ((C6132 * C322 + C32450 * C337) * C5273 +
            (C6132 * C332 + C32450 * C352) * C5267 + C6618 * C5274 +
            C6617 * C5268 + C6616 * C5275 + C6615 * C32826) *
               C32851 +
           ((C6132 * C323 + C32450 * C338) * C5273 +
            (C6132 * C343 + C32450 * C353) * C5267 + C6851 * C5274 +
            C6852 * C5268 + C6853 * C5275 + C6854 * C32826) *
               C32829) *
              C32513 * C209 -
          ((C6855 * C32826 + C6856 * C5275 + C6854 * C5268 + C6853 * C5274 +
            C6852 * C5267 + C6851 * C5273) *
               C32829 +
           (C6613 * C32826 + C6614 * C5275 + C6615 * C5268 + C6616 * C5274 +
            C6617 * C5267 + C6618 * C5273) *
               C32851 +
           (C6234 * C32826 + C6233 * C5275 + C6232 * C5268 + C6231 * C5274 +
            C6230 * C5267 + C6229 * C5273) *
               C32862) *
              C32513 * C210 +
          ((C6231 * C5273 + C6232 * C5267 + C6233 * C5274 + C6234 * C5268 +
            C6235 * C5275 + C6236 * C32826) *
               C32862 +
           (C6616 * C5273 + C6615 * C5267 + C6614 * C5274 + C6613 * C5268 +
            C6612 * C5275 + C6611 * C32826) *
               C32851 +
           (C6853 * C5273 + C6854 * C5267 + C6856 * C5274 + C6855 * C5268 +
            (C6132 * C6302 + C32450 * C6307) * C5275 +
            (C6132 * C6308 + C32450 * C6311) * C32826) *
               C32829) *
              C32513 * C211) *
         C32487) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C6132 * C119 + C32450 * C126) * C5273 +
            (C6132 * C131 + C32450 * C140) * C5267 + C6229 * C5274 +
            C6230 * C5268 + C6231 * C5275 + C6232 * C32826) *
               C32862 +
           (C7017 + C7018 + C6983 + C6984 + C6985 + C6986) * C32851 +
           C7031 * C32829) *
              C315 -
          ((C7021 + C7022 + C7023 + C7024 + C7025 + C7026) * C32829 +
           (C6994 + C6993 + C6992 + C6991 + C7020 + C7019) * C32851 +
           (C6986 + C6985 + C6984 + C6983 + C7018 + C7017) * C32862) *
              C316 +
          (C7031 * C32862 +
           (C7026 + C7025 + C7024 + C7023 + C7022 + C7021) * C32851 +
           ((C6132 * C1964 + C32450 * C1973) * C5273 +
            (C6132 * C1976 + C32450 * C1982) * C5267 +
            (C6132 * C6967 + C32450 * C6971) * C5274 +
            (C6132 * C6972 + C32450 * C6976) * C5268 +
            (C6132 * C6968 + C32450 * C6973) * C5275 +
            (C6132 * C6974 + C32450 * C6977) * C32826) *
               C32829) *
              C317) *
         C32499 * C32487) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C5270 * C119 + C32858 * C126 + C5271 * C120 + C32845 * C127 +
             C5272 * C121 + C32815 * C128) *
                C118 +
            (C5270 * C131 + C32858 * C140 + C5271 * C132 + C32845 * C141 +
             C5272 * C133 + C32815 * C142) *
                C32542) *
               C10305 +
           ((C5270 * C322 + C32858 * C337 + C5271 * C321 + C32845 * C336 +
             C5272 * C320 + C32815 * C335) *
                C118 +
            (C5270 * C332 + C32858 * C352 + C5271 * C331 + C32845 * C351 +
             C5272 * C330 + C32815 * C350) *
                C32542) *
               C10306 +
           ((C5270 * C323 + C32858 * C338 + C5271 * C324 + C32845 * C339 +
             C5272 * C325 + C32815 * C340) *
                C118 +
            (C5270 * C343 + C32858 * C353 + C5271 * C344 + C32845 * C354 +
             C5272 * C345 + C32815 * C355) *
                C32542) *
               C32829) *
              C32513 * C32499 * C110 -
          (((C5272 * C346 + C32815 * C356 + C5271 * C345 + C32845 * C355 +
             C5270 * C344 + C32858 * C354) *
                C32542 +
            (C5272 * C326 + C32815 * C341 + C5271 * C325 + C32845 * C340 +
             C5270 * C324 + C32858 * C339) *
                C118) *
               C32829 +
           ((C5272 * C329 + C32815 * C349 + C5271 * C330 + C32845 * C350 +
             C5270 * C331 + C32858 * C351) *
                C32542 +
            (C5272 * C319 + C32815 * C334 + C5271 * C320 + C32845 * C335 +
             C5270 * C321 + C32858 * C336) *
                C118) *
               C10306 +
           ((C5272 * C134 + C32815 * C143 + C5271 * C133 + C32845 * C142 +
             C5270 * C132 + C32858 * C141) *
                C32542 +
            (C5272 * C122 + C32815 * C129 + C5271 * C121 + C32845 * C128 +
             C5270 * C120 + C32858 * C127) *
                C118) *
               C10305) *
              C32513 * C32499 * C111 +
          (((C5270 * C121 + C32858 * C128 + C5271 * C122 + C32845 * C129 +
             C5272 * C123 + C32815 * C130) *
                C118 +
            (C5270 * C133 + C32858 * C142 + C5271 * C134 + C32845 * C143 +
             C5272 * C135 + C32815 * C144) *
                C32542) *
               C10305 +
           ((C5270 * C320 + C32858 * C335 + C5271 * C319 + C32845 * C334 +
             C5272 * C318 + C32815 * C333) *
                C118 +
            (C5270 * C330 + C32858 * C350 + C5271 * C329 + C32845 * C349 +
             C5272 * C328 + C32815 * C348) *
                C32542) *
               C10306 +
           ((C5270 * C325 + C32858 * C340 + C5271 * C326 + C32845 * C341 +
             C5272 * C327 + C32815 * C342) *
                C118 +
            (C5270 * C345 + C32858 * C355 + C5271 * C346 + C32845 * C356 +
             C5272 * C347 + C32815 * C357) *
                C32542) *
               C32829) *
              C32513 * C32499 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C5270 * C119 + C32858 * C126 + C5271 * C120 + C32845 * C127 +
             C5272 * C121 + C32815 * C128) *
                C118 +
            (C5270 * C131 + C32858 * C140 + C5271 * C132 + C32845 * C141 +
             C5272 * C133 + C32815 * C142) *
                C32542) *
               C10305 +
           ((C5270 * C322 + C32858 * C337 + C5271 * C321 + C32845 * C336 +
             C5272 * C320 + C32815 * C335) *
                C118 +
            (C5270 * C332 + C32858 * C352 + C5271 * C331 + C32845 * C351 +
             C5272 * C330 + C32815 * C350) *
                C32542) *
               C10306 +
           ((C5270 * C323 + C32858 * C338 + C5271 * C324 + C32845 * C339 +
             C5272 * C325 + C32815 * C340) *
                C118 +
            (C5270 * C343 + C32858 * C353 + C5271 * C344 + C32845 * C354 +
             C5272 * C345 + C32815 * C355) *
                C32542) *
               C32829) *
              C32513 * C209 -
          (((C5272 * C1082 + C32815 * C1094 + C5271 * C1081 + C32845 * C1093 +
             C5270 * C1080 + C32858 * C1092) *
                C32542 +
            (C5272 * C1067 + C32815 * C1079 + C5271 * C1066 + C32845 * C1078 +
             C5270 * C1065 + C32858 * C1077) *
                C118) *
               C32829 +
           ((C6059 + C6060 + C6061) * C32542 + (C6062 + C6063 + C6064) * C118) *
               C10306 +
           ((C5428 + C5427 + C5426) * C32542 + (C5425 + C5424 + C5423) * C118) *
               C10305) *
              C32513 * C210 +
          ((C5443 * C118 + C5444 * C32542) * C10305 +
           ((C6058 + C6057 + C6056) * C118 + (C6055 + C6054 + C6053) * C32542) *
               C10306 +
           ((C5270 * C1068 + C32858 * C1083 + C5271 * C1069 + C32845 * C1084 +
             C5272 * C1070 + C32815 * C1085) *
                C118 +
            (C5270 * C1086 + C32858 * C1095 + C5271 * C1087 + C32845 * C1096 +
             C5272 * C1088 + C32815 * C1097) *
                C32542) *
               C32829) *
              C32513 * C211) *
         C32487) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C5270 * C119 + C32858 * C126 + C5271 * C120 + C32845 * C127 +
             C5272 * C121 + C32815 * C128) *
                C118 +
            (C5270 * C131 + C32858 * C140 + C5271 * C132 + C32845 * C141 +
             C5272 * C133 + C32815 * C142) *
                C32542) *
               C10305 +
           ((C10565 + C10566 + C10567) * C118 +
            (C10568 + C10569 + C10570) * C32542) *
               C10306 +
           C10589 * C32829) *
              C315 -
          (((C10577 + C10578 + C10579) * C32542 +
            (C10580 + C10581 + C10582) * C118) *
               C32829 +
           ((C10576 + C10575 + C10574) * C32542 +
            (C10573 + C10572 + C10571) * C118) *
               C10306 +
           ((C10570 + C10569 + C10568) * C32542 +
            (C10567 + C10566 + C10565) * C118) *
               C10305) *
              C316 +
          (C10589 * C10305 +
           ((C10582 + C10581 + C10580) * C118 +
            (C10579 + C10578 + C10577) * C32542) *
               C10306 +
           ((C5270 * C1964 + C32858 * C1973 + C5271 * C1965 + C32845 * C1974 +
             C5272 * C1966 + C32815 * C1975) *
                C118 +
            (C5270 * C1976 + C32858 * C1982 + C5271 * C1977 + C32845 * C1983 +
             C5272 * C1978 + C32815 * C1984) *
                C32542) *
               C32829) *
              C317) *
         C32499 * C32487) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C6132 * C119 + C32450 * C126) * C757 +
            (C6132 * C131 + C32450 * C140) * C32861 + C6229 * C758 +
            C6230 * C32849 + C6231 * C759 + C6232 * C32826) *
               C10305 +
           (C7007 * C757 + C7008 * C32861 + C6618 * C758 + C6617 * C32849 +
            C6616 * C759 + C6615 * C32826) *
               C10306 +
           (C7009 * C757 + C7010 * C32861 + C6851 * C758 + C6852 * C32849 +
            C6853 * C759 + C6854 * C32826) *
               C32829) *
              C32513 * C32499 * C110 -
          ((C7205 * C32826 + C7204 * C759 + C7203 * C32849 + C7202 * C758 +
            C7375 * C32861 + C7374 * C757) *
               C32829 +
           (C7201 * C32826 + C7200 * C759 + C7199 * C32849 + C7198 * C758 +
            C7373 * C32861 + C7372 * C757) *
               C10306 +
           (C6418 * C32826 + C6417 * C759 + C6416 * C32849 + C6415 * C758 +
            (C6132 * C132 + C32450 * C141) * C32861 +
            (C6132 * C120 + C32450 * C127) * C757) *
               C10305) *
              C32513 * C32499 * C111 +
          (((C6132 * C121 + C32450 * C128) * C757 +
            (C6132 * C133 + C32450 * C142) * C32861 +
            (C6132 * C215 + C32450 * C230) * C758 +
            (C6132 * C225 + C32450 * C245) * C32849 +
            (C6132 * C220 + C32450 * C235) * C759 +
            (C6132 * C240 + C32450 * C250) * C32826) *
               C10305 +
           ((C6132 * C320 + C32450 * C335) * C757 +
            (C6132 * C330 + C32450 * C350) * C32861 +
            (C6132 * C620 + C32450 * C625) * C758 +
            (C6132 * C630 + C32450 * C635) * C32849 +
            (C6132 * C1062 + C32450 * C1074) * C759 +
            (C6132 * C1071 + C32450 * C1089) * C32826) *
               C10306 +
           ((C6132 * C325 + C32450 * C340) * C757 +
            (C6132 * C345 + C32450 * C355) * C32861 +
            (C6132 * C1067 + C32450 * C1079) * C758 +
            (C6132 * C1082 + C32450 * C1094) * C32849 +
            (C6132 * C1070 + C32450 * C1085) * C759 +
            (C6132 * C1088 + C32450 * C1097) * C32826) *
               C32829) *
              C32513 * C32499 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C6132 * C119 + C32450 * C126) * C757 +
            (C6132 * C131 + C32450 * C140) * C32861 + C6229 * C758 +
            C6230 * C32849 + C6231 * C759 + C6232 * C32826) *
               C10305 +
           (C7007 * C757 + C7008 * C32861 + C6618 * C758 + C6617 * C32849 +
            C6616 * C759 + C6615 * C32826) *
               C10306 +
           (C7009 * C757 + C7010 * C32861 + C6851 * C758 + C6852 * C32849 +
            C6853 * C759 + C6854 * C32826) *
               C32829) *
              C32513 * C209 -
          ((C6855 * C32826 + C6856 * C759 + C6854 * C32849 + C6853 * C758 +
            C6852 * C32861 + C6851 * C757) *
               C32829 +
           (C6613 * C32826 + C6614 * C759 + C6615 * C32849 + C6616 * C758 +
            C6617 * C32861 + C6618 * C757) *
               C10306 +
           (C6234 * C32826 + C6233 * C759 + C6232 * C32849 + C6231 * C758 +
            C6230 * C32861 + C6229 * C757) *
               C10305) *
              C32513 * C210 +
          ((C6231 * C757 + C6232 * C32861 + C6233 * C758 + C6234 * C32849 +
            C6235 * C759 + C6236 * C32826) *
               C10305 +
           (C6616 * C757 + C6615 * C32861 + C6614 * C758 + C6613 * C32849 +
            C6612 * C759 + C6611 * C32826) *
               C10306 +
           (C6853 * C757 + C6854 * C32861 + C6856 * C758 + C6855 * C32849 +
            (C6132 * C6302 + C32450 * C6307) * C759 +
            (C6132 * C6308 + C32450 * C6311) * C32826) *
               C32829) *
              C32513 * C211) *
         C32487) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C6132 * C119 + C32450 * C126) * C757 +
            (C6132 * C131 + C32450 * C140) * C32861 + C6229 * C758 +
            C6230 * C32849 + C6231 * C759 + C6232 * C32826) *
               C10305 +
           (C11412 + C11413 + C11414 + C11415 + C11416 + C11417) * C10306 +
           C11434 * C32829) *
              C315 -
          ((C11424 + C11425 + C11426 + C11427 + C11428 + C11429) * C32829 +
           (C11423 + C11422 + C11421 + C11420 + C11419 + C11418) * C10306 +
           (C11417 + C11416 + C11415 + C11414 + C11413 + C11412) * C10305) *
              C316 +
          (C11434 * C10305 +
           (C11429 + C11428 + C11427 + C11426 + C11425 + C11424) * C10306 +
           ((C6132 * C1964 + C32450 * C1973) * C757 +
            (C6132 * C1976 + C32450 * C1982) * C32861 +
            (C6132 * C6967 + C32450 * C6971) * C758 +
            (C6132 * C6972 + C32450 * C6976) * C32849 +
            (C6132 * C6968 + C32450 * C6973) * C759 +
            (C6132 * C6974 + C32450 * C6977) * C32826) *
               C32829) *
              C317) *
         C32499 * C32487) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) * ((((C6132 * C119 + C32450 * C126) * C118 +
                                (C6132 * C131 + C32450 * C140) * C32542) *
                                   C11958 +
                               (C7007 * C118 + C7008 * C32542) * C11959 +
                               (C7009 * C118 + C7010 * C32542) * C11960 +
                               (C7016 * C118 + C7015 * C32542) * C11961 +
                               ((C6132 * C1964 + C32450 * C1973) * C118 +
                                (C6132 * C1976 + C32450 * C1982) * C32542) *
                                   C11962) *
                                  C32513 * C32499 * C110 -
                              (((C6132 * C1977 + C32450 * C1983) * C32542 +
                                (C6132 * C1965 + C32450 * C1974) * C118) *
                                   C11962 +
                               ((C6132 * C1968 + C32450 * C1980) * C32542 +
                                (C6132 * C1962 + C32450 * C1971) * C118) *
                                   C11961 +
                               (C7375 * C32542 + C7374 * C118) * C11960 +
                               (C7373 * C32542 + C7372 * C118) * C11959 +
                               ((C6132 * C132 + C32450 * C141) * C32542 +
                                (C6132 * C120 + C32450 * C127) * C118) *
                                   C11958) *
                                  C32513 * C32499 * C111 +
                              (((C6132 * C121 + C32450 * C128) * C118 +
                                (C6132 * C133 + C32450 * C142) * C32542) *
                                   C11958 +
                               ((C6132 * C320 + C32450 * C335) * C118 +
                                (C6132 * C330 + C32450 * C350) * C32542) *
                                   C11959 +
                               ((C6132 * C325 + C32450 * C340) * C118 +
                                (C6132 * C345 + C32450 * C355) * C32542) *
                                   C11960 +
                               ((C6132 * C1961 + C32450 * C1970) * C118 +
                                (C6132 * C1967 + C32450 * C1979) * C32542) *
                                   C11961 +
                               ((C6132 * C1966 + C32450 * C1975) * C118 +
                                (C6132 * C1978 + C32450 * C1984) * C32542) *
                                   C11962) *
                                  C32513 * C32499 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C6132 * C119 + C32450 * C126) * C118 +
            (C6132 * C131 + C32450 * C140) * C32542) *
               C11958 +
           (C7007 * C118 + C7008 * C32542) * C11959 +
           (C7009 * C118 + C7010 * C32542) * C11960 +
           (C7016 * C118 + C7015 * C32542) * C11961 +
           ((C6132 * C1964 + C32450 * C1973) * C118 +
            (C6132 * C1976 + C32450 * C1982) * C32542) *
               C11962) *
              C32513 * C209 -
          (((C6132 * C6972 + C32450 * C6976) * C32542 +
            (C6132 * C6967 + C32450 * C6971) * C118) *
               C11962 +
           (C7013 * C32542 + C7014 * C118) * C11961 +
           (C6852 * C32542 + C6851 * C118) * C11960 +
           (C6617 * C32542 + C6618 * C118) * C11959 +
           (C6230 * C32542 + C6229 * C118) * C11958) *
              C32513 * C210 +
          ((C6231 * C118 + C6232 * C32542) * C11958 +
           (C6616 * C118 + C6615 * C32542) * C11959 +
           (C6853 * C118 + C6854 * C32542) * C11960 +
           (C7012 * C118 + C7011 * C32542) * C11961 +
           ((C6132 * C6968 + C32450 * C6973) * C118 +
            (C6132 * C6974 + C32450 * C6977) * C32542) *
               C11962) *
              C32513 * C211) *
         C32487) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C6132 * C119 + C32450 * C126) * C118 +
            (C6132 * C131 + C32450 * C140) * C32542) *
               C11958 +
           (C12096 + C12097) * C11959 + C12110 * C11960 + C12111 * C11961 +
           C12120 * C11962) *
              C315 -
          ((C12118 + C12119) * C11962 + (C12117 + C12116) * C11961 +
           (C12101 + C12100) * C11960 + (C12099 + C12098) * C11959 +
           (C12097 + C12096) * C11958) *
              C316 +
          (C12110 * C11958 + C12111 * C11959 + C12120 * C11960 +
           (C12119 + C12118) * C11961 +
           ((C6132 * C12088 + C32450 * C12091) * C118 +
            (C6132 * C12092 + C32450 * C12094) * C32542) *
               C11962) *
              C317) *
         C32499 * C32487) /
            (p * q * std::sqrt(p + q));
    d2ee[63] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C127 +
                 C115 * C121 + C103 * C128 + C116 * C122 + C104 * C129 +
                 C117 * C123 + C105 * C130) *
                    C118 +
                (C113 * C131 + C101 * C140 + C114 * C132 + C102 * C141 +
                 C115 * C133 + C103 * C142 + C116 * C134 + C104 * C143 +
                 C117 * C135 + C105 * C144) *
                    C32542) *
                   C32554 * C530 -
               ((C117 * C328 + C105 * C348 + C116 * C329 + C104 * C349 +
                 C115 * C330 + C103 * C350 + C114 * C331 + C102 * C351 +
                 C113 * C332 + C101 * C352) *
                    C32542 +
                (C117 * C318 + C105 * C333 + C116 * C319 + C104 * C334 +
                 C115 * C320 + C103 * C335 + C114 * C321 + C102 * C336 +
                 C113 * C322 + C101 * C337) *
                    C118) *
                   C32554 * C531) *
                  C32499 * C442 +
              (((C113 * C321 + C101 * C336 + C114 * C320 + C102 * C335 +
                 C115 * C319 + C103 * C334 + C116 * C318 + C104 * C333 +
                 C117 * C532 + C105 * C533) *
                    C118 +
                (C113 * C331 + C101 * C351 + C114 * C330 + C102 * C350 +
                 C115 * C329 + C103 * C349 + C116 * C328 + C104 * C348 +
                 C117 * C534 + C105 * C535) *
                    C32542) *
                   C32554 * C531 -
               ((C117 * C136 + C105 * C145 + C116 * C135 + C104 * C144 +
                 C115 * C134 + C103 * C143 + C114 * C133 + C102 * C142 +
                 C113 * C132 + C101 * C141) *
                    C32542 +
                (C117 * C124 + C105 * C137 + C116 * C123 + C104 * C130 +
                 C115 * C122 + C103 * C129 + C114 * C121 + C102 * C128 +
                 C113 * C120 + C101 * C127) *
                    C118) *
                   C32554 * C530) *
                  C32499 * C443) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C754 * C119 + C748 * C126 + C755 * C120 + C749 * C127 +
                 C756 * C121 + C32815 * C128) *
                    C757 +
                (C754 * C131 + C748 * C140 + C755 * C132 + C749 * C141 +
                 C756 * C133 + C32815 * C142) *
                    C32861 +
                (C931 + C932 + C933) * C758 + (C934 + C935 + C936) * C32849 +
                C951 * C759 + C952 * C32826) *
                   C32554 * C530 -
               ((C756 * C1071 + C32815 * C1089 + C755 * C1072 + C749 * C1090 +
                 C754 * C1073 + C748 * C1091) *
                    C32826 +
                (C756 * C1062 + C32815 * C1074 + C755 * C1063 + C749 * C1075 +
                 C754 * C1064 + C748 * C1076) *
                    C759 +
                (C756 * C630 + C32815 * C635 + C755 * C629 + C749 * C634 +
                 C754 * C628 + C748 * C633) *
                    C32849 +
                (C756 * C620 + C32815 * C625 + C755 * C619 + C749 * C624 +
                 C754 * C618 + C748 * C623) *
                    C758 +
                (C756 * C330 + C32815 * C350 + C755 * C331 + C749 * C351 +
                 C754 * C332 + C748 * C352) *
                    C32861 +
                (C756 * C320 + C32815 * C335 + C755 * C321 + C749 * C336 +
                 C754 * C322 + C748 * C337) *
                    C757) *
                   C32554 * C531) *
                  C32499 * C442 +
              (((C754 * C321 + C748 * C336 + C755 * C320 + C749 * C335 +
                 C756 * C319 + C32815 * C334) *
                    C757 +
                (C754 * C331 + C748 * C351 + C755 * C330 + C749 * C350 +
                 C756 * C329 + C32815 * C349) *
                    C32861 +
                (C754 * C619 + C748 * C624 + C755 * C620 + C749 * C625 +
                 C756 * C621 + C32815 * C626) *
                    C758 +
                (C754 * C629 + C748 * C634 + C755 * C630 + C749 * C635 +
                 C756 * C631 + C32815 * C636) *
                    C32849 +
                (C754 * C1063 + C748 * C1075 + C755 * C1062 + C749 * C1074 +
                 C756 * C1430 + C32815 * C1431) *
                    C759 +
                (C754 * C1072 + C748 * C1090 + C755 * C1071 + C749 * C1089 +
                 C756 * C1432 + C32815 * C1433) *
                    C32826) *
                   C32554 * C531 -
               ((C1284 + C1283 + C1282) * C32826 +
                (C1281 + C1280 + C1279) * C759 +
                (C1278 + C1277 + C1276) * C32849 +
                (C1275 + C1274 + C1273) * C758 +
                (C756 * C134 + C32815 * C143 + C755 * C133 + C749 * C142 +
                 C754 * C132 + C748 * C141) *
                    C32861 +
                (C756 * C122 + C32815 * C129 + C755 * C121 + C749 * C128 +
                 C754 * C120 + C748 * C127) *
                    C757) *
                   C32554 * C530) *
                  C32499 * C443)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C754 * C119 + C748 * C126 + C755 * C120 + C749 * C127 +
              C756 * C121 + C32815 * C128) *
                 C118 +
             (C754 * C131 + C748 * C140 + C755 * C132 + C749 * C141 +
              C756 * C133 + C32815 * C142) *
                 C32542) *
                C32862 +
            ((C2022 + C2023 + C2024) * C118 +
             (C2025 + C2026 + C2027) * C32542) *
                C32851 +
            C2046 * C32829) *
               C530 -
           (((C2034 + C2035 + C2036) * C32542 +
             (C2037 + C2038 + C2039) * C118) *
                C32829 +
            ((C2033 + C2032 + C2031) * C32542 +
             (C2030 + C2029 + C2028) * C118) *
                C32851 +
            ((C2027 + C2026 + C2025) * C32542 +
             (C2024 + C2023 + C2022) * C118) *
                C32862) *
               C531) *
              C32499 * C442 +
          ((((C2371 + C2372 + C2373) * C118 +
             (C2374 + C2375 + C2376) * C32542) *
                C32862 +
            ((C2377 + C2378 + C2379) * C118 +
             (C2380 + C2381 + C2382) * C32542) *
                C32851 +
            ((C754 * C1962 + C748 * C1971 + C755 * C1961 + C749 * C1970 +
              C756 * C2342 + C32815 * C2343) *
                 C118 +
             (C754 * C1968 + C748 * C1980 + C755 * C1967 + C749 * C1979 +
              C756 * C2344 + C32815 * C2345) *
                 C32542) *
                C32829) *
               C531 -
           (((C2382 + C2381 + C2380) * C32542 +
             (C2379 + C2378 + C2377) * C118) *
                C32829 +
            ((C2376 + C2375 + C2374) * C32542 +
             (C2373 + C2372 + C2371) * C118) *
                C32851 +
            ((C756 * C134 + C32815 * C143 + C755 * C133 + C749 * C142 +
              C754 * C132 + C748 * C141) *
                 C32542 +
             (C756 * C122 + C32815 * C129 + C755 * C121 + C749 * C128 +
              C754 * C120 + C748 * C127) *
                 C118) *
                C32862) *
               C530) *
              C32499 * C443)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C5270 * C119 + C32858 * C126 + C5271 * C120 + C32845 * C127 +
             C5272 * C121 + C32815 * C128) *
                C5273 +
            (C5270 * C131 + C32858 * C140 + C5271 * C132 + C32845 * C141 +
             C5272 * C133 + C32815 * C142) *
                C5267 +
            (C5423 + C5424 + C5425) * C5274 + (C5426 + C5427 + C5428) * C5268 +
            C5443 * C5275 + C5444 * C32826) *
               C32554 * C530 -
           ((C5272 * C1071 + C32815 * C1089 + C5271 * C1072 + C32845 * C1090 +
             C5270 * C1073 + C32858 * C1091) *
                C32826 +
            (C5272 * C1062 + C32815 * C1074 + C5271 * C1063 + C32845 * C1075 +
             C5270 * C1064 + C32858 * C1076) *
                C5275 +
            (C5272 * C630 + C32815 * C635 + C5271 * C629 + C32845 * C634 +
             C5270 * C628 + C32858 * C633) *
                C5268 +
            (C5272 * C620 + C32815 * C625 + C5271 * C619 + C32845 * C624 +
             C5270 * C618 + C32858 * C623) *
                C5274 +
            (C5272 * C330 + C32815 * C350 + C5271 * C331 + C32845 * C351 +
             C5270 * C332 + C32858 * C352) *
                C5267 +
            (C5272 * C320 + C32815 * C335 + C5271 * C321 + C32845 * C336 +
             C5270 * C322 + C32858 * C337) *
                C5273) *
               C32554 * C531) *
              C32499 * C442 +
          (((C5270 * C321 + C32858 * C336 + C5271 * C320 + C32845 * C335 +
             C5272 * C319 + C32815 * C334) *
                C5273 +
            (C5270 * C331 + C32858 * C351 + C5271 * C330 + C32845 * C350 +
             C5272 * C329 + C32815 * C349) *
                C5267 +
            (C5270 * C619 + C32858 * C624 + C5271 * C620 + C32845 * C625 +
             C5272 * C621 + C32815 * C626) *
                C5274 +
            (C5270 * C629 + C32858 * C634 + C5271 * C630 + C32845 * C635 +
             C5272 * C631 + C32815 * C636) *
                C5268 +
            (C5270 * C1063 + C32858 * C1075 + C5271 * C1062 + C32845 * C1074 +
             C5272 * C1430 + C32815 * C1431) *
                C5275 +
            (C5270 * C1072 + C32858 * C1090 + C5271 * C1071 + C32845 * C1089 +
             C5272 * C1432 + C32815 * C1433) *
                C32826) *
               C32554 * C531 -
           ((C5736 + C5735 + C5734) * C32826 + (C5733 + C5732 + C5731) * C5275 +
            (C5730 + C5729 + C5728) * C5268 + (C5727 + C5726 + C5725) * C5274 +
            (C5272 * C134 + C32815 * C143 + C5271 * C133 + C32845 * C142 +
             C5270 * C132 + C32858 * C141) *
                C5267 +
            (C5272 * C122 + C32815 * C129 + C5271 * C121 + C32845 * C128 +
             C5270 * C120 + C32858 * C127) *
                C5273) *
               C32554 * C530) *
              C32499 * C443)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C6132 * C119 + C32450 * C126) * C6133 +
            (C6132 * C131 + C32450 * C140) * C6127 + C6229 * C6134 +
            C6230 * C6128 + C6231 * C6135 + C6232 * C6129 + C6233 * C6136 +
            C6234 * C6130 + C6235 * C6137 + C6236 * C6131) *
               C32554 * C530 -
           ((C6132 * C6303 + C32450 * C6309) * C6131 +
            (C6132 * C6300 + C32450 * C6304) * C6137 +
            (C6132 * C1586 + C32450 * C1589) * C6130 +
            (C6132 * C1580 + C32450 * C1583) * C6136 +
            (C6132 * C1073 + C32450 * C1091) * C6129 +
            (C6132 * C1064 + C32450 * C1076) * C6135 +
            (C6132 * C628 + C32450 * C633) * C6128 +
            (C6132 * C618 + C32450 * C623) * C6134 +
            (C6132 * C332 + C32450 * C352) * C6127 +
            (C6132 * C322 + C32450 * C337) * C6133) *
               C32554 * C531) *
              C32499 * C442 +
          (((C6132 * C321 + C32450 * C336) * C6133 +
            (C6132 * C331 + C32450 * C351) * C6127 +
            (C6132 * C619 + C32450 * C624) * C6134 +
            (C6132 * C629 + C32450 * C634) * C6128 +
            (C6132 * C1063 + C32450 * C1075) * C6135 +
            (C6132 * C1072 + C32450 * C1090) * C6129 +
            (C6132 * C1581 + C32450 * C1584) * C6136 +
            (C6132 * C1587 + C32450 * C1590) * C6130 +
            (C6132 * C6504 + C32450 * C6505) * C6137 +
            (C6132 * C6506 + C32450 * C6507) * C6131) *
               C32554 * C531 -
           (C6422 * C6131 + C6421 * C6137 + C6420 * C6130 + C6419 * C6136 +
            C6418 * C6129 + C6417 * C6135 + C6416 * C6128 + C6415 * C6134 +
            (C6132 * C132 + C32450 * C141) * C6127 +
            (C6132 * C120 + C32450 * C127) * C6133) *
               C32554 * C530) *
              C32499 * C443)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C6132 * C119 + C32450 * C126) * C5273 +
             (C6132 * C131 + C32450 * C140) * C5267 + C6229 * C5274 +
             C6230 * C5268 + C6231 * C5275 + C6232 * C32826) *
                C32862 +
            (C7017 + C7018 + C6983 + C6984 + C6985 + C6986) * C32851 +
            C7031 * C32829) *
               C530 -
           ((C7021 + C7022 + C7023 + C7024 + C7025 + C7026) * C32829 +
            (C6994 + C6993 + C6992 + C6991 + C7020 + C7019) * C32851 +
            (C6986 + C6985 + C6984 + C6983 + C7018 + C7017) * C32862) *
               C531) *
              C32499 * C442 +
          (((C7376 + C7377 + C7360 + C7361 + C7362 + C7363) * C32862 +
            (C7378 + C7379 + C7368 + C7369 + C7370 + C7371) * C32851 +
            ((C6132 * C1962 + C32450 * C1971) * C5273 +
             (C6132 * C1968 + C32450 * C1980) * C5267 +
             (C6132 * C2529 + C32450 * C2532) * C5274 +
             (C6132 * C2535 + C32450 * C2538) * C5268 +
             (C6132 * C7351 + C32450 * C7352) * C5275 +
             (C6132 * C7353 + C32450 * C7354) * C32826) *
                C32829) *
               C531 -
           ((C7371 + C7370 + C7369 + C7368 + C7379 + C7378) * C32829 +
            (C7363 + C7362 + C7361 + C7360 + C7377 + C7376) * C32851 +
            (C6418 * C32826 + C6417 * C5275 + C6416 * C5268 + C6415 * C5274 +
             (C6132 * C132 + C32450 * C141) * C5267 +
             (C6132 * C120 + C32450 * C127) * C5273) *
                C32862) *
               C530) *
              C32499 * C443)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C5270 * C119 + C32858 * C126 + C5271 * C120 + C32845 * C127 +
              C5272 * C121 + C32815 * C128) *
                 C118 +
             (C5270 * C131 + C32858 * C140 + C5271 * C132 + C32845 * C141 +
              C5272 * C133 + C32815 * C142) *
                 C32542) *
                C10305 +
            ((C10565 + C10566 + C10567) * C118 +
             (C10568 + C10569 + C10570) * C32542) *
                C10306 +
            C10589 * C32829) *
               C530 -
           (((C10577 + C10578 + C10579) * C32542 +
             (C10580 + C10581 + C10582) * C118) *
                C32829 +
            ((C10576 + C10575 + C10574) * C32542 +
             (C10573 + C10572 + C10571) * C118) *
                C10306 +
            ((C10570 + C10569 + C10568) * C32542 +
             (C10567 + C10566 + C10565) * C118) *
                C10305) *
               C531) *
              C32499 * C442 +
          ((((C10906 + C10907 + C10908) * C118 +
             (C10909 + C10910 + C10911) * C32542) *
                C10305 +
            ((C10912 + C10913 + C10914) * C118 +
             (C10915 + C10916 + C10917) * C32542) *
                C10306 +
            ((C5270 * C1962 + C32858 * C1971 + C5271 * C1961 + C32845 * C1970 +
              C5272 * C2342 + C32815 * C2343) *
                 C118 +
             (C5270 * C1968 + C32858 * C1980 + C5271 * C1967 + C32845 * C1979 +
              C5272 * C2344 + C32815 * C2345) *
                 C32542) *
                C32829) *
               C531 -
           (((C10917 + C10916 + C10915) * C32542 +
             (C10914 + C10913 + C10912) * C118) *
                C32829 +
            ((C10911 + C10910 + C10909) * C32542 +
             (C10908 + C10907 + C10906) * C118) *
                C10306 +
            ((C5272 * C134 + C32815 * C143 + C5271 * C133 + C32845 * C142 +
              C5270 * C132 + C32858 * C141) *
                 C32542 +
             (C5272 * C122 + C32815 * C129 + C5271 * C121 + C32845 * C128 +
              C5270 * C120 + C32858 * C127) *
                 C118) *
                C10305) *
               C530) *
              C32499 * C443)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C6132 * C119 + C32450 * C126) * C757 +
             (C6132 * C131 + C32450 * C140) * C32861 + C6229 * C758 +
             C6230 * C32849 + C6231 * C759 + C6232 * C32826) *
                C10305 +
            (C11412 + C11413 + C11414 + C11415 + C11416 + C11417) * C10306 +
            C11434 * C32829) *
               C530 -
           ((C11424 + C11425 + C11426 + C11427 + C11428 + C11429) * C32829 +
            (C11423 + C11422 + C11421 + C11420 + C11419 + C11418) * C10306 +
            (C11417 + C11416 + C11415 + C11414 + C11413 + C11412) * C10305) *
               C531) *
              C32499 * C442 +
          (((C11727 + C11728 + C11729 + C11730 + C11731 + C11732) * C10305 +
            (C11733 + C11734 + C11735 + C11736 + C11737 + C11738) * C10306 +
            ((C6132 * C1962 + C32450 * C1971) * C757 +
             (C6132 * C1968 + C32450 * C1980) * C32861 +
             (C6132 * C2529 + C32450 * C2532) * C758 +
             (C6132 * C2535 + C32450 * C2538) * C32849 +
             (C6132 * C7351 + C32450 * C7352) * C759 +
             (C6132 * C7353 + C32450 * C7354) * C32826) *
                C32829) *
               C531 -
           ((C11738 + C11737 + C11736 + C11735 + C11734 + C11733) * C32829 +
            (C11732 + C11731 + C11730 + C11729 + C11728 + C11727) * C10306 +
            (C6418 * C32826 + C6417 * C759 + C6416 * C32849 + C6415 * C758 +
             (C6132 * C132 + C32450 * C141) * C32861 +
             (C6132 * C120 + C32450 * C127) * C757) *
                C10305) *
               C530) *
              C32499 * C443)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C6132 * C119 + C32450 * C126) * C118 +
             (C6132 * C131 + C32450 * C140) * C32542) *
                C11958 +
            (C12096 + C12097) * C11959 + C12110 * C11960 + C12111 * C11961 +
            C12120 * C11962) *
               C530 -
           ((C12118 + C12119) * C11962 + (C12117 + C12116) * C11961 +
            (C12101 + C12100) * C11960 + (C12099 + C12098) * C11959 +
            (C12097 + C12096) * C11958) *
               C531) *
              C32499 * C442 +
          (((C12293 + C12294) * C11958 + (C12295 + C12296) * C11959 +
            (C12309 + C12310) * C11960 + (C12311 + C12312) * C11961 +
            ((C6132 * C12288 + C32450 * C12289) * C118 +
             (C6132 * C12290 + C32450 * C12291) * C32542) *
                C11962) *
               C531 -
           ((C12312 + C12311) * C11962 + (C12310 + C12309) * C11961 +
            (C12296 + C12295) * C11960 + (C12294 + C12293) * C11959 +
            ((C6132 * C132 + C32450 * C141) * C32542 +
             (C6132 * C120 + C32450 * C127) * C118) *
                C11958) *
               C530) *
              C32499 * C443)) /
            (p * q * std::sqrt(p + q));
    d2ee[64] +=
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C127 +
            C115 * C121 + C103 * C128 + C116 * C122 + C104 * C129 +
            C117 * C123 + C105 * C130) *
               C118 +
           (C113 * C131 + C101 * C140 + C114 * C132 + C102 * C141 +
            C115 * C133 + C103 * C142 + C116 * C134 + C104 * C143 +
            C117 * C135 + C105 * C144) *
               C32542) *
              C32554 * C32513 * C32499 * C110 -
          ((C117 * C136 + C105 * C145 + C116 * C135 + C104 * C144 +
            C115 * C134 + C103 * C143 + C114 * C133 + C102 * C142 +
            C113 * C132 + C101 * C141) *
               C32542 +
           (C117 * C124 + C105 * C137 + C116 * C123 + C104 * C130 +
            C115 * C122 + C103 * C129 + C114 * C121 + C102 * C128 +
            C113 * C120 + C101 * C127) *
               C118) *
              C32554 * C32513 * C32499 * C111 +
          ((C113 * C121 + C101 * C128 + C114 * C122 + C102 * C129 +
            C115 * C123 + C103 * C130 + C116 * C124 + C104 * C137 +
            C117 * C125 + C105 * C138) *
               C118 +
           (C113 * C133 + C101 * C142 + C114 * C134 + C102 * C143 +
            C115 * C135 + C103 * C144 + C116 * C136 + C104 * C145 +
            C117 * C139 + C105 * C146) *
               C32542) *
              C32554 * C32513 * C32499 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C127 +
            C115 * C121 + C103 * C128 + C116 * C122 + C104 * C129 +
            C117 * C123 + C105 * C130) *
               C118 +
           (C113 * C131 + C101 * C140 + C114 * C132 + C102 * C141 +
            C115 * C133 + C103 * C142 + C116 * C134 + C104 * C143 +
            C117 * C135 + C105 * C144) *
               C32542) *
              C32554 * C32513 * C209 -
          ((C117 * C223 + C105 * C243 + C116 * C224 + C104 * C244 +
            C115 * C225 + C103 * C245 + C114 * C226 + C102 * C246 +
            C113 * C227 + C101 * C247) *
               C32542 +
           (C117 * C213 + C105 * C228 + C116 * C214 + C104 * C229 +
            C115 * C215 + C103 * C230 + C114 * C216 + C102 * C231 +
            C113 * C217 + C101 * C232) *
               C118) *
              C32554 * C32513 * C210 +
          ((C113 * C218 + C101 * C233 + C114 * C219 + C102 * C234 +
            C115 * C220 + C103 * C235 + C116 * C221 + C104 * C236 +
            C117 * C222 + C105 * C237) *
               C118 +
           (C113 * C238 + C101 * C248 + C114 * C239 + C102 * C249 +
            C115 * C240 + C103 * C250 + C116 * C241 + C104 * C251 +
            C117 * C242 + C105 * C252) *
               C32542) *
              C32554 * C32513 * C211) *
         C32487) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C754 * C119 + C748 * C126 + C755 * C120 + C749 * C127 +
            C756 * C121 + C32815 * C128) *
               C757 +
           (C754 * C131 + C748 * C140 + C755 * C132 + C749 * C141 +
            C756 * C133 + C32815 * C142) *
               C32861 +
           (C754 * C217 + C748 * C232 + C755 * C216 + C749 * C231 +
            C756 * C215 + C32815 * C230) *
               C758 +
           (C754 * C227 + C748 * C247 + C755 * C226 + C749 * C246 +
            C756 * C225 + C32815 * C245) *
               C32849 +
           (C754 * C218 + C748 * C233 + C755 * C219 + C749 * C234 +
            C756 * C220 + C32815 * C235) *
               C759 +
           (C754 * C238 + C748 * C248 + C755 * C239 + C749 * C249 +
            C756 * C240 + C32815 * C250) *
               C32826) *
              C32554 * C32513 * C32499 * C110 -
          ((C756 * C241 + C32815 * C251 + C755 * C240 + C749 * C250 +
            C754 * C239 + C748 * C249) *
               C32826 +
           (C756 * C221 + C32815 * C236 + C755 * C220 + C749 * C235 +
            C754 * C219 + C748 * C234) *
               C759 +
           (C756 * C224 + C32815 * C244 + C755 * C225 + C749 * C245 +
            C754 * C226 + C748 * C246) *
               C32849 +
           (C756 * C214 + C32815 * C229 + C755 * C215 + C749 * C230 +
            C754 * C216 + C748 * C231) *
               C758 +
           (C756 * C134 + C32815 * C143 + C755 * C133 + C749 * C142 +
            C754 * C132 + C748 * C141) *
               C32861 +
           (C756 * C122 + C32815 * C129 + C755 * C121 + C749 * C128 +
            C754 * C120 + C748 * C127) *
               C757) *
              C32554 * C32513 * C32499 * C111 +
          ((C754 * C121 + C748 * C128 + C755 * C122 + C749 * C129 +
            C756 * C123 + C32815 * C130) *
               C757 +
           (C754 * C133 + C748 * C142 + C755 * C134 + C749 * C143 +
            C756 * C135 + C32815 * C144) *
               C32861 +
           (C754 * C215 + C748 * C230 + C755 * C214 + C749 * C229 +
            C756 * C213 + C32815 * C228) *
               C758 +
           (C754 * C225 + C748 * C245 + C755 * C224 + C749 * C244 +
            C756 * C223 + C32815 * C243) *
               C32849 +
           (C754 * C220 + C748 * C235 + C755 * C221 + C749 * C236 +
            C756 * C222 + C32815 * C237) *
               C759 +
           (C754 * C240 + C748 * C250 + C755 * C241 + C749 * C251 +
            C756 * C242 + C32815 * C252) *
               C32826) *
              C32554 * C32513 * C32499 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C754 * C119 + C748 * C126 + C755 * C120 + C749 * C127 +
            C756 * C121 + C32815 * C128) *
               C757 +
           (C754 * C131 + C748 * C140 + C755 * C132 + C749 * C141 +
            C756 * C133 + C32815 * C142) *
               C32861 +
           (C931 + C932 + C933) * C758 + (C934 + C935 + C936) * C32849 +
           C951 * C759 + C952 * C32826) *
              C32554 * C32513 * C209 -
          ((C943 + C944 + C945) * C32826 + (C946 + C947 + C948) * C759 +
           (C942 + C941 + C940) * C32849 + (C939 + C938 + C937) * C758 +
           (C936 + C935 + C934) * C32861 + (C933 + C932 + C931) * C757) *
              C32554 * C32513 * C210 +
          (C951 * C757 + C952 * C32861 + (C948 + C947 + C946) * C758 +
           (C945 + C944 + C943) * C32849 +
           (C754 * C873 + C748 * C882 + C755 * C874 + C749 * C883 +
            C756 * C875 + C32815 * C884) *
               C759 +
           (C754 * C885 + C748 * C891 + C755 * C886 + C749 * C892 +
            C756 * C887 + C32815 * C893) *
               C32826) *
              C32554 * C32513 * C211) *
         C32487) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C754 * C119 + C748 * C126 + C755 * C120 + C749 * C127 +
             C756 * C121 + C32815 * C128) *
                C118 +
            (C754 * C131 + C748 * C140 + C755 * C132 + C749 * C141 +
             C756 * C133 + C32815 * C142) *
                C32542) *
               C32862 +
           ((C754 * C322 + C748 * C337 + C755 * C321 + C749 * C336 +
             C756 * C320 + C32815 * C335) *
                C118 +
            (C754 * C332 + C748 * C352 + C755 * C331 + C749 * C351 +
             C756 * C330 + C32815 * C350) *
                C32542) *
               C32851 +
           ((C754 * C323 + C748 * C338 + C755 * C324 + C749 * C339 +
             C756 * C325 + C32815 * C340) *
                C118 +
            (C754 * C343 + C748 * C353 + C755 * C344 + C749 * C354 +
             C756 * C345 + C32815 * C355) *
                C32542) *
               C32829) *
              C32513 * C32499 * C110 -
          (((C756 * C346 + C32815 * C356 + C755 * C345 + C749 * C355 +
             C754 * C344 + C748 * C354) *
                C32542 +
            (C756 * C326 + C32815 * C341 + C755 * C325 + C749 * C340 +
             C754 * C324 + C748 * C339) *
                C118) *
               C32829 +
           ((C756 * C329 + C32815 * C349 + C755 * C330 + C749 * C350 +
             C754 * C331 + C748 * C351) *
                C32542 +
            (C756 * C319 + C32815 * C334 + C755 * C320 + C749 * C335 +
             C754 * C321 + C748 * C336) *
                C118) *
               C32851 +
           ((C756 * C134 + C32815 * C143 + C755 * C133 + C749 * C142 +
             C754 * C132 + C748 * C141) *
                C32542 +
            (C756 * C122 + C32815 * C129 + C755 * C121 + C749 * C128 +
             C754 * C120 + C748 * C127) *
                C118) *
               C32862) *
              C32513 * C32499 * C111 +
          (((C754 * C121 + C748 * C128 + C755 * C122 + C749 * C129 +
             C756 * C123 + C32815 * C130) *
                C118 +
            (C754 * C133 + C748 * C142 + C755 * C134 + C749 * C143 +
             C756 * C135 + C32815 * C144) *
                C32542) *
               C32862 +
           ((C754 * C320 + C748 * C335 + C755 * C319 + C749 * C334 +
             C756 * C318 + C32815 * C333) *
                C118 +
            (C754 * C330 + C748 * C350 + C755 * C329 + C749 * C349 +
             C756 * C328 + C32815 * C348) *
                C32542) *
               C32851 +
           ((C754 * C325 + C748 * C340 + C755 * C326 + C749 * C341 +
             C756 * C327 + C32815 * C342) *
                C118 +
            (C754 * C345 + C748 * C355 + C755 * C346 + C749 * C356 +
             C756 * C347 + C32815 * C357) *
                C32542) *
               C32829) *
              C32513 * C32499 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C754 * C119 + C748 * C126 + C755 * C120 + C749 * C127 +
             C756 * C121 + C32815 * C128) *
                C118 +
            (C754 * C131 + C748 * C140 + C755 * C132 + C749 * C141 +
             C756 * C133 + C32815 * C142) *
                C32542) *
               C32862 +
           ((C754 * C322 + C748 * C337 + C755 * C321 + C749 * C336 +
             C756 * C320 + C32815 * C335) *
                C118 +
            (C754 * C332 + C748 * C352 + C755 * C331 + C749 * C351 +
             C756 * C330 + C32815 * C350) *
                C32542) *
               C32851 +
           ((C754 * C323 + C748 * C338 + C755 * C324 + C749 * C339 +
             C756 * C325 + C32815 * C340) *
                C118 +
            (C754 * C343 + C748 * C353 + C755 * C344 + C749 * C354 +
             C756 * C345 + C32815 * C355) *
                C32542) *
               C32829) *
              C32513 * C209 -
          (((C756 * C1082 + C32815 * C1094 + C755 * C1081 + C749 * C1093 +
             C754 * C1080 + C748 * C1092) *
                C32542 +
            (C756 * C1067 + C32815 * C1079 + C755 * C1066 + C749 * C1078 +
             C754 * C1065 + C748 * C1077) *
                C118) *
               C32829 +
           ((C1623 + C1624 + C1625) * C32542 + (C1626 + C1627 + C1628) * C118) *
               C32851 +
           ((C936 + C935 + C934) * C32542 + (C933 + C932 + C931) * C118) *
               C32862) *
              C32513 * C210 +
          ((C951 * C118 + C952 * C32542) * C32862 +
           ((C1622 + C1621 + C1620) * C118 + (C1619 + C1618 + C1617) * C32542) *
               C32851 +
           ((C754 * C1068 + C748 * C1083 + C755 * C1069 + C749 * C1084 +
             C756 * C1070 + C32815 * C1085) *
                C118 +
            (C754 * C1086 + C748 * C1095 + C755 * C1087 + C749 * C1096 +
             C756 * C1088 + C32815 * C1097) *
                C32542) *
               C32829) *
              C32513 * C211) *
         C32487) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C5270 * C119 + C32858 * C126 + C5271 * C120 + C32845 * C127 +
            C5272 * C121 + C32815 * C128) *
               C5273 +
           (C5270 * C131 + C32858 * C140 + C5271 * C132 + C32845 * C141 +
            C5272 * C133 + C32815 * C142) *
               C5267 +
           (C5270 * C217 + C32858 * C232 + C5271 * C216 + C32845 * C231 +
            C5272 * C215 + C32815 * C230) *
               C5274 +
           (C5270 * C227 + C32858 * C247 + C5271 * C226 + C32845 * C246 +
            C5272 * C225 + C32815 * C245) *
               C5268 +
           (C5270 * C218 + C32858 * C233 + C5271 * C219 + C32845 * C234 +
            C5272 * C220 + C32815 * C235) *
               C5275 +
           (C5270 * C238 + C32858 * C248 + C5271 * C239 + C32845 * C249 +
            C5272 * C240 + C32815 * C250) *
               C32826) *
              C32554 * C32513 * C32499 * C110 -
          ((C5272 * C241 + C32815 * C251 + C5271 * C240 + C32845 * C250 +
            C5270 * C239 + C32858 * C249) *
               C32826 +
           (C5272 * C221 + C32815 * C236 + C5271 * C220 + C32845 * C235 +
            C5270 * C219 + C32858 * C234) *
               C5275 +
           (C5272 * C224 + C32815 * C244 + C5271 * C225 + C32845 * C245 +
            C5270 * C226 + C32858 * C246) *
               C5268 +
           (C5272 * C214 + C32815 * C229 + C5271 * C215 + C32845 * C230 +
            C5270 * C216 + C32858 * C231) *
               C5274 +
           (C5272 * C134 + C32815 * C143 + C5271 * C133 + C32845 * C142 +
            C5270 * C132 + C32858 * C141) *
               C5267 +
           (C5272 * C122 + C32815 * C129 + C5271 * C121 + C32845 * C128 +
            C5270 * C120 + C32858 * C127) *
               C5273) *
              C32554 * C32513 * C32499 * C111 +
          ((C5270 * C121 + C32858 * C128 + C5271 * C122 + C32845 * C129 +
            C5272 * C123 + C32815 * C130) *
               C5273 +
           (C5270 * C133 + C32858 * C142 + C5271 * C134 + C32845 * C143 +
            C5272 * C135 + C32815 * C144) *
               C5267 +
           (C5270 * C215 + C32858 * C230 + C5271 * C214 + C32845 * C229 +
            C5272 * C213 + C32815 * C228) *
               C5274 +
           (C5270 * C225 + C32858 * C245 + C5271 * C224 + C32845 * C244 +
            C5272 * C223 + C32815 * C243) *
               C5268 +
           (C5270 * C220 + C32858 * C235 + C5271 * C221 + C32845 * C236 +
            C5272 * C222 + C32815 * C237) *
               C5275 +
           (C5270 * C240 + C32858 * C250 + C5271 * C241 + C32845 * C251 +
            C5272 * C242 + C32815 * C252) *
               C32826) *
              C32554 * C32513 * C32499 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C5270 * C119 + C32858 * C126 + C5271 * C120 + C32845 * C127 +
            C5272 * C121 + C32815 * C128) *
               C5273 +
           (C5270 * C131 + C32858 * C140 + C5271 * C132 + C32845 * C141 +
            C5272 * C133 + C32815 * C142) *
               C5267 +
           (C5423 + C5424 + C5425) * C5274 + (C5426 + C5427 + C5428) * C5268 +
           C5443 * C5275 + C5444 * C32826) *
              C32554 * C32513 * C209 -
          ((C5435 + C5436 + C5437) * C32826 + (C5438 + C5439 + C5440) * C5275 +
           (C5434 + C5433 + C5432) * C5268 + (C5431 + C5430 + C5429) * C5274 +
           (C5428 + C5427 + C5426) * C5267 + (C5425 + C5424 + C5423) * C5273) *
              C32554 * C32513 * C210 +
          (C5443 * C5273 + C5444 * C5267 + (C5440 + C5439 + C5438) * C5274 +
           (C5437 + C5436 + C5435) * C5268 +
           (C5270 * C873 + C32858 * C882 + C5271 * C874 + C32845 * C883 +
            C5272 * C875 + C32815 * C884) *
               C5275 +
           (C5270 * C885 + C32858 * C891 + C5271 * C886 + C32845 * C892 +
            C5272 * C887 + C32815 * C893) *
               C32826) *
              C32554 * C32513 * C211) *
         C32487) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C6132 * C119 + C32450 * C126) * C6133 +
           (C6132 * C131 + C32450 * C140) * C6127 +
           (C6132 * C217 + C32450 * C232) * C6134 +
           (C6132 * C227 + C32450 * C247) * C6128 +
           (C6132 * C218 + C32450 * C233) * C6135 +
           (C6132 * C238 + C32450 * C248) * C6129 +
           (C6132 * C872 + C32450 * C881) * C6136 +
           (C6132 * C878 + C32450 * C890) * C6130 +
           (C6132 * C873 + C32450 * C882) * C6137 +
           (C6132 * C885 + C32450 * C891) * C6131) *
              C32554 * C32513 * C32499 * C110 -
          ((C6132 * C886 + C32450 * C892) * C6131 +
           (C6132 * C874 + C32450 * C883) * C6137 +
           (C6132 * C877 + C32450 * C889) * C6130 +
           (C6132 * C871 + C32450 * C880) * C6136 +
           (C6132 * C239 + C32450 * C249) * C6129 +
           (C6132 * C219 + C32450 * C234) * C6135 +
           (C6132 * C226 + C32450 * C246) * C6128 +
           (C6132 * C216 + C32450 * C231) * C6134 +
           (C6132 * C132 + C32450 * C141) * C6127 +
           (C6132 * C120 + C32450 * C127) * C6133) *
              C32554 * C32513 * C32499 * C111 +
          ((C6132 * C121 + C32450 * C128) * C6133 +
           (C6132 * C133 + C32450 * C142) * C6127 +
           (C6132 * C215 + C32450 * C230) * C6134 +
           (C6132 * C225 + C32450 * C245) * C6128 +
           (C6132 * C220 + C32450 * C235) * C6135 +
           (C6132 * C240 + C32450 * C250) * C6129 +
           (C6132 * C870 + C32450 * C879) * C6136 +
           (C6132 * C876 + C32450 * C888) * C6130 +
           (C6132 * C875 + C32450 * C884) * C6137 +
           (C6132 * C887 + C32450 * C893) * C6131) *
              C32554 * C32513 * C32499 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C6132 * C119 + C32450 * C126) * C6133 +
           (C6132 * C131 + C32450 * C140) * C6127 + C6229 * C6134 +
           C6230 * C6128 + C6231 * C6135 + C6232 * C6129 + C6233 * C6136 +
           C6234 * C6130 + C6235 * C6137 + C6236 * C6131) *
              C32554 * C32513 * C209 -
          (C6237 * C6131 + C6238 * C6137 + C6236 * C6130 + C6235 * C6136 +
           C6234 * C6129 + C6233 * C6135 + C6232 * C6128 + C6231 * C6134 +
           C6230 * C6127 + C6229 * C6133) *
              C32554 * C32513 * C210 +
          (C6231 * C6133 + C6232 * C6127 + C6233 * C6134 + C6234 * C6128 +
           C6235 * C6135 + C6236 * C6129 + C6238 * C6136 + C6237 * C6130 +
           (C6132 * C6201 + C32450 * C6204) * C6137 +
           (C6132 * C6205 + C32450 * C6207) * C6131) *
              C32554 * C32513 * C211) *
         C32487) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C6132 * C119 + C32450 * C126) * C5273 +
            (C6132 * C131 + C32450 * C140) * C5267 + C6229 * C5274 +
            C6230 * C5268 + C6231 * C5275 + C6232 * C32826) *
               C32862 +
           ((C6132 * C322 + C32450 * C337) * C5273 +
            (C6132 * C332 + C32450 * C352) * C5267 + C6618 * C5274 +
            C6617 * C5268 + C6616 * C5275 + C6615 * C32826) *
               C32851 +
           ((C6132 * C323 + C32450 * C338) * C5273 +
            (C6132 * C343 + C32450 * C353) * C5267 +
            (C6132 * C1065 + C32450 * C1077) * C5274 +
            (C6132 * C1080 + C32450 * C1092) * C5268 +
            (C6132 * C1068 + C32450 * C1083) * C5275 +
            (C6132 * C1086 + C32450 * C1095) * C32826) *
               C32829) *
              C32513 * C32499 * C110 -
          (((C6132 * C1087 + C32450 * C1096) * C32826 +
            (C6132 * C1069 + C32450 * C1084) * C5275 +
            (C6132 * C1081 + C32450 * C1093) * C5268 +
            (C6132 * C1066 + C32450 * C1078) * C5274 +
            (C6132 * C344 + C32450 * C354) * C5267 +
            (C6132 * C324 + C32450 * C339) * C5273) *
               C32829 +
           ((C6132 * C1072 + C32450 * C1090) * C32826 +
            (C6132 * C1063 + C32450 * C1075) * C5275 +
            (C6132 * C629 + C32450 * C634) * C5268 +
            (C6132 * C619 + C32450 * C624) * C5274 +
            (C6132 * C331 + C32450 * C351) * C5267 +
            (C6132 * C321 + C32450 * C336) * C5273) *
               C32851 +
           (C6418 * C32826 + C6417 * C5275 + C6416 * C5268 + C6415 * C5274 +
            (C6132 * C132 + C32450 * C141) * C5267 +
            (C6132 * C120 + C32450 * C127) * C5273) *
               C32862) *
              C32513 * C32499 * C111 +
          (((C6132 * C121 + C32450 * C128) * C5273 +
            (C6132 * C133 + C32450 * C142) * C5267 +
            (C6132 * C215 + C32450 * C230) * C5274 +
            (C6132 * C225 + C32450 * C245) * C5268 +
            (C6132 * C220 + C32450 * C235) * C5275 +
            (C6132 * C240 + C32450 * C250) * C32826) *
               C32862 +
           ((C6132 * C320 + C32450 * C335) * C5273 +
            (C6132 * C330 + C32450 * C350) * C5267 +
            (C6132 * C620 + C32450 * C625) * C5274 +
            (C6132 * C630 + C32450 * C635) * C5268 +
            (C6132 * C1062 + C32450 * C1074) * C5275 +
            (C6132 * C1071 + C32450 * C1089) * C32826) *
               C32851 +
           ((C6132 * C325 + C32450 * C340) * C5273 +
            (C6132 * C345 + C32450 * C355) * C5267 +
            (C6132 * C1067 + C32450 * C1079) * C5274 +
            (C6132 * C1082 + C32450 * C1094) * C5268 +
            (C6132 * C1070 + C32450 * C1085) * C5275 +
            (C6132 * C1088 + C32450 * C1097) * C32826) *
               C32829) *
              C32513 * C32499 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C6132 * C119 + C32450 * C126) * C5273 +
            (C6132 * C131 + C32450 * C140) * C5267 + C6229 * C5274 +
            C6230 * C5268 + C6231 * C5275 + C6232 * C32826) *
               C32862 +
           ((C6132 * C322 + C32450 * C337) * C5273 +
            (C6132 * C332 + C32450 * C352) * C5267 + C6618 * C5274 +
            C6617 * C5268 + C6616 * C5275 + C6615 * C32826) *
               C32851 +
           ((C6132 * C323 + C32450 * C338) * C5273 +
            (C6132 * C343 + C32450 * C353) * C5267 + C6851 * C5274 +
            C6852 * C5268 + C6853 * C5275 + C6854 * C32826) *
               C32829) *
              C32513 * C209 -
          ((C6855 * C32826 + C6856 * C5275 + C6854 * C5268 + C6853 * C5274 +
            C6852 * C5267 + C6851 * C5273) *
               C32829 +
           (C6613 * C32826 + C6614 * C5275 + C6615 * C5268 + C6616 * C5274 +
            C6617 * C5267 + C6618 * C5273) *
               C32851 +
           (C6234 * C32826 + C6233 * C5275 + C6232 * C5268 + C6231 * C5274 +
            C6230 * C5267 + C6229 * C5273) *
               C32862) *
              C32513 * C210 +
          ((C6231 * C5273 + C6232 * C5267 + C6233 * C5274 + C6234 * C5268 +
            C6235 * C5275 + C6236 * C32826) *
               C32862 +
           (C6616 * C5273 + C6615 * C5267 + C6614 * C5274 + C6613 * C5268 +
            C6612 * C5275 + C6611 * C32826) *
               C32851 +
           (C6853 * C5273 + C6854 * C5267 + C6856 * C5274 + C6855 * C5268 +
            (C6132 * C6302 + C32450 * C6307) * C5275 +
            (C6132 * C6308 + C32450 * C6311) * C32826) *
               C32829) *
              C32513 * C211) *
         C32487) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C5270 * C119 + C32858 * C126 + C5271 * C120 + C32845 * C127 +
             C5272 * C121 + C32815 * C128) *
                C118 +
            (C5270 * C131 + C32858 * C140 + C5271 * C132 + C32845 * C141 +
             C5272 * C133 + C32815 * C142) *
                C32542) *
               C10305 +
           ((C5270 * C322 + C32858 * C337 + C5271 * C321 + C32845 * C336 +
             C5272 * C320 + C32815 * C335) *
                C118 +
            (C5270 * C332 + C32858 * C352 + C5271 * C331 + C32845 * C351 +
             C5272 * C330 + C32815 * C350) *
                C32542) *
               C10306 +
           ((C5270 * C323 + C32858 * C338 + C5271 * C324 + C32845 * C339 +
             C5272 * C325 + C32815 * C340) *
                C118 +
            (C5270 * C343 + C32858 * C353 + C5271 * C344 + C32845 * C354 +
             C5272 * C345 + C32815 * C355) *
                C32542) *
               C32829) *
              C32513 * C32499 * C110 -
          (((C5272 * C346 + C32815 * C356 + C5271 * C345 + C32845 * C355 +
             C5270 * C344 + C32858 * C354) *
                C32542 +
            (C5272 * C326 + C32815 * C341 + C5271 * C325 + C32845 * C340 +
             C5270 * C324 + C32858 * C339) *
                C118) *
               C32829 +
           ((C5272 * C329 + C32815 * C349 + C5271 * C330 + C32845 * C350 +
             C5270 * C331 + C32858 * C351) *
                C32542 +
            (C5272 * C319 + C32815 * C334 + C5271 * C320 + C32845 * C335 +
             C5270 * C321 + C32858 * C336) *
                C118) *
               C10306 +
           ((C5272 * C134 + C32815 * C143 + C5271 * C133 + C32845 * C142 +
             C5270 * C132 + C32858 * C141) *
                C32542 +
            (C5272 * C122 + C32815 * C129 + C5271 * C121 + C32845 * C128 +
             C5270 * C120 + C32858 * C127) *
                C118) *
               C10305) *
              C32513 * C32499 * C111 +
          (((C5270 * C121 + C32858 * C128 + C5271 * C122 + C32845 * C129 +
             C5272 * C123 + C32815 * C130) *
                C118 +
            (C5270 * C133 + C32858 * C142 + C5271 * C134 + C32845 * C143 +
             C5272 * C135 + C32815 * C144) *
                C32542) *
               C10305 +
           ((C5270 * C320 + C32858 * C335 + C5271 * C319 + C32845 * C334 +
             C5272 * C318 + C32815 * C333) *
                C118 +
            (C5270 * C330 + C32858 * C350 + C5271 * C329 + C32845 * C349 +
             C5272 * C328 + C32815 * C348) *
                C32542) *
               C10306 +
           ((C5270 * C325 + C32858 * C340 + C5271 * C326 + C32845 * C341 +
             C5272 * C327 + C32815 * C342) *
                C118 +
            (C5270 * C345 + C32858 * C355 + C5271 * C346 + C32845 * C356 +
             C5272 * C347 + C32815 * C357) *
                C32542) *
               C32829) *
              C32513 * C32499 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C5270 * C119 + C32858 * C126 + C5271 * C120 + C32845 * C127 +
             C5272 * C121 + C32815 * C128) *
                C118 +
            (C5270 * C131 + C32858 * C140 + C5271 * C132 + C32845 * C141 +
             C5272 * C133 + C32815 * C142) *
                C32542) *
               C10305 +
           ((C5270 * C322 + C32858 * C337 + C5271 * C321 + C32845 * C336 +
             C5272 * C320 + C32815 * C335) *
                C118 +
            (C5270 * C332 + C32858 * C352 + C5271 * C331 + C32845 * C351 +
             C5272 * C330 + C32815 * C350) *
                C32542) *
               C10306 +
           ((C5270 * C323 + C32858 * C338 + C5271 * C324 + C32845 * C339 +
             C5272 * C325 + C32815 * C340) *
                C118 +
            (C5270 * C343 + C32858 * C353 + C5271 * C344 + C32845 * C354 +
             C5272 * C345 + C32815 * C355) *
                C32542) *
               C32829) *
              C32513 * C209 -
          (((C5272 * C1082 + C32815 * C1094 + C5271 * C1081 + C32845 * C1093 +
             C5270 * C1080 + C32858 * C1092) *
                C32542 +
            (C5272 * C1067 + C32815 * C1079 + C5271 * C1066 + C32845 * C1078 +
             C5270 * C1065 + C32858 * C1077) *
                C118) *
               C32829 +
           ((C6059 + C6060 + C6061) * C32542 + (C6062 + C6063 + C6064) * C118) *
               C10306 +
           ((C5428 + C5427 + C5426) * C32542 + (C5425 + C5424 + C5423) * C118) *
               C10305) *
              C32513 * C210 +
          ((C5443 * C118 + C5444 * C32542) * C10305 +
           ((C6058 + C6057 + C6056) * C118 + (C6055 + C6054 + C6053) * C32542) *
               C10306 +
           ((C5270 * C1068 + C32858 * C1083 + C5271 * C1069 + C32845 * C1084 +
             C5272 * C1070 + C32815 * C1085) *
                C118 +
            (C5270 * C1086 + C32858 * C1095 + C5271 * C1087 + C32845 * C1096 +
             C5272 * C1088 + C32815 * C1097) *
                C32542) *
               C32829) *
              C32513 * C211) *
         C32487) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C6132 * C119 + C32450 * C126) * C757 +
            (C6132 * C131 + C32450 * C140) * C32861 + C6229 * C758 +
            C6230 * C32849 + C6231 * C759 + C6232 * C32826) *
               C10305 +
           (C7007 * C757 + C7008 * C32861 + C6618 * C758 + C6617 * C32849 +
            C6616 * C759 + C6615 * C32826) *
               C10306 +
           (C7009 * C757 + C7010 * C32861 + C6851 * C758 + C6852 * C32849 +
            C6853 * C759 + C6854 * C32826) *
               C32829) *
              C32513 * C32499 * C110 -
          ((C7205 * C32826 + C7204 * C759 + C7203 * C32849 + C7202 * C758 +
            C7375 * C32861 + C7374 * C757) *
               C32829 +
           (C7201 * C32826 + C7200 * C759 + C7199 * C32849 + C7198 * C758 +
            C7373 * C32861 + C7372 * C757) *
               C10306 +
           (C6418 * C32826 + C6417 * C759 + C6416 * C32849 + C6415 * C758 +
            (C6132 * C132 + C32450 * C141) * C32861 +
            (C6132 * C120 + C32450 * C127) * C757) *
               C10305) *
              C32513 * C32499 * C111 +
          (((C6132 * C121 + C32450 * C128) * C757 +
            (C6132 * C133 + C32450 * C142) * C32861 +
            (C6132 * C215 + C32450 * C230) * C758 +
            (C6132 * C225 + C32450 * C245) * C32849 +
            (C6132 * C220 + C32450 * C235) * C759 +
            (C6132 * C240 + C32450 * C250) * C32826) *
               C10305 +
           ((C6132 * C320 + C32450 * C335) * C757 +
            (C6132 * C330 + C32450 * C350) * C32861 +
            (C6132 * C620 + C32450 * C625) * C758 +
            (C6132 * C630 + C32450 * C635) * C32849 +
            (C6132 * C1062 + C32450 * C1074) * C759 +
            (C6132 * C1071 + C32450 * C1089) * C32826) *
               C10306 +
           ((C6132 * C325 + C32450 * C340) * C757 +
            (C6132 * C345 + C32450 * C355) * C32861 +
            (C6132 * C1067 + C32450 * C1079) * C758 +
            (C6132 * C1082 + C32450 * C1094) * C32849 +
            (C6132 * C1070 + C32450 * C1085) * C759 +
            (C6132 * C1088 + C32450 * C1097) * C32826) *
               C32829) *
              C32513 * C32499 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C6132 * C119 + C32450 * C126) * C757 +
            (C6132 * C131 + C32450 * C140) * C32861 + C6229 * C758 +
            C6230 * C32849 + C6231 * C759 + C6232 * C32826) *
               C10305 +
           (C7007 * C757 + C7008 * C32861 + C6618 * C758 + C6617 * C32849 +
            C6616 * C759 + C6615 * C32826) *
               C10306 +
           (C7009 * C757 + C7010 * C32861 + C6851 * C758 + C6852 * C32849 +
            C6853 * C759 + C6854 * C32826) *
               C32829) *
              C32513 * C209 -
          ((C6855 * C32826 + C6856 * C759 + C6854 * C32849 + C6853 * C758 +
            C6852 * C32861 + C6851 * C757) *
               C32829 +
           (C6613 * C32826 + C6614 * C759 + C6615 * C32849 + C6616 * C758 +
            C6617 * C32861 + C6618 * C757) *
               C10306 +
           (C6234 * C32826 + C6233 * C759 + C6232 * C32849 + C6231 * C758 +
            C6230 * C32861 + C6229 * C757) *
               C10305) *
              C32513 * C210 +
          ((C6231 * C757 + C6232 * C32861 + C6233 * C758 + C6234 * C32849 +
            C6235 * C759 + C6236 * C32826) *
               C10305 +
           (C6616 * C757 + C6615 * C32861 + C6614 * C758 + C6613 * C32849 +
            C6612 * C759 + C6611 * C32826) *
               C10306 +
           (C6853 * C757 + C6854 * C32861 + C6856 * C758 + C6855 * C32849 +
            (C6132 * C6302 + C32450 * C6307) * C759 +
            (C6132 * C6308 + C32450 * C6311) * C32826) *
               C32829) *
              C32513 * C211) *
         C32487) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C6132 * C119 + C32450 * C126) * C118 +
            (C6132 * C131 + C32450 * C140) * C32542) *
               C11958 +
           (C7007 * C118 + C7008 * C32542) * C11959 +
           (C7009 * C118 + C7010 * C32542) * C11960 +
           (C7016 * C118 + C7015 * C32542) * C11961 +
           ((C6132 * C1964 + C32450 * C1973) * C118 +
            (C6132 * C1976 + C32450 * C1982) * C32542) *
               C11962) *
              C32513 * C32499 * C110 -
          (((C6132 * C1977 + C32450 * C1983) * C32542 +
            (C6132 * C1965 + C32450 * C1974) * C118) *
               C11962 +
           ((C6132 * C1968 + C32450 * C1980) * C32542 +
            (C6132 * C1962 + C32450 * C1971) * C118) *
               C11961 +
           (C7375 * C32542 + C7374 * C118) * C11960 +
           (C7373 * C32542 + C7372 * C118) * C11959 +
           ((C6132 * C132 + C32450 * C141) * C32542 +
            (C6132 * C120 + C32450 * C127) * C118) *
               C11958) *
              C32513 * C32499 * C111 +
          (((C6132 * C121 + C32450 * C128) * C118 +
            (C6132 * C133 + C32450 * C142) * C32542) *
               C11958 +
           ((C6132 * C320 + C32450 * C335) * C118 +
            (C6132 * C330 + C32450 * C350) * C32542) *
               C11959 +
           ((C6132 * C325 + C32450 * C340) * C118 +
            (C6132 * C345 + C32450 * C355) * C32542) *
               C11960 +
           ((C6132 * C1961 + C32450 * C1970) * C118 +
            (C6132 * C1967 + C32450 * C1979) * C32542) *
               C11961 +
           ((C6132 * C1966 + C32450 * C1975) * C118 +
            (C6132 * C1978 + C32450 * C1984) * C32542) *
               C11962) *
              C32513 * C32499 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C6132 * C119 + C32450 * C126) * C118 +
            (C6132 * C131 + C32450 * C140) * C32542) *
               C11958 +
           (C7007 * C118 + C7008 * C32542) * C11959 +
           (C7009 * C118 + C7010 * C32542) * C11960 +
           (C7016 * C118 + C7015 * C32542) * C11961 +
           ((C6132 * C1964 + C32450 * C1973) * C118 +
            (C6132 * C1976 + C32450 * C1982) * C32542) *
               C11962) *
              C32513 * C209 -
          (((C6132 * C6972 + C32450 * C6976) * C32542 +
            (C6132 * C6967 + C32450 * C6971) * C118) *
               C11962 +
           (C7013 * C32542 + C7014 * C118) * C11961 +
           (C6852 * C32542 + C6851 * C118) * C11960 +
           (C6617 * C32542 + C6618 * C118) * C11959 +
           (C6230 * C32542 + C6229 * C118) * C11958) *
              C32513 * C210 +
          ((C6231 * C118 + C6232 * C32542) * C11958 +
           (C6616 * C118 + C6615 * C32542) * C11959 +
           (C6853 * C118 + C6854 * C32542) * C11960 +
           (C7012 * C118 + C7011 * C32542) * C11961 +
           ((C6132 * C6968 + C32450 * C6973) * C118 +
            (C6132 * C6974 + C32450 * C6977) * C32542) *
               C11962) *
              C32513 * C211) *
         C32487) /
            (p * q * std::sqrt(p + q));
    d2ee[65] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31557 * C119 + C32776 * C126 + C31538 * C120 + C32460 * C127) *
                 C5273 +
             (C31557 * C131 + C32776 * C140 + C31538 * C132 + C32460 * C141) *
                 C5267 +
             (C7782 + C7783) * C5274 + (C7784 + C7785) * C5268 + C7798 * C5275 +
             C7799 * C32826) *
                C32796 +
            ((C8834 + C8835) * C5273 + (C8836 + C8837) * C5267 +
             (C8361 + C8360) * C5274 + (C8359 + C8358) * C5268 + C8654 * C5275 +
             C8655 * C32826) *
                C32641) *
               C32513 * C440 -
           (((C8350 + C8351) * C32826 + (C8352 + C8353) * C5275 +
             (C8354 + C8355) * C5268 + (C8356 + C8357) * C5274 +
             (C8358 + C8359) * C5267 + (C8360 + C8361) * C5273) *
                C32641 +
            ((C7793 + C7792) * C32826 + (C7791 + C7790) * C5275 +
             (C7789 + C7788) * C5268 + (C7787 + C7786) * C5274 +
             (C7785 + C7784) * C5267 + (C7783 + C7782) * C5273) *
                C32796) *
               C32513 * C441) *
              C442 +
          ((((C8054 + C8055) * C5273 + (C8056 + C8057) * C5267 +
             (C8058 + C8059) * C5274 + (C8060 + C8061) * C5268 +
             (C8062 + C8063) * C5275 + (C8064 + C8065) * C32826) *
                C32796 +
            ((C9060 + C9061) * C5273 + (C9062 + C9063) * C5267 +
             (C9064 + C9065) * C5274 + (C9066 + C9067) * C5268 +
             (C31557 * C1581 + C32776 * C1584 + C31538 * C1582 +
              C32460 * C1585) *
                 C5275 +
             (C31557 * C1587 + C32776 * C1590 + C31538 * C1588 +
              C32460 * C1591) *
                 C32826) *
                C32641) *
               C32513 * C441 -
           (((C9067 + C9066) * C32826 + (C9065 + C9064) * C5275 +
             (C9063 + C9062) * C5268 + (C9061 + C9060) * C5274 +
             (C31538 * C330 + C32460 * C350 + C31557 * C331 + C32776 * C351) *
                 C5267 +
             (C31538 * C320 + C32460 * C335 + C31557 * C321 + C32776 * C336) *
                 C5273) *
                C32641 +
            ((C8061 + C8060) * C32826 + (C8059 + C8058) * C5275 +
             (C8057 + C8056) * C5268 + (C8055 + C8054) * C5274 +
             (C31538 * C133 + C32460 * C142 + C31557 * C132 + C32776 * C141) *
                 C5267 +
             (C31538 * C121 + C32460 * C128 + C31557 * C120 + C32776 * C127) *
                 C5273) *
                C32796) *
               C32513 * C440) *
              C443)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2662 * C119 + C2656 * C126 + C2663 * C120 + C2657 * C127 +
              C2664 * C121 + C2658 * C128 + C2665 * C122 + C32830 * C129) *
                 C118 +
             (C2662 * C131 + C2656 * C140 + C2663 * C132 + C2657 * C141 +
              C2664 * C133 + C2658 * C142 + C2665 * C134 + C32830 * C143) *
                 C32542) *
                C32796 +
            ((C3679 + C3680 + C3681 + C3682) * C118 +
             (C3683 + C3684 + C3685 + C3686) * C32542) *
                C32641) *
               C32513 * C440 -
           (((C3343 + C3344 + C3345 + C3346) * C32542 +
             (C3347 + C3348 + C3349 + C3350) * C118) *
                C32641 +
            ((C2806 + C2805 + C2804 + C2803) * C32542 +
             (C2802 + C2801 + C2800 + C2799) * C118) *
                C32796) *
               C32513 * C441) *
              C442 +
          ((((C3059 + C3060 + C3061 + C3062) * C118 +
             (C3063 + C3064 + C3065 + C3066) * C32542) *
                C32796 +
            ((C2662 * C619 + C2656 * C624 + C2663 * C620 + C2657 * C625 +
              C2664 * C621 + C2658 * C626 + C2665 * C622 + C32830 * C627) *
                 C118 +
             (C2662 * C629 + C2656 * C634 + C2663 * C630 + C2657 * C635 +
              C2664 * C631 + C2658 * C636 + C2665 * C632 + C32830 * C637) *
                 C32542) *
                C32641) *
               C32513 * C441 -
           (((C2665 * C328 + C32830 * C348 + C2664 * C329 + C2658 * C349 +
              C2663 * C330 + C2657 * C350 + C2662 * C331 + C2656 * C351) *
                 C32542 +
             (C2665 * C318 + C32830 * C333 + C2664 * C319 + C2658 * C334 +
              C2663 * C320 + C2657 * C335 + C2662 * C321 + C2656 * C336) *
                 C118) *
                C32641 +
            ((C2665 * C135 + C32830 * C144 + C2664 * C134 + C2658 * C143 +
              C2663 * C133 + C2657 * C142 + C2662 * C132 + C2656 * C141) *
                 C32542 +
             (C2665 * C123 + C32830 * C130 + C2664 * C122 + C2658 * C129 +
              C2663 * C121 + C2657 * C128 + C2662 * C120 + C2656 * C127) *
                 C118) *
                C32796) *
               C32513 * C440) *
              C443)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C31557 * C119 + C32776 * C126 + C31538 * C120 + C32460 * C127) *
                 C118 +
             (C31557 * C131 + C32776 * C140 + C31538 * C132 + C32460 * C141) *
                 C32542) *
                C13591 +
            ((C8834 + C8835) * C118 + (C8836 + C8837) * C32542) * C13592 +
            C13804 * C13593 + C13811 * C32842) *
               C32513 * C440 -
           (((C12875 + C12876) * C32542 + (C12877 + C12878) * C118) * C32842 +
            (C13492 * C32542 + C13493 * C118) * C13593 +
            (C9472 * C32542 + C9473 * C118) * C13592 +
            ((C7785 + C7784) * C32542 + (C7783 + C7782) * C118) * C13591) *
               C32513 * C441) *
              C442 +
          ((((C8054 + C8055) * C118 + (C8056 + C8057) * C32542) * C13591 +
            ((C9060 + C9061) * C118 + (C9062 + C9063) * C32542) * C13592 +
            ((C13088 + C13089) * C118 + (C13090 + C13091) * C32542) * C13593 +
            ((C31557 * C2529 + C32776 * C2532 + C31538 * C2530 +
              C32460 * C2533) *
                 C118 +
             (C31557 * C2535 + C32776 * C2538 + C31538 * C2536 +
              C32460 * C2539) *
                 C32542) *
                C32842) *
               C32513 * C441 -
           (((C31538 * C1967 + C32460 * C1979 + C31557 * C1968 +
              C32776 * C1980) *
                 C32542 +
             (C31538 * C1961 + C32460 * C1970 + C31557 * C1962 +
              C32776 * C1971) *
                 C118) *
                C32842 +
            ((C13297 + C13296) * C32542 + (C13295 + C13294) * C118) * C13593 +
            ((C9273 + C9272) * C32542 + (C9271 + C9270) * C118) * C13592 +
            ((C31538 * C133 + C32460 * C142 + C31557 * C132 + C32776 * C141) *
                 C32542 +
             (C31538 * C121 + C32460 * C128 + C31557 * C120 + C32776 * C127) *
                 C118) *
                C13591) *
               C32513 * C440) *
              C443)) /
            (p * q * std::sqrt(p + q));
    d2ee[66] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31557 * C119 + C32776 * C126 + C31538 * C120 + C32460 * C127) *
                 C5273 +
             (C31557 * C131 + C32776 * C140 + C31538 * C132 + C32460 * C141) *
                 C5267 +
             (C7782 + C7783) * C5274 + (C7784 + C7785) * C5268 + C7798 * C5275 +
             C7799 * C32826) *
                C32796 +
            ((C8834 + C8835) * C5273 + (C8836 + C8837) * C5267 + C9468 * C5274 +
             C9469 * C5268 + C8654 * C5275 + C8655 * C32826) *
                C32641) *
               C530 -
           (((C8838 + C8839) * C32826 + (C8840 + C8841) * C5275 +
             (C8842 + C8843) * C5268 + (C8844 + C8845) * C5274 +
             (C8846 + C8847) * C5267 + (C8848 + C8849) * C5273) *
                C32641 +
            (C9470 * C32826 + C9471 * C5275 + C9472 * C5268 + C9473 * C5274 +
             (C8837 + C8836) * C5267 + (C8835 + C8834) * C5273) *
                C32796) *
               C531) *
              C440 +
          (((C9468 * C5273 + C9469 * C5267 + C8654 * C5274 + C8655 * C5268 +
             (C8353 + C8352) * C5275 + (C8351 + C8350) * C32826) *
                C32796 +
            ((C8845 + C8844) * C5273 + (C8843 + C8842) * C5267 +
             (C8841 + C8840) * C5274 + (C8839 + C8838) * C5268 +
             (C31557 * C6301 + C32776 * C6305 + C31538 * C7177 +
              C32460 * C7178) *
                 C5275 +
             (C31557 * C6306 + C32776 * C6310 + C31538 * C7179 +
              C32460 * C7180) *
                 C32826) *
                C32641) *
               C531 -
           (((C8350 + C8351) * C32826 + (C8352 + C8353) * C5275 +
             C9470 * C5268 + C9471 * C5274 + C9472 * C5267 + C9473 * C5273) *
                C32641 +
            ((C7793 + C7792) * C32826 + (C7791 + C7790) * C5275 +
             (C7789 + C7788) * C5268 + (C7787 + C7786) * C5274 +
             (C7785 + C7784) * C5267 + (C7783 + C7782) * C5273) *
                C32796) *
               C530) *
              C441) *
         C32487) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2662 * C119 + C2656 * C126 + C2663 * C120 + C2657 * C127 +
              C2664 * C121 + C2658 * C128 + C2665 * C122 + C32830 * C129) *
                 C118 +
             (C2662 * C131 + C2656 * C140 + C2663 * C132 + C2657 * C141 +
              C2664 * C133 + C2658 * C142 + C2665 * C134 + C32830 * C143) *
                 C32542) *
                C32796 +
            ((C3679 + C3680 + C3681 + C3682) * C118 +
             (C3683 + C3684 + C3685 + C3686) * C32542) *
                C32641) *
               C530 -
           (((C3687 + C3688 + C3689 + C3690) * C32542 +
             (C3691 + C3692 + C3693 + C3694) * C118) *
                C32641 +
            ((C3686 + C3685 + C3684 + C3683) * C32542 +
             (C3682 + C3681 + C3680 + C3679) * C118) *
                C32796) *
               C531) *
              C440 +
          ((((C3350 + C3349 + C3348 + C3347) * C118 +
             (C3346 + C3345 + C3344 + C3343) * C32542) *
                C32796 +
            ((C2662 * C1065 + C2656 * C1077 + C2663 * C1066 + C2657 * C1078 +
              C2664 * C1067 + C2658 * C1079 + C2665 * C2192 + C32830 * C2193) *
                 C118 +
             (C2662 * C1080 + C2656 * C1092 + C2663 * C1081 + C2657 * C1093 +
              C2664 * C1082 + C2658 * C1094 + C2665 * C2194 + C32830 * C2195) *
                 C32542) *
                C32641) *
               C531 -
           (((C3343 + C3344 + C3345 + C3346) * C32542 +
             (C3347 + C3348 + C3349 + C3350) * C118) *
                C32641 +
            ((C2806 + C2805 + C2804 + C2803) * C32542 +
             (C2802 + C2801 + C2800 + C2799) * C118) *
                C32796) *
               C530) *
              C441) *
         C32487) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C31557 * C119 + C32776 * C126 + C31538 * C120 + C32460 * C127) *
                 C118 +
             (C31557 * C131 + C32776 * C140 + C31538 * C132 + C32460 * C141) *
                 C32542) *
                C13591 +
            ((C8834 + C8835) * C118 + (C8836 + C8837) * C32542) * C13592 +
            C13804 * C13593 + C13811 * C32842) *
               C530 -
           (((C13807 + C13808) * C32542 + (C13809 + C13810) * C118) * C32842 +
            ((C12879 + C12880) * C32542 + (C12881 + C12882) * C118) * C13593 +
            ((C8846 + C8847) * C32542 + (C8848 + C8849) * C118) * C13592 +
            ((C8837 + C8836) * C32542 + (C8835 + C8834) * C118) * C13591) *
               C531) *
              C440 +
          (((C9468 * C118 + C9469 * C32542) * C13591 +
            (C12853 * C118 + C12854 * C32542) * C13592 +
            ((C12878 + C12877) * C118 + (C12876 + C12875) * C32542) * C13593 +
            ((C31557 * C6967 + C32776 * C6971 + C31538 * C12202 +
              C32460 * C12203) *
                 C118 +
             (C31557 * C6972 + C32776 * C6976 + C31538 * C12204 +
              C32460 * C12205) *
                 C32542) *
                C32842) *
               C531 -
           (((C12875 + C12876) * C32542 + (C12877 + C12878) * C118) * C32842 +
            (C13492 * C32542 + C13493 * C118) * C13593 +
            (C9472 * C32542 + C9473 * C118) * C13592 +
            ((C7785 + C7784) * C32542 + (C7783 + C7782) * C118) * C13591) *
               C530) *
              C441) *
         C32487) /
            (p * q * std::sqrt(p + q));
    d2ee[67] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C2662 * C119 + C2656 * C126 + C2663 * C120 + C2657 * C127 +
                 C2664 * C121 + C2658 * C128 + C2665 * C122 + C32830 * C129) *
                    C118 +
                (C2662 * C131 + C2656 * C140 + C2663 * C132 + C2657 * C141 +
                 C2664 * C133 + C2658 * C142 + C2665 * C134 + C32830 * C143) *
                    C32542) *
                   C32796 +
               ((C2662 * C322 + C2656 * C337 + C2663 * C321 + C2657 * C336 +
                 C2664 * C320 + C2658 * C335 + C2665 * C319 + C32830 * C334) *
                    C118 +
                (C2662 * C332 + C2656 * C352 + C2663 * C331 + C2657 * C351 +
                 C2664 * C330 + C2658 * C350 + C2665 * C329 + C32830 * C349) *
                    C32542) *
                   C32641) *
                  C32513 * C32499 * C110 -
              (((C2665 * C328 + C32830 * C348 + C2664 * C329 + C2658 * C349 +
                 C2663 * C330 + C2657 * C350 + C2662 * C331 + C2656 * C351) *
                    C32542 +
                (C2665 * C318 + C32830 * C333 + C2664 * C319 + C2658 * C334 +
                 C2663 * C320 + C2657 * C335 + C2662 * C321 + C2656 * C336) *
                    C118) *
                   C32641 +
               ((C2665 * C135 + C32830 * C144 + C2664 * C134 + C2658 * C143 +
                 C2663 * C133 + C2657 * C142 + C2662 * C132 + C2656 * C141) *
                    C32542 +
                (C2665 * C123 + C32830 * C130 + C2664 * C122 + C2658 * C129 +
                 C2663 * C121 + C2657 * C128 + C2662 * C120 + C2656 * C127) *
                    C118) *
                   C32796) *
                  C32513 * C32499 * C111 +
              (((C2662 * C121 + C2656 * C128 + C2663 * C122 + C2657 * C129 +
                 C2664 * C123 + C2658 * C130 + C2665 * C124 + C32830 * C137) *
                    C118 +
                (C2662 * C133 + C2656 * C142 + C2663 * C134 + C2657 * C143 +
                 C2664 * C135 + C2658 * C144 + C2665 * C136 + C32830 * C145) *
                    C32542) *
                   C32796 +
               ((C2662 * C320 + C2656 * C335 + C2663 * C319 + C2657 * C334 +
                 C2664 * C318 + C2658 * C333 + C2665 * C532 + C32830 * C533) *
                    C118 +
                (C2662 * C330 + C2656 * C350 + C2663 * C329 + C2657 * C349 +
                 C2664 * C328 + C2658 * C348 + C2665 * C534 + C32830 * C535) *
                    C32542) *
                   C32641) *
                  C32513 * C32499 * C112) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C2662 * C119 + C2656 * C126 + C2663 * C120 + C2657 * C127 +
                 C2664 * C121 + C2658 * C128 + C2665 * C122 + C32830 * C129) *
                    C118 +
                (C2662 * C131 + C2656 * C140 + C2663 * C132 + C2657 * C141 +
                 C2664 * C133 + C2658 * C142 + C2665 * C134 + C32830 * C143) *
                    C32542) *
                   C32796 +
               ((C2662 * C322 + C2656 * C337 + C2663 * C321 + C2657 * C336 +
                 C2664 * C320 + C2658 * C335 + C2665 * C319 + C32830 * C334) *
                    C118 +
                (C2662 * C332 + C2656 * C352 + C2663 * C331 + C2657 * C351 +
                 C2664 * C330 + C2658 * C350 + C2665 * C329 + C32830 * C349) *
                    C32542) *
                   C32641) *
                  C32513 * C209 -
              (((C3343 + C3344 + C3345 + C3346) * C32542 +
                (C3347 + C3348 + C3349 + C3350) * C118) *
                   C32641 +
               ((C2806 + C2805 + C2804 + C2803) * C32542 +
                (C2802 + C2801 + C2800 + C2799) * C118) *
                   C32796) *
                  C32513 * C210 +
              (((C2814 + C2813 + C2812 + C2811) * C118 +
                (C2810 + C2809 + C2808 + C2807) * C32542) *
                   C32796 +
               ((C2662 * C1064 + C2656 * C1076 + C2663 * C1063 + C2657 * C1075 +
                 C2664 * C1062 + C2658 * C1074 + C2665 * C1430 +
                 C32830 * C1431) *
                    C118 +
                (C2662 * C1073 + C2656 * C1091 + C2663 * C1072 + C2657 * C1090 +
                 C2664 * C1071 + C2658 * C1089 + C2665 * C1432 +
                 C32830 * C1433) *
                    C32542) *
                   C32641) *
                  C32513 * C211) *
             C32487) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2662 * C119 + C2656 * C126 + C2663 * C120 + C2657 * C127 +
             C2664 * C121 + C2658 * C128 + C2665 * C122 + C32830 * C129) *
                C118 +
            (C2662 * C131 + C2656 * C140 + C2663 * C132 + C2657 * C141 +
             C2664 * C133 + C2658 * C142 + C2665 * C134 + C32830 * C143) *
                C32542) *
               C32796 +
           ((C3679 + C3680 + C3681 + C3682) * C118 +
            (C3683 + C3684 + C3685 + C3686) * C32542) *
               C32641) *
              C315 -
          (((C3687 + C3688 + C3689 + C3690) * C32542 +
            (C3691 + C3692 + C3693 + C3694) * C118) *
               C32641 +
           ((C3686 + C3685 + C3684 + C3683) * C32542 +
            (C3682 + C3681 + C3680 + C3679) * C118) *
               C32796) *
              C316 +
          (((C3694 + C3693 + C3692 + C3691) * C118 +
            (C3690 + C3689 + C3688 + C3687) * C32542) *
               C32796 +
           ((C2662 * C1963 + C2656 * C1972 + C2663 * C1962 + C2657 * C1971 +
             C2664 * C1961 + C2658 * C1970 + C2665 * C2342 + C32830 * C2343) *
                C118 +
            (C2662 * C1969 + C2656 * C1981 + C2663 * C1968 + C2657 * C1980 +
             C2664 * C1967 + C2658 * C1979 + C2665 * C2344 + C32830 * C2345) *
                C32542) *
               C32641) *
              C317) *
         C32499 * C32487) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C31557 * C119 + C32776 * C126 + C31538 * C120 + C32460 * C127) *
                C5273 +
            (C31557 * C131 + C32776 * C140 + C31538 * C132 + C32460 * C141) *
                C5267 +
            (C7782 + C7783) * C5274 + (C7784 + C7785) * C5268 + C7798 * C5275 +
            C7799 * C32826) *
               C32796 +
           ((C31557 * C322 + C32776 * C337 + C31538 * C321 + C32460 * C336) *
                C5273 +
            (C31557 * C332 + C32776 * C352 + C31538 * C331 + C32460 * C351) *
                C5267 +
            (C8361 + C8360) * C5274 + (C8359 + C8358) * C5268 +
            (C8357 + C8356) * C5275 + (C8355 + C8354) * C32826) *
               C32641) *
              C32513 * C32499 * C110 -
          (((C31538 * C1071 + C32460 * C1089 + C31557 * C1072 +
             C32776 * C1090) *
                C32826 +
            (C31538 * C1062 + C32460 * C1074 + C31557 * C1063 +
             C32776 * C1075) *
                C5275 +
            (C31538 * C630 + C32460 * C635 + C31557 * C629 + C32776 * C634) *
                C5268 +
            (C31538 * C620 + C32460 * C625 + C31557 * C619 + C32776 * C624) *
                C5274 +
            (C31538 * C330 + C32460 * C350 + C31557 * C331 + C32776 * C351) *
                C5267 +
            (C31538 * C320 + C32460 * C335 + C31557 * C321 + C32776 * C336) *
                C5273) *
               C32641 +
           ((C8061 + C8060) * C32826 + (C8059 + C8058) * C5275 +
            (C8057 + C8056) * C5268 + (C8055 + C8054) * C5274 +
            (C31538 * C133 + C32460 * C142 + C31557 * C132 + C32776 * C141) *
                C5267 +
            (C31538 * C121 + C32460 * C128 + C31557 * C120 + C32776 * C127) *
                C5273) *
               C32796) *
              C32513 * C32499 * C111 +
          (((C31557 * C121 + C32776 * C128 + C31538 * C122 + C32460 * C129) *
                C5273 +
            (C31557 * C133 + C32776 * C142 + C31538 * C134 + C32460 * C143) *
                C5267 +
            (C31557 * C215 + C32776 * C230 + C31538 * C214 + C32460 * C229) *
                C5274 +
            (C31557 * C225 + C32776 * C245 + C31538 * C224 + C32460 * C244) *
                C5268 +
            (C31557 * C220 + C32776 * C235 + C31538 * C221 + C32460 * C236) *
                C5275 +
            (C31557 * C240 + C32776 * C250 + C31538 * C241 + C32460 * C251) *
                C32826) *
               C32796 +
           ((C31557 * C320 + C32776 * C335 + C31538 * C319 + C32460 * C334) *
                C5273 +
            (C31557 * C330 + C32776 * C350 + C31538 * C329 + C32460 * C349) *
                C5267 +
            (C31557 * C620 + C32776 * C625 + C31538 * C621 + C32460 * C626) *
                C5274 +
            (C31557 * C630 + C32776 * C635 + C31538 * C631 + C32460 * C636) *
                C5268 +
            (C31557 * C1062 + C32776 * C1074 + C31538 * C1430 +
             C32460 * C1431) *
                C5275 +
            (C31557 * C1071 + C32776 * C1089 + C31538 * C1432 +
             C32460 * C1433) *
                C32826) *
               C32641) *
              C32513 * C32499 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C31557 * C119 + C32776 * C126 + C31538 * C120 + C32460 * C127) *
                C5273 +
            (C31557 * C131 + C32776 * C140 + C31538 * C132 + C32460 * C141) *
                C5267 +
            (C7782 + C7783) * C5274 + (C7784 + C7785) * C5268 + C7798 * C5275 +
            C7799 * C32826) *
               C32796 +
           ((C31557 * C322 + C32776 * C337 + C31538 * C321 + C32460 * C336) *
                C5273 +
            (C31557 * C332 + C32776 * C352 + C31538 * C331 + C32460 * C351) *
                C5267 +
            (C8361 + C8360) * C5274 + (C8359 + C8358) * C5268 + C8654 * C5275 +
            C8655 * C32826) *
               C32641) *
              C32513 * C209 -
          (((C8350 + C8351) * C32826 + (C8352 + C8353) * C5275 +
            (C8354 + C8355) * C5268 + (C8356 + C8357) * C5274 +
            (C8358 + C8359) * C5267 + (C8360 + C8361) * C5273) *
               C32641 +
           ((C7793 + C7792) * C32826 + (C7791 + C7790) * C5275 +
            (C7789 + C7788) * C5268 + (C7787 + C7786) * C5274 +
            (C7785 + C7784) * C5267 + (C7783 + C7782) * C5273) *
               C32796) *
              C32513 * C210 +
          ((C7798 * C5273 + C7799 * C5267 + C7800 * C5274 + C7801 * C5268 +
            (C7797 + C7796) * C5275 + (C7795 + C7794) * C32826) *
               C32796 +
           (C8654 * C5273 + C8655 * C5267 + (C8353 + C8352) * C5274 +
            (C8351 + C8350) * C5268 +
            (C31557 * C6300 + C32776 * C6304 + C31538 * C6504 +
             C32460 * C6505) *
                C5275 +
            (C31557 * C6303 + C32776 * C6309 + C31538 * C6506 +
             C32460 * C6507) *
                C32826) *
               C32641) *
              C32513 * C211) *
         C32487) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C31557 * C119 + C32776 * C126 + C31538 * C120 + C32460 * C127) *
                C5273 +
            (C31557 * C131 + C32776 * C140 + C31538 * C132 + C32460 * C141) *
                C5267 +
            (C7782 + C7783) * C5274 + (C7784 + C7785) * C5268 + C7798 * C5275 +
            C7799 * C32826) *
               C32796 +
           ((C8834 + C8835) * C5273 + (C8836 + C8837) * C5267 +
            (C8361 + C8360) * C5274 + (C8359 + C8358) * C5268 + C8654 * C5275 +
            C8655 * C32826) *
               C32641) *
              C315 -
          (((C8838 + C8839) * C32826 + (C8840 + C8841) * C5275 +
            (C8842 + C8843) * C5268 + (C8844 + C8845) * C5274 +
            (C8846 + C8847) * C5267 + (C8848 + C8849) * C5273) *
               C32641 +
           ((C8354 + C8355) * C32826 + (C8356 + C8357) * C5275 +
            (C8358 + C8359) * C5268 + (C8360 + C8361) * C5274 +
            (C8837 + C8836) * C5267 + (C8835 + C8834) * C5273) *
               C32796) *
              C316 +
          (((C8849 + C8848) * C5273 + (C8847 + C8846) * C5267 +
            (C8845 + C8844) * C5274 + (C8843 + C8842) * C5268 +
            (C8841 + C8840) * C5275 + (C8839 + C8838) * C32826) *
               C32796 +
           ((C31557 * C1963 + C32776 * C1972 + C31538 * C1962 +
             C32460 * C1971) *
                C5273 +
            (C31557 * C1969 + C32776 * C1981 + C31538 * C1968 +
             C32460 * C1980) *
                C5267 +
            (C31557 * C2528 + C32776 * C2531 + C31538 * C2529 +
             C32460 * C2532) *
                C5274 +
            (C31557 * C2534 + C32776 * C2537 + C31538 * C2535 +
             C32460 * C2538) *
                C5268 +
            (C31557 * C6966 + C32776 * C6970 + C31538 * C7351 +
             C32460 * C7352) *
                C5275 +
            (C31557 * C6969 + C32776 * C6975 + C31538 * C7353 +
             C32460 * C7354) *
                C32826) *
               C32641) *
              C317) *
         C32499 * C32487) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C31557 * C119 + C32776 * C126 + C31538 * C120 + C32460 * C127) *
                C118 +
            (C31557 * C131 + C32776 * C140 + C31538 * C132 + C32460 * C141) *
                C32542) *
               C13591 +
           ((C8834 + C8835) * C118 + (C8836 + C8837) * C32542) * C13592 +
           (C12851 * C118 + C12852 * C32542) * C13593 +
           ((C12882 + C12881) * C118 + (C12880 + C12879) * C32542) * C32842) *
              C32513 * C32499 * C110 -
          (((C31538 * C1967 + C32460 * C1979 + C31557 * C1968 +
             C32776 * C1980) *
                C32542 +
            (C31538 * C1961 + C32460 * C1970 + C31557 * C1962 +
             C32776 * C1971) *
                C118) *
               C32842 +
           ((C13297 + C13296) * C32542 + (C13295 + C13294) * C118) * C13593 +
           ((C9273 + C9272) * C32542 + (C9271 + C9270) * C118) * C13592 +
           ((C31538 * C133 + C32460 * C142 + C31557 * C132 + C32776 * C141) *
                C32542 +
            (C31538 * C121 + C32460 * C128 + C31557 * C120 + C32776 * C127) *
                C118) *
               C13591) *
              C32513 * C32499 * C111 +
          (((C31557 * C121 + C32776 * C128 + C31538 * C122 + C32460 * C129) *
                C118 +
            (C31557 * C133 + C32776 * C142 + C31538 * C134 + C32460 * C143) *
                C32542) *
               C13591 +
           ((C31557 * C320 + C32776 * C335 + C31538 * C319 + C32460 * C334) *
                C118 +
            (C31557 * C330 + C32776 * C350 + C31538 * C329 + C32460 * C349) *
                C32542) *
               C13592 +
           ((C31557 * C325 + C32776 * C340 + C31538 * C326 + C32460 * C341) *
                C118 +
            (C31557 * C345 + C32776 * C355 + C31538 * C346 + C32460 * C356) *
                C32542) *
               C13593 +
           ((C31557 * C1961 + C32776 * C1970 + C31538 * C2342 +
             C32460 * C2343) *
                C118 +
            (C31557 * C1967 + C32776 * C1979 + C31538 * C2344 +
             C32460 * C2345) *
                C32542) *
               C32842) *
              C32513 * C32499 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C31557 * C119 + C32776 * C126 + C31538 * C120 + C32460 * C127) *
                C118 +
            (C31557 * C131 + C32776 * C140 + C31538 * C132 + C32460 * C141) *
                C32542) *
               C13591 +
           ((C8834 + C8835) * C118 + (C8836 + C8837) * C32542) * C13592 +
           (C12851 * C118 + C12852 * C32542) * C13593 +
           ((C12882 + C12881) * C118 + (C12880 + C12879) * C32542) * C32842) *
              C32513 * C209 -
          (((C12875 + C12876) * C32542 + (C12877 + C12878) * C118) * C32842 +
           (C13492 * C32542 + C13493 * C118) * C13593 +
           (C9472 * C32542 + C9473 * C118) * C13592 +
           ((C7785 + C7784) * C32542 + (C7783 + C7782) * C118) * C13591) *
              C32513 * C210 +
          ((C7798 * C118 + C7799 * C32542) * C13591 +
           (C8654 * C118 + C8655 * C32542) * C13592 +
           ((C8841 + C8840) * C118 + (C8839 + C8838) * C32542) * C13593 +
           ((C31557 * C6966 + C32776 * C6970 + C31538 * C7351 +
             C32460 * C7352) *
                C118 +
            (C31557 * C6969 + C32776 * C6975 + C31538 * C7353 +
             C32460 * C7354) *
                C32542) *
               C32842) *
              C32513 * C211) *
         C32487) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C31557 * C119 + C32776 * C126 + C31538 * C120 + C32460 * C127) *
                C118 +
            (C31557 * C131 + C32776 * C140 + C31538 * C132 + C32460 * C141) *
                C32542) *
               C13591 +
           ((C8834 + C8835) * C118 + (C8836 + C8837) * C32542) * C13592 +
           C13804 * C13593 + C13811 * C32842) *
              C315 -
          (((C13807 + C13808) * C32542 + (C13809 + C13810) * C118) * C32842 +
           ((C12879 + C12880) * C32542 + (C12881 + C12882) * C118) * C13593 +
           ((C8846 + C8847) * C32542 + (C8848 + C8849) * C118) * C13592 +
           ((C8837 + C8836) * C32542 + (C8835 + C8834) * C118) * C13591) *
              C316 +
          (C13804 * C13591 + C13811 * C13592 +
           ((C13810 + C13809) * C118 + (C13808 + C13807) * C32542) * C13593 +
           ((C31557 * C12087 + C32776 * C12090 + C31538 * C12288 +
             C32460 * C12289) *
                C118 +
            (C31557 * C12089 + C32776 * C12093 + C31538 * C12290 +
             C32460 * C12291) *
                C32542) *
               C32842) *
              C317) *
         C32499 * C32487) /
            (p * q * std::sqrt(p + q));
    d2ee[68] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31557 * C119 + C32776 * C126 + C31538 * C120 + C32460 * C127) *
                 C5273 +
             (C31557 * C131 + C32776 * C140 + C31538 * C132 + C32460 * C141) *
                 C5267 +
             (C7782 + C7783) * C5274 + (C7784 + C7785) * C5268 + C7798 * C5275 +
             C7799 * C32826) *
                C32796 +
            ((C8834 + C8835) * C5273 + (C8836 + C8837) * C5267 +
             (C8361 + C8360) * C5274 + (C8359 + C8358) * C5268 + C8654 * C5275 +
             C8655 * C32826) *
                C32641) *
               C530 -
           (((C8838 + C8839) * C32826 + (C8840 + C8841) * C5275 +
             (C8842 + C8843) * C5268 + (C8844 + C8845) * C5274 +
             (C8846 + C8847) * C5267 + (C8848 + C8849) * C5273) *
                C32641 +
            ((C8354 + C8355) * C32826 + (C8356 + C8357) * C5275 +
             (C8358 + C8359) * C5268 + (C8360 + C8361) * C5274 +
             (C8837 + C8836) * C5267 + (C8835 + C8834) * C5273) *
                C32796) *
               C531) *
              C32499 * C442 +
          ((((C9270 + C9271) * C5273 + (C9272 + C9273) * C5267 +
             (C9060 + C9061) * C5274 + (C9062 + C9063) * C5268 +
             (C9064 + C9065) * C5275 + (C9066 + C9067) * C32826) *
                C32796 +
            ((C31557 * C324 + C32776 * C339 + C31538 * C325 + C32460 * C340) *
                 C5273 +
             (C31557 * C344 + C32776 * C354 + C31538 * C345 + C32460 * C355) *
                 C5267 +
             (C31557 * C1066 + C32776 * C1078 + C31538 * C1067 +
              C32460 * C1079) *
                 C5274 +
             (C31557 * C1081 + C32776 * C1093 + C31538 * C1082 +
              C32460 * C1094) *
                 C5268 +
             (C31557 * C1069 + C32776 * C1084 + C31538 * C1070 +
              C32460 * C1085) *
                 C5275 +
             (C31557 * C1087 + C32776 * C1096 + C31538 * C1088 +
              C32460 * C1097) *
                 C32826) *
                C32641) *
               C531 -
           (((C9067 + C9066) * C32826 + (C9065 + C9064) * C5275 +
             (C9063 + C9062) * C5268 + (C9061 + C9060) * C5274 +
             (C9273 + C9272) * C5267 + (C9271 + C9270) * C5273) *
                C32641 +
            ((C8061 + C8060) * C32826 + (C8059 + C8058) * C5275 +
             (C8057 + C8056) * C5268 + (C8055 + C8054) * C5274 +
             (C31538 * C133 + C32460 * C142 + C31557 * C132 + C32776 * C141) *
                 C5267 +
             (C31538 * C121 + C32460 * C128 + C31557 * C120 + C32776 * C127) *
                 C5273) *
                C32796) *
               C530) *
              C32499 * C443)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2662 * C119 + C2656 * C126 + C2663 * C120 + C2657 * C127 +
              C2664 * C121 + C2658 * C128 + C2665 * C122 + C32830 * C129) *
                 C118 +
             (C2662 * C131 + C2656 * C140 + C2663 * C132 + C2657 * C141 +
              C2664 * C133 + C2658 * C142 + C2665 * C134 + C32830 * C143) *
                 C32542) *
                C32796 +
            ((C3679 + C3680 + C3681 + C3682) * C118 +
             (C3683 + C3684 + C3685 + C3686) * C32542) *
                C32641) *
               C530 -
           (((C3687 + C3688 + C3689 + C3690) * C32542 +
             (C3691 + C3692 + C3693 + C3694) * C118) *
                C32641 +
            ((C3686 + C3685 + C3684 + C3683) * C32542 +
             (C3682 + C3681 + C3680 + C3679) * C118) *
                C32796) *
               C531) *
              C32499 * C442 +
          ((((C3971 + C3972 + C3973 + C3974) * C118 +
             (C3975 + C3976 + C3977 + C3978) * C32542) *
                C32796 +
            ((C2662 * C324 + C2656 * C339 + C2663 * C325 + C2657 * C340 +
              C2664 * C326 + C2658 * C341 + C2665 * C327 + C32830 * C342) *
                 C118 +
             (C2662 * C344 + C2656 * C354 + C2663 * C345 + C2657 * C355 +
              C2664 * C346 + C2658 * C356 + C2665 * C347 + C32830 * C357) *
                 C32542) *
                C32641) *
               C531 -
           (((C3978 + C3977 + C3976 + C3975) * C32542 +
             (C3974 + C3973 + C3972 + C3971) * C118) *
                C32641 +
            ((C2665 * C135 + C32830 * C144 + C2664 * C134 + C2658 * C143 +
              C2663 * C133 + C2657 * C142 + C2662 * C132 + C2656 * C141) *
                 C32542 +
             (C2665 * C123 + C32830 * C130 + C2664 * C122 + C2658 * C129 +
              C2663 * C121 + C2657 * C128 + C2662 * C120 + C2656 * C127) *
                 C118) *
                C32796) *
               C530) *
              C32499 * C443)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C31557 * C119 + C32776 * C126 + C31538 * C120 + C32460 * C127) *
                 C118 +
             (C31557 * C131 + C32776 * C140 + C31538 * C132 + C32460 * C141) *
                 C32542) *
                C13591 +
            ((C8834 + C8835) * C118 + (C8836 + C8837) * C32542) * C13592 +
            C13804 * C13593 + C13811 * C32842) *
               C530 -
           (((C13807 + C13808) * C32542 + (C13809 + C13810) * C118) * C32842 +
            ((C12879 + C12880) * C32542 + (C12881 + C12882) * C118) * C13593 +
            ((C8846 + C8847) * C32542 + (C8848 + C8849) * C118) * C13592 +
            ((C8837 + C8836) * C32542 + (C8835 + C8834) * C118) * C13591) *
               C531) *
              C32499 * C442 +
          ((((C9270 + C9271) * C118 + (C9272 + C9273) * C32542) * C13591 +
            ((C13294 + C13295) * C118 + (C13296 + C13297) * C32542) * C13592 +
            ((C14080 + C14081) * C118 + (C14082 + C14083) * C32542) * C13593 +
            ((C31557 * C1965 + C32776 * C1974 + C31538 * C1966 +
              C32460 * C1975) *
                 C118 +
             (C31557 * C1977 + C32776 * C1983 + C31538 * C1978 +
              C32460 * C1984) *
                 C32542) *
                C32842) *
               C531 -
           (((C14083 + C14082) * C32542 + (C14081 + C14080) * C118) * C32842 +
            ((C13297 + C13296) * C32542 + (C13295 + C13294) * C118) * C13593 +
            ((C9273 + C9272) * C32542 + (C9271 + C9270) * C118) * C13592 +
            ((C31538 * C133 + C32460 * C142 + C31557 * C132 + C32776 * C141) *
                 C32542 +
             (C31538 * C121 + C32460 * C128 + C31557 * C120 + C32776 * C127) *
                 C118) *
                C13591) *
               C530) *
              C32499 * C443)) /
            (p * q * std::sqrt(p + q));
    d2ee[69] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C2662 * C119 + C2656 * C126 + C2663 * C120 + C2657 * C127 +
             C2664 * C121 + C2658 * C128 + C2665 * C122 + C32830 * C129) *
                C118 +
            (C2662 * C131 + C2656 * C140 + C2663 * C132 + C2657 * C141 +
             C2664 * C133 + C2658 * C142 + C2665 * C134 + C32830 * C143) *
                C32542) *
               C32796 +
           ((C2662 * C322 + C2656 * C337 + C2663 * C321 + C2657 * C336 +
             C2664 * C320 + C2658 * C335 + C2665 * C319 + C32830 * C334) *
                C118 +
            (C2662 * C332 + C2656 * C352 + C2663 * C331 + C2657 * C351 +
             C2664 * C330 + C2658 * C350 + C2665 * C329 + C32830 * C349) *
                C32542) *
               C32641) *
              C32513 * C209 -
          (((C3343 + C3344 + C3345 + C3346) * C32542 +
            (C3347 + C3348 + C3349 + C3350) * C118) *
               C32641 +
           ((C2806 + C2805 + C2804 + C2803) * C32542 +
            (C2802 + C2801 + C2800 + C2799) * C118) *
               C32796) *
              C32513 * C210 +
          (((C2814 + C2813 + C2812 + C2811) * C118 +
            (C2810 + C2809 + C2808 + C2807) * C32542) *
               C32796 +
           ((C2662 * C1064 + C2656 * C1076 + C2663 * C1063 + C2657 * C1075 +
             C2664 * C1062 + C2658 * C1074 + C2665 * C1430 + C32830 * C1431) *
                C118 +
            (C2662 * C1073 + C2656 * C1091 + C2663 * C1072 + C2657 * C1090 +
             C2664 * C1071 + C2658 * C1089 + C2665 * C1432 + C32830 * C1433) *
                C32542) *
               C32641) *
              C32513 * C211) *
         C32487) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C2662 * C119 + C2656 * C126 + C2663 * C120 + C2657 * C127 +
             C2664 * C121 + C2658 * C128 + C2665 * C122 + C32830 * C129) *
                C118 +
            (C2662 * C131 + C2656 * C140 + C2663 * C132 + C2657 * C141 +
             C2664 * C133 + C2658 * C142 + C2665 * C134 + C32830 * C143) *
                C32542) *
               C32796 +
           ((C2662 * C322 + C2656 * C337 + C2663 * C321 + C2657 * C336 +
             C2664 * C320 + C2658 * C335 + C2665 * C319 + C32830 * C334) *
                C118 +
            (C2662 * C332 + C2656 * C352 + C2663 * C331 + C2657 * C351 +
             C2664 * C330 + C2658 * C350 + C2665 * C329 + C32830 * C349) *
                C32542) *
               C32641) *
              C32513 * C32499 * C110 -
          (((C2665 * C328 + C32830 * C348 + C2664 * C329 + C2658 * C349 +
             C2663 * C330 + C2657 * C350 + C2662 * C331 + C2656 * C351) *
                C32542 +
            (C2665 * C318 + C32830 * C333 + C2664 * C319 + C2658 * C334 +
             C2663 * C320 + C2657 * C335 + C2662 * C321 + C2656 * C336) *
                C118) *
               C32641 +
           ((C2665 * C135 + C32830 * C144 + C2664 * C134 + C2658 * C143 +
             C2663 * C133 + C2657 * C142 + C2662 * C132 + C2656 * C141) *
                C32542 +
            (C2665 * C123 + C32830 * C130 + C2664 * C122 + C2658 * C129 +
             C2663 * C121 + C2657 * C128 + C2662 * C120 + C2656 * C127) *
                C118) *
               C32796) *
              C32513 * C32499 * C111 +
          (((C2662 * C121 + C2656 * C128 + C2663 * C122 + C2657 * C129 +
             C2664 * C123 + C2658 * C130 + C2665 * C124 + C32830 * C137) *
                C118 +
            (C2662 * C133 + C2656 * C142 + C2663 * C134 + C2657 * C143 +
             C2664 * C135 + C2658 * C144 + C2665 * C136 + C32830 * C145) *
                C32542) *
               C32796 +
           ((C2662 * C320 + C2656 * C335 + C2663 * C319 + C2657 * C334 +
             C2664 * C318 + C2658 * C333 + C2665 * C532 + C32830 * C533) *
                C118 +
            (C2662 * C330 + C2656 * C350 + C2663 * C329 + C2657 * C349 +
             C2664 * C328 + C2658 * C348 + C2665 * C534 + C32830 * C535) *
                C32542) *
               C32641) *
              C32513 * C32499 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C31557 * C119 + C32776 * C126 + C31538 * C120 + C32460 * C127) *
                C5273 +
            (C31557 * C131 + C32776 * C140 + C31538 * C132 + C32460 * C141) *
                C5267 +
            (C7782 + C7783) * C5274 + (C7784 + C7785) * C5268 + C7798 * C5275 +
            C7799 * C32826) *
               C32796 +
           ((C31557 * C322 + C32776 * C337 + C31538 * C321 + C32460 * C336) *
                C5273 +
            (C31557 * C332 + C32776 * C352 + C31538 * C331 + C32460 * C351) *
                C5267 +
            (C8361 + C8360) * C5274 + (C8359 + C8358) * C5268 +
            (C8357 + C8356) * C5275 + (C8355 + C8354) * C32826) *
               C32641) *
              C32513 * C32499 * C110 -
          (((C31538 * C1071 + C32460 * C1089 + C31557 * C1072 +
             C32776 * C1090) *
                C32826 +
            (C31538 * C1062 + C32460 * C1074 + C31557 * C1063 +
             C32776 * C1075) *
                C5275 +
            (C31538 * C630 + C32460 * C635 + C31557 * C629 + C32776 * C634) *
                C5268 +
            (C31538 * C620 + C32460 * C625 + C31557 * C619 + C32776 * C624) *
                C5274 +
            (C31538 * C330 + C32460 * C350 + C31557 * C331 + C32776 * C351) *
                C5267 +
            (C31538 * C320 + C32460 * C335 + C31557 * C321 + C32776 * C336) *
                C5273) *
               C32641 +
           ((C8061 + C8060) * C32826 + (C8059 + C8058) * C5275 +
            (C8057 + C8056) * C5268 + (C8055 + C8054) * C5274 +
            (C31538 * C133 + C32460 * C142 + C31557 * C132 + C32776 * C141) *
                C5267 +
            (C31538 * C121 + C32460 * C128 + C31557 * C120 + C32776 * C127) *
                C5273) *
               C32796) *
              C32513 * C32499 * C111 +
          (((C31557 * C121 + C32776 * C128 + C31538 * C122 + C32460 * C129) *
                C5273 +
            (C31557 * C133 + C32776 * C142 + C31538 * C134 + C32460 * C143) *
                C5267 +
            (C31557 * C215 + C32776 * C230 + C31538 * C214 + C32460 * C229) *
                C5274 +
            (C31557 * C225 + C32776 * C245 + C31538 * C224 + C32460 * C244) *
                C5268 +
            (C31557 * C220 + C32776 * C235 + C31538 * C221 + C32460 * C236) *
                C5275 +
            (C31557 * C240 + C32776 * C250 + C31538 * C241 + C32460 * C251) *
                C32826) *
               C32796 +
           ((C31557 * C320 + C32776 * C335 + C31538 * C319 + C32460 * C334) *
                C5273 +
            (C31557 * C330 + C32776 * C350 + C31538 * C329 + C32460 * C349) *
                C5267 +
            (C31557 * C620 + C32776 * C625 + C31538 * C621 + C32460 * C626) *
                C5274 +
            (C31557 * C630 + C32776 * C635 + C31538 * C631 + C32460 * C636) *
                C5268 +
            (C31557 * C1062 + C32776 * C1074 + C31538 * C1430 +
             C32460 * C1431) *
                C5275 +
            (C31557 * C1071 + C32776 * C1089 + C31538 * C1432 +
             C32460 * C1433) *
                C32826) *
               C32641) *
              C32513 * C32499 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C31557 * C119 + C32776 * C126 + C31538 * C120 + C32460 * C127) *
                C5273 +
            (C31557 * C131 + C32776 * C140 + C31538 * C132 + C32460 * C141) *
                C5267 +
            (C7782 + C7783) * C5274 + (C7784 + C7785) * C5268 + C7798 * C5275 +
            C7799 * C32826) *
               C32796 +
           ((C31557 * C322 + C32776 * C337 + C31538 * C321 + C32460 * C336) *
                C5273 +
            (C31557 * C332 + C32776 * C352 + C31538 * C331 + C32460 * C351) *
                C5267 +
            (C8361 + C8360) * C5274 + (C8359 + C8358) * C5268 + C8654 * C5275 +
            C8655 * C32826) *
               C32641) *
              C32513 * C209 -
          (((C8350 + C8351) * C32826 + (C8352 + C8353) * C5275 +
            (C8354 + C8355) * C5268 + (C8356 + C8357) * C5274 +
            (C8358 + C8359) * C5267 + (C8360 + C8361) * C5273) *
               C32641 +
           ((C7793 + C7792) * C32826 + (C7791 + C7790) * C5275 +
            (C7789 + C7788) * C5268 + (C7787 + C7786) * C5274 +
            (C7785 + C7784) * C5267 + (C7783 + C7782) * C5273) *
               C32796) *
              C32513 * C210 +
          ((C7798 * C5273 + C7799 * C5267 + C7800 * C5274 + C7801 * C5268 +
            (C7797 + C7796) * C5275 + (C7795 + C7794) * C32826) *
               C32796 +
           (C8654 * C5273 + C8655 * C5267 + (C8353 + C8352) * C5274 +
            (C8351 + C8350) * C5268 +
            (C31557 * C6300 + C32776 * C6304 + C31538 * C6504 +
             C32460 * C6505) *
                C5275 +
            (C31557 * C6303 + C32776 * C6309 + C31538 * C6506 +
             C32460 * C6507) *
                C32826) *
               C32641) *
              C32513 * C211) *
         C32487) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C31557 * C119 + C32776 * C126 + C31538 * C120 + C32460 * C127) *
                C118 +
            (C31557 * C131 + C32776 * C140 + C31538 * C132 + C32460 * C141) *
                C32542) *
               C13591 +
           ((C8834 + C8835) * C118 + (C8836 + C8837) * C32542) * C13592 +
           (C12851 * C118 + C12852 * C32542) * C13593 +
           ((C12882 + C12881) * C118 + (C12880 + C12879) * C32542) * C32842) *
              C32513 * C32499 * C110 -
          (((C31538 * C1967 + C32460 * C1979 + C31557 * C1968 +
             C32776 * C1980) *
                C32542 +
            (C31538 * C1961 + C32460 * C1970 + C31557 * C1962 +
             C32776 * C1971) *
                C118) *
               C32842 +
           ((C13297 + C13296) * C32542 + (C13295 + C13294) * C118) * C13593 +
           ((C9273 + C9272) * C32542 + (C9271 + C9270) * C118) * C13592 +
           ((C31538 * C133 + C32460 * C142 + C31557 * C132 + C32776 * C141) *
                C32542 +
            (C31538 * C121 + C32460 * C128 + C31557 * C120 + C32776 * C127) *
                C118) *
               C13591) *
              C32513 * C32499 * C111 +
          (((C31557 * C121 + C32776 * C128 + C31538 * C122 + C32460 * C129) *
                C118 +
            (C31557 * C133 + C32776 * C142 + C31538 * C134 + C32460 * C143) *
                C32542) *
               C13591 +
           ((C31557 * C320 + C32776 * C335 + C31538 * C319 + C32460 * C334) *
                C118 +
            (C31557 * C330 + C32776 * C350 + C31538 * C329 + C32460 * C349) *
                C32542) *
               C13592 +
           ((C31557 * C325 + C32776 * C340 + C31538 * C326 + C32460 * C341) *
                C118 +
            (C31557 * C345 + C32776 * C355 + C31538 * C346 + C32460 * C356) *
                C32542) *
               C13593 +
           ((C31557 * C1961 + C32776 * C1970 + C31538 * C2342 +
             C32460 * C2343) *
                C118 +
            (C31557 * C1967 + C32776 * C1979 + C31538 * C2344 +
             C32460 * C2345) *
                C32542) *
               C32842) *
              C32513 * C32499 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C31557 * C119 + C32776 * C126 + C31538 * C120 + C32460 * C127) *
                C118 +
            (C31557 * C131 + C32776 * C140 + C31538 * C132 + C32460 * C141) *
                C32542) *
               C13591 +
           ((C8834 + C8835) * C118 + (C8836 + C8837) * C32542) * C13592 +
           (C12851 * C118 + C12852 * C32542) * C13593 +
           ((C12882 + C12881) * C118 + (C12880 + C12879) * C32542) * C32842) *
              C32513 * C209 -
          (((C12875 + C12876) * C32542 + (C12877 + C12878) * C118) * C32842 +
           (C13492 * C32542 + C13493 * C118) * C13593 +
           (C9472 * C32542 + C9473 * C118) * C13592 +
           ((C7785 + C7784) * C32542 + (C7783 + C7782) * C118) * C13591) *
              C32513 * C210 +
          ((C7798 * C118 + C7799 * C32542) * C13591 +
           (C8654 * C118 + C8655 * C32542) * C13592 +
           ((C8841 + C8840) * C118 + (C8839 + C8838) * C32542) * C13593 +
           ((C31557 * C6966 + C32776 * C6970 + C31538 * C7351 +
             C32460 * C7352) *
                C118 +
            (C31557 * C6969 + C32776 * C6975 + C31538 * C7353 +
             C32460 * C7354) *
                C32542) *
               C32842) *
              C32513 * C211) *
         C32487) /
            (p * q * std::sqrt(p + q));
    d2ee[70] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C754 * C119 + C748 * C126 + C755 * C120 + C749 * C127 +
             C756 * C121 + C32815 * C128) *
                C757 +
            (C754 * C131 + C748 * C140 + C755 * C132 + C749 * C141 +
             C756 * C133 + C32815 * C142) *
                C32861 +
            (C931 + C932 + C933) * C758 + (C934 + C935 + C936) * C32849 +
            C951 * C759 + C952 * C32826) *
               C32554 * C32513 * C440 -
           ((C943 + C944 + C945) * C32826 + (C946 + C947 + C948) * C759 +
            (C942 + C941 + C940) * C32849 + (C939 + C938 + C937) * C758 +
            (C936 + C935 + C934) * C32861 + (C933 + C932 + C931) * C757) *
               C32554 * C32513 * C441) *
              C442 +
          (((C1273 + C1274 + C1275) * C757 + (C1276 + C1277 + C1278) * C32861 +
            (C1279 + C1280 + C1281) * C758 + (C1282 + C1283 + C1284) * C32849 +
            (C754 * C871 + C748 * C880 + C755 * C870 + C749 * C879 +
             C756 * C1244 + C32815 * C1245) *
                C759 +
            (C754 * C877 + C748 * C889 + C755 * C876 + C749 * C888 +
             C756 * C1246 + C32815 * C1247) *
                C32826) *
               C32554 * C32513 * C441 -
           ((C1284 + C1283 + C1282) * C32826 + (C1281 + C1280 + C1279) * C759 +
            (C1278 + C1277 + C1276) * C32849 + (C1275 + C1274 + C1273) * C758 +
            (C756 * C134 + C32815 * C143 + C755 * C133 + C749 * C142 +
             C754 * C132 + C748 * C141) *
                C32861 +
            (C756 * C122 + C32815 * C129 + C755 * C121 + C749 * C128 +
             C754 * C120 + C748 * C127) *
                C757) *
               C32554 * C32513 * C440) *
              C443)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C127 +
             C115 * C121 + C103 * C128 + C116 * C122 + C104 * C129 +
             C117 * C123 + C105 * C130) *
                C118 +
            (C113 * C131 + C101 * C140 + C114 * C132 + C102 * C141 +
             C115 * C133 + C103 * C142 + C116 * C134 + C104 * C143 +
             C117 * C135 + C105 * C144) *
                C32542) *
               C32554 * C32513 * C440 -
           ((C117 * C223 + C105 * C243 + C116 * C224 + C104 * C244 +
             C115 * C225 + C103 * C245 + C114 * C226 + C102 * C246 +
             C113 * C227 + C101 * C247) *
                C32542 +
            (C117 * C213 + C105 * C228 + C116 * C214 + C104 * C229 +
             C115 * C215 + C103 * C230 + C114 * C216 + C102 * C231 +
             C113 * C217 + C101 * C232) *
                C118) *
               C32554 * C32513 * C441) *
              C442 +
          (((C113 * C216 + C101 * C231 + C114 * C215 + C102 * C230 +
             C115 * C214 + C103 * C229 + C116 * C213 + C104 * C228 +
             C117 * C444 + C105 * C445) *
                C118 +
            (C113 * C226 + C101 * C246 + C114 * C225 + C102 * C245 +
             C115 * C224 + C103 * C244 + C116 * C223 + C104 * C243 +
             C117 * C446 + C105 * C447) *
                C32542) *
               C32554 * C32513 * C441 -
           ((C117 * C136 + C105 * C145 + C116 * C135 + C104 * C144 +
             C115 * C134 + C103 * C143 + C114 * C133 + C102 * C142 +
             C113 * C132 + C101 * C141) *
                C32542 +
            (C117 * C124 + C105 * C137 + C116 * C123 + C104 * C130 +
             C115 * C122 + C103 * C129 + C114 * C121 + C102 * C128 +
             C113 * C120 + C101 * C127) *
                C118) *
               C32554 * C32513 * C440) *
              C443)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C5270 * C119 + C32858 * C126 + C5271 * C120 + C32845 * C127 +
             C5272 * C121 + C32815 * C128) *
                C5273 +
            (C5270 * C131 + C32858 * C140 + C5271 * C132 + C32845 * C141 +
             C5272 * C133 + C32815 * C142) *
                C5267 +
            (C5423 + C5424 + C5425) * C5274 + (C5426 + C5427 + C5428) * C5268 +
            C5443 * C5275 + C5444 * C32826) *
               C32554 * C32513 * C440 -
           ((C5435 + C5436 + C5437) * C32826 + (C5438 + C5439 + C5440) * C5275 +
            (C5434 + C5433 + C5432) * C5268 + (C5431 + C5430 + C5429) * C5274 +
            (C5428 + C5427 + C5426) * C5267 + (C5425 + C5424 + C5423) * C5273) *
               C32554 * C32513 * C441) *
              C442 +
          (((C5725 + C5726 + C5727) * C5273 + (C5728 + C5729 + C5730) * C5267 +
            (C5731 + C5732 + C5733) * C5274 + (C5734 + C5735 + C5736) * C5268 +
            (C5270 * C871 + C32858 * C880 + C5271 * C870 + C32845 * C879 +
             C5272 * C1244 + C32815 * C1245) *
                C5275 +
            (C5270 * C877 + C32858 * C889 + C5271 * C876 + C32845 * C888 +
             C5272 * C1246 + C32815 * C1247) *
                C32826) *
               C32554 * C32513 * C441 -
           ((C5736 + C5735 + C5734) * C32826 + (C5733 + C5732 + C5731) * C5275 +
            (C5730 + C5729 + C5728) * C5268 + (C5727 + C5726 + C5725) * C5274 +
            (C5272 * C134 + C32815 * C143 + C5271 * C133 + C32845 * C142 +
             C5270 * C132 + C32858 * C141) *
                C5267 +
            (C5272 * C122 + C32815 * C129 + C5271 * C121 + C32845 * C128 +
             C5270 * C120 + C32858 * C127) *
                C5273) *
               C32554 * C32513 * C440) *
              C443)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C6132 * C119 + C32450 * C126) * C6133 +
            (C6132 * C131 + C32450 * C140) * C6127 + C6229 * C6134 +
            C6230 * C6128 + C6231 * C6135 + C6232 * C6129 + C6233 * C6136 +
            C6234 * C6130 + C6235 * C6137 + C6236 * C6131) *
               C32554 * C32513 * C440 -
           (C6237 * C6131 + C6238 * C6137 + C6236 * C6130 + C6235 * C6136 +
            C6234 * C6129 + C6233 * C6135 + C6232 * C6128 + C6231 * C6134 +
            C6230 * C6127 + C6229 * C6133) *
               C32554 * C32513 * C441) *
              C442 +
          ((C6415 * C6133 + C6416 * C6127 + C6417 * C6134 + C6418 * C6128 +
            C6419 * C6135 + C6420 * C6129 + C6421 * C6136 + C6422 * C6130 +
            (C6132 * C6394 + C32450 * C6395) * C6137 +
            (C6132 * C6396 + C32450 * C6397) * C6131) *
               C32554 * C32513 * C441 -
           (C6422 * C6131 + C6421 * C6137 + C6420 * C6130 + C6419 * C6136 +
            C6418 * C6129 + C6417 * C6135 + C6416 * C6128 + C6415 * C6134 +
            (C6132 * C132 + C32450 * C141) * C6127 +
            (C6132 * C120 + C32450 * C127) * C6133) *
               C32554 * C32513 * C440) *
              C443)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C5270 * C119 + C32858 * C126 + C5271 * C120 + C32845 * C127 +
              C5272 * C121 + C32815 * C128) *
                 C118 +
             (C5270 * C131 + C32858 * C140 + C5271 * C132 + C32845 * C141 +
              C5272 * C133 + C32815 * C142) *
                 C32542) *
                C10305 +
            ((C10565 + C10566 + C10567) * C118 +
             (C10568 + C10569 + C10570) * C32542) *
                C10306 +
            C10589 * C32829) *
               C32513 * C440 -
           (((C5272 * C1082 + C32815 * C1094 + C5271 * C1081 + C32845 * C1093 +
              C5270 * C1080 + C32858 * C1092) *
                 C32542 +
             (C5272 * C1067 + C32815 * C1079 + C5271 * C1066 + C32845 * C1078 +
              C5270 * C1065 + C32858 * C1077) *
                 C118) *
                C32829 +
            ((C6059 + C6060 + C6061) * C32542 +
             (C6062 + C6063 + C6064) * C118) *
                C10306 +
            ((C5428 + C5427 + C5426) * C32542 +
             (C5425 + C5424 + C5423) * C118) *
                C10305) *
               C32513 * C441) *
              C442 +
          ((((C5725 + C5726 + C5727) * C118 +
             (C5728 + C5729 + C5730) * C32542) *
                C10305 +
            ((C5270 * C619 + C32858 * C624 + C5271 * C620 + C32845 * C625 +
              C5272 * C621 + C32815 * C626) *
                 C118 +
             (C5270 * C629 + C32858 * C634 + C5271 * C630 + C32845 * C635 +
              C5272 * C631 + C32815 * C636) *
                 C32542) *
                C10306 +
            ((C5270 * C1066 + C32858 * C1078 + C5271 * C1067 + C32845 * C1079 +
              C5272 * C2192 + C32815 * C2193) *
                 C118 +
             (C5270 * C1081 + C32858 * C1093 + C5271 * C1082 + C32845 * C1094 +
              C5272 * C2194 + C32815 * C2195) *
                 C32542) *
                C32829) *
               C32513 * C441 -
           (((C5272 * C346 + C32815 * C356 + C5271 * C345 + C32845 * C355 +
              C5270 * C344 + C32858 * C354) *
                 C32542 +
             (C5272 * C326 + C32815 * C341 + C5271 * C325 + C32845 * C340 +
              C5270 * C324 + C32858 * C339) *
                 C118) *
                C32829 +
            ((C5272 * C329 + C32815 * C349 + C5271 * C330 + C32845 * C350 +
              C5270 * C331 + C32858 * C351) *
                 C32542 +
             (C5272 * C319 + C32815 * C334 + C5271 * C320 + C32845 * C335 +
              C5270 * C321 + C32858 * C336) *
                 C118) *
                C10306 +
            ((C5272 * C134 + C32815 * C143 + C5271 * C133 + C32845 * C142 +
              C5270 * C132 + C32858 * C141) *
                 C32542 +
             (C5272 * C122 + C32815 * C129 + C5271 * C121 + C32845 * C128 +
              C5270 * C120 + C32858 * C127) *
                 C118) *
                C10305) *
               C32513 * C440) *
              C443)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C6132 * C119 + C32450 * C126) * C757 +
             (C6132 * C131 + C32450 * C140) * C32861 + C6229 * C758 +
             C6230 * C32849 + C6231 * C759 + C6232 * C32826) *
                C10305 +
            (C11412 + C11413 + C11414 + C11415 + C11416 + C11417) * C10306 +
            C11434 * C32829) *
               C32513 * C440 -
           ((C6855 * C32826 + C6856 * C759 + C6854 * C32849 + C6853 * C758 +
             C6852 * C32861 + C6851 * C757) *
                C32829 +
            (C6613 * C32826 + C6614 * C759 + C6615 * C32849 + C6616 * C758 +
             C6617 * C32861 + C6618 * C757) *
                C10306 +
            (C6234 * C32826 + C6233 * C759 + C6232 * C32849 + C6231 * C758 +
             C6230 * C32861 + C6229 * C757) *
                C10305) *
               C32513 * C441) *
              C442 +
          (((C6415 * C757 + C6416 * C32861 + C6417 * C758 + C6418 * C32849 +
             C6419 * C759 + C6420 * C32826) *
                C10305 +
            (C7198 * C757 + C7199 * C32861 + C7200 * C758 + C7201 * C32849 +
             C9918 * C759 + C9919 * C32826) *
                C10306 +
            (C7202 * C757 + C7203 * C32861 + C7204 * C758 + C7205 * C32849 +
             (C6132 * C7177 + C32450 * C7178) * C759 +
             (C6132 * C7179 + C32450 * C7180) * C32826) *
                C32829) *
               C32513 * C441 -
           ((C7205 * C32826 + C7204 * C759 + C7203 * C32849 + C7202 * C758 +
             C7375 * C32861 + C7374 * C757) *
                C32829 +
            (C7201 * C32826 + C7200 * C759 + C7199 * C32849 + C7198 * C758 +
             C7373 * C32861 + C7372 * C757) *
                C10306 +
            (C6418 * C32826 + C6417 * C759 + C6416 * C32849 + C6415 * C758 +
             (C6132 * C132 + C32450 * C141) * C32861 +
             (C6132 * C120 + C32450 * C127) * C757) *
                C10305) *
               C32513 * C440) *
              C443)) /
            (p * q * std::sqrt(p + q));
    d2ee[71] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C754 * C119 + C748 * C126 + C755 * C120 + C749 * C127 +
             C756 * C121 + C32815 * C128) *
                C757 +
            (C754 * C131 + C748 * C140 + C755 * C132 + C749 * C141 +
             C756 * C133 + C32815 * C142) *
                C32861 +
            (C931 + C932 + C933) * C758 + (C934 + C935 + C936) * C32849 +
            C951 * C759 + C952 * C32826) *
               C32554 * C530 -
           ((C1617 + C1618 + C1619) * C32826 + (C1620 + C1621 + C1622) * C759 +
            (C1623 + C1624 + C1625) * C32849 + (C1626 + C1627 + C1628) * C758 +
            (C756 * C330 + C32815 * C350 + C755 * C331 + C749 * C351 +
             C754 * C332 + C748 * C352) *
                C32861 +
            (C756 * C320 + C32815 * C335 + C755 * C321 + C749 * C336 +
             C754 * C322 + C748 * C337) *
                C757) *
               C32554 * C531) *
              C440 +
          (((C1628 + C1627 + C1626) * C757 + (C1625 + C1624 + C1623) * C32861 +
            (C1622 + C1621 + C1620) * C758 + (C1619 + C1618 + C1617) * C32849 +
            (C754 * C1580 + C748 * C1583 + C755 * C1581 + C749 * C1584 +
             C756 * C1582 + C32815 * C1585) *
                C759 +
            (C754 * C1586 + C748 * C1589 + C755 * C1587 + C749 * C1590 +
             C756 * C1588 + C32815 * C1591) *
                C32826) *
               C32554 * C531 -
           ((C943 + C944 + C945) * C32826 + (C946 + C947 + C948) * C759 +
            (C942 + C941 + C940) * C32849 + (C939 + C938 + C937) * C758 +
            (C936 + C935 + C934) * C32861 + (C933 + C932 + C931) * C757) *
               C32554 * C530) *
              C441) *
         C32487) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C127 +
             C115 * C121 + C103 * C128 + C116 * C122 + C104 * C129 +
             C117 * C123 + C105 * C130) *
                C118 +
            (C113 * C131 + C101 * C140 + C114 * C132 + C102 * C141 +
             C115 * C133 + C103 * C142 + C116 * C134 + C104 * C143 +
             C117 * C135 + C105 * C144) *
                C32542) *
               C32554 * C530 -
           ((C117 * C328 + C105 * C348 + C116 * C329 + C104 * C349 +
             C115 * C330 + C103 * C350 + C114 * C331 + C102 * C351 +
             C113 * C332 + C101 * C352) *
                C32542 +
            (C117 * C318 + C105 * C333 + C116 * C319 + C104 * C334 +
             C115 * C320 + C103 * C335 + C114 * C321 + C102 * C336 +
             C113 * C322 + C101 * C337) *
                C118) *
               C32554 * C531) *
              C440 +
          (((C113 * C618 + C101 * C623 + C114 * C619 + C102 * C624 +
             C115 * C620 + C103 * C625 + C116 * C621 + C104 * C626 +
             C117 * C622 + C105 * C627) *
                C118 +
            (C113 * C628 + C101 * C633 + C114 * C629 + C102 * C634 +
             C115 * C630 + C103 * C635 + C116 * C631 + C104 * C636 +
             C117 * C632 + C105 * C637) *
                C32542) *
               C32554 * C531 -
           ((C117 * C223 + C105 * C243 + C116 * C224 + C104 * C244 +
             C115 * C225 + C103 * C245 + C114 * C226 + C102 * C246 +
             C113 * C227 + C101 * C247) *
                C32542 +
            (C117 * C213 + C105 * C228 + C116 * C214 + C104 * C229 +
             C115 * C215 + C103 * C230 + C114 * C216 + C102 * C231 +
             C113 * C217 + C101 * C232) *
                C118) *
               C32554 * C530) *
              C441) *
         C32487) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C5270 * C119 + C32858 * C126 + C5271 * C120 + C32845 * C127 +
             C5272 * C121 + C32815 * C128) *
                C5273 +
            (C5270 * C131 + C32858 * C140 + C5271 * C132 + C32845 * C141 +
             C5272 * C133 + C32815 * C142) *
                C5267 +
            (C5423 + C5424 + C5425) * C5274 + (C5426 + C5427 + C5428) * C5268 +
            C5443 * C5275 + C5444 * C32826) *
               C32554 * C530 -
           ((C6053 + C6054 + C6055) * C32826 + (C6056 + C6057 + C6058) * C5275 +
            (C6059 + C6060 + C6061) * C5268 + (C6062 + C6063 + C6064) * C5274 +
            (C5272 * C330 + C32815 * C350 + C5271 * C331 + C32845 * C351 +
             C5270 * C332 + C32858 * C352) *
                C5267 +
            (C5272 * C320 + C32815 * C335 + C5271 * C321 + C32845 * C336 +
             C5270 * C322 + C32858 * C337) *
                C5273) *
               C32554 * C531) *
              C440 +
          (((C6064 + C6063 + C6062) * C5273 + (C6061 + C6060 + C6059) * C5267 +
            (C6058 + C6057 + C6056) * C5274 + (C6055 + C6054 + C6053) * C5268 +
            (C5270 * C1580 + C32858 * C1583 + C5271 * C1581 + C32845 * C1584 +
             C5272 * C1582 + C32815 * C1585) *
                C5275 +
            (C5270 * C1586 + C32858 * C1589 + C5271 * C1587 + C32845 * C1590 +
             C5272 * C1588 + C32815 * C1591) *
                C32826) *
               C32554 * C531 -
           ((C5435 + C5436 + C5437) * C32826 + (C5438 + C5439 + C5440) * C5275 +
            (C5434 + C5433 + C5432) * C5268 + (C5431 + C5430 + C5429) * C5274 +
            (C5428 + C5427 + C5426) * C5267 + (C5425 + C5424 + C5423) * C5273) *
               C32554 * C530) *
              C441) *
         C32487) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C6132 * C119 + C32450 * C126) * C6133 +
            (C6132 * C131 + C32450 * C140) * C6127 + C6229 * C6134 +
            C6230 * C6128 + C6231 * C6135 + C6232 * C6129 + C6233 * C6136 +
            C6234 * C6130 + C6235 * C6137 + C6236 * C6131) *
               C32554 * C530 -
           (C6611 * C6131 + C6612 * C6137 + C6613 * C6130 + C6614 * C6136 +
            C6615 * C6129 + C6616 * C6135 + C6617 * C6128 + C6618 * C6134 +
            (C6132 * C332 + C32450 * C352) * C6127 +
            (C6132 * C322 + C32450 * C337) * C6133) *
               C32554 * C531) *
              C440 +
          ((C6618 * C6133 + C6617 * C6127 + C6616 * C6134 + C6615 * C6128 +
            C6614 * C6135 + C6613 * C6129 + C6612 * C6136 + C6611 * C6130 +
            (C6132 * C6590 + C32450 * C6591) * C6137 +
            (C6132 * C6592 + C32450 * C6593) * C6131) *
               C32554 * C531 -
           (C6237 * C6131 + C6238 * C6137 + C6236 * C6130 + C6235 * C6136 +
            C6234 * C6129 + C6233 * C6135 + C6232 * C6128 + C6231 * C6134 +
            C6230 * C6127 + C6229 * C6133) *
               C32554 * C530) *
              C441) *
         C32487) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C5270 * C119 + C32858 * C126 + C5271 * C120 + C32845 * C127 +
              C5272 * C121 + C32815 * C128) *
                 C118 +
             (C5270 * C131 + C32858 * C140 + C5271 * C132 + C32845 * C141 +
              C5272 * C133 + C32815 * C142) *
                 C32542) *
                C10305 +
            ((C10565 + C10566 + C10567) * C118 +
             (C10568 + C10569 + C10570) * C32542) *
                C10306 +
            C10589 * C32829) *
               C530 -
           (((C10577 + C10578 + C10579) * C32542 +
             (C10580 + C10581 + C10582) * C118) *
                C32829 +
            ((C10576 + C10575 + C10574) * C32542 +
             (C10573 + C10572 + C10571) * C118) *
                C10306 +
            ((C10570 + C10569 + C10568) * C32542 +
             (C10567 + C10566 + C10565) * C118) *
                C10305) *
               C531) *
              C440 +
          ((((C6064 + C6063 + C6062) * C118 +
             (C6061 + C6060 + C6059) * C32542) *
                C10305 +
            ((C11076 + C11077 + C11078) * C118 +
             (C11079 + C11080 + C11081) * C32542) *
                C10306 +
            ((C5270 * C2528 + C32858 * C2531 + C5271 * C2529 + C32845 * C2532 +
              C5272 * C2530 + C32815 * C2533) *
                 C118 +
             (C5270 * C2534 + C32858 * C2537 + C5271 * C2535 + C32845 * C2538 +
              C5272 * C2536 + C32815 * C2539) *
                 C32542) *
                C32829) *
               C531 -
           (((C11081 + C11080 + C11079) * C32542 +
             (C11078 + C11077 + C11076) * C118) *
                C32829 +
            ((C6059 + C6060 + C6061) * C32542 +
             (C6062 + C6063 + C6064) * C118) *
                C10306 +
            ((C5428 + C5427 + C5426) * C32542 +
             (C5425 + C5424 + C5423) * C118) *
                C10305) *
               C530) *
              C441) *
         C32487) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C6132 * C119 + C32450 * C126) * C757 +
             (C6132 * C131 + C32450 * C140) * C32861 + C6229 * C758 +
             C6230 * C32849 + C6231 * C759 + C6232 * C32826) *
                C10305 +
            (C11412 + C11413 + C11414 + C11415 + C11416 + C11417) * C10306 +
            C11434 * C32829) *
               C530 -
           ((C11424 + C11425 + C11426 + C11427 + C11428 + C11429) * C32829 +
            (C11423 + C11422 + C11421 + C11420 + C11419 + C11418) * C10306 +
            (C11417 + C11416 + C11415 + C11414 + C11413 + C11412) * C10305) *
               C531) *
              C440 +
          (((C11885 + C11886 + C11887 + C11888 + C11889 + C11890) * C10305 +
            (C11891 + C11892 + C11893 + C11894 + C11895 + C11896) * C10306 +
            (C7014 * C757 + C7013 * C32861 + C7012 * C758 + C7011 * C32849 +
             (C6132 * C7525 + C32450 * C7526) * C759 +
             (C6132 * C7527 + C32450 * C7528) * C32826) *
                C32829) *
               C531 -
           ((C11896 + C11895 + C11894 + C11893 + C11892 + C11891) * C32829 +
            (C11890 + C11889 + C11888 + C11887 + C11886 + C11885) * C10306 +
            (C6234 * C32826 + C6233 * C759 + C6232 * C32849 + C6231 * C758 +
             C6230 * C32861 + C6229 * C757) *
                C10305) *
               C530) *
              C441) *
         C32487) /
            (p * q * std::sqrt(p + q));
    d2ee[72] +=
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             (((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C127 +
                C115 * C121 + C103 * C128 + C116 * C122 + C104 * C129 +
                C117 * C123 + C105 * C130) *
                   C118 +
               (C113 * C131 + C101 * C140 + C114 * C132 + C102 * C141 +
                C115 * C133 + C103 * C142 + C116 * C134 + C104 * C143 +
                C117 * C135 + C105 * C144) *
                   C32542) *
                  C32554 * C32513 * C32499 * C110 -
              ((C117 * C136 + C105 * C145 + C116 * C135 + C104 * C144 +
                C115 * C134 + C103 * C143 + C114 * C133 + C102 * C142 +
                C113 * C132 + C101 * C141) *
                   C32542 +
               (C117 * C124 + C105 * C137 + C116 * C123 + C104 * C130 +
                C115 * C122 + C103 * C129 + C114 * C121 + C102 * C128 +
                C113 * C120 + C101 * C127) *
                   C118) *
                  C32554 * C32513 * C32499 * C111 +
              ((C113 * C121 + C101 * C128 + C114 * C122 + C102 * C129 +
                C115 * C123 + C103 * C130 + C116 * C124 + C104 * C137 +
                C117 * C125 + C105 * C138) *
                   C118 +
               (C113 * C133 + C101 * C142 + C114 * C134 + C102 * C143 +
                C115 * C135 + C103 * C144 + C116 * C136 + C104 * C145 +
                C117 * C139 + C105 * C146) *
                   C32542) *
                  C32554 * C32513 * C32499 * C112) +
         std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             (((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C127 +
                C115 * C121 + C103 * C128 + C116 * C122 + C104 * C129 +
                C117 * C123 + C105 * C130) *
                   C118 +
               (C113 * C131 + C101 * C140 + C114 * C132 + C102 * C141 +
                C115 * C133 + C103 * C142 + C116 * C134 + C104 * C143 +
                C117 * C135 + C105 * C144) *
                   C32542) *
                  C32554 * C32513 * C209 -
              ((C117 * C223 + C105 * C243 + C116 * C224 + C104 * C244 +
                C115 * C225 + C103 * C245 + C114 * C226 + C102 * C246 +
                C113 * C227 + C101 * C247) *
                   C32542 +
               (C117 * C213 + C105 * C228 + C116 * C214 + C104 * C229 +
                C115 * C215 + C103 * C230 + C114 * C216 + C102 * C231 +
                C113 * C217 + C101 * C232) *
                   C118) *
                  C32554 * C32513 * C210 +
              ((C113 * C218 + C101 * C233 + C114 * C219 + C102 * C234 +
                C115 * C220 + C103 * C235 + C116 * C221 + C104 * C236 +
                C117 * C222 + C105 * C237) *
                   C118 +
               (C113 * C238 + C101 * C248 + C114 * C239 + C102 * C249 +
                C115 * C240 + C103 * C250 + C116 * C241 + C104 * C251 +
                C117 * C242 + C105 * C252) *
                   C32542) *
                  C32554 * C32513 * C211) *
             C32487) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C127 +
            C115 * C121 + C103 * C128 + C116 * C122 + C104 * C129 +
            C117 * C123 + C105 * C130) *
               C118 +
           (C113 * C131 + C101 * C140 + C114 * C132 + C102 * C141 +
            C115 * C133 + C103 * C142 + C116 * C134 + C104 * C143 +
            C117 * C135 + C105 * C144) *
               C32542) *
              C32554 * C315 -
          ((C117 * C328 + C105 * C348 + C116 * C329 + C104 * C349 +
            C115 * C330 + C103 * C350 + C114 * C331 + C102 * C351 +
            C113 * C332 + C101 * C352) *
               C32542 +
           (C117 * C318 + C105 * C333 + C116 * C319 + C104 * C334 +
            C115 * C320 + C103 * C335 + C114 * C321 + C102 * C336 +
            C113 * C322 + C101 * C337) *
               C118) *
              C32554 * C316 +
          ((C113 * C323 + C101 * C338 + C114 * C324 + C102 * C339 +
            C115 * C325 + C103 * C340 + C116 * C326 + C104 * C341 +
            C117 * C327 + C105 * C342) *
               C118 +
           (C113 * C343 + C101 * C353 + C114 * C344 + C102 * C354 +
            C115 * C345 + C103 * C355 + C116 * C346 + C104 * C356 +
            C117 * C347 + C105 * C357) *
               C32542) *
              C32554 * C317) *
         C32499 * C32487) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C754 * C119 + C748 * C126 + C755 * C120 + C749 * C127 +
            C756 * C121 + C32815 * C128) *
               C757 +
           (C754 * C131 + C748 * C140 + C755 * C132 + C749 * C141 +
            C756 * C133 + C32815 * C142) *
               C32861 +
           (C754 * C217 + C748 * C232 + C755 * C216 + C749 * C231 +
            C756 * C215 + C32815 * C230) *
               C758 +
           (C754 * C227 + C748 * C247 + C755 * C226 + C749 * C246 +
            C756 * C225 + C32815 * C245) *
               C32849 +
           (C754 * C218 + C748 * C233 + C755 * C219 + C749 * C234 +
            C756 * C220 + C32815 * C235) *
               C759 +
           (C754 * C238 + C748 * C248 + C755 * C239 + C749 * C249 +
            C756 * C240 + C32815 * C250) *
               C32826) *
              C32554 * C32513 * C32499 * C110 -
          ((C756 * C241 + C32815 * C251 + C755 * C240 + C749 * C250 +
            C754 * C239 + C748 * C249) *
               C32826 +
           (C756 * C221 + C32815 * C236 + C755 * C220 + C749 * C235 +
            C754 * C219 + C748 * C234) *
               C759 +
           (C756 * C224 + C32815 * C244 + C755 * C225 + C749 * C245 +
            C754 * C226 + C748 * C246) *
               C32849 +
           (C756 * C214 + C32815 * C229 + C755 * C215 + C749 * C230 +
            C754 * C216 + C748 * C231) *
               C758 +
           (C756 * C134 + C32815 * C143 + C755 * C133 + C749 * C142 +
            C754 * C132 + C748 * C141) *
               C32861 +
           (C756 * C122 + C32815 * C129 + C755 * C121 + C749 * C128 +
            C754 * C120 + C748 * C127) *
               C757) *
              C32554 * C32513 * C32499 * C111 +
          ((C754 * C121 + C748 * C128 + C755 * C122 + C749 * C129 +
            C756 * C123 + C32815 * C130) *
               C757 +
           (C754 * C133 + C748 * C142 + C755 * C134 + C749 * C143 +
            C756 * C135 + C32815 * C144) *
               C32861 +
           (C754 * C215 + C748 * C230 + C755 * C214 + C749 * C229 +
            C756 * C213 + C32815 * C228) *
               C758 +
           (C754 * C225 + C748 * C245 + C755 * C224 + C749 * C244 +
            C756 * C223 + C32815 * C243) *
               C32849 +
           (C754 * C220 + C748 * C235 + C755 * C221 + C749 * C236 +
            C756 * C222 + C32815 * C237) *
               C759 +
           (C754 * C240 + C748 * C250 + C755 * C241 + C749 * C251 +
            C756 * C242 + C32815 * C252) *
               C32826) *
              C32554 * C32513 * C32499 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C754 * C119 + C748 * C126 + C755 * C120 + C749 * C127 +
            C756 * C121 + C32815 * C128) *
               C757 +
           (C754 * C131 + C748 * C140 + C755 * C132 + C749 * C141 +
            C756 * C133 + C32815 * C142) *
               C32861 +
           (C931 + C932 + C933) * C758 + (C934 + C935 + C936) * C32849 +
           C951 * C759 + C952 * C32826) *
              C32554 * C32513 * C209 -
          ((C943 + C944 + C945) * C32826 + (C946 + C947 + C948) * C759 +
           (C942 + C941 + C940) * C32849 + (C939 + C938 + C937) * C758 +
           (C936 + C935 + C934) * C32861 + (C933 + C932 + C931) * C757) *
              C32554 * C32513 * C210 +
          (C951 * C757 + C952 * C32861 + (C948 + C947 + C946) * C758 +
           (C945 + C944 + C943) * C32849 +
           (C754 * C873 + C748 * C882 + C755 * C874 + C749 * C883 +
            C756 * C875 + C32815 * C884) *
               C759 +
           (C754 * C885 + C748 * C891 + C755 * C886 + C749 * C892 +
            C756 * C887 + C32815 * C893) *
               C32826) *
              C32554 * C32513 * C211) *
         C32487) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C754 * C119 + C748 * C126 + C755 * C120 + C749 * C127 +
            C756 * C121 + C32815 * C128) *
               C757 +
           (C754 * C131 + C748 * C140 + C755 * C132 + C749 * C141 +
            C756 * C133 + C32815 * C142) *
               C32861 +
           (C931 + C932 + C933) * C758 + (C934 + C935 + C936) * C32849 +
           C951 * C759 + C952 * C32826) *
              C32554 * C315 -
          ((C756 * C1071 + C32815 * C1089 + C755 * C1072 + C749 * C1090 +
            C754 * C1073 + C748 * C1091) *
               C32826 +
           (C756 * C1062 + C32815 * C1074 + C755 * C1063 + C749 * C1075 +
            C754 * C1064 + C748 * C1076) *
               C759 +
           (C756 * C630 + C32815 * C635 + C755 * C629 + C749 * C634 +
            C754 * C628 + C748 * C633) *
               C32849 +
           (C756 * C620 + C32815 * C625 + C755 * C619 + C749 * C624 +
            C754 * C618 + C748 * C623) *
               C758 +
           (C756 * C330 + C32815 * C350 + C755 * C331 + C749 * C351 +
            C754 * C332 + C748 * C352) *
               C32861 +
           (C756 * C320 + C32815 * C335 + C755 * C321 + C749 * C336 +
            C754 * C322 + C748 * C337) *
               C757) *
              C32554 * C316 +
          ((C754 * C323 + C748 * C338 + C755 * C324 + C749 * C339 +
            C756 * C325 + C32815 * C340) *
               C757 +
           (C754 * C343 + C748 * C353 + C755 * C344 + C749 * C354 +
            C756 * C345 + C32815 * C355) *
               C32861 +
           (C754 * C1065 + C748 * C1077 + C755 * C1066 + C749 * C1078 +
            C756 * C1067 + C32815 * C1079) *
               C758 +
           (C754 * C1080 + C748 * C1092 + C755 * C1081 + C749 * C1093 +
            C756 * C1082 + C32815 * C1094) *
               C32849 +
           (C754 * C1068 + C748 * C1083 + C755 * C1069 + C749 * C1084 +
            C756 * C1070 + C32815 * C1085) *
               C759 +
           (C754 * C1086 + C748 * C1095 + C755 * C1087 + C749 * C1096 +
            C756 * C1088 + C32815 * C1097) *
               C32826) *
              C32554 * C317) *
         C32499 * C32487) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C5270 * C119 + C32858 * C126 + C5271 * C120 + C32845 * C127 +
            C5272 * C121 + C32815 * C128) *
               C5273 +
           (C5270 * C131 + C32858 * C140 + C5271 * C132 + C32845 * C141 +
            C5272 * C133 + C32815 * C142) *
               C5267 +
           (C5270 * C217 + C32858 * C232 + C5271 * C216 + C32845 * C231 +
            C5272 * C215 + C32815 * C230) *
               C5274 +
           (C5270 * C227 + C32858 * C247 + C5271 * C226 + C32845 * C246 +
            C5272 * C225 + C32815 * C245) *
               C5268 +
           (C5270 * C218 + C32858 * C233 + C5271 * C219 + C32845 * C234 +
            C5272 * C220 + C32815 * C235) *
               C5275 +
           (C5270 * C238 + C32858 * C248 + C5271 * C239 + C32845 * C249 +
            C5272 * C240 + C32815 * C250) *
               C32826) *
              C32554 * C32513 * C32499 * C110 -
          ((C5272 * C241 + C32815 * C251 + C5271 * C240 + C32845 * C250 +
            C5270 * C239 + C32858 * C249) *
               C32826 +
           (C5272 * C221 + C32815 * C236 + C5271 * C220 + C32845 * C235 +
            C5270 * C219 + C32858 * C234) *
               C5275 +
           (C5272 * C224 + C32815 * C244 + C5271 * C225 + C32845 * C245 +
            C5270 * C226 + C32858 * C246) *
               C5268 +
           (C5272 * C214 + C32815 * C229 + C5271 * C215 + C32845 * C230 +
            C5270 * C216 + C32858 * C231) *
               C5274 +
           (C5272 * C134 + C32815 * C143 + C5271 * C133 + C32845 * C142 +
            C5270 * C132 + C32858 * C141) *
               C5267 +
           (C5272 * C122 + C32815 * C129 + C5271 * C121 + C32845 * C128 +
            C5270 * C120 + C32858 * C127) *
               C5273) *
              C32554 * C32513 * C32499 * C111 +
          ((C5270 * C121 + C32858 * C128 + C5271 * C122 + C32845 * C129 +
            C5272 * C123 + C32815 * C130) *
               C5273 +
           (C5270 * C133 + C32858 * C142 + C5271 * C134 + C32845 * C143 +
            C5272 * C135 + C32815 * C144) *
               C5267 +
           (C5270 * C215 + C32858 * C230 + C5271 * C214 + C32845 * C229 +
            C5272 * C213 + C32815 * C228) *
               C5274 +
           (C5270 * C225 + C32858 * C245 + C5271 * C224 + C32845 * C244 +
            C5272 * C223 + C32815 * C243) *
               C5268 +
           (C5270 * C220 + C32858 * C235 + C5271 * C221 + C32845 * C236 +
            C5272 * C222 + C32815 * C237) *
               C5275 +
           (C5270 * C240 + C32858 * C250 + C5271 * C241 + C32845 * C251 +
            C5272 * C242 + C32815 * C252) *
               C32826) *
              C32554 * C32513 * C32499 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C5270 * C119 + C32858 * C126 + C5271 * C120 + C32845 * C127 +
            C5272 * C121 + C32815 * C128) *
               C5273 +
           (C5270 * C131 + C32858 * C140 + C5271 * C132 + C32845 * C141 +
            C5272 * C133 + C32815 * C142) *
               C5267 +
           (C5423 + C5424 + C5425) * C5274 + (C5426 + C5427 + C5428) * C5268 +
           C5443 * C5275 + C5444 * C32826) *
              C32554 * C32513 * C209 -
          ((C5435 + C5436 + C5437) * C32826 + (C5438 + C5439 + C5440) * C5275 +
           (C5434 + C5433 + C5432) * C5268 + (C5431 + C5430 + C5429) * C5274 +
           (C5428 + C5427 + C5426) * C5267 + (C5425 + C5424 + C5423) * C5273) *
              C32554 * C32513 * C210 +
          (C5443 * C5273 + C5444 * C5267 + (C5440 + C5439 + C5438) * C5274 +
           (C5437 + C5436 + C5435) * C5268 +
           (C5270 * C873 + C32858 * C882 + C5271 * C874 + C32845 * C883 +
            C5272 * C875 + C32815 * C884) *
               C5275 +
           (C5270 * C885 + C32858 * C891 + C5271 * C886 + C32845 * C892 +
            C5272 * C887 + C32815 * C893) *
               C32826) *
              C32554 * C32513 * C211) *
         C32487) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C5270 * C119 + C32858 * C126 + C5271 * C120 + C32845 * C127 +
            C5272 * C121 + C32815 * C128) *
               C5273 +
           (C5270 * C131 + C32858 * C140 + C5271 * C132 + C32845 * C141 +
            C5272 * C133 + C32815 * C142) *
               C5267 +
           (C5423 + C5424 + C5425) * C5274 + (C5426 + C5427 + C5428) * C5268 +
           C5443 * C5275 + C5444 * C32826) *
              C32554 * C315 -
          ((C5272 * C1071 + C32815 * C1089 + C5271 * C1072 + C32845 * C1090 +
            C5270 * C1073 + C32858 * C1091) *
               C32826 +
           (C5272 * C1062 + C32815 * C1074 + C5271 * C1063 + C32845 * C1075 +
            C5270 * C1064 + C32858 * C1076) *
               C5275 +
           (C5272 * C630 + C32815 * C635 + C5271 * C629 + C32845 * C634 +
            C5270 * C628 + C32858 * C633) *
               C5268 +
           (C5272 * C620 + C32815 * C625 + C5271 * C619 + C32845 * C624 +
            C5270 * C618 + C32858 * C623) *
               C5274 +
           (C5272 * C330 + C32815 * C350 + C5271 * C331 + C32845 * C351 +
            C5270 * C332 + C32858 * C352) *
               C5267 +
           (C5272 * C320 + C32815 * C335 + C5271 * C321 + C32845 * C336 +
            C5270 * C322 + C32858 * C337) *
               C5273) *
              C32554 * C316 +
          ((C5270 * C323 + C32858 * C338 + C5271 * C324 + C32845 * C339 +
            C5272 * C325 + C32815 * C340) *
               C5273 +
           (C5270 * C343 + C32858 * C353 + C5271 * C344 + C32845 * C354 +
            C5272 * C345 + C32815 * C355) *
               C5267 +
           (C5270 * C1065 + C32858 * C1077 + C5271 * C1066 + C32845 * C1078 +
            C5272 * C1067 + C32815 * C1079) *
               C5274 +
           (C5270 * C1080 + C32858 * C1092 + C5271 * C1081 + C32845 * C1093 +
            C5272 * C1082 + C32815 * C1094) *
               C5268 +
           (C5270 * C1068 + C32858 * C1083 + C5271 * C1069 + C32845 * C1084 +
            C5272 * C1070 + C32815 * C1085) *
               C5275 +
           (C5270 * C1086 + C32858 * C1095 + C5271 * C1087 + C32845 * C1096 +
            C5272 * C1088 + C32815 * C1097) *
               C32826) *
              C32554 * C317) *
         C32499 * C32487) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C6132 * C119 + C32450 * C126) * C6133 +
           (C6132 * C131 + C32450 * C140) * C6127 +
           (C6132 * C217 + C32450 * C232) * C6134 +
           (C6132 * C227 + C32450 * C247) * C6128 +
           (C6132 * C218 + C32450 * C233) * C6135 +
           (C6132 * C238 + C32450 * C248) * C6129 +
           (C6132 * C872 + C32450 * C881) * C6136 +
           (C6132 * C878 + C32450 * C890) * C6130 +
           (C6132 * C873 + C32450 * C882) * C6137 +
           (C6132 * C885 + C32450 * C891) * C6131) *
              C32554 * C32513 * C32499 * C110 -
          ((C6132 * C886 + C32450 * C892) * C6131 +
           (C6132 * C874 + C32450 * C883) * C6137 +
           (C6132 * C877 + C32450 * C889) * C6130 +
           (C6132 * C871 + C32450 * C880) * C6136 +
           (C6132 * C239 + C32450 * C249) * C6129 +
           (C6132 * C219 + C32450 * C234) * C6135 +
           (C6132 * C226 + C32450 * C246) * C6128 +
           (C6132 * C216 + C32450 * C231) * C6134 +
           (C6132 * C132 + C32450 * C141) * C6127 +
           (C6132 * C120 + C32450 * C127) * C6133) *
              C32554 * C32513 * C32499 * C111 +
          ((C6132 * C121 + C32450 * C128) * C6133 +
           (C6132 * C133 + C32450 * C142) * C6127 +
           (C6132 * C215 + C32450 * C230) * C6134 +
           (C6132 * C225 + C32450 * C245) * C6128 +
           (C6132 * C220 + C32450 * C235) * C6135 +
           (C6132 * C240 + C32450 * C250) * C6129 +
           (C6132 * C870 + C32450 * C879) * C6136 +
           (C6132 * C876 + C32450 * C888) * C6130 +
           (C6132 * C875 + C32450 * C884) * C6137 +
           (C6132 * C887 + C32450 * C893) * C6131) *
              C32554 * C32513 * C32499 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C6132 * C119 + C32450 * C126) * C6133 +
           (C6132 * C131 + C32450 * C140) * C6127 + C6229 * C6134 +
           C6230 * C6128 + C6231 * C6135 + C6232 * C6129 + C6233 * C6136 +
           C6234 * C6130 + C6235 * C6137 + C6236 * C6131) *
              C32554 * C32513 * C209 -
          (C6237 * C6131 + C6238 * C6137 + C6236 * C6130 + C6235 * C6136 +
           C6234 * C6129 + C6233 * C6135 + C6232 * C6128 + C6231 * C6134 +
           C6230 * C6127 + C6229 * C6133) *
              C32554 * C32513 * C210 +
          (C6231 * C6133 + C6232 * C6127 + C6233 * C6134 + C6234 * C6128 +
           C6235 * C6135 + C6236 * C6129 + C6238 * C6136 + C6237 * C6130 +
           (C6132 * C6201 + C32450 * C6204) * C6137 +
           (C6132 * C6205 + C32450 * C6207) * C6131) *
              C32554 * C32513 * C211) *
         C32487) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C6132 * C119 + C32450 * C126) * C6133 +
           (C6132 * C131 + C32450 * C140) * C6127 + C6229 * C6134 +
           C6230 * C6128 + C6231 * C6135 + C6232 * C6129 + C6233 * C6136 +
           C6234 * C6130 + C6235 * C6137 + C6236 * C6131) *
              C32554 * C315 -
          ((C6132 * C6303 + C32450 * C6309) * C6131 +
           (C6132 * C6300 + C32450 * C6304) * C6137 +
           (C6132 * C1586 + C32450 * C1589) * C6130 +
           (C6132 * C1580 + C32450 * C1583) * C6136 +
           (C6132 * C1073 + C32450 * C1091) * C6129 +
           (C6132 * C1064 + C32450 * C1076) * C6135 +
           (C6132 * C628 + C32450 * C633) * C6128 +
           (C6132 * C618 + C32450 * C623) * C6134 +
           (C6132 * C332 + C32450 * C352) * C6127 +
           (C6132 * C322 + C32450 * C337) * C6133) *
              C32554 * C316 +
          ((C6132 * C323 + C32450 * C338) * C6133 +
           (C6132 * C343 + C32450 * C353) * C6127 +
           (C6132 * C1065 + C32450 * C1077) * C6134 +
           (C6132 * C1080 + C32450 * C1092) * C6128 +
           (C6132 * C1068 + C32450 * C1083) * C6135 +
           (C6132 * C1086 + C32450 * C1095) * C6129 +
           (C6132 * C6301 + C32450 * C6305) * C6136 +
           (C6132 * C6306 + C32450 * C6310) * C6130 +
           (C6132 * C6302 + C32450 * C6307) * C6137 +
           (C6132 * C6308 + C32450 * C6311) * C6131) *
              C32554 * C317) *
         C32499 * C32487) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C5270 * C119 + C32858 * C126 + C5271 * C120 + C32845 * C127 +
             C5272 * C121 + C32815 * C128) *
                C118 +
            (C5270 * C131 + C32858 * C140 + C5271 * C132 + C32845 * C141 +
             C5272 * C133 + C32815 * C142) *
                C32542) *
               C10305 +
           ((C5270 * C322 + C32858 * C337 + C5271 * C321 + C32845 * C336 +
             C5272 * C320 + C32815 * C335) *
                C118 +
            (C5270 * C332 + C32858 * C352 + C5271 * C331 + C32845 * C351 +
             C5272 * C330 + C32815 * C350) *
                C32542) *
               C10306 +
           ((C5270 * C323 + C32858 * C338 + C5271 * C324 + C32845 * C339 +
             C5272 * C325 + C32815 * C340) *
                C118 +
            (C5270 * C343 + C32858 * C353 + C5271 * C344 + C32845 * C354 +
             C5272 * C345 + C32815 * C355) *
                C32542) *
               C32829) *
              C32513 * C32499 * C110 -
          (((C5272 * C346 + C32815 * C356 + C5271 * C345 + C32845 * C355 +
             C5270 * C344 + C32858 * C354) *
                C32542 +
            (C5272 * C326 + C32815 * C341 + C5271 * C325 + C32845 * C340 +
             C5270 * C324 + C32858 * C339) *
                C118) *
               C32829 +
           ((C5272 * C329 + C32815 * C349 + C5271 * C330 + C32845 * C350 +
             C5270 * C331 + C32858 * C351) *
                C32542 +
            (C5272 * C319 + C32815 * C334 + C5271 * C320 + C32845 * C335 +
             C5270 * C321 + C32858 * C336) *
                C118) *
               C10306 +
           ((C5272 * C134 + C32815 * C143 + C5271 * C133 + C32845 * C142 +
             C5270 * C132 + C32858 * C141) *
                C32542 +
            (C5272 * C122 + C32815 * C129 + C5271 * C121 + C32845 * C128 +
             C5270 * C120 + C32858 * C127) *
                C118) *
               C10305) *
              C32513 * C32499 * C111 +
          (((C5270 * C121 + C32858 * C128 + C5271 * C122 + C32845 * C129 +
             C5272 * C123 + C32815 * C130) *
                C118 +
            (C5270 * C133 + C32858 * C142 + C5271 * C134 + C32845 * C143 +
             C5272 * C135 + C32815 * C144) *
                C32542) *
               C10305 +
           ((C5270 * C320 + C32858 * C335 + C5271 * C319 + C32845 * C334 +
             C5272 * C318 + C32815 * C333) *
                C118 +
            (C5270 * C330 + C32858 * C350 + C5271 * C329 + C32845 * C349 +
             C5272 * C328 + C32815 * C348) *
                C32542) *
               C10306 +
           ((C5270 * C325 + C32858 * C340 + C5271 * C326 + C32845 * C341 +
             C5272 * C327 + C32815 * C342) *
                C118 +
            (C5270 * C345 + C32858 * C355 + C5271 * C346 + C32845 * C356 +
             C5272 * C347 + C32815 * C357) *
                C32542) *
               C32829) *
              C32513 * C32499 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C5270 * C119 + C32858 * C126 + C5271 * C120 + C32845 * C127 +
             C5272 * C121 + C32815 * C128) *
                C118 +
            (C5270 * C131 + C32858 * C140 + C5271 * C132 + C32845 * C141 +
             C5272 * C133 + C32815 * C142) *
                C32542) *
               C10305 +
           ((C5270 * C322 + C32858 * C337 + C5271 * C321 + C32845 * C336 +
             C5272 * C320 + C32815 * C335) *
                C118 +
            (C5270 * C332 + C32858 * C352 + C5271 * C331 + C32845 * C351 +
             C5272 * C330 + C32815 * C350) *
                C32542) *
               C10306 +
           ((C5270 * C323 + C32858 * C338 + C5271 * C324 + C32845 * C339 +
             C5272 * C325 + C32815 * C340) *
                C118 +
            (C5270 * C343 + C32858 * C353 + C5271 * C344 + C32845 * C354 +
             C5272 * C345 + C32815 * C355) *
                C32542) *
               C32829) *
              C32513 * C209 -
          (((C5272 * C1082 + C32815 * C1094 + C5271 * C1081 + C32845 * C1093 +
             C5270 * C1080 + C32858 * C1092) *
                C32542 +
            (C5272 * C1067 + C32815 * C1079 + C5271 * C1066 + C32845 * C1078 +
             C5270 * C1065 + C32858 * C1077) *
                C118) *
               C32829 +
           ((C6059 + C6060 + C6061) * C32542 + (C6062 + C6063 + C6064) * C118) *
               C10306 +
           ((C5428 + C5427 + C5426) * C32542 + (C5425 + C5424 + C5423) * C118) *
               C10305) *
              C32513 * C210 +
          ((C5443 * C118 + C5444 * C32542) * C10305 +
           ((C6058 + C6057 + C6056) * C118 + (C6055 + C6054 + C6053) * C32542) *
               C10306 +
           ((C5270 * C1068 + C32858 * C1083 + C5271 * C1069 + C32845 * C1084 +
             C5272 * C1070 + C32815 * C1085) *
                C118 +
            (C5270 * C1086 + C32858 * C1095 + C5271 * C1087 + C32845 * C1096 +
             C5272 * C1088 + C32815 * C1097) *
                C32542) *
               C32829) *
              C32513 * C211) *
         C32487) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C5270 * C119 + C32858 * C126 + C5271 * C120 + C32845 * C127 +
             C5272 * C121 + C32815 * C128) *
                C118 +
            (C5270 * C131 + C32858 * C140 + C5271 * C132 + C32845 * C141 +
             C5272 * C133 + C32815 * C142) *
                C32542) *
               C10305 +
           ((C10565 + C10566 + C10567) * C118 +
            (C10568 + C10569 + C10570) * C32542) *
               C10306 +
           C10589 * C32829) *
              C315 -
          (((C10577 + C10578 + C10579) * C32542 +
            (C10580 + C10581 + C10582) * C118) *
               C32829 +
           ((C10576 + C10575 + C10574) * C32542 +
            (C10573 + C10572 + C10571) * C118) *
               C10306 +
           ((C10570 + C10569 + C10568) * C32542 +
            (C10567 + C10566 + C10565) * C118) *
               C10305) *
              C316 +
          (C10589 * C10305 +
           ((C10582 + C10581 + C10580) * C118 +
            (C10579 + C10578 + C10577) * C32542) *
               C10306 +
           ((C5270 * C1964 + C32858 * C1973 + C5271 * C1965 + C32845 * C1974 +
             C5272 * C1966 + C32815 * C1975) *
                C118 +
            (C5270 * C1976 + C32858 * C1982 + C5271 * C1977 + C32845 * C1983 +
             C5272 * C1978 + C32815 * C1984) *
                C32542) *
               C32829) *
              C317) *
         C32499 * C32487) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C6132 * C119 + C32450 * C126) * C757 +
            (C6132 * C131 + C32450 * C140) * C32861 + C6229 * C758 +
            C6230 * C32849 + C6231 * C759 + C6232 * C32826) *
               C10305 +
           (C7007 * C757 + C7008 * C32861 + C6618 * C758 + C6617 * C32849 +
            C6616 * C759 + C6615 * C32826) *
               C10306 +
           (C7009 * C757 + C7010 * C32861 + C6851 * C758 + C6852 * C32849 +
            C6853 * C759 + C6854 * C32826) *
               C32829) *
              C32513 * C32499 * C110 -
          ((C7205 * C32826 + C7204 * C759 + C7203 * C32849 + C7202 * C758 +
            C7375 * C32861 + C7374 * C757) *
               C32829 +
           (C7201 * C32826 + C7200 * C759 + C7199 * C32849 + C7198 * C758 +
            C7373 * C32861 + C7372 * C757) *
               C10306 +
           (C6418 * C32826 + C6417 * C759 + C6416 * C32849 + C6415 * C758 +
            (C6132 * C132 + C32450 * C141) * C32861 +
            (C6132 * C120 + C32450 * C127) * C757) *
               C10305) *
              C32513 * C32499 * C111 +
          (((C6132 * C121 + C32450 * C128) * C757 +
            (C6132 * C133 + C32450 * C142) * C32861 +
            (C6132 * C215 + C32450 * C230) * C758 +
            (C6132 * C225 + C32450 * C245) * C32849 +
            (C6132 * C220 + C32450 * C235) * C759 +
            (C6132 * C240 + C32450 * C250) * C32826) *
               C10305 +
           ((C6132 * C320 + C32450 * C335) * C757 +
            (C6132 * C330 + C32450 * C350) * C32861 +
            (C6132 * C620 + C32450 * C625) * C758 +
            (C6132 * C630 + C32450 * C635) * C32849 +
            (C6132 * C1062 + C32450 * C1074) * C759 +
            (C6132 * C1071 + C32450 * C1089) * C32826) *
               C10306 +
           ((C6132 * C325 + C32450 * C340) * C757 +
            (C6132 * C345 + C32450 * C355) * C32861 +
            (C6132 * C1067 + C32450 * C1079) * C758 +
            (C6132 * C1082 + C32450 * C1094) * C32849 +
            (C6132 * C1070 + C32450 * C1085) * C759 +
            (C6132 * C1088 + C32450 * C1097) * C32826) *
               C32829) *
              C32513 * C32499 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C6132 * C119 + C32450 * C126) * C757 +
            (C6132 * C131 + C32450 * C140) * C32861 + C6229 * C758 +
            C6230 * C32849 + C6231 * C759 + C6232 * C32826) *
               C10305 +
           (C7007 * C757 + C7008 * C32861 + C6618 * C758 + C6617 * C32849 +
            C6616 * C759 + C6615 * C32826) *
               C10306 +
           (C7009 * C757 + C7010 * C32861 + C6851 * C758 + C6852 * C32849 +
            C6853 * C759 + C6854 * C32826) *
               C32829) *
              C32513 * C209 -
          ((C6855 * C32826 + C6856 * C759 + C6854 * C32849 + C6853 * C758 +
            C6852 * C32861 + C6851 * C757) *
               C32829 +
           (C6613 * C32826 + C6614 * C759 + C6615 * C32849 + C6616 * C758 +
            C6617 * C32861 + C6618 * C757) *
               C10306 +
           (C6234 * C32826 + C6233 * C759 + C6232 * C32849 + C6231 * C758 +
            C6230 * C32861 + C6229 * C757) *
               C10305) *
              C32513 * C210 +
          ((C6231 * C757 + C6232 * C32861 + C6233 * C758 + C6234 * C32849 +
            C6235 * C759 + C6236 * C32826) *
               C10305 +
           (C6616 * C757 + C6615 * C32861 + C6614 * C758 + C6613 * C32849 +
            C6612 * C759 + C6611 * C32826) *
               C10306 +
           (C6853 * C757 + C6854 * C32861 + C6856 * C758 + C6855 * C32849 +
            (C6132 * C6302 + C32450 * C6307) * C759 +
            (C6132 * C6308 + C32450 * C6311) * C32826) *
               C32829) *
              C32513 * C211) *
         C32487) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C6132 * C119 + C32450 * C126) * C757 +
            (C6132 * C131 + C32450 * C140) * C32861 + C6229 * C758 +
            C6230 * C32849 + C6231 * C759 + C6232 * C32826) *
               C10305 +
           (C11412 + C11413 + C11414 + C11415 + C11416 + C11417) * C10306 +
           C11434 * C32829) *
              C315 -
          ((C11424 + C11425 + C11426 + C11427 + C11428 + C11429) * C32829 +
           (C11423 + C11422 + C11421 + C11420 + C11419 + C11418) * C10306 +
           (C11417 + C11416 + C11415 + C11414 + C11413 + C11412) * C10305) *
              C316 +
          (C11434 * C10305 +
           (C11429 + C11428 + C11427 + C11426 + C11425 + C11424) * C10306 +
           ((C6132 * C1964 + C32450 * C1973) * C757 +
            (C6132 * C1976 + C32450 * C1982) * C32861 +
            (C6132 * C6967 + C32450 * C6971) * C758 +
            (C6132 * C6972 + C32450 * C6976) * C32849 +
            (C6132 * C6968 + C32450 * C6973) * C759 +
            (C6132 * C6974 + C32450 * C6977) * C32826) *
               C32829) *
              C317) *
         C32499 * C32487) /
            (p * q * std::sqrt(p + q));
    d2ee[73] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C754 * C119 + C748 * C126 + C755 * C120 + C749 * C127 +
             C756 * C121 + C32815 * C128) *
                C757 +
            (C754 * C131 + C748 * C140 + C755 * C132 + C749 * C141 +
             C756 * C133 + C32815 * C142) *
                C32861 +
            (C931 + C932 + C933) * C758 + (C934 + C935 + C936) * C32849 +
            C951 * C759 + C952 * C32826) *
               C32554 * C530 -
           ((C756 * C1071 + C32815 * C1089 + C755 * C1072 + C749 * C1090 +
             C754 * C1073 + C748 * C1091) *
                C32826 +
            (C756 * C1062 + C32815 * C1074 + C755 * C1063 + C749 * C1075 +
             C754 * C1064 + C748 * C1076) *
                C759 +
            (C756 * C630 + C32815 * C635 + C755 * C629 + C749 * C634 +
             C754 * C628 + C748 * C633) *
                C32849 +
            (C756 * C620 + C32815 * C625 + C755 * C619 + C749 * C624 +
             C754 * C618 + C748 * C623) *
                C758 +
            (C756 * C330 + C32815 * C350 + C755 * C331 + C749 * C351 +
             C754 * C332 + C748 * C352) *
                C32861 +
            (C756 * C320 + C32815 * C335 + C755 * C321 + C749 * C336 +
             C754 * C322 + C748 * C337) *
                C757) *
               C32554 * C531) *
              C32499 * C442 +
          (((C754 * C321 + C748 * C336 + C755 * C320 + C749 * C335 +
             C756 * C319 + C32815 * C334) *
                C757 +
            (C754 * C331 + C748 * C351 + C755 * C330 + C749 * C350 +
             C756 * C329 + C32815 * C349) *
                C32861 +
            (C754 * C619 + C748 * C624 + C755 * C620 + C749 * C625 +
             C756 * C621 + C32815 * C626) *
                C758 +
            (C754 * C629 + C748 * C634 + C755 * C630 + C749 * C635 +
             C756 * C631 + C32815 * C636) *
                C32849 +
            (C754 * C1063 + C748 * C1075 + C755 * C1062 + C749 * C1074 +
             C756 * C1430 + C32815 * C1431) *
                C759 +
            (C754 * C1072 + C748 * C1090 + C755 * C1071 + C749 * C1089 +
             C756 * C1432 + C32815 * C1433) *
                C32826) *
               C32554 * C531 -
           ((C1284 + C1283 + C1282) * C32826 + (C1281 + C1280 + C1279) * C759 +
            (C1278 + C1277 + C1276) * C32849 + (C1275 + C1274 + C1273) * C758 +
            (C756 * C134 + C32815 * C143 + C755 * C133 + C749 * C142 +
             C754 * C132 + C748 * C141) *
                C32861 +
            (C756 * C122 + C32815 * C129 + C755 * C121 + C749 * C128 +
             C754 * C120 + C748 * C127) *
                C757) *
               C32554 * C530) *
              C32499 * C443)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C127 +
             C115 * C121 + C103 * C128 + C116 * C122 + C104 * C129 +
             C117 * C123 + C105 * C130) *
                C118 +
            (C113 * C131 + C101 * C140 + C114 * C132 + C102 * C141 +
             C115 * C133 + C103 * C142 + C116 * C134 + C104 * C143 +
             C117 * C135 + C105 * C144) *
                C32542) *
               C32554 * C530 -
           ((C117 * C328 + C105 * C348 + C116 * C329 + C104 * C349 +
             C115 * C330 + C103 * C350 + C114 * C331 + C102 * C351 +
             C113 * C332 + C101 * C352) *
                C32542 +
            (C117 * C318 + C105 * C333 + C116 * C319 + C104 * C334 +
             C115 * C320 + C103 * C335 + C114 * C321 + C102 * C336 +
             C113 * C322 + C101 * C337) *
                C118) *
               C32554 * C531) *
              C32499 * C442 +
          (((C113 * C321 + C101 * C336 + C114 * C320 + C102 * C335 +
             C115 * C319 + C103 * C334 + C116 * C318 + C104 * C333 +
             C117 * C532 + C105 * C533) *
                C118 +
            (C113 * C331 + C101 * C351 + C114 * C330 + C102 * C350 +
             C115 * C329 + C103 * C349 + C116 * C328 + C104 * C348 +
             C117 * C534 + C105 * C535) *
                C32542) *
               C32554 * C531 -
           ((C117 * C136 + C105 * C145 + C116 * C135 + C104 * C144 +
             C115 * C134 + C103 * C143 + C114 * C133 + C102 * C142 +
             C113 * C132 + C101 * C141) *
                C32542 +
            (C117 * C124 + C105 * C137 + C116 * C123 + C104 * C130 +
             C115 * C122 + C103 * C129 + C114 * C121 + C102 * C128 +
             C113 * C120 + C101 * C127) *
                C118) *
               C32554 * C530) *
              C32499 * C443)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C5270 * C119 + C32858 * C126 + C5271 * C120 + C32845 * C127 +
             C5272 * C121 + C32815 * C128) *
                C5273 +
            (C5270 * C131 + C32858 * C140 + C5271 * C132 + C32845 * C141 +
             C5272 * C133 + C32815 * C142) *
                C5267 +
            (C5423 + C5424 + C5425) * C5274 + (C5426 + C5427 + C5428) * C5268 +
            C5443 * C5275 + C5444 * C32826) *
               C32554 * C530 -
           ((C5272 * C1071 + C32815 * C1089 + C5271 * C1072 + C32845 * C1090 +
             C5270 * C1073 + C32858 * C1091) *
                C32826 +
            (C5272 * C1062 + C32815 * C1074 + C5271 * C1063 + C32845 * C1075 +
             C5270 * C1064 + C32858 * C1076) *
                C5275 +
            (C5272 * C630 + C32815 * C635 + C5271 * C629 + C32845 * C634 +
             C5270 * C628 + C32858 * C633) *
                C5268 +
            (C5272 * C620 + C32815 * C625 + C5271 * C619 + C32845 * C624 +
             C5270 * C618 + C32858 * C623) *
                C5274 +
            (C5272 * C330 + C32815 * C350 + C5271 * C331 + C32845 * C351 +
             C5270 * C332 + C32858 * C352) *
                C5267 +
            (C5272 * C320 + C32815 * C335 + C5271 * C321 + C32845 * C336 +
             C5270 * C322 + C32858 * C337) *
                C5273) *
               C32554 * C531) *
              C32499 * C442 +
          (((C5270 * C321 + C32858 * C336 + C5271 * C320 + C32845 * C335 +
             C5272 * C319 + C32815 * C334) *
                C5273 +
            (C5270 * C331 + C32858 * C351 + C5271 * C330 + C32845 * C350 +
             C5272 * C329 + C32815 * C349) *
                C5267 +
            (C5270 * C619 + C32858 * C624 + C5271 * C620 + C32845 * C625 +
             C5272 * C621 + C32815 * C626) *
                C5274 +
            (C5270 * C629 + C32858 * C634 + C5271 * C630 + C32845 * C635 +
             C5272 * C631 + C32815 * C636) *
                C5268 +
            (C5270 * C1063 + C32858 * C1075 + C5271 * C1062 + C32845 * C1074 +
             C5272 * C1430 + C32815 * C1431) *
                C5275 +
            (C5270 * C1072 + C32858 * C1090 + C5271 * C1071 + C32845 * C1089 +
             C5272 * C1432 + C32815 * C1433) *
                C32826) *
               C32554 * C531 -
           ((C5736 + C5735 + C5734) * C32826 + (C5733 + C5732 + C5731) * C5275 +
            (C5730 + C5729 + C5728) * C5268 + (C5727 + C5726 + C5725) * C5274 +
            (C5272 * C134 + C32815 * C143 + C5271 * C133 + C32845 * C142 +
             C5270 * C132 + C32858 * C141) *
                C5267 +
            (C5272 * C122 + C32815 * C129 + C5271 * C121 + C32845 * C128 +
             C5270 * C120 + C32858 * C127) *
                C5273) *
               C32554 * C530) *
              C32499 * C443)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C6132 * C119 + C32450 * C126) * C6133 +
            (C6132 * C131 + C32450 * C140) * C6127 + C6229 * C6134 +
            C6230 * C6128 + C6231 * C6135 + C6232 * C6129 + C6233 * C6136 +
            C6234 * C6130 + C6235 * C6137 + C6236 * C6131) *
               C32554 * C530 -
           ((C6132 * C6303 + C32450 * C6309) * C6131 +
            (C6132 * C6300 + C32450 * C6304) * C6137 +
            (C6132 * C1586 + C32450 * C1589) * C6130 +
            (C6132 * C1580 + C32450 * C1583) * C6136 +
            (C6132 * C1073 + C32450 * C1091) * C6129 +
            (C6132 * C1064 + C32450 * C1076) * C6135 +
            (C6132 * C628 + C32450 * C633) * C6128 +
            (C6132 * C618 + C32450 * C623) * C6134 +
            (C6132 * C332 + C32450 * C352) * C6127 +
            (C6132 * C322 + C32450 * C337) * C6133) *
               C32554 * C531) *
              C32499 * C442 +
          (((C6132 * C321 + C32450 * C336) * C6133 +
            (C6132 * C331 + C32450 * C351) * C6127 +
            (C6132 * C619 + C32450 * C624) * C6134 +
            (C6132 * C629 + C32450 * C634) * C6128 +
            (C6132 * C1063 + C32450 * C1075) * C6135 +
            (C6132 * C1072 + C32450 * C1090) * C6129 +
            (C6132 * C1581 + C32450 * C1584) * C6136 +
            (C6132 * C1587 + C32450 * C1590) * C6130 +
            (C6132 * C6504 + C32450 * C6505) * C6137 +
            (C6132 * C6506 + C32450 * C6507) * C6131) *
               C32554 * C531 -
           (C6422 * C6131 + C6421 * C6137 + C6420 * C6130 + C6419 * C6136 +
            C6418 * C6129 + C6417 * C6135 + C6416 * C6128 + C6415 * C6134 +
            (C6132 * C132 + C32450 * C141) * C6127 +
            (C6132 * C120 + C32450 * C127) * C6133) *
               C32554 * C530) *
              C32499 * C443)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C5270 * C119 + C32858 * C126 + C5271 * C120 + C32845 * C127 +
              C5272 * C121 + C32815 * C128) *
                 C118 +
             (C5270 * C131 + C32858 * C140 + C5271 * C132 + C32845 * C141 +
              C5272 * C133 + C32815 * C142) *
                 C32542) *
                C10305 +
            ((C10565 + C10566 + C10567) * C118 +
             (C10568 + C10569 + C10570) * C32542) *
                C10306 +
            C10589 * C32829) *
               C530 -
           (((C10577 + C10578 + C10579) * C32542 +
             (C10580 + C10581 + C10582) * C118) *
                C32829 +
            ((C10576 + C10575 + C10574) * C32542 +
             (C10573 + C10572 + C10571) * C118) *
                C10306 +
            ((C10570 + C10569 + C10568) * C32542 +
             (C10567 + C10566 + C10565) * C118) *
                C10305) *
               C531) *
              C32499 * C442 +
          ((((C10906 + C10907 + C10908) * C118 +
             (C10909 + C10910 + C10911) * C32542) *
                C10305 +
            ((C10912 + C10913 + C10914) * C118 +
             (C10915 + C10916 + C10917) * C32542) *
                C10306 +
            ((C5270 * C1962 + C32858 * C1971 + C5271 * C1961 + C32845 * C1970 +
              C5272 * C2342 + C32815 * C2343) *
                 C118 +
             (C5270 * C1968 + C32858 * C1980 + C5271 * C1967 + C32845 * C1979 +
              C5272 * C2344 + C32815 * C2345) *
                 C32542) *
                C32829) *
               C531 -
           (((C10917 + C10916 + C10915) * C32542 +
             (C10914 + C10913 + C10912) * C118) *
                C32829 +
            ((C10911 + C10910 + C10909) * C32542 +
             (C10908 + C10907 + C10906) * C118) *
                C10306 +
            ((C5272 * C134 + C32815 * C143 + C5271 * C133 + C32845 * C142 +
              C5270 * C132 + C32858 * C141) *
                 C32542 +
             (C5272 * C122 + C32815 * C129 + C5271 * C121 + C32845 * C128 +
              C5270 * C120 + C32858 * C127) *
                 C118) *
                C10305) *
               C530) *
              C32499 * C443)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C6132 * C119 + C32450 * C126) * C757 +
             (C6132 * C131 + C32450 * C140) * C32861 + C6229 * C758 +
             C6230 * C32849 + C6231 * C759 + C6232 * C32826) *
                C10305 +
            (C11412 + C11413 + C11414 + C11415 + C11416 + C11417) * C10306 +
            C11434 * C32829) *
               C530 -
           ((C11424 + C11425 + C11426 + C11427 + C11428 + C11429) * C32829 +
            (C11423 + C11422 + C11421 + C11420 + C11419 + C11418) * C10306 +
            (C11417 + C11416 + C11415 + C11414 + C11413 + C11412) * C10305) *
               C531) *
              C32499 * C442 +
          (((C11727 + C11728 + C11729 + C11730 + C11731 + C11732) * C10305 +
            (C11733 + C11734 + C11735 + C11736 + C11737 + C11738) * C10306 +
            ((C6132 * C1962 + C32450 * C1971) * C757 +
             (C6132 * C1968 + C32450 * C1980) * C32861 +
             (C6132 * C2529 + C32450 * C2532) * C758 +
             (C6132 * C2535 + C32450 * C2538) * C32849 +
             (C6132 * C7351 + C32450 * C7352) * C759 +
             (C6132 * C7353 + C32450 * C7354) * C32826) *
                C32829) *
               C531 -
           ((C11738 + C11737 + C11736 + C11735 + C11734 + C11733) * C32829 +
            (C11732 + C11731 + C11730 + C11729 + C11728 + C11727) * C10306 +
            (C6418 * C32826 + C6417 * C759 + C6416 * C32849 + C6415 * C758 +
             (C6132 * C132 + C32450 * C141) * C32861 +
             (C6132 * C120 + C32450 * C127) * C757) *
                C10305) *
               C530) *
              C32499 * C443)) /
            (p * q * std::sqrt(p + q));
    d2ee[74] +=
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C127 +
            C115 * C121 + C103 * C128 + C116 * C122 + C104 * C129 +
            C117 * C123 + C105 * C130) *
               C118 +
           (C113 * C131 + C101 * C140 + C114 * C132 + C102 * C141 +
            C115 * C133 + C103 * C142 + C116 * C134 + C104 * C143 +
            C117 * C135 + C105 * C144) *
               C32542) *
              C32554 * C32513 * C209 -
          ((C117 * C223 + C105 * C243 + C116 * C224 + C104 * C244 +
            C115 * C225 + C103 * C245 + C114 * C226 + C102 * C246 +
            C113 * C227 + C101 * C247) *
               C32542 +
           (C117 * C213 + C105 * C228 + C116 * C214 + C104 * C229 +
            C115 * C215 + C103 * C230 + C114 * C216 + C102 * C231 +
            C113 * C217 + C101 * C232) *
               C118) *
              C32554 * C32513 * C210 +
          ((C113 * C218 + C101 * C233 + C114 * C219 + C102 * C234 +
            C115 * C220 + C103 * C235 + C116 * C221 + C104 * C236 +
            C117 * C222 + C105 * C237) *
               C118 +
           (C113 * C238 + C101 * C248 + C114 * C239 + C102 * C249 +
            C115 * C240 + C103 * C250 + C116 * C241 + C104 * C251 +
            C117 * C242 + C105 * C252) *
               C32542) *
              C32554 * C32513 * C211) *
         C32487) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C127 +
            C115 * C121 + C103 * C128 + C116 * C122 + C104 * C129 +
            C117 * C123 + C105 * C130) *
               C118 +
           (C113 * C131 + C101 * C140 + C114 * C132 + C102 * C141 +
            C115 * C133 + C103 * C142 + C116 * C134 + C104 * C143 +
            C117 * C135 + C105 * C144) *
               C32542) *
              C32554 * C32513 * C32499 * C110 -
          ((C117 * C136 + C105 * C145 + C116 * C135 + C104 * C144 +
            C115 * C134 + C103 * C143 + C114 * C133 + C102 * C142 +
            C113 * C132 + C101 * C141) *
               C32542 +
           (C117 * C124 + C105 * C137 + C116 * C123 + C104 * C130 +
            C115 * C122 + C103 * C129 + C114 * C121 + C102 * C128 +
            C113 * C120 + C101 * C127) *
               C118) *
              C32554 * C32513 * C32499 * C111 +
          ((C113 * C121 + C101 * C128 + C114 * C122 + C102 * C129 +
            C115 * C123 + C103 * C130 + C116 * C124 + C104 * C137 +
            C117 * C125 + C105 * C138) *
               C118 +
           (C113 * C133 + C101 * C142 + C114 * C134 + C102 * C143 +
            C115 * C135 + C103 * C144 + C116 * C136 + C104 * C145 +
            C117 * C139 + C105 * C146) *
               C32542) *
              C32554 * C32513 * C32499 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C754 * C119 + C748 * C126 + C755 * C120 + C749 * C127 +
            C756 * C121 + C32815 * C128) *
               C757 +
           (C754 * C131 + C748 * C140 + C755 * C132 + C749 * C141 +
            C756 * C133 + C32815 * C142) *
               C32861 +
           (C754 * C217 + C748 * C232 + C755 * C216 + C749 * C231 +
            C756 * C215 + C32815 * C230) *
               C758 +
           (C754 * C227 + C748 * C247 + C755 * C226 + C749 * C246 +
            C756 * C225 + C32815 * C245) *
               C32849 +
           (C754 * C218 + C748 * C233 + C755 * C219 + C749 * C234 +
            C756 * C220 + C32815 * C235) *
               C759 +
           (C754 * C238 + C748 * C248 + C755 * C239 + C749 * C249 +
            C756 * C240 + C32815 * C250) *
               C32826) *
              C32554 * C32513 * C32499 * C110 -
          ((C756 * C241 + C32815 * C251 + C755 * C240 + C749 * C250 +
            C754 * C239 + C748 * C249) *
               C32826 +
           (C756 * C221 + C32815 * C236 + C755 * C220 + C749 * C235 +
            C754 * C219 + C748 * C234) *
               C759 +
           (C756 * C224 + C32815 * C244 + C755 * C225 + C749 * C245 +
            C754 * C226 + C748 * C246) *
               C32849 +
           (C756 * C214 + C32815 * C229 + C755 * C215 + C749 * C230 +
            C754 * C216 + C748 * C231) *
               C758 +
           (C756 * C134 + C32815 * C143 + C755 * C133 + C749 * C142 +
            C754 * C132 + C748 * C141) *
               C32861 +
           (C756 * C122 + C32815 * C129 + C755 * C121 + C749 * C128 +
            C754 * C120 + C748 * C127) *
               C757) *
              C32554 * C32513 * C32499 * C111 +
          ((C754 * C121 + C748 * C128 + C755 * C122 + C749 * C129 +
            C756 * C123 + C32815 * C130) *
               C757 +
           (C754 * C133 + C748 * C142 + C755 * C134 + C749 * C143 +
            C756 * C135 + C32815 * C144) *
               C32861 +
           (C754 * C215 + C748 * C230 + C755 * C214 + C749 * C229 +
            C756 * C213 + C32815 * C228) *
               C758 +
           (C754 * C225 + C748 * C245 + C755 * C224 + C749 * C244 +
            C756 * C223 + C32815 * C243) *
               C32849 +
           (C754 * C220 + C748 * C235 + C755 * C221 + C749 * C236 +
            C756 * C222 + C32815 * C237) *
               C759 +
           (C754 * C240 + C748 * C250 + C755 * C241 + C749 * C251 +
            C756 * C242 + C32815 * C252) *
               C32826) *
              C32554 * C32513 * C32499 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C754 * C119 + C748 * C126 + C755 * C120 + C749 * C127 +
            C756 * C121 + C32815 * C128) *
               C757 +
           (C754 * C131 + C748 * C140 + C755 * C132 + C749 * C141 +
            C756 * C133 + C32815 * C142) *
               C32861 +
           (C931 + C932 + C933) * C758 + (C934 + C935 + C936) * C32849 +
           C951 * C759 + C952 * C32826) *
              C32554 * C32513 * C209 -
          ((C943 + C944 + C945) * C32826 + (C946 + C947 + C948) * C759 +
           (C942 + C941 + C940) * C32849 + (C939 + C938 + C937) * C758 +
           (C936 + C935 + C934) * C32861 + (C933 + C932 + C931) * C757) *
              C32554 * C32513 * C210 +
          (C951 * C757 + C952 * C32861 + (C948 + C947 + C946) * C758 +
           (C945 + C944 + C943) * C32849 +
           (C754 * C873 + C748 * C882 + C755 * C874 + C749 * C883 +
            C756 * C875 + C32815 * C884) *
               C759 +
           (C754 * C885 + C748 * C891 + C755 * C886 + C749 * C892 +
            C756 * C887 + C32815 * C893) *
               C32826) *
              C32554 * C32513 * C211) *
         C32487) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C5270 * C119 + C32858 * C126 + C5271 * C120 + C32845 * C127 +
            C5272 * C121 + C32815 * C128) *
               C5273 +
           (C5270 * C131 + C32858 * C140 + C5271 * C132 + C32845 * C141 +
            C5272 * C133 + C32815 * C142) *
               C5267 +
           (C5270 * C217 + C32858 * C232 + C5271 * C216 + C32845 * C231 +
            C5272 * C215 + C32815 * C230) *
               C5274 +
           (C5270 * C227 + C32858 * C247 + C5271 * C226 + C32845 * C246 +
            C5272 * C225 + C32815 * C245) *
               C5268 +
           (C5270 * C218 + C32858 * C233 + C5271 * C219 + C32845 * C234 +
            C5272 * C220 + C32815 * C235) *
               C5275 +
           (C5270 * C238 + C32858 * C248 + C5271 * C239 + C32845 * C249 +
            C5272 * C240 + C32815 * C250) *
               C32826) *
              C32554 * C32513 * C32499 * C110 -
          ((C5272 * C241 + C32815 * C251 + C5271 * C240 + C32845 * C250 +
            C5270 * C239 + C32858 * C249) *
               C32826 +
           (C5272 * C221 + C32815 * C236 + C5271 * C220 + C32845 * C235 +
            C5270 * C219 + C32858 * C234) *
               C5275 +
           (C5272 * C224 + C32815 * C244 + C5271 * C225 + C32845 * C245 +
            C5270 * C226 + C32858 * C246) *
               C5268 +
           (C5272 * C214 + C32815 * C229 + C5271 * C215 + C32845 * C230 +
            C5270 * C216 + C32858 * C231) *
               C5274 +
           (C5272 * C134 + C32815 * C143 + C5271 * C133 + C32845 * C142 +
            C5270 * C132 + C32858 * C141) *
               C5267 +
           (C5272 * C122 + C32815 * C129 + C5271 * C121 + C32845 * C128 +
            C5270 * C120 + C32858 * C127) *
               C5273) *
              C32554 * C32513 * C32499 * C111 +
          ((C5270 * C121 + C32858 * C128 + C5271 * C122 + C32845 * C129 +
            C5272 * C123 + C32815 * C130) *
               C5273 +
           (C5270 * C133 + C32858 * C142 + C5271 * C134 + C32845 * C143 +
            C5272 * C135 + C32815 * C144) *
               C5267 +
           (C5270 * C215 + C32858 * C230 + C5271 * C214 + C32845 * C229 +
            C5272 * C213 + C32815 * C228) *
               C5274 +
           (C5270 * C225 + C32858 * C245 + C5271 * C224 + C32845 * C244 +
            C5272 * C223 + C32815 * C243) *
               C5268 +
           (C5270 * C220 + C32858 * C235 + C5271 * C221 + C32845 * C236 +
            C5272 * C222 + C32815 * C237) *
               C5275 +
           (C5270 * C240 + C32858 * C250 + C5271 * C241 + C32845 * C251 +
            C5272 * C242 + C32815 * C252) *
               C32826) *
              C32554 * C32513 * C32499 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C5270 * C119 + C32858 * C126 + C5271 * C120 + C32845 * C127 +
            C5272 * C121 + C32815 * C128) *
               C5273 +
           (C5270 * C131 + C32858 * C140 + C5271 * C132 + C32845 * C141 +
            C5272 * C133 + C32815 * C142) *
               C5267 +
           (C5423 + C5424 + C5425) * C5274 + (C5426 + C5427 + C5428) * C5268 +
           C5443 * C5275 + C5444 * C32826) *
              C32554 * C32513 * C209 -
          ((C5435 + C5436 + C5437) * C32826 + (C5438 + C5439 + C5440) * C5275 +
           (C5434 + C5433 + C5432) * C5268 + (C5431 + C5430 + C5429) * C5274 +
           (C5428 + C5427 + C5426) * C5267 + (C5425 + C5424 + C5423) * C5273) *
              C32554 * C32513 * C210 +
          (C5443 * C5273 + C5444 * C5267 + (C5440 + C5439 + C5438) * C5274 +
           (C5437 + C5436 + C5435) * C5268 +
           (C5270 * C873 + C32858 * C882 + C5271 * C874 + C32845 * C883 +
            C5272 * C875 + C32815 * C884) *
               C5275 +
           (C5270 * C885 + C32858 * C891 + C5271 * C886 + C32845 * C892 +
            C5272 * C887 + C32815 * C893) *
               C32826) *
              C32554 * C32513 * C211) *
         C32487) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C6132 * C119 + C32450 * C126) * C6133 +
           (C6132 * C131 + C32450 * C140) * C6127 +
           (C6132 * C217 + C32450 * C232) * C6134 +
           (C6132 * C227 + C32450 * C247) * C6128 +
           (C6132 * C218 + C32450 * C233) * C6135 +
           (C6132 * C238 + C32450 * C248) * C6129 +
           (C6132 * C872 + C32450 * C881) * C6136 +
           (C6132 * C878 + C32450 * C890) * C6130 +
           (C6132 * C873 + C32450 * C882) * C6137 +
           (C6132 * C885 + C32450 * C891) * C6131) *
              C32554 * C32513 * C32499 * C110 -
          ((C6132 * C886 + C32450 * C892) * C6131 +
           (C6132 * C874 + C32450 * C883) * C6137 +
           (C6132 * C877 + C32450 * C889) * C6130 +
           (C6132 * C871 + C32450 * C880) * C6136 +
           (C6132 * C239 + C32450 * C249) * C6129 +
           (C6132 * C219 + C32450 * C234) * C6135 +
           (C6132 * C226 + C32450 * C246) * C6128 +
           (C6132 * C216 + C32450 * C231) * C6134 +
           (C6132 * C132 + C32450 * C141) * C6127 +
           (C6132 * C120 + C32450 * C127) * C6133) *
              C32554 * C32513 * C32499 * C111 +
          ((C6132 * C121 + C32450 * C128) * C6133 +
           (C6132 * C133 + C32450 * C142) * C6127 +
           (C6132 * C215 + C32450 * C230) * C6134 +
           (C6132 * C225 + C32450 * C245) * C6128 +
           (C6132 * C220 + C32450 * C235) * C6135 +
           (C6132 * C240 + C32450 * C250) * C6129 +
           (C6132 * C870 + C32450 * C879) * C6136 +
           (C6132 * C876 + C32450 * C888) * C6130 +
           (C6132 * C875 + C32450 * C884) * C6137 +
           (C6132 * C887 + C32450 * C893) * C6131) *
              C32554 * C32513 * C32499 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C6132 * C119 + C32450 * C126) * C6133 +
           (C6132 * C131 + C32450 * C140) * C6127 + C6229 * C6134 +
           C6230 * C6128 + C6231 * C6135 + C6232 * C6129 + C6233 * C6136 +
           C6234 * C6130 + C6235 * C6137 + C6236 * C6131) *
              C32554 * C32513 * C209 -
          (C6237 * C6131 + C6238 * C6137 + C6236 * C6130 + C6235 * C6136 +
           C6234 * C6129 + C6233 * C6135 + C6232 * C6128 + C6231 * C6134 +
           C6230 * C6127 + C6229 * C6133) *
              C32554 * C32513 * C210 +
          (C6231 * C6133 + C6232 * C6127 + C6233 * C6134 + C6234 * C6128 +
           C6235 * C6135 + C6236 * C6129 + C6238 * C6136 + C6237 * C6130 +
           (C6132 * C6201 + C32450 * C6204) * C6137 +
           (C6132 * C6205 + C32450 * C6207) * C6131) *
              C32554 * C32513 * C211) *
         C32487) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C5270 * C119 + C32858 * C126 + C5271 * C120 + C32845 * C127 +
             C5272 * C121 + C32815 * C128) *
                C118 +
            (C5270 * C131 + C32858 * C140 + C5271 * C132 + C32845 * C141 +
             C5272 * C133 + C32815 * C142) *
                C32542) *
               C10305 +
           ((C5270 * C322 + C32858 * C337 + C5271 * C321 + C32845 * C336 +
             C5272 * C320 + C32815 * C335) *
                C118 +
            (C5270 * C332 + C32858 * C352 + C5271 * C331 + C32845 * C351 +
             C5272 * C330 + C32815 * C350) *
                C32542) *
               C10306 +
           ((C5270 * C323 + C32858 * C338 + C5271 * C324 + C32845 * C339 +
             C5272 * C325 + C32815 * C340) *
                C118 +
            (C5270 * C343 + C32858 * C353 + C5271 * C344 + C32845 * C354 +
             C5272 * C345 + C32815 * C355) *
                C32542) *
               C32829) *
              C32513 * C32499 * C110 -
          (((C5272 * C346 + C32815 * C356 + C5271 * C345 + C32845 * C355 +
             C5270 * C344 + C32858 * C354) *
                C32542 +
            (C5272 * C326 + C32815 * C341 + C5271 * C325 + C32845 * C340 +
             C5270 * C324 + C32858 * C339) *
                C118) *
               C32829 +
           ((C5272 * C329 + C32815 * C349 + C5271 * C330 + C32845 * C350 +
             C5270 * C331 + C32858 * C351) *
                C32542 +
            (C5272 * C319 + C32815 * C334 + C5271 * C320 + C32845 * C335 +
             C5270 * C321 + C32858 * C336) *
                C118) *
               C10306 +
           ((C5272 * C134 + C32815 * C143 + C5271 * C133 + C32845 * C142 +
             C5270 * C132 + C32858 * C141) *
                C32542 +
            (C5272 * C122 + C32815 * C129 + C5271 * C121 + C32845 * C128 +
             C5270 * C120 + C32858 * C127) *
                C118) *
               C10305) *
              C32513 * C32499 * C111 +
          (((C5270 * C121 + C32858 * C128 + C5271 * C122 + C32845 * C129 +
             C5272 * C123 + C32815 * C130) *
                C118 +
            (C5270 * C133 + C32858 * C142 + C5271 * C134 + C32845 * C143 +
             C5272 * C135 + C32815 * C144) *
                C32542) *
               C10305 +
           ((C5270 * C320 + C32858 * C335 + C5271 * C319 + C32845 * C334 +
             C5272 * C318 + C32815 * C333) *
                C118 +
            (C5270 * C330 + C32858 * C350 + C5271 * C329 + C32845 * C349 +
             C5272 * C328 + C32815 * C348) *
                C32542) *
               C10306 +
           ((C5270 * C325 + C32858 * C340 + C5271 * C326 + C32845 * C341 +
             C5272 * C327 + C32815 * C342) *
                C118 +
            (C5270 * C345 + C32858 * C355 + C5271 * C346 + C32845 * C356 +
             C5272 * C347 + C32815 * C357) *
                C32542) *
               C32829) *
              C32513 * C32499 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C5270 * C119 + C32858 * C126 + C5271 * C120 + C32845 * C127 +
             C5272 * C121 + C32815 * C128) *
                C118 +
            (C5270 * C131 + C32858 * C140 + C5271 * C132 + C32845 * C141 +
             C5272 * C133 + C32815 * C142) *
                C32542) *
               C10305 +
           ((C5270 * C322 + C32858 * C337 + C5271 * C321 + C32845 * C336 +
             C5272 * C320 + C32815 * C335) *
                C118 +
            (C5270 * C332 + C32858 * C352 + C5271 * C331 + C32845 * C351 +
             C5272 * C330 + C32815 * C350) *
                C32542) *
               C10306 +
           ((C5270 * C323 + C32858 * C338 + C5271 * C324 + C32845 * C339 +
             C5272 * C325 + C32815 * C340) *
                C118 +
            (C5270 * C343 + C32858 * C353 + C5271 * C344 + C32845 * C354 +
             C5272 * C345 + C32815 * C355) *
                C32542) *
               C32829) *
              C32513 * C209 -
          (((C5272 * C1082 + C32815 * C1094 + C5271 * C1081 + C32845 * C1093 +
             C5270 * C1080 + C32858 * C1092) *
                C32542 +
            (C5272 * C1067 + C32815 * C1079 + C5271 * C1066 + C32845 * C1078 +
             C5270 * C1065 + C32858 * C1077) *
                C118) *
               C32829 +
           ((C6059 + C6060 + C6061) * C32542 + (C6062 + C6063 + C6064) * C118) *
               C10306 +
           ((C5428 + C5427 + C5426) * C32542 + (C5425 + C5424 + C5423) * C118) *
               C10305) *
              C32513 * C210 +
          ((C5443 * C118 + C5444 * C32542) * C10305 +
           ((C6058 + C6057 + C6056) * C118 + (C6055 + C6054 + C6053) * C32542) *
               C10306 +
           ((C5270 * C1068 + C32858 * C1083 + C5271 * C1069 + C32845 * C1084 +
             C5272 * C1070 + C32815 * C1085) *
                C118 +
            (C5270 * C1086 + C32858 * C1095 + C5271 * C1087 + C32845 * C1096 +
             C5272 * C1088 + C32815 * C1097) *
                C32542) *
               C32829) *
              C32513 * C211) *
         C32487) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C6132 * C119 + C32450 * C126) * C757 +
            (C6132 * C131 + C32450 * C140) * C32861 + C6229 * C758 +
            C6230 * C32849 + C6231 * C759 + C6232 * C32826) *
               C10305 +
           (C7007 * C757 + C7008 * C32861 + C6618 * C758 + C6617 * C32849 +
            C6616 * C759 + C6615 * C32826) *
               C10306 +
           (C7009 * C757 + C7010 * C32861 + C6851 * C758 + C6852 * C32849 +
            C6853 * C759 + C6854 * C32826) *
               C32829) *
              C32513 * C32499 * C110 -
          ((C7205 * C32826 + C7204 * C759 + C7203 * C32849 + C7202 * C758 +
            C7375 * C32861 + C7374 * C757) *
               C32829 +
           (C7201 * C32826 + C7200 * C759 + C7199 * C32849 + C7198 * C758 +
            C7373 * C32861 + C7372 * C757) *
               C10306 +
           (C6418 * C32826 + C6417 * C759 + C6416 * C32849 + C6415 * C758 +
            (C6132 * C132 + C32450 * C141) * C32861 +
            (C6132 * C120 + C32450 * C127) * C757) *
               C10305) *
              C32513 * C32499 * C111 +
          (((C6132 * C121 + C32450 * C128) * C757 +
            (C6132 * C133 + C32450 * C142) * C32861 +
            (C6132 * C215 + C32450 * C230) * C758 +
            (C6132 * C225 + C32450 * C245) * C32849 +
            (C6132 * C220 + C32450 * C235) * C759 +
            (C6132 * C240 + C32450 * C250) * C32826) *
               C10305 +
           ((C6132 * C320 + C32450 * C335) * C757 +
            (C6132 * C330 + C32450 * C350) * C32861 +
            (C6132 * C620 + C32450 * C625) * C758 +
            (C6132 * C630 + C32450 * C635) * C32849 +
            (C6132 * C1062 + C32450 * C1074) * C759 +
            (C6132 * C1071 + C32450 * C1089) * C32826) *
               C10306 +
           ((C6132 * C325 + C32450 * C340) * C757 +
            (C6132 * C345 + C32450 * C355) * C32861 +
            (C6132 * C1067 + C32450 * C1079) * C758 +
            (C6132 * C1082 + C32450 * C1094) * C32849 +
            (C6132 * C1070 + C32450 * C1085) * C759 +
            (C6132 * C1088 + C32450 * C1097) * C32826) *
               C32829) *
              C32513 * C32499 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C6132 * C119 + C32450 * C126) * C757 +
            (C6132 * C131 + C32450 * C140) * C32861 + C6229 * C758 +
            C6230 * C32849 + C6231 * C759 + C6232 * C32826) *
               C10305 +
           (C7007 * C757 + C7008 * C32861 + C6618 * C758 + C6617 * C32849 +
            C6616 * C759 + C6615 * C32826) *
               C10306 +
           (C7009 * C757 + C7010 * C32861 + C6851 * C758 + C6852 * C32849 +
            C6853 * C759 + C6854 * C32826) *
               C32829) *
              C32513 * C209 -
          ((C6855 * C32826 + C6856 * C759 + C6854 * C32849 + C6853 * C758 +
            C6852 * C32861 + C6851 * C757) *
               C32829 +
           (C6613 * C32826 + C6614 * C759 + C6615 * C32849 + C6616 * C758 +
            C6617 * C32861 + C6618 * C757) *
               C10306 +
           (C6234 * C32826 + C6233 * C759 + C6232 * C32849 + C6231 * C758 +
            C6230 * C32861 + C6229 * C757) *
               C10305) *
              C32513 * C210 +
          ((C6231 * C757 + C6232 * C32861 + C6233 * C758 + C6234 * C32849 +
            C6235 * C759 + C6236 * C32826) *
               C10305 +
           (C6616 * C757 + C6615 * C32861 + C6614 * C758 + C6613 * C32849 +
            C6612 * C759 + C6611 * C32826) *
               C10306 +
           (C6853 * C757 + C6854 * C32861 + C6856 * C758 + C6855 * C32849 +
            (C6132 * C6302 + C32450 * C6307) * C759 +
            (C6132 * C6308 + C32450 * C6311) * C32826) *
               C32829) *
              C32513 * C211) *
         C32487) /
            (p * q * std::sqrt(p + q));
    d2ee[75] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                 (((((C31567 * C119 + C32455 * C126 + C31563 * C120 +
                      C32463 * C127 + C31573 * C121 + C17830 * C128) *
                         C2666 +
                     (C31567 * C131 + C32455 * C140 + C31563 * C132 +
                      C32463 * C141 + C31573 * C133 + C17830 * C142) *
                         C32795 +
                     (C17987 + C17988 + C17989) * C2667 +
                     (C17990 + C17991 + C17992) * C32601) *
                        C20880 +
                    ((C19103 + C19104 + C19105) * C2666 +
                     (C19106 + C19107 + C19108) * C32795 + C19743 * C2667 +
                     C19744 * C32601) *
                        C32641) *
                       C32513 * C440 -
                   (((C18617 + C18618 + C18619) * C32601 +
                     (C18620 + C18621 + C18622) * C2667 + C19745 * C32795 +
                     C19746 * C2666) *
                        C32641 +
                    ((C17998 + C17997 + C17996) * C32601 +
                     (C17995 + C17994 + C17993) * C2667 +
                     (C17992 + C17991 + C17990) * C32795 +
                     (C17989 + C17988 + C17987) * C2666) *
                        C20880) *
                       C32513 * C441) *
                      C442 +
                  ((((C18289 + C18290 + C18291) * C2666 +
                     (C18292 + C18293 + C18294) * C32795 +
                     (C18295 + C18296 + C18297) * C2667 +
                     (C18298 + C18299 + C18300) * C32601) *
                        C20880 +
                    ((C19327 + C19328 + C19329) * C2666 +
                     (C19330 + C19331 + C19332) * C32795 +
                     (C31567 * C1063 + C32455 * C1075 + C31563 * C1062 +
                      C32463 * C1074 + C31573 * C1430 + C17830 * C1431) *
                         C2667 +
                     (C31567 * C1072 + C32455 * C1090 + C31563 * C1071 +
                      C32463 * C1089 + C31573 * C1432 + C17830 * C1433) *
                         C32601) *
                        C32641) *
                       C32513 * C441 -
                   (((C19332 + C19331 + C19330) * C32601 +
                     (C19329 + C19328 + C19327) * C2667 +
                     (C19544 + C19543 + C19542) * C32795 +
                     (C19541 + C19540 + C19539) * C2666) *
                        C32641 +
                    ((C18294 + C18293 + C18292) * C32601 +
                     (C18291 + C18290 + C18289) * C2667 +
                     (C31573 * C134 + C17830 * C143 + C31563 * C133 +
                      C32463 * C142 + C31567 * C132 + C32455 * C141) *
                         C32795 +
                     (C31573 * C122 + C17830 * C129 + C31563 * C121 +
                      C32463 * C128 + C31567 * C120 + C32455 * C127) *
                         C2666) *
                        C20880) *
                       C32513 * C440) *
                      C443)) /
                (p * q * std::sqrt(p + q));
    d2ee[76] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                 (((((C31567 * C119 + C32455 * C126 + C31563 * C120 +
                      C32463 * C127 + C31573 * C121 + C17830 * C128) *
                         C2666 +
                     (C31567 * C131 + C32455 * C140 + C31563 * C132 +
                      C32463 * C141 + C31573 * C133 + C17830 * C142) *
                         C32795 +
                     (C17987 + C17988 + C17989) * C2667 +
                     (C17990 + C17991 + C17992) * C32601) *
                        C20880 +
                    ((C19103 + C19104 + C19105) * C2666 +
                     (C19106 + C19107 + C19108) * C32795 + C19743 * C2667 +
                     C19744 * C32601) *
                        C32641) *
                       C530 -
                   (((C19109 + C19110 + C19111) * C32601 +
                     (C19112 + C19113 + C19114) * C2667 +
                     (C19115 + C19116 + C19117) * C32795 +
                     (C19118 + C19119 + C19120) * C2666) *
                        C32641 +
                    (C19745 * C32601 + C19746 * C2667 +
                     (C19108 + C19107 + C19106) * C32795 +
                     (C19105 + C19104 + C19103) * C2666) *
                        C20880) *
                       C531) *
                      C440 +
                  (((C19743 * C2666 + C19744 * C32795 +
                     (C18622 + C18621 + C18620) * C2667 +
                     (C18619 + C18618 + C18617) * C32601) *
                        C20880 +
                    ((C19114 + C19113 + C19112) * C2666 +
                     (C19111 + C19110 + C19109) * C32795 +
                     (C31567 * C1068 + C32455 * C1083 + C31563 * C1069 +
                      C32463 * C1084 + C31573 * C1070 + C17830 * C1085) *
                         C2667 +
                     (C31567 * C1086 + C32455 * C1095 + C31563 * C1087 +
                      C32463 * C1096 + C31573 * C1088 + C17830 * C1097) *
                         C32601) *
                        C32641) *
                       C531 -
                   (((C18617 + C18618 + C18619) * C32601 +
                     (C18620 + C18621 + C18622) * C2667 + C19745 * C32795 +
                     C19746 * C2666) *
                        C32641 +
                    ((C17998 + C17997 + C17996) * C32601 +
                     (C17995 + C17994 + C17993) * C2667 +
                     (C17992 + C17991 + C17990) * C32795 +
                     (C17989 + C17988 + C17987) * C2666) *
                        C20880) *
                       C530) *
                      C441) *
                 C32487) /
                (p * q * std::sqrt(p + q));
    d2ee[77] += (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C31567 * C119 + C32455 * C126 + C31563 * C120 +
                     C32463 * C127 + C31573 * C121 + C17830 * C128) *
                        C2666 +
                    (C31567 * C131 + C32455 * C140 + C31563 * C132 +
                     C32463 * C141 + C31573 * C133 + C17830 * C142) *
                        C32795 +
                    (C17987 + C17988 + C17989) * C2667 +
                    (C17990 + C17991 + C17992) * C32601) *
                       C20880 +
                   ((C19103 + C19104 + C19105) * C2666 +
                    (C19106 + C19107 + C19108) * C32795 + C19743 * C2667 +
                    C19744 * C32601) *
                       C32641) *
                      C32513 * C209 -
                  (((C18617 + C18618 + C18619) * C32601 +
                    (C18620 + C18621 + C18622) * C2667 + C19745 * C32795 +
                    C19746 * C2666) *
                       C32641 +
                   ((C17998 + C17997 + C17996) * C32601 +
                    (C17995 + C17994 + C17993) * C2667 +
                    (C17992 + C17991 + C17990) * C32795 +
                    (C17989 + C17988 + C17987) * C2666) *
                       C20880) *
                      C32513 * C210 +
                  ((C18007 * C2666 + C18008 * C32795 +
                    (C18004 + C18003 + C18002) * C2667 +
                    (C18001 + C18000 + C17999) * C32601) *
                       C20880 +
                   ((C18622 + C18621 + C18620) * C2666 +
                    (C18619 + C18618 + C18617) * C32795 +
                    (C31567 * C1580 + C32455 * C1583 + C31563 * C1581 +
                     C32463 * C1584 + C31573 * C1582 + C17830 * C1585) *
                        C2667 +
                    (C31567 * C1586 + C32455 * C1589 + C31563 * C1587 +
                     C32463 * C1590 + C31573 * C1588 + C17830 * C1591) *
                        C32601) *
                       C32641) *
                      C32513 * C211) *
                 C32487) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C31567 * C119 + C32455 * C126 + C31563 * C120 +
                     C32463 * C127 + C31573 * C121 + C17830 * C128) *
                        C2666 +
                    (C31567 * C131 + C32455 * C140 + C31563 * C132 +
                     C32463 * C141 + C31573 * C133 + C17830 * C142) *
                        C32795 +
                    (C17987 + C17988 + C17989) * C2667 +
                    (C17990 + C17991 + C17992) * C32601) *
                       C20880 +
                   ((C19103 + C19104 + C19105) * C2666 +
                    (C19106 + C19107 + C19108) * C32795 + C19743 * C2667 +
                    C19744 * C32601) *
                       C32641) *
                      C32513 * C32499 * C110 -
                  (((C19332 + C19331 + C19330) * C32601 +
                    (C19329 + C19328 + C19327) * C2667 +
                    (C19544 + C19543 + C19542) * C32795 +
                    (C19541 + C19540 + C19539) * C2666) *
                       C32641 +
                   ((C18294 + C18293 + C18292) * C32601 +
                    (C18291 + C18290 + C18289) * C2667 +
                    (C31573 * C134 + C17830 * C143 + C31563 * C133 +
                     C32463 * C142 + C31567 * C132 + C32455 * C141) *
                        C32795 +
                    (C31573 * C122 + C17830 * C129 + C31563 * C121 +
                     C32463 * C128 + C31567 * C120 + C32455 * C127) *
                        C2666) *
                       C20880) *
                      C32513 * C32499 * C111 +
                  (((C31567 * C121 + C32455 * C128 + C31563 * C122 +
                     C32463 * C129 + C31573 * C123 + C17830 * C130) *
                        C2666 +
                    (C31567 * C133 + C32455 * C142 + C31563 * C134 +
                     C32463 * C143 + C31573 * C135 + C17830 * C144) *
                        C32795 +
                    (C31567 * C215 + C32455 * C230 + C31563 * C214 +
                     C32463 * C229 + C31573 * C213 + C17830 * C228) *
                        C2667 +
                    (C31567 * C225 + C32455 * C245 + C31563 * C224 +
                     C32463 * C244 + C31573 * C223 + C17830 * C243) *
                        C32601) *
                       C20880 +
                   ((C31567 * C320 + C32455 * C335 + C31563 * C319 +
                     C32463 * C334 + C31573 * C318 + C17830 * C333) *
                        C2666 +
                    (C31567 * C330 + C32455 * C350 + C31563 * C329 +
                     C32463 * C349 + C31573 * C328 + C17830 * C348) *
                        C32795 +
                    (C31567 * C620 + C32455 * C625 + C31563 * C621 +
                     C32463 * C626 + C31573 * C622 + C17830 * C627) *
                        C2667 +
                    (C31567 * C630 + C32455 * C635 + C31563 * C631 +
                     C32463 * C636 + C31573 * C632 + C17830 * C637) *
                        C32601) *
                       C32641) *
                      C32513 * C32499 * C112)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((C31567 * C119 + C32455 * C126 + C31563 * C120 +
                     C32463 * C127 + C31573 * C121 + C17830 * C128) *
                        C2666 +
                    (C31567 * C131 + C32455 * C140 + C31563 * C132 +
                     C32463 * C141 + C31573 * C133 + C17830 * C142) *
                        C32795 +
                    (C17987 + C17988 + C17989) * C2667 +
                    (C17990 + C17991 + C17992) * C32601) *
                       C20880 +
                   ((C19103 + C19104 + C19105) * C2666 +
                    (C19106 + C19107 + C19108) * C32795 + C19743 * C2667 +
                    C19744 * C32601) *
                       C32641) *
                      C315 -
                  (((C19109 + C19110 + C19111) * C32601 +
                    (C19112 + C19113 + C19114) * C2667 +
                    (C19115 + C19116 + C19117) * C32795 +
                    (C19118 + C19119 + C19120) * C2666) *
                       C32641 +
                   (C19745 * C32601 + C19746 * C2667 +
                    (C19108 + C19107 + C19106) * C32795 +
                    (C19105 + C19104 + C19103) * C2666) *
                       C20880) *
                      C316 +
                  (((C19120 + C19119 + C19118) * C2666 +
                    (C19117 + C19116 + C19115) * C32795 +
                    (C19114 + C19113 + C19112) * C2667 +
                    (C19111 + C19110 + C19109) * C32601) *
                       C20880 +
                   ((C31567 * C1963 + C32455 * C1972 + C31563 * C1962 +
                     C32463 * C1971 + C31573 * C1961 + C17830 * C1970) *
                        C2666 +
                    (C31567 * C1969 + C32455 * C1981 + C31563 * C1968 +
                     C32463 * C1980 + C31573 * C1967 + C17830 * C1979) *
                        C32795 +
                    (C31567 * C2528 + C32455 * C2531 + C31563 * C2529 +
                     C32463 * C2532 + C31573 * C2530 + C17830 * C2533) *
                        C2667 +
                    (C31567 * C2534 + C32455 * C2537 + C31563 * C2535 +
                     C32463 * C2538 + C31573 * C2536 + C17830 * C2539) *
                        C32601) *
                       C32641) *
                      C317) *
                 C32499 * C32487) /
                    (p * q * std::sqrt(p + q));
    d2ee[78] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                 (((((C31567 * C119 + C32455 * C126 + C31563 * C120 +
                      C32463 * C127 + C31573 * C121 + C17830 * C128) *
                         C2666 +
                     (C31567 * C131 + C32455 * C140 + C31563 * C132 +
                      C32463 * C141 + C31573 * C133 + C17830 * C142) *
                         C32795 +
                     (C17987 + C17988 + C17989) * C2667 +
                     (C17990 + C17991 + C17992) * C32601) *
                        C20880 +
                    ((C19103 + C19104 + C19105) * C2666 +
                     (C19106 + C19107 + C19108) * C32795 + C19743 * C2667 +
                     C19744 * C32601) *
                        C32641) *
                       C530 -
                   (((C19109 + C19110 + C19111) * C32601 +
                     (C19112 + C19113 + C19114) * C2667 +
                     (C19115 + C19116 + C19117) * C32795 +
                     (C19118 + C19119 + C19120) * C2666) *
                        C32641 +
                    (C19745 * C32601 + C19746 * C2667 +
                     (C19108 + C19107 + C19106) * C32795 +
                     (C19105 + C19104 + C19103) * C2666) *
                        C20880) *
                       C531) *
                      C32499 * C442 +
                  ((((C19539 + C19540 + C19541) * C2666 +
                     (C19542 + C19543 + C19544) * C32795 +
                     (C19327 + C19328 + C19329) * C2667 +
                     (C19330 + C19331 + C19332) * C32601) *
                        C20880 +
                    ((C31567 * C324 + C32455 * C339 + C31563 * C325 +
                      C32463 * C340 + C31573 * C326 + C17830 * C341) *
                         C2666 +
                     (C31567 * C344 + C32455 * C354 + C31563 * C345 +
                      C32463 * C355 + C31573 * C346 + C17830 * C356) *
                         C32795 +
                     (C31567 * C1066 + C32455 * C1078 + C31563 * C1067 +
                      C32463 * C1079 + C31573 * C2192 + C17830 * C2193) *
                         C2667 +
                     (C31567 * C1081 + C32455 * C1093 + C31563 * C1082 +
                      C32463 * C1094 + C31573 * C2194 + C17830 * C2195) *
                         C32601) *
                        C32641) *
                       C531 -
                   (((C19332 + C19331 + C19330) * C32601 +
                     (C19329 + C19328 + C19327) * C2667 +
                     (C19544 + C19543 + C19542) * C32795 +
                     (C19541 + C19540 + C19539) * C2666) *
                        C32641 +
                    ((C18294 + C18293 + C18292) * C32601 +
                     (C18291 + C18290 + C18289) * C2667 +
                     (C31573 * C134 + C17830 * C143 + C31563 * C133 +
                      C32463 * C142 + C31567 * C132 + C32455 * C141) *
                         C32795 +
                     (C31573 * C122 + C17830 * C129 + C31563 * C121 +
                      C32463 * C128 + C31567 * C120 + C32455 * C127) *
                         C2666) *
                        C20880) *
                       C530) *
                      C32499 * C443)) /
                (p * q * std::sqrt(p + q));
    d2ee[79] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C31567 * C119 + C32455 * C126 + C31563 * C120 +
                     C32463 * C127 + C31573 * C121 + C17830 * C128) *
                        C2666 +
                    (C31567 * C131 + C32455 * C140 + C31563 * C132 +
                     C32463 * C141 + C31573 * C133 + C17830 * C142) *
                        C32795 +
                    (C17987 + C17988 + C17989) * C2667 +
                    (C17990 + C17991 + C17992) * C32601) *
                       C20880 +
                   ((C19103 + C19104 + C19105) * C2666 +
                    (C19106 + C19107 + C19108) * C32795 + C19743 * C2667 +
                    C19744 * C32601) *
                       C32641) *
                      C32513 * C32499 * C110 -
                  (((C19332 + C19331 + C19330) * C32601 +
                    (C19329 + C19328 + C19327) * C2667 +
                    (C19544 + C19543 + C19542) * C32795 +
                    (C19541 + C19540 + C19539) * C2666) *
                       C32641 +
                   ((C18294 + C18293 + C18292) * C32601 +
                    (C18291 + C18290 + C18289) * C2667 +
                    (C31573 * C134 + C17830 * C143 + C31563 * C133 +
                     C32463 * C142 + C31567 * C132 + C32455 * C141) *
                        C32795 +
                    (C31573 * C122 + C17830 * C129 + C31563 * C121 +
                     C32463 * C128 + C31567 * C120 + C32455 * C127) *
                        C2666) *
                       C20880) *
                      C32513 * C32499 * C111 +
                  (((C31567 * C121 + C32455 * C128 + C31563 * C122 +
                     C32463 * C129 + C31573 * C123 + C17830 * C130) *
                        C2666 +
                    (C31567 * C133 + C32455 * C142 + C31563 * C134 +
                     C32463 * C143 + C31573 * C135 + C17830 * C144) *
                        C32795 +
                    (C31567 * C215 + C32455 * C230 + C31563 * C214 +
                     C32463 * C229 + C31573 * C213 + C17830 * C228) *
                        C2667 +
                    (C31567 * C225 + C32455 * C245 + C31563 * C224 +
                     C32463 * C244 + C31573 * C223 + C17830 * C243) *
                        C32601) *
                       C20880 +
                   ((C31567 * C320 + C32455 * C335 + C31563 * C319 +
                     C32463 * C334 + C31573 * C318 + C17830 * C333) *
                        C2666 +
                    (C31567 * C330 + C32455 * C350 + C31563 * C329 +
                     C32463 * C349 + C31573 * C328 + C17830 * C348) *
                        C32795 +
                    (C31567 * C620 + C32455 * C625 + C31563 * C621 +
                     C32463 * C626 + C31573 * C622 + C17830 * C627) *
                        C2667 +
                    (C31567 * C630 + C32455 * C635 + C31563 * C631 +
                     C32463 * C636 + C31573 * C632 + C17830 * C637) *
                        C32601) *
                       C32641) *
                      C32513 * C32499 * C112)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C31567 * C119 + C32455 * C126 + C31563 * C120 +
                     C32463 * C127 + C31573 * C121 + C17830 * C128) *
                        C2666 +
                    (C31567 * C131 + C32455 * C140 + C31563 * C132 +
                     C32463 * C141 + C31573 * C133 + C17830 * C142) *
                        C32795 +
                    (C17987 + C17988 + C17989) * C2667 +
                    (C17990 + C17991 + C17992) * C32601) *
                       C20880 +
                   ((C19103 + C19104 + C19105) * C2666 +
                    (C19106 + C19107 + C19108) * C32795 + C19743 * C2667 +
                    C19744 * C32601) *
                       C32641) *
                      C32513 * C209 -
                  (((C18617 + C18618 + C18619) * C32601 +
                    (C18620 + C18621 + C18622) * C2667 + C19745 * C32795 +
                    C19746 * C2666) *
                       C32641 +
                   ((C17998 + C17997 + C17996) * C32601 +
                    (C17995 + C17994 + C17993) * C2667 +
                    (C17992 + C17991 + C17990) * C32795 +
                    (C17989 + C17988 + C17987) * C2666) *
                       C20880) *
                      C32513 * C210 +
                  ((C18007 * C2666 + C18008 * C32795 +
                    (C18004 + C18003 + C18002) * C2667 +
                    (C18001 + C18000 + C17999) * C32601) *
                       C20880 +
                   ((C18622 + C18621 + C18620) * C2666 +
                    (C18619 + C18618 + C18617) * C32795 +
                    (C31567 * C1580 + C32455 * C1583 + C31563 * C1581 +
                     C32463 * C1584 + C31573 * C1582 + C17830 * C1585) *
                        C2667 +
                    (C31567 * C1586 + C32455 * C1589 + C31563 * C1587 +
                     C32463 * C1590 + C31573 * C1588 + C17830 * C1591) *
                        C32601) *
                       C32641) *
                      C32513 * C211) *
                 C32487) /
                    (p * q * std::sqrt(p + q));
    d2ee[80] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C15845 * C119 + C15839 * C126 + C15846 * C120 + C32460 * C127) *
                 C2666 +
             (C15845 * C131 + C15839 * C140 + C15846 * C132 + C32460 * C141) *
                 C32795 +
             (C15982 + C15983) * C2667 + (C15984 + C15985) * C32601) *
                C32637 +
            ((C17058 + C17059) * C2666 + (C17060 + C17061) * C32795 +
             C17713 * C2667 + C17714 * C32601) *
                C32644 +
            C25559 * C24412) *
               C32513 * C440 -
           (((C16874 + C16875) * C32601 + (C16876 + C16877) * C2667 +
             C17715 * C32795 + C17716 * C2666) *
                C24412 +
            (C20781 * C32601 + C20782 * C2667 + C17717 * C32795 +
             C17718 * C2666) *
                C32644 +
            ((C15989 + C15988) * C32601 + (C15987 + C15986) * C2667 +
             (C15985 + C15984) * C32795 + (C15983 + C15982) * C2666) *
                C32637) *
               C32513 * C441) *
              C442 +
          ((((C16254 + C16255) * C2666 + (C16256 + C16257) * C32795 +
             (C16258 + C16259) * C2667 + (C16260 + C16261) * C32601) *
                C32637 +
            ((C17293 + C17294) * C2666 + (C17295 + C17296) * C32795 +
             (C20389 + C20390) * C2667 + (C20391 + C20392) * C32601) *
                C32644 +
            ((C17297 + C17298) * C2666 + (C17299 + C17300) * C32795 +
             (C15845 * C1069 + C15839 * C1084 + C15846 * C1070 +
              C32460 * C1085) *
                 C2667 +
             (C15845 * C1087 + C15839 * C1096 + C15846 * C1088 +
              C32460 * C1097) *
                 C32601) *
                C24412) *
               C32513 * C441 -
           (((C17300 + C17299) * C32601 + (C17298 + C17297) * C2667 +
             (C17518 + C17517) * C32795 + (C17516 + C17515) * C2666) *
                C24412 +
            ((C17296 + C17295) * C32601 + (C17294 + C17293) * C2667 +
             (C17514 + C17513) * C32795 + (C17512 + C17511) * C2666) *
                C32644 +
            ((C16257 + C16256) * C32601 + (C16255 + C16254) * C2667 +
             (C15846 * C133 + C32460 * C142 + C15845 * C132 + C15839 * C141) *
                 C32795 +
             (C15846 * C121 + C32460 * C128 + C15845 * C120 + C15839 * C127) *
                 C2666) *
                C32637) *
               C32513 * C440) *
              C443)) /
        (p * q * std::sqrt(p + q));
    d2ee[81] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C15845 * C119 + C15839 * C126 + C15846 * C120 + C32460 * C127) *
                 C2666 +
             (C15845 * C131 + C15839 * C140 + C15846 * C132 + C32460 * C141) *
                 C32795 +
             (C15982 + C15983) * C2667 + (C15984 + C15985) * C32601) *
                C32637 +
            ((C17058 + C17059) * C2666 + (C17060 + C17061) * C32795 +
             C17713 * C2667 + C17714 * C32601) *
                C32644 +
            C25559 * C24412) *
               C530 -
           (((C17068 + C17069) * C32601 + (C17070 + C17071) * C2667 +
             (C17072 + C17073) * C32795 + (C17074 + C17075) * C2666) *
                C24412 +
            (C17715 * C32601 + C17716 * C2667 + (C17065 + C17064) * C32795 +
             (C17063 + C17062) * C2666) *
                C32644 +
            (C17717 * C32601 + C17718 * C2667 + (C17061 + C17060) * C32795 +
             (C17059 + C17058) * C2666) *
                C32637) *
               C531) *
              C440 +
          (((C17713 * C2666 + C17714 * C32795 + C20039 * C2667 +
             C20040 * C32601) *
                C32637 +
            (C17040 * C2666 + C17041 * C32795 + (C16877 + C16876) * C2667 +
             (C16875 + C16874) * C32601) *
                C32644 +
            ((C17071 + C17070) * C2666 + (C17069 + C17068) * C32795 +
             (C15845 * C6966 + C15839 * C6970 + C15846 * C7351 +
              C32460 * C7352) *
                 C2667 +
             (C15845 * C6969 + C15839 * C6975 + C15846 * C7353 +
              C32460 * C7354) *
                 C32601) *
                C24412) *
               C531 -
           (((C16874 + C16875) * C32601 + (C16876 + C16877) * C2667 +
             C17715 * C32795 + C17716 * C2666) *
                C24412 +
            (C20781 * C32601 + C20782 * C2667 + C17717 * C32795 +
             C17718 * C2666) *
                C32644 +
            ((C15989 + C15988) * C32601 + (C15987 + C15986) * C2667 +
             (C15985 + C15984) * C32795 + (C15983 + C15982) * C2666) *
                C32637) *
               C530) *
              C441) *
         C32487) /
        (p * q * std::sqrt(p + q));
    d2ee[82] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C15845 * C119 + C15839 * C126 + C15846 * C120 + C32460 * C127) *
                C2666 +
            (C15845 * C131 + C15839 * C140 + C15846 * C132 + C32460 * C141) *
                C32795 +
            (C15982 + C15983) * C2667 + (C15984 + C15985) * C32601) *
               C32637 +
           ((C17058 + C17059) * C2666 + (C17060 + C17061) * C32795 +
            C17713 * C2667 + C17714 * C32601) *
               C32644 +
           (C17076 * C2666 + C17077 * C32795 + C17040 * C2667 +
            C17041 * C32601) *
               C24412) *
              C32513 * C209 -
          (((C16874 + C16875) * C32601 + (C16876 + C16877) * C2667 +
            C17715 * C32795 + C17716 * C2666) *
               C24412 +
           (C20781 * C32601 + C20782 * C2667 + C17717 * C32795 +
            C17718 * C2666) *
               C32644 +
           ((C15989 + C15988) * C32601 + (C15987 + C15986) * C2667 +
            (C15985 + C15984) * C32795 + (C15983 + C15982) * C2666) *
               C32637) *
              C32513 * C210 +
          ((C15998 * C2666 + C15999 * C32795 + C16000 * C2667 +
            C16001 * C32601) *
               C32637 +
           (C20039 * C2666 + C20040 * C32795 + (C16553 + C16552) * C2667 +
            (C16551 + C16550) * C32601) *
               C32644 +
           ((C16877 + C16876) * C2666 + (C16875 + C16874) * C32795 +
            (C15845 * C6301 + C15839 * C6305 + C15846 * C7177 +
             C32460 * C7178) *
                C2667 +
            (C15845 * C6306 + C15839 * C6310 + C15846 * C7179 +
             C32460 * C7180) *
                C32601) *
               C24412) *
              C32513 * C211) *
         C32487) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C15845 * C119 + C15839 * C126 + C15846 * C120 + C32460 * C127) *
                C2666 +
            (C15845 * C131 + C15839 * C140 + C15846 * C132 + C32460 * C141) *
                C32795 +
            (C15982 + C15983) * C2667 + (C15984 + C15985) * C32601) *
               C32637 +
           ((C17058 + C17059) * C2666 + (C17060 + C17061) * C32795 +
            C17713 * C2667 + C17714 * C32601) *
               C32644 +
           (C17076 * C2666 + C17077 * C32795 + C17040 * C2667 +
            C17041 * C32601) *
               C24412) *
              C32513 * C32499 * C110 -
          (((C17300 + C17299) * C32601 + (C17298 + C17297) * C2667 +
            (C17518 + C17517) * C32795 + (C17516 + C17515) * C2666) *
               C24412 +
           ((C17296 + C17295) * C32601 + (C17294 + C17293) * C2667 +
            (C17514 + C17513) * C32795 + (C17512 + C17511) * C2666) *
               C32644 +
           ((C16257 + C16256) * C32601 + (C16255 + C16254) * C2667 +
            (C15846 * C133 + C32460 * C142 + C15845 * C132 + C15839 * C141) *
                C32795 +
            (C15846 * C121 + C32460 * C128 + C15845 * C120 + C15839 * C127) *
                C2666) *
               C32637) *
              C32513 * C32499 * C111 +
          (((C15845 * C121 + C15839 * C128 + C15846 * C122 + C32460 * C129) *
                C2666 +
            (C15845 * C133 + C15839 * C142 + C15846 * C134 + C32460 * C143) *
                C32795 +
            (C15845 * C215 + C15839 * C230 + C15846 * C214 + C32460 * C229) *
                C2667 +
            (C15845 * C225 + C15839 * C245 + C15846 * C224 + C32460 * C244) *
                C32601) *
               C32637 +
           ((C15845 * C320 + C15839 * C335 + C15846 * C319 + C32460 * C334) *
                C2666 +
            (C15845 * C330 + C15839 * C350 + C15846 * C329 + C32460 * C349) *
                C32795 +
            (C15845 * C620 + C15839 * C625 + C15846 * C621 + C32460 * C626) *
                C2667 +
            (C15845 * C630 + C15839 * C635 + C15846 * C631 + C32460 * C636) *
                C32601) *
               C32644 +
           ((C15845 * C325 + C15839 * C340 + C15846 * C326 + C32460 * C341) *
                C2666 +
            (C15845 * C345 + C15839 * C355 + C15846 * C346 + C32460 * C356) *
                C32795 +
            (C15845 * C1067 + C15839 * C1079 + C15846 * C2192 +
             C32460 * C2193) *
                C2667 +
            (C15845 * C1082 + C15839 * C1094 + C15846 * C2194 +
             C32460 * C2195) *
                C32601) *
               C24412) *
              C32513 * C32499 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C15845 * C119 + C15839 * C126 + C15846 * C120 + C32460 * C127) *
                C2666 +
            (C15845 * C131 + C15839 * C140 + C15846 * C132 + C32460 * C141) *
                C32795 +
            (C15982 + C15983) * C2667 + (C15984 + C15985) * C32601) *
               C32637 +
           ((C17058 + C17059) * C2666 + (C17060 + C17061) * C32795 +
            C17713 * C2667 + C17714 * C32601) *
               C32644 +
           C25559 * C24412) *
              C315 -
          (((C17068 + C17069) * C32601 + (C17070 + C17071) * C2667 +
            (C17072 + C17073) * C32795 + (C17074 + C17075) * C2666) *
               C24412 +
           (C17715 * C32601 + C17716 * C2667 + (C17065 + C17064) * C32795 +
            (C17063 + C17062) * C2666) *
               C32644 +
           (C17717 * C32601 + C17718 * C2667 + (C17061 + C17060) * C32795 +
            (C17059 + C17058) * C2666) *
               C32637) *
              C316 +
          (C25559 * C32637 +
           (C22861 * C2666 + C22862 * C32795 + (C17071 + C17070) * C2667 +
            (C17069 + C17068) * C32601) *
               C32644 +
           ((C22877 + C22876) * C2666 + (C22875 + C22874) * C32795 +
            (C15845 * C6967 + C15839 * C6971 + C15846 * C12202 +
             C32460 * C12203) *
                C2667 +
            (C15845 * C6972 + C15839 * C6976 + C15846 * C12204 +
             C32460 * C12205) *
                C32601) *
               C24412) *
              C317) *
         C32499 * C32487) /
            (p * q * std::sqrt(p + q));
    d2ee[83] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C15845 * C119 + C15839 * C126 + C15846 * C120 + C32460 * C127) *
                 C2666 +
             (C15845 * C131 + C15839 * C140 + C15846 * C132 + C32460 * C141) *
                 C32795 +
             (C15982 + C15983) * C2667 + (C15984 + C15985) * C32601) *
                C32637 +
            ((C17058 + C17059) * C2666 + (C17060 + C17061) * C32795 +
             C17713 * C2667 + C17714 * C32601) *
                C32644 +
            C25559 * C24412) *
               C530 -
           (((C17068 + C17069) * C32601 + (C17070 + C17071) * C2667 +
             (C17072 + C17073) * C32795 + (C17074 + C17075) * C2666) *
                C24412 +
            (C17715 * C32601 + C17716 * C2667 + (C17065 + C17064) * C32795 +
             (C17063 + C17062) * C2666) *
                C32644 +
            (C17717 * C32601 + C17718 * C2667 + (C17061 + C17060) * C32795 +
             (C17059 + C17058) * C2666) *
                C32637) *
               C531) *
              C32499 * C442 +
          ((((C17511 + C17512) * C2666 + (C17513 + C17514) * C32795 +
             (C17293 + C17294) * C2667 + (C17295 + C17296) * C32601) *
                C32637 +
            ((C17515 + C17516) * C2666 + (C17517 + C17518) * C32795 +
             (C17297 + C17298) * C2667 + (C17299 + C17300) * C32601) *
                C32644 +
            ((C23147 + C23148) * C2666 + (C23149 + C23150) * C32795 +
             (C15845 * C2529 + C15839 * C2532 + C15846 * C2530 +
              C32460 * C2533) *
                 C2667 +
             (C15845 * C2535 + C15839 * C2538 + C15846 * C2536 +
              C32460 * C2539) *
                 C32601) *
                C24412) *
               C531 -
           (((C17300 + C17299) * C32601 + (C17298 + C17297) * C2667 +
             (C17518 + C17517) * C32795 + (C17516 + C17515) * C2666) *
                C24412 +
            ((C17296 + C17295) * C32601 + (C17294 + C17293) * C2667 +
             (C17514 + C17513) * C32795 + (C17512 + C17511) * C2666) *
                C32644 +
            ((C16257 + C16256) * C32601 + (C16255 + C16254) * C2667 +
             (C15846 * C133 + C32460 * C142 + C15845 * C132 + C15839 * C141) *
                 C32795 +
             (C15846 * C121 + C32460 * C128 + C15845 * C120 + C15839 * C127) *
                 C2666) *
                C32637) *
               C530) *
              C32499 * C443)) /
        (p * q * std::sqrt(p + q));
    d2ee[84] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C15845 * C119 + C15839 * C126 + C15846 * C120 + C32460 * C127) *
                C2666 +
            (C15845 * C131 + C15839 * C140 + C15846 * C132 + C32460 * C141) *
                C32795 +
            (C15982 + C15983) * C2667 + (C15984 + C15985) * C32601) *
               C32637 +
           ((C17058 + C17059) * C2666 + (C17060 + C17061) * C32795 +
            C17713 * C2667 + C17714 * C32601) *
               C32644 +
           (C17076 * C2666 + C17077 * C32795 + C17040 * C2667 +
            C17041 * C32601) *
               C24412) *
              C32513 * C32499 * C110 -
          (((C17300 + C17299) * C32601 + (C17298 + C17297) * C2667 +
            (C17518 + C17517) * C32795 + (C17516 + C17515) * C2666) *
               C24412 +
           ((C17296 + C17295) * C32601 + (C17294 + C17293) * C2667 +
            (C17514 + C17513) * C32795 + (C17512 + C17511) * C2666) *
               C32644 +
           ((C16257 + C16256) * C32601 + (C16255 + C16254) * C2667 +
            (C15846 * C133 + C32460 * C142 + C15845 * C132 + C15839 * C141) *
                C32795 +
            (C15846 * C121 + C32460 * C128 + C15845 * C120 + C15839 * C127) *
                C2666) *
               C32637) *
              C32513 * C32499 * C111 +
          (((C15845 * C121 + C15839 * C128 + C15846 * C122 + C32460 * C129) *
                C2666 +
            (C15845 * C133 + C15839 * C142 + C15846 * C134 + C32460 * C143) *
                C32795 +
            (C15845 * C215 + C15839 * C230 + C15846 * C214 + C32460 * C229) *
                C2667 +
            (C15845 * C225 + C15839 * C245 + C15846 * C224 + C32460 * C244) *
                C32601) *
               C32637 +
           ((C15845 * C320 + C15839 * C335 + C15846 * C319 + C32460 * C334) *
                C2666 +
            (C15845 * C330 + C15839 * C350 + C15846 * C329 + C32460 * C349) *
                C32795 +
            (C15845 * C620 + C15839 * C625 + C15846 * C621 + C32460 * C626) *
                C2667 +
            (C15845 * C630 + C15839 * C635 + C15846 * C631 + C32460 * C636) *
                C32601) *
               C32644 +
           ((C15845 * C325 + C15839 * C340 + C15846 * C326 + C32460 * C341) *
                C2666 +
            (C15845 * C345 + C15839 * C355 + C15846 * C346 + C32460 * C356) *
                C32795 +
            (C15845 * C1067 + C15839 * C1079 + C15846 * C2192 +
             C32460 * C2193) *
                C2667 +
            (C15845 * C1082 + C15839 * C1094 + C15846 * C2194 +
             C32460 * C2195) *
                C32601) *
               C24412) *
              C32513 * C32499 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C15845 * C119 + C15839 * C126 + C15846 * C120 + C32460 * C127) *
                C2666 +
            (C15845 * C131 + C15839 * C140 + C15846 * C132 + C32460 * C141) *
                C32795 +
            (C15982 + C15983) * C2667 + (C15984 + C15985) * C32601) *
               C32637 +
           ((C17058 + C17059) * C2666 + (C17060 + C17061) * C32795 +
            C17713 * C2667 + C17714 * C32601) *
               C32644 +
           (C17076 * C2666 + C17077 * C32795 + C17040 * C2667 +
            C17041 * C32601) *
               C24412) *
              C32513 * C209 -
          (((C16874 + C16875) * C32601 + (C16876 + C16877) * C2667 +
            C17715 * C32795 + C17716 * C2666) *
               C24412 +
           (C20781 * C32601 + C20782 * C2667 + C17717 * C32795 +
            C17718 * C2666) *
               C32644 +
           ((C15989 + C15988) * C32601 + (C15987 + C15986) * C2667 +
            (C15985 + C15984) * C32795 + (C15983 + C15982) * C2666) *
               C32637) *
              C32513 * C210 +
          ((C15998 * C2666 + C15999 * C32795 + C16000 * C2667 +
            C16001 * C32601) *
               C32637 +
           (C20039 * C2666 + C20040 * C32795 + (C16553 + C16552) * C2667 +
            (C16551 + C16550) * C32601) *
               C32644 +
           ((C16877 + C16876) * C2666 + (C16875 + C16874) * C32795 +
            (C15845 * C6301 + C15839 * C6305 + C15846 * C7177 +
             C32460 * C7178) *
                C2667 +
            (C15845 * C6306 + C15839 * C6310 + C15846 * C7179 +
             C32460 * C7180) *
                C32601) *
               C24412) *
              C32513 * C211) *
         C32487) /
            (p * q * std::sqrt(p + q));
    d2ee[85] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C15845 * C119 + C15839 * C126 + C15846 * C120 + C32460 * C127) *
                 C757 +
             (C15845 * C131 + C15839 * C140 + C15846 * C132 + C32460 * C141) *
                 C32861 +
             (C15982 + C15983) * C758 + (C15984 + C15985) * C32849 +
             C15998 * C759 + C15999 * C32826) *
                C20880 +
            ((C17058 + C17059) * C757 + (C17060 + C17061) * C32861 +
             C17713 * C758 + C17714 * C32849 + C20039 * C759 +
             C20040 * C32826) *
                C32641) *
               C32513 * C440 -
           (((C16550 + C16551) * C32826 + (C16552 + C16553) * C759 +
             C20781 * C32849 + C20782 * C758 + C17717 * C32861 +
             C17718 * C757) *
                C32641 +
            ((C15993 + C15992) * C32826 + (C15991 + C15990) * C759 +
             (C15989 + C15988) * C32849 + (C15987 + C15986) * C758 +
             (C15985 + C15984) * C32861 + (C15983 + C15982) * C757) *
                C20880) *
               C32513 * C441) *
              C442 +
          ((((C16254 + C16255) * C757 + (C16256 + C16257) * C32861 +
             (C16258 + C16259) * C758 + (C16260 + C16261) * C32849 +
             (C16262 + C16263) * C759 + (C16264 + C16265) * C32826) *
                C20880 +
            ((C17293 + C17294) * C757 + (C17295 + C17296) * C32861 +
             (C20389 + C20390) * C758 + (C20391 + C20392) * C32849 +
             (C15845 * C1581 + C15839 * C1584 + C15846 * C1582 +
              C32460 * C1585) *
                 C759 +
             (C15845 * C1587 + C15839 * C1590 + C15846 * C1588 +
              C32460 * C1591) *
                 C32826) *
                C32641) *
               C32513 * C441 -
           (((C20392 + C20391) * C32826 + (C20390 + C20389) * C759 +
             (C17296 + C17295) * C32849 + (C17294 + C17293) * C758 +
             (C17514 + C17513) * C32861 + (C17512 + C17511) * C757) *
                C32641 +
            ((C16261 + C16260) * C32826 + (C16259 + C16258) * C759 +
             (C16257 + C16256) * C32849 + (C16255 + C16254) * C758 +
             (C15846 * C133 + C32460 * C142 + C15845 * C132 + C15839 * C141) *
                 C32861 +
             (C15846 * C121 + C32460 * C128 + C15845 * C120 + C15839 * C127) *
                 C757) *
                C20880) *
               C32513 * C440) *
              C443)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C15053 * C119 + C32867 * C126 + C15054 * C120 + C32860 * C127 +
              C15055 * C121 + C32847 * C128 + C15056 * C122 + C32830 * C129) *
                 C118 +
             (C15053 * C131 + C32867 * C140 + C15054 * C132 + C32860 * C141 +
              C15055 * C133 + C32847 * C142 + C15056 * C134 + C32830 * C143) *
                 C32542) *
                C20880 +
            ((C21111 + C21112 + C21113 + C21114) * C118 +
             (C21115 + C21116 + C21117 + C21118) * C32542) *
                C32641) *
               C32513 * C440 -
           (((C15734 + C15735 + C15736 + C15737) * C32542 +
             (C15738 + C15739 + C15740 + C15741) * C118) *
                C32641 +
            ((C15197 + C15196 + C15195 + C15194) * C32542 +
             (C15193 + C15192 + C15191 + C15190) * C118) *
                C20880) *
               C32513 * C441) *
              C442 +
          ((((C15450 + C15451 + C15452 + C15453) * C118 +
             (C15454 + C15455 + C15456 + C15457) * C32542) *
                C20880 +
            ((C15053 * C619 + C32867 * C624 + C15054 * C620 + C32860 * C625 +
              C15055 * C621 + C32847 * C626 + C15056 * C622 + C32830 * C627) *
                 C118 +
             (C15053 * C629 + C32867 * C634 + C15054 * C630 + C32860 * C635 +
              C15055 * C631 + C32847 * C636 + C15056 * C632 + C32830 * C637) *
                 C32542) *
                C32641) *
               C32513 * C441 -
           (((C15056 * C328 + C32830 * C348 + C15055 * C329 + C32847 * C349 +
              C15054 * C330 + C32860 * C350 + C15053 * C331 + C32867 * C351) *
                 C32542 +
             (C15056 * C318 + C32830 * C333 + C15055 * C319 + C32847 * C334 +
              C15054 * C320 + C32860 * C335 + C15053 * C321 + C32867 * C336) *
                 C118) *
                C32641 +
            ((C15056 * C135 + C32830 * C144 + C15055 * C134 + C32847 * C143 +
              C15054 * C133 + C32860 * C142 + C15053 * C132 + C32867 * C141) *
                 C32542 +
             (C15056 * C123 + C32830 * C130 + C15055 * C122 + C32847 * C129 +
              C15054 * C121 + C32860 * C128 + C15053 * C120 + C32867 * C127) *
                 C118) *
                C20880) *
               C32513 * C440) *
              C443)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C15845 * C119 + C15839 * C126 + C15846 * C120 + C32460 * C127) *
                 C118 +
             (C15845 * C131 + C15839 * C140 + C15846 * C132 + C32460 * C141) *
                 C32542) *
                C32869 +
            ((C17058 + C17059) * C118 + (C17060 + C17061) * C32542) * C32866 +
            C22871 * C32857 + C22878 * C32842) *
               C32513 * C440 -
           (((C17068 + C17069) * C32542 + (C17070 + C17071) * C118) * C32842 +
            (C17715 * C32542 + C17716 * C118) * C32857 +
            (C17717 * C32542 + C17718 * C118) * C32866 +
            ((C15985 + C15984) * C32542 + (C15983 + C15982) * C118) * C32869) *
               C32513 * C441) *
              C442 +
          ((((C16254 + C16255) * C118 + (C16256 + C16257) * C32542) * C32869 +
            ((C17293 + C17294) * C118 + (C17295 + C17296) * C32542) * C32866 +
            ((C17297 + C17298) * C118 + (C17299 + C17300) * C32542) * C32857 +
            ((C15845 * C2529 + C15839 * C2532 + C15846 * C2530 +
              C32460 * C2533) *
                 C118 +
             (C15845 * C2535 + C15839 * C2538 + C15846 * C2536 +
              C32460 * C2539) *
                 C32542) *
                C32842) *
               C32513 * C441 -
           (((C15846 * C1967 + C32460 * C1979 + C15845 * C1968 +
              C15839 * C1980) *
                 C32542 +
             (C15846 * C1961 + C32460 * C1970 + C15845 * C1962 +
              C15839 * C1971) *
                 C118) *
                C32842 +
            ((C17518 + C17517) * C32542 + (C17516 + C17515) * C118) * C32857 +
            ((C17514 + C17513) * C32542 + (C17512 + C17511) * C118) * C32866 +
            ((C15846 * C133 + C32460 * C142 + C15845 * C132 + C15839 * C141) *
                 C32542 +
             (C15846 * C121 + C32460 * C128 + C15845 * C120 + C15839 * C127) *
                 C118) *
                C32869) *
               C32513 * C440) *
              C443)) /
            (p * q * std::sqrt(p + q));
    d2ee[86] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C15845 * C119 + C15839 * C126 + C15846 * C120 + C32460 * C127) *
                 C757 +
             (C15845 * C131 + C15839 * C140 + C15846 * C132 + C32460 * C141) *
                 C32861 +
             (C15982 + C15983) * C758 + (C15984 + C15985) * C32849 +
             C15998 * C759 + C15999 * C32826) *
                C20880 +
            ((C17058 + C17059) * C757 + (C17060 + C17061) * C32861 +
             C17713 * C758 + C17714 * C32849 + C20039 * C759 +
             C20040 * C32826) *
                C32641) *
               C530 -
           (((C16874 + C16875) * C32826 + (C16876 + C16877) * C759 +
             C17715 * C32849 + C17716 * C758 + (C17065 + C17064) * C32861 +
             (C17063 + C17062) * C757) *
                C32641 +
            (C20781 * C32826 + C20782 * C759 + C17717 * C32849 + C17718 * C758 +
             (C17061 + C17060) * C32861 + (C17059 + C17058) * C757) *
                C20880) *
               C531) *
              C440 +
          (((C17713 * C757 + C17714 * C32861 + C20039 * C758 + C20040 * C32849 +
             (C16553 + C16552) * C759 + (C16551 + C16550) * C32826) *
                C20880 +
            (C17040 * C757 + C17041 * C32861 + (C16877 + C16876) * C758 +
             (C16875 + C16874) * C32849 +
             (C15845 * C6301 + C15839 * C6305 + C15846 * C7177 +
              C32460 * C7178) *
                 C759 +
             (C15845 * C6306 + C15839 * C6310 + C15846 * C7179 +
              C32460 * C7180) *
                 C32826) *
                C32641) *
               C531 -
           (((C16550 + C16551) * C32826 + (C16552 + C16553) * C759 +
             C20781 * C32849 + C20782 * C758 + C17717 * C32861 +
             C17718 * C757) *
                C32641 +
            ((C15993 + C15992) * C32826 + (C15991 + C15990) * C759 +
             (C15989 + C15988) * C32849 + (C15987 + C15986) * C758 +
             (C15985 + C15984) * C32861 + (C15983 + C15982) * C757) *
                C20880) *
               C530) *
              C441) *
         C32487) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C15053 * C119 + C32867 * C126 + C15054 * C120 + C32860 * C127 +
              C15055 * C121 + C32847 * C128 + C15056 * C122 + C32830 * C129) *
                 C118 +
             (C15053 * C131 + C32867 * C140 + C15054 * C132 + C32860 * C141 +
              C15055 * C133 + C32847 * C142 + C15056 * C134 + C32830 * C143) *
                 C32542) *
                C20880 +
            ((C21111 + C21112 + C21113 + C21114) * C118 +
             (C21115 + C21116 + C21117 + C21118) * C32542) *
                C32641) *
               C530 -
           (((C21119 + C21120 + C21121 + C21122) * C32542 +
             (C21123 + C21124 + C21125 + C21126) * C118) *
                C32641 +
            ((C21118 + C21117 + C21116 + C21115) * C32542 +
             (C21114 + C21113 + C21112 + C21111) * C118) *
                C20880) *
               C531) *
              C440 +
          ((((C15741 + C15740 + C15739 + C15738) * C118 +
             (C15737 + C15736 + C15735 + C15734) * C32542) *
                C20880 +
            ((C15053 * C1065 + C32867 * C1077 + C15054 * C1066 +
              C32860 * C1078 + C15055 * C1067 + C32847 * C1079 +
              C15056 * C2192 + C32830 * C2193) *
                 C118 +
             (C15053 * C1080 + C32867 * C1092 + C15054 * C1081 +
              C32860 * C1093 + C15055 * C1082 + C32847 * C1094 +
              C15056 * C2194 + C32830 * C2195) *
                 C32542) *
                C32641) *
               C531 -
           (((C15734 + C15735 + C15736 + C15737) * C32542 +
             (C15738 + C15739 + C15740 + C15741) * C118) *
                C32641 +
            ((C15197 + C15196 + C15195 + C15194) * C32542 +
             (C15193 + C15192 + C15191 + C15190) * C118) *
                C20880) *
               C530) *
              C441) *
         C32487) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C15845 * C119 + C15839 * C126 + C15846 * C120 + C32460 * C127) *
                 C118 +
             (C15845 * C131 + C15839 * C140 + C15846 * C132 + C32460 * C141) *
                 C32542) *
                C32869 +
            ((C17058 + C17059) * C118 + (C17060 + C17061) * C32542) * C32866 +
            C22871 * C32857 + C22878 * C32842) *
               C530 -
           (((C22874 + C22875) * C32542 + (C22876 + C22877) * C118) * C32842 +
            ((C17072 + C17073) * C32542 + (C17074 + C17075) * C118) * C32857 +
            ((C17065 + C17064) * C32542 + (C17063 + C17062) * C118) * C32866 +
            ((C17061 + C17060) * C32542 + (C17059 + C17058) * C118) * C32869) *
               C531) *
              C440 +
          (((C17713 * C118 + C17714 * C32542) * C32869 +
            (C17040 * C118 + C17041 * C32542) * C32866 +
            ((C17071 + C17070) * C118 + (C17069 + C17068) * C32542) * C32857 +
            ((C15845 * C6967 + C15839 * C6971 + C15846 * C12202 +
              C32460 * C12203) *
                 C118 +
             (C15845 * C6972 + C15839 * C6976 + C15846 * C12204 +
              C32460 * C12205) *
                 C32542) *
                C32842) *
               C531 -
           (((C17068 + C17069) * C32542 + (C17070 + C17071) * C118) * C32842 +
            (C17715 * C32542 + C17716 * C118) * C32857 +
            (C17717 * C32542 + C17718 * C118) * C32866 +
            ((C15985 + C15984) * C32542 + (C15983 + C15982) * C118) * C32869) *
               C530) *
              C441) *
         C32487) /
            (p * q * std::sqrt(p + q));
    d2ee[87] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C15053 * C119 + C32867 * C126 + C15054 * C120 + C32860 * C127 +
                 C15055 * C121 + C32847 * C128 + C15056 * C122 +
                 C32830 * C129) *
                    C118 +
                (C15053 * C131 + C32867 * C140 + C15054 * C132 + C32860 * C141 +
                 C15055 * C133 + C32847 * C142 + C15056 * C134 +
                 C32830 * C143) *
                    C32542) *
                   C20880 +
               ((C15053 * C322 + C32867 * C337 + C15054 * C321 + C32860 * C336 +
                 C15055 * C320 + C32847 * C335 + C15056 * C319 +
                 C32830 * C334) *
                    C118 +
                (C15053 * C332 + C32867 * C352 + C15054 * C331 + C32860 * C351 +
                 C15055 * C330 + C32847 * C350 + C15056 * C329 +
                 C32830 * C349) *
                    C32542) *
                   C32641) *
                  C32513 * C32499 * C110 -
              (((C15056 * C328 + C32830 * C348 + C15055 * C329 + C32847 * C349 +
                 C15054 * C330 + C32860 * C350 + C15053 * C331 +
                 C32867 * C351) *
                    C32542 +
                (C15056 * C318 + C32830 * C333 + C15055 * C319 + C32847 * C334 +
                 C15054 * C320 + C32860 * C335 + C15053 * C321 +
                 C32867 * C336) *
                    C118) *
                   C32641 +
               ((C15056 * C135 + C32830 * C144 + C15055 * C134 + C32847 * C143 +
                 C15054 * C133 + C32860 * C142 + C15053 * C132 +
                 C32867 * C141) *
                    C32542 +
                (C15056 * C123 + C32830 * C130 + C15055 * C122 + C32847 * C129 +
                 C15054 * C121 + C32860 * C128 + C15053 * C120 +
                 C32867 * C127) *
                    C118) *
                   C20880) *
                  C32513 * C32499 * C111 +
              (((C15053 * C121 + C32867 * C128 + C15054 * C122 + C32860 * C129 +
                 C15055 * C123 + C32847 * C130 + C15056 * C124 +
                 C32830 * C137) *
                    C118 +
                (C15053 * C133 + C32867 * C142 + C15054 * C134 + C32860 * C143 +
                 C15055 * C135 + C32847 * C144 + C15056 * C136 +
                 C32830 * C145) *
                    C32542) *
                   C20880 +
               ((C15053 * C320 + C32867 * C335 + C15054 * C319 + C32860 * C334 +
                 C15055 * C318 + C32847 * C333 + C15056 * C532 +
                 C32830 * C533) *
                    C118 +
                (C15053 * C330 + C32867 * C350 + C15054 * C329 + C32860 * C349 +
                 C15055 * C328 + C32847 * C348 + C15056 * C534 +
                 C32830 * C535) *
                    C32542) *
                   C32641) *
                  C32513 * C32499 * C112) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C15053 * C119 + C32867 * C126 + C15054 * C120 + C32860 * C127 +
                 C15055 * C121 + C32847 * C128 + C15056 * C122 +
                 C32830 * C129) *
                    C118 +
                (C15053 * C131 + C32867 * C140 + C15054 * C132 + C32860 * C141 +
                 C15055 * C133 + C32847 * C142 + C15056 * C134 +
                 C32830 * C143) *
                    C32542) *
                   C20880 +
               ((C15053 * C322 + C32867 * C337 + C15054 * C321 + C32860 * C336 +
                 C15055 * C320 + C32847 * C335 + C15056 * C319 +
                 C32830 * C334) *
                    C118 +
                (C15053 * C332 + C32867 * C352 + C15054 * C331 + C32860 * C351 +
                 C15055 * C330 + C32847 * C350 + C15056 * C329 +
                 C32830 * C349) *
                    C32542) *
                   C32641) *
                  C32513 * C209 -
              (((C15734 + C15735 + C15736 + C15737) * C32542 +
                (C15738 + C15739 + C15740 + C15741) * C118) *
                   C32641 +
               ((C15197 + C15196 + C15195 + C15194) * C32542 +
                (C15193 + C15192 + C15191 + C15190) * C118) *
                   C20880) *
                  C32513 * C210 +
              (((C15205 + C15204 + C15203 + C15202) * C118 +
                (C15201 + C15200 + C15199 + C15198) * C32542) *
                   C20880 +
               ((C15053 * C1064 + C32867 * C1076 + C15054 * C1063 +
                 C32860 * C1075 + C15055 * C1062 + C32847 * C1074 +
                 C15056 * C1430 + C32830 * C1431) *
                    C118 +
                (C15053 * C1073 + C32867 * C1091 + C15054 * C1072 +
                 C32860 * C1090 + C15055 * C1071 + C32847 * C1089 +
                 C15056 * C1432 + C32830 * C1433) *
                    C32542) *
                   C32641) *
                  C32513 * C211) *
             C32487) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C15053 * C119 + C32867 * C126 + C15054 * C120 + C32860 * C127 +
             C15055 * C121 + C32847 * C128 + C15056 * C122 + C32830 * C129) *
                C118 +
            (C15053 * C131 + C32867 * C140 + C15054 * C132 + C32860 * C141 +
             C15055 * C133 + C32847 * C142 + C15056 * C134 + C32830 * C143) *
                C32542) *
               C20880 +
           ((C21111 + C21112 + C21113 + C21114) * C118 +
            (C21115 + C21116 + C21117 + C21118) * C32542) *
               C32641) *
              C315 -
          (((C21119 + C21120 + C21121 + C21122) * C32542 +
            (C21123 + C21124 + C21125 + C21126) * C118) *
               C32641 +
           ((C21118 + C21117 + C21116 + C21115) * C32542 +
            (C21114 + C21113 + C21112 + C21111) * C118) *
               C20880) *
              C316 +
          (((C21126 + C21125 + C21124 + C21123) * C118 +
            (C21122 + C21121 + C21120 + C21119) * C32542) *
               C20880 +
           ((C15053 * C1963 + C32867 * C1972 + C15054 * C1962 + C32860 * C1971 +
             C15055 * C1961 + C32847 * C1970 + C15056 * C2342 +
             C32830 * C2343) *
                C118 +
            (C15053 * C1969 + C32867 * C1981 + C15054 * C1968 + C32860 * C1980 +
             C15055 * C1967 + C32847 * C1979 + C15056 * C2344 +
             C32830 * C2345) *
                C32542) *
               C32641) *
              C317) *
         C32499 * C32487) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C15845 * C119 + C15839 * C126 + C15846 * C120 + C32460 * C127) *
                C757 +
            (C15845 * C131 + C15839 * C140 + C15846 * C132 + C32460 * C141) *
                C32861 +
            (C15982 + C15983) * C758 + (C15984 + C15985) * C32849 +
            C15998 * C759 + C15999 * C32826) *
               C20880 +
           ((C17058 + C17059) * C757 + (C17060 + C17061) * C32861 +
            C17713 * C758 + C17714 * C32849 + C20039 * C759 + C20040 * C32826) *
               C32641) *
              C32513 * C32499 * C110 -
          (((C20392 + C20391) * C32826 + (C20390 + C20389) * C759 +
            (C17296 + C17295) * C32849 + (C17294 + C17293) * C758 +
            (C17514 + C17513) * C32861 + (C17512 + C17511) * C757) *
               C32641 +
           ((C16261 + C16260) * C32826 + (C16259 + C16258) * C759 +
            (C16257 + C16256) * C32849 + (C16255 + C16254) * C758 +
            (C15846 * C133 + C32460 * C142 + C15845 * C132 + C15839 * C141) *
                C32861 +
            (C15846 * C121 + C32460 * C128 + C15845 * C120 + C15839 * C127) *
                C757) *
               C20880) *
              C32513 * C32499 * C111 +
          (((C15845 * C121 + C15839 * C128 + C15846 * C122 + C32460 * C129) *
                C757 +
            (C15845 * C133 + C15839 * C142 + C15846 * C134 + C32460 * C143) *
                C32861 +
            (C15845 * C215 + C15839 * C230 + C15846 * C214 + C32460 * C229) *
                C758 +
            (C15845 * C225 + C15839 * C245 + C15846 * C224 + C32460 * C244) *
                C32849 +
            (C15845 * C220 + C15839 * C235 + C15846 * C221 + C32460 * C236) *
                C759 +
            (C15845 * C240 + C15839 * C250 + C15846 * C241 + C32460 * C251) *
                C32826) *
               C20880 +
           ((C15845 * C320 + C15839 * C335 + C15846 * C319 + C32460 * C334) *
                C757 +
            (C15845 * C330 + C15839 * C350 + C15846 * C329 + C32460 * C349) *
                C32861 +
            (C15845 * C620 + C15839 * C625 + C15846 * C621 + C32460 * C626) *
                C758 +
            (C15845 * C630 + C15839 * C635 + C15846 * C631 + C32460 * C636) *
                C32849 +
            (C15845 * C1062 + C15839 * C1074 + C15846 * C1430 +
             C32460 * C1431) *
                C759 +
            (C15845 * C1071 + C15839 * C1089 + C15846 * C1432 +
             C32460 * C1433) *
                C32826) *
               C32641) *
              C32513 * C32499 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C15845 * C119 + C15839 * C126 + C15846 * C120 + C32460 * C127) *
                C757 +
            (C15845 * C131 + C15839 * C140 + C15846 * C132 + C32460 * C141) *
                C32861 +
            (C15982 + C15983) * C758 + (C15984 + C15985) * C32849 +
            C15998 * C759 + C15999 * C32826) *
               C20880 +
           ((C17058 + C17059) * C757 + (C17060 + C17061) * C32861 +
            C17713 * C758 + C17714 * C32849 + C20039 * C759 + C20040 * C32826) *
               C32641) *
              C32513 * C209 -
          (((C16550 + C16551) * C32826 + (C16552 + C16553) * C759 +
            C20781 * C32849 + C20782 * C758 + C17717 * C32861 + C17718 * C757) *
               C32641 +
           ((C15993 + C15992) * C32826 + (C15991 + C15990) * C759 +
            (C15989 + C15988) * C32849 + (C15987 + C15986) * C758 +
            (C15985 + C15984) * C32861 + (C15983 + C15982) * C757) *
               C20880) *
              C32513 * C210 +
          ((C15998 * C757 + C15999 * C32861 + C16000 * C758 + C16001 * C32849 +
            (C15997 + C15996) * C759 + (C15995 + C15994) * C32826) *
               C20880 +
           (C20039 * C757 + C20040 * C32861 + (C16553 + C16552) * C758 +
            (C16551 + C16550) * C32849 +
            (C15845 * C6300 + C15839 * C6304 + C15846 * C6504 +
             C32460 * C6505) *
                C759 +
            (C15845 * C6303 + C15839 * C6309 + C15846 * C6506 +
             C32460 * C6507) *
                C32826) *
               C32641) *
              C32513 * C211) *
         C32487) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C15845 * C119 + C15839 * C126 + C15846 * C120 + C32460 * C127) *
                C757 +
            (C15845 * C131 + C15839 * C140 + C15846 * C132 + C32460 * C141) *
                C32861 +
            (C15982 + C15983) * C758 + (C15984 + C15985) * C32849 +
            C15998 * C759 + C15999 * C32826) *
               C20880 +
           ((C17058 + C17059) * C757 + (C17060 + C17061) * C32861 +
            C17713 * C758 + C17714 * C32849 + C20039 * C759 + C20040 * C32826) *
               C32641) *
              C315 -
          (((C16874 + C16875) * C32826 + (C16876 + C16877) * C759 +
            C17715 * C32849 + C17716 * C758 + (C17065 + C17064) * C32861 +
            (C17063 + C17062) * C757) *
               C32641 +
           (C20781 * C32826 + C20782 * C759 + C17717 * C32849 + C17718 * C758 +
            (C17061 + C17060) * C32861 + (C17059 + C17058) * C757) *
               C20880) *
              C316 +
          ((C17076 * C757 + C17077 * C32861 + C17040 * C758 + C17041 * C32849 +
            (C16877 + C16876) * C759 + (C16875 + C16874) * C32826) *
               C20880 +
           ((C17075 + C17074) * C757 + (C17073 + C17072) * C32861 +
            (C17071 + C17070) * C758 + (C17069 + C17068) * C32849 +
            (C15845 * C6966 + C15839 * C6970 + C15846 * C7351 +
             C32460 * C7352) *
                C759 +
            (C15845 * C6969 + C15839 * C6975 + C15846 * C7353 +
             C32460 * C7354) *
                C32826) *
               C32641) *
              C317) *
         C32499 * C32487) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C15845 * C119 + C15839 * C126 + C15846 * C120 + C32460 * C127) *
                C118 +
            (C15845 * C131 + C15839 * C140 + C15846 * C132 + C32460 * C141) *
                C32542) *
               C32869 +
           ((C17058 + C17059) * C118 + (C17060 + C17061) * C32542) * C32866 +
           (C17076 * C118 + C17077 * C32542) * C32857 +
           ((C17075 + C17074) * C118 + (C17073 + C17072) * C32542) * C32842) *
              C32513 * C32499 * C110 -
          (((C15846 * C1967 + C32460 * C1979 + C15845 * C1968 +
             C15839 * C1980) *
                C32542 +
            (C15846 * C1961 + C32460 * C1970 + C15845 * C1962 +
             C15839 * C1971) *
                C118) *
               C32842 +
           ((C17518 + C17517) * C32542 + (C17516 + C17515) * C118) * C32857 +
           ((C17514 + C17513) * C32542 + (C17512 + C17511) * C118) * C32866 +
           ((C15846 * C133 + C32460 * C142 + C15845 * C132 + C15839 * C141) *
                C32542 +
            (C15846 * C121 + C32460 * C128 + C15845 * C120 + C15839 * C127) *
                C118) *
               C32869) *
              C32513 * C32499 * C111 +
          (((C15845 * C121 + C15839 * C128 + C15846 * C122 + C32460 * C129) *
                C118 +
            (C15845 * C133 + C15839 * C142 + C15846 * C134 + C32460 * C143) *
                C32542) *
               C32869 +
           ((C15845 * C320 + C15839 * C335 + C15846 * C319 + C32460 * C334) *
                C118 +
            (C15845 * C330 + C15839 * C350 + C15846 * C329 + C32460 * C349) *
                C32542) *
               C32866 +
           ((C15845 * C325 + C15839 * C340 + C15846 * C326 + C32460 * C341) *
                C118 +
            (C15845 * C345 + C15839 * C355 + C15846 * C346 + C32460 * C356) *
                C32542) *
               C32857 +
           ((C15845 * C1961 + C15839 * C1970 + C15846 * C2342 +
             C32460 * C2343) *
                C118 +
            (C15845 * C1967 + C15839 * C1979 + C15846 * C2344 +
             C32460 * C2345) *
                C32542) *
               C32842) *
              C32513 * C32499 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C15845 * C119 + C15839 * C126 + C15846 * C120 + C32460 * C127) *
                C118 +
            (C15845 * C131 + C15839 * C140 + C15846 * C132 + C32460 * C141) *
                C32542) *
               C32869 +
           ((C17058 + C17059) * C118 + (C17060 + C17061) * C32542) * C32866 +
           (C17076 * C118 + C17077 * C32542) * C32857 +
           ((C17075 + C17074) * C118 + (C17073 + C17072) * C32542) * C32842) *
              C32513 * C209 -
          (((C17068 + C17069) * C32542 + (C17070 + C17071) * C118) * C32842 +
           (C17715 * C32542 + C17716 * C118) * C32857 +
           (C17717 * C32542 + C17718 * C118) * C32866 +
           ((C15985 + C15984) * C32542 + (C15983 + C15982) * C118) * C32869) *
              C32513 * C210 +
          ((C15998 * C118 + C15999 * C32542) * C32869 +
           (C20039 * C118 + C20040 * C32542) * C32866 +
           ((C16877 + C16876) * C118 + (C16875 + C16874) * C32542) * C32857 +
           ((C15845 * C6966 + C15839 * C6970 + C15846 * C7351 +
             C32460 * C7352) *
                C118 +
            (C15845 * C6969 + C15839 * C6975 + C15846 * C7353 +
             C32460 * C7354) *
                C32542) *
               C32842) *
              C32513 * C211) *
         C32487) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C15845 * C119 + C15839 * C126 + C15846 * C120 + C32460 * C127) *
                C118 +
            (C15845 * C131 + C15839 * C140 + C15846 * C132 + C32460 * C141) *
                C32542) *
               C32869 +
           ((C17058 + C17059) * C118 + (C17060 + C17061) * C32542) * C32866 +
           C22871 * C32857 + C22878 * C32842) *
              C315 -
          (((C22874 + C22875) * C32542 + (C22876 + C22877) * C118) * C32842 +
           ((C17072 + C17073) * C32542 + (C17074 + C17075) * C118) * C32857 +
           ((C17065 + C17064) * C32542 + (C17063 + C17062) * C118) * C32866 +
           ((C17061 + C17060) * C32542 + (C17059 + C17058) * C118) * C32869) *
              C316 +
          (C22871 * C32869 + C22878 * C32866 +
           ((C22877 + C22876) * C118 + (C22875 + C22874) * C32542) * C32857 +
           ((C15845 * C12087 + C15839 * C12090 + C15846 * C12288 +
             C32460 * C12289) *
                C118 +
            (C15845 * C12089 + C15839 * C12093 + C15846 * C12290 +
             C32460 * C12291) *
                C32542) *
               C32842) *
              C317) *
         C32499 * C32487) /
            (p * q * std::sqrt(p + q));
    d2ee[88] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C15845 * C119 + C15839 * C126 + C15846 * C120 + C32460 * C127) *
                 C757 +
             (C15845 * C131 + C15839 * C140 + C15846 * C132 + C32460 * C141) *
                 C32861 +
             (C15982 + C15983) * C758 + (C15984 + C15985) * C32849 +
             C15998 * C759 + C15999 * C32826) *
                C20880 +
            ((C17058 + C17059) * C757 + (C17060 + C17061) * C32861 +
             C17713 * C758 + C17714 * C32849 + C20039 * C759 +
             C20040 * C32826) *
                C32641) *
               C530 -
           (((C16874 + C16875) * C32826 + (C16876 + C16877) * C759 +
             C17715 * C32849 + C17716 * C758 + (C17065 + C17064) * C32861 +
             (C17063 + C17062) * C757) *
                C32641 +
            (C20781 * C32826 + C20782 * C759 + C17717 * C32849 + C17718 * C758 +
             (C17061 + C17060) * C32861 + (C17059 + C17058) * C757) *
                C20880) *
               C531) *
              C32499 * C442 +
          ((((C17511 + C17512) * C757 + (C17513 + C17514) * C32861 +
             (C17293 + C17294) * C758 + (C17295 + C17296) * C32849 +
             (C20389 + C20390) * C759 + (C20391 + C20392) * C32826) *
                C20880 +
            ((C17515 + C17516) * C757 + (C17517 + C17518) * C32861 +
             (C17297 + C17298) * C758 + (C17299 + C17300) * C32849 +
             (C15845 * C1069 + C15839 * C1084 + C15846 * C1070 +
              C32460 * C1085) *
                 C759 +
             (C15845 * C1087 + C15839 * C1096 + C15846 * C1088 +
              C32460 * C1097) *
                 C32826) *
                C32641) *
               C531 -
           (((C20392 + C20391) * C32826 + (C20390 + C20389) * C759 +
             (C17296 + C17295) * C32849 + (C17294 + C17293) * C758 +
             (C17514 + C17513) * C32861 + (C17512 + C17511) * C757) *
                C32641 +
            ((C16261 + C16260) * C32826 + (C16259 + C16258) * C759 +
             (C16257 + C16256) * C32849 + (C16255 + C16254) * C758 +
             (C15846 * C133 + C32460 * C142 + C15845 * C132 + C15839 * C141) *
                 C32861 +
             (C15846 * C121 + C32460 * C128 + C15845 * C120 + C15839 * C127) *
                 C757) *
                C20880) *
               C530) *
              C32499 * C443)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C15053 * C119 + C32867 * C126 + C15054 * C120 + C32860 * C127 +
              C15055 * C121 + C32847 * C128 + C15056 * C122 + C32830 * C129) *
                 C118 +
             (C15053 * C131 + C32867 * C140 + C15054 * C132 + C32860 * C141 +
              C15055 * C133 + C32847 * C142 + C15056 * C134 + C32830 * C143) *
                 C32542) *
                C20880 +
            ((C21111 + C21112 + C21113 + C21114) * C118 +
             (C21115 + C21116 + C21117 + C21118) * C32542) *
                C32641) *
               C530 -
           (((C21119 + C21120 + C21121 + C21122) * C32542 +
             (C21123 + C21124 + C21125 + C21126) * C118) *
                C32641 +
            ((C21118 + C21117 + C21116 + C21115) * C32542 +
             (C21114 + C21113 + C21112 + C21111) * C118) *
                C20880) *
               C531) *
              C32499 * C442 +
          ((((C21403 + C21404 + C21405 + C21406) * C118 +
             (C21407 + C21408 + C21409 + C21410) * C32542) *
                C20880 +
            ((C15053 * C324 + C32867 * C339 + C15054 * C325 + C32860 * C340 +
              C15055 * C326 + C32847 * C341 + C15056 * C327 + C32830 * C342) *
                 C118 +
             (C15053 * C344 + C32867 * C354 + C15054 * C345 + C32860 * C355 +
              C15055 * C346 + C32847 * C356 + C15056 * C347 + C32830 * C357) *
                 C32542) *
                C32641) *
               C531 -
           (((C21410 + C21409 + C21408 + C21407) * C32542 +
             (C21406 + C21405 + C21404 + C21403) * C118) *
                C32641 +
            ((C15056 * C135 + C32830 * C144 + C15055 * C134 + C32847 * C143 +
              C15054 * C133 + C32860 * C142 + C15053 * C132 + C32867 * C141) *
                 C32542 +
             (C15056 * C123 + C32830 * C130 + C15055 * C122 + C32847 * C129 +
              C15054 * C121 + C32860 * C128 + C15053 * C120 + C32867 * C127) *
                 C118) *
                C20880) *
               C530) *
              C32499 * C443)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C15845 * C119 + C15839 * C126 + C15846 * C120 + C32460 * C127) *
                 C118 +
             (C15845 * C131 + C15839 * C140 + C15846 * C132 + C32460 * C141) *
                 C32542) *
                C32869 +
            ((C17058 + C17059) * C118 + (C17060 + C17061) * C32542) * C32866 +
            C22871 * C32857 + C22878 * C32842) *
               C530 -
           (((C22874 + C22875) * C32542 + (C22876 + C22877) * C118) * C32842 +
            ((C17072 + C17073) * C32542 + (C17074 + C17075) * C118) * C32857 +
            ((C17065 + C17064) * C32542 + (C17063 + C17062) * C118) * C32866 +
            ((C17061 + C17060) * C32542 + (C17059 + C17058) * C118) * C32869) *
               C531) *
              C32499 * C442 +
          ((((C17511 + C17512) * C118 + (C17513 + C17514) * C32542) * C32869 +
            ((C17515 + C17516) * C118 + (C17517 + C17518) * C32542) * C32866 +
            ((C23147 + C23148) * C118 + (C23149 + C23150) * C32542) * C32857 +
            ((C15845 * C1965 + C15839 * C1974 + C15846 * C1966 +
              C32460 * C1975) *
                 C118 +
             (C15845 * C1977 + C15839 * C1983 + C15846 * C1978 +
              C32460 * C1984) *
                 C32542) *
                C32842) *
               C531 -
           (((C23150 + C23149) * C32542 + (C23148 + C23147) * C118) * C32842 +
            ((C17518 + C17517) * C32542 + (C17516 + C17515) * C118) * C32857 +
            ((C17514 + C17513) * C32542 + (C17512 + C17511) * C118) * C32866 +
            ((C15846 * C133 + C32460 * C142 + C15845 * C132 + C15839 * C141) *
                 C32542 +
             (C15846 * C121 + C32460 * C128 + C15845 * C120 + C15839 * C127) *
                 C118) *
                C32869) *
               C530) *
              C32499 * C443)) /
            (p * q * std::sqrt(p + q));
    d2ee[89] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C15053 * C119 + C32867 * C126 + C15054 * C120 + C32860 * C127 +
             C15055 * C121 + C32847 * C128 + C15056 * C122 + C32830 * C129) *
                C118 +
            (C15053 * C131 + C32867 * C140 + C15054 * C132 + C32860 * C141 +
             C15055 * C133 + C32847 * C142 + C15056 * C134 + C32830 * C143) *
                C32542) *
               C20880 +
           ((C15053 * C322 + C32867 * C337 + C15054 * C321 + C32860 * C336 +
             C15055 * C320 + C32847 * C335 + C15056 * C319 + C32830 * C334) *
                C118 +
            (C15053 * C332 + C32867 * C352 + C15054 * C331 + C32860 * C351 +
             C15055 * C330 + C32847 * C350 + C15056 * C329 + C32830 * C349) *
                C32542) *
               C32641) *
              C32513 * C209 -
          (((C15734 + C15735 + C15736 + C15737) * C32542 +
            (C15738 + C15739 + C15740 + C15741) * C118) *
               C32641 +
           ((C15197 + C15196 + C15195 + C15194) * C32542 +
            (C15193 + C15192 + C15191 + C15190) * C118) *
               C20880) *
              C32513 * C210 +
          (((C15205 + C15204 + C15203 + C15202) * C118 +
            (C15201 + C15200 + C15199 + C15198) * C32542) *
               C20880 +
           ((C15053 * C1064 + C32867 * C1076 + C15054 * C1063 + C32860 * C1075 +
             C15055 * C1062 + C32847 * C1074 + C15056 * C1430 +
             C32830 * C1431) *
                C118 +
            (C15053 * C1073 + C32867 * C1091 + C15054 * C1072 + C32860 * C1090 +
             C15055 * C1071 + C32847 * C1089 + C15056 * C1432 +
             C32830 * C1433) *
                C32542) *
               C32641) *
              C32513 * C211) *
         C32487) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C15053 * C119 + C32867 * C126 + C15054 * C120 + C32860 * C127 +
             C15055 * C121 + C32847 * C128 + C15056 * C122 + C32830 * C129) *
                C118 +
            (C15053 * C131 + C32867 * C140 + C15054 * C132 + C32860 * C141 +
             C15055 * C133 + C32847 * C142 + C15056 * C134 + C32830 * C143) *
                C32542) *
               C20880 +
           ((C15053 * C322 + C32867 * C337 + C15054 * C321 + C32860 * C336 +
             C15055 * C320 + C32847 * C335 + C15056 * C319 + C32830 * C334) *
                C118 +
            (C15053 * C332 + C32867 * C352 + C15054 * C331 + C32860 * C351 +
             C15055 * C330 + C32847 * C350 + C15056 * C329 + C32830 * C349) *
                C32542) *
               C32641) *
              C32513 * C32499 * C110 -
          (((C15056 * C328 + C32830 * C348 + C15055 * C329 + C32847 * C349 +
             C15054 * C330 + C32860 * C350 + C15053 * C331 + C32867 * C351) *
                C32542 +
            (C15056 * C318 + C32830 * C333 + C15055 * C319 + C32847 * C334 +
             C15054 * C320 + C32860 * C335 + C15053 * C321 + C32867 * C336) *
                C118) *
               C32641 +
           ((C15056 * C135 + C32830 * C144 + C15055 * C134 + C32847 * C143 +
             C15054 * C133 + C32860 * C142 + C15053 * C132 + C32867 * C141) *
                C32542 +
            (C15056 * C123 + C32830 * C130 + C15055 * C122 + C32847 * C129 +
             C15054 * C121 + C32860 * C128 + C15053 * C120 + C32867 * C127) *
                C118) *
               C20880) *
              C32513 * C32499 * C111 +
          (((C15053 * C121 + C32867 * C128 + C15054 * C122 + C32860 * C129 +
             C15055 * C123 + C32847 * C130 + C15056 * C124 + C32830 * C137) *
                C118 +
            (C15053 * C133 + C32867 * C142 + C15054 * C134 + C32860 * C143 +
             C15055 * C135 + C32847 * C144 + C15056 * C136 + C32830 * C145) *
                C32542) *
               C20880 +
           ((C15053 * C320 + C32867 * C335 + C15054 * C319 + C32860 * C334 +
             C15055 * C318 + C32847 * C333 + C15056 * C532 + C32830 * C533) *
                C118 +
            (C15053 * C330 + C32867 * C350 + C15054 * C329 + C32860 * C349 +
             C15055 * C328 + C32847 * C348 + C15056 * C534 + C32830 * C535) *
                C32542) *
               C32641) *
              C32513 * C32499 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C15845 * C119 + C15839 * C126 + C15846 * C120 + C32460 * C127) *
                C757 +
            (C15845 * C131 + C15839 * C140 + C15846 * C132 + C32460 * C141) *
                C32861 +
            (C15982 + C15983) * C758 + (C15984 + C15985) * C32849 +
            C15998 * C759 + C15999 * C32826) *
               C20880 +
           ((C17058 + C17059) * C757 + (C17060 + C17061) * C32861 +
            C17713 * C758 + C17714 * C32849 + C20039 * C759 + C20040 * C32826) *
               C32641) *
              C32513 * C32499 * C110 -
          (((C20392 + C20391) * C32826 + (C20390 + C20389) * C759 +
            (C17296 + C17295) * C32849 + (C17294 + C17293) * C758 +
            (C17514 + C17513) * C32861 + (C17512 + C17511) * C757) *
               C32641 +
           ((C16261 + C16260) * C32826 + (C16259 + C16258) * C759 +
            (C16257 + C16256) * C32849 + (C16255 + C16254) * C758 +
            (C15846 * C133 + C32460 * C142 + C15845 * C132 + C15839 * C141) *
                C32861 +
            (C15846 * C121 + C32460 * C128 + C15845 * C120 + C15839 * C127) *
                C757) *
               C20880) *
              C32513 * C32499 * C111 +
          (((C15845 * C121 + C15839 * C128 + C15846 * C122 + C32460 * C129) *
                C757 +
            (C15845 * C133 + C15839 * C142 + C15846 * C134 + C32460 * C143) *
                C32861 +
            (C15845 * C215 + C15839 * C230 + C15846 * C214 + C32460 * C229) *
                C758 +
            (C15845 * C225 + C15839 * C245 + C15846 * C224 + C32460 * C244) *
                C32849 +
            (C15845 * C220 + C15839 * C235 + C15846 * C221 + C32460 * C236) *
                C759 +
            (C15845 * C240 + C15839 * C250 + C15846 * C241 + C32460 * C251) *
                C32826) *
               C20880 +
           ((C15845 * C320 + C15839 * C335 + C15846 * C319 + C32460 * C334) *
                C757 +
            (C15845 * C330 + C15839 * C350 + C15846 * C329 + C32460 * C349) *
                C32861 +
            (C15845 * C620 + C15839 * C625 + C15846 * C621 + C32460 * C626) *
                C758 +
            (C15845 * C630 + C15839 * C635 + C15846 * C631 + C32460 * C636) *
                C32849 +
            (C15845 * C1062 + C15839 * C1074 + C15846 * C1430 +
             C32460 * C1431) *
                C759 +
            (C15845 * C1071 + C15839 * C1089 + C15846 * C1432 +
             C32460 * C1433) *
                C32826) *
               C32641) *
              C32513 * C32499 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C15845 * C119 + C15839 * C126 + C15846 * C120 + C32460 * C127) *
                C757 +
            (C15845 * C131 + C15839 * C140 + C15846 * C132 + C32460 * C141) *
                C32861 +
            (C15982 + C15983) * C758 + (C15984 + C15985) * C32849 +
            C15998 * C759 + C15999 * C32826) *
               C20880 +
           ((C17058 + C17059) * C757 + (C17060 + C17061) * C32861 +
            C17713 * C758 + C17714 * C32849 + C20039 * C759 + C20040 * C32826) *
               C32641) *
              C32513 * C209 -
          (((C16550 + C16551) * C32826 + (C16552 + C16553) * C759 +
            C20781 * C32849 + C20782 * C758 + C17717 * C32861 + C17718 * C757) *
               C32641 +
           ((C15993 + C15992) * C32826 + (C15991 + C15990) * C759 +
            (C15989 + C15988) * C32849 + (C15987 + C15986) * C758 +
            (C15985 + C15984) * C32861 + (C15983 + C15982) * C757) *
               C20880) *
              C32513 * C210 +
          ((C15998 * C757 + C15999 * C32861 + C16000 * C758 + C16001 * C32849 +
            (C15997 + C15996) * C759 + (C15995 + C15994) * C32826) *
               C20880 +
           (C20039 * C757 + C20040 * C32861 + (C16553 + C16552) * C758 +
            (C16551 + C16550) * C32849 +
            (C15845 * C6300 + C15839 * C6304 + C15846 * C6504 +
             C32460 * C6505) *
                C759 +
            (C15845 * C6303 + C15839 * C6309 + C15846 * C6506 +
             C32460 * C6507) *
                C32826) *
               C32641) *
              C32513 * C211) *
         C32487) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C15845 * C119 + C15839 * C126 + C15846 * C120 + C32460 * C127) *
                C118 +
            (C15845 * C131 + C15839 * C140 + C15846 * C132 + C32460 * C141) *
                C32542) *
               C32869 +
           ((C17058 + C17059) * C118 + (C17060 + C17061) * C32542) * C32866 +
           (C17076 * C118 + C17077 * C32542) * C32857 +
           ((C17075 + C17074) * C118 + (C17073 + C17072) * C32542) * C32842) *
              C32513 * C32499 * C110 -
          (((C15846 * C1967 + C32460 * C1979 + C15845 * C1968 +
             C15839 * C1980) *
                C32542 +
            (C15846 * C1961 + C32460 * C1970 + C15845 * C1962 +
             C15839 * C1971) *
                C118) *
               C32842 +
           ((C17518 + C17517) * C32542 + (C17516 + C17515) * C118) * C32857 +
           ((C17514 + C17513) * C32542 + (C17512 + C17511) * C118) * C32866 +
           ((C15846 * C133 + C32460 * C142 + C15845 * C132 + C15839 * C141) *
                C32542 +
            (C15846 * C121 + C32460 * C128 + C15845 * C120 + C15839 * C127) *
                C118) *
               C32869) *
              C32513 * C32499 * C111 +
          (((C15845 * C121 + C15839 * C128 + C15846 * C122 + C32460 * C129) *
                C118 +
            (C15845 * C133 + C15839 * C142 + C15846 * C134 + C32460 * C143) *
                C32542) *
               C32869 +
           ((C15845 * C320 + C15839 * C335 + C15846 * C319 + C32460 * C334) *
                C118 +
            (C15845 * C330 + C15839 * C350 + C15846 * C329 + C32460 * C349) *
                C32542) *
               C32866 +
           ((C15845 * C325 + C15839 * C340 + C15846 * C326 + C32460 * C341) *
                C118 +
            (C15845 * C345 + C15839 * C355 + C15846 * C346 + C32460 * C356) *
                C32542) *
               C32857 +
           ((C15845 * C1961 + C15839 * C1970 + C15846 * C2342 +
             C32460 * C2343) *
                C118 +
            (C15845 * C1967 + C15839 * C1979 + C15846 * C2344 +
             C32460 * C2345) *
                C32542) *
               C32842) *
              C32513 * C32499 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C15845 * C119 + C15839 * C126 + C15846 * C120 + C32460 * C127) *
                C118 +
            (C15845 * C131 + C15839 * C140 + C15846 * C132 + C32460 * C141) *
                C32542) *
               C32869 +
           ((C17058 + C17059) * C118 + (C17060 + C17061) * C32542) * C32866 +
           (C17076 * C118 + C17077 * C32542) * C32857 +
           ((C17075 + C17074) * C118 + (C17073 + C17072) * C32542) * C32842) *
              C32513 * C209 -
          (((C17068 + C17069) * C32542 + (C17070 + C17071) * C118) * C32842 +
           (C17715 * C32542 + C17716 * C118) * C32857 +
           (C17717 * C32542 + C17718 * C118) * C32866 +
           ((C15985 + C15984) * C32542 + (C15983 + C15982) * C118) * C32869) *
              C32513 * C210 +
          ((C15998 * C118 + C15999 * C32542) * C32869 +
           (C20039 * C118 + C20040 * C32542) * C32866 +
           ((C16877 + C16876) * C118 + (C16875 + C16874) * C32542) * C32857 +
           ((C15845 * C6966 + C15839 * C6970 + C15846 * C7351 +
             C32460 * C7352) *
                C118 +
            (C15845 * C6969 + C15839 * C6975 + C15846 * C7353 +
             C32460 * C7354) *
                C32542) *
               C32842) *
              C32513 * C211) *
         C32487) /
            (p * q * std::sqrt(p + q));
    d2ee[90] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                 (((((C31567 * C119 + C32455 * C126 + C31563 * C120 +
                      C32463 * C127 + C31573 * C121 + C17830 * C128) *
                         C118 +
                     (C31567 * C131 + C32455 * C140 + C31563 * C132 +
                      C32463 * C141 + C31573 * C133 + C17830 * C142) *
                         C32542) *
                        C32637 +
                    ((C19103 + C19104 + C19105) * C118 +
                     (C19106 + C19107 + C19108) * C32542) *
                        C32644 +
                    C24658 * C24412) *
                       C32513 * C440 -
                   (((C19109 + C19110 + C19111) * C32542 +
                     (C19112 + C19113 + C19114) * C118) *
                        C24412 +
                    (C19745 * C32542 + C19746 * C118) * C32644 +
                    ((C17992 + C17991 + C17990) * C32542 +
                     (C17989 + C17988 + C17987) * C118) *
                        C32637) *
                       C32513 * C441) *
                      C442 +
                  ((((C18289 + C18290 + C18291) * C118 +
                     (C18292 + C18293 + C18294) * C32542) *
                        C32637 +
                    ((C19327 + C19328 + C19329) * C118 +
                     (C19330 + C19331 + C19332) * C32542) *
                        C32644 +
                    ((C31567 * C1066 + C32455 * C1078 + C31563 * C1067 +
                      C32463 * C1079 + C31573 * C2192 + C17830 * C2193) *
                         C118 +
                     (C31567 * C1081 + C32455 * C1093 + C31563 * C1082 +
                      C32463 * C1094 + C31573 * C2194 + C17830 * C2195) *
                         C32542) *
                        C24412) *
                       C32513 * C441 -
                   (((C31573 * C346 + C17830 * C356 + C31563 * C345 +
                      C32463 * C355 + C31567 * C344 + C32455 * C354) *
                         C32542 +
                     (C31573 * C326 + C17830 * C341 + C31563 * C325 +
                      C32463 * C340 + C31567 * C324 + C32455 * C339) *
                         C118) *
                        C24412 +
                    ((C19544 + C19543 + C19542) * C32542 +
                     (C19541 + C19540 + C19539) * C118) *
                        C32644 +
                    ((C31573 * C134 + C17830 * C143 + C31563 * C133 +
                      C32463 * C142 + C31567 * C132 + C32455 * C141) *
                         C32542 +
                     (C31573 * C122 + C17830 * C129 + C31563 * C121 +
                      C32463 * C128 + C31567 * C120 + C32455 * C127) *
                         C118) *
                        C32637) *
                       C32513 * C440) *
                      C443)) /
                (p * q * std::sqrt(p + q));
    d2ee[91] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                 (((((C31567 * C119 + C32455 * C126 + C31563 * C120 +
                      C32463 * C127 + C31573 * C121 + C17830 * C128) *
                         C118 +
                     (C31567 * C131 + C32455 * C140 + C31563 * C132 +
                      C32463 * C141 + C31573 * C133 + C17830 * C142) *
                         C32542) *
                        C32637 +
                    ((C19103 + C19104 + C19105) * C118 +
                     (C19106 + C19107 + C19108) * C32542) *
                        C32644 +
                    C24658 * C24412) *
                       C530 -
                   (((C24650 + C24651 + C24652) * C32542 +
                     (C24653 + C24654 + C24655) * C118) *
                        C24412 +
                    ((C19115 + C19116 + C19117) * C32542 +
                     (C19118 + C19119 + C19120) * C118) *
                        C32644 +
                    ((C19108 + C19107 + C19106) * C32542 +
                     (C19105 + C19104 + C19103) * C118) *
                        C32637) *
                       C531) *
                      C440 +
                  (((C19743 * C118 + C19744 * C32542) * C32637 +
                    ((C19114 + C19113 + C19112) * C118 +
                     (C19111 + C19110 + C19109) * C32542) *
                        C32644 +
                    ((C31567 * C2528 + C32455 * C2531 + C31563 * C2529 +
                      C32463 * C2532 + C31573 * C2530 + C17830 * C2533) *
                         C118 +
                     (C31567 * C2534 + C32455 * C2537 + C31563 * C2535 +
                      C32463 * C2538 + C31573 * C2536 + C17830 * C2539) *
                         C32542) *
                        C24412) *
                       C531 -
                   (((C19109 + C19110 + C19111) * C32542 +
                     (C19112 + C19113 + C19114) * C118) *
                        C24412 +
                    (C19745 * C32542 + C19746 * C118) * C32644 +
                    ((C17992 + C17991 + C17990) * C32542 +
                     (C17989 + C17988 + C17987) * C118) *
                        C32637) *
                       C530) *
                      C441) *
                 C32487) /
                (p * q * std::sqrt(p + q));
    d2ee[92] += (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C31567 * C119 + C32455 * C126 + C31563 * C120 +
                     C32463 * C127 + C31573 * C121 + C17830 * C128) *
                        C118 +
                    (C31567 * C131 + C32455 * C140 + C31563 * C132 +
                     C32463 * C141 + C31573 * C133 + C17830 * C142) *
                        C32542) *
                       C32637 +
                   ((C19103 + C19104 + C19105) * C118 +
                    (C19106 + C19107 + C19108) * C32542) *
                       C32644 +
                   ((C19120 + C19119 + C19118) * C118 +
                    (C19117 + C19116 + C19115) * C32542) *
                       C24412) *
                      C32513 * C209 -
                  (((C19109 + C19110 + C19111) * C32542 +
                    (C19112 + C19113 + C19114) * C118) *
                       C24412 +
                   (C19745 * C32542 + C19746 * C118) * C32644 +
                   ((C17992 + C17991 + C17990) * C32542 +
                    (C17989 + C17988 + C17987) * C118) *
                       C32637) *
                      C32513 * C210 +
                  ((C18007 * C118 + C18008 * C32542) * C32637 +
                   ((C18622 + C18621 + C18620) * C118 +
                    (C18619 + C18618 + C18617) * C32542) *
                       C32644 +
                   ((C31567 * C1068 + C32455 * C1083 + C31563 * C1069 +
                     C32463 * C1084 + C31573 * C1070 + C17830 * C1085) *
                        C118 +
                    (C31567 * C1086 + C32455 * C1095 + C31563 * C1087 +
                     C32463 * C1096 + C31573 * C1088 + C17830 * C1097) *
                        C32542) *
                       C24412) *
                      C32513 * C211) *
                 C32487) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C31567 * C119 + C32455 * C126 + C31563 * C120 +
                     C32463 * C127 + C31573 * C121 + C17830 * C128) *
                        C118 +
                    (C31567 * C131 + C32455 * C140 + C31563 * C132 +
                     C32463 * C141 + C31573 * C133 + C17830 * C142) *
                        C32542) *
                       C32637 +
                   ((C19103 + C19104 + C19105) * C118 +
                    (C19106 + C19107 + C19108) * C32542) *
                       C32644 +
                   ((C19120 + C19119 + C19118) * C118 +
                    (C19117 + C19116 + C19115) * C32542) *
                       C24412) *
                      C32513 * C32499 * C110 -
                  (((C31573 * C346 + C17830 * C356 + C31563 * C345 +
                     C32463 * C355 + C31567 * C344 + C32455 * C354) *
                        C32542 +
                    (C31573 * C326 + C17830 * C341 + C31563 * C325 +
                     C32463 * C340 + C31567 * C324 + C32455 * C339) *
                        C118) *
                       C24412 +
                   ((C19544 + C19543 + C19542) * C32542 +
                    (C19541 + C19540 + C19539) * C118) *
                       C32644 +
                   ((C31573 * C134 + C17830 * C143 + C31563 * C133 +
                     C32463 * C142 + C31567 * C132 + C32455 * C141) *
                        C32542 +
                    (C31573 * C122 + C17830 * C129 + C31563 * C121 +
                     C32463 * C128 + C31567 * C120 + C32455 * C127) *
                        C118) *
                       C32637) *
                      C32513 * C32499 * C111 +
                  (((C31567 * C121 + C32455 * C128 + C31563 * C122 +
                     C32463 * C129 + C31573 * C123 + C17830 * C130) *
                        C118 +
                    (C31567 * C133 + C32455 * C142 + C31563 * C134 +
                     C32463 * C143 + C31573 * C135 + C17830 * C144) *
                        C32542) *
                       C32637 +
                   ((C31567 * C320 + C32455 * C335 + C31563 * C319 +
                     C32463 * C334 + C31573 * C318 + C17830 * C333) *
                        C118 +
                    (C31567 * C330 + C32455 * C350 + C31563 * C329 +
                     C32463 * C349 + C31573 * C328 + C17830 * C348) *
                        C32542) *
                       C32644 +
                   ((C31567 * C325 + C32455 * C340 + C31563 * C326 +
                     C32463 * C341 + C31573 * C327 + C17830 * C342) *
                        C118 +
                    (C31567 * C345 + C32455 * C355 + C31563 * C346 +
                     C32463 * C356 + C31573 * C347 + C17830 * C357) *
                        C32542) *
                       C24412) *
                      C32513 * C32499 * C112)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((C31567 * C119 + C32455 * C126 + C31563 * C120 +
                     C32463 * C127 + C31573 * C121 + C17830 * C128) *
                        C118 +
                    (C31567 * C131 + C32455 * C140 + C31563 * C132 +
                     C32463 * C141 + C31573 * C133 + C17830 * C142) *
                        C32542) *
                       C32637 +
                   ((C19103 + C19104 + C19105) * C118 +
                    (C19106 + C19107 + C19108) * C32542) *
                       C32644 +
                   C24658 * C24412) *
                      C315 -
                  (((C24650 + C24651 + C24652) * C32542 +
                    (C24653 + C24654 + C24655) * C118) *
                       C24412 +
                   ((C19115 + C19116 + C19117) * C32542 +
                    (C19118 + C19119 + C19120) * C118) *
                       C32644 +
                   ((C19108 + C19107 + C19106) * C32542 +
                    (C19105 + C19104 + C19103) * C118) *
                       C32637) *
                      C316 +
                  (C24658 * C32637 +
                   ((C24655 + C24654 + C24653) * C118 +
                    (C24652 + C24651 + C24650) * C32542) *
                       C32644 +
                   ((C31567 * C1964 + C32455 * C1973 + C31563 * C1965 +
                     C32463 * C1974 + C31573 * C1966 + C17830 * C1975) *
                        C118 +
                    (C31567 * C1976 + C32455 * C1982 + C31563 * C1977 +
                     C32463 * C1983 + C31573 * C1978 + C17830 * C1984) *
                        C32542) *
                       C24412) *
                      C317) *
                 C32499 * C32487) /
                    (p * q * std::sqrt(p + q));
    d2ee[93] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                 (((((C31567 * C119 + C32455 * C126 + C31563 * C120 +
                      C32463 * C127 + C31573 * C121 + C17830 * C128) *
                         C118 +
                     (C31567 * C131 + C32455 * C140 + C31563 * C132 +
                      C32463 * C141 + C31573 * C133 + C17830 * C142) *
                         C32542) *
                        C32637 +
                    ((C19103 + C19104 + C19105) * C118 +
                     (C19106 + C19107 + C19108) * C32542) *
                        C32644 +
                    C24658 * C24412) *
                       C530 -
                   (((C24650 + C24651 + C24652) * C32542 +
                     (C24653 + C24654 + C24655) * C118) *
                        C24412 +
                    ((C19115 + C19116 + C19117) * C32542 +
                     (C19118 + C19119 + C19120) * C118) *
                        C32644 +
                    ((C19108 + C19107 + C19106) * C32542 +
                     (C19105 + C19104 + C19103) * C118) *
                        C32637) *
                       C531) *
                      C32499 * C442 +
                  ((((C19539 + C19540 + C19541) * C118 +
                     (C19542 + C19543 + C19544) * C32542) *
                        C32637 +
                    ((C24963 + C24964 + C24965) * C118 +
                     (C24966 + C24967 + C24968) * C32542) *
                        C32644 +
                    ((C31567 * C1962 + C32455 * C1971 + C31563 * C1961 +
                      C32463 * C1970 + C31573 * C2342 + C17830 * C2343) *
                         C118 +
                     (C31567 * C1968 + C32455 * C1980 + C31563 * C1967 +
                      C32463 * C1979 + C31573 * C2344 + C17830 * C2345) *
                         C32542) *
                        C24412) *
                       C531 -
                   (((C24968 + C24967 + C24966) * C32542 +
                     (C24965 + C24964 + C24963) * C118) *
                        C24412 +
                    ((C19544 + C19543 + C19542) * C32542 +
                     (C19541 + C19540 + C19539) * C118) *
                        C32644 +
                    ((C31573 * C134 + C17830 * C143 + C31563 * C133 +
                      C32463 * C142 + C31567 * C132 + C32455 * C141) *
                         C32542 +
                     (C31573 * C122 + C17830 * C129 + C31563 * C121 +
                      C32463 * C128 + C31567 * C120 + C32455 * C127) *
                         C118) *
                        C32637) *
                       C530) *
                      C32499 * C443)) /
                (p * q * std::sqrt(p + q));
    d2ee[94] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C31567 * C119 + C32455 * C126 + C31563 * C120 +
                     C32463 * C127 + C31573 * C121 + C17830 * C128) *
                        C118 +
                    (C31567 * C131 + C32455 * C140 + C31563 * C132 +
                     C32463 * C141 + C31573 * C133 + C17830 * C142) *
                        C32542) *
                       C32637 +
                   ((C19103 + C19104 + C19105) * C118 +
                    (C19106 + C19107 + C19108) * C32542) *
                       C32644 +
                   ((C19120 + C19119 + C19118) * C118 +
                    (C19117 + C19116 + C19115) * C32542) *
                       C24412) *
                      C32513 * C32499 * C110 -
                  (((C31573 * C346 + C17830 * C356 + C31563 * C345 +
                     C32463 * C355 + C31567 * C344 + C32455 * C354) *
                        C32542 +
                    (C31573 * C326 + C17830 * C341 + C31563 * C325 +
                     C32463 * C340 + C31567 * C324 + C32455 * C339) *
                        C118) *
                       C24412 +
                   ((C19544 + C19543 + C19542) * C32542 +
                    (C19541 + C19540 + C19539) * C118) *
                       C32644 +
                   ((C31573 * C134 + C17830 * C143 + C31563 * C133 +
                     C32463 * C142 + C31567 * C132 + C32455 * C141) *
                        C32542 +
                    (C31573 * C122 + C17830 * C129 + C31563 * C121 +
                     C32463 * C128 + C31567 * C120 + C32455 * C127) *
                        C118) *
                       C32637) *
                      C32513 * C32499 * C111 +
                  (((C31567 * C121 + C32455 * C128 + C31563 * C122 +
                     C32463 * C129 + C31573 * C123 + C17830 * C130) *
                        C118 +
                    (C31567 * C133 + C32455 * C142 + C31563 * C134 +
                     C32463 * C143 + C31573 * C135 + C17830 * C144) *
                        C32542) *
                       C32637 +
                   ((C31567 * C320 + C32455 * C335 + C31563 * C319 +
                     C32463 * C334 + C31573 * C318 + C17830 * C333) *
                        C118 +
                    (C31567 * C330 + C32455 * C350 + C31563 * C329 +
                     C32463 * C349 + C31573 * C328 + C17830 * C348) *
                        C32542) *
                       C32644 +
                   ((C31567 * C325 + C32455 * C340 + C31563 * C326 +
                     C32463 * C341 + C31573 * C327 + C17830 * C342) *
                        C118 +
                    (C31567 * C345 + C32455 * C355 + C31563 * C346 +
                     C32463 * C356 + C31573 * C347 + C17830 * C357) *
                        C32542) *
                       C24412) *
                      C32513 * C32499 * C112)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C31567 * C119 + C32455 * C126 + C31563 * C120 +
                     C32463 * C127 + C31573 * C121 + C17830 * C128) *
                        C118 +
                    (C31567 * C131 + C32455 * C140 + C31563 * C132 +
                     C32463 * C141 + C31573 * C133 + C17830 * C142) *
                        C32542) *
                       C32637 +
                   ((C19103 + C19104 + C19105) * C118 +
                    (C19106 + C19107 + C19108) * C32542) *
                       C32644 +
                   ((C19120 + C19119 + C19118) * C118 +
                    (C19117 + C19116 + C19115) * C32542) *
                       C24412) *
                      C32513 * C209 -
                  (((C19109 + C19110 + C19111) * C32542 +
                    (C19112 + C19113 + C19114) * C118) *
                       C24412 +
                   (C19745 * C32542 + C19746 * C118) * C32644 +
                   ((C17992 + C17991 + C17990) * C32542 +
                    (C17989 + C17988 + C17987) * C118) *
                       C32637) *
                      C32513 * C210 +
                  ((C18007 * C118 + C18008 * C32542) * C32637 +
                   ((C18622 + C18621 + C18620) * C118 +
                    (C18619 + C18618 + C18617) * C32542) *
                       C32644 +
                   ((C31567 * C1068 + C32455 * C1083 + C31563 * C1069 +
                     C32463 * C1084 + C31573 * C1070 + C17830 * C1085) *
                        C118 +
                    (C31567 * C1086 + C32455 * C1095 + C31563 * C1087 +
                     C32463 * C1096 + C31573 * C1088 + C17830 * C1097) *
                        C32542) *
                       C24412) *
                      C32513 * C211) *
                 C32487) /
                    (p * q * std::sqrt(p + q));
    d2ee[95] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C15053 * C119 + C32867 * C126 + C15054 * C120 + C32860 * C127 +
              C15055 * C121 + C32847 * C128 + C15056 * C122 + C32830 * C129) *
                 C118 +
             (C15053 * C131 + C32867 * C140 + C15054 * C132 + C32860 * C141 +
              C15055 * C133 + C32847 * C142 + C15056 * C134 + C32830 * C143) *
                 C32542) *
                C20880 +
            ((C21111 + C21112 + C21113 + C21114) * C118 +
             (C21115 + C21116 + C21117 + C21118) * C32542) *
                C32641) *
               C32513 * C440 -
           (((C15734 + C15735 + C15736 + C15737) * C32542 +
             (C15738 + C15739 + C15740 + C15741) * C118) *
                C32641 +
            ((C15197 + C15196 + C15195 + C15194) * C32542 +
             (C15193 + C15192 + C15191 + C15190) * C118) *
                C20880) *
               C32513 * C441) *
              C442 +
          ((((C15450 + C15451 + C15452 + C15453) * C118 +
             (C15454 + C15455 + C15456 + C15457) * C32542) *
                C20880 +
            ((C15053 * C619 + C32867 * C624 + C15054 * C620 + C32860 * C625 +
              C15055 * C621 + C32847 * C626 + C15056 * C622 + C32830 * C627) *
                 C118 +
             (C15053 * C629 + C32867 * C634 + C15054 * C630 + C32860 * C635 +
              C15055 * C631 + C32847 * C636 + C15056 * C632 + C32830 * C637) *
                 C32542) *
                C32641) *
               C32513 * C441 -
           (((C15056 * C328 + C32830 * C348 + C15055 * C329 + C32847 * C349 +
              C15054 * C330 + C32860 * C350 + C15053 * C331 + C32867 * C351) *
                 C32542 +
             (C15056 * C318 + C32830 * C333 + C15055 * C319 + C32847 * C334 +
              C15054 * C320 + C32860 * C335 + C15053 * C321 + C32867 * C336) *
                 C118) *
                C32641 +
            ((C15056 * C135 + C32830 * C144 + C15055 * C134 + C32847 * C143 +
              C15054 * C133 + C32860 * C142 + C15053 * C132 + C32867 * C141) *
                 C32542 +
             (C15056 * C123 + C32830 * C130 + C15055 * C122 + C32847 * C129 +
              C15054 * C121 + C32860 * C128 + C15053 * C120 + C32867 * C127) *
                 C118) *
                C20880) *
               C32513 * C440) *
              C443)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C15845 * C119 + C15839 * C126 + C15846 * C120 + C32460 * C127) *
                 C757 +
             (C15845 * C131 + C15839 * C140 + C15846 * C132 + C32460 * C141) *
                 C32861 +
             (C15982 + C15983) * C758 + (C15984 + C15985) * C32849 +
             C15998 * C759 + C15999 * C32826) *
                C20880 +
            ((C17058 + C17059) * C757 + (C17060 + C17061) * C32861 +
             C17713 * C758 + C17714 * C32849 + C20039 * C759 +
             C20040 * C32826) *
                C32641) *
               C32513 * C440 -
           (((C16550 + C16551) * C32826 + (C16552 + C16553) * C759 +
             C20781 * C32849 + C20782 * C758 + C17717 * C32861 +
             C17718 * C757) *
                C32641 +
            ((C15993 + C15992) * C32826 + (C15991 + C15990) * C759 +
             (C15989 + C15988) * C32849 + (C15987 + C15986) * C758 +
             (C15985 + C15984) * C32861 + (C15983 + C15982) * C757) *
                C20880) *
               C32513 * C441) *
              C442 +
          ((((C16254 + C16255) * C757 + (C16256 + C16257) * C32861 +
             (C16258 + C16259) * C758 + (C16260 + C16261) * C32849 +
             (C16262 + C16263) * C759 + (C16264 + C16265) * C32826) *
                C20880 +
            ((C17293 + C17294) * C757 + (C17295 + C17296) * C32861 +
             (C20389 + C20390) * C758 + (C20391 + C20392) * C32849 +
             (C15845 * C1581 + C15839 * C1584 + C15846 * C1582 +
              C32460 * C1585) *
                 C759 +
             (C15845 * C1587 + C15839 * C1590 + C15846 * C1588 +
              C32460 * C1591) *
                 C32826) *
                C32641) *
               C32513 * C441 -
           (((C20392 + C20391) * C32826 + (C20390 + C20389) * C759 +
             (C17296 + C17295) * C32849 + (C17294 + C17293) * C758 +
             (C17514 + C17513) * C32861 + (C17512 + C17511) * C757) *
                C32641 +
            ((C16261 + C16260) * C32826 + (C16259 + C16258) * C759 +
             (C16257 + C16256) * C32849 + (C16255 + C16254) * C758 +
             (C15846 * C133 + C32460 * C142 + C15845 * C132 + C15839 * C141) *
                 C32861 +
             (C15846 * C121 + C32460 * C128 + C15845 * C120 + C15839 * C127) *
                 C757) *
                C20880) *
               C32513 * C440) *
              C443)) /
            (p * q * std::sqrt(p + q));
    d2ee[96] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C15053 * C119 + C32867 * C126 + C15054 * C120 + C32860 * C127 +
              C15055 * C121 + C32847 * C128 + C15056 * C122 + C32830 * C129) *
                 C118 +
             (C15053 * C131 + C32867 * C140 + C15054 * C132 + C32860 * C141 +
              C15055 * C133 + C32847 * C142 + C15056 * C134 + C32830 * C143) *
                 C32542) *
                C20880 +
            ((C21111 + C21112 + C21113 + C21114) * C118 +
             (C21115 + C21116 + C21117 + C21118) * C32542) *
                C32641) *
               C530 -
           (((C21119 + C21120 + C21121 + C21122) * C32542 +
             (C21123 + C21124 + C21125 + C21126) * C118) *
                C32641 +
            ((C21118 + C21117 + C21116 + C21115) * C32542 +
             (C21114 + C21113 + C21112 + C21111) * C118) *
                C20880) *
               C531) *
              C440 +
          ((((C15741 + C15740 + C15739 + C15738) * C118 +
             (C15737 + C15736 + C15735 + C15734) * C32542) *
                C20880 +
            ((C15053 * C1065 + C32867 * C1077 + C15054 * C1066 +
              C32860 * C1078 + C15055 * C1067 + C32847 * C1079 +
              C15056 * C2192 + C32830 * C2193) *
                 C118 +
             (C15053 * C1080 + C32867 * C1092 + C15054 * C1081 +
              C32860 * C1093 + C15055 * C1082 + C32847 * C1094 +
              C15056 * C2194 + C32830 * C2195) *
                 C32542) *
                C32641) *
               C531 -
           (((C15734 + C15735 + C15736 + C15737) * C32542 +
             (C15738 + C15739 + C15740 + C15741) * C118) *
                C32641 +
            ((C15197 + C15196 + C15195 + C15194) * C32542 +
             (C15193 + C15192 + C15191 + C15190) * C118) *
                C20880) *
               C530) *
              C441) *
         C32487) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C15845 * C119 + C15839 * C126 + C15846 * C120 + C32460 * C127) *
                 C757 +
             (C15845 * C131 + C15839 * C140 + C15846 * C132 + C32460 * C141) *
                 C32861 +
             (C15982 + C15983) * C758 + (C15984 + C15985) * C32849 +
             C15998 * C759 + C15999 * C32826) *
                C20880 +
            ((C17058 + C17059) * C757 + (C17060 + C17061) * C32861 +
             C17713 * C758 + C17714 * C32849 + C20039 * C759 +
             C20040 * C32826) *
                C32641) *
               C530 -
           (((C16874 + C16875) * C32826 + (C16876 + C16877) * C759 +
             C17715 * C32849 + C17716 * C758 + (C17065 + C17064) * C32861 +
             (C17063 + C17062) * C757) *
                C32641 +
            (C20781 * C32826 + C20782 * C759 + C17717 * C32849 + C17718 * C758 +
             (C17061 + C17060) * C32861 + (C17059 + C17058) * C757) *
                C20880) *
               C531) *
              C440 +
          (((C17713 * C757 + C17714 * C32861 + C20039 * C758 + C20040 * C32849 +
             (C16553 + C16552) * C759 + (C16551 + C16550) * C32826) *
                C20880 +
            (C17040 * C757 + C17041 * C32861 + (C16877 + C16876) * C758 +
             (C16875 + C16874) * C32849 +
             (C15845 * C6301 + C15839 * C6305 + C15846 * C7177 +
              C32460 * C7178) *
                 C759 +
             (C15845 * C6306 + C15839 * C6310 + C15846 * C7179 +
              C32460 * C7180) *
                 C32826) *
                C32641) *
               C531 -
           (((C16550 + C16551) * C32826 + (C16552 + C16553) * C759 +
             C20781 * C32849 + C20782 * C758 + C17717 * C32861 +
             C17718 * C757) *
                C32641 +
            ((C15993 + C15992) * C32826 + (C15991 + C15990) * C759 +
             (C15989 + C15988) * C32849 + (C15987 + C15986) * C758 +
             (C15985 + C15984) * C32861 + (C15983 + C15982) * C757) *
                C20880) *
               C530) *
              C441) *
         C32487) /
            (p * q * std::sqrt(p + q));
    d2ee[97] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C15053 * C119 + C32867 * C126 + C15054 * C120 + C32860 * C127 +
             C15055 * C121 + C32847 * C128 + C15056 * C122 + C32830 * C129) *
                C118 +
            (C15053 * C131 + C32867 * C140 + C15054 * C132 + C32860 * C141 +
             C15055 * C133 + C32847 * C142 + C15056 * C134 + C32830 * C143) *
                C32542) *
               C20880 +
           ((C15053 * C322 + C32867 * C337 + C15054 * C321 + C32860 * C336 +
             C15055 * C320 + C32847 * C335 + C15056 * C319 + C32830 * C334) *
                C118 +
            (C15053 * C332 + C32867 * C352 + C15054 * C331 + C32860 * C351 +
             C15055 * C330 + C32847 * C350 + C15056 * C329 + C32830 * C349) *
                C32542) *
               C32641) *
              C32513 * C209 -
          (((C15734 + C15735 + C15736 + C15737) * C32542 +
            (C15738 + C15739 + C15740 + C15741) * C118) *
               C32641 +
           ((C15197 + C15196 + C15195 + C15194) * C32542 +
            (C15193 + C15192 + C15191 + C15190) * C118) *
               C20880) *
              C32513 * C210 +
          (((C15205 + C15204 + C15203 + C15202) * C118 +
            (C15201 + C15200 + C15199 + C15198) * C32542) *
               C20880 +
           ((C15053 * C1064 + C32867 * C1076 + C15054 * C1063 + C32860 * C1075 +
             C15055 * C1062 + C32847 * C1074 + C15056 * C1430 +
             C32830 * C1431) *
                C118 +
            (C15053 * C1073 + C32867 * C1091 + C15054 * C1072 + C32860 * C1090 +
             C15055 * C1071 + C32847 * C1089 + C15056 * C1432 +
             C32830 * C1433) *
                C32542) *
               C32641) *
              C32513 * C211) *
         C32487) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C15053 * C119 + C32867 * C126 + C15054 * C120 + C32860 * C127 +
             C15055 * C121 + C32847 * C128 + C15056 * C122 + C32830 * C129) *
                C118 +
            (C15053 * C131 + C32867 * C140 + C15054 * C132 + C32860 * C141 +
             C15055 * C133 + C32847 * C142 + C15056 * C134 + C32830 * C143) *
                C32542) *
               C20880 +
           ((C15053 * C322 + C32867 * C337 + C15054 * C321 + C32860 * C336 +
             C15055 * C320 + C32847 * C335 + C15056 * C319 + C32830 * C334) *
                C118 +
            (C15053 * C332 + C32867 * C352 + C15054 * C331 + C32860 * C351 +
             C15055 * C330 + C32847 * C350 + C15056 * C329 + C32830 * C349) *
                C32542) *
               C32641) *
              C32513 * C32499 * C110 -
          (((C15056 * C328 + C32830 * C348 + C15055 * C329 + C32847 * C349 +
             C15054 * C330 + C32860 * C350 + C15053 * C331 + C32867 * C351) *
                C32542 +
            (C15056 * C318 + C32830 * C333 + C15055 * C319 + C32847 * C334 +
             C15054 * C320 + C32860 * C335 + C15053 * C321 + C32867 * C336) *
                C118) *
               C32641 +
           ((C15056 * C135 + C32830 * C144 + C15055 * C134 + C32847 * C143 +
             C15054 * C133 + C32860 * C142 + C15053 * C132 + C32867 * C141) *
                C32542 +
            (C15056 * C123 + C32830 * C130 + C15055 * C122 + C32847 * C129 +
             C15054 * C121 + C32860 * C128 + C15053 * C120 + C32867 * C127) *
                C118) *
               C20880) *
              C32513 * C32499 * C111 +
          (((C15053 * C121 + C32867 * C128 + C15054 * C122 + C32860 * C129 +
             C15055 * C123 + C32847 * C130 + C15056 * C124 + C32830 * C137) *
                C118 +
            (C15053 * C133 + C32867 * C142 + C15054 * C134 + C32860 * C143 +
             C15055 * C135 + C32847 * C144 + C15056 * C136 + C32830 * C145) *
                C32542) *
               C20880 +
           ((C15053 * C320 + C32867 * C335 + C15054 * C319 + C32860 * C334 +
             C15055 * C318 + C32847 * C333 + C15056 * C532 + C32830 * C533) *
                C118 +
            (C15053 * C330 + C32867 * C350 + C15054 * C329 + C32860 * C349 +
             C15055 * C328 + C32847 * C348 + C15056 * C534 + C32830 * C535) *
                C32542) *
               C32641) *
              C32513 * C32499 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C15053 * C119 + C32867 * C126 + C15054 * C120 + C32860 * C127 +
             C15055 * C121 + C32847 * C128 + C15056 * C122 + C32830 * C129) *
                C118 +
            (C15053 * C131 + C32867 * C140 + C15054 * C132 + C32860 * C141 +
             C15055 * C133 + C32847 * C142 + C15056 * C134 + C32830 * C143) *
                C32542) *
               C20880 +
           ((C21111 + C21112 + C21113 + C21114) * C118 +
            (C21115 + C21116 + C21117 + C21118) * C32542) *
               C32641) *
              C315 -
          (((C21119 + C21120 + C21121 + C21122) * C32542 +
            (C21123 + C21124 + C21125 + C21126) * C118) *
               C32641 +
           ((C21118 + C21117 + C21116 + C21115) * C32542 +
            (C21114 + C21113 + C21112 + C21111) * C118) *
               C20880) *
              C316 +
          (((C21126 + C21125 + C21124 + C21123) * C118 +
            (C21122 + C21121 + C21120 + C21119) * C32542) *
               C20880 +
           ((C15053 * C1963 + C32867 * C1972 + C15054 * C1962 + C32860 * C1971 +
             C15055 * C1961 + C32847 * C1970 + C15056 * C2342 +
             C32830 * C2343) *
                C118 +
            (C15053 * C1969 + C32867 * C1981 + C15054 * C1968 + C32860 * C1980 +
             C15055 * C1967 + C32847 * C1979 + C15056 * C2344 +
             C32830 * C2345) *
                C32542) *
               C32641) *
              C317) *
         C32499 * C32487) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C15845 * C119 + C15839 * C126 + C15846 * C120 + C32460 * C127) *
                C757 +
            (C15845 * C131 + C15839 * C140 + C15846 * C132 + C32460 * C141) *
                C32861 +
            (C15982 + C15983) * C758 + (C15984 + C15985) * C32849 +
            C15998 * C759 + C15999 * C32826) *
               C20880 +
           ((C17058 + C17059) * C757 + (C17060 + C17061) * C32861 +
            C17713 * C758 + C17714 * C32849 + C20039 * C759 + C20040 * C32826) *
               C32641) *
              C32513 * C32499 * C110 -
          (((C20392 + C20391) * C32826 + (C20390 + C20389) * C759 +
            (C17296 + C17295) * C32849 + (C17294 + C17293) * C758 +
            (C17514 + C17513) * C32861 + (C17512 + C17511) * C757) *
               C32641 +
           ((C16261 + C16260) * C32826 + (C16259 + C16258) * C759 +
            (C16257 + C16256) * C32849 + (C16255 + C16254) * C758 +
            (C15846 * C133 + C32460 * C142 + C15845 * C132 + C15839 * C141) *
                C32861 +
            (C15846 * C121 + C32460 * C128 + C15845 * C120 + C15839 * C127) *
                C757) *
               C20880) *
              C32513 * C32499 * C111 +
          (((C15845 * C121 + C15839 * C128 + C15846 * C122 + C32460 * C129) *
                C757 +
            (C15845 * C133 + C15839 * C142 + C15846 * C134 + C32460 * C143) *
                C32861 +
            (C15845 * C215 + C15839 * C230 + C15846 * C214 + C32460 * C229) *
                C758 +
            (C15845 * C225 + C15839 * C245 + C15846 * C224 + C32460 * C244) *
                C32849 +
            (C15845 * C220 + C15839 * C235 + C15846 * C221 + C32460 * C236) *
                C759 +
            (C15845 * C240 + C15839 * C250 + C15846 * C241 + C32460 * C251) *
                C32826) *
               C20880 +
           ((C15845 * C320 + C15839 * C335 + C15846 * C319 + C32460 * C334) *
                C757 +
            (C15845 * C330 + C15839 * C350 + C15846 * C329 + C32460 * C349) *
                C32861 +
            (C15845 * C620 + C15839 * C625 + C15846 * C621 + C32460 * C626) *
                C758 +
            (C15845 * C630 + C15839 * C635 + C15846 * C631 + C32460 * C636) *
                C32849 +
            (C15845 * C1062 + C15839 * C1074 + C15846 * C1430 +
             C32460 * C1431) *
                C759 +
            (C15845 * C1071 + C15839 * C1089 + C15846 * C1432 +
             C32460 * C1433) *
                C32826) *
               C32641) *
              C32513 * C32499 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C15845 * C119 + C15839 * C126 + C15846 * C120 + C32460 * C127) *
                C757 +
            (C15845 * C131 + C15839 * C140 + C15846 * C132 + C32460 * C141) *
                C32861 +
            (C15982 + C15983) * C758 + (C15984 + C15985) * C32849 +
            C15998 * C759 + C15999 * C32826) *
               C20880 +
           ((C17058 + C17059) * C757 + (C17060 + C17061) * C32861 +
            C17713 * C758 + C17714 * C32849 + C20039 * C759 + C20040 * C32826) *
               C32641) *
              C32513 * C209 -
          (((C16550 + C16551) * C32826 + (C16552 + C16553) * C759 +
            C20781 * C32849 + C20782 * C758 + C17717 * C32861 + C17718 * C757) *
               C32641 +
           ((C15993 + C15992) * C32826 + (C15991 + C15990) * C759 +
            (C15989 + C15988) * C32849 + (C15987 + C15986) * C758 +
            (C15985 + C15984) * C32861 + (C15983 + C15982) * C757) *
               C20880) *
              C32513 * C210 +
          ((C15998 * C757 + C15999 * C32861 + C16000 * C758 + C16001 * C32849 +
            (C15997 + C15996) * C759 + (C15995 + C15994) * C32826) *
               C20880 +
           (C20039 * C757 + C20040 * C32861 + (C16553 + C16552) * C758 +
            (C16551 + C16550) * C32849 +
            (C15845 * C6300 + C15839 * C6304 + C15846 * C6504 +
             C32460 * C6505) *
                C759 +
            (C15845 * C6303 + C15839 * C6309 + C15846 * C6506 +
             C32460 * C6507) *
                C32826) *
               C32641) *
              C32513 * C211) *
         C32487) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C15845 * C119 + C15839 * C126 + C15846 * C120 + C32460 * C127) *
                C757 +
            (C15845 * C131 + C15839 * C140 + C15846 * C132 + C32460 * C141) *
                C32861 +
            (C15982 + C15983) * C758 + (C15984 + C15985) * C32849 +
            C15998 * C759 + C15999 * C32826) *
               C20880 +
           ((C17058 + C17059) * C757 + (C17060 + C17061) * C32861 +
            C17713 * C758 + C17714 * C32849 + C20039 * C759 + C20040 * C32826) *
               C32641) *
              C315 -
          (((C16874 + C16875) * C32826 + (C16876 + C16877) * C759 +
            C17715 * C32849 + C17716 * C758 + (C17065 + C17064) * C32861 +
            (C17063 + C17062) * C757) *
               C32641 +
           (C20781 * C32826 + C20782 * C759 + C17717 * C32849 + C17718 * C758 +
            (C17061 + C17060) * C32861 + (C17059 + C17058) * C757) *
               C20880) *
              C316 +
          ((C17076 * C757 + C17077 * C32861 + C17040 * C758 + C17041 * C32849 +
            (C16877 + C16876) * C759 + (C16875 + C16874) * C32826) *
               C20880 +
           ((C17075 + C17074) * C757 + (C17073 + C17072) * C32861 +
            (C17071 + C17070) * C758 + (C17069 + C17068) * C32849 +
            (C15845 * C6966 + C15839 * C6970 + C15846 * C7351 +
             C32460 * C7352) *
                C759 +
            (C15845 * C6969 + C15839 * C6975 + C15846 * C7353 +
             C32460 * C7354) *
                C32826) *
               C32641) *
              C317) *
         C32499 * C32487) /
            (p * q * std::sqrt(p + q));
    d2ee[98] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C15053 * C119 + C32867 * C126 + C15054 * C120 + C32860 * C127 +
              C15055 * C121 + C32847 * C128 + C15056 * C122 + C32830 * C129) *
                 C118 +
             (C15053 * C131 + C32867 * C140 + C15054 * C132 + C32860 * C141 +
              C15055 * C133 + C32847 * C142 + C15056 * C134 + C32830 * C143) *
                 C32542) *
                C20880 +
            ((C21111 + C21112 + C21113 + C21114) * C118 +
             (C21115 + C21116 + C21117 + C21118) * C32542) *
                C32641) *
               C530 -
           (((C21119 + C21120 + C21121 + C21122) * C32542 +
             (C21123 + C21124 + C21125 + C21126) * C118) *
                C32641 +
            ((C21118 + C21117 + C21116 + C21115) * C32542 +
             (C21114 + C21113 + C21112 + C21111) * C118) *
                C20880) *
               C531) *
              C32499 * C442 +
          ((((C21403 + C21404 + C21405 + C21406) * C118 +
             (C21407 + C21408 + C21409 + C21410) * C32542) *
                C20880 +
            ((C15053 * C324 + C32867 * C339 + C15054 * C325 + C32860 * C340 +
              C15055 * C326 + C32847 * C341 + C15056 * C327 + C32830 * C342) *
                 C118 +
             (C15053 * C344 + C32867 * C354 + C15054 * C345 + C32860 * C355 +
              C15055 * C346 + C32847 * C356 + C15056 * C347 + C32830 * C357) *
                 C32542) *
                C32641) *
               C531 -
           (((C21410 + C21409 + C21408 + C21407) * C32542 +
             (C21406 + C21405 + C21404 + C21403) * C118) *
                C32641 +
            ((C15056 * C135 + C32830 * C144 + C15055 * C134 + C32847 * C143 +
              C15054 * C133 + C32860 * C142 + C15053 * C132 + C32867 * C141) *
                 C32542 +
             (C15056 * C123 + C32830 * C130 + C15055 * C122 + C32847 * C129 +
              C15054 * C121 + C32860 * C128 + C15053 * C120 + C32867 * C127) *
                 C118) *
                C20880) *
               C530) *
              C32499 * C443)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C15845 * C119 + C15839 * C126 + C15846 * C120 + C32460 * C127) *
                 C757 +
             (C15845 * C131 + C15839 * C140 + C15846 * C132 + C32460 * C141) *
                 C32861 +
             (C15982 + C15983) * C758 + (C15984 + C15985) * C32849 +
             C15998 * C759 + C15999 * C32826) *
                C20880 +
            ((C17058 + C17059) * C757 + (C17060 + C17061) * C32861 +
             C17713 * C758 + C17714 * C32849 + C20039 * C759 +
             C20040 * C32826) *
                C32641) *
               C530 -
           (((C16874 + C16875) * C32826 + (C16876 + C16877) * C759 +
             C17715 * C32849 + C17716 * C758 + (C17065 + C17064) * C32861 +
             (C17063 + C17062) * C757) *
                C32641 +
            (C20781 * C32826 + C20782 * C759 + C17717 * C32849 + C17718 * C758 +
             (C17061 + C17060) * C32861 + (C17059 + C17058) * C757) *
                C20880) *
               C531) *
              C32499 * C442 +
          ((((C17511 + C17512) * C757 + (C17513 + C17514) * C32861 +
             (C17293 + C17294) * C758 + (C17295 + C17296) * C32849 +
             (C20389 + C20390) * C759 + (C20391 + C20392) * C32826) *
                C20880 +
            ((C17515 + C17516) * C757 + (C17517 + C17518) * C32861 +
             (C17297 + C17298) * C758 + (C17299 + C17300) * C32849 +
             (C15845 * C1069 + C15839 * C1084 + C15846 * C1070 +
              C32460 * C1085) *
                 C759 +
             (C15845 * C1087 + C15839 * C1096 + C15846 * C1088 +
              C32460 * C1097) *
                 C32826) *
                C32641) *
               C531 -
           (((C20392 + C20391) * C32826 + (C20390 + C20389) * C759 +
             (C17296 + C17295) * C32849 + (C17294 + C17293) * C758 +
             (C17514 + C17513) * C32861 + (C17512 + C17511) * C757) *
                C32641 +
            ((C16261 + C16260) * C32826 + (C16259 + C16258) * C759 +
             (C16257 + C16256) * C32849 + (C16255 + C16254) * C758 +
             (C15846 * C133 + C32460 * C142 + C15845 * C132 + C15839 * C141) *
                 C32861 +
             (C15846 * C121 + C32460 * C128 + C15845 * C120 + C15839 * C127) *
                 C757) *
                C20880) *
               C530) *
              C32499 * C443)) /
            (p * q * std::sqrt(p + q));
    d2ee[99] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C15053 * C119 + C32867 * C126 + C15054 * C120 + C32860 * C127 +
             C15055 * C121 + C32847 * C128 + C15056 * C122 + C32830 * C129) *
                C118 +
            (C15053 * C131 + C32867 * C140 + C15054 * C132 + C32860 * C141 +
             C15055 * C133 + C32847 * C142 + C15056 * C134 + C32830 * C143) *
                C32542) *
               C20880 +
           ((C15053 * C322 + C32867 * C337 + C15054 * C321 + C32860 * C336 +
             C15055 * C320 + C32847 * C335 + C15056 * C319 + C32830 * C334) *
                C118 +
            (C15053 * C332 + C32867 * C352 + C15054 * C331 + C32860 * C351 +
             C15055 * C330 + C32847 * C350 + C15056 * C329 + C32830 * C349) *
                C32542) *
               C32641) *
              C32513 * C32499 * C110 -
          (((C15056 * C328 + C32830 * C348 + C15055 * C329 + C32847 * C349 +
             C15054 * C330 + C32860 * C350 + C15053 * C331 + C32867 * C351) *
                C32542 +
            (C15056 * C318 + C32830 * C333 + C15055 * C319 + C32847 * C334 +
             C15054 * C320 + C32860 * C335 + C15053 * C321 + C32867 * C336) *
                C118) *
               C32641 +
           ((C15056 * C135 + C32830 * C144 + C15055 * C134 + C32847 * C143 +
             C15054 * C133 + C32860 * C142 + C15053 * C132 + C32867 * C141) *
                C32542 +
            (C15056 * C123 + C32830 * C130 + C15055 * C122 + C32847 * C129 +
             C15054 * C121 + C32860 * C128 + C15053 * C120 + C32867 * C127) *
                C118) *
               C20880) *
              C32513 * C32499 * C111 +
          (((C15053 * C121 + C32867 * C128 + C15054 * C122 + C32860 * C129 +
             C15055 * C123 + C32847 * C130 + C15056 * C124 + C32830 * C137) *
                C118 +
            (C15053 * C133 + C32867 * C142 + C15054 * C134 + C32860 * C143 +
             C15055 * C135 + C32847 * C144 + C15056 * C136 + C32830 * C145) *
                C32542) *
               C20880 +
           ((C15053 * C320 + C32867 * C335 + C15054 * C319 + C32860 * C334 +
             C15055 * C318 + C32847 * C333 + C15056 * C532 + C32830 * C533) *
                C118 +
            (C15053 * C330 + C32867 * C350 + C15054 * C329 + C32860 * C349 +
             C15055 * C328 + C32847 * C348 + C15056 * C534 + C32830 * C535) *
                C32542) *
               C32641) *
              C32513 * C32499 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C15053 * C119 + C32867 * C126 + C15054 * C120 + C32860 * C127 +
             C15055 * C121 + C32847 * C128 + C15056 * C122 + C32830 * C129) *
                C118 +
            (C15053 * C131 + C32867 * C140 + C15054 * C132 + C32860 * C141 +
             C15055 * C133 + C32847 * C142 + C15056 * C134 + C32830 * C143) *
                C32542) *
               C20880 +
           ((C15053 * C322 + C32867 * C337 + C15054 * C321 + C32860 * C336 +
             C15055 * C320 + C32847 * C335 + C15056 * C319 + C32830 * C334) *
                C118 +
            (C15053 * C332 + C32867 * C352 + C15054 * C331 + C32860 * C351 +
             C15055 * C330 + C32847 * C350 + C15056 * C329 + C32830 * C349) *
                C32542) *
               C32641) *
              C32513 * C209 -
          (((C15734 + C15735 + C15736 + C15737) * C32542 +
            (C15738 + C15739 + C15740 + C15741) * C118) *
               C32641 +
           ((C15197 + C15196 + C15195 + C15194) * C32542 +
            (C15193 + C15192 + C15191 + C15190) * C118) *
               C20880) *
              C32513 * C210 +
          (((C15205 + C15204 + C15203 + C15202) * C118 +
            (C15201 + C15200 + C15199 + C15198) * C32542) *
               C20880 +
           ((C15053 * C1064 + C32867 * C1076 + C15054 * C1063 + C32860 * C1075 +
             C15055 * C1062 + C32847 * C1074 + C15056 * C1430 +
             C32830 * C1431) *
                C118 +
            (C15053 * C1073 + C32867 * C1091 + C15054 * C1072 + C32860 * C1090 +
             C15055 * C1071 + C32847 * C1089 + C15056 * C1432 +
             C32830 * C1433) *
                C32542) *
               C32641) *
              C32513 * C211) *
         C32487) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C15845 * C119 + C15839 * C126 + C15846 * C120 + C32460 * C127) *
                C757 +
            (C15845 * C131 + C15839 * C140 + C15846 * C132 + C32460 * C141) *
                C32861 +
            (C15982 + C15983) * C758 + (C15984 + C15985) * C32849 +
            C15998 * C759 + C15999 * C32826) *
               C20880 +
           ((C17058 + C17059) * C757 + (C17060 + C17061) * C32861 +
            C17713 * C758 + C17714 * C32849 + C20039 * C759 + C20040 * C32826) *
               C32641) *
              C32513 * C32499 * C110 -
          (((C20392 + C20391) * C32826 + (C20390 + C20389) * C759 +
            (C17296 + C17295) * C32849 + (C17294 + C17293) * C758 +
            (C17514 + C17513) * C32861 + (C17512 + C17511) * C757) *
               C32641 +
           ((C16261 + C16260) * C32826 + (C16259 + C16258) * C759 +
            (C16257 + C16256) * C32849 + (C16255 + C16254) * C758 +
            (C15846 * C133 + C32460 * C142 + C15845 * C132 + C15839 * C141) *
                C32861 +
            (C15846 * C121 + C32460 * C128 + C15845 * C120 + C15839 * C127) *
                C757) *
               C20880) *
              C32513 * C32499 * C111 +
          (((C15845 * C121 + C15839 * C128 + C15846 * C122 + C32460 * C129) *
                C757 +
            (C15845 * C133 + C15839 * C142 + C15846 * C134 + C32460 * C143) *
                C32861 +
            (C15845 * C215 + C15839 * C230 + C15846 * C214 + C32460 * C229) *
                C758 +
            (C15845 * C225 + C15839 * C245 + C15846 * C224 + C32460 * C244) *
                C32849 +
            (C15845 * C220 + C15839 * C235 + C15846 * C221 + C32460 * C236) *
                C759 +
            (C15845 * C240 + C15839 * C250 + C15846 * C241 + C32460 * C251) *
                C32826) *
               C20880 +
           ((C15845 * C320 + C15839 * C335 + C15846 * C319 + C32460 * C334) *
                C757 +
            (C15845 * C330 + C15839 * C350 + C15846 * C329 + C32460 * C349) *
                C32861 +
            (C15845 * C620 + C15839 * C625 + C15846 * C621 + C32460 * C626) *
                C758 +
            (C15845 * C630 + C15839 * C635 + C15846 * C631 + C32460 * C636) *
                C32849 +
            (C15845 * C1062 + C15839 * C1074 + C15846 * C1430 +
             C32460 * C1431) *
                C759 +
            (C15845 * C1071 + C15839 * C1089 + C15846 * C1432 +
             C32460 * C1433) *
                C32826) *
               C32641) *
              C32513 * C32499 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C15845 * C119 + C15839 * C126 + C15846 * C120 + C32460 * C127) *
                C757 +
            (C15845 * C131 + C15839 * C140 + C15846 * C132 + C32460 * C141) *
                C32861 +
            (C15982 + C15983) * C758 + (C15984 + C15985) * C32849 +
            C15998 * C759 + C15999 * C32826) *
               C20880 +
           ((C17058 + C17059) * C757 + (C17060 + C17061) * C32861 +
            C17713 * C758 + C17714 * C32849 + C20039 * C759 + C20040 * C32826) *
               C32641) *
              C32513 * C209 -
          (((C16550 + C16551) * C32826 + (C16552 + C16553) * C759 +
            C20781 * C32849 + C20782 * C758 + C17717 * C32861 + C17718 * C757) *
               C32641 +
           ((C15993 + C15992) * C32826 + (C15991 + C15990) * C759 +
            (C15989 + C15988) * C32849 + (C15987 + C15986) * C758 +
            (C15985 + C15984) * C32861 + (C15983 + C15982) * C757) *
               C20880) *
              C32513 * C210 +
          ((C15998 * C757 + C15999 * C32861 + C16000 * C758 + C16001 * C32849 +
            (C15997 + C15996) * C759 + (C15995 + C15994) * C32826) *
               C20880 +
           (C20039 * C757 + C20040 * C32861 + (C16553 + C16552) * C758 +
            (C16551 + C16550) * C32849 +
            (C15845 * C6300 + C15839 * C6304 + C15846 * C6504 +
             C32460 * C6505) *
                C759 +
            (C15845 * C6303 + C15839 * C6309 + C15846 * C6506 +
             C32460 * C6507) *
                C32826) *
               C32641) *
              C32513 * C211) *
         C32487) /
            (p * q * std::sqrt(p + q));
    d2ee[100] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2662 * C119 + C2656 * C126 + C2663 * C120 + C2657 * C127 +
             C2664 * C121 + C2658 * C128 + C2665 * C122 + C32830 * C129) *
                C2666 +
            (C2662 * C131 + C2656 * C140 + C2663 * C132 + C2657 * C141 +
             C2664 * C133 + C2658 * C142 + C2665 * C134 + C32830 * C143) *
                C32795 +
            (C2799 + C2800 + C2801 + C2802) * C2667 +
            (C2803 + C2804 + C2805 + C2806) * C32601) *
               C32554 * C32513 * C440 -
           ((C2807 + C2808 + C2809 + C2810) * C32601 +
            (C2811 + C2812 + C2813 + C2814) * C2667 +
            (C2806 + C2805 + C2804 + C2803) * C32795 +
            (C2802 + C2801 + C2800 + C2799) * C2666) *
               C32554 * C32513 * C441) *
              C442 +
          (((C3059 + C3060 + C3061 + C3062) * C2666 +
            (C3063 + C3064 + C3065 + C3066) * C32795 +
            (C2662 * C219 + C2656 * C234 + C2663 * C220 + C2657 * C235 +
             C2664 * C221 + C2658 * C236 + C2665 * C222 + C32830 * C237) *
                C2667 +
            (C2662 * C239 + C2656 * C249 + C2663 * C240 + C2657 * C250 +
             C2664 * C241 + C2658 * C251 + C2665 * C242 + C32830 * C252) *
                C32601) *
               C32554 * C32513 * C441 -
           ((C3066 + C3065 + C3064 + C3063) * C32601 +
            (C3062 + C3061 + C3060 + C3059) * C2667 +
            (C2665 * C135 + C32830 * C144 + C2664 * C134 + C2658 * C143 +
             C2663 * C133 + C2657 * C142 + C2662 * C132 + C2656 * C141) *
                C32795 +
            (C2665 * C123 + C32830 * C130 + C2664 * C122 + C2658 * C129 +
             C2663 * C121 + C2657 * C128 + C2662 * C120 + C2656 * C127) *
                C2666) *
               C32554 * C32513 * C440) *
              C443)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C31557 * C119 + C32776 * C126 + C31538 * C120 + C32460 * C127) *
                C7647 +
            (C31557 * C131 + C32776 * C140 + C31538 * C132 + C32460 * C141) *
                C7641 +
            (C7782 + C7783) * C7648 + (C7784 + C7785) * C7642 + C7798 * C7649 +
            C7799 * C7643 + C7800 * C7650 + C7801 * C32836) *
               C32554 * C32513 * C440 -
           ((C7794 + C7795) * C32836 + (C7796 + C7797) * C7650 +
            (C7793 + C7792) * C7643 + (C7791 + C7790) * C7649 +
            (C7789 + C7788) * C7642 + (C7787 + C7786) * C7648 +
            (C7785 + C7784) * C7641 + (C7783 + C7782) * C7647) *
               C32554 * C32513 * C441) *
              C442 +
          (((C8054 + C8055) * C7647 + (C8056 + C8057) * C7641 +
            (C8058 + C8059) * C7648 + (C8060 + C8061) * C7642 +
            (C8062 + C8063) * C7649 + (C8064 + C8065) * C7643 +
            (C31557 * C874 + C32776 * C883 + C31538 * C875 + C32460 * C884) *
                C7650 +
            (C31557 * C886 + C32776 * C892 + C31538 * C887 + C32460 * C893) *
                C32836) *
               C32554 * C32513 * C441 -
           ((C8065 + C8064) * C32836 + (C8063 + C8062) * C7650 +
            (C8061 + C8060) * C7643 + (C8059 + C8058) * C7649 +
            (C8057 + C8056) * C7642 + (C8055 + C8054) * C7648 +
            (C31538 * C133 + C32460 * C142 + C31557 * C132 + C32776 * C141) *
                C7641 +
            (C31538 * C121 + C32460 * C128 + C31557 * C120 + C32776 * C127) *
                C7647) *
               C32554 * C32513 * C440) *
              C443)) /
            (p * q * std::sqrt(p + q));
    d2ee[101] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2662 * C119 + C2656 * C126 + C2663 * C120 + C2657 * C127 +
             C2664 * C121 + C2658 * C128 + C2665 * C122 + C32830 * C129) *
                C2666 +
            (C2662 * C131 + C2656 * C140 + C2663 * C132 + C2657 * C141 +
             C2664 * C133 + C2658 * C142 + C2665 * C134 + C32830 * C143) *
                C32795 +
            (C2799 + C2800 + C2801 + C2802) * C2667 +
            (C2803 + C2804 + C2805 + C2806) * C32601) *
               C32554 * C530 -
           ((C3343 + C3344 + C3345 + C3346) * C32601 +
            (C3347 + C3348 + C3349 + C3350) * C2667 +
            (C2665 * C329 + C32830 * C349 + C2664 * C330 + C2658 * C350 +
             C2663 * C331 + C2657 * C351 + C2662 * C332 + C2656 * C352) *
                C32795 +
            (C2665 * C319 + C32830 * C334 + C2664 * C320 + C2658 * C335 +
             C2663 * C321 + C2657 * C336 + C2662 * C322 + C2656 * C337) *
                C2666) *
               C32554 * C531) *
              C440 +
          (((C3350 + C3349 + C3348 + C3347) * C2666 +
            (C3346 + C3345 + C3344 + C3343) * C32795 +
            (C2662 * C1064 + C2656 * C1076 + C2663 * C1063 + C2657 * C1075 +
             C2664 * C1062 + C2658 * C1074 + C2665 * C1430 + C32830 * C1431) *
                C2667 +
            (C2662 * C1073 + C2656 * C1091 + C2663 * C1072 + C2657 * C1090 +
             C2664 * C1071 + C2658 * C1089 + C2665 * C1432 + C32830 * C1433) *
                C32601) *
               C32554 * C531 -
           ((C2807 + C2808 + C2809 + C2810) * C32601 +
            (C2811 + C2812 + C2813 + C2814) * C2667 +
            (C2806 + C2805 + C2804 + C2803) * C32795 +
            (C2802 + C2801 + C2800 + C2799) * C2666) *
               C32554 * C530) *
              C441) *
         C32487) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C31557 * C119 + C32776 * C126 + C31538 * C120 + C32460 * C127) *
                C7647 +
            (C31557 * C131 + C32776 * C140 + C31538 * C132 + C32460 * C141) *
                C7641 +
            (C7782 + C7783) * C7648 + (C7784 + C7785) * C7642 + C7798 * C7649 +
            C7799 * C7643 + C7800 * C7650 + C7801 * C32836) *
               C32554 * C530 -
           ((C8350 + C8351) * C32836 + (C8352 + C8353) * C7650 +
            (C8354 + C8355) * C7643 + (C8356 + C8357) * C7649 +
            (C8358 + C8359) * C7642 + (C8360 + C8361) * C7648 +
            (C31538 * C331 + C32460 * C351 + C31557 * C332 + C32776 * C352) *
                C7641 +
            (C31538 * C321 + C32460 * C336 + C31557 * C322 + C32776 * C337) *
                C7647) *
               C32554 * C531) *
              C440 +
          (((C8361 + C8360) * C7647 + (C8359 + C8358) * C7641 +
            (C8357 + C8356) * C7648 + (C8355 + C8354) * C7642 +
            (C8353 + C8352) * C7649 + (C8351 + C8350) * C7643 +
            (C31557 * C6300 + C32776 * C6304 + C31538 * C6504 +
             C32460 * C6505) *
                C7650 +
            (C31557 * C6303 + C32776 * C6309 + C31538 * C6506 +
             C32460 * C6507) *
                C32836) *
               C32554 * C531 -
           ((C7794 + C7795) * C32836 + (C7796 + C7797) * C7650 +
            (C7793 + C7792) * C7643 + (C7791 + C7790) * C7649 +
            (C7789 + C7788) * C7642 + (C7787 + C7786) * C7648 +
            (C7785 + C7784) * C7641 + (C7783 + C7782) * C7647) *
               C32554 * C530) *
              C441) *
         C32487) /
            (p * q * std::sqrt(p + q));
    d2ee[102] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C2662 * C119 + C2656 * C126 + C2663 * C120 + C2657 * C127 +
            C2664 * C121 + C2658 * C128 + C2665 * C122 + C32830 * C129) *
               C2666 +
           (C2662 * C131 + C2656 * C140 + C2663 * C132 + C2657 * C141 +
            C2664 * C133 + C2658 * C142 + C2665 * C134 + C32830 * C143) *
               C32795 +
           (C2799 + C2800 + C2801 + C2802) * C2667 +
           (C2803 + C2804 + C2805 + C2806) * C32601) *
              C32554 * C32513 * C209 -
          ((C2807 + C2808 + C2809 + C2810) * C32601 +
           (C2811 + C2812 + C2813 + C2814) * C2667 +
           (C2806 + C2805 + C2804 + C2803) * C32795 +
           (C2802 + C2801 + C2800 + C2799) * C2666) *
              C32554 * C32513 * C210 +
          ((C2814 + C2813 + C2812 + C2811) * C2666 +
           (C2810 + C2809 + C2808 + C2807) * C32795 +
           (C2662 * C872 + C2656 * C881 + C2663 * C871 + C2657 * C880 +
            C2664 * C870 + C2658 * C879 + C2665 * C1244 + C32830 * C1245) *
               C2667 +
           (C2662 * C878 + C2656 * C890 + C2663 * C877 + C2657 * C889 +
            C2664 * C876 + C2658 * C888 + C2665 * C1246 + C32830 * C1247) *
               C32601) *
              C32554 * C32513 * C211) *
         C32487) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C2662 * C119 + C2656 * C126 + C2663 * C120 + C2657 * C127 +
            C2664 * C121 + C2658 * C128 + C2665 * C122 + C32830 * C129) *
               C2666 +
           (C2662 * C131 + C2656 * C140 + C2663 * C132 + C2657 * C141 +
            C2664 * C133 + C2658 * C142 + C2665 * C134 + C32830 * C143) *
               C32795 +
           (C2662 * C217 + C2656 * C232 + C2663 * C216 + C2657 * C231 +
            C2664 * C215 + C2658 * C230 + C2665 * C214 + C32830 * C229) *
               C2667 +
           (C2662 * C227 + C2656 * C247 + C2663 * C226 + C2657 * C246 +
            C2664 * C225 + C2658 * C245 + C2665 * C224 + C32830 * C244) *
               C32601) *
              C32554 * C32513 * C32499 * C110 -
          ((C2665 * C223 + C32830 * C243 + C2664 * C224 + C2658 * C244 +
            C2663 * C225 + C2657 * C245 + C2662 * C226 + C2656 * C246) *
               C32601 +
           (C2665 * C213 + C32830 * C228 + C2664 * C214 + C2658 * C229 +
            C2663 * C215 + C2657 * C230 + C2662 * C216 + C2656 * C231) *
               C2667 +
           (C2665 * C135 + C32830 * C144 + C2664 * C134 + C2658 * C143 +
            C2663 * C133 + C2657 * C142 + C2662 * C132 + C2656 * C141) *
               C32795 +
           (C2665 * C123 + C32830 * C130 + C2664 * C122 + C2658 * C129 +
            C2663 * C121 + C2657 * C128 + C2662 * C120 + C2656 * C127) *
               C2666) *
              C32554 * C32513 * C32499 * C111 +
          ((C2662 * C121 + C2656 * C128 + C2663 * C122 + C2657 * C129 +
            C2664 * C123 + C2658 * C130 + C2665 * C124 + C32830 * C137) *
               C2666 +
           (C2662 * C133 + C2656 * C142 + C2663 * C134 + C2657 * C143 +
            C2664 * C135 + C2658 * C144 + C2665 * C136 + C32830 * C145) *
               C32795 +
           (C2662 * C215 + C2656 * C230 + C2663 * C214 + C2657 * C229 +
            C2664 * C213 + C2658 * C228 + C2665 * C444 + C32830 * C445) *
               C2667 +
           (C2662 * C225 + C2656 * C245 + C2663 * C224 + C2657 * C244 +
            C2664 * C223 + C2658 * C243 + C2665 * C446 + C32830 * C447) *
               C32601) *
              C32554 * C32513 * C32499 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C2662 * C119 + C2656 * C126 + C2663 * C120 + C2657 * C127 +
            C2664 * C121 + C2658 * C128 + C2665 * C122 + C32830 * C129) *
               C2666 +
           (C2662 * C131 + C2656 * C140 + C2663 * C132 + C2657 * C141 +
            C2664 * C133 + C2658 * C142 + C2665 * C134 + C32830 * C143) *
               C32795 +
           (C2799 + C2800 + C2801 + C2802) * C2667 +
           (C2803 + C2804 + C2805 + C2806) * C32601) *
              C32554 * C315 -
          ((C2665 * C631 + C32830 * C636 + C2664 * C630 + C2658 * C635 +
            C2663 * C629 + C2657 * C634 + C2662 * C628 + C2656 * C633) *
               C32601 +
           (C2665 * C621 + C32830 * C626 + C2664 * C620 + C2658 * C625 +
            C2663 * C619 + C2657 * C624 + C2662 * C618 + C2656 * C623) *
               C2667 +
           (C2665 * C329 + C32830 * C349 + C2664 * C330 + C2658 * C350 +
            C2663 * C331 + C2657 * C351 + C2662 * C332 + C2656 * C352) *
               C32795 +
           (C2665 * C319 + C32830 * C334 + C2664 * C320 + C2658 * C335 +
            C2663 * C321 + C2657 * C336 + C2662 * C322 + C2656 * C337) *
               C2666) *
              C32554 * C316 +
          ((C2662 * C323 + C2656 * C338 + C2663 * C324 + C2657 * C339 +
            C2664 * C325 + C2658 * C340 + C2665 * C326 + C32830 * C341) *
               C2666 +
           (C2662 * C343 + C2656 * C353 + C2663 * C344 + C2657 * C354 +
            C2664 * C345 + C2658 * C355 + C2665 * C346 + C32830 * C356) *
               C32795 +
           (C2662 * C1065 + C2656 * C1077 + C2663 * C1066 + C2657 * C1078 +
            C2664 * C1067 + C2658 * C1079 + C2665 * C2192 + C32830 * C2193) *
               C2667 +
           (C2662 * C1080 + C2656 * C1092 + C2663 * C1081 + C2657 * C1093 +
            C2664 * C1082 + C2658 * C1094 + C2665 * C2194 + C32830 * C2195) *
               C32601) *
              C32554 * C317) *
         C32499 * C32487) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C31557 * C119 + C32776 * C126 + C31538 * C120 + C32460 * C127) *
               C7647 +
           (C31557 * C131 + C32776 * C140 + C31538 * C132 + C32460 * C141) *
               C7641 +
           (C31557 * C217 + C32776 * C232 + C31538 * C216 + C32460 * C231) *
               C7648 +
           (C31557 * C227 + C32776 * C247 + C31538 * C226 + C32460 * C246) *
               C7642 +
           (C31557 * C218 + C32776 * C233 + C31538 * C219 + C32460 * C234) *
               C7649 +
           (C31557 * C238 + C32776 * C248 + C31538 * C239 + C32460 * C249) *
               C7643 +
           (C31557 * C872 + C32776 * C881 + C31538 * C871 + C32460 * C880) *
               C7650 +
           (C31557 * C878 + C32776 * C890 + C31538 * C877 + C32460 * C889) *
               C32836) *
              C32554 * C32513 * C32499 * C110 -
          ((C31538 * C876 + C32460 * C888 + C31557 * C877 + C32776 * C889) *
               C32836 +
           (C31538 * C870 + C32460 * C879 + C31557 * C871 + C32776 * C880) *
               C7650 +
           (C31538 * C240 + C32460 * C250 + C31557 * C239 + C32776 * C249) *
               C7643 +
           (C31538 * C220 + C32460 * C235 + C31557 * C219 + C32776 * C234) *
               C7649 +
           (C31538 * C225 + C32460 * C245 + C31557 * C226 + C32776 * C246) *
               C7642 +
           (C31538 * C215 + C32460 * C230 + C31557 * C216 + C32776 * C231) *
               C7648 +
           (C31538 * C133 + C32460 * C142 + C31557 * C132 + C32776 * C141) *
               C7641 +
           (C31538 * C121 + C32460 * C128 + C31557 * C120 + C32776 * C127) *
               C7647) *
              C32554 * C32513 * C32499 * C111 +
          ((C31557 * C121 + C32776 * C128 + C31538 * C122 + C32460 * C129) *
               C7647 +
           (C31557 * C133 + C32776 * C142 + C31538 * C134 + C32460 * C143) *
               C7641 +
           (C31557 * C215 + C32776 * C230 + C31538 * C214 + C32460 * C229) *
               C7648 +
           (C31557 * C225 + C32776 * C245 + C31538 * C224 + C32460 * C244) *
               C7642 +
           (C31557 * C220 + C32776 * C235 + C31538 * C221 + C32460 * C236) *
               C7649 +
           (C31557 * C240 + C32776 * C250 + C31538 * C241 + C32460 * C251) *
               C7643 +
           (C31557 * C870 + C32776 * C879 + C31538 * C1244 + C32460 * C1245) *
               C7650 +
           (C31557 * C876 + C32776 * C888 + C31538 * C1246 + C32460 * C1247) *
               C32836) *
              C32554 * C32513 * C32499 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C31557 * C119 + C32776 * C126 + C31538 * C120 + C32460 * C127) *
               C7647 +
           (C31557 * C131 + C32776 * C140 + C31538 * C132 + C32460 * C141) *
               C7641 +
           (C7782 + C7783) * C7648 + (C7784 + C7785) * C7642 + C7798 * C7649 +
           C7799 * C7643 + C7800 * C7650 + C7801 * C32836) *
              C32554 * C32513 * C209 -
          ((C7794 + C7795) * C32836 + (C7796 + C7797) * C7650 +
           (C7793 + C7792) * C7643 + (C7791 + C7790) * C7649 +
           (C7789 + C7788) * C7642 + (C7787 + C7786) * C7648 +
           (C7785 + C7784) * C7641 + (C7783 + C7782) * C7647) *
              C32554 * C32513 * C210 +
          (C7798 * C7647 + C7799 * C7641 + C7800 * C7648 + C7801 * C7642 +
           (C7797 + C7796) * C7649 + (C7795 + C7794) * C7643 +
           (C31557 * C6200 + C32776 * C6203 + C31538 * C6394 + C32460 * C6395) *
               C7650 +
           (C31557 * C6202 + C32776 * C6206 + C31538 * C6396 + C32460 * C6397) *
               C32836) *
              C32554 * C32513 * C211) *
         C32487) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C31557 * C119 + C32776 * C126 + C31538 * C120 + C32460 * C127) *
               C7647 +
           (C31557 * C131 + C32776 * C140 + C31538 * C132 + C32460 * C141) *
               C7641 +
           (C7782 + C7783) * C7648 + (C7784 + C7785) * C7642 + C7798 * C7649 +
           C7799 * C7643 + C7800 * C7650 + C7801 * C32836) *
              C32554 * C315 -
          ((C31538 * C1587 + C32460 * C1590 + C31557 * C1586 + C32776 * C1589) *
               C32836 +
           (C31538 * C1581 + C32460 * C1584 + C31557 * C1580 + C32776 * C1583) *
               C7650 +
           (C31538 * C1072 + C32460 * C1090 + C31557 * C1073 + C32776 * C1091) *
               C7643 +
           (C31538 * C1063 + C32460 * C1075 + C31557 * C1064 + C32776 * C1076) *
               C7649 +
           (C31538 * C629 + C32460 * C634 + C31557 * C628 + C32776 * C633) *
               C7642 +
           (C31538 * C619 + C32460 * C624 + C31557 * C618 + C32776 * C623) *
               C7648 +
           (C31538 * C331 + C32460 * C351 + C31557 * C332 + C32776 * C352) *
               C7641 +
           (C31538 * C321 + C32460 * C336 + C31557 * C322 + C32776 * C337) *
               C7647) *
              C32554 * C316 +
          ((C31557 * C323 + C32776 * C338 + C31538 * C324 + C32460 * C339) *
               C7647 +
           (C31557 * C343 + C32776 * C353 + C31538 * C344 + C32460 * C354) *
               C7641 +
           (C31557 * C1065 + C32776 * C1077 + C31538 * C1066 + C32460 * C1078) *
               C7648 +
           (C31557 * C1080 + C32776 * C1092 + C31538 * C1081 + C32460 * C1093) *
               C7642 +
           (C31557 * C1068 + C32776 * C1083 + C31538 * C1069 + C32460 * C1084) *
               C7649 +
           (C31557 * C1086 + C32776 * C1095 + C31538 * C1087 + C32460 * C1096) *
               C7643 +
           (C31557 * C6301 + C32776 * C6305 + C31538 * C7177 + C32460 * C7178) *
               C7650 +
           (C31557 * C6306 + C32776 * C6310 + C31538 * C7179 + C32460 * C7180) *
               C32836) *
              C32554 * C317) *
         C32499 * C32487) /
            (p * q * std::sqrt(p + q));
    d2ee[103] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2662 * C119 + C2656 * C126 + C2663 * C120 + C2657 * C127 +
             C2664 * C121 + C2658 * C128 + C2665 * C122 + C32830 * C129) *
                C2666 +
            (C2662 * C131 + C2656 * C140 + C2663 * C132 + C2657 * C141 +
             C2664 * C133 + C2658 * C142 + C2665 * C134 + C32830 * C143) *
                C32795 +
            (C2799 + C2800 + C2801 + C2802) * C2667 +
            (C2803 + C2804 + C2805 + C2806) * C32601) *
               C32554 * C530 -
           ((C2665 * C631 + C32830 * C636 + C2664 * C630 + C2658 * C635 +
             C2663 * C629 + C2657 * C634 + C2662 * C628 + C2656 * C633) *
                C32601 +
            (C2665 * C621 + C32830 * C626 + C2664 * C620 + C2658 * C625 +
             C2663 * C619 + C2657 * C624 + C2662 * C618 + C2656 * C623) *
                C2667 +
            (C2665 * C329 + C32830 * C349 + C2664 * C330 + C2658 * C350 +
             C2663 * C331 + C2657 * C351 + C2662 * C332 + C2656 * C352) *
                C32795 +
            (C2665 * C319 + C32830 * C334 + C2664 * C320 + C2658 * C335 +
             C2663 * C321 + C2657 * C336 + C2662 * C322 + C2656 * C337) *
                C2666) *
               C32554 * C531) *
              C32499 * C442 +
          (((C2662 * C321 + C2656 * C336 + C2663 * C320 + C2657 * C335 +
             C2664 * C319 + C2658 * C334 + C2665 * C318 + C32830 * C333) *
                C2666 +
            (C2662 * C331 + C2656 * C351 + C2663 * C330 + C2657 * C350 +
             C2664 * C329 + C2658 * C349 + C2665 * C328 + C32830 * C348) *
                C32795 +
            (C2662 * C619 + C2656 * C624 + C2663 * C620 + C2657 * C625 +
             C2664 * C621 + C2658 * C626 + C2665 * C622 + C32830 * C627) *
                C2667 +
            (C2662 * C629 + C2656 * C634 + C2663 * C630 + C2657 * C635 +
             C2664 * C631 + C2658 * C636 + C2665 * C632 + C32830 * C637) *
                C32601) *
               C32554 * C531 -
           ((C3066 + C3065 + C3064 + C3063) * C32601 +
            (C3062 + C3061 + C3060 + C3059) * C2667 +
            (C2665 * C135 + C32830 * C144 + C2664 * C134 + C2658 * C143 +
             C2663 * C133 + C2657 * C142 + C2662 * C132 + C2656 * C141) *
                C32795 +
            (C2665 * C123 + C32830 * C130 + C2664 * C122 + C2658 * C129 +
             C2663 * C121 + C2657 * C128 + C2662 * C120 + C2656 * C127) *
                C2666) *
               C32554 * C530) *
              C32499 * C443)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C31557 * C119 + C32776 * C126 + C31538 * C120 + C32460 * C127) *
                C7647 +
            (C31557 * C131 + C32776 * C140 + C31538 * C132 + C32460 * C141) *
                C7641 +
            (C7782 + C7783) * C7648 + (C7784 + C7785) * C7642 + C7798 * C7649 +
            C7799 * C7643 + C7800 * C7650 + C7801 * C32836) *
               C32554 * C530 -
           ((C31538 * C1587 + C32460 * C1590 + C31557 * C1586 +
             C32776 * C1589) *
                C32836 +
            (C31538 * C1581 + C32460 * C1584 + C31557 * C1580 +
             C32776 * C1583) *
                C7650 +
            (C31538 * C1072 + C32460 * C1090 + C31557 * C1073 +
             C32776 * C1091) *
                C7643 +
            (C31538 * C1063 + C32460 * C1075 + C31557 * C1064 +
             C32776 * C1076) *
                C7649 +
            (C31538 * C629 + C32460 * C634 + C31557 * C628 + C32776 * C633) *
                C7642 +
            (C31538 * C619 + C32460 * C624 + C31557 * C618 + C32776 * C623) *
                C7648 +
            (C31538 * C331 + C32460 * C351 + C31557 * C332 + C32776 * C352) *
                C7641 +
            (C31538 * C321 + C32460 * C336 + C31557 * C322 + C32776 * C337) *
                C7647) *
               C32554 * C531) *
              C32499 * C442 +
          (((C31557 * C321 + C32776 * C336 + C31538 * C320 + C32460 * C335) *
                C7647 +
            (C31557 * C331 + C32776 * C351 + C31538 * C330 + C32460 * C350) *
                C7641 +
            (C31557 * C619 + C32776 * C624 + C31538 * C620 + C32460 * C625) *
                C7648 +
            (C31557 * C629 + C32776 * C634 + C31538 * C630 + C32460 * C635) *
                C7642 +
            (C31557 * C1063 + C32776 * C1075 + C31538 * C1062 +
             C32460 * C1074) *
                C7649 +
            (C31557 * C1072 + C32776 * C1090 + C31538 * C1071 +
             C32460 * C1089) *
                C7643 +
            (C31557 * C1581 + C32776 * C1584 + C31538 * C1582 +
             C32460 * C1585) *
                C7650 +
            (C31557 * C1587 + C32776 * C1590 + C31538 * C1588 +
             C32460 * C1591) *
                C32836) *
               C32554 * C531 -
           ((C8065 + C8064) * C32836 + (C8063 + C8062) * C7650 +
            (C8061 + C8060) * C7643 + (C8059 + C8058) * C7649 +
            (C8057 + C8056) * C7642 + (C8055 + C8054) * C7648 +
            (C31538 * C133 + C32460 * C142 + C31557 * C132 + C32776 * C141) *
                C7641 +
            (C31538 * C121 + C32460 * C128 + C31557 * C120 + C32776 * C127) *
                C7647) *
               C32554 * C530) *
              C32499 * C443)) /
            (p * q * std::sqrt(p + q));
    d2ee[104] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C2662 * C119 + C2656 * C126 + C2663 * C120 + C2657 * C127 +
            C2664 * C121 + C2658 * C128 + C2665 * C122 + C32830 * C129) *
               C2666 +
           (C2662 * C131 + C2656 * C140 + C2663 * C132 + C2657 * C141 +
            C2664 * C133 + C2658 * C142 + C2665 * C134 + C32830 * C143) *
               C32795 +
           (C2662 * C217 + C2656 * C232 + C2663 * C216 + C2657 * C231 +
            C2664 * C215 + C2658 * C230 + C2665 * C214 + C32830 * C229) *
               C2667 +
           (C2662 * C227 + C2656 * C247 + C2663 * C226 + C2657 * C246 +
            C2664 * C225 + C2658 * C245 + C2665 * C224 + C32830 * C244) *
               C32601) *
              C32554 * C32513 * C32499 * C110 -
          ((C2665 * C223 + C32830 * C243 + C2664 * C224 + C2658 * C244 +
            C2663 * C225 + C2657 * C245 + C2662 * C226 + C2656 * C246) *
               C32601 +
           (C2665 * C213 + C32830 * C228 + C2664 * C214 + C2658 * C229 +
            C2663 * C215 + C2657 * C230 + C2662 * C216 + C2656 * C231) *
               C2667 +
           (C2665 * C135 + C32830 * C144 + C2664 * C134 + C2658 * C143 +
            C2663 * C133 + C2657 * C142 + C2662 * C132 + C2656 * C141) *
               C32795 +
           (C2665 * C123 + C32830 * C130 + C2664 * C122 + C2658 * C129 +
            C2663 * C121 + C2657 * C128 + C2662 * C120 + C2656 * C127) *
               C2666) *
              C32554 * C32513 * C32499 * C111 +
          ((C2662 * C121 + C2656 * C128 + C2663 * C122 + C2657 * C129 +
            C2664 * C123 + C2658 * C130 + C2665 * C124 + C32830 * C137) *
               C2666 +
           (C2662 * C133 + C2656 * C142 + C2663 * C134 + C2657 * C143 +
            C2664 * C135 + C2658 * C144 + C2665 * C136 + C32830 * C145) *
               C32795 +
           (C2662 * C215 + C2656 * C230 + C2663 * C214 + C2657 * C229 +
            C2664 * C213 + C2658 * C228 + C2665 * C444 + C32830 * C445) *
               C2667 +
           (C2662 * C225 + C2656 * C245 + C2663 * C224 + C2657 * C244 +
            C2664 * C223 + C2658 * C243 + C2665 * C446 + C32830 * C447) *
               C32601) *
              C32554 * C32513 * C32499 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C2662 * C119 + C2656 * C126 + C2663 * C120 + C2657 * C127 +
            C2664 * C121 + C2658 * C128 + C2665 * C122 + C32830 * C129) *
               C2666 +
           (C2662 * C131 + C2656 * C140 + C2663 * C132 + C2657 * C141 +
            C2664 * C133 + C2658 * C142 + C2665 * C134 + C32830 * C143) *
               C32795 +
           (C2799 + C2800 + C2801 + C2802) * C2667 +
           (C2803 + C2804 + C2805 + C2806) * C32601) *
              C32554 * C32513 * C209 -
          ((C2807 + C2808 + C2809 + C2810) * C32601 +
           (C2811 + C2812 + C2813 + C2814) * C2667 +
           (C2806 + C2805 + C2804 + C2803) * C32795 +
           (C2802 + C2801 + C2800 + C2799) * C2666) *
              C32554 * C32513 * C210 +
          ((C2814 + C2813 + C2812 + C2811) * C2666 +
           (C2810 + C2809 + C2808 + C2807) * C32795 +
           (C2662 * C872 + C2656 * C881 + C2663 * C871 + C2657 * C880 +
            C2664 * C870 + C2658 * C879 + C2665 * C1244 + C32830 * C1245) *
               C2667 +
           (C2662 * C878 + C2656 * C890 + C2663 * C877 + C2657 * C889 +
            C2664 * C876 + C2658 * C888 + C2665 * C1246 + C32830 * C1247) *
               C32601) *
              C32554 * C32513 * C211) *
         C32487) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C31557 * C119 + C32776 * C126 + C31538 * C120 + C32460 * C127) *
               C7647 +
           (C31557 * C131 + C32776 * C140 + C31538 * C132 + C32460 * C141) *
               C7641 +
           (C31557 * C217 + C32776 * C232 + C31538 * C216 + C32460 * C231) *
               C7648 +
           (C31557 * C227 + C32776 * C247 + C31538 * C226 + C32460 * C246) *
               C7642 +
           (C31557 * C218 + C32776 * C233 + C31538 * C219 + C32460 * C234) *
               C7649 +
           (C31557 * C238 + C32776 * C248 + C31538 * C239 + C32460 * C249) *
               C7643 +
           (C31557 * C872 + C32776 * C881 + C31538 * C871 + C32460 * C880) *
               C7650 +
           (C31557 * C878 + C32776 * C890 + C31538 * C877 + C32460 * C889) *
               C32836) *
              C32554 * C32513 * C32499 * C110 -
          ((C31538 * C876 + C32460 * C888 + C31557 * C877 + C32776 * C889) *
               C32836 +
           (C31538 * C870 + C32460 * C879 + C31557 * C871 + C32776 * C880) *
               C7650 +
           (C31538 * C240 + C32460 * C250 + C31557 * C239 + C32776 * C249) *
               C7643 +
           (C31538 * C220 + C32460 * C235 + C31557 * C219 + C32776 * C234) *
               C7649 +
           (C31538 * C225 + C32460 * C245 + C31557 * C226 + C32776 * C246) *
               C7642 +
           (C31538 * C215 + C32460 * C230 + C31557 * C216 + C32776 * C231) *
               C7648 +
           (C31538 * C133 + C32460 * C142 + C31557 * C132 + C32776 * C141) *
               C7641 +
           (C31538 * C121 + C32460 * C128 + C31557 * C120 + C32776 * C127) *
               C7647) *
              C32554 * C32513 * C32499 * C111 +
          ((C31557 * C121 + C32776 * C128 + C31538 * C122 + C32460 * C129) *
               C7647 +
           (C31557 * C133 + C32776 * C142 + C31538 * C134 + C32460 * C143) *
               C7641 +
           (C31557 * C215 + C32776 * C230 + C31538 * C214 + C32460 * C229) *
               C7648 +
           (C31557 * C225 + C32776 * C245 + C31538 * C224 + C32460 * C244) *
               C7642 +
           (C31557 * C220 + C32776 * C235 + C31538 * C221 + C32460 * C236) *
               C7649 +
           (C31557 * C240 + C32776 * C250 + C31538 * C241 + C32460 * C251) *
               C7643 +
           (C31557 * C870 + C32776 * C879 + C31538 * C1244 + C32460 * C1245) *
               C7650 +
           (C31557 * C876 + C32776 * C888 + C31538 * C1246 + C32460 * C1247) *
               C32836) *
              C32554 * C32513 * C32499 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C31557 * C119 + C32776 * C126 + C31538 * C120 + C32460 * C127) *
               C7647 +
           (C31557 * C131 + C32776 * C140 + C31538 * C132 + C32460 * C141) *
               C7641 +
           (C7782 + C7783) * C7648 + (C7784 + C7785) * C7642 + C7798 * C7649 +
           C7799 * C7643 + C7800 * C7650 + C7801 * C32836) *
              C32554 * C32513 * C209 -
          ((C7794 + C7795) * C32836 + (C7796 + C7797) * C7650 +
           (C7793 + C7792) * C7643 + (C7791 + C7790) * C7649 +
           (C7789 + C7788) * C7642 + (C7787 + C7786) * C7648 +
           (C7785 + C7784) * C7641 + (C7783 + C7782) * C7647) *
              C32554 * C32513 * C210 +
          (C7798 * C7647 + C7799 * C7641 + C7800 * C7648 + C7801 * C7642 +
           (C7797 + C7796) * C7649 + (C7795 + C7794) * C7643 +
           (C31557 * C6200 + C32776 * C6203 + C31538 * C6394 + C32460 * C6395) *
               C7650 +
           (C31557 * C6202 + C32776 * C6206 + C31538 * C6396 + C32460 * C6397) *
               C32836) *
              C32554 * C32513 * C211) *
         C32487) /
            (p * q * std::sqrt(p + q));
    d2ee[105] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C754 * C119 + C748 * C126 + C755 * C120 + C749 * C127 +
              C756 * C121 + C32815 * C128) *
                 C2666 +
             (C754 * C131 + C748 * C140 + C755 * C132 + C749 * C141 +
              C756 * C133 + C32815 * C142) *
                 C32795 +
             (C931 + C932 + C933) * C2667 + (C934 + C935 + C936) * C32601) *
                C32796 +
            ((C2022 + C2023 + C2024) * C2666 +
             (C2025 + C2026 + C2027) * C32795 +
             (C1628 + C1627 + C1626) * C2667 +
             (C1625 + C1624 + C1623) * C32601) *
                C32641) *
               C32513 * C440 -
           (((C1617 + C1618 + C1619) * C32601 +
             (C1620 + C1621 + C1622) * C2667 +
             (C1623 + C1624 + C1625) * C32795 +
             (C1626 + C1627 + C1628) * C2666) *
                C32641 +
            ((C942 + C941 + C940) * C32601 + (C939 + C938 + C937) * C2667 +
             (C936 + C935 + C934) * C32795 + (C933 + C932 + C931) * C2666) *
                C32796) *
               C32513 * C441) *
              C442 +
          ((((C1273 + C1274 + C1275) * C2666 +
             (C1276 + C1277 + C1278) * C32795 +
             (C1279 + C1280 + C1281) * C2667 +
             (C1282 + C1283 + C1284) * C32601) *
                C32796 +
            ((C4753 + C4754 + C4755) * C2666 +
             (C4756 + C4757 + C4758) * C32795 +
             (C754 * C1063 + C748 * C1075 + C755 * C1062 + C749 * C1074 +
              C756 * C1430 + C32815 * C1431) *
                 C2667 +
             (C754 * C1072 + C748 * C1090 + C755 * C1071 + C749 * C1089 +
              C756 * C1432 + C32815 * C1433) *
                 C32601) *
                C32641) *
               C32513 * C441 -
           (((C4758 + C4757 + C4756) * C32601 +
             (C4755 + C4754 + C4753) * C2667 +
             (C2376 + C2375 + C2374) * C32795 +
             (C2373 + C2372 + C2371) * C2666) *
                C32641 +
            ((C1278 + C1277 + C1276) * C32601 +
             (C1275 + C1274 + C1273) * C2667 +
             (C756 * C134 + C32815 * C143 + C755 * C133 + C749 * C142 +
              C754 * C132 + C748 * C141) *
                 C32795 +
             (C756 * C122 + C32815 * C129 + C755 * C121 + C749 * C128 +
              C754 * C120 + C748 * C127) *
                 C2666) *
                C32796) *
               C32513 * C440) *
              C443)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C6132 * C119 + C32450 * C126) * C7647 +
             (C6132 * C131 + C32450 * C140) * C7641 + C6229 * C7648 +
             C6230 * C7642 + C6231 * C7649 + C6232 * C7643 + C6233 * C7650 +
             C6234 * C32836) *
                C32796 +
            (C9768 + C9769 + C9770 + C9771 + C9772 + C9773 + C9774 + C9775) *
                C32641) *
               C32513 * C440 -
           ((C6611 * C32836 + C6612 * C7650 + C6613 * C7643 + C6614 * C7649 +
             C6615 * C7642 + C6616 * C7648 + C6617 * C7641 + C6618 * C7647) *
                C32641 +
            (C6236 * C32836 + C6235 * C7650 + C6234 * C7643 + C6233 * C7649 +
             C6232 * C7642 + C6231 * C7648 + C6230 * C7641 + C6229 * C7647) *
                C32796) *
               C32513 * C441) *
              C442 +
          (((C6415 * C7647 + C6416 * C7641 + C6417 * C7648 + C6418 * C7642 +
             C6419 * C7649 + C6420 * C7643 + C6421 * C7650 + C6422 * C32836) *
                C32796 +
            (C7198 * C7647 + C7199 * C7641 + C7200 * C7648 + C7201 * C7642 +
             C9918 * C7649 + C9919 * C7643 +
             (C6132 * C6504 + C32450 * C6505) * C7650 +
             (C6132 * C6506 + C32450 * C6507) * C32836) *
                C32641) *
               C32513 * C441 -
           ((C9919 * C32836 + C9918 * C7650 + C7201 * C7643 + C7200 * C7649 +
             C7199 * C7642 + C7198 * C7648 + C7373 * C7641 + C7372 * C7647) *
                C32641 +
            (C6420 * C32836 + C6419 * C7650 + C6418 * C7643 + C6417 * C7649 +
             C6416 * C7642 + C6415 * C7648 +
             (C6132 * C132 + C32450 * C141) * C7641 +
             (C6132 * C120 + C32450 * C127) * C7647) *
                C32796) *
               C32513 * C440) *
              C443)) /
            (p * q * std::sqrt(p + q));
    d2ee[106] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C754 * C119 + C748 * C126 + C755 * C120 + C749 * C127 +
              C756 * C121 + C32815 * C128) *
                 C2666 +
             (C754 * C131 + C748 * C140 + C755 * C132 + C749 * C141 +
              C756 * C133 + C32815 * C142) *
                 C32795 +
             (C931 + C932 + C933) * C2667 + (C934 + C935 + C936) * C32601) *
                C32796 +
            ((C2022 + C2023 + C2024) * C2666 +
             (C2025 + C2026 + C2027) * C32795 + C5151 * C2667 +
             C5152 * C32601) *
                C32641) *
               C530 -
           (((C2558 + C2557 + C2556) * C32601 +
             (C2555 + C2554 + C2553) * C2667 +
             (C2033 + C2032 + C2031) * C32795 +
             (C2030 + C2029 + C2028) * C2666) *
                C32641 +
            (C5153 * C32601 + C5154 * C2667 + (C2027 + C2026 + C2025) * C32795 +
             (C2024 + C2023 + C2022) * C2666) *
                C32796) *
               C531) *
              C440 +
          (((C5151 * C2666 + C5152 * C32795 + (C1622 + C1621 + C1620) * C2667 +
             (C1619 + C1618 + C1617) * C32601) *
                C32796 +
            ((C2553 + C2554 + C2555) * C2666 +
             (C2556 + C2557 + C2558) * C32795 +
             (C754 * C1068 + C748 * C1083 + C755 * C1069 + C749 * C1084 +
              C756 * C1070 + C32815 * C1085) *
                 C2667 +
             (C754 * C1086 + C748 * C1095 + C755 * C1087 + C749 * C1096 +
              C756 * C1088 + C32815 * C1097) *
                 C32601) *
                C32641) *
               C531 -
           (((C1617 + C1618 + C1619) * C32601 +
             (C1620 + C1621 + C1622) * C2667 + C5153 * C32795 + C5154 * C2666) *
                C32641 +
            ((C942 + C941 + C940) * C32601 + (C939 + C938 + C937) * C2667 +
             (C936 + C935 + C934) * C32795 + (C933 + C932 + C931) * C2666) *
                C32796) *
               C530) *
              C441) *
         C32487) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C6132 * C119 + C32450 * C126) * C7647 +
             (C6132 * C131 + C32450 * C140) * C7641 + C6229 * C7648 +
             C6230 * C7642 + C6231 * C7649 + C6232 * C7643 + C6233 * C7650 +
             C6234 * C32836) *
                C32796 +
            (C9768 + C9769 + C9770 + C9771 + C9772 + C9773 + C9774 + C9775) *
                C32641) *
               C530 -
           ((C9776 + C9777 + C9778 + C9779 + C9780 + C9781 + C9782 + C9783) *
                C32641 +
            (C9775 + C9774 + C9773 + C9772 + C9771 + C9770 + C9769 + C9768) *
                C32796) *
               C531) *
              C440 +
          (((C10188 + C10189 + C10190 + C10191 + C10192 + C10193 + C10194 +
             C10195) *
                C32796 +
            (C6851 * C7647 + C6852 * C7641 + C6853 * C7648 + C6854 * C7642 +
             C6856 * C7649 + C6855 * C7643 +
             (C6132 * C6302 + C32450 * C6307) * C7650 +
             (C6132 * C6308 + C32450 * C6311) * C32836) *
                C32641) *
               C531 -
           ((C10195 + C10194 + C10193 + C10192 + C10191 + C10190 + C10189 +
             C10188) *
                C32641 +
            (C6236 * C32836 + C6235 * C7650 + C6234 * C7643 + C6233 * C7649 +
             C6232 * C7642 + C6231 * C7648 + C6230 * C7641 + C6229 * C7647) *
                C32796) *
               C530) *
              C441) *
         C32487) /
            (p * q * std::sqrt(p + q));
    d2ee[107] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C754 * C119 + C748 * C126 + C755 * C120 + C749 * C127 +
             C756 * C121 + C32815 * C128) *
                C2666 +
            (C754 * C131 + C748 * C140 + C755 * C132 + C749 * C141 +
             C756 * C133 + C32815 * C142) *
                C32795 +
            (C931 + C932 + C933) * C2667 + (C934 + C935 + C936) * C32601) *
               C32796 +
           ((C2022 + C2023 + C2024) * C2666 + (C2025 + C2026 + C2027) * C32795 +
            (C1628 + C1627 + C1626) * C2667 +
            (C1625 + C1624 + C1623) * C32601) *
               C32641) *
              C32513 * C209 -
          (((C1617 + C1618 + C1619) * C32601 + (C1620 + C1621 + C1622) * C2667 +
            (C1623 + C1624 + C1625) * C32795 +
            (C1626 + C1627 + C1628) * C2666) *
               C32641 +
           ((C942 + C941 + C940) * C32601 + (C939 + C938 + C937) * C2667 +
            (C936 + C935 + C934) * C32795 + (C933 + C932 + C931) * C2666) *
               C32796) *
              C32513 * C210 +
          ((C951 * C2666 + C952 * C32795 + (C948 + C947 + C946) * C2667 +
            (C945 + C944 + C943) * C32601) *
               C32796 +
           ((C1622 + C1621 + C1620) * C2666 + (C1619 + C1618 + C1617) * C32795 +
            (C754 * C1580 + C748 * C1583 + C755 * C1581 + C749 * C1584 +
             C756 * C1582 + C32815 * C1585) *
                C2667 +
            (C754 * C1586 + C748 * C1589 + C755 * C1587 + C749 * C1590 +
             C756 * C1588 + C32815 * C1591) *
                C32601) *
               C32641) *
              C32513 * C211) *
         C32487) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C754 * C119 + C748 * C126 + C755 * C120 + C749 * C127 +
             C756 * C121 + C32815 * C128) *
                C2666 +
            (C754 * C131 + C748 * C140 + C755 * C132 + C749 * C141 +
             C756 * C133 + C32815 * C142) *
                C32795 +
            (C931 + C932 + C933) * C2667 + (C934 + C935 + C936) * C32601) *
               C32796 +
           ((C2022 + C2023 + C2024) * C2666 + (C2025 + C2026 + C2027) * C32795 +
            (C1628 + C1627 + C1626) * C2667 +
            (C1625 + C1624 + C1623) * C32601) *
               C32641) *
              C32513 * C32499 * C110 -
          (((C756 * C631 + C32815 * C636 + C755 * C630 + C749 * C635 +
             C754 * C629 + C748 * C634) *
                C32601 +
            (C756 * C621 + C32815 * C626 + C755 * C620 + C749 * C625 +
             C754 * C619 + C748 * C624) *
                C2667 +
            (C2376 + C2375 + C2374) * C32795 +
            (C2373 + C2372 + C2371) * C2666) *
               C32641 +
           ((C1278 + C1277 + C1276) * C32601 + (C1275 + C1274 + C1273) * C2667 +
            (C756 * C134 + C32815 * C143 + C755 * C133 + C749 * C142 +
             C754 * C132 + C748 * C141) *
                C32795 +
            (C756 * C122 + C32815 * C129 + C755 * C121 + C749 * C128 +
             C754 * C120 + C748 * C127) *
                C2666) *
               C32796) *
              C32513 * C32499 * C111 +
          (((C754 * C121 + C748 * C128 + C755 * C122 + C749 * C129 +
             C756 * C123 + C32815 * C130) *
                C2666 +
            (C754 * C133 + C748 * C142 + C755 * C134 + C749 * C143 +
             C756 * C135 + C32815 * C144) *
                C32795 +
            (C754 * C215 + C748 * C230 + C755 * C214 + C749 * C229 +
             C756 * C213 + C32815 * C228) *
                C2667 +
            (C754 * C225 + C748 * C245 + C755 * C224 + C749 * C244 +
             C756 * C223 + C32815 * C243) *
                C32601) *
               C32796 +
           ((C754 * C320 + C748 * C335 + C755 * C319 + C749 * C334 +
             C756 * C318 + C32815 * C333) *
                C2666 +
            (C754 * C330 + C748 * C350 + C755 * C329 + C749 * C349 +
             C756 * C328 + C32815 * C348) *
                C32795 +
            (C754 * C620 + C748 * C625 + C755 * C621 + C749 * C626 +
             C756 * C622 + C32815 * C627) *
                C2667 +
            (C754 * C630 + C748 * C635 + C755 * C631 + C749 * C636 +
             C756 * C632 + C32815 * C637) *
                C32601) *
               C32641) *
              C32513 * C32499 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C754 * C119 + C748 * C126 + C755 * C120 + C749 * C127 +
             C756 * C121 + C32815 * C128) *
                C2666 +
            (C754 * C131 + C748 * C140 + C755 * C132 + C749 * C141 +
             C756 * C133 + C32815 * C142) *
                C32795 +
            (C931 + C932 + C933) * C2667 + (C934 + C935 + C936) * C32601) *
               C32796 +
           ((C2022 + C2023 + C2024) * C2666 + (C2025 + C2026 + C2027) * C32795 +
            (C1628 + C1627 + C1626) * C2667 +
            (C1625 + C1624 + C1623) * C32601) *
               C32641) *
              C315 -
          (((C2558 + C2557 + C2556) * C32601 + (C2555 + C2554 + C2553) * C2667 +
            (C2033 + C2032 + C2031) * C32795 +
            (C2030 + C2029 + C2028) * C2666) *
               C32641 +
           ((C1623 + C1624 + C1625) * C32601 + (C1626 + C1627 + C1628) * C2667 +
            (C2027 + C2026 + C2025) * C32795 +
            (C2024 + C2023 + C2022) * C2666) *
               C32796) *
              C316 +
          ((C2042 * C2666 + C2043 * C32795 + (C2553 + C2554 + C2555) * C2667 +
            (C2556 + C2557 + C2558) * C32601) *
               C32796 +
           ((C2039 + C2038 + C2037) * C2666 + (C2036 + C2035 + C2034) * C32795 +
            (C754 * C2528 + C748 * C2531 + C755 * C2529 + C749 * C2532 +
             C756 * C2530 + C32815 * C2533) *
                C2667 +
            (C754 * C2534 + C748 * C2537 + C755 * C2535 + C749 * C2538 +
             C756 * C2536 + C32815 * C2539) *
                C32601) *
               C32641) *
              C317) *
         C32499 * C32487) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C6132 * C119 + C32450 * C126) * C7647 +
            (C6132 * C131 + C32450 * C140) * C7641 + C6229 * C7648 +
            C6230 * C7642 + C6231 * C7649 + C6232 * C7643 + C6233 * C7650 +
            C6234 * C32836) *
               C32796 +
           (C7007 * C7647 + C7008 * C7641 + C6618 * C7648 + C6617 * C7642 +
            C6616 * C7649 + C6615 * C7643 + C6614 * C7650 + C6613 * C32836) *
               C32641) *
              C32513 * C32499 * C110 -
          (((C6132 * C1587 + C32450 * C1590) * C32836 +
            (C6132 * C1581 + C32450 * C1584) * C7650 + C7201 * C7643 +
            C7200 * C7649 + C7199 * C7642 + C7198 * C7648 + C7373 * C7641 +
            C7372 * C7647) *
               C32641 +
           (C6420 * C32836 + C6419 * C7650 + C6418 * C7643 + C6417 * C7649 +
            C6416 * C7642 + C6415 * C7648 +
            (C6132 * C132 + C32450 * C141) * C7641 +
            (C6132 * C120 + C32450 * C127) * C7647) *
               C32796) *
              C32513 * C32499 * C111 +
          (((C6132 * C121 + C32450 * C128) * C7647 +
            (C6132 * C133 + C32450 * C142) * C7641 +
            (C6132 * C215 + C32450 * C230) * C7648 +
            (C6132 * C225 + C32450 * C245) * C7642 +
            (C6132 * C220 + C32450 * C235) * C7649 +
            (C6132 * C240 + C32450 * C250) * C7643 +
            (C6132 * C870 + C32450 * C879) * C7650 +
            (C6132 * C876 + C32450 * C888) * C32836) *
               C32796 +
           ((C6132 * C320 + C32450 * C335) * C7647 +
            (C6132 * C330 + C32450 * C350) * C7641 +
            (C6132 * C620 + C32450 * C625) * C7648 +
            (C6132 * C630 + C32450 * C635) * C7642 +
            (C6132 * C1062 + C32450 * C1074) * C7649 +
            (C6132 * C1071 + C32450 * C1089) * C7643 +
            (C6132 * C1582 + C32450 * C1585) * C7650 +
            (C6132 * C1588 + C32450 * C1591) * C32836) *
               C32641) *
              C32513 * C32499 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C6132 * C119 + C32450 * C126) * C7647 +
            (C6132 * C131 + C32450 * C140) * C7641 + C6229 * C7648 +
            C6230 * C7642 + C6231 * C7649 + C6232 * C7643 + C6233 * C7650 +
            C6234 * C32836) *
               C32796 +
           (C7007 * C7647 + C7008 * C7641 + C6618 * C7648 + C6617 * C7642 +
            C6616 * C7649 + C6615 * C7643 + C6614 * C7650 + C6613 * C32836) *
               C32641) *
              C32513 * C209 -
          ((C6611 * C32836 + C6612 * C7650 + C6613 * C7643 + C6614 * C7649 +
            C6615 * C7642 + C6616 * C7648 + C6617 * C7641 + C6618 * C7647) *
               C32641 +
           (C6236 * C32836 + C6235 * C7650 + C6234 * C7643 + C6233 * C7649 +
            C6232 * C7642 + C6231 * C7648 + C6230 * C7641 + C6229 * C7647) *
               C32796) *
              C32513 * C210 +
          ((C6231 * C7647 + C6232 * C7641 + C6233 * C7648 + C6234 * C7642 +
            C6235 * C7649 + C6236 * C7643 + C6238 * C7650 + C6237 * C32836) *
               C32796 +
           (C6616 * C7647 + C6615 * C7641 + C6614 * C7648 + C6613 * C7642 +
            C6612 * C7649 + C6611 * C7643 +
            (C6132 * C6590 + C32450 * C6591) * C7650 +
            (C6132 * C6592 + C32450 * C6593) * C32836) *
               C32641) *
              C32513 * C211) *
         C32487) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C6132 * C119 + C32450 * C126) * C7647 +
            (C6132 * C131 + C32450 * C140) * C7641 + C6229 * C7648 +
            C6230 * C7642 + C6231 * C7649 + C6232 * C7643 + C6233 * C7650 +
            C6234 * C32836) *
               C32796 +
           (C9768 + C9769 + C9770 + C9771 + C9772 + C9773 + C9774 + C9775) *
               C32641) *
              C315 -
          ((C9776 + C9777 + C9778 + C9779 + C9780 + C9781 + C9782 + C9783) *
               C32641 +
           (C9775 + C9774 + C9773 + C9772 + C9771 + C9770 + C9769 + C9768) *
               C32796) *
              C316 +
          ((C9783 + C9782 + C9781 + C9780 + C9779 + C9778 + C9777 + C9776) *
               C32796 +
           (C7016 * C7647 + C7015 * C7641 + C7014 * C7648 + C7013 * C7642 +
            C7012 * C7649 + C7011 * C7643 +
            (C6132 * C7525 + C32450 * C7526) * C7650 +
            (C6132 * C7527 + C32450 * C7528) * C32836) *
               C32641) *
              C317) *
         C32499 * C32487) /
            (p * q * std::sqrt(p + q));
    d2ee[108] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C754 * C119 + C748 * C126 + C755 * C120 + C749 * C127 +
              C756 * C121 + C32815 * C128) *
                 C2666 +
             (C754 * C131 + C748 * C140 + C755 * C132 + C749 * C141 +
              C756 * C133 + C32815 * C142) *
                 C32795 +
             (C931 + C932 + C933) * C2667 + (C934 + C935 + C936) * C32601) *
                C32796 +
            ((C2022 + C2023 + C2024) * C2666 +
             (C2025 + C2026 + C2027) * C32795 +
             (C1628 + C1627 + C1626) * C2667 +
             (C1625 + C1624 + C1623) * C32601) *
                C32641) *
               C530 -
           (((C2558 + C2557 + C2556) * C32601 +
             (C2555 + C2554 + C2553) * C2667 +
             (C2033 + C2032 + C2031) * C32795 +
             (C2030 + C2029 + C2028) * C2666) *
                C32641 +
            ((C1623 + C1624 + C1625) * C32601 +
             (C1626 + C1627 + C1628) * C2667 +
             (C2027 + C2026 + C2025) * C32795 +
             (C2024 + C2023 + C2022) * C2666) *
                C32796) *
               C531) *
              C32499 * C442 +
          ((((C2371 + C2372 + C2373) * C2666 +
             (C2374 + C2375 + C2376) * C32795 +
             (C4753 + C4754 + C4755) * C2667 +
             (C4756 + C4757 + C4758) * C32601) *
                C32796 +
            ((C2377 + C2378 + C2379) * C2666 +
             (C2380 + C2381 + C2382) * C32795 +
             (C754 * C1066 + C748 * C1078 + C755 * C1067 + C749 * C1079 +
              C756 * C2192 + C32815 * C2193) *
                 C2667 +
             (C754 * C1081 + C748 * C1093 + C755 * C1082 + C749 * C1094 +
              C756 * C2194 + C32815 * C2195) *
                 C32601) *
                C32641) *
               C531 -
           (((C4758 + C4757 + C4756) * C32601 +
             (C4755 + C4754 + C4753) * C2667 +
             (C2376 + C2375 + C2374) * C32795 +
             (C2373 + C2372 + C2371) * C2666) *
                C32641 +
            ((C1278 + C1277 + C1276) * C32601 +
             (C1275 + C1274 + C1273) * C2667 +
             (C756 * C134 + C32815 * C143 + C755 * C133 + C749 * C142 +
              C754 * C132 + C748 * C141) *
                 C32795 +
             (C756 * C122 + C32815 * C129 + C755 * C121 + C749 * C128 +
              C754 * C120 + C748 * C127) *
                 C2666) *
                C32796) *
               C530) *
              C32499 * C443)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C6132 * C119 + C32450 * C126) * C7647 +
             (C6132 * C131 + C32450 * C140) * C7641 + C6229 * C7648 +
             C6230 * C7642 + C6231 * C7649 + C6232 * C7643 + C6233 * C7650 +
             C6234 * C32836) *
                C32796 +
            (C9768 + C9769 + C9770 + C9771 + C9772 + C9773 + C9774 + C9775) *
                C32641) *
               C530 -
           ((C9776 + C9777 + C9778 + C9779 + C9780 + C9781 + C9782 + C9783) *
                C32641 +
            (C9775 + C9774 + C9773 + C9772 + C9771 + C9770 + C9769 + C9768) *
                C32796) *
               C531) *
              C32499 * C442 +
          (((C10050 + C10051 + C10052 + C10053 + C10054 + C10055 + C10056 +
             C10057) *
                C32796 +
            (C7374 * C7647 + C7375 * C7641 + C7202 * C7648 + C7203 * C7642 +
             C7204 * C7649 + C7205 * C7643 +
             (C6132 * C7177 + C32450 * C7178) * C7650 +
             (C6132 * C7179 + C32450 * C7180) * C32836) *
                C32641) *
               C531 -
           ((C10057 + C10056 + C10055 + C10054 + C10053 + C10052 + C10051 +
             C10050) *
                C32641 +
            (C6420 * C32836 + C6419 * C7650 + C6418 * C7643 + C6417 * C7649 +
             C6416 * C7642 + C6415 * C7648 +
             (C6132 * C132 + C32450 * C141) * C7641 +
             (C6132 * C120 + C32450 * C127) * C7647) *
                C32796) *
               C530) *
              C32499 * C443)) /
            (p * q * std::sqrt(p + q));
    d2ee[109] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C754 * C119 + C748 * C126 + C755 * C120 + C749 * C127 +
             C756 * C121 + C32815 * C128) *
                C2666 +
            (C754 * C131 + C748 * C140 + C755 * C132 + C749 * C141 +
             C756 * C133 + C32815 * C142) *
                C32795 +
            (C931 + C932 + C933) * C2667 + (C934 + C935 + C936) * C32601) *
               C32796 +
           ((C2022 + C2023 + C2024) * C2666 + (C2025 + C2026 + C2027) * C32795 +
            (C1628 + C1627 + C1626) * C2667 +
            (C1625 + C1624 + C1623) * C32601) *
               C32641) *
              C32513 * C32499 * C110 -
          (((C756 * C631 + C32815 * C636 + C755 * C630 + C749 * C635 +
             C754 * C629 + C748 * C634) *
                C32601 +
            (C756 * C621 + C32815 * C626 + C755 * C620 + C749 * C625 +
             C754 * C619 + C748 * C624) *
                C2667 +
            (C2376 + C2375 + C2374) * C32795 +
            (C2373 + C2372 + C2371) * C2666) *
               C32641 +
           ((C1278 + C1277 + C1276) * C32601 + (C1275 + C1274 + C1273) * C2667 +
            (C756 * C134 + C32815 * C143 + C755 * C133 + C749 * C142 +
             C754 * C132 + C748 * C141) *
                C32795 +
            (C756 * C122 + C32815 * C129 + C755 * C121 + C749 * C128 +
             C754 * C120 + C748 * C127) *
                C2666) *
               C32796) *
              C32513 * C32499 * C111 +
          (((C754 * C121 + C748 * C128 + C755 * C122 + C749 * C129 +
             C756 * C123 + C32815 * C130) *
                C2666 +
            (C754 * C133 + C748 * C142 + C755 * C134 + C749 * C143 +
             C756 * C135 + C32815 * C144) *
                C32795 +
            (C754 * C215 + C748 * C230 + C755 * C214 + C749 * C229 +
             C756 * C213 + C32815 * C228) *
                C2667 +
            (C754 * C225 + C748 * C245 + C755 * C224 + C749 * C244 +
             C756 * C223 + C32815 * C243) *
                C32601) *
               C32796 +
           ((C754 * C320 + C748 * C335 + C755 * C319 + C749 * C334 +
             C756 * C318 + C32815 * C333) *
                C2666 +
            (C754 * C330 + C748 * C350 + C755 * C329 + C749 * C349 +
             C756 * C328 + C32815 * C348) *
                C32795 +
            (C754 * C620 + C748 * C625 + C755 * C621 + C749 * C626 +
             C756 * C622 + C32815 * C627) *
                C2667 +
            (C754 * C630 + C748 * C635 + C755 * C631 + C749 * C636 +
             C756 * C632 + C32815 * C637) *
                C32601) *
               C32641) *
              C32513 * C32499 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C754 * C119 + C748 * C126 + C755 * C120 + C749 * C127 +
             C756 * C121 + C32815 * C128) *
                C2666 +
            (C754 * C131 + C748 * C140 + C755 * C132 + C749 * C141 +
             C756 * C133 + C32815 * C142) *
                C32795 +
            (C931 + C932 + C933) * C2667 + (C934 + C935 + C936) * C32601) *
               C32796 +
           ((C2022 + C2023 + C2024) * C2666 + (C2025 + C2026 + C2027) * C32795 +
            (C1628 + C1627 + C1626) * C2667 +
            (C1625 + C1624 + C1623) * C32601) *
               C32641) *
              C32513 * C209 -
          (((C1617 + C1618 + C1619) * C32601 + (C1620 + C1621 + C1622) * C2667 +
            (C1623 + C1624 + C1625) * C32795 +
            (C1626 + C1627 + C1628) * C2666) *
               C32641 +
           ((C942 + C941 + C940) * C32601 + (C939 + C938 + C937) * C2667 +
            (C936 + C935 + C934) * C32795 + (C933 + C932 + C931) * C2666) *
               C32796) *
              C32513 * C210 +
          ((C951 * C2666 + C952 * C32795 + (C948 + C947 + C946) * C2667 +
            (C945 + C944 + C943) * C32601) *
               C32796 +
           ((C1622 + C1621 + C1620) * C2666 + (C1619 + C1618 + C1617) * C32795 +
            (C754 * C1580 + C748 * C1583 + C755 * C1581 + C749 * C1584 +
             C756 * C1582 + C32815 * C1585) *
                C2667 +
            (C754 * C1586 + C748 * C1589 + C755 * C1587 + C749 * C1590 +
             C756 * C1588 + C32815 * C1591) *
                C32601) *
               C32641) *
              C32513 * C211) *
         C32487) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C6132 * C119 + C32450 * C126) * C7647 +
            (C6132 * C131 + C32450 * C140) * C7641 + C6229 * C7648 +
            C6230 * C7642 + C6231 * C7649 + C6232 * C7643 + C6233 * C7650 +
            C6234 * C32836) *
               C32796 +
           (C7007 * C7647 + C7008 * C7641 + C6618 * C7648 + C6617 * C7642 +
            C6616 * C7649 + C6615 * C7643 + C6614 * C7650 + C6613 * C32836) *
               C32641) *
              C32513 * C32499 * C110 -
          (((C6132 * C1587 + C32450 * C1590) * C32836 +
            (C6132 * C1581 + C32450 * C1584) * C7650 + C7201 * C7643 +
            C7200 * C7649 + C7199 * C7642 + C7198 * C7648 + C7373 * C7641 +
            C7372 * C7647) *
               C32641 +
           (C6420 * C32836 + C6419 * C7650 + C6418 * C7643 + C6417 * C7649 +
            C6416 * C7642 + C6415 * C7648 +
            (C6132 * C132 + C32450 * C141) * C7641 +
            (C6132 * C120 + C32450 * C127) * C7647) *
               C32796) *
              C32513 * C32499 * C111 +
          (((C6132 * C121 + C32450 * C128) * C7647 +
            (C6132 * C133 + C32450 * C142) * C7641 +
            (C6132 * C215 + C32450 * C230) * C7648 +
            (C6132 * C225 + C32450 * C245) * C7642 +
            (C6132 * C220 + C32450 * C235) * C7649 +
            (C6132 * C240 + C32450 * C250) * C7643 +
            (C6132 * C870 + C32450 * C879) * C7650 +
            (C6132 * C876 + C32450 * C888) * C32836) *
               C32796 +
           ((C6132 * C320 + C32450 * C335) * C7647 +
            (C6132 * C330 + C32450 * C350) * C7641 +
            (C6132 * C620 + C32450 * C625) * C7648 +
            (C6132 * C630 + C32450 * C635) * C7642 +
            (C6132 * C1062 + C32450 * C1074) * C7649 +
            (C6132 * C1071 + C32450 * C1089) * C7643 +
            (C6132 * C1582 + C32450 * C1585) * C7650 +
            (C6132 * C1588 + C32450 * C1591) * C32836) *
               C32641) *
              C32513 * C32499 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C6132 * C119 + C32450 * C126) * C7647 +
            (C6132 * C131 + C32450 * C140) * C7641 + C6229 * C7648 +
            C6230 * C7642 + C6231 * C7649 + C6232 * C7643 + C6233 * C7650 +
            C6234 * C32836) *
               C32796 +
           (C7007 * C7647 + C7008 * C7641 + C6618 * C7648 + C6617 * C7642 +
            C6616 * C7649 + C6615 * C7643 + C6614 * C7650 + C6613 * C32836) *
               C32641) *
              C32513 * C209 -
          ((C6611 * C32836 + C6612 * C7650 + C6613 * C7643 + C6614 * C7649 +
            C6615 * C7642 + C6616 * C7648 + C6617 * C7641 + C6618 * C7647) *
               C32641 +
           (C6236 * C32836 + C6235 * C7650 + C6234 * C7643 + C6233 * C7649 +
            C6232 * C7642 + C6231 * C7648 + C6230 * C7641 + C6229 * C7647) *
               C32796) *
              C32513 * C210 +
          ((C6231 * C7647 + C6232 * C7641 + C6233 * C7648 + C6234 * C7642 +
            C6235 * C7649 + C6236 * C7643 + C6238 * C7650 + C6237 * C32836) *
               C32796 +
           (C6616 * C7647 + C6615 * C7641 + C6614 * C7648 + C6613 * C7642 +
            C6612 * C7649 + C6611 * C7643 +
            (C6132 * C6590 + C32450 * C6591) * C7650 +
            (C6132 * C6592 + C32450 * C6593) * C32836) *
               C32641) *
              C32513 * C211) *
         C32487) /
            (p * q * std::sqrt(p + q));
    d2ee[110] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C754 * C119 + C748 * C126 + C755 * C120 + C749 * C127 +
             C756 * C121 + C32815 * C128) *
                C757 +
            (C754 * C131 + C748 * C140 + C755 * C132 + C749 * C141 +
             C756 * C133 + C32815 * C142) *
                C32861 +
            (C931 + C932 + C933) * C758 + (C934 + C935 + C936) * C32849 +
            C951 * C759 + C952 * C32826) *
               C32554 * C32513 * C440 -
           ((C943 + C944 + C945) * C32826 + (C946 + C947 + C948) * C759 +
            (C942 + C941 + C940) * C32849 + (C939 + C938 + C937) * C758 +
            (C936 + C935 + C934) * C32861 + (C933 + C932 + C931) * C757) *
               C32554 * C32513 * C441) *
              C442 +
          (((C1273 + C1274 + C1275) * C757 + (C1276 + C1277 + C1278) * C32861 +
            (C1279 + C1280 + C1281) * C758 + (C1282 + C1283 + C1284) * C32849 +
            (C754 * C871 + C748 * C880 + C755 * C870 + C749 * C879 +
             C756 * C1244 + C32815 * C1245) *
                C759 +
            (C754 * C877 + C748 * C889 + C755 * C876 + C749 * C888 +
             C756 * C1246 + C32815 * C1247) *
                C32826) *
               C32554 * C32513 * C441 -
           ((C1284 + C1283 + C1282) * C32826 + (C1281 + C1280 + C1279) * C759 +
            (C1278 + C1277 + C1276) * C32849 + (C1275 + C1274 + C1273) * C758 +
            (C756 * C134 + C32815 * C143 + C755 * C133 + C749 * C142 +
             C754 * C132 + C748 * C141) *
                C32861 +
            (C756 * C122 + C32815 * C129 + C755 * C121 + C749 * C128 +
             C754 * C120 + C748 * C127) *
                C757) *
               C32554 * C32513 * C440) *
              C443)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C127 +
             C115 * C121 + C103 * C128 + C116 * C122 + C104 * C129 +
             C117 * C123 + C105 * C130) *
                C118 +
            (C113 * C131 + C101 * C140 + C114 * C132 + C102 * C141 +
             C115 * C133 + C103 * C142 + C116 * C134 + C104 * C143 +
             C117 * C135 + C105 * C144) *
                C32542) *
               C32554 * C32513 * C440 -
           ((C117 * C223 + C105 * C243 + C116 * C224 + C104 * C244 +
             C115 * C225 + C103 * C245 + C114 * C226 + C102 * C246 +
             C113 * C227 + C101 * C247) *
                C32542 +
            (C117 * C213 + C105 * C228 + C116 * C214 + C104 * C229 +
             C115 * C215 + C103 * C230 + C114 * C216 + C102 * C231 +
             C113 * C217 + C101 * C232) *
                C118) *
               C32554 * C32513 * C441) *
              C442 +
          (((C113 * C216 + C101 * C231 + C114 * C215 + C102 * C230 +
             C115 * C214 + C103 * C229 + C116 * C213 + C104 * C228 +
             C117 * C444 + C105 * C445) *
                C118 +
            (C113 * C226 + C101 * C246 + C114 * C225 + C102 * C245 +
             C115 * C224 + C103 * C244 + C116 * C223 + C104 * C243 +
             C117 * C446 + C105 * C447) *
                C32542) *
               C32554 * C32513 * C441 -
           ((C117 * C136 + C105 * C145 + C116 * C135 + C104 * C144 +
             C115 * C134 + C103 * C143 + C114 * C133 + C102 * C142 +
             C113 * C132 + C101 * C141) *
                C32542 +
            (C117 * C124 + C105 * C137 + C116 * C123 + C104 * C130 +
             C115 * C122 + C103 * C129 + C114 * C121 + C102 * C128 +
             C113 * C120 + C101 * C127) *
                C118) *
               C32554 * C32513 * C440) *
              C443)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C754 * C119 + C748 * C126 + C755 * C120 + C749 * C127 +
              C756 * C121 + C32815 * C128) *
                 C118 +
             (C754 * C131 + C748 * C140 + C755 * C132 + C749 * C141 +
              C756 * C133 + C32815 * C142) *
                 C32542) *
                C32862 +
            ((C2022 + C2023 + C2024) * C118 +
             (C2025 + C2026 + C2027) * C32542) *
                C32851 +
            C2046 * C32829) *
               C32513 * C440 -
           (((C756 * C1082 + C32815 * C1094 + C755 * C1081 + C749 * C1093 +
              C754 * C1080 + C748 * C1092) *
                 C32542 +
             (C756 * C1067 + C32815 * C1079 + C755 * C1066 + C749 * C1078 +
              C754 * C1065 + C748 * C1077) *
                 C118) *
                C32829 +
            ((C1623 + C1624 + C1625) * C32542 +
             (C1626 + C1627 + C1628) * C118) *
                C32851 +
            ((C936 + C935 + C934) * C32542 + (C933 + C932 + C931) * C118) *
                C32862) *
               C32513 * C441) *
              C442 +
          ((((C1273 + C1274 + C1275) * C118 +
             (C1276 + C1277 + C1278) * C32542) *
                C32862 +
            ((C754 * C619 + C748 * C624 + C755 * C620 + C749 * C625 +
              C756 * C621 + C32815 * C626) *
                 C118 +
             (C754 * C629 + C748 * C634 + C755 * C630 + C749 * C635 +
              C756 * C631 + C32815 * C636) *
                 C32542) *
                C32851 +
            ((C754 * C1066 + C748 * C1078 + C755 * C1067 + C749 * C1079 +
              C756 * C2192 + C32815 * C2193) *
                 C118 +
             (C754 * C1081 + C748 * C1093 + C755 * C1082 + C749 * C1094 +
              C756 * C2194 + C32815 * C2195) *
                 C32542) *
                C32829) *
               C32513 * C441 -
           (((C756 * C346 + C32815 * C356 + C755 * C345 + C749 * C355 +
              C754 * C344 + C748 * C354) *
                 C32542 +
             (C756 * C326 + C32815 * C341 + C755 * C325 + C749 * C340 +
              C754 * C324 + C748 * C339) *
                 C118) *
                C32829 +
            ((C756 * C329 + C32815 * C349 + C755 * C330 + C749 * C350 +
              C754 * C331 + C748 * C351) *
                 C32542 +
             (C756 * C319 + C32815 * C334 + C755 * C320 + C749 * C335 +
              C754 * C321 + C748 * C336) *
                 C118) *
                C32851 +
            ((C756 * C134 + C32815 * C143 + C755 * C133 + C749 * C142 +
              C754 * C132 + C748 * C141) *
                 C32542 +
             (C756 * C122 + C32815 * C129 + C755 * C121 + C749 * C128 +
              C754 * C120 + C748 * C127) *
                 C118) *
                C32862) *
               C32513 * C440) *
              C443)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C5270 * C119 + C32858 * C126 + C5271 * C120 + C32845 * C127 +
             C5272 * C121 + C32815 * C128) *
                C5273 +
            (C5270 * C131 + C32858 * C140 + C5271 * C132 + C32845 * C141 +
             C5272 * C133 + C32815 * C142) *
                C5267 +
            (C5423 + C5424 + C5425) * C5274 + (C5426 + C5427 + C5428) * C5268 +
            C5443 * C5275 + C5444 * C32826) *
               C32554 * C32513 * C440 -
           ((C5435 + C5436 + C5437) * C32826 + (C5438 + C5439 + C5440) * C5275 +
            (C5434 + C5433 + C5432) * C5268 + (C5431 + C5430 + C5429) * C5274 +
            (C5428 + C5427 + C5426) * C5267 + (C5425 + C5424 + C5423) * C5273) *
               C32554 * C32513 * C441) *
              C442 +
          (((C5725 + C5726 + C5727) * C5273 + (C5728 + C5729 + C5730) * C5267 +
            (C5731 + C5732 + C5733) * C5274 + (C5734 + C5735 + C5736) * C5268 +
            (C5270 * C871 + C32858 * C880 + C5271 * C870 + C32845 * C879 +
             C5272 * C1244 + C32815 * C1245) *
                C5275 +
            (C5270 * C877 + C32858 * C889 + C5271 * C876 + C32845 * C888 +
             C5272 * C1246 + C32815 * C1247) *
                C32826) *
               C32554 * C32513 * C441 -
           ((C5736 + C5735 + C5734) * C32826 + (C5733 + C5732 + C5731) * C5275 +
            (C5730 + C5729 + C5728) * C5268 + (C5727 + C5726 + C5725) * C5274 +
            (C5272 * C134 + C32815 * C143 + C5271 * C133 + C32845 * C142 +
             C5270 * C132 + C32858 * C141) *
                C5267 +
            (C5272 * C122 + C32815 * C129 + C5271 * C121 + C32845 * C128 +
             C5270 * C120 + C32858 * C127) *
                C5273) *
               C32554 * C32513 * C440) *
              C443)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C6132 * C119 + C32450 * C126) * C6133 +
            (C6132 * C131 + C32450 * C140) * C6127 + C6229 * C6134 +
            C6230 * C6128 + C6231 * C6135 + C6232 * C6129 + C6233 * C6136 +
            C6234 * C6130 + C6235 * C6137 + C6236 * C6131) *
               C32554 * C32513 * C440 -
           (C6237 * C6131 + C6238 * C6137 + C6236 * C6130 + C6235 * C6136 +
            C6234 * C6129 + C6233 * C6135 + C6232 * C6128 + C6231 * C6134 +
            C6230 * C6127 + C6229 * C6133) *
               C32554 * C32513 * C441) *
              C442 +
          ((C6415 * C6133 + C6416 * C6127 + C6417 * C6134 + C6418 * C6128 +
            C6419 * C6135 + C6420 * C6129 + C6421 * C6136 + C6422 * C6130 +
            (C6132 * C6394 + C32450 * C6395) * C6137 +
            (C6132 * C6396 + C32450 * C6397) * C6131) *
               C32554 * C32513 * C441 -
           (C6422 * C6131 + C6421 * C6137 + C6420 * C6130 + C6419 * C6136 +
            C6418 * C6129 + C6417 * C6135 + C6416 * C6128 + C6415 * C6134 +
            (C6132 * C132 + C32450 * C141) * C6127 +
            (C6132 * C120 + C32450 * C127) * C6133) *
               C32554 * C32513 * C440) *
              C443)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C6132 * C119 + C32450 * C126) * C5273 +
             (C6132 * C131 + C32450 * C140) * C5267 + C6229 * C5274 +
             C6230 * C5268 + C6231 * C5275 + C6232 * C32826) *
                C32862 +
            (C7017 + C7018 + C6983 + C6984 + C6985 + C6986) * C32851 +
            C7031 * C32829) *
               C32513 * C440 -
           ((C6855 * C32826 + C6856 * C5275 + C6854 * C5268 + C6853 * C5274 +
             C6852 * C5267 + C6851 * C5273) *
                C32829 +
            (C6613 * C32826 + C6614 * C5275 + C6615 * C5268 + C6616 * C5274 +
             C6617 * C5267 + C6618 * C5273) *
                C32851 +
            (C6234 * C32826 + C6233 * C5275 + C6232 * C5268 + C6231 * C5274 +
             C6230 * C5267 + C6229 * C5273) *
                C32862) *
               C32513 * C441) *
              C442 +
          (((C6415 * C5273 + C6416 * C5267 + C6417 * C5274 + C6418 * C5268 +
             C6419 * C5275 + C6420 * C32826) *
                C32862 +
            (C7198 * C5273 + C7199 * C5267 + C7200 * C5274 + C7201 * C5268 +
             (C6132 * C1581 + C32450 * C1584) * C5275 +
             (C6132 * C1587 + C32450 * C1590) * C32826) *
                C32851 +
            (C7202 * C5273 + C7203 * C5267 + C7204 * C5274 + C7205 * C5268 +
             (C6132 * C7177 + C32450 * C7178) * C5275 +
             (C6132 * C7179 + C32450 * C7180) * C32826) *
                C32829) *
               C32513 * C441 -
           ((C7205 * C32826 + C7204 * C5275 + C7203 * C5268 + C7202 * C5274 +
             (C6132 * C344 + C32450 * C354) * C5267 +
             (C6132 * C324 + C32450 * C339) * C5273) *
                C32829 +
            (C7201 * C32826 + C7200 * C5275 + C7199 * C5268 + C7198 * C5274 +
             (C6132 * C331 + C32450 * C351) * C5267 +
             (C6132 * C321 + C32450 * C336) * C5273) *
                C32851 +
            (C6418 * C32826 + C6417 * C5275 + C6416 * C5268 + C6415 * C5274 +
             (C6132 * C132 + C32450 * C141) * C5267 +
             (C6132 * C120 + C32450 * C127) * C5273) *
                C32862) *
               C32513 * C440) *
              C443)) /
            (p * q * std::sqrt(p + q));
    d2ee[111] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C754 * C119 + C748 * C126 + C755 * C120 + C749 * C127 +
             C756 * C121 + C32815 * C128) *
                C757 +
            (C754 * C131 + C748 * C140 + C755 * C132 + C749 * C141 +
             C756 * C133 + C32815 * C142) *
                C32861 +
            (C931 + C932 + C933) * C758 + (C934 + C935 + C936) * C32849 +
            C951 * C759 + C952 * C32826) *
               C32554 * C530 -
           ((C1617 + C1618 + C1619) * C32826 + (C1620 + C1621 + C1622) * C759 +
            (C1623 + C1624 + C1625) * C32849 + (C1626 + C1627 + C1628) * C758 +
            (C756 * C330 + C32815 * C350 + C755 * C331 + C749 * C351 +
             C754 * C332 + C748 * C352) *
                C32861 +
            (C756 * C320 + C32815 * C335 + C755 * C321 + C749 * C336 +
             C754 * C322 + C748 * C337) *
                C757) *
               C32554 * C531) *
              C440 +
          (((C1628 + C1627 + C1626) * C757 + (C1625 + C1624 + C1623) * C32861 +
            (C1622 + C1621 + C1620) * C758 + (C1619 + C1618 + C1617) * C32849 +
            (C754 * C1580 + C748 * C1583 + C755 * C1581 + C749 * C1584 +
             C756 * C1582 + C32815 * C1585) *
                C759 +
            (C754 * C1586 + C748 * C1589 + C755 * C1587 + C749 * C1590 +
             C756 * C1588 + C32815 * C1591) *
                C32826) *
               C32554 * C531 -
           ((C943 + C944 + C945) * C32826 + (C946 + C947 + C948) * C759 +
            (C942 + C941 + C940) * C32849 + (C939 + C938 + C937) * C758 +
            (C936 + C935 + C934) * C32861 + (C933 + C932 + C931) * C757) *
               C32554 * C530) *
              C441) *
         C32487) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C127 +
             C115 * C121 + C103 * C128 + C116 * C122 + C104 * C129 +
             C117 * C123 + C105 * C130) *
                C118 +
            (C113 * C131 + C101 * C140 + C114 * C132 + C102 * C141 +
             C115 * C133 + C103 * C142 + C116 * C134 + C104 * C143 +
             C117 * C135 + C105 * C144) *
                C32542) *
               C32554 * C530 -
           ((C117 * C328 + C105 * C348 + C116 * C329 + C104 * C349 +
             C115 * C330 + C103 * C350 + C114 * C331 + C102 * C351 +
             C113 * C332 + C101 * C352) *
                C32542 +
            (C117 * C318 + C105 * C333 + C116 * C319 + C104 * C334 +
             C115 * C320 + C103 * C335 + C114 * C321 + C102 * C336 +
             C113 * C322 + C101 * C337) *
                C118) *
               C32554 * C531) *
              C440 +
          (((C113 * C618 + C101 * C623 + C114 * C619 + C102 * C624 +
             C115 * C620 + C103 * C625 + C116 * C621 + C104 * C626 +
             C117 * C622 + C105 * C627) *
                C118 +
            (C113 * C628 + C101 * C633 + C114 * C629 + C102 * C634 +
             C115 * C630 + C103 * C635 + C116 * C631 + C104 * C636 +
             C117 * C632 + C105 * C637) *
                C32542) *
               C32554 * C531 -
           ((C117 * C223 + C105 * C243 + C116 * C224 + C104 * C244 +
             C115 * C225 + C103 * C245 + C114 * C226 + C102 * C246 +
             C113 * C227 + C101 * C247) *
                C32542 +
            (C117 * C213 + C105 * C228 + C116 * C214 + C104 * C229 +
             C115 * C215 + C103 * C230 + C114 * C216 + C102 * C231 +
             C113 * C217 + C101 * C232) *
                C118) *
               C32554 * C530) *
              C441) *
         C32487) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C754 * C119 + C748 * C126 + C755 * C120 + C749 * C127 +
              C756 * C121 + C32815 * C128) *
                 C118 +
             (C754 * C131 + C748 * C140 + C755 * C132 + C749 * C141 +
              C756 * C133 + C32815 * C142) *
                 C32542) *
                C32862 +
            ((C2022 + C2023 + C2024) * C118 +
             (C2025 + C2026 + C2027) * C32542) *
                C32851 +
            C2046 * C32829) *
               C530 -
           (((C2034 + C2035 + C2036) * C32542 +
             (C2037 + C2038 + C2039) * C118) *
                C32829 +
            ((C2033 + C2032 + C2031) * C32542 +
             (C2030 + C2029 + C2028) * C118) *
                C32851 +
            ((C2027 + C2026 + C2025) * C32542 +
             (C2024 + C2023 + C2022) * C118) *
                C32862) *
               C531) *
              C440 +
          ((((C1628 + C1627 + C1626) * C118 +
             (C1625 + C1624 + C1623) * C32542) *
                C32862 +
            ((C2553 + C2554 + C2555) * C118 +
             (C2556 + C2557 + C2558) * C32542) *
                C32851 +
            ((C754 * C2528 + C748 * C2531 + C755 * C2529 + C749 * C2532 +
              C756 * C2530 + C32815 * C2533) *
                 C118 +
             (C754 * C2534 + C748 * C2537 + C755 * C2535 + C749 * C2538 +
              C756 * C2536 + C32815 * C2539) *
                 C32542) *
                C32829) *
               C531 -
           (((C2558 + C2557 + C2556) * C32542 +
             (C2555 + C2554 + C2553) * C118) *
                C32829 +
            ((C1623 + C1624 + C1625) * C32542 +
             (C1626 + C1627 + C1628) * C118) *
                C32851 +
            ((C936 + C935 + C934) * C32542 + (C933 + C932 + C931) * C118) *
                C32862) *
               C530) *
              C441) *
         C32487) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C5270 * C119 + C32858 * C126 + C5271 * C120 + C32845 * C127 +
             C5272 * C121 + C32815 * C128) *
                C5273 +
            (C5270 * C131 + C32858 * C140 + C5271 * C132 + C32845 * C141 +
             C5272 * C133 + C32815 * C142) *
                C5267 +
            (C5423 + C5424 + C5425) * C5274 + (C5426 + C5427 + C5428) * C5268 +
            C5443 * C5275 + C5444 * C32826) *
               C32554 * C530 -
           ((C6053 + C6054 + C6055) * C32826 + (C6056 + C6057 + C6058) * C5275 +
            (C6059 + C6060 + C6061) * C5268 + (C6062 + C6063 + C6064) * C5274 +
            (C5272 * C330 + C32815 * C350 + C5271 * C331 + C32845 * C351 +
             C5270 * C332 + C32858 * C352) *
                C5267 +
            (C5272 * C320 + C32815 * C335 + C5271 * C321 + C32845 * C336 +
             C5270 * C322 + C32858 * C337) *
                C5273) *
               C32554 * C531) *
              C440 +
          (((C6064 + C6063 + C6062) * C5273 + (C6061 + C6060 + C6059) * C5267 +
            (C6058 + C6057 + C6056) * C5274 + (C6055 + C6054 + C6053) * C5268 +
            (C5270 * C1580 + C32858 * C1583 + C5271 * C1581 + C32845 * C1584 +
             C5272 * C1582 + C32815 * C1585) *
                C5275 +
            (C5270 * C1586 + C32858 * C1589 + C5271 * C1587 + C32845 * C1590 +
             C5272 * C1588 + C32815 * C1591) *
                C32826) *
               C32554 * C531 -
           ((C5435 + C5436 + C5437) * C32826 + (C5438 + C5439 + C5440) * C5275 +
            (C5434 + C5433 + C5432) * C5268 + (C5431 + C5430 + C5429) * C5274 +
            (C5428 + C5427 + C5426) * C5267 + (C5425 + C5424 + C5423) * C5273) *
               C32554 * C530) *
              C441) *
         C32487) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C6132 * C119 + C32450 * C126) * C6133 +
            (C6132 * C131 + C32450 * C140) * C6127 + C6229 * C6134 +
            C6230 * C6128 + C6231 * C6135 + C6232 * C6129 + C6233 * C6136 +
            C6234 * C6130 + C6235 * C6137 + C6236 * C6131) *
               C32554 * C530 -
           (C6611 * C6131 + C6612 * C6137 + C6613 * C6130 + C6614 * C6136 +
            C6615 * C6129 + C6616 * C6135 + C6617 * C6128 + C6618 * C6134 +
            (C6132 * C332 + C32450 * C352) * C6127 +
            (C6132 * C322 + C32450 * C337) * C6133) *
               C32554 * C531) *
              C440 +
          ((C6618 * C6133 + C6617 * C6127 + C6616 * C6134 + C6615 * C6128 +
            C6614 * C6135 + C6613 * C6129 + C6612 * C6136 + C6611 * C6130 +
            (C6132 * C6590 + C32450 * C6591) * C6137 +
            (C6132 * C6592 + C32450 * C6593) * C6131) *
               C32554 * C531 -
           (C6237 * C6131 + C6238 * C6137 + C6236 * C6130 + C6235 * C6136 +
            C6234 * C6129 + C6233 * C6135 + C6232 * C6128 + C6231 * C6134 +
            C6230 * C6127 + C6229 * C6133) *
               C32554 * C530) *
              C441) *
         C32487) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C6132 * C119 + C32450 * C126) * C5273 +
             (C6132 * C131 + C32450 * C140) * C5267 + C6229 * C5274 +
             C6230 * C5268 + C6231 * C5275 + C6232 * C32826) *
                C32862 +
            (C7017 + C7018 + C6983 + C6984 + C6985 + C6986) * C32851 +
            C7031 * C32829) *
               C530 -
           ((C7021 + C7022 + C7023 + C7024 + C7025 + C7026) * C32829 +
            (C6994 + C6993 + C6992 + C6991 + C7020 + C7019) * C32851 +
            (C6986 + C6985 + C6984 + C6983 + C7018 + C7017) * C32862) *
               C531) *
              C440 +
          (((C7530 + C7531 + C7532 + C7533 + C7534 + C7535) * C32862 +
            (C7536 + C7537 + C7538 + C7539 + C7540 + C7541) * C32851 +
            (C7014 * C5273 + C7013 * C5267 + C7012 * C5274 + C7011 * C5268 +
             (C6132 * C7525 + C32450 * C7526) * C5275 +
             (C6132 * C7527 + C32450 * C7528) * C32826) *
                C32829) *
               C531 -
           ((C7541 + C7540 + C7539 + C7538 + C7537 + C7536) * C32829 +
            (C7535 + C7534 + C7533 + C7532 + C7531 + C7530) * C32851 +
            (C6234 * C32826 + C6233 * C5275 + C6232 * C5268 + C6231 * C5274 +
             C6230 * C5267 + C6229 * C5273) *
                C32862) *
               C530) *
              C441) *
         C32487) /
            (p * q * std::sqrt(p + q));
    d2ee[112] +=
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             (((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C127 +
                C115 * C121 + C103 * C128 + C116 * C122 + C104 * C129 +
                C117 * C123 + C105 * C130) *
                   C118 +
               (C113 * C131 + C101 * C140 + C114 * C132 + C102 * C141 +
                C115 * C133 + C103 * C142 + C116 * C134 + C104 * C143 +
                C117 * C135 + C105 * C144) *
                   C32542) *
                  C32554 * C32513 * C32499 * C110 -
              ((C117 * C136 + C105 * C145 + C116 * C135 + C104 * C144 +
                C115 * C134 + C103 * C143 + C114 * C133 + C102 * C142 +
                C113 * C132 + C101 * C141) *
                   C32542 +
               (C117 * C124 + C105 * C137 + C116 * C123 + C104 * C130 +
                C115 * C122 + C103 * C129 + C114 * C121 + C102 * C128 +
                C113 * C120 + C101 * C127) *
                   C118) *
                  C32554 * C32513 * C32499 * C111 +
              ((C113 * C121 + C101 * C128 + C114 * C122 + C102 * C129 +
                C115 * C123 + C103 * C130 + C116 * C124 + C104 * C137 +
                C117 * C125 + C105 * C138) *
                   C118 +
               (C113 * C133 + C101 * C142 + C114 * C134 + C102 * C143 +
                C115 * C135 + C103 * C144 + C116 * C136 + C104 * C145 +
                C117 * C139 + C105 * C146) *
                   C32542) *
                  C32554 * C32513 * C32499 * C112) +
         std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             (((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C127 +
                C115 * C121 + C103 * C128 + C116 * C122 + C104 * C129 +
                C117 * C123 + C105 * C130) *
                   C118 +
               (C113 * C131 + C101 * C140 + C114 * C132 + C102 * C141 +
                C115 * C133 + C103 * C142 + C116 * C134 + C104 * C143 +
                C117 * C135 + C105 * C144) *
                   C32542) *
                  C32554 * C32513 * C209 -
              ((C117 * C223 + C105 * C243 + C116 * C224 + C104 * C244 +
                C115 * C225 + C103 * C245 + C114 * C226 + C102 * C246 +
                C113 * C227 + C101 * C247) *
                   C32542 +
               (C117 * C213 + C105 * C228 + C116 * C214 + C104 * C229 +
                C115 * C215 + C103 * C230 + C114 * C216 + C102 * C231 +
                C113 * C217 + C101 * C232) *
                   C118) *
                  C32554 * C32513 * C210 +
              ((C113 * C218 + C101 * C233 + C114 * C219 + C102 * C234 +
                C115 * C220 + C103 * C235 + C116 * C221 + C104 * C236 +
                C117 * C222 + C105 * C237) *
                   C118 +
               (C113 * C238 + C101 * C248 + C114 * C239 + C102 * C249 +
                C115 * C240 + C103 * C250 + C116 * C241 + C104 * C251 +
                C117 * C242 + C105 * C252) *
                   C32542) *
                  C32554 * C32513 * C211) *
             C32487) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C127 +
            C115 * C121 + C103 * C128 + C116 * C122 + C104 * C129 +
            C117 * C123 + C105 * C130) *
               C118 +
           (C113 * C131 + C101 * C140 + C114 * C132 + C102 * C141 +
            C115 * C133 + C103 * C142 + C116 * C134 + C104 * C143 +
            C117 * C135 + C105 * C144) *
               C32542) *
              C32554 * C315 -
          ((C117 * C328 + C105 * C348 + C116 * C329 + C104 * C349 +
            C115 * C330 + C103 * C350 + C114 * C331 + C102 * C351 +
            C113 * C332 + C101 * C352) *
               C32542 +
           (C117 * C318 + C105 * C333 + C116 * C319 + C104 * C334 +
            C115 * C320 + C103 * C335 + C114 * C321 + C102 * C336 +
            C113 * C322 + C101 * C337) *
               C118) *
              C32554 * C316 +
          ((C113 * C323 + C101 * C338 + C114 * C324 + C102 * C339 +
            C115 * C325 + C103 * C340 + C116 * C326 + C104 * C341 +
            C117 * C327 + C105 * C342) *
               C118 +
           (C113 * C343 + C101 * C353 + C114 * C344 + C102 * C354 +
            C115 * C345 + C103 * C355 + C116 * C346 + C104 * C356 +
            C117 * C347 + C105 * C357) *
               C32542) *
              C32554 * C317) *
         C32499 * C32487) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C754 * C119 + C748 * C126 + C755 * C120 + C749 * C127 +
            C756 * C121 + C32815 * C128) *
               C757 +
           (C754 * C131 + C748 * C140 + C755 * C132 + C749 * C141 +
            C756 * C133 + C32815 * C142) *
               C32861 +
           (C754 * C217 + C748 * C232 + C755 * C216 + C749 * C231 +
            C756 * C215 + C32815 * C230) *
               C758 +
           (C754 * C227 + C748 * C247 + C755 * C226 + C749 * C246 +
            C756 * C225 + C32815 * C245) *
               C32849 +
           (C754 * C218 + C748 * C233 + C755 * C219 + C749 * C234 +
            C756 * C220 + C32815 * C235) *
               C759 +
           (C754 * C238 + C748 * C248 + C755 * C239 + C749 * C249 +
            C756 * C240 + C32815 * C250) *
               C32826) *
              C32554 * C32513 * C32499 * C110 -
          ((C756 * C241 + C32815 * C251 + C755 * C240 + C749 * C250 +
            C754 * C239 + C748 * C249) *
               C32826 +
           (C756 * C221 + C32815 * C236 + C755 * C220 + C749 * C235 +
            C754 * C219 + C748 * C234) *
               C759 +
           (C756 * C224 + C32815 * C244 + C755 * C225 + C749 * C245 +
            C754 * C226 + C748 * C246) *
               C32849 +
           (C756 * C214 + C32815 * C229 + C755 * C215 + C749 * C230 +
            C754 * C216 + C748 * C231) *
               C758 +
           (C756 * C134 + C32815 * C143 + C755 * C133 + C749 * C142 +
            C754 * C132 + C748 * C141) *
               C32861 +
           (C756 * C122 + C32815 * C129 + C755 * C121 + C749 * C128 +
            C754 * C120 + C748 * C127) *
               C757) *
              C32554 * C32513 * C32499 * C111 +
          ((C754 * C121 + C748 * C128 + C755 * C122 + C749 * C129 +
            C756 * C123 + C32815 * C130) *
               C757 +
           (C754 * C133 + C748 * C142 + C755 * C134 + C749 * C143 +
            C756 * C135 + C32815 * C144) *
               C32861 +
           (C754 * C215 + C748 * C230 + C755 * C214 + C749 * C229 +
            C756 * C213 + C32815 * C228) *
               C758 +
           (C754 * C225 + C748 * C245 + C755 * C224 + C749 * C244 +
            C756 * C223 + C32815 * C243) *
               C32849 +
           (C754 * C220 + C748 * C235 + C755 * C221 + C749 * C236 +
            C756 * C222 + C32815 * C237) *
               C759 +
           (C754 * C240 + C748 * C250 + C755 * C241 + C749 * C251 +
            C756 * C242 + C32815 * C252) *
               C32826) *
              C32554 * C32513 * C32499 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C754 * C119 + C748 * C126 + C755 * C120 + C749 * C127 +
            C756 * C121 + C32815 * C128) *
               C757 +
           (C754 * C131 + C748 * C140 + C755 * C132 + C749 * C141 +
            C756 * C133 + C32815 * C142) *
               C32861 +
           (C931 + C932 + C933) * C758 + (C934 + C935 + C936) * C32849 +
           C951 * C759 + C952 * C32826) *
              C32554 * C32513 * C209 -
          ((C943 + C944 + C945) * C32826 + (C946 + C947 + C948) * C759 +
           (C942 + C941 + C940) * C32849 + (C939 + C938 + C937) * C758 +
           (C936 + C935 + C934) * C32861 + (C933 + C932 + C931) * C757) *
              C32554 * C32513 * C210 +
          (C951 * C757 + C952 * C32861 + (C948 + C947 + C946) * C758 +
           (C945 + C944 + C943) * C32849 +
           (C754 * C873 + C748 * C882 + C755 * C874 + C749 * C883 +
            C756 * C875 + C32815 * C884) *
               C759 +
           (C754 * C885 + C748 * C891 + C755 * C886 + C749 * C892 +
            C756 * C887 + C32815 * C893) *
               C32826) *
              C32554 * C32513 * C211) *
         C32487) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C754 * C119 + C748 * C126 + C755 * C120 + C749 * C127 +
            C756 * C121 + C32815 * C128) *
               C757 +
           (C754 * C131 + C748 * C140 + C755 * C132 + C749 * C141 +
            C756 * C133 + C32815 * C142) *
               C32861 +
           (C931 + C932 + C933) * C758 + (C934 + C935 + C936) * C32849 +
           C951 * C759 + C952 * C32826) *
              C32554 * C315 -
          ((C756 * C1071 + C32815 * C1089 + C755 * C1072 + C749 * C1090 +
            C754 * C1073 + C748 * C1091) *
               C32826 +
           (C756 * C1062 + C32815 * C1074 + C755 * C1063 + C749 * C1075 +
            C754 * C1064 + C748 * C1076) *
               C759 +
           (C756 * C630 + C32815 * C635 + C755 * C629 + C749 * C634 +
            C754 * C628 + C748 * C633) *
               C32849 +
           (C756 * C620 + C32815 * C625 + C755 * C619 + C749 * C624 +
            C754 * C618 + C748 * C623) *
               C758 +
           (C756 * C330 + C32815 * C350 + C755 * C331 + C749 * C351 +
            C754 * C332 + C748 * C352) *
               C32861 +
           (C756 * C320 + C32815 * C335 + C755 * C321 + C749 * C336 +
            C754 * C322 + C748 * C337) *
               C757) *
              C32554 * C316 +
          ((C754 * C323 + C748 * C338 + C755 * C324 + C749 * C339 +
            C756 * C325 + C32815 * C340) *
               C757 +
           (C754 * C343 + C748 * C353 + C755 * C344 + C749 * C354 +
            C756 * C345 + C32815 * C355) *
               C32861 +
           (C754 * C1065 + C748 * C1077 + C755 * C1066 + C749 * C1078 +
            C756 * C1067 + C32815 * C1079) *
               C758 +
           (C754 * C1080 + C748 * C1092 + C755 * C1081 + C749 * C1093 +
            C756 * C1082 + C32815 * C1094) *
               C32849 +
           (C754 * C1068 + C748 * C1083 + C755 * C1069 + C749 * C1084 +
            C756 * C1070 + C32815 * C1085) *
               C759 +
           (C754 * C1086 + C748 * C1095 + C755 * C1087 + C749 * C1096 +
            C756 * C1088 + C32815 * C1097) *
               C32826) *
              C32554 * C317) *
         C32499 * C32487) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C754 * C119 + C748 * C126 + C755 * C120 + C749 * C127 +
             C756 * C121 + C32815 * C128) *
                C118 +
            (C754 * C131 + C748 * C140 + C755 * C132 + C749 * C141 +
             C756 * C133 + C32815 * C142) *
                C32542) *
               C32862 +
           ((C754 * C322 + C748 * C337 + C755 * C321 + C749 * C336 +
             C756 * C320 + C32815 * C335) *
                C118 +
            (C754 * C332 + C748 * C352 + C755 * C331 + C749 * C351 +
             C756 * C330 + C32815 * C350) *
                C32542) *
               C32851 +
           ((C754 * C323 + C748 * C338 + C755 * C324 + C749 * C339 +
             C756 * C325 + C32815 * C340) *
                C118 +
            (C754 * C343 + C748 * C353 + C755 * C344 + C749 * C354 +
             C756 * C345 + C32815 * C355) *
                C32542) *
               C32829) *
              C32513 * C32499 * C110 -
          (((C756 * C346 + C32815 * C356 + C755 * C345 + C749 * C355 +
             C754 * C344 + C748 * C354) *
                C32542 +
            (C756 * C326 + C32815 * C341 + C755 * C325 + C749 * C340 +
             C754 * C324 + C748 * C339) *
                C118) *
               C32829 +
           ((C756 * C329 + C32815 * C349 + C755 * C330 + C749 * C350 +
             C754 * C331 + C748 * C351) *
                C32542 +
            (C756 * C319 + C32815 * C334 + C755 * C320 + C749 * C335 +
             C754 * C321 + C748 * C336) *
                C118) *
               C32851 +
           ((C756 * C134 + C32815 * C143 + C755 * C133 + C749 * C142 +
             C754 * C132 + C748 * C141) *
                C32542 +
            (C756 * C122 + C32815 * C129 + C755 * C121 + C749 * C128 +
             C754 * C120 + C748 * C127) *
                C118) *
               C32862) *
              C32513 * C32499 * C111 +
          (((C754 * C121 + C748 * C128 + C755 * C122 + C749 * C129 +
             C756 * C123 + C32815 * C130) *
                C118 +
            (C754 * C133 + C748 * C142 + C755 * C134 + C749 * C143 +
             C756 * C135 + C32815 * C144) *
                C32542) *
               C32862 +
           ((C754 * C320 + C748 * C335 + C755 * C319 + C749 * C334 +
             C756 * C318 + C32815 * C333) *
                C118 +
            (C754 * C330 + C748 * C350 + C755 * C329 + C749 * C349 +
             C756 * C328 + C32815 * C348) *
                C32542) *
               C32851 +
           ((C754 * C325 + C748 * C340 + C755 * C326 + C749 * C341 +
             C756 * C327 + C32815 * C342) *
                C118 +
            (C754 * C345 + C748 * C355 + C755 * C346 + C749 * C356 +
             C756 * C347 + C32815 * C357) *
                C32542) *
               C32829) *
              C32513 * C32499 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C754 * C119 + C748 * C126 + C755 * C120 + C749 * C127 +
             C756 * C121 + C32815 * C128) *
                C118 +
            (C754 * C131 + C748 * C140 + C755 * C132 + C749 * C141 +
             C756 * C133 + C32815 * C142) *
                C32542) *
               C32862 +
           ((C754 * C322 + C748 * C337 + C755 * C321 + C749 * C336 +
             C756 * C320 + C32815 * C335) *
                C118 +
            (C754 * C332 + C748 * C352 + C755 * C331 + C749 * C351 +
             C756 * C330 + C32815 * C350) *
                C32542) *
               C32851 +
           ((C754 * C323 + C748 * C338 + C755 * C324 + C749 * C339 +
             C756 * C325 + C32815 * C340) *
                C118 +
            (C754 * C343 + C748 * C353 + C755 * C344 + C749 * C354 +
             C756 * C345 + C32815 * C355) *
                C32542) *
               C32829) *
              C32513 * C209 -
          (((C756 * C1082 + C32815 * C1094 + C755 * C1081 + C749 * C1093 +
             C754 * C1080 + C748 * C1092) *
                C32542 +
            (C756 * C1067 + C32815 * C1079 + C755 * C1066 + C749 * C1078 +
             C754 * C1065 + C748 * C1077) *
                C118) *
               C32829 +
           ((C1623 + C1624 + C1625) * C32542 + (C1626 + C1627 + C1628) * C118) *
               C32851 +
           ((C936 + C935 + C934) * C32542 + (C933 + C932 + C931) * C118) *
               C32862) *
              C32513 * C210 +
          ((C951 * C118 + C952 * C32542) * C32862 +
           ((C1622 + C1621 + C1620) * C118 + (C1619 + C1618 + C1617) * C32542) *
               C32851 +
           ((C754 * C1068 + C748 * C1083 + C755 * C1069 + C749 * C1084 +
             C756 * C1070 + C32815 * C1085) *
                C118 +
            (C754 * C1086 + C748 * C1095 + C755 * C1087 + C749 * C1096 +
             C756 * C1088 + C32815 * C1097) *
                C32542) *
               C32829) *
              C32513 * C211) *
         C32487) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C754 * C119 + C748 * C126 + C755 * C120 + C749 * C127 +
             C756 * C121 + C32815 * C128) *
                C118 +
            (C754 * C131 + C748 * C140 + C755 * C132 + C749 * C141 +
             C756 * C133 + C32815 * C142) *
                C32542) *
               C32862 +
           ((C2022 + C2023 + C2024) * C118 + (C2025 + C2026 + C2027) * C32542) *
               C32851 +
           C2046 * C32829) *
              C315 -
          (((C2034 + C2035 + C2036) * C32542 + (C2037 + C2038 + C2039) * C118) *
               C32829 +
           ((C2033 + C2032 + C2031) * C32542 + (C2030 + C2029 + C2028) * C118) *
               C32851 +
           ((C2027 + C2026 + C2025) * C32542 + (C2024 + C2023 + C2022) * C118) *
               C32862) *
              C316 +
          (C2046 * C32862 +
           ((C2039 + C2038 + C2037) * C118 + (C2036 + C2035 + C2034) * C32542) *
               C32851 +
           ((C754 * C1964 + C748 * C1973 + C755 * C1965 + C749 * C1974 +
             C756 * C1966 + C32815 * C1975) *
                C118 +
            (C754 * C1976 + C748 * C1982 + C755 * C1977 + C749 * C1983 +
             C756 * C1978 + C32815 * C1984) *
                C32542) *
               C32829) *
              C317) *
         C32499 * C32487) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C5270 * C119 + C32858 * C126 + C5271 * C120 + C32845 * C127 +
            C5272 * C121 + C32815 * C128) *
               C5273 +
           (C5270 * C131 + C32858 * C140 + C5271 * C132 + C32845 * C141 +
            C5272 * C133 + C32815 * C142) *
               C5267 +
           (C5270 * C217 + C32858 * C232 + C5271 * C216 + C32845 * C231 +
            C5272 * C215 + C32815 * C230) *
               C5274 +
           (C5270 * C227 + C32858 * C247 + C5271 * C226 + C32845 * C246 +
            C5272 * C225 + C32815 * C245) *
               C5268 +
           (C5270 * C218 + C32858 * C233 + C5271 * C219 + C32845 * C234 +
            C5272 * C220 + C32815 * C235) *
               C5275 +
           (C5270 * C238 + C32858 * C248 + C5271 * C239 + C32845 * C249 +
            C5272 * C240 + C32815 * C250) *
               C32826) *
              C32554 * C32513 * C32499 * C110 -
          ((C5272 * C241 + C32815 * C251 + C5271 * C240 + C32845 * C250 +
            C5270 * C239 + C32858 * C249) *
               C32826 +
           (C5272 * C221 + C32815 * C236 + C5271 * C220 + C32845 * C235 +
            C5270 * C219 + C32858 * C234) *
               C5275 +
           (C5272 * C224 + C32815 * C244 + C5271 * C225 + C32845 * C245 +
            C5270 * C226 + C32858 * C246) *
               C5268 +
           (C5272 * C214 + C32815 * C229 + C5271 * C215 + C32845 * C230 +
            C5270 * C216 + C32858 * C231) *
               C5274 +
           (C5272 * C134 + C32815 * C143 + C5271 * C133 + C32845 * C142 +
            C5270 * C132 + C32858 * C141) *
               C5267 +
           (C5272 * C122 + C32815 * C129 + C5271 * C121 + C32845 * C128 +
            C5270 * C120 + C32858 * C127) *
               C5273) *
              C32554 * C32513 * C32499 * C111 +
          ((C5270 * C121 + C32858 * C128 + C5271 * C122 + C32845 * C129 +
            C5272 * C123 + C32815 * C130) *
               C5273 +
           (C5270 * C133 + C32858 * C142 + C5271 * C134 + C32845 * C143 +
            C5272 * C135 + C32815 * C144) *
               C5267 +
           (C5270 * C215 + C32858 * C230 + C5271 * C214 + C32845 * C229 +
            C5272 * C213 + C32815 * C228) *
               C5274 +
           (C5270 * C225 + C32858 * C245 + C5271 * C224 + C32845 * C244 +
            C5272 * C223 + C32815 * C243) *
               C5268 +
           (C5270 * C220 + C32858 * C235 + C5271 * C221 + C32845 * C236 +
            C5272 * C222 + C32815 * C237) *
               C5275 +
           (C5270 * C240 + C32858 * C250 + C5271 * C241 + C32845 * C251 +
            C5272 * C242 + C32815 * C252) *
               C32826) *
              C32554 * C32513 * C32499 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C5270 * C119 + C32858 * C126 + C5271 * C120 + C32845 * C127 +
            C5272 * C121 + C32815 * C128) *
               C5273 +
           (C5270 * C131 + C32858 * C140 + C5271 * C132 + C32845 * C141 +
            C5272 * C133 + C32815 * C142) *
               C5267 +
           (C5423 + C5424 + C5425) * C5274 + (C5426 + C5427 + C5428) * C5268 +
           C5443 * C5275 + C5444 * C32826) *
              C32554 * C32513 * C209 -
          ((C5435 + C5436 + C5437) * C32826 + (C5438 + C5439 + C5440) * C5275 +
           (C5434 + C5433 + C5432) * C5268 + (C5431 + C5430 + C5429) * C5274 +
           (C5428 + C5427 + C5426) * C5267 + (C5425 + C5424 + C5423) * C5273) *
              C32554 * C32513 * C210 +
          (C5443 * C5273 + C5444 * C5267 + (C5440 + C5439 + C5438) * C5274 +
           (C5437 + C5436 + C5435) * C5268 +
           (C5270 * C873 + C32858 * C882 + C5271 * C874 + C32845 * C883 +
            C5272 * C875 + C32815 * C884) *
               C5275 +
           (C5270 * C885 + C32858 * C891 + C5271 * C886 + C32845 * C892 +
            C5272 * C887 + C32815 * C893) *
               C32826) *
              C32554 * C32513 * C211) *
         C32487) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C5270 * C119 + C32858 * C126 + C5271 * C120 + C32845 * C127 +
            C5272 * C121 + C32815 * C128) *
               C5273 +
           (C5270 * C131 + C32858 * C140 + C5271 * C132 + C32845 * C141 +
            C5272 * C133 + C32815 * C142) *
               C5267 +
           (C5423 + C5424 + C5425) * C5274 + (C5426 + C5427 + C5428) * C5268 +
           C5443 * C5275 + C5444 * C32826) *
              C32554 * C315 -
          ((C5272 * C1071 + C32815 * C1089 + C5271 * C1072 + C32845 * C1090 +
            C5270 * C1073 + C32858 * C1091) *
               C32826 +
           (C5272 * C1062 + C32815 * C1074 + C5271 * C1063 + C32845 * C1075 +
            C5270 * C1064 + C32858 * C1076) *
               C5275 +
           (C5272 * C630 + C32815 * C635 + C5271 * C629 + C32845 * C634 +
            C5270 * C628 + C32858 * C633) *
               C5268 +
           (C5272 * C620 + C32815 * C625 + C5271 * C619 + C32845 * C624 +
            C5270 * C618 + C32858 * C623) *
               C5274 +
           (C5272 * C330 + C32815 * C350 + C5271 * C331 + C32845 * C351 +
            C5270 * C332 + C32858 * C352) *
               C5267 +
           (C5272 * C320 + C32815 * C335 + C5271 * C321 + C32845 * C336 +
            C5270 * C322 + C32858 * C337) *
               C5273) *
              C32554 * C316 +
          ((C5270 * C323 + C32858 * C338 + C5271 * C324 + C32845 * C339 +
            C5272 * C325 + C32815 * C340) *
               C5273 +
           (C5270 * C343 + C32858 * C353 + C5271 * C344 + C32845 * C354 +
            C5272 * C345 + C32815 * C355) *
               C5267 +
           (C5270 * C1065 + C32858 * C1077 + C5271 * C1066 + C32845 * C1078 +
            C5272 * C1067 + C32815 * C1079) *
               C5274 +
           (C5270 * C1080 + C32858 * C1092 + C5271 * C1081 + C32845 * C1093 +
            C5272 * C1082 + C32815 * C1094) *
               C5268 +
           (C5270 * C1068 + C32858 * C1083 + C5271 * C1069 + C32845 * C1084 +
            C5272 * C1070 + C32815 * C1085) *
               C5275 +
           (C5270 * C1086 + C32858 * C1095 + C5271 * C1087 + C32845 * C1096 +
            C5272 * C1088 + C32815 * C1097) *
               C32826) *
              C32554 * C317) *
         C32499 * C32487) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C6132 * C119 + C32450 * C126) * C6133 +
           (C6132 * C131 + C32450 * C140) * C6127 +
           (C6132 * C217 + C32450 * C232) * C6134 +
           (C6132 * C227 + C32450 * C247) * C6128 +
           (C6132 * C218 + C32450 * C233) * C6135 +
           (C6132 * C238 + C32450 * C248) * C6129 +
           (C6132 * C872 + C32450 * C881) * C6136 +
           (C6132 * C878 + C32450 * C890) * C6130 +
           (C6132 * C873 + C32450 * C882) * C6137 +
           (C6132 * C885 + C32450 * C891) * C6131) *
              C32554 * C32513 * C32499 * C110 -
          ((C6132 * C886 + C32450 * C892) * C6131 +
           (C6132 * C874 + C32450 * C883) * C6137 +
           (C6132 * C877 + C32450 * C889) * C6130 +
           (C6132 * C871 + C32450 * C880) * C6136 +
           (C6132 * C239 + C32450 * C249) * C6129 +
           (C6132 * C219 + C32450 * C234) * C6135 +
           (C6132 * C226 + C32450 * C246) * C6128 +
           (C6132 * C216 + C32450 * C231) * C6134 +
           (C6132 * C132 + C32450 * C141) * C6127 +
           (C6132 * C120 + C32450 * C127) * C6133) *
              C32554 * C32513 * C32499 * C111 +
          ((C6132 * C121 + C32450 * C128) * C6133 +
           (C6132 * C133 + C32450 * C142) * C6127 +
           (C6132 * C215 + C32450 * C230) * C6134 +
           (C6132 * C225 + C32450 * C245) * C6128 +
           (C6132 * C220 + C32450 * C235) * C6135 +
           (C6132 * C240 + C32450 * C250) * C6129 +
           (C6132 * C870 + C32450 * C879) * C6136 +
           (C6132 * C876 + C32450 * C888) * C6130 +
           (C6132 * C875 + C32450 * C884) * C6137 +
           (C6132 * C887 + C32450 * C893) * C6131) *
              C32554 * C32513 * C32499 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C6132 * C119 + C32450 * C126) * C6133 +
           (C6132 * C131 + C32450 * C140) * C6127 + C6229 * C6134 +
           C6230 * C6128 + C6231 * C6135 + C6232 * C6129 + C6233 * C6136 +
           C6234 * C6130 + C6235 * C6137 + C6236 * C6131) *
              C32554 * C32513 * C209 -
          (C6237 * C6131 + C6238 * C6137 + C6236 * C6130 + C6235 * C6136 +
           C6234 * C6129 + C6233 * C6135 + C6232 * C6128 + C6231 * C6134 +
           C6230 * C6127 + C6229 * C6133) *
              C32554 * C32513 * C210 +
          (C6231 * C6133 + C6232 * C6127 + C6233 * C6134 + C6234 * C6128 +
           C6235 * C6135 + C6236 * C6129 + C6238 * C6136 + C6237 * C6130 +
           (C6132 * C6201 + C32450 * C6204) * C6137 +
           (C6132 * C6205 + C32450 * C6207) * C6131) *
              C32554 * C32513 * C211) *
         C32487) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C6132 * C119 + C32450 * C126) * C6133 +
           (C6132 * C131 + C32450 * C140) * C6127 + C6229 * C6134 +
           C6230 * C6128 + C6231 * C6135 + C6232 * C6129 + C6233 * C6136 +
           C6234 * C6130 + C6235 * C6137 + C6236 * C6131) *
              C32554 * C315 -
          ((C6132 * C6303 + C32450 * C6309) * C6131 +
           (C6132 * C6300 + C32450 * C6304) * C6137 +
           (C6132 * C1586 + C32450 * C1589) * C6130 +
           (C6132 * C1580 + C32450 * C1583) * C6136 +
           (C6132 * C1073 + C32450 * C1091) * C6129 +
           (C6132 * C1064 + C32450 * C1076) * C6135 +
           (C6132 * C628 + C32450 * C633) * C6128 +
           (C6132 * C618 + C32450 * C623) * C6134 +
           (C6132 * C332 + C32450 * C352) * C6127 +
           (C6132 * C322 + C32450 * C337) * C6133) *
              C32554 * C316 +
          ((C6132 * C323 + C32450 * C338) * C6133 +
           (C6132 * C343 + C32450 * C353) * C6127 +
           (C6132 * C1065 + C32450 * C1077) * C6134 +
           (C6132 * C1080 + C32450 * C1092) * C6128 +
           (C6132 * C1068 + C32450 * C1083) * C6135 +
           (C6132 * C1086 + C32450 * C1095) * C6129 +
           (C6132 * C6301 + C32450 * C6305) * C6136 +
           (C6132 * C6306 + C32450 * C6310) * C6130 +
           (C6132 * C6302 + C32450 * C6307) * C6137 +
           (C6132 * C6308 + C32450 * C6311) * C6131) *
              C32554 * C317) *
         C32499 * C32487) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C6132 * C119 + C32450 * C126) * C5273 +
            (C6132 * C131 + C32450 * C140) * C5267 + C6229 * C5274 +
            C6230 * C5268 + C6231 * C5275 + C6232 * C32826) *
               C32862 +
           ((C6132 * C322 + C32450 * C337) * C5273 +
            (C6132 * C332 + C32450 * C352) * C5267 + C6618 * C5274 +
            C6617 * C5268 + C6616 * C5275 + C6615 * C32826) *
               C32851 +
           ((C6132 * C323 + C32450 * C338) * C5273 +
            (C6132 * C343 + C32450 * C353) * C5267 +
            (C6132 * C1065 + C32450 * C1077) * C5274 +
            (C6132 * C1080 + C32450 * C1092) * C5268 +
            (C6132 * C1068 + C32450 * C1083) * C5275 +
            (C6132 * C1086 + C32450 * C1095) * C32826) *
               C32829) *
              C32513 * C32499 * C110 -
          (((C6132 * C1087 + C32450 * C1096) * C32826 +
            (C6132 * C1069 + C32450 * C1084) * C5275 +
            (C6132 * C1081 + C32450 * C1093) * C5268 +
            (C6132 * C1066 + C32450 * C1078) * C5274 +
            (C6132 * C344 + C32450 * C354) * C5267 +
            (C6132 * C324 + C32450 * C339) * C5273) *
               C32829 +
           ((C6132 * C1072 + C32450 * C1090) * C32826 +
            (C6132 * C1063 + C32450 * C1075) * C5275 +
            (C6132 * C629 + C32450 * C634) * C5268 +
            (C6132 * C619 + C32450 * C624) * C5274 +
            (C6132 * C331 + C32450 * C351) * C5267 +
            (C6132 * C321 + C32450 * C336) * C5273) *
               C32851 +
           (C6418 * C32826 + C6417 * C5275 + C6416 * C5268 + C6415 * C5274 +
            (C6132 * C132 + C32450 * C141) * C5267 +
            (C6132 * C120 + C32450 * C127) * C5273) *
               C32862) *
              C32513 * C32499 * C111 +
          (((C6132 * C121 + C32450 * C128) * C5273 +
            (C6132 * C133 + C32450 * C142) * C5267 +
            (C6132 * C215 + C32450 * C230) * C5274 +
            (C6132 * C225 + C32450 * C245) * C5268 +
            (C6132 * C220 + C32450 * C235) * C5275 +
            (C6132 * C240 + C32450 * C250) * C32826) *
               C32862 +
           ((C6132 * C320 + C32450 * C335) * C5273 +
            (C6132 * C330 + C32450 * C350) * C5267 +
            (C6132 * C620 + C32450 * C625) * C5274 +
            (C6132 * C630 + C32450 * C635) * C5268 +
            (C6132 * C1062 + C32450 * C1074) * C5275 +
            (C6132 * C1071 + C32450 * C1089) * C32826) *
               C32851 +
           ((C6132 * C325 + C32450 * C340) * C5273 +
            (C6132 * C345 + C32450 * C355) * C5267 +
            (C6132 * C1067 + C32450 * C1079) * C5274 +
            (C6132 * C1082 + C32450 * C1094) * C5268 +
            (C6132 * C1070 + C32450 * C1085) * C5275 +
            (C6132 * C1088 + C32450 * C1097) * C32826) *
               C32829) *
              C32513 * C32499 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C6132 * C119 + C32450 * C126) * C5273 +
            (C6132 * C131 + C32450 * C140) * C5267 + C6229 * C5274 +
            C6230 * C5268 + C6231 * C5275 + C6232 * C32826) *
               C32862 +
           ((C6132 * C322 + C32450 * C337) * C5273 +
            (C6132 * C332 + C32450 * C352) * C5267 + C6618 * C5274 +
            C6617 * C5268 + C6616 * C5275 + C6615 * C32826) *
               C32851 +
           ((C6132 * C323 + C32450 * C338) * C5273 +
            (C6132 * C343 + C32450 * C353) * C5267 + C6851 * C5274 +
            C6852 * C5268 + C6853 * C5275 + C6854 * C32826) *
               C32829) *
              C32513 * C209 -
          ((C6855 * C32826 + C6856 * C5275 + C6854 * C5268 + C6853 * C5274 +
            C6852 * C5267 + C6851 * C5273) *
               C32829 +
           (C6613 * C32826 + C6614 * C5275 + C6615 * C5268 + C6616 * C5274 +
            C6617 * C5267 + C6618 * C5273) *
               C32851 +
           (C6234 * C32826 + C6233 * C5275 + C6232 * C5268 + C6231 * C5274 +
            C6230 * C5267 + C6229 * C5273) *
               C32862) *
              C32513 * C210 +
          ((C6231 * C5273 + C6232 * C5267 + C6233 * C5274 + C6234 * C5268 +
            C6235 * C5275 + C6236 * C32826) *
               C32862 +
           (C6616 * C5273 + C6615 * C5267 + C6614 * C5274 + C6613 * C5268 +
            C6612 * C5275 + C6611 * C32826) *
               C32851 +
           (C6853 * C5273 + C6854 * C5267 + C6856 * C5274 + C6855 * C5268 +
            (C6132 * C6302 + C32450 * C6307) * C5275 +
            (C6132 * C6308 + C32450 * C6311) * C32826) *
               C32829) *
              C32513 * C211) *
         C32487) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C6132 * C119 + C32450 * C126) * C5273 +
            (C6132 * C131 + C32450 * C140) * C5267 + C6229 * C5274 +
            C6230 * C5268 + C6231 * C5275 + C6232 * C32826) *
               C32862 +
           (C7017 + C7018 + C6983 + C6984 + C6985 + C6986) * C32851 +
           C7031 * C32829) *
              C315 -
          ((C7021 + C7022 + C7023 + C7024 + C7025 + C7026) * C32829 +
           (C6994 + C6993 + C6992 + C6991 + C7020 + C7019) * C32851 +
           (C6986 + C6985 + C6984 + C6983 + C7018 + C7017) * C32862) *
              C316 +
          (C7031 * C32862 +
           (C7026 + C7025 + C7024 + C7023 + C7022 + C7021) * C32851 +
           ((C6132 * C1964 + C32450 * C1973) * C5273 +
            (C6132 * C1976 + C32450 * C1982) * C5267 +
            (C6132 * C6967 + C32450 * C6971) * C5274 +
            (C6132 * C6972 + C32450 * C6976) * C5268 +
            (C6132 * C6968 + C32450 * C6973) * C5275 +
            (C6132 * C6974 + C32450 * C6977) * C32826) *
               C32829) *
              C317) *
         C32499 * C32487) /
            (p * q * std::sqrt(p + q));
    d2ee[113] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C754 * C119 + C748 * C126 + C755 * C120 + C749 * C127 +
             C756 * C121 + C32815 * C128) *
                C757 +
            (C754 * C131 + C748 * C140 + C755 * C132 + C749 * C141 +
             C756 * C133 + C32815 * C142) *
                C32861 +
            (C931 + C932 + C933) * C758 + (C934 + C935 + C936) * C32849 +
            C951 * C759 + C952 * C32826) *
               C32554 * C530 -
           ((C756 * C1071 + C32815 * C1089 + C755 * C1072 + C749 * C1090 +
             C754 * C1073 + C748 * C1091) *
                C32826 +
            (C756 * C1062 + C32815 * C1074 + C755 * C1063 + C749 * C1075 +
             C754 * C1064 + C748 * C1076) *
                C759 +
            (C756 * C630 + C32815 * C635 + C755 * C629 + C749 * C634 +
             C754 * C628 + C748 * C633) *
                C32849 +
            (C756 * C620 + C32815 * C625 + C755 * C619 + C749 * C624 +
             C754 * C618 + C748 * C623) *
                C758 +
            (C756 * C330 + C32815 * C350 + C755 * C331 + C749 * C351 +
             C754 * C332 + C748 * C352) *
                C32861 +
            (C756 * C320 + C32815 * C335 + C755 * C321 + C749 * C336 +
             C754 * C322 + C748 * C337) *
                C757) *
               C32554 * C531) *
              C32499 * C442 +
          (((C754 * C321 + C748 * C336 + C755 * C320 + C749 * C335 +
             C756 * C319 + C32815 * C334) *
                C757 +
            (C754 * C331 + C748 * C351 + C755 * C330 + C749 * C350 +
             C756 * C329 + C32815 * C349) *
                C32861 +
            (C754 * C619 + C748 * C624 + C755 * C620 + C749 * C625 +
             C756 * C621 + C32815 * C626) *
                C758 +
            (C754 * C629 + C748 * C634 + C755 * C630 + C749 * C635 +
             C756 * C631 + C32815 * C636) *
                C32849 +
            (C754 * C1063 + C748 * C1075 + C755 * C1062 + C749 * C1074 +
             C756 * C1430 + C32815 * C1431) *
                C759 +
            (C754 * C1072 + C748 * C1090 + C755 * C1071 + C749 * C1089 +
             C756 * C1432 + C32815 * C1433) *
                C32826) *
               C32554 * C531 -
           ((C1284 + C1283 + C1282) * C32826 + (C1281 + C1280 + C1279) * C759 +
            (C1278 + C1277 + C1276) * C32849 + (C1275 + C1274 + C1273) * C758 +
            (C756 * C134 + C32815 * C143 + C755 * C133 + C749 * C142 +
             C754 * C132 + C748 * C141) *
                C32861 +
            (C756 * C122 + C32815 * C129 + C755 * C121 + C749 * C128 +
             C754 * C120 + C748 * C127) *
                C757) *
               C32554 * C530) *
              C32499 * C443)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C127 +
             C115 * C121 + C103 * C128 + C116 * C122 + C104 * C129 +
             C117 * C123 + C105 * C130) *
                C118 +
            (C113 * C131 + C101 * C140 + C114 * C132 + C102 * C141 +
             C115 * C133 + C103 * C142 + C116 * C134 + C104 * C143 +
             C117 * C135 + C105 * C144) *
                C32542) *
               C32554 * C530 -
           ((C117 * C328 + C105 * C348 + C116 * C329 + C104 * C349 +
             C115 * C330 + C103 * C350 + C114 * C331 + C102 * C351 +
             C113 * C332 + C101 * C352) *
                C32542 +
            (C117 * C318 + C105 * C333 + C116 * C319 + C104 * C334 +
             C115 * C320 + C103 * C335 + C114 * C321 + C102 * C336 +
             C113 * C322 + C101 * C337) *
                C118) *
               C32554 * C531) *
              C32499 * C442 +
          (((C113 * C321 + C101 * C336 + C114 * C320 + C102 * C335 +
             C115 * C319 + C103 * C334 + C116 * C318 + C104 * C333 +
             C117 * C532 + C105 * C533) *
                C118 +
            (C113 * C331 + C101 * C351 + C114 * C330 + C102 * C350 +
             C115 * C329 + C103 * C349 + C116 * C328 + C104 * C348 +
             C117 * C534 + C105 * C535) *
                C32542) *
               C32554 * C531 -
           ((C117 * C136 + C105 * C145 + C116 * C135 + C104 * C144 +
             C115 * C134 + C103 * C143 + C114 * C133 + C102 * C142 +
             C113 * C132 + C101 * C141) *
                C32542 +
            (C117 * C124 + C105 * C137 + C116 * C123 + C104 * C130 +
             C115 * C122 + C103 * C129 + C114 * C121 + C102 * C128 +
             C113 * C120 + C101 * C127) *
                C118) *
               C32554 * C530) *
              C32499 * C443)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C754 * C119 + C748 * C126 + C755 * C120 + C749 * C127 +
              C756 * C121 + C32815 * C128) *
                 C118 +
             (C754 * C131 + C748 * C140 + C755 * C132 + C749 * C141 +
              C756 * C133 + C32815 * C142) *
                 C32542) *
                C32862 +
            ((C2022 + C2023 + C2024) * C118 +
             (C2025 + C2026 + C2027) * C32542) *
                C32851 +
            C2046 * C32829) *
               C530 -
           (((C2034 + C2035 + C2036) * C32542 +
             (C2037 + C2038 + C2039) * C118) *
                C32829 +
            ((C2033 + C2032 + C2031) * C32542 +
             (C2030 + C2029 + C2028) * C118) *
                C32851 +
            ((C2027 + C2026 + C2025) * C32542 +
             (C2024 + C2023 + C2022) * C118) *
                C32862) *
               C531) *
              C32499 * C442 +
          ((((C2371 + C2372 + C2373) * C118 +
             (C2374 + C2375 + C2376) * C32542) *
                C32862 +
            ((C2377 + C2378 + C2379) * C118 +
             (C2380 + C2381 + C2382) * C32542) *
                C32851 +
            ((C754 * C1962 + C748 * C1971 + C755 * C1961 + C749 * C1970 +
              C756 * C2342 + C32815 * C2343) *
                 C118 +
             (C754 * C1968 + C748 * C1980 + C755 * C1967 + C749 * C1979 +
              C756 * C2344 + C32815 * C2345) *
                 C32542) *
                C32829) *
               C531 -
           (((C2382 + C2381 + C2380) * C32542 +
             (C2379 + C2378 + C2377) * C118) *
                C32829 +
            ((C2376 + C2375 + C2374) * C32542 +
             (C2373 + C2372 + C2371) * C118) *
                C32851 +
            ((C756 * C134 + C32815 * C143 + C755 * C133 + C749 * C142 +
              C754 * C132 + C748 * C141) *
                 C32542 +
             (C756 * C122 + C32815 * C129 + C755 * C121 + C749 * C128 +
              C754 * C120 + C748 * C127) *
                 C118) *
                C32862) *
               C530) *
              C32499 * C443)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C5270 * C119 + C32858 * C126 + C5271 * C120 + C32845 * C127 +
             C5272 * C121 + C32815 * C128) *
                C5273 +
            (C5270 * C131 + C32858 * C140 + C5271 * C132 + C32845 * C141 +
             C5272 * C133 + C32815 * C142) *
                C5267 +
            (C5423 + C5424 + C5425) * C5274 + (C5426 + C5427 + C5428) * C5268 +
            C5443 * C5275 + C5444 * C32826) *
               C32554 * C530 -
           ((C5272 * C1071 + C32815 * C1089 + C5271 * C1072 + C32845 * C1090 +
             C5270 * C1073 + C32858 * C1091) *
                C32826 +
            (C5272 * C1062 + C32815 * C1074 + C5271 * C1063 + C32845 * C1075 +
             C5270 * C1064 + C32858 * C1076) *
                C5275 +
            (C5272 * C630 + C32815 * C635 + C5271 * C629 + C32845 * C634 +
             C5270 * C628 + C32858 * C633) *
                C5268 +
            (C5272 * C620 + C32815 * C625 + C5271 * C619 + C32845 * C624 +
             C5270 * C618 + C32858 * C623) *
                C5274 +
            (C5272 * C330 + C32815 * C350 + C5271 * C331 + C32845 * C351 +
             C5270 * C332 + C32858 * C352) *
                C5267 +
            (C5272 * C320 + C32815 * C335 + C5271 * C321 + C32845 * C336 +
             C5270 * C322 + C32858 * C337) *
                C5273) *
               C32554 * C531) *
              C32499 * C442 +
          (((C5270 * C321 + C32858 * C336 + C5271 * C320 + C32845 * C335 +
             C5272 * C319 + C32815 * C334) *
                C5273 +
            (C5270 * C331 + C32858 * C351 + C5271 * C330 + C32845 * C350 +
             C5272 * C329 + C32815 * C349) *
                C5267 +
            (C5270 * C619 + C32858 * C624 + C5271 * C620 + C32845 * C625 +
             C5272 * C621 + C32815 * C626) *
                C5274 +
            (C5270 * C629 + C32858 * C634 + C5271 * C630 + C32845 * C635 +
             C5272 * C631 + C32815 * C636) *
                C5268 +
            (C5270 * C1063 + C32858 * C1075 + C5271 * C1062 + C32845 * C1074 +
             C5272 * C1430 + C32815 * C1431) *
                C5275 +
            (C5270 * C1072 + C32858 * C1090 + C5271 * C1071 + C32845 * C1089 +
             C5272 * C1432 + C32815 * C1433) *
                C32826) *
               C32554 * C531 -
           ((C5736 + C5735 + C5734) * C32826 + (C5733 + C5732 + C5731) * C5275 +
            (C5730 + C5729 + C5728) * C5268 + (C5727 + C5726 + C5725) * C5274 +
            (C5272 * C134 + C32815 * C143 + C5271 * C133 + C32845 * C142 +
             C5270 * C132 + C32858 * C141) *
                C5267 +
            (C5272 * C122 + C32815 * C129 + C5271 * C121 + C32845 * C128 +
             C5270 * C120 + C32858 * C127) *
                C5273) *
               C32554 * C530) *
              C32499 * C443)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C6132 * C119 + C32450 * C126) * C6133 +
            (C6132 * C131 + C32450 * C140) * C6127 + C6229 * C6134 +
            C6230 * C6128 + C6231 * C6135 + C6232 * C6129 + C6233 * C6136 +
            C6234 * C6130 + C6235 * C6137 + C6236 * C6131) *
               C32554 * C530 -
           ((C6132 * C6303 + C32450 * C6309) * C6131 +
            (C6132 * C6300 + C32450 * C6304) * C6137 +
            (C6132 * C1586 + C32450 * C1589) * C6130 +
            (C6132 * C1580 + C32450 * C1583) * C6136 +
            (C6132 * C1073 + C32450 * C1091) * C6129 +
            (C6132 * C1064 + C32450 * C1076) * C6135 +
            (C6132 * C628 + C32450 * C633) * C6128 +
            (C6132 * C618 + C32450 * C623) * C6134 +
            (C6132 * C332 + C32450 * C352) * C6127 +
            (C6132 * C322 + C32450 * C337) * C6133) *
               C32554 * C531) *
              C32499 * C442 +
          (((C6132 * C321 + C32450 * C336) * C6133 +
            (C6132 * C331 + C32450 * C351) * C6127 +
            (C6132 * C619 + C32450 * C624) * C6134 +
            (C6132 * C629 + C32450 * C634) * C6128 +
            (C6132 * C1063 + C32450 * C1075) * C6135 +
            (C6132 * C1072 + C32450 * C1090) * C6129 +
            (C6132 * C1581 + C32450 * C1584) * C6136 +
            (C6132 * C1587 + C32450 * C1590) * C6130 +
            (C6132 * C6504 + C32450 * C6505) * C6137 +
            (C6132 * C6506 + C32450 * C6507) * C6131) *
               C32554 * C531 -
           (C6422 * C6131 + C6421 * C6137 + C6420 * C6130 + C6419 * C6136 +
            C6418 * C6129 + C6417 * C6135 + C6416 * C6128 + C6415 * C6134 +
            (C6132 * C132 + C32450 * C141) * C6127 +
            (C6132 * C120 + C32450 * C127) * C6133) *
               C32554 * C530) *
              C32499 * C443)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C6132 * C119 + C32450 * C126) * C5273 +
             (C6132 * C131 + C32450 * C140) * C5267 + C6229 * C5274 +
             C6230 * C5268 + C6231 * C5275 + C6232 * C32826) *
                C32862 +
            (C7017 + C7018 + C6983 + C6984 + C6985 + C6986) * C32851 +
            C7031 * C32829) *
               C530 -
           ((C7021 + C7022 + C7023 + C7024 + C7025 + C7026) * C32829 +
            (C6994 + C6993 + C6992 + C6991 + C7020 + C7019) * C32851 +
            (C6986 + C6985 + C6984 + C6983 + C7018 + C7017) * C32862) *
               C531) *
              C32499 * C442 +
          (((C7376 + C7377 + C7360 + C7361 + C7362 + C7363) * C32862 +
            (C7378 + C7379 + C7368 + C7369 + C7370 + C7371) * C32851 +
            ((C6132 * C1962 + C32450 * C1971) * C5273 +
             (C6132 * C1968 + C32450 * C1980) * C5267 +
             (C6132 * C2529 + C32450 * C2532) * C5274 +
             (C6132 * C2535 + C32450 * C2538) * C5268 +
             (C6132 * C7351 + C32450 * C7352) * C5275 +
             (C6132 * C7353 + C32450 * C7354) * C32826) *
                C32829) *
               C531 -
           ((C7371 + C7370 + C7369 + C7368 + C7379 + C7378) * C32829 +
            (C7363 + C7362 + C7361 + C7360 + C7377 + C7376) * C32851 +
            (C6418 * C32826 + C6417 * C5275 + C6416 * C5268 + C6415 * C5274 +
             (C6132 * C132 + C32450 * C141) * C5267 +
             (C6132 * C120 + C32450 * C127) * C5273) *
                C32862) *
               C530) *
              C32499 * C443)) /
            (p * q * std::sqrt(p + q));
    d2ee[114] +=
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C127 +
            C115 * C121 + C103 * C128 + C116 * C122 + C104 * C129 +
            C117 * C123 + C105 * C130) *
               C118 +
           (C113 * C131 + C101 * C140 + C114 * C132 + C102 * C141 +
            C115 * C133 + C103 * C142 + C116 * C134 + C104 * C143 +
            C117 * C135 + C105 * C144) *
               C32542) *
              C32554 * C32513 * C209 -
          ((C117 * C223 + C105 * C243 + C116 * C224 + C104 * C244 +
            C115 * C225 + C103 * C245 + C114 * C226 + C102 * C246 +
            C113 * C227 + C101 * C247) *
               C32542 +
           (C117 * C213 + C105 * C228 + C116 * C214 + C104 * C229 +
            C115 * C215 + C103 * C230 + C114 * C216 + C102 * C231 +
            C113 * C217 + C101 * C232) *
               C118) *
              C32554 * C32513 * C210 +
          ((C113 * C218 + C101 * C233 + C114 * C219 + C102 * C234 +
            C115 * C220 + C103 * C235 + C116 * C221 + C104 * C236 +
            C117 * C222 + C105 * C237) *
               C118 +
           (C113 * C238 + C101 * C248 + C114 * C239 + C102 * C249 +
            C115 * C240 + C103 * C250 + C116 * C241 + C104 * C251 +
            C117 * C242 + C105 * C252) *
               C32542) *
              C32554 * C32513 * C211) *
         C32487) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C127 +
            C115 * C121 + C103 * C128 + C116 * C122 + C104 * C129 +
            C117 * C123 + C105 * C130) *
               C118 +
           (C113 * C131 + C101 * C140 + C114 * C132 + C102 * C141 +
            C115 * C133 + C103 * C142 + C116 * C134 + C104 * C143 +
            C117 * C135 + C105 * C144) *
               C32542) *
              C32554 * C32513 * C32499 * C110 -
          ((C117 * C136 + C105 * C145 + C116 * C135 + C104 * C144 +
            C115 * C134 + C103 * C143 + C114 * C133 + C102 * C142 +
            C113 * C132 + C101 * C141) *
               C32542 +
           (C117 * C124 + C105 * C137 + C116 * C123 + C104 * C130 +
            C115 * C122 + C103 * C129 + C114 * C121 + C102 * C128 +
            C113 * C120 + C101 * C127) *
               C118) *
              C32554 * C32513 * C32499 * C111 +
          ((C113 * C121 + C101 * C128 + C114 * C122 + C102 * C129 +
            C115 * C123 + C103 * C130 + C116 * C124 + C104 * C137 +
            C117 * C125 + C105 * C138) *
               C118 +
           (C113 * C133 + C101 * C142 + C114 * C134 + C102 * C143 +
            C115 * C135 + C103 * C144 + C116 * C136 + C104 * C145 +
            C117 * C139 + C105 * C146) *
               C32542) *
              C32554 * C32513 * C32499 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C754 * C119 + C748 * C126 + C755 * C120 + C749 * C127 +
            C756 * C121 + C32815 * C128) *
               C757 +
           (C754 * C131 + C748 * C140 + C755 * C132 + C749 * C141 +
            C756 * C133 + C32815 * C142) *
               C32861 +
           (C754 * C217 + C748 * C232 + C755 * C216 + C749 * C231 +
            C756 * C215 + C32815 * C230) *
               C758 +
           (C754 * C227 + C748 * C247 + C755 * C226 + C749 * C246 +
            C756 * C225 + C32815 * C245) *
               C32849 +
           (C754 * C218 + C748 * C233 + C755 * C219 + C749 * C234 +
            C756 * C220 + C32815 * C235) *
               C759 +
           (C754 * C238 + C748 * C248 + C755 * C239 + C749 * C249 +
            C756 * C240 + C32815 * C250) *
               C32826) *
              C32554 * C32513 * C32499 * C110 -
          ((C756 * C241 + C32815 * C251 + C755 * C240 + C749 * C250 +
            C754 * C239 + C748 * C249) *
               C32826 +
           (C756 * C221 + C32815 * C236 + C755 * C220 + C749 * C235 +
            C754 * C219 + C748 * C234) *
               C759 +
           (C756 * C224 + C32815 * C244 + C755 * C225 + C749 * C245 +
            C754 * C226 + C748 * C246) *
               C32849 +
           (C756 * C214 + C32815 * C229 + C755 * C215 + C749 * C230 +
            C754 * C216 + C748 * C231) *
               C758 +
           (C756 * C134 + C32815 * C143 + C755 * C133 + C749 * C142 +
            C754 * C132 + C748 * C141) *
               C32861 +
           (C756 * C122 + C32815 * C129 + C755 * C121 + C749 * C128 +
            C754 * C120 + C748 * C127) *
               C757) *
              C32554 * C32513 * C32499 * C111 +
          ((C754 * C121 + C748 * C128 + C755 * C122 + C749 * C129 +
            C756 * C123 + C32815 * C130) *
               C757 +
           (C754 * C133 + C748 * C142 + C755 * C134 + C749 * C143 +
            C756 * C135 + C32815 * C144) *
               C32861 +
           (C754 * C215 + C748 * C230 + C755 * C214 + C749 * C229 +
            C756 * C213 + C32815 * C228) *
               C758 +
           (C754 * C225 + C748 * C245 + C755 * C224 + C749 * C244 +
            C756 * C223 + C32815 * C243) *
               C32849 +
           (C754 * C220 + C748 * C235 + C755 * C221 + C749 * C236 +
            C756 * C222 + C32815 * C237) *
               C759 +
           (C754 * C240 + C748 * C250 + C755 * C241 + C749 * C251 +
            C756 * C242 + C32815 * C252) *
               C32826) *
              C32554 * C32513 * C32499 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C754 * C119 + C748 * C126 + C755 * C120 + C749 * C127 +
            C756 * C121 + C32815 * C128) *
               C757 +
           (C754 * C131 + C748 * C140 + C755 * C132 + C749 * C141 +
            C756 * C133 + C32815 * C142) *
               C32861 +
           (C931 + C932 + C933) * C758 + (C934 + C935 + C936) * C32849 +
           C951 * C759 + C952 * C32826) *
              C32554 * C32513 * C209 -
          ((C943 + C944 + C945) * C32826 + (C946 + C947 + C948) * C759 +
           (C942 + C941 + C940) * C32849 + (C939 + C938 + C937) * C758 +
           (C936 + C935 + C934) * C32861 + (C933 + C932 + C931) * C757) *
              C32554 * C32513 * C210 +
          (C951 * C757 + C952 * C32861 + (C948 + C947 + C946) * C758 +
           (C945 + C944 + C943) * C32849 +
           (C754 * C873 + C748 * C882 + C755 * C874 + C749 * C883 +
            C756 * C875 + C32815 * C884) *
               C759 +
           (C754 * C885 + C748 * C891 + C755 * C886 + C749 * C892 +
            C756 * C887 + C32815 * C893) *
               C32826) *
              C32554 * C32513 * C211) *
         C32487) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C754 * C119 + C748 * C126 + C755 * C120 + C749 * C127 +
             C756 * C121 + C32815 * C128) *
                C118 +
            (C754 * C131 + C748 * C140 + C755 * C132 + C749 * C141 +
             C756 * C133 + C32815 * C142) *
                C32542) *
               C32862 +
           ((C754 * C322 + C748 * C337 + C755 * C321 + C749 * C336 +
             C756 * C320 + C32815 * C335) *
                C118 +
            (C754 * C332 + C748 * C352 + C755 * C331 + C749 * C351 +
             C756 * C330 + C32815 * C350) *
                C32542) *
               C32851 +
           ((C754 * C323 + C748 * C338 + C755 * C324 + C749 * C339 +
             C756 * C325 + C32815 * C340) *
                C118 +
            (C754 * C343 + C748 * C353 + C755 * C344 + C749 * C354 +
             C756 * C345 + C32815 * C355) *
                C32542) *
               C32829) *
              C32513 * C32499 * C110 -
          (((C756 * C346 + C32815 * C356 + C755 * C345 + C749 * C355 +
             C754 * C344 + C748 * C354) *
                C32542 +
            (C756 * C326 + C32815 * C341 + C755 * C325 + C749 * C340 +
             C754 * C324 + C748 * C339) *
                C118) *
               C32829 +
           ((C756 * C329 + C32815 * C349 + C755 * C330 + C749 * C350 +
             C754 * C331 + C748 * C351) *
                C32542 +
            (C756 * C319 + C32815 * C334 + C755 * C320 + C749 * C335 +
             C754 * C321 + C748 * C336) *
                C118) *
               C32851 +
           ((C756 * C134 + C32815 * C143 + C755 * C133 + C749 * C142 +
             C754 * C132 + C748 * C141) *
                C32542 +
            (C756 * C122 + C32815 * C129 + C755 * C121 + C749 * C128 +
             C754 * C120 + C748 * C127) *
                C118) *
               C32862) *
              C32513 * C32499 * C111 +
          (((C754 * C121 + C748 * C128 + C755 * C122 + C749 * C129 +
             C756 * C123 + C32815 * C130) *
                C118 +
            (C754 * C133 + C748 * C142 + C755 * C134 + C749 * C143 +
             C756 * C135 + C32815 * C144) *
                C32542) *
               C32862 +
           ((C754 * C320 + C748 * C335 + C755 * C319 + C749 * C334 +
             C756 * C318 + C32815 * C333) *
                C118 +
            (C754 * C330 + C748 * C350 + C755 * C329 + C749 * C349 +
             C756 * C328 + C32815 * C348) *
                C32542) *
               C32851 +
           ((C754 * C325 + C748 * C340 + C755 * C326 + C749 * C341 +
             C756 * C327 + C32815 * C342) *
                C118 +
            (C754 * C345 + C748 * C355 + C755 * C346 + C749 * C356 +
             C756 * C347 + C32815 * C357) *
                C32542) *
               C32829) *
              C32513 * C32499 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C754 * C119 + C748 * C126 + C755 * C120 + C749 * C127 +
             C756 * C121 + C32815 * C128) *
                C118 +
            (C754 * C131 + C748 * C140 + C755 * C132 + C749 * C141 +
             C756 * C133 + C32815 * C142) *
                C32542) *
               C32862 +
           ((C754 * C322 + C748 * C337 + C755 * C321 + C749 * C336 +
             C756 * C320 + C32815 * C335) *
                C118 +
            (C754 * C332 + C748 * C352 + C755 * C331 + C749 * C351 +
             C756 * C330 + C32815 * C350) *
                C32542) *
               C32851 +
           ((C754 * C323 + C748 * C338 + C755 * C324 + C749 * C339 +
             C756 * C325 + C32815 * C340) *
                C118 +
            (C754 * C343 + C748 * C353 + C755 * C344 + C749 * C354 +
             C756 * C345 + C32815 * C355) *
                C32542) *
               C32829) *
              C32513 * C209 -
          (((C756 * C1082 + C32815 * C1094 + C755 * C1081 + C749 * C1093 +
             C754 * C1080 + C748 * C1092) *
                C32542 +
            (C756 * C1067 + C32815 * C1079 + C755 * C1066 + C749 * C1078 +
             C754 * C1065 + C748 * C1077) *
                C118) *
               C32829 +
           ((C1623 + C1624 + C1625) * C32542 + (C1626 + C1627 + C1628) * C118) *
               C32851 +
           ((C936 + C935 + C934) * C32542 + (C933 + C932 + C931) * C118) *
               C32862) *
              C32513 * C210 +
          ((C951 * C118 + C952 * C32542) * C32862 +
           ((C1622 + C1621 + C1620) * C118 + (C1619 + C1618 + C1617) * C32542) *
               C32851 +
           ((C754 * C1068 + C748 * C1083 + C755 * C1069 + C749 * C1084 +
             C756 * C1070 + C32815 * C1085) *
                C118 +
            (C754 * C1086 + C748 * C1095 + C755 * C1087 + C749 * C1096 +
             C756 * C1088 + C32815 * C1097) *
                C32542) *
               C32829) *
              C32513 * C211) *
         C32487) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C5270 * C119 + C32858 * C126 + C5271 * C120 + C32845 * C127 +
            C5272 * C121 + C32815 * C128) *
               C5273 +
           (C5270 * C131 + C32858 * C140 + C5271 * C132 + C32845 * C141 +
            C5272 * C133 + C32815 * C142) *
               C5267 +
           (C5270 * C217 + C32858 * C232 + C5271 * C216 + C32845 * C231 +
            C5272 * C215 + C32815 * C230) *
               C5274 +
           (C5270 * C227 + C32858 * C247 + C5271 * C226 + C32845 * C246 +
            C5272 * C225 + C32815 * C245) *
               C5268 +
           (C5270 * C218 + C32858 * C233 + C5271 * C219 + C32845 * C234 +
            C5272 * C220 + C32815 * C235) *
               C5275 +
           (C5270 * C238 + C32858 * C248 + C5271 * C239 + C32845 * C249 +
            C5272 * C240 + C32815 * C250) *
               C32826) *
              C32554 * C32513 * C32499 * C110 -
          ((C5272 * C241 + C32815 * C251 + C5271 * C240 + C32845 * C250 +
            C5270 * C239 + C32858 * C249) *
               C32826 +
           (C5272 * C221 + C32815 * C236 + C5271 * C220 + C32845 * C235 +
            C5270 * C219 + C32858 * C234) *
               C5275 +
           (C5272 * C224 + C32815 * C244 + C5271 * C225 + C32845 * C245 +
            C5270 * C226 + C32858 * C246) *
               C5268 +
           (C5272 * C214 + C32815 * C229 + C5271 * C215 + C32845 * C230 +
            C5270 * C216 + C32858 * C231) *
               C5274 +
           (C5272 * C134 + C32815 * C143 + C5271 * C133 + C32845 * C142 +
            C5270 * C132 + C32858 * C141) *
               C5267 +
           (C5272 * C122 + C32815 * C129 + C5271 * C121 + C32845 * C128 +
            C5270 * C120 + C32858 * C127) *
               C5273) *
              C32554 * C32513 * C32499 * C111 +
          ((C5270 * C121 + C32858 * C128 + C5271 * C122 + C32845 * C129 +
            C5272 * C123 + C32815 * C130) *
               C5273 +
           (C5270 * C133 + C32858 * C142 + C5271 * C134 + C32845 * C143 +
            C5272 * C135 + C32815 * C144) *
               C5267 +
           (C5270 * C215 + C32858 * C230 + C5271 * C214 + C32845 * C229 +
            C5272 * C213 + C32815 * C228) *
               C5274 +
           (C5270 * C225 + C32858 * C245 + C5271 * C224 + C32845 * C244 +
            C5272 * C223 + C32815 * C243) *
               C5268 +
           (C5270 * C220 + C32858 * C235 + C5271 * C221 + C32845 * C236 +
            C5272 * C222 + C32815 * C237) *
               C5275 +
           (C5270 * C240 + C32858 * C250 + C5271 * C241 + C32845 * C251 +
            C5272 * C242 + C32815 * C252) *
               C32826) *
              C32554 * C32513 * C32499 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C5270 * C119 + C32858 * C126 + C5271 * C120 + C32845 * C127 +
            C5272 * C121 + C32815 * C128) *
               C5273 +
           (C5270 * C131 + C32858 * C140 + C5271 * C132 + C32845 * C141 +
            C5272 * C133 + C32815 * C142) *
               C5267 +
           (C5423 + C5424 + C5425) * C5274 + (C5426 + C5427 + C5428) * C5268 +
           C5443 * C5275 + C5444 * C32826) *
              C32554 * C32513 * C209 -
          ((C5435 + C5436 + C5437) * C32826 + (C5438 + C5439 + C5440) * C5275 +
           (C5434 + C5433 + C5432) * C5268 + (C5431 + C5430 + C5429) * C5274 +
           (C5428 + C5427 + C5426) * C5267 + (C5425 + C5424 + C5423) * C5273) *
              C32554 * C32513 * C210 +
          (C5443 * C5273 + C5444 * C5267 + (C5440 + C5439 + C5438) * C5274 +
           (C5437 + C5436 + C5435) * C5268 +
           (C5270 * C873 + C32858 * C882 + C5271 * C874 + C32845 * C883 +
            C5272 * C875 + C32815 * C884) *
               C5275 +
           (C5270 * C885 + C32858 * C891 + C5271 * C886 + C32845 * C892 +
            C5272 * C887 + C32815 * C893) *
               C32826) *
              C32554 * C32513 * C211) *
         C32487) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C6132 * C119 + C32450 * C126) * C6133 +
           (C6132 * C131 + C32450 * C140) * C6127 +
           (C6132 * C217 + C32450 * C232) * C6134 +
           (C6132 * C227 + C32450 * C247) * C6128 +
           (C6132 * C218 + C32450 * C233) * C6135 +
           (C6132 * C238 + C32450 * C248) * C6129 +
           (C6132 * C872 + C32450 * C881) * C6136 +
           (C6132 * C878 + C32450 * C890) * C6130 +
           (C6132 * C873 + C32450 * C882) * C6137 +
           (C6132 * C885 + C32450 * C891) * C6131) *
              C32554 * C32513 * C32499 * C110 -
          ((C6132 * C886 + C32450 * C892) * C6131 +
           (C6132 * C874 + C32450 * C883) * C6137 +
           (C6132 * C877 + C32450 * C889) * C6130 +
           (C6132 * C871 + C32450 * C880) * C6136 +
           (C6132 * C239 + C32450 * C249) * C6129 +
           (C6132 * C219 + C32450 * C234) * C6135 +
           (C6132 * C226 + C32450 * C246) * C6128 +
           (C6132 * C216 + C32450 * C231) * C6134 +
           (C6132 * C132 + C32450 * C141) * C6127 +
           (C6132 * C120 + C32450 * C127) * C6133) *
              C32554 * C32513 * C32499 * C111 +
          ((C6132 * C121 + C32450 * C128) * C6133 +
           (C6132 * C133 + C32450 * C142) * C6127 +
           (C6132 * C215 + C32450 * C230) * C6134 +
           (C6132 * C225 + C32450 * C245) * C6128 +
           (C6132 * C220 + C32450 * C235) * C6135 +
           (C6132 * C240 + C32450 * C250) * C6129 +
           (C6132 * C870 + C32450 * C879) * C6136 +
           (C6132 * C876 + C32450 * C888) * C6130 +
           (C6132 * C875 + C32450 * C884) * C6137 +
           (C6132 * C887 + C32450 * C893) * C6131) *
              C32554 * C32513 * C32499 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C6132 * C119 + C32450 * C126) * C6133 +
           (C6132 * C131 + C32450 * C140) * C6127 + C6229 * C6134 +
           C6230 * C6128 + C6231 * C6135 + C6232 * C6129 + C6233 * C6136 +
           C6234 * C6130 + C6235 * C6137 + C6236 * C6131) *
              C32554 * C32513 * C209 -
          (C6237 * C6131 + C6238 * C6137 + C6236 * C6130 + C6235 * C6136 +
           C6234 * C6129 + C6233 * C6135 + C6232 * C6128 + C6231 * C6134 +
           C6230 * C6127 + C6229 * C6133) *
              C32554 * C32513 * C210 +
          (C6231 * C6133 + C6232 * C6127 + C6233 * C6134 + C6234 * C6128 +
           C6235 * C6135 + C6236 * C6129 + C6238 * C6136 + C6237 * C6130 +
           (C6132 * C6201 + C32450 * C6204) * C6137 +
           (C6132 * C6205 + C32450 * C6207) * C6131) *
              C32554 * C32513 * C211) *
         C32487) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C6132 * C119 + C32450 * C126) * C5273 +
            (C6132 * C131 + C32450 * C140) * C5267 + C6229 * C5274 +
            C6230 * C5268 + C6231 * C5275 + C6232 * C32826) *
               C32862 +
           ((C6132 * C322 + C32450 * C337) * C5273 +
            (C6132 * C332 + C32450 * C352) * C5267 + C6618 * C5274 +
            C6617 * C5268 + C6616 * C5275 + C6615 * C32826) *
               C32851 +
           ((C6132 * C323 + C32450 * C338) * C5273 +
            (C6132 * C343 + C32450 * C353) * C5267 +
            (C6132 * C1065 + C32450 * C1077) * C5274 +
            (C6132 * C1080 + C32450 * C1092) * C5268 +
            (C6132 * C1068 + C32450 * C1083) * C5275 +
            (C6132 * C1086 + C32450 * C1095) * C32826) *
               C32829) *
              C32513 * C32499 * C110 -
          (((C6132 * C1087 + C32450 * C1096) * C32826 +
            (C6132 * C1069 + C32450 * C1084) * C5275 +
            (C6132 * C1081 + C32450 * C1093) * C5268 +
            (C6132 * C1066 + C32450 * C1078) * C5274 +
            (C6132 * C344 + C32450 * C354) * C5267 +
            (C6132 * C324 + C32450 * C339) * C5273) *
               C32829 +
           ((C6132 * C1072 + C32450 * C1090) * C32826 +
            (C6132 * C1063 + C32450 * C1075) * C5275 +
            (C6132 * C629 + C32450 * C634) * C5268 +
            (C6132 * C619 + C32450 * C624) * C5274 +
            (C6132 * C331 + C32450 * C351) * C5267 +
            (C6132 * C321 + C32450 * C336) * C5273) *
               C32851 +
           (C6418 * C32826 + C6417 * C5275 + C6416 * C5268 + C6415 * C5274 +
            (C6132 * C132 + C32450 * C141) * C5267 +
            (C6132 * C120 + C32450 * C127) * C5273) *
               C32862) *
              C32513 * C32499 * C111 +
          (((C6132 * C121 + C32450 * C128) * C5273 +
            (C6132 * C133 + C32450 * C142) * C5267 +
            (C6132 * C215 + C32450 * C230) * C5274 +
            (C6132 * C225 + C32450 * C245) * C5268 +
            (C6132 * C220 + C32450 * C235) * C5275 +
            (C6132 * C240 + C32450 * C250) * C32826) *
               C32862 +
           ((C6132 * C320 + C32450 * C335) * C5273 +
            (C6132 * C330 + C32450 * C350) * C5267 +
            (C6132 * C620 + C32450 * C625) * C5274 +
            (C6132 * C630 + C32450 * C635) * C5268 +
            (C6132 * C1062 + C32450 * C1074) * C5275 +
            (C6132 * C1071 + C32450 * C1089) * C32826) *
               C32851 +
           ((C6132 * C325 + C32450 * C340) * C5273 +
            (C6132 * C345 + C32450 * C355) * C5267 +
            (C6132 * C1067 + C32450 * C1079) * C5274 +
            (C6132 * C1082 + C32450 * C1094) * C5268 +
            (C6132 * C1070 + C32450 * C1085) * C5275 +
            (C6132 * C1088 + C32450 * C1097) * C32826) *
               C32829) *
              C32513 * C32499 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C6132 * C119 + C32450 * C126) * C5273 +
            (C6132 * C131 + C32450 * C140) * C5267 + C6229 * C5274 +
            C6230 * C5268 + C6231 * C5275 + C6232 * C32826) *
               C32862 +
           ((C6132 * C322 + C32450 * C337) * C5273 +
            (C6132 * C332 + C32450 * C352) * C5267 + C6618 * C5274 +
            C6617 * C5268 + C6616 * C5275 + C6615 * C32826) *
               C32851 +
           ((C6132 * C323 + C32450 * C338) * C5273 +
            (C6132 * C343 + C32450 * C353) * C5267 + C6851 * C5274 +
            C6852 * C5268 + C6853 * C5275 + C6854 * C32826) *
               C32829) *
              C32513 * C209 -
          ((C6855 * C32826 + C6856 * C5275 + C6854 * C5268 + C6853 * C5274 +
            C6852 * C5267 + C6851 * C5273) *
               C32829 +
           (C6613 * C32826 + C6614 * C5275 + C6615 * C5268 + C6616 * C5274 +
            C6617 * C5267 + C6618 * C5273) *
               C32851 +
           (C6234 * C32826 + C6233 * C5275 + C6232 * C5268 + C6231 * C5274 +
            C6230 * C5267 + C6229 * C5273) *
               C32862) *
              C32513 * C210 +
          ((C6231 * C5273 + C6232 * C5267 + C6233 * C5274 + C6234 * C5268 +
            C6235 * C5275 + C6236 * C32826) *
               C32862 +
           (C6616 * C5273 + C6615 * C5267 + C6614 * C5274 + C6613 * C5268 +
            C6612 * C5275 + C6611 * C32826) *
               C32851 +
           (C6853 * C5273 + C6854 * C5267 + C6856 * C5274 + C6855 * C5268 +
            (C6132 * C6302 + C32450 * C6307) * C5275 +
            (C6132 * C6308 + C32450 * C6311) * C32826) *
               C32829) *
              C32513 * C211) *
         C32487) /
            (p * q * std::sqrt(p + q));
    d2ee[115] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2662 * C119 + C2656 * C126 + C2663 * C120 + C2657 * C127 +
              C2664 * C121 + C2658 * C128 + C2665 * C122 + C32830 * C129) *
                 C118 +
             (C2662 * C131 + C2656 * C140 + C2663 * C132 + C2657 * C141 +
              C2664 * C133 + C2658 * C142 + C2665 * C134 + C32830 * C143) *
                 C32542) *
                C32796 +
            ((C3679 + C3680 + C3681 + C3682) * C118 +
             (C3683 + C3684 + C3685 + C3686) * C32542) *
                C32641) *
               C32513 * C440 -
           (((C3343 + C3344 + C3345 + C3346) * C32542 +
             (C3347 + C3348 + C3349 + C3350) * C118) *
                C32641 +
            ((C2806 + C2805 + C2804 + C2803) * C32542 +
             (C2802 + C2801 + C2800 + C2799) * C118) *
                C32796) *
               C32513 * C441) *
              C442 +
          ((((C3059 + C3060 + C3061 + C3062) * C118 +
             (C3063 + C3064 + C3065 + C3066) * C32542) *
                C32796 +
            ((C2662 * C619 + C2656 * C624 + C2663 * C620 + C2657 * C625 +
              C2664 * C621 + C2658 * C626 + C2665 * C622 + C32830 * C627) *
                 C118 +
             (C2662 * C629 + C2656 * C634 + C2663 * C630 + C2657 * C635 +
              C2664 * C631 + C2658 * C636 + C2665 * C632 + C32830 * C637) *
                 C32542) *
                C32641) *
               C32513 * C441 -
           (((C2665 * C328 + C32830 * C348 + C2664 * C329 + C2658 * C349 +
              C2663 * C330 + C2657 * C350 + C2662 * C331 + C2656 * C351) *
                 C32542 +
             (C2665 * C318 + C32830 * C333 + C2664 * C319 + C2658 * C334 +
              C2663 * C320 + C2657 * C335 + C2662 * C321 + C2656 * C336) *
                 C118) *
                C32641 +
            ((C2665 * C135 + C32830 * C144 + C2664 * C134 + C2658 * C143 +
              C2663 * C133 + C2657 * C142 + C2662 * C132 + C2656 * C141) *
                 C32542 +
             (C2665 * C123 + C32830 * C130 + C2664 * C122 + C2658 * C129 +
              C2663 * C121 + C2657 * C128 + C2662 * C120 + C2656 * C127) *
                 C118) *
                C32796) *
               C32513 * C440) *
              C443)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31557 * C119 + C32776 * C126 + C31538 * C120 + C32460 * C127) *
                 C5273 +
             (C31557 * C131 + C32776 * C140 + C31538 * C132 + C32460 * C141) *
                 C5267 +
             (C7782 + C7783) * C5274 + (C7784 + C7785) * C5268 + C7798 * C5275 +
             C7799 * C32826) *
                C32796 +
            ((C8834 + C8835) * C5273 + (C8836 + C8837) * C5267 +
             (C8361 + C8360) * C5274 + (C8359 + C8358) * C5268 + C8654 * C5275 +
             C8655 * C32826) *
                C32641) *
               C32513 * C440 -
           (((C8350 + C8351) * C32826 + (C8352 + C8353) * C5275 +
             (C8354 + C8355) * C5268 + (C8356 + C8357) * C5274 +
             (C8358 + C8359) * C5267 + (C8360 + C8361) * C5273) *
                C32641 +
            ((C7793 + C7792) * C32826 + (C7791 + C7790) * C5275 +
             (C7789 + C7788) * C5268 + (C7787 + C7786) * C5274 +
             (C7785 + C7784) * C5267 + (C7783 + C7782) * C5273) *
                C32796) *
               C32513 * C441) *
              C442 +
          ((((C8054 + C8055) * C5273 + (C8056 + C8057) * C5267 +
             (C8058 + C8059) * C5274 + (C8060 + C8061) * C5268 +
             (C8062 + C8063) * C5275 + (C8064 + C8065) * C32826) *
                C32796 +
            ((C9060 + C9061) * C5273 + (C9062 + C9063) * C5267 +
             (C9064 + C9065) * C5274 + (C9066 + C9067) * C5268 +
             (C31557 * C1581 + C32776 * C1584 + C31538 * C1582 +
              C32460 * C1585) *
                 C5275 +
             (C31557 * C1587 + C32776 * C1590 + C31538 * C1588 +
              C32460 * C1591) *
                 C32826) *
                C32641) *
               C32513 * C441 -
           (((C9067 + C9066) * C32826 + (C9065 + C9064) * C5275 +
             (C9063 + C9062) * C5268 + (C9061 + C9060) * C5274 +
             (C31538 * C330 + C32460 * C350 + C31557 * C331 + C32776 * C351) *
                 C5267 +
             (C31538 * C320 + C32460 * C335 + C31557 * C321 + C32776 * C336) *
                 C5273) *
                C32641 +
            ((C8061 + C8060) * C32826 + (C8059 + C8058) * C5275 +
             (C8057 + C8056) * C5268 + (C8055 + C8054) * C5274 +
             (C31538 * C133 + C32460 * C142 + C31557 * C132 + C32776 * C141) *
                 C5267 +
             (C31538 * C121 + C32460 * C128 + C31557 * C120 + C32776 * C127) *
                 C5273) *
                C32796) *
               C32513 * C440) *
              C443)) /
            (p * q * std::sqrt(p + q));
    d2ee[116] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2662 * C119 + C2656 * C126 + C2663 * C120 + C2657 * C127 +
              C2664 * C121 + C2658 * C128 + C2665 * C122 + C32830 * C129) *
                 C118 +
             (C2662 * C131 + C2656 * C140 + C2663 * C132 + C2657 * C141 +
              C2664 * C133 + C2658 * C142 + C2665 * C134 + C32830 * C143) *
                 C32542) *
                C32796 +
            ((C3679 + C3680 + C3681 + C3682) * C118 +
             (C3683 + C3684 + C3685 + C3686) * C32542) *
                C32641) *
               C530 -
           (((C3687 + C3688 + C3689 + C3690) * C32542 +
             (C3691 + C3692 + C3693 + C3694) * C118) *
                C32641 +
            ((C3686 + C3685 + C3684 + C3683) * C32542 +
             (C3682 + C3681 + C3680 + C3679) * C118) *
                C32796) *
               C531) *
              C440 +
          ((((C3350 + C3349 + C3348 + C3347) * C118 +
             (C3346 + C3345 + C3344 + C3343) * C32542) *
                C32796 +
            ((C2662 * C1065 + C2656 * C1077 + C2663 * C1066 + C2657 * C1078 +
              C2664 * C1067 + C2658 * C1079 + C2665 * C2192 + C32830 * C2193) *
                 C118 +
             (C2662 * C1080 + C2656 * C1092 + C2663 * C1081 + C2657 * C1093 +
              C2664 * C1082 + C2658 * C1094 + C2665 * C2194 + C32830 * C2195) *
                 C32542) *
                C32641) *
               C531 -
           (((C3343 + C3344 + C3345 + C3346) * C32542 +
             (C3347 + C3348 + C3349 + C3350) * C118) *
                C32641 +
            ((C2806 + C2805 + C2804 + C2803) * C32542 +
             (C2802 + C2801 + C2800 + C2799) * C118) *
                C32796) *
               C530) *
              C441) *
         C32487) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31557 * C119 + C32776 * C126 + C31538 * C120 + C32460 * C127) *
                 C5273 +
             (C31557 * C131 + C32776 * C140 + C31538 * C132 + C32460 * C141) *
                 C5267 +
             (C7782 + C7783) * C5274 + (C7784 + C7785) * C5268 + C7798 * C5275 +
             C7799 * C32826) *
                C32796 +
            ((C8834 + C8835) * C5273 + (C8836 + C8837) * C5267 + C9468 * C5274 +
             C9469 * C5268 + C8654 * C5275 + C8655 * C32826) *
                C32641) *
               C530 -
           (((C8838 + C8839) * C32826 + (C8840 + C8841) * C5275 +
             (C8842 + C8843) * C5268 + (C8844 + C8845) * C5274 +
             (C8846 + C8847) * C5267 + (C8848 + C8849) * C5273) *
                C32641 +
            (C9470 * C32826 + C9471 * C5275 + C9472 * C5268 + C9473 * C5274 +
             (C8837 + C8836) * C5267 + (C8835 + C8834) * C5273) *
                C32796) *
               C531) *
              C440 +
          (((C9468 * C5273 + C9469 * C5267 + C8654 * C5274 + C8655 * C5268 +
             (C8353 + C8352) * C5275 + (C8351 + C8350) * C32826) *
                C32796 +
            ((C8845 + C8844) * C5273 + (C8843 + C8842) * C5267 +
             (C8841 + C8840) * C5274 + (C8839 + C8838) * C5268 +
             (C31557 * C6301 + C32776 * C6305 + C31538 * C7177 +
              C32460 * C7178) *
                 C5275 +
             (C31557 * C6306 + C32776 * C6310 + C31538 * C7179 +
              C32460 * C7180) *
                 C32826) *
                C32641) *
               C531 -
           (((C8350 + C8351) * C32826 + (C8352 + C8353) * C5275 +
             C9470 * C5268 + C9471 * C5274 + C9472 * C5267 + C9473 * C5273) *
                C32641 +
            ((C7793 + C7792) * C32826 + (C7791 + C7790) * C5275 +
             (C7789 + C7788) * C5268 + (C7787 + C7786) * C5274 +
             (C7785 + C7784) * C5267 + (C7783 + C7782) * C5273) *
                C32796) *
               C530) *
              C441) *
         C32487) /
            (p * q * std::sqrt(p + q));
    d2ee[117] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C2662 * C119 + C2656 * C126 + C2663 * C120 + C2657 * C127 +
             C2664 * C121 + C2658 * C128 + C2665 * C122 + C32830 * C129) *
                C118 +
            (C2662 * C131 + C2656 * C140 + C2663 * C132 + C2657 * C141 +
             C2664 * C133 + C2658 * C142 + C2665 * C134 + C32830 * C143) *
                C32542) *
               C32796 +
           ((C2662 * C322 + C2656 * C337 + C2663 * C321 + C2657 * C336 +
             C2664 * C320 + C2658 * C335 + C2665 * C319 + C32830 * C334) *
                C118 +
            (C2662 * C332 + C2656 * C352 + C2663 * C331 + C2657 * C351 +
             C2664 * C330 + C2658 * C350 + C2665 * C329 + C32830 * C349) *
                C32542) *
               C32641) *
              C32513 * C209 -
          (((C3343 + C3344 + C3345 + C3346) * C32542 +
            (C3347 + C3348 + C3349 + C3350) * C118) *
               C32641 +
           ((C2806 + C2805 + C2804 + C2803) * C32542 +
            (C2802 + C2801 + C2800 + C2799) * C118) *
               C32796) *
              C32513 * C210 +
          (((C2814 + C2813 + C2812 + C2811) * C118 +
            (C2810 + C2809 + C2808 + C2807) * C32542) *
               C32796 +
           ((C2662 * C1064 + C2656 * C1076 + C2663 * C1063 + C2657 * C1075 +
             C2664 * C1062 + C2658 * C1074 + C2665 * C1430 + C32830 * C1431) *
                C118 +
            (C2662 * C1073 + C2656 * C1091 + C2663 * C1072 + C2657 * C1090 +
             C2664 * C1071 + C2658 * C1089 + C2665 * C1432 + C32830 * C1433) *
                C32542) *
               C32641) *
              C32513 * C211) *
         C32487) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C2662 * C119 + C2656 * C126 + C2663 * C120 + C2657 * C127 +
             C2664 * C121 + C2658 * C128 + C2665 * C122 + C32830 * C129) *
                C118 +
            (C2662 * C131 + C2656 * C140 + C2663 * C132 + C2657 * C141 +
             C2664 * C133 + C2658 * C142 + C2665 * C134 + C32830 * C143) *
                C32542) *
               C32796 +
           ((C2662 * C322 + C2656 * C337 + C2663 * C321 + C2657 * C336 +
             C2664 * C320 + C2658 * C335 + C2665 * C319 + C32830 * C334) *
                C118 +
            (C2662 * C332 + C2656 * C352 + C2663 * C331 + C2657 * C351 +
             C2664 * C330 + C2658 * C350 + C2665 * C329 + C32830 * C349) *
                C32542) *
               C32641) *
              C32513 * C32499 * C110 -
          (((C2665 * C328 + C32830 * C348 + C2664 * C329 + C2658 * C349 +
             C2663 * C330 + C2657 * C350 + C2662 * C331 + C2656 * C351) *
                C32542 +
            (C2665 * C318 + C32830 * C333 + C2664 * C319 + C2658 * C334 +
             C2663 * C320 + C2657 * C335 + C2662 * C321 + C2656 * C336) *
                C118) *
               C32641 +
           ((C2665 * C135 + C32830 * C144 + C2664 * C134 + C2658 * C143 +
             C2663 * C133 + C2657 * C142 + C2662 * C132 + C2656 * C141) *
                C32542 +
            (C2665 * C123 + C32830 * C130 + C2664 * C122 + C2658 * C129 +
             C2663 * C121 + C2657 * C128 + C2662 * C120 + C2656 * C127) *
                C118) *
               C32796) *
              C32513 * C32499 * C111 +
          (((C2662 * C121 + C2656 * C128 + C2663 * C122 + C2657 * C129 +
             C2664 * C123 + C2658 * C130 + C2665 * C124 + C32830 * C137) *
                C118 +
            (C2662 * C133 + C2656 * C142 + C2663 * C134 + C2657 * C143 +
             C2664 * C135 + C2658 * C144 + C2665 * C136 + C32830 * C145) *
                C32542) *
               C32796 +
           ((C2662 * C320 + C2656 * C335 + C2663 * C319 + C2657 * C334 +
             C2664 * C318 + C2658 * C333 + C2665 * C532 + C32830 * C533) *
                C118 +
            (C2662 * C330 + C2656 * C350 + C2663 * C329 + C2657 * C349 +
             C2664 * C328 + C2658 * C348 + C2665 * C534 + C32830 * C535) *
                C32542) *
               C32641) *
              C32513 * C32499 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C2662 * C119 + C2656 * C126 + C2663 * C120 + C2657 * C127 +
             C2664 * C121 + C2658 * C128 + C2665 * C122 + C32830 * C129) *
                C118 +
            (C2662 * C131 + C2656 * C140 + C2663 * C132 + C2657 * C141 +
             C2664 * C133 + C2658 * C142 + C2665 * C134 + C32830 * C143) *
                C32542) *
               C32796 +
           ((C3679 + C3680 + C3681 + C3682) * C118 +
            (C3683 + C3684 + C3685 + C3686) * C32542) *
               C32641) *
              C315 -
          (((C3687 + C3688 + C3689 + C3690) * C32542 +
            (C3691 + C3692 + C3693 + C3694) * C118) *
               C32641 +
           ((C3686 + C3685 + C3684 + C3683) * C32542 +
            (C3682 + C3681 + C3680 + C3679) * C118) *
               C32796) *
              C316 +
          (((C3694 + C3693 + C3692 + C3691) * C118 +
            (C3690 + C3689 + C3688 + C3687) * C32542) *
               C32796 +
           ((C2662 * C1963 + C2656 * C1972 + C2663 * C1962 + C2657 * C1971 +
             C2664 * C1961 + C2658 * C1970 + C2665 * C2342 + C32830 * C2343) *
                C118 +
            (C2662 * C1969 + C2656 * C1981 + C2663 * C1968 + C2657 * C1980 +
             C2664 * C1967 + C2658 * C1979 + C2665 * C2344 + C32830 * C2345) *
                C32542) *
               C32641) *
              C317) *
         C32499 * C32487) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C31557 * C119 + C32776 * C126 + C31538 * C120 + C32460 * C127) *
                C5273 +
            (C31557 * C131 + C32776 * C140 + C31538 * C132 + C32460 * C141) *
                C5267 +
            (C7782 + C7783) * C5274 + (C7784 + C7785) * C5268 + C7798 * C5275 +
            C7799 * C32826) *
               C32796 +
           ((C31557 * C322 + C32776 * C337 + C31538 * C321 + C32460 * C336) *
                C5273 +
            (C31557 * C332 + C32776 * C352 + C31538 * C331 + C32460 * C351) *
                C5267 +
            (C8361 + C8360) * C5274 + (C8359 + C8358) * C5268 +
            (C8357 + C8356) * C5275 + (C8355 + C8354) * C32826) *
               C32641) *
              C32513 * C32499 * C110 -
          (((C31538 * C1071 + C32460 * C1089 + C31557 * C1072 +
             C32776 * C1090) *
                C32826 +
            (C31538 * C1062 + C32460 * C1074 + C31557 * C1063 +
             C32776 * C1075) *
                C5275 +
            (C31538 * C630 + C32460 * C635 + C31557 * C629 + C32776 * C634) *
                C5268 +
            (C31538 * C620 + C32460 * C625 + C31557 * C619 + C32776 * C624) *
                C5274 +
            (C31538 * C330 + C32460 * C350 + C31557 * C331 + C32776 * C351) *
                C5267 +
            (C31538 * C320 + C32460 * C335 + C31557 * C321 + C32776 * C336) *
                C5273) *
               C32641 +
           ((C8061 + C8060) * C32826 + (C8059 + C8058) * C5275 +
            (C8057 + C8056) * C5268 + (C8055 + C8054) * C5274 +
            (C31538 * C133 + C32460 * C142 + C31557 * C132 + C32776 * C141) *
                C5267 +
            (C31538 * C121 + C32460 * C128 + C31557 * C120 + C32776 * C127) *
                C5273) *
               C32796) *
              C32513 * C32499 * C111 +
          (((C31557 * C121 + C32776 * C128 + C31538 * C122 + C32460 * C129) *
                C5273 +
            (C31557 * C133 + C32776 * C142 + C31538 * C134 + C32460 * C143) *
                C5267 +
            (C31557 * C215 + C32776 * C230 + C31538 * C214 + C32460 * C229) *
                C5274 +
            (C31557 * C225 + C32776 * C245 + C31538 * C224 + C32460 * C244) *
                C5268 +
            (C31557 * C220 + C32776 * C235 + C31538 * C221 + C32460 * C236) *
                C5275 +
            (C31557 * C240 + C32776 * C250 + C31538 * C241 + C32460 * C251) *
                C32826) *
               C32796 +
           ((C31557 * C320 + C32776 * C335 + C31538 * C319 + C32460 * C334) *
                C5273 +
            (C31557 * C330 + C32776 * C350 + C31538 * C329 + C32460 * C349) *
                C5267 +
            (C31557 * C620 + C32776 * C625 + C31538 * C621 + C32460 * C626) *
                C5274 +
            (C31557 * C630 + C32776 * C635 + C31538 * C631 + C32460 * C636) *
                C5268 +
            (C31557 * C1062 + C32776 * C1074 + C31538 * C1430 +
             C32460 * C1431) *
                C5275 +
            (C31557 * C1071 + C32776 * C1089 + C31538 * C1432 +
             C32460 * C1433) *
                C32826) *
               C32641) *
              C32513 * C32499 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C31557 * C119 + C32776 * C126 + C31538 * C120 + C32460 * C127) *
                C5273 +
            (C31557 * C131 + C32776 * C140 + C31538 * C132 + C32460 * C141) *
                C5267 +
            (C7782 + C7783) * C5274 + (C7784 + C7785) * C5268 + C7798 * C5275 +
            C7799 * C32826) *
               C32796 +
           ((C31557 * C322 + C32776 * C337 + C31538 * C321 + C32460 * C336) *
                C5273 +
            (C31557 * C332 + C32776 * C352 + C31538 * C331 + C32460 * C351) *
                C5267 +
            (C8361 + C8360) * C5274 + (C8359 + C8358) * C5268 + C8654 * C5275 +
            C8655 * C32826) *
               C32641) *
              C32513 * C209 -
          (((C8350 + C8351) * C32826 + (C8352 + C8353) * C5275 +
            (C8354 + C8355) * C5268 + (C8356 + C8357) * C5274 +
            (C8358 + C8359) * C5267 + (C8360 + C8361) * C5273) *
               C32641 +
           ((C7793 + C7792) * C32826 + (C7791 + C7790) * C5275 +
            (C7789 + C7788) * C5268 + (C7787 + C7786) * C5274 +
            (C7785 + C7784) * C5267 + (C7783 + C7782) * C5273) *
               C32796) *
              C32513 * C210 +
          ((C7798 * C5273 + C7799 * C5267 + C7800 * C5274 + C7801 * C5268 +
            (C7797 + C7796) * C5275 + (C7795 + C7794) * C32826) *
               C32796 +
           (C8654 * C5273 + C8655 * C5267 + (C8353 + C8352) * C5274 +
            (C8351 + C8350) * C5268 +
            (C31557 * C6300 + C32776 * C6304 + C31538 * C6504 +
             C32460 * C6505) *
                C5275 +
            (C31557 * C6303 + C32776 * C6309 + C31538 * C6506 +
             C32460 * C6507) *
                C32826) *
               C32641) *
              C32513 * C211) *
         C32487) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C31557 * C119 + C32776 * C126 + C31538 * C120 + C32460 * C127) *
                C5273 +
            (C31557 * C131 + C32776 * C140 + C31538 * C132 + C32460 * C141) *
                C5267 +
            (C7782 + C7783) * C5274 + (C7784 + C7785) * C5268 + C7798 * C5275 +
            C7799 * C32826) *
               C32796 +
           ((C8834 + C8835) * C5273 + (C8836 + C8837) * C5267 +
            (C8361 + C8360) * C5274 + (C8359 + C8358) * C5268 + C8654 * C5275 +
            C8655 * C32826) *
               C32641) *
              C315 -
          (((C8838 + C8839) * C32826 + (C8840 + C8841) * C5275 +
            (C8842 + C8843) * C5268 + (C8844 + C8845) * C5274 +
            (C8846 + C8847) * C5267 + (C8848 + C8849) * C5273) *
               C32641 +
           ((C8354 + C8355) * C32826 + (C8356 + C8357) * C5275 +
            (C8358 + C8359) * C5268 + (C8360 + C8361) * C5274 +
            (C8837 + C8836) * C5267 + (C8835 + C8834) * C5273) *
               C32796) *
              C316 +
          (((C8849 + C8848) * C5273 + (C8847 + C8846) * C5267 +
            (C8845 + C8844) * C5274 + (C8843 + C8842) * C5268 +
            (C8841 + C8840) * C5275 + (C8839 + C8838) * C32826) *
               C32796 +
           ((C31557 * C1963 + C32776 * C1972 + C31538 * C1962 +
             C32460 * C1971) *
                C5273 +
            (C31557 * C1969 + C32776 * C1981 + C31538 * C1968 +
             C32460 * C1980) *
                C5267 +
            (C31557 * C2528 + C32776 * C2531 + C31538 * C2529 +
             C32460 * C2532) *
                C5274 +
            (C31557 * C2534 + C32776 * C2537 + C31538 * C2535 +
             C32460 * C2538) *
                C5268 +
            (C31557 * C6966 + C32776 * C6970 + C31538 * C7351 +
             C32460 * C7352) *
                C5275 +
            (C31557 * C6969 + C32776 * C6975 + C31538 * C7353 +
             C32460 * C7354) *
                C32826) *
               C32641) *
              C317) *
         C32499 * C32487) /
            (p * q * std::sqrt(p + q));
    d2ee[118] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2662 * C119 + C2656 * C126 + C2663 * C120 + C2657 * C127 +
              C2664 * C121 + C2658 * C128 + C2665 * C122 + C32830 * C129) *
                 C118 +
             (C2662 * C131 + C2656 * C140 + C2663 * C132 + C2657 * C141 +
              C2664 * C133 + C2658 * C142 + C2665 * C134 + C32830 * C143) *
                 C32542) *
                C32796 +
            ((C3679 + C3680 + C3681 + C3682) * C118 +
             (C3683 + C3684 + C3685 + C3686) * C32542) *
                C32641) *
               C530 -
           (((C3687 + C3688 + C3689 + C3690) * C32542 +
             (C3691 + C3692 + C3693 + C3694) * C118) *
                C32641 +
            ((C3686 + C3685 + C3684 + C3683) * C32542 +
             (C3682 + C3681 + C3680 + C3679) * C118) *
                C32796) *
               C531) *
              C32499 * C442 +
          ((((C3971 + C3972 + C3973 + C3974) * C118 +
             (C3975 + C3976 + C3977 + C3978) * C32542) *
                C32796 +
            ((C2662 * C324 + C2656 * C339 + C2663 * C325 + C2657 * C340 +
              C2664 * C326 + C2658 * C341 + C2665 * C327 + C32830 * C342) *
                 C118 +
             (C2662 * C344 + C2656 * C354 + C2663 * C345 + C2657 * C355 +
              C2664 * C346 + C2658 * C356 + C2665 * C347 + C32830 * C357) *
                 C32542) *
                C32641) *
               C531 -
           (((C3978 + C3977 + C3976 + C3975) * C32542 +
             (C3974 + C3973 + C3972 + C3971) * C118) *
                C32641 +
            ((C2665 * C135 + C32830 * C144 + C2664 * C134 + C2658 * C143 +
              C2663 * C133 + C2657 * C142 + C2662 * C132 + C2656 * C141) *
                 C32542 +
             (C2665 * C123 + C32830 * C130 + C2664 * C122 + C2658 * C129 +
              C2663 * C121 + C2657 * C128 + C2662 * C120 + C2656 * C127) *
                 C118) *
                C32796) *
               C530) *
              C32499 * C443)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31557 * C119 + C32776 * C126 + C31538 * C120 + C32460 * C127) *
                 C5273 +
             (C31557 * C131 + C32776 * C140 + C31538 * C132 + C32460 * C141) *
                 C5267 +
             (C7782 + C7783) * C5274 + (C7784 + C7785) * C5268 + C7798 * C5275 +
             C7799 * C32826) *
                C32796 +
            ((C8834 + C8835) * C5273 + (C8836 + C8837) * C5267 +
             (C8361 + C8360) * C5274 + (C8359 + C8358) * C5268 + C8654 * C5275 +
             C8655 * C32826) *
                C32641) *
               C530 -
           (((C8838 + C8839) * C32826 + (C8840 + C8841) * C5275 +
             (C8842 + C8843) * C5268 + (C8844 + C8845) * C5274 +
             (C8846 + C8847) * C5267 + (C8848 + C8849) * C5273) *
                C32641 +
            ((C8354 + C8355) * C32826 + (C8356 + C8357) * C5275 +
             (C8358 + C8359) * C5268 + (C8360 + C8361) * C5274 +
             (C8837 + C8836) * C5267 + (C8835 + C8834) * C5273) *
                C32796) *
               C531) *
              C32499 * C442 +
          ((((C9270 + C9271) * C5273 + (C9272 + C9273) * C5267 +
             (C9060 + C9061) * C5274 + (C9062 + C9063) * C5268 +
             (C9064 + C9065) * C5275 + (C9066 + C9067) * C32826) *
                C32796 +
            ((C31557 * C324 + C32776 * C339 + C31538 * C325 + C32460 * C340) *
                 C5273 +
             (C31557 * C344 + C32776 * C354 + C31538 * C345 + C32460 * C355) *
                 C5267 +
             (C31557 * C1066 + C32776 * C1078 + C31538 * C1067 +
              C32460 * C1079) *
                 C5274 +
             (C31557 * C1081 + C32776 * C1093 + C31538 * C1082 +
              C32460 * C1094) *
                 C5268 +
             (C31557 * C1069 + C32776 * C1084 + C31538 * C1070 +
              C32460 * C1085) *
                 C5275 +
             (C31557 * C1087 + C32776 * C1096 + C31538 * C1088 +
              C32460 * C1097) *
                 C32826) *
                C32641) *
               C531 -
           (((C9067 + C9066) * C32826 + (C9065 + C9064) * C5275 +
             (C9063 + C9062) * C5268 + (C9061 + C9060) * C5274 +
             (C9273 + C9272) * C5267 + (C9271 + C9270) * C5273) *
                C32641 +
            ((C8061 + C8060) * C32826 + (C8059 + C8058) * C5275 +
             (C8057 + C8056) * C5268 + (C8055 + C8054) * C5274 +
             (C31538 * C133 + C32460 * C142 + C31557 * C132 + C32776 * C141) *
                 C5267 +
             (C31538 * C121 + C32460 * C128 + C31557 * C120 + C32776 * C127) *
                 C5273) *
                C32796) *
               C530) *
              C32499 * C443)) /
            (p * q * std::sqrt(p + q));
    d2ee[119] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C2662 * C119 + C2656 * C126 + C2663 * C120 + C2657 * C127 +
             C2664 * C121 + C2658 * C128 + C2665 * C122 + C32830 * C129) *
                C118 +
            (C2662 * C131 + C2656 * C140 + C2663 * C132 + C2657 * C141 +
             C2664 * C133 + C2658 * C142 + C2665 * C134 + C32830 * C143) *
                C32542) *
               C32796 +
           ((C2662 * C322 + C2656 * C337 + C2663 * C321 + C2657 * C336 +
             C2664 * C320 + C2658 * C335 + C2665 * C319 + C32830 * C334) *
                C118 +
            (C2662 * C332 + C2656 * C352 + C2663 * C331 + C2657 * C351 +
             C2664 * C330 + C2658 * C350 + C2665 * C329 + C32830 * C349) *
                C32542) *
               C32641) *
              C32513 * C32499 * C110 -
          (((C2665 * C328 + C32830 * C348 + C2664 * C329 + C2658 * C349 +
             C2663 * C330 + C2657 * C350 + C2662 * C331 + C2656 * C351) *
                C32542 +
            (C2665 * C318 + C32830 * C333 + C2664 * C319 + C2658 * C334 +
             C2663 * C320 + C2657 * C335 + C2662 * C321 + C2656 * C336) *
                C118) *
               C32641 +
           ((C2665 * C135 + C32830 * C144 + C2664 * C134 + C2658 * C143 +
             C2663 * C133 + C2657 * C142 + C2662 * C132 + C2656 * C141) *
                C32542 +
            (C2665 * C123 + C32830 * C130 + C2664 * C122 + C2658 * C129 +
             C2663 * C121 + C2657 * C128 + C2662 * C120 + C2656 * C127) *
                C118) *
               C32796) *
              C32513 * C32499 * C111 +
          (((C2662 * C121 + C2656 * C128 + C2663 * C122 + C2657 * C129 +
             C2664 * C123 + C2658 * C130 + C2665 * C124 + C32830 * C137) *
                C118 +
            (C2662 * C133 + C2656 * C142 + C2663 * C134 + C2657 * C143 +
             C2664 * C135 + C2658 * C144 + C2665 * C136 + C32830 * C145) *
                C32542) *
               C32796 +
           ((C2662 * C320 + C2656 * C335 + C2663 * C319 + C2657 * C334 +
             C2664 * C318 + C2658 * C333 + C2665 * C532 + C32830 * C533) *
                C118 +
            (C2662 * C330 + C2656 * C350 + C2663 * C329 + C2657 * C349 +
             C2664 * C328 + C2658 * C348 + C2665 * C534 + C32830 * C535) *
                C32542) *
               C32641) *
              C32513 * C32499 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C2662 * C119 + C2656 * C126 + C2663 * C120 + C2657 * C127 +
             C2664 * C121 + C2658 * C128 + C2665 * C122 + C32830 * C129) *
                C118 +
            (C2662 * C131 + C2656 * C140 + C2663 * C132 + C2657 * C141 +
             C2664 * C133 + C2658 * C142 + C2665 * C134 + C32830 * C143) *
                C32542) *
               C32796 +
           ((C2662 * C322 + C2656 * C337 + C2663 * C321 + C2657 * C336 +
             C2664 * C320 + C2658 * C335 + C2665 * C319 + C32830 * C334) *
                C118 +
            (C2662 * C332 + C2656 * C352 + C2663 * C331 + C2657 * C351 +
             C2664 * C330 + C2658 * C350 + C2665 * C329 + C32830 * C349) *
                C32542) *
               C32641) *
              C32513 * C209 -
          (((C3343 + C3344 + C3345 + C3346) * C32542 +
            (C3347 + C3348 + C3349 + C3350) * C118) *
               C32641 +
           ((C2806 + C2805 + C2804 + C2803) * C32542 +
            (C2802 + C2801 + C2800 + C2799) * C118) *
               C32796) *
              C32513 * C210 +
          (((C2814 + C2813 + C2812 + C2811) * C118 +
            (C2810 + C2809 + C2808 + C2807) * C32542) *
               C32796 +
           ((C2662 * C1064 + C2656 * C1076 + C2663 * C1063 + C2657 * C1075 +
             C2664 * C1062 + C2658 * C1074 + C2665 * C1430 + C32830 * C1431) *
                C118 +
            (C2662 * C1073 + C2656 * C1091 + C2663 * C1072 + C2657 * C1090 +
             C2664 * C1071 + C2658 * C1089 + C2665 * C1432 + C32830 * C1433) *
                C32542) *
               C32641) *
              C32513 * C211) *
         C32487) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C31557 * C119 + C32776 * C126 + C31538 * C120 + C32460 * C127) *
                C5273 +
            (C31557 * C131 + C32776 * C140 + C31538 * C132 + C32460 * C141) *
                C5267 +
            (C7782 + C7783) * C5274 + (C7784 + C7785) * C5268 + C7798 * C5275 +
            C7799 * C32826) *
               C32796 +
           ((C31557 * C322 + C32776 * C337 + C31538 * C321 + C32460 * C336) *
                C5273 +
            (C31557 * C332 + C32776 * C352 + C31538 * C331 + C32460 * C351) *
                C5267 +
            (C8361 + C8360) * C5274 + (C8359 + C8358) * C5268 +
            (C8357 + C8356) * C5275 + (C8355 + C8354) * C32826) *
               C32641) *
              C32513 * C32499 * C110 -
          (((C31538 * C1071 + C32460 * C1089 + C31557 * C1072 +
             C32776 * C1090) *
                C32826 +
            (C31538 * C1062 + C32460 * C1074 + C31557 * C1063 +
             C32776 * C1075) *
                C5275 +
            (C31538 * C630 + C32460 * C635 + C31557 * C629 + C32776 * C634) *
                C5268 +
            (C31538 * C620 + C32460 * C625 + C31557 * C619 + C32776 * C624) *
                C5274 +
            (C31538 * C330 + C32460 * C350 + C31557 * C331 + C32776 * C351) *
                C5267 +
            (C31538 * C320 + C32460 * C335 + C31557 * C321 + C32776 * C336) *
                C5273) *
               C32641 +
           ((C8061 + C8060) * C32826 + (C8059 + C8058) * C5275 +
            (C8057 + C8056) * C5268 + (C8055 + C8054) * C5274 +
            (C31538 * C133 + C32460 * C142 + C31557 * C132 + C32776 * C141) *
                C5267 +
            (C31538 * C121 + C32460 * C128 + C31557 * C120 + C32776 * C127) *
                C5273) *
               C32796) *
              C32513 * C32499 * C111 +
          (((C31557 * C121 + C32776 * C128 + C31538 * C122 + C32460 * C129) *
                C5273 +
            (C31557 * C133 + C32776 * C142 + C31538 * C134 + C32460 * C143) *
                C5267 +
            (C31557 * C215 + C32776 * C230 + C31538 * C214 + C32460 * C229) *
                C5274 +
            (C31557 * C225 + C32776 * C245 + C31538 * C224 + C32460 * C244) *
                C5268 +
            (C31557 * C220 + C32776 * C235 + C31538 * C221 + C32460 * C236) *
                C5275 +
            (C31557 * C240 + C32776 * C250 + C31538 * C241 + C32460 * C251) *
                C32826) *
               C32796 +
           ((C31557 * C320 + C32776 * C335 + C31538 * C319 + C32460 * C334) *
                C5273 +
            (C31557 * C330 + C32776 * C350 + C31538 * C329 + C32460 * C349) *
                C5267 +
            (C31557 * C620 + C32776 * C625 + C31538 * C621 + C32460 * C626) *
                C5274 +
            (C31557 * C630 + C32776 * C635 + C31538 * C631 + C32460 * C636) *
                C5268 +
            (C31557 * C1062 + C32776 * C1074 + C31538 * C1430 +
             C32460 * C1431) *
                C5275 +
            (C31557 * C1071 + C32776 * C1089 + C31538 * C1432 +
             C32460 * C1433) *
                C32826) *
               C32641) *
              C32513 * C32499 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C31557 * C119 + C32776 * C126 + C31538 * C120 + C32460 * C127) *
                C5273 +
            (C31557 * C131 + C32776 * C140 + C31538 * C132 + C32460 * C141) *
                C5267 +
            (C7782 + C7783) * C5274 + (C7784 + C7785) * C5268 + C7798 * C5275 +
            C7799 * C32826) *
               C32796 +
           ((C31557 * C322 + C32776 * C337 + C31538 * C321 + C32460 * C336) *
                C5273 +
            (C31557 * C332 + C32776 * C352 + C31538 * C331 + C32460 * C351) *
                C5267 +
            (C8361 + C8360) * C5274 + (C8359 + C8358) * C5268 + C8654 * C5275 +
            C8655 * C32826) *
               C32641) *
              C32513 * C209 -
          (((C8350 + C8351) * C32826 + (C8352 + C8353) * C5275 +
            (C8354 + C8355) * C5268 + (C8356 + C8357) * C5274 +
            (C8358 + C8359) * C5267 + (C8360 + C8361) * C5273) *
               C32641 +
           ((C7793 + C7792) * C32826 + (C7791 + C7790) * C5275 +
            (C7789 + C7788) * C5268 + (C7787 + C7786) * C5274 +
            (C7785 + C7784) * C5267 + (C7783 + C7782) * C5273) *
               C32796) *
              C32513 * C210 +
          ((C7798 * C5273 + C7799 * C5267 + C7800 * C5274 + C7801 * C5268 +
            (C7797 + C7796) * C5275 + (C7795 + C7794) * C32826) *
               C32796 +
           (C8654 * C5273 + C8655 * C5267 + (C8353 + C8352) * C5274 +
            (C8351 + C8350) * C5268 +
            (C31557 * C6300 + C32776 * C6304 + C31538 * C6504 +
             C32460 * C6505) *
                C5275 +
            (C31557 * C6303 + C32776 * C6309 + C31538 * C6506 +
             C32460 * C6507) *
                C32826) *
               C32641) *
              C32513 * C211) *
         C32487) /
            (p * q * std::sqrt(p + q));
    d2ee[120] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C127 +
             C115 * C121 + C103 * C128 + C116 * C122 + C104 * C129 +
             C117 * C123 + C105 * C130) *
                C118 +
            (C113 * C131 + C101 * C140 + C114 * C132 + C102 * C141 +
             C115 * C133 + C103 * C142 + C116 * C134 + C104 * C143 +
             C117 * C135 + C105 * C144) *
                C32542) *
               C32554 * C32513 * C440 -
           ((C117 * C223 + C105 * C243 + C116 * C224 + C104 * C244 +
             C115 * C225 + C103 * C245 + C114 * C226 + C102 * C246 +
             C113 * C227 + C101 * C247) *
                C32542 +
            (C117 * C213 + C105 * C228 + C116 * C214 + C104 * C229 +
             C115 * C215 + C103 * C230 + C114 * C216 + C102 * C231 +
             C113 * C217 + C101 * C232) *
                C118) *
               C32554 * C32513 * C441) *
              C442 +
          (((C113 * C216 + C101 * C231 + C114 * C215 + C102 * C230 +
             C115 * C214 + C103 * C229 + C116 * C213 + C104 * C228 +
             C117 * C444 + C105 * C445) *
                C118 +
            (C113 * C226 + C101 * C246 + C114 * C225 + C102 * C245 +
             C115 * C224 + C103 * C244 + C116 * C223 + C104 * C243 +
             C117 * C446 + C105 * C447) *
                C32542) *
               C32554 * C32513 * C441 -
           ((C117 * C136 + C105 * C145 + C116 * C135 + C104 * C144 +
             C115 * C134 + C103 * C143 + C114 * C133 + C102 * C142 +
             C113 * C132 + C101 * C141) *
                C32542 +
            (C117 * C124 + C105 * C137 + C116 * C123 + C104 * C130 +
             C115 * C122 + C103 * C129 + C114 * C121 + C102 * C128 +
             C113 * C120 + C101 * C127) *
                C118) *
               C32554 * C32513 * C440) *
              C443)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C754 * C119 + C748 * C126 + C755 * C120 + C749 * C127 +
             C756 * C121 + C32815 * C128) *
                C757 +
            (C754 * C131 + C748 * C140 + C755 * C132 + C749 * C141 +
             C756 * C133 + C32815 * C142) *
                C32861 +
            (C931 + C932 + C933) * C758 + (C934 + C935 + C936) * C32849 +
            C951 * C759 + C952 * C32826) *
               C32554 * C32513 * C440 -
           ((C943 + C944 + C945) * C32826 + (C946 + C947 + C948) * C759 +
            (C942 + C941 + C940) * C32849 + (C939 + C938 + C937) * C758 +
            (C936 + C935 + C934) * C32861 + (C933 + C932 + C931) * C757) *
               C32554 * C32513 * C441) *
              C442 +
          (((C1273 + C1274 + C1275) * C757 + (C1276 + C1277 + C1278) * C32861 +
            (C1279 + C1280 + C1281) * C758 + (C1282 + C1283 + C1284) * C32849 +
            (C754 * C871 + C748 * C880 + C755 * C870 + C749 * C879 +
             C756 * C1244 + C32815 * C1245) *
                C759 +
            (C754 * C877 + C748 * C889 + C755 * C876 + C749 * C888 +
             C756 * C1246 + C32815 * C1247) *
                C32826) *
               C32554 * C32513 * C441 -
           ((C1284 + C1283 + C1282) * C32826 + (C1281 + C1280 + C1279) * C759 +
            (C1278 + C1277 + C1276) * C32849 + (C1275 + C1274 + C1273) * C758 +
            (C756 * C134 + C32815 * C143 + C755 * C133 + C749 * C142 +
             C754 * C132 + C748 * C141) *
                C32861 +
            (C756 * C122 + C32815 * C129 + C755 * C121 + C749 * C128 +
             C754 * C120 + C748 * C127) *
                C757) *
               C32554 * C32513 * C440) *
              C443)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C5270 * C119 + C32858 * C126 + C5271 * C120 + C32845 * C127 +
             C5272 * C121 + C32815 * C128) *
                C5273 +
            (C5270 * C131 + C32858 * C140 + C5271 * C132 + C32845 * C141 +
             C5272 * C133 + C32815 * C142) *
                C5267 +
            (C5423 + C5424 + C5425) * C5274 + (C5426 + C5427 + C5428) * C5268 +
            C5443 * C5275 + C5444 * C32826) *
               C32554 * C32513 * C440 -
           ((C5435 + C5436 + C5437) * C32826 + (C5438 + C5439 + C5440) * C5275 +
            (C5434 + C5433 + C5432) * C5268 + (C5431 + C5430 + C5429) * C5274 +
            (C5428 + C5427 + C5426) * C5267 + (C5425 + C5424 + C5423) * C5273) *
               C32554 * C32513 * C441) *
              C442 +
          (((C5725 + C5726 + C5727) * C5273 + (C5728 + C5729 + C5730) * C5267 +
            (C5731 + C5732 + C5733) * C5274 + (C5734 + C5735 + C5736) * C5268 +
            (C5270 * C871 + C32858 * C880 + C5271 * C870 + C32845 * C879 +
             C5272 * C1244 + C32815 * C1245) *
                C5275 +
            (C5270 * C877 + C32858 * C889 + C5271 * C876 + C32845 * C888 +
             C5272 * C1246 + C32815 * C1247) *
                C32826) *
               C32554 * C32513 * C441 -
           ((C5736 + C5735 + C5734) * C32826 + (C5733 + C5732 + C5731) * C5275 +
            (C5730 + C5729 + C5728) * C5268 + (C5727 + C5726 + C5725) * C5274 +
            (C5272 * C134 + C32815 * C143 + C5271 * C133 + C32845 * C142 +
             C5270 * C132 + C32858 * C141) *
                C5267 +
            (C5272 * C122 + C32815 * C129 + C5271 * C121 + C32845 * C128 +
             C5270 * C120 + C32858 * C127) *
                C5273) *
               C32554 * C32513 * C440) *
              C443)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C6132 * C119 + C32450 * C126) * C6133 +
            (C6132 * C131 + C32450 * C140) * C6127 + C6229 * C6134 +
            C6230 * C6128 + C6231 * C6135 + C6232 * C6129 + C6233 * C6136 +
            C6234 * C6130 + C6235 * C6137 + C6236 * C6131) *
               C32554 * C32513 * C440 -
           (C6237 * C6131 + C6238 * C6137 + C6236 * C6130 + C6235 * C6136 +
            C6234 * C6129 + C6233 * C6135 + C6232 * C6128 + C6231 * C6134 +
            C6230 * C6127 + C6229 * C6133) *
               C32554 * C32513 * C441) *
              C442 +
          ((C6415 * C6133 + C6416 * C6127 + C6417 * C6134 + C6418 * C6128 +
            C6419 * C6135 + C6420 * C6129 + C6421 * C6136 + C6422 * C6130 +
            (C6132 * C6394 + C32450 * C6395) * C6137 +
            (C6132 * C6396 + C32450 * C6397) * C6131) *
               C32554 * C32513 * C441 -
           (C6422 * C6131 + C6421 * C6137 + C6420 * C6130 + C6419 * C6136 +
            C6418 * C6129 + C6417 * C6135 + C6416 * C6128 + C6415 * C6134 +
            (C6132 * C132 + C32450 * C141) * C6127 +
            (C6132 * C120 + C32450 * C127) * C6133) *
               C32554 * C32513 * C440) *
              C443)) /
            (p * q * std::sqrt(p + q));
    d2ee[121] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C127 +
             C115 * C121 + C103 * C128 + C116 * C122 + C104 * C129 +
             C117 * C123 + C105 * C130) *
                C118 +
            (C113 * C131 + C101 * C140 + C114 * C132 + C102 * C141 +
             C115 * C133 + C103 * C142 + C116 * C134 + C104 * C143 +
             C117 * C135 + C105 * C144) *
                C32542) *
               C32554 * C530 -
           ((C117 * C328 + C105 * C348 + C116 * C329 + C104 * C349 +
             C115 * C330 + C103 * C350 + C114 * C331 + C102 * C351 +
             C113 * C332 + C101 * C352) *
                C32542 +
            (C117 * C318 + C105 * C333 + C116 * C319 + C104 * C334 +
             C115 * C320 + C103 * C335 + C114 * C321 + C102 * C336 +
             C113 * C322 + C101 * C337) *
                C118) *
               C32554 * C531) *
              C440 +
          (((C113 * C618 + C101 * C623 + C114 * C619 + C102 * C624 +
             C115 * C620 + C103 * C625 + C116 * C621 + C104 * C626 +
             C117 * C622 + C105 * C627) *
                C118 +
            (C113 * C628 + C101 * C633 + C114 * C629 + C102 * C634 +
             C115 * C630 + C103 * C635 + C116 * C631 + C104 * C636 +
             C117 * C632 + C105 * C637) *
                C32542) *
               C32554 * C531 -
           ((C117 * C223 + C105 * C243 + C116 * C224 + C104 * C244 +
             C115 * C225 + C103 * C245 + C114 * C226 + C102 * C246 +
             C113 * C227 + C101 * C247) *
                C32542 +
            (C117 * C213 + C105 * C228 + C116 * C214 + C104 * C229 +
             C115 * C215 + C103 * C230 + C114 * C216 + C102 * C231 +
             C113 * C217 + C101 * C232) *
                C118) *
               C32554 * C530) *
              C441) *
         C32487) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C754 * C119 + C748 * C126 + C755 * C120 + C749 * C127 +
             C756 * C121 + C32815 * C128) *
                C757 +
            (C754 * C131 + C748 * C140 + C755 * C132 + C749 * C141 +
             C756 * C133 + C32815 * C142) *
                C32861 +
            (C931 + C932 + C933) * C758 + (C934 + C935 + C936) * C32849 +
            C951 * C759 + C952 * C32826) *
               C32554 * C530 -
           ((C1617 + C1618 + C1619) * C32826 + (C1620 + C1621 + C1622) * C759 +
            (C1623 + C1624 + C1625) * C32849 + (C1626 + C1627 + C1628) * C758 +
            (C756 * C330 + C32815 * C350 + C755 * C331 + C749 * C351 +
             C754 * C332 + C748 * C352) *
                C32861 +
            (C756 * C320 + C32815 * C335 + C755 * C321 + C749 * C336 +
             C754 * C322 + C748 * C337) *
                C757) *
               C32554 * C531) *
              C440 +
          (((C1628 + C1627 + C1626) * C757 + (C1625 + C1624 + C1623) * C32861 +
            (C1622 + C1621 + C1620) * C758 + (C1619 + C1618 + C1617) * C32849 +
            (C754 * C1580 + C748 * C1583 + C755 * C1581 + C749 * C1584 +
             C756 * C1582 + C32815 * C1585) *
                C759 +
            (C754 * C1586 + C748 * C1589 + C755 * C1587 + C749 * C1590 +
             C756 * C1588 + C32815 * C1591) *
                C32826) *
               C32554 * C531 -
           ((C943 + C944 + C945) * C32826 + (C946 + C947 + C948) * C759 +
            (C942 + C941 + C940) * C32849 + (C939 + C938 + C937) * C758 +
            (C936 + C935 + C934) * C32861 + (C933 + C932 + C931) * C757) *
               C32554 * C530) *
              C441) *
         C32487) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C5270 * C119 + C32858 * C126 + C5271 * C120 + C32845 * C127 +
             C5272 * C121 + C32815 * C128) *
                C5273 +
            (C5270 * C131 + C32858 * C140 + C5271 * C132 + C32845 * C141 +
             C5272 * C133 + C32815 * C142) *
                C5267 +
            (C5423 + C5424 + C5425) * C5274 + (C5426 + C5427 + C5428) * C5268 +
            C5443 * C5275 + C5444 * C32826) *
               C32554 * C530 -
           ((C6053 + C6054 + C6055) * C32826 + (C6056 + C6057 + C6058) * C5275 +
            (C6059 + C6060 + C6061) * C5268 + (C6062 + C6063 + C6064) * C5274 +
            (C5272 * C330 + C32815 * C350 + C5271 * C331 + C32845 * C351 +
             C5270 * C332 + C32858 * C352) *
                C5267 +
            (C5272 * C320 + C32815 * C335 + C5271 * C321 + C32845 * C336 +
             C5270 * C322 + C32858 * C337) *
                C5273) *
               C32554 * C531) *
              C440 +
          (((C6064 + C6063 + C6062) * C5273 + (C6061 + C6060 + C6059) * C5267 +
            (C6058 + C6057 + C6056) * C5274 + (C6055 + C6054 + C6053) * C5268 +
            (C5270 * C1580 + C32858 * C1583 + C5271 * C1581 + C32845 * C1584 +
             C5272 * C1582 + C32815 * C1585) *
                C5275 +
            (C5270 * C1586 + C32858 * C1589 + C5271 * C1587 + C32845 * C1590 +
             C5272 * C1588 + C32815 * C1591) *
                C32826) *
               C32554 * C531 -
           ((C5435 + C5436 + C5437) * C32826 + (C5438 + C5439 + C5440) * C5275 +
            (C5434 + C5433 + C5432) * C5268 + (C5431 + C5430 + C5429) * C5274 +
            (C5428 + C5427 + C5426) * C5267 + (C5425 + C5424 + C5423) * C5273) *
               C32554 * C530) *
              C441) *
         C32487) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C6132 * C119 + C32450 * C126) * C6133 +
            (C6132 * C131 + C32450 * C140) * C6127 + C6229 * C6134 +
            C6230 * C6128 + C6231 * C6135 + C6232 * C6129 + C6233 * C6136 +
            C6234 * C6130 + C6235 * C6137 + C6236 * C6131) *
               C32554 * C530 -
           (C6611 * C6131 + C6612 * C6137 + C6613 * C6130 + C6614 * C6136 +
            C6615 * C6129 + C6616 * C6135 + C6617 * C6128 + C6618 * C6134 +
            (C6132 * C332 + C32450 * C352) * C6127 +
            (C6132 * C322 + C32450 * C337) * C6133) *
               C32554 * C531) *
              C440 +
          ((C6618 * C6133 + C6617 * C6127 + C6616 * C6134 + C6615 * C6128 +
            C6614 * C6135 + C6613 * C6129 + C6612 * C6136 + C6611 * C6130 +
            (C6132 * C6590 + C32450 * C6591) * C6137 +
            (C6132 * C6592 + C32450 * C6593) * C6131) *
               C32554 * C531 -
           (C6237 * C6131 + C6238 * C6137 + C6236 * C6130 + C6235 * C6136 +
            C6234 * C6129 + C6233 * C6135 + C6232 * C6128 + C6231 * C6134 +
            C6230 * C6127 + C6229 * C6133) *
               C32554 * C530) *
              C441) *
         C32487) /
            (p * q * std::sqrt(p + q));
    d2ee[122] +=
        (-std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C127 +
            C115 * C121 + C103 * C128 + C116 * C122 + C104 * C129 +
            C117 * C123 + C105 * C130) *
               C118 +
           (C113 * C131 + C101 * C140 + C114 * C132 + C102 * C141 +
            C115 * C133 + C103 * C142 + C116 * C134 + C104 * C143 +
            C117 * C135 + C105 * C144) *
               C32542) *
              C32554 * C32513 * C209 -
          ((C117 * C223 + C105 * C243 + C116 * C224 + C104 * C244 +
            C115 * C225 + C103 * C245 + C114 * C226 + C102 * C246 +
            C113 * C227 + C101 * C247) *
               C32542 +
           (C117 * C213 + C105 * C228 + C116 * C214 + C104 * C229 +
            C115 * C215 + C103 * C230 + C114 * C216 + C102 * C231 +
            C113 * C217 + C101 * C232) *
               C118) *
              C32554 * C32513 * C210 +
          ((C113 * C218 + C101 * C233 + C114 * C219 + C102 * C234 +
            C115 * C220 + C103 * C235 + C116 * C221 + C104 * C236 +
            C117 * C222 + C105 * C237) *
               C118 +
           (C113 * C238 + C101 * C248 + C114 * C239 + C102 * C249 +
            C115 * C240 + C103 * C250 + C116 * C241 + C104 * C251 +
            C117 * C242 + C105 * C252) *
               C32542) *
              C32554 * C32513 * C211) *
         C32487) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C127 +
            C115 * C121 + C103 * C128 + C116 * C122 + C104 * C129 +
            C117 * C123 + C105 * C130) *
               C118 +
           (C113 * C131 + C101 * C140 + C114 * C132 + C102 * C141 +
            C115 * C133 + C103 * C142 + C116 * C134 + C104 * C143 +
            C117 * C135 + C105 * C144) *
               C32542) *
              C32554 * C32513 * C32499 * C110 -
          ((C117 * C136 + C105 * C145 + C116 * C135 + C104 * C144 +
            C115 * C134 + C103 * C143 + C114 * C133 + C102 * C142 +
            C113 * C132 + C101 * C141) *
               C32542 +
           (C117 * C124 + C105 * C137 + C116 * C123 + C104 * C130 +
            C115 * C122 + C103 * C129 + C114 * C121 + C102 * C128 +
            C113 * C120 + C101 * C127) *
               C118) *
              C32554 * C32513 * C32499 * C111 +
          ((C113 * C121 + C101 * C128 + C114 * C122 + C102 * C129 +
            C115 * C123 + C103 * C130 + C116 * C124 + C104 * C137 +
            C117 * C125 + C105 * C138) *
               C118 +
           (C113 * C133 + C101 * C142 + C114 * C134 + C102 * C143 +
            C115 * C135 + C103 * C144 + C116 * C136 + C104 * C145 +
            C117 * C139 + C105 * C146) *
               C32542) *
              C32554 * C32513 * C32499 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C127 +
            C115 * C121 + C103 * C128 + C116 * C122 + C104 * C129 +
            C117 * C123 + C105 * C130) *
               C118 +
           (C113 * C131 + C101 * C140 + C114 * C132 + C102 * C141 +
            C115 * C133 + C103 * C142 + C116 * C134 + C104 * C143 +
            C117 * C135 + C105 * C144) *
               C32542) *
              C32554 * C315 -
          ((C117 * C328 + C105 * C348 + C116 * C329 + C104 * C349 +
            C115 * C330 + C103 * C350 + C114 * C331 + C102 * C351 +
            C113 * C332 + C101 * C352) *
               C32542 +
           (C117 * C318 + C105 * C333 + C116 * C319 + C104 * C334 +
            C115 * C320 + C103 * C335 + C114 * C321 + C102 * C336 +
            C113 * C322 + C101 * C337) *
               C118) *
              C32554 * C316 +
          ((C113 * C323 + C101 * C338 + C114 * C324 + C102 * C339 +
            C115 * C325 + C103 * C340 + C116 * C326 + C104 * C341 +
            C117 * C327 + C105 * C342) *
               C118 +
           (C113 * C343 + C101 * C353 + C114 * C344 + C102 * C354 +
            C115 * C345 + C103 * C355 + C116 * C346 + C104 * C356 +
            C117 * C347 + C105 * C357) *
               C32542) *
              C32554 * C317) *
         C32499 * C32487) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C754 * C119 + C748 * C126 + C755 * C120 + C749 * C127 +
            C756 * C121 + C32815 * C128) *
               C757 +
           (C754 * C131 + C748 * C140 + C755 * C132 + C749 * C141 +
            C756 * C133 + C32815 * C142) *
               C32861 +
           (C754 * C217 + C748 * C232 + C755 * C216 + C749 * C231 +
            C756 * C215 + C32815 * C230) *
               C758 +
           (C754 * C227 + C748 * C247 + C755 * C226 + C749 * C246 +
            C756 * C225 + C32815 * C245) *
               C32849 +
           (C754 * C218 + C748 * C233 + C755 * C219 + C749 * C234 +
            C756 * C220 + C32815 * C235) *
               C759 +
           (C754 * C238 + C748 * C248 + C755 * C239 + C749 * C249 +
            C756 * C240 + C32815 * C250) *
               C32826) *
              C32554 * C32513 * C32499 * C110 -
          ((C756 * C241 + C32815 * C251 + C755 * C240 + C749 * C250 +
            C754 * C239 + C748 * C249) *
               C32826 +
           (C756 * C221 + C32815 * C236 + C755 * C220 + C749 * C235 +
            C754 * C219 + C748 * C234) *
               C759 +
           (C756 * C224 + C32815 * C244 + C755 * C225 + C749 * C245 +
            C754 * C226 + C748 * C246) *
               C32849 +
           (C756 * C214 + C32815 * C229 + C755 * C215 + C749 * C230 +
            C754 * C216 + C748 * C231) *
               C758 +
           (C756 * C134 + C32815 * C143 + C755 * C133 + C749 * C142 +
            C754 * C132 + C748 * C141) *
               C32861 +
           (C756 * C122 + C32815 * C129 + C755 * C121 + C749 * C128 +
            C754 * C120 + C748 * C127) *
               C757) *
              C32554 * C32513 * C32499 * C111 +
          ((C754 * C121 + C748 * C128 + C755 * C122 + C749 * C129 +
            C756 * C123 + C32815 * C130) *
               C757 +
           (C754 * C133 + C748 * C142 + C755 * C134 + C749 * C143 +
            C756 * C135 + C32815 * C144) *
               C32861 +
           (C754 * C215 + C748 * C230 + C755 * C214 + C749 * C229 +
            C756 * C213 + C32815 * C228) *
               C758 +
           (C754 * C225 + C748 * C245 + C755 * C224 + C749 * C244 +
            C756 * C223 + C32815 * C243) *
               C32849 +
           (C754 * C220 + C748 * C235 + C755 * C221 + C749 * C236 +
            C756 * C222 + C32815 * C237) *
               C759 +
           (C754 * C240 + C748 * C250 + C755 * C241 + C749 * C251 +
            C756 * C242 + C32815 * C252) *
               C32826) *
              C32554 * C32513 * C32499 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C754 * C119 + C748 * C126 + C755 * C120 + C749 * C127 +
            C756 * C121 + C32815 * C128) *
               C757 +
           (C754 * C131 + C748 * C140 + C755 * C132 + C749 * C141 +
            C756 * C133 + C32815 * C142) *
               C32861 +
           (C931 + C932 + C933) * C758 + (C934 + C935 + C936) * C32849 +
           C951 * C759 + C952 * C32826) *
              C32554 * C32513 * C209 -
          ((C943 + C944 + C945) * C32826 + (C946 + C947 + C948) * C759 +
           (C942 + C941 + C940) * C32849 + (C939 + C938 + C937) * C758 +
           (C936 + C935 + C934) * C32861 + (C933 + C932 + C931) * C757) *
              C32554 * C32513 * C210 +
          (C951 * C757 + C952 * C32861 + (C948 + C947 + C946) * C758 +
           (C945 + C944 + C943) * C32849 +
           (C754 * C873 + C748 * C882 + C755 * C874 + C749 * C883 +
            C756 * C875 + C32815 * C884) *
               C759 +
           (C754 * C885 + C748 * C891 + C755 * C886 + C749 * C892 +
            C756 * C887 + C32815 * C893) *
               C32826) *
              C32554 * C32513 * C211) *
         C32487) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C754 * C119 + C748 * C126 + C755 * C120 + C749 * C127 +
            C756 * C121 + C32815 * C128) *
               C757 +
           (C754 * C131 + C748 * C140 + C755 * C132 + C749 * C141 +
            C756 * C133 + C32815 * C142) *
               C32861 +
           (C931 + C932 + C933) * C758 + (C934 + C935 + C936) * C32849 +
           C951 * C759 + C952 * C32826) *
              C32554 * C315 -
          ((C756 * C1071 + C32815 * C1089 + C755 * C1072 + C749 * C1090 +
            C754 * C1073 + C748 * C1091) *
               C32826 +
           (C756 * C1062 + C32815 * C1074 + C755 * C1063 + C749 * C1075 +
            C754 * C1064 + C748 * C1076) *
               C759 +
           (C756 * C630 + C32815 * C635 + C755 * C629 + C749 * C634 +
            C754 * C628 + C748 * C633) *
               C32849 +
           (C756 * C620 + C32815 * C625 + C755 * C619 + C749 * C624 +
            C754 * C618 + C748 * C623) *
               C758 +
           (C756 * C330 + C32815 * C350 + C755 * C331 + C749 * C351 +
            C754 * C332 + C748 * C352) *
               C32861 +
           (C756 * C320 + C32815 * C335 + C755 * C321 + C749 * C336 +
            C754 * C322 + C748 * C337) *
               C757) *
              C32554 * C316 +
          ((C754 * C323 + C748 * C338 + C755 * C324 + C749 * C339 +
            C756 * C325 + C32815 * C340) *
               C757 +
           (C754 * C343 + C748 * C353 + C755 * C344 + C749 * C354 +
            C756 * C345 + C32815 * C355) *
               C32861 +
           (C754 * C1065 + C748 * C1077 + C755 * C1066 + C749 * C1078 +
            C756 * C1067 + C32815 * C1079) *
               C758 +
           (C754 * C1080 + C748 * C1092 + C755 * C1081 + C749 * C1093 +
            C756 * C1082 + C32815 * C1094) *
               C32849 +
           (C754 * C1068 + C748 * C1083 + C755 * C1069 + C749 * C1084 +
            C756 * C1070 + C32815 * C1085) *
               C759 +
           (C754 * C1086 + C748 * C1095 + C755 * C1087 + C749 * C1096 +
            C756 * C1088 + C32815 * C1097) *
               C32826) *
              C32554 * C317) *
         C32499 * C32487) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C5270 * C119 + C32858 * C126 + C5271 * C120 + C32845 * C127 +
            C5272 * C121 + C32815 * C128) *
               C5273 +
           (C5270 * C131 + C32858 * C140 + C5271 * C132 + C32845 * C141 +
            C5272 * C133 + C32815 * C142) *
               C5267 +
           (C5270 * C217 + C32858 * C232 + C5271 * C216 + C32845 * C231 +
            C5272 * C215 + C32815 * C230) *
               C5274 +
           (C5270 * C227 + C32858 * C247 + C5271 * C226 + C32845 * C246 +
            C5272 * C225 + C32815 * C245) *
               C5268 +
           (C5270 * C218 + C32858 * C233 + C5271 * C219 + C32845 * C234 +
            C5272 * C220 + C32815 * C235) *
               C5275 +
           (C5270 * C238 + C32858 * C248 + C5271 * C239 + C32845 * C249 +
            C5272 * C240 + C32815 * C250) *
               C32826) *
              C32554 * C32513 * C32499 * C110 -
          ((C5272 * C241 + C32815 * C251 + C5271 * C240 + C32845 * C250 +
            C5270 * C239 + C32858 * C249) *
               C32826 +
           (C5272 * C221 + C32815 * C236 + C5271 * C220 + C32845 * C235 +
            C5270 * C219 + C32858 * C234) *
               C5275 +
           (C5272 * C224 + C32815 * C244 + C5271 * C225 + C32845 * C245 +
            C5270 * C226 + C32858 * C246) *
               C5268 +
           (C5272 * C214 + C32815 * C229 + C5271 * C215 + C32845 * C230 +
            C5270 * C216 + C32858 * C231) *
               C5274 +
           (C5272 * C134 + C32815 * C143 + C5271 * C133 + C32845 * C142 +
            C5270 * C132 + C32858 * C141) *
               C5267 +
           (C5272 * C122 + C32815 * C129 + C5271 * C121 + C32845 * C128 +
            C5270 * C120 + C32858 * C127) *
               C5273) *
              C32554 * C32513 * C32499 * C111 +
          ((C5270 * C121 + C32858 * C128 + C5271 * C122 + C32845 * C129 +
            C5272 * C123 + C32815 * C130) *
               C5273 +
           (C5270 * C133 + C32858 * C142 + C5271 * C134 + C32845 * C143 +
            C5272 * C135 + C32815 * C144) *
               C5267 +
           (C5270 * C215 + C32858 * C230 + C5271 * C214 + C32845 * C229 +
            C5272 * C213 + C32815 * C228) *
               C5274 +
           (C5270 * C225 + C32858 * C245 + C5271 * C224 + C32845 * C244 +
            C5272 * C223 + C32815 * C243) *
               C5268 +
           (C5270 * C220 + C32858 * C235 + C5271 * C221 + C32845 * C236 +
            C5272 * C222 + C32815 * C237) *
               C5275 +
           (C5270 * C240 + C32858 * C250 + C5271 * C241 + C32845 * C251 +
            C5272 * C242 + C32815 * C252) *
               C32826) *
              C32554 * C32513 * C32499 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C5270 * C119 + C32858 * C126 + C5271 * C120 + C32845 * C127 +
            C5272 * C121 + C32815 * C128) *
               C5273 +
           (C5270 * C131 + C32858 * C140 + C5271 * C132 + C32845 * C141 +
            C5272 * C133 + C32815 * C142) *
               C5267 +
           (C5423 + C5424 + C5425) * C5274 + (C5426 + C5427 + C5428) * C5268 +
           C5443 * C5275 + C5444 * C32826) *
              C32554 * C32513 * C209 -
          ((C5435 + C5436 + C5437) * C32826 + (C5438 + C5439 + C5440) * C5275 +
           (C5434 + C5433 + C5432) * C5268 + (C5431 + C5430 + C5429) * C5274 +
           (C5428 + C5427 + C5426) * C5267 + (C5425 + C5424 + C5423) * C5273) *
              C32554 * C32513 * C210 +
          (C5443 * C5273 + C5444 * C5267 + (C5440 + C5439 + C5438) * C5274 +
           (C5437 + C5436 + C5435) * C5268 +
           (C5270 * C873 + C32858 * C882 + C5271 * C874 + C32845 * C883 +
            C5272 * C875 + C32815 * C884) *
               C5275 +
           (C5270 * C885 + C32858 * C891 + C5271 * C886 + C32845 * C892 +
            C5272 * C887 + C32815 * C893) *
               C32826) *
              C32554 * C32513 * C211) *
         C32487) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C5270 * C119 + C32858 * C126 + C5271 * C120 + C32845 * C127 +
            C5272 * C121 + C32815 * C128) *
               C5273 +
           (C5270 * C131 + C32858 * C140 + C5271 * C132 + C32845 * C141 +
            C5272 * C133 + C32815 * C142) *
               C5267 +
           (C5423 + C5424 + C5425) * C5274 + (C5426 + C5427 + C5428) * C5268 +
           C5443 * C5275 + C5444 * C32826) *
              C32554 * C315 -
          ((C5272 * C1071 + C32815 * C1089 + C5271 * C1072 + C32845 * C1090 +
            C5270 * C1073 + C32858 * C1091) *
               C32826 +
           (C5272 * C1062 + C32815 * C1074 + C5271 * C1063 + C32845 * C1075 +
            C5270 * C1064 + C32858 * C1076) *
               C5275 +
           (C5272 * C630 + C32815 * C635 + C5271 * C629 + C32845 * C634 +
            C5270 * C628 + C32858 * C633) *
               C5268 +
           (C5272 * C620 + C32815 * C625 + C5271 * C619 + C32845 * C624 +
            C5270 * C618 + C32858 * C623) *
               C5274 +
           (C5272 * C330 + C32815 * C350 + C5271 * C331 + C32845 * C351 +
            C5270 * C332 + C32858 * C352) *
               C5267 +
           (C5272 * C320 + C32815 * C335 + C5271 * C321 + C32845 * C336 +
            C5270 * C322 + C32858 * C337) *
               C5273) *
              C32554 * C316 +
          ((C5270 * C323 + C32858 * C338 + C5271 * C324 + C32845 * C339 +
            C5272 * C325 + C32815 * C340) *
               C5273 +
           (C5270 * C343 + C32858 * C353 + C5271 * C344 + C32845 * C354 +
            C5272 * C345 + C32815 * C355) *
               C5267 +
           (C5270 * C1065 + C32858 * C1077 + C5271 * C1066 + C32845 * C1078 +
            C5272 * C1067 + C32815 * C1079) *
               C5274 +
           (C5270 * C1080 + C32858 * C1092 + C5271 * C1081 + C32845 * C1093 +
            C5272 * C1082 + C32815 * C1094) *
               C5268 +
           (C5270 * C1068 + C32858 * C1083 + C5271 * C1069 + C32845 * C1084 +
            C5272 * C1070 + C32815 * C1085) *
               C5275 +
           (C5270 * C1086 + C32858 * C1095 + C5271 * C1087 + C32845 * C1096 +
            C5272 * C1088 + C32815 * C1097) *
               C32826) *
              C32554 * C317) *
         C32499 * C32487) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C6132 * C119 + C32450 * C126) * C6133 +
           (C6132 * C131 + C32450 * C140) * C6127 +
           (C6132 * C217 + C32450 * C232) * C6134 +
           (C6132 * C227 + C32450 * C247) * C6128 +
           (C6132 * C218 + C32450 * C233) * C6135 +
           (C6132 * C238 + C32450 * C248) * C6129 +
           (C6132 * C872 + C32450 * C881) * C6136 +
           (C6132 * C878 + C32450 * C890) * C6130 +
           (C6132 * C873 + C32450 * C882) * C6137 +
           (C6132 * C885 + C32450 * C891) * C6131) *
              C32554 * C32513 * C32499 * C110 -
          ((C6132 * C886 + C32450 * C892) * C6131 +
           (C6132 * C874 + C32450 * C883) * C6137 +
           (C6132 * C877 + C32450 * C889) * C6130 +
           (C6132 * C871 + C32450 * C880) * C6136 +
           (C6132 * C239 + C32450 * C249) * C6129 +
           (C6132 * C219 + C32450 * C234) * C6135 +
           (C6132 * C226 + C32450 * C246) * C6128 +
           (C6132 * C216 + C32450 * C231) * C6134 +
           (C6132 * C132 + C32450 * C141) * C6127 +
           (C6132 * C120 + C32450 * C127) * C6133) *
              C32554 * C32513 * C32499 * C111 +
          ((C6132 * C121 + C32450 * C128) * C6133 +
           (C6132 * C133 + C32450 * C142) * C6127 +
           (C6132 * C215 + C32450 * C230) * C6134 +
           (C6132 * C225 + C32450 * C245) * C6128 +
           (C6132 * C220 + C32450 * C235) * C6135 +
           (C6132 * C240 + C32450 * C250) * C6129 +
           (C6132 * C870 + C32450 * C879) * C6136 +
           (C6132 * C876 + C32450 * C888) * C6130 +
           (C6132 * C875 + C32450 * C884) * C6137 +
           (C6132 * C887 + C32450 * C893) * C6131) *
              C32554 * C32513 * C32499 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C6132 * C119 + C32450 * C126) * C6133 +
           (C6132 * C131 + C32450 * C140) * C6127 + C6229 * C6134 +
           C6230 * C6128 + C6231 * C6135 + C6232 * C6129 + C6233 * C6136 +
           C6234 * C6130 + C6235 * C6137 + C6236 * C6131) *
              C32554 * C32513 * C209 -
          (C6237 * C6131 + C6238 * C6137 + C6236 * C6130 + C6235 * C6136 +
           C6234 * C6129 + C6233 * C6135 + C6232 * C6128 + C6231 * C6134 +
           C6230 * C6127 + C6229 * C6133) *
              C32554 * C32513 * C210 +
          (C6231 * C6133 + C6232 * C6127 + C6233 * C6134 + C6234 * C6128 +
           C6235 * C6135 + C6236 * C6129 + C6238 * C6136 + C6237 * C6130 +
           (C6132 * C6201 + C32450 * C6204) * C6137 +
           (C6132 * C6205 + C32450 * C6207) * C6131) *
              C32554 * C32513 * C211) *
         C32487) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C6132 * C119 + C32450 * C126) * C6133 +
           (C6132 * C131 + C32450 * C140) * C6127 + C6229 * C6134 +
           C6230 * C6128 + C6231 * C6135 + C6232 * C6129 + C6233 * C6136 +
           C6234 * C6130 + C6235 * C6137 + C6236 * C6131) *
              C32554 * C315 -
          ((C6132 * C6303 + C32450 * C6309) * C6131 +
           (C6132 * C6300 + C32450 * C6304) * C6137 +
           (C6132 * C1586 + C32450 * C1589) * C6130 +
           (C6132 * C1580 + C32450 * C1583) * C6136 +
           (C6132 * C1073 + C32450 * C1091) * C6129 +
           (C6132 * C1064 + C32450 * C1076) * C6135 +
           (C6132 * C628 + C32450 * C633) * C6128 +
           (C6132 * C618 + C32450 * C623) * C6134 +
           (C6132 * C332 + C32450 * C352) * C6127 +
           (C6132 * C322 + C32450 * C337) * C6133) *
              C32554 * C316 +
          ((C6132 * C323 + C32450 * C338) * C6133 +
           (C6132 * C343 + C32450 * C353) * C6127 +
           (C6132 * C1065 + C32450 * C1077) * C6134 +
           (C6132 * C1080 + C32450 * C1092) * C6128 +
           (C6132 * C1068 + C32450 * C1083) * C6135 +
           (C6132 * C1086 + C32450 * C1095) * C6129 +
           (C6132 * C6301 + C32450 * C6305) * C6136 +
           (C6132 * C6306 + C32450 * C6310) * C6130 +
           (C6132 * C6302 + C32450 * C6307) * C6137 +
           (C6132 * C6308 + C32450 * C6311) * C6131) *
              C32554 * C317) *
         C32499 * C32487) /
            (p * q * std::sqrt(p + q));
    d2ee[123] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C127 +
             C115 * C121 + C103 * C128 + C116 * C122 + C104 * C129 +
             C117 * C123 + C105 * C130) *
                C118 +
            (C113 * C131 + C101 * C140 + C114 * C132 + C102 * C141 +
             C115 * C133 + C103 * C142 + C116 * C134 + C104 * C143 +
             C117 * C135 + C105 * C144) *
                C32542) *
               C32554 * C530 -
           ((C117 * C328 + C105 * C348 + C116 * C329 + C104 * C349 +
             C115 * C330 + C103 * C350 + C114 * C331 + C102 * C351 +
             C113 * C332 + C101 * C352) *
                C32542 +
            (C117 * C318 + C105 * C333 + C116 * C319 + C104 * C334 +
             C115 * C320 + C103 * C335 + C114 * C321 + C102 * C336 +
             C113 * C322 + C101 * C337) *
                C118) *
               C32554 * C531) *
              C32499 * C442 +
          (((C113 * C321 + C101 * C336 + C114 * C320 + C102 * C335 +
             C115 * C319 + C103 * C334 + C116 * C318 + C104 * C333 +
             C117 * C532 + C105 * C533) *
                C118 +
            (C113 * C331 + C101 * C351 + C114 * C330 + C102 * C350 +
             C115 * C329 + C103 * C349 + C116 * C328 + C104 * C348 +
             C117 * C534 + C105 * C535) *
                C32542) *
               C32554 * C531 -
           ((C117 * C136 + C105 * C145 + C116 * C135 + C104 * C144 +
             C115 * C134 + C103 * C143 + C114 * C133 + C102 * C142 +
             C113 * C132 + C101 * C141) *
                C32542 +
            (C117 * C124 + C105 * C137 + C116 * C123 + C104 * C130 +
             C115 * C122 + C103 * C129 + C114 * C121 + C102 * C128 +
             C113 * C120 + C101 * C127) *
                C118) *
               C32554 * C530) *
              C32499 * C443)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C754 * C119 + C748 * C126 + C755 * C120 + C749 * C127 +
             C756 * C121 + C32815 * C128) *
                C757 +
            (C754 * C131 + C748 * C140 + C755 * C132 + C749 * C141 +
             C756 * C133 + C32815 * C142) *
                C32861 +
            (C931 + C932 + C933) * C758 + (C934 + C935 + C936) * C32849 +
            C951 * C759 + C952 * C32826) *
               C32554 * C530 -
           ((C756 * C1071 + C32815 * C1089 + C755 * C1072 + C749 * C1090 +
             C754 * C1073 + C748 * C1091) *
                C32826 +
            (C756 * C1062 + C32815 * C1074 + C755 * C1063 + C749 * C1075 +
             C754 * C1064 + C748 * C1076) *
                C759 +
            (C756 * C630 + C32815 * C635 + C755 * C629 + C749 * C634 +
             C754 * C628 + C748 * C633) *
                C32849 +
            (C756 * C620 + C32815 * C625 + C755 * C619 + C749 * C624 +
             C754 * C618 + C748 * C623) *
                C758 +
            (C756 * C330 + C32815 * C350 + C755 * C331 + C749 * C351 +
             C754 * C332 + C748 * C352) *
                C32861 +
            (C756 * C320 + C32815 * C335 + C755 * C321 + C749 * C336 +
             C754 * C322 + C748 * C337) *
                C757) *
               C32554 * C531) *
              C32499 * C442 +
          (((C754 * C321 + C748 * C336 + C755 * C320 + C749 * C335 +
             C756 * C319 + C32815 * C334) *
                C757 +
            (C754 * C331 + C748 * C351 + C755 * C330 + C749 * C350 +
             C756 * C329 + C32815 * C349) *
                C32861 +
            (C754 * C619 + C748 * C624 + C755 * C620 + C749 * C625 +
             C756 * C621 + C32815 * C626) *
                C758 +
            (C754 * C629 + C748 * C634 + C755 * C630 + C749 * C635 +
             C756 * C631 + C32815 * C636) *
                C32849 +
            (C754 * C1063 + C748 * C1075 + C755 * C1062 + C749 * C1074 +
             C756 * C1430 + C32815 * C1431) *
                C759 +
            (C754 * C1072 + C748 * C1090 + C755 * C1071 + C749 * C1089 +
             C756 * C1432 + C32815 * C1433) *
                C32826) *
               C32554 * C531 -
           ((C1284 + C1283 + C1282) * C32826 + (C1281 + C1280 + C1279) * C759 +
            (C1278 + C1277 + C1276) * C32849 + (C1275 + C1274 + C1273) * C758 +
            (C756 * C134 + C32815 * C143 + C755 * C133 + C749 * C142 +
             C754 * C132 + C748 * C141) *
                C32861 +
            (C756 * C122 + C32815 * C129 + C755 * C121 + C749 * C128 +
             C754 * C120 + C748 * C127) *
                C757) *
               C32554 * C530) *
              C32499 * C443)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C5270 * C119 + C32858 * C126 + C5271 * C120 + C32845 * C127 +
             C5272 * C121 + C32815 * C128) *
                C5273 +
            (C5270 * C131 + C32858 * C140 + C5271 * C132 + C32845 * C141 +
             C5272 * C133 + C32815 * C142) *
                C5267 +
            (C5423 + C5424 + C5425) * C5274 + (C5426 + C5427 + C5428) * C5268 +
            C5443 * C5275 + C5444 * C32826) *
               C32554 * C530 -
           ((C5272 * C1071 + C32815 * C1089 + C5271 * C1072 + C32845 * C1090 +
             C5270 * C1073 + C32858 * C1091) *
                C32826 +
            (C5272 * C1062 + C32815 * C1074 + C5271 * C1063 + C32845 * C1075 +
             C5270 * C1064 + C32858 * C1076) *
                C5275 +
            (C5272 * C630 + C32815 * C635 + C5271 * C629 + C32845 * C634 +
             C5270 * C628 + C32858 * C633) *
                C5268 +
            (C5272 * C620 + C32815 * C625 + C5271 * C619 + C32845 * C624 +
             C5270 * C618 + C32858 * C623) *
                C5274 +
            (C5272 * C330 + C32815 * C350 + C5271 * C331 + C32845 * C351 +
             C5270 * C332 + C32858 * C352) *
                C5267 +
            (C5272 * C320 + C32815 * C335 + C5271 * C321 + C32845 * C336 +
             C5270 * C322 + C32858 * C337) *
                C5273) *
               C32554 * C531) *
              C32499 * C442 +
          (((C5270 * C321 + C32858 * C336 + C5271 * C320 + C32845 * C335 +
             C5272 * C319 + C32815 * C334) *
                C5273 +
            (C5270 * C331 + C32858 * C351 + C5271 * C330 + C32845 * C350 +
             C5272 * C329 + C32815 * C349) *
                C5267 +
            (C5270 * C619 + C32858 * C624 + C5271 * C620 + C32845 * C625 +
             C5272 * C621 + C32815 * C626) *
                C5274 +
            (C5270 * C629 + C32858 * C634 + C5271 * C630 + C32845 * C635 +
             C5272 * C631 + C32815 * C636) *
                C5268 +
            (C5270 * C1063 + C32858 * C1075 + C5271 * C1062 + C32845 * C1074 +
             C5272 * C1430 + C32815 * C1431) *
                C5275 +
            (C5270 * C1072 + C32858 * C1090 + C5271 * C1071 + C32845 * C1089 +
             C5272 * C1432 + C32815 * C1433) *
                C32826) *
               C32554 * C531 -
           ((C5736 + C5735 + C5734) * C32826 + (C5733 + C5732 + C5731) * C5275 +
            (C5730 + C5729 + C5728) * C5268 + (C5727 + C5726 + C5725) * C5274 +
            (C5272 * C134 + C32815 * C143 + C5271 * C133 + C32845 * C142 +
             C5270 * C132 + C32858 * C141) *
                C5267 +
            (C5272 * C122 + C32815 * C129 + C5271 * C121 + C32845 * C128 +
             C5270 * C120 + C32858 * C127) *
                C5273) *
               C32554 * C530) *
              C32499 * C443)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C6132 * C119 + C32450 * C126) * C6133 +
            (C6132 * C131 + C32450 * C140) * C6127 + C6229 * C6134 +
            C6230 * C6128 + C6231 * C6135 + C6232 * C6129 + C6233 * C6136 +
            C6234 * C6130 + C6235 * C6137 + C6236 * C6131) *
               C32554 * C530 -
           ((C6132 * C6303 + C32450 * C6309) * C6131 +
            (C6132 * C6300 + C32450 * C6304) * C6137 +
            (C6132 * C1586 + C32450 * C1589) * C6130 +
            (C6132 * C1580 + C32450 * C1583) * C6136 +
            (C6132 * C1073 + C32450 * C1091) * C6129 +
            (C6132 * C1064 + C32450 * C1076) * C6135 +
            (C6132 * C628 + C32450 * C633) * C6128 +
            (C6132 * C618 + C32450 * C623) * C6134 +
            (C6132 * C332 + C32450 * C352) * C6127 +
            (C6132 * C322 + C32450 * C337) * C6133) *
               C32554 * C531) *
              C32499 * C442 +
          (((C6132 * C321 + C32450 * C336) * C6133 +
            (C6132 * C331 + C32450 * C351) * C6127 +
            (C6132 * C619 + C32450 * C624) * C6134 +
            (C6132 * C629 + C32450 * C634) * C6128 +
            (C6132 * C1063 + C32450 * C1075) * C6135 +
            (C6132 * C1072 + C32450 * C1090) * C6129 +
            (C6132 * C1581 + C32450 * C1584) * C6136 +
            (C6132 * C1587 + C32450 * C1590) * C6130 +
            (C6132 * C6504 + C32450 * C6505) * C6137 +
            (C6132 * C6506 + C32450 * C6507) * C6131) *
               C32554 * C531 -
           (C6422 * C6131 + C6421 * C6137 + C6420 * C6130 + C6419 * C6136 +
            C6418 * C6129 + C6417 * C6135 + C6416 * C6128 + C6415 * C6134 +
            (C6132 * C132 + C32450 * C141) * C6127 +
            (C6132 * C120 + C32450 * C127) * C6133) *
               C32554 * C530) *
              C32499 * C443)) /
            (p * q * std::sqrt(p + q));
    d2ee[124] +=
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C127 +
            C115 * C121 + C103 * C128 + C116 * C122 + C104 * C129 +
            C117 * C123 + C105 * C130) *
               C118 +
           (C113 * C131 + C101 * C140 + C114 * C132 + C102 * C141 +
            C115 * C133 + C103 * C142 + C116 * C134 + C104 * C143 +
            C117 * C135 + C105 * C144) *
               C32542) *
              C32554 * C32513 * C32499 * C110 -
          ((C117 * C136 + C105 * C145 + C116 * C135 + C104 * C144 +
            C115 * C134 + C103 * C143 + C114 * C133 + C102 * C142 +
            C113 * C132 + C101 * C141) *
               C32542 +
           (C117 * C124 + C105 * C137 + C116 * C123 + C104 * C130 +
            C115 * C122 + C103 * C129 + C114 * C121 + C102 * C128 +
            C113 * C120 + C101 * C127) *
               C118) *
              C32554 * C32513 * C32499 * C111 +
          ((C113 * C121 + C101 * C128 + C114 * C122 + C102 * C129 +
            C115 * C123 + C103 * C130 + C116 * C124 + C104 * C137 +
            C117 * C125 + C105 * C138) *
               C118 +
           (C113 * C133 + C101 * C142 + C114 * C134 + C102 * C143 +
            C115 * C135 + C103 * C144 + C116 * C136 + C104 * C145 +
            C117 * C139 + C105 * C146) *
               C32542) *
              C32554 * C32513 * C32499 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C127 +
            C115 * C121 + C103 * C128 + C116 * C122 + C104 * C129 +
            C117 * C123 + C105 * C130) *
               C118 +
           (C113 * C131 + C101 * C140 + C114 * C132 + C102 * C141 +
            C115 * C133 + C103 * C142 + C116 * C134 + C104 * C143 +
            C117 * C135 + C105 * C144) *
               C32542) *
              C32554 * C32513 * C209 -
          ((C117 * C223 + C105 * C243 + C116 * C224 + C104 * C244 +
            C115 * C225 + C103 * C245 + C114 * C226 + C102 * C246 +
            C113 * C227 + C101 * C247) *
               C32542 +
           (C117 * C213 + C105 * C228 + C116 * C214 + C104 * C229 +
            C115 * C215 + C103 * C230 + C114 * C216 + C102 * C231 +
            C113 * C217 + C101 * C232) *
               C118) *
              C32554 * C32513 * C210 +
          ((C113 * C218 + C101 * C233 + C114 * C219 + C102 * C234 +
            C115 * C220 + C103 * C235 + C116 * C221 + C104 * C236 +
            C117 * C222 + C105 * C237) *
               C118 +
           (C113 * C238 + C101 * C248 + C114 * C239 + C102 * C249 +
            C115 * C240 + C103 * C250 + C116 * C241 + C104 * C251 +
            C117 * C242 + C105 * C252) *
               C32542) *
              C32554 * C32513 * C211) *
         C32487) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((C754 * C119 + C748 * C126 + C755 * C120 + C749 * C127 +
            C756 * C121 + C32815 * C128) *
               C757 +
           (C754 * C131 + C748 * C140 + C755 * C132 + C749 * C141 +
            C756 * C133 + C32815 * C142) *
               C32861 +
           (C754 * C217 + C748 * C232 + C755 * C216 + C749 * C231 +
            C756 * C215 + C32815 * C230) *
               C758 +
           (C754 * C227 + C748 * C247 + C755 * C226 + C749 * C246 +
            C756 * C225 + C32815 * C245) *
               C32849 +
           (C754 * C218 + C748 * C233 + C755 * C219 + C749 * C234 +
            C756 * C220 + C32815 * C235) *
               C759 +
           (C754 * C238 + C748 * C248 + C755 * C239 + C749 * C249 +
            C756 * C240 + C32815 * C250) *
               C32826) *
              C32554 * C32513 * C32499 * C110 -
          ((C756 * C241 + C32815 * C251 + C755 * C240 + C749 * C250 +
            C754 * C239 + C748 * C249) *
               C32826 +
           (C756 * C221 + C32815 * C236 + C755 * C220 + C749 * C235 +
            C754 * C219 + C748 * C234) *
               C759 +
           (C756 * C224 + C32815 * C244 + C755 * C225 + C749 * C245 +
            C754 * C226 + C748 * C246) *
               C32849 +
           (C756 * C214 + C32815 * C229 + C755 * C215 + C749 * C230 +
            C754 * C216 + C748 * C231) *
               C758 +
           (C756 * C134 + C32815 * C143 + C755 * C133 + C749 * C142 +
            C754 * C132 + C748 * C141) *
               C32861 +
           (C756 * C122 + C32815 * C129 + C755 * C121 + C749 * C128 +
            C754 * C120 + C748 * C127) *
               C757) *
              C32554 * C32513 * C32499 * C111 +
          ((C754 * C121 + C748 * C128 + C755 * C122 + C749 * C129 +
            C756 * C123 + C32815 * C130) *
               C757 +
           (C754 * C133 + C748 * C142 + C755 * C134 + C749 * C143 +
            C756 * C135 + C32815 * C144) *
               C32861 +
           (C754 * C215 + C748 * C230 + C755 * C214 + C749 * C229 +
            C756 * C213 + C32815 * C228) *
               C758 +
           (C754 * C225 + C748 * C245 + C755 * C224 + C749 * C244 +
            C756 * C223 + C32815 * C243) *
               C32849 +
           (C754 * C220 + C748 * C235 + C755 * C221 + C749 * C236 +
            C756 * C222 + C32815 * C237) *
               C759 +
           (C754 * C240 + C748 * C250 + C755 * C241 + C749 * C251 +
            C756 * C242 + C32815 * C252) *
               C32826) *
              C32554 * C32513 * C32499 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((C754 * C119 + C748 * C126 + C755 * C120 + C749 * C127 +
            C756 * C121 + C32815 * C128) *
               C757 +
           (C754 * C131 + C748 * C140 + C755 * C132 + C749 * C141 +
            C756 * C133 + C32815 * C142) *
               C32861 +
           (C931 + C932 + C933) * C758 + (C934 + C935 + C936) * C32849 +
           C951 * C759 + C952 * C32826) *
              C32554 * C32513 * C209 -
          ((C943 + C944 + C945) * C32826 + (C946 + C947 + C948) * C759 +
           (C942 + C941 + C940) * C32849 + (C939 + C938 + C937) * C758 +
           (C936 + C935 + C934) * C32861 + (C933 + C932 + C931) * C757) *
              C32554 * C32513 * C210 +
          (C951 * C757 + C952 * C32861 + (C948 + C947 + C946) * C758 +
           (C945 + C944 + C943) * C32849 +
           (C754 * C873 + C748 * C882 + C755 * C874 + C749 * C883 +
            C756 * C875 + C32815 * C884) *
               C759 +
           (C754 * C885 + C748 * C891 + C755 * C886 + C749 * C892 +
            C756 * C887 + C32815 * C893) *
               C32826) *
              C32554 * C32513 * C211) *
         C32487) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((C5270 * C119 + C32858 * C126 + C5271 * C120 + C32845 * C127 +
            C5272 * C121 + C32815 * C128) *
               C5273 +
           (C5270 * C131 + C32858 * C140 + C5271 * C132 + C32845 * C141 +
            C5272 * C133 + C32815 * C142) *
               C5267 +
           (C5270 * C217 + C32858 * C232 + C5271 * C216 + C32845 * C231 +
            C5272 * C215 + C32815 * C230) *
               C5274 +
           (C5270 * C227 + C32858 * C247 + C5271 * C226 + C32845 * C246 +
            C5272 * C225 + C32815 * C245) *
               C5268 +
           (C5270 * C218 + C32858 * C233 + C5271 * C219 + C32845 * C234 +
            C5272 * C220 + C32815 * C235) *
               C5275 +
           (C5270 * C238 + C32858 * C248 + C5271 * C239 + C32845 * C249 +
            C5272 * C240 + C32815 * C250) *
               C32826) *
              C32554 * C32513 * C32499 * C110 -
          ((C5272 * C241 + C32815 * C251 + C5271 * C240 + C32845 * C250 +
            C5270 * C239 + C32858 * C249) *
               C32826 +
           (C5272 * C221 + C32815 * C236 + C5271 * C220 + C32845 * C235 +
            C5270 * C219 + C32858 * C234) *
               C5275 +
           (C5272 * C224 + C32815 * C244 + C5271 * C225 + C32845 * C245 +
            C5270 * C226 + C32858 * C246) *
               C5268 +
           (C5272 * C214 + C32815 * C229 + C5271 * C215 + C32845 * C230 +
            C5270 * C216 + C32858 * C231) *
               C5274 +
           (C5272 * C134 + C32815 * C143 + C5271 * C133 + C32845 * C142 +
            C5270 * C132 + C32858 * C141) *
               C5267 +
           (C5272 * C122 + C32815 * C129 + C5271 * C121 + C32845 * C128 +
            C5270 * C120 + C32858 * C127) *
               C5273) *
              C32554 * C32513 * C32499 * C111 +
          ((C5270 * C121 + C32858 * C128 + C5271 * C122 + C32845 * C129 +
            C5272 * C123 + C32815 * C130) *
               C5273 +
           (C5270 * C133 + C32858 * C142 + C5271 * C134 + C32845 * C143 +
            C5272 * C135 + C32815 * C144) *
               C5267 +
           (C5270 * C215 + C32858 * C230 + C5271 * C214 + C32845 * C229 +
            C5272 * C213 + C32815 * C228) *
               C5274 +
           (C5270 * C225 + C32858 * C245 + C5271 * C224 + C32845 * C244 +
            C5272 * C223 + C32815 * C243) *
               C5268 +
           (C5270 * C220 + C32858 * C235 + C5271 * C221 + C32845 * C236 +
            C5272 * C222 + C32815 * C237) *
               C5275 +
           (C5270 * C240 + C32858 * C250 + C5271 * C241 + C32845 * C251 +
            C5272 * C242 + C32815 * C252) *
               C32826) *
              C32554 * C32513 * C32499 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((C5270 * C119 + C32858 * C126 + C5271 * C120 + C32845 * C127 +
            C5272 * C121 + C32815 * C128) *
               C5273 +
           (C5270 * C131 + C32858 * C140 + C5271 * C132 + C32845 * C141 +
            C5272 * C133 + C32815 * C142) *
               C5267 +
           (C5423 + C5424 + C5425) * C5274 + (C5426 + C5427 + C5428) * C5268 +
           C5443 * C5275 + C5444 * C32826) *
              C32554 * C32513 * C209 -
          ((C5435 + C5436 + C5437) * C32826 + (C5438 + C5439 + C5440) * C5275 +
           (C5434 + C5433 + C5432) * C5268 + (C5431 + C5430 + C5429) * C5274 +
           (C5428 + C5427 + C5426) * C5267 + (C5425 + C5424 + C5423) * C5273) *
              C32554 * C32513 * C210 +
          (C5443 * C5273 + C5444 * C5267 + (C5440 + C5439 + C5438) * C5274 +
           (C5437 + C5436 + C5435) * C5268 +
           (C5270 * C873 + C32858 * C882 + C5271 * C874 + C32845 * C883 +
            C5272 * C875 + C32815 * C884) *
               C5275 +
           (C5270 * C885 + C32858 * C891 + C5271 * C886 + C32845 * C892 +
            C5272 * C887 + C32815 * C893) *
               C32826) *
              C32554 * C32513 * C211) *
         C32487) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((C6132 * C119 + C32450 * C126) * C6133 +
           (C6132 * C131 + C32450 * C140) * C6127 +
           (C6132 * C217 + C32450 * C232) * C6134 +
           (C6132 * C227 + C32450 * C247) * C6128 +
           (C6132 * C218 + C32450 * C233) * C6135 +
           (C6132 * C238 + C32450 * C248) * C6129 +
           (C6132 * C872 + C32450 * C881) * C6136 +
           (C6132 * C878 + C32450 * C890) * C6130 +
           (C6132 * C873 + C32450 * C882) * C6137 +
           (C6132 * C885 + C32450 * C891) * C6131) *
              C32554 * C32513 * C32499 * C110 -
          ((C6132 * C886 + C32450 * C892) * C6131 +
           (C6132 * C874 + C32450 * C883) * C6137 +
           (C6132 * C877 + C32450 * C889) * C6130 +
           (C6132 * C871 + C32450 * C880) * C6136 +
           (C6132 * C239 + C32450 * C249) * C6129 +
           (C6132 * C219 + C32450 * C234) * C6135 +
           (C6132 * C226 + C32450 * C246) * C6128 +
           (C6132 * C216 + C32450 * C231) * C6134 +
           (C6132 * C132 + C32450 * C141) * C6127 +
           (C6132 * C120 + C32450 * C127) * C6133) *
              C32554 * C32513 * C32499 * C111 +
          ((C6132 * C121 + C32450 * C128) * C6133 +
           (C6132 * C133 + C32450 * C142) * C6127 +
           (C6132 * C215 + C32450 * C230) * C6134 +
           (C6132 * C225 + C32450 * C245) * C6128 +
           (C6132 * C220 + C32450 * C235) * C6135 +
           (C6132 * C240 + C32450 * C250) * C6129 +
           (C6132 * C870 + C32450 * C879) * C6136 +
           (C6132 * C876 + C32450 * C888) * C6130 +
           (C6132 * C875 + C32450 * C884) * C6137 +
           (C6132 * C887 + C32450 * C893) * C6131) *
              C32554 * C32513 * C32499 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((C6132 * C119 + C32450 * C126) * C6133 +
           (C6132 * C131 + C32450 * C140) * C6127 + C6229 * C6134 +
           C6230 * C6128 + C6231 * C6135 + C6232 * C6129 + C6233 * C6136 +
           C6234 * C6130 + C6235 * C6137 + C6236 * C6131) *
              C32554 * C32513 * C209 -
          (C6237 * C6131 + C6238 * C6137 + C6236 * C6130 + C6235 * C6136 +
           C6234 * C6129 + C6233 * C6135 + C6232 * C6128 + C6231 * C6134 +
           C6230 * C6127 + C6229 * C6133) *
              C32554 * C32513 * C210 +
          (C6231 * C6133 + C6232 * C6127 + C6233 * C6134 + C6234 * C6128 +
           C6235 * C6135 + C6236 * C6129 + C6238 * C6136 + C6237 * C6130 +
           (C6132 * C6201 + C32450 * C6204) * C6137 +
           (C6132 * C6205 + C32450 * C6207) * C6131) *
              C32554 * C32513 * C211) *
         C32487) /
            (p * q * std::sqrt(p + q));
}
