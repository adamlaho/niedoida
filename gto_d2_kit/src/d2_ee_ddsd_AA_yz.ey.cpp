/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

#include "gto_d2_kit/d2_ee_ddsd_AA_yz.hpp"
#include <cmath>
/*

*/
#pragma GCC optimize("O0")
namespace {
    const double Pi = M_PI;
}
#pragma GCC optimize("O0")

void second_derivative_ee_2202_11_23(const double ae,
                                     const double xA,
                                     const double yA,
                                     const double zA,
                                     const double be,
                                     const double xB,
                                     const double yB,
                                     const double zB,
                                     const double ce,
                                     const double xC,
                                     const double yC,
                                     const double zC,
                                     const double de,
                                     const double xD,
                                     const double yD,
                                     const double zD,
                                     const double* const bs,
                                     double* const d2ee)
{
    const double p = ae + be;
    const double q = ce + de;
    const double xP = (ae * xA + be * xB) / p;
    const double yP = (ae * yA + be * yB) / p;
    const double zP = (ae * zA + be * zB) / p;
    const double xQ = (ce * xC + de * xD) / q;
    const double yQ = (ce * yC + de * yD) / q;
    const double zQ = (ce * zC + de * zD) / q;
    const double C31509 = ae * be;
    const double C31508 = ae + be;
    const double C31507 = 0 * be;
    const double C31506 = yA - yB;
    const double C31526 = 0 * be;
    const double C31525 = zA - zB;
    const double C31566 = 0 * ae;
    const double C31561 = 0 * be;
    const double C31560 = 0 * be;
    const double C31611 = 0 * be;
    const double C31653 = 0 * ae;
    const double C31648 = 0 * be;
    const double C31647 = 0 * be;
    const double C31698 = 0 * be;
    const double C31760 = std::pow(ae, 2);
    const double C31759 = zP - zQ;
    const double C31758 = yP - yQ;
    const double C31757 = p + q;
    const double C31756 = p * q;
    const double C31768 = bs[4];
    const double C31766 = xP - xQ;
    const double C31773 = bs[5];
    const double C31780 = bs[6];
    const double C31788 = bs[7];
    const double C31808 = bs[3];
    const double C32172 = bs[2];
    const double C115 = bs[0];
    const double C32526 = xA - xB;
    const double C32561 = ce + de;
    const double C32560 = ce * de;
    const double C32559 = xC - xD;
    const double C32573 = yC - yD;
    const double C32587 = zC - zD;
    const double C31510 = std::pow(C31508, 2);
    const double C31544 = 2 * C31508;
    const double C31562 = C31507 / C31508;
    const double C31511 = C31509 * C31506;
    const double C31563 = C31506 * C31507;
    const double C32611 = std::pow(C31506, 2);
    const double C32669 = C31506 * be;
    const double C32667 = C31506 * ae;
    const double C31649 = C31526 / C31508;
    const double C31527 = C31509 * C31525;
    const double C31650 = C31525 * C31526;
    const double C32628 = std::pow(C31525, 2);
    const double C32711 = C31525 * be;
    const double C32709 = C31525 * ae;
    const double C31573 = C31566 / C31508;
    const double C31568 = C31506 * C31561;
    const double C31612 = C31611 / C31508;
    const double C31660 = C31653 / C31508;
    const double C31655 = C31525 * C31648;
    const double C31699 = C31698 / C31508;
    const double C31797 = C31759 * ae;
    const double C31953 = std::pow(C31759, 2);
    const double C31762 = C31758 * C31759;
    const double C31838 = C31758 * ae;
    const double C31893 = std::pow(C31758, 2);
    const double C31761 = 2 * C31756;
    const double C31774 = std::pow(C31766, 2);
    const double C32529 = C32526 * be;
    const double C32528 = C32526 * ae;
    const double C32527 = std::pow(C32526, 2);
    const double C32866 = 2 * C32561;
    const double C32865 = std::pow(C32561, 2);
    const double C32562 = std::pow(C32559, 2);
    const double C32864 = C32559 * ce;
    const double C32574 = std::pow(C32573, 2);
    const double C32867 = C32573 * ce;
    const double C32588 = std::pow(C32587, 2);
    const double C32868 = C32587 * ce;
    const double C31512 = 2 * C31510;
    const double C136 = (std::pow((2 * p * q) / (p + q), 2) * bs[2] *
                         (yP - yQ) * (zP - zQ) * std::pow(ae, 2)) /
                        C31510;
    const double C137 = ((xP - xQ) * std::pow(-(2 * p * q) / (p + q), 3) *
                         bs[3] * (yP - yQ) * (zP - zQ) * std::pow(ae, 2)) /
                        C31510;
    const double C32862 = 4 * C31510;
    const double C32541 = std::pow(C31544, -1);
    const double C32863 = C31510 * C31544;
    const double C32859 = std::pow(C31544, -2);
    const double C31571 = C31563 / C31508;
    const double C32612 = C32611 * C31509;
    const double C32869 = std::pow(C32667, 2);
    const double C31658 = C31650 / C31508;
    const double C32629 = C32628 * C31509;
    const double C32871 = std::pow(C32709, 2);
    const double C31574 = C31568 / C31508;
    const double C31661 = C31655 / C31508;
    const double C31798 = C31773 * C31797;
    const double C31801 = C31768 * C31797;
    const double C31809 = C31808 * C31797;
    const double C31818 = C31780 * C31797;
    const double C31828 = C31788 * C31797;
    const double C31764 = C31762 * C31760;
    const double C31839 = C31773 * C31838;
    const double C31842 = C31768 * C31838;
    const double C31848 = C31808 * C31838;
    const double C31857 = C31780 * C31838;
    const double C31867 = C31788 * C31838;
    const double C31763 = C31761 / C31757;
    const double C122 = (-(bs[1] * C31797 * C31761) / C31757) / C31508;
    const double C123 = (-(bs[1] * C31838 * C31761) / C31757) / C31508;
    const double C116 = -(C31766 * bs[1] * C31761) / C31757;
    const double C256 = -(C31758 * bs[1] * C31761) / C31757;
    const double C361 = -(C31759 * bs[1] * C31761) / C31757;
    const double C32852 = std::pow(C32528, 2);
    const double C32530 = C32527 * C31509;
    const double C32899 = std::pow(C32866, -2);
    const double C32897 = std::pow(C32866, -1);
    const double C32563 = C32562 * C32560;
    const double C32575 = C32574 * C32560;
    const double C32589 = C32588 * C32560;
    const double C31565 = C31507 / C31512;
    const double C31570 = C31561 / C31512;
    const double C31569 = C31560 / C31512;
    const double C31652 = C31526 / C31512;
    const double C31657 = C31648 / C31512;
    const double C31656 = C31647 / C31512;
    const double C32895 = C31508 * C32862;
    const double C32896 = 4 * C32863;
    const double C31575 = 0 - C31571;
    const double C32613 = C32612 / C31508;
    const double C31662 = 0 - C31658;
    const double C32630 = C32629 / C31508;
    const double C31578 = 0 - C31574;
    const double C31665 = 0 - C31661;
    const double C31769 = C31768 * C31764;
    const double C31776 = C31773 * C31764;
    const double C31781 = C31780 * C31764;
    const double C31790 = C31788 * C31764;
    const double C31767 = std::pow(C31763, 4);
    const double C31772 = -C31763;
    const double C31779 = std::pow(C31763, 6);
    const double C138 =
        (std::pow(-C31763, 3) * bs[3] * C31764 +
         std::pow(C31763, 4) * bs[4] * C31764 * std::pow(xP - xQ, 2)) /
        C31510;
    const double C32171 = std::pow(C31763, 2);
    const double C124 =
        (C31766 * std::pow(C31763, 2) * bs[2] * C31797) / C31508;
    const double C125 =
        (C31766 * std::pow(C31763, 2) * bs[2] * C31838) / C31508;
    const double C270 =
        (C31758 * std::pow(C31763, 2) * bs[2] * C31838) / C31508 -
        (ae * bs[1] * C31761) / (C31757 * C31508);
    const double C271 =
        (C31758 * std::pow(C31763, 2) * bs[2] * C31797) / C31508;
    const double C32531 = C32530 / C31508;
    const double C32564 = C32563 / C32561;
    const double C32576 = C32575 / C32561;
    const double C32590 = C32589 / C32561;
    const double C31579 = C31575 * ae;
    const double C32614 = -C32613;
    const double C31666 = C31662 * ae;
    const double C32631 = -C32630;
    const double C31582 = C31578 * ae;
    const double C31669 = C31665 * ae;
    const double C31770 = C31767 * C31769;
    const double C31802 = C31767 * C31801;
    const double C31843 = C31767 * C31842;
    const double C31882 = C31768 * C31767;
    const double C31775 = std::pow(C31772, 5);
    const double C31787 = std::pow(C31772, 7);
    const double C31807 = std::pow(C31772, 3);
    const double C286 = (ae * std::pow(C31763, 2) * bs[2] * C31797 +
                         C31758 * std::pow(C31772, 3) * bs[3] * C31764) /
                        C31510;
    const double C31782 = C31779 * C31781;
    const double C31820 = C31779 * C31818;
    const double C31859 = C31779 * C31857;
    const double C31927 = C31780 * C31779;
    const double C32173 = C32172 * C32171;
    const double C375 = (C31759 * C32171 * C32172 * C31838) / C31508;
    const double C376 = (C31759 * C32171 * C32172 * C31797) / C31508 -
                        (ae * bs[1] * C31761) / (C31757 * C31508);
    const double C32532 = -C32531;
    const double C32565 = -C32564;
    const double C32577 = -C32576;
    const double C32591 = -C32590;
    const double C31583 = C31579 / C31508;
    const double C32615 = std::exp(C32614);
    const double C31670 = C31666 / C31508;
    const double C32632 = std::exp(C32631);
    const double C31586 = C31582 / C31508;
    const double C31673 = C31669 / C31508;
    const double C139 = (2 * C31766 * C31770 +
                         C31766 * (C31770 + std::pow(-C31763, 5) * bs[5] *
                                                C31764 * std::pow(C31766, 2))) /
                        C31510;
    const double C285 = (ae * C31766 * std::pow(C31772, 3) * bs[3] * C31797 +
                         C31758 * C31766 * C31770) /
                        C31510;
    const double C31812 = C31766 * C31802;
    const double C31891 = ae * C31802;
    const double C31890 = C31758 * C31802;
    const double C32290 = C31759 * C31802;
    const double C31851 = C31766 * C31843;
    const double C31937 = ae * C31843;
    const double C31952 = C31759 * C31843;
    const double C32233 = C31758 * C31843;
    const double C31915 = C31766 * C31882;
    const double C31920 = C31758 * C31882;
    const double C32007 = C31882 * ae;
    const double C32092 = C31759 * C31882;
    const double C32179 = C31882 * C31774;
    const double C32236 = C31882 * C31893;
    const double C32292 = C31882 * C31953;
    const double C31777 = C31775 * C31776;
    const double C31799 = C31775 * C31798;
    const double C31840 = C31775 * C31839;
    const double C31884 = C31773 * C31775;
    const double C31791 = C31787 * C31790;
    const double C31830 = C31787 * C31828;
    const double C31869 = C31787 * C31867;
    const double C31810 = C31807 * C31809;
    const double C31849 = C31807 * C31848;
    const double C31917 = C31808 * C31807;
    const double C390 =
        (ae * C31766 * C31807 * C31808 * C31838 + C31759 * C31766 * C31770) /
        C31510;
    const double C391 = (ae * std::pow(C31763, 2) * bs[2] * C31838 +
                         C31759 * C31807 * C31808 * C31764) /
                        C31510;
    const double C31783 = C31782 * C31774;
    const double C31786 = C31766 * C31782;
    const double C31972 = C31758 * C31782;
    const double C32009 = C31759 * C31782;
    const double C31821 = C31820 * C31774;
    const double C31827 = C31766 * C31820;
    const double C31973 = C31820 * C31893;
    const double C31987 = ae * C31820;
    const double C31986 = C31758 * C31820;
    const double C32025 = C31759 * C31820;
    const double C31860 = C31859 * C31774;
    const double C31866 = C31766 * C31859;
    const double C32029 = ae * C31859;
    const double C32028 = C31759 * C31859;
    const double C32094 = C31859 * C31953;
    const double C32335 = C31758 * C31859;
    const double C31928 = C31927 * C31774;
    const double C32033 = C31758 * C31927;
    const double C32032 = C31927 * C31893;
    const double C32071 = C31766 * C31927;
    const double C32100 = C31927 * C31953;
    const double C117 = C32173 * C31774 - (bs[1] * C31761) / C31757;
    const double C255 = C31758 * C31766 * C32173;
    const double C257 = C32173 * C31893 - (bs[1] * C31761) / C31757;
    const double C360 = C31759 * C31766 * C32173;
    const double C362 = C32173 * C31953 - (bs[1] * C31761) / C31757;
    const double C721 = C31759 * C31758 * C32173;
    const double C32533 = std::exp(C32532);
    const double C32566 = std::exp(C32565);
    const double C32578 = std::exp(C32577);
    const double C32592 = std::exp(C32591);
    const double C31587 = C31583 - C31570;
    const double C31513 = C31511 * C32615;
    const double C114 = -(2 * ae * be * (yA - yB) * C32615) / (ae + be);
    const double C32668 = C32615 / C31544;
    const double C32670 = C32615 * C32667;
    const double C32677 = C32541 * C32615;
    const double C32875 = C32615 * C32669;
    const double C32904 = C32859 * C32615;
    const double C32902 = C32615 * C32869;
    const double C31674 = C31670 - C31657;
    const double C151 = C32632 * C138;
    const double C147 = C32632 * C137;
    const double C145 = C32632 * C124;
    const double C1039 = C32632 * C286;
    const double C1037 = C32632 * C271;
    const double C31528 = C31527 * C32632;
    const double C113 = -(2 * ae * be * (zA - zB) * C32632) / (ae + be);
    const double C32710 = C32632 / C31544;
    const double C32712 = C32632 * C32709;
    const double C32719 = C32541 * C32632;
    const double C32881 = C32632 * C32711;
    const double C32907 = C32859 * C32632;
    const double C32905 = C32632 * C32871;
    const double C31590 = C31586 - C31569;
    const double C31677 = C31673 - C31656;
    const double C155 = C32632 * C139;
    const double C501 = C32632 * C285;
    const double C32183 = 2 * C31915;
    const double C32243 = C31758 * C31915;
    const double C32242 = C31915 * ae;
    const double C32298 = C31759 * C31915;
    const double C32324 = 2 * C31920;
    const double C32323 = C31920 * ae;
    const double C32372 = C31759 * C31920;
    const double C32394 = 2 * C32092;
    const double C32393 = C32092 * ae;
    const double C31887 = C31766 * C31777;
    const double C31892 = C31758 * C31777;
    const double C31938 = C31759 * C31777;
    const double C140 =
        (3 * (C31770 + C31777 * C31774) +
         C31766 * (2 * C31766 * C31777 +
                   C31766 * (C31777 +
                             std::pow(C31763, 6) * bs[6] * C31764 * C31774))) /
        C31510;
    const double C284 =
        (ae * (std::pow(C31772, 3) * bs[3] * C31797 + C31802 * C31774) +
         C31758 * (C31770 + C31777 * C31774)) /
        C31510;
    const double C288 = (C31766 * C31770 + ae * C31758 * C31812 +
                         C31758 * (ae * C31812 + C31758 * C31766 * C31777)) /
                        C31510;
    const double C389 = (ae * (C31807 * C31808 * C31838 + C31843 * C31774) +
                         C31759 * (C31770 + C31777 * C31774)) /
                        C31510;
    const double C393 = (C31766 * C31770 + ae * C31759 * C31851 +
                         C31759 * (ae * C31851 + C31759 * C31766 * C31777)) /
                        C31510;
    const double C737 =
        (ae * (C31759 * C31812 + C31766 * C31808 * C31807 * ae) +
         C31758 * (ae * C31851 + C31759 * C31766 * C31777)) /
        C31510;
    const double C31814 = C31799 * C31774;
    const double C31817 = C31766 * C31799;
    const double C31895 = C31799 * C31893;
    const double C31971 = ae * C31799;
    const double C31970 = C31758 * C31799;
    const double C32006 = C31759 * C31799;
    const double C31853 = C31840 * C31774;
    const double C31856 = C31766 * C31840;
    const double C31954 = C31840 * C31953;
    const double C32008 = ae * C31840;
    const double C32018 = C31759 * C31840;
    const double C1206 =
        (C31770 + ae * C31759 * C31843 +
         C31759 * (ae * C31843 + C31759 * C31777) +
         ae * (C31890 + C31759 * (C31759 * C31758 * C31799 + C31920 * ae) +
               C31759 * C31920 * ae) +
         C31758 * (ae * (C31802 + C31759 * (C31759 * C31799 + C31882 * ae) +
                         C31759 * C31882 * ae) +
                   C31758 * (C31777 + ae * C31759 * C31840 +
                             C31759 * (ae * C31840 + C31759 * C31782)))) /
        C31510;
    const double C32322 = C31758 * C31840;
    const double C31912 = C31884 * C31774;
    const double C31923 = C31766 * C31884;
    const double C32010 = C31884 * C31893;
    const double C32020 = C31758 * C31884;
    const double C32027 = C31759 * C31884;
    const double C32026 = C31884 * ae;
    const double C32093 = C31884 * C31953;
    const double C31792 = C31791 * C31774;
    const double C31988 = C31758 * C31791;
    const double C32030 = C31759 * C31791;
    const double C32053 = C31766 * C31791;
    const double C31831 = C31830 * C31774;
    const double C31990 = C31830 * C31893;
    const double C32054 = C31766 * C31830;
    const double C31870 = C31869 * C31774;
    const double C32101 = C31869 * C31953;
    const double C32109 = C31766 * C31869;
    const double C287 = (C31807 * C31808 * C31764 + ae * C31758 * C31810 +
                         C31758 * (ae * C31810 + C31758 * C31770)) /
                        C31510;
    const double C1031 = (2 * (ae * C31810 + C31758 * C31770) +
                          ae * (C31810 + C31802 * std::pow(C31758, 2)) +
                          C31758 * (C31770 + ae * C31758 * C31802 +
                                    C31758 * (ae * C31802 + C31758 * C31777))) /
                         C31510;
    const double C126 =
        (std::pow(C31763, 2) * bs[2] * C31797 + C31810 * C31774) / C31508;
    const double C128 =
        (2 * C31766 * C31810 + C31766 * (C31810 + C31802 * C31774)) / C31508;
    const double C267 = (C31758 * (C31810 + C31802 * C31774)) / C31508;
    const double C269 = (C31758 * C31766 * C31810) / C31508;
    const double C272 =
        (std::pow(C31763, 2) * bs[2] * C31797 + C31810 * C31893) / C31508;
    const double C274 = (C31766 * C31810 + C31812 * C31893) / C31508;
    const double C374 =
        (C31759 * C31766 * C31810 + C31766 * C32173 * ae) / C31508;
    const double C377 =
        (C32171 * C32172 * C31797 + C31759 * (C31759 * C31810 + C32173 * ae) +
         C31759 * C32173 * ae) /
        C31508;
    const double C726 =
        (C31759 * C31758 * C31810 + C31758 * C32173 * ae) / C31508;
    const double C1022 =
        (2 * C31758 * C31810 + C31758 * (C31810 + C31802 * C31893)) / C31508;
    const double C392 = (C31807 * C31808 * C31764 + ae * C31759 * C31849 +
                         C31759 * (ae * C31849 + C31759 * C31770)) /
                        C31510;
    const double C736 =
        (ae * (C31759 * C31810 + bs[2] * std::pow(C31763, 2) * ae) +
         C31758 * (ae * C31849 + C31759 * C31770)) /
        C31510;
    const double C127 =
        (std::pow(C31763, 2) * bs[2] * C31838 + C31849 * C31774) / C31508;
    const double C129 =
        (2 * C31766 * C31849 + C31766 * (C31849 + C31843 * C31774)) / C31508;
    const double C268 =
        (C31758 * C31766 * C31849 + C31766 * bs[2] * std::pow(C31763, 2) * ae) /
        C31508;
    const double C273 =
        (C32171 * C32172 * C31838 + C31758 * (C31758 * C31849 + C32173 * ae) +
         C31758 * C32173 * ae) /
        C31508;
    const double C371 = (C31759 * (C31849 + C31843 * C31774)) / C31508;
    const double C373 = (C31759 * C31766 * C31849) / C31508;
    const double C378 = (C32171 * C32172 * C31838 + C31849 * C31953) / C31508;
    const double C380 = (C31766 * C31849 + C31851 * C31953) / C31508;
    const double C727 = (C31759 * (C31758 * C31849 + C32173 * ae)) / C31508;
    const double C2136 =
        (2 * C31759 * C31849 + C31759 * (C31849 + C31843 * C31953)) / C31508;
    const double C1204 = (ae * C31849 + C31759 * C31770 +
                          ae * (C31759 * C31890 + C31758 * C31917 * ae) +
                          C31758 * (ae * (C31759 * C31802 + C31917 * ae) +
                                    C31758 * (ae * C31843 + C31759 * C31777))) /
                         C31510;
    const double C1205 =
        (ae * (C31810 + C31759 * (C31759 * C31802 + C31917 * ae) +
               C31759 * C31917 * ae) +
         C31758 * (C31770 + ae * C31759 * C31843 +
                   C31759 * (ae * C31843 + C31759 * C31777))) /
        C31510;
    const double C32176 = C31766 * C31917;
    const double C32180 = C31917 + C32179;
    const double C32235 = C31758 * C31917;
    const double C32234 = C31917 * ae;
    const double C32238 = C31917 + C32236;
    const double C32291 = C31759 * C31917;
    const double C32294 = C31917 + C32292;
    const double C266 = (C31758 * (C31849 + C31843 * C31774) +
                         (bs[2] * std::pow(C31763, 2) + C31917 * C31774) * ae) /
                        C31508;
    const double C372 = (C31759 * (C31810 + C31802 * C31774) +
                         (C32173 + C31917 * C31774) * ae) /
                        C31508;
    const double C1021 =
        (2 * (C31758 * C31849 + C32173 * ae) +
         C31758 * (C31849 + C31758 * (C31758 * C31843 + C31917 * ae) +
                   C31758 * C31917 * ae) +
         (C32173 + C31917 * C31893) * ae) /
        C31508;
    const double C1189 = (C31759 * (C31810 + C31802 * C31893) +
                          (C32173 + C31917 * C31893) * ae) /
                         C31508;
    const double C118 =
        2 * C31766 * C32173 + C31766 * (C32173 + C31917 * C31774);
    const double C254 = C31758 * (C32173 + C31917 * C31774);
    const double C359 = C31759 * (C32173 + C31917 * C31774);
    const double C1013 =
        2 * C31758 * C32173 + C31758 * (C32173 + C31917 * C31893);
    const double C1177 = C31759 * (C32173 + C31917 * C31893);
    const double C2128 =
        2 * C31759 * C32173 + C31759 * (C32173 + C31917 * C31953);
    const double C621 = C32632 * C390;
    const double C31784 = C31777 + C31783;
    const double C31789 = 2 * C31786;
    const double C31900 = C31758 * C31786;
    const double C31942 = C31759 * C31786;
    const double C31822 = C31799 + C31821;
    const double C31829 = 2 * C31827;
    const double C31901 = C31827 * C31893;
    const double C32052 = ae * C31827;
    const double C32051 = C31758 * C31827;
    const double C32067 = C31759 * C31827;
    const double C31977 = C31799 + C31973;
    const double C31994 = 2 * C31986;
    const double C31992 = ae * C31986;
    const double C32080 = C31759 * C31986;
    const double C31861 = C31840 + C31860;
    const double C31868 = 2 * C31866;
    const double C31958 = C31866 * C31953;
    const double C32069 = ae * C31866;
    const double C32106 = C31759 * C31866;
    const double C32355 = C31758 * C31866;
    const double C32036 = ae * C32028;
    const double C32126 = 2 * C32028;
    const double C32096 = C31840 + C32094;
    const double C31929 = C31884 + C31928;
    const double C32099 = C32033 * C31953;
    const double C32038 = C31884 + C32032;
    const double C32074 = C32071 * C31893;
    const double C32108 = C31758 * C32071;
    const double C32133 = C32071 * C31953;
    const double C32103 = C31884 + C32100;
    const double C32535 = C32533 * C32528;
    const double C32534 = C32533 / C31544;
    const double C32543 = C32541 * C32533;
    const double C32855 = C32533 * C32529;
    const double C32893 = C32859 * C32533;
    const double C32887 = C32533 * C32852;
    const double C32898 = C32566 * C32864;
    const double C110 =
        (C32566 * std::pow(C32864, 2)) / C32865 + C32566 / C32866;
    const double C112 = C32899 * C32566;
    const double C482 = C32897 * C32566;
    const double C32900 = C32578 * C32867;
    const double C248 =
        (C32578 * std::pow(C32867, 2)) / C32865 + C32578 / C32866;
    const double C250 = C32899 * C32578;
    const double C480 = C32897 * C32578;
    const double C32901 = C32592 * C32868;
    const double C354 =
        (C32592 * std::pow(C32868, 2)) / C32865 + C32592 / C32866;
    const double C356 = C32899 * C32592;
    const double C602 = C32897 * C32592;
    const double C31592 = C31587 / C31544;
    const double C31591 = C31506 * C31587;
    const double C31545 = 2 * C31513;
    const double C31567 = C31513 / C31510;
    const double C859 = ((0 * ae) / C31508 - C31513 / C31510) / (2 * C31508) +
                        (0 * ae) / C31508;
    const double C2784 =
        ((C32615 - (C31506 * 2 * C31513) / C31508) * ae) / C31508 -
        C31507 / C31512;
    const double C2785 = (0 * ae) / C31508 - C31513 / C31510;
    const double C5471 = (C32615 * std::pow(C32669, 2)) / C31510 + C32668;
    const double C32671 = C32670 * C32669;
    const double C32676 = C32670 / C31512;
    const double C32873 = C32670 / C31508;
    const double C32870 = C32541 * C32670;
    const double C858 =
        (((C32615 - (C31506 * 2 * C31513) / C31508) * ae) / C31508 -
         C31507 / C31512) /
            (2 * C31508) +
        ((C31506 * ((0 * ae) / C31508 - C31513 / C31510) + C32677) * ae) /
            C31508;
    const double C32678 = C32677 * C32669;
    const double C32879 = C32667 * C32677;
    const double C32878 = 2 * C32677;
    const double C32914 = C32677 / C32862;
    const double C6251 = C32677 / C32896;
    const double C17571 = C32677 / C31544;
    const double C32910 = C32875 / C31508;
    const double C5472 = (-2 * C32541 * C32875) / C31508;
    const double C32926 = C32902 / C31510;
    const double C31679 = C31674 / C31544;
    const double C31678 = C31525 * C31674;
    const double C31632 = 2 * C31528;
    const double C31654 = C31528 / C31510;
    const double C1844 = ((0 * ae) / C31508 - C31528 / C31510) / (2 * C31508) +
                         (0 * ae) / C31508;
    const double C3524 =
        ((C32632 - (C31525 * 2 * C31528) / C31508) * ae) / C31508 -
        C31526 / C31512;
    const double C3525 = (0 * ae) / C31508 - C31528 / C31510;
    const double C148 = C113 * C117;
    const double C146 = C113 * C125;
    const double C144 = C113 * C116;
    const double C502 = C113 * C255;
    const double C622 = C113 * C360;
    const double C1040 = C113 * C257;
    const double C1038 = C113 * C270;
    const double C1036 = C113 * C256;
    const double C1724 = C113 * C721;
    const double C10220 = (C32632 * std::pow(C32711, 2)) / C31510 + C32710;
    const double C32713 = C32712 * C32711;
    const double C32718 = C32712 / C31512;
    const double C32874 = C32712 / C31508;
    const double C32872 = C32541 * C32712;
    const double C3534 = C32719 * C390;
    const double C20440 = C32719 * C390;
    const double C1843 =
        (((C32632 - (C31525 * 2 * C31528) / C31508) * ae) / C31508 -
         C31526 / C31512) /
            (2 * C31508) +
        ((C31525 * ((0 * ae) / C31508 - C31528 / C31510) + C32719) * ae) /
            C31508;
    const double C32720 = C32719 * C32711;
    const double C32885 = C32709 * C32719;
    const double C32884 = 2 * C32719;
    const double C32920 = C32719 / C32862;
    const double C11963 = C32719 / C32896;
    const double C24241 = C32719 / C31544;
    const double C32916 = C32881 / C31508;
    const double C10221 = (-2 * C32541 * C32881) / C31508;
    const double C32928 = C32905 / C31510;
    const double C31596 = C31590 + C31562;
    const double C31683 = C31677 + C31649;
    const double C31894 = C31891 + C31892;
    const double C31939 = C31937 + C31938;
    const double C159 = C32632 * C140;
    const double C497 = C32632 * C284;
    const double C868 = C32632 * C288;
    const double C617 = C32632 * C389;
    const double C3542 = C32719 * C389;
    const double C20448 = C32719 * C389;
    const double C1857 = C32907 * C393;
    const double C4094 = C32719 * C393;
    const double C10238 = C32907 * C393;
    const double C21000 = C32719 * C393;
    const double C1539 = C32632 * C737;
    const double C3928 = C32719 * C737;
    const double C20834 = C32719 * C737;
    const double C31815 = C31802 + C31814;
    const double C31819 = 2 * C31817;
    const double C31899 = ae * C31817;
    const double C31898 = C31758 * C31817;
    const double C1030 = (2 * (ae * C31812 + C31758 * C31887) +
                          ae * (C31812 + C31817 * std::pow(C31758, 2)) +
                          C31758 * (C31887 + ae * C31758 * C31817 +
                                    C31758 * (ae * C31817 + C31758 * C31786))) /
                         C31510;
    const double C32297 = C31759 * C31817;
    const double C1020 =
        (2 * C31758 * C31812 + C31758 * (C31812 + C31817 * C31893)) / C31508;
    const double C31896 = C31802 + C31895;
    const double C31975 = C31971 + C31972;
    const double C31976 = 2 * C31970;
    const double C31974 = ae * C31970;
    const double C32371 = C31759 * C31970;
    const double C32011 = C32006 + C32007;
    const double C31854 = C31843 + C31853;
    const double C31858 = 2 * C31856;
    const double C31941 = ae * C31856;
    const double C31957 = C31759 * C31856;
    const double C1207 =
        (ae * (C31812 + C31759 * (C31759 * C31817 + C31915 * ae) +
               C31759 * C31915 * ae) +
         C31758 * (C31887 + ae * C31759 * C31856 +
                   C31759 * (ae * C31856 + C31759 * C31786))) /
        C31510;
    const double C32241 = C31758 * C31856;
    const double C2134 =
        (2 * C31759 * C31851 + C31759 * (C31851 + C31856 * C31953)) / C31508;
    const double C31955 = C31843 + C31954;
    const double C32012 = C32008 + C32009;
    const double C32021 = ae * C32018;
    const double C32121 = 2 * C32018;
    const double C6934 = C32907 * C1206;
    const double C9390 = C32719 * C1206;
    const double C11261 = C32907 * C1206;
    const double C22276 = C32719 * C1206;
    const double C32326 = C32322 + C32007;
    const double C31913 = C31882 + C31912;
    const double C31924 = C31758 * C31923;
    const double C31933 = 2 * C31923;
    const double C32068 = C31923 * ae;
    const double C32132 = C31759 * C31923;
    const double C32244 = C31923 * C31893;
    const double C32299 = C31923 * C31953;
    const double C32013 = C31882 + C32010;
    const double C32031 = 2 * C32020;
    const double C32081 = C32020 * ae;
    const double C32098 = C31759 * C32020;
    const double C32373 = C32020 * C31953;
    const double C32035 = C32027 * ae;
    const double C32142 = 2 * C32027;
    const double C32034 = C32025 + C32026;
    const double C32339 = C32335 + C32026;
    const double C32095 = C31882 + C32093;
    const double C31793 = C31782 + C31792;
    const double C31993 = C31987 + C31988;
    const double C32037 = C32029 + C32030;
    const double C32056 = C31758 * C32053;
    const double C32070 = C31759 * C32053;
    const double C31832 = C31820 + C31831;
    const double C31995 = C31820 + C31990;
    const double C32058 = C32054 * C31893;
    const double C31871 = C31859 + C31870;
    const double C32104 = C31859 + C32101;
    const double C32134 = C32109 * C31953;
    const double C1043 = C32632 * C287;
    const double C1053 = C32632 * C1031;
    const double C149 = C32632 * C126;
    const double C153 = C32632 * C128;
    const double C499 = C32632 * C267;
    const double C503 = C32632 * C269;
    const double C1041 = C32632 * C272;
    const double C866 = C32632 * C274;
    const double C623 = C32632 * C374;
    const double C3530 = C32719 * C374;
    const double C20436 = C32719 * C374;
    const double C1725 = C32632 * C726;
    const double C4547 = C32719 * C726;
    const double C21468 = C32719 * C726;
    const double C1055 = C32632 * C1022;
    const double C1723 = C32632 * C736;
    const double C4551 = C32719 * C736;
    const double C21472 = C32719 * C736;
    const double C150 = C113 * C127;
    const double C154 = C113 * C129;
    const double C500 = C113 * C268;
    const double C1042 = C113 * C273;
    const double C616 = C113 * C371;
    const double C620 = C113 * C373;
    const double C1722 = C113 * C727;
    const double C1719 = C32632 * C1204;
    const double C4569 = C32719 * C1204;
    const double C21480 = C32719 * C1204;
    const double C5351 = C32719 * C1205;
    const double C6922 = C32907 * C1205;
    const double C11249 = C32907 * C1205;
    const double C22284 = C32719 * C1205;
    const double C275 =
        (C31766 * C31849 + C31758 * (C31758 * C31851 + C32176 * ae) +
         C31758 * C32176 * ae) /
        C31508;
    const double C379 =
        (C31766 * C31810 + C31759 * (C31759 * C31812 + C32176 * ae) +
         C31759 * C32176 * ae) /
        C31508;
    const double C728 =
        (C31759 * C31758 * C31812 + C31758 * C32176 * ae) / C31508;
    const double C729 = (C31759 * (C31758 * C31851 + C32176 * ae)) / C31508;
    const double C1019 =
        (2 * (C31758 * C31851 + C32176 * ae) +
         C31758 * (C31851 + C31758 * (C31758 * C31856 + C31915 * ae) +
                   C31758 * C31915 * ae) +
         (C32176 + C31915 * C31893) * ae) /
        C31508;
    const double C1187 = (C31759 * (C31812 + C31817 * C31893) +
                          (C32176 + C31915 * C31893) * ae) /
                         C31508;
    const double C2135 =
        (2 * (C31759 * C31812 + C32176 * ae) +
         C31759 * (C31812 + C31759 * (C31759 * C31817 + C32242) +
                   C31759 * C31915 * ae) +
         (C32176 + C31915 * C31953) * ae) /
        C31508;
    const double C258 = C31766 * C32173 + C32176 * C31893;
    const double C363 = C31766 * C32173 + C32176 * C31953;
    const double C722 = C31759 * C31758 * C32176;
    const double C1012 =
        2 * C31758 * C32176 + C31758 * (C32176 + C31915 * C31893);
    const double C1176 = C31759 * (C32176 + C31915 * C31893);
    const double C1180 = C31758 * C32176 + C32243 * C31953;
    const double C2127 =
        2 * C31759 * C32176 + C31759 * (C32176 + C31915 * C31953);
    const double C119 = 3 * (C32173 + C31917 * C31774) +
                        C31766 * (2 * C32176 + C31766 * C32180);
    const double C253 = C31758 * (2 * C32176 + C31766 * C32180);
    const double C259 = C32173 + C31917 * C31774 + C32180 * C31893;
    const double C358 = C31759 * (2 * C32176 + C31766 * C32180);
    const double C364 = C32173 + C31917 * C31774 + C32180 * C31953;
    const double C723 = C31759 * C31758 * C32180;
    const double C1190 =
        (C31758 * C31810 + C31759 * (C31759 * C31890 + C32235 * ae) +
         C31759 * C32235 * ae) /
        C31508;
    const double C2671 =
        (2 * (C31759 * C31890 + C32235 * ae) +
         C31759 * (C31890 + C31759 * (C31759 * C31970 + C31920 * ae) +
                   C31759 * C31920 * ae) +
         (C32235 + C31920 * C31953) * ae) /
        C31508;
    const double C1178 = C31758 * C32173 + C32235 * C31953;
    const double C2668 =
        2 * C31759 * C32235 + C31759 * (C32235 + C31920 * C31953);
    const double C32237 = C32233 + C32234;
    const double C32293 = C32290 + C32234;
    const double C2137 =
        (2 * (C31759 * C31810 + C32173 * ae) +
         C31759 * (C31810 + C31759 * (C31759 * C31802 + C32234) +
                   C31759 * C31917 * ae) +
         (C32173 + C31917 * C31953) * ae) /
        C31508;
    const double C1014 = 3 * (C32173 + C31917 * C31893) +
                         C31758 * (2 * C32235 + C31758 * C32238);
    const double C1179 = C32173 + C31917 * C31893 + C32238 * C31953;
    const double C1705 = C31759 * (2 * C32235 + C31758 * C32238);
    const double C2129 = 3 * (C32173 + C31917 * C31953) +
                         C31759 * (2 * C32291 + C31759 * C32294);
    const double C496 = C113 * C266;
    const double C619 = C32632 * C372;
    const double C3538 = C32719 * C372;
    const double C20444 = C32719 * C372;
    const double C1052 = C113 * C1021;
    const double C1721 = C32632 * C1189;
    const double C4573 = C32719 * C1189;
    const double C21476 = C32719 * C1189;
    const double C152 = C113 * C118;
    const double C498 = C113 * C254;
    const double C618 = C113 * C359;
    const double C1054 = C113 * C1013;
    const double C1720 = C113 * C1177;
    const double C141 =
        (4 * (2 * C31766 * C31777 + C31766 * C31784) +
         C31766 * (3 * C31784 +
                   C31766 * (2 * C31766 * C31782 +
                             C31766 * (C31782 + std::pow(C31772, 7) * bs[7] *
                                                    C31764 * C31774)))) /
        C31510;
    const double C283 =
        (ae * (2 * C31766 * C31802 + C31766 * (C31802 + C31799 * C31774)) +
         C31758 * (2 * C31766 * C31777 + C31766 * C31784)) /
        C31510;
    const double C388 =
        (ae * (2 * C31766 * C31843 + C31766 * (C31843 + C31840 * C31774)) +
         C31759 * (2 * C31766 * C31777 + C31766 * C31784)) /
        C31510;
    const double C31823 = C31766 * C31822;
    const double C31826 = 3 * C31822;
    const double C31906 = ae * C31822;
    const double C31905 = C31758 * C31822;
    const double C32304 = C31759 * C31822;
    const double C31903 = C31817 + C31901;
    const double C32057 = 2 * C32051;
    const double C32055 = ae * C32051;
    const double C32410 = C31759 * C32051;
    const double C31980 = C31758 * C31977;
    const double C31989 = 3 * C31977;
    const double C31985 = ae * C31977;
    const double C32378 = C31759 * C31977;
    const double C31996 = C31782 + C31992;
    const double C31862 = C31766 * C31861;
    const double C31865 = 3 * C31861;
    const double C31945 = ae * C31861;
    const double C31961 = C31759 * C31861;
    const double C32249 = C31758 * C31861;
    const double C31959 = C31856 + C31958;
    const double C32110 = ae * C32106;
    const double C32138 = 2 * C32106;
    const double C32040 = C31782 + C32036;
    const double C32116 = ae * C32096;
    const double C32122 = C31759 * C32096;
    const double C32125 = 3 * C32096;
    const double C31930 = C31758 * C31929;
    const double C31934 = C31766 * C31929;
    const double C32252 = C31929 * C31893;
    const double C32306 = C31929 * C31953;
    const double C32102 = C32020 + C32099;
    const double C32042 = C31758 * C32038;
    const double C32380 = C32038 * C31953;
    const double C32077 = C31923 + C32074;
    const double C32412 = C32108 * C31953;
    const double C32135 = C31923 + C32133;
    const double C32143 = C31759 * C32103;
    const double C32536 = C32535 * C32529;
    const double C32542 = C32535 / C31512;
    const double C32856 = C32541 * C32535;
    const double C32854 = C32535 / C31508;
    const double C854 = (C32533 * std::pow(C32529, 2)) / C31510 + C32534;
    const double C32544 = C32543 * C32529;
    const double C32860 = C32528 * C32543;
    const double C32858 = 2 * C32543;
    const double C32908 = C32543 / C32862;
    const double C107 = C32543 / C32896;
    const double C17574 = C32543 / C31544;
    const double C32889 = C32855 / C31508;
    const double C855 = (-2 * C32541 * C32855) / C31508;
    const double C32921 = C32887 / C31510;
    const double C111 = (2 * C32897 * C32898) / C32561;
    const double C481 = C32898 / C32561;
    const double C249 = (2 * C32897 * C32900) / C32561;
    const double C479 = C32900 / C32561;
    const double C355 = (2 * C32897 * C32901) / C32561;
    const double C601 = C32901 / C32561;
    const double C31597 = C31591 + 0;
    const double C31564 = C31506 * C31545;
    const double C5478 =
        ((-C31507 / C31508) / C31544 -
         ((C32615 - (C31506 * C31545) / C31508) * be) / C31508) /
            C31544 -
        ((C31506 * ((-C31545 / C31508) / C31544 - (0 * be) / C31508) + C32677) *
         be) /
            C31508;
    const double C5479 =
        ((-C31545 / C31508) / C31544 - (0 * be) / C31508) / C31544 -
        (0 * be) / C31508;
    const double C15054 = (-C31545 / C31508) / C31544 - (0 * be) / C31508;
    const double C31577 = C31573 - C31567;
    const double C32672 = C32671 / C31510;
    const double C857 =
        (((0 - (C31506 * C31507) / C31508) * ae) / C31508 - (0 * be) / C31512) /
            (2 * C31508) +
        ((C31506 * (((C32615 - (C31506 * 2 * C31513) / C31508) * ae) / C31508 -
                    C31507 / C31512) +
          C32873) *
         ae) /
            C31508 +
        (0 * ae) / C31508 - C31513 / C31510;
    const double C32903 = 2 * C32870;
    const double C32679 = C32678 / C31508;
    const double C32913 = C32879 / C31512;
    const double C32930 = C32873 - C32910;
    const double C15047 = -C32910;
    const double C32939 = C32926 + C32668;
    const double C31684 = C31678 + 0;
    const double C31651 = C31525 * C31632;
    const double C10224 =
        ((-C31526 / C31508) / C31544 -
         ((C32632 - (C31525 * C31632) / C31508) * be) / C31508) /
            C31544 -
        ((C31525 * ((-C31632 / C31508) / C31544 - (0 * be) / C31508) + C32719) *
         be) /
            C31508;
    const double C10225 =
        ((-C31632 / C31508) / C31544 - (0 * be) / C31508) / C31544 -
        (0 * be) / C31508;
    const double C20431 = (-C31632 / C31508) / C31544 - (0 * be) / C31508;
    const double C31664 = C31660 - C31654;
    const double C1856 = C1844 * C380;
    const double C3547 = C3524 * C129;
    const double C3543 = C3524 * C118;
    const double C3539 = C3524 * C127;
    const double C3535 = C3524 * C117;
    const double C3531 = C3524 * C125;
    const double C3527 = C3524 * C116;
    const double C3933 = C3524 * C255;
    const double C3929 = C3524 * C268;
    const double C3925 = C3524 * C254;
    const double C3921 = C3524 * C266;
    const double C4099 = C3524 * C360;
    const double C4095 = C3524 * C373;
    const double C4091 = C3524 * C359;
    const double C4087 = C3524 * C371;
    const double C4574 = C3524 * C257;
    const double C4570 = C3524 * C273;
    const double C4548 = C3524 * C270;
    const double C4544 = C3524 * C256;
    const double C5356 = C3524 * C721;
    const double C5352 = C3524 * C727;
    const double C8637 = C3524 * C1013;
    const double C8633 = C3524 * C1021;
    const double C9395 = C3524 * C1177;
    const double C3541 = C3525 * C371;
    const double C3537 = C3525 * C359;
    const double C3533 = C3525 * C373;
    const double C3529 = C3525 * C360;
    const double C4093 = C3525 * C380;
    const double C4572 = C3525 * C1177;
    const double C4550 = C3525 * C727;
    const double C4546 = C3525 * C721;
    const double C165 = C146 + C147;
    const double C164 = C144 + C145;
    const double C1057 = C1038 + C1039;
    const double C1056 = C1036 + C1037;
    const double C10262 = C10220 * C128;
    const double C10256 = C10220 * C139;
    const double C10246 = C10220 * C138;
    const double C10240 = C10220 * C126;
    const double C10234 = C10220 * C137;
    const double C10228 = C10220 * C124;
    const double C10677 = C10220 * C269;
    const double C10671 = C10220 * C285;
    const double C10665 = C10220 * C267;
    const double C10659 = C10220 * C284;
    const double C10859 = C10220 * C374;
    const double C10853 = C10220 * C390;
    const double C10847 = C10220 * C372;
    const double C10841 = C10220 * C389;
    const double C11273 = C10220 * C1022;
    const double C11267 = C10220 * C1031;
    const double C11257 = C10220 * C287;
    const double C11251 = C10220 * C272;
    const double C11245 = C10220 * C286;
    const double C11239 = C10220 * C271;
    const double C11559 = C10220 * C288;
    const double C11553 = C10220 * C274;
    const double C11885 = C10220 * C726;
    const double C11879 = C10220 * C736;
    const double C11873 = C10220 * C1189;
    const double C11867 = C10220 * C1204;
    const double C13199 = C10220 * C737;
    const double C32714 = C32713 / C31510;
    const double C3554 = C32874 * C140;
    const double C3548 = C32874 * C139;
    const double C3544 = C32874 * C128;
    const double C3540 = C32874 * C138;
    const double C3536 = C32874 * C126;
    const double C3532 = C32874 * C137;
    const double C3528 = C32874 * C124;
    const double C3934 = C32874 * C269;
    const double C3930 = C32874 * C285;
    const double C3926 = C32874 * C267;
    const double C3922 = C32874 * C284;
    const double C4100 = C32874 * C374;
    const double C4096 = C32874 * C390;
    const double C4092 = C32874 * C372;
    const double C4088 = C32874 * C389;
    const double C4575 = C32874 * C272;
    const double C4571 = C32874 * C287;
    const double C4567 = C32874 * C274;
    const double C4563 = C32874 * C288;
    const double C4549 = C32874 * C286;
    const double C4545 = C32874 * C271;
    const double C5143 = C32874 * C737;
    const double C5357 = C32874 * C726;
    const double C5353 = C32874 * C736;
    const double C8638 = C32874 * C1022;
    const double C8634 = C32874 * C1031;
    const double C9396 = C32874 * C1189;
    const double C9392 = C32874 * C1204;
    const double C1842 =
        (((0 - (C31525 * C31526) / C31508) * ae) / C31508 - (0 * be) / C31512) /
            (2 * C31508) +
        ((C31525 * (((C32632 - (C31525 * 2 * C31528) / C31508) * ae) / C31508 -
                    C31526 / C31512) +
          C32874) *
         ae) /
            C31508 +
        (0 * ae) / C31508 - C31528 / C31510;
    const double C32906 = 2 * C32872;
    const double C1866 = C1843 * C371;
    const double C1860 = C1843 * C359;
    const double C1854 = C1843 * C373;
    const double C1848 = C1843 * C360;
    const double C2501 = C1843 * C380;
    const double C6925 = C1843 * C1177;
    const double C6919 = C1843 * C727;
    const double C6913 = C1843 * C721;
    const double C32721 = C32720 / C31508;
    const double C32919 = C32885 / C31512;
    const double C24257 = C24241 * C393;
    const double C25354 = C24241 * C1206;
    const double C25340 = C24241 * C1205;
    const double C32933 = C32874 - C32916;
    const double C20428 = -C32916;
    const double C10248 = C10221 * C389;
    const double C10242 = C10221 * C372;
    const double C10236 = C10221 * C390;
    const double C10230 = C10221 * C374;
    const double C10669 = C10221 * C737;
    const double C10851 = C10221 * C393;
    const double C11259 = C10221 * C1204;
    const double C11253 = C10221 * C1189;
    const double C11247 = C10221 * C736;
    const double C11241 = C10221 * C726;
    const double C11877 = C10221 * C1205;
    const double C11865 = C10221 * C1206;
    const double C32940 = C32928 + C32710;
    const double C31600 = C31596 / C31544;
    const double C31687 = C31683 / C31544;
    const double C2146 =
        (2 * (ae * C31849 + C31759 * C31770) +
         ae * (C31849 + C31843 * std::pow(C31759, 2)) +
         C31759 * (C31770 + ae * C31759 * C31843 + C31759 * C31939)) /
        C31510;
    const double C289 = (C31770 + C31777 * C31774 + ae * C31758 * C31815 +
                         C31758 * (ae * C31815 + C31758 * C31784)) /
                        C31510;
    const double C130 = (3 * (C31810 + C31802 * C31774) +
                         C31766 * (2 * C31812 + C31766 * C31815)) /
                        C31508;
    const double C265 = (C31758 * (2 * C31812 + C31766 * C31815)) / C31508;
    const double C276 = (C31810 + C31802 * C31774 + C31815 * C31893) / C31508;
    const double C370 = (C31759 * (2 * C31812 + C31766 * C31815) +
                         (2 * C32176 + C31766 * C32180) * ae) /
                        C31508;
    const double C381 =
        (C31810 + C31802 * C31774 + C31759 * (C31759 * C31815 + C32180 * ae) +
         C31759 * C32180 * ae) /
        C31508;
    const double C730 =
        (C31759 * C31758 * C31815 + C31758 * C32180 * ae) / C31508;
    const double C1018 =
        (2 * C31758 * C31815 + C31758 * (C31815 + C31822 * C31893)) / C31508;
    const double C31902 = C31899 + C31900;
    const double C1203 = (ae * C31851 + C31759 * C31887 +
                          ae * (C31759 * C31898 + C31758 * C31915 * ae) +
                          C31758 * (ae * (C31759 * C31817 + C31915 * ae) +
                                    C31758 * (ae * C31856 + C31759 * C31786))) /
                         C31510;
    const double C1194 =
        (C31758 * C31812 + C31759 * (C31759 * C31898 + C32243 * ae) +
         C31759 * C32243 * ae) /
        C31508;
    const double C1049 = C32632 * C1030;
    const double C8626 = C32874 * C1030;
    const double C32300 = C32297 + C32242;
    const double C1051 = C32632 * C1020;
    const double C8630 = C32874 * C1020;
    const double C1032 =
        (3 * (C31770 + ae * C31890 + C31758 * C31894) +
         ae * (2 * C31890 + C31758 * C31896) +
         C31758 * (2 * C31894 + ae * C31896 +
                   C31758 * (C31777 + ae * C31758 * C31799 +
                             C31758 * (ae * C31799 + C31758 * C31782)))) /
        C31510;
    const double C1714 =
        (2 * (ae * (C31759 * C31802 + C31917 * ae) + C31758 * C31939) +
         ae * (C31759 * C31896 + (C31917 + C31882 * C31893) * ae) +
         C31758 * (C31939 + ae * (C31759 * C31758 * C31799 + C31920 * ae) +
                   C31758 * (ae * (C31759 * C31799 + C31882 * ae) +
                             C31758 * (ae * C31840 + C31759 * C31782)))) /
        C31510;
    const double C1023 = (3 * (C31810 + C31802 * C31893) +
                          C31758 * (2 * C31890 + C31758 * C31896)) /
                         C31508;
    const double C1192 =
        (C31810 + C31802 * C31893 + C31759 * (C31759 * C31896 + C32238 * ae) +
         C31759 * C32238 * ae) /
        C31508;
    const double C1708 = (C31759 * (2 * C31890 + C31758 * C31896) +
                          (2 * C32235 + C31758 * C32238) * ae) /
                         C31508;
    const double C31979 = C31758 * C31975;
    const double C31984 = 2 * C31975;
    const double C31978 = C31777 + C31974;
    const double C32374 = C32371 + C32323;
    const double C32014 = ae * C32011;
    const double C32392 = C31759 * C32011;
    const double C32400 = 2 * C32011;
    const double C394 = (C31770 + C31777 * C31774 + ae * C31759 * C31854 +
                         C31759 * (ae * C31854 + C31759 * C31784)) /
                        C31510;
    const double C738 =
        (ae * (C31759 * C31815 +
               (C31808 * C31807 + C31768 * C31767 * C31774) * ae) +
         C31758 * (ae * C31854 + C31759 * C31784)) /
        C31510;
    const double C131 = (3 * (C31849 + C31843 * C31774) +
                         C31766 * (2 * C31851 + C31766 * C31854)) /
                        C31508;
    const double C264 =
        (C31758 * (2 * C31851 + C31766 * C31854) +
         (2 * C31766 * C31917 + C31766 * (C31917 + C31882 * C31774)) * ae) /
        C31508;
    const double C277 =
        (C31849 + C31843 * C31774 + C31758 * (C31758 * C31854 + C32180 * ae) +
         C31758 * C32180 * ae) /
        C31508;
    const double C369 = (C31759 * (2 * C31851 + C31766 * C31854)) / C31508;
    const double C382 = (C31849 + C31843 * C31774 + C31854 * C31953) / C31508;
    const double C731 = (C31759 * (C31758 * C31854 + C32180 * ae)) / C31508;
    const double C2132 =
        (2 * C31759 * C31854 + C31759 * (C31854 + C31861 * C31953)) / C31508;
    const double C31943 = C31941 + C31942;
    const double C2314 = C32907 * C1207;
    const double C5141 = C32719 * C1207;
    const double C10667 = C32907 * C1207;
    const double C13197 = C10221 * C1207;
    const double C22066 = C32719 * C1207;
    const double C24686 = C24241 * C1207;
    const double C32245 = C32241 + C32242;
    const double C2499 = C1844 * C2134;
    const double C2147 =
        (3 * (C31770 + ae * C31952 + C31759 * C31939) +
         ae * (2 * C31952 + C31759 * C31955) +
         C31759 * (2 * C31939 + ae * C31955 +
                   C31759 * (C31777 + ae * C31759 * C31840 +
                             C31759 * (ae * C31840 + C31759 * C31782)))) /
        C31510;
    const double C2677 =
        (ae * (2 * (C31759 * C31802 + C31917 * ae) +
               C31759 * (C31802 + C31759 * (C31759 * C31799 + C31882 * ae) +
                         C31759 * C31882 * ae) +
               (C31917 + C31882 * C31953) * ae) +
         C31758 * (2 * C31939 + ae * C31955 +
                   C31759 * (C31777 + ae * C31759 * C31840 +
                             C31759 * (ae * C31840 + C31759 * C31782)))) /
        C31510;
    const double C2139 = (3 * (C31849 + C31843 * C31953) +
                          C31759 * (2 * C31952 + C31759 * C31955)) /
                         C31508;
    const double C32015 = C31758 * C32012;
    const double C32019 = C31759 * C32012;
    const double C32115 = 2 * C32012;
    const double C32022 = C31777 + C32021;
    const double C32328 = C31758 * C32326;
    const double C32334 = 2 * C32326;
    const double C32184 = C31766 * C31913;
    const double C32188 = 3 * C31913;
    const double C32251 = C31758 * C31913;
    const double C32250 = C31913 * ae;
    const double C32305 = C31759 * C31913;
    const double C1017 =
        (2 * (C31758 * C31854 + C32180 * ae) +
         C31758 * (C31854 + C31758 * (C31758 * C31861 + C31913 * ae) +
                   C31758 * C31913 * ae) +
         (C32180 + C31913 * C31893) * ae) /
        C31508;
    const double C1185 = (C31759 * (C31815 + C31822 * C31893) +
                          (C32180 + C31913 * C31893) * ae) /
                         C31508;
    const double C1011 =
        2 * C31758 * C32180 + C31758 * (C32180 + C31913 * C31893);
    const double C1175 = C31759 * (C32180 + C31913 * C31893);
    const double C2126 =
        2 * C31759 * C32180 + C31759 * (C32180 + C31913 * C31953);
    const double C1208 =
        (C31887 + ae * C31759 * C31856 +
         C31759 * (ae * C31856 + C31759 * C31786) +
         ae * (C31898 + C31759 * (C31759 * C31758 * C31827 + C31924 * ae) +
               C31759 * C31924 * ae) +
         C31758 *
             (ae * (C31817 + C31759 * (C31759 * C31827 + C31923 * ae) +
                    C31759 * C31923 * ae) +
              C31758 * (C31786 + ae * C31759 * C31866 +
                        C31759 * (ae * C31866 + C31759 * C31766 * C31791)))) /
        C31510;
    const double C32357 = 2 * C31924;
    const double C32356 = C31924 * ae;
    const double C32411 = C31759 * C31924;
    const double C2673 =
        (2 * (C31759 * C31898 + C32243 * ae) +
         C31759 * (C31898 + C31759 * (C31759 * C32051 + C31924 * ae) +
                   C31759 * C31924 * ae) +
         (C32243 + C31924 * C31953) * ae) /
        C31508;
    const double C2669 =
        2 * C31759 * C32243 + C31759 * (C32243 + C31924 * C31953);
    const double C32072 = C32067 + C32068;
    const double C32359 = C32355 + C32068;
    const double C32419 = 2 * C32132;
    const double C32418 = C32132 * ae;
    const double C32246 = C31915 + C32244;
    const double C32301 = C31915 + C32299;
    const double C32325 = C31758 * C32013;
    const double C32337 = 3 * C32013;
    const double C32336 = C32013 * ae;
    const double C32379 = C31759 * C32013;
    const double C7078 =
        2 * C31759 * C32238 + C31759 * (C32238 + C32013 * C31953);
    const double C32084 = C32080 + C32081;
    const double C32428 = 2 * C32098;
    const double C32427 = C32098 * ae;
    const double C32375 = C31920 + C32373;
    const double C32039 = C31759 * C32034;
    const double C32082 = ae * C32034;
    const double C32341 = C31758 * C32339;
    const double C32434 = C32339 * C31953;
    const double C32395 = C31759 * C32095;
    const double C32403 = 3 * C32095;
    const double C32402 = C32095 * ae;
    const double C31794 = C31766 * C31793;
    const double C31907 = C31758 * C31793;
    const double C31946 = C31759 * C31793;
    const double C1029 = (2 * (ae * C31815 + C31758 * C31784) +
                          ae * (C31815 + C31822 * std::pow(C31758, 2)) +
                          C31758 * (C31784 + ae * C31758 * C31822 +
                                    C31758 * (ae * C31822 + C31758 * C31793))) /
                         C31510;
    const double C1209 =
        (ae * (C31815 + C31759 * (C31759 * C31822 + C31913 * ae) +
               C31759 * C31913 * ae) +
         C31758 * (C31784 + ae * C31759 * C31861 +
                   C31759 * (ae * C31861 + C31759 * C31793))) /
        C31510;
    const double C31997 = C31758 * C31993;
    const double C32041 = C31759 * C32037;
    const double C32083 = C31758 * C32037;
    const double C32060 = C32052 + C32056;
    const double C32073 = C32069 + C32070;
    const double C31833 = C31766 * C31832;
    const double C31908 = C31832 * C31893;
    const double C31998 = C31758 * C31995;
    const double C32061 = C31827 + C32058;
    const double C31872 = C31766 * C31871;
    const double C31962 = C31871 * C31953;
    const double C32127 = C31759 * C32104;
    const double C32136 = C31866 + C32134;
    const double C166 = C148 + C149;
    const double C511 = C502 + C503;
    const double C1058 = C1040 + C1041;
    const double C631 = C622 + C623;
    const double C1729 = C1724 + C1725;
    const double C167 = C150 + C151;
    const double C169 = C154 + C155;
    const double C510 = C500 + C501;
    const double C1059 = C1042 + C1043;
    const double C628 = C616 + C617;
    const double C630 = C620 + C621;
    const double C1728 = C1722 + C1723;
    const double C867 = C113 * C275;
    const double C4562 = C3524 * C275;
    const double C1851 = C32907 * C379;
    const double C4098 = C32719 * C379;
    const double C10232 = C32907 * C379;
    const double C10857 = C10221 * C379;
    const double C21004 = C32719 * C379;
    const double C24251 = C24241 * C379;
    const double C1541 = C32632 * C728;
    const double C3932 = C32719 * C728;
    const double C5147 = C32874 * C728;
    const double C10675 = C10221 * C728;
    const double C13205 = C10220 * C728;
    const double C20838 = C32719 * C728;
    const double C1538 = C113 * C729;
    const double C2315 = C1843 * C729;
    const double C3927 = C3525 * C729;
    const double C5142 = C3524 * C729;
    const double C1048 = C113 * C1019;
    const double C8625 = C3524 * C1019;
    const double C1537 = C32632 * C1187;
    const double C4565 = C32719 * C1187;
    const double C9190 = C32874 * C1187;
    const double C11555 = C10221 * C1187;
    const double C21298 = C32719 * C1187;
    const double C2506 = C32907 * C2135;
    const double C10855 = C32907 * C2135;
    const double C13519 = C32920 * C2135;
    const double C22412 = C32920 * C2135;
    const double C24874 = C24241 * C2135;
    const double C865 = C113 * C258;
    const double C4566 = C3524 * C258;
    const double C1850 = C1844 * C363;
    const double C2507 = C1843 * C363;
    const double C4097 = C3525 * C363;
    const double C1540 = C113 * C722;
    const double C2321 = C1843 * C722;
    const double C3931 = C3525 * C722;
    const double C5146 = C3524 * C722;
    const double C1050 = C113 * C1012;
    const double C8629 = C3524 * C1012;
    const double C1536 = C113 * C1176;
    const double C4564 = C3525 * C1176;
    const double C7243 = C1843 * C1176;
    const double C9189 = C3524 * C1176;
    const double C2319 = C1844 * C1180;
    const double C5144 = C3525 * C1180;
    const double C17256 = C1843 * C1180;
    const double C2505 = C1844 * C2127;
    const double C156 = C113 * C119;
    const double C3557 = C3524 * C119;
    const double C494 = C113 * C253;
    const double C3917 = C3524 * C253;
    const double C873 = C113 * C259;
    const double C4558 = C3524 * C259;
    const double C614 = C113 * C358;
    const double C1878 = C1843 * C358;
    const double C3545 = C3525 * C358;
    const double C4083 = C3524 * C358;
    const double C1862 = C1844 * C364;
    const double C2495 = C1843 * C364;
    const double C4089 = C3525 * C364;
    const double C1530 = C113 * C723;
    const double C2309 = C1843 * C723;
    const double C3923 = C3525 * C723;
    const double C5138 = C3524 * C723;
    const double C5355 = C32719 * C1190;
    const double C6916 = C32907 * C1190;
    const double C11243 = C32907 * C1190;
    const double C11883 = C10221 * C1190;
    const double C22288 = C32719 * C1190;
    const double C25334 = C24241 * C1190;
    const double C7578 = C32907 * C2671;
    const double C11881 = C32907 * C2671;
    const double C14397 = C32920 * C2671;
    const double C26144 = C24241 * C2671;
    const double C28095 = C32920 * C2671;
    const double C5354 = C3525 * C1178;
    const double C6915 = C1844 * C1178;
    const double C7579 = C1843 * C1178;
    const double C7577 = C1844 * C2668;
    const double C1024 =
        (3 * (C31849 + C31758 * C32237 + C32235 * ae) +
         C31758 * (2 * C32237 +
                   C31758 * (C31843 + C31758 * (C31758 * C31840 + C32007) +
                             C31920 * ae) +
                   C32238 * ae) +
         (2 * C32235 + C31758 * C32238) * ae) /
        C31508;
    const double C1188 =
        (C31759 * (C31849 + C31758 * C32237 + C32235 * ae)) / C31508;
    const double C1191 =
        (C31758 * C31849 + C32173 * ae + C32237 * C31953) / C31508;
    const double C1193 =
        (C31849 + C31758 * C32237 + C32235 * ae +
         (C31843 + C31758 * (C31758 * C31840 + C32007) + C31920 * ae) *
             C31953) /
        C31508;
    const double C1709 =
        (C31759 * (2 * C32237 +
                   C31758 * (C31843 + C31758 * (C31758 * C31840 + C32007) +
                             C31920 * ae) +
                   C32238 * ae)) /
        C31508;
    const double C2672 =
        (2 * C31759 * C32237 +
         C31759 * (C32237 + (C31758 * C31840 + C32007) * C31953)) /
        C31508;
    const double C7084 =
        (3 * (C32237 + C32326 * C31953) +
         C31759 * (2 * C31759 * C32326 + C31759 * (C32326 + C32339 * C31953))) /
        C31508;
    const double C2138 =
        (3 * (C31810 + C31759 * C32293 + C32291 * ae) +
         C31759 *
             (2 * C32293 + C31759 * (C31802 + C31759 * C32011 + C32092 * ae) +
              C32294 * ae) +
         (2 * C32291 + C31759 * C32294) * ae) /
        C31508;
    const double C6329 = C113 * C1014;
    const double C9605 = C3524 * C1014;
    const double C6927 = C1844 * C1179;
    const double C7567 = C1843 * C1179;
    const double C9393 = C3525 * C1179;
    const double C6685 = C113 * C1705;
    const double C6943 = C1843 * C1705;
    const double C8635 = C3525 * C1705;
    const double C10105 = C3524 * C1705;
    const double C508 = C496 + C497;
    const double C1064 = C1052 + C1053;
    const double C168 = C152 + C153;
    const double C509 = C498 + C499;
    const double C629 = C618 + C619;
    const double C1065 = C1054 + C1055;
    const double C1727 = C1720 + C1721;
    const double C161 = C32632 * C141;
    const double C493 = C32632 * C283;
    const double C3914 = C32874 * C283;
    const double C613 = C32632 * C388;
    const double C3550 = C32719 * C388;
    const double C4080 = C32874 * C388;
    const double C10254 = C10221 * C388;
    const double C20456 = C32719 * C388;
    const double C31824 = C31819 + C31823;
    const double C1202 = (ae * C31854 + C31759 * C31784 +
                          ae * (C31759 * C31905 + C31758 * C31913 * ae) +
                          C31758 * (ae * (C31759 * C31822 + C31913 * ae) +
                                    C31758 * (ae * C31861 + C31759 * C31793))) /
                         C31510;
    const double C1025 = (3 * (C31812 + C31817 * C31893) +
                          C31758 * (2 * C31898 + C31758 * C31903)) /
                         C31508;
    const double C32059 = C31786 + C32055;
    const double C31982 = C31976 + C31980;
    const double C31863 = C31858 + C31862;
    const double C2141 = (3 * (C31851 + C31856 * C31953) +
                          C31759 * (2 * C31957 + C31759 * C31959)) /
                         C31508;
    const double C32111 = C31786 + C32110;
    const double C32123 = C32121 + C32122;
    const double C1210 =
        (C31784 + ae * C31759 * C31861 +
         C31759 * (ae * C31861 + C31759 * C31793) +
         ae * (C31905 + C31759 * (C31759 * C31758 * C31832 + C31930 * ae) +
               C31759 * C31930 * ae) +
         C31758 * (ae * (C31822 + C31759 * (C31759 * C31832 + C31929 * ae) +
                         C31759 * C31929 * ae) +
                   C31758 * (C31793 + ae * C31759 * C31871 +
                             C31759 * (ae * C31871 +
                                       C31759 * (C31791 + std::pow(C31763, 8) *
                                                              bs[8] * C31764 *
                                                              C31774))))) /
        C31510;
    const double C31935 = C31933 + C31934;
    const double C32254 = C31913 + C32252;
    const double C32308 = C31913 + C32306;
    const double C32429 = C31759 * C32102;
    const double C32045 = C32031 + C32042;
    const double C32382 = C32013 + C32380;
    const double C32358 = C31758 * C32077;
    const double C32414 = C31924 + C32412;
    const double C32420 = C31759 * C32135;
    const double C32144 = C32142 + C32143;
    const double C32537 = C32536 / C31510;
    const double C32890 = 2 * C32856;
    const double C32545 = C32544 / C31508;
    const double C32894 = C32860 / C31512;
    const double C32922 = C32854 - C32889;
    const double C15789 = -C32889;
    const double C32936 = C32921 + C32534;
    const double C31601 = C31597 * be;
    const double C31572 = C31564 / C31508;
    const double C31581 = C31506 * C31577;
    const double C31610 = C31577 / C31544;
    const double C32673 = C32668 - C32672;
    const double C32927 = C32903 / C31508;
    const double C32680 = C32676 - C32679;
    const double C32941 = C32930 / C31544;
    const double C5477 =
        ((-(0 * be) / C31508) / C31544 -
         ((0 - (C31506 * C31507) / C31508) * be) / C31508) /
            C31544 -
        ((C31506 * ((-C31507 / C31508) / C31544 -
                    ((C32615 - (C31506 * C31545) / C31508) * be) / C31508) +
          C15047) *
         be) /
            C31508 +
        (-C31545 / C31508) / C31544 - (0 * be) / C31508;
    const double C31688 = C31684 * be;
    const double C31659 = C31651 / C31508;
    const double C10259 = C10224 * C358;
    const double C10247 = C10224 * C371;
    const double C10241 = C10224 * C359;
    const double C10235 = C10224 * C373;
    const double C10229 = C10224 * C360;
    const double C10674 = C10224 * C722;
    const double C10668 = C10224 * C729;
    const double C10662 = C10224 * C723;
    const double C10856 = C10224 * C363;
    const double C10850 = C10224 * C380;
    const double C10844 = C10224 * C364;
    const double C11270 = C10224 * C1705;
    const double C11252 = C10224 * C1177;
    const double C11246 = C10224 * C727;
    const double C11240 = C10224 * C721;
    const double C11554 = C10224 * C1176;
    const double C11882 = C10224 * C1178;
    const double C11870 = C10224 * C1179;
    const double C13202 = C10224 * C1180;
    const double C10243 = C10225 * C364;
    const double C10237 = C10225 * C380;
    const double C10231 = C10225 * C363;
    const double C10672 = C10225 * C1180;
    const double C10854 = C10225 * C2127;
    const double C10848 = C10225 * C2134;
    const double C11254 = C10225 * C1179;
    const double C11242 = C10225 * C1178;
    const double C11880 = C10225 * C2668;
    const double C20451 = C20431 * C358;
    const double C20447 = C20431 * C371;
    const double C20443 = C20431 * C359;
    const double C20439 = C20431 * C373;
    const double C20435 = C20431 * C360;
    const double C20837 = C20431 * C722;
    const double C20833 = C20431 * C729;
    const double C20829 = C20431 * C723;
    const double C21003 = C20431 * C363;
    const double C20999 = C20431 * C380;
    const double C20995 = C20431 * C364;
    const double C21297 = C20431 * C1176;
    const double C21495 = C20431 * C1705;
    const double C21475 = C20431 * C1177;
    const double C21471 = C20431 * C727;
    const double C21467 = C20431 * C721;
    const double C22069 = C20431 * C1180;
    const double C22287 = C20431 * C1178;
    const double C22279 = C20431 * C1179;
    const double C31668 = C31525 * C31664;
    const double C31697 = C31664 / C31544;
    const double C1887 = C1856 + C1857;
    const double C3566 = C3541 + C3542;
    const double C3564 = C3537 + C3538;
    const double C3562 = C3533 + C3534;
    const double C3560 = C3529 + C3530;
    const double C4109 = C4093 + C4094;
    const double C4590 = C4572 + C4573;
    const double C4579 = C4550 + C4551;
    const double C4577 = C4546 + C4547;
    const double C175 = C165 * C32615;
    const double C862 = C165 * C32939;
    const double C2788 = C165 * C32873;
    const double C5482 = C165 * C5471;
    const double C15057 = C165 * C15047;
    const double C174 = C164 * C114;
    const double C861 = C164 * C857;
    const double C2787 = C164 * C2784;
    const double C32715 = C32710 - C32714;
    const double C3569 = C3547 + C3548;
    const double C3567 = C3543 + C3544;
    const double C3565 = C3539 + C3540;
    const double C3563 = C3535 + C3536;
    const double C3561 = C3531 + C3532;
    const double C3559 = C3527 + C3528;
    const double C3946 = C3933 + C3934;
    const double C3944 = C3929 + C3930;
    const double C3942 = C3925 + C3926;
    const double C3940 = C3921 + C3922;
    const double C4112 = C4099 + C4100;
    const double C4110 = C4095 + C4096;
    const double C4108 = C4091 + C4092;
    const double C4106 = C4087 + C4088;
    const double C4591 = C4574 + C4575;
    const double C4589 = C4570 + C4571;
    const double C4578 = C4548 + C4549;
    const double C4576 = C4544 + C4545;
    const double C5361 = C5356 + C5357;
    const double C5359 = C5352 + C5353;
    const double C8646 = C8637 + C8638;
    const double C8644 = C8633 + C8634;
    const double C9400 = C9395 + C9396;
    const double C1880 = C1842 * C118;
    const double C1874 = C1842 * C129;
    const double C1864 = C1842 * C127;
    const double C1858 = C1842 * C117;
    const double C1852 = C1842 * C125;
    const double C1846 = C1842 * C116;
    const double C2323 = C1842 * C255;
    const double C2317 = C1842 * C268;
    const double C2311 = C1842 * C254;
    const double C2305 = C1842 * C266;
    const double C2509 = C1842 * C360;
    const double C2503 = C1842 * C373;
    const double C2497 = C1842 * C359;
    const double C2491 = C1842 * C371;
    const double C6945 = C1842 * C1013;
    const double C6939 = C1842 * C1021;
    const double C6929 = C1842 * C273;
    const double C6923 = C1842 * C257;
    const double C6917 = C1842 * C270;
    const double C6911 = C1842 * C256;
    const double C7247 = C1842 * C275;
    const double C7241 = C1842 * C258;
    const double C7581 = C1842 * C721;
    const double C7575 = C1842 * C727;
    const double C7569 = C1842 * C1177;
    const double C17258 = C1842 * C722;
    const double C17252 = C1842 * C729;
    const double C32929 = C32906 / C31508;
    const double C32722 = C32718 - C32721;
    const double C32943 = C32933 / C31544;
    const double C20460 = C20428 * C140;
    const double C20454 = C20428 * C139;
    const double C20450 = C20428 * C128;
    const double C20446 = C20428 * C138;
    const double C20442 = C20428 * C126;
    const double C20438 = C20428 * C137;
    const double C20434 = C20428 * C124;
    const double C20840 = C20428 * C269;
    const double C20836 = C20428 * C285;
    const double C20832 = C20428 * C267;
    const double C20828 = C20428 * C284;
    const double C20820 = C20428 * C283;
    const double C21006 = C20428 * C374;
    const double C21002 = C20428 * C390;
    const double C20998 = C20428 * C372;
    const double C20994 = C20428 * C389;
    const double C20986 = C20428 * C388;
    const double C21300 = C20428 * C288;
    const double C21296 = C20428 * C274;
    const double C21498 = C20428 * C1022;
    const double C21494 = C20428 * C1031;
    const double C21490 = C20428 * C1020;
    const double C21486 = C20428 * C1030;
    const double C21478 = C20428 * C287;
    const double C21474 = C20428 * C272;
    const double C21470 = C20428 * C286;
    const double C21466 = C20428 * C271;
    const double C22072 = C20428 * C728;
    const double C22068 = C20428 * C737;
    const double C22064 = C20428 * C1187;
    const double C22290 = C20428 * C726;
    const double C22286 = C20428 * C736;
    const double C22282 = C20428 * C1189;
    const double C22278 = C20428 * C1204;
    const double C10223 =
        ((-(0 * be) / C31508) / C31544 -
         ((0 - (C31525 * C31526) / C31508) * be) / C31508) /
            C31544 -
        ((C31525 * ((-C31526 / C31508) / C31544 -
                    ((C32632 - (C31525 * C31632) / C31508) * be) / C31508) +
          C20428) *
         be) /
            C31508 +
        (-C31632 / C31508) / C31544 - (0 * be) / C31508;
    const double C1881 = C32940 * C128;
    const double C1875 = C32940 * C139;
    const double C1865 = C32940 * C138;
    const double C1859 = C32940 * C126;
    const double C1853 = C32940 * C137;
    const double C1847 = C32940 * C124;
    const double C2324 = C32940 * C269;
    const double C2318 = C32940 * C285;
    const double C2312 = C32940 * C267;
    const double C2306 = C32940 * C284;
    const double C2510 = C32940 * C374;
    const double C2504 = C32940 * C390;
    const double C2498 = C32940 * C372;
    const double C2492 = C32940 * C389;
    const double C6946 = C32940 * C1022;
    const double C6940 = C32940 * C1031;
    const double C6930 = C32940 * C287;
    const double C6924 = C32940 * C272;
    const double C6918 = C32940 * C286;
    const double C6912 = C32940 * C271;
    const double C7248 = C32940 * C288;
    const double C7242 = C32940 * C274;
    const double C7582 = C32940 * C726;
    const double C7576 = C32940 * C736;
    const double C7570 = C32940 * C1189;
    const double C7564 = C32940 * C1204;
    const double C17259 = C32940 * C728;
    const double C17253 = C32940 * C737;
    const double C876 = C32632 * C289;
    const double C4555 = C32874 * C289;
    const double C21306 = C20428 * C289;
    const double C157 = C32632 * C130;
    const double C3558 = C32874 * C130;
    const double C20464 = C20428 * C130;
    const double C495 = C32632 * C265;
    const double C3918 = C32874 * C265;
    const double C20824 = C20428 * C265;
    const double C874 = C32632 * C276;
    const double C4559 = C32874 * C276;
    const double C21310 = C20428 * C276;
    const double C615 = C32632 * C370;
    const double C3546 = C32719 * C370;
    const double C4084 = C32874 * C370;
    const double C10260 = C10221 * C370;
    const double C20452 = C32719 * C370;
    const double C20990 = C20428 * C370;
    const double C1863 = C32907 * C381;
    const double C4090 = C32719 * C381;
    const double C10244 = C32907 * C381;
    const double C10845 = C10221 * C381;
    const double C20996 = C32719 * C381;
    const double C24263 = C24241 * C381;
    const double C1531 = C32632 * C730;
    const double C3924 = C32719 * C730;
    const double C5139 = C32874 * C730;
    const double C10663 = C10221 * C730;
    const double C20830 = C32719 * C730;
    const double C23931 = C20428 * C730;
    const double C1047 = C32632 * C1018;
    const double C1033 =
        (3 * (C31887 + ae * C31898 + C31758 * C31902) +
         ae * (2 * C31898 + C31758 * C31903) +
         C31758 *
             (2 * C31902 + ae * C31903 +
              C31758 * (C31786 + ae * C31758 * C31827 +
                        C31758 * (ae * C31827 + C31758 * C31766 * C31791)))) /
        C31510;
    const double C1535 = C32632 * C1203;
    const double C4561 = C32719 * C1203;
    const double C9186 = C32874 * C1203;
    const double C11561 = C10221 * C1203;
    const double C21302 = C32719 * C1203;
    const double C22060 = C20428 * C1203;
    const double C2320 = C32907 * C1194;
    const double C5145 = C32719 * C1194;
    const double C10673 = C32907 * C1194;
    const double C13203 = C10221 * C1194;
    const double C22070 = C32719 * C1194;
    const double C24692 = C24241 * C1194;
    const double C6332 = C32632 * C1032;
    const double C9602 = C32874 * C1032;
    const double C27383 = C20428 * C1032;
    const double C6684 = C32632 * C1714;
    const double C8632 = C32719 * C1714;
    const double C10102 = C32874 * C1714;
    const double C11265 = C10221 * C1714;
    const double C21492 = C32719 * C1714;
    const double C27883 = C20428 * C1714;
    const double C6330 = C32632 * C1023;
    const double C9606 = C32874 * C1023;
    const double C27387 = C20428 * C1023;
    const double C6928 = C32907 * C1192;
    const double C9394 = C32719 * C1192;
    const double C11255 = C32907 * C1192;
    const double C11871 = C10221 * C1192;
    const double C22280 = C32719 * C1192;
    const double C25360 = C24241 * C1192;
    const double C6686 = C32632 * C1708;
    const double C8636 = C32719 * C1708;
    const double C10106 = C32874 * C1708;
    const double C11271 = C10221 * C1708;
    const double C21496 = C32719 * C1708;
    const double C27887 = C20428 * C1708;
    const double C31991 = C31984 + C31985;
    const double C31981 = C31978 + C31979;
    const double C32396 = C31802 + C32392;
    const double C1869 = C32907 * C394;
    const double C4086 = C32719 * C394;
    const double C10250 = C32907 * C394;
    const double C10839 = C10221 * C394;
    const double C20992 = C32719 * C394;
    const double C24269 = C24241 * C394;
    const double C1529 = C32632 * C738;
    const double C3920 = C32719 * C738;
    const double C5135 = C32874 * C738;
    const double C10657 = C10221 * C738;
    const double C20826 = C32719 * C738;
    const double C23927 = C20428 * C738;
    const double C158 = C113 * C131;
    const double C3553 = C3524 * C131;
    const double C492 = C113 * C264;
    const double C3913 = C3524 * C264;
    const double C875 = C113 * C277;
    const double C4554 = C3524 * C277;
    const double C612 = C113 * C369;
    const double C1872 = C1843 * C369;
    const double C3549 = C3525 * C369;
    const double C4079 = C3524 * C369;
    const double C10253 = C10224 * C369;
    const double C20455 = C20431 * C369;
    const double C1868 = C1844 * C382;
    const double C2489 = C1843 * C382;
    const double C4085 = C3525 * C382;
    const double C10249 = C10225 * C382;
    const double C10838 = C10224 * C382;
    const double C20991 = C20431 * C382;
    const double C1528 = C113 * C731;
    const double C2303 = C1843 * C731;
    const double C3919 = C3525 * C731;
    const double C5134 = C3524 * C731;
    const double C10656 = C10224 * C731;
    const double C20825 = C20431 * C731;
    const double C2487 = C1844 * C2132;
    const double C10836 = C10225 * C2132;
    const double C1715 =
        (2 * (ae * (C31759 * C31817 + C31915 * ae) + C31758 * C31943) +
         ae * (C31759 * C31903 + (C31915 + C31923 * C31893) * ae) +
         C31758 *
             (C31943 + ae * (C31759 * C31758 * C31827 + C31924 * ae) +
              C31758 * (ae * (C31759 * C31827 + C31923 * ae) +
                        C31758 * (ae * C31866 + C31759 * C31766 * C31791)))) /
        C31510;
    const double C2145 =
        (2 * (ae * C31851 + C31759 * C31887) +
         ae * (C31851 + C31856 * std::pow(C31759, 2)) +
         C31759 * (C31887 + ae * C31759 * C31856 + C31759 * C31943)) /
        C31510;
    const double C2148 =
        (3 * (C31887 + ae * C31957 + C31759 * C31943) +
         ae * (2 * C31957 + C31759 * C31959) +
         C31759 *
             (2 * C31943 + ae * C31959 +
              C31759 * (C31786 + ae * C31759 * C31866 +
                        C31759 * (ae * C31866 + C31759 * C31766 * C31791)))) /
        C31510;
    const double C2678 =
        (ae * (2 * (C31759 * C31817 + C31915 * ae) +
               C31759 * (C31817 + C31759 * (C31759 * C31827 + C31923 * ae) +
                         C31759 * C31923 * ae) +
               (C31915 + C31923 * C31953) * ae) +
         C31758 *
             (2 * C31943 + ae * C31959 +
              C31759 * (C31786 + ae * C31759 * C31866 +
                        C31759 * (ae * C31866 + C31759 * C31766 * C31791)))) /
        C31510;
    const double C1186 =
        (C31759 * (C31851 + C31758 * C32245 + C32243 * ae)) / C31508;
    const double C1195 =
        (C31758 * C31851 + C32176 * ae + C32245 * C31953) / C31508;
    const double C1197 =
        (C31851 + C31758 * C32245 + C32243 * ae +
         (C31856 + C31758 * (C31758 * C31866 + C32068) + C31924 * ae) *
             C31953) /
        C31508;
    const double C2674 =
        (2 * C31759 * C32245 +
         C31759 * (C32245 + (C31758 * C31866 + C32068) * C31953)) /
        C31508;
    const double C7572 = C32907 * C2677;
    const double C11875 = C32907 * C2677;
    const double C14405 = C32920 * C2677;
    const double C26138 = C24241 * C2677;
    const double C28103 = C32920 * C2677;
    const double C32016 = C32014 + C32015;
    const double C32118 = C32115 + C32116;
    const double C32023 = C32022 + C32019;
    const double C32329 = C31843 + C32328;
    const double C32185 = C32183 + C32184;
    const double C1198 =
        (C31758 * C31815 + C31759 * (C31759 * C31905 + C32251 * ae) +
         C31759 * C32251 * ae) /
        C31508;
    const double C2675 =
        (2 * (C31759 * C31905 + C32251 * ae) +
         C31759 * (C31905 + C31759 * (C31759 * C31758 * C31832 + C31930 * ae) +
                   C31759 * C31930 * ae) +
         (C32251 + C31930 * C31953) * ae) /
        C31508;
    const double C1182 = C31758 * C32180 + C32251 * C31953;
    const double C2670 =
        2 * C31759 * C32251 + C31759 * (C32251 + C31930 * C31953);
    const double C32253 = C32249 + C32250;
    const double C32307 = C32304 + C32250;
    const double C2133 =
        (2 * (C31759 * C31815 + C32180 * ae) +
         C31759 * (C31815 + C31759 * (C31759 * C31822 + C32250) +
                   C31759 * C31913 * ae) +
         (C32180 + C31913 * C31953) * ae) /
        C31508;
    const double C1044 = C113 * C1017;
    const double C1527 = C32632 * C1185;
    const double C4557 = C32719 * C1185;
    const double C21308 = C32719 * C1185;
    const double C1046 = C113 * C1011;
    const double C1526 = C113 * C1175;
    const double C4556 = C3525 * C1175;
    const double C21307 = C20431 * C1175;
    const double C2493 = C1844 * C2126;
    const double C10842 = C10225 * C2126;
    const double C7252 = C32907 * C1208;
    const double C9184 = C32719 * C1208;
    const double C11563 = C32907 * C1208;
    const double C22058 = C32719 * C1208;
    const double C25342 = C24241 * C1208;
    const double C32413 = C32410 + C32356;
    const double C13201 = C32907 * C2673;
    const double C13895 = C32920 * C2673;
    const double C17255 = C32907 * C2673;
    const double C22788 = C32920 * C2673;
    const double C25932 = C24241 * C2673;
    const double C13200 = C10225 * C2669;
    const double C17254 = C1844 * C2669;
    const double C32075 = ae * C32072;
    const double C32417 = C31759 * C32072;
    const double C32361 = C31758 * C32359;
    const double C12185 =
        (3 * (C32245 + C32359 * C31953) +
         C31759 *
             (2 * C31759 * C32359 +
              C31759 * (C32359 + (C31758 * C32109 + C32071 * ae) * C31953))) /
        C31508;
    const double C1026 =
        (3 * (C31851 + C31758 * C32245 + C32243 * ae) +
         C31758 * (2 * C32245 +
                   C31758 * (C31856 + C31758 * (C31758 * C31866 + C32068) +
                             C31924 * ae) +
                   C32246 * ae) +
         (2 * C32243 + C31758 * C32246) * ae) /
        C31508;
    const double C1196 =
        (C31812 + C31817 * C31893 + C31759 * (C31759 * C31903 + C32246 * ae) +
         C31759 * C32246 * ae) /
        C31508;
    const double C1710 = (C31759 * (2 * C31898 + C31758 * C31903) +
                          (2 * C32243 + C31758 * C32246) * ae) /
                         C31508;
    const double C1711 =
        (C31759 * (2 * C32245 +
                   C31758 * (C31856 + C31758 * (C31758 * C31866 + C32068) +
                             C31924 * ae) +
                   C32246 * ae)) /
        C31508;
    const double C1015 = 3 * (C32176 + C31915 * C31893) +
                         C31758 * (2 * C32243 + C31758 * C32246);
    const double C1181 = C32176 + C31915 * C31893 + C32246 * C31953;
    const double C1706 = C31759 * (2 * C32243 + C31758 * C32246);
    const double C7404 =
        2 * C31759 * C32246 + C31759 * (C32246 + C32077 * C31953);
    const double C2140 =
        (3 * (C31812 + C31759 * C32300 + C32298 * ae) +
         C31759 *
             (2 * C32300 + C31759 * (C31817 + C31759 * C32072 + C32132 * ae) +
              C32301 * ae) +
         (2 * C32298 + C31759 * C32301) * ae) /
        C31508;
    const double C2130 = 3 * (C32176 + C31915 * C31953) +
                         C31759 * (2 * C32298 + C31759 * C32301);
    const double C32327 = C32324 + C32325;
    const double C32381 = C32378 + C32336;
    const double C7082 =
        (2 * (C31759 * C31896 + C32238 * ae) +
         C31759 * (C31896 + C31759 * (C31759 * C31977 + C32336) +
                   C31759 * C32013 * ae) +
         (C32238 + C32013 * C31953) * ae) /
        C31508;
    const double C7565 = C1844 * C7078;
    const double C11868 = C10225 * C7078;
    const double C32086 = ae * C32084;
    const double C32426 = C31759 * C32084;
    const double C7083 =
        (3 * (C31890 + C31759 * C32374 + C32372 * ae) +
         C31759 *
             (2 * C32374 + C31759 * (C31970 + C31759 * C32084 + C32098 * ae) +
              C32375 * ae) +
         (2 * C32372 + C31759 * C32375) * ae) /
        C31508;
    const double C7079 = 3 * (C32235 + C31920 * C31953) +
                         C31759 * (2 * C32372 + C31759 * C32375);
    const double C32043 = C31799 + C32039;
    const double C32342 = C31840 + C32341;
    const double C32435 = C32326 + C32434;
    const double C32397 = C32394 + C32395;
    const double C31795 = C31789 + C31794;
    const double C31909 = C31906 + C31907;
    const double C31947 = C31945 + C31946;
    const double C1045 = C32632 * C1029;
    const double C2302 = C32907 * C1209;
    const double C5133 = C32719 * C1209;
    const double C10655 = C32907 * C1209;
    const double C23925 = C32719 * C1209;
    const double C24674 = C24241 * C1209;
    const double C31999 = C31996 + C31997;
    const double C32044 = C32040 + C32041;
    const double C32085 = C32082 + C32083;
    const double C32062 = C31758 * C32060;
    const double C32076 = C31758 * C32073;
    const double C32107 = C31759 * C32073;
    const double C31834 = C31829 + C31833;
    const double C31910 = C31822 + C31908;
    const double C32000 = C31994 + C31998;
    const double C32063 = C31758 * C32061;
    const double C7405 =
        (2 * (C31759 * C31903 + C32246 * ae) +
         C31759 * (C31903 + C31759 * (C31759 * C32061 + C32077 * ae) +
                   C31759 * C32077 * ae) +
         (C32246 + C32077 * C31953) * ae) /
        C31508;
    const double C31873 = C31868 + C31872;
    const double C31963 = C31861 + C31962;
    const double C32128 = C32126 + C32127;
    const double C32139 = C31759 * C32136;
    const double C176 = C166 * C114;
    const double C869 = C166 * C857;
    const double C2791 = C166 * C2784;
    const double C519 = C511 * C114;
    const double C863 = C511 * C858;
    const double C1373 = C511 * C857;
    const double C2789 = C511 * C2785;
    const double C3146 = C511 * C2784;
    const double C5483 = C511 * C5478;
    const double C15058 = C511 * C15054;
    const double C639 = C631 * C114;
    const double C1543 = C631 * C857;
    const double C3290 = C631 * C2784;
    const double C177 = C167 * C32615;
    const double C870 = C167 * C32939;
    const double C2792 = C167 * C32873;
    const double C5488 = C167 * C5471;
    const double C15061 = C167 * C15047;
    const double C179 = C169 * C32615;
    const double C883 = C169 * C32939;
    const double C2796 = C169 * C32873;
    const double C5497 = C169 * C5471;
    const double C15065 = C169 * C15047;
    const double C518 = C510 * C32615;
    const double C1372 = C510 * C32939;
    const double C2790 = C510 * C32677;
    const double C3145 = C510 * C32873;
    const double C5484 = C510 * C5472;
    const double C5880 = C510 * C5471;
    const double C15059 = C510 * C32677;
    const double C15414 = C510 * C15047;
    const double C636 = C628 * C32615;
    const double C1532 = C628 * C32939;
    const double C3285 = C628 * C32873;
    const double C6032 = C628 * C5471;
    const double C15552 = C628 * C15047;
    const double C638 = C630 * C32615;
    const double C1542 = C630 * C32939;
    const double C3289 = C630 * C32873;
    const double C6038 = C630 * C5471;
    const double C15556 = C630 * C15047;
    const double C886 = C867 + C868;
    const double C4585 = C4562 + C4563;
    const double C1550 = C1538 + C1539;
    const double C3943 = C3927 + C3928;
    const double C5153 = C5142 + C5143;
    const double C1062 = C1048 + C1049;
    const double C8640 = C8625 + C8626;
    const double C885 = C865 + C866;
    const double C4587 = C4566 + C4567;
    const double C1884 = C1850 + C1851;
    const double C4111 = C4097 + C4098;
    const double C1551 = C1540 + C1541;
    const double C3945 = C3931 + C3932;
    const double C5155 = C5146 + C5147;
    const double C1063 = C1050 + C1051;
    const double C8642 = C8629 + C8630;
    const double C1549 = C1536 + C1537;
    const double C4586 = C4564 + C4565;
    const double C9194 = C9189 + C9190;
    const double C2520 = C2505 + C2506;
    const double C5360 = C5354 + C5355;
    const double C6949 = C6915 + C6916;
    const double C7592 = C7577 + C7578;
    const double C6331 = C113 * C1024;
    const double C9601 = C3524 * C1024;
    const double C1718 = C113 * C1188;
    const double C4568 = C3525 * C1188;
    const double C6931 = C1843 * C1188;
    const double C7563 = C1842 * C1188;
    const double C9391 = C3524 * C1188;
    const double C11258 = C10224 * C1188;
    const double C21479 = C20431 * C1188;
    const double C5350 = C3525 * C1191;
    const double C6921 = C1844 * C1191;
    const double C7573 = C1843 * C1191;
    const double C11248 = C10225 * C1191;
    const double C11876 = C10224 * C1191;
    const double C22283 = C20431 * C1191;
    const double C6933 = C1844 * C1193;
    const double C7561 = C1843 * C1193;
    const double C9389 = C3525 * C1193;
    const double C11260 = C10225 * C1193;
    const double C11864 = C10224 * C1193;
    const double C22275 = C20431 * C1193;
    const double C6683 = C113 * C1709;
    const double C6937 = C1843 * C1709;
    const double C8631 = C3525 * C1709;
    const double C10101 = C3524 * C1709;
    const double C11264 = C10224 * C1709;
    const double C21491 = C20431 * C1709;
    const double C7571 = C1844 * C2672;
    const double C11874 = C10225 * C2672;
    const double C516 = C508 * C32615;
    const double C1366 = C508 * C32939;
    const double C2794 = C508 * C32677;
    const double C3141 = C508 * C32873;
    const double C5490 = C508 * C5472;
    const double C5874 = C508 * C5471;
    const double C15063 = C508 * C32677;
    const double C15410 = C508 * C15047;
    const double C178 = C168 * C114;
    const double C884 = C168 * C857;
    const double C2795 = C168 * C2784;
    const double C517 = C509 * C114;
    const double C871 = C509 * C858;
    const double C1367 = C509 * C857;
    const double C2793 = C509 * C2785;
    const double C3142 = C509 * C2784;
    const double C5489 = C509 * C5478;
    const double C15062 = C509 * C15054;
    const double C637 = C629 * C114;
    const double C1533 = C629 * C857;
    const double C3286 = C629 * C2784;
    const double C133 = (4 * (2 * C31812 + C31766 * C31815) +
                         C31766 * (3 * C31815 + C31766 * C31824)) /
                        C31508;
    const double C263 = (C31758 * (3 * C31815 + C31766 * C31824)) / C31508;
    const double C278 =
        (2 * C31812 + C31766 * C31815 + C31824 * C31893) / C31508;
    const double C1525 = C32632 * C1202;
    const double C4553 = C32719 * C1202;
    const double C21304 = C32719 * C1202;
    const double C6502 = C32632 * C1025;
    const double C6323 = (4 * (2 * C31890 + C31758 * C31896) +
                          C31758 * (3 * C31896 + C31758 * C31982)) /
                         C31508;
    const double C132 = (4 * (2 * C31851 + C31766 * C31854) +
                         C31766 * (3 * C31854 + C31766 * C31863)) /
                        C31508;
    const double C262 = (C31758 * (3 * C31854 + C31766 * C31863) +
                         (3 * (C31917 + C31882 * C31774) +
                          C31766 * (2 * C31915 + C31766 * C31913)) *
                             ae) /
                        C31508;
    const double C367 = (C31759 * (3 * C31854 + C31766 * C31863)) / C31508;
    const double C384 =
        (2 * C31851 + C31766 * C31854 + C31863 * C31953) / C31508;
    const double C12095 = (4 * (2 * C31952 + C31759 * C31955) +
                           C31759 * (3 * C31955 + C31759 * C32123)) /
                          C31508;
    const double C32189 = C31766 * C31935;
    const double C32311 = C31758 * C31935;
    const double C1016 = 3 * (C32180 + C31913 * C31893) +
                         C31758 * (2 * C32251 + C31758 * C32254);
    const double C1183 = C32180 + C31913 * C31893 + C32254 * C31953;
    const double C1707 = C31759 * (2 * C32251 + C31758 * C32254);
    const double C2131 = 3 * (C32180 + C31913 * C31953) +
                         C31759 * (2 * C32305 + C31759 * C32308);
    const double C32431 = C32428 + C32429;
    const double C32338 = C31758 * C32045;
    const double C7080 = 3 * (C32238 + C32013 * C31953) +
                         C31759 * (2 * C32379 + C31759 * C32382);
    const double C32360 = C32357 + C32358;
    const double C12183 = 3 * (C32243 + C31924 * C31953) +
                          C31759 * (2 * C32411 + C31759 * C32414);
    const double C32422 = C32419 + C32420;
    const double C32404 = C31759 * C32144;
    const double C32538 = C32534 - C32537;
    const double C32923 = C32890 / C31508;
    const double C32546 = C32542 - C32545;
    const double C32937 = C32922 / C31544;
    const double C31603 = C31601 / C31508;
    const double C31576 = C32615 - C31572;
    const double C31585 = C31581 + C32677;
    const double C31613 = C31610 - C31612;
    const double C17595 = C169 * C32673;
    const double C17586 = C167 * C32673;
    const double C17580 = C165 * C32673;
    const double C17978 = C510 * C32673;
    const double C17972 = C508 * C32673;
    const double C18136 = C630 * C32673;
    const double C18130 = C628 * C32673;
    const double C32876 = C32673 * C32667;
    const double C32912 = C32878 + C32673;
    const double C872 = C508 * C32927;
    const double C864 = C510 * C32927;
    const double C17588 = C508 * C32680;
    const double C17582 = C510 * C32680;
    const double C32880 = C32680 / C31544;
    const double C32877 = C32680 * C32667;
    const double C7692 = C32941 - (C32673 * C32669) / C31508;
    const double C5498 = C168 * C5477;
    const double C5487 = C166 * C5477;
    const double C5481 = C164 * C5477;
    const double C5881 = C511 * C5477;
    const double C5875 = C509 * C5477;
    const double C6039 = C631 * C5477;
    const double C6033 = C629 * C5477;
    const double C31690 = C31688 / C31508;
    const double C31663 = C32632 - C31659;
    const double C10273 = C10247 + C10248;
    const double C10270 = C10241 + C10242;
    const double C10267 = C10235 + C10236;
    const double C10264 = C10229 + C10230;
    const double C10688 = C10674 + C10675;
    const double C10685 = C10668 + C10669;
    const double C10870 = C10856 + C10857;
    const double C10867 = C10850 + C10851;
    const double C11281 = C11252 + C11253;
    const double C11278 = C11246 + C11247;
    const double C11275 = C11240 + C11241;
    const double C11565 = C11554 + C11555;
    const double C11896 = C11882 + C11883;
    const double C10268 = C10237 + C10238;
    const double C10265 = C10231 + C10232;
    const double C10869 = C10854 + C10855;
    const double C11276 = C11242 + C11243;
    const double C11895 = C11880 + C11881;
    const double C20472 = C20447 + C20448;
    const double C20470 = C20443 + C20444;
    const double C20468 = C20439 + C20440;
    const double C20466 = C20435 + C20436;
    const double C20851 = C20837 + C20838;
    const double C20849 = C20833 + C20834;
    const double C21017 = C21003 + C21004;
    const double C21015 = C20999 + C21000;
    const double C21312 = C21297 + C21298;
    const double C21504 = C21475 + C21476;
    const double C21502 = C21471 + C21472;
    const double C21500 = C21467 + C21468;
    const double C22297 = C22287 + C22288;
    const double C31672 = C31668 + C32719;
    const double C31700 = C31697 - C31699;
    const double C24281 = C32715 * C128;
    const double C24275 = C32715 * C139;
    const double C24265 = C32715 * C138;
    const double C24259 = C32715 * C126;
    const double C24253 = C32715 * C137;
    const double C24247 = C32715 * C124;
    const double C24696 = C32715 * C269;
    const double C24690 = C32715 * C285;
    const double C24684 = C32715 * C267;
    const double C24678 = C32715 * C284;
    const double C24878 = C32715 * C374;
    const double C24872 = C32715 * C390;
    const double C24866 = C32715 * C372;
    const double C24860 = C32715 * C389;
    const double C25364 = C32715 * C272;
    const double C25358 = C32715 * C287;
    const double C25352 = C32715 * C274;
    const double C25346 = C32715 * C288;
    const double C25336 = C32715 * C286;
    const double C25330 = C32715 * C271;
    const double C25936 = C32715 * C728;
    const double C25930 = C32715 * C737;
    const double C26148 = C32715 * C726;
    const double C26142 = C32715 * C736;
    const double C30921 = C32715 * C1022;
    const double C30915 = C32715 * C1031;
    const double C31489 = C32715 * C1189;
    const double C31483 = C32715 * C1204;
    const double C32882 = C32715 * C32709;
    const double C32918 = C32884 + C32715;
    const double C3576 = C3565 + C3566;
    const double C3575 = C3563 + C3564;
    const double C8619 = C4591 + C4590;
    const double C1879 = C32929 * C370;
    const double C1873 = C32929 * C388;
    const double C1867 = C32929 * C389;
    const double C1861 = C32929 * C372;
    const double C1855 = C32929 * C390;
    const double C1849 = C32929 * C374;
    const double C2322 = C32929 * C728;
    const double C2316 = C32929 * C737;
    const double C2310 = C32929 * C730;
    const double C2304 = C32929 * C738;
    const double C2508 = C32929 * C379;
    const double C2502 = C32929 * C393;
    const double C2496 = C32929 * C381;
    const double C2490 = C32929 * C394;
    const double C6944 = C32929 * C1708;
    const double C6938 = C32929 * C1714;
    const double C6932 = C32929 * C1204;
    const double C6926 = C32929 * C1189;
    const double C6920 = C32929 * C736;
    const double C6914 = C32929 * C726;
    const double C7250 = C32929 * C1203;
    const double C7244 = C32929 * C1187;
    const double C7580 = C32929 * C1190;
    const double C7574 = C32929 * C1205;
    const double C7568 = C32929 * C1192;
    const double C7562 = C32929 * C1206;
    const double C17257 = C32929 * C1194;
    const double C17251 = C32929 * C1207;
    const double C24279 = C32722 * C370;
    const double C24273 = C32722 * C388;
    const double C24267 = C32722 * C389;
    const double C24261 = C32722 * C372;
    const double C24255 = C32722 * C390;
    const double C24249 = C32722 * C374;
    const double C24694 = C32722 * C728;
    const double C24688 = C32722 * C737;
    const double C24682 = C32722 * C730;
    const double C24676 = C32722 * C738;
    const double C24876 = C32722 * C379;
    const double C24870 = C32722 * C393;
    const double C24864 = C32722 * C381;
    const double C24858 = C32722 * C394;
    const double C25362 = C32722 * C1189;
    const double C25356 = C32722 * C1204;
    const double C25350 = C32722 * C1187;
    const double C25344 = C32722 * C1203;
    const double C25338 = C32722 * C736;
    const double C25332 = C32722 * C726;
    const double C25934 = C32722 * C1194;
    const double C25928 = C32722 * C1207;
    const double C26146 = C32722 * C1190;
    const double C26140 = C32722 * C1205;
    const double C30919 = C32722 * C1708;
    const double C30913 = C32722 * C1714;
    const double C31487 = C32722 * C1192;
    const double C31481 = C32722 * C1206;
    const double C32886 = C32722 / C31544;
    const double C32883 = C32722 * C32709;
    const double C13503 = C32943 - (C32715 * C32711) / C31508;
    const double C10261 = C10223 * C118;
    const double C10255 = C10223 * C129;
    const double C10245 = C10223 * C127;
    const double C10239 = C10223 * C117;
    const double C10233 = C10223 * C125;
    const double C10227 = C10223 * C116;
    const double C10676 = C10223 * C255;
    const double C10670 = C10223 * C268;
    const double C10664 = C10223 * C254;
    const double C10658 = C10223 * C266;
    const double C10858 = C10223 * C360;
    const double C10852 = C10223 * C373;
    const double C10846 = C10223 * C359;
    const double C10840 = C10223 * C371;
    const double C11272 = C10223 * C1013;
    const double C11266 = C10223 * C1021;
    const double C11256 = C10223 * C273;
    const double C11250 = C10223 * C257;
    const double C11244 = C10223 * C270;
    const double C11238 = C10223 * C256;
    const double C11558 = C10223 * C275;
    const double C11552 = C10223 * C258;
    const double C11884 = C10223 * C721;
    const double C11878 = C10223 * C727;
    const double C11872 = C10223 * C1177;
    const double C11866 = C10223 * C1188;
    const double C13204 = C10223 * C722;
    const double C13198 = C10223 * C729;
    const double C1899 = C1880 + C1881;
    const double C1896 = C1874 + C1875;
    const double C1891 = C1864 + C1865;
    const double C1888 = C1858 + C1859;
    const double C1885 = C1852 + C1853;
    const double C1882 = C1846 + C1847;
    const double C2336 = C2323 + C2324;
    const double C2333 = C2317 + C2318;
    const double C2330 = C2311 + C2312;
    const double C2327 = C2305 + C2306;
    const double C2522 = C2509 + C2510;
    const double C2519 = C2503 + C2504;
    const double C2516 = C2497 + C2498;
    const double C2513 = C2491 + C2492;
    const double C6964 = C6945 + C6946;
    const double C6961 = C6939 + C6940;
    const double C6956 = C6929 + C6930;
    const double C6953 = C6923 + C6924;
    const double C6950 = C6917 + C6918;
    const double C6947 = C6911 + C6912;
    const double C7256 = C7247 + C7248;
    const double C7253 = C7241 + C7242;
    const double C7594 = C7581 + C7582;
    const double C7591 = C7575 + C7576;
    const double C7588 = C7569 + C7570;
    const double C17265 = C17258 + C17259;
    const double C17262 = C17252 + C17253;
    const double C170 = C156 + C157;
    const double C3574 = C3557 + C3558;
    const double C507 = C494 + C495;
    const double C3938 = C3917 + C3918;
    const double C888 = C873 + C874;
    const double C4583 = C4558 + C4559;
    const double C627 = C614 + C615;
    const double C3568 = C3545 + C3546;
    const double C4104 = C4083 + C4084;
    const double C10279 = C10259 + C10260;
    const double C20474 = C20451 + C20452;
    const double C1890 = C1862 + C1863;
    const double C4107 = C4089 + C4090;
    const double C10271 = C10243 + C10244;
    const double C10864 = C10844 + C10845;
    const double C21013 = C20995 + C20996;
    const double C1547 = C1530 + C1531;
    const double C3941 = C3923 + C3924;
    const double C5151 = C5138 + C5139;
    const double C10682 = C10662 + C10663;
    const double C20847 = C20829 + C20830;
    const double C6504 = C32632 * C1033;
    const double C2334 = C2319 + C2320;
    const double C5154 = C5144 + C5145;
    const double C10687 = C10672 + C10673;
    const double C13210 = C13202 + C13203;
    const double C22079 = C22069 + C22070;
    const double C6337 = C6329 + C6330;
    const double C9610 = C9605 + C9606;
    const double C6955 = C6927 + C6928;
    const double C9399 = C9393 + C9394;
    const double C11282 = C11254 + C11255;
    const double C11890 = C11870 + C11871;
    const double C22293 = C22279 + C22280;
    const double C6690 = C6685 + C6686;
    const double C8645 = C8635 + C8636;
    const double C10110 = C10105 + C10106;
    const double C11290 = C11270 + C11271;
    const double C21513 = C21495 + C21496;
    const double C6326 =
        (4 * (2 * C31894 + ae * C31896 + C31758 * C31981) +
         ae * (3 * C31896 + C31758 * C31982) +
         C31758 *
             (3 * C31981 + ae * C31982 +
              C31758 * (2 * C31975 + ae * C31977 +
                        C31758 * (C31782 + ae * C31758 * C31820 +
                                  C31758 * (ae * C31820 + C31758 * C31791))))) /
        C31510;
    const double C32398 = C32396 + C32393;
    const double C171 = C158 + C159;
    const double C3572 = C3553 + C3554;
    const double C506 = C492 + C493;
    const double C3936 = C3913 + C3914;
    const double C889 = C875 + C876;
    const double C4581 = C4554 + C4555;
    const double C626 = C612 + C613;
    const double C3570 = C3549 + C3550;
    const double C4102 = C4079 + C4080;
    const double C10276 = C10253 + C10254;
    const double C20476 = C20455 + C20456;
    const double C1893 = C1868 + C1869;
    const double C4105 = C4085 + C4086;
    const double C10274 = C10249 + C10250;
    const double C10861 = C10838 + C10839;
    const double C21011 = C20991 + C20992;
    const double C1546 = C1528 + C1529;
    const double C3939 = C3919 + C3920;
    const double C5149 = C5134 + C5135;
    const double C10679 = C10656 + C10657;
    const double C20845 = C20825 + C20826;
    const double C8184 = C32632 * C1715;
    const double C8624 = C32719 * C1715;
    const double C21484 = C32719 * C1715;
    const double C2500 = C32907 * C2145;
    const double C10849 = C32907 * C2145;
    const double C13527 = C32920 * C2145;
    const double C22420 = C32920 * C2145;
    const double C24868 = C24241 * C2145;
    const double C14041 = C32920 * C2148;
    const double C22934 = C32920 * C2148;
    const double C13195 = C32907 * C2678;
    const double C13887 = C32920 * C2678;
    const double C17249 = C32907 * C2678;
    const double C22780 = C32920 * C2678;
    const double C25926 = C24241 * C2678;
    const double C1534 = C113 * C1186;
    const double C4560 = C3525 * C1186;
    const double C7249 = C1843 * C1186;
    const double C9185 = C3524 * C1186;
    const double C11560 = C10224 * C1186;
    const double C21301 = C20431 * C1186;
    const double C2313 = C1844 * C1195;
    const double C5140 = C3525 * C1195;
    const double C10666 = C10225 * C1195;
    const double C13196 = C10224 * C1195;
    const double C17250 = C1843 * C1195;
    const double C22065 = C20431 * C1195;
    const double C7251 = C1844 * C1197;
    const double C9183 = C3525 * C1197;
    const double C11562 = C10225 * C1197;
    const double C22057 = C20431 * C1197;
    const double C13194 = C10225 * C2674;
    const double C17248 = C1844 * C2674;
    const double C6411 =
        (3 * (C31939 + ae * (C31759 * C31970 + C31920 * ae) + C31758 * C32016) +
         ae * (C31759 * C31982 + (2 * C31920 + C31758 * C32013) * ae) +
         C31758 *
             (2 * C32016 + ae * (C31759 * C31977 + C32013 * ae) +
              C31758 * (C32012 + ae * (C31759 * C31986 + C31758 * C31884 * ae) +
                        C31758 * (ae * (C31759 * C31820 + C31884 * ae) +
                                  C31758 * (ae * C31859 + C31759 * C31791))))) /
        C31510;
    const double C6412 =
        (2 * (ae * (C31802 + C31759 * C32011 + C31759 * C31882 * ae) +
              C31758 * C32023) +
         ae * (C31896 + C31759 * (C31759 * C31977 + C32013 * ae) +
               C31759 * C32013 * ae) +
         C31758 *
             (C32023 +
              ae * (C31970 + C31759 * (C31759 * C31986 + C32020 * ae) +
                    C31759 * C32020 * ae) +
              C31758 *
                  (ae * (C31799 + C31759 * (C31759 * C31820 + C31884 * ae) +
                         C31759 * C31884 * ae) +
                   C31758 * (C31782 + ae * C31759 * C31859 +
                             C31759 * (ae * C31859 + C31759 * C31791))))) /
        C31510;
    const double C32330 = C32329 + C32323;
    const double C279 =
        (2 * C31851 + C31766 * C31854 +
         C31758 * (C31758 * C31863 + C32185 * ae) + C31758 * C32185 * ae) /
        C31508;
    const double C368 = (C31759 * (3 * C31815 + C31766 * C31824) +
                         (3 * C32180 + C31766 * C32185) * ae) /
                        C31508;
    const double C383 =
        (2 * C31812 + C31766 * C31815 +
         C31759 * (C31759 * C31824 + C32185 * ae) + C31759 * C32185 * ae) /
        C31508;
    const double C732 =
        (C31759 * C31758 * C31824 + C31758 * C32185 * ae) / C31508;
    const double C733 = (C31759 * (C31758 * C31863 + C32185 * ae)) / C31508;
    const double C120 = 4 * (2 * C32176 + C31766 * C32180) +
                        C31766 * (3 * C32180 + C31766 * C32185);
    const double C252 = C31758 * (3 * C32180 + C31766 * C32185);
    const double C260 = 2 * C32176 + C31766 * C32180 + C32185 * C31893;
    const double C357 = C31759 * (3 * C32180 + C31766 * C32185);
    const double C365 = 2 * C32176 + C31766 * C32180 + C32185 * C31953;
    const double C724 = C31759 * C31758 * C32185;
    const double C1357 =
        2 * C31758 * C32185 + C31758 * (C32185 + C31935 * C31893);
    const double C1519 = C31759 * (C32185 + C31935 * C31893);
    const double C2482 =
        2 * C31759 * C32185 + C31759 * (C32185 + C31935 * C31953);
    const double C2308 = C32907 * C1198;
    const double C5137 = C32719 * C1198;
    const double C10661 = C32907 * C1198;
    const double C23929 = C32719 * C1198;
    const double C24680 = C24241 * C1198;
    const double C2307 = C1844 * C1182;
    const double C5136 = C3525 * C1182;
    const double C10660 = C10225 * C1182;
    const double C23928 = C20431 * C1182;
    const double C1028 =
        (3 * (C31854 + C31758 * C32253 + C32251 * ae) +
         C31758 * (2 * C32253 +
                   C31758 * (C31861 + C31758 * (C31758 * C31871 + C31929 * ae) +
                             C31930 * ae) +
                   C32254 * ae) +
         (2 * C32251 + C31758 * C32254) * ae) /
        C31508;
    const double C1184 =
        (C31759 * (C31854 + C31758 * C32253 + C32251 * ae)) / C31508;
    const double C1199 =
        (C31758 * C31854 + C32180 * ae + C32253 * C31953) / C31508;
    const double C1201 =
        (C31854 + C31758 * C32253 + C32251 * ae +
         (C31861 + C31758 * (C31758 * C31871 + C31929 * ae) + C31930 * ae) *
             C31953) /
        C31508;
    const double C1713 =
        (C31759 * (2 * C32253 +
                   C31758 * (C31861 + C31758 * (C31758 * C31871 + C31929 * ae) +
                             C31930 * ae) +
                   C32254 * ae)) /
        C31508;
    const double C2676 =
        (2 * C31759 * C32253 +
         C31759 * (C32253 + (C31758 * C31871 + C31929 * ae) * C31953)) /
        C31508;
    const double C2142 =
        (3 * (C31815 + C31759 * C32307 + C32305 * ae) +
         C31759 * (2 * C32307 +
                   C31759 * (C31822 + C31759 * (C31759 * C31832 + C31929 * ae) +
                             C31759 * C31929 * ae) +
                   C32308 * ae) +
         (2 * C32305 + C31759 * C32308) * ae) /
        C31508;
    const double C2494 = C32907 * C2133;
    const double C10843 = C32907 * C2133;
    const double C13537 = C32920 * C2133;
    const double C22430 = C32920 * C2133;
    const double C24862 = C24241 * C2133;
    const double C1061 = C1046 + C1047;
    const double C1545 = C1526 + C1527;
    const double C4582 = C4556 + C4557;
    const double C21317 = C21307 + C21308;
    const double C12184 =
        (3 * (C31898 + C31759 * C32413 + C32411 * ae) +
         C31759 * (2 * C32413 +
                   C31759 * (C32051 +
                             C31759 * (C31759 * C31758 * C32054 + C32108 * ae) +
                             C31759 * C32108 * ae) +
                   C32414 * ae) +
         (2 * C32411 + C31759 * C32414) * ae) /
        C31508;
    const double C13209 = C13200 + C13201;
    const double C17263 = C17254 + C17255;
    const double C32421 = C31817 + C32417;
    const double C32362 = C31856 + C32361;
    const double C6503 = C113 * C1026;
    const double C7246 = C32907 * C1196;
    const double C9188 = C32719 * C1196;
    const double C11557 = C32907 * C1196;
    const double C22062 = C32719 * C1196;
    const double C25348 = C24241 * C1196;
    const double C8186 = C32632 * C1710;
    const double C8628 = C32719 * C1710;
    const double C21488 = C32719 * C1710;
    const double C8183 = C113 * C1711;
    const double C8623 = C3525 * C1711;
    const double C21483 = C20431 * C1711;
    const double C6501 = C113 * C1015;
    const double C7245 = C1844 * C1181;
    const double C9187 = C3525 * C1181;
    const double C11556 = C10225 * C1181;
    const double C22061 = C20431 * C1181;
    const double C8185 = C113 * C1706;
    const double C8627 = C3525 * C1706;
    const double C21487 = C20431 * C1706;
    const double C14049 = C32920 * C2140;
    const double C22942 = C32920 * C2140;
    const double C6406 = (C31759 * (3 * C31896 + C31758 * C31982) +
                          (3 * C32238 + C31758 * C32327) * ae) /
                         C31508;
    const double C6407 =
        (2 * C31890 + C31758 * C31896 +
         C31759 * (C31759 * C31982 + C32327 * ae) + C31759 * C32327 * ae) /
        C31508;
    const double C6320 = 4 * (2 * C32235 + C31758 * C32238) +
                         C31758 * (3 * C32238 + C31758 * C32327);
    const double C6402 = C31759 * (3 * C32238 + C31758 * C32327);
    const double C6403 = 2 * C32235 + C31758 * C32238 + C32327 * C31953;
    const double C7554 =
        2 * C31759 * C32327 + C31759 * (C32327 + C32045 * C31953);
    const double C7085 =
        (3 * (C31896 + C31759 * C32381 + C32379 * ae) +
         C31759 * (2 * C32381 +
                   C31759 * (C31977 + C31759 * (C31759 * C31995 + C32038 * ae) +
                             C31759 * C32038 * ae) +
                   C32382 * ae) +
         (2 * C32379 + C31759 * C32382) * ae) /
        C31508;
    const double C7566 = C32907 * C7082;
    const double C11869 = C32907 * C7082;
    const double C14415 = C32920 * C7082;
    const double C28113 = C32920 * C7082;
    const double C31485 = C24241 * C7082;
    const double C32088 = C32012 + C32086;
    const double C32430 = C31970 + C32426;
    const double C14935 = C32920 * C7083;
    const double C28633 = C32920 * C7083;
    const double C32046 = C32043 + C32035;
    const double C32343 = C32342 + C32081;
    const double C12357 =
        (4 * (2 * C31759 * C32326 + C31759 * C32435) +
         C31759 * (3 * C32435 + C31759 * (2 * C31759 * C32339 +
                                          C31759 * (C32339 + (C31758 * C31869 +
                                                              C31927 * ae) *
                                                                 C31953)))) /
        C31508;
    const double C12093 = 4 * (2 * C32291 + C31759 * C32294) +
                          C31759 * (3 * C32294 + C31759 * C32397);
    const double C142 =
        (5 * (3 * C31784 + C31766 * C31795) +
         C31766 * (4 * C31795 +
                   C31766 * (3 * C31793 +
                             C31766 * (2 * C31766 * C31791 +
                                       C31766 * (C31791 + std::pow(C31763, 8) *
                                                              bs[8] * C31764 *
                                                              C31774))))) /
        C31510;
    const double C282 =
        (ae * (3 * (C31767 * C31768 * C31797 + C31799 * C31774) +
               C31766 *
                   (2 * C31766 * C31799 +
                    C31766 * (C31799 + C31779 * C31780 * C31797 * C31774))) +
         C31758 * (3 * C31784 + C31766 * C31795)) /
        C31510;
    const double C290 =
        (2 * C31766 * C31777 + C31766 * C31784 + ae * C31758 * C31824 +
         C31758 * (ae * C31824 + C31758 * C31795)) /
        C31510;
    const double C387 =
        (ae * (3 * (C31767 * C31768 * C31838 + C31840 * C31774) +
               C31766 *
                   (2 * C31766 * C31840 +
                    C31766 * (C31840 + C31779 * C31780 * C31838 * C31774))) +
         C31759 * (3 * C31784 + C31766 * C31795)) /
        C31510;
    const double C395 =
        (2 * C31766 * C31777 + C31766 * C31784 + ae * C31759 * C31863 +
         C31759 * (ae * C31863 + C31759 * C31795)) /
        C31510;
    const double C739 = (ae * (C31759 * C31824 +
                               (2 * C31766 * C31882 +
                                C31766 * (C31882 + C31773 * C31775 * C31774)) *
                                   ae) +
                         C31758 * (ae * C31863 + C31759 * C31795)) /
                        C31510;
    const double C2144 =
        (2 * (ae * C31854 + C31759 * C31784) +
         ae * (C31854 + C31861 * std::pow(C31759, 2)) +
         C31759 * (C31784 + ae * C31759 * C31861 + C31759 * C31947)) /
        C31510;
    const double C1060 = C1044 + C1045;
    const double C32001 = C31758 * C31999;
    const double C32047 = C31758 * C32044;
    const double C32117 = C31759 * C32044;
    const double C32087 = C31758 * C32085;
    const double C32064 = C32059 + C32062;
    const double C32078 = C32075 + C32076;
    const double C32112 = C32111 + C32107;
    const double C31835 = C31766 * C31834;
    const double C1360 =
        (2 * (ae * C31824 + C31758 * C31795) + ae * (C31824 + C31834 * C31893) +
         C31758 * (C31795 + ae * C31758 * C31834 +
                   C31758 * (ae * C31834 +
                             C31758 * (2 * C31766 * C31791 +
                                       C31766 * (C31791 + std::pow(C31763, 8) *
                                                              bs[8] * C31764 *
                                                              C31774))))) /
        C31510;
    const double C1358 =
        (2 * C31758 * C31824 + C31758 * (C31824 + C31834 * C31893)) / C31508;
    const double C1520 = (C31759 * (C31824 + C31834 * C31893) +
                          (C32185 + C31935 * C31893) * ae) /
                         C31508;
    const double C2483 =
        (2 * (C31759 * C31824 + C32185 * ae) +
         C31759 * (C31824 + C31759 * (C31759 * C31834 + C31935 * ae) +
                   C31759 * C31935 * ae) +
         (C32185 + C31935 * C31953) * ae) /
        C31508;
    const double C1034 =
        (3 * (C31784 + ae * C31905 + C31758 * C31909) +
         ae * (2 * C31905 + C31758 * C31910) +
         C31758 * (2 * C31909 + ae * C31910 +
                   C31758 * (C31793 + ae * C31758 * C31832 +
                             C31758 * (ae * C31832 +
                                       C31758 * (C31791 + std::pow(C31763, 8) *
                                                              bs[8] * C31764 *
                                                              C31774))))) /
        C31510;
    const double C1716 =
        (2 * (ae * (C31759 * C31822 + C31913 * ae) + C31758 * C31947) +
         ae * (C31759 * C31910 + (C31913 + C31929 * C31893) * ae) +
         C31758 * (C31947 + ae * (C31759 * C31758 * C31832 + C31930 * ae) +
                   C31758 * (ae * (C31759 * C31832 + C31929 * ae) +
                             C31758 * (ae * C31871 +
                                       C31759 * (C31791 + std::pow(C31763, 8) *
                                                              bs[8] * C31764 *
                                                              C31774))))) /
        C31510;
    const double C1027 = (3 * (C31815 + C31822 * C31893) +
                          C31758 * (2 * C31905 + C31758 * C31910)) /
                         C31508;
    const double C1200 =
        (C31815 + C31822 * C31893 + C31759 * (C31759 * C31910 + C32254 * ae) +
         C31759 * C32254 * ae) /
        C31508;
    const double C1712 = (C31759 * (2 * C31905 + C31758 * C31910) +
                          (2 * C32251 + C31758 * C32254) * ae) /
                         C31508;
    const double C32002 = C31758 * C32000;
    const double C7555 =
        (2 * (C31759 * C31982 + C32327 * ae) +
         C31759 * (C31982 + C31759 * (C31759 * C32000 + C32045 * ae) +
                   C31759 * C32045 * ae) +
         (C32327 + C32045 * C31953) * ae) /
        C31508;
    const double C32065 = C32057 + C32063;
    const double C31874 = C31766 * C31873;
    const double C1522 =
        (ae * C31863 + C31759 * C31795 +
         ae * (C31759 * C31758 * C31834 + C31758 * C31935 * ae) +
         C31758 * (ae * (C31759 * C31834 + C31935 * ae) +
                   C31758 * (ae * C31873 +
                             C31759 * (2 * C31766 * C31791 +
                                       C31766 * (C31791 + std::pow(C31763, 8) *
                                                              bs[8] * C31764 *
                                                              C31774))))) /
        C31510;
    const double C2299 =
        (ae * (C31824 + C31759 * (C31759 * C31834 + C31935 * ae) +
               C31759 * C31935 * ae) +
         C31758 * (C31795 + ae * C31759 * C31873 +
                   C31759 * (ae * C31873 +
                             C31759 * (2 * C31766 * C31791 +
                                       C31766 * (C31791 + std::pow(C31763, 8) *
                                                              bs[8] * C31764 *
                                                              C31774))))) /
        C31510;
    const double C2485 =
        (2 * (ae * C31863 + C31759 * C31795) + ae * (C31863 + C31873 * C31953) +
         C31759 * (C31795 + ae * C31759 * C31873 +
                   C31759 * (ae * C31873 +
                             C31759 * (2 * C31766 * C31791 +
                                       C31766 * (C31791 + std::pow(C31763, 8) *
                                                              bs[8] * C31764 *
                                                              C31774))))) /
        C31510;
    const double C1359 =
        (2 * (C31758 * C31863 + C32185 * ae) +
         C31758 * (C31863 + C31758 * (C31758 * C31873 + C31935 * ae) +
                   C31758 * C31935 * ae) +
         (C32185 + C31935 * C31893) * ae) /
        C31508;
    const double C1521 =
        (C31759 * (C31863 + C31758 * (C31758 * C31873 + C31935 * ae) +
                   C31758 * C31935 * ae)) /
        C31508;
    const double C2298 = (C31758 * C31863 + C32185 * ae +
                          (C31758 * C31873 + C31935 * ae) * C31953) /
                         C31508;
    const double C2484 =
        (2 * C31759 * C31863 + C31759 * (C31863 + C31873 * C31953)) / C31508;
    const double C2149 =
        (3 * (C31784 + ae * C31961 + C31759 * C31947) +
         ae * (2 * C31961 + C31759 * C31963) +
         C31759 * (2 * C31947 + ae * C31963 +
                   C31759 * (C31793 + ae * C31759 * C31871 +
                             C31759 * (ae * C31871 +
                                       C31759 * (C31791 + std::pow(C31763, 8) *
                                                              bs[8] * C31764 *
                                                              C31774))))) /
        C31510;
    const double C2679 =
        (ae * (2 * (C31759 * C31822 + C31913 * ae) +
               C31759 * (C31822 + C31759 * (C31759 * C31832 + C31929 * ae) +
                         C31759 * C31929 * ae) +
               (C31913 + C31929 * C31953) * ae) +
         C31758 * (2 * C31947 + ae * C31963 +
                   C31759 * (C31793 + ae * C31759 * C31871 +
                             C31759 * (ae * C31871 +
                                       C31759 * (C31791 + std::pow(C31763, 8) *
                                                              bs[8] * C31764 *
                                                              C31774))))) /
        C31510;
    const double C2143 = (3 * (C31854 + C31861 * C31953) +
                          C31759 * (2 * C31961 + C31759 * C31963)) /
                         C31508;
    const double C32129 = C31759 * C32128;
    const double C32140 = C32138 + C32139;
    const double C184 = C176 + C177;
    const double C887 = C869 + C870;
    const double C2803 = C2791 + C2792;
    const double C893 = C886 * C32904;
    const double C1370 = C886 * C32927;
    const double C3143 = C886 * C32677;
    const double C5486 = C886 * C32904;
    const double C5878 = C886 * C5472;
    const double C15412 = C886 * C32677;
    const double C17584 = C886 * C17571;
    const double C17976 = C886 * C32680;
    const double C1558 = C1550 * C32927;
    const double C3287 = C1550 * C32677;
    const double C6036 = C1550 * C5472;
    const double C15554 = C1550 * C32677;
    const double C18134 = C1550 * C32680;
    const double C4936 = C3943 + C3944;
    const double C4933 = C3944 + C3943;
    const double C1368 = C1062 * C32904;
    const double C5876 = C1062 * C32904;
    const double C7710 = C1062 * C32914;
    const double C15803 = C1062 * C32914;
    const double C17974 = C1062 * C17571;
    const double C892 = C885 * C859;
    const double C1371 = C885 * C858;
    const double C3144 = C885 * C2785;
    const double C5485 = C885 * C5479;
    const double C5879 = C885 * C5478;
    const double C15413 = C885 * C15054;
    const double C1559 = C1551 * C858;
    const double C3288 = C1551 * C2785;
    const double C6037 = C1551 * C5478;
    const double C15555 = C1551 * C15054;
    const double C4937 = C3945 + C3946;
    const double C4932 = C3946 + C3945;
    const double C1369 = C1063 * C859;
    const double C5877 = C1063 * C5479;
    const double C1557 = C1549 * C859;
    const double C6035 = C1549 * C5479;
    const double C8621 = C4587 + C4586;
    const double C8988 = C4586 + C4587;
    const double C6338 = C6331 + C6332;
    const double C9608 = C9601 + C9602;
    const double C1726 = C1718 + C1719;
    const double C4588 = C4568 + C4569;
    const double C7585 = C7563 + C7564;
    const double C9398 = C9391 + C9392;
    const double C11284 = C11258 + C11259;
    const double C21506 = C21479 + C21480;
    const double C5358 = C5350 + C5351;
    const double C6952 = C6921 + C6922;
    const double C11279 = C11248 + C11249;
    const double C11893 = C11876 + C11877;
    const double C22295 = C22283 + C22284;
    const double C6958 = C6933 + C6934;
    const double C9397 = C9389 + C9390;
    const double C11285 = C11260 + C11261;
    const double C11887 = C11864 + C11865;
    const double C22291 = C22275 + C22276;
    const double C6689 = C6683 + C6684;
    const double C8643 = C8631 + C8632;
    const double C10108 = C10101 + C10102;
    const double C11287 = C11264 + C11265;
    const double C21511 = C21491 + C21492;
    const double C7589 = C7571 + C7572;
    const double C11892 = C11874 + C11875;
    const double C185 = C178 + C179;
    const double C2804 = C2795 + C2796;
    const double C163 = C32632 * C133;
    const double C491 = C32632 * C263;
    const double C880 = C32632 * C278;
    const double C6336 = C32632 * C6323;
    const double C160 = C113 * C132;
    const double C488 = C113 * C262;
    const double C608 = C113 * C367;
    const double C3551 = C3525 * C367;
    const double C20457 = C20431 * C367;
    const double C1870 = C1844 * C384;
    const double C4077 = C3525 * C384;
    const double C10251 = C10225 * C384;
    const double C20983 = C20431 * C384;
    const double C32190 = C32188 + C32189;
    const double C2297 =
        (C31758 * C31824 + C31759 * (C31759 * C31758 * C31834 + C32311 * ae) +
         C31759 * C32311 * ae) /
        C31508;
    const double C2296 = C31758 * C32185 + C32311 * C31953;
    const double C12355 = 4 * (2 * C32372 + C31759 * C32375) +
                          C31759 * (3 * C32375 + C31759 * C32431);
    const double C32340 = C32337 + C32338;
    const double C6496 = 4 * (2 * C32243 + C31758 * C32246) +
                         C31758 * (3 * C32246 + C31758 * C32360);
    const double C6588 = C31759 * (3 * C32246 + C31758 * C32360);
    const double C7236 = 2 * C32243 + C31758 * C32246 + C32360 * C31953;
    const double C12269 = 4 * (2 * C32298 + C31759 * C32301) +
                          C31759 * (3 * C32301 + C31759 * C32422);
    const double C32406 = C32403 + C32404;
    const double C32853 = C32538 * C32528;
    const double C32892 = C32858 + C32538;
    const double C32861 = C32546 / C31544;
    const double C32857 = C32546 * C32528;
    const double C2780 = C32937 - (C32538 * C32529) / C31508;
    const double C31605 = C31600 - C31603;
    const double C31580 = C31576 * ae;
    const double C15053 = (-C31562) / C31544 - (C31576 * be) / C31508;
    const double C31589 = C31585 * be;
    const double C17583 = C885 * C31613;
    const double C17975 = C1063 * C31613;
    const double C18133 = C1549 * C31613;
    const double C6257 =
        (C31613 / C31544 + (0 * ae) / C31508) / C31544 - (0 * be) / C31508;
    const double C7701 = C31613 / C31544 - (0 * be) / C31508;
    const double C15794 = C31613 / C31544 + (0 * ae) / C31508;
    const double C32909 = C32876 / C31508;
    const double C32931 = C32912 / C31544;
    const double C32932 = C32913 + C32880;
    const double C7694 = C32880 - C32678 / C31512;
    const double C32911 = C32877 / C31508;
    const double C7717 = C167 * C7692;
    const double C7704 = C165 * C7692;
    const double C8051 = C510 * C7692;
    const double C8191 = C630 * C7692;
    const double C5499 = C5487 + C5488;
    const double C31692 = C31687 - C31690;
    const double C31667 = C31663 * ae;
    const double C20430 = (-C31649) / C31544 - (C31663 * be) / C31508;
    const double C31676 = C31672 * be;
    const double C24270 = C31700 * C384;
    const double C24268 = C31700 * C382;
    const double C24262 = C31700 * C364;
    const double C24256 = C31700 * C380;
    const double C24250 = C31700 * C363;
    const double C24691 = C31700 * C1180;
    const double C24685 = C31700 * C1195;
    const double C24679 = C31700 * C1182;
    const double C24873 = C31700 * C2127;
    const double C24867 = C31700 * C2134;
    const double C24861 = C31700 * C2126;
    const double C24855 = C31700 * C2132;
    const double C25359 = C31700 * C1179;
    const double C25353 = C31700 * C1193;
    const double C25347 = C31700 * C1181;
    const double C25341 = C31700 * C1197;
    const double C25339 = C31700 * C1191;
    const double C25333 = C31700 * C1178;
    const double C25931 = C31700 * C2669;
    const double C25925 = C31700 * C2674;
    const double C26143 = C31700 * C2668;
    const double C26137 = C31700 * C2672;
    const double C31484 = C31700 * C7078;
    const double C11968 =
        (C31700 / C31544 + (0 * ae) / C31508) / C31544 - (0 * be) / C31508;
    const double C13510 = C31700 / C31544 - (0 * be) / C31508;
    const double C22403 = C31700 / C31544 + (0 * ae) / C31508;
    const double C32915 = C32882 / C31508;
    const double C32934 = C32918 / C31544;
    const double C3580 = C3576 * C32615;
    const double C4390 = C3576 * C32873;
    const double C18431 = C3576 * C15047;
    const double C3579 = C3575 * C114;
    const double C4389 = C3575 * C2784;
    const double C1898 = C1878 + C1879;
    const double C1895 = C1872 + C1873;
    const double C1892 = C1866 + C1867;
    const double C1889 = C1860 + C1861;
    const double C1886 = C1854 + C1855;
    const double C1883 = C1848 + C1849;
    const double C2335 = C2321 + C2322;
    const double C2332 = C2315 + C2316;
    const double C2329 = C2309 + C2310;
    const double C2326 = C2303 + C2304;
    const double C2521 = C2507 + C2508;
    const double C2518 = C2501 + C2502;
    const double C2515 = C2495 + C2496;
    const double C2512 = C2489 + C2490;
    const double C6963 = C6943 + C6944;
    const double C6960 = C6937 + C6938;
    const double C6957 = C6931 + C6932;
    const double C6954 = C6925 + C6926;
    const double C6951 = C6919 + C6920;
    const double C6948 = C6913 + C6914;
    const double C7254 = C7243 + C7244;
    const double C7593 = C7579 + C7580;
    const double C7590 = C7573 + C7574;
    const double C7587 = C7567 + C7568;
    const double C7584 = C7561 + C7562;
    const double C17264 = C17256 + C17257;
    const double C32935 = C32919 + C32886;
    const double C13505 = C32886 - C32720 / C31512;
    const double C32917 = C32883 / C31508;
    const double C13543 = C13503 * C126;
    const double C13535 = C13503 * C138;
    const double C13521 = C13503 * C137;
    const double C13513 = C13503 * C124;
    const double C13901 = C13503 * C269;
    const double C13893 = C13503 * C285;
    const double C14055 = C13503 * C374;
    const double C14047 = C13503 * C390;
    const double C14421 = C13503 * C272;
    const double C14413 = C13503 * C287;
    const double C14399 = C13503 * C286;
    const double C14391 = C13503 * C271;
    const double C14941 = C13503 * C726;
    const double C14933 = C13503 * C736;
    const double C10280 = C10261 + C10262;
    const double C10277 = C10255 + C10256;
    const double C10272 = C10245 + C10246;
    const double C10269 = C10239 + C10240;
    const double C10266 = C10233 + C10234;
    const double C10263 = C10227 + C10228;
    const double C10689 = C10676 + C10677;
    const double C10686 = C10670 + C10671;
    const double C10683 = C10664 + C10665;
    const double C10680 = C10658 + C10659;
    const double C10871 = C10858 + C10859;
    const double C10868 = C10852 + C10853;
    const double C10865 = C10846 + C10847;
    const double C10862 = C10840 + C10841;
    const double C11291 = C11272 + C11273;
    const double C11288 = C11266 + C11267;
    const double C11283 = C11256 + C11257;
    const double C11280 = C11250 + C11251;
    const double C11277 = C11244 + C11245;
    const double C11274 = C11238 + C11239;
    const double C11567 = C11558 + C11559;
    const double C11564 = C11552 + C11553;
    const double C11897 = C11884 + C11885;
    const double C11894 = C11878 + C11879;
    const double C11891 = C11872 + C11873;
    const double C11888 = C11866 + C11867;
    const double C13211 = C13204 + C13205;
    const double C13208 = C13198 + C13199;
    const double C180 = C170 * C114;
    const double C2802 = C170 * C2784;
    const double C515 = C507 * C114;
    const double C882 = C507 * C858;
    const double C2797 = C507 * C2785;
    const double C3138 = C507 * C2784;
    const double C5496 = C507 * C5478;
    const double C15066 = C507 * C15054;
    const double C895 = C888 * C859;
    const double C1365 = C888 * C858;
    const double C3140 = C888 * C2785;
    const double C5491 = C888 * C5479;
    const double C5873 = C888 * C5478;
    const double C15409 = C888 * C15054;
    const double C17589 = C888 * C31613;
    const double C635 = C627 * C114;
    const double C3282 = C627 * C2784;
    const double C3577 = C3567 + C3568;
    const double C1555 = C1547 * C858;
    const double C3284 = C1547 * C2785;
    const double C6031 = C1547 * C5478;
    const double C15551 = C1547 * C15054;
    const double C4391 = C3942 + C3941;
    const double C4935 = C3941 + C3942;
    const double C9597 = C8646 + C8645;
    const double C6334 = C32632 * C6326;
    const double C181 = C171 * C32615;
    const double C2801 = C171 * C32873;
    const double C15070 = C171 * C15047;
    const double C514 = C506 * C32615;
    const double C881 = C506 * C32927;
    const double C2798 = C506 * C32677;
    const double C3137 = C506 * C32873;
    const double C5495 = C506 * C5472;
    const double C15067 = C506 * C32677;
    const double C15406 = C506 * C15047;
    const double C17593 = C506 * C32680;
    const double C896 = C889 * C32904;
    const double C1364 = C889 * C32927;
    const double C3139 = C889 * C32677;
    const double C5492 = C889 * C32904;
    const double C5872 = C889 * C5472;
    const double C15408 = C889 * C32677;
    const double C17590 = C889 * C17571;
    const double C17970 = C889 * C32680;
    const double C634 = C626 * C32615;
    const double C3281 = C626 * C32873;
    const double C15548 = C626 * C15047;
    const double C3578 = C3569 + C3570;
    const double C1554 = C1546 * C32927;
    const double C3283 = C1546 * C32677;
    const double C6030 = C1546 * C5472;
    const double C15550 = C1546 * C32677;
    const double C18128 = C1546 * C32680;
    const double C4392 = C3940 + C3939;
    const double C4934 = C3939 + C3940;
    const double C2517 = C2499 + C2500;
    const double C10866 = C10848 + C10849;
    const double C1548 = C1534 + C1535;
    const double C4584 = C4560 + C4561;
    const double C7257 = C7249 + C7250;
    const double C9192 = C9185 + C9186;
    const double C11568 = C11560 + C11561;
    const double C21314 = C21301 + C21302;
    const double C2331 = C2313 + C2314;
    const double C5152 = C5140 + C5141;
    const double C10684 = C10666 + C10667;
    const double C13207 = C13196 + C13197;
    const double C17261 = C17250 + C17251;
    const double C22077 = C22065 + C22066;
    const double C7258 = C7251 + C7252;
    const double C9191 = C9183 + C9184;
    const double C11569 = C11562 + C11563;
    const double C22073 = C22057 + C22058;
    const double C13206 = C13194 + C13195;
    const double C17260 = C17248 + C17249;
    const double C6680 = C32632 * C6411;
    const double C9600 = C32719 * C6411;
    const double C27381 = C32719 * C6411;
    const double C6936 = C32907 * C6412;
    const double C10100 = C32719 * C6412;
    const double C11263 = C32907 * C6412;
    const double C27881 = C32719 * C6412;
    const double C30911 = C24241 * C6412;
    const double C6322 =
        (4 * (2 * C32237 + C31758 * C32330 + C32238 * ae) +
         C31758 *
             (3 * C32330 +
              C31758 * (2 * C32326 +
                        C31758 * (C31840 + C31758 * (C31758 * C31859 + C32026) +
                                  C32081) +
                        C32013 * ae) +
              C32327 * ae) +
         (3 * C32238 + C31758 * C32327) * ae) /
        C31508;
    const double C877 = C113 * C279;
    const double C611 = C32632 * C368;
    const double C3556 = C32719 * C368;
    const double C20462 = C32719 * C368;
    const double C1877 = C32907 * C383;
    const double C4082 = C32719 * C383;
    const double C10258 = C32907 * C383;
    const double C20988 = C32719 * C383;
    const double C24277 = C24241 * C383;
    const double C3280 = C32632 * C732;
    const double C3916 = C32719 * C732;
    const double C20822 = C32719 * C732;
    const double C3277 = C113 * C733;
    const double C3911 = C3525 * C733;
    const double C20817 = C20431 * C733;
    const double C162 = C113 * C120;
    const double C490 = C113 * C252;
    const double C879 = C113 * C260;
    const double C610 = C113 * C357;
    const double C3555 = C3525 * C357;
    const double C20461 = C20431 * C357;
    const double C1876 = C1844 * C365;
    const double C4081 = C3525 * C365;
    const double C10257 = C10225 * C365;
    const double C20987 = C20431 * C365;
    const double C24276 = C31700 * C365;
    const double C3279 = C113 * C724;
    const double C3915 = C3525 * C724;
    const double C20821 = C20431 * C724;
    const double C2328 = C2307 + C2308;
    const double C5150 = C5136 + C5137;
    const double C10681 = C10660 + C10661;
    const double C23934 = C23928 + C23929;
    const double C1524 = C113 * C1184;
    const double C4552 = C3525 * C1184;
    const double C21303 = C20431 * C1184;
    const double C2301 = C1844 * C1199;
    const double C5132 = C3525 * C1199;
    const double C10654 = C10225 * C1199;
    const double C23924 = C20431 * C1199;
    const double C24673 = C31700 * C1199;
    const double C2514 = C2493 + C2494;
    const double C10863 = C10842 + C10843;
    const double C1363 = C1061 * C859;
    const double C5871 = C1061 * C5479;
    const double C17969 = C1061 * C31613;
    const double C1553 = C1545 * C859;
    const double C6029 = C1545 * C5479;
    const double C18127 = C1545 * C31613;
    const double C32423 = C32421 + C32418;
    const double C32363 = C32362 + C32356;
    const double C6506 = C6503 + C6504;
    const double C8193 = C8183 + C8184;
    const double C8639 = C8623 + C8624;
    const double C21507 = C21483 + C21484;
    const double C6505 = C6501 + C6502;
    const double C7255 = C7245 + C7246;
    const double C9193 = C9187 + C9188;
    const double C11566 = C11556 + C11557;
    const double C22075 = C22061 + C22062;
    const double C8194 = C8185 + C8186;
    const double C8641 = C8627 + C8628;
    const double C21509 = C21487 + C21488;
    const double C6682 = C32632 * C6406;
    const double C9604 = C32719 * C6406;
    const double C27385 = C32719 * C6406;
    const double C6942 = C32907 * C6407;
    const double C10104 = C32719 * C6407;
    const double C11269 = C32907 * C6407;
    const double C27885 = C32719 * C6407;
    const double C30917 = C24241 * C6407;
    const double C6335 = C113 * C6320;
    const double C6681 = C113 * C6402;
    const double C9603 = C3525 * C6402;
    const double C27384 = C20431 * C6402;
    const double C6941 = C1844 * C6403;
    const double C10103 = C3525 * C6403;
    const double C11268 = C10225 * C6403;
    const double C27884 = C20431 * C6403;
    const double C30916 = C31700 * C6403;
    const double C7586 = C7565 + C7566;
    const double C11889 = C11868 + C11869;
    const double C32432 = C32430 + C32427;
    const double C32048 = ae * C32046;
    const double C7087 =
        (2 * C31939 + ae * C31955 + C31759 * C32023 +
         ae * (2 * (C31759 * C31970 + C31920 * ae) +
               C31759 * (C31970 + C31759 * C32084 + C31759 * C32020 * ae) +
               (C31920 + C32020 * C31953) * ae) +
         C31758 * (ae * (2 * C32011 + C31759 * C32046 +
                         (C31882 + C31884 * C31953) * ae) +
                   C31758 * (2 * C32012 + ae * (C31840 + C31859 * C31953) +
                             C31759 * C32044))) /
        C31510;
    const double C7088 =
        (ae * (3 * (C31802 + C31759 * C32011 + C32092 * ae) +
               C31759 * (2 * C32011 + C31759 * C32046 + C32095 * ae) +
               (2 * C32092 + C31759 * C32095) * ae) +
         C31758 * (3 * C32023 + ae * (2 * C32018 + C31759 * C32096) +
                   C31759 * (2 * C32012 + ae * C32096 + C31759 * C32044))) /
        C31510;
    const double C7089 =
        (3 * C32023 + ae * (2 * C32018 + C31759 * C32096) +
         C31759 * (2 * C32012 + ae * C32096 + C31759 * C32044) +
         ae * (3 * (C31970 + C31759 * C32084 + C32098 * ae) +
               C31759 * (2 * C32084 +
                         C31759 * (C31986 +
                                   C31759 * (C31759 * C31758 * C31830 +
                                             C32033 * ae) +
                                   C31759 * C32033 * ae) +
                         C32102 * ae) +
               (2 * C32098 + C31759 * C32102) * ae) +
         C31758 *
             (ae * (3 * C32046 +
                    C31759 *
                        (2 * C32034 +
                         C31759 * (C31820 +
                                   C31759 * (C31759 * C31830 + C31927 * ae) +
                                   C31759 * C31927 * ae) +
                         C32103 * ae) +
                    (2 * C32027 + C31759 * C32103) * ae) +
              C31758 *
                  (3 * C32044 + ae * (2 * C32028 + C31759 * C32104) +
                   C31759 * (2 * C32037 + ae * C32104 +
                             C31759 * (C31791 + ae * C31759 * C31869 +
                                       C31759 * (ae * C31869 +
                                                 C31759 * std::pow(C31763, 8) *
                                                     bs[8] * C31764)))))) /
        C31510;
    const double C32401 = C31759 * C32046;
    const double C12096 =
        (4 * (2 * C32293 + C31759 * C32398 + C32294 * ae) +
         C31759 * (3 * C32398 +
                   C31759 * (2 * C32011 + C31759 * C32046 + C32095 * ae) +
                   C32397 * ae) +
         (3 * C32294 + C31759 * C32397) * ae) /
        C31508;
    const double C32344 = C31758 * C32343;
    const double C7081 =
        (2 * C31759 * C32330 + C31759 * (C32330 + C32343 * C31953)) / C31508;
    const double C7086 =
        (3 * (C32330 + C32343 * C31953) +
         C31759 *
             (2 * C31759 * C32343 +
              C31759 *
                  (C32343 + (C31859 + C31758 * (C31758 * C31869 + C31927 * ae) +
                             C32033 * ae) *
                                C31953))) /
        C31508;
    const double C489 = C32632 * C282;
    const double C878 = C32632 * C290;
    const double C609 = C32632 * C387;
    const double C3552 = C32719 * C387;
    const double C20458 = C32719 * C387;
    const double C1871 = C32907 * C395;
    const double C4078 = C32719 * C395;
    const double C10252 = C32907 * C395;
    const double C20984 = C32719 * C395;
    const double C24271 = C24241 * C395;
    const double C3278 = C32632 * C739;
    const double C3912 = C32719 * C739;
    const double C20818 = C32719 * C739;
    const double C2488 = C32907 * C2144;
    const double C10837 = C32907 * C2144;
    const double C13529 = C32920 * C2144;
    const double C22422 = C32920 * C2144;
    const double C24856 = C24241 * C2144;
    const double C1362 = C1060 * C32904;
    const double C5870 = C1060 * C32904;
    const double C7711 = C1060 * C32914;
    const double C15804 = C1060 * C32914;
    const double C17968 = C1060 * C17571;
    const double C32003 = C31991 + C32001;
    const double C32119 = C32118 + C32117;
    const double C32089 = C32088 + C32087;
    const double C7239 =
        (2 * (ae * (C31817 + C31759 * C32072 + C31759 * C31923 * ae) +
              C31758 * C32112) +
         ae * (C31903 + C31759 * (C31759 * C32061 + C32077 * ae) +
               C31759 * C32077 * ae) +
         C31758 *
             (C32112 +
              ae * (C32051 + C31759 * (C31759 * C31758 * C32054 + C32108 * ae) +
                    C31759 * C32108 * ae) +
              C31758 *
                  (ae * (C31827 + C31759 * (C31759 * C32054 + C32071 * ae) +
                         C31759 * C32071 * ae) +
                   C31758 * (C32053 + ae * C31759 * C32109 +
                             C31759 * (ae * C32109 + C31759 * C31766 *
                                                         std::pow(C31763, 8) *
                                                         bs[8] * C31764))))) /
        C31510;
    const double C7407 =
        (2 * C31943 + ae * C31959 + C31759 * C32112 +
         ae * (2 * (C31759 * C32051 + C31924 * ae) +
               C31759 *
                   (C32051 + C31759 * (C31759 * C31758 * C32054 + C32108 * ae) +
                    C31759 * C32108 * ae) +
               (C31924 + C32108 * C31953) * ae) +
         C31758 *
             (ae *
                  (2 * C32072 +
                   C31759 * (C31827 + C31759 * (C31759 * C32054 + C32071 * ae) +
                             C31759 * C32071 * ae) +
                   (C31923 + C32071 * C31953) * ae) +
              C31758 *
                  (2 * C32073 + ae * (C31866 + C32109 * C31953) +
                   C31759 * (C32053 + ae * C31759 * C32109 +
                             C31759 * (ae * C32109 + C31759 * C31766 *
                                                         std::pow(C31763, 8) *
                                                         bs[8] * C31764))))) /
        C31510;
    const double C12186 =
        (ae * (3 * (C31817 + C31759 * C32072 + C32132 * ae) +
               C31759 * (2 * C32072 +
                         C31759 * (C31827 +
                                   C31759 * (C31759 * C32054 + C32071 * ae) +
                                   C31759 * C32071 * ae) +
                         C32135 * ae) +
               (2 * C32132 + C31759 * C32135) * ae) +
         C31758 * (3 * C32112 + ae * (2 * C32106 + C31759 * C32136) +
                   C31759 * (2 * C32073 + ae * C32136 +
                             C31759 * (C32053 + ae * C31759 * C32109 +
                                       C31759 * (ae * C32109 +
                                                 C31759 * C31766 *
                                                     std::pow(C31763, 8) *
                                                     bs[8] * C31764))))) /
        C31510;
    const double C31836 = C31826 + C31835;
    const double C32004 = C31989 + C32002;
    const double C6499 =
        (4 * (2 * C31902 + ae * C31903 + C31758 * C32064) +
         ae * (3 * C31903 + C31758 * C32065) +
         C31758 * (3 * C32064 + ae * C32065 +
                   C31758 * (2 * C32060 + ae * C32061 +
                             C31758 * (C32053 + ae * C31758 * C32054 +
                                       C31758 * (ae * C32054 +
                                                 C31758 * C31766 *
                                                     std::pow(C31763, 8) *
                                                     bs[8] * C31764))))) /
        C31510;
    const double C6591 =
        (3 * (C31943 + ae * (C31759 * C32051 + C31924 * ae) + C31758 * C32078) +
         ae * (C31759 * C32065 + (2 * C31924 + C31758 * C32077) * ae) +
         C31758 *
             (2 * C32078 + ae * (C31759 * C32061 + C32077 * ae) +
              C31758 *
                  (C32073 +
                   ae * (C31759 * C31758 * C32054 + C31758 * C32071 * ae) +
                   C31758 * (ae * (C31759 * C32054 + C32071 * ae) +
                             C31758 * (ae * C31766 * C31869 +
                                       C31759 * C31766 * std::pow(C31763, 8) *
                                           bs[8] * C31764))))) /
        C31510;
    const double C6497 = (4 * (2 * C31898 + C31758 * C31903) +
                          C31758 * (3 * C31903 + C31758 * C32065)) /
                         C31508;
    const double C6589 = (C31759 * (3 * C31903 + C31758 * C32065) +
                          (3 * C32246 + C31758 * C32360) * ae) /
                         C31508;
    const double C7237 =
        (2 * C31898 + C31758 * C31903 +
         C31759 * (C31759 * C32065 + C32360 * ae) + C31759 * C32360 * ae) /
        C31508;
    const double C31875 = C31865 + C31874;
    const double C32130 = C32125 + C32129;
    const double C12272 =
        (4 * (2 * C31943 + ae * C31959 + C31759 * C32112) +
         ae * (3 * C31959 + C31759 * C32140) +
         C31759 * (3 * C32112 + ae * C32140 +
                   C31759 * (2 * C32073 + ae * C32136 +
                             C31759 * (C32053 + ae * C31759 * C32109 +
                                       C31759 * (ae * C32109 +
                                                 C31759 * C31766 *
                                                     std::pow(C31763, 8) *
                                                     bs[8] * C31764))))) /
        C31510;
    const double C12271 = (4 * (2 * C31957 + C31759 * C31959) +
                           C31759 * (3 * C31959 + C31759 * C32140)) /
                          C31508;
    const double C894 = C887 + C871;
    const double C2805 = C2803 + C2793;
    const double C8620 = C4589 + C4588;
    const double C9598 = C8644 + C8643;
    const double C172 = C160 + C161;
    const double C121 = 5 * (3 * C32180 + C31766 * C32185) +
                        C31766 * (4 * C32185 + C31766 * C32190);
    const double C261 = 3 * C32180 + C31766 * C32185 + C32190 * C31893;
    const double C366 = 3 * C32180 + C31766 * C32185 + C32190 * C31953;
    const double C483 = C31758 * (4 * C32185 + C31766 * C32190);
    const double C603 = C31759 * (4 * C32185 + C31766 * C32190);
    const double C725 = C31759 * C31758 * C32190;
    const double C6321 = 5 * (3 * C32238 + C31758 * C32327) +
                         C31758 * (4 * C32327 + C31758 * C32340);
    const double C6404 = 3 * C32238 + C31758 * C32327 + C32340 * C31953;
    const double C6674 = C31759 * (4 * C32327 + C31758 * C32340);
    const double C12094 = 5 * (3 * C32294 + C31759 * C32397) +
                          C31759 * (4 * C32397 + C31759 * C32406);
    const double C32888 = C32853 / C31508;
    const double C32924 = C32892 / C31544;
    const double C32925 = C32894 + C32861;
    const double C2782 = C32861 - C32544 / C31512;
    const double C32891 = C32857 / C31508;
    const double C31584 = C31580 / C31508;
    const double C15071 = C170 * C15053;
    const double C15064 = C168 * C15053;
    const double C15060 = C166 * C15053;
    const double C15056 = C164 * C15053;
    const double C15415 = C511 * C15053;
    const double C15411 = C509 * C15053;
    const double C15407 = C507 * C15053;
    const double C15557 = C631 * C15053;
    const double C15553 = C629 * C15053;
    const double C15549 = C627 * C15053;
    const double C18430 = C3575 * C15053;
    const double C31595 = C31589 / C31508;
    const double C7712 = C1061 * C7701;
    const double C7709 = C1063 * C7701;
    const double C15805 = C1061 * C15794;
    const double C15802 = C1063 * C15794;
    const double C32946 = C32909 + C32941;
    const double C7693 = C32931 - (C32680 * C32669) / C31508;
    const double C15806 = C889 * C32932;
    const double C15801 = C886 * C32932;
    const double C16140 = C1062 * C32932;
    const double C6250 = C32932 / C31544 - C32678 / C32895;
    const double C7713 = C889 * C7694;
    const double C7708 = C886 * C7694;
    const double C8047 = C1062 * C7694;
    const double C32942 = C32911 + C32931;
    const double C5500 = C5499 + C5489;
    const double C31671 = C31667 / C31508;
    const double C20463 = C20430 * C119;
    const double C20459 = C20430 * C131;
    const double C20453 = C20430 * C129;
    const double C20449 = C20430 * C118;
    const double C20445 = C20430 * C127;
    const double C20441 = C20430 * C117;
    const double C20437 = C20430 * C125;
    const double C20433 = C20430 * C116;
    const double C20839 = C20430 * C255;
    const double C20835 = C20430 * C268;
    const double C20831 = C20430 * C254;
    const double C20827 = C20430 * C266;
    const double C20823 = C20430 * C253;
    const double C20819 = C20430 * C264;
    const double C21005 = C20430 * C360;
    const double C21001 = C20430 * C373;
    const double C20997 = C20430 * C359;
    const double C20993 = C20430 * C371;
    const double C20989 = C20430 * C358;
    const double C20985 = C20430 * C369;
    const double C21309 = C20430 * C259;
    const double C21305 = C20430 * C277;
    const double C21299 = C20430 * C275;
    const double C21295 = C20430 * C258;
    const double C21497 = C20430 * C1013;
    const double C21493 = C20430 * C1021;
    const double C21489 = C20430 * C1012;
    const double C21485 = C20430 * C1019;
    const double C21477 = C20430 * C273;
    const double C21473 = C20430 * C257;
    const double C21469 = C20430 * C270;
    const double C21465 = C20430 * C256;
    const double C22071 = C20430 * C722;
    const double C22067 = C20430 * C729;
    const double C22063 = C20430 * C1176;
    const double C22059 = C20430 * C1186;
    const double C22289 = C20430 * C721;
    const double C22285 = C20430 * C727;
    const double C22281 = C20430 * C1177;
    const double C22277 = C20430 * C1188;
    const double C23930 = C20430 * C723;
    const double C23926 = C20430 * C731;
    const double C27386 = C20430 * C1014;
    const double C27382 = C20430 * C1024;
    const double C27886 = C20430 * C1705;
    const double C27882 = C20430 * C1709;
    const double C31682 = C31676 / C31508;
    const double C24293 = C24268 + C24269;
    const double C24290 = C24262 + C24263;
    const double C24287 = C24256 + C24257;
    const double C24284 = C24250 + C24251;
    const double C24706 = C24691 + C24692;
    const double C24703 = C24685 + C24686;
    const double C24700 = C24679 + C24680;
    const double C24888 = C24873 + C24874;
    const double C24885 = C24867 + C24868;
    const double C24882 = C24861 + C24862;
    const double C25380 = C25359 + C25360;
    const double C25377 = C25353 + C25354;
    const double C25374 = C25347 + C25348;
    const double C25371 = C25341 + C25342;
    const double C25370 = C25339 + C25340;
    const double C25367 = C25333 + C25334;
    const double C25940 = C25931 + C25932;
    const double C25937 = C25925 + C25926;
    const double C26152 = C26143 + C26144;
    const double C26149 = C26137 + C26138;
    const double C31493 = C31484 + C31485;
    const double C13536 = C13510 * C2126;
    const double C13528 = C13510 * C2132;
    const double C13526 = C13510 * C2134;
    const double C13518 = C13510 * C2127;
    const double C13894 = C13510 * C2669;
    const double C13886 = C13510 * C2674;
    const double C14048 = C13510 * C2130;
    const double C14040 = C13510 * C2141;
    const double C14414 = C13510 * C7078;
    const double C14404 = C13510 * C2672;
    const double C14396 = C13510 * C2668;
    const double C14934 = C13510 * C7079;
    const double C14926 = C13510 * C7084;
    const double C22429 = C22403 * C2126;
    const double C22421 = C22403 * C2132;
    const double C22419 = C22403 * C2134;
    const double C22411 = C22403 * C2127;
    const double C22787 = C22403 * C2669;
    const double C22779 = C22403 * C2674;
    const double C22941 = C22403 * C2130;
    const double C22933 = C22403 * C2141;
    const double C28112 = C22403 * C7078;
    const double C28102 = C22403 * C2672;
    const double C28094 = C22403 * C2668;
    const double C28632 = C22403 * C7079;
    const double C28624 = C22403 * C7084;
    const double C32947 = C32915 + C32943;
    const double C13504 = C32934 - (C32722 * C32711) / C31508;
    const double C3583 = C3579 + C3580;
    const double C4393 = C4389 + C4390;
    const double C1901 = C1891 + C1892;
    const double C1900 = C1888 + C1889;
    const double C17049 = C2335 + C2336;
    const double C17046 = C2336 + C2335;
    const double C17048 = C2332 + C2333;
    const double C17047 = C2333 + C2332;
    const double C6966 = C6956 + C6957;
    const double C6965 = C6953 + C6954;
    const double C22432 = C32935 * C381;
    const double C22424 = C32935 * C394;
    const double C22418 = C32935 * C393;
    const double C22410 = C32935 * C379;
    const double C22790 = C32935 * C1194;
    const double C22782 = C32935 * C1207;
    const double C22944 = C32935 * C2135;
    const double C22936 = C32935 * C2145;
    const double C28115 = C32935 * C1192;
    const double C28107 = C32935 * C1206;
    const double C28101 = C32935 * C1205;
    const double C28093 = C32935 * C1190;
    const double C28635 = C32935 * C2671;
    const double C28627 = C32935 * C2677;
    const double C11962 = C32935 / C31544 - C32720 / C32895;
    const double C13539 = C13505 * C381;
    const double C13531 = C13505 * C394;
    const double C13525 = C13505 * C393;
    const double C13517 = C13505 * C379;
    const double C13897 = C13505 * C1194;
    const double C13889 = C13505 * C1207;
    const double C14051 = C13505 * C2135;
    const double C14043 = C13505 * C2145;
    const double C14417 = C13505 * C1192;
    const double C14409 = C13505 * C1206;
    const double C14403 = C13505 * C1205;
    const double C14395 = C13505 * C1190;
    const double C14937 = C13505 * C2671;
    const double C14929 = C13505 * C2677;
    const double C32944 = C32917 + C32934;
    const double C10282 = C10272 + C10273;
    const double C10281 = C10269 + C10270;
    const double C12995 = C10688 + C10689;
    const double C12992 = C10689 + C10688;
    const double C12994 = C10685 + C10686;
    const double C12993 = C10686 + C10685;
    const double C11293 = C11283 + C11284;
    const double C11292 = C11280 + C11281;
    const double C2806 = C2804 + C2797;
    const double C3581 = C3577 * C114;
    const double C4394 = C4391 * C2785;
    const double C18432 = C4391 * C15054;
    const double C186 = C180 + C181;
    const double C3582 = C3578 * C32615;
    const double C4395 = C4392 * C32677;
    const double C18433 = C4392 * C32677;
    const double C1556 = C1548 * C32904;
    const double C6034 = C1548 * C32904;
    const double C8187 = C1548 * C7694;
    const double C16278 = C1548 * C32932;
    const double C18132 = C1548 * C17571;
    const double C8622 = C4585 + C4584;
    const double C8987 = C4584 + C4585;
    const double C6333 = C113 * C6322;
    const double C173 = C162 + C163;
    const double C505 = C490 + C491;
    const double C891 = C879 + C880;
    const double C625 = C610 + C611;
    const double C3573 = C3555 + C3556;
    const double C20479 = C20461 + C20462;
    const double C1897 = C1876 + C1877;
    const double C4103 = C4081 + C4082;
    const double C10278 = C10257 + C10258;
    const double C21009 = C20987 + C20988;
    const double C24297 = C24276 + C24277;
    const double C3292 = C3279 + C3280;
    const double C3937 = C3915 + C3916;
    const double C20843 = C20821 + C20822;
    const double C1544 = C1524 + C1525;
    const double C4580 = C4552 + C4553;
    const double C21315 = C21303 + C21304;
    const double C2325 = C2301 + C2302;
    const double C5148 = C5132 + C5133;
    const double C10678 = C10654 + C10655;
    const double C23932 = C23924 + C23925;
    const double C24697 = C24673 + C24674;
    const double C12270 =
        (4 * (2 * C32300 + C31759 * C32423 + C32301 * ae) +
         C31759 *
             (3 * C32423 +
              C31759 *
                  (2 * C32072 +
                   C31759 * (C31827 + C31759 * (C31759 * C32054 + C32071 * ae) +
                             C31759 * C32071 * ae) +
                   C32135 * ae) +
              C32422 * ae) +
         (3 * C32301 + C31759 * C32422) * ae) /
        C31508;
    const double C6498 =
        (4 * (2 * C32245 + C31758 * C32363 + C32246 * ae) +
         C31758 *
             (3 * C32363 +
              C31758 *
                  (2 * C32359 +
                   C31758 * (C31866 + C31758 * (C31758 * C32109 + C32071 * ae) +
                             C32108 * ae) +
                   C32077 * ae) +
              C32360 * ae) +
         (3 * C32246 + C31758 * C32360) * ae) /
        C31508;
    const double C6590 =
        (C31759 *
         (3 * C32363 +
          C31758 *
              (2 * C32359 +
               C31758 * (C31866 + C31758 * (C31758 * C32109 + C32071 * ae) +
                         C32108 * ae) +
               C32077 * ae) +
          C32360 * ae)) /
        C31508;
    const double C7238 =
        (2 * C32245 + C31758 * C32363 + C32246 * ae +
         (2 * C32359 +
          C31758 * (C31866 + C31758 * (C31758 * C32109 + C32071 * ae) +
                    C32108 * ae) +
          C32077 * ae) *
             C31953) /
        C31508;
    const double C7406 =
        (2 * C31759 * C32363 +
         C31759 * (C32363 + (C31866 + C31758 * (C31758 * C32109 + C32071 * ae) +
                             C32108 * ae) *
                                C31953)) /
        C31508;
    const double C8045 = C6506 * C32914;
    const double C16138 = C6506 * C32914;
    const double C8195 = C8193 * C32914;
    const double C16276 = C8193 * C32914;
    const double C8046 = C6505 * C7701;
    const double C16139 = C6505 * C15794;
    const double C8196 = C8194 * C7701;
    const double C16277 = C8194 * C15794;
    const double C6340 = C6335 + C6336;
    const double C6688 = C6681 + C6682;
    const double C9609 = C9603 + C9604;
    const double C27390 = C27384 + C27385;
    const double C6962 = C6941 + C6942;
    const double C10109 = C10103 + C10104;
    const double C11289 = C11268 + C11269;
    const double C27890 = C27884 + C27885;
    const double C30927 = C30916 + C30917;
    const double C12356 =
        (4 * (2 * C32374 + C31759 * C32432 + C32375 * ae) +
         C31759 * (3 * C32432 +
                   C31759 * (2 * C32084 +
                             C31759 * (C31986 +
                                       C31759 * (C31759 * C31758 * C31830 +
                                                 C32033 * ae) +
                                       C31759 * C32033 * ae) +
                             C32102 * ae) +
                   C32431 * ae) +
         (3 * C32375 + C31759 * C32431) * ae) /
        C31508;
    const double C32049 = C32048 + C32047;
    const double C7560 = C32907 * C7087;
    const double C11863 = C32907 * C7087;
    const double C14407 = C32920 * C7087;
    const double C28105 = C32920 * C7087;
    const double C31479 = C24241 * C7087;
    const double C14927 = C32920 * C7088;
    const double C28625 = C32920 * C7088;
    const double C32405 = C32400 + C32401;
    const double C32345 = C32334 + C32344;
    const double C7559 = C1844 * C7081;
    const double C11862 = C10225 * C7081;
    const double C14406 = C13510 * C7081;
    const double C28104 = C22403 * C7081;
    const double C31478 = C31700 * C7081;
    const double C504 = C488 + C489;
    const double C890 = C877 + C878;
    const double C624 = C608 + C609;
    const double C3571 = C3551 + C3552;
    const double C20477 = C20457 + C20458;
    const double C1894 = C1870 + C1871;
    const double C4101 = C4077 + C4078;
    const double C10275 = C10251 + C10252;
    const double C21007 = C20983 + C20984;
    const double C24294 = C24270 + C24271;
    const double C3291 = C3277 + C3278;
    const double C3935 = C3911 + C3912;
    const double C20841 = C20817 + C20818;
    const double C2511 = C2487 + C2488;
    const double C10860 = C10836 + C10837;
    const double C24879 = C24855 + C24856;
    const double C7557 =
        (2 * (ae * (2 * C32011 + C31759 * C32046 + C32095 * ae) +
              C31758 * C32119) +
         ae * (2 * (C31759 * C31977 + C32013 * ae) +
               C31759 * (C31977 + C31759 * (C31759 * C31995 + C32038 * ae) +
                         C31759 * C32038 * ae) +
               (C32013 + C32038 * C31953) * ae) +
         C31758 *
             (C32119 +
              ae *
                  (2 * C32084 +
                   C31759 * (C31986 +
                             C31759 * (C31759 * C31758 * C31830 + C32033 * ae) +
                             C31759 * C32033 * ae) +
                   C32102 * ae) +
              C31758 *
                  (ae * (2 * C32034 +
                         C31759 * (C31820 +
                                   C31759 * (C31759 * C31830 + C31927 * ae) +
                                   C31759 * C31927 * ae) +
                         C32103 * ae) +
                   C31758 * (2 * C32037 + ae * C32104 +
                             C31759 * (C31791 + ae * C31759 * C31869 +
                                       C31759 * (ae * C31869 +
                                                 C31759 * std::pow(C31763, 8) *
                                                     bs[8] * C31764)))))) /
        C31510;
    const double C12099 =
        (4 * (2 * C31939 + ae * C31955 + C31759 * C32023) +
         ae * (3 * C31955 + C31759 * C32123) +
         C31759 * (3 * C32023 + ae * C32123 + C31759 * C32119)) /
        C31510;
    const double C291 =
        (3 * C31784 + C31766 * C31795 + ae * C31758 * C31836 +
         C31758 * (ae * C31836 +
                   C31758 * (3 * C31793 +
                             C31766 * (2 * C31766 * C31791 +
                                       C31766 * (C31791 + std::pow(C31763, 8) *
                                                              bs[8] * C31764 *
                                                              C31774))))) /
        C31510;
    const double C486 =
        (ae * (4 * C31824 + C31766 * C31836) +
         C31758 * (4 * C31795 +
                   C31766 * (3 * C31793 +
                             C31766 * (2 * C31766 * C31791 +
                                       C31766 * (C31791 + std::pow(C31763, 8) *
                                                              bs[8] * C31764 *
                                                              C31774))))) /
        C31510;
    const double C134 = (5 * (3 * C31815 + C31766 * C31824) +
                         C31766 * (4 * C31824 + C31766 * C31836)) /
                        C31508;
    const double C280 =
        (3 * C31815 + C31766 * C31824 + C31836 * C31893) / C31508;
    const double C385 =
        (3 * C31815 + C31766 * C31824 +
         C31759 * (C31759 * C31836 + C32190 * ae) + C31759 * C32190 * ae) /
        C31508;
    const double C484 = (C31758 * (4 * C31824 + C31766 * C31836)) / C31508;
    const double C604 = (C31759 * (4 * C31824 + C31766 * C31836) +
                         (4 * C32185 + C31766 * C32190) * ae) /
                        C31508;
    const double C734 =
        (C31759 * C31758 * C31836 + C31758 * C32190 * ae) / C31508;
    const double C6327 =
        (5 * (3 * C31981 + ae * C31982 + C31758 * C32003) +
         ae * (4 * C31982 + C31758 * C32004) +
         C31758 *
             (4 * C32003 + ae * C32004 +
              C31758 *
                  (3 * C31999 + ae * C32000 +
                   C31758 * (2 * C31993 + ae * C31995 +
                             C31758 * (C31791 + ae * C31758 * C31830 +
                                       C31758 * (ae * C31830 +
                                                 C31758 * std::pow(C31763, 8) *
                                                     bs[8] * C31764)))))) /
        C31510;
    const double C6677 =
        (4 * (2 * C32016 + ae * (C31759 * C31977 + C32013 * ae) +
              C31758 * C32089) +
         ae * (C31759 * C32004 + (3 * C32013 + C31758 * C32045) * ae) +
         C31758 *
             (3 * C32089 + ae * (C31759 * C32000 + C32045 * ae) +
              C31758 *
                  (2 * C32085 + ae * (C31759 * C31995 + C32038 * ae) +
                   C31758 *
                       (C32037 + ae * (C31759 * C31758 * C31830 + C32033 * ae) +
                        C31758 * (ae * (C31759 * C31830 + C31927 * ae) +
                                  C31758 * (ae * C31869 +
                                            C31759 * std::pow(C31763, 8) *
                                                bs[8] * C31764)))))) /
        C31510;
    const double C6324 = (5 * (3 * C31896 + C31758 * C31982) +
                          C31758 * (4 * C31982 + C31758 * C32004)) /
                         C31508;
    const double C6409 =
        (3 * C31896 + C31758 * C31982 +
         C31759 * (C31759 * C32004 + C32340 * ae) + C31759 * C32340 * ae) /
        C31508;
    const double C6675 = (C31759 * (4 * C31982 + C31758 * C32004) +
                          (4 * C32327 + C31758 * C32340) * ae) /
                         C31508;
    const double C396 =
        (3 * C31784 + C31766 * C31795 + ae * C31759 * C31875 +
         C31759 * (ae * C31875 +
                   C31759 * (3 * C31793 +
                             C31766 * (2 * C31766 * C31791 +
                                       C31766 * (C31791 + std::pow(C31763, 8) *
                                                              bs[8] * C31764 *
                                                              C31774))))) /
        C31510;
    const double C606 =
        (ae * (4 * C31863 + C31766 * C31875) +
         C31759 * (4 * C31795 +
                   C31766 * (3 * C31793 +
                             C31766 * (2 * C31766 * C31791 +
                                       C31766 * (C31791 + std::pow(C31763, 8) *
                                                              bs[8] * C31764 *
                                                              C31774))))) /
        C31510;
    const double C740 =
        (ae * (C31759 * C31836 +
               (3 * (C31882 + C31884 * C31774) +
                C31766 * (2 * C31766 * C31884 +
                          C31766 * (C31884 + C31780 * C31779 * C31774))) *
                   ae) +
         C31758 * (ae * C31875 +
                   C31759 * (3 * C31793 +
                             C31766 * (2 * C31766 * C31791 +
                                       C31766 * (C31791 + std::pow(C31763, 8) *
                                                              bs[8] * C31764 *
                                                              C31774))))) /
        C31510;
    const double C135 = (5 * (3 * C31854 + C31766 * C31863) +
                         C31766 * (4 * C31863 + C31766 * C31875)) /
                        C31508;
    const double C281 =
        (3 * C31854 + C31766 * C31863 +
         C31758 * (C31758 * C31875 + C32190 * ae) + C31758 * C32190 * ae) /
        C31508;
    const double C386 =
        (3 * C31854 + C31766 * C31863 + C31875 * C31953) / C31508;
    const double C485 = (C31758 * (4 * C31863 + C31766 * C31875) +
                         (4 * C32185 + C31766 * C32190) * ae) /
                        C31508;
    const double C605 = (C31759 * (4 * C31863 + C31766 * C31875)) / C31508;
    const double C735 = (C31759 * (C31758 * C31875 + C32190 * ae)) / C31508;
    const double C12100 =
        (5 * (3 * C32023 + ae * C32123 + C31759 * C32119) +
         ae * (4 * C32123 + C31759 * C32130) +
         C31759 *
             (4 * C32119 + ae * C32130 +
              C31759 *
                  (3 * C32044 + ae * C32128 +
                   C31759 * (2 * C32037 + ae * C32104 +
                             C31759 * (C31791 + ae * C31759 * C31869 +
                                       C31759 * (ae * C31869 +
                                                 C31759 * std::pow(C31763, 8) *
                                                     bs[8] * C31764)))))) /
        C31510;
    const double C12358 =
        (ae * (4 * (2 * C32011 + C31759 * C32046 + C32095 * ae) +
               C31759 * (3 * C32046 +
                         C31759 * (2 * C32034 +
                                   C31759 * (C31820 +
                                             C31759 * (C31759 * C31830 +
                                                       C31927 * ae) +
                                             C31759 * C31927 * ae) +
                                   C32103 * ae) +
                         C32144 * ae) +
               (3 * C32095 + C31759 * C32144) * ae) +
         C31758 *
             (4 * C32119 + ae * C32130 +
              C31759 *
                  (3 * C32044 + ae * C32128 +
                   C31759 * (2 * C32037 + ae * C32104 +
                             C31759 * (C31791 + ae * C31759 * C31869 +
                                       C31759 * (ae * C31869 +
                                                 C31759 * std::pow(C31763, 8) *
                                                     bs[8] * C31764)))))) /
        C31510;
    const double C12098 = (5 * (3 * C31955 + C31759 * C32123) +
                           C31759 * (4 * C32123 + C31759 * C32130)) /
                          C31508;
    const double C899 = C894 + C872;
    const double C2807 = C2805 + C2794;
    const double C182 = C172 * C32615;
    const double C32945 = C32888 + C32937;
    const double C2781 = C32924 - (C32546 * C32529) / C31508;
    const double C106 = C32925 / C31544 - C32544 / C32895;
    const double C32938 = C32891 + C32924;
    const double C31588 = C31584 - C31565;
    const double C15073 = C15064 + C15065;
    const double C15072 = C15060 + C15061;
    const double C18434 = C18430 + C18431;
    const double C15810 = C167 * C32946;
    const double C15797 = C165 * C32946;
    const double C16144 = C510 * C32946;
    const double C16282 = C630 * C32946;
    const double C6247 =
        (C32939 + 2 * C32673) / C31544 - (C32946 * C32669) / C31508;
    const double C7715 = C508 * C7693;
    const double C7706 = C510 * C7693;
    const double C8049 = C886 * C7693;
    const double C8189 = C1550 * C7693;
    const double C15808 = C508 * C32942;
    const double C15799 = C510 * C32942;
    const double C16142 = C886 * C32942;
    const double C16280 = C1550 * C32942;
    const double C6248 =
        (C32927 + 2 * C32680 + C32946) / C31544 - (C32942 * C32669) / C31508;
    const double C6249 = (C32904 + C32677 / C31508 + C32942) / C31544 -
                         (C32932 * C32669) / C31508;
    const double C5501 = C5500 + C5490;
    const double C31675 = C31671 - C31652;
    const double C20480 = C20463 + C20464;
    const double C20478 = C20459 + C20460;
    const double C20475 = C20453 + C20454;
    const double C20473 = C20449 + C20450;
    const double C20471 = C20445 + C20446;
    const double C20469 = C20441 + C20442;
    const double C20467 = C20437 + C20438;
    const double C20465 = C20433 + C20434;
    const double C20852 = C20839 + C20840;
    const double C20850 = C20835 + C20836;
    const double C20848 = C20831 + C20832;
    const double C20846 = C20827 + C20828;
    const double C20844 = C20823 + C20824;
    const double C20842 = C20819 + C20820;
    const double C21018 = C21005 + C21006;
    const double C21016 = C21001 + C21002;
    const double C21014 = C20997 + C20998;
    const double C21012 = C20993 + C20994;
    const double C21010 = C20989 + C20990;
    const double C21008 = C20985 + C20986;
    const double C21318 = C21309 + C21310;
    const double C21316 = C21305 + C21306;
    const double C21313 = C21299 + C21300;
    const double C21311 = C21295 + C21296;
    const double C21514 = C21497 + C21498;
    const double C21512 = C21493 + C21494;
    const double C21510 = C21489 + C21490;
    const double C21508 = C21485 + C21486;
    const double C21505 = C21477 + C21478;
    const double C21503 = C21473 + C21474;
    const double C21501 = C21469 + C21470;
    const double C21499 = C21465 + C21466;
    const double C22080 = C22071 + C22072;
    const double C22078 = C22067 + C22068;
    const double C22076 = C22063 + C22064;
    const double C22074 = C22059 + C22060;
    const double C22298 = C22289 + C22290;
    const double C22296 = C22285 + C22286;
    const double C22294 = C22281 + C22282;
    const double C22292 = C22277 + C22278;
    const double C23935 = C23930 + C23931;
    const double C23933 = C23926 + C23927;
    const double C27391 = C27386 + C27387;
    const double C27389 = C27382 + C27383;
    const double C27891 = C27886 + C27887;
    const double C27889 = C27882 + C27883;
    const double C13556 = C13536 + C13537;
    const double C13552 = C13528 + C13529;
    const double C13551 = C13526 + C13527;
    const double C13547 = C13518 + C13519;
    const double C13906 = C13894 + C13895;
    const double C13902 = C13886 + C13887;
    const double C14060 = C14048 + C14049;
    const double C14056 = C14040 + C14041;
    const double C14434 = C14414 + C14415;
    const double C14429 = C14404 + C14405;
    const double C14425 = C14396 + C14397;
    const double C14946 = C14934 + C14935;
    const double C22449 = C22429 + C22430;
    const double C22445 = C22421 + C22422;
    const double C22444 = C22419 + C22420;
    const double C22440 = C22411 + C22412;
    const double C22799 = C22787 + C22788;
    const double C22795 = C22779 + C22780;
    const double C22953 = C22941 + C22942;
    const double C22949 = C22933 + C22934;
    const double C28132 = C28112 + C28113;
    const double C28127 = C28102 + C28103;
    const double C28123 = C28094 + C28095;
    const double C28644 = C28632 + C28633;
    const double C22436 = C32947 * C126;
    const double C22428 = C32947 * C138;
    const double C22414 = C32947 * C137;
    const double C22406 = C32947 * C124;
    const double C22794 = C32947 * C269;
    const double C22786 = C32947 * C285;
    const double C22948 = C32947 * C374;
    const double C22940 = C32947 * C390;
    const double C28119 = C32947 * C272;
    const double C28111 = C32947 * C287;
    const double C28097 = C32947 * C286;
    const double C28089 = C32947 * C271;
    const double C28639 = C32947 * C726;
    const double C28631 = C32947 * C736;
    const double C11959 =
        (C32940 + 2 * C32715) / C31544 - (C32947 * C32711) / C31508;
    const double C13541 = C13504 * C372;
    const double C13533 = C13504 * C389;
    const double C13523 = C13504 * C390;
    const double C13515 = C13504 * C374;
    const double C13899 = C13504 * C728;
    const double C13891 = C13504 * C737;
    const double C14053 = C13504 * C379;
    const double C14045 = C13504 * C393;
    const double C14419 = C13504 * C1189;
    const double C14411 = C13504 * C1204;
    const double C14401 = C13504 * C736;
    const double C14393 = C13504 * C726;
    const double C14939 = C13504 * C1190;
    const double C14931 = C13504 * C1205;
    const double C1903 = C1901 + C1893;
    const double C1902 = C1900 + C1890;
    const double C17053 = C2334 + C17049;
    const double C17050 = C17046 + C2334;
    const double C17052 = C2331 + C17048;
    const double C17051 = C17047 + C2331;
    const double C6968 = C6966 + C6958;
    const double C6967 = C6965 + C6955;
    const double C22434 = C32944 * C372;
    const double C22426 = C32944 * C389;
    const double C22416 = C32944 * C390;
    const double C22408 = C32944 * C374;
    const double C22792 = C32944 * C728;
    const double C22784 = C32944 * C737;
    const double C22946 = C32944 * C379;
    const double C22938 = C32944 * C393;
    const double C28117 = C32944 * C1189;
    const double C28109 = C32944 * C1204;
    const double C28099 = C32944 * C736;
    const double C28091 = C32944 * C726;
    const double C28637 = C32944 * C1190;
    const double C28629 = C32944 * C1205;
    const double C11960 =
        (C32929 + 2 * C32722 + C32947) / C31544 - (C32944 * C32711) / C31508;
    const double C11961 = (C32907 + C32719 / C31508 + C32944) / C31544 -
                          (C32935 * C32711) / C31508;
    const double C10284 = C10282 + C10274;
    const double C10283 = C10281 + C10271;
    const double C12999 = C10687 + C12995;
    const double C12996 = C12992 + C10687;
    const double C12998 = C10684 + C12994;
    const double C12997 = C12993 + C10684;
    const double C11295 = C11293 + C11285;
    const double C11294 = C11292 + C11282;
    const double C2808 = C2806 + C2798;
    const double C4396 = C4393 + C4394;
    const double C3584 = C3581 + C3582;
    const double C6339 = C6333 + C6334;
    const double C183 = C173 * C114;
    const double C513 = C505 * C114;
    const double C2800 = C505 * C2785;
    const double C15069 = C505 * C15054;
    const double C898 = C891 * C859;
    const double C3136 = C891 * C2785;
    const double C5494 = C891 * C5479;
    const double C15405 = C891 * C15054;
    const double C17592 = C891 * C31613;
    const double C633 = C625 * C114;
    const double C3294 = C3292 * C2785;
    const double C15547 = C3292 * C15054;
    const double C1552 = C1544 * C32904;
    const double C6028 = C1544 * C32904;
    const double C18126 = C1544 * C17571;
    const double C6413 =
        (3 * (C32023 +
              ae * (C31970 + C31759 * (C31759 * C31986 + C32020 * ae) +
                    C31759 * C32020 * ae) +
              C31758 * C32049) +
         ae * (C31982 + C31759 * (C31759 * C32000 + C32045 * ae) +
               C31759 * C32045 * ae) +
         C31758 *
             (2 * C32049 +
              ae * (C31977 + C31759 * (C31759 * C31995 + C32038 * ae) +
                    C31759 * C32038 * ae) +
              C31758 *
                  (C32044 +
                   ae * (C31986 +
                         C31759 * (C31759 * C31758 * C31830 + C32033 * ae) +
                         C31759 * C32033 * ae) +
                   C31758 * (ae * (C31820 +
                                   C31759 * (C31759 * C31830 + C31927 * ae) +
                                   C31759 * C31927 * ae) +
                             C31758 * (C31791 + ae * C31759 * C31869 +
                                       C31759 * (ae * C31869 +
                                                 C31759 * std::pow(C31763, 8) *
                                                     bs[8] * C31764)))))) /
        C31510;
    const double C14942 = C14926 + C14927;
    const double C28640 = C28624 + C28625;
    const double C32407 = C32405 + C32402;
    const double C32346 = C32345 + C32336;
    const double C7583 = C7559 + C7560;
    const double C11886 = C11862 + C11863;
    const double C14430 = C14406 + C14407;
    const double C28128 = C28104 + C28105;
    const double C31490 = C31478 + C31479;
    const double C512 = C504 * C32615;
    const double C2799 = C504 * C32677;
    const double C15068 = C504 * C32677;
    const double C897 = C890 * C32904;
    const double C3135 = C890 * C32677;
    const double C5493 = C890 * C32904;
    const double C15404 = C890 * C32677;
    const double C17591 = C890 * C17571;
    const double C632 = C624 * C32615;
    const double C3293 = C3291 * C32677;
    const double C15546 = C3291 * C32677;
    const double C900 = C899 + C895;
    const double C103 =
        (C32936 + 2 * C32538) / C31544 - (C32945 * C32529) / C31508;
    const double C104 =
        (C32923 + 2 * C32546 + C32945) / C31544 - (C32938 * C32529) / C31508;
    const double C105 = (C32893 + C32543 / C31508 + C32938) / C31544 -
                        (C32925 * C32529) / C31508;
    const double C31594 = C31588 / C31544;
    const double C31593 = C31506 * C31588;
    const double C15075 = C15073 + C15066;
    const double C15074 = C15072 + C15062;
    const double C18435 = C18434 + C18432;
    const double C5502 = C5501 + C5491;
    const double C31681 = C31675 / C31544;
    const double C31680 = C31525 * C31675;
    const double C20484 = C20475 + C20476;
    const double C20483 = C20473 + C20474;
    const double C20482 = C20471 + C20472;
    const double C20481 = C20469 + C20470;
    const double C21862 = C20851 + C20852;
    const double C21857 = C20852 + C20851;
    const double C21861 = C20849 + C20850;
    const double C21858 = C20850 + C20849;
    const double C23235 = C20848 + C20847;
    const double C23729 = C20847 + C20848;
    const double C23236 = C20846 + C20845;
    const double C23728 = C20845 + C20846;
    const double C21482 = C21313 + C21314;
    const double C21859 = C21314 + C21313;
    const double C21481 = C21311 + C21312;
    const double C21860 = C21312 + C21311;
    const double C27378 = C21514 + C21513;
    const double C27379 = C21512 + C21511;
    const double C21516 = C21505 + C21506;
    const double C21515 = C21503 + C21504;
    const double C1905 = C1903 * C32615;
    const double C1904 = C1902 * C114;
    const double C10286 = C10284 * C32615;
    const double C10285 = C10283 * C114;
    const double C4397 = C4396 + C4395;
    const double C12097 =
        (5 * (3 * C32398 + C31759 * C32407 + C32397 * ae) +
         C31759 * (4 * C32407 +
                   C31759 * (3 * C32046 +
                             C31759 * (2 * C32034 +
                                       C31759 * (C31820 +
                                                 C31759 * (C31759 * C31830 +
                                                           C31927 * ae) +
                                                 C31759 * C31927 * ae) +
                                       C32103 * ae) +
                             C32144 * ae) +
                   C32406 * ae) +
         (4 * C32397 + C31759 * C32406) * ae) /
        C31508;
    const double C6325 =
        (5 * (3 * C32330 + C31758 * C32346 + C32327 * ae) +
         C31758 * (4 * C32346 +
                   C31758 * (3 * C32343 +
                             C31758 * (2 * C32339 +
                                       C31758 * (C31859 +
                                                 C31758 * (C31758 * C31869 +
                                                           C31927 * ae) +
                                                 C32033 * ae) +
                                       C32038 * ae) +
                             C32045 * ae) +
                   C32340 * ae) +
         (4 * C32327 + C31758 * C32340) * ae) /
        C31508;
    const double C6405 =
        (C31759 * (3 * C32330 + C31758 * C32346 + C32327 * ae)) / C31508;
    const double C6408 =
        (2 * C32237 + C31758 * C32330 + C32238 * ae + C32346 * C31953) / C31508;
    const double C6410 =
        (3 * C32330 + C31758 * C32346 + C32327 * ae +
         (3 * C32343 +
          C31758 *
              (2 * C32339 +
               C31758 * (C31859 + C31758 * (C31758 * C31869 + C31927 * ae) +
                         C32033 * ae) +
               C32038 * ae) +
          C32045 * ae) *
             C31953) /
        C31508;
    const double C6676 =
        (C31759 *
         (4 * C32346 +
          C31758 *
              (3 * C32343 +
               C31758 * (2 * C32339 +
                         C31758 * (C31859 +
                                   C31758 * (C31758 * C31869 + C31927 * ae) +
                                   C32033 * ae) +
                         C32038 * ae) +
               C32045 * ae) +
          C32340 * ae)) /
        C31508;
    const double C7556 =
        (2 * C31759 * C32346 +
         C31759 *
             (C32346 +
              (2 * C32339 +
               C31758 * (C31859 + C31758 * (C31758 * C31869 + C31927 * ae) +
                         C32033 * ae) +
               C32038 * ae) *
                  C31953)) /
        C31508;
    const double C901 = C900 + C896;
    const double C31599 = C31594 - C31595;
    const double C31598 = C31593 + C32873;
    const double C15077 = C15075 + C15067;
    const double C15076 = C15074 + C15063;
    const double C18436 = C18435 + C18433;
    const double C5503 = C5502 + C5492;
    const double C31686 = C31681 - C31682;
    const double C31685 = C31680 + C32874;
    const double C20488 = C20484 * C32615;
    const double C20487 = C20483 * C114;
    const double C20486 = C20482 * C32615;
    const double C23234 = C20482 * C32873;
    const double C26302 = C20482 * C15047;
    const double C20485 = C20481 * C114;
    const double C23233 = C20481 * C2784;
    const double C26301 = C20481 * C15053;
    const double C23238 = C23235 * C2785;
    const double C26303 = C23235 * C15054;
    const double C23239 = C23236 * C32677;
    const double C26304 = C23236 * C32677;
    const double C1906 = C1904 + C1905;
    const double C10287 = C10285 + C10286;
    const double C6679 = C113 * C6405;
    const double C9599 = C3525 * C6405;
    const double C27380 = C20431 * C6405;
    const double C6935 = C1844 * C6408;
    const double C10099 = C3525 * C6408;
    const double C11262 = C10225 * C6408;
    const double C27880 = C20431 * C6408;
    const double C30910 = C31700 * C6408;
    const double C17594 = C507 * C31599;
    const double C17587 = C509 * C31599;
    const double C17581 = C511 * C31599;
    const double C17977 = C885 * C31599;
    const double C17971 = C888 * C31599;
    const double C18135 = C1551 * C31599;
    const double C18129 = C1547 * C31599;
    const double C6256 =
        (C31599 / C31544 + ((C31506 * C31613 + C17571) * ae) / C31508) /
            C31544 -
        ((C31506 * (C31613 / C31544 + (0 * ae) / C31508) + C32914) * be) /
            C31508;
    const double C7700 =
        C31599 / C31544 - ((C31506 * C31613 + C17571) * be) / C31508;
    const double C15793 =
        C31599 / C31544 + ((C31506 * C31613 + C17571) * ae) / C31508;
    const double C31602 = C31598 * be;
    const double C24278 = C31686 * C358;
    const double C24272 = C31686 * C369;
    const double C24266 = C31686 * C371;
    const double C24260 = C31686 * C359;
    const double C24254 = C31686 * C373;
    const double C24248 = C31686 * C360;
    const double C24693 = C31686 * C722;
    const double C24687 = C31686 * C729;
    const double C24681 = C31686 * C723;
    const double C24675 = C31686 * C731;
    const double C24875 = C31686 * C363;
    const double C24869 = C31686 * C380;
    const double C24863 = C31686 * C364;
    const double C24857 = C31686 * C382;
    const double C25361 = C31686 * C1177;
    const double C25355 = C31686 * C1188;
    const double C25349 = C31686 * C1176;
    const double C25343 = C31686 * C1186;
    const double C25337 = C31686 * C727;
    const double C25331 = C31686 * C721;
    const double C25933 = C31686 * C1180;
    const double C25927 = C31686 * C1195;
    const double C26145 = C31686 * C1178;
    const double C26139 = C31686 * C1191;
    const double C30918 = C31686 * C1705;
    const double C30912 = C31686 * C1709;
    const double C31486 = C31686 * C1179;
    const double C31480 = C31686 * C1193;
    const double C11967 =
        (C31686 / C31544 + ((C31525 * C31700 + C24241) * ae) / C31508) /
            C31544 -
        ((C31525 * (C31700 / C31544 + (0 * ae) / C31508) + C32920) * be) /
            C31508;
    const double C13509 =
        C31686 / C31544 - ((C31525 * C31700 + C24241) * be) / C31508;
    const double C22402 =
        C31686 / C31544 + ((C31525 * C31700 + C24241) * ae) / C31508;
    const double C31689 = C31685 * be;
    const double C20490 = C20487 + C20488;
    const double C20489 = C20485 + C20486;
    const double C23237 = C23233 + C23234;
    const double C26305 = C26301 + C26302;
    const double C6687 = C6679 + C6680;
    const double C9607 = C9599 + C9600;
    const double C27388 = C27380 + C27381;
    const double C6959 = C6935 + C6936;
    const double C10107 = C10099 + C10100;
    const double C11286 = C11262 + C11263;
    const double C27888 = C27880 + C27881;
    const double C30924 = C30910 + C30911;
    const double C7714 = C888 * C7700;
    const double C7707 = C885 * C7700;
    const double C8048 = C1063 * C7700;
    const double C8188 = C1549 * C7700;
    const double C15807 = C888 * C15793;
    const double C15800 = C885 * C15793;
    const double C16141 = C1063 * C15793;
    const double C16279 = C1549 * C15793;
    const double C31604 = C31602 / C31508;
    const double C24298 = C24278 + C24279;
    const double C24295 = C24272 + C24273;
    const double C24292 = C24266 + C24267;
    const double C24289 = C24260 + C24261;
    const double C24286 = C24254 + C24255;
    const double C24283 = C24248 + C24249;
    const double C24707 = C24693 + C24694;
    const double C24704 = C24687 + C24688;
    const double C24701 = C24681 + C24682;
    const double C24698 = C24675 + C24676;
    const double C24889 = C24875 + C24876;
    const double C24886 = C24869 + C24870;
    const double C24883 = C24863 + C24864;
    const double C24880 = C24857 + C24858;
    const double C25381 = C25361 + C25362;
    const double C25378 = C25355 + C25356;
    const double C25375 = C25349 + C25350;
    const double C25372 = C25343 + C25344;
    const double C25369 = C25337 + C25338;
    const double C25366 = C25331 + C25332;
    const double C25941 = C25933 + C25934;
    const double C25938 = C25927 + C25928;
    const double C26153 = C26145 + C26146;
    const double C26150 = C26139 + C26140;
    const double C30928 = C30918 + C30919;
    const double C30925 = C30912 + C30913;
    const double C31494 = C31486 + C31487;
    const double C31491 = C31480 + C31481;
    const double C13538 = C13509 * C364;
    const double C13530 = C13509 * C382;
    const double C13524 = C13509 * C380;
    const double C13516 = C13509 * C363;
    const double C13896 = C13509 * C1180;
    const double C13888 = C13509 * C1195;
    const double C14050 = C13509 * C2127;
    const double C14042 = C13509 * C2134;
    const double C14416 = C13509 * C1179;
    const double C14408 = C13509 * C1193;
    const double C14402 = C13509 * C1191;
    const double C14394 = C13509 * C1178;
    const double C14936 = C13509 * C2668;
    const double C14928 = C13509 * C2672;
    const double C22431 = C22402 * C364;
    const double C22423 = C22402 * C382;
    const double C22417 = C22402 * C380;
    const double C22409 = C22402 * C363;
    const double C22789 = C22402 * C1180;
    const double C22781 = C22402 * C1195;
    const double C22943 = C22402 * C2127;
    const double C22935 = C22402 * C2134;
    const double C28114 = C22402 * C1179;
    const double C28106 = C22402 * C1193;
    const double C28100 = C22402 * C1191;
    const double C28092 = C22402 * C1178;
    const double C28634 = C22402 * C2668;
    const double C28626 = C22402 * C2672;
    const double C31691 = C31689 / C31508;
    const double C23240 = C23237 + C23238;
    const double C26306 = C26305 + C26303;
    const double C31606 = C31592 - C31604;
    const double C13557 = C13538 + C13539;
    const double C13553 = C13530 + C13531;
    const double C13550 = C13524 + C13525;
    const double C13546 = C13516 + C13517;
    const double C13907 = C13896 + C13897;
    const double C13903 = C13888 + C13889;
    const double C14061 = C14050 + C14051;
    const double C14057 = C14042 + C14043;
    const double C14435 = C14416 + C14417;
    const double C14431 = C14408 + C14409;
    const double C14428 = C14402 + C14403;
    const double C14424 = C14394 + C14395;
    const double C14947 = C14936 + C14937;
    const double C14943 = C14928 + C14929;
    const double C22450 = C22431 + C22432;
    const double C22446 = C22423 + C22424;
    const double C22443 = C22417 + C22418;
    const double C22439 = C22409 + C22410;
    const double C22800 = C22789 + C22790;
    const double C22796 = C22781 + C22782;
    const double C22954 = C22943 + C22944;
    const double C22950 = C22935 + C22936;
    const double C28133 = C28114 + C28115;
    const double C28129 = C28106 + C28107;
    const double C28126 = C28100 + C28101;
    const double C28122 = C28092 + C28093;
    const double C28645 = C28634 + C28635;
    const double C28641 = C28626 + C28627;
    const double C31693 = C31679 - C31691;
    const double C23241 = C23240 + C23239;
    const double C26307 = C26306 + C26304;
    const double C31607 = C31606 + C31577;
    const double C31694 = C31693 + C31664;
    const double C17596 = C168 * C31607;
    const double C17585 = C166 * C31607;
    const double C17579 = C164 * C31607;
    const double C17979 = C511 * C31607;
    const double C17973 = C509 * C31607;
    const double C18137 = C631 * C31607;
    const double C18131 = C629 * C31607;
    const double C6253 =
        (((((0 - (C31506 * C31560) / C31508) * ae) / C31508 -
           (0 * be) / C31512 + (2 * C31561) / C31508) /
              C31544 -
          ((C31506 * C31596 + 0) * be) / C31508 + C31570 - C31583) /
             C31544 +
         ((C31506 * C31605 + 0) * ae) / C31508) /
            C31544 -
        ((C31506 * (C31605 / C31544 +
                    ((C31506 * C31607 + C32673) * ae) / C31508 + C31599) +
          C32946) *
         be) /
            C31508 +
        C31607 / C31544 + ((C31506 * C31599 + C32680) * ae) / C31508 +
        2 * (C31577 / C31544 - (0 * be) / C31508);
    const double C6254 =
        (C31605 / C31544 + ((C31506 * C31607 + C32673) * ae) / C31508 +
         C31599) /
            C31544 -
        ((C31506 * (C31607 / C31544 +
                    ((C31506 * C31599 + C32680) * ae) / C31508 + 2 * C31613) +
          C32942) *
         be) /
            C31508 +
        2 * (C31599 / C31544 + ((C31506 * C31613 + C17571) * ae) / C31508);
    const double C6255 =
        (C31607 / C31544 + ((C31506 * C31599 + C32680) * ae) / C31508 +
         2 * C31613) /
            C31544 -
        ((C31506 *
              (C31599 / C31544 + ((C31506 * C31613 + C17571) * ae) / C31508) +
          C32932) *
         be) /
            C31508 +
        3 * (C31613 / C31544 + (0 * ae) / C31508);
    const double C7698 =
        C31605 / C31544 - ((C31506 * C31607 + C32673) * be) / C31508 + C31599;
    const double C7699 = C31607 / C31544 -
                         ((C31506 * C31599 + C32680) * be) / C31508 +
                         2 * C31613;
    const double C15791 =
        C31605 / C31544 + ((C31506 * C31607 + C32673) * ae) / C31508 + C31599;
    const double C15792 = C31607 / C31544 +
                          ((C31506 * C31599 + C32680) * ae) / C31508 +
                          2 * C31613;
    const double C24280 = C31694 * C118;
    const double C24274 = C31694 * C129;
    const double C24264 = C31694 * C127;
    const double C24258 = C31694 * C117;
    const double C24252 = C31694 * C125;
    const double C24246 = C31694 * C116;
    const double C24695 = C31694 * C255;
    const double C24689 = C31694 * C268;
    const double C24683 = C31694 * C254;
    const double C24677 = C31694 * C266;
    const double C24877 = C31694 * C360;
    const double C24871 = C31694 * C373;
    const double C24865 = C31694 * C359;
    const double C24859 = C31694 * C371;
    const double C25363 = C31694 * C257;
    const double C25357 = C31694 * C273;
    const double C25351 = C31694 * C258;
    const double C25345 = C31694 * C275;
    const double C25335 = C31694 * C270;
    const double C25329 = C31694 * C256;
    const double C25935 = C31694 * C722;
    const double C25929 = C31694 * C729;
    const double C26147 = C31694 * C721;
    const double C26141 = C31694 * C727;
    const double C30920 = C31694 * C1013;
    const double C30914 = C31694 * C1021;
    const double C31488 = C31694 * C1177;
    const double C31482 = C31694 * C1188;
    const double C11964 =
        (((((0 - (C31525 * C31647) / C31508) * ae) / C31508 -
           (0 * be) / C31512 + (2 * C31648) / C31508) /
              C31544 -
          ((C31525 * C31683 + 0) * be) / C31508 + C31657 - C31670) /
             C31544 +
         ((C31525 * C31692 + 0) * ae) / C31508) /
            C31544 -
        ((C31525 * (C31692 / C31544 +
                    ((C31525 * C31694 + C32715) * ae) / C31508 + C31686) +
          C32947) *
         be) /
            C31508 +
        C31694 / C31544 + ((C31525 * C31686 + C32722) * ae) / C31508 +
        2 * (C31664 / C31544 - (0 * be) / C31508);
    const double C11965 =
        (C31692 / C31544 + ((C31525 * C31694 + C32715) * ae) / C31508 +
         C31686) /
            C31544 -
        ((C31525 * (C31694 / C31544 +
                    ((C31525 * C31686 + C32722) * ae) / C31508 + 2 * C31700) +
          C32944) *
         be) /
            C31508 +
        2 * (C31686 / C31544 + ((C31525 * C31700 + C24241) * ae) / C31508);
    const double C11966 =
        (C31694 / C31544 + ((C31525 * C31686 + C32722) * ae) / C31508 +
         2 * C31700) /
            C31544 -
        ((C31525 *
              (C31686 / C31544 + ((C31525 * C31700 + C24241) * ae) / C31508) +
          C32935) *
         be) /
            C31508 +
        3 * (C31700 / C31544 + (0 * ae) / C31508);
    const double C13507 =
        C31692 / C31544 - ((C31525 * C31694 + C32715) * be) / C31508 + C31686;
    const double C13508 = C31694 / C31544 -
                          ((C31525 * C31686 + C32722) * be) / C31508 +
                          2 * C31700;
    const double C22400 =
        C31692 / C31544 + ((C31525 * C31694 + C32715) * ae) / C31508 + C31686;
    const double C22401 = C31694 / C31544 +
                          ((C31525 * C31686 + C32722) * ae) / C31508 +
                          2 * C31700;
    const double C17597 = C17585 + C17586;
    const double C7718 = C166 * C7698;
    const double C7703 = C164 * C7698;
    const double C8052 = C511 * C7698;
    const double C8192 = C631 * C7698;
    const double C7716 = C509 * C7699;
    const double C7705 = C511 * C7699;
    const double C8050 = C885 * C7699;
    const double C8190 = C1551 * C7699;
    const double C15811 = C166 * C15791;
    const double C15796 = C164 * C15791;
    const double C16145 = C511 * C15791;
    const double C16283 = C631 * C15791;
    const double C15809 = C509 * C15792;
    const double C15798 = C511 * C15792;
    const double C16143 = C885 * C15792;
    const double C16281 = C1551 * C15792;
    const double C24299 = C24280 + C24281;
    const double C24296 = C24274 + C24275;
    const double C24291 = C24264 + C24265;
    const double C24288 = C24258 + C24259;
    const double C24285 = C24252 + C24253;
    const double C24282 = C24246 + C24247;
    const double C24708 = C24695 + C24696;
    const double C24705 = C24689 + C24690;
    const double C24702 = C24683 + C24684;
    const double C24699 = C24677 + C24678;
    const double C24890 = C24877 + C24878;
    const double C24887 = C24871 + C24872;
    const double C24884 = C24865 + C24866;
    const double C24881 = C24859 + C24860;
    const double C25382 = C25363 + C25364;
    const double C25379 = C25357 + C25358;
    const double C25376 = C25351 + C25352;
    const double C25373 = C25345 + C25346;
    const double C25368 = C25335 + C25336;
    const double C25365 = C25329 + C25330;
    const double C25942 = C25935 + C25936;
    const double C25939 = C25929 + C25930;
    const double C26154 = C26147 + C26148;
    const double C26151 = C26141 + C26142;
    const double C30929 = C30920 + C30921;
    const double C30926 = C30914 + C30915;
    const double C31495 = C31488 + C31489;
    const double C31492 = C31482 + C31483;
    const double C13542 = C13507 * C117;
    const double C13534 = C13507 * C127;
    const double C13520 = C13507 * C125;
    const double C13512 = C13507 * C116;
    const double C13900 = C13507 * C255;
    const double C13892 = C13507 * C268;
    const double C14054 = C13507 * C360;
    const double C14046 = C13507 * C373;
    const double C14420 = C13507 * C257;
    const double C14412 = C13507 * C273;
    const double C14398 = C13507 * C270;
    const double C14390 = C13507 * C256;
    const double C14940 = C13507 * C721;
    const double C14932 = C13507 * C727;
    const double C13540 = C13508 * C359;
    const double C13532 = C13508 * C371;
    const double C13522 = C13508 * C373;
    const double C13514 = C13508 * C360;
    const double C13898 = C13508 * C722;
    const double C13890 = C13508 * C729;
    const double C14052 = C13508 * C363;
    const double C14044 = C13508 * C380;
    const double C14418 = C13508 * C1177;
    const double C14410 = C13508 * C1188;
    const double C14400 = C13508 * C727;
    const double C14392 = C13508 * C721;
    const double C14938 = C13508 * C1178;
    const double C14930 = C13508 * C1191;
    const double C22435 = C22400 * C117;
    const double C22427 = C22400 * C127;
    const double C22413 = C22400 * C125;
    const double C22405 = C22400 * C116;
    const double C22793 = C22400 * C255;
    const double C22785 = C22400 * C268;
    const double C22947 = C22400 * C360;
    const double C22939 = C22400 * C373;
    const double C28118 = C22400 * C257;
    const double C28110 = C22400 * C273;
    const double C28096 = C22400 * C270;
    const double C28088 = C22400 * C256;
    const double C28638 = C22400 * C721;
    const double C28630 = C22400 * C727;
    const double C22433 = C22401 * C359;
    const double C22425 = C22401 * C371;
    const double C22415 = C22401 * C373;
    const double C22407 = C22401 * C360;
    const double C22791 = C22401 * C722;
    const double C22783 = C22401 * C729;
    const double C22945 = C22401 * C363;
    const double C22937 = C22401 * C380;
    const double C28116 = C22401 * C1177;
    const double C28108 = C22401 * C1188;
    const double C28098 = C22401 * C727;
    const double C28090 = C22401 * C721;
    const double C28636 = C22401 * C1178;
    const double C28628 = C22401 * C1191;
    const double C17598 = C17597 + C17587;
    const double C24301 = C24291 + C24292;
    const double C24300 = C24288 + C24289;
    const double C25726 = C24707 + C24708;
    const double C25723 = C24708 + C24707;
    const double C25725 = C24704 + C24705;
    const double C25724 = C24705 + C24704;
    const double C30908 = C25382 + C25381;
    const double C30909 = C25379 + C25378;
    const double C13559 = C13542 + C13543;
    const double C13555 = C13534 + C13535;
    const double C13548 = C13520 + C13521;
    const double C13544 = C13512 + C13513;
    const double C13909 = C13900 + C13901;
    const double C13905 = C13892 + C13893;
    const double C14063 = C14054 + C14055;
    const double C14059 = C14046 + C14047;
    const double C14437 = C14420 + C14421;
    const double C14433 = C14412 + C14413;
    const double C14426 = C14398 + C14399;
    const double C14422 = C14390 + C14391;
    const double C14949 = C14940 + C14941;
    const double C14945 = C14932 + C14933;
    const double C13558 = C13540 + C13541;
    const double C13554 = C13532 + C13533;
    const double C13549 = C13522 + C13523;
    const double C13545 = C13514 + C13515;
    const double C13908 = C13898 + C13899;
    const double C13904 = C13890 + C13891;
    const double C14062 = C14052 + C14053;
    const double C14058 = C14044 + C14045;
    const double C14436 = C14418 + C14419;
    const double C14432 = C14410 + C14411;
    const double C14427 = C14400 + C14401;
    const double C14423 = C14392 + C14393;
    const double C14948 = C14938 + C14939;
    const double C14944 = C14930 + C14931;
    const double C22452 = C22435 + C22436;
    const double C22448 = C22427 + C22428;
    const double C22441 = C22413 + C22414;
    const double C22437 = C22405 + C22406;
    const double C22802 = C22793 + C22794;
    const double C22798 = C22785 + C22786;
    const double C22956 = C22947 + C22948;
    const double C22952 = C22939 + C22940;
    const double C28135 = C28118 + C28119;
    const double C28131 = C28110 + C28111;
    const double C28124 = C28096 + C28097;
    const double C28120 = C28088 + C28089;
    const double C28647 = C28638 + C28639;
    const double C28643 = C28630 + C28631;
    const double C22451 = C22433 + C22434;
    const double C22447 = C22425 + C22426;
    const double C22442 = C22415 + C22416;
    const double C22438 = C22407 + C22408;
    const double C22801 = C22791 + C22792;
    const double C22797 = C22783 + C22784;
    const double C22955 = C22945 + C22946;
    const double C22951 = C22937 + C22938;
    const double C28134 = C28116 + C28117;
    const double C28130 = C28108 + C28109;
    const double C28125 = C28098 + C28099;
    const double C28121 = C28090 + C28091;
    const double C28646 = C28636 + C28637;
    const double C28642 = C28628 + C28629;
    const double C17599 = C17598 + C17588;
    const double C24303 = C24301 + C24293;
    const double C24302 = C24300 + C24290;
    const double C25730 = C24706 + C25726;
    const double C25727 = C25723 + C24706;
    const double C25729 = C24703 + C25725;
    const double C25728 = C25724 + C24703;
    const double C30922 = C30908 + C25380;
    const double C30923 = C30909 + C25377;
    const double C17600 = C17599 + C17589;
    const double C24305 = C24303 * C32615;
    const double C24304 = C24302 * C114;
    const double C17601 = C17600 + C17590;
    const double C24306 = C24304 + C24305;
    d2ee[0] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C32632 * C122) * C31607 +
             (C113 * C123 + C32632 * C136) * C32673 + C1056 * C31599 +
             C1057 * C32680 + C1058 * C31613 + C1059 * C17571) *
                C32538 +
            (C17579 + C17580 + C17581 + C17582 + C17583 + C17584) * C32546 +
            C17601 * C17574) *
               C32592 * C479 -
           ((C17968 + C17969 + C17970 + C17971 + C17972 + C17973) * C17574 +
            (C17974 + C17975 + C17976 + C17977 + C17978 + C17979) * C32546 +
            (C1064 * C17571 + C1065 * C31613 + C1059 * C32680 + C1058 * C31599 +
             C1057 * C32673 + C1056 * C31607) *
                C32538) *
               C32592 * C480) *
              C481 +
          (((C17979 + C17978 + C17977 + C17976 + C17975 + C17974) * C32538 +
            (C17973 + C17972 + C17971 + C17970 + C17969 + C17968) * C32546 +
            (C507 * C31607 + C506 * C32673 + C891 * C31599 + C890 * C32680 +
             (C113 * C1357 + C32632 * C1358) * C31613 +
             (C113 * C1359 + C32632 * C1360) * C17571) *
                C17574) *
               C32592 * C480 -
           ((C17591 + C17592 + C17593 + C17594 + C17595 + C17596) * C17574 +
            (C17590 + C17589 + C17588 + C17587 + C17586 + C17585) * C32546 +
            (C17584 + C17583 + C17582 + C17581 + C17580 + C17579) * C32538) *
               C32592 * C479) *
              C482)) /
        (p * q * std::sqrt(p + q));
    d2ee[1] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C32632 * C122) * C31607 +
             (C113 * C123 + C32632 * C136) * C32673 + C1056 * C31599 +
             C1057 * C32680 + C1058 * C31613 + C1059 * C17571) *
                C32538 +
            (C17579 + C17580 + C17581 + C17582 + C17583 + C17584) * C32546 +
            C17601 * C17574) *
               C601 -
           ((C18126 + C18127 + C18128 + C18129 + C18130 + C18131) * C17574 +
            (C18132 + C18133 + C18134 + C18135 + C18136 + C18137) * C32546 +
            (C1726 * C17571 + C1727 * C31613 + C1728 * C32680 + C1729 * C31599 +
             (C113 * C375 + C32632 * C391) * C32673 +
             (C113 * C361 + C32632 * C376) * C31607) *
                C32538) *
               C602) *
              C479 +
          (((C1729 * C31607 + C1728 * C32673 + C1727 * C31599 + C1726 * C32680 +
             C6690 * C31613 + C6689 * C17571) *
                C32538 +
            (C1551 * C31607 + C1550 * C32673 + C1549 * C31599 + C1548 * C32680 +
             C8194 * C31613 + C8193 * C17571) *
                C32546 +
            (C1547 * C31607 + C1546 * C32673 + C1545 * C31599 + C1544 * C32680 +
             (C113 * C1707 + C32632 * C1712) * C31613 +
             (C113 * C1713 + C32632 * C1716) * C17571) *
                C17574) *
               C602 -
           ((C17968 + C17969 + C17970 + C17971 + C17972 + C17973) * C17574 +
            (C17974 + C17975 + C17976 + C17977 + C17978 + C17979) * C32546 +
            (C1064 * C17571 + C1065 * C31613 + C1059 * C32680 + C1058 * C31599 +
             C1057 * C32673 + C1056 * C31607) *
                C32538) *
               C601) *
              C480) *
         C32566) /
        (p * q * std::sqrt(p + q));
    d2ee[2] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C32632 * C122) * C31607 +
            (C113 * C123 + C32632 * C136) * C32673 + C1056 * C31599 +
            C1057 * C32680 + C1058 * C31613 + C1059 * C17571) *
               C32538 +
           (C17579 + C17580 + C17581 + C17582 + C17583 + C17584) * C32546 +
           C17601 * C17574) *
              C32592 * C248 -
          ((C1060 * C17571 + C1061 * C31613 + C889 * C32680 + C888 * C31599 +
            C508 * C32673 + C509 * C31607) *
               C17574 +
           (C1062 * C17571 + C1063 * C31613 + C886 * C32680 + C885 * C31599 +
            C510 * C32673 + C511 * C31607) *
               C32546 +
           (C1064 * C17571 + C1065 * C31613 + C1059 * C32680 + C1058 * C31599 +
            C1057 * C32673 + C1056 * C31607) *
               C32538) *
              C32592 * C249 +
          ((C1058 * C31607 + C1059 * C32673 + C1065 * C31599 + C1064 * C32680 +
            C6337 * C31613 + C6338 * C17571) *
               C32538 +
           (C885 * C31607 + C886 * C32673 + C1063 * C31599 + C1062 * C32680 +
            C6505 * C31613 + C6506 * C17571) *
               C32546 +
           (C888 * C31607 + C889 * C32673 + C1061 * C31599 + C1060 * C32680 +
            (C113 * C1016 + C32632 * C1027) * C31613 +
            (C113 * C1028 + C32632 * C1034) * C17571) *
               C17574) *
              C32592 * C250) *
         C32566) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C32632 * C122) * C31607 +
            (C113 * C123 + C32632 * C136) * C32673 + C1056 * C31599 +
            C1057 * C32680 + C1058 * C31613 + C1059 * C17571) *
               C32538 +
           (C17579 + C17580 + C17581 + C17582 + C17583 + C17584) * C32546 +
           C17601 * C17574) *
              C32592 * C32578 * C110 -
          ((C17591 + C17592 + C17593 + C17594 + C17595 + C17596) * C17574 +
           (C17590 + C17589 + C17588 + C17587 + C17586 + C17585) * C32546 +
           (C17584 + C17583 + C17582 + C17581 + C17580 + C17579) * C32538) *
              C32592 * C32578 * C111 +
          (C17601 * C32538 +
           (C17596 + C17595 + C17594 + C17593 + C17592 + C17591) * C32546 +
           (C170 * C31607 + C171 * C32673 + C505 * C31599 + C504 * C32680 +
            (C113 * C261 + C32632 * C280) * C31613 +
            (C113 * C281 + C32632 * C291) * C17571) *
               C17574) *
              C32592 * C32578 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C32632 * C122) * C31607 +
            (C113 * C123 + C32632 * C136) * C32673 + C1056 * C31599 +
            C1057 * C32680 + C1058 * C31613 + C1059 * C17571) *
               C32538 +
           (C17579 + C17580 + C17581 + C17582 + C17583 + C17584) * C32546 +
           C17601 * C17574) *
              C354 -
          ((C1544 * C17571 + C1545 * C31613 + C1546 * C32680 + C1547 * C31599 +
            C628 * C32673 + C629 * C31607) *
               C17574 +
           (C1548 * C17571 + C1549 * C31613 + C1550 * C32680 + C1551 * C31599 +
            C630 * C32673 + C631 * C31607) *
               C32546 +
           (C1726 * C17571 + C1727 * C31613 + C1728 * C32680 + C1729 * C31599 +
            (C113 * C375 + C32632 * C391) * C32673 +
            (C113 * C361 + C32632 * C376) * C31607) *
               C32538) *
              C355 +
          (((C113 * C362 + C32632 * C377) * C31607 +
            (C113 * C378 + C32632 * C392) * C32673 +
            (C113 * C1178 + C32632 * C1190) * C31599 +
            (C113 * C1191 + C32632 * C1205) * C32680 +
            (C113 * C1179 + C32632 * C1192) * C31613 +
            (C113 * C1193 + C32632 * C1206) * C17571) *
               C32538 +
           ((C113 * C363 + C32632 * C379) * C31607 +
            (C113 * C380 + C32632 * C393) * C32673 +
            (C113 * C1180 + C32632 * C1194) * C31599 +
            (C113 * C1195 + C32632 * C1207) * C32680 +
            (C113 * C1181 + C32632 * C1196) * C31613 +
            (C113 * C1197 + C32632 * C1208) * C17571) *
               C32546 +
           ((C113 * C364 + C32632 * C381) * C31607 +
            (C113 * C382 + C32632 * C394) * C32673 +
            (C113 * C1182 + C32632 * C1198) * C31599 +
            (C113 * C1199 + C32632 * C1209) * C32680 +
            (C113 * C1183 + C32632 * C1200) * C31613 +
            (C113 * C1201 + C32632 * C1210) * C17571) *
               C17574) *
              C356) *
         C32578 * C32566) /
            (p * q * std::sqrt(p + q));
    d2ee[3] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C32632 * C122) * C31607 +
             (C113 * C123 + C32632 * C136) * C32673 + C1056 * C31599 +
             C1057 * C32680 + C1058 * C31613 + C1059 * C17571) *
                C32538 +
            (C17579 + C17580 + C17581 + C17582 + C17583 + C17584) * C32546 +
            C17601 * C17574) *
               C601 -
           ((C18126 + C18127 + C18128 + C18129 + C18130 + C18131) * C17574 +
            (C18132 + C18133 + C18134 + C18135 + C18136 + C18137) * C32546 +
            (C1726 * C17571 + C1727 * C31613 + C1728 * C32680 + C1729 * C31599 +
             (C113 * C375 + C32632 * C391) * C32673 +
             (C113 * C361 + C32632 * C376) * C31607) *
                C32538) *
               C602) *
              C32578 * C481 +
          (((C18137 + C18136 + C18135 + C18134 + C18133 + C18132) * C32538 +
            (C18131 + C18130 + C18129 + C18128 + C18127 + C18126) * C32546 +
            (C627 * C31607 + C626 * C32673 + C3292 * C31599 + C3291 * C32680 +
             (C113 * C1519 + C32632 * C1520) * C31613 +
             (C113 * C1521 + C32632 * C1522) * C17571) *
                C17574) *
               C602 -
           ((C17591 + C17592 + C17593 + C17594 + C17595 + C17596) * C17574 +
            (C17590 + C17589 + C17588 + C17587 + C17586 + C17585) * C32546 +
            (C17584 + C17583 + C17582 + C17581 + C17580 + C17579) * C32538) *
               C601) *
              C32578 * C482)) /
        (p * q * std::sqrt(p + q));
    d2ee[4] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C32632 * C122) * C31607 +
            (C113 * C123 + C32632 * C136) * C32673 + C1056 * C31599 +
            C1057 * C32680 + C1058 * C31613 + C1059 * C17571) *
               C32538 +
           (C17579 + C17580 + C17581 + C17582 + C17583 + C17584) * C32546 +
           C17601 * C17574) *
              C32592 * C32578 * C110 -
          ((C17591 + C17592 + C17593 + C17594 + C17595 + C17596) * C17574 +
           (C17590 + C17589 + C17588 + C17587 + C17586 + C17585) * C32546 +
           (C17584 + C17583 + C17582 + C17581 + C17580 + C17579) * C32538) *
              C32592 * C32578 * C111 +
          (C17601 * C32538 +
           (C17596 + C17595 + C17594 + C17593 + C17592 + C17591) * C32546 +
           (C170 * C31607 + C171 * C32673 + C505 * C31599 + C504 * C32680 +
            (C113 * C261 + C32632 * C280) * C31613 +
            (C113 * C281 + C32632 * C291) * C17571) *
               C17574) *
              C32592 * C32578 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C32632 * C122) * C31607 +
            (C113 * C123 + C32632 * C136) * C32673 + C1056 * C31599 +
            C1057 * C32680 + C1058 * C31613 + C1059 * C17571) *
               C32538 +
           (C17579 + C17580 + C17581 + C17582 + C17583 + C17584) * C32546 +
           C17601 * C17574) *
              C32592 * C248 -
          ((C1060 * C17571 + C1061 * C31613 + C889 * C32680 + C888 * C31599 +
            C508 * C32673 + C509 * C31607) *
               C17574 +
           (C1062 * C17571 + C1063 * C31613 + C886 * C32680 + C885 * C31599 +
            C510 * C32673 + C511 * C31607) *
               C32546 +
           (C1064 * C17571 + C1065 * C31613 + C1059 * C32680 + C1058 * C31599 +
            C1057 * C32673 + C1056 * C31607) *
               C32538) *
              C32592 * C249 +
          ((C1058 * C31607 + C1059 * C32673 + C1065 * C31599 + C1064 * C32680 +
            C6337 * C31613 + C6338 * C17571) *
               C32538 +
           (C885 * C31607 + C886 * C32673 + C1063 * C31599 + C1062 * C32680 +
            C6505 * C31613 + C6506 * C17571) *
               C32546 +
           (C888 * C31607 + C889 * C32673 + C1061 * C31599 + C1060 * C32680 +
            (C113 * C1016 + C32632 * C1027) * C31613 +
            (C113 * C1028 + C32632 * C1034) * C17571) *
               C17574) *
              C32592 * C250) *
         C32566) /
            (p * q * std::sqrt(p + q));
    d2ee[5] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C3524 * C115 + C32874 * C122 + C3525 * C361 + C32719 * C376) *
                 C31607 +
             (C3524 * C123 + C32874 * C136 + C3525 * C375 + C32719 * C391) *
                 C32673 +
             (C4576 + C4577) * C31599 + (C4578 + C4579) * C32680 +
             C8619 * C31613 + C8620 * C17571) *
                C15789 +
            ((C3559 + C3560) * C31607 + (C3561 + C3562) * C32673 +
             C4932 * C31599 + C4933 * C32680 + C8621 * C31613 +
             C8622 * C17571) *
                C32543) *
               C32592 * C479 -
           (((C8639 + C8640) * C17571 + (C8641 + C8642) * C31613 +
             C8987 * C32680 + C8988 * C31599 + C4936 * C32673 +
             C4937 * C31607) *
                C32543 +
            ((C8643 + C8644) * C17571 + (C8645 + C8646) * C31613 +
             (C4588 + C4589) * C32680 + (C4590 + C4591) * C31599 +
             (C4579 + C4578) * C32673 + (C4577 + C4576) * C31607) *
                C15789) *
               C32592 * C480) *
              C481 +
          (((C4932 * C31607 + C4933 * C32673 + C8621 * C31599 + C8622 * C32680 +
             (C8642 + C8641) * C31613 + (C8640 + C8639) * C17571) *
                C15789 +
            (C4391 * C31607 + C4392 * C32673 + (C4583 + C4582) * C31599 +
             (C4581 + C4580) * C32680 +
             (C3524 * C1011 + C32874 * C1018 + C3525 * C1707 + C32719 * C1712) *
                 C31613 +
             (C3524 * C1017 + C32874 * C1029 + C3525 * C1713 + C32719 * C1716) *
                 C17571) *
                C32543) *
               C32592 * C480 -
           (((C4580 + C4581) * C17571 + (C4582 + C4583) * C31613 +
             C4934 * C32680 + C4935 * C31599 + (C3566 + C3565) * C32673 +
             (C3564 + C3563) * C31607) *
                C32543 +
            (C8987 * C17571 + C8988 * C31613 + C4936 * C32680 + C4937 * C31599 +
             (C3562 + C3561) * C32673 + (C3560 + C3559) * C31607) *
                C15789) *
               C32592 * C479) *
              C482)) /
        (p * q * std::sqrt(p + q));
    d2ee[6] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C3524 * C115 + C32874 * C122 + C3525 * C361 + C32719 * C376) *
                 C31607 +
             (C3524 * C123 + C32874 * C136 + C3525 * C375 + C32719 * C391) *
                 C32673 +
             (C4576 + C4577) * C31599 + (C4578 + C4579) * C32680 +
             C8619 * C31613 + C8620 * C17571) *
                C15789 +
            ((C3559 + C3560) * C31607 + (C3561 + C3562) * C32673 +
             C4932 * C31599 + C4933 * C32680 + C8621 * C31613 +
             C8622 * C17571) *
                C32543) *
               C601 -
           (((C9191 + C9192) * C17571 + (C9193 + C9194) * C31613 +
             (C5152 + C5153) * C32680 + (C5154 + C5155) * C31599 +
             (C4109 + C4110) * C32673 + (C4111 + C4112) * C31607) *
                C32543 +
            ((C9397 + C9398) * C17571 + (C9399 + C9400) * C31613 +
             (C5358 + C5359) * C32680 + (C5360 + C5361) * C31599 +
             (C3525 * C378 + C32719 * C392 + C3524 * C375 + C32874 * C391) *
                 C32673 +
             (C3525 * C362 + C32719 * C377 + C3524 * C361 + C32874 * C376) *
                 C31607) *
                C15789) *
               C602) *
              C479 +
          ((((C5361 + C5360) * C31607 + (C5359 + C5358) * C32673 +
             (C9400 + C9399) * C31599 + (C9398 + C9397) * C32680 +
             (C10110 + C10109) * C31613 + (C10108 + C10107) * C17571) *
                C15789 +
            ((C5155 + C5154) * C31607 + (C5153 + C5152) * C32673 +
             (C9194 + C9193) * C31599 + (C9192 + C9191) * C32680 +
             (C3524 * C1706 + C32874 * C1710 + C3525 * C7236 + C32719 * C7237) *
                 C31613 +
             (C3524 * C1711 + C32874 * C1715 + C3525 * C7238 + C32719 * C7239) *
                 C17571) *
                C32543) *
               C602 -
           (((C8639 + C8640) * C17571 + (C8641 + C8642) * C31613 +
             C8987 * C32680 + C8988 * C31599 + C4936 * C32673 +
             C4937 * C31607) *
                C32543 +
            ((C8643 + C8644) * C17571 + (C8645 + C8646) * C31613 +
             (C4588 + C4589) * C32680 + (C4590 + C4591) * C31599 +
             (C4579 + C4578) * C32673 + (C4577 + C4576) * C31607) *
                C15789) *
               C601) *
              C480) *
         C32566) /
        (p * q * std::sqrt(p + q));
    d2ee[7] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C3524 * C115 + C32874 * C122 + C3525 * C361 + C32719 * C376) *
                C31607 +
            (C3524 * C123 + C32874 * C136 + C3525 * C375 + C32719 * C391) *
                C32673 +
            (C4576 + C4577) * C31599 + (C4578 + C4579) * C32680 +
            C8619 * C31613 + C8620 * C17571) *
               C15789 +
           ((C3559 + C3560) * C31607 + (C3561 + C3562) * C32673 +
            C4932 * C31599 + C4933 * C32680 + C8621 * C31613 + C8622 * C17571) *
               C32543) *
              C32592 * C248 -
          (((C8639 + C8640) * C17571 + (C8641 + C8642) * C31613 +
            C8987 * C32680 + C8988 * C31599 + C4936 * C32673 + C4937 * C31607) *
               C32543 +
           ((C8643 + C8644) * C17571 + (C8645 + C8646) * C31613 +
            (C4588 + C4589) * C32680 + (C4590 + C4591) * C31599 +
            (C4579 + C4578) * C32673 + (C4577 + C4576) * C31607) *
               C15789) *
              C32592 * C249 +
          ((C8619 * C31607 + C8620 * C32673 + C9597 * C31599 + C9598 * C32680 +
            (C9610 + C9609) * C31613 + (C9608 + C9607) * C17571) *
               C15789 +
           (C8621 * C31607 + C8622 * C32673 + (C8642 + C8641) * C31599 +
            (C8640 + C8639) * C32680 +
            (C3524 * C1015 + C32874 * C1025 + C3525 * C6588 + C32719 * C6589) *
                C31613 +
            (C3524 * C1026 + C32874 * C1033 + C3525 * C6590 + C32719 * C6591) *
                C17571) *
               C32543) *
              C32592 * C250) *
         C32566) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C3524 * C115 + C32874 * C122 + C3525 * C361 + C32719 * C376) *
                C31607 +
            (C3524 * C123 + C32874 * C136 + C3525 * C375 + C32719 * C391) *
                C32673 +
            (C4576 + C4577) * C31599 + (C4578 + C4579) * C32680 +
            C8619 * C31613 + C8620 * C17571) *
               C15789 +
           ((C3559 + C3560) * C31607 + (C3561 + C3562) * C32673 +
            C4932 * C31599 + C4933 * C32680 + C8621 * C31613 + C8622 * C17571) *
               C32543) *
              C32592 * C32578 * C110 -
          (((C4580 + C4581) * C17571 + (C4582 + C4583) * C31613 +
            C4934 * C32680 + C4935 * C31599 + (C3566 + C3565) * C32673 +
            (C3564 + C3563) * C31607) *
               C32543 +
           (C8987 * C17571 + C8988 * C31613 + C4936 * C32680 + C4937 * C31599 +
            (C3562 + C3561) * C32673 + (C3560 + C3559) * C31607) *
               C15789) *
              C32592 * C32578 * C111 +
          ((C3575 * C31607 + C3576 * C32673 + C4391 * C31599 + C4392 * C32680 +
            (C4583 + C4582) * C31613 + (C4581 + C4580) * C17571) *
               C15789 +
           (C3577 * C31607 + C3578 * C32673 + (C3938 + C3937) * C31599 +
            (C3936 + C3935) * C32680 +
            (C3524 * C260 + C32874 * C278 + C3525 * C1519 + C32719 * C1520) *
                C31613 +
            (C3524 * C279 + C32874 * C290 + C3525 * C1521 + C32719 * C1522) *
                C17571) *
               C32543) *
              C32592 * C32578 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C3524 * C115 + C32874 * C122 + C3525 * C361 + C32719 * C376) *
                C31607 +
            (C3524 * C123 + C32874 * C136 + C3525 * C375 + C32719 * C391) *
                C32673 +
            (C4576 + C4577) * C31599 + (C4578 + C4579) * C32680 +
            C8619 * C31613 + C8620 * C17571) *
               C15789 +
           ((C3559 + C3560) * C31607 + (C3561 + C3562) * C32673 +
            C4932 * C31599 + C4933 * C32680 + C8621 * C31613 + C8622 * C17571) *
               C32543) *
              C354 -
          (((C9191 + C9192) * C17571 + (C9193 + C9194) * C31613 +
            (C5152 + C5153) * C32680 + (C5154 + C5155) * C31599 +
            (C4109 + C4110) * C32673 + (C4111 + C4112) * C31607) *
               C32543 +
           ((C9397 + C9398) * C17571 + (C9399 + C9400) * C31613 +
            (C5358 + C5359) * C32680 + (C5360 + C5361) * C31599 +
            (C3525 * C378 + C32719 * C392 + C3524 * C375 + C32874 * C391) *
                C32673 +
            (C3525 * C362 + C32719 * C377 + C3524 * C361 + C32874 * C376) *
                C31607) *
               C15789) *
              C355 +
          (((C3524 * C362 + C32874 * C377 + C3525 * C2128 + C32719 * C2137) *
                C31607 +
            (C3524 * C378 + C32874 * C392 + C3525 * C2136 + C32719 * C2146) *
                C32673 +
            (C3524 * C1178 + C32874 * C1190 + C3525 * C2668 + C32719 * C2671) *
                C31599 +
            (C3524 * C1191 + C32874 * C1205 + C3525 * C2672 + C32719 * C2677) *
                C32680 +
            (C3524 * C1179 + C32874 * C1192 + C3525 * C7078 + C32719 * C7082) *
                C31613 +
            (C3524 * C1193 + C32874 * C1206 + C3525 * C7081 + C32719 * C7087) *
                C17571) *
               C15789 +
           ((C3524 * C363 + C32874 * C379 + C3525 * C2127 + C32719 * C2135) *
                C31607 +
            (C3524 * C380 + C32874 * C393 + C3525 * C2134 + C32719 * C2145) *
                C32673 +
            (C3524 * C1180 + C32874 * C1194 + C3525 * C2669 + C32719 * C2673) *
                C31599 +
            (C3524 * C1195 + C32874 * C1207 + C3525 * C2674 + C32719 * C2678) *
                C32680 +
            (C3524 * C1181 + C32874 * C1196 + C3525 * C7404 + C32719 * C7405) *
                C31613 +
            (C3524 * C1197 + C32874 * C1208 + C3525 * C7406 + C32719 * C7407) *
                C17571) *
               C32543) *
              C356) *
         C32578 * C32566) /
            (p * q * std::sqrt(p + q));
    d2ee[8] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C3524 * C115 + C32874 * C122 + C3525 * C361 + C32719 * C376) *
                 C31607 +
             (C3524 * C123 + C32874 * C136 + C3525 * C375 + C32719 * C391) *
                 C32673 +
             (C4576 + C4577) * C31599 + (C4578 + C4579) * C32680 +
             C8619 * C31613 + C8620 * C17571) *
                C15789 +
            ((C3559 + C3560) * C31607 + (C3561 + C3562) * C32673 +
             C4932 * C31599 + C4933 * C32680 + C8621 * C31613 +
             C8622 * C17571) *
                C32543) *
               C601 -
           (((C9191 + C9192) * C17571 + (C9193 + C9194) * C31613 +
             (C5152 + C5153) * C32680 + (C5154 + C5155) * C31599 +
             (C4109 + C4110) * C32673 + (C4111 + C4112) * C31607) *
                C32543 +
            ((C9397 + C9398) * C17571 + (C9399 + C9400) * C31613 +
             (C5358 + C5359) * C32680 + (C5360 + C5361) * C31599 +
             (C3525 * C378 + C32719 * C392 + C3524 * C375 + C32874 * C391) *
                 C32673 +
             (C3525 * C362 + C32719 * C377 + C3524 * C361 + C32874 * C376) *
                 C31607) *
                C15789) *
               C602) *
              C32578 * C481 +
          ((((C4112 + C4111) * C31607 + (C4110 + C4109) * C32673 +
             (C5155 + C5154) * C31599 + (C5153 + C5152) * C32680 +
             (C9194 + C9193) * C31613 + (C9192 + C9191) * C17571) *
                C15789 +
            ((C4108 + C4107) * C31607 + (C4106 + C4105) * C32673 +
             (C5151 + C5150) * C31599 + (C5149 + C5148) * C32680 +
             (C3524 * C1175 + C32874 * C1185 + C3525 * C1183 + C32719 * C1200) *
                 C31613 +
             (C3524 * C1184 + C32874 * C1202 + C3525 * C1201 + C32719 * C1210) *
                 C17571) *
                C32543) *
               C602 -
           (((C4580 + C4581) * C17571 + (C4582 + C4583) * C31613 +
             C4934 * C32680 + C4935 * C31599 + (C3566 + C3565) * C32673 +
             (C3564 + C3563) * C31607) *
                C32543 +
            (C8987 * C17571 + C8988 * C31613 + C4936 * C32680 + C4937 * C31599 +
             (C3562 + C3561) * C32673 + (C3560 + C3559) * C31607) *
                C15789) *
               C601) *
              C32578 * C482)) /
        (p * q * std::sqrt(p + q));
    d2ee[9] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C3524 * C115 + C32874 * C122 + C3525 * C361 + C32719 * C376) *
                C31607 +
            (C3524 * C123 + C32874 * C136 + C3525 * C375 + C32719 * C391) *
                C32673 +
            (C4576 + C4577) * C31599 + (C4578 + C4579) * C32680 +
            C8619 * C31613 + C8620 * C17571) *
               C15789 +
           ((C3559 + C3560) * C31607 + (C3561 + C3562) * C32673 +
            C4932 * C31599 + C4933 * C32680 + C8621 * C31613 + C8622 * C17571) *
               C32543) *
              C32592 * C32578 * C110 -
          (((C4580 + C4581) * C17571 + (C4582 + C4583) * C31613 +
            C4934 * C32680 + C4935 * C31599 + (C3566 + C3565) * C32673 +
            (C3564 + C3563) * C31607) *
               C32543 +
           (C8987 * C17571 + C8988 * C31613 + C4936 * C32680 + C4937 * C31599 +
            (C3562 + C3561) * C32673 + (C3560 + C3559) * C31607) *
               C15789) *
              C32592 * C32578 * C111 +
          ((C3575 * C31607 + C3576 * C32673 + C4391 * C31599 + C4392 * C32680 +
            (C4583 + C4582) * C31613 + (C4581 + C4580) * C17571) *
               C15789 +
           (C3577 * C31607 + C3578 * C32673 + (C3938 + C3937) * C31599 +
            (C3936 + C3935) * C32680 +
            (C3524 * C260 + C32874 * C278 + C3525 * C1519 + C32719 * C1520) *
                C31613 +
            (C3524 * C279 + C32874 * C290 + C3525 * C1521 + C32719 * C1522) *
                C17571) *
               C32543) *
              C32592 * C32578 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C3524 * C115 + C32874 * C122 + C3525 * C361 + C32719 * C376) *
                C31607 +
            (C3524 * C123 + C32874 * C136 + C3525 * C375 + C32719 * C391) *
                C32673 +
            (C4576 + C4577) * C31599 + (C4578 + C4579) * C32680 +
            C8619 * C31613 + C8620 * C17571) *
               C15789 +
           ((C3559 + C3560) * C31607 + (C3561 + C3562) * C32673 +
            C4932 * C31599 + C4933 * C32680 + C8621 * C31613 + C8622 * C17571) *
               C32543) *
              C32592 * C248 -
          (((C8639 + C8640) * C17571 + (C8641 + C8642) * C31613 +
            C8987 * C32680 + C8988 * C31599 + C4936 * C32673 + C4937 * C31607) *
               C32543 +
           ((C8643 + C8644) * C17571 + (C8645 + C8646) * C31613 +
            (C4588 + C4589) * C32680 + (C4590 + C4591) * C31599 +
            (C4579 + C4578) * C32673 + (C4577 + C4576) * C31607) *
               C15789) *
              C32592 * C249 +
          ((C8619 * C31607 + C8620 * C32673 + C9597 * C31599 + C9598 * C32680 +
            (C9610 + C9609) * C31613 + (C9608 + C9607) * C17571) *
               C15789 +
           (C8621 * C31607 + C8622 * C32673 + (C8642 + C8641) * C31599 +
            (C8640 + C8639) * C32680 +
            (C3524 * C1015 + C32874 * C1025 + C3525 * C6588 + C32719 * C6589) *
                C31613 +
            (C3524 * C1026 + C32874 * C1033 + C3525 * C6590 + C32719 * C6591) *
                C17571) *
               C32543) *
              C32592 * C250) *
         C32566) /
            (p * q * std::sqrt(p + q));
    d2ee[10] += (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((((C113 * C115 + C32632 * C122) * C15791 +
                     (C113 * C123 + C32632 * C136) * C32946 + C1056 * C15792 +
                     C1057 * C32942 + C1058 * C15793 + C1059 * C32932 +
                     C1065 * C15794 + C1064 * C32914) *
                        C15789 +
                    (C15796 + C15797 + C15798 + C15799 + C15800 + C15801 +
                     C15802 + C15803) *
                        C32543) *
                       C32592 * C479 -
                   ((C16138 + C16139 + C16140 + C16141 + C16142 + C16143 +
                     C16144 + C16145) *
                        C32543 +
                    (C6338 * C32914 + C6337 * C15794 + C1064 * C32932 +
                     C1065 * C15793 + C1059 * C32942 + C1058 * C15792 +
                     C1057 * C32946 + C1056 * C15791) *
                        C15789) *
                       C32592 * C480) *
                      C481 +
                  (((C16145 + C16144 + C16143 + C16142 + C16141 + C16140 +
                     C16139 + C16138) *
                        C15789 +
                    (C509 * C15791 + C508 * C32946 + C888 * C15792 +
                     C889 * C32942 + C1061 * C15793 + C1060 * C32932 +
                     (C113 * C1016 + C32632 * C1027) * C15794 +
                     (C113 * C1028 + C32632 * C1034) * C32914) *
                        C32543) *
                       C32592 * C480 -
                   ((C15804 + C15805 + C15806 + C15807 + C15808 + C15809 +
                     C15810 + C15811) *
                        C32543 +
                    (C15803 + C15802 + C15801 + C15800 + C15799 + C15798 +
                     C15797 + C15796) *
                        C15789) *
                       C32592 * C479) *
                      C482)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((((C113 * C115 + C32632 * C122) * C15053 +
                     (C113 * C123 + C32632 * C136) * C15047 + C1056 * C15054 +
                     C1057 * C32677) *
                        C32945 +
                    (C15056 + C15057 + C15058 + C15059) * C32938 +
                    C15076 * C32925 + C15077 * C32908) *
                       C32592 * C479 -
                   ((C15404 + C15405 + C15406 + C15407) * C32908 +
                    (C15408 + C15409 + C15410 + C15411) * C32925 +
                    (C15412 + C15413 + C15414 + C15415) * C32938 +
                    (C1059 * C32677 + C1058 * C15054 + C1057 * C15047 +
                     C1056 * C15053) *
                        C32945) *
                       C32592 * C480) *
                      C481 +
                  (((C15415 + C15414 + C15413 + C15412) * C32945 +
                    (C15411 + C15410 + C15409 + C15408) * C32938 +
                    (C15407 + C15406 + C15405 + C15404) * C32925 +
                    (C505 * C15053 + C504 * C15047 +
                     (C113 * C261 + C32632 * C280) * C15054 +
                     (C113 * C281 + C32632 * C291) * C32677) *
                        C32908) *
                       C32592 * C480 -
                   ((C15068 + C15069 + C15070 + C15071) * C32908 +
                    (C15067 + C15066 + C15065 + C15064) * C32925 +
                    (C15063 + C15062 + C15061 + C15060) * C32938 +
                    (C15059 + C15058 + C15057 + C15056) * C32945) *
                       C32592 * C479) *
                      C482)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C1842 * C115 + C32940 * C122 + C1843 * C361 +
                      C32929 * C376 + C1844 * C362 + C32907 * C377) *
                         C15053 +
                     (C1842 * C123 + C32940 * C136 + C1843 * C375 +
                      C32929 * C391 + C1844 * C378 + C32907 * C392) *
                         C15047 +
                     (C6947 + C6948 + C6949) * C15054 +
                     (C6950 + C6951 + C6952) * C32677) *
                        C15789 +
                    ((C1882 + C1883 + C1884) * C15053 +
                     (C1885 + C1886 + C1887) * C15047 + C17050 * C15054 +
                     C17051 * C32677) *
                        C32543) *
                       C32592 * C479 -
                   (((C7258 + C7257 + C7256) * C32677 +
                     (C7255 + C7254 + C7253) * C15054 + C17052 * C15047 +
                     C17053 * C15053) *
                        C32543 +
                    ((C6958 + C6957 + C6956) * C32677 +
                     (C6955 + C6954 + C6953) * C15054 +
                     (C6952 + C6951 + C6950) * C15047 +
                     (C6949 + C6948 + C6947) * C15053) *
                        C15789) *
                       C32592 * C480) *
                      C481 +
                  (((C17050 * C15053 + C17051 * C15047 +
                     (C7253 + C7254 + C7255) * C15054 +
                     (C7256 + C7257 + C7258) * C32677) *
                        C15789 +
                    ((C2330 + C2329 + C2328) * C15053 +
                     (C2327 + C2326 + C2325) * C15047 +
                     (C1842 * C259 + C32940 * C276 + C1843 * C1175 +
                      C32929 * C1185 + C1844 * C1183 + C32907 * C1200) *
                         C15054 +
                     (C1842 * C277 + C32940 * C289 + C1843 * C1184 +
                      C32929 * C1202 + C1844 * C1201 + C32907 * C1210) *
                         C32677) *
                        C32543) *
                       C32592 * C480 -
                   (((C2325 + C2326 + C2327) * C32677 +
                     (C2328 + C2329 + C2330) * C15054 +
                     (C1893 + C1892 + C1891) * C15047 +
                     (C1890 + C1889 + C1888) * C15053) *
                        C32543 +
                    (C17052 * C32677 + C17053 * C15054 +
                     (C1887 + C1886 + C1885) * C15047 +
                     (C1884 + C1883 + C1882) * C15053) *
                        C15789) *
                       C32592 * C479) *
                      C482)) /
                    (p * q * std::sqrt(p + q));
    d2ee[11] += (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((((C113 * C115 + C32632 * C122) * C15791 +
                     (C113 * C123 + C32632 * C136) * C32946 + C1056 * C15792 +
                     C1057 * C32942 + C1058 * C15793 + C1059 * C32932 +
                     C1065 * C15794 + C1064 * C32914) *
                        C15789 +
                    (C15796 + C15797 + C15798 + C15799 + C15800 + C15801 +
                     C15802 + C15803) *
                        C32543) *
                       C601 -
                   ((C16276 + C16277 + C16278 + C16279 + C16280 + C16281 +
                     C16282 + C16283) *
                        C32543 +
                    (C6689 * C32914 + C6690 * C15794 + C1726 * C32932 +
                     C1727 * C15793 + C1728 * C32942 + C1729 * C15792 +
                     (C113 * C375 + C32632 * C391) * C32946 +
                     (C113 * C361 + C32632 * C376) * C15791) *
                        C15789) *
                       C602) *
                      C479 +
                  (((C1729 * C15791 + C1728 * C32946 + C1727 * C15792 +
                     C1726 * C32942 + C6690 * C15793 + C6689 * C32932 +
                     C6688 * C15794 + C6687 * C32914) *
                        C15789 +
                    (C1551 * C15791 + C1550 * C32946 + C1549 * C15792 +
                     C1548 * C32942 + C8194 * C15793 + C8193 * C32932 +
                     (C113 * C6588 + C32632 * C6589) * C15794 +
                     (C113 * C6590 + C32632 * C6591) * C32914) *
                        C32543) *
                       C602 -
                   ((C16138 + C16139 + C16140 + C16141 + C16142 + C16143 +
                     C16144 + C16145) *
                        C32543 +
                    (C6338 * C32914 + C6337 * C15794 + C1064 * C32932 +
                     C1065 * C15793 + C1059 * C32942 + C1058 * C15792 +
                     C1057 * C32946 + C1056 * C15791) *
                        C15789) *
                       C601) *
                      C480) *
                 C32566) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((((C113 * C115 + C32632 * C122) * C15053 +
                     (C113 * C123 + C32632 * C136) * C15047 + C1056 * C15054 +
                     C1057 * C32677) *
                        C32945 +
                    (C15056 + C15057 + C15058 + C15059) * C32938 +
                    C15076 * C32925 + C15077 * C32908) *
                       C601 -
                   ((C15546 + C15547 + C15548 + C15549) * C32908 +
                    (C15550 + C15551 + C15552 + C15553) * C32925 +
                    (C15554 + C15555 + C15556 + C15557) * C32938 +
                    (C1728 * C32677 + C1729 * C15054 +
                     (C113 * C375 + C32632 * C391) * C15047 +
                     (C113 * C361 + C32632 * C376) * C15053) *
                        C32945) *
                       C602) *
                      C479 +
                  (((C1729 * C15053 + C1728 * C15047 + C1727 * C15054 +
                     C1726 * C32677) *
                        C32945 +
                    (C1551 * C15053 + C1550 * C15047 + C1549 * C15054 +
                     C1548 * C32677) *
                        C32938 +
                    (C1547 * C15053 + C1546 * C15047 + C1545 * C15054 +
                     C1544 * C32677) *
                        C32925 +
                    (C3292 * C15053 + C3291 * C15047 +
                     (C113 * C1519 + C32632 * C1520) * C15054 +
                     (C113 * C1521 + C32632 * C1522) * C32677) *
                        C32908) *
                       C602 -
                   ((C15404 + C15405 + C15406 + C15407) * C32908 +
                    (C15408 + C15409 + C15410 + C15411) * C32925 +
                    (C15412 + C15413 + C15414 + C15415) * C32938 +
                    (C1059 * C32677 + C1058 * C15054 + C1057 * C15047 +
                     C1056 * C15053) *
                        C32945) *
                       C601) *
                      C480) *
                 C32566) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C1842 * C115 + C32940 * C122 + C1843 * C361 +
                      C32929 * C376 + C1844 * C362 + C32907 * C377) *
                         C15053 +
                     (C1842 * C123 + C32940 * C136 + C1843 * C375 +
                      C32929 * C391 + C1844 * C378 + C32907 * C392) *
                         C15047 +
                     (C6947 + C6948 + C6949) * C15054 +
                     (C6950 + C6951 + C6952) * C32677) *
                        C15789 +
                    ((C1882 + C1883 + C1884) * C15053 +
                     (C1885 + C1886 + C1887) * C15047 + C17050 * C15054 +
                     C17051 * C32677) *
                        C32543) *
                       C601 -
                   (((C17260 + C17261 + C17262) * C32677 +
                     (C17263 + C17264 + C17265) * C15054 +
                     (C2517 + C2518 + C2519) * C15047 +
                     (C2520 + C2521 + C2522) * C15053) *
                        C32543 +
                    ((C7589 + C7590 + C7591) * C32677 +
                     (C7592 + C7593 + C7594) * C15054 +
                     (C1844 * C2136 + C32907 * C2146 + C1843 * C378 +
                      C32929 * C392 + C1842 * C375 + C32940 * C391) *
                         C15047 +
                     (C1844 * C2128 + C32907 * C2137 + C1843 * C362 +
                      C32929 * C377 + C1842 * C361 + C32940 * C376) *
                         C15053) *
                        C15789) *
                       C602) *
                      C479 +
                  ((((C7594 + C7593 + C7592) * C15053 +
                     (C7591 + C7590 + C7589) * C15047 +
                     (C7588 + C7587 + C7586) * C15054 +
                     (C7585 + C7584 + C7583) * C32677) *
                        C15789 +
                    ((C17265 + C17264 + C17263) * C15053 +
                     (C17262 + C17261 + C17260) * C15047 +
                     (C1842 * C1176 + C32940 * C1187 + C1843 * C1181 +
                      C32929 * C1196 + C1844 * C7404 + C32907 * C7405) *
                         C15054 +
                     (C1842 * C1186 + C32940 * C1203 + C1843 * C1197 +
                      C32929 * C1208 + C1844 * C7406 + C32907 * C7407) *
                         C32677) *
                        C32543) *
                       C602 -
                   (((C7258 + C7257 + C7256) * C32677 +
                     (C7255 + C7254 + C7253) * C15054 + C17052 * C15047 +
                     C17053 * C15053) *
                        C32543 +
                    ((C6958 + C6957 + C6956) * C32677 +
                     (C6955 + C6954 + C6953) * C15054 +
                     (C6952 + C6951 + C6950) * C15047 +
                     (C6949 + C6948 + C6947) * C15053) *
                        C15789) *
                       C601) *
                      C480) *
                 C32566) /
                    (p * q * std::sqrt(p + q));
    d2ee[12] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C113 * C115 + C32632 * C122) * C15053 +
                (C113 * C123 + C32632 * C136) * C15047 + C1056 * C15054 +
                C1057 * C32677) *
                   C32945 +
               (C15056 + C15057 + C15058 + C15059) * C32938 + C15076 * C32925 +
               C15077 * C32908) *
                  C32592 * C32578 * C110 -
              ((C15068 + C15069 + C15070 + C15071) * C32908 +
               (C15067 + C15066 + C15065 + C15064) * C32925 +
               (C15063 + C15062 + C15061 + C15060) * C32938 +
               (C15059 + C15058 + C15057 + C15056) * C32945) *
                  C32592 * C32578 * C111 +
              (C15076 * C32945 + C15077 * C32938 +
               (C15071 + C15070 + C15069 + C15068) * C32925 +
               (C173 * C15053 + C172 * C15047 +
                (C113 * C483 + C32632 * C484) * C15054 +
                (C113 * C485 + C32632 * C486) * C32677) *
                   C32908) *
                  C32592 * C32578 * C112) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C113 * C115 + C32632 * C122) * C15053 +
                (C113 * C123 + C32632 * C136) * C15047 + C1056 * C15054 +
                C1057 * C32677) *
                   C32945 +
               (C15056 + C15057 + C15058 + C15059) * C32938 + C15076 * C32925 +
               C15077 * C32908) *
                  C32592 * C248 -
              ((C890 * C32677 + C891 * C15054 + C506 * C15047 + C507 * C15053) *
                   C32908 +
               (C889 * C32677 + C888 * C15054 + C508 * C15047 + C509 * C15053) *
                   C32925 +
               (C886 * C32677 + C885 * C15054 + C510 * C15047 + C511 * C15053) *
                   C32938 +
               (C1059 * C32677 + C1058 * C15054 + C1057 * C15047 +
                C1056 * C15053) *
                   C32945) *
                  C32592 * C249 +
              ((C1058 * C15053 + C1059 * C15047 + C1065 * C15054 +
                C1064 * C32677) *
                   C32945 +
               (C885 * C15053 + C886 * C15047 + C1063 * C15054 +
                C1062 * C32677) *
                   C32938 +
               (C888 * C15053 + C889 * C15047 + C1061 * C15054 +
                C1060 * C32677) *
                   C32925 +
               (C891 * C15053 + C890 * C15047 +
                (C113 * C1357 + C32632 * C1358) * C15054 +
                (C113 * C1359 + C32632 * C1360) * C32677) *
                   C32908) *
                  C32592 * C250) *
             C32566) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C32632 * C122) * C15053 +
            (C113 * C123 + C32632 * C136) * C15047 + C1056 * C15054 +
            C1057 * C32677) *
               C32945 +
           (C15056 + C15057 + C15058 + C15059) * C32938 + C15076 * C32925 +
           C15077 * C32908) *
              C354 -
          ((C3291 * C32677 + C3292 * C15054 + C626 * C15047 + C627 * C15053) *
               C32908 +
           (C1546 * C32677 + C1547 * C15054 + C628 * C15047 + C629 * C15053) *
               C32925 +
           (C1550 * C32677 + C1551 * C15054 + C630 * C15047 + C631 * C15053) *
               C32938 +
           (C1728 * C32677 + C1729 * C15054 +
            (C113 * C375 + C32632 * C391) * C15047 +
            (C113 * C361 + C32632 * C376) * C15053) *
               C32945) *
              C355 +
          (((C113 * C362 + C32632 * C377) * C15053 +
            (C113 * C378 + C32632 * C392) * C15047 +
            (C113 * C1178 + C32632 * C1190) * C15054 +
            (C113 * C1191 + C32632 * C1205) * C32677) *
               C32945 +
           ((C113 * C363 + C32632 * C379) * C15053 +
            (C113 * C380 + C32632 * C393) * C15047 +
            (C113 * C1180 + C32632 * C1194) * C15054 +
            (C113 * C1195 + C32632 * C1207) * C32677) *
               C32938 +
           ((C113 * C364 + C32632 * C381) * C15053 +
            (C113 * C382 + C32632 * C394) * C15047 +
            (C113 * C1182 + C32632 * C1198) * C15054 +
            (C113 * C1199 + C32632 * C1209) * C32677) *
               C32925 +
           ((C113 * C365 + C32632 * C383) * C15053 +
            (C113 * C384 + C32632 * C395) * C15047 +
            (C113 * C2296 + C32632 * C2297) * C15054 +
            (C113 * C2298 + C32632 * C2299) * C32677) *
               C32908) *
              C356) *
         C32578 * C32566) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C32632 * C122) * C15791 +
            (C113 * C123 + C32632 * C136) * C32946 + C1056 * C15792 +
            C1057 * C32942 + C1058 * C15793 + C1059 * C32932 + C1065 * C15794 +
            C1064 * C32914) *
               C15789 +
           (C15796 + C15797 + C15798 + C15799 + C15800 + C15801 + C15802 +
            C15803) *
               C32543) *
              C32592 * C32578 * C110 -
          ((C15804 + C15805 + C15806 + C15807 + C15808 + C15809 + C15810 +
            C15811) *
               C32543 +
           (C15803 + C15802 + C15801 + C15800 + C15799 + C15798 + C15797 +
            C15796) *
               C15789) *
              C32592 * C32578 * C111 +
          ((C15811 + C15810 + C15809 + C15808 + C15807 + C15806 + C15805 +
            C15804) *
               C15789 +
           (C168 * C15791 + C169 * C32946 + C507 * C15792 + C506 * C32942 +
            C891 * C15793 + C890 * C32932 +
            (C113 * C1357 + C32632 * C1358) * C15794 +
            (C113 * C1359 + C32632 * C1360) * C32914) *
               C32543) *
              C32592 * C32578 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C32632 * C122) * C15791 +
            (C113 * C123 + C32632 * C136) * C32946 + C1056 * C15792 +
            C1057 * C32942 + C1058 * C15793 + C1059 * C32932 + C1065 * C15794 +
            C1064 * C32914) *
               C15789 +
           (C15796 + C15797 + C15798 + C15799 + C15800 + C15801 + C15802 +
            C15803) *
               C32543) *
              C32592 * C248 -
          ((C6506 * C32914 + C6505 * C15794 + C1062 * C32932 + C1063 * C15793 +
            C886 * C32942 + C885 * C15792 + C510 * C32946 + C511 * C15791) *
               C32543 +
           (C6338 * C32914 + C6337 * C15794 + C1064 * C32932 + C1065 * C15793 +
            C1059 * C32942 + C1058 * C15792 + C1057 * C32946 + C1056 * C15791) *
               C15789) *
              C32592 * C249 +
          ((C1058 * C15791 + C1059 * C32946 + C1065 * C15792 + C1064 * C32942 +
            C6337 * C15793 + C6338 * C32932 + C6340 * C15794 + C6339 * C32914) *
               C15789 +
           (C885 * C15791 + C886 * C32946 + C1063 * C15792 + C1062 * C32942 +
            C6505 * C15793 + C6506 * C32932 +
            (C113 * C6496 + C32632 * C6497) * C15794 +
            (C113 * C6498 + C32632 * C6499) * C32914) *
               C32543) *
              C32592 * C250) *
         C32566) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C32632 * C122) * C15791 +
            (C113 * C123 + C32632 * C136) * C32946 + C1056 * C15792 +
            C1057 * C32942 + C1058 * C15793 + C1059 * C32932 + C1065 * C15794 +
            C1064 * C32914) *
               C15789 +
           (C15796 + C15797 + C15798 + C15799 + C15800 + C15801 + C15802 +
            C15803) *
               C32543) *
              C354 -
          ((C8193 * C32914 + C8194 * C15794 + C1548 * C32932 + C1549 * C15793 +
            C1550 * C32942 + C1551 * C15792 + C630 * C32946 + C631 * C15791) *
               C32543 +
           (C6689 * C32914 + C6690 * C15794 + C1726 * C32932 + C1727 * C15793 +
            C1728 * C32942 + C1729 * C15792 +
            (C113 * C375 + C32632 * C391) * C32946 +
            (C113 * C361 + C32632 * C376) * C15791) *
               C15789) *
              C355 +
          (((C113 * C362 + C32632 * C377) * C15791 +
            (C113 * C378 + C32632 * C392) * C32946 +
            (C113 * C1178 + C32632 * C1190) * C15792 +
            (C113 * C1191 + C32632 * C1205) * C32942 +
            (C113 * C1179 + C32632 * C1192) * C15793 +
            (C113 * C1193 + C32632 * C1206) * C32932 +
            (C113 * C6403 + C32632 * C6407) * C15794 +
            (C113 * C6408 + C32632 * C6412) * C32914) *
               C15789 +
           ((C113 * C363 + C32632 * C379) * C15791 +
            (C113 * C380 + C32632 * C393) * C32946 +
            (C113 * C1180 + C32632 * C1194) * C15792 +
            (C113 * C1195 + C32632 * C1207) * C32942 +
            (C113 * C1181 + C32632 * C1196) * C15793 +
            (C113 * C1197 + C32632 * C1208) * C32932 +
            (C113 * C7236 + C32632 * C7237) * C15794 +
            (C113 * C7238 + C32632 * C7239) * C32914) *
               C32543) *
              C356) *
         C32578 * C32566) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C1842 * C115 + C32940 * C122 + C1843 * C361 + C32929 * C376 +
             C1844 * C362 + C32907 * C377) *
                C15053 +
            (C1842 * C123 + C32940 * C136 + C1843 * C375 + C32929 * C391 +
             C1844 * C378 + C32907 * C392) *
                C15047 +
            (C6947 + C6948 + C6949) * C15054 +
            (C6950 + C6951 + C6952) * C32677) *
               C15789 +
           ((C1882 + C1883 + C1884) * C15053 +
            (C1885 + C1886 + C1887) * C15047 +
            (C2336 + C2335 + C2334) * C15054 +
            (C2333 + C2332 + C2331) * C32677) *
               C32543) *
              C32592 * C32578 * C110 -
          (((C2325 + C2326 + C2327) * C32677 +
            (C2328 + C2329 + C2330) * C15054 +
            (C1893 + C1892 + C1891) * C15047 +
            (C1890 + C1889 + C1888) * C15053) *
               C32543 +
           ((C2331 + C2332 + C2333) * C32677 +
            (C2334 + C2335 + C2336) * C15054 +
            (C1887 + C1886 + C1885) * C15047 +
            (C1884 + C1883 + C1882) * C15053) *
               C15789) *
              C32592 * C32578 * C111 +
          ((C1902 * C15053 + C1903 * C15047 + (C2330 + C2329 + C2328) * C15054 +
            (C2327 + C2326 + C2325) * C32677) *
               C15789 +
           ((C1899 + C1898 + C1897) * C15053 +
            (C1896 + C1895 + C1894) * C15047 +
            (C1842 * C253 + C32940 * C265 + C1843 * C724 + C32929 * C732 +
             C1844 * C2296 + C32907 * C2297) *
                C15054 +
            (C1842 * C264 + C32940 * C283 + C1843 * C733 + C32929 * C739 +
             C1844 * C2298 + C32907 * C2299) *
                C32677) *
               C32543) *
              C32592 * C32578 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C1842 * C115 + C32940 * C122 + C1843 * C361 + C32929 * C376 +
             C1844 * C362 + C32907 * C377) *
                C15053 +
            (C1842 * C123 + C32940 * C136 + C1843 * C375 + C32929 * C391 +
             C1844 * C378 + C32907 * C392) *
                C15047 +
            (C6947 + C6948 + C6949) * C15054 +
            (C6950 + C6951 + C6952) * C32677) *
               C15789 +
           ((C1882 + C1883 + C1884) * C15053 +
            (C1885 + C1886 + C1887) * C15047 +
            (C2336 + C2335 + C2334) * C15054 +
            (C2333 + C2332 + C2331) * C32677) *
               C32543) *
              C32592 * C248 -
          (((C7258 + C7257 + C7256) * C32677 +
            (C7255 + C7254 + C7253) * C15054 +
            (C2331 + C2332 + C2333) * C15047 +
            (C2334 + C2335 + C2336) * C15053) *
               C32543 +
           ((C6958 + C6957 + C6956) * C32677 +
            (C6955 + C6954 + C6953) * C15054 +
            (C6952 + C6951 + C6950) * C15047 +
            (C6949 + C6948 + C6947) * C15053) *
               C15789) *
              C32592 * C249 +
          ((C6967 * C15053 + C6968 * C15047 + (C6964 + C6963 + C6962) * C15054 +
            (C6961 + C6960 + C6959) * C32677) *
               C15789 +
           ((C7253 + C7254 + C7255) * C15053 +
            (C7256 + C7257 + C7258) * C15047 +
            (C1842 * C1012 + C32940 * C1020 + C1843 * C1706 + C32929 * C1710 +
             C1844 * C7236 + C32907 * C7237) *
                C15054 +
            (C1842 * C1019 + C32940 * C1030 + C1843 * C1711 + C32929 * C1715 +
             C1844 * C7238 + C32907 * C7239) *
                C32677) *
               C32543) *
              C32592 * C250) *
         C32566) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C1842 * C115 + C32940 * C122 + C1843 * C361 + C32929 * C376 +
             C1844 * C362 + C32907 * C377) *
                C15053 +
            (C1842 * C123 + C32940 * C136 + C1843 * C375 + C32929 * C391 +
             C1844 * C378 + C32907 * C392) *
                C15047 +
            (C6947 + C6948 + C6949) * C15054 +
            (C6950 + C6951 + C6952) * C32677) *
               C15789 +
           ((C1882 + C1883 + C1884) * C15053 +
            (C1885 + C1886 + C1887) * C15047 +
            (C2336 + C2335 + C2334) * C15054 +
            (C2333 + C2332 + C2331) * C32677) *
               C32543) *
              C354 -
          (((C1844 * C2674 + C32907 * C2678 + C1843 * C1195 + C32929 * C1207 +
             C1842 * C729 + C32940 * C737) *
                C32677 +
            (C1844 * C2669 + C32907 * C2673 + C1843 * C1180 + C32929 * C1194 +
             C1842 * C722 + C32940 * C728) *
                C15054 +
            (C2517 + C2518 + C2519) * C15047 +
            (C2520 + C2521 + C2522) * C15053) *
               C32543 +
           ((C7589 + C7590 + C7591) * C32677 +
            (C7592 + C7593 + C7594) * C15054 +
            (C1844 * C2136 + C32907 * C2146 + C1843 * C378 + C32929 * C392 +
             C1842 * C375 + C32940 * C391) *
                C15047 +
            (C1844 * C2128 + C32907 * C2137 + C1843 * C362 + C32929 * C377 +
             C1842 * C361 + C32940 * C376) *
                C15053) *
               C15789) *
              C355 +
          (((C1842 * C362 + C32940 * C377 + C1843 * C2128 + C32929 * C2137 +
             C1844 * C2129 + C32907 * C2138) *
                C15053 +
            (C1842 * C378 + C32940 * C392 + C1843 * C2136 + C32929 * C2146 +
             C1844 * C2139 + C32907 * C2147) *
                C15047 +
            (C1842 * C1178 + C32940 * C1190 + C1843 * C2668 + C32929 * C2671 +
             C1844 * C7079 + C32907 * C7083) *
                C15054 +
            (C1842 * C1191 + C32940 * C1205 + C1843 * C2672 + C32929 * C2677 +
             C1844 * C7084 + C32907 * C7088) *
                C32677) *
               C15789 +
           ((C1842 * C363 + C32940 * C379 + C1843 * C2127 + C32929 * C2135 +
             C1844 * C2130 + C32907 * C2140) *
                C15053 +
            (C1842 * C380 + C32940 * C393 + C1843 * C2134 + C32929 * C2145 +
             C1844 * C2141 + C32907 * C2148) *
                C15047 +
            (C1842 * C1180 + C32940 * C1194 + C1843 * C2669 + C32929 * C2673 +
             C1844 * C12183 + C32907 * C12184) *
                C15054 +
            (C1842 * C1195 + C32940 * C1207 + C1843 * C2674 + C32929 * C2678 +
             C1844 * C12185 + C32907 * C12186) *
                C32677) *
               C32543) *
              C356) *
         C32578 * C32566) /
            (p * q * std::sqrt(p + q));
    d2ee[13] += (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((((C113 * C115 + C32632 * C122) * C15791 +
                     (C113 * C123 + C32632 * C136) * C32946 + C1056 * C15792 +
                     C1057 * C32942 + C1058 * C15793 + C1059 * C32932 +
                     C1065 * C15794 + C1064 * C32914) *
                        C15789 +
                    (C15796 + C15797 + C15798 + C15799 + C15800 + C15801 +
                     C15802 + C15803) *
                        C32543) *
                       C601 -
                   ((C16276 + C16277 + C16278 + C16279 + C16280 + C16281 +
                     C16282 + C16283) *
                        C32543 +
                    (C6689 * C32914 + C6690 * C15794 + C1726 * C32932 +
                     C1727 * C15793 + C1728 * C32942 + C1729 * C15792 +
                     (C113 * C375 + C32632 * C391) * C32946 +
                     (C113 * C361 + C32632 * C376) * C15791) *
                        C15789) *
                       C602) *
                      C32578 * C481 +
                  (((C16283 + C16282 + C16281 + C16280 + C16279 + C16278 +
                     C16277 + C16276) *
                        C15789 +
                    (C629 * C15791 + C628 * C32946 + C1547 * C15792 +
                     C1546 * C32942 + C1545 * C15793 + C1544 * C32932 +
                     (C113 * C1707 + C32632 * C1712) * C15794 +
                     (C113 * C1713 + C32632 * C1716) * C32914) *
                        C32543) *
                       C602 -
                   ((C15804 + C15805 + C15806 + C15807 + C15808 + C15809 +
                     C15810 + C15811) *
                        C32543 +
                    (C15803 + C15802 + C15801 + C15800 + C15799 + C15798 +
                     C15797 + C15796) *
                        C15789) *
                       C601) *
                      C32578 * C482)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((((C113 * C115 + C32632 * C122) * C15053 +
                     (C113 * C123 + C32632 * C136) * C15047 + C1056 * C15054 +
                     C1057 * C32677) *
                        C32945 +
                    (C15056 + C15057 + C15058 + C15059) * C32938 +
                    C15076 * C32925 + C15077 * C32908) *
                       C601 -
                   ((C15546 + C15547 + C15548 + C15549) * C32908 +
                    (C15550 + C15551 + C15552 + C15553) * C32925 +
                    (C15554 + C15555 + C15556 + C15557) * C32938 +
                    (C1728 * C32677 + C1729 * C15054 +
                     (C113 * C375 + C32632 * C391) * C15047 +
                     (C113 * C361 + C32632 * C376) * C15053) *
                        C32945) *
                       C602) *
                      C32578 * C481 +
                  (((C15557 + C15556 + C15555 + C15554) * C32945 +
                    (C15553 + C15552 + C15551 + C15550) * C32938 +
                    (C15549 + C15548 + C15547 + C15546) * C32925 +
                    (C625 * C15053 + C624 * C15047 +
                     (C113 * C725 + C32632 * C734) * C15054 +
                     (C113 * C735 + C32632 * C740) * C32677) *
                        C32908) *
                       C602 -
                   ((C15068 + C15069 + C15070 + C15071) * C32908 +
                    (C15067 + C15066 + C15065 + C15064) * C32925 +
                    (C15063 + C15062 + C15061 + C15060) * C32938 +
                    (C15059 + C15058 + C15057 + C15056) * C32945) *
                       C601) *
                      C32578 * C482)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C1842 * C115 + C32940 * C122 + C1843 * C361 +
                      C32929 * C376 + C1844 * C362 + C32907 * C377) *
                         C15053 +
                     (C1842 * C123 + C32940 * C136 + C1843 * C375 +
                      C32929 * C391 + C1844 * C378 + C32907 * C392) *
                         C15047 +
                     (C6947 + C6948 + C6949) * C15054 +
                     (C6950 + C6951 + C6952) * C32677) *
                        C15789 +
                    ((C1882 + C1883 + C1884) * C15053 +
                     (C1885 + C1886 + C1887) * C15047 + C17050 * C15054 +
                     C17051 * C32677) *
                        C32543) *
                       C601 -
                   (((C17260 + C17261 + C17262) * C32677 +
                     (C17263 + C17264 + C17265) * C15054 +
                     (C2517 + C2518 + C2519) * C15047 +
                     (C2520 + C2521 + C2522) * C15053) *
                        C32543 +
                    ((C7589 + C7590 + C7591) * C32677 +
                     (C7592 + C7593 + C7594) * C15054 +
                     (C1844 * C2136 + C32907 * C2146 + C1843 * C378 +
                      C32929 * C392 + C1842 * C375 + C32940 * C391) *
                         C15047 +
                     (C1844 * C2128 + C32907 * C2137 + C1843 * C362 +
                      C32929 * C377 + C1842 * C361 + C32940 * C376) *
                         C15053) *
                        C15789) *
                       C602) *
                      C32578 * C481 +
                  ((((C2522 + C2521 + C2520) * C15053 +
                     (C2519 + C2518 + C2517) * C15047 +
                     (C17265 + C17264 + C17263) * C15054 +
                     (C17262 + C17261 + C17260) * C32677) *
                        C15789 +
                    ((C2516 + C2515 + C2514) * C15053 +
                     (C2513 + C2512 + C2511) * C15047 +
                     (C1842 * C723 + C32940 * C730 + C1843 * C1182 +
                      C32929 * C1198 + C1844 * C2670 + C32907 * C2675) *
                         C15054 +
                     (C1842 * C731 + C32940 * C738 + C1843 * C1199 +
                      C32929 * C1209 + C1844 * C2676 + C32907 * C2679) *
                         C32677) *
                        C32543) *
                       C602 -
                   (((C2325 + C2326 + C2327) * C32677 +
                     (C2328 + C2329 + C2330) * C15054 +
                     (C1893 + C1892 + C1891) * C15047 +
                     (C1890 + C1889 + C1888) * C15053) *
                        C32543 +
                    (C17052 * C32677 + C17053 * C15054 +
                     (C1887 + C1886 + C1885) * C15047 +
                     (C1884 + C1883 + C1882) * C15053) *
                        C15789) *
                       C601) *
                      C32578 * C482)) /
                    (p * q * std::sqrt(p + q));
    d2ee[14] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C32632 * C122) * C15053 +
            (C113 * C123 + C32632 * C136) * C15047 + C1056 * C15054 +
            C1057 * C32677) *
               C32945 +
           (C15056 + C15057 + C15058 + C15059) * C32938 + C15076 * C32925 +
           C15077 * C32908) *
              C32592 * C248 -
          ((C890 * C32677 + C891 * C15054 + C506 * C15047 + C507 * C15053) *
               C32908 +
           (C889 * C32677 + C888 * C15054 + C508 * C15047 + C509 * C15053) *
               C32925 +
           (C886 * C32677 + C885 * C15054 + C510 * C15047 + C511 * C15053) *
               C32938 +
           (C1059 * C32677 + C1058 * C15054 + C1057 * C15047 + C1056 * C15053) *
               C32945) *
              C32592 * C249 +
          ((C1058 * C15053 + C1059 * C15047 + C1065 * C15054 + C1064 * C32677) *
               C32945 +
           (C885 * C15053 + C886 * C15047 + C1063 * C15054 + C1062 * C32677) *
               C32938 +
           (C888 * C15053 + C889 * C15047 + C1061 * C15054 + C1060 * C32677) *
               C32925 +
           (C891 * C15053 + C890 * C15047 +
            (C113 * C1357 + C32632 * C1358) * C15054 +
            (C113 * C1359 + C32632 * C1360) * C32677) *
               C32908) *
              C32592 * C250) *
         C32566) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C32632 * C122) * C15053 +
            (C113 * C123 + C32632 * C136) * C15047 + C1056 * C15054 +
            C1057 * C32677) *
               C32945 +
           (C15056 + C15057 + C15058 + C15059) * C32938 + C15076 * C32925 +
           C15077 * C32908) *
              C32592 * C32578 * C110 -
          ((C15068 + C15069 + C15070 + C15071) * C32908 +
           (C15067 + C15066 + C15065 + C15064) * C32925 +
           (C15063 + C15062 + C15061 + C15060) * C32938 +
           (C15059 + C15058 + C15057 + C15056) * C32945) *
              C32592 * C32578 * C111 +
          (C15076 * C32945 + C15077 * C32938 +
           (C15071 + C15070 + C15069 + C15068) * C32925 +
           (C173 * C15053 + C172 * C15047 +
            (C113 * C483 + C32632 * C484) * C15054 +
            (C113 * C485 + C32632 * C486) * C32677) *
               C32908) *
              C32592 * C32578 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C32632 * C122) * C15791 +
            (C113 * C123 + C32632 * C136) * C32946 + C1056 * C15792 +
            C1057 * C32942 + C1058 * C15793 + C1059 * C32932 + C1065 * C15794 +
            C1064 * C32914) *
               C15789 +
           (C15796 + C15797 + C15798 + C15799 + C15800 + C15801 + C15802 +
            C15803) *
               C32543) *
              C32592 * C32578 * C110 -
          ((C15804 + C15805 + C15806 + C15807 + C15808 + C15809 + C15810 +
            C15811) *
               C32543 +
           (C15803 + C15802 + C15801 + C15800 + C15799 + C15798 + C15797 +
            C15796) *
               C15789) *
              C32592 * C32578 * C111 +
          ((C15811 + C15810 + C15809 + C15808 + C15807 + C15806 + C15805 +
            C15804) *
               C15789 +
           (C168 * C15791 + C169 * C32946 + C507 * C15792 + C506 * C32942 +
            C891 * C15793 + C890 * C32932 +
            (C113 * C1357 + C32632 * C1358) * C15794 +
            (C113 * C1359 + C32632 * C1360) * C32914) *
               C32543) *
              C32592 * C32578 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C32632 * C122) * C15791 +
            (C113 * C123 + C32632 * C136) * C32946 + C1056 * C15792 +
            C1057 * C32942 + C1058 * C15793 + C1059 * C32932 + C1065 * C15794 +
            C1064 * C32914) *
               C15789 +
           (C15796 + C15797 + C15798 + C15799 + C15800 + C15801 + C15802 +
            C15803) *
               C32543) *
              C32592 * C248 -
          ((C6506 * C32914 + C6505 * C15794 + C1062 * C32932 + C1063 * C15793 +
            C886 * C32942 + C885 * C15792 + C510 * C32946 + C511 * C15791) *
               C32543 +
           (C6338 * C32914 + C6337 * C15794 + C1064 * C32932 + C1065 * C15793 +
            C1059 * C32942 + C1058 * C15792 + C1057 * C32946 + C1056 * C15791) *
               C15789) *
              C32592 * C249 +
          ((C1058 * C15791 + C1059 * C32946 + C1065 * C15792 + C1064 * C32942 +
            C6337 * C15793 + C6338 * C32932 + C6340 * C15794 + C6339 * C32914) *
               C15789 +
           (C885 * C15791 + C886 * C32946 + C1063 * C15792 + C1062 * C32942 +
            C6505 * C15793 + C6506 * C32932 +
            (C113 * C6496 + C32632 * C6497) * C15794 +
            (C113 * C6498 + C32632 * C6499) * C32914) *
               C32543) *
              C32592 * C250) *
         C32566) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C1842 * C115 + C32940 * C122 + C1843 * C361 + C32929 * C376 +
             C1844 * C362 + C32907 * C377) *
                C15053 +
            (C1842 * C123 + C32940 * C136 + C1843 * C375 + C32929 * C391 +
             C1844 * C378 + C32907 * C392) *
                C15047 +
            (C6947 + C6948 + C6949) * C15054 +
            (C6950 + C6951 + C6952) * C32677) *
               C15789 +
           ((C1882 + C1883 + C1884) * C15053 +
            (C1885 + C1886 + C1887) * C15047 +
            (C2336 + C2335 + C2334) * C15054 +
            (C2333 + C2332 + C2331) * C32677) *
               C32543) *
              C32592 * C32578 * C110 -
          (((C2325 + C2326 + C2327) * C32677 +
            (C2328 + C2329 + C2330) * C15054 +
            (C1893 + C1892 + C1891) * C15047 +
            (C1890 + C1889 + C1888) * C15053) *
               C32543 +
           ((C2331 + C2332 + C2333) * C32677 +
            (C2334 + C2335 + C2336) * C15054 +
            (C1887 + C1886 + C1885) * C15047 +
            (C1884 + C1883 + C1882) * C15053) *
               C15789) *
              C32592 * C32578 * C111 +
          ((C1902 * C15053 + C1903 * C15047 + (C2330 + C2329 + C2328) * C15054 +
            (C2327 + C2326 + C2325) * C32677) *
               C15789 +
           ((C1899 + C1898 + C1897) * C15053 +
            (C1896 + C1895 + C1894) * C15047 +
            (C1842 * C253 + C32940 * C265 + C1843 * C724 + C32929 * C732 +
             C1844 * C2296 + C32907 * C2297) *
                C15054 +
            (C1842 * C264 + C32940 * C283 + C1843 * C733 + C32929 * C739 +
             C1844 * C2298 + C32907 * C2299) *
                C32677) *
               C32543) *
              C32592 * C32578 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C1842 * C115 + C32940 * C122 + C1843 * C361 + C32929 * C376 +
             C1844 * C362 + C32907 * C377) *
                C15053 +
            (C1842 * C123 + C32940 * C136 + C1843 * C375 + C32929 * C391 +
             C1844 * C378 + C32907 * C392) *
                C15047 +
            (C6947 + C6948 + C6949) * C15054 +
            (C6950 + C6951 + C6952) * C32677) *
               C15789 +
           ((C1882 + C1883 + C1884) * C15053 +
            (C1885 + C1886 + C1887) * C15047 +
            (C2336 + C2335 + C2334) * C15054 +
            (C2333 + C2332 + C2331) * C32677) *
               C32543) *
              C32592 * C248 -
          (((C7258 + C7257 + C7256) * C32677 +
            (C7255 + C7254 + C7253) * C15054 +
            (C2331 + C2332 + C2333) * C15047 +
            (C2334 + C2335 + C2336) * C15053) *
               C32543 +
           ((C6958 + C6957 + C6956) * C32677 +
            (C6955 + C6954 + C6953) * C15054 +
            (C6952 + C6951 + C6950) * C15047 +
            (C6949 + C6948 + C6947) * C15053) *
               C15789) *
              C32592 * C249 +
          ((C6967 * C15053 + C6968 * C15047 + (C6964 + C6963 + C6962) * C15054 +
            (C6961 + C6960 + C6959) * C32677) *
               C15789 +
           ((C7253 + C7254 + C7255) * C15053 +
            (C7256 + C7257 + C7258) * C15047 +
            (C1842 * C1012 + C32940 * C1020 + C1843 * C1706 + C32929 * C1710 +
             C1844 * C7236 + C32907 * C7237) *
                C15054 +
            (C1842 * C1019 + C32940 * C1030 + C1843 * C1711 + C32929 * C1715 +
             C1844 * C7238 + C32907 * C7239) *
                C32677) *
               C32543) *
              C32592 * C250) *
         C32566) /
            (p * q * std::sqrt(p + q));
    d2ee[15] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C3524 * C115 + C32874 * C122 + C3525 * C361 + C32719 * C376) *
                 C15053 +
             (C3524 * C123 + C32874 * C136 + C3525 * C375 + C32719 * C391) *
                 C15047 +
             (C4576 + C4577) * C15054 + (C4578 + C4579) * C32677) *
                C32538 +
            ((C3559 + C3560) * C15053 + (C3561 + C3562) * C15047 +
             C4932 * C15054 + C4933 * C32677) *
                C32546 +
            C18436 * C17574) *
               C32592 * C479 -
           (((C4580 + C4581) * C32677 + (C4582 + C4583) * C15054 +
             C4934 * C15047 + C4935 * C15053) *
                C17574 +
            (C8987 * C32677 + C8988 * C15054 + C4936 * C15047 +
             C4937 * C15053) *
                C32546 +
            ((C4588 + C4589) * C32677 + (C4590 + C4591) * C15054 +
             (C4579 + C4578) * C15047 + (C4577 + C4576) * C15053) *
                C32538) *
               C32592 * C480) *
              C481 +
          (((C4932 * C15053 + C4933 * C15047 + C8621 * C15054 +
             C8622 * C32677) *
                C32538 +
            (C4391 * C15053 + C4392 * C15047 + (C4583 + C4582) * C15054 +
             (C4581 + C4580) * C32677) *
                C32546 +
            ((C3938 + C3937) * C15053 + (C3936 + C3935) * C15047 +
             (C3524 * C260 + C32874 * C278 + C3525 * C1519 + C32719 * C1520) *
                 C15054 +
             (C3524 * C279 + C32874 * C290 + C3525 * C1521 + C32719 * C1522) *
                 C32677) *
                C17574) *
               C32592 * C480 -
           (((C3935 + C3936) * C32677 + (C3937 + C3938) * C15054 +
             (C3570 + C3569) * C15047 + (C3568 + C3567) * C15053) *
                C17574 +
            (C4934 * C32677 + C4935 * C15054 + (C3566 + C3565) * C15047 +
             (C3564 + C3563) * C15053) *
                C32546 +
            (C4936 * C32677 + C4937 * C15054 + (C3562 + C3561) * C15047 +
             (C3560 + C3559) * C15053) *
                C32538) *
               C32592 * C479) *
              C482)) /
        (p * q * std::sqrt(p + q));
    d2ee[16] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C3524 * C115 + C32874 * C122 + C3525 * C361 + C32719 * C376) *
                 C15053 +
             (C3524 * C123 + C32874 * C136 + C3525 * C375 + C32719 * C391) *
                 C15047 +
             (C4576 + C4577) * C15054 + (C4578 + C4579) * C32677) *
                C32538 +
            ((C3559 + C3560) * C15053 + (C3561 + C3562) * C15047 +
             C4932 * C15054 + C4933 * C32677) *
                C32546 +
            C18436 * C17574) *
               C601 -
           (((C5148 + C5149) * C32677 + (C5150 + C5151) * C15054 +
             (C4105 + C4106) * C15047 + (C4107 + C4108) * C15053) *
                C17574 +
            ((C5152 + C5153) * C32677 + (C5154 + C5155) * C15054 +
             (C4109 + C4110) * C15047 + (C4111 + C4112) * C15053) *
                C32546 +
            ((C5358 + C5359) * C32677 + (C5360 + C5361) * C15054 +
             (C3525 * C378 + C32719 * C392 + C3524 * C375 + C32874 * C391) *
                 C15047 +
             (C3525 * C362 + C32719 * C377 + C3524 * C361 + C32874 * C376) *
                 C15053) *
                C32538) *
               C602) *
              C479 +
          ((((C5361 + C5360) * C15053 + (C5359 + C5358) * C15047 +
             (C9400 + C9399) * C15054 + (C9398 + C9397) * C32677) *
                C32538 +
            ((C5155 + C5154) * C15053 + (C5153 + C5152) * C15047 +
             (C9194 + C9193) * C15054 + (C9192 + C9191) * C32677) *
                C32546 +
            ((C5151 + C5150) * C15053 + (C5149 + C5148) * C15047 +
             (C3524 * C1175 + C32874 * C1185 + C3525 * C1183 + C32719 * C1200) *
                 C15054 +
             (C3524 * C1184 + C32874 * C1202 + C3525 * C1201 + C32719 * C1210) *
                 C32677) *
                C17574) *
               C602 -
           (((C4580 + C4581) * C32677 + (C4582 + C4583) * C15054 +
             C4934 * C15047 + C4935 * C15053) *
                C17574 +
            (C8987 * C32677 + C8988 * C15054 + C4936 * C15047 +
             C4937 * C15053) *
                C32546 +
            ((C4588 + C4589) * C32677 + (C4590 + C4591) * C15054 +
             (C4579 + C4578) * C15047 + (C4577 + C4576) * C15053) *
                C32538) *
               C601) *
              C480) *
         C32566) /
        (p * q * std::sqrt(p + q));
    d2ee[17] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C3524 * C115 + C32874 * C122 + C3525 * C361 + C32719 * C376) *
                C15053 +
            (C3524 * C123 + C32874 * C136 + C3525 * C375 + C32719 * C391) *
                C15047 +
            (C4576 + C4577) * C15054 + (C4578 + C4579) * C32677) *
               C32538 +
           ((C3559 + C3560) * C15053 + (C3561 + C3562) * C15047 +
            C4932 * C15054 + C4933 * C32677) *
               C32546 +
           C18436 * C17574) *
              C32592 * C248 -
          (((C4580 + C4581) * C32677 + (C4582 + C4583) * C15054 +
            C4934 * C15047 + C4935 * C15053) *
               C17574 +
           (C8987 * C32677 + C8988 * C15054 + C4936 * C15047 + C4937 * C15053) *
               C32546 +
           ((C4588 + C4589) * C32677 + (C4590 + C4591) * C15054 +
            (C4579 + C4578) * C15047 + (C4577 + C4576) * C15053) *
               C32538) *
              C32592 * C249 +
          ((C8619 * C15053 + C8620 * C15047 + C9597 * C15054 + C9598 * C32677) *
               C32538 +
           (C8621 * C15053 + C8622 * C15047 + (C8642 + C8641) * C15054 +
            (C8640 + C8639) * C32677) *
               C32546 +
           ((C4583 + C4582) * C15053 + (C4581 + C4580) * C15047 +
            (C3524 * C1011 + C32874 * C1018 + C3525 * C1707 + C32719 * C1712) *
                C15054 +
            (C3524 * C1017 + C32874 * C1029 + C3525 * C1713 + C32719 * C1716) *
                C32677) *
               C17574) *
              C32592 * C250) *
         C32566) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C3524 * C115 + C32874 * C122 + C3525 * C361 + C32719 * C376) *
                C15053 +
            (C3524 * C123 + C32874 * C136 + C3525 * C375 + C32719 * C391) *
                C15047 +
            (C4576 + C4577) * C15054 + (C4578 + C4579) * C32677) *
               C32538 +
           ((C3559 + C3560) * C15053 + (C3561 + C3562) * C15047 +
            C4932 * C15054 + C4933 * C32677) *
               C32546 +
           C18436 * C17574) *
              C32592 * C32578 * C110 -
          (((C3935 + C3936) * C32677 + (C3937 + C3938) * C15054 +
            (C3570 + C3569) * C15047 + (C3568 + C3567) * C15053) *
               C17574 +
           (C4934 * C32677 + C4935 * C15054 + (C3566 + C3565) * C15047 +
            (C3564 + C3563) * C15053) *
               C32546 +
           (C4936 * C32677 + C4937 * C15054 + (C3562 + C3561) * C15047 +
            (C3560 + C3559) * C15053) *
               C32538) *
              C32592 * C32578 * C111 +
          (C18436 * C32538 +
           (C3577 * C15053 + C3578 * C15047 + (C3938 + C3937) * C15054 +
            (C3936 + C3935) * C32677) *
               C32546 +
           ((C3574 + C3573) * C15053 + (C3572 + C3571) * C15047 +
            (C3524 * C252 + C32874 * C263 + C3525 * C725 + C32719 * C734) *
                C15054 +
            (C3524 * C262 + C32874 * C282 + C3525 * C735 + C32719 * C740) *
                C32677) *
               C17574) *
              C32592 * C32578 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C3524 * C115 + C32874 * C122 + C3525 * C361 + C32719 * C376) *
                C15053 +
            (C3524 * C123 + C32874 * C136 + C3525 * C375 + C32719 * C391) *
                C15047 +
            (C4576 + C4577) * C15054 + (C4578 + C4579) * C32677) *
               C32538 +
           ((C3559 + C3560) * C15053 + (C3561 + C3562) * C15047 +
            C4932 * C15054 + C4933 * C32677) *
               C32546 +
           C18436 * C17574) *
              C354 -
          (((C5148 + C5149) * C32677 + (C5150 + C5151) * C15054 +
            (C4105 + C4106) * C15047 + (C4107 + C4108) * C15053) *
               C17574 +
           ((C5152 + C5153) * C32677 + (C5154 + C5155) * C15054 +
            (C4109 + C4110) * C15047 + (C4111 + C4112) * C15053) *
               C32546 +
           ((C5358 + C5359) * C32677 + (C5360 + C5361) * C15054 +
            (C3525 * C378 + C32719 * C392 + C3524 * C375 + C32874 * C391) *
                C15047 +
            (C3525 * C362 + C32719 * C377 + C3524 * C361 + C32874 * C376) *
                C15053) *
               C32538) *
              C355 +
          (((C3524 * C362 + C32874 * C377 + C3525 * C2128 + C32719 * C2137) *
                C15053 +
            (C3524 * C378 + C32874 * C392 + C3525 * C2136 + C32719 * C2146) *
                C15047 +
            (C3524 * C1178 + C32874 * C1190 + C3525 * C2668 + C32719 * C2671) *
                C15054 +
            (C3524 * C1191 + C32874 * C1205 + C3525 * C2672 + C32719 * C2677) *
                C32677) *
               C32538 +
           ((C3524 * C363 + C32874 * C379 + C3525 * C2127 + C32719 * C2135) *
                C15053 +
            (C3524 * C380 + C32874 * C393 + C3525 * C2134 + C32719 * C2145) *
                C15047 +
            (C3524 * C1180 + C32874 * C1194 + C3525 * C2669 + C32719 * C2673) *
                C15054 +
            (C3524 * C1195 + C32874 * C1207 + C3525 * C2674 + C32719 * C2678) *
                C32677) *
               C32546 +
           ((C3524 * C364 + C32874 * C381 + C3525 * C2126 + C32719 * C2133) *
                C15053 +
            (C3524 * C382 + C32874 * C394 + C3525 * C2132 + C32719 * C2144) *
                C15047 +
            (C3524 * C1182 + C32874 * C1198 + C3525 * C2670 + C32719 * C2675) *
                C15054 +
            (C3524 * C1199 + C32874 * C1209 + C3525 * C2676 + C32719 * C2679) *
                C32677) *
               C17574) *
              C356) *
         C32578 * C32566) /
            (p * q * std::sqrt(p + q));
    d2ee[18] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C3524 * C115 + C32874 * C122 + C3525 * C361 + C32719 * C376) *
                 C15053 +
             (C3524 * C123 + C32874 * C136 + C3525 * C375 + C32719 * C391) *
                 C15047 +
             (C4576 + C4577) * C15054 + (C4578 + C4579) * C32677) *
                C32538 +
            ((C3559 + C3560) * C15053 + (C3561 + C3562) * C15047 +
             C4932 * C15054 + C4933 * C32677) *
                C32546 +
            C18436 * C17574) *
               C601 -
           (((C5148 + C5149) * C32677 + (C5150 + C5151) * C15054 +
             (C4105 + C4106) * C15047 + (C4107 + C4108) * C15053) *
                C17574 +
            ((C5152 + C5153) * C32677 + (C5154 + C5155) * C15054 +
             (C4109 + C4110) * C15047 + (C4111 + C4112) * C15053) *
                C32546 +
            ((C5358 + C5359) * C32677 + (C5360 + C5361) * C15054 +
             (C3525 * C378 + C32719 * C392 + C3524 * C375 + C32874 * C391) *
                 C15047 +
             (C3525 * C362 + C32719 * C377 + C3524 * C361 + C32874 * C376) *
                 C15053) *
                C32538) *
               C602) *
              C32578 * C481 +
          ((((C4112 + C4111) * C15053 + (C4110 + C4109) * C15047 +
             (C5155 + C5154) * C15054 + (C5153 + C5152) * C32677) *
                C32538 +
            ((C4108 + C4107) * C15053 + (C4106 + C4105) * C15047 +
             (C5151 + C5150) * C15054 + (C5149 + C5148) * C32677) *
                C32546 +
            ((C4104 + C4103) * C15053 + (C4102 + C4101) * C15047 +
             (C3524 * C724 + C32874 * C732 + C3525 * C2296 + C32719 * C2297) *
                 C15054 +
             (C3524 * C733 + C32874 * C739 + C3525 * C2298 + C32719 * C2299) *
                 C32677) *
                C17574) *
               C602 -
           (((C3935 + C3936) * C32677 + (C3937 + C3938) * C15054 +
             (C3570 + C3569) * C15047 + (C3568 + C3567) * C15053) *
                C17574 +
            (C4934 * C32677 + C4935 * C15054 + (C3566 + C3565) * C15047 +
             (C3564 + C3563) * C15053) *
                C32546 +
            (C4936 * C32677 + C4937 * C15054 + (C3562 + C3561) * C15047 +
             (C3560 + C3559) * C15053) *
                C32538) *
               C601) *
              C32578 * C482)) /
        (p * q * std::sqrt(p + q));
    d2ee[19] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C3524 * C115 + C32874 * C122 + C3525 * C361 + C32719 * C376) *
                C15053 +
            (C3524 * C123 + C32874 * C136 + C3525 * C375 + C32719 * C391) *
                C15047 +
            (C4576 + C4577) * C15054 + (C4578 + C4579) * C32677) *
               C32538 +
           ((C3559 + C3560) * C15053 + (C3561 + C3562) * C15047 +
            C4932 * C15054 + C4933 * C32677) *
               C32546 +
           C18436 * C17574) *
              C32592 * C32578 * C110 -
          (((C3935 + C3936) * C32677 + (C3937 + C3938) * C15054 +
            (C3570 + C3569) * C15047 + (C3568 + C3567) * C15053) *
               C17574 +
           (C4934 * C32677 + C4935 * C15054 + (C3566 + C3565) * C15047 +
            (C3564 + C3563) * C15053) *
               C32546 +
           (C4936 * C32677 + C4937 * C15054 + (C3562 + C3561) * C15047 +
            (C3560 + C3559) * C15053) *
               C32538) *
              C32592 * C32578 * C111 +
          (C18436 * C32538 +
           (C3577 * C15053 + C3578 * C15047 + (C3938 + C3937) * C15054 +
            (C3936 + C3935) * C32677) *
               C32546 +
           ((C3574 + C3573) * C15053 + (C3572 + C3571) * C15047 +
            (C3524 * C252 + C32874 * C263 + C3525 * C725 + C32719 * C734) *
                C15054 +
            (C3524 * C262 + C32874 * C282 + C3525 * C735 + C32719 * C740) *
                C32677) *
               C17574) *
              C32592 * C32578 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C3524 * C115 + C32874 * C122 + C3525 * C361 + C32719 * C376) *
                C15053 +
            (C3524 * C123 + C32874 * C136 + C3525 * C375 + C32719 * C391) *
                C15047 +
            (C4576 + C4577) * C15054 + (C4578 + C4579) * C32677) *
               C32538 +
           ((C3559 + C3560) * C15053 + (C3561 + C3562) * C15047 +
            C4932 * C15054 + C4933 * C32677) *
               C32546 +
           C18436 * C17574) *
              C32592 * C248 -
          (((C4580 + C4581) * C32677 + (C4582 + C4583) * C15054 +
            C4934 * C15047 + C4935 * C15053) *
               C17574 +
           (C8987 * C32677 + C8988 * C15054 + C4936 * C15047 + C4937 * C15053) *
               C32546 +
           ((C4588 + C4589) * C32677 + (C4590 + C4591) * C15054 +
            (C4579 + C4578) * C15047 + (C4577 + C4576) * C15053) *
               C32538) *
              C32592 * C249 +
          ((C8619 * C15053 + C8620 * C15047 + C9597 * C15054 + C9598 * C32677) *
               C32538 +
           (C8621 * C15053 + C8622 * C15047 + (C8642 + C8641) * C15054 +
            (C8640 + C8639) * C32677) *
               C32546 +
           ((C4583 + C4582) * C15053 + (C4581 + C4580) * C15047 +
            (C3524 * C1011 + C32874 * C1018 + C3525 * C1707 + C32719 * C1712) *
                C15054 +
            (C3524 * C1017 + C32874 * C1029 + C3525 * C1713 + C32719 * C1716) *
                C32677) *
               C17574) *
              C32592 * C250) *
         C32566) /
            (p * q * std::sqrt(p + q));
    d2ee[20] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                 (((((C113 * C115 + C32632 * C122) * C15053 +
                     (C113 * C123 + C32632 * C136) * C15047 + C1056 * C15054 +
                     C1057 * C32677) *
                        C32945 +
                    (C15056 + C15057 + C15058 + C15059) * C32938 +
                    C15076 * C32925 + C15077 * C32908) *
                       C32592 * C479 -
                   ((C15404 + C15405 + C15406 + C15407) * C32908 +
                    (C15408 + C15409 + C15410 + C15411) * C32925 +
                    (C15412 + C15413 + C15414 + C15415) * C32938 +
                    (C1059 * C32677 + C1058 * C15054 + C1057 * C15047 +
                     C1056 * C15053) *
                        C32945) *
                       C32592 * C480) *
                      C481 +
                  (((C15415 + C15414 + C15413 + C15412) * C32945 +
                    (C15411 + C15410 + C15409 + C15408) * C32938 +
                    (C15407 + C15406 + C15405 + C15404) * C32925 +
                    (C505 * C15053 + C504 * C15047 +
                     (C113 * C261 + C32632 * C280) * C15054 +
                     (C113 * C281 + C32632 * C291) * C32677) *
                        C32908) *
                       C32592 * C480 -
                   ((C15068 + C15069 + C15070 + C15071) * C32908 +
                    (C15067 + C15066 + C15065 + C15064) * C32925 +
                    (C15063 + C15062 + C15061 + C15060) * C32938 +
                    (C15059 + C15058 + C15057 + C15056) * C32945) *
                       C32592 * C479) *
                      C482)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                 (((((C113 * C115 + C32632 * C122) * C15791 +
                     (C113 * C123 + C32632 * C136) * C32946 + C1056 * C15792 +
                     C1057 * C32942 + C1058 * C15793 + C1059 * C32932 +
                     C1065 * C15794 + C1064 * C32914) *
                        C15789 +
                    (C15796 + C15797 + C15798 + C15799 + C15800 + C15801 +
                     C15802 + C15803) *
                        C32543) *
                       C32592 * C479 -
                   ((C16138 + C16139 + C16140 + C16141 + C16142 + C16143 +
                     C16144 + C16145) *
                        C32543 +
                    (C6338 * C32914 + C6337 * C15794 + C1064 * C32932 +
                     C1065 * C15793 + C1059 * C32942 + C1058 * C15792 +
                     C1057 * C32946 + C1056 * C15791) *
                        C15789) *
                       C32592 * C480) *
                      C481 +
                  (((C16145 + C16144 + C16143 + C16142 + C16141 + C16140 +
                     C16139 + C16138) *
                        C15789 +
                    (C509 * C15791 + C508 * C32946 + C888 * C15792 +
                     C889 * C32942 + C1061 * C15793 + C1060 * C32932 +
                     (C113 * C1016 + C32632 * C1027) * C15794 +
                     (C113 * C1028 + C32632 * C1034) * C32914) *
                        C32543) *
                       C32592 * C480 -
                   ((C15804 + C15805 + C15806 + C15807 + C15808 + C15809 +
                     C15810 + C15811) *
                        C32543 +
                    (C15803 + C15802 + C15801 + C15800 + C15799 + C15798 +
                     C15797 + C15796) *
                        C15789) *
                       C32592 * C479) *
                      C482)) /
                    (p * q * std::sqrt(p + q));
    d2ee[21] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                 (((((C113 * C115 + C32632 * C122) * C15053 +
                     (C113 * C123 + C32632 * C136) * C15047 + C1056 * C15054 +
                     C1057 * C32677) *
                        C32945 +
                    (C15056 + C15057 + C15058 + C15059) * C32938 +
                    C15076 * C32925 + C15077 * C32908) *
                       C601 -
                   ((C15546 + C15547 + C15548 + C15549) * C32908 +
                    (C15550 + C15551 + C15552 + C15553) * C32925 +
                    (C15554 + C15555 + C15556 + C15557) * C32938 +
                    (C1728 * C32677 + C1729 * C15054 +
                     (C113 * C375 + C32632 * C391) * C15047 +
                     (C113 * C361 + C32632 * C376) * C15053) *
                        C32945) *
                       C602) *
                      C479 +
                  (((C1729 * C15053 + C1728 * C15047 + C1727 * C15054 +
                     C1726 * C32677) *
                        C32945 +
                    (C1551 * C15053 + C1550 * C15047 + C1549 * C15054 +
                     C1548 * C32677) *
                        C32938 +
                    (C1547 * C15053 + C1546 * C15047 + C1545 * C15054 +
                     C1544 * C32677) *
                        C32925 +
                    (C3292 * C15053 + C3291 * C15047 +
                     (C113 * C1519 + C32632 * C1520) * C15054 +
                     (C113 * C1521 + C32632 * C1522) * C32677) *
                        C32908) *
                       C602 -
                   ((C15404 + C15405 + C15406 + C15407) * C32908 +
                    (C15408 + C15409 + C15410 + C15411) * C32925 +
                    (C15412 + C15413 + C15414 + C15415) * C32938 +
                    (C1059 * C32677 + C1058 * C15054 + C1057 * C15047 +
                     C1056 * C15053) *
                        C32945) *
                       C601) *
                      C480) *
                 C32566) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                 (((((C113 * C115 + C32632 * C122) * C15791 +
                     (C113 * C123 + C32632 * C136) * C32946 + C1056 * C15792 +
                     C1057 * C32942 + C1058 * C15793 + C1059 * C32932 +
                     C1065 * C15794 + C1064 * C32914) *
                        C15789 +
                    (C15796 + C15797 + C15798 + C15799 + C15800 + C15801 +
                     C15802 + C15803) *
                        C32543) *
                       C601 -
                   ((C16276 + C16277 + C16278 + C16279 + C16280 + C16281 +
                     C16282 + C16283) *
                        C32543 +
                    (C6689 * C32914 + C6690 * C15794 + C1726 * C32932 +
                     C1727 * C15793 + C1728 * C32942 + C1729 * C15792 +
                     (C113 * C375 + C32632 * C391) * C32946 +
                     (C113 * C361 + C32632 * C376) * C15791) *
                        C15789) *
                       C602) *
                      C479 +
                  (((C1729 * C15791 + C1728 * C32946 + C1727 * C15792 +
                     C1726 * C32942 + C6690 * C15793 + C6689 * C32932 +
                     C6688 * C15794 + C6687 * C32914) *
                        C15789 +
                    (C1551 * C15791 + C1550 * C32946 + C1549 * C15792 +
                     C1548 * C32942 + C8194 * C15793 + C8193 * C32932 +
                     (C113 * C6588 + C32632 * C6589) * C15794 +
                     (C113 * C6590 + C32632 * C6591) * C32914) *
                        C32543) *
                       C602 -
                   ((C16138 + C16139 + C16140 + C16141 + C16142 + C16143 +
                     C16144 + C16145) *
                        C32543 +
                    (C6338 * C32914 + C6337 * C15794 + C1064 * C32932 +
                     C1065 * C15793 + C1059 * C32942 + C1058 * C15792 +
                     C1057 * C32946 + C1056 * C15791) *
                        C15789) *
                       C601) *
                      C480) *
                 C32566) /
                    (p * q * std::sqrt(p + q));
    d2ee[22] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C32632 * C122) * C15053 +
            (C113 * C123 + C32632 * C136) * C15047 + C1056 * C15054 +
            C1057 * C32677) *
               C32945 +
           (C15056 + C15057 + C15058 + C15059) * C32938 + C15076 * C32925 +
           C15077 * C32908) *
              C32592 * C248 -
          ((C890 * C32677 + C891 * C15054 + C506 * C15047 + C507 * C15053) *
               C32908 +
           (C889 * C32677 + C888 * C15054 + C508 * C15047 + C509 * C15053) *
               C32925 +
           (C886 * C32677 + C885 * C15054 + C510 * C15047 + C511 * C15053) *
               C32938 +
           (C1059 * C32677 + C1058 * C15054 + C1057 * C15047 + C1056 * C15053) *
               C32945) *
              C32592 * C249 +
          ((C1058 * C15053 + C1059 * C15047 + C1065 * C15054 + C1064 * C32677) *
               C32945 +
           (C885 * C15053 + C886 * C15047 + C1063 * C15054 + C1062 * C32677) *
               C32938 +
           (C888 * C15053 + C889 * C15047 + C1061 * C15054 + C1060 * C32677) *
               C32925 +
           (C891 * C15053 + C890 * C15047 +
            (C113 * C1357 + C32632 * C1358) * C15054 +
            (C113 * C1359 + C32632 * C1360) * C32677) *
               C32908) *
              C32592 * C250) *
         C32566) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C32632 * C122) * C15053 +
            (C113 * C123 + C32632 * C136) * C15047 + C1056 * C15054 +
            C1057 * C32677) *
               C32945 +
           (C15056 + C15057 + C15058 + C15059) * C32938 + C15076 * C32925 +
           C15077 * C32908) *
              C32592 * C32578 * C110 -
          ((C15068 + C15069 + C15070 + C15071) * C32908 +
           (C15067 + C15066 + C15065 + C15064) * C32925 +
           (C15063 + C15062 + C15061 + C15060) * C32938 +
           (C15059 + C15058 + C15057 + C15056) * C32945) *
              C32592 * C32578 * C111 +
          (C15076 * C32945 + C15077 * C32938 +
           (C15071 + C15070 + C15069 + C15068) * C32925 +
           (C173 * C15053 + C172 * C15047 +
            (C113 * C483 + C32632 * C484) * C15054 +
            (C113 * C485 + C32632 * C486) * C32677) *
               C32908) *
              C32592 * C32578 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C32632 * C122) * C15053 +
            (C113 * C123 + C32632 * C136) * C15047 + C1056 * C15054 +
            C1057 * C32677) *
               C32945 +
           (C15056 + C15057 + C15058 + C15059) * C32938 + C15076 * C32925 +
           C15077 * C32908) *
              C354 -
          ((C3291 * C32677 + C3292 * C15054 + C626 * C15047 + C627 * C15053) *
               C32908 +
           (C1546 * C32677 + C1547 * C15054 + C628 * C15047 + C629 * C15053) *
               C32925 +
           (C1550 * C32677 + C1551 * C15054 + C630 * C15047 + C631 * C15053) *
               C32938 +
           (C1728 * C32677 + C1729 * C15054 +
            (C113 * C375 + C32632 * C391) * C15047 +
            (C113 * C361 + C32632 * C376) * C15053) *
               C32945) *
              C355 +
          (((C113 * C362 + C32632 * C377) * C15053 +
            (C113 * C378 + C32632 * C392) * C15047 +
            (C113 * C1178 + C32632 * C1190) * C15054 +
            (C113 * C1191 + C32632 * C1205) * C32677) *
               C32945 +
           ((C113 * C363 + C32632 * C379) * C15053 +
            (C113 * C380 + C32632 * C393) * C15047 +
            (C113 * C1180 + C32632 * C1194) * C15054 +
            (C113 * C1195 + C32632 * C1207) * C32677) *
               C32938 +
           ((C113 * C364 + C32632 * C381) * C15053 +
            (C113 * C382 + C32632 * C394) * C15047 +
            (C113 * C1182 + C32632 * C1198) * C15054 +
            (C113 * C1199 + C32632 * C1209) * C32677) *
               C32925 +
           ((C113 * C365 + C32632 * C383) * C15053 +
            (C113 * C384 + C32632 * C395) * C15047 +
            (C113 * C2296 + C32632 * C2297) * C15054 +
            (C113 * C2298 + C32632 * C2299) * C32677) *
               C32908) *
              C356) *
         C32578 * C32566) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C32632 * C122) * C15791 +
            (C113 * C123 + C32632 * C136) * C32946 + C1056 * C15792 +
            C1057 * C32942 + C1058 * C15793 + C1059 * C32932 + C1065 * C15794 +
            C1064 * C32914) *
               C15789 +
           (C15796 + C15797 + C15798 + C15799 + C15800 + C15801 + C15802 +
            C15803) *
               C32543) *
              C32592 * C32578 * C110 -
          ((C15804 + C15805 + C15806 + C15807 + C15808 + C15809 + C15810 +
            C15811) *
               C32543 +
           (C15803 + C15802 + C15801 + C15800 + C15799 + C15798 + C15797 +
            C15796) *
               C15789) *
              C32592 * C32578 * C111 +
          ((C15811 + C15810 + C15809 + C15808 + C15807 + C15806 + C15805 +
            C15804) *
               C15789 +
           (C168 * C15791 + C169 * C32946 + C507 * C15792 + C506 * C32942 +
            C891 * C15793 + C890 * C32932 +
            (C113 * C1357 + C32632 * C1358) * C15794 +
            (C113 * C1359 + C32632 * C1360) * C32914) *
               C32543) *
              C32592 * C32578 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C32632 * C122) * C15791 +
            (C113 * C123 + C32632 * C136) * C32946 + C1056 * C15792 +
            C1057 * C32942 + C1058 * C15793 + C1059 * C32932 + C1065 * C15794 +
            C1064 * C32914) *
               C15789 +
           (C15796 + C15797 + C15798 + C15799 + C15800 + C15801 + C15802 +
            C15803) *
               C32543) *
              C32592 * C248 -
          ((C6506 * C32914 + C6505 * C15794 + C1062 * C32932 + C1063 * C15793 +
            C886 * C32942 + C885 * C15792 + C510 * C32946 + C511 * C15791) *
               C32543 +
           (C6338 * C32914 + C6337 * C15794 + C1064 * C32932 + C1065 * C15793 +
            C1059 * C32942 + C1058 * C15792 + C1057 * C32946 + C1056 * C15791) *
               C15789) *
              C32592 * C249 +
          ((C1058 * C15791 + C1059 * C32946 + C1065 * C15792 + C1064 * C32942 +
            C6337 * C15793 + C6338 * C32932 + C6340 * C15794 + C6339 * C32914) *
               C15789 +
           (C885 * C15791 + C886 * C32946 + C1063 * C15792 + C1062 * C32942 +
            C6505 * C15793 + C6506 * C32932 +
            (C113 * C6496 + C32632 * C6497) * C15794 +
            (C113 * C6498 + C32632 * C6499) * C32914) *
               C32543) *
              C32592 * C250) *
         C32566) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C32632 * C122) * C15791 +
            (C113 * C123 + C32632 * C136) * C32946 + C1056 * C15792 +
            C1057 * C32942 + C1058 * C15793 + C1059 * C32932 + C1065 * C15794 +
            C1064 * C32914) *
               C15789 +
           (C15796 + C15797 + C15798 + C15799 + C15800 + C15801 + C15802 +
            C15803) *
               C32543) *
              C354 -
          ((C8193 * C32914 + C8194 * C15794 + C1548 * C32932 + C1549 * C15793 +
            C1550 * C32942 + C1551 * C15792 + C630 * C32946 + C631 * C15791) *
               C32543 +
           (C6689 * C32914 + C6690 * C15794 + C1726 * C32932 + C1727 * C15793 +
            C1728 * C32942 + C1729 * C15792 +
            (C113 * C375 + C32632 * C391) * C32946 +
            (C113 * C361 + C32632 * C376) * C15791) *
               C15789) *
              C355 +
          (((C113 * C362 + C32632 * C377) * C15791 +
            (C113 * C378 + C32632 * C392) * C32946 +
            (C113 * C1178 + C32632 * C1190) * C15792 +
            (C113 * C1191 + C32632 * C1205) * C32942 +
            (C113 * C1179 + C32632 * C1192) * C15793 +
            (C113 * C1193 + C32632 * C1206) * C32932 +
            (C113 * C6403 + C32632 * C6407) * C15794 +
            (C113 * C6408 + C32632 * C6412) * C32914) *
               C15789 +
           ((C113 * C363 + C32632 * C379) * C15791 +
            (C113 * C380 + C32632 * C393) * C32946 +
            (C113 * C1180 + C32632 * C1194) * C15792 +
            (C113 * C1195 + C32632 * C1207) * C32942 +
            (C113 * C1181 + C32632 * C1196) * C15793 +
            (C113 * C1197 + C32632 * C1208) * C32932 +
            (C113 * C7236 + C32632 * C7237) * C15794 +
            (C113 * C7238 + C32632 * C7239) * C32914) *
               C32543) *
              C356) *
         C32578 * C32566) /
            (p * q * std::sqrt(p + q));
    d2ee[23] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                 (((((C113 * C115 + C32632 * C122) * C15053 +
                     (C113 * C123 + C32632 * C136) * C15047 + C1056 * C15054 +
                     C1057 * C32677) *
                        C32945 +
                    (C15056 + C15057 + C15058 + C15059) * C32938 +
                    C15076 * C32925 + C15077 * C32908) *
                       C601 -
                   ((C15546 + C15547 + C15548 + C15549) * C32908 +
                    (C15550 + C15551 + C15552 + C15553) * C32925 +
                    (C15554 + C15555 + C15556 + C15557) * C32938 +
                    (C1728 * C32677 + C1729 * C15054 +
                     (C113 * C375 + C32632 * C391) * C15047 +
                     (C113 * C361 + C32632 * C376) * C15053) *
                        C32945) *
                       C602) *
                      C32578 * C481 +
                  (((C15557 + C15556 + C15555 + C15554) * C32945 +
                    (C15553 + C15552 + C15551 + C15550) * C32938 +
                    (C15549 + C15548 + C15547 + C15546) * C32925 +
                    (C625 * C15053 + C624 * C15047 +
                     (C113 * C725 + C32632 * C734) * C15054 +
                     (C113 * C735 + C32632 * C740) * C32677) *
                        C32908) *
                       C602 -
                   ((C15068 + C15069 + C15070 + C15071) * C32908 +
                    (C15067 + C15066 + C15065 + C15064) * C32925 +
                    (C15063 + C15062 + C15061 + C15060) * C32938 +
                    (C15059 + C15058 + C15057 + C15056) * C32945) *
                       C601) *
                      C32578 * C482)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                 (((((C113 * C115 + C32632 * C122) * C15791 +
                     (C113 * C123 + C32632 * C136) * C32946 + C1056 * C15792 +
                     C1057 * C32942 + C1058 * C15793 + C1059 * C32932 +
                     C1065 * C15794 + C1064 * C32914) *
                        C15789 +
                    (C15796 + C15797 + C15798 + C15799 + C15800 + C15801 +
                     C15802 + C15803) *
                        C32543) *
                       C601 -
                   ((C16276 + C16277 + C16278 + C16279 + C16280 + C16281 +
                     C16282 + C16283) *
                        C32543 +
                    (C6689 * C32914 + C6690 * C15794 + C1726 * C32932 +
                     C1727 * C15793 + C1728 * C32942 + C1729 * C15792 +
                     (C113 * C375 + C32632 * C391) * C32946 +
                     (C113 * C361 + C32632 * C376) * C15791) *
                        C15789) *
                       C602) *
                      C32578 * C481 +
                  (((C16283 + C16282 + C16281 + C16280 + C16279 + C16278 +
                     C16277 + C16276) *
                        C15789 +
                    (C629 * C15791 + C628 * C32946 + C1547 * C15792 +
                     C1546 * C32942 + C1545 * C15793 + C1544 * C32932 +
                     (C113 * C1707 + C32632 * C1712) * C15794 +
                     (C113 * C1713 + C32632 * C1716) * C32914) *
                        C32543) *
                       C602 -
                   ((C15804 + C15805 + C15806 + C15807 + C15808 + C15809 +
                     C15810 + C15811) *
                        C32543 +
                    (C15803 + C15802 + C15801 + C15800 + C15799 + C15798 +
                     C15797 + C15796) *
                        C15789) *
                       C601) *
                      C32578 * C482)) /
                    (p * q * std::sqrt(p + q));
    d2ee[24] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C32632 * C122) * C15053 +
            (C113 * C123 + C32632 * C136) * C15047 + C1056 * C15054 +
            C1057 * C32677) *
               C32945 +
           (C15056 + C15057 + C15058 + C15059) * C32938 + C15076 * C32925 +
           C15077 * C32908) *
              C32592 * C32578 * C110 -
          ((C15068 + C15069 + C15070 + C15071) * C32908 +
           (C15067 + C15066 + C15065 + C15064) * C32925 +
           (C15063 + C15062 + C15061 + C15060) * C32938 +
           (C15059 + C15058 + C15057 + C15056) * C32945) *
              C32592 * C32578 * C111 +
          (C15076 * C32945 + C15077 * C32938 +
           (C15071 + C15070 + C15069 + C15068) * C32925 +
           (C173 * C15053 + C172 * C15047 +
            (C113 * C483 + C32632 * C484) * C15054 +
            (C113 * C485 + C32632 * C486) * C32677) *
               C32908) *
              C32592 * C32578 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C32632 * C122) * C15053 +
            (C113 * C123 + C32632 * C136) * C15047 + C1056 * C15054 +
            C1057 * C32677) *
               C32945 +
           (C15056 + C15057 + C15058 + C15059) * C32938 + C15076 * C32925 +
           C15077 * C32908) *
              C32592 * C248 -
          ((C890 * C32677 + C891 * C15054 + C506 * C15047 + C507 * C15053) *
               C32908 +
           (C889 * C32677 + C888 * C15054 + C508 * C15047 + C509 * C15053) *
               C32925 +
           (C886 * C32677 + C885 * C15054 + C510 * C15047 + C511 * C15053) *
               C32938 +
           (C1059 * C32677 + C1058 * C15054 + C1057 * C15047 + C1056 * C15053) *
               C32945) *
              C32592 * C249 +
          ((C1058 * C15053 + C1059 * C15047 + C1065 * C15054 + C1064 * C32677) *
               C32945 +
           (C885 * C15053 + C886 * C15047 + C1063 * C15054 + C1062 * C32677) *
               C32938 +
           (C888 * C15053 + C889 * C15047 + C1061 * C15054 + C1060 * C32677) *
               C32925 +
           (C891 * C15053 + C890 * C15047 +
            (C113 * C1357 + C32632 * C1358) * C15054 +
            (C113 * C1359 + C32632 * C1360) * C32677) *
               C32908) *
              C32592 * C250) *
         C32566) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C32632 * C122) * C15791 +
            (C113 * C123 + C32632 * C136) * C32946 + C1056 * C15792 +
            C1057 * C32942 + C1058 * C15793 + C1059 * C32932 + C1065 * C15794 +
            C1064 * C32914) *
               C15789 +
           (C15796 + C15797 + C15798 + C15799 + C15800 + C15801 + C15802 +
            C15803) *
               C32543) *
              C32592 * C32578 * C110 -
          ((C15804 + C15805 + C15806 + C15807 + C15808 + C15809 + C15810 +
            C15811) *
               C32543 +
           (C15803 + C15802 + C15801 + C15800 + C15799 + C15798 + C15797 +
            C15796) *
               C15789) *
              C32592 * C32578 * C111 +
          ((C15811 + C15810 + C15809 + C15808 + C15807 + C15806 + C15805 +
            C15804) *
               C15789 +
           (C168 * C15791 + C169 * C32946 + C507 * C15792 + C506 * C32942 +
            C891 * C15793 + C890 * C32932 +
            (C113 * C1357 + C32632 * C1358) * C15794 +
            (C113 * C1359 + C32632 * C1360) * C32914) *
               C32543) *
              C32592 * C32578 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C32632 * C122) * C15791 +
            (C113 * C123 + C32632 * C136) * C32946 + C1056 * C15792 +
            C1057 * C32942 + C1058 * C15793 + C1059 * C32932 + C1065 * C15794 +
            C1064 * C32914) *
               C15789 +
           (C15796 + C15797 + C15798 + C15799 + C15800 + C15801 + C15802 +
            C15803) *
               C32543) *
              C32592 * C248 -
          ((C6506 * C32914 + C6505 * C15794 + C1062 * C32932 + C1063 * C15793 +
            C886 * C32942 + C885 * C15792 + C510 * C32946 + C511 * C15791) *
               C32543 +
           (C6338 * C32914 + C6337 * C15794 + C1064 * C32932 + C1065 * C15793 +
            C1059 * C32942 + C1058 * C15792 + C1057 * C32946 + C1056 * C15791) *
               C15789) *
              C32592 * C249 +
          ((C1058 * C15791 + C1059 * C32946 + C1065 * C15792 + C1064 * C32942 +
            C6337 * C15793 + C6338 * C32932 + C6340 * C15794 + C6339 * C32914) *
               C15789 +
           (C885 * C15791 + C886 * C32946 + C1063 * C15792 + C1062 * C32942 +
            C6505 * C15793 + C6506 * C32932 +
            (C113 * C6496 + C32632 * C6497) * C15794 +
            (C113 * C6498 + C32632 * C6499) * C32914) *
               C32543) *
              C32592 * C250) *
         C32566) /
            (p * q * std::sqrt(p + q));
    d2ee[25] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C20430 * C115 + C20428 * C122 + C20431 * C361 + C32719 * C376) *
                 C31607 +
             (C20430 * C123 + C20428 * C136 + C20431 * C375 + C32719 * C391) *
                 C32673 +
             (C21499 + C21500) * C31599 + (C21501 + C21502) * C32680 +
             C21515 * C31613 + C21516 * C17571) *
                C32854 +
            ((C20465 + C20466) * C31607 + (C20467 + C20468) * C32673 +
             C21857 * C31599 + C21858 * C32680 + C21481 * C31613 +
             C21482 * C17571) *
                C32543) *
               C32592 * C479 -
           (((C21507 + C21508) * C17571 + (C21509 + C21510) * C31613 +
             C21859 * C32680 + C21860 * C31599 + C21861 * C32673 +
             C21862 * C31607) *
                C32543 +
            ((C21511 + C21512) * C17571 + (C21513 + C21514) * C31613 +
             (C21506 + C21505) * C32680 + (C21504 + C21503) * C31599 +
             (C21502 + C21501) * C32673 + (C21500 + C21499) * C31607) *
                C32854) *
               C32592 * C480) *
              C481 +
          (((C21857 * C31607 + C21858 * C32673 + C21481 * C31599 +
             C21482 * C32680 + (C21510 + C21509) * C31613 +
             (C21508 + C21507) * C17571) *
                C32854 +
            (C23235 * C31607 + C23236 * C32673 + (C21318 + C21317) * C31599 +
             (C21316 + C21315) * C32680 +
             (C20430 * C1011 + C20428 * C1018 + C20431 * C1707 +
              C32719 * C1712) *
                 C31613 +
             (C20430 * C1017 + C20428 * C1029 + C20431 * C1713 +
              C32719 * C1716) *
                 C17571) *
                C32543) *
               C32592 * C480 -
           (((C21315 + C21316) * C17571 + (C21317 + C21318) * C31613 +
             C23728 * C32680 + C23729 * C31599 + (C20472 + C20471) * C32673 +
             (C20470 + C20469) * C31607) *
                C32543 +
            (C21859 * C17571 + C21860 * C31613 + C21861 * C32680 +
             C21862 * C31599 + (C20468 + C20467) * C32673 +
             (C20466 + C20465) * C31607) *
                C32854) *
               C32592 * C479) *
              C482)) /
        (p * q * std::sqrt(p + q));
    d2ee[26] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C20430 * C115 + C20428 * C122 + C20431 * C361 + C32719 * C376) *
                 C31607 +
             (C20430 * C123 + C20428 * C136 + C20431 * C375 + C32719 * C391) *
                 C32673 +
             (C21499 + C21500) * C31599 + (C21501 + C21502) * C32680 +
             C21515 * C31613 + C21516 * C17571) *
                C32854 +
            ((C20465 + C20466) * C31607 + (C20467 + C20468) * C32673 +
             C21857 * C31599 + C21858 * C32680 + C21481 * C31613 +
             C21482 * C17571) *
                C32543) *
               C601 -
           (((C22073 + C22074) * C17571 + (C22075 + C22076) * C31613 +
             (C22077 + C22078) * C32680 + (C22079 + C22080) * C31599 +
             (C21015 + C21016) * C32673 + (C21017 + C21018) * C31607) *
                C32543 +
            ((C22291 + C22292) * C17571 + (C22293 + C22294) * C31613 +
             (C22295 + C22296) * C32680 + (C22297 + C22298) * C31599 +
             (C20431 * C378 + C32719 * C392 + C20430 * C375 + C20428 * C391) *
                 C32673 +
             (C20431 * C362 + C32719 * C377 + C20430 * C361 + C20428 * C376) *
                 C31607) *
                C32854) *
               C602) *
              C479 +
          ((((C22298 + C22297) * C31607 + (C22296 + C22295) * C32673 +
             (C22294 + C22293) * C31599 + (C22292 + C22291) * C32680 +
             (C27891 + C27890) * C31613 + (C27889 + C27888) * C17571) *
                C32854 +
            ((C22080 + C22079) * C31607 + (C22078 + C22077) * C32673 +
             (C22076 + C22075) * C31599 + (C22074 + C22073) * C32680 +
             (C20430 * C1706 + C20428 * C1710 + C20431 * C7236 +
              C32719 * C7237) *
                 C31613 +
             (C20430 * C1711 + C20428 * C1715 + C20431 * C7238 +
              C32719 * C7239) *
                 C17571) *
                C32543) *
               C602 -
           (((C21507 + C21508) * C17571 + (C21509 + C21510) * C31613 +
             C21859 * C32680 + C21860 * C31599 + C21861 * C32673 +
             C21862 * C31607) *
                C32543 +
            ((C21511 + C21512) * C17571 + (C21513 + C21514) * C31613 +
             (C21506 + C21505) * C32680 + (C21504 + C21503) * C31599 +
             (C21502 + C21501) * C32673 + (C21500 + C21499) * C31607) *
                C32854) *
               C601) *
              C480) *
         C32566) /
        (p * q * std::sqrt(p + q));
    d2ee[27] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C20430 * C115 + C20428 * C122 + C20431 * C361 + C32719 * C376) *
                C31607 +
            (C20430 * C123 + C20428 * C136 + C20431 * C375 + C32719 * C391) *
                C32673 +
            (C21499 + C21500) * C31599 + (C21501 + C21502) * C32680 +
            C21515 * C31613 + C21516 * C17571) *
               C32854 +
           ((C20465 + C20466) * C31607 + (C20467 + C20468) * C32673 +
            C21857 * C31599 + C21858 * C32680 + C21481 * C31613 +
            C21482 * C17571) *
               C32543) *
              C32592 * C248 -
          (((C21507 + C21508) * C17571 + (C21509 + C21510) * C31613 +
            C21859 * C32680 + C21860 * C31599 + C21861 * C32673 +
            C21862 * C31607) *
               C32543 +
           ((C21511 + C21512) * C17571 + (C21513 + C21514) * C31613 +
            (C21506 + C21505) * C32680 + (C21504 + C21503) * C31599 +
            (C21502 + C21501) * C32673 + (C21500 + C21499) * C31607) *
               C32854) *
              C32592 * C249 +
          ((C21515 * C31607 + C21516 * C32673 + C27378 * C31599 +
            C27379 * C32680 + (C27391 + C27390) * C31613 +
            (C27389 + C27388) * C17571) *
               C32854 +
           (C21481 * C31607 + C21482 * C32673 + (C21510 + C21509) * C31599 +
            (C21508 + C21507) * C32680 +
            (C20430 * C1015 + C20428 * C1025 + C20431 * C6588 +
             C32719 * C6589) *
                C31613 +
            (C20430 * C1026 + C20428 * C1033 + C20431 * C6590 +
             C32719 * C6591) *
                C17571) *
               C32543) *
              C32592 * C250) *
         C32566) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C20430 * C115 + C20428 * C122 + C20431 * C361 + C32719 * C376) *
                C31607 +
            (C20430 * C123 + C20428 * C136 + C20431 * C375 + C32719 * C391) *
                C32673 +
            (C21499 + C21500) * C31599 + (C21501 + C21502) * C32680 +
            C21515 * C31613 + C21516 * C17571) *
               C32854 +
           ((C20465 + C20466) * C31607 + (C20467 + C20468) * C32673 +
            C21857 * C31599 + C21858 * C32680 + C21481 * C31613 +
            C21482 * C17571) *
               C32543) *
              C32592 * C32578 * C110 -
          (((C21315 + C21316) * C17571 + (C21317 + C21318) * C31613 +
            C23728 * C32680 + C23729 * C31599 + (C20472 + C20471) * C32673 +
            (C20470 + C20469) * C31607) *
               C32543 +
           (C21859 * C17571 + C21860 * C31613 + C21861 * C32680 +
            C21862 * C31599 + (C20468 + C20467) * C32673 +
            (C20466 + C20465) * C31607) *
               C32854) *
              C32592 * C32578 * C111 +
          ((C20481 * C31607 + C20482 * C32673 + C23235 * C31599 +
            C23236 * C32680 + (C21318 + C21317) * C31613 +
            (C21316 + C21315) * C17571) *
               C32854 +
           (C20483 * C31607 + C20484 * C32673 + (C20844 + C20843) * C31599 +
            (C20842 + C20841) * C32680 +
            (C20430 * C260 + C20428 * C278 + C20431 * C1519 + C32719 * C1520) *
                C31613 +
            (C20430 * C279 + C20428 * C290 + C20431 * C1521 + C32719 * C1522) *
                C17571) *
               C32543) *
              C32592 * C32578 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C20430 * C115 + C20428 * C122 + C20431 * C361 + C32719 * C376) *
                C31607 +
            (C20430 * C123 + C20428 * C136 + C20431 * C375 + C32719 * C391) *
                C32673 +
            (C21499 + C21500) * C31599 + (C21501 + C21502) * C32680 +
            C21515 * C31613 + C21516 * C17571) *
               C32854 +
           ((C20465 + C20466) * C31607 + (C20467 + C20468) * C32673 +
            C21857 * C31599 + C21858 * C32680 + C21481 * C31613 +
            C21482 * C17571) *
               C32543) *
              C354 -
          (((C22073 + C22074) * C17571 + (C22075 + C22076) * C31613 +
            (C22077 + C22078) * C32680 + (C22079 + C22080) * C31599 +
            (C21015 + C21016) * C32673 + (C21017 + C21018) * C31607) *
               C32543 +
           ((C22291 + C22292) * C17571 + (C22293 + C22294) * C31613 +
            (C22295 + C22296) * C32680 + (C22297 + C22298) * C31599 +
            (C20431 * C378 + C32719 * C392 + C20430 * C375 + C20428 * C391) *
                C32673 +
            (C20431 * C362 + C32719 * C377 + C20430 * C361 + C20428 * C376) *
                C31607) *
               C32854) *
              C355 +
          (((C20430 * C362 + C20428 * C377 + C20431 * C2128 + C32719 * C2137) *
                C31607 +
            (C20430 * C378 + C20428 * C392 + C20431 * C2136 + C32719 * C2146) *
                C32673 +
            (C20430 * C1178 + C20428 * C1190 + C20431 * C2668 +
             C32719 * C2671) *
                C31599 +
            (C20430 * C1191 + C20428 * C1205 + C20431 * C2672 +
             C32719 * C2677) *
                C32680 +
            (C20430 * C1179 + C20428 * C1192 + C20431 * C7078 +
             C32719 * C7082) *
                C31613 +
            (C20430 * C1193 + C20428 * C1206 + C20431 * C7081 +
             C32719 * C7087) *
                C17571) *
               C32854 +
           ((C20430 * C363 + C20428 * C379 + C20431 * C2127 + C32719 * C2135) *
                C31607 +
            (C20430 * C380 + C20428 * C393 + C20431 * C2134 + C32719 * C2145) *
                C32673 +
            (C20430 * C1180 + C20428 * C1194 + C20431 * C2669 +
             C32719 * C2673) *
                C31599 +
            (C20430 * C1195 + C20428 * C1207 + C20431 * C2674 +
             C32719 * C2678) *
                C32680 +
            (C20430 * C1181 + C20428 * C1196 + C20431 * C7404 +
             C32719 * C7405) *
                C31613 +
            (C20430 * C1197 + C20428 * C1208 + C20431 * C7406 +
             C32719 * C7407) *
                C17571) *
               C32543) *
              C356) *
         C32578 * C32566) /
            (p * q * std::sqrt(p + q));
    d2ee[28] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C20430 * C115 + C20428 * C122 + C20431 * C361 + C32719 * C376) *
                 C31607 +
             (C20430 * C123 + C20428 * C136 + C20431 * C375 + C32719 * C391) *
                 C32673 +
             (C21499 + C21500) * C31599 + (C21501 + C21502) * C32680 +
             C21515 * C31613 + C21516 * C17571) *
                C32854 +
            ((C20465 + C20466) * C31607 + (C20467 + C20468) * C32673 +
             C21857 * C31599 + C21858 * C32680 + C21481 * C31613 +
             C21482 * C17571) *
                C32543) *
               C601 -
           (((C22073 + C22074) * C17571 + (C22075 + C22076) * C31613 +
             (C22077 + C22078) * C32680 + (C22079 + C22080) * C31599 +
             (C21015 + C21016) * C32673 + (C21017 + C21018) * C31607) *
                C32543 +
            ((C22291 + C22292) * C17571 + (C22293 + C22294) * C31613 +
             (C22295 + C22296) * C32680 + (C22297 + C22298) * C31599 +
             (C20431 * C378 + C32719 * C392 + C20430 * C375 + C20428 * C391) *
                 C32673 +
             (C20431 * C362 + C32719 * C377 + C20430 * C361 + C20428 * C376) *
                 C31607) *
                C32854) *
               C602) *
              C32578 * C481 +
          ((((C21018 + C21017) * C31607 + (C21016 + C21015) * C32673 +
             (C22080 + C22079) * C31599 + (C22078 + C22077) * C32680 +
             (C22076 + C22075) * C31613 + (C22074 + C22073) * C17571) *
                C32854 +
            ((C21014 + C21013) * C31607 + (C21012 + C21011) * C32673 +
             (C23935 + C23934) * C31599 + (C23933 + C23932) * C32680 +
             (C20430 * C1175 + C20428 * C1185 + C20431 * C1183 +
              C32719 * C1200) *
                 C31613 +
             (C20430 * C1184 + C20428 * C1202 + C20431 * C1201 +
              C32719 * C1210) *
                 C17571) *
                C32543) *
               C602 -
           (((C21315 + C21316) * C17571 + (C21317 + C21318) * C31613 +
             C23728 * C32680 + C23729 * C31599 + (C20472 + C20471) * C32673 +
             (C20470 + C20469) * C31607) *
                C32543 +
            (C21859 * C17571 + C21860 * C31613 + C21861 * C32680 +
             C21862 * C31599 + (C20468 + C20467) * C32673 +
             (C20466 + C20465) * C31607) *
                C32854) *
               C601) *
              C32578 * C482)) /
        (p * q * std::sqrt(p + q));
    d2ee[29] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C20430 * C115 + C20428 * C122 + C20431 * C361 + C32719 * C376) *
                C31607 +
            (C20430 * C123 + C20428 * C136 + C20431 * C375 + C32719 * C391) *
                C32673 +
            (C21499 + C21500) * C31599 + (C21501 + C21502) * C32680 +
            C21515 * C31613 + C21516 * C17571) *
               C32854 +
           ((C20465 + C20466) * C31607 + (C20467 + C20468) * C32673 +
            C21857 * C31599 + C21858 * C32680 + C21481 * C31613 +
            C21482 * C17571) *
               C32543) *
              C32592 * C32578 * C110 -
          (((C21315 + C21316) * C17571 + (C21317 + C21318) * C31613 +
            C23728 * C32680 + C23729 * C31599 + (C20472 + C20471) * C32673 +
            (C20470 + C20469) * C31607) *
               C32543 +
           (C21859 * C17571 + C21860 * C31613 + C21861 * C32680 +
            C21862 * C31599 + (C20468 + C20467) * C32673 +
            (C20466 + C20465) * C31607) *
               C32854) *
              C32592 * C32578 * C111 +
          ((C20481 * C31607 + C20482 * C32673 + C23235 * C31599 +
            C23236 * C32680 + (C21318 + C21317) * C31613 +
            (C21316 + C21315) * C17571) *
               C32854 +
           (C20483 * C31607 + C20484 * C32673 + (C20844 + C20843) * C31599 +
            (C20842 + C20841) * C32680 +
            (C20430 * C260 + C20428 * C278 + C20431 * C1519 + C32719 * C1520) *
                C31613 +
            (C20430 * C279 + C20428 * C290 + C20431 * C1521 + C32719 * C1522) *
                C17571) *
               C32543) *
              C32592 * C32578 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C20430 * C115 + C20428 * C122 + C20431 * C361 + C32719 * C376) *
                C31607 +
            (C20430 * C123 + C20428 * C136 + C20431 * C375 + C32719 * C391) *
                C32673 +
            (C21499 + C21500) * C31599 + (C21501 + C21502) * C32680 +
            C21515 * C31613 + C21516 * C17571) *
               C32854 +
           ((C20465 + C20466) * C31607 + (C20467 + C20468) * C32673 +
            C21857 * C31599 + C21858 * C32680 + C21481 * C31613 +
            C21482 * C17571) *
               C32543) *
              C32592 * C248 -
          (((C21507 + C21508) * C17571 + (C21509 + C21510) * C31613 +
            C21859 * C32680 + C21860 * C31599 + C21861 * C32673 +
            C21862 * C31607) *
               C32543 +
           ((C21511 + C21512) * C17571 + (C21513 + C21514) * C31613 +
            (C21506 + C21505) * C32680 + (C21504 + C21503) * C31599 +
            (C21502 + C21501) * C32673 + (C21500 + C21499) * C31607) *
               C32854) *
              C32592 * C249 +
          ((C21515 * C31607 + C21516 * C32673 + C27378 * C31599 +
            C27379 * C32680 + (C27391 + C27390) * C31613 +
            (C27389 + C27388) * C17571) *
               C32854 +
           (C21481 * C31607 + C21482 * C32673 + (C21510 + C21509) * C31599 +
            (C21508 + C21507) * C32680 +
            (C20430 * C1015 + C20428 * C1025 + C20431 * C6588 +
             C32719 * C6589) *
                C31613 +
            (C20430 * C1026 + C20428 * C1033 + C20431 * C6590 +
             C32719 * C6591) *
                C17571) *
               C32543) *
              C32592 * C250) *
         C32566) /
            (p * q * std::sqrt(p + q));
    d2ee[30] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                 ((((C31694 * C115 + C32715 * C122 + C31686 * C361 +
                     C32722 * C376 + C31700 * C362 + C24241 * C377) *
                        C31607 +
                    (C31694 * C123 + C32715 * C136 + C31686 * C375 +
                     C32722 * C391 + C31700 * C378 + C24241 * C392) *
                        C32673 +
                    (C25365 + C25366 + C25367) * C31599 +
                    (C25368 + C25369 + C25370) * C32680 + C30922 * C31613 +
                    C30923 * C17571) *
                       C32533 * C32592 * C479 -
                   ((C30924 + C30925 + C30926) * C17571 +
                    (C30927 + C30928 + C30929) * C31613 +
                    (C25377 + C25378 + C25379) * C32680 +
                    (C25380 + C25381 + C25382) * C31599 +
                    (C25370 + C25369 + C25368) * C32673 +
                    (C25367 + C25366 + C25365) * C31607) *
                       C32533 * C32592 * C480) *
                      C481 +
                  ((C25727 * C31607 + C25728 * C32673 +
                    (C25376 + C25375 + C25374) * C31599 +
                    (C25373 + C25372 + C25371) * C32680 +
                    (C31694 * C1012 + C32715 * C1020 + C31686 * C1706 +
                     C32722 * C1710 + C31700 * C7236 + C24241 * C7237) *
                        C31613 +
                    (C31694 * C1019 + C32715 * C1030 + C31686 * C1711 +
                     C32722 * C1715 + C31700 * C7238 + C24241 * C7239) *
                        C17571) *
                       C32533 * C32592 * C480 -
                   ((C25371 + C25372 + C25373) * C17571 +
                    (C25374 + C25375 + C25376) * C31613 + C25729 * C32680 +
                    C25730 * C31599 + (C24287 + C24286 + C24285) * C32673 +
                    (C24284 + C24283 + C24282) * C31607) *
                       C32533 * C32592 * C479) *
                      C482)) /
                (p * q * std::sqrt(p + q));
    d2ee[31] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                 ((((C31694 * C115 + C32715 * C122 + C31686 * C361 +
                     C32722 * C376 + C31700 * C362 + C24241 * C377) *
                        C31607 +
                    (C31694 * C123 + C32715 * C136 + C31686 * C375 +
                     C32722 * C391 + C31700 * C378 + C24241 * C392) *
                        C32673 +
                    (C25365 + C25366 + C25367) * C31599 +
                    (C25368 + C25369 + C25370) * C32680 + C30922 * C31613 +
                    C30923 * C17571) *
                       C32533 * C601 -
                   ((C31490 + C31491 + C31492) * C17571 +
                    (C31493 + C31494 + C31495) * C31613 +
                    (C26149 + C26150 + C26151) * C32680 +
                    (C26152 + C26153 + C26154) * C31599 +
                    (C31700 * C2136 + C24241 * C2146 + C31686 * C378 +
                     C32722 * C392 + C31694 * C375 + C32715 * C391) *
                        C32673 +
                    (C31700 * C2128 + C24241 * C2137 + C31686 * C362 +
                     C32722 * C377 + C31694 * C361 + C32715 * C376) *
                        C31607) *
                       C32533 * C602) *
                      C479 +
                  (((C26154 + C26153 + C26152) * C31607 +
                    (C26151 + C26150 + C26149) * C32673 +
                    (C31495 + C31494 + C31493) * C31599 +
                    (C31492 + C31491 + C31490) * C32680 +
                    (C31694 * C1705 + C32715 * C1708 + C31686 * C6403 +
                     C32722 * C6407 + C31700 * C7554 + C24241 * C7555) *
                        C31613 +
                    (C31694 * C1709 + C32715 * C1714 + C31686 * C6408 +
                     C32722 * C6412 + C31700 * C7556 + C24241 * C7557) *
                        C17571) *
                       C32533 * C602 -
                   ((C30924 + C30925 + C30926) * C17571 +
                    (C30927 + C30928 + C30929) * C31613 +
                    (C25377 + C25378 + C25379) * C32680 +
                    (C25380 + C25381 + C25382) * C31599 +
                    (C25370 + C25369 + C25368) * C32673 +
                    (C25367 + C25366 + C25365) * C31607) *
                       C32533 * C601) *
                      C480) *
                 C32566) /
                (p * q * std::sqrt(p + q));
    d2ee[32] += (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((C31694 * C115 + C32715 * C122 + C31686 * C361 +
                    C32722 * C376 + C31700 * C362 + C24241 * C377) *
                       C31607 +
                   (C31694 * C123 + C32715 * C136 + C31686 * C375 +
                    C32722 * C391 + C31700 * C378 + C24241 * C392) *
                       C32673 +
                   (C25365 + C25366 + C25367) * C31599 +
                   (C25368 + C25369 + C25370) * C32680 + C30922 * C31613 +
                   C30923 * C17571) *
                      C32533 * C32592 * C248 -
                  ((C30924 + C30925 + C30926) * C17571 +
                   (C30927 + C30928 + C30929) * C31613 +
                   (C25377 + C25378 + C25379) * C32680 +
                   (C25380 + C25381 + C25382) * C31599 +
                   (C25370 + C25369 + C25368) * C32673 +
                   (C25367 + C25366 + C25365) * C31607) *
                      C32533 * C32592 * C249 +
                  (C30922 * C31607 + C30923 * C32673 +
                   (C30929 + C30928 + C30927) * C31599 +
                   (C30926 + C30925 + C30924) * C32680 +
                   (C31694 * C1014 + C32715 * C1023 + C31686 * C6402 +
                    C32722 * C6406 + C31700 * C6404 + C24241 * C6409) *
                       C31613 +
                   (C31694 * C1024 + C32715 * C1032 + C31686 * C6405 +
                    C32722 * C6411 + C31700 * C6410 + C24241 * C6413) *
                       C17571) *
                      C32533 * C32592 * C250) *
                 C32566) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((C31694 * C115 + C32715 * C122 + C31686 * C361 +
                    C32722 * C376 + C31700 * C362 + C24241 * C377) *
                       C31607 +
                   (C31694 * C123 + C32715 * C136 + C31686 * C375 +
                    C32722 * C391 + C31700 * C378 + C24241 * C392) *
                       C32673 +
                   (C25365 + C25366 + C25367) * C31599 +
                   (C25368 + C25369 + C25370) * C32680 +
                   (C25382 + C25381 + C25380) * C31613 +
                   (C25379 + C25378 + C25377) * C17571) *
                      C32533 * C32592 * C32578 * C110 -
                  ((C25371 + C25372 + C25373) * C17571 +
                   (C25374 + C25375 + C25376) * C31613 + C25729 * C32680 +
                   C25730 * C31599 + (C24287 + C24286 + C24285) * C32673 +
                   (C24284 + C24283 + C24282) * C31607) *
                      C32533 * C32592 * C32578 * C111 +
                  (C24302 * C31607 + C24303 * C32673 +
                   (C24702 + C24701 + C24700) * C31599 +
                   (C24699 + C24698 + C24697) * C32680 +
                   (C31694 * C259 + C32715 * C276 + C31686 * C1175 +
                    C32722 * C1185 + C31700 * C1183 + C24241 * C1200) *
                       C31613 +
                   (C31694 * C277 + C32715 * C289 + C31686 * C1184 +
                    C32722 * C1202 + C31700 * C1201 + C24241 * C1210) *
                       C17571) *
                      C32533 * C32592 * C32578 * C112)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((C31694 * C115 + C32715 * C122 + C31686 * C361 +
                    C32722 * C376 + C31700 * C362 + C24241 * C377) *
                       C31607 +
                   (C31694 * C123 + C32715 * C136 + C31686 * C375 +
                    C32722 * C391 + C31700 * C378 + C24241 * C392) *
                       C32673 +
                   (C25365 + C25366 + C25367) * C31599 +
                   (C25368 + C25369 + C25370) * C32680 + C30922 * C31613 +
                   C30923 * C17571) *
                      C32533 * C354 -
                  ((C31700 * C7081 + C24241 * C7087 + C31686 * C1193 +
                    C32722 * C1206 + C31694 * C1188 + C32715 * C1204) *
                       C17571 +
                   (C31700 * C7078 + C24241 * C7082 + C31686 * C1179 +
                    C32722 * C1192 + C31694 * C1177 + C32715 * C1189) *
                       C31613 +
                   (C26149 + C26150 + C26151) * C32680 +
                   (C26152 + C26153 + C26154) * C31599 +
                   (C31700 * C2136 + C24241 * C2146 + C31686 * C378 +
                    C32722 * C392 + C31694 * C375 + C32715 * C391) *
                       C32673 +
                   (C31700 * C2128 + C24241 * C2137 + C31686 * C362 +
                    C32722 * C377 + C31694 * C361 + C32715 * C376) *
                       C31607) *
                      C32533 * C355 +
                  ((C31694 * C362 + C32715 * C377 + C31686 * C2128 +
                    C32722 * C2137 + C31700 * C2129 + C24241 * C2138) *
                       C31607 +
                   (C31694 * C378 + C32715 * C392 + C31686 * C2136 +
                    C32722 * C2146 + C31700 * C2139 + C24241 * C2147) *
                       C32673 +
                   (C31694 * C1178 + C32715 * C1190 + C31686 * C2668 +
                    C32722 * C2671 + C31700 * C7079 + C24241 * C7083) *
                       C31599 +
                   (C31694 * C1191 + C32715 * C1205 + C31686 * C2672 +
                    C32722 * C2677 + C31700 * C7084 + C24241 * C7088) *
                       C32680 +
                   (C31694 * C1179 + C32715 * C1192 + C31686 * C7078 +
                    C32722 * C7082 + C31700 * C7080 + C24241 * C7085) *
                       C31613 +
                   (C31694 * C1193 + C32715 * C1206 + C31686 * C7081 +
                    C32722 * C7087 + C31700 * C7086 + C24241 * C7089) *
                       C17571) *
                      C32533 * C356) *
                 C32578 * C32566) /
                    (p * q * std::sqrt(p + q));
    d2ee[33] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                 ((((C31694 * C115 + C32715 * C122 + C31686 * C361 +
                     C32722 * C376 + C31700 * C362 + C24241 * C377) *
                        C31607 +
                    (C31694 * C123 + C32715 * C136 + C31686 * C375 +
                     C32722 * C391 + C31700 * C378 + C24241 * C392) *
                        C32673 +
                    (C25365 + C25366 + C25367) * C31599 +
                    (C25368 + C25369 + C25370) * C32680 + C30922 * C31613 +
                    C30923 * C17571) *
                       C32533 * C601 -
                   ((C31700 * C7081 + C24241 * C7087 + C31686 * C1193 +
                     C32722 * C1206 + C31694 * C1188 + C32715 * C1204) *
                        C17571 +
                    (C31700 * C7078 + C24241 * C7082 + C31686 * C1179 +
                     C32722 * C1192 + C31694 * C1177 + C32715 * C1189) *
                        C31613 +
                    (C26149 + C26150 + C26151) * C32680 +
                    (C26152 + C26153 + C26154) * C31599 +
                    (C31700 * C2136 + C24241 * C2146 + C31686 * C378 +
                     C32722 * C392 + C31694 * C375 + C32715 * C391) *
                        C32673 +
                    (C31700 * C2128 + C24241 * C2137 + C31686 * C362 +
                     C32722 * C377 + C31694 * C361 + C32715 * C376) *
                        C31607) *
                       C32533 * C602) *
                      C32578 * C481 +
                  (((C24890 + C24889 + C24888) * C31607 +
                    (C24887 + C24886 + C24885) * C32673 +
                    (C25942 + C25941 + C25940) * C31599 +
                    (C25939 + C25938 + C25937) * C32680 +
                    (C31694 * C1176 + C32715 * C1187 + C31686 * C1181 +
                     C32722 * C1196 + C31700 * C7404 + C24241 * C7405) *
                        C31613 +
                    (C31694 * C1186 + C32715 * C1203 + C31686 * C1197 +
                     C32722 * C1208 + C31700 * C7406 + C24241 * C7407) *
                        C17571) *
                       C32533 * C602 -
                   ((C25371 + C25372 + C25373) * C17571 +
                    (C25374 + C25375 + C25376) * C31613 + C25729 * C32680 +
                    C25730 * C31599 + (C24287 + C24286 + C24285) * C32673 +
                    (C24284 + C24283 + C24282) * C31607) *
                       C32533 * C601) *
                      C32578 * C482)) /
                (p * q * std::sqrt(p + q));
    d2ee[34] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                 (((C31694 * C115 + C32715 * C122 + C31686 * C361 +
                    C32722 * C376 + C31700 * C362 + C24241 * C377) *
                       C31607 +
                   (C31694 * C123 + C32715 * C136 + C31686 * C375 +
                    C32722 * C391 + C31700 * C378 + C24241 * C392) *
                       C32673 +
                   (C25365 + C25366 + C25367) * C31599 +
                   (C25368 + C25369 + C25370) * C32680 +
                   (C25382 + C25381 + C25380) * C31613 +
                   (C25379 + C25378 + C25377) * C17571) *
                      C32533 * C32592 * C32578 * C110 -
                  ((C25371 + C25372 + C25373) * C17571 +
                   (C25374 + C25375 + C25376) * C31613 + C25729 * C32680 +
                   C25730 * C31599 + (C24287 + C24286 + C24285) * C32673 +
                   (C24284 + C24283 + C24282) * C31607) *
                      C32533 * C32592 * C32578 * C111 +
                  (C24302 * C31607 + C24303 * C32673 +
                   (C24702 + C24701 + C24700) * C31599 +
                   (C24699 + C24698 + C24697) * C32680 +
                   (C31694 * C259 + C32715 * C276 + C31686 * C1175 +
                    C32722 * C1185 + C31700 * C1183 + C24241 * C1200) *
                       C31613 +
                   (C31694 * C277 + C32715 * C289 + C31686 * C1184 +
                    C32722 * C1202 + C31700 * C1201 + C24241 * C1210) *
                       C17571) *
                      C32533 * C32592 * C32578 * C112)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                 (((C31694 * C115 + C32715 * C122 + C31686 * C361 +
                    C32722 * C376 + C31700 * C362 + C24241 * C377) *
                       C31607 +
                   (C31694 * C123 + C32715 * C136 + C31686 * C375 +
                    C32722 * C391 + C31700 * C378 + C24241 * C392) *
                       C32673 +
                   (C25365 + C25366 + C25367) * C31599 +
                   (C25368 + C25369 + C25370) * C32680 + C30922 * C31613 +
                   C30923 * C17571) *
                      C32533 * C32592 * C248 -
                  ((C30924 + C30925 + C30926) * C17571 +
                   (C30927 + C30928 + C30929) * C31613 +
                   (C25377 + C25378 + C25379) * C32680 +
                   (C25380 + C25381 + C25382) * C31599 +
                   (C25370 + C25369 + C25368) * C32673 +
                   (C25367 + C25366 + C25365) * C31607) *
                      C32533 * C32592 * C249 +
                  (C30922 * C31607 + C30923 * C32673 +
                   (C30929 + C30928 + C30927) * C31599 +
                   (C30926 + C30925 + C30924) * C32680 +
                   (C31694 * C1014 + C32715 * C1023 + C31686 * C6402 +
                    C32722 * C6406 + C31700 * C6404 + C24241 * C6409) *
                       C31613 +
                   (C31694 * C1024 + C32715 * C1032 + C31686 * C6405 +
                    C32722 * C6411 + C31700 * C6410 + C24241 * C6413) *
                       C17571) *
                      C32533 * C32592 * C250) *
                 C32566) /
                    (p * q * std::sqrt(p + q));
    d2ee[35] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C20430 * C115 + C20428 * C122 + C20431 * C361 + C32719 * C376) *
                C15791 +
            (C20430 * C123 + C20428 * C136 + C20431 * C375 + C32719 * C391) *
                C32946 +
            (C21499 + C21500) * C15792 + (C21501 + C21502) * C32942 +
            C21515 * C15793 + C21516 * C32932 + C27378 * C15794 +
            C27379 * C32914) *
               C32533 * C32592 * C479 -
           ((C27388 + C27389) * C32914 + (C27390 + C27391) * C15794 +
            (C21511 + C21512) * C32932 + (C21513 + C21514) * C15793 +
            (C21506 + C21505) * C32942 + (C21504 + C21503) * C15792 +
            (C21502 + C21501) * C32946 + (C21500 + C21499) * C15791) *
               C32533 * C32592 * C480) *
              C481 +
          ((C21857 * C15791 + C21858 * C32946 + C21481 * C15792 +
            C21482 * C32942 + (C21510 + C21509) * C15793 +
            (C21508 + C21507) * C32932 +
            (C20430 * C1015 + C20428 * C1025 + C20431 * C6588 +
             C32719 * C6589) *
                C15794 +
            (C20430 * C1026 + C20428 * C1033 + C20431 * C6590 +
             C32719 * C6591) *
                C32914) *
               C32533 * C32592 * C480 -
           ((C21507 + C21508) * C32914 + (C21509 + C21510) * C15794 +
            C21859 * C32932 + C21860 * C15793 + C21861 * C32942 +
            C21862 * C15792 + (C20468 + C20467) * C32946 +
            (C20466 + C20465) * C15791) *
               C32533 * C32592 * C479) *
              C482)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C20430 * C115 + C20428 * C122 + C20431 * C361 + C32719 * C376) *
                 C15053 +
             (C20430 * C123 + C20428 * C136 + C20431 * C375 + C32719 * C391) *
                 C15047 +
             (C21499 + C21500) * C15054 + (C21501 + C21502) * C32677) *
                C32936 +
            ((C20465 + C20466) * C15053 + (C20467 + C20468) * C15047 +
             C21857 * C15054 + C21858 * C32677) *
                C32923 +
            C26307 * C32893) *
               C32592 * C479 -
           (((C21315 + C21316) * C32677 + (C21317 + C21318) * C15054 +
             C23728 * C15047 + C23729 * C15053) *
                C32893 +
            (C21859 * C32677 + C21860 * C15054 + C21861 * C15047 +
             C21862 * C15053) *
                C32923 +
            ((C21506 + C21505) * C32677 + (C21504 + C21503) * C15054 +
             (C21502 + C21501) * C15047 + (C21500 + C21499) * C15053) *
                C32936) *
               C32592 * C480) *
              C481 +
          (((C21857 * C15053 + C21858 * C15047 + C21481 * C15054 +
             C21482 * C32677) *
                C32936 +
            (C23235 * C15053 + C23236 * C15047 + (C21318 + C21317) * C15054 +
             (C21316 + C21315) * C32677) *
                C32923 +
            ((C20844 + C20843) * C15053 + (C20842 + C20841) * C15047 +
             (C20430 * C260 + C20428 * C278 + C20431 * C1519 + C32719 * C1520) *
                 C15054 +
             (C20430 * C279 + C20428 * C290 + C20431 * C1521 + C32719 * C1522) *
                 C32677) *
                C32893) *
               C32592 * C480 -
           (((C20841 + C20842) * C32677 + (C20843 + C20844) * C15054 +
             (C20476 + C20475) * C15047 + (C20474 + C20473) * C15053) *
                C32893 +
            (C23728 * C32677 + C23729 * C15054 + (C20472 + C20471) * C15047 +
             (C20470 + C20469) * C15053) *
                C32923 +
            (C21861 * C32677 + C21862 * C15054 + (C20468 + C20467) * C15047 +
             (C20466 + C20465) * C15053) *
                C32936) *
               C32592 * C479) *
              C482)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C22400 * C115 + C32947 * C122 + C22401 * C361 + C32944 * C376 +
             C22402 * C362 + C32935 * C377 + C22403 * C2128 + C32920 * C2137) *
                C15053 +
            (C22400 * C123 + C32947 * C136 + C22401 * C375 + C32944 * C391 +
             C22402 * C378 + C32935 * C392 + C22403 * C2136 + C32920 * C2146) *
                C15047 +
            (C28120 + C28121 + C28122 + C28123) * C15054 +
            (C28124 + C28125 + C28126 + C28127) * C32677) *
               C32533 * C32592 * C479 -
           ((C28128 + C28129 + C28130 + C28131) * C32677 +
            (C28132 + C28133 + C28134 + C28135) * C15054 +
            (C28127 + C28126 + C28125 + C28124) * C15047 +
            (C28123 + C28122 + C28121 + C28120) * C15053) *
               C32533 * C32592 * C480) *
              C481 +
          (((C22802 + C22801 + C22800 + C22799) * C15053 +
            (C22798 + C22797 + C22796 + C22795) * C15047 +
            (C22400 * C258 + C32947 * C274 + C22401 * C1176 + C32944 * C1187 +
             C22402 * C1181 + C32935 * C1196 + C22403 * C7404 +
             C32920 * C7405) *
                C15054 +
            (C22400 * C275 + C32947 * C288 + C22401 * C1186 + C32944 * C1203 +
             C22402 * C1197 + C32935 * C1208 + C22403 * C7406 +
             C32920 * C7407) *
                C32677) *
               C32533 * C32592 * C480 -
           ((C22795 + C22796 + C22797 + C22798) * C32677 +
            (C22799 + C22800 + C22801 + C22802) * C15054 +
            (C22444 + C22443 + C22442 + C22441) * C15047 +
            (C22440 + C22439 + C22438 + C22437) * C15053) *
               C32533 * C32592 * C479) *
              C482)) /
            (p * q * std::sqrt(p + q));
    d2ee[36] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C20430 * C115 + C20428 * C122 + C20431 * C361 + C32719 * C376) *
                C15791 +
            (C20430 * C123 + C20428 * C136 + C20431 * C375 + C32719 * C391) *
                C32946 +
            (C21499 + C21500) * C15792 + (C21501 + C21502) * C32942 +
            C21515 * C15793 + C21516 * C32932 + C27378 * C15794 +
            C27379 * C32914) *
               C32533 * C601 -
           ((C27888 + C27889) * C32914 + (C27890 + C27891) * C15794 +
            (C22291 + C22292) * C32932 + (C22293 + C22294) * C15793 +
            (C22295 + C22296) * C32942 + (C22297 + C22298) * C15792 +
            (C20431 * C378 + C32719 * C392 + C20430 * C375 + C20428 * C391) *
                C32946 +
            (C20431 * C362 + C32719 * C377 + C20430 * C361 + C20428 * C376) *
                C15791) *
               C32533 * C602) *
              C479 +
          (((C22298 + C22297) * C15791 + (C22296 + C22295) * C32946 +
            (C22294 + C22293) * C15792 + (C22292 + C22291) * C32942 +
            (C27891 + C27890) * C15793 + (C27889 + C27888) * C32932 +
            (C20430 * C6402 + C20428 * C6406 + C20431 * C6404 +
             C32719 * C6409) *
                C15794 +
            (C20430 * C6405 + C20428 * C6411 + C20431 * C6410 +
             C32719 * C6413) *
                C32914) *
               C32533 * C602 -
           ((C27388 + C27389) * C32914 + (C27390 + C27391) * C15794 +
            (C21511 + C21512) * C32932 + (C21513 + C21514) * C15793 +
            (C21506 + C21505) * C32942 + (C21504 + C21503) * C15792 +
            (C21502 + C21501) * C32946 + (C21500 + C21499) * C15791) *
               C32533 * C601) *
              C480) *
         C32566) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C20430 * C115 + C20428 * C122 + C20431 * C361 + C32719 * C376) *
                 C15053 +
             (C20430 * C123 + C20428 * C136 + C20431 * C375 + C32719 * C391) *
                 C15047 +
             (C21499 + C21500) * C15054 + (C21501 + C21502) * C32677) *
                C32936 +
            ((C20465 + C20466) * C15053 + (C20467 + C20468) * C15047 +
             C21857 * C15054 + C21858 * C32677) *
                C32923 +
            C26307 * C32893) *
               C601 -
           (((C23932 + C23933) * C32677 + (C23934 + C23935) * C15054 +
             (C21011 + C21012) * C15047 + (C21013 + C21014) * C15053) *
                C32893 +
            ((C22077 + C22078) * C32677 + (C22079 + C22080) * C15054 +
             (C21015 + C21016) * C15047 + (C21017 + C21018) * C15053) *
                C32923 +
            ((C22295 + C22296) * C32677 + (C22297 + C22298) * C15054 +
             (C20431 * C378 + C32719 * C392 + C20430 * C375 + C20428 * C391) *
                 C15047 +
             (C20431 * C362 + C32719 * C377 + C20430 * C361 + C20428 * C376) *
                 C15053) *
                C32936) *
               C602) *
              C479 +
          ((((C22298 + C22297) * C15053 + (C22296 + C22295) * C15047 +
             (C22294 + C22293) * C15054 + (C22292 + C22291) * C32677) *
                C32936 +
            ((C22080 + C22079) * C15053 + (C22078 + C22077) * C15047 +
             (C22076 + C22075) * C15054 + (C22074 + C22073) * C32677) *
                C32923 +
            ((C23935 + C23934) * C15053 + (C23933 + C23932) * C15047 +
             (C20430 * C1175 + C20428 * C1185 + C20431 * C1183 +
              C32719 * C1200) *
                 C15054 +
             (C20430 * C1184 + C20428 * C1202 + C20431 * C1201 +
              C32719 * C1210) *
                 C32677) *
                C32893) *
               C602 -
           (((C21315 + C21316) * C32677 + (C21317 + C21318) * C15054 +
             C23728 * C15047 + C23729 * C15053) *
                C32893 +
            (C21859 * C32677 + C21860 * C15054 + C21861 * C15047 +
             C21862 * C15053) *
                C32923 +
            ((C21506 + C21505) * C32677 + (C21504 + C21503) * C15054 +
             (C21502 + C21501) * C15047 + (C21500 + C21499) * C15053) *
                C32936) *
               C601) *
              C480) *
         C32566) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C22400 * C115 + C32947 * C122 + C22401 * C361 + C32944 * C376 +
             C22402 * C362 + C32935 * C377 + C22403 * C2128 + C32920 * C2137) *
                C15053 +
            (C22400 * C123 + C32947 * C136 + C22401 * C375 + C32944 * C391 +
             C22402 * C378 + C32935 * C392 + C22403 * C2136 + C32920 * C2146) *
                C15047 +
            (C28120 + C28121 + C28122 + C28123) * C15054 +
            (C28124 + C28125 + C28126 + C28127) * C32677) *
               C32533 * C601 -
           ((C28640 + C28641 + C28642 + C28643) * C32677 +
            (C28644 + C28645 + C28646 + C28647) * C15054 +
            (C22403 * C2139 + C32920 * C2147 + C22402 * C2136 + C32935 * C2146 +
             C22401 * C378 + C32944 * C392 + C22400 * C375 + C32947 * C391) *
                C15047 +
            (C22403 * C2129 + C32920 * C2138 + C22402 * C2128 + C32935 * C2137 +
             C22401 * C362 + C32944 * C377 + C22400 * C361 + C32947 * C376) *
                C15053) *
               C32533 * C602) *
              C479 +
          (((C28647 + C28646 + C28645 + C28644) * C15053 +
            (C28643 + C28642 + C28641 + C28640) * C15047 +
            (C22400 * C1177 + C32947 * C1189 + C22401 * C1179 + C32944 * C1192 +
             C22402 * C7078 + C32935 * C7082 + C22403 * C7080 +
             C32920 * C7085) *
                C15054 +
            (C22400 * C1188 + C32947 * C1204 + C22401 * C1193 + C32944 * C1206 +
             C22402 * C7081 + C32935 * C7087 + C22403 * C7086 +
             C32920 * C7089) *
                C32677) *
               C32533 * C602 -
           ((C28128 + C28129 + C28130 + C28131) * C32677 +
            (C28132 + C28133 + C28134 + C28135) * C15054 +
            (C28127 + C28126 + C28125 + C28124) * C15047 +
            (C28123 + C28122 + C28121 + C28120) * C15053) *
               C32533 * C601) *
              C480) *
         C32566) /
            (p * q * std::sqrt(p + q));
    d2ee[37] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C20430 * C115 + C20428 * C122 + C20431 * C361 +
                 C32719 * C376) *
                    C15053 +
                (C20430 * C123 + C20428 * C136 + C20431 * C375 +
                 C32719 * C391) *
                    C15047 +
                (C21499 + C21500) * C15054 + (C21501 + C21502) * C32677) *
                   C32936 +
               ((C20465 + C20466) * C15053 + (C20467 + C20468) * C15047 +
                C21857 * C15054 + C21858 * C32677) *
                   C32923 +
               C26307 * C32893) *
                  C32592 * C32578 * C110 -
              (((C20841 + C20842) * C32677 + (C20843 + C20844) * C15054 +
                (C20476 + C20475) * C15047 + (C20474 + C20473) * C15053) *
                   C32893 +
               (C23728 * C32677 + C23729 * C15054 + (C20472 + C20471) * C15047 +
                (C20470 + C20469) * C15053) *
                   C32923 +
               (C21861 * C32677 + C21862 * C15054 + (C20468 + C20467) * C15047 +
                (C20466 + C20465) * C15053) *
                   C32936) *
                  C32592 * C32578 * C111 +
              (C26307 * C32936 +
               (C20483 * C15053 + C20484 * C15047 + (C20844 + C20843) * C15054 +
                (C20842 + C20841) * C32677) *
                   C32923 +
               ((C20480 + C20479) * C15053 + (C20478 + C20477) * C15047 +
                (C20430 * C252 + C20428 * C263 + C20431 * C725 +
                 C32719 * C734) *
                    C15054 +
                (C20430 * C262 + C20428 * C282 + C20431 * C735 +
                 C32719 * C740) *
                    C32677) *
                   C32893) *
                  C32592 * C32578 * C112) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C20430 * C115 + C20428 * C122 + C20431 * C361 +
                 C32719 * C376) *
                    C15053 +
                (C20430 * C123 + C20428 * C136 + C20431 * C375 +
                 C32719 * C391) *
                    C15047 +
                (C21499 + C21500) * C15054 + (C21501 + C21502) * C32677) *
                   C32936 +
               ((C20465 + C20466) * C15053 + (C20467 + C20468) * C15047 +
                C21857 * C15054 + C21858 * C32677) *
                   C32923 +
               C26307 * C32893) *
                  C32592 * C248 -
              (((C21315 + C21316) * C32677 + (C21317 + C21318) * C15054 +
                C23728 * C15047 + C23729 * C15053) *
                   C32893 +
               (C21859 * C32677 + C21860 * C15054 + C21861 * C15047 +
                C21862 * C15053) *
                   C32923 +
               ((C21506 + C21505) * C32677 + (C21504 + C21503) * C15054 +
                (C21502 + C21501) * C15047 + (C21500 + C21499) * C15053) *
                   C32936) *
                  C32592 * C249 +
              ((C21515 * C15053 + C21516 * C15047 + (C21514 + C21513) * C15054 +
                (C21512 + C21511) * C32677) *
                   C32936 +
               (C21481 * C15053 + C21482 * C15047 + (C21510 + C21509) * C15054 +
                (C21508 + C21507) * C32677) *
                   C32923 +
               ((C21318 + C21317) * C15053 + (C21316 + C21315) * C15047 +
                (C20430 * C1011 + C20428 * C1018 + C20431 * C1707 +
                 C32719 * C1712) *
                    C15054 +
                (C20430 * C1017 + C20428 * C1029 + C20431 * C1713 +
                 C32719 * C1716) *
                    C32677) *
                   C32893) *
                  C32592 * C250) *
             C32566) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C20430 * C115 + C20428 * C122 + C20431 * C361 + C32719 * C376) *
                C15053 +
            (C20430 * C123 + C20428 * C136 + C20431 * C375 + C32719 * C391) *
                C15047 +
            (C21499 + C21500) * C15054 + (C21501 + C21502) * C32677) *
               C32936 +
           ((C20465 + C20466) * C15053 + (C20467 + C20468) * C15047 +
            C21857 * C15054 + C21858 * C32677) *
               C32923 +
           C26307 * C32893) *
              C354 -
          (((C23932 + C23933) * C32677 + (C23934 + C23935) * C15054 +
            (C21011 + C21012) * C15047 + (C21013 + C21014) * C15053) *
               C32893 +
           ((C22077 + C22078) * C32677 + (C22079 + C22080) * C15054 +
            (C21015 + C21016) * C15047 + (C21017 + C21018) * C15053) *
               C32923 +
           ((C22295 + C22296) * C32677 + (C22297 + C22298) * C15054 +
            (C20431 * C378 + C32719 * C392 + C20430 * C375 + C20428 * C391) *
                C15047 +
            (C20431 * C362 + C32719 * C377 + C20430 * C361 + C20428 * C376) *
                C15053) *
               C32936) *
              C355 +
          (((C20430 * C362 + C20428 * C377 + C20431 * C2128 + C32719 * C2137) *
                C15053 +
            (C20430 * C378 + C20428 * C392 + C20431 * C2136 + C32719 * C2146) *
                C15047 +
            (C20430 * C1178 + C20428 * C1190 + C20431 * C2668 +
             C32719 * C2671) *
                C15054 +
            (C20430 * C1191 + C20428 * C1205 + C20431 * C2672 +
             C32719 * C2677) *
                C32677) *
               C32936 +
           ((C20430 * C363 + C20428 * C379 + C20431 * C2127 + C32719 * C2135) *
                C15053 +
            (C20430 * C380 + C20428 * C393 + C20431 * C2134 + C32719 * C2145) *
                C15047 +
            (C20430 * C1180 + C20428 * C1194 + C20431 * C2669 +
             C32719 * C2673) *
                C15054 +
            (C20430 * C1195 + C20428 * C1207 + C20431 * C2674 +
             C32719 * C2678) *
                C32677) *
               C32923 +
           ((C20430 * C364 + C20428 * C381 + C20431 * C2126 + C32719 * C2133) *
                C15053 +
            (C20430 * C382 + C20428 * C394 + C20431 * C2132 + C32719 * C2144) *
                C15047 +
            (C20430 * C1182 + C20428 * C1198 + C20431 * C2670 +
             C32719 * C2675) *
                C15054 +
            (C20430 * C1199 + C20428 * C1209 + C20431 * C2676 +
             C32719 * C2679) *
                C32677) *
               C32893) *
              C356) *
         C32578 * C32566) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C20430 * C115 + C20428 * C122 + C20431 * C361 + C32719 * C376) *
               C15791 +
           (C20430 * C123 + C20428 * C136 + C20431 * C375 + C32719 * C391) *
               C32946 +
           (C21499 + C21500) * C15792 + (C21501 + C21502) * C32942 +
           C21515 * C15793 + C21516 * C32932 + (C21514 + C21513) * C15794 +
           (C21512 + C21511) * C32914) *
              C32533 * C32592 * C32578 * C110 -
          ((C21507 + C21508) * C32914 + (C21509 + C21510) * C15794 +
           C21859 * C32932 + C21860 * C15793 + C21861 * C32942 +
           C21862 * C15792 + (C20468 + C20467) * C32946 +
           (C20466 + C20465) * C15791) *
              C32533 * C32592 * C32578 * C111 +
          (C20481 * C15791 + C20482 * C32946 + C23235 * C15792 +
           C23236 * C32942 + (C21318 + C21317) * C15793 +
           (C21316 + C21315) * C32932 +
           (C20430 * C1011 + C20428 * C1018 + C20431 * C1707 + C32719 * C1712) *
               C15794 +
           (C20430 * C1017 + C20428 * C1029 + C20431 * C1713 + C32719 * C1716) *
               C32914) *
              C32533 * C32592 * C32578 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C20430 * C115 + C20428 * C122 + C20431 * C361 + C32719 * C376) *
               C15791 +
           (C20430 * C123 + C20428 * C136 + C20431 * C375 + C32719 * C391) *
               C32946 +
           (C21499 + C21500) * C15792 + (C21501 + C21502) * C32942 +
           C21515 * C15793 + C21516 * C32932 + C27378 * C15794 +
           C27379 * C32914) *
              C32533 * C32592 * C248 -
          ((C27388 + C27389) * C32914 + (C27390 + C27391) * C15794 +
           (C21511 + C21512) * C32932 + (C21513 + C21514) * C15793 +
           (C21506 + C21505) * C32942 + (C21504 + C21503) * C15792 +
           (C21502 + C21501) * C32946 + (C21500 + C21499) * C15791) *
              C32533 * C32592 * C249 +
          (C21515 * C15791 + C21516 * C32946 + C27378 * C15792 +
           C27379 * C32942 + (C27391 + C27390) * C15793 +
           (C27389 + C27388) * C32932 +
           (C20430 * C6320 + C20428 * C6323 + C20431 * C6674 + C32719 * C6675) *
               C15794 +
           (C20430 * C6322 + C20428 * C6326 + C20431 * C6676 + C32719 * C6677) *
               C32914) *
              C32533 * C32592 * C250) *
         C32566) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C20430 * C115 + C20428 * C122 + C20431 * C361 + C32719 * C376) *
               C15791 +
           (C20430 * C123 + C20428 * C136 + C20431 * C375 + C32719 * C391) *
               C32946 +
           (C21499 + C21500) * C15792 + (C21501 + C21502) * C32942 +
           C21515 * C15793 + C21516 * C32932 + C27378 * C15794 +
           C27379 * C32914) *
              C32533 * C354 -
          ((C20431 * C6408 + C32719 * C6412 + C20430 * C1709 + C20428 * C1714) *
               C32914 +
           (C20431 * C6403 + C32719 * C6407 + C20430 * C1705 + C20428 * C1708) *
               C15794 +
           (C22291 + C22292) * C32932 + (C22293 + C22294) * C15793 +
           (C22295 + C22296) * C32942 + (C22297 + C22298) * C15792 +
           (C20431 * C378 + C32719 * C392 + C20430 * C375 + C20428 * C391) *
               C32946 +
           (C20431 * C362 + C32719 * C377 + C20430 * C361 + C20428 * C376) *
               C15791) *
              C32533 * C355 +
          ((C20430 * C362 + C20428 * C377 + C20431 * C2128 + C32719 * C2137) *
               C15791 +
           (C20430 * C378 + C20428 * C392 + C20431 * C2136 + C32719 * C2146) *
               C32946 +
           (C20430 * C1178 + C20428 * C1190 + C20431 * C2668 + C32719 * C2671) *
               C15792 +
           (C20430 * C1191 + C20428 * C1205 + C20431 * C2672 + C32719 * C2677) *
               C32942 +
           (C20430 * C1179 + C20428 * C1192 + C20431 * C7078 + C32719 * C7082) *
               C15793 +
           (C20430 * C1193 + C20428 * C1206 + C20431 * C7081 + C32719 * C7087) *
               C32932 +
           (C20430 * C6403 + C20428 * C6407 + C20431 * C7554 + C32719 * C7555) *
               C15794 +
           (C20430 * C6408 + C20428 * C6412 + C20431 * C7556 + C32719 * C7557) *
               C32914) *
              C32533 * C356) *
         C32578 * C32566) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C22400 * C115 + C32947 * C122 + C22401 * C361 + C32944 * C376 +
            C22402 * C362 + C32935 * C377 + C22403 * C2128 + C32920 * C2137) *
               C15053 +
           (C22400 * C123 + C32947 * C136 + C22401 * C375 + C32944 * C391 +
            C22402 * C378 + C32935 * C392 + C22403 * C2136 + C32920 * C2146) *
               C15047 +
           (C22400 * C256 + C32947 * C271 + C22401 * C721 + C32944 * C726 +
            C22402 * C1178 + C32935 * C1190 + C22403 * C2668 + C32920 * C2671) *
               C15054 +
           (C22400 * C270 + C32947 * C286 + C22401 * C727 + C32944 * C736 +
            C22402 * C1191 + C32935 * C1205 + C22403 * C2672 + C32920 * C2677) *
               C32677) *
              C32533 * C32592 * C32578 * C110 -
          ((C22795 + C22796 + C22797 + C22798) * C32677 +
           (C22799 + C22800 + C22801 + C22802) * C15054 +
           (C22444 + C22443 + C22442 + C22441) * C15047 +
           (C22440 + C22439 + C22438 + C22437) * C15053) *
              C32533 * C32592 * C32578 * C111 +
          ((C22452 + C22451 + C22450 + C22449) * C15053 +
           (C22448 + C22447 + C22446 + C22445) * C15047 +
           (C22400 * C254 + C32947 * C267 + C22401 * C723 + C32944 * C730 +
            C22402 * C1182 + C32935 * C1198 + C22403 * C2670 + C32920 * C2675) *
               C15054 +
           (C22400 * C266 + C32947 * C284 + C22401 * C731 + C32944 * C738 +
            C22402 * C1199 + C32935 * C1209 + C22403 * C2676 + C32920 * C2679) *
               C32677) *
              C32533 * C32592 * C32578 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C22400 * C115 + C32947 * C122 + C22401 * C361 + C32944 * C376 +
            C22402 * C362 + C32935 * C377 + C22403 * C2128 + C32920 * C2137) *
               C15053 +
           (C22400 * C123 + C32947 * C136 + C22401 * C375 + C32944 * C391 +
            C22402 * C378 + C32935 * C392 + C22403 * C2136 + C32920 * C2146) *
               C15047 +
           (C28120 + C28121 + C28122 + C28123) * C15054 +
           (C28124 + C28125 + C28126 + C28127) * C32677) *
              C32533 * C32592 * C248 -
          ((C28128 + C28129 + C28130 + C28131) * C32677 +
           (C28132 + C28133 + C28134 + C28135) * C15054 +
           (C28127 + C28126 + C28125 + C28124) * C15047 +
           (C28123 + C28122 + C28121 + C28120) * C15053) *
              C32533 * C32592 * C249 +
          ((C28135 + C28134 + C28133 + C28132) * C15053 +
           (C28131 + C28130 + C28129 + C28128) * C15047 +
           (C22400 * C1013 + C32947 * C1022 + C22401 * C1705 + C32944 * C1708 +
            C22402 * C6403 + C32935 * C6407 + C22403 * C7554 + C32920 * C7555) *
               C15054 +
           (C22400 * C1021 + C32947 * C1031 + C22401 * C1709 + C32944 * C1714 +
            C22402 * C6408 + C32935 * C6412 + C22403 * C7556 + C32920 * C7557) *
               C32677) *
              C32533 * C32592 * C250) *
         C32566) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C22400 * C115 + C32947 * C122 + C22401 * C361 + C32944 * C376 +
            C22402 * C362 + C32935 * C377 + C22403 * C2128 + C32920 * C2137) *
               C15053 +
           (C22400 * C123 + C32947 * C136 + C22401 * C375 + C32944 * C391 +
            C22402 * C378 + C32935 * C392 + C22403 * C2136 + C32920 * C2146) *
               C15047 +
           (C28120 + C28121 + C28122 + C28123) * C15054 +
           (C28124 + C28125 + C28126 + C28127) * C32677) *
              C32533 * C354 -
          ((C22403 * C7084 + C32920 * C7088 + C22402 * C2672 + C32935 * C2677 +
            C22401 * C1191 + C32944 * C1205 + C22400 * C727 + C32947 * C736) *
               C32677 +
           (C22403 * C7079 + C32920 * C7083 + C22402 * C2668 + C32935 * C2671 +
            C22401 * C1178 + C32944 * C1190 + C22400 * C721 + C32947 * C726) *
               C15054 +
           (C22403 * C2139 + C32920 * C2147 + C22402 * C2136 + C32935 * C2146 +
            C22401 * C378 + C32944 * C392 + C22400 * C375 + C32947 * C391) *
               C15047 +
           (C22403 * C2129 + C32920 * C2138 + C22402 * C2128 + C32935 * C2137 +
            C22401 * C362 + C32944 * C377 + C22400 * C361 + C32947 * C376) *
               C15053) *
              C32533 * C355 +
          ((C22400 * C362 + C32947 * C377 + C22401 * C2128 + C32944 * C2137 +
            C22402 * C2129 + C32935 * C2138 + C22403 * C12093 +
            C32920 * C12096) *
               C15053 +
           (C22400 * C378 + C32947 * C392 + C22401 * C2136 + C32944 * C2146 +
            C22402 * C2139 + C32935 * C2147 + C22403 * C12095 +
            C32920 * C12099) *
               C15047 +
           (C22400 * C1178 + C32947 * C1190 + C22401 * C2668 + C32944 * C2671 +
            C22402 * C7079 + C32935 * C7083 + C22403 * C12355 +
            C32920 * C12356) *
               C15054 +
           (C22400 * C1191 + C32947 * C1205 + C22401 * C2672 + C32944 * C2677 +
            C22402 * C7084 + C32935 * C7088 + C22403 * C12357 +
            C32920 * C12358) *
               C32677) *
              C32533 * C356) *
         C32578 * C32566) /
            (p * q * std::sqrt(p + q));
    d2ee[38] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C20430 * C115 + C20428 * C122 + C20431 * C361 + C32719 * C376) *
                C15791 +
            (C20430 * C123 + C20428 * C136 + C20431 * C375 + C32719 * C391) *
                C32946 +
            (C21499 + C21500) * C15792 + (C21501 + C21502) * C32942 +
            C21515 * C15793 + C21516 * C32932 + C27378 * C15794 +
            C27379 * C32914) *
               C32533 * C601 -
           ((C20431 * C6408 + C32719 * C6412 + C20430 * C1709 +
             C20428 * C1714) *
                C32914 +
            (C20431 * C6403 + C32719 * C6407 + C20430 * C1705 +
             C20428 * C1708) *
                C15794 +
            (C22291 + C22292) * C32932 + (C22293 + C22294) * C15793 +
            (C22295 + C22296) * C32942 + (C22297 + C22298) * C15792 +
            (C20431 * C378 + C32719 * C392 + C20430 * C375 + C20428 * C391) *
                C32946 +
            (C20431 * C362 + C32719 * C377 + C20430 * C361 + C20428 * C376) *
                C15791) *
               C32533 * C602) *
              C32578 * C481 +
          (((C21018 + C21017) * C15791 + (C21016 + C21015) * C32946 +
            (C22080 + C22079) * C15792 + (C22078 + C22077) * C32942 +
            (C22076 + C22075) * C15793 + (C22074 + C22073) * C32932 +
            (C20430 * C1706 + C20428 * C1710 + C20431 * C7236 +
             C32719 * C7237) *
                C15794 +
            (C20430 * C1711 + C20428 * C1715 + C20431 * C7238 +
             C32719 * C7239) *
                C32914) *
               C32533 * C602 -
           ((C21507 + C21508) * C32914 + (C21509 + C21510) * C15794 +
            C21859 * C32932 + C21860 * C15793 + C21861 * C32942 +
            C21862 * C15792 + (C20468 + C20467) * C32946 +
            (C20466 + C20465) * C15791) *
               C32533 * C601) *
              C32578 * C482)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C20430 * C115 + C20428 * C122 + C20431 * C361 + C32719 * C376) *
                 C15053 +
             (C20430 * C123 + C20428 * C136 + C20431 * C375 + C32719 * C391) *
                 C15047 +
             (C21499 + C21500) * C15054 + (C21501 + C21502) * C32677) *
                C32936 +
            ((C20465 + C20466) * C15053 + (C20467 + C20468) * C15047 +
             C21857 * C15054 + C21858 * C32677) *
                C32923 +
            C26307 * C32893) *
               C601 -
           (((C23932 + C23933) * C32677 + (C23934 + C23935) * C15054 +
             (C21011 + C21012) * C15047 + (C21013 + C21014) * C15053) *
                C32893 +
            ((C22077 + C22078) * C32677 + (C22079 + C22080) * C15054 +
             (C21015 + C21016) * C15047 + (C21017 + C21018) * C15053) *
                C32923 +
            ((C22295 + C22296) * C32677 + (C22297 + C22298) * C15054 +
             (C20431 * C378 + C32719 * C392 + C20430 * C375 + C20428 * C391) *
                 C15047 +
             (C20431 * C362 + C32719 * C377 + C20430 * C361 + C20428 * C376) *
                 C15053) *
                C32936) *
               C602) *
              C32578 * C481 +
          ((((C21018 + C21017) * C15053 + (C21016 + C21015) * C15047 +
             (C22080 + C22079) * C15054 + (C22078 + C22077) * C32677) *
                C32936 +
            ((C21014 + C21013) * C15053 + (C21012 + C21011) * C15047 +
             (C23935 + C23934) * C15054 + (C23933 + C23932) * C32677) *
                C32923 +
            ((C21010 + C21009) * C15053 + (C21008 + C21007) * C15047 +
             (C20430 * C724 + C20428 * C732 + C20431 * C2296 + C32719 * C2297) *
                 C15054 +
             (C20430 * C733 + C20428 * C739 + C20431 * C2298 + C32719 * C2299) *
                 C32677) *
                C32893) *
               C602 -
           (((C20841 + C20842) * C32677 + (C20843 + C20844) * C15054 +
             (C20476 + C20475) * C15047 + (C20474 + C20473) * C15053) *
                C32893 +
            (C23728 * C32677 + C23729 * C15054 + (C20472 + C20471) * C15047 +
             (C20470 + C20469) * C15053) *
                C32923 +
            (C21861 * C32677 + C21862 * C15054 + (C20468 + C20467) * C15047 +
             (C20466 + C20465) * C15053) *
                C32936) *
               C601) *
              C32578 * C482)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C22400 * C115 + C32947 * C122 + C22401 * C361 + C32944 * C376 +
             C22402 * C362 + C32935 * C377 + C22403 * C2128 + C32920 * C2137) *
                C15053 +
            (C22400 * C123 + C32947 * C136 + C22401 * C375 + C32944 * C391 +
             C22402 * C378 + C32935 * C392 + C22403 * C2136 + C32920 * C2146) *
                C15047 +
            (C28120 + C28121 + C28122 + C28123) * C15054 +
            (C28124 + C28125 + C28126 + C28127) * C32677) *
               C32533 * C601 -
           ((C22403 * C7084 + C32920 * C7088 + C22402 * C2672 + C32935 * C2677 +
             C22401 * C1191 + C32944 * C1205 + C22400 * C727 + C32947 * C736) *
                C32677 +
            (C22403 * C7079 + C32920 * C7083 + C22402 * C2668 + C32935 * C2671 +
             C22401 * C1178 + C32944 * C1190 + C22400 * C721 + C32947 * C726) *
                C15054 +
            (C22403 * C2139 + C32920 * C2147 + C22402 * C2136 + C32935 * C2146 +
             C22401 * C378 + C32944 * C392 + C22400 * C375 + C32947 * C391) *
                C15047 +
            (C22403 * C2129 + C32920 * C2138 + C22402 * C2128 + C32935 * C2137 +
             C22401 * C362 + C32944 * C377 + C22400 * C361 + C32947 * C376) *
                C15053) *
               C32533 * C602) *
              C32578 * C481 +
          (((C22956 + C22955 + C22954 + C22953) * C15053 +
            (C22952 + C22951 + C22950 + C22949) * C15047 +
            (C22400 * C722 + C32947 * C728 + C22401 * C1180 + C32944 * C1194 +
             C22402 * C2669 + C32935 * C2673 + C22403 * C12183 +
             C32920 * C12184) *
                C15054 +
            (C22400 * C729 + C32947 * C737 + C22401 * C1195 + C32944 * C1207 +
             C22402 * C2674 + C32935 * C2678 + C22403 * C12185 +
             C32920 * C12186) *
                C32677) *
               C32533 * C602 -
           ((C22795 + C22796 + C22797 + C22798) * C32677 +
            (C22799 + C22800 + C22801 + C22802) * C15054 +
            (C22444 + C22443 + C22442 + C22441) * C15047 +
            (C22440 + C22439 + C22438 + C22437) * C15053) *
               C32533 * C601) *
              C32578 * C482)) /
            (p * q * std::sqrt(p + q));
    d2ee[39] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C20430 * C115 + C20428 * C122 + C20431 * C361 + C32719 * C376) *
                C15053 +
            (C20430 * C123 + C20428 * C136 + C20431 * C375 + C32719 * C391) *
                C15047 +
            (C21499 + C21500) * C15054 + (C21501 + C21502) * C32677) *
               C32936 +
           ((C20465 + C20466) * C15053 + (C20467 + C20468) * C15047 +
            C21857 * C15054 + C21858 * C32677) *
               C32923 +
           C26307 * C32893) *
              C32592 * C248 -
          (((C21315 + C21316) * C32677 + (C21317 + C21318) * C15054 +
            C23728 * C15047 + C23729 * C15053) *
               C32893 +
           (C21859 * C32677 + C21860 * C15054 + C21861 * C15047 +
            C21862 * C15053) *
               C32923 +
           ((C21506 + C21505) * C32677 + (C21504 + C21503) * C15054 +
            (C21502 + C21501) * C15047 + (C21500 + C21499) * C15053) *
               C32936) *
              C32592 * C249 +
          ((C21515 * C15053 + C21516 * C15047 + (C21514 + C21513) * C15054 +
            (C21512 + C21511) * C32677) *
               C32936 +
           (C21481 * C15053 + C21482 * C15047 + (C21510 + C21509) * C15054 +
            (C21508 + C21507) * C32677) *
               C32923 +
           ((C21318 + C21317) * C15053 + (C21316 + C21315) * C15047 +
            (C20430 * C1011 + C20428 * C1018 + C20431 * C1707 +
             C32719 * C1712) *
                C15054 +
            (C20430 * C1017 + C20428 * C1029 + C20431 * C1713 +
             C32719 * C1716) *
                C32677) *
               C32893) *
              C32592 * C250) *
         C32566) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C20430 * C115 + C20428 * C122 + C20431 * C361 + C32719 * C376) *
                C15053 +
            (C20430 * C123 + C20428 * C136 + C20431 * C375 + C32719 * C391) *
                C15047 +
            (C21499 + C21500) * C15054 + (C21501 + C21502) * C32677) *
               C32936 +
           ((C20465 + C20466) * C15053 + (C20467 + C20468) * C15047 +
            C21857 * C15054 + C21858 * C32677) *
               C32923 +
           C26307 * C32893) *
              C32592 * C32578 * C110 -
          (((C20841 + C20842) * C32677 + (C20843 + C20844) * C15054 +
            (C20476 + C20475) * C15047 + (C20474 + C20473) * C15053) *
               C32893 +
           (C23728 * C32677 + C23729 * C15054 + (C20472 + C20471) * C15047 +
            (C20470 + C20469) * C15053) *
               C32923 +
           (C21861 * C32677 + C21862 * C15054 + (C20468 + C20467) * C15047 +
            (C20466 + C20465) * C15053) *
               C32936) *
              C32592 * C32578 * C111 +
          (C26307 * C32936 +
           (C20483 * C15053 + C20484 * C15047 + (C20844 + C20843) * C15054 +
            (C20842 + C20841) * C32677) *
               C32923 +
           ((C20480 + C20479) * C15053 + (C20478 + C20477) * C15047 +
            (C20430 * C252 + C20428 * C263 + C20431 * C725 + C32719 * C734) *
                C15054 +
            (C20430 * C262 + C20428 * C282 + C20431 * C735 + C32719 * C740) *
                C32677) *
               C32893) *
              C32592 * C32578 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C20430 * C115 + C20428 * C122 + C20431 * C361 + C32719 * C376) *
               C15791 +
           (C20430 * C123 + C20428 * C136 + C20431 * C375 + C32719 * C391) *
               C32946 +
           (C21499 + C21500) * C15792 + (C21501 + C21502) * C32942 +
           C21515 * C15793 + C21516 * C32932 + (C21514 + C21513) * C15794 +
           (C21512 + C21511) * C32914) *
              C32533 * C32592 * C32578 * C110 -
          ((C21507 + C21508) * C32914 + (C21509 + C21510) * C15794 +
           C21859 * C32932 + C21860 * C15793 + C21861 * C32942 +
           C21862 * C15792 + (C20468 + C20467) * C32946 +
           (C20466 + C20465) * C15791) *
              C32533 * C32592 * C32578 * C111 +
          (C20481 * C15791 + C20482 * C32946 + C23235 * C15792 +
           C23236 * C32942 + (C21318 + C21317) * C15793 +
           (C21316 + C21315) * C32932 +
           (C20430 * C1011 + C20428 * C1018 + C20431 * C1707 + C32719 * C1712) *
               C15794 +
           (C20430 * C1017 + C20428 * C1029 + C20431 * C1713 + C32719 * C1716) *
               C32914) *
              C32533 * C32592 * C32578 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C20430 * C115 + C20428 * C122 + C20431 * C361 + C32719 * C376) *
               C15791 +
           (C20430 * C123 + C20428 * C136 + C20431 * C375 + C32719 * C391) *
               C32946 +
           (C21499 + C21500) * C15792 + (C21501 + C21502) * C32942 +
           C21515 * C15793 + C21516 * C32932 + C27378 * C15794 +
           C27379 * C32914) *
              C32533 * C32592 * C248 -
          ((C27388 + C27389) * C32914 + (C27390 + C27391) * C15794 +
           (C21511 + C21512) * C32932 + (C21513 + C21514) * C15793 +
           (C21506 + C21505) * C32942 + (C21504 + C21503) * C15792 +
           (C21502 + C21501) * C32946 + (C21500 + C21499) * C15791) *
              C32533 * C32592 * C249 +
          (C21515 * C15791 + C21516 * C32946 + C27378 * C15792 +
           C27379 * C32942 + (C27391 + C27390) * C15793 +
           (C27389 + C27388) * C32932 +
           (C20430 * C6320 + C20428 * C6323 + C20431 * C6674 + C32719 * C6675) *
               C15794 +
           (C20430 * C6322 + C20428 * C6326 + C20431 * C6676 + C32719 * C6677) *
               C32914) *
              C32533 * C32592 * C250) *
         C32566) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C22400 * C115 + C32947 * C122 + C22401 * C361 + C32944 * C376 +
            C22402 * C362 + C32935 * C377 + C22403 * C2128 + C32920 * C2137) *
               C15053 +
           (C22400 * C123 + C32947 * C136 + C22401 * C375 + C32944 * C391 +
            C22402 * C378 + C32935 * C392 + C22403 * C2136 + C32920 * C2146) *
               C15047 +
           (C22400 * C256 + C32947 * C271 + C22401 * C721 + C32944 * C726 +
            C22402 * C1178 + C32935 * C1190 + C22403 * C2668 + C32920 * C2671) *
               C15054 +
           (C22400 * C270 + C32947 * C286 + C22401 * C727 + C32944 * C736 +
            C22402 * C1191 + C32935 * C1205 + C22403 * C2672 + C32920 * C2677) *
               C32677) *
              C32533 * C32592 * C32578 * C110 -
          ((C22795 + C22796 + C22797 + C22798) * C32677 +
           (C22799 + C22800 + C22801 + C22802) * C15054 +
           (C22444 + C22443 + C22442 + C22441) * C15047 +
           (C22440 + C22439 + C22438 + C22437) * C15053) *
              C32533 * C32592 * C32578 * C111 +
          ((C22452 + C22451 + C22450 + C22449) * C15053 +
           (C22448 + C22447 + C22446 + C22445) * C15047 +
           (C22400 * C254 + C32947 * C267 + C22401 * C723 + C32944 * C730 +
            C22402 * C1182 + C32935 * C1198 + C22403 * C2670 + C32920 * C2675) *
               C15054 +
           (C22400 * C266 + C32947 * C284 + C22401 * C731 + C32944 * C738 +
            C22402 * C1199 + C32935 * C1209 + C22403 * C2676 + C32920 * C2679) *
               C32677) *
              C32533 * C32592 * C32578 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C22400 * C115 + C32947 * C122 + C22401 * C361 + C32944 * C376 +
            C22402 * C362 + C32935 * C377 + C22403 * C2128 + C32920 * C2137) *
               C15053 +
           (C22400 * C123 + C32947 * C136 + C22401 * C375 + C32944 * C391 +
            C22402 * C378 + C32935 * C392 + C22403 * C2136 + C32920 * C2146) *
               C15047 +
           (C28120 + C28121 + C28122 + C28123) * C15054 +
           (C28124 + C28125 + C28126 + C28127) * C32677) *
              C32533 * C32592 * C248 -
          ((C28128 + C28129 + C28130 + C28131) * C32677 +
           (C28132 + C28133 + C28134 + C28135) * C15054 +
           (C28127 + C28126 + C28125 + C28124) * C15047 +
           (C28123 + C28122 + C28121 + C28120) * C15053) *
              C32533 * C32592 * C249 +
          ((C28135 + C28134 + C28133 + C28132) * C15053 +
           (C28131 + C28130 + C28129 + C28128) * C15047 +
           (C22400 * C1013 + C32947 * C1022 + C22401 * C1705 + C32944 * C1708 +
            C22402 * C6403 + C32935 * C6407 + C22403 * C7554 + C32920 * C7555) *
               C15054 +
           (C22400 * C1021 + C32947 * C1031 + C22401 * C1709 + C32944 * C1714 +
            C22402 * C6408 + C32935 * C6412 + C22403 * C7556 + C32920 * C7557) *
               C32677) *
              C32533 * C32592 * C250) *
         C32566) /
            (p * q * std::sqrt(p + q));
    d2ee[40] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                 (((((C31694 * C115 + C32715 * C122 + C31686 * C361 +
                      C32722 * C376 + C31700 * C362 + C24241 * C377) *
                         C15053 +
                     (C31694 * C123 + C32715 * C136 + C31686 * C375 +
                      C32722 * C391 + C31700 * C378 + C24241 * C392) *
                         C15047 +
                     (C25365 + C25366 + C25367) * C15054 +
                     (C25368 + C25369 + C25370) * C32677) *
                        C32854 +
                    ((C24282 + C24283 + C24284) * C15053 +
                     (C24285 + C24286 + C24287) * C15047 + C25727 * C15054 +
                     C25728 * C32677) *
                        C32543) *
                       C32592 * C479 -
                   (((C25371 + C25372 + C25373) * C32677 +
                     (C25374 + C25375 + C25376) * C15054 + C25729 * C15047 +
                     C25730 * C15053) *
                        C32543 +
                    ((C25377 + C25378 + C25379) * C32677 +
                     (C25380 + C25381 + C25382) * C15054 +
                     (C25370 + C25369 + C25368) * C15047 +
                     (C25367 + C25366 + C25365) * C15053) *
                        C32854) *
                       C32592 * C480) *
                      C481 +
                  (((C25727 * C15053 + C25728 * C15047 +
                     (C25376 + C25375 + C25374) * C15054 +
                     (C25373 + C25372 + C25371) * C32677) *
                        C32854 +
                    ((C24702 + C24701 + C24700) * C15053 +
                     (C24699 + C24698 + C24697) * C15047 +
                     (C31694 * C259 + C32715 * C276 + C31686 * C1175 +
                      C32722 * C1185 + C31700 * C1183 + C24241 * C1200) *
                         C15054 +
                     (C31694 * C277 + C32715 * C289 + C31686 * C1184 +
                      C32722 * C1202 + C31700 * C1201 + C24241 * C1210) *
                         C32677) *
                        C32543) *
                       C32592 * C480 -
                   (((C24697 + C24698 + C24699) * C32677 +
                     (C24700 + C24701 + C24702) * C15054 +
                     (C24293 + C24292 + C24291) * C15047 +
                     (C24290 + C24289 + C24288) * C15053) *
                        C32543 +
                    (C25729 * C32677 + C25730 * C15054 +
                     (C24287 + C24286 + C24285) * C15047 +
                     (C24284 + C24283 + C24282) * C15053) *
                        C32854) *
                       C32592 * C479) *
                      C482)) /
                (p * q * std::sqrt(p + q));
    d2ee[41] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                 (((((C31694 * C115 + C32715 * C122 + C31686 * C361 +
                      C32722 * C376 + C31700 * C362 + C24241 * C377) *
                         C15053 +
                     (C31694 * C123 + C32715 * C136 + C31686 * C375 +
                      C32722 * C391 + C31700 * C378 + C24241 * C392) *
                         C15047 +
                     (C25365 + C25366 + C25367) * C15054 +
                     (C25368 + C25369 + C25370) * C32677) *
                        C32854 +
                    ((C24282 + C24283 + C24284) * C15053 +
                     (C24285 + C24286 + C24287) * C15047 + C25727 * C15054 +
                     C25728 * C32677) *
                        C32543) *
                       C601 -
                   (((C25937 + C25938 + C25939) * C32677 +
                     (C25940 + C25941 + C25942) * C15054 +
                     (C24885 + C24886 + C24887) * C15047 +
                     (C24888 + C24889 + C24890) * C15053) *
                        C32543 +
                    ((C26149 + C26150 + C26151) * C32677 +
                     (C26152 + C26153 + C26154) * C15054 +
                     (C31700 * C2136 + C24241 * C2146 + C31686 * C378 +
                      C32722 * C392 + C31694 * C375 + C32715 * C391) *
                         C15047 +
                     (C31700 * C2128 + C24241 * C2137 + C31686 * C362 +
                      C32722 * C377 + C31694 * C361 + C32715 * C376) *
                         C15053) *
                        C32854) *
                       C602) *
                      C479 +
                  ((((C26154 + C26153 + C26152) * C15053 +
                     (C26151 + C26150 + C26149) * C15047 +
                     (C31694 * C1177 + C32715 * C1189 + C31686 * C1179 +
                      C32722 * C1192 + C31700 * C7078 + C24241 * C7082) *
                         C15054 +
                     (C31694 * C1188 + C32715 * C1204 + C31686 * C1193 +
                      C32722 * C1206 + C31700 * C7081 + C24241 * C7087) *
                         C32677) *
                        C32854 +
                    ((C25942 + C25941 + C25940) * C15053 +
                     (C25939 + C25938 + C25937) * C15047 +
                     (C31694 * C1176 + C32715 * C1187 + C31686 * C1181 +
                      C32722 * C1196 + C31700 * C7404 + C24241 * C7405) *
                         C15054 +
                     (C31694 * C1186 + C32715 * C1203 + C31686 * C1197 +
                      C32722 * C1208 + C31700 * C7406 + C24241 * C7407) *
                         C32677) *
                        C32543) *
                       C602 -
                   (((C25371 + C25372 + C25373) * C32677 +
                     (C25374 + C25375 + C25376) * C15054 + C25729 * C15047 +
                     C25730 * C15053) *
                        C32543 +
                    ((C25377 + C25378 + C25379) * C32677 +
                     (C25380 + C25381 + C25382) * C15054 +
                     (C25370 + C25369 + C25368) * C15047 +
                     (C25367 + C25366 + C25365) * C15053) *
                        C32854) *
                       C601) *
                      C480) *
                 C32566) /
                (p * q * std::sqrt(p + q));
    d2ee[42] += (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C31694 * C115 + C32715 * C122 + C31686 * C361 +
                     C32722 * C376 + C31700 * C362 + C24241 * C377) *
                        C15053 +
                    (C31694 * C123 + C32715 * C136 + C31686 * C375 +
                     C32722 * C391 + C31700 * C378 + C24241 * C392) *
                        C15047 +
                    (C25365 + C25366 + C25367) * C15054 +
                    (C25368 + C25369 + C25370) * C32677) *
                       C32854 +
                   ((C24282 + C24283 + C24284) * C15053 +
                    (C24285 + C24286 + C24287) * C15047 + C25727 * C15054 +
                    C25728 * C32677) *
                       C32543) *
                      C32592 * C248 -
                  (((C25371 + C25372 + C25373) * C32677 +
                    (C25374 + C25375 + C25376) * C15054 + C25729 * C15047 +
                    C25730 * C15053) *
                       C32543 +
                   ((C25377 + C25378 + C25379) * C32677 +
                    (C25380 + C25381 + C25382) * C15054 +
                    (C25370 + C25369 + C25368) * C15047 +
                    (C25367 + C25366 + C25365) * C15053) *
                       C32854) *
                      C32592 * C249 +
                  (((C25382 + C25381 + C25380) * C15053 +
                    (C25379 + C25378 + C25377) * C15047 +
                    (C31694 * C1013 + C32715 * C1022 + C31686 * C1705 +
                     C32722 * C1708 + C31700 * C6403 + C24241 * C6407) *
                        C15054 +
                    (C31694 * C1021 + C32715 * C1031 + C31686 * C1709 +
                     C32722 * C1714 + C31700 * C6408 + C24241 * C6412) *
                        C32677) *
                       C32854 +
                   ((C25376 + C25375 + C25374) * C15053 +
                    (C25373 + C25372 + C25371) * C15047 +
                    (C31694 * C1012 + C32715 * C1020 + C31686 * C1706 +
                     C32722 * C1710 + C31700 * C7236 + C24241 * C7237) *
                        C15054 +
                    (C31694 * C1019 + C32715 * C1030 + C31686 * C1711 +
                     C32722 * C1715 + C31700 * C7238 + C24241 * C7239) *
                        C32677) *
                       C32543) *
                      C32592 * C250) *
                 C32566) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C31694 * C115 + C32715 * C122 + C31686 * C361 +
                     C32722 * C376 + C31700 * C362 + C24241 * C377) *
                        C15053 +
                    (C31694 * C123 + C32715 * C136 + C31686 * C375 +
                     C32722 * C391 + C31700 * C378 + C24241 * C392) *
                        C15047 +
                    (C25365 + C25366 + C25367) * C15054 +
                    (C25368 + C25369 + C25370) * C32677) *
                       C32854 +
                   ((C24282 + C24283 + C24284) * C15053 +
                    (C24285 + C24286 + C24287) * C15047 + C25727 * C15054 +
                    C25728 * C32677) *
                       C32543) *
                      C32592 * C32578 * C110 -
                  (((C24697 + C24698 + C24699) * C32677 +
                    (C24700 + C24701 + C24702) * C15054 +
                    (C24293 + C24292 + C24291) * C15047 +
                    (C24290 + C24289 + C24288) * C15053) *
                       C32543 +
                   (C25729 * C32677 + C25730 * C15054 +
                    (C24287 + C24286 + C24285) * C15047 +
                    (C24284 + C24283 + C24282) * C15053) *
                       C32854) *
                      C32592 * C32578 * C111 +
                  ((C24302 * C15053 + C24303 * C15047 +
                    (C24702 + C24701 + C24700) * C15054 +
                    (C24699 + C24698 + C24697) * C32677) *
                       C32854 +
                   ((C24299 + C24298 + C24297) * C15053 +
                    (C24296 + C24295 + C24294) * C15047 +
                    (C31694 * C253 + C32715 * C265 + C31686 * C724 +
                     C32722 * C732 + C31700 * C2296 + C24241 * C2297) *
                        C15054 +
                    (C31694 * C264 + C32715 * C283 + C31686 * C733 +
                     C32722 * C739 + C31700 * C2298 + C24241 * C2299) *
                        C32677) *
                       C32543) *
                      C32592 * C32578 * C112)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((C31694 * C115 + C32715 * C122 + C31686 * C361 +
                     C32722 * C376 + C31700 * C362 + C24241 * C377) *
                        C15053 +
                    (C31694 * C123 + C32715 * C136 + C31686 * C375 +
                     C32722 * C391 + C31700 * C378 + C24241 * C392) *
                        C15047 +
                    (C25365 + C25366 + C25367) * C15054 +
                    (C25368 + C25369 + C25370) * C32677) *
                       C32854 +
                   ((C24282 + C24283 + C24284) * C15053 +
                    (C24285 + C24286 + C24287) * C15047 + C25727 * C15054 +
                    C25728 * C32677) *
                       C32543) *
                      C354 -
                  (((C25937 + C25938 + C25939) * C32677 +
                    (C25940 + C25941 + C25942) * C15054 +
                    (C24885 + C24886 + C24887) * C15047 +
                    (C24888 + C24889 + C24890) * C15053) *
                       C32543 +
                   ((C26149 + C26150 + C26151) * C32677 +
                    (C26152 + C26153 + C26154) * C15054 +
                    (C31700 * C2136 + C24241 * C2146 + C31686 * C378 +
                     C32722 * C392 + C31694 * C375 + C32715 * C391) *
                        C15047 +
                    (C31700 * C2128 + C24241 * C2137 + C31686 * C362 +
                     C32722 * C377 + C31694 * C361 + C32715 * C376) *
                        C15053) *
                       C32854) *
                      C355 +
                  (((C31694 * C362 + C32715 * C377 + C31686 * C2128 +
                     C32722 * C2137 + C31700 * C2129 + C24241 * C2138) *
                        C15053 +
                    (C31694 * C378 + C32715 * C392 + C31686 * C2136 +
                     C32722 * C2146 + C31700 * C2139 + C24241 * C2147) *
                        C15047 +
                    (C31694 * C1178 + C32715 * C1190 + C31686 * C2668 +
                     C32722 * C2671 + C31700 * C7079 + C24241 * C7083) *
                        C15054 +
                    (C31694 * C1191 + C32715 * C1205 + C31686 * C2672 +
                     C32722 * C2677 + C31700 * C7084 + C24241 * C7088) *
                        C32677) *
                       C32854 +
                   ((C31694 * C363 + C32715 * C379 + C31686 * C2127 +
                     C32722 * C2135 + C31700 * C2130 + C24241 * C2140) *
                        C15053 +
                    (C31694 * C380 + C32715 * C393 + C31686 * C2134 +
                     C32722 * C2145 + C31700 * C2141 + C24241 * C2148) *
                        C15047 +
                    (C31694 * C1180 + C32715 * C1194 + C31686 * C2669 +
                     C32722 * C2673 + C31700 * C12183 + C24241 * C12184) *
                        C15054 +
                    (C31694 * C1195 + C32715 * C1207 + C31686 * C2674 +
                     C32722 * C2678 + C31700 * C12185 + C24241 * C12186) *
                        C32677) *
                       C32543) *
                      C356) *
                 C32578 * C32566) /
                    (p * q * std::sqrt(p + q));
    d2ee[43] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                 (((((C31694 * C115 + C32715 * C122 + C31686 * C361 +
                      C32722 * C376 + C31700 * C362 + C24241 * C377) *
                         C15053 +
                     (C31694 * C123 + C32715 * C136 + C31686 * C375 +
                      C32722 * C391 + C31700 * C378 + C24241 * C392) *
                         C15047 +
                     (C25365 + C25366 + C25367) * C15054 +
                     (C25368 + C25369 + C25370) * C32677) *
                        C32854 +
                    ((C24282 + C24283 + C24284) * C15053 +
                     (C24285 + C24286 + C24287) * C15047 + C25727 * C15054 +
                     C25728 * C32677) *
                        C32543) *
                       C601 -
                   (((C25937 + C25938 + C25939) * C32677 +
                     (C25940 + C25941 + C25942) * C15054 +
                     (C24885 + C24886 + C24887) * C15047 +
                     (C24888 + C24889 + C24890) * C15053) *
                        C32543 +
                    ((C26149 + C26150 + C26151) * C32677 +
                     (C26152 + C26153 + C26154) * C15054 +
                     (C31700 * C2136 + C24241 * C2146 + C31686 * C378 +
                      C32722 * C392 + C31694 * C375 + C32715 * C391) *
                         C15047 +
                     (C31700 * C2128 + C24241 * C2137 + C31686 * C362 +
                      C32722 * C377 + C31694 * C361 + C32715 * C376) *
                         C15053) *
                        C32854) *
                       C602) *
                      C32578 * C481 +
                  ((((C24890 + C24889 + C24888) * C15053 +
                     (C24887 + C24886 + C24885) * C15047 +
                     (C25942 + C25941 + C25940) * C15054 +
                     (C25939 + C25938 + C25937) * C32677) *
                        C32854 +
                    ((C24884 + C24883 + C24882) * C15053 +
                     (C24881 + C24880 + C24879) * C15047 +
                     (C31694 * C723 + C32715 * C730 + C31686 * C1182 +
                      C32722 * C1198 + C31700 * C2670 + C24241 * C2675) *
                         C15054 +
                     (C31694 * C731 + C32715 * C738 + C31686 * C1199 +
                      C32722 * C1209 + C31700 * C2676 + C24241 * C2679) *
                         C32677) *
                        C32543) *
                       C602 -
                   (((C24697 + C24698 + C24699) * C32677 +
                     (C24700 + C24701 + C24702) * C15054 +
                     (C24293 + C24292 + C24291) * C15047 +
                     (C24290 + C24289 + C24288) * C15053) *
                        C32543 +
                    (C25729 * C32677 + C25730 * C15054 +
                     (C24287 + C24286 + C24285) * C15047 +
                     (C24284 + C24283 + C24282) * C15053) *
                        C32854) *
                       C601) *
                      C32578 * C482)) /
                (p * q * std::sqrt(p + q));
    d2ee[44] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C31694 * C115 + C32715 * C122 + C31686 * C361 +
                     C32722 * C376 + C31700 * C362 + C24241 * C377) *
                        C15053 +
                    (C31694 * C123 + C32715 * C136 + C31686 * C375 +
                     C32722 * C391 + C31700 * C378 + C24241 * C392) *
                        C15047 +
                    (C25365 + C25366 + C25367) * C15054 +
                    (C25368 + C25369 + C25370) * C32677) *
                       C32854 +
                   ((C24282 + C24283 + C24284) * C15053 +
                    (C24285 + C24286 + C24287) * C15047 + C25727 * C15054 +
                    C25728 * C32677) *
                       C32543) *
                      C32592 * C32578 * C110 -
                  (((C24697 + C24698 + C24699) * C32677 +
                    (C24700 + C24701 + C24702) * C15054 +
                    (C24293 + C24292 + C24291) * C15047 +
                    (C24290 + C24289 + C24288) * C15053) *
                       C32543 +
                   (C25729 * C32677 + C25730 * C15054 +
                    (C24287 + C24286 + C24285) * C15047 +
                    (C24284 + C24283 + C24282) * C15053) *
                       C32854) *
                      C32592 * C32578 * C111 +
                  ((C24302 * C15053 + C24303 * C15047 +
                    (C24702 + C24701 + C24700) * C15054 +
                    (C24699 + C24698 + C24697) * C32677) *
                       C32854 +
                   ((C24299 + C24298 + C24297) * C15053 +
                    (C24296 + C24295 + C24294) * C15047 +
                    (C31694 * C253 + C32715 * C265 + C31686 * C724 +
                     C32722 * C732 + C31700 * C2296 + C24241 * C2297) *
                        C15054 +
                    (C31694 * C264 + C32715 * C283 + C31686 * C733 +
                     C32722 * C739 + C31700 * C2298 + C24241 * C2299) *
                        C32677) *
                       C32543) *
                      C32592 * C32578 * C112)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C31694 * C115 + C32715 * C122 + C31686 * C361 +
                     C32722 * C376 + C31700 * C362 + C24241 * C377) *
                        C15053 +
                    (C31694 * C123 + C32715 * C136 + C31686 * C375 +
                     C32722 * C391 + C31700 * C378 + C24241 * C392) *
                        C15047 +
                    (C25365 + C25366 + C25367) * C15054 +
                    (C25368 + C25369 + C25370) * C32677) *
                       C32854 +
                   ((C24282 + C24283 + C24284) * C15053 +
                    (C24285 + C24286 + C24287) * C15047 + C25727 * C15054 +
                    C25728 * C32677) *
                       C32543) *
                      C32592 * C248 -
                  (((C25371 + C25372 + C25373) * C32677 +
                    (C25374 + C25375 + C25376) * C15054 + C25729 * C15047 +
                    C25730 * C15053) *
                       C32543 +
                   ((C25377 + C25378 + C25379) * C32677 +
                    (C25380 + C25381 + C25382) * C15054 +
                    (C25370 + C25369 + C25368) * C15047 +
                    (C25367 + C25366 + C25365) * C15053) *
                       C32854) *
                      C32592 * C249 +
                  (((C25382 + C25381 + C25380) * C15053 +
                    (C25379 + C25378 + C25377) * C15047 +
                    (C31694 * C1013 + C32715 * C1022 + C31686 * C1705 +
                     C32722 * C1708 + C31700 * C6403 + C24241 * C6407) *
                        C15054 +
                    (C31694 * C1021 + C32715 * C1031 + C31686 * C1709 +
                     C32722 * C1714 + C31700 * C6408 + C24241 * C6412) *
                        C32677) *
                       C32854 +
                   ((C25376 + C25375 + C25374) * C15053 +
                    (C25373 + C25372 + C25371) * C15047 +
                    (C31694 * C1012 + C32715 * C1020 + C31686 * C1706 +
                     C32722 * C1710 + C31700 * C7236 + C24241 * C7237) *
                        C15054 +
                    (C31694 * C1019 + C32715 * C1030 + C31686 * C1711 +
                     C32722 * C1715 + C31700 * C7238 + C24241 * C7239) *
                        C32677) *
                       C32543) *
                      C32592 * C250) *
                 C32566) /
                    (p * q * std::sqrt(p + q));
    d2ee[45] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C20430 * C115 + C20428 * C122 + C20431 * C361 + C32719 * C376) *
                 C15053 +
             (C20430 * C123 + C20428 * C136 + C20431 * C375 + C32719 * C391) *
                 C15047 +
             (C21499 + C21500) * C15054 + (C21501 + C21502) * C32677) *
                C32936 +
            ((C20465 + C20466) * C15053 + (C20467 + C20468) * C15047 +
             C21857 * C15054 + C21858 * C32677) *
                C32923 +
            C26307 * C32893) *
               C32592 * C479 -
           (((C21315 + C21316) * C32677 + (C21317 + C21318) * C15054 +
             C23728 * C15047 + C23729 * C15053) *
                C32893 +
            (C21859 * C32677 + C21860 * C15054 + C21861 * C15047 +
             C21862 * C15053) *
                C32923 +
            ((C21506 + C21505) * C32677 + (C21504 + C21503) * C15054 +
             (C21502 + C21501) * C15047 + (C21500 + C21499) * C15053) *
                C32936) *
               C32592 * C480) *
              C481 +
          (((C21857 * C15053 + C21858 * C15047 + C21481 * C15054 +
             C21482 * C32677) *
                C32936 +
            (C23235 * C15053 + C23236 * C15047 + (C21318 + C21317) * C15054 +
             (C21316 + C21315) * C32677) *
                C32923 +
            ((C20844 + C20843) * C15053 + (C20842 + C20841) * C15047 +
             (C20430 * C260 + C20428 * C278 + C20431 * C1519 + C32719 * C1520) *
                 C15054 +
             (C20430 * C279 + C20428 * C290 + C20431 * C1521 + C32719 * C1522) *
                 C32677) *
                C32893) *
               C32592 * C480 -
           (((C20841 + C20842) * C32677 + (C20843 + C20844) * C15054 +
             (C20476 + C20475) * C15047 + (C20474 + C20473) * C15053) *
                C32893 +
            (C23728 * C32677 + C23729 * C15054 + (C20472 + C20471) * C15047 +
             (C20470 + C20469) * C15053) *
                C32923 +
            (C21861 * C32677 + C21862 * C15054 + (C20468 + C20467) * C15047 +
             (C20466 + C20465) * C15053) *
                C32936) *
               C32592 * C479) *
              C482)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C20430 * C115 + C20428 * C122 + C20431 * C361 + C32719 * C376) *
                C15791 +
            (C20430 * C123 + C20428 * C136 + C20431 * C375 + C32719 * C391) *
                C32946 +
            (C21499 + C21500) * C15792 + (C21501 + C21502) * C32942 +
            C21515 * C15793 + C21516 * C32932 + C27378 * C15794 +
            C27379 * C32914) *
               C32533 * C32592 * C479 -
           ((C27388 + C27389) * C32914 + (C27390 + C27391) * C15794 +
            (C21511 + C21512) * C32932 + (C21513 + C21514) * C15793 +
            (C21506 + C21505) * C32942 + (C21504 + C21503) * C15792 +
            (C21502 + C21501) * C32946 + (C21500 + C21499) * C15791) *
               C32533 * C32592 * C480) *
              C481 +
          ((C21857 * C15791 + C21858 * C32946 + C21481 * C15792 +
            C21482 * C32942 + (C21510 + C21509) * C15793 +
            (C21508 + C21507) * C32932 +
            (C20430 * C1015 + C20428 * C1025 + C20431 * C6588 +
             C32719 * C6589) *
                C15794 +
            (C20430 * C1026 + C20428 * C1033 + C20431 * C6590 +
             C32719 * C6591) *
                C32914) *
               C32533 * C32592 * C480 -
           ((C21507 + C21508) * C32914 + (C21509 + C21510) * C15794 +
            C21859 * C32932 + C21860 * C15793 + C21861 * C32942 +
            C21862 * C15792 + (C20468 + C20467) * C32946 +
            (C20466 + C20465) * C15791) *
               C32533 * C32592 * C479) *
              C482)) /
            (p * q * std::sqrt(p + q));
    d2ee[46] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C20430 * C115 + C20428 * C122 + C20431 * C361 + C32719 * C376) *
                 C15053 +
             (C20430 * C123 + C20428 * C136 + C20431 * C375 + C32719 * C391) *
                 C15047 +
             (C21499 + C21500) * C15054 + (C21501 + C21502) * C32677) *
                C32936 +
            ((C20465 + C20466) * C15053 + (C20467 + C20468) * C15047 +
             C21857 * C15054 + C21858 * C32677) *
                C32923 +
            C26307 * C32893) *
               C601 -
           (((C23932 + C23933) * C32677 + (C23934 + C23935) * C15054 +
             (C21011 + C21012) * C15047 + (C21013 + C21014) * C15053) *
                C32893 +
            ((C22077 + C22078) * C32677 + (C22079 + C22080) * C15054 +
             (C21015 + C21016) * C15047 + (C21017 + C21018) * C15053) *
                C32923 +
            ((C22295 + C22296) * C32677 + (C22297 + C22298) * C15054 +
             (C20431 * C378 + C32719 * C392 + C20430 * C375 + C20428 * C391) *
                 C15047 +
             (C20431 * C362 + C32719 * C377 + C20430 * C361 + C20428 * C376) *
                 C15053) *
                C32936) *
               C602) *
              C479 +
          ((((C22298 + C22297) * C15053 + (C22296 + C22295) * C15047 +
             (C22294 + C22293) * C15054 + (C22292 + C22291) * C32677) *
                C32936 +
            ((C22080 + C22079) * C15053 + (C22078 + C22077) * C15047 +
             (C22076 + C22075) * C15054 + (C22074 + C22073) * C32677) *
                C32923 +
            ((C23935 + C23934) * C15053 + (C23933 + C23932) * C15047 +
             (C20430 * C1175 + C20428 * C1185 + C20431 * C1183 +
              C32719 * C1200) *
                 C15054 +
             (C20430 * C1184 + C20428 * C1202 + C20431 * C1201 +
              C32719 * C1210) *
                 C32677) *
                C32893) *
               C602 -
           (((C21315 + C21316) * C32677 + (C21317 + C21318) * C15054 +
             C23728 * C15047 + C23729 * C15053) *
                C32893 +
            (C21859 * C32677 + C21860 * C15054 + C21861 * C15047 +
             C21862 * C15053) *
                C32923 +
            ((C21506 + C21505) * C32677 + (C21504 + C21503) * C15054 +
             (C21502 + C21501) * C15047 + (C21500 + C21499) * C15053) *
                C32936) *
               C601) *
              C480) *
         C32566) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C20430 * C115 + C20428 * C122 + C20431 * C361 + C32719 * C376) *
                C15791 +
            (C20430 * C123 + C20428 * C136 + C20431 * C375 + C32719 * C391) *
                C32946 +
            (C21499 + C21500) * C15792 + (C21501 + C21502) * C32942 +
            C21515 * C15793 + C21516 * C32932 + C27378 * C15794 +
            C27379 * C32914) *
               C32533 * C601 -
           ((C27888 + C27889) * C32914 + (C27890 + C27891) * C15794 +
            (C22291 + C22292) * C32932 + (C22293 + C22294) * C15793 +
            (C22295 + C22296) * C32942 + (C22297 + C22298) * C15792 +
            (C20431 * C378 + C32719 * C392 + C20430 * C375 + C20428 * C391) *
                C32946 +
            (C20431 * C362 + C32719 * C377 + C20430 * C361 + C20428 * C376) *
                C15791) *
               C32533 * C602) *
              C479 +
          (((C22298 + C22297) * C15791 + (C22296 + C22295) * C32946 +
            (C22294 + C22293) * C15792 + (C22292 + C22291) * C32942 +
            (C27891 + C27890) * C15793 + (C27889 + C27888) * C32932 +
            (C20430 * C6402 + C20428 * C6406 + C20431 * C6404 +
             C32719 * C6409) *
                C15794 +
            (C20430 * C6405 + C20428 * C6411 + C20431 * C6410 +
             C32719 * C6413) *
                C32914) *
               C32533 * C602 -
           ((C27388 + C27389) * C32914 + (C27390 + C27391) * C15794 +
            (C21511 + C21512) * C32932 + (C21513 + C21514) * C15793 +
            (C21506 + C21505) * C32942 + (C21504 + C21503) * C15792 +
            (C21502 + C21501) * C32946 + (C21500 + C21499) * C15791) *
               C32533 * C601) *
              C480) *
         C32566) /
            (p * q * std::sqrt(p + q));
    d2ee[47] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C20430 * C115 + C20428 * C122 + C20431 * C361 + C32719 * C376) *
                C15053 +
            (C20430 * C123 + C20428 * C136 + C20431 * C375 + C32719 * C391) *
                C15047 +
            (C21499 + C21500) * C15054 + (C21501 + C21502) * C32677) *
               C32936 +
           ((C20465 + C20466) * C15053 + (C20467 + C20468) * C15047 +
            C21857 * C15054 + C21858 * C32677) *
               C32923 +
           C26307 * C32893) *
              C32592 * C248 -
          (((C21315 + C21316) * C32677 + (C21317 + C21318) * C15054 +
            C23728 * C15047 + C23729 * C15053) *
               C32893 +
           (C21859 * C32677 + C21860 * C15054 + C21861 * C15047 +
            C21862 * C15053) *
               C32923 +
           ((C21506 + C21505) * C32677 + (C21504 + C21503) * C15054 +
            (C21502 + C21501) * C15047 + (C21500 + C21499) * C15053) *
               C32936) *
              C32592 * C249 +
          ((C21515 * C15053 + C21516 * C15047 + (C21514 + C21513) * C15054 +
            (C21512 + C21511) * C32677) *
               C32936 +
           (C21481 * C15053 + C21482 * C15047 + (C21510 + C21509) * C15054 +
            (C21508 + C21507) * C32677) *
               C32923 +
           ((C21318 + C21317) * C15053 + (C21316 + C21315) * C15047 +
            (C20430 * C1011 + C20428 * C1018 + C20431 * C1707 +
             C32719 * C1712) *
                C15054 +
            (C20430 * C1017 + C20428 * C1029 + C20431 * C1713 +
             C32719 * C1716) *
                C32677) *
               C32893) *
              C32592 * C250) *
         C32566) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C20430 * C115 + C20428 * C122 + C20431 * C361 + C32719 * C376) *
                C15053 +
            (C20430 * C123 + C20428 * C136 + C20431 * C375 + C32719 * C391) *
                C15047 +
            (C21499 + C21500) * C15054 + (C21501 + C21502) * C32677) *
               C32936 +
           ((C20465 + C20466) * C15053 + (C20467 + C20468) * C15047 +
            C21857 * C15054 + C21858 * C32677) *
               C32923 +
           C26307 * C32893) *
              C32592 * C32578 * C110 -
          (((C20841 + C20842) * C32677 + (C20843 + C20844) * C15054 +
            (C20476 + C20475) * C15047 + (C20474 + C20473) * C15053) *
               C32893 +
           (C23728 * C32677 + C23729 * C15054 + (C20472 + C20471) * C15047 +
            (C20470 + C20469) * C15053) *
               C32923 +
           (C21861 * C32677 + C21862 * C15054 + (C20468 + C20467) * C15047 +
            (C20466 + C20465) * C15053) *
               C32936) *
              C32592 * C32578 * C111 +
          (C26307 * C32936 +
           (C20483 * C15053 + C20484 * C15047 + (C20844 + C20843) * C15054 +
            (C20842 + C20841) * C32677) *
               C32923 +
           ((C20480 + C20479) * C15053 + (C20478 + C20477) * C15047 +
            (C20430 * C252 + C20428 * C263 + C20431 * C725 + C32719 * C734) *
                C15054 +
            (C20430 * C262 + C20428 * C282 + C20431 * C735 + C32719 * C740) *
                C32677) *
               C32893) *
              C32592 * C32578 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C20430 * C115 + C20428 * C122 + C20431 * C361 + C32719 * C376) *
                C15053 +
            (C20430 * C123 + C20428 * C136 + C20431 * C375 + C32719 * C391) *
                C15047 +
            (C21499 + C21500) * C15054 + (C21501 + C21502) * C32677) *
               C32936 +
           ((C20465 + C20466) * C15053 + (C20467 + C20468) * C15047 +
            C21857 * C15054 + C21858 * C32677) *
               C32923 +
           C26307 * C32893) *
              C354 -
          (((C23932 + C23933) * C32677 + (C23934 + C23935) * C15054 +
            (C21011 + C21012) * C15047 + (C21013 + C21014) * C15053) *
               C32893 +
           ((C22077 + C22078) * C32677 + (C22079 + C22080) * C15054 +
            (C21015 + C21016) * C15047 + (C21017 + C21018) * C15053) *
               C32923 +
           ((C22295 + C22296) * C32677 + (C22297 + C22298) * C15054 +
            (C20431 * C378 + C32719 * C392 + C20430 * C375 + C20428 * C391) *
                C15047 +
            (C20431 * C362 + C32719 * C377 + C20430 * C361 + C20428 * C376) *
                C15053) *
               C32936) *
              C355 +
          (((C20430 * C362 + C20428 * C377 + C20431 * C2128 + C32719 * C2137) *
                C15053 +
            (C20430 * C378 + C20428 * C392 + C20431 * C2136 + C32719 * C2146) *
                C15047 +
            (C20430 * C1178 + C20428 * C1190 + C20431 * C2668 +
             C32719 * C2671) *
                C15054 +
            (C20430 * C1191 + C20428 * C1205 + C20431 * C2672 +
             C32719 * C2677) *
                C32677) *
               C32936 +
           ((C20430 * C363 + C20428 * C379 + C20431 * C2127 + C32719 * C2135) *
                C15053 +
            (C20430 * C380 + C20428 * C393 + C20431 * C2134 + C32719 * C2145) *
                C15047 +
            (C20430 * C1180 + C20428 * C1194 + C20431 * C2669 +
             C32719 * C2673) *
                C15054 +
            (C20430 * C1195 + C20428 * C1207 + C20431 * C2674 +
             C32719 * C2678) *
                C32677) *
               C32923 +
           ((C20430 * C364 + C20428 * C381 + C20431 * C2126 + C32719 * C2133) *
                C15053 +
            (C20430 * C382 + C20428 * C394 + C20431 * C2132 + C32719 * C2144) *
                C15047 +
            (C20430 * C1182 + C20428 * C1198 + C20431 * C2670 +
             C32719 * C2675) *
                C15054 +
            (C20430 * C1199 + C20428 * C1209 + C20431 * C2676 +
             C32719 * C2679) *
                C32677) *
               C32893) *
              C356) *
         C32578 * C32566) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C20430 * C115 + C20428 * C122 + C20431 * C361 + C32719 * C376) *
               C15791 +
           (C20430 * C123 + C20428 * C136 + C20431 * C375 + C32719 * C391) *
               C32946 +
           (C21499 + C21500) * C15792 + (C21501 + C21502) * C32942 +
           C21515 * C15793 + C21516 * C32932 + (C21514 + C21513) * C15794 +
           (C21512 + C21511) * C32914) *
              C32533 * C32592 * C32578 * C110 -
          ((C21507 + C21508) * C32914 + (C21509 + C21510) * C15794 +
           C21859 * C32932 + C21860 * C15793 + C21861 * C32942 +
           C21862 * C15792 + (C20468 + C20467) * C32946 +
           (C20466 + C20465) * C15791) *
              C32533 * C32592 * C32578 * C111 +
          (C20481 * C15791 + C20482 * C32946 + C23235 * C15792 +
           C23236 * C32942 + (C21318 + C21317) * C15793 +
           (C21316 + C21315) * C32932 +
           (C20430 * C1011 + C20428 * C1018 + C20431 * C1707 + C32719 * C1712) *
               C15794 +
           (C20430 * C1017 + C20428 * C1029 + C20431 * C1713 + C32719 * C1716) *
               C32914) *
              C32533 * C32592 * C32578 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C20430 * C115 + C20428 * C122 + C20431 * C361 + C32719 * C376) *
               C15791 +
           (C20430 * C123 + C20428 * C136 + C20431 * C375 + C32719 * C391) *
               C32946 +
           (C21499 + C21500) * C15792 + (C21501 + C21502) * C32942 +
           C21515 * C15793 + C21516 * C32932 + C27378 * C15794 +
           C27379 * C32914) *
              C32533 * C32592 * C248 -
          ((C27388 + C27389) * C32914 + (C27390 + C27391) * C15794 +
           (C21511 + C21512) * C32932 + (C21513 + C21514) * C15793 +
           (C21506 + C21505) * C32942 + (C21504 + C21503) * C15792 +
           (C21502 + C21501) * C32946 + (C21500 + C21499) * C15791) *
              C32533 * C32592 * C249 +
          (C21515 * C15791 + C21516 * C32946 + C27378 * C15792 +
           C27379 * C32942 + (C27391 + C27390) * C15793 +
           (C27389 + C27388) * C32932 +
           (C20430 * C6320 + C20428 * C6323 + C20431 * C6674 + C32719 * C6675) *
               C15794 +
           (C20430 * C6322 + C20428 * C6326 + C20431 * C6676 + C32719 * C6677) *
               C32914) *
              C32533 * C32592 * C250) *
         C32566) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C20430 * C115 + C20428 * C122 + C20431 * C361 + C32719 * C376) *
               C15791 +
           (C20430 * C123 + C20428 * C136 + C20431 * C375 + C32719 * C391) *
               C32946 +
           (C21499 + C21500) * C15792 + (C21501 + C21502) * C32942 +
           C21515 * C15793 + C21516 * C32932 + C27378 * C15794 +
           C27379 * C32914) *
              C32533 * C354 -
          ((C20431 * C6408 + C32719 * C6412 + C20430 * C1709 + C20428 * C1714) *
               C32914 +
           (C20431 * C6403 + C32719 * C6407 + C20430 * C1705 + C20428 * C1708) *
               C15794 +
           (C22291 + C22292) * C32932 + (C22293 + C22294) * C15793 +
           (C22295 + C22296) * C32942 + (C22297 + C22298) * C15792 +
           (C20431 * C378 + C32719 * C392 + C20430 * C375 + C20428 * C391) *
               C32946 +
           (C20431 * C362 + C32719 * C377 + C20430 * C361 + C20428 * C376) *
               C15791) *
              C32533 * C355 +
          ((C20430 * C362 + C20428 * C377 + C20431 * C2128 + C32719 * C2137) *
               C15791 +
           (C20430 * C378 + C20428 * C392 + C20431 * C2136 + C32719 * C2146) *
               C32946 +
           (C20430 * C1178 + C20428 * C1190 + C20431 * C2668 + C32719 * C2671) *
               C15792 +
           (C20430 * C1191 + C20428 * C1205 + C20431 * C2672 + C32719 * C2677) *
               C32942 +
           (C20430 * C1179 + C20428 * C1192 + C20431 * C7078 + C32719 * C7082) *
               C15793 +
           (C20430 * C1193 + C20428 * C1206 + C20431 * C7081 + C32719 * C7087) *
               C32932 +
           (C20430 * C6403 + C20428 * C6407 + C20431 * C7554 + C32719 * C7555) *
               C15794 +
           (C20430 * C6408 + C20428 * C6412 + C20431 * C7556 + C32719 * C7557) *
               C32914) *
              C32533 * C356) *
         C32578 * C32566) /
            (p * q * std::sqrt(p + q));
    d2ee[48] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C20430 * C115 + C20428 * C122 + C20431 * C361 + C32719 * C376) *
                 C15053 +
             (C20430 * C123 + C20428 * C136 + C20431 * C375 + C32719 * C391) *
                 C15047 +
             (C21499 + C21500) * C15054 + (C21501 + C21502) * C32677) *
                C32936 +
            ((C20465 + C20466) * C15053 + (C20467 + C20468) * C15047 +
             C21857 * C15054 + C21858 * C32677) *
                C32923 +
            C26307 * C32893) *
               C601 -
           (((C23932 + C23933) * C32677 + (C23934 + C23935) * C15054 +
             (C21011 + C21012) * C15047 + (C21013 + C21014) * C15053) *
                C32893 +
            ((C22077 + C22078) * C32677 + (C22079 + C22080) * C15054 +
             (C21015 + C21016) * C15047 + (C21017 + C21018) * C15053) *
                C32923 +
            ((C22295 + C22296) * C32677 + (C22297 + C22298) * C15054 +
             (C20431 * C378 + C32719 * C392 + C20430 * C375 + C20428 * C391) *
                 C15047 +
             (C20431 * C362 + C32719 * C377 + C20430 * C361 + C20428 * C376) *
                 C15053) *
                C32936) *
               C602) *
              C32578 * C481 +
          ((((C21018 + C21017) * C15053 + (C21016 + C21015) * C15047 +
             (C22080 + C22079) * C15054 + (C22078 + C22077) * C32677) *
                C32936 +
            ((C21014 + C21013) * C15053 + (C21012 + C21011) * C15047 +
             (C23935 + C23934) * C15054 + (C23933 + C23932) * C32677) *
                C32923 +
            ((C21010 + C21009) * C15053 + (C21008 + C21007) * C15047 +
             (C20430 * C724 + C20428 * C732 + C20431 * C2296 + C32719 * C2297) *
                 C15054 +
             (C20430 * C733 + C20428 * C739 + C20431 * C2298 + C32719 * C2299) *
                 C32677) *
                C32893) *
               C602 -
           (((C20841 + C20842) * C32677 + (C20843 + C20844) * C15054 +
             (C20476 + C20475) * C15047 + (C20474 + C20473) * C15053) *
                C32893 +
            (C23728 * C32677 + C23729 * C15054 + (C20472 + C20471) * C15047 +
             (C20470 + C20469) * C15053) *
                C32923 +
            (C21861 * C32677 + C21862 * C15054 + (C20468 + C20467) * C15047 +
             (C20466 + C20465) * C15053) *
                C32936) *
               C601) *
              C32578 * C482)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C20430 * C115 + C20428 * C122 + C20431 * C361 + C32719 * C376) *
                C15791 +
            (C20430 * C123 + C20428 * C136 + C20431 * C375 + C32719 * C391) *
                C32946 +
            (C21499 + C21500) * C15792 + (C21501 + C21502) * C32942 +
            C21515 * C15793 + C21516 * C32932 + C27378 * C15794 +
            C27379 * C32914) *
               C32533 * C601 -
           ((C20431 * C6408 + C32719 * C6412 + C20430 * C1709 +
             C20428 * C1714) *
                C32914 +
            (C20431 * C6403 + C32719 * C6407 + C20430 * C1705 +
             C20428 * C1708) *
                C15794 +
            (C22291 + C22292) * C32932 + (C22293 + C22294) * C15793 +
            (C22295 + C22296) * C32942 + (C22297 + C22298) * C15792 +
            (C20431 * C378 + C32719 * C392 + C20430 * C375 + C20428 * C391) *
                C32946 +
            (C20431 * C362 + C32719 * C377 + C20430 * C361 + C20428 * C376) *
                C15791) *
               C32533 * C602) *
              C32578 * C481 +
          (((C21018 + C21017) * C15791 + (C21016 + C21015) * C32946 +
            (C22080 + C22079) * C15792 + (C22078 + C22077) * C32942 +
            (C22076 + C22075) * C15793 + (C22074 + C22073) * C32932 +
            (C20430 * C1706 + C20428 * C1710 + C20431 * C7236 +
             C32719 * C7237) *
                C15794 +
            (C20430 * C1711 + C20428 * C1715 + C20431 * C7238 +
             C32719 * C7239) *
                C32914) *
               C32533 * C602 -
           ((C21507 + C21508) * C32914 + (C21509 + C21510) * C15794 +
            C21859 * C32932 + C21860 * C15793 + C21861 * C32942 +
            C21862 * C15792 + (C20468 + C20467) * C32946 +
            (C20466 + C20465) * C15791) *
               C32533 * C601) *
              C32578 * C482)) /
            (p * q * std::sqrt(p + q));
    d2ee[49] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C20430 * C115 + C20428 * C122 + C20431 * C361 + C32719 * C376) *
                C15053 +
            (C20430 * C123 + C20428 * C136 + C20431 * C375 + C32719 * C391) *
                C15047 +
            (C21499 + C21500) * C15054 + (C21501 + C21502) * C32677) *
               C32936 +
           ((C20465 + C20466) * C15053 + (C20467 + C20468) * C15047 +
            C21857 * C15054 + C21858 * C32677) *
               C32923 +
           C26307 * C32893) *
              C32592 * C32578 * C110 -
          (((C20841 + C20842) * C32677 + (C20843 + C20844) * C15054 +
            (C20476 + C20475) * C15047 + (C20474 + C20473) * C15053) *
               C32893 +
           (C23728 * C32677 + C23729 * C15054 + (C20472 + C20471) * C15047 +
            (C20470 + C20469) * C15053) *
               C32923 +
           (C21861 * C32677 + C21862 * C15054 + (C20468 + C20467) * C15047 +
            (C20466 + C20465) * C15053) *
               C32936) *
              C32592 * C32578 * C111 +
          (C26307 * C32936 +
           (C20483 * C15053 + C20484 * C15047 + (C20844 + C20843) * C15054 +
            (C20842 + C20841) * C32677) *
               C32923 +
           ((C20480 + C20479) * C15053 + (C20478 + C20477) * C15047 +
            (C20430 * C252 + C20428 * C263 + C20431 * C725 + C32719 * C734) *
                C15054 +
            (C20430 * C262 + C20428 * C282 + C20431 * C735 + C32719 * C740) *
                C32677) *
               C32893) *
              C32592 * C32578 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C20430 * C115 + C20428 * C122 + C20431 * C361 + C32719 * C376) *
                C15053 +
            (C20430 * C123 + C20428 * C136 + C20431 * C375 + C32719 * C391) *
                C15047 +
            (C21499 + C21500) * C15054 + (C21501 + C21502) * C32677) *
               C32936 +
           ((C20465 + C20466) * C15053 + (C20467 + C20468) * C15047 +
            C21857 * C15054 + C21858 * C32677) *
               C32923 +
           C26307 * C32893) *
              C32592 * C248 -
          (((C21315 + C21316) * C32677 + (C21317 + C21318) * C15054 +
            C23728 * C15047 + C23729 * C15053) *
               C32893 +
           (C21859 * C32677 + C21860 * C15054 + C21861 * C15047 +
            C21862 * C15053) *
               C32923 +
           ((C21506 + C21505) * C32677 + (C21504 + C21503) * C15054 +
            (C21502 + C21501) * C15047 + (C21500 + C21499) * C15053) *
               C32936) *
              C32592 * C249 +
          ((C21515 * C15053 + C21516 * C15047 + (C21514 + C21513) * C15054 +
            (C21512 + C21511) * C32677) *
               C32936 +
           (C21481 * C15053 + C21482 * C15047 + (C21510 + C21509) * C15054 +
            (C21508 + C21507) * C32677) *
               C32923 +
           ((C21318 + C21317) * C15053 + (C21316 + C21315) * C15047 +
            (C20430 * C1011 + C20428 * C1018 + C20431 * C1707 +
             C32719 * C1712) *
                C15054 +
            (C20430 * C1017 + C20428 * C1029 + C20431 * C1713 +
             C32719 * C1716) *
                C32677) *
               C32893) *
              C32592 * C250) *
         C32566) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C20430 * C115 + C20428 * C122 + C20431 * C361 + C32719 * C376) *
               C15791 +
           (C20430 * C123 + C20428 * C136 + C20431 * C375 + C32719 * C391) *
               C32946 +
           (C21499 + C21500) * C15792 + (C21501 + C21502) * C32942 +
           C21515 * C15793 + C21516 * C32932 + (C21514 + C21513) * C15794 +
           (C21512 + C21511) * C32914) *
              C32533 * C32592 * C32578 * C110 -
          ((C21507 + C21508) * C32914 + (C21509 + C21510) * C15794 +
           C21859 * C32932 + C21860 * C15793 + C21861 * C32942 +
           C21862 * C15792 + (C20468 + C20467) * C32946 +
           (C20466 + C20465) * C15791) *
              C32533 * C32592 * C32578 * C111 +
          (C20481 * C15791 + C20482 * C32946 + C23235 * C15792 +
           C23236 * C32942 + (C21318 + C21317) * C15793 +
           (C21316 + C21315) * C32932 +
           (C20430 * C1011 + C20428 * C1018 + C20431 * C1707 + C32719 * C1712) *
               C15794 +
           (C20430 * C1017 + C20428 * C1029 + C20431 * C1713 + C32719 * C1716) *
               C32914) *
              C32533 * C32592 * C32578 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C20430 * C115 + C20428 * C122 + C20431 * C361 + C32719 * C376) *
               C15791 +
           (C20430 * C123 + C20428 * C136 + C20431 * C375 + C32719 * C391) *
               C32946 +
           (C21499 + C21500) * C15792 + (C21501 + C21502) * C32942 +
           C21515 * C15793 + C21516 * C32932 + C27378 * C15794 +
           C27379 * C32914) *
              C32533 * C32592 * C248 -
          ((C27388 + C27389) * C32914 + (C27390 + C27391) * C15794 +
           (C21511 + C21512) * C32932 + (C21513 + C21514) * C15793 +
           (C21506 + C21505) * C32942 + (C21504 + C21503) * C15792 +
           (C21502 + C21501) * C32946 + (C21500 + C21499) * C15791) *
              C32533 * C32592 * C249 +
          (C21515 * C15791 + C21516 * C32946 + C27378 * C15792 +
           C27379 * C32942 + (C27391 + C27390) * C15793 +
           (C27389 + C27388) * C32932 +
           (C20430 * C6320 + C20428 * C6323 + C20431 * C6674 + C32719 * C6675) *
               C15794 +
           (C20430 * C6322 + C20428 * C6326 + C20431 * C6676 + C32719 * C6677) *
               C32914) *
              C32533 * C32592 * C250) *
         C32566) /
            (p * q * std::sqrt(p + q));
    d2ee[50] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C32632 * C122) * C7698 +
             (C113 * C123 + C32632 * C136) * C7692 + C1056 * C7699 +
             C1057 * C7693 + C1058 * C7700 + C1059 * C7694 + C1065 * C7701 +
             C1064 * C32914) *
                C32854 +
            (C7703 + C7704 + C7705 + C7706 + C7707 + C7708 + C7709 + C7710) *
                C32543) *
               C32592 * C479 -
           ((C8045 + C8046 + C8047 + C8048 + C8049 + C8050 + C8051 + C8052) *
                C32543 +
            (C6338 * C32914 + C6337 * C7701 + C1064 * C7694 + C1065 * C7700 +
             C1059 * C7693 + C1058 * C7699 + C1057 * C7692 + C1056 * C7698) *
                C32854) *
               C32592 * C480) *
              C481 +
          (((C8052 + C8051 + C8050 + C8049 + C8048 + C8047 + C8046 + C8045) *
                C32854 +
            (C509 * C7698 + C508 * C7692 + C888 * C7699 + C889 * C7693 +
             C1061 * C7700 + C1060 * C7694 +
             (C113 * C1016 + C32632 * C1027) * C7701 +
             (C113 * C1028 + C32632 * C1034) * C32914) *
                C32543) *
               C32592 * C480 -
           ((C7711 + C7712 + C7713 + C7714 + C7715 + C7716 + C7717 + C7718) *
                C32543 +
            (C7710 + C7709 + C7708 + C7707 + C7706 + C7705 + C7704 + C7703) *
                C32854) *
               C32592 * C479) *
              C482)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C32632 * C122) * C2784 +
             (C113 * C123 + C32632 * C136) * C32873 + C1056 * C2785 +
             C1057 * C32677) *
                C2780 +
            (C2787 + C2788 + C2789 + C2790) * C2781 + C2807 * C2782 +
            C2808 * C32908) *
               C32592 * C479 -
           ((C3135 + C3136 + C3137 + C3138) * C32908 +
            (C3139 + C3140 + C3141 + C3142) * C2782 +
            (C3143 + C3144 + C3145 + C3146) * C2781 +
            (C1059 * C32677 + C1058 * C2785 + C1057 * C32873 + C1056 * C2784) *
                C2780) *
               C32592 * C480) *
              C481 +
          (((C3146 + C3145 + C3144 + C3143) * C2780 +
            (C3142 + C3141 + C3140 + C3139) * C2781 +
            (C3138 + C3137 + C3136 + C3135) * C2782 +
            (C505 * C2784 + C504 * C32873 +
             (C113 * C261 + C32632 * C280) * C2785 +
             (C113 * C281 + C32632 * C291) * C32677) *
                C32908) *
               C32592 * C480 -
           ((C2799 + C2800 + C2801 + C2802) * C32908 +
            (C2798 + C2797 + C2796 + C2795) * C2782 +
            (C2794 + C2793 + C2792 + C2791) * C2781 +
            (C2790 + C2789 + C2788 + C2787) * C2780) *
               C32592 * C479) *
              C482)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C10223 * C115 + C10220 * C122 + C10224 * C361 + C10221 * C376 +
              C10225 * C362 + C32907 * C377) *
                 C2784 +
             (C10223 * C123 + C10220 * C136 + C10224 * C375 + C10221 * C391 +
              C10225 * C378 + C32907 * C392) *
                 C32873 +
             (C11274 + C11275 + C11276) * C2785 +
             (C11277 + C11278 + C11279) * C32677) *
                C32854 +
            ((C10263 + C10264 + C10265) * C2784 +
             (C10266 + C10267 + C10268) * C32873 + C12996 * C2785 +
             C12997 * C32677) *
                C32543) *
               C32592 * C479 -
           (((C11569 + C11568 + C11567) * C32677 +
             (C11566 + C11565 + C11564) * C2785 + C12998 * C32873 +
             C12999 * C2784) *
                C32543 +
            ((C11285 + C11284 + C11283) * C32677 +
             (C11282 + C11281 + C11280) * C2785 +
             (C11279 + C11278 + C11277) * C32873 +
             (C11276 + C11275 + C11274) * C2784) *
                C32854) *
               C32592 * C480) *
              C481 +
          (((C12996 * C2784 + C12997 * C32873 +
             (C11564 + C11565 + C11566) * C2785 +
             (C11567 + C11568 + C11569) * C32677) *
                C32854 +
            ((C10683 + C10682 + C10681) * C2784 +
             (C10680 + C10679 + C10678) * C32873 +
             (C10223 * C259 + C10220 * C276 + C10224 * C1175 + C10221 * C1185 +
              C10225 * C1183 + C32907 * C1200) *
                 C2785 +
             (C10223 * C277 + C10220 * C289 + C10224 * C1184 + C10221 * C1202 +
              C10225 * C1201 + C32907 * C1210) *
                 C32677) *
                C32543) *
               C32592 * C480 -
           (((C10678 + C10679 + C10680) * C32677 +
             (C10681 + C10682 + C10683) * C2785 +
             (C10274 + C10273 + C10272) * C32873 +
             (C10271 + C10270 + C10269) * C2784) *
                C32543 +
            (C12998 * C32677 + C12999 * C2785 +
             (C10268 + C10267 + C10266) * C32873 +
             (C10265 + C10264 + C10263) * C2784) *
                C32854) *
               C32592 * C479) *
              C482)) /
            (p * q * std::sqrt(p + q));
    d2ee[51] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C32632 * C122) * C7698 +
             (C113 * C123 + C32632 * C136) * C7692 + C1056 * C7699 +
             C1057 * C7693 + C1058 * C7700 + C1059 * C7694 + C1065 * C7701 +
             C1064 * C32914) *
                C32854 +
            (C7703 + C7704 + C7705 + C7706 + C7707 + C7708 + C7709 + C7710) *
                C32543) *
               C601 -
           ((C8195 + C8196 + C8187 + C8188 + C8189 + C8190 + C8191 + C8192) *
                C32543 +
            (C6689 * C32914 + C6690 * C7701 + C1726 * C7694 + C1727 * C7700 +
             C1728 * C7693 + C1729 * C7699 +
             (C113 * C375 + C32632 * C391) * C7692 +
             (C113 * C361 + C32632 * C376) * C7698) *
                C32854) *
               C602) *
              C479 +
          (((C1729 * C7698 + C1728 * C7692 + C1727 * C7699 + C1726 * C7693 +
             C6690 * C7700 + C6689 * C7694 + C6688 * C7701 + C6687 * C32914) *
                C32854 +
            (C1551 * C7698 + C1550 * C7692 + C1549 * C7699 + C1548 * C7693 +
             C8194 * C7700 + C8193 * C7694 +
             (C113 * C6588 + C32632 * C6589) * C7701 +
             (C113 * C6590 + C32632 * C6591) * C32914) *
                C32543) *
               C602 -
           ((C8045 + C8046 + C8047 + C8048 + C8049 + C8050 + C8051 + C8052) *
                C32543 +
            (C6338 * C32914 + C6337 * C7701 + C1064 * C7694 + C1065 * C7700 +
             C1059 * C7693 + C1058 * C7699 + C1057 * C7692 + C1056 * C7698) *
                C32854) *
               C601) *
              C480) *
         C32566) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C32632 * C122) * C2784 +
             (C113 * C123 + C32632 * C136) * C32873 + C1056 * C2785 +
             C1057 * C32677) *
                C2780 +
            (C2787 + C2788 + C2789 + C2790) * C2781 + C2807 * C2782 +
            C2808 * C32908) *
               C601 -
           ((C3293 + C3294 + C3281 + C3282) * C32908 +
            (C3283 + C3284 + C3285 + C3286) * C2782 +
            (C3287 + C3288 + C3289 + C3290) * C2781 +
            (C1728 * C32677 + C1729 * C2785 +
             (C113 * C375 + C32632 * C391) * C32873 +
             (C113 * C361 + C32632 * C376) * C2784) *
                C2780) *
               C602) *
              C479 +
          (((C1729 * C2784 + C1728 * C32873 + C1727 * C2785 + C1726 * C32677) *
                C2780 +
            (C1551 * C2784 + C1550 * C32873 + C1549 * C2785 + C1548 * C32677) *
                C2781 +
            (C1547 * C2784 + C1546 * C32873 + C1545 * C2785 + C1544 * C32677) *
                C2782 +
            (C3292 * C2784 + C3291 * C32873 +
             (C113 * C1519 + C32632 * C1520) * C2785 +
             (C113 * C1521 + C32632 * C1522) * C32677) *
                C32908) *
               C602 -
           ((C3135 + C3136 + C3137 + C3138) * C32908 +
            (C3139 + C3140 + C3141 + C3142) * C2782 +
            (C3143 + C3144 + C3145 + C3146) * C2781 +
            (C1059 * C32677 + C1058 * C2785 + C1057 * C32873 + C1056 * C2784) *
                C2780) *
               C601) *
              C480) *
         C32566) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C10223 * C115 + C10220 * C122 + C10224 * C361 + C10221 * C376 +
              C10225 * C362 + C32907 * C377) *
                 C2784 +
             (C10223 * C123 + C10220 * C136 + C10224 * C375 + C10221 * C391 +
              C10225 * C378 + C32907 * C392) *
                 C32873 +
             (C11274 + C11275 + C11276) * C2785 +
             (C11277 + C11278 + C11279) * C32677) *
                C32854 +
            ((C10263 + C10264 + C10265) * C2784 +
             (C10266 + C10267 + C10268) * C32873 + C12996 * C2785 +
             C12997 * C32677) *
                C32543) *
               C601 -
           (((C13206 + C13207 + C13208) * C32677 +
             (C13209 + C13210 + C13211) * C2785 +
             (C10866 + C10867 + C10868) * C32873 +
             (C10869 + C10870 + C10871) * C2784) *
                C32543 +
            ((C11892 + C11893 + C11894) * C32677 +
             (C11895 + C11896 + C11897) * C2785 +
             (C10225 * C2136 + C32907 * C2146 + C10224 * C378 + C10221 * C392 +
              C10223 * C375 + C10220 * C391) *
                 C32873 +
             (C10225 * C2128 + C32907 * C2137 + C10224 * C362 + C10221 * C377 +
              C10223 * C361 + C10220 * C376) *
                 C2784) *
                C32854) *
               C602) *
              C479 +
          ((((C11897 + C11896 + C11895) * C2784 +
             (C11894 + C11893 + C11892) * C32873 +
             (C11891 + C11890 + C11889) * C2785 +
             (C11888 + C11887 + C11886) * C32677) *
                C32854 +
            ((C13211 + C13210 + C13209) * C2784 +
             (C13208 + C13207 + C13206) * C32873 +
             (C10223 * C1176 + C10220 * C1187 + C10224 * C1181 +
              C10221 * C1196 + C10225 * C7404 + C32907 * C7405) *
                 C2785 +
             (C10223 * C1186 + C10220 * C1203 + C10224 * C1197 +
              C10221 * C1208 + C10225 * C7406 + C32907 * C7407) *
                 C32677) *
                C32543) *
               C602 -
           (((C11569 + C11568 + C11567) * C32677 +
             (C11566 + C11565 + C11564) * C2785 + C12998 * C32873 +
             C12999 * C2784) *
                C32543 +
            ((C11285 + C11284 + C11283) * C32677 +
             (C11282 + C11281 + C11280) * C2785 +
             (C11279 + C11278 + C11277) * C32873 +
             (C11276 + C11275 + C11274) * C2784) *
                C32854) *
               C601) *
              C480) *
         C32566) /
            (p * q * std::sqrt(p + q));
    d2ee[52] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C113 * C115 + C32632 * C122) * C2784 +
                (C113 * C123 + C32632 * C136) * C32873 + C1056 * C2785 +
                C1057 * C32677) *
                   C2780 +
               (C2787 + C2788 + C2789 + C2790) * C2781 + C2807 * C2782 +
               C2808 * C32908) *
                  C32592 * C32578 * C110 -
              ((C2799 + C2800 + C2801 + C2802) * C32908 +
               (C2798 + C2797 + C2796 + C2795) * C2782 +
               (C2794 + C2793 + C2792 + C2791) * C2781 +
               (C2790 + C2789 + C2788 + C2787) * C2780) *
                  C32592 * C32578 * C111 +
              (C2807 * C2780 + C2808 * C2781 +
               (C2802 + C2801 + C2800 + C2799) * C2782 +
               (C173 * C2784 + C172 * C32873 +
                (C113 * C483 + C32632 * C484) * C2785 +
                (C113 * C485 + C32632 * C486) * C32677) *
                   C32908) *
                  C32592 * C32578 * C112) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C113 * C115 + C32632 * C122) * C2784 +
                (C113 * C123 + C32632 * C136) * C32873 + C1056 * C2785 +
                C1057 * C32677) *
                   C2780 +
               (C2787 + C2788 + C2789 + C2790) * C2781 + C2807 * C2782 +
               C2808 * C32908) *
                  C32592 * C248 -
              ((C890 * C32677 + C891 * C2785 + C506 * C32873 + C507 * C2784) *
                   C32908 +
               (C889 * C32677 + C888 * C2785 + C508 * C32873 + C509 * C2784) *
                   C2782 +
               (C886 * C32677 + C885 * C2785 + C510 * C32873 + C511 * C2784) *
                   C2781 +
               (C1059 * C32677 + C1058 * C2785 + C1057 * C32873 +
                C1056 * C2784) *
                   C2780) *
                  C32592 * C249 +
              ((C1058 * C2784 + C1059 * C32873 + C1065 * C2785 +
                C1064 * C32677) *
                   C2780 +
               (C885 * C2784 + C886 * C32873 + C1063 * C2785 + C1062 * C32677) *
                   C2781 +
               (C888 * C2784 + C889 * C32873 + C1061 * C2785 + C1060 * C32677) *
                   C2782 +
               (C891 * C2784 + C890 * C32873 +
                (C113 * C1357 + C32632 * C1358) * C2785 +
                (C113 * C1359 + C32632 * C1360) * C32677) *
                   C32908) *
                  C32592 * C250) *
             C32566) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C32632 * C122) * C2784 +
            (C113 * C123 + C32632 * C136) * C32873 + C1056 * C2785 +
            C1057 * C32677) *
               C2780 +
           (C2787 + C2788 + C2789 + C2790) * C2781 + C2807 * C2782 +
           C2808 * C32908) *
              C354 -
          (((C113 * C733 + C32632 * C739) * C32677 +
            (C113 * C724 + C32632 * C732) * C2785 + C626 * C32873 +
            C627 * C2784) *
               C32908 +
           (C1546 * C32677 + C1547 * C2785 + C628 * C32873 + C629 * C2784) *
               C2782 +
           (C1550 * C32677 + C1551 * C2785 + C630 * C32873 + C631 * C2784) *
               C2781 +
           (C1728 * C32677 + C1729 * C2785 +
            (C113 * C375 + C32632 * C391) * C32873 +
            (C113 * C361 + C32632 * C376) * C2784) *
               C2780) *
              C355 +
          (((C113 * C362 + C32632 * C377) * C2784 +
            (C113 * C378 + C32632 * C392) * C32873 +
            (C113 * C1178 + C32632 * C1190) * C2785 +
            (C113 * C1191 + C32632 * C1205) * C32677) *
               C2780 +
           ((C113 * C363 + C32632 * C379) * C2784 +
            (C113 * C380 + C32632 * C393) * C32873 +
            (C113 * C1180 + C32632 * C1194) * C2785 +
            (C113 * C1195 + C32632 * C1207) * C32677) *
               C2781 +
           ((C113 * C364 + C32632 * C381) * C2784 +
            (C113 * C382 + C32632 * C394) * C32873 +
            (C113 * C1182 + C32632 * C1198) * C2785 +
            (C113 * C1199 + C32632 * C1209) * C32677) *
               C2782 +
           ((C113 * C365 + C32632 * C383) * C2784 +
            (C113 * C384 + C32632 * C395) * C32873 +
            (C113 * C2296 + C32632 * C2297) * C2785 +
            (C113 * C2298 + C32632 * C2299) * C32677) *
               C32908) *
              C356) *
         C32578 * C32566) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C32632 * C122) * C7698 +
            (C113 * C123 + C32632 * C136) * C7692 + C1056 * C7699 +
            C1057 * C7693 + C1058 * C7700 + C1059 * C7694 + C1065 * C7701 +
            C1064 * C32914) *
               C32854 +
           (C7703 + C7704 + C7705 + C7706 + C7707 + C7708 + C7709 + C7710) *
               C32543) *
              C32592 * C32578 * C110 -
          ((C7711 + C7712 + C7713 + C7714 + C7715 + C7716 + C7717 + C7718) *
               C32543 +
           (C7710 + C7709 + C7708 + C7707 + C7706 + C7705 + C7704 + C7703) *
               C32854) *
              C32592 * C32578 * C111 +
          ((C7718 + C7717 + C7716 + C7715 + C7714 + C7713 + C7712 + C7711) *
               C32854 +
           (C168 * C7698 + C169 * C7692 + C507 * C7699 + C506 * C7693 +
            C891 * C7700 + C890 * C7694 +
            (C113 * C1357 + C32632 * C1358) * C7701 +
            (C113 * C1359 + C32632 * C1360) * C32914) *
               C32543) *
              C32592 * C32578 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C32632 * C122) * C7698 +
            (C113 * C123 + C32632 * C136) * C7692 + C1056 * C7699 +
            C1057 * C7693 + C1058 * C7700 + C1059 * C7694 + C1065 * C7701 +
            C1064 * C32914) *
               C32854 +
           (C7703 + C7704 + C7705 + C7706 + C7707 + C7708 + C7709 + C7710) *
               C32543) *
              C32592 * C248 -
          ((C6506 * C32914 + C6505 * C7701 + C1062 * C7694 + C1063 * C7700 +
            C886 * C7693 + C885 * C7699 + C510 * C7692 + C511 * C7698) *
               C32543 +
           (C6338 * C32914 + C6337 * C7701 + C1064 * C7694 + C1065 * C7700 +
            C1059 * C7693 + C1058 * C7699 + C1057 * C7692 + C1056 * C7698) *
               C32854) *
              C32592 * C249 +
          ((C1058 * C7698 + C1059 * C7692 + C1065 * C7699 + C1064 * C7693 +
            C6337 * C7700 + C6338 * C7694 + C6340 * C7701 + C6339 * C32914) *
               C32854 +
           (C885 * C7698 + C886 * C7692 + C1063 * C7699 + C1062 * C7693 +
            C6505 * C7700 + C6506 * C7694 +
            (C113 * C6496 + C32632 * C6497) * C7701 +
            (C113 * C6498 + C32632 * C6499) * C32914) *
               C32543) *
              C32592 * C250) *
         C32566) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C32632 * C122) * C7698 +
            (C113 * C123 + C32632 * C136) * C7692 + C1056 * C7699 +
            C1057 * C7693 + C1058 * C7700 + C1059 * C7694 + C1065 * C7701 +
            C1064 * C32914) *
               C32854 +
           (C7703 + C7704 + C7705 + C7706 + C7707 + C7708 + C7709 + C7710) *
               C32543) *
              C354 -
          (((C113 * C1711 + C32632 * C1715) * C32914 +
            (C113 * C1706 + C32632 * C1710) * C7701 + C1548 * C7694 +
            C1549 * C7700 + C1550 * C7693 + C1551 * C7699 + C630 * C7692 +
            C631 * C7698) *
               C32543 +
           (C6689 * C32914 + C6690 * C7701 + C1726 * C7694 + C1727 * C7700 +
            C1728 * C7693 + C1729 * C7699 +
            (C113 * C375 + C32632 * C391) * C7692 +
            (C113 * C361 + C32632 * C376) * C7698) *
               C32854) *
              C355 +
          (((C113 * C362 + C32632 * C377) * C7698 +
            (C113 * C378 + C32632 * C392) * C7692 +
            (C113 * C1178 + C32632 * C1190) * C7699 +
            (C113 * C1191 + C32632 * C1205) * C7693 +
            (C113 * C1179 + C32632 * C1192) * C7700 +
            (C113 * C1193 + C32632 * C1206) * C7694 +
            (C113 * C6403 + C32632 * C6407) * C7701 +
            (C113 * C6408 + C32632 * C6412) * C32914) *
               C32854 +
           ((C113 * C363 + C32632 * C379) * C7698 +
            (C113 * C380 + C32632 * C393) * C7692 +
            (C113 * C1180 + C32632 * C1194) * C7699 +
            (C113 * C1195 + C32632 * C1207) * C7693 +
            (C113 * C1181 + C32632 * C1196) * C7700 +
            (C113 * C1197 + C32632 * C1208) * C7694 +
            (C113 * C7236 + C32632 * C7237) * C7701 +
            (C113 * C7238 + C32632 * C7239) * C32914) *
               C32543) *
              C356) *
         C32578 * C32566) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C10223 * C115 + C10220 * C122 + C10224 * C361 + C10221 * C376 +
             C10225 * C362 + C32907 * C377) *
                C2784 +
            (C10223 * C123 + C10220 * C136 + C10224 * C375 + C10221 * C391 +
             C10225 * C378 + C32907 * C392) *
                C32873 +
            (C11274 + C11275 + C11276) * C2785 +
            (C11277 + C11278 + C11279) * C32677) *
               C32854 +
           ((C10263 + C10264 + C10265) * C2784 +
            (C10266 + C10267 + C10268) * C32873 +
            (C10689 + C10688 + C10687) * C2785 +
            (C10686 + C10685 + C10684) * C32677) *
               C32543) *
              C32592 * C32578 * C110 -
          (((C10678 + C10679 + C10680) * C32677 +
            (C10681 + C10682 + C10683) * C2785 +
            (C10274 + C10273 + C10272) * C32873 +
            (C10271 + C10270 + C10269) * C2784) *
               C32543 +
           ((C10684 + C10685 + C10686) * C32677 +
            (C10687 + C10688 + C10689) * C2785 +
            (C10268 + C10267 + C10266) * C32873 +
            (C10265 + C10264 + C10263) * C2784) *
               C32854) *
              C32592 * C32578 * C111 +
          ((C10283 * C2784 + C10284 * C32873 +
            (C10683 + C10682 + C10681) * C2785 +
            (C10680 + C10679 + C10678) * C32677) *
               C32854 +
           ((C10280 + C10279 + C10278) * C2784 +
            (C10277 + C10276 + C10275) * C32873 +
            (C10223 * C253 + C10220 * C265 + C10224 * C724 + C10221 * C732 +
             C10225 * C2296 + C32907 * C2297) *
                C2785 +
            (C10223 * C264 + C10220 * C283 + C10224 * C733 + C10221 * C739 +
             C10225 * C2298 + C32907 * C2299) *
                C32677) *
               C32543) *
              C32592 * C32578 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C10223 * C115 + C10220 * C122 + C10224 * C361 + C10221 * C376 +
             C10225 * C362 + C32907 * C377) *
                C2784 +
            (C10223 * C123 + C10220 * C136 + C10224 * C375 + C10221 * C391 +
             C10225 * C378 + C32907 * C392) *
                C32873 +
            (C11274 + C11275 + C11276) * C2785 +
            (C11277 + C11278 + C11279) * C32677) *
               C32854 +
           ((C10263 + C10264 + C10265) * C2784 +
            (C10266 + C10267 + C10268) * C32873 +
            (C10689 + C10688 + C10687) * C2785 +
            (C10686 + C10685 + C10684) * C32677) *
               C32543) *
              C32592 * C248 -
          (((C11569 + C11568 + C11567) * C32677 +
            (C11566 + C11565 + C11564) * C2785 +
            (C10684 + C10685 + C10686) * C32873 +
            (C10687 + C10688 + C10689) * C2784) *
               C32543 +
           ((C11285 + C11284 + C11283) * C32677 +
            (C11282 + C11281 + C11280) * C2785 +
            (C11279 + C11278 + C11277) * C32873 +
            (C11276 + C11275 + C11274) * C2784) *
               C32854) *
              C32592 * C249 +
          ((C11294 * C2784 + C11295 * C32873 +
            (C11291 + C11290 + C11289) * C2785 +
            (C11288 + C11287 + C11286) * C32677) *
               C32854 +
           ((C11564 + C11565 + C11566) * C2784 +
            (C11567 + C11568 + C11569) * C32873 +
            (C10223 * C1012 + C10220 * C1020 + C10224 * C1706 + C10221 * C1710 +
             C10225 * C7236 + C32907 * C7237) *
                C2785 +
            (C10223 * C1019 + C10220 * C1030 + C10224 * C1711 + C10221 * C1715 +
             C10225 * C7238 + C32907 * C7239) *
                C32677) *
               C32543) *
              C32592 * C250) *
         C32566) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C10223 * C115 + C10220 * C122 + C10224 * C361 + C10221 * C376 +
             C10225 * C362 + C32907 * C377) *
                C2784 +
            (C10223 * C123 + C10220 * C136 + C10224 * C375 + C10221 * C391 +
             C10225 * C378 + C32907 * C392) *
                C32873 +
            (C11274 + C11275 + C11276) * C2785 +
            (C11277 + C11278 + C11279) * C32677) *
               C32854 +
           ((C10263 + C10264 + C10265) * C2784 +
            (C10266 + C10267 + C10268) * C32873 +
            (C10689 + C10688 + C10687) * C2785 +
            (C10686 + C10685 + C10684) * C32677) *
               C32543) *
              C354 -
          (((C10225 * C2674 + C32907 * C2678 + C10224 * C1195 + C10221 * C1207 +
             C10223 * C729 + C10220 * C737) *
                C32677 +
            (C10225 * C2669 + C32907 * C2673 + C10224 * C1180 + C10221 * C1194 +
             C10223 * C722 + C10220 * C728) *
                C2785 +
            (C10866 + C10867 + C10868) * C32873 +
            (C10869 + C10870 + C10871) * C2784) *
               C32543 +
           ((C11892 + C11893 + C11894) * C32677 +
            (C11895 + C11896 + C11897) * C2785 +
            (C10225 * C2136 + C32907 * C2146 + C10224 * C378 + C10221 * C392 +
             C10223 * C375 + C10220 * C391) *
                C32873 +
            (C10225 * C2128 + C32907 * C2137 + C10224 * C362 + C10221 * C377 +
             C10223 * C361 + C10220 * C376) *
                C2784) *
               C32854) *
              C355 +
          (((C10223 * C362 + C10220 * C377 + C10224 * C2128 + C10221 * C2137 +
             C10225 * C2129 + C32907 * C2138) *
                C2784 +
            (C10223 * C378 + C10220 * C392 + C10224 * C2136 + C10221 * C2146 +
             C10225 * C2139 + C32907 * C2147) *
                C32873 +
            (C10223 * C1178 + C10220 * C1190 + C10224 * C2668 + C10221 * C2671 +
             C10225 * C7079 + C32907 * C7083) *
                C2785 +
            (C10223 * C1191 + C10220 * C1205 + C10224 * C2672 + C10221 * C2677 +
             C10225 * C7084 + C32907 * C7088) *
                C32677) *
               C32854 +
           ((C10223 * C363 + C10220 * C379 + C10224 * C2127 + C10221 * C2135 +
             C10225 * C2130 + C32907 * C2140) *
                C2784 +
            (C10223 * C380 + C10220 * C393 + C10224 * C2134 + C10221 * C2145 +
             C10225 * C2141 + C32907 * C2148) *
                C32873 +
            (C10223 * C1180 + C10220 * C1194 + C10224 * C2669 + C10221 * C2673 +
             C10225 * C12183 + C32907 * C12184) *
                C2785 +
            (C10223 * C1195 + C10220 * C1207 + C10224 * C2674 + C10221 * C2678 +
             C10225 * C12185 + C32907 * C12186) *
                C32677) *
               C32543) *
              C356) *
         C32578 * C32566) /
            (p * q * std::sqrt(p + q));
    d2ee[53] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C32632 * C122) * C7698 +
             (C113 * C123 + C32632 * C136) * C7692 + C1056 * C7699 +
             C1057 * C7693 + C1058 * C7700 + C1059 * C7694 + C1065 * C7701 +
             C1064 * C32914) *
                C32854 +
            (C7703 + C7704 + C7705 + C7706 + C7707 + C7708 + C7709 + C7710) *
                C32543) *
               C601 -
           ((C8195 + C8196 + C8187 + C8188 + C8189 + C8190 + C8191 + C8192) *
                C32543 +
            (C6689 * C32914 + C6690 * C7701 + C1726 * C7694 + C1727 * C7700 +
             C1728 * C7693 + C1729 * C7699 +
             (C113 * C375 + C32632 * C391) * C7692 +
             (C113 * C361 + C32632 * C376) * C7698) *
                C32854) *
               C602) *
              C32578 * C481 +
          (((C8192 + C8191 + C8190 + C8189 + C8188 + C8187 + C8196 + C8195) *
                C32854 +
            (C629 * C7698 + C628 * C7692 + C1547 * C7699 + C1546 * C7693 +
             C1545 * C7700 + C1544 * C7694 +
             (C113 * C1707 + C32632 * C1712) * C7701 +
             (C113 * C1713 + C32632 * C1716) * C32914) *
                C32543) *
               C602 -
           ((C7711 + C7712 + C7713 + C7714 + C7715 + C7716 + C7717 + C7718) *
                C32543 +
            (C7710 + C7709 + C7708 + C7707 + C7706 + C7705 + C7704 + C7703) *
                C32854) *
               C601) *
              C32578 * C482)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C32632 * C122) * C2784 +
             (C113 * C123 + C32632 * C136) * C32873 + C1056 * C2785 +
             C1057 * C32677) *
                C2780 +
            (C2787 + C2788 + C2789 + C2790) * C2781 + C2807 * C2782 +
            C2808 * C32908) *
               C601 -
           ((C3293 + C3294 + C3281 + C3282) * C32908 +
            (C3283 + C3284 + C3285 + C3286) * C2782 +
            (C3287 + C3288 + C3289 + C3290) * C2781 +
            (C1728 * C32677 + C1729 * C2785 +
             (C113 * C375 + C32632 * C391) * C32873 +
             (C113 * C361 + C32632 * C376) * C2784) *
                C2780) *
               C602) *
              C32578 * C481 +
          (((C3290 + C3289 + C3288 + C3287) * C2780 +
            (C3286 + C3285 + C3284 + C3283) * C2781 +
            (C3282 + C3281 + C3294 + C3293) * C2782 +
            (C625 * C2784 + C624 * C32873 +
             (C113 * C725 + C32632 * C734) * C2785 +
             (C113 * C735 + C32632 * C740) * C32677) *
                C32908) *
               C602 -
           ((C2799 + C2800 + C2801 + C2802) * C32908 +
            (C2798 + C2797 + C2796 + C2795) * C2782 +
            (C2794 + C2793 + C2792 + C2791) * C2781 +
            (C2790 + C2789 + C2788 + C2787) * C2780) *
               C601) *
              C32578 * C482)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C10223 * C115 + C10220 * C122 + C10224 * C361 + C10221 * C376 +
              C10225 * C362 + C32907 * C377) *
                 C2784 +
             (C10223 * C123 + C10220 * C136 + C10224 * C375 + C10221 * C391 +
              C10225 * C378 + C32907 * C392) *
                 C32873 +
             (C11274 + C11275 + C11276) * C2785 +
             (C11277 + C11278 + C11279) * C32677) *
                C32854 +
            ((C10263 + C10264 + C10265) * C2784 +
             (C10266 + C10267 + C10268) * C32873 + C12996 * C2785 +
             C12997 * C32677) *
                C32543) *
               C601 -
           (((C13206 + C13207 + C13208) * C32677 +
             (C13209 + C13210 + C13211) * C2785 +
             (C10866 + C10867 + C10868) * C32873 +
             (C10869 + C10870 + C10871) * C2784) *
                C32543 +
            ((C11892 + C11893 + C11894) * C32677 +
             (C11895 + C11896 + C11897) * C2785 +
             (C10225 * C2136 + C32907 * C2146 + C10224 * C378 + C10221 * C392 +
              C10223 * C375 + C10220 * C391) *
                 C32873 +
             (C10225 * C2128 + C32907 * C2137 + C10224 * C362 + C10221 * C377 +
              C10223 * C361 + C10220 * C376) *
                 C2784) *
                C32854) *
               C602) *
              C32578 * C481 +
          ((((C10871 + C10870 + C10869) * C2784 +
             (C10868 + C10867 + C10866) * C32873 +
             (C13211 + C13210 + C13209) * C2785 +
             (C13208 + C13207 + C13206) * C32677) *
                C32854 +
            ((C10865 + C10864 + C10863) * C2784 +
             (C10862 + C10861 + C10860) * C32873 +
             (C10223 * C723 + C10220 * C730 + C10224 * C1182 + C10221 * C1198 +
              C10225 * C2670 + C32907 * C2675) *
                 C2785 +
             (C10223 * C731 + C10220 * C738 + C10224 * C1199 + C10221 * C1209 +
              C10225 * C2676 + C32907 * C2679) *
                 C32677) *
                C32543) *
               C602 -
           (((C10678 + C10679 + C10680) * C32677 +
             (C10681 + C10682 + C10683) * C2785 +
             (C10274 + C10273 + C10272) * C32873 +
             (C10271 + C10270 + C10269) * C2784) *
                C32543 +
            (C12998 * C32677 + C12999 * C2785 +
             (C10268 + C10267 + C10266) * C32873 +
             (C10265 + C10264 + C10263) * C2784) *
                C32854) *
               C601) *
              C32578 * C482)) /
            (p * q * std::sqrt(p + q));
    d2ee[54] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C32632 * C122) * C2784 +
            (C113 * C123 + C32632 * C136) * C32873 + C1056 * C2785 +
            C1057 * C32677) *
               C2780 +
           (C2787 + C2788 + C2789 + C2790) * C2781 + C2807 * C2782 +
           C2808 * C32908) *
              C32592 * C248 -
          ((C890 * C32677 + C891 * C2785 + C506 * C32873 + C507 * C2784) *
               C32908 +
           (C889 * C32677 + C888 * C2785 + C508 * C32873 + C509 * C2784) *
               C2782 +
           (C886 * C32677 + C885 * C2785 + C510 * C32873 + C511 * C2784) *
               C2781 +
           (C1059 * C32677 + C1058 * C2785 + C1057 * C32873 + C1056 * C2784) *
               C2780) *
              C32592 * C249 +
          ((C1058 * C2784 + C1059 * C32873 + C1065 * C2785 + C1064 * C32677) *
               C2780 +
           (C885 * C2784 + C886 * C32873 + C1063 * C2785 + C1062 * C32677) *
               C2781 +
           (C888 * C2784 + C889 * C32873 + C1061 * C2785 + C1060 * C32677) *
               C2782 +
           (C891 * C2784 + C890 * C32873 +
            (C113 * C1357 + C32632 * C1358) * C2785 +
            (C113 * C1359 + C32632 * C1360) * C32677) *
               C32908) *
              C32592 * C250) *
         C32566) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C32632 * C122) * C2784 +
            (C113 * C123 + C32632 * C136) * C32873 + C1056 * C2785 +
            C1057 * C32677) *
               C2780 +
           (C2787 + C2788 + C2789 + C2790) * C2781 + C2807 * C2782 +
           C2808 * C32908) *
              C32592 * C32578 * C110 -
          ((C2799 + C2800 + C2801 + C2802) * C32908 +
           (C2798 + C2797 + C2796 + C2795) * C2782 +
           (C2794 + C2793 + C2792 + C2791) * C2781 +
           (C2790 + C2789 + C2788 + C2787) * C2780) *
              C32592 * C32578 * C111 +
          (C2807 * C2780 + C2808 * C2781 +
           (C2802 + C2801 + C2800 + C2799) * C2782 +
           (C173 * C2784 + C172 * C32873 +
            (C113 * C483 + C32632 * C484) * C2785 +
            (C113 * C485 + C32632 * C486) * C32677) *
               C32908) *
              C32592 * C32578 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C32632 * C122) * C7698 +
            (C113 * C123 + C32632 * C136) * C7692 + C1056 * C7699 +
            C1057 * C7693 + C1058 * C7700 + C1059 * C7694 + C1065 * C7701 +
            C1064 * C32914) *
               C32854 +
           (C7703 + C7704 + C7705 + C7706 + C7707 + C7708 + C7709 + C7710) *
               C32543) *
              C32592 * C32578 * C110 -
          ((C7711 + C7712 + C7713 + C7714 + C7715 + C7716 + C7717 + C7718) *
               C32543 +
           (C7710 + C7709 + C7708 + C7707 + C7706 + C7705 + C7704 + C7703) *
               C32854) *
              C32592 * C32578 * C111 +
          ((C7718 + C7717 + C7716 + C7715 + C7714 + C7713 + C7712 + C7711) *
               C32854 +
           (C168 * C7698 + C169 * C7692 + C507 * C7699 + C506 * C7693 +
            C891 * C7700 + C890 * C7694 +
            (C113 * C1357 + C32632 * C1358) * C7701 +
            (C113 * C1359 + C32632 * C1360) * C32914) *
               C32543) *
              C32592 * C32578 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C32632 * C122) * C7698 +
            (C113 * C123 + C32632 * C136) * C7692 + C1056 * C7699 +
            C1057 * C7693 + C1058 * C7700 + C1059 * C7694 + C1065 * C7701 +
            C1064 * C32914) *
               C32854 +
           (C7703 + C7704 + C7705 + C7706 + C7707 + C7708 + C7709 + C7710) *
               C32543) *
              C32592 * C248 -
          ((C6506 * C32914 + C6505 * C7701 + C1062 * C7694 + C1063 * C7700 +
            C886 * C7693 + C885 * C7699 + C510 * C7692 + C511 * C7698) *
               C32543 +
           (C6338 * C32914 + C6337 * C7701 + C1064 * C7694 + C1065 * C7700 +
            C1059 * C7693 + C1058 * C7699 + C1057 * C7692 + C1056 * C7698) *
               C32854) *
              C32592 * C249 +
          ((C1058 * C7698 + C1059 * C7692 + C1065 * C7699 + C1064 * C7693 +
            C6337 * C7700 + C6338 * C7694 + C6340 * C7701 + C6339 * C32914) *
               C32854 +
           (C885 * C7698 + C886 * C7692 + C1063 * C7699 + C1062 * C7693 +
            C6505 * C7700 + C6506 * C7694 +
            (C113 * C6496 + C32632 * C6497) * C7701 +
            (C113 * C6498 + C32632 * C6499) * C32914) *
               C32543) *
              C32592 * C250) *
         C32566) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C10223 * C115 + C10220 * C122 + C10224 * C361 + C10221 * C376 +
             C10225 * C362 + C32907 * C377) *
                C2784 +
            (C10223 * C123 + C10220 * C136 + C10224 * C375 + C10221 * C391 +
             C10225 * C378 + C32907 * C392) *
                C32873 +
            (C11274 + C11275 + C11276) * C2785 +
            (C11277 + C11278 + C11279) * C32677) *
               C32854 +
           ((C10263 + C10264 + C10265) * C2784 +
            (C10266 + C10267 + C10268) * C32873 +
            (C10689 + C10688 + C10687) * C2785 +
            (C10686 + C10685 + C10684) * C32677) *
               C32543) *
              C32592 * C32578 * C110 -
          (((C10678 + C10679 + C10680) * C32677 +
            (C10681 + C10682 + C10683) * C2785 +
            (C10274 + C10273 + C10272) * C32873 +
            (C10271 + C10270 + C10269) * C2784) *
               C32543 +
           ((C10684 + C10685 + C10686) * C32677 +
            (C10687 + C10688 + C10689) * C2785 +
            (C10268 + C10267 + C10266) * C32873 +
            (C10265 + C10264 + C10263) * C2784) *
               C32854) *
              C32592 * C32578 * C111 +
          ((C10283 * C2784 + C10284 * C32873 +
            (C10683 + C10682 + C10681) * C2785 +
            (C10680 + C10679 + C10678) * C32677) *
               C32854 +
           ((C10280 + C10279 + C10278) * C2784 +
            (C10277 + C10276 + C10275) * C32873 +
            (C10223 * C253 + C10220 * C265 + C10224 * C724 + C10221 * C732 +
             C10225 * C2296 + C32907 * C2297) *
                C2785 +
            (C10223 * C264 + C10220 * C283 + C10224 * C733 + C10221 * C739 +
             C10225 * C2298 + C32907 * C2299) *
                C32677) *
               C32543) *
              C32592 * C32578 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C10223 * C115 + C10220 * C122 + C10224 * C361 + C10221 * C376 +
             C10225 * C362 + C32907 * C377) *
                C2784 +
            (C10223 * C123 + C10220 * C136 + C10224 * C375 + C10221 * C391 +
             C10225 * C378 + C32907 * C392) *
                C32873 +
            (C11274 + C11275 + C11276) * C2785 +
            (C11277 + C11278 + C11279) * C32677) *
               C32854 +
           ((C10263 + C10264 + C10265) * C2784 +
            (C10266 + C10267 + C10268) * C32873 +
            (C10689 + C10688 + C10687) * C2785 +
            (C10686 + C10685 + C10684) * C32677) *
               C32543) *
              C32592 * C248 -
          (((C11569 + C11568 + C11567) * C32677 +
            (C11566 + C11565 + C11564) * C2785 +
            (C10684 + C10685 + C10686) * C32873 +
            (C10687 + C10688 + C10689) * C2784) *
               C32543 +
           ((C11285 + C11284 + C11283) * C32677 +
            (C11282 + C11281 + C11280) * C2785 +
            (C11279 + C11278 + C11277) * C32873 +
            (C11276 + C11275 + C11274) * C2784) *
               C32854) *
              C32592 * C249 +
          ((C11294 * C2784 + C11295 * C32873 +
            (C11291 + C11290 + C11289) * C2785 +
            (C11288 + C11287 + C11286) * C32677) *
               C32854 +
           ((C11564 + C11565 + C11566) * C2784 +
            (C11567 + C11568 + C11569) * C32873 +
            (C10223 * C1012 + C10220 * C1020 + C10224 * C1706 + C10221 * C1710 +
             C10225 * C7236 + C32907 * C7237) *
                C2785 +
            (C10223 * C1019 + C10220 * C1030 + C10224 * C1711 + C10221 * C1715 +
             C10225 * C7238 + C32907 * C7239) *
                C32677) *
               C32543) *
              C32592 * C250) *
         C32566) /
            (p * q * std::sqrt(p + q));
    d2ee[55] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C3524 * C115 + C32874 * C122 + C3525 * C361 + C32719 * C376) *
                C7698 +
            (C3524 * C123 + C32874 * C136 + C3525 * C375 + C32719 * C391) *
                C7692 +
            (C4576 + C4577) * C7699 + (C4578 + C4579) * C7693 + C8619 * C7700 +
            C8620 * C7694 + C9597 * C7701 + C9598 * C32914) *
               C32533 * C32592 * C479 -
           ((C9607 + C9608) * C32914 + (C9609 + C9610) * C7701 +
            (C8643 + C8644) * C7694 + (C8645 + C8646) * C7700 +
            (C4588 + C4589) * C7693 + (C4590 + C4591) * C7699 +
            (C4579 + C4578) * C7692 + (C4577 + C4576) * C7698) *
               C32533 * C32592 * C480) *
              C481 +
          ((C4932 * C7698 + C4933 * C7692 + C8621 * C7699 + C8622 * C7693 +
            (C8642 + C8641) * C7700 + (C8640 + C8639) * C7694 +
            (C3524 * C1015 + C32874 * C1025 + C3525 * C6588 + C32719 * C6589) *
                C7701 +
            (C3524 * C1026 + C32874 * C1033 + C3525 * C6590 + C32719 * C6591) *
                C32914) *
               C32533 * C32592 * C480 -
           ((C8639 + C8640) * C32914 + (C8641 + C8642) * C7701 + C8987 * C7694 +
            C8988 * C7700 + C4936 * C7693 + C4937 * C7699 +
            (C3562 + C3561) * C7692 + (C3560 + C3559) * C7698) *
               C32533 * C32592 * C479) *
              C482)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C3524 * C115 + C32874 * C122 + C3525 * C361 + C32719 * C376) *
                 C2784 +
             (C3524 * C123 + C32874 * C136 + C3525 * C375 + C32719 * C391) *
                 C32873 +
             (C4576 + C4577) * C2785 + (C4578 + C4579) * C32677) *
                C854 +
            ((C3559 + C3560) * C2784 + (C3561 + C3562) * C32873 +
             C4932 * C2785 + C4933 * C32677) *
                C855 +
            C4397 * C32893) *
               C32592 * C479 -
           (((C4580 + C4581) * C32677 + (C4582 + C4583) * C2785 +
             C4934 * C32873 + C4935 * C2784) *
                C32893 +
            ((C4584 + C4585) * C32677 + (C4586 + C4587) * C2785 +
             C4936 * C32873 + C4937 * C2784) *
                C855 +
            ((C4588 + C4589) * C32677 + (C4590 + C4591) * C2785 +
             (C4579 + C4578) * C32873 + (C4577 + C4576) * C2784) *
                C854) *
               C32592 * C480) *
              C481 +
          (((C4932 * C2784 + C4933 * C32873 + (C4587 + C4586) * C2785 +
             (C4585 + C4584) * C32677) *
                C854 +
            (C4391 * C2784 + C4392 * C32873 + (C4583 + C4582) * C2785 +
             (C4581 + C4580) * C32677) *
                C855 +
            ((C3938 + C3937) * C2784 + (C3936 + C3935) * C32873 +
             (C3524 * C260 + C32874 * C278 + C3525 * C1519 + C32719 * C1520) *
                 C2785 +
             (C3524 * C279 + C32874 * C290 + C3525 * C1521 + C32719 * C1522) *
                 C32677) *
                C32893) *
               C32592 * C480 -
           (((C3935 + C3936) * C32677 + (C3937 + C3938) * C2785 +
             (C3570 + C3569) * C32873 + (C3568 + C3567) * C2784) *
                C32893 +
            (C4934 * C32677 + C4935 * C2785 + (C3566 + C3565) * C32873 +
             (C3564 + C3563) * C2784) *
                C855 +
            (C4936 * C32677 + C4937 * C2785 + (C3562 + C3561) * C32873 +
             (C3560 + C3559) * C2784) *
                C854) *
               C32592 * C479) *
              C482)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C13507 * C115 + C13503 * C122 + C13508 * C361 + C13504 * C376 +
             C13509 * C362 + C13505 * C377 + C13510 * C2128 + C32920 * C2137) *
                C2784 +
            (C13507 * C123 + C13503 * C136 + C13508 * C375 + C13504 * C391 +
             C13509 * C378 + C13505 * C392 + C13510 * C2136 + C32920 * C2146) *
                C32873 +
            (C14422 + C14423 + C14424 + C14425) * C2785 +
            (C14426 + C14427 + C14428 + C14429) * C32677) *
               C32533 * C32592 * C479 -
           ((C14430 + C14431 + C14432 + C14433) * C32677 +
            (C14434 + C14435 + C14436 + C14437) * C2785 +
            (C14429 + C14428 + C14427 + C14426) * C32873 +
            (C14425 + C14424 + C14423 + C14422) * C2784) *
               C32533 * C32592 * C480) *
              C481 +
          (((C13909 + C13908 + C13907 + C13906) * C2784 +
            (C13905 + C13904 + C13903 + C13902) * C32873 +
            (C13507 * C258 + C13503 * C274 + C13508 * C1176 + C13504 * C1187 +
             C13509 * C1181 + C13505 * C1196 + C13510 * C7404 +
             C32920 * C7405) *
                C2785 +
            (C13507 * C275 + C13503 * C288 + C13508 * C1186 + C13504 * C1203 +
             C13509 * C1197 + C13505 * C1208 + C13510 * C7406 +
             C32920 * C7407) *
                C32677) *
               C32533 * C32592 * C480 -
           ((C13902 + C13903 + C13904 + C13905) * C32677 +
            (C13906 + C13907 + C13908 + C13909) * C2785 +
            (C13551 + C13550 + C13549 + C13548) * C32873 +
            (C13547 + C13546 + C13545 + C13544) * C2784) *
               C32533 * C32592 * C479) *
              C482)) /
            (p * q * std::sqrt(p + q));
    d2ee[56] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C3524 * C115 + C32874 * C122 + C3525 * C361 + C32719 * C376) *
                C7698 +
            (C3524 * C123 + C32874 * C136 + C3525 * C375 + C32719 * C391) *
                C7692 +
            (C4576 + C4577) * C7699 + (C4578 + C4579) * C7693 + C8619 * C7700 +
            C8620 * C7694 + C9597 * C7701 + C9598 * C32914) *
               C32533 * C601 -
           ((C10107 + C10108) * C32914 + (C10109 + C10110) * C7701 +
            (C9397 + C9398) * C7694 + (C9399 + C9400) * C7700 +
            (C5358 + C5359) * C7693 + (C5360 + C5361) * C7699 +
            (C3525 * C378 + C32719 * C392 + C3524 * C375 + C32874 * C391) *
                C7692 +
            (C3525 * C362 + C32719 * C377 + C3524 * C361 + C32874 * C376) *
                C7698) *
               C32533 * C602) *
              C479 +
          (((C5361 + C5360) * C7698 + (C5359 + C5358) * C7692 +
            (C9400 + C9399) * C7699 + (C9398 + C9397) * C7693 +
            (C10110 + C10109) * C7700 + (C10108 + C10107) * C7694 +
            (C3524 * C6402 + C32874 * C6406 + C3525 * C6404 + C32719 * C6409) *
                C7701 +
            (C3524 * C6405 + C32874 * C6411 + C3525 * C6410 + C32719 * C6413) *
                C32914) *
               C32533 * C602 -
           ((C9607 + C9608) * C32914 + (C9609 + C9610) * C7701 +
            (C8643 + C8644) * C7694 + (C8645 + C8646) * C7700 +
            (C4588 + C4589) * C7693 + (C4590 + C4591) * C7699 +
            (C4579 + C4578) * C7692 + (C4577 + C4576) * C7698) *
               C32533 * C601) *
              C480) *
         C32566) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C3524 * C115 + C32874 * C122 + C3525 * C361 + C32719 * C376) *
                 C2784 +
             (C3524 * C123 + C32874 * C136 + C3525 * C375 + C32719 * C391) *
                 C32873 +
             (C4576 + C4577) * C2785 + (C4578 + C4579) * C32677) *
                C854 +
            ((C3559 + C3560) * C2784 + (C3561 + C3562) * C32873 +
             C4932 * C2785 + C4933 * C32677) *
                C855 +
            C4397 * C32893) *
               C601 -
           (((C5148 + C5149) * C32677 + (C5150 + C5151) * C2785 +
             (C4105 + C4106) * C32873 + (C4107 + C4108) * C2784) *
                C32893 +
            ((C5152 + C5153) * C32677 + (C5154 + C5155) * C2785 +
             (C4109 + C4110) * C32873 + (C4111 + C4112) * C2784) *
                C855 +
            ((C5358 + C5359) * C32677 + (C5360 + C5361) * C2785 +
             (C3525 * C378 + C32719 * C392 + C3524 * C375 + C32874 * C391) *
                 C32873 +
             (C3525 * C362 + C32719 * C377 + C3524 * C361 + C32874 * C376) *
                 C2784) *
                C854) *
               C602) *
              C479 +
          ((((C5361 + C5360) * C2784 + (C5359 + C5358) * C32873 +
             (C3524 * C1177 + C32874 * C1189 + C3525 * C1179 + C32719 * C1192) *
                 C2785 +
             (C3524 * C1188 + C32874 * C1204 + C3525 * C1193 + C32719 * C1206) *
                 C32677) *
                C854 +
            ((C5155 + C5154) * C2784 + (C5153 + C5152) * C32873 +
             (C3524 * C1176 + C32874 * C1187 + C3525 * C1181 + C32719 * C1196) *
                 C2785 +
             (C3524 * C1186 + C32874 * C1203 + C3525 * C1197 + C32719 * C1208) *
                 C32677) *
                C855 +
            ((C5151 + C5150) * C2784 + (C5149 + C5148) * C32873 +
             (C3524 * C1175 + C32874 * C1185 + C3525 * C1183 + C32719 * C1200) *
                 C2785 +
             (C3524 * C1184 + C32874 * C1202 + C3525 * C1201 + C32719 * C1210) *
                 C32677) *
                C32893) *
               C602 -
           (((C4580 + C4581) * C32677 + (C4582 + C4583) * C2785 +
             C4934 * C32873 + C4935 * C2784) *
                C32893 +
            ((C4584 + C4585) * C32677 + (C4586 + C4587) * C2785 +
             C4936 * C32873 + C4937 * C2784) *
                C855 +
            ((C4588 + C4589) * C32677 + (C4590 + C4591) * C2785 +
             (C4579 + C4578) * C32873 + (C4577 + C4576) * C2784) *
                C854) *
               C601) *
              C480) *
         C32566) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C13507 * C115 + C13503 * C122 + C13508 * C361 + C13504 * C376 +
             C13509 * C362 + C13505 * C377 + C13510 * C2128 + C32920 * C2137) *
                C2784 +
            (C13507 * C123 + C13503 * C136 + C13508 * C375 + C13504 * C391 +
             C13509 * C378 + C13505 * C392 + C13510 * C2136 + C32920 * C2146) *
                C32873 +
            (C14422 + C14423 + C14424 + C14425) * C2785 +
            (C14426 + C14427 + C14428 + C14429) * C32677) *
               C32533 * C601 -
           ((C14942 + C14943 + C14944 + C14945) * C32677 +
            (C14946 + C14947 + C14948 + C14949) * C2785 +
            (C13510 * C2139 + C32920 * C2147 + C13509 * C2136 + C13505 * C2146 +
             C13508 * C378 + C13504 * C392 + C13507 * C375 + C13503 * C391) *
                C32873 +
            (C13510 * C2129 + C32920 * C2138 + C13509 * C2128 + C13505 * C2137 +
             C13508 * C362 + C13504 * C377 + C13507 * C361 + C13503 * C376) *
                C2784) *
               C32533 * C602) *
              C479 +
          (((C14949 + C14948 + C14947 + C14946) * C2784 +
            (C14945 + C14944 + C14943 + C14942) * C32873 +
            (C13507 * C1177 + C13503 * C1189 + C13508 * C1179 + C13504 * C1192 +
             C13509 * C7078 + C13505 * C7082 + C13510 * C7080 +
             C32920 * C7085) *
                C2785 +
            (C13507 * C1188 + C13503 * C1204 + C13508 * C1193 + C13504 * C1206 +
             C13509 * C7081 + C13505 * C7087 + C13510 * C7086 +
             C32920 * C7089) *
                C32677) *
               C32533 * C602 -
           ((C14430 + C14431 + C14432 + C14433) * C32677 +
            (C14434 + C14435 + C14436 + C14437) * C2785 +
            (C14429 + C14428 + C14427 + C14426) * C32873 +
            (C14425 + C14424 + C14423 + C14422) * C2784) *
               C32533 * C601) *
              C480) *
         C32566) /
            (p * q * std::sqrt(p + q));
    d2ee[57] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C3524 * C115 + C32874 * C122 + C3525 * C361 + C32719 * C376) *
                    C2784 +
                (C3524 * C123 + C32874 * C136 + C3525 * C375 + C32719 * C391) *
                    C32873 +
                (C3524 * C256 + C32874 * C271 + C3525 * C721 + C32719 * C726) *
                    C2785 +
                (C3524 * C270 + C32874 * C286 + C3525 * C727 + C32719 * C736) *
                    C32677) *
                   C854 +
               ((C3559 + C3560) * C2784 + (C3561 + C3562) * C32873 +
                (C3946 + C3945) * C2785 + (C3944 + C3943) * C32677) *
                   C855 +
               C4397 * C32893) *
                  C32592 * C32578 * C110 -
              (((C3935 + C3936) * C32677 + (C3937 + C3938) * C2785 +
                (C3570 + C3569) * C32873 + (C3568 + C3567) * C2784) *
                   C32893 +
               ((C3939 + C3940) * C32677 + (C3941 + C3942) * C2785 +
                (C3566 + C3565) * C32873 + (C3564 + C3563) * C2784) *
                   C855 +
               ((C3943 + C3944) * C32677 + (C3945 + C3946) * C2785 +
                (C3562 + C3561) * C32873 + (C3560 + C3559) * C2784) *
                   C854) *
                  C32592 * C32578 * C111 +
              (C4397 * C854 +
               (C3577 * C2784 + C3578 * C32873 + (C3938 + C3937) * C2785 +
                (C3936 + C3935) * C32677) *
                   C855 +
               ((C3574 + C3573) * C2784 + (C3572 + C3571) * C32873 +
                (C3524 * C252 + C32874 * C263 + C3525 * C725 + C32719 * C734) *
                    C2785 +
                (C3524 * C262 + C32874 * C282 + C3525 * C735 + C32719 * C740) *
                    C32677) *
                   C32893) *
                  C32592 * C32578 * C112) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C3524 * C115 + C32874 * C122 + C3525 * C361 + C32719 * C376) *
                    C2784 +
                (C3524 * C123 + C32874 * C136 + C3525 * C375 + C32719 * C391) *
                    C32873 +
                (C4576 + C4577) * C2785 + (C4578 + C4579) * C32677) *
                   C854 +
               ((C3559 + C3560) * C2784 + (C3561 + C3562) * C32873 +
                (C3946 + C3945) * C2785 + (C3944 + C3943) * C32677) *
                   C855 +
               C4397 * C32893) *
                  C32592 * C248 -
              (((C4580 + C4581) * C32677 + (C4582 + C4583) * C2785 +
                (C3939 + C3940) * C32873 + (C3941 + C3942) * C2784) *
                   C32893 +
               ((C4584 + C4585) * C32677 + (C4586 + C4587) * C2785 +
                (C3943 + C3944) * C32873 + (C3945 + C3946) * C2784) *
                   C855 +
               ((C4588 + C4589) * C32677 + (C4590 + C4591) * C2785 +
                (C4579 + C4578) * C32873 + (C4577 + C4576) * C2784) *
                   C854) *
                  C32592 * C249 +
              (((C4591 + C4590) * C2784 + (C4589 + C4588) * C32873 +
                (C3524 * C1013 + C32874 * C1022 + C3525 * C1705 +
                 C32719 * C1708) *
                    C2785 +
                (C3524 * C1021 + C32874 * C1031 + C3525 * C1709 +
                 C32719 * C1714) *
                    C32677) *
                   C854 +
               ((C4587 + C4586) * C2784 + (C4585 + C4584) * C32873 +
                (C3524 * C1012 + C32874 * C1020 + C3525 * C1706 +
                 C32719 * C1710) *
                    C2785 +
                (C3524 * C1019 + C32874 * C1030 + C3525 * C1711 +
                 C32719 * C1715) *
                    C32677) *
                   C855 +
               ((C4583 + C4582) * C2784 + (C4581 + C4580) * C32873 +
                (C3524 * C1011 + C32874 * C1018 + C3525 * C1707 +
                 C32719 * C1712) *
                    C2785 +
                (C3524 * C1017 + C32874 * C1029 + C3525 * C1713 +
                 C32719 * C1716) *
                    C32677) *
                   C32893) *
                  C32592 * C250) *
             C32566) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C3524 * C115 + C32874 * C122 + C3525 * C361 + C32719 * C376) *
                C2784 +
            (C3524 * C123 + C32874 * C136 + C3525 * C375 + C32719 * C391) *
                C32873 +
            (C4576 + C4577) * C2785 + (C4578 + C4579) * C32677) *
               C854 +
           ((C3559 + C3560) * C2784 + (C3561 + C3562) * C32873 +
            (C3946 + C3945) * C2785 + (C3944 + C3943) * C32677) *
               C855 +
           C4397 * C32893) *
              C354 -
          (((C3525 * C1199 + C32719 * C1209 + C3524 * C731 + C32874 * C738) *
                C32677 +
            (C3525 * C1182 + C32719 * C1198 + C3524 * C723 + C32874 * C730) *
                C2785 +
            (C4105 + C4106) * C32873 + (C4107 + C4108) * C2784) *
               C32893 +
           ((C3525 * C1195 + C32719 * C1207 + C3524 * C729 + C32874 * C737) *
                C32677 +
            (C3525 * C1180 + C32719 * C1194 + C3524 * C722 + C32874 * C728) *
                C2785 +
            (C4109 + C4110) * C32873 + (C4111 + C4112) * C2784) *
               C855 +
           ((C3525 * C1191 + C32719 * C1205 + C3524 * C727 + C32874 * C736) *
                C32677 +
            (C3525 * C1178 + C32719 * C1190 + C3524 * C721 + C32874 * C726) *
                C2785 +
            (C3525 * C378 + C32719 * C392 + C3524 * C375 + C32874 * C391) *
                C32873 +
            (C3525 * C362 + C32719 * C377 + C3524 * C361 + C32874 * C376) *
                C2784) *
               C854) *
              C355 +
          (((C3524 * C362 + C32874 * C377 + C3525 * C2128 + C32719 * C2137) *
                C2784 +
            (C3524 * C378 + C32874 * C392 + C3525 * C2136 + C32719 * C2146) *
                C32873 +
            (C3524 * C1178 + C32874 * C1190 + C3525 * C2668 + C32719 * C2671) *
                C2785 +
            (C3524 * C1191 + C32874 * C1205 + C3525 * C2672 + C32719 * C2677) *
                C32677) *
               C854 +
           ((C3524 * C363 + C32874 * C379 + C3525 * C2127 + C32719 * C2135) *
                C2784 +
            (C3524 * C380 + C32874 * C393 + C3525 * C2134 + C32719 * C2145) *
                C32873 +
            (C3524 * C1180 + C32874 * C1194 + C3525 * C2669 + C32719 * C2673) *
                C2785 +
            (C3524 * C1195 + C32874 * C1207 + C3525 * C2674 + C32719 * C2678) *
                C32677) *
               C855 +
           ((C3524 * C364 + C32874 * C381 + C3525 * C2126 + C32719 * C2133) *
                C2784 +
            (C3524 * C382 + C32874 * C394 + C3525 * C2132 + C32719 * C2144) *
                C32873 +
            (C3524 * C1182 + C32874 * C1198 + C3525 * C2670 + C32719 * C2675) *
                C2785 +
            (C3524 * C1199 + C32874 * C1209 + C3525 * C2676 + C32719 * C2679) *
                C32677) *
               C32893) *
              C356) *
         C32578 * C32566) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C3524 * C115 + C32874 * C122 + C3525 * C361 + C32719 * C376) *
               C7698 +
           (C3524 * C123 + C32874 * C136 + C3525 * C375 + C32719 * C391) *
               C7692 +
           (C4576 + C4577) * C7699 + (C4578 + C4579) * C7693 + C8619 * C7700 +
           C8620 * C7694 + (C8646 + C8645) * C7701 + (C8644 + C8643) * C32914) *
              C32533 * C32592 * C32578 * C110 -
          ((C8639 + C8640) * C32914 + (C8641 + C8642) * C7701 + C8987 * C7694 +
           C8988 * C7700 + C4936 * C7693 + C4937 * C7699 +
           (C3562 + C3561) * C7692 + (C3560 + C3559) * C7698) *
              C32533 * C32592 * C32578 * C111 +
          (C3575 * C7698 + C3576 * C7692 + C4391 * C7699 + C4392 * C7693 +
           (C4583 + C4582) * C7700 + (C4581 + C4580) * C7694 +
           (C3524 * C1011 + C32874 * C1018 + C3525 * C1707 + C32719 * C1712) *
               C7701 +
           (C3524 * C1017 + C32874 * C1029 + C3525 * C1713 + C32719 * C1716) *
               C32914) *
              C32533 * C32592 * C32578 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C3524 * C115 + C32874 * C122 + C3525 * C361 + C32719 * C376) *
               C7698 +
           (C3524 * C123 + C32874 * C136 + C3525 * C375 + C32719 * C391) *
               C7692 +
           (C4576 + C4577) * C7699 + (C4578 + C4579) * C7693 + C8619 * C7700 +
           C8620 * C7694 + C9597 * C7701 + C9598 * C32914) *
              C32533 * C32592 * C248 -
          ((C9607 + C9608) * C32914 + (C9609 + C9610) * C7701 +
           (C8643 + C8644) * C7694 + (C8645 + C8646) * C7700 +
           (C4588 + C4589) * C7693 + (C4590 + C4591) * C7699 +
           (C4579 + C4578) * C7692 + (C4577 + C4576) * C7698) *
              C32533 * C32592 * C249 +
          (C8619 * C7698 + C8620 * C7692 + C9597 * C7699 + C9598 * C7693 +
           (C9610 + C9609) * C7700 + (C9608 + C9607) * C7694 +
           (C3524 * C6320 + C32874 * C6323 + C3525 * C6674 + C32719 * C6675) *
               C7701 +
           (C3524 * C6322 + C32874 * C6326 + C3525 * C6676 + C32719 * C6677) *
               C32914) *
              C32533 * C32592 * C250) *
         C32566) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C3524 * C115 + C32874 * C122 + C3525 * C361 + C32719 * C376) *
               C7698 +
           (C3524 * C123 + C32874 * C136 + C3525 * C375 + C32719 * C391) *
               C7692 +
           (C4576 + C4577) * C7699 + (C4578 + C4579) * C7693 + C8619 * C7700 +
           C8620 * C7694 + C9597 * C7701 + C9598 * C32914) *
              C32533 * C354 -
          ((C3525 * C6408 + C32719 * C6412 + C3524 * C1709 + C32874 * C1714) *
               C32914 +
           (C3525 * C6403 + C32719 * C6407 + C3524 * C1705 + C32874 * C1708) *
               C7701 +
           (C9397 + C9398) * C7694 + (C9399 + C9400) * C7700 +
           (C5358 + C5359) * C7693 + (C5360 + C5361) * C7699 +
           (C3525 * C378 + C32719 * C392 + C3524 * C375 + C32874 * C391) *
               C7692 +
           (C3525 * C362 + C32719 * C377 + C3524 * C361 + C32874 * C376) *
               C7698) *
              C32533 * C355 +
          ((C3524 * C362 + C32874 * C377 + C3525 * C2128 + C32719 * C2137) *
               C7698 +
           (C3524 * C378 + C32874 * C392 + C3525 * C2136 + C32719 * C2146) *
               C7692 +
           (C3524 * C1178 + C32874 * C1190 + C3525 * C2668 + C32719 * C2671) *
               C7699 +
           (C3524 * C1191 + C32874 * C1205 + C3525 * C2672 + C32719 * C2677) *
               C7693 +
           (C3524 * C1179 + C32874 * C1192 + C3525 * C7078 + C32719 * C7082) *
               C7700 +
           (C3524 * C1193 + C32874 * C1206 + C3525 * C7081 + C32719 * C7087) *
               C7694 +
           (C3524 * C6403 + C32874 * C6407 + C3525 * C7554 + C32719 * C7555) *
               C7701 +
           (C3524 * C6408 + C32874 * C6412 + C3525 * C7556 + C32719 * C7557) *
               C32914) *
              C32533 * C356) *
         C32578 * C32566) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C13507 * C115 + C13503 * C122 + C13508 * C361 + C13504 * C376 +
            C13509 * C362 + C13505 * C377 + C13510 * C2128 + C32920 * C2137) *
               C2784 +
           (C13507 * C123 + C13503 * C136 + C13508 * C375 + C13504 * C391 +
            C13509 * C378 + C13505 * C392 + C13510 * C2136 + C32920 * C2146) *
               C32873 +
           (C13507 * C256 + C13503 * C271 + C13508 * C721 + C13504 * C726 +
            C13509 * C1178 + C13505 * C1190 + C13510 * C2668 + C32920 * C2671) *
               C2785 +
           (C13507 * C270 + C13503 * C286 + C13508 * C727 + C13504 * C736 +
            C13509 * C1191 + C13505 * C1205 + C13510 * C2672 + C32920 * C2677) *
               C32677) *
              C32533 * C32592 * C32578 * C110 -
          ((C13902 + C13903 + C13904 + C13905) * C32677 +
           (C13906 + C13907 + C13908 + C13909) * C2785 +
           (C13551 + C13550 + C13549 + C13548) * C32873 +
           (C13547 + C13546 + C13545 + C13544) * C2784) *
              C32533 * C32592 * C32578 * C111 +
          ((C13559 + C13558 + C13557 + C13556) * C2784 +
           (C13555 + C13554 + C13553 + C13552) * C32873 +
           (C13507 * C254 + C13503 * C267 + C13508 * C723 + C13504 * C730 +
            C13509 * C1182 + C13505 * C1198 + C13510 * C2670 + C32920 * C2675) *
               C2785 +
           (C13507 * C266 + C13503 * C284 + C13508 * C731 + C13504 * C738 +
            C13509 * C1199 + C13505 * C1209 + C13510 * C2676 + C32920 * C2679) *
               C32677) *
              C32533 * C32592 * C32578 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C13507 * C115 + C13503 * C122 + C13508 * C361 + C13504 * C376 +
            C13509 * C362 + C13505 * C377 + C13510 * C2128 + C32920 * C2137) *
               C2784 +
           (C13507 * C123 + C13503 * C136 + C13508 * C375 + C13504 * C391 +
            C13509 * C378 + C13505 * C392 + C13510 * C2136 + C32920 * C2146) *
               C32873 +
           (C14422 + C14423 + C14424 + C14425) * C2785 +
           (C14426 + C14427 + C14428 + C14429) * C32677) *
              C32533 * C32592 * C248 -
          ((C14430 + C14431 + C14432 + C14433) * C32677 +
           (C14434 + C14435 + C14436 + C14437) * C2785 +
           (C14429 + C14428 + C14427 + C14426) * C32873 +
           (C14425 + C14424 + C14423 + C14422) * C2784) *
              C32533 * C32592 * C249 +
          ((C14437 + C14436 + C14435 + C14434) * C2784 +
           (C14433 + C14432 + C14431 + C14430) * C32873 +
           (C13507 * C1013 + C13503 * C1022 + C13508 * C1705 + C13504 * C1708 +
            C13509 * C6403 + C13505 * C6407 + C13510 * C7554 + C32920 * C7555) *
               C2785 +
           (C13507 * C1021 + C13503 * C1031 + C13508 * C1709 + C13504 * C1714 +
            C13509 * C6408 + C13505 * C6412 + C13510 * C7556 + C32920 * C7557) *
               C32677) *
              C32533 * C32592 * C250) *
         C32566) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C13507 * C115 + C13503 * C122 + C13508 * C361 + C13504 * C376 +
            C13509 * C362 + C13505 * C377 + C13510 * C2128 + C32920 * C2137) *
               C2784 +
           (C13507 * C123 + C13503 * C136 + C13508 * C375 + C13504 * C391 +
            C13509 * C378 + C13505 * C392 + C13510 * C2136 + C32920 * C2146) *
               C32873 +
           (C14422 + C14423 + C14424 + C14425) * C2785 +
           (C14426 + C14427 + C14428 + C14429) * C32677) *
              C32533 * C354 -
          ((C13510 * C7084 + C32920 * C7088 + C13509 * C2672 + C13505 * C2677 +
            C13508 * C1191 + C13504 * C1205 + C13507 * C727 + C13503 * C736) *
               C32677 +
           (C13510 * C7079 + C32920 * C7083 + C13509 * C2668 + C13505 * C2671 +
            C13508 * C1178 + C13504 * C1190 + C13507 * C721 + C13503 * C726) *
               C2785 +
           (C13510 * C2139 + C32920 * C2147 + C13509 * C2136 + C13505 * C2146 +
            C13508 * C378 + C13504 * C392 + C13507 * C375 + C13503 * C391) *
               C32873 +
           (C13510 * C2129 + C32920 * C2138 + C13509 * C2128 + C13505 * C2137 +
            C13508 * C362 + C13504 * C377 + C13507 * C361 + C13503 * C376) *
               C2784) *
              C32533 * C355 +
          ((C13507 * C362 + C13503 * C377 + C13508 * C2128 + C13504 * C2137 +
            C13509 * C2129 + C13505 * C2138 + C13510 * C12093 +
            C32920 * C12096) *
               C2784 +
           (C13507 * C378 + C13503 * C392 + C13508 * C2136 + C13504 * C2146 +
            C13509 * C2139 + C13505 * C2147 + C13510 * C12095 +
            C32920 * C12099) *
               C32873 +
           (C13507 * C1178 + C13503 * C1190 + C13508 * C2668 + C13504 * C2671 +
            C13509 * C7079 + C13505 * C7083 + C13510 * C12355 +
            C32920 * C12356) *
               C2785 +
           (C13507 * C1191 + C13503 * C1205 + C13508 * C2672 + C13504 * C2677 +
            C13509 * C7084 + C13505 * C7088 + C13510 * C12357 +
            C32920 * C12358) *
               C32677) *
              C32533 * C356) *
         C32578 * C32566) /
            (p * q * std::sqrt(p + q));
    d2ee[58] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C3524 * C115 + C32874 * C122 + C3525 * C361 + C32719 * C376) *
                C7698 +
            (C3524 * C123 + C32874 * C136 + C3525 * C375 + C32719 * C391) *
                C7692 +
            (C4576 + C4577) * C7699 + (C4578 + C4579) * C7693 + C8619 * C7700 +
            C8620 * C7694 + C9597 * C7701 + C9598 * C32914) *
               C32533 * C601 -
           ((C3525 * C6408 + C32719 * C6412 + C3524 * C1709 + C32874 * C1714) *
                C32914 +
            (C3525 * C6403 + C32719 * C6407 + C3524 * C1705 + C32874 * C1708) *
                C7701 +
            (C9397 + C9398) * C7694 + (C9399 + C9400) * C7700 +
            (C5358 + C5359) * C7693 + (C5360 + C5361) * C7699 +
            (C3525 * C378 + C32719 * C392 + C3524 * C375 + C32874 * C391) *
                C7692 +
            (C3525 * C362 + C32719 * C377 + C3524 * C361 + C32874 * C376) *
                C7698) *
               C32533 * C602) *
              C32578 * C481 +
          (((C4112 + C4111) * C7698 + (C4110 + C4109) * C7692 +
            (C5155 + C5154) * C7699 + (C5153 + C5152) * C7693 +
            (C9194 + C9193) * C7700 + (C9192 + C9191) * C7694 +
            (C3524 * C1706 + C32874 * C1710 + C3525 * C7236 + C32719 * C7237) *
                C7701 +
            (C3524 * C1711 + C32874 * C1715 + C3525 * C7238 + C32719 * C7239) *
                C32914) *
               C32533 * C602 -
           ((C8639 + C8640) * C32914 + (C8641 + C8642) * C7701 + C8987 * C7694 +
            C8988 * C7700 + C4936 * C7693 + C4937 * C7699 +
            (C3562 + C3561) * C7692 + (C3560 + C3559) * C7698) *
               C32533 * C601) *
              C32578 * C482)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C3524 * C115 + C32874 * C122 + C3525 * C361 + C32719 * C376) *
                 C2784 +
             (C3524 * C123 + C32874 * C136 + C3525 * C375 + C32719 * C391) *
                 C32873 +
             (C4576 + C4577) * C2785 + (C4578 + C4579) * C32677) *
                C854 +
            ((C3559 + C3560) * C2784 + (C3561 + C3562) * C32873 +
             C4932 * C2785 + C4933 * C32677) *
                C855 +
            C4397 * C32893) *
               C601 -
           (((C5148 + C5149) * C32677 + (C5150 + C5151) * C2785 +
             (C4105 + C4106) * C32873 + (C4107 + C4108) * C2784) *
                C32893 +
            ((C5152 + C5153) * C32677 + (C5154 + C5155) * C2785 +
             (C4109 + C4110) * C32873 + (C4111 + C4112) * C2784) *
                C855 +
            ((C3525 * C1191 + C32719 * C1205 + C3524 * C727 + C32874 * C736) *
                 C32677 +
             (C3525 * C1178 + C32719 * C1190 + C3524 * C721 + C32874 * C726) *
                 C2785 +
             (C3525 * C378 + C32719 * C392 + C3524 * C375 + C32874 * C391) *
                 C32873 +
             (C3525 * C362 + C32719 * C377 + C3524 * C361 + C32874 * C376) *
                 C2784) *
                C854) *
               C602) *
              C32578 * C481 +
          ((((C4112 + C4111) * C2784 + (C4110 + C4109) * C32873 +
             (C5155 + C5154) * C2785 + (C5153 + C5152) * C32677) *
                C854 +
            ((C4108 + C4107) * C2784 + (C4106 + C4105) * C32873 +
             (C5151 + C5150) * C2785 + (C5149 + C5148) * C32677) *
                C855 +
            ((C4104 + C4103) * C2784 + (C4102 + C4101) * C32873 +
             (C3524 * C724 + C32874 * C732 + C3525 * C2296 + C32719 * C2297) *
                 C2785 +
             (C3524 * C733 + C32874 * C739 + C3525 * C2298 + C32719 * C2299) *
                 C32677) *
                C32893) *
               C602 -
           (((C3935 + C3936) * C32677 + (C3937 + C3938) * C2785 +
             (C3570 + C3569) * C32873 + (C3568 + C3567) * C2784) *
                C32893 +
            (C4934 * C32677 + C4935 * C2785 + (C3566 + C3565) * C32873 +
             (C3564 + C3563) * C2784) *
                C855 +
            (C4936 * C32677 + C4937 * C2785 + (C3562 + C3561) * C32873 +
             (C3560 + C3559) * C2784) *
                C854) *
               C601) *
              C32578 * C482)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C13507 * C115 + C13503 * C122 + C13508 * C361 + C13504 * C376 +
             C13509 * C362 + C13505 * C377 + C13510 * C2128 + C32920 * C2137) *
                C2784 +
            (C13507 * C123 + C13503 * C136 + C13508 * C375 + C13504 * C391 +
             C13509 * C378 + C13505 * C392 + C13510 * C2136 + C32920 * C2146) *
                C32873 +
            (C14422 + C14423 + C14424 + C14425) * C2785 +
            (C14426 + C14427 + C14428 + C14429) * C32677) *
               C32533 * C601 -
           ((C13510 * C7084 + C32920 * C7088 + C13509 * C2672 + C13505 * C2677 +
             C13508 * C1191 + C13504 * C1205 + C13507 * C727 + C13503 * C736) *
                C32677 +
            (C13510 * C7079 + C32920 * C7083 + C13509 * C2668 + C13505 * C2671 +
             C13508 * C1178 + C13504 * C1190 + C13507 * C721 + C13503 * C726) *
                C2785 +
            (C13510 * C2139 + C32920 * C2147 + C13509 * C2136 + C13505 * C2146 +
             C13508 * C378 + C13504 * C392 + C13507 * C375 + C13503 * C391) *
                C32873 +
            (C13510 * C2129 + C32920 * C2138 + C13509 * C2128 + C13505 * C2137 +
             C13508 * C362 + C13504 * C377 + C13507 * C361 + C13503 * C376) *
                C2784) *
               C32533 * C602) *
              C32578 * C481 +
          (((C14063 + C14062 + C14061 + C14060) * C2784 +
            (C14059 + C14058 + C14057 + C14056) * C32873 +
            (C13507 * C722 + C13503 * C728 + C13508 * C1180 + C13504 * C1194 +
             C13509 * C2669 + C13505 * C2673 + C13510 * C12183 +
             C32920 * C12184) *
                C2785 +
            (C13507 * C729 + C13503 * C737 + C13508 * C1195 + C13504 * C1207 +
             C13509 * C2674 + C13505 * C2678 + C13510 * C12185 +
             C32920 * C12186) *
                C32677) *
               C32533 * C602 -
           ((C13902 + C13903 + C13904 + C13905) * C32677 +
            (C13906 + C13907 + C13908 + C13909) * C2785 +
            (C13551 + C13550 + C13549 + C13548) * C32873 +
            (C13547 + C13546 + C13545 + C13544) * C2784) *
               C32533 * C601) *
              C32578 * C482)) /
            (p * q * std::sqrt(p + q));
    d2ee[59] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C3524 * C115 + C32874 * C122 + C3525 * C361 + C32719 * C376) *
                C2784 +
            (C3524 * C123 + C32874 * C136 + C3525 * C375 + C32719 * C391) *
                C32873 +
            (C4576 + C4577) * C2785 + (C4578 + C4579) * C32677) *
               C854 +
           ((C3559 + C3560) * C2784 + (C3561 + C3562) * C32873 +
            (C3946 + C3945) * C2785 + (C3944 + C3943) * C32677) *
               C855 +
           C4397 * C32893) *
              C32592 * C248 -
          (((C4580 + C4581) * C32677 + (C4582 + C4583) * C2785 +
            (C3939 + C3940) * C32873 + (C3941 + C3942) * C2784) *
               C32893 +
           ((C4584 + C4585) * C32677 + (C4586 + C4587) * C2785 +
            (C3943 + C3944) * C32873 + (C3945 + C3946) * C2784) *
               C855 +
           ((C4588 + C4589) * C32677 + (C4590 + C4591) * C2785 +
            (C4579 + C4578) * C32873 + (C4577 + C4576) * C2784) *
               C854) *
              C32592 * C249 +
          (((C4591 + C4590) * C2784 + (C4589 + C4588) * C32873 +
            (C3524 * C1013 + C32874 * C1022 + C3525 * C1705 + C32719 * C1708) *
                C2785 +
            (C3524 * C1021 + C32874 * C1031 + C3525 * C1709 + C32719 * C1714) *
                C32677) *
               C854 +
           ((C4587 + C4586) * C2784 + (C4585 + C4584) * C32873 +
            (C3524 * C1012 + C32874 * C1020 + C3525 * C1706 + C32719 * C1710) *
                C2785 +
            (C3524 * C1019 + C32874 * C1030 + C3525 * C1711 + C32719 * C1715) *
                C32677) *
               C855 +
           ((C4583 + C4582) * C2784 + (C4581 + C4580) * C32873 +
            (C3524 * C1011 + C32874 * C1018 + C3525 * C1707 + C32719 * C1712) *
                C2785 +
            (C3524 * C1017 + C32874 * C1029 + C3525 * C1713 + C32719 * C1716) *
                C32677) *
               C32893) *
              C32592 * C250) *
         C32566) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C3524 * C115 + C32874 * C122 + C3525 * C361 + C32719 * C376) *
                C2784 +
            (C3524 * C123 + C32874 * C136 + C3525 * C375 + C32719 * C391) *
                C32873 +
            (C3524 * C256 + C32874 * C271 + C3525 * C721 + C32719 * C726) *
                C2785 +
            (C3524 * C270 + C32874 * C286 + C3525 * C727 + C32719 * C736) *
                C32677) *
               C854 +
           ((C3559 + C3560) * C2784 + (C3561 + C3562) * C32873 +
            (C3946 + C3945) * C2785 + (C3944 + C3943) * C32677) *
               C855 +
           C4397 * C32893) *
              C32592 * C32578 * C110 -
          (((C3935 + C3936) * C32677 + (C3937 + C3938) * C2785 +
            (C3570 + C3569) * C32873 + (C3568 + C3567) * C2784) *
               C32893 +
           ((C3939 + C3940) * C32677 + (C3941 + C3942) * C2785 +
            (C3566 + C3565) * C32873 + (C3564 + C3563) * C2784) *
               C855 +
           ((C3943 + C3944) * C32677 + (C3945 + C3946) * C2785 +
            (C3562 + C3561) * C32873 + (C3560 + C3559) * C2784) *
               C854) *
              C32592 * C32578 * C111 +
          (C4397 * C854 +
           (C3577 * C2784 + C3578 * C32873 + (C3938 + C3937) * C2785 +
            (C3936 + C3935) * C32677) *
               C855 +
           ((C3574 + C3573) * C2784 + (C3572 + C3571) * C32873 +
            (C3524 * C252 + C32874 * C263 + C3525 * C725 + C32719 * C734) *
                C2785 +
            (C3524 * C262 + C32874 * C282 + C3525 * C735 + C32719 * C740) *
                C32677) *
               C32893) *
              C32592 * C32578 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C3524 * C115 + C32874 * C122 + C3525 * C361 + C32719 * C376) *
               C7698 +
           (C3524 * C123 + C32874 * C136 + C3525 * C375 + C32719 * C391) *
               C7692 +
           (C4576 + C4577) * C7699 + (C4578 + C4579) * C7693 + C8619 * C7700 +
           C8620 * C7694 + (C8646 + C8645) * C7701 + (C8644 + C8643) * C32914) *
              C32533 * C32592 * C32578 * C110 -
          ((C8639 + C8640) * C32914 + (C8641 + C8642) * C7701 + C8987 * C7694 +
           C8988 * C7700 + C4936 * C7693 + C4937 * C7699 +
           (C3562 + C3561) * C7692 + (C3560 + C3559) * C7698) *
              C32533 * C32592 * C32578 * C111 +
          (C3575 * C7698 + C3576 * C7692 + C4391 * C7699 + C4392 * C7693 +
           (C4583 + C4582) * C7700 + (C4581 + C4580) * C7694 +
           (C3524 * C1011 + C32874 * C1018 + C3525 * C1707 + C32719 * C1712) *
               C7701 +
           (C3524 * C1017 + C32874 * C1029 + C3525 * C1713 + C32719 * C1716) *
               C32914) *
              C32533 * C32592 * C32578 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C3524 * C115 + C32874 * C122 + C3525 * C361 + C32719 * C376) *
               C7698 +
           (C3524 * C123 + C32874 * C136 + C3525 * C375 + C32719 * C391) *
               C7692 +
           (C4576 + C4577) * C7699 + (C4578 + C4579) * C7693 + C8619 * C7700 +
           C8620 * C7694 + C9597 * C7701 + C9598 * C32914) *
              C32533 * C32592 * C248 -
          ((C9607 + C9608) * C32914 + (C9609 + C9610) * C7701 +
           (C8643 + C8644) * C7694 + (C8645 + C8646) * C7700 +
           (C4588 + C4589) * C7693 + (C4590 + C4591) * C7699 +
           (C4579 + C4578) * C7692 + (C4577 + C4576) * C7698) *
              C32533 * C32592 * C249 +
          (C8619 * C7698 + C8620 * C7692 + C9597 * C7699 + C9598 * C7693 +
           (C9610 + C9609) * C7700 + (C9608 + C9607) * C7694 +
           (C3524 * C6320 + C32874 * C6323 + C3525 * C6674 + C32719 * C6675) *
               C7701 +
           (C3524 * C6322 + C32874 * C6326 + C3525 * C6676 + C32719 * C6677) *
               C32914) *
              C32533 * C32592 * C250) *
         C32566) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C13507 * C115 + C13503 * C122 + C13508 * C361 + C13504 * C376 +
            C13509 * C362 + C13505 * C377 + C13510 * C2128 + C32920 * C2137) *
               C2784 +
           (C13507 * C123 + C13503 * C136 + C13508 * C375 + C13504 * C391 +
            C13509 * C378 + C13505 * C392 + C13510 * C2136 + C32920 * C2146) *
               C32873 +
           (C13507 * C256 + C13503 * C271 + C13508 * C721 + C13504 * C726 +
            C13509 * C1178 + C13505 * C1190 + C13510 * C2668 + C32920 * C2671) *
               C2785 +
           (C13507 * C270 + C13503 * C286 + C13508 * C727 + C13504 * C736 +
            C13509 * C1191 + C13505 * C1205 + C13510 * C2672 + C32920 * C2677) *
               C32677) *
              C32533 * C32592 * C32578 * C110 -
          ((C13902 + C13903 + C13904 + C13905) * C32677 +
           (C13906 + C13907 + C13908 + C13909) * C2785 +
           (C13551 + C13550 + C13549 + C13548) * C32873 +
           (C13547 + C13546 + C13545 + C13544) * C2784) *
              C32533 * C32592 * C32578 * C111 +
          ((C13559 + C13558 + C13557 + C13556) * C2784 +
           (C13555 + C13554 + C13553 + C13552) * C32873 +
           (C13507 * C254 + C13503 * C267 + C13508 * C723 + C13504 * C730 +
            C13509 * C1182 + C13505 * C1198 + C13510 * C2670 + C32920 * C2675) *
               C2785 +
           (C13507 * C266 + C13503 * C284 + C13508 * C731 + C13504 * C738 +
            C13509 * C1199 + C13505 * C1209 + C13510 * C2676 + C32920 * C2679) *
               C32677) *
              C32533 * C32592 * C32578 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C13507 * C115 + C13503 * C122 + C13508 * C361 + C13504 * C376 +
            C13509 * C362 + C13505 * C377 + C13510 * C2128 + C32920 * C2137) *
               C2784 +
           (C13507 * C123 + C13503 * C136 + C13508 * C375 + C13504 * C391 +
            C13509 * C378 + C13505 * C392 + C13510 * C2136 + C32920 * C2146) *
               C32873 +
           (C14422 + C14423 + C14424 + C14425) * C2785 +
           (C14426 + C14427 + C14428 + C14429) * C32677) *
              C32533 * C32592 * C248 -
          ((C14430 + C14431 + C14432 + C14433) * C32677 +
           (C14434 + C14435 + C14436 + C14437) * C2785 +
           (C14429 + C14428 + C14427 + C14426) * C32873 +
           (C14425 + C14424 + C14423 + C14422) * C2784) *
              C32533 * C32592 * C249 +
          ((C14437 + C14436 + C14435 + C14434) * C2784 +
           (C14433 + C14432 + C14431 + C14430) * C32873 +
           (C13507 * C1013 + C13503 * C1022 + C13508 * C1705 + C13504 * C1708 +
            C13509 * C6403 + C13505 * C6407 + C13510 * C7554 + C32920 * C7555) *
               C2785 +
           (C13507 * C1021 + C13503 * C1031 + C13508 * C1709 + C13504 * C1714 +
            C13509 * C6408 + C13505 * C6412 + C13510 * C7556 + C32920 * C7557) *
               C32677) *
              C32533 * C32592 * C250) *
         C32566) /
            (p * q * std::sqrt(p + q));
    d2ee[60] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C113 * C115 + C32632 * C122) * C114 +
                 (C113 * C123 + C32632 * C136) * C32615) *
                    C103 +
                (C174 + C175) * C104 + C184 * C105 + C185 * C106 +
                C186 * C107) *
                   C32592 * C479 -
               ((C512 + C513) * C107 + (C514 + C515) * C106 +
                (C516 + C517) * C105 + (C518 + C519) * C104 +
                ((C113 * C270 + C32632 * C286) * C32615 +
                 (C113 * C256 + C32632 * C271) * C114) *
                    C103) *
                   C32592 * C480) *
                  C481 +
              (((C519 + C518) * C103 + (C517 + C516) * C104 +
                (C515 + C514) * C105 + (C513 + C512) * C106 +
                ((C113 * C483 + C32632 * C484) * C114 +
                 (C113 * C485 + C32632 * C486) * C32615) *
                    C107) *
                   C32592 * C480 -
               ((C182 + C183) * C107 + (C181 + C180) * C106 +
                (C179 + C178) * C105 + (C177 + C176) * C104 +
                (C175 + C174) * C103) *
                   C32592 * C479) *
                  C482) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C113 * C115 + C32632 * C122) * C857 +
                 (C113 * C123 + C32632 * C136) * C32939 + C1056 * C858 +
                 C1057 * C32927 + C1058 * C859 + C1059 * C32904) *
                    C854 +
                (C861 + C862 + C863 + C864 + C892 + C893) * C855 +
                C901 * C32893) *
                   C32592 * C479 -
               ((C1362 + C1363 + C1364 + C1365 + C1366 + C1367) * C32893 +
                (C1368 + C1369 + C1370 + C1371 + C1372 + C1373) * C855 +
                (C1064 * C32904 + C1065 * C859 + C1059 * C32927 + C1058 * C858 +
                 C1057 * C32939 + C1056 * C857) *
                    C854) *
                   C32592 * C480) *
                  C481 +
              (((C1373 + C1372 + C1371 + C1370 + C1369 + C1368) * C854 +
                (C1367 + C1366 + C1365 + C1364 + C1363 + C1362) * C855 +
                (C507 * C857 + C506 * C32939 + C891 * C858 + C890 * C32927 +
                 (C113 * C1357 + C32632 * C1358) * C859 +
                 (C113 * C1359 + C32632 * C1360) * C32904) *
                    C32893) *
                   C32592 * C480 -
               ((C897 + C898 + C881 + C882 + C883 + C884) * C32893 +
                (C896 + C895 + C872 + C871 + C870 + C869) * C855 +
                (C893 + C892 + C864 + C863 + C862 + C861) * C854) *
                   C32592 * C479) *
                  C482)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C1842 * C115 + C32940 * C122 + C1843 * C361 + C32929 * C376 +
              C1844 * C362 + C32907 * C377) *
                 C114 +
             (C1842 * C123 + C32940 * C136 + C1843 * C375 + C32929 * C391 +
              C1844 * C378 + C32907 * C392) *
                 C32615) *
                C854 +
            ((C1882 + C1883 + C1884) * C114 +
             (C1885 + C1886 + C1887) * C32615) *
                C855 +
            C1906 * C32893) *
               C32592 * C479 -
           (((C2325 + C2326 + C2327) * C32615 +
             (C2328 + C2329 + C2330) * C114) *
                C32893 +
            ((C2331 + C2332 + C2333) * C32615 +
             (C2334 + C2335 + C2336) * C114) *
                C855 +
            ((C1844 * C1191 + C32907 * C1205 + C1843 * C727 + C32929 * C736 +
              C1842 * C270 + C32940 * C286) *
                 C32615 +
             (C1844 * C1178 + C32907 * C1190 + C1843 * C721 + C32929 * C726 +
              C1842 * C256 + C32940 * C271) *
                 C114) *
                C854) *
               C32592 * C480) *
              C481 +
          ((((C2336 + C2335 + C2334) * C114 +
             (C2333 + C2332 + C2331) * C32615) *
                C854 +
            ((C2330 + C2329 + C2328) * C114 +
             (C2327 + C2326 + C2325) * C32615) *
                C855 +
            ((C1842 * C253 + C32940 * C265 + C1843 * C724 + C32929 * C732 +
              C1844 * C2296 + C32907 * C2297) *
                 C114 +
             (C1842 * C264 + C32940 * C283 + C1843 * C733 + C32929 * C739 +
              C1844 * C2298 + C32907 * C2299) *
                 C32615) *
                C32893) *
               C32592 * C480 -
           (((C1894 + C1895 + C1896) * C32615 +
             (C1897 + C1898 + C1899) * C114) *
                C32893 +
            ((C1893 + C1892 + C1891) * C32615 +
             (C1890 + C1889 + C1888) * C114) *
                C855 +
            ((C1887 + C1886 + C1885) * C32615 +
             (C1884 + C1883 + C1882) * C114) *
                C854) *
               C32592 * C479) *
              C482)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C32632 * C122) * C5477 +
             (C113 * C123 + C32632 * C136) * C5471 + C1056 * C5478 +
             C1057 * C5472 + C1058 * C5479 + C1059 * C32904) *
                C32936 +
            (C5481 + C5482 + C5483 + C5484 + C5485 + C5486) * C32923 +
            C5503 * C32893) *
               C32592 * C479 -
           ((C5870 + C5871 + C5872 + C5873 + C5874 + C5875) * C32893 +
            (C5876 + C5877 + C5878 + C5879 + C5880 + C5881) * C32923 +
            (C1064 * C32904 + C1065 * C5479 + C1059 * C5472 + C1058 * C5478 +
             C1057 * C5471 + C1056 * C5477) *
                C32936) *
               C32592 * C480) *
              C481 +
          (((C5881 + C5880 + C5879 + C5878 + C5877 + C5876) * C32936 +
            (C5875 + C5874 + C5873 + C5872 + C5871 + C5870) * C32923 +
            (C507 * C5477 + C506 * C5471 + C891 * C5478 + C890 * C5472 +
             (C113 * C1357 + C32632 * C1358) * C5479 +
             (C113 * C1359 + C32632 * C1360) * C32904) *
                C32893) *
               C32592 * C480 -
           ((C5493 + C5494 + C5495 + C5496 + C5497 + C5498) * C32893 +
            (C5492 + C5491 + C5490 + C5489 + C5488 + C5487) * C32923 +
            (C5486 + C5485 + C5484 + C5483 + C5482 + C5481) * C32936) *
               C32592 * C479) *
              C482)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C32632 * C122) * C6253 +
            (C113 * C123 + C32632 * C136) * C6247 + C1056 * C6254 +
            C1057 * C6248 + C1058 * C6255 + C1059 * C6249 + C1065 * C6256 +
            C1064 * C6250 + C6337 * C6257 + C6338 * C6251) *
               C32533 * C32592 * C479 -
           (C6339 * C6251 + C6340 * C6257 + C6338 * C6250 + C6337 * C6256 +
            C1064 * C6249 + C1065 * C6255 + C1059 * C6248 + C1058 * C6254 +
            C1057 * C6247 + C1056 * C6253) *
               C32533 * C32592 * C480) *
              C481 +
          ((C511 * C6253 + C510 * C6247 + C885 * C6254 + C886 * C6248 +
            C1063 * C6255 + C1062 * C6249 + C6505 * C6256 + C6506 * C6250 +
            (C113 * C6496 + C32632 * C6497) * C6257 +
            (C113 * C6498 + C32632 * C6499) * C6251) *
               C32533 * C32592 * C480 -
           (C6506 * C6251 + C6505 * C6257 + C1062 * C6250 + C1063 * C6256 +
            C886 * C6249 + C885 * C6255 + C510 * C6248 + C511 * C6254 +
            C165 * C6247 + C164 * C6253) *
               C32533 * C32592 * C479) *
              C482)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C1842 * C115 + C32940 * C122 + C1843 * C361 + C32929 * C376 +
             C1844 * C362 + C32907 * C377) *
                C5477 +
            (C1842 * C123 + C32940 * C136 + C1843 * C375 + C32929 * C391 +
             C1844 * C378 + C32907 * C392) *
                C5471 +
            (C6947 + C6948 + C6949) * C5478 + (C6950 + C6951 + C6952) * C5472 +
            C6967 * C5479 + C6968 * C32904) *
               C32533 * C32592 * C479 -
           ((C6959 + C6960 + C6961) * C32904 + (C6962 + C6963 + C6964) * C5479 +
            (C6958 + C6957 + C6956) * C5472 + (C6955 + C6954 + C6953) * C5478 +
            (C6952 + C6951 + C6950) * C5471 + (C6949 + C6948 + C6947) * C5477) *
               C32533 * C32592 * C480) *
              C481 +
          (((C2336 + C2335 + C2334) * C5477 + (C2333 + C2332 + C2331) * C5471 +
            (C7253 + C7254 + C7255) * C5478 + (C7256 + C7257 + C7258) * C5472 +
            (C1842 * C1012 + C32940 * C1020 + C1843 * C1706 + C32929 * C1710 +
             C1844 * C7236 + C32907 * C7237) *
                C5479 +
            (C1842 * C1019 + C32940 * C1030 + C1843 * C1711 + C32929 * C1715 +
             C1844 * C7238 + C32907 * C7239) *
                C32904) *
               C32533 * C32592 * C480 -
           ((C7258 + C7257 + C7256) * C32904 + (C7255 + C7254 + C7253) * C5479 +
            (C2331 + C2332 + C2333) * C5472 + (C2334 + C2335 + C2336) * C5478 +
            (C1887 + C1886 + C1885) * C5471 + (C1884 + C1883 + C1882) * C5477) *
               C32533 * C32592 * C479) *
              C482)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C10223 * C115 + C10220 * C122 + C10224 * C361 + C10221 * C376 +
              C10225 * C362 + C32907 * C377) *
                 C114 +
             (C10223 * C123 + C10220 * C136 + C10224 * C375 + C10221 * C391 +
              C10225 * C378 + C32907 * C392) *
                 C32615) *
                C32936 +
            ((C10263 + C10264 + C10265) * C114 +
             (C10266 + C10267 + C10268) * C32615) *
                C32923 +
            C10287 * C32893) *
               C32592 * C479 -
           (((C10678 + C10679 + C10680) * C32615 +
             (C10681 + C10682 + C10683) * C114) *
                C32893 +
            ((C10684 + C10685 + C10686) * C32615 +
             (C10687 + C10688 + C10689) * C114) *
                C32923 +
            ((C10225 * C1191 + C32907 * C1205 + C10224 * C727 + C10221 * C736 +
              C10223 * C270 + C10220 * C286) *
                 C32615 +
             (C10225 * C1178 + C32907 * C1190 + C10224 * C721 + C10221 * C726 +
              C10223 * C256 + C10220 * C271) *
                 C114) *
                C32936) *
               C32592 * C480) *
              C481 +
          ((((C10689 + C10688 + C10687) * C114 +
             (C10686 + C10685 + C10684) * C32615) *
                C32936 +
            ((C10683 + C10682 + C10681) * C114 +
             (C10680 + C10679 + C10678) * C32615) *
                C32923 +
            ((C10223 * C253 + C10220 * C265 + C10224 * C724 + C10221 * C732 +
              C10225 * C2296 + C32907 * C2297) *
                 C114 +
             (C10223 * C264 + C10220 * C283 + C10224 * C733 + C10221 * C739 +
              C10225 * C2298 + C32907 * C2299) *
                 C32615) *
                C32893) *
               C32592 * C480 -
           (((C10275 + C10276 + C10277) * C32615 +
             (C10278 + C10279 + C10280) * C114) *
                C32893 +
            ((C10274 + C10273 + C10272) * C32615 +
             (C10271 + C10270 + C10269) * C114) *
                C32923 +
            ((C10268 + C10267 + C10266) * C32615 +
             (C10265 + C10264 + C10263) * C114) *
                C32936) *
               C32592 * C479) *
              C482)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C10223 * C115 + C10220 * C122 + C10224 * C361 + C10221 * C376 +
             C10225 * C362 + C32907 * C377) *
                C857 +
            (C10223 * C123 + C10220 * C136 + C10224 * C375 + C10221 * C391 +
             C10225 * C378 + C32907 * C392) *
                C32939 +
            (C11274 + C11275 + C11276) * C858 +
            (C11277 + C11278 + C11279) * C32927 + C11294 * C859 +
            C11295 * C32904) *
               C32533 * C32592 * C479 -
           ((C11286 + C11287 + C11288) * C32904 +
            (C11289 + C11290 + C11291) * C859 +
            (C11285 + C11284 + C11283) * C32927 +
            (C11282 + C11281 + C11280) * C858 +
            (C11279 + C11278 + C11277) * C32939 +
            (C11276 + C11275 + C11274) * C857) *
               C32533 * C32592 * C480) *
              C481 +
          (((C10689 + C10688 + C10687) * C857 +
            (C10686 + C10685 + C10684) * C32939 +
            (C11564 + C11565 + C11566) * C858 +
            (C11567 + C11568 + C11569) * C32927 +
            (C10223 * C1012 + C10220 * C1020 + C10224 * C1706 + C10221 * C1710 +
             C10225 * C7236 + C32907 * C7237) *
                C859 +
            (C10223 * C1019 + C10220 * C1030 + C10224 * C1711 + C10221 * C1715 +
             C10225 * C7238 + C32907 * C7239) *
                C32904) *
               C32533 * C32592 * C480 -
           ((C11569 + C11568 + C11567) * C32904 +
            (C11566 + C11565 + C11564) * C859 +
            (C10684 + C10685 + C10686) * C32927 +
            (C10687 + C10688 + C10689) * C858 +
            (C10268 + C10267 + C10266) * C32939 +
            (C10265 + C10264 + C10263) * C857) *
               C32533 * C32592 * C479) *
              C482)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C11964 * C115 + C11959 * C122 + C11965 * C361 + C11960 * C376 +
             C11966 * C362 + C11961 * C377 + C11967 * C2128 + C11962 * C2137 +
             C11968 * C2129 + C11963 * C2138) *
                C114 +
            (C11964 * C123 + C11959 * C136 + C11965 * C375 + C11960 * C391 +
             C11966 * C378 + C11961 * C392 + C11967 * C2136 + C11962 * C2146 +
             C11968 * C2139 + C11963 * C2147) *
                C32615) *
               C32533 * C32592 * C479 -
           ((C11968 * C7084 + C11963 * C7088 + C11967 * C2672 + C11962 * C2677 +
             C11966 * C1191 + C11961 * C1205 + C11965 * C727 + C11960 * C736 +
             C11964 * C270 + C11959 * C286) *
                C32615 +
            (C11968 * C7079 + C11963 * C7083 + C11967 * C2668 + C11962 * C2671 +
             C11966 * C1178 + C11961 * C1190 + C11965 * C721 + C11960 * C726 +
             C11964 * C256 + C11959 * C271) *
                C114) *
               C32533 * C32592 * C480) *
              C481 +
          (((C11964 * C255 + C11959 * C269 + C11965 * C722 + C11960 * C728 +
             C11966 * C1180 + C11961 * C1194 + C11967 * C2669 + C11962 * C2673 +
             C11968 * C12183 + C11963 * C12184) *
                C114 +
            (C11964 * C268 + C11959 * C285 + C11965 * C729 + C11960 * C737 +
             C11966 * C1195 + C11961 * C1207 + C11967 * C2674 + C11962 * C2678 +
             C11968 * C12185 + C11963 * C12186) *
                C32615) *
               C32533 * C32592 * C480 -
           ((C11968 * C2141 + C11963 * C2148 + C11967 * C2134 + C11962 * C2145 +
             C11966 * C380 + C11961 * C393 + C11965 * C373 + C11960 * C390 +
             C11964 * C125 + C11959 * C137) *
                C32615 +
            (C11968 * C2130 + C11963 * C2140 + C11967 * C2127 + C11962 * C2135 +
             C11966 * C363 + C11961 * C379 + C11965 * C360 + C11960 * C374 +
             C11964 * C116 + C11959 * C124) *
                C114) *
               C32533 * C32592 * C479) *
              C482)) /
            (p * q * std::sqrt(p + q));
    d2ee[61] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C113 * C115 + C32632 * C122) * C114 +
                 (C113 * C123 + C32632 * C136) * C32615) *
                    C103 +
                (C174 + C175) * C104 + C184 * C105 + C185 * C106 +
                C186 * C107) *
                   C601 -
               ((C632 + C633) * C107 + (C634 + C635) * C106 +
                (C636 + C637) * C105 + (C638 + C639) * C104 +
                ((C113 * C375 + C32632 * C391) * C32615 +
                 (C113 * C361 + C32632 * C376) * C114) *
                    C103) *
                   C602) *
                  C479 +
              ((((C113 * C721 + C32632 * C726) * C114 +
                 (C113 * C727 + C32632 * C736) * C32615) *
                    C103 +
                ((C113 * C722 + C32632 * C728) * C114 +
                 (C113 * C729 + C32632 * C737) * C32615) *
                    C104 +
                ((C113 * C723 + C32632 * C730) * C114 +
                 (C113 * C731 + C32632 * C738) * C32615) *
                    C105 +
                ((C113 * C724 + C32632 * C732) * C114 +
                 (C113 * C733 + C32632 * C739) * C32615) *
                    C106 +
                ((C113 * C725 + C32632 * C734) * C114 +
                 (C113 * C735 + C32632 * C740) * C32615) *
                    C107) *
                   C602 -
               ((C512 + C513) * C107 + (C514 + C515) * C106 +
                (C516 + C517) * C105 + (C518 + C519) * C104 +
                ((C113 * C270 + C32632 * C286) * C32615 +
                 (C113 * C256 + C32632 * C271) * C114) *
                    C103) *
                   C601) *
                  C480) *
             C32566 +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C113 * C115 + C32632 * C122) * C857 +
                 (C113 * C123 + C32632 * C136) * C32939 + C1056 * C858 +
                 C1057 * C32927 + C1058 * C859 + C1059 * C32904) *
                    C854 +
                (C861 + C862 + C863 + C864 + C892 + C893) * C855 +
                C901 * C32893) *
                   C601 -
               ((C1552 + C1553 + C1554 + C1555 + C1532 + C1533) * C32893 +
                (C1556 + C1557 + C1558 + C1559 + C1542 + C1543) * C855 +
                (C1726 * C32904 + C1727 * C859 + C1728 * C32927 + C1729 * C858 +
                 (C113 * C375 + C32632 * C391) * C32939 +
                 (C113 * C361 + C32632 * C376) * C857) *
                    C854) *
                   C602) *
                  C479 +
              (((C1729 * C857 + C1728 * C32939 + C1727 * C858 + C1726 * C32927 +
                 (C113 * C1705 + C32632 * C1708) * C859 +
                 (C113 * C1709 + C32632 * C1714) * C32904) *
                    C854 +
                (C1551 * C857 + C1550 * C32939 + C1549 * C858 + C1548 * C32927 +
                 (C113 * C1706 + C32632 * C1710) * C859 +
                 (C113 * C1711 + C32632 * C1715) * C32904) *
                    C855 +
                (C1547 * C857 + C1546 * C32939 + C1545 * C858 + C1544 * C32927 +
                 (C113 * C1707 + C32632 * C1712) * C859 +
                 (C113 * C1713 + C32632 * C1716) * C32904) *
                    C32893) *
                   C602 -
               ((C1362 + C1363 + C1364 + C1365 + C1366 + C1367) * C32893 +
                (C1368 + C1369 + C1370 + C1371 + C1372 + C1373) * C855 +
                (C1064 * C32904 + C1065 * C859 + C1059 * C32927 + C1058 * C858 +
                 C1057 * C32939 + C1056 * C857) *
                    C854) *
                   C601) *
                  C480) *
             C32566) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C1842 * C115 + C32940 * C122 + C1843 * C361 + C32929 * C376 +
              C1844 * C362 + C32907 * C377) *
                 C114 +
             (C1842 * C123 + C32940 * C136 + C1843 * C375 + C32929 * C391 +
              C1844 * C378 + C32907 * C392) *
                 C32615) *
                C854 +
            ((C1882 + C1883 + C1884) * C114 +
             (C1885 + C1886 + C1887) * C32615) *
                C855 +
            C1906 * C32893) *
               C601 -
           (((C2511 + C2512 + C2513) * C32615 +
             (C2514 + C2515 + C2516) * C114) *
                C32893 +
            ((C2517 + C2518 + C2519) * C32615 +
             (C2520 + C2521 + C2522) * C114) *
                C855 +
            ((C1844 * C2136 + C32907 * C2146 + C1843 * C378 + C32929 * C392 +
              C1842 * C375 + C32940 * C391) *
                 C32615 +
             (C1844 * C2128 + C32907 * C2137 + C1843 * C362 + C32929 * C377 +
              C1842 * C361 + C32940 * C376) *
                 C114) *
                C854) *
               C602) *
              C479 +
          ((((C1842 * C721 + C32940 * C726 + C1843 * C1178 + C32929 * C1190 +
              C1844 * C2668 + C32907 * C2671) *
                 C114 +
             (C1842 * C727 + C32940 * C736 + C1843 * C1191 + C32929 * C1205 +
              C1844 * C2672 + C32907 * C2677) *
                 C32615) *
                C854 +
            ((C1842 * C722 + C32940 * C728 + C1843 * C1180 + C32929 * C1194 +
              C1844 * C2669 + C32907 * C2673) *
                 C114 +
             (C1842 * C729 + C32940 * C737 + C1843 * C1195 + C32929 * C1207 +
              C1844 * C2674 + C32907 * C2678) *
                 C32615) *
                C855 +
            ((C1842 * C723 + C32940 * C730 + C1843 * C1182 + C32929 * C1198 +
              C1844 * C2670 + C32907 * C2675) *
                 C114 +
             (C1842 * C731 + C32940 * C738 + C1843 * C1199 + C32929 * C1209 +
              C1844 * C2676 + C32907 * C2679) *
                 C32615) *
                C32893) *
               C602 -
           (((C2325 + C2326 + C2327) * C32615 +
             (C2328 + C2329 + C2330) * C114) *
                C32893 +
            ((C2331 + C2332 + C2333) * C32615 +
             (C2334 + C2335 + C2336) * C114) *
                C855 +
            ((C1844 * C1191 + C32907 * C1205 + C1843 * C727 + C32929 * C736 +
              C1842 * C270 + C32940 * C286) *
                 C32615 +
             (C1844 * C1178 + C32907 * C1190 + C1843 * C721 + C32929 * C726 +
              C1842 * C256 + C32940 * C271) *
                 C114) *
                C854) *
               C601) *
              C480) *
         C32566) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C32632 * C122) * C5477 +
             (C113 * C123 + C32632 * C136) * C5471 + C1056 * C5478 +
             C1057 * C5472 + C1058 * C5479 + C1059 * C32904) *
                C32936 +
            (C5481 + C5482 + C5483 + C5484 + C5485 + C5486) * C32923 +
            C5503 * C32893) *
               C601 -
           ((C6028 + C6029 + C6030 + C6031 + C6032 + C6033) * C32893 +
            (C6034 + C6035 + C6036 + C6037 + C6038 + C6039) * C32923 +
            (C1726 * C32904 + C1727 * C5479 + C1728 * C5472 + C1729 * C5478 +
             (C113 * C375 + C32632 * C391) * C5471 +
             (C113 * C361 + C32632 * C376) * C5477) *
                C32936) *
               C602) *
              C479 +
          (((C1729 * C5477 + C1728 * C5471 + C1727 * C5478 + C1726 * C5472 +
             (C113 * C1705 + C32632 * C1708) * C5479 +
             (C113 * C1709 + C32632 * C1714) * C32904) *
                C32936 +
            (C1551 * C5477 + C1550 * C5471 + C1549 * C5478 + C1548 * C5472 +
             (C113 * C1706 + C32632 * C1710) * C5479 +
             (C113 * C1711 + C32632 * C1715) * C32904) *
                C32923 +
            (C1547 * C5477 + C1546 * C5471 + C1545 * C5478 + C1544 * C5472 +
             (C113 * C1707 + C32632 * C1712) * C5479 +
             (C113 * C1713 + C32632 * C1716) * C32904) *
                C32893) *
               C602 -
           ((C5870 + C5871 + C5872 + C5873 + C5874 + C5875) * C32893 +
            (C5876 + C5877 + C5878 + C5879 + C5880 + C5881) * C32923 +
            (C1064 * C32904 + C1065 * C5479 + C1059 * C5472 + C1058 * C5478 +
             C1057 * C5471 + C1056 * C5477) *
                C32936) *
               C601) *
              C480) *
         C32566) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C32632 * C122) * C6253 +
            (C113 * C123 + C32632 * C136) * C6247 + C1056 * C6254 +
            C1057 * C6248 + C1058 * C6255 + C1059 * C6249 + C1065 * C6256 +
            C1064 * C6250 + C6337 * C6257 + C6338 * C6251) *
               C32533 * C601 -
           (C6687 * C6251 + C6688 * C6257 + C6689 * C6250 + C6690 * C6256 +
            C1726 * C6249 + C1727 * C6255 + C1728 * C6248 + C1729 * C6254 +
            (C113 * C375 + C32632 * C391) * C6247 +
            (C113 * C361 + C32632 * C376) * C6253) *
               C32533 * C602) *
              C479 +
          ((C1729 * C6253 + C1728 * C6247 + C1727 * C6254 + C1726 * C6248 +
            C6690 * C6255 + C6689 * C6249 + C6688 * C6256 + C6687 * C6250 +
            (C113 * C6674 + C32632 * C6675) * C6257 +
            (C113 * C6676 + C32632 * C6677) * C6251) *
               C32533 * C602 -
           (C6339 * C6251 + C6340 * C6257 + C6338 * C6250 + C6337 * C6256 +
            C1064 * C6249 + C1065 * C6255 + C1059 * C6248 + C1058 * C6254 +
            C1057 * C6247 + C1056 * C6253) *
               C32533 * C601) *
              C480) *
         C32566) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C1842 * C115 + C32940 * C122 + C1843 * C361 + C32929 * C376 +
             C1844 * C362 + C32907 * C377) *
                C5477 +
            (C1842 * C123 + C32940 * C136 + C1843 * C375 + C32929 * C391 +
             C1844 * C378 + C32907 * C392) *
                C5471 +
            (C6947 + C6948 + C6949) * C5478 + (C6950 + C6951 + C6952) * C5472 +
            C6967 * C5479 + C6968 * C32904) *
               C32533 * C601 -
           ((C7583 + C7584 + C7585) * C32904 + (C7586 + C7587 + C7588) * C5479 +
            (C7589 + C7590 + C7591) * C5472 + (C7592 + C7593 + C7594) * C5478 +
            (C1844 * C2136 + C32907 * C2146 + C1843 * C378 + C32929 * C392 +
             C1842 * C375 + C32940 * C391) *
                C5471 +
            (C1844 * C2128 + C32907 * C2137 + C1843 * C362 + C32929 * C377 +
             C1842 * C361 + C32940 * C376) *
                C5477) *
               C32533 * C602) *
              C479 +
          (((C7594 + C7593 + C7592) * C5477 + (C7591 + C7590 + C7589) * C5471 +
            (C7588 + C7587 + C7586) * C5478 + (C7585 + C7584 + C7583) * C5472 +
            (C1842 * C1705 + C32940 * C1708 + C1843 * C6403 + C32929 * C6407 +
             C1844 * C7554 + C32907 * C7555) *
                C5479 +
            (C1842 * C1709 + C32940 * C1714 + C1843 * C6408 + C32929 * C6412 +
             C1844 * C7556 + C32907 * C7557) *
                C32904) *
               C32533 * C602 -
           ((C6959 + C6960 + C6961) * C32904 + (C6962 + C6963 + C6964) * C5479 +
            (C6958 + C6957 + C6956) * C5472 + (C6955 + C6954 + C6953) * C5478 +
            (C6952 + C6951 + C6950) * C5471 + (C6949 + C6948 + C6947) * C5477) *
               C32533 * C601) *
              C480) *
         C32566) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C10223 * C115 + C10220 * C122 + C10224 * C361 + C10221 * C376 +
              C10225 * C362 + C32907 * C377) *
                 C114 +
             (C10223 * C123 + C10220 * C136 + C10224 * C375 + C10221 * C391 +
              C10225 * C378 + C32907 * C392) *
                 C32615) *
                C32936 +
            ((C10263 + C10264 + C10265) * C114 +
             (C10266 + C10267 + C10268) * C32615) *
                C32923 +
            C10287 * C32893) *
               C601 -
           (((C10860 + C10861 + C10862) * C32615 +
             (C10863 + C10864 + C10865) * C114) *
                C32893 +
            ((C10866 + C10867 + C10868) * C32615 +
             (C10869 + C10870 + C10871) * C114) *
                C32923 +
            ((C10225 * C2136 + C32907 * C2146 + C10224 * C378 + C10221 * C392 +
              C10223 * C375 + C10220 * C391) *
                 C32615 +
             (C10225 * C2128 + C32907 * C2137 + C10224 * C362 + C10221 * C377 +
              C10223 * C361 + C10220 * C376) *
                 C114) *
                C32936) *
               C602) *
              C479 +
          ((((C10223 * C721 + C10220 * C726 + C10224 * C1178 + C10221 * C1190 +
              C10225 * C2668 + C32907 * C2671) *
                 C114 +
             (C10223 * C727 + C10220 * C736 + C10224 * C1191 + C10221 * C1205 +
              C10225 * C2672 + C32907 * C2677) *
                 C32615) *
                C32936 +
            ((C10223 * C722 + C10220 * C728 + C10224 * C1180 + C10221 * C1194 +
              C10225 * C2669 + C32907 * C2673) *
                 C114 +
             (C10223 * C729 + C10220 * C737 + C10224 * C1195 + C10221 * C1207 +
              C10225 * C2674 + C32907 * C2678) *
                 C32615) *
                C32923 +
            ((C10223 * C723 + C10220 * C730 + C10224 * C1182 + C10221 * C1198 +
              C10225 * C2670 + C32907 * C2675) *
                 C114 +
             (C10223 * C731 + C10220 * C738 + C10224 * C1199 + C10221 * C1209 +
              C10225 * C2676 + C32907 * C2679) *
                 C32615) *
                C32893) *
               C602 -
           (((C10678 + C10679 + C10680) * C32615 +
             (C10681 + C10682 + C10683) * C114) *
                C32893 +
            ((C10684 + C10685 + C10686) * C32615 +
             (C10687 + C10688 + C10689) * C114) *
                C32923 +
            ((C10225 * C1191 + C32907 * C1205 + C10224 * C727 + C10221 * C736 +
              C10223 * C270 + C10220 * C286) *
                 C32615 +
             (C10225 * C1178 + C32907 * C1190 + C10224 * C721 + C10221 * C726 +
              C10223 * C256 + C10220 * C271) *
                 C114) *
                C32936) *
               C601) *
              C480) *
         C32566) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C10223 * C115 + C10220 * C122 + C10224 * C361 + C10221 * C376 +
             C10225 * C362 + C32907 * C377) *
                C857 +
            (C10223 * C123 + C10220 * C136 + C10224 * C375 + C10221 * C391 +
             C10225 * C378 + C32907 * C392) *
                C32939 +
            (C11274 + C11275 + C11276) * C858 +
            (C11277 + C11278 + C11279) * C32927 + C11294 * C859 +
            C11295 * C32904) *
               C32533 * C601 -
           ((C11886 + C11887 + C11888) * C32904 +
            (C11889 + C11890 + C11891) * C859 +
            (C11892 + C11893 + C11894) * C32927 +
            (C11895 + C11896 + C11897) * C858 +
            (C10225 * C2136 + C32907 * C2146 + C10224 * C378 + C10221 * C392 +
             C10223 * C375 + C10220 * C391) *
                C32939 +
            (C10225 * C2128 + C32907 * C2137 + C10224 * C362 + C10221 * C377 +
             C10223 * C361 + C10220 * C376) *
                C857) *
               C32533 * C602) *
              C479 +
          (((C11897 + C11896 + C11895) * C857 +
            (C11894 + C11893 + C11892) * C32939 +
            (C11891 + C11890 + C11889) * C858 +
            (C11888 + C11887 + C11886) * C32927 +
            (C10223 * C1705 + C10220 * C1708 + C10224 * C6403 + C10221 * C6407 +
             C10225 * C7554 + C32907 * C7555) *
                C859 +
            (C10223 * C1709 + C10220 * C1714 + C10224 * C6408 + C10221 * C6412 +
             C10225 * C7556 + C32907 * C7557) *
                C32904) *
               C32533 * C602 -
           ((C11286 + C11287 + C11288) * C32904 +
            (C11289 + C11290 + C11291) * C859 +
            (C11285 + C11284 + C11283) * C32927 +
            (C11282 + C11281 + C11280) * C858 +
            (C11279 + C11278 + C11277) * C32939 +
            (C11276 + C11275 + C11274) * C857) *
               C32533 * C601) *
              C480) *
         C32566) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C11964 * C115 + C11959 * C122 + C11965 * C361 + C11960 * C376 +
             C11966 * C362 + C11961 * C377 + C11967 * C2128 + C11962 * C2137 +
             C11968 * C2129 + C11963 * C2138) *
                C114 +
            (C11964 * C123 + C11959 * C136 + C11965 * C375 + C11960 * C391 +
             C11966 * C378 + C11961 * C392 + C11967 * C2136 + C11962 * C2146 +
             C11968 * C2139 + C11963 * C2147) *
                C32615) *
               C32533 * C601 -
           ((C11968 * C12095 + C11963 * C12099 + C11967 * C2139 +
             C11962 * C2147 + C11966 * C2136 + C11961 * C2146 + C11965 * C378 +
             C11960 * C392 + C11964 * C375 + C11959 * C391) *
                C32615 +
            (C11968 * C12093 + C11963 * C12096 + C11967 * C2129 +
             C11962 * C2138 + C11966 * C2128 + C11961 * C2137 + C11965 * C362 +
             C11960 * C377 + C11964 * C361 + C11959 * C376) *
                C114) *
               C32533 * C602) *
              C479 +
          (((C11964 * C721 + C11959 * C726 + C11965 * C1178 + C11960 * C1190 +
             C11966 * C2668 + C11961 * C2671 + C11967 * C7079 + C11962 * C7083 +
             C11968 * C12355 + C11963 * C12356) *
                C114 +
            (C11964 * C727 + C11959 * C736 + C11965 * C1191 + C11960 * C1205 +
             C11966 * C2672 + C11961 * C2677 + C11967 * C7084 + C11962 * C7088 +
             C11968 * C12357 + C11963 * C12358) *
                C32615) *
               C32533 * C602 -
           ((C11968 * C7084 + C11963 * C7088 + C11967 * C2672 + C11962 * C2677 +
             C11966 * C1191 + C11961 * C1205 + C11965 * C727 + C11960 * C736 +
             C11964 * C270 + C11959 * C286) *
                C32615 +
            (C11968 * C7079 + C11963 * C7083 + C11967 * C2668 + C11962 * C2671 +
             C11966 * C1178 + C11961 * C1190 + C11965 * C721 + C11960 * C726 +
             C11964 * C256 + C11959 * C271) *
                C114) *
               C32533 * C601) *
              C480) *
         C32566) /
            (p * q * std::sqrt(p + q));
    d2ee[62] +=
        (-0.25 * std::pow(Pi, 2.5) *
             ((((C113 * C115 + C32632 * C122) * C114 +
                (C113 * C123 + C32632 * C136) * C32615) *
                   C103 +
               (C174 + C175) * C104 + C184 * C105 + C185 * C106 + C186 * C107) *
                  C32592 * C32578 * C110 -
              ((C182 + C183) * C107 + (C181 + C180) * C106 +
               (C179 + C178) * C105 + (C177 + C176) * C104 +
               (C175 + C174) * C103) *
                  C32592 * C32578 * C111 +
              (C184 * C103 + C185 * C104 + C186 * C105 + (C183 + C182) * C106 +
               ((C113 * C121 + C32632 * C134) * C114 +
                (C113 * C135 + C32632 * C142) * C32615) *
                   C107) *
                  C32592 * C32578 * C112) -
         0.25 * std::pow(Pi, 2.5) *
             ((((C113 * C115 + C32632 * C122) * C114 +
                (C113 * C123 + C32632 * C136) * C32615) *
                   C103 +
               (C174 + C175) * C104 + C184 * C105 + C185 * C106 + C186 * C107) *
                  C32592 * C248 -
              (((C113 * C262 + C32632 * C282) * C32615 +
                (C113 * C252 + C32632 * C263) * C114) *
                   C107 +
               ((C113 * C264 + C32632 * C283) * C32615 +
                (C113 * C253 + C32632 * C265) * C114) *
                   C106 +
               ((C113 * C266 + C32632 * C284) * C32615 +
                (C113 * C254 + C32632 * C267) * C114) *
                   C105 +
               ((C113 * C268 + C32632 * C285) * C32615 +
                (C113 * C255 + C32632 * C269) * C114) *
                   C104 +
               ((C113 * C270 + C32632 * C286) * C32615 +
                (C113 * C256 + C32632 * C271) * C114) *
                   C103) *
                  C32592 * C249 +
              (((C113 * C257 + C32632 * C272) * C114 +
                (C113 * C273 + C32632 * C287) * C32615) *
                   C103 +
               ((C113 * C258 + C32632 * C274) * C114 +
                (C113 * C275 + C32632 * C288) * C32615) *
                   C104 +
               ((C113 * C259 + C32632 * C276) * C114 +
                (C113 * C277 + C32632 * C289) * C32615) *
                   C105 +
               ((C113 * C260 + C32632 * C278) * C114 +
                (C113 * C279 + C32632 * C290) * C32615) *
                   C106 +
               ((C113 * C261 + C32632 * C280) * C114 +
                (C113 * C281 + C32632 * C291) * C32615) *
                   C107) *
                  C32592 * C250) *
             C32566 +
         0.5 * std::pow(Pi, 2.5) *
             ((((C113 * C115 + C32632 * C122) * C114 +
                (C113 * C123 + C32632 * C136) * C32615) *
                   C103 +
               (C174 + C175) * C104 + C184 * C105 + C185 * C106 + C186 * C107) *
                  C354 -
              (((C113 * C367 + C32632 * C387) * C32615 +
                (C113 * C357 + C32632 * C368) * C114) *
                   C107 +
               ((C113 * C369 + C32632 * C388) * C32615 +
                (C113 * C358 + C32632 * C370) * C114) *
                   C106 +
               ((C113 * C371 + C32632 * C389) * C32615 +
                (C113 * C359 + C32632 * C372) * C114) *
                   C105 +
               ((C113 * C373 + C32632 * C390) * C32615 +
                (C113 * C360 + C32632 * C374) * C114) *
                   C104 +
               ((C113 * C375 + C32632 * C391) * C32615 +
                (C113 * C361 + C32632 * C376) * C114) *
                   C103) *
                  C355 +
              (((C113 * C362 + C32632 * C377) * C114 +
                (C113 * C378 + C32632 * C392) * C32615) *
                   C103 +
               ((C113 * C363 + C32632 * C379) * C114 +
                (C113 * C380 + C32632 * C393) * C32615) *
                   C104 +
               ((C113 * C364 + C32632 * C381) * C114 +
                (C113 * C382 + C32632 * C394) * C32615) *
                   C105 +
               ((C113 * C365 + C32632 * C383) * C114 +
                (C113 * C384 + C32632 * C395) * C32615) *
                   C106 +
               ((C113 * C366 + C32632 * C385) * C114 +
                (C113 * C386 + C32632 * C396) * C32615) *
                   C107) *
                  C356) *
             C32578 * C32566 -
         0.25 * std::pow(Pi, 2.5) *
             ((((C113 * C115 + C32632 * C122) * C857 +
                (C113 * C123 + C32632 * C136) * C32939 +
                (C113 * C256 + C32632 * C271) * C858 +
                (C113 * C270 + C32632 * C286) * C32927 +
                (C113 * C257 + C32632 * C272) * C859 +
                (C113 * C273 + C32632 * C287) * C32904) *
                   C854 +
               (C861 + C862 + C863 + C864 + C892 + C893) * C855 +
               C901 * C32893) *
                  C32592 * C32578 * C110 -
              ((C897 + C898 + C881 + C882 + C883 + C884) * C32893 +
               (C896 + C895 + C872 + C871 + C870 + C869) * C855 +
               (C893 + C892 + C864 + C863 + C862 + C861) * C854) *
                  C32592 * C32578 * C111 +
              (C901 * C854 + (C884 + C883 + C882 + C881 + C898 + C897) * C855 +
               (C170 * C857 + C171 * C32939 + C505 * C858 + C504 * C32927 +
                (C113 * C261 + C32632 * C280) * C859 +
                (C113 * C281 + C32632 * C291) * C32904) *
                   C32893) *
                  C32592 * C32578 * C112) -
         0.25 * std::pow(Pi, 2.5) *
             ((((C113 * C115 + C32632 * C122) * C857 +
                (C113 * C123 + C32632 * C136) * C32939 + C1056 * C858 +
                C1057 * C32927 + C1058 * C859 + C1059 * C32904) *
                   C854 +
               (C861 + C862 + C863 + C864 + C892 + C893) * C855 +
               C901 * C32893) *
                  C32592 * C248 -
              ((C1060 * C32904 + C1061 * C859 + C889 * C32927 + C888 * C858 +
                C508 * C32939 + C509 * C857) *
                   C32893 +
               (C1062 * C32904 + C1063 * C859 + C886 * C32927 + C885 * C858 +
                C510 * C32939 + C511 * C857) *
                   C855 +
               (C1064 * C32904 + C1065 * C859 + C1059 * C32927 + C1058 * C858 +
                C1057 * C32939 + C1056 * C857) *
                   C854) *
                  C32592 * C249 +
              ((C1058 * C857 + C1059 * C32939 + C1065 * C858 + C1064 * C32927 +
                (C113 * C1014 + C32632 * C1023) * C859 +
                (C113 * C1024 + C32632 * C1032) * C32904) *
                   C854 +
               (C885 * C857 + C886 * C32939 + C1063 * C858 + C1062 * C32927 +
                (C113 * C1015 + C32632 * C1025) * C859 +
                (C113 * C1026 + C32632 * C1033) * C32904) *
                   C855 +
               (C888 * C857 + C889 * C32939 + C1061 * C858 + C1060 * C32927 +
                (C113 * C1016 + C32632 * C1027) * C859 +
                (C113 * C1028 + C32632 * C1034) * C32904) *
                   C32893) *
                  C32592 * C250) *
             C32566 +
         0.5 * std::pow(Pi, 2.5) *
             ((((C113 * C115 + C32632 * C122) * C857 +
                (C113 * C123 + C32632 * C136) * C32939 + C1056 * C858 +
                C1057 * C32927 + C1058 * C859 + C1059 * C32904) *
                   C854 +
               (C861 + C862 + C863 + C864 + C892 + C893) * C855 +
               C901 * C32893) *
                  C354 -
              (((C113 * C1184 + C32632 * C1202) * C32904 +
                (C113 * C1175 + C32632 * C1185) * C859 +
                (C113 * C731 + C32632 * C738) * C32927 +
                (C113 * C723 + C32632 * C730) * C858 + C628 * C32939 +
                C629 * C857) *
                   C32893 +
               ((C113 * C1186 + C32632 * C1203) * C32904 +
                (C113 * C1176 + C32632 * C1187) * C859 +
                (C113 * C729 + C32632 * C737) * C32927 +
                (C113 * C722 + C32632 * C728) * C858 + C630 * C32939 +
                C631 * C857) *
                   C855 +
               ((C113 * C1188 + C32632 * C1204) * C32904 +
                (C113 * C1177 + C32632 * C1189) * C859 +
                (C113 * C727 + C32632 * C736) * C32927 +
                (C113 * C721 + C32632 * C726) * C858 +
                (C113 * C375 + C32632 * C391) * C32939 +
                (C113 * C361 + C32632 * C376) * C857) *
                   C854) *
                  C355 +
              (((C113 * C362 + C32632 * C377) * C857 +
                (C113 * C378 + C32632 * C392) * C32939 +
                (C113 * C1178 + C32632 * C1190) * C858 +
                (C113 * C1191 + C32632 * C1205) * C32927 +
                (C113 * C1179 + C32632 * C1192) * C859 +
                (C113 * C1193 + C32632 * C1206) * C32904) *
                   C854 +
               ((C113 * C363 + C32632 * C379) * C857 +
                (C113 * C380 + C32632 * C393) * C32939 +
                (C113 * C1180 + C32632 * C1194) * C858 +
                (C113 * C1195 + C32632 * C1207) * C32927 +
                (C113 * C1181 + C32632 * C1196) * C859 +
                (C113 * C1197 + C32632 * C1208) * C32904) *
                   C855 +
               ((C113 * C364 + C32632 * C381) * C857 +
                (C113 * C382 + C32632 * C394) * C32939 +
                (C113 * C1182 + C32632 * C1198) * C858 +
                (C113 * C1199 + C32632 * C1209) * C32927 +
                (C113 * C1183 + C32632 * C1200) * C859 +
                (C113 * C1201 + C32632 * C1210) * C32904) *
                   C32893) *
                  C356) *
             C32578 * C32566 +
         0.5 * std::pow(Pi, 2.5) *
             ((((C1842 * C115 + C32940 * C122 + C1843 * C361 + C32929 * C376 +
                 C1844 * C362 + C32907 * C377) *
                    C114 +
                (C1842 * C123 + C32940 * C136 + C1843 * C375 + C32929 * C391 +
                 C1844 * C378 + C32907 * C392) *
                    C32615) *
                   C854 +
               ((C1882 + C1883 + C1884) * C114 +
                (C1885 + C1886 + C1887) * C32615) *
                   C855 +
               C1906 * C32893) *
                  C32592 * C32578 * C110 -
              (((C1894 + C1895 + C1896) * C32615 +
                (C1897 + C1898 + C1899) * C114) *
                   C32893 +
               ((C1893 + C1892 + C1891) * C32615 +
                (C1890 + C1889 + C1888) * C114) *
                   C855 +
               ((C1887 + C1886 + C1885) * C32615 +
                (C1884 + C1883 + C1882) * C114) *
                   C854) *
                  C32592 * C32578 * C111 +
              (C1906 * C854 +
               ((C1899 + C1898 + C1897) * C114 +
                (C1896 + C1895 + C1894) * C32615) *
                   C855 +
               ((C1842 * C119 + C32940 * C130 + C1843 * C357 + C32929 * C368 +
                 C1844 * C366 + C32907 * C385) *
                    C114 +
                (C1842 * C131 + C32940 * C140 + C1843 * C367 + C32929 * C387 +
                 C1844 * C386 + C32907 * C396) *
                    C32615) *
                   C32893) *
                  C32592 * C32578 * C112) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C1842 * C115 + C32940 * C122 + C1843 * C361 + C32929 * C376 +
                 C1844 * C362 + C32907 * C377) *
                    C114 +
                (C1842 * C123 + C32940 * C136 + C1843 * C375 + C32929 * C391 +
                 C1844 * C378 + C32907 * C392) *
                    C32615) *
                   C854 +
               ((C1882 + C1883 + C1884) * C114 +
                (C1885 + C1886 + C1887) * C32615) *
                   C855 +
               C1906 * C32893) *
                  C32592 * C248 -
              (((C1844 * C1199 + C32907 * C1209 + C1843 * C731 + C32929 * C738 +
                 C1842 * C266 + C32940 * C284) *
                    C32615 +
                (C1844 * C1182 + C32907 * C1198 + C1843 * C723 + C32929 * C730 +
                 C1842 * C254 + C32940 * C267) *
                    C114) *
                   C32893 +
               ((C1844 * C1195 + C32907 * C1207 + C1843 * C729 + C32929 * C737 +
                 C1842 * C268 + C32940 * C285) *
                    C32615 +
                (C1844 * C1180 + C32907 * C1194 + C1843 * C722 + C32929 * C728 +
                 C1842 * C255 + C32940 * C269) *
                    C114) *
                   C855 +
               ((C1844 * C1191 + C32907 * C1205 + C1843 * C727 + C32929 * C736 +
                 C1842 * C270 + C32940 * C286) *
                    C32615 +
                (C1844 * C1178 + C32907 * C1190 + C1843 * C721 + C32929 * C726 +
                 C1842 * C256 + C32940 * C271) *
                    C114) *
                   C854) *
                  C32592 * C249 +
              (((C1842 * C257 + C32940 * C272 + C1843 * C1177 + C32929 * C1189 +
                 C1844 * C1179 + C32907 * C1192) *
                    C114 +
                (C1842 * C273 + C32940 * C287 + C1843 * C1188 + C32929 * C1204 +
                 C1844 * C1193 + C32907 * C1206) *
                    C32615) *
                   C854 +
               ((C1842 * C258 + C32940 * C274 + C1843 * C1176 + C32929 * C1187 +
                 C1844 * C1181 + C32907 * C1196) *
                    C114 +
                (C1842 * C275 + C32940 * C288 + C1843 * C1186 + C32929 * C1203 +
                 C1844 * C1197 + C32907 * C1208) *
                    C32615) *
                   C855 +
               ((C1842 * C259 + C32940 * C276 + C1843 * C1175 + C32929 * C1185 +
                 C1844 * C1183 + C32907 * C1200) *
                    C114 +
                (C1842 * C277 + C32940 * C289 + C1843 * C1184 + C32929 * C1202 +
                 C1844 * C1201 + C32907 * C1210) *
                    C32615) *
                   C32893) *
                  C32592 * C250) *
             C32566) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C1842 * C115 + C32940 * C122 + C1843 * C361 + C32929 * C376 +
             C1844 * C362 + C32907 * C377) *
                C114 +
            (C1842 * C123 + C32940 * C136 + C1843 * C375 + C32929 * C391 +
             C1844 * C378 + C32907 * C392) *
                C32615) *
               C854 +
           ((C1882 + C1883 + C1884) * C114 + (C1885 + C1886 + C1887) * C32615) *
               C855 +
           C1906 * C32893) *
              C354 -
          (((C1844 * C2132 + C32907 * C2144 + C1843 * C382 + C32929 * C394 +
             C1842 * C371 + C32940 * C389) *
                C32615 +
            (C1844 * C2126 + C32907 * C2133 + C1843 * C364 + C32929 * C381 +
             C1842 * C359 + C32940 * C372) *
                C114) *
               C32893 +
           ((C1844 * C2134 + C32907 * C2145 + C1843 * C380 + C32929 * C393 +
             C1842 * C373 + C32940 * C390) *
                C32615 +
            (C1844 * C2127 + C32907 * C2135 + C1843 * C363 + C32929 * C379 +
             C1842 * C360 + C32940 * C374) *
                C114) *
               C855 +
           ((C1844 * C2136 + C32907 * C2146 + C1843 * C378 + C32929 * C392 +
             C1842 * C375 + C32940 * C391) *
                C32615 +
            (C1844 * C2128 + C32907 * C2137 + C1843 * C362 + C32929 * C377 +
             C1842 * C361 + C32940 * C376) *
                C114) *
               C854) *
              C355 +
          (((C1842 * C362 + C32940 * C377 + C1843 * C2128 + C32929 * C2137 +
             C1844 * C2129 + C32907 * C2138) *
                C114 +
            (C1842 * C378 + C32940 * C392 + C1843 * C2136 + C32929 * C2146 +
             C1844 * C2139 + C32907 * C2147) *
                C32615) *
               C854 +
           ((C1842 * C363 + C32940 * C379 + C1843 * C2127 + C32929 * C2135 +
             C1844 * C2130 + C32907 * C2140) *
                C114 +
            (C1842 * C380 + C32940 * C393 + C1843 * C2134 + C32929 * C2145 +
             C1844 * C2141 + C32907 * C2148) *
                C32615) *
               C855 +
           ((C1842 * C364 + C32940 * C381 + C1843 * C2126 + C32929 * C2133 +
             C1844 * C2131 + C32907 * C2142) *
                C114 +
            (C1842 * C382 + C32940 * C394 + C1843 * C2132 + C32929 * C2144 +
             C1844 * C2143 + C32907 * C2149) *
                C32615) *
               C32893) *
              C356) *
         C32578 * C32566) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C32632 * C122) * C5477 +
            (C113 * C123 + C32632 * C136) * C5471 + C1056 * C5478 +
            C1057 * C5472 + C1058 * C5479 + C1059 * C32904) *
               C32936 +
           (C5481 + C5482 + C5483 + C5484 + C5485 + C5486) * C32923 +
           C5503 * C32893) *
              C32592 * C32578 * C110 -
          ((C5493 + C5494 + C5495 + C5496 + C5497 + C5498) * C32893 +
           (C5492 + C5491 + C5490 + C5489 + C5488 + C5487) * C32923 +
           (C5486 + C5485 + C5484 + C5483 + C5482 + C5481) * C32936) *
              C32592 * C32578 * C111 +
          (C5503 * C32936 +
           (C5498 + C5497 + C5496 + C5495 + C5494 + C5493) * C32923 +
           (C170 * C5477 + C171 * C5471 + C505 * C5478 + C504 * C5472 +
            (C113 * C261 + C32632 * C280) * C5479 +
            (C113 * C281 + C32632 * C291) * C32904) *
               C32893) *
              C32592 * C32578 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C32632 * C122) * C5477 +
            (C113 * C123 + C32632 * C136) * C5471 + C1056 * C5478 +
            C1057 * C5472 + C1058 * C5479 + C1059 * C32904) *
               C32936 +
           (C5481 + C5482 + C5483 + C5484 + C5485 + C5486) * C32923 +
           C5503 * C32893) *
              C32592 * C248 -
          ((C1060 * C32904 + C1061 * C5479 + C889 * C5472 + C888 * C5478 +
            C508 * C5471 + C509 * C5477) *
               C32893 +
           (C1062 * C32904 + C1063 * C5479 + C886 * C5472 + C885 * C5478 +
            C510 * C5471 + C511 * C5477) *
               C32923 +
           (C1064 * C32904 + C1065 * C5479 + C1059 * C5472 + C1058 * C5478 +
            C1057 * C5471 + C1056 * C5477) *
               C32936) *
              C32592 * C249 +
          ((C1058 * C5477 + C1059 * C5471 + C1065 * C5478 + C1064 * C5472 +
            (C113 * C1014 + C32632 * C1023) * C5479 +
            (C113 * C1024 + C32632 * C1032) * C32904) *
               C32936 +
           (C885 * C5477 + C886 * C5471 + C1063 * C5478 + C1062 * C5472 +
            (C113 * C1015 + C32632 * C1025) * C5479 +
            (C113 * C1026 + C32632 * C1033) * C32904) *
               C32923 +
           (C888 * C5477 + C889 * C5471 + C1061 * C5478 + C1060 * C5472 +
            (C113 * C1016 + C32632 * C1027) * C5479 +
            (C113 * C1028 + C32632 * C1034) * C32904) *
               C32893) *
              C32592 * C250) *
         C32566) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C32632 * C122) * C5477 +
            (C113 * C123 + C32632 * C136) * C5471 + C1056 * C5478 +
            C1057 * C5472 + C1058 * C5479 + C1059 * C32904) *
               C32936 +
           (C5481 + C5482 + C5483 + C5484 + C5485 + C5486) * C32923 +
           C5503 * C32893) *
              C354 -
          ((C1544 * C32904 + C1545 * C5479 + C1546 * C5472 + C1547 * C5478 +
            C628 * C5471 + C629 * C5477) *
               C32893 +
           (C1548 * C32904 + C1549 * C5479 + C1550 * C5472 + C1551 * C5478 +
            C630 * C5471 + C631 * C5477) *
               C32923 +
           (C1726 * C32904 + C1727 * C5479 + C1728 * C5472 + C1729 * C5478 +
            (C113 * C375 + C32632 * C391) * C5471 +
            (C113 * C361 + C32632 * C376) * C5477) *
               C32936) *
              C355 +
          (((C113 * C362 + C32632 * C377) * C5477 +
            (C113 * C378 + C32632 * C392) * C5471 +
            (C113 * C1178 + C32632 * C1190) * C5478 +
            (C113 * C1191 + C32632 * C1205) * C5472 +
            (C113 * C1179 + C32632 * C1192) * C5479 +
            (C113 * C1193 + C32632 * C1206) * C32904) *
               C32936 +
           ((C113 * C363 + C32632 * C379) * C5477 +
            (C113 * C380 + C32632 * C393) * C5471 +
            (C113 * C1180 + C32632 * C1194) * C5478 +
            (C113 * C1195 + C32632 * C1207) * C5472 +
            (C113 * C1181 + C32632 * C1196) * C5479 +
            (C113 * C1197 + C32632 * C1208) * C32904) *
               C32923 +
           ((C113 * C364 + C32632 * C381) * C5477 +
            (C113 * C382 + C32632 * C394) * C5471 +
            (C113 * C1182 + C32632 * C1198) * C5478 +
            (C113 * C1199 + C32632 * C1209) * C5472 +
            (C113 * C1183 + C32632 * C1200) * C5479 +
            (C113 * C1201 + C32632 * C1210) * C32904) *
               C32893) *
              C356) *
         C32578 * C32566) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         (((C113 * C115 + C32632 * C122) * C6253 +
           (C113 * C123 + C32632 * C136) * C6247 + C1056 * C6254 +
           C1057 * C6248 + C1058 * C6255 + C1059 * C6249 + C1065 * C6256 +
           C1064 * C6250 + (C113 * C1014 + C32632 * C1023) * C6257 +
           (C113 * C1024 + C32632 * C1032) * C6251) *
              C32533 * C32592 * C32578 * C110 -
          ((C113 * C1026 + C32632 * C1033) * C6251 +
           (C113 * C1015 + C32632 * C1025) * C6257 + C1062 * C6250 +
           C1063 * C6256 + C886 * C6249 + C885 * C6255 + C510 * C6248 +
           C511 * C6254 + C165 * C6247 + C164 * C6253) *
              C32533 * C32592 * C32578 * C111 +
          (C166 * C6253 + C167 * C6247 + C509 * C6254 + C508 * C6248 +
           C888 * C6255 + C889 * C6249 + C1061 * C6256 + C1060 * C6250 +
           (C113 * C1016 + C32632 * C1027) * C6257 +
           (C113 * C1028 + C32632 * C1034) * C6251) *
              C32533 * C32592 * C32578 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         (((C113 * C115 + C32632 * C122) * C6253 +
           (C113 * C123 + C32632 * C136) * C6247 + C1056 * C6254 +
           C1057 * C6248 + C1058 * C6255 + C1059 * C6249 + C1065 * C6256 +
           C1064 * C6250 + C6337 * C6257 + C6338 * C6251) *
              C32533 * C32592 * C248 -
          (C6339 * C6251 + C6340 * C6257 + C6338 * C6250 + C6337 * C6256 +
           C1064 * C6249 + C1065 * C6255 + C1059 * C6248 + C1058 * C6254 +
           C1057 * C6247 + C1056 * C6253) *
              C32533 * C32592 * C249 +
          (C1058 * C6253 + C1059 * C6247 + C1065 * C6254 + C1064 * C6248 +
           C6337 * C6255 + C6338 * C6249 + C6340 * C6256 + C6339 * C6250 +
           (C113 * C6321 + C32632 * C6324) * C6257 +
           (C113 * C6325 + C32632 * C6327) * C6251) *
              C32533 * C32592 * C250) *
         C32566) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C113 * C115 + C32632 * C122) * C6253 +
           (C113 * C123 + C32632 * C136) * C6247 + C1056 * C6254 +
           C1057 * C6248 + C1058 * C6255 + C1059 * C6249 + C1065 * C6256 +
           C1064 * C6250 + C6337 * C6257 + C6338 * C6251) *
              C32533 * C354 -
          ((C113 * C6405 + C32632 * C6411) * C6251 +
           (C113 * C6402 + C32632 * C6406) * C6257 +
           (C113 * C1709 + C32632 * C1714) * C6250 +
           (C113 * C1705 + C32632 * C1708) * C6256 + C1726 * C6249 +
           C1727 * C6255 + C1728 * C6248 + C1729 * C6254 +
           (C113 * C375 + C32632 * C391) * C6247 +
           (C113 * C361 + C32632 * C376) * C6253) *
              C32533 * C355 +
          ((C113 * C362 + C32632 * C377) * C6253 +
           (C113 * C378 + C32632 * C392) * C6247 +
           (C113 * C1178 + C32632 * C1190) * C6254 +
           (C113 * C1191 + C32632 * C1205) * C6248 +
           (C113 * C1179 + C32632 * C1192) * C6255 +
           (C113 * C1193 + C32632 * C1206) * C6249 +
           (C113 * C6403 + C32632 * C6407) * C6256 +
           (C113 * C6408 + C32632 * C6412) * C6250 +
           (C113 * C6404 + C32632 * C6409) * C6257 +
           (C113 * C6410 + C32632 * C6413) * C6251) *
              C32533 * C356) *
         C32578 * C32566) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C1842 * C115 + C32940 * C122 + C1843 * C361 + C32929 * C376 +
            C1844 * C362 + C32907 * C377) *
               C5477 +
           (C1842 * C123 + C32940 * C136 + C1843 * C375 + C32929 * C391 +
            C1844 * C378 + C32907 * C392) *
               C5471 +
           (C1842 * C256 + C32940 * C271 + C1843 * C721 + C32929 * C726 +
            C1844 * C1178 + C32907 * C1190) *
               C5478 +
           (C1842 * C270 + C32940 * C286 + C1843 * C727 + C32929 * C736 +
            C1844 * C1191 + C32907 * C1205) *
               C5472 +
           (C1842 * C257 + C32940 * C272 + C1843 * C1177 + C32929 * C1189 +
            C1844 * C1179 + C32907 * C1192) *
               C5479 +
           (C1842 * C273 + C32940 * C287 + C1843 * C1188 + C32929 * C1204 +
            C1844 * C1193 + C32907 * C1206) *
               C32904) *
              C32533 * C32592 * C32578 * C110 -
          ((C1844 * C1197 + C32907 * C1208 + C1843 * C1186 + C32929 * C1203 +
            C1842 * C275 + C32940 * C288) *
               C32904 +
           (C1844 * C1181 + C32907 * C1196 + C1843 * C1176 + C32929 * C1187 +
            C1842 * C258 + C32940 * C274) *
               C5479 +
           (C2331 + C2332 + C2333) * C5472 + (C2334 + C2335 + C2336) * C5478 +
           (C1887 + C1886 + C1885) * C5471 + (C1884 + C1883 + C1882) * C5477) *
              C32533 * C32592 * C32578 * C111 +
          (C1902 * C5477 + C1903 * C5471 + (C2330 + C2329 + C2328) * C5478 +
           (C2327 + C2326 + C2325) * C5472 +
           (C1842 * C259 + C32940 * C276 + C1843 * C1175 + C32929 * C1185 +
            C1844 * C1183 + C32907 * C1200) *
               C5479 +
           (C1842 * C277 + C32940 * C289 + C1843 * C1184 + C32929 * C1202 +
            C1844 * C1201 + C32907 * C1210) *
               C32904) *
              C32533 * C32592 * C32578 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C1842 * C115 + C32940 * C122 + C1843 * C361 + C32929 * C376 +
            C1844 * C362 + C32907 * C377) *
               C5477 +
           (C1842 * C123 + C32940 * C136 + C1843 * C375 + C32929 * C391 +
            C1844 * C378 + C32907 * C392) *
               C5471 +
           (C6947 + C6948 + C6949) * C5478 + (C6950 + C6951 + C6952) * C5472 +
           C6967 * C5479 + C6968 * C32904) *
              C32533 * C32592 * C248 -
          ((C6959 + C6960 + C6961) * C32904 + (C6962 + C6963 + C6964) * C5479 +
           (C6958 + C6957 + C6956) * C5472 + (C6955 + C6954 + C6953) * C5478 +
           (C6952 + C6951 + C6950) * C5471 + (C6949 + C6948 + C6947) * C5477) *
              C32533 * C32592 * C249 +
          (C6967 * C5477 + C6968 * C5471 + (C6964 + C6963 + C6962) * C5478 +
           (C6961 + C6960 + C6959) * C5472 +
           (C1842 * C1014 + C32940 * C1023 + C1843 * C6402 + C32929 * C6406 +
            C1844 * C6404 + C32907 * C6409) *
               C5479 +
           (C1842 * C1024 + C32940 * C1032 + C1843 * C6405 + C32929 * C6411 +
            C1844 * C6410 + C32907 * C6413) *
               C32904) *
              C32533 * C32592 * C250) *
         C32566) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C1842 * C115 + C32940 * C122 + C1843 * C361 + C32929 * C376 +
            C1844 * C362 + C32907 * C377) *
               C5477 +
           (C1842 * C123 + C32940 * C136 + C1843 * C375 + C32929 * C391 +
            C1844 * C378 + C32907 * C392) *
               C5471 +
           (C6947 + C6948 + C6949) * C5478 + (C6950 + C6951 + C6952) * C5472 +
           C6967 * C5479 + C6968 * C32904) *
              C32533 * C354 -
          ((C1844 * C7081 + C32907 * C7087 + C1843 * C1193 + C32929 * C1206 +
            C1842 * C1188 + C32940 * C1204) *
               C32904 +
           (C1844 * C7078 + C32907 * C7082 + C1843 * C1179 + C32929 * C1192 +
            C1842 * C1177 + C32940 * C1189) *
               C5479 +
           (C1844 * C2672 + C32907 * C2677 + C1843 * C1191 + C32929 * C1205 +
            C1842 * C727 + C32940 * C736) *
               C5472 +
           (C1844 * C2668 + C32907 * C2671 + C1843 * C1178 + C32929 * C1190 +
            C1842 * C721 + C32940 * C726) *
               C5478 +
           (C1844 * C2136 + C32907 * C2146 + C1843 * C378 + C32929 * C392 +
            C1842 * C375 + C32940 * C391) *
               C5471 +
           (C1844 * C2128 + C32907 * C2137 + C1843 * C362 + C32929 * C377 +
            C1842 * C361 + C32940 * C376) *
               C5477) *
              C32533 * C355 +
          ((C1842 * C362 + C32940 * C377 + C1843 * C2128 + C32929 * C2137 +
            C1844 * C2129 + C32907 * C2138) *
               C5477 +
           (C1842 * C378 + C32940 * C392 + C1843 * C2136 + C32929 * C2146 +
            C1844 * C2139 + C32907 * C2147) *
               C5471 +
           (C1842 * C1178 + C32940 * C1190 + C1843 * C2668 + C32929 * C2671 +
            C1844 * C7079 + C32907 * C7083) *
               C5478 +
           (C1842 * C1191 + C32940 * C1205 + C1843 * C2672 + C32929 * C2677 +
            C1844 * C7084 + C32907 * C7088) *
               C5472 +
           (C1842 * C1179 + C32940 * C1192 + C1843 * C7078 + C32929 * C7082 +
            C1844 * C7080 + C32907 * C7085) *
               C5479 +
           (C1842 * C1193 + C32940 * C1206 + C1843 * C7081 + C32929 * C7087 +
            C1844 * C7086 + C32907 * C7089) *
               C32904) *
              C32533 * C356) *
         C32578 * C32566) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C10223 * C115 + C10220 * C122 + C10224 * C361 + C10221 * C376 +
             C10225 * C362 + C32907 * C377) *
                C114 +
            (C10223 * C123 + C10220 * C136 + C10224 * C375 + C10221 * C391 +
             C10225 * C378 + C32907 * C392) *
                C32615) *
               C32936 +
           ((C10263 + C10264 + C10265) * C114 +
            (C10266 + C10267 + C10268) * C32615) *
               C32923 +
           C10287 * C32893) *
              C32592 * C32578 * C110 -
          (((C10275 + C10276 + C10277) * C32615 +
            (C10278 + C10279 + C10280) * C114) *
               C32893 +
           ((C10274 + C10273 + C10272) * C32615 +
            (C10271 + C10270 + C10269) * C114) *
               C32923 +
           ((C10268 + C10267 + C10266) * C32615 +
            (C10265 + C10264 + C10263) * C114) *
               C32936) *
              C32592 * C32578 * C111 +
          (C10287 * C32936 +
           ((C10280 + C10279 + C10278) * C114 +
            (C10277 + C10276 + C10275) * C32615) *
               C32923 +
           ((C10223 * C119 + C10220 * C130 + C10224 * C357 + C10221 * C368 +
             C10225 * C366 + C32907 * C385) *
                C114 +
            (C10223 * C131 + C10220 * C140 + C10224 * C367 + C10221 * C387 +
             C10225 * C386 + C32907 * C396) *
                C32615) *
               C32893) *
              C32592 * C32578 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C10223 * C115 + C10220 * C122 + C10224 * C361 + C10221 * C376 +
             C10225 * C362 + C32907 * C377) *
                C114 +
            (C10223 * C123 + C10220 * C136 + C10224 * C375 + C10221 * C391 +
             C10225 * C378 + C32907 * C392) *
                C32615) *
               C32936 +
           ((C10263 + C10264 + C10265) * C114 +
            (C10266 + C10267 + C10268) * C32615) *
               C32923 +
           C10287 * C32893) *
              C32592 * C248 -
          (((C10225 * C1199 + C32907 * C1209 + C10224 * C731 + C10221 * C738 +
             C10223 * C266 + C10220 * C284) *
                C32615 +
            (C10225 * C1182 + C32907 * C1198 + C10224 * C723 + C10221 * C730 +
             C10223 * C254 + C10220 * C267) *
                C114) *
               C32893 +
           ((C10225 * C1195 + C32907 * C1207 + C10224 * C729 + C10221 * C737 +
             C10223 * C268 + C10220 * C285) *
                C32615 +
            (C10225 * C1180 + C32907 * C1194 + C10224 * C722 + C10221 * C728 +
             C10223 * C255 + C10220 * C269) *
                C114) *
               C32923 +
           ((C10225 * C1191 + C32907 * C1205 + C10224 * C727 + C10221 * C736 +
             C10223 * C270 + C10220 * C286) *
                C32615 +
            (C10225 * C1178 + C32907 * C1190 + C10224 * C721 + C10221 * C726 +
             C10223 * C256 + C10220 * C271) *
                C114) *
               C32936) *
              C32592 * C249 +
          (((C10223 * C257 + C10220 * C272 + C10224 * C1177 + C10221 * C1189 +
             C10225 * C1179 + C32907 * C1192) *
                C114 +
            (C10223 * C273 + C10220 * C287 + C10224 * C1188 + C10221 * C1204 +
             C10225 * C1193 + C32907 * C1206) *
                C32615) *
               C32936 +
           ((C10223 * C258 + C10220 * C274 + C10224 * C1176 + C10221 * C1187 +
             C10225 * C1181 + C32907 * C1196) *
                C114 +
            (C10223 * C275 + C10220 * C288 + C10224 * C1186 + C10221 * C1203 +
             C10225 * C1197 + C32907 * C1208) *
                C32615) *
               C32923 +
           ((C10223 * C259 + C10220 * C276 + C10224 * C1175 + C10221 * C1185 +
             C10225 * C1183 + C32907 * C1200) *
                C114 +
            (C10223 * C277 + C10220 * C289 + C10224 * C1184 + C10221 * C1202 +
             C10225 * C1201 + C32907 * C1210) *
                C32615) *
               C32893) *
              C32592 * C250) *
         C32566) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C10223 * C115 + C10220 * C122 + C10224 * C361 + C10221 * C376 +
             C10225 * C362 + C32907 * C377) *
                C114 +
            (C10223 * C123 + C10220 * C136 + C10224 * C375 + C10221 * C391 +
             C10225 * C378 + C32907 * C392) *
                C32615) *
               C32936 +
           ((C10263 + C10264 + C10265) * C114 +
            (C10266 + C10267 + C10268) * C32615) *
               C32923 +
           C10287 * C32893) *
              C354 -
          (((C10225 * C2132 + C32907 * C2144 + C10224 * C382 + C10221 * C394 +
             C10223 * C371 + C10220 * C389) *
                C32615 +
            (C10225 * C2126 + C32907 * C2133 + C10224 * C364 + C10221 * C381 +
             C10223 * C359 + C10220 * C372) *
                C114) *
               C32893 +
           ((C10225 * C2134 + C32907 * C2145 + C10224 * C380 + C10221 * C393 +
             C10223 * C373 + C10220 * C390) *
                C32615 +
            (C10225 * C2127 + C32907 * C2135 + C10224 * C363 + C10221 * C379 +
             C10223 * C360 + C10220 * C374) *
                C114) *
               C32923 +
           ((C10225 * C2136 + C32907 * C2146 + C10224 * C378 + C10221 * C392 +
             C10223 * C375 + C10220 * C391) *
                C32615 +
            (C10225 * C2128 + C32907 * C2137 + C10224 * C362 + C10221 * C377 +
             C10223 * C361 + C10220 * C376) *
                C114) *
               C32936) *
              C355 +
          (((C10223 * C362 + C10220 * C377 + C10224 * C2128 + C10221 * C2137 +
             C10225 * C2129 + C32907 * C2138) *
                C114 +
            (C10223 * C378 + C10220 * C392 + C10224 * C2136 + C10221 * C2146 +
             C10225 * C2139 + C32907 * C2147) *
                C32615) *
               C32936 +
           ((C10223 * C363 + C10220 * C379 + C10224 * C2127 + C10221 * C2135 +
             C10225 * C2130 + C32907 * C2140) *
                C114 +
            (C10223 * C380 + C10220 * C393 + C10224 * C2134 + C10221 * C2145 +
             C10225 * C2141 + C32907 * C2148) *
                C32615) *
               C32923 +
           ((C10223 * C364 + C10220 * C381 + C10224 * C2126 + C10221 * C2133 +
             C10225 * C2131 + C32907 * C2142) *
                C114 +
            (C10223 * C382 + C10220 * C394 + C10224 * C2132 + C10221 * C2144 +
             C10225 * C2143 + C32907 * C2149) *
                C32615) *
               C32893) *
              C356) *
         C32578 * C32566) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C10223 * C115 + C10220 * C122 + C10224 * C361 + C10221 * C376 +
            C10225 * C362 + C32907 * C377) *
               C857 +
           (C10223 * C123 + C10220 * C136 + C10224 * C375 + C10221 * C391 +
            C10225 * C378 + C32907 * C392) *
               C32939 +
           (C10223 * C256 + C10220 * C271 + C10224 * C721 + C10221 * C726 +
            C10225 * C1178 + C32907 * C1190) *
               C858 +
           (C10223 * C270 + C10220 * C286 + C10224 * C727 + C10221 * C736 +
            C10225 * C1191 + C32907 * C1205) *
               C32927 +
           (C10223 * C257 + C10220 * C272 + C10224 * C1177 + C10221 * C1189 +
            C10225 * C1179 + C32907 * C1192) *
               C859 +
           (C10223 * C273 + C10220 * C287 + C10224 * C1188 + C10221 * C1204 +
            C10225 * C1193 + C32907 * C1206) *
               C32904) *
              C32533 * C32592 * C32578 * C110 -
          ((C10225 * C1197 + C32907 * C1208 + C10224 * C1186 + C10221 * C1203 +
            C10223 * C275 + C10220 * C288) *
               C32904 +
           (C10225 * C1181 + C32907 * C1196 + C10224 * C1176 + C10221 * C1187 +
            C10223 * C258 + C10220 * C274) *
               C859 +
           (C10684 + C10685 + C10686) * C32927 +
           (C10687 + C10688 + C10689) * C858 +
           (C10268 + C10267 + C10266) * C32939 +
           (C10265 + C10264 + C10263) * C857) *
              C32533 * C32592 * C32578 * C111 +
          (C10283 * C857 + C10284 * C32939 + (C10683 + C10682 + C10681) * C858 +
           (C10680 + C10679 + C10678) * C32927 +
           (C10223 * C259 + C10220 * C276 + C10224 * C1175 + C10221 * C1185 +
            C10225 * C1183 + C32907 * C1200) *
               C859 +
           (C10223 * C277 + C10220 * C289 + C10224 * C1184 + C10221 * C1202 +
            C10225 * C1201 + C32907 * C1210) *
               C32904) *
              C32533 * C32592 * C32578 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C10223 * C115 + C10220 * C122 + C10224 * C361 + C10221 * C376 +
            C10225 * C362 + C32907 * C377) *
               C857 +
           (C10223 * C123 + C10220 * C136 + C10224 * C375 + C10221 * C391 +
            C10225 * C378 + C32907 * C392) *
               C32939 +
           (C11274 + C11275 + C11276) * C858 +
           (C11277 + C11278 + C11279) * C32927 + C11294 * C859 +
           C11295 * C32904) *
              C32533 * C32592 * C248 -
          ((C11286 + C11287 + C11288) * C32904 +
           (C11289 + C11290 + C11291) * C859 +
           (C11285 + C11284 + C11283) * C32927 +
           (C11282 + C11281 + C11280) * C858 +
           (C11279 + C11278 + C11277) * C32939 +
           (C11276 + C11275 + C11274) * C857) *
              C32533 * C32592 * C249 +
          (C11294 * C857 + C11295 * C32939 + (C11291 + C11290 + C11289) * C858 +
           (C11288 + C11287 + C11286) * C32927 +
           (C10223 * C1014 + C10220 * C1023 + C10224 * C6402 + C10221 * C6406 +
            C10225 * C6404 + C32907 * C6409) *
               C859 +
           (C10223 * C1024 + C10220 * C1032 + C10224 * C6405 + C10221 * C6411 +
            C10225 * C6410 + C32907 * C6413) *
               C32904) *
              C32533 * C32592 * C250) *
         C32566) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C10223 * C115 + C10220 * C122 + C10224 * C361 + C10221 * C376 +
            C10225 * C362 + C32907 * C377) *
               C857 +
           (C10223 * C123 + C10220 * C136 + C10224 * C375 + C10221 * C391 +
            C10225 * C378 + C32907 * C392) *
               C32939 +
           (C11274 + C11275 + C11276) * C858 +
           (C11277 + C11278 + C11279) * C32927 + C11294 * C859 +
           C11295 * C32904) *
              C32533 * C354 -
          ((C10225 * C7081 + C32907 * C7087 + C10224 * C1193 + C10221 * C1206 +
            C10223 * C1188 + C10220 * C1204) *
               C32904 +
           (C10225 * C7078 + C32907 * C7082 + C10224 * C1179 + C10221 * C1192 +
            C10223 * C1177 + C10220 * C1189) *
               C859 +
           (C10225 * C2672 + C32907 * C2677 + C10224 * C1191 + C10221 * C1205 +
            C10223 * C727 + C10220 * C736) *
               C32927 +
           (C10225 * C2668 + C32907 * C2671 + C10224 * C1178 + C10221 * C1190 +
            C10223 * C721 + C10220 * C726) *
               C858 +
           (C10225 * C2136 + C32907 * C2146 + C10224 * C378 + C10221 * C392 +
            C10223 * C375 + C10220 * C391) *
               C32939 +
           (C10225 * C2128 + C32907 * C2137 + C10224 * C362 + C10221 * C377 +
            C10223 * C361 + C10220 * C376) *
               C857) *
              C32533 * C355 +
          ((C10223 * C362 + C10220 * C377 + C10224 * C2128 + C10221 * C2137 +
            C10225 * C2129 + C32907 * C2138) *
               C857 +
           (C10223 * C378 + C10220 * C392 + C10224 * C2136 + C10221 * C2146 +
            C10225 * C2139 + C32907 * C2147) *
               C32939 +
           (C10223 * C1178 + C10220 * C1190 + C10224 * C2668 + C10221 * C2671 +
            C10225 * C7079 + C32907 * C7083) *
               C858 +
           (C10223 * C1191 + C10220 * C1205 + C10224 * C2672 + C10221 * C2677 +
            C10225 * C7084 + C32907 * C7088) *
               C32927 +
           (C10223 * C1179 + C10220 * C1192 + C10224 * C7078 + C10221 * C7082 +
            C10225 * C7080 + C32907 * C7085) *
               C859 +
           (C10223 * C1193 + C10220 * C1206 + C10224 * C7081 + C10221 * C7087 +
            C10225 * C7086 + C32907 * C7089) *
               C32904) *
              C32533 * C356) *
         C32578 * C32566) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C11964 * C115 + C11959 * C122 + C11965 * C361 + C11960 * C376 +
            C11966 * C362 + C11961 * C377 + C11967 * C2128 + C11962 * C2137 +
            C11968 * C2129 + C11963 * C2138) *
               C114 +
           (C11964 * C123 + C11959 * C136 + C11965 * C375 + C11960 * C391 +
            C11966 * C378 + C11961 * C392 + C11967 * C2136 + C11962 * C2146 +
            C11968 * C2139 + C11963 * C2147) *
               C32615) *
              C32533 * C32592 * C32578 * C110 -
          ((C11968 * C2141 + C11963 * C2148 + C11967 * C2134 + C11962 * C2145 +
            C11966 * C380 + C11961 * C393 + C11965 * C373 + C11960 * C390 +
            C11964 * C125 + C11959 * C137) *
               C32615 +
           (C11968 * C2130 + C11963 * C2140 + C11967 * C2127 + C11962 * C2135 +
            C11966 * C363 + C11961 * C379 + C11965 * C360 + C11960 * C374 +
            C11964 * C116 + C11959 * C124) *
               C114) *
              C32533 * C32592 * C32578 * C111 +
          ((C11964 * C117 + C11959 * C126 + C11965 * C359 + C11960 * C372 +
            C11966 * C364 + C11961 * C381 + C11967 * C2126 + C11962 * C2133 +
            C11968 * C2131 + C11963 * C2142) *
               C114 +
           (C11964 * C127 + C11959 * C138 + C11965 * C371 + C11960 * C389 +
            C11966 * C382 + C11961 * C394 + C11967 * C2132 + C11962 * C2144 +
            C11968 * C2143 + C11963 * C2149) *
               C32615) *
              C32533 * C32592 * C32578 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C11964 * C115 + C11959 * C122 + C11965 * C361 + C11960 * C376 +
            C11966 * C362 + C11961 * C377 + C11967 * C2128 + C11962 * C2137 +
            C11968 * C2129 + C11963 * C2138) *
               C114 +
           (C11964 * C123 + C11959 * C136 + C11965 * C375 + C11960 * C391 +
            C11966 * C378 + C11961 * C392 + C11967 * C2136 + C11962 * C2146 +
            C11968 * C2139 + C11963 * C2147) *
               C32615) *
              C32533 * C32592 * C248 -
          ((C11968 * C7084 + C11963 * C7088 + C11967 * C2672 + C11962 * C2677 +
            C11966 * C1191 + C11961 * C1205 + C11965 * C727 + C11960 * C736 +
            C11964 * C270 + C11959 * C286) *
               C32615 +
           (C11968 * C7079 + C11963 * C7083 + C11967 * C2668 + C11962 * C2671 +
            C11966 * C1178 + C11961 * C1190 + C11965 * C721 + C11960 * C726 +
            C11964 * C256 + C11959 * C271) *
               C114) *
              C32533 * C32592 * C249 +
          ((C11964 * C257 + C11959 * C272 + C11965 * C1177 + C11960 * C1189 +
            C11966 * C1179 + C11961 * C1192 + C11967 * C7078 + C11962 * C7082 +
            C11968 * C7080 + C11963 * C7085) *
               C114 +
           (C11964 * C273 + C11959 * C287 + C11965 * C1188 + C11960 * C1204 +
            C11966 * C1193 + C11961 * C1206 + C11967 * C7081 + C11962 * C7087 +
            C11968 * C7086 + C11963 * C7089) *
               C32615) *
              C32533 * C32592 * C250) *
         C32566) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C11964 * C115 + C11959 * C122 + C11965 * C361 + C11960 * C376 +
            C11966 * C362 + C11961 * C377 + C11967 * C2128 + C11962 * C2137 +
            C11968 * C2129 + C11963 * C2138) *
               C114 +
           (C11964 * C123 + C11959 * C136 + C11965 * C375 + C11960 * C391 +
            C11966 * C378 + C11961 * C392 + C11967 * C2136 + C11962 * C2146 +
            C11968 * C2139 + C11963 * C2147) *
               C32615) *
              C32533 * C354 -
          ((C11968 * C12095 + C11963 * C12099 + C11967 * C2139 +
            C11962 * C2147 + C11966 * C2136 + C11961 * C2146 + C11965 * C378 +
            C11960 * C392 + C11964 * C375 + C11959 * C391) *
               C32615 +
           (C11968 * C12093 + C11963 * C12096 + C11967 * C2129 +
            C11962 * C2138 + C11966 * C2128 + C11961 * C2137 + C11965 * C362 +
            C11960 * C377 + C11964 * C361 + C11959 * C376) *
               C114) *
              C32533 * C355 +
          ((C11964 * C362 + C11959 * C377 + C11965 * C2128 + C11960 * C2137 +
            C11966 * C2129 + C11961 * C2138 + C11967 * C12093 +
            C11962 * C12096 + C11968 * C12094 + C11963 * C12097) *
               C114 +
           (C11964 * C378 + C11959 * C392 + C11965 * C2136 + C11960 * C2146 +
            C11966 * C2139 + C11961 * C2147 + C11967 * C12095 +
            C11962 * C12099 + C11968 * C12098 + C11963 * C12100) *
               C32615) *
              C32533 * C356) *
         C32578 * C32566) /
            (p * q * std::sqrt(p + q));
    d2ee[63] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C113 * C115 + C32632 * C122) * C114 +
                 (C113 * C123 + C32632 * C136) * C32615) *
                    C103 +
                (C174 + C175) * C104 + C184 * C105 + C185 * C106 +
                C186 * C107) *
                   C601 -
               ((C632 + C633) * C107 + (C634 + C635) * C106 +
                (C636 + C637) * C105 + (C638 + C639) * C104 +
                ((C113 * C375 + C32632 * C391) * C32615 +
                 (C113 * C361 + C32632 * C376) * C114) *
                    C103) *
                   C602) *
                  C32578 * C481 +
              (((C639 + C638) * C103 + (C637 + C636) * C104 +
                (C635 + C634) * C105 + (C633 + C632) * C106 +
                ((C113 * C603 + C32632 * C604) * C114 +
                 (C113 * C605 + C32632 * C606) * C32615) *
                    C107) *
                   C602 -
               ((C182 + C183) * C107 + (C181 + C180) * C106 +
                (C179 + C178) * C105 + (C177 + C176) * C104 +
                (C175 + C174) * C103) *
                   C601) *
                  C32578 * C482) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C113 * C115 + C32632 * C122) * C857 +
                 (C113 * C123 + C32632 * C136) * C32939 + C1056 * C858 +
                 C1057 * C32927 + C1058 * C859 + C1059 * C32904) *
                    C854 +
                (C861 + C862 + C863 + C864 + C892 + C893) * C855 +
                C901 * C32893) *
                   C601 -
               ((C1552 + C1553 + C1554 + C1555 + C1532 + C1533) * C32893 +
                (C1556 + C1557 + C1558 + C1559 + C1542 + C1543) * C855 +
                ((C113 * C1188 + C32632 * C1204) * C32904 +
                 (C113 * C1177 + C32632 * C1189) * C859 +
                 (C113 * C727 + C32632 * C736) * C32927 +
                 (C113 * C721 + C32632 * C726) * C858 +
                 (C113 * C375 + C32632 * C391) * C32939 +
                 (C113 * C361 + C32632 * C376) * C857) *
                    C854) *
                   C602) *
                  C32578 * C481 +
              (((C1543 + C1542 + C1559 + C1558 + C1557 + C1556) * C854 +
                (C1533 + C1532 + C1555 + C1554 + C1553 + C1552) * C855 +
                (C627 * C857 + C626 * C32939 +
                 (C113 * C724 + C32632 * C732) * C858 +
                 (C113 * C733 + C32632 * C739) * C32927 +
                 (C113 * C1519 + C32632 * C1520) * C859 +
                 (C113 * C1521 + C32632 * C1522) * C32904) *
                    C32893) *
                   C602 -
               ((C897 + C898 + C881 + C882 + C883 + C884) * C32893 +
                (C896 + C895 + C872 + C871 + C870 + C869) * C855 +
                (C893 + C892 + C864 + C863 + C862 + C861) * C854) *
                   C601) *
                  C32578 * C482)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C1842 * C115 + C32940 * C122 + C1843 * C361 + C32929 * C376 +
              C1844 * C362 + C32907 * C377) *
                 C114 +
             (C1842 * C123 + C32940 * C136 + C1843 * C375 + C32929 * C391 +
              C1844 * C378 + C32907 * C392) *
                 C32615) *
                C854 +
            ((C1882 + C1883 + C1884) * C114 +
             (C1885 + C1886 + C1887) * C32615) *
                C855 +
            C1906 * C32893) *
               C601 -
           (((C2511 + C2512 + C2513) * C32615 +
             (C2514 + C2515 + C2516) * C114) *
                C32893 +
            ((C2517 + C2518 + C2519) * C32615 +
             (C2520 + C2521 + C2522) * C114) *
                C855 +
            ((C1844 * C2136 + C32907 * C2146 + C1843 * C378 + C32929 * C392 +
              C1842 * C375 + C32940 * C391) *
                 C32615 +
             (C1844 * C2128 + C32907 * C2137 + C1843 * C362 + C32929 * C377 +
              C1842 * C361 + C32940 * C376) *
                 C114) *
                C854) *
               C602) *
              C32578 * C481 +
          ((((C2522 + C2521 + C2520) * C114 +
             (C2519 + C2518 + C2517) * C32615) *
                C854 +
            ((C2516 + C2515 + C2514) * C114 +
             (C2513 + C2512 + C2511) * C32615) *
                C855 +
            ((C1842 * C358 + C32940 * C370 + C1843 * C365 + C32929 * C383 +
              C1844 * C2482 + C32907 * C2483) *
                 C114 +
             (C1842 * C369 + C32940 * C388 + C1843 * C384 + C32929 * C395 +
              C1844 * C2484 + C32907 * C2485) *
                 C32615) *
                C32893) *
               C602 -
           (((C1894 + C1895 + C1896) * C32615 +
             (C1897 + C1898 + C1899) * C114) *
                C32893 +
            ((C1893 + C1892 + C1891) * C32615 +
             (C1890 + C1889 + C1888) * C114) *
                C855 +
            ((C1887 + C1886 + C1885) * C32615 +
             (C1884 + C1883 + C1882) * C114) *
                C854) *
               C601) *
              C32578 * C482)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C32632 * C122) * C5477 +
             (C113 * C123 + C32632 * C136) * C5471 + C1056 * C5478 +
             C1057 * C5472 + C1058 * C5479 + C1059 * C32904) *
                C32936 +
            (C5481 + C5482 + C5483 + C5484 + C5485 + C5486) * C32923 +
            C5503 * C32893) *
               C601 -
           ((C6028 + C6029 + C6030 + C6031 + C6032 + C6033) * C32893 +
            (C6034 + C6035 + C6036 + C6037 + C6038 + C6039) * C32923 +
            (C1726 * C32904 + C1727 * C5479 + C1728 * C5472 + C1729 * C5478 +
             (C113 * C375 + C32632 * C391) * C5471 +
             (C113 * C361 + C32632 * C376) * C5477) *
                C32936) *
               C602) *
              C32578 * C481 +
          (((C6039 + C6038 + C6037 + C6036 + C6035 + C6034) * C32936 +
            (C6033 + C6032 + C6031 + C6030 + C6029 + C6028) * C32923 +
            (C627 * C5477 + C626 * C5471 + C3292 * C5478 + C3291 * C5472 +
             (C113 * C1519 + C32632 * C1520) * C5479 +
             (C113 * C1521 + C32632 * C1522) * C32904) *
                C32893) *
               C602 -
           ((C5493 + C5494 + C5495 + C5496 + C5497 + C5498) * C32893 +
            (C5492 + C5491 + C5490 + C5489 + C5488 + C5487) * C32923 +
            (C5486 + C5485 + C5484 + C5483 + C5482 + C5481) * C32936) *
               C601) *
              C32578 * C482)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C32632 * C122) * C6253 +
            (C113 * C123 + C32632 * C136) * C6247 + C1056 * C6254 +
            C1057 * C6248 + C1058 * C6255 + C1059 * C6249 + C1065 * C6256 +
            C1064 * C6250 + C6337 * C6257 + C6338 * C6251) *
               C32533 * C601 -
           ((C113 * C6405 + C32632 * C6411) * C6251 +
            (C113 * C6402 + C32632 * C6406) * C6257 +
            (C113 * C1709 + C32632 * C1714) * C6250 +
            (C113 * C1705 + C32632 * C1708) * C6256 + C1726 * C6249 +
            C1727 * C6255 + C1728 * C6248 + C1729 * C6254 +
            (C113 * C375 + C32632 * C391) * C6247 +
            (C113 * C361 + C32632 * C376) * C6253) *
               C32533 * C602) *
              C32578 * C481 +
          ((C631 * C6253 + C630 * C6247 + C1551 * C6254 + C1550 * C6248 +
            C1549 * C6255 + C1548 * C6249 +
            (C113 * C1706 + C32632 * C1710) * C6256 +
            (C113 * C1711 + C32632 * C1715) * C6250 +
            (C113 * C6588 + C32632 * C6589) * C6257 +
            (C113 * C6590 + C32632 * C6591) * C6251) *
               C32533 * C602 -
           (C6506 * C6251 + C6505 * C6257 + C1062 * C6250 + C1063 * C6256 +
            C886 * C6249 + C885 * C6255 + C510 * C6248 + C511 * C6254 +
            C165 * C6247 + C164 * C6253) *
               C32533 * C601) *
              C32578 * C482)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C1842 * C115 + C32940 * C122 + C1843 * C361 + C32929 * C376 +
             C1844 * C362 + C32907 * C377) *
                C5477 +
            (C1842 * C123 + C32940 * C136 + C1843 * C375 + C32929 * C391 +
             C1844 * C378 + C32907 * C392) *
                C5471 +
            (C6947 + C6948 + C6949) * C5478 + (C6950 + C6951 + C6952) * C5472 +
            C6967 * C5479 + C6968 * C32904) *
               C32533 * C601 -
           ((C1844 * C7081 + C32907 * C7087 + C1843 * C1193 + C32929 * C1206 +
             C1842 * C1188 + C32940 * C1204) *
                C32904 +
            (C1844 * C7078 + C32907 * C7082 + C1843 * C1179 + C32929 * C1192 +
             C1842 * C1177 + C32940 * C1189) *
                C5479 +
            (C1844 * C2672 + C32907 * C2677 + C1843 * C1191 + C32929 * C1205 +
             C1842 * C727 + C32940 * C736) *
                C5472 +
            (C1844 * C2668 + C32907 * C2671 + C1843 * C1178 + C32929 * C1190 +
             C1842 * C721 + C32940 * C726) *
                C5478 +
            (C1844 * C2136 + C32907 * C2146 + C1843 * C378 + C32929 * C392 +
             C1842 * C375 + C32940 * C391) *
                C5471 +
            (C1844 * C2128 + C32907 * C2137 + C1843 * C362 + C32929 * C377 +
             C1842 * C361 + C32940 * C376) *
                C5477) *
               C32533 * C602) *
              C32578 * C481 +
          (((C2522 + C2521 + C2520) * C5477 + (C2519 + C2518 + C2517) * C5471 +
            (C1842 * C722 + C32940 * C728 + C1843 * C1180 + C32929 * C1194 +
             C1844 * C2669 + C32907 * C2673) *
                C5478 +
            (C1842 * C729 + C32940 * C737 + C1843 * C1195 + C32929 * C1207 +
             C1844 * C2674 + C32907 * C2678) *
                C5472 +
            (C1842 * C1176 + C32940 * C1187 + C1843 * C1181 + C32929 * C1196 +
             C1844 * C7404 + C32907 * C7405) *
                C5479 +
            (C1842 * C1186 + C32940 * C1203 + C1843 * C1197 + C32929 * C1208 +
             C1844 * C7406 + C32907 * C7407) *
                C32904) *
               C32533 * C602 -
           ((C7258 + C7257 + C7256) * C32904 + (C7255 + C7254 + C7253) * C5479 +
            (C2331 + C2332 + C2333) * C5472 + (C2334 + C2335 + C2336) * C5478 +
            (C1887 + C1886 + C1885) * C5471 + (C1884 + C1883 + C1882) * C5477) *
               C32533 * C601) *
              C32578 * C482)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C10223 * C115 + C10220 * C122 + C10224 * C361 + C10221 * C376 +
              C10225 * C362 + C32907 * C377) *
                 C114 +
             (C10223 * C123 + C10220 * C136 + C10224 * C375 + C10221 * C391 +
              C10225 * C378 + C32907 * C392) *
                 C32615) *
                C32936 +
            ((C10263 + C10264 + C10265) * C114 +
             (C10266 + C10267 + C10268) * C32615) *
                C32923 +
            C10287 * C32893) *
               C601 -
           (((C10860 + C10861 + C10862) * C32615 +
             (C10863 + C10864 + C10865) * C114) *
                C32893 +
            ((C10866 + C10867 + C10868) * C32615 +
             (C10869 + C10870 + C10871) * C114) *
                C32923 +
            ((C10225 * C2136 + C32907 * C2146 + C10224 * C378 + C10221 * C392 +
              C10223 * C375 + C10220 * C391) *
                 C32615 +
             (C10225 * C2128 + C32907 * C2137 + C10224 * C362 + C10221 * C377 +
              C10223 * C361 + C10220 * C376) *
                 C114) *
                C32936) *
               C602) *
              C32578 * C481 +
          ((((C10871 + C10870 + C10869) * C114 +
             (C10868 + C10867 + C10866) * C32615) *
                C32936 +
            ((C10865 + C10864 + C10863) * C114 +
             (C10862 + C10861 + C10860) * C32615) *
                C32923 +
            ((C10223 * C358 + C10220 * C370 + C10224 * C365 + C10221 * C383 +
              C10225 * C2482 + C32907 * C2483) *
                 C114 +
             (C10223 * C369 + C10220 * C388 + C10224 * C384 + C10221 * C395 +
              C10225 * C2484 + C32907 * C2485) *
                 C32615) *
                C32893) *
               C602 -
           (((C10275 + C10276 + C10277) * C32615 +
             (C10278 + C10279 + C10280) * C114) *
                C32893 +
            ((C10274 + C10273 + C10272) * C32615 +
             (C10271 + C10270 + C10269) * C114) *
                C32923 +
            ((C10268 + C10267 + C10266) * C32615 +
             (C10265 + C10264 + C10263) * C114) *
                C32936) *
               C601) *
              C32578 * C482)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C10223 * C115 + C10220 * C122 + C10224 * C361 + C10221 * C376 +
             C10225 * C362 + C32907 * C377) *
                C857 +
            (C10223 * C123 + C10220 * C136 + C10224 * C375 + C10221 * C391 +
             C10225 * C378 + C32907 * C392) *
                C32939 +
            (C11274 + C11275 + C11276) * C858 +
            (C11277 + C11278 + C11279) * C32927 + C11294 * C859 +
            C11295 * C32904) *
               C32533 * C601 -
           ((C10225 * C7081 + C32907 * C7087 + C10224 * C1193 + C10221 * C1206 +
             C10223 * C1188 + C10220 * C1204) *
                C32904 +
            (C10225 * C7078 + C32907 * C7082 + C10224 * C1179 + C10221 * C1192 +
             C10223 * C1177 + C10220 * C1189) *
                C859 +
            (C10225 * C2672 + C32907 * C2677 + C10224 * C1191 + C10221 * C1205 +
             C10223 * C727 + C10220 * C736) *
                C32927 +
            (C10225 * C2668 + C32907 * C2671 + C10224 * C1178 + C10221 * C1190 +
             C10223 * C721 + C10220 * C726) *
                C858 +
            (C10225 * C2136 + C32907 * C2146 + C10224 * C378 + C10221 * C392 +
             C10223 * C375 + C10220 * C391) *
                C32939 +
            (C10225 * C2128 + C32907 * C2137 + C10224 * C362 + C10221 * C377 +
             C10223 * C361 + C10220 * C376) *
                C857) *
               C32533 * C602) *
              C32578 * C481 +
          (((C10871 + C10870 + C10869) * C857 +
            (C10868 + C10867 + C10866) * C32939 +
            (C10223 * C722 + C10220 * C728 + C10224 * C1180 + C10221 * C1194 +
             C10225 * C2669 + C32907 * C2673) *
                C858 +
            (C10223 * C729 + C10220 * C737 + C10224 * C1195 + C10221 * C1207 +
             C10225 * C2674 + C32907 * C2678) *
                C32927 +
            (C10223 * C1176 + C10220 * C1187 + C10224 * C1181 + C10221 * C1196 +
             C10225 * C7404 + C32907 * C7405) *
                C859 +
            (C10223 * C1186 + C10220 * C1203 + C10224 * C1197 + C10221 * C1208 +
             C10225 * C7406 + C32907 * C7407) *
                C32904) *
               C32533 * C602 -
           ((C11569 + C11568 + C11567) * C32904 +
            (C11566 + C11565 + C11564) * C859 +
            (C10684 + C10685 + C10686) * C32927 +
            (C10687 + C10688 + C10689) * C858 +
            (C10268 + C10267 + C10266) * C32939 +
            (C10265 + C10264 + C10263) * C857) *
               C32533 * C601) *
              C32578 * C482)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C11964 * C115 + C11959 * C122 + C11965 * C361 + C11960 * C376 +
             C11966 * C362 + C11961 * C377 + C11967 * C2128 + C11962 * C2137 +
             C11968 * C2129 + C11963 * C2138) *
                C114 +
            (C11964 * C123 + C11959 * C136 + C11965 * C375 + C11960 * C391 +
             C11966 * C378 + C11961 * C392 + C11967 * C2136 + C11962 * C2146 +
             C11968 * C2139 + C11963 * C2147) *
                C32615) *
               C32533 * C601 -
           ((C11968 * C12095 + C11963 * C12099 + C11967 * C2139 +
             C11962 * C2147 + C11966 * C2136 + C11961 * C2146 + C11965 * C378 +
             C11960 * C392 + C11964 * C375 + C11959 * C391) *
                C32615 +
            (C11968 * C12093 + C11963 * C12096 + C11967 * C2129 +
             C11962 * C2138 + C11966 * C2128 + C11961 * C2137 + C11965 * C362 +
             C11960 * C377 + C11964 * C361 + C11959 * C376) *
                C114) *
               C32533 * C602) *
              C32578 * C481 +
          (((C11964 * C360 + C11959 * C374 + C11965 * C363 + C11960 * C379 +
             C11966 * C2127 + C11961 * C2135 + C11967 * C2130 + C11962 * C2140 +
             C11968 * C12269 + C11963 * C12270) *
                C114 +
            (C11964 * C373 + C11959 * C390 + C11965 * C380 + C11960 * C393 +
             C11966 * C2134 + C11961 * C2145 + C11967 * C2141 + C11962 * C2148 +
             C11968 * C12271 + C11963 * C12272) *
                C32615) *
               C32533 * C602 -
           ((C11968 * C2141 + C11963 * C2148 + C11967 * C2134 + C11962 * C2145 +
             C11966 * C380 + C11961 * C393 + C11965 * C373 + C11960 * C390 +
             C11964 * C125 + C11959 * C137) *
                C32615 +
            (C11968 * C2130 + C11963 * C2140 + C11967 * C2127 + C11962 * C2135 +
             C11966 * C363 + C11961 * C379 + C11965 * C360 + C11960 * C374 +
             C11964 * C116 + C11959 * C124) *
                C114) *
               C32533 * C601) *
              C32578 * C482)) /
            (p * q * std::sqrt(p + q));
    d2ee[64] +=
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C32632 * C122) * C114 +
            (C113 * C123 + C32632 * C136) * C32615) *
               C103 +
           (C174 + C175) * C104 + C184 * C105 + C185 * C106 + C186 * C107) *
              C32592 * C32578 * C110 -
          ((C182 + C183) * C107 + (C181 + C180) * C106 + (C179 + C178) * C105 +
           (C177 + C176) * C104 + (C175 + C174) * C103) *
              C32592 * C32578 * C111 +
          (C184 * C103 + C185 * C104 + C186 * C105 + (C183 + C182) * C106 +
           ((C113 * C121 + C32632 * C134) * C114 +
            (C113 * C135 + C32632 * C142) * C32615) *
               C107) *
              C32592 * C32578 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C32632 * C122) * C114 +
            (C113 * C123 + C32632 * C136) * C32615) *
               C103 +
           (C174 + C175) * C104 + C184 * C105 + C185 * C106 + C186 * C107) *
              C32592 * C248 -
          (((C113 * C262 + C32632 * C282) * C32615 +
            (C113 * C252 + C32632 * C263) * C114) *
               C107 +
           ((C113 * C264 + C32632 * C283) * C32615 +
            (C113 * C253 + C32632 * C265) * C114) *
               C106 +
           ((C113 * C266 + C32632 * C284) * C32615 +
            (C113 * C254 + C32632 * C267) * C114) *
               C105 +
           ((C113 * C268 + C32632 * C285) * C32615 +
            (C113 * C255 + C32632 * C269) * C114) *
               C104 +
           ((C113 * C270 + C32632 * C286) * C32615 +
            (C113 * C256 + C32632 * C271) * C114) *
               C103) *
              C32592 * C249 +
          (((C113 * C257 + C32632 * C272) * C114 +
            (C113 * C273 + C32632 * C287) * C32615) *
               C103 +
           ((C113 * C258 + C32632 * C274) * C114 +
            (C113 * C275 + C32632 * C288) * C32615) *
               C104 +
           ((C113 * C259 + C32632 * C276) * C114 +
            (C113 * C277 + C32632 * C289) * C32615) *
               C105 +
           ((C113 * C260 + C32632 * C278) * C114 +
            (C113 * C279 + C32632 * C290) * C32615) *
               C106 +
           ((C113 * C261 + C32632 * C280) * C114 +
            (C113 * C281 + C32632 * C291) * C32615) *
               C107) *
              C32592 * C250) *
         C32566) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C32632 * C122) * C857 +
            (C113 * C123 + C32632 * C136) * C32939 +
            (C113 * C256 + C32632 * C271) * C858 +
            (C113 * C270 + C32632 * C286) * C32927 +
            (C113 * C257 + C32632 * C272) * C859 +
            (C113 * C273 + C32632 * C287) * C32904) *
               C854 +
           (C861 + C862 + C863 + C864 + C892 + C893) * C855 + C901 * C32893) *
              C32592 * C32578 * C110 -
          ((C897 + C898 + C881 + C882 + C883 + C884) * C32893 +
           (C896 + C895 + C872 + C871 + C870 + C869) * C855 +
           (C893 + C892 + C864 + C863 + C862 + C861) * C854) *
              C32592 * C32578 * C111 +
          (C901 * C854 + (C884 + C883 + C882 + C881 + C898 + C897) * C855 +
           (C170 * C857 + C171 * C32939 + C505 * C858 + C504 * C32927 +
            (C113 * C261 + C32632 * C280) * C859 +
            (C113 * C281 + C32632 * C291) * C32904) *
               C32893) *
              C32592 * C32578 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C32632 * C122) * C857 +
            (C113 * C123 + C32632 * C136) * C32939 + C1056 * C858 +
            C1057 * C32927 + C1058 * C859 + C1059 * C32904) *
               C854 +
           (C861 + C862 + C863 + C864 + C892 + C893) * C855 + C901 * C32893) *
              C32592 * C248 -
          ((C1060 * C32904 + C1061 * C859 + C889 * C32927 + C888 * C858 +
            C508 * C32939 + C509 * C857) *
               C32893 +
           (C1062 * C32904 + C1063 * C859 + C886 * C32927 + C885 * C858 +
            C510 * C32939 + C511 * C857) *
               C855 +
           (C1064 * C32904 + C1065 * C859 + C1059 * C32927 + C1058 * C858 +
            C1057 * C32939 + C1056 * C857) *
               C854) *
              C32592 * C249 +
          ((C1058 * C857 + C1059 * C32939 + C1065 * C858 + C1064 * C32927 +
            (C113 * C1014 + C32632 * C1023) * C859 +
            (C113 * C1024 + C32632 * C1032) * C32904) *
               C854 +
           (C885 * C857 + C886 * C32939 + C1063 * C858 + C1062 * C32927 +
            (C113 * C1015 + C32632 * C1025) * C859 +
            (C113 * C1026 + C32632 * C1033) * C32904) *
               C855 +
           (C888 * C857 + C889 * C32939 + C1061 * C858 + C1060 * C32927 +
            (C113 * C1016 + C32632 * C1027) * C859 +
            (C113 * C1028 + C32632 * C1034) * C32904) *
               C32893) *
              C32592 * C250) *
         C32566) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C1842 * C115 + C32940 * C122 + C1843 * C361 + C32929 * C376 +
             C1844 * C362 + C32907 * C377) *
                C114 +
            (C1842 * C123 + C32940 * C136 + C1843 * C375 + C32929 * C391 +
             C1844 * C378 + C32907 * C392) *
                C32615) *
               C854 +
           ((C1882 + C1883 + C1884) * C114 + (C1885 + C1886 + C1887) * C32615) *
               C855 +
           C1906 * C32893) *
              C32592 * C32578 * C110 -
          (((C1894 + C1895 + C1896) * C32615 + (C1897 + C1898 + C1899) * C114) *
               C32893 +
           ((C1893 + C1892 + C1891) * C32615 + (C1890 + C1889 + C1888) * C114) *
               C855 +
           ((C1887 + C1886 + C1885) * C32615 + (C1884 + C1883 + C1882) * C114) *
               C854) *
              C32592 * C32578 * C111 +
          (C1906 * C854 +
           ((C1899 + C1898 + C1897) * C114 + (C1896 + C1895 + C1894) * C32615) *
               C855 +
           ((C1842 * C119 + C32940 * C130 + C1843 * C357 + C32929 * C368 +
             C1844 * C366 + C32907 * C385) *
                C114 +
            (C1842 * C131 + C32940 * C140 + C1843 * C367 + C32929 * C387 +
             C1844 * C386 + C32907 * C396) *
                C32615) *
               C32893) *
              C32592 * C32578 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C1842 * C115 + C32940 * C122 + C1843 * C361 + C32929 * C376 +
             C1844 * C362 + C32907 * C377) *
                C114 +
            (C1842 * C123 + C32940 * C136 + C1843 * C375 + C32929 * C391 +
             C1844 * C378 + C32907 * C392) *
                C32615) *
               C854 +
           ((C1882 + C1883 + C1884) * C114 + (C1885 + C1886 + C1887) * C32615) *
               C855 +
           C1906 * C32893) *
              C32592 * C248 -
          (((C1844 * C1199 + C32907 * C1209 + C1843 * C731 + C32929 * C738 +
             C1842 * C266 + C32940 * C284) *
                C32615 +
            (C1844 * C1182 + C32907 * C1198 + C1843 * C723 + C32929 * C730 +
             C1842 * C254 + C32940 * C267) *
                C114) *
               C32893 +
           ((C1844 * C1195 + C32907 * C1207 + C1843 * C729 + C32929 * C737 +
             C1842 * C268 + C32940 * C285) *
                C32615 +
            (C1844 * C1180 + C32907 * C1194 + C1843 * C722 + C32929 * C728 +
             C1842 * C255 + C32940 * C269) *
                C114) *
               C855 +
           ((C1844 * C1191 + C32907 * C1205 + C1843 * C727 + C32929 * C736 +
             C1842 * C270 + C32940 * C286) *
                C32615 +
            (C1844 * C1178 + C32907 * C1190 + C1843 * C721 + C32929 * C726 +
             C1842 * C256 + C32940 * C271) *
                C114) *
               C854) *
              C32592 * C249 +
          (((C1842 * C257 + C32940 * C272 + C1843 * C1177 + C32929 * C1189 +
             C1844 * C1179 + C32907 * C1192) *
                C114 +
            (C1842 * C273 + C32940 * C287 + C1843 * C1188 + C32929 * C1204 +
             C1844 * C1193 + C32907 * C1206) *
                C32615) *
               C854 +
           ((C1842 * C258 + C32940 * C274 + C1843 * C1176 + C32929 * C1187 +
             C1844 * C1181 + C32907 * C1196) *
                C114 +
            (C1842 * C275 + C32940 * C288 + C1843 * C1186 + C32929 * C1203 +
             C1844 * C1197 + C32907 * C1208) *
                C32615) *
               C855 +
           ((C1842 * C259 + C32940 * C276 + C1843 * C1175 + C32929 * C1185 +
             C1844 * C1183 + C32907 * C1200) *
                C114 +
            (C1842 * C277 + C32940 * C289 + C1843 * C1184 + C32929 * C1202 +
             C1844 * C1201 + C32907 * C1210) *
                C32615) *
               C32893) *
              C32592 * C250) *
         C32566) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C32632 * C122) * C5477 +
            (C113 * C123 + C32632 * C136) * C5471 + C1056 * C5478 +
            C1057 * C5472 + C1058 * C5479 + C1059 * C32904) *
               C32936 +
           (C5481 + C5482 + C5483 + C5484 + C5485 + C5486) * C32923 +
           C5503 * C32893) *
              C32592 * C32578 * C110 -
          ((C5493 + C5494 + C5495 + C5496 + C5497 + C5498) * C32893 +
           (C5492 + C5491 + C5490 + C5489 + C5488 + C5487) * C32923 +
           (C5486 + C5485 + C5484 + C5483 + C5482 + C5481) * C32936) *
              C32592 * C32578 * C111 +
          (C5503 * C32936 +
           (C5498 + C5497 + C5496 + C5495 + C5494 + C5493) * C32923 +
           (C170 * C5477 + C171 * C5471 + C505 * C5478 + C504 * C5472 +
            (C113 * C261 + C32632 * C280) * C5479 +
            (C113 * C281 + C32632 * C291) * C32904) *
               C32893) *
              C32592 * C32578 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C32632 * C122) * C5477 +
            (C113 * C123 + C32632 * C136) * C5471 + C1056 * C5478 +
            C1057 * C5472 + C1058 * C5479 + C1059 * C32904) *
               C32936 +
           (C5481 + C5482 + C5483 + C5484 + C5485 + C5486) * C32923 +
           C5503 * C32893) *
              C32592 * C248 -
          ((C1060 * C32904 + C1061 * C5479 + C889 * C5472 + C888 * C5478 +
            C508 * C5471 + C509 * C5477) *
               C32893 +
           (C1062 * C32904 + C1063 * C5479 + C886 * C5472 + C885 * C5478 +
            C510 * C5471 + C511 * C5477) *
               C32923 +
           (C1064 * C32904 + C1065 * C5479 + C1059 * C5472 + C1058 * C5478 +
            C1057 * C5471 + C1056 * C5477) *
               C32936) *
              C32592 * C249 +
          ((C1058 * C5477 + C1059 * C5471 + C1065 * C5478 + C1064 * C5472 +
            (C113 * C1014 + C32632 * C1023) * C5479 +
            (C113 * C1024 + C32632 * C1032) * C32904) *
               C32936 +
           (C885 * C5477 + C886 * C5471 + C1063 * C5478 + C1062 * C5472 +
            (C113 * C1015 + C32632 * C1025) * C5479 +
            (C113 * C1026 + C32632 * C1033) * C32904) *
               C32923 +
           (C888 * C5477 + C889 * C5471 + C1061 * C5478 + C1060 * C5472 +
            (C113 * C1016 + C32632 * C1027) * C5479 +
            (C113 * C1028 + C32632 * C1034) * C32904) *
               C32893) *
              C32592 * C250) *
         C32566) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C115 + C32632 * C122) * C6253 +
           (C113 * C123 + C32632 * C136) * C6247 + C1056 * C6254 +
           C1057 * C6248 + C1058 * C6255 + C1059 * C6249 + C1065 * C6256 +
           C1064 * C6250 + (C113 * C1014 + C32632 * C1023) * C6257 +
           (C113 * C1024 + C32632 * C1032) * C6251) *
              C32533 * C32592 * C32578 * C110 -
          ((C113 * C1026 + C32632 * C1033) * C6251 +
           (C113 * C1015 + C32632 * C1025) * C6257 + C1062 * C6250 +
           C1063 * C6256 + C886 * C6249 + C885 * C6255 + C510 * C6248 +
           C511 * C6254 + C165 * C6247 + C164 * C6253) *
              C32533 * C32592 * C32578 * C111 +
          (C166 * C6253 + C167 * C6247 + C509 * C6254 + C508 * C6248 +
           C888 * C6255 + C889 * C6249 + C1061 * C6256 + C1060 * C6250 +
           (C113 * C1016 + C32632 * C1027) * C6257 +
           (C113 * C1028 + C32632 * C1034) * C6251) *
              C32533 * C32592 * C32578 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C115 + C32632 * C122) * C6253 +
           (C113 * C123 + C32632 * C136) * C6247 + C1056 * C6254 +
           C1057 * C6248 + C1058 * C6255 + C1059 * C6249 + C1065 * C6256 +
           C1064 * C6250 + C6337 * C6257 + C6338 * C6251) *
              C32533 * C32592 * C248 -
          (C6339 * C6251 + C6340 * C6257 + C6338 * C6250 + C6337 * C6256 +
           C1064 * C6249 + C1065 * C6255 + C1059 * C6248 + C1058 * C6254 +
           C1057 * C6247 + C1056 * C6253) *
              C32533 * C32592 * C249 +
          (C1058 * C6253 + C1059 * C6247 + C1065 * C6254 + C1064 * C6248 +
           C6337 * C6255 + C6338 * C6249 + C6340 * C6256 + C6339 * C6250 +
           (C113 * C6321 + C32632 * C6324) * C6257 +
           (C113 * C6325 + C32632 * C6327) * C6251) *
              C32533 * C32592 * C250) *
         C32566) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C1842 * C115 + C32940 * C122 + C1843 * C361 + C32929 * C376 +
            C1844 * C362 + C32907 * C377) *
               C5477 +
           (C1842 * C123 + C32940 * C136 + C1843 * C375 + C32929 * C391 +
            C1844 * C378 + C32907 * C392) *
               C5471 +
           (C1842 * C256 + C32940 * C271 + C1843 * C721 + C32929 * C726 +
            C1844 * C1178 + C32907 * C1190) *
               C5478 +
           (C1842 * C270 + C32940 * C286 + C1843 * C727 + C32929 * C736 +
            C1844 * C1191 + C32907 * C1205) *
               C5472 +
           (C1842 * C257 + C32940 * C272 + C1843 * C1177 + C32929 * C1189 +
            C1844 * C1179 + C32907 * C1192) *
               C5479 +
           (C1842 * C273 + C32940 * C287 + C1843 * C1188 + C32929 * C1204 +
            C1844 * C1193 + C32907 * C1206) *
               C32904) *
              C32533 * C32592 * C32578 * C110 -
          ((C1844 * C1197 + C32907 * C1208 + C1843 * C1186 + C32929 * C1203 +
            C1842 * C275 + C32940 * C288) *
               C32904 +
           (C1844 * C1181 + C32907 * C1196 + C1843 * C1176 + C32929 * C1187 +
            C1842 * C258 + C32940 * C274) *
               C5479 +
           (C2331 + C2332 + C2333) * C5472 + (C2334 + C2335 + C2336) * C5478 +
           (C1887 + C1886 + C1885) * C5471 + (C1884 + C1883 + C1882) * C5477) *
              C32533 * C32592 * C32578 * C111 +
          (C1902 * C5477 + C1903 * C5471 + (C2330 + C2329 + C2328) * C5478 +
           (C2327 + C2326 + C2325) * C5472 +
           (C1842 * C259 + C32940 * C276 + C1843 * C1175 + C32929 * C1185 +
            C1844 * C1183 + C32907 * C1200) *
               C5479 +
           (C1842 * C277 + C32940 * C289 + C1843 * C1184 + C32929 * C1202 +
            C1844 * C1201 + C32907 * C1210) *
               C32904) *
              C32533 * C32592 * C32578 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C1842 * C115 + C32940 * C122 + C1843 * C361 + C32929 * C376 +
            C1844 * C362 + C32907 * C377) *
               C5477 +
           (C1842 * C123 + C32940 * C136 + C1843 * C375 + C32929 * C391 +
            C1844 * C378 + C32907 * C392) *
               C5471 +
           (C6947 + C6948 + C6949) * C5478 + (C6950 + C6951 + C6952) * C5472 +
           C6967 * C5479 + C6968 * C32904) *
              C32533 * C32592 * C248 -
          ((C6959 + C6960 + C6961) * C32904 + (C6962 + C6963 + C6964) * C5479 +
           (C6958 + C6957 + C6956) * C5472 + (C6955 + C6954 + C6953) * C5478 +
           (C6952 + C6951 + C6950) * C5471 + (C6949 + C6948 + C6947) * C5477) *
              C32533 * C32592 * C249 +
          (C6967 * C5477 + C6968 * C5471 + (C6964 + C6963 + C6962) * C5478 +
           (C6961 + C6960 + C6959) * C5472 +
           (C1842 * C1014 + C32940 * C1023 + C1843 * C6402 + C32929 * C6406 +
            C1844 * C6404 + C32907 * C6409) *
               C5479 +
           (C1842 * C1024 + C32940 * C1032 + C1843 * C6405 + C32929 * C6411 +
            C1844 * C6410 + C32907 * C6413) *
               C32904) *
              C32533 * C32592 * C250) *
         C32566) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C10223 * C115 + C10220 * C122 + C10224 * C361 + C10221 * C376 +
             C10225 * C362 + C32907 * C377) *
                C114 +
            (C10223 * C123 + C10220 * C136 + C10224 * C375 + C10221 * C391 +
             C10225 * C378 + C32907 * C392) *
                C32615) *
               C32936 +
           ((C10263 + C10264 + C10265) * C114 +
            (C10266 + C10267 + C10268) * C32615) *
               C32923 +
           C10287 * C32893) *
              C32592 * C32578 * C110 -
          (((C10275 + C10276 + C10277) * C32615 +
            (C10278 + C10279 + C10280) * C114) *
               C32893 +
           ((C10274 + C10273 + C10272) * C32615 +
            (C10271 + C10270 + C10269) * C114) *
               C32923 +
           ((C10268 + C10267 + C10266) * C32615 +
            (C10265 + C10264 + C10263) * C114) *
               C32936) *
              C32592 * C32578 * C111 +
          (C10287 * C32936 +
           ((C10280 + C10279 + C10278) * C114 +
            (C10277 + C10276 + C10275) * C32615) *
               C32923 +
           ((C10223 * C119 + C10220 * C130 + C10224 * C357 + C10221 * C368 +
             C10225 * C366 + C32907 * C385) *
                C114 +
            (C10223 * C131 + C10220 * C140 + C10224 * C367 + C10221 * C387 +
             C10225 * C386 + C32907 * C396) *
                C32615) *
               C32893) *
              C32592 * C32578 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C10223 * C115 + C10220 * C122 + C10224 * C361 + C10221 * C376 +
             C10225 * C362 + C32907 * C377) *
                C114 +
            (C10223 * C123 + C10220 * C136 + C10224 * C375 + C10221 * C391 +
             C10225 * C378 + C32907 * C392) *
                C32615) *
               C32936 +
           ((C10263 + C10264 + C10265) * C114 +
            (C10266 + C10267 + C10268) * C32615) *
               C32923 +
           C10287 * C32893) *
              C32592 * C248 -
          (((C10225 * C1199 + C32907 * C1209 + C10224 * C731 + C10221 * C738 +
             C10223 * C266 + C10220 * C284) *
                C32615 +
            (C10225 * C1182 + C32907 * C1198 + C10224 * C723 + C10221 * C730 +
             C10223 * C254 + C10220 * C267) *
                C114) *
               C32893 +
           ((C10225 * C1195 + C32907 * C1207 + C10224 * C729 + C10221 * C737 +
             C10223 * C268 + C10220 * C285) *
                C32615 +
            (C10225 * C1180 + C32907 * C1194 + C10224 * C722 + C10221 * C728 +
             C10223 * C255 + C10220 * C269) *
                C114) *
               C32923 +
           ((C10225 * C1191 + C32907 * C1205 + C10224 * C727 + C10221 * C736 +
             C10223 * C270 + C10220 * C286) *
                C32615 +
            (C10225 * C1178 + C32907 * C1190 + C10224 * C721 + C10221 * C726 +
             C10223 * C256 + C10220 * C271) *
                C114) *
               C32936) *
              C32592 * C249 +
          (((C10223 * C257 + C10220 * C272 + C10224 * C1177 + C10221 * C1189 +
             C10225 * C1179 + C32907 * C1192) *
                C114 +
            (C10223 * C273 + C10220 * C287 + C10224 * C1188 + C10221 * C1204 +
             C10225 * C1193 + C32907 * C1206) *
                C32615) *
               C32936 +
           ((C10223 * C258 + C10220 * C274 + C10224 * C1176 + C10221 * C1187 +
             C10225 * C1181 + C32907 * C1196) *
                C114 +
            (C10223 * C275 + C10220 * C288 + C10224 * C1186 + C10221 * C1203 +
             C10225 * C1197 + C32907 * C1208) *
                C32615) *
               C32923 +
           ((C10223 * C259 + C10220 * C276 + C10224 * C1175 + C10221 * C1185 +
             C10225 * C1183 + C32907 * C1200) *
                C114 +
            (C10223 * C277 + C10220 * C289 + C10224 * C1184 + C10221 * C1202 +
             C10225 * C1201 + C32907 * C1210) *
                C32615) *
               C32893) *
              C32592 * C250) *
         C32566) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C10223 * C115 + C10220 * C122 + C10224 * C361 + C10221 * C376 +
            C10225 * C362 + C32907 * C377) *
               C857 +
           (C10223 * C123 + C10220 * C136 + C10224 * C375 + C10221 * C391 +
            C10225 * C378 + C32907 * C392) *
               C32939 +
           (C10223 * C256 + C10220 * C271 + C10224 * C721 + C10221 * C726 +
            C10225 * C1178 + C32907 * C1190) *
               C858 +
           (C10223 * C270 + C10220 * C286 + C10224 * C727 + C10221 * C736 +
            C10225 * C1191 + C32907 * C1205) *
               C32927 +
           (C10223 * C257 + C10220 * C272 + C10224 * C1177 + C10221 * C1189 +
            C10225 * C1179 + C32907 * C1192) *
               C859 +
           (C10223 * C273 + C10220 * C287 + C10224 * C1188 + C10221 * C1204 +
            C10225 * C1193 + C32907 * C1206) *
               C32904) *
              C32533 * C32592 * C32578 * C110 -
          ((C10225 * C1197 + C32907 * C1208 + C10224 * C1186 + C10221 * C1203 +
            C10223 * C275 + C10220 * C288) *
               C32904 +
           (C10225 * C1181 + C32907 * C1196 + C10224 * C1176 + C10221 * C1187 +
            C10223 * C258 + C10220 * C274) *
               C859 +
           (C10684 + C10685 + C10686) * C32927 +
           (C10687 + C10688 + C10689) * C858 +
           (C10268 + C10267 + C10266) * C32939 +
           (C10265 + C10264 + C10263) * C857) *
              C32533 * C32592 * C32578 * C111 +
          (C10283 * C857 + C10284 * C32939 + (C10683 + C10682 + C10681) * C858 +
           (C10680 + C10679 + C10678) * C32927 +
           (C10223 * C259 + C10220 * C276 + C10224 * C1175 + C10221 * C1185 +
            C10225 * C1183 + C32907 * C1200) *
               C859 +
           (C10223 * C277 + C10220 * C289 + C10224 * C1184 + C10221 * C1202 +
            C10225 * C1201 + C32907 * C1210) *
               C32904) *
              C32533 * C32592 * C32578 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C10223 * C115 + C10220 * C122 + C10224 * C361 + C10221 * C376 +
            C10225 * C362 + C32907 * C377) *
               C857 +
           (C10223 * C123 + C10220 * C136 + C10224 * C375 + C10221 * C391 +
            C10225 * C378 + C32907 * C392) *
               C32939 +
           (C11274 + C11275 + C11276) * C858 +
           (C11277 + C11278 + C11279) * C32927 + C11294 * C859 +
           C11295 * C32904) *
              C32533 * C32592 * C248 -
          ((C11286 + C11287 + C11288) * C32904 +
           (C11289 + C11290 + C11291) * C859 +
           (C11285 + C11284 + C11283) * C32927 +
           (C11282 + C11281 + C11280) * C858 +
           (C11279 + C11278 + C11277) * C32939 +
           (C11276 + C11275 + C11274) * C857) *
              C32533 * C32592 * C249 +
          (C11294 * C857 + C11295 * C32939 + (C11291 + C11290 + C11289) * C858 +
           (C11288 + C11287 + C11286) * C32927 +
           (C10223 * C1014 + C10220 * C1023 + C10224 * C6402 + C10221 * C6406 +
            C10225 * C6404 + C32907 * C6409) *
               C859 +
           (C10223 * C1024 + C10220 * C1032 + C10224 * C6405 + C10221 * C6411 +
            C10225 * C6410 + C32907 * C6413) *
               C32904) *
              C32533 * C32592 * C250) *
         C32566) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C11964 * C115 + C11959 * C122 + C11965 * C361 + C11960 * C376 +
            C11966 * C362 + C11961 * C377 + C11967 * C2128 + C11962 * C2137 +
            C11968 * C2129 + C11963 * C2138) *
               C114 +
           (C11964 * C123 + C11959 * C136 + C11965 * C375 + C11960 * C391 +
            C11966 * C378 + C11961 * C392 + C11967 * C2136 + C11962 * C2146 +
            C11968 * C2139 + C11963 * C2147) *
               C32615) *
              C32533 * C32592 * C32578 * C110 -
          ((C11968 * C2141 + C11963 * C2148 + C11967 * C2134 + C11962 * C2145 +
            C11966 * C380 + C11961 * C393 + C11965 * C373 + C11960 * C390 +
            C11964 * C125 + C11959 * C137) *
               C32615 +
           (C11968 * C2130 + C11963 * C2140 + C11967 * C2127 + C11962 * C2135 +
            C11966 * C363 + C11961 * C379 + C11965 * C360 + C11960 * C374 +
            C11964 * C116 + C11959 * C124) *
               C114) *
              C32533 * C32592 * C32578 * C111 +
          ((C11964 * C117 + C11959 * C126 + C11965 * C359 + C11960 * C372 +
            C11966 * C364 + C11961 * C381 + C11967 * C2126 + C11962 * C2133 +
            C11968 * C2131 + C11963 * C2142) *
               C114 +
           (C11964 * C127 + C11959 * C138 + C11965 * C371 + C11960 * C389 +
            C11966 * C382 + C11961 * C394 + C11967 * C2132 + C11962 * C2144 +
            C11968 * C2143 + C11963 * C2149) *
               C32615) *
              C32533 * C32592 * C32578 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C11964 * C115 + C11959 * C122 + C11965 * C361 + C11960 * C376 +
            C11966 * C362 + C11961 * C377 + C11967 * C2128 + C11962 * C2137 +
            C11968 * C2129 + C11963 * C2138) *
               C114 +
           (C11964 * C123 + C11959 * C136 + C11965 * C375 + C11960 * C391 +
            C11966 * C378 + C11961 * C392 + C11967 * C2136 + C11962 * C2146 +
            C11968 * C2139 + C11963 * C2147) *
               C32615) *
              C32533 * C32592 * C248 -
          ((C11968 * C7084 + C11963 * C7088 + C11967 * C2672 + C11962 * C2677 +
            C11966 * C1191 + C11961 * C1205 + C11965 * C727 + C11960 * C736 +
            C11964 * C270 + C11959 * C286) *
               C32615 +
           (C11968 * C7079 + C11963 * C7083 + C11967 * C2668 + C11962 * C2671 +
            C11966 * C1178 + C11961 * C1190 + C11965 * C721 + C11960 * C726 +
            C11964 * C256 + C11959 * C271) *
               C114) *
              C32533 * C32592 * C249 +
          ((C11964 * C257 + C11959 * C272 + C11965 * C1177 + C11960 * C1189 +
            C11966 * C1179 + C11961 * C1192 + C11967 * C7078 + C11962 * C7082 +
            C11968 * C7080 + C11963 * C7085) *
               C114 +
           (C11964 * C273 + C11959 * C287 + C11965 * C1188 + C11960 * C1204 +
            C11966 * C1193 + C11961 * C1206 + C11967 * C7081 + C11962 * C7087 +
            C11968 * C7086 + C11963 * C7089) *
               C32615) *
              C32533 * C32592 * C250) *
         C32566) /
            (p * q * std::sqrt(p + q));
    d2ee[65] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C3524 * C115 + C32874 * C122 + C3525 * C361 + C32719 * C376) *
                 C5477 +
             (C3524 * C123 + C32874 * C136 + C3525 * C375 + C32719 * C391) *
                 C5471 +
             (C4576 + C4577) * C5478 + (C4578 + C4579) * C5472 + C8619 * C5479 +
             C8620 * C32904) *
                C32854 +
            ((C3559 + C3560) * C5477 + (C3561 + C3562) * C5471 + C4932 * C5478 +
             C4933 * C5472 + C8621 * C5479 + C8622 * C32904) *
                C32543) *
               C32592 * C479 -
           (((C8639 + C8640) * C32904 + (C8641 + C8642) * C5479 +
             C8987 * C5472 + C8988 * C5478 + C4936 * C5471 + C4937 * C5477) *
                C32543 +
            ((C8643 + C8644) * C32904 + (C8645 + C8646) * C5479 +
             (C4588 + C4589) * C5472 + (C4590 + C4591) * C5478 +
             (C4579 + C4578) * C5471 + (C4577 + C4576) * C5477) *
                C32854) *
               C32592 * C480) *
              C481 +
          (((C4932 * C5477 + C4933 * C5471 + C8621 * C5478 + C8622 * C5472 +
             (C8642 + C8641) * C5479 + (C8640 + C8639) * C32904) *
                C32854 +
            (C4391 * C5477 + C4392 * C5471 + (C4583 + C4582) * C5478 +
             (C4581 + C4580) * C5472 +
             (C3524 * C1011 + C32874 * C1018 + C3525 * C1707 + C32719 * C1712) *
                 C5479 +
             (C3524 * C1017 + C32874 * C1029 + C3525 * C1713 + C32719 * C1716) *
                 C32904) *
                C32543) *
               C32592 * C480 -
           (((C4580 + C4581) * C32904 + (C4582 + C4583) * C5479 +
             C4934 * C5472 + C4935 * C5478 + (C3566 + C3565) * C5471 +
             (C3564 + C3563) * C5477) *
                C32543 +
            (C8987 * C32904 + C8988 * C5479 + C4936 * C5472 + C4937 * C5478 +
             (C3562 + C3561) * C5471 + (C3560 + C3559) * C5477) *
                C32854) *
               C32592 * C479) *
              C482)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C3524 * C115 + C32874 * C122 + C3525 * C361 + C32719 * C376) *
                 C114 +
             (C3524 * C123 + C32874 * C136 + C3525 * C375 + C32719 * C391) *
                 C32615) *
                C2780 +
            ((C3559 + C3560) * C114 + (C3561 + C3562) * C32615) * C2781 +
            C3583 * C2782 + C3584 * C32908) *
               C32592 * C479 -
           (((C3935 + C3936) * C32615 + (C3937 + C3938) * C114) * C32908 +
            ((C3939 + C3940) * C32615 + (C3941 + C3942) * C114) * C2782 +
            ((C3943 + C3944) * C32615 + (C3945 + C3946) * C114) * C2781 +
            ((C3525 * C727 + C32719 * C736 + C3524 * C270 + C32874 * C286) *
                 C32615 +
             (C3525 * C721 + C32719 * C726 + C3524 * C256 + C32874 * C271) *
                 C114) *
                C2780) *
               C32592 * C480) *
              C481 +
          ((((C3946 + C3945) * C114 + (C3944 + C3943) * C32615) * C2780 +
            ((C3942 + C3941) * C114 + (C3940 + C3939) * C32615) * C2781 +
            ((C3938 + C3937) * C114 + (C3936 + C3935) * C32615) * C2782 +
            ((C3524 * C252 + C32874 * C263 + C3525 * C725 + C32719 * C734) *
                 C114 +
             (C3524 * C262 + C32874 * C282 + C3525 * C735 + C32719 * C740) *
                 C32615) *
                C32908) *
               C32592 * C480 -
           (((C3571 + C3572) * C32615 + (C3573 + C3574) * C114) * C32908 +
            ((C3570 + C3569) * C32615 + (C3568 + C3567) * C114) * C2782 +
            ((C3566 + C3565) * C32615 + (C3564 + C3563) * C114) * C2781 +
            ((C3562 + C3561) * C32615 + (C3560 + C3559) * C114) * C2780) *
               C32592 * C479) *
              C482)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C13507 * C115 + C13503 * C122 + C13508 * C361 + C13504 * C376 +
              C13509 * C362 + C13505 * C377 + C13510 * C2128 + C32920 * C2137) *
                 C114 +
             (C13507 * C123 + C13503 * C136 + C13508 * C375 + C13504 * C391 +
              C13509 * C378 + C13505 * C392 + C13510 * C2136 + C32920 * C2146) *
                 C32615) *
                C32854 +
            ((C13544 + C13545 + C13546 + C13547) * C114 +
             (C13548 + C13549 + C13550 + C13551) * C32615) *
                C32543) *
               C32592 * C479 -
           (((C13902 + C13903 + C13904 + C13905) * C32615 +
             (C13906 + C13907 + C13908 + C13909) * C114) *
                C32543 +
            ((C13510 * C2672 + C32920 * C2677 + C13509 * C1191 +
              C13505 * C1205 + C13508 * C727 + C13504 * C736 + C13507 * C270 +
              C13503 * C286) *
                 C32615 +
             (C13510 * C2668 + C32920 * C2671 + C13509 * C1178 +
              C13505 * C1190 + C13508 * C721 + C13504 * C726 + C13507 * C256 +
              C13503 * C271) *
                 C114) *
                C32854) *
               C32592 * C480) *
              C481 +
          ((((C13909 + C13908 + C13907 + C13906) * C114 +
             (C13905 + C13904 + C13903 + C13902) * C32615) *
                C32854 +
            ((C13507 * C254 + C13503 * C267 + C13508 * C723 + C13504 * C730 +
              C13509 * C1182 + C13505 * C1198 + C13510 * C2670 +
              C32920 * C2675) *
                 C114 +
             (C13507 * C266 + C13503 * C284 + C13508 * C731 + C13504 * C738 +
              C13509 * C1199 + C13505 * C1209 + C13510 * C2676 +
              C32920 * C2679) *
                 C32615) *
                C32543) *
               C32592 * C480 -
           (((C13552 + C13553 + C13554 + C13555) * C32615 +
             (C13556 + C13557 + C13558 + C13559) * C114) *
                C32543 +
            ((C13551 + C13550 + C13549 + C13548) * C32615 +
             (C13547 + C13546 + C13545 + C13544) * C114) *
                C32854) *
               C32592 * C479) *
              C482)) /
            (p * q * std::sqrt(p + q));
    d2ee[66] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C3524 * C115 + C32874 * C122 + C3525 * C361 + C32719 * C376) *
                 C5477 +
             (C3524 * C123 + C32874 * C136 + C3525 * C375 + C32719 * C391) *
                 C5471 +
             (C4576 + C4577) * C5478 + (C4578 + C4579) * C5472 + C8619 * C5479 +
             C8620 * C32904) *
                C32854 +
            ((C3559 + C3560) * C5477 + (C3561 + C3562) * C5471 + C4932 * C5478 +
             C4933 * C5472 + C8621 * C5479 + C8622 * C32904) *
                C32543) *
               C601 -
           (((C9191 + C9192) * C32904 + (C9193 + C9194) * C5479 +
             (C5152 + C5153) * C5472 + (C5154 + C5155) * C5478 +
             (C4109 + C4110) * C5471 + (C4111 + C4112) * C5477) *
                C32543 +
            ((C9397 + C9398) * C32904 + (C9399 + C9400) * C5479 +
             (C5358 + C5359) * C5472 + (C5360 + C5361) * C5478 +
             (C3525 * C378 + C32719 * C392 + C3524 * C375 + C32874 * C391) *
                 C5471 +
             (C3525 * C362 + C32719 * C377 + C3524 * C361 + C32874 * C376) *
                 C5477) *
                C32854) *
               C602) *
              C479 +
          ((((C5361 + C5360) * C5477 + (C5359 + C5358) * C5471 +
             (C9400 + C9399) * C5478 + (C9398 + C9397) * C5472 +
             (C3524 * C1705 + C32874 * C1708 + C3525 * C6403 + C32719 * C6407) *
                 C5479 +
             (C3524 * C1709 + C32874 * C1714 + C3525 * C6408 + C32719 * C6412) *
                 C32904) *
                C32854 +
            ((C5155 + C5154) * C5477 + (C5153 + C5152) * C5471 +
             (C9194 + C9193) * C5478 + (C9192 + C9191) * C5472 +
             (C3524 * C1706 + C32874 * C1710 + C3525 * C7236 + C32719 * C7237) *
                 C5479 +
             (C3524 * C1711 + C32874 * C1715 + C3525 * C7238 + C32719 * C7239) *
                 C32904) *
                C32543) *
               C602 -
           (((C8639 + C8640) * C32904 + (C8641 + C8642) * C5479 +
             C8987 * C5472 + C8988 * C5478 + C4936 * C5471 + C4937 * C5477) *
                C32543 +
            ((C8643 + C8644) * C32904 + (C8645 + C8646) * C5479 +
             (C4588 + C4589) * C5472 + (C4590 + C4591) * C5478 +
             (C4579 + C4578) * C5471 + (C4577 + C4576) * C5477) *
                C32854) *
               C601) *
              C480) *
         C32566) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C3524 * C115 + C32874 * C122 + C3525 * C361 + C32719 * C376) *
                 C114 +
             (C3524 * C123 + C32874 * C136 + C3525 * C375 + C32719 * C391) *
                 C32615) *
                C2780 +
            ((C3559 + C3560) * C114 + (C3561 + C3562) * C32615) * C2781 +
            C3583 * C2782 + C3584 * C32908) *
               C601 -
           (((C4101 + C4102) * C32615 + (C4103 + C4104) * C114) * C32908 +
            ((C4105 + C4106) * C32615 + (C4107 + C4108) * C114) * C2782 +
            ((C4109 + C4110) * C32615 + (C4111 + C4112) * C114) * C2781 +
            ((C3525 * C378 + C32719 * C392 + C3524 * C375 + C32874 * C391) *
                 C32615 +
             (C3525 * C362 + C32719 * C377 + C3524 * C361 + C32874 * C376) *
                 C114) *
                C2780) *
               C602) *
              C479 +
          ((((C3524 * C721 + C32874 * C726 + C3525 * C1178 + C32719 * C1190) *
                 C114 +
             (C3524 * C727 + C32874 * C736 + C3525 * C1191 + C32719 * C1205) *
                 C32615) *
                C2780 +
            ((C3524 * C722 + C32874 * C728 + C3525 * C1180 + C32719 * C1194) *
                 C114 +
             (C3524 * C729 + C32874 * C737 + C3525 * C1195 + C32719 * C1207) *
                 C32615) *
                C2781 +
            ((C3524 * C723 + C32874 * C730 + C3525 * C1182 + C32719 * C1198) *
                 C114 +
             (C3524 * C731 + C32874 * C738 + C3525 * C1199 + C32719 * C1209) *
                 C32615) *
                C2782 +
            ((C3524 * C724 + C32874 * C732 + C3525 * C2296 + C32719 * C2297) *
                 C114 +
             (C3524 * C733 + C32874 * C739 + C3525 * C2298 + C32719 * C2299) *
                 C32615) *
                C32908) *
               C602 -
           (((C3935 + C3936) * C32615 + (C3937 + C3938) * C114) * C32908 +
            ((C3939 + C3940) * C32615 + (C3941 + C3942) * C114) * C2782 +
            ((C3943 + C3944) * C32615 + (C3945 + C3946) * C114) * C2781 +
            ((C3525 * C727 + C32719 * C736 + C3524 * C270 + C32874 * C286) *
                 C32615 +
             (C3525 * C721 + C32719 * C726 + C3524 * C256 + C32874 * C271) *
                 C114) *
                C2780) *
               C601) *
              C480) *
         C32566) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C13507 * C115 + C13503 * C122 + C13508 * C361 + C13504 * C376 +
              C13509 * C362 + C13505 * C377 + C13510 * C2128 + C32920 * C2137) *
                 C114 +
             (C13507 * C123 + C13503 * C136 + C13508 * C375 + C13504 * C391 +
              C13509 * C378 + C13505 * C392 + C13510 * C2136 + C32920 * C2146) *
                 C32615) *
                C32854 +
            ((C13544 + C13545 + C13546 + C13547) * C114 +
             (C13548 + C13549 + C13550 + C13551) * C32615) *
                C32543) *
               C601 -
           (((C14056 + C14057 + C14058 + C14059) * C32615 +
             (C14060 + C14061 + C14062 + C14063) * C114) *
                C32543 +
            ((C13510 * C2139 + C32920 * C2147 + C13509 * C2136 +
              C13505 * C2146 + C13508 * C378 + C13504 * C392 + C13507 * C375 +
              C13503 * C391) *
                 C32615 +
             (C13510 * C2129 + C32920 * C2138 + C13509 * C2128 +
              C13505 * C2137 + C13508 * C362 + C13504 * C377 + C13507 * C361 +
              C13503 * C376) *
                 C114) *
                C32854) *
               C602) *
              C479 +
          ((((C13507 * C721 + C13503 * C726 + C13508 * C1178 + C13504 * C1190 +
              C13509 * C2668 + C13505 * C2671 + C13510 * C7079 +
              C32920 * C7083) *
                 C114 +
             (C13507 * C727 + C13503 * C736 + C13508 * C1191 + C13504 * C1205 +
              C13509 * C2672 + C13505 * C2677 + C13510 * C7084 +
              C32920 * C7088) *
                 C32615) *
                C32854 +
            ((C13507 * C722 + C13503 * C728 + C13508 * C1180 + C13504 * C1194 +
              C13509 * C2669 + C13505 * C2673 + C13510 * C12183 +
              C32920 * C12184) *
                 C114 +
             (C13507 * C729 + C13503 * C737 + C13508 * C1195 + C13504 * C1207 +
              C13509 * C2674 + C13505 * C2678 + C13510 * C12185 +
              C32920 * C12186) *
                 C32615) *
                C32543) *
               C602 -
           (((C13902 + C13903 + C13904 + C13905) * C32615 +
             (C13906 + C13907 + C13908 + C13909) * C114) *
                C32543 +
            ((C13510 * C2672 + C32920 * C2677 + C13509 * C1191 +
              C13505 * C1205 + C13508 * C727 + C13504 * C736 + C13507 * C270 +
              C13503 * C286) *
                 C32615 +
             (C13510 * C2668 + C32920 * C2671 + C13509 * C1178 +
              C13505 * C1190 + C13508 * C721 + C13504 * C726 + C13507 * C256 +
              C13503 * C271) *
                 C114) *
                C32854) *
               C601) *
              C480) *
         C32566) /
            (p * q * std::sqrt(p + q));
    d2ee[67] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C3524 * C115 + C32874 * C122 + C3525 * C361 + C32719 * C376) *
                    C114 +
                (C3524 * C123 + C32874 * C136 + C3525 * C375 + C32719 * C391) *
                    C32615) *
                   C2780 +
               ((C3559 + C3560) * C114 + (C3561 + C3562) * C32615) * C2781 +
               C3583 * C2782 + C3584 * C32908) *
                  C32592 * C32578 * C110 -
              (((C3571 + C3572) * C32615 + (C3573 + C3574) * C114) * C32908 +
               ((C3570 + C3569) * C32615 + (C3568 + C3567) * C114) * C2782 +
               ((C3566 + C3565) * C32615 + (C3564 + C3563) * C114) * C2781 +
               ((C3562 + C3561) * C32615 + (C3560 + C3559) * C114) * C2780) *
                  C32592 * C32578 * C111 +
              (C3583 * C2780 + C3584 * C2781 +
               ((C3574 + C3573) * C114 + (C3572 + C3571) * C32615) * C2782 +
               ((C3524 * C120 + C32874 * C133 + C3525 * C603 + C32719 * C604) *
                    C114 +
                (C3524 * C132 + C32874 * C141 + C3525 * C605 + C32719 * C606) *
                    C32615) *
                   C32908) *
                  C32592 * C32578 * C112) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C3524 * C115 + C32874 * C122 + C3525 * C361 + C32719 * C376) *
                    C114 +
                (C3524 * C123 + C32874 * C136 + C3525 * C375 + C32719 * C391) *
                    C32615) *
                   C2780 +
               ((C3559 + C3560) * C114 + (C3561 + C3562) * C32615) * C2781 +
               C3583 * C2782 + C3584 * C32908) *
                  C32592 * C248 -
              (((C3525 * C733 + C32719 * C739 + C3524 * C264 + C32874 * C283) *
                    C32615 +
                (C3525 * C724 + C32719 * C732 + C3524 * C253 + C32874 * C265) *
                    C114) *
                   C32908 +
               ((C3525 * C731 + C32719 * C738 + C3524 * C266 + C32874 * C284) *
                    C32615 +
                (C3525 * C723 + C32719 * C730 + C3524 * C254 + C32874 * C267) *
                    C114) *
                   C2782 +
               ((C3525 * C729 + C32719 * C737 + C3524 * C268 + C32874 * C285) *
                    C32615 +
                (C3525 * C722 + C32719 * C728 + C3524 * C255 + C32874 * C269) *
                    C114) *
                   C2781 +
               ((C3525 * C727 + C32719 * C736 + C3524 * C270 + C32874 * C286) *
                    C32615 +
                (C3525 * C721 + C32719 * C726 + C3524 * C256 + C32874 * C271) *
                    C114) *
                   C2780) *
                  C32592 * C249 +
              (((C3524 * C257 + C32874 * C272 + C3525 * C1177 +
                 C32719 * C1189) *
                    C114 +
                (C3524 * C273 + C32874 * C287 + C3525 * C1188 +
                 C32719 * C1204) *
                    C32615) *
                   C2780 +
               ((C3524 * C258 + C32874 * C274 + C3525 * C1176 +
                 C32719 * C1187) *
                    C114 +
                (C3524 * C275 + C32874 * C288 + C3525 * C1186 +
                 C32719 * C1203) *
                    C32615) *
                   C2781 +
               ((C3524 * C259 + C32874 * C276 + C3525 * C1175 +
                 C32719 * C1185) *
                    C114 +
                (C3524 * C277 + C32874 * C289 + C3525 * C1184 +
                 C32719 * C1202) *
                    C32615) *
                   C2782 +
               ((C3524 * C260 + C32874 * C278 + C3525 * C1519 +
                 C32719 * C1520) *
                    C114 +
                (C3524 * C279 + C32874 * C290 + C3525 * C1521 +
                 C32719 * C1522) *
                    C32615) *
                   C32908) *
                  C32592 * C250) *
             C32566) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C3524 * C115 + C32874 * C122 + C3525 * C361 + C32719 * C376) *
                C114 +
            (C3524 * C123 + C32874 * C136 + C3525 * C375 + C32719 * C391) *
                C32615) *
               C2780 +
           ((C3559 + C3560) * C114 + (C3561 + C3562) * C32615) * C2781 +
           C3583 * C2782 + C3584 * C32908) *
              C354 -
          (((C3525 * C384 + C32719 * C395 + C3524 * C369 + C32874 * C388) *
                C32615 +
            (C3525 * C365 + C32719 * C383 + C3524 * C358 + C32874 * C370) *
                C114) *
               C32908 +
           ((C3525 * C382 + C32719 * C394 + C3524 * C371 + C32874 * C389) *
                C32615 +
            (C3525 * C364 + C32719 * C381 + C3524 * C359 + C32874 * C372) *
                C114) *
               C2782 +
           ((C3525 * C380 + C32719 * C393 + C3524 * C373 + C32874 * C390) *
                C32615 +
            (C3525 * C363 + C32719 * C379 + C3524 * C360 + C32874 * C374) *
                C114) *
               C2781 +
           ((C3525 * C378 + C32719 * C392 + C3524 * C375 + C32874 * C391) *
                C32615 +
            (C3525 * C362 + C32719 * C377 + C3524 * C361 + C32874 * C376) *
                C114) *
               C2780) *
              C355 +
          (((C3524 * C362 + C32874 * C377 + C3525 * C2128 + C32719 * C2137) *
                C114 +
            (C3524 * C378 + C32874 * C392 + C3525 * C2136 + C32719 * C2146) *
                C32615) *
               C2780 +
           ((C3524 * C363 + C32874 * C379 + C3525 * C2127 + C32719 * C2135) *
                C114 +
            (C3524 * C380 + C32874 * C393 + C3525 * C2134 + C32719 * C2145) *
                C32615) *
               C2781 +
           ((C3524 * C364 + C32874 * C381 + C3525 * C2126 + C32719 * C2133) *
                C114 +
            (C3524 * C382 + C32874 * C394 + C3525 * C2132 + C32719 * C2144) *
                C32615) *
               C2782 +
           ((C3524 * C365 + C32874 * C383 + C3525 * C2482 + C32719 * C2483) *
                C114 +
            (C3524 * C384 + C32874 * C395 + C3525 * C2484 + C32719 * C2485) *
                C32615) *
               C32908) *
              C356) *
         C32578 * C32566) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C3524 * C115 + C32874 * C122 + C3525 * C361 + C32719 * C376) *
                C5477 +
            (C3524 * C123 + C32874 * C136 + C3525 * C375 + C32719 * C391) *
                C5471 +
            (C4576 + C4577) * C5478 + (C4578 + C4579) * C5472 +
            (C4591 + C4590) * C5479 + (C4589 + C4588) * C32904) *
               C32854 +
           ((C3559 + C3560) * C5477 + (C3561 + C3562) * C5471 + C4932 * C5478 +
            C4933 * C5472 + (C4587 + C4586) * C5479 +
            (C4585 + C4584) * C32904) *
               C32543) *
              C32592 * C32578 * C110 -
          (((C4580 + C4581) * C32904 + (C4582 + C4583) * C5479 + C4934 * C5472 +
            C4935 * C5478 + (C3566 + C3565) * C5471 + (C3564 + C3563) * C5477) *
               C32543 +
           ((C4584 + C4585) * C32904 + (C4586 + C4587) * C5479 + C4936 * C5472 +
            C4937 * C5478 + (C3562 + C3561) * C5471 + (C3560 + C3559) * C5477) *
               C32854) *
              C32592 * C32578 * C111 +
          ((C3575 * C5477 + C3576 * C5471 + C4391 * C5478 + C4392 * C5472 +
            (C4583 + C4582) * C5479 + (C4581 + C4580) * C32904) *
               C32854 +
           (C3577 * C5477 + C3578 * C5471 + (C3938 + C3937) * C5478 +
            (C3936 + C3935) * C5472 +
            (C3524 * C260 + C32874 * C278 + C3525 * C1519 + C32719 * C1520) *
                C5479 +
            (C3524 * C279 + C32874 * C290 + C3525 * C1521 + C32719 * C1522) *
                C32904) *
               C32543) *
              C32592 * C32578 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C3524 * C115 + C32874 * C122 + C3525 * C361 + C32719 * C376) *
                C5477 +
            (C3524 * C123 + C32874 * C136 + C3525 * C375 + C32719 * C391) *
                C5471 +
            (C4576 + C4577) * C5478 + (C4578 + C4579) * C5472 + C8619 * C5479 +
            C8620 * C32904) *
               C32854 +
           ((C3559 + C3560) * C5477 + (C3561 + C3562) * C5471 + C4932 * C5478 +
            C4933 * C5472 + C8621 * C5479 + C8622 * C32904) *
               C32543) *
              C32592 * C248 -
          (((C8639 + C8640) * C32904 + (C8641 + C8642) * C5479 +
            (C4584 + C4585) * C5472 + (C4586 + C4587) * C5478 + C4936 * C5471 +
            C4937 * C5477) *
               C32543 +
           ((C8643 + C8644) * C32904 + (C8645 + C8646) * C5479 +
            (C4588 + C4589) * C5472 + (C4590 + C4591) * C5478 +
            (C4579 + C4578) * C5471 + (C4577 + C4576) * C5477) *
               C32854) *
              C32592 * C249 +
          ((C8619 * C5477 + C8620 * C5471 + (C8646 + C8645) * C5478 +
            (C8644 + C8643) * C5472 +
            (C3524 * C1014 + C32874 * C1023 + C3525 * C6402 + C32719 * C6406) *
                C5479 +
            (C3524 * C1024 + C32874 * C1032 + C3525 * C6405 + C32719 * C6411) *
                C32904) *
               C32854 +
           (C8621 * C5477 + C8622 * C5471 + (C8642 + C8641) * C5478 +
            (C8640 + C8639) * C5472 +
            (C3524 * C1015 + C32874 * C1025 + C3525 * C6588 + C32719 * C6589) *
                C5479 +
            (C3524 * C1026 + C32874 * C1033 + C3525 * C6590 + C32719 * C6591) *
                C32904) *
               C32543) *
              C32592 * C250) *
         C32566) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C3524 * C115 + C32874 * C122 + C3525 * C361 + C32719 * C376) *
                C5477 +
            (C3524 * C123 + C32874 * C136 + C3525 * C375 + C32719 * C391) *
                C5471 +
            (C4576 + C4577) * C5478 + (C4578 + C4579) * C5472 + C8619 * C5479 +
            C8620 * C32904) *
               C32854 +
           ((C3559 + C3560) * C5477 + (C3561 + C3562) * C5471 + C4932 * C5478 +
            C4933 * C5472 + C8621 * C5479 + C8622 * C32904) *
               C32543) *
              C354 -
          (((C3525 * C1197 + C32719 * C1208 + C3524 * C1186 + C32874 * C1203) *
                C32904 +
            (C3525 * C1181 + C32719 * C1196 + C3524 * C1176 + C32874 * C1187) *
                C5479 +
            (C5152 + C5153) * C5472 + (C5154 + C5155) * C5478 +
            (C4109 + C4110) * C5471 + (C4111 + C4112) * C5477) *
               C32543 +
           ((C3525 * C1193 + C32719 * C1206 + C3524 * C1188 + C32874 * C1204) *
                C32904 +
            (C3525 * C1179 + C32719 * C1192 + C3524 * C1177 + C32874 * C1189) *
                C5479 +
            (C5358 + C5359) * C5472 + (C5360 + C5361) * C5478 +
            (C3525 * C378 + C32719 * C392 + C3524 * C375 + C32874 * C391) *
                C5471 +
            (C3525 * C362 + C32719 * C377 + C3524 * C361 + C32874 * C376) *
                C5477) *
               C32854) *
              C355 +
          (((C3524 * C362 + C32874 * C377 + C3525 * C2128 + C32719 * C2137) *
                C5477 +
            (C3524 * C378 + C32874 * C392 + C3525 * C2136 + C32719 * C2146) *
                C5471 +
            (C3524 * C1178 + C32874 * C1190 + C3525 * C2668 + C32719 * C2671) *
                C5478 +
            (C3524 * C1191 + C32874 * C1205 + C3525 * C2672 + C32719 * C2677) *
                C5472 +
            (C3524 * C1179 + C32874 * C1192 + C3525 * C7078 + C32719 * C7082) *
                C5479 +
            (C3524 * C1193 + C32874 * C1206 + C3525 * C7081 + C32719 * C7087) *
                C32904) *
               C32854 +
           ((C3524 * C363 + C32874 * C379 + C3525 * C2127 + C32719 * C2135) *
                C5477 +
            (C3524 * C380 + C32874 * C393 + C3525 * C2134 + C32719 * C2145) *
                C5471 +
            (C3524 * C1180 + C32874 * C1194 + C3525 * C2669 + C32719 * C2673) *
                C5478 +
            (C3524 * C1195 + C32874 * C1207 + C3525 * C2674 + C32719 * C2678) *
                C5472 +
            (C3524 * C1181 + C32874 * C1196 + C3525 * C7404 + C32719 * C7405) *
                C5479 +
            (C3524 * C1197 + C32874 * C1208 + C3525 * C7406 + C32719 * C7407) *
                C32904) *
               C32543) *
              C356) *
         C32578 * C32566) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C13507 * C115 + C13503 * C122 + C13508 * C361 + C13504 * C376 +
             C13509 * C362 + C13505 * C377 + C13510 * C2128 + C32920 * C2137) *
                C114 +
            (C13507 * C123 + C13503 * C136 + C13508 * C375 + C13504 * C391 +
             C13509 * C378 + C13505 * C392 + C13510 * C2136 + C32920 * C2146) *
                C32615) *
               C32854 +
           ((C13544 + C13545 + C13546 + C13547) * C114 +
            (C13548 + C13549 + C13550 + C13551) * C32615) *
               C32543) *
              C32592 * C32578 * C110 -
          (((C13552 + C13553 + C13554 + C13555) * C32615 +
            (C13556 + C13557 + C13558 + C13559) * C114) *
               C32543 +
           ((C13551 + C13550 + C13549 + C13548) * C32615 +
            (C13547 + C13546 + C13545 + C13544) * C114) *
               C32854) *
              C32592 * C32578 * C111 +
          (((C13559 + C13558 + C13557 + C13556) * C114 +
            (C13555 + C13554 + C13553 + C13552) * C32615) *
               C32854 +
           ((C13507 * C118 + C13503 * C128 + C13508 * C358 + C13504 * C370 +
             C13509 * C365 + C13505 * C383 + C13510 * C2482 + C32920 * C2483) *
                C114 +
            (C13507 * C129 + C13503 * C139 + C13508 * C369 + C13504 * C388 +
             C13509 * C384 + C13505 * C395 + C13510 * C2484 + C32920 * C2485) *
                C32615) *
               C32543) *
              C32592 * C32578 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C13507 * C115 + C13503 * C122 + C13508 * C361 + C13504 * C376 +
             C13509 * C362 + C13505 * C377 + C13510 * C2128 + C32920 * C2137) *
                C114 +
            (C13507 * C123 + C13503 * C136 + C13508 * C375 + C13504 * C391 +
             C13509 * C378 + C13505 * C392 + C13510 * C2136 + C32920 * C2146) *
                C32615) *
               C32854 +
           ((C13544 + C13545 + C13546 + C13547) * C114 +
            (C13548 + C13549 + C13550 + C13551) * C32615) *
               C32543) *
              C32592 * C248 -
          (((C13510 * C2674 + C32920 * C2678 + C13509 * C1195 + C13505 * C1207 +
             C13508 * C729 + C13504 * C737 + C13507 * C268 + C13503 * C285) *
                C32615 +
            (C13510 * C2669 + C32920 * C2673 + C13509 * C1180 + C13505 * C1194 +
             C13508 * C722 + C13504 * C728 + C13507 * C255 + C13503 * C269) *
                C114) *
               C32543 +
           ((C13510 * C2672 + C32920 * C2677 + C13509 * C1191 + C13505 * C1205 +
             C13508 * C727 + C13504 * C736 + C13507 * C270 + C13503 * C286) *
                C32615 +
            (C13510 * C2668 + C32920 * C2671 + C13509 * C1178 + C13505 * C1190 +
             C13508 * C721 + C13504 * C726 + C13507 * C256 + C13503 * C271) *
                C114) *
               C32854) *
              C32592 * C249 +
          (((C13507 * C257 + C13503 * C272 + C13508 * C1177 + C13504 * C1189 +
             C13509 * C1179 + C13505 * C1192 + C13510 * C7078 +
             C32920 * C7082) *
                C114 +
            (C13507 * C273 + C13503 * C287 + C13508 * C1188 + C13504 * C1204 +
             C13509 * C1193 + C13505 * C1206 + C13510 * C7081 +
             C32920 * C7087) *
                C32615) *
               C32854 +
           ((C13507 * C258 + C13503 * C274 + C13508 * C1176 + C13504 * C1187 +
             C13509 * C1181 + C13505 * C1196 + C13510 * C7404 +
             C32920 * C7405) *
                C114 +
            (C13507 * C275 + C13503 * C288 + C13508 * C1186 + C13504 * C1203 +
             C13509 * C1197 + C13505 * C1208 + C13510 * C7406 +
             C32920 * C7407) *
                C32615) *
               C32543) *
              C32592 * C250) *
         C32566) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C13507 * C115 + C13503 * C122 + C13508 * C361 + C13504 * C376 +
             C13509 * C362 + C13505 * C377 + C13510 * C2128 + C32920 * C2137) *
                C114 +
            (C13507 * C123 + C13503 * C136 + C13508 * C375 + C13504 * C391 +
             C13509 * C378 + C13505 * C392 + C13510 * C2136 + C32920 * C2146) *
                C32615) *
               C32854 +
           ((C13544 + C13545 + C13546 + C13547) * C114 +
            (C13548 + C13549 + C13550 + C13551) * C32615) *
               C32543) *
              C354 -
          (((C13510 * C2141 + C32920 * C2148 + C13509 * C2134 + C13505 * C2145 +
             C13508 * C380 + C13504 * C393 + C13507 * C373 + C13503 * C390) *
                C32615 +
            (C13510 * C2130 + C32920 * C2140 + C13509 * C2127 + C13505 * C2135 +
             C13508 * C363 + C13504 * C379 + C13507 * C360 + C13503 * C374) *
                C114) *
               C32543 +
           ((C13510 * C2139 + C32920 * C2147 + C13509 * C2136 + C13505 * C2146 +
             C13508 * C378 + C13504 * C392 + C13507 * C375 + C13503 * C391) *
                C32615 +
            (C13510 * C2129 + C32920 * C2138 + C13509 * C2128 + C13505 * C2137 +
             C13508 * C362 + C13504 * C377 + C13507 * C361 + C13503 * C376) *
                C114) *
               C32854) *
              C355 +
          (((C13507 * C362 + C13503 * C377 + C13508 * C2128 + C13504 * C2137 +
             C13509 * C2129 + C13505 * C2138 + C13510 * C12093 +
             C32920 * C12096) *
                C114 +
            (C13507 * C378 + C13503 * C392 + C13508 * C2136 + C13504 * C2146 +
             C13509 * C2139 + C13505 * C2147 + C13510 * C12095 +
             C32920 * C12099) *
                C32615) *
               C32854 +
           ((C13507 * C363 + C13503 * C379 + C13508 * C2127 + C13504 * C2135 +
             C13509 * C2130 + C13505 * C2140 + C13510 * C12269 +
             C32920 * C12270) *
                C114 +
            (C13507 * C380 + C13503 * C393 + C13508 * C2134 + C13504 * C2145 +
             C13509 * C2141 + C13505 * C2148 + C13510 * C12271 +
             C32920 * C12272) *
                C32615) *
               C32543) *
              C356) *
         C32578 * C32566) /
            (p * q * std::sqrt(p + q));
    d2ee[68] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C3524 * C115 + C32874 * C122 + C3525 * C361 + C32719 * C376) *
                 C5477 +
             (C3524 * C123 + C32874 * C136 + C3525 * C375 + C32719 * C391) *
                 C5471 +
             (C4576 + C4577) * C5478 + (C4578 + C4579) * C5472 + C8619 * C5479 +
             C8620 * C32904) *
                C32854 +
            ((C3559 + C3560) * C5477 + (C3561 + C3562) * C5471 + C4932 * C5478 +
             C4933 * C5472 + C8621 * C5479 + C8622 * C32904) *
                C32543) *
               C601 -
           (((C9191 + C9192) * C32904 + (C9193 + C9194) * C5479 +
             (C5152 + C5153) * C5472 + (C5154 + C5155) * C5478 +
             (C4109 + C4110) * C5471 + (C4111 + C4112) * C5477) *
                C32543 +
            ((C3525 * C1193 + C32719 * C1206 + C3524 * C1188 + C32874 * C1204) *
                 C32904 +
             (C3525 * C1179 + C32719 * C1192 + C3524 * C1177 + C32874 * C1189) *
                 C5479 +
             (C5358 + C5359) * C5472 + (C5360 + C5361) * C5478 +
             (C3525 * C378 + C32719 * C392 + C3524 * C375 + C32874 * C391) *
                 C5471 +
             (C3525 * C362 + C32719 * C377 + C3524 * C361 + C32874 * C376) *
                 C5477) *
                C32854) *
               C602) *
              C32578 * C481 +
          ((((C4112 + C4111) * C5477 + (C4110 + C4109) * C5471 +
             (C5155 + C5154) * C5478 + (C5153 + C5152) * C5472 +
             (C9194 + C9193) * C5479 + (C9192 + C9191) * C32904) *
                C32854 +
            ((C4108 + C4107) * C5477 + (C4106 + C4105) * C5471 +
             (C5151 + C5150) * C5478 + (C5149 + C5148) * C5472 +
             (C3524 * C1175 + C32874 * C1185 + C3525 * C1183 + C32719 * C1200) *
                 C5479 +
             (C3524 * C1184 + C32874 * C1202 + C3525 * C1201 + C32719 * C1210) *
                 C32904) *
                C32543) *
               C602 -
           (((C4580 + C4581) * C32904 + (C4582 + C4583) * C5479 +
             C4934 * C5472 + C4935 * C5478 + (C3566 + C3565) * C5471 +
             (C3564 + C3563) * C5477) *
                C32543 +
            (C8987 * C32904 + C8988 * C5479 + C4936 * C5472 + C4937 * C5478 +
             (C3562 + C3561) * C5471 + (C3560 + C3559) * C5477) *
                C32854) *
               C601) *
              C32578 * C482)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C3524 * C115 + C32874 * C122 + C3525 * C361 + C32719 * C376) *
                 C114 +
             (C3524 * C123 + C32874 * C136 + C3525 * C375 + C32719 * C391) *
                 C32615) *
                C2780 +
            ((C3559 + C3560) * C114 + (C3561 + C3562) * C32615) * C2781 +
            C3583 * C2782 + C3584 * C32908) *
               C601 -
           (((C4101 + C4102) * C32615 + (C4103 + C4104) * C114) * C32908 +
            ((C4105 + C4106) * C32615 + (C4107 + C4108) * C114) * C2782 +
            ((C4109 + C4110) * C32615 + (C4111 + C4112) * C114) * C2781 +
            ((C3525 * C378 + C32719 * C392 + C3524 * C375 + C32874 * C391) *
                 C32615 +
             (C3525 * C362 + C32719 * C377 + C3524 * C361 + C32874 * C376) *
                 C114) *
                C2780) *
               C602) *
              C32578 * C481 +
          ((((C4112 + C4111) * C114 + (C4110 + C4109) * C32615) * C2780 +
            ((C4108 + C4107) * C114 + (C4106 + C4105) * C32615) * C2781 +
            ((C4104 + C4103) * C114 + (C4102 + C4101) * C32615) * C2782 +
            ((C3524 * C357 + C32874 * C368 + C3525 * C366 + C32719 * C385) *
                 C114 +
             (C3524 * C367 + C32874 * C387 + C3525 * C386 + C32719 * C396) *
                 C32615) *
                C32908) *
               C602 -
           (((C3571 + C3572) * C32615 + (C3573 + C3574) * C114) * C32908 +
            ((C3570 + C3569) * C32615 + (C3568 + C3567) * C114) * C2782 +
            ((C3566 + C3565) * C32615 + (C3564 + C3563) * C114) * C2781 +
            ((C3562 + C3561) * C32615 + (C3560 + C3559) * C114) * C2780) *
               C601) *
              C32578 * C482)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C13507 * C115 + C13503 * C122 + C13508 * C361 + C13504 * C376 +
              C13509 * C362 + C13505 * C377 + C13510 * C2128 + C32920 * C2137) *
                 C114 +
             (C13507 * C123 + C13503 * C136 + C13508 * C375 + C13504 * C391 +
              C13509 * C378 + C13505 * C392 + C13510 * C2136 + C32920 * C2146) *
                 C32615) *
                C32854 +
            ((C13544 + C13545 + C13546 + C13547) * C114 +
             (C13548 + C13549 + C13550 + C13551) * C32615) *
                C32543) *
               C601 -
           (((C14056 + C14057 + C14058 + C14059) * C32615 +
             (C14060 + C14061 + C14062 + C14063) * C114) *
                C32543 +
            ((C13510 * C2139 + C32920 * C2147 + C13509 * C2136 +
              C13505 * C2146 + C13508 * C378 + C13504 * C392 + C13507 * C375 +
              C13503 * C391) *
                 C32615 +
             (C13510 * C2129 + C32920 * C2138 + C13509 * C2128 +
              C13505 * C2137 + C13508 * C362 + C13504 * C377 + C13507 * C361 +
              C13503 * C376) *
                 C114) *
                C32854) *
               C602) *
              C32578 * C481 +
          ((((C14063 + C14062 + C14061 + C14060) * C114 +
             (C14059 + C14058 + C14057 + C14056) * C32615) *
                C32854 +
            ((C13507 * C359 + C13503 * C372 + C13508 * C364 + C13504 * C381 +
              C13509 * C2126 + C13505 * C2133 + C13510 * C2131 +
              C32920 * C2142) *
                 C114 +
             (C13507 * C371 + C13503 * C389 + C13508 * C382 + C13504 * C394 +
              C13509 * C2132 + C13505 * C2144 + C13510 * C2143 +
              C32920 * C2149) *
                 C32615) *
                C32543) *
               C602 -
           (((C13552 + C13553 + C13554 + C13555) * C32615 +
             (C13556 + C13557 + C13558 + C13559) * C114) *
                C32543 +
            ((C13551 + C13550 + C13549 + C13548) * C32615 +
             (C13547 + C13546 + C13545 + C13544) * C114) *
                C32854) *
               C601) *
              C32578 * C482)) /
            (p * q * std::sqrt(p + q));
    d2ee[69] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C3524 * C115 + C32874 * C122 + C3525 * C361 + C32719 * C376) *
                C114 +
            (C3524 * C123 + C32874 * C136 + C3525 * C375 + C32719 * C391) *
                C32615) *
               C2780 +
           ((C3559 + C3560) * C114 + (C3561 + C3562) * C32615) * C2781 +
           C3583 * C2782 + C3584 * C32908) *
              C32592 * C248 -
          (((C3525 * C733 + C32719 * C739 + C3524 * C264 + C32874 * C283) *
                C32615 +
            (C3525 * C724 + C32719 * C732 + C3524 * C253 + C32874 * C265) *
                C114) *
               C32908 +
           ((C3525 * C731 + C32719 * C738 + C3524 * C266 + C32874 * C284) *
                C32615 +
            (C3525 * C723 + C32719 * C730 + C3524 * C254 + C32874 * C267) *
                C114) *
               C2782 +
           ((C3525 * C729 + C32719 * C737 + C3524 * C268 + C32874 * C285) *
                C32615 +
            (C3525 * C722 + C32719 * C728 + C3524 * C255 + C32874 * C269) *
                C114) *
               C2781 +
           ((C3525 * C727 + C32719 * C736 + C3524 * C270 + C32874 * C286) *
                C32615 +
            (C3525 * C721 + C32719 * C726 + C3524 * C256 + C32874 * C271) *
                C114) *
               C2780) *
              C32592 * C249 +
          (((C3524 * C257 + C32874 * C272 + C3525 * C1177 + C32719 * C1189) *
                C114 +
            (C3524 * C273 + C32874 * C287 + C3525 * C1188 + C32719 * C1204) *
                C32615) *
               C2780 +
           ((C3524 * C258 + C32874 * C274 + C3525 * C1176 + C32719 * C1187) *
                C114 +
            (C3524 * C275 + C32874 * C288 + C3525 * C1186 + C32719 * C1203) *
                C32615) *
               C2781 +
           ((C3524 * C259 + C32874 * C276 + C3525 * C1175 + C32719 * C1185) *
                C114 +
            (C3524 * C277 + C32874 * C289 + C3525 * C1184 + C32719 * C1202) *
                C32615) *
               C2782 +
           ((C3524 * C260 + C32874 * C278 + C3525 * C1519 + C32719 * C1520) *
                C114 +
            (C3524 * C279 + C32874 * C290 + C3525 * C1521 + C32719 * C1522) *
                C32615) *
               C32908) *
              C32592 * C250) *
         C32566) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C3524 * C115 + C32874 * C122 + C3525 * C361 + C32719 * C376) *
                C114 +
            (C3524 * C123 + C32874 * C136 + C3525 * C375 + C32719 * C391) *
                C32615) *
               C2780 +
           ((C3559 + C3560) * C114 + (C3561 + C3562) * C32615) * C2781 +
           C3583 * C2782 + C3584 * C32908) *
              C32592 * C32578 * C110 -
          (((C3571 + C3572) * C32615 + (C3573 + C3574) * C114) * C32908 +
           ((C3570 + C3569) * C32615 + (C3568 + C3567) * C114) * C2782 +
           ((C3566 + C3565) * C32615 + (C3564 + C3563) * C114) * C2781 +
           ((C3562 + C3561) * C32615 + (C3560 + C3559) * C114) * C2780) *
              C32592 * C32578 * C111 +
          (C3583 * C2780 + C3584 * C2781 +
           ((C3574 + C3573) * C114 + (C3572 + C3571) * C32615) * C2782 +
           ((C3524 * C120 + C32874 * C133 + C3525 * C603 + C32719 * C604) *
                C114 +
            (C3524 * C132 + C32874 * C141 + C3525 * C605 + C32719 * C606) *
                C32615) *
               C32908) *
              C32592 * C32578 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C3524 * C115 + C32874 * C122 + C3525 * C361 + C32719 * C376) *
                C5477 +
            (C3524 * C123 + C32874 * C136 + C3525 * C375 + C32719 * C391) *
                C5471 +
            (C4576 + C4577) * C5478 + (C4578 + C4579) * C5472 +
            (C4591 + C4590) * C5479 + (C4589 + C4588) * C32904) *
               C32854 +
           ((C3559 + C3560) * C5477 + (C3561 + C3562) * C5471 + C4932 * C5478 +
            C4933 * C5472 + (C4587 + C4586) * C5479 +
            (C4585 + C4584) * C32904) *
               C32543) *
              C32592 * C32578 * C110 -
          (((C4580 + C4581) * C32904 + (C4582 + C4583) * C5479 + C4934 * C5472 +
            C4935 * C5478 + (C3566 + C3565) * C5471 + (C3564 + C3563) * C5477) *
               C32543 +
           ((C4584 + C4585) * C32904 + (C4586 + C4587) * C5479 + C4936 * C5472 +
            C4937 * C5478 + (C3562 + C3561) * C5471 + (C3560 + C3559) * C5477) *
               C32854) *
              C32592 * C32578 * C111 +
          ((C3575 * C5477 + C3576 * C5471 + C4391 * C5478 + C4392 * C5472 +
            (C4583 + C4582) * C5479 + (C4581 + C4580) * C32904) *
               C32854 +
           (C3577 * C5477 + C3578 * C5471 + (C3938 + C3937) * C5478 +
            (C3936 + C3935) * C5472 +
            (C3524 * C260 + C32874 * C278 + C3525 * C1519 + C32719 * C1520) *
                C5479 +
            (C3524 * C279 + C32874 * C290 + C3525 * C1521 + C32719 * C1522) *
                C32904) *
               C32543) *
              C32592 * C32578 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C3524 * C115 + C32874 * C122 + C3525 * C361 + C32719 * C376) *
                C5477 +
            (C3524 * C123 + C32874 * C136 + C3525 * C375 + C32719 * C391) *
                C5471 +
            (C4576 + C4577) * C5478 + (C4578 + C4579) * C5472 + C8619 * C5479 +
            C8620 * C32904) *
               C32854 +
           ((C3559 + C3560) * C5477 + (C3561 + C3562) * C5471 + C4932 * C5478 +
            C4933 * C5472 + C8621 * C5479 + C8622 * C32904) *
               C32543) *
              C32592 * C248 -
          (((C8639 + C8640) * C32904 + (C8641 + C8642) * C5479 +
            (C4584 + C4585) * C5472 + (C4586 + C4587) * C5478 + C4936 * C5471 +
            C4937 * C5477) *
               C32543 +
           ((C8643 + C8644) * C32904 + (C8645 + C8646) * C5479 +
            (C4588 + C4589) * C5472 + (C4590 + C4591) * C5478 +
            (C4579 + C4578) * C5471 + (C4577 + C4576) * C5477) *
               C32854) *
              C32592 * C249 +
          ((C8619 * C5477 + C8620 * C5471 + (C8646 + C8645) * C5478 +
            (C8644 + C8643) * C5472 +
            (C3524 * C1014 + C32874 * C1023 + C3525 * C6402 + C32719 * C6406) *
                C5479 +
            (C3524 * C1024 + C32874 * C1032 + C3525 * C6405 + C32719 * C6411) *
                C32904) *
               C32854 +
           (C8621 * C5477 + C8622 * C5471 + (C8642 + C8641) * C5478 +
            (C8640 + C8639) * C5472 +
            (C3524 * C1015 + C32874 * C1025 + C3525 * C6588 + C32719 * C6589) *
                C5479 +
            (C3524 * C1026 + C32874 * C1033 + C3525 * C6590 + C32719 * C6591) *
                C32904) *
               C32543) *
              C32592 * C250) *
         C32566) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C13507 * C115 + C13503 * C122 + C13508 * C361 + C13504 * C376 +
             C13509 * C362 + C13505 * C377 + C13510 * C2128 + C32920 * C2137) *
                C114 +
            (C13507 * C123 + C13503 * C136 + C13508 * C375 + C13504 * C391 +
             C13509 * C378 + C13505 * C392 + C13510 * C2136 + C32920 * C2146) *
                C32615) *
               C32854 +
           ((C13544 + C13545 + C13546 + C13547) * C114 +
            (C13548 + C13549 + C13550 + C13551) * C32615) *
               C32543) *
              C32592 * C32578 * C110 -
          (((C13552 + C13553 + C13554 + C13555) * C32615 +
            (C13556 + C13557 + C13558 + C13559) * C114) *
               C32543 +
           ((C13551 + C13550 + C13549 + C13548) * C32615 +
            (C13547 + C13546 + C13545 + C13544) * C114) *
               C32854) *
              C32592 * C32578 * C111 +
          (((C13559 + C13558 + C13557 + C13556) * C114 +
            (C13555 + C13554 + C13553 + C13552) * C32615) *
               C32854 +
           ((C13507 * C118 + C13503 * C128 + C13508 * C358 + C13504 * C370 +
             C13509 * C365 + C13505 * C383 + C13510 * C2482 + C32920 * C2483) *
                C114 +
            (C13507 * C129 + C13503 * C139 + C13508 * C369 + C13504 * C388 +
             C13509 * C384 + C13505 * C395 + C13510 * C2484 + C32920 * C2485) *
                C32615) *
               C32543) *
              C32592 * C32578 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C13507 * C115 + C13503 * C122 + C13508 * C361 + C13504 * C376 +
             C13509 * C362 + C13505 * C377 + C13510 * C2128 + C32920 * C2137) *
                C114 +
            (C13507 * C123 + C13503 * C136 + C13508 * C375 + C13504 * C391 +
             C13509 * C378 + C13505 * C392 + C13510 * C2136 + C32920 * C2146) *
                C32615) *
               C32854 +
           ((C13544 + C13545 + C13546 + C13547) * C114 +
            (C13548 + C13549 + C13550 + C13551) * C32615) *
               C32543) *
              C32592 * C248 -
          (((C13510 * C2674 + C32920 * C2678 + C13509 * C1195 + C13505 * C1207 +
             C13508 * C729 + C13504 * C737 + C13507 * C268 + C13503 * C285) *
                C32615 +
            (C13510 * C2669 + C32920 * C2673 + C13509 * C1180 + C13505 * C1194 +
             C13508 * C722 + C13504 * C728 + C13507 * C255 + C13503 * C269) *
                C114) *
               C32543 +
           ((C13510 * C2672 + C32920 * C2677 + C13509 * C1191 + C13505 * C1205 +
             C13508 * C727 + C13504 * C736 + C13507 * C270 + C13503 * C286) *
                C32615 +
            (C13510 * C2668 + C32920 * C2671 + C13509 * C1178 + C13505 * C1190 +
             C13508 * C721 + C13504 * C726 + C13507 * C256 + C13503 * C271) *
                C114) *
               C32854) *
              C32592 * C249 +
          (((C13507 * C257 + C13503 * C272 + C13508 * C1177 + C13504 * C1189 +
             C13509 * C1179 + C13505 * C1192 + C13510 * C7078 +
             C32920 * C7082) *
                C114 +
            (C13507 * C273 + C13503 * C287 + C13508 * C1188 + C13504 * C1204 +
             C13509 * C1193 + C13505 * C1206 + C13510 * C7081 +
             C32920 * C7087) *
                C32615) *
               C32854 +
           ((C13507 * C258 + C13503 * C274 + C13508 * C1176 + C13504 * C1187 +
             C13509 * C1181 + C13505 * C1196 + C13510 * C7404 +
             C32920 * C7405) *
                C114 +
            (C13507 * C275 + C13503 * C288 + C13508 * C1186 + C13504 * C1203 +
             C13509 * C1197 + C13505 * C1208 + C13510 * C7406 +
             C32920 * C7407) *
                C32615) *
               C32543) *
              C32592 * C250) *
         C32566) /
            (p * q * std::sqrt(p + q));
    d2ee[70] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C32632 * C122) * C857 +
             (C113 * C123 + C32632 * C136) * C32939 + C1056 * C858 +
             C1057 * C32927 + C1058 * C859 + C1059 * C32904) *
                C854 +
            (C861 + C862 + C863 + C864 + C892 + C893) * C855 + C901 * C32893) *
               C32592 * C479 -
           ((C1362 + C1363 + C1364 + C1365 + C1366 + C1367) * C32893 +
            (C1368 + C1369 + C1370 + C1371 + C1372 + C1373) * C855 +
            (C1064 * C32904 + C1065 * C859 + C1059 * C32927 + C1058 * C858 +
             C1057 * C32939 + C1056 * C857) *
                C854) *
               C32592 * C480) *
              C481 +
          (((C1373 + C1372 + C1371 + C1370 + C1369 + C1368) * C854 +
            (C1367 + C1366 + C1365 + C1364 + C1363 + C1362) * C855 +
            (C507 * C857 + C506 * C32939 + C891 * C858 + C890 * C32927 +
             (C113 * C1357 + C32632 * C1358) * C859 +
             (C113 * C1359 + C32632 * C1360) * C32904) *
                C32893) *
               C32592 * C480 -
           ((C897 + C898 + C881 + C882 + C883 + C884) * C32893 +
            (C896 + C895 + C872 + C871 + C870 + C869) * C855 +
            (C893 + C892 + C864 + C863 + C862 + C861) * C854) *
               C32592 * C479) *
              C482)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C32632 * C122) * C114 +
             (C113 * C123 + C32632 * C136) * C32615) *
                C103 +
            (C174 + C175) * C104 + C184 * C105 + C185 * C106 + C186 * C107) *
               C32592 * C479 -
           ((C512 + C513) * C107 + (C514 + C515) * C106 + (C516 + C517) * C105 +
            (C518 + C519) * C104 +
            ((C113 * C270 + C32632 * C286) * C32615 +
             (C113 * C256 + C32632 * C271) * C114) *
                C103) *
               C32592 * C480) *
              C481 +
          (((C519 + C518) * C103 + (C517 + C516) * C104 + (C515 + C514) * C105 +
            (C513 + C512) * C106 +
            ((C113 * C483 + C32632 * C484) * C114 +
             (C113 * C485 + C32632 * C486) * C32615) *
                C107) *
               C32592 * C480 -
           ((C182 + C183) * C107 + (C181 + C180) * C106 + (C179 + C178) * C105 +
            (C177 + C176) * C104 + (C175 + C174) * C103) *
               C32592 * C479) *
              C482)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C32632 * C122) * C5477 +
             (C113 * C123 + C32632 * C136) * C5471 + C1056 * C5478 +
             C1057 * C5472 + C1058 * C5479 + C1059 * C32904) *
                C32936 +
            (C5481 + C5482 + C5483 + C5484 + C5485 + C5486) * C32923 +
            C5503 * C32893) *
               C32592 * C479 -
           ((C5870 + C5871 + C5872 + C5873 + C5874 + C5875) * C32893 +
            (C5876 + C5877 + C5878 + C5879 + C5880 + C5881) * C32923 +
            (C1064 * C32904 + C1065 * C5479 + C1059 * C5472 + C1058 * C5478 +
             C1057 * C5471 + C1056 * C5477) *
                C32936) *
               C32592 * C480) *
              C481 +
          (((C5881 + C5880 + C5879 + C5878 + C5877 + C5876) * C32936 +
            (C5875 + C5874 + C5873 + C5872 + C5871 + C5870) * C32923 +
            (C507 * C5477 + C506 * C5471 + C891 * C5478 + C890 * C5472 +
             (C113 * C1357 + C32632 * C1358) * C5479 +
             (C113 * C1359 + C32632 * C1360) * C32904) *
                C32893) *
               C32592 * C480 -
           ((C5493 + C5494 + C5495 + C5496 + C5497 + C5498) * C32893 +
            (C5492 + C5491 + C5490 + C5489 + C5488 + C5487) * C32923 +
            (C5486 + C5485 + C5484 + C5483 + C5482 + C5481) * C32936) *
               C32592 * C479) *
              C482)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C32632 * C122) * C6253 +
            (C113 * C123 + C32632 * C136) * C6247 + C1056 * C6254 +
            C1057 * C6248 + C1058 * C6255 + C1059 * C6249 + C1065 * C6256 +
            C1064 * C6250 + C6337 * C6257 + C6338 * C6251) *
               C32533 * C32592 * C479 -
           (C6339 * C6251 + C6340 * C6257 + C6338 * C6250 + C6337 * C6256 +
            C1064 * C6249 + C1065 * C6255 + C1059 * C6248 + C1058 * C6254 +
            C1057 * C6247 + C1056 * C6253) *
               C32533 * C32592 * C480) *
              C481 +
          ((C511 * C6253 + C510 * C6247 + C885 * C6254 + C886 * C6248 +
            C1063 * C6255 + C1062 * C6249 + C6505 * C6256 + C6506 * C6250 +
            (C113 * C6496 + C32632 * C6497) * C6257 +
            (C113 * C6498 + C32632 * C6499) * C6251) *
               C32533 * C32592 * C480 -
           (C6506 * C6251 + C6505 * C6257 + C1062 * C6250 + C1063 * C6256 +
            C886 * C6249 + C885 * C6255 + C510 * C6248 + C511 * C6254 +
            C165 * C6247 + C164 * C6253) *
               C32533 * C32592 * C479) *
              C482)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C10223 * C115 + C10220 * C122 + C10224 * C361 + C10221 * C376 +
              C10225 * C362 + C32907 * C377) *
                 C114 +
             (C10223 * C123 + C10220 * C136 + C10224 * C375 + C10221 * C391 +
              C10225 * C378 + C32907 * C392) *
                 C32615) *
                C32936 +
            ((C10263 + C10264 + C10265) * C114 +
             (C10266 + C10267 + C10268) * C32615) *
                C32923 +
            C10287 * C32893) *
               C32592 * C479 -
           (((C10678 + C10679 + C10680) * C32615 +
             (C10681 + C10682 + C10683) * C114) *
                C32893 +
            ((C10684 + C10685 + C10686) * C32615 +
             (C10687 + C10688 + C10689) * C114) *
                C32923 +
            ((C10225 * C1191 + C32907 * C1205 + C10224 * C727 + C10221 * C736 +
              C10223 * C270 + C10220 * C286) *
                 C32615 +
             (C10225 * C1178 + C32907 * C1190 + C10224 * C721 + C10221 * C726 +
              C10223 * C256 + C10220 * C271) *
                 C114) *
                C32936) *
               C32592 * C480) *
              C481 +
          ((((C10689 + C10688 + C10687) * C114 +
             (C10686 + C10685 + C10684) * C32615) *
                C32936 +
            ((C10683 + C10682 + C10681) * C114 +
             (C10680 + C10679 + C10678) * C32615) *
                C32923 +
            ((C10223 * C253 + C10220 * C265 + C10224 * C724 + C10221 * C732 +
              C10225 * C2296 + C32907 * C2297) *
                 C114 +
             (C10223 * C264 + C10220 * C283 + C10224 * C733 + C10221 * C739 +
              C10225 * C2298 + C32907 * C2299) *
                 C32615) *
                C32893) *
               C32592 * C480 -
           (((C10275 + C10276 + C10277) * C32615 +
             (C10278 + C10279 + C10280) * C114) *
                C32893 +
            ((C10274 + C10273 + C10272) * C32615 +
             (C10271 + C10270 + C10269) * C114) *
                C32923 +
            ((C10268 + C10267 + C10266) * C32615 +
             (C10265 + C10264 + C10263) * C114) *
                C32936) *
               C32592 * C479) *
              C482)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C10223 * C115 + C10220 * C122 + C10224 * C361 + C10221 * C376 +
             C10225 * C362 + C32907 * C377) *
                C857 +
            (C10223 * C123 + C10220 * C136 + C10224 * C375 + C10221 * C391 +
             C10225 * C378 + C32907 * C392) *
                C32939 +
            (C11274 + C11275 + C11276) * C858 +
            (C11277 + C11278 + C11279) * C32927 + C11294 * C859 +
            C11295 * C32904) *
               C32533 * C32592 * C479 -
           ((C11286 + C11287 + C11288) * C32904 +
            (C11289 + C11290 + C11291) * C859 +
            (C11285 + C11284 + C11283) * C32927 +
            (C11282 + C11281 + C11280) * C858 +
            (C11279 + C11278 + C11277) * C32939 +
            (C11276 + C11275 + C11274) * C857) *
               C32533 * C32592 * C480) *
              C481 +
          (((C10689 + C10688 + C10687) * C857 +
            (C10686 + C10685 + C10684) * C32939 +
            (C11564 + C11565 + C11566) * C858 +
            (C11567 + C11568 + C11569) * C32927 +
            (C10223 * C1012 + C10220 * C1020 + C10224 * C1706 + C10221 * C1710 +
             C10225 * C7236 + C32907 * C7237) *
                C859 +
            (C10223 * C1019 + C10220 * C1030 + C10224 * C1711 + C10221 * C1715 +
             C10225 * C7238 + C32907 * C7239) *
                C32904) *
               C32533 * C32592 * C480 -
           ((C11569 + C11568 + C11567) * C32904 +
            (C11566 + C11565 + C11564) * C859 +
            (C10684 + C10685 + C10686) * C32927 +
            (C10687 + C10688 + C10689) * C858 +
            (C10268 + C10267 + C10266) * C32939 +
            (C10265 + C10264 + C10263) * C857) *
               C32533 * C32592 * C479) *
              C482)) /
            (p * q * std::sqrt(p + q));
    d2ee[71] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C32632 * C122) * C857 +
             (C113 * C123 + C32632 * C136) * C32939 + C1056 * C858 +
             C1057 * C32927 + C1058 * C859 + C1059 * C32904) *
                C854 +
            (C861 + C862 + C863 + C864 + C892 + C893) * C855 + C901 * C32893) *
               C601 -
           ((C1552 + C1553 + C1554 + C1555 + C1532 + C1533) * C32893 +
            (C1556 + C1557 + C1558 + C1559 + C1542 + C1543) * C855 +
            (C1726 * C32904 + C1727 * C859 + C1728 * C32927 + C1729 * C858 +
             (C113 * C375 + C32632 * C391) * C32939 +
             (C113 * C361 + C32632 * C376) * C857) *
                C854) *
               C602) *
              C479 +
          (((C1729 * C857 + C1728 * C32939 + C1727 * C858 + C1726 * C32927 +
             (C113 * C1705 + C32632 * C1708) * C859 +
             (C113 * C1709 + C32632 * C1714) * C32904) *
                C854 +
            (C1551 * C857 + C1550 * C32939 + C1549 * C858 + C1548 * C32927 +
             (C113 * C1706 + C32632 * C1710) * C859 +
             (C113 * C1711 + C32632 * C1715) * C32904) *
                C855 +
            (C1547 * C857 + C1546 * C32939 + C1545 * C858 + C1544 * C32927 +
             (C113 * C1707 + C32632 * C1712) * C859 +
             (C113 * C1713 + C32632 * C1716) * C32904) *
                C32893) *
               C602 -
           ((C1362 + C1363 + C1364 + C1365 + C1366 + C1367) * C32893 +
            (C1368 + C1369 + C1370 + C1371 + C1372 + C1373) * C855 +
            (C1064 * C32904 + C1065 * C859 + C1059 * C32927 + C1058 * C858 +
             C1057 * C32939 + C1056 * C857) *
                C854) *
               C601) *
              C480) *
         C32566) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C32632 * C122) * C114 +
             (C113 * C123 + C32632 * C136) * C32615) *
                C103 +
            (C174 + C175) * C104 + C184 * C105 + C185 * C106 + C186 * C107) *
               C601 -
           ((C632 + C633) * C107 + (C634 + C635) * C106 + (C636 + C637) * C105 +
            (C638 + C639) * C104 +
            ((C113 * C375 + C32632 * C391) * C32615 +
             (C113 * C361 + C32632 * C376) * C114) *
                C103) *
               C602) *
              C479 +
          ((((C113 * C721 + C32632 * C726) * C114 +
             (C113 * C727 + C32632 * C736) * C32615) *
                C103 +
            ((C113 * C722 + C32632 * C728) * C114 +
             (C113 * C729 + C32632 * C737) * C32615) *
                C104 +
            ((C113 * C723 + C32632 * C730) * C114 +
             (C113 * C731 + C32632 * C738) * C32615) *
                C105 +
            ((C113 * C724 + C32632 * C732) * C114 +
             (C113 * C733 + C32632 * C739) * C32615) *
                C106 +
            ((C113 * C725 + C32632 * C734) * C114 +
             (C113 * C735 + C32632 * C740) * C32615) *
                C107) *
               C602 -
           ((C512 + C513) * C107 + (C514 + C515) * C106 + (C516 + C517) * C105 +
            (C518 + C519) * C104 +
            ((C113 * C270 + C32632 * C286) * C32615 +
             (C113 * C256 + C32632 * C271) * C114) *
                C103) *
               C601) *
              C480) *
         C32566) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C32632 * C122) * C5477 +
             (C113 * C123 + C32632 * C136) * C5471 + C1056 * C5478 +
             C1057 * C5472 + C1058 * C5479 + C1059 * C32904) *
                C32936 +
            (C5481 + C5482 + C5483 + C5484 + C5485 + C5486) * C32923 +
            C5503 * C32893) *
               C601 -
           ((C6028 + C6029 + C6030 + C6031 + C6032 + C6033) * C32893 +
            (C6034 + C6035 + C6036 + C6037 + C6038 + C6039) * C32923 +
            (C1726 * C32904 + C1727 * C5479 + C1728 * C5472 + C1729 * C5478 +
             (C113 * C375 + C32632 * C391) * C5471 +
             (C113 * C361 + C32632 * C376) * C5477) *
                C32936) *
               C602) *
              C479 +
          (((C1729 * C5477 + C1728 * C5471 + C1727 * C5478 + C1726 * C5472 +
             (C113 * C1705 + C32632 * C1708) * C5479 +
             (C113 * C1709 + C32632 * C1714) * C32904) *
                C32936 +
            (C1551 * C5477 + C1550 * C5471 + C1549 * C5478 + C1548 * C5472 +
             (C113 * C1706 + C32632 * C1710) * C5479 +
             (C113 * C1711 + C32632 * C1715) * C32904) *
                C32923 +
            (C1547 * C5477 + C1546 * C5471 + C1545 * C5478 + C1544 * C5472 +
             (C113 * C1707 + C32632 * C1712) * C5479 +
             (C113 * C1713 + C32632 * C1716) * C32904) *
                C32893) *
               C602 -
           ((C5870 + C5871 + C5872 + C5873 + C5874 + C5875) * C32893 +
            (C5876 + C5877 + C5878 + C5879 + C5880 + C5881) * C32923 +
            (C1064 * C32904 + C1065 * C5479 + C1059 * C5472 + C1058 * C5478 +
             C1057 * C5471 + C1056 * C5477) *
                C32936) *
               C601) *
              C480) *
         C32566) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C32632 * C122) * C6253 +
            (C113 * C123 + C32632 * C136) * C6247 + C1056 * C6254 +
            C1057 * C6248 + C1058 * C6255 + C1059 * C6249 + C1065 * C6256 +
            C1064 * C6250 + C6337 * C6257 + C6338 * C6251) *
               C32533 * C601 -
           (C6687 * C6251 + C6688 * C6257 + C6689 * C6250 + C6690 * C6256 +
            C1726 * C6249 + C1727 * C6255 + C1728 * C6248 + C1729 * C6254 +
            (C113 * C375 + C32632 * C391) * C6247 +
            (C113 * C361 + C32632 * C376) * C6253) *
               C32533 * C602) *
              C479 +
          ((C1729 * C6253 + C1728 * C6247 + C1727 * C6254 + C1726 * C6248 +
            C6690 * C6255 + C6689 * C6249 + C6688 * C6256 + C6687 * C6250 +
            (C113 * C6674 + C32632 * C6675) * C6257 +
            (C113 * C6676 + C32632 * C6677) * C6251) *
               C32533 * C602 -
           (C6339 * C6251 + C6340 * C6257 + C6338 * C6250 + C6337 * C6256 +
            C1064 * C6249 + C1065 * C6255 + C1059 * C6248 + C1058 * C6254 +
            C1057 * C6247 + C1056 * C6253) *
               C32533 * C601) *
              C480) *
         C32566) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C10223 * C115 + C10220 * C122 + C10224 * C361 + C10221 * C376 +
              C10225 * C362 + C32907 * C377) *
                 C114 +
             (C10223 * C123 + C10220 * C136 + C10224 * C375 + C10221 * C391 +
              C10225 * C378 + C32907 * C392) *
                 C32615) *
                C32936 +
            ((C10263 + C10264 + C10265) * C114 +
             (C10266 + C10267 + C10268) * C32615) *
                C32923 +
            C10287 * C32893) *
               C601 -
           (((C10860 + C10861 + C10862) * C32615 +
             (C10863 + C10864 + C10865) * C114) *
                C32893 +
            ((C10866 + C10867 + C10868) * C32615 +
             (C10869 + C10870 + C10871) * C114) *
                C32923 +
            ((C10225 * C2136 + C32907 * C2146 + C10224 * C378 + C10221 * C392 +
              C10223 * C375 + C10220 * C391) *
                 C32615 +
             (C10225 * C2128 + C32907 * C2137 + C10224 * C362 + C10221 * C377 +
              C10223 * C361 + C10220 * C376) *
                 C114) *
                C32936) *
               C602) *
              C479 +
          ((((C10223 * C721 + C10220 * C726 + C10224 * C1178 + C10221 * C1190 +
              C10225 * C2668 + C32907 * C2671) *
                 C114 +
             (C10223 * C727 + C10220 * C736 + C10224 * C1191 + C10221 * C1205 +
              C10225 * C2672 + C32907 * C2677) *
                 C32615) *
                C32936 +
            ((C10223 * C722 + C10220 * C728 + C10224 * C1180 + C10221 * C1194 +
              C10225 * C2669 + C32907 * C2673) *
                 C114 +
             (C10223 * C729 + C10220 * C737 + C10224 * C1195 + C10221 * C1207 +
              C10225 * C2674 + C32907 * C2678) *
                 C32615) *
                C32923 +
            ((C10223 * C723 + C10220 * C730 + C10224 * C1182 + C10221 * C1198 +
              C10225 * C2670 + C32907 * C2675) *
                 C114 +
             (C10223 * C731 + C10220 * C738 + C10224 * C1199 + C10221 * C1209 +
              C10225 * C2676 + C32907 * C2679) *
                 C32615) *
                C32893) *
               C602 -
           (((C10678 + C10679 + C10680) * C32615 +
             (C10681 + C10682 + C10683) * C114) *
                C32893 +
            ((C10684 + C10685 + C10686) * C32615 +
             (C10687 + C10688 + C10689) * C114) *
                C32923 +
            ((C10225 * C1191 + C32907 * C1205 + C10224 * C727 + C10221 * C736 +
              C10223 * C270 + C10220 * C286) *
                 C32615 +
             (C10225 * C1178 + C32907 * C1190 + C10224 * C721 + C10221 * C726 +
              C10223 * C256 + C10220 * C271) *
                 C114) *
                C32936) *
               C601) *
              C480) *
         C32566) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C10223 * C115 + C10220 * C122 + C10224 * C361 + C10221 * C376 +
             C10225 * C362 + C32907 * C377) *
                C857 +
            (C10223 * C123 + C10220 * C136 + C10224 * C375 + C10221 * C391 +
             C10225 * C378 + C32907 * C392) *
                C32939 +
            (C11274 + C11275 + C11276) * C858 +
            (C11277 + C11278 + C11279) * C32927 + C11294 * C859 +
            C11295 * C32904) *
               C32533 * C601 -
           ((C11886 + C11887 + C11888) * C32904 +
            (C11889 + C11890 + C11891) * C859 +
            (C11892 + C11893 + C11894) * C32927 +
            (C11895 + C11896 + C11897) * C858 +
            (C10225 * C2136 + C32907 * C2146 + C10224 * C378 + C10221 * C392 +
             C10223 * C375 + C10220 * C391) *
                C32939 +
            (C10225 * C2128 + C32907 * C2137 + C10224 * C362 + C10221 * C377 +
             C10223 * C361 + C10220 * C376) *
                C857) *
               C32533 * C602) *
              C479 +
          (((C11897 + C11896 + C11895) * C857 +
            (C11894 + C11893 + C11892) * C32939 +
            (C11891 + C11890 + C11889) * C858 +
            (C11888 + C11887 + C11886) * C32927 +
            (C10223 * C1705 + C10220 * C1708 + C10224 * C6403 + C10221 * C6407 +
             C10225 * C7554 + C32907 * C7555) *
                C859 +
            (C10223 * C1709 + C10220 * C1714 + C10224 * C6408 + C10221 * C6412 +
             C10225 * C7556 + C32907 * C7557) *
                C32904) *
               C32533 * C602 -
           ((C11286 + C11287 + C11288) * C32904 +
            (C11289 + C11290 + C11291) * C859 +
            (C11285 + C11284 + C11283) * C32927 +
            (C11282 + C11281 + C11280) * C858 +
            (C11279 + C11278 + C11277) * C32939 +
            (C11276 + C11275 + C11274) * C857) *
               C32533 * C601) *
              C480) *
         C32566) /
            (p * q * std::sqrt(p + q));
    d2ee[72] +=
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             ((((C113 * C115 + C32632 * C122) * C114 +
                (C113 * C123 + C32632 * C136) * C32615) *
                   C103 +
               (C174 + C175) * C104 + C184 * C105 + C185 * C106 + C186 * C107) *
                  C32592 * C32578 * C110 -
              ((C182 + C183) * C107 + (C181 + C180) * C106 +
               (C179 + C178) * C105 + (C177 + C176) * C104 +
               (C175 + C174) * C103) *
                  C32592 * C32578 * C111 +
              (C184 * C103 + C185 * C104 + C186 * C105 + (C183 + C182) * C106 +
               ((C113 * C121 + C32632 * C134) * C114 +
                (C113 * C135 + C32632 * C142) * C32615) *
                   C107) *
                  C32592 * C32578 * C112) +
         std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             ((((C113 * C115 + C32632 * C122) * C114 +
                (C113 * C123 + C32632 * C136) * C32615) *
                   C103 +
               (C174 + C175) * C104 + C184 * C105 + C185 * C106 + C186 * C107) *
                  C32592 * C248 -
              (((C113 * C262 + C32632 * C282) * C32615 +
                (C113 * C252 + C32632 * C263) * C114) *
                   C107 +
               ((C113 * C264 + C32632 * C283) * C32615 +
                (C113 * C253 + C32632 * C265) * C114) *
                   C106 +
               ((C113 * C266 + C32632 * C284) * C32615 +
                (C113 * C254 + C32632 * C267) * C114) *
                   C105 +
               ((C113 * C268 + C32632 * C285) * C32615 +
                (C113 * C255 + C32632 * C269) * C114) *
                   C104 +
               ((C113 * C270 + C32632 * C286) * C32615 +
                (C113 * C256 + C32632 * C271) * C114) *
                   C103) *
                  C32592 * C249 +
              (((C113 * C257 + C32632 * C272) * C114 +
                (C113 * C273 + C32632 * C287) * C32615) *
                   C103 +
               ((C113 * C258 + C32632 * C274) * C114 +
                (C113 * C275 + C32632 * C288) * C32615) *
                   C104 +
               ((C113 * C259 + C32632 * C276) * C114 +
                (C113 * C277 + C32632 * C289) * C32615) *
                   C105 +
               ((C113 * C260 + C32632 * C278) * C114 +
                (C113 * C279 + C32632 * C290) * C32615) *
                   C106 +
               ((C113 * C261 + C32632 * C280) * C114 +
                (C113 * C281 + C32632 * C291) * C32615) *
                   C107) *
                  C32592 * C250) *
             C32566) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C32632 * C122) * C114 +
            (C113 * C123 + C32632 * C136) * C32615) *
               C103 +
           (C174 + C175) * C104 + C184 * C105 + C185 * C106 + C186 * C107) *
              C354 -
          (((C113 * C367 + C32632 * C387) * C32615 +
            (C113 * C357 + C32632 * C368) * C114) *
               C107 +
           ((C113 * C369 + C32632 * C388) * C32615 +
            (C113 * C358 + C32632 * C370) * C114) *
               C106 +
           ((C113 * C371 + C32632 * C389) * C32615 +
            (C113 * C359 + C32632 * C372) * C114) *
               C105 +
           ((C113 * C373 + C32632 * C390) * C32615 +
            (C113 * C360 + C32632 * C374) * C114) *
               C104 +
           ((C113 * C375 + C32632 * C391) * C32615 +
            (C113 * C361 + C32632 * C376) * C114) *
               C103) *
              C355 +
          (((C113 * C362 + C32632 * C377) * C114 +
            (C113 * C378 + C32632 * C392) * C32615) *
               C103 +
           ((C113 * C363 + C32632 * C379) * C114 +
            (C113 * C380 + C32632 * C393) * C32615) *
               C104 +
           ((C113 * C364 + C32632 * C381) * C114 +
            (C113 * C382 + C32632 * C394) * C32615) *
               C105 +
           ((C113 * C365 + C32632 * C383) * C114 +
            (C113 * C384 + C32632 * C395) * C32615) *
               C106 +
           ((C113 * C366 + C32632 * C385) * C114 +
            (C113 * C386 + C32632 * C396) * C32615) *
               C107) *
              C356) *
         C32578 * C32566) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C32632 * C122) * C857 +
            (C113 * C123 + C32632 * C136) * C32939 +
            (C113 * C256 + C32632 * C271) * C858 +
            (C113 * C270 + C32632 * C286) * C32927 +
            (C113 * C257 + C32632 * C272) * C859 +
            (C113 * C273 + C32632 * C287) * C32904) *
               C854 +
           (C861 + C862 + C863 + C864 + C892 + C893) * C855 + C901 * C32893) *
              C32592 * C32578 * C110 -
          ((C897 + C898 + C881 + C882 + C883 + C884) * C32893 +
           (C896 + C895 + C872 + C871 + C870 + C869) * C855 +
           (C893 + C892 + C864 + C863 + C862 + C861) * C854) *
              C32592 * C32578 * C111 +
          (C901 * C854 + (C884 + C883 + C882 + C881 + C898 + C897) * C855 +
           (C170 * C857 + C171 * C32939 + C505 * C858 + C504 * C32927 +
            (C113 * C261 + C32632 * C280) * C859 +
            (C113 * C281 + C32632 * C291) * C32904) *
               C32893) *
              C32592 * C32578 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C32632 * C122) * C857 +
            (C113 * C123 + C32632 * C136) * C32939 + C1056 * C858 +
            C1057 * C32927 + C1058 * C859 + C1059 * C32904) *
               C854 +
           (C861 + C862 + C863 + C864 + C892 + C893) * C855 + C901 * C32893) *
              C32592 * C248 -
          ((C1060 * C32904 + C1061 * C859 + C889 * C32927 + C888 * C858 +
            C508 * C32939 + C509 * C857) *
               C32893 +
           (C1062 * C32904 + C1063 * C859 + C886 * C32927 + C885 * C858 +
            C510 * C32939 + C511 * C857) *
               C855 +
           (C1064 * C32904 + C1065 * C859 + C1059 * C32927 + C1058 * C858 +
            C1057 * C32939 + C1056 * C857) *
               C854) *
              C32592 * C249 +
          ((C1058 * C857 + C1059 * C32939 + C1065 * C858 + C1064 * C32927 +
            (C113 * C1014 + C32632 * C1023) * C859 +
            (C113 * C1024 + C32632 * C1032) * C32904) *
               C854 +
           (C885 * C857 + C886 * C32939 + C1063 * C858 + C1062 * C32927 +
            (C113 * C1015 + C32632 * C1025) * C859 +
            (C113 * C1026 + C32632 * C1033) * C32904) *
               C855 +
           (C888 * C857 + C889 * C32939 + C1061 * C858 + C1060 * C32927 +
            (C113 * C1016 + C32632 * C1027) * C859 +
            (C113 * C1028 + C32632 * C1034) * C32904) *
               C32893) *
              C32592 * C250) *
         C32566) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C32632 * C122) * C857 +
            (C113 * C123 + C32632 * C136) * C32939 + C1056 * C858 +
            C1057 * C32927 + C1058 * C859 + C1059 * C32904) *
               C854 +
           (C861 + C862 + C863 + C864 + C892 + C893) * C855 + C901 * C32893) *
              C354 -
          (((C113 * C1184 + C32632 * C1202) * C32904 +
            (C113 * C1175 + C32632 * C1185) * C859 +
            (C113 * C731 + C32632 * C738) * C32927 +
            (C113 * C723 + C32632 * C730) * C858 + C628 * C32939 +
            C629 * C857) *
               C32893 +
           ((C113 * C1186 + C32632 * C1203) * C32904 +
            (C113 * C1176 + C32632 * C1187) * C859 +
            (C113 * C729 + C32632 * C737) * C32927 +
            (C113 * C722 + C32632 * C728) * C858 + C630 * C32939 +
            C631 * C857) *
               C855 +
           ((C113 * C1188 + C32632 * C1204) * C32904 +
            (C113 * C1177 + C32632 * C1189) * C859 +
            (C113 * C727 + C32632 * C736) * C32927 +
            (C113 * C721 + C32632 * C726) * C858 +
            (C113 * C375 + C32632 * C391) * C32939 +
            (C113 * C361 + C32632 * C376) * C857) *
               C854) *
              C355 +
          (((C113 * C362 + C32632 * C377) * C857 +
            (C113 * C378 + C32632 * C392) * C32939 +
            (C113 * C1178 + C32632 * C1190) * C858 +
            (C113 * C1191 + C32632 * C1205) * C32927 +
            (C113 * C1179 + C32632 * C1192) * C859 +
            (C113 * C1193 + C32632 * C1206) * C32904) *
               C854 +
           ((C113 * C363 + C32632 * C379) * C857 +
            (C113 * C380 + C32632 * C393) * C32939 +
            (C113 * C1180 + C32632 * C1194) * C858 +
            (C113 * C1195 + C32632 * C1207) * C32927 +
            (C113 * C1181 + C32632 * C1196) * C859 +
            (C113 * C1197 + C32632 * C1208) * C32904) *
               C855 +
           ((C113 * C364 + C32632 * C381) * C857 +
            (C113 * C382 + C32632 * C394) * C32939 +
            (C113 * C1182 + C32632 * C1198) * C858 +
            (C113 * C1199 + C32632 * C1209) * C32927 +
            (C113 * C1183 + C32632 * C1200) * C859 +
            (C113 * C1201 + C32632 * C1210) * C32904) *
               C32893) *
              C356) *
         C32578 * C32566) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C32632 * C122) * C5477 +
            (C113 * C123 + C32632 * C136) * C5471 + C1056 * C5478 +
            C1057 * C5472 + C1058 * C5479 + C1059 * C32904) *
               C32936 +
           (C5481 + C5482 + C5483 + C5484 + C5485 + C5486) * C32923 +
           C5503 * C32893) *
              C32592 * C32578 * C110 -
          ((C5493 + C5494 + C5495 + C5496 + C5497 + C5498) * C32893 +
           (C5492 + C5491 + C5490 + C5489 + C5488 + C5487) * C32923 +
           (C5486 + C5485 + C5484 + C5483 + C5482 + C5481) * C32936) *
              C32592 * C32578 * C111 +
          (C5503 * C32936 +
           (C5498 + C5497 + C5496 + C5495 + C5494 + C5493) * C32923 +
           (C170 * C5477 + C171 * C5471 + C505 * C5478 + C504 * C5472 +
            (C113 * C261 + C32632 * C280) * C5479 +
            (C113 * C281 + C32632 * C291) * C32904) *
               C32893) *
              C32592 * C32578 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C32632 * C122) * C5477 +
            (C113 * C123 + C32632 * C136) * C5471 + C1056 * C5478 +
            C1057 * C5472 + C1058 * C5479 + C1059 * C32904) *
               C32936 +
           (C5481 + C5482 + C5483 + C5484 + C5485 + C5486) * C32923 +
           C5503 * C32893) *
              C32592 * C248 -
          ((C1060 * C32904 + C1061 * C5479 + C889 * C5472 + C888 * C5478 +
            C508 * C5471 + C509 * C5477) *
               C32893 +
           (C1062 * C32904 + C1063 * C5479 + C886 * C5472 + C885 * C5478 +
            C510 * C5471 + C511 * C5477) *
               C32923 +
           (C1064 * C32904 + C1065 * C5479 + C1059 * C5472 + C1058 * C5478 +
            C1057 * C5471 + C1056 * C5477) *
               C32936) *
              C32592 * C249 +
          ((C1058 * C5477 + C1059 * C5471 + C1065 * C5478 + C1064 * C5472 +
            (C113 * C1014 + C32632 * C1023) * C5479 +
            (C113 * C1024 + C32632 * C1032) * C32904) *
               C32936 +
           (C885 * C5477 + C886 * C5471 + C1063 * C5478 + C1062 * C5472 +
            (C113 * C1015 + C32632 * C1025) * C5479 +
            (C113 * C1026 + C32632 * C1033) * C32904) *
               C32923 +
           (C888 * C5477 + C889 * C5471 + C1061 * C5478 + C1060 * C5472 +
            (C113 * C1016 + C32632 * C1027) * C5479 +
            (C113 * C1028 + C32632 * C1034) * C32904) *
               C32893) *
              C32592 * C250) *
         C32566) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C32632 * C122) * C5477 +
            (C113 * C123 + C32632 * C136) * C5471 + C1056 * C5478 +
            C1057 * C5472 + C1058 * C5479 + C1059 * C32904) *
               C32936 +
           (C5481 + C5482 + C5483 + C5484 + C5485 + C5486) * C32923 +
           C5503 * C32893) *
              C354 -
          ((C1544 * C32904 + C1545 * C5479 + C1546 * C5472 + C1547 * C5478 +
            C628 * C5471 + C629 * C5477) *
               C32893 +
           (C1548 * C32904 + C1549 * C5479 + C1550 * C5472 + C1551 * C5478 +
            C630 * C5471 + C631 * C5477) *
               C32923 +
           (C1726 * C32904 + C1727 * C5479 + C1728 * C5472 + C1729 * C5478 +
            (C113 * C375 + C32632 * C391) * C5471 +
            (C113 * C361 + C32632 * C376) * C5477) *
               C32936) *
              C355 +
          (((C113 * C362 + C32632 * C377) * C5477 +
            (C113 * C378 + C32632 * C392) * C5471 +
            (C113 * C1178 + C32632 * C1190) * C5478 +
            (C113 * C1191 + C32632 * C1205) * C5472 +
            (C113 * C1179 + C32632 * C1192) * C5479 +
            (C113 * C1193 + C32632 * C1206) * C32904) *
               C32936 +
           ((C113 * C363 + C32632 * C379) * C5477 +
            (C113 * C380 + C32632 * C393) * C5471 +
            (C113 * C1180 + C32632 * C1194) * C5478 +
            (C113 * C1195 + C32632 * C1207) * C5472 +
            (C113 * C1181 + C32632 * C1196) * C5479 +
            (C113 * C1197 + C32632 * C1208) * C32904) *
               C32923 +
           ((C113 * C364 + C32632 * C381) * C5477 +
            (C113 * C382 + C32632 * C394) * C5471 +
            (C113 * C1182 + C32632 * C1198) * C5478 +
            (C113 * C1199 + C32632 * C1209) * C5472 +
            (C113 * C1183 + C32632 * C1200) * C5479 +
            (C113 * C1201 + C32632 * C1210) * C32904) *
               C32893) *
              C356) *
         C32578 * C32566) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C115 + C32632 * C122) * C6253 +
           (C113 * C123 + C32632 * C136) * C6247 + C1056 * C6254 +
           C1057 * C6248 + C1058 * C6255 + C1059 * C6249 + C1065 * C6256 +
           C1064 * C6250 + (C113 * C1014 + C32632 * C1023) * C6257 +
           (C113 * C1024 + C32632 * C1032) * C6251) *
              C32533 * C32592 * C32578 * C110 -
          ((C113 * C1026 + C32632 * C1033) * C6251 +
           (C113 * C1015 + C32632 * C1025) * C6257 + C1062 * C6250 +
           C1063 * C6256 + C886 * C6249 + C885 * C6255 + C510 * C6248 +
           C511 * C6254 + C165 * C6247 + C164 * C6253) *
              C32533 * C32592 * C32578 * C111 +
          (C166 * C6253 + C167 * C6247 + C509 * C6254 + C508 * C6248 +
           C888 * C6255 + C889 * C6249 + C1061 * C6256 + C1060 * C6250 +
           (C113 * C1016 + C32632 * C1027) * C6257 +
           (C113 * C1028 + C32632 * C1034) * C6251) *
              C32533 * C32592 * C32578 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C115 + C32632 * C122) * C6253 +
           (C113 * C123 + C32632 * C136) * C6247 + C1056 * C6254 +
           C1057 * C6248 + C1058 * C6255 + C1059 * C6249 + C1065 * C6256 +
           C1064 * C6250 + C6337 * C6257 + C6338 * C6251) *
              C32533 * C32592 * C248 -
          (C6339 * C6251 + C6340 * C6257 + C6338 * C6250 + C6337 * C6256 +
           C1064 * C6249 + C1065 * C6255 + C1059 * C6248 + C1058 * C6254 +
           C1057 * C6247 + C1056 * C6253) *
              C32533 * C32592 * C249 +
          (C1058 * C6253 + C1059 * C6247 + C1065 * C6254 + C1064 * C6248 +
           C6337 * C6255 + C6338 * C6249 + C6340 * C6256 + C6339 * C6250 +
           (C113 * C6321 + C32632 * C6324) * C6257 +
           (C113 * C6325 + C32632 * C6327) * C6251) *
              C32533 * C32592 * C250) *
         C32566) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C115 + C32632 * C122) * C6253 +
           (C113 * C123 + C32632 * C136) * C6247 + C1056 * C6254 +
           C1057 * C6248 + C1058 * C6255 + C1059 * C6249 + C1065 * C6256 +
           C1064 * C6250 + C6337 * C6257 + C6338 * C6251) *
              C32533 * C354 -
          ((C113 * C6405 + C32632 * C6411) * C6251 +
           (C113 * C6402 + C32632 * C6406) * C6257 +
           (C113 * C1709 + C32632 * C1714) * C6250 +
           (C113 * C1705 + C32632 * C1708) * C6256 + C1726 * C6249 +
           C1727 * C6255 + C1728 * C6248 + C1729 * C6254 +
           (C113 * C375 + C32632 * C391) * C6247 +
           (C113 * C361 + C32632 * C376) * C6253) *
              C32533 * C355 +
          ((C113 * C362 + C32632 * C377) * C6253 +
           (C113 * C378 + C32632 * C392) * C6247 +
           (C113 * C1178 + C32632 * C1190) * C6254 +
           (C113 * C1191 + C32632 * C1205) * C6248 +
           (C113 * C1179 + C32632 * C1192) * C6255 +
           (C113 * C1193 + C32632 * C1206) * C6249 +
           (C113 * C6403 + C32632 * C6407) * C6256 +
           (C113 * C6408 + C32632 * C6412) * C6250 +
           (C113 * C6404 + C32632 * C6409) * C6257 +
           (C113 * C6410 + C32632 * C6413) * C6251) *
              C32533 * C356) *
         C32578 * C32566) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C10223 * C115 + C10220 * C122 + C10224 * C361 + C10221 * C376 +
             C10225 * C362 + C32907 * C377) *
                C114 +
            (C10223 * C123 + C10220 * C136 + C10224 * C375 + C10221 * C391 +
             C10225 * C378 + C32907 * C392) *
                C32615) *
               C32936 +
           ((C10263 + C10264 + C10265) * C114 +
            (C10266 + C10267 + C10268) * C32615) *
               C32923 +
           C10287 * C32893) *
              C32592 * C32578 * C110 -
          (((C10275 + C10276 + C10277) * C32615 +
            (C10278 + C10279 + C10280) * C114) *
               C32893 +
           ((C10274 + C10273 + C10272) * C32615 +
            (C10271 + C10270 + C10269) * C114) *
               C32923 +
           ((C10268 + C10267 + C10266) * C32615 +
            (C10265 + C10264 + C10263) * C114) *
               C32936) *
              C32592 * C32578 * C111 +
          (C10287 * C32936 +
           ((C10280 + C10279 + C10278) * C114 +
            (C10277 + C10276 + C10275) * C32615) *
               C32923 +
           ((C10223 * C119 + C10220 * C130 + C10224 * C357 + C10221 * C368 +
             C10225 * C366 + C32907 * C385) *
                C114 +
            (C10223 * C131 + C10220 * C140 + C10224 * C367 + C10221 * C387 +
             C10225 * C386 + C32907 * C396) *
                C32615) *
               C32893) *
              C32592 * C32578 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C10223 * C115 + C10220 * C122 + C10224 * C361 + C10221 * C376 +
             C10225 * C362 + C32907 * C377) *
                C114 +
            (C10223 * C123 + C10220 * C136 + C10224 * C375 + C10221 * C391 +
             C10225 * C378 + C32907 * C392) *
                C32615) *
               C32936 +
           ((C10263 + C10264 + C10265) * C114 +
            (C10266 + C10267 + C10268) * C32615) *
               C32923 +
           C10287 * C32893) *
              C32592 * C248 -
          (((C10225 * C1199 + C32907 * C1209 + C10224 * C731 + C10221 * C738 +
             C10223 * C266 + C10220 * C284) *
                C32615 +
            (C10225 * C1182 + C32907 * C1198 + C10224 * C723 + C10221 * C730 +
             C10223 * C254 + C10220 * C267) *
                C114) *
               C32893 +
           ((C10225 * C1195 + C32907 * C1207 + C10224 * C729 + C10221 * C737 +
             C10223 * C268 + C10220 * C285) *
                C32615 +
            (C10225 * C1180 + C32907 * C1194 + C10224 * C722 + C10221 * C728 +
             C10223 * C255 + C10220 * C269) *
                C114) *
               C32923 +
           ((C10225 * C1191 + C32907 * C1205 + C10224 * C727 + C10221 * C736 +
             C10223 * C270 + C10220 * C286) *
                C32615 +
            (C10225 * C1178 + C32907 * C1190 + C10224 * C721 + C10221 * C726 +
             C10223 * C256 + C10220 * C271) *
                C114) *
               C32936) *
              C32592 * C249 +
          (((C10223 * C257 + C10220 * C272 + C10224 * C1177 + C10221 * C1189 +
             C10225 * C1179 + C32907 * C1192) *
                C114 +
            (C10223 * C273 + C10220 * C287 + C10224 * C1188 + C10221 * C1204 +
             C10225 * C1193 + C32907 * C1206) *
                C32615) *
               C32936 +
           ((C10223 * C258 + C10220 * C274 + C10224 * C1176 + C10221 * C1187 +
             C10225 * C1181 + C32907 * C1196) *
                C114 +
            (C10223 * C275 + C10220 * C288 + C10224 * C1186 + C10221 * C1203 +
             C10225 * C1197 + C32907 * C1208) *
                C32615) *
               C32923 +
           ((C10223 * C259 + C10220 * C276 + C10224 * C1175 + C10221 * C1185 +
             C10225 * C1183 + C32907 * C1200) *
                C114 +
            (C10223 * C277 + C10220 * C289 + C10224 * C1184 + C10221 * C1202 +
             C10225 * C1201 + C32907 * C1210) *
                C32615) *
               C32893) *
              C32592 * C250) *
         C32566) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C10223 * C115 + C10220 * C122 + C10224 * C361 + C10221 * C376 +
             C10225 * C362 + C32907 * C377) *
                C114 +
            (C10223 * C123 + C10220 * C136 + C10224 * C375 + C10221 * C391 +
             C10225 * C378 + C32907 * C392) *
                C32615) *
               C32936 +
           ((C10263 + C10264 + C10265) * C114 +
            (C10266 + C10267 + C10268) * C32615) *
               C32923 +
           C10287 * C32893) *
              C354 -
          (((C10225 * C2132 + C32907 * C2144 + C10224 * C382 + C10221 * C394 +
             C10223 * C371 + C10220 * C389) *
                C32615 +
            (C10225 * C2126 + C32907 * C2133 + C10224 * C364 + C10221 * C381 +
             C10223 * C359 + C10220 * C372) *
                C114) *
               C32893 +
           ((C10225 * C2134 + C32907 * C2145 + C10224 * C380 + C10221 * C393 +
             C10223 * C373 + C10220 * C390) *
                C32615 +
            (C10225 * C2127 + C32907 * C2135 + C10224 * C363 + C10221 * C379 +
             C10223 * C360 + C10220 * C374) *
                C114) *
               C32923 +
           ((C10225 * C2136 + C32907 * C2146 + C10224 * C378 + C10221 * C392 +
             C10223 * C375 + C10220 * C391) *
                C32615 +
            (C10225 * C2128 + C32907 * C2137 + C10224 * C362 + C10221 * C377 +
             C10223 * C361 + C10220 * C376) *
                C114) *
               C32936) *
              C355 +
          (((C10223 * C362 + C10220 * C377 + C10224 * C2128 + C10221 * C2137 +
             C10225 * C2129 + C32907 * C2138) *
                C114 +
            (C10223 * C378 + C10220 * C392 + C10224 * C2136 + C10221 * C2146 +
             C10225 * C2139 + C32907 * C2147) *
                C32615) *
               C32936 +
           ((C10223 * C363 + C10220 * C379 + C10224 * C2127 + C10221 * C2135 +
             C10225 * C2130 + C32907 * C2140) *
                C114 +
            (C10223 * C380 + C10220 * C393 + C10224 * C2134 + C10221 * C2145 +
             C10225 * C2141 + C32907 * C2148) *
                C32615) *
               C32923 +
           ((C10223 * C364 + C10220 * C381 + C10224 * C2126 + C10221 * C2133 +
             C10225 * C2131 + C32907 * C2142) *
                C114 +
            (C10223 * C382 + C10220 * C394 + C10224 * C2132 + C10221 * C2144 +
             C10225 * C2143 + C32907 * C2149) *
                C32615) *
               C32893) *
              C356) *
         C32578 * C32566) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C10223 * C115 + C10220 * C122 + C10224 * C361 + C10221 * C376 +
            C10225 * C362 + C32907 * C377) *
               C857 +
           (C10223 * C123 + C10220 * C136 + C10224 * C375 + C10221 * C391 +
            C10225 * C378 + C32907 * C392) *
               C32939 +
           (C10223 * C256 + C10220 * C271 + C10224 * C721 + C10221 * C726 +
            C10225 * C1178 + C32907 * C1190) *
               C858 +
           (C10223 * C270 + C10220 * C286 + C10224 * C727 + C10221 * C736 +
            C10225 * C1191 + C32907 * C1205) *
               C32927 +
           (C10223 * C257 + C10220 * C272 + C10224 * C1177 + C10221 * C1189 +
            C10225 * C1179 + C32907 * C1192) *
               C859 +
           (C10223 * C273 + C10220 * C287 + C10224 * C1188 + C10221 * C1204 +
            C10225 * C1193 + C32907 * C1206) *
               C32904) *
              C32533 * C32592 * C32578 * C110 -
          ((C10225 * C1197 + C32907 * C1208 + C10224 * C1186 + C10221 * C1203 +
            C10223 * C275 + C10220 * C288) *
               C32904 +
           (C10225 * C1181 + C32907 * C1196 + C10224 * C1176 + C10221 * C1187 +
            C10223 * C258 + C10220 * C274) *
               C859 +
           (C10684 + C10685 + C10686) * C32927 +
           (C10687 + C10688 + C10689) * C858 +
           (C10268 + C10267 + C10266) * C32939 +
           (C10265 + C10264 + C10263) * C857) *
              C32533 * C32592 * C32578 * C111 +
          (C10283 * C857 + C10284 * C32939 + (C10683 + C10682 + C10681) * C858 +
           (C10680 + C10679 + C10678) * C32927 +
           (C10223 * C259 + C10220 * C276 + C10224 * C1175 + C10221 * C1185 +
            C10225 * C1183 + C32907 * C1200) *
               C859 +
           (C10223 * C277 + C10220 * C289 + C10224 * C1184 + C10221 * C1202 +
            C10225 * C1201 + C32907 * C1210) *
               C32904) *
              C32533 * C32592 * C32578 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C10223 * C115 + C10220 * C122 + C10224 * C361 + C10221 * C376 +
            C10225 * C362 + C32907 * C377) *
               C857 +
           (C10223 * C123 + C10220 * C136 + C10224 * C375 + C10221 * C391 +
            C10225 * C378 + C32907 * C392) *
               C32939 +
           (C11274 + C11275 + C11276) * C858 +
           (C11277 + C11278 + C11279) * C32927 + C11294 * C859 +
           C11295 * C32904) *
              C32533 * C32592 * C248 -
          ((C11286 + C11287 + C11288) * C32904 +
           (C11289 + C11290 + C11291) * C859 +
           (C11285 + C11284 + C11283) * C32927 +
           (C11282 + C11281 + C11280) * C858 +
           (C11279 + C11278 + C11277) * C32939 +
           (C11276 + C11275 + C11274) * C857) *
              C32533 * C32592 * C249 +
          (C11294 * C857 + C11295 * C32939 + (C11291 + C11290 + C11289) * C858 +
           (C11288 + C11287 + C11286) * C32927 +
           (C10223 * C1014 + C10220 * C1023 + C10224 * C6402 + C10221 * C6406 +
            C10225 * C6404 + C32907 * C6409) *
               C859 +
           (C10223 * C1024 + C10220 * C1032 + C10224 * C6405 + C10221 * C6411 +
            C10225 * C6410 + C32907 * C6413) *
               C32904) *
              C32533 * C32592 * C250) *
         C32566) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C10223 * C115 + C10220 * C122 + C10224 * C361 + C10221 * C376 +
            C10225 * C362 + C32907 * C377) *
               C857 +
           (C10223 * C123 + C10220 * C136 + C10224 * C375 + C10221 * C391 +
            C10225 * C378 + C32907 * C392) *
               C32939 +
           (C11274 + C11275 + C11276) * C858 +
           (C11277 + C11278 + C11279) * C32927 + C11294 * C859 +
           C11295 * C32904) *
              C32533 * C354 -
          ((C10225 * C7081 + C32907 * C7087 + C10224 * C1193 + C10221 * C1206 +
            C10223 * C1188 + C10220 * C1204) *
               C32904 +
           (C10225 * C7078 + C32907 * C7082 + C10224 * C1179 + C10221 * C1192 +
            C10223 * C1177 + C10220 * C1189) *
               C859 +
           (C10225 * C2672 + C32907 * C2677 + C10224 * C1191 + C10221 * C1205 +
            C10223 * C727 + C10220 * C736) *
               C32927 +
           (C10225 * C2668 + C32907 * C2671 + C10224 * C1178 + C10221 * C1190 +
            C10223 * C721 + C10220 * C726) *
               C858 +
           (C10225 * C2136 + C32907 * C2146 + C10224 * C378 + C10221 * C392 +
            C10223 * C375 + C10220 * C391) *
               C32939 +
           (C10225 * C2128 + C32907 * C2137 + C10224 * C362 + C10221 * C377 +
            C10223 * C361 + C10220 * C376) *
               C857) *
              C32533 * C355 +
          ((C10223 * C362 + C10220 * C377 + C10224 * C2128 + C10221 * C2137 +
            C10225 * C2129 + C32907 * C2138) *
               C857 +
           (C10223 * C378 + C10220 * C392 + C10224 * C2136 + C10221 * C2146 +
            C10225 * C2139 + C32907 * C2147) *
               C32939 +
           (C10223 * C1178 + C10220 * C1190 + C10224 * C2668 + C10221 * C2671 +
            C10225 * C7079 + C32907 * C7083) *
               C858 +
           (C10223 * C1191 + C10220 * C1205 + C10224 * C2672 + C10221 * C2677 +
            C10225 * C7084 + C32907 * C7088) *
               C32927 +
           (C10223 * C1179 + C10220 * C1192 + C10224 * C7078 + C10221 * C7082 +
            C10225 * C7080 + C32907 * C7085) *
               C859 +
           (C10223 * C1193 + C10220 * C1206 + C10224 * C7081 + C10221 * C7087 +
            C10225 * C7086 + C32907 * C7089) *
               C32904) *
              C32533 * C356) *
         C32578 * C32566) /
            (p * q * std::sqrt(p + q));
    d2ee[73] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C32632 * C122) * C857 +
             (C113 * C123 + C32632 * C136) * C32939 + C1056 * C858 +
             C1057 * C32927 + C1058 * C859 + C1059 * C32904) *
                C854 +
            (C861 + C862 + C863 + C864 + C892 + C893) * C855 + C901 * C32893) *
               C601 -
           ((C1552 + C1553 + C1554 + C1555 + C1532 + C1533) * C32893 +
            (C1556 + C1557 + C1558 + C1559 + C1542 + C1543) * C855 +
            ((C113 * C1188 + C32632 * C1204) * C32904 +
             (C113 * C1177 + C32632 * C1189) * C859 +
             (C113 * C727 + C32632 * C736) * C32927 +
             (C113 * C721 + C32632 * C726) * C858 +
             (C113 * C375 + C32632 * C391) * C32939 +
             (C113 * C361 + C32632 * C376) * C857) *
                C854) *
               C602) *
              C32578 * C481 +
          (((C1543 + C1542 + C1559 + C1558 + C1557 + C1556) * C854 +
            (C1533 + C1532 + C1555 + C1554 + C1553 + C1552) * C855 +
            (C627 * C857 + C626 * C32939 +
             (C113 * C724 + C32632 * C732) * C858 +
             (C113 * C733 + C32632 * C739) * C32927 +
             (C113 * C1519 + C32632 * C1520) * C859 +
             (C113 * C1521 + C32632 * C1522) * C32904) *
                C32893) *
               C602 -
           ((C897 + C898 + C881 + C882 + C883 + C884) * C32893 +
            (C896 + C895 + C872 + C871 + C870 + C869) * C855 +
            (C893 + C892 + C864 + C863 + C862 + C861) * C854) *
               C601) *
              C32578 * C482)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C32632 * C122) * C114 +
             (C113 * C123 + C32632 * C136) * C32615) *
                C103 +
            (C174 + C175) * C104 + C184 * C105 + C185 * C106 + C186 * C107) *
               C601 -
           ((C632 + C633) * C107 + (C634 + C635) * C106 + (C636 + C637) * C105 +
            (C638 + C639) * C104 +
            ((C113 * C375 + C32632 * C391) * C32615 +
             (C113 * C361 + C32632 * C376) * C114) *
                C103) *
               C602) *
              C32578 * C481 +
          (((C639 + C638) * C103 + (C637 + C636) * C104 + (C635 + C634) * C105 +
            (C633 + C632) * C106 +
            ((C113 * C603 + C32632 * C604) * C114 +
             (C113 * C605 + C32632 * C606) * C32615) *
                C107) *
               C602 -
           ((C182 + C183) * C107 + (C181 + C180) * C106 + (C179 + C178) * C105 +
            (C177 + C176) * C104 + (C175 + C174) * C103) *
               C601) *
              C32578 * C482)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C32632 * C122) * C5477 +
             (C113 * C123 + C32632 * C136) * C5471 + C1056 * C5478 +
             C1057 * C5472 + C1058 * C5479 + C1059 * C32904) *
                C32936 +
            (C5481 + C5482 + C5483 + C5484 + C5485 + C5486) * C32923 +
            C5503 * C32893) *
               C601 -
           ((C6028 + C6029 + C6030 + C6031 + C6032 + C6033) * C32893 +
            (C6034 + C6035 + C6036 + C6037 + C6038 + C6039) * C32923 +
            (C1726 * C32904 + C1727 * C5479 + C1728 * C5472 + C1729 * C5478 +
             (C113 * C375 + C32632 * C391) * C5471 +
             (C113 * C361 + C32632 * C376) * C5477) *
                C32936) *
               C602) *
              C32578 * C481 +
          (((C6039 + C6038 + C6037 + C6036 + C6035 + C6034) * C32936 +
            (C6033 + C6032 + C6031 + C6030 + C6029 + C6028) * C32923 +
            (C627 * C5477 + C626 * C5471 + C3292 * C5478 + C3291 * C5472 +
             (C113 * C1519 + C32632 * C1520) * C5479 +
             (C113 * C1521 + C32632 * C1522) * C32904) *
                C32893) *
               C602 -
           ((C5493 + C5494 + C5495 + C5496 + C5497 + C5498) * C32893 +
            (C5492 + C5491 + C5490 + C5489 + C5488 + C5487) * C32923 +
            (C5486 + C5485 + C5484 + C5483 + C5482 + C5481) * C32936) *
               C601) *
              C32578 * C482)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C32632 * C122) * C6253 +
            (C113 * C123 + C32632 * C136) * C6247 + C1056 * C6254 +
            C1057 * C6248 + C1058 * C6255 + C1059 * C6249 + C1065 * C6256 +
            C1064 * C6250 + C6337 * C6257 + C6338 * C6251) *
               C32533 * C601 -
           ((C113 * C6405 + C32632 * C6411) * C6251 +
            (C113 * C6402 + C32632 * C6406) * C6257 +
            (C113 * C1709 + C32632 * C1714) * C6250 +
            (C113 * C1705 + C32632 * C1708) * C6256 + C1726 * C6249 +
            C1727 * C6255 + C1728 * C6248 + C1729 * C6254 +
            (C113 * C375 + C32632 * C391) * C6247 +
            (C113 * C361 + C32632 * C376) * C6253) *
               C32533 * C602) *
              C32578 * C481 +
          ((C631 * C6253 + C630 * C6247 + C1551 * C6254 + C1550 * C6248 +
            C1549 * C6255 + C1548 * C6249 +
            (C113 * C1706 + C32632 * C1710) * C6256 +
            (C113 * C1711 + C32632 * C1715) * C6250 +
            (C113 * C6588 + C32632 * C6589) * C6257 +
            (C113 * C6590 + C32632 * C6591) * C6251) *
               C32533 * C602 -
           (C6506 * C6251 + C6505 * C6257 + C1062 * C6250 + C1063 * C6256 +
            C886 * C6249 + C885 * C6255 + C510 * C6248 + C511 * C6254 +
            C165 * C6247 + C164 * C6253) *
               C32533 * C601) *
              C32578 * C482)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C10223 * C115 + C10220 * C122 + C10224 * C361 + C10221 * C376 +
              C10225 * C362 + C32907 * C377) *
                 C114 +
             (C10223 * C123 + C10220 * C136 + C10224 * C375 + C10221 * C391 +
              C10225 * C378 + C32907 * C392) *
                 C32615) *
                C32936 +
            ((C10263 + C10264 + C10265) * C114 +
             (C10266 + C10267 + C10268) * C32615) *
                C32923 +
            C10287 * C32893) *
               C601 -
           (((C10860 + C10861 + C10862) * C32615 +
             (C10863 + C10864 + C10865) * C114) *
                C32893 +
            ((C10866 + C10867 + C10868) * C32615 +
             (C10869 + C10870 + C10871) * C114) *
                C32923 +
            ((C10225 * C2136 + C32907 * C2146 + C10224 * C378 + C10221 * C392 +
              C10223 * C375 + C10220 * C391) *
                 C32615 +
             (C10225 * C2128 + C32907 * C2137 + C10224 * C362 + C10221 * C377 +
              C10223 * C361 + C10220 * C376) *
                 C114) *
                C32936) *
               C602) *
              C32578 * C481 +
          ((((C10871 + C10870 + C10869) * C114 +
             (C10868 + C10867 + C10866) * C32615) *
                C32936 +
            ((C10865 + C10864 + C10863) * C114 +
             (C10862 + C10861 + C10860) * C32615) *
                C32923 +
            ((C10223 * C358 + C10220 * C370 + C10224 * C365 + C10221 * C383 +
              C10225 * C2482 + C32907 * C2483) *
                 C114 +
             (C10223 * C369 + C10220 * C388 + C10224 * C384 + C10221 * C395 +
              C10225 * C2484 + C32907 * C2485) *
                 C32615) *
                C32893) *
               C602 -
           (((C10275 + C10276 + C10277) * C32615 +
             (C10278 + C10279 + C10280) * C114) *
                C32893 +
            ((C10274 + C10273 + C10272) * C32615 +
             (C10271 + C10270 + C10269) * C114) *
                C32923 +
            ((C10268 + C10267 + C10266) * C32615 +
             (C10265 + C10264 + C10263) * C114) *
                C32936) *
               C601) *
              C32578 * C482)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C10223 * C115 + C10220 * C122 + C10224 * C361 + C10221 * C376 +
             C10225 * C362 + C32907 * C377) *
                C857 +
            (C10223 * C123 + C10220 * C136 + C10224 * C375 + C10221 * C391 +
             C10225 * C378 + C32907 * C392) *
                C32939 +
            (C11274 + C11275 + C11276) * C858 +
            (C11277 + C11278 + C11279) * C32927 + C11294 * C859 +
            C11295 * C32904) *
               C32533 * C601 -
           ((C10225 * C7081 + C32907 * C7087 + C10224 * C1193 + C10221 * C1206 +
             C10223 * C1188 + C10220 * C1204) *
                C32904 +
            (C10225 * C7078 + C32907 * C7082 + C10224 * C1179 + C10221 * C1192 +
             C10223 * C1177 + C10220 * C1189) *
                C859 +
            (C10225 * C2672 + C32907 * C2677 + C10224 * C1191 + C10221 * C1205 +
             C10223 * C727 + C10220 * C736) *
                C32927 +
            (C10225 * C2668 + C32907 * C2671 + C10224 * C1178 + C10221 * C1190 +
             C10223 * C721 + C10220 * C726) *
                C858 +
            (C10225 * C2136 + C32907 * C2146 + C10224 * C378 + C10221 * C392 +
             C10223 * C375 + C10220 * C391) *
                C32939 +
            (C10225 * C2128 + C32907 * C2137 + C10224 * C362 + C10221 * C377 +
             C10223 * C361 + C10220 * C376) *
                C857) *
               C32533 * C602) *
              C32578 * C481 +
          (((C10871 + C10870 + C10869) * C857 +
            (C10868 + C10867 + C10866) * C32939 +
            (C10223 * C722 + C10220 * C728 + C10224 * C1180 + C10221 * C1194 +
             C10225 * C2669 + C32907 * C2673) *
                C858 +
            (C10223 * C729 + C10220 * C737 + C10224 * C1195 + C10221 * C1207 +
             C10225 * C2674 + C32907 * C2678) *
                C32927 +
            (C10223 * C1176 + C10220 * C1187 + C10224 * C1181 + C10221 * C1196 +
             C10225 * C7404 + C32907 * C7405) *
                C859 +
            (C10223 * C1186 + C10220 * C1203 + C10224 * C1197 + C10221 * C1208 +
             C10225 * C7406 + C32907 * C7407) *
                C32904) *
               C32533 * C602 -
           ((C11569 + C11568 + C11567) * C32904 +
            (C11566 + C11565 + C11564) * C859 +
            (C10684 + C10685 + C10686) * C32927 +
            (C10687 + C10688 + C10689) * C858 +
            (C10268 + C10267 + C10266) * C32939 +
            (C10265 + C10264 + C10263) * C857) *
               C32533 * C601) *
              C32578 * C482)) /
            (p * q * std::sqrt(p + q));
    d2ee[74] +=
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C32632 * C122) * C114 +
            (C113 * C123 + C32632 * C136) * C32615) *
               C103 +
           (C174 + C175) * C104 + C184 * C105 + C185 * C106 + C186 * C107) *
              C32592 * C248 -
          (((C113 * C262 + C32632 * C282) * C32615 +
            (C113 * C252 + C32632 * C263) * C114) *
               C107 +
           ((C113 * C264 + C32632 * C283) * C32615 +
            (C113 * C253 + C32632 * C265) * C114) *
               C106 +
           ((C113 * C266 + C32632 * C284) * C32615 +
            (C113 * C254 + C32632 * C267) * C114) *
               C105 +
           ((C113 * C268 + C32632 * C285) * C32615 +
            (C113 * C255 + C32632 * C269) * C114) *
               C104 +
           ((C113 * C270 + C32632 * C286) * C32615 +
            (C113 * C256 + C32632 * C271) * C114) *
               C103) *
              C32592 * C249 +
          (((C113 * C257 + C32632 * C272) * C114 +
            (C113 * C273 + C32632 * C287) * C32615) *
               C103 +
           ((C113 * C258 + C32632 * C274) * C114 +
            (C113 * C275 + C32632 * C288) * C32615) *
               C104 +
           ((C113 * C259 + C32632 * C276) * C114 +
            (C113 * C277 + C32632 * C289) * C32615) *
               C105 +
           ((C113 * C260 + C32632 * C278) * C114 +
            (C113 * C279 + C32632 * C290) * C32615) *
               C106 +
           ((C113 * C261 + C32632 * C280) * C114 +
            (C113 * C281 + C32632 * C291) * C32615) *
               C107) *
              C32592 * C250) *
         C32566) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C32632 * C122) * C114 +
            (C113 * C123 + C32632 * C136) * C32615) *
               C103 +
           (C174 + C175) * C104 + C184 * C105 + C185 * C106 + C186 * C107) *
              C32592 * C32578 * C110 -
          ((C182 + C183) * C107 + (C181 + C180) * C106 + (C179 + C178) * C105 +
           (C177 + C176) * C104 + (C175 + C174) * C103) *
              C32592 * C32578 * C111 +
          (C184 * C103 + C185 * C104 + C186 * C105 + (C183 + C182) * C106 +
           ((C113 * C121 + C32632 * C134) * C114 +
            (C113 * C135 + C32632 * C142) * C32615) *
               C107) *
              C32592 * C32578 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C32632 * C122) * C857 +
            (C113 * C123 + C32632 * C136) * C32939 +
            (C113 * C256 + C32632 * C271) * C858 +
            (C113 * C270 + C32632 * C286) * C32927 +
            (C113 * C257 + C32632 * C272) * C859 +
            (C113 * C273 + C32632 * C287) * C32904) *
               C854 +
           (C861 + C862 + C863 + C864 + C892 + C893) * C855 + C901 * C32893) *
              C32592 * C32578 * C110 -
          ((C897 + C898 + C881 + C882 + C883 + C884) * C32893 +
           (C896 + C895 + C872 + C871 + C870 + C869) * C855 +
           (C893 + C892 + C864 + C863 + C862 + C861) * C854) *
              C32592 * C32578 * C111 +
          (C901 * C854 + (C884 + C883 + C882 + C881 + C898 + C897) * C855 +
           (C170 * C857 + C171 * C32939 + C505 * C858 + C504 * C32927 +
            (C113 * C261 + C32632 * C280) * C859 +
            (C113 * C281 + C32632 * C291) * C32904) *
               C32893) *
              C32592 * C32578 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C32632 * C122) * C857 +
            (C113 * C123 + C32632 * C136) * C32939 + C1056 * C858 +
            C1057 * C32927 + C1058 * C859 + C1059 * C32904) *
               C854 +
           (C861 + C862 + C863 + C864 + C892 + C893) * C855 + C901 * C32893) *
              C32592 * C248 -
          ((C1060 * C32904 + C1061 * C859 + C889 * C32927 + C888 * C858 +
            C508 * C32939 + C509 * C857) *
               C32893 +
           (C1062 * C32904 + C1063 * C859 + C886 * C32927 + C885 * C858 +
            C510 * C32939 + C511 * C857) *
               C855 +
           (C1064 * C32904 + C1065 * C859 + C1059 * C32927 + C1058 * C858 +
            C1057 * C32939 + C1056 * C857) *
               C854) *
              C32592 * C249 +
          ((C1058 * C857 + C1059 * C32939 + C1065 * C858 + C1064 * C32927 +
            (C113 * C1014 + C32632 * C1023) * C859 +
            (C113 * C1024 + C32632 * C1032) * C32904) *
               C854 +
           (C885 * C857 + C886 * C32939 + C1063 * C858 + C1062 * C32927 +
            (C113 * C1015 + C32632 * C1025) * C859 +
            (C113 * C1026 + C32632 * C1033) * C32904) *
               C855 +
           (C888 * C857 + C889 * C32939 + C1061 * C858 + C1060 * C32927 +
            (C113 * C1016 + C32632 * C1027) * C859 +
            (C113 * C1028 + C32632 * C1034) * C32904) *
               C32893) *
              C32592 * C250) *
         C32566) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C32632 * C122) * C5477 +
            (C113 * C123 + C32632 * C136) * C5471 + C1056 * C5478 +
            C1057 * C5472 + C1058 * C5479 + C1059 * C32904) *
               C32936 +
           (C5481 + C5482 + C5483 + C5484 + C5485 + C5486) * C32923 +
           C5503 * C32893) *
              C32592 * C32578 * C110 -
          ((C5493 + C5494 + C5495 + C5496 + C5497 + C5498) * C32893 +
           (C5492 + C5491 + C5490 + C5489 + C5488 + C5487) * C32923 +
           (C5486 + C5485 + C5484 + C5483 + C5482 + C5481) * C32936) *
              C32592 * C32578 * C111 +
          (C5503 * C32936 +
           (C5498 + C5497 + C5496 + C5495 + C5494 + C5493) * C32923 +
           (C170 * C5477 + C171 * C5471 + C505 * C5478 + C504 * C5472 +
            (C113 * C261 + C32632 * C280) * C5479 +
            (C113 * C281 + C32632 * C291) * C32904) *
               C32893) *
              C32592 * C32578 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C32632 * C122) * C5477 +
            (C113 * C123 + C32632 * C136) * C5471 + C1056 * C5478 +
            C1057 * C5472 + C1058 * C5479 + C1059 * C32904) *
               C32936 +
           (C5481 + C5482 + C5483 + C5484 + C5485 + C5486) * C32923 +
           C5503 * C32893) *
              C32592 * C248 -
          ((C1060 * C32904 + C1061 * C5479 + C889 * C5472 + C888 * C5478 +
            C508 * C5471 + C509 * C5477) *
               C32893 +
           (C1062 * C32904 + C1063 * C5479 + C886 * C5472 + C885 * C5478 +
            C510 * C5471 + C511 * C5477) *
               C32923 +
           (C1064 * C32904 + C1065 * C5479 + C1059 * C5472 + C1058 * C5478 +
            C1057 * C5471 + C1056 * C5477) *
               C32936) *
              C32592 * C249 +
          ((C1058 * C5477 + C1059 * C5471 + C1065 * C5478 + C1064 * C5472 +
            (C113 * C1014 + C32632 * C1023) * C5479 +
            (C113 * C1024 + C32632 * C1032) * C32904) *
               C32936 +
           (C885 * C5477 + C886 * C5471 + C1063 * C5478 + C1062 * C5472 +
            (C113 * C1015 + C32632 * C1025) * C5479 +
            (C113 * C1026 + C32632 * C1033) * C32904) *
               C32923 +
           (C888 * C5477 + C889 * C5471 + C1061 * C5478 + C1060 * C5472 +
            (C113 * C1016 + C32632 * C1027) * C5479 +
            (C113 * C1028 + C32632 * C1034) * C32904) *
               C32893) *
              C32592 * C250) *
         C32566) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C115 + C32632 * C122) * C6253 +
           (C113 * C123 + C32632 * C136) * C6247 + C1056 * C6254 +
           C1057 * C6248 + C1058 * C6255 + C1059 * C6249 + C1065 * C6256 +
           C1064 * C6250 + (C113 * C1014 + C32632 * C1023) * C6257 +
           (C113 * C1024 + C32632 * C1032) * C6251) *
              C32533 * C32592 * C32578 * C110 -
          ((C113 * C1026 + C32632 * C1033) * C6251 +
           (C113 * C1015 + C32632 * C1025) * C6257 + C1062 * C6250 +
           C1063 * C6256 + C886 * C6249 + C885 * C6255 + C510 * C6248 +
           C511 * C6254 + C165 * C6247 + C164 * C6253) *
              C32533 * C32592 * C32578 * C111 +
          (C166 * C6253 + C167 * C6247 + C509 * C6254 + C508 * C6248 +
           C888 * C6255 + C889 * C6249 + C1061 * C6256 + C1060 * C6250 +
           (C113 * C1016 + C32632 * C1027) * C6257 +
           (C113 * C1028 + C32632 * C1034) * C6251) *
              C32533 * C32592 * C32578 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C115 + C32632 * C122) * C6253 +
           (C113 * C123 + C32632 * C136) * C6247 + C1056 * C6254 +
           C1057 * C6248 + C1058 * C6255 + C1059 * C6249 + C1065 * C6256 +
           C1064 * C6250 + C6337 * C6257 + C6338 * C6251) *
              C32533 * C32592 * C248 -
          (C6339 * C6251 + C6340 * C6257 + C6338 * C6250 + C6337 * C6256 +
           C1064 * C6249 + C1065 * C6255 + C1059 * C6248 + C1058 * C6254 +
           C1057 * C6247 + C1056 * C6253) *
              C32533 * C32592 * C249 +
          (C1058 * C6253 + C1059 * C6247 + C1065 * C6254 + C1064 * C6248 +
           C6337 * C6255 + C6338 * C6249 + C6340 * C6256 + C6339 * C6250 +
           (C113 * C6321 + C32632 * C6324) * C6257 +
           (C113 * C6325 + C32632 * C6327) * C6251) *
              C32533 * C32592 * C250) *
         C32566) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C10223 * C115 + C10220 * C122 + C10224 * C361 + C10221 * C376 +
             C10225 * C362 + C32907 * C377) *
                C114 +
            (C10223 * C123 + C10220 * C136 + C10224 * C375 + C10221 * C391 +
             C10225 * C378 + C32907 * C392) *
                C32615) *
               C32936 +
           ((C10263 + C10264 + C10265) * C114 +
            (C10266 + C10267 + C10268) * C32615) *
               C32923 +
           C10287 * C32893) *
              C32592 * C32578 * C110 -
          (((C10275 + C10276 + C10277) * C32615 +
            (C10278 + C10279 + C10280) * C114) *
               C32893 +
           ((C10274 + C10273 + C10272) * C32615 +
            (C10271 + C10270 + C10269) * C114) *
               C32923 +
           ((C10268 + C10267 + C10266) * C32615 +
            (C10265 + C10264 + C10263) * C114) *
               C32936) *
              C32592 * C32578 * C111 +
          (C10287 * C32936 +
           ((C10280 + C10279 + C10278) * C114 +
            (C10277 + C10276 + C10275) * C32615) *
               C32923 +
           ((C10223 * C119 + C10220 * C130 + C10224 * C357 + C10221 * C368 +
             C10225 * C366 + C32907 * C385) *
                C114 +
            (C10223 * C131 + C10220 * C140 + C10224 * C367 + C10221 * C387 +
             C10225 * C386 + C32907 * C396) *
                C32615) *
               C32893) *
              C32592 * C32578 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C10223 * C115 + C10220 * C122 + C10224 * C361 + C10221 * C376 +
             C10225 * C362 + C32907 * C377) *
                C114 +
            (C10223 * C123 + C10220 * C136 + C10224 * C375 + C10221 * C391 +
             C10225 * C378 + C32907 * C392) *
                C32615) *
               C32936 +
           ((C10263 + C10264 + C10265) * C114 +
            (C10266 + C10267 + C10268) * C32615) *
               C32923 +
           C10287 * C32893) *
              C32592 * C248 -
          (((C10225 * C1199 + C32907 * C1209 + C10224 * C731 + C10221 * C738 +
             C10223 * C266 + C10220 * C284) *
                C32615 +
            (C10225 * C1182 + C32907 * C1198 + C10224 * C723 + C10221 * C730 +
             C10223 * C254 + C10220 * C267) *
                C114) *
               C32893 +
           ((C10225 * C1195 + C32907 * C1207 + C10224 * C729 + C10221 * C737 +
             C10223 * C268 + C10220 * C285) *
                C32615 +
            (C10225 * C1180 + C32907 * C1194 + C10224 * C722 + C10221 * C728 +
             C10223 * C255 + C10220 * C269) *
                C114) *
               C32923 +
           ((C10225 * C1191 + C32907 * C1205 + C10224 * C727 + C10221 * C736 +
             C10223 * C270 + C10220 * C286) *
                C32615 +
            (C10225 * C1178 + C32907 * C1190 + C10224 * C721 + C10221 * C726 +
             C10223 * C256 + C10220 * C271) *
                C114) *
               C32936) *
              C32592 * C249 +
          (((C10223 * C257 + C10220 * C272 + C10224 * C1177 + C10221 * C1189 +
             C10225 * C1179 + C32907 * C1192) *
                C114 +
            (C10223 * C273 + C10220 * C287 + C10224 * C1188 + C10221 * C1204 +
             C10225 * C1193 + C32907 * C1206) *
                C32615) *
               C32936 +
           ((C10223 * C258 + C10220 * C274 + C10224 * C1176 + C10221 * C1187 +
             C10225 * C1181 + C32907 * C1196) *
                C114 +
            (C10223 * C275 + C10220 * C288 + C10224 * C1186 + C10221 * C1203 +
             C10225 * C1197 + C32907 * C1208) *
                C32615) *
               C32923 +
           ((C10223 * C259 + C10220 * C276 + C10224 * C1175 + C10221 * C1185 +
             C10225 * C1183 + C32907 * C1200) *
                C114 +
            (C10223 * C277 + C10220 * C289 + C10224 * C1184 + C10221 * C1202 +
             C10225 * C1201 + C32907 * C1210) *
                C32615) *
               C32893) *
              C32592 * C250) *
         C32566) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C10223 * C115 + C10220 * C122 + C10224 * C361 + C10221 * C376 +
            C10225 * C362 + C32907 * C377) *
               C857 +
           (C10223 * C123 + C10220 * C136 + C10224 * C375 + C10221 * C391 +
            C10225 * C378 + C32907 * C392) *
               C32939 +
           (C10223 * C256 + C10220 * C271 + C10224 * C721 + C10221 * C726 +
            C10225 * C1178 + C32907 * C1190) *
               C858 +
           (C10223 * C270 + C10220 * C286 + C10224 * C727 + C10221 * C736 +
            C10225 * C1191 + C32907 * C1205) *
               C32927 +
           (C10223 * C257 + C10220 * C272 + C10224 * C1177 + C10221 * C1189 +
            C10225 * C1179 + C32907 * C1192) *
               C859 +
           (C10223 * C273 + C10220 * C287 + C10224 * C1188 + C10221 * C1204 +
            C10225 * C1193 + C32907 * C1206) *
               C32904) *
              C32533 * C32592 * C32578 * C110 -
          ((C10225 * C1197 + C32907 * C1208 + C10224 * C1186 + C10221 * C1203 +
            C10223 * C275 + C10220 * C288) *
               C32904 +
           (C10225 * C1181 + C32907 * C1196 + C10224 * C1176 + C10221 * C1187 +
            C10223 * C258 + C10220 * C274) *
               C859 +
           (C10684 + C10685 + C10686) * C32927 +
           (C10687 + C10688 + C10689) * C858 +
           (C10268 + C10267 + C10266) * C32939 +
           (C10265 + C10264 + C10263) * C857) *
              C32533 * C32592 * C32578 * C111 +
          (C10283 * C857 + C10284 * C32939 + (C10683 + C10682 + C10681) * C858 +
           (C10680 + C10679 + C10678) * C32927 +
           (C10223 * C259 + C10220 * C276 + C10224 * C1175 + C10221 * C1185 +
            C10225 * C1183 + C32907 * C1200) *
               C859 +
           (C10223 * C277 + C10220 * C289 + C10224 * C1184 + C10221 * C1202 +
            C10225 * C1201 + C32907 * C1210) *
               C32904) *
              C32533 * C32592 * C32578 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C10223 * C115 + C10220 * C122 + C10224 * C361 + C10221 * C376 +
            C10225 * C362 + C32907 * C377) *
               C857 +
           (C10223 * C123 + C10220 * C136 + C10224 * C375 + C10221 * C391 +
            C10225 * C378 + C32907 * C392) *
               C32939 +
           (C11274 + C11275 + C11276) * C858 +
           (C11277 + C11278 + C11279) * C32927 + C11294 * C859 +
           C11295 * C32904) *
              C32533 * C32592 * C248 -
          ((C11286 + C11287 + C11288) * C32904 +
           (C11289 + C11290 + C11291) * C859 +
           (C11285 + C11284 + C11283) * C32927 +
           (C11282 + C11281 + C11280) * C858 +
           (C11279 + C11278 + C11277) * C32939 +
           (C11276 + C11275 + C11274) * C857) *
              C32533 * C32592 * C249 +
          (C11294 * C857 + C11295 * C32939 + (C11291 + C11290 + C11289) * C858 +
           (C11288 + C11287 + C11286) * C32927 +
           (C10223 * C1014 + C10220 * C1023 + C10224 * C6402 + C10221 * C6406 +
            C10225 * C6404 + C32907 * C6409) *
               C859 +
           (C10223 * C1024 + C10220 * C1032 + C10224 * C6405 + C10221 * C6411 +
            C10225 * C6410 + C32907 * C6413) *
               C32904) *
              C32533 * C32592 * C250) *
         C32566) /
            (p * q * std::sqrt(p + q));
    d2ee[75] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C20430 * C115 + C20428 * C122 + C20431 * C361 + C32719 * C376) *
                 C2784 +
             (C20430 * C123 + C20428 * C136 + C20431 * C375 + C32719 * C391) *
                 C32873 +
             (C21499 + C21500) * C2785 + (C21501 + C21502) * C32677) *
                C32538 +
            ((C20465 + C20466) * C2784 + (C20467 + C20468) * C32873 +
             C21857 * C2785 + C21858 * C32677) *
                C32546 +
            C23241 * C17574) *
               C32592 * C479 -
           (((C21315 + C21316) * C32677 + (C21317 + C21318) * C2785 +
             C23728 * C32873 + C23729 * C2784) *
                C17574 +
            (C21859 * C32677 + C21860 * C2785 + C21861 * C32873 +
             C21862 * C2784) *
                C32546 +
            ((C21506 + C21505) * C32677 + (C21504 + C21503) * C2785 +
             (C21502 + C21501) * C32873 + (C21500 + C21499) * C2784) *
                C32538) *
               C32592 * C480) *
              C481 +
          (((C21857 * C2784 + C21858 * C32873 + C21481 * C2785 +
             C21482 * C32677) *
                C32538 +
            (C23235 * C2784 + C23236 * C32873 + (C21318 + C21317) * C2785 +
             (C21316 + C21315) * C32677) *
                C32546 +
            ((C20844 + C20843) * C2784 + (C20842 + C20841) * C32873 +
             (C20430 * C260 + C20428 * C278 + C20431 * C1519 + C32719 * C1520) *
                 C2785 +
             (C20430 * C279 + C20428 * C290 + C20431 * C1521 + C32719 * C1522) *
                 C32677) *
                C17574) *
               C32592 * C480 -
           (((C20841 + C20842) * C32677 + (C20843 + C20844) * C2785 +
             (C20476 + C20475) * C32873 + (C20474 + C20473) * C2784) *
                C17574 +
            (C23728 * C32677 + C23729 * C2785 + (C20472 + C20471) * C32873 +
             (C20470 + C20469) * C2784) *
                C32546 +
            (C21861 * C32677 + C21862 * C2785 + (C20468 + C20467) * C32873 +
             (C20466 + C20465) * C2784) *
                C32538) *
               C32592 * C479) *
              C482)) /
        (p * q * std::sqrt(p + q));
    d2ee[76] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C20430 * C115 + C20428 * C122 + C20431 * C361 + C32719 * C376) *
                 C2784 +
             (C20430 * C123 + C20428 * C136 + C20431 * C375 + C32719 * C391) *
                 C32873 +
             (C21499 + C21500) * C2785 + (C21501 + C21502) * C32677) *
                C32538 +
            ((C20465 + C20466) * C2784 + (C20467 + C20468) * C32873 +
             C21857 * C2785 + C21858 * C32677) *
                C32546 +
            C23241 * C17574) *
               C601 -
           (((C23932 + C23933) * C32677 + (C23934 + C23935) * C2785 +
             (C21011 + C21012) * C32873 + (C21013 + C21014) * C2784) *
                C17574 +
            ((C22077 + C22078) * C32677 + (C22079 + C22080) * C2785 +
             (C21015 + C21016) * C32873 + (C21017 + C21018) * C2784) *
                C32546 +
            ((C22295 + C22296) * C32677 + (C22297 + C22298) * C2785 +
             (C20431 * C378 + C32719 * C392 + C20430 * C375 + C20428 * C391) *
                 C32873 +
             (C20431 * C362 + C32719 * C377 + C20430 * C361 + C20428 * C376) *
                 C2784) *
                C32538) *
               C602) *
              C479 +
          ((((C22298 + C22297) * C2784 + (C22296 + C22295) * C32873 +
             (C22294 + C22293) * C2785 + (C22292 + C22291) * C32677) *
                C32538 +
            ((C22080 + C22079) * C2784 + (C22078 + C22077) * C32873 +
             (C22076 + C22075) * C2785 + (C22074 + C22073) * C32677) *
                C32546 +
            ((C23935 + C23934) * C2784 + (C23933 + C23932) * C32873 +
             (C20430 * C1175 + C20428 * C1185 + C20431 * C1183 +
              C32719 * C1200) *
                 C2785 +
             (C20430 * C1184 + C20428 * C1202 + C20431 * C1201 +
              C32719 * C1210) *
                 C32677) *
                C17574) *
               C602 -
           (((C21315 + C21316) * C32677 + (C21317 + C21318) * C2785 +
             C23728 * C32873 + C23729 * C2784) *
                C17574 +
            (C21859 * C32677 + C21860 * C2785 + C21861 * C32873 +
             C21862 * C2784) *
                C32546 +
            ((C21506 + C21505) * C32677 + (C21504 + C21503) * C2785 +
             (C21502 + C21501) * C32873 + (C21500 + C21499) * C2784) *
                C32538) *
               C601) *
              C480) *
         C32566) /
        (p * q * std::sqrt(p + q));
    d2ee[77] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C20430 * C115 + C20428 * C122 + C20431 * C361 + C32719 * C376) *
                C2784 +
            (C20430 * C123 + C20428 * C136 + C20431 * C375 + C32719 * C391) *
                C32873 +
            (C21499 + C21500) * C2785 + (C21501 + C21502) * C32677) *
               C32538 +
           ((C20465 + C20466) * C2784 + (C20467 + C20468) * C32873 +
            C21857 * C2785 + C21858 * C32677) *
               C32546 +
           C23241 * C17574) *
              C32592 * C248 -
          (((C21315 + C21316) * C32677 + (C21317 + C21318) * C2785 +
            (C20845 + C20846) * C32873 + (C20847 + C20848) * C2784) *
               C17574 +
           (C21859 * C32677 + C21860 * C2785 + C21861 * C32873 +
            C21862 * C2784) *
               C32546 +
           ((C21506 + C21505) * C32677 + (C21504 + C21503) * C2785 +
            (C21502 + C21501) * C32873 + (C21500 + C21499) * C2784) *
               C32538) *
              C32592 * C249 +
          ((C21515 * C2784 + C21516 * C32873 + (C21514 + C21513) * C2785 +
            (C21512 + C21511) * C32677) *
               C32538 +
           (C21481 * C2784 + C21482 * C32873 + (C21510 + C21509) * C2785 +
            (C21508 + C21507) * C32677) *
               C32546 +
           ((C21318 + C21317) * C2784 + (C21316 + C21315) * C32873 +
            (C20430 * C1011 + C20428 * C1018 + C20431 * C1707 +
             C32719 * C1712) *
                C2785 +
            (C20430 * C1017 + C20428 * C1029 + C20431 * C1713 +
             C32719 * C1716) *
                C32677) *
               C17574) *
              C32592 * C250) *
         C32566) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C20430 * C115 + C20428 * C122 + C20431 * C361 + C32719 * C376) *
                C2784 +
            (C20430 * C123 + C20428 * C136 + C20431 * C375 + C32719 * C391) *
                C32873 +
            (C21499 + C21500) * C2785 + (C21501 + C21502) * C32677) *
               C32538 +
           ((C20465 + C20466) * C2784 + (C20467 + C20468) * C32873 +
            C21857 * C2785 + C21858 * C32677) *
               C32546 +
           C23241 * C17574) *
              C32592 * C32578 * C110 -
          (((C20841 + C20842) * C32677 + (C20843 + C20844) * C2785 +
            (C20476 + C20475) * C32873 + (C20474 + C20473) * C2784) *
               C17574 +
           ((C20845 + C20846) * C32677 + (C20847 + C20848) * C2785 +
            (C20472 + C20471) * C32873 + (C20470 + C20469) * C2784) *
               C32546 +
           (C21861 * C32677 + C21862 * C2785 + (C20468 + C20467) * C32873 +
            (C20466 + C20465) * C2784) *
               C32538) *
              C32592 * C32578 * C111 +
          (C23241 * C32538 +
           (C20483 * C2784 + C20484 * C32873 + (C20844 + C20843) * C2785 +
            (C20842 + C20841) * C32677) *
               C32546 +
           ((C20480 + C20479) * C2784 + (C20478 + C20477) * C32873 +
            (C20430 * C252 + C20428 * C263 + C20431 * C725 + C32719 * C734) *
                C2785 +
            (C20430 * C262 + C20428 * C282 + C20431 * C735 + C32719 * C740) *
                C32677) *
               C17574) *
              C32592 * C32578 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C20430 * C115 + C20428 * C122 + C20431 * C361 + C32719 * C376) *
                C2784 +
            (C20430 * C123 + C20428 * C136 + C20431 * C375 + C32719 * C391) *
                C32873 +
            (C21499 + C21500) * C2785 + (C21501 + C21502) * C32677) *
               C32538 +
           ((C20465 + C20466) * C2784 + (C20467 + C20468) * C32873 +
            C21857 * C2785 + C21858 * C32677) *
               C32546 +
           C23241 * C17574) *
              C354 -
          (((C20431 * C1199 + C32719 * C1209 + C20430 * C731 + C20428 * C738) *
                C32677 +
            (C20431 * C1182 + C32719 * C1198 + C20430 * C723 + C20428 * C730) *
                C2785 +
            (C21011 + C21012) * C32873 + (C21013 + C21014) * C2784) *
               C17574 +
           ((C22077 + C22078) * C32677 + (C22079 + C22080) * C2785 +
            (C21015 + C21016) * C32873 + (C21017 + C21018) * C2784) *
               C32546 +
           ((C22295 + C22296) * C32677 + (C22297 + C22298) * C2785 +
            (C20431 * C378 + C32719 * C392 + C20430 * C375 + C20428 * C391) *
                C32873 +
            (C20431 * C362 + C32719 * C377 + C20430 * C361 + C20428 * C376) *
                C2784) *
               C32538) *
              C355 +
          (((C20430 * C362 + C20428 * C377 + C20431 * C2128 + C32719 * C2137) *
                C2784 +
            (C20430 * C378 + C20428 * C392 + C20431 * C2136 + C32719 * C2146) *
                C32873 +
            (C20430 * C1178 + C20428 * C1190 + C20431 * C2668 +
             C32719 * C2671) *
                C2785 +
            (C20430 * C1191 + C20428 * C1205 + C20431 * C2672 +
             C32719 * C2677) *
                C32677) *
               C32538 +
           ((C20430 * C363 + C20428 * C379 + C20431 * C2127 + C32719 * C2135) *
                C2784 +
            (C20430 * C380 + C20428 * C393 + C20431 * C2134 + C32719 * C2145) *
                C32873 +
            (C20430 * C1180 + C20428 * C1194 + C20431 * C2669 +
             C32719 * C2673) *
                C2785 +
            (C20430 * C1195 + C20428 * C1207 + C20431 * C2674 +
             C32719 * C2678) *
                C32677) *
               C32546 +
           ((C20430 * C364 + C20428 * C381 + C20431 * C2126 + C32719 * C2133) *
                C2784 +
            (C20430 * C382 + C20428 * C394 + C20431 * C2132 + C32719 * C2144) *
                C32873 +
            (C20430 * C1182 + C20428 * C1198 + C20431 * C2670 +
             C32719 * C2675) *
                C2785 +
            (C20430 * C1199 + C20428 * C1209 + C20431 * C2676 +
             C32719 * C2679) *
                C32677) *
               C17574) *
              C356) *
         C32578 * C32566) /
            (p * q * std::sqrt(p + q));
    d2ee[78] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C20430 * C115 + C20428 * C122 + C20431 * C361 + C32719 * C376) *
                 C2784 +
             (C20430 * C123 + C20428 * C136 + C20431 * C375 + C32719 * C391) *
                 C32873 +
             (C21499 + C21500) * C2785 + (C21501 + C21502) * C32677) *
                C32538 +
            ((C20465 + C20466) * C2784 + (C20467 + C20468) * C32873 +
             C21857 * C2785 + C21858 * C32677) *
                C32546 +
            C23241 * C17574) *
               C601 -
           (((C23932 + C23933) * C32677 + (C23934 + C23935) * C2785 +
             (C21011 + C21012) * C32873 + (C21013 + C21014) * C2784) *
                C17574 +
            ((C22077 + C22078) * C32677 + (C22079 + C22080) * C2785 +
             (C21015 + C21016) * C32873 + (C21017 + C21018) * C2784) *
                C32546 +
            ((C22295 + C22296) * C32677 + (C22297 + C22298) * C2785 +
             (C20431 * C378 + C32719 * C392 + C20430 * C375 + C20428 * C391) *
                 C32873 +
             (C20431 * C362 + C32719 * C377 + C20430 * C361 + C20428 * C376) *
                 C2784) *
                C32538) *
               C602) *
              C32578 * C481 +
          ((((C21018 + C21017) * C2784 + (C21016 + C21015) * C32873 +
             (C22080 + C22079) * C2785 + (C22078 + C22077) * C32677) *
                C32538 +
            ((C21014 + C21013) * C2784 + (C21012 + C21011) * C32873 +
             (C23935 + C23934) * C2785 + (C23933 + C23932) * C32677) *
                C32546 +
            ((C21010 + C21009) * C2784 + (C21008 + C21007) * C32873 +
             (C20430 * C724 + C20428 * C732 + C20431 * C2296 + C32719 * C2297) *
                 C2785 +
             (C20430 * C733 + C20428 * C739 + C20431 * C2298 + C32719 * C2299) *
                 C32677) *
                C17574) *
               C602 -
           (((C20841 + C20842) * C32677 + (C20843 + C20844) * C2785 +
             (C20476 + C20475) * C32873 + (C20474 + C20473) * C2784) *
                C17574 +
            (C23728 * C32677 + C23729 * C2785 + (C20472 + C20471) * C32873 +
             (C20470 + C20469) * C2784) *
                C32546 +
            (C21861 * C32677 + C21862 * C2785 + (C20468 + C20467) * C32873 +
             (C20466 + C20465) * C2784) *
                C32538) *
               C601) *
              C32578 * C482)) /
        (p * q * std::sqrt(p + q));
    d2ee[79] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C20430 * C115 + C20428 * C122 + C20431 * C361 + C32719 * C376) *
                C2784 +
            (C20430 * C123 + C20428 * C136 + C20431 * C375 + C32719 * C391) *
                C32873 +
            (C21499 + C21500) * C2785 + (C21501 + C21502) * C32677) *
               C32538 +
           ((C20465 + C20466) * C2784 + (C20467 + C20468) * C32873 +
            C21857 * C2785 + C21858 * C32677) *
               C32546 +
           C23241 * C17574) *
              C32592 * C32578 * C110 -
          (((C20841 + C20842) * C32677 + (C20843 + C20844) * C2785 +
            (C20476 + C20475) * C32873 + (C20474 + C20473) * C2784) *
               C17574 +
           ((C20845 + C20846) * C32677 + (C20847 + C20848) * C2785 +
            (C20472 + C20471) * C32873 + (C20470 + C20469) * C2784) *
               C32546 +
           (C21861 * C32677 + C21862 * C2785 + (C20468 + C20467) * C32873 +
            (C20466 + C20465) * C2784) *
               C32538) *
              C32592 * C32578 * C111 +
          (C23241 * C32538 +
           (C20483 * C2784 + C20484 * C32873 + (C20844 + C20843) * C2785 +
            (C20842 + C20841) * C32677) *
               C32546 +
           ((C20480 + C20479) * C2784 + (C20478 + C20477) * C32873 +
            (C20430 * C252 + C20428 * C263 + C20431 * C725 + C32719 * C734) *
                C2785 +
            (C20430 * C262 + C20428 * C282 + C20431 * C735 + C32719 * C740) *
                C32677) *
               C17574) *
              C32592 * C32578 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C20430 * C115 + C20428 * C122 + C20431 * C361 + C32719 * C376) *
                C2784 +
            (C20430 * C123 + C20428 * C136 + C20431 * C375 + C32719 * C391) *
                C32873 +
            (C21499 + C21500) * C2785 + (C21501 + C21502) * C32677) *
               C32538 +
           ((C20465 + C20466) * C2784 + (C20467 + C20468) * C32873 +
            C21857 * C2785 + C21858 * C32677) *
               C32546 +
           C23241 * C17574) *
              C32592 * C248 -
          (((C21315 + C21316) * C32677 + (C21317 + C21318) * C2785 +
            (C20845 + C20846) * C32873 + (C20847 + C20848) * C2784) *
               C17574 +
           (C21859 * C32677 + C21860 * C2785 + C21861 * C32873 +
            C21862 * C2784) *
               C32546 +
           ((C21506 + C21505) * C32677 + (C21504 + C21503) * C2785 +
            (C21502 + C21501) * C32873 + (C21500 + C21499) * C2784) *
               C32538) *
              C32592 * C249 +
          ((C21515 * C2784 + C21516 * C32873 + (C21514 + C21513) * C2785 +
            (C21512 + C21511) * C32677) *
               C32538 +
           (C21481 * C2784 + C21482 * C32873 + (C21510 + C21509) * C2785 +
            (C21508 + C21507) * C32677) *
               C32546 +
           ((C21318 + C21317) * C2784 + (C21316 + C21315) * C32873 +
            (C20430 * C1011 + C20428 * C1018 + C20431 * C1707 +
             C32719 * C1712) *
                C2785 +
            (C20430 * C1017 + C20428 * C1029 + C20431 * C1713 +
             C32719 * C1716) *
                C32677) *
               C17574) *
              C32592 * C250) *
         C32566) /
            (p * q * std::sqrt(p + q));
    d2ee[80] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                 (((((C31694 * C115 + C32715 * C122 + C31686 * C361 +
                      C32722 * C376 + C31700 * C362 + C24241 * C377) *
                         C2784 +
                     (C31694 * C123 + C32715 * C136 + C31686 * C375 +
                      C32722 * C391 + C31700 * C378 + C24241 * C392) *
                         C32873 +
                     (C25365 + C25366 + C25367) * C2785 +
                     (C25368 + C25369 + C25370) * C32677) *
                        C15789 +
                    ((C24282 + C24283 + C24284) * C2784 +
                     (C24285 + C24286 + C24287) * C32873 + C25727 * C2785 +
                     C25728 * C32677) *
                        C32543) *
                       C32592 * C479 -
                   (((C25371 + C25372 + C25373) * C32677 +
                     (C25374 + C25375 + C25376) * C2785 + C25729 * C32873 +
                     C25730 * C2784) *
                        C32543 +
                    ((C25377 + C25378 + C25379) * C32677 +
                     (C25380 + C25381 + C25382) * C2785 +
                     (C25370 + C25369 + C25368) * C32873 +
                     (C25367 + C25366 + C25365) * C2784) *
                        C15789) *
                       C32592 * C480) *
                      C481 +
                  (((C25727 * C2784 + C25728 * C32873 +
                     (C25376 + C25375 + C25374) * C2785 +
                     (C25373 + C25372 + C25371) * C32677) *
                        C15789 +
                    ((C24702 + C24701 + C24700) * C2784 +
                     (C24699 + C24698 + C24697) * C32873 +
                     (C31694 * C259 + C32715 * C276 + C31686 * C1175 +
                      C32722 * C1185 + C31700 * C1183 + C24241 * C1200) *
                         C2785 +
                     (C31694 * C277 + C32715 * C289 + C31686 * C1184 +
                      C32722 * C1202 + C31700 * C1201 + C24241 * C1210) *
                         C32677) *
                        C32543) *
                       C32592 * C480 -
                   (((C24697 + C24698 + C24699) * C32677 +
                     (C24700 + C24701 + C24702) * C2785 +
                     (C24293 + C24292 + C24291) * C32873 +
                     (C24290 + C24289 + C24288) * C2784) *
                        C32543 +
                    (C25729 * C32677 + C25730 * C2785 +
                     (C24287 + C24286 + C24285) * C32873 +
                     (C24284 + C24283 + C24282) * C2784) *
                        C15789) *
                       C32592 * C479) *
                      C482)) /
                (p * q * std::sqrt(p + q));
    d2ee[81] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                 (((((C31694 * C115 + C32715 * C122 + C31686 * C361 +
                      C32722 * C376 + C31700 * C362 + C24241 * C377) *
                         C2784 +
                     (C31694 * C123 + C32715 * C136 + C31686 * C375 +
                      C32722 * C391 + C31700 * C378 + C24241 * C392) *
                         C32873 +
                     (C25365 + C25366 + C25367) * C2785 +
                     (C25368 + C25369 + C25370) * C32677) *
                        C15789 +
                    ((C24282 + C24283 + C24284) * C2784 +
                     (C24285 + C24286 + C24287) * C32873 + C25727 * C2785 +
                     C25728 * C32677) *
                        C32543) *
                       C601 -
                   (((C25937 + C25938 + C25939) * C32677 +
                     (C25940 + C25941 + C25942) * C2785 +
                     (C24885 + C24886 + C24887) * C32873 +
                     (C24888 + C24889 + C24890) * C2784) *
                        C32543 +
                    ((C26149 + C26150 + C26151) * C32677 +
                     (C26152 + C26153 + C26154) * C2785 +
                     (C31700 * C2136 + C24241 * C2146 + C31686 * C378 +
                      C32722 * C392 + C31694 * C375 + C32715 * C391) *
                         C32873 +
                     (C31700 * C2128 + C24241 * C2137 + C31686 * C362 +
                      C32722 * C377 + C31694 * C361 + C32715 * C376) *
                         C2784) *
                        C15789) *
                       C602) *
                      C479 +
                  ((((C26154 + C26153 + C26152) * C2784 +
                     (C26151 + C26150 + C26149) * C32873 +
                     (C31694 * C1177 + C32715 * C1189 + C31686 * C1179 +
                      C32722 * C1192 + C31700 * C7078 + C24241 * C7082) *
                         C2785 +
                     (C31694 * C1188 + C32715 * C1204 + C31686 * C1193 +
                      C32722 * C1206 + C31700 * C7081 + C24241 * C7087) *
                         C32677) *
                        C15789 +
                    ((C25942 + C25941 + C25940) * C2784 +
                     (C25939 + C25938 + C25937) * C32873 +
                     (C31694 * C1176 + C32715 * C1187 + C31686 * C1181 +
                      C32722 * C1196 + C31700 * C7404 + C24241 * C7405) *
                         C2785 +
                     (C31694 * C1186 + C32715 * C1203 + C31686 * C1197 +
                      C32722 * C1208 + C31700 * C7406 + C24241 * C7407) *
                         C32677) *
                        C32543) *
                       C602 -
                   (((C25371 + C25372 + C25373) * C32677 +
                     (C25374 + C25375 + C25376) * C2785 + C25729 * C32873 +
                     C25730 * C2784) *
                        C32543 +
                    ((C25377 + C25378 + C25379) * C32677 +
                     (C25380 + C25381 + C25382) * C2785 +
                     (C25370 + C25369 + C25368) * C32873 +
                     (C25367 + C25366 + C25365) * C2784) *
                        C15789) *
                       C601) *
                      C480) *
                 C32566) /
                (p * q * std::sqrt(p + q));
    d2ee[82] += (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C31694 * C115 + C32715 * C122 + C31686 * C361 +
                     C32722 * C376 + C31700 * C362 + C24241 * C377) *
                        C2784 +
                    (C31694 * C123 + C32715 * C136 + C31686 * C375 +
                     C32722 * C391 + C31700 * C378 + C24241 * C392) *
                        C32873 +
                    (C25365 + C25366 + C25367) * C2785 +
                    (C25368 + C25369 + C25370) * C32677) *
                       C15789 +
                   ((C24282 + C24283 + C24284) * C2784 +
                    (C24285 + C24286 + C24287) * C32873 +
                    (C24708 + C24707 + C24706) * C2785 +
                    (C24705 + C24704 + C24703) * C32677) *
                       C32543) *
                      C32592 * C248 -
                  (((C25371 + C25372 + C25373) * C32677 +
                    (C25374 + C25375 + C25376) * C2785 +
                    (C24703 + C24704 + C24705) * C32873 +
                    (C24706 + C24707 + C24708) * C2784) *
                       C32543 +
                   ((C25377 + C25378 + C25379) * C32677 +
                    (C25380 + C25381 + C25382) * C2785 +
                    (C25370 + C25369 + C25368) * C32873 +
                    (C25367 + C25366 + C25365) * C2784) *
                       C15789) *
                      C32592 * C249 +
                  (((C25382 + C25381 + C25380) * C2784 +
                    (C25379 + C25378 + C25377) * C32873 +
                    (C31694 * C1013 + C32715 * C1022 + C31686 * C1705 +
                     C32722 * C1708 + C31700 * C6403 + C24241 * C6407) *
                        C2785 +
                    (C31694 * C1021 + C32715 * C1031 + C31686 * C1709 +
                     C32722 * C1714 + C31700 * C6408 + C24241 * C6412) *
                        C32677) *
                       C15789 +
                   ((C25376 + C25375 + C25374) * C2784 +
                    (C25373 + C25372 + C25371) * C32873 +
                    (C31694 * C1012 + C32715 * C1020 + C31686 * C1706 +
                     C32722 * C1710 + C31700 * C7236 + C24241 * C7237) *
                        C2785 +
                    (C31694 * C1019 + C32715 * C1030 + C31686 * C1711 +
                     C32722 * C1715 + C31700 * C7238 + C24241 * C7239) *
                        C32677) *
                       C32543) *
                      C32592 * C250) *
                 C32566) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C31694 * C115 + C32715 * C122 + C31686 * C361 +
                     C32722 * C376 + C31700 * C362 + C24241 * C377) *
                        C2784 +
                    (C31694 * C123 + C32715 * C136 + C31686 * C375 +
                     C32722 * C391 + C31700 * C378 + C24241 * C392) *
                        C32873 +
                    (C31694 * C256 + C32715 * C271 + C31686 * C721 +
                     C32722 * C726 + C31700 * C1178 + C24241 * C1190) *
                        C2785 +
                    (C31694 * C270 + C32715 * C286 + C31686 * C727 +
                     C32722 * C736 + C31700 * C1191 + C24241 * C1205) *
                        C32677) *
                       C15789 +
                   ((C24282 + C24283 + C24284) * C2784 +
                    (C24285 + C24286 + C24287) * C32873 +
                    (C24708 + C24707 + C24706) * C2785 +
                    (C24705 + C24704 + C24703) * C32677) *
                       C32543) *
                      C32592 * C32578 * C110 -
                  (((C24697 + C24698 + C24699) * C32677 +
                    (C24700 + C24701 + C24702) * C2785 +
                    (C24293 + C24292 + C24291) * C32873 +
                    (C24290 + C24289 + C24288) * C2784) *
                       C32543 +
                   ((C24703 + C24704 + C24705) * C32677 +
                    (C24706 + C24707 + C24708) * C2785 +
                    (C24287 + C24286 + C24285) * C32873 +
                    (C24284 + C24283 + C24282) * C2784) *
                       C15789) *
                      C32592 * C32578 * C111 +
                  ((C24302 * C2784 + C24303 * C32873 +
                    (C24702 + C24701 + C24700) * C2785 +
                    (C24699 + C24698 + C24697) * C32677) *
                       C15789 +
                   ((C24299 + C24298 + C24297) * C2784 +
                    (C24296 + C24295 + C24294) * C32873 +
                    (C31694 * C253 + C32715 * C265 + C31686 * C724 +
                     C32722 * C732 + C31700 * C2296 + C24241 * C2297) *
                        C2785 +
                    (C31694 * C264 + C32715 * C283 + C31686 * C733 +
                     C32722 * C739 + C31700 * C2298 + C24241 * C2299) *
                        C32677) *
                       C32543) *
                      C32592 * C32578 * C112)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((C31694 * C115 + C32715 * C122 + C31686 * C361 +
                     C32722 * C376 + C31700 * C362 + C24241 * C377) *
                        C2784 +
                    (C31694 * C123 + C32715 * C136 + C31686 * C375 +
                     C32722 * C391 + C31700 * C378 + C24241 * C392) *
                        C32873 +
                    (C25365 + C25366 + C25367) * C2785 +
                    (C25368 + C25369 + C25370) * C32677) *
                       C15789 +
                   ((C24282 + C24283 + C24284) * C2784 +
                    (C24285 + C24286 + C24287) * C32873 +
                    (C24708 + C24707 + C24706) * C2785 +
                    (C24705 + C24704 + C24703) * C32677) *
                       C32543) *
                      C354 -
                  (((C31700 * C2674 + C24241 * C2678 + C31686 * C1195 +
                     C32722 * C1207 + C31694 * C729 + C32715 * C737) *
                        C32677 +
                    (C31700 * C2669 + C24241 * C2673 + C31686 * C1180 +
                     C32722 * C1194 + C31694 * C722 + C32715 * C728) *
                        C2785 +
                    (C24885 + C24886 + C24887) * C32873 +
                    (C24888 + C24889 + C24890) * C2784) *
                       C32543 +
                   ((C31700 * C2672 + C24241 * C2677 + C31686 * C1191 +
                     C32722 * C1205 + C31694 * C727 + C32715 * C736) *
                        C32677 +
                    (C31700 * C2668 + C24241 * C2671 + C31686 * C1178 +
                     C32722 * C1190 + C31694 * C721 + C32715 * C726) *
                        C2785 +
                    (C31700 * C2136 + C24241 * C2146 + C31686 * C378 +
                     C32722 * C392 + C31694 * C375 + C32715 * C391) *
                        C32873 +
                    (C31700 * C2128 + C24241 * C2137 + C31686 * C362 +
                     C32722 * C377 + C31694 * C361 + C32715 * C376) *
                        C2784) *
                       C15789) *
                      C355 +
                  (((C31694 * C362 + C32715 * C377 + C31686 * C2128 +
                     C32722 * C2137 + C31700 * C2129 + C24241 * C2138) *
                        C2784 +
                    (C31694 * C378 + C32715 * C392 + C31686 * C2136 +
                     C32722 * C2146 + C31700 * C2139 + C24241 * C2147) *
                        C32873 +
                    (C31694 * C1178 + C32715 * C1190 + C31686 * C2668 +
                     C32722 * C2671 + C31700 * C7079 + C24241 * C7083) *
                        C2785 +
                    (C31694 * C1191 + C32715 * C1205 + C31686 * C2672 +
                     C32722 * C2677 + C31700 * C7084 + C24241 * C7088) *
                        C32677) *
                       C15789 +
                   ((C31694 * C363 + C32715 * C379 + C31686 * C2127 +
                     C32722 * C2135 + C31700 * C2130 + C24241 * C2140) *
                        C2784 +
                    (C31694 * C380 + C32715 * C393 + C31686 * C2134 +
                     C32722 * C2145 + C31700 * C2141 + C24241 * C2148) *
                        C32873 +
                    (C31694 * C1180 + C32715 * C1194 + C31686 * C2669 +
                     C32722 * C2673 + C31700 * C12183 + C24241 * C12184) *
                        C2785 +
                    (C31694 * C1195 + C32715 * C1207 + C31686 * C2674 +
                     C32722 * C2678 + C31700 * C12185 + C24241 * C12186) *
                        C32677) *
                       C32543) *
                      C356) *
                 C32578 * C32566) /
                    (p * q * std::sqrt(p + q));
    d2ee[83] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                 (((((C31694 * C115 + C32715 * C122 + C31686 * C361 +
                      C32722 * C376 + C31700 * C362 + C24241 * C377) *
                         C2784 +
                     (C31694 * C123 + C32715 * C136 + C31686 * C375 +
                      C32722 * C391 + C31700 * C378 + C24241 * C392) *
                         C32873 +
                     (C25365 + C25366 + C25367) * C2785 +
                     (C25368 + C25369 + C25370) * C32677) *
                        C15789 +
                    ((C24282 + C24283 + C24284) * C2784 +
                     (C24285 + C24286 + C24287) * C32873 + C25727 * C2785 +
                     C25728 * C32677) *
                        C32543) *
                       C601 -
                   (((C25937 + C25938 + C25939) * C32677 +
                     (C25940 + C25941 + C25942) * C2785 +
                     (C24885 + C24886 + C24887) * C32873 +
                     (C24888 + C24889 + C24890) * C2784) *
                        C32543 +
                    ((C31700 * C2672 + C24241 * C2677 + C31686 * C1191 +
                      C32722 * C1205 + C31694 * C727 + C32715 * C736) *
                         C32677 +
                     (C31700 * C2668 + C24241 * C2671 + C31686 * C1178 +
                      C32722 * C1190 + C31694 * C721 + C32715 * C726) *
                         C2785 +
                     (C31700 * C2136 + C24241 * C2146 + C31686 * C378 +
                      C32722 * C392 + C31694 * C375 + C32715 * C391) *
                         C32873 +
                     (C31700 * C2128 + C24241 * C2137 + C31686 * C362 +
                      C32722 * C377 + C31694 * C361 + C32715 * C376) *
                         C2784) *
                        C15789) *
                       C602) *
                      C32578 * C481 +
                  ((((C24890 + C24889 + C24888) * C2784 +
                     (C24887 + C24886 + C24885) * C32873 +
                     (C25942 + C25941 + C25940) * C2785 +
                     (C25939 + C25938 + C25937) * C32677) *
                        C15789 +
                    ((C24884 + C24883 + C24882) * C2784 +
                     (C24881 + C24880 + C24879) * C32873 +
                     (C31694 * C723 + C32715 * C730 + C31686 * C1182 +
                      C32722 * C1198 + C31700 * C2670 + C24241 * C2675) *
                         C2785 +
                     (C31694 * C731 + C32715 * C738 + C31686 * C1199 +
                      C32722 * C1209 + C31700 * C2676 + C24241 * C2679) *
                         C32677) *
                        C32543) *
                       C602 -
                   (((C24697 + C24698 + C24699) * C32677 +
                     (C24700 + C24701 + C24702) * C2785 +
                     (C24293 + C24292 + C24291) * C32873 +
                     (C24290 + C24289 + C24288) * C2784) *
                        C32543 +
                    (C25729 * C32677 + C25730 * C2785 +
                     (C24287 + C24286 + C24285) * C32873 +
                     (C24284 + C24283 + C24282) * C2784) *
                        C15789) *
                       C601) *
                      C32578 * C482)) /
                (p * q * std::sqrt(p + q));
    d2ee[84] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C31694 * C115 + C32715 * C122 + C31686 * C361 +
                     C32722 * C376 + C31700 * C362 + C24241 * C377) *
                        C2784 +
                    (C31694 * C123 + C32715 * C136 + C31686 * C375 +
                     C32722 * C391 + C31700 * C378 + C24241 * C392) *
                        C32873 +
                    (C31694 * C256 + C32715 * C271 + C31686 * C721 +
                     C32722 * C726 + C31700 * C1178 + C24241 * C1190) *
                        C2785 +
                    (C31694 * C270 + C32715 * C286 + C31686 * C727 +
                     C32722 * C736 + C31700 * C1191 + C24241 * C1205) *
                        C32677) *
                       C15789 +
                   ((C24282 + C24283 + C24284) * C2784 +
                    (C24285 + C24286 + C24287) * C32873 +
                    (C24708 + C24707 + C24706) * C2785 +
                    (C24705 + C24704 + C24703) * C32677) *
                       C32543) *
                      C32592 * C32578 * C110 -
                  (((C24697 + C24698 + C24699) * C32677 +
                    (C24700 + C24701 + C24702) * C2785 +
                    (C24293 + C24292 + C24291) * C32873 +
                    (C24290 + C24289 + C24288) * C2784) *
                       C32543 +
                   ((C24703 + C24704 + C24705) * C32677 +
                    (C24706 + C24707 + C24708) * C2785 +
                    (C24287 + C24286 + C24285) * C32873 +
                    (C24284 + C24283 + C24282) * C2784) *
                       C15789) *
                      C32592 * C32578 * C111 +
                  ((C24302 * C2784 + C24303 * C32873 +
                    (C24702 + C24701 + C24700) * C2785 +
                    (C24699 + C24698 + C24697) * C32677) *
                       C15789 +
                   ((C24299 + C24298 + C24297) * C2784 +
                    (C24296 + C24295 + C24294) * C32873 +
                    (C31694 * C253 + C32715 * C265 + C31686 * C724 +
                     C32722 * C732 + C31700 * C2296 + C24241 * C2297) *
                        C2785 +
                    (C31694 * C264 + C32715 * C283 + C31686 * C733 +
                     C32722 * C739 + C31700 * C2298 + C24241 * C2299) *
                        C32677) *
                       C32543) *
                      C32592 * C32578 * C112)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C31694 * C115 + C32715 * C122 + C31686 * C361 +
                     C32722 * C376 + C31700 * C362 + C24241 * C377) *
                        C2784 +
                    (C31694 * C123 + C32715 * C136 + C31686 * C375 +
                     C32722 * C391 + C31700 * C378 + C24241 * C392) *
                        C32873 +
                    (C25365 + C25366 + C25367) * C2785 +
                    (C25368 + C25369 + C25370) * C32677) *
                       C15789 +
                   ((C24282 + C24283 + C24284) * C2784 +
                    (C24285 + C24286 + C24287) * C32873 +
                    (C24708 + C24707 + C24706) * C2785 +
                    (C24705 + C24704 + C24703) * C32677) *
                       C32543) *
                      C32592 * C248 -
                  (((C25371 + C25372 + C25373) * C32677 +
                    (C25374 + C25375 + C25376) * C2785 +
                    (C24703 + C24704 + C24705) * C32873 +
                    (C24706 + C24707 + C24708) * C2784) *
                       C32543 +
                   ((C25377 + C25378 + C25379) * C32677 +
                    (C25380 + C25381 + C25382) * C2785 +
                    (C25370 + C25369 + C25368) * C32873 +
                    (C25367 + C25366 + C25365) * C2784) *
                       C15789) *
                      C32592 * C249 +
                  (((C25382 + C25381 + C25380) * C2784 +
                    (C25379 + C25378 + C25377) * C32873 +
                    (C31694 * C1013 + C32715 * C1022 + C31686 * C1705 +
                     C32722 * C1708 + C31700 * C6403 + C24241 * C6407) *
                        C2785 +
                    (C31694 * C1021 + C32715 * C1031 + C31686 * C1709 +
                     C32722 * C1714 + C31700 * C6408 + C24241 * C6412) *
                        C32677) *
                       C15789 +
                   ((C25376 + C25375 + C25374) * C2784 +
                    (C25373 + C25372 + C25371) * C32873 +
                    (C31694 * C1012 + C32715 * C1020 + C31686 * C1706 +
                     C32722 * C1710 + C31700 * C7236 + C24241 * C7237) *
                        C2785 +
                    (C31694 * C1019 + C32715 * C1030 + C31686 * C1711 +
                     C32722 * C1715 + C31700 * C7238 + C24241 * C7239) *
                        C32677) *
                       C32543) *
                      C32592 * C250) *
                 C32566) /
                    (p * q * std::sqrt(p + q));
    d2ee[85] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C20430 * C115 + C20428 * C122 + C20431 * C361 + C32719 * C376) *
                 C857 +
             (C20430 * C123 + C20428 * C136 + C20431 * C375 + C32719 * C391) *
                 C32939 +
             (C21499 + C21500) * C858 + (C21501 + C21502) * C32927 +
             C21515 * C859 + C21516 * C32904) *
                C15789 +
            ((C20465 + C20466) * C857 + (C20467 + C20468) * C32939 +
             C21857 * C858 + C21858 * C32927 + C21481 * C859 +
             C21482 * C32904) *
                C32543) *
               C32592 * C479 -
           (((C21507 + C21508) * C32904 + (C21509 + C21510) * C859 +
             C21859 * C32927 + C21860 * C858 + C21861 * C32939 +
             C21862 * C857) *
                C32543 +
            ((C21511 + C21512) * C32904 + (C21513 + C21514) * C859 +
             (C21506 + C21505) * C32927 + (C21504 + C21503) * C858 +
             (C21502 + C21501) * C32939 + (C21500 + C21499) * C857) *
                C15789) *
               C32592 * C480) *
              C481 +
          (((C21857 * C857 + C21858 * C32939 + C21481 * C858 + C21482 * C32927 +
             (C21510 + C21509) * C859 + (C21508 + C21507) * C32904) *
                C15789 +
            ((C20848 + C20847) * C857 + (C20846 + C20845) * C32939 +
             (C21318 + C21317) * C858 + (C21316 + C21315) * C32927 +
             (C20430 * C1011 + C20428 * C1018 + C20431 * C1707 +
              C32719 * C1712) *
                 C859 +
             (C20430 * C1017 + C20428 * C1029 + C20431 * C1713 +
              C32719 * C1716) *
                 C32904) *
                C32543) *
               C32592 * C480 -
           (((C21315 + C21316) * C32904 + (C21317 + C21318) * C859 +
             (C20845 + C20846) * C32927 + (C20847 + C20848) * C858 +
             (C20472 + C20471) * C32939 + (C20470 + C20469) * C857) *
                C32543 +
            (C21859 * C32904 + C21860 * C859 + C21861 * C32927 + C21862 * C858 +
             (C20468 + C20467) * C32939 + (C20466 + C20465) * C857) *
                C15789) *
               C32592 * C479) *
              C482)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C20430 * C115 + C20428 * C122 + C20431 * C361 + C32719 * C376) *
                 C114 +
             (C20430 * C123 + C20428 * C136 + C20431 * C375 + C32719 * C391) *
                 C32615) *
                C32945 +
            ((C20465 + C20466) * C114 + (C20467 + C20468) * C32615) * C32938 +
            C20489 * C32925 + C20490 * C32908) *
               C32592 * C479 -
           (((C20841 + C20842) * C32615 + (C20843 + C20844) * C114) * C32908 +
            ((C20845 + C20846) * C32615 + (C20847 + C20848) * C114) * C32925 +
            ((C20849 + C20850) * C32615 + (C20851 + C20852) * C114) * C32938 +
            ((C20431 * C727 + C32719 * C736 + C20430 * C270 + C20428 * C286) *
                 C32615 +
             (C20431 * C721 + C32719 * C726 + C20430 * C256 + C20428 * C271) *
                 C114) *
                C32945) *
               C32592 * C480) *
              C481 +
          ((((C20852 + C20851) * C114 + (C20850 + C20849) * C32615) * C32945 +
            ((C20848 + C20847) * C114 + (C20846 + C20845) * C32615) * C32938 +
            ((C20844 + C20843) * C114 + (C20842 + C20841) * C32615) * C32925 +
            ((C20430 * C252 + C20428 * C263 + C20431 * C725 + C32719 * C734) *
                 C114 +
             (C20430 * C262 + C20428 * C282 + C20431 * C735 + C32719 * C740) *
                 C32615) *
                C32908) *
               C32592 * C480 -
           (((C20477 + C20478) * C32615 + (C20479 + C20480) * C114) * C32908 +
            ((C20476 + C20475) * C32615 + (C20474 + C20473) * C114) * C32925 +
            ((C20472 + C20471) * C32615 + (C20470 + C20469) * C114) * C32938 +
            ((C20468 + C20467) * C32615 + (C20466 + C20465) * C114) * C32945) *
               C32592 * C479) *
              C482)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C22400 * C115 + C32947 * C122 + C22401 * C361 + C32944 * C376 +
              C22402 * C362 + C32935 * C377 + C22403 * C2128 + C32920 * C2137) *
                 C114 +
             (C22400 * C123 + C32947 * C136 + C22401 * C375 + C32944 * C391 +
              C22402 * C378 + C32935 * C392 + C22403 * C2136 + C32920 * C2146) *
                 C32615) *
                C15789 +
            ((C22437 + C22438 + C22439 + C22440) * C114 +
             (C22441 + C22442 + C22443 + C22444) * C32615) *
                C32543) *
               C32592 * C479 -
           (((C22795 + C22796 + C22797 + C22798) * C32615 +
             (C22799 + C22800 + C22801 + C22802) * C114) *
                C32543 +
            ((C22403 * C2672 + C32920 * C2677 + C22402 * C1191 +
              C32935 * C1205 + C22401 * C727 + C32944 * C736 + C22400 * C270 +
              C32947 * C286) *
                 C32615 +
             (C22403 * C2668 + C32920 * C2671 + C22402 * C1178 +
              C32935 * C1190 + C22401 * C721 + C32944 * C726 + C22400 * C256 +
              C32947 * C271) *
                 C114) *
                C15789) *
               C32592 * C480) *
              C481 +
          ((((C22802 + C22801 + C22800 + C22799) * C114 +
             (C22798 + C22797 + C22796 + C22795) * C32615) *
                C15789 +
            ((C22400 * C254 + C32947 * C267 + C22401 * C723 + C32944 * C730 +
              C22402 * C1182 + C32935 * C1198 + C22403 * C2670 +
              C32920 * C2675) *
                 C114 +
             (C22400 * C266 + C32947 * C284 + C22401 * C731 + C32944 * C738 +
              C22402 * C1199 + C32935 * C1209 + C22403 * C2676 +
              C32920 * C2679) *
                 C32615) *
                C32543) *
               C32592 * C480 -
           (((C22445 + C22446 + C22447 + C22448) * C32615 +
             (C22449 + C22450 + C22451 + C22452) * C114) *
                C32543 +
            ((C22444 + C22443 + C22442 + C22441) * C32615 +
             (C22440 + C22439 + C22438 + C22437) * C114) *
                C15789) *
               C32592 * C479) *
              C482)) /
            (p * q * std::sqrt(p + q));
    d2ee[86] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C20430 * C115 + C20428 * C122 + C20431 * C361 + C32719 * C376) *
                 C857 +
             (C20430 * C123 + C20428 * C136 + C20431 * C375 + C32719 * C391) *
                 C32939 +
             (C21499 + C21500) * C858 + (C21501 + C21502) * C32927 +
             C21515 * C859 + C21516 * C32904) *
                C15789 +
            ((C20465 + C20466) * C857 + (C20467 + C20468) * C32939 +
             C21857 * C858 + C21858 * C32927 + C21481 * C859 +
             C21482 * C32904) *
                C32543) *
               C601 -
           (((C22073 + C22074) * C32904 + (C22075 + C22076) * C859 +
             (C22077 + C22078) * C32927 + (C22079 + C22080) * C858 +
             (C21015 + C21016) * C32939 + (C21017 + C21018) * C857) *
                C32543 +
            ((C22291 + C22292) * C32904 + (C22293 + C22294) * C859 +
             (C22295 + C22296) * C32927 + (C22297 + C22298) * C858 +
             (C20431 * C378 + C32719 * C392 + C20430 * C375 + C20428 * C391) *
                 C32939 +
             (C20431 * C362 + C32719 * C377 + C20430 * C361 + C20428 * C376) *
                 C857) *
                C15789) *
               C602) *
              C479 +
          ((((C22298 + C22297) * C857 + (C22296 + C22295) * C32939 +
             (C22294 + C22293) * C858 + (C22292 + C22291) * C32927 +
             (C20430 * C1705 + C20428 * C1708 + C20431 * C6403 +
              C32719 * C6407) *
                 C859 +
             (C20430 * C1709 + C20428 * C1714 + C20431 * C6408 +
              C32719 * C6412) *
                 C32904) *
                C15789 +
            ((C22080 + C22079) * C857 + (C22078 + C22077) * C32939 +
             (C22076 + C22075) * C858 + (C22074 + C22073) * C32927 +
             (C20430 * C1706 + C20428 * C1710 + C20431 * C7236 +
              C32719 * C7237) *
                 C859 +
             (C20430 * C1711 + C20428 * C1715 + C20431 * C7238 +
              C32719 * C7239) *
                 C32904) *
                C32543) *
               C602 -
           (((C21507 + C21508) * C32904 + (C21509 + C21510) * C859 +
             C21859 * C32927 + C21860 * C858 + C21861 * C32939 +
             C21862 * C857) *
                C32543 +
            ((C21511 + C21512) * C32904 + (C21513 + C21514) * C859 +
             (C21506 + C21505) * C32927 + (C21504 + C21503) * C858 +
             (C21502 + C21501) * C32939 + (C21500 + C21499) * C857) *
                C15789) *
               C601) *
              C480) *
         C32566) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C20430 * C115 + C20428 * C122 + C20431 * C361 + C32719 * C376) *
                 C114 +
             (C20430 * C123 + C20428 * C136 + C20431 * C375 + C32719 * C391) *
                 C32615) *
                C32945 +
            ((C20465 + C20466) * C114 + (C20467 + C20468) * C32615) * C32938 +
            C20489 * C32925 + C20490 * C32908) *
               C601 -
           (((C21007 + C21008) * C32615 + (C21009 + C21010) * C114) * C32908 +
            ((C21011 + C21012) * C32615 + (C21013 + C21014) * C114) * C32925 +
            ((C21015 + C21016) * C32615 + (C21017 + C21018) * C114) * C32938 +
            ((C20431 * C378 + C32719 * C392 + C20430 * C375 + C20428 * C391) *
                 C32615 +
             (C20431 * C362 + C32719 * C377 + C20430 * C361 + C20428 * C376) *
                 C114) *
                C32945) *
               C602) *
              C479 +
          ((((C20430 * C721 + C20428 * C726 + C20431 * C1178 + C32719 * C1190) *
                 C114 +
             (C20430 * C727 + C20428 * C736 + C20431 * C1191 + C32719 * C1205) *
                 C32615) *
                C32945 +
            ((C20430 * C722 + C20428 * C728 + C20431 * C1180 + C32719 * C1194) *
                 C114 +
             (C20430 * C729 + C20428 * C737 + C20431 * C1195 + C32719 * C1207) *
                 C32615) *
                C32938 +
            ((C20430 * C723 + C20428 * C730 + C20431 * C1182 + C32719 * C1198) *
                 C114 +
             (C20430 * C731 + C20428 * C738 + C20431 * C1199 + C32719 * C1209) *
                 C32615) *
                C32925 +
            ((C20430 * C724 + C20428 * C732 + C20431 * C2296 + C32719 * C2297) *
                 C114 +
             (C20430 * C733 + C20428 * C739 + C20431 * C2298 + C32719 * C2299) *
                 C32615) *
                C32908) *
               C602 -
           (((C20841 + C20842) * C32615 + (C20843 + C20844) * C114) * C32908 +
            ((C20845 + C20846) * C32615 + (C20847 + C20848) * C114) * C32925 +
            ((C20849 + C20850) * C32615 + (C20851 + C20852) * C114) * C32938 +
            ((C20431 * C727 + C32719 * C736 + C20430 * C270 + C20428 * C286) *
                 C32615 +
             (C20431 * C721 + C32719 * C726 + C20430 * C256 + C20428 * C271) *
                 C114) *
                C32945) *
               C601) *
              C480) *
         C32566) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C22400 * C115 + C32947 * C122 + C22401 * C361 + C32944 * C376 +
              C22402 * C362 + C32935 * C377 + C22403 * C2128 + C32920 * C2137) *
                 C114 +
             (C22400 * C123 + C32947 * C136 + C22401 * C375 + C32944 * C391 +
              C22402 * C378 + C32935 * C392 + C22403 * C2136 + C32920 * C2146) *
                 C32615) *
                C15789 +
            ((C22437 + C22438 + C22439 + C22440) * C114 +
             (C22441 + C22442 + C22443 + C22444) * C32615) *
                C32543) *
               C601 -
           (((C22949 + C22950 + C22951 + C22952) * C32615 +
             (C22953 + C22954 + C22955 + C22956) * C114) *
                C32543 +
            ((C22403 * C2139 + C32920 * C2147 + C22402 * C2136 +
              C32935 * C2146 + C22401 * C378 + C32944 * C392 + C22400 * C375 +
              C32947 * C391) *
                 C32615 +
             (C22403 * C2129 + C32920 * C2138 + C22402 * C2128 +
              C32935 * C2137 + C22401 * C362 + C32944 * C377 + C22400 * C361 +
              C32947 * C376) *
                 C114) *
                C15789) *
               C602) *
              C479 +
          ((((C22400 * C721 + C32947 * C726 + C22401 * C1178 + C32944 * C1190 +
              C22402 * C2668 + C32935 * C2671 + C22403 * C7079 +
              C32920 * C7083) *
                 C114 +
             (C22400 * C727 + C32947 * C736 + C22401 * C1191 + C32944 * C1205 +
              C22402 * C2672 + C32935 * C2677 + C22403 * C7084 +
              C32920 * C7088) *
                 C32615) *
                C15789 +
            ((C22400 * C722 + C32947 * C728 + C22401 * C1180 + C32944 * C1194 +
              C22402 * C2669 + C32935 * C2673 + C22403 * C12183 +
              C32920 * C12184) *
                 C114 +
             (C22400 * C729 + C32947 * C737 + C22401 * C1195 + C32944 * C1207 +
              C22402 * C2674 + C32935 * C2678 + C22403 * C12185 +
              C32920 * C12186) *
                 C32615) *
                C32543) *
               C602 -
           (((C22795 + C22796 + C22797 + C22798) * C32615 +
             (C22799 + C22800 + C22801 + C22802) * C114) *
                C32543 +
            ((C22403 * C2672 + C32920 * C2677 + C22402 * C1191 +
              C32935 * C1205 + C22401 * C727 + C32944 * C736 + C22400 * C270 +
              C32947 * C286) *
                 C32615 +
             (C22403 * C2668 + C32920 * C2671 + C22402 * C1178 +
              C32935 * C1190 + C22401 * C721 + C32944 * C726 + C22400 * C256 +
              C32947 * C271) *
                 C114) *
                C15789) *
               C601) *
              C480) *
         C32566) /
            (p * q * std::sqrt(p + q));
    d2ee[87] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C20430 * C115 + C20428 * C122 + C20431 * C361 +
                 C32719 * C376) *
                    C114 +
                (C20430 * C123 + C20428 * C136 + C20431 * C375 +
                 C32719 * C391) *
                    C32615) *
                   C32945 +
               ((C20465 + C20466) * C114 + (C20467 + C20468) * C32615) *
                   C32938 +
               C20489 * C32925 + C20490 * C32908) *
                  C32592 * C32578 * C110 -
              (((C20477 + C20478) * C32615 + (C20479 + C20480) * C114) *
                   C32908 +
               ((C20476 + C20475) * C32615 + (C20474 + C20473) * C114) *
                   C32925 +
               ((C20472 + C20471) * C32615 + (C20470 + C20469) * C114) *
                   C32938 +
               ((C20468 + C20467) * C32615 + (C20466 + C20465) * C114) *
                   C32945) *
                  C32592 * C32578 * C111 +
              (C20489 * C32945 + C20490 * C32938 +
               ((C20480 + C20479) * C114 + (C20478 + C20477) * C32615) *
                   C32925 +
               ((C20430 * C120 + C20428 * C133 + C20431 * C603 +
                 C32719 * C604) *
                    C114 +
                (C20430 * C132 + C20428 * C141 + C20431 * C605 +
                 C32719 * C606) *
                    C32615) *
                   C32908) *
                  C32592 * C32578 * C112) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C20430 * C115 + C20428 * C122 + C20431 * C361 +
                 C32719 * C376) *
                    C114 +
                (C20430 * C123 + C20428 * C136 + C20431 * C375 +
                 C32719 * C391) *
                    C32615) *
                   C32945 +
               ((C20465 + C20466) * C114 + (C20467 + C20468) * C32615) *
                   C32938 +
               C20489 * C32925 + C20490 * C32908) *
                  C32592 * C248 -
              (((C20431 * C733 + C32719 * C739 + C20430 * C264 +
                 C20428 * C283) *
                    C32615 +
                (C20431 * C724 + C32719 * C732 + C20430 * C253 +
                 C20428 * C265) *
                    C114) *
                   C32908 +
               ((C20431 * C731 + C32719 * C738 + C20430 * C266 +
                 C20428 * C284) *
                    C32615 +
                (C20431 * C723 + C32719 * C730 + C20430 * C254 +
                 C20428 * C267) *
                    C114) *
                   C32925 +
               ((C20431 * C729 + C32719 * C737 + C20430 * C268 +
                 C20428 * C285) *
                    C32615 +
                (C20431 * C722 + C32719 * C728 + C20430 * C255 +
                 C20428 * C269) *
                    C114) *
                   C32938 +
               ((C20431 * C727 + C32719 * C736 + C20430 * C270 +
                 C20428 * C286) *
                    C32615 +
                (C20431 * C721 + C32719 * C726 + C20430 * C256 +
                 C20428 * C271) *
                    C114) *
                   C32945) *
                  C32592 * C249 +
              (((C20430 * C257 + C20428 * C272 + C20431 * C1177 +
                 C32719 * C1189) *
                    C114 +
                (C20430 * C273 + C20428 * C287 + C20431 * C1188 +
                 C32719 * C1204) *
                    C32615) *
                   C32945 +
               ((C20430 * C258 + C20428 * C274 + C20431 * C1176 +
                 C32719 * C1187) *
                    C114 +
                (C20430 * C275 + C20428 * C288 + C20431 * C1186 +
                 C32719 * C1203) *
                    C32615) *
                   C32938 +
               ((C20430 * C259 + C20428 * C276 + C20431 * C1175 +
                 C32719 * C1185) *
                    C114 +
                (C20430 * C277 + C20428 * C289 + C20431 * C1184 +
                 C32719 * C1202) *
                    C32615) *
                   C32925 +
               ((C20430 * C260 + C20428 * C278 + C20431 * C1519 +
                 C32719 * C1520) *
                    C114 +
                (C20430 * C279 + C20428 * C290 + C20431 * C1521 +
                 C32719 * C1522) *
                    C32615) *
                   C32908) *
                  C32592 * C250) *
             C32566) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C20430 * C115 + C20428 * C122 + C20431 * C361 + C32719 * C376) *
                C114 +
            (C20430 * C123 + C20428 * C136 + C20431 * C375 + C32719 * C391) *
                C32615) *
               C32945 +
           ((C20465 + C20466) * C114 + (C20467 + C20468) * C32615) * C32938 +
           C20489 * C32925 + C20490 * C32908) *
              C354 -
          (((C20431 * C384 + C32719 * C395 + C20430 * C369 + C20428 * C388) *
                C32615 +
            (C20431 * C365 + C32719 * C383 + C20430 * C358 + C20428 * C370) *
                C114) *
               C32908 +
           ((C20431 * C382 + C32719 * C394 + C20430 * C371 + C20428 * C389) *
                C32615 +
            (C20431 * C364 + C32719 * C381 + C20430 * C359 + C20428 * C372) *
                C114) *
               C32925 +
           ((C20431 * C380 + C32719 * C393 + C20430 * C373 + C20428 * C390) *
                C32615 +
            (C20431 * C363 + C32719 * C379 + C20430 * C360 + C20428 * C374) *
                C114) *
               C32938 +
           ((C20431 * C378 + C32719 * C392 + C20430 * C375 + C20428 * C391) *
                C32615 +
            (C20431 * C362 + C32719 * C377 + C20430 * C361 + C20428 * C376) *
                C114) *
               C32945) *
              C355 +
          (((C20430 * C362 + C20428 * C377 + C20431 * C2128 + C32719 * C2137) *
                C114 +
            (C20430 * C378 + C20428 * C392 + C20431 * C2136 + C32719 * C2146) *
                C32615) *
               C32945 +
           ((C20430 * C363 + C20428 * C379 + C20431 * C2127 + C32719 * C2135) *
                C114 +
            (C20430 * C380 + C20428 * C393 + C20431 * C2134 + C32719 * C2145) *
                C32615) *
               C32938 +
           ((C20430 * C364 + C20428 * C381 + C20431 * C2126 + C32719 * C2133) *
                C114 +
            (C20430 * C382 + C20428 * C394 + C20431 * C2132 + C32719 * C2144) *
                C32615) *
               C32925 +
           ((C20430 * C365 + C20428 * C383 + C20431 * C2482 + C32719 * C2483) *
                C114 +
            (C20430 * C384 + C20428 * C395 + C20431 * C2484 + C32719 * C2485) *
                C32615) *
               C32908) *
              C356) *
         C32578 * C32566) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C20430 * C115 + C20428 * C122 + C20431 * C361 + C32719 * C376) *
                C857 +
            (C20430 * C123 + C20428 * C136 + C20431 * C375 + C32719 * C391) *
                C32939 +
            (C20430 * C256 + C20428 * C271 + C20431 * C721 + C32719 * C726) *
                C858 +
            (C20430 * C270 + C20428 * C286 + C20431 * C727 + C32719 * C736) *
                C32927 +
            (C20430 * C257 + C20428 * C272 + C20431 * C1177 + C32719 * C1189) *
                C859 +
            (C20430 * C273 + C20428 * C287 + C20431 * C1188 + C32719 * C1204) *
                C32904) *
               C15789 +
           ((C20465 + C20466) * C857 + (C20467 + C20468) * C32939 +
            (C20852 + C20851) * C858 + (C20850 + C20849) * C32927 +
            (C21311 + C21312) * C859 + (C21313 + C21314) * C32904) *
               C32543) *
              C32592 * C32578 * C110 -
          (((C21315 + C21316) * C32904 + (C21317 + C21318) * C859 +
            (C20845 + C20846) * C32927 + (C20847 + C20848) * C858 +
            (C20472 + C20471) * C32939 + (C20470 + C20469) * C857) *
               C32543 +
           ((C21314 + C21313) * C32904 + (C21312 + C21311) * C859 +
            (C20849 + C20850) * C32927 + (C20851 + C20852) * C858 +
            (C20468 + C20467) * C32939 + (C20466 + C20465) * C857) *
               C15789) *
              C32592 * C32578 * C111 +
          ((C20481 * C857 + C20482 * C32939 + (C20848 + C20847) * C858 +
            (C20846 + C20845) * C32927 + (C21318 + C21317) * C859 +
            (C21316 + C21315) * C32904) *
               C15789 +
           (C20483 * C857 + C20484 * C32939 + (C20844 + C20843) * C858 +
            (C20842 + C20841) * C32927 +
            (C20430 * C260 + C20428 * C278 + C20431 * C1519 + C32719 * C1520) *
                C859 +
            (C20430 * C279 + C20428 * C290 + C20431 * C1521 + C32719 * C1522) *
                C32904) *
               C32543) *
              C32592 * C32578 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C20430 * C115 + C20428 * C122 + C20431 * C361 + C32719 * C376) *
                C857 +
            (C20430 * C123 + C20428 * C136 + C20431 * C375 + C32719 * C391) *
                C32939 +
            (C21499 + C21500) * C858 + (C21501 + C21502) * C32927 +
            C21515 * C859 + C21516 * C32904) *
               C15789 +
           ((C20465 + C20466) * C857 + (C20467 + C20468) * C32939 +
            (C20852 + C20851) * C858 + (C20850 + C20849) * C32927 +
            C21481 * C859 + C21482 * C32904) *
               C32543) *
              C32592 * C248 -
          (((C21507 + C21508) * C32904 + (C21509 + C21510) * C859 +
            (C21314 + C21313) * C32927 + (C21312 + C21311) * C858 +
            (C20849 + C20850) * C32939 + (C20851 + C20852) * C857) *
               C32543 +
           ((C21511 + C21512) * C32904 + (C21513 + C21514) * C859 +
            (C21506 + C21505) * C32927 + (C21504 + C21503) * C858 +
            (C21502 + C21501) * C32939 + (C21500 + C21499) * C857) *
               C15789) *
              C32592 * C249 +
          ((C21515 * C857 + C21516 * C32939 + (C21514 + C21513) * C858 +
            (C21512 + C21511) * C32927 +
            (C20430 * C1014 + C20428 * C1023 + C20431 * C6402 +
             C32719 * C6406) *
                C859 +
            (C20430 * C1024 + C20428 * C1032 + C20431 * C6405 +
             C32719 * C6411) *
                C32904) *
               C15789 +
           (C21481 * C857 + C21482 * C32939 + (C21510 + C21509) * C858 +
            (C21508 + C21507) * C32927 +
            (C20430 * C1015 + C20428 * C1025 + C20431 * C6588 +
             C32719 * C6589) *
                C859 +
            (C20430 * C1026 + C20428 * C1033 + C20431 * C6590 +
             C32719 * C6591) *
                C32904) *
               C32543) *
              C32592 * C250) *
         C32566) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C20430 * C115 + C20428 * C122 + C20431 * C361 + C32719 * C376) *
                C857 +
            (C20430 * C123 + C20428 * C136 + C20431 * C375 + C32719 * C391) *
                C32939 +
            (C21499 + C21500) * C858 + (C21501 + C21502) * C32927 +
            C21515 * C859 + C21516 * C32904) *
               C15789 +
           ((C20465 + C20466) * C857 + (C20467 + C20468) * C32939 +
            (C20852 + C20851) * C858 + (C20850 + C20849) * C32927 +
            C21481 * C859 + C21482 * C32904) *
               C32543) *
              C354 -
          (((C20431 * C1197 + C32719 * C1208 + C20430 * C1186 +
             C20428 * C1203) *
                C32904 +
            (C20431 * C1181 + C32719 * C1196 + C20430 * C1176 +
             C20428 * C1187) *
                C859 +
            (C20431 * C1195 + C32719 * C1207 + C20430 * C729 + C20428 * C737) *
                C32927 +
            (C20431 * C1180 + C32719 * C1194 + C20430 * C722 + C20428 * C728) *
                C858 +
            (C21015 + C21016) * C32939 + (C21017 + C21018) * C857) *
               C32543 +
           ((C20431 * C1193 + C32719 * C1206 + C20430 * C1188 +
             C20428 * C1204) *
                C32904 +
            (C20431 * C1179 + C32719 * C1192 + C20430 * C1177 +
             C20428 * C1189) *
                C859 +
            (C20431 * C1191 + C32719 * C1205 + C20430 * C727 + C20428 * C736) *
                C32927 +
            (C20431 * C1178 + C32719 * C1190 + C20430 * C721 + C20428 * C726) *
                C858 +
            (C20431 * C378 + C32719 * C392 + C20430 * C375 + C20428 * C391) *
                C32939 +
            (C20431 * C362 + C32719 * C377 + C20430 * C361 + C20428 * C376) *
                C857) *
               C15789) *
              C355 +
          (((C20430 * C362 + C20428 * C377 + C20431 * C2128 + C32719 * C2137) *
                C857 +
            (C20430 * C378 + C20428 * C392 + C20431 * C2136 + C32719 * C2146) *
                C32939 +
            (C20430 * C1178 + C20428 * C1190 + C20431 * C2668 +
             C32719 * C2671) *
                C858 +
            (C20430 * C1191 + C20428 * C1205 + C20431 * C2672 +
             C32719 * C2677) *
                C32927 +
            (C20430 * C1179 + C20428 * C1192 + C20431 * C7078 +
             C32719 * C7082) *
                C859 +
            (C20430 * C1193 + C20428 * C1206 + C20431 * C7081 +
             C32719 * C7087) *
                C32904) *
               C15789 +
           ((C20430 * C363 + C20428 * C379 + C20431 * C2127 + C32719 * C2135) *
                C857 +
            (C20430 * C380 + C20428 * C393 + C20431 * C2134 + C32719 * C2145) *
                C32939 +
            (C20430 * C1180 + C20428 * C1194 + C20431 * C2669 +
             C32719 * C2673) *
                C858 +
            (C20430 * C1195 + C20428 * C1207 + C20431 * C2674 +
             C32719 * C2678) *
                C32927 +
            (C20430 * C1181 + C20428 * C1196 + C20431 * C7404 +
             C32719 * C7405) *
                C859 +
            (C20430 * C1197 + C20428 * C1208 + C20431 * C7406 +
             C32719 * C7407) *
                C32904) *
               C32543) *
              C356) *
         C32578 * C32566) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C22400 * C115 + C32947 * C122 + C22401 * C361 + C32944 * C376 +
             C22402 * C362 + C32935 * C377 + C22403 * C2128 + C32920 * C2137) *
                C114 +
            (C22400 * C123 + C32947 * C136 + C22401 * C375 + C32944 * C391 +
             C22402 * C378 + C32935 * C392 + C22403 * C2136 + C32920 * C2146) *
                C32615) *
               C15789 +
           ((C22437 + C22438 + C22439 + C22440) * C114 +
            (C22441 + C22442 + C22443 + C22444) * C32615) *
               C32543) *
              C32592 * C32578 * C110 -
          (((C22445 + C22446 + C22447 + C22448) * C32615 +
            (C22449 + C22450 + C22451 + C22452) * C114) *
               C32543 +
           ((C22444 + C22443 + C22442 + C22441) * C32615 +
            (C22440 + C22439 + C22438 + C22437) * C114) *
               C15789) *
              C32592 * C32578 * C111 +
          (((C22452 + C22451 + C22450 + C22449) * C114 +
            (C22448 + C22447 + C22446 + C22445) * C32615) *
               C15789 +
           ((C22400 * C118 + C32947 * C128 + C22401 * C358 + C32944 * C370 +
             C22402 * C365 + C32935 * C383 + C22403 * C2482 + C32920 * C2483) *
                C114 +
            (C22400 * C129 + C32947 * C139 + C22401 * C369 + C32944 * C388 +
             C22402 * C384 + C32935 * C395 + C22403 * C2484 + C32920 * C2485) *
                C32615) *
               C32543) *
              C32592 * C32578 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C22400 * C115 + C32947 * C122 + C22401 * C361 + C32944 * C376 +
             C22402 * C362 + C32935 * C377 + C22403 * C2128 + C32920 * C2137) *
                C114 +
            (C22400 * C123 + C32947 * C136 + C22401 * C375 + C32944 * C391 +
             C22402 * C378 + C32935 * C392 + C22403 * C2136 + C32920 * C2146) *
                C32615) *
               C15789 +
           ((C22437 + C22438 + C22439 + C22440) * C114 +
            (C22441 + C22442 + C22443 + C22444) * C32615) *
               C32543) *
              C32592 * C248 -
          (((C22403 * C2674 + C32920 * C2678 + C22402 * C1195 + C32935 * C1207 +
             C22401 * C729 + C32944 * C737 + C22400 * C268 + C32947 * C285) *
                C32615 +
            (C22403 * C2669 + C32920 * C2673 + C22402 * C1180 + C32935 * C1194 +
             C22401 * C722 + C32944 * C728 + C22400 * C255 + C32947 * C269) *
                C114) *
               C32543 +
           ((C22403 * C2672 + C32920 * C2677 + C22402 * C1191 + C32935 * C1205 +
             C22401 * C727 + C32944 * C736 + C22400 * C270 + C32947 * C286) *
                C32615 +
            (C22403 * C2668 + C32920 * C2671 + C22402 * C1178 + C32935 * C1190 +
             C22401 * C721 + C32944 * C726 + C22400 * C256 + C32947 * C271) *
                C114) *
               C15789) *
              C32592 * C249 +
          (((C22400 * C257 + C32947 * C272 + C22401 * C1177 + C32944 * C1189 +
             C22402 * C1179 + C32935 * C1192 + C22403 * C7078 +
             C32920 * C7082) *
                C114 +
            (C22400 * C273 + C32947 * C287 + C22401 * C1188 + C32944 * C1204 +
             C22402 * C1193 + C32935 * C1206 + C22403 * C7081 +
             C32920 * C7087) *
                C32615) *
               C15789 +
           ((C22400 * C258 + C32947 * C274 + C22401 * C1176 + C32944 * C1187 +
             C22402 * C1181 + C32935 * C1196 + C22403 * C7404 +
             C32920 * C7405) *
                C114 +
            (C22400 * C275 + C32947 * C288 + C22401 * C1186 + C32944 * C1203 +
             C22402 * C1197 + C32935 * C1208 + C22403 * C7406 +
             C32920 * C7407) *
                C32615) *
               C32543) *
              C32592 * C250) *
         C32566) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C22400 * C115 + C32947 * C122 + C22401 * C361 + C32944 * C376 +
             C22402 * C362 + C32935 * C377 + C22403 * C2128 + C32920 * C2137) *
                C114 +
            (C22400 * C123 + C32947 * C136 + C22401 * C375 + C32944 * C391 +
             C22402 * C378 + C32935 * C392 + C22403 * C2136 + C32920 * C2146) *
                C32615) *
               C15789 +
           ((C22437 + C22438 + C22439 + C22440) * C114 +
            (C22441 + C22442 + C22443 + C22444) * C32615) *
               C32543) *
              C354 -
          (((C22403 * C2141 + C32920 * C2148 + C22402 * C2134 + C32935 * C2145 +
             C22401 * C380 + C32944 * C393 + C22400 * C373 + C32947 * C390) *
                C32615 +
            (C22403 * C2130 + C32920 * C2140 + C22402 * C2127 + C32935 * C2135 +
             C22401 * C363 + C32944 * C379 + C22400 * C360 + C32947 * C374) *
                C114) *
               C32543 +
           ((C22403 * C2139 + C32920 * C2147 + C22402 * C2136 + C32935 * C2146 +
             C22401 * C378 + C32944 * C392 + C22400 * C375 + C32947 * C391) *
                C32615 +
            (C22403 * C2129 + C32920 * C2138 + C22402 * C2128 + C32935 * C2137 +
             C22401 * C362 + C32944 * C377 + C22400 * C361 + C32947 * C376) *
                C114) *
               C15789) *
              C355 +
          (((C22400 * C362 + C32947 * C377 + C22401 * C2128 + C32944 * C2137 +
             C22402 * C2129 + C32935 * C2138 + C22403 * C12093 +
             C32920 * C12096) *
                C114 +
            (C22400 * C378 + C32947 * C392 + C22401 * C2136 + C32944 * C2146 +
             C22402 * C2139 + C32935 * C2147 + C22403 * C12095 +
             C32920 * C12099) *
                C32615) *
               C15789 +
           ((C22400 * C363 + C32947 * C379 + C22401 * C2127 + C32944 * C2135 +
             C22402 * C2130 + C32935 * C2140 + C22403 * C12269 +
             C32920 * C12270) *
                C114 +
            (C22400 * C380 + C32947 * C393 + C22401 * C2134 + C32944 * C2145 +
             C22402 * C2141 + C32935 * C2148 + C22403 * C12271 +
             C32920 * C12272) *
                C32615) *
               C32543) *
              C356) *
         C32578 * C32566) /
            (p * q * std::sqrt(p + q));
    d2ee[88] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C20430 * C115 + C20428 * C122 + C20431 * C361 + C32719 * C376) *
                 C857 +
             (C20430 * C123 + C20428 * C136 + C20431 * C375 + C32719 * C391) *
                 C32939 +
             (C21499 + C21500) * C858 + (C21501 + C21502) * C32927 +
             C21515 * C859 + C21516 * C32904) *
                C15789 +
            ((C20465 + C20466) * C857 + (C20467 + C20468) * C32939 +
             C21857 * C858 + C21858 * C32927 + C21481 * C859 +
             C21482 * C32904) *
                C32543) *
               C601 -
           (((C22073 + C22074) * C32904 + (C22075 + C22076) * C859 +
             (C22077 + C22078) * C32927 + (C22079 + C22080) * C858 +
             (C21015 + C21016) * C32939 + (C21017 + C21018) * C857) *
                C32543 +
            ((C20431 * C1193 + C32719 * C1206 + C20430 * C1188 +
              C20428 * C1204) *
                 C32904 +
             (C20431 * C1179 + C32719 * C1192 + C20430 * C1177 +
              C20428 * C1189) *
                 C859 +
             (C20431 * C1191 + C32719 * C1205 + C20430 * C727 + C20428 * C736) *
                 C32927 +
             (C20431 * C1178 + C32719 * C1190 + C20430 * C721 + C20428 * C726) *
                 C858 +
             (C20431 * C378 + C32719 * C392 + C20430 * C375 + C20428 * C391) *
                 C32939 +
             (C20431 * C362 + C32719 * C377 + C20430 * C361 + C20428 * C376) *
                 C857) *
                C15789) *
               C602) *
              C32578 * C481 +
          ((((C21018 + C21017) * C857 + (C21016 + C21015) * C32939 +
             (C22080 + C22079) * C858 + (C22078 + C22077) * C32927 +
             (C22076 + C22075) * C859 + (C22074 + C22073) * C32904) *
                C15789 +
            ((C21014 + C21013) * C857 + (C21012 + C21011) * C32939 +
             (C20430 * C723 + C20428 * C730 + C20431 * C1182 + C32719 * C1198) *
                 C858 +
             (C20430 * C731 + C20428 * C738 + C20431 * C1199 + C32719 * C1209) *
                 C32927 +
             (C20430 * C1175 + C20428 * C1185 + C20431 * C1183 +
              C32719 * C1200) *
                 C859 +
             (C20430 * C1184 + C20428 * C1202 + C20431 * C1201 +
              C32719 * C1210) *
                 C32904) *
                C32543) *
               C602 -
           (((C21315 + C21316) * C32904 + (C21317 + C21318) * C859 +
             (C20845 + C20846) * C32927 + (C20847 + C20848) * C858 +
             (C20472 + C20471) * C32939 + (C20470 + C20469) * C857) *
                C32543 +
            (C21859 * C32904 + C21860 * C859 + C21861 * C32927 + C21862 * C858 +
             (C20468 + C20467) * C32939 + (C20466 + C20465) * C857) *
                C15789) *
               C601) *
              C32578 * C482)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C20430 * C115 + C20428 * C122 + C20431 * C361 + C32719 * C376) *
                 C114 +
             (C20430 * C123 + C20428 * C136 + C20431 * C375 + C32719 * C391) *
                 C32615) *
                C32945 +
            ((C20465 + C20466) * C114 + (C20467 + C20468) * C32615) * C32938 +
            C20489 * C32925 + C20490 * C32908) *
               C601 -
           (((C21007 + C21008) * C32615 + (C21009 + C21010) * C114) * C32908 +
            ((C21011 + C21012) * C32615 + (C21013 + C21014) * C114) * C32925 +
            ((C21015 + C21016) * C32615 + (C21017 + C21018) * C114) * C32938 +
            ((C20431 * C378 + C32719 * C392 + C20430 * C375 + C20428 * C391) *
                 C32615 +
             (C20431 * C362 + C32719 * C377 + C20430 * C361 + C20428 * C376) *
                 C114) *
                C32945) *
               C602) *
              C32578 * C481 +
          ((((C21018 + C21017) * C114 + (C21016 + C21015) * C32615) * C32945 +
            ((C21014 + C21013) * C114 + (C21012 + C21011) * C32615) * C32938 +
            ((C21010 + C21009) * C114 + (C21008 + C21007) * C32615) * C32925 +
            ((C20430 * C357 + C20428 * C368 + C20431 * C366 + C32719 * C385) *
                 C114 +
             (C20430 * C367 + C20428 * C387 + C20431 * C386 + C32719 * C396) *
                 C32615) *
                C32908) *
               C602 -
           (((C20477 + C20478) * C32615 + (C20479 + C20480) * C114) * C32908 +
            ((C20476 + C20475) * C32615 + (C20474 + C20473) * C114) * C32925 +
            ((C20472 + C20471) * C32615 + (C20470 + C20469) * C114) * C32938 +
            ((C20468 + C20467) * C32615 + (C20466 + C20465) * C114) * C32945) *
               C601) *
              C32578 * C482)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C22400 * C115 + C32947 * C122 + C22401 * C361 + C32944 * C376 +
              C22402 * C362 + C32935 * C377 + C22403 * C2128 + C32920 * C2137) *
                 C114 +
             (C22400 * C123 + C32947 * C136 + C22401 * C375 + C32944 * C391 +
              C22402 * C378 + C32935 * C392 + C22403 * C2136 + C32920 * C2146) *
                 C32615) *
                C15789 +
            ((C22437 + C22438 + C22439 + C22440) * C114 +
             (C22441 + C22442 + C22443 + C22444) * C32615) *
                C32543) *
               C601 -
           (((C22949 + C22950 + C22951 + C22952) * C32615 +
             (C22953 + C22954 + C22955 + C22956) * C114) *
                C32543 +
            ((C22403 * C2139 + C32920 * C2147 + C22402 * C2136 +
              C32935 * C2146 + C22401 * C378 + C32944 * C392 + C22400 * C375 +
              C32947 * C391) *
                 C32615 +
             (C22403 * C2129 + C32920 * C2138 + C22402 * C2128 +
              C32935 * C2137 + C22401 * C362 + C32944 * C377 + C22400 * C361 +
              C32947 * C376) *
                 C114) *
                C15789) *
               C602) *
              C32578 * C481 +
          ((((C22956 + C22955 + C22954 + C22953) * C114 +
             (C22952 + C22951 + C22950 + C22949) * C32615) *
                C15789 +
            ((C22400 * C359 + C32947 * C372 + C22401 * C364 + C32944 * C381 +
              C22402 * C2126 + C32935 * C2133 + C22403 * C2131 +
              C32920 * C2142) *
                 C114 +
             (C22400 * C371 + C32947 * C389 + C22401 * C382 + C32944 * C394 +
              C22402 * C2132 + C32935 * C2144 + C22403 * C2143 +
              C32920 * C2149) *
                 C32615) *
                C32543) *
               C602 -
           (((C22445 + C22446 + C22447 + C22448) * C32615 +
             (C22449 + C22450 + C22451 + C22452) * C114) *
                C32543 +
            ((C22444 + C22443 + C22442 + C22441) * C32615 +
             (C22440 + C22439 + C22438 + C22437) * C114) *
                C15789) *
               C601) *
              C32578 * C482)) /
            (p * q * std::sqrt(p + q));
    d2ee[89] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C20430 * C115 + C20428 * C122 + C20431 * C361 + C32719 * C376) *
                C114 +
            (C20430 * C123 + C20428 * C136 + C20431 * C375 + C32719 * C391) *
                C32615) *
               C32945 +
           ((C20465 + C20466) * C114 + (C20467 + C20468) * C32615) * C32938 +
           C20489 * C32925 + C20490 * C32908) *
              C32592 * C248 -
          (((C20431 * C733 + C32719 * C739 + C20430 * C264 + C20428 * C283) *
                C32615 +
            (C20431 * C724 + C32719 * C732 + C20430 * C253 + C20428 * C265) *
                C114) *
               C32908 +
           ((C20431 * C731 + C32719 * C738 + C20430 * C266 + C20428 * C284) *
                C32615 +
            (C20431 * C723 + C32719 * C730 + C20430 * C254 + C20428 * C267) *
                C114) *
               C32925 +
           ((C20431 * C729 + C32719 * C737 + C20430 * C268 + C20428 * C285) *
                C32615 +
            (C20431 * C722 + C32719 * C728 + C20430 * C255 + C20428 * C269) *
                C114) *
               C32938 +
           ((C20431 * C727 + C32719 * C736 + C20430 * C270 + C20428 * C286) *
                C32615 +
            (C20431 * C721 + C32719 * C726 + C20430 * C256 + C20428 * C271) *
                C114) *
               C32945) *
              C32592 * C249 +
          (((C20430 * C257 + C20428 * C272 + C20431 * C1177 + C32719 * C1189) *
                C114 +
            (C20430 * C273 + C20428 * C287 + C20431 * C1188 + C32719 * C1204) *
                C32615) *
               C32945 +
           ((C20430 * C258 + C20428 * C274 + C20431 * C1176 + C32719 * C1187) *
                C114 +
            (C20430 * C275 + C20428 * C288 + C20431 * C1186 + C32719 * C1203) *
                C32615) *
               C32938 +
           ((C20430 * C259 + C20428 * C276 + C20431 * C1175 + C32719 * C1185) *
                C114 +
            (C20430 * C277 + C20428 * C289 + C20431 * C1184 + C32719 * C1202) *
                C32615) *
               C32925 +
           ((C20430 * C260 + C20428 * C278 + C20431 * C1519 + C32719 * C1520) *
                C114 +
            (C20430 * C279 + C20428 * C290 + C20431 * C1521 + C32719 * C1522) *
                C32615) *
               C32908) *
              C32592 * C250) *
         C32566) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C20430 * C115 + C20428 * C122 + C20431 * C361 + C32719 * C376) *
                C114 +
            (C20430 * C123 + C20428 * C136 + C20431 * C375 + C32719 * C391) *
                C32615) *
               C32945 +
           ((C20465 + C20466) * C114 + (C20467 + C20468) * C32615) * C32938 +
           C20489 * C32925 + C20490 * C32908) *
              C32592 * C32578 * C110 -
          (((C20477 + C20478) * C32615 + (C20479 + C20480) * C114) * C32908 +
           ((C20476 + C20475) * C32615 + (C20474 + C20473) * C114) * C32925 +
           ((C20472 + C20471) * C32615 + (C20470 + C20469) * C114) * C32938 +
           ((C20468 + C20467) * C32615 + (C20466 + C20465) * C114) * C32945) *
              C32592 * C32578 * C111 +
          (C20489 * C32945 + C20490 * C32938 +
           ((C20480 + C20479) * C114 + (C20478 + C20477) * C32615) * C32925 +
           ((C20430 * C120 + C20428 * C133 + C20431 * C603 + C32719 * C604) *
                C114 +
            (C20430 * C132 + C20428 * C141 + C20431 * C605 + C32719 * C606) *
                C32615) *
               C32908) *
              C32592 * C32578 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C20430 * C115 + C20428 * C122 + C20431 * C361 + C32719 * C376) *
                C857 +
            (C20430 * C123 + C20428 * C136 + C20431 * C375 + C32719 * C391) *
                C32939 +
            (C20430 * C256 + C20428 * C271 + C20431 * C721 + C32719 * C726) *
                C858 +
            (C20430 * C270 + C20428 * C286 + C20431 * C727 + C32719 * C736) *
                C32927 +
            (C20430 * C257 + C20428 * C272 + C20431 * C1177 + C32719 * C1189) *
                C859 +
            (C20430 * C273 + C20428 * C287 + C20431 * C1188 + C32719 * C1204) *
                C32904) *
               C15789 +
           ((C20465 + C20466) * C857 + (C20467 + C20468) * C32939 +
            (C20852 + C20851) * C858 + (C20850 + C20849) * C32927 +
            (C21311 + C21312) * C859 + (C21313 + C21314) * C32904) *
               C32543) *
              C32592 * C32578 * C110 -
          (((C21315 + C21316) * C32904 + (C21317 + C21318) * C859 +
            (C20845 + C20846) * C32927 + (C20847 + C20848) * C858 +
            (C20472 + C20471) * C32939 + (C20470 + C20469) * C857) *
               C32543 +
           ((C21314 + C21313) * C32904 + (C21312 + C21311) * C859 +
            (C20849 + C20850) * C32927 + (C20851 + C20852) * C858 +
            (C20468 + C20467) * C32939 + (C20466 + C20465) * C857) *
               C15789) *
              C32592 * C32578 * C111 +
          ((C20481 * C857 + C20482 * C32939 + (C20848 + C20847) * C858 +
            (C20846 + C20845) * C32927 + (C21318 + C21317) * C859 +
            (C21316 + C21315) * C32904) *
               C15789 +
           (C20483 * C857 + C20484 * C32939 + (C20844 + C20843) * C858 +
            (C20842 + C20841) * C32927 +
            (C20430 * C260 + C20428 * C278 + C20431 * C1519 + C32719 * C1520) *
                C859 +
            (C20430 * C279 + C20428 * C290 + C20431 * C1521 + C32719 * C1522) *
                C32904) *
               C32543) *
              C32592 * C32578 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C20430 * C115 + C20428 * C122 + C20431 * C361 + C32719 * C376) *
                C857 +
            (C20430 * C123 + C20428 * C136 + C20431 * C375 + C32719 * C391) *
                C32939 +
            (C21499 + C21500) * C858 + (C21501 + C21502) * C32927 +
            C21515 * C859 + C21516 * C32904) *
               C15789 +
           ((C20465 + C20466) * C857 + (C20467 + C20468) * C32939 +
            (C20852 + C20851) * C858 + (C20850 + C20849) * C32927 +
            C21481 * C859 + C21482 * C32904) *
               C32543) *
              C32592 * C248 -
          (((C21507 + C21508) * C32904 + (C21509 + C21510) * C859 +
            (C21314 + C21313) * C32927 + (C21312 + C21311) * C858 +
            (C20849 + C20850) * C32939 + (C20851 + C20852) * C857) *
               C32543 +
           ((C21511 + C21512) * C32904 + (C21513 + C21514) * C859 +
            (C21506 + C21505) * C32927 + (C21504 + C21503) * C858 +
            (C21502 + C21501) * C32939 + (C21500 + C21499) * C857) *
               C15789) *
              C32592 * C249 +
          ((C21515 * C857 + C21516 * C32939 + (C21514 + C21513) * C858 +
            (C21512 + C21511) * C32927 +
            (C20430 * C1014 + C20428 * C1023 + C20431 * C6402 +
             C32719 * C6406) *
                C859 +
            (C20430 * C1024 + C20428 * C1032 + C20431 * C6405 +
             C32719 * C6411) *
                C32904) *
               C15789 +
           (C21481 * C857 + C21482 * C32939 + (C21510 + C21509) * C858 +
            (C21508 + C21507) * C32927 +
            (C20430 * C1015 + C20428 * C1025 + C20431 * C6588 +
             C32719 * C6589) *
                C859 +
            (C20430 * C1026 + C20428 * C1033 + C20431 * C6590 +
             C32719 * C6591) *
                C32904) *
               C32543) *
              C32592 * C250) *
         C32566) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C22400 * C115 + C32947 * C122 + C22401 * C361 + C32944 * C376 +
             C22402 * C362 + C32935 * C377 + C22403 * C2128 + C32920 * C2137) *
                C114 +
            (C22400 * C123 + C32947 * C136 + C22401 * C375 + C32944 * C391 +
             C22402 * C378 + C32935 * C392 + C22403 * C2136 + C32920 * C2146) *
                C32615) *
               C15789 +
           ((C22437 + C22438 + C22439 + C22440) * C114 +
            (C22441 + C22442 + C22443 + C22444) * C32615) *
               C32543) *
              C32592 * C32578 * C110 -
          (((C22445 + C22446 + C22447 + C22448) * C32615 +
            (C22449 + C22450 + C22451 + C22452) * C114) *
               C32543 +
           ((C22444 + C22443 + C22442 + C22441) * C32615 +
            (C22440 + C22439 + C22438 + C22437) * C114) *
               C15789) *
              C32592 * C32578 * C111 +
          (((C22452 + C22451 + C22450 + C22449) * C114 +
            (C22448 + C22447 + C22446 + C22445) * C32615) *
               C15789 +
           ((C22400 * C118 + C32947 * C128 + C22401 * C358 + C32944 * C370 +
             C22402 * C365 + C32935 * C383 + C22403 * C2482 + C32920 * C2483) *
                C114 +
            (C22400 * C129 + C32947 * C139 + C22401 * C369 + C32944 * C388 +
             C22402 * C384 + C32935 * C395 + C22403 * C2484 + C32920 * C2485) *
                C32615) *
               C32543) *
              C32592 * C32578 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C22400 * C115 + C32947 * C122 + C22401 * C361 + C32944 * C376 +
             C22402 * C362 + C32935 * C377 + C22403 * C2128 + C32920 * C2137) *
                C114 +
            (C22400 * C123 + C32947 * C136 + C22401 * C375 + C32944 * C391 +
             C22402 * C378 + C32935 * C392 + C22403 * C2136 + C32920 * C2146) *
                C32615) *
               C15789 +
           ((C22437 + C22438 + C22439 + C22440) * C114 +
            (C22441 + C22442 + C22443 + C22444) * C32615) *
               C32543) *
              C32592 * C248 -
          (((C22403 * C2674 + C32920 * C2678 + C22402 * C1195 + C32935 * C1207 +
             C22401 * C729 + C32944 * C737 + C22400 * C268 + C32947 * C285) *
                C32615 +
            (C22403 * C2669 + C32920 * C2673 + C22402 * C1180 + C32935 * C1194 +
             C22401 * C722 + C32944 * C728 + C22400 * C255 + C32947 * C269) *
                C114) *
               C32543 +
           ((C22403 * C2672 + C32920 * C2677 + C22402 * C1191 + C32935 * C1205 +
             C22401 * C727 + C32944 * C736 + C22400 * C270 + C32947 * C286) *
                C32615 +
            (C22403 * C2668 + C32920 * C2671 + C22402 * C1178 + C32935 * C1190 +
             C22401 * C721 + C32944 * C726 + C22400 * C256 + C32947 * C271) *
                C114) *
               C15789) *
              C32592 * C249 +
          (((C22400 * C257 + C32947 * C272 + C22401 * C1177 + C32944 * C1189 +
             C22402 * C1179 + C32935 * C1192 + C22403 * C7078 +
             C32920 * C7082) *
                C114 +
            (C22400 * C273 + C32947 * C287 + C22401 * C1188 + C32944 * C1204 +
             C22402 * C1193 + C32935 * C1206 + C22403 * C7081 +
             C32920 * C7087) *
                C32615) *
               C15789 +
           ((C22400 * C258 + C32947 * C274 + C22401 * C1176 + C32944 * C1187 +
             C22402 * C1181 + C32935 * C1196 + C22403 * C7404 +
             C32920 * C7405) *
                C114 +
            (C22400 * C275 + C32947 * C288 + C22401 * C1186 + C32944 * C1203 +
             C22402 * C1197 + C32935 * C1208 + C22403 * C7406 +
             C32920 * C7407) *
                C32615) *
               C32543) *
              C32592 * C250) *
         C32566) /
            (p * q * std::sqrt(p + q));
    d2ee[90] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                 (((((C31694 * C115 + C32715 * C122 + C31686 * C361 +
                      C32722 * C376 + C31700 * C362 + C24241 * C377) *
                         C114 +
                     (C31694 * C123 + C32715 * C136 + C31686 * C375 +
                      C32722 * C391 + C31700 * C378 + C24241 * C392) *
                         C32615) *
                        C32538 +
                    ((C24282 + C24283 + C24284) * C114 +
                     (C24285 + C24286 + C24287) * C32615) *
                        C32546 +
                    C24306 * C17574) *
                       C32592 * C479 -
                   (((C24697 + C24698 + C24699) * C32615 +
                     (C24700 + C24701 + C24702) * C114) *
                        C17574 +
                    ((C24703 + C24704 + C24705) * C32615 +
                     (C24706 + C24707 + C24708) * C114) *
                        C32546 +
                    ((C31700 * C1191 + C24241 * C1205 + C31686 * C727 +
                      C32722 * C736 + C31694 * C270 + C32715 * C286) *
                         C32615 +
                     (C31700 * C1178 + C24241 * C1190 + C31686 * C721 +
                      C32722 * C726 + C31694 * C256 + C32715 * C271) *
                         C114) *
                        C32538) *
                       C32592 * C480) *
                      C481 +
                  ((((C24708 + C24707 + C24706) * C114 +
                     (C24705 + C24704 + C24703) * C32615) *
                        C32538 +
                    ((C24702 + C24701 + C24700) * C114 +
                     (C24699 + C24698 + C24697) * C32615) *
                        C32546 +
                    ((C31694 * C253 + C32715 * C265 + C31686 * C724 +
                      C32722 * C732 + C31700 * C2296 + C24241 * C2297) *
                         C114 +
                     (C31694 * C264 + C32715 * C283 + C31686 * C733 +
                      C32722 * C739 + C31700 * C2298 + C24241 * C2299) *
                         C32615) *
                        C17574) *
                       C32592 * C480 -
                   (((C24294 + C24295 + C24296) * C32615 +
                     (C24297 + C24298 + C24299) * C114) *
                        C17574 +
                    ((C24293 + C24292 + C24291) * C32615 +
                     (C24290 + C24289 + C24288) * C114) *
                        C32546 +
                    ((C24287 + C24286 + C24285) * C32615 +
                     (C24284 + C24283 + C24282) * C114) *
                        C32538) *
                       C32592 * C479) *
                      C482)) /
                (p * q * std::sqrt(p + q));
    d2ee[91] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                 (((((C31694 * C115 + C32715 * C122 + C31686 * C361 +
                      C32722 * C376 + C31700 * C362 + C24241 * C377) *
                         C114 +
                     (C31694 * C123 + C32715 * C136 + C31686 * C375 +
                      C32722 * C391 + C31700 * C378 + C24241 * C392) *
                         C32615) *
                        C32538 +
                    ((C24282 + C24283 + C24284) * C114 +
                     (C24285 + C24286 + C24287) * C32615) *
                        C32546 +
                    C24306 * C17574) *
                       C601 -
                   (((C24879 + C24880 + C24881) * C32615 +
                     (C24882 + C24883 + C24884) * C114) *
                        C17574 +
                    ((C24885 + C24886 + C24887) * C32615 +
                     (C24888 + C24889 + C24890) * C114) *
                        C32546 +
                    ((C31700 * C2136 + C24241 * C2146 + C31686 * C378 +
                      C32722 * C392 + C31694 * C375 + C32715 * C391) *
                         C32615 +
                     (C31700 * C2128 + C24241 * C2137 + C31686 * C362 +
                      C32722 * C377 + C31694 * C361 + C32715 * C376) *
                         C114) *
                        C32538) *
                       C602) *
                      C479 +
                  ((((C31694 * C721 + C32715 * C726 + C31686 * C1178 +
                      C32722 * C1190 + C31700 * C2668 + C24241 * C2671) *
                         C114 +
                     (C31694 * C727 + C32715 * C736 + C31686 * C1191 +
                      C32722 * C1205 + C31700 * C2672 + C24241 * C2677) *
                         C32615) *
                        C32538 +
                    ((C31694 * C722 + C32715 * C728 + C31686 * C1180 +
                      C32722 * C1194 + C31700 * C2669 + C24241 * C2673) *
                         C114 +
                     (C31694 * C729 + C32715 * C737 + C31686 * C1195 +
                      C32722 * C1207 + C31700 * C2674 + C24241 * C2678) *
                         C32615) *
                        C32546 +
                    ((C31694 * C723 + C32715 * C730 + C31686 * C1182 +
                      C32722 * C1198 + C31700 * C2670 + C24241 * C2675) *
                         C114 +
                     (C31694 * C731 + C32715 * C738 + C31686 * C1199 +
                      C32722 * C1209 + C31700 * C2676 + C24241 * C2679) *
                         C32615) *
                        C17574) *
                       C602 -
                   (((C24697 + C24698 + C24699) * C32615 +
                     (C24700 + C24701 + C24702) * C114) *
                        C17574 +
                    ((C24703 + C24704 + C24705) * C32615 +
                     (C24706 + C24707 + C24708) * C114) *
                        C32546 +
                    ((C31700 * C1191 + C24241 * C1205 + C31686 * C727 +
                      C32722 * C736 + C31694 * C270 + C32715 * C286) *
                         C32615 +
                     (C31700 * C1178 + C24241 * C1190 + C31686 * C721 +
                      C32722 * C726 + C31694 * C256 + C32715 * C271) *
                         C114) *
                        C32538) *
                       C601) *
                      C480) *
                 C32566) /
                (p * q * std::sqrt(p + q));
    d2ee[92] += (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C31694 * C115 + C32715 * C122 + C31686 * C361 +
                     C32722 * C376 + C31700 * C362 + C24241 * C377) *
                        C114 +
                    (C31694 * C123 + C32715 * C136 + C31686 * C375 +
                     C32722 * C391 + C31700 * C378 + C24241 * C392) *
                        C32615) *
                       C32538 +
                   ((C24282 + C24283 + C24284) * C114 +
                    (C24285 + C24286 + C24287) * C32615) *
                       C32546 +
                   C24306 * C17574) *
                      C32592 * C248 -
                  (((C31700 * C1199 + C24241 * C1209 + C31686 * C731 +
                     C32722 * C738 + C31694 * C266 + C32715 * C284) *
                        C32615 +
                    (C31700 * C1182 + C24241 * C1198 + C31686 * C723 +
                     C32722 * C730 + C31694 * C254 + C32715 * C267) *
                        C114) *
                       C17574 +
                   ((C31700 * C1195 + C24241 * C1207 + C31686 * C729 +
                     C32722 * C737 + C31694 * C268 + C32715 * C285) *
                        C32615 +
                    (C31700 * C1180 + C24241 * C1194 + C31686 * C722 +
                     C32722 * C728 + C31694 * C255 + C32715 * C269) *
                        C114) *
                       C32546 +
                   ((C31700 * C1191 + C24241 * C1205 + C31686 * C727 +
                     C32722 * C736 + C31694 * C270 + C32715 * C286) *
                        C32615 +
                    (C31700 * C1178 + C24241 * C1190 + C31686 * C721 +
                     C32722 * C726 + C31694 * C256 + C32715 * C271) *
                        C114) *
                       C32538) *
                      C32592 * C249 +
                  (((C31694 * C257 + C32715 * C272 + C31686 * C1177 +
                     C32722 * C1189 + C31700 * C1179 + C24241 * C1192) *
                        C114 +
                    (C31694 * C273 + C32715 * C287 + C31686 * C1188 +
                     C32722 * C1204 + C31700 * C1193 + C24241 * C1206) *
                        C32615) *
                       C32538 +
                   ((C31694 * C258 + C32715 * C274 + C31686 * C1176 +
                     C32722 * C1187 + C31700 * C1181 + C24241 * C1196) *
                        C114 +
                    (C31694 * C275 + C32715 * C288 + C31686 * C1186 +
                     C32722 * C1203 + C31700 * C1197 + C24241 * C1208) *
                        C32615) *
                       C32546 +
                   ((C31694 * C259 + C32715 * C276 + C31686 * C1175 +
                     C32722 * C1185 + C31700 * C1183 + C24241 * C1200) *
                        C114 +
                    (C31694 * C277 + C32715 * C289 + C31686 * C1184 +
                     C32722 * C1202 + C31700 * C1201 + C24241 * C1210) *
                        C32615) *
                       C17574) *
                      C32592 * C250) *
                 C32566) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C31694 * C115 + C32715 * C122 + C31686 * C361 +
                     C32722 * C376 + C31700 * C362 + C24241 * C377) *
                        C114 +
                    (C31694 * C123 + C32715 * C136 + C31686 * C375 +
                     C32722 * C391 + C31700 * C378 + C24241 * C392) *
                        C32615) *
                       C32538 +
                   ((C24282 + C24283 + C24284) * C114 +
                    (C24285 + C24286 + C24287) * C32615) *
                       C32546 +
                   C24306 * C17574) *
                      C32592 * C32578 * C110 -
                  (((C24294 + C24295 + C24296) * C32615 +
                    (C24297 + C24298 + C24299) * C114) *
                       C17574 +
                   ((C24293 + C24292 + C24291) * C32615 +
                    (C24290 + C24289 + C24288) * C114) *
                       C32546 +
                   ((C24287 + C24286 + C24285) * C32615 +
                    (C24284 + C24283 + C24282) * C114) *
                       C32538) *
                      C32592 * C32578 * C111 +
                  (C24306 * C32538 +
                   ((C24299 + C24298 + C24297) * C114 +
                    (C24296 + C24295 + C24294) * C32615) *
                       C32546 +
                   ((C31694 * C119 + C32715 * C130 + C31686 * C357 +
                     C32722 * C368 + C31700 * C366 + C24241 * C385) *
                        C114 +
                    (C31694 * C131 + C32715 * C140 + C31686 * C367 +
                     C32722 * C387 + C31700 * C386 + C24241 * C396) *
                        C32615) *
                       C17574) *
                      C32592 * C32578 * C112)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((C31694 * C115 + C32715 * C122 + C31686 * C361 +
                     C32722 * C376 + C31700 * C362 + C24241 * C377) *
                        C114 +
                    (C31694 * C123 + C32715 * C136 + C31686 * C375 +
                     C32722 * C391 + C31700 * C378 + C24241 * C392) *
                        C32615) *
                       C32538 +
                   ((C24282 + C24283 + C24284) * C114 +
                    (C24285 + C24286 + C24287) * C32615) *
                       C32546 +
                   C24306 * C17574) *
                      C354 -
                  (((C31700 * C2132 + C24241 * C2144 + C31686 * C382 +
                     C32722 * C394 + C31694 * C371 + C32715 * C389) *
                        C32615 +
                    (C31700 * C2126 + C24241 * C2133 + C31686 * C364 +
                     C32722 * C381 + C31694 * C359 + C32715 * C372) *
                        C114) *
                       C17574 +
                   ((C31700 * C2134 + C24241 * C2145 + C31686 * C380 +
                     C32722 * C393 + C31694 * C373 + C32715 * C390) *
                        C32615 +
                    (C31700 * C2127 + C24241 * C2135 + C31686 * C363 +
                     C32722 * C379 + C31694 * C360 + C32715 * C374) *
                        C114) *
                       C32546 +
                   ((C31700 * C2136 + C24241 * C2146 + C31686 * C378 +
                     C32722 * C392 + C31694 * C375 + C32715 * C391) *
                        C32615 +
                    (C31700 * C2128 + C24241 * C2137 + C31686 * C362 +
                     C32722 * C377 + C31694 * C361 + C32715 * C376) *
                        C114) *
                       C32538) *
                      C355 +
                  (((C31694 * C362 + C32715 * C377 + C31686 * C2128 +
                     C32722 * C2137 + C31700 * C2129 + C24241 * C2138) *
                        C114 +
                    (C31694 * C378 + C32715 * C392 + C31686 * C2136 +
                     C32722 * C2146 + C31700 * C2139 + C24241 * C2147) *
                        C32615) *
                       C32538 +
                   ((C31694 * C363 + C32715 * C379 + C31686 * C2127 +
                     C32722 * C2135 + C31700 * C2130 + C24241 * C2140) *
                        C114 +
                    (C31694 * C380 + C32715 * C393 + C31686 * C2134 +
                     C32722 * C2145 + C31700 * C2141 + C24241 * C2148) *
                        C32615) *
                       C32546 +
                   ((C31694 * C364 + C32715 * C381 + C31686 * C2126 +
                     C32722 * C2133 + C31700 * C2131 + C24241 * C2142) *
                        C114 +
                    (C31694 * C382 + C32715 * C394 + C31686 * C2132 +
                     C32722 * C2144 + C31700 * C2143 + C24241 * C2149) *
                        C32615) *
                       C17574) *
                      C356) *
                 C32578 * C32566) /
                    (p * q * std::sqrt(p + q));
    d2ee[93] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                 (((((C31694 * C115 + C32715 * C122 + C31686 * C361 +
                      C32722 * C376 + C31700 * C362 + C24241 * C377) *
                         C114 +
                     (C31694 * C123 + C32715 * C136 + C31686 * C375 +
                      C32722 * C391 + C31700 * C378 + C24241 * C392) *
                         C32615) *
                        C32538 +
                    ((C24282 + C24283 + C24284) * C114 +
                     (C24285 + C24286 + C24287) * C32615) *
                        C32546 +
                    C24306 * C17574) *
                       C601 -
                   (((C24879 + C24880 + C24881) * C32615 +
                     (C24882 + C24883 + C24884) * C114) *
                        C17574 +
                    ((C24885 + C24886 + C24887) * C32615 +
                     (C24888 + C24889 + C24890) * C114) *
                        C32546 +
                    ((C31700 * C2136 + C24241 * C2146 + C31686 * C378 +
                      C32722 * C392 + C31694 * C375 + C32715 * C391) *
                         C32615 +
                     (C31700 * C2128 + C24241 * C2137 + C31686 * C362 +
                      C32722 * C377 + C31694 * C361 + C32715 * C376) *
                         C114) *
                        C32538) *
                       C602) *
                      C32578 * C481 +
                  ((((C24890 + C24889 + C24888) * C114 +
                     (C24887 + C24886 + C24885) * C32615) *
                        C32538 +
                    ((C24884 + C24883 + C24882) * C114 +
                     (C24881 + C24880 + C24879) * C32615) *
                        C32546 +
                    ((C31694 * C358 + C32715 * C370 + C31686 * C365 +
                      C32722 * C383 + C31700 * C2482 + C24241 * C2483) *
                         C114 +
                     (C31694 * C369 + C32715 * C388 + C31686 * C384 +
                      C32722 * C395 + C31700 * C2484 + C24241 * C2485) *
                         C32615) *
                        C17574) *
                       C602 -
                   (((C24294 + C24295 + C24296) * C32615 +
                     (C24297 + C24298 + C24299) * C114) *
                        C17574 +
                    ((C24293 + C24292 + C24291) * C32615 +
                     (C24290 + C24289 + C24288) * C114) *
                        C32546 +
                    ((C24287 + C24286 + C24285) * C32615 +
                     (C24284 + C24283 + C24282) * C114) *
                        C32538) *
                       C601) *
                      C32578 * C482)) /
                (p * q * std::sqrt(p + q));
    d2ee[94] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C31694 * C115 + C32715 * C122 + C31686 * C361 +
                     C32722 * C376 + C31700 * C362 + C24241 * C377) *
                        C114 +
                    (C31694 * C123 + C32715 * C136 + C31686 * C375 +
                     C32722 * C391 + C31700 * C378 + C24241 * C392) *
                        C32615) *
                       C32538 +
                   ((C24282 + C24283 + C24284) * C114 +
                    (C24285 + C24286 + C24287) * C32615) *
                       C32546 +
                   C24306 * C17574) *
                      C32592 * C32578 * C110 -
                  (((C24294 + C24295 + C24296) * C32615 +
                    (C24297 + C24298 + C24299) * C114) *
                       C17574 +
                   ((C24293 + C24292 + C24291) * C32615 +
                    (C24290 + C24289 + C24288) * C114) *
                       C32546 +
                   ((C24287 + C24286 + C24285) * C32615 +
                    (C24284 + C24283 + C24282) * C114) *
                       C32538) *
                      C32592 * C32578 * C111 +
                  (C24306 * C32538 +
                   ((C24299 + C24298 + C24297) * C114 +
                    (C24296 + C24295 + C24294) * C32615) *
                       C32546 +
                   ((C31694 * C119 + C32715 * C130 + C31686 * C357 +
                     C32722 * C368 + C31700 * C366 + C24241 * C385) *
                        C114 +
                    (C31694 * C131 + C32715 * C140 + C31686 * C367 +
                     C32722 * C387 + C31700 * C386 + C24241 * C396) *
                        C32615) *
                       C17574) *
                      C32592 * C32578 * C112)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C31694 * C115 + C32715 * C122 + C31686 * C361 +
                     C32722 * C376 + C31700 * C362 + C24241 * C377) *
                        C114 +
                    (C31694 * C123 + C32715 * C136 + C31686 * C375 +
                     C32722 * C391 + C31700 * C378 + C24241 * C392) *
                        C32615) *
                       C32538 +
                   ((C24282 + C24283 + C24284) * C114 +
                    (C24285 + C24286 + C24287) * C32615) *
                       C32546 +
                   C24306 * C17574) *
                      C32592 * C248 -
                  (((C31700 * C1199 + C24241 * C1209 + C31686 * C731 +
                     C32722 * C738 + C31694 * C266 + C32715 * C284) *
                        C32615 +
                    (C31700 * C1182 + C24241 * C1198 + C31686 * C723 +
                     C32722 * C730 + C31694 * C254 + C32715 * C267) *
                        C114) *
                       C17574 +
                   ((C31700 * C1195 + C24241 * C1207 + C31686 * C729 +
                     C32722 * C737 + C31694 * C268 + C32715 * C285) *
                        C32615 +
                    (C31700 * C1180 + C24241 * C1194 + C31686 * C722 +
                     C32722 * C728 + C31694 * C255 + C32715 * C269) *
                        C114) *
                       C32546 +
                   ((C31700 * C1191 + C24241 * C1205 + C31686 * C727 +
                     C32722 * C736 + C31694 * C270 + C32715 * C286) *
                        C32615 +
                    (C31700 * C1178 + C24241 * C1190 + C31686 * C721 +
                     C32722 * C726 + C31694 * C256 + C32715 * C271) *
                        C114) *
                       C32538) *
                      C32592 * C249 +
                  (((C31694 * C257 + C32715 * C272 + C31686 * C1177 +
                     C32722 * C1189 + C31700 * C1179 + C24241 * C1192) *
                        C114 +
                    (C31694 * C273 + C32715 * C287 + C31686 * C1188 +
                     C32722 * C1204 + C31700 * C1193 + C24241 * C1206) *
                        C32615) *
                       C32538 +
                   ((C31694 * C258 + C32715 * C274 + C31686 * C1176 +
                     C32722 * C1187 + C31700 * C1181 + C24241 * C1196) *
                        C114 +
                    (C31694 * C275 + C32715 * C288 + C31686 * C1186 +
                     C32722 * C1203 + C31700 * C1197 + C24241 * C1208) *
                        C32615) *
                       C32546 +
                   ((C31694 * C259 + C32715 * C276 + C31686 * C1175 +
                     C32722 * C1185 + C31700 * C1183 + C24241 * C1200) *
                        C114 +
                    (C31694 * C277 + C32715 * C289 + C31686 * C1184 +
                     C32722 * C1202 + C31700 * C1201 + C24241 * C1210) *
                        C32615) *
                       C17574) *
                      C32592 * C250) *
                 C32566) /
                    (p * q * std::sqrt(p + q));
    d2ee[95] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C20430 * C115 + C20428 * C122 + C20431 * C361 + C32719 * C376) *
                 C114 +
             (C20430 * C123 + C20428 * C136 + C20431 * C375 + C32719 * C391) *
                 C32615) *
                C32945 +
            ((C20465 + C20466) * C114 + (C20467 + C20468) * C32615) * C32938 +
            C20489 * C32925 + C20490 * C32908) *
               C32592 * C479 -
           (((C20841 + C20842) * C32615 + (C20843 + C20844) * C114) * C32908 +
            ((C20845 + C20846) * C32615 + (C20847 + C20848) * C114) * C32925 +
            ((C20849 + C20850) * C32615 + (C20851 + C20852) * C114) * C32938 +
            ((C20431 * C727 + C32719 * C736 + C20430 * C270 + C20428 * C286) *
                 C32615 +
             (C20431 * C721 + C32719 * C726 + C20430 * C256 + C20428 * C271) *
                 C114) *
                C32945) *
               C32592 * C480) *
              C481 +
          ((((C20852 + C20851) * C114 + (C20850 + C20849) * C32615) * C32945 +
            ((C20848 + C20847) * C114 + (C20846 + C20845) * C32615) * C32938 +
            ((C20844 + C20843) * C114 + (C20842 + C20841) * C32615) * C32925 +
            ((C20430 * C252 + C20428 * C263 + C20431 * C725 + C32719 * C734) *
                 C114 +
             (C20430 * C262 + C20428 * C282 + C20431 * C735 + C32719 * C740) *
                 C32615) *
                C32908) *
               C32592 * C480 -
           (((C20477 + C20478) * C32615 + (C20479 + C20480) * C114) * C32908 +
            ((C20476 + C20475) * C32615 + (C20474 + C20473) * C114) * C32925 +
            ((C20472 + C20471) * C32615 + (C20470 + C20469) * C114) * C32938 +
            ((C20468 + C20467) * C32615 + (C20466 + C20465) * C114) * C32945) *
               C32592 * C479) *
              C482)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C20430 * C115 + C20428 * C122 + C20431 * C361 + C32719 * C376) *
                 C857 +
             (C20430 * C123 + C20428 * C136 + C20431 * C375 + C32719 * C391) *
                 C32939 +
             (C21499 + C21500) * C858 + (C21501 + C21502) * C32927 +
             C21515 * C859 + C21516 * C32904) *
                C15789 +
            ((C20465 + C20466) * C857 + (C20467 + C20468) * C32939 +
             C21857 * C858 + C21858 * C32927 + C21481 * C859 +
             C21482 * C32904) *
                C32543) *
               C32592 * C479 -
           (((C21507 + C21508) * C32904 + (C21509 + C21510) * C859 +
             C21859 * C32927 + C21860 * C858 + C21861 * C32939 +
             C21862 * C857) *
                C32543 +
            ((C21511 + C21512) * C32904 + (C21513 + C21514) * C859 +
             (C21506 + C21505) * C32927 + (C21504 + C21503) * C858 +
             (C21502 + C21501) * C32939 + (C21500 + C21499) * C857) *
                C15789) *
               C32592 * C480) *
              C481 +
          (((C21857 * C857 + C21858 * C32939 + C21481 * C858 + C21482 * C32927 +
             (C21510 + C21509) * C859 + (C21508 + C21507) * C32904) *
                C15789 +
            ((C20848 + C20847) * C857 + (C20846 + C20845) * C32939 +
             (C21318 + C21317) * C858 + (C21316 + C21315) * C32927 +
             (C20430 * C1011 + C20428 * C1018 + C20431 * C1707 +
              C32719 * C1712) *
                 C859 +
             (C20430 * C1017 + C20428 * C1029 + C20431 * C1713 +
              C32719 * C1716) *
                 C32904) *
                C32543) *
               C32592 * C480 -
           (((C21315 + C21316) * C32904 + (C21317 + C21318) * C859 +
             (C20845 + C20846) * C32927 + (C20847 + C20848) * C858 +
             (C20472 + C20471) * C32939 + (C20470 + C20469) * C857) *
                C32543 +
            (C21859 * C32904 + C21860 * C859 + C21861 * C32927 + C21862 * C858 +
             (C20468 + C20467) * C32939 + (C20466 + C20465) * C857) *
                C15789) *
               C32592 * C479) *
              C482)) /
            (p * q * std::sqrt(p + q));
    d2ee[96] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C20430 * C115 + C20428 * C122 + C20431 * C361 + C32719 * C376) *
                 C114 +
             (C20430 * C123 + C20428 * C136 + C20431 * C375 + C32719 * C391) *
                 C32615) *
                C32945 +
            ((C20465 + C20466) * C114 + (C20467 + C20468) * C32615) * C32938 +
            C20489 * C32925 + C20490 * C32908) *
               C601 -
           (((C21007 + C21008) * C32615 + (C21009 + C21010) * C114) * C32908 +
            ((C21011 + C21012) * C32615 + (C21013 + C21014) * C114) * C32925 +
            ((C21015 + C21016) * C32615 + (C21017 + C21018) * C114) * C32938 +
            ((C20431 * C378 + C32719 * C392 + C20430 * C375 + C20428 * C391) *
                 C32615 +
             (C20431 * C362 + C32719 * C377 + C20430 * C361 + C20428 * C376) *
                 C114) *
                C32945) *
               C602) *
              C479 +
          ((((C20430 * C721 + C20428 * C726 + C20431 * C1178 + C32719 * C1190) *
                 C114 +
             (C20430 * C727 + C20428 * C736 + C20431 * C1191 + C32719 * C1205) *
                 C32615) *
                C32945 +
            ((C20430 * C722 + C20428 * C728 + C20431 * C1180 + C32719 * C1194) *
                 C114 +
             (C20430 * C729 + C20428 * C737 + C20431 * C1195 + C32719 * C1207) *
                 C32615) *
                C32938 +
            ((C20430 * C723 + C20428 * C730 + C20431 * C1182 + C32719 * C1198) *
                 C114 +
             (C20430 * C731 + C20428 * C738 + C20431 * C1199 + C32719 * C1209) *
                 C32615) *
                C32925 +
            ((C20430 * C724 + C20428 * C732 + C20431 * C2296 + C32719 * C2297) *
                 C114 +
             (C20430 * C733 + C20428 * C739 + C20431 * C2298 + C32719 * C2299) *
                 C32615) *
                C32908) *
               C602 -
           (((C20841 + C20842) * C32615 + (C20843 + C20844) * C114) * C32908 +
            ((C20845 + C20846) * C32615 + (C20847 + C20848) * C114) * C32925 +
            ((C20849 + C20850) * C32615 + (C20851 + C20852) * C114) * C32938 +
            ((C20431 * C727 + C32719 * C736 + C20430 * C270 + C20428 * C286) *
                 C32615 +
             (C20431 * C721 + C32719 * C726 + C20430 * C256 + C20428 * C271) *
                 C114) *
                C32945) *
               C601) *
              C480) *
         C32566) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C20430 * C115 + C20428 * C122 + C20431 * C361 + C32719 * C376) *
                 C857 +
             (C20430 * C123 + C20428 * C136 + C20431 * C375 + C32719 * C391) *
                 C32939 +
             (C21499 + C21500) * C858 + (C21501 + C21502) * C32927 +
             C21515 * C859 + C21516 * C32904) *
                C15789 +
            ((C20465 + C20466) * C857 + (C20467 + C20468) * C32939 +
             C21857 * C858 + C21858 * C32927 + C21481 * C859 +
             C21482 * C32904) *
                C32543) *
               C601 -
           (((C22073 + C22074) * C32904 + (C22075 + C22076) * C859 +
             (C22077 + C22078) * C32927 + (C22079 + C22080) * C858 +
             (C21015 + C21016) * C32939 + (C21017 + C21018) * C857) *
                C32543 +
            ((C22291 + C22292) * C32904 + (C22293 + C22294) * C859 +
             (C22295 + C22296) * C32927 + (C22297 + C22298) * C858 +
             (C20431 * C378 + C32719 * C392 + C20430 * C375 + C20428 * C391) *
                 C32939 +
             (C20431 * C362 + C32719 * C377 + C20430 * C361 + C20428 * C376) *
                 C857) *
                C15789) *
               C602) *
              C479 +
          ((((C22298 + C22297) * C857 + (C22296 + C22295) * C32939 +
             (C22294 + C22293) * C858 + (C22292 + C22291) * C32927 +
             (C20430 * C1705 + C20428 * C1708 + C20431 * C6403 +
              C32719 * C6407) *
                 C859 +
             (C20430 * C1709 + C20428 * C1714 + C20431 * C6408 +
              C32719 * C6412) *
                 C32904) *
                C15789 +
            ((C22080 + C22079) * C857 + (C22078 + C22077) * C32939 +
             (C22076 + C22075) * C858 + (C22074 + C22073) * C32927 +
             (C20430 * C1706 + C20428 * C1710 + C20431 * C7236 +
              C32719 * C7237) *
                 C859 +
             (C20430 * C1711 + C20428 * C1715 + C20431 * C7238 +
              C32719 * C7239) *
                 C32904) *
                C32543) *
               C602 -
           (((C21507 + C21508) * C32904 + (C21509 + C21510) * C859 +
             C21859 * C32927 + C21860 * C858 + C21861 * C32939 +
             C21862 * C857) *
                C32543 +
            ((C21511 + C21512) * C32904 + (C21513 + C21514) * C859 +
             (C21506 + C21505) * C32927 + (C21504 + C21503) * C858 +
             (C21502 + C21501) * C32939 + (C21500 + C21499) * C857) *
                C15789) *
               C601) *
              C480) *
         C32566) /
            (p * q * std::sqrt(p + q));
    d2ee[97] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C20430 * C115 + C20428 * C122 + C20431 * C361 + C32719 * C376) *
                C114 +
            (C20430 * C123 + C20428 * C136 + C20431 * C375 + C32719 * C391) *
                C32615) *
               C32945 +
           ((C20465 + C20466) * C114 + (C20467 + C20468) * C32615) * C32938 +
           C20489 * C32925 + C20490 * C32908) *
              C32592 * C248 -
          (((C20431 * C733 + C32719 * C739 + C20430 * C264 + C20428 * C283) *
                C32615 +
            (C20431 * C724 + C32719 * C732 + C20430 * C253 + C20428 * C265) *
                C114) *
               C32908 +
           ((C20431 * C731 + C32719 * C738 + C20430 * C266 + C20428 * C284) *
                C32615 +
            (C20431 * C723 + C32719 * C730 + C20430 * C254 + C20428 * C267) *
                C114) *
               C32925 +
           ((C20431 * C729 + C32719 * C737 + C20430 * C268 + C20428 * C285) *
                C32615 +
            (C20431 * C722 + C32719 * C728 + C20430 * C255 + C20428 * C269) *
                C114) *
               C32938 +
           ((C20431 * C727 + C32719 * C736 + C20430 * C270 + C20428 * C286) *
                C32615 +
            (C20431 * C721 + C32719 * C726 + C20430 * C256 + C20428 * C271) *
                C114) *
               C32945) *
              C32592 * C249 +
          (((C20430 * C257 + C20428 * C272 + C20431 * C1177 + C32719 * C1189) *
                C114 +
            (C20430 * C273 + C20428 * C287 + C20431 * C1188 + C32719 * C1204) *
                C32615) *
               C32945 +
           ((C20430 * C258 + C20428 * C274 + C20431 * C1176 + C32719 * C1187) *
                C114 +
            (C20430 * C275 + C20428 * C288 + C20431 * C1186 + C32719 * C1203) *
                C32615) *
               C32938 +
           ((C20430 * C259 + C20428 * C276 + C20431 * C1175 + C32719 * C1185) *
                C114 +
            (C20430 * C277 + C20428 * C289 + C20431 * C1184 + C32719 * C1202) *
                C32615) *
               C32925 +
           ((C20430 * C260 + C20428 * C278 + C20431 * C1519 + C32719 * C1520) *
                C114 +
            (C20430 * C279 + C20428 * C290 + C20431 * C1521 + C32719 * C1522) *
                C32615) *
               C32908) *
              C32592 * C250) *
         C32566) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C20430 * C115 + C20428 * C122 + C20431 * C361 + C32719 * C376) *
                C114 +
            (C20430 * C123 + C20428 * C136 + C20431 * C375 + C32719 * C391) *
                C32615) *
               C32945 +
           ((C20465 + C20466) * C114 + (C20467 + C20468) * C32615) * C32938 +
           C20489 * C32925 + C20490 * C32908) *
              C32592 * C32578 * C110 -
          (((C20477 + C20478) * C32615 + (C20479 + C20480) * C114) * C32908 +
           ((C20476 + C20475) * C32615 + (C20474 + C20473) * C114) * C32925 +
           ((C20472 + C20471) * C32615 + (C20470 + C20469) * C114) * C32938 +
           ((C20468 + C20467) * C32615 + (C20466 + C20465) * C114) * C32945) *
              C32592 * C32578 * C111 +
          (C20489 * C32945 + C20490 * C32938 +
           ((C20480 + C20479) * C114 + (C20478 + C20477) * C32615) * C32925 +
           ((C20430 * C120 + C20428 * C133 + C20431 * C603 + C32719 * C604) *
                C114 +
            (C20430 * C132 + C20428 * C141 + C20431 * C605 + C32719 * C606) *
                C32615) *
               C32908) *
              C32592 * C32578 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C20430 * C115 + C20428 * C122 + C20431 * C361 + C32719 * C376) *
                C114 +
            (C20430 * C123 + C20428 * C136 + C20431 * C375 + C32719 * C391) *
                C32615) *
               C32945 +
           ((C20465 + C20466) * C114 + (C20467 + C20468) * C32615) * C32938 +
           C20489 * C32925 + C20490 * C32908) *
              C354 -
          (((C20431 * C384 + C32719 * C395 + C20430 * C369 + C20428 * C388) *
                C32615 +
            (C20431 * C365 + C32719 * C383 + C20430 * C358 + C20428 * C370) *
                C114) *
               C32908 +
           ((C20431 * C382 + C32719 * C394 + C20430 * C371 + C20428 * C389) *
                C32615 +
            (C20431 * C364 + C32719 * C381 + C20430 * C359 + C20428 * C372) *
                C114) *
               C32925 +
           ((C20431 * C380 + C32719 * C393 + C20430 * C373 + C20428 * C390) *
                C32615 +
            (C20431 * C363 + C32719 * C379 + C20430 * C360 + C20428 * C374) *
                C114) *
               C32938 +
           ((C20431 * C378 + C32719 * C392 + C20430 * C375 + C20428 * C391) *
                C32615 +
            (C20431 * C362 + C32719 * C377 + C20430 * C361 + C20428 * C376) *
                C114) *
               C32945) *
              C355 +
          (((C20430 * C362 + C20428 * C377 + C20431 * C2128 + C32719 * C2137) *
                C114 +
            (C20430 * C378 + C20428 * C392 + C20431 * C2136 + C32719 * C2146) *
                C32615) *
               C32945 +
           ((C20430 * C363 + C20428 * C379 + C20431 * C2127 + C32719 * C2135) *
                C114 +
            (C20430 * C380 + C20428 * C393 + C20431 * C2134 + C32719 * C2145) *
                C32615) *
               C32938 +
           ((C20430 * C364 + C20428 * C381 + C20431 * C2126 + C32719 * C2133) *
                C114 +
            (C20430 * C382 + C20428 * C394 + C20431 * C2132 + C32719 * C2144) *
                C32615) *
               C32925 +
           ((C20430 * C365 + C20428 * C383 + C20431 * C2482 + C32719 * C2483) *
                C114 +
            (C20430 * C384 + C20428 * C395 + C20431 * C2484 + C32719 * C2485) *
                C32615) *
               C32908) *
              C356) *
         C32578 * C32566) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C20430 * C115 + C20428 * C122 + C20431 * C361 + C32719 * C376) *
                C857 +
            (C20430 * C123 + C20428 * C136 + C20431 * C375 + C32719 * C391) *
                C32939 +
            (C20430 * C256 + C20428 * C271 + C20431 * C721 + C32719 * C726) *
                C858 +
            (C20430 * C270 + C20428 * C286 + C20431 * C727 + C32719 * C736) *
                C32927 +
            (C20430 * C257 + C20428 * C272 + C20431 * C1177 + C32719 * C1189) *
                C859 +
            (C20430 * C273 + C20428 * C287 + C20431 * C1188 + C32719 * C1204) *
                C32904) *
               C15789 +
           ((C20465 + C20466) * C857 + (C20467 + C20468) * C32939 +
            (C20852 + C20851) * C858 + (C20850 + C20849) * C32927 +
            (C21311 + C21312) * C859 + (C21313 + C21314) * C32904) *
               C32543) *
              C32592 * C32578 * C110 -
          (((C21315 + C21316) * C32904 + (C21317 + C21318) * C859 +
            (C20845 + C20846) * C32927 + (C20847 + C20848) * C858 +
            (C20472 + C20471) * C32939 + (C20470 + C20469) * C857) *
               C32543 +
           ((C21314 + C21313) * C32904 + (C21312 + C21311) * C859 +
            (C20849 + C20850) * C32927 + (C20851 + C20852) * C858 +
            (C20468 + C20467) * C32939 + (C20466 + C20465) * C857) *
               C15789) *
              C32592 * C32578 * C111 +
          ((C20481 * C857 + C20482 * C32939 + (C20848 + C20847) * C858 +
            (C20846 + C20845) * C32927 + (C21318 + C21317) * C859 +
            (C21316 + C21315) * C32904) *
               C15789 +
           (C20483 * C857 + C20484 * C32939 + (C20844 + C20843) * C858 +
            (C20842 + C20841) * C32927 +
            (C20430 * C260 + C20428 * C278 + C20431 * C1519 + C32719 * C1520) *
                C859 +
            (C20430 * C279 + C20428 * C290 + C20431 * C1521 + C32719 * C1522) *
                C32904) *
               C32543) *
              C32592 * C32578 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C20430 * C115 + C20428 * C122 + C20431 * C361 + C32719 * C376) *
                C857 +
            (C20430 * C123 + C20428 * C136 + C20431 * C375 + C32719 * C391) *
                C32939 +
            (C21499 + C21500) * C858 + (C21501 + C21502) * C32927 +
            C21515 * C859 + C21516 * C32904) *
               C15789 +
           ((C20465 + C20466) * C857 + (C20467 + C20468) * C32939 +
            (C20852 + C20851) * C858 + (C20850 + C20849) * C32927 +
            C21481 * C859 + C21482 * C32904) *
               C32543) *
              C32592 * C248 -
          (((C21507 + C21508) * C32904 + (C21509 + C21510) * C859 +
            (C21314 + C21313) * C32927 + (C21312 + C21311) * C858 +
            (C20849 + C20850) * C32939 + (C20851 + C20852) * C857) *
               C32543 +
           ((C21511 + C21512) * C32904 + (C21513 + C21514) * C859 +
            (C21506 + C21505) * C32927 + (C21504 + C21503) * C858 +
            (C21502 + C21501) * C32939 + (C21500 + C21499) * C857) *
               C15789) *
              C32592 * C249 +
          ((C21515 * C857 + C21516 * C32939 + (C21514 + C21513) * C858 +
            (C21512 + C21511) * C32927 +
            (C20430 * C1014 + C20428 * C1023 + C20431 * C6402 +
             C32719 * C6406) *
                C859 +
            (C20430 * C1024 + C20428 * C1032 + C20431 * C6405 +
             C32719 * C6411) *
                C32904) *
               C15789 +
           (C21481 * C857 + C21482 * C32939 + (C21510 + C21509) * C858 +
            (C21508 + C21507) * C32927 +
            (C20430 * C1015 + C20428 * C1025 + C20431 * C6588 +
             C32719 * C6589) *
                C859 +
            (C20430 * C1026 + C20428 * C1033 + C20431 * C6590 +
             C32719 * C6591) *
                C32904) *
               C32543) *
              C32592 * C250) *
         C32566) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C20430 * C115 + C20428 * C122 + C20431 * C361 + C32719 * C376) *
                C857 +
            (C20430 * C123 + C20428 * C136 + C20431 * C375 + C32719 * C391) *
                C32939 +
            (C21499 + C21500) * C858 + (C21501 + C21502) * C32927 +
            C21515 * C859 + C21516 * C32904) *
               C15789 +
           ((C20465 + C20466) * C857 + (C20467 + C20468) * C32939 +
            (C20852 + C20851) * C858 + (C20850 + C20849) * C32927 +
            C21481 * C859 + C21482 * C32904) *
               C32543) *
              C354 -
          (((C20431 * C1197 + C32719 * C1208 + C20430 * C1186 +
             C20428 * C1203) *
                C32904 +
            (C20431 * C1181 + C32719 * C1196 + C20430 * C1176 +
             C20428 * C1187) *
                C859 +
            (C20431 * C1195 + C32719 * C1207 + C20430 * C729 + C20428 * C737) *
                C32927 +
            (C20431 * C1180 + C32719 * C1194 + C20430 * C722 + C20428 * C728) *
                C858 +
            (C21015 + C21016) * C32939 + (C21017 + C21018) * C857) *
               C32543 +
           ((C20431 * C1193 + C32719 * C1206 + C20430 * C1188 +
             C20428 * C1204) *
                C32904 +
            (C20431 * C1179 + C32719 * C1192 + C20430 * C1177 +
             C20428 * C1189) *
                C859 +
            (C20431 * C1191 + C32719 * C1205 + C20430 * C727 + C20428 * C736) *
                C32927 +
            (C20431 * C1178 + C32719 * C1190 + C20430 * C721 + C20428 * C726) *
                C858 +
            (C20431 * C378 + C32719 * C392 + C20430 * C375 + C20428 * C391) *
                C32939 +
            (C20431 * C362 + C32719 * C377 + C20430 * C361 + C20428 * C376) *
                C857) *
               C15789) *
              C355 +
          (((C20430 * C362 + C20428 * C377 + C20431 * C2128 + C32719 * C2137) *
                C857 +
            (C20430 * C378 + C20428 * C392 + C20431 * C2136 + C32719 * C2146) *
                C32939 +
            (C20430 * C1178 + C20428 * C1190 + C20431 * C2668 +
             C32719 * C2671) *
                C858 +
            (C20430 * C1191 + C20428 * C1205 + C20431 * C2672 +
             C32719 * C2677) *
                C32927 +
            (C20430 * C1179 + C20428 * C1192 + C20431 * C7078 +
             C32719 * C7082) *
                C859 +
            (C20430 * C1193 + C20428 * C1206 + C20431 * C7081 +
             C32719 * C7087) *
                C32904) *
               C15789 +
           ((C20430 * C363 + C20428 * C379 + C20431 * C2127 + C32719 * C2135) *
                C857 +
            (C20430 * C380 + C20428 * C393 + C20431 * C2134 + C32719 * C2145) *
                C32939 +
            (C20430 * C1180 + C20428 * C1194 + C20431 * C2669 +
             C32719 * C2673) *
                C858 +
            (C20430 * C1195 + C20428 * C1207 + C20431 * C2674 +
             C32719 * C2678) *
                C32927 +
            (C20430 * C1181 + C20428 * C1196 + C20431 * C7404 +
             C32719 * C7405) *
                C859 +
            (C20430 * C1197 + C20428 * C1208 + C20431 * C7406 +
             C32719 * C7407) *
                C32904) *
               C32543) *
              C356) *
         C32578 * C32566) /
            (p * q * std::sqrt(p + q));
    d2ee[98] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C20430 * C115 + C20428 * C122 + C20431 * C361 + C32719 * C376) *
                 C114 +
             (C20430 * C123 + C20428 * C136 + C20431 * C375 + C32719 * C391) *
                 C32615) *
                C32945 +
            ((C20465 + C20466) * C114 + (C20467 + C20468) * C32615) * C32938 +
            C20489 * C32925 + C20490 * C32908) *
               C601 -
           (((C21007 + C21008) * C32615 + (C21009 + C21010) * C114) * C32908 +
            ((C21011 + C21012) * C32615 + (C21013 + C21014) * C114) * C32925 +
            ((C21015 + C21016) * C32615 + (C21017 + C21018) * C114) * C32938 +
            ((C20431 * C378 + C32719 * C392 + C20430 * C375 + C20428 * C391) *
                 C32615 +
             (C20431 * C362 + C32719 * C377 + C20430 * C361 + C20428 * C376) *
                 C114) *
                C32945) *
               C602) *
              C32578 * C481 +
          ((((C21018 + C21017) * C114 + (C21016 + C21015) * C32615) * C32945 +
            ((C21014 + C21013) * C114 + (C21012 + C21011) * C32615) * C32938 +
            ((C21010 + C21009) * C114 + (C21008 + C21007) * C32615) * C32925 +
            ((C20430 * C357 + C20428 * C368 + C20431 * C366 + C32719 * C385) *
                 C114 +
             (C20430 * C367 + C20428 * C387 + C20431 * C386 + C32719 * C396) *
                 C32615) *
                C32908) *
               C602 -
           (((C20477 + C20478) * C32615 + (C20479 + C20480) * C114) * C32908 +
            ((C20476 + C20475) * C32615 + (C20474 + C20473) * C114) * C32925 +
            ((C20472 + C20471) * C32615 + (C20470 + C20469) * C114) * C32938 +
            ((C20468 + C20467) * C32615 + (C20466 + C20465) * C114) * C32945) *
               C601) *
              C32578 * C482)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C20430 * C115 + C20428 * C122 + C20431 * C361 + C32719 * C376) *
                 C857 +
             (C20430 * C123 + C20428 * C136 + C20431 * C375 + C32719 * C391) *
                 C32939 +
             (C21499 + C21500) * C858 + (C21501 + C21502) * C32927 +
             C21515 * C859 + C21516 * C32904) *
                C15789 +
            ((C20465 + C20466) * C857 + (C20467 + C20468) * C32939 +
             C21857 * C858 + C21858 * C32927 + C21481 * C859 +
             C21482 * C32904) *
                C32543) *
               C601 -
           (((C22073 + C22074) * C32904 + (C22075 + C22076) * C859 +
             (C22077 + C22078) * C32927 + (C22079 + C22080) * C858 +
             (C21015 + C21016) * C32939 + (C21017 + C21018) * C857) *
                C32543 +
            ((C20431 * C1193 + C32719 * C1206 + C20430 * C1188 +
              C20428 * C1204) *
                 C32904 +
             (C20431 * C1179 + C32719 * C1192 + C20430 * C1177 +
              C20428 * C1189) *
                 C859 +
             (C20431 * C1191 + C32719 * C1205 + C20430 * C727 + C20428 * C736) *
                 C32927 +
             (C20431 * C1178 + C32719 * C1190 + C20430 * C721 + C20428 * C726) *
                 C858 +
             (C20431 * C378 + C32719 * C392 + C20430 * C375 + C20428 * C391) *
                 C32939 +
             (C20431 * C362 + C32719 * C377 + C20430 * C361 + C20428 * C376) *
                 C857) *
                C15789) *
               C602) *
              C32578 * C481 +
          ((((C21018 + C21017) * C857 + (C21016 + C21015) * C32939 +
             (C22080 + C22079) * C858 + (C22078 + C22077) * C32927 +
             (C22076 + C22075) * C859 + (C22074 + C22073) * C32904) *
                C15789 +
            ((C21014 + C21013) * C857 + (C21012 + C21011) * C32939 +
             (C20430 * C723 + C20428 * C730 + C20431 * C1182 + C32719 * C1198) *
                 C858 +
             (C20430 * C731 + C20428 * C738 + C20431 * C1199 + C32719 * C1209) *
                 C32927 +
             (C20430 * C1175 + C20428 * C1185 + C20431 * C1183 +
              C32719 * C1200) *
                 C859 +
             (C20430 * C1184 + C20428 * C1202 + C20431 * C1201 +
              C32719 * C1210) *
                 C32904) *
                C32543) *
               C602 -
           (((C21315 + C21316) * C32904 + (C21317 + C21318) * C859 +
             (C20845 + C20846) * C32927 + (C20847 + C20848) * C858 +
             (C20472 + C20471) * C32939 + (C20470 + C20469) * C857) *
                C32543 +
            (C21859 * C32904 + C21860 * C859 + C21861 * C32927 + C21862 * C858 +
             (C20468 + C20467) * C32939 + (C20466 + C20465) * C857) *
                C15789) *
               C601) *
              C32578 * C482)) /
            (p * q * std::sqrt(p + q));
    d2ee[99] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C20430 * C115 + C20428 * C122 + C20431 * C361 + C32719 * C376) *
                C114 +
            (C20430 * C123 + C20428 * C136 + C20431 * C375 + C32719 * C391) *
                C32615) *
               C32945 +
           ((C20465 + C20466) * C114 + (C20467 + C20468) * C32615) * C32938 +
           C20489 * C32925 + C20490 * C32908) *
              C32592 * C32578 * C110 -
          (((C20477 + C20478) * C32615 + (C20479 + C20480) * C114) * C32908 +
           ((C20476 + C20475) * C32615 + (C20474 + C20473) * C114) * C32925 +
           ((C20472 + C20471) * C32615 + (C20470 + C20469) * C114) * C32938 +
           ((C20468 + C20467) * C32615 + (C20466 + C20465) * C114) * C32945) *
              C32592 * C32578 * C111 +
          (C20489 * C32945 + C20490 * C32938 +
           ((C20480 + C20479) * C114 + (C20478 + C20477) * C32615) * C32925 +
           ((C20430 * C120 + C20428 * C133 + C20431 * C603 + C32719 * C604) *
                C114 +
            (C20430 * C132 + C20428 * C141 + C20431 * C605 + C32719 * C606) *
                C32615) *
               C32908) *
              C32592 * C32578 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C20430 * C115 + C20428 * C122 + C20431 * C361 + C32719 * C376) *
                C114 +
            (C20430 * C123 + C20428 * C136 + C20431 * C375 + C32719 * C391) *
                C32615) *
               C32945 +
           ((C20465 + C20466) * C114 + (C20467 + C20468) * C32615) * C32938 +
           C20489 * C32925 + C20490 * C32908) *
              C32592 * C248 -
          (((C20431 * C733 + C32719 * C739 + C20430 * C264 + C20428 * C283) *
                C32615 +
            (C20431 * C724 + C32719 * C732 + C20430 * C253 + C20428 * C265) *
                C114) *
               C32908 +
           ((C20431 * C731 + C32719 * C738 + C20430 * C266 + C20428 * C284) *
                C32615 +
            (C20431 * C723 + C32719 * C730 + C20430 * C254 + C20428 * C267) *
                C114) *
               C32925 +
           ((C20431 * C729 + C32719 * C737 + C20430 * C268 + C20428 * C285) *
                C32615 +
            (C20431 * C722 + C32719 * C728 + C20430 * C255 + C20428 * C269) *
                C114) *
               C32938 +
           ((C20431 * C727 + C32719 * C736 + C20430 * C270 + C20428 * C286) *
                C32615 +
            (C20431 * C721 + C32719 * C726 + C20430 * C256 + C20428 * C271) *
                C114) *
               C32945) *
              C32592 * C249 +
          (((C20430 * C257 + C20428 * C272 + C20431 * C1177 + C32719 * C1189) *
                C114 +
            (C20430 * C273 + C20428 * C287 + C20431 * C1188 + C32719 * C1204) *
                C32615) *
               C32945 +
           ((C20430 * C258 + C20428 * C274 + C20431 * C1176 + C32719 * C1187) *
                C114 +
            (C20430 * C275 + C20428 * C288 + C20431 * C1186 + C32719 * C1203) *
                C32615) *
               C32938 +
           ((C20430 * C259 + C20428 * C276 + C20431 * C1175 + C32719 * C1185) *
                C114 +
            (C20430 * C277 + C20428 * C289 + C20431 * C1184 + C32719 * C1202) *
                C32615) *
               C32925 +
           ((C20430 * C260 + C20428 * C278 + C20431 * C1519 + C32719 * C1520) *
                C114 +
            (C20430 * C279 + C20428 * C290 + C20431 * C1521 + C32719 * C1522) *
                C32615) *
               C32908) *
              C32592 * C250) *
         C32566) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C20430 * C115 + C20428 * C122 + C20431 * C361 + C32719 * C376) *
                C857 +
            (C20430 * C123 + C20428 * C136 + C20431 * C375 + C32719 * C391) *
                C32939 +
            (C20430 * C256 + C20428 * C271 + C20431 * C721 + C32719 * C726) *
                C858 +
            (C20430 * C270 + C20428 * C286 + C20431 * C727 + C32719 * C736) *
                C32927 +
            (C20430 * C257 + C20428 * C272 + C20431 * C1177 + C32719 * C1189) *
                C859 +
            (C20430 * C273 + C20428 * C287 + C20431 * C1188 + C32719 * C1204) *
                C32904) *
               C15789 +
           ((C20465 + C20466) * C857 + (C20467 + C20468) * C32939 +
            (C20852 + C20851) * C858 + (C20850 + C20849) * C32927 +
            (C21311 + C21312) * C859 + (C21313 + C21314) * C32904) *
               C32543) *
              C32592 * C32578 * C110 -
          (((C21315 + C21316) * C32904 + (C21317 + C21318) * C859 +
            (C20845 + C20846) * C32927 + (C20847 + C20848) * C858 +
            (C20472 + C20471) * C32939 + (C20470 + C20469) * C857) *
               C32543 +
           ((C21314 + C21313) * C32904 + (C21312 + C21311) * C859 +
            (C20849 + C20850) * C32927 + (C20851 + C20852) * C858 +
            (C20468 + C20467) * C32939 + (C20466 + C20465) * C857) *
               C15789) *
              C32592 * C32578 * C111 +
          ((C20481 * C857 + C20482 * C32939 + (C20848 + C20847) * C858 +
            (C20846 + C20845) * C32927 + (C21318 + C21317) * C859 +
            (C21316 + C21315) * C32904) *
               C15789 +
           (C20483 * C857 + C20484 * C32939 + (C20844 + C20843) * C858 +
            (C20842 + C20841) * C32927 +
            (C20430 * C260 + C20428 * C278 + C20431 * C1519 + C32719 * C1520) *
                C859 +
            (C20430 * C279 + C20428 * C290 + C20431 * C1521 + C32719 * C1522) *
                C32904) *
               C32543) *
              C32592 * C32578 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C20430 * C115 + C20428 * C122 + C20431 * C361 + C32719 * C376) *
                C857 +
            (C20430 * C123 + C20428 * C136 + C20431 * C375 + C32719 * C391) *
                C32939 +
            (C21499 + C21500) * C858 + (C21501 + C21502) * C32927 +
            C21515 * C859 + C21516 * C32904) *
               C15789 +
           ((C20465 + C20466) * C857 + (C20467 + C20468) * C32939 +
            (C20852 + C20851) * C858 + (C20850 + C20849) * C32927 +
            C21481 * C859 + C21482 * C32904) *
               C32543) *
              C32592 * C248 -
          (((C21507 + C21508) * C32904 + (C21509 + C21510) * C859 +
            (C21314 + C21313) * C32927 + (C21312 + C21311) * C858 +
            (C20849 + C20850) * C32939 + (C20851 + C20852) * C857) *
               C32543 +
           ((C21511 + C21512) * C32904 + (C21513 + C21514) * C859 +
            (C21506 + C21505) * C32927 + (C21504 + C21503) * C858 +
            (C21502 + C21501) * C32939 + (C21500 + C21499) * C857) *
               C15789) *
              C32592 * C249 +
          ((C21515 * C857 + C21516 * C32939 + (C21514 + C21513) * C858 +
            (C21512 + C21511) * C32927 +
            (C20430 * C1014 + C20428 * C1023 + C20431 * C6402 +
             C32719 * C6406) *
                C859 +
            (C20430 * C1024 + C20428 * C1032 + C20431 * C6405 +
             C32719 * C6411) *
                C32904) *
               C15789 +
           (C21481 * C857 + C21482 * C32939 + (C21510 + C21509) * C858 +
            (C21508 + C21507) * C32927 +
            (C20430 * C1015 + C20428 * C1025 + C20431 * C6588 +
             C32719 * C6589) *
                C859 +
            (C20430 * C1026 + C20428 * C1033 + C20431 * C6590 +
             C32719 * C6591) *
                C32904) *
               C32543) *
              C32592 * C250) *
         C32566) /
            (p * q * std::sqrt(p + q));
    d2ee[100] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C32632 * C122) * C2784 +
             (C113 * C123 + C32632 * C136) * C32873 + C1056 * C2785 +
             C1057 * C32677) *
                C2780 +
            (C2787 + C2788 + C2789 + C2790) * C2781 + C2807 * C2782 +
            C2808 * C32908) *
               C32592 * C479 -
           ((C3135 + C3136 + C3137 + C3138) * C32908 +
            (C3139 + C3140 + C3141 + C3142) * C2782 +
            (C3143 + C3144 + C3145 + C3146) * C2781 +
            (C1059 * C32677 + C1058 * C2785 + C1057 * C32873 + C1056 * C2784) *
                C2780) *
               C32592 * C480) *
              C481 +
          (((C3146 + C3145 + C3144 + C3143) * C2780 +
            (C3142 + C3141 + C3140 + C3139) * C2781 +
            (C3138 + C3137 + C3136 + C3135) * C2782 +
            (C505 * C2784 + C504 * C32873 +
             (C113 * C261 + C32632 * C280) * C2785 +
             (C113 * C281 + C32632 * C291) * C32677) *
                C32908) *
               C32592 * C480 -
           ((C2799 + C2800 + C2801 + C2802) * C32908 +
            (C2798 + C2797 + C2796 + C2795) * C2782 +
            (C2794 + C2793 + C2792 + C2791) * C2781 +
            (C2790 + C2789 + C2788 + C2787) * C2780) *
               C32592 * C479) *
              C482)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C32632 * C122) * C7698 +
             (C113 * C123 + C32632 * C136) * C7692 + C1056 * C7699 +
             C1057 * C7693 + C1058 * C7700 + C1059 * C7694 + C1065 * C7701 +
             C1064 * C32914) *
                C32854 +
            (C7703 + C7704 + C7705 + C7706 + C7707 + C7708 + C7709 + C7710) *
                C32543) *
               C32592 * C479 -
           ((C8045 + C8046 + C8047 + C8048 + C8049 + C8050 + C8051 + C8052) *
                C32543 +
            (C6338 * C32914 + C6337 * C7701 + C1064 * C7694 + C1065 * C7700 +
             C1059 * C7693 + C1058 * C7699 + C1057 * C7692 + C1056 * C7698) *
                C32854) *
               C32592 * C480) *
              C481 +
          (((C8052 + C8051 + C8050 + C8049 + C8048 + C8047 + C8046 + C8045) *
                C32854 +
            (C509 * C7698 + C508 * C7692 + C888 * C7699 + C889 * C7693 +
             C1061 * C7700 + C1060 * C7694 +
             (C113 * C1016 + C32632 * C1027) * C7701 +
             (C113 * C1028 + C32632 * C1034) * C32914) *
                C32543) *
               C32592 * C480 -
           ((C7711 + C7712 + C7713 + C7714 + C7715 + C7716 + C7717 + C7718) *
                C32543 +
            (C7710 + C7709 + C7708 + C7707 + C7706 + C7705 + C7704 + C7703) *
                C32854) *
               C32592 * C479) *
              C482)) /
            (p * q * std::sqrt(p + q));
    d2ee[101] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C32632 * C122) * C2784 +
             (C113 * C123 + C32632 * C136) * C32873 + C1056 * C2785 +
             C1057 * C32677) *
                C2780 +
            (C2787 + C2788 + C2789 + C2790) * C2781 + C2807 * C2782 +
            C2808 * C32908) *
               C601 -
           ((C3293 + C3294 + C3281 + C3282) * C32908 +
            (C3283 + C3284 + C3285 + C3286) * C2782 +
            (C3287 + C3288 + C3289 + C3290) * C2781 +
            (C1728 * C32677 + C1729 * C2785 +
             (C113 * C375 + C32632 * C391) * C32873 +
             (C113 * C361 + C32632 * C376) * C2784) *
                C2780) *
               C602) *
              C479 +
          (((C1729 * C2784 + C1728 * C32873 + C1727 * C2785 + C1726 * C32677) *
                C2780 +
            (C1551 * C2784 + C1550 * C32873 + C1549 * C2785 + C1548 * C32677) *
                C2781 +
            (C1547 * C2784 + C1546 * C32873 + C1545 * C2785 + C1544 * C32677) *
                C2782 +
            (C3292 * C2784 + C3291 * C32873 +
             (C113 * C1519 + C32632 * C1520) * C2785 +
             (C113 * C1521 + C32632 * C1522) * C32677) *
                C32908) *
               C602 -
           ((C3135 + C3136 + C3137 + C3138) * C32908 +
            (C3139 + C3140 + C3141 + C3142) * C2782 +
            (C3143 + C3144 + C3145 + C3146) * C2781 +
            (C1059 * C32677 + C1058 * C2785 + C1057 * C32873 + C1056 * C2784) *
                C2780) *
               C601) *
              C480) *
         C32566) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C32632 * C122) * C7698 +
             (C113 * C123 + C32632 * C136) * C7692 + C1056 * C7699 +
             C1057 * C7693 + C1058 * C7700 + C1059 * C7694 + C1065 * C7701 +
             C1064 * C32914) *
                C32854 +
            (C7703 + C7704 + C7705 + C7706 + C7707 + C7708 + C7709 + C7710) *
                C32543) *
               C601 -
           ((C8195 + C8196 + C8187 + C8188 + C8189 + C8190 + C8191 + C8192) *
                C32543 +
            (C6689 * C32914 + C6690 * C7701 + C1726 * C7694 + C1727 * C7700 +
             C1728 * C7693 + C1729 * C7699 +
             (C113 * C375 + C32632 * C391) * C7692 +
             (C113 * C361 + C32632 * C376) * C7698) *
                C32854) *
               C602) *
              C479 +
          (((C1729 * C7698 + C1728 * C7692 + C1727 * C7699 + C1726 * C7693 +
             C6690 * C7700 + C6689 * C7694 + C6688 * C7701 + C6687 * C32914) *
                C32854 +
            (C1551 * C7698 + C1550 * C7692 + C1549 * C7699 + C1548 * C7693 +
             C8194 * C7700 + C8193 * C7694 +
             (C113 * C6588 + C32632 * C6589) * C7701 +
             (C113 * C6590 + C32632 * C6591) * C32914) *
                C32543) *
               C602 -
           ((C8045 + C8046 + C8047 + C8048 + C8049 + C8050 + C8051 + C8052) *
                C32543 +
            (C6338 * C32914 + C6337 * C7701 + C1064 * C7694 + C1065 * C7700 +
             C1059 * C7693 + C1058 * C7699 + C1057 * C7692 + C1056 * C7698) *
                C32854) *
               C601) *
              C480) *
         C32566) /
            (p * q * std::sqrt(p + q));
    d2ee[102] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C32632 * C122) * C2784 +
            (C113 * C123 + C32632 * C136) * C32873 + C1056 * C2785 +
            C1057 * C32677) *
               C2780 +
           (C2787 + C2788 + C2789 + C2790) * C2781 + C2807 * C2782 +
           C2808 * C32908) *
              C32592 * C248 -
          ((C890 * C32677 + C891 * C2785 + C506 * C32873 + C507 * C2784) *
               C32908 +
           (C889 * C32677 + C888 * C2785 + C508 * C32873 + C509 * C2784) *
               C2782 +
           (C886 * C32677 + C885 * C2785 + C510 * C32873 + C511 * C2784) *
               C2781 +
           (C1059 * C32677 + C1058 * C2785 + C1057 * C32873 + C1056 * C2784) *
               C2780) *
              C32592 * C249 +
          ((C1058 * C2784 + C1059 * C32873 + C1065 * C2785 + C1064 * C32677) *
               C2780 +
           (C885 * C2784 + C886 * C32873 + C1063 * C2785 + C1062 * C32677) *
               C2781 +
           (C888 * C2784 + C889 * C32873 + C1061 * C2785 + C1060 * C32677) *
               C2782 +
           (C891 * C2784 + C890 * C32873 +
            (C113 * C1357 + C32632 * C1358) * C2785 +
            (C113 * C1359 + C32632 * C1360) * C32677) *
               C32908) *
              C32592 * C250) *
         C32566) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C32632 * C122) * C2784 +
            (C113 * C123 + C32632 * C136) * C32873 + C1056 * C2785 +
            C1057 * C32677) *
               C2780 +
           (C2787 + C2788 + C2789 + C2790) * C2781 + C2807 * C2782 +
           C2808 * C32908) *
              C32592 * C32578 * C110 -
          ((C2799 + C2800 + C2801 + C2802) * C32908 +
           (C2798 + C2797 + C2796 + C2795) * C2782 +
           (C2794 + C2793 + C2792 + C2791) * C2781 +
           (C2790 + C2789 + C2788 + C2787) * C2780) *
              C32592 * C32578 * C111 +
          (C2807 * C2780 + C2808 * C2781 +
           (C2802 + C2801 + C2800 + C2799) * C2782 +
           (C173 * C2784 + C172 * C32873 +
            (C113 * C483 + C32632 * C484) * C2785 +
            (C113 * C485 + C32632 * C486) * C32677) *
               C32908) *
              C32592 * C32578 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C32632 * C122) * C2784 +
            (C113 * C123 + C32632 * C136) * C32873 + C1056 * C2785 +
            C1057 * C32677) *
               C2780 +
           (C2787 + C2788 + C2789 + C2790) * C2781 + C2807 * C2782 +
           C2808 * C32908) *
              C354 -
          (((C113 * C733 + C32632 * C739) * C32677 +
            (C113 * C724 + C32632 * C732) * C2785 + C626 * C32873 +
            C627 * C2784) *
               C32908 +
           (C1546 * C32677 + C1547 * C2785 + C628 * C32873 + C629 * C2784) *
               C2782 +
           (C1550 * C32677 + C1551 * C2785 + C630 * C32873 + C631 * C2784) *
               C2781 +
           (C1728 * C32677 + C1729 * C2785 +
            (C113 * C375 + C32632 * C391) * C32873 +
            (C113 * C361 + C32632 * C376) * C2784) *
               C2780) *
              C355 +
          (((C113 * C362 + C32632 * C377) * C2784 +
            (C113 * C378 + C32632 * C392) * C32873 +
            (C113 * C1178 + C32632 * C1190) * C2785 +
            (C113 * C1191 + C32632 * C1205) * C32677) *
               C2780 +
           ((C113 * C363 + C32632 * C379) * C2784 +
            (C113 * C380 + C32632 * C393) * C32873 +
            (C113 * C1180 + C32632 * C1194) * C2785 +
            (C113 * C1195 + C32632 * C1207) * C32677) *
               C2781 +
           ((C113 * C364 + C32632 * C381) * C2784 +
            (C113 * C382 + C32632 * C394) * C32873 +
            (C113 * C1182 + C32632 * C1198) * C2785 +
            (C113 * C1199 + C32632 * C1209) * C32677) *
               C2782 +
           ((C113 * C365 + C32632 * C383) * C2784 +
            (C113 * C384 + C32632 * C395) * C32873 +
            (C113 * C2296 + C32632 * C2297) * C2785 +
            (C113 * C2298 + C32632 * C2299) * C32677) *
               C32908) *
              C356) *
         C32578 * C32566) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C32632 * C122) * C7698 +
            (C113 * C123 + C32632 * C136) * C7692 + C1056 * C7699 +
            C1057 * C7693 + C1058 * C7700 + C1059 * C7694 + C1065 * C7701 +
            C1064 * C32914) *
               C32854 +
           (C7703 + C7704 + C7705 + C7706 + C7707 + C7708 + C7709 + C7710) *
               C32543) *
              C32592 * C32578 * C110 -
          ((C7711 + C7712 + C7713 + C7714 + C7715 + C7716 + C7717 + C7718) *
               C32543 +
           (C7710 + C7709 + C7708 + C7707 + C7706 + C7705 + C7704 + C7703) *
               C32854) *
              C32592 * C32578 * C111 +
          ((C7718 + C7717 + C7716 + C7715 + C7714 + C7713 + C7712 + C7711) *
               C32854 +
           (C168 * C7698 + C169 * C7692 + C507 * C7699 + C506 * C7693 +
            C891 * C7700 + C890 * C7694 +
            (C113 * C1357 + C32632 * C1358) * C7701 +
            (C113 * C1359 + C32632 * C1360) * C32914) *
               C32543) *
              C32592 * C32578 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C32632 * C122) * C7698 +
            (C113 * C123 + C32632 * C136) * C7692 + C1056 * C7699 +
            C1057 * C7693 + C1058 * C7700 + C1059 * C7694 + C1065 * C7701 +
            C1064 * C32914) *
               C32854 +
           (C7703 + C7704 + C7705 + C7706 + C7707 + C7708 + C7709 + C7710) *
               C32543) *
              C32592 * C248 -
          ((C6506 * C32914 + C6505 * C7701 + C1062 * C7694 + C1063 * C7700 +
            C886 * C7693 + C885 * C7699 + C510 * C7692 + C511 * C7698) *
               C32543 +
           (C6338 * C32914 + C6337 * C7701 + C1064 * C7694 + C1065 * C7700 +
            C1059 * C7693 + C1058 * C7699 + C1057 * C7692 + C1056 * C7698) *
               C32854) *
              C32592 * C249 +
          ((C1058 * C7698 + C1059 * C7692 + C1065 * C7699 + C1064 * C7693 +
            C6337 * C7700 + C6338 * C7694 + C6340 * C7701 + C6339 * C32914) *
               C32854 +
           (C885 * C7698 + C886 * C7692 + C1063 * C7699 + C1062 * C7693 +
            C6505 * C7700 + C6506 * C7694 +
            (C113 * C6496 + C32632 * C6497) * C7701 +
            (C113 * C6498 + C32632 * C6499) * C32914) *
               C32543) *
              C32592 * C250) *
         C32566) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C32632 * C122) * C7698 +
            (C113 * C123 + C32632 * C136) * C7692 + C1056 * C7699 +
            C1057 * C7693 + C1058 * C7700 + C1059 * C7694 + C1065 * C7701 +
            C1064 * C32914) *
               C32854 +
           (C7703 + C7704 + C7705 + C7706 + C7707 + C7708 + C7709 + C7710) *
               C32543) *
              C354 -
          (((C113 * C1711 + C32632 * C1715) * C32914 +
            (C113 * C1706 + C32632 * C1710) * C7701 + C1548 * C7694 +
            C1549 * C7700 + C1550 * C7693 + C1551 * C7699 + C630 * C7692 +
            C631 * C7698) *
               C32543 +
           (C6689 * C32914 + C6690 * C7701 + C1726 * C7694 + C1727 * C7700 +
            C1728 * C7693 + C1729 * C7699 +
            (C113 * C375 + C32632 * C391) * C7692 +
            (C113 * C361 + C32632 * C376) * C7698) *
               C32854) *
              C355 +
          (((C113 * C362 + C32632 * C377) * C7698 +
            (C113 * C378 + C32632 * C392) * C7692 +
            (C113 * C1178 + C32632 * C1190) * C7699 +
            (C113 * C1191 + C32632 * C1205) * C7693 +
            (C113 * C1179 + C32632 * C1192) * C7700 +
            (C113 * C1193 + C32632 * C1206) * C7694 +
            (C113 * C6403 + C32632 * C6407) * C7701 +
            (C113 * C6408 + C32632 * C6412) * C32914) *
               C32854 +
           ((C113 * C363 + C32632 * C379) * C7698 +
            (C113 * C380 + C32632 * C393) * C7692 +
            (C113 * C1180 + C32632 * C1194) * C7699 +
            (C113 * C1195 + C32632 * C1207) * C7693 +
            (C113 * C1181 + C32632 * C1196) * C7700 +
            (C113 * C1197 + C32632 * C1208) * C7694 +
            (C113 * C7236 + C32632 * C7237) * C7701 +
            (C113 * C7238 + C32632 * C7239) * C32914) *
               C32543) *
              C356) *
         C32578 * C32566) /
            (p * q * std::sqrt(p + q));
    d2ee[103] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C32632 * C122) * C2784 +
             (C113 * C123 + C32632 * C136) * C32873 + C1056 * C2785 +
             C1057 * C32677) *
                C2780 +
            (C2787 + C2788 + C2789 + C2790) * C2781 + C2807 * C2782 +
            C2808 * C32908) *
               C601 -
           ((C3293 + C3294 + C3281 + C3282) * C32908 +
            (C3283 + C3284 + C3285 + C3286) * C2782 +
            (C3287 + C3288 + C3289 + C3290) * C2781 +
            (C1728 * C32677 + C1729 * C2785 +
             (C113 * C375 + C32632 * C391) * C32873 +
             (C113 * C361 + C32632 * C376) * C2784) *
                C2780) *
               C602) *
              C32578 * C481 +
          (((C3290 + C3289 + C3288 + C3287) * C2780 +
            (C3286 + C3285 + C3284 + C3283) * C2781 +
            (C3282 + C3281 + C3294 + C3293) * C2782 +
            (C625 * C2784 + C624 * C32873 +
             (C113 * C725 + C32632 * C734) * C2785 +
             (C113 * C735 + C32632 * C740) * C32677) *
                C32908) *
               C602 -
           ((C2799 + C2800 + C2801 + C2802) * C32908 +
            (C2798 + C2797 + C2796 + C2795) * C2782 +
            (C2794 + C2793 + C2792 + C2791) * C2781 +
            (C2790 + C2789 + C2788 + C2787) * C2780) *
               C601) *
              C32578 * C482)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C32632 * C122) * C7698 +
             (C113 * C123 + C32632 * C136) * C7692 + C1056 * C7699 +
             C1057 * C7693 + C1058 * C7700 + C1059 * C7694 + C1065 * C7701 +
             C1064 * C32914) *
                C32854 +
            (C7703 + C7704 + C7705 + C7706 + C7707 + C7708 + C7709 + C7710) *
                C32543) *
               C601 -
           ((C8195 + C8196 + C8187 + C8188 + C8189 + C8190 + C8191 + C8192) *
                C32543 +
            (C6689 * C32914 + C6690 * C7701 + C1726 * C7694 + C1727 * C7700 +
             C1728 * C7693 + C1729 * C7699 +
             (C113 * C375 + C32632 * C391) * C7692 +
             (C113 * C361 + C32632 * C376) * C7698) *
                C32854) *
               C602) *
              C32578 * C481 +
          (((C8192 + C8191 + C8190 + C8189 + C8188 + C8187 + C8196 + C8195) *
                C32854 +
            (C629 * C7698 + C628 * C7692 + C1547 * C7699 + C1546 * C7693 +
             C1545 * C7700 + C1544 * C7694 +
             (C113 * C1707 + C32632 * C1712) * C7701 +
             (C113 * C1713 + C32632 * C1716) * C32914) *
                C32543) *
               C602 -
           ((C7711 + C7712 + C7713 + C7714 + C7715 + C7716 + C7717 + C7718) *
                C32543 +
            (C7710 + C7709 + C7708 + C7707 + C7706 + C7705 + C7704 + C7703) *
                C32854) *
               C601) *
              C32578 * C482)) /
            (p * q * std::sqrt(p + q));
    d2ee[104] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C32632 * C122) * C2784 +
            (C113 * C123 + C32632 * C136) * C32873 + C1056 * C2785 +
            C1057 * C32677) *
               C2780 +
           (C2787 + C2788 + C2789 + C2790) * C2781 + C2807 * C2782 +
           C2808 * C32908) *
              C32592 * C32578 * C110 -
          ((C2799 + C2800 + C2801 + C2802) * C32908 +
           (C2798 + C2797 + C2796 + C2795) * C2782 +
           (C2794 + C2793 + C2792 + C2791) * C2781 +
           (C2790 + C2789 + C2788 + C2787) * C2780) *
              C32592 * C32578 * C111 +
          (C2807 * C2780 + C2808 * C2781 +
           (C2802 + C2801 + C2800 + C2799) * C2782 +
           (C173 * C2784 + C172 * C32873 +
            (C113 * C483 + C32632 * C484) * C2785 +
            (C113 * C485 + C32632 * C486) * C32677) *
               C32908) *
              C32592 * C32578 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C32632 * C122) * C2784 +
            (C113 * C123 + C32632 * C136) * C32873 + C1056 * C2785 +
            C1057 * C32677) *
               C2780 +
           (C2787 + C2788 + C2789 + C2790) * C2781 + C2807 * C2782 +
           C2808 * C32908) *
              C32592 * C248 -
          ((C890 * C32677 + C891 * C2785 + C506 * C32873 + C507 * C2784) *
               C32908 +
           (C889 * C32677 + C888 * C2785 + C508 * C32873 + C509 * C2784) *
               C2782 +
           (C886 * C32677 + C885 * C2785 + C510 * C32873 + C511 * C2784) *
               C2781 +
           (C1059 * C32677 + C1058 * C2785 + C1057 * C32873 + C1056 * C2784) *
               C2780) *
              C32592 * C249 +
          ((C1058 * C2784 + C1059 * C32873 + C1065 * C2785 + C1064 * C32677) *
               C2780 +
           (C885 * C2784 + C886 * C32873 + C1063 * C2785 + C1062 * C32677) *
               C2781 +
           (C888 * C2784 + C889 * C32873 + C1061 * C2785 + C1060 * C32677) *
               C2782 +
           (C891 * C2784 + C890 * C32873 +
            (C113 * C1357 + C32632 * C1358) * C2785 +
            (C113 * C1359 + C32632 * C1360) * C32677) *
               C32908) *
              C32592 * C250) *
         C32566) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C32632 * C122) * C7698 +
            (C113 * C123 + C32632 * C136) * C7692 + C1056 * C7699 +
            C1057 * C7693 + C1058 * C7700 + C1059 * C7694 + C1065 * C7701 +
            C1064 * C32914) *
               C32854 +
           (C7703 + C7704 + C7705 + C7706 + C7707 + C7708 + C7709 + C7710) *
               C32543) *
              C32592 * C32578 * C110 -
          ((C7711 + C7712 + C7713 + C7714 + C7715 + C7716 + C7717 + C7718) *
               C32543 +
           (C7710 + C7709 + C7708 + C7707 + C7706 + C7705 + C7704 + C7703) *
               C32854) *
              C32592 * C32578 * C111 +
          ((C7718 + C7717 + C7716 + C7715 + C7714 + C7713 + C7712 + C7711) *
               C32854 +
           (C168 * C7698 + C169 * C7692 + C507 * C7699 + C506 * C7693 +
            C891 * C7700 + C890 * C7694 +
            (C113 * C1357 + C32632 * C1358) * C7701 +
            (C113 * C1359 + C32632 * C1360) * C32914) *
               C32543) *
              C32592 * C32578 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C32632 * C122) * C7698 +
            (C113 * C123 + C32632 * C136) * C7692 + C1056 * C7699 +
            C1057 * C7693 + C1058 * C7700 + C1059 * C7694 + C1065 * C7701 +
            C1064 * C32914) *
               C32854 +
           (C7703 + C7704 + C7705 + C7706 + C7707 + C7708 + C7709 + C7710) *
               C32543) *
              C32592 * C248 -
          ((C6506 * C32914 + C6505 * C7701 + C1062 * C7694 + C1063 * C7700 +
            C886 * C7693 + C885 * C7699 + C510 * C7692 + C511 * C7698) *
               C32543 +
           (C6338 * C32914 + C6337 * C7701 + C1064 * C7694 + C1065 * C7700 +
            C1059 * C7693 + C1058 * C7699 + C1057 * C7692 + C1056 * C7698) *
               C32854) *
              C32592 * C249 +
          ((C1058 * C7698 + C1059 * C7692 + C1065 * C7699 + C1064 * C7693 +
            C6337 * C7700 + C6338 * C7694 + C6340 * C7701 + C6339 * C32914) *
               C32854 +
           (C885 * C7698 + C886 * C7692 + C1063 * C7699 + C1062 * C7693 +
            C6505 * C7700 + C6506 * C7694 +
            (C113 * C6496 + C32632 * C6497) * C7701 +
            (C113 * C6498 + C32632 * C6499) * C32914) *
               C32543) *
              C32592 * C250) *
         C32566) /
            (p * q * std::sqrt(p + q));
    d2ee[105] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C3524 * C115 + C32874 * C122 + C3525 * C361 + C32719 * C376) *
                 C2784 +
             (C3524 * C123 + C32874 * C136 + C3525 * C375 + C32719 * C391) *
                 C32873 +
             (C4576 + C4577) * C2785 + (C4578 + C4579) * C32677) *
                C854 +
            ((C3559 + C3560) * C2784 + (C3561 + C3562) * C32873 +
             C4932 * C2785 + C4933 * C32677) *
                C855 +
            C4397 * C32893) *
               C32592 * C479 -
           (((C4580 + C4581) * C32677 + (C4582 + C4583) * C2785 +
             C4934 * C32873 + C4935 * C2784) *
                C32893 +
            ((C4584 + C4585) * C32677 + (C4586 + C4587) * C2785 +
             C4936 * C32873 + C4937 * C2784) *
                C855 +
            ((C4588 + C4589) * C32677 + (C4590 + C4591) * C2785 +
             (C4579 + C4578) * C32873 + (C4577 + C4576) * C2784) *
                C854) *
               C32592 * C480) *
              C481 +
          (((C4932 * C2784 + C4933 * C32873 + (C4587 + C4586) * C2785 +
             (C4585 + C4584) * C32677) *
                C854 +
            (C4391 * C2784 + C4392 * C32873 + (C4583 + C4582) * C2785 +
             (C4581 + C4580) * C32677) *
                C855 +
            ((C3938 + C3937) * C2784 + (C3936 + C3935) * C32873 +
             (C3524 * C260 + C32874 * C278 + C3525 * C1519 + C32719 * C1520) *
                 C2785 +
             (C3524 * C279 + C32874 * C290 + C3525 * C1521 + C32719 * C1522) *
                 C32677) *
                C32893) *
               C32592 * C480 -
           (((C3935 + C3936) * C32677 + (C3937 + C3938) * C2785 +
             (C3570 + C3569) * C32873 + (C3568 + C3567) * C2784) *
                C32893 +
            (C4934 * C32677 + C4935 * C2785 + (C3566 + C3565) * C32873 +
             (C3564 + C3563) * C2784) *
                C855 +
            (C4936 * C32677 + C4937 * C2785 + (C3562 + C3561) * C32873 +
             (C3560 + C3559) * C2784) *
                C854) *
               C32592 * C479) *
              C482)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C3524 * C115 + C32874 * C122 + C3525 * C361 + C32719 * C376) *
                C7698 +
            (C3524 * C123 + C32874 * C136 + C3525 * C375 + C32719 * C391) *
                C7692 +
            (C4576 + C4577) * C7699 + (C4578 + C4579) * C7693 + C8619 * C7700 +
            C8620 * C7694 + C9597 * C7701 + C9598 * C32914) *
               C32533 * C32592 * C479 -
           ((C9607 + C9608) * C32914 + (C9609 + C9610) * C7701 +
            (C8643 + C8644) * C7694 + (C8645 + C8646) * C7700 +
            (C4588 + C4589) * C7693 + (C4590 + C4591) * C7699 +
            (C4579 + C4578) * C7692 + (C4577 + C4576) * C7698) *
               C32533 * C32592 * C480) *
              C481 +
          ((C4932 * C7698 + C4933 * C7692 + C8621 * C7699 + C8622 * C7693 +
            (C8642 + C8641) * C7700 + (C8640 + C8639) * C7694 +
            (C3524 * C1015 + C32874 * C1025 + C3525 * C6588 + C32719 * C6589) *
                C7701 +
            (C3524 * C1026 + C32874 * C1033 + C3525 * C6590 + C32719 * C6591) *
                C32914) *
               C32533 * C32592 * C480 -
           ((C8639 + C8640) * C32914 + (C8641 + C8642) * C7701 + C8987 * C7694 +
            C8988 * C7700 + C4936 * C7693 + C4937 * C7699 +
            (C3562 + C3561) * C7692 + (C3560 + C3559) * C7698) *
               C32533 * C32592 * C479) *
              C482)) /
            (p * q * std::sqrt(p + q));
    d2ee[106] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C3524 * C115 + C32874 * C122 + C3525 * C361 + C32719 * C376) *
                 C2784 +
             (C3524 * C123 + C32874 * C136 + C3525 * C375 + C32719 * C391) *
                 C32873 +
             (C4576 + C4577) * C2785 + (C4578 + C4579) * C32677) *
                C854 +
            ((C3559 + C3560) * C2784 + (C3561 + C3562) * C32873 +
             C4932 * C2785 + C4933 * C32677) *
                C855 +
            C4397 * C32893) *
               C601 -
           (((C5148 + C5149) * C32677 + (C5150 + C5151) * C2785 +
             (C4105 + C4106) * C32873 + (C4107 + C4108) * C2784) *
                C32893 +
            ((C5152 + C5153) * C32677 + (C5154 + C5155) * C2785 +
             (C4109 + C4110) * C32873 + (C4111 + C4112) * C2784) *
                C855 +
            ((C5358 + C5359) * C32677 + (C5360 + C5361) * C2785 +
             (C3525 * C378 + C32719 * C392 + C3524 * C375 + C32874 * C391) *
                 C32873 +
             (C3525 * C362 + C32719 * C377 + C3524 * C361 + C32874 * C376) *
                 C2784) *
                C854) *
               C602) *
              C479 +
          ((((C5361 + C5360) * C2784 + (C5359 + C5358) * C32873 +
             (C3524 * C1177 + C32874 * C1189 + C3525 * C1179 + C32719 * C1192) *
                 C2785 +
             (C3524 * C1188 + C32874 * C1204 + C3525 * C1193 + C32719 * C1206) *
                 C32677) *
                C854 +
            ((C5155 + C5154) * C2784 + (C5153 + C5152) * C32873 +
             (C3524 * C1176 + C32874 * C1187 + C3525 * C1181 + C32719 * C1196) *
                 C2785 +
             (C3524 * C1186 + C32874 * C1203 + C3525 * C1197 + C32719 * C1208) *
                 C32677) *
                C855 +
            ((C5151 + C5150) * C2784 + (C5149 + C5148) * C32873 +
             (C3524 * C1175 + C32874 * C1185 + C3525 * C1183 + C32719 * C1200) *
                 C2785 +
             (C3524 * C1184 + C32874 * C1202 + C3525 * C1201 + C32719 * C1210) *
                 C32677) *
                C32893) *
               C602 -
           (((C4580 + C4581) * C32677 + (C4582 + C4583) * C2785 +
             C4934 * C32873 + C4935 * C2784) *
                C32893 +
            ((C4584 + C4585) * C32677 + (C4586 + C4587) * C2785 +
             C4936 * C32873 + C4937 * C2784) *
                C855 +
            ((C4588 + C4589) * C32677 + (C4590 + C4591) * C2785 +
             (C4579 + C4578) * C32873 + (C4577 + C4576) * C2784) *
                C854) *
               C601) *
              C480) *
         C32566) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C3524 * C115 + C32874 * C122 + C3525 * C361 + C32719 * C376) *
                C7698 +
            (C3524 * C123 + C32874 * C136 + C3525 * C375 + C32719 * C391) *
                C7692 +
            (C4576 + C4577) * C7699 + (C4578 + C4579) * C7693 + C8619 * C7700 +
            C8620 * C7694 + C9597 * C7701 + C9598 * C32914) *
               C32533 * C601 -
           ((C10107 + C10108) * C32914 + (C10109 + C10110) * C7701 +
            (C9397 + C9398) * C7694 + (C9399 + C9400) * C7700 +
            (C5358 + C5359) * C7693 + (C5360 + C5361) * C7699 +
            (C3525 * C378 + C32719 * C392 + C3524 * C375 + C32874 * C391) *
                C7692 +
            (C3525 * C362 + C32719 * C377 + C3524 * C361 + C32874 * C376) *
                C7698) *
               C32533 * C602) *
              C479 +
          (((C5361 + C5360) * C7698 + (C5359 + C5358) * C7692 +
            (C9400 + C9399) * C7699 + (C9398 + C9397) * C7693 +
            (C10110 + C10109) * C7700 + (C10108 + C10107) * C7694 +
            (C3524 * C6402 + C32874 * C6406 + C3525 * C6404 + C32719 * C6409) *
                C7701 +
            (C3524 * C6405 + C32874 * C6411 + C3525 * C6410 + C32719 * C6413) *
                C32914) *
               C32533 * C602 -
           ((C9607 + C9608) * C32914 + (C9609 + C9610) * C7701 +
            (C8643 + C8644) * C7694 + (C8645 + C8646) * C7700 +
            (C4588 + C4589) * C7693 + (C4590 + C4591) * C7699 +
            (C4579 + C4578) * C7692 + (C4577 + C4576) * C7698) *
               C32533 * C601) *
              C480) *
         C32566) /
            (p * q * std::sqrt(p + q));
    d2ee[107] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C3524 * C115 + C32874 * C122 + C3525 * C361 + C32719 * C376) *
                C2784 +
            (C3524 * C123 + C32874 * C136 + C3525 * C375 + C32719 * C391) *
                C32873 +
            (C4576 + C4577) * C2785 + (C4578 + C4579) * C32677) *
               C854 +
           ((C3559 + C3560) * C2784 + (C3561 + C3562) * C32873 +
            (C3946 + C3945) * C2785 + (C3944 + C3943) * C32677) *
               C855 +
           C4397 * C32893) *
              C32592 * C248 -
          (((C4580 + C4581) * C32677 + (C4582 + C4583) * C2785 +
            (C3939 + C3940) * C32873 + (C3941 + C3942) * C2784) *
               C32893 +
           ((C4584 + C4585) * C32677 + (C4586 + C4587) * C2785 +
            (C3943 + C3944) * C32873 + (C3945 + C3946) * C2784) *
               C855 +
           ((C4588 + C4589) * C32677 + (C4590 + C4591) * C2785 +
            (C4579 + C4578) * C32873 + (C4577 + C4576) * C2784) *
               C854) *
              C32592 * C249 +
          (((C4591 + C4590) * C2784 + (C4589 + C4588) * C32873 +
            (C3524 * C1013 + C32874 * C1022 + C3525 * C1705 + C32719 * C1708) *
                C2785 +
            (C3524 * C1021 + C32874 * C1031 + C3525 * C1709 + C32719 * C1714) *
                C32677) *
               C854 +
           ((C4587 + C4586) * C2784 + (C4585 + C4584) * C32873 +
            (C3524 * C1012 + C32874 * C1020 + C3525 * C1706 + C32719 * C1710) *
                C2785 +
            (C3524 * C1019 + C32874 * C1030 + C3525 * C1711 + C32719 * C1715) *
                C32677) *
               C855 +
           ((C4583 + C4582) * C2784 + (C4581 + C4580) * C32873 +
            (C3524 * C1011 + C32874 * C1018 + C3525 * C1707 + C32719 * C1712) *
                C2785 +
            (C3524 * C1017 + C32874 * C1029 + C3525 * C1713 + C32719 * C1716) *
                C32677) *
               C32893) *
              C32592 * C250) *
         C32566) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C3524 * C115 + C32874 * C122 + C3525 * C361 + C32719 * C376) *
                C2784 +
            (C3524 * C123 + C32874 * C136 + C3525 * C375 + C32719 * C391) *
                C32873 +
            (C3524 * C256 + C32874 * C271 + C3525 * C721 + C32719 * C726) *
                C2785 +
            (C3524 * C270 + C32874 * C286 + C3525 * C727 + C32719 * C736) *
                C32677) *
               C854 +
           ((C3559 + C3560) * C2784 + (C3561 + C3562) * C32873 +
            (C3946 + C3945) * C2785 + (C3944 + C3943) * C32677) *
               C855 +
           C4397 * C32893) *
              C32592 * C32578 * C110 -
          (((C3935 + C3936) * C32677 + (C3937 + C3938) * C2785 +
            (C3570 + C3569) * C32873 + (C3568 + C3567) * C2784) *
               C32893 +
           ((C3939 + C3940) * C32677 + (C3941 + C3942) * C2785 +
            (C3566 + C3565) * C32873 + (C3564 + C3563) * C2784) *
               C855 +
           ((C3943 + C3944) * C32677 + (C3945 + C3946) * C2785 +
            (C3562 + C3561) * C32873 + (C3560 + C3559) * C2784) *
               C854) *
              C32592 * C32578 * C111 +
          (C4397 * C854 +
           (C3577 * C2784 + C3578 * C32873 + (C3938 + C3937) * C2785 +
            (C3936 + C3935) * C32677) *
               C855 +
           ((C3574 + C3573) * C2784 + (C3572 + C3571) * C32873 +
            (C3524 * C252 + C32874 * C263 + C3525 * C725 + C32719 * C734) *
                C2785 +
            (C3524 * C262 + C32874 * C282 + C3525 * C735 + C32719 * C740) *
                C32677) *
               C32893) *
              C32592 * C32578 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C3524 * C115 + C32874 * C122 + C3525 * C361 + C32719 * C376) *
                C2784 +
            (C3524 * C123 + C32874 * C136 + C3525 * C375 + C32719 * C391) *
                C32873 +
            (C4576 + C4577) * C2785 + (C4578 + C4579) * C32677) *
               C854 +
           ((C3559 + C3560) * C2784 + (C3561 + C3562) * C32873 +
            (C3946 + C3945) * C2785 + (C3944 + C3943) * C32677) *
               C855 +
           C4397 * C32893) *
              C354 -
          (((C3525 * C1199 + C32719 * C1209 + C3524 * C731 + C32874 * C738) *
                C32677 +
            (C3525 * C1182 + C32719 * C1198 + C3524 * C723 + C32874 * C730) *
                C2785 +
            (C4105 + C4106) * C32873 + (C4107 + C4108) * C2784) *
               C32893 +
           ((C3525 * C1195 + C32719 * C1207 + C3524 * C729 + C32874 * C737) *
                C32677 +
            (C3525 * C1180 + C32719 * C1194 + C3524 * C722 + C32874 * C728) *
                C2785 +
            (C4109 + C4110) * C32873 + (C4111 + C4112) * C2784) *
               C855 +
           ((C3525 * C1191 + C32719 * C1205 + C3524 * C727 + C32874 * C736) *
                C32677 +
            (C3525 * C1178 + C32719 * C1190 + C3524 * C721 + C32874 * C726) *
                C2785 +
            (C3525 * C378 + C32719 * C392 + C3524 * C375 + C32874 * C391) *
                C32873 +
            (C3525 * C362 + C32719 * C377 + C3524 * C361 + C32874 * C376) *
                C2784) *
               C854) *
              C355 +
          (((C3524 * C362 + C32874 * C377 + C3525 * C2128 + C32719 * C2137) *
                C2784 +
            (C3524 * C378 + C32874 * C392 + C3525 * C2136 + C32719 * C2146) *
                C32873 +
            (C3524 * C1178 + C32874 * C1190 + C3525 * C2668 + C32719 * C2671) *
                C2785 +
            (C3524 * C1191 + C32874 * C1205 + C3525 * C2672 + C32719 * C2677) *
                C32677) *
               C854 +
           ((C3524 * C363 + C32874 * C379 + C3525 * C2127 + C32719 * C2135) *
                C2784 +
            (C3524 * C380 + C32874 * C393 + C3525 * C2134 + C32719 * C2145) *
                C32873 +
            (C3524 * C1180 + C32874 * C1194 + C3525 * C2669 + C32719 * C2673) *
                C2785 +
            (C3524 * C1195 + C32874 * C1207 + C3525 * C2674 + C32719 * C2678) *
                C32677) *
               C855 +
           ((C3524 * C364 + C32874 * C381 + C3525 * C2126 + C32719 * C2133) *
                C2784 +
            (C3524 * C382 + C32874 * C394 + C3525 * C2132 + C32719 * C2144) *
                C32873 +
            (C3524 * C1182 + C32874 * C1198 + C3525 * C2670 + C32719 * C2675) *
                C2785 +
            (C3524 * C1199 + C32874 * C1209 + C3525 * C2676 + C32719 * C2679) *
                C32677) *
               C32893) *
              C356) *
         C32578 * C32566) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C3524 * C115 + C32874 * C122 + C3525 * C361 + C32719 * C376) *
               C7698 +
           (C3524 * C123 + C32874 * C136 + C3525 * C375 + C32719 * C391) *
               C7692 +
           (C4576 + C4577) * C7699 + (C4578 + C4579) * C7693 + C8619 * C7700 +
           C8620 * C7694 + (C8646 + C8645) * C7701 + (C8644 + C8643) * C32914) *
              C32533 * C32592 * C32578 * C110 -
          ((C8639 + C8640) * C32914 + (C8641 + C8642) * C7701 + C8987 * C7694 +
           C8988 * C7700 + C4936 * C7693 + C4937 * C7699 +
           (C3562 + C3561) * C7692 + (C3560 + C3559) * C7698) *
              C32533 * C32592 * C32578 * C111 +
          (C3575 * C7698 + C3576 * C7692 + C4391 * C7699 + C4392 * C7693 +
           (C4583 + C4582) * C7700 + (C4581 + C4580) * C7694 +
           (C3524 * C1011 + C32874 * C1018 + C3525 * C1707 + C32719 * C1712) *
               C7701 +
           (C3524 * C1017 + C32874 * C1029 + C3525 * C1713 + C32719 * C1716) *
               C32914) *
              C32533 * C32592 * C32578 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C3524 * C115 + C32874 * C122 + C3525 * C361 + C32719 * C376) *
               C7698 +
           (C3524 * C123 + C32874 * C136 + C3525 * C375 + C32719 * C391) *
               C7692 +
           (C4576 + C4577) * C7699 + (C4578 + C4579) * C7693 + C8619 * C7700 +
           C8620 * C7694 + C9597 * C7701 + C9598 * C32914) *
              C32533 * C32592 * C248 -
          ((C9607 + C9608) * C32914 + (C9609 + C9610) * C7701 +
           (C8643 + C8644) * C7694 + (C8645 + C8646) * C7700 +
           (C4588 + C4589) * C7693 + (C4590 + C4591) * C7699 +
           (C4579 + C4578) * C7692 + (C4577 + C4576) * C7698) *
              C32533 * C32592 * C249 +
          (C8619 * C7698 + C8620 * C7692 + C9597 * C7699 + C9598 * C7693 +
           (C9610 + C9609) * C7700 + (C9608 + C9607) * C7694 +
           (C3524 * C6320 + C32874 * C6323 + C3525 * C6674 + C32719 * C6675) *
               C7701 +
           (C3524 * C6322 + C32874 * C6326 + C3525 * C6676 + C32719 * C6677) *
               C32914) *
              C32533 * C32592 * C250) *
         C32566) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C3524 * C115 + C32874 * C122 + C3525 * C361 + C32719 * C376) *
               C7698 +
           (C3524 * C123 + C32874 * C136 + C3525 * C375 + C32719 * C391) *
               C7692 +
           (C4576 + C4577) * C7699 + (C4578 + C4579) * C7693 + C8619 * C7700 +
           C8620 * C7694 + C9597 * C7701 + C9598 * C32914) *
              C32533 * C354 -
          ((C3525 * C6408 + C32719 * C6412 + C3524 * C1709 + C32874 * C1714) *
               C32914 +
           (C3525 * C6403 + C32719 * C6407 + C3524 * C1705 + C32874 * C1708) *
               C7701 +
           (C9397 + C9398) * C7694 + (C9399 + C9400) * C7700 +
           (C5358 + C5359) * C7693 + (C5360 + C5361) * C7699 +
           (C3525 * C378 + C32719 * C392 + C3524 * C375 + C32874 * C391) *
               C7692 +
           (C3525 * C362 + C32719 * C377 + C3524 * C361 + C32874 * C376) *
               C7698) *
              C32533 * C355 +
          ((C3524 * C362 + C32874 * C377 + C3525 * C2128 + C32719 * C2137) *
               C7698 +
           (C3524 * C378 + C32874 * C392 + C3525 * C2136 + C32719 * C2146) *
               C7692 +
           (C3524 * C1178 + C32874 * C1190 + C3525 * C2668 + C32719 * C2671) *
               C7699 +
           (C3524 * C1191 + C32874 * C1205 + C3525 * C2672 + C32719 * C2677) *
               C7693 +
           (C3524 * C1179 + C32874 * C1192 + C3525 * C7078 + C32719 * C7082) *
               C7700 +
           (C3524 * C1193 + C32874 * C1206 + C3525 * C7081 + C32719 * C7087) *
               C7694 +
           (C3524 * C6403 + C32874 * C6407 + C3525 * C7554 + C32719 * C7555) *
               C7701 +
           (C3524 * C6408 + C32874 * C6412 + C3525 * C7556 + C32719 * C7557) *
               C32914) *
              C32533 * C356) *
         C32578 * C32566) /
            (p * q * std::sqrt(p + q));
    d2ee[108] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C3524 * C115 + C32874 * C122 + C3525 * C361 + C32719 * C376) *
                 C2784 +
             (C3524 * C123 + C32874 * C136 + C3525 * C375 + C32719 * C391) *
                 C32873 +
             (C4576 + C4577) * C2785 + (C4578 + C4579) * C32677) *
                C854 +
            ((C3559 + C3560) * C2784 + (C3561 + C3562) * C32873 +
             C4932 * C2785 + C4933 * C32677) *
                C855 +
            C4397 * C32893) *
               C601 -
           (((C5148 + C5149) * C32677 + (C5150 + C5151) * C2785 +
             (C4105 + C4106) * C32873 + (C4107 + C4108) * C2784) *
                C32893 +
            ((C5152 + C5153) * C32677 + (C5154 + C5155) * C2785 +
             (C4109 + C4110) * C32873 + (C4111 + C4112) * C2784) *
                C855 +
            ((C3525 * C1191 + C32719 * C1205 + C3524 * C727 + C32874 * C736) *
                 C32677 +
             (C3525 * C1178 + C32719 * C1190 + C3524 * C721 + C32874 * C726) *
                 C2785 +
             (C3525 * C378 + C32719 * C392 + C3524 * C375 + C32874 * C391) *
                 C32873 +
             (C3525 * C362 + C32719 * C377 + C3524 * C361 + C32874 * C376) *
                 C2784) *
                C854) *
               C602) *
              C32578 * C481 +
          ((((C4112 + C4111) * C2784 + (C4110 + C4109) * C32873 +
             (C5155 + C5154) * C2785 + (C5153 + C5152) * C32677) *
                C854 +
            ((C4108 + C4107) * C2784 + (C4106 + C4105) * C32873 +
             (C5151 + C5150) * C2785 + (C5149 + C5148) * C32677) *
                C855 +
            ((C4104 + C4103) * C2784 + (C4102 + C4101) * C32873 +
             (C3524 * C724 + C32874 * C732 + C3525 * C2296 + C32719 * C2297) *
                 C2785 +
             (C3524 * C733 + C32874 * C739 + C3525 * C2298 + C32719 * C2299) *
                 C32677) *
                C32893) *
               C602 -
           (((C3935 + C3936) * C32677 + (C3937 + C3938) * C2785 +
             (C3570 + C3569) * C32873 + (C3568 + C3567) * C2784) *
                C32893 +
            (C4934 * C32677 + C4935 * C2785 + (C3566 + C3565) * C32873 +
             (C3564 + C3563) * C2784) *
                C855 +
            (C4936 * C32677 + C4937 * C2785 + (C3562 + C3561) * C32873 +
             (C3560 + C3559) * C2784) *
                C854) *
               C601) *
              C32578 * C482)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C3524 * C115 + C32874 * C122 + C3525 * C361 + C32719 * C376) *
                C7698 +
            (C3524 * C123 + C32874 * C136 + C3525 * C375 + C32719 * C391) *
                C7692 +
            (C4576 + C4577) * C7699 + (C4578 + C4579) * C7693 + C8619 * C7700 +
            C8620 * C7694 + C9597 * C7701 + C9598 * C32914) *
               C32533 * C601 -
           ((C3525 * C6408 + C32719 * C6412 + C3524 * C1709 + C32874 * C1714) *
                C32914 +
            (C3525 * C6403 + C32719 * C6407 + C3524 * C1705 + C32874 * C1708) *
                C7701 +
            (C9397 + C9398) * C7694 + (C9399 + C9400) * C7700 +
            (C5358 + C5359) * C7693 + (C5360 + C5361) * C7699 +
            (C3525 * C378 + C32719 * C392 + C3524 * C375 + C32874 * C391) *
                C7692 +
            (C3525 * C362 + C32719 * C377 + C3524 * C361 + C32874 * C376) *
                C7698) *
               C32533 * C602) *
              C32578 * C481 +
          (((C4112 + C4111) * C7698 + (C4110 + C4109) * C7692 +
            (C5155 + C5154) * C7699 + (C5153 + C5152) * C7693 +
            (C9194 + C9193) * C7700 + (C9192 + C9191) * C7694 +
            (C3524 * C1706 + C32874 * C1710 + C3525 * C7236 + C32719 * C7237) *
                C7701 +
            (C3524 * C1711 + C32874 * C1715 + C3525 * C7238 + C32719 * C7239) *
                C32914) *
               C32533 * C602 -
           ((C8639 + C8640) * C32914 + (C8641 + C8642) * C7701 + C8987 * C7694 +
            C8988 * C7700 + C4936 * C7693 + C4937 * C7699 +
            (C3562 + C3561) * C7692 + (C3560 + C3559) * C7698) *
               C32533 * C601) *
              C32578 * C482)) /
            (p * q * std::sqrt(p + q));
    d2ee[109] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C3524 * C115 + C32874 * C122 + C3525 * C361 + C32719 * C376) *
                C2784 +
            (C3524 * C123 + C32874 * C136 + C3525 * C375 + C32719 * C391) *
                C32873 +
            (C3524 * C256 + C32874 * C271 + C3525 * C721 + C32719 * C726) *
                C2785 +
            (C3524 * C270 + C32874 * C286 + C3525 * C727 + C32719 * C736) *
                C32677) *
               C854 +
           ((C3559 + C3560) * C2784 + (C3561 + C3562) * C32873 +
            (C3946 + C3945) * C2785 + (C3944 + C3943) * C32677) *
               C855 +
           C4397 * C32893) *
              C32592 * C32578 * C110 -
          (((C3935 + C3936) * C32677 + (C3937 + C3938) * C2785 +
            (C3570 + C3569) * C32873 + (C3568 + C3567) * C2784) *
               C32893 +
           ((C3939 + C3940) * C32677 + (C3941 + C3942) * C2785 +
            (C3566 + C3565) * C32873 + (C3564 + C3563) * C2784) *
               C855 +
           ((C3943 + C3944) * C32677 + (C3945 + C3946) * C2785 +
            (C3562 + C3561) * C32873 + (C3560 + C3559) * C2784) *
               C854) *
              C32592 * C32578 * C111 +
          (C4397 * C854 +
           (C3577 * C2784 + C3578 * C32873 + (C3938 + C3937) * C2785 +
            (C3936 + C3935) * C32677) *
               C855 +
           ((C3574 + C3573) * C2784 + (C3572 + C3571) * C32873 +
            (C3524 * C252 + C32874 * C263 + C3525 * C725 + C32719 * C734) *
                C2785 +
            (C3524 * C262 + C32874 * C282 + C3525 * C735 + C32719 * C740) *
                C32677) *
               C32893) *
              C32592 * C32578 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C3524 * C115 + C32874 * C122 + C3525 * C361 + C32719 * C376) *
                C2784 +
            (C3524 * C123 + C32874 * C136 + C3525 * C375 + C32719 * C391) *
                C32873 +
            (C4576 + C4577) * C2785 + (C4578 + C4579) * C32677) *
               C854 +
           ((C3559 + C3560) * C2784 + (C3561 + C3562) * C32873 +
            (C3946 + C3945) * C2785 + (C3944 + C3943) * C32677) *
               C855 +
           C4397 * C32893) *
              C32592 * C248 -
          (((C4580 + C4581) * C32677 + (C4582 + C4583) * C2785 +
            (C3939 + C3940) * C32873 + (C3941 + C3942) * C2784) *
               C32893 +
           ((C4584 + C4585) * C32677 + (C4586 + C4587) * C2785 +
            (C3943 + C3944) * C32873 + (C3945 + C3946) * C2784) *
               C855 +
           ((C4588 + C4589) * C32677 + (C4590 + C4591) * C2785 +
            (C4579 + C4578) * C32873 + (C4577 + C4576) * C2784) *
               C854) *
              C32592 * C249 +
          (((C4591 + C4590) * C2784 + (C4589 + C4588) * C32873 +
            (C3524 * C1013 + C32874 * C1022 + C3525 * C1705 + C32719 * C1708) *
                C2785 +
            (C3524 * C1021 + C32874 * C1031 + C3525 * C1709 + C32719 * C1714) *
                C32677) *
               C854 +
           ((C4587 + C4586) * C2784 + (C4585 + C4584) * C32873 +
            (C3524 * C1012 + C32874 * C1020 + C3525 * C1706 + C32719 * C1710) *
                C2785 +
            (C3524 * C1019 + C32874 * C1030 + C3525 * C1711 + C32719 * C1715) *
                C32677) *
               C855 +
           ((C4583 + C4582) * C2784 + (C4581 + C4580) * C32873 +
            (C3524 * C1011 + C32874 * C1018 + C3525 * C1707 + C32719 * C1712) *
                C2785 +
            (C3524 * C1017 + C32874 * C1029 + C3525 * C1713 + C32719 * C1716) *
                C32677) *
               C32893) *
              C32592 * C250) *
         C32566) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C3524 * C115 + C32874 * C122 + C3525 * C361 + C32719 * C376) *
               C7698 +
           (C3524 * C123 + C32874 * C136 + C3525 * C375 + C32719 * C391) *
               C7692 +
           (C4576 + C4577) * C7699 + (C4578 + C4579) * C7693 + C8619 * C7700 +
           C8620 * C7694 + (C8646 + C8645) * C7701 + (C8644 + C8643) * C32914) *
              C32533 * C32592 * C32578 * C110 -
          ((C8639 + C8640) * C32914 + (C8641 + C8642) * C7701 + C8987 * C7694 +
           C8988 * C7700 + C4936 * C7693 + C4937 * C7699 +
           (C3562 + C3561) * C7692 + (C3560 + C3559) * C7698) *
              C32533 * C32592 * C32578 * C111 +
          (C3575 * C7698 + C3576 * C7692 + C4391 * C7699 + C4392 * C7693 +
           (C4583 + C4582) * C7700 + (C4581 + C4580) * C7694 +
           (C3524 * C1011 + C32874 * C1018 + C3525 * C1707 + C32719 * C1712) *
               C7701 +
           (C3524 * C1017 + C32874 * C1029 + C3525 * C1713 + C32719 * C1716) *
               C32914) *
              C32533 * C32592 * C32578 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C3524 * C115 + C32874 * C122 + C3525 * C361 + C32719 * C376) *
               C7698 +
           (C3524 * C123 + C32874 * C136 + C3525 * C375 + C32719 * C391) *
               C7692 +
           (C4576 + C4577) * C7699 + (C4578 + C4579) * C7693 + C8619 * C7700 +
           C8620 * C7694 + C9597 * C7701 + C9598 * C32914) *
              C32533 * C32592 * C248 -
          ((C9607 + C9608) * C32914 + (C9609 + C9610) * C7701 +
           (C8643 + C8644) * C7694 + (C8645 + C8646) * C7700 +
           (C4588 + C4589) * C7693 + (C4590 + C4591) * C7699 +
           (C4579 + C4578) * C7692 + (C4577 + C4576) * C7698) *
              C32533 * C32592 * C249 +
          (C8619 * C7698 + C8620 * C7692 + C9597 * C7699 + C9598 * C7693 +
           (C9610 + C9609) * C7700 + (C9608 + C9607) * C7694 +
           (C3524 * C6320 + C32874 * C6323 + C3525 * C6674 + C32719 * C6675) *
               C7701 +
           (C3524 * C6322 + C32874 * C6326 + C3525 * C6676 + C32719 * C6677) *
               C32914) *
              C32533 * C32592 * C250) *
         C32566) /
            (p * q * std::sqrt(p + q));
    d2ee[110] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C32632 * C122) * C857 +
             (C113 * C123 + C32632 * C136) * C32939 + C1056 * C858 +
             C1057 * C32927 + C1058 * C859 + C1059 * C32904) *
                C854 +
            (C861 + C862 + C863 + C864 + C892 + C893) * C855 + C901 * C32893) *
               C32592 * C479 -
           ((C1362 + C1363 + C1364 + C1365 + C1366 + C1367) * C32893 +
            (C1368 + C1369 + C1370 + C1371 + C1372 + C1373) * C855 +
            (C1064 * C32904 + C1065 * C859 + C1059 * C32927 + C1058 * C858 +
             C1057 * C32939 + C1056 * C857) *
                C854) *
               C32592 * C480) *
              C481 +
          (((C1373 + C1372 + C1371 + C1370 + C1369 + C1368) * C854 +
            (C1367 + C1366 + C1365 + C1364 + C1363 + C1362) * C855 +
            (C507 * C857 + C506 * C32939 + C891 * C858 + C890 * C32927 +
             (C113 * C1357 + C32632 * C1358) * C859 +
             (C113 * C1359 + C32632 * C1360) * C32904) *
                C32893) *
               C32592 * C480 -
           ((C897 + C898 + C881 + C882 + C883 + C884) * C32893 +
            (C896 + C895 + C872 + C871 + C870 + C869) * C855 +
            (C893 + C892 + C864 + C863 + C862 + C861) * C854) *
               C32592 * C479) *
              C482)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C32632 * C122) * C114 +
             (C113 * C123 + C32632 * C136) * C32615) *
                C103 +
            (C174 + C175) * C104 + C184 * C105 + C185 * C106 + C186 * C107) *
               C32592 * C479 -
           ((C512 + C513) * C107 + (C514 + C515) * C106 + (C516 + C517) * C105 +
            (C518 + C519) * C104 +
            ((C113 * C270 + C32632 * C286) * C32615 +
             (C113 * C256 + C32632 * C271) * C114) *
                C103) *
               C32592 * C480) *
              C481 +
          (((C519 + C518) * C103 + (C517 + C516) * C104 + (C515 + C514) * C105 +
            (C513 + C512) * C106 +
            ((C113 * C483 + C32632 * C484) * C114 +
             (C113 * C485 + C32632 * C486) * C32615) *
                C107) *
               C32592 * C480 -
           ((C182 + C183) * C107 + (C181 + C180) * C106 + (C179 + C178) * C105 +
            (C177 + C176) * C104 + (C175 + C174) * C103) *
               C32592 * C479) *
              C482)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C1842 * C115 + C32940 * C122 + C1843 * C361 + C32929 * C376 +
              C1844 * C362 + C32907 * C377) *
                 C114 +
             (C1842 * C123 + C32940 * C136 + C1843 * C375 + C32929 * C391 +
              C1844 * C378 + C32907 * C392) *
                 C32615) *
                C854 +
            ((C1882 + C1883 + C1884) * C114 +
             (C1885 + C1886 + C1887) * C32615) *
                C855 +
            C1906 * C32893) *
               C32592 * C479 -
           (((C2325 + C2326 + C2327) * C32615 +
             (C2328 + C2329 + C2330) * C114) *
                C32893 +
            ((C2331 + C2332 + C2333) * C32615 +
             (C2334 + C2335 + C2336) * C114) *
                C855 +
            ((C1844 * C1191 + C32907 * C1205 + C1843 * C727 + C32929 * C736 +
              C1842 * C270 + C32940 * C286) *
                 C32615 +
             (C1844 * C1178 + C32907 * C1190 + C1843 * C721 + C32929 * C726 +
              C1842 * C256 + C32940 * C271) *
                 C114) *
                C854) *
               C32592 * C480) *
              C481 +
          ((((C2336 + C2335 + C2334) * C114 +
             (C2333 + C2332 + C2331) * C32615) *
                C854 +
            ((C2330 + C2329 + C2328) * C114 +
             (C2327 + C2326 + C2325) * C32615) *
                C855 +
            ((C1842 * C253 + C32940 * C265 + C1843 * C724 + C32929 * C732 +
              C1844 * C2296 + C32907 * C2297) *
                 C114 +
             (C1842 * C264 + C32940 * C283 + C1843 * C733 + C32929 * C739 +
              C1844 * C2298 + C32907 * C2299) *
                 C32615) *
                C32893) *
               C32592 * C480 -
           (((C1894 + C1895 + C1896) * C32615 +
             (C1897 + C1898 + C1899) * C114) *
                C32893 +
            ((C1893 + C1892 + C1891) * C32615 +
             (C1890 + C1889 + C1888) * C114) *
                C855 +
            ((C1887 + C1886 + C1885) * C32615 +
             (C1884 + C1883 + C1882) * C114) *
                C854) *
               C32592 * C479) *
              C482)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C32632 * C122) * C5477 +
             (C113 * C123 + C32632 * C136) * C5471 + C1056 * C5478 +
             C1057 * C5472 + C1058 * C5479 + C1059 * C32904) *
                C32936 +
            (C5481 + C5482 + C5483 + C5484 + C5485 + C5486) * C32923 +
            C5503 * C32893) *
               C32592 * C479 -
           ((C5870 + C5871 + C5872 + C5873 + C5874 + C5875) * C32893 +
            (C5876 + C5877 + C5878 + C5879 + C5880 + C5881) * C32923 +
            (C1064 * C32904 + C1065 * C5479 + C1059 * C5472 + C1058 * C5478 +
             C1057 * C5471 + C1056 * C5477) *
                C32936) *
               C32592 * C480) *
              C481 +
          (((C5881 + C5880 + C5879 + C5878 + C5877 + C5876) * C32936 +
            (C5875 + C5874 + C5873 + C5872 + C5871 + C5870) * C32923 +
            (C507 * C5477 + C506 * C5471 + C891 * C5478 + C890 * C5472 +
             (C113 * C1357 + C32632 * C1358) * C5479 +
             (C113 * C1359 + C32632 * C1360) * C32904) *
                C32893) *
               C32592 * C480 -
           ((C5493 + C5494 + C5495 + C5496 + C5497 + C5498) * C32893 +
            (C5492 + C5491 + C5490 + C5489 + C5488 + C5487) * C32923 +
            (C5486 + C5485 + C5484 + C5483 + C5482 + C5481) * C32936) *
               C32592 * C479) *
              C482)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C32632 * C122) * C6253 +
            (C113 * C123 + C32632 * C136) * C6247 + C1056 * C6254 +
            C1057 * C6248 + C1058 * C6255 + C1059 * C6249 + C1065 * C6256 +
            C1064 * C6250 + C6337 * C6257 + C6338 * C6251) *
               C32533 * C32592 * C479 -
           (C6339 * C6251 + C6340 * C6257 + C6338 * C6250 + C6337 * C6256 +
            C1064 * C6249 + C1065 * C6255 + C1059 * C6248 + C1058 * C6254 +
            C1057 * C6247 + C1056 * C6253) *
               C32533 * C32592 * C480) *
              C481 +
          ((C511 * C6253 + C510 * C6247 + C885 * C6254 + C886 * C6248 +
            C1063 * C6255 + C1062 * C6249 + C6505 * C6256 + C6506 * C6250 +
            (C113 * C6496 + C32632 * C6497) * C6257 +
            (C113 * C6498 + C32632 * C6499) * C6251) *
               C32533 * C32592 * C480 -
           (C6506 * C6251 + C6505 * C6257 + C1062 * C6250 + C1063 * C6256 +
            C886 * C6249 + C885 * C6255 + C510 * C6248 + C511 * C6254 +
            C165 * C6247 + C164 * C6253) *
               C32533 * C32592 * C479) *
              C482)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C1842 * C115 + C32940 * C122 + C1843 * C361 + C32929 * C376 +
             C1844 * C362 + C32907 * C377) *
                C5477 +
            (C1842 * C123 + C32940 * C136 + C1843 * C375 + C32929 * C391 +
             C1844 * C378 + C32907 * C392) *
                C5471 +
            (C6947 + C6948 + C6949) * C5478 + (C6950 + C6951 + C6952) * C5472 +
            C6967 * C5479 + C6968 * C32904) *
               C32533 * C32592 * C479 -
           ((C6959 + C6960 + C6961) * C32904 + (C6962 + C6963 + C6964) * C5479 +
            (C6958 + C6957 + C6956) * C5472 + (C6955 + C6954 + C6953) * C5478 +
            (C6952 + C6951 + C6950) * C5471 + (C6949 + C6948 + C6947) * C5477) *
               C32533 * C32592 * C480) *
              C481 +
          (((C2336 + C2335 + C2334) * C5477 + (C2333 + C2332 + C2331) * C5471 +
            (C7253 + C7254 + C7255) * C5478 + (C7256 + C7257 + C7258) * C5472 +
            (C1842 * C1012 + C32940 * C1020 + C1843 * C1706 + C32929 * C1710 +
             C1844 * C7236 + C32907 * C7237) *
                C5479 +
            (C1842 * C1019 + C32940 * C1030 + C1843 * C1711 + C32929 * C1715 +
             C1844 * C7238 + C32907 * C7239) *
                C32904) *
               C32533 * C32592 * C480 -
           ((C7258 + C7257 + C7256) * C32904 + (C7255 + C7254 + C7253) * C5479 +
            (C2331 + C2332 + C2333) * C5472 + (C2334 + C2335 + C2336) * C5478 +
            (C1887 + C1886 + C1885) * C5471 + (C1884 + C1883 + C1882) * C5477) *
               C32533 * C32592 * C479) *
              C482)) /
            (p * q * std::sqrt(p + q));
    d2ee[111] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C32632 * C122) * C857 +
             (C113 * C123 + C32632 * C136) * C32939 + C1056 * C858 +
             C1057 * C32927 + C1058 * C859 + C1059 * C32904) *
                C854 +
            (C861 + C862 + C863 + C864 + C892 + C893) * C855 + C901 * C32893) *
               C601 -
           ((C1552 + C1553 + C1554 + C1555 + C1532 + C1533) * C32893 +
            (C1556 + C1557 + C1558 + C1559 + C1542 + C1543) * C855 +
            (C1726 * C32904 + C1727 * C859 + C1728 * C32927 + C1729 * C858 +
             (C113 * C375 + C32632 * C391) * C32939 +
             (C113 * C361 + C32632 * C376) * C857) *
                C854) *
               C602) *
              C479 +
          (((C1729 * C857 + C1728 * C32939 + C1727 * C858 + C1726 * C32927 +
             (C113 * C1705 + C32632 * C1708) * C859 +
             (C113 * C1709 + C32632 * C1714) * C32904) *
                C854 +
            (C1551 * C857 + C1550 * C32939 + C1549 * C858 + C1548 * C32927 +
             (C113 * C1706 + C32632 * C1710) * C859 +
             (C113 * C1711 + C32632 * C1715) * C32904) *
                C855 +
            (C1547 * C857 + C1546 * C32939 + C1545 * C858 + C1544 * C32927 +
             (C113 * C1707 + C32632 * C1712) * C859 +
             (C113 * C1713 + C32632 * C1716) * C32904) *
                C32893) *
               C602 -
           ((C1362 + C1363 + C1364 + C1365 + C1366 + C1367) * C32893 +
            (C1368 + C1369 + C1370 + C1371 + C1372 + C1373) * C855 +
            (C1064 * C32904 + C1065 * C859 + C1059 * C32927 + C1058 * C858 +
             C1057 * C32939 + C1056 * C857) *
                C854) *
               C601) *
              C480) *
         C32566) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C32632 * C122) * C114 +
             (C113 * C123 + C32632 * C136) * C32615) *
                C103 +
            (C174 + C175) * C104 + C184 * C105 + C185 * C106 + C186 * C107) *
               C601 -
           ((C632 + C633) * C107 + (C634 + C635) * C106 + (C636 + C637) * C105 +
            (C638 + C639) * C104 +
            ((C113 * C375 + C32632 * C391) * C32615 +
             (C113 * C361 + C32632 * C376) * C114) *
                C103) *
               C602) *
              C479 +
          ((((C113 * C721 + C32632 * C726) * C114 +
             (C113 * C727 + C32632 * C736) * C32615) *
                C103 +
            ((C113 * C722 + C32632 * C728) * C114 +
             (C113 * C729 + C32632 * C737) * C32615) *
                C104 +
            ((C113 * C723 + C32632 * C730) * C114 +
             (C113 * C731 + C32632 * C738) * C32615) *
                C105 +
            ((C113 * C724 + C32632 * C732) * C114 +
             (C113 * C733 + C32632 * C739) * C32615) *
                C106 +
            ((C113 * C725 + C32632 * C734) * C114 +
             (C113 * C735 + C32632 * C740) * C32615) *
                C107) *
               C602 -
           ((C512 + C513) * C107 + (C514 + C515) * C106 + (C516 + C517) * C105 +
            (C518 + C519) * C104 +
            ((C113 * C270 + C32632 * C286) * C32615 +
             (C113 * C256 + C32632 * C271) * C114) *
                C103) *
               C601) *
              C480) *
         C32566) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C1842 * C115 + C32940 * C122 + C1843 * C361 + C32929 * C376 +
              C1844 * C362 + C32907 * C377) *
                 C114 +
             (C1842 * C123 + C32940 * C136 + C1843 * C375 + C32929 * C391 +
              C1844 * C378 + C32907 * C392) *
                 C32615) *
                C854 +
            ((C1882 + C1883 + C1884) * C114 +
             (C1885 + C1886 + C1887) * C32615) *
                C855 +
            C1906 * C32893) *
               C601 -
           (((C2511 + C2512 + C2513) * C32615 +
             (C2514 + C2515 + C2516) * C114) *
                C32893 +
            ((C2517 + C2518 + C2519) * C32615 +
             (C2520 + C2521 + C2522) * C114) *
                C855 +
            ((C1844 * C2136 + C32907 * C2146 + C1843 * C378 + C32929 * C392 +
              C1842 * C375 + C32940 * C391) *
                 C32615 +
             (C1844 * C2128 + C32907 * C2137 + C1843 * C362 + C32929 * C377 +
              C1842 * C361 + C32940 * C376) *
                 C114) *
                C854) *
               C602) *
              C479 +
          ((((C1842 * C721 + C32940 * C726 + C1843 * C1178 + C32929 * C1190 +
              C1844 * C2668 + C32907 * C2671) *
                 C114 +
             (C1842 * C727 + C32940 * C736 + C1843 * C1191 + C32929 * C1205 +
              C1844 * C2672 + C32907 * C2677) *
                 C32615) *
                C854 +
            ((C1842 * C722 + C32940 * C728 + C1843 * C1180 + C32929 * C1194 +
              C1844 * C2669 + C32907 * C2673) *
                 C114 +
             (C1842 * C729 + C32940 * C737 + C1843 * C1195 + C32929 * C1207 +
              C1844 * C2674 + C32907 * C2678) *
                 C32615) *
                C855 +
            ((C1842 * C723 + C32940 * C730 + C1843 * C1182 + C32929 * C1198 +
              C1844 * C2670 + C32907 * C2675) *
                 C114 +
             (C1842 * C731 + C32940 * C738 + C1843 * C1199 + C32929 * C1209 +
              C1844 * C2676 + C32907 * C2679) *
                 C32615) *
                C32893) *
               C602 -
           (((C2325 + C2326 + C2327) * C32615 +
             (C2328 + C2329 + C2330) * C114) *
                C32893 +
            ((C2331 + C2332 + C2333) * C32615 +
             (C2334 + C2335 + C2336) * C114) *
                C855 +
            ((C1844 * C1191 + C32907 * C1205 + C1843 * C727 + C32929 * C736 +
              C1842 * C270 + C32940 * C286) *
                 C32615 +
             (C1844 * C1178 + C32907 * C1190 + C1843 * C721 + C32929 * C726 +
              C1842 * C256 + C32940 * C271) *
                 C114) *
                C854) *
               C601) *
              C480) *
         C32566) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C32632 * C122) * C5477 +
             (C113 * C123 + C32632 * C136) * C5471 + C1056 * C5478 +
             C1057 * C5472 + C1058 * C5479 + C1059 * C32904) *
                C32936 +
            (C5481 + C5482 + C5483 + C5484 + C5485 + C5486) * C32923 +
            C5503 * C32893) *
               C601 -
           ((C6028 + C6029 + C6030 + C6031 + C6032 + C6033) * C32893 +
            (C6034 + C6035 + C6036 + C6037 + C6038 + C6039) * C32923 +
            (C1726 * C32904 + C1727 * C5479 + C1728 * C5472 + C1729 * C5478 +
             (C113 * C375 + C32632 * C391) * C5471 +
             (C113 * C361 + C32632 * C376) * C5477) *
                C32936) *
               C602) *
              C479 +
          (((C1729 * C5477 + C1728 * C5471 + C1727 * C5478 + C1726 * C5472 +
             (C113 * C1705 + C32632 * C1708) * C5479 +
             (C113 * C1709 + C32632 * C1714) * C32904) *
                C32936 +
            (C1551 * C5477 + C1550 * C5471 + C1549 * C5478 + C1548 * C5472 +
             (C113 * C1706 + C32632 * C1710) * C5479 +
             (C113 * C1711 + C32632 * C1715) * C32904) *
                C32923 +
            (C1547 * C5477 + C1546 * C5471 + C1545 * C5478 + C1544 * C5472 +
             (C113 * C1707 + C32632 * C1712) * C5479 +
             (C113 * C1713 + C32632 * C1716) * C32904) *
                C32893) *
               C602 -
           ((C5870 + C5871 + C5872 + C5873 + C5874 + C5875) * C32893 +
            (C5876 + C5877 + C5878 + C5879 + C5880 + C5881) * C32923 +
            (C1064 * C32904 + C1065 * C5479 + C1059 * C5472 + C1058 * C5478 +
             C1057 * C5471 + C1056 * C5477) *
                C32936) *
               C601) *
              C480) *
         C32566) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C32632 * C122) * C6253 +
            (C113 * C123 + C32632 * C136) * C6247 + C1056 * C6254 +
            C1057 * C6248 + C1058 * C6255 + C1059 * C6249 + C1065 * C6256 +
            C1064 * C6250 + C6337 * C6257 + C6338 * C6251) *
               C32533 * C601 -
           (C6687 * C6251 + C6688 * C6257 + C6689 * C6250 + C6690 * C6256 +
            C1726 * C6249 + C1727 * C6255 + C1728 * C6248 + C1729 * C6254 +
            (C113 * C375 + C32632 * C391) * C6247 +
            (C113 * C361 + C32632 * C376) * C6253) *
               C32533 * C602) *
              C479 +
          ((C1729 * C6253 + C1728 * C6247 + C1727 * C6254 + C1726 * C6248 +
            C6690 * C6255 + C6689 * C6249 + C6688 * C6256 + C6687 * C6250 +
            (C113 * C6674 + C32632 * C6675) * C6257 +
            (C113 * C6676 + C32632 * C6677) * C6251) *
               C32533 * C602 -
           (C6339 * C6251 + C6340 * C6257 + C6338 * C6250 + C6337 * C6256 +
            C1064 * C6249 + C1065 * C6255 + C1059 * C6248 + C1058 * C6254 +
            C1057 * C6247 + C1056 * C6253) *
               C32533 * C601) *
              C480) *
         C32566) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C1842 * C115 + C32940 * C122 + C1843 * C361 + C32929 * C376 +
             C1844 * C362 + C32907 * C377) *
                C5477 +
            (C1842 * C123 + C32940 * C136 + C1843 * C375 + C32929 * C391 +
             C1844 * C378 + C32907 * C392) *
                C5471 +
            (C6947 + C6948 + C6949) * C5478 + (C6950 + C6951 + C6952) * C5472 +
            C6967 * C5479 + C6968 * C32904) *
               C32533 * C601 -
           ((C7583 + C7584 + C7585) * C32904 + (C7586 + C7587 + C7588) * C5479 +
            (C7589 + C7590 + C7591) * C5472 + (C7592 + C7593 + C7594) * C5478 +
            (C1844 * C2136 + C32907 * C2146 + C1843 * C378 + C32929 * C392 +
             C1842 * C375 + C32940 * C391) *
                C5471 +
            (C1844 * C2128 + C32907 * C2137 + C1843 * C362 + C32929 * C377 +
             C1842 * C361 + C32940 * C376) *
                C5477) *
               C32533 * C602) *
              C479 +
          (((C7594 + C7593 + C7592) * C5477 + (C7591 + C7590 + C7589) * C5471 +
            (C7588 + C7587 + C7586) * C5478 + (C7585 + C7584 + C7583) * C5472 +
            (C1842 * C1705 + C32940 * C1708 + C1843 * C6403 + C32929 * C6407 +
             C1844 * C7554 + C32907 * C7555) *
                C5479 +
            (C1842 * C1709 + C32940 * C1714 + C1843 * C6408 + C32929 * C6412 +
             C1844 * C7556 + C32907 * C7557) *
                C32904) *
               C32533 * C602 -
           ((C6959 + C6960 + C6961) * C32904 + (C6962 + C6963 + C6964) * C5479 +
            (C6958 + C6957 + C6956) * C5472 + (C6955 + C6954 + C6953) * C5478 +
            (C6952 + C6951 + C6950) * C5471 + (C6949 + C6948 + C6947) * C5477) *
               C32533 * C601) *
              C480) *
         C32566) /
            (p * q * std::sqrt(p + q));
    d2ee[112] +=
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             ((((C113 * C115 + C32632 * C122) * C114 +
                (C113 * C123 + C32632 * C136) * C32615) *
                   C103 +
               (C174 + C175) * C104 + C184 * C105 + C185 * C106 + C186 * C107) *
                  C32592 * C32578 * C110 -
              ((C182 + C183) * C107 + (C181 + C180) * C106 +
               (C179 + C178) * C105 + (C177 + C176) * C104 +
               (C175 + C174) * C103) *
                  C32592 * C32578 * C111 +
              (C184 * C103 + C185 * C104 + C186 * C105 + (C183 + C182) * C106 +
               ((C113 * C121 + C32632 * C134) * C114 +
                (C113 * C135 + C32632 * C142) * C32615) *
                   C107) *
                  C32592 * C32578 * C112) +
         std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             ((((C113 * C115 + C32632 * C122) * C114 +
                (C113 * C123 + C32632 * C136) * C32615) *
                   C103 +
               (C174 + C175) * C104 + C184 * C105 + C185 * C106 + C186 * C107) *
                  C32592 * C248 -
              (((C113 * C262 + C32632 * C282) * C32615 +
                (C113 * C252 + C32632 * C263) * C114) *
                   C107 +
               ((C113 * C264 + C32632 * C283) * C32615 +
                (C113 * C253 + C32632 * C265) * C114) *
                   C106 +
               ((C113 * C266 + C32632 * C284) * C32615 +
                (C113 * C254 + C32632 * C267) * C114) *
                   C105 +
               ((C113 * C268 + C32632 * C285) * C32615 +
                (C113 * C255 + C32632 * C269) * C114) *
                   C104 +
               ((C113 * C270 + C32632 * C286) * C32615 +
                (C113 * C256 + C32632 * C271) * C114) *
                   C103) *
                  C32592 * C249 +
              (((C113 * C257 + C32632 * C272) * C114 +
                (C113 * C273 + C32632 * C287) * C32615) *
                   C103 +
               ((C113 * C258 + C32632 * C274) * C114 +
                (C113 * C275 + C32632 * C288) * C32615) *
                   C104 +
               ((C113 * C259 + C32632 * C276) * C114 +
                (C113 * C277 + C32632 * C289) * C32615) *
                   C105 +
               ((C113 * C260 + C32632 * C278) * C114 +
                (C113 * C279 + C32632 * C290) * C32615) *
                   C106 +
               ((C113 * C261 + C32632 * C280) * C114 +
                (C113 * C281 + C32632 * C291) * C32615) *
                   C107) *
                  C32592 * C250) *
             C32566) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C32632 * C122) * C114 +
            (C113 * C123 + C32632 * C136) * C32615) *
               C103 +
           (C174 + C175) * C104 + C184 * C105 + C185 * C106 + C186 * C107) *
              C354 -
          (((C113 * C367 + C32632 * C387) * C32615 +
            (C113 * C357 + C32632 * C368) * C114) *
               C107 +
           ((C113 * C369 + C32632 * C388) * C32615 +
            (C113 * C358 + C32632 * C370) * C114) *
               C106 +
           ((C113 * C371 + C32632 * C389) * C32615 +
            (C113 * C359 + C32632 * C372) * C114) *
               C105 +
           ((C113 * C373 + C32632 * C390) * C32615 +
            (C113 * C360 + C32632 * C374) * C114) *
               C104 +
           ((C113 * C375 + C32632 * C391) * C32615 +
            (C113 * C361 + C32632 * C376) * C114) *
               C103) *
              C355 +
          (((C113 * C362 + C32632 * C377) * C114 +
            (C113 * C378 + C32632 * C392) * C32615) *
               C103 +
           ((C113 * C363 + C32632 * C379) * C114 +
            (C113 * C380 + C32632 * C393) * C32615) *
               C104 +
           ((C113 * C364 + C32632 * C381) * C114 +
            (C113 * C382 + C32632 * C394) * C32615) *
               C105 +
           ((C113 * C365 + C32632 * C383) * C114 +
            (C113 * C384 + C32632 * C395) * C32615) *
               C106 +
           ((C113 * C366 + C32632 * C385) * C114 +
            (C113 * C386 + C32632 * C396) * C32615) *
               C107) *
              C356) *
         C32578 * C32566) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C32632 * C122) * C857 +
            (C113 * C123 + C32632 * C136) * C32939 +
            (C113 * C256 + C32632 * C271) * C858 +
            (C113 * C270 + C32632 * C286) * C32927 +
            (C113 * C257 + C32632 * C272) * C859 +
            (C113 * C273 + C32632 * C287) * C32904) *
               C854 +
           (C861 + C862 + C863 + C864 + C892 + C893) * C855 + C901 * C32893) *
              C32592 * C32578 * C110 -
          ((C897 + C898 + C881 + C882 + C883 + C884) * C32893 +
           (C896 + C895 + C872 + C871 + C870 + C869) * C855 +
           (C893 + C892 + C864 + C863 + C862 + C861) * C854) *
              C32592 * C32578 * C111 +
          (C901 * C854 + (C884 + C883 + C882 + C881 + C898 + C897) * C855 +
           (C170 * C857 + C171 * C32939 + C505 * C858 + C504 * C32927 +
            (C113 * C261 + C32632 * C280) * C859 +
            (C113 * C281 + C32632 * C291) * C32904) *
               C32893) *
              C32592 * C32578 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C32632 * C122) * C857 +
            (C113 * C123 + C32632 * C136) * C32939 + C1056 * C858 +
            C1057 * C32927 + C1058 * C859 + C1059 * C32904) *
               C854 +
           (C861 + C862 + C863 + C864 + C892 + C893) * C855 + C901 * C32893) *
              C32592 * C248 -
          ((C1060 * C32904 + C1061 * C859 + C889 * C32927 + C888 * C858 +
            C508 * C32939 + C509 * C857) *
               C32893 +
           (C1062 * C32904 + C1063 * C859 + C886 * C32927 + C885 * C858 +
            C510 * C32939 + C511 * C857) *
               C855 +
           (C1064 * C32904 + C1065 * C859 + C1059 * C32927 + C1058 * C858 +
            C1057 * C32939 + C1056 * C857) *
               C854) *
              C32592 * C249 +
          ((C1058 * C857 + C1059 * C32939 + C1065 * C858 + C1064 * C32927 +
            (C113 * C1014 + C32632 * C1023) * C859 +
            (C113 * C1024 + C32632 * C1032) * C32904) *
               C854 +
           (C885 * C857 + C886 * C32939 + C1063 * C858 + C1062 * C32927 +
            (C113 * C1015 + C32632 * C1025) * C859 +
            (C113 * C1026 + C32632 * C1033) * C32904) *
               C855 +
           (C888 * C857 + C889 * C32939 + C1061 * C858 + C1060 * C32927 +
            (C113 * C1016 + C32632 * C1027) * C859 +
            (C113 * C1028 + C32632 * C1034) * C32904) *
               C32893) *
              C32592 * C250) *
         C32566) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C32632 * C122) * C857 +
            (C113 * C123 + C32632 * C136) * C32939 + C1056 * C858 +
            C1057 * C32927 + C1058 * C859 + C1059 * C32904) *
               C854 +
           (C861 + C862 + C863 + C864 + C892 + C893) * C855 + C901 * C32893) *
              C354 -
          (((C113 * C1184 + C32632 * C1202) * C32904 +
            (C113 * C1175 + C32632 * C1185) * C859 +
            (C113 * C731 + C32632 * C738) * C32927 +
            (C113 * C723 + C32632 * C730) * C858 + C628 * C32939 +
            C629 * C857) *
               C32893 +
           ((C113 * C1186 + C32632 * C1203) * C32904 +
            (C113 * C1176 + C32632 * C1187) * C859 +
            (C113 * C729 + C32632 * C737) * C32927 +
            (C113 * C722 + C32632 * C728) * C858 + C630 * C32939 +
            C631 * C857) *
               C855 +
           ((C113 * C1188 + C32632 * C1204) * C32904 +
            (C113 * C1177 + C32632 * C1189) * C859 +
            (C113 * C727 + C32632 * C736) * C32927 +
            (C113 * C721 + C32632 * C726) * C858 +
            (C113 * C375 + C32632 * C391) * C32939 +
            (C113 * C361 + C32632 * C376) * C857) *
               C854) *
              C355 +
          (((C113 * C362 + C32632 * C377) * C857 +
            (C113 * C378 + C32632 * C392) * C32939 +
            (C113 * C1178 + C32632 * C1190) * C858 +
            (C113 * C1191 + C32632 * C1205) * C32927 +
            (C113 * C1179 + C32632 * C1192) * C859 +
            (C113 * C1193 + C32632 * C1206) * C32904) *
               C854 +
           ((C113 * C363 + C32632 * C379) * C857 +
            (C113 * C380 + C32632 * C393) * C32939 +
            (C113 * C1180 + C32632 * C1194) * C858 +
            (C113 * C1195 + C32632 * C1207) * C32927 +
            (C113 * C1181 + C32632 * C1196) * C859 +
            (C113 * C1197 + C32632 * C1208) * C32904) *
               C855 +
           ((C113 * C364 + C32632 * C381) * C857 +
            (C113 * C382 + C32632 * C394) * C32939 +
            (C113 * C1182 + C32632 * C1198) * C858 +
            (C113 * C1199 + C32632 * C1209) * C32927 +
            (C113 * C1183 + C32632 * C1200) * C859 +
            (C113 * C1201 + C32632 * C1210) * C32904) *
               C32893) *
              C356) *
         C32578 * C32566) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C1842 * C115 + C32940 * C122 + C1843 * C361 + C32929 * C376 +
             C1844 * C362 + C32907 * C377) *
                C114 +
            (C1842 * C123 + C32940 * C136 + C1843 * C375 + C32929 * C391 +
             C1844 * C378 + C32907 * C392) *
                C32615) *
               C854 +
           ((C1882 + C1883 + C1884) * C114 + (C1885 + C1886 + C1887) * C32615) *
               C855 +
           C1906 * C32893) *
              C32592 * C32578 * C110 -
          (((C1894 + C1895 + C1896) * C32615 + (C1897 + C1898 + C1899) * C114) *
               C32893 +
           ((C1893 + C1892 + C1891) * C32615 + (C1890 + C1889 + C1888) * C114) *
               C855 +
           ((C1887 + C1886 + C1885) * C32615 + (C1884 + C1883 + C1882) * C114) *
               C854) *
              C32592 * C32578 * C111 +
          (C1906 * C854 +
           ((C1899 + C1898 + C1897) * C114 + (C1896 + C1895 + C1894) * C32615) *
               C855 +
           ((C1842 * C119 + C32940 * C130 + C1843 * C357 + C32929 * C368 +
             C1844 * C366 + C32907 * C385) *
                C114 +
            (C1842 * C131 + C32940 * C140 + C1843 * C367 + C32929 * C387 +
             C1844 * C386 + C32907 * C396) *
                C32615) *
               C32893) *
              C32592 * C32578 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C1842 * C115 + C32940 * C122 + C1843 * C361 + C32929 * C376 +
             C1844 * C362 + C32907 * C377) *
                C114 +
            (C1842 * C123 + C32940 * C136 + C1843 * C375 + C32929 * C391 +
             C1844 * C378 + C32907 * C392) *
                C32615) *
               C854 +
           ((C1882 + C1883 + C1884) * C114 + (C1885 + C1886 + C1887) * C32615) *
               C855 +
           C1906 * C32893) *
              C32592 * C248 -
          (((C1844 * C1199 + C32907 * C1209 + C1843 * C731 + C32929 * C738 +
             C1842 * C266 + C32940 * C284) *
                C32615 +
            (C1844 * C1182 + C32907 * C1198 + C1843 * C723 + C32929 * C730 +
             C1842 * C254 + C32940 * C267) *
                C114) *
               C32893 +
           ((C1844 * C1195 + C32907 * C1207 + C1843 * C729 + C32929 * C737 +
             C1842 * C268 + C32940 * C285) *
                C32615 +
            (C1844 * C1180 + C32907 * C1194 + C1843 * C722 + C32929 * C728 +
             C1842 * C255 + C32940 * C269) *
                C114) *
               C855 +
           ((C1844 * C1191 + C32907 * C1205 + C1843 * C727 + C32929 * C736 +
             C1842 * C270 + C32940 * C286) *
                C32615 +
            (C1844 * C1178 + C32907 * C1190 + C1843 * C721 + C32929 * C726 +
             C1842 * C256 + C32940 * C271) *
                C114) *
               C854) *
              C32592 * C249 +
          (((C1842 * C257 + C32940 * C272 + C1843 * C1177 + C32929 * C1189 +
             C1844 * C1179 + C32907 * C1192) *
                C114 +
            (C1842 * C273 + C32940 * C287 + C1843 * C1188 + C32929 * C1204 +
             C1844 * C1193 + C32907 * C1206) *
                C32615) *
               C854 +
           ((C1842 * C258 + C32940 * C274 + C1843 * C1176 + C32929 * C1187 +
             C1844 * C1181 + C32907 * C1196) *
                C114 +
            (C1842 * C275 + C32940 * C288 + C1843 * C1186 + C32929 * C1203 +
             C1844 * C1197 + C32907 * C1208) *
                C32615) *
               C855 +
           ((C1842 * C259 + C32940 * C276 + C1843 * C1175 + C32929 * C1185 +
             C1844 * C1183 + C32907 * C1200) *
                C114 +
            (C1842 * C277 + C32940 * C289 + C1843 * C1184 + C32929 * C1202 +
             C1844 * C1201 + C32907 * C1210) *
                C32615) *
               C32893) *
              C32592 * C250) *
         C32566) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C1842 * C115 + C32940 * C122 + C1843 * C361 + C32929 * C376 +
             C1844 * C362 + C32907 * C377) *
                C114 +
            (C1842 * C123 + C32940 * C136 + C1843 * C375 + C32929 * C391 +
             C1844 * C378 + C32907 * C392) *
                C32615) *
               C854 +
           ((C1882 + C1883 + C1884) * C114 + (C1885 + C1886 + C1887) * C32615) *
               C855 +
           C1906 * C32893) *
              C354 -
          (((C1844 * C2132 + C32907 * C2144 + C1843 * C382 + C32929 * C394 +
             C1842 * C371 + C32940 * C389) *
                C32615 +
            (C1844 * C2126 + C32907 * C2133 + C1843 * C364 + C32929 * C381 +
             C1842 * C359 + C32940 * C372) *
                C114) *
               C32893 +
           ((C1844 * C2134 + C32907 * C2145 + C1843 * C380 + C32929 * C393 +
             C1842 * C373 + C32940 * C390) *
                C32615 +
            (C1844 * C2127 + C32907 * C2135 + C1843 * C363 + C32929 * C379 +
             C1842 * C360 + C32940 * C374) *
                C114) *
               C855 +
           ((C1844 * C2136 + C32907 * C2146 + C1843 * C378 + C32929 * C392 +
             C1842 * C375 + C32940 * C391) *
                C32615 +
            (C1844 * C2128 + C32907 * C2137 + C1843 * C362 + C32929 * C377 +
             C1842 * C361 + C32940 * C376) *
                C114) *
               C854) *
              C355 +
          (((C1842 * C362 + C32940 * C377 + C1843 * C2128 + C32929 * C2137 +
             C1844 * C2129 + C32907 * C2138) *
                C114 +
            (C1842 * C378 + C32940 * C392 + C1843 * C2136 + C32929 * C2146 +
             C1844 * C2139 + C32907 * C2147) *
                C32615) *
               C854 +
           ((C1842 * C363 + C32940 * C379 + C1843 * C2127 + C32929 * C2135 +
             C1844 * C2130 + C32907 * C2140) *
                C114 +
            (C1842 * C380 + C32940 * C393 + C1843 * C2134 + C32929 * C2145 +
             C1844 * C2141 + C32907 * C2148) *
                C32615) *
               C855 +
           ((C1842 * C364 + C32940 * C381 + C1843 * C2126 + C32929 * C2133 +
             C1844 * C2131 + C32907 * C2142) *
                C114 +
            (C1842 * C382 + C32940 * C394 + C1843 * C2132 + C32929 * C2144 +
             C1844 * C2143 + C32907 * C2149) *
                C32615) *
               C32893) *
              C356) *
         C32578 * C32566) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C32632 * C122) * C5477 +
            (C113 * C123 + C32632 * C136) * C5471 + C1056 * C5478 +
            C1057 * C5472 + C1058 * C5479 + C1059 * C32904) *
               C32936 +
           (C5481 + C5482 + C5483 + C5484 + C5485 + C5486) * C32923 +
           C5503 * C32893) *
              C32592 * C32578 * C110 -
          ((C5493 + C5494 + C5495 + C5496 + C5497 + C5498) * C32893 +
           (C5492 + C5491 + C5490 + C5489 + C5488 + C5487) * C32923 +
           (C5486 + C5485 + C5484 + C5483 + C5482 + C5481) * C32936) *
              C32592 * C32578 * C111 +
          (C5503 * C32936 +
           (C5498 + C5497 + C5496 + C5495 + C5494 + C5493) * C32923 +
           (C170 * C5477 + C171 * C5471 + C505 * C5478 + C504 * C5472 +
            (C113 * C261 + C32632 * C280) * C5479 +
            (C113 * C281 + C32632 * C291) * C32904) *
               C32893) *
              C32592 * C32578 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C32632 * C122) * C5477 +
            (C113 * C123 + C32632 * C136) * C5471 + C1056 * C5478 +
            C1057 * C5472 + C1058 * C5479 + C1059 * C32904) *
               C32936 +
           (C5481 + C5482 + C5483 + C5484 + C5485 + C5486) * C32923 +
           C5503 * C32893) *
              C32592 * C248 -
          ((C1060 * C32904 + C1061 * C5479 + C889 * C5472 + C888 * C5478 +
            C508 * C5471 + C509 * C5477) *
               C32893 +
           (C1062 * C32904 + C1063 * C5479 + C886 * C5472 + C885 * C5478 +
            C510 * C5471 + C511 * C5477) *
               C32923 +
           (C1064 * C32904 + C1065 * C5479 + C1059 * C5472 + C1058 * C5478 +
            C1057 * C5471 + C1056 * C5477) *
               C32936) *
              C32592 * C249 +
          ((C1058 * C5477 + C1059 * C5471 + C1065 * C5478 + C1064 * C5472 +
            (C113 * C1014 + C32632 * C1023) * C5479 +
            (C113 * C1024 + C32632 * C1032) * C32904) *
               C32936 +
           (C885 * C5477 + C886 * C5471 + C1063 * C5478 + C1062 * C5472 +
            (C113 * C1015 + C32632 * C1025) * C5479 +
            (C113 * C1026 + C32632 * C1033) * C32904) *
               C32923 +
           (C888 * C5477 + C889 * C5471 + C1061 * C5478 + C1060 * C5472 +
            (C113 * C1016 + C32632 * C1027) * C5479 +
            (C113 * C1028 + C32632 * C1034) * C32904) *
               C32893) *
              C32592 * C250) *
         C32566) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C32632 * C122) * C5477 +
            (C113 * C123 + C32632 * C136) * C5471 + C1056 * C5478 +
            C1057 * C5472 + C1058 * C5479 + C1059 * C32904) *
               C32936 +
           (C5481 + C5482 + C5483 + C5484 + C5485 + C5486) * C32923 +
           C5503 * C32893) *
              C354 -
          ((C1544 * C32904 + C1545 * C5479 + C1546 * C5472 + C1547 * C5478 +
            C628 * C5471 + C629 * C5477) *
               C32893 +
           (C1548 * C32904 + C1549 * C5479 + C1550 * C5472 + C1551 * C5478 +
            C630 * C5471 + C631 * C5477) *
               C32923 +
           (C1726 * C32904 + C1727 * C5479 + C1728 * C5472 + C1729 * C5478 +
            (C113 * C375 + C32632 * C391) * C5471 +
            (C113 * C361 + C32632 * C376) * C5477) *
               C32936) *
              C355 +
          (((C113 * C362 + C32632 * C377) * C5477 +
            (C113 * C378 + C32632 * C392) * C5471 +
            (C113 * C1178 + C32632 * C1190) * C5478 +
            (C113 * C1191 + C32632 * C1205) * C5472 +
            (C113 * C1179 + C32632 * C1192) * C5479 +
            (C113 * C1193 + C32632 * C1206) * C32904) *
               C32936 +
           ((C113 * C363 + C32632 * C379) * C5477 +
            (C113 * C380 + C32632 * C393) * C5471 +
            (C113 * C1180 + C32632 * C1194) * C5478 +
            (C113 * C1195 + C32632 * C1207) * C5472 +
            (C113 * C1181 + C32632 * C1196) * C5479 +
            (C113 * C1197 + C32632 * C1208) * C32904) *
               C32923 +
           ((C113 * C364 + C32632 * C381) * C5477 +
            (C113 * C382 + C32632 * C394) * C5471 +
            (C113 * C1182 + C32632 * C1198) * C5478 +
            (C113 * C1199 + C32632 * C1209) * C5472 +
            (C113 * C1183 + C32632 * C1200) * C5479 +
            (C113 * C1201 + C32632 * C1210) * C32904) *
               C32893) *
              C356) *
         C32578 * C32566) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C115 + C32632 * C122) * C6253 +
           (C113 * C123 + C32632 * C136) * C6247 + C1056 * C6254 +
           C1057 * C6248 + C1058 * C6255 + C1059 * C6249 + C1065 * C6256 +
           C1064 * C6250 + (C113 * C1014 + C32632 * C1023) * C6257 +
           (C113 * C1024 + C32632 * C1032) * C6251) *
              C32533 * C32592 * C32578 * C110 -
          ((C113 * C1026 + C32632 * C1033) * C6251 +
           (C113 * C1015 + C32632 * C1025) * C6257 + C1062 * C6250 +
           C1063 * C6256 + C886 * C6249 + C885 * C6255 + C510 * C6248 +
           C511 * C6254 + C165 * C6247 + C164 * C6253) *
              C32533 * C32592 * C32578 * C111 +
          (C166 * C6253 + C167 * C6247 + C509 * C6254 + C508 * C6248 +
           C888 * C6255 + C889 * C6249 + C1061 * C6256 + C1060 * C6250 +
           (C113 * C1016 + C32632 * C1027) * C6257 +
           (C113 * C1028 + C32632 * C1034) * C6251) *
              C32533 * C32592 * C32578 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C115 + C32632 * C122) * C6253 +
           (C113 * C123 + C32632 * C136) * C6247 + C1056 * C6254 +
           C1057 * C6248 + C1058 * C6255 + C1059 * C6249 + C1065 * C6256 +
           C1064 * C6250 + C6337 * C6257 + C6338 * C6251) *
              C32533 * C32592 * C248 -
          (C6339 * C6251 + C6340 * C6257 + C6338 * C6250 + C6337 * C6256 +
           C1064 * C6249 + C1065 * C6255 + C1059 * C6248 + C1058 * C6254 +
           C1057 * C6247 + C1056 * C6253) *
              C32533 * C32592 * C249 +
          (C1058 * C6253 + C1059 * C6247 + C1065 * C6254 + C1064 * C6248 +
           C6337 * C6255 + C6338 * C6249 + C6340 * C6256 + C6339 * C6250 +
           (C113 * C6321 + C32632 * C6324) * C6257 +
           (C113 * C6325 + C32632 * C6327) * C6251) *
              C32533 * C32592 * C250) *
         C32566) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C115 + C32632 * C122) * C6253 +
           (C113 * C123 + C32632 * C136) * C6247 + C1056 * C6254 +
           C1057 * C6248 + C1058 * C6255 + C1059 * C6249 + C1065 * C6256 +
           C1064 * C6250 + C6337 * C6257 + C6338 * C6251) *
              C32533 * C354 -
          ((C113 * C6405 + C32632 * C6411) * C6251 +
           (C113 * C6402 + C32632 * C6406) * C6257 +
           (C113 * C1709 + C32632 * C1714) * C6250 +
           (C113 * C1705 + C32632 * C1708) * C6256 + C1726 * C6249 +
           C1727 * C6255 + C1728 * C6248 + C1729 * C6254 +
           (C113 * C375 + C32632 * C391) * C6247 +
           (C113 * C361 + C32632 * C376) * C6253) *
              C32533 * C355 +
          ((C113 * C362 + C32632 * C377) * C6253 +
           (C113 * C378 + C32632 * C392) * C6247 +
           (C113 * C1178 + C32632 * C1190) * C6254 +
           (C113 * C1191 + C32632 * C1205) * C6248 +
           (C113 * C1179 + C32632 * C1192) * C6255 +
           (C113 * C1193 + C32632 * C1206) * C6249 +
           (C113 * C6403 + C32632 * C6407) * C6256 +
           (C113 * C6408 + C32632 * C6412) * C6250 +
           (C113 * C6404 + C32632 * C6409) * C6257 +
           (C113 * C6410 + C32632 * C6413) * C6251) *
              C32533 * C356) *
         C32578 * C32566) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C1842 * C115 + C32940 * C122 + C1843 * C361 + C32929 * C376 +
            C1844 * C362 + C32907 * C377) *
               C5477 +
           (C1842 * C123 + C32940 * C136 + C1843 * C375 + C32929 * C391 +
            C1844 * C378 + C32907 * C392) *
               C5471 +
           (C1842 * C256 + C32940 * C271 + C1843 * C721 + C32929 * C726 +
            C1844 * C1178 + C32907 * C1190) *
               C5478 +
           (C1842 * C270 + C32940 * C286 + C1843 * C727 + C32929 * C736 +
            C1844 * C1191 + C32907 * C1205) *
               C5472 +
           (C1842 * C257 + C32940 * C272 + C1843 * C1177 + C32929 * C1189 +
            C1844 * C1179 + C32907 * C1192) *
               C5479 +
           (C1842 * C273 + C32940 * C287 + C1843 * C1188 + C32929 * C1204 +
            C1844 * C1193 + C32907 * C1206) *
               C32904) *
              C32533 * C32592 * C32578 * C110 -
          ((C1844 * C1197 + C32907 * C1208 + C1843 * C1186 + C32929 * C1203 +
            C1842 * C275 + C32940 * C288) *
               C32904 +
           (C1844 * C1181 + C32907 * C1196 + C1843 * C1176 + C32929 * C1187 +
            C1842 * C258 + C32940 * C274) *
               C5479 +
           (C2331 + C2332 + C2333) * C5472 + (C2334 + C2335 + C2336) * C5478 +
           (C1887 + C1886 + C1885) * C5471 + (C1884 + C1883 + C1882) * C5477) *
              C32533 * C32592 * C32578 * C111 +
          (C1902 * C5477 + C1903 * C5471 + (C2330 + C2329 + C2328) * C5478 +
           (C2327 + C2326 + C2325) * C5472 +
           (C1842 * C259 + C32940 * C276 + C1843 * C1175 + C32929 * C1185 +
            C1844 * C1183 + C32907 * C1200) *
               C5479 +
           (C1842 * C277 + C32940 * C289 + C1843 * C1184 + C32929 * C1202 +
            C1844 * C1201 + C32907 * C1210) *
               C32904) *
              C32533 * C32592 * C32578 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C1842 * C115 + C32940 * C122 + C1843 * C361 + C32929 * C376 +
            C1844 * C362 + C32907 * C377) *
               C5477 +
           (C1842 * C123 + C32940 * C136 + C1843 * C375 + C32929 * C391 +
            C1844 * C378 + C32907 * C392) *
               C5471 +
           (C6947 + C6948 + C6949) * C5478 + (C6950 + C6951 + C6952) * C5472 +
           C6967 * C5479 + C6968 * C32904) *
              C32533 * C32592 * C248 -
          ((C6959 + C6960 + C6961) * C32904 + (C6962 + C6963 + C6964) * C5479 +
           (C6958 + C6957 + C6956) * C5472 + (C6955 + C6954 + C6953) * C5478 +
           (C6952 + C6951 + C6950) * C5471 + (C6949 + C6948 + C6947) * C5477) *
              C32533 * C32592 * C249 +
          (C6967 * C5477 + C6968 * C5471 + (C6964 + C6963 + C6962) * C5478 +
           (C6961 + C6960 + C6959) * C5472 +
           (C1842 * C1014 + C32940 * C1023 + C1843 * C6402 + C32929 * C6406 +
            C1844 * C6404 + C32907 * C6409) *
               C5479 +
           (C1842 * C1024 + C32940 * C1032 + C1843 * C6405 + C32929 * C6411 +
            C1844 * C6410 + C32907 * C6413) *
               C32904) *
              C32533 * C32592 * C250) *
         C32566) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C1842 * C115 + C32940 * C122 + C1843 * C361 + C32929 * C376 +
            C1844 * C362 + C32907 * C377) *
               C5477 +
           (C1842 * C123 + C32940 * C136 + C1843 * C375 + C32929 * C391 +
            C1844 * C378 + C32907 * C392) *
               C5471 +
           (C6947 + C6948 + C6949) * C5478 + (C6950 + C6951 + C6952) * C5472 +
           C6967 * C5479 + C6968 * C32904) *
              C32533 * C354 -
          ((C1844 * C7081 + C32907 * C7087 + C1843 * C1193 + C32929 * C1206 +
            C1842 * C1188 + C32940 * C1204) *
               C32904 +
           (C1844 * C7078 + C32907 * C7082 + C1843 * C1179 + C32929 * C1192 +
            C1842 * C1177 + C32940 * C1189) *
               C5479 +
           (C1844 * C2672 + C32907 * C2677 + C1843 * C1191 + C32929 * C1205 +
            C1842 * C727 + C32940 * C736) *
               C5472 +
           (C1844 * C2668 + C32907 * C2671 + C1843 * C1178 + C32929 * C1190 +
            C1842 * C721 + C32940 * C726) *
               C5478 +
           (C1844 * C2136 + C32907 * C2146 + C1843 * C378 + C32929 * C392 +
            C1842 * C375 + C32940 * C391) *
               C5471 +
           (C1844 * C2128 + C32907 * C2137 + C1843 * C362 + C32929 * C377 +
            C1842 * C361 + C32940 * C376) *
               C5477) *
              C32533 * C355 +
          ((C1842 * C362 + C32940 * C377 + C1843 * C2128 + C32929 * C2137 +
            C1844 * C2129 + C32907 * C2138) *
               C5477 +
           (C1842 * C378 + C32940 * C392 + C1843 * C2136 + C32929 * C2146 +
            C1844 * C2139 + C32907 * C2147) *
               C5471 +
           (C1842 * C1178 + C32940 * C1190 + C1843 * C2668 + C32929 * C2671 +
            C1844 * C7079 + C32907 * C7083) *
               C5478 +
           (C1842 * C1191 + C32940 * C1205 + C1843 * C2672 + C32929 * C2677 +
            C1844 * C7084 + C32907 * C7088) *
               C5472 +
           (C1842 * C1179 + C32940 * C1192 + C1843 * C7078 + C32929 * C7082 +
            C1844 * C7080 + C32907 * C7085) *
               C5479 +
           (C1842 * C1193 + C32940 * C1206 + C1843 * C7081 + C32929 * C7087 +
            C1844 * C7086 + C32907 * C7089) *
               C32904) *
              C32533 * C356) *
         C32578 * C32566) /
            (p * q * std::sqrt(p + q));
    d2ee[113] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C32632 * C122) * C857 +
             (C113 * C123 + C32632 * C136) * C32939 + C1056 * C858 +
             C1057 * C32927 + C1058 * C859 + C1059 * C32904) *
                C854 +
            (C861 + C862 + C863 + C864 + C892 + C893) * C855 + C901 * C32893) *
               C601 -
           ((C1552 + C1553 + C1554 + C1555 + C1532 + C1533) * C32893 +
            (C1556 + C1557 + C1558 + C1559 + C1542 + C1543) * C855 +
            ((C113 * C1188 + C32632 * C1204) * C32904 +
             (C113 * C1177 + C32632 * C1189) * C859 +
             (C113 * C727 + C32632 * C736) * C32927 +
             (C113 * C721 + C32632 * C726) * C858 +
             (C113 * C375 + C32632 * C391) * C32939 +
             (C113 * C361 + C32632 * C376) * C857) *
                C854) *
               C602) *
              C32578 * C481 +
          (((C1543 + C1542 + C1559 + C1558 + C1557 + C1556) * C854 +
            (C1533 + C1532 + C1555 + C1554 + C1553 + C1552) * C855 +
            (C627 * C857 + C626 * C32939 +
             (C113 * C724 + C32632 * C732) * C858 +
             (C113 * C733 + C32632 * C739) * C32927 +
             (C113 * C1519 + C32632 * C1520) * C859 +
             (C113 * C1521 + C32632 * C1522) * C32904) *
                C32893) *
               C602 -
           ((C897 + C898 + C881 + C882 + C883 + C884) * C32893 +
            (C896 + C895 + C872 + C871 + C870 + C869) * C855 +
            (C893 + C892 + C864 + C863 + C862 + C861) * C854) *
               C601) *
              C32578 * C482)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C32632 * C122) * C114 +
             (C113 * C123 + C32632 * C136) * C32615) *
                C103 +
            (C174 + C175) * C104 + C184 * C105 + C185 * C106 + C186 * C107) *
               C601 -
           ((C632 + C633) * C107 + (C634 + C635) * C106 + (C636 + C637) * C105 +
            (C638 + C639) * C104 +
            ((C113 * C375 + C32632 * C391) * C32615 +
             (C113 * C361 + C32632 * C376) * C114) *
                C103) *
               C602) *
              C32578 * C481 +
          (((C639 + C638) * C103 + (C637 + C636) * C104 + (C635 + C634) * C105 +
            (C633 + C632) * C106 +
            ((C113 * C603 + C32632 * C604) * C114 +
             (C113 * C605 + C32632 * C606) * C32615) *
                C107) *
               C602 -
           ((C182 + C183) * C107 + (C181 + C180) * C106 + (C179 + C178) * C105 +
            (C177 + C176) * C104 + (C175 + C174) * C103) *
               C601) *
              C32578 * C482)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C1842 * C115 + C32940 * C122 + C1843 * C361 + C32929 * C376 +
              C1844 * C362 + C32907 * C377) *
                 C114 +
             (C1842 * C123 + C32940 * C136 + C1843 * C375 + C32929 * C391 +
              C1844 * C378 + C32907 * C392) *
                 C32615) *
                C854 +
            ((C1882 + C1883 + C1884) * C114 +
             (C1885 + C1886 + C1887) * C32615) *
                C855 +
            C1906 * C32893) *
               C601 -
           (((C2511 + C2512 + C2513) * C32615 +
             (C2514 + C2515 + C2516) * C114) *
                C32893 +
            ((C2517 + C2518 + C2519) * C32615 +
             (C2520 + C2521 + C2522) * C114) *
                C855 +
            ((C1844 * C2136 + C32907 * C2146 + C1843 * C378 + C32929 * C392 +
              C1842 * C375 + C32940 * C391) *
                 C32615 +
             (C1844 * C2128 + C32907 * C2137 + C1843 * C362 + C32929 * C377 +
              C1842 * C361 + C32940 * C376) *
                 C114) *
                C854) *
               C602) *
              C32578 * C481 +
          ((((C2522 + C2521 + C2520) * C114 +
             (C2519 + C2518 + C2517) * C32615) *
                C854 +
            ((C2516 + C2515 + C2514) * C114 +
             (C2513 + C2512 + C2511) * C32615) *
                C855 +
            ((C1842 * C358 + C32940 * C370 + C1843 * C365 + C32929 * C383 +
              C1844 * C2482 + C32907 * C2483) *
                 C114 +
             (C1842 * C369 + C32940 * C388 + C1843 * C384 + C32929 * C395 +
              C1844 * C2484 + C32907 * C2485) *
                 C32615) *
                C32893) *
               C602 -
           (((C1894 + C1895 + C1896) * C32615 +
             (C1897 + C1898 + C1899) * C114) *
                C32893 +
            ((C1893 + C1892 + C1891) * C32615 +
             (C1890 + C1889 + C1888) * C114) *
                C855 +
            ((C1887 + C1886 + C1885) * C32615 +
             (C1884 + C1883 + C1882) * C114) *
                C854) *
               C601) *
              C32578 * C482)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C32632 * C122) * C5477 +
             (C113 * C123 + C32632 * C136) * C5471 + C1056 * C5478 +
             C1057 * C5472 + C1058 * C5479 + C1059 * C32904) *
                C32936 +
            (C5481 + C5482 + C5483 + C5484 + C5485 + C5486) * C32923 +
            C5503 * C32893) *
               C601 -
           ((C6028 + C6029 + C6030 + C6031 + C6032 + C6033) * C32893 +
            (C6034 + C6035 + C6036 + C6037 + C6038 + C6039) * C32923 +
            (C1726 * C32904 + C1727 * C5479 + C1728 * C5472 + C1729 * C5478 +
             (C113 * C375 + C32632 * C391) * C5471 +
             (C113 * C361 + C32632 * C376) * C5477) *
                C32936) *
               C602) *
              C32578 * C481 +
          (((C6039 + C6038 + C6037 + C6036 + C6035 + C6034) * C32936 +
            (C6033 + C6032 + C6031 + C6030 + C6029 + C6028) * C32923 +
            (C627 * C5477 + C626 * C5471 + C3292 * C5478 + C3291 * C5472 +
             (C113 * C1519 + C32632 * C1520) * C5479 +
             (C113 * C1521 + C32632 * C1522) * C32904) *
                C32893) *
               C602 -
           ((C5493 + C5494 + C5495 + C5496 + C5497 + C5498) * C32893 +
            (C5492 + C5491 + C5490 + C5489 + C5488 + C5487) * C32923 +
            (C5486 + C5485 + C5484 + C5483 + C5482 + C5481) * C32936) *
               C601) *
              C32578 * C482)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C32632 * C122) * C6253 +
            (C113 * C123 + C32632 * C136) * C6247 + C1056 * C6254 +
            C1057 * C6248 + C1058 * C6255 + C1059 * C6249 + C1065 * C6256 +
            C1064 * C6250 + C6337 * C6257 + C6338 * C6251) *
               C32533 * C601 -
           ((C113 * C6405 + C32632 * C6411) * C6251 +
            (C113 * C6402 + C32632 * C6406) * C6257 +
            (C113 * C1709 + C32632 * C1714) * C6250 +
            (C113 * C1705 + C32632 * C1708) * C6256 + C1726 * C6249 +
            C1727 * C6255 + C1728 * C6248 + C1729 * C6254 +
            (C113 * C375 + C32632 * C391) * C6247 +
            (C113 * C361 + C32632 * C376) * C6253) *
               C32533 * C602) *
              C32578 * C481 +
          ((C631 * C6253 + C630 * C6247 + C1551 * C6254 + C1550 * C6248 +
            C1549 * C6255 + C1548 * C6249 +
            (C113 * C1706 + C32632 * C1710) * C6256 +
            (C113 * C1711 + C32632 * C1715) * C6250 +
            (C113 * C6588 + C32632 * C6589) * C6257 +
            (C113 * C6590 + C32632 * C6591) * C6251) *
               C32533 * C602 -
           (C6506 * C6251 + C6505 * C6257 + C1062 * C6250 + C1063 * C6256 +
            C886 * C6249 + C885 * C6255 + C510 * C6248 + C511 * C6254 +
            C165 * C6247 + C164 * C6253) *
               C32533 * C601) *
              C32578 * C482)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C1842 * C115 + C32940 * C122 + C1843 * C361 + C32929 * C376 +
             C1844 * C362 + C32907 * C377) *
                C5477 +
            (C1842 * C123 + C32940 * C136 + C1843 * C375 + C32929 * C391 +
             C1844 * C378 + C32907 * C392) *
                C5471 +
            (C6947 + C6948 + C6949) * C5478 + (C6950 + C6951 + C6952) * C5472 +
            C6967 * C5479 + C6968 * C32904) *
               C32533 * C601 -
           ((C1844 * C7081 + C32907 * C7087 + C1843 * C1193 + C32929 * C1206 +
             C1842 * C1188 + C32940 * C1204) *
                C32904 +
            (C1844 * C7078 + C32907 * C7082 + C1843 * C1179 + C32929 * C1192 +
             C1842 * C1177 + C32940 * C1189) *
                C5479 +
            (C1844 * C2672 + C32907 * C2677 + C1843 * C1191 + C32929 * C1205 +
             C1842 * C727 + C32940 * C736) *
                C5472 +
            (C1844 * C2668 + C32907 * C2671 + C1843 * C1178 + C32929 * C1190 +
             C1842 * C721 + C32940 * C726) *
                C5478 +
            (C1844 * C2136 + C32907 * C2146 + C1843 * C378 + C32929 * C392 +
             C1842 * C375 + C32940 * C391) *
                C5471 +
            (C1844 * C2128 + C32907 * C2137 + C1843 * C362 + C32929 * C377 +
             C1842 * C361 + C32940 * C376) *
                C5477) *
               C32533 * C602) *
              C32578 * C481 +
          (((C2522 + C2521 + C2520) * C5477 + (C2519 + C2518 + C2517) * C5471 +
            (C1842 * C722 + C32940 * C728 + C1843 * C1180 + C32929 * C1194 +
             C1844 * C2669 + C32907 * C2673) *
                C5478 +
            (C1842 * C729 + C32940 * C737 + C1843 * C1195 + C32929 * C1207 +
             C1844 * C2674 + C32907 * C2678) *
                C5472 +
            (C1842 * C1176 + C32940 * C1187 + C1843 * C1181 + C32929 * C1196 +
             C1844 * C7404 + C32907 * C7405) *
                C5479 +
            (C1842 * C1186 + C32940 * C1203 + C1843 * C1197 + C32929 * C1208 +
             C1844 * C7406 + C32907 * C7407) *
                C32904) *
               C32533 * C602 -
           ((C7258 + C7257 + C7256) * C32904 + (C7255 + C7254 + C7253) * C5479 +
            (C2331 + C2332 + C2333) * C5472 + (C2334 + C2335 + C2336) * C5478 +
            (C1887 + C1886 + C1885) * C5471 + (C1884 + C1883 + C1882) * C5477) *
               C32533 * C601) *
              C32578 * C482)) /
            (p * q * std::sqrt(p + q));
    d2ee[114] +=
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C32632 * C122) * C114 +
            (C113 * C123 + C32632 * C136) * C32615) *
               C103 +
           (C174 + C175) * C104 + C184 * C105 + C185 * C106 + C186 * C107) *
              C32592 * C248 -
          (((C113 * C262 + C32632 * C282) * C32615 +
            (C113 * C252 + C32632 * C263) * C114) *
               C107 +
           ((C113 * C264 + C32632 * C283) * C32615 +
            (C113 * C253 + C32632 * C265) * C114) *
               C106 +
           ((C113 * C266 + C32632 * C284) * C32615 +
            (C113 * C254 + C32632 * C267) * C114) *
               C105 +
           ((C113 * C268 + C32632 * C285) * C32615 +
            (C113 * C255 + C32632 * C269) * C114) *
               C104 +
           ((C113 * C270 + C32632 * C286) * C32615 +
            (C113 * C256 + C32632 * C271) * C114) *
               C103) *
              C32592 * C249 +
          (((C113 * C257 + C32632 * C272) * C114 +
            (C113 * C273 + C32632 * C287) * C32615) *
               C103 +
           ((C113 * C258 + C32632 * C274) * C114 +
            (C113 * C275 + C32632 * C288) * C32615) *
               C104 +
           ((C113 * C259 + C32632 * C276) * C114 +
            (C113 * C277 + C32632 * C289) * C32615) *
               C105 +
           ((C113 * C260 + C32632 * C278) * C114 +
            (C113 * C279 + C32632 * C290) * C32615) *
               C106 +
           ((C113 * C261 + C32632 * C280) * C114 +
            (C113 * C281 + C32632 * C291) * C32615) *
               C107) *
              C32592 * C250) *
         C32566) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C32632 * C122) * C114 +
            (C113 * C123 + C32632 * C136) * C32615) *
               C103 +
           (C174 + C175) * C104 + C184 * C105 + C185 * C106 + C186 * C107) *
              C32592 * C32578 * C110 -
          ((C182 + C183) * C107 + (C181 + C180) * C106 + (C179 + C178) * C105 +
           (C177 + C176) * C104 + (C175 + C174) * C103) *
              C32592 * C32578 * C111 +
          (C184 * C103 + C185 * C104 + C186 * C105 + (C183 + C182) * C106 +
           ((C113 * C121 + C32632 * C134) * C114 +
            (C113 * C135 + C32632 * C142) * C32615) *
               C107) *
              C32592 * C32578 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C32632 * C122) * C857 +
            (C113 * C123 + C32632 * C136) * C32939 +
            (C113 * C256 + C32632 * C271) * C858 +
            (C113 * C270 + C32632 * C286) * C32927 +
            (C113 * C257 + C32632 * C272) * C859 +
            (C113 * C273 + C32632 * C287) * C32904) *
               C854 +
           (C861 + C862 + C863 + C864 + C892 + C893) * C855 + C901 * C32893) *
              C32592 * C32578 * C110 -
          ((C897 + C898 + C881 + C882 + C883 + C884) * C32893 +
           (C896 + C895 + C872 + C871 + C870 + C869) * C855 +
           (C893 + C892 + C864 + C863 + C862 + C861) * C854) *
              C32592 * C32578 * C111 +
          (C901 * C854 + (C884 + C883 + C882 + C881 + C898 + C897) * C855 +
           (C170 * C857 + C171 * C32939 + C505 * C858 + C504 * C32927 +
            (C113 * C261 + C32632 * C280) * C859 +
            (C113 * C281 + C32632 * C291) * C32904) *
               C32893) *
              C32592 * C32578 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C32632 * C122) * C857 +
            (C113 * C123 + C32632 * C136) * C32939 + C1056 * C858 +
            C1057 * C32927 + C1058 * C859 + C1059 * C32904) *
               C854 +
           (C861 + C862 + C863 + C864 + C892 + C893) * C855 + C901 * C32893) *
              C32592 * C248 -
          ((C1060 * C32904 + C1061 * C859 + C889 * C32927 + C888 * C858 +
            C508 * C32939 + C509 * C857) *
               C32893 +
           (C1062 * C32904 + C1063 * C859 + C886 * C32927 + C885 * C858 +
            C510 * C32939 + C511 * C857) *
               C855 +
           (C1064 * C32904 + C1065 * C859 + C1059 * C32927 + C1058 * C858 +
            C1057 * C32939 + C1056 * C857) *
               C854) *
              C32592 * C249 +
          ((C1058 * C857 + C1059 * C32939 + C1065 * C858 + C1064 * C32927 +
            (C113 * C1014 + C32632 * C1023) * C859 +
            (C113 * C1024 + C32632 * C1032) * C32904) *
               C854 +
           (C885 * C857 + C886 * C32939 + C1063 * C858 + C1062 * C32927 +
            (C113 * C1015 + C32632 * C1025) * C859 +
            (C113 * C1026 + C32632 * C1033) * C32904) *
               C855 +
           (C888 * C857 + C889 * C32939 + C1061 * C858 + C1060 * C32927 +
            (C113 * C1016 + C32632 * C1027) * C859 +
            (C113 * C1028 + C32632 * C1034) * C32904) *
               C32893) *
              C32592 * C250) *
         C32566) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C1842 * C115 + C32940 * C122 + C1843 * C361 + C32929 * C376 +
             C1844 * C362 + C32907 * C377) *
                C114 +
            (C1842 * C123 + C32940 * C136 + C1843 * C375 + C32929 * C391 +
             C1844 * C378 + C32907 * C392) *
                C32615) *
               C854 +
           ((C1882 + C1883 + C1884) * C114 + (C1885 + C1886 + C1887) * C32615) *
               C855 +
           C1906 * C32893) *
              C32592 * C32578 * C110 -
          (((C1894 + C1895 + C1896) * C32615 + (C1897 + C1898 + C1899) * C114) *
               C32893 +
           ((C1893 + C1892 + C1891) * C32615 + (C1890 + C1889 + C1888) * C114) *
               C855 +
           ((C1887 + C1886 + C1885) * C32615 + (C1884 + C1883 + C1882) * C114) *
               C854) *
              C32592 * C32578 * C111 +
          (C1906 * C854 +
           ((C1899 + C1898 + C1897) * C114 + (C1896 + C1895 + C1894) * C32615) *
               C855 +
           ((C1842 * C119 + C32940 * C130 + C1843 * C357 + C32929 * C368 +
             C1844 * C366 + C32907 * C385) *
                C114 +
            (C1842 * C131 + C32940 * C140 + C1843 * C367 + C32929 * C387 +
             C1844 * C386 + C32907 * C396) *
                C32615) *
               C32893) *
              C32592 * C32578 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C1842 * C115 + C32940 * C122 + C1843 * C361 + C32929 * C376 +
             C1844 * C362 + C32907 * C377) *
                C114 +
            (C1842 * C123 + C32940 * C136 + C1843 * C375 + C32929 * C391 +
             C1844 * C378 + C32907 * C392) *
                C32615) *
               C854 +
           ((C1882 + C1883 + C1884) * C114 + (C1885 + C1886 + C1887) * C32615) *
               C855 +
           C1906 * C32893) *
              C32592 * C248 -
          (((C1844 * C1199 + C32907 * C1209 + C1843 * C731 + C32929 * C738 +
             C1842 * C266 + C32940 * C284) *
                C32615 +
            (C1844 * C1182 + C32907 * C1198 + C1843 * C723 + C32929 * C730 +
             C1842 * C254 + C32940 * C267) *
                C114) *
               C32893 +
           ((C1844 * C1195 + C32907 * C1207 + C1843 * C729 + C32929 * C737 +
             C1842 * C268 + C32940 * C285) *
                C32615 +
            (C1844 * C1180 + C32907 * C1194 + C1843 * C722 + C32929 * C728 +
             C1842 * C255 + C32940 * C269) *
                C114) *
               C855 +
           ((C1844 * C1191 + C32907 * C1205 + C1843 * C727 + C32929 * C736 +
             C1842 * C270 + C32940 * C286) *
                C32615 +
            (C1844 * C1178 + C32907 * C1190 + C1843 * C721 + C32929 * C726 +
             C1842 * C256 + C32940 * C271) *
                C114) *
               C854) *
              C32592 * C249 +
          (((C1842 * C257 + C32940 * C272 + C1843 * C1177 + C32929 * C1189 +
             C1844 * C1179 + C32907 * C1192) *
                C114 +
            (C1842 * C273 + C32940 * C287 + C1843 * C1188 + C32929 * C1204 +
             C1844 * C1193 + C32907 * C1206) *
                C32615) *
               C854 +
           ((C1842 * C258 + C32940 * C274 + C1843 * C1176 + C32929 * C1187 +
             C1844 * C1181 + C32907 * C1196) *
                C114 +
            (C1842 * C275 + C32940 * C288 + C1843 * C1186 + C32929 * C1203 +
             C1844 * C1197 + C32907 * C1208) *
                C32615) *
               C855 +
           ((C1842 * C259 + C32940 * C276 + C1843 * C1175 + C32929 * C1185 +
             C1844 * C1183 + C32907 * C1200) *
                C114 +
            (C1842 * C277 + C32940 * C289 + C1843 * C1184 + C32929 * C1202 +
             C1844 * C1201 + C32907 * C1210) *
                C32615) *
               C32893) *
              C32592 * C250) *
         C32566) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C32632 * C122) * C5477 +
            (C113 * C123 + C32632 * C136) * C5471 + C1056 * C5478 +
            C1057 * C5472 + C1058 * C5479 + C1059 * C32904) *
               C32936 +
           (C5481 + C5482 + C5483 + C5484 + C5485 + C5486) * C32923 +
           C5503 * C32893) *
              C32592 * C32578 * C110 -
          ((C5493 + C5494 + C5495 + C5496 + C5497 + C5498) * C32893 +
           (C5492 + C5491 + C5490 + C5489 + C5488 + C5487) * C32923 +
           (C5486 + C5485 + C5484 + C5483 + C5482 + C5481) * C32936) *
              C32592 * C32578 * C111 +
          (C5503 * C32936 +
           (C5498 + C5497 + C5496 + C5495 + C5494 + C5493) * C32923 +
           (C170 * C5477 + C171 * C5471 + C505 * C5478 + C504 * C5472 +
            (C113 * C261 + C32632 * C280) * C5479 +
            (C113 * C281 + C32632 * C291) * C32904) *
               C32893) *
              C32592 * C32578 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C32632 * C122) * C5477 +
            (C113 * C123 + C32632 * C136) * C5471 + C1056 * C5478 +
            C1057 * C5472 + C1058 * C5479 + C1059 * C32904) *
               C32936 +
           (C5481 + C5482 + C5483 + C5484 + C5485 + C5486) * C32923 +
           C5503 * C32893) *
              C32592 * C248 -
          ((C1060 * C32904 + C1061 * C5479 + C889 * C5472 + C888 * C5478 +
            C508 * C5471 + C509 * C5477) *
               C32893 +
           (C1062 * C32904 + C1063 * C5479 + C886 * C5472 + C885 * C5478 +
            C510 * C5471 + C511 * C5477) *
               C32923 +
           (C1064 * C32904 + C1065 * C5479 + C1059 * C5472 + C1058 * C5478 +
            C1057 * C5471 + C1056 * C5477) *
               C32936) *
              C32592 * C249 +
          ((C1058 * C5477 + C1059 * C5471 + C1065 * C5478 + C1064 * C5472 +
            (C113 * C1014 + C32632 * C1023) * C5479 +
            (C113 * C1024 + C32632 * C1032) * C32904) *
               C32936 +
           (C885 * C5477 + C886 * C5471 + C1063 * C5478 + C1062 * C5472 +
            (C113 * C1015 + C32632 * C1025) * C5479 +
            (C113 * C1026 + C32632 * C1033) * C32904) *
               C32923 +
           (C888 * C5477 + C889 * C5471 + C1061 * C5478 + C1060 * C5472 +
            (C113 * C1016 + C32632 * C1027) * C5479 +
            (C113 * C1028 + C32632 * C1034) * C32904) *
               C32893) *
              C32592 * C250) *
         C32566) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C115 + C32632 * C122) * C6253 +
           (C113 * C123 + C32632 * C136) * C6247 + C1056 * C6254 +
           C1057 * C6248 + C1058 * C6255 + C1059 * C6249 + C1065 * C6256 +
           C1064 * C6250 + (C113 * C1014 + C32632 * C1023) * C6257 +
           (C113 * C1024 + C32632 * C1032) * C6251) *
              C32533 * C32592 * C32578 * C110 -
          ((C113 * C1026 + C32632 * C1033) * C6251 +
           (C113 * C1015 + C32632 * C1025) * C6257 + C1062 * C6250 +
           C1063 * C6256 + C886 * C6249 + C885 * C6255 + C510 * C6248 +
           C511 * C6254 + C165 * C6247 + C164 * C6253) *
              C32533 * C32592 * C32578 * C111 +
          (C166 * C6253 + C167 * C6247 + C509 * C6254 + C508 * C6248 +
           C888 * C6255 + C889 * C6249 + C1061 * C6256 + C1060 * C6250 +
           (C113 * C1016 + C32632 * C1027) * C6257 +
           (C113 * C1028 + C32632 * C1034) * C6251) *
              C32533 * C32592 * C32578 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C115 + C32632 * C122) * C6253 +
           (C113 * C123 + C32632 * C136) * C6247 + C1056 * C6254 +
           C1057 * C6248 + C1058 * C6255 + C1059 * C6249 + C1065 * C6256 +
           C1064 * C6250 + C6337 * C6257 + C6338 * C6251) *
              C32533 * C32592 * C248 -
          (C6339 * C6251 + C6340 * C6257 + C6338 * C6250 + C6337 * C6256 +
           C1064 * C6249 + C1065 * C6255 + C1059 * C6248 + C1058 * C6254 +
           C1057 * C6247 + C1056 * C6253) *
              C32533 * C32592 * C249 +
          (C1058 * C6253 + C1059 * C6247 + C1065 * C6254 + C1064 * C6248 +
           C6337 * C6255 + C6338 * C6249 + C6340 * C6256 + C6339 * C6250 +
           (C113 * C6321 + C32632 * C6324) * C6257 +
           (C113 * C6325 + C32632 * C6327) * C6251) *
              C32533 * C32592 * C250) *
         C32566) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C1842 * C115 + C32940 * C122 + C1843 * C361 + C32929 * C376 +
            C1844 * C362 + C32907 * C377) *
               C5477 +
           (C1842 * C123 + C32940 * C136 + C1843 * C375 + C32929 * C391 +
            C1844 * C378 + C32907 * C392) *
               C5471 +
           (C1842 * C256 + C32940 * C271 + C1843 * C721 + C32929 * C726 +
            C1844 * C1178 + C32907 * C1190) *
               C5478 +
           (C1842 * C270 + C32940 * C286 + C1843 * C727 + C32929 * C736 +
            C1844 * C1191 + C32907 * C1205) *
               C5472 +
           (C1842 * C257 + C32940 * C272 + C1843 * C1177 + C32929 * C1189 +
            C1844 * C1179 + C32907 * C1192) *
               C5479 +
           (C1842 * C273 + C32940 * C287 + C1843 * C1188 + C32929 * C1204 +
            C1844 * C1193 + C32907 * C1206) *
               C32904) *
              C32533 * C32592 * C32578 * C110 -
          ((C1844 * C1197 + C32907 * C1208 + C1843 * C1186 + C32929 * C1203 +
            C1842 * C275 + C32940 * C288) *
               C32904 +
           (C1844 * C1181 + C32907 * C1196 + C1843 * C1176 + C32929 * C1187 +
            C1842 * C258 + C32940 * C274) *
               C5479 +
           (C2331 + C2332 + C2333) * C5472 + (C2334 + C2335 + C2336) * C5478 +
           (C1887 + C1886 + C1885) * C5471 + (C1884 + C1883 + C1882) * C5477) *
              C32533 * C32592 * C32578 * C111 +
          (C1902 * C5477 + C1903 * C5471 + (C2330 + C2329 + C2328) * C5478 +
           (C2327 + C2326 + C2325) * C5472 +
           (C1842 * C259 + C32940 * C276 + C1843 * C1175 + C32929 * C1185 +
            C1844 * C1183 + C32907 * C1200) *
               C5479 +
           (C1842 * C277 + C32940 * C289 + C1843 * C1184 + C32929 * C1202 +
            C1844 * C1201 + C32907 * C1210) *
               C32904) *
              C32533 * C32592 * C32578 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C1842 * C115 + C32940 * C122 + C1843 * C361 + C32929 * C376 +
            C1844 * C362 + C32907 * C377) *
               C5477 +
           (C1842 * C123 + C32940 * C136 + C1843 * C375 + C32929 * C391 +
            C1844 * C378 + C32907 * C392) *
               C5471 +
           (C6947 + C6948 + C6949) * C5478 + (C6950 + C6951 + C6952) * C5472 +
           C6967 * C5479 + C6968 * C32904) *
              C32533 * C32592 * C248 -
          ((C6959 + C6960 + C6961) * C32904 + (C6962 + C6963 + C6964) * C5479 +
           (C6958 + C6957 + C6956) * C5472 + (C6955 + C6954 + C6953) * C5478 +
           (C6952 + C6951 + C6950) * C5471 + (C6949 + C6948 + C6947) * C5477) *
              C32533 * C32592 * C249 +
          (C6967 * C5477 + C6968 * C5471 + (C6964 + C6963 + C6962) * C5478 +
           (C6961 + C6960 + C6959) * C5472 +
           (C1842 * C1014 + C32940 * C1023 + C1843 * C6402 + C32929 * C6406 +
            C1844 * C6404 + C32907 * C6409) *
               C5479 +
           (C1842 * C1024 + C32940 * C1032 + C1843 * C6405 + C32929 * C6411 +
            C1844 * C6410 + C32907 * C6413) *
               C32904) *
              C32533 * C32592 * C250) *
         C32566) /
            (p * q * std::sqrt(p + q));
    d2ee[115] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C3524 * C115 + C32874 * C122 + C3525 * C361 + C32719 * C376) *
                 C114 +
             (C3524 * C123 + C32874 * C136 + C3525 * C375 + C32719 * C391) *
                 C32615) *
                C2780 +
            ((C3559 + C3560) * C114 + (C3561 + C3562) * C32615) * C2781 +
            C3583 * C2782 + C3584 * C32908) *
               C32592 * C479 -
           (((C3935 + C3936) * C32615 + (C3937 + C3938) * C114) * C32908 +
            ((C3939 + C3940) * C32615 + (C3941 + C3942) * C114) * C2782 +
            ((C3943 + C3944) * C32615 + (C3945 + C3946) * C114) * C2781 +
            ((C3525 * C727 + C32719 * C736 + C3524 * C270 + C32874 * C286) *
                 C32615 +
             (C3525 * C721 + C32719 * C726 + C3524 * C256 + C32874 * C271) *
                 C114) *
                C2780) *
               C32592 * C480) *
              C481 +
          ((((C3946 + C3945) * C114 + (C3944 + C3943) * C32615) * C2780 +
            ((C3942 + C3941) * C114 + (C3940 + C3939) * C32615) * C2781 +
            ((C3938 + C3937) * C114 + (C3936 + C3935) * C32615) * C2782 +
            ((C3524 * C252 + C32874 * C263 + C3525 * C725 + C32719 * C734) *
                 C114 +
             (C3524 * C262 + C32874 * C282 + C3525 * C735 + C32719 * C740) *
                 C32615) *
                C32908) *
               C32592 * C480 -
           (((C3571 + C3572) * C32615 + (C3573 + C3574) * C114) * C32908 +
            ((C3570 + C3569) * C32615 + (C3568 + C3567) * C114) * C2782 +
            ((C3566 + C3565) * C32615 + (C3564 + C3563) * C114) * C2781 +
            ((C3562 + C3561) * C32615 + (C3560 + C3559) * C114) * C2780) *
               C32592 * C479) *
              C482)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C3524 * C115 + C32874 * C122 + C3525 * C361 + C32719 * C376) *
                 C5477 +
             (C3524 * C123 + C32874 * C136 + C3525 * C375 + C32719 * C391) *
                 C5471 +
             (C4576 + C4577) * C5478 + (C4578 + C4579) * C5472 + C8619 * C5479 +
             C8620 * C32904) *
                C32854 +
            ((C3559 + C3560) * C5477 + (C3561 + C3562) * C5471 + C4932 * C5478 +
             C4933 * C5472 + C8621 * C5479 + C8622 * C32904) *
                C32543) *
               C32592 * C479 -
           (((C8639 + C8640) * C32904 + (C8641 + C8642) * C5479 +
             C8987 * C5472 + C8988 * C5478 + C4936 * C5471 + C4937 * C5477) *
                C32543 +
            ((C8643 + C8644) * C32904 + (C8645 + C8646) * C5479 +
             (C4588 + C4589) * C5472 + (C4590 + C4591) * C5478 +
             (C4579 + C4578) * C5471 + (C4577 + C4576) * C5477) *
                C32854) *
               C32592 * C480) *
              C481 +
          (((C4932 * C5477 + C4933 * C5471 + C8621 * C5478 + C8622 * C5472 +
             (C8642 + C8641) * C5479 + (C8640 + C8639) * C32904) *
                C32854 +
            (C4391 * C5477 + C4392 * C5471 + (C4583 + C4582) * C5478 +
             (C4581 + C4580) * C5472 +
             (C3524 * C1011 + C32874 * C1018 + C3525 * C1707 + C32719 * C1712) *
                 C5479 +
             (C3524 * C1017 + C32874 * C1029 + C3525 * C1713 + C32719 * C1716) *
                 C32904) *
                C32543) *
               C32592 * C480 -
           (((C4580 + C4581) * C32904 + (C4582 + C4583) * C5479 +
             C4934 * C5472 + C4935 * C5478 + (C3566 + C3565) * C5471 +
             (C3564 + C3563) * C5477) *
                C32543 +
            (C8987 * C32904 + C8988 * C5479 + C4936 * C5472 + C4937 * C5478 +
             (C3562 + C3561) * C5471 + (C3560 + C3559) * C5477) *
                C32854) *
               C32592 * C479) *
              C482)) /
            (p * q * std::sqrt(p + q));
    d2ee[116] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C3524 * C115 + C32874 * C122 + C3525 * C361 + C32719 * C376) *
                 C114 +
             (C3524 * C123 + C32874 * C136 + C3525 * C375 + C32719 * C391) *
                 C32615) *
                C2780 +
            ((C3559 + C3560) * C114 + (C3561 + C3562) * C32615) * C2781 +
            C3583 * C2782 + C3584 * C32908) *
               C601 -
           (((C4101 + C4102) * C32615 + (C4103 + C4104) * C114) * C32908 +
            ((C4105 + C4106) * C32615 + (C4107 + C4108) * C114) * C2782 +
            ((C4109 + C4110) * C32615 + (C4111 + C4112) * C114) * C2781 +
            ((C3525 * C378 + C32719 * C392 + C3524 * C375 + C32874 * C391) *
                 C32615 +
             (C3525 * C362 + C32719 * C377 + C3524 * C361 + C32874 * C376) *
                 C114) *
                C2780) *
               C602) *
              C479 +
          ((((C3524 * C721 + C32874 * C726 + C3525 * C1178 + C32719 * C1190) *
                 C114 +
             (C3524 * C727 + C32874 * C736 + C3525 * C1191 + C32719 * C1205) *
                 C32615) *
                C2780 +
            ((C3524 * C722 + C32874 * C728 + C3525 * C1180 + C32719 * C1194) *
                 C114 +
             (C3524 * C729 + C32874 * C737 + C3525 * C1195 + C32719 * C1207) *
                 C32615) *
                C2781 +
            ((C3524 * C723 + C32874 * C730 + C3525 * C1182 + C32719 * C1198) *
                 C114 +
             (C3524 * C731 + C32874 * C738 + C3525 * C1199 + C32719 * C1209) *
                 C32615) *
                C2782 +
            ((C3524 * C724 + C32874 * C732 + C3525 * C2296 + C32719 * C2297) *
                 C114 +
             (C3524 * C733 + C32874 * C739 + C3525 * C2298 + C32719 * C2299) *
                 C32615) *
                C32908) *
               C602 -
           (((C3935 + C3936) * C32615 + (C3937 + C3938) * C114) * C32908 +
            ((C3939 + C3940) * C32615 + (C3941 + C3942) * C114) * C2782 +
            ((C3943 + C3944) * C32615 + (C3945 + C3946) * C114) * C2781 +
            ((C3525 * C727 + C32719 * C736 + C3524 * C270 + C32874 * C286) *
                 C32615 +
             (C3525 * C721 + C32719 * C726 + C3524 * C256 + C32874 * C271) *
                 C114) *
                C2780) *
               C601) *
              C480) *
         C32566) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C3524 * C115 + C32874 * C122 + C3525 * C361 + C32719 * C376) *
                 C5477 +
             (C3524 * C123 + C32874 * C136 + C3525 * C375 + C32719 * C391) *
                 C5471 +
             (C4576 + C4577) * C5478 + (C4578 + C4579) * C5472 + C8619 * C5479 +
             C8620 * C32904) *
                C32854 +
            ((C3559 + C3560) * C5477 + (C3561 + C3562) * C5471 + C4932 * C5478 +
             C4933 * C5472 + C8621 * C5479 + C8622 * C32904) *
                C32543) *
               C601 -
           (((C9191 + C9192) * C32904 + (C9193 + C9194) * C5479 +
             (C5152 + C5153) * C5472 + (C5154 + C5155) * C5478 +
             (C4109 + C4110) * C5471 + (C4111 + C4112) * C5477) *
                C32543 +
            ((C9397 + C9398) * C32904 + (C9399 + C9400) * C5479 +
             (C5358 + C5359) * C5472 + (C5360 + C5361) * C5478 +
             (C3525 * C378 + C32719 * C392 + C3524 * C375 + C32874 * C391) *
                 C5471 +
             (C3525 * C362 + C32719 * C377 + C3524 * C361 + C32874 * C376) *
                 C5477) *
                C32854) *
               C602) *
              C479 +
          ((((C5361 + C5360) * C5477 + (C5359 + C5358) * C5471 +
             (C9400 + C9399) * C5478 + (C9398 + C9397) * C5472 +
             (C3524 * C1705 + C32874 * C1708 + C3525 * C6403 + C32719 * C6407) *
                 C5479 +
             (C3524 * C1709 + C32874 * C1714 + C3525 * C6408 + C32719 * C6412) *
                 C32904) *
                C32854 +
            ((C5155 + C5154) * C5477 + (C5153 + C5152) * C5471 +
             (C9194 + C9193) * C5478 + (C9192 + C9191) * C5472 +
             (C3524 * C1706 + C32874 * C1710 + C3525 * C7236 + C32719 * C7237) *
                 C5479 +
             (C3524 * C1711 + C32874 * C1715 + C3525 * C7238 + C32719 * C7239) *
                 C32904) *
                C32543) *
               C602 -
           (((C8639 + C8640) * C32904 + (C8641 + C8642) * C5479 +
             C8987 * C5472 + C8988 * C5478 + C4936 * C5471 + C4937 * C5477) *
                C32543 +
            ((C8643 + C8644) * C32904 + (C8645 + C8646) * C5479 +
             (C4588 + C4589) * C5472 + (C4590 + C4591) * C5478 +
             (C4579 + C4578) * C5471 + (C4577 + C4576) * C5477) *
                C32854) *
               C601) *
              C480) *
         C32566) /
            (p * q * std::sqrt(p + q));
    d2ee[117] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C3524 * C115 + C32874 * C122 + C3525 * C361 + C32719 * C376) *
                C114 +
            (C3524 * C123 + C32874 * C136 + C3525 * C375 + C32719 * C391) *
                C32615) *
               C2780 +
           ((C3559 + C3560) * C114 + (C3561 + C3562) * C32615) * C2781 +
           C3583 * C2782 + C3584 * C32908) *
              C32592 * C248 -
          (((C3525 * C733 + C32719 * C739 + C3524 * C264 + C32874 * C283) *
                C32615 +
            (C3525 * C724 + C32719 * C732 + C3524 * C253 + C32874 * C265) *
                C114) *
               C32908 +
           ((C3525 * C731 + C32719 * C738 + C3524 * C266 + C32874 * C284) *
                C32615 +
            (C3525 * C723 + C32719 * C730 + C3524 * C254 + C32874 * C267) *
                C114) *
               C2782 +
           ((C3525 * C729 + C32719 * C737 + C3524 * C268 + C32874 * C285) *
                C32615 +
            (C3525 * C722 + C32719 * C728 + C3524 * C255 + C32874 * C269) *
                C114) *
               C2781 +
           ((C3525 * C727 + C32719 * C736 + C3524 * C270 + C32874 * C286) *
                C32615 +
            (C3525 * C721 + C32719 * C726 + C3524 * C256 + C32874 * C271) *
                C114) *
               C2780) *
              C32592 * C249 +
          (((C3524 * C257 + C32874 * C272 + C3525 * C1177 + C32719 * C1189) *
                C114 +
            (C3524 * C273 + C32874 * C287 + C3525 * C1188 + C32719 * C1204) *
                C32615) *
               C2780 +
           ((C3524 * C258 + C32874 * C274 + C3525 * C1176 + C32719 * C1187) *
                C114 +
            (C3524 * C275 + C32874 * C288 + C3525 * C1186 + C32719 * C1203) *
                C32615) *
               C2781 +
           ((C3524 * C259 + C32874 * C276 + C3525 * C1175 + C32719 * C1185) *
                C114 +
            (C3524 * C277 + C32874 * C289 + C3525 * C1184 + C32719 * C1202) *
                C32615) *
               C2782 +
           ((C3524 * C260 + C32874 * C278 + C3525 * C1519 + C32719 * C1520) *
                C114 +
            (C3524 * C279 + C32874 * C290 + C3525 * C1521 + C32719 * C1522) *
                C32615) *
               C32908) *
              C32592 * C250) *
         C32566) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C3524 * C115 + C32874 * C122 + C3525 * C361 + C32719 * C376) *
                C114 +
            (C3524 * C123 + C32874 * C136 + C3525 * C375 + C32719 * C391) *
                C32615) *
               C2780 +
           ((C3559 + C3560) * C114 + (C3561 + C3562) * C32615) * C2781 +
           C3583 * C2782 + C3584 * C32908) *
              C32592 * C32578 * C110 -
          (((C3571 + C3572) * C32615 + (C3573 + C3574) * C114) * C32908 +
           ((C3570 + C3569) * C32615 + (C3568 + C3567) * C114) * C2782 +
           ((C3566 + C3565) * C32615 + (C3564 + C3563) * C114) * C2781 +
           ((C3562 + C3561) * C32615 + (C3560 + C3559) * C114) * C2780) *
              C32592 * C32578 * C111 +
          (C3583 * C2780 + C3584 * C2781 +
           ((C3574 + C3573) * C114 + (C3572 + C3571) * C32615) * C2782 +
           ((C3524 * C120 + C32874 * C133 + C3525 * C603 + C32719 * C604) *
                C114 +
            (C3524 * C132 + C32874 * C141 + C3525 * C605 + C32719 * C606) *
                C32615) *
               C32908) *
              C32592 * C32578 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C3524 * C115 + C32874 * C122 + C3525 * C361 + C32719 * C376) *
                C114 +
            (C3524 * C123 + C32874 * C136 + C3525 * C375 + C32719 * C391) *
                C32615) *
               C2780 +
           ((C3559 + C3560) * C114 + (C3561 + C3562) * C32615) * C2781 +
           C3583 * C2782 + C3584 * C32908) *
              C354 -
          (((C3525 * C384 + C32719 * C395 + C3524 * C369 + C32874 * C388) *
                C32615 +
            (C3525 * C365 + C32719 * C383 + C3524 * C358 + C32874 * C370) *
                C114) *
               C32908 +
           ((C3525 * C382 + C32719 * C394 + C3524 * C371 + C32874 * C389) *
                C32615 +
            (C3525 * C364 + C32719 * C381 + C3524 * C359 + C32874 * C372) *
                C114) *
               C2782 +
           ((C3525 * C380 + C32719 * C393 + C3524 * C373 + C32874 * C390) *
                C32615 +
            (C3525 * C363 + C32719 * C379 + C3524 * C360 + C32874 * C374) *
                C114) *
               C2781 +
           ((C3525 * C378 + C32719 * C392 + C3524 * C375 + C32874 * C391) *
                C32615 +
            (C3525 * C362 + C32719 * C377 + C3524 * C361 + C32874 * C376) *
                C114) *
               C2780) *
              C355 +
          (((C3524 * C362 + C32874 * C377 + C3525 * C2128 + C32719 * C2137) *
                C114 +
            (C3524 * C378 + C32874 * C392 + C3525 * C2136 + C32719 * C2146) *
                C32615) *
               C2780 +
           ((C3524 * C363 + C32874 * C379 + C3525 * C2127 + C32719 * C2135) *
                C114 +
            (C3524 * C380 + C32874 * C393 + C3525 * C2134 + C32719 * C2145) *
                C32615) *
               C2781 +
           ((C3524 * C364 + C32874 * C381 + C3525 * C2126 + C32719 * C2133) *
                C114 +
            (C3524 * C382 + C32874 * C394 + C3525 * C2132 + C32719 * C2144) *
                C32615) *
               C2782 +
           ((C3524 * C365 + C32874 * C383 + C3525 * C2482 + C32719 * C2483) *
                C114 +
            (C3524 * C384 + C32874 * C395 + C3525 * C2484 + C32719 * C2485) *
                C32615) *
               C32908) *
              C356) *
         C32578 * C32566) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C3524 * C115 + C32874 * C122 + C3525 * C361 + C32719 * C376) *
                C5477 +
            (C3524 * C123 + C32874 * C136 + C3525 * C375 + C32719 * C391) *
                C5471 +
            (C4576 + C4577) * C5478 + (C4578 + C4579) * C5472 +
            (C4591 + C4590) * C5479 + (C4589 + C4588) * C32904) *
               C32854 +
           ((C3559 + C3560) * C5477 + (C3561 + C3562) * C5471 + C4932 * C5478 +
            C4933 * C5472 + (C4587 + C4586) * C5479 +
            (C4585 + C4584) * C32904) *
               C32543) *
              C32592 * C32578 * C110 -
          (((C4580 + C4581) * C32904 + (C4582 + C4583) * C5479 + C4934 * C5472 +
            C4935 * C5478 + (C3566 + C3565) * C5471 + (C3564 + C3563) * C5477) *
               C32543 +
           ((C4584 + C4585) * C32904 + (C4586 + C4587) * C5479 + C4936 * C5472 +
            C4937 * C5478 + (C3562 + C3561) * C5471 + (C3560 + C3559) * C5477) *
               C32854) *
              C32592 * C32578 * C111 +
          ((C3575 * C5477 + C3576 * C5471 + C4391 * C5478 + C4392 * C5472 +
            (C4583 + C4582) * C5479 + (C4581 + C4580) * C32904) *
               C32854 +
           (C3577 * C5477 + C3578 * C5471 + (C3938 + C3937) * C5478 +
            (C3936 + C3935) * C5472 +
            (C3524 * C260 + C32874 * C278 + C3525 * C1519 + C32719 * C1520) *
                C5479 +
            (C3524 * C279 + C32874 * C290 + C3525 * C1521 + C32719 * C1522) *
                C32904) *
               C32543) *
              C32592 * C32578 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C3524 * C115 + C32874 * C122 + C3525 * C361 + C32719 * C376) *
                C5477 +
            (C3524 * C123 + C32874 * C136 + C3525 * C375 + C32719 * C391) *
                C5471 +
            (C4576 + C4577) * C5478 + (C4578 + C4579) * C5472 + C8619 * C5479 +
            C8620 * C32904) *
               C32854 +
           ((C3559 + C3560) * C5477 + (C3561 + C3562) * C5471 + C4932 * C5478 +
            C4933 * C5472 + C8621 * C5479 + C8622 * C32904) *
               C32543) *
              C32592 * C248 -
          (((C8639 + C8640) * C32904 + (C8641 + C8642) * C5479 +
            (C4584 + C4585) * C5472 + (C4586 + C4587) * C5478 + C4936 * C5471 +
            C4937 * C5477) *
               C32543 +
           ((C8643 + C8644) * C32904 + (C8645 + C8646) * C5479 +
            (C4588 + C4589) * C5472 + (C4590 + C4591) * C5478 +
            (C4579 + C4578) * C5471 + (C4577 + C4576) * C5477) *
               C32854) *
              C32592 * C249 +
          ((C8619 * C5477 + C8620 * C5471 + (C8646 + C8645) * C5478 +
            (C8644 + C8643) * C5472 +
            (C3524 * C1014 + C32874 * C1023 + C3525 * C6402 + C32719 * C6406) *
                C5479 +
            (C3524 * C1024 + C32874 * C1032 + C3525 * C6405 + C32719 * C6411) *
                C32904) *
               C32854 +
           (C8621 * C5477 + C8622 * C5471 + (C8642 + C8641) * C5478 +
            (C8640 + C8639) * C5472 +
            (C3524 * C1015 + C32874 * C1025 + C3525 * C6588 + C32719 * C6589) *
                C5479 +
            (C3524 * C1026 + C32874 * C1033 + C3525 * C6590 + C32719 * C6591) *
                C32904) *
               C32543) *
              C32592 * C250) *
         C32566) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C3524 * C115 + C32874 * C122 + C3525 * C361 + C32719 * C376) *
                C5477 +
            (C3524 * C123 + C32874 * C136 + C3525 * C375 + C32719 * C391) *
                C5471 +
            (C4576 + C4577) * C5478 + (C4578 + C4579) * C5472 + C8619 * C5479 +
            C8620 * C32904) *
               C32854 +
           ((C3559 + C3560) * C5477 + (C3561 + C3562) * C5471 + C4932 * C5478 +
            C4933 * C5472 + C8621 * C5479 + C8622 * C32904) *
               C32543) *
              C354 -
          (((C3525 * C1197 + C32719 * C1208 + C3524 * C1186 + C32874 * C1203) *
                C32904 +
            (C3525 * C1181 + C32719 * C1196 + C3524 * C1176 + C32874 * C1187) *
                C5479 +
            (C5152 + C5153) * C5472 + (C5154 + C5155) * C5478 +
            (C4109 + C4110) * C5471 + (C4111 + C4112) * C5477) *
               C32543 +
           ((C3525 * C1193 + C32719 * C1206 + C3524 * C1188 + C32874 * C1204) *
                C32904 +
            (C3525 * C1179 + C32719 * C1192 + C3524 * C1177 + C32874 * C1189) *
                C5479 +
            (C5358 + C5359) * C5472 + (C5360 + C5361) * C5478 +
            (C3525 * C378 + C32719 * C392 + C3524 * C375 + C32874 * C391) *
                C5471 +
            (C3525 * C362 + C32719 * C377 + C3524 * C361 + C32874 * C376) *
                C5477) *
               C32854) *
              C355 +
          (((C3524 * C362 + C32874 * C377 + C3525 * C2128 + C32719 * C2137) *
                C5477 +
            (C3524 * C378 + C32874 * C392 + C3525 * C2136 + C32719 * C2146) *
                C5471 +
            (C3524 * C1178 + C32874 * C1190 + C3525 * C2668 + C32719 * C2671) *
                C5478 +
            (C3524 * C1191 + C32874 * C1205 + C3525 * C2672 + C32719 * C2677) *
                C5472 +
            (C3524 * C1179 + C32874 * C1192 + C3525 * C7078 + C32719 * C7082) *
                C5479 +
            (C3524 * C1193 + C32874 * C1206 + C3525 * C7081 + C32719 * C7087) *
                C32904) *
               C32854 +
           ((C3524 * C363 + C32874 * C379 + C3525 * C2127 + C32719 * C2135) *
                C5477 +
            (C3524 * C380 + C32874 * C393 + C3525 * C2134 + C32719 * C2145) *
                C5471 +
            (C3524 * C1180 + C32874 * C1194 + C3525 * C2669 + C32719 * C2673) *
                C5478 +
            (C3524 * C1195 + C32874 * C1207 + C3525 * C2674 + C32719 * C2678) *
                C5472 +
            (C3524 * C1181 + C32874 * C1196 + C3525 * C7404 + C32719 * C7405) *
                C5479 +
            (C3524 * C1197 + C32874 * C1208 + C3525 * C7406 + C32719 * C7407) *
                C32904) *
               C32543) *
              C356) *
         C32578 * C32566) /
            (p * q * std::sqrt(p + q));
    d2ee[118] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C3524 * C115 + C32874 * C122 + C3525 * C361 + C32719 * C376) *
                 C114 +
             (C3524 * C123 + C32874 * C136 + C3525 * C375 + C32719 * C391) *
                 C32615) *
                C2780 +
            ((C3559 + C3560) * C114 + (C3561 + C3562) * C32615) * C2781 +
            C3583 * C2782 + C3584 * C32908) *
               C601 -
           (((C4101 + C4102) * C32615 + (C4103 + C4104) * C114) * C32908 +
            ((C4105 + C4106) * C32615 + (C4107 + C4108) * C114) * C2782 +
            ((C4109 + C4110) * C32615 + (C4111 + C4112) * C114) * C2781 +
            ((C3525 * C378 + C32719 * C392 + C3524 * C375 + C32874 * C391) *
                 C32615 +
             (C3525 * C362 + C32719 * C377 + C3524 * C361 + C32874 * C376) *
                 C114) *
                C2780) *
               C602) *
              C32578 * C481 +
          ((((C4112 + C4111) * C114 + (C4110 + C4109) * C32615) * C2780 +
            ((C4108 + C4107) * C114 + (C4106 + C4105) * C32615) * C2781 +
            ((C4104 + C4103) * C114 + (C4102 + C4101) * C32615) * C2782 +
            ((C3524 * C357 + C32874 * C368 + C3525 * C366 + C32719 * C385) *
                 C114 +
             (C3524 * C367 + C32874 * C387 + C3525 * C386 + C32719 * C396) *
                 C32615) *
                C32908) *
               C602 -
           (((C3571 + C3572) * C32615 + (C3573 + C3574) * C114) * C32908 +
            ((C3570 + C3569) * C32615 + (C3568 + C3567) * C114) * C2782 +
            ((C3566 + C3565) * C32615 + (C3564 + C3563) * C114) * C2781 +
            ((C3562 + C3561) * C32615 + (C3560 + C3559) * C114) * C2780) *
               C601) *
              C32578 * C482)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C3524 * C115 + C32874 * C122 + C3525 * C361 + C32719 * C376) *
                 C5477 +
             (C3524 * C123 + C32874 * C136 + C3525 * C375 + C32719 * C391) *
                 C5471 +
             (C4576 + C4577) * C5478 + (C4578 + C4579) * C5472 + C8619 * C5479 +
             C8620 * C32904) *
                C32854 +
            ((C3559 + C3560) * C5477 + (C3561 + C3562) * C5471 + C4932 * C5478 +
             C4933 * C5472 + C8621 * C5479 + C8622 * C32904) *
                C32543) *
               C601 -
           (((C9191 + C9192) * C32904 + (C9193 + C9194) * C5479 +
             (C5152 + C5153) * C5472 + (C5154 + C5155) * C5478 +
             (C4109 + C4110) * C5471 + (C4111 + C4112) * C5477) *
                C32543 +
            ((C3525 * C1193 + C32719 * C1206 + C3524 * C1188 + C32874 * C1204) *
                 C32904 +
             (C3525 * C1179 + C32719 * C1192 + C3524 * C1177 + C32874 * C1189) *
                 C5479 +
             (C5358 + C5359) * C5472 + (C5360 + C5361) * C5478 +
             (C3525 * C378 + C32719 * C392 + C3524 * C375 + C32874 * C391) *
                 C5471 +
             (C3525 * C362 + C32719 * C377 + C3524 * C361 + C32874 * C376) *
                 C5477) *
                C32854) *
               C602) *
              C32578 * C481 +
          ((((C4112 + C4111) * C5477 + (C4110 + C4109) * C5471 +
             (C5155 + C5154) * C5478 + (C5153 + C5152) * C5472 +
             (C9194 + C9193) * C5479 + (C9192 + C9191) * C32904) *
                C32854 +
            ((C4108 + C4107) * C5477 + (C4106 + C4105) * C5471 +
             (C5151 + C5150) * C5478 + (C5149 + C5148) * C5472 +
             (C3524 * C1175 + C32874 * C1185 + C3525 * C1183 + C32719 * C1200) *
                 C5479 +
             (C3524 * C1184 + C32874 * C1202 + C3525 * C1201 + C32719 * C1210) *
                 C32904) *
                C32543) *
               C602 -
           (((C4580 + C4581) * C32904 + (C4582 + C4583) * C5479 +
             C4934 * C5472 + C4935 * C5478 + (C3566 + C3565) * C5471 +
             (C3564 + C3563) * C5477) *
                C32543 +
            (C8987 * C32904 + C8988 * C5479 + C4936 * C5472 + C4937 * C5478 +
             (C3562 + C3561) * C5471 + (C3560 + C3559) * C5477) *
                C32854) *
               C601) *
              C32578 * C482)) /
            (p * q * std::sqrt(p + q));
    d2ee[119] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C3524 * C115 + C32874 * C122 + C3525 * C361 + C32719 * C376) *
                C114 +
            (C3524 * C123 + C32874 * C136 + C3525 * C375 + C32719 * C391) *
                C32615) *
               C2780 +
           ((C3559 + C3560) * C114 + (C3561 + C3562) * C32615) * C2781 +
           C3583 * C2782 + C3584 * C32908) *
              C32592 * C32578 * C110 -
          (((C3571 + C3572) * C32615 + (C3573 + C3574) * C114) * C32908 +
           ((C3570 + C3569) * C32615 + (C3568 + C3567) * C114) * C2782 +
           ((C3566 + C3565) * C32615 + (C3564 + C3563) * C114) * C2781 +
           ((C3562 + C3561) * C32615 + (C3560 + C3559) * C114) * C2780) *
              C32592 * C32578 * C111 +
          (C3583 * C2780 + C3584 * C2781 +
           ((C3574 + C3573) * C114 + (C3572 + C3571) * C32615) * C2782 +
           ((C3524 * C120 + C32874 * C133 + C3525 * C603 + C32719 * C604) *
                C114 +
            (C3524 * C132 + C32874 * C141 + C3525 * C605 + C32719 * C606) *
                C32615) *
               C32908) *
              C32592 * C32578 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C3524 * C115 + C32874 * C122 + C3525 * C361 + C32719 * C376) *
                C114 +
            (C3524 * C123 + C32874 * C136 + C3525 * C375 + C32719 * C391) *
                C32615) *
               C2780 +
           ((C3559 + C3560) * C114 + (C3561 + C3562) * C32615) * C2781 +
           C3583 * C2782 + C3584 * C32908) *
              C32592 * C248 -
          (((C3525 * C733 + C32719 * C739 + C3524 * C264 + C32874 * C283) *
                C32615 +
            (C3525 * C724 + C32719 * C732 + C3524 * C253 + C32874 * C265) *
                C114) *
               C32908 +
           ((C3525 * C731 + C32719 * C738 + C3524 * C266 + C32874 * C284) *
                C32615 +
            (C3525 * C723 + C32719 * C730 + C3524 * C254 + C32874 * C267) *
                C114) *
               C2782 +
           ((C3525 * C729 + C32719 * C737 + C3524 * C268 + C32874 * C285) *
                C32615 +
            (C3525 * C722 + C32719 * C728 + C3524 * C255 + C32874 * C269) *
                C114) *
               C2781 +
           ((C3525 * C727 + C32719 * C736 + C3524 * C270 + C32874 * C286) *
                C32615 +
            (C3525 * C721 + C32719 * C726 + C3524 * C256 + C32874 * C271) *
                C114) *
               C2780) *
              C32592 * C249 +
          (((C3524 * C257 + C32874 * C272 + C3525 * C1177 + C32719 * C1189) *
                C114 +
            (C3524 * C273 + C32874 * C287 + C3525 * C1188 + C32719 * C1204) *
                C32615) *
               C2780 +
           ((C3524 * C258 + C32874 * C274 + C3525 * C1176 + C32719 * C1187) *
                C114 +
            (C3524 * C275 + C32874 * C288 + C3525 * C1186 + C32719 * C1203) *
                C32615) *
               C2781 +
           ((C3524 * C259 + C32874 * C276 + C3525 * C1175 + C32719 * C1185) *
                C114 +
            (C3524 * C277 + C32874 * C289 + C3525 * C1184 + C32719 * C1202) *
                C32615) *
               C2782 +
           ((C3524 * C260 + C32874 * C278 + C3525 * C1519 + C32719 * C1520) *
                C114 +
            (C3524 * C279 + C32874 * C290 + C3525 * C1521 + C32719 * C1522) *
                C32615) *
               C32908) *
              C32592 * C250) *
         C32566) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C3524 * C115 + C32874 * C122 + C3525 * C361 + C32719 * C376) *
                C5477 +
            (C3524 * C123 + C32874 * C136 + C3525 * C375 + C32719 * C391) *
                C5471 +
            (C4576 + C4577) * C5478 + (C4578 + C4579) * C5472 +
            (C4591 + C4590) * C5479 + (C4589 + C4588) * C32904) *
               C32854 +
           ((C3559 + C3560) * C5477 + (C3561 + C3562) * C5471 + C4932 * C5478 +
            C4933 * C5472 + (C4587 + C4586) * C5479 +
            (C4585 + C4584) * C32904) *
               C32543) *
              C32592 * C32578 * C110 -
          (((C4580 + C4581) * C32904 + (C4582 + C4583) * C5479 + C4934 * C5472 +
            C4935 * C5478 + (C3566 + C3565) * C5471 + (C3564 + C3563) * C5477) *
               C32543 +
           ((C4584 + C4585) * C32904 + (C4586 + C4587) * C5479 + C4936 * C5472 +
            C4937 * C5478 + (C3562 + C3561) * C5471 + (C3560 + C3559) * C5477) *
               C32854) *
              C32592 * C32578 * C111 +
          ((C3575 * C5477 + C3576 * C5471 + C4391 * C5478 + C4392 * C5472 +
            (C4583 + C4582) * C5479 + (C4581 + C4580) * C32904) *
               C32854 +
           (C3577 * C5477 + C3578 * C5471 + (C3938 + C3937) * C5478 +
            (C3936 + C3935) * C5472 +
            (C3524 * C260 + C32874 * C278 + C3525 * C1519 + C32719 * C1520) *
                C5479 +
            (C3524 * C279 + C32874 * C290 + C3525 * C1521 + C32719 * C1522) *
                C32904) *
               C32543) *
              C32592 * C32578 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C3524 * C115 + C32874 * C122 + C3525 * C361 + C32719 * C376) *
                C5477 +
            (C3524 * C123 + C32874 * C136 + C3525 * C375 + C32719 * C391) *
                C5471 +
            (C4576 + C4577) * C5478 + (C4578 + C4579) * C5472 + C8619 * C5479 +
            C8620 * C32904) *
               C32854 +
           ((C3559 + C3560) * C5477 + (C3561 + C3562) * C5471 + C4932 * C5478 +
            C4933 * C5472 + C8621 * C5479 + C8622 * C32904) *
               C32543) *
              C32592 * C248 -
          (((C8639 + C8640) * C32904 + (C8641 + C8642) * C5479 +
            (C4584 + C4585) * C5472 + (C4586 + C4587) * C5478 + C4936 * C5471 +
            C4937 * C5477) *
               C32543 +
           ((C8643 + C8644) * C32904 + (C8645 + C8646) * C5479 +
            (C4588 + C4589) * C5472 + (C4590 + C4591) * C5478 +
            (C4579 + C4578) * C5471 + (C4577 + C4576) * C5477) *
               C32854) *
              C32592 * C249 +
          ((C8619 * C5477 + C8620 * C5471 + (C8646 + C8645) * C5478 +
            (C8644 + C8643) * C5472 +
            (C3524 * C1014 + C32874 * C1023 + C3525 * C6402 + C32719 * C6406) *
                C5479 +
            (C3524 * C1024 + C32874 * C1032 + C3525 * C6405 + C32719 * C6411) *
                C32904) *
               C32854 +
           (C8621 * C5477 + C8622 * C5471 + (C8642 + C8641) * C5478 +
            (C8640 + C8639) * C5472 +
            (C3524 * C1015 + C32874 * C1025 + C3525 * C6588 + C32719 * C6589) *
                C5479 +
            (C3524 * C1026 + C32874 * C1033 + C3525 * C6590 + C32719 * C6591) *
                C32904) *
               C32543) *
              C32592 * C250) *
         C32566) /
            (p * q * std::sqrt(p + q));
    d2ee[120] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C32632 * C122) * C114 +
             (C113 * C123 + C32632 * C136) * C32615) *
                C103 +
            (C174 + C175) * C104 + C184 * C105 + C185 * C106 + C186 * C107) *
               C32592 * C479 -
           ((C512 + C513) * C107 + (C514 + C515) * C106 + (C516 + C517) * C105 +
            (C518 + C519) * C104 +
            ((C113 * C270 + C32632 * C286) * C32615 +
             (C113 * C256 + C32632 * C271) * C114) *
                C103) *
               C32592 * C480) *
              C481 +
          (((C519 + C518) * C103 + (C517 + C516) * C104 + (C515 + C514) * C105 +
            (C513 + C512) * C106 +
            ((C113 * C483 + C32632 * C484) * C114 +
             (C113 * C485 + C32632 * C486) * C32615) *
                C107) *
               C32592 * C480 -
           ((C182 + C183) * C107 + (C181 + C180) * C106 + (C179 + C178) * C105 +
            (C177 + C176) * C104 + (C175 + C174) * C103) *
               C32592 * C479) *
              C482)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C32632 * C122) * C857 +
             (C113 * C123 + C32632 * C136) * C32939 + C1056 * C858 +
             C1057 * C32927 + C1058 * C859 + C1059 * C32904) *
                C854 +
            (C861 + C862 + C863 + C864 + C892 + C893) * C855 + C901 * C32893) *
               C32592 * C479 -
           ((C1362 + C1363 + C1364 + C1365 + C1366 + C1367) * C32893 +
            (C1368 + C1369 + C1370 + C1371 + C1372 + C1373) * C855 +
            (C1064 * C32904 + C1065 * C859 + C1059 * C32927 + C1058 * C858 +
             C1057 * C32939 + C1056 * C857) *
                C854) *
               C32592 * C480) *
              C481 +
          (((C1373 + C1372 + C1371 + C1370 + C1369 + C1368) * C854 +
            (C1367 + C1366 + C1365 + C1364 + C1363 + C1362) * C855 +
            (C507 * C857 + C506 * C32939 + C891 * C858 + C890 * C32927 +
             (C113 * C1357 + C32632 * C1358) * C859 +
             (C113 * C1359 + C32632 * C1360) * C32904) *
                C32893) *
               C32592 * C480 -
           ((C897 + C898 + C881 + C882 + C883 + C884) * C32893 +
            (C896 + C895 + C872 + C871 + C870 + C869) * C855 +
            (C893 + C892 + C864 + C863 + C862 + C861) * C854) *
               C32592 * C479) *
              C482)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C32632 * C122) * C5477 +
             (C113 * C123 + C32632 * C136) * C5471 + C1056 * C5478 +
             C1057 * C5472 + C1058 * C5479 + C1059 * C32904) *
                C32936 +
            (C5481 + C5482 + C5483 + C5484 + C5485 + C5486) * C32923 +
            C5503 * C32893) *
               C32592 * C479 -
           ((C5870 + C5871 + C5872 + C5873 + C5874 + C5875) * C32893 +
            (C5876 + C5877 + C5878 + C5879 + C5880 + C5881) * C32923 +
            (C1064 * C32904 + C1065 * C5479 + C1059 * C5472 + C1058 * C5478 +
             C1057 * C5471 + C1056 * C5477) *
                C32936) *
               C32592 * C480) *
              C481 +
          (((C5881 + C5880 + C5879 + C5878 + C5877 + C5876) * C32936 +
            (C5875 + C5874 + C5873 + C5872 + C5871 + C5870) * C32923 +
            (C507 * C5477 + C506 * C5471 + C891 * C5478 + C890 * C5472 +
             (C113 * C1357 + C32632 * C1358) * C5479 +
             (C113 * C1359 + C32632 * C1360) * C32904) *
                C32893) *
               C32592 * C480 -
           ((C5493 + C5494 + C5495 + C5496 + C5497 + C5498) * C32893 +
            (C5492 + C5491 + C5490 + C5489 + C5488 + C5487) * C32923 +
            (C5486 + C5485 + C5484 + C5483 + C5482 + C5481) * C32936) *
               C32592 * C479) *
              C482)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C32632 * C122) * C6253 +
            (C113 * C123 + C32632 * C136) * C6247 + C1056 * C6254 +
            C1057 * C6248 + C1058 * C6255 + C1059 * C6249 + C1065 * C6256 +
            C1064 * C6250 + C6337 * C6257 + C6338 * C6251) *
               C32533 * C32592 * C479 -
           (C6339 * C6251 + C6340 * C6257 + C6338 * C6250 + C6337 * C6256 +
            C1064 * C6249 + C1065 * C6255 + C1059 * C6248 + C1058 * C6254 +
            C1057 * C6247 + C1056 * C6253) *
               C32533 * C32592 * C480) *
              C481 +
          ((C511 * C6253 + C510 * C6247 + C885 * C6254 + C886 * C6248 +
            C1063 * C6255 + C1062 * C6249 + C6505 * C6256 + C6506 * C6250 +
            (C113 * C6496 + C32632 * C6497) * C6257 +
            (C113 * C6498 + C32632 * C6499) * C6251) *
               C32533 * C32592 * C480 -
           (C6506 * C6251 + C6505 * C6257 + C1062 * C6250 + C1063 * C6256 +
            C886 * C6249 + C885 * C6255 + C510 * C6248 + C511 * C6254 +
            C165 * C6247 + C164 * C6253) *
               C32533 * C32592 * C479) *
              C482)) /
            (p * q * std::sqrt(p + q));
    d2ee[121] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C32632 * C122) * C114 +
             (C113 * C123 + C32632 * C136) * C32615) *
                C103 +
            (C174 + C175) * C104 + C184 * C105 + C185 * C106 + C186 * C107) *
               C601 -
           ((C632 + C633) * C107 + (C634 + C635) * C106 + (C636 + C637) * C105 +
            (C638 + C639) * C104 +
            ((C113 * C375 + C32632 * C391) * C32615 +
             (C113 * C361 + C32632 * C376) * C114) *
                C103) *
               C602) *
              C479 +
          ((((C113 * C721 + C32632 * C726) * C114 +
             (C113 * C727 + C32632 * C736) * C32615) *
                C103 +
            ((C113 * C722 + C32632 * C728) * C114 +
             (C113 * C729 + C32632 * C737) * C32615) *
                C104 +
            ((C113 * C723 + C32632 * C730) * C114 +
             (C113 * C731 + C32632 * C738) * C32615) *
                C105 +
            ((C113 * C724 + C32632 * C732) * C114 +
             (C113 * C733 + C32632 * C739) * C32615) *
                C106 +
            ((C113 * C725 + C32632 * C734) * C114 +
             (C113 * C735 + C32632 * C740) * C32615) *
                C107) *
               C602 -
           ((C512 + C513) * C107 + (C514 + C515) * C106 + (C516 + C517) * C105 +
            (C518 + C519) * C104 +
            ((C113 * C270 + C32632 * C286) * C32615 +
             (C113 * C256 + C32632 * C271) * C114) *
                C103) *
               C601) *
              C480) *
         C32566) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C32632 * C122) * C857 +
             (C113 * C123 + C32632 * C136) * C32939 + C1056 * C858 +
             C1057 * C32927 + C1058 * C859 + C1059 * C32904) *
                C854 +
            (C861 + C862 + C863 + C864 + C892 + C893) * C855 + C901 * C32893) *
               C601 -
           ((C1552 + C1553 + C1554 + C1555 + C1532 + C1533) * C32893 +
            (C1556 + C1557 + C1558 + C1559 + C1542 + C1543) * C855 +
            (C1726 * C32904 + C1727 * C859 + C1728 * C32927 + C1729 * C858 +
             (C113 * C375 + C32632 * C391) * C32939 +
             (C113 * C361 + C32632 * C376) * C857) *
                C854) *
               C602) *
              C479 +
          (((C1729 * C857 + C1728 * C32939 + C1727 * C858 + C1726 * C32927 +
             (C113 * C1705 + C32632 * C1708) * C859 +
             (C113 * C1709 + C32632 * C1714) * C32904) *
                C854 +
            (C1551 * C857 + C1550 * C32939 + C1549 * C858 + C1548 * C32927 +
             (C113 * C1706 + C32632 * C1710) * C859 +
             (C113 * C1711 + C32632 * C1715) * C32904) *
                C855 +
            (C1547 * C857 + C1546 * C32939 + C1545 * C858 + C1544 * C32927 +
             (C113 * C1707 + C32632 * C1712) * C859 +
             (C113 * C1713 + C32632 * C1716) * C32904) *
                C32893) *
               C602 -
           ((C1362 + C1363 + C1364 + C1365 + C1366 + C1367) * C32893 +
            (C1368 + C1369 + C1370 + C1371 + C1372 + C1373) * C855 +
            (C1064 * C32904 + C1065 * C859 + C1059 * C32927 + C1058 * C858 +
             C1057 * C32939 + C1056 * C857) *
                C854) *
               C601) *
              C480) *
         C32566) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C32632 * C122) * C5477 +
             (C113 * C123 + C32632 * C136) * C5471 + C1056 * C5478 +
             C1057 * C5472 + C1058 * C5479 + C1059 * C32904) *
                C32936 +
            (C5481 + C5482 + C5483 + C5484 + C5485 + C5486) * C32923 +
            C5503 * C32893) *
               C601 -
           ((C6028 + C6029 + C6030 + C6031 + C6032 + C6033) * C32893 +
            (C6034 + C6035 + C6036 + C6037 + C6038 + C6039) * C32923 +
            (C1726 * C32904 + C1727 * C5479 + C1728 * C5472 + C1729 * C5478 +
             (C113 * C375 + C32632 * C391) * C5471 +
             (C113 * C361 + C32632 * C376) * C5477) *
                C32936) *
               C602) *
              C479 +
          (((C1729 * C5477 + C1728 * C5471 + C1727 * C5478 + C1726 * C5472 +
             (C113 * C1705 + C32632 * C1708) * C5479 +
             (C113 * C1709 + C32632 * C1714) * C32904) *
                C32936 +
            (C1551 * C5477 + C1550 * C5471 + C1549 * C5478 + C1548 * C5472 +
             (C113 * C1706 + C32632 * C1710) * C5479 +
             (C113 * C1711 + C32632 * C1715) * C32904) *
                C32923 +
            (C1547 * C5477 + C1546 * C5471 + C1545 * C5478 + C1544 * C5472 +
             (C113 * C1707 + C32632 * C1712) * C5479 +
             (C113 * C1713 + C32632 * C1716) * C32904) *
                C32893) *
               C602 -
           ((C5870 + C5871 + C5872 + C5873 + C5874 + C5875) * C32893 +
            (C5876 + C5877 + C5878 + C5879 + C5880 + C5881) * C32923 +
            (C1064 * C32904 + C1065 * C5479 + C1059 * C5472 + C1058 * C5478 +
             C1057 * C5471 + C1056 * C5477) *
                C32936) *
               C601) *
              C480) *
         C32566) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C32632 * C122) * C6253 +
            (C113 * C123 + C32632 * C136) * C6247 + C1056 * C6254 +
            C1057 * C6248 + C1058 * C6255 + C1059 * C6249 + C1065 * C6256 +
            C1064 * C6250 + C6337 * C6257 + C6338 * C6251) *
               C32533 * C601 -
           (C6687 * C6251 + C6688 * C6257 + C6689 * C6250 + C6690 * C6256 +
            C1726 * C6249 + C1727 * C6255 + C1728 * C6248 + C1729 * C6254 +
            (C113 * C375 + C32632 * C391) * C6247 +
            (C113 * C361 + C32632 * C376) * C6253) *
               C32533 * C602) *
              C479 +
          ((C1729 * C6253 + C1728 * C6247 + C1727 * C6254 + C1726 * C6248 +
            C6690 * C6255 + C6689 * C6249 + C6688 * C6256 + C6687 * C6250 +
            (C113 * C6674 + C32632 * C6675) * C6257 +
            (C113 * C6676 + C32632 * C6677) * C6251) *
               C32533 * C602 -
           (C6339 * C6251 + C6340 * C6257 + C6338 * C6250 + C6337 * C6256 +
            C1064 * C6249 + C1065 * C6255 + C1059 * C6248 + C1058 * C6254 +
            C1057 * C6247 + C1056 * C6253) *
               C32533 * C601) *
              C480) *
         C32566) /
            (p * q * std::sqrt(p + q));
    d2ee[122] +=
        (-std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C32632 * C122) * C114 +
            (C113 * C123 + C32632 * C136) * C32615) *
               C103 +
           (C174 + C175) * C104 + C184 * C105 + C185 * C106 + C186 * C107) *
              C32592 * C248 -
          (((C113 * C262 + C32632 * C282) * C32615 +
            (C113 * C252 + C32632 * C263) * C114) *
               C107 +
           ((C113 * C264 + C32632 * C283) * C32615 +
            (C113 * C253 + C32632 * C265) * C114) *
               C106 +
           ((C113 * C266 + C32632 * C284) * C32615 +
            (C113 * C254 + C32632 * C267) * C114) *
               C105 +
           ((C113 * C268 + C32632 * C285) * C32615 +
            (C113 * C255 + C32632 * C269) * C114) *
               C104 +
           ((C113 * C270 + C32632 * C286) * C32615 +
            (C113 * C256 + C32632 * C271) * C114) *
               C103) *
              C32592 * C249 +
          (((C113 * C257 + C32632 * C272) * C114 +
            (C113 * C273 + C32632 * C287) * C32615) *
               C103 +
           ((C113 * C258 + C32632 * C274) * C114 +
            (C113 * C275 + C32632 * C288) * C32615) *
               C104 +
           ((C113 * C259 + C32632 * C276) * C114 +
            (C113 * C277 + C32632 * C289) * C32615) *
               C105 +
           ((C113 * C260 + C32632 * C278) * C114 +
            (C113 * C279 + C32632 * C290) * C32615) *
               C106 +
           ((C113 * C261 + C32632 * C280) * C114 +
            (C113 * C281 + C32632 * C291) * C32615) *
               C107) *
              C32592 * C250) *
         C32566) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C32632 * C122) * C114 +
            (C113 * C123 + C32632 * C136) * C32615) *
               C103 +
           (C174 + C175) * C104 + C184 * C105 + C185 * C106 + C186 * C107) *
              C32592 * C32578 * C110 -
          ((C182 + C183) * C107 + (C181 + C180) * C106 + (C179 + C178) * C105 +
           (C177 + C176) * C104 + (C175 + C174) * C103) *
              C32592 * C32578 * C111 +
          (C184 * C103 + C185 * C104 + C186 * C105 + (C183 + C182) * C106 +
           ((C113 * C121 + C32632 * C134) * C114 +
            (C113 * C135 + C32632 * C142) * C32615) *
               C107) *
              C32592 * C32578 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C32632 * C122) * C114 +
            (C113 * C123 + C32632 * C136) * C32615) *
               C103 +
           (C174 + C175) * C104 + C184 * C105 + C185 * C106 + C186 * C107) *
              C354 -
          (((C113 * C367 + C32632 * C387) * C32615 +
            (C113 * C357 + C32632 * C368) * C114) *
               C107 +
           ((C113 * C369 + C32632 * C388) * C32615 +
            (C113 * C358 + C32632 * C370) * C114) *
               C106 +
           ((C113 * C371 + C32632 * C389) * C32615 +
            (C113 * C359 + C32632 * C372) * C114) *
               C105 +
           ((C113 * C373 + C32632 * C390) * C32615 +
            (C113 * C360 + C32632 * C374) * C114) *
               C104 +
           ((C113 * C375 + C32632 * C391) * C32615 +
            (C113 * C361 + C32632 * C376) * C114) *
               C103) *
              C355 +
          (((C113 * C362 + C32632 * C377) * C114 +
            (C113 * C378 + C32632 * C392) * C32615) *
               C103 +
           ((C113 * C363 + C32632 * C379) * C114 +
            (C113 * C380 + C32632 * C393) * C32615) *
               C104 +
           ((C113 * C364 + C32632 * C381) * C114 +
            (C113 * C382 + C32632 * C394) * C32615) *
               C105 +
           ((C113 * C365 + C32632 * C383) * C114 +
            (C113 * C384 + C32632 * C395) * C32615) *
               C106 +
           ((C113 * C366 + C32632 * C385) * C114 +
            (C113 * C386 + C32632 * C396) * C32615) *
               C107) *
              C356) *
         C32578 * C32566) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C32632 * C122) * C857 +
            (C113 * C123 + C32632 * C136) * C32939 +
            (C113 * C256 + C32632 * C271) * C858 +
            (C113 * C270 + C32632 * C286) * C32927 +
            (C113 * C257 + C32632 * C272) * C859 +
            (C113 * C273 + C32632 * C287) * C32904) *
               C854 +
           (C861 + C862 + C863 + C864 + C892 + C893) * C855 + C901 * C32893) *
              C32592 * C32578 * C110 -
          ((C897 + C898 + C881 + C882 + C883 + C884) * C32893 +
           (C896 + C895 + C872 + C871 + C870 + C869) * C855 +
           (C893 + C892 + C864 + C863 + C862 + C861) * C854) *
              C32592 * C32578 * C111 +
          (C901 * C854 + (C884 + C883 + C882 + C881 + C898 + C897) * C855 +
           (C170 * C857 + C171 * C32939 + C505 * C858 + C504 * C32927 +
            (C113 * C261 + C32632 * C280) * C859 +
            (C113 * C281 + C32632 * C291) * C32904) *
               C32893) *
              C32592 * C32578 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C32632 * C122) * C857 +
            (C113 * C123 + C32632 * C136) * C32939 + C1056 * C858 +
            C1057 * C32927 + C1058 * C859 + C1059 * C32904) *
               C854 +
           (C861 + C862 + C863 + C864 + C892 + C893) * C855 + C901 * C32893) *
              C32592 * C248 -
          ((C1060 * C32904 + C1061 * C859 + C889 * C32927 + C888 * C858 +
            C508 * C32939 + C509 * C857) *
               C32893 +
           (C1062 * C32904 + C1063 * C859 + C886 * C32927 + C885 * C858 +
            C510 * C32939 + C511 * C857) *
               C855 +
           (C1064 * C32904 + C1065 * C859 + C1059 * C32927 + C1058 * C858 +
            C1057 * C32939 + C1056 * C857) *
               C854) *
              C32592 * C249 +
          ((C1058 * C857 + C1059 * C32939 + C1065 * C858 + C1064 * C32927 +
            (C113 * C1014 + C32632 * C1023) * C859 +
            (C113 * C1024 + C32632 * C1032) * C32904) *
               C854 +
           (C885 * C857 + C886 * C32939 + C1063 * C858 + C1062 * C32927 +
            (C113 * C1015 + C32632 * C1025) * C859 +
            (C113 * C1026 + C32632 * C1033) * C32904) *
               C855 +
           (C888 * C857 + C889 * C32939 + C1061 * C858 + C1060 * C32927 +
            (C113 * C1016 + C32632 * C1027) * C859 +
            (C113 * C1028 + C32632 * C1034) * C32904) *
               C32893) *
              C32592 * C250) *
         C32566) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C32632 * C122) * C857 +
            (C113 * C123 + C32632 * C136) * C32939 + C1056 * C858 +
            C1057 * C32927 + C1058 * C859 + C1059 * C32904) *
               C854 +
           (C861 + C862 + C863 + C864 + C892 + C893) * C855 + C901 * C32893) *
              C354 -
          (((C113 * C1184 + C32632 * C1202) * C32904 +
            (C113 * C1175 + C32632 * C1185) * C859 +
            (C113 * C731 + C32632 * C738) * C32927 +
            (C113 * C723 + C32632 * C730) * C858 + C628 * C32939 +
            C629 * C857) *
               C32893 +
           ((C113 * C1186 + C32632 * C1203) * C32904 +
            (C113 * C1176 + C32632 * C1187) * C859 +
            (C113 * C729 + C32632 * C737) * C32927 +
            (C113 * C722 + C32632 * C728) * C858 + C630 * C32939 +
            C631 * C857) *
               C855 +
           ((C113 * C1188 + C32632 * C1204) * C32904 +
            (C113 * C1177 + C32632 * C1189) * C859 +
            (C113 * C727 + C32632 * C736) * C32927 +
            (C113 * C721 + C32632 * C726) * C858 +
            (C113 * C375 + C32632 * C391) * C32939 +
            (C113 * C361 + C32632 * C376) * C857) *
               C854) *
              C355 +
          (((C113 * C362 + C32632 * C377) * C857 +
            (C113 * C378 + C32632 * C392) * C32939 +
            (C113 * C1178 + C32632 * C1190) * C858 +
            (C113 * C1191 + C32632 * C1205) * C32927 +
            (C113 * C1179 + C32632 * C1192) * C859 +
            (C113 * C1193 + C32632 * C1206) * C32904) *
               C854 +
           ((C113 * C363 + C32632 * C379) * C857 +
            (C113 * C380 + C32632 * C393) * C32939 +
            (C113 * C1180 + C32632 * C1194) * C858 +
            (C113 * C1195 + C32632 * C1207) * C32927 +
            (C113 * C1181 + C32632 * C1196) * C859 +
            (C113 * C1197 + C32632 * C1208) * C32904) *
               C855 +
           ((C113 * C364 + C32632 * C381) * C857 +
            (C113 * C382 + C32632 * C394) * C32939 +
            (C113 * C1182 + C32632 * C1198) * C858 +
            (C113 * C1199 + C32632 * C1209) * C32927 +
            (C113 * C1183 + C32632 * C1200) * C859 +
            (C113 * C1201 + C32632 * C1210) * C32904) *
               C32893) *
              C356) *
         C32578 * C32566) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C32632 * C122) * C5477 +
            (C113 * C123 + C32632 * C136) * C5471 + C1056 * C5478 +
            C1057 * C5472 + C1058 * C5479 + C1059 * C32904) *
               C32936 +
           (C5481 + C5482 + C5483 + C5484 + C5485 + C5486) * C32923 +
           C5503 * C32893) *
              C32592 * C32578 * C110 -
          ((C5493 + C5494 + C5495 + C5496 + C5497 + C5498) * C32893 +
           (C5492 + C5491 + C5490 + C5489 + C5488 + C5487) * C32923 +
           (C5486 + C5485 + C5484 + C5483 + C5482 + C5481) * C32936) *
              C32592 * C32578 * C111 +
          (C5503 * C32936 +
           (C5498 + C5497 + C5496 + C5495 + C5494 + C5493) * C32923 +
           (C170 * C5477 + C171 * C5471 + C505 * C5478 + C504 * C5472 +
            (C113 * C261 + C32632 * C280) * C5479 +
            (C113 * C281 + C32632 * C291) * C32904) *
               C32893) *
              C32592 * C32578 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C32632 * C122) * C5477 +
            (C113 * C123 + C32632 * C136) * C5471 + C1056 * C5478 +
            C1057 * C5472 + C1058 * C5479 + C1059 * C32904) *
               C32936 +
           (C5481 + C5482 + C5483 + C5484 + C5485 + C5486) * C32923 +
           C5503 * C32893) *
              C32592 * C248 -
          ((C1060 * C32904 + C1061 * C5479 + C889 * C5472 + C888 * C5478 +
            C508 * C5471 + C509 * C5477) *
               C32893 +
           (C1062 * C32904 + C1063 * C5479 + C886 * C5472 + C885 * C5478 +
            C510 * C5471 + C511 * C5477) *
               C32923 +
           (C1064 * C32904 + C1065 * C5479 + C1059 * C5472 + C1058 * C5478 +
            C1057 * C5471 + C1056 * C5477) *
               C32936) *
              C32592 * C249 +
          ((C1058 * C5477 + C1059 * C5471 + C1065 * C5478 + C1064 * C5472 +
            (C113 * C1014 + C32632 * C1023) * C5479 +
            (C113 * C1024 + C32632 * C1032) * C32904) *
               C32936 +
           (C885 * C5477 + C886 * C5471 + C1063 * C5478 + C1062 * C5472 +
            (C113 * C1015 + C32632 * C1025) * C5479 +
            (C113 * C1026 + C32632 * C1033) * C32904) *
               C32923 +
           (C888 * C5477 + C889 * C5471 + C1061 * C5478 + C1060 * C5472 +
            (C113 * C1016 + C32632 * C1027) * C5479 +
            (C113 * C1028 + C32632 * C1034) * C32904) *
               C32893) *
              C32592 * C250) *
         C32566) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C32632 * C122) * C5477 +
            (C113 * C123 + C32632 * C136) * C5471 + C1056 * C5478 +
            C1057 * C5472 + C1058 * C5479 + C1059 * C32904) *
               C32936 +
           (C5481 + C5482 + C5483 + C5484 + C5485 + C5486) * C32923 +
           C5503 * C32893) *
              C354 -
          ((C1544 * C32904 + C1545 * C5479 + C1546 * C5472 + C1547 * C5478 +
            C628 * C5471 + C629 * C5477) *
               C32893 +
           (C1548 * C32904 + C1549 * C5479 + C1550 * C5472 + C1551 * C5478 +
            C630 * C5471 + C631 * C5477) *
               C32923 +
           (C1726 * C32904 + C1727 * C5479 + C1728 * C5472 + C1729 * C5478 +
            (C113 * C375 + C32632 * C391) * C5471 +
            (C113 * C361 + C32632 * C376) * C5477) *
               C32936) *
              C355 +
          (((C113 * C362 + C32632 * C377) * C5477 +
            (C113 * C378 + C32632 * C392) * C5471 +
            (C113 * C1178 + C32632 * C1190) * C5478 +
            (C113 * C1191 + C32632 * C1205) * C5472 +
            (C113 * C1179 + C32632 * C1192) * C5479 +
            (C113 * C1193 + C32632 * C1206) * C32904) *
               C32936 +
           ((C113 * C363 + C32632 * C379) * C5477 +
            (C113 * C380 + C32632 * C393) * C5471 +
            (C113 * C1180 + C32632 * C1194) * C5478 +
            (C113 * C1195 + C32632 * C1207) * C5472 +
            (C113 * C1181 + C32632 * C1196) * C5479 +
            (C113 * C1197 + C32632 * C1208) * C32904) *
               C32923 +
           ((C113 * C364 + C32632 * C381) * C5477 +
            (C113 * C382 + C32632 * C394) * C5471 +
            (C113 * C1182 + C32632 * C1198) * C5478 +
            (C113 * C1199 + C32632 * C1209) * C5472 +
            (C113 * C1183 + C32632 * C1200) * C5479 +
            (C113 * C1201 + C32632 * C1210) * C32904) *
               C32893) *
              C356) *
         C32578 * C32566) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C115 + C32632 * C122) * C6253 +
           (C113 * C123 + C32632 * C136) * C6247 + C1056 * C6254 +
           C1057 * C6248 + C1058 * C6255 + C1059 * C6249 + C1065 * C6256 +
           C1064 * C6250 + (C113 * C1014 + C32632 * C1023) * C6257 +
           (C113 * C1024 + C32632 * C1032) * C6251) *
              C32533 * C32592 * C32578 * C110 -
          ((C113 * C1026 + C32632 * C1033) * C6251 +
           (C113 * C1015 + C32632 * C1025) * C6257 + C1062 * C6250 +
           C1063 * C6256 + C886 * C6249 + C885 * C6255 + C510 * C6248 +
           C511 * C6254 + C165 * C6247 + C164 * C6253) *
              C32533 * C32592 * C32578 * C111 +
          (C166 * C6253 + C167 * C6247 + C509 * C6254 + C508 * C6248 +
           C888 * C6255 + C889 * C6249 + C1061 * C6256 + C1060 * C6250 +
           (C113 * C1016 + C32632 * C1027) * C6257 +
           (C113 * C1028 + C32632 * C1034) * C6251) *
              C32533 * C32592 * C32578 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C115 + C32632 * C122) * C6253 +
           (C113 * C123 + C32632 * C136) * C6247 + C1056 * C6254 +
           C1057 * C6248 + C1058 * C6255 + C1059 * C6249 + C1065 * C6256 +
           C1064 * C6250 + C6337 * C6257 + C6338 * C6251) *
              C32533 * C32592 * C248 -
          (C6339 * C6251 + C6340 * C6257 + C6338 * C6250 + C6337 * C6256 +
           C1064 * C6249 + C1065 * C6255 + C1059 * C6248 + C1058 * C6254 +
           C1057 * C6247 + C1056 * C6253) *
              C32533 * C32592 * C249 +
          (C1058 * C6253 + C1059 * C6247 + C1065 * C6254 + C1064 * C6248 +
           C6337 * C6255 + C6338 * C6249 + C6340 * C6256 + C6339 * C6250 +
           (C113 * C6321 + C32632 * C6324) * C6257 +
           (C113 * C6325 + C32632 * C6327) * C6251) *
              C32533 * C32592 * C250) *
         C32566) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C115 + C32632 * C122) * C6253 +
           (C113 * C123 + C32632 * C136) * C6247 + C1056 * C6254 +
           C1057 * C6248 + C1058 * C6255 + C1059 * C6249 + C1065 * C6256 +
           C1064 * C6250 + C6337 * C6257 + C6338 * C6251) *
              C32533 * C354 -
          ((C113 * C6405 + C32632 * C6411) * C6251 +
           (C113 * C6402 + C32632 * C6406) * C6257 +
           (C113 * C1709 + C32632 * C1714) * C6250 +
           (C113 * C1705 + C32632 * C1708) * C6256 + C1726 * C6249 +
           C1727 * C6255 + C1728 * C6248 + C1729 * C6254 +
           (C113 * C375 + C32632 * C391) * C6247 +
           (C113 * C361 + C32632 * C376) * C6253) *
              C32533 * C355 +
          ((C113 * C362 + C32632 * C377) * C6253 +
           (C113 * C378 + C32632 * C392) * C6247 +
           (C113 * C1178 + C32632 * C1190) * C6254 +
           (C113 * C1191 + C32632 * C1205) * C6248 +
           (C113 * C1179 + C32632 * C1192) * C6255 +
           (C113 * C1193 + C32632 * C1206) * C6249 +
           (C113 * C6403 + C32632 * C6407) * C6256 +
           (C113 * C6408 + C32632 * C6412) * C6250 +
           (C113 * C6404 + C32632 * C6409) * C6257 +
           (C113 * C6410 + C32632 * C6413) * C6251) *
              C32533 * C356) *
         C32578 * C32566) /
            (p * q * std::sqrt(p + q));
    d2ee[123] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C32632 * C122) * C114 +
             (C113 * C123 + C32632 * C136) * C32615) *
                C103 +
            (C174 + C175) * C104 + C184 * C105 + C185 * C106 + C186 * C107) *
               C601 -
           ((C632 + C633) * C107 + (C634 + C635) * C106 + (C636 + C637) * C105 +
            (C638 + C639) * C104 +
            ((C113 * C375 + C32632 * C391) * C32615 +
             (C113 * C361 + C32632 * C376) * C114) *
                C103) *
               C602) *
              C32578 * C481 +
          (((C639 + C638) * C103 + (C637 + C636) * C104 + (C635 + C634) * C105 +
            (C633 + C632) * C106 +
            ((C113 * C603 + C32632 * C604) * C114 +
             (C113 * C605 + C32632 * C606) * C32615) *
                C107) *
               C602 -
           ((C182 + C183) * C107 + (C181 + C180) * C106 + (C179 + C178) * C105 +
            (C177 + C176) * C104 + (C175 + C174) * C103) *
               C601) *
              C32578 * C482)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C32632 * C122) * C857 +
             (C113 * C123 + C32632 * C136) * C32939 + C1056 * C858 +
             C1057 * C32927 + C1058 * C859 + C1059 * C32904) *
                C854 +
            (C861 + C862 + C863 + C864 + C892 + C893) * C855 + C901 * C32893) *
               C601 -
           ((C1552 + C1553 + C1554 + C1555 + C1532 + C1533) * C32893 +
            (C1556 + C1557 + C1558 + C1559 + C1542 + C1543) * C855 +
            ((C113 * C1188 + C32632 * C1204) * C32904 +
             (C113 * C1177 + C32632 * C1189) * C859 +
             (C113 * C727 + C32632 * C736) * C32927 +
             (C113 * C721 + C32632 * C726) * C858 +
             (C113 * C375 + C32632 * C391) * C32939 +
             (C113 * C361 + C32632 * C376) * C857) *
                C854) *
               C602) *
              C32578 * C481 +
          (((C1543 + C1542 + C1559 + C1558 + C1557 + C1556) * C854 +
            (C1533 + C1532 + C1555 + C1554 + C1553 + C1552) * C855 +
            (C627 * C857 + C626 * C32939 +
             (C113 * C724 + C32632 * C732) * C858 +
             (C113 * C733 + C32632 * C739) * C32927 +
             (C113 * C1519 + C32632 * C1520) * C859 +
             (C113 * C1521 + C32632 * C1522) * C32904) *
                C32893) *
               C602 -
           ((C897 + C898 + C881 + C882 + C883 + C884) * C32893 +
            (C896 + C895 + C872 + C871 + C870 + C869) * C855 +
            (C893 + C892 + C864 + C863 + C862 + C861) * C854) *
               C601) *
              C32578 * C482)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C32632 * C122) * C5477 +
             (C113 * C123 + C32632 * C136) * C5471 + C1056 * C5478 +
             C1057 * C5472 + C1058 * C5479 + C1059 * C32904) *
                C32936 +
            (C5481 + C5482 + C5483 + C5484 + C5485 + C5486) * C32923 +
            C5503 * C32893) *
               C601 -
           ((C6028 + C6029 + C6030 + C6031 + C6032 + C6033) * C32893 +
            (C6034 + C6035 + C6036 + C6037 + C6038 + C6039) * C32923 +
            (C1726 * C32904 + C1727 * C5479 + C1728 * C5472 + C1729 * C5478 +
             (C113 * C375 + C32632 * C391) * C5471 +
             (C113 * C361 + C32632 * C376) * C5477) *
                C32936) *
               C602) *
              C32578 * C481 +
          (((C6039 + C6038 + C6037 + C6036 + C6035 + C6034) * C32936 +
            (C6033 + C6032 + C6031 + C6030 + C6029 + C6028) * C32923 +
            (C627 * C5477 + C626 * C5471 + C3292 * C5478 + C3291 * C5472 +
             (C113 * C1519 + C32632 * C1520) * C5479 +
             (C113 * C1521 + C32632 * C1522) * C32904) *
                C32893) *
               C602 -
           ((C5493 + C5494 + C5495 + C5496 + C5497 + C5498) * C32893 +
            (C5492 + C5491 + C5490 + C5489 + C5488 + C5487) * C32923 +
            (C5486 + C5485 + C5484 + C5483 + C5482 + C5481) * C32936) *
               C601) *
              C32578 * C482)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C32632 * C122) * C6253 +
            (C113 * C123 + C32632 * C136) * C6247 + C1056 * C6254 +
            C1057 * C6248 + C1058 * C6255 + C1059 * C6249 + C1065 * C6256 +
            C1064 * C6250 + C6337 * C6257 + C6338 * C6251) *
               C32533 * C601 -
           ((C113 * C6405 + C32632 * C6411) * C6251 +
            (C113 * C6402 + C32632 * C6406) * C6257 +
            (C113 * C1709 + C32632 * C1714) * C6250 +
            (C113 * C1705 + C32632 * C1708) * C6256 + C1726 * C6249 +
            C1727 * C6255 + C1728 * C6248 + C1729 * C6254 +
            (C113 * C375 + C32632 * C391) * C6247 +
            (C113 * C361 + C32632 * C376) * C6253) *
               C32533 * C602) *
              C32578 * C481 +
          ((C631 * C6253 + C630 * C6247 + C1551 * C6254 + C1550 * C6248 +
            C1549 * C6255 + C1548 * C6249 +
            (C113 * C1706 + C32632 * C1710) * C6256 +
            (C113 * C1711 + C32632 * C1715) * C6250 +
            (C113 * C6588 + C32632 * C6589) * C6257 +
            (C113 * C6590 + C32632 * C6591) * C6251) *
               C32533 * C602 -
           (C6506 * C6251 + C6505 * C6257 + C1062 * C6250 + C1063 * C6256 +
            C886 * C6249 + C885 * C6255 + C510 * C6248 + C511 * C6254 +
            C165 * C6247 + C164 * C6253) *
               C32533 * C601) *
              C32578 * C482)) /
            (p * q * std::sqrt(p + q));
    d2ee[124] +=
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C32632 * C122) * C114 +
            (C113 * C123 + C32632 * C136) * C32615) *
               C103 +
           (C174 + C175) * C104 + C184 * C105 + C185 * C106 + C186 * C107) *
              C32592 * C32578 * C110 -
          ((C182 + C183) * C107 + (C181 + C180) * C106 + (C179 + C178) * C105 +
           (C177 + C176) * C104 + (C175 + C174) * C103) *
              C32592 * C32578 * C111 +
          (C184 * C103 + C185 * C104 + C186 * C105 + (C183 + C182) * C106 +
           ((C113 * C121 + C32632 * C134) * C114 +
            (C113 * C135 + C32632 * C142) * C32615) *
               C107) *
              C32592 * C32578 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C32632 * C122) * C114 +
            (C113 * C123 + C32632 * C136) * C32615) *
               C103 +
           (C174 + C175) * C104 + C184 * C105 + C185 * C106 + C186 * C107) *
              C32592 * C248 -
          (((C113 * C262 + C32632 * C282) * C32615 +
            (C113 * C252 + C32632 * C263) * C114) *
               C107 +
           ((C113 * C264 + C32632 * C283) * C32615 +
            (C113 * C253 + C32632 * C265) * C114) *
               C106 +
           ((C113 * C266 + C32632 * C284) * C32615 +
            (C113 * C254 + C32632 * C267) * C114) *
               C105 +
           ((C113 * C268 + C32632 * C285) * C32615 +
            (C113 * C255 + C32632 * C269) * C114) *
               C104 +
           ((C113 * C270 + C32632 * C286) * C32615 +
            (C113 * C256 + C32632 * C271) * C114) *
               C103) *
              C32592 * C249 +
          (((C113 * C257 + C32632 * C272) * C114 +
            (C113 * C273 + C32632 * C287) * C32615) *
               C103 +
           ((C113 * C258 + C32632 * C274) * C114 +
            (C113 * C275 + C32632 * C288) * C32615) *
               C104 +
           ((C113 * C259 + C32632 * C276) * C114 +
            (C113 * C277 + C32632 * C289) * C32615) *
               C105 +
           ((C113 * C260 + C32632 * C278) * C114 +
            (C113 * C279 + C32632 * C290) * C32615) *
               C106 +
           ((C113 * C261 + C32632 * C280) * C114 +
            (C113 * C281 + C32632 * C291) * C32615) *
               C107) *
              C32592 * C250) *
         C32566) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C32632 * C122) * C857 +
            (C113 * C123 + C32632 * C136) * C32939 +
            (C113 * C256 + C32632 * C271) * C858 +
            (C113 * C270 + C32632 * C286) * C32927 +
            (C113 * C257 + C32632 * C272) * C859 +
            (C113 * C273 + C32632 * C287) * C32904) *
               C854 +
           (C861 + C862 + C863 + C864 + C892 + C893) * C855 + C901 * C32893) *
              C32592 * C32578 * C110 -
          ((C897 + C898 + C881 + C882 + C883 + C884) * C32893 +
           (C896 + C895 + C872 + C871 + C870 + C869) * C855 +
           (C893 + C892 + C864 + C863 + C862 + C861) * C854) *
              C32592 * C32578 * C111 +
          (C901 * C854 + (C884 + C883 + C882 + C881 + C898 + C897) * C855 +
           (C170 * C857 + C171 * C32939 + C505 * C858 + C504 * C32927 +
            (C113 * C261 + C32632 * C280) * C859 +
            (C113 * C281 + C32632 * C291) * C32904) *
               C32893) *
              C32592 * C32578 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C32632 * C122) * C857 +
            (C113 * C123 + C32632 * C136) * C32939 + C1056 * C858 +
            C1057 * C32927 + C1058 * C859 + C1059 * C32904) *
               C854 +
           (C861 + C862 + C863 + C864 + C892 + C893) * C855 + C901 * C32893) *
              C32592 * C248 -
          ((C1060 * C32904 + C1061 * C859 + C889 * C32927 + C888 * C858 +
            C508 * C32939 + C509 * C857) *
               C32893 +
           (C1062 * C32904 + C1063 * C859 + C886 * C32927 + C885 * C858 +
            C510 * C32939 + C511 * C857) *
               C855 +
           (C1064 * C32904 + C1065 * C859 + C1059 * C32927 + C1058 * C858 +
            C1057 * C32939 + C1056 * C857) *
               C854) *
              C32592 * C249 +
          ((C1058 * C857 + C1059 * C32939 + C1065 * C858 + C1064 * C32927 +
            (C113 * C1014 + C32632 * C1023) * C859 +
            (C113 * C1024 + C32632 * C1032) * C32904) *
               C854 +
           (C885 * C857 + C886 * C32939 + C1063 * C858 + C1062 * C32927 +
            (C113 * C1015 + C32632 * C1025) * C859 +
            (C113 * C1026 + C32632 * C1033) * C32904) *
               C855 +
           (C888 * C857 + C889 * C32939 + C1061 * C858 + C1060 * C32927 +
            (C113 * C1016 + C32632 * C1027) * C859 +
            (C113 * C1028 + C32632 * C1034) * C32904) *
               C32893) *
              C32592 * C250) *
         C32566) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C32632 * C122) * C5477 +
            (C113 * C123 + C32632 * C136) * C5471 + C1056 * C5478 +
            C1057 * C5472 + C1058 * C5479 + C1059 * C32904) *
               C32936 +
           (C5481 + C5482 + C5483 + C5484 + C5485 + C5486) * C32923 +
           C5503 * C32893) *
              C32592 * C32578 * C110 -
          ((C5493 + C5494 + C5495 + C5496 + C5497 + C5498) * C32893 +
           (C5492 + C5491 + C5490 + C5489 + C5488 + C5487) * C32923 +
           (C5486 + C5485 + C5484 + C5483 + C5482 + C5481) * C32936) *
              C32592 * C32578 * C111 +
          (C5503 * C32936 +
           (C5498 + C5497 + C5496 + C5495 + C5494 + C5493) * C32923 +
           (C170 * C5477 + C171 * C5471 + C505 * C5478 + C504 * C5472 +
            (C113 * C261 + C32632 * C280) * C5479 +
            (C113 * C281 + C32632 * C291) * C32904) *
               C32893) *
              C32592 * C32578 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C32632 * C122) * C5477 +
            (C113 * C123 + C32632 * C136) * C5471 + C1056 * C5478 +
            C1057 * C5472 + C1058 * C5479 + C1059 * C32904) *
               C32936 +
           (C5481 + C5482 + C5483 + C5484 + C5485 + C5486) * C32923 +
           C5503 * C32893) *
              C32592 * C248 -
          ((C1060 * C32904 + C1061 * C5479 + C889 * C5472 + C888 * C5478 +
            C508 * C5471 + C509 * C5477) *
               C32893 +
           (C1062 * C32904 + C1063 * C5479 + C886 * C5472 + C885 * C5478 +
            C510 * C5471 + C511 * C5477) *
               C32923 +
           (C1064 * C32904 + C1065 * C5479 + C1059 * C5472 + C1058 * C5478 +
            C1057 * C5471 + C1056 * C5477) *
               C32936) *
              C32592 * C249 +
          ((C1058 * C5477 + C1059 * C5471 + C1065 * C5478 + C1064 * C5472 +
            (C113 * C1014 + C32632 * C1023) * C5479 +
            (C113 * C1024 + C32632 * C1032) * C32904) *
               C32936 +
           (C885 * C5477 + C886 * C5471 + C1063 * C5478 + C1062 * C5472 +
            (C113 * C1015 + C32632 * C1025) * C5479 +
            (C113 * C1026 + C32632 * C1033) * C32904) *
               C32923 +
           (C888 * C5477 + C889 * C5471 + C1061 * C5478 + C1060 * C5472 +
            (C113 * C1016 + C32632 * C1027) * C5479 +
            (C113 * C1028 + C32632 * C1034) * C32904) *
               C32893) *
              C32592 * C250) *
         C32566) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C115 + C32632 * C122) * C6253 +
           (C113 * C123 + C32632 * C136) * C6247 + C1056 * C6254 +
           C1057 * C6248 + C1058 * C6255 + C1059 * C6249 + C1065 * C6256 +
           C1064 * C6250 + (C113 * C1014 + C32632 * C1023) * C6257 +
           (C113 * C1024 + C32632 * C1032) * C6251) *
              C32533 * C32592 * C32578 * C110 -
          ((C113 * C1026 + C32632 * C1033) * C6251 +
           (C113 * C1015 + C32632 * C1025) * C6257 + C1062 * C6250 +
           C1063 * C6256 + C886 * C6249 + C885 * C6255 + C510 * C6248 +
           C511 * C6254 + C165 * C6247 + C164 * C6253) *
              C32533 * C32592 * C32578 * C111 +
          (C166 * C6253 + C167 * C6247 + C509 * C6254 + C508 * C6248 +
           C888 * C6255 + C889 * C6249 + C1061 * C6256 + C1060 * C6250 +
           (C113 * C1016 + C32632 * C1027) * C6257 +
           (C113 * C1028 + C32632 * C1034) * C6251) *
              C32533 * C32592 * C32578 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C115 + C32632 * C122) * C6253 +
           (C113 * C123 + C32632 * C136) * C6247 + C1056 * C6254 +
           C1057 * C6248 + C1058 * C6255 + C1059 * C6249 + C1065 * C6256 +
           C1064 * C6250 + C6337 * C6257 + C6338 * C6251) *
              C32533 * C32592 * C248 -
          (C6339 * C6251 + C6340 * C6257 + C6338 * C6250 + C6337 * C6256 +
           C1064 * C6249 + C1065 * C6255 + C1059 * C6248 + C1058 * C6254 +
           C1057 * C6247 + C1056 * C6253) *
              C32533 * C32592 * C249 +
          (C1058 * C6253 + C1059 * C6247 + C1065 * C6254 + C1064 * C6248 +
           C6337 * C6255 + C6338 * C6249 + C6340 * C6256 + C6339 * C6250 +
           (C113 * C6321 + C32632 * C6324) * C6257 +
           (C113 * C6325 + C32632 * C6327) * C6251) *
              C32533 * C32592 * C250) *
         C32566) /
            (p * q * std::sqrt(p + q));
}
