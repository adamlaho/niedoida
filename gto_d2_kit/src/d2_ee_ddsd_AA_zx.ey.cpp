/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

#include "gto_d2_kit/d2_ee_ddsd_AA_zx.hpp"
#include <cmath>
/*

*/
#pragma GCC optimize("O0")
namespace {
    const double Pi = M_PI;
}
#pragma GCC optimize("O0")

void second_derivative_ee_2202_11_31(const double ae,
                                     const double xA,
                                     const double yA,
                                     const double zA,
                                     const double be,
                                     const double xB,
                                     const double yB,
                                     const double zB,
                                     const double ce,
                                     const double xC,
                                     const double yC,
                                     const double zC,
                                     const double de,
                                     const double xD,
                                     const double yD,
                                     const double zD,
                                     const double* const bs,
                                     double* const d2ee)
{
    const double p = ae + be;
    const double q = ce + de;
    const double xP = (ae * xA + be * xB) / p;
    const double yP = (ae * yA + be * yB) / p;
    const double zP = (ae * zA + be * zB) / p;
    const double xQ = (ce * xC + de * xD) / q;
    const double yQ = (ce * yC + de * yD) / q;
    const double zQ = (ce * zC + de * zD) / q;
    const double C31516 = 0 * ae;
    const double C31515 = ae * be;
    const double C31514 = 0 * be;
    const double C31513 = 0 * be;
    const double C31512 = ae + be;
    const double C31511 = 0 * be;
    const double C31510 = xA - xB;
    const double C31571 = 0 * be;
    const double C31598 = 0 * be;
    const double C31597 = zA - zB;
    const double C31653 = 0 * ae;
    const double C31648 = 0 * be;
    const double C31647 = 0 * be;
    const double C31698 = 0 * be;
    const double C31758 = xP - xQ;
    const double C31757 = zP - zQ;
    const double C31756 = p + q;
    const double C31755 = p * q;
    const double C31765 = std::pow(ae, 2);
    const double C31763 = bs[3];
    const double C31773 = bs[4];
    const double C31782 = bs[5];
    const double C31796 = bs[6];
    const double C31818 = bs[7];
    const double C31927 = yP - yQ;
    const double C32133 = bs[2];
    const double C119 = bs[0];
    const double C32572 = ce + de;
    const double C32571 = ce * de;
    const double C32570 = xC - xD;
    const double C32584 = yC - yD;
    const double C32598 = zC - zD;
    const double C32628 = yA - yB;
    const double C31523 = C31516 / C31512;
    const double C31520 = C31514 / C31512;
    const double C31518 = 2 * C31512;
    const double C31517 = std::pow(C31512, 2);
    const double C31522 = C31515 * C31510;
    const double C31521 = C31510 * C31514;
    const double C31519 = C31510 * C31513;
    const double C32536 = C31510 * be;
    const double C32535 = C31510 * ae;
    const double C32534 = std::pow(C31510, 2);
    const double C31572 = C31571 / C31512;
    const double C31649 = C31598 / C31512;
    const double C31599 = C31515 * C31597;
    const double C31650 = C31597 * C31598;
    const double C32640 = std::pow(C31597, 2);
    const double C32723 = C31597 * be;
    const double C32721 = C31597 * ae;
    const double C31660 = C31653 / C31512;
    const double C31655 = C31597 * C31648;
    const double C31699 = C31698 / C31512;
    const double C31783 = std::pow(C31758, 2);
    const double C31851 = C31758 * ae;
    const double C31766 = C31757 * ae;
    const double C31764 = C31757 * C31758;
    const double C31969 = std::pow(C31757, 2);
    const double C31759 = 2 * C31755;
    const double C31936 = std::pow(C31927, 2);
    const double C32878 = 2 * C32572;
    const double C32877 = std::pow(C32572, 2);
    const double C32573 = std::pow(C32570, 2);
    const double C32876 = C32570 * ce;
    const double C32585 = std::pow(C32584, 2);
    const double C32879 = C32584 * ce;
    const double C32599 = std::pow(C32598, 2);
    const double C32880 = C32598 * ce;
    const double C32629 = std::pow(C32628, 2);
    const double C32683 = C32628 * be;
    const double C32681 = C32628 * ae;
    const double C32548 = std::pow(C31518, -1);
    const double C32871 = std::pow(C31518, -2);
    const double C31524 = 2 * C31517;
    const double C140 = (std::pow((2 * p * q) / (p + q), 2) * bs[2] *
                         (zP - zQ) * (xP - xQ) * std::pow(ae, 2)) /
                        C31517;
    const double C32875 = C31517 * C31518;
    const double C32874 = 4 * C31517;
    const double C31526 = C31521 / C31512;
    const double C31525 = C31519 / C31512;
    const double C32864 = std::pow(C32535, 2);
    const double C32537 = C32534 * C31515;
    const double C31658 = C31650 / C31512;
    const double C32641 = C32640 * C31515;
    const double C32883 = std::pow(C32721, 2);
    const double C31661 = C31655 / C31512;
    const double C31854 = C31782 * C31851;
    const double C31863 = C31773 * C31851;
    const double C31870 = C31763 * C31851;
    const double C31883 = C31796 * C31851;
    const double C31900 = C31818 * C31851;
    const double C31769 = C31763 * C31766;
    const double C31775 = C31773 * C31766;
    const double C31785 = C31782 * C31766;
    const double C31800 = C31796 * C31766;
    const double C31824 = C31818 * C31766;
    const double C31768 = C31764 * C31765;
    const double C31760 = C31759 / C31756;
    const double C126 = (-(bs[1] * C31851 * C31759) / C31756) / C31512;
    const double C131 = (-(bs[1] * C31766 * C31759) / C31756) / C31512;
    const double C120 = -(C31758 * bs[1] * C31759) / C31756;
    const double C217 = -(C31927 * bs[1] * C31759) / C31756;
    const double C322 = -(C31757 * bs[1] * C31759) / C31756;
    const double C32911 = std::pow(C32878, -2);
    const double C32909 = std::pow(C32878, -1);
    const double C32574 = C32573 * C32571;
    const double C32586 = C32585 * C32571;
    const double C32600 = C32599 * C32571;
    const double C32630 = C32629 * C31515;
    const double C32881 = std::pow(C32681, 2);
    const double C31533 = C31514 / C31524;
    const double C31530 = C31513 / C31524;
    const double C31529 = C31511 / C31524;
    const double C31652 = C31598 / C31524;
    const double C31657 = C31648 / C31524;
    const double C31656 = C31647 / C31524;
    const double C32908 = 4 * C32875;
    const double C32907 = C31512 * C32874;
    const double C31531 = 0 - C31526;
    const double C31528 = 0 - C31525;
    const double C32538 = C32537 / C31512;
    const double C31662 = 0 - C31658;
    const double C32642 = C32641 / C31512;
    const double C31665 = 0 - C31661;
    const double C31774 = C31773 * C31768;
    const double C31784 = C31782 * C31768;
    const double C31798 = C31796 * C31768;
    const double C31822 = C31818 * C31768;
    const double C31762 = -C31760;
    const double C31772 = std::pow(C31760, 4);
    const double C31795 = std::pow(C31760, 6);
    const double C141 = (ae * std::pow(C31760, 2) * bs[2] * C31757 * ae +
                         C31758 * std::pow(-C31760, 3) * bs[3] * C31757 *
                             C31758 * std::pow(ae, 2)) /
                        C31517;
    const double C32132 = std::pow(C31760, 2);
    const double C127 =
        (C31758 * std::pow(C31760, 2) * bs[2] * C31851) / C31512 -
        (ae * bs[1] * C31759) / (C31756 * C31512);
    const double C32575 = C32574 / C32572;
    const double C32587 = C32586 / C32572;
    const double C32601 = C32600 / C32572;
    const double C32631 = C32630 / C31512;
    const double C31536 = C31531 * ae;
    const double C31535 = C31528 * ae;
    const double C32539 = -C32538;
    const double C31666 = C31662 * ae;
    const double C32643 = -C32642;
    const double C31669 = C31665 * ae;
    const double C31767 = std::pow(C31762, 3);
    const double C31781 = std::pow(C31762, 5);
    const double C31817 = std::pow(C31762, 7);
    const double C31777 = C31772 * C31775;
    const double C31776 = C31772 * C31774;
    const double C31852 = C31773 * C31772;
    const double C31865 = C31772 * C31863;
    const double C31803 = C31795 * C31800;
    const double C31802 = C31795 * C31798;
    const double C31887 = C31795 * C31883;
    const double C31901 = C31796 * C31795;
    const double C32134 = C32133 * C32132;
    const double C132 = (C31758 * C32132 * C32133 * C31766) / C31512;
    const double C227 = (C31927 * C32132 * C32133 * C31766) / C31512;
    const double C232 = (C31927 * C32132 * C32133 * C31851) / C31512;
    const double C332 = (C31757 * C32132 * C32133 * C31766) / C31512 -
                        (ae * bs[1] * C31759) / (C31756 * C31512);
    const double C337 = (C31757 * C32132 * C32133 * C31851) / C31512;
    const double C32576 = -C32575;
    const double C32588 = -C32587;
    const double C32602 = -C32601;
    const double C32632 = -C32631;
    const double C31540 = C31536 / C31512;
    const double C31539 = C31535 / C31512;
    const double C32540 = std::exp(C32539);
    const double C31670 = C31666 / C31512;
    const double C32644 = std::exp(C32643);
    const double C31673 = C31669 / C31512;
    const double C31770 = C31767 * C31769;
    const double C31864 = C31763 * C31767;
    const double C31871 = C31767 * C31870;
    const double C247 = ((yP - yQ) * C31767 * C31763 * C31768) / C31517;
    const double C352 = (ae * std::pow(C31760, 2) * bs[2] * C31851 +
                         C31757 * C31767 * C31763 * C31768) /
                        C31517;
    const double C31787 = C31781 * C31785;
    const double C31786 = C31781 * C31784;
    const double C31853 = C31782 * C31781;
    const double C31858 = C31781 * C31854;
    const double C31827 = C31817 * C31824;
    const double C31826 = C31817 * C31822;
    const double C31903 = C31817 * C31900;
    const double C31780 = ae * C31777;
    const double C31779 = C31758 * C31777;
    const double C32268 = C31757 * C31777;
    const double C32294 = C31927 * C31777;
    const double C248 =
        (C31767 * C31763 * C31768 + C31776 * std::pow(yP - yQ, 2)) / C31517;
    const double C31856 = C31758 * C31852;
    const double C31855 = C31852 * ae;
    const double C32138 = C31852 * C31783;
    const double C32240 = C31852 * C31936;
    const double C32270 = C31852 * C31969;
    const double C32295 = C31927 * C31852;
    const double C32373 = C31757 * C31852;
    const double C31873 = C31758 * C31865;
    const double C31943 = C31927 * C31865;
    const double C31967 = ae * C31865;
    const double C31966 = C31757 * C31865;
    const double C31805 = C31803 * C31783;
    const double C31816 = ae * C31803;
    const double C31815 = C31758 * C31803;
    const double C32309 = C31803 * C31936;
    const double C32388 = C31757 * C31803;
    const double C32433 = C31927 * C31803;
    const double C31804 = C31758 * C31802;
    const double C32000 = C31802 * C31936;
    const double C32003 = C31927 * C31802;
    const double C32057 = C31757 * C31802;
    const double C31889 = C31758 * C31887;
    const double C32012 = C31887 * C31936;
    const double C32018 = C31927 * C31887;
    const double C32058 = C31887 * C31969;
    const double C32072 = ae * C31887;
    const double C32071 = C31757 * C31887;
    const double C31906 = C31901 * C31783;
    const double C31905 = C31758 * C31901;
    const double C31904 = C31901 * ae;
    const double C32327 = C31901 * C31936;
    const double C32391 = C31901 * C31969;
    const double C32436 = C31927 * C31901;
    const double C121 = C32134 * C31783 - (bs[1] * C31759) / C31756;
    const double C216 = C31927 * C31758 * C32134;
    const double C218 = C32134 * C31936 - (bs[1] * C31759) / C31756;
    const double C321 = C31757 * C31758 * C32134;
    const double C323 = C32134 * C31969 - (bs[1] * C31759) / C31756;
    const double C618 = C31757 * C31927 * C32134;
    const double C32577 = std::exp(C32576);
    const double C32589 = std::exp(C32588);
    const double C32603 = std::exp(C32602);
    const double C32633 = std::exp(C32632);
    const double C31544 = C31540 - C31530;
    const double C31543 = C31539 - C31529;
    const double C6205 = C32540 * C232;
    const double C7027 = C32540 * C337;
    const double C31527 = C31522 * C32540;
    const double C32542 = C32540 * C32535;
    const double C32541 = C32540 / C31518;
    const double C32550 = C32548 * C32540;
    const double C32867 = C32540 * C32536;
    const double C32905 = C32871 * C32540;
    const double C32899 = C32540 * C32864;
    const double C31674 = C31670 - C31657;
    const double C31600 = C31599 * C32644;
    const double C118 = -(2 * C31515 * (zA - zB) * C32644) / C31512;
    const double C32722 = C32644 / C31518;
    const double C32724 = C32644 * C32721;
    const double C32731 = C32548 * C32644;
    const double C32893 = C32644 * C32723;
    const double C32919 = C32871 * C32644;
    const double C32917 = C32644 * C32883;
    const double C31677 = C31673 - C31656;
    const double C142 = (C31767 * C31763 * C31768 + ae * C31758 * C31770 +
                         C31758 * (ae * C31770 + C31758 * std::pow(C31760, 4) *
                                                     bs[4] * C31768)) /
                        C31517;
    const double C143 =
        (2 * (ae * C31770 + C31758 * C31776) +
         ae * (C31770 + C31777 * std::pow(C31758, 2)) +
         C31758 * (C31776 + ae * C31758 * C31777 +
                   C31758 * (ae * C31777 +
                             C31758 * std::pow(C31762, 5) * bs[5] * C31768))) /
        C31517;
    const double C246 = ((yP - yQ) * (ae * C31770 + C31758 * C31776)) / C31517;
    const double C351 = (ae * (C31758 * C31767 * C31763 * C31851 +
                               bs[2] * std::pow(C31760, 2) * ae) +
                         C31757 * (ae * C31770 + C31758 * C31776)) /
                        C31517;
    const double C133 = (C32132 * C32133 * C31766 + C31770 * C31783) / C31512;
    const double C134 =
        (2 * C31758 * C31770 + C31758 * (C31770 + C31777 * C31783)) / C31512;
    const double C225 = (C31927 * (C31770 + C31777 * C31783)) / C31512;
    const double C226 = (C31927 * C31758 * C31770) / C31512;
    const double C238 = (C32132 * C32133 * C31766 + C31770 * C31936) / C31512;
    const double C331 =
        (C31757 * C31758 * C31770 + C31758 * C32134 * ae) / C31512;
    const double C343 =
        (C32132 * C32133 * C31766 + C31757 * (C31757 * C31770 + C32134 * ae) +
         C31757 * C32134 * ae) /
        C31512;
    const double C628 =
        (C31757 * C31927 * C31770 + C31927 * C32134 * ae) / C31512;
    const double C875 =
        (2 * C31927 * C31770 + C31927 * (C31770 + C31777 * C31936)) / C31512;
    const double C31874 = C31864 * ae;
    const double C32137 = C31758 * C31864;
    const double C32231 = C31927 * C31864;
    const double C32269 = C31757 * C31864;
    const double C330 = (C31757 * (C31770 + C31777 * C31783) +
                         (C32134 + C31864 * C31783) * ae) /
                        C31512;
    const double C1073 = (C31757 * (C31770 + C31777 * C31936) +
                          (C32134 + C31864 * C31936) * ae) /
                         C31512;
    const double C122 =
        2 * C31758 * C32134 + C31758 * (C32134 + C31864 * C31783);
    const double C215 = C31927 * (C32134 + C31864 * C31783);
    const double C320 = C31757 * (C32134 + C31864 * C31783);
    const double C869 =
        2 * C31927 * C32134 + C31927 * (C32134 + C31864 * C31936);
    const double C1064 = C31757 * (C32134 + C31864 * C31936);
    const double C1966 =
        2 * C31757 * C32134 + C31757 * (C32134 + C31864 * C31969);
    const double C353 = (C31767 * C31763 * C31768 + ae * C31757 * C31871 +
                         C31757 * (ae * C31871 + C31757 * C31776)) /
                        C31517;
    const double C633 =
        (ae * C31927 * C31871 + C31757 * C31927 * C31776) / C31517;
    const double C128 =
        (C32132 * C32133 * C31851 + C31758 * (C31758 * C31871 + C32134 * ae) +
         C31758 * C32134 * ae) /
        C31512;
    const double C231 = (C31927 * (C31758 * C31871 + C32134 * ae)) / C31512;
    const double C233 = (C32132 * C32133 * C31851 + C31871 * C31936) / C31512;
    const double C336 = (C31757 * (C31758 * C31871 + C32134 * ae)) / C31512;
    const double C338 = (C32132 * C32133 * C31851 + C31871 * C31969) / C31512;
    const double C623 = (C31757 * C31927 * C31871) / C31512;
    const double C878 =
        (2 * C31927 * C31871 + C31927 * (C31871 + C31865 * C31936)) / C31512;
    const double C1076 = (C31757 * (C31871 + C31865 * C31936)) / C31512;
    const double C1975 =
        (2 * C31757 * C31871 + C31757 * (C31871 + C31865 * C31969)) / C31512;
    const double C6207 = C32540 * C247;
    const double C7029 = C32540 * C352;
    const double C31789 = C31787 * C31783;
    const double C31794 = ae * C31787;
    const double C31793 = C31758 * C31787;
    const double C32303 = C31787 * C31936;
    const double C32308 = C31927 * C31787;
    const double C32372 = C31757 * C31787;
    const double C882 =
        (3 * (C31770 + C31777 * C31936) +
         C31927 * (2 * C31927 * C31777 + C31927 * (C31777 + C31787 * C31936))) /
        C31512;
    const double C31788 = C31758 * C31786;
    const double C31968 = C31757 * C31786;
    const double C31991 = C31927 * C31786;
    const double C887 = (2 * C31927 * C31776 +
                         C31927 * (C31776 + C31786 * std::pow(C31927, 2))) /
                        C31517;
    const double C888 =
        (3 * (C31776 + C31786 * C31936) +
         C31927 * (2 * C31927 * C31786 + C31927 * (C31786 + C31802 * C31936))) /
        C31517;
    const double C1091 = (ae * (C31871 + C31865 * C31936) +
                          C31757 * (C31776 + C31786 * C31936)) /
                         C31517;
    const double C1984 = (2 * (ae * C31871 + C31757 * C31776) +
                          ae * (C31871 + C31865 * std::pow(C31757, 2)) +
                          C31757 * (C31776 + ae * C31757 * C31865 +
                                    C31757 * (ae * C31865 + C31757 * C31786))) /
                         C31517;
    const double C31857 = C31853 * C31783;
    const double C31885 = C31758 * C31853;
    const double C31884 = C31853 * ae;
    const double C32319 = C31853 * C31936;
    const double C32326 = C31927 * C31853;
    const double C32374 = C31853 * C31969;
    const double C32389 = C31757 * C31853;
    const double C31860 = C31758 * C31858;
    const double C31949 = C31858 * C31936;
    const double C31971 = C31858 * C31969;
    const double C31992 = C31927 * C31858;
    const double C32056 = ae * C31858;
    const double C32055 = C31757 * C31858;
    const double C31829 = C31827 * C31783;
    const double C31828 = C31758 * C31826;
    const double C32004 = C31826 * C31936;
    const double C32073 = C31757 * C31826;
    const double C32116 = C31927 * C31826;
    const double C31907 = C31758 * C31903;
    const double C32019 = C31903 * C31936;
    const double C32075 = C31903 * C31969;
    const double C32117 = C31927 * C31903;
    const double C239 = (C31758 * C31770 + C31779 * C31936) / C31512;
    const double C6211 = C32540 * C248;
    const double C31878 = C31856 * ae;
    const double C32147 = 2 * C31856;
    const double C32233 = C31927 * C31856;
    const double C32275 = C31757 * C31856;
    const double C32139 = C31864 + C32138;
    const double C32241 = C31864 + C32240;
    const double C32272 = C31864 + C32270;
    const double C32318 = 2 * C32295;
    const double C32348 = C31757 * C32295;
    const double C32347 = C32295 * ae;
    const double C32378 = 2 * C32373;
    const double C32376 = C32373 * ae;
    const double C1092 = (C31927 * C31776 + ae * C31757 * C31943 +
                          C31757 * (ae * C31943 + C31757 * C31927 * C31786)) /
                         C31517;
    const double C1077 = (C31927 * C31871 + C31943 * C31969) / C31512;
    const double C31807 = C31787 + C31805;
    const double C31823 = 2 * C31815;
    const double C31821 = ae * C31815;
    const double C32336 = C31815 * C31936;
    const double C32409 = C31927 * C31815;
    const double C32419 = C31757 * C31815;
    const double C32311 = C31787 + C32309;
    const double C32437 = C31757 * C32433;
    const double C32001 = C31786 + C32000;
    const double C32005 = 2 * C32003;
    const double C32035 = C31757 * C32003;
    const double C32013 = C31858 + C32012;
    const double C32020 = 2 * C32018;
    const double C32036 = C32018 * C31969;
    const double C32115 = ae * C32018;
    const double C32114 = C31757 * C32018;
    const double C32062 = C31858 + C32058;
    const double C32079 = 2 * C32071;
    const double C32077 = ae * C32071;
    const double C31909 = C31853 + C31906;
    const double C31908 = C31905 * ae;
    const double C32363 = C31905 * C31936;
    const double C32412 = C31927 * C31905;
    const double C32421 = C31905 * C31969;
    const double C32329 = C31853 + C32327;
    const double C32395 = C31853 + C32391;
    const double C32439 = C32436 * C31969;
    const double C32910 = C32577 * C32876;
    const double C110 =
        (C32577 * std::pow(C32876, 2)) / C32877 + C32577 / C32878;
    const double C112 = C32911 * C32577;
    const double C443 = C32909 * C32577;
    const double C32912 = C32589 * C32879;
    const double C209 =
        (C32589 * std::pow(C32879, 2)) / C32877 + C32589 / C32878;
    const double C211 = C32911 * C32589;
    const double C441 = C32909 * C32589;
    const double C32913 = C32603 * C32880;
    const double C315 =
        (C32603 * std::pow(C32880, 2)) / C32877 + C32603 / C32878;
    const double C317 = C32911 * C32603;
    const double C531 = C32909 * C32603;
    const double C32682 = C32633 / C31518;
    const double C32684 = C32633 * C32681;
    const double C32691 = C32548 * C32633;
    const double C32887 = C32633 * C32683;
    const double C32916 = C32871 * C32633;
    const double C32914 = C32633 * C32881;
    const double C31549 = C31544 / C31518;
    const double C31548 = C31510 * C31544;
    const double C31547 = C31543 + C31520;
    const double C31534 = C31527 / C31517;
    const double C31532 = 2 * C31527;
    const double C32543 = C32542 * C32536;
    const double C32549 = C32542 / C31524;
    const double C32868 = C32548 * C32542;
    const double C32866 = C32542 / C31512;
    const double C748 = (C32540 * std::pow(C32536, 2)) / C31517 + C32541;
    const double C32551 = C32550 * C32536;
    const double C32872 = C32535 * C32550;
    const double C32870 = 2 * C32550;
    const double C32920 = C32550 / C32874;
    const double C105 = C32550 / C32908;
    const double C17823 = C32550 / C31518;
    const double C32901 = C32867 / C31512;
    const double C749 = (-2 * C32548 * C32867) / C31512;
    const double C32933 = C32899 / C31517;
    const double C31679 = C31674 / C31518;
    const double C31678 = C31597 * C31674;
    const double C31632 = 2 * C31600;
    const double C31654 = C31600 / C31517;
    const double C1743 =
        ((0 * ae) / C31512 - C31600 / C31517) / C31518 + (0 * ae) / C31512;
    const double C3448 =
        ((C32644 - (C31597 * 2 * C31600) / C31512) * ae) / C31512 -
        C31598 / C31524;
    const double C3449 = (0 * ae) / C31512 - C31600 / C31517;
    const double C10352 = (C32644 * std::pow(C32723, 2)) / C31517 + C32722;
    const double C32725 = C32724 * C32723;
    const double C32730 = C32724 / C31524;
    const double C32886 = C32724 / C31512;
    const double C32884 = C32548 * C32724;
    const double C1742 =
        (((C32644 - (C31597 * 2 * C31600) / C31512) * ae) / C31512 -
         C31598 / C31524) /
            C31518 +
        ((C31597 * ((0 * ae) / C31512 - C31600 / C31517) + C32731) * ae) /
            C31512;
    const double C32732 = C32731 * C32723;
    const double C32897 = C32721 * C32731;
    const double C32896 = 2 * C32731;
    const double C32932 = C32731 / C32874;
    const double C12009 = C32731 / C32908;
    const double C24419 = C32731 / C31518;
    const double C32928 = C32893 / C31512;
    const double C10353 = (-2 * C32548 * C32893) / C31512;
    const double C32940 = C32917 / C31517;
    const double C31683 = C31677 + C31649;
    const double C6410 = C32540 * C246;
    const double C7777 = C32550 * C246;
    const double C15951 = C32550 * C246;
    const double C7395 = C32540 * C351;
    const double C8842 = C32550 * C351;
    const double C17031 = C32550 * C351;
    const double C31875 = C31873 + C31874;
    const double C32271 = C32268 + C31874;
    const double C1972 =
        (2 * (C31757 * C31770 + C32134 * ae) +
         C31757 * (C31770 + C31757 * (C31757 * C31777 + C31874) +
                   C31757 * C31864 * ae) +
         (C32134 + C31864 * C31969) * ae) /
        C31512;
    const double C344 =
        (C31758 * C31770 + C31757 * (C31757 * C31779 + C32137 * ae) +
         C31757 * C32137 * ae) /
        C31512;
    const double C629 =
        (C31757 * C31927 * C31779 + C31927 * C32137 * ae) / C31512;
    const double C219 = C31758 * C32134 + C32137 * C31936;
    const double C324 = C31758 * C32134 + C32137 * C31969;
    const double C619 = C31757 * C31927 * C32137;
    const double C868 =
        2 * C31927 * C32137 + C31927 * (C32137 + C31856 * C31936);
    const double C1063 = C31757 * (C32137 + C31856 * C31936);
    const double C1965 =
        2 * C31757 * C32137 + C31757 * (C32137 + C31856 * C31969);
    const double C1080 =
        (C31927 * C31770 + C31757 * (C31757 * C31927 * C31777 + C32231 * ae) +
         C31757 * C32231 * ae) /
        C31512;
    const double C2534 =
        (2 * (C31757 * C32294 + C32231 * ae) +
         C31757 * (C32294 + C31757 * (C31757 * C31927 * C31787 + C32295 * ae) +
                   C31757 * C32295 * ae) +
         (C32231 + C32295 * C31969) * ae) /
        C31512;
    const double C1065 = C31927 * C32134 + C32231 * C31969;
    const double C2528 =
        2 * C31757 * C32231 + C31757 * (C32231 + C32295 * C31969);
    const double C7033 = C32540 * C353;
    const double C6624 = C32540 * C633;
    const double C6408 = C32540 * C231;
    const double C7773 = C32550 * C231;
    const double C15947 = C32550 * C231;
    const double C6209 = C32540 * C233;
    const double C7393 = C32540 * C336;
    const double C8838 = C32550 * C336;
    const double C17027 = C32550 * C336;
    const double C7031 = C32540 * C338;
    const double C6626 = C32540 * C623;
    const double C6213 = C32540 * C878;
    const double C6622 = C32540 * C1076;
    const double C7045 = C32540 * C1975;
    const double C31791 = C31777 + C31789;
    const double C31806 = C31794 + C31804;
    const double C31799 = 2 * C31793;
    const double C31797 = ae * C31793;
    const double C32274 = C31757 * C31793;
    const double C32297 = C31927 * C31793;
    const double C874 =
        (2 * C31927 * C31779 + C31927 * (C31779 + C31793 * C31936)) / C31512;
    const double C883 =
        (3 * (C31779 + C31793 * C31936) +
         C31927 * (2 * C31927 * C31793 + C31927 * (C31793 + C31815 * C31936))) /
        C31512;
    const double C1072 = (C31757 * (C31779 + C31793 * C31936) +
                          (C32137 + C31856 * C31936) * ae) /
                         C31512;
    const double C32304 = C31777 + C32303;
    const double C32310 = 2 * C32308;
    const double C32346 = C31757 * C32308;
    const double C32375 = C32372 + C31855;
    const double C31790 = C31780 + C31788;
    const double C31970 = C31967 + C31968;
    const double C6215 = C32540 * C887;
    const double C6219 = C32540 * C888;
    const double C6620 = C32540 * C1091;
    const double C7043 = C32540 * C1984;
    const double C31859 = C31852 + C31857;
    const double C31888 = C31885 * ae;
    const double C31902 = 2 * C31885;
    const double C32243 = C31885 * C31936;
    const double C32276 = C31885 * C31969;
    const double C32298 = C31927 * C31885;
    const double C32420 = C31757 * C31885;
    const double C31890 = C31889 + C31884;
    const double C32393 = C32388 + C31884;
    const double C32320 = C31852 + C32319;
    const double C32328 = 2 * C32326;
    const double C32349 = C32326 * C31969;
    const double C32435 = C31757 * C32326;
    const double C32434 = C32326 * ae;
    const double C32377 = C31852 + C32374;
    const double C32396 = 2 * C32389;
    const double C32394 = C32389 * ae;
    const double C31861 = C31860 + C31855;
    const double C31950 = C31865 + C31949;
    const double C31972 = C31865 + C31971;
    const double C32011 = 2 * C31992;
    const double C32034 = ae * C31992;
    const double C32033 = C31757 * C31992;
    const double C2537 =
        (2 * (ae * C31943 + C31757 * C31991) + ae * (C31943 + C31992 * C31969) +
         C31757 * (C31991 + ae * C31757 * C31992 +
                   C31757 * (ae * C31992 + C31757 * C31927 * C31802))) /
        C31517;
    const double C2531 =
        (2 * C31757 * C31943 + C31757 * (C31943 + C31992 * C31969)) / C31512;
    const double C32060 = C32056 + C32057;
    const double C32061 = 2 * C32055;
    const double C32059 = ae * C32055;
    const double C31831 = C31803 + C31829;
    const double C31830 = C31816 + C31828;
    const double C32006 = C31802 + C32004;
    const double C32078 = C32072 + C32073;
    const double C32119 = C31757 * C32116;
    const double C31910 = C31907 + C31904;
    const double C32021 = C31887 + C32019;
    const double C32080 = C31887 + C32075;
    const double C32121 = C32117 * C31969;
    const double C1971 =
        (2 * (C31757 * C31779 + C32137 * ae) +
         C31757 * (C31779 + C31757 * (C31757 * C31793 + C31878) +
                   C31757 * C31856 * ae) +
         (C32137 + C31856 * C31969) * ae) /
        C31512;
    const double C1081 =
        (C31927 * C31779 + C31757 * (C31757 * C31927 * C31793 + C32233 * ae) +
         C31757 * C32233 * ae) /
        C31512;
    const double C1066 = C31927 * C32137 + C32233 * C31969;
    const double C123 = 3 * (C32134 + C31864 * C31783) +
                        C31758 * (2 * C32137 + C31758 * C32139);
    const double C214 = C31927 * (2 * C32137 + C31758 * C32139);
    const double C220 = C32134 + C31864 * C31783 + C32139 * C31936;
    const double C319 = C31757 * (2 * C32137 + C31758 * C32139);
    const double C325 = C32134 + C31864 * C31783 + C32139 * C31969;
    const double C620 = C31757 * C31927 * C32139;
    const double C1086 =
        (C31770 + C31777 * C31936 +
         C31757 * (C31757 * (C31777 + C31787 * C31936) + C32241 * ae) +
         C31757 * C32241 * ae) /
        C31512;
    const double C1586 =
        (C31757 * (2 * C31927 * C31777 + C31927 * (C31777 + C31787 * C31936)) +
         (2 * C32231 + C31927 * C32241) * ae) /
        C31512;
    const double C870 = 3 * (C32134 + C31864 * C31936) +
                        C31927 * (2 * C32231 + C31927 * C32241);
    const double C1068 = C32134 + C31864 * C31936 + C32241 * C31969;
    const double C1580 = C31757 * (2 * C32231 + C31927 * C32241);
    const double C1967 = 3 * (C32134 + C31864 * C31969) +
                         C31757 * (2 * C32269 + C31757 * C32272);
    const double C6870 = C32540 * C1092;
    const double C6868 = C32540 * C1077;
    const double C31809 = C31758 * C31807;
    const double C31819 = 3 * C31807;
    const double C31814 = ae * C31807;
    const double C32280 = C31757 * C31807;
    const double C32300 = C31927 * C31807;
    const double C31825 = C31802 + C31821;
    const double C32337 = C31793 + C32336;
    const double C32413 = C31757 * C32409;
    const double C32312 = C31927 * C32311;
    const double C32354 = C31757 * C32311;
    const double C6201 =
        (4 * (2 * C31991 + C31927 * C32001) +
         C31927 *
             (3 * C32001 + C31927 * (2 * C31927 * C31802 +
                                     C31927 * (C31802 + C31826 * C31936)))) /
        C31517;
    const double C32014 = C31927 * C32013;
    const double C32017 = 3 * C32013;
    const double C32041 = ae * C32013;
    const double C32040 = C31757 * C32013;
    const double C32038 = C31992 + C32036;
    const double C32120 = 2 * C32114;
    const double C32118 = ae * C32114;
    const double C32065 = C31757 * C32062;
    const double C32074 = 3 * C32062;
    const double C32070 = ae * C32062;
    const double C32081 = C31802 + C32077;
    const double C31912 = C31758 * C31909;
    const double C31911 = C31909 * ae;
    const double C32246 = C31909 * C31936;
    const double C32282 = C31909 * C31969;
    const double C32301 = C31927 * C31909;
    const double C32364 = C31885 + C32363;
    const double C32414 = C32412 * C31969;
    const double C32424 = C31885 + C32421;
    const double C32330 = C31927 * C32329;
    const double C32357 = C32329 * C31969;
    const double C32398 = C31757 * C32395;
    const double C32442 = C32326 + C32439;
    const double C111 = (2 * C32909 * C32910) / C32572;
    const double C442 = C32910 / C32572;
    const double C210 = (2 * C32909 * C32912) / C32572;
    const double C440 = C32912 / C32572;
    const double C316 = (2 * C32909 * C32913) / C32572;
    const double C530 = C32913 / C32572;
    const double C5267 = (C32633 * std::pow(C32683, 2)) / C31517 + C32682;
    const double C32685 = C32684 * C32683;
    const double C32690 = C32684 / C31524;
    const double C32885 = C32684 / C31512;
    const double C32882 = C32548 * C32684;
    const double C32692 = C32691 * C32683;
    const double C32891 = C32681 * C32691;
    const double C32890 = 2 * C32691;
    const double C32926 = C32691 / C32874;
    const double C6131 = C32691 / C32908;
    const double C17826 = C32691 / C31518;
    const double C32922 = C32887 / C31512;
    const double C5268 = (-2 * C32548 * C32887) / C31512;
    const double C32938 = C32914 / C31517;
    const double C31553 = C31548 + 0;
    const double C31552 = C31547 / C31518;
    const double C31538 = C31523 - C31534;
    const double C31537 = C31510 * C31532;
    const double C756 =
        ((-C31532 / C31512) / C31518 - (0 * be) / C31512) / C31518 -
        (0 * be) / C31512;
    const double C6132 = -C31532 / C31512;
    const double C15844 = (-C31532 / C31512) / C31518 - (0 * be) / C31512;
    const double C32544 = C32543 / C31517;
    const double C32902 = 2 * C32868;
    const double C7797 = C32866 * C888;
    const double C7791 = C32866 * C887;
    const double C7787 = C32866 * C878;
    const double C7783 = C32866 * C248;
    const double C7779 = C32866 * C233;
    const double C7775 = C32866 * C247;
    const double C7771 = C32866 * C232;
    const double C8061 = C32866 * C246;
    const double C8057 = C32866 * C231;
    const double C8375 = C32866 * C623;
    const double C8371 = C32866 * C633;
    const double C8367 = C32866 * C1076;
    const double C8363 = C32866 * C1091;
    const double C8866 = C32866 * C338;
    const double C8862 = C32866 * C353;
    const double C8858 = C32866 * C1077;
    const double C8854 = C32866 * C1092;
    const double C8840 = C32866 * C352;
    const double C8836 = C32866 * C337;
    const double C9300 = C32866 * C351;
    const double C9296 = C32866 * C336;
    const double C12893 = C32866 * C1975;
    const double C12889 = C32866 * C1984;
    const double C927 = C748 * C878;
    const double C921 = C748 * C887;
    const double C911 = C748 * C248;
    const double C905 = C748 * C233;
    const double C899 = C748 * C247;
    const double C893 = C748 * C232;
    const double C1256 = C748 * C246;
    const double C1250 = C748 * C231;
    const double C1616 = C748 * C623;
    const double C1610 = C748 * C633;
    const double C1604 = C748 * C1076;
    const double C1598 = C748 * C1091;
    const double C2024 = C748 * C1975;
    const double C2018 = C748 * C1984;
    const double C2008 = C748 * C353;
    const double C2002 = C748 * C338;
    const double C1996 = C748 * C352;
    const double C1990 = C748 * C337;
    const double C2354 = C748 * C351;
    const double C2348 = C748 * C336;
    const double C2548 = C748 * C1092;
    const double C2542 = C748 * C1077;
    const double C32552 = C32551 / C31512;
    const double C32906 = C32872 / C31524;
    const double C32934 = C32866 - C32901;
    const double C15837 = -C32901;
    const double C901 = C749 * C246;
    const double C895 = C749 * C231;
    const double C1998 = C749 * C351;
    const double C1992 = C749 * C336;
    const double C32948 = C32933 + C32541;
    const double C31684 = C31678 + 0;
    const double C31651 = C31597 * C31632;
    const double C10356 =
        ((-C31598 / C31512) / C31518 -
         ((C32644 - (C31597 * C31632) / C31512) * be) / C31512) /
            C31518 -
        ((C31597 * ((-C31632 / C31512) / C31518 - (0 * be) / C31512) + C32731) *
         be) /
            C31512;
    const double C10357 =
        ((-C31632 / C31512) / C31518 - (0 * be) / C31512) / C31518 -
        (0 * be) / C31512;
    const double C20883 = (-C31632 / C31512) / C31518 - (0 * be) / C31512;
    const double C31664 = C31660 - C31654;
    const double C32726 = C32725 / C31517;
    const double C1741 =
        (((0 - (C31597 * C31598) / C31512) * ae) / C31512 - (0 * be) / C31524) /
            C31518 +
        ((C31597 * (((C32644 - (C31597 * 2 * C31600) / C31512) * ae) / C31512 -
                    C31598 / C31524) +
          C32886) *
         ae) /
            C31512 +
        (0 * ae) / C31512 - C31600 / C31517;
    const double C32918 = 2 * C32884;
    const double C32733 = C32732 / C31512;
    const double C32931 = C32897 / C31524;
    const double C32945 = C32886 - C32928;
    const double C20880 = -C32928;
    const double C32952 = C32940 + C32722;
    const double C31687 = C31683 / C31518;
    const double C129 =
        (2 * (C31758 * C31871 + C32134 * ae) +
         C31758 * (C31871 + C31758 * C31875 + C31758 * C31864 * ae) +
         (C32134 + C31864 * C31783) * ae) /
        C31512;
    const double C230 =
        (C31927 * (C31871 + C31758 * C31875 + C32137 * ae)) / C31512;
    const double C234 =
        (C31758 * C31871 + C32134 * ae + C31875 * C31936) / C31512;
    const double C335 =
        (C31757 * (C31871 + C31758 * C31875 + C32137 * ae)) / C31512;
    const double C339 =
        (C31758 * C31871 + C32134 * ae + C31875 * C31969) / C31512;
    const double C624 = (C31757 * C31927 * C31875) / C31512;
    const double C1979 =
        (3 * (C31770 + C31757 * C32271 + C32269 * ae) +
         C31757 * (2 * C32271 +
                   C31757 * (C31777 + C31757 * (C31757 * C31787 + C31855) +
                             C31757 * C31852 * ae) +
                   C32272 * ae) +
         (2 * C32269 + C31757 * C32272) * ae) /
        C31512;
    const double C135 = (3 * (C31770 + C31777 * C31783) +
                         C31758 * (2 * C31779 + C31758 * C31791)) /
                        C31512;
    const double C224 = (C31927 * (2 * C31779 + C31758 * C31791)) / C31512;
    const double C240 = (C31770 + C31777 * C31783 + C31791 * C31936) / C31512;
    const double C329 = (C31757 * (2 * C31779 + C31758 * C31791) +
                         (2 * C32137 + C31758 * C32139) * ae) /
                        C31512;
    const double C345 =
        (C31770 + C31777 * C31783 + C31757 * (C31757 * C31791 + C32139 * ae) +
         C31757 * C32139 * ae) /
        C31512;
    const double C630 =
        (C31757 * C31927 * C31791 + C31927 * C32139 * ae) / C31512;
    const double C873 =
        (2 * C31927 * C31791 + C31927 * (C31791 + C31807 * C31936)) / C31512;
    const double C31808 = C31758 * C31806;
    const double C31813 = 2 * C31806;
    const double C31976 = C31757 * C31806;
    const double C31994 = C31927 * C31806;
    const double C31801 = C31786 + C31797;
    const double C32277 = C32274 + C31878;
    const double C6197 =
        (4 * (2 * C32294 + C31927 * C32304) +
         C31927 *
             (3 * C32304 + C31927 * (2 * C31927 * C31787 +
                                     C31927 * (C31787 + C31803 * C31936)))) /
        C31512;
    const double C32350 = C32346 + C32347;
    const double C32379 = C31757 * C32375;
    const double C32387 = 2 * C32375;
    const double C144 =
        (3 * (C31776 + ae * C31779 + C31758 * C31790) +
         ae * (2 * C31779 + C31758 * C31791) +
         C31758 *
             (2 * C31790 + ae * C31791 +
              C31758 * (C31786 + ae * C31758 * C31787 +
                        C31758 * (ae * C31787 + C31758 * std::pow(C31760, 6) *
                                                    bs[6] * C31768)))) /
        C31517;
    const double C245 =
        ((yP - yQ) * (C31776 + ae * C31779 + C31758 * C31790)) / C31517;
    const double C249 =
        (ae * C31770 + C31758 * C31776 + C31790 * std::pow(yP - yQ, 2)) /
        C31517;
    const double C350 = (ae * (C31767 * C31763 * C31851 +
                               C31758 * (C31758 * C31865 + C31864 * ae) +
                               C31758 * C31864 * ae) +
                         C31757 * (C31776 + ae * C31779 + C31758 * C31790)) /
                        C31517;
    const double C354 = (ae * C31770 + C31758 * C31776 + ae * C31757 * C31875 +
                         C31757 * (ae * C31875 + C31757 * C31790)) /
                        C31517;
    const double C634 =
        (ae * C31927 * C31875 + C31757 * C31927 * C31790) / C31517;
    const double C886 = (2 * C31927 * C31790 +
                         C31927 * (C31790 + C31806 * std::pow(C31927, 2))) /
                        C31517;
    const double C31886 = C31859 * ae;
    const double C32148 = C31758 * C31859;
    const double C32151 = 3 * C31859;
    const double C32235 = C31927 * C31859;
    const double C32281 = C31757 * C31859;
    const double C1071 = (C31757 * (C31791 + C31807 * C31936) +
                          (C32139 + C31859 * C31936) * ae) /
                         C31512;
    const double C867 =
        2 * C31927 * C32139 + C31927 * (C32139 + C31859 * C31936);
    const double C1062 = C31757 * (C32139 + C31859 * C31936);
    const double C1964 =
        2 * C31757 * C32139 + C31757 * (C32139 + C31859 * C31969);
    const double C32422 = C32419 + C31888;
    const double C32244 = C31856 + C32243;
    const double C32278 = C31856 + C32276;
    const double C32362 = 2 * C32298;
    const double C32411 = C31757 * C32298;
    const double C32410 = C32298 * ae;
    const double C2535 =
        (2 * (C31757 * C32297 + C32233 * ae) +
         C31757 * (C32297 + C31757 * (C31757 * C31927 * C31815 + C32298 * ae) +
                   C31757 * C32298 * ae) +
         (C32233 + C32298 * C31969) * ae) /
        C31512;
    const double C2529 =
        2 * C31757 * C32233 + C31757 * (C32233 + C32298 * C31969);
    const double C32425 = 2 * C32420;
    const double C32423 = C32420 * ae;
    const double C31891 = C31758 * C31890;
    const double C31899 = 2 * C31890;
    const double C31952 = C31890 * C31936;
    const double C31977 = C31890 * C31969;
    const double C31995 = C31927 * C31890;
    const double C32101 = ae * C31890;
    const double C32100 = C31757 * C31890;
    const double C32397 = C31757 * C32393;
    const double C32321 = C31927 * C32320;
    const double C32325 = 3 * C32320;
    const double C32356 = C31757 * C32320;
    const double C32355 = C32320 * ae;
    const double C7016 =
        (2 * (C31757 * C32304 + C32241 * ae) +
         C31757 * (C32304 + C31757 * (C31757 * C32311 + C32320 * ae) +
                   C31757 * C32320 * ae) +
         (C32241 + C32320 * C31969) * ae) /
        C31512;
    const double C7013 =
        2 * C31757 * C32241 + C31757 * (C32241 + C32320 * C31969);
    const double C32351 = C32295 + C32349;
    const double C32440 = 2 * C32435;
    const double C32438 = C32435 * ae;
    const double C32441 = C32437 + C32434;
    const double C32380 = C31757 * C32377;
    const double C32392 = 3 * C32377;
    const double C32390 = C32377 * ae;
    const double C31877 = C31758 * C31861;
    const double C31882 = 2 * C31861;
    const double C31945 = C31927 * C31861;
    const double C31975 = ae * C31861;
    const double C31974 = C31757 * C31861;
    const double C1090 = (ae * (C31875 + C31861 * C31936) +
                          C31757 * (C31790 + C31806 * C31936)) /
                         C31517;
    const double C1983 = (2 * (ae * C31875 + C31757 * C31790) +
                          ae * (C31875 + C31861 * std::pow(C31757, 2)) +
                          C31757 * (C31790 + ae * C31757 * C31861 +
                                    C31757 * (ae * C31861 + C31757 * C31806))) /
                         C31517;
    const double C877 =
        (2 * C31927 * C31875 + C31927 * (C31875 + C31861 * C31936)) / C31512;
    const double C1075 = (C31757 * (C31875 + C31861 * C31936)) / C31512;
    const double C1974 =
        (2 * C31757 * C31875 + C31757 * (C31875 + C31861 * C31969)) / C31512;
    const double C1095 =
        (C31776 + C31786 * C31936 + ae * C31757 * C31950 +
         C31757 * (ae * C31950 + C31757 * (C31786 + C31802 * C31936))) /
        C31517;
    const double C1589 =
        (ae * (2 * C31943 + C31927 * C31950) +
         C31757 * (2 * C31927 * C31786 + C31927 * (C31786 + C31802 * C31936))) /
        C31517;
    const double C879 = (3 * (C31871 + C31865 * C31936) +
                         C31927 * (2 * C31943 + C31927 * C31950)) /
                        C31512;
    const double C1083 = (C31871 + C31865 * C31936 + C31950 * C31969) / C31512;
    const double C1583 = (C31757 * (2 * C31943 + C31927 * C31950)) / C31512;
    const double C7017 =
        (2 * C31757 * C31950 + C31757 * (C31950 + C32013 * C31969)) / C31512;
    const double C1985 =
        (3 * (C31776 + ae * C31966 + C31757 * C31970) +
         ae * (2 * C31966 + C31757 * C31972) +
         C31757 * (2 * C31970 + ae * C31972 +
                   C31757 * (C31786 + ae * C31757 * C31858 +
                             C31757 * (ae * C31858 + C31757 * C31802)))) /
        C31517;
    const double C1976 = (3 * (C31871 + C31865 * C31969) +
                          C31757 * (2 * C31966 + C31757 * C31972)) /
                         C31512;
    const double C32037 = C32034 + C32035;
    const double C7039 = C32540 * C2537;
    const double C12881 = C32866 * C2537;
    const double C7041 = C32540 * C2531;
    const double C12885 = C32866 * C2531;
    const double C32064 = C31757 * C32060;
    const double C32069 = 2 * C32060;
    const double C32063 = C31786 + C32059;
    const double C31833 = C31758 * C31831;
    const double C884 =
        (3 * (C31791 + C31807 * C31936) +
         C31927 * (2 * C31927 * C31807 + C31927 * (C31807 + C31831 * C31936))) /
        C31512;
    const double C31832 = C31758 * C31830;
    const double C32027 = C31830 * C31936;
    const double C32093 = C31927 * C31830;
    const double C32102 = C31757 * C31830;
    const double C889 =
        (3 * (C31790 + C31806 * C31936) +
         C31927 * (2 * C31927 * C31806 + C31927 * (C31806 + C31830 * C31936))) /
        C31517;
    const double C32007 = C31927 * C32006;
    const double C32042 = C31757 * C32006;
    const double C7022 =
        (2 * (ae * C31950 + C31757 * C32001) + ae * (C31950 + C32013 * C31969) +
         C31757 * (C32001 + ae * C31757 * C32013 +
                   C31757 * (ae * C32013 + C31757 * C32006))) /
        C31517;
    const double C32082 = C31757 * C32078;
    const double C32123 = C32115 + C32119;
    const double C31913 = C31758 * C31910;
    const double C32048 = C31910 * C31936;
    const double C32094 = C31927 * C31910;
    const double C32103 = C31910 * C31969;
    const double C32022 = C31927 * C32021;
    const double C32043 = C32021 * C31969;
    const double C32083 = C31757 * C32080;
    const double C32124 = C32018 + C32121;
    const double C31811 = C31799 + C31809;
    const double C6404 =
        (4 * (2 * C32297 + C31927 * C32337) +
         C31927 * (3 * C32337 +
                   C31927 * (2 * C31927 * C31815 +
                             C31927 * (C31815 + C31758 * C31827 * C31936)))) /
        C31512;
    const double C32313 = C32310 + C32312;
    const double C6221 = C32540 * C6201;
    const double C32015 = C32011 + C32014;
    const double C7018 = (3 * (C31943 + C31992 * C31969) +
                          C31757 * (2 * C32033 + C31757 * C32038)) /
                         C31512;
    const double C32122 = C32003 + C32118;
    const double C32067 = C32061 + C32065;
    const double C31914 = C31902 + C31912;
    const double C32247 = C31859 + C32246;
    const double C32284 = C31859 + C32282;
    const double C32365 = C31927 * C32364;
    const double C32416 = C32298 + C32414;
    const double C32427 = C31757 * C32424;
    const double C32331 = C32328 + C32330;
    const double C32359 = C32320 + C32357;
    const double C32400 = C32396 + C32398;
    const double C32444 = C31757 * C32442;
    const double C32686 = C32685 / C31517;
    const double C32915 = 2 * C32882;
    const double C32693 = C32692 / C31512;
    const double C32925 = C32891 / C31524;
    const double C32942 = C32885 - C32922;
    const double C15051 = -C32922;
    const double C32951 = C32938 + C32682;
    const double C31556 = C31553 * be;
    const double C7794 = C31538 * C883;
    const double C7792 = C31538 * C874;
    const double C7788 = C31538 * C868;
    const double C7784 = C31538 * C239;
    const double C7780 = C31538 * C219;
    const double C7776 = C31538 * C226;
    const double C7772 = C31538 * C216;
    const double C8066 = C31538 * C220;
    const double C8062 = C31538 * C225;
    const double C8058 = C31538 * C215;
    const double C8372 = C31538 * C619;
    const double C8368 = C31538 * C629;
    const double C8364 = C31538 * C1063;
    const double C8360 = C31538 * C1072;
    const double C8863 = C31538 * C324;
    const double C8859 = C31538 * C344;
    const double C8855 = C31538 * C1066;
    const double C8851 = C31538 * C1081;
    const double C8841 = C31538 * C331;
    const double C8837 = C31538 * C321;
    const double C9079 = C31538 * C620;
    const double C9301 = C31538 * C330;
    const double C9297 = C31538 * C320;
    const double C12890 = C31538 * C1965;
    const double C12886 = C31538 * C1971;
    const double C13304 = C31538 * C325;
    const double C31542 = C31510 * C31538;
    const double C31570 = C31538 / C31518;
    const double C31541 = C31537 / C31512;
    const double C908 = C756 * C220;
    const double C902 = C756 * C225;
    const double C896 = C756 * C215;
    const double C1253 = C756 * C214;
    const double C1611 = C756 * C620;
    const double C2005 = C756 * C325;
    const double C1999 = C756 * C330;
    const double C1993 = C756 * C320;
    const double C2351 = C756 * C319;
    const double C6218 = C6132 * C882;
    const double C6216 = C6132 * C870;
    const double C6214 = C6132 * C875;
    const double C6212 = C6132 * C869;
    const double C6210 = C6132 * C238;
    const double C6208 = C6132 * C218;
    const double C6206 = C6132 * C227;
    const double C6204 = C6132 * C217;
    const double C6421 = C6132 * C883;
    const double C6417 = C6132 * C874;
    const double C6415 = C6132 * C868;
    const double C6413 = C6132 * C239;
    const double C6411 = C6132 * C219;
    const double C6409 = C6132 * C226;
    const double C6407 = C6132 * C216;
    const double C6625 = C6132 * C618;
    const double C6623 = C6132 * C628;
    const double C6621 = C6132 * C1064;
    const double C6619 = C6132 * C1073;
    const double C6617 = C6132 * C1580;
    const double C6615 = C6132 * C1586;
    const double C6877 = C6132 * C1086;
    const double C6875 = C6132 * C1068;
    const double C6869 = C6132 * C1080;
    const double C6867 = C6132 * C1065;
    const double C7044 = C6132 * C1966;
    const double C7042 = C6132 * C1972;
    const double C7040 = C6132 * C2528;
    const double C7038 = C6132 * C2534;
    const double C7032 = C6132 * C343;
    const double C7030 = C6132 * C323;
    const double C7028 = C6132 * C332;
    const double C7026 = C6132 * C322;
    const double C7220 = C6132 * C1072;
    const double C7218 = C6132 * C1063;
    const double C7214 = C6132 * C1081;
    const double C7212 = C6132 * C1066;
    const double C7210 = C6132 * C629;
    const double C7208 = C6132 * C619;
    const double C7398 = C6132 * C344;
    const double C7396 = C6132 * C324;
    const double C7394 = C6132 * C331;
    const double C7392 = C6132 * C321;
    const double C12148 = C6132 * C1967;
    const double C12334 = C6132 * C1971;
    const double C12332 = C6132 * C1965;
    const double C15968 = C15844 * C883;
    const double C15966 = C15844 * C874;
    const double C15962 = C15844 * C868;
    const double C15958 = C15844 * C239;
    const double C15954 = C15844 * C219;
    const double C15950 = C15844 * C226;
    const double C15946 = C15844 * C216;
    const double C16240 = C15844 * C220;
    const double C16236 = C15844 * C225;
    const double C16232 = C15844 * C215;
    const double C16546 = C15844 * C619;
    const double C16542 = C15844 * C629;
    const double C16538 = C15844 * C1063;
    const double C16534 = C15844 * C1072;
    const double C16860 = C15844 * C1081;
    const double C16856 = C15844 * C1066;
    const double C17054 = C15844 * C1965;
    const double C17050 = C15844 * C1971;
    const double C17038 = C15844 * C344;
    const double C17034 = C15844 * C324;
    const double C17030 = C15844 * C331;
    const double C17026 = C15844 * C321;
    const double C17272 = C15844 * C620;
    const double C17498 = C15844 * C325;
    const double C17494 = C15844 * C330;
    const double C17490 = C15844 * C320;
    const double C32545 = C32541 - C32544;
    const double C32935 = C32902 / C31512;
    const double C32553 = C32549 - C32552;
    const double C32949 = C32934 / C31518;
    const double C15971 = C15837 * C888;
    const double C15965 = C15837 * C887;
    const double C15961 = C15837 * C878;
    const double C15957 = C15837 * C248;
    const double C15953 = C15837 * C233;
    const double C15949 = C15837 * C247;
    const double C15945 = C15837 * C232;
    const double C16235 = C15837 * C246;
    const double C16231 = C15837 * C231;
    const double C16549 = C15837 * C623;
    const double C16545 = C15837 * C633;
    const double C16541 = C15837 * C1076;
    const double C16537 = C15837 * C1091;
    const double C16859 = C15837 * C1092;
    const double C16855 = C15837 * C1077;
    const double C17057 = C15837 * C1975;
    const double C17053 = C15837 * C1984;
    const double C17049 = C15837 * C2531;
    const double C17045 = C15837 * C2537;
    const double C17037 = C15837 * C353;
    const double C17033 = C15837 * C338;
    const double C17029 = C15837 * C352;
    const double C17025 = C15837 * C337;
    const double C17493 = C15837 * C351;
    const double C17489 = C15837 * C336;
    const double C5419 = C32948 * C878;
    const double C5413 = C32948 * C887;
    const double C5403 = C32948 * C248;
    const double C5397 = C32948 * C233;
    const double C5391 = C32948 * C247;
    const double C5385 = C32948 * C232;
    const double C5708 = C32948 * C246;
    const double C5702 = C32948 * C231;
    const double C6052 = C32948 * C623;
    const double C6046 = C32948 * C633;
    const double C6040 = C32948 * C1076;
    const double C6034 = C32948 * C1091;
    const double C10614 = C32948 * C1975;
    const double C10608 = C32948 * C1984;
    const double C10598 = C32948 * C353;
    const double C10592 = C32948 * C338;
    const double C10586 = C32948 * C352;
    const double C10580 = C32948 * C337;
    const double C10936 = C32948 * C351;
    const double C10930 = C32948 * C336;
    const double C11118 = C32948 * C1092;
    const double C11112 = C32948 * C1077;
    const double C31688 = C31684 * be;
    const double C31659 = C31651 / C31512;
    const double C31668 = C31597 * C31664;
    const double C31697 = C31664 / C31518;
    const double C32727 = C32722 - C32726;
    const double C32941 = C32918 / C31512;
    const double C32734 = C32730 - C32733;
    const double C32955 = C32945 / C31518;
    const double C10355 =
        ((-(0 * be) / C31512) / C31518 -
         ((0 - (C31597 * C31598) / C31512) * be) / C31512) /
            C31518 -
        ((C31597 * ((-C31598 / C31512) / C31518 -
                    ((C32644 - (C31597 * C31632) / C31512) * be) / C31512) +
          C20880) *
         be) /
            C31512 +
        (-C31632 / C31512) / C31518 - (0 * be) / C31512;
    const double C897 = C32905 * C230;
    const double C1252 = C749 * C230;
    const double C5389 = C32905 * C230;
    const double C8059 = C32550 * C230;
    const double C16233 = C32550 * C230;
    const double C17946 = C17823 * C230;
    const double C907 = C749 * C234;
    const double C1262 = C748 * C234;
    const double C5714 = C32948 * C234;
    const double C6412 = C32540 * C234;
    const double C7781 = C32550 * C234;
    const double C8065 = C32866 * C234;
    const double C15955 = C32550 * C234;
    const double C16239 = C15837 * C234;
    const double C1994 = C32905 * C335;
    const double C2350 = C749 * C335;
    const double C9298 = C32550 * C335;
    const double C10584 = C32905 * C335;
    const double C17491 = C32550 * C335;
    const double C19065 = C17823 * C335;
    const double C2004 = C749 * C339;
    const double C2360 = C748 * C339;
    const double C7397 = C32540 * C339;
    const double C8864 = C32550 * C339;
    const double C10942 = C32948 * C339;
    const double C13303 = C32866 * C339;
    const double C17035 = C32550 * C339;
    const double C17497 = C15837 * C339;
    const double C1614 = C749 * C624;
    const double C4742 = C748 * C624;
    const double C7209 = C32540 * C624;
    const double C8373 = C32550 * C624;
    const double C9078 = C32866 * C624;
    const double C16547 = C32550 * C624;
    const double C17271 = C15837 * C624;
    const double C26775 = C32948 * C624;
    const double C12150 = C6132 * C1979;
    const double C1259 = C756 * C224;
    const double C914 = C756 * C240;
    const double C8070 = C31538 * C240;
    const double C16244 = C15844 * C240;
    const double C2357 = C756 * C329;
    const double C2011 = C756 * C345;
    const double C13308 = C31538 * C345;
    const double C17502 = C15844 * C345;
    const double C1605 = C756 * C630;
    const double C9083 = C31538 * C630;
    const double C17276 = C15844 * C630;
    const double C916 = C756 * C873;
    const double C8078 = C31538 * C873;
    const double C16252 = C15844 * C873;
    const double C31820 = C31813 + C31814;
    const double C31810 = C31801 + C31808;
    const double C6220 = C6132 * C6197;
    const double C32381 = C31777 + C32379;
    const double C903 = C32905 * C245;
    const double C1258 = C749 * C245;
    const double C5395 = C32905 * C245;
    const double C8063 = C32550 * C245;
    const double C16237 = C32550 * C245;
    const double C17952 = C17823 * C245;
    const double C913 = C749 * C249;
    const double C1268 = C748 * C249;
    const double C5720 = C32948 * C249;
    const double C6414 = C32540 * C249;
    const double C7785 = C32550 * C249;
    const double C8069 = C32866 * C249;
    const double C15959 = C32550 * C249;
    const double C16243 = C15837 * C249;
    const double C2000 = C32905 * C350;
    const double C2356 = C749 * C350;
    const double C9302 = C32550 * C350;
    const double C10590 = C32905 * C350;
    const double C17495 = C32550 * C350;
    const double C19071 = C17823 * C350;
    const double C2010 = C749 * C354;
    const double C2366 = C748 * C354;
    const double C7399 = C32540 * C354;
    const double C8860 = C32550 * C354;
    const double C10948 = C32948 * C354;
    const double C13307 = C32866 * C354;
    const double C17039 = C32550 * C354;
    const double C17501 = C15837 * C354;
    const double C1608 = C749 * C634;
    const double C4748 = C748 * C634;
    const double C7211 = C32540 * C634;
    const double C8369 = C32550 * C634;
    const double C9082 = C32866 * C634;
    const double C16543 = C32550 * C634;
    const double C17275 = C15837 * C634;
    const double C26781 = C32948 * C634;
    const double C919 = C749 * C886;
    const double C6418 = C32540 * C886;
    const double C7793 = C32550 * C886;
    const double C8077 = C32866 * C886;
    const double C15967 = C32550 * C886;
    const double C16251 = C15837 * C886;
    const double C32283 = C32280 + C31886;
    const double C1970 =
        (2 * (C31757 * C31791 + C32139 * ae) +
         C31757 * (C31791 + C31757 * (C31757 * C31807 + C31886) +
                   C31757 * C31859 * ae) +
         (C32139 + C31859 * C31969) * ae) /
        C31512;
    const double C32149 = C32147 + C32148;
    const double C1082 =
        (C31927 * C31791 + C31757 * (C31757 * C31927 * C31807 + C32235 * ae) +
         C31757 * C32235 * ae) /
        C31512;
    const double C2536 =
        (2 * (C31757 * C32300 + C32235 * ae) +
         C31757 * (C32300 + C31757 * (C31757 * C31927 * C31831 + C32301 * ae) +
                   C31757 * C32301 * ae) +
         (C32235 + C32301 * C31969) * ae) /
        C31512;
    const double C1067 = C31927 * C32139 + C32235 * C31969;
    const double C2530 =
        2 * C31757 * C32235 + C31757 * (C32235 + C32301 * C31969);
    const double C1593 = C756 * C1071;
    const double C9091 = C31538 * C1071;
    const double C20387 = C15844 * C1071;
    const double C922 = C756 * C867;
    const double C8074 = C31538 * C867;
    const double C16248 = C15844 * C867;
    const double C1599 = C756 * C1062;
    const double C9087 = C31538 * C1062;
    const double C20383 = C15844 * C1062;
    const double C2019 = C756 * C1964;
    const double C14088 = C31538 * C1964;
    const double C23148 = C15844 * C1964;
    const double C32426 = C31757 * C32422;
    const double C1087 =
        (C31779 + C31793 * C31936 +
         C31757 * (C31757 * (C31793 + C31815 * C31936) + C32244 * ae) +
         C31757 * C32244 * ae) /
        C31512;
    const double C1587 =
        (C31757 * (2 * C31927 * C31793 + C31927 * (C31793 + C31815 * C31936)) +
         (2 * C32233 + C31927 * C32244) * ae) /
        C31512;
    const double C6522 =
        (C31757 * (3 * C32337 +
                   C31927 * (2 * C31927 * C31815 +
                             C31927 * (C31815 + C31758 * C31827 * C31936))) +
         (3 * C32244 +
          C31927 * (2 * C32298 + C31927 * (C31885 + C31905 * C31936))) *
             ae) /
        C31512;
    const double C7389 =
        (2 * (C31757 * C32337 + C32244 * ae) +
         C31757 * (C32337 +
                   C31757 * (C31757 * (C31815 + C31758 * C31827 * C31936) +
                             C32364 * ae) +
                   C31757 * C32364 * ae) +
         (C32244 + C32364 * C31969) * ae) /
        C31512;
    const double C871 = 3 * (C32137 + C31856 * C31936) +
                        C31927 * (2 * C32233 + C31927 * C32244);
    const double C1069 = C32137 + C31856 * C31936 + C32244 * C31969;
    const double C1581 = C31757 * (2 * C32233 + C31927 * C32244);
    const double C7387 =
        2 * C31757 * C32244 + C31757 * (C32244 + C32364 * C31969);
    const double C1980 =
        (3 * (C31779 + C31757 * C32277 + C32275 * ae) +
         C31757 * (2 * C32277 +
                   C31757 * (C31793 + C31757 * (C31757 * C31815 + C31888) +
                             C31757 * C31885 * ae) +
                   C32278 * ae) +
         (2 * C32275 + C31757 * C32278) * ae) /
        C31512;
    const double C1968 = 3 * (C32137 + C31856 * C31969) +
                         C31757 * (2 * C32275 + C31757 * C32278);
    const double C32415 = C32413 + C32410;
    const double C12878 = C31538 * C2535;
    const double C14676 = C6132 * C2535;
    const double C17042 = C15844 * C2535;
    const double C12882 = C31538 * C2529;
    const double C14674 = C6132 * C2529;
    const double C17046 = C15844 * C2529;
    const double C31892 = C31858 + C31891;
    const double C31953 = C31861 + C31952;
    const double C31979 = C31861 + C31977;
    const double C32047 = 2 * C31995;
    const double C32092 = ae * C31995;
    const double C32091 = C31757 * C31995;
    const double C32106 = 2 * C32100;
    const double C32104 = ae * C32100;
    const double C32399 = C31787 + C32397;
    const double C32322 = C32318 + C32321;
    const double C32358 = C32354 + C32355;
    const double C7034 = C6132 * C7016;
    const double C7036 = C6132 * C7013;
    const double C7019 =
        (3 * (C32294 + C31757 * C32350 + C32348 * ae) +
         C31757 * (2 * C32350 +
                   C31757 * (C32308 +
                             C31757 * (C31757 * C31927 * C31803 + C32326 * ae) +
                             C31757 * C32326 * ae) +
                   C32351 * ae) +
         (2 * C32348 + C31757 * C32351) * ae) /
        C31512;
    const double C7014 = 3 * (C32231 + C32295 * C31969) +
                         C31757 * (2 * C32348 + C31757 * C32351);
    const double C32443 = C31757 * C32441;
    const double C32382 = C32378 + C32380;
    const double C31879 = C31865 + C31877;
    const double C1093 = (C31927 * C31790 + ae * C31757 * C31945 +
                          C31757 * (ae * C31945 + C31757 * C31927 * C31806)) /
                         C31517;
    const double C2538 =
        (2 * (ae * C31945 + C31757 * C31994) + ae * (C31945 + C31995 * C31969) +
         C31757 * (C31994 + ae * C31757 * C31995 +
                   C31757 * (ae * C31995 + C31757 * C31927 * C31830))) /
        C31517;
    const double C1078 = (C31927 * C31875 + C31945 * C31969) / C31512;
    const double C2532 =
        (2 * C31757 * C31945 + C31757 * (C31945 + C31995 * C31969)) / C31512;
    const double C31978 = C31975 + C31976;
    const double C1596 = C749 * C1090;
    const double C7221 = C32540 * C1090;
    const double C8361 = C32550 * C1090;
    const double C9090 = C32866 * C1090;
    const double C16535 = C32550 * C1090;
    const double C20386 = C15837 * C1090;
    const double C2016 = C749 * C1983;
    const double C12335 = C32540 * C1983;
    const double C12887 = C32550 * C1983;
    const double C14091 = C32866 * C1983;
    const double C17051 = C32550 * C1983;
    const double C23151 = C15837 * C1983;
    const double C925 = C749 * C877;
    const double C6416 = C32540 * C877;
    const double C7789 = C32550 * C877;
    const double C8073 = C32866 * C877;
    const double C15963 = C32550 * C877;
    const double C16247 = C15837 * C877;
    const double C1602 = C749 * C1075;
    const double C7219 = C32540 * C1075;
    const double C8365 = C32550 * C1075;
    const double C9086 = C32866 * C1075;
    const double C16539 = C32550 * C1075;
    const double C20382 = C15837 * C1075;
    const double C2022 = C749 * C1974;
    const double C12333 = C32540 * C1974;
    const double C12891 = C32550 * C1974;
    const double C14087 = C32866 * C1974;
    const double C17055 = C32550 * C1974;
    const double C23147 = C15837 * C1974;
    const double C6878 = C32540 * C1095;
    const double C8846 = C32866 * C1095;
    const double C16865 = C15837 * C1095;
    const double C6616 = C32540 * C1589;
    const double C8355 = C32866 * C1589;
    const double C16529 = C15837 * C1589;
    const double C6217 = C32540 * C879;
    const double C7801 = C32866 * C879;
    const double C15975 = C15837 * C879;
    const double C6876 = C32540 * C1083;
    const double C8850 = C32866 * C1083;
    const double C16869 = C15837 * C1083;
    const double C6618 = C32540 * C1583;
    const double C8359 = C32866 * C1583;
    const double C16533 = C15837 * C1583;
    const double C7037 = C32540 * C7017;
    const double C12151 = C32540 * C1985;
    const double C13817 = C32866 * C1985;
    const double C22877 = C15837 * C1985;
    const double C12149 = C32540 * C1976;
    const double C13821 = C32866 * C1976;
    const double C22881 = C15837 * C1976;
    const double C7023 =
        (3 * (C31991 + ae * C32033 + C31757 * C32037) +
         ae * (2 * C32033 + C31757 * C32038) +
         C31757 *
             (2 * C32037 + ae * C32038 +
              C31757 * (C32003 + ae * C31757 * C32018 +
                        C31757 * (ae * C32018 + C31757 * C31927 * C31826)))) /
        C31517;
    const double C32076 = C32069 + C32070;
    const double C32066 = C32063 + C32064;
    const double C31835 = C31823 + C31833;
    const double C31834 = C31825 + C31832;
    const double C32028 = C31806 + C32027;
    const double C32095 = C31757 * C32093;
    const double C32105 = C32101 + C32102;
    const double C6422 = C32540 * C889;
    const double C7795 = C32550 * C889;
    const double C15969 = C32550 * C889;
    const double C32008 = C32005 + C32007;
    const double C32044 = C32041 + C32042;
    const double C7035 = C32540 * C7022;
    const double C32084 = C32081 + C32082;
    const double C32125 = C31757 * C32123;
    const double C31915 = C31887 + C31913;
    const double C32049 = C31890 + C32048;
    const double C32096 = C32094 * C31969;
    const double C32107 = C31890 + C32103;
    const double C32023 = C32020 + C32022;
    const double C32045 = C32013 + C32043;
    const double C32085 = C32079 + C32083;
    const double C32126 = C31757 * C32124;
    const double C136 = (4 * (2 * C31779 + C31758 * C31791) +
                         C31758 * (3 * C31791 + C31758 * C31811)) /
                        C31512;
    const double C223 = (C31927 * (3 * C31791 + C31758 * C31811)) / C31512;
    const double C241 =
        (2 * C31779 + C31758 * C31791 + C31811 * C31936) / C31512;
    const double C6200 =
        (5 * (3 * C32304 + C31927 * C32313) +
         C31927 * (4 * C32313 +
                   C31927 * (3 * C32311 +
                             C31927 * (2 * C31927 * C31803 +
                                       C31927 * (C31803 + C31827 * C31936))))) /
        C31512;
    const double C6311 =
        (C31757 * (3 * C32304 + C31927 * C32313) +
         (3 * C32241 +
          C31927 * (2 * C32295 + C31927 * (C31852 + C31853 * C31936))) *
             ae) /
        C31512;
    const double C6198 = (4 * (2 * C31943 + C31927 * C31950) +
                          C31927 * (3 * C31950 + C31927 * C32015)) /
                         C31512;
    const double C6312 = (C31757 * (3 * C31950 + C31927 * C32015)) / C31512;
    const double C6313 =
        (2 * C31943 + C31927 * C31950 + C32015 * C31969) / C31512;
    const double C12431 = C32540 * C7018;
    const double C12142 = (4 * (2 * C31966 + C31757 * C31972) +
                           C31757 * (3 * C31972 + C31757 * C32067)) /
                          C31512;
    const double C31916 = C31914 * ae;
    const double C32152 = C31758 * C31914;
    const double C32287 = C31927 * C31914;
    const double C1088 =
        (C31791 + C31807 * C31936 +
         C31757 * (C31757 * (C31807 + C31831 * C31936) + C32247 * ae) +
         C31757 * C32247 * ae) /
        C31512;
    const double C1588 =
        (C31757 * (2 * C31927 * C31807 + C31927 * (C31807 + C31831 * C31936)) +
         (2 * C32235 + C31927 * C32247) * ae) /
        C31512;
    const double C872 = 3 * (C32139 + C31859 * C31936) +
                        C31927 * (2 * C32235 + C31927 * C32247);
    const double C1070 = C32139 + C31859 * C31936 + C32247 * C31969;
    const double C1582 = C31757 * (2 * C32235 + C31927 * C32247);
    const double C1969 = 3 * (C32139 + C31859 * C31969) +
                         C31757 * (2 * C32281 + C31757 * C32284);
    const double C32366 = C32362 + C32365;
    const double C12241 = 3 * (C32233 + C32298 * C31969) +
                          C31757 * (2 * C32411 + C31757 * C32416);
    const double C32429 = C32425 + C32427;
    const double C32332 = C31927 * C32331;
    const double C7015 = 3 * (C32241 + C32320 * C31969) +
                         C31757 * (2 * C32356 + C31757 * C32359);
    const double C32402 = C31757 * C32400;
    const double C32446 = C32440 + C32444;
    const double C32687 = C32682 - C32686;
    const double C32939 = C32915 / C31512;
    const double C32694 = C32690 - C32693;
    const double C32953 = C32942 / C31518;
    const double C31558 = C31556 / C31512;
    const double C7805 = C7776 + C7777;
    const double C7803 = C7772 + C7773;
    const double C8870 = C8841 + C8842;
    const double C8868 = C8837 + C8838;
    const double C31546 = C31542 + C32550;
    const double C31573 = C31570 - C31572;
    const double C5272 = C31570 + (0 * ae) / C31512;
    const double C31545 = C32540 - C31541;
    const double C6231 = C6218 + C6219;
    const double C6229 = C6214 + C6215;
    const double C6228 = C6212 + C6213;
    const double C6227 = C6210 + C6211;
    const double C6226 = C6208 + C6209;
    const double C6225 = C6206 + C6207;
    const double C6224 = C6204 + C6205;
    const double C6424 = C6409 + C6410;
    const double C6423 = C6407 + C6408;
    const double C6634 = C6625 + C6626;
    const double C6633 = C6623 + C6624;
    const double C6632 = C6621 + C6622;
    const double C6631 = C6619 + C6620;
    const double C6888 = C6869 + C6870;
    const double C6887 = C6867 + C6868;
    const double C7055 = C7044 + C7045;
    const double C7054 = C7042 + C7043;
    const double C7053 = C7040 + C7041;
    const double C7052 = C7038 + C7039;
    const double C7049 = C7032 + C7033;
    const double C7048 = C7030 + C7031;
    const double C7047 = C7028 + C7029;
    const double C7046 = C7026 + C7027;
    const double C7401 = C7394 + C7395;
    const double C7400 = C7392 + C7393;
    const double C15979 = C15950 + C15951;
    const double C15977 = C15946 + C15947;
    const double C17061 = C17030 + C17031;
    const double C17059 = C17026 + C17027;
    const double C17976 = C32545 * C878;
    const double C17970 = C32545 * C887;
    const double C17960 = C32545 * C248;
    const double C17954 = C32545 * C233;
    const double C17948 = C32545 * C247;
    const double C17942 = C32545 * C232;
    const double C18277 = C32545 * C249;
    const double C18271 = C32545 * C234;
    const double C18265 = C32545 * C246;
    const double C18259 = C32545 * C231;
    const double C18609 = C32545 * C623;
    const double C18603 = C32545 * C633;
    const double C18597 = C32545 * C1076;
    const double C18591 = C32545 * C1091;
    const double C19095 = C32545 * C338;
    const double C19089 = C32545 * C353;
    const double C19083 = C32545 * C1077;
    const double C19077 = C32545 * C1092;
    const double C19067 = C32545 * C352;
    const double C19061 = C32545 * C337;
    const double C19315 = C32545 * C634;
    const double C19309 = C32545 * C624;
    const double C19527 = C32545 * C351;
    const double C19521 = C32545 * C336;
    const double C24657 = C32545 * C1975;
    const double C24651 = C32545 * C1984;
    const double C24965 = C32545 * C354;
    const double C24959 = C32545 * C339;
    const double C32865 = C32545 * C32535;
    const double C32904 = C32870 + C32545;
    const double C5417 = C32935 * C877;
    const double C5411 = C32935 * C886;
    const double C5405 = C32935 * C249;
    const double C5399 = C32935 * C234;
    const double C5393 = C32935 * C246;
    const double C5387 = C32935 * C231;
    const double C5710 = C32935 * C245;
    const double C5704 = C32935 * C230;
    const double C6050 = C32935 * C624;
    const double C6044 = C32935 * C634;
    const double C6038 = C32935 * C1075;
    const double C6032 = C32935 * C1090;
    const double C10612 = C32935 * C1974;
    const double C10606 = C32935 * C1983;
    const double C10600 = C32935 * C354;
    const double C10594 = C32935 * C339;
    const double C10588 = C32935 * C351;
    const double C10582 = C32935 * C336;
    const double C10938 = C32935 * C350;
    const double C10932 = C32935 * C335;
    const double C17974 = C32553 * C877;
    const double C17968 = C32553 * C886;
    const double C17962 = C32553 * C249;
    const double C17956 = C32553 * C234;
    const double C17950 = C32553 * C246;
    const double C17944 = C32553 * C231;
    const double C18267 = C32553 * C245;
    const double C18261 = C32553 * C230;
    const double C18607 = C32553 * C624;
    const double C18601 = C32553 * C634;
    const double C18595 = C32553 * C1075;
    const double C18589 = C32553 * C1090;
    const double C19093 = C32553 * C339;
    const double C19087 = C32553 * C354;
    const double C19069 = C32553 * C351;
    const double C19063 = C32553 * C336;
    const double C19529 = C32553 * C350;
    const double C19523 = C32553 * C335;
    const double C24655 = C32553 * C1974;
    const double C24649 = C32553 * C1983;
    const double C32873 = C32553 / C31518;
    const double C32869 = C32553 * C32535;
    const double C2656 = C32949 - (C32545 * C32536) / C31512;
    const double C31690 = C31688 / C31512;
    const double C31663 = C32644 - C31659;
    const double C31672 = C31668 + C32731;
    const double C31700 = C31697 - C31699;
    const double C32894 = C32727 * C32721;
    const double C32930 = C32896 + C32727;
    const double C32898 = C32734 / C31518;
    const double C32895 = C32734 * C32721;
    const double C13607 = C32955 - (C32727 * C32723) / C31512;
    const double C930 = C896 + C897;
    const double C8081 = C8058 + C8059;
    const double C16255 = C16232 + C16233;
    const double C6425 = C6411 + C6412;
    const double C7807 = C7780 + C7781;
    const double C15981 = C15954 + C15955;
    const double C2027 = C1993 + C1994;
    const double C9304 = C9297 + C9298;
    const double C17505 = C17490 + C17491;
    const double C7402 = C7396 + C7397;
    const double C8881 = C8863 + C8864;
    const double C17063 = C17034 + C17035;
    const double C7226 = C7208 + C7209;
    const double C8386 = C8372 + C8373;
    const double C16560 = C16546 + C16547;
    const double C145 =
        (4 * (2 * C31790 + ae * C31791 + C31758 * C31810) +
         ae * (3 * C31791 + C31758 * C31811) +
         C31758 * (3 * C31810 + ae * C31811 +
                   C31758 * (2 * C31806 + ae * C31807 +
                             C31758 * (C31802 + ae * C31758 * C31803 +
                                       C31758 * (ae * C31803 +
                                                 C31758 * std::pow(C31762, 7) *
                                                     bs[7] * C31768))))) /
        C31517;
    const double C244 =
        ((yP - yQ) * (2 * C31790 + ae * C31791 + C31758 * C31810)) / C31517;
    const double C250 = (C31776 + ae * C31779 + C31758 * C31790 +
                         C31810 * std::pow(yP - yQ, 2)) /
                        C31517;
    const double C349 =
        (ae * (2 * (C31758 * C31865 + C31864 * ae) +
               C31758 * (C31865 + C31758 * C31861 + C31856 * ae) +
               (C31864 + C31852 * C31783) * ae) +
         C31757 * (2 * C31790 + ae * C31791 + C31758 * C31810)) /
        C31517;
    const double C6232 = C6220 + C6221;
    const double C32383 = C32381 + C32376;
    const double C933 = C902 + C903;
    const double C8083 = C8062 + C8063;
    const double C16257 = C16236 + C16237;
    const double C6426 = C6413 + C6414;
    const double C7809 = C7784 + C7785;
    const double C15983 = C15958 + C15959;
    const double C2030 = C1999 + C2000;
    const double C9306 = C9301 + C9302;
    const double C17507 = C17494 + C17495;
    const double C7403 = C7398 + C7399;
    const double C8879 = C8859 + C8860;
    const double C17065 = C17038 + C17039;
    const double C7227 = C7210 + C7211;
    const double C8384 = C8368 + C8369;
    const double C16558 = C16542 + C16543;
    const double C6428 = C6417 + C6418;
    const double C7813 = C7792 + C7793;
    const double C15987 = C15966 + C15967;
    const double C1981 =
        (3 * (C31791 + C31757 * C32283 + C32281 * ae) +
         C31757 * (2 * C32283 +
                   C31757 * (C31807 + C31757 * (C31757 * C31831 + C31911) +
                             C31757 * C31909 * ae) +
                   C32284 * ae) +
         (2 * C32281 + C31757 * C32284) * ae) /
        C31512;
    const double C2013 = C756 * C1970;
    const double C14092 = C31538 * C1970;
    const double C23152 = C15844 * C1970;
    const double C328 = (C31757 * (3 * C31791 + C31758 * C31811) +
                         (3 * C32139 + C31758 * C32149) * ae) /
                        C31512;
    const double C346 =
        (2 * C31779 + C31758 * C31791 +
         C31757 * (C31757 * C31811 + C32149 * ae) + C31757 * C32149 * ae) /
        C31512;
    const double C631 =
        (C31757 * C31927 * C31811 + C31927 * C32149 * ae) / C31512;
    const double C124 = 4 * (2 * C32137 + C31758 * C32139) +
                        C31758 * (3 * C32139 + C31758 * C32149);
    const double C213 = C31927 * (3 * C32139 + C31758 * C32149);
    const double C221 = 2 * C32137 + C31758 * C32139 + C32149 * C31936;
    const double C318 = C31757 * (3 * C32139 + C31758 * C32149);
    const double C326 = 2 * C32137 + C31758 * C32139 + C32149 * C31969;
    const double C621 = C31757 * C31927 * C32149;
    const double C1244 =
        2 * C31927 * C32149 + C31927 * (C32149 + C31914 * C31936);
    const double C1430 = C31757 * (C32149 + C31914 * C31936);
    const double C2342 =
        2 * C31757 * C32149 + C31757 * (C32149 + C31914 * C31969);
    const double C2551 = C756 * C1082;
    const double C13102 = C31538 * C1082;
    const double C17284 = C15844 * C1082;
    const double C2545 = C756 * C1067;
    const double C13098 = C31538 * C1067;
    const double C17280 = C15844 * C1067;
    const double C32428 = C31793 + C32426;
    const double C7224 = C6132 * C1087;
    const double C8843 = C31538 * C1087;
    const double C16862 = C15844 * C1087;
    const double C8352 = C31538 * C1587;
    const double C9965 = C6132 * C1587;
    const double C16526 = C15844 * C1587;
    const double C6419 = C6132 * C871;
    const double C7798 = C31538 * C871;
    const double C15972 = C15844 * C871;
    const double C7222 = C6132 * C1069;
    const double C8847 = C31538 * C1069;
    const double C16866 = C15844 * C1069;
    const double C8356 = C31538 * C1581;
    const double C9963 = C6132 * C1581;
    const double C16530 = C15844 * C1581;
    const double C12338 = C6132 * C1980;
    const double C13814 = C31538 * C1980;
    const double C22874 = C15844 * C1980;
    const double C12336 = C6132 * C1968;
    const double C13818 = C31538 * C1968;
    const double C22878 = C15844 * C1968;
    const double C12243 =
        (3 * (C32297 + C31757 * C32415 + C32411 * ae) +
         C31757 * (2 * C32415 +
                   C31757 * (C32409 +
                             C31757 * (C31757 * C31927 * C31758 * C31827 +
                                       C32412 * ae) +
                             C31757 * C32412 * ae) +
                   C32416 * ae) +
         (2 * C32411 + C31757 * C32416) * ae) /
        C31512;
    const double C31893 = C31892 + C31888;
    const double C1096 =
        (C31790 + C31806 * C31936 + ae * C31757 * C31953 +
         C31757 * (ae * C31953 + C31757 * (C31806 + C31830 * C31936))) /
        C31517;
    const double C1590 =
        (ae * (2 * C31945 + C31927 * C31953) +
         C31757 * (2 * C31927 * C31806 + C31927 * (C31806 + C31830 * C31936))) /
        C31517;
    const double C880 = (3 * (C31875 + C31861 * C31936) +
                         C31927 * (2 * C31945 + C31927 * C31953)) /
                        C31512;
    const double C1084 = (C31875 + C31861 * C31936 + C31953 * C31969) / C31512;
    const double C1584 = (C31757 * (2 * C31945 + C31927 * C31953)) / C31512;
    const double C1977 = (3 * (C31875 + C31861 * C31969) +
                          C31757 * (2 * C31974 + C31757 * C31979)) /
                         C31512;
    const double C32108 = C31806 + C32104;
    const double C32401 = C32399 + C32394;
    const double C6314 =
        (2 * C32294 + C31927 * C32304 +
         C31757 * (C31757 * C32313 + C32322 * ae) + C31757 * C32322 * ae) /
        C31512;
    const double C7551 =
        (2 * (C31757 * C32313 + C32322 * ae) +
         C31757 * (C32313 +
                   C31757 * (C31757 * (2 * C31927 * C31803 +
                                       C31927 * (C31803 + C31827 * C31936)) +
                             C32331 * ae) +
                   C31757 * C32331 * ae) +
         (C32322 + C32331 * C31969) * ae) /
        C31512;
    const double C6195 = 4 * (2 * C32231 + C31927 * C32241) +
                         C31927 * (3 * C32241 + C31927 * C32322);
    const double C6308 = C31757 * (3 * C32241 + C31927 * C32322);
    const double C6309 = 2 * C32231 + C31927 * C32241 + C32322 * C31969;
    const double C7549 =
        2 * C31757 * C32322 + C31757 * (C32322 + C32331 * C31969);
    const double C7021 =
        (3 * (C32304 + C31757 * C32358 + C32356 * ae) +
         C31757 * (2 * C32358 +
                   C31757 * (C32311 +
                             C31757 * (C31757 * (C31803 + C31827 * C31936) +
                                       C32329 * ae) +
                             C31757 * C32329 * ae) +
                   C32359 * ae) +
         (2 * C32356 + C31757 * C32359) * ae) /
        C31512;
    const double C12432 = C6132 * C7019;
    const double C12430 = C6132 * C7014;
    const double C32445 = C32308 + C32443;
    const double C12139 = 4 * (2 * C32269 + C31757 * C32272) +
                          C31757 * (3 * C32272 + C31757 * C32382);
    const double C31880 = C31879 + C31878;
    const double C2550 = C749 * C1093;
    const double C7215 = C32540 * C1093;
    const double C8852 = C32550 * C1093;
    const double C11120 = C32935 * C1093;
    const double C13101 = C32866 * C1093;
    const double C16861 = C32550 * C1093;
    const double C17283 = C15837 * C1093;
    const double C19075 = C32553 * C1093;
    const double C12879 = C32550 * C2538;
    const double C14677 = C32540 * C2538;
    const double C17043 = C32550 * C2538;
    const double C2544 = C749 * C1078;
    const double C7213 = C32540 * C1078;
    const double C8856 = C32550 * C1078;
    const double C11114 = C32935 * C1078;
    const double C13097 = C32866 * C1078;
    const double C16857 = C32550 * C1078;
    const double C17279 = C15837 * C1078;
    const double C19081 = C32553 * C1078;
    const double C12883 = C32550 * C2532;
    const double C14675 = C32540 * C2532;
    const double C17047 = C32550 * C2532;
    const double C1986 =
        (3 * (C31790 + ae * C31974 + C31757 * C31978) +
         ae * (2 * C31974 + C31757 * C31979) +
         C31757 * (2 * C31978 + ae * C31979 +
                   C31757 * (C31806 + ae * C31757 * C31890 +
                             C31757 * (ae * C31890 + C31757 * C31830)))) /
        C31517;
    const double C7231 = C7220 + C7221;
    const double C8380 = C8360 + C8361;
    const double C16554 = C16534 + C16535;
    const double C12341 = C12334 + C12335;
    const double C12898 = C12886 + C12887;
    const double C17070 = C17050 + C17051;
    const double C6427 = C6415 + C6416;
    const double C7811 = C7788 + C7789;
    const double C15985 = C15962 + C15963;
    const double C7230 = C7218 + C7219;
    const double C8382 = C8364 + C8365;
    const double C16556 = C16538 + C16539;
    const double C12340 = C12332 + C12333;
    const double C12900 = C12890 + C12891;
    const double C17072 = C17054 + C17055;
    const double C6891 = C6877 + C6878;
    const double C6629 = C6615 + C6616;
    const double C6230 = C6216 + C6217;
    const double C6890 = C6875 + C6876;
    const double C6630 = C6617 + C6618;
    const double C7051 = C7036 + C7037;
    const double C12157 = C12150 + C12151;
    const double C12156 = C12148 + C12149;
    const double C12433 = C32540 * C7023;
    const double C12145 =
        (4 * (2 * C31970 + ae * C31972 + C31757 * C32066) +
         ae * (3 * C31972 + C31757 * C32067) +
         C31757 *
             (3 * C32066 + ae * C32067 +
              C31757 * (2 * C32060 + ae * C32062 +
                        C31757 * (C31802 + ae * C31757 * C31887 +
                                  C31757 * (ae * C31887 + C31757 * C31826))))) /
        C31517;
    const double C31837 = C31758 * C31835;
    const double C1246 =
        (2 * C31927 * C31811 + C31927 * (C31811 + C31835 * C31936)) / C31512;
    const double C1432 = (C31757 * (C31811 + C31835 * C31936) +
                          (C32149 + C31914 * C31936) * ae) /
                         C31512;
    const double C31836 = C31758 * C31834;
    const double C31983 = C31757 * C31834;
    const double C31997 = C31927 * C31834;
    const double C885 = (2 * C31927 * C31810 +
                         C31927 * (C31810 + C31834 * std::pow(C31927, 2))) /
                        C31517;
    const double C890 =
        (3 * (C31810 + C31834 * C31936) +
         C31927 * (2 * C31927 * C31834 +
                   C31927 * (C31834 + (C31826 + ae * C31758 * C31827 +
                                       C31758 * (ae * C31827 +
                                                 C31758 * std::pow(C31760, 8) *
                                                     bs[8] * C31768)) *
                                          C31936))) /
        C31517;
    const double C6405 =
        (4 * (2 * C31994 + C31927 * C32028) +
         C31927 * (3 * C32028 +
                   C31927 * (2 * C31927 * C31830 +
                             C31927 * (C31830 + (ae * C31827 +
                                                 C31758 * std::pow(C31760, 8) *
                                                     bs[8] * C31768) *
                                                    C31936)))) /
        C31517;
    const double C6523 =
        (ae * (3 * C31953 +
               C31927 * (2 * C31995 + C31927 * (C31890 + C31910 * C31936))) +
         C31757 * (3 * C32028 +
                   C31927 * (2 * C31927 * C31830 +
                             C31927 * (C31830 + (ae * C31827 +
                                                 C31758 * std::pow(C31760, 8) *
                                                     bs[8] * C31768) *
                                                    C31936)))) /
        C31517;
    const double C32097 = C32092 + C32095;
    const double C32109 = C31757 * C32105;
    const double C6430 = C6421 + C6422;
    const double C7814 = C7794 + C7795;
    const double C15988 = C15968 + C15969;
    const double C6202 =
        (5 * (3 * C32001 + C31927 * C32008) +
         C31927 * (4 * C32008 +
                   C31927 * (3 * C32006 +
                             C31927 * (2 * C31927 * C31826 +
                                       C31927 * (C31826 + std::pow(C31760, 8) *
                                                              bs[8] * C31768 *
                                                              C31936))))) /
        C31517;
    const double C6317 =
        (ae * (3 * C31950 +
               C31927 * (2 * C31992 + C31927 * (C31858 + C31887 * C31936))) +
         C31757 * (3 * C32001 + C31927 * C32008)) /
        C31517;
    const double C6318 = (2 * C31991 + C31927 * C32001 + ae * C31757 * C32015 +
                          C31757 * (ae * C32015 + C31757 * C32008)) /
                         C31517;
    const double C7050 = C7034 + C7035;
    const double C32086 = C31757 * C32084;
    const double C32127 = C32122 + C32125;
    const double C31917 = C31915 + C31908;
    const double C32050 = C31927 * C32049;
    const double C7390 =
        (2 * (ae * C31953 + C31757 * C32028) + ae * (C31953 + C32049 * C31969) +
         C31757 * (C32028 + ae * C31757 * C32049 +
                   C31757 * (ae * C32049 +
                             C31757 * (C31830 + (ae * C31827 +
                                                 C31758 * std::pow(C31760, 8) *
                                                     bs[8] * C31768) *
                                                    C31936)))) /
        C31517;
    const double C7388 =
        (2 * C31757 * C31953 + C31757 * (C31953 + C32049 * C31969)) / C31512;
    const double C32098 = C31995 + C32096;
    const double C32110 = C31757 * C32107;
    const double C32024 = C31927 * C32023;
    const double C7552 =
        (2 * (ae * C32015 + C31757 * C32008) + ae * (C32015 + C32023 * C31969) +
         C31757 * (C32008 + ae * C31757 * C32023 +
                   C31757 * (ae * C32023 +
                             C31757 * (2 * C31927 * C31826 +
                                       C31927 * (C31826 + std::pow(C31760, 8) *
                                                              bs[8] * C31768 *
                                                              C31936))))) /
        C31517;
    const double C7550 =
        (2 * C31757 * C32015 + C31757 * (C32015 + C32023 * C31969)) / C31512;
    const double C7024 =
        (3 * (C32001 + ae * C32040 + C31757 * C32044) +
         ae * (2 * C32040 + C31757 * C32045) +
         C31757 * (2 * C32044 + ae * C32045 +
                   C31757 * (C32006 + ae * C31757 * C32021 +
                             C31757 * (ae * C32021 +
                                       C31757 * (C31826 + std::pow(C31760, 8) *
                                                              bs[8] * C31768 *
                                                              C31936))))) /
        C31517;
    const double C7020 = (3 * (C31950 + C32013 * C31969) +
                          C31757 * (2 * C32040 + C31757 * C32045)) /
                         C31512;
    const double C32087 = C31757 * C32085;
    const double C32128 = C32120 + C32126;
    const double C1271 = C756 * C241;
    const double C6611 = C6132 * C6311;
    const double C6223 = C32540 * C6198;
    const double C6614 = C32540 * C6312;
    const double C6882 = C32540 * C6313;
    const double C12155 = C32540 * C12142;
    const double C2344 =
        (2 * (C31757 * C31811 + C32149 * ae) +
         C31757 * (C31811 + C31757 * (C31757 * C31835 + C31916) +
                   C31757 * C31914 * ae) +
         (C32149 + C31914 * C31969) * ae) /
        C31512;
    const double C32153 = C32151 + C32152;
    const double C2194 =
        (C31927 * C31811 + C31757 * (C31757 * C31927 * C31835 + C32287 * ae) +
         C31757 * C32287 * ae) /
        C31512;
    const double C2192 = C31927 * C32149 + C32287 * C31969;
    const double C7203 =
        (2 * C32297 + C31927 * C32337 +
         C31757 * (C31757 * (2 * C31927 * C31815 +
                             C31927 * (C31815 + C31758 * C31827 * C31936)) +
                   C32366 * ae) +
         C31757 * C32366 * ae) /
        C31512;
    const double C6402 = 4 * (2 * C32233 + C31927 * C32244) +
                         C31927 * (3 * C32244 + C31927 * C32366);
    const double C6520 = C31757 * (3 * C32244 + C31927 * C32366);
    const double C7201 = 2 * C32233 + C31927 * C32244 + C32366 * C31969;
    const double C12327 = 4 * (2 * C32275 + C31757 * C32278) +
                          C31757 * (3 * C32278 + C31757 * C32429);
    const double C32333 = C32325 + C32332;
    const double C32404 = C32392 + C32402;
    const double C12425 = 4 * (2 * C32348 + C31757 * C32351) +
                          C31757 * (3 * C32351 + C31757 * C32446);
    const double C32888 = C32687 * C32681;
    const double C32924 = C32890 + C32687;
    const double C32892 = C32694 / C31518;
    const double C32889 = C32694 * C32681;
    const double C7665 = C32953 - (C32687 * C32683) / C31512;
    const double C31561 = C31552 - C31558;
    const double C31551 = C31546 * be;
    const double C17971 = C31573 * C867;
    const double C17965 = C31573 * C873;
    const double C17963 = C31573 * C240;
    const double C17957 = C31573 * C220;
    const double C17951 = C31573 * C225;
    const double C17945 = C31573 * C215;
    const double C18280 = C31573 * C241;
    const double C18268 = C31573 * C224;
    const double C18262 = C31573 * C214;
    const double C18604 = C31573 * C620;
    const double C18598 = C31573 * C630;
    const double C18592 = C31573 * C1062;
    const double C18586 = C31573 * C1071;
    const double C19090 = C31573 * C325;
    const double C19084 = C31573 * C345;
    const double C19078 = C31573 * C1067;
    const double C19072 = C31573 * C1082;
    const double C19070 = C31573 * C330;
    const double C19064 = C31573 * C320;
    const double C19530 = C31573 * C329;
    const double C19524 = C31573 * C319;
    const double C24652 = C31573 * C1964;
    const double C24646 = C31573 * C1970;
    const double C117 =
        (C31573 / C31518 + (0 * ae) / C31512) / C31518 - (0 * be) / C31512;
    const double C2665 = C31573 / C31518 - (0 * be) / C31512;
    const double C15056 = C31573 / C31518 + (0 * ae) / C31512;
    const double C5414 = C5272 * C867;
    const double C5408 = C5272 * C873;
    const double C5406 = C5272 * C240;
    const double C5400 = C5272 * C220;
    const double C5394 = C5272 * C225;
    const double C5388 = C5272 * C215;
    const double C5723 = C5272 * C241;
    const double C5711 = C5272 * C224;
    const double C5705 = C5272 * C214;
    const double C6047 = C5272 * C620;
    const double C6041 = C5272 * C630;
    const double C6035 = C5272 * C1062;
    const double C6029 = C5272 * C1071;
    const double C10609 = C5272 * C1964;
    const double C10603 = C5272 * C1970;
    const double C10601 = C5272 * C345;
    const double C10595 = C5272 * C325;
    const double C10589 = C5272 * C330;
    const double C10583 = C5272 * C320;
    const double C10939 = C5272 * C329;
    const double C10933 = C5272 * C319;
    const double C11121 = C5272 * C1082;
    const double C11115 = C5272 * C1067;
    const double C31550 = C31545 * ae;
    const double C754 =
        ((-C31513 / C31512) / C31518 - (C31531 * be) / C31512) / C31518 -
        ((C31510 * ((-C31520) / C31518 - (C31545 * be) / C31512) + C15837) *
         be) /
            C31512 +
        (-C31532 / C31512) / C31518 - (0 * be) / C31512;
    const double C755 =
        ((-C31520) / C31518 - (C31545 * be) / C31512) / C31518 -
        ((C31510 * ((-C31532 / C31512) / C31518 - (0 * be) / C31512) + C32550) *
         be) /
            C31512;
    const double C15843 = (-C31520) / C31518 - (C31545 * be) / C31512;
    const double C6241 = C6231 * C32644;
    const double C9717 = C6231 * C32886;
    const double C27398 = C6231 * C20880;
    const double C6239 = C6229 * C32644;
    const double C6885 = C6229 * C32952;
    const double C9712 = C6229 * C32886;
    const double C11365 = C6229 * C10352;
    const double C27393 = C6229 * C20880;
    const double C30917 = C6229 * C32727;
    const double C6238 = C6228 * C118;
    const double C6886 = C6228 * C1741;
    const double C9711 = C6228 * C3448;
    const double C11366 = C6228 * C10355;
    const double C6237 = C6227 * C32644;
    const double C6872 = C6227 * C32952;
    const double C9708 = C6227 * C32886;
    const double C11356 = C6227 * C10352;
    const double C27389 = C6227 * C20880;
    const double C30908 = C6227 * C32727;
    const double C6236 = C6226 * C118;
    const double C6871 = C6226 * C1741;
    const double C9707 = C6226 * C3448;
    const double C11355 = C6226 * C10355;
    const double C6235 = C6225 * C32644;
    const double C6864 = C6225 * C32952;
    const double C9704 = C6225 * C32886;
    const double C11350 = C6225 * C10352;
    const double C27385 = C6225 * C20880;
    const double C30902 = C6225 * C32727;
    const double C6234 = C6224 * C118;
    const double C6863 = C6224 * C1741;
    const double C9703 = C6224 * C3448;
    const double C11349 = C6224 * C10355;
    const double C6432 = C6424 * C32644;
    const double C7207 = C6424 * C32952;
    const double C9954 = C6424 * C32886;
    const double C11629 = C6424 * C10352;
    const double C27635 = C6424 * C20880;
    const double C31181 = C6424 * C32727;
    const double C6431 = C6423 * C118;
    const double C7206 = C6423 * C1741;
    const double C9953 = C6423 * C3448;
    const double C11628 = C6423 * C10355;
    const double C6642 = C6634 * C118;
    const double C6865 = C6634 * C1742;
    const double C7565 = C6634 * C1741;
    const double C9705 = C6634 * C3449;
    const double C10242 = C6634 * C3448;
    const double C11351 = C6634 * C10356;
    const double C11943 = C6634 * C10355;
    const double C27386 = C6634 * C20883;
    const double C6641 = C6633 * C32644;
    const double C6866 = C6633 * C32941;
    const double C7564 = C6633 * C32952;
    const double C9706 = C6633 * C32731;
    const double C10241 = C6633 * C32886;
    const double C11352 = C6633 * C10353;
    const double C11942 = C6633 * C10352;
    const double C27387 = C6633 * C32731;
    const double C27916 = C6633 * C20880;
    const double C30904 = C6633 * C32734;
    const double C31494 = C6633 * C32727;
    const double C6640 = C6632 * C118;
    const double C6873 = C6632 * C1742;
    const double C7559 = C6632 * C1741;
    const double C9709 = C6632 * C3449;
    const double C10238 = C6632 * C3448;
    const double C11357 = C6632 * C10356;
    const double C11937 = C6632 * C10355;
    const double C27390 = C6632 * C20883;
    const double C6639 = C6631 * C32644;
    const double C6874 = C6631 * C32941;
    const double C7558 = C6631 * C32952;
    const double C9710 = C6631 * C32731;
    const double C10237 = C6631 * C32886;
    const double C11358 = C6631 * C10353;
    const double C11936 = C6631 * C10352;
    const double C27391 = C6631 * C32731;
    const double C27912 = C6631 * C20880;
    const double C30910 = C6631 * C32734;
    const double C31488 = C6631 * C32727;
    const double C6895 = C6888 * C32919;
    const double C7562 = C6888 * C32941;
    const double C10239 = C6888 * C32731;
    const double C11354 = C6888 * C32919;
    const double C11940 = C6888 * C10353;
    const double C27914 = C6888 * C32731;
    const double C30906 = C6888 * C24419;
    const double C31492 = C6888 * C32734;
    const double C6894 = C6887 * C1743;
    const double C7563 = C6887 * C1742;
    const double C10240 = C6887 * C3449;
    const double C11353 = C6887 * C10357;
    const double C11941 = C6887 * C10356;
    const double C27915 = C6887 * C20883;
    const double C7561 = C7053 * C1743;
    const double C11939 = C7053 * C10357;
    const double C7560 = C7052 * C32919;
    const double C11938 = C7052 * C32919;
    const double C14431 = C7052 * C32932;
    const double C28121 = C7052 * C32932;
    const double C31490 = C7052 * C24419;
    const double C32900 = C32865 / C31512;
    const double C32936 = C32904 / C31518;
    const double C32937 = C32906 + C32873;
    const double C2658 = C32873 - C32551 / C31524;
    const double C32903 = C32869 / C31512;
    const double C2796 = C2656 * C233;
    const double C2788 = C2656 * C248;
    const double C2774 = C2656 * C247;
    const double C2766 = C2656 * C232;
    const double C3050 = C2656 * C246;
    const double C3042 = C2656 * C231;
    const double C3340 = C2656 * C623;
    const double C3332 = C2656 * C633;
    const double C3678 = C2656 * C338;
    const double C3670 = C2656 * C353;
    const double C3656 = C2656 * C352;
    const double C3648 = C2656 * C337;
    const double C3964 = C2656 * C351;
    const double C3956 = C2656 * C336;
    const double C31692 = C31687 - C31690;
    const double C31667 = C31663 * ae;
    const double C20882 = (-C31649) / C31518 - (C31663 * be) / C31512;
    const double C31676 = C31672 * be;
    const double C30905 = C6887 * C31700;
    const double C31491 = C7053 * C31700;
    const double C12014 =
        (C31700 / C31518 + (0 * ae) / C31512) / C31518 - (0 * be) / C31512;
    const double C13614 = C31700 / C31518 - (0 * be) / C31512;
    const double C22674 = C31700 / C31518 + (0 * ae) / C31512;
    const double C32927 = C32894 / C31512;
    const double C32946 = C32930 / C31518;
    const double C32947 = C32931 + C32898;
    const double C13609 = C32898 - C32732 / C31524;
    const double C32929 = C32895 / C31512;
    const double C14438 = C6227 * C13607;
    const double C14425 = C6225 * C13607;
    const double C14669 = C6424 * C13607;
    const double C14948 = C6633 * C13607;
    const double C6433 = C6425 * C118;
    const double C7216 = C6425 * C1741;
    const double C9957 = C6425 * C3448;
    const double C11634 = C6425 * C10355;
    const double C7234 = C7226 * C1742;
    const double C9955 = C7226 * C3449;
    const double C11630 = C7226 * C10356;
    const double C27636 = C7226 * C20883;
    const double C1260 = C32905 * C244;
    const double C2780 = C32920 * C244;
    const double C5712 = C32905 * C244;
    const double C15171 = C32920 * C244;
    const double C18269 = C17823 * C244;
    const double C915 = C32905 * C250;
    const double C1270 = C749 * C250;
    const double C5407 = C32905 * C250;
    const double C5722 = C32935 * C250;
    const double C8071 = C32550 * C250;
    const double C16245 = C32550 * C250;
    const double C17964 = C17823 * C250;
    const double C18279 = C32553 * C250;
    const double C2358 = C32905 * C349;
    const double C3662 = C32920 * C349;
    const double C10940 = C32905 * C349;
    const double C19531 = C17823 * C349;
    const double C21096 = C32920 * C349;
    const double C6242 = C6232 * C32644;
    const double C12141 =
        (4 * (2 * C32271 + C31757 * C32383 + C32272 * ae) +
         C31757 *
             (3 * C32383 +
              C31757 * (2 * C32375 +
                        C31757 * (C31787 + C31757 * (C31757 * C31803 + C31884) +
                                  C31757 * C31853 * ae) +
                        C32377 * ae) +
              C32382 * ae) +
         (3 * C32272 + C31757 * C32382) * ae) /
        C31512;
    const double C6434 = C6426 * C32644;
    const double C7217 = C6426 * C32952;
    const double C9958 = C6426 * C32886;
    const double C11635 = C6426 * C10352;
    const double C27639 = C6426 * C20880;
    const double C31187 = C6426 * C32727;
    const double C7235 = C7227 * C32941;
    const double C9956 = C7227 * C32731;
    const double C11631 = C7227 * C10353;
    const double C27637 = C7227 * C32731;
    const double C31183 = C7227 * C32734;
    const double C6436 = C6428 * C32644;
    const double C9962 = C6428 * C32886;
    const double C27643 = C6428 * C20880;
    const double C2369 = C756 * C346;
    const double C10951 = C5272 * C346;
    const double C24968 = C31573 * C346;
    const double C4751 = C756 * C631;
    const double C19318 = C31573 * C631;
    const double C26784 = C5272 * C631;
    const double C1265 = C756 * C221;
    const double C5717 = C5272 * C221;
    const double C18274 = C31573 * C221;
    const double C2363 = C756 * C326;
    const double C10945 = C5272 * C326;
    const double C24962 = C31573 * C326;
    const double C4745 = C756 * C621;
    const double C19312 = C31573 * C621;
    const double C26778 = C5272 * C621;
    const double C32430 = C32428 + C32423;
    const double C31894 = C31758 * C31893;
    const double C31898 = 3 * C31893;
    const double C31947 = C31927 * C31893;
    const double C31982 = ae * C31893;
    const double C31981 = C31757 * C31893;
    const double C7225 = C32540 * C1096;
    const double C8844 = C32550 * C1096;
    const double C16863 = C32550 * C1096;
    const double C8353 = C32550 * C1590;
    const double C9966 = C32540 * C1590;
    const double C16527 = C32550 * C1590;
    const double C6420 = C32540 * C880;
    const double C7799 = C32550 * C880;
    const double C15973 = C32550 * C880;
    const double C7223 = C32540 * C1084;
    const double C8848 = C32550 * C1084;
    const double C16867 = C32550 * C1084;
    const double C8357 = C32550 * C1584;
    const double C9964 = C32540 * C1584;
    const double C16531 = C32550 * C1584;
    const double C12337 = C32540 * C1977;
    const double C13819 = C32550 * C1977;
    const double C22879 = C32550 * C1977;
    const double C32403 = C31757 * C32401;
    const double C6879 = C6132 * C6314;
    const double C6222 = C6132 * C6195;
    const double C6613 = C6132 * C6308;
    const double C6881 = C6132 * C6309;
    const double C12434 = C12430 + C12431;
    const double C32447 = C32445 + C32438;
    const double C12154 = C6132 * C12139;
    const double C355 =
        (C31776 + ae * C31779 + C31758 * C31790 + ae * C31757 * C31880 +
         C31757 * (ae * C31880 + C31757 * C31810)) /
        C31517;
    const double C635 =
        (ae * C31927 * C31880 + C31757 * C31927 * C31810) / C31517;
    const double C1089 = (ae * (C31880 + C31893 * C31936) +
                          C31757 * (C31810 + C31834 * C31936)) /
                         C31517;
    const double C1982 = (2 * (ae * C31880 + C31757 * C31810) +
                          ae * (C31880 + C31893 * std::pow(C31757, 2)) +
                          C31757 * (C31810 + ae * C31757 * C31893 +
                                    C31757 * (ae * C31893 + C31757 * C31834))) /
                         C31517;
    const double C130 = (3 * (C31871 + C31758 * C31875 + C32137 * ae) +
                         C31758 * (2 * C31875 + C31758 * C31880 + C32139 * ae) +
                         (2 * C32137 + C31758 * C32139) * ae) /
                        C31512;
    const double C229 =
        (C31927 * (2 * C31875 + C31758 * C31880 + C32139 * ae)) / C31512;
    const double C235 =
        (C31871 + C31758 * C31875 + C32137 * ae + C31880 * C31936) / C31512;
    const double C334 =
        (C31757 * (2 * C31875 + C31758 * C31880 + C32139 * ae)) / C31512;
    const double C340 =
        (C31871 + C31758 * C31875 + C32137 * ae + C31880 * C31969) / C31512;
    const double C625 = (C31757 * C31927 * C31880) / C31512;
    const double C876 =
        (2 * C31927 * C31880 + C31927 * (C31880 + C31893 * C31936)) / C31512;
    const double C1074 = (C31757 * (C31880 + C31893 * C31936)) / C31512;
    const double C1973 =
        (2 * C31757 * C31880 + C31757 * (C31880 + C31893 * C31969)) / C31512;
    const double C7229 = C7214 + C7215;
    const double C8875 = C8851 + C8852;
    const double C16873 = C16860 + C16861;
    const double C12894 = C12878 + C12879;
    const double C14679 = C14676 + C14677;
    const double C17066 = C17042 + C17043;
    const double C7228 = C7212 + C7213;
    const double C8877 = C8855 + C8856;
    const double C16871 = C16856 + C16857;
    const double C12896 = C12882 + C12883;
    const double C14678 = C14674 + C14675;
    const double C17068 = C17046 + C17047;
    const double C12339 = C32540 * C1986;
    const double C13815 = C32550 * C1986;
    const double C22875 = C32550 * C1986;
    const double C7239 = C7231 * C32941;
    const double C9960 = C7231 * C32731;
    const double C11637 = C7231 * C10353;
    const double C27641 = C7231 * C32731;
    const double C31189 = C7231 * C32734;
    const double C6435 = C6427 * C118;
    const double C9961 = C6427 * C3448;
    const double C7238 = C7230 * C1742;
    const double C9959 = C7230 * C3449;
    const double C11636 = C7230 * C10356;
    const double C27640 = C7230 * C20883;
    const double C6898 = C6891 * C32919;
    const double C7556 = C6891 * C32941;
    const double C10235 = C6891 * C32731;
    const double C11360 = C6891 * C32919;
    const double C11934 = C6891 * C10353;
    const double C27910 = C6891 * C32731;
    const double C30912 = C6891 * C24419;
    const double C31486 = C6891 * C32734;
    const double C6637 = C6629 * C32644;
    const double C6883 = C6629 * C32941;
    const double C9714 = C6629 * C32731;
    const double C10233 = C6629 * C32886;
    const double C11363 = C6629 * C10353;
    const double C27395 = C6629 * C32731;
    const double C27908 = C6629 * C20880;
    const double C30915 = C6629 * C32734;
    const double C6240 = C6230 * C118;
    const double C9718 = C6230 * C3448;
    const double C6897 = C6890 * C1743;
    const double C7557 = C6890 * C1742;
    const double C10236 = C6890 * C3449;
    const double C11359 = C6890 * C10357;
    const double C11935 = C6890 * C10356;
    const double C27911 = C6890 * C20883;
    const double C30911 = C6890 * C31700;
    const double C6638 = C6630 * C118;
    const double C6884 = C6630 * C1742;
    const double C9713 = C6630 * C3449;
    const double C10234 = C6630 * C3448;
    const double C11364 = C6630 * C10356;
    const double C27394 = C6630 * C20883;
    const double C7555 = C7051 * C1743;
    const double C11933 = C7051 * C10357;
    const double C31485 = C7051 * C31700;
    const double C12435 = C12432 + C12433;
    const double C12153 = C32540 * C12145;
    const double C31839 = C31819 + C31837;
    const double C31838 = C31820 + C31836;
    const double C917 = C32905 * C885;
    const double C5409 = C32905 * C885;
    const double C8079 = C32550 * C885;
    const double C16253 = C32550 * C885;
    const double C17966 = C17823 * C885;
    const double C32111 = C32108 + C32109;
    const double C6438 = C6430 * C32644;
    const double C6612 = C32540 * C6317;
    const double C6880 = C32540 * C6318;
    const double C7554 = C7050 * C32919;
    const double C11932 = C7050 * C32919;
    const double C14432 = C7050 * C32932;
    const double C28122 = C7050 * C32932;
    const double C31484 = C7050 * C24419;
    const double C32088 = C32076 + C32086;
    const double C31918 = C31758 * C31917;
    const double C31955 = C31917 * C31936;
    const double C31984 = C31917 * C31969;
    const double C31998 = C31927 * C31917;
    const double C32051 = C32047 + C32050;
    const double C12244 =
        (3 * (C31994 + ae * C32091 + C31757 * C32097) +
         ae * (2 * C32091 + C31757 * C32098) +
         C31757 * (2 * C32097 + ae * C32098 +
                   C31757 * (C32093 + ae * C31757 * C32094 +
                             C31757 * (ae * C32094 +
                                       C31757 * C31927 *
                                           (ae * C31827 +
                                            C31758 * std::pow(C31760, 8) *
                                                bs[8] * C31768))))) /
        C31517;
    const double C12242 = (3 * (C31945 + C31995 * C31969) +
                           C31757 * (2 * C32091 + C31757 * C32098)) /
                          C31512;
    const double C32112 = C32106 + C32110;
    const double C32025 = C32017 + C32024;
    const double C32089 = C32074 + C32087;
    const double C12428 =
        (4 * (2 * C32037 + ae * C32038 + C31757 * C32127) +
         ae * (3 * C32038 + C31757 * C32128) +
         C31757 * (3 * C32127 + ae * C32128 +
                   C31757 * (2 * C32123 + ae * C32124 +
                             C31757 * (C32116 + ae * C31757 * C32117 +
                                       C31757 * (ae * C32117 +
                                                 C31757 * C31927 *
                                                     std::pow(C31760, 8) *
                                                     bs[8] * C31768))))) /
        C31517;
    const double C12426 = (4 * (2 * C32033 + C31757 * C32038) +
                           C31757 * (3 * C32038 + C31757 * C32128)) /
                          C31512;
    const double C125 = 5 * (3 * C32139 + C31758 * C32149) +
                        C31758 * (4 * C32149 + C31758 * C32153);
    const double C222 = 3 * C32139 + C31758 * C32149 + C32153 * C31936;
    const double C327 = 3 * C32139 + C31758 * C32149 + C32153 * C31969;
    const double C444 = C31927 * (4 * C32149 + C31758 * C32153);
    const double C532 = C31757 * (4 * C32149 + C31758 * C32153);
    const double C622 = C31757 * C31927 * C32153;
    const double C6316 =
        (3 * C32304 + C31927 * C32313 +
         C31757 * (C31757 * (3 * C32311 +
                             C31927 * (2 * C31927 * C31803 +
                                       C31927 * (C31803 + C31827 * C31936))) +
                   C32333 * ae) +
         C31757 * C32333 * ae) /
        C31512;
    const double C6608 =
        (C31757 * (4 * C32313 +
                   C31927 * (3 * C32311 +
                             C31927 * (2 * C31927 * C31803 +
                                       C31927 * (C31803 + C31827 * C31936)))) +
         (4 * C32322 + C31927 * C32333) * ae) /
        C31512;
    const double C6196 = 5 * (3 * C32241 + C31927 * C32322) +
                         C31927 * (4 * C32322 + C31927 * C32333);
    const double C6310 = 3 * C32241 + C31927 * C32322 + C32333 * C31969;
    const double C6606 = C31757 * (4 * C32322 + C31927 * C32333);
    const double C12140 = 5 * (3 * C32272 + C31757 * C32382) +
                          C31757 * (4 * C32382 + C31757 * C32404);
    const double C32921 = C32888 / C31512;
    const double C32943 = C32924 / C31518;
    const double C32944 = C32925 + C32892;
    const double C7667 = C32892 - C32692 / C31524;
    const double C32923 = C32889 / C31512;
    const double C31555 = C31551 / C31512;
    const double C17982 = C17951 + C17952;
    const double C17979 = C17945 + C17946;
    const double C19101 = C19070 + C19071;
    const double C19098 = C19064 + C19065;
    const double C2789 = C2665 * C221;
    const double C2781 = C2665 * C241;
    const double C2779 = C2665 * C224;
    const double C2771 = C2665 * C214;
    const double C3055 = C2665 * C223;
    const double C3047 = C2665 * C213;
    const double C3333 = C2665 * C621;
    const double C3325 = C2665 * C631;
    const double C3671 = C2665 * C326;
    const double C3663 = C2665 * C346;
    const double C3661 = C2665 * C329;
    const double C3653 = C2665 * C319;
    const double C3969 = C2665 * C328;
    const double C3961 = C2665 * C318;
    const double C15180 = C15056 * C221;
    const double C15172 = C15056 * C241;
    const double C15170 = C15056 * C224;
    const double C15162 = C15056 * C214;
    const double C15446 = C15056 * C223;
    const double C15438 = C15056 * C213;
    const double C15724 = C15056 * C621;
    const double C15716 = C15056 * C631;
    const double C21105 = C15056 * C326;
    const double C21097 = C15056 * C346;
    const double C21095 = C15056 * C329;
    const double C21087 = C15056 * C319;
    const double C21403 = C15056 * C328;
    const double C21395 = C15056 * C318;
    const double C5425 = C5394 + C5395;
    const double C5422 = C5388 + C5389;
    const double C10620 = C10589 + C10590;
    const double C10617 = C10583 + C10584;
    const double C31554 = C31550 / C31512;
    const double C926 = C754 * C869;
    const double C920 = C754 * C875;
    const double C910 = C754 * C238;
    const double C904 = C754 * C218;
    const double C898 = C754 * C227;
    const double C892 = C754 * C217;
    const double C1267 = C754 * C239;
    const double C1261 = C754 * C219;
    const double C1255 = C754 * C226;
    const double C1249 = C754 * C216;
    const double C1615 = C754 * C618;
    const double C1609 = C754 * C628;
    const double C1603 = C754 * C1064;
    const double C1597 = C754 * C1073;
    const double C2023 = C754 * C1966;
    const double C2017 = C754 * C1972;
    const double C2007 = C754 * C343;
    const double C2001 = C754 * C323;
    const double C1995 = C754 * C332;
    const double C1989 = C754 * C322;
    const double C2365 = C754 * C344;
    const double C2359 = C754 * C324;
    const double C2353 = C754 * C331;
    const double C2347 = C754 * C321;
    const double C2547 = C754 * C1080;
    const double C2541 = C754 * C1065;
    const double C4747 = C754 * C629;
    const double C4741 = C754 * C619;
    const double C924 = C755 * C868;
    const double C918 = C755 * C874;
    const double C912 = C755 * C239;
    const double C906 = C755 * C219;
    const double C900 = C755 * C226;
    const double C894 = C755 * C216;
    const double C1269 = C755 * C240;
    const double C1263 = C755 * C220;
    const double C1257 = C755 * C225;
    const double C1251 = C755 * C215;
    const double C1613 = C755 * C619;
    const double C1607 = C755 * C629;
    const double C1601 = C755 * C1063;
    const double C1595 = C755 * C1072;
    const double C2021 = C755 * C1965;
    const double C2015 = C755 * C1971;
    const double C2009 = C755 * C344;
    const double C2003 = C755 * C324;
    const double C1997 = C755 * C331;
    const double C1991 = C755 * C321;
    const double C2367 = C755 * C345;
    const double C2361 = C755 * C325;
    const double C2355 = C755 * C330;
    const double C2349 = C755 * C320;
    const double C2549 = C755 * C1081;
    const double C2543 = C755 * C1066;
    const double C4749 = C755 * C630;
    const double C4743 = C755 * C620;
    const double C15974 = C15843 * C870;
    const double C15970 = C15843 * C882;
    const double C15964 = C15843 * C875;
    const double C15960 = C15843 * C869;
    const double C15956 = C15843 * C238;
    const double C15952 = C15843 * C218;
    const double C15948 = C15843 * C227;
    const double C15944 = C15843 * C217;
    const double C16250 = C15843 * C874;
    const double C16246 = C15843 * C868;
    const double C16242 = C15843 * C239;
    const double C16238 = C15843 * C219;
    const double C16234 = C15843 * C226;
    const double C16230 = C15843 * C216;
    const double C16548 = C15843 * C618;
    const double C16544 = C15843 * C628;
    const double C16540 = C15843 * C1064;
    const double C16536 = C15843 * C1073;
    const double C16532 = C15843 * C1580;
    const double C16528 = C15843 * C1586;
    const double C16868 = C15843 * C1068;
    const double C16864 = C15843 * C1086;
    const double C16858 = C15843 * C1080;
    const double C16854 = C15843 * C1065;
    const double C17056 = C15843 * C1966;
    const double C17052 = C15843 * C1972;
    const double C17048 = C15843 * C2528;
    const double C17044 = C15843 * C2534;
    const double C17036 = C15843 * C343;
    const double C17032 = C15843 * C323;
    const double C17028 = C15843 * C332;
    const double C17024 = C15843 * C322;
    const double C17282 = C15843 * C1081;
    const double C17278 = C15843 * C1066;
    const double C17274 = C15843 * C629;
    const double C17270 = C15843 * C619;
    const double C17500 = C15843 * C344;
    const double C17496 = C15843 * C324;
    const double C17492 = C15843 * C331;
    const double C17488 = C15843 * C321;
    const double C20385 = C15843 * C1072;
    const double C20381 = C15843 * C1063;
    const double C22880 = C15843 * C1967;
    const double C22876 = C15843 * C1979;
    const double C23150 = C15843 * C1971;
    const double C23146 = C15843 * C1965;
    const double C6245 = C6238 + C6239;
    const double C9720 = C9711 + C9712;
    const double C6244 = C6236 + C6237;
    const double C6889 = C6871 + C6872;
    const double C9719 = C9707 + C9708;
    const double C11367 = C11355 + C11356;
    const double C32957 = C32900 + C32949;
    const double C2657 = C32936 - (C32553 * C32536) / C31512;
    const double C15175 = C32937 * C250;
    const double C15169 = C32937 * C245;
    const double C15161 = C32937 * C230;
    const double C15445 = C32937 * C244;
    const double C21094 = C32937 * C350;
    const double C21086 = C32937 * C335;
    const double C21402 = C32937 * C349;
    const double C104 = C32937 / C31518 - C32551 / C32907;
    const double C2784 = C2658 * C250;
    const double C2778 = C2658 * C245;
    const double C2770 = C2658 * C230;
    const double C3054 = C2658 * C244;
    const double C3660 = C2658 * C350;
    const double C3652 = C2658 * C335;
    const double C3968 = C2658 * C349;
    const double C32950 = C32903 + C32936;
    const double C31671 = C31667 / C31512;
    const double C27399 = C6230 * C20882;
    const double C27392 = C6228 * C20882;
    const double C27388 = C6226 * C20882;
    const double C27384 = C6224 * C20882;
    const double C27642 = C6427 * C20882;
    const double C27638 = C6425 * C20882;
    const double C27634 = C6423 * C20882;
    const double C27917 = C6634 * C20882;
    const double C27913 = C6632 * C20882;
    const double C27909 = C6630 * C20882;
    const double C31682 = C31676 / C31512;
    const double C14433 = C7051 * C13614;
    const double C14430 = C7053 * C13614;
    const double C28123 = C7051 * C22674;
    const double C28120 = C7053 * C22674;
    const double C32959 = C32927 + C32955;
    const double C13608 = C32946 - (C32734 * C32723) / C31512;
    const double C28124 = C6891 * C32947;
    const double C28119 = C6888 * C32947;
    const double C28628 = C7052 * C32947;
    const double C12008 = C32947 / C31518 - C32732 / C32907;
    const double C14434 = C6891 * C13609;
    const double C14429 = C6888 * C13609;
    const double C14944 = C7052 * C13609;
    const double C32956 = C32929 + C32946;
    const double C1278 = C1259 + C1260;
    const double C5730 = C5711 + C5712;
    const double C18287 = C18268 + C18269;
    const double C939 = C914 + C915;
    const double C5431 = C5406 + C5407;
    const double C8087 = C8070 + C8071;
    const double C16261 = C16244 + C16245;
    const double C17988 = C17963 + C17964;
    const double C2376 = C2357 + C2358;
    const double C10958 = C10939 + C10940;
    const double C19537 = C19530 + C19531;
    const double C12152 = C6132 * C12141;
    const double C12329 =
        (4 * (2 * C32277 + C31757 * C32430 + C32278 * ae) +
         C31757 *
             (3 * C32430 +
              C31757 * (2 * C32422 +
                        C31757 * (C31815 +
                                  C31757 * (C31757 * C31758 * C31827 + C31908) +
                                  C31757 * C31905 * ae) +
                        C32424 * ae) +
              C32429 * ae) +
         (3 * C32278 + C31757 * C32429) * ae) /
        C31512;
    const double C31895 = C31882 + C31894;
    const double C1094 = (C31927 * C31810 + ae * C31757 * C31947 +
                          C31757 * (ae * C31947 + C31757 * C31927 * C31834)) /
                         C31517;
    const double C1079 = (C31927 * C31880 + C31947 * C31969) / C31512;
    const double C31985 = C31982 + C31983;
    const double C7233 = C7224 + C7225;
    const double C8871 = C8843 + C8844;
    const double C16874 = C16862 + C16863;
    const double C8376 = C8352 + C8353;
    const double C9968 = C9965 + C9966;
    const double C16550 = C16526 + C16527;
    const double C6429 = C6419 + C6420;
    const double C7816 = C7798 + C7799;
    const double C15990 = C15972 + C15973;
    const double C7232 = C7222 + C7223;
    const double C8873 = C8847 + C8848;
    const double C16876 = C16866 + C16867;
    const double C8378 = C8356 + C8357;
    const double C9967 = C9963 + C9964;
    const double C16552 = C16530 + C16531;
    const double C12342 = C12336 + C12337;
    const double C13824 = C13818 + C13819;
    const double C22884 = C22878 + C22879;
    const double C32405 = C32387 + C32403;
    const double C6233 = C6222 + C6223;
    const double C6628 = C6613 + C6614;
    const double C6893 = C6881 + C6882;
    const double C14943 = C12434 * C13614;
    const double C28627 = C12434 * C22674;
    const double C12427 =
        (4 * (2 * C32350 + C31757 * C32447 + C32351 * ae) +
         C31757 * (3 * C32447 +
                   C31757 * (2 * C32441 +
                             C31757 * (C32433 +
                                       C31757 * (C31757 * C31927 * C31827 +
                                                 C32436 * ae) +
                                       C31757 * C32436 * ae) +
                             C32442 * ae) +
                   C32446 * ae) +
         (3 * C32351 + C31757 * C32446) * ae) /
        C31512;
    const double C12159 = C12154 + C12155;
    const double C2012 = C32905 * C355;
    const double C2368 = C749 * C355;
    const double C3666 = C2658 * C355;
    const double C10602 = C32905 * C355;
    const double C10950 = C32935 * C355;
    const double C13309 = C32550 * C355;
    const double C17503 = C32550 * C355;
    const double C19085 = C17823 * C355;
    const double C21100 = C32937 * C355;
    const double C24967 = C32553 * C355;
    const double C1606 = C32905 * C635;
    const double C3328 = C2658 * C635;
    const double C4750 = C749 * C635;
    const double C6042 = C32905 * C635;
    const double C9084 = C32550 * C635;
    const double C15719 = C32937 * C635;
    const double C17277 = C32550 * C635;
    const double C18599 = C17823 * C635;
    const double C19317 = C32553 * C635;
    const double C26783 = C32935 * C635;
    const double C1594 = C32905 * C1089;
    const double C6030 = C32905 * C1089;
    const double C9092 = C32550 * C1089;
    const double C18587 = C17823 * C1089;
    const double C20388 = C32550 * C1089;
    const double C2014 = C32905 * C1982;
    const double C10604 = C32905 * C1982;
    const double C14093 = C32550 * C1982;
    const double C23153 = C32550 * C1982;
    const double C24647 = C17823 * C1982;
    const double C1254 = C32905 * C229;
    const double C2772 = C32920 * C229;
    const double C3046 = C2658 * C229;
    const double C5706 = C32905 * C229;
    const double C15163 = C32920 * C229;
    const double C15437 = C32937 * C229;
    const double C18263 = C17823 * C229;
    const double C909 = C32905 * C235;
    const double C1264 = C749 * C235;
    const double C2792 = C2658 * C235;
    const double C5401 = C32905 * C235;
    const double C5716 = C32935 * C235;
    const double C8067 = C32550 * C235;
    const double C15183 = C32937 * C235;
    const double C16241 = C32550 * C235;
    const double C17958 = C17823 * C235;
    const double C18273 = C32553 * C235;
    const double C2352 = C32905 * C334;
    const double C3654 = C32920 * C334;
    const double C3960 = C2658 * C334;
    const double C10934 = C32905 * C334;
    const double C19525 = C17823 * C334;
    const double C21088 = C32920 * C334;
    const double C21394 = C32937 * C334;
    const double C2006 = C32905 * C340;
    const double C2362 = C749 * C340;
    const double C3674 = C2658 * C340;
    const double C10596 = C32905 * C340;
    const double C10944 = C32935 * C340;
    const double C13305 = C32550 * C340;
    const double C17499 = C32550 * C340;
    const double C19091 = C17823 * C340;
    const double C21108 = C32937 * C340;
    const double C24961 = C32553 * C340;
    const double C1612 = C32905 * C625;
    const double C3336 = C2658 * C625;
    const double C4744 = C749 * C625;
    const double C6048 = C32905 * C625;
    const double C9080 = C32550 * C625;
    const double C15727 = C32937 * C625;
    const double C17273 = C32550 * C625;
    const double C18605 = C17823 * C625;
    const double C19311 = C32553 * C625;
    const double C26777 = C32935 * C625;
    const double C923 = C32905 * C876;
    const double C5415 = C32905 * C876;
    const double C8075 = C32550 * C876;
    const double C16249 = C32550 * C876;
    const double C17972 = C17823 * C876;
    const double C1600 = C32905 * C1074;
    const double C6036 = C32905 * C1074;
    const double C9088 = C32550 * C1074;
    const double C18593 = C17823 * C1074;
    const double C20384 = C32550 * C1074;
    const double C2020 = C32905 * C1973;
    const double C10610 = C32905 * C1973;
    const double C14089 = C32550 * C1973;
    const double C23149 = C32550 * C1973;
    const double C24653 = C17823 * C1973;
    const double C7237 = C7229 * C32919;
    const double C11633 = C7229 * C32919;
    const double C14673 = C7229 * C13609;
    const double C28363 = C7229 * C32947;
    const double C31185 = C7229 * C24419;
    const double C14681 = C14679 * C32932;
    const double C28365 = C14679 * C32932;
    const double C7236 = C7228 * C1743;
    const double C11632 = C7228 * C10357;
    const double C31184 = C7228 * C31700;
    const double C14680 = C14678 * C13614;
    const double C28364 = C14678 * C22674;
    const double C12343 = C12338 + C12339;
    const double C13822 = C13814 + C13815;
    const double C22882 = C22874 + C22875;
    const double C6246 = C6240 + C6241;
    const double C14942 = C12435 * C32932;
    const double C28626 = C12435 * C32932;
    const double C139 = (5 * (3 * C31791 + C31758 * C31811) +
                         C31758 * (4 * C31811 + C31758 * C31839)) /
                        C31512;
    const double C242 =
        (3 * C31791 + C31758 * C31811 + C31839 * C31936) / C31512;
    const double C347 =
        (3 * C31791 + C31758 * C31811 +
         C31757 * (C31757 * C31839 + C32153 * ae) + C31757 * C32153 * ae) /
        C31512;
    const double C446 = (C31927 * (4 * C31811 + C31758 * C31839)) / C31512;
    const double C534 = (C31757 * (4 * C31811 + C31758 * C31839) +
                         (4 * C32149 + C31758 * C32153) * ae) /
                        C31512;
    const double C632 =
        (C31757 * C31927 * C31839 + C31927 * C32153 * ae) / C31512;
    const double C146 =
        (5 * (3 * C31810 + ae * C31811 + C31758 * C31838) +
         ae * (4 * C31811 + C31758 * C31839) +
         C31758 *
             (4 * C31838 + ae * C31839 +
              C31758 *
                  (3 * C31834 + ae * C31835 +
                   C31758 * (2 * C31830 + ae * C31831 +
                             C31758 * (C31826 + ae * C31758 * C31827 +
                                       C31758 * (ae * C31827 +
                                                 C31758 * std::pow(C31760, 8) *
                                                     bs[8] * C31768)))))) /
        C31517;
    const double C243 =
        ((yP - yQ) * (3 * C31810 + ae * C31811 + C31758 * C31838)) / C31517;
    const double C251 = (2 * C31790 + ae * C31791 + C31758 * C31810 +
                         C31838 * std::pow(yP - yQ, 2)) /
                        C31517;
    const double C252 =
        (3 * C31810 + ae * C31811 + C31758 * C31838 +
         (3 * C31834 + ae * C31835 +
          C31758 *
              (2 * C31830 + ae * C31831 +
               C31758 * (C31826 + ae * C31758 * C31827 +
                         C31758 * (ae * C31827 + C31758 * std::pow(C31760, 8) *
                                                     bs[8] * C31768)))) *
             std::pow(yP - yQ, 2)) /
        C31517;
    const double C348 =
        (ae * (3 * (C31772 * C31773 * C31851 + C31758 * C31861 + C31856 * ae) +
               C31758 * (2 * C31861 +
                         C31758 * (C31858 +
                                   C31758 * (C31758 * C31795 * C31796 * C31851 +
                                             C31853 * ae) +
                                   C31758 * C31853 * ae) +
                         C31859 * ae) +
               (2 * C31856 + C31758 * C31859) * ae) +
         C31757 * (3 * C31810 + ae * C31811 + C31758 * C31838)) /
        C31517;
    const double C447 =
        ((yP - yQ) *
         (4 * C31838 + ae * C31839 +
          C31758 * (3 * C31834 + ae * C31835 +
                    C31758 * (2 * C31830 + ae * C31831 +
                              C31758 * (C31826 + ae * C31758 * C31827 +
                                        C31758 * (ae * C31827 +
                                                  C31758 * std::pow(C31760, 8) *
                                                      bs[8] * C31768)))))) /
        C31517;
    const double C1247 =
        (2 * C31927 * C31838 +
         C31927 * (C31838 + (2 * C31830 + ae * C31831 +
                             C31758 * (C31826 + ae * C31758 * C31827 +
                                       C31758 * (ae * C31827 +
                                                 C31758 * std::pow(C31760, 8) *
                                                     bs[8] * C31768))) *
                                C31936)) /
        C31517;
    const double C940 = C916 + C917;
    const double C5432 = C5408 + C5409;
    const double C8091 = C8078 + C8079;
    const double C16265 = C16252 + C16253;
    const double C17989 = C17965 + C17966;
    const double C6627 = C6611 + C6612;
    const double C6892 = C6879 + C6880;
    const double C31919 = C31899 + C31918;
    const double C31956 = C31893 + C31955;
    const double C31986 = C31893 + C31984;
    const double C2539 =
        (2 * (ae * C31947 + C31757 * C31997) + ae * (C31947 + C31998 * C31969) +
         C31757 * (C31997 + ae * C31757 * C31998 +
                   C31757 * (ae * C31998 +
                             C31757 * C31927 *
                                 (C31826 + ae * C31758 * C31827 +
                                  C31758 * (ae * C31827 +
                                            C31758 * std::pow(C31760, 8) *
                                                bs[8] * C31768))))) /
        C31517;
    const double C2533 =
        (2 * C31757 * C31947 + C31757 * (C31947 + C31998 * C31969)) / C31512;
    const double C7204 =
        (2 * C31994 + C31927 * C32028 + ae * C31757 * C32051 +
         C31757 * (ae * C32051 +
                   C31757 * (2 * C31927 * C31830 +
                             C31927 * (C31830 + (ae * C31827 +
                                                 C31758 * std::pow(C31760, 8) *
                                                     bs[8] * C31768) *
                                                    C31936)))) /
        C31517;
    const double C6403 = (4 * (2 * C31945 + C31927 * C31953) +
                          C31927 * (3 * C31953 + C31927 * C32051)) /
                         C31512;
    const double C6521 = (C31757 * (3 * C31953 + C31927 * C32051)) / C31512;
    const double C7202 =
        (2 * C31945 + C31927 * C31953 + C32051 * C31969) / C31512;
    const double C12330 =
        (4 * (2 * C31978 + ae * C31979 + C31757 * C32111) +
         ae * (3 * C31979 + C31757 * C32112) +
         C31757 *
             (3 * C32111 + ae * C32112 +
              C31757 *
                  (2 * C32105 + ae * C32107 +
                   C31757 * (C31830 + ae * C31757 * C31910 +
                             C31757 * (ae * C31910 +
                                       C31757 * (ae * C31827 +
                                                 C31758 * std::pow(C31760, 8) *
                                                     bs[8] * C31768)))))) /
        C31517;
    const double C12328 = (4 * (2 * C31974 + C31757 * C31979) +
                           C31757 * (3 * C31979 + C31757 * C32112)) /
                          C31512;
    const double C6319 =
        (3 * C32001 + C31927 * C32008 + ae * C31757 * C32025 +
         C31757 * (ae * C32025 +
                   C31757 * (3 * C32006 +
                             C31927 * (2 * C31927 * C31826 +
                                       C31927 * (C31826 + std::pow(C31760, 8) *
                                                              bs[8] * C31768 *
                                                              C31936))))) /
        C31517;
    const double C6609 =
        (ae * (4 * C32015 + C31927 * C32025) +
         C31757 * (4 * C32008 +
                   C31927 * (3 * C32006 +
                             C31927 * (2 * C31927 * C31826 +
                                       C31927 * (C31826 + std::pow(C31760, 8) *
                                                              bs[8] * C31768 *
                                                              C31936))))) /
        C31517;
    const double C6199 = (5 * (3 * C31950 + C31927 * C32015) +
                          C31927 * (4 * C32015 + C31927 * C32025)) /
                         C31512;
    const double C6315 =
        (3 * C31950 + C31927 * C32015 + C32025 * C31969) / C31512;
    const double C6607 = (C31757 * (4 * C32015 + C31927 * C32025)) / C31512;
    const double C12146 =
        (5 * (3 * C32066 + ae * C32067 + C31757 * C32088) +
         ae * (4 * C32067 + C31757 * C32089) +
         C31757 *
             (4 * C32088 + ae * C32089 +
              C31757 *
                  (3 * C32084 + ae * C32085 +
                   C31757 * (2 * C32078 + ae * C32080 +
                             C31757 * (C31826 + ae * C31757 * C31903 +
                                       C31757 * (ae * C31903 +
                                                 C31757 * std::pow(C31760, 8) *
                                                     bs[8] * C31768)))))) /
        C31517;
    const double C12143 = (5 * (3 * C31972 + C31757 * C32067) +
                           C31757 * (4 * C32067 + C31757 * C32089)) /
                          C31512;
    const double C32958 = C32921 + C32953;
    const double C7666 = C32943 - (C32694 * C32683) / C31512;
    const double C6130 = C32944 / C31518 - C32692 / C32907;
    const double C32954 = C32923 + C32943;
    const double C2804 = C2779 + C2780;
    const double C3686 = C3661 + C3662;
    const double C15195 = C15170 + C15171;
    const double C21120 = C21095 + C21096;
    const double C31557 = C31554 - C31533;
    const double C945 = C926 + C927;
    const double C942 = C920 + C921;
    const double C937 = C910 + C911;
    const double C934 = C904 + C905;
    const double C931 = C898 + C899;
    const double C928 = C892 + C893;
    const double C1282 = C1267 + C1268;
    const double C1279 = C1261 + C1262;
    const double C1276 = C1255 + C1256;
    const double C1273 = C1249 + C1250;
    const double C1628 = C1615 + C1616;
    const double C1625 = C1609 + C1610;
    const double C1622 = C1603 + C1604;
    const double C1619 = C1597 + C1598;
    const double C2042 = C2023 + C2024;
    const double C2039 = C2017 + C2018;
    const double C2034 = C2007 + C2008;
    const double C2031 = C2001 + C2002;
    const double C2028 = C1995 + C1996;
    const double C2025 = C1989 + C1990;
    const double C2380 = C2365 + C2366;
    const double C2377 = C2359 + C2360;
    const double C2374 = C2353 + C2354;
    const double C2371 = C2347 + C2348;
    const double C2556 = C2547 + C2548;
    const double C2553 = C2541 + C2542;
    const double C4756 = C4747 + C4748;
    const double C4753 = C4741 + C4742;
    const double C944 = C924 + C925;
    const double C941 = C918 + C919;
    const double C938 = C912 + C913;
    const double C935 = C906 + C907;
    const double C932 = C900 + C901;
    const double C929 = C894 + C895;
    const double C1283 = C1269 + C1270;
    const double C1277 = C1257 + C1258;
    const double C1274 = C1251 + C1252;
    const double C1627 = C1613 + C1614;
    const double C1624 = C1607 + C1608;
    const double C1621 = C1601 + C1602;
    const double C1618 = C1595 + C1596;
    const double C2041 = C2021 + C2022;
    const double C2038 = C2015 + C2016;
    const double C2035 = C2009 + C2010;
    const double C2032 = C2003 + C2004;
    const double C2029 = C1997 + C1998;
    const double C2026 = C1991 + C1992;
    const double C2375 = C2355 + C2356;
    const double C2372 = C2349 + C2350;
    const double C2557 = C2549 + C2550;
    const double C2554 = C2543 + C2544;
    const double C15991 = C15974 + C15975;
    const double C15989 = C15970 + C15971;
    const double C15986 = C15964 + C15965;
    const double C15984 = C15960 + C15961;
    const double C15982 = C15956 + C15957;
    const double C15980 = C15952 + C15953;
    const double C15978 = C15948 + C15949;
    const double C15976 = C15944 + C15945;
    const double C16264 = C16250 + C16251;
    const double C16262 = C16246 + C16247;
    const double C16260 = C16242 + C16243;
    const double C16258 = C16238 + C16239;
    const double C16256 = C16234 + C16235;
    const double C16254 = C16230 + C16231;
    const double C16561 = C16548 + C16549;
    const double C16559 = C16544 + C16545;
    const double C16557 = C16540 + C16541;
    const double C16555 = C16536 + C16537;
    const double C16553 = C16532 + C16533;
    const double C16551 = C16528 + C16529;
    const double C16877 = C16868 + C16869;
    const double C16875 = C16864 + C16865;
    const double C16872 = C16858 + C16859;
    const double C16870 = C16854 + C16855;
    const double C17073 = C17056 + C17057;
    const double C17071 = C17052 + C17053;
    const double C17069 = C17048 + C17049;
    const double C17067 = C17044 + C17045;
    const double C17064 = C17036 + C17037;
    const double C17062 = C17032 + C17033;
    const double C17060 = C17028 + C17029;
    const double C17058 = C17024 + C17025;
    const double C17292 = C17282 + C17283;
    const double C17290 = C17278 + C17279;
    const double C17288 = C17274 + C17275;
    const double C17286 = C17270 + C17271;
    const double C17510 = C17500 + C17501;
    const double C17508 = C17496 + C17497;
    const double C17506 = C17492 + C17493;
    const double C17504 = C17488 + C17489;
    const double C20391 = C20385 + C20386;
    const double C20389 = C20381 + C20382;
    const double C22885 = C22880 + C22881;
    const double C22883 = C22876 + C22877;
    const double C23156 = C23150 + C23151;
    const double C23154 = C23146 + C23147;
    const double C9722 = C9720 + C9713;
    const double C6896 = C6889 + C6873;
    const double C9721 = C9719 + C9709;
    const double C11368 = C11367 + C11357;
    const double C15187 = C32957 * C233;
    const double C15179 = C32957 * C248;
    const double C15165 = C32957 * C247;
    const double C15157 = C32957 * C232;
    const double C15441 = C32957 * C246;
    const double C15433 = C32957 * C231;
    const double C15731 = C32957 * C623;
    const double C15723 = C32957 * C633;
    const double C21112 = C32957 * C338;
    const double C21104 = C32957 * C353;
    const double C21090 = C32957 * C352;
    const double C21082 = C32957 * C337;
    const double C21398 = C32957 * C351;
    const double C21390 = C32957 * C336;
    const double C101 =
        (C32948 + 2 * C32545) / C31518 - (C32957 * C32536) / C31512;
    const double C2794 = C2657 * C234;
    const double C2786 = C2657 * C249;
    const double C2776 = C2657 * C246;
    const double C2768 = C2657 * C231;
    const double C3052 = C2657 * C245;
    const double C3044 = C2657 * C230;
    const double C3338 = C2657 * C624;
    const double C3330 = C2657 * C634;
    const double C3676 = C2657 * C339;
    const double C3668 = C2657 * C354;
    const double C3658 = C2657 * C351;
    const double C3650 = C2657 * C336;
    const double C3966 = C2657 * C350;
    const double C3958 = C2657 * C335;
    const double C15185 = C32950 * C234;
    const double C15177 = C32950 * C249;
    const double C15167 = C32950 * C246;
    const double C15159 = C32950 * C231;
    const double C15443 = C32950 * C245;
    const double C15435 = C32950 * C230;
    const double C15729 = C32950 * C624;
    const double C15721 = C32950 * C634;
    const double C21110 = C32950 * C339;
    const double C21102 = C32950 * C354;
    const double C21092 = C32950 * C351;
    const double C21084 = C32950 * C336;
    const double C21400 = C32950 * C350;
    const double C21392 = C32950 * C335;
    const double C102 =
        (C32935 + 2 * C32553 + C32957) / C31518 - (C32950 * C32536) / C31512;
    const double C103 = (C32905 + C32550 / C31512 + C32950) / C31518 -
                        (C32937 * C32536) / C31512;
    const double C31675 = C31671 - C31652;
    const double C27401 = C27392 + C27393;
    const double C27400 = C27388 + C27389;
    const double C28128 = C6227 * C32959;
    const double C28115 = C6225 * C32959;
    const double C28359 = C6424 * C32959;
    const double C28632 = C6633 * C32959;
    const double C12005 =
        (C32952 + 2 * C32727) / C31518 - (C32959 * C32723) / C31512;
    const double C14436 = C6631 * C13608;
    const double C14427 = C6633 * C13608;
    const double C14671 = C7227 * C13608;
    const double C14946 = C6888 * C13608;
    const double C28126 = C6631 * C32956;
    const double C28117 = C6633 * C32956;
    const double C28361 = C7227 * C32956;
    const double C28630 = C6888 * C32956;
    const double C12006 =
        (C32941 + 2 * C32734 + C32959) / C31518 - (C32956 * C32723) / C31512;
    const double C12007 = (C32919 + C32731 / C31512 + C32956) / C31518 -
                          (C32947 * C32723) / C31512;
    const double C12158 = C12152 + C12153;
    const double C31896 = C31895 + C31886;
    const double C2552 = C32905 * C1094;
    const double C11122 = C32905 * C1094;
    const double C13103 = C32550 * C1094;
    const double C17285 = C32550 * C1094;
    const double C19073 = C17823 * C1094;
    const double C2546 = C32905 * C1079;
    const double C11116 = C32905 * C1079;
    const double C13099 = C32550 * C1079;
    const double C17281 = C32550 * C1079;
    const double C19079 = C17823 * C1079;
    const double C7241 = C7233 * C32919;
    const double C11639 = C7233 * C32919;
    const double C31191 = C7233 * C24419;
    const double C9970 = C9968 * C32731;
    const double C27645 = C9968 * C32731;
    const double C6437 = C6429 * C118;
    const double C7240 = C7232 * C1743;
    const double C11638 = C7232 * C10357;
    const double C31190 = C7232 * C31700;
    const double C9969 = C9967 * C3449;
    const double C27644 = C9967 * C20883;
    const double C32406 = C32405 + C32390;
    const double C6243 = C6233 * C118;
    const double C6636 = C6628 * C118;
    const double C9716 = C6628 * C3449;
    const double C27397 = C6628 * C20883;
    const double C6900 = C6893 * C1743;
    const double C10232 = C6893 * C3449;
    const double C11362 = C6893 * C10357;
    const double C27907 = C6893 * C20883;
    const double C30914 = C6893 * C31700;
    const double C2036 = C2011 + C2012;
    const double C2381 = C2367 + C2368;
    const double C10626 = C10601 + C10602;
    const double C13313 = C13308 + C13309;
    const double C17511 = C17502 + C17503;
    const double C19108 = C19084 + C19085;
    const double C1623 = C1605 + C1606;
    const double C4757 = C4749 + C4750;
    const double C6059 = C6041 + C6042;
    const double C9096 = C9083 + C9084;
    const double C17289 = C17276 + C17277;
    const double C18616 = C18598 + C18599;
    const double C1617 = C1593 + C1594;
    const double C6053 = C6029 + C6030;
    const double C9100 = C9091 + C9092;
    const double C18610 = C18586 + C18587;
    const double C20392 = C20387 + C20388;
    const double C2037 = C2013 + C2014;
    const double C10627 = C10603 + C10604;
    const double C14097 = C14092 + C14093;
    const double C23157 = C23152 + C23153;
    const double C24660 = C24646 + C24647;
    const double C1275 = C1253 + C1254;
    const double C2800 = C2771 + C2772;
    const double C5727 = C5705 + C5706;
    const double C15191 = C15162 + C15163;
    const double C18284 = C18262 + C18263;
    const double C936 = C908 + C909;
    const double C1280 = C1263 + C1264;
    const double C5428 = C5400 + C5401;
    const double C8085 = C8066 + C8067;
    const double C16259 = C16240 + C16241;
    const double C17985 = C17957 + C17958;
    const double C2373 = C2351 + C2352;
    const double C3682 = C3653 + C3654;
    const double C10955 = C10933 + C10934;
    const double C19534 = C19524 + C19525;
    const double C21116 = C21087 + C21088;
    const double C2033 = C2005 + C2006;
    const double C2378 = C2361 + C2362;
    const double C10623 = C10595 + C10596;
    const double C13311 = C13304 + C13305;
    const double C17509 = C17498 + C17499;
    const double C19111 = C19090 + C19091;
    const double C1626 = C1611 + C1612;
    const double C4754 = C4743 + C4744;
    const double C6062 = C6047 + C6048;
    const double C9094 = C9079 + C9080;
    const double C17287 = C17272 + C17273;
    const double C18619 = C18604 + C18605;
    const double C943 = C922 + C923;
    const double C5435 = C5414 + C5415;
    const double C8089 = C8074 + C8075;
    const double C16263 = C16248 + C16249;
    const double C17992 = C17971 + C17972;
    const double C1620 = C1599 + C1600;
    const double C6056 = C6035 + C6036;
    const double C9098 = C9087 + C9088;
    const double C18613 = C18592 + C18593;
    const double C20390 = C20383 + C20384;
    const double C2040 = C2019 + C2020;
    const double C10630 = C10609 + C10610;
    const double C14095 = C14088 + C14089;
    const double C23155 = C23148 + C23149;
    const double C24663 = C24652 + C24653;
    const double C3056 = C32920 * C243;
    const double C15447 = C32920 * C243;
    const double C1272 = C32905 * C251;
    const double C2782 = C32920 * C251;
    const double C5724 = C32905 * C251;
    const double C15173 = C32920 * C251;
    const double C18281 = C17823 * C251;
    const double C3970 = C32920 * C348;
    const double C21404 = C32920 * C348;
    const double C6635 = C6627 * C32644;
    const double C9715 = C6627 * C32731;
    const double C27396 = C6627 * C32731;
    const double C6899 = C6892 * C32919;
    const double C10231 = C6892 * C32731;
    const double C11361 = C6892 * C32919;
    const double C27906 = C6892 * C32731;
    const double C30913 = C6892 * C24419;
    const double C31920 = C31919 + C31911;
    const double C1097 =
        (C31810 + C31834 * C31936 + ae * C31757 * C31956 +
         C31757 * (ae * C31956 +
                   C31757 * (C31834 + (C31826 + ae * C31758 * C31827 +
                                       C31758 * (ae * C31827 +
                                                 C31758 * std::pow(C31760, 8) *
                                                     bs[8] * C31768)) *
                                          C31936))) /
        C31517;
    const double C1591 =
        (ae * (2 * C31947 + C31927 * C31956) +
         C31757 * (2 * C31927 * C31834 +
                   C31927 * (C31834 + (C31826 + ae * C31758 * C31827 +
                                       C31758 * (ae * C31827 +
                                                 C31758 * std::pow(C31760, 8) *
                                                     bs[8] * C31768)) *
                                          C31936))) /
        C31517;
    const double C881 = (3 * (C31880 + C31893 * C31936) +
                         C31927 * (2 * C31947 + C31927 * C31956)) /
                        C31512;
    const double C1085 = (C31880 + C31893 * C31936 + C31956 * C31969) / C31512;
    const double C1585 = (C31757 * (2 * C31947 + C31927 * C31956)) / C31512;
    const double C1987 =
        (3 * (C31810 + ae * C31981 + C31757 * C31985) +
         ae * (2 * C31981 + C31757 * C31986) +
         C31757 *
             (2 * C31985 + ae * C31986 +
              C31757 *
                  (C31834 + ae * C31757 * C31917 +
                   C31757 * (ae * C31917 +
                             C31757 * (C31826 + ae * C31758 * C31827 +
                                       C31758 * (ae * C31827 +
                                                 C31758 * std::pow(C31760, 8) *
                                                     bs[8] * C31768)))))) /
        C31517;
    const double C1978 = (3 * (C31880 + C31893 * C31969) +
                          C31757 * (2 * C31981 + C31757 * C31986)) /
                         C31512;
    const double C6127 =
        (C32951 + 2 * C32687) / C31518 - (C32958 * C32683) / C31512;
    const double C6128 =
        (C32939 + 2 * C32694 + C32958) / C31518 - (C32954 * C32683) / C31512;
    const double C6129 = (C32916 + C32691 / C31512 + C32954) / C31518 -
                         (C32944 * C32683) / C31512;
    const double C7800 = C31557 * C870;
    const double C7796 = C31557 * C882;
    const double C7790 = C31557 * C875;
    const double C7786 = C31557 * C869;
    const double C7782 = C31557 * C238;
    const double C7778 = C31557 * C218;
    const double C7774 = C31557 * C227;
    const double C7770 = C31557 * C217;
    const double C8076 = C31557 * C874;
    const double C8072 = C31557 * C868;
    const double C8068 = C31557 * C239;
    const double C8064 = C31557 * C219;
    const double C8060 = C31557 * C226;
    const double C8056 = C31557 * C216;
    const double C8374 = C31557 * C618;
    const double C8370 = C31557 * C628;
    const double C8366 = C31557 * C1064;
    const double C8362 = C31557 * C1073;
    const double C8358 = C31557 * C1580;
    const double C8354 = C31557 * C1586;
    const double C8865 = C31557 * C323;
    const double C8861 = C31557 * C343;
    const double C8857 = C31557 * C1065;
    const double C8853 = C31557 * C1080;
    const double C8849 = C31557 * C1068;
    const double C8845 = C31557 * C1086;
    const double C8839 = C31557 * C332;
    const double C8835 = C31557 * C322;
    const double C9089 = C31557 * C1072;
    const double C9085 = C31557 * C1063;
    const double C9081 = C31557 * C629;
    const double C9077 = C31557 * C619;
    const double C9299 = C31557 * C331;
    const double C9295 = C31557 * C321;
    const double C12892 = C31557 * C1966;
    const double C12888 = C31557 * C1972;
    const double C12884 = C31557 * C2528;
    const double C12880 = C31557 * C2534;
    const double C13100 = C31557 * C1081;
    const double C13096 = C31557 * C1066;
    const double C13306 = C31557 * C344;
    const double C13302 = C31557 * C324;
    const double C13820 = C31557 * C1967;
    const double C13816 = C31557 * C1979;
    const double C14090 = C31557 * C1971;
    const double C14086 = C31557 * C1965;
    const double C31560 = C31557 / C31518;
    const double C31559 = C31510 * C31557;
    const double C947 = C937 + C938;
    const double C946 = C934 + C935;
    const double C5150 = C1627 + C1628;
    const double C5147 = C1628 + C1627;
    const double C5149 = C1624 + C1625;
    const double C5148 = C1625 + C1624;
    const double C2044 = C2034 + C2035;
    const double C2043 = C2031 + C2032;
    const double C15995 = C15986 + C15987;
    const double C15994 = C15984 + C15985;
    const double C15993 = C15982 + C15983;
    const double C15992 = C15980 + C15981;
    const double C17711 = C16560 + C16561;
    const double C17706 = C16561 + C16560;
    const double C17710 = C16558 + C16559;
    const double C17707 = C16559 + C16558;
    const double C20034 = C16557 + C16556;
    const double C20782 = C16556 + C16557;
    const double C20035 = C16555 + C16554;
    const double C20781 = C16554 + C16555;
    const double C17041 = C16872 + C16873;
    const double C17708 = C16873 + C16872;
    const double C17040 = C16870 + C16871;
    const double C17709 = C16871 + C16870;
    const double C22872 = C17073 + C17072;
    const double C22873 = C17071 + C17070;
    const double C17075 = C17064 + C17065;
    const double C17074 = C17062 + C17063;
    const double C9724 = C9722 + C9714;
    const double C6901 = C6896 + C6874;
    const double C9723 = C9721 + C9710;
    const double C11369 = C11368 + C11358;
    const double C31681 = C31675 / C31518;
    const double C31680 = C31597 * C31675;
    const double C27403 = C27401 + C27394;
    const double C27402 = C27400 + C27390;
    const double C356 =
        (2 * C31790 + ae * C31791 + C31758 * C31810 + ae * C31757 * C31896 +
         C31757 * (ae * C31896 + C31757 * C31838)) /
        C31517;
    const double C636 =
        (ae * C31927 * C31896 + C31757 * C31927 * C31838) / C31517;
    const double C137 = (4 * (2 * C31875 + C31758 * C31880 + C32139 * ae) +
                         C31758 * (3 * C31880 + C31758 * C31896 + C32149 * ae) +
                         (3 * C32139 + C31758 * C32149) * ae) /
                        C31512;
    const double C228 =
        (C31927 * (3 * C31880 + C31758 * C31896 + C32149 * ae)) / C31512;
    const double C236 =
        (2 * C31875 + C31758 * C31880 + C32139 * ae + C31896 * C31936) / C31512;
    const double C333 =
        (C31757 * (3 * C31880 + C31758 * C31896 + C32149 * ae)) / C31512;
    const double C341 =
        (2 * C31875 + C31758 * C31880 + C32139 * ae + C31896 * C31969) / C31512;
    const double C626 = (C31757 * C31927 * C31896) / C31512;
    const double C2558 = C2551 + C2552;
    const double C11128 = C11121 + C11122;
    const double C13107 = C13102 + C13103;
    const double C17293 = C17284 + C17285;
    const double C19102 = C19072 + C19073;
    const double C2555 = C2545 + C2546;
    const double C11125 = C11115 + C11116;
    const double C13105 = C13098 + C13099;
    const double C17291 = C17280 + C17281;
    const double C19105 = C19078 + C19079;
    const double C12144 =
        (5 * (3 * C32383 + C31757 * C32406 + C32382 * ae) +
         C31757 *
             (4 * C32406 +
              C31757 *
                  (3 * C32401 +
                   C31757 *
                       (2 * C32393 +
                        C31757 * (C31803 + C31757 * (C31757 * C31827 + C31904) +
                                  C31757 * C31901 * ae) +
                        C32395 * ae) +
                   C32400 * ae) +
              C32404 * ae) +
         (4 * C32382 + C31757 * C32404) * ae) /
        C31512;
    const double C3064 = C3055 + C3056;
    const double C15455 = C15446 + C15447;
    const double C1284 = C1271 + C1272;
    const double C2805 = C2781 + C2782;
    const double C5736 = C5723 + C5724;
    const double C15196 = C15172 + C15173;
    const double C18293 = C18280 + C18281;
    const double C3978 = C3969 + C3970;
    const double C21412 = C21403 + C21404;
    const double C31921 = C31758 * C31920;
    const double C31988 = C31927 * C31920;
    const double C1433 =
        (ae * (C31896 + C31920 * C31936) +
         C31757 * (C31838 + (2 * C31830 + ae * C31831 +
                             C31758 * (C31826 + ae * C31758 * C31827 +
                                       C31758 * (ae * C31827 +
                                                 C31758 * std::pow(C31760, 8) *
                                                     bs[8] * C31768))) *
                                C31936)) /
        C31517;
    const double C2345 =
        (2 * (ae * C31896 + C31757 * C31838) + ae * (C31896 + C31920 * C31969) +
         C31757 *
             (C31838 + ae * C31757 * C31920 +
              C31757 *
                  (ae * C31920 +
                   C31757 * (2 * C31830 + ae * C31831 +
                             C31758 * (C31826 + ae * C31758 * C31827 +
                                       C31758 * (ae * C31827 +
                                                 C31758 * std::pow(C31760, 8) *
                                                     bs[8] * C31768)))))) /
        C31517;
    const double C1245 =
        (2 * C31927 * C31896 + C31927 * (C31896 + C31920 * C31936)) / C31512;
    const double C1431 = (C31757 * (C31896 + C31920 * C31936)) / C31512;
    const double C2343 =
        (2 * C31757 * C31896 + C31757 * (C31896 + C31920 * C31969)) / C31512;
    const double C7817 = C7800 + C7801;
    const double C7815 = C7796 + C7797;
    const double C7812 = C7790 + C7791;
    const double C7810 = C7786 + C7787;
    const double C7808 = C7782 + C7783;
    const double C7806 = C7778 + C7779;
    const double C7804 = C7774 + C7775;
    const double C7802 = C7770 + C7771;
    const double C8090 = C8076 + C8077;
    const double C8088 = C8072 + C8073;
    const double C8086 = C8068 + C8069;
    const double C8084 = C8064 + C8065;
    const double C8082 = C8060 + C8061;
    const double C8080 = C8056 + C8057;
    const double C8387 = C8374 + C8375;
    const double C8385 = C8370 + C8371;
    const double C8383 = C8366 + C8367;
    const double C8381 = C8362 + C8363;
    const double C8379 = C8358 + C8359;
    const double C8377 = C8354 + C8355;
    const double C8882 = C8865 + C8866;
    const double C8880 = C8861 + C8862;
    const double C8878 = C8857 + C8858;
    const double C8876 = C8853 + C8854;
    const double C8874 = C8849 + C8850;
    const double C8872 = C8845 + C8846;
    const double C8869 = C8839 + C8840;
    const double C8867 = C8835 + C8836;
    const double C9099 = C9089 + C9090;
    const double C9097 = C9085 + C9086;
    const double C9095 = C9081 + C9082;
    const double C9093 = C9077 + C9078;
    const double C9305 = C9299 + C9300;
    const double C9303 = C9295 + C9296;
    const double C12901 = C12892 + C12893;
    const double C12899 = C12888 + C12889;
    const double C12897 = C12884 + C12885;
    const double C12895 = C12880 + C12881;
    const double C13106 = C13100 + C13101;
    const double C13104 = C13096 + C13097;
    const double C13312 = C13306 + C13307;
    const double C13310 = C13302 + C13303;
    const double C13825 = C13820 + C13821;
    const double C13823 = C13816 + C13817;
    const double C14096 = C14090 + C14091;
    const double C14094 = C14086 + C14087;
    const double C31563 = C31560 - C31555;
    const double C5271 = C31560 + (C31546 * ae) / C31512;
    const double C31562 = C31559 + C32866;
    const double C949 = C947 + C939;
    const double C948 = C946 + C936;
    const double C5154 = C1626 + C5150;
    const double C5151 = C5147 + C1626;
    const double C5153 = C1623 + C5149;
    const double C5152 = C5148 + C1623;
    const double C2046 = C2044 + C2036;
    const double C2045 = C2043 + C2033;
    const double C15999 = C15995 * C32644;
    const double C15998 = C15994 * C118;
    const double C15997 = C15993 * C32644;
    const double C20033 = C15993 * C32886;
    const double C21836 = C15993 * C20880;
    const double C15996 = C15992 * C118;
    const double C20032 = C15992 * C3448;
    const double C21835 = C15992 * C20882;
    const double C20037 = C20034 * C3449;
    const double C21837 = C20034 * C20883;
    const double C20038 = C20035 * C32731;
    const double C21838 = C20035 * C32731;
    const double C6902 = C6901 + C6897;
    const double C11370 = C11369 + C11359;
    const double C31686 = C31681 - C31682;
    const double C31685 = C31680 + C32886;
    const double C27405 = C27403 + C27395;
    const double C27404 = C27402 + C27391;
    const double C2370 = C32905 * C356;
    const double C3664 = C32920 * C356;
    const double C10952 = C32905 * C356;
    const double C21098 = C32920 * C356;
    const double C24969 = C17823 * C356;
    const double C3326 = C32920 * C636;
    const double C4752 = C32905 * C636;
    const double C15717 = C32920 * C636;
    const double C19319 = C17823 * C636;
    const double C26785 = C32905 * C636;
    const double C3048 = C32920 * C228;
    const double C15439 = C32920 * C228;
    const double C1266 = C32905 * C236;
    const double C2790 = C32920 * C236;
    const double C5718 = C32905 * C236;
    const double C15181 = C32920 * C236;
    const double C18275 = C17823 * C236;
    const double C3962 = C32920 * C333;
    const double C21396 = C32920 * C333;
    const double C2364 = C32905 * C341;
    const double C3672 = C32920 * C341;
    const double C10946 = C32905 * C341;
    const double C21106 = C32920 * C341;
    const double C24963 = C17823 * C341;
    const double C3334 = C32920 * C626;
    const double C4746 = C32905 * C626;
    const double C15725 = C32920 * C626;
    const double C19313 = C17823 * C626;
    const double C26779 = C32905 * C626;
    const double C31922 = C31898 + C31921;
    const double C2195 =
        (C31927 * C31838 + ae * C31757 * C31988 +
         C31757 * (ae * C31988 +
                   C31757 * C31927 *
                       (2 * C31830 + ae * C31831 +
                        C31758 * (C31826 + ae * C31758 * C31827 +
                                  C31758 * (ae * C31827 +
                                            C31758 * std::pow(C31760, 8) *
                                                bs[8] * C31768))))) /
        C31517;
    const double C2193 = (C31927 * C31896 + C31988 * C31969) / C31512;
    const double C7821 = C7812 + C7813;
    const double C7820 = C7810 + C7811;
    const double C7819 = C7808 + C7809;
    const double C7818 = C7806 + C7807;
    const double C9506 = C8386 + C8387;
    const double C9501 = C8387 + C8386;
    const double C9505 = C8384 + C8385;
    const double C9502 = C8385 + C8384;
    const double C8682 = C8383 + C8382;
    const double C9504 = C8382 + C8383;
    const double C8683 = C8381 + C8380;
    const double C9503 = C8380 + C8381;
    const double C12874 = C8882 + C8881;
    const double C12875 = C8880 + C8879;
    const double C12876 = C8878 + C8877;
    const double C13509 = C8877 + C8878;
    const double C12877 = C8876 + C8875;
    const double C13508 = C8875 + C8876;
    const double C13812 = C12901 + C12900;
    const double C13813 = C12899 + C12898;
    const double C17973 = C31563 * C868;
    const double C17967 = C31563 * C874;
    const double C17961 = C31563 * C239;
    const double C17955 = C31563 * C219;
    const double C17949 = C31563 * C226;
    const double C17943 = C31563 * C216;
    const double C18278 = C31563 * C240;
    const double C18272 = C31563 * C220;
    const double C18266 = C31563 * C225;
    const double C18260 = C31563 * C215;
    const double C18606 = C31563 * C619;
    const double C18600 = C31563 * C629;
    const double C18594 = C31563 * C1063;
    const double C18588 = C31563 * C1072;
    const double C19092 = C31563 * C324;
    const double C19086 = C31563 * C344;
    const double C19080 = C31563 * C1066;
    const double C19074 = C31563 * C1081;
    const double C19068 = C31563 * C331;
    const double C19062 = C31563 * C321;
    const double C19316 = C31563 * C630;
    const double C19310 = C31563 * C620;
    const double C19528 = C31563 * C330;
    const double C19522 = C31563 * C320;
    const double C24654 = C31563 * C1965;
    const double C24648 = C31563 * C1971;
    const double C24966 = C31563 * C345;
    const double C24960 = C31563 * C325;
    const double C116 =
        (C31563 / C31518 + ((C31510 * C31573 + C17823) * ae) / C31512) /
            C31518 -
        ((C31510 * (C31573 / C31518 + (0 * ae) / C31512) + C32920) * be) /
            C31512;
    const double C2664 =
        C31563 / C31518 - ((C31510 * C31573 + C17823) * be) / C31512;
    const double C15055 =
        C31563 / C31518 + ((C31510 * C31573 + C17823) * ae) / C31512;
    const double C5416 = C5271 * C868;
    const double C5410 = C5271 * C874;
    const double C5404 = C5271 * C239;
    const double C5398 = C5271 * C219;
    const double C5392 = C5271 * C226;
    const double C5386 = C5271 * C216;
    const double C5721 = C5271 * C240;
    const double C5715 = C5271 * C220;
    const double C5709 = C5271 * C225;
    const double C5703 = C5271 * C215;
    const double C6049 = C5271 * C619;
    const double C6043 = C5271 * C629;
    const double C6037 = C5271 * C1063;
    const double C6031 = C5271 * C1072;
    const double C10611 = C5271 * C1965;
    const double C10605 = C5271 * C1971;
    const double C10599 = C5271 * C344;
    const double C10593 = C5271 * C324;
    const double C10587 = C5271 * C331;
    const double C10581 = C5271 * C321;
    const double C10949 = C5271 * C345;
    const double C10943 = C5271 * C325;
    const double C10937 = C5271 * C330;
    const double C10931 = C5271 * C320;
    const double C11119 = C5271 * C1081;
    const double C11113 = C5271 * C1066;
    const double C26782 = C5271 * C630;
    const double C26776 = C5271 * C620;
    const double C31564 = C31562 * be;
    const double C5270 = C31549 + (C31562 * ae) / C31512 + C31538;
    const double C951 = C949 * C32644;
    const double C950 = C948 * C118;
    const double C16001 = C15998 + C15999;
    const double C16000 = C15996 + C15997;
    const double C20036 = C20032 + C20033;
    const double C21839 = C21835 + C21836;
    const double C6903 = C6902 + C6898;
    const double C11371 = C11370 + C11360;
    const double C30916 = C6630 * C31686;
    const double C30909 = C6632 * C31686;
    const double C30903 = C6634 * C31686;
    const double C31188 = C7230 * C31686;
    const double C31182 = C7226 * C31686;
    const double C31493 = C6887 * C31686;
    const double C31487 = C6890 * C31686;
    const double C12013 =
        (C31686 / C31518 + ((C31597 * C31700 + C24419) * ae) / C31512) /
            C31518 -
        ((C31597 * (C31700 / C31518 + (0 * ae) / C31512) + C32932) * be) /
            C31512;
    const double C13613 =
        C31686 / C31518 - ((C31597 * C31700 + C24419) * be) / C31512;
    const double C22673 =
        C31686 / C31518 + ((C31597 * C31700 + C24419) * ae) / C31512;
    const double C31689 = C31685 * be;
    const double C2382 = C2369 + C2370;
    const double C3687 = C3663 + C3664;
    const double C10964 = C10951 + C10952;
    const double C21121 = C21097 + C21098;
    const double C24975 = C24968 + C24969;
    const double C3341 = C3325 + C3326;
    const double C4758 = C4751 + C4752;
    const double C15732 = C15716 + C15717;
    const double C19325 = C19318 + C19319;
    const double C26791 = C26784 + C26785;
    const double C3060 = C3047 + C3048;
    const double C15451 = C15438 + C15439;
    const double C1281 = C1265 + C1266;
    const double C2809 = C2789 + C2790;
    const double C5733 = C5717 + C5718;
    const double C15200 = C15180 + C15181;
    const double C18290 = C18274 + C18275;
    const double C3974 = C3961 + C3962;
    const double C21408 = C21395 + C21396;
    const double C2379 = C2363 + C2364;
    const double C3691 = C3671 + C3672;
    const double C10961 = C10945 + C10946;
    const double C21125 = C21105 + C21106;
    const double C24972 = C24962 + C24963;
    const double C3345 = C3333 + C3334;
    const double C4755 = C4745 + C4746;
    const double C15736 = C15724 + C15725;
    const double C19322 = C19312 + C19313;
    const double C26788 = C26778 + C26779;
    const double C31923 = C31922 + C31916;
    const double C7825 = C7821 * C32644;
    const double C7824 = C7820 * C118;
    const double C7823 = C7819 * C32644;
    const double C8681 = C7819 * C32886;
    const double C28927 = C7819 * C20880;
    const double C7822 = C7818 * C118;
    const double C8680 = C7818 * C3448;
    const double C28926 = C7818 * C20882;
    const double C8685 = C8682 * C3449;
    const double C28928 = C8682 * C20883;
    const double C8686 = C8683 * C32731;
    const double C28929 = C8683 * C32731;
    const double C17993 = C17973 + C17974;
    const double C17990 = C17967 + C17968;
    const double C17987 = C17961 + C17962;
    const double C17984 = C17955 + C17956;
    const double C17981 = C17949 + C17950;
    const double C17978 = C17943 + C17944;
    const double C18292 = C18278 + C18279;
    const double C18289 = C18272 + C18273;
    const double C18286 = C18266 + C18267;
    const double C18283 = C18260 + C18261;
    const double C18620 = C18606 + C18607;
    const double C18617 = C18600 + C18601;
    const double C18614 = C18594 + C18595;
    const double C18611 = C18588 + C18589;
    const double C19112 = C19092 + C19093;
    const double C19109 = C19086 + C19087;
    const double C19106 = C19080 + C19081;
    const double C19103 = C19074 + C19075;
    const double C19100 = C19068 + C19069;
    const double C19097 = C19062 + C19063;
    const double C19324 = C19316 + C19317;
    const double C19321 = C19310 + C19311;
    const double C19536 = C19528 + C19529;
    const double C19533 = C19522 + C19523;
    const double C24664 = C24654 + C24655;
    const double C24661 = C24648 + C24649;
    const double C24974 = C24966 + C24967;
    const double C24971 = C24960 + C24961;
    const double C2791 = C2664 * C220;
    const double C2783 = C2664 * C240;
    const double C2777 = C2664 * C225;
    const double C2769 = C2664 * C215;
    const double C3053 = C2664 * C224;
    const double C3045 = C2664 * C214;
    const double C3335 = C2664 * C620;
    const double C3327 = C2664 * C630;
    const double C3673 = C2664 * C325;
    const double C3665 = C2664 * C345;
    const double C3659 = C2664 * C330;
    const double C3651 = C2664 * C320;
    const double C3967 = C2664 * C329;
    const double C3959 = C2664 * C319;
    const double C15182 = C15055 * C220;
    const double C15174 = C15055 * C240;
    const double C15168 = C15055 * C225;
    const double C15160 = C15055 * C215;
    const double C15444 = C15055 * C224;
    const double C15436 = C15055 * C214;
    const double C15726 = C15055 * C620;
    const double C15718 = C15055 * C630;
    const double C21107 = C15055 * C325;
    const double C21099 = C15055 * C345;
    const double C21093 = C15055 * C330;
    const double C21085 = C15055 * C320;
    const double C21401 = C15055 * C329;
    const double C21393 = C15055 * C319;
    const double C5436 = C5416 + C5417;
    const double C5433 = C5410 + C5411;
    const double C5430 = C5404 + C5405;
    const double C5427 = C5398 + C5399;
    const double C5424 = C5392 + C5393;
    const double C5421 = C5386 + C5387;
    const double C5735 = C5721 + C5722;
    const double C5732 = C5715 + C5716;
    const double C5729 = C5709 + C5710;
    const double C5726 = C5703 + C5704;
    const double C6063 = C6049 + C6050;
    const double C6060 = C6043 + C6044;
    const double C6057 = C6037 + C6038;
    const double C6054 = C6031 + C6032;
    const double C10631 = C10611 + C10612;
    const double C10628 = C10605 + C10606;
    const double C10625 = C10599 + C10600;
    const double C10622 = C10593 + C10594;
    const double C10619 = C10587 + C10588;
    const double C10616 = C10581 + C10582;
    const double C10963 = C10949 + C10950;
    const double C10960 = C10943 + C10944;
    const double C10957 = C10937 + C10938;
    const double C10954 = C10931 + C10932;
    const double C11127 = C11119 + C11120;
    const double C11124 = C11113 + C11114;
    const double C26790 = C26782 + C26783;
    const double C26787 = C26776 + C26777;
    const double C31565 = C31564 / C31512;
    const double C5418 = C5270 * C869;
    const double C5412 = C5270 * C875;
    const double C5402 = C5270 * C238;
    const double C5396 = C5270 * C218;
    const double C5390 = C5270 * C227;
    const double C5384 = C5270 * C217;
    const double C5719 = C5270 * C239;
    const double C5713 = C5270 * C219;
    const double C5707 = C5270 * C226;
    const double C5701 = C5270 * C216;
    const double C6051 = C5270 * C618;
    const double C6045 = C5270 * C628;
    const double C6039 = C5270 * C1064;
    const double C6033 = C5270 * C1073;
    const double C10613 = C5270 * C1966;
    const double C10607 = C5270 * C1972;
    const double C10597 = C5270 * C343;
    const double C10591 = C5270 * C323;
    const double C10585 = C5270 * C332;
    const double C10579 = C5270 * C322;
    const double C10947 = C5270 * C344;
    const double C10941 = C5270 * C324;
    const double C10935 = C5270 * C331;
    const double C10929 = C5270 * C321;
    const double C11117 = C5270 * C1080;
    const double C11111 = C5270 * C1065;
    const double C26780 = C5270 * C629;
    const double C26774 = C5270 * C619;
    const double C952 = C950 + C951;
    const double C20039 = C20036 + C20037;
    const double C21840 = C21839 + C21837;
    const double C14435 = C6890 * C13613;
    const double C14428 = C6887 * C13613;
    const double C14672 = C7228 * C13613;
    const double C14945 = C7053 * C13613;
    const double C28125 = C6890 * C22673;
    const double C28118 = C6887 * C22673;
    const double C28362 = C7228 * C22673;
    const double C28629 = C7053 * C22673;
    const double C31691 = C31689 / C31512;
    const double C357 =
        (3 * C31810 + ae * C31811 + C31758 * C31838 + ae * C31757 * C31923 +
         C31757 *
             (ae * C31923 +
              C31757 *
                  (3 * C31834 + ae * C31835 +
                   C31758 * (2 * C31830 + ae * C31831 +
                             C31758 * (C31826 + ae * C31758 * C31827 +
                                       C31758 * (ae * C31827 +
                                                 C31758 * std::pow(C31760, 8) *
                                                     bs[8] * C31768)))))) /
        C31517;
    const double C535 =
        (ae * (4 * C31896 + C31758 * C31923 +
               (3 * C31859 + C31758 * C31914) * ae) +
         C31757 *
             (4 * C31838 + ae * C31839 +
              C31758 *
                  (3 * C31834 + ae * C31835 +
                   C31758 * (2 * C31830 + ae * C31831 +
                             C31758 * (C31826 + ae * C31758 * C31827 +
                                       C31758 * (ae * C31827 +
                                                 C31758 * std::pow(C31760, 8) *
                                                     bs[8] * C31768)))))) /
        C31517;
    const double C637 =
        (ae * C31927 * C31923 +
         C31757 * C31927 *
             (3 * C31834 + ae * C31835 +
              C31758 * (2 * C31830 + ae * C31831 +
                        C31758 * (C31826 + ae * C31758 * C31827 +
                                  C31758 * (ae * C31827 +
                                            C31758 * std::pow(C31760, 8) *
                                                bs[8] * C31768))))) /
        C31517;
    const double C138 = (5 * (3 * C31880 + C31758 * C31896 + C32149 * ae) +
                         C31758 * (4 * C31896 + C31758 * C31923 + C32153 * ae) +
                         (4 * C32149 + C31758 * C32153) * ae) /
                        C31512;
    const double C237 =
        (3 * C31880 + C31758 * C31896 + C32149 * ae + C31923 * C31936) / C31512;
    const double C342 =
        (3 * C31880 + C31758 * C31896 + C32149 * ae + C31923 * C31969) / C31512;
    const double C445 =
        (C31927 * (4 * C31896 + C31758 * C31923 + C32153 * ae)) / C31512;
    const double C533 =
        (C31757 * (4 * C31896 + C31758 * C31923 + C32153 * ae)) / C31512;
    const double C627 = (C31757 * C31927 * C31923) / C31512;
    const double C7827 = C7824 + C7825;
    const double C7826 = C7822 + C7823;
    const double C8684 = C8680 + C8681;
    const double C28930 = C28926 + C28927;
    const double C2810 = C2791 + C2792;
    const double C2806 = C2783 + C2784;
    const double C2803 = C2777 + C2778;
    const double C2799 = C2769 + C2770;
    const double C3063 = C3053 + C3054;
    const double C3059 = C3045 + C3046;
    const double C3346 = C3335 + C3336;
    const double C3342 = C3327 + C3328;
    const double C3692 = C3673 + C3674;
    const double C3688 = C3665 + C3666;
    const double C3685 = C3659 + C3660;
    const double C3681 = C3651 + C3652;
    const double C3977 = C3967 + C3968;
    const double C3973 = C3959 + C3960;
    const double C15201 = C15182 + C15183;
    const double C15197 = C15174 + C15175;
    const double C15194 = C15168 + C15169;
    const double C15190 = C15160 + C15161;
    const double C15454 = C15444 + C15445;
    const double C15450 = C15436 + C15437;
    const double C15737 = C15726 + C15727;
    const double C15733 = C15718 + C15719;
    const double C21126 = C21107 + C21108;
    const double C21122 = C21099 + C21100;
    const double C21119 = C21093 + C21094;
    const double C21115 = C21085 + C21086;
    const double C21411 = C21401 + C21402;
    const double C21407 = C21393 + C21394;
    const double C31566 = C31549 - C31565;
    const double C5437 = C5418 + C5419;
    const double C5434 = C5412 + C5413;
    const double C5429 = C5402 + C5403;
    const double C5426 = C5396 + C5397;
    const double C5423 = C5390 + C5391;
    const double C5420 = C5384 + C5385;
    const double C5734 = C5719 + C5720;
    const double C5731 = C5713 + C5714;
    const double C5728 = C5707 + C5708;
    const double C5725 = C5701 + C5702;
    const double C6064 = C6051 + C6052;
    const double C6061 = C6045 + C6046;
    const double C6058 = C6039 + C6040;
    const double C6055 = C6033 + C6034;
    const double C10632 = C10613 + C10614;
    const double C10629 = C10607 + C10608;
    const double C10624 = C10597 + C10598;
    const double C10621 = C10591 + C10592;
    const double C10618 = C10585 + C10586;
    const double C10615 = C10579 + C10580;
    const double C10962 = C10947 + C10948;
    const double C10959 = C10941 + C10942;
    const double C10956 = C10935 + C10936;
    const double C10953 = C10929 + C10930;
    const double C11126 = C11117 + C11118;
    const double C11123 = C11111 + C11112;
    const double C26789 = C26780 + C26781;
    const double C26786 = C26774 + C26775;
    const double C20040 = C20039 + C20038;
    const double C21841 = C21840 + C21838;
    const double C31693 = C31679 - C31691;
    const double C8687 = C8684 + C8685;
    const double C28931 = C28930 + C28928;
    const double C31567 = C31566 + C31538;
    const double C5439 = C5429 + C5430;
    const double C5438 = C5426 + C5427;
    const double C27183 = C6063 + C6064;
    const double C27180 = C6064 + C6063;
    const double C27182 = C6060 + C6061;
    const double C27181 = C6061 + C6060;
    const double C10634 = C10624 + C10625;
    const double C10633 = C10621 + C10622;
    const double C31694 = C31693 + C31664;
    const double C8688 = C8687 + C8686;
    const double C28932 = C28931 + C28929;
    const double C17975 = C31567 * C869;
    const double C17969 = C31567 * C875;
    const double C17959 = C31567 * C238;
    const double C17953 = C31567 * C218;
    const double C17947 = C31567 * C227;
    const double C17941 = C31567 * C217;
    const double C18276 = C31567 * C239;
    const double C18270 = C31567 * C219;
    const double C18264 = C31567 * C226;
    const double C18258 = C31567 * C216;
    const double C18608 = C31567 * C618;
    const double C18602 = C31567 * C628;
    const double C18596 = C31567 * C1064;
    const double C18590 = C31567 * C1073;
    const double C19094 = C31567 * C323;
    const double C19088 = C31567 * C343;
    const double C19082 = C31567 * C1065;
    const double C19076 = C31567 * C1080;
    const double C19066 = C31567 * C332;
    const double C19060 = C31567 * C322;
    const double C19314 = C31567 * C629;
    const double C19308 = C31567 * C619;
    const double C19526 = C31567 * C331;
    const double C19520 = C31567 * C321;
    const double C24656 = C31567 * C1966;
    const double C24650 = C31567 * C1972;
    const double C24964 = C31567 * C344;
    const double C24958 = C31567 * C324;
    const double C113 =
        (((((0 - (C31510 * C31511) / C31512) * ae) / C31512 -
           (0 * be) / C31524 + (2 * C31513) / C31512) /
              C31518 -
          ((C31510 * C31547 + 0) * be) / C31512 + C31530 - C31540) /
             C31518 +
         ((C31510 * C31561 + 0) * ae) / C31512) /
            C31518 -
        ((C31510 * (C31561 / C31518 +
                    ((C31510 * C31567 + C32545) * ae) / C31512 + C31563) +
          C32957) *
         be) /
            C31512 +
        C31567 / C31518 + ((C31510 * C31563 + C32553) * ae) / C31512 +
        2 * (C31538 / C31518 - (0 * be) / C31512);
    const double C114 =
        (C31561 / C31518 + ((C31510 * C31567 + C32545) * ae) / C31512 +
         C31563) /
            C31518 -
        ((C31510 * (C31567 / C31518 +
                    ((C31510 * C31563 + C32553) * ae) / C31512 + 2 * C31573) +
          C32950) *
         be) /
            C31512 +
        2 * (C31563 / C31518 + ((C31510 * C31573 + C17823) * ae) / C31512);
    const double C115 =
        (C31567 / C31518 + ((C31510 * C31563 + C32553) * ae) / C31512 +
         2 * C31573) /
            C31518 -
        ((C31510 *
              (C31563 / C31518 + ((C31510 * C31573 + C17823) * ae) / C31512) +
          C32937) *
         be) /
            C31512 +
        3 * (C31573 / C31518 + (0 * ae) / C31512);
    const double C2662 =
        C31561 / C31518 - ((C31510 * C31567 + C32545) * be) / C31512 + C31563;
    const double C2663 = C31567 / C31518 -
                         ((C31510 * C31563 + C32553) * be) / C31512 +
                         2 * C31573;
    const double C15053 =
        C31561 / C31518 + ((C31510 * C31567 + C32545) * ae) / C31512 + C31563;
    const double C15054 = C31567 / C31518 +
                          ((C31510 * C31563 + C32553) * ae) / C31512 +
                          2 * C31573;
    const double C5441 = C5439 + C5431;
    const double C5440 = C5438 + C5428;
    const double C27187 = C6062 + C27183;
    const double C27184 = C27180 + C6062;
    const double C27186 = C6059 + C27182;
    const double C27185 = C27181 + C6059;
    const double C10636 = C10634 + C10626;
    const double C10635 = C10633 + C10623;
    const double C30918 = C6228 * C31694;
    const double C30907 = C6226 * C31694;
    const double C30901 = C6224 * C31694;
    const double C31186 = C6425 * C31694;
    const double C31180 = C6423 * C31694;
    const double C31495 = C6634 * C31694;
    const double C31489 = C6632 * C31694;
    const double C12010 =
        (((((0 - (C31597 * C31647) / C31512) * ae) / C31512 -
           (0 * be) / C31524 + (2 * C31648) / C31512) /
              C31518 -
          ((C31597 * C31683 + 0) * be) / C31512 + C31657 - C31670) /
             C31518 +
         ((C31597 * C31692 + 0) * ae) / C31512) /
            C31518 -
        ((C31597 * (C31692 / C31518 +
                    ((C31597 * C31694 + C32727) * ae) / C31512 + C31686) +
          C32959) *
         be) /
            C31512 +
        C31694 / C31518 + ((C31597 * C31686 + C32734) * ae) / C31512 +
        2 * (C31664 / C31518 - (0 * be) / C31512);
    const double C12011 =
        (C31692 / C31518 + ((C31597 * C31694 + C32727) * ae) / C31512 +
         C31686) /
            C31518 -
        ((C31597 * (C31694 / C31518 +
                    ((C31597 * C31686 + C32734) * ae) / C31512 + 2 * C31700) +
          C32956) *
         be) /
            C31512 +
        2 * (C31686 / C31518 + ((C31597 * C31700 + C24419) * ae) / C31512);
    const double C12012 =
        (C31694 / C31518 + ((C31597 * C31686 + C32734) * ae) / C31512 +
         2 * C31700) /
            C31518 -
        ((C31597 *
              (C31686 / C31518 + ((C31597 * C31700 + C24419) * ae) / C31512) +
          C32947) *
         be) /
            C31512 +
        3 * (C31700 / C31518 + (0 * ae) / C31512);
    const double C13611 =
        C31692 / C31518 - ((C31597 * C31694 + C32727) * be) / C31512 + C31686;
    const double C13612 = C31694 / C31518 -
                          ((C31597 * C31686 + C32734) * be) / C31512 +
                          2 * C31700;
    const double C22671 =
        C31692 / C31518 + ((C31597 * C31694 + C32727) * ae) / C31512 + C31686;
    const double C22672 = C31694 / C31518 +
                          ((C31597 * C31686 + C32734) * ae) / C31512 +
                          2 * C31700;
    const double C17994 = C17975 + C17976;
    const double C17991 = C17969 + C17970;
    const double C17986 = C17959 + C17960;
    const double C17983 = C17953 + C17954;
    const double C17980 = C17947 + C17948;
    const double C17977 = C17941 + C17942;
    const double C18291 = C18276 + C18277;
    const double C18288 = C18270 + C18271;
    const double C18285 = C18264 + C18265;
    const double C18282 = C18258 + C18259;
    const double C18621 = C18608 + C18609;
    const double C18618 = C18602 + C18603;
    const double C18615 = C18596 + C18597;
    const double C18612 = C18590 + C18591;
    const double C19113 = C19094 + C19095;
    const double C19110 = C19088 + C19089;
    const double C19107 = C19082 + C19083;
    const double C19104 = C19076 + C19077;
    const double C19099 = C19066 + C19067;
    const double C19096 = C19060 + C19061;
    const double C19323 = C19314 + C19315;
    const double C19320 = C19308 + C19309;
    const double C19535 = C19526 + C19527;
    const double C19532 = C19520 + C19521;
    const double C24665 = C24656 + C24657;
    const double C24662 = C24650 + C24651;
    const double C24973 = C24964 + C24965;
    const double C24970 = C24958 + C24959;
    const double C2795 = C2662 * C218;
    const double C2787 = C2662 * C238;
    const double C2773 = C2662 * C227;
    const double C2765 = C2662 * C217;
    const double C3049 = C2662 * C226;
    const double C3041 = C2662 * C216;
    const double C3339 = C2662 * C618;
    const double C3331 = C2662 * C628;
    const double C3677 = C2662 * C323;
    const double C3669 = C2662 * C343;
    const double C3655 = C2662 * C332;
    const double C3647 = C2662 * C322;
    const double C3963 = C2662 * C331;
    const double C3955 = C2662 * C321;
    const double C2793 = C2663 * C219;
    const double C2785 = C2663 * C239;
    const double C2775 = C2663 * C226;
    const double C2767 = C2663 * C216;
    const double C3051 = C2663 * C225;
    const double C3043 = C2663 * C215;
    const double C3337 = C2663 * C619;
    const double C3329 = C2663 * C629;
    const double C3675 = C2663 * C324;
    const double C3667 = C2663 * C344;
    const double C3657 = C2663 * C331;
    const double C3649 = C2663 * C321;
    const double C3965 = C2663 * C330;
    const double C3957 = C2663 * C320;
    const double C15186 = C15053 * C218;
    const double C15178 = C15053 * C238;
    const double C15164 = C15053 * C227;
    const double C15156 = C15053 * C217;
    const double C15440 = C15053 * C226;
    const double C15432 = C15053 * C216;
    const double C15730 = C15053 * C618;
    const double C15722 = C15053 * C628;
    const double C21111 = C15053 * C323;
    const double C21103 = C15053 * C343;
    const double C21089 = C15053 * C332;
    const double C21081 = C15053 * C322;
    const double C21397 = C15053 * C331;
    const double C21389 = C15053 * C321;
    const double C15184 = C15054 * C219;
    const double C15176 = C15054 * C239;
    const double C15166 = C15054 * C226;
    const double C15158 = C15054 * C216;
    const double C15442 = C15054 * C225;
    const double C15434 = C15054 * C215;
    const double C15728 = C15054 * C619;
    const double C15720 = C15054 * C629;
    const double C21109 = C15054 * C324;
    const double C21101 = C15054 * C344;
    const double C21091 = C15054 * C331;
    const double C21083 = C15054 * C321;
    const double C21399 = C15054 * C330;
    const double C21391 = C15054 * C320;
    const double C5443 = C5441 * C32644;
    const double C5442 = C5440 * C118;
    const double C30919 = C30907 + C30908;
    const double C14439 = C6226 * C13611;
    const double C14424 = C6224 * C13611;
    const double C14668 = C6423 * C13611;
    const double C14949 = C6634 * C13611;
    const double C14437 = C6632 * C13612;
    const double C14426 = C6634 * C13612;
    const double C14670 = C7226 * C13612;
    const double C14947 = C6887 * C13612;
    const double C28129 = C6226 * C22671;
    const double C28114 = C6224 * C22671;
    const double C28358 = C6423 * C22671;
    const double C28633 = C6634 * C22671;
    const double C28127 = C6632 * C22672;
    const double C28116 = C6634 * C22672;
    const double C28360 = C7226 * C22672;
    const double C28631 = C6887 * C22672;
    const double C17996 = C17986 + C17987;
    const double C17995 = C17983 + C17984;
    const double C19735 = C18620 + C18621;
    const double C19732 = C18621 + C18620;
    const double C19734 = C18617 + C18618;
    const double C19733 = C18618 + C18617;
    const double C24644 = C19113 + C19112;
    const double C24645 = C19110 + C19109;
    const double C2812 = C2795 + C2796;
    const double C2808 = C2787 + C2788;
    const double C2801 = C2773 + C2774;
    const double C2797 = C2765 + C2766;
    const double C3061 = C3049 + C3050;
    const double C3057 = C3041 + C3042;
    const double C3348 = C3339 + C3340;
    const double C3344 = C3331 + C3332;
    const double C3694 = C3677 + C3678;
    const double C3690 = C3669 + C3670;
    const double C3683 = C3655 + C3656;
    const double C3679 = C3647 + C3648;
    const double C3975 = C3963 + C3964;
    const double C3971 = C3955 + C3956;
    const double C2811 = C2793 + C2794;
    const double C2807 = C2785 + C2786;
    const double C2802 = C2775 + C2776;
    const double C2798 = C2767 + C2768;
    const double C3062 = C3051 + C3052;
    const double C3058 = C3043 + C3044;
    const double C3347 = C3337 + C3338;
    const double C3343 = C3329 + C3330;
    const double C3693 = C3675 + C3676;
    const double C3689 = C3667 + C3668;
    const double C3684 = C3657 + C3658;
    const double C3680 = C3649 + C3650;
    const double C3976 = C3965 + C3966;
    const double C3972 = C3957 + C3958;
    const double C15203 = C15186 + C15187;
    const double C15199 = C15178 + C15179;
    const double C15192 = C15164 + C15165;
    const double C15188 = C15156 + C15157;
    const double C15452 = C15440 + C15441;
    const double C15448 = C15432 + C15433;
    const double C15739 = C15730 + C15731;
    const double C15735 = C15722 + C15723;
    const double C21128 = C21111 + C21112;
    const double C21124 = C21103 + C21104;
    const double C21117 = C21089 + C21090;
    const double C21113 = C21081 + C21082;
    const double C21409 = C21397 + C21398;
    const double C21405 = C21389 + C21390;
    const double C15202 = C15184 + C15185;
    const double C15198 = C15176 + C15177;
    const double C15193 = C15166 + C15167;
    const double C15189 = C15158 + C15159;
    const double C15453 = C15442 + C15443;
    const double C15449 = C15434 + C15435;
    const double C15738 = C15728 + C15729;
    const double C15734 = C15720 + C15721;
    const double C21127 = C21109 + C21110;
    const double C21123 = C21101 + C21102;
    const double C21118 = C21091 + C21092;
    const double C21114 = C21083 + C21084;
    const double C21410 = C21399 + C21400;
    const double C21406 = C21391 + C21392;
    const double C5444 = C5442 + C5443;
    const double C30920 = C30919 + C30909;
    const double C17998 = C17996 + C17988;
    const double C17997 = C17995 + C17985;
    const double C19739 = C18619 + C19735;
    const double C19736 = C19732 + C18619;
    const double C19738 = C18616 + C19734;
    const double C19737 = C19733 + C18616;
    const double C24658 = C24644 + C19111;
    const double C24659 = C24645 + C19108;
    const double C30921 = C30920 + C30910;
    const double C18000 = C17998 * C32644;
    const double C17999 = C17997 * C118;
    const double C30922 = C30921 + C30911;
    const double C18001 = C17999 + C18000;
    const double C30923 = C30922 + C30912;
    d2ee[0] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                (((((C31567 * C119 + C32545 * C126 + C31563 * C120 +
                     C32553 * C127 + C31573 * C121 + C17823 * C128) *
                        C118 +
                    (C31567 * C131 + C32545 * C140 + C31563 * C132 +
                     C32553 * C141 + C31573 * C133 + C17823 * C142) *
                        C32644) *
                       C32687 +
                   ((C17977 + C17978 + C17979) * C118 +
                    (C17980 + C17981 + C17982) * C32644) *
                       C32694 +
                   C18001 * C17826) *
                      C32603 * C440 -
                  (((C17989 + C17990 + C17991) * C32644 +
                    (C17992 + C17993 + C17994) * C118) *
                       C17826 +
                   ((C17988 + C17987 + C17986) * C32644 +
                    (C17985 + C17984 + C17983) * C118) *
                       C32694 +
                   ((C17982 + C17981 + C17980) * C32644 +
                    (C17979 + C17978 + C17977) * C118) *
                       C32687) *
                      C32603 * C441) *
                     C442 +
                 ((((C18282 + C18283 + C18284) * C118 +
                    (C18285 + C18286 + C18287) * C32644) *
                       C32687 +
                   ((C18288 + C18289 + C18290) * C118 +
                    (C18291 + C18292 + C18293) * C32644) *
                       C32694 +
                   ((C31567 * C868 + C32545 * C877 + C31563 * C867 +
                     C32553 * C876 + C31573 * C1244 + C17823 * C1245) *
                        C118 +
                    (C31567 * C874 + C32545 * C886 + C31563 * C873 +
                     C32553 * C885 + C31573 * C1246 + C17823 * C1247) *
                        C32644) *
                       C17826) *
                      C32603 * C441 -
                  (((C18293 + C18292 + C18291) * C32644 +
                    (C18290 + C18289 + C18288) * C118) *
                       C17826 +
                   ((C18287 + C18286 + C18285) * C32644 +
                    (C18284 + C18283 + C18282) * C118) *
                       C32694 +
                   ((C31573 * C134 + C17823 * C143 + C31563 * C133 +
                     C32553 * C142 + C31567 * C132 + C32545 * C141) *
                        C32644 +
                    (C31573 * C122 + C17823 * C129 + C31563 * C121 +
                     C32553 * C128 + C31567 * C120 + C32545 * C127) *
                        C118) *
                       C32687) *
                      C32603 * C440) *
                     C443)) /
               (p * q * std::sqrt(p + q));
    d2ee[1] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                (((((C31567 * C119 + C32545 * C126 + C31563 * C120 +
                     C32553 * C127 + C31573 * C121 + C17823 * C128) *
                        C118 +
                    (C31567 * C131 + C32545 * C140 + C31563 * C132 +
                     C32553 * C141 + C31573 * C133 + C17823 * C142) *
                        C32644) *
                       C32687 +
                   ((C17977 + C17978 + C17979) * C118 +
                    (C17980 + C17981 + C17982) * C32644) *
                       C32694 +
                   C18001 * C17826) *
                      C530 -
                  (((C18610 + C18611 + C18612) * C32644 +
                    (C18613 + C18614 + C18615) * C118) *
                       C17826 +
                   ((C18616 + C18617 + C18618) * C32644 +
                    (C18619 + C18620 + C18621) * C118) *
                       C32694 +
                   ((C31573 * C330 + C17823 * C350 + C31563 * C331 +
                     C32553 * C351 + C31567 * C332 + C32545 * C352) *
                        C32644 +
                    (C31573 * C320 + C17823 * C335 + C31563 * C321 +
                     C32553 * C336 + C31567 * C322 + C32545 * C337) *
                        C118) *
                       C32687) *
                      C531) *
                     C440 +
                 ((((C18621 + C18620 + C18619) * C118 +
                    (C18618 + C18617 + C18616) * C32644) *
                       C32687 +
                   ((C18615 + C18614 + C18613) * C118 +
                    (C18612 + C18611 + C18610) * C32644) *
                       C32694 +
                   ((C31567 * C1580 + C32545 * C1583 + C31563 * C1581 +
                     C32553 * C1584 + C31573 * C1582 + C17823 * C1585) *
                        C118 +
                    (C31567 * C1586 + C32545 * C1589 + C31563 * C1587 +
                     C32553 * C1590 + C31573 * C1588 + C17823 * C1591) *
                        C32644) *
                       C17826) *
                      C531 -
                  (((C17989 + C17990 + C17991) * C32644 +
                    (C17992 + C17993 + C17994) * C118) *
                       C17826 +
                   ((C17988 + C17987 + C17986) * C32644 +
                    (C17985 + C17984 + C17983) * C118) *
                       C32694 +
                   ((C17982 + C17981 + C17980) * C32644 +
                    (C17979 + C17978 + C17977) * C118) *
                       C32687) *
                      C530) *
                     C441) *
                C32577) /
               (p * q * std::sqrt(p + q));
    d2ee[2] += (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                ((((C31567 * C119 + C32545 * C126 + C31563 * C120 +
                    C32553 * C127 + C31573 * C121 + C17823 * C128) *
                       C118 +
                   (C31567 * C131 + C32545 * C140 + C31563 * C132 +
                    C32553 * C141 + C31573 * C133 + C17823 * C142) *
                       C32644) *
                      C32687 +
                  ((C17977 + C17978 + C17979) * C118 +
                   (C17980 + C17981 + C17982) * C32644) *
                      C32694 +
                  C18001 * C17826) *
                     C32603 * C209 -
                 (((C17989 + C17990 + C17991) * C32644 +
                   (C17992 + C17993 + C17994) * C118) *
                      C17826 +
                  ((C17988 + C17987 + C17986) * C32644 +
                   (C17985 + C17984 + C17983) * C118) *
                      C32694 +
                  ((C17982 + C17981 + C17980) * C32644 +
                   (C17979 + C17978 + C17977) * C118) *
                      C32687) *
                     C32603 * C210 +
                 (C18001 * C32687 +
                  ((C17994 + C17993 + C17992) * C118 +
                   (C17991 + C17990 + C17989) * C32644) *
                      C32694 +
                  ((C31567 * C870 + C32545 * C879 + C31563 * C871 +
                    C32553 * C880 + C31573 * C872 + C17823 * C881) *
                       C118 +
                   (C31567 * C882 + C32545 * C888 + C31563 * C883 +
                    C32553 * C889 + C31573 * C884 + C17823 * C890) *
                       C32644) *
                      C17826) *
                     C32603 * C211) *
                C32577) /
                   (p * q * std::sqrt(p + q)) -
               (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                ((((C31567 * C119 + C32545 * C126 + C31563 * C120 +
                    C32553 * C127 + C31573 * C121 + C17823 * C128) *
                       C118 +
                   (C31567 * C131 + C32545 * C140 + C31563 * C132 +
                    C32553 * C141 + C31573 * C133 + C17823 * C142) *
                       C32644) *
                      C32687 +
                  ((C31567 * C217 + C32545 * C232 + C31563 * C216 +
                    C32553 * C231 + C31573 * C215 + C17823 * C230) *
                       C118 +
                   (C31567 * C227 + C32545 * C247 + C31563 * C226 +
                    C32553 * C246 + C31573 * C225 + C17823 * C245) *
                       C32644) *
                      C32694 +
                  ((C31567 * C218 + C32545 * C233 + C31563 * C219 +
                    C32553 * C234 + C31573 * C220 + C17823 * C235) *
                       C118 +
                   (C31567 * C238 + C32545 * C248 + C31563 * C239 +
                    C32553 * C249 + C31573 * C240 + C17823 * C250) *
                       C32644) *
                      C17826) *
                     C32603 * C32589 * C110 -
                 (((C31573 * C241 + C17823 * C251 + C31563 * C240 +
                    C32553 * C250 + C31567 * C239 + C32545 * C249) *
                       C32644 +
                   (C31573 * C221 + C17823 * C236 + C31563 * C220 +
                    C32553 * C235 + C31567 * C219 + C32545 * C234) *
                       C118) *
                      C17826 +
                  ((C31573 * C224 + C17823 * C244 + C31563 * C225 +
                    C32553 * C245 + C31567 * C226 + C32545 * C246) *
                       C32644 +
                   (C31573 * C214 + C17823 * C229 + C31563 * C215 +
                    C32553 * C230 + C31567 * C216 + C32545 * C231) *
                       C118) *
                      C32694 +
                  ((C31573 * C134 + C17823 * C143 + C31563 * C133 +
                    C32553 * C142 + C31567 * C132 + C32545 * C141) *
                       C32644 +
                   (C31573 * C122 + C17823 * C129 + C31563 * C121 +
                    C32553 * C128 + C31567 * C120 + C32545 * C127) *
                       C118) *
                      C32687) *
                     C32603 * C32589 * C111 +
                 (((C31567 * C121 + C32545 * C128 + C31563 * C122 +
                    C32553 * C129 + C31573 * C123 + C17823 * C130) *
                       C118 +
                   (C31567 * C133 + C32545 * C142 + C31563 * C134 +
                    C32553 * C143 + C31573 * C135 + C17823 * C144) *
                       C32644) *
                      C32687 +
                  ((C31567 * C215 + C32545 * C230 + C31563 * C214 +
                    C32553 * C229 + C31573 * C213 + C17823 * C228) *
                       C118 +
                   (C31567 * C225 + C32545 * C245 + C31563 * C224 +
                    C32553 * C244 + C31573 * C223 + C17823 * C243) *
                       C32644) *
                      C32694 +
                  ((C31567 * C220 + C32545 * C235 + C31563 * C221 +
                    C32553 * C236 + C31573 * C222 + C17823 * C237) *
                       C118 +
                   (C31567 * C240 + C32545 * C250 + C31563 * C241 +
                    C32553 * C251 + C31573 * C242 + C17823 * C252) *
                       C32644) *
                      C17826) *
                     C32603 * C32589 * C112)) /
                   (p * q * std::sqrt(p + q)) +
               (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                ((((C31567 * C119 + C32545 * C126 + C31563 * C120 +
                    C32553 * C127 + C31573 * C121 + C17823 * C128) *
                       C118 +
                   (C31567 * C131 + C32545 * C140 + C31563 * C132 +
                    C32553 * C141 + C31573 * C133 + C17823 * C142) *
                       C32644) *
                      C32687 +
                  ((C17977 + C17978 + C17979) * C118 +
                   (C17980 + C17981 + C17982) * C32644) *
                      C32694 +
                  C18001 * C17826) *
                     C315 -
                 (((C31573 * C1071 + C17823 * C1089 + C31563 * C1072 +
                    C32553 * C1090 + C31567 * C1073 + C32545 * C1091) *
                       C32644 +
                   (C31573 * C1062 + C17823 * C1074 + C31563 * C1063 +
                    C32553 * C1075 + C31567 * C1064 + C32545 * C1076) *
                       C118) *
                      C17826 +
                  ((C31573 * C630 + C17823 * C635 + C31563 * C629 +
                    C32553 * C634 + C31567 * C628 + C32545 * C633) *
                       C32644 +
                   (C31573 * C620 + C17823 * C625 + C31563 * C619 +
                    C32553 * C624 + C31567 * C618 + C32545 * C623) *
                       C118) *
                      C32694 +
                  ((C31573 * C330 + C17823 * C350 + C31563 * C331 +
                    C32553 * C351 + C31567 * C332 + C32545 * C352) *
                       C32644 +
                   (C31573 * C320 + C17823 * C335 + C31563 * C321 +
                    C32553 * C336 + C31567 * C322 + C32545 * C337) *
                       C118) *
                      C32687) *
                     C316 +
                 (((C31567 * C323 + C32545 * C338 + C31563 * C324 +
                    C32553 * C339 + C31573 * C325 + C17823 * C340) *
                       C118 +
                   (C31567 * C343 + C32545 * C353 + C31563 * C344 +
                    C32553 * C354 + C31573 * C345 + C17823 * C355) *
                       C32644) *
                      C32687 +
                  ((C31567 * C1065 + C32545 * C1077 + C31563 * C1066 +
                    C32553 * C1078 + C31573 * C1067 + C17823 * C1079) *
                       C118 +
                   (C31567 * C1080 + C32545 * C1092 + C31563 * C1081 +
                    C32553 * C1093 + C31573 * C1082 + C17823 * C1094) *
                       C32644) *
                      C32694 +
                  ((C31567 * C1068 + C32545 * C1083 + C31563 * C1069 +
                    C32553 * C1084 + C31573 * C1070 + C17823 * C1085) *
                       C118 +
                   (C31567 * C1086 + C32545 * C1095 + C31563 * C1087 +
                    C32553 * C1096 + C31573 * C1088 + C17823 * C1097) *
                       C32644) *
                      C17826) *
                     C317) *
                C32589 * C32577) /
                   (p * q * std::sqrt(p + q));
    d2ee[3] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                (((((C31567 * C119 + C32545 * C126 + C31563 * C120 +
                     C32553 * C127 + C31573 * C121 + C17823 * C128) *
                        C118 +
                    (C31567 * C131 + C32545 * C140 + C31563 * C132 +
                     C32553 * C141 + C31573 * C133 + C17823 * C142) *
                        C32644) *
                       C32687 +
                   ((C17977 + C17978 + C17979) * C118 +
                    (C17980 + C17981 + C17982) * C32644) *
                       C32694 +
                   C18001 * C17826) *
                      C530 -
                  (((C31573 * C1071 + C17823 * C1089 + C31563 * C1072 +
                     C32553 * C1090 + C31567 * C1073 + C32545 * C1091) *
                        C32644 +
                    (C31573 * C1062 + C17823 * C1074 + C31563 * C1063 +
                     C32553 * C1075 + C31567 * C1064 + C32545 * C1076) *
                        C118) *
                       C17826 +
                   ((C31573 * C630 + C17823 * C635 + C31563 * C629 +
                     C32553 * C634 + C31567 * C628 + C32545 * C633) *
                        C32644 +
                    (C31573 * C620 + C17823 * C625 + C31563 * C619 +
                     C32553 * C624 + C31567 * C618 + C32545 * C623) *
                        C118) *
                       C32694 +
                   ((C31573 * C330 + C17823 * C350 + C31563 * C331 +
                     C32553 * C351 + C31567 * C332 + C32545 * C352) *
                        C32644 +
                    (C31573 * C320 + C17823 * C335 + C31563 * C321 +
                     C32553 * C336 + C31567 * C322 + C32545 * C337) *
                        C118) *
                       C32687) *
                      C531) *
                     C32589 * C442 +
                 ((((C31567 * C321 + C32545 * C336 + C31563 * C320 +
                     C32553 * C335 + C31573 * C319 + C17823 * C334) *
                        C118 +
                    (C31567 * C331 + C32545 * C351 + C31563 * C330 +
                     C32553 * C350 + C31573 * C329 + C17823 * C349) *
                        C32644) *
                       C32687 +
                   ((C31567 * C619 + C32545 * C624 + C31563 * C620 +
                     C32553 * C625 + C31573 * C621 + C17823 * C626) *
                        C118 +
                    (C31567 * C629 + C32545 * C634 + C31563 * C630 +
                     C32553 * C635 + C31573 * C631 + C17823 * C636) *
                        C32644) *
                       C32694 +
                   ((C31567 * C1063 + C32545 * C1075 + C31563 * C1062 +
                     C32553 * C1074 + C31573 * C1430 + C17823 * C1431) *
                        C118 +
                    (C31567 * C1072 + C32545 * C1090 + C31563 * C1071 +
                     C32553 * C1089 + C31573 * C1432 + C17823 * C1433) *
                        C32644) *
                       C17826) *
                      C531 -
                  (((C18293 + C18292 + C18291) * C32644 +
                    (C18290 + C18289 + C18288) * C118) *
                       C17826 +
                   ((C18287 + C18286 + C18285) * C32644 +
                    (C18284 + C18283 + C18282) * C118) *
                       C32694 +
                   ((C31573 * C134 + C17823 * C143 + C31563 * C133 +
                     C32553 * C142 + C31567 * C132 + C32545 * C141) *
                        C32644 +
                    (C31573 * C122 + C17823 * C129 + C31563 * C121 +
                     C32553 * C128 + C31567 * C120 + C32545 * C127) *
                        C118) *
                       C32687) *
                      C530) *
                     C32589 * C443)) /
               (p * q * std::sqrt(p + q));
    d2ee[4] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                ((((C31567 * C119 + C32545 * C126 + C31563 * C120 +
                    C32553 * C127 + C31573 * C121 + C17823 * C128) *
                       C118 +
                   (C31567 * C131 + C32545 * C140 + C31563 * C132 +
                    C32553 * C141 + C31573 * C133 + C17823 * C142) *
                       C32644) *
                      C32687 +
                  ((C31567 * C217 + C32545 * C232 + C31563 * C216 +
                    C32553 * C231 + C31573 * C215 + C17823 * C230) *
                       C118 +
                   (C31567 * C227 + C32545 * C247 + C31563 * C226 +
                    C32553 * C246 + C31573 * C225 + C17823 * C245) *
                       C32644) *
                      C32694 +
                  ((C31567 * C218 + C32545 * C233 + C31563 * C219 +
                    C32553 * C234 + C31573 * C220 + C17823 * C235) *
                       C118 +
                   (C31567 * C238 + C32545 * C248 + C31563 * C239 +
                    C32553 * C249 + C31573 * C240 + C17823 * C250) *
                       C32644) *
                      C17826) *
                     C32603 * C32589 * C110 -
                 (((C31573 * C241 + C17823 * C251 + C31563 * C240 +
                    C32553 * C250 + C31567 * C239 + C32545 * C249) *
                       C32644 +
                   (C31573 * C221 + C17823 * C236 + C31563 * C220 +
                    C32553 * C235 + C31567 * C219 + C32545 * C234) *
                       C118) *
                      C17826 +
                  ((C31573 * C224 + C17823 * C244 + C31563 * C225 +
                    C32553 * C245 + C31567 * C226 + C32545 * C246) *
                       C32644 +
                   (C31573 * C214 + C17823 * C229 + C31563 * C215 +
                    C32553 * C230 + C31567 * C216 + C32545 * C231) *
                       C118) *
                      C32694 +
                  ((C31573 * C134 + C17823 * C143 + C31563 * C133 +
                    C32553 * C142 + C31567 * C132 + C32545 * C141) *
                       C32644 +
                   (C31573 * C122 + C17823 * C129 + C31563 * C121 +
                    C32553 * C128 + C31567 * C120 + C32545 * C127) *
                       C118) *
                      C32687) *
                     C32603 * C32589 * C111 +
                 (((C31567 * C121 + C32545 * C128 + C31563 * C122 +
                    C32553 * C129 + C31573 * C123 + C17823 * C130) *
                       C118 +
                   (C31567 * C133 + C32545 * C142 + C31563 * C134 +
                    C32553 * C143 + C31573 * C135 + C17823 * C144) *
                       C32644) *
                      C32687 +
                  ((C31567 * C215 + C32545 * C230 + C31563 * C214 +
                    C32553 * C229 + C31573 * C213 + C17823 * C228) *
                       C118 +
                   (C31567 * C225 + C32545 * C245 + C31563 * C224 +
                    C32553 * C244 + C31573 * C223 + C17823 * C243) *
                       C32644) *
                      C32694 +
                  ((C31567 * C220 + C32545 * C235 + C31563 * C221 +
                    C32553 * C236 + C31573 * C222 + C17823 * C237) *
                       C118 +
                   (C31567 * C240 + C32545 * C250 + C31563 * C241 +
                    C32553 * C251 + C31573 * C242 + C17823 * C252) *
                       C32644) *
                      C17826) *
                     C32603 * C32589 * C112)) /
                   (p * q * std::sqrt(p + q)) -
               (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                ((((C31567 * C119 + C32545 * C126 + C31563 * C120 +
                    C32553 * C127 + C31573 * C121 + C17823 * C128) *
                       C118 +
                   (C31567 * C131 + C32545 * C140 + C31563 * C132 +
                    C32553 * C141 + C31573 * C133 + C17823 * C142) *
                       C32644) *
                      C32687 +
                  ((C17977 + C17978 + C17979) * C118 +
                   (C17980 + C17981 + C17982) * C32644) *
                      C32694 +
                  C18001 * C17826) *
                     C32603 * C209 -
                 (((C17989 + C17990 + C17991) * C32644 +
                   (C17992 + C17993 + C17994) * C118) *
                      C17826 +
                  ((C17988 + C17987 + C17986) * C32644 +
                   (C17985 + C17984 + C17983) * C118) *
                      C32694 +
                  ((C17982 + C17981 + C17980) * C32644 +
                   (C17979 + C17978 + C17977) * C118) *
                      C32687) *
                     C32603 * C210 +
                 (C18001 * C32687 +
                  ((C17994 + C17993 + C17992) * C118 +
                   (C17991 + C17990 + C17989) * C32644) *
                      C32694 +
                  ((C31567 * C870 + C32545 * C879 + C31563 * C871 +
                    C32553 * C880 + C31573 * C872 + C17823 * C881) *
                       C118 +
                   (C31567 * C882 + C32545 * C888 + C31563 * C883 +
                    C32553 * C889 + C31573 * C884 + C17823 * C890) *
                       C32644) *
                      C17826) *
                     C32603 * C211) *
                C32577) /
                   (p * q * std::sqrt(p + q));
    d2ee[5] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C15843 * C119 + C15837 * C126 + C15844 * C120 + C32550 * C127) *
                 C3448 +
             (C15843 * C131 + C15837 * C140 + C15844 * C132 + C32550 * C141) *
                 C32886 +
             (C17058 + C17059) * C3449 + (C17060 + C17061) * C32731) *
                C32687 +
            ((C15976 + C15977) * C3448 + (C15978 + C15979) * C32886 +
             C17706 * C3449 + C17707 * C32731) *
                C32694 +
            C20040 * C17826) *
               C32603 * C440 -
           (((C16550 + C16551) * C32731 + (C16552 + C16553) * C3449 +
             (C15987 + C15986) * C32886 + (C15985 + C15984) * C3448) *
                C17826 +
            ((C16554 + C16555) * C32731 + (C16556 + C16557) * C3449 +
             (C15983 + C15982) * C32886 + (C15981 + C15980) * C3448) *
                C32694 +
            (C17710 * C32731 + C17711 * C3449 + (C15979 + C15978) * C32886 +
             (C15977 + C15976) * C3448) *
                C32687) *
               C32603 * C441) *
              C442 +
          ((((C16254 + C16255) * C3448 + (C16256 + C16257) * C32886 +
             (C17286 + C17287) * C3449 + (C17288 + C17289) * C32731) *
                C32687 +
            ((C16258 + C16259) * C3448 + (C16260 + C16261) * C32886 +
             (C20389 + C20390) * C3449 + (C20391 + C20392) * C32731) *
                C32694 +
            ((C16262 + C16263) * C3448 + (C16264 + C16265) * C32886 +
             (C15843 * C1581 + C15837 * C1584 + C15844 * C1582 +
              C32550 * C1585) *
                 C3449 +
             (C15843 * C1587 + C15837 * C1590 + C15844 * C1588 +
              C32550 * C1591) *
                 C32731) *
                C17826) *
               C32603 * C441 -
           (((C20392 + C20391) * C32731 + (C20390 + C20389) * C3449 +
             (C16261 + C16260) * C32886 + (C16259 + C16258) * C3448) *
                C17826 +
            ((C17289 + C17288) * C32731 + (C17287 + C17286) * C3449 +
             (C16257 + C16256) * C32886 + (C16255 + C16254) * C3448) *
                C32694 +
            ((C17507 + C17506) * C32731 + (C17505 + C17504) * C3449 +
             (C15844 * C133 + C32550 * C142 + C15843 * C132 + C15837 * C141) *
                 C32886 +
             (C15844 * C121 + C32550 * C128 + C15843 * C120 + C15837 * C127) *
                 C3448) *
                C32687) *
               C32603 * C440) *
              C443)) /
        (p * q * std::sqrt(p + q));
    d2ee[6] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C15843 * C119 + C15837 * C126 + C15844 * C120 + C32550 * C127) *
                 C3448 +
             (C15843 * C131 + C15837 * C140 + C15844 * C132 + C32550 * C141) *
                 C32886 +
             (C17058 + C17059) * C3449 + (C17060 + C17061) * C32731) *
                C32687 +
            ((C15976 + C15977) * C3448 + (C15978 + C15979) * C32886 +
             C17706 * C3449 + C17707 * C32731) *
                C32694 +
            C20040 * C17826) *
               C530 -
           (((C16874 + C16875) * C32731 + (C16876 + C16877) * C3449 +
             C20781 * C32886 + C20782 * C3448) *
                C17826 +
            (C17708 * C32731 + C17709 * C3449 + C17710 * C32886 +
             C17711 * C3448) *
                C32694 +
            ((C17065 + C17064) * C32731 + (C17063 + C17062) * C3449 +
             (C17061 + C17060) * C32886 + (C17059 + C17058) * C3448) *
                C32687) *
               C531) *
              C440 +
          (((C17706 * C3448 + C17707 * C32886 + C17040 * C3449 +
             C17041 * C32731) *
                C32687 +
            (C20034 * C3448 + C20035 * C32886 + (C16877 + C16876) * C3449 +
             (C16875 + C16874) * C32731) *
                C32694 +
            ((C16553 + C16552) * C3448 + (C16551 + C16550) * C32886 +
             (C15843 * C6309 + C15837 * C6313 + C15844 * C7201 +
              C32550 * C7202) *
                 C3449 +
             (C15843 * C6314 + C15837 * C6318 + C15844 * C7203 +
              C32550 * C7204) *
                 C32731) *
                C17826) *
               C531 -
           (((C16550 + C16551) * C32731 + (C16552 + C16553) * C3449 +
             (C15987 + C15986) * C32886 + (C15985 + C15984) * C3448) *
                C17826 +
            (C20781 * C32731 + C20782 * C3449 + (C15983 + C15982) * C32886 +
             (C15981 + C15980) * C3448) *
                C32694 +
            (C17710 * C32731 + C17711 * C3449 + (C15979 + C15978) * C32886 +
             (C15977 + C15976) * C3448) *
                C32687) *
               C530) *
              C441) *
         C32577) /
        (p * q * std::sqrt(p + q));
    d2ee[7] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C15843 * C119 + C15837 * C126 + C15844 * C120 + C32550 * C127) *
                C3448 +
            (C15843 * C131 + C15837 * C140 + C15844 * C132 + C32550 * C141) *
                C32886 +
            (C17058 + C17059) * C3449 + (C17060 + C17061) * C32731) *
               C32687 +
           ((C15976 + C15977) * C3448 + (C15978 + C15979) * C32886 +
            C17706 * C3449 + C17707 * C32731) *
               C32694 +
           C20040 * C17826) *
              C32603 * C209 -
          (((C16550 + C16551) * C32731 + (C16552 + C16553) * C3449 +
            (C15987 + C15986) * C32886 + (C15985 + C15984) * C3448) *
               C17826 +
           ((C16554 + C16555) * C32731 + (C16556 + C16557) * C3449 +
            (C15983 + C15982) * C32886 + (C15981 + C15980) * C3448) *
               C32694 +
           (C17710 * C32731 + C17711 * C3449 + (C15979 + C15978) * C32886 +
            (C15977 + C15976) * C3448) *
               C32687) *
              C32603 * C210 +
          (C20040 * C32687 +
           (C15994 * C3448 + C15995 * C32886 + (C16553 + C16552) * C3449 +
            (C16551 + C16550) * C32731) *
               C32694 +
           ((C15991 + C15990) * C3448 + (C15989 + C15988) * C32886 +
            (C15843 * C6308 + C15837 * C6312 + C15844 * C6520 +
             C32550 * C6521) *
                C3449 +
            (C15843 * C6311 + C15837 * C6317 + C15844 * C6522 +
             C32550 * C6523) *
                C32731) *
               C17826) *
              C32603 * C211) *
         C32577) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C15843 * C119 + C15837 * C126 + C15844 * C120 + C32550 * C127) *
                C3448 +
            (C15843 * C131 + C15837 * C140 + C15844 * C132 + C32550 * C141) *
                C32886 +
            (C17058 + C17059) * C3449 + (C17060 + C17061) * C32731) *
               C32687 +
           ((C15976 + C15977) * C3448 + (C15978 + C15979) * C32886 +
            C17706 * C3449 + C17707 * C32731) *
               C32694 +
           (C15992 * C3448 + C15993 * C32886 + (C16557 + C16556) * C3449 +
            (C16555 + C16554) * C32731) *
               C17826) *
              C32603 * C32589 * C110 -
          (((C15844 * C1071 + C32550 * C1089 + C15843 * C1072 +
             C15837 * C1090) *
                C32731 +
            (C15844 * C1062 + C32550 * C1074 + C15843 * C1063 +
             C15837 * C1075) *
                C3449 +
            (C16261 + C16260) * C32886 + (C16259 + C16258) * C3448) *
               C17826 +
           ((C17289 + C17288) * C32731 + (C17287 + C17286) * C3449 +
            (C16257 + C16256) * C32886 + (C16255 + C16254) * C3448) *
               C32694 +
           ((C17507 + C17506) * C32731 + (C17505 + C17504) * C3449 +
            (C15844 * C133 + C32550 * C142 + C15843 * C132 + C15837 * C141) *
                C32886 +
            (C15844 * C121 + C32550 * C128 + C15843 * C120 + C15837 * C127) *
                C3448) *
               C32687) *
              C32603 * C32589 * C111 +
          (((C15843 * C121 + C15837 * C128 + C15844 * C122 + C32550 * C129) *
                C3448 +
            (C15843 * C133 + C15837 * C142 + C15844 * C134 + C32550 * C143) *
                C32886 +
            (C15843 * C320 + C15837 * C335 + C15844 * C319 + C32550 * C334) *
                C3449 +
            (C15843 * C330 + C15837 * C350 + C15844 * C329 + C32550 * C349) *
                C32731) *
               C32687 +
           ((C15843 * C215 + C15837 * C230 + C15844 * C214 + C32550 * C229) *
                C3448 +
            (C15843 * C225 + C15837 * C245 + C15844 * C224 + C32550 * C244) *
                C32886 +
            (C15843 * C620 + C15837 * C625 + C15844 * C621 + C32550 * C626) *
                C3449 +
            (C15843 * C630 + C15837 * C635 + C15844 * C631 + C32550 * C636) *
                C32731) *
               C32694 +
           ((C15843 * C220 + C15837 * C235 + C15844 * C221 + C32550 * C236) *
                C3448 +
            (C15843 * C240 + C15837 * C250 + C15844 * C241 + C32550 * C251) *
                C32886 +
            (C15843 * C1062 + C15837 * C1074 + C15844 * C1430 +
             C32550 * C1431) *
                C3449 +
            (C15843 * C1071 + C15837 * C1089 + C15844 * C1432 +
             C32550 * C1433) *
                C32731) *
               C17826) *
              C32603 * C32589 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C15843 * C119 + C15837 * C126 + C15844 * C120 + C32550 * C127) *
                C3448 +
            (C15843 * C131 + C15837 * C140 + C15844 * C132 + C32550 * C141) *
                C32886 +
            (C17058 + C17059) * C3449 + (C17060 + C17061) * C32731) *
               C32687 +
           ((C15976 + C15977) * C3448 + (C15978 + C15979) * C32886 +
            C17706 * C3449 + C17707 * C32731) *
               C32694 +
           C20040 * C17826) *
              C315 -
          (((C16874 + C16875) * C32731 + (C16876 + C16877) * C3449 +
            (C16554 + C16555) * C32886 + (C16556 + C16557) * C3448) *
               C17826 +
           (C17708 * C32731 + C17709 * C3449 + C17710 * C32886 +
            C17711 * C3448) *
               C32694 +
           ((C17065 + C17064) * C32731 + (C17063 + C17062) * C3449 +
            (C17061 + C17060) * C32886 + (C17059 + C17058) * C3448) *
               C32687) *
              C316 +
          ((C17074 * C3448 + C17075 * C32886 + (C17073 + C17072) * C3449 +
            (C17071 + C17070) * C32731) *
               C32687 +
           (C17040 * C3448 + C17041 * C32886 + (C17069 + C17068) * C3449 +
            (C17067 + C17066) * C32731) *
               C32694 +
           ((C16877 + C16876) * C3448 + (C16875 + C16874) * C32886 +
            (C15843 * C7013 + C15837 * C7017 + C15844 * C7387 +
             C32550 * C7388) *
                C3449 +
            (C15843 * C7016 + C15837 * C7022 + C15844 * C7389 +
             C32550 * C7390) *
                C32731) *
               C17826) *
              C317) *
         C32589 * C32577) /
            (p * q * std::sqrt(p + q));
    d2ee[8] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C15843 * C119 + C15837 * C126 + C15844 * C120 + C32550 * C127) *
                 C3448 +
             (C15843 * C131 + C15837 * C140 + C15844 * C132 + C32550 * C141) *
                 C32886 +
             (C17058 + C17059) * C3449 + (C17060 + C17061) * C32731) *
                C32687 +
            ((C15976 + C15977) * C3448 + (C15978 + C15979) * C32886 +
             C17706 * C3449 + C17707 * C32731) *
                C32694 +
            C20040 * C17826) *
               C530 -
           (((C16874 + C16875) * C32731 + (C16876 + C16877) * C3449 +
             (C16554 + C16555) * C32886 + (C16556 + C16557) * C3448) *
                C17826 +
            (C17708 * C32731 + C17709 * C3449 + C17710 * C32886 +
             C17711 * C3448) *
                C32694 +
            ((C17065 + C17064) * C32731 + (C17063 + C17062) * C3449 +
             (C17061 + C17060) * C32886 + (C17059 + C17058) * C3448) *
                C32687) *
               C531) *
              C32589 * C442 +
          ((((C17504 + C17505) * C3448 + (C17506 + C17507) * C32886 +
             (C17508 + C17509) * C3449 + (C17510 + C17511) * C32731) *
                C32687 +
            ((C17286 + C17287) * C3448 + (C17288 + C17289) * C32886 +
             (C17290 + C17291) * C3449 + (C17292 + C17293) * C32731) *
                C32694 +
            ((C20389 + C20390) * C3448 + (C20391 + C20392) * C32886 +
             (C15843 * C1069 + C15837 * C1084 + C15844 * C1070 +
              C32550 * C1085) *
                 C3449 +
             (C15843 * C1087 + C15837 * C1096 + C15844 * C1088 +
              C32550 * C1097) *
                 C32731) *
                C17826) *
               C531 -
           (((C20392 + C20391) * C32731 + (C20390 + C20389) * C3449 +
             (C16261 + C16260) * C32886 + (C16259 + C16258) * C3448) *
                C17826 +
            ((C17289 + C17288) * C32731 + (C17287 + C17286) * C3449 +
             (C16257 + C16256) * C32886 + (C16255 + C16254) * C3448) *
                C32694 +
            ((C17507 + C17506) * C32731 + (C17505 + C17504) * C3449 +
             (C15844 * C133 + C32550 * C142 + C15843 * C132 + C15837 * C141) *
                 C32886 +
             (C15844 * C121 + C32550 * C128 + C15843 * C120 + C15837 * C127) *
                 C3448) *
                C32687) *
               C530) *
              C32589 * C443)) /
        (p * q * std::sqrt(p + q));
    d2ee[9] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C15843 * C119 + C15837 * C126 + C15844 * C120 + C32550 * C127) *
                C3448 +
            (C15843 * C131 + C15837 * C140 + C15844 * C132 + C32550 * C141) *
                C32886 +
            (C17058 + C17059) * C3449 + (C17060 + C17061) * C32731) *
               C32687 +
           ((C15976 + C15977) * C3448 + (C15978 + C15979) * C32886 +
            C17706 * C3449 + C17707 * C32731) *
               C32694 +
           (C15992 * C3448 + C15993 * C32886 + (C16557 + C16556) * C3449 +
            (C16555 + C16554) * C32731) *
               C17826) *
              C32603 * C32589 * C110 -
          (((C15844 * C1071 + C32550 * C1089 + C15843 * C1072 +
             C15837 * C1090) *
                C32731 +
            (C15844 * C1062 + C32550 * C1074 + C15843 * C1063 +
             C15837 * C1075) *
                C3449 +
            (C16261 + C16260) * C32886 + (C16259 + C16258) * C3448) *
               C17826 +
           ((C17289 + C17288) * C32731 + (C17287 + C17286) * C3449 +
            (C16257 + C16256) * C32886 + (C16255 + C16254) * C3448) *
               C32694 +
           ((C17507 + C17506) * C32731 + (C17505 + C17504) * C3449 +
            (C15844 * C133 + C32550 * C142 + C15843 * C132 + C15837 * C141) *
                C32886 +
            (C15844 * C121 + C32550 * C128 + C15843 * C120 + C15837 * C127) *
                C3448) *
               C32687) *
              C32603 * C32589 * C111 +
          (((C15843 * C121 + C15837 * C128 + C15844 * C122 + C32550 * C129) *
                C3448 +
            (C15843 * C133 + C15837 * C142 + C15844 * C134 + C32550 * C143) *
                C32886 +
            (C15843 * C320 + C15837 * C335 + C15844 * C319 + C32550 * C334) *
                C3449 +
            (C15843 * C330 + C15837 * C350 + C15844 * C329 + C32550 * C349) *
                C32731) *
               C32687 +
           ((C15843 * C215 + C15837 * C230 + C15844 * C214 + C32550 * C229) *
                C3448 +
            (C15843 * C225 + C15837 * C245 + C15844 * C224 + C32550 * C244) *
                C32886 +
            (C15843 * C620 + C15837 * C625 + C15844 * C621 + C32550 * C626) *
                C3449 +
            (C15843 * C630 + C15837 * C635 + C15844 * C631 + C32550 * C636) *
                C32731) *
               C32694 +
           ((C15843 * C220 + C15837 * C235 + C15844 * C221 + C32550 * C236) *
                C3448 +
            (C15843 * C240 + C15837 * C250 + C15844 * C241 + C32550 * C251) *
                C32886 +
            (C15843 * C1062 + C15837 * C1074 + C15844 * C1430 +
             C32550 * C1431) *
                C3449 +
            (C15843 * C1071 + C15837 * C1089 + C15844 * C1432 +
             C32550 * C1433) *
                C32731) *
               C17826) *
              C32603 * C32589 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C15843 * C119 + C15837 * C126 + C15844 * C120 + C32550 * C127) *
                C3448 +
            (C15843 * C131 + C15837 * C140 + C15844 * C132 + C32550 * C141) *
                C32886 +
            (C17058 + C17059) * C3449 + (C17060 + C17061) * C32731) *
               C32687 +
           ((C15976 + C15977) * C3448 + (C15978 + C15979) * C32886 +
            C17706 * C3449 + C17707 * C32731) *
               C32694 +
           C20040 * C17826) *
              C32603 * C209 -
          (((C16550 + C16551) * C32731 + (C16552 + C16553) * C3449 +
            (C15987 + C15986) * C32886 + (C15985 + C15984) * C3448) *
               C17826 +
           ((C16554 + C16555) * C32731 + (C16556 + C16557) * C3449 +
            (C15983 + C15982) * C32886 + (C15981 + C15980) * C3448) *
               C32694 +
           (C17710 * C32731 + C17711 * C3449 + (C15979 + C15978) * C32886 +
            (C15977 + C15976) * C3448) *
               C32687) *
              C32603 * C210 +
          (C20040 * C32687 +
           (C15994 * C3448 + C15995 * C32886 + (C16553 + C16552) * C3449 +
            (C16551 + C16550) * C32731) *
               C32694 +
           ((C15991 + C15990) * C3448 + (C15989 + C15988) * C32886 +
            (C15843 * C6308 + C15837 * C6312 + C15844 * C6520 +
             C32550 * C6521) *
                C3449 +
            (C15843 * C6311 + C15837 * C6317 + C15844 * C6522 +
             C32550 * C6523) *
                C32731) *
               C17826) *
              C32603 * C211) *
         C32577) /
            (p * q * std::sqrt(p + q));
    d2ee[10] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C15843 * C119 + C15837 * C126 + C15844 * C120 + C32550 * C127) *
                 C118 +
             (C15843 * C131 + C15837 * C140 + C15844 * C132 + C32550 * C141) *
                 C32644) *
                C32958 +
            ((C15976 + C15977) * C118 + (C15978 + C15979) * C32644) * C32954 +
            C16000 * C32944 + C16001 * C32926) *
               C32603 * C440 -
           (((C15988 + C15989) * C32644 + (C15990 + C15991) * C118) * C32926 +
            ((C15987 + C15986) * C32644 + (C15985 + C15984) * C118) * C32944 +
            ((C15983 + C15982) * C32644 + (C15981 + C15980) * C118) * C32954 +
            ((C15979 + C15978) * C32644 + (C15977 + C15976) * C118) * C32958) *
               C32603 * C441) *
              C442 +
          ((((C16254 + C16255) * C118 + (C16256 + C16257) * C32644) * C32958 +
            ((C16258 + C16259) * C118 + (C16260 + C16261) * C32644) * C32954 +
            ((C16262 + C16263) * C118 + (C16264 + C16265) * C32644) * C32944 +
            ((C15843 * C871 + C15837 * C880 + C15844 * C872 + C32550 * C881) *
                 C118 +
             (C15843 * C883 + C15837 * C889 + C15844 * C884 + C32550 * C890) *
                 C32644) *
                C32926) *
               C32603 * C441 -
           (((C16265 + C16264) * C32644 + (C16263 + C16262) * C118) * C32926 +
            ((C16261 + C16260) * C32644 + (C16259 + C16258) * C118) * C32944 +
            ((C16257 + C16256) * C32644 + (C16255 + C16254) * C118) * C32954 +
            ((C15844 * C133 + C32550 * C142 + C15843 * C132 + C15837 * C141) *
                 C32644 +
             (C15844 * C121 + C32550 * C128 + C15843 * C120 + C15837 * C127) *
                 C118) *
                C32958) *
               C32603 * C440) *
              C443)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C15053 * C119 + C32957 * C126 + C15054 * C120 + C32950 * C127 +
              C15055 * C121 + C32937 * C128 + C15056 * C122 + C32920 * C129) *
                 C118 +
             (C15053 * C131 + C32957 * C140 + C15054 * C132 + C32950 * C141 +
              C15055 * C133 + C32937 * C142 + C15056 * C134 + C32920 * C143) *
                 C32644) *
                C15051 +
            ((C15188 + C15189 + C15190 + C15191) * C118 +
             (C15192 + C15193 + C15194 + C15195) * C32644) *
                C32691) *
               C32603 * C440 -
           (((C15196 + C15197 + C15198 + C15199) * C32644 +
             (C15200 + C15201 + C15202 + C15203) * C118) *
                C32691 +
            ((C15195 + C15194 + C15193 + C15192) * C32644 +
             (C15191 + C15190 + C15189 + C15188) * C118) *
                C15051) *
               C32603 * C441) *
              C442 +
          ((((C15448 + C15449 + C15450 + C15451) * C118 +
             (C15452 + C15453 + C15454 + C15455) * C32644) *
                C15051 +
            ((C15053 * C219 + C32957 * C234 + C15054 * C220 + C32950 * C235 +
              C15055 * C221 + C32937 * C236 + C15056 * C222 + C32920 * C237) *
                 C118 +
             (C15053 * C239 + C32957 * C249 + C15054 * C240 + C32950 * C250 +
              C15055 * C241 + C32937 * C251 + C15056 * C242 + C32920 * C252) *
                 C32644) *
                C32691) *
               C32603 * C441 -
           (((C15455 + C15454 + C15453 + C15452) * C32644 +
             (C15451 + C15450 + C15449 + C15448) * C118) *
                C32691 +
            ((C15056 * C135 + C32920 * C144 + C15055 * C134 + C32937 * C143 +
              C15054 * C133 + C32950 * C142 + C15053 * C132 + C32957 * C141) *
                 C32644 +
             (C15056 * C123 + C32920 * C130 + C15055 * C122 + C32937 * C129 +
              C15054 * C121 + C32950 * C128 + C15053 * C120 + C32957 * C127) *
                 C118) *
                C15051) *
               C32603 * C440) *
              C443)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C15843 * C119 + C15837 * C126 + C15844 * C120 + C32550 * C127) *
                 C1741 +
             (C15843 * C131 + C15837 * C140 + C15844 * C132 + C32550 * C141) *
                 C32952 +
             (C17058 + C17059) * C1742 + (C17060 + C17061) * C32941 +
             C17074 * C1743 + C17075 * C32919) *
                C15051 +
            ((C15976 + C15977) * C1741 + (C15978 + C15979) * C32952 +
             (C16561 + C16560) * C1742 + (C16559 + C16558) * C32941 +
             C17040 * C1743 + C17041 * C32919) *
                C32691) *
               C32603 * C440 -
           (((C16874 + C16875) * C32919 + (C16876 + C16877) * C1743 +
             (C16554 + C16555) * C32941 + (C16556 + C16557) * C1742 +
             (C15983 + C15982) * C32952 + (C15981 + C15980) * C1741) *
                C32691 +
            ((C16873 + C16872) * C32919 + (C16871 + C16870) * C1743 +
             (C16558 + C16559) * C32941 + (C16560 + C16561) * C1742 +
             (C15979 + C15978) * C32952 + (C15977 + C15976) * C1741) *
                C15051) *
               C32603 * C441) *
              C442 +
          ((((C16254 + C16255) * C1741 + (C16256 + C16257) * C32952 +
             (C17286 + C17287) * C1742 + (C17288 + C17289) * C32941 +
             (C17290 + C17291) * C1743 + (C17292 + C17293) * C32919) *
                C15051 +
            ((C16258 + C16259) * C1741 + (C16260 + C16261) * C32952 +
             (C15843 * C1063 + C15837 * C1075 + C15844 * C1062 +
              C32550 * C1074) *
                 C1742 +
             (C15843 * C1072 + C15837 * C1090 + C15844 * C1071 +
              C32550 * C1089) *
                 C32941 +
             (C15843 * C1069 + C15837 * C1084 + C15844 * C1070 +
              C32550 * C1085) *
                 C1743 +
             (C15843 * C1087 + C15837 * C1096 + C15844 * C1088 +
              C32550 * C1097) *
                 C32919) *
                C32691) *
               C32603 * C441 -
           (((C17293 + C17292) * C32919 + (C17291 + C17290) * C1743 +
             (C17289 + C17288) * C32941 + (C17287 + C17286) * C1742 +
             (C16257 + C16256) * C32952 + (C16255 + C16254) * C1741) *
                C32691 +
            ((C15844 * C345 + C32550 * C355 + C15843 * C344 + C15837 * C354) *
                 C32919 +
             (C15844 * C325 + C32550 * C340 + C15843 * C324 + C15837 * C339) *
                 C1743 +
             (C15844 * C330 + C32550 * C350 + C15843 * C331 + C15837 * C351) *
                 C32941 +
             (C15844 * C320 + C32550 * C335 + C15843 * C321 + C15837 * C336) *
                 C1742 +
             (C15844 * C133 + C32550 * C142 + C15843 * C132 + C15837 * C141) *
                 C32952 +
             (C15844 * C121 + C32550 * C128 + C15843 * C120 + C15837 * C127) *
                 C1741) *
                C15051) *
               C32603 * C440) *
              C443)) /
            (p * q * std::sqrt(p + q));
    d2ee[11] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C15843 * C119 + C15837 * C126 + C15844 * C120 + C32550 * C127) *
                 C118 +
             (C15843 * C131 + C15837 * C140 + C15844 * C132 + C32550 * C141) *
                 C32644) *
                C32958 +
            ((C15976 + C15977) * C118 + (C15978 + C15979) * C32644) * C32954 +
            C16000 * C32944 + C16001 * C32926) *
               C530 -
           (((C16550 + C16551) * C32644 + (C16552 + C16553) * C118) * C32926 +
            ((C16554 + C16555) * C32644 + (C16556 + C16557) * C118) * C32944 +
            ((C16558 + C16559) * C32644 + (C16560 + C16561) * C118) * C32954 +
            ((C15844 * C331 + C32550 * C351 + C15843 * C332 + C15837 * C352) *
                 C32644 +
             (C15844 * C321 + C32550 * C336 + C15843 * C322 + C15837 * C337) *
                 C118) *
                C32958) *
               C531) *
              C440 +
          ((((C16561 + C16560) * C118 + (C16559 + C16558) * C32644) * C32958 +
            ((C16557 + C16556) * C118 + (C16555 + C16554) * C32644) * C32954 +
            ((C16553 + C16552) * C118 + (C16551 + C16550) * C32644) * C32944 +
            ((C15843 * C6308 + C15837 * C6312 + C15844 * C6520 +
              C32550 * C6521) *
                 C118 +
             (C15843 * C6311 + C15837 * C6317 + C15844 * C6522 +
              C32550 * C6523) *
                 C32644) *
                C32926) *
               C531 -
           (((C15988 + C15989) * C32644 + (C15990 + C15991) * C118) * C32926 +
            ((C15987 + C15986) * C32644 + (C15985 + C15984) * C118) * C32944 +
            ((C15983 + C15982) * C32644 + (C15981 + C15980) * C118) * C32954 +
            ((C15979 + C15978) * C32644 + (C15977 + C15976) * C118) * C32958) *
               C530) *
              C441) *
         C32577) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C15053 * C119 + C32957 * C126 + C15054 * C120 + C32950 * C127 +
              C15055 * C121 + C32937 * C128 + C15056 * C122 + C32920 * C129) *
                 C118 +
             (C15053 * C131 + C32957 * C140 + C15054 * C132 + C32950 * C141 +
              C15055 * C133 + C32937 * C142 + C15056 * C134 + C32920 * C143) *
                 C32644) *
                C15051 +
            ((C15188 + C15189 + C15190 + C15191) * C118 +
             (C15192 + C15193 + C15194 + C15195) * C32644) *
                C32691) *
               C530 -
           (((C15732 + C15733 + C15734 + C15735) * C32644 +
             (C15736 + C15737 + C15738 + C15739) * C118) *
                C32691 +
            ((C15056 * C329 + C32920 * C349 + C15055 * C330 + C32937 * C350 +
              C15054 * C331 + C32950 * C351 + C15053 * C332 + C32957 * C352) *
                 C32644 +
             (C15056 * C319 + C32920 * C334 + C15055 * C320 + C32937 * C335 +
              C15054 * C321 + C32950 * C336 + C15053 * C322 + C32957 * C337) *
                 C118) *
                C15051) *
               C531) *
              C440 +
          ((((C15739 + C15738 + C15737 + C15736) * C118 +
             (C15735 + C15734 + C15733 + C15732) * C32644) *
                C15051 +
            ((C15053 * C1064 + C32957 * C1076 + C15054 * C1063 +
              C32950 * C1075 + C15055 * C1062 + C32937 * C1074 +
              C15056 * C1430 + C32920 * C1431) *
                 C118 +
             (C15053 * C1073 + C32957 * C1091 + C15054 * C1072 +
              C32950 * C1090 + C15055 * C1071 + C32937 * C1089 +
              C15056 * C1432 + C32920 * C1433) *
                 C32644) *
                C32691) *
               C531 -
           (((C15196 + C15197 + C15198 + C15199) * C32644 +
             (C15200 + C15201 + C15202 + C15203) * C118) *
                C32691 +
            ((C15195 + C15194 + C15193 + C15192) * C32644 +
             (C15191 + C15190 + C15189 + C15188) * C118) *
                C15051) *
               C530) *
              C441) *
         C32577) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C15843 * C119 + C15837 * C126 + C15844 * C120 + C32550 * C127) *
                 C1741 +
             (C15843 * C131 + C15837 * C140 + C15844 * C132 + C32550 * C141) *
                 C32952 +
             (C17058 + C17059) * C1742 + (C17060 + C17061) * C32941 +
             C17074 * C1743 + C17075 * C32919) *
                C15051 +
            ((C15976 + C15977) * C1741 + (C15978 + C15979) * C32952 +
             C17706 * C1742 + C17707 * C32941 + C17040 * C1743 +
             C17041 * C32919) *
                C32691) *
               C530 -
           (((C17066 + C17067) * C32919 + (C17068 + C17069) * C1743 +
             C17708 * C32941 + C17709 * C1742 + C17710 * C32952 +
             C17711 * C1741) *
                C32691 +
            ((C17070 + C17071) * C32919 + (C17072 + C17073) * C1743 +
             (C17065 + C17064) * C32941 + (C17063 + C17062) * C1742 +
             (C17061 + C17060) * C32952 + (C17059 + C17058) * C1741) *
                C15051) *
               C531) *
              C440 +
          (((C17706 * C1741 + C17707 * C32952 + C17040 * C1742 +
             C17041 * C32941 + (C17069 + C17068) * C1743 +
             (C17067 + C17066) * C32919) *
                C15051 +
            ((C16557 + C16556) * C1741 + (C16555 + C16554) * C32952 +
             (C16877 + C16876) * C1742 + (C16875 + C16874) * C32941 +
             (C15843 * C7013 + C15837 * C7017 + C15844 * C7387 +
              C32550 * C7388) *
                 C1743 +
             (C15843 * C7016 + C15837 * C7022 + C15844 * C7389 +
              C32550 * C7390) *
                 C32919) *
                C32691) *
               C531 -
           (((C16874 + C16875) * C32919 + (C16876 + C16877) * C1743 +
             (C16554 + C16555) * C32941 + (C16556 + C16557) * C1742 +
             (C15983 + C15982) * C32952 + (C15981 + C15980) * C1741) *
                C32691 +
            (C17708 * C32919 + C17709 * C1743 + C17710 * C32941 +
             C17711 * C1742 + (C15979 + C15978) * C32952 +
             (C15977 + C15976) * C1741) *
                C15051) *
               C530) *
              C441) *
         C32577) /
            (p * q * std::sqrt(p + q));
    d2ee[12] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C15053 * C119 + C32957 * C126 + C15054 * C120 + C32950 * C127 +
                 C15055 * C121 + C32937 * C128 + C15056 * C122 +
                 C32920 * C129) *
                    C118 +
                (C15053 * C131 + C32957 * C140 + C15054 * C132 + C32950 * C141 +
                 C15055 * C133 + C32937 * C142 + C15056 * C134 +
                 C32920 * C143) *
                    C32644) *
                   C15051 +
               ((C15053 * C217 + C32957 * C232 + C15054 * C216 + C32950 * C231 +
                 C15055 * C215 + C32937 * C230 + C15056 * C214 +
                 C32920 * C229) *
                    C118 +
                (C15053 * C227 + C32957 * C247 + C15054 * C226 + C32950 * C246 +
                 C15055 * C225 + C32937 * C245 + C15056 * C224 +
                 C32920 * C244) *
                    C32644) *
                   C32691) *
                  C32603 * C32589 * C110 -
              (((C15056 * C223 + C32920 * C243 + C15055 * C224 + C32937 * C244 +
                 C15054 * C225 + C32950 * C245 + C15053 * C226 +
                 C32957 * C246) *
                    C32644 +
                (C15056 * C213 + C32920 * C228 + C15055 * C214 + C32937 * C229 +
                 C15054 * C215 + C32950 * C230 + C15053 * C216 +
                 C32957 * C231) *
                    C118) *
                   C32691 +
               ((C15056 * C135 + C32920 * C144 + C15055 * C134 + C32937 * C143 +
                 C15054 * C133 + C32950 * C142 + C15053 * C132 +
                 C32957 * C141) *
                    C32644 +
                (C15056 * C123 + C32920 * C130 + C15055 * C122 + C32937 * C129 +
                 C15054 * C121 + C32950 * C128 + C15053 * C120 +
                 C32957 * C127) *
                    C118) *
                   C15051) *
                  C32603 * C32589 * C111 +
              (((C15053 * C121 + C32957 * C128 + C15054 * C122 + C32950 * C129 +
                 C15055 * C123 + C32937 * C130 + C15056 * C124 +
                 C32920 * C137) *
                    C118 +
                (C15053 * C133 + C32957 * C142 + C15054 * C134 + C32950 * C143 +
                 C15055 * C135 + C32937 * C144 + C15056 * C136 +
                 C32920 * C145) *
                    C32644) *
                   C15051 +
               ((C15053 * C215 + C32957 * C230 + C15054 * C214 + C32950 * C229 +
                 C15055 * C213 + C32937 * C228 + C15056 * C444 +
                 C32920 * C445) *
                    C118 +
                (C15053 * C225 + C32957 * C245 + C15054 * C224 + C32950 * C244 +
                 C15055 * C223 + C32937 * C243 + C15056 * C446 +
                 C32920 * C447) *
                    C32644) *
                   C32691) *
                  C32603 * C32589 * C112) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C15053 * C119 + C32957 * C126 + C15054 * C120 + C32950 * C127 +
                 C15055 * C121 + C32937 * C128 + C15056 * C122 +
                 C32920 * C129) *
                    C118 +
                (C15053 * C131 + C32957 * C140 + C15054 * C132 + C32950 * C141 +
                 C15055 * C133 + C32937 * C142 + C15056 * C134 +
                 C32920 * C143) *
                    C32644) *
                   C15051 +
               ((C15188 + C15189 + C15190 + C15191) * C118 +
                (C15192 + C15193 + C15194 + C15195) * C32644) *
                   C32691) *
                  C32603 * C209 -
              (((C15196 + C15197 + C15198 + C15199) * C32644 +
                (C15200 + C15201 + C15202 + C15203) * C118) *
                   C32691 +
               ((C15195 + C15194 + C15193 + C15192) * C32644 +
                (C15191 + C15190 + C15189 + C15188) * C118) *
                   C15051) *
                  C32603 * C210 +
              (((C15203 + C15202 + C15201 + C15200) * C118 +
                (C15199 + C15198 + C15197 + C15196) * C32644) *
                   C15051 +
               ((C15053 * C869 + C32957 * C878 + C15054 * C868 + C32950 * C877 +
                 C15055 * C867 + C32937 * C876 + C15056 * C1244 +
                 C32920 * C1245) *
                    C118 +
                (C15053 * C875 + C32957 * C887 + C15054 * C874 + C32950 * C886 +
                 C15055 * C873 + C32937 * C885 + C15056 * C1246 +
                 C32920 * C1247) *
                    C32644) *
                   C32691) *
                  C32603 * C211) *
             C32577) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C15053 * C119 + C32957 * C126 + C15054 * C120 + C32950 * C127 +
             C15055 * C121 + C32937 * C128 + C15056 * C122 + C32920 * C129) *
                C118 +
            (C15053 * C131 + C32957 * C140 + C15054 * C132 + C32950 * C141 +
             C15055 * C133 + C32937 * C142 + C15056 * C134 + C32920 * C143) *
                C32644) *
               C15051 +
           ((C15188 + C15189 + C15190 + C15191) * C118 +
            (C15192 + C15193 + C15194 + C15195) * C32644) *
               C32691) *
              C315 -
          (((C15056 * C631 + C32920 * C636 + C15055 * C630 + C32937 * C635 +
             C15054 * C629 + C32950 * C634 + C15053 * C628 + C32957 * C633) *
                C32644 +
            (C15056 * C621 + C32920 * C626 + C15055 * C620 + C32937 * C625 +
             C15054 * C619 + C32950 * C624 + C15053 * C618 + C32957 * C623) *
                C118) *
               C32691 +
           ((C15056 * C329 + C32920 * C349 + C15055 * C330 + C32937 * C350 +
             C15054 * C331 + C32950 * C351 + C15053 * C332 + C32957 * C352) *
                C32644 +
            (C15056 * C319 + C32920 * C334 + C15055 * C320 + C32937 * C335 +
             C15054 * C321 + C32950 * C336 + C15053 * C322 + C32957 * C337) *
                C118) *
               C15051) *
              C316 +
          (((C15053 * C323 + C32957 * C338 + C15054 * C324 + C32950 * C339 +
             C15055 * C325 + C32937 * C340 + C15056 * C326 + C32920 * C341) *
                C118 +
            (C15053 * C343 + C32957 * C353 + C15054 * C344 + C32950 * C354 +
             C15055 * C345 + C32937 * C355 + C15056 * C346 + C32920 * C356) *
                C32644) *
               C15051 +
           ((C15053 * C1065 + C32957 * C1077 + C15054 * C1066 + C32950 * C1078 +
             C15055 * C1067 + C32937 * C1079 + C15056 * C2192 +
             C32920 * C2193) *
                C118 +
            (C15053 * C1080 + C32957 * C1092 + C15054 * C1081 + C32950 * C1093 +
             C15055 * C1082 + C32937 * C1094 + C15056 * C2194 +
             C32920 * C2195) *
                C32644) *
               C32691) *
              C317) *
         C32589 * C32577) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C15843 * C119 + C15837 * C126 + C15844 * C120 + C32550 * C127) *
                C118 +
            (C15843 * C131 + C15837 * C140 + C15844 * C132 + C32550 * C141) *
                C32644) *
               C32958 +
           ((C15843 * C217 + C15837 * C232 + C15844 * C216 + C32550 * C231) *
                C118 +
            (C15843 * C227 + C15837 * C247 + C15844 * C226 + C32550 * C246) *
                C32644) *
               C32954 +
           ((C15843 * C218 + C15837 * C233 + C15844 * C219 + C32550 * C234) *
                C118 +
            (C15843 * C238 + C15837 * C248 + C15844 * C239 + C32550 * C249) *
                C32644) *
               C32944 +
           ((C15843 * C869 + C15837 * C878 + C15844 * C868 + C32550 * C877) *
                C118 +
            (C15843 * C875 + C15837 * C887 + C15844 * C874 + C32550 * C886) *
                C32644) *
               C32926) *
              C32603 * C32589 * C110 -
          (((C15844 * C873 + C32550 * C885 + C15843 * C874 + C15837 * C886) *
                C32644 +
            (C15844 * C867 + C32550 * C876 + C15843 * C868 + C15837 * C877) *
                C118) *
               C32926 +
           ((C15844 * C240 + C32550 * C250 + C15843 * C239 + C15837 * C249) *
                C32644 +
            (C15844 * C220 + C32550 * C235 + C15843 * C219 + C15837 * C234) *
                C118) *
               C32944 +
           ((C15844 * C225 + C32550 * C245 + C15843 * C226 + C15837 * C246) *
                C32644 +
            (C15844 * C215 + C32550 * C230 + C15843 * C216 + C15837 * C231) *
                C118) *
               C32954 +
           ((C15844 * C133 + C32550 * C142 + C15843 * C132 + C15837 * C141) *
                C32644 +
            (C15844 * C121 + C32550 * C128 + C15843 * C120 + C15837 * C127) *
                C118) *
               C32958) *
              C32603 * C32589 * C111 +
          (((C15843 * C121 + C15837 * C128 + C15844 * C122 + C32550 * C129) *
                C118 +
            (C15843 * C133 + C15837 * C142 + C15844 * C134 + C32550 * C143) *
                C32644) *
               C32958 +
           ((C15843 * C215 + C15837 * C230 + C15844 * C214 + C32550 * C229) *
                C118 +
            (C15843 * C225 + C15837 * C245 + C15844 * C224 + C32550 * C244) *
                C32644) *
               C32954 +
           ((C15843 * C220 + C15837 * C235 + C15844 * C221 + C32550 * C236) *
                C118 +
            (C15843 * C240 + C15837 * C250 + C15844 * C241 + C32550 * C251) *
                C32644) *
               C32944 +
           ((C15843 * C867 + C15837 * C876 + C15844 * C1244 + C32550 * C1245) *
                C118 +
            (C15843 * C873 + C15837 * C885 + C15844 * C1246 + C32550 * C1247) *
                C32644) *
               C32926) *
              C32603 * C32589 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C15843 * C119 + C15837 * C126 + C15844 * C120 + C32550 * C127) *
                C118 +
            (C15843 * C131 + C15837 * C140 + C15844 * C132 + C32550 * C141) *
                C32644) *
               C32958 +
           ((C15976 + C15977) * C118 + (C15978 + C15979) * C32644) * C32954 +
           C16000 * C32944 + C16001 * C32926) *
              C32603 * C209 -
          (((C15988 + C15989) * C32644 + (C15990 + C15991) * C118) * C32926 +
           ((C15987 + C15986) * C32644 + (C15985 + C15984) * C118) * C32944 +
           ((C15983 + C15982) * C32644 + (C15981 + C15980) * C118) * C32954 +
           ((C15979 + C15978) * C32644 + (C15977 + C15976) * C118) * C32958) *
              C32603 * C210 +
          (C16000 * C32958 + C16001 * C32954 +
           ((C15991 + C15990) * C118 + (C15989 + C15988) * C32644) * C32944 +
           ((C15843 * C6195 + C15837 * C6198 + C15844 * C6402 +
             C32550 * C6403) *
                C118 +
            (C15843 * C6197 + C15837 * C6201 + C15844 * C6404 +
             C32550 * C6405) *
                C32644) *
               C32926) *
              C32603 * C211) *
         C32577) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C15843 * C119 + C15837 * C126 + C15844 * C120 + C32550 * C127) *
                C118 +
            (C15843 * C131 + C15837 * C140 + C15844 * C132 + C32550 * C141) *
                C32644) *
               C32958 +
           ((C15976 + C15977) * C118 + (C15978 + C15979) * C32644) * C32954 +
           C16000 * C32944 + C16001 * C32926) *
              C315 -
          (((C15844 * C1587 + C32550 * C1590 + C15843 * C1586 +
             C15837 * C1589) *
                C32644 +
            (C15844 * C1581 + C32550 * C1584 + C15843 * C1580 +
             C15837 * C1583) *
                C118) *
               C32926 +
           ((C15844 * C1072 + C32550 * C1090 + C15843 * C1073 +
             C15837 * C1091) *
                C32644 +
            (C15844 * C1063 + C32550 * C1075 + C15843 * C1064 +
             C15837 * C1076) *
                C118) *
               C32944 +
           ((C15844 * C629 + C32550 * C634 + C15843 * C628 + C15837 * C633) *
                C32644 +
            (C15844 * C619 + C32550 * C624 + C15843 * C618 + C15837 * C623) *
                C118) *
               C32954 +
           ((C15844 * C331 + C32550 * C351 + C15843 * C332 + C15837 * C352) *
                C32644 +
            (C15844 * C321 + C32550 * C336 + C15843 * C322 + C15837 * C337) *
                C118) *
               C32958) *
              C316 +
          (((C15843 * C323 + C15837 * C338 + C15844 * C324 + C32550 * C339) *
                C118 +
            (C15843 * C343 + C15837 * C353 + C15844 * C344 + C32550 * C354) *
                C32644) *
               C32958 +
           ((C15843 * C1065 + C15837 * C1077 + C15844 * C1066 +
             C32550 * C1078) *
                C118 +
            (C15843 * C1080 + C15837 * C1092 + C15844 * C1081 +
             C32550 * C1093) *
                C32644) *
               C32954 +
           ((C15843 * C1068 + C15837 * C1083 + C15844 * C1069 +
             C32550 * C1084) *
                C118 +
            (C15843 * C1086 + C15837 * C1095 + C15844 * C1087 +
             C32550 * C1096) *
                C32644) *
               C32944 +
           ((C15843 * C6309 + C15837 * C6313 + C15844 * C7201 +
             C32550 * C7202) *
                C118 +
            (C15843 * C6314 + C15837 * C6318 + C15844 * C7203 +
             C32550 * C7204) *
                C32644) *
               C32926) *
              C317) *
         C32589 * C32577) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C15843 * C119 + C15837 * C126 + C15844 * C120 + C32550 * C127) *
                C1741 +
            (C15843 * C131 + C15837 * C140 + C15844 * C132 + C32550 * C141) *
                C32952 +
            (C15843 * C322 + C15837 * C337 + C15844 * C321 + C32550 * C336) *
                C1742 +
            (C15843 * C332 + C15837 * C352 + C15844 * C331 + C32550 * C351) *
                C32941 +
            (C15843 * C323 + C15837 * C338 + C15844 * C324 + C32550 * C339) *
                C1743 +
            (C15843 * C343 + C15837 * C353 + C15844 * C344 + C32550 * C354) *
                C32919) *
               C15051 +
           ((C15976 + C15977) * C1741 + (C15978 + C15979) * C32952 +
            (C16561 + C16560) * C1742 + (C16559 + C16558) * C32941 +
            (C15843 * C1065 + C15837 * C1077 + C15844 * C1066 +
             C32550 * C1078) *
                C1743 +
            (C15843 * C1080 + C15837 * C1092 + C15844 * C1081 +
             C32550 * C1093) *
                C32919) *
               C32691) *
              C32603 * C32589 * C110 -
          (((C15844 * C1082 + C32550 * C1094 + C15843 * C1081 +
             C15837 * C1093) *
                C32919 +
            (C15844 * C1067 + C32550 * C1079 + C15843 * C1066 +
             C15837 * C1078) *
                C1743 +
            (C15844 * C630 + C32550 * C635 + C15843 * C629 + C15837 * C634) *
                C32941 +
            (C15844 * C620 + C32550 * C625 + C15843 * C619 + C15837 * C624) *
                C1742 +
            (C16257 + C16256) * C32952 + (C16255 + C16254) * C1741) *
               C32691 +
           ((C15844 * C345 + C32550 * C355 + C15843 * C344 + C15837 * C354) *
                C32919 +
            (C15844 * C325 + C32550 * C340 + C15843 * C324 + C15837 * C339) *
                C1743 +
            (C15844 * C330 + C32550 * C350 + C15843 * C331 + C15837 * C351) *
                C32941 +
            (C15844 * C320 + C32550 * C335 + C15843 * C321 + C15837 * C336) *
                C1742 +
            (C15844 * C133 + C32550 * C142 + C15843 * C132 + C15837 * C141) *
                C32952 +
            (C15844 * C121 + C32550 * C128 + C15843 * C120 + C15837 * C127) *
                C1741) *
               C15051) *
              C32603 * C32589 * C111 +
          (((C15843 * C121 + C15837 * C128 + C15844 * C122 + C32550 * C129) *
                C1741 +
            (C15843 * C133 + C15837 * C142 + C15844 * C134 + C32550 * C143) *
                C32952 +
            (C15843 * C320 + C15837 * C335 + C15844 * C319 + C32550 * C334) *
                C1742 +
            (C15843 * C330 + C15837 * C350 + C15844 * C329 + C32550 * C349) *
                C32941 +
            (C15843 * C325 + C15837 * C340 + C15844 * C326 + C32550 * C341) *
                C1743 +
            (C15843 * C345 + C15837 * C355 + C15844 * C346 + C32550 * C356) *
                C32919) *
               C15051 +
           ((C15843 * C215 + C15837 * C230 + C15844 * C214 + C32550 * C229) *
                C1741 +
            (C15843 * C225 + C15837 * C245 + C15844 * C224 + C32550 * C244) *
                C32952 +
            (C15843 * C620 + C15837 * C625 + C15844 * C621 + C32550 * C626) *
                C1742 +
            (C15843 * C630 + C15837 * C635 + C15844 * C631 + C32550 * C636) *
                C32941 +
            (C15843 * C1067 + C15837 * C1079 + C15844 * C2192 +
             C32550 * C2193) *
                C1743 +
            (C15843 * C1082 + C15837 * C1094 + C15844 * C2194 +
             C32550 * C2195) *
                C32919) *
               C32691) *
              C32603 * C32589 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C15843 * C119 + C15837 * C126 + C15844 * C120 + C32550 * C127) *
                C1741 +
            (C15843 * C131 + C15837 * C140 + C15844 * C132 + C32550 * C141) *
                C32952 +
            (C15843 * C322 + C15837 * C337 + C15844 * C321 + C32550 * C336) *
                C1742 +
            (C15843 * C332 + C15837 * C352 + C15844 * C331 + C32550 * C351) *
                C32941 +
            (C15843 * C323 + C15837 * C338 + C15844 * C324 + C32550 * C339) *
                C1743 +
            (C15843 * C343 + C15837 * C353 + C15844 * C344 + C32550 * C354) *
                C32919) *
               C15051 +
           ((C15976 + C15977) * C1741 + (C15978 + C15979) * C32952 +
            (C16561 + C16560) * C1742 + (C16559 + C16558) * C32941 +
            (C16870 + C16871) * C1743 + (C16872 + C16873) * C32919) *
               C32691) *
              C32603 * C209 -
          (((C16874 + C16875) * C32919 + (C16876 + C16877) * C1743 +
            (C16554 + C16555) * C32941 + (C16556 + C16557) * C1742 +
            (C15983 + C15982) * C32952 + (C15981 + C15980) * C1741) *
               C32691 +
           ((C16873 + C16872) * C32919 + (C16871 + C16870) * C1743 +
            (C16558 + C16559) * C32941 + (C16560 + C16561) * C1742 +
            (C15979 + C15978) * C32952 + (C15977 + C15976) * C1741) *
               C15051) *
              C32603 * C210 +
          ((C15992 * C1741 + C15993 * C32952 + (C16557 + C16556) * C1742 +
            (C16555 + C16554) * C32941 + (C16877 + C16876) * C1743 +
            (C16875 + C16874) * C32919) *
               C15051 +
           (C15994 * C1741 + C15995 * C32952 + (C16553 + C16552) * C1742 +
            (C16551 + C16550) * C32941 +
            (C15843 * C6309 + C15837 * C6313 + C15844 * C7201 +
             C32550 * C7202) *
                C1743 +
            (C15843 * C6314 + C15837 * C6318 + C15844 * C7203 +
             C32550 * C7204) *
                C32919) *
               C32691) *
              C32603 * C211) *
         C32577) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C15843 * C119 + C15837 * C126 + C15844 * C120 + C32550 * C127) *
                C1741 +
            (C15843 * C131 + C15837 * C140 + C15844 * C132 + C32550 * C141) *
                C32952 +
            (C17058 + C17059) * C1742 + (C17060 + C17061) * C32941 +
            C17074 * C1743 + C17075 * C32919) *
               C15051 +
           ((C15976 + C15977) * C1741 + (C15978 + C15979) * C32952 +
            (C16561 + C16560) * C1742 + (C16559 + C16558) * C32941 +
            C17040 * C1743 + C17041 * C32919) *
               C32691) *
              C315 -
          (((C17066 + C17067) * C32919 + (C17068 + C17069) * C1743 +
            (C16873 + C16872) * C32941 + (C16871 + C16870) * C1742 +
            (C16558 + C16559) * C32952 + (C16560 + C16561) * C1741) *
               C32691 +
           ((C17070 + C17071) * C32919 + (C17072 + C17073) * C1743 +
            (C17065 + C17064) * C32941 + (C17063 + C17062) * C1742 +
            (C17061 + C17060) * C32952 + (C17059 + C17058) * C1741) *
               C15051) *
              C316 +
          ((C17074 * C1741 + C17075 * C32952 + (C17073 + C17072) * C1742 +
            (C17071 + C17070) * C32941 +
            (C15843 * C1967 + C15837 * C1976 + C15844 * C1968 +
             C32550 * C1977) *
                C1743 +
            (C15843 * C1979 + C15837 * C1985 + C15844 * C1980 +
             C32550 * C1986) *
                C32919) *
               C15051 +
           (C17040 * C1741 + C17041 * C32952 + (C17069 + C17068) * C1742 +
            (C17067 + C17066) * C32941 +
            (C15843 * C7014 + C15837 * C7018 + C15844 * C12241 +
             C32550 * C12242) *
                C1743 +
            (C15843 * C7019 + C15837 * C7023 + C15844 * C12243 +
             C32550 * C12244) *
                C32919) *
               C32691) *
              C317) *
         C32589 * C32577) /
            (p * q * std::sqrt(p + q));
    d2ee[13] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C15843 * C119 + C15837 * C126 + C15844 * C120 + C32550 * C127) *
                 C118 +
             (C15843 * C131 + C15837 * C140 + C15844 * C132 + C32550 * C141) *
                 C32644) *
                C32958 +
            ((C15976 + C15977) * C118 + (C15978 + C15979) * C32644) * C32954 +
            C16000 * C32944 + C16001 * C32926) *
               C530 -
           (((C15844 * C1587 + C32550 * C1590 + C15843 * C1586 +
              C15837 * C1589) *
                 C32644 +
             (C15844 * C1581 + C32550 * C1584 + C15843 * C1580 +
              C15837 * C1583) *
                 C118) *
                C32926 +
            ((C15844 * C1072 + C32550 * C1090 + C15843 * C1073 +
              C15837 * C1091) *
                 C32644 +
             (C15844 * C1063 + C32550 * C1075 + C15843 * C1064 +
              C15837 * C1076) *
                 C118) *
                C32944 +
            ((C15844 * C629 + C32550 * C634 + C15843 * C628 + C15837 * C633) *
                 C32644 +
             (C15844 * C619 + C32550 * C624 + C15843 * C618 + C15837 * C623) *
                 C118) *
                C32954 +
            ((C15844 * C331 + C32550 * C351 + C15843 * C332 + C15837 * C352) *
                 C32644 +
             (C15844 * C321 + C32550 * C336 + C15843 * C322 + C15837 * C337) *
                 C118) *
                C32958) *
               C531) *
              C32589 * C442 +
          ((((C15843 * C321 + C15837 * C336 + C15844 * C320 + C32550 * C335) *
                 C118 +
             (C15843 * C331 + C15837 * C351 + C15844 * C330 + C32550 * C350) *
                 C32644) *
                C32958 +
            ((C15843 * C619 + C15837 * C624 + C15844 * C620 + C32550 * C625) *
                 C118 +
             (C15843 * C629 + C15837 * C634 + C15844 * C630 + C32550 * C635) *
                 C32644) *
                C32954 +
            ((C15843 * C1063 + C15837 * C1075 + C15844 * C1062 +
              C32550 * C1074) *
                 C118 +
             (C15843 * C1072 + C15837 * C1090 + C15844 * C1071 +
              C32550 * C1089) *
                 C32644) *
                C32944 +
            ((C15843 * C1581 + C15837 * C1584 + C15844 * C1582 +
              C32550 * C1585) *
                 C118 +
             (C15843 * C1587 + C15837 * C1590 + C15844 * C1588 +
              C32550 * C1591) *
                 C32644) *
                C32926) *
               C531 -
           (((C16265 + C16264) * C32644 + (C16263 + C16262) * C118) * C32926 +
            ((C16261 + C16260) * C32644 + (C16259 + C16258) * C118) * C32944 +
            ((C16257 + C16256) * C32644 + (C16255 + C16254) * C118) * C32954 +
            ((C15844 * C133 + C32550 * C142 + C15843 * C132 + C15837 * C141) *
                 C32644 +
             (C15844 * C121 + C32550 * C128 + C15843 * C120 + C15837 * C127) *
                 C118) *
                C32958) *
               C530) *
              C32589 * C443)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C15053 * C119 + C32957 * C126 + C15054 * C120 + C32950 * C127 +
              C15055 * C121 + C32937 * C128 + C15056 * C122 + C32920 * C129) *
                 C118 +
             (C15053 * C131 + C32957 * C140 + C15054 * C132 + C32950 * C141 +
              C15055 * C133 + C32937 * C142 + C15056 * C134 + C32920 * C143) *
                 C32644) *
                C15051 +
            ((C15188 + C15189 + C15190 + C15191) * C118 +
             (C15192 + C15193 + C15194 + C15195) * C32644) *
                C32691) *
               C530 -
           (((C15056 * C631 + C32920 * C636 + C15055 * C630 + C32937 * C635 +
              C15054 * C629 + C32950 * C634 + C15053 * C628 + C32957 * C633) *
                 C32644 +
             (C15056 * C621 + C32920 * C626 + C15055 * C620 + C32937 * C625 +
              C15054 * C619 + C32950 * C624 + C15053 * C618 + C32957 * C623) *
                 C118) *
                C32691 +
            ((C15056 * C329 + C32920 * C349 + C15055 * C330 + C32937 * C350 +
              C15054 * C331 + C32950 * C351 + C15053 * C332 + C32957 * C352) *
                 C32644 +
             (C15056 * C319 + C32920 * C334 + C15055 * C320 + C32937 * C335 +
              C15054 * C321 + C32950 * C336 + C15053 * C322 + C32957 * C337) *
                 C118) *
                C15051) *
               C531) *
              C32589 * C442 +
          ((((C15053 * C321 + C32957 * C336 + C15054 * C320 + C32950 * C335 +
              C15055 * C319 + C32937 * C334 + C15056 * C318 + C32920 * C333) *
                 C118 +
             (C15053 * C331 + C32957 * C351 + C15054 * C330 + C32950 * C350 +
              C15055 * C329 + C32937 * C349 + C15056 * C328 + C32920 * C348) *
                 C32644) *
                C15051 +
            ((C15053 * C619 + C32957 * C624 + C15054 * C620 + C32950 * C625 +
              C15055 * C621 + C32937 * C626 + C15056 * C622 + C32920 * C627) *
                 C118 +
             (C15053 * C629 + C32957 * C634 + C15054 * C630 + C32950 * C635 +
              C15055 * C631 + C32937 * C636 + C15056 * C632 + C32920 * C637) *
                 C32644) *
                C32691) *
               C531 -
           (((C15455 + C15454 + C15453 + C15452) * C32644 +
             (C15451 + C15450 + C15449 + C15448) * C118) *
                C32691 +
            ((C15056 * C135 + C32920 * C144 + C15055 * C134 + C32937 * C143 +
              C15054 * C133 + C32950 * C142 + C15053 * C132 + C32957 * C141) *
                 C32644 +
             (C15056 * C123 + C32920 * C130 + C15055 * C122 + C32937 * C129 +
              C15054 * C121 + C32950 * C128 + C15053 * C120 + C32957 * C127) *
                 C118) *
                C15051) *
               C530) *
              C32589 * C443)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C15843 * C119 + C15837 * C126 + C15844 * C120 + C32550 * C127) *
                 C1741 +
             (C15843 * C131 + C15837 * C140 + C15844 * C132 + C32550 * C141) *
                 C32952 +
             (C17058 + C17059) * C1742 + (C17060 + C17061) * C32941 +
             C17074 * C1743 + C17075 * C32919) *
                C15051 +
            ((C15976 + C15977) * C1741 + (C15978 + C15979) * C32952 +
             (C16561 + C16560) * C1742 + (C16559 + C16558) * C32941 +
             C17040 * C1743 + C17041 * C32919) *
                C32691) *
               C530 -
           (((C17066 + C17067) * C32919 + (C17068 + C17069) * C1743 +
             (C16873 + C16872) * C32941 + (C16871 + C16870) * C1742 +
             (C16558 + C16559) * C32952 + (C16560 + C16561) * C1741) *
                C32691 +
            ((C17070 + C17071) * C32919 + (C17072 + C17073) * C1743 +
             (C17065 + C17064) * C32941 + (C17063 + C17062) * C1742 +
             (C17061 + C17060) * C32952 + (C17059 + C17058) * C1741) *
                C15051) *
               C531) *
              C32589 * C442 +
          ((((C17504 + C17505) * C1741 + (C17506 + C17507) * C32952 +
             (C17508 + C17509) * C1742 + (C17510 + C17511) * C32941 +
             (C15843 * C1965 + C15837 * C1974 + C15844 * C1964 +
              C32550 * C1973) *
                 C1743 +
             (C15843 * C1971 + C15837 * C1983 + C15844 * C1970 +
              C32550 * C1982) *
                 C32919) *
                C15051 +
            ((C17286 + C17287) * C1741 + (C17288 + C17289) * C32952 +
             (C17290 + C17291) * C1742 + (C17292 + C17293) * C32941 +
             (C15843 * C2529 + C15837 * C2532 + C15844 * C2530 +
              C32550 * C2533) *
                 C1743 +
             (C15843 * C2535 + C15837 * C2538 + C15844 * C2536 +
              C32550 * C2539) *
                 C32919) *
                C32691) *
               C531 -
           (((C17293 + C17292) * C32919 + (C17291 + C17290) * C1743 +
             (C17289 + C17288) * C32941 + (C17287 + C17286) * C1742 +
             (C16257 + C16256) * C32952 + (C16255 + C16254) * C1741) *
                C32691 +
            ((C17511 + C17510) * C32919 + (C17509 + C17508) * C1743 +
             (C17507 + C17506) * C32941 + (C17505 + C17504) * C1742 +
             (C15844 * C133 + C32550 * C142 + C15843 * C132 + C15837 * C141) *
                 C32952 +
             (C15844 * C121 + C32550 * C128 + C15843 * C120 + C15837 * C127) *
                 C1741) *
                C15051) *
               C530) *
              C32589 * C443)) /
            (p * q * std::sqrt(p + q));
    d2ee[14] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C15053 * C119 + C32957 * C126 + C15054 * C120 + C32950 * C127 +
             C15055 * C121 + C32937 * C128 + C15056 * C122 + C32920 * C129) *
                C118 +
            (C15053 * C131 + C32957 * C140 + C15054 * C132 + C32950 * C141 +
             C15055 * C133 + C32937 * C142 + C15056 * C134 + C32920 * C143) *
                C32644) *
               C15051 +
           ((C15188 + C15189 + C15190 + C15191) * C118 +
            (C15192 + C15193 + C15194 + C15195) * C32644) *
               C32691) *
              C32603 * C209 -
          (((C15196 + C15197 + C15198 + C15199) * C32644 +
            (C15200 + C15201 + C15202 + C15203) * C118) *
               C32691 +
           ((C15195 + C15194 + C15193 + C15192) * C32644 +
            (C15191 + C15190 + C15189 + C15188) * C118) *
               C15051) *
              C32603 * C210 +
          (((C15203 + C15202 + C15201 + C15200) * C118 +
            (C15199 + C15198 + C15197 + C15196) * C32644) *
               C15051 +
           ((C15053 * C869 + C32957 * C878 + C15054 * C868 + C32950 * C877 +
             C15055 * C867 + C32937 * C876 + C15056 * C1244 + C32920 * C1245) *
                C118 +
            (C15053 * C875 + C32957 * C887 + C15054 * C874 + C32950 * C886 +
             C15055 * C873 + C32937 * C885 + C15056 * C1246 + C32920 * C1247) *
                C32644) *
               C32691) *
              C32603 * C211) *
         C32577) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C15053 * C119 + C32957 * C126 + C15054 * C120 + C32950 * C127 +
             C15055 * C121 + C32937 * C128 + C15056 * C122 + C32920 * C129) *
                C118 +
            (C15053 * C131 + C32957 * C140 + C15054 * C132 + C32950 * C141 +
             C15055 * C133 + C32937 * C142 + C15056 * C134 + C32920 * C143) *
                C32644) *
               C15051 +
           ((C15053 * C217 + C32957 * C232 + C15054 * C216 + C32950 * C231 +
             C15055 * C215 + C32937 * C230 + C15056 * C214 + C32920 * C229) *
                C118 +
            (C15053 * C227 + C32957 * C247 + C15054 * C226 + C32950 * C246 +
             C15055 * C225 + C32937 * C245 + C15056 * C224 + C32920 * C244) *
                C32644) *
               C32691) *
              C32603 * C32589 * C110 -
          (((C15056 * C223 + C32920 * C243 + C15055 * C224 + C32937 * C244 +
             C15054 * C225 + C32950 * C245 + C15053 * C226 + C32957 * C246) *
                C32644 +
            (C15056 * C213 + C32920 * C228 + C15055 * C214 + C32937 * C229 +
             C15054 * C215 + C32950 * C230 + C15053 * C216 + C32957 * C231) *
                C118) *
               C32691 +
           ((C15056 * C135 + C32920 * C144 + C15055 * C134 + C32937 * C143 +
             C15054 * C133 + C32950 * C142 + C15053 * C132 + C32957 * C141) *
                C32644 +
            (C15056 * C123 + C32920 * C130 + C15055 * C122 + C32937 * C129 +
             C15054 * C121 + C32950 * C128 + C15053 * C120 + C32957 * C127) *
                C118) *
               C15051) *
              C32603 * C32589 * C111 +
          (((C15053 * C121 + C32957 * C128 + C15054 * C122 + C32950 * C129 +
             C15055 * C123 + C32937 * C130 + C15056 * C124 + C32920 * C137) *
                C118 +
            (C15053 * C133 + C32957 * C142 + C15054 * C134 + C32950 * C143 +
             C15055 * C135 + C32937 * C144 + C15056 * C136 + C32920 * C145) *
                C32644) *
               C15051 +
           ((C15053 * C215 + C32957 * C230 + C15054 * C214 + C32950 * C229 +
             C15055 * C213 + C32937 * C228 + C15056 * C444 + C32920 * C445) *
                C118 +
            (C15053 * C225 + C32957 * C245 + C15054 * C224 + C32950 * C244 +
             C15055 * C223 + C32937 * C243 + C15056 * C446 + C32920 * C447) *
                C32644) *
               C32691) *
              C32603 * C32589 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C15843 * C119 + C15837 * C126 + C15844 * C120 + C32550 * C127) *
                C118 +
            (C15843 * C131 + C15837 * C140 + C15844 * C132 + C32550 * C141) *
                C32644) *
               C32958 +
           ((C15843 * C217 + C15837 * C232 + C15844 * C216 + C32550 * C231) *
                C118 +
            (C15843 * C227 + C15837 * C247 + C15844 * C226 + C32550 * C246) *
                C32644) *
               C32954 +
           ((C15843 * C218 + C15837 * C233 + C15844 * C219 + C32550 * C234) *
                C118 +
            (C15843 * C238 + C15837 * C248 + C15844 * C239 + C32550 * C249) *
                C32644) *
               C32944 +
           ((C15843 * C869 + C15837 * C878 + C15844 * C868 + C32550 * C877) *
                C118 +
            (C15843 * C875 + C15837 * C887 + C15844 * C874 + C32550 * C886) *
                C32644) *
               C32926) *
              C32603 * C32589 * C110 -
          (((C15844 * C873 + C32550 * C885 + C15843 * C874 + C15837 * C886) *
                C32644 +
            (C15844 * C867 + C32550 * C876 + C15843 * C868 + C15837 * C877) *
                C118) *
               C32926 +
           ((C15844 * C240 + C32550 * C250 + C15843 * C239 + C15837 * C249) *
                C32644 +
            (C15844 * C220 + C32550 * C235 + C15843 * C219 + C15837 * C234) *
                C118) *
               C32944 +
           ((C15844 * C225 + C32550 * C245 + C15843 * C226 + C15837 * C246) *
                C32644 +
            (C15844 * C215 + C32550 * C230 + C15843 * C216 + C15837 * C231) *
                C118) *
               C32954 +
           ((C15844 * C133 + C32550 * C142 + C15843 * C132 + C15837 * C141) *
                C32644 +
            (C15844 * C121 + C32550 * C128 + C15843 * C120 + C15837 * C127) *
                C118) *
               C32958) *
              C32603 * C32589 * C111 +
          (((C15843 * C121 + C15837 * C128 + C15844 * C122 + C32550 * C129) *
                C118 +
            (C15843 * C133 + C15837 * C142 + C15844 * C134 + C32550 * C143) *
                C32644) *
               C32958 +
           ((C15843 * C215 + C15837 * C230 + C15844 * C214 + C32550 * C229) *
                C118 +
            (C15843 * C225 + C15837 * C245 + C15844 * C224 + C32550 * C244) *
                C32644) *
               C32954 +
           ((C15843 * C220 + C15837 * C235 + C15844 * C221 + C32550 * C236) *
                C118 +
            (C15843 * C240 + C15837 * C250 + C15844 * C241 + C32550 * C251) *
                C32644) *
               C32944 +
           ((C15843 * C867 + C15837 * C876 + C15844 * C1244 + C32550 * C1245) *
                C118 +
            (C15843 * C873 + C15837 * C885 + C15844 * C1246 + C32550 * C1247) *
                C32644) *
               C32926) *
              C32603 * C32589 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C15843 * C119 + C15837 * C126 + C15844 * C120 + C32550 * C127) *
                C118 +
            (C15843 * C131 + C15837 * C140 + C15844 * C132 + C32550 * C141) *
                C32644) *
               C32958 +
           ((C15976 + C15977) * C118 + (C15978 + C15979) * C32644) * C32954 +
           C16000 * C32944 + C16001 * C32926) *
              C32603 * C209 -
          (((C15988 + C15989) * C32644 + (C15990 + C15991) * C118) * C32926 +
           ((C15987 + C15986) * C32644 + (C15985 + C15984) * C118) * C32944 +
           ((C15983 + C15982) * C32644 + (C15981 + C15980) * C118) * C32954 +
           ((C15979 + C15978) * C32644 + (C15977 + C15976) * C118) * C32958) *
              C32603 * C210 +
          (C16000 * C32958 + C16001 * C32954 +
           ((C15991 + C15990) * C118 + (C15989 + C15988) * C32644) * C32944 +
           ((C15843 * C6195 + C15837 * C6198 + C15844 * C6402 +
             C32550 * C6403) *
                C118 +
            (C15843 * C6197 + C15837 * C6201 + C15844 * C6404 +
             C32550 * C6405) *
                C32644) *
               C32926) *
              C32603 * C211) *
         C32577) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C15843 * C119 + C15837 * C126 + C15844 * C120 + C32550 * C127) *
                C1741 +
            (C15843 * C131 + C15837 * C140 + C15844 * C132 + C32550 * C141) *
                C32952 +
            (C15843 * C322 + C15837 * C337 + C15844 * C321 + C32550 * C336) *
                C1742 +
            (C15843 * C332 + C15837 * C352 + C15844 * C331 + C32550 * C351) *
                C32941 +
            (C15843 * C323 + C15837 * C338 + C15844 * C324 + C32550 * C339) *
                C1743 +
            (C15843 * C343 + C15837 * C353 + C15844 * C344 + C32550 * C354) *
                C32919) *
               C15051 +
           ((C15976 + C15977) * C1741 + (C15978 + C15979) * C32952 +
            (C16561 + C16560) * C1742 + (C16559 + C16558) * C32941 +
            (C15843 * C1065 + C15837 * C1077 + C15844 * C1066 +
             C32550 * C1078) *
                C1743 +
            (C15843 * C1080 + C15837 * C1092 + C15844 * C1081 +
             C32550 * C1093) *
                C32919) *
               C32691) *
              C32603 * C32589 * C110 -
          (((C15844 * C1082 + C32550 * C1094 + C15843 * C1081 +
             C15837 * C1093) *
                C32919 +
            (C15844 * C1067 + C32550 * C1079 + C15843 * C1066 +
             C15837 * C1078) *
                C1743 +
            (C15844 * C630 + C32550 * C635 + C15843 * C629 + C15837 * C634) *
                C32941 +
            (C15844 * C620 + C32550 * C625 + C15843 * C619 + C15837 * C624) *
                C1742 +
            (C16257 + C16256) * C32952 + (C16255 + C16254) * C1741) *
               C32691 +
           ((C15844 * C345 + C32550 * C355 + C15843 * C344 + C15837 * C354) *
                C32919 +
            (C15844 * C325 + C32550 * C340 + C15843 * C324 + C15837 * C339) *
                C1743 +
            (C15844 * C330 + C32550 * C350 + C15843 * C331 + C15837 * C351) *
                C32941 +
            (C15844 * C320 + C32550 * C335 + C15843 * C321 + C15837 * C336) *
                C1742 +
            (C15844 * C133 + C32550 * C142 + C15843 * C132 + C15837 * C141) *
                C32952 +
            (C15844 * C121 + C32550 * C128 + C15843 * C120 + C15837 * C127) *
                C1741) *
               C15051) *
              C32603 * C32589 * C111 +
          (((C15843 * C121 + C15837 * C128 + C15844 * C122 + C32550 * C129) *
                C1741 +
            (C15843 * C133 + C15837 * C142 + C15844 * C134 + C32550 * C143) *
                C32952 +
            (C15843 * C320 + C15837 * C335 + C15844 * C319 + C32550 * C334) *
                C1742 +
            (C15843 * C330 + C15837 * C350 + C15844 * C329 + C32550 * C349) *
                C32941 +
            (C15843 * C325 + C15837 * C340 + C15844 * C326 + C32550 * C341) *
                C1743 +
            (C15843 * C345 + C15837 * C355 + C15844 * C346 + C32550 * C356) *
                C32919) *
               C15051 +
           ((C15843 * C215 + C15837 * C230 + C15844 * C214 + C32550 * C229) *
                C1741 +
            (C15843 * C225 + C15837 * C245 + C15844 * C224 + C32550 * C244) *
                C32952 +
            (C15843 * C620 + C15837 * C625 + C15844 * C621 + C32550 * C626) *
                C1742 +
            (C15843 * C630 + C15837 * C635 + C15844 * C631 + C32550 * C636) *
                C32941 +
            (C15843 * C1067 + C15837 * C1079 + C15844 * C2192 +
             C32550 * C2193) *
                C1743 +
            (C15843 * C1082 + C15837 * C1094 + C15844 * C2194 +
             C32550 * C2195) *
                C32919) *
               C32691) *
              C32603 * C32589 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C15843 * C119 + C15837 * C126 + C15844 * C120 + C32550 * C127) *
                C1741 +
            (C15843 * C131 + C15837 * C140 + C15844 * C132 + C32550 * C141) *
                C32952 +
            (C15843 * C322 + C15837 * C337 + C15844 * C321 + C32550 * C336) *
                C1742 +
            (C15843 * C332 + C15837 * C352 + C15844 * C331 + C32550 * C351) *
                C32941 +
            (C15843 * C323 + C15837 * C338 + C15844 * C324 + C32550 * C339) *
                C1743 +
            (C15843 * C343 + C15837 * C353 + C15844 * C344 + C32550 * C354) *
                C32919) *
               C15051 +
           ((C15976 + C15977) * C1741 + (C15978 + C15979) * C32952 +
            (C16561 + C16560) * C1742 + (C16559 + C16558) * C32941 +
            (C16870 + C16871) * C1743 + (C16872 + C16873) * C32919) *
               C32691) *
              C32603 * C209 -
          (((C16874 + C16875) * C32919 + (C16876 + C16877) * C1743 +
            (C16554 + C16555) * C32941 + (C16556 + C16557) * C1742 +
            (C15983 + C15982) * C32952 + (C15981 + C15980) * C1741) *
               C32691 +
           ((C16873 + C16872) * C32919 + (C16871 + C16870) * C1743 +
            (C16558 + C16559) * C32941 + (C16560 + C16561) * C1742 +
            (C15979 + C15978) * C32952 + (C15977 + C15976) * C1741) *
               C15051) *
              C32603 * C210 +
          ((C15992 * C1741 + C15993 * C32952 + (C16557 + C16556) * C1742 +
            (C16555 + C16554) * C32941 + (C16877 + C16876) * C1743 +
            (C16875 + C16874) * C32919) *
               C15051 +
           (C15994 * C1741 + C15995 * C32952 + (C16553 + C16552) * C1742 +
            (C16551 + C16550) * C32941 +
            (C15843 * C6309 + C15837 * C6313 + C15844 * C7201 +
             C32550 * C7202) *
                C1743 +
            (C15843 * C6314 + C15837 * C6318 + C15844 * C7203 +
             C32550 * C7204) *
                C32919) *
               C32691) *
              C32603 * C211) *
         C32577) /
            (p * q * std::sqrt(p + q));
    d2ee[15] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                 (((((C31567 * C119 + C32545 * C126 + C31563 * C120 +
                      C32553 * C127 + C31573 * C121 + C17823 * C128) *
                         C3448 +
                     (C31567 * C131 + C32545 * C140 + C31563 * C132 +
                      C32553 * C141 + C31573 * C133 + C17823 * C142) *
                         C32886 +
                     (C19096 + C19097 + C19098) * C3449 +
                     (C19099 + C19100 + C19101) * C32731) *
                        C15051 +
                    ((C17977 + C17978 + C17979) * C3448 +
                     (C17980 + C17981 + C17982) * C32886 +
                     (C18621 + C18620 + C18619) * C3449 +
                     (C18618 + C18617 + C18616) * C32731) *
                        C32691) *
                       C32603 * C440 -
                   (((C18610 + C18611 + C18612) * C32731 +
                     (C18613 + C18614 + C18615) * C3449 +
                     (C17988 + C17987 + C17986) * C32886 +
                     (C17985 + C17984 + C17983) * C3448) *
                        C32691 +
                    ((C18616 + C18617 + C18618) * C32731 +
                     (C18619 + C18620 + C18621) * C3449 +
                     (C17982 + C17981 + C17980) * C32886 +
                     (C17979 + C17978 + C17977) * C3448) *
                        C15051) *
                       C32603 * C441) *
                      C442 +
                  ((((C18282 + C18283 + C18284) * C3448 +
                     (C18285 + C18286 + C18287) * C32886 +
                     (C19320 + C19321 + C19322) * C3449 +
                     (C19323 + C19324 + C19325) * C32731) *
                        C15051 +
                    ((C18288 + C18289 + C18290) * C3448 +
                     (C18291 + C18292 + C18293) * C32886 +
                     (C31567 * C1063 + C32545 * C1075 + C31563 * C1062 +
                      C32553 * C1074 + C31573 * C1430 + C17823 * C1431) *
                         C3449 +
                     (C31567 * C1072 + C32545 * C1090 + C31563 * C1071 +
                      C32553 * C1089 + C31573 * C1432 + C17823 * C1433) *
                         C32731) *
                        C32691) *
                       C32603 * C441 -
                   (((C19325 + C19324 + C19323) * C32731 +
                     (C19322 + C19321 + C19320) * C3449 +
                     (C18287 + C18286 + C18285) * C32886 +
                     (C18284 + C18283 + C18282) * C3448) *
                        C32691 +
                    ((C31573 * C329 + C17823 * C349 + C31563 * C330 +
                      C32553 * C350 + C31567 * C331 + C32545 * C351) *
                         C32731 +
                     (C31573 * C319 + C17823 * C334 + C31563 * C320 +
                      C32553 * C335 + C31567 * C321 + C32545 * C336) *
                         C3449 +
                     (C31573 * C134 + C17823 * C143 + C31563 * C133 +
                      C32553 * C142 + C31567 * C132 + C32545 * C141) *
                         C32886 +
                     (C31573 * C122 + C17823 * C129 + C31563 * C121 +
                      C32553 * C128 + C31567 * C120 + C32545 * C127) *
                         C3448) *
                        C15051) *
                       C32603 * C440) *
                      C443)) /
                (p * q * std::sqrt(p + q));
    d2ee[16] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                 (((((C31567 * C119 + C32545 * C126 + C31563 * C120 +
                      C32553 * C127 + C31573 * C121 + C17823 * C128) *
                         C3448 +
                     (C31567 * C131 + C32545 * C140 + C31563 * C132 +
                      C32553 * C141 + C31573 * C133 + C17823 * C142) *
                         C32886 +
                     (C19096 + C19097 + C19098) * C3449 +
                     (C19099 + C19100 + C19101) * C32731) *
                        C15051 +
                    ((C17977 + C17978 + C17979) * C3448 +
                     (C17980 + C17981 + C17982) * C32886 + C19736 * C3449 +
                     C19737 * C32731) *
                        C32691) *
                       C530 -
                   (((C19102 + C19103 + C19104) * C32731 +
                     (C19105 + C19106 + C19107) * C3449 + C19738 * C32886 +
                     C19739 * C3448) *
                        C32691 +
                    ((C19108 + C19109 + C19110) * C32731 +
                     (C19111 + C19112 + C19113) * C3449 +
                     (C19101 + C19100 + C19099) * C32886 +
                     (C19098 + C19097 + C19096) * C3448) *
                        C15051) *
                       C531) *
                      C440 +
                  (((C19736 * C3448 + C19737 * C32886 +
                     (C19107 + C19106 + C19105) * C3449 +
                     (C19104 + C19103 + C19102) * C32731) *
                        C15051 +
                    ((C18615 + C18614 + C18613) * C3448 +
                     (C18612 + C18611 + C18610) * C32886 +
                     (C31567 * C1068 + C32545 * C1083 + C31563 * C1069 +
                      C32553 * C1084 + C31573 * C1070 + C17823 * C1085) *
                         C3449 +
                     (C31567 * C1086 + C32545 * C1095 + C31563 * C1087 +
                      C32553 * C1096 + C31573 * C1088 + C17823 * C1097) *
                         C32731) *
                        C32691) *
                       C531 -
                   (((C18610 + C18611 + C18612) * C32731 +
                     (C18613 + C18614 + C18615) * C3449 +
                     (C17988 + C17987 + C17986) * C32886 +
                     (C17985 + C17984 + C17983) * C3448) *
                        C32691 +
                    (C19738 * C32731 + C19739 * C3449 +
                     (C17982 + C17981 + C17980) * C32886 +
                     (C17979 + C17978 + C17977) * C3448) *
                        C15051) *
                       C530) *
                      C441) *
                 C32577) /
                (p * q * std::sqrt(p + q));
    d2ee[17] += (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C31567 * C119 + C32545 * C126 + C31563 * C120 +
                     C32553 * C127 + C31573 * C121 + C17823 * C128) *
                        C3448 +
                    (C31567 * C131 + C32545 * C140 + C31563 * C132 +
                     C32553 * C141 + C31573 * C133 + C17823 * C142) *
                        C32886 +
                    (C31567 * C322 + C32545 * C337 + C31563 * C321 +
                     C32553 * C336 + C31573 * C320 + C17823 * C335) *
                        C3449 +
                    (C31567 * C332 + C32545 * C352 + C31563 * C331 +
                     C32553 * C351 + C31573 * C330 + C17823 * C350) *
                        C32731) *
                       C15051 +
                   ((C17977 + C17978 + C17979) * C3448 +
                    (C17980 + C17981 + C17982) * C32886 +
                    (C18621 + C18620 + C18619) * C3449 +
                    (C18618 + C18617 + C18616) * C32731) *
                       C32691) *
                      C32603 * C209 -
                  (((C18610 + C18611 + C18612) * C32731 +
                    (C18613 + C18614 + C18615) * C3449 +
                    (C17988 + C17987 + C17986) * C32886 +
                    (C17985 + C17984 + C17983) * C3448) *
                       C32691 +
                   ((C18616 + C18617 + C18618) * C32731 +
                    (C18619 + C18620 + C18621) * C3449 +
                    (C17982 + C17981 + C17980) * C32886 +
                    (C17979 + C17978 + C17977) * C3448) *
                       C15051) *
                      C32603 * C210 +
                  ((C17997 * C3448 + C17998 * C32886 +
                    (C18615 + C18614 + C18613) * C3449 +
                    (C18612 + C18611 + C18610) * C32731) *
                       C15051 +
                   ((C17994 + C17993 + C17992) * C3448 +
                    (C17991 + C17990 + C17989) * C32886 +
                    (C31567 * C1580 + C32545 * C1583 + C31563 * C1581 +
                     C32553 * C1584 + C31573 * C1582 + C17823 * C1585) *
                        C3449 +
                    (C31567 * C1586 + C32545 * C1589 + C31563 * C1587 +
                     C32553 * C1590 + C31573 * C1588 + C17823 * C1591) *
                        C32731) *
                       C32691) *
                      C32603 * C211) *
                 C32577) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C31567 * C119 + C32545 * C126 + C31563 * C120 +
                     C32553 * C127 + C31573 * C121 + C17823 * C128) *
                        C3448 +
                    (C31567 * C131 + C32545 * C140 + C31563 * C132 +
                     C32553 * C141 + C31573 * C133 + C17823 * C142) *
                        C32886 +
                    (C31567 * C322 + C32545 * C337 + C31563 * C321 +
                     C32553 * C336 + C31573 * C320 + C17823 * C335) *
                        C3449 +
                    (C31567 * C332 + C32545 * C352 + C31563 * C331 +
                     C32553 * C351 + C31573 * C330 + C17823 * C350) *
                        C32731) *
                       C15051 +
                   ((C17977 + C17978 + C17979) * C3448 +
                    (C17980 + C17981 + C17982) * C32886 +
                    (C18621 + C18620 + C18619) * C3449 +
                    (C18618 + C18617 + C18616) * C32731) *
                       C32691) *
                      C32603 * C32589 * C110 -
                  (((C31573 * C631 + C17823 * C636 + C31563 * C630 +
                     C32553 * C635 + C31567 * C629 + C32545 * C634) *
                        C32731 +
                    (C31573 * C621 + C17823 * C626 + C31563 * C620 +
                     C32553 * C625 + C31567 * C619 + C32545 * C624) *
                        C3449 +
                    (C18287 + C18286 + C18285) * C32886 +
                    (C18284 + C18283 + C18282) * C3448) *
                       C32691 +
                   ((C31573 * C329 + C17823 * C349 + C31563 * C330 +
                     C32553 * C350 + C31567 * C331 + C32545 * C351) *
                        C32731 +
                    (C31573 * C319 + C17823 * C334 + C31563 * C320 +
                     C32553 * C335 + C31567 * C321 + C32545 * C336) *
                        C3449 +
                    (C31573 * C134 + C17823 * C143 + C31563 * C133 +
                     C32553 * C142 + C31567 * C132 + C32545 * C141) *
                        C32886 +
                    (C31573 * C122 + C17823 * C129 + C31563 * C121 +
                     C32553 * C128 + C31567 * C120 + C32545 * C127) *
                        C3448) *
                       C15051) *
                      C32603 * C32589 * C111 +
                  (((C31567 * C121 + C32545 * C128 + C31563 * C122 +
                     C32553 * C129 + C31573 * C123 + C17823 * C130) *
                        C3448 +
                    (C31567 * C133 + C32545 * C142 + C31563 * C134 +
                     C32553 * C143 + C31573 * C135 + C17823 * C144) *
                        C32886 +
                    (C31567 * C320 + C32545 * C335 + C31563 * C319 +
                     C32553 * C334 + C31573 * C318 + C17823 * C333) *
                        C3449 +
                    (C31567 * C330 + C32545 * C350 + C31563 * C329 +
                     C32553 * C349 + C31573 * C328 + C17823 * C348) *
                        C32731) *
                       C15051 +
                   ((C31567 * C215 + C32545 * C230 + C31563 * C214 +
                     C32553 * C229 + C31573 * C213 + C17823 * C228) *
                        C3448 +
                    (C31567 * C225 + C32545 * C245 + C31563 * C224 +
                     C32553 * C244 + C31573 * C223 + C17823 * C243) *
                        C32886 +
                    (C31567 * C620 + C32545 * C625 + C31563 * C621 +
                     C32553 * C626 + C31573 * C622 + C17823 * C627) *
                        C3449 +
                    (C31567 * C630 + C32545 * C635 + C31563 * C631 +
                     C32553 * C636 + C31573 * C632 + C17823 * C637) *
                        C32731) *
                       C32691) *
                      C32603 * C32589 * C112)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((C31567 * C119 + C32545 * C126 + C31563 * C120 +
                     C32553 * C127 + C31573 * C121 + C17823 * C128) *
                        C3448 +
                    (C31567 * C131 + C32545 * C140 + C31563 * C132 +
                     C32553 * C141 + C31573 * C133 + C17823 * C142) *
                        C32886 +
                    (C19096 + C19097 + C19098) * C3449 +
                    (C19099 + C19100 + C19101) * C32731) *
                       C15051 +
                   ((C17977 + C17978 + C17979) * C3448 +
                    (C17980 + C17981 + C17982) * C32886 +
                    (C18621 + C18620 + C18619) * C3449 +
                    (C18618 + C18617 + C18616) * C32731) *
                       C32691) *
                      C315 -
                  (((C19102 + C19103 + C19104) * C32731 +
                    (C19105 + C19106 + C19107) * C3449 +
                    (C18616 + C18617 + C18618) * C32886 +
                    (C18619 + C18620 + C18621) * C3448) *
                       C32691 +
                   ((C19108 + C19109 + C19110) * C32731 +
                    (C19111 + C19112 + C19113) * C3449 +
                    (C19101 + C19100 + C19099) * C32886 +
                    (C19098 + C19097 + C19096) * C3448) *
                       C15051) *
                      C316 +
                  (((C19113 + C19112 + C19111) * C3448 +
                    (C19110 + C19109 + C19108) * C32886 +
                    (C31567 * C1966 + C32545 * C1975 + C31563 * C1965 +
                     C32553 * C1974 + C31573 * C1964 + C17823 * C1973) *
                        C3449 +
                    (C31567 * C1972 + C32545 * C1984 + C31563 * C1971 +
                     C32553 * C1983 + C31573 * C1970 + C17823 * C1982) *
                        C32731) *
                       C15051 +
                   ((C19107 + C19106 + C19105) * C3448 +
                    (C19104 + C19103 + C19102) * C32886 +
                    (C31567 * C2528 + C32545 * C2531 + C31563 * C2529 +
                     C32553 * C2532 + C31573 * C2530 + C17823 * C2533) *
                        C3449 +
                    (C31567 * C2534 + C32545 * C2537 + C31563 * C2535 +
                     C32553 * C2538 + C31573 * C2536 + C17823 * C2539) *
                        C32731) *
                       C32691) *
                      C317) *
                 C32589 * C32577) /
                    (p * q * std::sqrt(p + q));
    d2ee[18] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                 (((((C31567 * C119 + C32545 * C126 + C31563 * C120 +
                      C32553 * C127 + C31573 * C121 + C17823 * C128) *
                         C3448 +
                     (C31567 * C131 + C32545 * C140 + C31563 * C132 +
                      C32553 * C141 + C31573 * C133 + C17823 * C142) *
                         C32886 +
                     (C19096 + C19097 + C19098) * C3449 +
                     (C19099 + C19100 + C19101) * C32731) *
                        C15051 +
                    ((C17977 + C17978 + C17979) * C3448 +
                     (C17980 + C17981 + C17982) * C32886 +
                     (C18621 + C18620 + C18619) * C3449 +
                     (C18618 + C18617 + C18616) * C32731) *
                        C32691) *
                       C530 -
                   (((C19102 + C19103 + C19104) * C32731 +
                     (C19105 + C19106 + C19107) * C3449 +
                     (C18616 + C18617 + C18618) * C32886 +
                     (C18619 + C18620 + C18621) * C3448) *
                        C32691 +
                    ((C19108 + C19109 + C19110) * C32731 +
                     (C19111 + C19112 + C19113) * C3449 +
                     (C19101 + C19100 + C19099) * C32886 +
                     (C19098 + C19097 + C19096) * C3448) *
                        C15051) *
                       C531) *
                      C32589 * C442 +
                  ((((C19532 + C19533 + C19534) * C3448 +
                     (C19535 + C19536 + C19537) * C32886 +
                     (C31567 * C324 + C32545 * C339 + C31563 * C325 +
                      C32553 * C340 + C31573 * C326 + C17823 * C341) *
                         C3449 +
                     (C31567 * C344 + C32545 * C354 + C31563 * C345 +
                      C32553 * C355 + C31573 * C346 + C17823 * C356) *
                         C32731) *
                        C15051 +
                    ((C19320 + C19321 + C19322) * C3448 +
                     (C19323 + C19324 + C19325) * C32886 +
                     (C31567 * C1066 + C32545 * C1078 + C31563 * C1067 +
                      C32553 * C1079 + C31573 * C2192 + C17823 * C2193) *
                         C3449 +
                     (C31567 * C1081 + C32545 * C1093 + C31563 * C1082 +
                      C32553 * C1094 + C31573 * C2194 + C17823 * C2195) *
                         C32731) *
                        C32691) *
                       C531 -
                   (((C19325 + C19324 + C19323) * C32731 +
                     (C19322 + C19321 + C19320) * C3449 +
                     (C18287 + C18286 + C18285) * C32886 +
                     (C18284 + C18283 + C18282) * C3448) *
                        C32691 +
                    ((C19537 + C19536 + C19535) * C32731 +
                     (C19534 + C19533 + C19532) * C3449 +
                     (C31573 * C134 + C17823 * C143 + C31563 * C133 +
                      C32553 * C142 + C31567 * C132 + C32545 * C141) *
                         C32886 +
                     (C31573 * C122 + C17823 * C129 + C31563 * C121 +
                      C32553 * C128 + C31567 * C120 + C32545 * C127) *
                         C3448) *
                        C15051) *
                       C530) *
                      C32589 * C443)) /
                (p * q * std::sqrt(p + q));
    d2ee[19] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C31567 * C119 + C32545 * C126 + C31563 * C120 +
                     C32553 * C127 + C31573 * C121 + C17823 * C128) *
                        C3448 +
                    (C31567 * C131 + C32545 * C140 + C31563 * C132 +
                     C32553 * C141 + C31573 * C133 + C17823 * C142) *
                        C32886 +
                    (C31567 * C322 + C32545 * C337 + C31563 * C321 +
                     C32553 * C336 + C31573 * C320 + C17823 * C335) *
                        C3449 +
                    (C31567 * C332 + C32545 * C352 + C31563 * C331 +
                     C32553 * C351 + C31573 * C330 + C17823 * C350) *
                        C32731) *
                       C15051 +
                   ((C17977 + C17978 + C17979) * C3448 +
                    (C17980 + C17981 + C17982) * C32886 +
                    (C18621 + C18620 + C18619) * C3449 +
                    (C18618 + C18617 + C18616) * C32731) *
                       C32691) *
                      C32603 * C32589 * C110 -
                  (((C31573 * C631 + C17823 * C636 + C31563 * C630 +
                     C32553 * C635 + C31567 * C629 + C32545 * C634) *
                        C32731 +
                    (C31573 * C621 + C17823 * C626 + C31563 * C620 +
                     C32553 * C625 + C31567 * C619 + C32545 * C624) *
                        C3449 +
                    (C18287 + C18286 + C18285) * C32886 +
                    (C18284 + C18283 + C18282) * C3448) *
                       C32691 +
                   ((C31573 * C329 + C17823 * C349 + C31563 * C330 +
                     C32553 * C350 + C31567 * C331 + C32545 * C351) *
                        C32731 +
                    (C31573 * C319 + C17823 * C334 + C31563 * C320 +
                     C32553 * C335 + C31567 * C321 + C32545 * C336) *
                        C3449 +
                    (C31573 * C134 + C17823 * C143 + C31563 * C133 +
                     C32553 * C142 + C31567 * C132 + C32545 * C141) *
                        C32886 +
                    (C31573 * C122 + C17823 * C129 + C31563 * C121 +
                     C32553 * C128 + C31567 * C120 + C32545 * C127) *
                        C3448) *
                       C15051) *
                      C32603 * C32589 * C111 +
                  (((C31567 * C121 + C32545 * C128 + C31563 * C122 +
                     C32553 * C129 + C31573 * C123 + C17823 * C130) *
                        C3448 +
                    (C31567 * C133 + C32545 * C142 + C31563 * C134 +
                     C32553 * C143 + C31573 * C135 + C17823 * C144) *
                        C32886 +
                    (C31567 * C320 + C32545 * C335 + C31563 * C319 +
                     C32553 * C334 + C31573 * C318 + C17823 * C333) *
                        C3449 +
                    (C31567 * C330 + C32545 * C350 + C31563 * C329 +
                     C32553 * C349 + C31573 * C328 + C17823 * C348) *
                        C32731) *
                       C15051 +
                   ((C31567 * C215 + C32545 * C230 + C31563 * C214 +
                     C32553 * C229 + C31573 * C213 + C17823 * C228) *
                        C3448 +
                    (C31567 * C225 + C32545 * C245 + C31563 * C224 +
                     C32553 * C244 + C31573 * C223 + C17823 * C243) *
                        C32886 +
                    (C31567 * C620 + C32545 * C625 + C31563 * C621 +
                     C32553 * C626 + C31573 * C622 + C17823 * C627) *
                        C3449 +
                    (C31567 * C630 + C32545 * C635 + C31563 * C631 +
                     C32553 * C636 + C31573 * C632 + C17823 * C637) *
                        C32731) *
                       C32691) *
                      C32603 * C32589 * C112)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C31567 * C119 + C32545 * C126 + C31563 * C120 +
                     C32553 * C127 + C31573 * C121 + C17823 * C128) *
                        C3448 +
                    (C31567 * C131 + C32545 * C140 + C31563 * C132 +
                     C32553 * C141 + C31573 * C133 + C17823 * C142) *
                        C32886 +
                    (C31567 * C322 + C32545 * C337 + C31563 * C321 +
                     C32553 * C336 + C31573 * C320 + C17823 * C335) *
                        C3449 +
                    (C31567 * C332 + C32545 * C352 + C31563 * C331 +
                     C32553 * C351 + C31573 * C330 + C17823 * C350) *
                        C32731) *
                       C15051 +
                   ((C17977 + C17978 + C17979) * C3448 +
                    (C17980 + C17981 + C17982) * C32886 +
                    (C18621 + C18620 + C18619) * C3449 +
                    (C18618 + C18617 + C18616) * C32731) *
                       C32691) *
                      C32603 * C209 -
                  (((C18610 + C18611 + C18612) * C32731 +
                    (C18613 + C18614 + C18615) * C3449 +
                    (C17988 + C17987 + C17986) * C32886 +
                    (C17985 + C17984 + C17983) * C3448) *
                       C32691 +
                   ((C18616 + C18617 + C18618) * C32731 +
                    (C18619 + C18620 + C18621) * C3449 +
                    (C17982 + C17981 + C17980) * C32886 +
                    (C17979 + C17978 + C17977) * C3448) *
                       C15051) *
                      C32603 * C210 +
                  ((C17997 * C3448 + C17998 * C32886 +
                    (C18615 + C18614 + C18613) * C3449 +
                    (C18612 + C18611 + C18610) * C32731) *
                       C15051 +
                   ((C17994 + C17993 + C17992) * C3448 +
                    (C17991 + C17990 + C17989) * C32886 +
                    (C31567 * C1580 + C32545 * C1583 + C31563 * C1581 +
                     C32553 * C1584 + C31573 * C1582 + C17823 * C1585) *
                        C3449 +
                    (C31567 * C1586 + C32545 * C1589 + C31563 * C1587 +
                     C32553 * C1590 + C31573 * C1588 + C17823 * C1591) *
                        C32731) *
                       C32691) *
                      C32603 * C211) *
                 C32577) /
                    (p * q * std::sqrt(p + q));
    d2ee[20] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C15053 * C119 + C32957 * C126 + C15054 * C120 + C32950 * C127 +
              C15055 * C121 + C32937 * C128 + C15056 * C122 + C32920 * C129) *
                 C118 +
             (C15053 * C131 + C32957 * C140 + C15054 * C132 + C32950 * C141 +
              C15055 * C133 + C32937 * C142 + C15056 * C134 + C32920 * C143) *
                 C32644) *
                C15051 +
            ((C15188 + C15189 + C15190 + C15191) * C118 +
             (C15192 + C15193 + C15194 + C15195) * C32644) *
                C32691) *
               C32603 * C440 -
           (((C15196 + C15197 + C15198 + C15199) * C32644 +
             (C15200 + C15201 + C15202 + C15203) * C118) *
                C32691 +
            ((C15195 + C15194 + C15193 + C15192) * C32644 +
             (C15191 + C15190 + C15189 + C15188) * C118) *
                C15051) *
               C32603 * C441) *
              C442 +
          ((((C15448 + C15449 + C15450 + C15451) * C118 +
             (C15452 + C15453 + C15454 + C15455) * C32644) *
                C15051 +
            ((C15053 * C219 + C32957 * C234 + C15054 * C220 + C32950 * C235 +
              C15055 * C221 + C32937 * C236 + C15056 * C222 + C32920 * C237) *
                 C118 +
             (C15053 * C239 + C32957 * C249 + C15054 * C240 + C32950 * C250 +
              C15055 * C241 + C32937 * C251 + C15056 * C242 + C32920 * C252) *
                 C32644) *
                C32691) *
               C32603 * C441 -
           (((C15455 + C15454 + C15453 + C15452) * C32644 +
             (C15451 + C15450 + C15449 + C15448) * C118) *
                C32691 +
            ((C15056 * C135 + C32920 * C144 + C15055 * C134 + C32937 * C143 +
              C15054 * C133 + C32950 * C142 + C15053 * C132 + C32957 * C141) *
                 C32644 +
             (C15056 * C123 + C32920 * C130 + C15055 * C122 + C32937 * C129 +
              C15054 * C121 + C32950 * C128 + C15053 * C120 + C32957 * C127) *
                 C118) *
                C15051) *
               C32603 * C440) *
              C443)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C15843 * C119 + C15837 * C126 + C15844 * C120 + C32550 * C127) *
                 C118 +
             (C15843 * C131 + C15837 * C140 + C15844 * C132 + C32550 * C141) *
                 C32644) *
                C32958 +
            ((C15976 + C15977) * C118 + (C15978 + C15979) * C32644) * C32954 +
            C16000 * C32944 + C16001 * C32926) *
               C32603 * C440 -
           (((C15988 + C15989) * C32644 + (C15990 + C15991) * C118) * C32926 +
            ((C15987 + C15986) * C32644 + (C15985 + C15984) * C118) * C32944 +
            ((C15983 + C15982) * C32644 + (C15981 + C15980) * C118) * C32954 +
            ((C15979 + C15978) * C32644 + (C15977 + C15976) * C118) * C32958) *
               C32603 * C441) *
              C442 +
          ((((C16254 + C16255) * C118 + (C16256 + C16257) * C32644) * C32958 +
            ((C16258 + C16259) * C118 + (C16260 + C16261) * C32644) * C32954 +
            ((C16262 + C16263) * C118 + (C16264 + C16265) * C32644) * C32944 +
            ((C15843 * C871 + C15837 * C880 + C15844 * C872 + C32550 * C881) *
                 C118 +
             (C15843 * C883 + C15837 * C889 + C15844 * C884 + C32550 * C890) *
                 C32644) *
                C32926) *
               C32603 * C441 -
           (((C16265 + C16264) * C32644 + (C16263 + C16262) * C118) * C32926 +
            ((C16261 + C16260) * C32644 + (C16259 + C16258) * C118) * C32944 +
            ((C16257 + C16256) * C32644 + (C16255 + C16254) * C118) * C32954 +
            ((C15844 * C133 + C32550 * C142 + C15843 * C132 + C15837 * C141) *
                 C32644 +
             (C15844 * C121 + C32550 * C128 + C15843 * C120 + C15837 * C127) *
                 C118) *
                C32958) *
               C32603 * C440) *
              C443)) /
            (p * q * std::sqrt(p + q));
    d2ee[21] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C15053 * C119 + C32957 * C126 + C15054 * C120 + C32950 * C127 +
              C15055 * C121 + C32937 * C128 + C15056 * C122 + C32920 * C129) *
                 C118 +
             (C15053 * C131 + C32957 * C140 + C15054 * C132 + C32950 * C141 +
              C15055 * C133 + C32937 * C142 + C15056 * C134 + C32920 * C143) *
                 C32644) *
                C15051 +
            ((C15188 + C15189 + C15190 + C15191) * C118 +
             (C15192 + C15193 + C15194 + C15195) * C32644) *
                C32691) *
               C530 -
           (((C15732 + C15733 + C15734 + C15735) * C32644 +
             (C15736 + C15737 + C15738 + C15739) * C118) *
                C32691 +
            ((C15056 * C329 + C32920 * C349 + C15055 * C330 + C32937 * C350 +
              C15054 * C331 + C32950 * C351 + C15053 * C332 + C32957 * C352) *
                 C32644 +
             (C15056 * C319 + C32920 * C334 + C15055 * C320 + C32937 * C335 +
              C15054 * C321 + C32950 * C336 + C15053 * C322 + C32957 * C337) *
                 C118) *
                C15051) *
               C531) *
              C440 +
          ((((C15739 + C15738 + C15737 + C15736) * C118 +
             (C15735 + C15734 + C15733 + C15732) * C32644) *
                C15051 +
            ((C15053 * C1064 + C32957 * C1076 + C15054 * C1063 +
              C32950 * C1075 + C15055 * C1062 + C32937 * C1074 +
              C15056 * C1430 + C32920 * C1431) *
                 C118 +
             (C15053 * C1073 + C32957 * C1091 + C15054 * C1072 +
              C32950 * C1090 + C15055 * C1071 + C32937 * C1089 +
              C15056 * C1432 + C32920 * C1433) *
                 C32644) *
                C32691) *
               C531 -
           (((C15196 + C15197 + C15198 + C15199) * C32644 +
             (C15200 + C15201 + C15202 + C15203) * C118) *
                C32691 +
            ((C15195 + C15194 + C15193 + C15192) * C32644 +
             (C15191 + C15190 + C15189 + C15188) * C118) *
                C15051) *
               C530) *
              C441) *
         C32577) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C15843 * C119 + C15837 * C126 + C15844 * C120 + C32550 * C127) *
                 C118 +
             (C15843 * C131 + C15837 * C140 + C15844 * C132 + C32550 * C141) *
                 C32644) *
                C32958 +
            ((C15976 + C15977) * C118 + (C15978 + C15979) * C32644) * C32954 +
            C16000 * C32944 + C16001 * C32926) *
               C530 -
           (((C16550 + C16551) * C32644 + (C16552 + C16553) * C118) * C32926 +
            ((C16554 + C16555) * C32644 + (C16556 + C16557) * C118) * C32944 +
            ((C16558 + C16559) * C32644 + (C16560 + C16561) * C118) * C32954 +
            ((C15844 * C331 + C32550 * C351 + C15843 * C332 + C15837 * C352) *
                 C32644 +
             (C15844 * C321 + C32550 * C336 + C15843 * C322 + C15837 * C337) *
                 C118) *
                C32958) *
               C531) *
              C440 +
          ((((C16561 + C16560) * C118 + (C16559 + C16558) * C32644) * C32958 +
            ((C16557 + C16556) * C118 + (C16555 + C16554) * C32644) * C32954 +
            ((C16553 + C16552) * C118 + (C16551 + C16550) * C32644) * C32944 +
            ((C15843 * C6308 + C15837 * C6312 + C15844 * C6520 +
              C32550 * C6521) *
                 C118 +
             (C15843 * C6311 + C15837 * C6317 + C15844 * C6522 +
              C32550 * C6523) *
                 C32644) *
                C32926) *
               C531 -
           (((C15988 + C15989) * C32644 + (C15990 + C15991) * C118) * C32926 +
            ((C15987 + C15986) * C32644 + (C15985 + C15984) * C118) * C32944 +
            ((C15983 + C15982) * C32644 + (C15981 + C15980) * C118) * C32954 +
            ((C15979 + C15978) * C32644 + (C15977 + C15976) * C118) * C32958) *
               C530) *
              C441) *
         C32577) /
            (p * q * std::sqrt(p + q));
    d2ee[22] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C15053 * C119 + C32957 * C126 + C15054 * C120 + C32950 * C127 +
             C15055 * C121 + C32937 * C128 + C15056 * C122 + C32920 * C129) *
                C118 +
            (C15053 * C131 + C32957 * C140 + C15054 * C132 + C32950 * C141 +
             C15055 * C133 + C32937 * C142 + C15056 * C134 + C32920 * C143) *
                C32644) *
               C15051 +
           ((C15188 + C15189 + C15190 + C15191) * C118 +
            (C15192 + C15193 + C15194 + C15195) * C32644) *
               C32691) *
              C32603 * C209 -
          (((C15196 + C15197 + C15198 + C15199) * C32644 +
            (C15200 + C15201 + C15202 + C15203) * C118) *
               C32691 +
           ((C15195 + C15194 + C15193 + C15192) * C32644 +
            (C15191 + C15190 + C15189 + C15188) * C118) *
               C15051) *
              C32603 * C210 +
          (((C15203 + C15202 + C15201 + C15200) * C118 +
            (C15199 + C15198 + C15197 + C15196) * C32644) *
               C15051 +
           ((C15053 * C869 + C32957 * C878 + C15054 * C868 + C32950 * C877 +
             C15055 * C867 + C32937 * C876 + C15056 * C1244 + C32920 * C1245) *
                C118 +
            (C15053 * C875 + C32957 * C887 + C15054 * C874 + C32950 * C886 +
             C15055 * C873 + C32937 * C885 + C15056 * C1246 + C32920 * C1247) *
                C32644) *
               C32691) *
              C32603 * C211) *
         C32577) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C15053 * C119 + C32957 * C126 + C15054 * C120 + C32950 * C127 +
             C15055 * C121 + C32937 * C128 + C15056 * C122 + C32920 * C129) *
                C118 +
            (C15053 * C131 + C32957 * C140 + C15054 * C132 + C32950 * C141 +
             C15055 * C133 + C32937 * C142 + C15056 * C134 + C32920 * C143) *
                C32644) *
               C15051 +
           ((C15053 * C217 + C32957 * C232 + C15054 * C216 + C32950 * C231 +
             C15055 * C215 + C32937 * C230 + C15056 * C214 + C32920 * C229) *
                C118 +
            (C15053 * C227 + C32957 * C247 + C15054 * C226 + C32950 * C246 +
             C15055 * C225 + C32937 * C245 + C15056 * C224 + C32920 * C244) *
                C32644) *
               C32691) *
              C32603 * C32589 * C110 -
          (((C15056 * C223 + C32920 * C243 + C15055 * C224 + C32937 * C244 +
             C15054 * C225 + C32950 * C245 + C15053 * C226 + C32957 * C246) *
                C32644 +
            (C15056 * C213 + C32920 * C228 + C15055 * C214 + C32937 * C229 +
             C15054 * C215 + C32950 * C230 + C15053 * C216 + C32957 * C231) *
                C118) *
               C32691 +
           ((C15056 * C135 + C32920 * C144 + C15055 * C134 + C32937 * C143 +
             C15054 * C133 + C32950 * C142 + C15053 * C132 + C32957 * C141) *
                C32644 +
            (C15056 * C123 + C32920 * C130 + C15055 * C122 + C32937 * C129 +
             C15054 * C121 + C32950 * C128 + C15053 * C120 + C32957 * C127) *
                C118) *
               C15051) *
              C32603 * C32589 * C111 +
          (((C15053 * C121 + C32957 * C128 + C15054 * C122 + C32950 * C129 +
             C15055 * C123 + C32937 * C130 + C15056 * C124 + C32920 * C137) *
                C118 +
            (C15053 * C133 + C32957 * C142 + C15054 * C134 + C32950 * C143 +
             C15055 * C135 + C32937 * C144 + C15056 * C136 + C32920 * C145) *
                C32644) *
               C15051 +
           ((C15053 * C215 + C32957 * C230 + C15054 * C214 + C32950 * C229 +
             C15055 * C213 + C32937 * C228 + C15056 * C444 + C32920 * C445) *
                C118 +
            (C15053 * C225 + C32957 * C245 + C15054 * C224 + C32950 * C244 +
             C15055 * C223 + C32937 * C243 + C15056 * C446 + C32920 * C447) *
                C32644) *
               C32691) *
              C32603 * C32589 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C15053 * C119 + C32957 * C126 + C15054 * C120 + C32950 * C127 +
             C15055 * C121 + C32937 * C128 + C15056 * C122 + C32920 * C129) *
                C118 +
            (C15053 * C131 + C32957 * C140 + C15054 * C132 + C32950 * C141 +
             C15055 * C133 + C32937 * C142 + C15056 * C134 + C32920 * C143) *
                C32644) *
               C15051 +
           ((C15188 + C15189 + C15190 + C15191) * C118 +
            (C15192 + C15193 + C15194 + C15195) * C32644) *
               C32691) *
              C315 -
          (((C15056 * C631 + C32920 * C636 + C15055 * C630 + C32937 * C635 +
             C15054 * C629 + C32950 * C634 + C15053 * C628 + C32957 * C633) *
                C32644 +
            (C15056 * C621 + C32920 * C626 + C15055 * C620 + C32937 * C625 +
             C15054 * C619 + C32950 * C624 + C15053 * C618 + C32957 * C623) *
                C118) *
               C32691 +
           ((C15056 * C329 + C32920 * C349 + C15055 * C330 + C32937 * C350 +
             C15054 * C331 + C32950 * C351 + C15053 * C332 + C32957 * C352) *
                C32644 +
            (C15056 * C319 + C32920 * C334 + C15055 * C320 + C32937 * C335 +
             C15054 * C321 + C32950 * C336 + C15053 * C322 + C32957 * C337) *
                C118) *
               C15051) *
              C316 +
          (((C15053 * C323 + C32957 * C338 + C15054 * C324 + C32950 * C339 +
             C15055 * C325 + C32937 * C340 + C15056 * C326 + C32920 * C341) *
                C118 +
            (C15053 * C343 + C32957 * C353 + C15054 * C344 + C32950 * C354 +
             C15055 * C345 + C32937 * C355 + C15056 * C346 + C32920 * C356) *
                C32644) *
               C15051 +
           ((C15053 * C1065 + C32957 * C1077 + C15054 * C1066 + C32950 * C1078 +
             C15055 * C1067 + C32937 * C1079 + C15056 * C2192 +
             C32920 * C2193) *
                C118 +
            (C15053 * C1080 + C32957 * C1092 + C15054 * C1081 + C32950 * C1093 +
             C15055 * C1082 + C32937 * C1094 + C15056 * C2194 +
             C32920 * C2195) *
                C32644) *
               C32691) *
              C317) *
         C32589 * C32577) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C15843 * C119 + C15837 * C126 + C15844 * C120 + C32550 * C127) *
                C118 +
            (C15843 * C131 + C15837 * C140 + C15844 * C132 + C32550 * C141) *
                C32644) *
               C32958 +
           ((C15843 * C217 + C15837 * C232 + C15844 * C216 + C32550 * C231) *
                C118 +
            (C15843 * C227 + C15837 * C247 + C15844 * C226 + C32550 * C246) *
                C32644) *
               C32954 +
           ((C15843 * C218 + C15837 * C233 + C15844 * C219 + C32550 * C234) *
                C118 +
            (C15843 * C238 + C15837 * C248 + C15844 * C239 + C32550 * C249) *
                C32644) *
               C32944 +
           ((C15843 * C869 + C15837 * C878 + C15844 * C868 + C32550 * C877) *
                C118 +
            (C15843 * C875 + C15837 * C887 + C15844 * C874 + C32550 * C886) *
                C32644) *
               C32926) *
              C32603 * C32589 * C110 -
          (((C15844 * C873 + C32550 * C885 + C15843 * C874 + C15837 * C886) *
                C32644 +
            (C15844 * C867 + C32550 * C876 + C15843 * C868 + C15837 * C877) *
                C118) *
               C32926 +
           ((C15844 * C240 + C32550 * C250 + C15843 * C239 + C15837 * C249) *
                C32644 +
            (C15844 * C220 + C32550 * C235 + C15843 * C219 + C15837 * C234) *
                C118) *
               C32944 +
           ((C15844 * C225 + C32550 * C245 + C15843 * C226 + C15837 * C246) *
                C32644 +
            (C15844 * C215 + C32550 * C230 + C15843 * C216 + C15837 * C231) *
                C118) *
               C32954 +
           ((C15844 * C133 + C32550 * C142 + C15843 * C132 + C15837 * C141) *
                C32644 +
            (C15844 * C121 + C32550 * C128 + C15843 * C120 + C15837 * C127) *
                C118) *
               C32958) *
              C32603 * C32589 * C111 +
          (((C15843 * C121 + C15837 * C128 + C15844 * C122 + C32550 * C129) *
                C118 +
            (C15843 * C133 + C15837 * C142 + C15844 * C134 + C32550 * C143) *
                C32644) *
               C32958 +
           ((C15843 * C215 + C15837 * C230 + C15844 * C214 + C32550 * C229) *
                C118 +
            (C15843 * C225 + C15837 * C245 + C15844 * C224 + C32550 * C244) *
                C32644) *
               C32954 +
           ((C15843 * C220 + C15837 * C235 + C15844 * C221 + C32550 * C236) *
                C118 +
            (C15843 * C240 + C15837 * C250 + C15844 * C241 + C32550 * C251) *
                C32644) *
               C32944 +
           ((C15843 * C867 + C15837 * C876 + C15844 * C1244 + C32550 * C1245) *
                C118 +
            (C15843 * C873 + C15837 * C885 + C15844 * C1246 + C32550 * C1247) *
                C32644) *
               C32926) *
              C32603 * C32589 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C15843 * C119 + C15837 * C126 + C15844 * C120 + C32550 * C127) *
                C118 +
            (C15843 * C131 + C15837 * C140 + C15844 * C132 + C32550 * C141) *
                C32644) *
               C32958 +
           ((C15976 + C15977) * C118 + (C15978 + C15979) * C32644) * C32954 +
           C16000 * C32944 + C16001 * C32926) *
              C32603 * C209 -
          (((C15988 + C15989) * C32644 + (C15990 + C15991) * C118) * C32926 +
           ((C15987 + C15986) * C32644 + (C15985 + C15984) * C118) * C32944 +
           ((C15983 + C15982) * C32644 + (C15981 + C15980) * C118) * C32954 +
           ((C15979 + C15978) * C32644 + (C15977 + C15976) * C118) * C32958) *
              C32603 * C210 +
          (C16000 * C32958 + C16001 * C32954 +
           ((C15991 + C15990) * C118 + (C15989 + C15988) * C32644) * C32944 +
           ((C15843 * C6195 + C15837 * C6198 + C15844 * C6402 +
             C32550 * C6403) *
                C118 +
            (C15843 * C6197 + C15837 * C6201 + C15844 * C6404 +
             C32550 * C6405) *
                C32644) *
               C32926) *
              C32603 * C211) *
         C32577) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C15843 * C119 + C15837 * C126 + C15844 * C120 + C32550 * C127) *
                C118 +
            (C15843 * C131 + C15837 * C140 + C15844 * C132 + C32550 * C141) *
                C32644) *
               C32958 +
           ((C15976 + C15977) * C118 + (C15978 + C15979) * C32644) * C32954 +
           C16000 * C32944 + C16001 * C32926) *
              C315 -
          (((C15844 * C1587 + C32550 * C1590 + C15843 * C1586 +
             C15837 * C1589) *
                C32644 +
            (C15844 * C1581 + C32550 * C1584 + C15843 * C1580 +
             C15837 * C1583) *
                C118) *
               C32926 +
           ((C15844 * C1072 + C32550 * C1090 + C15843 * C1073 +
             C15837 * C1091) *
                C32644 +
            (C15844 * C1063 + C32550 * C1075 + C15843 * C1064 +
             C15837 * C1076) *
                C118) *
               C32944 +
           ((C15844 * C629 + C32550 * C634 + C15843 * C628 + C15837 * C633) *
                C32644 +
            (C15844 * C619 + C32550 * C624 + C15843 * C618 + C15837 * C623) *
                C118) *
               C32954 +
           ((C15844 * C331 + C32550 * C351 + C15843 * C332 + C15837 * C352) *
                C32644 +
            (C15844 * C321 + C32550 * C336 + C15843 * C322 + C15837 * C337) *
                C118) *
               C32958) *
              C316 +
          (((C15843 * C323 + C15837 * C338 + C15844 * C324 + C32550 * C339) *
                C118 +
            (C15843 * C343 + C15837 * C353 + C15844 * C344 + C32550 * C354) *
                C32644) *
               C32958 +
           ((C15843 * C1065 + C15837 * C1077 + C15844 * C1066 +
             C32550 * C1078) *
                C118 +
            (C15843 * C1080 + C15837 * C1092 + C15844 * C1081 +
             C32550 * C1093) *
                C32644) *
               C32954 +
           ((C15843 * C1068 + C15837 * C1083 + C15844 * C1069 +
             C32550 * C1084) *
                C118 +
            (C15843 * C1086 + C15837 * C1095 + C15844 * C1087 +
             C32550 * C1096) *
                C32644) *
               C32944 +
           ((C15843 * C6309 + C15837 * C6313 + C15844 * C7201 +
             C32550 * C7202) *
                C118 +
            (C15843 * C6314 + C15837 * C6318 + C15844 * C7203 +
             C32550 * C7204) *
                C32644) *
               C32926) *
              C317) *
         C32589 * C32577) /
            (p * q * std::sqrt(p + q));
    d2ee[23] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C15053 * C119 + C32957 * C126 + C15054 * C120 + C32950 * C127 +
              C15055 * C121 + C32937 * C128 + C15056 * C122 + C32920 * C129) *
                 C118 +
             (C15053 * C131 + C32957 * C140 + C15054 * C132 + C32950 * C141 +
              C15055 * C133 + C32937 * C142 + C15056 * C134 + C32920 * C143) *
                 C32644) *
                C15051 +
            ((C15188 + C15189 + C15190 + C15191) * C118 +
             (C15192 + C15193 + C15194 + C15195) * C32644) *
                C32691) *
               C530 -
           (((C15056 * C631 + C32920 * C636 + C15055 * C630 + C32937 * C635 +
              C15054 * C629 + C32950 * C634 + C15053 * C628 + C32957 * C633) *
                 C32644 +
             (C15056 * C621 + C32920 * C626 + C15055 * C620 + C32937 * C625 +
              C15054 * C619 + C32950 * C624 + C15053 * C618 + C32957 * C623) *
                 C118) *
                C32691 +
            ((C15056 * C329 + C32920 * C349 + C15055 * C330 + C32937 * C350 +
              C15054 * C331 + C32950 * C351 + C15053 * C332 + C32957 * C352) *
                 C32644 +
             (C15056 * C319 + C32920 * C334 + C15055 * C320 + C32937 * C335 +
              C15054 * C321 + C32950 * C336 + C15053 * C322 + C32957 * C337) *
                 C118) *
                C15051) *
               C531) *
              C32589 * C442 +
          ((((C15053 * C321 + C32957 * C336 + C15054 * C320 + C32950 * C335 +
              C15055 * C319 + C32937 * C334 + C15056 * C318 + C32920 * C333) *
                 C118 +
             (C15053 * C331 + C32957 * C351 + C15054 * C330 + C32950 * C350 +
              C15055 * C329 + C32937 * C349 + C15056 * C328 + C32920 * C348) *
                 C32644) *
                C15051 +
            ((C15053 * C619 + C32957 * C624 + C15054 * C620 + C32950 * C625 +
              C15055 * C621 + C32937 * C626 + C15056 * C622 + C32920 * C627) *
                 C118 +
             (C15053 * C629 + C32957 * C634 + C15054 * C630 + C32950 * C635 +
              C15055 * C631 + C32937 * C636 + C15056 * C632 + C32920 * C637) *
                 C32644) *
                C32691) *
               C531 -
           (((C15455 + C15454 + C15453 + C15452) * C32644 +
             (C15451 + C15450 + C15449 + C15448) * C118) *
                C32691 +
            ((C15056 * C135 + C32920 * C144 + C15055 * C134 + C32937 * C143 +
              C15054 * C133 + C32950 * C142 + C15053 * C132 + C32957 * C141) *
                 C32644 +
             (C15056 * C123 + C32920 * C130 + C15055 * C122 + C32937 * C129 +
              C15054 * C121 + C32950 * C128 + C15053 * C120 + C32957 * C127) *
                 C118) *
                C15051) *
               C530) *
              C32589 * C443)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C15843 * C119 + C15837 * C126 + C15844 * C120 + C32550 * C127) *
                 C118 +
             (C15843 * C131 + C15837 * C140 + C15844 * C132 + C32550 * C141) *
                 C32644) *
                C32958 +
            ((C15976 + C15977) * C118 + (C15978 + C15979) * C32644) * C32954 +
            C16000 * C32944 + C16001 * C32926) *
               C530 -
           (((C15844 * C1587 + C32550 * C1590 + C15843 * C1586 +
              C15837 * C1589) *
                 C32644 +
             (C15844 * C1581 + C32550 * C1584 + C15843 * C1580 +
              C15837 * C1583) *
                 C118) *
                C32926 +
            ((C15844 * C1072 + C32550 * C1090 + C15843 * C1073 +
              C15837 * C1091) *
                 C32644 +
             (C15844 * C1063 + C32550 * C1075 + C15843 * C1064 +
              C15837 * C1076) *
                 C118) *
                C32944 +
            ((C15844 * C629 + C32550 * C634 + C15843 * C628 + C15837 * C633) *
                 C32644 +
             (C15844 * C619 + C32550 * C624 + C15843 * C618 + C15837 * C623) *
                 C118) *
                C32954 +
            ((C15844 * C331 + C32550 * C351 + C15843 * C332 + C15837 * C352) *
                 C32644 +
             (C15844 * C321 + C32550 * C336 + C15843 * C322 + C15837 * C337) *
                 C118) *
                C32958) *
               C531) *
              C32589 * C442 +
          ((((C15843 * C321 + C15837 * C336 + C15844 * C320 + C32550 * C335) *
                 C118 +
             (C15843 * C331 + C15837 * C351 + C15844 * C330 + C32550 * C350) *
                 C32644) *
                C32958 +
            ((C15843 * C619 + C15837 * C624 + C15844 * C620 + C32550 * C625) *
                 C118 +
             (C15843 * C629 + C15837 * C634 + C15844 * C630 + C32550 * C635) *
                 C32644) *
                C32954 +
            ((C15843 * C1063 + C15837 * C1075 + C15844 * C1062 +
              C32550 * C1074) *
                 C118 +
             (C15843 * C1072 + C15837 * C1090 + C15844 * C1071 +
              C32550 * C1089) *
                 C32644) *
                C32944 +
            ((C15843 * C1581 + C15837 * C1584 + C15844 * C1582 +
              C32550 * C1585) *
                 C118 +
             (C15843 * C1587 + C15837 * C1590 + C15844 * C1588 +
              C32550 * C1591) *
                 C32644) *
                C32926) *
               C531 -
           (((C16265 + C16264) * C32644 + (C16263 + C16262) * C118) * C32926 +
            ((C16261 + C16260) * C32644 + (C16259 + C16258) * C118) * C32944 +
            ((C16257 + C16256) * C32644 + (C16255 + C16254) * C118) * C32954 +
            ((C15844 * C133 + C32550 * C142 + C15843 * C132 + C15837 * C141) *
                 C32644 +
             (C15844 * C121 + C32550 * C128 + C15843 * C120 + C15837 * C127) *
                 C118) *
                C32958) *
               C530) *
              C32589 * C443)) /
            (p * q * std::sqrt(p + q));
    d2ee[24] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C15053 * C119 + C32957 * C126 + C15054 * C120 + C32950 * C127 +
             C15055 * C121 + C32937 * C128 + C15056 * C122 + C32920 * C129) *
                C118 +
            (C15053 * C131 + C32957 * C140 + C15054 * C132 + C32950 * C141 +
             C15055 * C133 + C32937 * C142 + C15056 * C134 + C32920 * C143) *
                C32644) *
               C15051 +
           ((C15053 * C217 + C32957 * C232 + C15054 * C216 + C32950 * C231 +
             C15055 * C215 + C32937 * C230 + C15056 * C214 + C32920 * C229) *
                C118 +
            (C15053 * C227 + C32957 * C247 + C15054 * C226 + C32950 * C246 +
             C15055 * C225 + C32937 * C245 + C15056 * C224 + C32920 * C244) *
                C32644) *
               C32691) *
              C32603 * C32589 * C110 -
          (((C15056 * C223 + C32920 * C243 + C15055 * C224 + C32937 * C244 +
             C15054 * C225 + C32950 * C245 + C15053 * C226 + C32957 * C246) *
                C32644 +
            (C15056 * C213 + C32920 * C228 + C15055 * C214 + C32937 * C229 +
             C15054 * C215 + C32950 * C230 + C15053 * C216 + C32957 * C231) *
                C118) *
               C32691 +
           ((C15056 * C135 + C32920 * C144 + C15055 * C134 + C32937 * C143 +
             C15054 * C133 + C32950 * C142 + C15053 * C132 + C32957 * C141) *
                C32644 +
            (C15056 * C123 + C32920 * C130 + C15055 * C122 + C32937 * C129 +
             C15054 * C121 + C32950 * C128 + C15053 * C120 + C32957 * C127) *
                C118) *
               C15051) *
              C32603 * C32589 * C111 +
          (((C15053 * C121 + C32957 * C128 + C15054 * C122 + C32950 * C129 +
             C15055 * C123 + C32937 * C130 + C15056 * C124 + C32920 * C137) *
                C118 +
            (C15053 * C133 + C32957 * C142 + C15054 * C134 + C32950 * C143 +
             C15055 * C135 + C32937 * C144 + C15056 * C136 + C32920 * C145) *
                C32644) *
               C15051 +
           ((C15053 * C215 + C32957 * C230 + C15054 * C214 + C32950 * C229 +
             C15055 * C213 + C32937 * C228 + C15056 * C444 + C32920 * C445) *
                C118 +
            (C15053 * C225 + C32957 * C245 + C15054 * C224 + C32950 * C244 +
             C15055 * C223 + C32937 * C243 + C15056 * C446 + C32920 * C447) *
                C32644) *
               C32691) *
              C32603 * C32589 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C15053 * C119 + C32957 * C126 + C15054 * C120 + C32950 * C127 +
             C15055 * C121 + C32937 * C128 + C15056 * C122 + C32920 * C129) *
                C118 +
            (C15053 * C131 + C32957 * C140 + C15054 * C132 + C32950 * C141 +
             C15055 * C133 + C32937 * C142 + C15056 * C134 + C32920 * C143) *
                C32644) *
               C15051 +
           ((C15188 + C15189 + C15190 + C15191) * C118 +
            (C15192 + C15193 + C15194 + C15195) * C32644) *
               C32691) *
              C32603 * C209 -
          (((C15196 + C15197 + C15198 + C15199) * C32644 +
            (C15200 + C15201 + C15202 + C15203) * C118) *
               C32691 +
           ((C15195 + C15194 + C15193 + C15192) * C32644 +
            (C15191 + C15190 + C15189 + C15188) * C118) *
               C15051) *
              C32603 * C210 +
          (((C15203 + C15202 + C15201 + C15200) * C118 +
            (C15199 + C15198 + C15197 + C15196) * C32644) *
               C15051 +
           ((C15053 * C869 + C32957 * C878 + C15054 * C868 + C32950 * C877 +
             C15055 * C867 + C32937 * C876 + C15056 * C1244 + C32920 * C1245) *
                C118 +
            (C15053 * C875 + C32957 * C887 + C15054 * C874 + C32950 * C886 +
             C15055 * C873 + C32937 * C885 + C15056 * C1246 + C32920 * C1247) *
                C32644) *
               C32691) *
              C32603 * C211) *
         C32577) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C15843 * C119 + C15837 * C126 + C15844 * C120 + C32550 * C127) *
                C118 +
            (C15843 * C131 + C15837 * C140 + C15844 * C132 + C32550 * C141) *
                C32644) *
               C32958 +
           ((C15843 * C217 + C15837 * C232 + C15844 * C216 + C32550 * C231) *
                C118 +
            (C15843 * C227 + C15837 * C247 + C15844 * C226 + C32550 * C246) *
                C32644) *
               C32954 +
           ((C15843 * C218 + C15837 * C233 + C15844 * C219 + C32550 * C234) *
                C118 +
            (C15843 * C238 + C15837 * C248 + C15844 * C239 + C32550 * C249) *
                C32644) *
               C32944 +
           ((C15843 * C869 + C15837 * C878 + C15844 * C868 + C32550 * C877) *
                C118 +
            (C15843 * C875 + C15837 * C887 + C15844 * C874 + C32550 * C886) *
                C32644) *
               C32926) *
              C32603 * C32589 * C110 -
          (((C15844 * C873 + C32550 * C885 + C15843 * C874 + C15837 * C886) *
                C32644 +
            (C15844 * C867 + C32550 * C876 + C15843 * C868 + C15837 * C877) *
                C118) *
               C32926 +
           ((C15844 * C240 + C32550 * C250 + C15843 * C239 + C15837 * C249) *
                C32644 +
            (C15844 * C220 + C32550 * C235 + C15843 * C219 + C15837 * C234) *
                C118) *
               C32944 +
           ((C15844 * C225 + C32550 * C245 + C15843 * C226 + C15837 * C246) *
                C32644 +
            (C15844 * C215 + C32550 * C230 + C15843 * C216 + C15837 * C231) *
                C118) *
               C32954 +
           ((C15844 * C133 + C32550 * C142 + C15843 * C132 + C15837 * C141) *
                C32644 +
            (C15844 * C121 + C32550 * C128 + C15843 * C120 + C15837 * C127) *
                C118) *
               C32958) *
              C32603 * C32589 * C111 +
          (((C15843 * C121 + C15837 * C128 + C15844 * C122 + C32550 * C129) *
                C118 +
            (C15843 * C133 + C15837 * C142 + C15844 * C134 + C32550 * C143) *
                C32644) *
               C32958 +
           ((C15843 * C215 + C15837 * C230 + C15844 * C214 + C32550 * C229) *
                C118 +
            (C15843 * C225 + C15837 * C245 + C15844 * C224 + C32550 * C244) *
                C32644) *
               C32954 +
           ((C15843 * C220 + C15837 * C235 + C15844 * C221 + C32550 * C236) *
                C118 +
            (C15843 * C240 + C15837 * C250 + C15844 * C241 + C32550 * C251) *
                C32644) *
               C32944 +
           ((C15843 * C867 + C15837 * C876 + C15844 * C1244 + C32550 * C1245) *
                C118 +
            (C15843 * C873 + C15837 * C885 + C15844 * C1246 + C32550 * C1247) *
                C32644) *
               C32926) *
              C32603 * C32589 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C15843 * C119 + C15837 * C126 + C15844 * C120 + C32550 * C127) *
                C118 +
            (C15843 * C131 + C15837 * C140 + C15844 * C132 + C32550 * C141) *
                C32644) *
               C32958 +
           ((C15976 + C15977) * C118 + (C15978 + C15979) * C32644) * C32954 +
           C16000 * C32944 + C16001 * C32926) *
              C32603 * C209 -
          (((C15988 + C15989) * C32644 + (C15990 + C15991) * C118) * C32926 +
           ((C15987 + C15986) * C32644 + (C15985 + C15984) * C118) * C32944 +
           ((C15983 + C15982) * C32644 + (C15981 + C15980) * C118) * C32954 +
           ((C15979 + C15978) * C32644 + (C15977 + C15976) * C118) * C32958) *
              C32603 * C210 +
          (C16000 * C32958 + C16001 * C32954 +
           ((C15991 + C15990) * C118 + (C15989 + C15988) * C32644) * C32944 +
           ((C15843 * C6195 + C15837 * C6198 + C15844 * C6402 +
             C32550 * C6403) *
                C118 +
            (C15843 * C6197 + C15837 * C6201 + C15844 * C6404 +
             C32550 * C6405) *
                C32644) *
               C32926) *
              C32603 * C211) *
         C32577) /
            (p * q * std::sqrt(p + q));
    d2ee[25] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C31557 * C119 + C32866 * C126 + C31538 * C120 + C32550 * C127) *
                 C20882 +
             (C31557 * C131 + C32866 * C140 + C31538 * C132 + C32550 * C141) *
                 C20880 +
             (C8867 + C8868) * C20883 + (C8869 + C8870) * C32731) *
                C32687 +
            ((C7802 + C7803) * C20882 + (C7804 + C7805) * C20880 +
             C9501 * C20883 + C9502 * C32731) *
                C32694 +
            C28932 * C17826) *
               C32603 * C440 -
           (((C8376 + C8377) * C32731 + (C8378 + C8379) * C20883 +
             (C7813 + C7812) * C20880 + (C7811 + C7810) * C20882) *
                C17826 +
            (C9503 * C32731 + C9504 * C20883 + (C7809 + C7808) * C20880 +
             (C7807 + C7806) * C20882) *
                C32694 +
            (C9505 * C32731 + C9506 * C20883 + (C7805 + C7804) * C20880 +
             (C7803 + C7802) * C20882) *
                C32687) *
               C32603 * C441) *
              C442 +
          ((((C8080 + C8081) * C20882 + (C8082 + C8083) * C20880 +
             (C9093 + C9094) * C20883 + (C9095 + C9096) * C32731) *
                C32687 +
            ((C8084 + C8085) * C20882 + (C8086 + C8087) * C20880 +
             (C9097 + C9098) * C20883 + (C9099 + C9100) * C32731) *
                C32694 +
            ((C8088 + C8089) * C20882 + (C8090 + C8091) * C20880 +
             (C31557 * C1581 + C32866 * C1584 + C31538 * C1582 +
              C32550 * C1585) *
                 C20883 +
             (C31557 * C1587 + C32866 * C1590 + C31538 * C1588 +
              C32550 * C1591) *
                 C32731) *
                C17826) *
               C32603 * C441 -
           (((C9100 + C9099) * C32731 + (C9098 + C9097) * C20883 +
             (C8087 + C8086) * C20880 + (C8085 + C8084) * C20882) *
                C17826 +
            ((C9096 + C9095) * C32731 + (C9094 + C9093) * C20883 +
             (C8083 + C8082) * C20880 + (C8081 + C8080) * C20882) *
                C32694 +
            ((C9306 + C9305) * C32731 + (C9304 + C9303) * C20883 +
             (C31538 * C133 + C32550 * C142 + C31557 * C132 + C32866 * C141) *
                 C20880 +
             (C31538 * C121 + C32550 * C128 + C31557 * C120 + C32866 * C127) *
                 C20882) *
                C32687) *
               C32603 * C440) *
              C443)) /
        (p * q * std::sqrt(p + q));
    d2ee[26] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C31557 * C119 + C32866 * C126 + C31538 * C120 + C32550 * C127) *
                 C20882 +
             (C31557 * C131 + C32866 * C140 + C31538 * C132 + C32550 * C141) *
                 C20880 +
             (C8867 + C8868) * C20883 + (C8869 + C8870) * C32731) *
                C32687 +
            ((C7802 + C7803) * C20882 + (C7804 + C7805) * C20880 +
             C9501 * C20883 + C9502 * C32731) *
                C32694 +
            C28932 * C17826) *
               C530 -
           (((C8871 + C8872) * C32731 + (C8873 + C8874) * C20883 +
             C9503 * C20880 + C9504 * C20882) *
                C17826 +
            (C13508 * C32731 + C13509 * C20883 + C9505 * C20880 +
             C9506 * C20882) *
                C32694 +
            ((C8879 + C8880) * C32731 + (C8881 + C8882) * C20883 +
             (C8870 + C8869) * C20880 + (C8868 + C8867) * C20882) *
                C32687) *
               C531) *
              C440 +
          (((C9501 * C20882 + C9502 * C20880 + C12876 * C20883 +
             C12877 * C32731) *
                C32687 +
            (C8682 * C20882 + C8683 * C20880 + (C8874 + C8873) * C20883 +
             (C8872 + C8871) * C32731) *
                C32694 +
            ((C8379 + C8378) * C20882 + (C8377 + C8376) * C20880 +
             (C31557 * C6309 + C32866 * C6313 + C31538 * C7201 +
              C32550 * C7202) *
                 C20883 +
             (C31557 * C6314 + C32866 * C6318 + C31538 * C7203 +
              C32550 * C7204) *
                 C32731) *
                C17826) *
               C531 -
           (((C8376 + C8377) * C32731 + (C8378 + C8379) * C20883 +
             (C7813 + C7812) * C20880 + (C7811 + C7810) * C20882) *
                C17826 +
            (C9503 * C32731 + C9504 * C20883 + (C7809 + C7808) * C20880 +
             (C7807 + C7806) * C20882) *
                C32694 +
            (C9505 * C32731 + C9506 * C20883 + (C7805 + C7804) * C20880 +
             (C7803 + C7802) * C20882) *
                C32687) *
               C530) *
              C441) *
         C32577) /
        (p * q * std::sqrt(p + q));
    d2ee[27] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C31557 * C119 + C32866 * C126 + C31538 * C120 + C32550 * C127) *
                C20882 +
            (C31557 * C131 + C32866 * C140 + C31538 * C132 + C32550 * C141) *
                C20880 +
            (C8867 + C8868) * C20883 + (C8869 + C8870) * C32731) *
               C32687 +
           ((C7802 + C7803) * C20882 + (C7804 + C7805) * C20880 +
            C9501 * C20883 + C9502 * C32731) *
               C32694 +
           C28932 * C17826) *
              C32603 * C209 -
          (((C8376 + C8377) * C32731 + (C8378 + C8379) * C20883 +
            (C7813 + C7812) * C20880 + (C7811 + C7810) * C20882) *
               C17826 +
           (C9503 * C32731 + C9504 * C20883 + (C7809 + C7808) * C20880 +
            (C7807 + C7806) * C20882) *
               C32694 +
           (C9505 * C32731 + C9506 * C20883 + (C7805 + C7804) * C20880 +
            (C7803 + C7802) * C20882) *
               C32687) *
              C32603 * C210 +
          (C28932 * C32687 +
           (C7820 * C20882 + C7821 * C20880 + (C8379 + C8378) * C20883 +
            (C8377 + C8376) * C32731) *
               C32694 +
           ((C7817 + C7816) * C20882 + (C7815 + C7814) * C20880 +
            (C31557 * C6308 + C32866 * C6312 + C31538 * C6520 +
             C32550 * C6521) *
                C20883 +
            (C31557 * C6311 + C32866 * C6317 + C31538 * C6522 +
             C32550 * C6523) *
                C32731) *
               C17826) *
              C32603 * C211) *
         C32577) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C31557 * C119 + C32866 * C126 + C31538 * C120 + C32550 * C127) *
                C20882 +
            (C31557 * C131 + C32866 * C140 + C31538 * C132 + C32550 * C141) *
                C20880 +
            (C8867 + C8868) * C20883 + (C8869 + C8870) * C32731) *
               C32687 +
           ((C7802 + C7803) * C20882 + (C7804 + C7805) * C20880 +
            C9501 * C20883 + C9502 * C32731) *
               C32694 +
           (C7818 * C20882 + C7819 * C20880 + C8682 * C20883 + C8683 * C32731) *
               C17826) *
              C32603 * C32589 * C110 -
          (((C9100 + C9099) * C32731 + (C9098 + C9097) * C20883 +
            (C8087 + C8086) * C20880 + (C8085 + C8084) * C20882) *
               C17826 +
           ((C9096 + C9095) * C32731 + (C9094 + C9093) * C20883 +
            (C8083 + C8082) * C20880 + (C8081 + C8080) * C20882) *
               C32694 +
           ((C9306 + C9305) * C32731 + (C9304 + C9303) * C20883 +
            (C31538 * C133 + C32550 * C142 + C31557 * C132 + C32866 * C141) *
                C20880 +
            (C31538 * C121 + C32550 * C128 + C31557 * C120 + C32866 * C127) *
                C20882) *
               C32687) *
              C32603 * C32589 * C111 +
          (((C31557 * C121 + C32866 * C128 + C31538 * C122 + C32550 * C129) *
                C20882 +
            (C31557 * C133 + C32866 * C142 + C31538 * C134 + C32550 * C143) *
                C20880 +
            (C31557 * C320 + C32866 * C335 + C31538 * C319 + C32550 * C334) *
                C20883 +
            (C31557 * C330 + C32866 * C350 + C31538 * C329 + C32550 * C349) *
                C32731) *
               C32687 +
           ((C31557 * C215 + C32866 * C230 + C31538 * C214 + C32550 * C229) *
                C20882 +
            (C31557 * C225 + C32866 * C245 + C31538 * C224 + C32550 * C244) *
                C20880 +
            (C31557 * C620 + C32866 * C625 + C31538 * C621 + C32550 * C626) *
                C20883 +
            (C31557 * C630 + C32866 * C635 + C31538 * C631 + C32550 * C636) *
                C32731) *
               C32694 +
           ((C31557 * C220 + C32866 * C235 + C31538 * C221 + C32550 * C236) *
                C20882 +
            (C31557 * C240 + C32866 * C250 + C31538 * C241 + C32550 * C251) *
                C20880 +
            (C31557 * C1062 + C32866 * C1074 + C31538 * C1430 +
             C32550 * C1431) *
                C20883 +
            (C31557 * C1071 + C32866 * C1089 + C31538 * C1432 +
             C32550 * C1433) *
                C32731) *
               C17826) *
              C32603 * C32589 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C31557 * C119 + C32866 * C126 + C31538 * C120 + C32550 * C127) *
                C20882 +
            (C31557 * C131 + C32866 * C140 + C31538 * C132 + C32550 * C141) *
                C20880 +
            (C8867 + C8868) * C20883 + (C8869 + C8870) * C32731) *
               C32687 +
           ((C7802 + C7803) * C20882 + (C7804 + C7805) * C20880 +
            C9501 * C20883 + C9502 * C32731) *
               C32694 +
           C28932 * C17826) *
              C315 -
          (((C8871 + C8872) * C32731 + (C8873 + C8874) * C20883 +
            C9503 * C20880 + C9504 * C20882) *
               C17826 +
           (C13508 * C32731 + C13509 * C20883 + C9505 * C20880 +
            C9506 * C20882) *
               C32694 +
           ((C8879 + C8880) * C32731 + (C8881 + C8882) * C20883 +
            (C8870 + C8869) * C20880 + (C8868 + C8867) * C20882) *
               C32687) *
              C316 +
          ((C12874 * C20882 + C12875 * C20880 + C13812 * C20883 +
            C13813 * C32731) *
               C32687 +
           (C12876 * C20882 + C12877 * C20880 + (C12897 + C12896) * C20883 +
            (C12895 + C12894) * C32731) *
               C32694 +
           ((C8874 + C8873) * C20882 + (C8872 + C8871) * C20880 +
            (C31557 * C7013 + C32866 * C7017 + C31538 * C7387 +
             C32550 * C7388) *
                C20883 +
            (C31557 * C7016 + C32866 * C7022 + C31538 * C7389 +
             C32550 * C7390) *
                C32731) *
               C17826) *
              C317) *
         C32589 * C32577) /
            (p * q * std::sqrt(p + q));
    d2ee[28] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C31557 * C119 + C32866 * C126 + C31538 * C120 + C32550 * C127) *
                 C20882 +
             (C31557 * C131 + C32866 * C140 + C31538 * C132 + C32550 * C141) *
                 C20880 +
             (C8867 + C8868) * C20883 + (C8869 + C8870) * C32731) *
                C32687 +
            ((C7802 + C7803) * C20882 + (C7804 + C7805) * C20880 +
             C9501 * C20883 + C9502 * C32731) *
                C32694 +
            C28932 * C17826) *
               C530 -
           (((C8871 + C8872) * C32731 + (C8873 + C8874) * C20883 +
             C9503 * C20880 + C9504 * C20882) *
                C17826 +
            (C13508 * C32731 + C13509 * C20883 + C9505 * C20880 +
             C9506 * C20882) *
                C32694 +
            ((C8879 + C8880) * C32731 + (C8881 + C8882) * C20883 +
             (C8870 + C8869) * C20880 + (C8868 + C8867) * C20882) *
                C32687) *
               C531) *
              C32589 * C442 +
          ((((C9303 + C9304) * C20882 + (C9305 + C9306) * C20880 +
             (C13310 + C13311) * C20883 + (C13312 + C13313) * C32731) *
                C32687 +
            ((C9093 + C9094) * C20882 + (C9095 + C9096) * C20880 +
             (C13104 + C13105) * C20883 + (C13106 + C13107) * C32731) *
                C32694 +
            ((C9097 + C9098) * C20882 + (C9099 + C9100) * C20880 +
             (C31557 * C1069 + C32866 * C1084 + C31538 * C1070 +
              C32550 * C1085) *
                 C20883 +
             (C31557 * C1087 + C32866 * C1096 + C31538 * C1088 +
              C32550 * C1097) *
                 C32731) *
                C17826) *
               C531 -
           (((C9100 + C9099) * C32731 + (C9098 + C9097) * C20883 +
             (C8087 + C8086) * C20880 + (C8085 + C8084) * C20882) *
                C17826 +
            ((C9096 + C9095) * C32731 + (C9094 + C9093) * C20883 +
             (C8083 + C8082) * C20880 + (C8081 + C8080) * C20882) *
                C32694 +
            ((C9306 + C9305) * C32731 + (C9304 + C9303) * C20883 +
             (C31538 * C133 + C32550 * C142 + C31557 * C132 + C32866 * C141) *
                 C20880 +
             (C31538 * C121 + C32550 * C128 + C31557 * C120 + C32866 * C127) *
                 C20882) *
                C32687) *
               C530) *
              C32589 * C443)) /
        (p * q * std::sqrt(p + q));
    d2ee[29] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C31557 * C119 + C32866 * C126 + C31538 * C120 + C32550 * C127) *
                C20882 +
            (C31557 * C131 + C32866 * C140 + C31538 * C132 + C32550 * C141) *
                C20880 +
            (C8867 + C8868) * C20883 + (C8869 + C8870) * C32731) *
               C32687 +
           ((C7802 + C7803) * C20882 + (C7804 + C7805) * C20880 +
            C9501 * C20883 + C9502 * C32731) *
               C32694 +
           (C7818 * C20882 + C7819 * C20880 + C8682 * C20883 + C8683 * C32731) *
               C17826) *
              C32603 * C32589 * C110 -
          (((C9100 + C9099) * C32731 + (C9098 + C9097) * C20883 +
            (C8087 + C8086) * C20880 + (C8085 + C8084) * C20882) *
               C17826 +
           ((C9096 + C9095) * C32731 + (C9094 + C9093) * C20883 +
            (C8083 + C8082) * C20880 + (C8081 + C8080) * C20882) *
               C32694 +
           ((C9306 + C9305) * C32731 + (C9304 + C9303) * C20883 +
            (C31538 * C133 + C32550 * C142 + C31557 * C132 + C32866 * C141) *
                C20880 +
            (C31538 * C121 + C32550 * C128 + C31557 * C120 + C32866 * C127) *
                C20882) *
               C32687) *
              C32603 * C32589 * C111 +
          (((C31557 * C121 + C32866 * C128 + C31538 * C122 + C32550 * C129) *
                C20882 +
            (C31557 * C133 + C32866 * C142 + C31538 * C134 + C32550 * C143) *
                C20880 +
            (C31557 * C320 + C32866 * C335 + C31538 * C319 + C32550 * C334) *
                C20883 +
            (C31557 * C330 + C32866 * C350 + C31538 * C329 + C32550 * C349) *
                C32731) *
               C32687 +
           ((C31557 * C215 + C32866 * C230 + C31538 * C214 + C32550 * C229) *
                C20882 +
            (C31557 * C225 + C32866 * C245 + C31538 * C224 + C32550 * C244) *
                C20880 +
            (C31557 * C620 + C32866 * C625 + C31538 * C621 + C32550 * C626) *
                C20883 +
            (C31557 * C630 + C32866 * C635 + C31538 * C631 + C32550 * C636) *
                C32731) *
               C32694 +
           ((C31557 * C220 + C32866 * C235 + C31538 * C221 + C32550 * C236) *
                C20882 +
            (C31557 * C240 + C32866 * C250 + C31538 * C241 + C32550 * C251) *
                C20880 +
            (C31557 * C1062 + C32866 * C1074 + C31538 * C1430 +
             C32550 * C1431) *
                C20883 +
            (C31557 * C1071 + C32866 * C1089 + C31538 * C1432 +
             C32550 * C1433) *
                C32731) *
               C17826) *
              C32603 * C32589 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C31557 * C119 + C32866 * C126 + C31538 * C120 + C32550 * C127) *
                C20882 +
            (C31557 * C131 + C32866 * C140 + C31538 * C132 + C32550 * C141) *
                C20880 +
            (C8867 + C8868) * C20883 + (C8869 + C8870) * C32731) *
               C32687 +
           ((C7802 + C7803) * C20882 + (C7804 + C7805) * C20880 +
            C9501 * C20883 + C9502 * C32731) *
               C32694 +
           C28932 * C17826) *
              C32603 * C209 -
          (((C8376 + C8377) * C32731 + (C8378 + C8379) * C20883 +
            (C7813 + C7812) * C20880 + (C7811 + C7810) * C20882) *
               C17826 +
           (C9503 * C32731 + C9504 * C20883 + (C7809 + C7808) * C20880 +
            (C7807 + C7806) * C20882) *
               C32694 +
           (C9505 * C32731 + C9506 * C20883 + (C7805 + C7804) * C20880 +
            (C7803 + C7802) * C20882) *
               C32687) *
              C32603 * C210 +
          (C28932 * C32687 +
           (C7820 * C20882 + C7821 * C20880 + (C8379 + C8378) * C20883 +
            (C8377 + C8376) * C32731) *
               C32694 +
           ((C7817 + C7816) * C20882 + (C7815 + C7814) * C20880 +
            (C31557 * C6308 + C32866 * C6312 + C31538 * C6520 +
             C32550 * C6521) *
                C20883 +
            (C31557 * C6311 + C32866 * C6317 + C31538 * C6522 +
             C32550 * C6523) *
                C32731) *
               C17826) *
              C32603 * C211) *
         C32577) /
            (p * q * std::sqrt(p + q));
    d2ee[30] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C6132 * C119 + C32540 * C126) * C31694 +
             (C6132 * C131 + C32540 * C140) * C32727 + C7046 * C31686 +
             C7047 * C32734 + C7048 * C31700 + C7049 * C24419) *
                C32687 +
            (C30901 + C30902 + C30903 + C30904 + C30905 + C30906) * C32694 +
            C30923 * C17826) *
               C32603 * C440 -
           ((C30913 + C30914 + C30915 + C30916 + C30917 + C30918) * C17826 +
            (C30912 + C30911 + C30910 + C30909 + C30908 + C30907) * C32694 +
            (C30906 + C30905 + C30904 + C30903 + C30902 + C30901) * C32687) *
               C32603 * C441) *
              C442 +
          (((C31180 + C31181 + C31182 + C31183 + C31184 + C31185) * C32687 +
            (C31186 + C31187 + C31188 + C31189 + C31190 + C31191) * C32694 +
            (C6427 * C31694 + C6428 * C32727 + C9967 * C31686 + C9968 * C32734 +
             (C6132 * C7201 + C32540 * C7202) * C31700 +
             (C6132 * C7203 + C32540 * C7204) * C24419) *
                C17826) *
               C32603 * C441 -
           ((C31191 + C31190 + C31189 + C31188 + C31187 + C31186) * C17826 +
            (C31185 + C31184 + C31183 + C31182 + C31181 + C31180) * C32694 +
            (C7403 * C24419 + C7402 * C31700 + C7401 * C32734 + C7400 * C31686 +
             (C6132 * C132 + C32540 * C141) * C32727 +
             (C6132 * C120 + C32540 * C127) * C31694) *
                C32687) *
               C32603 * C440) *
              C443)) /
        (p * q * std::sqrt(p + q));
    d2ee[31] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C6132 * C119 + C32540 * C126) * C31694 +
             (C6132 * C131 + C32540 * C140) * C32727 + C7046 * C31686 +
             C7047 * C32734 + C7048 * C31700 + C7049 * C24419) *
                C32687 +
            (C30901 + C30902 + C30903 + C30904 + C30905 + C30906) * C32694 +
            C30923 * C17826) *
               C530 -
           ((C31484 + C31485 + C31486 + C31487 + C31488 + C31489) * C17826 +
            (C31490 + C31491 + C31492 + C31493 + C31494 + C31495) * C32694 +
            (C7054 * C24419 + C7055 * C31700 + C7049 * C32734 + C7048 * C31686 +
             C7047 * C32727 + C7046 * C31694) *
                C32687) *
               C531) *
              C440 +
          (((C31495 + C31494 + C31493 + C31492 + C31491 + C31490) * C32687 +
            (C31489 + C31488 + C31487 + C31486 + C31485 + C31484) * C32694 +
            (C6630 * C31694 + C6629 * C32727 + C6893 * C31686 + C6892 * C32734 +
             (C6132 * C7549 + C32540 * C7550) * C31700 +
             (C6132 * C7551 + C32540 * C7552) * C24419) *
                C17826) *
               C531 -
           ((C30913 + C30914 + C30915 + C30916 + C30917 + C30918) * C17826 +
            (C30912 + C30911 + C30910 + C30909 + C30908 + C30907) * C32694 +
            (C30906 + C30905 + C30904 + C30903 + C30902 + C30901) * C32687) *
               C530) *
              C441) *
         C32577) /
        (p * q * std::sqrt(p + q));
    d2ee[32] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C6132 * C119 + C32540 * C126) * C31694 +
            (C6132 * C131 + C32540 * C140) * C32727 + C7046 * C31686 +
            C7047 * C32734 + C7048 * C31700 + C7049 * C24419) *
               C32687 +
           (C30901 + C30902 + C30903 + C30904 + C30905 + C30906) * C32694 +
           C30923 * C17826) *
              C32603 * C209 -
          ((C30913 + C30914 + C30915 + C30916 + C30917 + C30918) * C17826 +
           (C30912 + C30911 + C30910 + C30909 + C30908 + C30907) * C32694 +
           (C30906 + C30905 + C30904 + C30903 + C30902 + C30901) * C32687) *
              C32603 * C210 +
          (C30923 * C32687 +
           (C30918 + C30917 + C30916 + C30915 + C30914 + C30913) * C32694 +
           (C6230 * C31694 + C6231 * C32727 + C6628 * C31686 + C6627 * C32734 +
            (C6132 * C6310 + C32540 * C6315) * C31700 +
            (C6132 * C6316 + C32540 * C6319) * C24419) *
               C17826) *
              C32603 * C211) *
         C32577) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C6132 * C119 + C32540 * C126) * C31694 +
            (C6132 * C131 + C32540 * C140) * C32727 + C7046 * C31686 +
            C7047 * C32734 + C7048 * C31700 + C7049 * C24419) *
               C32687 +
           (C6224 * C31694 + C6225 * C32727 + C6634 * C31686 + C6633 * C32734 +
            C6887 * C31700 + C6888 * C24419) *
               C32694 +
           (C6226 * C31694 + C6227 * C32727 + C6632 * C31686 + C6631 * C32734 +
            C6890 * C31700 + C6891 * C24419) *
               C17826) *
              C32603 * C32589 * C110 -
          ((C7233 * C24419 + C7232 * C31700 + C7231 * C32734 + C7230 * C31686 +
            C6426 * C32727 + C6425 * C31694) *
               C17826 +
           (C7229 * C24419 + C7228 * C31700 + C7227 * C32734 + C7226 * C31686 +
            C6424 * C32727 + C6423 * C31694) *
               C32694 +
           (C7403 * C24419 + C7402 * C31700 + C7401 * C32734 + C7400 * C31686 +
            (C6132 * C132 + C32540 * C141) * C32727 +
            (C6132 * C120 + C32540 * C127) * C31694) *
               C32687) *
              C32603 * C32589 * C111 +
          (((C6132 * C121 + C32540 * C128) * C31694 +
            (C6132 * C133 + C32540 * C142) * C32727 +
            (C6132 * C320 + C32540 * C335) * C31686 +
            (C6132 * C330 + C32540 * C350) * C32734 +
            (C6132 * C325 + C32540 * C340) * C31700 +
            (C6132 * C345 + C32540 * C355) * C24419) *
               C32687 +
           ((C6132 * C215 + C32540 * C230) * C31694 +
            (C6132 * C225 + C32540 * C245) * C32727 +
            (C6132 * C620 + C32540 * C625) * C31686 +
            (C6132 * C630 + C32540 * C635) * C32734 +
            (C6132 * C1067 + C32540 * C1079) * C31700 +
            (C6132 * C1082 + C32540 * C1094) * C24419) *
               C32694 +
           ((C6132 * C220 + C32540 * C235) * C31694 +
            (C6132 * C240 + C32540 * C250) * C32727 +
            (C6132 * C1062 + C32540 * C1074) * C31686 +
            (C6132 * C1071 + C32540 * C1089) * C32734 +
            (C6132 * C1070 + C32540 * C1085) * C31700 +
            (C6132 * C1088 + C32540 * C1097) * C24419) *
               C17826) *
              C32603 * C32589 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C6132 * C119 + C32540 * C126) * C31694 +
            (C6132 * C131 + C32540 * C140) * C32727 + C7046 * C31686 +
            C7047 * C32734 + C7048 * C31700 + C7049 * C24419) *
               C32687 +
           (C30901 + C30902 + C30903 + C30904 + C30905 + C30906) * C32694 +
           C30923 * C17826) *
              C315 -
          ((C7050 * C24419 + C7051 * C31700 + C6891 * C32734 + C6890 * C31686 +
            C6631 * C32727 + C6632 * C31694) *
               C17826 +
           (C7052 * C24419 + C7053 * C31700 + C6888 * C32734 + C6887 * C31686 +
            C6633 * C32727 + C6634 * C31694) *
               C32694 +
           (C7054 * C24419 + C7055 * C31700 + C7049 * C32734 + C7048 * C31686 +
            C7047 * C32727 + C7046 * C31694) *
               C32687) *
              C316 +
          ((C7048 * C31694 + C7049 * C32727 + C7055 * C31686 + C7054 * C32734 +
            C12156 * C31700 + C12157 * C24419) *
               C32687 +
           (C6887 * C31694 + C6888 * C32727 + C7053 * C31686 + C7052 * C32734 +
            C12434 * C31700 + C12435 * C24419) *
               C32694 +
           (C6890 * C31694 + C6891 * C32727 + C7051 * C31686 + C7050 * C32734 +
            (C6132 * C7015 + C32540 * C7020) * C31700 +
            (C6132 * C7021 + C32540 * C7024) * C24419) *
               C17826) *
              C317) *
         C32589 * C32577) /
            (p * q * std::sqrt(p + q));
    d2ee[33] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C6132 * C119 + C32540 * C126) * C31694 +
             (C6132 * C131 + C32540 * C140) * C32727 + C7046 * C31686 +
             C7047 * C32734 + C7048 * C31700 + C7049 * C24419) *
                C32687 +
            (C30901 + C30902 + C30903 + C30904 + C30905 + C30906) * C32694 +
            C30923 * C17826) *
               C530 -
           ((C7050 * C24419 + C7051 * C31700 + C6891 * C32734 + C6890 * C31686 +
             C6631 * C32727 + C6632 * C31694) *
                C17826 +
            (C7052 * C24419 + C7053 * C31700 + C6888 * C32734 + C6887 * C31686 +
             C6633 * C32727 + C6634 * C31694) *
                C32694 +
            (C7054 * C24419 + C7055 * C31700 + C7049 * C32734 + C7048 * C31686 +
             C7047 * C32727 + C7046 * C31694) *
                C32687) *
               C531) *
              C32589 * C442 +
          (((C7400 * C31694 + C7401 * C32727 + C7402 * C31686 + C7403 * C32734 +
             C12340 * C31700 + C12341 * C24419) *
                C32687 +
            (C7226 * C31694 + C7227 * C32727 + C7228 * C31686 + C7229 * C32734 +
             C14678 * C31700 + C14679 * C24419) *
                C32694 +
            (C7230 * C31694 + C7231 * C32727 + C7232 * C31686 + C7233 * C32734 +
             (C6132 * C7387 + C32540 * C7388) * C31700 +
             (C6132 * C7389 + C32540 * C7390) * C24419) *
                C17826) *
               C531 -
           ((C31191 + C31190 + C31189 + C31188 + C31187 + C31186) * C17826 +
            (C31185 + C31184 + C31183 + C31182 + C31181 + C31180) * C32694 +
            (C7403 * C24419 + C7402 * C31700 + C7401 * C32734 + C7400 * C31686 +
             (C6132 * C132 + C32540 * C141) * C32727 +
             (C6132 * C120 + C32540 * C127) * C31694) *
                C32687) *
               C530) *
              C32589 * C443)) /
        (p * q * std::sqrt(p + q));
    d2ee[34] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C6132 * C119 + C32540 * C126) * C31694 +
            (C6132 * C131 + C32540 * C140) * C32727 + C7046 * C31686 +
            C7047 * C32734 + C7048 * C31700 + C7049 * C24419) *
               C32687 +
           (C6224 * C31694 + C6225 * C32727 + C6634 * C31686 + C6633 * C32734 +
            C6887 * C31700 + C6888 * C24419) *
               C32694 +
           (C6226 * C31694 + C6227 * C32727 + C6632 * C31686 + C6631 * C32734 +
            C6890 * C31700 + C6891 * C24419) *
               C17826) *
              C32603 * C32589 * C110 -
          ((C7233 * C24419 + C7232 * C31700 + C7231 * C32734 + C7230 * C31686 +
            C6426 * C32727 + C6425 * C31694) *
               C17826 +
           (C7229 * C24419 + C7228 * C31700 + C7227 * C32734 + C7226 * C31686 +
            C6424 * C32727 + C6423 * C31694) *
               C32694 +
           (C7403 * C24419 + C7402 * C31700 + C7401 * C32734 + C7400 * C31686 +
            (C6132 * C132 + C32540 * C141) * C32727 +
            (C6132 * C120 + C32540 * C127) * C31694) *
               C32687) *
              C32603 * C32589 * C111 +
          (((C6132 * C121 + C32540 * C128) * C31694 +
            (C6132 * C133 + C32540 * C142) * C32727 +
            (C6132 * C320 + C32540 * C335) * C31686 +
            (C6132 * C330 + C32540 * C350) * C32734 +
            (C6132 * C325 + C32540 * C340) * C31700 +
            (C6132 * C345 + C32540 * C355) * C24419) *
               C32687 +
           ((C6132 * C215 + C32540 * C230) * C31694 +
            (C6132 * C225 + C32540 * C245) * C32727 +
            (C6132 * C620 + C32540 * C625) * C31686 +
            (C6132 * C630 + C32540 * C635) * C32734 +
            (C6132 * C1067 + C32540 * C1079) * C31700 +
            (C6132 * C1082 + C32540 * C1094) * C24419) *
               C32694 +
           ((C6132 * C220 + C32540 * C235) * C31694 +
            (C6132 * C240 + C32540 * C250) * C32727 +
            (C6132 * C1062 + C32540 * C1074) * C31686 +
            (C6132 * C1071 + C32540 * C1089) * C32734 +
            (C6132 * C1070 + C32540 * C1085) * C31700 +
            (C6132 * C1088 + C32540 * C1097) * C24419) *
               C17826) *
              C32603 * C32589 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C6132 * C119 + C32540 * C126) * C31694 +
            (C6132 * C131 + C32540 * C140) * C32727 + C7046 * C31686 +
            C7047 * C32734 + C7048 * C31700 + C7049 * C24419) *
               C32687 +
           (C30901 + C30902 + C30903 + C30904 + C30905 + C30906) * C32694 +
           C30923 * C17826) *
              C32603 * C209 -
          ((C30913 + C30914 + C30915 + C30916 + C30917 + C30918) * C17826 +
           (C30912 + C30911 + C30910 + C30909 + C30908 + C30907) * C32694 +
           (C30906 + C30905 + C30904 + C30903 + C30902 + C30901) * C32687) *
              C32603 * C210 +
          (C30923 * C32687 +
           (C30918 + C30917 + C30916 + C30915 + C30914 + C30913) * C32694 +
           (C6230 * C31694 + C6231 * C32727 + C6628 * C31686 + C6627 * C32734 +
            (C6132 * C6310 + C32540 * C6315) * C31700 +
            (C6132 * C6316 + C32540 * C6319) * C24419) *
               C17826) *
              C32603 * C211) *
         C32577) /
            (p * q * std::sqrt(p + q));
    d2ee[35] += (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((((C6132 * C119 + C32540 * C126) * C20882 +
                     (C6132 * C131 + C32540 * C140) * C20880 + C7046 * C20883 +
                     C7047 * C32731) *
                        C32958 +
                    (C27384 + C27385 + C27386 + C27387) * C32954 +
                    C27404 * C32944 + C27405 * C32926) *
                       C32603 * C440 -
                   ((C27396 + C27397 + C27398 + C27399) * C32926 +
                    (C27395 + C27394 + C27393 + C27392) * C32944 +
                    (C27391 + C27390 + C27389 + C27388) * C32954 +
                    (C27387 + C27386 + C27385 + C27384) * C32958) *
                       C32603 * C441) *
                      C442 +
                  (((C27634 + C27635 + C27636 + C27637) * C32958 +
                    (C27638 + C27639 + C27640 + C27641) * C32954 +
                    (C27642 + C27643 + C27644 + C27645) * C32944 +
                    (C6429 * C20882 + C6430 * C20880 +
                     (C6132 * C6520 + C32540 * C6521) * C20883 +
                     (C6132 * C6522 + C32540 * C6523) * C32731) *
                        C32926) *
                       C32603 * C441 -
                   ((C27645 + C27644 + C27643 + C27642) * C32926 +
                    (C27641 + C27640 + C27639 + C27638) * C32944 +
                    (C27637 + C27636 + C27635 + C27634) * C32954 +
                    (C7401 * C32731 + C7400 * C20883 +
                     (C6132 * C132 + C32540 * C141) * C20880 +
                     (C6132 * C120 + C32540 * C127) * C20882) *
                        C32958) *
                       C32603 * C440) *
                      C443)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((((C5270 * C119 + C32948 * C126 + C5271 * C120 +
                      C32935 * C127 + C5272 * C121 + C32905 * C128) *
                         C20882 +
                     (C5270 * C131 + C32948 * C140 + C5271 * C132 +
                      C32935 * C141 + C5272 * C133 + C32905 * C142) *
                         C20880 +
                     (C10615 + C10616 + C10617) * C20883 +
                     (C10618 + C10619 + C10620) * C32731) *
                        C15051 +
                    ((C5420 + C5421 + C5422) * C20882 +
                     (C5423 + C5424 + C5425) * C20880 +
                     (C6064 + C6063 + C6062) * C20883 +
                     (C6061 + C6060 + C6059) * C32731) *
                        C32691) *
                       C32603 * C440 -
                   (((C6053 + C6054 + C6055) * C32731 +
                     (C6056 + C6057 + C6058) * C20883 +
                     (C5431 + C5430 + C5429) * C20880 +
                     (C5428 + C5427 + C5426) * C20882) *
                        C32691 +
                    ((C6059 + C6060 + C6061) * C32731 +
                     (C6062 + C6063 + C6064) * C20883 +
                     (C5425 + C5424 + C5423) * C20880 +
                     (C5422 + C5421 + C5420) * C20882) *
                        C15051) *
                       C32603 * C441) *
                      C442 +
                  ((((C5725 + C5726 + C5727) * C20882 +
                     (C5728 + C5729 + C5730) * C20880 +
                     (C26786 + C26787 + C26788) * C20883 +
                     (C26789 + C26790 + C26791) * C32731) *
                        C15051 +
                    ((C5731 + C5732 + C5733) * C20882 +
                     (C5734 + C5735 + C5736) * C20880 +
                     (C5270 * C1063 + C32948 * C1075 + C5271 * C1062 +
                      C32935 * C1074 + C5272 * C1430 + C32905 * C1431) *
                         C20883 +
                     (C5270 * C1072 + C32948 * C1090 + C5271 * C1071 +
                      C32935 * C1089 + C5272 * C1432 + C32905 * C1433) *
                         C32731) *
                        C32691) *
                       C32603 * C441 -
                   (((C26791 + C26790 + C26789) * C32731 +
                     (C26788 + C26787 + C26786) * C20883 +
                     (C5730 + C5729 + C5728) * C20880 +
                     (C5727 + C5726 + C5725) * C20882) *
                        C32691 +
                    ((C10958 + C10957 + C10956) * C32731 +
                     (C10955 + C10954 + C10953) * C20883 +
                     (C5272 * C134 + C32905 * C143 + C5271 * C133 +
                      C32935 * C142 + C5270 * C132 + C32948 * C141) *
                         C20880 +
                     (C5272 * C122 + C32905 * C129 + C5271 * C121 +
                      C32935 * C128 + C5270 * C120 + C32948 * C127) *
                         C20882) *
                        C15051) *
                       C32603 * C440) *
                      C443)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C6132 * C119 + C32540 * C126) * C22671 +
                     (C6132 * C131 + C32540 * C140) * C32959 + C7046 * C22672 +
                     C7047 * C32956 + C7048 * C22673 + C7049 * C32947 +
                     C7055 * C22674 + C7054 * C32932) *
                        C15051 +
                    (C28114 + C28115 + C28116 + C28117 + C28118 + C28119 +
                     C28120 + C28121) *
                        C32691) *
                       C32603 * C440 -
                   ((C28122 + C28123 + C28124 + C28125 + C28126 + C28127 +
                     C28128 + C28129) *
                        C32691 +
                    (C28121 + C28120 + C28119 + C28118 + C28117 + C28116 +
                     C28115 + C28114) *
                        C15051) *
                       C32603 * C441) *
                      C442 +
                  (((C28358 + C28359 + C28360 + C28361 + C28362 + C28363 +
                     C28364 + C28365) *
                        C15051 +
                    (C6425 * C22671 + C6426 * C32959 + C7230 * C22672 +
                     C7231 * C32956 + C7232 * C22673 + C7233 * C32947 +
                     (C6132 * C7387 + C32540 * C7388) * C22674 +
                     (C6132 * C7389 + C32540 * C7390) * C32932) *
                        C32691) *
                       C32603 * C441 -
                   ((C28365 + C28364 + C28363 + C28362 + C28361 + C28360 +
                     C28359 + C28358) *
                        C32691 +
                    (C12341 * C32932 + C12340 * C22674 + C7403 * C32947 +
                     C7402 * C22673 + C7401 * C32956 + C7400 * C22672 +
                     (C6132 * C132 + C32540 * C141) * C32959 +
                     (C6132 * C120 + C32540 * C127) * C22671) *
                        C15051) *
                       C32603 * C440) *
                      C443)) /
                    (p * q * std::sqrt(p + q));
    d2ee[36] += (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((((C6132 * C119 + C32540 * C126) * C20882 +
                     (C6132 * C131 + C32540 * C140) * C20880 + C7046 * C20883 +
                     C7047 * C32731) *
                        C32958 +
                    (C27384 + C27385 + C27386 + C27387) * C32954 +
                    C27404 * C32944 + C27405 * C32926) *
                       C530 -
                   ((C27906 + C27907 + C27908 + C27909) * C32926 +
                    (C27910 + C27911 + C27912 + C27913) * C32944 +
                    (C27914 + C27915 + C27916 + C27917) * C32954 +
                    (C7049 * C32731 + C7048 * C20883 + C7047 * C20880 +
                     C7046 * C20882) *
                        C32958) *
                       C531) *
                      C440 +
                  (((C27917 + C27916 + C27915 + C27914) * C32958 +
                    (C27913 + C27912 + C27911 + C27910) * C32954 +
                    (C27909 + C27908 + C27907 + C27906) * C32944 +
                    (C6628 * C20882 + C6627 * C20880 +
                     (C6132 * C6310 + C32540 * C6315) * C20883 +
                     (C6132 * C6316 + C32540 * C6319) * C32731) *
                        C32926) *
                       C531 -
                   ((C27396 + C27397 + C27398 + C27399) * C32926 +
                    (C27395 + C27394 + C27393 + C27392) * C32944 +
                    (C27391 + C27390 + C27389 + C27388) * C32954 +
                    (C27387 + C27386 + C27385 + C27384) * C32958) *
                       C530) *
                      C441) *
                 C32577) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((((C5270 * C119 + C32948 * C126 + C5271 * C120 +
                      C32935 * C127 + C5272 * C121 + C32905 * C128) *
                         C20882 +
                     (C5270 * C131 + C32948 * C140 + C5271 * C132 +
                      C32935 * C141 + C5272 * C133 + C32905 * C142) *
                         C20880 +
                     (C10615 + C10616 + C10617) * C20883 +
                     (C10618 + C10619 + C10620) * C32731) *
                        C15051 +
                    ((C5420 + C5421 + C5422) * C20882 +
                     (C5423 + C5424 + C5425) * C20880 + C27184 * C20883 +
                     C27185 * C32731) *
                        C32691) *
                       C530 -
                   (((C11128 + C11127 + C11126) * C32731 +
                     (C11125 + C11124 + C11123) * C20883 + C27186 * C20880 +
                     C27187 * C20882) *
                        C32691 +
                    ((C10626 + C10625 + C10624) * C32731 +
                     (C10623 + C10622 + C10621) * C20883 +
                     (C10620 + C10619 + C10618) * C20880 +
                     (C10617 + C10616 + C10615) * C20882) *
                        C15051) *
                       C531) *
                      C440 +
                  (((C27184 * C20882 + C27185 * C20880 +
                     (C11123 + C11124 + C11125) * C20883 +
                     (C11126 + C11127 + C11128) * C32731) *
                        C15051 +
                    ((C6058 + C6057 + C6056) * C20882 +
                     (C6055 + C6054 + C6053) * C20880 +
                     (C5270 * C1068 + C32948 * C1083 + C5271 * C1069 +
                      C32935 * C1084 + C5272 * C1070 + C32905 * C1085) *
                         C20883 +
                     (C5270 * C1086 + C32948 * C1095 + C5271 * C1087 +
                      C32935 * C1096 + C5272 * C1088 + C32905 * C1097) *
                         C32731) *
                        C32691) *
                       C531 -
                   (((C6053 + C6054 + C6055) * C32731 +
                     (C6056 + C6057 + C6058) * C20883 +
                     (C5431 + C5430 + C5429) * C20880 +
                     (C5428 + C5427 + C5426) * C20882) *
                        C32691 +
                    (C27186 * C32731 + C27187 * C20883 +
                     (C5425 + C5424 + C5423) * C20880 +
                     (C5422 + C5421 + C5420) * C20882) *
                        C15051) *
                       C530) *
                      C441) *
                 C32577) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C6132 * C119 + C32540 * C126) * C22671 +
                     (C6132 * C131 + C32540 * C140) * C32959 + C7046 * C22672 +
                     C7047 * C32956 + C7048 * C22673 + C7049 * C32947 +
                     C7055 * C22674 + C7054 * C32932) *
                        C15051 +
                    (C28114 + C28115 + C28116 + C28117 + C28118 + C28119 +
                     C28120 + C28121) *
                        C32691) *
                       C530 -
                   ((C28626 + C28627 + C28628 + C28629 + C28630 + C28631 +
                     C28632 + C28633) *
                        C32691 +
                    (C12157 * C32932 + C12156 * C22674 + C7054 * C32947 +
                     C7055 * C22673 + C7049 * C32956 + C7048 * C22672 +
                     C7047 * C32959 + C7046 * C22671) *
                        C15051) *
                       C531) *
                      C440 +
                  (((C28633 + C28632 + C28631 + C28630 + C28629 + C28628 +
                     C28627 + C28626) *
                        C15051 +
                    (C6632 * C22671 + C6631 * C32959 + C6890 * C22672 +
                     C6891 * C32956 + C7051 * C22673 + C7050 * C32947 +
                     (C6132 * C7015 + C32540 * C7020) * C22674 +
                     (C6132 * C7021 + C32540 * C7024) * C32932) *
                        C32691) *
                       C531 -
                   ((C28122 + C28123 + C28124 + C28125 + C28126 + C28127 +
                     C28128 + C28129) *
                        C32691 +
                    (C28121 + C28120 + C28119 + C28118 + C28117 + C28116 +
                     C28115 + C28114) *
                        C15051) *
                       C530) *
                      C441) *
                 C32577) /
                    (p * q * std::sqrt(p + q));
    d2ee[37] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C5270 * C119 + C32948 * C126 + C5271 * C120 + C32935 * C127 +
                 C5272 * C121 + C32905 * C128) *
                    C20882 +
                (C5270 * C131 + C32948 * C140 + C5271 * C132 + C32935 * C141 +
                 C5272 * C133 + C32905 * C142) *
                    C20880 +
                (C10615 + C10616 + C10617) * C20883 +
                (C10618 + C10619 + C10620) * C32731) *
                   C15051 +
               ((C5420 + C5421 + C5422) * C20882 +
                (C5423 + C5424 + C5425) * C20880 +
                (C6064 + C6063 + C6062) * C20883 +
                (C6061 + C6060 + C6059) * C32731) *
                   C32691) *
                  C32603 * C32589 * C110 -
              (((C5272 * C631 + C32905 * C636 + C5271 * C630 + C32935 * C635 +
                 C5270 * C629 + C32948 * C634) *
                    C32731 +
                (C5272 * C621 + C32905 * C626 + C5271 * C620 + C32935 * C625 +
                 C5270 * C619 + C32948 * C624) *
                    C20883 +
                (C5730 + C5729 + C5728) * C20880 +
                (C5727 + C5726 + C5725) * C20882) *
                   C32691 +
               ((C10958 + C10957 + C10956) * C32731 +
                (C10955 + C10954 + C10953) * C20883 +
                (C5272 * C134 + C32905 * C143 + C5271 * C133 + C32935 * C142 +
                 C5270 * C132 + C32948 * C141) *
                    C20880 +
                (C5272 * C122 + C32905 * C129 + C5271 * C121 + C32935 * C128 +
                 C5270 * C120 + C32948 * C127) *
                    C20882) *
                   C15051) *
                  C32603 * C32589 * C111 +
              (((C5270 * C121 + C32948 * C128 + C5271 * C122 + C32935 * C129 +
                 C5272 * C123 + C32905 * C130) *
                    C20882 +
                (C5270 * C133 + C32948 * C142 + C5271 * C134 + C32935 * C143 +
                 C5272 * C135 + C32905 * C144) *
                    C20880 +
                (C5270 * C320 + C32948 * C335 + C5271 * C319 + C32935 * C334 +
                 C5272 * C318 + C32905 * C333) *
                    C20883 +
                (C5270 * C330 + C32948 * C350 + C5271 * C329 + C32935 * C349 +
                 C5272 * C328 + C32905 * C348) *
                    C32731) *
                   C15051 +
               ((C5270 * C215 + C32948 * C230 + C5271 * C214 + C32935 * C229 +
                 C5272 * C213 + C32905 * C228) *
                    C20882 +
                (C5270 * C225 + C32948 * C245 + C5271 * C224 + C32935 * C244 +
                 C5272 * C223 + C32905 * C243) *
                    C20880 +
                (C5270 * C620 + C32948 * C625 + C5271 * C621 + C32935 * C626 +
                 C5272 * C622 + C32905 * C627) *
                    C20883 +
                (C5270 * C630 + C32948 * C635 + C5271 * C631 + C32935 * C636 +
                 C5272 * C632 + C32905 * C637) *
                    C32731) *
                   C32691) *
                  C32603 * C32589 * C112) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C5270 * C119 + C32948 * C126 + C5271 * C120 + C32935 * C127 +
                 C5272 * C121 + C32905 * C128) *
                    C20882 +
                (C5270 * C131 + C32948 * C140 + C5271 * C132 + C32935 * C141 +
                 C5272 * C133 + C32905 * C142) *
                    C20880 +
                (C10615 + C10616 + C10617) * C20883 +
                (C10618 + C10619 + C10620) * C32731) *
                   C15051 +
               ((C5420 + C5421 + C5422) * C20882 +
                (C5423 + C5424 + C5425) * C20880 +
                (C6064 + C6063 + C6062) * C20883 +
                (C6061 + C6060 + C6059) * C32731) *
                   C32691) *
                  C32603 * C209 -
              (((C6053 + C6054 + C6055) * C32731 +
                (C6056 + C6057 + C6058) * C20883 +
                (C5431 + C5430 + C5429) * C20880 +
                (C5428 + C5427 + C5426) * C20882) *
                   C32691 +
               ((C6059 + C6060 + C6061) * C32731 +
                (C6062 + C6063 + C6064) * C20883 +
                (C5425 + C5424 + C5423) * C20880 +
                (C5422 + C5421 + C5420) * C20882) *
                   C15051) *
                  C32603 * C210 +
              ((C5440 * C20882 + C5441 * C20880 +
                (C6058 + C6057 + C6056) * C20883 +
                (C6055 + C6054 + C6053) * C32731) *
                   C15051 +
               ((C5437 + C5436 + C5435) * C20882 +
                (C5434 + C5433 + C5432) * C20880 +
                (C5270 * C1580 + C32948 * C1583 + C5271 * C1581 +
                 C32935 * C1584 + C5272 * C1582 + C32905 * C1585) *
                    C20883 +
                (C5270 * C1586 + C32948 * C1589 + C5271 * C1587 +
                 C32935 * C1590 + C5272 * C1588 + C32905 * C1591) *
                    C32731) *
                   C32691) *
                  C32603 * C211) *
             C32577) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C5270 * C119 + C32948 * C126 + C5271 * C120 + C32935 * C127 +
             C5272 * C121 + C32905 * C128) *
                C20882 +
            (C5270 * C131 + C32948 * C140 + C5271 * C132 + C32935 * C141 +
             C5272 * C133 + C32905 * C142) *
                C20880 +
            (C10615 + C10616 + C10617) * C20883 +
            (C10618 + C10619 + C10620) * C32731) *
               C15051 +
           ((C5420 + C5421 + C5422) * C20882 +
            (C5423 + C5424 + C5425) * C20880 +
            (C6064 + C6063 + C6062) * C20883 +
            (C6061 + C6060 + C6059) * C32731) *
               C32691) *
              C315 -
          (((C11128 + C11127 + C11126) * C32731 +
            (C11125 + C11124 + C11123) * C20883 +
            (C6059 + C6060 + C6061) * C20880 +
            (C6062 + C6063 + C6064) * C20882) *
               C32691 +
           ((C10626 + C10625 + C10624) * C32731 +
            (C10623 + C10622 + C10621) * C20883 +
            (C10620 + C10619 + C10618) * C20880 +
            (C10617 + C10616 + C10615) * C20882) *
               C15051) *
              C316 +
          ((C10635 * C20882 + C10636 * C20880 +
            (C10632 + C10631 + C10630) * C20883 +
            (C10629 + C10628 + C10627) * C32731) *
               C15051 +
           ((C11123 + C11124 + C11125) * C20882 +
            (C11126 + C11127 + C11128) * C20880 +
            (C5270 * C2528 + C32948 * C2531 + C5271 * C2529 + C32935 * C2532 +
             C5272 * C2530 + C32905 * C2533) *
                C20883 +
            (C5270 * C2534 + C32948 * C2537 + C5271 * C2535 + C32935 * C2538 +
             C5272 * C2536 + C32905 * C2539) *
                C32731) *
               C32691) *
              C317) *
         C32589 * C32577) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C6132 * C119 + C32540 * C126) * C20882 +
            (C6132 * C131 + C32540 * C140) * C20880 + C7046 * C20883 +
            C7047 * C32731) *
               C32958 +
           (C6224 * C20882 + C6225 * C20880 + C6634 * C20883 + C6633 * C32731) *
               C32954 +
           (C6226 * C20882 + C6227 * C20880 + C6632 * C20883 + C6631 * C32731) *
               C32944 +
           (C6228 * C20882 + C6229 * C20880 + C6630 * C20883 + C6629 * C32731) *
               C32926) *
              C32603 * C32589 * C110 -
          ((C9968 * C32731 + C9967 * C20883 + C6428 * C20880 + C6427 * C20882) *
               C32926 +
           (C7231 * C32731 + C7230 * C20883 + C6426 * C20880 + C6425 * C20882) *
               C32944 +
           (C7227 * C32731 + C7226 * C20883 + C6424 * C20880 + C6423 * C20882) *
               C32954 +
           (C7401 * C32731 + C7400 * C20883 +
            (C6132 * C132 + C32540 * C141) * C20880 +
            (C6132 * C120 + C32540 * C127) * C20882) *
               C32958) *
              C32603 * C32589 * C111 +
          (((C6132 * C121 + C32540 * C128) * C20882 +
            (C6132 * C133 + C32540 * C142) * C20880 +
            (C6132 * C320 + C32540 * C335) * C20883 +
            (C6132 * C330 + C32540 * C350) * C32731) *
               C32958 +
           ((C6132 * C215 + C32540 * C230) * C20882 +
            (C6132 * C225 + C32540 * C245) * C20880 +
            (C6132 * C620 + C32540 * C625) * C20883 +
            (C6132 * C630 + C32540 * C635) * C32731) *
               C32954 +
           ((C6132 * C220 + C32540 * C235) * C20882 +
            (C6132 * C240 + C32540 * C250) * C20880 +
            (C6132 * C1062 + C32540 * C1074) * C20883 +
            (C6132 * C1071 + C32540 * C1089) * C32731) *
               C32944 +
           ((C6132 * C867 + C32540 * C876) * C20882 +
            (C6132 * C873 + C32540 * C885) * C20880 +
            (C6132 * C1582 + C32540 * C1585) * C20883 +
            (C6132 * C1588 + C32540 * C1591) * C32731) *
               C32926) *
              C32603 * C32589 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C6132 * C119 + C32540 * C126) * C20882 +
            (C6132 * C131 + C32540 * C140) * C20880 + C7046 * C20883 +
            C7047 * C32731) *
               C32958 +
           (C27384 + C27385 + C27386 + C27387) * C32954 + C27404 * C32944 +
           C27405 * C32926) *
              C32603 * C209 -
          ((C27396 + C27397 + C27398 + C27399) * C32926 +
           (C27395 + C27394 + C27393 + C27392) * C32944 +
           (C27391 + C27390 + C27389 + C27388) * C32954 +
           (C27387 + C27386 + C27385 + C27384) * C32958) *
              C32603 * C210 +
          (C27404 * C32958 + C27405 * C32954 +
           (C27399 + C27398 + C27397 + C27396) * C32944 +
           (C6233 * C20882 + C6232 * C20880 +
            (C6132 * C6606 + C32540 * C6607) * C20883 +
            (C6132 * C6608 + C32540 * C6609) * C32731) *
               C32926) *
              C32603 * C211) *
         C32577) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C6132 * C119 + C32540 * C126) * C20882 +
            (C6132 * C131 + C32540 * C140) * C20880 + C7046 * C20883 +
            C7047 * C32731) *
               C32958 +
           (C27384 + C27385 + C27386 + C27387) * C32954 + C27404 * C32944 +
           C27405 * C32926) *
              C315 -
          ((C6892 * C32731 + C6893 * C20883 + C6629 * C20880 + C6630 * C20882) *
               C32926 +
           (C6891 * C32731 + C6890 * C20883 + C6631 * C20880 + C6632 * C20882) *
               C32944 +
           (C6888 * C32731 + C6887 * C20883 + C6633 * C20880 + C6634 * C20882) *
               C32954 +
           (C7049 * C32731 + C7048 * C20883 + C7047 * C20880 + C7046 * C20882) *
               C32958) *
              C316 +
          ((C7048 * C20882 + C7049 * C20880 + C7055 * C20883 + C7054 * C32731) *
               C32958 +
           (C6887 * C20882 + C6888 * C20880 + C7053 * C20883 + C7052 * C32731) *
               C32954 +
           (C6890 * C20882 + C6891 * C20880 + C7051 * C20883 + C7050 * C32731) *
               C32944 +
           (C6893 * C20882 + C6892 * C20880 +
            (C6132 * C7549 + C32540 * C7550) * C20883 +
            (C6132 * C7551 + C32540 * C7552) * C32731) *
               C32926) *
              C317) *
         C32589 * C32577) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C6132 * C119 + C32540 * C126) * C22671 +
            (C6132 * C131 + C32540 * C140) * C32959 + C7046 * C22672 +
            C7047 * C32956 + C7048 * C22673 + C7049 * C32947 + C7055 * C22674 +
            C7054 * C32932) *
               C15051 +
           (C6224 * C22671 + C6225 * C32959 + C6634 * C22672 + C6633 * C32956 +
            C6887 * C22673 + C6888 * C32947 + C7053 * C22674 + C7052 * C32932) *
               C32691) *
              C32603 * C32589 * C110 -
          ((C14679 * C32932 + C14678 * C22674 + C7229 * C32947 +
            C7228 * C22673 + C7227 * C32956 + C7226 * C22672 + C6424 * C32959 +
            C6423 * C22671) *
               C32691 +
           (C12341 * C32932 + C12340 * C22674 + C7403 * C32947 +
            C7402 * C22673 + C7401 * C32956 + C7400 * C22672 +
            (C6132 * C132 + C32540 * C141) * C32959 +
            (C6132 * C120 + C32540 * C127) * C22671) *
               C15051) *
              C32603 * C32589 * C111 +
          (((C6132 * C121 + C32540 * C128) * C22671 +
            (C6132 * C133 + C32540 * C142) * C32959 +
            (C6132 * C320 + C32540 * C335) * C22672 +
            (C6132 * C330 + C32540 * C350) * C32956 +
            (C6132 * C325 + C32540 * C340) * C22673 +
            (C6132 * C345 + C32540 * C355) * C32947 +
            (C6132 * C1964 + C32540 * C1973) * C22674 +
            (C6132 * C1970 + C32540 * C1982) * C32932) *
               C15051 +
           ((C6132 * C215 + C32540 * C230) * C22671 +
            (C6132 * C225 + C32540 * C245) * C32959 +
            (C6132 * C620 + C32540 * C625) * C22672 +
            (C6132 * C630 + C32540 * C635) * C32956 +
            (C6132 * C1067 + C32540 * C1079) * C22673 +
            (C6132 * C1082 + C32540 * C1094) * C32947 +
            (C6132 * C2530 + C32540 * C2533) * C22674 +
            (C6132 * C2536 + C32540 * C2539) * C32932) *
               C32691) *
              C32603 * C32589 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C6132 * C119 + C32540 * C126) * C22671 +
            (C6132 * C131 + C32540 * C140) * C32959 + C7046 * C22672 +
            C7047 * C32956 + C7048 * C22673 + C7049 * C32947 + C7055 * C22674 +
            C7054 * C32932) *
               C15051 +
           (C28114 + C28115 + C28116 + C28117 + C28118 + C28119 + C28120 +
            C28121) *
               C32691) *
              C32603 * C209 -
          ((C28122 + C28123 + C28124 + C28125 + C28126 + C28127 + C28128 +
            C28129) *
               C32691 +
           (C28121 + C28120 + C28119 + C28118 + C28117 + C28116 + C28115 +
            C28114) *
               C15051) *
              C32603 * C210 +
          ((C28129 + C28128 + C28127 + C28126 + C28125 + C28124 + C28123 +
            C28122) *
               C15051 +
           (C6228 * C22671 + C6229 * C32959 + C6630 * C22672 + C6629 * C32956 +
            C6893 * C22673 + C6892 * C32947 +
            (C6132 * C7549 + C32540 * C7550) * C22674 +
            (C6132 * C7551 + C32540 * C7552) * C32932) *
               C32691) *
              C32603 * C211) *
         C32577) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C6132 * C119 + C32540 * C126) * C22671 +
            (C6132 * C131 + C32540 * C140) * C32959 + C7046 * C22672 +
            C7047 * C32956 + C7048 * C22673 + C7049 * C32947 + C7055 * C22674 +
            C7054 * C32932) *
               C15051 +
           (C28114 + C28115 + C28116 + C28117 + C28118 + C28119 + C28120 +
            C28121) *
               C32691) *
              C315 -
          ((C12435 * C32932 + C12434 * C22674 + C7052 * C32947 +
            C7053 * C22673 + C6888 * C32956 + C6887 * C22672 + C6633 * C32959 +
            C6634 * C22671) *
               C32691 +
           (C12157 * C32932 + C12156 * C22674 + C7054 * C32947 +
            C7055 * C22673 + C7049 * C32956 + C7048 * C22672 + C7047 * C32959 +
            C7046 * C22671) *
               C15051) *
              C316 +
          ((C7048 * C22671 + C7049 * C32959 + C7055 * C22672 + C7054 * C32956 +
            C12156 * C22673 + C12157 * C32947 + C12159 * C22674 +
            C12158 * C32932) *
               C15051 +
           (C6887 * C22671 + C6888 * C32959 + C7053 * C22672 + C7052 * C32956 +
            C12434 * C22673 + C12435 * C32947 +
            (C6132 * C12425 + C32540 * C12426) * C22674 +
            (C6132 * C12427 + C32540 * C12428) * C32932) *
               C32691) *
              C317) *
         C32589 * C32577) /
            (p * q * std::sqrt(p + q));
    d2ee[38] += (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((((C6132 * C119 + C32540 * C126) * C20882 +
                     (C6132 * C131 + C32540 * C140) * C20880 + C7046 * C20883 +
                     C7047 * C32731) *
                        C32958 +
                    (C27384 + C27385 + C27386 + C27387) * C32954 +
                    C27404 * C32944 + C27405 * C32926) *
                       C530 -
                   ((C6892 * C32731 + C6893 * C20883 + C6629 * C20880 +
                     C6630 * C20882) *
                        C32926 +
                    (C6891 * C32731 + C6890 * C20883 + C6631 * C20880 +
                     C6632 * C20882) *
                        C32944 +
                    (C6888 * C32731 + C6887 * C20883 + C6633 * C20880 +
                     C6634 * C20882) *
                        C32954 +
                    (C7049 * C32731 + C7048 * C20883 + C7047 * C20880 +
                     C7046 * C20882) *
                        C32958) *
                       C531) *
                      C32589 * C442 +
                  (((C7400 * C20882 + C7401 * C20880 + C7402 * C20883 +
                     C7403 * C32731) *
                        C32958 +
                    (C7226 * C20882 + C7227 * C20880 + C7228 * C20883 +
                     C7229 * C32731) *
                        C32954 +
                    (C7230 * C20882 + C7231 * C20880 + C7232 * C20883 +
                     C7233 * C32731) *
                        C32944 +
                    (C9967 * C20882 + C9968 * C20880 +
                     (C6132 * C7201 + C32540 * C7202) * C20883 +
                     (C6132 * C7203 + C32540 * C7204) * C32731) *
                        C32926) *
                       C531 -
                   ((C27645 + C27644 + C27643 + C27642) * C32926 +
                    (C27641 + C27640 + C27639 + C27638) * C32944 +
                    (C27637 + C27636 + C27635 + C27634) * C32954 +
                    (C7401 * C32731 + C7400 * C20883 +
                     (C6132 * C132 + C32540 * C141) * C20880 +
                     (C6132 * C120 + C32540 * C127) * C20882) *
                        C32958) *
                       C530) *
                      C32589 * C443)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((((C5270 * C119 + C32948 * C126 + C5271 * C120 +
                      C32935 * C127 + C5272 * C121 + C32905 * C128) *
                         C20882 +
                     (C5270 * C131 + C32948 * C140 + C5271 * C132 +
                      C32935 * C141 + C5272 * C133 + C32905 * C142) *
                         C20880 +
                     (C10615 + C10616 + C10617) * C20883 +
                     (C10618 + C10619 + C10620) * C32731) *
                        C15051 +
                    ((C5420 + C5421 + C5422) * C20882 +
                     (C5423 + C5424 + C5425) * C20880 +
                     (C6064 + C6063 + C6062) * C20883 +
                     (C6061 + C6060 + C6059) * C32731) *
                        C32691) *
                       C530 -
                   (((C11128 + C11127 + C11126) * C32731 +
                     (C11125 + C11124 + C11123) * C20883 +
                     (C6059 + C6060 + C6061) * C20880 +
                     (C6062 + C6063 + C6064) * C20882) *
                        C32691 +
                    ((C10626 + C10625 + C10624) * C32731 +
                     (C10623 + C10622 + C10621) * C20883 +
                     (C10620 + C10619 + C10618) * C20880 +
                     (C10617 + C10616 + C10615) * C20882) *
                        C15051) *
                       C531) *
                      C32589 * C442 +
                  ((((C10953 + C10954 + C10955) * C20882 +
                     (C10956 + C10957 + C10958) * C20880 +
                     (C10959 + C10960 + C10961) * C20883 +
                     (C10962 + C10963 + C10964) * C32731) *
                        C15051 +
                    ((C26786 + C26787 + C26788) * C20882 +
                     (C26789 + C26790 + C26791) * C20880 +
                     (C5270 * C1066 + C32948 * C1078 + C5271 * C1067 +
                      C32935 * C1079 + C5272 * C2192 + C32905 * C2193) *
                         C20883 +
                     (C5270 * C1081 + C32948 * C1093 + C5271 * C1082 +
                      C32935 * C1094 + C5272 * C2194 + C32905 * C2195) *
                         C32731) *
                        C32691) *
                       C531 -
                   (((C26791 + C26790 + C26789) * C32731 +
                     (C26788 + C26787 + C26786) * C20883 +
                     (C5730 + C5729 + C5728) * C20880 +
                     (C5727 + C5726 + C5725) * C20882) *
                        C32691 +
                    ((C10958 + C10957 + C10956) * C32731 +
                     (C10955 + C10954 + C10953) * C20883 +
                     (C5272 * C134 + C32905 * C143 + C5271 * C133 +
                      C32935 * C142 + C5270 * C132 + C32948 * C141) *
                         C20880 +
                     (C5272 * C122 + C32905 * C129 + C5271 * C121 +
                      C32935 * C128 + C5270 * C120 + C32948 * C127) *
                         C20882) *
                        C15051) *
                       C530) *
                      C32589 * C443)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C6132 * C119 + C32540 * C126) * C22671 +
                     (C6132 * C131 + C32540 * C140) * C32959 + C7046 * C22672 +
                     C7047 * C32956 + C7048 * C22673 + C7049 * C32947 +
                     C7055 * C22674 + C7054 * C32932) *
                        C15051 +
                    (C28114 + C28115 + C28116 + C28117 + C28118 + C28119 +
                     C28120 + C28121) *
                        C32691) *
                       C530 -
                   ((C12435 * C32932 + C12434 * C22674 + C7052 * C32947 +
                     C7053 * C22673 + C6888 * C32956 + C6887 * C22672 +
                     C6633 * C32959 + C6634 * C22671) *
                        C32691 +
                    (C12157 * C32932 + C12156 * C22674 + C7054 * C32947 +
                     C7055 * C22673 + C7049 * C32956 + C7048 * C22672 +
                     C7047 * C32959 + C7046 * C22671) *
                        C15051) *
                       C531) *
                      C32589 * C442 +
                  (((C7400 * C22671 + C7401 * C32959 + C7402 * C22672 +
                     C7403 * C32956 + C12340 * C22673 + C12341 * C32947 +
                     C12342 * C22674 + C12343 * C32932) *
                        C15051 +
                    (C7226 * C22671 + C7227 * C32959 + C7228 * C22672 +
                     C7229 * C32956 + C14678 * C22673 + C14679 * C32947 +
                     (C6132 * C12241 + C32540 * C12242) * C22674 +
                     (C6132 * C12243 + C32540 * C12244) * C32932) *
                        C32691) *
                       C531 -
                   ((C28365 + C28364 + C28363 + C28362 + C28361 + C28360 +
                     C28359 + C28358) *
                        C32691 +
                    (C12341 * C32932 + C12340 * C22674 + C7403 * C32947 +
                     C7402 * C22673 + C7401 * C32956 + C7400 * C22672 +
                     (C6132 * C132 + C32540 * C141) * C32959 +
                     (C6132 * C120 + C32540 * C127) * C22671) *
                        C15051) *
                       C530) *
                      C32589 * C443)) /
                    (p * q * std::sqrt(p + q));
    d2ee[39] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C5270 * C119 + C32948 * C126 + C5271 * C120 + C32935 * C127 +
             C5272 * C121 + C32905 * C128) *
                C20882 +
            (C5270 * C131 + C32948 * C140 + C5271 * C132 + C32935 * C141 +
             C5272 * C133 + C32905 * C142) *
                C20880 +
            (C10615 + C10616 + C10617) * C20883 +
            (C10618 + C10619 + C10620) * C32731) *
               C15051 +
           ((C5420 + C5421 + C5422) * C20882 +
            (C5423 + C5424 + C5425) * C20880 +
            (C6064 + C6063 + C6062) * C20883 +
            (C6061 + C6060 + C6059) * C32731) *
               C32691) *
              C32603 * C209 -
          (((C6053 + C6054 + C6055) * C32731 +
            (C6056 + C6057 + C6058) * C20883 +
            (C5431 + C5430 + C5429) * C20880 +
            (C5428 + C5427 + C5426) * C20882) *
               C32691 +
           ((C6059 + C6060 + C6061) * C32731 +
            (C6062 + C6063 + C6064) * C20883 +
            (C5425 + C5424 + C5423) * C20880 +
            (C5422 + C5421 + C5420) * C20882) *
               C15051) *
              C32603 * C210 +
          ((C5440 * C20882 + C5441 * C20880 + (C6058 + C6057 + C6056) * C20883 +
            (C6055 + C6054 + C6053) * C32731) *
               C15051 +
           ((C5437 + C5436 + C5435) * C20882 +
            (C5434 + C5433 + C5432) * C20880 +
            (C5270 * C1580 + C32948 * C1583 + C5271 * C1581 + C32935 * C1584 +
             C5272 * C1582 + C32905 * C1585) *
                C20883 +
            (C5270 * C1586 + C32948 * C1589 + C5271 * C1587 + C32935 * C1590 +
             C5272 * C1588 + C32905 * C1591) *
                C32731) *
               C32691) *
              C32603 * C211) *
         C32577) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C5270 * C119 + C32948 * C126 + C5271 * C120 + C32935 * C127 +
             C5272 * C121 + C32905 * C128) *
                C20882 +
            (C5270 * C131 + C32948 * C140 + C5271 * C132 + C32935 * C141 +
             C5272 * C133 + C32905 * C142) *
                C20880 +
            (C10615 + C10616 + C10617) * C20883 +
            (C10618 + C10619 + C10620) * C32731) *
               C15051 +
           ((C5420 + C5421 + C5422) * C20882 +
            (C5423 + C5424 + C5425) * C20880 +
            (C6064 + C6063 + C6062) * C20883 +
            (C6061 + C6060 + C6059) * C32731) *
               C32691) *
              C32603 * C32589 * C110 -
          (((C5272 * C631 + C32905 * C636 + C5271 * C630 + C32935 * C635 +
             C5270 * C629 + C32948 * C634) *
                C32731 +
            (C5272 * C621 + C32905 * C626 + C5271 * C620 + C32935 * C625 +
             C5270 * C619 + C32948 * C624) *
                C20883 +
            (C5730 + C5729 + C5728) * C20880 +
            (C5727 + C5726 + C5725) * C20882) *
               C32691 +
           ((C10958 + C10957 + C10956) * C32731 +
            (C10955 + C10954 + C10953) * C20883 +
            (C5272 * C134 + C32905 * C143 + C5271 * C133 + C32935 * C142 +
             C5270 * C132 + C32948 * C141) *
                C20880 +
            (C5272 * C122 + C32905 * C129 + C5271 * C121 + C32935 * C128 +
             C5270 * C120 + C32948 * C127) *
                C20882) *
               C15051) *
              C32603 * C32589 * C111 +
          (((C5270 * C121 + C32948 * C128 + C5271 * C122 + C32935 * C129 +
             C5272 * C123 + C32905 * C130) *
                C20882 +
            (C5270 * C133 + C32948 * C142 + C5271 * C134 + C32935 * C143 +
             C5272 * C135 + C32905 * C144) *
                C20880 +
            (C5270 * C320 + C32948 * C335 + C5271 * C319 + C32935 * C334 +
             C5272 * C318 + C32905 * C333) *
                C20883 +
            (C5270 * C330 + C32948 * C350 + C5271 * C329 + C32935 * C349 +
             C5272 * C328 + C32905 * C348) *
                C32731) *
               C15051 +
           ((C5270 * C215 + C32948 * C230 + C5271 * C214 + C32935 * C229 +
             C5272 * C213 + C32905 * C228) *
                C20882 +
            (C5270 * C225 + C32948 * C245 + C5271 * C224 + C32935 * C244 +
             C5272 * C223 + C32905 * C243) *
                C20880 +
            (C5270 * C620 + C32948 * C625 + C5271 * C621 + C32935 * C626 +
             C5272 * C622 + C32905 * C627) *
                C20883 +
            (C5270 * C630 + C32948 * C635 + C5271 * C631 + C32935 * C636 +
             C5272 * C632 + C32905 * C637) *
                C32731) *
               C32691) *
              C32603 * C32589 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C6132 * C119 + C32540 * C126) * C20882 +
            (C6132 * C131 + C32540 * C140) * C20880 + C7046 * C20883 +
            C7047 * C32731) *
               C32958 +
           (C6224 * C20882 + C6225 * C20880 + C6634 * C20883 + C6633 * C32731) *
               C32954 +
           (C6226 * C20882 + C6227 * C20880 + C6632 * C20883 + C6631 * C32731) *
               C32944 +
           (C6228 * C20882 + C6229 * C20880 + C6630 * C20883 + C6629 * C32731) *
               C32926) *
              C32603 * C32589 * C110 -
          ((C9968 * C32731 + C9967 * C20883 + C6428 * C20880 + C6427 * C20882) *
               C32926 +
           (C7231 * C32731 + C7230 * C20883 + C6426 * C20880 + C6425 * C20882) *
               C32944 +
           (C7227 * C32731 + C7226 * C20883 + C6424 * C20880 + C6423 * C20882) *
               C32954 +
           (C7401 * C32731 + C7400 * C20883 +
            (C6132 * C132 + C32540 * C141) * C20880 +
            (C6132 * C120 + C32540 * C127) * C20882) *
               C32958) *
              C32603 * C32589 * C111 +
          (((C6132 * C121 + C32540 * C128) * C20882 +
            (C6132 * C133 + C32540 * C142) * C20880 +
            (C6132 * C320 + C32540 * C335) * C20883 +
            (C6132 * C330 + C32540 * C350) * C32731) *
               C32958 +
           ((C6132 * C215 + C32540 * C230) * C20882 +
            (C6132 * C225 + C32540 * C245) * C20880 +
            (C6132 * C620 + C32540 * C625) * C20883 +
            (C6132 * C630 + C32540 * C635) * C32731) *
               C32954 +
           ((C6132 * C220 + C32540 * C235) * C20882 +
            (C6132 * C240 + C32540 * C250) * C20880 +
            (C6132 * C1062 + C32540 * C1074) * C20883 +
            (C6132 * C1071 + C32540 * C1089) * C32731) *
               C32944 +
           ((C6132 * C867 + C32540 * C876) * C20882 +
            (C6132 * C873 + C32540 * C885) * C20880 +
            (C6132 * C1582 + C32540 * C1585) * C20883 +
            (C6132 * C1588 + C32540 * C1591) * C32731) *
               C32926) *
              C32603 * C32589 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C6132 * C119 + C32540 * C126) * C20882 +
            (C6132 * C131 + C32540 * C140) * C20880 + C7046 * C20883 +
            C7047 * C32731) *
               C32958 +
           (C27384 + C27385 + C27386 + C27387) * C32954 + C27404 * C32944 +
           C27405 * C32926) *
              C32603 * C209 -
          ((C27396 + C27397 + C27398 + C27399) * C32926 +
           (C27395 + C27394 + C27393 + C27392) * C32944 +
           (C27391 + C27390 + C27389 + C27388) * C32954 +
           (C27387 + C27386 + C27385 + C27384) * C32958) *
              C32603 * C210 +
          (C27404 * C32958 + C27405 * C32954 +
           (C27399 + C27398 + C27397 + C27396) * C32944 +
           (C6233 * C20882 + C6232 * C20880 +
            (C6132 * C6606 + C32540 * C6607) * C20883 +
            (C6132 * C6608 + C32540 * C6609) * C32731) *
               C32926) *
              C32603 * C211) *
         C32577) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C6132 * C119 + C32540 * C126) * C22671 +
            (C6132 * C131 + C32540 * C140) * C32959 + C7046 * C22672 +
            C7047 * C32956 + C7048 * C22673 + C7049 * C32947 + C7055 * C22674 +
            C7054 * C32932) *
               C15051 +
           (C6224 * C22671 + C6225 * C32959 + C6634 * C22672 + C6633 * C32956 +
            C6887 * C22673 + C6888 * C32947 + C7053 * C22674 + C7052 * C32932) *
               C32691) *
              C32603 * C32589 * C110 -
          ((C14679 * C32932 + C14678 * C22674 + C7229 * C32947 +
            C7228 * C22673 + C7227 * C32956 + C7226 * C22672 + C6424 * C32959 +
            C6423 * C22671) *
               C32691 +
           (C12341 * C32932 + C12340 * C22674 + C7403 * C32947 +
            C7402 * C22673 + C7401 * C32956 + C7400 * C22672 +
            (C6132 * C132 + C32540 * C141) * C32959 +
            (C6132 * C120 + C32540 * C127) * C22671) *
               C15051) *
              C32603 * C32589 * C111 +
          (((C6132 * C121 + C32540 * C128) * C22671 +
            (C6132 * C133 + C32540 * C142) * C32959 +
            (C6132 * C320 + C32540 * C335) * C22672 +
            (C6132 * C330 + C32540 * C350) * C32956 +
            (C6132 * C325 + C32540 * C340) * C22673 +
            (C6132 * C345 + C32540 * C355) * C32947 +
            (C6132 * C1964 + C32540 * C1973) * C22674 +
            (C6132 * C1970 + C32540 * C1982) * C32932) *
               C15051 +
           ((C6132 * C215 + C32540 * C230) * C22671 +
            (C6132 * C225 + C32540 * C245) * C32959 +
            (C6132 * C620 + C32540 * C625) * C22672 +
            (C6132 * C630 + C32540 * C635) * C32956 +
            (C6132 * C1067 + C32540 * C1079) * C22673 +
            (C6132 * C1082 + C32540 * C1094) * C32947 +
            (C6132 * C2530 + C32540 * C2533) * C22674 +
            (C6132 * C2536 + C32540 * C2539) * C32932) *
               C32691) *
              C32603 * C32589 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C6132 * C119 + C32540 * C126) * C22671 +
            (C6132 * C131 + C32540 * C140) * C32959 + C7046 * C22672 +
            C7047 * C32956 + C7048 * C22673 + C7049 * C32947 + C7055 * C22674 +
            C7054 * C32932) *
               C15051 +
           (C28114 + C28115 + C28116 + C28117 + C28118 + C28119 + C28120 +
            C28121) *
               C32691) *
              C32603 * C209 -
          ((C28122 + C28123 + C28124 + C28125 + C28126 + C28127 + C28128 +
            C28129) *
               C32691 +
           (C28121 + C28120 + C28119 + C28118 + C28117 + C28116 + C28115 +
            C28114) *
               C15051) *
              C32603 * C210 +
          ((C28129 + C28128 + C28127 + C28126 + C28125 + C28124 + C28123 +
            C28122) *
               C15051 +
           (C6228 * C22671 + C6229 * C32959 + C6630 * C22672 + C6629 * C32956 +
            C6893 * C22673 + C6892 * C32947 +
            (C6132 * C7549 + C32540 * C7550) * C22674 +
            (C6132 * C7551 + C32540 * C7552) * C32932) *
               C32691) *
              C32603 * C211) *
         C32577) /
            (p * q * std::sqrt(p + q));
    d2ee[40] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C31557 * C119 + C32866 * C126 + C31538 * C120 + C32550 * C127) *
                 C31694 +
             (C31557 * C131 + C32866 * C140 + C31538 * C132 + C32550 * C141) *
                 C32727 +
             (C8867 + C8868) * C31686 + (C8869 + C8870) * C32734 +
             C12874 * C31700 + C12875 * C24419) *
                C15051 +
            ((C7802 + C7803) * C31694 + (C7804 + C7805) * C32727 +
             C9501 * C31686 + C9502 * C32734 + C12876 * C31700 +
             C12877 * C24419) *
                C32691) *
               C32603 * C440 -
           (((C8871 + C8872) * C24419 + (C8873 + C8874) * C31700 +
             C9503 * C32734 + C9504 * C31686 + (C7809 + C7808) * C32727 +
             (C7807 + C7806) * C31694) *
                C32691 +
            (C13508 * C24419 + C13509 * C31700 + C9505 * C32734 +
             C9506 * C31686 + (C7805 + C7804) * C32727 +
             (C7803 + C7802) * C31694) *
                C15051) *
               C32603 * C441) *
              C442 +
          ((((C8080 + C8081) * C31694 + (C8082 + C8083) * C32727 +
             (C9093 + C9094) * C31686 + (C9095 + C9096) * C32734 +
             (C13104 + C13105) * C31700 + (C13106 + C13107) * C24419) *
                C15051 +
            ((C8084 + C8085) * C31694 + (C8086 + C8087) * C32727 +
             (C9097 + C9098) * C31686 + (C9099 + C9100) * C32734 +
             (C31557 * C1069 + C32866 * C1084 + C31538 * C1070 +
              C32550 * C1085) *
                 C31700 +
             (C31557 * C1087 + C32866 * C1096 + C31538 * C1088 +
              C32550 * C1097) *
                 C24419) *
                C32691) *
               C32603 * C441 -
           (((C13107 + C13106) * C24419 + (C13105 + C13104) * C31700 +
             (C9096 + C9095) * C32734 + (C9094 + C9093) * C31686 +
             (C8083 + C8082) * C32727 + (C8081 + C8080) * C31694) *
                C32691 +
            ((C13313 + C13312) * C24419 + (C13311 + C13310) * C31700 +
             (C9306 + C9305) * C32734 + (C9304 + C9303) * C31686 +
             (C31538 * C133 + C32550 * C142 + C31557 * C132 + C32866 * C141) *
                 C32727 +
             (C31538 * C121 + C32550 * C128 + C31557 * C120 + C32866 * C127) *
                 C31694) *
                C15051) *
               C32603 * C440) *
              C443)) /
        (p * q * std::sqrt(p + q));
    d2ee[41] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C31557 * C119 + C32866 * C126 + C31538 * C120 + C32550 * C127) *
                 C31694 +
             (C31557 * C131 + C32866 * C140 + C31538 * C132 + C32550 * C141) *
                 C32727 +
             (C8867 + C8868) * C31686 + (C8869 + C8870) * C32734 +
             C12874 * C31700 + C12875 * C24419) *
                C15051 +
            ((C7802 + C7803) * C31694 + (C7804 + C7805) * C32727 +
             C9501 * C31686 + C9502 * C32734 + C12876 * C31700 +
             C12877 * C24419) *
                C32691) *
               C530 -
           (((C12894 + C12895) * C24419 + (C12896 + C12897) * C31700 +
             C13508 * C32734 + C13509 * C31686 + C9505 * C32727 +
             C9506 * C31694) *
                C32691 +
            ((C12898 + C12899) * C24419 + (C12900 + C12901) * C31700 +
             (C8879 + C8880) * C32734 + (C8881 + C8882) * C31686 +
             (C8870 + C8869) * C32727 + (C8868 + C8867) * C31694) *
                C15051) *
               C531) *
              C440 +
          (((C9501 * C31694 + C9502 * C32727 + C12876 * C31686 +
             C12877 * C32734 + (C12897 + C12896) * C31700 +
             (C12895 + C12894) * C24419) *
                C15051 +
            (C8682 * C31694 + C8683 * C32727 + (C8874 + C8873) * C31686 +
             (C8872 + C8871) * C32734 +
             (C31557 * C7013 + C32866 * C7017 + C31538 * C7387 +
              C32550 * C7388) *
                 C31700 +
             (C31557 * C7016 + C32866 * C7022 + C31538 * C7389 +
              C32550 * C7390) *
                 C24419) *
                C32691) *
               C531 -
           (((C8871 + C8872) * C24419 + (C8873 + C8874) * C31700 +
             C9503 * C32734 + C9504 * C31686 + (C7809 + C7808) * C32727 +
             (C7807 + C7806) * C31694) *
                C32691 +
            (C13508 * C24419 + C13509 * C31700 + C9505 * C32734 +
             C9506 * C31686 + (C7805 + C7804) * C32727 +
             (C7803 + C7802) * C31694) *
                C15051) *
               C530) *
              C441) *
         C32577) /
        (p * q * std::sqrt(p + q));
    d2ee[42] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C31557 * C119 + C32866 * C126 + C31538 * C120 + C32550 * C127) *
                C31694 +
            (C31557 * C131 + C32866 * C140 + C31538 * C132 + C32550 * C141) *
                C32727 +
            (C8867 + C8868) * C31686 + (C8869 + C8870) * C32734 +
            C12874 * C31700 + C12875 * C24419) *
               C15051 +
           ((C7802 + C7803) * C31694 + (C7804 + C7805) * C32727 +
            C9501 * C31686 + C9502 * C32734 + C12876 * C31700 +
            C12877 * C24419) *
               C32691) *
              C32603 * C209 -
          (((C8871 + C8872) * C24419 + (C8873 + C8874) * C31700 +
            C9503 * C32734 + C9504 * C31686 + (C7809 + C7808) * C32727 +
            (C7807 + C7806) * C31694) *
               C32691 +
           (C13508 * C24419 + C13509 * C31700 + C9505 * C32734 +
            C9506 * C31686 + (C7805 + C7804) * C32727 +
            (C7803 + C7802) * C31694) *
               C15051) *
              C32603 * C210 +
          ((C7818 * C31694 + C7819 * C32727 + C8682 * C31686 + C8683 * C32734 +
            (C8874 + C8873) * C31700 + (C8872 + C8871) * C24419) *
               C15051 +
           (C7820 * C31694 + C7821 * C32727 + (C8379 + C8378) * C31686 +
            (C8377 + C8376) * C32734 +
            (C31557 * C6309 + C32866 * C6313 + C31538 * C7201 +
             C32550 * C7202) *
                C31700 +
            (C31557 * C6314 + C32866 * C6318 + C31538 * C7203 +
             C32550 * C7204) *
                C24419) *
               C32691) *
              C32603 * C211) *
         C32577) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C31557 * C119 + C32866 * C126 + C31538 * C120 + C32550 * C127) *
                C31694 +
            (C31557 * C131 + C32866 * C140 + C31538 * C132 + C32550 * C141) *
                C32727 +
            (C8867 + C8868) * C31686 + (C8869 + C8870) * C32734 +
            C12874 * C31700 + C12875 * C24419) *
               C15051 +
           ((C7802 + C7803) * C31694 + (C7804 + C7805) * C32727 +
            C9501 * C31686 + C9502 * C32734 + C12876 * C31700 +
            C12877 * C24419) *
               C32691) *
              C32603 * C32589 * C110 -
          (((C13107 + C13106) * C24419 + (C13105 + C13104) * C31700 +
            (C9096 + C9095) * C32734 + (C9094 + C9093) * C31686 +
            (C8083 + C8082) * C32727 + (C8081 + C8080) * C31694) *
               C32691 +
           ((C13313 + C13312) * C24419 + (C13311 + C13310) * C31700 +
            (C9306 + C9305) * C32734 + (C9304 + C9303) * C31686 +
            (C31538 * C133 + C32550 * C142 + C31557 * C132 + C32866 * C141) *
                C32727 +
            (C31538 * C121 + C32550 * C128 + C31557 * C120 + C32866 * C127) *
                C31694) *
               C15051) *
              C32603 * C32589 * C111 +
          (((C31557 * C121 + C32866 * C128 + C31538 * C122 + C32550 * C129) *
                C31694 +
            (C31557 * C133 + C32866 * C142 + C31538 * C134 + C32550 * C143) *
                C32727 +
            (C31557 * C320 + C32866 * C335 + C31538 * C319 + C32550 * C334) *
                C31686 +
            (C31557 * C330 + C32866 * C350 + C31538 * C329 + C32550 * C349) *
                C32734 +
            (C31557 * C325 + C32866 * C340 + C31538 * C326 + C32550 * C341) *
                C31700 +
            (C31557 * C345 + C32866 * C355 + C31538 * C346 + C32550 * C356) *
                C24419) *
               C15051 +
           ((C31557 * C215 + C32866 * C230 + C31538 * C214 + C32550 * C229) *
                C31694 +
            (C31557 * C225 + C32866 * C245 + C31538 * C224 + C32550 * C244) *
                C32727 +
            (C31557 * C620 + C32866 * C625 + C31538 * C621 + C32550 * C626) *
                C31686 +
            (C31557 * C630 + C32866 * C635 + C31538 * C631 + C32550 * C636) *
                C32734 +
            (C31557 * C1067 + C32866 * C1079 + C31538 * C2192 +
             C32550 * C2193) *
                C31700 +
            (C31557 * C1082 + C32866 * C1094 + C31538 * C2194 +
             C32550 * C2195) *
                C24419) *
               C32691) *
              C32603 * C32589 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C31557 * C119 + C32866 * C126 + C31538 * C120 + C32550 * C127) *
                C31694 +
            (C31557 * C131 + C32866 * C140 + C31538 * C132 + C32550 * C141) *
                C32727 +
            (C8867 + C8868) * C31686 + (C8869 + C8870) * C32734 +
            C12874 * C31700 + C12875 * C24419) *
               C15051 +
           ((C7802 + C7803) * C31694 + (C7804 + C7805) * C32727 +
            C9501 * C31686 + C9502 * C32734 + C12876 * C31700 +
            C12877 * C24419) *
               C32691) *
              C315 -
          (((C12894 + C12895) * C24419 + (C12896 + C12897) * C31700 +
            C13508 * C32734 + C13509 * C31686 + C9505 * C32727 +
            C9506 * C31694) *
               C32691 +
           ((C12898 + C12899) * C24419 + (C12900 + C12901) * C31700 +
            (C8879 + C8880) * C32734 + (C8881 + C8882) * C31686 +
            (C8870 + C8869) * C32727 + (C8868 + C8867) * C31694) *
               C15051) *
              C316 +
          ((C12874 * C31694 + C12875 * C32727 + C13812 * C31686 +
            C13813 * C32734 + (C13825 + C13824) * C31700 +
            (C13823 + C13822) * C24419) *
               C15051 +
           (C12876 * C31694 + C12877 * C32727 + (C12897 + C12896) * C31686 +
            (C12895 + C12894) * C32734 +
            (C31557 * C7014 + C32866 * C7018 + C31538 * C12241 +
             C32550 * C12242) *
                C31700 +
            (C31557 * C7019 + C32866 * C7023 + C31538 * C12243 +
             C32550 * C12244) *
                C24419) *
               C32691) *
              C317) *
         C32589 * C32577) /
            (p * q * std::sqrt(p + q));
    d2ee[43] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C31557 * C119 + C32866 * C126 + C31538 * C120 + C32550 * C127) *
                 C31694 +
             (C31557 * C131 + C32866 * C140 + C31538 * C132 + C32550 * C141) *
                 C32727 +
             (C8867 + C8868) * C31686 + (C8869 + C8870) * C32734 +
             C12874 * C31700 + C12875 * C24419) *
                C15051 +
            ((C7802 + C7803) * C31694 + (C7804 + C7805) * C32727 +
             C9501 * C31686 + C9502 * C32734 + C12876 * C31700 +
             C12877 * C24419) *
                C32691) *
               C530 -
           (((C12894 + C12895) * C24419 + (C12896 + C12897) * C31700 +
             C13508 * C32734 + C13509 * C31686 + C9505 * C32727 +
             C9506 * C31694) *
                C32691 +
            ((C12898 + C12899) * C24419 + (C12900 + C12901) * C31700 +
             (C8879 + C8880) * C32734 + (C8881 + C8882) * C31686 +
             (C8870 + C8869) * C32727 + (C8868 + C8867) * C31694) *
                C15051) *
               C531) *
              C32589 * C442 +
          ((((C9303 + C9304) * C31694 + (C9305 + C9306) * C32727 +
             (C13310 + C13311) * C31686 + (C13312 + C13313) * C32734 +
             (C14094 + C14095) * C31700 + (C14096 + C14097) * C24419) *
                C15051 +
            ((C9093 + C9094) * C31694 + (C9095 + C9096) * C32727 +
             (C13104 + C13105) * C31686 + (C13106 + C13107) * C32734 +
             (C31557 * C2529 + C32866 * C2532 + C31538 * C2530 +
              C32550 * C2533) *
                 C31700 +
             (C31557 * C2535 + C32866 * C2538 + C31538 * C2536 +
              C32550 * C2539) *
                 C24419) *
                C32691) *
               C531 -
           (((C13107 + C13106) * C24419 + (C13105 + C13104) * C31700 +
             (C9096 + C9095) * C32734 + (C9094 + C9093) * C31686 +
             (C8083 + C8082) * C32727 + (C8081 + C8080) * C31694) *
                C32691 +
            ((C13313 + C13312) * C24419 + (C13311 + C13310) * C31700 +
             (C9306 + C9305) * C32734 + (C9304 + C9303) * C31686 +
             (C31538 * C133 + C32550 * C142 + C31557 * C132 + C32866 * C141) *
                 C32727 +
             (C31538 * C121 + C32550 * C128 + C31557 * C120 + C32866 * C127) *
                 C31694) *
                C15051) *
               C530) *
              C32589 * C443)) /
        (p * q * std::sqrt(p + q));
    d2ee[44] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C31557 * C119 + C32866 * C126 + C31538 * C120 + C32550 * C127) *
                C31694 +
            (C31557 * C131 + C32866 * C140 + C31538 * C132 + C32550 * C141) *
                C32727 +
            (C8867 + C8868) * C31686 + (C8869 + C8870) * C32734 +
            C12874 * C31700 + C12875 * C24419) *
               C15051 +
           ((C7802 + C7803) * C31694 + (C7804 + C7805) * C32727 +
            C9501 * C31686 + C9502 * C32734 + C12876 * C31700 +
            C12877 * C24419) *
               C32691) *
              C32603 * C32589 * C110 -
          (((C13107 + C13106) * C24419 + (C13105 + C13104) * C31700 +
            (C9096 + C9095) * C32734 + (C9094 + C9093) * C31686 +
            (C8083 + C8082) * C32727 + (C8081 + C8080) * C31694) *
               C32691 +
           ((C13313 + C13312) * C24419 + (C13311 + C13310) * C31700 +
            (C9306 + C9305) * C32734 + (C9304 + C9303) * C31686 +
            (C31538 * C133 + C32550 * C142 + C31557 * C132 + C32866 * C141) *
                C32727 +
            (C31538 * C121 + C32550 * C128 + C31557 * C120 + C32866 * C127) *
                C31694) *
               C15051) *
              C32603 * C32589 * C111 +
          (((C31557 * C121 + C32866 * C128 + C31538 * C122 + C32550 * C129) *
                C31694 +
            (C31557 * C133 + C32866 * C142 + C31538 * C134 + C32550 * C143) *
                C32727 +
            (C31557 * C320 + C32866 * C335 + C31538 * C319 + C32550 * C334) *
                C31686 +
            (C31557 * C330 + C32866 * C350 + C31538 * C329 + C32550 * C349) *
                C32734 +
            (C31557 * C325 + C32866 * C340 + C31538 * C326 + C32550 * C341) *
                C31700 +
            (C31557 * C345 + C32866 * C355 + C31538 * C346 + C32550 * C356) *
                C24419) *
               C15051 +
           ((C31557 * C215 + C32866 * C230 + C31538 * C214 + C32550 * C229) *
                C31694 +
            (C31557 * C225 + C32866 * C245 + C31538 * C224 + C32550 * C244) *
                C32727 +
            (C31557 * C620 + C32866 * C625 + C31538 * C621 + C32550 * C626) *
                C31686 +
            (C31557 * C630 + C32866 * C635 + C31538 * C631 + C32550 * C636) *
                C32734 +
            (C31557 * C1067 + C32866 * C1079 + C31538 * C2192 +
             C32550 * C2193) *
                C31700 +
            (C31557 * C1082 + C32866 * C1094 + C31538 * C2194 +
             C32550 * C2195) *
                C24419) *
               C32691) *
              C32603 * C32589 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C31557 * C119 + C32866 * C126 + C31538 * C120 + C32550 * C127) *
                C31694 +
            (C31557 * C131 + C32866 * C140 + C31538 * C132 + C32550 * C141) *
                C32727 +
            (C8867 + C8868) * C31686 + (C8869 + C8870) * C32734 +
            C12874 * C31700 + C12875 * C24419) *
               C15051 +
           ((C7802 + C7803) * C31694 + (C7804 + C7805) * C32727 +
            C9501 * C31686 + C9502 * C32734 + C12876 * C31700 +
            C12877 * C24419) *
               C32691) *
              C32603 * C209 -
          (((C8871 + C8872) * C24419 + (C8873 + C8874) * C31700 +
            C9503 * C32734 + C9504 * C31686 + (C7809 + C7808) * C32727 +
            (C7807 + C7806) * C31694) *
               C32691 +
           (C13508 * C24419 + C13509 * C31700 + C9505 * C32734 +
            C9506 * C31686 + (C7805 + C7804) * C32727 +
            (C7803 + C7802) * C31694) *
               C15051) *
              C32603 * C210 +
          ((C7818 * C31694 + C7819 * C32727 + C8682 * C31686 + C8683 * C32734 +
            (C8874 + C8873) * C31700 + (C8872 + C8871) * C24419) *
               C15051 +
           (C7820 * C31694 + C7821 * C32727 + (C8379 + C8378) * C31686 +
            (C8377 + C8376) * C32734 +
            (C31557 * C6309 + C32866 * C6313 + C31538 * C7201 +
             C32550 * C7202) *
                C31700 +
            (C31557 * C6314 + C32866 * C6318 + C31538 * C7203 +
             C32550 * C7204) *
                C24419) *
               C32691) *
              C32603 * C211) *
         C32577) /
            (p * q * std::sqrt(p + q));
    d2ee[45] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                 (((((C5270 * C119 + C32948 * C126 + C5271 * C120 +
                      C32935 * C127 + C5272 * C121 + C32905 * C128) *
                         C20882 +
                     (C5270 * C131 + C32948 * C140 + C5271 * C132 +
                      C32935 * C141 + C5272 * C133 + C32905 * C142) *
                         C20880 +
                     (C10615 + C10616 + C10617) * C20883 +
                     (C10618 + C10619 + C10620) * C32731) *
                        C15051 +
                    ((C5420 + C5421 + C5422) * C20882 +
                     (C5423 + C5424 + C5425) * C20880 +
                     (C6064 + C6063 + C6062) * C20883 +
                     (C6061 + C6060 + C6059) * C32731) *
                        C32691) *
                       C32603 * C440 -
                   (((C6053 + C6054 + C6055) * C32731 +
                     (C6056 + C6057 + C6058) * C20883 +
                     (C5431 + C5430 + C5429) * C20880 +
                     (C5428 + C5427 + C5426) * C20882) *
                        C32691 +
                    ((C6059 + C6060 + C6061) * C32731 +
                     (C6062 + C6063 + C6064) * C20883 +
                     (C5425 + C5424 + C5423) * C20880 +
                     (C5422 + C5421 + C5420) * C20882) *
                        C15051) *
                       C32603 * C441) *
                      C442 +
                  ((((C5725 + C5726 + C5727) * C20882 +
                     (C5728 + C5729 + C5730) * C20880 +
                     (C26786 + C26787 + C26788) * C20883 +
                     (C26789 + C26790 + C26791) * C32731) *
                        C15051 +
                    ((C5731 + C5732 + C5733) * C20882 +
                     (C5734 + C5735 + C5736) * C20880 +
                     (C5270 * C1063 + C32948 * C1075 + C5271 * C1062 +
                      C32935 * C1074 + C5272 * C1430 + C32905 * C1431) *
                         C20883 +
                     (C5270 * C1072 + C32948 * C1090 + C5271 * C1071 +
                      C32935 * C1089 + C5272 * C1432 + C32905 * C1433) *
                         C32731) *
                        C32691) *
                       C32603 * C441 -
                   (((C26791 + C26790 + C26789) * C32731 +
                     (C26788 + C26787 + C26786) * C20883 +
                     (C5730 + C5729 + C5728) * C20880 +
                     (C5727 + C5726 + C5725) * C20882) *
                        C32691 +
                    ((C10958 + C10957 + C10956) * C32731 +
                     (C10955 + C10954 + C10953) * C20883 +
                     (C5272 * C134 + C32905 * C143 + C5271 * C133 +
                      C32935 * C142 + C5270 * C132 + C32948 * C141) *
                         C20880 +
                     (C5272 * C122 + C32905 * C129 + C5271 * C121 +
                      C32935 * C128 + C5270 * C120 + C32948 * C127) *
                         C20882) *
                        C15051) *
                       C32603 * C440) *
                      C443)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                 (((((C6132 * C119 + C32540 * C126) * C20882 +
                     (C6132 * C131 + C32540 * C140) * C20880 + C7046 * C20883 +
                     C7047 * C32731) *
                        C32958 +
                    (C27384 + C27385 + C27386 + C27387) * C32954 +
                    C27404 * C32944 + C27405 * C32926) *
                       C32603 * C440 -
                   ((C27396 + C27397 + C27398 + C27399) * C32926 +
                    (C27395 + C27394 + C27393 + C27392) * C32944 +
                    (C27391 + C27390 + C27389 + C27388) * C32954 +
                    (C27387 + C27386 + C27385 + C27384) * C32958) *
                       C32603 * C441) *
                      C442 +
                  (((C27634 + C27635 + C27636 + C27637) * C32958 +
                    (C27638 + C27639 + C27640 + C27641) * C32954 +
                    (C27642 + C27643 + C27644 + C27645) * C32944 +
                    (C6429 * C20882 + C6430 * C20880 +
                     (C6132 * C6520 + C32540 * C6521) * C20883 +
                     (C6132 * C6522 + C32540 * C6523) * C32731) *
                        C32926) *
                       C32603 * C441 -
                   ((C27645 + C27644 + C27643 + C27642) * C32926 +
                    (C27641 + C27640 + C27639 + C27638) * C32944 +
                    (C27637 + C27636 + C27635 + C27634) * C32954 +
                    (C7401 * C32731 + C7400 * C20883 +
                     (C6132 * C132 + C32540 * C141) * C20880 +
                     (C6132 * C120 + C32540 * C127) * C20882) *
                        C32958) *
                       C32603 * C440) *
                      C443)) /
                    (p * q * std::sqrt(p + q));
    d2ee[46] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                 (((((C5270 * C119 + C32948 * C126 + C5271 * C120 +
                      C32935 * C127 + C5272 * C121 + C32905 * C128) *
                         C20882 +
                     (C5270 * C131 + C32948 * C140 + C5271 * C132 +
                      C32935 * C141 + C5272 * C133 + C32905 * C142) *
                         C20880 +
                     (C10615 + C10616 + C10617) * C20883 +
                     (C10618 + C10619 + C10620) * C32731) *
                        C15051 +
                    ((C5420 + C5421 + C5422) * C20882 +
                     (C5423 + C5424 + C5425) * C20880 + C27184 * C20883 +
                     C27185 * C32731) *
                        C32691) *
                       C530 -
                   (((C11128 + C11127 + C11126) * C32731 +
                     (C11125 + C11124 + C11123) * C20883 + C27186 * C20880 +
                     C27187 * C20882) *
                        C32691 +
                    ((C10626 + C10625 + C10624) * C32731 +
                     (C10623 + C10622 + C10621) * C20883 +
                     (C10620 + C10619 + C10618) * C20880 +
                     (C10617 + C10616 + C10615) * C20882) *
                        C15051) *
                       C531) *
                      C440 +
                  (((C27184 * C20882 + C27185 * C20880 +
                     (C11123 + C11124 + C11125) * C20883 +
                     (C11126 + C11127 + C11128) * C32731) *
                        C15051 +
                    ((C6058 + C6057 + C6056) * C20882 +
                     (C6055 + C6054 + C6053) * C20880 +
                     (C5270 * C1068 + C32948 * C1083 + C5271 * C1069 +
                      C32935 * C1084 + C5272 * C1070 + C32905 * C1085) *
                         C20883 +
                     (C5270 * C1086 + C32948 * C1095 + C5271 * C1087 +
                      C32935 * C1096 + C5272 * C1088 + C32905 * C1097) *
                         C32731) *
                        C32691) *
                       C531 -
                   (((C6053 + C6054 + C6055) * C32731 +
                     (C6056 + C6057 + C6058) * C20883 +
                     (C5431 + C5430 + C5429) * C20880 +
                     (C5428 + C5427 + C5426) * C20882) *
                        C32691 +
                    (C27186 * C32731 + C27187 * C20883 +
                     (C5425 + C5424 + C5423) * C20880 +
                     (C5422 + C5421 + C5420) * C20882) *
                        C15051) *
                       C530) *
                      C441) *
                 C32577) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                 (((((C6132 * C119 + C32540 * C126) * C20882 +
                     (C6132 * C131 + C32540 * C140) * C20880 + C7046 * C20883 +
                     C7047 * C32731) *
                        C32958 +
                    (C27384 + C27385 + C27386 + C27387) * C32954 +
                    C27404 * C32944 + C27405 * C32926) *
                       C530 -
                   ((C27906 + C27907 + C27908 + C27909) * C32926 +
                    (C27910 + C27911 + C27912 + C27913) * C32944 +
                    (C27914 + C27915 + C27916 + C27917) * C32954 +
                    (C7049 * C32731 + C7048 * C20883 + C7047 * C20880 +
                     C7046 * C20882) *
                        C32958) *
                       C531) *
                      C440 +
                  (((C27917 + C27916 + C27915 + C27914) * C32958 +
                    (C27913 + C27912 + C27911 + C27910) * C32954 +
                    (C27909 + C27908 + C27907 + C27906) * C32944 +
                    (C6628 * C20882 + C6627 * C20880 +
                     (C6132 * C6310 + C32540 * C6315) * C20883 +
                     (C6132 * C6316 + C32540 * C6319) * C32731) *
                        C32926) *
                       C531 -
                   ((C27396 + C27397 + C27398 + C27399) * C32926 +
                    (C27395 + C27394 + C27393 + C27392) * C32944 +
                    (C27391 + C27390 + C27389 + C27388) * C32954 +
                    (C27387 + C27386 + C27385 + C27384) * C32958) *
                       C530) *
                      C441) *
                 C32577) /
                    (p * q * std::sqrt(p + q));
    d2ee[47] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C5270 * C119 + C32948 * C126 + C5271 * C120 + C32935 * C127 +
             C5272 * C121 + C32905 * C128) *
                C20882 +
            (C5270 * C131 + C32948 * C140 + C5271 * C132 + C32935 * C141 +
             C5272 * C133 + C32905 * C142) *
                C20880 +
            (C10615 + C10616 + C10617) * C20883 +
            (C10618 + C10619 + C10620) * C32731) *
               C15051 +
           ((C5420 + C5421 + C5422) * C20882 +
            (C5423 + C5424 + C5425) * C20880 +
            (C6064 + C6063 + C6062) * C20883 +
            (C6061 + C6060 + C6059) * C32731) *
               C32691) *
              C32603 * C209 -
          (((C6053 + C6054 + C6055) * C32731 +
            (C6056 + C6057 + C6058) * C20883 +
            (C5431 + C5430 + C5429) * C20880 +
            (C5428 + C5427 + C5426) * C20882) *
               C32691 +
           ((C6059 + C6060 + C6061) * C32731 +
            (C6062 + C6063 + C6064) * C20883 +
            (C5425 + C5424 + C5423) * C20880 +
            (C5422 + C5421 + C5420) * C20882) *
               C15051) *
              C32603 * C210 +
          ((C5440 * C20882 + C5441 * C20880 + (C6058 + C6057 + C6056) * C20883 +
            (C6055 + C6054 + C6053) * C32731) *
               C15051 +
           ((C5437 + C5436 + C5435) * C20882 +
            (C5434 + C5433 + C5432) * C20880 +
            (C5270 * C1580 + C32948 * C1583 + C5271 * C1581 + C32935 * C1584 +
             C5272 * C1582 + C32905 * C1585) *
                C20883 +
            (C5270 * C1586 + C32948 * C1589 + C5271 * C1587 + C32935 * C1590 +
             C5272 * C1588 + C32905 * C1591) *
                C32731) *
               C32691) *
              C32603 * C211) *
         C32577) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C5270 * C119 + C32948 * C126 + C5271 * C120 + C32935 * C127 +
             C5272 * C121 + C32905 * C128) *
                C20882 +
            (C5270 * C131 + C32948 * C140 + C5271 * C132 + C32935 * C141 +
             C5272 * C133 + C32905 * C142) *
                C20880 +
            (C10615 + C10616 + C10617) * C20883 +
            (C10618 + C10619 + C10620) * C32731) *
               C15051 +
           ((C5420 + C5421 + C5422) * C20882 +
            (C5423 + C5424 + C5425) * C20880 +
            (C6064 + C6063 + C6062) * C20883 +
            (C6061 + C6060 + C6059) * C32731) *
               C32691) *
              C32603 * C32589 * C110 -
          (((C5272 * C631 + C32905 * C636 + C5271 * C630 + C32935 * C635 +
             C5270 * C629 + C32948 * C634) *
                C32731 +
            (C5272 * C621 + C32905 * C626 + C5271 * C620 + C32935 * C625 +
             C5270 * C619 + C32948 * C624) *
                C20883 +
            (C5730 + C5729 + C5728) * C20880 +
            (C5727 + C5726 + C5725) * C20882) *
               C32691 +
           ((C10958 + C10957 + C10956) * C32731 +
            (C10955 + C10954 + C10953) * C20883 +
            (C5272 * C134 + C32905 * C143 + C5271 * C133 + C32935 * C142 +
             C5270 * C132 + C32948 * C141) *
                C20880 +
            (C5272 * C122 + C32905 * C129 + C5271 * C121 + C32935 * C128 +
             C5270 * C120 + C32948 * C127) *
                C20882) *
               C15051) *
              C32603 * C32589 * C111 +
          (((C5270 * C121 + C32948 * C128 + C5271 * C122 + C32935 * C129 +
             C5272 * C123 + C32905 * C130) *
                C20882 +
            (C5270 * C133 + C32948 * C142 + C5271 * C134 + C32935 * C143 +
             C5272 * C135 + C32905 * C144) *
                C20880 +
            (C5270 * C320 + C32948 * C335 + C5271 * C319 + C32935 * C334 +
             C5272 * C318 + C32905 * C333) *
                C20883 +
            (C5270 * C330 + C32948 * C350 + C5271 * C329 + C32935 * C349 +
             C5272 * C328 + C32905 * C348) *
                C32731) *
               C15051 +
           ((C5270 * C215 + C32948 * C230 + C5271 * C214 + C32935 * C229 +
             C5272 * C213 + C32905 * C228) *
                C20882 +
            (C5270 * C225 + C32948 * C245 + C5271 * C224 + C32935 * C244 +
             C5272 * C223 + C32905 * C243) *
                C20880 +
            (C5270 * C620 + C32948 * C625 + C5271 * C621 + C32935 * C626 +
             C5272 * C622 + C32905 * C627) *
                C20883 +
            (C5270 * C630 + C32948 * C635 + C5271 * C631 + C32935 * C636 +
             C5272 * C632 + C32905 * C637) *
                C32731) *
               C32691) *
              C32603 * C32589 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C5270 * C119 + C32948 * C126 + C5271 * C120 + C32935 * C127 +
             C5272 * C121 + C32905 * C128) *
                C20882 +
            (C5270 * C131 + C32948 * C140 + C5271 * C132 + C32935 * C141 +
             C5272 * C133 + C32905 * C142) *
                C20880 +
            (C10615 + C10616 + C10617) * C20883 +
            (C10618 + C10619 + C10620) * C32731) *
               C15051 +
           ((C5420 + C5421 + C5422) * C20882 +
            (C5423 + C5424 + C5425) * C20880 +
            (C6064 + C6063 + C6062) * C20883 +
            (C6061 + C6060 + C6059) * C32731) *
               C32691) *
              C315 -
          (((C11128 + C11127 + C11126) * C32731 +
            (C11125 + C11124 + C11123) * C20883 +
            (C6059 + C6060 + C6061) * C20880 +
            (C6062 + C6063 + C6064) * C20882) *
               C32691 +
           ((C10626 + C10625 + C10624) * C32731 +
            (C10623 + C10622 + C10621) * C20883 +
            (C10620 + C10619 + C10618) * C20880 +
            (C10617 + C10616 + C10615) * C20882) *
               C15051) *
              C316 +
          ((C10635 * C20882 + C10636 * C20880 +
            (C10632 + C10631 + C10630) * C20883 +
            (C10629 + C10628 + C10627) * C32731) *
               C15051 +
           ((C11123 + C11124 + C11125) * C20882 +
            (C11126 + C11127 + C11128) * C20880 +
            (C5270 * C2528 + C32948 * C2531 + C5271 * C2529 + C32935 * C2532 +
             C5272 * C2530 + C32905 * C2533) *
                C20883 +
            (C5270 * C2534 + C32948 * C2537 + C5271 * C2535 + C32935 * C2538 +
             C5272 * C2536 + C32905 * C2539) *
                C32731) *
               C32691) *
              C317) *
         C32589 * C32577) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C6132 * C119 + C32540 * C126) * C20882 +
            (C6132 * C131 + C32540 * C140) * C20880 + C7046 * C20883 +
            C7047 * C32731) *
               C32958 +
           (C6224 * C20882 + C6225 * C20880 + C6634 * C20883 + C6633 * C32731) *
               C32954 +
           (C6226 * C20882 + C6227 * C20880 + C6632 * C20883 + C6631 * C32731) *
               C32944 +
           (C6228 * C20882 + C6229 * C20880 + C6630 * C20883 + C6629 * C32731) *
               C32926) *
              C32603 * C32589 * C110 -
          ((C9968 * C32731 + C9967 * C20883 + C6428 * C20880 + C6427 * C20882) *
               C32926 +
           (C7231 * C32731 + C7230 * C20883 + C6426 * C20880 + C6425 * C20882) *
               C32944 +
           (C7227 * C32731 + C7226 * C20883 + C6424 * C20880 + C6423 * C20882) *
               C32954 +
           (C7401 * C32731 + C7400 * C20883 +
            (C6132 * C132 + C32540 * C141) * C20880 +
            (C6132 * C120 + C32540 * C127) * C20882) *
               C32958) *
              C32603 * C32589 * C111 +
          (((C6132 * C121 + C32540 * C128) * C20882 +
            (C6132 * C133 + C32540 * C142) * C20880 +
            (C6132 * C320 + C32540 * C335) * C20883 +
            (C6132 * C330 + C32540 * C350) * C32731) *
               C32958 +
           ((C6132 * C215 + C32540 * C230) * C20882 +
            (C6132 * C225 + C32540 * C245) * C20880 +
            (C6132 * C620 + C32540 * C625) * C20883 +
            (C6132 * C630 + C32540 * C635) * C32731) *
               C32954 +
           ((C6132 * C220 + C32540 * C235) * C20882 +
            (C6132 * C240 + C32540 * C250) * C20880 +
            (C6132 * C1062 + C32540 * C1074) * C20883 +
            (C6132 * C1071 + C32540 * C1089) * C32731) *
               C32944 +
           ((C6132 * C867 + C32540 * C876) * C20882 +
            (C6132 * C873 + C32540 * C885) * C20880 +
            (C6132 * C1582 + C32540 * C1585) * C20883 +
            (C6132 * C1588 + C32540 * C1591) * C32731) *
               C32926) *
              C32603 * C32589 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C6132 * C119 + C32540 * C126) * C20882 +
            (C6132 * C131 + C32540 * C140) * C20880 + C7046 * C20883 +
            C7047 * C32731) *
               C32958 +
           (C27384 + C27385 + C27386 + C27387) * C32954 + C27404 * C32944 +
           C27405 * C32926) *
              C32603 * C209 -
          ((C27396 + C27397 + C27398 + C27399) * C32926 +
           (C27395 + C27394 + C27393 + C27392) * C32944 +
           (C27391 + C27390 + C27389 + C27388) * C32954 +
           (C27387 + C27386 + C27385 + C27384) * C32958) *
              C32603 * C210 +
          (C27404 * C32958 + C27405 * C32954 +
           (C27399 + C27398 + C27397 + C27396) * C32944 +
           (C6233 * C20882 + C6232 * C20880 +
            (C6132 * C6606 + C32540 * C6607) * C20883 +
            (C6132 * C6608 + C32540 * C6609) * C32731) *
               C32926) *
              C32603 * C211) *
         C32577) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C6132 * C119 + C32540 * C126) * C20882 +
            (C6132 * C131 + C32540 * C140) * C20880 + C7046 * C20883 +
            C7047 * C32731) *
               C32958 +
           (C27384 + C27385 + C27386 + C27387) * C32954 + C27404 * C32944 +
           C27405 * C32926) *
              C315 -
          ((C6892 * C32731 + C6893 * C20883 + C6629 * C20880 + C6630 * C20882) *
               C32926 +
           (C6891 * C32731 + C6890 * C20883 + C6631 * C20880 + C6632 * C20882) *
               C32944 +
           (C6888 * C32731 + C6887 * C20883 + C6633 * C20880 + C6634 * C20882) *
               C32954 +
           (C7049 * C32731 + C7048 * C20883 + C7047 * C20880 + C7046 * C20882) *
               C32958) *
              C316 +
          ((C7048 * C20882 + C7049 * C20880 + C7055 * C20883 + C7054 * C32731) *
               C32958 +
           (C6887 * C20882 + C6888 * C20880 + C7053 * C20883 + C7052 * C32731) *
               C32954 +
           (C6890 * C20882 + C6891 * C20880 + C7051 * C20883 + C7050 * C32731) *
               C32944 +
           (C6893 * C20882 + C6892 * C20880 +
            (C6132 * C7549 + C32540 * C7550) * C20883 +
            (C6132 * C7551 + C32540 * C7552) * C32731) *
               C32926) *
              C317) *
         C32589 * C32577) /
            (p * q * std::sqrt(p + q));
    d2ee[48] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                 (((((C5270 * C119 + C32948 * C126 + C5271 * C120 +
                      C32935 * C127 + C5272 * C121 + C32905 * C128) *
                         C20882 +
                     (C5270 * C131 + C32948 * C140 + C5271 * C132 +
                      C32935 * C141 + C5272 * C133 + C32905 * C142) *
                         C20880 +
                     (C10615 + C10616 + C10617) * C20883 +
                     (C10618 + C10619 + C10620) * C32731) *
                        C15051 +
                    ((C5420 + C5421 + C5422) * C20882 +
                     (C5423 + C5424 + C5425) * C20880 +
                     (C6064 + C6063 + C6062) * C20883 +
                     (C6061 + C6060 + C6059) * C32731) *
                        C32691) *
                       C530 -
                   (((C11128 + C11127 + C11126) * C32731 +
                     (C11125 + C11124 + C11123) * C20883 +
                     (C6059 + C6060 + C6061) * C20880 +
                     (C6062 + C6063 + C6064) * C20882) *
                        C32691 +
                    ((C10626 + C10625 + C10624) * C32731 +
                     (C10623 + C10622 + C10621) * C20883 +
                     (C10620 + C10619 + C10618) * C20880 +
                     (C10617 + C10616 + C10615) * C20882) *
                        C15051) *
                       C531) *
                      C32589 * C442 +
                  ((((C10953 + C10954 + C10955) * C20882 +
                     (C10956 + C10957 + C10958) * C20880 +
                     (C10959 + C10960 + C10961) * C20883 +
                     (C10962 + C10963 + C10964) * C32731) *
                        C15051 +
                    ((C26786 + C26787 + C26788) * C20882 +
                     (C26789 + C26790 + C26791) * C20880 +
                     (C5270 * C1066 + C32948 * C1078 + C5271 * C1067 +
                      C32935 * C1079 + C5272 * C2192 + C32905 * C2193) *
                         C20883 +
                     (C5270 * C1081 + C32948 * C1093 + C5271 * C1082 +
                      C32935 * C1094 + C5272 * C2194 + C32905 * C2195) *
                         C32731) *
                        C32691) *
                       C531 -
                   (((C26791 + C26790 + C26789) * C32731 +
                     (C26788 + C26787 + C26786) * C20883 +
                     (C5730 + C5729 + C5728) * C20880 +
                     (C5727 + C5726 + C5725) * C20882) *
                        C32691 +
                    ((C10958 + C10957 + C10956) * C32731 +
                     (C10955 + C10954 + C10953) * C20883 +
                     (C5272 * C134 + C32905 * C143 + C5271 * C133 +
                      C32935 * C142 + C5270 * C132 + C32948 * C141) *
                         C20880 +
                     (C5272 * C122 + C32905 * C129 + C5271 * C121 +
                      C32935 * C128 + C5270 * C120 + C32948 * C127) *
                         C20882) *
                        C15051) *
                       C530) *
                      C32589 * C443)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                 (((((C6132 * C119 + C32540 * C126) * C20882 +
                     (C6132 * C131 + C32540 * C140) * C20880 + C7046 * C20883 +
                     C7047 * C32731) *
                        C32958 +
                    (C27384 + C27385 + C27386 + C27387) * C32954 +
                    C27404 * C32944 + C27405 * C32926) *
                       C530 -
                   ((C6892 * C32731 + C6893 * C20883 + C6629 * C20880 +
                     C6630 * C20882) *
                        C32926 +
                    (C6891 * C32731 + C6890 * C20883 + C6631 * C20880 +
                     C6632 * C20882) *
                        C32944 +
                    (C6888 * C32731 + C6887 * C20883 + C6633 * C20880 +
                     C6634 * C20882) *
                        C32954 +
                    (C7049 * C32731 + C7048 * C20883 + C7047 * C20880 +
                     C7046 * C20882) *
                        C32958) *
                       C531) *
                      C32589 * C442 +
                  (((C7400 * C20882 + C7401 * C20880 + C7402 * C20883 +
                     C7403 * C32731) *
                        C32958 +
                    (C7226 * C20882 + C7227 * C20880 + C7228 * C20883 +
                     C7229 * C32731) *
                        C32954 +
                    (C7230 * C20882 + C7231 * C20880 + C7232 * C20883 +
                     C7233 * C32731) *
                        C32944 +
                    (C9967 * C20882 + C9968 * C20880 +
                     (C6132 * C7201 + C32540 * C7202) * C20883 +
                     (C6132 * C7203 + C32540 * C7204) * C32731) *
                        C32926) *
                       C531 -
                   ((C27645 + C27644 + C27643 + C27642) * C32926 +
                    (C27641 + C27640 + C27639 + C27638) * C32944 +
                    (C27637 + C27636 + C27635 + C27634) * C32954 +
                    (C7401 * C32731 + C7400 * C20883 +
                     (C6132 * C132 + C32540 * C141) * C20880 +
                     (C6132 * C120 + C32540 * C127) * C20882) *
                        C32958) *
                       C530) *
                      C32589 * C443)) /
                    (p * q * std::sqrt(p + q));
    d2ee[49] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C5270 * C119 + C32948 * C126 + C5271 * C120 + C32935 * C127 +
             C5272 * C121 + C32905 * C128) *
                C20882 +
            (C5270 * C131 + C32948 * C140 + C5271 * C132 + C32935 * C141 +
             C5272 * C133 + C32905 * C142) *
                C20880 +
            (C10615 + C10616 + C10617) * C20883 +
            (C10618 + C10619 + C10620) * C32731) *
               C15051 +
           ((C5420 + C5421 + C5422) * C20882 +
            (C5423 + C5424 + C5425) * C20880 +
            (C6064 + C6063 + C6062) * C20883 +
            (C6061 + C6060 + C6059) * C32731) *
               C32691) *
              C32603 * C32589 * C110 -
          (((C5272 * C631 + C32905 * C636 + C5271 * C630 + C32935 * C635 +
             C5270 * C629 + C32948 * C634) *
                C32731 +
            (C5272 * C621 + C32905 * C626 + C5271 * C620 + C32935 * C625 +
             C5270 * C619 + C32948 * C624) *
                C20883 +
            (C5730 + C5729 + C5728) * C20880 +
            (C5727 + C5726 + C5725) * C20882) *
               C32691 +
           ((C10958 + C10957 + C10956) * C32731 +
            (C10955 + C10954 + C10953) * C20883 +
            (C5272 * C134 + C32905 * C143 + C5271 * C133 + C32935 * C142 +
             C5270 * C132 + C32948 * C141) *
                C20880 +
            (C5272 * C122 + C32905 * C129 + C5271 * C121 + C32935 * C128 +
             C5270 * C120 + C32948 * C127) *
                C20882) *
               C15051) *
              C32603 * C32589 * C111 +
          (((C5270 * C121 + C32948 * C128 + C5271 * C122 + C32935 * C129 +
             C5272 * C123 + C32905 * C130) *
                C20882 +
            (C5270 * C133 + C32948 * C142 + C5271 * C134 + C32935 * C143 +
             C5272 * C135 + C32905 * C144) *
                C20880 +
            (C5270 * C320 + C32948 * C335 + C5271 * C319 + C32935 * C334 +
             C5272 * C318 + C32905 * C333) *
                C20883 +
            (C5270 * C330 + C32948 * C350 + C5271 * C329 + C32935 * C349 +
             C5272 * C328 + C32905 * C348) *
                C32731) *
               C15051 +
           ((C5270 * C215 + C32948 * C230 + C5271 * C214 + C32935 * C229 +
             C5272 * C213 + C32905 * C228) *
                C20882 +
            (C5270 * C225 + C32948 * C245 + C5271 * C224 + C32935 * C244 +
             C5272 * C223 + C32905 * C243) *
                C20880 +
            (C5270 * C620 + C32948 * C625 + C5271 * C621 + C32935 * C626 +
             C5272 * C622 + C32905 * C627) *
                C20883 +
            (C5270 * C630 + C32948 * C635 + C5271 * C631 + C32935 * C636 +
             C5272 * C632 + C32905 * C637) *
                C32731) *
               C32691) *
              C32603 * C32589 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C5270 * C119 + C32948 * C126 + C5271 * C120 + C32935 * C127 +
             C5272 * C121 + C32905 * C128) *
                C20882 +
            (C5270 * C131 + C32948 * C140 + C5271 * C132 + C32935 * C141 +
             C5272 * C133 + C32905 * C142) *
                C20880 +
            (C10615 + C10616 + C10617) * C20883 +
            (C10618 + C10619 + C10620) * C32731) *
               C15051 +
           ((C5420 + C5421 + C5422) * C20882 +
            (C5423 + C5424 + C5425) * C20880 +
            (C6064 + C6063 + C6062) * C20883 +
            (C6061 + C6060 + C6059) * C32731) *
               C32691) *
              C32603 * C209 -
          (((C6053 + C6054 + C6055) * C32731 +
            (C6056 + C6057 + C6058) * C20883 +
            (C5431 + C5430 + C5429) * C20880 +
            (C5428 + C5427 + C5426) * C20882) *
               C32691 +
           ((C6059 + C6060 + C6061) * C32731 +
            (C6062 + C6063 + C6064) * C20883 +
            (C5425 + C5424 + C5423) * C20880 +
            (C5422 + C5421 + C5420) * C20882) *
               C15051) *
              C32603 * C210 +
          ((C5440 * C20882 + C5441 * C20880 + (C6058 + C6057 + C6056) * C20883 +
            (C6055 + C6054 + C6053) * C32731) *
               C15051 +
           ((C5437 + C5436 + C5435) * C20882 +
            (C5434 + C5433 + C5432) * C20880 +
            (C5270 * C1580 + C32948 * C1583 + C5271 * C1581 + C32935 * C1584 +
             C5272 * C1582 + C32905 * C1585) *
                C20883 +
            (C5270 * C1586 + C32948 * C1589 + C5271 * C1587 + C32935 * C1590 +
             C5272 * C1588 + C32905 * C1591) *
                C32731) *
               C32691) *
              C32603 * C211) *
         C32577) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C6132 * C119 + C32540 * C126) * C20882 +
            (C6132 * C131 + C32540 * C140) * C20880 + C7046 * C20883 +
            C7047 * C32731) *
               C32958 +
           (C6224 * C20882 + C6225 * C20880 + C6634 * C20883 + C6633 * C32731) *
               C32954 +
           (C6226 * C20882 + C6227 * C20880 + C6632 * C20883 + C6631 * C32731) *
               C32944 +
           (C6228 * C20882 + C6229 * C20880 + C6630 * C20883 + C6629 * C32731) *
               C32926) *
              C32603 * C32589 * C110 -
          ((C9968 * C32731 + C9967 * C20883 + C6428 * C20880 + C6427 * C20882) *
               C32926 +
           (C7231 * C32731 + C7230 * C20883 + C6426 * C20880 + C6425 * C20882) *
               C32944 +
           (C7227 * C32731 + C7226 * C20883 + C6424 * C20880 + C6423 * C20882) *
               C32954 +
           (C7401 * C32731 + C7400 * C20883 +
            (C6132 * C132 + C32540 * C141) * C20880 +
            (C6132 * C120 + C32540 * C127) * C20882) *
               C32958) *
              C32603 * C32589 * C111 +
          (((C6132 * C121 + C32540 * C128) * C20882 +
            (C6132 * C133 + C32540 * C142) * C20880 +
            (C6132 * C320 + C32540 * C335) * C20883 +
            (C6132 * C330 + C32540 * C350) * C32731) *
               C32958 +
           ((C6132 * C215 + C32540 * C230) * C20882 +
            (C6132 * C225 + C32540 * C245) * C20880 +
            (C6132 * C620 + C32540 * C625) * C20883 +
            (C6132 * C630 + C32540 * C635) * C32731) *
               C32954 +
           ((C6132 * C220 + C32540 * C235) * C20882 +
            (C6132 * C240 + C32540 * C250) * C20880 +
            (C6132 * C1062 + C32540 * C1074) * C20883 +
            (C6132 * C1071 + C32540 * C1089) * C32731) *
               C32944 +
           ((C6132 * C867 + C32540 * C876) * C20882 +
            (C6132 * C873 + C32540 * C885) * C20880 +
            (C6132 * C1582 + C32540 * C1585) * C20883 +
            (C6132 * C1588 + C32540 * C1591) * C32731) *
               C32926) *
              C32603 * C32589 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C6132 * C119 + C32540 * C126) * C20882 +
            (C6132 * C131 + C32540 * C140) * C20880 + C7046 * C20883 +
            C7047 * C32731) *
               C32958 +
           (C27384 + C27385 + C27386 + C27387) * C32954 + C27404 * C32944 +
           C27405 * C32926) *
              C32603 * C209 -
          ((C27396 + C27397 + C27398 + C27399) * C32926 +
           (C27395 + C27394 + C27393 + C27392) * C32944 +
           (C27391 + C27390 + C27389 + C27388) * C32954 +
           (C27387 + C27386 + C27385 + C27384) * C32958) *
              C32603 * C210 +
          (C27404 * C32958 + C27405 * C32954 +
           (C27399 + C27398 + C27397 + C27396) * C32944 +
           (C6233 * C20882 + C6232 * C20880 +
            (C6132 * C6606 + C32540 * C6607) * C20883 +
            (C6132 * C6608 + C32540 * C6609) * C32731) *
               C32926) *
              C32603 * C211) *
         C32577) /
            (p * q * std::sqrt(p + q));
    d2ee[50] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31557 * C119 + C32866 * C126 + C31538 * C120 + C32550 * C127) *
                 C118 +
             (C31557 * C131 + C32866 * C140 + C31538 * C132 + C32550 * C141) *
                 C32644) *
                C7665 +
            ((C7802 + C7803) * C118 + (C7804 + C7805) * C32644) * C7666 +
            C7826 * C7667 + C7827 * C32926) *
               C32603 * C440 -
           (((C7814 + C7815) * C32644 + (C7816 + C7817) * C118) * C32926 +
            ((C7813 + C7812) * C32644 + (C7811 + C7810) * C118) * C7667 +
            ((C7809 + C7808) * C32644 + (C7807 + C7806) * C118) * C7666 +
            ((C7805 + C7804) * C32644 + (C7803 + C7802) * C118) * C7665) *
               C32603 * C441) *
              C442 +
          ((((C8080 + C8081) * C118 + (C8082 + C8083) * C32644) * C7665 +
            ((C8084 + C8085) * C118 + (C8086 + C8087) * C32644) * C7666 +
            ((C8088 + C8089) * C118 + (C8090 + C8091) * C32644) * C7667 +
            ((C31557 * C871 + C32866 * C880 + C31538 * C872 + C32550 * C881) *
                 C118 +
             (C31557 * C883 + C32866 * C889 + C31538 * C884 + C32550 * C890) *
                 C32644) *
                C32926) *
               C32603 * C441 -
           (((C8091 + C8090) * C32644 + (C8089 + C8088) * C118) * C32926 +
            ((C8087 + C8086) * C32644 + (C8085 + C8084) * C118) * C7667 +
            ((C8083 + C8082) * C32644 + (C8081 + C8080) * C118) * C7666 +
            ((C31538 * C133 + C32550 * C142 + C31557 * C132 + C32866 * C141) *
                 C32644 +
             (C31538 * C121 + C32550 * C128 + C31557 * C120 + C32866 * C127) *
                 C118) *
                C7665) *
               C32603 * C440) *
              C443)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2662 * C119 + C2656 * C126 + C2663 * C120 + C2657 * C127 +
              C2664 * C121 + C2658 * C128 + C2665 * C122 + C32920 * C129) *
                 C118 +
             (C2662 * C131 + C2656 * C140 + C2663 * C132 + C2657 * C141 +
              C2664 * C133 + C2658 * C142 + C2665 * C134 + C32920 * C143) *
                 C32644) *
                C32885 +
            ((C2797 + C2798 + C2799 + C2800) * C118 +
             (C2801 + C2802 + C2803 + C2804) * C32644) *
                C32691) *
               C32603 * C440 -
           (((C2805 + C2806 + C2807 + C2808) * C32644 +
             (C2809 + C2810 + C2811 + C2812) * C118) *
                C32691 +
            ((C2804 + C2803 + C2802 + C2801) * C32644 +
             (C2800 + C2799 + C2798 + C2797) * C118) *
                C32885) *
               C32603 * C441) *
              C442 +
          ((((C3057 + C3058 + C3059 + C3060) * C118 +
             (C3061 + C3062 + C3063 + C3064) * C32644) *
                C32885 +
            ((C2662 * C219 + C2656 * C234 + C2663 * C220 + C2657 * C235 +
              C2664 * C221 + C2658 * C236 + C2665 * C222 + C32920 * C237) *
                 C118 +
             (C2662 * C239 + C2656 * C249 + C2663 * C240 + C2657 * C250 +
              C2664 * C241 + C2658 * C251 + C2665 * C242 + C32920 * C252) *
                 C32644) *
                C32691) *
               C32603 * C441 -
           (((C3064 + C3063 + C3062 + C3061) * C32644 +
             (C3060 + C3059 + C3058 + C3057) * C118) *
                C32691 +
            ((C2665 * C135 + C32920 * C144 + C2664 * C134 + C2658 * C143 +
              C2663 * C133 + C2657 * C142 + C2662 * C132 + C2656 * C141) *
                 C32644 +
             (C2665 * C123 + C32920 * C130 + C2664 * C122 + C2658 * C129 +
              C2663 * C121 + C2657 * C128 + C2662 * C120 + C2656 * C127) *
                 C118) *
                C32885) *
               C32603 * C440) *
              C443)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C31557 * C119 + C32866 * C126 + C31538 * C120 + C32550 * C127) *
                 C10355 +
             (C31557 * C131 + C32866 * C140 + C31538 * C132 + C32550 * C141) *
                 C10352 +
             (C8867 + C8868) * C10356 + (C8869 + C8870) * C10353 +
             C12874 * C10357 + C12875 * C32919) *
                C32885 +
            ((C7802 + C7803) * C10355 + (C7804 + C7805) * C10352 +
             C9501 * C10356 + C9502 * C10353 + C12876 * C10357 +
             C12877 * C32919) *
                C32691) *
               C32603 * C440 -
           (((C8871 + C8872) * C32919 + (C8873 + C8874) * C10357 +
             C9503 * C10353 + C9504 * C10356 + (C7809 + C7808) * C10352 +
             (C7807 + C7806) * C10355) *
                C32691 +
            ((C8875 + C8876) * C32919 + (C8877 + C8878) * C10357 +
             C9505 * C10353 + C9506 * C10356 + (C7805 + C7804) * C10352 +
             (C7803 + C7802) * C10355) *
                C32885) *
               C32603 * C441) *
              C442 +
          ((((C8080 + C8081) * C10355 + (C8082 + C8083) * C10352 +
             (C9093 + C9094) * C10356 + (C9095 + C9096) * C10353 +
             (C13104 + C13105) * C10357 + (C13106 + C13107) * C32919) *
                C32885 +
            ((C8084 + C8085) * C10355 + (C8086 + C8087) * C10352 +
             (C9097 + C9098) * C10356 + (C9099 + C9100) * C10353 +
             (C31557 * C1069 + C32866 * C1084 + C31538 * C1070 +
              C32550 * C1085) *
                 C10357 +
             (C31557 * C1087 + C32866 * C1096 + C31538 * C1088 +
              C32550 * C1097) *
                 C32919) *
                C32691) *
               C32603 * C441 -
           (((C13107 + C13106) * C32919 + (C13105 + C13104) * C10357 +
             (C9096 + C9095) * C10353 + (C9094 + C9093) * C10356 +
             (C8083 + C8082) * C10352 + (C8081 + C8080) * C10355) *
                C32691 +
            ((C31538 * C345 + C32550 * C355 + C31557 * C344 + C32866 * C354) *
                 C32919 +
             (C31538 * C325 + C32550 * C340 + C31557 * C324 + C32866 * C339) *
                 C10357 +
             (C9306 + C9305) * C10353 + (C9304 + C9303) * C10356 +
             (C31538 * C133 + C32550 * C142 + C31557 * C132 + C32866 * C141) *
                 C10352 +
             (C31538 * C121 + C32550 * C128 + C31557 * C120 + C32866 * C127) *
                 C10355) *
                C32885) *
               C32603 * C440) *
              C443)) /
            (p * q * std::sqrt(p + q));
    d2ee[51] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31557 * C119 + C32866 * C126 + C31538 * C120 + C32550 * C127) *
                 C118 +
             (C31557 * C131 + C32866 * C140 + C31538 * C132 + C32550 * C141) *
                 C32644) *
                C7665 +
            ((C7802 + C7803) * C118 + (C7804 + C7805) * C32644) * C7666 +
            C7826 * C7667 + C7827 * C32926) *
               C530 -
           (((C8376 + C8377) * C32644 + (C8378 + C8379) * C118) * C32926 +
            ((C8380 + C8381) * C32644 + (C8382 + C8383) * C118) * C7667 +
            ((C8384 + C8385) * C32644 + (C8386 + C8387) * C118) * C7666 +
            ((C31538 * C331 + C32550 * C351 + C31557 * C332 + C32866 * C352) *
                 C32644 +
             (C31538 * C321 + C32550 * C336 + C31557 * C322 + C32866 * C337) *
                 C118) *
                C7665) *
               C531) *
              C440 +
          ((((C8387 + C8386) * C118 + (C8385 + C8384) * C32644) * C7665 +
            ((C8383 + C8382) * C118 + (C8381 + C8380) * C32644) * C7666 +
            ((C8379 + C8378) * C118 + (C8377 + C8376) * C32644) * C7667 +
            ((C31557 * C6308 + C32866 * C6312 + C31538 * C6520 +
              C32550 * C6521) *
                 C118 +
             (C31557 * C6311 + C32866 * C6317 + C31538 * C6522 +
              C32550 * C6523) *
                 C32644) *
                C32926) *
               C531 -
           (((C7814 + C7815) * C32644 + (C7816 + C7817) * C118) * C32926 +
            ((C7813 + C7812) * C32644 + (C7811 + C7810) * C118) * C7667 +
            ((C7809 + C7808) * C32644 + (C7807 + C7806) * C118) * C7666 +
            ((C7805 + C7804) * C32644 + (C7803 + C7802) * C118) * C7665) *
               C530) *
              C441) *
         C32577) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2662 * C119 + C2656 * C126 + C2663 * C120 + C2657 * C127 +
              C2664 * C121 + C2658 * C128 + C2665 * C122 + C32920 * C129) *
                 C118 +
             (C2662 * C131 + C2656 * C140 + C2663 * C132 + C2657 * C141 +
              C2664 * C133 + C2658 * C142 + C2665 * C134 + C32920 * C143) *
                 C32644) *
                C32885 +
            ((C2797 + C2798 + C2799 + C2800) * C118 +
             (C2801 + C2802 + C2803 + C2804) * C32644) *
                C32691) *
               C530 -
           (((C3341 + C3342 + C3343 + C3344) * C32644 +
             (C3345 + C3346 + C3347 + C3348) * C118) *
                C32691 +
            ((C2665 * C329 + C32920 * C349 + C2664 * C330 + C2658 * C350 +
              C2663 * C331 + C2657 * C351 + C2662 * C332 + C2656 * C352) *
                 C32644 +
             (C2665 * C319 + C32920 * C334 + C2664 * C320 + C2658 * C335 +
              C2663 * C321 + C2657 * C336 + C2662 * C322 + C2656 * C337) *
                 C118) *
                C32885) *
               C531) *
              C440 +
          ((((C3348 + C3347 + C3346 + C3345) * C118 +
             (C3344 + C3343 + C3342 + C3341) * C32644) *
                C32885 +
            ((C2662 * C1064 + C2656 * C1076 + C2663 * C1063 + C2657 * C1075 +
              C2664 * C1062 + C2658 * C1074 + C2665 * C1430 + C32920 * C1431) *
                 C118 +
             (C2662 * C1073 + C2656 * C1091 + C2663 * C1072 + C2657 * C1090 +
              C2664 * C1071 + C2658 * C1089 + C2665 * C1432 + C32920 * C1433) *
                 C32644) *
                C32691) *
               C531 -
           (((C2805 + C2806 + C2807 + C2808) * C32644 +
             (C2809 + C2810 + C2811 + C2812) * C118) *
                C32691 +
            ((C2804 + C2803 + C2802 + C2801) * C32644 +
             (C2800 + C2799 + C2798 + C2797) * C118) *
                C32885) *
               C530) *
              C441) *
         C32577) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C31557 * C119 + C32866 * C126 + C31538 * C120 + C32550 * C127) *
                 C10355 +
             (C31557 * C131 + C32866 * C140 + C31538 * C132 + C32550 * C141) *
                 C10352 +
             (C8867 + C8868) * C10356 + (C8869 + C8870) * C10353 +
             C12874 * C10357 + C12875 * C32919) *
                C32885 +
            ((C7802 + C7803) * C10355 + (C7804 + C7805) * C10352 +
             C9501 * C10356 + C9502 * C10353 + C12876 * C10357 +
             C12877 * C32919) *
                C32691) *
               C530 -
           (((C12894 + C12895) * C32919 + (C12896 + C12897) * C10357 +
             C13508 * C10353 + C13509 * C10356 + C9505 * C10352 +
             C9506 * C10355) *
                C32691 +
            ((C12898 + C12899) * C32919 + (C12900 + C12901) * C10357 +
             (C8879 + C8880) * C10353 + (C8881 + C8882) * C10356 +
             (C8870 + C8869) * C10352 + (C8868 + C8867) * C10355) *
                C32885) *
               C531) *
              C440 +
          (((C9501 * C10355 + C9502 * C10352 + C12876 * C10356 +
             C12877 * C10353 + (C12897 + C12896) * C10357 +
             (C12895 + C12894) * C32919) *
                C32885 +
            (C8682 * C10355 + C8683 * C10352 + (C8874 + C8873) * C10356 +
             (C8872 + C8871) * C10353 +
             (C31557 * C7013 + C32866 * C7017 + C31538 * C7387 +
              C32550 * C7388) *
                 C10357 +
             (C31557 * C7016 + C32866 * C7022 + C31538 * C7389 +
              C32550 * C7390) *
                 C32919) *
                C32691) *
               C531 -
           (((C8871 + C8872) * C32919 + (C8873 + C8874) * C10357 +
             C9503 * C10353 + C9504 * C10356 + (C7809 + C7808) * C10352 +
             (C7807 + C7806) * C10355) *
                C32691 +
            (C13508 * C32919 + C13509 * C10357 + C9505 * C10353 +
             C9506 * C10356 + (C7805 + C7804) * C10352 +
             (C7803 + C7802) * C10355) *
                C32885) *
               C530) *
              C441) *
         C32577) /
            (p * q * std::sqrt(p + q));
    d2ee[52] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C2662 * C119 + C2656 * C126 + C2663 * C120 + C2657 * C127 +
                 C2664 * C121 + C2658 * C128 + C2665 * C122 + C32920 * C129) *
                    C118 +
                (C2662 * C131 + C2656 * C140 + C2663 * C132 + C2657 * C141 +
                 C2664 * C133 + C2658 * C142 + C2665 * C134 + C32920 * C143) *
                    C32644) *
                   C32885 +
               ((C2662 * C217 + C2656 * C232 + C2663 * C216 + C2657 * C231 +
                 C2664 * C215 + C2658 * C230 + C2665 * C214 + C32920 * C229) *
                    C118 +
                (C2662 * C227 + C2656 * C247 + C2663 * C226 + C2657 * C246 +
                 C2664 * C225 + C2658 * C245 + C2665 * C224 + C32920 * C244) *
                    C32644) *
                   C32691) *
                  C32603 * C32589 * C110 -
              (((C2665 * C223 + C32920 * C243 + C2664 * C224 + C2658 * C244 +
                 C2663 * C225 + C2657 * C245 + C2662 * C226 + C2656 * C246) *
                    C32644 +
                (C2665 * C213 + C32920 * C228 + C2664 * C214 + C2658 * C229 +
                 C2663 * C215 + C2657 * C230 + C2662 * C216 + C2656 * C231) *
                    C118) *
                   C32691 +
               ((C2665 * C135 + C32920 * C144 + C2664 * C134 + C2658 * C143 +
                 C2663 * C133 + C2657 * C142 + C2662 * C132 + C2656 * C141) *
                    C32644 +
                (C2665 * C123 + C32920 * C130 + C2664 * C122 + C2658 * C129 +
                 C2663 * C121 + C2657 * C128 + C2662 * C120 + C2656 * C127) *
                    C118) *
                   C32885) *
                  C32603 * C32589 * C111 +
              (((C2662 * C121 + C2656 * C128 + C2663 * C122 + C2657 * C129 +
                 C2664 * C123 + C2658 * C130 + C2665 * C124 + C32920 * C137) *
                    C118 +
                (C2662 * C133 + C2656 * C142 + C2663 * C134 + C2657 * C143 +
                 C2664 * C135 + C2658 * C144 + C2665 * C136 + C32920 * C145) *
                    C32644) *
                   C32885 +
               ((C2662 * C215 + C2656 * C230 + C2663 * C214 + C2657 * C229 +
                 C2664 * C213 + C2658 * C228 + C2665 * C444 + C32920 * C445) *
                    C118 +
                (C2662 * C225 + C2656 * C245 + C2663 * C224 + C2657 * C244 +
                 C2664 * C223 + C2658 * C243 + C2665 * C446 + C32920 * C447) *
                    C32644) *
                   C32691) *
                  C32603 * C32589 * C112) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C2662 * C119 + C2656 * C126 + C2663 * C120 + C2657 * C127 +
                 C2664 * C121 + C2658 * C128 + C2665 * C122 + C32920 * C129) *
                    C118 +
                (C2662 * C131 + C2656 * C140 + C2663 * C132 + C2657 * C141 +
                 C2664 * C133 + C2658 * C142 + C2665 * C134 + C32920 * C143) *
                    C32644) *
                   C32885 +
               ((C2797 + C2798 + C2799 + C2800) * C118 +
                (C2801 + C2802 + C2803 + C2804) * C32644) *
                   C32691) *
                  C32603 * C209 -
              (((C2805 + C2806 + C2807 + C2808) * C32644 +
                (C2809 + C2810 + C2811 + C2812) * C118) *
                   C32691 +
               ((C2804 + C2803 + C2802 + C2801) * C32644 +
                (C2800 + C2799 + C2798 + C2797) * C118) *
                   C32885) *
                  C32603 * C210 +
              (((C2812 + C2811 + C2810 + C2809) * C118 +
                (C2808 + C2807 + C2806 + C2805) * C32644) *
                   C32885 +
               ((C2662 * C869 + C2656 * C878 + C2663 * C868 + C2657 * C877 +
                 C2664 * C867 + C2658 * C876 + C2665 * C1244 + C32920 * C1245) *
                    C118 +
                (C2662 * C875 + C2656 * C887 + C2663 * C874 + C2657 * C886 +
                 C2664 * C873 + C2658 * C885 + C2665 * C1246 + C32920 * C1247) *
                    C32644) *
                   C32691) *
                  C32603 * C211) *
             C32577) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2662 * C119 + C2656 * C126 + C2663 * C120 + C2657 * C127 +
             C2664 * C121 + C2658 * C128 + C2665 * C122 + C32920 * C129) *
                C118 +
            (C2662 * C131 + C2656 * C140 + C2663 * C132 + C2657 * C141 +
             C2664 * C133 + C2658 * C142 + C2665 * C134 + C32920 * C143) *
                C32644) *
               C32885 +
           ((C2797 + C2798 + C2799 + C2800) * C118 +
            (C2801 + C2802 + C2803 + C2804) * C32644) *
               C32691) *
              C315 -
          (((C2665 * C631 + C32920 * C636 + C2664 * C630 + C2658 * C635 +
             C2663 * C629 + C2657 * C634 + C2662 * C628 + C2656 * C633) *
                C32644 +
            (C2665 * C621 + C32920 * C626 + C2664 * C620 + C2658 * C625 +
             C2663 * C619 + C2657 * C624 + C2662 * C618 + C2656 * C623) *
                C118) *
               C32691 +
           ((C2665 * C329 + C32920 * C349 + C2664 * C330 + C2658 * C350 +
             C2663 * C331 + C2657 * C351 + C2662 * C332 + C2656 * C352) *
                C32644 +
            (C2665 * C319 + C32920 * C334 + C2664 * C320 + C2658 * C335 +
             C2663 * C321 + C2657 * C336 + C2662 * C322 + C2656 * C337) *
                C118) *
               C32885) *
              C316 +
          (((C2662 * C323 + C2656 * C338 + C2663 * C324 + C2657 * C339 +
             C2664 * C325 + C2658 * C340 + C2665 * C326 + C32920 * C341) *
                C118 +
            (C2662 * C343 + C2656 * C353 + C2663 * C344 + C2657 * C354 +
             C2664 * C345 + C2658 * C355 + C2665 * C346 + C32920 * C356) *
                C32644) *
               C32885 +
           ((C2662 * C1065 + C2656 * C1077 + C2663 * C1066 + C2657 * C1078 +
             C2664 * C1067 + C2658 * C1079 + C2665 * C2192 + C32920 * C2193) *
                C118 +
            (C2662 * C1080 + C2656 * C1092 + C2663 * C1081 + C2657 * C1093 +
             C2664 * C1082 + C2658 * C1094 + C2665 * C2194 + C32920 * C2195) *
                C32644) *
               C32691) *
              C317) *
         C32589 * C32577) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C31557 * C119 + C32866 * C126 + C31538 * C120 + C32550 * C127) *
                C118 +
            (C31557 * C131 + C32866 * C140 + C31538 * C132 + C32550 * C141) *
                C32644) *
               C7665 +
           ((C31557 * C217 + C32866 * C232 + C31538 * C216 + C32550 * C231) *
                C118 +
            (C31557 * C227 + C32866 * C247 + C31538 * C226 + C32550 * C246) *
                C32644) *
               C7666 +
           ((C31557 * C218 + C32866 * C233 + C31538 * C219 + C32550 * C234) *
                C118 +
            (C31557 * C238 + C32866 * C248 + C31538 * C239 + C32550 * C249) *
                C32644) *
               C7667 +
           ((C31557 * C869 + C32866 * C878 + C31538 * C868 + C32550 * C877) *
                C118 +
            (C31557 * C875 + C32866 * C887 + C31538 * C874 + C32550 * C886) *
                C32644) *
               C32926) *
              C32603 * C32589 * C110 -
          (((C31538 * C873 + C32550 * C885 + C31557 * C874 + C32866 * C886) *
                C32644 +
            (C31538 * C867 + C32550 * C876 + C31557 * C868 + C32866 * C877) *
                C118) *
               C32926 +
           ((C31538 * C240 + C32550 * C250 + C31557 * C239 + C32866 * C249) *
                C32644 +
            (C31538 * C220 + C32550 * C235 + C31557 * C219 + C32866 * C234) *
                C118) *
               C7667 +
           ((C31538 * C225 + C32550 * C245 + C31557 * C226 + C32866 * C246) *
                C32644 +
            (C31538 * C215 + C32550 * C230 + C31557 * C216 + C32866 * C231) *
                C118) *
               C7666 +
           ((C31538 * C133 + C32550 * C142 + C31557 * C132 + C32866 * C141) *
                C32644 +
            (C31538 * C121 + C32550 * C128 + C31557 * C120 + C32866 * C127) *
                C118) *
               C7665) *
              C32603 * C32589 * C111 +
          (((C31557 * C121 + C32866 * C128 + C31538 * C122 + C32550 * C129) *
                C118 +
            (C31557 * C133 + C32866 * C142 + C31538 * C134 + C32550 * C143) *
                C32644) *
               C7665 +
           ((C31557 * C215 + C32866 * C230 + C31538 * C214 + C32550 * C229) *
                C118 +
            (C31557 * C225 + C32866 * C245 + C31538 * C224 + C32550 * C244) *
                C32644) *
               C7666 +
           ((C31557 * C220 + C32866 * C235 + C31538 * C221 + C32550 * C236) *
                C118 +
            (C31557 * C240 + C32866 * C250 + C31538 * C241 + C32550 * C251) *
                C32644) *
               C7667 +
           ((C31557 * C867 + C32866 * C876 + C31538 * C1244 + C32550 * C1245) *
                C118 +
            (C31557 * C873 + C32866 * C885 + C31538 * C1246 + C32550 * C1247) *
                C32644) *
               C32926) *
              C32603 * C32589 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C31557 * C119 + C32866 * C126 + C31538 * C120 + C32550 * C127) *
                C118 +
            (C31557 * C131 + C32866 * C140 + C31538 * C132 + C32550 * C141) *
                C32644) *
               C7665 +
           ((C7802 + C7803) * C118 + (C7804 + C7805) * C32644) * C7666 +
           C7826 * C7667 + C7827 * C32926) *
              C32603 * C209 -
          (((C7814 + C7815) * C32644 + (C7816 + C7817) * C118) * C32926 +
           ((C7813 + C7812) * C32644 + (C7811 + C7810) * C118) * C7667 +
           ((C7809 + C7808) * C32644 + (C7807 + C7806) * C118) * C7666 +
           ((C7805 + C7804) * C32644 + (C7803 + C7802) * C118) * C7665) *
              C32603 * C210 +
          (C7826 * C7665 + C7827 * C7666 +
           ((C7817 + C7816) * C118 + (C7815 + C7814) * C32644) * C7667 +
           ((C31557 * C6195 + C32866 * C6198 + C31538 * C6402 +
             C32550 * C6403) *
                C118 +
            (C31557 * C6197 + C32866 * C6201 + C31538 * C6404 +
             C32550 * C6405) *
                C32644) *
               C32926) *
              C32603 * C211) *
         C32577) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C31557 * C119 + C32866 * C126 + C31538 * C120 + C32550 * C127) *
                C118 +
            (C31557 * C131 + C32866 * C140 + C31538 * C132 + C32550 * C141) *
                C32644) *
               C7665 +
           ((C7802 + C7803) * C118 + (C7804 + C7805) * C32644) * C7666 +
           C7826 * C7667 + C7827 * C32926) *
              C315 -
          (((C31538 * C1587 + C32550 * C1590 + C31557 * C1586 +
             C32866 * C1589) *
                C32644 +
            (C31538 * C1581 + C32550 * C1584 + C31557 * C1580 +
             C32866 * C1583) *
                C118) *
               C32926 +
           ((C31538 * C1072 + C32550 * C1090 + C31557 * C1073 +
             C32866 * C1091) *
                C32644 +
            (C31538 * C1063 + C32550 * C1075 + C31557 * C1064 +
             C32866 * C1076) *
                C118) *
               C7667 +
           ((C31538 * C629 + C32550 * C634 + C31557 * C628 + C32866 * C633) *
                C32644 +
            (C31538 * C619 + C32550 * C624 + C31557 * C618 + C32866 * C623) *
                C118) *
               C7666 +
           ((C31538 * C331 + C32550 * C351 + C31557 * C332 + C32866 * C352) *
                C32644 +
            (C31538 * C321 + C32550 * C336 + C31557 * C322 + C32866 * C337) *
                C118) *
               C7665) *
              C316 +
          (((C31557 * C323 + C32866 * C338 + C31538 * C324 + C32550 * C339) *
                C118 +
            (C31557 * C343 + C32866 * C353 + C31538 * C344 + C32550 * C354) *
                C32644) *
               C7665 +
           ((C31557 * C1065 + C32866 * C1077 + C31538 * C1066 +
             C32550 * C1078) *
                C118 +
            (C31557 * C1080 + C32866 * C1092 + C31538 * C1081 +
             C32550 * C1093) *
                C32644) *
               C7666 +
           ((C31557 * C1068 + C32866 * C1083 + C31538 * C1069 +
             C32550 * C1084) *
                C118 +
            (C31557 * C1086 + C32866 * C1095 + C31538 * C1087 +
             C32550 * C1096) *
                C32644) *
               C7667 +
           ((C31557 * C6309 + C32866 * C6313 + C31538 * C7201 +
             C32550 * C7202) *
                C118 +
            (C31557 * C6314 + C32866 * C6318 + C31538 * C7203 +
             C32550 * C7204) *
                C32644) *
               C32926) *
              C317) *
         C32589 * C32577) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C31557 * C119 + C32866 * C126 + C31538 * C120 + C32550 * C127) *
                C10355 +
            (C31557 * C131 + C32866 * C140 + C31538 * C132 + C32550 * C141) *
                C10352 +
            (C8867 + C8868) * C10356 + (C8869 + C8870) * C10353 +
            (C8882 + C8881) * C10357 + (C8880 + C8879) * C32919) *
               C32885 +
           ((C7802 + C7803) * C10355 + (C7804 + C7805) * C10352 +
            C9501 * C10356 + C9502 * C10353 + (C8878 + C8877) * C10357 +
            (C8876 + C8875) * C32919) *
               C32691) *
              C32603 * C32589 * C110 -
          (((C31538 * C1082 + C32550 * C1094 + C31557 * C1081 +
             C32866 * C1093) *
                C32919 +
            (C31538 * C1067 + C32550 * C1079 + C31557 * C1066 +
             C32866 * C1078) *
                C10357 +
            (C9096 + C9095) * C10353 + (C9094 + C9093) * C10356 +
            (C8083 + C8082) * C10352 + (C8081 + C8080) * C10355) *
               C32691 +
           ((C31538 * C345 + C32550 * C355 + C31557 * C344 + C32866 * C354) *
                C32919 +
            (C31538 * C325 + C32550 * C340 + C31557 * C324 + C32866 * C339) *
                C10357 +
            (C9306 + C9305) * C10353 + (C9304 + C9303) * C10356 +
            (C31538 * C133 + C32550 * C142 + C31557 * C132 + C32866 * C141) *
                C10352 +
            (C31538 * C121 + C32550 * C128 + C31557 * C120 + C32866 * C127) *
                C10355) *
               C32885) *
              C32603 * C32589 * C111 +
          (((C31557 * C121 + C32866 * C128 + C31538 * C122 + C32550 * C129) *
                C10355 +
            (C31557 * C133 + C32866 * C142 + C31538 * C134 + C32550 * C143) *
                C10352 +
            (C31557 * C320 + C32866 * C335 + C31538 * C319 + C32550 * C334) *
                C10356 +
            (C31557 * C330 + C32866 * C350 + C31538 * C329 + C32550 * C349) *
                C10353 +
            (C31557 * C325 + C32866 * C340 + C31538 * C326 + C32550 * C341) *
                C10357 +
            (C31557 * C345 + C32866 * C355 + C31538 * C346 + C32550 * C356) *
                C32919) *
               C32885 +
           ((C31557 * C215 + C32866 * C230 + C31538 * C214 + C32550 * C229) *
                C10355 +
            (C31557 * C225 + C32866 * C245 + C31538 * C224 + C32550 * C244) *
                C10352 +
            (C31557 * C620 + C32866 * C625 + C31538 * C621 + C32550 * C626) *
                C10356 +
            (C31557 * C630 + C32866 * C635 + C31538 * C631 + C32550 * C636) *
                C10353 +
            (C31557 * C1067 + C32866 * C1079 + C31538 * C2192 +
             C32550 * C2193) *
                C10357 +
            (C31557 * C1082 + C32866 * C1094 + C31538 * C2194 +
             C32550 * C2195) *
                C32919) *
               C32691) *
              C32603 * C32589 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C31557 * C119 + C32866 * C126 + C31538 * C120 + C32550 * C127) *
                C10355 +
            (C31557 * C131 + C32866 * C140 + C31538 * C132 + C32550 * C141) *
                C10352 +
            (C8867 + C8868) * C10356 + (C8869 + C8870) * C10353 +
            (C8882 + C8881) * C10357 + (C8880 + C8879) * C32919) *
               C32885 +
           ((C7802 + C7803) * C10355 + (C7804 + C7805) * C10352 +
            C9501 * C10356 + C9502 * C10353 + (C8878 + C8877) * C10357 +
            (C8876 + C8875) * C32919) *
               C32691) *
              C32603 * C209 -
          (((C8871 + C8872) * C32919 + (C8873 + C8874) * C10357 +
            C9503 * C10353 + C9504 * C10356 + (C7809 + C7808) * C10352 +
            (C7807 + C7806) * C10355) *
               C32691 +
           ((C8875 + C8876) * C32919 + (C8877 + C8878) * C10357 +
            C9505 * C10353 + C9506 * C10356 + (C7805 + C7804) * C10352 +
            (C7803 + C7802) * C10355) *
               C32885) *
              C32603 * C210 +
          ((C7818 * C10355 + C7819 * C10352 + C8682 * C10356 + C8683 * C10353 +
            (C8874 + C8873) * C10357 + (C8872 + C8871) * C32919) *
               C32885 +
           (C7820 * C10355 + C7821 * C10352 + (C8379 + C8378) * C10356 +
            (C8377 + C8376) * C10353 +
            (C31557 * C6309 + C32866 * C6313 + C31538 * C7201 +
             C32550 * C7202) *
                C10357 +
            (C31557 * C6314 + C32866 * C6318 + C31538 * C7203 +
             C32550 * C7204) *
                C32919) *
               C32691) *
              C32603 * C211) *
         C32577) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C31557 * C119 + C32866 * C126 + C31538 * C120 + C32550 * C127) *
                C10355 +
            (C31557 * C131 + C32866 * C140 + C31538 * C132 + C32550 * C141) *
                C10352 +
            (C8867 + C8868) * C10356 + (C8869 + C8870) * C10353 +
            C12874 * C10357 + C12875 * C32919) *
               C32885 +
           ((C7802 + C7803) * C10355 + (C7804 + C7805) * C10352 +
            C9501 * C10356 + C9502 * C10353 + C12876 * C10357 +
            C12877 * C32919) *
               C32691) *
              C315 -
          (((C12894 + C12895) * C32919 + (C12896 + C12897) * C10357 +
            (C8875 + C8876) * C10353 + (C8877 + C8878) * C10356 +
            C9505 * C10352 + C9506 * C10355) *
               C32691 +
           ((C12898 + C12899) * C32919 + (C12900 + C12901) * C10357 +
            (C8879 + C8880) * C10353 + (C8881 + C8882) * C10356 +
            (C8870 + C8869) * C10352 + (C8868 + C8867) * C10355) *
               C32885) *
              C316 +
          ((C12874 * C10355 + C12875 * C10352 + (C12901 + C12900) * C10356 +
            (C12899 + C12898) * C10353 +
            (C31557 * C1967 + C32866 * C1976 + C31538 * C1968 +
             C32550 * C1977) *
                C10357 +
            (C31557 * C1979 + C32866 * C1985 + C31538 * C1980 +
             C32550 * C1986) *
                C32919) *
               C32885 +
           (C12876 * C10355 + C12877 * C10352 + (C12897 + C12896) * C10356 +
            (C12895 + C12894) * C10353 +
            (C31557 * C7014 + C32866 * C7018 + C31538 * C12241 +
             C32550 * C12242) *
                C10357 +
            (C31557 * C7019 + C32866 * C7023 + C31538 * C12243 +
             C32550 * C12244) *
                C32919) *
               C32691) *
              C317) *
         C32589 * C32577) /
            (p * q * std::sqrt(p + q));
    d2ee[53] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31557 * C119 + C32866 * C126 + C31538 * C120 + C32550 * C127) *
                 C118 +
             (C31557 * C131 + C32866 * C140 + C31538 * C132 + C32550 * C141) *
                 C32644) *
                C7665 +
            ((C7802 + C7803) * C118 + (C7804 + C7805) * C32644) * C7666 +
            C7826 * C7667 + C7827 * C32926) *
               C530 -
           (((C31538 * C1587 + C32550 * C1590 + C31557 * C1586 +
              C32866 * C1589) *
                 C32644 +
             (C31538 * C1581 + C32550 * C1584 + C31557 * C1580 +
              C32866 * C1583) *
                 C118) *
                C32926 +
            ((C31538 * C1072 + C32550 * C1090 + C31557 * C1073 +
              C32866 * C1091) *
                 C32644 +
             (C31538 * C1063 + C32550 * C1075 + C31557 * C1064 +
              C32866 * C1076) *
                 C118) *
                C7667 +
            ((C31538 * C629 + C32550 * C634 + C31557 * C628 + C32866 * C633) *
                 C32644 +
             (C31538 * C619 + C32550 * C624 + C31557 * C618 + C32866 * C623) *
                 C118) *
                C7666 +
            ((C31538 * C331 + C32550 * C351 + C31557 * C332 + C32866 * C352) *
                 C32644 +
             (C31538 * C321 + C32550 * C336 + C31557 * C322 + C32866 * C337) *
                 C118) *
                C7665) *
               C531) *
              C32589 * C442 +
          ((((C31557 * C321 + C32866 * C336 + C31538 * C320 + C32550 * C335) *
                 C118 +
             (C31557 * C331 + C32866 * C351 + C31538 * C330 + C32550 * C350) *
                 C32644) *
                C7665 +
            ((C31557 * C619 + C32866 * C624 + C31538 * C620 + C32550 * C625) *
                 C118 +
             (C31557 * C629 + C32866 * C634 + C31538 * C630 + C32550 * C635) *
                 C32644) *
                C7666 +
            ((C31557 * C1063 + C32866 * C1075 + C31538 * C1062 +
              C32550 * C1074) *
                 C118 +
             (C31557 * C1072 + C32866 * C1090 + C31538 * C1071 +
              C32550 * C1089) *
                 C32644) *
                C7667 +
            ((C31557 * C1581 + C32866 * C1584 + C31538 * C1582 +
              C32550 * C1585) *
                 C118 +
             (C31557 * C1587 + C32866 * C1590 + C31538 * C1588 +
              C32550 * C1591) *
                 C32644) *
                C32926) *
               C531 -
           (((C8091 + C8090) * C32644 + (C8089 + C8088) * C118) * C32926 +
            ((C8087 + C8086) * C32644 + (C8085 + C8084) * C118) * C7667 +
            ((C8083 + C8082) * C32644 + (C8081 + C8080) * C118) * C7666 +
            ((C31538 * C133 + C32550 * C142 + C31557 * C132 + C32866 * C141) *
                 C32644 +
             (C31538 * C121 + C32550 * C128 + C31557 * C120 + C32866 * C127) *
                 C118) *
                C7665) *
               C530) *
              C32589 * C443)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2662 * C119 + C2656 * C126 + C2663 * C120 + C2657 * C127 +
              C2664 * C121 + C2658 * C128 + C2665 * C122 + C32920 * C129) *
                 C118 +
             (C2662 * C131 + C2656 * C140 + C2663 * C132 + C2657 * C141 +
              C2664 * C133 + C2658 * C142 + C2665 * C134 + C32920 * C143) *
                 C32644) *
                C32885 +
            ((C2797 + C2798 + C2799 + C2800) * C118 +
             (C2801 + C2802 + C2803 + C2804) * C32644) *
                C32691) *
               C530 -
           (((C2665 * C631 + C32920 * C636 + C2664 * C630 + C2658 * C635 +
              C2663 * C629 + C2657 * C634 + C2662 * C628 + C2656 * C633) *
                 C32644 +
             (C2665 * C621 + C32920 * C626 + C2664 * C620 + C2658 * C625 +
              C2663 * C619 + C2657 * C624 + C2662 * C618 + C2656 * C623) *
                 C118) *
                C32691 +
            ((C2665 * C329 + C32920 * C349 + C2664 * C330 + C2658 * C350 +
              C2663 * C331 + C2657 * C351 + C2662 * C332 + C2656 * C352) *
                 C32644 +
             (C2665 * C319 + C32920 * C334 + C2664 * C320 + C2658 * C335 +
              C2663 * C321 + C2657 * C336 + C2662 * C322 + C2656 * C337) *
                 C118) *
                C32885) *
               C531) *
              C32589 * C442 +
          ((((C2662 * C321 + C2656 * C336 + C2663 * C320 + C2657 * C335 +
              C2664 * C319 + C2658 * C334 + C2665 * C318 + C32920 * C333) *
                 C118 +
             (C2662 * C331 + C2656 * C351 + C2663 * C330 + C2657 * C350 +
              C2664 * C329 + C2658 * C349 + C2665 * C328 + C32920 * C348) *
                 C32644) *
                C32885 +
            ((C2662 * C619 + C2656 * C624 + C2663 * C620 + C2657 * C625 +
              C2664 * C621 + C2658 * C626 + C2665 * C622 + C32920 * C627) *
                 C118 +
             (C2662 * C629 + C2656 * C634 + C2663 * C630 + C2657 * C635 +
              C2664 * C631 + C2658 * C636 + C2665 * C632 + C32920 * C637) *
                 C32644) *
                C32691) *
               C531 -
           (((C3064 + C3063 + C3062 + C3061) * C32644 +
             (C3060 + C3059 + C3058 + C3057) * C118) *
                C32691 +
            ((C2665 * C135 + C32920 * C144 + C2664 * C134 + C2658 * C143 +
              C2663 * C133 + C2657 * C142 + C2662 * C132 + C2656 * C141) *
                 C32644 +
             (C2665 * C123 + C32920 * C130 + C2664 * C122 + C2658 * C129 +
              C2663 * C121 + C2657 * C128 + C2662 * C120 + C2656 * C127) *
                 C118) *
                C32885) *
               C530) *
              C32589 * C443)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C31557 * C119 + C32866 * C126 + C31538 * C120 + C32550 * C127) *
                 C10355 +
             (C31557 * C131 + C32866 * C140 + C31538 * C132 + C32550 * C141) *
                 C10352 +
             (C8867 + C8868) * C10356 + (C8869 + C8870) * C10353 +
             C12874 * C10357 + C12875 * C32919) *
                C32885 +
            ((C7802 + C7803) * C10355 + (C7804 + C7805) * C10352 +
             C9501 * C10356 + C9502 * C10353 + C12876 * C10357 +
             C12877 * C32919) *
                C32691) *
               C530 -
           (((C12894 + C12895) * C32919 + (C12896 + C12897) * C10357 +
             (C8875 + C8876) * C10353 + (C8877 + C8878) * C10356 +
             C9505 * C10352 + C9506 * C10355) *
                C32691 +
            ((C12898 + C12899) * C32919 + (C12900 + C12901) * C10357 +
             (C8879 + C8880) * C10353 + (C8881 + C8882) * C10356 +
             (C8870 + C8869) * C10352 + (C8868 + C8867) * C10355) *
                C32885) *
               C531) *
              C32589 * C442 +
          ((((C9303 + C9304) * C10355 + (C9305 + C9306) * C10352 +
             (C13310 + C13311) * C10356 + (C13312 + C13313) * C10353 +
             (C31557 * C1965 + C32866 * C1974 + C31538 * C1964 +
              C32550 * C1973) *
                 C10357 +
             (C31557 * C1971 + C32866 * C1983 + C31538 * C1970 +
              C32550 * C1982) *
                 C32919) *
                C32885 +
            ((C9093 + C9094) * C10355 + (C9095 + C9096) * C10352 +
             (C13104 + C13105) * C10356 + (C13106 + C13107) * C10353 +
             (C31557 * C2529 + C32866 * C2532 + C31538 * C2530 +
              C32550 * C2533) *
                 C10357 +
             (C31557 * C2535 + C32866 * C2538 + C31538 * C2536 +
              C32550 * C2539) *
                 C32919) *
                C32691) *
               C531 -
           (((C13107 + C13106) * C32919 + (C13105 + C13104) * C10357 +
             (C9096 + C9095) * C10353 + (C9094 + C9093) * C10356 +
             (C8083 + C8082) * C10352 + (C8081 + C8080) * C10355) *
                C32691 +
            ((C13313 + C13312) * C32919 + (C13311 + C13310) * C10357 +
             (C9306 + C9305) * C10353 + (C9304 + C9303) * C10356 +
             (C31538 * C133 + C32550 * C142 + C31557 * C132 + C32866 * C141) *
                 C10352 +
             (C31538 * C121 + C32550 * C128 + C31557 * C120 + C32866 * C127) *
                 C10355) *
                C32885) *
               C530) *
              C32589 * C443)) /
            (p * q * std::sqrt(p + q));
    d2ee[54] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C2662 * C119 + C2656 * C126 + C2663 * C120 + C2657 * C127 +
             C2664 * C121 + C2658 * C128 + C2665 * C122 + C32920 * C129) *
                C118 +
            (C2662 * C131 + C2656 * C140 + C2663 * C132 + C2657 * C141 +
             C2664 * C133 + C2658 * C142 + C2665 * C134 + C32920 * C143) *
                C32644) *
               C32885 +
           ((C2797 + C2798 + C2799 + C2800) * C118 +
            (C2801 + C2802 + C2803 + C2804) * C32644) *
               C32691) *
              C32603 * C209 -
          (((C2805 + C2806 + C2807 + C2808) * C32644 +
            (C2809 + C2810 + C2811 + C2812) * C118) *
               C32691 +
           ((C2804 + C2803 + C2802 + C2801) * C32644 +
            (C2800 + C2799 + C2798 + C2797) * C118) *
               C32885) *
              C32603 * C210 +
          (((C2812 + C2811 + C2810 + C2809) * C118 +
            (C2808 + C2807 + C2806 + C2805) * C32644) *
               C32885 +
           ((C2662 * C869 + C2656 * C878 + C2663 * C868 + C2657 * C877 +
             C2664 * C867 + C2658 * C876 + C2665 * C1244 + C32920 * C1245) *
                C118 +
            (C2662 * C875 + C2656 * C887 + C2663 * C874 + C2657 * C886 +
             C2664 * C873 + C2658 * C885 + C2665 * C1246 + C32920 * C1247) *
                C32644) *
               C32691) *
              C32603 * C211) *
         C32577) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C2662 * C119 + C2656 * C126 + C2663 * C120 + C2657 * C127 +
             C2664 * C121 + C2658 * C128 + C2665 * C122 + C32920 * C129) *
                C118 +
            (C2662 * C131 + C2656 * C140 + C2663 * C132 + C2657 * C141 +
             C2664 * C133 + C2658 * C142 + C2665 * C134 + C32920 * C143) *
                C32644) *
               C32885 +
           ((C2662 * C217 + C2656 * C232 + C2663 * C216 + C2657 * C231 +
             C2664 * C215 + C2658 * C230 + C2665 * C214 + C32920 * C229) *
                C118 +
            (C2662 * C227 + C2656 * C247 + C2663 * C226 + C2657 * C246 +
             C2664 * C225 + C2658 * C245 + C2665 * C224 + C32920 * C244) *
                C32644) *
               C32691) *
              C32603 * C32589 * C110 -
          (((C2665 * C223 + C32920 * C243 + C2664 * C224 + C2658 * C244 +
             C2663 * C225 + C2657 * C245 + C2662 * C226 + C2656 * C246) *
                C32644 +
            (C2665 * C213 + C32920 * C228 + C2664 * C214 + C2658 * C229 +
             C2663 * C215 + C2657 * C230 + C2662 * C216 + C2656 * C231) *
                C118) *
               C32691 +
           ((C2665 * C135 + C32920 * C144 + C2664 * C134 + C2658 * C143 +
             C2663 * C133 + C2657 * C142 + C2662 * C132 + C2656 * C141) *
                C32644 +
            (C2665 * C123 + C32920 * C130 + C2664 * C122 + C2658 * C129 +
             C2663 * C121 + C2657 * C128 + C2662 * C120 + C2656 * C127) *
                C118) *
               C32885) *
              C32603 * C32589 * C111 +
          (((C2662 * C121 + C2656 * C128 + C2663 * C122 + C2657 * C129 +
             C2664 * C123 + C2658 * C130 + C2665 * C124 + C32920 * C137) *
                C118 +
            (C2662 * C133 + C2656 * C142 + C2663 * C134 + C2657 * C143 +
             C2664 * C135 + C2658 * C144 + C2665 * C136 + C32920 * C145) *
                C32644) *
               C32885 +
           ((C2662 * C215 + C2656 * C230 + C2663 * C214 + C2657 * C229 +
             C2664 * C213 + C2658 * C228 + C2665 * C444 + C32920 * C445) *
                C118 +
            (C2662 * C225 + C2656 * C245 + C2663 * C224 + C2657 * C244 +
             C2664 * C223 + C2658 * C243 + C2665 * C446 + C32920 * C447) *
                C32644) *
               C32691) *
              C32603 * C32589 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C31557 * C119 + C32866 * C126 + C31538 * C120 + C32550 * C127) *
                C118 +
            (C31557 * C131 + C32866 * C140 + C31538 * C132 + C32550 * C141) *
                C32644) *
               C7665 +
           ((C31557 * C217 + C32866 * C232 + C31538 * C216 + C32550 * C231) *
                C118 +
            (C31557 * C227 + C32866 * C247 + C31538 * C226 + C32550 * C246) *
                C32644) *
               C7666 +
           ((C31557 * C218 + C32866 * C233 + C31538 * C219 + C32550 * C234) *
                C118 +
            (C31557 * C238 + C32866 * C248 + C31538 * C239 + C32550 * C249) *
                C32644) *
               C7667 +
           ((C31557 * C869 + C32866 * C878 + C31538 * C868 + C32550 * C877) *
                C118 +
            (C31557 * C875 + C32866 * C887 + C31538 * C874 + C32550 * C886) *
                C32644) *
               C32926) *
              C32603 * C32589 * C110 -
          (((C31538 * C873 + C32550 * C885 + C31557 * C874 + C32866 * C886) *
                C32644 +
            (C31538 * C867 + C32550 * C876 + C31557 * C868 + C32866 * C877) *
                C118) *
               C32926 +
           ((C31538 * C240 + C32550 * C250 + C31557 * C239 + C32866 * C249) *
                C32644 +
            (C31538 * C220 + C32550 * C235 + C31557 * C219 + C32866 * C234) *
                C118) *
               C7667 +
           ((C31538 * C225 + C32550 * C245 + C31557 * C226 + C32866 * C246) *
                C32644 +
            (C31538 * C215 + C32550 * C230 + C31557 * C216 + C32866 * C231) *
                C118) *
               C7666 +
           ((C31538 * C133 + C32550 * C142 + C31557 * C132 + C32866 * C141) *
                C32644 +
            (C31538 * C121 + C32550 * C128 + C31557 * C120 + C32866 * C127) *
                C118) *
               C7665) *
              C32603 * C32589 * C111 +
          (((C31557 * C121 + C32866 * C128 + C31538 * C122 + C32550 * C129) *
                C118 +
            (C31557 * C133 + C32866 * C142 + C31538 * C134 + C32550 * C143) *
                C32644) *
               C7665 +
           ((C31557 * C215 + C32866 * C230 + C31538 * C214 + C32550 * C229) *
                C118 +
            (C31557 * C225 + C32866 * C245 + C31538 * C224 + C32550 * C244) *
                C32644) *
               C7666 +
           ((C31557 * C220 + C32866 * C235 + C31538 * C221 + C32550 * C236) *
                C118 +
            (C31557 * C240 + C32866 * C250 + C31538 * C241 + C32550 * C251) *
                C32644) *
               C7667 +
           ((C31557 * C867 + C32866 * C876 + C31538 * C1244 + C32550 * C1245) *
                C118 +
            (C31557 * C873 + C32866 * C885 + C31538 * C1246 + C32550 * C1247) *
                C32644) *
               C32926) *
              C32603 * C32589 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C31557 * C119 + C32866 * C126 + C31538 * C120 + C32550 * C127) *
                C118 +
            (C31557 * C131 + C32866 * C140 + C31538 * C132 + C32550 * C141) *
                C32644) *
               C7665 +
           ((C7802 + C7803) * C118 + (C7804 + C7805) * C32644) * C7666 +
           C7826 * C7667 + C7827 * C32926) *
              C32603 * C209 -
          (((C7814 + C7815) * C32644 + (C7816 + C7817) * C118) * C32926 +
           ((C7813 + C7812) * C32644 + (C7811 + C7810) * C118) * C7667 +
           ((C7809 + C7808) * C32644 + (C7807 + C7806) * C118) * C7666 +
           ((C7805 + C7804) * C32644 + (C7803 + C7802) * C118) * C7665) *
              C32603 * C210 +
          (C7826 * C7665 + C7827 * C7666 +
           ((C7817 + C7816) * C118 + (C7815 + C7814) * C32644) * C7667 +
           ((C31557 * C6195 + C32866 * C6198 + C31538 * C6402 +
             C32550 * C6403) *
                C118 +
            (C31557 * C6197 + C32866 * C6201 + C31538 * C6404 +
             C32550 * C6405) *
                C32644) *
               C32926) *
              C32603 * C211) *
         C32577) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C31557 * C119 + C32866 * C126 + C31538 * C120 + C32550 * C127) *
                C10355 +
            (C31557 * C131 + C32866 * C140 + C31538 * C132 + C32550 * C141) *
                C10352 +
            (C8867 + C8868) * C10356 + (C8869 + C8870) * C10353 +
            (C8882 + C8881) * C10357 + (C8880 + C8879) * C32919) *
               C32885 +
           ((C7802 + C7803) * C10355 + (C7804 + C7805) * C10352 +
            C9501 * C10356 + C9502 * C10353 + (C8878 + C8877) * C10357 +
            (C8876 + C8875) * C32919) *
               C32691) *
              C32603 * C32589 * C110 -
          (((C31538 * C1082 + C32550 * C1094 + C31557 * C1081 +
             C32866 * C1093) *
                C32919 +
            (C31538 * C1067 + C32550 * C1079 + C31557 * C1066 +
             C32866 * C1078) *
                C10357 +
            (C9096 + C9095) * C10353 + (C9094 + C9093) * C10356 +
            (C8083 + C8082) * C10352 + (C8081 + C8080) * C10355) *
               C32691 +
           ((C31538 * C345 + C32550 * C355 + C31557 * C344 + C32866 * C354) *
                C32919 +
            (C31538 * C325 + C32550 * C340 + C31557 * C324 + C32866 * C339) *
                C10357 +
            (C9306 + C9305) * C10353 + (C9304 + C9303) * C10356 +
            (C31538 * C133 + C32550 * C142 + C31557 * C132 + C32866 * C141) *
                C10352 +
            (C31538 * C121 + C32550 * C128 + C31557 * C120 + C32866 * C127) *
                C10355) *
               C32885) *
              C32603 * C32589 * C111 +
          (((C31557 * C121 + C32866 * C128 + C31538 * C122 + C32550 * C129) *
                C10355 +
            (C31557 * C133 + C32866 * C142 + C31538 * C134 + C32550 * C143) *
                C10352 +
            (C31557 * C320 + C32866 * C335 + C31538 * C319 + C32550 * C334) *
                C10356 +
            (C31557 * C330 + C32866 * C350 + C31538 * C329 + C32550 * C349) *
                C10353 +
            (C31557 * C325 + C32866 * C340 + C31538 * C326 + C32550 * C341) *
                C10357 +
            (C31557 * C345 + C32866 * C355 + C31538 * C346 + C32550 * C356) *
                C32919) *
               C32885 +
           ((C31557 * C215 + C32866 * C230 + C31538 * C214 + C32550 * C229) *
                C10355 +
            (C31557 * C225 + C32866 * C245 + C31538 * C224 + C32550 * C244) *
                C10352 +
            (C31557 * C620 + C32866 * C625 + C31538 * C621 + C32550 * C626) *
                C10356 +
            (C31557 * C630 + C32866 * C635 + C31538 * C631 + C32550 * C636) *
                C10353 +
            (C31557 * C1067 + C32866 * C1079 + C31538 * C2192 +
             C32550 * C2193) *
                C10357 +
            (C31557 * C1082 + C32866 * C1094 + C31538 * C2194 +
             C32550 * C2195) *
                C32919) *
               C32691) *
              C32603 * C32589 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C31557 * C119 + C32866 * C126 + C31538 * C120 + C32550 * C127) *
                C10355 +
            (C31557 * C131 + C32866 * C140 + C31538 * C132 + C32550 * C141) *
                C10352 +
            (C8867 + C8868) * C10356 + (C8869 + C8870) * C10353 +
            (C8882 + C8881) * C10357 + (C8880 + C8879) * C32919) *
               C32885 +
           ((C7802 + C7803) * C10355 + (C7804 + C7805) * C10352 +
            C9501 * C10356 + C9502 * C10353 + (C8878 + C8877) * C10357 +
            (C8876 + C8875) * C32919) *
               C32691) *
              C32603 * C209 -
          (((C8871 + C8872) * C32919 + (C8873 + C8874) * C10357 +
            C9503 * C10353 + C9504 * C10356 + (C7809 + C7808) * C10352 +
            (C7807 + C7806) * C10355) *
               C32691 +
           ((C8875 + C8876) * C32919 + (C8877 + C8878) * C10357 +
            C9505 * C10353 + C9506 * C10356 + (C7805 + C7804) * C10352 +
            (C7803 + C7802) * C10355) *
               C32885) *
              C32603 * C210 +
          ((C7818 * C10355 + C7819 * C10352 + C8682 * C10356 + C8683 * C10353 +
            (C8874 + C8873) * C10357 + (C8872 + C8871) * C32919) *
               C32885 +
           (C7820 * C10355 + C7821 * C10352 + (C8379 + C8378) * C10356 +
            (C8377 + C8376) * C10353 +
            (C31557 * C6309 + C32866 * C6313 + C31538 * C7201 +
             C32550 * C7202) *
                C10357 +
            (C31557 * C6314 + C32866 * C6318 + C31538 * C7203 +
             C32550 * C7204) *
                C32919) *
               C32691) *
              C32603 * C211) *
         C32577) /
            (p * q * std::sqrt(p + q));
    d2ee[55] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C6132 * C119 + C32540 * C126) * C3448 +
             (C6132 * C131 + C32540 * C140) * C32886 + C7046 * C3449 +
             C7047 * C32731) *
                C7665 +
            (C9703 + C9704 + C9705 + C9706) * C7666 + C9723 * C7667 +
            C9724 * C32926) *
               C32603 * C440 -
           ((C9715 + C9716 + C9717 + C9718) * C32926 +
            (C9714 + C9713 + C9712 + C9711) * C7667 +
            (C9710 + C9709 + C9708 + C9707) * C7666 +
            (C9706 + C9705 + C9704 + C9703) * C7665) *
               C32603 * C441) *
              C442 +
          (((C9953 + C9954 + C9955 + C9956) * C7665 +
            (C9957 + C9958 + C9959 + C9960) * C7666 +
            (C9961 + C9962 + C9969 + C9970) * C7667 +
            (C6429 * C3448 + C6430 * C32886 +
             (C6132 * C6520 + C32540 * C6521) * C3449 +
             (C6132 * C6522 + C32540 * C6523) * C32731) *
                C32926) *
               C32603 * C441 -
           ((C9970 + C9969 + C9962 + C9961) * C32926 +
            (C9960 + C9959 + C9958 + C9957) * C7667 +
            (C9956 + C9955 + C9954 + C9953) * C7666 +
            (C7401 * C32731 + C7400 * C3449 +
             (C6132 * C132 + C32540 * C141) * C32886 +
             (C6132 * C120 + C32540 * C127) * C3448) *
                C7665) *
               C32603 * C440) *
              C443)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C754 * C119 + C748 * C126 + C755 * C120 + C749 * C127 +
              C756 * C121 + C32905 * C128) *
                 C3448 +
             (C754 * C131 + C748 * C140 + C755 * C132 + C749 * C141 +
              C756 * C133 + C32905 * C142) *
                 C32886 +
             (C2025 + C2026 + C2027) * C3449 +
             (C2028 + C2029 + C2030) * C32731) *
                C32885 +
            ((C928 + C929 + C930) * C3448 + (C931 + C932 + C933) * C32886 +
             (C1628 + C1627 + C1626) * C3449 +
             (C1625 + C1624 + C1623) * C32731) *
                C32691) *
               C32603 * C440 -
           (((C1617 + C1618 + C1619) * C32731 +
             (C1620 + C1621 + C1622) * C3449 + (C939 + C938 + C937) * C32886 +
             (C936 + C935 + C934) * C3448) *
                C32691 +
            ((C1623 + C1624 + C1625) * C32731 +
             (C1626 + C1627 + C1628) * C3449 + (C933 + C932 + C931) * C32886 +
             (C930 + C929 + C928) * C3448) *
                C32885) *
               C32603 * C441) *
              C442 +
          ((((C1273 + C1274 + C1275) * C3448 +
             (C1276 + C1277 + C1278) * C32886 +
             (C4753 + C4754 + C4755) * C3449 +
             (C4756 + C4757 + C4758) * C32731) *
                C32885 +
            ((C1279 + C1280 + C1281) * C3448 +
             (C1282 + C1283 + C1284) * C32886 +
             (C754 * C1063 + C748 * C1075 + C755 * C1062 + C749 * C1074 +
              C756 * C1430 + C32905 * C1431) *
                 C3449 +
             (C754 * C1072 + C748 * C1090 + C755 * C1071 + C749 * C1089 +
              C756 * C1432 + C32905 * C1433) *
                 C32731) *
                C32691) *
               C32603 * C441 -
           (((C4758 + C4757 + C4756) * C32731 +
             (C4755 + C4754 + C4753) * C3449 +
             (C1278 + C1277 + C1276) * C32886 +
             (C1275 + C1274 + C1273) * C3448) *
                C32691 +
            ((C2376 + C2375 + C2374) * C32731 +
             (C2373 + C2372 + C2371) * C3449 +
             (C756 * C134 + C32905 * C143 + C755 * C133 + C749 * C142 +
              C754 * C132 + C748 * C141) *
                 C32886 +
             (C756 * C122 + C32905 * C129 + C755 * C121 + C749 * C128 +
              C754 * C120 + C748 * C127) *
                 C3448) *
                C32885) *
               C32603 * C440) *
              C443)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C6132 * C119 + C32540 * C126) * C13611 +
             (C6132 * C131 + C32540 * C140) * C13607 + C7046 * C13612 +
             C7047 * C13608 + C7048 * C13613 + C7049 * C13609 + C7055 * C13614 +
             C7054 * C32932) *
                C32885 +
            (C14424 + C14425 + C14426 + C14427 + C14428 + C14429 + C14430 +
             C14431) *
                C32691) *
               C32603 * C440 -
           ((C14432 + C14433 + C14434 + C14435 + C14436 + C14437 + C14438 +
             C14439) *
                C32691 +
            (C14431 + C14430 + C14429 + C14428 + C14427 + C14426 + C14425 +
             C14424) *
                C32885) *
               C32603 * C441) *
              C442 +
          (((C14668 + C14669 + C14670 + C14671 + C14672 + C14673 + C14680 +
             C14681) *
                C32885 +
            (C6425 * C13611 + C6426 * C13607 + C7230 * C13612 + C7231 * C13608 +
             C7232 * C13613 + C7233 * C13609 +
             (C6132 * C7387 + C32540 * C7388) * C13614 +
             (C6132 * C7389 + C32540 * C7390) * C32932) *
                C32691) *
               C32603 * C441 -
           ((C14681 + C14680 + C14673 + C14672 + C14671 + C14670 + C14669 +
             C14668) *
                C32691 +
            (C12341 * C32932 + C12340 * C13614 + C7403 * C13609 +
             C7402 * C13613 + C7401 * C13608 + C7400 * C13612 +
             (C6132 * C132 + C32540 * C141) * C13607 +
             (C6132 * C120 + C32540 * C127) * C13611) *
                C32885) *
               C32603 * C440) *
              C443)) /
            (p * q * std::sqrt(p + q));
    d2ee[56] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C6132 * C119 + C32540 * C126) * C3448 +
             (C6132 * C131 + C32540 * C140) * C32886 + C7046 * C3449 +
             C7047 * C32731) *
                C7665 +
            (C9703 + C9704 + C9705 + C9706) * C7666 + C9723 * C7667 +
            C9724 * C32926) *
               C530 -
           ((C10231 + C10232 + C10233 + C10234) * C32926 +
            (C10235 + C10236 + C10237 + C10238) * C7667 +
            (C10239 + C10240 + C10241 + C10242) * C7666 +
            (C7049 * C32731 + C7048 * C3449 + C7047 * C32886 + C7046 * C3448) *
                C7665) *
               C531) *
              C440 +
          (((C10242 + C10241 + C10240 + C10239) * C7665 +
            (C10238 + C10237 + C10236 + C10235) * C7666 +
            (C10234 + C10233 + C10232 + C10231) * C7667 +
            (C6628 * C3448 + C6627 * C32886 +
             (C6132 * C6310 + C32540 * C6315) * C3449 +
             (C6132 * C6316 + C32540 * C6319) * C32731) *
                C32926) *
               C531 -
           ((C9715 + C9716 + C9717 + C9718) * C32926 +
            (C9714 + C9713 + C9712 + C9711) * C7667 +
            (C9710 + C9709 + C9708 + C9707) * C7666 +
            (C9706 + C9705 + C9704 + C9703) * C7665) *
               C530) *
              C441) *
         C32577) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C754 * C119 + C748 * C126 + C755 * C120 + C749 * C127 +
              C756 * C121 + C32905 * C128) *
                 C3448 +
             (C754 * C131 + C748 * C140 + C755 * C132 + C749 * C141 +
              C756 * C133 + C32905 * C142) *
                 C32886 +
             (C2025 + C2026 + C2027) * C3449 +
             (C2028 + C2029 + C2030) * C32731) *
                C32885 +
            ((C928 + C929 + C930) * C3448 + (C931 + C932 + C933) * C32886 +
             C5151 * C3449 + C5152 * C32731) *
                C32691) *
               C530 -
           (((C2558 + C2557 + C2556) * C32731 +
             (C2555 + C2554 + C2553) * C3449 + C5153 * C32886 + C5154 * C3448) *
                C32691 +
            ((C2036 + C2035 + C2034) * C32731 +
             (C2033 + C2032 + C2031) * C3449 +
             (C2030 + C2029 + C2028) * C32886 +
             (C2027 + C2026 + C2025) * C3448) *
                C32885) *
               C531) *
              C440 +
          (((C5151 * C3448 + C5152 * C32886 + (C2553 + C2554 + C2555) * C3449 +
             (C2556 + C2557 + C2558) * C32731) *
                C32885 +
            ((C1622 + C1621 + C1620) * C3448 +
             (C1619 + C1618 + C1617) * C32886 +
             (C754 * C1068 + C748 * C1083 + C755 * C1069 + C749 * C1084 +
              C756 * C1070 + C32905 * C1085) *
                 C3449 +
             (C754 * C1086 + C748 * C1095 + C755 * C1087 + C749 * C1096 +
              C756 * C1088 + C32905 * C1097) *
                 C32731) *
                C32691) *
               C531 -
           (((C1617 + C1618 + C1619) * C32731 +
             (C1620 + C1621 + C1622) * C3449 + (C939 + C938 + C937) * C32886 +
             (C936 + C935 + C934) * C3448) *
                C32691 +
            (C5153 * C32731 + C5154 * C3449 + (C933 + C932 + C931) * C32886 +
             (C930 + C929 + C928) * C3448) *
                C32885) *
               C530) *
              C441) *
         C32577) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C6132 * C119 + C32540 * C126) * C13611 +
             (C6132 * C131 + C32540 * C140) * C13607 + C7046 * C13612 +
             C7047 * C13608 + C7048 * C13613 + C7049 * C13609 + C7055 * C13614 +
             C7054 * C32932) *
                C32885 +
            (C14424 + C14425 + C14426 + C14427 + C14428 + C14429 + C14430 +
             C14431) *
                C32691) *
               C530 -
           ((C14942 + C14943 + C14944 + C14945 + C14946 + C14947 + C14948 +
             C14949) *
                C32691 +
            (C12157 * C32932 + C12156 * C13614 + C7054 * C13609 +
             C7055 * C13613 + C7049 * C13608 + C7048 * C13612 + C7047 * C13607 +
             C7046 * C13611) *
                C32885) *
               C531) *
              C440 +
          (((C14949 + C14948 + C14947 + C14946 + C14945 + C14944 + C14943 +
             C14942) *
                C32885 +
            (C6632 * C13611 + C6631 * C13607 + C6890 * C13612 + C6891 * C13608 +
             C7051 * C13613 + C7050 * C13609 +
             (C6132 * C7015 + C32540 * C7020) * C13614 +
             (C6132 * C7021 + C32540 * C7024) * C32932) *
                C32691) *
               C531 -
           ((C14432 + C14433 + C14434 + C14435 + C14436 + C14437 + C14438 +
             C14439) *
                C32691 +
            (C14431 + C14430 + C14429 + C14428 + C14427 + C14426 + C14425 +
             C14424) *
                C32885) *
               C530) *
              C441) *
         C32577) /
            (p * q * std::sqrt(p + q));
    d2ee[57] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C754 * C119 + C748 * C126 + C755 * C120 + C749 * C127 +
                 C756 * C121 + C32905 * C128) *
                    C3448 +
                (C754 * C131 + C748 * C140 + C755 * C132 + C749 * C141 +
                 C756 * C133 + C32905 * C142) *
                    C32886 +
                (C2025 + C2026 + C2027) * C3449 +
                (C2028 + C2029 + C2030) * C32731) *
                   C32885 +
               ((C928 + C929 + C930) * C3448 + (C931 + C932 + C933) * C32886 +
                (C1628 + C1627 + C1626) * C3449 +
                (C1625 + C1624 + C1623) * C32731) *
                   C32691) *
                  C32603 * C32589 * C110 -
              (((C756 * C631 + C32905 * C636 + C755 * C630 + C749 * C635 +
                 C754 * C629 + C748 * C634) *
                    C32731 +
                (C756 * C621 + C32905 * C626 + C755 * C620 + C749 * C625 +
                 C754 * C619 + C748 * C624) *
                    C3449 +
                (C1278 + C1277 + C1276) * C32886 +
                (C1275 + C1274 + C1273) * C3448) *
                   C32691 +
               ((C2376 + C2375 + C2374) * C32731 +
                (C2373 + C2372 + C2371) * C3449 +
                (C756 * C134 + C32905 * C143 + C755 * C133 + C749 * C142 +
                 C754 * C132 + C748 * C141) *
                    C32886 +
                (C756 * C122 + C32905 * C129 + C755 * C121 + C749 * C128 +
                 C754 * C120 + C748 * C127) *
                    C3448) *
                   C32885) *
                  C32603 * C32589 * C111 +
              (((C754 * C121 + C748 * C128 + C755 * C122 + C749 * C129 +
                 C756 * C123 + C32905 * C130) *
                    C3448 +
                (C754 * C133 + C748 * C142 + C755 * C134 + C749 * C143 +
                 C756 * C135 + C32905 * C144) *
                    C32886 +
                (C754 * C320 + C748 * C335 + C755 * C319 + C749 * C334 +
                 C756 * C318 + C32905 * C333) *
                    C3449 +
                (C754 * C330 + C748 * C350 + C755 * C329 + C749 * C349 +
                 C756 * C328 + C32905 * C348) *
                    C32731) *
                   C32885 +
               ((C754 * C215 + C748 * C230 + C755 * C214 + C749 * C229 +
                 C756 * C213 + C32905 * C228) *
                    C3448 +
                (C754 * C225 + C748 * C245 + C755 * C224 + C749 * C244 +
                 C756 * C223 + C32905 * C243) *
                    C32886 +
                (C754 * C620 + C748 * C625 + C755 * C621 + C749 * C626 +
                 C756 * C622 + C32905 * C627) *
                    C3449 +
                (C754 * C630 + C748 * C635 + C755 * C631 + C749 * C636 +
                 C756 * C632 + C32905 * C637) *
                    C32731) *
                   C32691) *
                  C32603 * C32589 * C112) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C754 * C119 + C748 * C126 + C755 * C120 + C749 * C127 +
                 C756 * C121 + C32905 * C128) *
                    C3448 +
                (C754 * C131 + C748 * C140 + C755 * C132 + C749 * C141 +
                 C756 * C133 + C32905 * C142) *
                    C32886 +
                (C2025 + C2026 + C2027) * C3449 +
                (C2028 + C2029 + C2030) * C32731) *
                   C32885 +
               ((C928 + C929 + C930) * C3448 + (C931 + C932 + C933) * C32886 +
                (C1628 + C1627 + C1626) * C3449 +
                (C1625 + C1624 + C1623) * C32731) *
                   C32691) *
                  C32603 * C209 -
              (((C1617 + C1618 + C1619) * C32731 +
                (C1620 + C1621 + C1622) * C3449 +
                (C939 + C938 + C937) * C32886 + (C936 + C935 + C934) * C3448) *
                   C32691 +
               ((C1623 + C1624 + C1625) * C32731 +
                (C1626 + C1627 + C1628) * C3449 +
                (C933 + C932 + C931) * C32886 + (C930 + C929 + C928) * C3448) *
                   C32885) *
                  C32603 * C210 +
              ((C948 * C3448 + C949 * C32886 + (C1622 + C1621 + C1620) * C3449 +
                (C1619 + C1618 + C1617) * C32731) *
                   C32885 +
               ((C945 + C944 + C943) * C3448 + (C942 + C941 + C940) * C32886 +
                (C754 * C1580 + C748 * C1583 + C755 * C1581 + C749 * C1584 +
                 C756 * C1582 + C32905 * C1585) *
                    C3449 +
                (C754 * C1586 + C748 * C1589 + C755 * C1587 + C749 * C1590 +
                 C756 * C1588 + C32905 * C1591) *
                    C32731) *
                   C32691) *
                  C32603 * C211) *
             C32577) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C754 * C119 + C748 * C126 + C755 * C120 + C749 * C127 +
             C756 * C121 + C32905 * C128) *
                C3448 +
            (C754 * C131 + C748 * C140 + C755 * C132 + C749 * C141 +
             C756 * C133 + C32905 * C142) *
                C32886 +
            (C2025 + C2026 + C2027) * C3449 +
            (C2028 + C2029 + C2030) * C32731) *
               C32885 +
           ((C928 + C929 + C930) * C3448 + (C931 + C932 + C933) * C32886 +
            (C1628 + C1627 + C1626) * C3449 +
            (C1625 + C1624 + C1623) * C32731) *
               C32691) *
              C315 -
          (((C2558 + C2557 + C2556) * C32731 + (C2555 + C2554 + C2553) * C3449 +
            (C1623 + C1624 + C1625) * C32886 +
            (C1626 + C1627 + C1628) * C3448) *
               C32691 +
           ((C2036 + C2035 + C2034) * C32731 + (C2033 + C2032 + C2031) * C3449 +
            (C2030 + C2029 + C2028) * C32886 +
            (C2027 + C2026 + C2025) * C3448) *
               C32885) *
              C316 +
          ((C2045 * C3448 + C2046 * C32886 + (C2042 + C2041 + C2040) * C3449 +
            (C2039 + C2038 + C2037) * C32731) *
               C32885 +
           ((C2553 + C2554 + C2555) * C3448 + (C2556 + C2557 + C2558) * C32886 +
            (C754 * C2528 + C748 * C2531 + C755 * C2529 + C749 * C2532 +
             C756 * C2530 + C32905 * C2533) *
                C3449 +
            (C754 * C2534 + C748 * C2537 + C755 * C2535 + C749 * C2538 +
             C756 * C2536 + C32905 * C2539) *
                C32731) *
               C32691) *
              C317) *
         C32589 * C32577) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C6132 * C119 + C32540 * C126) * C3448 +
            (C6132 * C131 + C32540 * C140) * C32886 + C7046 * C3449 +
            C7047 * C32731) *
               C7665 +
           (C6224 * C3448 + C6225 * C32886 + C6634 * C3449 + C6633 * C32731) *
               C7666 +
           (C6226 * C3448 + C6227 * C32886 + C6632 * C3449 + C6631 * C32731) *
               C7667 +
           (C6228 * C3448 + C6229 * C32886 + C6630 * C3449 + C6629 * C32731) *
               C32926) *
              C32603 * C32589 * C110 -
          (((C6132 * C1587 + C32540 * C1590) * C32731 +
            (C6132 * C1581 + C32540 * C1584) * C3449 + C6428 * C32886 +
            C6427 * C3448) *
               C32926 +
           (C7231 * C32731 + C7230 * C3449 + C6426 * C32886 + C6425 * C3448) *
               C7667 +
           (C7227 * C32731 + C7226 * C3449 + C6424 * C32886 + C6423 * C3448) *
               C7666 +
           (C7401 * C32731 + C7400 * C3449 +
            (C6132 * C132 + C32540 * C141) * C32886 +
            (C6132 * C120 + C32540 * C127) * C3448) *
               C7665) *
              C32603 * C32589 * C111 +
          (((C6132 * C121 + C32540 * C128) * C3448 +
            (C6132 * C133 + C32540 * C142) * C32886 +
            (C6132 * C320 + C32540 * C335) * C3449 +
            (C6132 * C330 + C32540 * C350) * C32731) *
               C7665 +
           ((C6132 * C215 + C32540 * C230) * C3448 +
            (C6132 * C225 + C32540 * C245) * C32886 +
            (C6132 * C620 + C32540 * C625) * C3449 +
            (C6132 * C630 + C32540 * C635) * C32731) *
               C7666 +
           ((C6132 * C220 + C32540 * C235) * C3448 +
            (C6132 * C240 + C32540 * C250) * C32886 +
            (C6132 * C1062 + C32540 * C1074) * C3449 +
            (C6132 * C1071 + C32540 * C1089) * C32731) *
               C7667 +
           ((C6132 * C867 + C32540 * C876) * C3448 +
            (C6132 * C873 + C32540 * C885) * C32886 +
            (C6132 * C1582 + C32540 * C1585) * C3449 +
            (C6132 * C1588 + C32540 * C1591) * C32731) *
               C32926) *
              C32603 * C32589 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C6132 * C119 + C32540 * C126) * C3448 +
            (C6132 * C131 + C32540 * C140) * C32886 + C7046 * C3449 +
            C7047 * C32731) *
               C7665 +
           (C9703 + C9704 + C9705 + C9706) * C7666 + C9723 * C7667 +
           C9724 * C32926) *
              C32603 * C209 -
          ((C9715 + C9716 + C9717 + C9718) * C32926 +
           (C9714 + C9713 + C9712 + C9711) * C7667 +
           (C9710 + C9709 + C9708 + C9707) * C7666 +
           (C9706 + C9705 + C9704 + C9703) * C7665) *
              C32603 * C210 +
          (C9723 * C7665 + C9724 * C7666 +
           (C9718 + C9717 + C9716 + C9715) * C7667 +
           (C6233 * C3448 + C6232 * C32886 +
            (C6132 * C6606 + C32540 * C6607) * C3449 +
            (C6132 * C6608 + C32540 * C6609) * C32731) *
               C32926) *
              C32603 * C211) *
         C32577) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C6132 * C119 + C32540 * C126) * C3448 +
            (C6132 * C131 + C32540 * C140) * C32886 + C7046 * C3449 +
            C7047 * C32731) *
               C7665 +
           (C9703 + C9704 + C9705 + C9706) * C7666 + C9723 * C7667 +
           C9724 * C32926) *
              C315 -
          ((C6892 * C32731 + C6893 * C3449 + C6629 * C32886 + C6630 * C3448) *
               C32926 +
           (C6891 * C32731 + C6890 * C3449 + C6631 * C32886 + C6632 * C3448) *
               C7667 +
           (C6888 * C32731 + C6887 * C3449 + C6633 * C32886 + C6634 * C3448) *
               C7666 +
           (C7049 * C32731 + C7048 * C3449 + C7047 * C32886 + C7046 * C3448) *
               C7665) *
              C316 +
          ((C7048 * C3448 + C7049 * C32886 + C7055 * C3449 + C7054 * C32731) *
               C7665 +
           (C6887 * C3448 + C6888 * C32886 + C7053 * C3449 + C7052 * C32731) *
               C7666 +
           (C6890 * C3448 + C6891 * C32886 + C7051 * C3449 + C7050 * C32731) *
               C7667 +
           (C6893 * C3448 + C6892 * C32886 +
            (C6132 * C7549 + C32540 * C7550) * C3449 +
            (C6132 * C7551 + C32540 * C7552) * C32731) *
               C32926) *
              C317) *
         C32589 * C32577) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C6132 * C119 + C32540 * C126) * C13611 +
            (C6132 * C131 + C32540 * C140) * C13607 + C7046 * C13612 +
            C7047 * C13608 + C7048 * C13613 + C7049 * C13609 + C7055 * C13614 +
            C7054 * C32932) *
               C32885 +
           (C6224 * C13611 + C6225 * C13607 + C6634 * C13612 + C6633 * C13608 +
            C6887 * C13613 + C6888 * C13609 + C7053 * C13614 + C7052 * C32932) *
               C32691) *
              C32603 * C32589 * C110 -
          (((C6132 * C2535 + C32540 * C2538) * C32932 +
            (C6132 * C2529 + C32540 * C2532) * C13614 + C7229 * C13609 +
            C7228 * C13613 + C7227 * C13608 + C7226 * C13612 + C6424 * C13607 +
            C6423 * C13611) *
               C32691 +
           (C12341 * C32932 + C12340 * C13614 + C7403 * C13609 +
            C7402 * C13613 + C7401 * C13608 + C7400 * C13612 +
            (C6132 * C132 + C32540 * C141) * C13607 +
            (C6132 * C120 + C32540 * C127) * C13611) *
               C32885) *
              C32603 * C32589 * C111 +
          (((C6132 * C121 + C32540 * C128) * C13611 +
            (C6132 * C133 + C32540 * C142) * C13607 +
            (C6132 * C320 + C32540 * C335) * C13612 +
            (C6132 * C330 + C32540 * C350) * C13608 +
            (C6132 * C325 + C32540 * C340) * C13613 +
            (C6132 * C345 + C32540 * C355) * C13609 +
            (C6132 * C1964 + C32540 * C1973) * C13614 +
            (C6132 * C1970 + C32540 * C1982) * C32932) *
               C32885 +
           ((C6132 * C215 + C32540 * C230) * C13611 +
            (C6132 * C225 + C32540 * C245) * C13607 +
            (C6132 * C620 + C32540 * C625) * C13612 +
            (C6132 * C630 + C32540 * C635) * C13608 +
            (C6132 * C1067 + C32540 * C1079) * C13613 +
            (C6132 * C1082 + C32540 * C1094) * C13609 +
            (C6132 * C2530 + C32540 * C2533) * C13614 +
            (C6132 * C2536 + C32540 * C2539) * C32932) *
               C32691) *
              C32603 * C32589 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C6132 * C119 + C32540 * C126) * C13611 +
            (C6132 * C131 + C32540 * C140) * C13607 + C7046 * C13612 +
            C7047 * C13608 + C7048 * C13613 + C7049 * C13609 + C7055 * C13614 +
            C7054 * C32932) *
               C32885 +
           (C14424 + C14425 + C14426 + C14427 + C14428 + C14429 + C14430 +
            C14431) *
               C32691) *
              C32603 * C209 -
          ((C14432 + C14433 + C14434 + C14435 + C14436 + C14437 + C14438 +
            C14439) *
               C32691 +
           (C14431 + C14430 + C14429 + C14428 + C14427 + C14426 + C14425 +
            C14424) *
               C32885) *
              C32603 * C210 +
          ((C14439 + C14438 + C14437 + C14436 + C14435 + C14434 + C14433 +
            C14432) *
               C32885 +
           (C6228 * C13611 + C6229 * C13607 + C6630 * C13612 + C6629 * C13608 +
            C6893 * C13613 + C6892 * C13609 +
            (C6132 * C7549 + C32540 * C7550) * C13614 +
            (C6132 * C7551 + C32540 * C7552) * C32932) *
               C32691) *
              C32603 * C211) *
         C32577) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C6132 * C119 + C32540 * C126) * C13611 +
            (C6132 * C131 + C32540 * C140) * C13607 + C7046 * C13612 +
            C7047 * C13608 + C7048 * C13613 + C7049 * C13609 + C7055 * C13614 +
            C7054 * C32932) *
               C32885 +
           (C14424 + C14425 + C14426 + C14427 + C14428 + C14429 + C14430 +
            C14431) *
               C32691) *
              C315 -
          ((C12435 * C32932 + C12434 * C13614 + C7052 * C13609 +
            C7053 * C13613 + C6888 * C13608 + C6887 * C13612 + C6633 * C13607 +
            C6634 * C13611) *
               C32691 +
           (C12157 * C32932 + C12156 * C13614 + C7054 * C13609 +
            C7055 * C13613 + C7049 * C13608 + C7048 * C13612 + C7047 * C13607 +
            C7046 * C13611) *
               C32885) *
              C316 +
          ((C7048 * C13611 + C7049 * C13607 + C7055 * C13612 + C7054 * C13608 +
            C12156 * C13613 + C12157 * C13609 + C12159 * C13614 +
            C12158 * C32932) *
               C32885 +
           (C6887 * C13611 + C6888 * C13607 + C7053 * C13612 + C7052 * C13608 +
            C12434 * C13613 + C12435 * C13609 +
            (C6132 * C12425 + C32540 * C12426) * C13614 +
            (C6132 * C12427 + C32540 * C12428) * C32932) *
               C32691) *
              C317) *
         C32589 * C32577) /
            (p * q * std::sqrt(p + q));
    d2ee[58] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C6132 * C119 + C32540 * C126) * C3448 +
             (C6132 * C131 + C32540 * C140) * C32886 + C7046 * C3449 +
             C7047 * C32731) *
                C7665 +
            (C9703 + C9704 + C9705 + C9706) * C7666 + C9723 * C7667 +
            C9724 * C32926) *
               C530 -
           ((C6892 * C32731 + C6893 * C3449 + C6629 * C32886 + C6630 * C3448) *
                C32926 +
            (C6891 * C32731 + C6890 * C3449 + C6631 * C32886 + C6632 * C3448) *
                C7667 +
            (C6888 * C32731 + C6887 * C3449 + C6633 * C32886 + C6634 * C3448) *
                C7666 +
            (C7049 * C32731 + C7048 * C3449 + C7047 * C32886 + C7046 * C3448) *
                C7665) *
               C531) *
              C32589 * C442 +
          (((C7400 * C3448 + C7401 * C32886 + C7402 * C3449 + C7403 * C32731) *
                C7665 +
            (C7226 * C3448 + C7227 * C32886 + C7228 * C3449 + C7229 * C32731) *
                C7666 +
            (C7230 * C3448 + C7231 * C32886 + C7232 * C3449 + C7233 * C32731) *
                C7667 +
            (C9967 * C3448 + C9968 * C32886 +
             (C6132 * C7201 + C32540 * C7202) * C3449 +
             (C6132 * C7203 + C32540 * C7204) * C32731) *
                C32926) *
               C531 -
           ((C9970 + C9969 + C9962 + C9961) * C32926 +
            (C9960 + C9959 + C9958 + C9957) * C7667 +
            (C9956 + C9955 + C9954 + C9953) * C7666 +
            (C7401 * C32731 + C7400 * C3449 +
             (C6132 * C132 + C32540 * C141) * C32886 +
             (C6132 * C120 + C32540 * C127) * C3448) *
                C7665) *
               C530) *
              C32589 * C443)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C754 * C119 + C748 * C126 + C755 * C120 + C749 * C127 +
              C756 * C121 + C32905 * C128) *
                 C3448 +
             (C754 * C131 + C748 * C140 + C755 * C132 + C749 * C141 +
              C756 * C133 + C32905 * C142) *
                 C32886 +
             (C2025 + C2026 + C2027) * C3449 +
             (C2028 + C2029 + C2030) * C32731) *
                C32885 +
            ((C928 + C929 + C930) * C3448 + (C931 + C932 + C933) * C32886 +
             (C1628 + C1627 + C1626) * C3449 +
             (C1625 + C1624 + C1623) * C32731) *
                C32691) *
               C530 -
           (((C2558 + C2557 + C2556) * C32731 +
             (C2555 + C2554 + C2553) * C3449 +
             (C1623 + C1624 + C1625) * C32886 +
             (C1626 + C1627 + C1628) * C3448) *
                C32691 +
            ((C2036 + C2035 + C2034) * C32731 +
             (C2033 + C2032 + C2031) * C3449 +
             (C2030 + C2029 + C2028) * C32886 +
             (C2027 + C2026 + C2025) * C3448) *
                C32885) *
               C531) *
              C32589 * C442 +
          ((((C2371 + C2372 + C2373) * C3448 +
             (C2374 + C2375 + C2376) * C32886 +
             (C2377 + C2378 + C2379) * C3449 +
             (C2380 + C2381 + C2382) * C32731) *
                C32885 +
            ((C4753 + C4754 + C4755) * C3448 +
             (C4756 + C4757 + C4758) * C32886 +
             (C754 * C1066 + C748 * C1078 + C755 * C1067 + C749 * C1079 +
              C756 * C2192 + C32905 * C2193) *
                 C3449 +
             (C754 * C1081 + C748 * C1093 + C755 * C1082 + C749 * C1094 +
              C756 * C2194 + C32905 * C2195) *
                 C32731) *
                C32691) *
               C531 -
           (((C4758 + C4757 + C4756) * C32731 +
             (C4755 + C4754 + C4753) * C3449 +
             (C1278 + C1277 + C1276) * C32886 +
             (C1275 + C1274 + C1273) * C3448) *
                C32691 +
            ((C2376 + C2375 + C2374) * C32731 +
             (C2373 + C2372 + C2371) * C3449 +
             (C756 * C134 + C32905 * C143 + C755 * C133 + C749 * C142 +
              C754 * C132 + C748 * C141) *
                 C32886 +
             (C756 * C122 + C32905 * C129 + C755 * C121 + C749 * C128 +
              C754 * C120 + C748 * C127) *
                 C3448) *
                C32885) *
               C530) *
              C32589 * C443)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C6132 * C119 + C32540 * C126) * C13611 +
             (C6132 * C131 + C32540 * C140) * C13607 + C7046 * C13612 +
             C7047 * C13608 + C7048 * C13613 + C7049 * C13609 + C7055 * C13614 +
             C7054 * C32932) *
                C32885 +
            (C14424 + C14425 + C14426 + C14427 + C14428 + C14429 + C14430 +
             C14431) *
                C32691) *
               C530 -
           ((C12435 * C32932 + C12434 * C13614 + C7052 * C13609 +
             C7053 * C13613 + C6888 * C13608 + C6887 * C13612 + C6633 * C13607 +
             C6634 * C13611) *
                C32691 +
            (C12157 * C32932 + C12156 * C13614 + C7054 * C13609 +
             C7055 * C13613 + C7049 * C13608 + C7048 * C13612 + C7047 * C13607 +
             C7046 * C13611) *
                C32885) *
               C531) *
              C32589 * C442 +
          (((C7400 * C13611 + C7401 * C13607 + C7402 * C13612 + C7403 * C13608 +
             C12340 * C13613 + C12341 * C13609 + C12342 * C13614 +
             C12343 * C32932) *
                C32885 +
            (C7226 * C13611 + C7227 * C13607 + C7228 * C13612 + C7229 * C13608 +
             C14678 * C13613 + C14679 * C13609 +
             (C6132 * C12241 + C32540 * C12242) * C13614 +
             (C6132 * C12243 + C32540 * C12244) * C32932) *
                C32691) *
               C531 -
           ((C14681 + C14680 + C14673 + C14672 + C14671 + C14670 + C14669 +
             C14668) *
                C32691 +
            (C12341 * C32932 + C12340 * C13614 + C7403 * C13609 +
             C7402 * C13613 + C7401 * C13608 + C7400 * C13612 +
             (C6132 * C132 + C32540 * C141) * C13607 +
             (C6132 * C120 + C32540 * C127) * C13611) *
                C32885) *
               C530) *
              C32589 * C443)) /
            (p * q * std::sqrt(p + q));
    d2ee[59] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C754 * C119 + C748 * C126 + C755 * C120 + C749 * C127 +
             C756 * C121 + C32905 * C128) *
                C3448 +
            (C754 * C131 + C748 * C140 + C755 * C132 + C749 * C141 +
             C756 * C133 + C32905 * C142) *
                C32886 +
            (C2025 + C2026 + C2027) * C3449 +
            (C2028 + C2029 + C2030) * C32731) *
               C32885 +
           ((C928 + C929 + C930) * C3448 + (C931 + C932 + C933) * C32886 +
            (C1628 + C1627 + C1626) * C3449 +
            (C1625 + C1624 + C1623) * C32731) *
               C32691) *
              C32603 * C209 -
          (((C1617 + C1618 + C1619) * C32731 + (C1620 + C1621 + C1622) * C3449 +
            (C939 + C938 + C937) * C32886 + (C936 + C935 + C934) * C3448) *
               C32691 +
           ((C1623 + C1624 + C1625) * C32731 + (C1626 + C1627 + C1628) * C3449 +
            (C933 + C932 + C931) * C32886 + (C930 + C929 + C928) * C3448) *
               C32885) *
              C32603 * C210 +
          ((C948 * C3448 + C949 * C32886 + (C1622 + C1621 + C1620) * C3449 +
            (C1619 + C1618 + C1617) * C32731) *
               C32885 +
           ((C945 + C944 + C943) * C3448 + (C942 + C941 + C940) * C32886 +
            (C754 * C1580 + C748 * C1583 + C755 * C1581 + C749 * C1584 +
             C756 * C1582 + C32905 * C1585) *
                C3449 +
            (C754 * C1586 + C748 * C1589 + C755 * C1587 + C749 * C1590 +
             C756 * C1588 + C32905 * C1591) *
                C32731) *
               C32691) *
              C32603 * C211) *
         C32577) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C754 * C119 + C748 * C126 + C755 * C120 + C749 * C127 +
             C756 * C121 + C32905 * C128) *
                C3448 +
            (C754 * C131 + C748 * C140 + C755 * C132 + C749 * C141 +
             C756 * C133 + C32905 * C142) *
                C32886 +
            (C2025 + C2026 + C2027) * C3449 +
            (C2028 + C2029 + C2030) * C32731) *
               C32885 +
           ((C928 + C929 + C930) * C3448 + (C931 + C932 + C933) * C32886 +
            (C1628 + C1627 + C1626) * C3449 +
            (C1625 + C1624 + C1623) * C32731) *
               C32691) *
              C32603 * C32589 * C110 -
          (((C756 * C631 + C32905 * C636 + C755 * C630 + C749 * C635 +
             C754 * C629 + C748 * C634) *
                C32731 +
            (C756 * C621 + C32905 * C626 + C755 * C620 + C749 * C625 +
             C754 * C619 + C748 * C624) *
                C3449 +
            (C1278 + C1277 + C1276) * C32886 +
            (C1275 + C1274 + C1273) * C3448) *
               C32691 +
           ((C2376 + C2375 + C2374) * C32731 + (C2373 + C2372 + C2371) * C3449 +
            (C756 * C134 + C32905 * C143 + C755 * C133 + C749 * C142 +
             C754 * C132 + C748 * C141) *
                C32886 +
            (C756 * C122 + C32905 * C129 + C755 * C121 + C749 * C128 +
             C754 * C120 + C748 * C127) *
                C3448) *
               C32885) *
              C32603 * C32589 * C111 +
          (((C754 * C121 + C748 * C128 + C755 * C122 + C749 * C129 +
             C756 * C123 + C32905 * C130) *
                C3448 +
            (C754 * C133 + C748 * C142 + C755 * C134 + C749 * C143 +
             C756 * C135 + C32905 * C144) *
                C32886 +
            (C754 * C320 + C748 * C335 + C755 * C319 + C749 * C334 +
             C756 * C318 + C32905 * C333) *
                C3449 +
            (C754 * C330 + C748 * C350 + C755 * C329 + C749 * C349 +
             C756 * C328 + C32905 * C348) *
                C32731) *
               C32885 +
           ((C754 * C215 + C748 * C230 + C755 * C214 + C749 * C229 +
             C756 * C213 + C32905 * C228) *
                C3448 +
            (C754 * C225 + C748 * C245 + C755 * C224 + C749 * C244 +
             C756 * C223 + C32905 * C243) *
                C32886 +
            (C754 * C620 + C748 * C625 + C755 * C621 + C749 * C626 +
             C756 * C622 + C32905 * C627) *
                C3449 +
            (C754 * C630 + C748 * C635 + C755 * C631 + C749 * C636 +
             C756 * C632 + C32905 * C637) *
                C32731) *
               C32691) *
              C32603 * C32589 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C6132 * C119 + C32540 * C126) * C3448 +
            (C6132 * C131 + C32540 * C140) * C32886 + C7046 * C3449 +
            C7047 * C32731) *
               C7665 +
           (C6224 * C3448 + C6225 * C32886 + C6634 * C3449 + C6633 * C32731) *
               C7666 +
           (C6226 * C3448 + C6227 * C32886 + C6632 * C3449 + C6631 * C32731) *
               C7667 +
           (C6228 * C3448 + C6229 * C32886 + C6630 * C3449 + C6629 * C32731) *
               C32926) *
              C32603 * C32589 * C110 -
          (((C6132 * C1587 + C32540 * C1590) * C32731 +
            (C6132 * C1581 + C32540 * C1584) * C3449 + C6428 * C32886 +
            C6427 * C3448) *
               C32926 +
           (C7231 * C32731 + C7230 * C3449 + C6426 * C32886 + C6425 * C3448) *
               C7667 +
           (C7227 * C32731 + C7226 * C3449 + C6424 * C32886 + C6423 * C3448) *
               C7666 +
           (C7401 * C32731 + C7400 * C3449 +
            (C6132 * C132 + C32540 * C141) * C32886 +
            (C6132 * C120 + C32540 * C127) * C3448) *
               C7665) *
              C32603 * C32589 * C111 +
          (((C6132 * C121 + C32540 * C128) * C3448 +
            (C6132 * C133 + C32540 * C142) * C32886 +
            (C6132 * C320 + C32540 * C335) * C3449 +
            (C6132 * C330 + C32540 * C350) * C32731) *
               C7665 +
           ((C6132 * C215 + C32540 * C230) * C3448 +
            (C6132 * C225 + C32540 * C245) * C32886 +
            (C6132 * C620 + C32540 * C625) * C3449 +
            (C6132 * C630 + C32540 * C635) * C32731) *
               C7666 +
           ((C6132 * C220 + C32540 * C235) * C3448 +
            (C6132 * C240 + C32540 * C250) * C32886 +
            (C6132 * C1062 + C32540 * C1074) * C3449 +
            (C6132 * C1071 + C32540 * C1089) * C32731) *
               C7667 +
           ((C6132 * C867 + C32540 * C876) * C3448 +
            (C6132 * C873 + C32540 * C885) * C32886 +
            (C6132 * C1582 + C32540 * C1585) * C3449 +
            (C6132 * C1588 + C32540 * C1591) * C32731) *
               C32926) *
              C32603 * C32589 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C6132 * C119 + C32540 * C126) * C3448 +
            (C6132 * C131 + C32540 * C140) * C32886 + C7046 * C3449 +
            C7047 * C32731) *
               C7665 +
           (C9703 + C9704 + C9705 + C9706) * C7666 + C9723 * C7667 +
           C9724 * C32926) *
              C32603 * C209 -
          ((C9715 + C9716 + C9717 + C9718) * C32926 +
           (C9714 + C9713 + C9712 + C9711) * C7667 +
           (C9710 + C9709 + C9708 + C9707) * C7666 +
           (C9706 + C9705 + C9704 + C9703) * C7665) *
              C32603 * C210 +
          (C9723 * C7665 + C9724 * C7666 +
           (C9718 + C9717 + C9716 + C9715) * C7667 +
           (C6233 * C3448 + C6232 * C32886 +
            (C6132 * C6606 + C32540 * C6607) * C3449 +
            (C6132 * C6608 + C32540 * C6609) * C32731) *
               C32926) *
              C32603 * C211) *
         C32577) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C6132 * C119 + C32540 * C126) * C13611 +
            (C6132 * C131 + C32540 * C140) * C13607 + C7046 * C13612 +
            C7047 * C13608 + C7048 * C13613 + C7049 * C13609 + C7055 * C13614 +
            C7054 * C32932) *
               C32885 +
           (C6224 * C13611 + C6225 * C13607 + C6634 * C13612 + C6633 * C13608 +
            C6887 * C13613 + C6888 * C13609 + C7053 * C13614 + C7052 * C32932) *
               C32691) *
              C32603 * C32589 * C110 -
          (((C6132 * C2535 + C32540 * C2538) * C32932 +
            (C6132 * C2529 + C32540 * C2532) * C13614 + C7229 * C13609 +
            C7228 * C13613 + C7227 * C13608 + C7226 * C13612 + C6424 * C13607 +
            C6423 * C13611) *
               C32691 +
           (C12341 * C32932 + C12340 * C13614 + C7403 * C13609 +
            C7402 * C13613 + C7401 * C13608 + C7400 * C13612 +
            (C6132 * C132 + C32540 * C141) * C13607 +
            (C6132 * C120 + C32540 * C127) * C13611) *
               C32885) *
              C32603 * C32589 * C111 +
          (((C6132 * C121 + C32540 * C128) * C13611 +
            (C6132 * C133 + C32540 * C142) * C13607 +
            (C6132 * C320 + C32540 * C335) * C13612 +
            (C6132 * C330 + C32540 * C350) * C13608 +
            (C6132 * C325 + C32540 * C340) * C13613 +
            (C6132 * C345 + C32540 * C355) * C13609 +
            (C6132 * C1964 + C32540 * C1973) * C13614 +
            (C6132 * C1970 + C32540 * C1982) * C32932) *
               C32885 +
           ((C6132 * C215 + C32540 * C230) * C13611 +
            (C6132 * C225 + C32540 * C245) * C13607 +
            (C6132 * C620 + C32540 * C625) * C13612 +
            (C6132 * C630 + C32540 * C635) * C13608 +
            (C6132 * C1067 + C32540 * C1079) * C13613 +
            (C6132 * C1082 + C32540 * C1094) * C13609 +
            (C6132 * C2530 + C32540 * C2533) * C13614 +
            (C6132 * C2536 + C32540 * C2539) * C32932) *
               C32691) *
              C32603 * C32589 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C6132 * C119 + C32540 * C126) * C13611 +
            (C6132 * C131 + C32540 * C140) * C13607 + C7046 * C13612 +
            C7047 * C13608 + C7048 * C13613 + C7049 * C13609 + C7055 * C13614 +
            C7054 * C32932) *
               C32885 +
           (C14424 + C14425 + C14426 + C14427 + C14428 + C14429 + C14430 +
            C14431) *
               C32691) *
              C32603 * C209 -
          ((C14432 + C14433 + C14434 + C14435 + C14436 + C14437 + C14438 +
            C14439) *
               C32691 +
           (C14431 + C14430 + C14429 + C14428 + C14427 + C14426 + C14425 +
            C14424) *
               C32885) *
              C32603 * C210 +
          ((C14439 + C14438 + C14437 + C14436 + C14435 + C14434 + C14433 +
            C14432) *
               C32885 +
           (C6228 * C13611 + C6229 * C13607 + C6630 * C13612 + C6629 * C13608 +
            C6893 * C13613 + C6892 * C13609 +
            (C6132 * C7549 + C32540 * C7550) * C13614 +
            (C6132 * C7551 + C32540 * C7552) * C32932) *
               C32691) *
              C32603 * C211) *
         C32577) /
            (p * q * std::sqrt(p + q));
    d2ee[60] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C127 +
                 C115 * C121 + C103 * C128 + C116 * C122 + C104 * C129 +
                 C117 * C123 + C105 * C130) *
                    C118 +
                (C113 * C131 + C101 * C140 + C114 * C132 + C102 * C141 +
                 C115 * C133 + C103 * C142 + C116 * C134 + C104 * C143 +
                 C117 * C135 + C105 * C144) *
                    C32644) *
                   C32633 * C32603 * C440 -
               ((C117 * C223 + C105 * C243 + C116 * C224 + C104 * C244 +
                 C115 * C225 + C103 * C245 + C114 * C226 + C102 * C246 +
                 C113 * C227 + C101 * C247) *
                    C32644 +
                (C117 * C213 + C105 * C228 + C116 * C214 + C104 * C229 +
                 C115 * C215 + C103 * C230 + C114 * C216 + C102 * C231 +
                 C113 * C217 + C101 * C232) *
                    C118) *
                   C32633 * C32603 * C441) *
                  C442 +
              (((C113 * C216 + C101 * C231 + C114 * C215 + C102 * C230 +
                 C115 * C214 + C103 * C229 + C116 * C213 + C104 * C228 +
                 C117 * C444 + C105 * C445) *
                    C118 +
                (C113 * C226 + C101 * C246 + C114 * C225 + C102 * C245 +
                 C115 * C224 + C103 * C244 + C116 * C223 + C104 * C243 +
                 C117 * C446 + C105 * C447) *
                    C32644) *
                   C32633 * C32603 * C441 -
               ((C117 * C136 + C105 * C145 + C116 * C135 + C104 * C144 +
                 C115 * C134 + C103 * C143 + C114 * C133 + C102 * C142 +
                 C113 * C132 + C101 * C141) *
                    C32644 +
                (C117 * C124 + C105 * C137 + C116 * C123 + C104 * C130 +
                 C115 * C122 + C103 * C129 + C114 * C121 + C102 * C128 +
                 C113 * C120 + C101 * C127) *
                    C118) *
                   C32633 * C32603 * C440) *
                  C443) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C754 * C119 + C748 * C126 + C755 * C120 + C749 * C127 +
                  C756 * C121 + C32905 * C128) *
                     C118 +
                 (C754 * C131 + C748 * C140 + C755 * C132 + C749 * C141 +
                  C756 * C133 + C32905 * C142) *
                     C32644) *
                    C32951 +
                ((C928 + C929 + C930) * C118 + (C931 + C932 + C933) * C32644) *
                    C32939 +
                C952 * C32916) *
                   C32603 * C440 -
               (((C940 + C941 + C942) * C32644 + (C943 + C944 + C945) * C118) *
                    C32916 +
                ((C939 + C938 + C937) * C32644 + (C936 + C935 + C934) * C118) *
                    C32939 +
                ((C933 + C932 + C931) * C32644 + (C930 + C929 + C928) * C118) *
                    C32951) *
                   C32603 * C441) *
                  C442 +
              ((((C1273 + C1274 + C1275) * C118 +
                 (C1276 + C1277 + C1278) * C32644) *
                    C32951 +
                ((C1279 + C1280 + C1281) * C118 +
                 (C1282 + C1283 + C1284) * C32644) *
                    C32939 +
                ((C754 * C868 + C748 * C877 + C755 * C867 + C749 * C876 +
                  C756 * C1244 + C32905 * C1245) *
                     C118 +
                 (C754 * C874 + C748 * C886 + C755 * C873 + C749 * C885 +
                  C756 * C1246 + C32905 * C1247) *
                     C32644) *
                    C32916) *
                   C32603 * C441 -
               (((C1284 + C1283 + C1282) * C32644 +
                 (C1281 + C1280 + C1279) * C118) *
                    C32916 +
                ((C1278 + C1277 + C1276) * C32644 +
                 (C1275 + C1274 + C1273) * C118) *
                    C32939 +
                ((C756 * C134 + C32905 * C143 + C755 * C133 + C749 * C142 +
                  C754 * C132 + C748 * C141) *
                     C32644 +
                 (C756 * C122 + C32905 * C129 + C755 * C121 + C749 * C128 +
                  C754 * C120 + C748 * C127) *
                     C118) *
                    C32951) *
                   C32603 * C440) *
                  C443)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C754 * C119 + C748 * C126 + C755 * C120 + C749 * C127 +
             C756 * C121 + C32905 * C128) *
                C1741 +
            (C754 * C131 + C748 * C140 + C755 * C132 + C749 * C141 +
             C756 * C133 + C32905 * C142) *
                C32952 +
            (C2025 + C2026 + C2027) * C1742 + (C2028 + C2029 + C2030) * C32941 +
            C2045 * C1743 + C2046 * C32919) *
               C32633 * C32603 * C440 -
           ((C756 * C1082 + C32905 * C1094 + C755 * C1081 + C749 * C1093 +
             C754 * C1080 + C748 * C1092) *
                C32919 +
            (C756 * C1067 + C32905 * C1079 + C755 * C1066 + C749 * C1078 +
             C754 * C1065 + C748 * C1077) *
                C1743 +
            (C1623 + C1624 + C1625) * C32941 + (C1626 + C1627 + C1628) * C1742 +
            (C933 + C932 + C931) * C32952 + (C930 + C929 + C928) * C1741) *
               C32633 * C32603 * C441) *
              C442 +
          (((C1273 + C1274 + C1275) * C1741 + (C1276 + C1277 + C1278) * C32952 +
            (C754 * C619 + C748 * C624 + C755 * C620 + C749 * C625 +
             C756 * C621 + C32905 * C626) *
                C1742 +
            (C754 * C629 + C748 * C634 + C755 * C630 + C749 * C635 +
             C756 * C631 + C32905 * C636) *
                C32941 +
            (C754 * C1066 + C748 * C1078 + C755 * C1067 + C749 * C1079 +
             C756 * C2192 + C32905 * C2193) *
                C1743 +
            (C754 * C1081 + C748 * C1093 + C755 * C1082 + C749 * C1094 +
             C756 * C2194 + C32905 * C2195) *
                C32919) *
               C32633 * C32603 * C441 -
           ((C756 * C346 + C32905 * C356 + C755 * C345 + C749 * C355 +
             C754 * C344 + C748 * C354) *
                C32919 +
            (C756 * C326 + C32905 * C341 + C755 * C325 + C749 * C340 +
             C754 * C324 + C748 * C339) *
                C1743 +
            (C756 * C329 + C32905 * C349 + C755 * C330 + C749 * C350 +
             C754 * C331 + C748 * C351) *
                C32941 +
            (C756 * C319 + C32905 * C334 + C755 * C320 + C749 * C335 +
             C754 * C321 + C748 * C336) *
                C1742 +
            (C756 * C134 + C32905 * C143 + C755 * C133 + C749 * C142 +
             C754 * C132 + C748 * C141) *
                C32952 +
            (C756 * C122 + C32905 * C129 + C755 * C121 + C749 * C128 +
             C754 * C120 + C748 * C127) *
                C1741) *
               C32633 * C32603 * C440) *
              C443)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C5270 * C119 + C32948 * C126 + C5271 * C120 + C32935 * C127 +
              C5272 * C121 + C32905 * C128) *
                 C118 +
             (C5270 * C131 + C32948 * C140 + C5271 * C132 + C32935 * C141 +
              C5272 * C133 + C32905 * C142) *
                 C32644) *
                C5267 +
            ((C5420 + C5421 + C5422) * C118 +
             (C5423 + C5424 + C5425) * C32644) *
                C5268 +
            C5444 * C32916) *
               C32603 * C440 -
           (((C5432 + C5433 + C5434) * C32644 +
             (C5435 + C5436 + C5437) * C118) *
                C32916 +
            ((C5431 + C5430 + C5429) * C32644 +
             (C5428 + C5427 + C5426) * C118) *
                C5268 +
            ((C5425 + C5424 + C5423) * C32644 +
             (C5422 + C5421 + C5420) * C118) *
                C5267) *
               C32603 * C441) *
              C442 +
          ((((C5725 + C5726 + C5727) * C118 +
             (C5728 + C5729 + C5730) * C32644) *
                C5267 +
            ((C5731 + C5732 + C5733) * C118 +
             (C5734 + C5735 + C5736) * C32644) *
                C5268 +
            ((C5270 * C868 + C32948 * C877 + C5271 * C867 + C32935 * C876 +
              C5272 * C1244 + C32905 * C1245) *
                 C118 +
             (C5270 * C874 + C32948 * C886 + C5271 * C873 + C32935 * C885 +
              C5272 * C1246 + C32905 * C1247) *
                 C32644) *
                C32916) *
               C32603 * C441 -
           (((C5736 + C5735 + C5734) * C32644 +
             (C5733 + C5732 + C5731) * C118) *
                C32916 +
            ((C5730 + C5729 + C5728) * C32644 +
             (C5727 + C5726 + C5725) * C118) *
                C5268 +
            ((C5272 * C134 + C32905 * C143 + C5271 * C133 + C32935 * C142 +
              C5270 * C132 + C32948 * C141) *
                 C32644 +
             (C5272 * C122 + C32905 * C129 + C5271 * C121 + C32935 * C128 +
              C5270 * C120 + C32948 * C127) *
                 C118) *
                C5267) *
               C32603 * C440) *
              C443)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C6132 * C119 + C32540 * C126) * C118 +
             (C6132 * C131 + C32540 * C140) * C32644) *
                C6127 +
            (C6234 + C6235) * C6128 + C6244 * C6129 + C6245 * C6130 +
            C6246 * C6131) *
               C32603 * C440 -
           ((C6242 + C6243) * C6131 + (C6241 + C6240) * C6130 +
            (C6239 + C6238) * C6129 + (C6237 + C6236) * C6128 +
            (C6235 + C6234) * C6127) *
               C32603 * C441) *
              C442 +
          (((C6431 + C6432) * C6127 + (C6433 + C6434) * C6128 +
            (C6435 + C6436) * C6129 + (C6437 + C6438) * C6130 +
            ((C6132 * C6402 + C32540 * C6403) * C118 +
             (C6132 * C6404 + C32540 * C6405) * C32644) *
                C6131) *
               C32603 * C441 -
           ((C6438 + C6437) * C6131 + (C6436 + C6435) * C6130 +
            (C6434 + C6433) * C6129 + (C6432 + C6431) * C6128 +
            ((C6132 * C132 + C32540 * C141) * C32644 +
             (C6132 * C120 + C32540 * C127) * C118) *
                C6127) *
               C32603 * C440) *
              C443)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C6132 * C119 + C32540 * C126) * C1741 +
             (C6132 * C131 + C32540 * C140) * C32952 + C7046 * C1742 +
             C7047 * C32941 + C7048 * C1743 + C7049 * C32919) *
                C5267 +
            (C6863 + C6864 + C6865 + C6866 + C6894 + C6895) * C5268 +
            C6903 * C32916) *
               C32603 * C440 -
           ((C6899 + C6900 + C6883 + C6884 + C6885 + C6886) * C32916 +
            (C6898 + C6897 + C6874 + C6873 + C6872 + C6871) * C5268 +
            (C6895 + C6894 + C6866 + C6865 + C6864 + C6863) * C5267) *
               C32603 * C441) *
              C442 +
          (((C7206 + C7207 + C7234 + C7235 + C7236 + C7237) * C5267 +
            (C7216 + C7217 + C7238 + C7239 + C7240 + C7241) * C5268 +
            (C6427 * C1741 + C6428 * C32952 +
             (C6132 * C1581 + C32540 * C1584) * C1742 +
             (C6132 * C1587 + C32540 * C1590) * C32941 +
             (C6132 * C7201 + C32540 * C7202) * C1743 +
             (C6132 * C7203 + C32540 * C7204) * C32919) *
                C32916) *
               C32603 * C441 -
           ((C7241 + C7240 + C7239 + C7238 + C7217 + C7216) * C32916 +
            (C7237 + C7236 + C7235 + C7234 + C7207 + C7206) * C5268 +
            ((C6132 * C344 + C32540 * C354) * C32919 +
             (C6132 * C324 + C32540 * C339) * C1743 +
             (C6132 * C331 + C32540 * C351) * C32941 +
             (C6132 * C321 + C32540 * C336) * C1742 +
             (C6132 * C132 + C32540 * C141) * C32952 +
             (C6132 * C120 + C32540 * C127) * C1741) *
                C5267) *
               C32603 * C440) *
              C443)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C5270 * C119 + C32948 * C126 + C5271 * C120 + C32935 * C127 +
             C5272 * C121 + C32905 * C128) *
                C10355 +
            (C5270 * C131 + C32948 * C140 + C5271 * C132 + C32935 * C141 +
             C5272 * C133 + C32905 * C142) *
                C10352 +
            (C10615 + C10616 + C10617) * C10356 +
            (C10618 + C10619 + C10620) * C10353 + C10635 * C10357 +
            C10636 * C32919) *
               C32633 * C32603 * C440 -
           ((C5272 * C1082 + C32905 * C1094 + C5271 * C1081 + C32935 * C1093 +
             C5270 * C1080 + C32948 * C1092) *
                C32919 +
            (C5272 * C1067 + C32905 * C1079 + C5271 * C1066 + C32935 * C1078 +
             C5270 * C1065 + C32948 * C1077) *
                C10357 +
            (C6059 + C6060 + C6061) * C10353 +
            (C6062 + C6063 + C6064) * C10356 +
            (C5425 + C5424 + C5423) * C10352 +
            (C5422 + C5421 + C5420) * C10355) *
               C32633 * C32603 * C441) *
              C442 +
          (((C5725 + C5726 + C5727) * C10355 +
            (C5728 + C5729 + C5730) * C10352 +
            (C5270 * C619 + C32948 * C624 + C5271 * C620 + C32935 * C625 +
             C5272 * C621 + C32905 * C626) *
                C10356 +
            (C5270 * C629 + C32948 * C634 + C5271 * C630 + C32935 * C635 +
             C5272 * C631 + C32905 * C636) *
                C10353 +
            (C5270 * C1066 + C32948 * C1078 + C5271 * C1067 + C32935 * C1079 +
             C5272 * C2192 + C32905 * C2193) *
                C10357 +
            (C5270 * C1081 + C32948 * C1093 + C5271 * C1082 + C32935 * C1094 +
             C5272 * C2194 + C32905 * C2195) *
                C32919) *
               C32633 * C32603 * C441 -
           ((C5272 * C346 + C32905 * C356 + C5271 * C345 + C32935 * C355 +
             C5270 * C344 + C32948 * C354) *
                C32919 +
            (C5272 * C326 + C32905 * C341 + C5271 * C325 + C32935 * C340 +
             C5270 * C324 + C32948 * C339) *
                C10357 +
            (C5272 * C329 + C32905 * C349 + C5271 * C330 + C32935 * C350 +
             C5270 * C331 + C32948 * C351) *
                C10353 +
            (C5272 * C319 + C32905 * C334 + C5271 * C320 + C32935 * C335 +
             C5270 * C321 + C32948 * C336) *
                C10356 +
            (C5272 * C134 + C32905 * C143 + C5271 * C133 + C32935 * C142 +
             C5270 * C132 + C32948 * C141) *
                C10352 +
            (C5272 * C122 + C32905 * C129 + C5271 * C121 + C32935 * C128 +
             C5270 * C120 + C32948 * C127) *
                C10355) *
               C32633 * C32603 * C440) *
              C443)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C6132 * C119 + C32540 * C126) * C10355 +
             (C6132 * C131 + C32540 * C140) * C10352 + C7046 * C10356 +
             C7047 * C10353 + C7048 * C10357 + C7049 * C32919) *
                C32951 +
            (C11349 + C11350 + C11351 + C11352 + C11353 + C11354) * C32939 +
            C11371 * C32916) *
               C32603 * C440 -
           ((C11361 + C11362 + C11363 + C11364 + C11365 + C11366) * C32916 +
            (C11360 + C11359 + C11358 + C11357 + C11356 + C11355) * C32939 +
            (C11354 + C11353 + C11352 + C11351 + C11350 + C11349) * C32951) *
               C32603 * C441) *
              C442 +
          (((C11628 + C11629 + C11630 + C11631 + C11632 + C11633) * C32951 +
            (C11634 + C11635 + C11636 + C11637 + C11638 + C11639) * C32939 +
            (C6427 * C10355 + C6428 * C10352 + C9967 * C10356 + C9968 * C10353 +
             (C6132 * C7201 + C32540 * C7202) * C10357 +
             (C6132 * C7203 + C32540 * C7204) * C32919) *
                C32916) *
               C32603 * C441 -
           ((C11639 + C11638 + C11637 + C11636 + C11635 + C11634) * C32916 +
            (C11633 + C11632 + C11631 + C11630 + C11629 + C11628) * C32939 +
            (C7403 * C32919 + C7402 * C10357 + C7401 * C10353 + C7400 * C10356 +
             (C6132 * C132 + C32540 * C141) * C10352 +
             (C6132 * C120 + C32540 * C127) * C10355) *
                C32951) *
               C32603 * C440) *
              C443)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C6132 * C119 + C32540 * C126) * C12010 +
            (C6132 * C131 + C32540 * C140) * C12005 + C7046 * C12011 +
            C7047 * C12006 + C7048 * C12012 + C7049 * C12007 + C7055 * C12013 +
            C7054 * C12008 + C12156 * C12014 + C12157 * C12009) *
               C32633 * C32603 * C440 -
           ((C6132 * C7019 + C32540 * C7023) * C12009 +
            (C6132 * C7014 + C32540 * C7018) * C12014 + C7052 * C12008 +
            C7053 * C12013 + C6888 * C12007 + C6887 * C12012 + C6633 * C12006 +
            C6634 * C12011 + C6225 * C12005 + C6224 * C12010) *
               C32633 * C32603 * C441) *
              C442 +
          ((C6423 * C12010 + C6424 * C12005 + C7226 * C12011 + C7227 * C12006 +
            C7228 * C12012 + C7229 * C12007 +
            (C6132 * C2529 + C32540 * C2532) * C12013 +
            (C6132 * C2535 + C32540 * C2538) * C12008 +
            (C6132 * C12241 + C32540 * C12242) * C12014 +
            (C6132 * C12243 + C32540 * C12244) * C12009) *
               C32633 * C32603 * C441 -
           ((C6132 * C1980 + C32540 * C1986) * C12009 +
            (C6132 * C1968 + C32540 * C1977) * C12014 +
            (C6132 * C1971 + C32540 * C1983) * C12008 +
            (C6132 * C1965 + C32540 * C1974) * C12013 + C7403 * C12007 +
            C7402 * C12012 + C7401 * C12006 + C7400 * C12011 +
            (C6132 * C132 + C32540 * C141) * C12005 +
            (C6132 * C120 + C32540 * C127) * C12010) *
               C32633 * C32603 * C440) *
              C443)) /
            (p * q * std::sqrt(p + q));
    d2ee[61] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C127 +
                 C115 * C121 + C103 * C128 + C116 * C122 + C104 * C129 +
                 C117 * C123 + C105 * C130) *
                    C118 +
                (C113 * C131 + C101 * C140 + C114 * C132 + C102 * C141 +
                 C115 * C133 + C103 * C142 + C116 * C134 + C104 * C143 +
                 C117 * C135 + C105 * C144) *
                    C32644) *
                   C32633 * C530 -
               ((C117 * C328 + C105 * C348 + C116 * C329 + C104 * C349 +
                 C115 * C330 + C103 * C350 + C114 * C331 + C102 * C351 +
                 C113 * C332 + C101 * C352) *
                    C32644 +
                (C117 * C318 + C105 * C333 + C116 * C319 + C104 * C334 +
                 C115 * C320 + C103 * C335 + C114 * C321 + C102 * C336 +
                 C113 * C322 + C101 * C337) *
                    C118) *
                   C32633 * C531) *
                  C440 +
              (((C113 * C618 + C101 * C623 + C114 * C619 + C102 * C624 +
                 C115 * C620 + C103 * C625 + C116 * C621 + C104 * C626 +
                 C117 * C622 + C105 * C627) *
                    C118 +
                (C113 * C628 + C101 * C633 + C114 * C629 + C102 * C634 +
                 C115 * C630 + C103 * C635 + C116 * C631 + C104 * C636 +
                 C117 * C632 + C105 * C637) *
                    C32644) *
                   C32633 * C531 -
               ((C117 * C223 + C105 * C243 + C116 * C224 + C104 * C244 +
                 C115 * C225 + C103 * C245 + C114 * C226 + C102 * C246 +
                 C113 * C227 + C101 * C247) *
                    C32644 +
                (C117 * C213 + C105 * C228 + C116 * C214 + C104 * C229 +
                 C115 * C215 + C103 * C230 + C114 * C216 + C102 * C231 +
                 C113 * C217 + C101 * C232) *
                    C118) *
                   C32633 * C530) *
                  C441) *
             C32577 +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C754 * C119 + C748 * C126 + C755 * C120 + C749 * C127 +
                  C756 * C121 + C32905 * C128) *
                     C118 +
                 (C754 * C131 + C748 * C140 + C755 * C132 + C749 * C141 +
                  C756 * C133 + C32905 * C142) *
                     C32644) *
                    C32951 +
                ((C928 + C929 + C930) * C118 + (C931 + C932 + C933) * C32644) *
                    C32939 +
                C952 * C32916) *
                   C530 -
               (((C1617 + C1618 + C1619) * C32644 +
                 (C1620 + C1621 + C1622) * C118) *
                    C32916 +
                ((C1623 + C1624 + C1625) * C32644 +
                 (C1626 + C1627 + C1628) * C118) *
                    C32939 +
                ((C756 * C330 + C32905 * C350 + C755 * C331 + C749 * C351 +
                  C754 * C332 + C748 * C352) *
                     C32644 +
                 (C756 * C320 + C32905 * C335 + C755 * C321 + C749 * C336 +
                  C754 * C322 + C748 * C337) *
                     C118) *
                    C32951) *
                   C531) *
                  C440 +
              ((((C1628 + C1627 + C1626) * C118 +
                 (C1625 + C1624 + C1623) * C32644) *
                    C32951 +
                ((C1622 + C1621 + C1620) * C118 +
                 (C1619 + C1618 + C1617) * C32644) *
                    C32939 +
                ((C754 * C1580 + C748 * C1583 + C755 * C1581 + C749 * C1584 +
                  C756 * C1582 + C32905 * C1585) *
                     C118 +
                 (C754 * C1586 + C748 * C1589 + C755 * C1587 + C749 * C1590 +
                  C756 * C1588 + C32905 * C1591) *
                     C32644) *
                    C32916) *
                   C531 -
               (((C940 + C941 + C942) * C32644 + (C943 + C944 + C945) * C118) *
                    C32916 +
                ((C939 + C938 + C937) * C32644 + (C936 + C935 + C934) * C118) *
                    C32939 +
                ((C933 + C932 + C931) * C32644 + (C930 + C929 + C928) * C118) *
                    C32951) *
                   C530) *
                  C441) *
             C32577) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C754 * C119 + C748 * C126 + C755 * C120 + C749 * C127 +
             C756 * C121 + C32905 * C128) *
                C1741 +
            (C754 * C131 + C748 * C140 + C755 * C132 + C749 * C141 +
             C756 * C133 + C32905 * C142) *
                C32952 +
            (C2025 + C2026 + C2027) * C1742 + (C2028 + C2029 + C2030) * C32941 +
            C2045 * C1743 + C2046 * C32919) *
               C32633 * C530 -
           ((C2037 + C2038 + C2039) * C32919 + (C2040 + C2041 + C2042) * C1743 +
            (C2036 + C2035 + C2034) * C32941 + (C2033 + C2032 + C2031) * C1742 +
            (C2030 + C2029 + C2028) * C32952 +
            (C2027 + C2026 + C2025) * C1741) *
               C32633 * C531) *
              C440 +
          (((C1628 + C1627 + C1626) * C1741 + (C1625 + C1624 + C1623) * C32952 +
            (C2553 + C2554 + C2555) * C1742 + (C2556 + C2557 + C2558) * C32941 +
            (C754 * C2528 + C748 * C2531 + C755 * C2529 + C749 * C2532 +
             C756 * C2530 + C32905 * C2533) *
                C1743 +
            (C754 * C2534 + C748 * C2537 + C755 * C2535 + C749 * C2538 +
             C756 * C2536 + C32905 * C2539) *
                C32919) *
               C32633 * C531 -
           ((C2558 + C2557 + C2556) * C32919 + (C2555 + C2554 + C2553) * C1743 +
            (C1623 + C1624 + C1625) * C32941 + (C1626 + C1627 + C1628) * C1742 +
            (C933 + C932 + C931) * C32952 + (C930 + C929 + C928) * C1741) *
               C32633 * C530) *
              C441) *
         C32577) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C5270 * C119 + C32948 * C126 + C5271 * C120 + C32935 * C127 +
              C5272 * C121 + C32905 * C128) *
                 C118 +
             (C5270 * C131 + C32948 * C140 + C5271 * C132 + C32935 * C141 +
              C5272 * C133 + C32905 * C142) *
                 C32644) *
                C5267 +
            ((C5420 + C5421 + C5422) * C118 +
             (C5423 + C5424 + C5425) * C32644) *
                C5268 +
            C5444 * C32916) *
               C530 -
           (((C6053 + C6054 + C6055) * C32644 +
             (C6056 + C6057 + C6058) * C118) *
                C32916 +
            ((C6059 + C6060 + C6061) * C32644 +
             (C6062 + C6063 + C6064) * C118) *
                C5268 +
            ((C5272 * C330 + C32905 * C350 + C5271 * C331 + C32935 * C351 +
              C5270 * C332 + C32948 * C352) *
                 C32644 +
             (C5272 * C320 + C32905 * C335 + C5271 * C321 + C32935 * C336 +
              C5270 * C322 + C32948 * C337) *
                 C118) *
                C5267) *
               C531) *
              C440 +
          ((((C6064 + C6063 + C6062) * C118 +
             (C6061 + C6060 + C6059) * C32644) *
                C5267 +
            ((C6058 + C6057 + C6056) * C118 +
             (C6055 + C6054 + C6053) * C32644) *
                C5268 +
            ((C5270 * C1580 + C32948 * C1583 + C5271 * C1581 + C32935 * C1584 +
              C5272 * C1582 + C32905 * C1585) *
                 C118 +
             (C5270 * C1586 + C32948 * C1589 + C5271 * C1587 + C32935 * C1590 +
              C5272 * C1588 + C32905 * C1591) *
                 C32644) *
                C32916) *
               C531 -
           (((C5432 + C5433 + C5434) * C32644 +
             (C5435 + C5436 + C5437) * C118) *
                C32916 +
            ((C5431 + C5430 + C5429) * C32644 +
             (C5428 + C5427 + C5426) * C118) *
                C5268 +
            ((C5425 + C5424 + C5423) * C32644 +
             (C5422 + C5421 + C5420) * C118) *
                C5267) *
               C530) *
              C441) *
         C32577) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C6132 * C119 + C32540 * C126) * C118 +
             (C6132 * C131 + C32540 * C140) * C32644) *
                C6127 +
            (C6234 + C6235) * C6128 + C6244 * C6129 + C6245 * C6130 +
            C6246 * C6131) *
               C530 -
           ((C6635 + C6636) * C6131 + (C6637 + C6638) * C6130 +
            (C6639 + C6640) * C6129 + (C6641 + C6642) * C6128 +
            ((C6132 * C332 + C32540 * C352) * C32644 +
             (C6132 * C322 + C32540 * C337) * C118) *
                C6127) *
               C531) *
              C440 +
          (((C6642 + C6641) * C6127 + (C6640 + C6639) * C6128 +
            (C6638 + C6637) * C6129 + (C6636 + C6635) * C6130 +
            ((C6132 * C6606 + C32540 * C6607) * C118 +
             (C6132 * C6608 + C32540 * C6609) * C32644) *
                C6131) *
               C531 -
           ((C6242 + C6243) * C6131 + (C6241 + C6240) * C6130 +
            (C6239 + C6238) * C6129 + (C6237 + C6236) * C6128 +
            (C6235 + C6234) * C6127) *
               C530) *
              C441) *
         C32577) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C6132 * C119 + C32540 * C126) * C1741 +
             (C6132 * C131 + C32540 * C140) * C32952 + C7046 * C1742 +
             C7047 * C32941 + C7048 * C1743 + C7049 * C32919) *
                C5267 +
            (C6863 + C6864 + C6865 + C6866 + C6894 + C6895) * C5268 +
            C6903 * C32916) *
               C530 -
           ((C7554 + C7555 + C7556 + C7557 + C7558 + C7559) * C32916 +
            (C7560 + C7561 + C7562 + C7563 + C7564 + C7565) * C5268 +
            (C7054 * C32919 + C7055 * C1743 + C7049 * C32941 + C7048 * C1742 +
             C7047 * C32952 + C7046 * C1741) *
                C5267) *
               C531) *
              C440 +
          (((C7565 + C7564 + C7563 + C7562 + C7561 + C7560) * C5267 +
            (C7559 + C7558 + C7557 + C7556 + C7555 + C7554) * C5268 +
            (C6630 * C1741 + C6629 * C32952 + C6893 * C1742 + C6892 * C32941 +
             (C6132 * C7549 + C32540 * C7550) * C1743 +
             (C6132 * C7551 + C32540 * C7552) * C32919) *
                C32916) *
               C531 -
           ((C6899 + C6900 + C6883 + C6884 + C6885 + C6886) * C32916 +
            (C6898 + C6897 + C6874 + C6873 + C6872 + C6871) * C5268 +
            (C6895 + C6894 + C6866 + C6865 + C6864 + C6863) * C5267) *
               C530) *
              C441) *
         C32577) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C5270 * C119 + C32948 * C126 + C5271 * C120 + C32935 * C127 +
             C5272 * C121 + C32905 * C128) *
                C10355 +
            (C5270 * C131 + C32948 * C140 + C5271 * C132 + C32935 * C141 +
             C5272 * C133 + C32905 * C142) *
                C10352 +
            (C10615 + C10616 + C10617) * C10356 +
            (C10618 + C10619 + C10620) * C10353 + C10635 * C10357 +
            C10636 * C32919) *
               C32633 * C530 -
           ((C10627 + C10628 + C10629) * C32919 +
            (C10630 + C10631 + C10632) * C10357 +
            (C10626 + C10625 + C10624) * C10353 +
            (C10623 + C10622 + C10621) * C10356 +
            (C10620 + C10619 + C10618) * C10352 +
            (C10617 + C10616 + C10615) * C10355) *
               C32633 * C531) *
              C440 +
          (((C6064 + C6063 + C6062) * C10355 +
            (C6061 + C6060 + C6059) * C10352 +
            (C11123 + C11124 + C11125) * C10356 +
            (C11126 + C11127 + C11128) * C10353 +
            (C5270 * C2528 + C32948 * C2531 + C5271 * C2529 + C32935 * C2532 +
             C5272 * C2530 + C32905 * C2533) *
                C10357 +
            (C5270 * C2534 + C32948 * C2537 + C5271 * C2535 + C32935 * C2538 +
             C5272 * C2536 + C32905 * C2539) *
                C32919) *
               C32633 * C531 -
           ((C11128 + C11127 + C11126) * C32919 +
            (C11125 + C11124 + C11123) * C10357 +
            (C6059 + C6060 + C6061) * C10353 +
            (C6062 + C6063 + C6064) * C10356 +
            (C5425 + C5424 + C5423) * C10352 +
            (C5422 + C5421 + C5420) * C10355) *
               C32633 * C530) *
              C441) *
         C32577) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C6132 * C119 + C32540 * C126) * C10355 +
             (C6132 * C131 + C32540 * C140) * C10352 + C7046 * C10356 +
             C7047 * C10353 + C7048 * C10357 + C7049 * C32919) *
                C32951 +
            (C11349 + C11350 + C11351 + C11352 + C11353 + C11354) * C32939 +
            C11371 * C32916) *
               C530 -
           ((C11932 + C11933 + C11934 + C11935 + C11936 + C11937) * C32916 +
            (C11938 + C11939 + C11940 + C11941 + C11942 + C11943) * C32939 +
            (C7054 * C32919 + C7055 * C10357 + C7049 * C10353 + C7048 * C10356 +
             C7047 * C10352 + C7046 * C10355) *
                C32951) *
               C531) *
              C440 +
          (((C11943 + C11942 + C11941 + C11940 + C11939 + C11938) * C32951 +
            (C11937 + C11936 + C11935 + C11934 + C11933 + C11932) * C32939 +
            (C6630 * C10355 + C6629 * C10352 + C6893 * C10356 + C6892 * C10353 +
             (C6132 * C7549 + C32540 * C7550) * C10357 +
             (C6132 * C7551 + C32540 * C7552) * C32919) *
                C32916) *
               C531 -
           ((C11361 + C11362 + C11363 + C11364 + C11365 + C11366) * C32916 +
            (C11360 + C11359 + C11358 + C11357 + C11356 + C11355) * C32939 +
            (C11354 + C11353 + C11352 + C11351 + C11350 + C11349) * C32951) *
               C530) *
              C441) *
         C32577) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C6132 * C119 + C32540 * C126) * C12010 +
            (C6132 * C131 + C32540 * C140) * C12005 + C7046 * C12011 +
            C7047 * C12006 + C7048 * C12012 + C7049 * C12007 + C7055 * C12013 +
            C7054 * C12008 + C12156 * C12014 + C12157 * C12009) *
               C32633 * C530 -
           (C12158 * C12009 + C12159 * C12014 + C12157 * C12008 +
            C12156 * C12013 + C7054 * C12007 + C7055 * C12012 + C7049 * C12006 +
            C7048 * C12011 + C7047 * C12005 + C7046 * C12010) *
               C32633 * C531) *
              C440 +
          ((C6634 * C12010 + C6633 * C12005 + C6887 * C12011 + C6888 * C12006 +
            C7053 * C12012 + C7052 * C12007 + C12434 * C12013 +
            C12435 * C12008 + (C6132 * C12425 + C32540 * C12426) * C12014 +
            (C6132 * C12427 + C32540 * C12428) * C12009) *
               C32633 * C531 -
           (C12435 * C12009 + C12434 * C12014 + C7052 * C12008 +
            C7053 * C12013 + C6888 * C12007 + C6887 * C12012 + C6633 * C12006 +
            C6634 * C12011 + C6225 * C12005 + C6224 * C12010) *
               C32633 * C530) *
              C441) *
         C32577) /
            (p * q * std::sqrt(p + q));
    d2ee[62] +=
        (-0.25 * std::pow(Pi, 2.5) *
             (((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C127 +
                C115 * C121 + C103 * C128 + C116 * C122 + C104 * C129 +
                C117 * C123 + C105 * C130) *
                   C118 +
               (C113 * C131 + C101 * C140 + C114 * C132 + C102 * C141 +
                C115 * C133 + C103 * C142 + C116 * C134 + C104 * C143 +
                C117 * C135 + C105 * C144) *
                   C32644) *
                  C32633 * C32603 * C32589 * C110 -
              ((C117 * C136 + C105 * C145 + C116 * C135 + C104 * C144 +
                C115 * C134 + C103 * C143 + C114 * C133 + C102 * C142 +
                C113 * C132 + C101 * C141) *
                   C32644 +
               (C117 * C124 + C105 * C137 + C116 * C123 + C104 * C130 +
                C115 * C122 + C103 * C129 + C114 * C121 + C102 * C128 +
                C113 * C120 + C101 * C127) *
                   C118) *
                  C32633 * C32603 * C32589 * C111 +
              ((C113 * C121 + C101 * C128 + C114 * C122 + C102 * C129 +
                C115 * C123 + C103 * C130 + C116 * C124 + C104 * C137 +
                C117 * C125 + C105 * C138) *
                   C118 +
               (C113 * C133 + C101 * C142 + C114 * C134 + C102 * C143 +
                C115 * C135 + C103 * C144 + C116 * C136 + C104 * C145 +
                C117 * C139 + C105 * C146) *
                   C32644) *
                  C32633 * C32603 * C32589 * C112) -
         0.25 * std::pow(Pi, 2.5) *
             (((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C127 +
                C115 * C121 + C103 * C128 + C116 * C122 + C104 * C129 +
                C117 * C123 + C105 * C130) *
                   C118 +
               (C113 * C131 + C101 * C140 + C114 * C132 + C102 * C141 +
                C115 * C133 + C103 * C142 + C116 * C134 + C104 * C143 +
                C117 * C135 + C105 * C144) *
                   C32644) *
                  C32633 * C32603 * C209 -
              ((C117 * C223 + C105 * C243 + C116 * C224 + C104 * C244 +
                C115 * C225 + C103 * C245 + C114 * C226 + C102 * C246 +
                C113 * C227 + C101 * C247) *
                   C32644 +
               (C117 * C213 + C105 * C228 + C116 * C214 + C104 * C229 +
                C115 * C215 + C103 * C230 + C114 * C216 + C102 * C231 +
                C113 * C217 + C101 * C232) *
                   C118) *
                  C32633 * C32603 * C210 +
              ((C113 * C218 + C101 * C233 + C114 * C219 + C102 * C234 +
                C115 * C220 + C103 * C235 + C116 * C221 + C104 * C236 +
                C117 * C222 + C105 * C237) *
                   C118 +
               (C113 * C238 + C101 * C248 + C114 * C239 + C102 * C249 +
                C115 * C240 + C103 * C250 + C116 * C241 + C104 * C251 +
                C117 * C242 + C105 * C252) *
                   C32644) *
                  C32633 * C32603 * C211) *
             C32577 +
         0.5 * std::pow(Pi, 2.5) *
             (((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C127 +
                C115 * C121 + C103 * C128 + C116 * C122 + C104 * C129 +
                C117 * C123 + C105 * C130) *
                   C118 +
               (C113 * C131 + C101 * C140 + C114 * C132 + C102 * C141 +
                C115 * C133 + C103 * C142 + C116 * C134 + C104 * C143 +
                C117 * C135 + C105 * C144) *
                   C32644) *
                  C32633 * C315 -
              ((C117 * C328 + C105 * C348 + C116 * C329 + C104 * C349 +
                C115 * C330 + C103 * C350 + C114 * C331 + C102 * C351 +
                C113 * C332 + C101 * C352) *
                   C32644 +
               (C117 * C318 + C105 * C333 + C116 * C319 + C104 * C334 +
                C115 * C320 + C103 * C335 + C114 * C321 + C102 * C336 +
                C113 * C322 + C101 * C337) *
                   C118) *
                  C32633 * C316 +
              ((C113 * C323 + C101 * C338 + C114 * C324 + C102 * C339 +
                C115 * C325 + C103 * C340 + C116 * C326 + C104 * C341 +
                C117 * C327 + C105 * C342) *
                   C118 +
               (C113 * C343 + C101 * C353 + C114 * C344 + C102 * C354 +
                C115 * C345 + C103 * C355 + C116 * C346 + C104 * C356 +
                C117 * C347 + C105 * C357) *
                   C32644) *
                  C32633 * C317) *
             C32589 * C32577 -
         0.25 * std::pow(Pi, 2.5) *
             ((((C754 * C119 + C748 * C126 + C755 * C120 + C749 * C127 +
                 C756 * C121 + C32905 * C128) *
                    C118 +
                (C754 * C131 + C748 * C140 + C755 * C132 + C749 * C141 +
                 C756 * C133 + C32905 * C142) *
                    C32644) *
                   C32951 +
               ((C754 * C217 + C748 * C232 + C755 * C216 + C749 * C231 +
                 C756 * C215 + C32905 * C230) *
                    C118 +
                (C754 * C227 + C748 * C247 + C755 * C226 + C749 * C246 +
                 C756 * C225 + C32905 * C245) *
                    C32644) *
                   C32939 +
               ((C754 * C218 + C748 * C233 + C755 * C219 + C749 * C234 +
                 C756 * C220 + C32905 * C235) *
                    C118 +
                (C754 * C238 + C748 * C248 + C755 * C239 + C749 * C249 +
                 C756 * C240 + C32905 * C250) *
                    C32644) *
                   C32916) *
                  C32603 * C32589 * C110 -
              (((C756 * C241 + C32905 * C251 + C755 * C240 + C749 * C250 +
                 C754 * C239 + C748 * C249) *
                    C32644 +
                (C756 * C221 + C32905 * C236 + C755 * C220 + C749 * C235 +
                 C754 * C219 + C748 * C234) *
                    C118) *
                   C32916 +
               ((C756 * C224 + C32905 * C244 + C755 * C225 + C749 * C245 +
                 C754 * C226 + C748 * C246) *
                    C32644 +
                (C756 * C214 + C32905 * C229 + C755 * C215 + C749 * C230 +
                 C754 * C216 + C748 * C231) *
                    C118) *
                   C32939 +
               ((C756 * C134 + C32905 * C143 + C755 * C133 + C749 * C142 +
                 C754 * C132 + C748 * C141) *
                    C32644 +
                (C756 * C122 + C32905 * C129 + C755 * C121 + C749 * C128 +
                 C754 * C120 + C748 * C127) *
                    C118) *
                   C32951) *
                  C32603 * C32589 * C111 +
              (((C754 * C121 + C748 * C128 + C755 * C122 + C749 * C129 +
                 C756 * C123 + C32905 * C130) *
                    C118 +
                (C754 * C133 + C748 * C142 + C755 * C134 + C749 * C143 +
                 C756 * C135 + C32905 * C144) *
                    C32644) *
                   C32951 +
               ((C754 * C215 + C748 * C230 + C755 * C214 + C749 * C229 +
                 C756 * C213 + C32905 * C228) *
                    C118 +
                (C754 * C225 + C748 * C245 + C755 * C224 + C749 * C244 +
                 C756 * C223 + C32905 * C243) *
                    C32644) *
                   C32939 +
               ((C754 * C220 + C748 * C235 + C755 * C221 + C749 * C236 +
                 C756 * C222 + C32905 * C237) *
                    C118 +
                (C754 * C240 + C748 * C250 + C755 * C241 + C749 * C251 +
                 C756 * C242 + C32905 * C252) *
                    C32644) *
                   C32916) *
                  C32603 * C32589 * C112) -
         0.25 * std::pow(Pi, 2.5) *
             ((((C754 * C119 + C748 * C126 + C755 * C120 + C749 * C127 +
                 C756 * C121 + C32905 * C128) *
                    C118 +
                (C754 * C131 + C748 * C140 + C755 * C132 + C749 * C141 +
                 C756 * C133 + C32905 * C142) *
                    C32644) *
                   C32951 +
               ((C928 + C929 + C930) * C118 + (C931 + C932 + C933) * C32644) *
                   C32939 +
               C952 * C32916) *
                  C32603 * C209 -
              (((C940 + C941 + C942) * C32644 + (C943 + C944 + C945) * C118) *
                   C32916 +
               ((C939 + C938 + C937) * C32644 + (C936 + C935 + C934) * C118) *
                   C32939 +
               ((C933 + C932 + C931) * C32644 + (C930 + C929 + C928) * C118) *
                   C32951) *
                  C32603 * C210 +
              (C952 * C32951 +
               ((C945 + C944 + C943) * C118 + (C942 + C941 + C940) * C32644) *
                   C32939 +
               ((C754 * C870 + C748 * C879 + C755 * C871 + C749 * C880 +
                 C756 * C872 + C32905 * C881) *
                    C118 +
                (C754 * C882 + C748 * C888 + C755 * C883 + C749 * C889 +
                 C756 * C884 + C32905 * C890) *
                    C32644) *
                   C32916) *
                  C32603 * C211) *
             C32577 +
         0.5 * std::pow(Pi, 2.5) *
             ((((C754 * C119 + C748 * C126 + C755 * C120 + C749 * C127 +
                 C756 * C121 + C32905 * C128) *
                    C118 +
                (C754 * C131 + C748 * C140 + C755 * C132 + C749 * C141 +
                 C756 * C133 + C32905 * C142) *
                    C32644) *
                   C32951 +
               ((C928 + C929 + C930) * C118 + (C931 + C932 + C933) * C32644) *
                   C32939 +
               C952 * C32916) *
                  C315 -
              (((C756 * C1071 + C32905 * C1089 + C755 * C1072 + C749 * C1090 +
                 C754 * C1073 + C748 * C1091) *
                    C32644 +
                (C756 * C1062 + C32905 * C1074 + C755 * C1063 + C749 * C1075 +
                 C754 * C1064 + C748 * C1076) *
                    C118) *
                   C32916 +
               ((C756 * C630 + C32905 * C635 + C755 * C629 + C749 * C634 +
                 C754 * C628 + C748 * C633) *
                    C32644 +
                (C756 * C620 + C32905 * C625 + C755 * C619 + C749 * C624 +
                 C754 * C618 + C748 * C623) *
                    C118) *
                   C32939 +
               ((C756 * C330 + C32905 * C350 + C755 * C331 + C749 * C351 +
                 C754 * C332 + C748 * C352) *
                    C32644 +
                (C756 * C320 + C32905 * C335 + C755 * C321 + C749 * C336 +
                 C754 * C322 + C748 * C337) *
                    C118) *
                   C32951) *
                  C316 +
              (((C754 * C323 + C748 * C338 + C755 * C324 + C749 * C339 +
                 C756 * C325 + C32905 * C340) *
                    C118 +
                (C754 * C343 + C748 * C353 + C755 * C344 + C749 * C354 +
                 C756 * C345 + C32905 * C355) *
                    C32644) *
                   C32951 +
               ((C754 * C1065 + C748 * C1077 + C755 * C1066 + C749 * C1078 +
                 C756 * C1067 + C32905 * C1079) *
                    C118 +
                (C754 * C1080 + C748 * C1092 + C755 * C1081 + C749 * C1093 +
                 C756 * C1082 + C32905 * C1094) *
                    C32644) *
                   C32939 +
               ((C754 * C1068 + C748 * C1083 + C755 * C1069 + C749 * C1084 +
                 C756 * C1070 + C32905 * C1085) *
                    C118 +
                (C754 * C1086 + C748 * C1095 + C755 * C1087 + C749 * C1096 +
                 C756 * C1088 + C32905 * C1097) *
                    C32644) *
                   C32916) *
                  C317) *
             C32589 * C32577 +
         0.5 * std::pow(Pi, 2.5) *
             (((C754 * C119 + C748 * C126 + C755 * C120 + C749 * C127 +
                C756 * C121 + C32905 * C128) *
                   C1741 +
               (C754 * C131 + C748 * C140 + C755 * C132 + C749 * C141 +
                C756 * C133 + C32905 * C142) *
                   C32952 +
               (C754 * C322 + C748 * C337 + C755 * C321 + C749 * C336 +
                C756 * C320 + C32905 * C335) *
                   C1742 +
               (C754 * C332 + C748 * C352 + C755 * C331 + C749 * C351 +
                C756 * C330 + C32905 * C350) *
                   C32941 +
               (C754 * C323 + C748 * C338 + C755 * C324 + C749 * C339 +
                C756 * C325 + C32905 * C340) *
                   C1743 +
               (C754 * C343 + C748 * C353 + C755 * C344 + C749 * C354 +
                C756 * C345 + C32905 * C355) *
                   C32919) *
                  C32633 * C32603 * C32589 * C110 -
              ((C756 * C346 + C32905 * C356 + C755 * C345 + C749 * C355 +
                C754 * C344 + C748 * C354) *
                   C32919 +
               (C756 * C326 + C32905 * C341 + C755 * C325 + C749 * C340 +
                C754 * C324 + C748 * C339) *
                   C1743 +
               (C756 * C329 + C32905 * C349 + C755 * C330 + C749 * C350 +
                C754 * C331 + C748 * C351) *
                   C32941 +
               (C756 * C319 + C32905 * C334 + C755 * C320 + C749 * C335 +
                C754 * C321 + C748 * C336) *
                   C1742 +
               (C756 * C134 + C32905 * C143 + C755 * C133 + C749 * C142 +
                C754 * C132 + C748 * C141) *
                   C32952 +
               (C756 * C122 + C32905 * C129 + C755 * C121 + C749 * C128 +
                C754 * C120 + C748 * C127) *
                   C1741) *
                  C32633 * C32603 * C32589 * C111 +
              ((C754 * C121 + C748 * C128 + C755 * C122 + C749 * C129 +
                C756 * C123 + C32905 * C130) *
                   C1741 +
               (C754 * C133 + C748 * C142 + C755 * C134 + C749 * C143 +
                C756 * C135 + C32905 * C144) *
                   C32952 +
               (C754 * C320 + C748 * C335 + C755 * C319 + C749 * C334 +
                C756 * C318 + C32905 * C333) *
                   C1742 +
               (C754 * C330 + C748 * C350 + C755 * C329 + C749 * C349 +
                C756 * C328 + C32905 * C348) *
                   C32941 +
               (C754 * C325 + C748 * C340 + C755 * C326 + C749 * C341 +
                C756 * C327 + C32905 * C342) *
                   C1743 +
               (C754 * C345 + C748 * C355 + C755 * C346 + C749 * C356 +
                C756 * C347 + C32905 * C357) *
                   C32919) *
                  C32633 * C32603 * C32589 * C112) +
         0.5 * std::pow(Pi, 2.5) *
             (((C754 * C119 + C748 * C126 + C755 * C120 + C749 * C127 +
                C756 * C121 + C32905 * C128) *
                   C1741 +
               (C754 * C131 + C748 * C140 + C755 * C132 + C749 * C141 +
                C756 * C133 + C32905 * C142) *
                   C32952 +
               (C754 * C322 + C748 * C337 + C755 * C321 + C749 * C336 +
                C756 * C320 + C32905 * C335) *
                   C1742 +
               (C754 * C332 + C748 * C352 + C755 * C331 + C749 * C351 +
                C756 * C330 + C32905 * C350) *
                   C32941 +
               (C754 * C323 + C748 * C338 + C755 * C324 + C749 * C339 +
                C756 * C325 + C32905 * C340) *
                   C1743 +
               (C754 * C343 + C748 * C353 + C755 * C344 + C749 * C354 +
                C756 * C345 + C32905 * C355) *
                   C32919) *
                  C32633 * C32603 * C209 -
              ((C756 * C1082 + C32905 * C1094 + C755 * C1081 + C749 * C1093 +
                C754 * C1080 + C748 * C1092) *
                   C32919 +
               (C756 * C1067 + C32905 * C1079 + C755 * C1066 + C749 * C1078 +
                C754 * C1065 + C748 * C1077) *
                   C1743 +
               (C1623 + C1624 + C1625) * C32941 +
               (C1626 + C1627 + C1628) * C1742 + (C933 + C932 + C931) * C32952 +
               (C930 + C929 + C928) * C1741) *
                  C32633 * C32603 * C210 +
              (C948 * C1741 + C949 * C32952 + (C1622 + C1621 + C1620) * C1742 +
               (C1619 + C1618 + C1617) * C32941 +
               (C754 * C1068 + C748 * C1083 + C755 * C1069 + C749 * C1084 +
                C756 * C1070 + C32905 * C1085) *
                   C1743 +
               (C754 * C1086 + C748 * C1095 + C755 * C1087 + C749 * C1096 +
                C756 * C1088 + C32905 * C1097) *
                   C32919) *
                  C32633 * C32603 * C211) *
             C32577) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C754 * C119 + C748 * C126 + C755 * C120 + C749 * C127 +
            C756 * C121 + C32905 * C128) *
               C1741 +
           (C754 * C131 + C748 * C140 + C755 * C132 + C749 * C141 +
            C756 * C133 + C32905 * C142) *
               C32952 +
           (C2025 + C2026 + C2027) * C1742 + (C2028 + C2029 + C2030) * C32941 +
           C2045 * C1743 + C2046 * C32919) *
              C32633 * C315 -
          ((C2037 + C2038 + C2039) * C32919 + (C2040 + C2041 + C2042) * C1743 +
           (C2036 + C2035 + C2034) * C32941 + (C2033 + C2032 + C2031) * C1742 +
           (C2030 + C2029 + C2028) * C32952 + (C2027 + C2026 + C2025) * C1741) *
              C32633 * C316 +
          (C2045 * C1741 + C2046 * C32952 + (C2042 + C2041 + C2040) * C1742 +
           (C2039 + C2038 + C2037) * C32941 +
           (C754 * C1967 + C748 * C1976 + C755 * C1968 + C749 * C1977 +
            C756 * C1969 + C32905 * C1978) *
               C1743 +
           (C754 * C1979 + C748 * C1985 + C755 * C1980 + C749 * C1986 +
            C756 * C1981 + C32905 * C1987) *
               C32919) *
              C32633 * C317) *
         C32589 * C32577) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         ((((C5270 * C119 + C32948 * C126 + C5271 * C120 + C32935 * C127 +
             C5272 * C121 + C32905 * C128) *
                C118 +
            (C5270 * C131 + C32948 * C140 + C5271 * C132 + C32935 * C141 +
             C5272 * C133 + C32905 * C142) *
                C32644) *
               C5267 +
           ((C5270 * C217 + C32948 * C232 + C5271 * C216 + C32935 * C231 +
             C5272 * C215 + C32905 * C230) *
                C118 +
            (C5270 * C227 + C32948 * C247 + C5271 * C226 + C32935 * C246 +
             C5272 * C225 + C32905 * C245) *
                C32644) *
               C5268 +
           ((C5270 * C218 + C32948 * C233 + C5271 * C219 + C32935 * C234 +
             C5272 * C220 + C32905 * C235) *
                C118 +
            (C5270 * C238 + C32948 * C248 + C5271 * C239 + C32935 * C249 +
             C5272 * C240 + C32905 * C250) *
                C32644) *
               C32916) *
              C32603 * C32589 * C110 -
          (((C5272 * C241 + C32905 * C251 + C5271 * C240 + C32935 * C250 +
             C5270 * C239 + C32948 * C249) *
                C32644 +
            (C5272 * C221 + C32905 * C236 + C5271 * C220 + C32935 * C235 +
             C5270 * C219 + C32948 * C234) *
                C118) *
               C32916 +
           ((C5272 * C224 + C32905 * C244 + C5271 * C225 + C32935 * C245 +
             C5270 * C226 + C32948 * C246) *
                C32644 +
            (C5272 * C214 + C32905 * C229 + C5271 * C215 + C32935 * C230 +
             C5270 * C216 + C32948 * C231) *
                C118) *
               C5268 +
           ((C5272 * C134 + C32905 * C143 + C5271 * C133 + C32935 * C142 +
             C5270 * C132 + C32948 * C141) *
                C32644 +
            (C5272 * C122 + C32905 * C129 + C5271 * C121 + C32935 * C128 +
             C5270 * C120 + C32948 * C127) *
                C118) *
               C5267) *
              C32603 * C32589 * C111 +
          (((C5270 * C121 + C32948 * C128 + C5271 * C122 + C32935 * C129 +
             C5272 * C123 + C32905 * C130) *
                C118 +
            (C5270 * C133 + C32948 * C142 + C5271 * C134 + C32935 * C143 +
             C5272 * C135 + C32905 * C144) *
                C32644) *
               C5267 +
           ((C5270 * C215 + C32948 * C230 + C5271 * C214 + C32935 * C229 +
             C5272 * C213 + C32905 * C228) *
                C118 +
            (C5270 * C225 + C32948 * C245 + C5271 * C224 + C32935 * C244 +
             C5272 * C223 + C32905 * C243) *
                C32644) *
               C5268 +
           ((C5270 * C220 + C32948 * C235 + C5271 * C221 + C32935 * C236 +
             C5272 * C222 + C32905 * C237) *
                C118 +
            (C5270 * C240 + C32948 * C250 + C5271 * C241 + C32935 * C251 +
             C5272 * C242 + C32905 * C252) *
                C32644) *
               C32916) *
              C32603 * C32589 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         ((((C5270 * C119 + C32948 * C126 + C5271 * C120 + C32935 * C127 +
             C5272 * C121 + C32905 * C128) *
                C118 +
            (C5270 * C131 + C32948 * C140 + C5271 * C132 + C32935 * C141 +
             C5272 * C133 + C32905 * C142) *
                C32644) *
               C5267 +
           ((C5420 + C5421 + C5422) * C118 + (C5423 + C5424 + C5425) * C32644) *
               C5268 +
           C5444 * C32916) *
              C32603 * C209 -
          (((C5432 + C5433 + C5434) * C32644 + (C5435 + C5436 + C5437) * C118) *
               C32916 +
           ((C5431 + C5430 + C5429) * C32644 + (C5428 + C5427 + C5426) * C118) *
               C5268 +
           ((C5425 + C5424 + C5423) * C32644 + (C5422 + C5421 + C5420) * C118) *
               C5267) *
              C32603 * C210 +
          (C5444 * C5267 +
           ((C5437 + C5436 + C5435) * C118 + (C5434 + C5433 + C5432) * C32644) *
               C5268 +
           ((C5270 * C870 + C32948 * C879 + C5271 * C871 + C32935 * C880 +
             C5272 * C872 + C32905 * C881) *
                C118 +
            (C5270 * C882 + C32948 * C888 + C5271 * C883 + C32935 * C889 +
             C5272 * C884 + C32905 * C890) *
                C32644) *
               C32916) *
              C32603 * C211) *
         C32577) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C5270 * C119 + C32948 * C126 + C5271 * C120 + C32935 * C127 +
             C5272 * C121 + C32905 * C128) *
                C118 +
            (C5270 * C131 + C32948 * C140 + C5271 * C132 + C32935 * C141 +
             C5272 * C133 + C32905 * C142) *
                C32644) *
               C5267 +
           ((C5420 + C5421 + C5422) * C118 + (C5423 + C5424 + C5425) * C32644) *
               C5268 +
           C5444 * C32916) *
              C315 -
          (((C5272 * C1071 + C32905 * C1089 + C5271 * C1072 + C32935 * C1090 +
             C5270 * C1073 + C32948 * C1091) *
                C32644 +
            (C5272 * C1062 + C32905 * C1074 + C5271 * C1063 + C32935 * C1075 +
             C5270 * C1064 + C32948 * C1076) *
                C118) *
               C32916 +
           ((C5272 * C630 + C32905 * C635 + C5271 * C629 + C32935 * C634 +
             C5270 * C628 + C32948 * C633) *
                C32644 +
            (C5272 * C620 + C32905 * C625 + C5271 * C619 + C32935 * C624 +
             C5270 * C618 + C32948 * C623) *
                C118) *
               C5268 +
           ((C5272 * C330 + C32905 * C350 + C5271 * C331 + C32935 * C351 +
             C5270 * C332 + C32948 * C352) *
                C32644 +
            (C5272 * C320 + C32905 * C335 + C5271 * C321 + C32935 * C336 +
             C5270 * C322 + C32948 * C337) *
                C118) *
               C5267) *
              C316 +
          (((C5270 * C323 + C32948 * C338 + C5271 * C324 + C32935 * C339 +
             C5272 * C325 + C32905 * C340) *
                C118 +
            (C5270 * C343 + C32948 * C353 + C5271 * C344 + C32935 * C354 +
             C5272 * C345 + C32905 * C355) *
                C32644) *
               C5267 +
           ((C5270 * C1065 + C32948 * C1077 + C5271 * C1066 + C32935 * C1078 +
             C5272 * C1067 + C32905 * C1079) *
                C118 +
            (C5270 * C1080 + C32948 * C1092 + C5271 * C1081 + C32935 * C1093 +
             C5272 * C1082 + C32905 * C1094) *
                C32644) *
               C5268 +
           ((C5270 * C1068 + C32948 * C1083 + C5271 * C1069 + C32935 * C1084 +
             C5272 * C1070 + C32905 * C1085) *
                C118 +
            (C5270 * C1086 + C32948 * C1095 + C5271 * C1087 + C32935 * C1096 +
             C5272 * C1088 + C32905 * C1097) *
                C32644) *
               C32916) *
              C317) *
         C32589 * C32577) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         ((((C6132 * C119 + C32540 * C126) * C118 +
            (C6132 * C131 + C32540 * C140) * C32644) *
               C6127 +
           ((C6132 * C217 + C32540 * C232) * C118 +
            (C6132 * C227 + C32540 * C247) * C32644) *
               C6128 +
           ((C6132 * C218 + C32540 * C233) * C118 +
            (C6132 * C238 + C32540 * C248) * C32644) *
               C6129 +
           ((C6132 * C869 + C32540 * C878) * C118 +
            (C6132 * C875 + C32540 * C887) * C32644) *
               C6130 +
           ((C6132 * C870 + C32540 * C879) * C118 +
            (C6132 * C882 + C32540 * C888) * C32644) *
               C6131) *
              C32603 * C32589 * C110 -
          (((C6132 * C883 + C32540 * C889) * C32644 +
            (C6132 * C871 + C32540 * C880) * C118) *
               C6131 +
           ((C6132 * C874 + C32540 * C886) * C32644 +
            (C6132 * C868 + C32540 * C877) * C118) *
               C6130 +
           ((C6132 * C239 + C32540 * C249) * C32644 +
            (C6132 * C219 + C32540 * C234) * C118) *
               C6129 +
           ((C6132 * C226 + C32540 * C246) * C32644 +
            (C6132 * C216 + C32540 * C231) * C118) *
               C6128 +
           ((C6132 * C132 + C32540 * C141) * C32644 +
            (C6132 * C120 + C32540 * C127) * C118) *
               C6127) *
              C32603 * C32589 * C111 +
          (((C6132 * C121 + C32540 * C128) * C118 +
            (C6132 * C133 + C32540 * C142) * C32644) *
               C6127 +
           ((C6132 * C215 + C32540 * C230) * C118 +
            (C6132 * C225 + C32540 * C245) * C32644) *
               C6128 +
           ((C6132 * C220 + C32540 * C235) * C118 +
            (C6132 * C240 + C32540 * C250) * C32644) *
               C6129 +
           ((C6132 * C867 + C32540 * C876) * C118 +
            (C6132 * C873 + C32540 * C885) * C32644) *
               C6130 +
           ((C6132 * C872 + C32540 * C881) * C118 +
            (C6132 * C884 + C32540 * C890) * C32644) *
               C6131) *
              C32603 * C32589 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         ((((C6132 * C119 + C32540 * C126) * C118 +
            (C6132 * C131 + C32540 * C140) * C32644) *
               C6127 +
           (C6234 + C6235) * C6128 + C6244 * C6129 + C6245 * C6130 +
           C6246 * C6131) *
              C32603 * C209 -
          ((C6242 + C6243) * C6131 + (C6241 + C6240) * C6130 +
           (C6239 + C6238) * C6129 + (C6237 + C6236) * C6128 +
           (C6235 + C6234) * C6127) *
              C32603 * C210 +
          (C6244 * C6127 + C6245 * C6128 + C6246 * C6129 +
           (C6243 + C6242) * C6130 +
           ((C6132 * C6196 + C32540 * C6199) * C118 +
            (C6132 * C6200 + C32540 * C6202) * C32644) *
               C6131) *
              C32603 * C211) *
         C32577) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C6132 * C119 + C32540 * C126) * C118 +
            (C6132 * C131 + C32540 * C140) * C32644) *
               C6127 +
           (C6234 + C6235) * C6128 + C6244 * C6129 + C6245 * C6130 +
           C6246 * C6131) *
              C315 -
          (((C6132 * C6311 + C32540 * C6317) * C32644 +
            (C6132 * C6308 + C32540 * C6312) * C118) *
               C6131 +
           ((C6132 * C1586 + C32540 * C1589) * C32644 +
            (C6132 * C1580 + C32540 * C1583) * C118) *
               C6130 +
           ((C6132 * C1073 + C32540 * C1091) * C32644 +
            (C6132 * C1064 + C32540 * C1076) * C118) *
               C6129 +
           ((C6132 * C628 + C32540 * C633) * C32644 +
            (C6132 * C618 + C32540 * C623) * C118) *
               C6128 +
           ((C6132 * C332 + C32540 * C352) * C32644 +
            (C6132 * C322 + C32540 * C337) * C118) *
               C6127) *
              C316 +
          (((C6132 * C323 + C32540 * C338) * C118 +
            (C6132 * C343 + C32540 * C353) * C32644) *
               C6127 +
           ((C6132 * C1065 + C32540 * C1077) * C118 +
            (C6132 * C1080 + C32540 * C1092) * C32644) *
               C6128 +
           ((C6132 * C1068 + C32540 * C1083) * C118 +
            (C6132 * C1086 + C32540 * C1095) * C32644) *
               C6129 +
           ((C6132 * C6309 + C32540 * C6313) * C118 +
            (C6132 * C6314 + C32540 * C6318) * C32644) *
               C6130 +
           ((C6132 * C6310 + C32540 * C6315) * C118 +
            (C6132 * C6316 + C32540 * C6319) * C32644) *
               C6131) *
              C317) *
         C32589 * C32577) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C6132 * C119 + C32540 * C126) * C1741 +
            (C6132 * C131 + C32540 * C140) * C32952 +
            (C6132 * C322 + C32540 * C337) * C1742 +
            (C6132 * C332 + C32540 * C352) * C32941 +
            (C6132 * C323 + C32540 * C338) * C1743 +
            (C6132 * C343 + C32540 * C353) * C32919) *
               C5267 +
           (C6224 * C1741 + C6225 * C32952 + C6634 * C1742 + C6633 * C32941 +
            (C6132 * C1065 + C32540 * C1077) * C1743 +
            (C6132 * C1080 + C32540 * C1092) * C32919) *
               C5268 +
           (C6226 * C1741 + C6227 * C32952 + C6632 * C1742 + C6631 * C32941 +
            (C6132 * C1068 + C32540 * C1083) * C1743 +
            (C6132 * C1086 + C32540 * C1095) * C32919) *
               C32916) *
              C32603 * C32589 * C110 -
          (((C6132 * C1087 + C32540 * C1096) * C32919 +
            (C6132 * C1069 + C32540 * C1084) * C1743 +
            (C6132 * C1072 + C32540 * C1090) * C32941 +
            (C6132 * C1063 + C32540 * C1075) * C1742 + C6426 * C32952 +
            C6425 * C1741) *
               C32916 +
           ((C6132 * C1081 + C32540 * C1093) * C32919 +
            (C6132 * C1066 + C32540 * C1078) * C1743 +
            (C6132 * C629 + C32540 * C634) * C32941 +
            (C6132 * C619 + C32540 * C624) * C1742 + C6424 * C32952 +
            C6423 * C1741) *
               C5268 +
           ((C6132 * C344 + C32540 * C354) * C32919 +
            (C6132 * C324 + C32540 * C339) * C1743 +
            (C6132 * C331 + C32540 * C351) * C32941 +
            (C6132 * C321 + C32540 * C336) * C1742 +
            (C6132 * C132 + C32540 * C141) * C32952 +
            (C6132 * C120 + C32540 * C127) * C1741) *
               C5267) *
              C32603 * C32589 * C111 +
          (((C6132 * C121 + C32540 * C128) * C1741 +
            (C6132 * C133 + C32540 * C142) * C32952 +
            (C6132 * C320 + C32540 * C335) * C1742 +
            (C6132 * C330 + C32540 * C350) * C32941 +
            (C6132 * C325 + C32540 * C340) * C1743 +
            (C6132 * C345 + C32540 * C355) * C32919) *
               C5267 +
           ((C6132 * C215 + C32540 * C230) * C1741 +
            (C6132 * C225 + C32540 * C245) * C32952 +
            (C6132 * C620 + C32540 * C625) * C1742 +
            (C6132 * C630 + C32540 * C635) * C32941 +
            (C6132 * C1067 + C32540 * C1079) * C1743 +
            (C6132 * C1082 + C32540 * C1094) * C32919) *
               C5268 +
           ((C6132 * C220 + C32540 * C235) * C1741 +
            (C6132 * C240 + C32540 * C250) * C32952 +
            (C6132 * C1062 + C32540 * C1074) * C1742 +
            (C6132 * C1071 + C32540 * C1089) * C32941 +
            (C6132 * C1070 + C32540 * C1085) * C1743 +
            (C6132 * C1088 + C32540 * C1097) * C32919) *
               C32916) *
              C32603 * C32589 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C6132 * C119 + C32540 * C126) * C1741 +
            (C6132 * C131 + C32540 * C140) * C32952 +
            (C6132 * C322 + C32540 * C337) * C1742 +
            (C6132 * C332 + C32540 * C352) * C32941 +
            (C6132 * C323 + C32540 * C338) * C1743 +
            (C6132 * C343 + C32540 * C353) * C32919) *
               C5267 +
           (C6863 + C6864 + C6865 + C6866 + C6894 + C6895) * C5268 +
           C6903 * C32916) *
              C32603 * C209 -
          ((C6899 + C6900 + C6883 + C6884 + C6885 + C6886) * C32916 +
           (C6898 + C6897 + C6874 + C6873 + C6872 + C6871) * C5268 +
           (C6895 + C6894 + C6866 + C6865 + C6864 + C6863) * C5267) *
              C32603 * C210 +
          (C6903 * C5267 +
           (C6886 + C6885 + C6884 + C6883 + C6900 + C6899) * C5268 +
           (C6230 * C1741 + C6231 * C32952 + C6628 * C1742 + C6627 * C32941 +
            (C6132 * C6310 + C32540 * C6315) * C1743 +
            (C6132 * C6316 + C32540 * C6319) * C32919) *
               C32916) *
              C32603 * C211) *
         C32577) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C6132 * C119 + C32540 * C126) * C1741 +
            (C6132 * C131 + C32540 * C140) * C32952 + C7046 * C1742 +
            C7047 * C32941 + C7048 * C1743 + C7049 * C32919) *
               C5267 +
           (C6863 + C6864 + C6865 + C6866 + C6894 + C6895) * C5268 +
           C6903 * C32916) *
              C315 -
          ((C7050 * C32919 + C7051 * C1743 + C6891 * C32941 + C6890 * C1742 +
            C6631 * C32952 + C6632 * C1741) *
               C32916 +
           (C7052 * C32919 + C7053 * C1743 + C6888 * C32941 + C6887 * C1742 +
            C6633 * C32952 + C6634 * C1741) *
               C5268 +
           (C7054 * C32919 + C7055 * C1743 + C7049 * C32941 + C7048 * C1742 +
            C7047 * C32952 + C7046 * C1741) *
               C5267) *
              C316 +
          ((C7048 * C1741 + C7049 * C32952 + C7055 * C1742 + C7054 * C32941 +
            (C6132 * C1967 + C32540 * C1976) * C1743 +
            (C6132 * C1979 + C32540 * C1985) * C32919) *
               C5267 +
           (C6887 * C1741 + C6888 * C32952 + C7053 * C1742 + C7052 * C32941 +
            (C6132 * C7014 + C32540 * C7018) * C1743 +
            (C6132 * C7019 + C32540 * C7023) * C32919) *
               C5268 +
           (C6890 * C1741 + C6891 * C32952 + C7051 * C1742 + C7050 * C32941 +
            (C6132 * C7015 + C32540 * C7020) * C1743 +
            (C6132 * C7021 + C32540 * C7024) * C32919) *
               C32916) *
              C317) *
         C32589 * C32577) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C5270 * C119 + C32948 * C126 + C5271 * C120 + C32935 * C127 +
            C5272 * C121 + C32905 * C128) *
               C10355 +
           (C5270 * C131 + C32948 * C140 + C5271 * C132 + C32935 * C141 +
            C5272 * C133 + C32905 * C142) *
               C10352 +
           (C5270 * C322 + C32948 * C337 + C5271 * C321 + C32935 * C336 +
            C5272 * C320 + C32905 * C335) *
               C10356 +
           (C5270 * C332 + C32948 * C352 + C5271 * C331 + C32935 * C351 +
            C5272 * C330 + C32905 * C350) *
               C10353 +
           (C5270 * C323 + C32948 * C338 + C5271 * C324 + C32935 * C339 +
            C5272 * C325 + C32905 * C340) *
               C10357 +
           (C5270 * C343 + C32948 * C353 + C5271 * C344 + C32935 * C354 +
            C5272 * C345 + C32905 * C355) *
               C32919) *
              C32633 * C32603 * C32589 * C110 -
          ((C5272 * C346 + C32905 * C356 + C5271 * C345 + C32935 * C355 +
            C5270 * C344 + C32948 * C354) *
               C32919 +
           (C5272 * C326 + C32905 * C341 + C5271 * C325 + C32935 * C340 +
            C5270 * C324 + C32948 * C339) *
               C10357 +
           (C5272 * C329 + C32905 * C349 + C5271 * C330 + C32935 * C350 +
            C5270 * C331 + C32948 * C351) *
               C10353 +
           (C5272 * C319 + C32905 * C334 + C5271 * C320 + C32935 * C335 +
            C5270 * C321 + C32948 * C336) *
               C10356 +
           (C5272 * C134 + C32905 * C143 + C5271 * C133 + C32935 * C142 +
            C5270 * C132 + C32948 * C141) *
               C10352 +
           (C5272 * C122 + C32905 * C129 + C5271 * C121 + C32935 * C128 +
            C5270 * C120 + C32948 * C127) *
               C10355) *
              C32633 * C32603 * C32589 * C111 +
          ((C5270 * C121 + C32948 * C128 + C5271 * C122 + C32935 * C129 +
            C5272 * C123 + C32905 * C130) *
               C10355 +
           (C5270 * C133 + C32948 * C142 + C5271 * C134 + C32935 * C143 +
            C5272 * C135 + C32905 * C144) *
               C10352 +
           (C5270 * C320 + C32948 * C335 + C5271 * C319 + C32935 * C334 +
            C5272 * C318 + C32905 * C333) *
               C10356 +
           (C5270 * C330 + C32948 * C350 + C5271 * C329 + C32935 * C349 +
            C5272 * C328 + C32905 * C348) *
               C10353 +
           (C5270 * C325 + C32948 * C340 + C5271 * C326 + C32935 * C341 +
            C5272 * C327 + C32905 * C342) *
               C10357 +
           (C5270 * C345 + C32948 * C355 + C5271 * C346 + C32935 * C356 +
            C5272 * C347 + C32905 * C357) *
               C32919) *
              C32633 * C32603 * C32589 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C5270 * C119 + C32948 * C126 + C5271 * C120 + C32935 * C127 +
            C5272 * C121 + C32905 * C128) *
               C10355 +
           (C5270 * C131 + C32948 * C140 + C5271 * C132 + C32935 * C141 +
            C5272 * C133 + C32905 * C142) *
               C10352 +
           (C5270 * C322 + C32948 * C337 + C5271 * C321 + C32935 * C336 +
            C5272 * C320 + C32905 * C335) *
               C10356 +
           (C5270 * C332 + C32948 * C352 + C5271 * C331 + C32935 * C351 +
            C5272 * C330 + C32905 * C350) *
               C10353 +
           (C5270 * C323 + C32948 * C338 + C5271 * C324 + C32935 * C339 +
            C5272 * C325 + C32905 * C340) *
               C10357 +
           (C5270 * C343 + C32948 * C353 + C5271 * C344 + C32935 * C354 +
            C5272 * C345 + C32905 * C355) *
               C32919) *
              C32633 * C32603 * C209 -
          ((C5272 * C1082 + C32905 * C1094 + C5271 * C1081 + C32935 * C1093 +
            C5270 * C1080 + C32948 * C1092) *
               C32919 +
           (C5272 * C1067 + C32905 * C1079 + C5271 * C1066 + C32935 * C1078 +
            C5270 * C1065 + C32948 * C1077) *
               C10357 +
           (C6059 + C6060 + C6061) * C10353 + (C6062 + C6063 + C6064) * C10356 +
           (C5425 + C5424 + C5423) * C10352 +
           (C5422 + C5421 + C5420) * C10355) *
              C32633 * C32603 * C210 +
          (C5440 * C10355 + C5441 * C10352 + (C6058 + C6057 + C6056) * C10356 +
           (C6055 + C6054 + C6053) * C10353 +
           (C5270 * C1068 + C32948 * C1083 + C5271 * C1069 + C32935 * C1084 +
            C5272 * C1070 + C32905 * C1085) *
               C10357 +
           (C5270 * C1086 + C32948 * C1095 + C5271 * C1087 + C32935 * C1096 +
            C5272 * C1088 + C32905 * C1097) *
               C32919) *
              C32633 * C32603 * C211) *
         C32577) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C5270 * C119 + C32948 * C126 + C5271 * C120 + C32935 * C127 +
            C5272 * C121 + C32905 * C128) *
               C10355 +
           (C5270 * C131 + C32948 * C140 + C5271 * C132 + C32935 * C141 +
            C5272 * C133 + C32905 * C142) *
               C10352 +
           (C10615 + C10616 + C10617) * C10356 +
           (C10618 + C10619 + C10620) * C10353 + C10635 * C10357 +
           C10636 * C32919) *
              C32633 * C315 -
          ((C10627 + C10628 + C10629) * C32919 +
           (C10630 + C10631 + C10632) * C10357 +
           (C10626 + C10625 + C10624) * C10353 +
           (C10623 + C10622 + C10621) * C10356 +
           (C10620 + C10619 + C10618) * C10352 +
           (C10617 + C10616 + C10615) * C10355) *
              C32633 * C316 +
          (C10635 * C10355 + C10636 * C10352 +
           (C10632 + C10631 + C10630) * C10356 +
           (C10629 + C10628 + C10627) * C10353 +
           (C5270 * C1967 + C32948 * C1976 + C5271 * C1968 + C32935 * C1977 +
            C5272 * C1969 + C32905 * C1978) *
               C10357 +
           (C5270 * C1979 + C32948 * C1985 + C5271 * C1980 + C32935 * C1986 +
            C5272 * C1981 + C32905 * C1987) *
               C32919) *
              C32633 * C317) *
         C32589 * C32577) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C6132 * C119 + C32540 * C126) * C10355 +
            (C6132 * C131 + C32540 * C140) * C10352 + C7046 * C10356 +
            C7047 * C10353 + C7048 * C10357 + C7049 * C32919) *
               C32951 +
           (C6224 * C10355 + C6225 * C10352 + C6634 * C10356 + C6633 * C10353 +
            C6887 * C10357 + C6888 * C32919) *
               C32939 +
           (C6226 * C10355 + C6227 * C10352 + C6632 * C10356 + C6631 * C10353 +
            C6890 * C10357 + C6891 * C32919) *
               C32916) *
              C32603 * C32589 * C110 -
          ((C7233 * C32919 + C7232 * C10357 + C7231 * C10353 + C7230 * C10356 +
            C6426 * C10352 + C6425 * C10355) *
               C32916 +
           (C7229 * C32919 + C7228 * C10357 + C7227 * C10353 + C7226 * C10356 +
            C6424 * C10352 + C6423 * C10355) *
               C32939 +
           (C7403 * C32919 + C7402 * C10357 + C7401 * C10353 + C7400 * C10356 +
            (C6132 * C132 + C32540 * C141) * C10352 +
            (C6132 * C120 + C32540 * C127) * C10355) *
               C32951) *
              C32603 * C32589 * C111 +
          (((C6132 * C121 + C32540 * C128) * C10355 +
            (C6132 * C133 + C32540 * C142) * C10352 +
            (C6132 * C320 + C32540 * C335) * C10356 +
            (C6132 * C330 + C32540 * C350) * C10353 +
            (C6132 * C325 + C32540 * C340) * C10357 +
            (C6132 * C345 + C32540 * C355) * C32919) *
               C32951 +
           ((C6132 * C215 + C32540 * C230) * C10355 +
            (C6132 * C225 + C32540 * C245) * C10352 +
            (C6132 * C620 + C32540 * C625) * C10356 +
            (C6132 * C630 + C32540 * C635) * C10353 +
            (C6132 * C1067 + C32540 * C1079) * C10357 +
            (C6132 * C1082 + C32540 * C1094) * C32919) *
               C32939 +
           ((C6132 * C220 + C32540 * C235) * C10355 +
            (C6132 * C240 + C32540 * C250) * C10352 +
            (C6132 * C1062 + C32540 * C1074) * C10356 +
            (C6132 * C1071 + C32540 * C1089) * C10353 +
            (C6132 * C1070 + C32540 * C1085) * C10357 +
            (C6132 * C1088 + C32540 * C1097) * C32919) *
               C32916) *
              C32603 * C32589 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C6132 * C119 + C32540 * C126) * C10355 +
            (C6132 * C131 + C32540 * C140) * C10352 + C7046 * C10356 +
            C7047 * C10353 + C7048 * C10357 + C7049 * C32919) *
               C32951 +
           (C11349 + C11350 + C11351 + C11352 + C11353 + C11354) * C32939 +
           C11371 * C32916) *
              C32603 * C209 -
          ((C11361 + C11362 + C11363 + C11364 + C11365 + C11366) * C32916 +
           (C11360 + C11359 + C11358 + C11357 + C11356 + C11355) * C32939 +
           (C11354 + C11353 + C11352 + C11351 + C11350 + C11349) * C32951) *
              C32603 * C210 +
          (C11371 * C32951 +
           (C11366 + C11365 + C11364 + C11363 + C11362 + C11361) * C32939 +
           (C6230 * C10355 + C6231 * C10352 + C6628 * C10356 + C6627 * C10353 +
            (C6132 * C6310 + C32540 * C6315) * C10357 +
            (C6132 * C6316 + C32540 * C6319) * C32919) *
               C32916) *
              C32603 * C211) *
         C32577) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C6132 * C119 + C32540 * C126) * C10355 +
            (C6132 * C131 + C32540 * C140) * C10352 + C7046 * C10356 +
            C7047 * C10353 + C7048 * C10357 + C7049 * C32919) *
               C32951 +
           (C11349 + C11350 + C11351 + C11352 + C11353 + C11354) * C32939 +
           C11371 * C32916) *
              C315 -
          ((C7050 * C32919 + C7051 * C10357 + C6891 * C10353 + C6890 * C10356 +
            C6631 * C10352 + C6632 * C10355) *
               C32916 +
           (C7052 * C32919 + C7053 * C10357 + C6888 * C10353 + C6887 * C10356 +
            C6633 * C10352 + C6634 * C10355) *
               C32939 +
           (C7054 * C32919 + C7055 * C10357 + C7049 * C10353 + C7048 * C10356 +
            C7047 * C10352 + C7046 * C10355) *
               C32951) *
              C316 +
          ((C7048 * C10355 + C7049 * C10352 + C7055 * C10356 + C7054 * C10353 +
            (C6132 * C1967 + C32540 * C1976) * C10357 +
            (C6132 * C1979 + C32540 * C1985) * C32919) *
               C32951 +
           (C6887 * C10355 + C6888 * C10352 + C7053 * C10356 + C7052 * C10353 +
            (C6132 * C7014 + C32540 * C7018) * C10357 +
            (C6132 * C7019 + C32540 * C7023) * C32919) *
               C32939 +
           (C6890 * C10355 + C6891 * C10352 + C7051 * C10356 + C7050 * C10353 +
            (C6132 * C7015 + C32540 * C7020) * C10357 +
            (C6132 * C7021 + C32540 * C7024) * C32919) *
               C32916) *
              C317) *
         C32589 * C32577) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C6132 * C119 + C32540 * C126) * C12010 +
           (C6132 * C131 + C32540 * C140) * C12005 + C7046 * C12011 +
           C7047 * C12006 + C7048 * C12012 + C7049 * C12007 + C7055 * C12013 +
           C7054 * C12008 + (C6132 * C1967 + C32540 * C1976) * C12014 +
           (C6132 * C1979 + C32540 * C1985) * C12009) *
              C32633 * C32603 * C32589 * C110 -
          ((C6132 * C1980 + C32540 * C1986) * C12009 +
           (C6132 * C1968 + C32540 * C1977) * C12014 +
           (C6132 * C1971 + C32540 * C1983) * C12008 +
           (C6132 * C1965 + C32540 * C1974) * C12013 + C7403 * C12007 +
           C7402 * C12012 + C7401 * C12006 + C7400 * C12011 +
           (C6132 * C132 + C32540 * C141) * C12005 +
           (C6132 * C120 + C32540 * C127) * C12010) *
              C32633 * C32603 * C32589 * C111 +
          ((C6132 * C121 + C32540 * C128) * C12010 +
           (C6132 * C133 + C32540 * C142) * C12005 +
           (C6132 * C320 + C32540 * C335) * C12011 +
           (C6132 * C330 + C32540 * C350) * C12006 +
           (C6132 * C325 + C32540 * C340) * C12012 +
           (C6132 * C345 + C32540 * C355) * C12007 +
           (C6132 * C1964 + C32540 * C1973) * C12013 +
           (C6132 * C1970 + C32540 * C1982) * C12008 +
           (C6132 * C1969 + C32540 * C1978) * C12014 +
           (C6132 * C1981 + C32540 * C1987) * C12009) *
              C32633 * C32603 * C32589 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C6132 * C119 + C32540 * C126) * C12010 +
           (C6132 * C131 + C32540 * C140) * C12005 + C7046 * C12011 +
           C7047 * C12006 + C7048 * C12012 + C7049 * C12007 + C7055 * C12013 +
           C7054 * C12008 + (C6132 * C1967 + C32540 * C1976) * C12014 +
           (C6132 * C1979 + C32540 * C1985) * C12009) *
              C32633 * C32603 * C209 -
          ((C6132 * C7019 + C32540 * C7023) * C12009 +
           (C6132 * C7014 + C32540 * C7018) * C12014 + C7052 * C12008 +
           C7053 * C12013 + C6888 * C12007 + C6887 * C12012 + C6633 * C12006 +
           C6634 * C12011 + C6225 * C12005 + C6224 * C12010) *
              C32633 * C32603 * C210 +
          (C6226 * C12010 + C6227 * C12005 + C6632 * C12011 + C6631 * C12006 +
           C6890 * C12012 + C6891 * C12007 + C7051 * C12013 + C7050 * C12008 +
           (C6132 * C7015 + C32540 * C7020) * C12014 +
           (C6132 * C7021 + C32540 * C7024) * C12009) *
              C32633 * C32603 * C211) *
         C32577) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C6132 * C119 + C32540 * C126) * C12010 +
           (C6132 * C131 + C32540 * C140) * C12005 + C7046 * C12011 +
           C7047 * C12006 + C7048 * C12012 + C7049 * C12007 + C7055 * C12013 +
           C7054 * C12008 + C12156 * C12014 + C12157 * C12009) *
              C32633 * C315 -
          (C12158 * C12009 + C12159 * C12014 + C12157 * C12008 +
           C12156 * C12013 + C7054 * C12007 + C7055 * C12012 + C7049 * C12006 +
           C7048 * C12011 + C7047 * C12005 + C7046 * C12010) *
              C32633 * C316 +
          (C7048 * C12010 + C7049 * C12005 + C7055 * C12011 + C7054 * C12006 +
           C12156 * C12012 + C12157 * C12007 + C12159 * C12013 +
           C12158 * C12008 + (C6132 * C12140 + C32540 * C12143) * C12014 +
           (C6132 * C12144 + C32540 * C12146) * C12009) *
              C32633 * C317) *
         C32589 * C32577) /
            (p * q * std::sqrt(p + q));
    d2ee[63] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C127 +
                 C115 * C121 + C103 * C128 + C116 * C122 + C104 * C129 +
                 C117 * C123 + C105 * C130) *
                    C118 +
                (C113 * C131 + C101 * C140 + C114 * C132 + C102 * C141 +
                 C115 * C133 + C103 * C142 + C116 * C134 + C104 * C143 +
                 C117 * C135 + C105 * C144) *
                    C32644) *
                   C32633 * C530 -
               ((C117 * C328 + C105 * C348 + C116 * C329 + C104 * C349 +
                 C115 * C330 + C103 * C350 + C114 * C331 + C102 * C351 +
                 C113 * C332 + C101 * C352) *
                    C32644 +
                (C117 * C318 + C105 * C333 + C116 * C319 + C104 * C334 +
                 C115 * C320 + C103 * C335 + C114 * C321 + C102 * C336 +
                 C113 * C322 + C101 * C337) *
                    C118) *
                   C32633 * C531) *
                  C32589 * C442 +
              (((C113 * C321 + C101 * C336 + C114 * C320 + C102 * C335 +
                 C115 * C319 + C103 * C334 + C116 * C318 + C104 * C333 +
                 C117 * C532 + C105 * C533) *
                    C118 +
                (C113 * C331 + C101 * C351 + C114 * C330 + C102 * C350 +
                 C115 * C329 + C103 * C349 + C116 * C328 + C104 * C348 +
                 C117 * C534 + C105 * C535) *
                    C32644) *
                   C32633 * C531 -
               ((C117 * C136 + C105 * C145 + C116 * C135 + C104 * C144 +
                 C115 * C134 + C103 * C143 + C114 * C133 + C102 * C142 +
                 C113 * C132 + C101 * C141) *
                    C32644 +
                (C117 * C124 + C105 * C137 + C116 * C123 + C104 * C130 +
                 C115 * C122 + C103 * C129 + C114 * C121 + C102 * C128 +
                 C113 * C120 + C101 * C127) *
                    C118) *
                   C32633 * C530) *
                  C32589 * C443) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C754 * C119 + C748 * C126 + C755 * C120 + C749 * C127 +
                  C756 * C121 + C32905 * C128) *
                     C118 +
                 (C754 * C131 + C748 * C140 + C755 * C132 + C749 * C141 +
                  C756 * C133 + C32905 * C142) *
                     C32644) *
                    C32951 +
                ((C928 + C929 + C930) * C118 + (C931 + C932 + C933) * C32644) *
                    C32939 +
                C952 * C32916) *
                   C530 -
               (((C756 * C1071 + C32905 * C1089 + C755 * C1072 + C749 * C1090 +
                  C754 * C1073 + C748 * C1091) *
                     C32644 +
                 (C756 * C1062 + C32905 * C1074 + C755 * C1063 + C749 * C1075 +
                  C754 * C1064 + C748 * C1076) *
                     C118) *
                    C32916 +
                ((C756 * C630 + C32905 * C635 + C755 * C629 + C749 * C634 +
                  C754 * C628 + C748 * C633) *
                     C32644 +
                 (C756 * C620 + C32905 * C625 + C755 * C619 + C749 * C624 +
                  C754 * C618 + C748 * C623) *
                     C118) *
                    C32939 +
                ((C756 * C330 + C32905 * C350 + C755 * C331 + C749 * C351 +
                  C754 * C332 + C748 * C352) *
                     C32644 +
                 (C756 * C320 + C32905 * C335 + C755 * C321 + C749 * C336 +
                  C754 * C322 + C748 * C337) *
                     C118) *
                    C32951) *
                   C531) *
                  C32589 * C442 +
              ((((C754 * C321 + C748 * C336 + C755 * C320 + C749 * C335 +
                  C756 * C319 + C32905 * C334) *
                     C118 +
                 (C754 * C331 + C748 * C351 + C755 * C330 + C749 * C350 +
                  C756 * C329 + C32905 * C349) *
                     C32644) *
                    C32951 +
                ((C754 * C619 + C748 * C624 + C755 * C620 + C749 * C625 +
                  C756 * C621 + C32905 * C626) *
                     C118 +
                 (C754 * C629 + C748 * C634 + C755 * C630 + C749 * C635 +
                  C756 * C631 + C32905 * C636) *
                     C32644) *
                    C32939 +
                ((C754 * C1063 + C748 * C1075 + C755 * C1062 + C749 * C1074 +
                  C756 * C1430 + C32905 * C1431) *
                     C118 +
                 (C754 * C1072 + C748 * C1090 + C755 * C1071 + C749 * C1089 +
                  C756 * C1432 + C32905 * C1433) *
                     C32644) *
                    C32916) *
                   C531 -
               (((C1284 + C1283 + C1282) * C32644 +
                 (C1281 + C1280 + C1279) * C118) *
                    C32916 +
                ((C1278 + C1277 + C1276) * C32644 +
                 (C1275 + C1274 + C1273) * C118) *
                    C32939 +
                ((C756 * C134 + C32905 * C143 + C755 * C133 + C749 * C142 +
                  C754 * C132 + C748 * C141) *
                     C32644 +
                 (C756 * C122 + C32905 * C129 + C755 * C121 + C749 * C128 +
                  C754 * C120 + C748 * C127) *
                     C118) *
                    C32951) *
                   C530) *
                  C32589 * C443)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C754 * C119 + C748 * C126 + C755 * C120 + C749 * C127 +
             C756 * C121 + C32905 * C128) *
                C1741 +
            (C754 * C131 + C748 * C140 + C755 * C132 + C749 * C141 +
             C756 * C133 + C32905 * C142) *
                C32952 +
            (C2025 + C2026 + C2027) * C1742 + (C2028 + C2029 + C2030) * C32941 +
            C2045 * C1743 + C2046 * C32919) *
               C32633 * C530 -
           ((C2037 + C2038 + C2039) * C32919 + (C2040 + C2041 + C2042) * C1743 +
            (C2036 + C2035 + C2034) * C32941 + (C2033 + C2032 + C2031) * C1742 +
            (C2030 + C2029 + C2028) * C32952 +
            (C2027 + C2026 + C2025) * C1741) *
               C32633 * C531) *
              C32589 * C442 +
          (((C2371 + C2372 + C2373) * C1741 + (C2374 + C2375 + C2376) * C32952 +
            (C2377 + C2378 + C2379) * C1742 + (C2380 + C2381 + C2382) * C32941 +
            (C754 * C1965 + C748 * C1974 + C755 * C1964 + C749 * C1973 +
             C756 * C2342 + C32905 * C2343) *
                C1743 +
            (C754 * C1971 + C748 * C1983 + C755 * C1970 + C749 * C1982 +
             C756 * C2344 + C32905 * C2345) *
                C32919) *
               C32633 * C531 -
           ((C2382 + C2381 + C2380) * C32919 + (C2379 + C2378 + C2377) * C1743 +
            (C2376 + C2375 + C2374) * C32941 + (C2373 + C2372 + C2371) * C1742 +
            (C756 * C134 + C32905 * C143 + C755 * C133 + C749 * C142 +
             C754 * C132 + C748 * C141) *
                C32952 +
            (C756 * C122 + C32905 * C129 + C755 * C121 + C749 * C128 +
             C754 * C120 + C748 * C127) *
                C1741) *
               C32633 * C530) *
              C32589 * C443)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C5270 * C119 + C32948 * C126 + C5271 * C120 + C32935 * C127 +
              C5272 * C121 + C32905 * C128) *
                 C118 +
             (C5270 * C131 + C32948 * C140 + C5271 * C132 + C32935 * C141 +
              C5272 * C133 + C32905 * C142) *
                 C32644) *
                C5267 +
            ((C5420 + C5421 + C5422) * C118 +
             (C5423 + C5424 + C5425) * C32644) *
                C5268 +
            C5444 * C32916) *
               C530 -
           (((C5272 * C1071 + C32905 * C1089 + C5271 * C1072 + C32935 * C1090 +
              C5270 * C1073 + C32948 * C1091) *
                 C32644 +
             (C5272 * C1062 + C32905 * C1074 + C5271 * C1063 + C32935 * C1075 +
              C5270 * C1064 + C32948 * C1076) *
                 C118) *
                C32916 +
            ((C5272 * C630 + C32905 * C635 + C5271 * C629 + C32935 * C634 +
              C5270 * C628 + C32948 * C633) *
                 C32644 +
             (C5272 * C620 + C32905 * C625 + C5271 * C619 + C32935 * C624 +
              C5270 * C618 + C32948 * C623) *
                 C118) *
                C5268 +
            ((C5272 * C330 + C32905 * C350 + C5271 * C331 + C32935 * C351 +
              C5270 * C332 + C32948 * C352) *
                 C32644 +
             (C5272 * C320 + C32905 * C335 + C5271 * C321 + C32935 * C336 +
              C5270 * C322 + C32948 * C337) *
                 C118) *
                C5267) *
               C531) *
              C32589 * C442 +
          ((((C5270 * C321 + C32948 * C336 + C5271 * C320 + C32935 * C335 +
              C5272 * C319 + C32905 * C334) *
                 C118 +
             (C5270 * C331 + C32948 * C351 + C5271 * C330 + C32935 * C350 +
              C5272 * C329 + C32905 * C349) *
                 C32644) *
                C5267 +
            ((C5270 * C619 + C32948 * C624 + C5271 * C620 + C32935 * C625 +
              C5272 * C621 + C32905 * C626) *
                 C118 +
             (C5270 * C629 + C32948 * C634 + C5271 * C630 + C32935 * C635 +
              C5272 * C631 + C32905 * C636) *
                 C32644) *
                C5268 +
            ((C5270 * C1063 + C32948 * C1075 + C5271 * C1062 + C32935 * C1074 +
              C5272 * C1430 + C32905 * C1431) *
                 C118 +
             (C5270 * C1072 + C32948 * C1090 + C5271 * C1071 + C32935 * C1089 +
              C5272 * C1432 + C32905 * C1433) *
                 C32644) *
                C32916) *
               C531 -
           (((C5736 + C5735 + C5734) * C32644 +
             (C5733 + C5732 + C5731) * C118) *
                C32916 +
            ((C5730 + C5729 + C5728) * C32644 +
             (C5727 + C5726 + C5725) * C118) *
                C5268 +
            ((C5272 * C134 + C32905 * C143 + C5271 * C133 + C32935 * C142 +
              C5270 * C132 + C32948 * C141) *
                 C32644 +
             (C5272 * C122 + C32905 * C129 + C5271 * C121 + C32935 * C128 +
              C5270 * C120 + C32948 * C127) *
                 C118) *
                C5267) *
               C530) *
              C32589 * C443)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C6132 * C119 + C32540 * C126) * C118 +
             (C6132 * C131 + C32540 * C140) * C32644) *
                C6127 +
            (C6234 + C6235) * C6128 + C6244 * C6129 + C6245 * C6130 +
            C6246 * C6131) *
               C530 -
           (((C6132 * C6311 + C32540 * C6317) * C32644 +
             (C6132 * C6308 + C32540 * C6312) * C118) *
                C6131 +
            ((C6132 * C1586 + C32540 * C1589) * C32644 +
             (C6132 * C1580 + C32540 * C1583) * C118) *
                C6130 +
            ((C6132 * C1073 + C32540 * C1091) * C32644 +
             (C6132 * C1064 + C32540 * C1076) * C118) *
                C6129 +
            ((C6132 * C628 + C32540 * C633) * C32644 +
             (C6132 * C618 + C32540 * C623) * C118) *
                C6128 +
            ((C6132 * C332 + C32540 * C352) * C32644 +
             (C6132 * C322 + C32540 * C337) * C118) *
                C6127) *
               C531) *
              C32589 * C442 +
          ((((C6132 * C321 + C32540 * C336) * C118 +
             (C6132 * C331 + C32540 * C351) * C32644) *
                C6127 +
            ((C6132 * C619 + C32540 * C624) * C118 +
             (C6132 * C629 + C32540 * C634) * C32644) *
                C6128 +
            ((C6132 * C1063 + C32540 * C1075) * C118 +
             (C6132 * C1072 + C32540 * C1090) * C32644) *
                C6129 +
            ((C6132 * C1581 + C32540 * C1584) * C118 +
             (C6132 * C1587 + C32540 * C1590) * C32644) *
                C6130 +
            ((C6132 * C6520 + C32540 * C6521) * C118 +
             (C6132 * C6522 + C32540 * C6523) * C32644) *
                C6131) *
               C531 -
           ((C6438 + C6437) * C6131 + (C6436 + C6435) * C6130 +
            (C6434 + C6433) * C6129 + (C6432 + C6431) * C6128 +
            ((C6132 * C132 + C32540 * C141) * C32644 +
             (C6132 * C120 + C32540 * C127) * C118) *
                C6127) *
               C530) *
              C32589 * C443)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C6132 * C119 + C32540 * C126) * C1741 +
             (C6132 * C131 + C32540 * C140) * C32952 + C7046 * C1742 +
             C7047 * C32941 + C7048 * C1743 + C7049 * C32919) *
                C5267 +
            (C6863 + C6864 + C6865 + C6866 + C6894 + C6895) * C5268 +
            C6903 * C32916) *
               C530 -
           ((C7050 * C32919 + C7051 * C1743 + C6891 * C32941 + C6890 * C1742 +
             C6631 * C32952 + C6632 * C1741) *
                C32916 +
            (C7052 * C32919 + C7053 * C1743 + C6888 * C32941 + C6887 * C1742 +
             C6633 * C32952 + C6634 * C1741) *
                C5268 +
            (C7054 * C32919 + C7055 * C1743 + C7049 * C32941 + C7048 * C1742 +
             C7047 * C32952 + C7046 * C1741) *
                C5267) *
               C531) *
              C32589 * C442 +
          (((C7400 * C1741 + C7401 * C32952 + C7402 * C1742 + C7403 * C32941 +
             (C6132 * C1965 + C32540 * C1974) * C1743 +
             (C6132 * C1971 + C32540 * C1983) * C32919) *
                C5267 +
            (C7226 * C1741 + C7227 * C32952 + C7228 * C1742 + C7229 * C32941 +
             (C6132 * C2529 + C32540 * C2532) * C1743 +
             (C6132 * C2535 + C32540 * C2538) * C32919) *
                C5268 +
            (C7230 * C1741 + C7231 * C32952 + C7232 * C1742 + C7233 * C32941 +
             (C6132 * C7387 + C32540 * C7388) * C1743 +
             (C6132 * C7389 + C32540 * C7390) * C32919) *
                C32916) *
               C531 -
           ((C7241 + C7240 + C7239 + C7238 + C7217 + C7216) * C32916 +
            (C7237 + C7236 + C7235 + C7234 + C7207 + C7206) * C5268 +
            (C7403 * C32919 + C7402 * C1743 + C7401 * C32941 + C7400 * C1742 +
             (C6132 * C132 + C32540 * C141) * C32952 +
             (C6132 * C120 + C32540 * C127) * C1741) *
                C5267) *
               C530) *
              C32589 * C443)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C5270 * C119 + C32948 * C126 + C5271 * C120 + C32935 * C127 +
             C5272 * C121 + C32905 * C128) *
                C10355 +
            (C5270 * C131 + C32948 * C140 + C5271 * C132 + C32935 * C141 +
             C5272 * C133 + C32905 * C142) *
                C10352 +
            (C10615 + C10616 + C10617) * C10356 +
            (C10618 + C10619 + C10620) * C10353 + C10635 * C10357 +
            C10636 * C32919) *
               C32633 * C530 -
           ((C10627 + C10628 + C10629) * C32919 +
            (C10630 + C10631 + C10632) * C10357 +
            (C10626 + C10625 + C10624) * C10353 +
            (C10623 + C10622 + C10621) * C10356 +
            (C10620 + C10619 + C10618) * C10352 +
            (C10617 + C10616 + C10615) * C10355) *
               C32633 * C531) *
              C32589 * C442 +
          (((C10953 + C10954 + C10955) * C10355 +
            (C10956 + C10957 + C10958) * C10352 +
            (C10959 + C10960 + C10961) * C10356 +
            (C10962 + C10963 + C10964) * C10353 +
            (C5270 * C1965 + C32948 * C1974 + C5271 * C1964 + C32935 * C1973 +
             C5272 * C2342 + C32905 * C2343) *
                C10357 +
            (C5270 * C1971 + C32948 * C1983 + C5271 * C1970 + C32935 * C1982 +
             C5272 * C2344 + C32905 * C2345) *
                C32919) *
               C32633 * C531 -
           ((C10964 + C10963 + C10962) * C32919 +
            (C10961 + C10960 + C10959) * C10357 +
            (C10958 + C10957 + C10956) * C10353 +
            (C10955 + C10954 + C10953) * C10356 +
            (C5272 * C134 + C32905 * C143 + C5271 * C133 + C32935 * C142 +
             C5270 * C132 + C32948 * C141) *
                C10352 +
            (C5272 * C122 + C32905 * C129 + C5271 * C121 + C32935 * C128 +
             C5270 * C120 + C32948 * C127) *
                C10355) *
               C32633 * C530) *
              C32589 * C443)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C6132 * C119 + C32540 * C126) * C10355 +
             (C6132 * C131 + C32540 * C140) * C10352 + C7046 * C10356 +
             C7047 * C10353 + C7048 * C10357 + C7049 * C32919) *
                C32951 +
            (C11349 + C11350 + C11351 + C11352 + C11353 + C11354) * C32939 +
            C11371 * C32916) *
               C530 -
           ((C7050 * C32919 + C7051 * C10357 + C6891 * C10353 + C6890 * C10356 +
             C6631 * C10352 + C6632 * C10355) *
                C32916 +
            (C7052 * C32919 + C7053 * C10357 + C6888 * C10353 + C6887 * C10356 +
             C6633 * C10352 + C6634 * C10355) *
                C32939 +
            (C7054 * C32919 + C7055 * C10357 + C7049 * C10353 + C7048 * C10356 +
             C7047 * C10352 + C7046 * C10355) *
                C32951) *
               C531) *
              C32589 * C442 +
          (((C7400 * C10355 + C7401 * C10352 + C7402 * C10356 + C7403 * C10353 +
             (C6132 * C1965 + C32540 * C1974) * C10357 +
             (C6132 * C1971 + C32540 * C1983) * C32919) *
                C32951 +
            (C7226 * C10355 + C7227 * C10352 + C7228 * C10356 + C7229 * C10353 +
             (C6132 * C2529 + C32540 * C2532) * C10357 +
             (C6132 * C2535 + C32540 * C2538) * C32919) *
                C32939 +
            (C7230 * C10355 + C7231 * C10352 + C7232 * C10356 + C7233 * C10353 +
             (C6132 * C7387 + C32540 * C7388) * C10357 +
             (C6132 * C7389 + C32540 * C7390) * C32919) *
                C32916) *
               C531 -
           ((C11639 + C11638 + C11637 + C11636 + C11635 + C11634) * C32916 +
            (C11633 + C11632 + C11631 + C11630 + C11629 + C11628) * C32939 +
            (C7403 * C32919 + C7402 * C10357 + C7401 * C10353 + C7400 * C10356 +
             (C6132 * C132 + C32540 * C141) * C10352 +
             (C6132 * C120 + C32540 * C127) * C10355) *
                C32951) *
               C530) *
              C32589 * C443)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C6132 * C119 + C32540 * C126) * C12010 +
            (C6132 * C131 + C32540 * C140) * C12005 + C7046 * C12011 +
            C7047 * C12006 + C7048 * C12012 + C7049 * C12007 + C7055 * C12013 +
            C7054 * C12008 + C12156 * C12014 + C12157 * C12009) *
               C32633 * C530 -
           (C12158 * C12009 + C12159 * C12014 + C12157 * C12008 +
            C12156 * C12013 + C7054 * C12007 + C7055 * C12012 + C7049 * C12006 +
            C7048 * C12011 + C7047 * C12005 + C7046 * C12010) *
               C32633 * C531) *
              C32589 * C442 +
          ((C7400 * C12010 + C7401 * C12005 + C7402 * C12011 + C7403 * C12006 +
            C12340 * C12012 + C12341 * C12007 + C12342 * C12013 +
            C12343 * C12008 + (C6132 * C12327 + C32540 * C12328) * C12014 +
            (C6132 * C12329 + C32540 * C12330) * C12009) *
               C32633 * C531 -
           (C12343 * C12009 + C12342 * C12014 + C12341 * C12008 +
            C12340 * C12013 + C7403 * C12007 + C7402 * C12012 + C7401 * C12006 +
            C7400 * C12011 + (C6132 * C132 + C32540 * C141) * C12005 +
            (C6132 * C120 + C32540 * C127) * C12010) *
               C32633 * C530) *
              C32589 * C443)) /
            (p * q * std::sqrt(p + q));
    d2ee[64] +=
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C127 +
            C115 * C121 + C103 * C128 + C116 * C122 + C104 * C129 +
            C117 * C123 + C105 * C130) *
               C118 +
           (C113 * C131 + C101 * C140 + C114 * C132 + C102 * C141 +
            C115 * C133 + C103 * C142 + C116 * C134 + C104 * C143 +
            C117 * C135 + C105 * C144) *
               C32644) *
              C32633 * C32603 * C32589 * C110 -
          ((C117 * C136 + C105 * C145 + C116 * C135 + C104 * C144 +
            C115 * C134 + C103 * C143 + C114 * C133 + C102 * C142 +
            C113 * C132 + C101 * C141) *
               C32644 +
           (C117 * C124 + C105 * C137 + C116 * C123 + C104 * C130 +
            C115 * C122 + C103 * C129 + C114 * C121 + C102 * C128 +
            C113 * C120 + C101 * C127) *
               C118) *
              C32633 * C32603 * C32589 * C111 +
          ((C113 * C121 + C101 * C128 + C114 * C122 + C102 * C129 +
            C115 * C123 + C103 * C130 + C116 * C124 + C104 * C137 +
            C117 * C125 + C105 * C138) *
               C118 +
           (C113 * C133 + C101 * C142 + C114 * C134 + C102 * C143 +
            C115 * C135 + C103 * C144 + C116 * C136 + C104 * C145 +
            C117 * C139 + C105 * C146) *
               C32644) *
              C32633 * C32603 * C32589 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C127 +
            C115 * C121 + C103 * C128 + C116 * C122 + C104 * C129 +
            C117 * C123 + C105 * C130) *
               C118 +
           (C113 * C131 + C101 * C140 + C114 * C132 + C102 * C141 +
            C115 * C133 + C103 * C142 + C116 * C134 + C104 * C143 +
            C117 * C135 + C105 * C144) *
               C32644) *
              C32633 * C32603 * C209 -
          ((C117 * C223 + C105 * C243 + C116 * C224 + C104 * C244 +
            C115 * C225 + C103 * C245 + C114 * C226 + C102 * C246 +
            C113 * C227 + C101 * C247) *
               C32644 +
           (C117 * C213 + C105 * C228 + C116 * C214 + C104 * C229 +
            C115 * C215 + C103 * C230 + C114 * C216 + C102 * C231 +
            C113 * C217 + C101 * C232) *
               C118) *
              C32633 * C32603 * C210 +
          ((C113 * C218 + C101 * C233 + C114 * C219 + C102 * C234 +
            C115 * C220 + C103 * C235 + C116 * C221 + C104 * C236 +
            C117 * C222 + C105 * C237) *
               C118 +
           (C113 * C238 + C101 * C248 + C114 * C239 + C102 * C249 +
            C115 * C240 + C103 * C250 + C116 * C241 + C104 * C251 +
            C117 * C242 + C105 * C252) *
               C32644) *
              C32633 * C32603 * C211) *
         C32577) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C754 * C119 + C748 * C126 + C755 * C120 + C749 * C127 +
             C756 * C121 + C32905 * C128) *
                C118 +
            (C754 * C131 + C748 * C140 + C755 * C132 + C749 * C141 +
             C756 * C133 + C32905 * C142) *
                C32644) *
               C32951 +
           ((C754 * C217 + C748 * C232 + C755 * C216 + C749 * C231 +
             C756 * C215 + C32905 * C230) *
                C118 +
            (C754 * C227 + C748 * C247 + C755 * C226 + C749 * C246 +
             C756 * C225 + C32905 * C245) *
                C32644) *
               C32939 +
           ((C754 * C218 + C748 * C233 + C755 * C219 + C749 * C234 +
             C756 * C220 + C32905 * C235) *
                C118 +
            (C754 * C238 + C748 * C248 + C755 * C239 + C749 * C249 +
             C756 * C240 + C32905 * C250) *
                C32644) *
               C32916) *
              C32603 * C32589 * C110 -
          (((C756 * C241 + C32905 * C251 + C755 * C240 + C749 * C250 +
             C754 * C239 + C748 * C249) *
                C32644 +
            (C756 * C221 + C32905 * C236 + C755 * C220 + C749 * C235 +
             C754 * C219 + C748 * C234) *
                C118) *
               C32916 +
           ((C756 * C224 + C32905 * C244 + C755 * C225 + C749 * C245 +
             C754 * C226 + C748 * C246) *
                C32644 +
            (C756 * C214 + C32905 * C229 + C755 * C215 + C749 * C230 +
             C754 * C216 + C748 * C231) *
                C118) *
               C32939 +
           ((C756 * C134 + C32905 * C143 + C755 * C133 + C749 * C142 +
             C754 * C132 + C748 * C141) *
                C32644 +
            (C756 * C122 + C32905 * C129 + C755 * C121 + C749 * C128 +
             C754 * C120 + C748 * C127) *
                C118) *
               C32951) *
              C32603 * C32589 * C111 +
          (((C754 * C121 + C748 * C128 + C755 * C122 + C749 * C129 +
             C756 * C123 + C32905 * C130) *
                C118 +
            (C754 * C133 + C748 * C142 + C755 * C134 + C749 * C143 +
             C756 * C135 + C32905 * C144) *
                C32644) *
               C32951 +
           ((C754 * C215 + C748 * C230 + C755 * C214 + C749 * C229 +
             C756 * C213 + C32905 * C228) *
                C118 +
            (C754 * C225 + C748 * C245 + C755 * C224 + C749 * C244 +
             C756 * C223 + C32905 * C243) *
                C32644) *
               C32939 +
           ((C754 * C220 + C748 * C235 + C755 * C221 + C749 * C236 +
             C756 * C222 + C32905 * C237) *
                C118 +
            (C754 * C240 + C748 * C250 + C755 * C241 + C749 * C251 +
             C756 * C242 + C32905 * C252) *
                C32644) *
               C32916) *
              C32603 * C32589 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C754 * C119 + C748 * C126 + C755 * C120 + C749 * C127 +
             C756 * C121 + C32905 * C128) *
                C118 +
            (C754 * C131 + C748 * C140 + C755 * C132 + C749 * C141 +
             C756 * C133 + C32905 * C142) *
                C32644) *
               C32951 +
           ((C928 + C929 + C930) * C118 + (C931 + C932 + C933) * C32644) *
               C32939 +
           C952 * C32916) *
              C32603 * C209 -
          (((C940 + C941 + C942) * C32644 + (C943 + C944 + C945) * C118) *
               C32916 +
           ((C939 + C938 + C937) * C32644 + (C936 + C935 + C934) * C118) *
               C32939 +
           ((C933 + C932 + C931) * C32644 + (C930 + C929 + C928) * C118) *
               C32951) *
              C32603 * C210 +
          (C952 * C32951 +
           ((C945 + C944 + C943) * C118 + (C942 + C941 + C940) * C32644) *
               C32939 +
           ((C754 * C870 + C748 * C879 + C755 * C871 + C749 * C880 +
             C756 * C872 + C32905 * C881) *
                C118 +
            (C754 * C882 + C748 * C888 + C755 * C883 + C749 * C889 +
             C756 * C884 + C32905 * C890) *
                C32644) *
               C32916) *
              C32603 * C211) *
         C32577) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C754 * C119 + C748 * C126 + C755 * C120 + C749 * C127 +
            C756 * C121 + C32905 * C128) *
               C1741 +
           (C754 * C131 + C748 * C140 + C755 * C132 + C749 * C141 +
            C756 * C133 + C32905 * C142) *
               C32952 +
           (C754 * C322 + C748 * C337 + C755 * C321 + C749 * C336 +
            C756 * C320 + C32905 * C335) *
               C1742 +
           (C754 * C332 + C748 * C352 + C755 * C331 + C749 * C351 +
            C756 * C330 + C32905 * C350) *
               C32941 +
           (C754 * C323 + C748 * C338 + C755 * C324 + C749 * C339 +
            C756 * C325 + C32905 * C340) *
               C1743 +
           (C754 * C343 + C748 * C353 + C755 * C344 + C749 * C354 +
            C756 * C345 + C32905 * C355) *
               C32919) *
              C32633 * C32603 * C32589 * C110 -
          ((C756 * C346 + C32905 * C356 + C755 * C345 + C749 * C355 +
            C754 * C344 + C748 * C354) *
               C32919 +
           (C756 * C326 + C32905 * C341 + C755 * C325 + C749 * C340 +
            C754 * C324 + C748 * C339) *
               C1743 +
           (C756 * C329 + C32905 * C349 + C755 * C330 + C749 * C350 +
            C754 * C331 + C748 * C351) *
               C32941 +
           (C756 * C319 + C32905 * C334 + C755 * C320 + C749 * C335 +
            C754 * C321 + C748 * C336) *
               C1742 +
           (C756 * C134 + C32905 * C143 + C755 * C133 + C749 * C142 +
            C754 * C132 + C748 * C141) *
               C32952 +
           (C756 * C122 + C32905 * C129 + C755 * C121 + C749 * C128 +
            C754 * C120 + C748 * C127) *
               C1741) *
              C32633 * C32603 * C32589 * C111 +
          ((C754 * C121 + C748 * C128 + C755 * C122 + C749 * C129 +
            C756 * C123 + C32905 * C130) *
               C1741 +
           (C754 * C133 + C748 * C142 + C755 * C134 + C749 * C143 +
            C756 * C135 + C32905 * C144) *
               C32952 +
           (C754 * C320 + C748 * C335 + C755 * C319 + C749 * C334 +
            C756 * C318 + C32905 * C333) *
               C1742 +
           (C754 * C330 + C748 * C350 + C755 * C329 + C749 * C349 +
            C756 * C328 + C32905 * C348) *
               C32941 +
           (C754 * C325 + C748 * C340 + C755 * C326 + C749 * C341 +
            C756 * C327 + C32905 * C342) *
               C1743 +
           (C754 * C345 + C748 * C355 + C755 * C346 + C749 * C356 +
            C756 * C347 + C32905 * C357) *
               C32919) *
              C32633 * C32603 * C32589 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C754 * C119 + C748 * C126 + C755 * C120 + C749 * C127 +
            C756 * C121 + C32905 * C128) *
               C1741 +
           (C754 * C131 + C748 * C140 + C755 * C132 + C749 * C141 +
            C756 * C133 + C32905 * C142) *
               C32952 +
           (C754 * C322 + C748 * C337 + C755 * C321 + C749 * C336 +
            C756 * C320 + C32905 * C335) *
               C1742 +
           (C754 * C332 + C748 * C352 + C755 * C331 + C749 * C351 +
            C756 * C330 + C32905 * C350) *
               C32941 +
           (C754 * C323 + C748 * C338 + C755 * C324 + C749 * C339 +
            C756 * C325 + C32905 * C340) *
               C1743 +
           (C754 * C343 + C748 * C353 + C755 * C344 + C749 * C354 +
            C756 * C345 + C32905 * C355) *
               C32919) *
              C32633 * C32603 * C209 -
          ((C756 * C1082 + C32905 * C1094 + C755 * C1081 + C749 * C1093 +
            C754 * C1080 + C748 * C1092) *
               C32919 +
           (C756 * C1067 + C32905 * C1079 + C755 * C1066 + C749 * C1078 +
            C754 * C1065 + C748 * C1077) *
               C1743 +
           (C1623 + C1624 + C1625) * C32941 + (C1626 + C1627 + C1628) * C1742 +
           (C933 + C932 + C931) * C32952 + (C930 + C929 + C928) * C1741) *
              C32633 * C32603 * C210 +
          (C948 * C1741 + C949 * C32952 + (C1622 + C1621 + C1620) * C1742 +
           (C1619 + C1618 + C1617) * C32941 +
           (C754 * C1068 + C748 * C1083 + C755 * C1069 + C749 * C1084 +
            C756 * C1070 + C32905 * C1085) *
               C1743 +
           (C754 * C1086 + C748 * C1095 + C755 * C1087 + C749 * C1096 +
            C756 * C1088 + C32905 * C1097) *
               C32919) *
              C32633 * C32603 * C211) *
         C32577) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C5270 * C119 + C32948 * C126 + C5271 * C120 + C32935 * C127 +
             C5272 * C121 + C32905 * C128) *
                C118 +
            (C5270 * C131 + C32948 * C140 + C5271 * C132 + C32935 * C141 +
             C5272 * C133 + C32905 * C142) *
                C32644) *
               C5267 +
           ((C5270 * C217 + C32948 * C232 + C5271 * C216 + C32935 * C231 +
             C5272 * C215 + C32905 * C230) *
                C118 +
            (C5270 * C227 + C32948 * C247 + C5271 * C226 + C32935 * C246 +
             C5272 * C225 + C32905 * C245) *
                C32644) *
               C5268 +
           ((C5270 * C218 + C32948 * C233 + C5271 * C219 + C32935 * C234 +
             C5272 * C220 + C32905 * C235) *
                C118 +
            (C5270 * C238 + C32948 * C248 + C5271 * C239 + C32935 * C249 +
             C5272 * C240 + C32905 * C250) *
                C32644) *
               C32916) *
              C32603 * C32589 * C110 -
          (((C5272 * C241 + C32905 * C251 + C5271 * C240 + C32935 * C250 +
             C5270 * C239 + C32948 * C249) *
                C32644 +
            (C5272 * C221 + C32905 * C236 + C5271 * C220 + C32935 * C235 +
             C5270 * C219 + C32948 * C234) *
                C118) *
               C32916 +
           ((C5272 * C224 + C32905 * C244 + C5271 * C225 + C32935 * C245 +
             C5270 * C226 + C32948 * C246) *
                C32644 +
            (C5272 * C214 + C32905 * C229 + C5271 * C215 + C32935 * C230 +
             C5270 * C216 + C32948 * C231) *
                C118) *
               C5268 +
           ((C5272 * C134 + C32905 * C143 + C5271 * C133 + C32935 * C142 +
             C5270 * C132 + C32948 * C141) *
                C32644 +
            (C5272 * C122 + C32905 * C129 + C5271 * C121 + C32935 * C128 +
             C5270 * C120 + C32948 * C127) *
                C118) *
               C5267) *
              C32603 * C32589 * C111 +
          (((C5270 * C121 + C32948 * C128 + C5271 * C122 + C32935 * C129 +
             C5272 * C123 + C32905 * C130) *
                C118 +
            (C5270 * C133 + C32948 * C142 + C5271 * C134 + C32935 * C143 +
             C5272 * C135 + C32905 * C144) *
                C32644) *
               C5267 +
           ((C5270 * C215 + C32948 * C230 + C5271 * C214 + C32935 * C229 +
             C5272 * C213 + C32905 * C228) *
                C118 +
            (C5270 * C225 + C32948 * C245 + C5271 * C224 + C32935 * C244 +
             C5272 * C223 + C32905 * C243) *
                C32644) *
               C5268 +
           ((C5270 * C220 + C32948 * C235 + C5271 * C221 + C32935 * C236 +
             C5272 * C222 + C32905 * C237) *
                C118 +
            (C5270 * C240 + C32948 * C250 + C5271 * C241 + C32935 * C251 +
             C5272 * C242 + C32905 * C252) *
                C32644) *
               C32916) *
              C32603 * C32589 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C5270 * C119 + C32948 * C126 + C5271 * C120 + C32935 * C127 +
             C5272 * C121 + C32905 * C128) *
                C118 +
            (C5270 * C131 + C32948 * C140 + C5271 * C132 + C32935 * C141 +
             C5272 * C133 + C32905 * C142) *
                C32644) *
               C5267 +
           ((C5420 + C5421 + C5422) * C118 + (C5423 + C5424 + C5425) * C32644) *
               C5268 +
           C5444 * C32916) *
              C32603 * C209 -
          (((C5432 + C5433 + C5434) * C32644 + (C5435 + C5436 + C5437) * C118) *
               C32916 +
           ((C5431 + C5430 + C5429) * C32644 + (C5428 + C5427 + C5426) * C118) *
               C5268 +
           ((C5425 + C5424 + C5423) * C32644 + (C5422 + C5421 + C5420) * C118) *
               C5267) *
              C32603 * C210 +
          (C5444 * C5267 +
           ((C5437 + C5436 + C5435) * C118 + (C5434 + C5433 + C5432) * C32644) *
               C5268 +
           ((C5270 * C870 + C32948 * C879 + C5271 * C871 + C32935 * C880 +
             C5272 * C872 + C32905 * C881) *
                C118 +
            (C5270 * C882 + C32948 * C888 + C5271 * C883 + C32935 * C889 +
             C5272 * C884 + C32905 * C890) *
                C32644) *
               C32916) *
              C32603 * C211) *
         C32577) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C6132 * C119 + C32540 * C126) * C118 +
            (C6132 * C131 + C32540 * C140) * C32644) *
               C6127 +
           ((C6132 * C217 + C32540 * C232) * C118 +
            (C6132 * C227 + C32540 * C247) * C32644) *
               C6128 +
           ((C6132 * C218 + C32540 * C233) * C118 +
            (C6132 * C238 + C32540 * C248) * C32644) *
               C6129 +
           ((C6132 * C869 + C32540 * C878) * C118 +
            (C6132 * C875 + C32540 * C887) * C32644) *
               C6130 +
           ((C6132 * C870 + C32540 * C879) * C118 +
            (C6132 * C882 + C32540 * C888) * C32644) *
               C6131) *
              C32603 * C32589 * C110 -
          (((C6132 * C883 + C32540 * C889) * C32644 +
            (C6132 * C871 + C32540 * C880) * C118) *
               C6131 +
           ((C6132 * C874 + C32540 * C886) * C32644 +
            (C6132 * C868 + C32540 * C877) * C118) *
               C6130 +
           ((C6132 * C239 + C32540 * C249) * C32644 +
            (C6132 * C219 + C32540 * C234) * C118) *
               C6129 +
           ((C6132 * C226 + C32540 * C246) * C32644 +
            (C6132 * C216 + C32540 * C231) * C118) *
               C6128 +
           ((C6132 * C132 + C32540 * C141) * C32644 +
            (C6132 * C120 + C32540 * C127) * C118) *
               C6127) *
              C32603 * C32589 * C111 +
          (((C6132 * C121 + C32540 * C128) * C118 +
            (C6132 * C133 + C32540 * C142) * C32644) *
               C6127 +
           ((C6132 * C215 + C32540 * C230) * C118 +
            (C6132 * C225 + C32540 * C245) * C32644) *
               C6128 +
           ((C6132 * C220 + C32540 * C235) * C118 +
            (C6132 * C240 + C32540 * C250) * C32644) *
               C6129 +
           ((C6132 * C867 + C32540 * C876) * C118 +
            (C6132 * C873 + C32540 * C885) * C32644) *
               C6130 +
           ((C6132 * C872 + C32540 * C881) * C118 +
            (C6132 * C884 + C32540 * C890) * C32644) *
               C6131) *
              C32603 * C32589 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C6132 * C119 + C32540 * C126) * C118 +
            (C6132 * C131 + C32540 * C140) * C32644) *
               C6127 +
           (C6234 + C6235) * C6128 + C6244 * C6129 + C6245 * C6130 +
           C6246 * C6131) *
              C32603 * C209 -
          ((C6242 + C6243) * C6131 + (C6241 + C6240) * C6130 +
           (C6239 + C6238) * C6129 + (C6237 + C6236) * C6128 +
           (C6235 + C6234) * C6127) *
              C32603 * C210 +
          (C6244 * C6127 + C6245 * C6128 + C6246 * C6129 +
           (C6243 + C6242) * C6130 +
           ((C6132 * C6196 + C32540 * C6199) * C118 +
            (C6132 * C6200 + C32540 * C6202) * C32644) *
               C6131) *
              C32603 * C211) *
         C32577) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C6132 * C119 + C32540 * C126) * C1741 +
            (C6132 * C131 + C32540 * C140) * C32952 +
            (C6132 * C322 + C32540 * C337) * C1742 +
            (C6132 * C332 + C32540 * C352) * C32941 +
            (C6132 * C323 + C32540 * C338) * C1743 +
            (C6132 * C343 + C32540 * C353) * C32919) *
               C5267 +
           (C6224 * C1741 + C6225 * C32952 + C6634 * C1742 + C6633 * C32941 +
            (C6132 * C1065 + C32540 * C1077) * C1743 +
            (C6132 * C1080 + C32540 * C1092) * C32919) *
               C5268 +
           (C6226 * C1741 + C6227 * C32952 + C6632 * C1742 + C6631 * C32941 +
            (C6132 * C1068 + C32540 * C1083) * C1743 +
            (C6132 * C1086 + C32540 * C1095) * C32919) *
               C32916) *
              C32603 * C32589 * C110 -
          (((C6132 * C1087 + C32540 * C1096) * C32919 +
            (C6132 * C1069 + C32540 * C1084) * C1743 +
            (C6132 * C1072 + C32540 * C1090) * C32941 +
            (C6132 * C1063 + C32540 * C1075) * C1742 + C6426 * C32952 +
            C6425 * C1741) *
               C32916 +
           ((C6132 * C1081 + C32540 * C1093) * C32919 +
            (C6132 * C1066 + C32540 * C1078) * C1743 +
            (C6132 * C629 + C32540 * C634) * C32941 +
            (C6132 * C619 + C32540 * C624) * C1742 + C6424 * C32952 +
            C6423 * C1741) *
               C5268 +
           ((C6132 * C344 + C32540 * C354) * C32919 +
            (C6132 * C324 + C32540 * C339) * C1743 +
            (C6132 * C331 + C32540 * C351) * C32941 +
            (C6132 * C321 + C32540 * C336) * C1742 +
            (C6132 * C132 + C32540 * C141) * C32952 +
            (C6132 * C120 + C32540 * C127) * C1741) *
               C5267) *
              C32603 * C32589 * C111 +
          (((C6132 * C121 + C32540 * C128) * C1741 +
            (C6132 * C133 + C32540 * C142) * C32952 +
            (C6132 * C320 + C32540 * C335) * C1742 +
            (C6132 * C330 + C32540 * C350) * C32941 +
            (C6132 * C325 + C32540 * C340) * C1743 +
            (C6132 * C345 + C32540 * C355) * C32919) *
               C5267 +
           ((C6132 * C215 + C32540 * C230) * C1741 +
            (C6132 * C225 + C32540 * C245) * C32952 +
            (C6132 * C620 + C32540 * C625) * C1742 +
            (C6132 * C630 + C32540 * C635) * C32941 +
            (C6132 * C1067 + C32540 * C1079) * C1743 +
            (C6132 * C1082 + C32540 * C1094) * C32919) *
               C5268 +
           ((C6132 * C220 + C32540 * C235) * C1741 +
            (C6132 * C240 + C32540 * C250) * C32952 +
            (C6132 * C1062 + C32540 * C1074) * C1742 +
            (C6132 * C1071 + C32540 * C1089) * C32941 +
            (C6132 * C1070 + C32540 * C1085) * C1743 +
            (C6132 * C1088 + C32540 * C1097) * C32919) *
               C32916) *
              C32603 * C32589 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C6132 * C119 + C32540 * C126) * C1741 +
            (C6132 * C131 + C32540 * C140) * C32952 +
            (C6132 * C322 + C32540 * C337) * C1742 +
            (C6132 * C332 + C32540 * C352) * C32941 +
            (C6132 * C323 + C32540 * C338) * C1743 +
            (C6132 * C343 + C32540 * C353) * C32919) *
               C5267 +
           (C6863 + C6864 + C6865 + C6866 + C6894 + C6895) * C5268 +
           C6903 * C32916) *
              C32603 * C209 -
          ((C6899 + C6900 + C6883 + C6884 + C6885 + C6886) * C32916 +
           (C6898 + C6897 + C6874 + C6873 + C6872 + C6871) * C5268 +
           (C6895 + C6894 + C6866 + C6865 + C6864 + C6863) * C5267) *
              C32603 * C210 +
          (C6903 * C5267 +
           (C6886 + C6885 + C6884 + C6883 + C6900 + C6899) * C5268 +
           (C6230 * C1741 + C6231 * C32952 + C6628 * C1742 + C6627 * C32941 +
            (C6132 * C6310 + C32540 * C6315) * C1743 +
            (C6132 * C6316 + C32540 * C6319) * C32919) *
               C32916) *
              C32603 * C211) *
         C32577) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C5270 * C119 + C32948 * C126 + C5271 * C120 + C32935 * C127 +
            C5272 * C121 + C32905 * C128) *
               C10355 +
           (C5270 * C131 + C32948 * C140 + C5271 * C132 + C32935 * C141 +
            C5272 * C133 + C32905 * C142) *
               C10352 +
           (C5270 * C322 + C32948 * C337 + C5271 * C321 + C32935 * C336 +
            C5272 * C320 + C32905 * C335) *
               C10356 +
           (C5270 * C332 + C32948 * C352 + C5271 * C331 + C32935 * C351 +
            C5272 * C330 + C32905 * C350) *
               C10353 +
           (C5270 * C323 + C32948 * C338 + C5271 * C324 + C32935 * C339 +
            C5272 * C325 + C32905 * C340) *
               C10357 +
           (C5270 * C343 + C32948 * C353 + C5271 * C344 + C32935 * C354 +
            C5272 * C345 + C32905 * C355) *
               C32919) *
              C32633 * C32603 * C32589 * C110 -
          ((C5272 * C346 + C32905 * C356 + C5271 * C345 + C32935 * C355 +
            C5270 * C344 + C32948 * C354) *
               C32919 +
           (C5272 * C326 + C32905 * C341 + C5271 * C325 + C32935 * C340 +
            C5270 * C324 + C32948 * C339) *
               C10357 +
           (C5272 * C329 + C32905 * C349 + C5271 * C330 + C32935 * C350 +
            C5270 * C331 + C32948 * C351) *
               C10353 +
           (C5272 * C319 + C32905 * C334 + C5271 * C320 + C32935 * C335 +
            C5270 * C321 + C32948 * C336) *
               C10356 +
           (C5272 * C134 + C32905 * C143 + C5271 * C133 + C32935 * C142 +
            C5270 * C132 + C32948 * C141) *
               C10352 +
           (C5272 * C122 + C32905 * C129 + C5271 * C121 + C32935 * C128 +
            C5270 * C120 + C32948 * C127) *
               C10355) *
              C32633 * C32603 * C32589 * C111 +
          ((C5270 * C121 + C32948 * C128 + C5271 * C122 + C32935 * C129 +
            C5272 * C123 + C32905 * C130) *
               C10355 +
           (C5270 * C133 + C32948 * C142 + C5271 * C134 + C32935 * C143 +
            C5272 * C135 + C32905 * C144) *
               C10352 +
           (C5270 * C320 + C32948 * C335 + C5271 * C319 + C32935 * C334 +
            C5272 * C318 + C32905 * C333) *
               C10356 +
           (C5270 * C330 + C32948 * C350 + C5271 * C329 + C32935 * C349 +
            C5272 * C328 + C32905 * C348) *
               C10353 +
           (C5270 * C325 + C32948 * C340 + C5271 * C326 + C32935 * C341 +
            C5272 * C327 + C32905 * C342) *
               C10357 +
           (C5270 * C345 + C32948 * C355 + C5271 * C346 + C32935 * C356 +
            C5272 * C347 + C32905 * C357) *
               C32919) *
              C32633 * C32603 * C32589 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C5270 * C119 + C32948 * C126 + C5271 * C120 + C32935 * C127 +
            C5272 * C121 + C32905 * C128) *
               C10355 +
           (C5270 * C131 + C32948 * C140 + C5271 * C132 + C32935 * C141 +
            C5272 * C133 + C32905 * C142) *
               C10352 +
           (C5270 * C322 + C32948 * C337 + C5271 * C321 + C32935 * C336 +
            C5272 * C320 + C32905 * C335) *
               C10356 +
           (C5270 * C332 + C32948 * C352 + C5271 * C331 + C32935 * C351 +
            C5272 * C330 + C32905 * C350) *
               C10353 +
           (C5270 * C323 + C32948 * C338 + C5271 * C324 + C32935 * C339 +
            C5272 * C325 + C32905 * C340) *
               C10357 +
           (C5270 * C343 + C32948 * C353 + C5271 * C344 + C32935 * C354 +
            C5272 * C345 + C32905 * C355) *
               C32919) *
              C32633 * C32603 * C209 -
          ((C5272 * C1082 + C32905 * C1094 + C5271 * C1081 + C32935 * C1093 +
            C5270 * C1080 + C32948 * C1092) *
               C32919 +
           (C5272 * C1067 + C32905 * C1079 + C5271 * C1066 + C32935 * C1078 +
            C5270 * C1065 + C32948 * C1077) *
               C10357 +
           (C6059 + C6060 + C6061) * C10353 + (C6062 + C6063 + C6064) * C10356 +
           (C5425 + C5424 + C5423) * C10352 +
           (C5422 + C5421 + C5420) * C10355) *
              C32633 * C32603 * C210 +
          (C5440 * C10355 + C5441 * C10352 + (C6058 + C6057 + C6056) * C10356 +
           (C6055 + C6054 + C6053) * C10353 +
           (C5270 * C1068 + C32948 * C1083 + C5271 * C1069 + C32935 * C1084 +
            C5272 * C1070 + C32905 * C1085) *
               C10357 +
           (C5270 * C1086 + C32948 * C1095 + C5271 * C1087 + C32935 * C1096 +
            C5272 * C1088 + C32905 * C1097) *
               C32919) *
              C32633 * C32603 * C211) *
         C32577) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C6132 * C119 + C32540 * C126) * C10355 +
            (C6132 * C131 + C32540 * C140) * C10352 + C7046 * C10356 +
            C7047 * C10353 + C7048 * C10357 + C7049 * C32919) *
               C32951 +
           (C6224 * C10355 + C6225 * C10352 + C6634 * C10356 + C6633 * C10353 +
            C6887 * C10357 + C6888 * C32919) *
               C32939 +
           (C6226 * C10355 + C6227 * C10352 + C6632 * C10356 + C6631 * C10353 +
            C6890 * C10357 + C6891 * C32919) *
               C32916) *
              C32603 * C32589 * C110 -
          ((C7233 * C32919 + C7232 * C10357 + C7231 * C10353 + C7230 * C10356 +
            C6426 * C10352 + C6425 * C10355) *
               C32916 +
           (C7229 * C32919 + C7228 * C10357 + C7227 * C10353 + C7226 * C10356 +
            C6424 * C10352 + C6423 * C10355) *
               C32939 +
           (C7403 * C32919 + C7402 * C10357 + C7401 * C10353 + C7400 * C10356 +
            (C6132 * C132 + C32540 * C141) * C10352 +
            (C6132 * C120 + C32540 * C127) * C10355) *
               C32951) *
              C32603 * C32589 * C111 +
          (((C6132 * C121 + C32540 * C128) * C10355 +
            (C6132 * C133 + C32540 * C142) * C10352 +
            (C6132 * C320 + C32540 * C335) * C10356 +
            (C6132 * C330 + C32540 * C350) * C10353 +
            (C6132 * C325 + C32540 * C340) * C10357 +
            (C6132 * C345 + C32540 * C355) * C32919) *
               C32951 +
           ((C6132 * C215 + C32540 * C230) * C10355 +
            (C6132 * C225 + C32540 * C245) * C10352 +
            (C6132 * C620 + C32540 * C625) * C10356 +
            (C6132 * C630 + C32540 * C635) * C10353 +
            (C6132 * C1067 + C32540 * C1079) * C10357 +
            (C6132 * C1082 + C32540 * C1094) * C32919) *
               C32939 +
           ((C6132 * C220 + C32540 * C235) * C10355 +
            (C6132 * C240 + C32540 * C250) * C10352 +
            (C6132 * C1062 + C32540 * C1074) * C10356 +
            (C6132 * C1071 + C32540 * C1089) * C10353 +
            (C6132 * C1070 + C32540 * C1085) * C10357 +
            (C6132 * C1088 + C32540 * C1097) * C32919) *
               C32916) *
              C32603 * C32589 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C6132 * C119 + C32540 * C126) * C10355 +
            (C6132 * C131 + C32540 * C140) * C10352 + C7046 * C10356 +
            C7047 * C10353 + C7048 * C10357 + C7049 * C32919) *
               C32951 +
           (C11349 + C11350 + C11351 + C11352 + C11353 + C11354) * C32939 +
           C11371 * C32916) *
              C32603 * C209 -
          ((C11361 + C11362 + C11363 + C11364 + C11365 + C11366) * C32916 +
           (C11360 + C11359 + C11358 + C11357 + C11356 + C11355) * C32939 +
           (C11354 + C11353 + C11352 + C11351 + C11350 + C11349) * C32951) *
              C32603 * C210 +
          (C11371 * C32951 +
           (C11366 + C11365 + C11364 + C11363 + C11362 + C11361) * C32939 +
           (C6230 * C10355 + C6231 * C10352 + C6628 * C10356 + C6627 * C10353 +
            (C6132 * C6310 + C32540 * C6315) * C10357 +
            (C6132 * C6316 + C32540 * C6319) * C32919) *
               C32916) *
              C32603 * C211) *
         C32577) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C6132 * C119 + C32540 * C126) * C12010 +
           (C6132 * C131 + C32540 * C140) * C12005 + C7046 * C12011 +
           C7047 * C12006 + C7048 * C12012 + C7049 * C12007 + C7055 * C12013 +
           C7054 * C12008 + (C6132 * C1967 + C32540 * C1976) * C12014 +
           (C6132 * C1979 + C32540 * C1985) * C12009) *
              C32633 * C32603 * C32589 * C110 -
          ((C6132 * C1980 + C32540 * C1986) * C12009 +
           (C6132 * C1968 + C32540 * C1977) * C12014 +
           (C6132 * C1971 + C32540 * C1983) * C12008 +
           (C6132 * C1965 + C32540 * C1974) * C12013 + C7403 * C12007 +
           C7402 * C12012 + C7401 * C12006 + C7400 * C12011 +
           (C6132 * C132 + C32540 * C141) * C12005 +
           (C6132 * C120 + C32540 * C127) * C12010) *
              C32633 * C32603 * C32589 * C111 +
          ((C6132 * C121 + C32540 * C128) * C12010 +
           (C6132 * C133 + C32540 * C142) * C12005 +
           (C6132 * C320 + C32540 * C335) * C12011 +
           (C6132 * C330 + C32540 * C350) * C12006 +
           (C6132 * C325 + C32540 * C340) * C12012 +
           (C6132 * C345 + C32540 * C355) * C12007 +
           (C6132 * C1964 + C32540 * C1973) * C12013 +
           (C6132 * C1970 + C32540 * C1982) * C12008 +
           (C6132 * C1969 + C32540 * C1978) * C12014 +
           (C6132 * C1981 + C32540 * C1987) * C12009) *
              C32633 * C32603 * C32589 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C6132 * C119 + C32540 * C126) * C12010 +
           (C6132 * C131 + C32540 * C140) * C12005 + C7046 * C12011 +
           C7047 * C12006 + C7048 * C12012 + C7049 * C12007 + C7055 * C12013 +
           C7054 * C12008 + (C6132 * C1967 + C32540 * C1976) * C12014 +
           (C6132 * C1979 + C32540 * C1985) * C12009) *
              C32633 * C32603 * C209 -
          ((C6132 * C7019 + C32540 * C7023) * C12009 +
           (C6132 * C7014 + C32540 * C7018) * C12014 + C7052 * C12008 +
           C7053 * C12013 + C6888 * C12007 + C6887 * C12012 + C6633 * C12006 +
           C6634 * C12011 + C6225 * C12005 + C6224 * C12010) *
              C32633 * C32603 * C210 +
          (C6226 * C12010 + C6227 * C12005 + C6632 * C12011 + C6631 * C12006 +
           C6890 * C12012 + C6891 * C12007 + C7051 * C12013 + C7050 * C12008 +
           (C6132 * C7015 + C32540 * C7020) * C12014 +
           (C6132 * C7021 + C32540 * C7024) * C12009) *
              C32633 * C32603 * C211) *
         C32577) /
            (p * q * std::sqrt(p + q));
    d2ee[65] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31557 * C119 + C32866 * C126 + C31538 * C120 + C32550 * C127) *
                 C3448 +
             (C31557 * C131 + C32866 * C140 + C31538 * C132 + C32550 * C141) *
                 C32886 +
             (C8867 + C8868) * C3449 + (C8869 + C8870) * C32731) *
                C5267 +
            ((C7802 + C7803) * C3448 + (C7804 + C7805) * C32886 +
             (C8387 + C8386) * C3449 + (C8385 + C8384) * C32731) *
                C5268 +
            C8688 * C32916) *
               C32603 * C440 -
           (((C8376 + C8377) * C32731 + (C8378 + C8379) * C3449 +
             (C7813 + C7812) * C32886 + (C7811 + C7810) * C3448) *
                C32916 +
            ((C8380 + C8381) * C32731 + (C8382 + C8383) * C3449 +
             (C7809 + C7808) * C32886 + (C7807 + C7806) * C3448) *
                C5268 +
            ((C8384 + C8385) * C32731 + (C8386 + C8387) * C3449 +
             (C7805 + C7804) * C32886 + (C7803 + C7802) * C3448) *
                C5267) *
               C32603 * C441) *
              C442 +
          ((((C8080 + C8081) * C3448 + (C8082 + C8083) * C32886 +
             (C9093 + C9094) * C3449 + (C9095 + C9096) * C32731) *
                C5267 +
            ((C8084 + C8085) * C3448 + (C8086 + C8087) * C32886 +
             (C9097 + C9098) * C3449 + (C9099 + C9100) * C32731) *
                C5268 +
            ((C8088 + C8089) * C3448 + (C8090 + C8091) * C32886 +
             (C31557 * C1581 + C32866 * C1584 + C31538 * C1582 +
              C32550 * C1585) *
                 C3449 +
             (C31557 * C1587 + C32866 * C1590 + C31538 * C1588 +
              C32550 * C1591) *
                 C32731) *
                C32916) *
               C32603 * C441 -
           (((C9100 + C9099) * C32731 + (C9098 + C9097) * C3449 +
             (C8087 + C8086) * C32886 + (C8085 + C8084) * C3448) *
                C32916 +
            ((C9096 + C9095) * C32731 + (C9094 + C9093) * C3449 +
             (C8083 + C8082) * C32886 + (C8081 + C8080) * C3448) *
                C5268 +
            ((C31538 * C330 + C32550 * C350 + C31557 * C331 + C32866 * C351) *
                 C32731 +
             (C31538 * C320 + C32550 * C335 + C31557 * C321 + C32866 * C336) *
                 C3449 +
             (C31538 * C133 + C32550 * C142 + C31557 * C132 + C32866 * C141) *
                 C32886 +
             (C31538 * C121 + C32550 * C128 + C31557 * C120 + C32866 * C127) *
                 C3448) *
                C5267) *
               C32603 * C440) *
              C443)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C2662 * C119 + C2656 * C126 + C2663 * C120 + C2657 * C127 +
             C2664 * C121 + C2658 * C128 + C2665 * C122 + C32920 * C129) *
                C3448 +
            (C2662 * C131 + C2656 * C140 + C2663 * C132 + C2657 * C141 +
             C2664 * C133 + C2658 * C142 + C2665 * C134 + C32920 * C143) *
                C32886 +
            (C3679 + C3680 + C3681 + C3682) * C3449 +
            (C3683 + C3684 + C3685 + C3686) * C32731) *
               C32633 * C32603 * C440 -
           ((C3341 + C3342 + C3343 + C3344) * C32731 +
            (C3345 + C3346 + C3347 + C3348) * C3449 +
            (C2804 + C2803 + C2802 + C2801) * C32886 +
            (C2800 + C2799 + C2798 + C2797) * C3448) *
               C32633 * C32603 * C441) *
              C442 +
          (((C3057 + C3058 + C3059 + C3060) * C3448 +
            (C3061 + C3062 + C3063 + C3064) * C32886 +
            (C2662 * C619 + C2656 * C624 + C2663 * C620 + C2657 * C625 +
             C2664 * C621 + C2658 * C626 + C2665 * C622 + C32920 * C627) *
                C3449 +
            (C2662 * C629 + C2656 * C634 + C2663 * C630 + C2657 * C635 +
             C2664 * C631 + C2658 * C636 + C2665 * C632 + C32920 * C637) *
                C32731) *
               C32633 * C32603 * C441 -
           ((C2665 * C328 + C32920 * C348 + C2664 * C329 + C2658 * C349 +
             C2663 * C330 + C2657 * C350 + C2662 * C331 + C2656 * C351) *
                C32731 +
            (C2665 * C318 + C32920 * C333 + C2664 * C319 + C2658 * C334 +
             C2663 * C320 + C2657 * C335 + C2662 * C321 + C2656 * C336) *
                C3449 +
            (C2665 * C135 + C32920 * C144 + C2664 * C134 + C2658 * C143 +
             C2663 * C133 + C2657 * C142 + C2662 * C132 + C2656 * C141) *
                C32886 +
            (C2665 * C123 + C32920 * C130 + C2664 * C122 + C2658 * C129 +
             C2663 * C121 + C2657 * C128 + C2662 * C120 + C2656 * C127) *
                C3448) *
               C32633 * C32603 * C440) *
              C443)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C31557 * C119 + C32866 * C126 + C31538 * C120 + C32550 * C127) *
                C13611 +
            (C31557 * C131 + C32866 * C140 + C31538 * C132 + C32550 * C141) *
                C13607 +
            (C8867 + C8868) * C13612 + (C8869 + C8870) * C13608 +
            C12874 * C13613 + C12875 * C13609 + C13812 * C13614 +
            C13813 * C32932) *
               C32633 * C32603 * C440 -
           ((C12894 + C12895) * C32932 + (C12896 + C12897) * C13614 +
            C13508 * C13609 + C13509 * C13613 + C9505 * C13608 +
            C9506 * C13612 + (C7805 + C7804) * C13607 +
            (C7803 + C7802) * C13611) *
               C32633 * C32603 * C441) *
              C442 +
          (((C8080 + C8081) * C13611 + (C8082 + C8083) * C13607 +
            (C9093 + C9094) * C13612 + (C9095 + C9096) * C13608 +
            (C13104 + C13105) * C13613 + (C13106 + C13107) * C13609 +
            (C31557 * C2529 + C32866 * C2532 + C31538 * C2530 +
             C32550 * C2533) *
                C13614 +
            (C31557 * C2535 + C32866 * C2538 + C31538 * C2536 +
             C32550 * C2539) *
                C32932) *
               C32633 * C32603 * C441 -
           ((C31538 * C1970 + C32550 * C1982 + C31557 * C1971 +
             C32866 * C1983) *
                C32932 +
            (C31538 * C1964 + C32550 * C1973 + C31557 * C1965 +
             C32866 * C1974) *
                C13614 +
            (C13313 + C13312) * C13609 + (C13311 + C13310) * C13613 +
            (C9306 + C9305) * C13608 + (C9304 + C9303) * C13612 +
            (C31538 * C133 + C32550 * C142 + C31557 * C132 + C32866 * C141) *
                C13607 +
            (C31538 * C121 + C32550 * C128 + C31557 * C120 + C32866 * C127) *
                C13611) *
               C32633 * C32603 * C440) *
              C443)) /
            (p * q * std::sqrt(p + q));
    d2ee[66] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31557 * C119 + C32866 * C126 + C31538 * C120 + C32550 * C127) *
                 C3448 +
             (C31557 * C131 + C32866 * C140 + C31538 * C132 + C32550 * C141) *
                 C32886 +
             (C8867 + C8868) * C3449 + (C8869 + C8870) * C32731) *
                C5267 +
            ((C7802 + C7803) * C3448 + (C7804 + C7805) * C32886 +
             C9501 * C3449 + C9502 * C32731) *
                C5268 +
            C8688 * C32916) *
               C530 -
           (((C8871 + C8872) * C32731 + (C8873 + C8874) * C3449 +
             C9503 * C32886 + C9504 * C3448) *
                C32916 +
            ((C8875 + C8876) * C32731 + (C8877 + C8878) * C3449 +
             C9505 * C32886 + C9506 * C3448) *
                C5268 +
            ((C8879 + C8880) * C32731 + (C8881 + C8882) * C3449 +
             (C8870 + C8869) * C32886 + (C8868 + C8867) * C3448) *
                C5267) *
               C531) *
              C440 +
          (((C9501 * C3448 + C9502 * C32886 + (C8878 + C8877) * C3449 +
             (C8876 + C8875) * C32731) *
                C5267 +
            (C8682 * C3448 + C8683 * C32886 + (C8874 + C8873) * C3449 +
             (C8872 + C8871) * C32731) *
                C5268 +
            ((C8379 + C8378) * C3448 + (C8377 + C8376) * C32886 +
             (C31557 * C6309 + C32866 * C6313 + C31538 * C7201 +
              C32550 * C7202) *
                 C3449 +
             (C31557 * C6314 + C32866 * C6318 + C31538 * C7203 +
              C32550 * C7204) *
                 C32731) *
                C32916) *
               C531 -
           (((C8376 + C8377) * C32731 + (C8378 + C8379) * C3449 +
             (C7813 + C7812) * C32886 + (C7811 + C7810) * C3448) *
                C32916 +
            (C9503 * C32731 + C9504 * C3449 + (C7809 + C7808) * C32886 +
             (C7807 + C7806) * C3448) *
                C5268 +
            (C9505 * C32731 + C9506 * C3449 + (C7805 + C7804) * C32886 +
             (C7803 + C7802) * C3448) *
                C5267) *
               C530) *
              C441) *
         C32577) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C2662 * C119 + C2656 * C126 + C2663 * C120 + C2657 * C127 +
             C2664 * C121 + C2658 * C128 + C2665 * C122 + C32920 * C129) *
                C3448 +
            (C2662 * C131 + C2656 * C140 + C2663 * C132 + C2657 * C141 +
             C2664 * C133 + C2658 * C142 + C2665 * C134 + C32920 * C143) *
                C32886 +
            (C3679 + C3680 + C3681 + C3682) * C3449 +
            (C3683 + C3684 + C3685 + C3686) * C32731) *
               C32633 * C530 -
           ((C3687 + C3688 + C3689 + C3690) * C32731 +
            (C3691 + C3692 + C3693 + C3694) * C3449 +
            (C3686 + C3685 + C3684 + C3683) * C32886 +
            (C3682 + C3681 + C3680 + C3679) * C3448) *
               C32633 * C531) *
              C440 +
          (((C3348 + C3347 + C3346 + C3345) * C3448 +
            (C3344 + C3343 + C3342 + C3341) * C32886 +
            (C2662 * C1065 + C2656 * C1077 + C2663 * C1066 + C2657 * C1078 +
             C2664 * C1067 + C2658 * C1079 + C2665 * C2192 + C32920 * C2193) *
                C3449 +
            (C2662 * C1080 + C2656 * C1092 + C2663 * C1081 + C2657 * C1093 +
             C2664 * C1082 + C2658 * C1094 + C2665 * C2194 + C32920 * C2195) *
                C32731) *
               C32633 * C531 -
           ((C3341 + C3342 + C3343 + C3344) * C32731 +
            (C3345 + C3346 + C3347 + C3348) * C3449 +
            (C2804 + C2803 + C2802 + C2801) * C32886 +
            (C2800 + C2799 + C2798 + C2797) * C3448) *
               C32633 * C530) *
              C441) *
         C32577) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C31557 * C119 + C32866 * C126 + C31538 * C120 + C32550 * C127) *
                C13611 +
            (C31557 * C131 + C32866 * C140 + C31538 * C132 + C32550 * C141) *
                C13607 +
            (C8867 + C8868) * C13612 + (C8869 + C8870) * C13608 +
            C12874 * C13613 + C12875 * C13609 + C13812 * C13614 +
            C13813 * C32932) *
               C32633 * C530 -
           ((C13822 + C13823) * C32932 + (C13824 + C13825) * C13614 +
            (C12898 + C12899) * C13609 + (C12900 + C12901) * C13613 +
            (C8879 + C8880) * C13608 + (C8881 + C8882) * C13612 +
            (C8870 + C8869) * C13607 + (C8868 + C8867) * C13611) *
               C32633 * C531) *
              C440 +
          ((C9501 * C13611 + C9502 * C13607 + C12876 * C13612 +
            C12877 * C13608 + (C12897 + C12896) * C13613 +
            (C12895 + C12894) * C13609 +
            (C31557 * C7014 + C32866 * C7018 + C31538 * C12241 +
             C32550 * C12242) *
                C13614 +
            (C31557 * C7019 + C32866 * C7023 + C31538 * C12243 +
             C32550 * C12244) *
                C32932) *
               C32633 * C531 -
           ((C12894 + C12895) * C32932 + (C12896 + C12897) * C13614 +
            C13508 * C13609 + C13509 * C13613 + C9505 * C13608 +
            C9506 * C13612 + (C7805 + C7804) * C13607 +
            (C7803 + C7802) * C13611) *
               C32633 * C530) *
              C441) *
         C32577) /
            (p * q * std::sqrt(p + q));
    d2ee[67] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((C2662 * C119 + C2656 * C126 + C2663 * C120 + C2657 * C127 +
                C2664 * C121 + C2658 * C128 + C2665 * C122 + C32920 * C129) *
                   C3448 +
               (C2662 * C131 + C2656 * C140 + C2663 * C132 + C2657 * C141 +
                C2664 * C133 + C2658 * C142 + C2665 * C134 + C32920 * C143) *
                   C32886 +
               (C2662 * C322 + C2656 * C337 + C2663 * C321 + C2657 * C336 +
                C2664 * C320 + C2658 * C335 + C2665 * C319 + C32920 * C334) *
                   C3449 +
               (C2662 * C332 + C2656 * C352 + C2663 * C331 + C2657 * C351 +
                C2664 * C330 + C2658 * C350 + C2665 * C329 + C32920 * C349) *
                   C32731) *
                  C32633 * C32603 * C32589 * C110 -
              ((C2665 * C328 + C32920 * C348 + C2664 * C329 + C2658 * C349 +
                C2663 * C330 + C2657 * C350 + C2662 * C331 + C2656 * C351) *
                   C32731 +
               (C2665 * C318 + C32920 * C333 + C2664 * C319 + C2658 * C334 +
                C2663 * C320 + C2657 * C335 + C2662 * C321 + C2656 * C336) *
                   C3449 +
               (C2665 * C135 + C32920 * C144 + C2664 * C134 + C2658 * C143 +
                C2663 * C133 + C2657 * C142 + C2662 * C132 + C2656 * C141) *
                   C32886 +
               (C2665 * C123 + C32920 * C130 + C2664 * C122 + C2658 * C129 +
                C2663 * C121 + C2657 * C128 + C2662 * C120 + C2656 * C127) *
                   C3448) *
                  C32633 * C32603 * C32589 * C111 +
              ((C2662 * C121 + C2656 * C128 + C2663 * C122 + C2657 * C129 +
                C2664 * C123 + C2658 * C130 + C2665 * C124 + C32920 * C137) *
                   C3448 +
               (C2662 * C133 + C2656 * C142 + C2663 * C134 + C2657 * C143 +
                C2664 * C135 + C2658 * C144 + C2665 * C136 + C32920 * C145) *
                   C32886 +
               (C2662 * C320 + C2656 * C335 + C2663 * C319 + C2657 * C334 +
                C2664 * C318 + C2658 * C333 + C2665 * C532 + C32920 * C533) *
                   C3449 +
               (C2662 * C330 + C2656 * C350 + C2663 * C329 + C2657 * C349 +
                C2664 * C328 + C2658 * C348 + C2665 * C534 + C32920 * C535) *
                   C32731) *
                  C32633 * C32603 * C32589 * C112) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((C2662 * C119 + C2656 * C126 + C2663 * C120 + C2657 * C127 +
                C2664 * C121 + C2658 * C128 + C2665 * C122 + C32920 * C129) *
                   C3448 +
               (C2662 * C131 + C2656 * C140 + C2663 * C132 + C2657 * C141 +
                C2664 * C133 + C2658 * C142 + C2665 * C134 + C32920 * C143) *
                   C32886 +
               (C2662 * C322 + C2656 * C337 + C2663 * C321 + C2657 * C336 +
                C2664 * C320 + C2658 * C335 + C2665 * C319 + C32920 * C334) *
                   C3449 +
               (C2662 * C332 + C2656 * C352 + C2663 * C331 + C2657 * C351 +
                C2664 * C330 + C2658 * C350 + C2665 * C329 + C32920 * C349) *
                   C32731) *
                  C32633 * C32603 * C209 -
              ((C3341 + C3342 + C3343 + C3344) * C32731 +
               (C3345 + C3346 + C3347 + C3348) * C3449 +
               (C2804 + C2803 + C2802 + C2801) * C32886 +
               (C2800 + C2799 + C2798 + C2797) * C3448) *
                  C32633 * C32603 * C210 +
              ((C2812 + C2811 + C2810 + C2809) * C3448 +
               (C2808 + C2807 + C2806 + C2805) * C32886 +
               (C2662 * C1064 + C2656 * C1076 + C2663 * C1063 + C2657 * C1075 +
                C2664 * C1062 + C2658 * C1074 + C2665 * C1430 +
                C32920 * C1431) *
                   C3449 +
               (C2662 * C1073 + C2656 * C1091 + C2663 * C1072 + C2657 * C1090 +
                C2664 * C1071 + C2658 * C1089 + C2665 * C1432 +
                C32920 * C1433) *
                   C32731) *
                  C32633 * C32603 * C211) *
             C32577) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C2662 * C119 + C2656 * C126 + C2663 * C120 + C2657 * C127 +
            C2664 * C121 + C2658 * C128 + C2665 * C122 + C32920 * C129) *
               C3448 +
           (C2662 * C131 + C2656 * C140 + C2663 * C132 + C2657 * C141 +
            C2664 * C133 + C2658 * C142 + C2665 * C134 + C32920 * C143) *
               C32886 +
           (C3679 + C3680 + C3681 + C3682) * C3449 +
           (C3683 + C3684 + C3685 + C3686) * C32731) *
              C32633 * C315 -
          ((C3687 + C3688 + C3689 + C3690) * C32731 +
           (C3691 + C3692 + C3693 + C3694) * C3449 +
           (C3686 + C3685 + C3684 + C3683) * C32886 +
           (C3682 + C3681 + C3680 + C3679) * C3448) *
              C32633 * C316 +
          ((C3694 + C3693 + C3692 + C3691) * C3448 +
           (C3690 + C3689 + C3688 + C3687) * C32886 +
           (C2662 * C1966 + C2656 * C1975 + C2663 * C1965 + C2657 * C1974 +
            C2664 * C1964 + C2658 * C1973 + C2665 * C2342 + C32920 * C2343) *
               C3449 +
           (C2662 * C1972 + C2656 * C1984 + C2663 * C1971 + C2657 * C1983 +
            C2664 * C1970 + C2658 * C1982 + C2665 * C2344 + C32920 * C2345) *
               C32731) *
              C32633 * C317) *
         C32589 * C32577) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C31557 * C119 + C32866 * C126 + C31538 * C120 + C32550 * C127) *
                C3448 +
            (C31557 * C131 + C32866 * C140 + C31538 * C132 + C32550 * C141) *
                C32886 +
            (C31557 * C322 + C32866 * C337 + C31538 * C321 + C32550 * C336) *
                C3449 +
            (C31557 * C332 + C32866 * C352 + C31538 * C331 + C32550 * C351) *
                C32731) *
               C5267 +
           ((C7802 + C7803) * C3448 + (C7804 + C7805) * C32886 +
            (C8387 + C8386) * C3449 + (C8385 + C8384) * C32731) *
               C5268 +
           (C7818 * C3448 + C7819 * C32886 + (C8383 + C8382) * C3449 +
            (C8381 + C8380) * C32731) *
               C32916) *
              C32603 * C32589 * C110 -
          (((C31538 * C1071 + C32550 * C1089 + C31557 * C1072 +
             C32866 * C1090) *
                C32731 +
            (C31538 * C1062 + C32550 * C1074 + C31557 * C1063 +
             C32866 * C1075) *
                C3449 +
            (C8087 + C8086) * C32886 + (C8085 + C8084) * C3448) *
               C32916 +
           ((C31538 * C630 + C32550 * C635 + C31557 * C629 + C32866 * C634) *
                C32731 +
            (C31538 * C620 + C32550 * C625 + C31557 * C619 + C32866 * C624) *
                C3449 +
            (C8083 + C8082) * C32886 + (C8081 + C8080) * C3448) *
               C5268 +
           ((C31538 * C330 + C32550 * C350 + C31557 * C331 + C32866 * C351) *
                C32731 +
            (C31538 * C320 + C32550 * C335 + C31557 * C321 + C32866 * C336) *
                C3449 +
            (C31538 * C133 + C32550 * C142 + C31557 * C132 + C32866 * C141) *
                C32886 +
            (C31538 * C121 + C32550 * C128 + C31557 * C120 + C32866 * C127) *
                C3448) *
               C5267) *
              C32603 * C32589 * C111 +
          (((C31557 * C121 + C32866 * C128 + C31538 * C122 + C32550 * C129) *
                C3448 +
            (C31557 * C133 + C32866 * C142 + C31538 * C134 + C32550 * C143) *
                C32886 +
            (C31557 * C320 + C32866 * C335 + C31538 * C319 + C32550 * C334) *
                C3449 +
            (C31557 * C330 + C32866 * C350 + C31538 * C329 + C32550 * C349) *
                C32731) *
               C5267 +
           ((C31557 * C215 + C32866 * C230 + C31538 * C214 + C32550 * C229) *
                C3448 +
            (C31557 * C225 + C32866 * C245 + C31538 * C224 + C32550 * C244) *
                C32886 +
            (C31557 * C620 + C32866 * C625 + C31538 * C621 + C32550 * C626) *
                C3449 +
            (C31557 * C630 + C32866 * C635 + C31538 * C631 + C32550 * C636) *
                C32731) *
               C5268 +
           ((C31557 * C220 + C32866 * C235 + C31538 * C221 + C32550 * C236) *
                C3448 +
            (C31557 * C240 + C32866 * C250 + C31538 * C241 + C32550 * C251) *
                C32886 +
            (C31557 * C1062 + C32866 * C1074 + C31538 * C1430 +
             C32550 * C1431) *
                C3449 +
            (C31557 * C1071 + C32866 * C1089 + C31538 * C1432 +
             C32550 * C1433) *
                C32731) *
               C32916) *
              C32603 * C32589 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C31557 * C119 + C32866 * C126 + C31538 * C120 + C32550 * C127) *
                C3448 +
            (C31557 * C131 + C32866 * C140 + C31538 * C132 + C32550 * C141) *
                C32886 +
            (C31557 * C322 + C32866 * C337 + C31538 * C321 + C32550 * C336) *
                C3449 +
            (C31557 * C332 + C32866 * C352 + C31538 * C331 + C32550 * C351) *
                C32731) *
               C5267 +
           ((C7802 + C7803) * C3448 + (C7804 + C7805) * C32886 +
            (C8387 + C8386) * C3449 + (C8385 + C8384) * C32731) *
               C5268 +
           C8688 * C32916) *
              C32603 * C209 -
          (((C8376 + C8377) * C32731 + (C8378 + C8379) * C3449 +
            (C7813 + C7812) * C32886 + (C7811 + C7810) * C3448) *
               C32916 +
           ((C8380 + C8381) * C32731 + (C8382 + C8383) * C3449 +
            (C7809 + C7808) * C32886 + (C7807 + C7806) * C3448) *
               C5268 +
           ((C8384 + C8385) * C32731 + (C8386 + C8387) * C3449 +
            (C7805 + C7804) * C32886 + (C7803 + C7802) * C3448) *
               C5267) *
              C32603 * C210 +
          (C8688 * C5267 +
           (C7820 * C3448 + C7821 * C32886 + (C8379 + C8378) * C3449 +
            (C8377 + C8376) * C32731) *
               C5268 +
           ((C7817 + C7816) * C3448 + (C7815 + C7814) * C32886 +
            (C31557 * C6308 + C32866 * C6312 + C31538 * C6520 +
             C32550 * C6521) *
                C3449 +
            (C31557 * C6311 + C32866 * C6317 + C31538 * C6522 +
             C32550 * C6523) *
                C32731) *
               C32916) *
              C32603 * C211) *
         C32577) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C31557 * C119 + C32866 * C126 + C31538 * C120 + C32550 * C127) *
                C3448 +
            (C31557 * C131 + C32866 * C140 + C31538 * C132 + C32550 * C141) *
                C32886 +
            (C8867 + C8868) * C3449 + (C8869 + C8870) * C32731) *
               C5267 +
           ((C7802 + C7803) * C3448 + (C7804 + C7805) * C32886 +
            (C8387 + C8386) * C3449 + (C8385 + C8384) * C32731) *
               C5268 +
           C8688 * C32916) *
              C315 -
          (((C8871 + C8872) * C32731 + (C8873 + C8874) * C3449 +
            (C8380 + C8381) * C32886 + (C8382 + C8383) * C3448) *
               C32916 +
           ((C8875 + C8876) * C32731 + (C8877 + C8878) * C3449 +
            (C8384 + C8385) * C32886 + (C8386 + C8387) * C3448) *
               C5268 +
           ((C8879 + C8880) * C32731 + (C8881 + C8882) * C3449 +
            (C8870 + C8869) * C32886 + (C8868 + C8867) * C3448) *
               C5267) *
              C316 +
          (((C8882 + C8881) * C3448 + (C8880 + C8879) * C32886 +
            (C31557 * C1966 + C32866 * C1975 + C31538 * C1965 +
             C32550 * C1974) *
                C3449 +
            (C31557 * C1972 + C32866 * C1984 + C31538 * C1971 +
             C32550 * C1983) *
                C32731) *
               C5267 +
           ((C8878 + C8877) * C3448 + (C8876 + C8875) * C32886 +
            (C31557 * C2528 + C32866 * C2531 + C31538 * C2529 +
             C32550 * C2532) *
                C3449 +
            (C31557 * C2534 + C32866 * C2537 + C31538 * C2535 +
             C32550 * C2538) *
                C32731) *
               C5268 +
           ((C8874 + C8873) * C3448 + (C8872 + C8871) * C32886 +
            (C31557 * C7013 + C32866 * C7017 + C31538 * C7387 +
             C32550 * C7388) *
                C3449 +
            (C31557 * C7016 + C32866 * C7022 + C31538 * C7389 +
             C32550 * C7390) *
                C32731) *
               C32916) *
              C317) *
         C32589 * C32577) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C31557 * C119 + C32866 * C126 + C31538 * C120 + C32550 * C127) *
               C13611 +
           (C31557 * C131 + C32866 * C140 + C31538 * C132 + C32550 * C141) *
               C13607 +
           (C8867 + C8868) * C13612 + (C8869 + C8870) * C13608 +
           C12874 * C13613 + C12875 * C13609 + (C12901 + C12900) * C13614 +
           (C12899 + C12898) * C32932) *
              C32633 * C32603 * C32589 * C110 -
          ((C31538 * C1970 + C32550 * C1982 + C31557 * C1971 + C32866 * C1983) *
               C32932 +
           (C31538 * C1964 + C32550 * C1973 + C31557 * C1965 + C32866 * C1974) *
               C13614 +
           (C13313 + C13312) * C13609 + (C13311 + C13310) * C13613 +
           (C9306 + C9305) * C13608 + (C9304 + C9303) * C13612 +
           (C31538 * C133 + C32550 * C142 + C31557 * C132 + C32866 * C141) *
               C13607 +
           (C31538 * C121 + C32550 * C128 + C31557 * C120 + C32866 * C127) *
               C13611) *
              C32633 * C32603 * C32589 * C111 +
          ((C31557 * C121 + C32866 * C128 + C31538 * C122 + C32550 * C129) *
               C13611 +
           (C31557 * C133 + C32866 * C142 + C31538 * C134 + C32550 * C143) *
               C13607 +
           (C31557 * C320 + C32866 * C335 + C31538 * C319 + C32550 * C334) *
               C13612 +
           (C31557 * C330 + C32866 * C350 + C31538 * C329 + C32550 * C349) *
               C13608 +
           (C31557 * C325 + C32866 * C340 + C31538 * C326 + C32550 * C341) *
               C13613 +
           (C31557 * C345 + C32866 * C355 + C31538 * C346 + C32550 * C356) *
               C13609 +
           (C31557 * C1964 + C32866 * C1973 + C31538 * C2342 + C32550 * C2343) *
               C13614 +
           (C31557 * C1970 + C32866 * C1982 + C31538 * C2344 + C32550 * C2345) *
               C32932) *
              C32633 * C32603 * C32589 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C31557 * C119 + C32866 * C126 + C31538 * C120 + C32550 * C127) *
               C13611 +
           (C31557 * C131 + C32866 * C140 + C31538 * C132 + C32550 * C141) *
               C13607 +
           (C8867 + C8868) * C13612 + (C8869 + C8870) * C13608 +
           C12874 * C13613 + C12875 * C13609 + (C12901 + C12900) * C13614 +
           (C12899 + C12898) * C32932) *
              C32633 * C32603 * C209 -
          ((C12894 + C12895) * C32932 + (C12896 + C12897) * C13614 +
           C13508 * C13609 + C13509 * C13613 + C9505 * C13608 + C9506 * C13612 +
           (C7805 + C7804) * C13607 + (C7803 + C7802) * C13611) *
              C32633 * C32603 * C210 +
          (C7818 * C13611 + C7819 * C13607 + C8682 * C13612 + C8683 * C13608 +
           (C8874 + C8873) * C13613 + (C8872 + C8871) * C13609 +
           (C31557 * C7013 + C32866 * C7017 + C31538 * C7387 + C32550 * C7388) *
               C13614 +
           (C31557 * C7016 + C32866 * C7022 + C31538 * C7389 + C32550 * C7390) *
               C32932) *
              C32633 * C32603 * C211) *
         C32577) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C31557 * C119 + C32866 * C126 + C31538 * C120 + C32550 * C127) *
               C13611 +
           (C31557 * C131 + C32866 * C140 + C31538 * C132 + C32550 * C141) *
               C13607 +
           (C8867 + C8868) * C13612 + (C8869 + C8870) * C13608 +
           C12874 * C13613 + C12875 * C13609 + C13812 * C13614 +
           C13813 * C32932) *
              C32633 * C315 -
          ((C13822 + C13823) * C32932 + (C13824 + C13825) * C13614 +
           (C12898 + C12899) * C13609 + (C12900 + C12901) * C13613 +
           (C8879 + C8880) * C13608 + (C8881 + C8882) * C13612 +
           (C8870 + C8869) * C13607 + (C8868 + C8867) * C13611) *
              C32633 * C316 +
          (C12874 * C13611 + C12875 * C13607 + C13812 * C13612 +
           C13813 * C13608 + (C13825 + C13824) * C13613 +
           (C13823 + C13822) * C13609 +
           (C31557 * C12139 + C32866 * C12142 + C31538 * C12327 +
            C32550 * C12328) *
               C13614 +
           (C31557 * C12141 + C32866 * C12145 + C31538 * C12329 +
            C32550 * C12330) *
               C32932) *
              C32633 * C317) *
         C32589 * C32577) /
            (p * q * std::sqrt(p + q));
    d2ee[68] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31557 * C119 + C32866 * C126 + C31538 * C120 + C32550 * C127) *
                 C3448 +
             (C31557 * C131 + C32866 * C140 + C31538 * C132 + C32550 * C141) *
                 C32886 +
             (C8867 + C8868) * C3449 + (C8869 + C8870) * C32731) *
                C5267 +
            ((C7802 + C7803) * C3448 + (C7804 + C7805) * C32886 +
             (C8387 + C8386) * C3449 + (C8385 + C8384) * C32731) *
                C5268 +
            C8688 * C32916) *
               C530 -
           (((C8871 + C8872) * C32731 + (C8873 + C8874) * C3449 +
             (C8380 + C8381) * C32886 + (C8382 + C8383) * C3448) *
                C32916 +
            ((C8875 + C8876) * C32731 + (C8877 + C8878) * C3449 +
             (C8384 + C8385) * C32886 + (C8386 + C8387) * C3448) *
                C5268 +
            ((C8879 + C8880) * C32731 + (C8881 + C8882) * C3449 +
             (C8870 + C8869) * C32886 + (C8868 + C8867) * C3448) *
                C5267) *
               C531) *
              C32589 * C442 +
          ((((C9303 + C9304) * C3448 + (C9305 + C9306) * C32886 +
             (C31557 * C324 + C32866 * C339 + C31538 * C325 + C32550 * C340) *
                 C3449 +
             (C31557 * C344 + C32866 * C354 + C31538 * C345 + C32550 * C355) *
                 C32731) *
                C5267 +
            ((C9093 + C9094) * C3448 + (C9095 + C9096) * C32886 +
             (C31557 * C1066 + C32866 * C1078 + C31538 * C1067 +
              C32550 * C1079) *
                 C3449 +
             (C31557 * C1081 + C32866 * C1093 + C31538 * C1082 +
              C32550 * C1094) *
                 C32731) *
                C5268 +
            ((C9097 + C9098) * C3448 + (C9099 + C9100) * C32886 +
             (C31557 * C1069 + C32866 * C1084 + C31538 * C1070 +
              C32550 * C1085) *
                 C3449 +
             (C31557 * C1087 + C32866 * C1096 + C31538 * C1088 +
              C32550 * C1097) *
                 C32731) *
                C32916) *
               C531 -
           (((C9100 + C9099) * C32731 + (C9098 + C9097) * C3449 +
             (C8087 + C8086) * C32886 + (C8085 + C8084) * C3448) *
                C32916 +
            ((C9096 + C9095) * C32731 + (C9094 + C9093) * C3449 +
             (C8083 + C8082) * C32886 + (C8081 + C8080) * C3448) *
                C5268 +
            ((C9306 + C9305) * C32731 + (C9304 + C9303) * C3449 +
             (C31538 * C133 + C32550 * C142 + C31557 * C132 + C32866 * C141) *
                 C32886 +
             (C31538 * C121 + C32550 * C128 + C31557 * C120 + C32866 * C127) *
                 C3448) *
                C5267) *
               C530) *
              C32589 * C443)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C2662 * C119 + C2656 * C126 + C2663 * C120 + C2657 * C127 +
             C2664 * C121 + C2658 * C128 + C2665 * C122 + C32920 * C129) *
                C3448 +
            (C2662 * C131 + C2656 * C140 + C2663 * C132 + C2657 * C141 +
             C2664 * C133 + C2658 * C142 + C2665 * C134 + C32920 * C143) *
                C32886 +
            (C3679 + C3680 + C3681 + C3682) * C3449 +
            (C3683 + C3684 + C3685 + C3686) * C32731) *
               C32633 * C530 -
           ((C3687 + C3688 + C3689 + C3690) * C32731 +
            (C3691 + C3692 + C3693 + C3694) * C3449 +
            (C3686 + C3685 + C3684 + C3683) * C32886 +
            (C3682 + C3681 + C3680 + C3679) * C3448) *
               C32633 * C531) *
              C32589 * C442 +
          (((C3971 + C3972 + C3973 + C3974) * C3448 +
            (C3975 + C3976 + C3977 + C3978) * C32886 +
            (C2662 * C324 + C2656 * C339 + C2663 * C325 + C2657 * C340 +
             C2664 * C326 + C2658 * C341 + C2665 * C327 + C32920 * C342) *
                C3449 +
            (C2662 * C344 + C2656 * C354 + C2663 * C345 + C2657 * C355 +
             C2664 * C346 + C2658 * C356 + C2665 * C347 + C32920 * C357) *
                C32731) *
               C32633 * C531 -
           ((C3978 + C3977 + C3976 + C3975) * C32731 +
            (C3974 + C3973 + C3972 + C3971) * C3449 +
            (C2665 * C135 + C32920 * C144 + C2664 * C134 + C2658 * C143 +
             C2663 * C133 + C2657 * C142 + C2662 * C132 + C2656 * C141) *
                C32886 +
            (C2665 * C123 + C32920 * C130 + C2664 * C122 + C2658 * C129 +
             C2663 * C121 + C2657 * C128 + C2662 * C120 + C2656 * C127) *
                C3448) *
               C32633 * C530) *
              C32589 * C443)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C31557 * C119 + C32866 * C126 + C31538 * C120 + C32550 * C127) *
                C13611 +
            (C31557 * C131 + C32866 * C140 + C31538 * C132 + C32550 * C141) *
                C13607 +
            (C8867 + C8868) * C13612 + (C8869 + C8870) * C13608 +
            C12874 * C13613 + C12875 * C13609 + C13812 * C13614 +
            C13813 * C32932) *
               C32633 * C530 -
           ((C13822 + C13823) * C32932 + (C13824 + C13825) * C13614 +
            (C12898 + C12899) * C13609 + (C12900 + C12901) * C13613 +
            (C8879 + C8880) * C13608 + (C8881 + C8882) * C13612 +
            (C8870 + C8869) * C13607 + (C8868 + C8867) * C13611) *
               C32633 * C531) *
              C32589 * C442 +
          (((C9303 + C9304) * C13611 + (C9305 + C9306) * C13607 +
            (C13310 + C13311) * C13612 + (C13312 + C13313) * C13608 +
            (C14094 + C14095) * C13613 + (C14096 + C14097) * C13609 +
            (C31557 * C1968 + C32866 * C1977 + C31538 * C1969 +
             C32550 * C1978) *
                C13614 +
            (C31557 * C1980 + C32866 * C1986 + C31538 * C1981 +
             C32550 * C1987) *
                C32932) *
               C32633 * C531 -
           ((C14097 + C14096) * C32932 + (C14095 + C14094) * C13614 +
            (C13313 + C13312) * C13609 + (C13311 + C13310) * C13613 +
            (C9306 + C9305) * C13608 + (C9304 + C9303) * C13612 +
            (C31538 * C133 + C32550 * C142 + C31557 * C132 + C32866 * C141) *
                C13607 +
            (C31538 * C121 + C32550 * C128 + C31557 * C120 + C32866 * C127) *
                C13611) *
               C32633 * C530) *
              C32589 * C443)) /
            (p * q * std::sqrt(p + q));
    d2ee[69] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C2662 * C119 + C2656 * C126 + C2663 * C120 + C2657 * C127 +
            C2664 * C121 + C2658 * C128 + C2665 * C122 + C32920 * C129) *
               C3448 +
           (C2662 * C131 + C2656 * C140 + C2663 * C132 + C2657 * C141 +
            C2664 * C133 + C2658 * C142 + C2665 * C134 + C32920 * C143) *
               C32886 +
           (C2662 * C322 + C2656 * C337 + C2663 * C321 + C2657 * C336 +
            C2664 * C320 + C2658 * C335 + C2665 * C319 + C32920 * C334) *
               C3449 +
           (C2662 * C332 + C2656 * C352 + C2663 * C331 + C2657 * C351 +
            C2664 * C330 + C2658 * C350 + C2665 * C329 + C32920 * C349) *
               C32731) *
              C32633 * C32603 * C209 -
          ((C3341 + C3342 + C3343 + C3344) * C32731 +
           (C3345 + C3346 + C3347 + C3348) * C3449 +
           (C2804 + C2803 + C2802 + C2801) * C32886 +
           (C2800 + C2799 + C2798 + C2797) * C3448) *
              C32633 * C32603 * C210 +
          ((C2812 + C2811 + C2810 + C2809) * C3448 +
           (C2808 + C2807 + C2806 + C2805) * C32886 +
           (C2662 * C1064 + C2656 * C1076 + C2663 * C1063 + C2657 * C1075 +
            C2664 * C1062 + C2658 * C1074 + C2665 * C1430 + C32920 * C1431) *
               C3449 +
           (C2662 * C1073 + C2656 * C1091 + C2663 * C1072 + C2657 * C1090 +
            C2664 * C1071 + C2658 * C1089 + C2665 * C1432 + C32920 * C1433) *
               C32731) *
              C32633 * C32603 * C211) *
         C32577) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C2662 * C119 + C2656 * C126 + C2663 * C120 + C2657 * C127 +
            C2664 * C121 + C2658 * C128 + C2665 * C122 + C32920 * C129) *
               C3448 +
           (C2662 * C131 + C2656 * C140 + C2663 * C132 + C2657 * C141 +
            C2664 * C133 + C2658 * C142 + C2665 * C134 + C32920 * C143) *
               C32886 +
           (C2662 * C322 + C2656 * C337 + C2663 * C321 + C2657 * C336 +
            C2664 * C320 + C2658 * C335 + C2665 * C319 + C32920 * C334) *
               C3449 +
           (C2662 * C332 + C2656 * C352 + C2663 * C331 + C2657 * C351 +
            C2664 * C330 + C2658 * C350 + C2665 * C329 + C32920 * C349) *
               C32731) *
              C32633 * C32603 * C32589 * C110 -
          ((C2665 * C328 + C32920 * C348 + C2664 * C329 + C2658 * C349 +
            C2663 * C330 + C2657 * C350 + C2662 * C331 + C2656 * C351) *
               C32731 +
           (C2665 * C318 + C32920 * C333 + C2664 * C319 + C2658 * C334 +
            C2663 * C320 + C2657 * C335 + C2662 * C321 + C2656 * C336) *
               C3449 +
           (C2665 * C135 + C32920 * C144 + C2664 * C134 + C2658 * C143 +
            C2663 * C133 + C2657 * C142 + C2662 * C132 + C2656 * C141) *
               C32886 +
           (C2665 * C123 + C32920 * C130 + C2664 * C122 + C2658 * C129 +
            C2663 * C121 + C2657 * C128 + C2662 * C120 + C2656 * C127) *
               C3448) *
              C32633 * C32603 * C32589 * C111 +
          ((C2662 * C121 + C2656 * C128 + C2663 * C122 + C2657 * C129 +
            C2664 * C123 + C2658 * C130 + C2665 * C124 + C32920 * C137) *
               C3448 +
           (C2662 * C133 + C2656 * C142 + C2663 * C134 + C2657 * C143 +
            C2664 * C135 + C2658 * C144 + C2665 * C136 + C32920 * C145) *
               C32886 +
           (C2662 * C320 + C2656 * C335 + C2663 * C319 + C2657 * C334 +
            C2664 * C318 + C2658 * C333 + C2665 * C532 + C32920 * C533) *
               C3449 +
           (C2662 * C330 + C2656 * C350 + C2663 * C329 + C2657 * C349 +
            C2664 * C328 + C2658 * C348 + C2665 * C534 + C32920 * C535) *
               C32731) *
              C32633 * C32603 * C32589 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C31557 * C119 + C32866 * C126 + C31538 * C120 + C32550 * C127) *
                C3448 +
            (C31557 * C131 + C32866 * C140 + C31538 * C132 + C32550 * C141) *
                C32886 +
            (C31557 * C322 + C32866 * C337 + C31538 * C321 + C32550 * C336) *
                C3449 +
            (C31557 * C332 + C32866 * C352 + C31538 * C331 + C32550 * C351) *
                C32731) *
               C5267 +
           ((C7802 + C7803) * C3448 + (C7804 + C7805) * C32886 +
            (C8387 + C8386) * C3449 + (C8385 + C8384) * C32731) *
               C5268 +
           (C7818 * C3448 + C7819 * C32886 + (C8383 + C8382) * C3449 +
            (C8381 + C8380) * C32731) *
               C32916) *
              C32603 * C32589 * C110 -
          (((C31538 * C1071 + C32550 * C1089 + C31557 * C1072 +
             C32866 * C1090) *
                C32731 +
            (C31538 * C1062 + C32550 * C1074 + C31557 * C1063 +
             C32866 * C1075) *
                C3449 +
            (C8087 + C8086) * C32886 + (C8085 + C8084) * C3448) *
               C32916 +
           ((C31538 * C630 + C32550 * C635 + C31557 * C629 + C32866 * C634) *
                C32731 +
            (C31538 * C620 + C32550 * C625 + C31557 * C619 + C32866 * C624) *
                C3449 +
            (C8083 + C8082) * C32886 + (C8081 + C8080) * C3448) *
               C5268 +
           ((C31538 * C330 + C32550 * C350 + C31557 * C331 + C32866 * C351) *
                C32731 +
            (C31538 * C320 + C32550 * C335 + C31557 * C321 + C32866 * C336) *
                C3449 +
            (C31538 * C133 + C32550 * C142 + C31557 * C132 + C32866 * C141) *
                C32886 +
            (C31538 * C121 + C32550 * C128 + C31557 * C120 + C32866 * C127) *
                C3448) *
               C5267) *
              C32603 * C32589 * C111 +
          (((C31557 * C121 + C32866 * C128 + C31538 * C122 + C32550 * C129) *
                C3448 +
            (C31557 * C133 + C32866 * C142 + C31538 * C134 + C32550 * C143) *
                C32886 +
            (C31557 * C320 + C32866 * C335 + C31538 * C319 + C32550 * C334) *
                C3449 +
            (C31557 * C330 + C32866 * C350 + C31538 * C329 + C32550 * C349) *
                C32731) *
               C5267 +
           ((C31557 * C215 + C32866 * C230 + C31538 * C214 + C32550 * C229) *
                C3448 +
            (C31557 * C225 + C32866 * C245 + C31538 * C224 + C32550 * C244) *
                C32886 +
            (C31557 * C620 + C32866 * C625 + C31538 * C621 + C32550 * C626) *
                C3449 +
            (C31557 * C630 + C32866 * C635 + C31538 * C631 + C32550 * C636) *
                C32731) *
               C5268 +
           ((C31557 * C220 + C32866 * C235 + C31538 * C221 + C32550 * C236) *
                C3448 +
            (C31557 * C240 + C32866 * C250 + C31538 * C241 + C32550 * C251) *
                C32886 +
            (C31557 * C1062 + C32866 * C1074 + C31538 * C1430 +
             C32550 * C1431) *
                C3449 +
            (C31557 * C1071 + C32866 * C1089 + C31538 * C1432 +
             C32550 * C1433) *
                C32731) *
               C32916) *
              C32603 * C32589 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C31557 * C119 + C32866 * C126 + C31538 * C120 + C32550 * C127) *
                C3448 +
            (C31557 * C131 + C32866 * C140 + C31538 * C132 + C32550 * C141) *
                C32886 +
            (C31557 * C322 + C32866 * C337 + C31538 * C321 + C32550 * C336) *
                C3449 +
            (C31557 * C332 + C32866 * C352 + C31538 * C331 + C32550 * C351) *
                C32731) *
               C5267 +
           ((C7802 + C7803) * C3448 + (C7804 + C7805) * C32886 +
            (C8387 + C8386) * C3449 + (C8385 + C8384) * C32731) *
               C5268 +
           C8688 * C32916) *
              C32603 * C209 -
          (((C8376 + C8377) * C32731 + (C8378 + C8379) * C3449 +
            (C7813 + C7812) * C32886 + (C7811 + C7810) * C3448) *
               C32916 +
           ((C8380 + C8381) * C32731 + (C8382 + C8383) * C3449 +
            (C7809 + C7808) * C32886 + (C7807 + C7806) * C3448) *
               C5268 +
           ((C8384 + C8385) * C32731 + (C8386 + C8387) * C3449 +
            (C7805 + C7804) * C32886 + (C7803 + C7802) * C3448) *
               C5267) *
              C32603 * C210 +
          (C8688 * C5267 +
           (C7820 * C3448 + C7821 * C32886 + (C8379 + C8378) * C3449 +
            (C8377 + C8376) * C32731) *
               C5268 +
           ((C7817 + C7816) * C3448 + (C7815 + C7814) * C32886 +
            (C31557 * C6308 + C32866 * C6312 + C31538 * C6520 +
             C32550 * C6521) *
                C3449 +
            (C31557 * C6311 + C32866 * C6317 + C31538 * C6522 +
             C32550 * C6523) *
                C32731) *
               C32916) *
              C32603 * C211) *
         C32577) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C31557 * C119 + C32866 * C126 + C31538 * C120 + C32550 * C127) *
               C13611 +
           (C31557 * C131 + C32866 * C140 + C31538 * C132 + C32550 * C141) *
               C13607 +
           (C8867 + C8868) * C13612 + (C8869 + C8870) * C13608 +
           C12874 * C13613 + C12875 * C13609 + (C12901 + C12900) * C13614 +
           (C12899 + C12898) * C32932) *
              C32633 * C32603 * C32589 * C110 -
          ((C31538 * C1970 + C32550 * C1982 + C31557 * C1971 + C32866 * C1983) *
               C32932 +
           (C31538 * C1964 + C32550 * C1973 + C31557 * C1965 + C32866 * C1974) *
               C13614 +
           (C13313 + C13312) * C13609 + (C13311 + C13310) * C13613 +
           (C9306 + C9305) * C13608 + (C9304 + C9303) * C13612 +
           (C31538 * C133 + C32550 * C142 + C31557 * C132 + C32866 * C141) *
               C13607 +
           (C31538 * C121 + C32550 * C128 + C31557 * C120 + C32866 * C127) *
               C13611) *
              C32633 * C32603 * C32589 * C111 +
          ((C31557 * C121 + C32866 * C128 + C31538 * C122 + C32550 * C129) *
               C13611 +
           (C31557 * C133 + C32866 * C142 + C31538 * C134 + C32550 * C143) *
               C13607 +
           (C31557 * C320 + C32866 * C335 + C31538 * C319 + C32550 * C334) *
               C13612 +
           (C31557 * C330 + C32866 * C350 + C31538 * C329 + C32550 * C349) *
               C13608 +
           (C31557 * C325 + C32866 * C340 + C31538 * C326 + C32550 * C341) *
               C13613 +
           (C31557 * C345 + C32866 * C355 + C31538 * C346 + C32550 * C356) *
               C13609 +
           (C31557 * C1964 + C32866 * C1973 + C31538 * C2342 + C32550 * C2343) *
               C13614 +
           (C31557 * C1970 + C32866 * C1982 + C31538 * C2344 + C32550 * C2345) *
               C32932) *
              C32633 * C32603 * C32589 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C31557 * C119 + C32866 * C126 + C31538 * C120 + C32550 * C127) *
               C13611 +
           (C31557 * C131 + C32866 * C140 + C31538 * C132 + C32550 * C141) *
               C13607 +
           (C8867 + C8868) * C13612 + (C8869 + C8870) * C13608 +
           C12874 * C13613 + C12875 * C13609 + (C12901 + C12900) * C13614 +
           (C12899 + C12898) * C32932) *
              C32633 * C32603 * C209 -
          ((C12894 + C12895) * C32932 + (C12896 + C12897) * C13614 +
           C13508 * C13609 + C13509 * C13613 + C9505 * C13608 + C9506 * C13612 +
           (C7805 + C7804) * C13607 + (C7803 + C7802) * C13611) *
              C32633 * C32603 * C210 +
          (C7818 * C13611 + C7819 * C13607 + C8682 * C13612 + C8683 * C13608 +
           (C8874 + C8873) * C13613 + (C8872 + C8871) * C13609 +
           (C31557 * C7013 + C32866 * C7017 + C31538 * C7387 + C32550 * C7388) *
               C13614 +
           (C31557 * C7016 + C32866 * C7022 + C31538 * C7389 + C32550 * C7390) *
               C32932) *
              C32633 * C32603 * C211) *
         C32577) /
            (p * q * std::sqrt(p + q));
    d2ee[70] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C754 * C119 + C748 * C126 + C755 * C120 + C749 * C127 +
              C756 * C121 + C32905 * C128) *
                 C118 +
             (C754 * C131 + C748 * C140 + C755 * C132 + C749 * C141 +
              C756 * C133 + C32905 * C142) *
                 C32644) *
                C32951 +
            ((C928 + C929 + C930) * C118 + (C931 + C932 + C933) * C32644) *
                C32939 +
            C952 * C32916) *
               C32603 * C440 -
           (((C940 + C941 + C942) * C32644 + (C943 + C944 + C945) * C118) *
                C32916 +
            ((C939 + C938 + C937) * C32644 + (C936 + C935 + C934) * C118) *
                C32939 +
            ((C933 + C932 + C931) * C32644 + (C930 + C929 + C928) * C118) *
                C32951) *
               C32603 * C441) *
              C442 +
          ((((C1273 + C1274 + C1275) * C118 +
             (C1276 + C1277 + C1278) * C32644) *
                C32951 +
            ((C1279 + C1280 + C1281) * C118 +
             (C1282 + C1283 + C1284) * C32644) *
                C32939 +
            ((C754 * C868 + C748 * C877 + C755 * C867 + C749 * C876 +
              C756 * C1244 + C32905 * C1245) *
                 C118 +
             (C754 * C874 + C748 * C886 + C755 * C873 + C749 * C885 +
              C756 * C1246 + C32905 * C1247) *
                 C32644) *
                C32916) *
               C32603 * C441 -
           (((C1284 + C1283 + C1282) * C32644 +
             (C1281 + C1280 + C1279) * C118) *
                C32916 +
            ((C1278 + C1277 + C1276) * C32644 +
             (C1275 + C1274 + C1273) * C118) *
                C32939 +
            ((C756 * C134 + C32905 * C143 + C755 * C133 + C749 * C142 +
              C754 * C132 + C748 * C141) *
                 C32644 +
             (C756 * C122 + C32905 * C129 + C755 * C121 + C749 * C128 +
              C754 * C120 + C748 * C127) *
                 C118) *
                C32951) *
               C32603 * C440) *
              C443)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C127 +
             C115 * C121 + C103 * C128 + C116 * C122 + C104 * C129 +
             C117 * C123 + C105 * C130) *
                C118 +
            (C113 * C131 + C101 * C140 + C114 * C132 + C102 * C141 +
             C115 * C133 + C103 * C142 + C116 * C134 + C104 * C143 +
             C117 * C135 + C105 * C144) *
                C32644) *
               C32633 * C32603 * C440 -
           ((C117 * C223 + C105 * C243 + C116 * C224 + C104 * C244 +
             C115 * C225 + C103 * C245 + C114 * C226 + C102 * C246 +
             C113 * C227 + C101 * C247) *
                C32644 +
            (C117 * C213 + C105 * C228 + C116 * C214 + C104 * C229 +
             C115 * C215 + C103 * C230 + C114 * C216 + C102 * C231 +
             C113 * C217 + C101 * C232) *
                C118) *
               C32633 * C32603 * C441) *
              C442 +
          (((C113 * C216 + C101 * C231 + C114 * C215 + C102 * C230 +
             C115 * C214 + C103 * C229 + C116 * C213 + C104 * C228 +
             C117 * C444 + C105 * C445) *
                C118 +
            (C113 * C226 + C101 * C246 + C114 * C225 + C102 * C245 +
             C115 * C224 + C103 * C244 + C116 * C223 + C104 * C243 +
             C117 * C446 + C105 * C447) *
                C32644) *
               C32633 * C32603 * C441 -
           ((C117 * C136 + C105 * C145 + C116 * C135 + C104 * C144 +
             C115 * C134 + C103 * C143 + C114 * C133 + C102 * C142 +
             C113 * C132 + C101 * C141) *
                C32644 +
            (C117 * C124 + C105 * C137 + C116 * C123 + C104 * C130 +
             C115 * C122 + C103 * C129 + C114 * C121 + C102 * C128 +
             C113 * C120 + C101 * C127) *
                C118) *
               C32633 * C32603 * C440) *
              C443)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C5270 * C119 + C32948 * C126 + C5271 * C120 + C32935 * C127 +
              C5272 * C121 + C32905 * C128) *
                 C118 +
             (C5270 * C131 + C32948 * C140 + C5271 * C132 + C32935 * C141 +
              C5272 * C133 + C32905 * C142) *
                 C32644) *
                C5267 +
            ((C5420 + C5421 + C5422) * C118 +
             (C5423 + C5424 + C5425) * C32644) *
                C5268 +
            C5444 * C32916) *
               C32603 * C440 -
           (((C5432 + C5433 + C5434) * C32644 +
             (C5435 + C5436 + C5437) * C118) *
                C32916 +
            ((C5431 + C5430 + C5429) * C32644 +
             (C5428 + C5427 + C5426) * C118) *
                C5268 +
            ((C5425 + C5424 + C5423) * C32644 +
             (C5422 + C5421 + C5420) * C118) *
                C5267) *
               C32603 * C441) *
              C442 +
          ((((C5725 + C5726 + C5727) * C118 +
             (C5728 + C5729 + C5730) * C32644) *
                C5267 +
            ((C5731 + C5732 + C5733) * C118 +
             (C5734 + C5735 + C5736) * C32644) *
                C5268 +
            ((C5270 * C868 + C32948 * C877 + C5271 * C867 + C32935 * C876 +
              C5272 * C1244 + C32905 * C1245) *
                 C118 +
             (C5270 * C874 + C32948 * C886 + C5271 * C873 + C32935 * C885 +
              C5272 * C1246 + C32905 * C1247) *
                 C32644) *
                C32916) *
               C32603 * C441 -
           (((C5736 + C5735 + C5734) * C32644 +
             (C5733 + C5732 + C5731) * C118) *
                C32916 +
            ((C5730 + C5729 + C5728) * C32644 +
             (C5727 + C5726 + C5725) * C118) *
                C5268 +
            ((C5272 * C134 + C32905 * C143 + C5271 * C133 + C32935 * C142 +
              C5270 * C132 + C32948 * C141) *
                 C32644 +
             (C5272 * C122 + C32905 * C129 + C5271 * C121 + C32935 * C128 +
              C5270 * C120 + C32948 * C127) *
                 C118) *
                C5267) *
               C32603 * C440) *
              C443)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C6132 * C119 + C32540 * C126) * C118 +
             (C6132 * C131 + C32540 * C140) * C32644) *
                C6127 +
            (C6234 + C6235) * C6128 + C6244 * C6129 + C6245 * C6130 +
            C6246 * C6131) *
               C32603 * C440 -
           ((C6242 + C6243) * C6131 + (C6241 + C6240) * C6130 +
            (C6239 + C6238) * C6129 + (C6237 + C6236) * C6128 +
            (C6235 + C6234) * C6127) *
               C32603 * C441) *
              C442 +
          (((C6431 + C6432) * C6127 + (C6433 + C6434) * C6128 +
            (C6435 + C6436) * C6129 + (C6437 + C6438) * C6130 +
            ((C6132 * C6402 + C32540 * C6403) * C118 +
             (C6132 * C6404 + C32540 * C6405) * C32644) *
                C6131) *
               C32603 * C441 -
           ((C6438 + C6437) * C6131 + (C6436 + C6435) * C6130 +
            (C6434 + C6433) * C6129 + (C6432 + C6431) * C6128 +
            ((C6132 * C132 + C32540 * C141) * C32644 +
             (C6132 * C120 + C32540 * C127) * C118) *
                C6127) *
               C32603 * C440) *
              C443)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C5270 * C119 + C32948 * C126 + C5271 * C120 + C32935 * C127 +
             C5272 * C121 + C32905 * C128) *
                C10355 +
            (C5270 * C131 + C32948 * C140 + C5271 * C132 + C32935 * C141 +
             C5272 * C133 + C32905 * C142) *
                C10352 +
            (C10615 + C10616 + C10617) * C10356 +
            (C10618 + C10619 + C10620) * C10353 + C10635 * C10357 +
            C10636 * C32919) *
               C32633 * C32603 * C440 -
           ((C5272 * C1082 + C32905 * C1094 + C5271 * C1081 + C32935 * C1093 +
             C5270 * C1080 + C32948 * C1092) *
                C32919 +
            (C5272 * C1067 + C32905 * C1079 + C5271 * C1066 + C32935 * C1078 +
             C5270 * C1065 + C32948 * C1077) *
                C10357 +
            (C6059 + C6060 + C6061) * C10353 +
            (C6062 + C6063 + C6064) * C10356 +
            (C5425 + C5424 + C5423) * C10352 +
            (C5422 + C5421 + C5420) * C10355) *
               C32633 * C32603 * C441) *
              C442 +
          (((C5725 + C5726 + C5727) * C10355 +
            (C5728 + C5729 + C5730) * C10352 +
            (C5270 * C619 + C32948 * C624 + C5271 * C620 + C32935 * C625 +
             C5272 * C621 + C32905 * C626) *
                C10356 +
            (C5270 * C629 + C32948 * C634 + C5271 * C630 + C32935 * C635 +
             C5272 * C631 + C32905 * C636) *
                C10353 +
            (C5270 * C1066 + C32948 * C1078 + C5271 * C1067 + C32935 * C1079 +
             C5272 * C2192 + C32905 * C2193) *
                C10357 +
            (C5270 * C1081 + C32948 * C1093 + C5271 * C1082 + C32935 * C1094 +
             C5272 * C2194 + C32905 * C2195) *
                C32919) *
               C32633 * C32603 * C441 -
           ((C5272 * C346 + C32905 * C356 + C5271 * C345 + C32935 * C355 +
             C5270 * C344 + C32948 * C354) *
                C32919 +
            (C5272 * C326 + C32905 * C341 + C5271 * C325 + C32935 * C340 +
             C5270 * C324 + C32948 * C339) *
                C10357 +
            (C5272 * C329 + C32905 * C349 + C5271 * C330 + C32935 * C350 +
             C5270 * C331 + C32948 * C351) *
                C10353 +
            (C5272 * C319 + C32905 * C334 + C5271 * C320 + C32935 * C335 +
             C5270 * C321 + C32948 * C336) *
                C10356 +
            (C5272 * C134 + C32905 * C143 + C5271 * C133 + C32935 * C142 +
             C5270 * C132 + C32948 * C141) *
                C10352 +
            (C5272 * C122 + C32905 * C129 + C5271 * C121 + C32935 * C128 +
             C5270 * C120 + C32948 * C127) *
                C10355) *
               C32633 * C32603 * C440) *
              C443)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C6132 * C119 + C32540 * C126) * C10355 +
             (C6132 * C131 + C32540 * C140) * C10352 + C7046 * C10356 +
             C7047 * C10353 + C7048 * C10357 + C7049 * C32919) *
                C32951 +
            (C11349 + C11350 + C11351 + C11352 + C11353 + C11354) * C32939 +
            C11371 * C32916) *
               C32603 * C440 -
           ((C11361 + C11362 + C11363 + C11364 + C11365 + C11366) * C32916 +
            (C11360 + C11359 + C11358 + C11357 + C11356 + C11355) * C32939 +
            (C11354 + C11353 + C11352 + C11351 + C11350 + C11349) * C32951) *
               C32603 * C441) *
              C442 +
          (((C11628 + C11629 + C11630 + C11631 + C11632 + C11633) * C32951 +
            (C11634 + C11635 + C11636 + C11637 + C11638 + C11639) * C32939 +
            (C6427 * C10355 + C6428 * C10352 + C9967 * C10356 + C9968 * C10353 +
             (C6132 * C7201 + C32540 * C7202) * C10357 +
             (C6132 * C7203 + C32540 * C7204) * C32919) *
                C32916) *
               C32603 * C441 -
           ((C11639 + C11638 + C11637 + C11636 + C11635 + C11634) * C32916 +
            (C11633 + C11632 + C11631 + C11630 + C11629 + C11628) * C32939 +
            (C7403 * C32919 + C7402 * C10357 + C7401 * C10353 + C7400 * C10356 +
             (C6132 * C132 + C32540 * C141) * C10352 +
             (C6132 * C120 + C32540 * C127) * C10355) *
                C32951) *
               C32603 * C440) *
              C443)) /
            (p * q * std::sqrt(p + q));
    d2ee[71] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C754 * C119 + C748 * C126 + C755 * C120 + C749 * C127 +
              C756 * C121 + C32905 * C128) *
                 C118 +
             (C754 * C131 + C748 * C140 + C755 * C132 + C749 * C141 +
              C756 * C133 + C32905 * C142) *
                 C32644) *
                C32951 +
            ((C928 + C929 + C930) * C118 + (C931 + C932 + C933) * C32644) *
                C32939 +
            C952 * C32916) *
               C530 -
           (((C1617 + C1618 + C1619) * C32644 +
             (C1620 + C1621 + C1622) * C118) *
                C32916 +
            ((C1623 + C1624 + C1625) * C32644 +
             (C1626 + C1627 + C1628) * C118) *
                C32939 +
            ((C756 * C330 + C32905 * C350 + C755 * C331 + C749 * C351 +
              C754 * C332 + C748 * C352) *
                 C32644 +
             (C756 * C320 + C32905 * C335 + C755 * C321 + C749 * C336 +
              C754 * C322 + C748 * C337) *
                 C118) *
                C32951) *
               C531) *
              C440 +
          ((((C1628 + C1627 + C1626) * C118 +
             (C1625 + C1624 + C1623) * C32644) *
                C32951 +
            ((C1622 + C1621 + C1620) * C118 +
             (C1619 + C1618 + C1617) * C32644) *
                C32939 +
            ((C754 * C1580 + C748 * C1583 + C755 * C1581 + C749 * C1584 +
              C756 * C1582 + C32905 * C1585) *
                 C118 +
             (C754 * C1586 + C748 * C1589 + C755 * C1587 + C749 * C1590 +
              C756 * C1588 + C32905 * C1591) *
                 C32644) *
                C32916) *
               C531 -
           (((C940 + C941 + C942) * C32644 + (C943 + C944 + C945) * C118) *
                C32916 +
            ((C939 + C938 + C937) * C32644 + (C936 + C935 + C934) * C118) *
                C32939 +
            ((C933 + C932 + C931) * C32644 + (C930 + C929 + C928) * C118) *
                C32951) *
               C530) *
              C441) *
         C32577) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C127 +
             C115 * C121 + C103 * C128 + C116 * C122 + C104 * C129 +
             C117 * C123 + C105 * C130) *
                C118 +
            (C113 * C131 + C101 * C140 + C114 * C132 + C102 * C141 +
             C115 * C133 + C103 * C142 + C116 * C134 + C104 * C143 +
             C117 * C135 + C105 * C144) *
                C32644) *
               C32633 * C530 -
           ((C117 * C328 + C105 * C348 + C116 * C329 + C104 * C349 +
             C115 * C330 + C103 * C350 + C114 * C331 + C102 * C351 +
             C113 * C332 + C101 * C352) *
                C32644 +
            (C117 * C318 + C105 * C333 + C116 * C319 + C104 * C334 +
             C115 * C320 + C103 * C335 + C114 * C321 + C102 * C336 +
             C113 * C322 + C101 * C337) *
                C118) *
               C32633 * C531) *
              C440 +
          (((C113 * C618 + C101 * C623 + C114 * C619 + C102 * C624 +
             C115 * C620 + C103 * C625 + C116 * C621 + C104 * C626 +
             C117 * C622 + C105 * C627) *
                C118 +
            (C113 * C628 + C101 * C633 + C114 * C629 + C102 * C634 +
             C115 * C630 + C103 * C635 + C116 * C631 + C104 * C636 +
             C117 * C632 + C105 * C637) *
                C32644) *
               C32633 * C531 -
           ((C117 * C223 + C105 * C243 + C116 * C224 + C104 * C244 +
             C115 * C225 + C103 * C245 + C114 * C226 + C102 * C246 +
             C113 * C227 + C101 * C247) *
                C32644 +
            (C117 * C213 + C105 * C228 + C116 * C214 + C104 * C229 +
             C115 * C215 + C103 * C230 + C114 * C216 + C102 * C231 +
             C113 * C217 + C101 * C232) *
                C118) *
               C32633 * C530) *
              C441) *
         C32577) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C5270 * C119 + C32948 * C126 + C5271 * C120 + C32935 * C127 +
              C5272 * C121 + C32905 * C128) *
                 C118 +
             (C5270 * C131 + C32948 * C140 + C5271 * C132 + C32935 * C141 +
              C5272 * C133 + C32905 * C142) *
                 C32644) *
                C5267 +
            ((C5420 + C5421 + C5422) * C118 +
             (C5423 + C5424 + C5425) * C32644) *
                C5268 +
            C5444 * C32916) *
               C530 -
           (((C6053 + C6054 + C6055) * C32644 +
             (C6056 + C6057 + C6058) * C118) *
                C32916 +
            ((C6059 + C6060 + C6061) * C32644 +
             (C6062 + C6063 + C6064) * C118) *
                C5268 +
            ((C5272 * C330 + C32905 * C350 + C5271 * C331 + C32935 * C351 +
              C5270 * C332 + C32948 * C352) *
                 C32644 +
             (C5272 * C320 + C32905 * C335 + C5271 * C321 + C32935 * C336 +
              C5270 * C322 + C32948 * C337) *
                 C118) *
                C5267) *
               C531) *
              C440 +
          ((((C6064 + C6063 + C6062) * C118 +
             (C6061 + C6060 + C6059) * C32644) *
                C5267 +
            ((C6058 + C6057 + C6056) * C118 +
             (C6055 + C6054 + C6053) * C32644) *
                C5268 +
            ((C5270 * C1580 + C32948 * C1583 + C5271 * C1581 + C32935 * C1584 +
              C5272 * C1582 + C32905 * C1585) *
                 C118 +
             (C5270 * C1586 + C32948 * C1589 + C5271 * C1587 + C32935 * C1590 +
              C5272 * C1588 + C32905 * C1591) *
                 C32644) *
                C32916) *
               C531 -
           (((C5432 + C5433 + C5434) * C32644 +
             (C5435 + C5436 + C5437) * C118) *
                C32916 +
            ((C5431 + C5430 + C5429) * C32644 +
             (C5428 + C5427 + C5426) * C118) *
                C5268 +
            ((C5425 + C5424 + C5423) * C32644 +
             (C5422 + C5421 + C5420) * C118) *
                C5267) *
               C530) *
              C441) *
         C32577) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C6132 * C119 + C32540 * C126) * C118 +
             (C6132 * C131 + C32540 * C140) * C32644) *
                C6127 +
            (C6234 + C6235) * C6128 + C6244 * C6129 + C6245 * C6130 +
            C6246 * C6131) *
               C530 -
           ((C6635 + C6636) * C6131 + (C6637 + C6638) * C6130 +
            (C6639 + C6640) * C6129 + (C6641 + C6642) * C6128 +
            ((C6132 * C332 + C32540 * C352) * C32644 +
             (C6132 * C322 + C32540 * C337) * C118) *
                C6127) *
               C531) *
              C440 +
          (((C6642 + C6641) * C6127 + (C6640 + C6639) * C6128 +
            (C6638 + C6637) * C6129 + (C6636 + C6635) * C6130 +
            ((C6132 * C6606 + C32540 * C6607) * C118 +
             (C6132 * C6608 + C32540 * C6609) * C32644) *
                C6131) *
               C531 -
           ((C6242 + C6243) * C6131 + (C6241 + C6240) * C6130 +
            (C6239 + C6238) * C6129 + (C6237 + C6236) * C6128 +
            (C6235 + C6234) * C6127) *
               C530) *
              C441) *
         C32577) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C5270 * C119 + C32948 * C126 + C5271 * C120 + C32935 * C127 +
             C5272 * C121 + C32905 * C128) *
                C10355 +
            (C5270 * C131 + C32948 * C140 + C5271 * C132 + C32935 * C141 +
             C5272 * C133 + C32905 * C142) *
                C10352 +
            (C10615 + C10616 + C10617) * C10356 +
            (C10618 + C10619 + C10620) * C10353 + C10635 * C10357 +
            C10636 * C32919) *
               C32633 * C530 -
           ((C10627 + C10628 + C10629) * C32919 +
            (C10630 + C10631 + C10632) * C10357 +
            (C10626 + C10625 + C10624) * C10353 +
            (C10623 + C10622 + C10621) * C10356 +
            (C10620 + C10619 + C10618) * C10352 +
            (C10617 + C10616 + C10615) * C10355) *
               C32633 * C531) *
              C440 +
          (((C6064 + C6063 + C6062) * C10355 +
            (C6061 + C6060 + C6059) * C10352 +
            (C11123 + C11124 + C11125) * C10356 +
            (C11126 + C11127 + C11128) * C10353 +
            (C5270 * C2528 + C32948 * C2531 + C5271 * C2529 + C32935 * C2532 +
             C5272 * C2530 + C32905 * C2533) *
                C10357 +
            (C5270 * C2534 + C32948 * C2537 + C5271 * C2535 + C32935 * C2538 +
             C5272 * C2536 + C32905 * C2539) *
                C32919) *
               C32633 * C531 -
           ((C11128 + C11127 + C11126) * C32919 +
            (C11125 + C11124 + C11123) * C10357 +
            (C6059 + C6060 + C6061) * C10353 +
            (C6062 + C6063 + C6064) * C10356 +
            (C5425 + C5424 + C5423) * C10352 +
            (C5422 + C5421 + C5420) * C10355) *
               C32633 * C530) *
              C441) *
         C32577) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C6132 * C119 + C32540 * C126) * C10355 +
             (C6132 * C131 + C32540 * C140) * C10352 + C7046 * C10356 +
             C7047 * C10353 + C7048 * C10357 + C7049 * C32919) *
                C32951 +
            (C11349 + C11350 + C11351 + C11352 + C11353 + C11354) * C32939 +
            C11371 * C32916) *
               C530 -
           ((C11932 + C11933 + C11934 + C11935 + C11936 + C11937) * C32916 +
            (C11938 + C11939 + C11940 + C11941 + C11942 + C11943) * C32939 +
            (C7054 * C32919 + C7055 * C10357 + C7049 * C10353 + C7048 * C10356 +
             C7047 * C10352 + C7046 * C10355) *
                C32951) *
               C531) *
              C440 +
          (((C11943 + C11942 + C11941 + C11940 + C11939 + C11938) * C32951 +
            (C11937 + C11936 + C11935 + C11934 + C11933 + C11932) * C32939 +
            (C6630 * C10355 + C6629 * C10352 + C6893 * C10356 + C6892 * C10353 +
             (C6132 * C7549 + C32540 * C7550) * C10357 +
             (C6132 * C7551 + C32540 * C7552) * C32919) *
                C32916) *
               C531 -
           ((C11361 + C11362 + C11363 + C11364 + C11365 + C11366) * C32916 +
            (C11360 + C11359 + C11358 + C11357 + C11356 + C11355) * C32939 +
            (C11354 + C11353 + C11352 + C11351 + C11350 + C11349) * C32951) *
               C530) *
              C441) *
         C32577) /
            (p * q * std::sqrt(p + q));
    d2ee[72] +=
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             (((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C127 +
                C115 * C121 + C103 * C128 + C116 * C122 + C104 * C129 +
                C117 * C123 + C105 * C130) *
                   C118 +
               (C113 * C131 + C101 * C140 + C114 * C132 + C102 * C141 +
                C115 * C133 + C103 * C142 + C116 * C134 + C104 * C143 +
                C117 * C135 + C105 * C144) *
                   C32644) *
                  C32633 * C32603 * C32589 * C110 -
              ((C117 * C136 + C105 * C145 + C116 * C135 + C104 * C144 +
                C115 * C134 + C103 * C143 + C114 * C133 + C102 * C142 +
                C113 * C132 + C101 * C141) *
                   C32644 +
               (C117 * C124 + C105 * C137 + C116 * C123 + C104 * C130 +
                C115 * C122 + C103 * C129 + C114 * C121 + C102 * C128 +
                C113 * C120 + C101 * C127) *
                   C118) *
                  C32633 * C32603 * C32589 * C111 +
              ((C113 * C121 + C101 * C128 + C114 * C122 + C102 * C129 +
                C115 * C123 + C103 * C130 + C116 * C124 + C104 * C137 +
                C117 * C125 + C105 * C138) *
                   C118 +
               (C113 * C133 + C101 * C142 + C114 * C134 + C102 * C143 +
                C115 * C135 + C103 * C144 + C116 * C136 + C104 * C145 +
                C117 * C139 + C105 * C146) *
                   C32644) *
                  C32633 * C32603 * C32589 * C112) +
         std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             (((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C127 +
                C115 * C121 + C103 * C128 + C116 * C122 + C104 * C129 +
                C117 * C123 + C105 * C130) *
                   C118 +
               (C113 * C131 + C101 * C140 + C114 * C132 + C102 * C141 +
                C115 * C133 + C103 * C142 + C116 * C134 + C104 * C143 +
                C117 * C135 + C105 * C144) *
                   C32644) *
                  C32633 * C32603 * C209 -
              ((C117 * C223 + C105 * C243 + C116 * C224 + C104 * C244 +
                C115 * C225 + C103 * C245 + C114 * C226 + C102 * C246 +
                C113 * C227 + C101 * C247) *
                   C32644 +
               (C117 * C213 + C105 * C228 + C116 * C214 + C104 * C229 +
                C115 * C215 + C103 * C230 + C114 * C216 + C102 * C231 +
                C113 * C217 + C101 * C232) *
                   C118) *
                  C32633 * C32603 * C210 +
              ((C113 * C218 + C101 * C233 + C114 * C219 + C102 * C234 +
                C115 * C220 + C103 * C235 + C116 * C221 + C104 * C236 +
                C117 * C222 + C105 * C237) *
                   C118 +
               (C113 * C238 + C101 * C248 + C114 * C239 + C102 * C249 +
                C115 * C240 + C103 * C250 + C116 * C241 + C104 * C251 +
                C117 * C242 + C105 * C252) *
                   C32644) *
                  C32633 * C32603 * C211) *
             C32577) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C127 +
            C115 * C121 + C103 * C128 + C116 * C122 + C104 * C129 +
            C117 * C123 + C105 * C130) *
               C118 +
           (C113 * C131 + C101 * C140 + C114 * C132 + C102 * C141 +
            C115 * C133 + C103 * C142 + C116 * C134 + C104 * C143 +
            C117 * C135 + C105 * C144) *
               C32644) *
              C32633 * C315 -
          ((C117 * C328 + C105 * C348 + C116 * C329 + C104 * C349 +
            C115 * C330 + C103 * C350 + C114 * C331 + C102 * C351 +
            C113 * C332 + C101 * C352) *
               C32644 +
           (C117 * C318 + C105 * C333 + C116 * C319 + C104 * C334 +
            C115 * C320 + C103 * C335 + C114 * C321 + C102 * C336 +
            C113 * C322 + C101 * C337) *
               C118) *
              C32633 * C316 +
          ((C113 * C323 + C101 * C338 + C114 * C324 + C102 * C339 +
            C115 * C325 + C103 * C340 + C116 * C326 + C104 * C341 +
            C117 * C327 + C105 * C342) *
               C118 +
           (C113 * C343 + C101 * C353 + C114 * C344 + C102 * C354 +
            C115 * C345 + C103 * C355 + C116 * C346 + C104 * C356 +
            C117 * C347 + C105 * C357) *
               C32644) *
              C32633 * C317) *
         C32589 * C32577) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C754 * C119 + C748 * C126 + C755 * C120 + C749 * C127 +
             C756 * C121 + C32905 * C128) *
                C118 +
            (C754 * C131 + C748 * C140 + C755 * C132 + C749 * C141 +
             C756 * C133 + C32905 * C142) *
                C32644) *
               C32951 +
           ((C754 * C217 + C748 * C232 + C755 * C216 + C749 * C231 +
             C756 * C215 + C32905 * C230) *
                C118 +
            (C754 * C227 + C748 * C247 + C755 * C226 + C749 * C246 +
             C756 * C225 + C32905 * C245) *
                C32644) *
               C32939 +
           ((C754 * C218 + C748 * C233 + C755 * C219 + C749 * C234 +
             C756 * C220 + C32905 * C235) *
                C118 +
            (C754 * C238 + C748 * C248 + C755 * C239 + C749 * C249 +
             C756 * C240 + C32905 * C250) *
                C32644) *
               C32916) *
              C32603 * C32589 * C110 -
          (((C756 * C241 + C32905 * C251 + C755 * C240 + C749 * C250 +
             C754 * C239 + C748 * C249) *
                C32644 +
            (C756 * C221 + C32905 * C236 + C755 * C220 + C749 * C235 +
             C754 * C219 + C748 * C234) *
                C118) *
               C32916 +
           ((C756 * C224 + C32905 * C244 + C755 * C225 + C749 * C245 +
             C754 * C226 + C748 * C246) *
                C32644 +
            (C756 * C214 + C32905 * C229 + C755 * C215 + C749 * C230 +
             C754 * C216 + C748 * C231) *
                C118) *
               C32939 +
           ((C756 * C134 + C32905 * C143 + C755 * C133 + C749 * C142 +
             C754 * C132 + C748 * C141) *
                C32644 +
            (C756 * C122 + C32905 * C129 + C755 * C121 + C749 * C128 +
             C754 * C120 + C748 * C127) *
                C118) *
               C32951) *
              C32603 * C32589 * C111 +
          (((C754 * C121 + C748 * C128 + C755 * C122 + C749 * C129 +
             C756 * C123 + C32905 * C130) *
                C118 +
            (C754 * C133 + C748 * C142 + C755 * C134 + C749 * C143 +
             C756 * C135 + C32905 * C144) *
                C32644) *
               C32951 +
           ((C754 * C215 + C748 * C230 + C755 * C214 + C749 * C229 +
             C756 * C213 + C32905 * C228) *
                C118 +
            (C754 * C225 + C748 * C245 + C755 * C224 + C749 * C244 +
             C756 * C223 + C32905 * C243) *
                C32644) *
               C32939 +
           ((C754 * C220 + C748 * C235 + C755 * C221 + C749 * C236 +
             C756 * C222 + C32905 * C237) *
                C118 +
            (C754 * C240 + C748 * C250 + C755 * C241 + C749 * C251 +
             C756 * C242 + C32905 * C252) *
                C32644) *
               C32916) *
              C32603 * C32589 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C754 * C119 + C748 * C126 + C755 * C120 + C749 * C127 +
             C756 * C121 + C32905 * C128) *
                C118 +
            (C754 * C131 + C748 * C140 + C755 * C132 + C749 * C141 +
             C756 * C133 + C32905 * C142) *
                C32644) *
               C32951 +
           ((C928 + C929 + C930) * C118 + (C931 + C932 + C933) * C32644) *
               C32939 +
           C952 * C32916) *
              C32603 * C209 -
          (((C940 + C941 + C942) * C32644 + (C943 + C944 + C945) * C118) *
               C32916 +
           ((C939 + C938 + C937) * C32644 + (C936 + C935 + C934) * C118) *
               C32939 +
           ((C933 + C932 + C931) * C32644 + (C930 + C929 + C928) * C118) *
               C32951) *
              C32603 * C210 +
          (C952 * C32951 +
           ((C945 + C944 + C943) * C118 + (C942 + C941 + C940) * C32644) *
               C32939 +
           ((C754 * C870 + C748 * C879 + C755 * C871 + C749 * C880 +
             C756 * C872 + C32905 * C881) *
                C118 +
            (C754 * C882 + C748 * C888 + C755 * C883 + C749 * C889 +
             C756 * C884 + C32905 * C890) *
                C32644) *
               C32916) *
              C32603 * C211) *
         C32577) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C754 * C119 + C748 * C126 + C755 * C120 + C749 * C127 +
             C756 * C121 + C32905 * C128) *
                C118 +
            (C754 * C131 + C748 * C140 + C755 * C132 + C749 * C141 +
             C756 * C133 + C32905 * C142) *
                C32644) *
               C32951 +
           ((C928 + C929 + C930) * C118 + (C931 + C932 + C933) * C32644) *
               C32939 +
           C952 * C32916) *
              C315 -
          (((C756 * C1071 + C32905 * C1089 + C755 * C1072 + C749 * C1090 +
             C754 * C1073 + C748 * C1091) *
                C32644 +
            (C756 * C1062 + C32905 * C1074 + C755 * C1063 + C749 * C1075 +
             C754 * C1064 + C748 * C1076) *
                C118) *
               C32916 +
           ((C756 * C630 + C32905 * C635 + C755 * C629 + C749 * C634 +
             C754 * C628 + C748 * C633) *
                C32644 +
            (C756 * C620 + C32905 * C625 + C755 * C619 + C749 * C624 +
             C754 * C618 + C748 * C623) *
                C118) *
               C32939 +
           ((C756 * C330 + C32905 * C350 + C755 * C331 + C749 * C351 +
             C754 * C332 + C748 * C352) *
                C32644 +
            (C756 * C320 + C32905 * C335 + C755 * C321 + C749 * C336 +
             C754 * C322 + C748 * C337) *
                C118) *
               C32951) *
              C316 +
          (((C754 * C323 + C748 * C338 + C755 * C324 + C749 * C339 +
             C756 * C325 + C32905 * C340) *
                C118 +
            (C754 * C343 + C748 * C353 + C755 * C344 + C749 * C354 +
             C756 * C345 + C32905 * C355) *
                C32644) *
               C32951 +
           ((C754 * C1065 + C748 * C1077 + C755 * C1066 + C749 * C1078 +
             C756 * C1067 + C32905 * C1079) *
                C118 +
            (C754 * C1080 + C748 * C1092 + C755 * C1081 + C749 * C1093 +
             C756 * C1082 + C32905 * C1094) *
                C32644) *
               C32939 +
           ((C754 * C1068 + C748 * C1083 + C755 * C1069 + C749 * C1084 +
             C756 * C1070 + C32905 * C1085) *
                C118 +
            (C754 * C1086 + C748 * C1095 + C755 * C1087 + C749 * C1096 +
             C756 * C1088 + C32905 * C1097) *
                C32644) *
               C32916) *
              C317) *
         C32589 * C32577) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C5270 * C119 + C32948 * C126 + C5271 * C120 + C32935 * C127 +
             C5272 * C121 + C32905 * C128) *
                C118 +
            (C5270 * C131 + C32948 * C140 + C5271 * C132 + C32935 * C141 +
             C5272 * C133 + C32905 * C142) *
                C32644) *
               C5267 +
           ((C5270 * C217 + C32948 * C232 + C5271 * C216 + C32935 * C231 +
             C5272 * C215 + C32905 * C230) *
                C118 +
            (C5270 * C227 + C32948 * C247 + C5271 * C226 + C32935 * C246 +
             C5272 * C225 + C32905 * C245) *
                C32644) *
               C5268 +
           ((C5270 * C218 + C32948 * C233 + C5271 * C219 + C32935 * C234 +
             C5272 * C220 + C32905 * C235) *
                C118 +
            (C5270 * C238 + C32948 * C248 + C5271 * C239 + C32935 * C249 +
             C5272 * C240 + C32905 * C250) *
                C32644) *
               C32916) *
              C32603 * C32589 * C110 -
          (((C5272 * C241 + C32905 * C251 + C5271 * C240 + C32935 * C250 +
             C5270 * C239 + C32948 * C249) *
                C32644 +
            (C5272 * C221 + C32905 * C236 + C5271 * C220 + C32935 * C235 +
             C5270 * C219 + C32948 * C234) *
                C118) *
               C32916 +
           ((C5272 * C224 + C32905 * C244 + C5271 * C225 + C32935 * C245 +
             C5270 * C226 + C32948 * C246) *
                C32644 +
            (C5272 * C214 + C32905 * C229 + C5271 * C215 + C32935 * C230 +
             C5270 * C216 + C32948 * C231) *
                C118) *
               C5268 +
           ((C5272 * C134 + C32905 * C143 + C5271 * C133 + C32935 * C142 +
             C5270 * C132 + C32948 * C141) *
                C32644 +
            (C5272 * C122 + C32905 * C129 + C5271 * C121 + C32935 * C128 +
             C5270 * C120 + C32948 * C127) *
                C118) *
               C5267) *
              C32603 * C32589 * C111 +
          (((C5270 * C121 + C32948 * C128 + C5271 * C122 + C32935 * C129 +
             C5272 * C123 + C32905 * C130) *
                C118 +
            (C5270 * C133 + C32948 * C142 + C5271 * C134 + C32935 * C143 +
             C5272 * C135 + C32905 * C144) *
                C32644) *
               C5267 +
           ((C5270 * C215 + C32948 * C230 + C5271 * C214 + C32935 * C229 +
             C5272 * C213 + C32905 * C228) *
                C118 +
            (C5270 * C225 + C32948 * C245 + C5271 * C224 + C32935 * C244 +
             C5272 * C223 + C32905 * C243) *
                C32644) *
               C5268 +
           ((C5270 * C220 + C32948 * C235 + C5271 * C221 + C32935 * C236 +
             C5272 * C222 + C32905 * C237) *
                C118 +
            (C5270 * C240 + C32948 * C250 + C5271 * C241 + C32935 * C251 +
             C5272 * C242 + C32905 * C252) *
                C32644) *
               C32916) *
              C32603 * C32589 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C5270 * C119 + C32948 * C126 + C5271 * C120 + C32935 * C127 +
             C5272 * C121 + C32905 * C128) *
                C118 +
            (C5270 * C131 + C32948 * C140 + C5271 * C132 + C32935 * C141 +
             C5272 * C133 + C32905 * C142) *
                C32644) *
               C5267 +
           ((C5420 + C5421 + C5422) * C118 + (C5423 + C5424 + C5425) * C32644) *
               C5268 +
           C5444 * C32916) *
              C32603 * C209 -
          (((C5432 + C5433 + C5434) * C32644 + (C5435 + C5436 + C5437) * C118) *
               C32916 +
           ((C5431 + C5430 + C5429) * C32644 + (C5428 + C5427 + C5426) * C118) *
               C5268 +
           ((C5425 + C5424 + C5423) * C32644 + (C5422 + C5421 + C5420) * C118) *
               C5267) *
              C32603 * C210 +
          (C5444 * C5267 +
           ((C5437 + C5436 + C5435) * C118 + (C5434 + C5433 + C5432) * C32644) *
               C5268 +
           ((C5270 * C870 + C32948 * C879 + C5271 * C871 + C32935 * C880 +
             C5272 * C872 + C32905 * C881) *
                C118 +
            (C5270 * C882 + C32948 * C888 + C5271 * C883 + C32935 * C889 +
             C5272 * C884 + C32905 * C890) *
                C32644) *
               C32916) *
              C32603 * C211) *
         C32577) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C5270 * C119 + C32948 * C126 + C5271 * C120 + C32935 * C127 +
             C5272 * C121 + C32905 * C128) *
                C118 +
            (C5270 * C131 + C32948 * C140 + C5271 * C132 + C32935 * C141 +
             C5272 * C133 + C32905 * C142) *
                C32644) *
               C5267 +
           ((C5420 + C5421 + C5422) * C118 + (C5423 + C5424 + C5425) * C32644) *
               C5268 +
           C5444 * C32916) *
              C315 -
          (((C5272 * C1071 + C32905 * C1089 + C5271 * C1072 + C32935 * C1090 +
             C5270 * C1073 + C32948 * C1091) *
                C32644 +
            (C5272 * C1062 + C32905 * C1074 + C5271 * C1063 + C32935 * C1075 +
             C5270 * C1064 + C32948 * C1076) *
                C118) *
               C32916 +
           ((C5272 * C630 + C32905 * C635 + C5271 * C629 + C32935 * C634 +
             C5270 * C628 + C32948 * C633) *
                C32644 +
            (C5272 * C620 + C32905 * C625 + C5271 * C619 + C32935 * C624 +
             C5270 * C618 + C32948 * C623) *
                C118) *
               C5268 +
           ((C5272 * C330 + C32905 * C350 + C5271 * C331 + C32935 * C351 +
             C5270 * C332 + C32948 * C352) *
                C32644 +
            (C5272 * C320 + C32905 * C335 + C5271 * C321 + C32935 * C336 +
             C5270 * C322 + C32948 * C337) *
                C118) *
               C5267) *
              C316 +
          (((C5270 * C323 + C32948 * C338 + C5271 * C324 + C32935 * C339 +
             C5272 * C325 + C32905 * C340) *
                C118 +
            (C5270 * C343 + C32948 * C353 + C5271 * C344 + C32935 * C354 +
             C5272 * C345 + C32905 * C355) *
                C32644) *
               C5267 +
           ((C5270 * C1065 + C32948 * C1077 + C5271 * C1066 + C32935 * C1078 +
             C5272 * C1067 + C32905 * C1079) *
                C118 +
            (C5270 * C1080 + C32948 * C1092 + C5271 * C1081 + C32935 * C1093 +
             C5272 * C1082 + C32905 * C1094) *
                C32644) *
               C5268 +
           ((C5270 * C1068 + C32948 * C1083 + C5271 * C1069 + C32935 * C1084 +
             C5272 * C1070 + C32905 * C1085) *
                C118 +
            (C5270 * C1086 + C32948 * C1095 + C5271 * C1087 + C32935 * C1096 +
             C5272 * C1088 + C32905 * C1097) *
                C32644) *
               C32916) *
              C317) *
         C32589 * C32577) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C6132 * C119 + C32540 * C126) * C118 +
            (C6132 * C131 + C32540 * C140) * C32644) *
               C6127 +
           ((C6132 * C217 + C32540 * C232) * C118 +
            (C6132 * C227 + C32540 * C247) * C32644) *
               C6128 +
           ((C6132 * C218 + C32540 * C233) * C118 +
            (C6132 * C238 + C32540 * C248) * C32644) *
               C6129 +
           ((C6132 * C869 + C32540 * C878) * C118 +
            (C6132 * C875 + C32540 * C887) * C32644) *
               C6130 +
           ((C6132 * C870 + C32540 * C879) * C118 +
            (C6132 * C882 + C32540 * C888) * C32644) *
               C6131) *
              C32603 * C32589 * C110 -
          (((C6132 * C883 + C32540 * C889) * C32644 +
            (C6132 * C871 + C32540 * C880) * C118) *
               C6131 +
           ((C6132 * C874 + C32540 * C886) * C32644 +
            (C6132 * C868 + C32540 * C877) * C118) *
               C6130 +
           ((C6132 * C239 + C32540 * C249) * C32644 +
            (C6132 * C219 + C32540 * C234) * C118) *
               C6129 +
           ((C6132 * C226 + C32540 * C246) * C32644 +
            (C6132 * C216 + C32540 * C231) * C118) *
               C6128 +
           ((C6132 * C132 + C32540 * C141) * C32644 +
            (C6132 * C120 + C32540 * C127) * C118) *
               C6127) *
              C32603 * C32589 * C111 +
          (((C6132 * C121 + C32540 * C128) * C118 +
            (C6132 * C133 + C32540 * C142) * C32644) *
               C6127 +
           ((C6132 * C215 + C32540 * C230) * C118 +
            (C6132 * C225 + C32540 * C245) * C32644) *
               C6128 +
           ((C6132 * C220 + C32540 * C235) * C118 +
            (C6132 * C240 + C32540 * C250) * C32644) *
               C6129 +
           ((C6132 * C867 + C32540 * C876) * C118 +
            (C6132 * C873 + C32540 * C885) * C32644) *
               C6130 +
           ((C6132 * C872 + C32540 * C881) * C118 +
            (C6132 * C884 + C32540 * C890) * C32644) *
               C6131) *
              C32603 * C32589 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C6132 * C119 + C32540 * C126) * C118 +
            (C6132 * C131 + C32540 * C140) * C32644) *
               C6127 +
           (C6234 + C6235) * C6128 + C6244 * C6129 + C6245 * C6130 +
           C6246 * C6131) *
              C32603 * C209 -
          ((C6242 + C6243) * C6131 + (C6241 + C6240) * C6130 +
           (C6239 + C6238) * C6129 + (C6237 + C6236) * C6128 +
           (C6235 + C6234) * C6127) *
              C32603 * C210 +
          (C6244 * C6127 + C6245 * C6128 + C6246 * C6129 +
           (C6243 + C6242) * C6130 +
           ((C6132 * C6196 + C32540 * C6199) * C118 +
            (C6132 * C6200 + C32540 * C6202) * C32644) *
               C6131) *
              C32603 * C211) *
         C32577) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C6132 * C119 + C32540 * C126) * C118 +
            (C6132 * C131 + C32540 * C140) * C32644) *
               C6127 +
           (C6234 + C6235) * C6128 + C6244 * C6129 + C6245 * C6130 +
           C6246 * C6131) *
              C315 -
          (((C6132 * C6311 + C32540 * C6317) * C32644 +
            (C6132 * C6308 + C32540 * C6312) * C118) *
               C6131 +
           ((C6132 * C1586 + C32540 * C1589) * C32644 +
            (C6132 * C1580 + C32540 * C1583) * C118) *
               C6130 +
           ((C6132 * C1073 + C32540 * C1091) * C32644 +
            (C6132 * C1064 + C32540 * C1076) * C118) *
               C6129 +
           ((C6132 * C628 + C32540 * C633) * C32644 +
            (C6132 * C618 + C32540 * C623) * C118) *
               C6128 +
           ((C6132 * C332 + C32540 * C352) * C32644 +
            (C6132 * C322 + C32540 * C337) * C118) *
               C6127) *
              C316 +
          (((C6132 * C323 + C32540 * C338) * C118 +
            (C6132 * C343 + C32540 * C353) * C32644) *
               C6127 +
           ((C6132 * C1065 + C32540 * C1077) * C118 +
            (C6132 * C1080 + C32540 * C1092) * C32644) *
               C6128 +
           ((C6132 * C1068 + C32540 * C1083) * C118 +
            (C6132 * C1086 + C32540 * C1095) * C32644) *
               C6129 +
           ((C6132 * C6309 + C32540 * C6313) * C118 +
            (C6132 * C6314 + C32540 * C6318) * C32644) *
               C6130 +
           ((C6132 * C6310 + C32540 * C6315) * C118 +
            (C6132 * C6316 + C32540 * C6319) * C32644) *
               C6131) *
              C317) *
         C32589 * C32577) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C5270 * C119 + C32948 * C126 + C5271 * C120 + C32935 * C127 +
            C5272 * C121 + C32905 * C128) *
               C10355 +
           (C5270 * C131 + C32948 * C140 + C5271 * C132 + C32935 * C141 +
            C5272 * C133 + C32905 * C142) *
               C10352 +
           (C5270 * C322 + C32948 * C337 + C5271 * C321 + C32935 * C336 +
            C5272 * C320 + C32905 * C335) *
               C10356 +
           (C5270 * C332 + C32948 * C352 + C5271 * C331 + C32935 * C351 +
            C5272 * C330 + C32905 * C350) *
               C10353 +
           (C5270 * C323 + C32948 * C338 + C5271 * C324 + C32935 * C339 +
            C5272 * C325 + C32905 * C340) *
               C10357 +
           (C5270 * C343 + C32948 * C353 + C5271 * C344 + C32935 * C354 +
            C5272 * C345 + C32905 * C355) *
               C32919) *
              C32633 * C32603 * C32589 * C110 -
          ((C5272 * C346 + C32905 * C356 + C5271 * C345 + C32935 * C355 +
            C5270 * C344 + C32948 * C354) *
               C32919 +
           (C5272 * C326 + C32905 * C341 + C5271 * C325 + C32935 * C340 +
            C5270 * C324 + C32948 * C339) *
               C10357 +
           (C5272 * C329 + C32905 * C349 + C5271 * C330 + C32935 * C350 +
            C5270 * C331 + C32948 * C351) *
               C10353 +
           (C5272 * C319 + C32905 * C334 + C5271 * C320 + C32935 * C335 +
            C5270 * C321 + C32948 * C336) *
               C10356 +
           (C5272 * C134 + C32905 * C143 + C5271 * C133 + C32935 * C142 +
            C5270 * C132 + C32948 * C141) *
               C10352 +
           (C5272 * C122 + C32905 * C129 + C5271 * C121 + C32935 * C128 +
            C5270 * C120 + C32948 * C127) *
               C10355) *
              C32633 * C32603 * C32589 * C111 +
          ((C5270 * C121 + C32948 * C128 + C5271 * C122 + C32935 * C129 +
            C5272 * C123 + C32905 * C130) *
               C10355 +
           (C5270 * C133 + C32948 * C142 + C5271 * C134 + C32935 * C143 +
            C5272 * C135 + C32905 * C144) *
               C10352 +
           (C5270 * C320 + C32948 * C335 + C5271 * C319 + C32935 * C334 +
            C5272 * C318 + C32905 * C333) *
               C10356 +
           (C5270 * C330 + C32948 * C350 + C5271 * C329 + C32935 * C349 +
            C5272 * C328 + C32905 * C348) *
               C10353 +
           (C5270 * C325 + C32948 * C340 + C5271 * C326 + C32935 * C341 +
            C5272 * C327 + C32905 * C342) *
               C10357 +
           (C5270 * C345 + C32948 * C355 + C5271 * C346 + C32935 * C356 +
            C5272 * C347 + C32905 * C357) *
               C32919) *
              C32633 * C32603 * C32589 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C5270 * C119 + C32948 * C126 + C5271 * C120 + C32935 * C127 +
            C5272 * C121 + C32905 * C128) *
               C10355 +
           (C5270 * C131 + C32948 * C140 + C5271 * C132 + C32935 * C141 +
            C5272 * C133 + C32905 * C142) *
               C10352 +
           (C5270 * C322 + C32948 * C337 + C5271 * C321 + C32935 * C336 +
            C5272 * C320 + C32905 * C335) *
               C10356 +
           (C5270 * C332 + C32948 * C352 + C5271 * C331 + C32935 * C351 +
            C5272 * C330 + C32905 * C350) *
               C10353 +
           (C5270 * C323 + C32948 * C338 + C5271 * C324 + C32935 * C339 +
            C5272 * C325 + C32905 * C340) *
               C10357 +
           (C5270 * C343 + C32948 * C353 + C5271 * C344 + C32935 * C354 +
            C5272 * C345 + C32905 * C355) *
               C32919) *
              C32633 * C32603 * C209 -
          ((C5272 * C1082 + C32905 * C1094 + C5271 * C1081 + C32935 * C1093 +
            C5270 * C1080 + C32948 * C1092) *
               C32919 +
           (C5272 * C1067 + C32905 * C1079 + C5271 * C1066 + C32935 * C1078 +
            C5270 * C1065 + C32948 * C1077) *
               C10357 +
           (C6059 + C6060 + C6061) * C10353 + (C6062 + C6063 + C6064) * C10356 +
           (C5425 + C5424 + C5423) * C10352 +
           (C5422 + C5421 + C5420) * C10355) *
              C32633 * C32603 * C210 +
          (C5440 * C10355 + C5441 * C10352 + (C6058 + C6057 + C6056) * C10356 +
           (C6055 + C6054 + C6053) * C10353 +
           (C5270 * C1068 + C32948 * C1083 + C5271 * C1069 + C32935 * C1084 +
            C5272 * C1070 + C32905 * C1085) *
               C10357 +
           (C5270 * C1086 + C32948 * C1095 + C5271 * C1087 + C32935 * C1096 +
            C5272 * C1088 + C32905 * C1097) *
               C32919) *
              C32633 * C32603 * C211) *
         C32577) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C5270 * C119 + C32948 * C126 + C5271 * C120 + C32935 * C127 +
            C5272 * C121 + C32905 * C128) *
               C10355 +
           (C5270 * C131 + C32948 * C140 + C5271 * C132 + C32935 * C141 +
            C5272 * C133 + C32905 * C142) *
               C10352 +
           (C10615 + C10616 + C10617) * C10356 +
           (C10618 + C10619 + C10620) * C10353 + C10635 * C10357 +
           C10636 * C32919) *
              C32633 * C315 -
          ((C10627 + C10628 + C10629) * C32919 +
           (C10630 + C10631 + C10632) * C10357 +
           (C10626 + C10625 + C10624) * C10353 +
           (C10623 + C10622 + C10621) * C10356 +
           (C10620 + C10619 + C10618) * C10352 +
           (C10617 + C10616 + C10615) * C10355) *
              C32633 * C316 +
          (C10635 * C10355 + C10636 * C10352 +
           (C10632 + C10631 + C10630) * C10356 +
           (C10629 + C10628 + C10627) * C10353 +
           (C5270 * C1967 + C32948 * C1976 + C5271 * C1968 + C32935 * C1977 +
            C5272 * C1969 + C32905 * C1978) *
               C10357 +
           (C5270 * C1979 + C32948 * C1985 + C5271 * C1980 + C32935 * C1986 +
            C5272 * C1981 + C32905 * C1987) *
               C32919) *
              C32633 * C317) *
         C32589 * C32577) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C6132 * C119 + C32540 * C126) * C10355 +
            (C6132 * C131 + C32540 * C140) * C10352 + C7046 * C10356 +
            C7047 * C10353 + C7048 * C10357 + C7049 * C32919) *
               C32951 +
           (C6224 * C10355 + C6225 * C10352 + C6634 * C10356 + C6633 * C10353 +
            C6887 * C10357 + C6888 * C32919) *
               C32939 +
           (C6226 * C10355 + C6227 * C10352 + C6632 * C10356 + C6631 * C10353 +
            C6890 * C10357 + C6891 * C32919) *
               C32916) *
              C32603 * C32589 * C110 -
          ((C7233 * C32919 + C7232 * C10357 + C7231 * C10353 + C7230 * C10356 +
            C6426 * C10352 + C6425 * C10355) *
               C32916 +
           (C7229 * C32919 + C7228 * C10357 + C7227 * C10353 + C7226 * C10356 +
            C6424 * C10352 + C6423 * C10355) *
               C32939 +
           (C7403 * C32919 + C7402 * C10357 + C7401 * C10353 + C7400 * C10356 +
            (C6132 * C132 + C32540 * C141) * C10352 +
            (C6132 * C120 + C32540 * C127) * C10355) *
               C32951) *
              C32603 * C32589 * C111 +
          (((C6132 * C121 + C32540 * C128) * C10355 +
            (C6132 * C133 + C32540 * C142) * C10352 +
            (C6132 * C320 + C32540 * C335) * C10356 +
            (C6132 * C330 + C32540 * C350) * C10353 +
            (C6132 * C325 + C32540 * C340) * C10357 +
            (C6132 * C345 + C32540 * C355) * C32919) *
               C32951 +
           ((C6132 * C215 + C32540 * C230) * C10355 +
            (C6132 * C225 + C32540 * C245) * C10352 +
            (C6132 * C620 + C32540 * C625) * C10356 +
            (C6132 * C630 + C32540 * C635) * C10353 +
            (C6132 * C1067 + C32540 * C1079) * C10357 +
            (C6132 * C1082 + C32540 * C1094) * C32919) *
               C32939 +
           ((C6132 * C220 + C32540 * C235) * C10355 +
            (C6132 * C240 + C32540 * C250) * C10352 +
            (C6132 * C1062 + C32540 * C1074) * C10356 +
            (C6132 * C1071 + C32540 * C1089) * C10353 +
            (C6132 * C1070 + C32540 * C1085) * C10357 +
            (C6132 * C1088 + C32540 * C1097) * C32919) *
               C32916) *
              C32603 * C32589 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C6132 * C119 + C32540 * C126) * C10355 +
            (C6132 * C131 + C32540 * C140) * C10352 + C7046 * C10356 +
            C7047 * C10353 + C7048 * C10357 + C7049 * C32919) *
               C32951 +
           (C11349 + C11350 + C11351 + C11352 + C11353 + C11354) * C32939 +
           C11371 * C32916) *
              C32603 * C209 -
          ((C11361 + C11362 + C11363 + C11364 + C11365 + C11366) * C32916 +
           (C11360 + C11359 + C11358 + C11357 + C11356 + C11355) * C32939 +
           (C11354 + C11353 + C11352 + C11351 + C11350 + C11349) * C32951) *
              C32603 * C210 +
          (C11371 * C32951 +
           (C11366 + C11365 + C11364 + C11363 + C11362 + C11361) * C32939 +
           (C6230 * C10355 + C6231 * C10352 + C6628 * C10356 + C6627 * C10353 +
            (C6132 * C6310 + C32540 * C6315) * C10357 +
            (C6132 * C6316 + C32540 * C6319) * C32919) *
               C32916) *
              C32603 * C211) *
         C32577) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C6132 * C119 + C32540 * C126) * C10355 +
            (C6132 * C131 + C32540 * C140) * C10352 + C7046 * C10356 +
            C7047 * C10353 + C7048 * C10357 + C7049 * C32919) *
               C32951 +
           (C11349 + C11350 + C11351 + C11352 + C11353 + C11354) * C32939 +
           C11371 * C32916) *
              C315 -
          ((C7050 * C32919 + C7051 * C10357 + C6891 * C10353 + C6890 * C10356 +
            C6631 * C10352 + C6632 * C10355) *
               C32916 +
           (C7052 * C32919 + C7053 * C10357 + C6888 * C10353 + C6887 * C10356 +
            C6633 * C10352 + C6634 * C10355) *
               C32939 +
           (C7054 * C32919 + C7055 * C10357 + C7049 * C10353 + C7048 * C10356 +
            C7047 * C10352 + C7046 * C10355) *
               C32951) *
              C316 +
          ((C7048 * C10355 + C7049 * C10352 + C7055 * C10356 + C7054 * C10353 +
            (C6132 * C1967 + C32540 * C1976) * C10357 +
            (C6132 * C1979 + C32540 * C1985) * C32919) *
               C32951 +
           (C6887 * C10355 + C6888 * C10352 + C7053 * C10356 + C7052 * C10353 +
            (C6132 * C7014 + C32540 * C7018) * C10357 +
            (C6132 * C7019 + C32540 * C7023) * C32919) *
               C32939 +
           (C6890 * C10355 + C6891 * C10352 + C7051 * C10356 + C7050 * C10353 +
            (C6132 * C7015 + C32540 * C7020) * C10357 +
            (C6132 * C7021 + C32540 * C7024) * C32919) *
               C32916) *
              C317) *
         C32589 * C32577) /
            (p * q * std::sqrt(p + q));
    d2ee[73] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C754 * C119 + C748 * C126 + C755 * C120 + C749 * C127 +
              C756 * C121 + C32905 * C128) *
                 C118 +
             (C754 * C131 + C748 * C140 + C755 * C132 + C749 * C141 +
              C756 * C133 + C32905 * C142) *
                 C32644) *
                C32951 +
            ((C928 + C929 + C930) * C118 + (C931 + C932 + C933) * C32644) *
                C32939 +
            C952 * C32916) *
               C530 -
           (((C756 * C1071 + C32905 * C1089 + C755 * C1072 + C749 * C1090 +
              C754 * C1073 + C748 * C1091) *
                 C32644 +
             (C756 * C1062 + C32905 * C1074 + C755 * C1063 + C749 * C1075 +
              C754 * C1064 + C748 * C1076) *
                 C118) *
                C32916 +
            ((C756 * C630 + C32905 * C635 + C755 * C629 + C749 * C634 +
              C754 * C628 + C748 * C633) *
                 C32644 +
             (C756 * C620 + C32905 * C625 + C755 * C619 + C749 * C624 +
              C754 * C618 + C748 * C623) *
                 C118) *
                C32939 +
            ((C756 * C330 + C32905 * C350 + C755 * C331 + C749 * C351 +
              C754 * C332 + C748 * C352) *
                 C32644 +
             (C756 * C320 + C32905 * C335 + C755 * C321 + C749 * C336 +
              C754 * C322 + C748 * C337) *
                 C118) *
                C32951) *
               C531) *
              C32589 * C442 +
          ((((C754 * C321 + C748 * C336 + C755 * C320 + C749 * C335 +
              C756 * C319 + C32905 * C334) *
                 C118 +
             (C754 * C331 + C748 * C351 + C755 * C330 + C749 * C350 +
              C756 * C329 + C32905 * C349) *
                 C32644) *
                C32951 +
            ((C754 * C619 + C748 * C624 + C755 * C620 + C749 * C625 +
              C756 * C621 + C32905 * C626) *
                 C118 +
             (C754 * C629 + C748 * C634 + C755 * C630 + C749 * C635 +
              C756 * C631 + C32905 * C636) *
                 C32644) *
                C32939 +
            ((C754 * C1063 + C748 * C1075 + C755 * C1062 + C749 * C1074 +
              C756 * C1430 + C32905 * C1431) *
                 C118 +
             (C754 * C1072 + C748 * C1090 + C755 * C1071 + C749 * C1089 +
              C756 * C1432 + C32905 * C1433) *
                 C32644) *
                C32916) *
               C531 -
           (((C1284 + C1283 + C1282) * C32644 +
             (C1281 + C1280 + C1279) * C118) *
                C32916 +
            ((C1278 + C1277 + C1276) * C32644 +
             (C1275 + C1274 + C1273) * C118) *
                C32939 +
            ((C756 * C134 + C32905 * C143 + C755 * C133 + C749 * C142 +
              C754 * C132 + C748 * C141) *
                 C32644 +
             (C756 * C122 + C32905 * C129 + C755 * C121 + C749 * C128 +
              C754 * C120 + C748 * C127) *
                 C118) *
                C32951) *
               C530) *
              C32589 * C443)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C127 +
             C115 * C121 + C103 * C128 + C116 * C122 + C104 * C129 +
             C117 * C123 + C105 * C130) *
                C118 +
            (C113 * C131 + C101 * C140 + C114 * C132 + C102 * C141 +
             C115 * C133 + C103 * C142 + C116 * C134 + C104 * C143 +
             C117 * C135 + C105 * C144) *
                C32644) *
               C32633 * C530 -
           ((C117 * C328 + C105 * C348 + C116 * C329 + C104 * C349 +
             C115 * C330 + C103 * C350 + C114 * C331 + C102 * C351 +
             C113 * C332 + C101 * C352) *
                C32644 +
            (C117 * C318 + C105 * C333 + C116 * C319 + C104 * C334 +
             C115 * C320 + C103 * C335 + C114 * C321 + C102 * C336 +
             C113 * C322 + C101 * C337) *
                C118) *
               C32633 * C531) *
              C32589 * C442 +
          (((C113 * C321 + C101 * C336 + C114 * C320 + C102 * C335 +
             C115 * C319 + C103 * C334 + C116 * C318 + C104 * C333 +
             C117 * C532 + C105 * C533) *
                C118 +
            (C113 * C331 + C101 * C351 + C114 * C330 + C102 * C350 +
             C115 * C329 + C103 * C349 + C116 * C328 + C104 * C348 +
             C117 * C534 + C105 * C535) *
                C32644) *
               C32633 * C531 -
           ((C117 * C136 + C105 * C145 + C116 * C135 + C104 * C144 +
             C115 * C134 + C103 * C143 + C114 * C133 + C102 * C142 +
             C113 * C132 + C101 * C141) *
                C32644 +
            (C117 * C124 + C105 * C137 + C116 * C123 + C104 * C130 +
             C115 * C122 + C103 * C129 + C114 * C121 + C102 * C128 +
             C113 * C120 + C101 * C127) *
                C118) *
               C32633 * C530) *
              C32589 * C443)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C5270 * C119 + C32948 * C126 + C5271 * C120 + C32935 * C127 +
              C5272 * C121 + C32905 * C128) *
                 C118 +
             (C5270 * C131 + C32948 * C140 + C5271 * C132 + C32935 * C141 +
              C5272 * C133 + C32905 * C142) *
                 C32644) *
                C5267 +
            ((C5420 + C5421 + C5422) * C118 +
             (C5423 + C5424 + C5425) * C32644) *
                C5268 +
            C5444 * C32916) *
               C530 -
           (((C5272 * C1071 + C32905 * C1089 + C5271 * C1072 + C32935 * C1090 +
              C5270 * C1073 + C32948 * C1091) *
                 C32644 +
             (C5272 * C1062 + C32905 * C1074 + C5271 * C1063 + C32935 * C1075 +
              C5270 * C1064 + C32948 * C1076) *
                 C118) *
                C32916 +
            ((C5272 * C630 + C32905 * C635 + C5271 * C629 + C32935 * C634 +
              C5270 * C628 + C32948 * C633) *
                 C32644 +
             (C5272 * C620 + C32905 * C625 + C5271 * C619 + C32935 * C624 +
              C5270 * C618 + C32948 * C623) *
                 C118) *
                C5268 +
            ((C5272 * C330 + C32905 * C350 + C5271 * C331 + C32935 * C351 +
              C5270 * C332 + C32948 * C352) *
                 C32644 +
             (C5272 * C320 + C32905 * C335 + C5271 * C321 + C32935 * C336 +
              C5270 * C322 + C32948 * C337) *
                 C118) *
                C5267) *
               C531) *
              C32589 * C442 +
          ((((C5270 * C321 + C32948 * C336 + C5271 * C320 + C32935 * C335 +
              C5272 * C319 + C32905 * C334) *
                 C118 +
             (C5270 * C331 + C32948 * C351 + C5271 * C330 + C32935 * C350 +
              C5272 * C329 + C32905 * C349) *
                 C32644) *
                C5267 +
            ((C5270 * C619 + C32948 * C624 + C5271 * C620 + C32935 * C625 +
              C5272 * C621 + C32905 * C626) *
                 C118 +
             (C5270 * C629 + C32948 * C634 + C5271 * C630 + C32935 * C635 +
              C5272 * C631 + C32905 * C636) *
                 C32644) *
                C5268 +
            ((C5270 * C1063 + C32948 * C1075 + C5271 * C1062 + C32935 * C1074 +
              C5272 * C1430 + C32905 * C1431) *
                 C118 +
             (C5270 * C1072 + C32948 * C1090 + C5271 * C1071 + C32935 * C1089 +
              C5272 * C1432 + C32905 * C1433) *
                 C32644) *
                C32916) *
               C531 -
           (((C5736 + C5735 + C5734) * C32644 +
             (C5733 + C5732 + C5731) * C118) *
                C32916 +
            ((C5730 + C5729 + C5728) * C32644 +
             (C5727 + C5726 + C5725) * C118) *
                C5268 +
            ((C5272 * C134 + C32905 * C143 + C5271 * C133 + C32935 * C142 +
              C5270 * C132 + C32948 * C141) *
                 C32644 +
             (C5272 * C122 + C32905 * C129 + C5271 * C121 + C32935 * C128 +
              C5270 * C120 + C32948 * C127) *
                 C118) *
                C5267) *
               C530) *
              C32589 * C443)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C6132 * C119 + C32540 * C126) * C118 +
             (C6132 * C131 + C32540 * C140) * C32644) *
                C6127 +
            (C6234 + C6235) * C6128 + C6244 * C6129 + C6245 * C6130 +
            C6246 * C6131) *
               C530 -
           (((C6132 * C6311 + C32540 * C6317) * C32644 +
             (C6132 * C6308 + C32540 * C6312) * C118) *
                C6131 +
            ((C6132 * C1586 + C32540 * C1589) * C32644 +
             (C6132 * C1580 + C32540 * C1583) * C118) *
                C6130 +
            ((C6132 * C1073 + C32540 * C1091) * C32644 +
             (C6132 * C1064 + C32540 * C1076) * C118) *
                C6129 +
            ((C6132 * C628 + C32540 * C633) * C32644 +
             (C6132 * C618 + C32540 * C623) * C118) *
                C6128 +
            ((C6132 * C332 + C32540 * C352) * C32644 +
             (C6132 * C322 + C32540 * C337) * C118) *
                C6127) *
               C531) *
              C32589 * C442 +
          ((((C6132 * C321 + C32540 * C336) * C118 +
             (C6132 * C331 + C32540 * C351) * C32644) *
                C6127 +
            ((C6132 * C619 + C32540 * C624) * C118 +
             (C6132 * C629 + C32540 * C634) * C32644) *
                C6128 +
            ((C6132 * C1063 + C32540 * C1075) * C118 +
             (C6132 * C1072 + C32540 * C1090) * C32644) *
                C6129 +
            ((C6132 * C1581 + C32540 * C1584) * C118 +
             (C6132 * C1587 + C32540 * C1590) * C32644) *
                C6130 +
            ((C6132 * C6520 + C32540 * C6521) * C118 +
             (C6132 * C6522 + C32540 * C6523) * C32644) *
                C6131) *
               C531 -
           ((C6438 + C6437) * C6131 + (C6436 + C6435) * C6130 +
            (C6434 + C6433) * C6129 + (C6432 + C6431) * C6128 +
            ((C6132 * C132 + C32540 * C141) * C32644 +
             (C6132 * C120 + C32540 * C127) * C118) *
                C6127) *
               C530) *
              C32589 * C443)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C5270 * C119 + C32948 * C126 + C5271 * C120 + C32935 * C127 +
             C5272 * C121 + C32905 * C128) *
                C10355 +
            (C5270 * C131 + C32948 * C140 + C5271 * C132 + C32935 * C141 +
             C5272 * C133 + C32905 * C142) *
                C10352 +
            (C10615 + C10616 + C10617) * C10356 +
            (C10618 + C10619 + C10620) * C10353 + C10635 * C10357 +
            C10636 * C32919) *
               C32633 * C530 -
           ((C10627 + C10628 + C10629) * C32919 +
            (C10630 + C10631 + C10632) * C10357 +
            (C10626 + C10625 + C10624) * C10353 +
            (C10623 + C10622 + C10621) * C10356 +
            (C10620 + C10619 + C10618) * C10352 +
            (C10617 + C10616 + C10615) * C10355) *
               C32633 * C531) *
              C32589 * C442 +
          (((C10953 + C10954 + C10955) * C10355 +
            (C10956 + C10957 + C10958) * C10352 +
            (C10959 + C10960 + C10961) * C10356 +
            (C10962 + C10963 + C10964) * C10353 +
            (C5270 * C1965 + C32948 * C1974 + C5271 * C1964 + C32935 * C1973 +
             C5272 * C2342 + C32905 * C2343) *
                C10357 +
            (C5270 * C1971 + C32948 * C1983 + C5271 * C1970 + C32935 * C1982 +
             C5272 * C2344 + C32905 * C2345) *
                C32919) *
               C32633 * C531 -
           ((C10964 + C10963 + C10962) * C32919 +
            (C10961 + C10960 + C10959) * C10357 +
            (C10958 + C10957 + C10956) * C10353 +
            (C10955 + C10954 + C10953) * C10356 +
            (C5272 * C134 + C32905 * C143 + C5271 * C133 + C32935 * C142 +
             C5270 * C132 + C32948 * C141) *
                C10352 +
            (C5272 * C122 + C32905 * C129 + C5271 * C121 + C32935 * C128 +
             C5270 * C120 + C32948 * C127) *
                C10355) *
               C32633 * C530) *
              C32589 * C443)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C6132 * C119 + C32540 * C126) * C10355 +
             (C6132 * C131 + C32540 * C140) * C10352 + C7046 * C10356 +
             C7047 * C10353 + C7048 * C10357 + C7049 * C32919) *
                C32951 +
            (C11349 + C11350 + C11351 + C11352 + C11353 + C11354) * C32939 +
            C11371 * C32916) *
               C530 -
           ((C7050 * C32919 + C7051 * C10357 + C6891 * C10353 + C6890 * C10356 +
             C6631 * C10352 + C6632 * C10355) *
                C32916 +
            (C7052 * C32919 + C7053 * C10357 + C6888 * C10353 + C6887 * C10356 +
             C6633 * C10352 + C6634 * C10355) *
                C32939 +
            (C7054 * C32919 + C7055 * C10357 + C7049 * C10353 + C7048 * C10356 +
             C7047 * C10352 + C7046 * C10355) *
                C32951) *
               C531) *
              C32589 * C442 +
          (((C7400 * C10355 + C7401 * C10352 + C7402 * C10356 + C7403 * C10353 +
             (C6132 * C1965 + C32540 * C1974) * C10357 +
             (C6132 * C1971 + C32540 * C1983) * C32919) *
                C32951 +
            (C7226 * C10355 + C7227 * C10352 + C7228 * C10356 + C7229 * C10353 +
             (C6132 * C2529 + C32540 * C2532) * C10357 +
             (C6132 * C2535 + C32540 * C2538) * C32919) *
                C32939 +
            (C7230 * C10355 + C7231 * C10352 + C7232 * C10356 + C7233 * C10353 +
             (C6132 * C7387 + C32540 * C7388) * C10357 +
             (C6132 * C7389 + C32540 * C7390) * C32919) *
                C32916) *
               C531 -
           ((C11639 + C11638 + C11637 + C11636 + C11635 + C11634) * C32916 +
            (C11633 + C11632 + C11631 + C11630 + C11629 + C11628) * C32939 +
            (C7403 * C32919 + C7402 * C10357 + C7401 * C10353 + C7400 * C10356 +
             (C6132 * C132 + C32540 * C141) * C10352 +
             (C6132 * C120 + C32540 * C127) * C10355) *
                C32951) *
               C530) *
              C32589 * C443)) /
            (p * q * std::sqrt(p + q));
    d2ee[74] +=
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C127 +
            C115 * C121 + C103 * C128 + C116 * C122 + C104 * C129 +
            C117 * C123 + C105 * C130) *
               C118 +
           (C113 * C131 + C101 * C140 + C114 * C132 + C102 * C141 +
            C115 * C133 + C103 * C142 + C116 * C134 + C104 * C143 +
            C117 * C135 + C105 * C144) *
               C32644) *
              C32633 * C32603 * C209 -
          ((C117 * C223 + C105 * C243 + C116 * C224 + C104 * C244 +
            C115 * C225 + C103 * C245 + C114 * C226 + C102 * C246 +
            C113 * C227 + C101 * C247) *
               C32644 +
           (C117 * C213 + C105 * C228 + C116 * C214 + C104 * C229 +
            C115 * C215 + C103 * C230 + C114 * C216 + C102 * C231 +
            C113 * C217 + C101 * C232) *
               C118) *
              C32633 * C32603 * C210 +
          ((C113 * C218 + C101 * C233 + C114 * C219 + C102 * C234 +
            C115 * C220 + C103 * C235 + C116 * C221 + C104 * C236 +
            C117 * C222 + C105 * C237) *
               C118 +
           (C113 * C238 + C101 * C248 + C114 * C239 + C102 * C249 +
            C115 * C240 + C103 * C250 + C116 * C241 + C104 * C251 +
            C117 * C242 + C105 * C252) *
               C32644) *
              C32633 * C32603 * C211) *
         C32577) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C127 +
            C115 * C121 + C103 * C128 + C116 * C122 + C104 * C129 +
            C117 * C123 + C105 * C130) *
               C118 +
           (C113 * C131 + C101 * C140 + C114 * C132 + C102 * C141 +
            C115 * C133 + C103 * C142 + C116 * C134 + C104 * C143 +
            C117 * C135 + C105 * C144) *
               C32644) *
              C32633 * C32603 * C32589 * C110 -
          ((C117 * C136 + C105 * C145 + C116 * C135 + C104 * C144 +
            C115 * C134 + C103 * C143 + C114 * C133 + C102 * C142 +
            C113 * C132 + C101 * C141) *
               C32644 +
           (C117 * C124 + C105 * C137 + C116 * C123 + C104 * C130 +
            C115 * C122 + C103 * C129 + C114 * C121 + C102 * C128 +
            C113 * C120 + C101 * C127) *
               C118) *
              C32633 * C32603 * C32589 * C111 +
          ((C113 * C121 + C101 * C128 + C114 * C122 + C102 * C129 +
            C115 * C123 + C103 * C130 + C116 * C124 + C104 * C137 +
            C117 * C125 + C105 * C138) *
               C118 +
           (C113 * C133 + C101 * C142 + C114 * C134 + C102 * C143 +
            C115 * C135 + C103 * C144 + C116 * C136 + C104 * C145 +
            C117 * C139 + C105 * C146) *
               C32644) *
              C32633 * C32603 * C32589 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C754 * C119 + C748 * C126 + C755 * C120 + C749 * C127 +
             C756 * C121 + C32905 * C128) *
                C118 +
            (C754 * C131 + C748 * C140 + C755 * C132 + C749 * C141 +
             C756 * C133 + C32905 * C142) *
                C32644) *
               C32951 +
           ((C754 * C217 + C748 * C232 + C755 * C216 + C749 * C231 +
             C756 * C215 + C32905 * C230) *
                C118 +
            (C754 * C227 + C748 * C247 + C755 * C226 + C749 * C246 +
             C756 * C225 + C32905 * C245) *
                C32644) *
               C32939 +
           ((C754 * C218 + C748 * C233 + C755 * C219 + C749 * C234 +
             C756 * C220 + C32905 * C235) *
                C118 +
            (C754 * C238 + C748 * C248 + C755 * C239 + C749 * C249 +
             C756 * C240 + C32905 * C250) *
                C32644) *
               C32916) *
              C32603 * C32589 * C110 -
          (((C756 * C241 + C32905 * C251 + C755 * C240 + C749 * C250 +
             C754 * C239 + C748 * C249) *
                C32644 +
            (C756 * C221 + C32905 * C236 + C755 * C220 + C749 * C235 +
             C754 * C219 + C748 * C234) *
                C118) *
               C32916 +
           ((C756 * C224 + C32905 * C244 + C755 * C225 + C749 * C245 +
             C754 * C226 + C748 * C246) *
                C32644 +
            (C756 * C214 + C32905 * C229 + C755 * C215 + C749 * C230 +
             C754 * C216 + C748 * C231) *
                C118) *
               C32939 +
           ((C756 * C134 + C32905 * C143 + C755 * C133 + C749 * C142 +
             C754 * C132 + C748 * C141) *
                C32644 +
            (C756 * C122 + C32905 * C129 + C755 * C121 + C749 * C128 +
             C754 * C120 + C748 * C127) *
                C118) *
               C32951) *
              C32603 * C32589 * C111 +
          (((C754 * C121 + C748 * C128 + C755 * C122 + C749 * C129 +
             C756 * C123 + C32905 * C130) *
                C118 +
            (C754 * C133 + C748 * C142 + C755 * C134 + C749 * C143 +
             C756 * C135 + C32905 * C144) *
                C32644) *
               C32951 +
           ((C754 * C215 + C748 * C230 + C755 * C214 + C749 * C229 +
             C756 * C213 + C32905 * C228) *
                C118 +
            (C754 * C225 + C748 * C245 + C755 * C224 + C749 * C244 +
             C756 * C223 + C32905 * C243) *
                C32644) *
               C32939 +
           ((C754 * C220 + C748 * C235 + C755 * C221 + C749 * C236 +
             C756 * C222 + C32905 * C237) *
                C118 +
            (C754 * C240 + C748 * C250 + C755 * C241 + C749 * C251 +
             C756 * C242 + C32905 * C252) *
                C32644) *
               C32916) *
              C32603 * C32589 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C754 * C119 + C748 * C126 + C755 * C120 + C749 * C127 +
             C756 * C121 + C32905 * C128) *
                C118 +
            (C754 * C131 + C748 * C140 + C755 * C132 + C749 * C141 +
             C756 * C133 + C32905 * C142) *
                C32644) *
               C32951 +
           ((C928 + C929 + C930) * C118 + (C931 + C932 + C933) * C32644) *
               C32939 +
           C952 * C32916) *
              C32603 * C209 -
          (((C940 + C941 + C942) * C32644 + (C943 + C944 + C945) * C118) *
               C32916 +
           ((C939 + C938 + C937) * C32644 + (C936 + C935 + C934) * C118) *
               C32939 +
           ((C933 + C932 + C931) * C32644 + (C930 + C929 + C928) * C118) *
               C32951) *
              C32603 * C210 +
          (C952 * C32951 +
           ((C945 + C944 + C943) * C118 + (C942 + C941 + C940) * C32644) *
               C32939 +
           ((C754 * C870 + C748 * C879 + C755 * C871 + C749 * C880 +
             C756 * C872 + C32905 * C881) *
                C118 +
            (C754 * C882 + C748 * C888 + C755 * C883 + C749 * C889 +
             C756 * C884 + C32905 * C890) *
                C32644) *
               C32916) *
              C32603 * C211) *
         C32577) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C5270 * C119 + C32948 * C126 + C5271 * C120 + C32935 * C127 +
             C5272 * C121 + C32905 * C128) *
                C118 +
            (C5270 * C131 + C32948 * C140 + C5271 * C132 + C32935 * C141 +
             C5272 * C133 + C32905 * C142) *
                C32644) *
               C5267 +
           ((C5270 * C217 + C32948 * C232 + C5271 * C216 + C32935 * C231 +
             C5272 * C215 + C32905 * C230) *
                C118 +
            (C5270 * C227 + C32948 * C247 + C5271 * C226 + C32935 * C246 +
             C5272 * C225 + C32905 * C245) *
                C32644) *
               C5268 +
           ((C5270 * C218 + C32948 * C233 + C5271 * C219 + C32935 * C234 +
             C5272 * C220 + C32905 * C235) *
                C118 +
            (C5270 * C238 + C32948 * C248 + C5271 * C239 + C32935 * C249 +
             C5272 * C240 + C32905 * C250) *
                C32644) *
               C32916) *
              C32603 * C32589 * C110 -
          (((C5272 * C241 + C32905 * C251 + C5271 * C240 + C32935 * C250 +
             C5270 * C239 + C32948 * C249) *
                C32644 +
            (C5272 * C221 + C32905 * C236 + C5271 * C220 + C32935 * C235 +
             C5270 * C219 + C32948 * C234) *
                C118) *
               C32916 +
           ((C5272 * C224 + C32905 * C244 + C5271 * C225 + C32935 * C245 +
             C5270 * C226 + C32948 * C246) *
                C32644 +
            (C5272 * C214 + C32905 * C229 + C5271 * C215 + C32935 * C230 +
             C5270 * C216 + C32948 * C231) *
                C118) *
               C5268 +
           ((C5272 * C134 + C32905 * C143 + C5271 * C133 + C32935 * C142 +
             C5270 * C132 + C32948 * C141) *
                C32644 +
            (C5272 * C122 + C32905 * C129 + C5271 * C121 + C32935 * C128 +
             C5270 * C120 + C32948 * C127) *
                C118) *
               C5267) *
              C32603 * C32589 * C111 +
          (((C5270 * C121 + C32948 * C128 + C5271 * C122 + C32935 * C129 +
             C5272 * C123 + C32905 * C130) *
                C118 +
            (C5270 * C133 + C32948 * C142 + C5271 * C134 + C32935 * C143 +
             C5272 * C135 + C32905 * C144) *
                C32644) *
               C5267 +
           ((C5270 * C215 + C32948 * C230 + C5271 * C214 + C32935 * C229 +
             C5272 * C213 + C32905 * C228) *
                C118 +
            (C5270 * C225 + C32948 * C245 + C5271 * C224 + C32935 * C244 +
             C5272 * C223 + C32905 * C243) *
                C32644) *
               C5268 +
           ((C5270 * C220 + C32948 * C235 + C5271 * C221 + C32935 * C236 +
             C5272 * C222 + C32905 * C237) *
                C118 +
            (C5270 * C240 + C32948 * C250 + C5271 * C241 + C32935 * C251 +
             C5272 * C242 + C32905 * C252) *
                C32644) *
               C32916) *
              C32603 * C32589 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C5270 * C119 + C32948 * C126 + C5271 * C120 + C32935 * C127 +
             C5272 * C121 + C32905 * C128) *
                C118 +
            (C5270 * C131 + C32948 * C140 + C5271 * C132 + C32935 * C141 +
             C5272 * C133 + C32905 * C142) *
                C32644) *
               C5267 +
           ((C5420 + C5421 + C5422) * C118 + (C5423 + C5424 + C5425) * C32644) *
               C5268 +
           C5444 * C32916) *
              C32603 * C209 -
          (((C5432 + C5433 + C5434) * C32644 + (C5435 + C5436 + C5437) * C118) *
               C32916 +
           ((C5431 + C5430 + C5429) * C32644 + (C5428 + C5427 + C5426) * C118) *
               C5268 +
           ((C5425 + C5424 + C5423) * C32644 + (C5422 + C5421 + C5420) * C118) *
               C5267) *
              C32603 * C210 +
          (C5444 * C5267 +
           ((C5437 + C5436 + C5435) * C118 + (C5434 + C5433 + C5432) * C32644) *
               C5268 +
           ((C5270 * C870 + C32948 * C879 + C5271 * C871 + C32935 * C880 +
             C5272 * C872 + C32905 * C881) *
                C118 +
            (C5270 * C882 + C32948 * C888 + C5271 * C883 + C32935 * C889 +
             C5272 * C884 + C32905 * C890) *
                C32644) *
               C32916) *
              C32603 * C211) *
         C32577) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C6132 * C119 + C32540 * C126) * C118 +
            (C6132 * C131 + C32540 * C140) * C32644) *
               C6127 +
           ((C6132 * C217 + C32540 * C232) * C118 +
            (C6132 * C227 + C32540 * C247) * C32644) *
               C6128 +
           ((C6132 * C218 + C32540 * C233) * C118 +
            (C6132 * C238 + C32540 * C248) * C32644) *
               C6129 +
           ((C6132 * C869 + C32540 * C878) * C118 +
            (C6132 * C875 + C32540 * C887) * C32644) *
               C6130 +
           ((C6132 * C870 + C32540 * C879) * C118 +
            (C6132 * C882 + C32540 * C888) * C32644) *
               C6131) *
              C32603 * C32589 * C110 -
          (((C6132 * C883 + C32540 * C889) * C32644 +
            (C6132 * C871 + C32540 * C880) * C118) *
               C6131 +
           ((C6132 * C874 + C32540 * C886) * C32644 +
            (C6132 * C868 + C32540 * C877) * C118) *
               C6130 +
           ((C6132 * C239 + C32540 * C249) * C32644 +
            (C6132 * C219 + C32540 * C234) * C118) *
               C6129 +
           ((C6132 * C226 + C32540 * C246) * C32644 +
            (C6132 * C216 + C32540 * C231) * C118) *
               C6128 +
           ((C6132 * C132 + C32540 * C141) * C32644 +
            (C6132 * C120 + C32540 * C127) * C118) *
               C6127) *
              C32603 * C32589 * C111 +
          (((C6132 * C121 + C32540 * C128) * C118 +
            (C6132 * C133 + C32540 * C142) * C32644) *
               C6127 +
           ((C6132 * C215 + C32540 * C230) * C118 +
            (C6132 * C225 + C32540 * C245) * C32644) *
               C6128 +
           ((C6132 * C220 + C32540 * C235) * C118 +
            (C6132 * C240 + C32540 * C250) * C32644) *
               C6129 +
           ((C6132 * C867 + C32540 * C876) * C118 +
            (C6132 * C873 + C32540 * C885) * C32644) *
               C6130 +
           ((C6132 * C872 + C32540 * C881) * C118 +
            (C6132 * C884 + C32540 * C890) * C32644) *
               C6131) *
              C32603 * C32589 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C6132 * C119 + C32540 * C126) * C118 +
            (C6132 * C131 + C32540 * C140) * C32644) *
               C6127 +
           (C6234 + C6235) * C6128 + C6244 * C6129 + C6245 * C6130 +
           C6246 * C6131) *
              C32603 * C209 -
          ((C6242 + C6243) * C6131 + (C6241 + C6240) * C6130 +
           (C6239 + C6238) * C6129 + (C6237 + C6236) * C6128 +
           (C6235 + C6234) * C6127) *
              C32603 * C210 +
          (C6244 * C6127 + C6245 * C6128 + C6246 * C6129 +
           (C6243 + C6242) * C6130 +
           ((C6132 * C6196 + C32540 * C6199) * C118 +
            (C6132 * C6200 + C32540 * C6202) * C32644) *
               C6131) *
              C32603 * C211) *
         C32577) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C5270 * C119 + C32948 * C126 + C5271 * C120 + C32935 * C127 +
            C5272 * C121 + C32905 * C128) *
               C10355 +
           (C5270 * C131 + C32948 * C140 + C5271 * C132 + C32935 * C141 +
            C5272 * C133 + C32905 * C142) *
               C10352 +
           (C5270 * C322 + C32948 * C337 + C5271 * C321 + C32935 * C336 +
            C5272 * C320 + C32905 * C335) *
               C10356 +
           (C5270 * C332 + C32948 * C352 + C5271 * C331 + C32935 * C351 +
            C5272 * C330 + C32905 * C350) *
               C10353 +
           (C5270 * C323 + C32948 * C338 + C5271 * C324 + C32935 * C339 +
            C5272 * C325 + C32905 * C340) *
               C10357 +
           (C5270 * C343 + C32948 * C353 + C5271 * C344 + C32935 * C354 +
            C5272 * C345 + C32905 * C355) *
               C32919) *
              C32633 * C32603 * C32589 * C110 -
          ((C5272 * C346 + C32905 * C356 + C5271 * C345 + C32935 * C355 +
            C5270 * C344 + C32948 * C354) *
               C32919 +
           (C5272 * C326 + C32905 * C341 + C5271 * C325 + C32935 * C340 +
            C5270 * C324 + C32948 * C339) *
               C10357 +
           (C5272 * C329 + C32905 * C349 + C5271 * C330 + C32935 * C350 +
            C5270 * C331 + C32948 * C351) *
               C10353 +
           (C5272 * C319 + C32905 * C334 + C5271 * C320 + C32935 * C335 +
            C5270 * C321 + C32948 * C336) *
               C10356 +
           (C5272 * C134 + C32905 * C143 + C5271 * C133 + C32935 * C142 +
            C5270 * C132 + C32948 * C141) *
               C10352 +
           (C5272 * C122 + C32905 * C129 + C5271 * C121 + C32935 * C128 +
            C5270 * C120 + C32948 * C127) *
               C10355) *
              C32633 * C32603 * C32589 * C111 +
          ((C5270 * C121 + C32948 * C128 + C5271 * C122 + C32935 * C129 +
            C5272 * C123 + C32905 * C130) *
               C10355 +
           (C5270 * C133 + C32948 * C142 + C5271 * C134 + C32935 * C143 +
            C5272 * C135 + C32905 * C144) *
               C10352 +
           (C5270 * C320 + C32948 * C335 + C5271 * C319 + C32935 * C334 +
            C5272 * C318 + C32905 * C333) *
               C10356 +
           (C5270 * C330 + C32948 * C350 + C5271 * C329 + C32935 * C349 +
            C5272 * C328 + C32905 * C348) *
               C10353 +
           (C5270 * C325 + C32948 * C340 + C5271 * C326 + C32935 * C341 +
            C5272 * C327 + C32905 * C342) *
               C10357 +
           (C5270 * C345 + C32948 * C355 + C5271 * C346 + C32935 * C356 +
            C5272 * C347 + C32905 * C357) *
               C32919) *
              C32633 * C32603 * C32589 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C5270 * C119 + C32948 * C126 + C5271 * C120 + C32935 * C127 +
            C5272 * C121 + C32905 * C128) *
               C10355 +
           (C5270 * C131 + C32948 * C140 + C5271 * C132 + C32935 * C141 +
            C5272 * C133 + C32905 * C142) *
               C10352 +
           (C5270 * C322 + C32948 * C337 + C5271 * C321 + C32935 * C336 +
            C5272 * C320 + C32905 * C335) *
               C10356 +
           (C5270 * C332 + C32948 * C352 + C5271 * C331 + C32935 * C351 +
            C5272 * C330 + C32905 * C350) *
               C10353 +
           (C5270 * C323 + C32948 * C338 + C5271 * C324 + C32935 * C339 +
            C5272 * C325 + C32905 * C340) *
               C10357 +
           (C5270 * C343 + C32948 * C353 + C5271 * C344 + C32935 * C354 +
            C5272 * C345 + C32905 * C355) *
               C32919) *
              C32633 * C32603 * C209 -
          ((C5272 * C1082 + C32905 * C1094 + C5271 * C1081 + C32935 * C1093 +
            C5270 * C1080 + C32948 * C1092) *
               C32919 +
           (C5272 * C1067 + C32905 * C1079 + C5271 * C1066 + C32935 * C1078 +
            C5270 * C1065 + C32948 * C1077) *
               C10357 +
           (C6059 + C6060 + C6061) * C10353 + (C6062 + C6063 + C6064) * C10356 +
           (C5425 + C5424 + C5423) * C10352 +
           (C5422 + C5421 + C5420) * C10355) *
              C32633 * C32603 * C210 +
          (C5440 * C10355 + C5441 * C10352 + (C6058 + C6057 + C6056) * C10356 +
           (C6055 + C6054 + C6053) * C10353 +
           (C5270 * C1068 + C32948 * C1083 + C5271 * C1069 + C32935 * C1084 +
            C5272 * C1070 + C32905 * C1085) *
               C10357 +
           (C5270 * C1086 + C32948 * C1095 + C5271 * C1087 + C32935 * C1096 +
            C5272 * C1088 + C32905 * C1097) *
               C32919) *
              C32633 * C32603 * C211) *
         C32577) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C6132 * C119 + C32540 * C126) * C10355 +
            (C6132 * C131 + C32540 * C140) * C10352 + C7046 * C10356 +
            C7047 * C10353 + C7048 * C10357 + C7049 * C32919) *
               C32951 +
           (C6224 * C10355 + C6225 * C10352 + C6634 * C10356 + C6633 * C10353 +
            C6887 * C10357 + C6888 * C32919) *
               C32939 +
           (C6226 * C10355 + C6227 * C10352 + C6632 * C10356 + C6631 * C10353 +
            C6890 * C10357 + C6891 * C32919) *
               C32916) *
              C32603 * C32589 * C110 -
          ((C7233 * C32919 + C7232 * C10357 + C7231 * C10353 + C7230 * C10356 +
            C6426 * C10352 + C6425 * C10355) *
               C32916 +
           (C7229 * C32919 + C7228 * C10357 + C7227 * C10353 + C7226 * C10356 +
            C6424 * C10352 + C6423 * C10355) *
               C32939 +
           (C7403 * C32919 + C7402 * C10357 + C7401 * C10353 + C7400 * C10356 +
            (C6132 * C132 + C32540 * C141) * C10352 +
            (C6132 * C120 + C32540 * C127) * C10355) *
               C32951) *
              C32603 * C32589 * C111 +
          (((C6132 * C121 + C32540 * C128) * C10355 +
            (C6132 * C133 + C32540 * C142) * C10352 +
            (C6132 * C320 + C32540 * C335) * C10356 +
            (C6132 * C330 + C32540 * C350) * C10353 +
            (C6132 * C325 + C32540 * C340) * C10357 +
            (C6132 * C345 + C32540 * C355) * C32919) *
               C32951 +
           ((C6132 * C215 + C32540 * C230) * C10355 +
            (C6132 * C225 + C32540 * C245) * C10352 +
            (C6132 * C620 + C32540 * C625) * C10356 +
            (C6132 * C630 + C32540 * C635) * C10353 +
            (C6132 * C1067 + C32540 * C1079) * C10357 +
            (C6132 * C1082 + C32540 * C1094) * C32919) *
               C32939 +
           ((C6132 * C220 + C32540 * C235) * C10355 +
            (C6132 * C240 + C32540 * C250) * C10352 +
            (C6132 * C1062 + C32540 * C1074) * C10356 +
            (C6132 * C1071 + C32540 * C1089) * C10353 +
            (C6132 * C1070 + C32540 * C1085) * C10357 +
            (C6132 * C1088 + C32540 * C1097) * C32919) *
               C32916) *
              C32603 * C32589 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C6132 * C119 + C32540 * C126) * C10355 +
            (C6132 * C131 + C32540 * C140) * C10352 + C7046 * C10356 +
            C7047 * C10353 + C7048 * C10357 + C7049 * C32919) *
               C32951 +
           (C11349 + C11350 + C11351 + C11352 + C11353 + C11354) * C32939 +
           C11371 * C32916) *
              C32603 * C209 -
          ((C11361 + C11362 + C11363 + C11364 + C11365 + C11366) * C32916 +
           (C11360 + C11359 + C11358 + C11357 + C11356 + C11355) * C32939 +
           (C11354 + C11353 + C11352 + C11351 + C11350 + C11349) * C32951) *
              C32603 * C210 +
          (C11371 * C32951 +
           (C11366 + C11365 + C11364 + C11363 + C11362 + C11361) * C32939 +
           (C6230 * C10355 + C6231 * C10352 + C6628 * C10356 + C6627 * C10353 +
            (C6132 * C6310 + C32540 * C6315) * C10357 +
            (C6132 * C6316 + C32540 * C6319) * C32919) *
               C32916) *
              C32603 * C211) *
         C32577) /
            (p * q * std::sqrt(p + q));
    d2ee[75] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                 (((((C31567 * C119 + C32545 * C126 + C31563 * C120 +
                      C32553 * C127 + C31573 * C121 + C17823 * C128) *
                         C20882 +
                     (C31567 * C131 + C32545 * C140 + C31563 * C132 +
                      C32553 * C141 + C31573 * C133 + C17823 * C142) *
                         C20880 +
                     (C19096 + C19097 + C19098) * C20883 +
                     (C19099 + C19100 + C19101) * C32731) *
                        C32885 +
                    ((C17977 + C17978 + C17979) * C20882 +
                     (C17980 + C17981 + C17982) * C20880 + C19736 * C20883 +
                     C19737 * C32731) *
                        C32691) *
                       C32603 * C440 -
                   (((C18610 + C18611 + C18612) * C32731 +
                     (C18613 + C18614 + C18615) * C20883 +
                     (C17988 + C17987 + C17986) * C20880 +
                     (C17985 + C17984 + C17983) * C20882) *
                        C32691 +
                    (C19738 * C32731 + C19739 * C20883 +
                     (C17982 + C17981 + C17980) * C20880 +
                     (C17979 + C17978 + C17977) * C20882) *
                        C32885) *
                       C32603 * C441) *
                      C442 +
                  ((((C18282 + C18283 + C18284) * C20882 +
                     (C18285 + C18286 + C18287) * C20880 +
                     (C19320 + C19321 + C19322) * C20883 +
                     (C19323 + C19324 + C19325) * C32731) *
                        C32885 +
                    ((C18288 + C18289 + C18290) * C20882 +
                     (C18291 + C18292 + C18293) * C20880 +
                     (C31567 * C1063 + C32545 * C1075 + C31563 * C1062 +
                      C32553 * C1074 + C31573 * C1430 + C17823 * C1431) *
                         C20883 +
                     (C31567 * C1072 + C32545 * C1090 + C31563 * C1071 +
                      C32553 * C1089 + C31573 * C1432 + C17823 * C1433) *
                         C32731) *
                        C32691) *
                       C32603 * C441 -
                   (((C19325 + C19324 + C19323) * C32731 +
                     (C19322 + C19321 + C19320) * C20883 +
                     (C18287 + C18286 + C18285) * C20880 +
                     (C18284 + C18283 + C18282) * C20882) *
                        C32691 +
                    ((C19537 + C19536 + C19535) * C32731 +
                     (C19534 + C19533 + C19532) * C20883 +
                     (C31573 * C134 + C17823 * C143 + C31563 * C133 +
                      C32553 * C142 + C31567 * C132 + C32545 * C141) *
                         C20880 +
                     (C31573 * C122 + C17823 * C129 + C31563 * C121 +
                      C32553 * C128 + C31567 * C120 + C32545 * C127) *
                         C20882) *
                        C32885) *
                       C32603 * C440) *
                      C443)) /
                (p * q * std::sqrt(p + q));
    d2ee[76] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                 (((((C31567 * C119 + C32545 * C126 + C31563 * C120 +
                      C32553 * C127 + C31573 * C121 + C17823 * C128) *
                         C20882 +
                     (C31567 * C131 + C32545 * C140 + C31563 * C132 +
                      C32553 * C141 + C31573 * C133 + C17823 * C142) *
                         C20880 +
                     (C19096 + C19097 + C19098) * C20883 +
                     (C19099 + C19100 + C19101) * C32731) *
                        C32885 +
                    ((C17977 + C17978 + C17979) * C20882 +
                     (C17980 + C17981 + C17982) * C20880 + C19736 * C20883 +
                     C19737 * C32731) *
                        C32691) *
                       C530 -
                   (((C19102 + C19103 + C19104) * C32731 +
                     (C19105 + C19106 + C19107) * C20883 + C19738 * C20880 +
                     C19739 * C20882) *
                        C32691 +
                    ((C19108 + C19109 + C19110) * C32731 +
                     (C19111 + C19112 + C19113) * C20883 +
                     (C19101 + C19100 + C19099) * C20880 +
                     (C19098 + C19097 + C19096) * C20882) *
                        C32885) *
                       C531) *
                      C440 +
                  (((C19736 * C20882 + C19737 * C20880 +
                     (C19107 + C19106 + C19105) * C20883 +
                     (C19104 + C19103 + C19102) * C32731) *
                        C32885 +
                    ((C18615 + C18614 + C18613) * C20882 +
                     (C18612 + C18611 + C18610) * C20880 +
                     (C31567 * C1068 + C32545 * C1083 + C31563 * C1069 +
                      C32553 * C1084 + C31573 * C1070 + C17823 * C1085) *
                         C20883 +
                     (C31567 * C1086 + C32545 * C1095 + C31563 * C1087 +
                      C32553 * C1096 + C31573 * C1088 + C17823 * C1097) *
                         C32731) *
                        C32691) *
                       C531 -
                   (((C18610 + C18611 + C18612) * C32731 +
                     (C18613 + C18614 + C18615) * C20883 +
                     (C17988 + C17987 + C17986) * C20880 +
                     (C17985 + C17984 + C17983) * C20882) *
                        C32691 +
                    (C19738 * C32731 + C19739 * C20883 +
                     (C17982 + C17981 + C17980) * C20880 +
                     (C17979 + C17978 + C17977) * C20882) *
                        C32885) *
                       C530) *
                      C441) *
                 C32577) /
                (p * q * std::sqrt(p + q));
    d2ee[77] += (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C31567 * C119 + C32545 * C126 + C31563 * C120 +
                     C32553 * C127 + C31573 * C121 + C17823 * C128) *
                        C20882 +
                    (C31567 * C131 + C32545 * C140 + C31563 * C132 +
                     C32553 * C141 + C31573 * C133 + C17823 * C142) *
                        C20880 +
                    (C19096 + C19097 + C19098) * C20883 +
                    (C19099 + C19100 + C19101) * C32731) *
                       C32885 +
                   ((C17977 + C17978 + C17979) * C20882 +
                    (C17980 + C17981 + C17982) * C20880 + C19736 * C20883 +
                    C19737 * C32731) *
                       C32691) *
                      C32603 * C209 -
                  (((C18610 + C18611 + C18612) * C32731 +
                    (C18613 + C18614 + C18615) * C20883 +
                    (C17988 + C17987 + C17986) * C20880 +
                    (C17985 + C17984 + C17983) * C20882) *
                       C32691 +
                   (C19738 * C32731 + C19739 * C20883 +
                    (C17982 + C17981 + C17980) * C20880 +
                    (C17979 + C17978 + C17977) * C20882) *
                       C32885) *
                      C32603 * C210 +
                  ((C17997 * C20882 + C17998 * C20880 +
                    (C18615 + C18614 + C18613) * C20883 +
                    (C18612 + C18611 + C18610) * C32731) *
                       C32885 +
                   ((C17994 + C17993 + C17992) * C20882 +
                    (C17991 + C17990 + C17989) * C20880 +
                    (C31567 * C1580 + C32545 * C1583 + C31563 * C1581 +
                     C32553 * C1584 + C31573 * C1582 + C17823 * C1585) *
                        C20883 +
                    (C31567 * C1586 + C32545 * C1589 + C31563 * C1587 +
                     C32553 * C1590 + C31573 * C1588 + C17823 * C1591) *
                        C32731) *
                       C32691) *
                      C32603 * C211) *
                 C32577) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C31567 * C119 + C32545 * C126 + C31563 * C120 +
                     C32553 * C127 + C31573 * C121 + C17823 * C128) *
                        C20882 +
                    (C31567 * C131 + C32545 * C140 + C31563 * C132 +
                     C32553 * C141 + C31573 * C133 + C17823 * C142) *
                        C20880 +
                    (C19096 + C19097 + C19098) * C20883 +
                    (C19099 + C19100 + C19101) * C32731) *
                       C32885 +
                   ((C17977 + C17978 + C17979) * C20882 +
                    (C17980 + C17981 + C17982) * C20880 + C19736 * C20883 +
                    C19737 * C32731) *
                       C32691) *
                      C32603 * C32589 * C110 -
                  (((C19325 + C19324 + C19323) * C32731 +
                    (C19322 + C19321 + C19320) * C20883 +
                    (C18287 + C18286 + C18285) * C20880 +
                    (C18284 + C18283 + C18282) * C20882) *
                       C32691 +
                   ((C19537 + C19536 + C19535) * C32731 +
                    (C19534 + C19533 + C19532) * C20883 +
                    (C31573 * C134 + C17823 * C143 + C31563 * C133 +
                     C32553 * C142 + C31567 * C132 + C32545 * C141) *
                        C20880 +
                    (C31573 * C122 + C17823 * C129 + C31563 * C121 +
                     C32553 * C128 + C31567 * C120 + C32545 * C127) *
                        C20882) *
                       C32885) *
                      C32603 * C32589 * C111 +
                  (((C31567 * C121 + C32545 * C128 + C31563 * C122 +
                     C32553 * C129 + C31573 * C123 + C17823 * C130) *
                        C20882 +
                    (C31567 * C133 + C32545 * C142 + C31563 * C134 +
                     C32553 * C143 + C31573 * C135 + C17823 * C144) *
                        C20880 +
                    (C31567 * C320 + C32545 * C335 + C31563 * C319 +
                     C32553 * C334 + C31573 * C318 + C17823 * C333) *
                        C20883 +
                    (C31567 * C330 + C32545 * C350 + C31563 * C329 +
                     C32553 * C349 + C31573 * C328 + C17823 * C348) *
                        C32731) *
                       C32885 +
                   ((C31567 * C215 + C32545 * C230 + C31563 * C214 +
                     C32553 * C229 + C31573 * C213 + C17823 * C228) *
                        C20882 +
                    (C31567 * C225 + C32545 * C245 + C31563 * C224 +
                     C32553 * C244 + C31573 * C223 + C17823 * C243) *
                        C20880 +
                    (C31567 * C620 + C32545 * C625 + C31563 * C621 +
                     C32553 * C626 + C31573 * C622 + C17823 * C627) *
                        C20883 +
                    (C31567 * C630 + C32545 * C635 + C31563 * C631 +
                     C32553 * C636 + C31573 * C632 + C17823 * C637) *
                        C32731) *
                       C32691) *
                      C32603 * C32589 * C112)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((C31567 * C119 + C32545 * C126 + C31563 * C120 +
                     C32553 * C127 + C31573 * C121 + C17823 * C128) *
                        C20882 +
                    (C31567 * C131 + C32545 * C140 + C31563 * C132 +
                     C32553 * C141 + C31573 * C133 + C17823 * C142) *
                        C20880 +
                    (C19096 + C19097 + C19098) * C20883 +
                    (C19099 + C19100 + C19101) * C32731) *
                       C32885 +
                   ((C17977 + C17978 + C17979) * C20882 +
                    (C17980 + C17981 + C17982) * C20880 + C19736 * C20883 +
                    C19737 * C32731) *
                       C32691) *
                      C315 -
                  (((C19102 + C19103 + C19104) * C32731 +
                    (C19105 + C19106 + C19107) * C20883 + C19738 * C20880 +
                    C19739 * C20882) *
                       C32691 +
                   ((C19108 + C19109 + C19110) * C32731 +
                    (C19111 + C19112 + C19113) * C20883 +
                    (C19101 + C19100 + C19099) * C20880 +
                    (C19098 + C19097 + C19096) * C20882) *
                       C32885) *
                      C316 +
                  (((C19113 + C19112 + C19111) * C20882 +
                    (C19110 + C19109 + C19108) * C20880 +
                    (C31567 * C1966 + C32545 * C1975 + C31563 * C1965 +
                     C32553 * C1974 + C31573 * C1964 + C17823 * C1973) *
                        C20883 +
                    (C31567 * C1972 + C32545 * C1984 + C31563 * C1971 +
                     C32553 * C1983 + C31573 * C1970 + C17823 * C1982) *
                        C32731) *
                       C32885 +
                   ((C19107 + C19106 + C19105) * C20882 +
                    (C19104 + C19103 + C19102) * C20880 +
                    (C31567 * C2528 + C32545 * C2531 + C31563 * C2529 +
                     C32553 * C2532 + C31573 * C2530 + C17823 * C2533) *
                        C20883 +
                    (C31567 * C2534 + C32545 * C2537 + C31563 * C2535 +
                     C32553 * C2538 + C31573 * C2536 + C17823 * C2539) *
                        C32731) *
                       C32691) *
                      C317) *
                 C32589 * C32577) /
                    (p * q * std::sqrt(p + q));
    d2ee[78] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                 (((((C31567 * C119 + C32545 * C126 + C31563 * C120 +
                      C32553 * C127 + C31573 * C121 + C17823 * C128) *
                         C20882 +
                     (C31567 * C131 + C32545 * C140 + C31563 * C132 +
                      C32553 * C141 + C31573 * C133 + C17823 * C142) *
                         C20880 +
                     (C19096 + C19097 + C19098) * C20883 +
                     (C19099 + C19100 + C19101) * C32731) *
                        C32885 +
                    ((C17977 + C17978 + C17979) * C20882 +
                     (C17980 + C17981 + C17982) * C20880 + C19736 * C20883 +
                     C19737 * C32731) *
                        C32691) *
                       C530 -
                   (((C19102 + C19103 + C19104) * C32731 +
                     (C19105 + C19106 + C19107) * C20883 + C19738 * C20880 +
                     C19739 * C20882) *
                        C32691 +
                    ((C19108 + C19109 + C19110) * C32731 +
                     (C19111 + C19112 + C19113) * C20883 +
                     (C19101 + C19100 + C19099) * C20880 +
                     (C19098 + C19097 + C19096) * C20882) *
                        C32885) *
                       C531) *
                      C32589 * C442 +
                  ((((C19532 + C19533 + C19534) * C20882 +
                     (C19535 + C19536 + C19537) * C20880 +
                     (C31567 * C324 + C32545 * C339 + C31563 * C325 +
                      C32553 * C340 + C31573 * C326 + C17823 * C341) *
                         C20883 +
                     (C31567 * C344 + C32545 * C354 + C31563 * C345 +
                      C32553 * C355 + C31573 * C346 + C17823 * C356) *
                         C32731) *
                        C32885 +
                    ((C19320 + C19321 + C19322) * C20882 +
                     (C19323 + C19324 + C19325) * C20880 +
                     (C31567 * C1066 + C32545 * C1078 + C31563 * C1067 +
                      C32553 * C1079 + C31573 * C2192 + C17823 * C2193) *
                         C20883 +
                     (C31567 * C1081 + C32545 * C1093 + C31563 * C1082 +
                      C32553 * C1094 + C31573 * C2194 + C17823 * C2195) *
                         C32731) *
                        C32691) *
                       C531 -
                   (((C19325 + C19324 + C19323) * C32731 +
                     (C19322 + C19321 + C19320) * C20883 +
                     (C18287 + C18286 + C18285) * C20880 +
                     (C18284 + C18283 + C18282) * C20882) *
                        C32691 +
                    ((C19537 + C19536 + C19535) * C32731 +
                     (C19534 + C19533 + C19532) * C20883 +
                     (C31573 * C134 + C17823 * C143 + C31563 * C133 +
                      C32553 * C142 + C31567 * C132 + C32545 * C141) *
                         C20880 +
                     (C31573 * C122 + C17823 * C129 + C31563 * C121 +
                      C32553 * C128 + C31567 * C120 + C32545 * C127) *
                         C20882) *
                        C32885) *
                       C530) *
                      C32589 * C443)) /
                (p * q * std::sqrt(p + q));
    d2ee[79] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C31567 * C119 + C32545 * C126 + C31563 * C120 +
                     C32553 * C127 + C31573 * C121 + C17823 * C128) *
                        C20882 +
                    (C31567 * C131 + C32545 * C140 + C31563 * C132 +
                     C32553 * C141 + C31573 * C133 + C17823 * C142) *
                        C20880 +
                    (C19096 + C19097 + C19098) * C20883 +
                    (C19099 + C19100 + C19101) * C32731) *
                       C32885 +
                   ((C17977 + C17978 + C17979) * C20882 +
                    (C17980 + C17981 + C17982) * C20880 + C19736 * C20883 +
                    C19737 * C32731) *
                       C32691) *
                      C32603 * C32589 * C110 -
                  (((C19325 + C19324 + C19323) * C32731 +
                    (C19322 + C19321 + C19320) * C20883 +
                    (C18287 + C18286 + C18285) * C20880 +
                    (C18284 + C18283 + C18282) * C20882) *
                       C32691 +
                   ((C19537 + C19536 + C19535) * C32731 +
                    (C19534 + C19533 + C19532) * C20883 +
                    (C31573 * C134 + C17823 * C143 + C31563 * C133 +
                     C32553 * C142 + C31567 * C132 + C32545 * C141) *
                        C20880 +
                    (C31573 * C122 + C17823 * C129 + C31563 * C121 +
                     C32553 * C128 + C31567 * C120 + C32545 * C127) *
                        C20882) *
                       C32885) *
                      C32603 * C32589 * C111 +
                  (((C31567 * C121 + C32545 * C128 + C31563 * C122 +
                     C32553 * C129 + C31573 * C123 + C17823 * C130) *
                        C20882 +
                    (C31567 * C133 + C32545 * C142 + C31563 * C134 +
                     C32553 * C143 + C31573 * C135 + C17823 * C144) *
                        C20880 +
                    (C31567 * C320 + C32545 * C335 + C31563 * C319 +
                     C32553 * C334 + C31573 * C318 + C17823 * C333) *
                        C20883 +
                    (C31567 * C330 + C32545 * C350 + C31563 * C329 +
                     C32553 * C349 + C31573 * C328 + C17823 * C348) *
                        C32731) *
                       C32885 +
                   ((C31567 * C215 + C32545 * C230 + C31563 * C214 +
                     C32553 * C229 + C31573 * C213 + C17823 * C228) *
                        C20882 +
                    (C31567 * C225 + C32545 * C245 + C31563 * C224 +
                     C32553 * C244 + C31573 * C223 + C17823 * C243) *
                        C20880 +
                    (C31567 * C620 + C32545 * C625 + C31563 * C621 +
                     C32553 * C626 + C31573 * C622 + C17823 * C627) *
                        C20883 +
                    (C31567 * C630 + C32545 * C635 + C31563 * C631 +
                     C32553 * C636 + C31573 * C632 + C17823 * C637) *
                        C32731) *
                       C32691) *
                      C32603 * C32589 * C112)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C31567 * C119 + C32545 * C126 + C31563 * C120 +
                     C32553 * C127 + C31573 * C121 + C17823 * C128) *
                        C20882 +
                    (C31567 * C131 + C32545 * C140 + C31563 * C132 +
                     C32553 * C141 + C31573 * C133 + C17823 * C142) *
                        C20880 +
                    (C19096 + C19097 + C19098) * C20883 +
                    (C19099 + C19100 + C19101) * C32731) *
                       C32885 +
                   ((C17977 + C17978 + C17979) * C20882 +
                    (C17980 + C17981 + C17982) * C20880 + C19736 * C20883 +
                    C19737 * C32731) *
                       C32691) *
                      C32603 * C209 -
                  (((C18610 + C18611 + C18612) * C32731 +
                    (C18613 + C18614 + C18615) * C20883 +
                    (C17988 + C17987 + C17986) * C20880 +
                    (C17985 + C17984 + C17983) * C20882) *
                       C32691 +
                   (C19738 * C32731 + C19739 * C20883 +
                    (C17982 + C17981 + C17980) * C20880 +
                    (C17979 + C17978 + C17977) * C20882) *
                       C32885) *
                      C32603 * C210 +
                  ((C17997 * C20882 + C17998 * C20880 +
                    (C18615 + C18614 + C18613) * C20883 +
                    (C18612 + C18611 + C18610) * C32731) *
                       C32885 +
                   ((C17994 + C17993 + C17992) * C20882 +
                    (C17991 + C17990 + C17989) * C20880 +
                    (C31567 * C1580 + C32545 * C1583 + C31563 * C1581 +
                     C32553 * C1584 + C31573 * C1582 + C17823 * C1585) *
                        C20883 +
                    (C31567 * C1586 + C32545 * C1589 + C31563 * C1587 +
                     C32553 * C1590 + C31573 * C1588 + C17823 * C1591) *
                        C32731) *
                       C32691) *
                      C32603 * C211) *
                 C32577) /
                    (p * q * std::sqrt(p + q));
    d2ee[80] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C15843 * C119 + C15837 * C126 + C15844 * C120 + C32550 * C127) *
                 C31694 +
             (C15843 * C131 + C15837 * C140 + C15844 * C132 + C32550 * C141) *
                 C32727 +
             (C17058 + C17059) * C31686 + (C17060 + C17061) * C32734 +
             C17074 * C31700 + C17075 * C24419) *
                C32885 +
            ((C15976 + C15977) * C31694 + (C15978 + C15979) * C32727 +
             C17706 * C31686 + C17707 * C32734 + C17040 * C31700 +
             C17041 * C24419) *
                C32691) *
               C32603 * C440 -
           (((C16874 + C16875) * C24419 + (C16876 + C16877) * C31700 +
             C20781 * C32734 + C20782 * C31686 + (C15983 + C15982) * C32727 +
             (C15981 + C15980) * C31694) *
                C32691 +
            (C17708 * C24419 + C17709 * C31700 + C17710 * C32734 +
             C17711 * C31686 + (C15979 + C15978) * C32727 +
             (C15977 + C15976) * C31694) *
                C32885) *
               C32603 * C441) *
              C442 +
          ((((C16254 + C16255) * C31694 + (C16256 + C16257) * C32727 +
             (C17286 + C17287) * C31686 + (C17288 + C17289) * C32734 +
             (C17290 + C17291) * C31700 + (C17292 + C17293) * C24419) *
                C32885 +
            ((C16258 + C16259) * C31694 + (C16260 + C16261) * C32727 +
             (C20389 + C20390) * C31686 + (C20391 + C20392) * C32734 +
             (C15843 * C1069 + C15837 * C1084 + C15844 * C1070 +
              C32550 * C1085) *
                 C31700 +
             (C15843 * C1087 + C15837 * C1096 + C15844 * C1088 +
              C32550 * C1097) *
                 C24419) *
                C32691) *
               C32603 * C441 -
           (((C17293 + C17292) * C24419 + (C17291 + C17290) * C31700 +
             (C17289 + C17288) * C32734 + (C17287 + C17286) * C31686 +
             (C16257 + C16256) * C32727 + (C16255 + C16254) * C31694) *
                C32691 +
            ((C17511 + C17510) * C24419 + (C17509 + C17508) * C31700 +
             (C17507 + C17506) * C32734 + (C17505 + C17504) * C31686 +
             (C15844 * C133 + C32550 * C142 + C15843 * C132 + C15837 * C141) *
                 C32727 +
             (C15844 * C121 + C32550 * C128 + C15843 * C120 + C15837 * C127) *
                 C31694) *
                C32885) *
               C32603 * C440) *
              C443)) /
        (p * q * std::sqrt(p + q));
    d2ee[81] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C15843 * C119 + C15837 * C126 + C15844 * C120 + C32550 * C127) *
                 C31694 +
             (C15843 * C131 + C15837 * C140 + C15844 * C132 + C32550 * C141) *
                 C32727 +
             (C17058 + C17059) * C31686 + (C17060 + C17061) * C32734 +
             C17074 * C31700 + C17075 * C24419) *
                C32885 +
            ((C15976 + C15977) * C31694 + (C15978 + C15979) * C32727 +
             C17706 * C31686 + C17707 * C32734 + C17040 * C31700 +
             C17041 * C24419) *
                C32691) *
               C530 -
           (((C17066 + C17067) * C24419 + (C17068 + C17069) * C31700 +
             C17708 * C32734 + C17709 * C31686 + C17710 * C32727 +
             C17711 * C31694) *
                C32691 +
            ((C17070 + C17071) * C24419 + (C17072 + C17073) * C31700 +
             (C17065 + C17064) * C32734 + (C17063 + C17062) * C31686 +
             (C17061 + C17060) * C32727 + (C17059 + C17058) * C31694) *
                C32885) *
               C531) *
              C440 +
          (((C17706 * C31694 + C17707 * C32727 + C17040 * C31686 +
             C17041 * C32734 + (C17069 + C17068) * C31700 +
             (C17067 + C17066) * C24419) *
                C32885 +
            (C20034 * C31694 + C20035 * C32727 + (C16877 + C16876) * C31686 +
             (C16875 + C16874) * C32734 +
             (C15843 * C7013 + C15837 * C7017 + C15844 * C7387 +
              C32550 * C7388) *
                 C31700 +
             (C15843 * C7016 + C15837 * C7022 + C15844 * C7389 +
              C32550 * C7390) *
                 C24419) *
                C32691) *
               C531 -
           (((C16874 + C16875) * C24419 + (C16876 + C16877) * C31700 +
             C20781 * C32734 + C20782 * C31686 + (C15983 + C15982) * C32727 +
             (C15981 + C15980) * C31694) *
                C32691 +
            (C17708 * C24419 + C17709 * C31700 + C17710 * C32734 +
             C17711 * C31686 + (C15979 + C15978) * C32727 +
             (C15977 + C15976) * C31694) *
                C32885) *
               C530) *
              C441) *
         C32577) /
        (p * q * std::sqrt(p + q));
    d2ee[82] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C15843 * C119 + C15837 * C126 + C15844 * C120 + C32550 * C127) *
                C31694 +
            (C15843 * C131 + C15837 * C140 + C15844 * C132 + C32550 * C141) *
                C32727 +
            (C17058 + C17059) * C31686 + (C17060 + C17061) * C32734 +
            C17074 * C31700 + C17075 * C24419) *
               C32885 +
           ((C15976 + C15977) * C31694 + (C15978 + C15979) * C32727 +
            C17706 * C31686 + C17707 * C32734 + C17040 * C31700 +
            C17041 * C24419) *
               C32691) *
              C32603 * C209 -
          (((C16874 + C16875) * C24419 + (C16876 + C16877) * C31700 +
            C20781 * C32734 + C20782 * C31686 + (C15983 + C15982) * C32727 +
            (C15981 + C15980) * C31694) *
               C32691 +
           (C17708 * C24419 + C17709 * C31700 + C17710 * C32734 +
            C17711 * C31686 + (C15979 + C15978) * C32727 +
            (C15977 + C15976) * C31694) *
               C32885) *
              C32603 * C210 +
          ((C15992 * C31694 + C15993 * C32727 + C20034 * C31686 +
            C20035 * C32734 + (C16877 + C16876) * C31700 +
            (C16875 + C16874) * C24419) *
               C32885 +
           (C15994 * C31694 + C15995 * C32727 + (C16553 + C16552) * C31686 +
            (C16551 + C16550) * C32734 +
            (C15843 * C6309 + C15837 * C6313 + C15844 * C7201 +
             C32550 * C7202) *
                C31700 +
            (C15843 * C6314 + C15837 * C6318 + C15844 * C7203 +
             C32550 * C7204) *
                C24419) *
               C32691) *
              C32603 * C211) *
         C32577) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C15843 * C119 + C15837 * C126 + C15844 * C120 + C32550 * C127) *
                C31694 +
            (C15843 * C131 + C15837 * C140 + C15844 * C132 + C32550 * C141) *
                C32727 +
            (C17058 + C17059) * C31686 + (C17060 + C17061) * C32734 +
            C17074 * C31700 + C17075 * C24419) *
               C32885 +
           ((C15976 + C15977) * C31694 + (C15978 + C15979) * C32727 +
            C17706 * C31686 + C17707 * C32734 + C17040 * C31700 +
            C17041 * C24419) *
               C32691) *
              C32603 * C32589 * C110 -
          (((C17293 + C17292) * C24419 + (C17291 + C17290) * C31700 +
            (C17289 + C17288) * C32734 + (C17287 + C17286) * C31686 +
            (C16257 + C16256) * C32727 + (C16255 + C16254) * C31694) *
               C32691 +
           ((C17511 + C17510) * C24419 + (C17509 + C17508) * C31700 +
            (C17507 + C17506) * C32734 + (C17505 + C17504) * C31686 +
            (C15844 * C133 + C32550 * C142 + C15843 * C132 + C15837 * C141) *
                C32727 +
            (C15844 * C121 + C32550 * C128 + C15843 * C120 + C15837 * C127) *
                C31694) *
               C32885) *
              C32603 * C32589 * C111 +
          (((C15843 * C121 + C15837 * C128 + C15844 * C122 + C32550 * C129) *
                C31694 +
            (C15843 * C133 + C15837 * C142 + C15844 * C134 + C32550 * C143) *
                C32727 +
            (C15843 * C320 + C15837 * C335 + C15844 * C319 + C32550 * C334) *
                C31686 +
            (C15843 * C330 + C15837 * C350 + C15844 * C329 + C32550 * C349) *
                C32734 +
            (C15843 * C325 + C15837 * C340 + C15844 * C326 + C32550 * C341) *
                C31700 +
            (C15843 * C345 + C15837 * C355 + C15844 * C346 + C32550 * C356) *
                C24419) *
               C32885 +
           ((C15843 * C215 + C15837 * C230 + C15844 * C214 + C32550 * C229) *
                C31694 +
            (C15843 * C225 + C15837 * C245 + C15844 * C224 + C32550 * C244) *
                C32727 +
            (C15843 * C620 + C15837 * C625 + C15844 * C621 + C32550 * C626) *
                C31686 +
            (C15843 * C630 + C15837 * C635 + C15844 * C631 + C32550 * C636) *
                C32734 +
            (C15843 * C1067 + C15837 * C1079 + C15844 * C2192 +
             C32550 * C2193) *
                C31700 +
            (C15843 * C1082 + C15837 * C1094 + C15844 * C2194 +
             C32550 * C2195) *
                C24419) *
               C32691) *
              C32603 * C32589 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C15843 * C119 + C15837 * C126 + C15844 * C120 + C32550 * C127) *
                C31694 +
            (C15843 * C131 + C15837 * C140 + C15844 * C132 + C32550 * C141) *
                C32727 +
            (C17058 + C17059) * C31686 + (C17060 + C17061) * C32734 +
            C17074 * C31700 + C17075 * C24419) *
               C32885 +
           ((C15976 + C15977) * C31694 + (C15978 + C15979) * C32727 +
            C17706 * C31686 + C17707 * C32734 + C17040 * C31700 +
            C17041 * C24419) *
               C32691) *
              C315 -
          (((C17066 + C17067) * C24419 + (C17068 + C17069) * C31700 +
            C17708 * C32734 + C17709 * C31686 + C17710 * C32727 +
            C17711 * C31694) *
               C32691 +
           ((C17070 + C17071) * C24419 + (C17072 + C17073) * C31700 +
            (C17065 + C17064) * C32734 + (C17063 + C17062) * C31686 +
            (C17061 + C17060) * C32727 + (C17059 + C17058) * C31694) *
               C32885) *
              C316 +
          ((C17074 * C31694 + C17075 * C32727 + C22872 * C31686 +
            C22873 * C32734 + (C22885 + C22884) * C31700 +
            (C22883 + C22882) * C24419) *
               C32885 +
           (C17040 * C31694 + C17041 * C32727 + (C17069 + C17068) * C31686 +
            (C17067 + C17066) * C32734 +
            (C15843 * C7014 + C15837 * C7018 + C15844 * C12241 +
             C32550 * C12242) *
                C31700 +
            (C15843 * C7019 + C15837 * C7023 + C15844 * C12243 +
             C32550 * C12244) *
                C24419) *
               C32691) *
              C317) *
         C32589 * C32577) /
            (p * q * std::sqrt(p + q));
    d2ee[83] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C15843 * C119 + C15837 * C126 + C15844 * C120 + C32550 * C127) *
                 C31694 +
             (C15843 * C131 + C15837 * C140 + C15844 * C132 + C32550 * C141) *
                 C32727 +
             (C17058 + C17059) * C31686 + (C17060 + C17061) * C32734 +
             C17074 * C31700 + C17075 * C24419) *
                C32885 +
            ((C15976 + C15977) * C31694 + (C15978 + C15979) * C32727 +
             C17706 * C31686 + C17707 * C32734 + C17040 * C31700 +
             C17041 * C24419) *
                C32691) *
               C530 -
           (((C17066 + C17067) * C24419 + (C17068 + C17069) * C31700 +
             C17708 * C32734 + C17709 * C31686 + C17710 * C32727 +
             C17711 * C31694) *
                C32691 +
            ((C17070 + C17071) * C24419 + (C17072 + C17073) * C31700 +
             (C17065 + C17064) * C32734 + (C17063 + C17062) * C31686 +
             (C17061 + C17060) * C32727 + (C17059 + C17058) * C31694) *
                C32885) *
               C531) *
              C32589 * C442 +
          ((((C17504 + C17505) * C31694 + (C17506 + C17507) * C32727 +
             (C17508 + C17509) * C31686 + (C17510 + C17511) * C32734 +
             (C23154 + C23155) * C31700 + (C23156 + C23157) * C24419) *
                C32885 +
            ((C17286 + C17287) * C31694 + (C17288 + C17289) * C32727 +
             (C17290 + C17291) * C31686 + (C17292 + C17293) * C32734 +
             (C15843 * C2529 + C15837 * C2532 + C15844 * C2530 +
              C32550 * C2533) *
                 C31700 +
             (C15843 * C2535 + C15837 * C2538 + C15844 * C2536 +
              C32550 * C2539) *
                 C24419) *
                C32691) *
               C531 -
           (((C17293 + C17292) * C24419 + (C17291 + C17290) * C31700 +
             (C17289 + C17288) * C32734 + (C17287 + C17286) * C31686 +
             (C16257 + C16256) * C32727 + (C16255 + C16254) * C31694) *
                C32691 +
            ((C17511 + C17510) * C24419 + (C17509 + C17508) * C31700 +
             (C17507 + C17506) * C32734 + (C17505 + C17504) * C31686 +
             (C15844 * C133 + C32550 * C142 + C15843 * C132 + C15837 * C141) *
                 C32727 +
             (C15844 * C121 + C32550 * C128 + C15843 * C120 + C15837 * C127) *
                 C31694) *
                C32885) *
               C530) *
              C32589 * C443)) /
        (p * q * std::sqrt(p + q));
    d2ee[84] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C15843 * C119 + C15837 * C126 + C15844 * C120 + C32550 * C127) *
                C31694 +
            (C15843 * C131 + C15837 * C140 + C15844 * C132 + C32550 * C141) *
                C32727 +
            (C17058 + C17059) * C31686 + (C17060 + C17061) * C32734 +
            C17074 * C31700 + C17075 * C24419) *
               C32885 +
           ((C15976 + C15977) * C31694 + (C15978 + C15979) * C32727 +
            C17706 * C31686 + C17707 * C32734 + C17040 * C31700 +
            C17041 * C24419) *
               C32691) *
              C32603 * C32589 * C110 -
          (((C17293 + C17292) * C24419 + (C17291 + C17290) * C31700 +
            (C17289 + C17288) * C32734 + (C17287 + C17286) * C31686 +
            (C16257 + C16256) * C32727 + (C16255 + C16254) * C31694) *
               C32691 +
           ((C17511 + C17510) * C24419 + (C17509 + C17508) * C31700 +
            (C17507 + C17506) * C32734 + (C17505 + C17504) * C31686 +
            (C15844 * C133 + C32550 * C142 + C15843 * C132 + C15837 * C141) *
                C32727 +
            (C15844 * C121 + C32550 * C128 + C15843 * C120 + C15837 * C127) *
                C31694) *
               C32885) *
              C32603 * C32589 * C111 +
          (((C15843 * C121 + C15837 * C128 + C15844 * C122 + C32550 * C129) *
                C31694 +
            (C15843 * C133 + C15837 * C142 + C15844 * C134 + C32550 * C143) *
                C32727 +
            (C15843 * C320 + C15837 * C335 + C15844 * C319 + C32550 * C334) *
                C31686 +
            (C15843 * C330 + C15837 * C350 + C15844 * C329 + C32550 * C349) *
                C32734 +
            (C15843 * C325 + C15837 * C340 + C15844 * C326 + C32550 * C341) *
                C31700 +
            (C15843 * C345 + C15837 * C355 + C15844 * C346 + C32550 * C356) *
                C24419) *
               C32885 +
           ((C15843 * C215 + C15837 * C230 + C15844 * C214 + C32550 * C229) *
                C31694 +
            (C15843 * C225 + C15837 * C245 + C15844 * C224 + C32550 * C244) *
                C32727 +
            (C15843 * C620 + C15837 * C625 + C15844 * C621 + C32550 * C626) *
                C31686 +
            (C15843 * C630 + C15837 * C635 + C15844 * C631 + C32550 * C636) *
                C32734 +
            (C15843 * C1067 + C15837 * C1079 + C15844 * C2192 +
             C32550 * C2193) *
                C31700 +
            (C15843 * C1082 + C15837 * C1094 + C15844 * C2194 +
             C32550 * C2195) *
                C24419) *
               C32691) *
              C32603 * C32589 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C15843 * C119 + C15837 * C126 + C15844 * C120 + C32550 * C127) *
                C31694 +
            (C15843 * C131 + C15837 * C140 + C15844 * C132 + C32550 * C141) *
                C32727 +
            (C17058 + C17059) * C31686 + (C17060 + C17061) * C32734 +
            C17074 * C31700 + C17075 * C24419) *
               C32885 +
           ((C15976 + C15977) * C31694 + (C15978 + C15979) * C32727 +
            C17706 * C31686 + C17707 * C32734 + C17040 * C31700 +
            C17041 * C24419) *
               C32691) *
              C32603 * C209 -
          (((C16874 + C16875) * C24419 + (C16876 + C16877) * C31700 +
            C20781 * C32734 + C20782 * C31686 + (C15983 + C15982) * C32727 +
            (C15981 + C15980) * C31694) *
               C32691 +
           (C17708 * C24419 + C17709 * C31700 + C17710 * C32734 +
            C17711 * C31686 + (C15979 + C15978) * C32727 +
            (C15977 + C15976) * C31694) *
               C32885) *
              C32603 * C210 +
          ((C15992 * C31694 + C15993 * C32727 + C20034 * C31686 +
            C20035 * C32734 + (C16877 + C16876) * C31700 +
            (C16875 + C16874) * C24419) *
               C32885 +
           (C15994 * C31694 + C15995 * C32727 + (C16553 + C16552) * C31686 +
            (C16551 + C16550) * C32734 +
            (C15843 * C6309 + C15837 * C6313 + C15844 * C7201 +
             C32550 * C7202) *
                C31700 +
            (C15843 * C6314 + C15837 * C6318 + C15844 * C7203 +
             C32550 * C7204) *
                C24419) *
               C32691) *
              C32603 * C211) *
         C32577) /
            (p * q * std::sqrt(p + q));
    d2ee[85] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C15843 * C119 + C15837 * C126 + C15844 * C120 + C32550 * C127) *
                 C20882 +
             (C15843 * C131 + C15837 * C140 + C15844 * C132 + C32550 * C141) *
                 C20880 +
             (C17058 + C17059) * C20883 + (C17060 + C17061) * C32731) *
                C32951 +
            ((C15976 + C15977) * C20882 + (C15978 + C15979) * C20880 +
             C17706 * C20883 + C17707 * C32731) *
                C32939 +
            C21841 * C32916) *
               C32603 * C440 -
           (((C16550 + C16551) * C32731 + (C16552 + C16553) * C20883 +
             (C15987 + C15986) * C20880 + (C15985 + C15984) * C20882) *
                C32916 +
            (C20781 * C32731 + C20782 * C20883 + (C15983 + C15982) * C20880 +
             (C15981 + C15980) * C20882) *
                C32939 +
            (C17710 * C32731 + C17711 * C20883 + (C15979 + C15978) * C20880 +
             (C15977 + C15976) * C20882) *
                C32951) *
               C32603 * C441) *
              C442 +
          ((((C16254 + C16255) * C20882 + (C16256 + C16257) * C20880 +
             (C17286 + C17287) * C20883 + (C17288 + C17289) * C32731) *
                C32951 +
            ((C16258 + C16259) * C20882 + (C16260 + C16261) * C20880 +
             (C20389 + C20390) * C20883 + (C20391 + C20392) * C32731) *
                C32939 +
            ((C16262 + C16263) * C20882 + (C16264 + C16265) * C20880 +
             (C15843 * C1581 + C15837 * C1584 + C15844 * C1582 +
              C32550 * C1585) *
                 C20883 +
             (C15843 * C1587 + C15837 * C1590 + C15844 * C1588 +
              C32550 * C1591) *
                 C32731) *
                C32916) *
               C32603 * C441 -
           (((C20392 + C20391) * C32731 + (C20390 + C20389) * C20883 +
             (C16261 + C16260) * C20880 + (C16259 + C16258) * C20882) *
                C32916 +
            ((C17289 + C17288) * C32731 + (C17287 + C17286) * C20883 +
             (C16257 + C16256) * C20880 + (C16255 + C16254) * C20882) *
                C32939 +
            ((C17507 + C17506) * C32731 + (C17505 + C17504) * C20883 +
             (C15844 * C133 + C32550 * C142 + C15843 * C132 + C15837 * C141) *
                 C20880 +
             (C15844 * C121 + C32550 * C128 + C15843 * C120 + C15837 * C127) *
                 C20882) *
                C32951) *
               C32603 * C440) *
              C443)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C15053 * C119 + C32957 * C126 + C15054 * C120 + C32950 * C127 +
             C15055 * C121 + C32937 * C128 + C15056 * C122 + C32920 * C129) *
                C20882 +
            (C15053 * C131 + C32957 * C140 + C15054 * C132 + C32950 * C141 +
             C15055 * C133 + C32937 * C142 + C15056 * C134 + C32920 * C143) *
                C20880 +
            (C21113 + C21114 + C21115 + C21116) * C20883 +
            (C21117 + C21118 + C21119 + C21120) * C32731) *
               C32633 * C32603 * C440 -
           ((C15732 + C15733 + C15734 + C15735) * C32731 +
            (C15736 + C15737 + C15738 + C15739) * C20883 +
            (C15195 + C15194 + C15193 + C15192) * C20880 +
            (C15191 + C15190 + C15189 + C15188) * C20882) *
               C32633 * C32603 * C441) *
              C442 +
          (((C15448 + C15449 + C15450 + C15451) * C20882 +
            (C15452 + C15453 + C15454 + C15455) * C20880 +
            (C15053 * C619 + C32957 * C624 + C15054 * C620 + C32950 * C625 +
             C15055 * C621 + C32937 * C626 + C15056 * C622 + C32920 * C627) *
                C20883 +
            (C15053 * C629 + C32957 * C634 + C15054 * C630 + C32950 * C635 +
             C15055 * C631 + C32937 * C636 + C15056 * C632 + C32920 * C637) *
                C32731) *
               C32633 * C32603 * C441 -
           ((C15056 * C328 + C32920 * C348 + C15055 * C329 + C32937 * C349 +
             C15054 * C330 + C32950 * C350 + C15053 * C331 + C32957 * C351) *
                C32731 +
            (C15056 * C318 + C32920 * C333 + C15055 * C319 + C32937 * C334 +
             C15054 * C320 + C32950 * C335 + C15053 * C321 + C32957 * C336) *
                C20883 +
            (C15056 * C135 + C32920 * C144 + C15055 * C134 + C32937 * C143 +
             C15054 * C133 + C32950 * C142 + C15053 * C132 + C32957 * C141) *
                C20880 +
            (C15056 * C123 + C32920 * C130 + C15055 * C122 + C32937 * C129 +
             C15054 * C121 + C32950 * C128 + C15053 * C120 + C32957 * C127) *
                C20882) *
               C32633 * C32603 * C440) *
              C443)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C15843 * C119 + C15837 * C126 + C15844 * C120 + C32550 * C127) *
                C22671 +
            (C15843 * C131 + C15837 * C140 + C15844 * C132 + C32550 * C141) *
                C32959 +
            (C17058 + C17059) * C22672 + (C17060 + C17061) * C32956 +
            C17074 * C22673 + C17075 * C32947 + C22872 * C22674 +
            C22873 * C32932) *
               C32633 * C32603 * C440 -
           ((C17066 + C17067) * C32932 + (C17068 + C17069) * C22674 +
            C17708 * C32947 + C17709 * C22673 + C17710 * C32956 +
            C17711 * C22672 + (C15979 + C15978) * C32959 +
            (C15977 + C15976) * C22671) *
               C32633 * C32603 * C441) *
              C442 +
          (((C16254 + C16255) * C22671 + (C16256 + C16257) * C32959 +
            (C17286 + C17287) * C22672 + (C17288 + C17289) * C32956 +
            (C17290 + C17291) * C22673 + (C17292 + C17293) * C32947 +
            (C15843 * C2529 + C15837 * C2532 + C15844 * C2530 +
             C32550 * C2533) *
                C22674 +
            (C15843 * C2535 + C15837 * C2538 + C15844 * C2536 +
             C32550 * C2539) *
                C32932) *
               C32633 * C32603 * C441 -
           ((C15844 * C1970 + C32550 * C1982 + C15843 * C1971 +
             C15837 * C1983) *
                C32932 +
            (C15844 * C1964 + C32550 * C1973 + C15843 * C1965 +
             C15837 * C1974) *
                C22674 +
            (C17511 + C17510) * C32947 + (C17509 + C17508) * C22673 +
            (C17507 + C17506) * C32956 + (C17505 + C17504) * C22672 +
            (C15844 * C133 + C32550 * C142 + C15843 * C132 + C15837 * C141) *
                C32959 +
            (C15844 * C121 + C32550 * C128 + C15843 * C120 + C15837 * C127) *
                C22671) *
               C32633 * C32603 * C440) *
              C443)) /
            (p * q * std::sqrt(p + q));
    d2ee[86] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C15843 * C119 + C15837 * C126 + C15844 * C120 + C32550 * C127) *
                 C20882 +
             (C15843 * C131 + C15837 * C140 + C15844 * C132 + C32550 * C141) *
                 C20880 +
             (C17058 + C17059) * C20883 + (C17060 + C17061) * C32731) *
                C32951 +
            ((C15976 + C15977) * C20882 + (C15978 + C15979) * C20880 +
             C17706 * C20883 + C17707 * C32731) *
                C32939 +
            C21841 * C32916) *
               C530 -
           (((C16874 + C16875) * C32731 + (C16876 + C16877) * C20883 +
             C20781 * C20880 + C20782 * C20882) *
                C32916 +
            (C17708 * C32731 + C17709 * C20883 + C17710 * C20880 +
             C17711 * C20882) *
                C32939 +
            ((C17065 + C17064) * C32731 + (C17063 + C17062) * C20883 +
             (C17061 + C17060) * C20880 + (C17059 + C17058) * C20882) *
                C32951) *
               C531) *
              C440 +
          (((C17706 * C20882 + C17707 * C20880 + C17040 * C20883 +
             C17041 * C32731) *
                C32951 +
            (C20034 * C20882 + C20035 * C20880 + (C16877 + C16876) * C20883 +
             (C16875 + C16874) * C32731) *
                C32939 +
            ((C16553 + C16552) * C20882 + (C16551 + C16550) * C20880 +
             (C15843 * C6309 + C15837 * C6313 + C15844 * C7201 +
              C32550 * C7202) *
                 C20883 +
             (C15843 * C6314 + C15837 * C6318 + C15844 * C7203 +
              C32550 * C7204) *
                 C32731) *
                C32916) *
               C531 -
           (((C16550 + C16551) * C32731 + (C16552 + C16553) * C20883 +
             (C15987 + C15986) * C20880 + (C15985 + C15984) * C20882) *
                C32916 +
            (C20781 * C32731 + C20782 * C20883 + (C15983 + C15982) * C20880 +
             (C15981 + C15980) * C20882) *
                C32939 +
            (C17710 * C32731 + C17711 * C20883 + (C15979 + C15978) * C20880 +
             (C15977 + C15976) * C20882) *
                C32951) *
               C530) *
              C441) *
         C32577) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C15053 * C119 + C32957 * C126 + C15054 * C120 + C32950 * C127 +
             C15055 * C121 + C32937 * C128 + C15056 * C122 + C32920 * C129) *
                C20882 +
            (C15053 * C131 + C32957 * C140 + C15054 * C132 + C32950 * C141 +
             C15055 * C133 + C32937 * C142 + C15056 * C134 + C32920 * C143) *
                C20880 +
            (C21113 + C21114 + C21115 + C21116) * C20883 +
            (C21117 + C21118 + C21119 + C21120) * C32731) *
               C32633 * C530 -
           ((C21121 + C21122 + C21123 + C21124) * C32731 +
            (C21125 + C21126 + C21127 + C21128) * C20883 +
            (C21120 + C21119 + C21118 + C21117) * C20880 +
            (C21116 + C21115 + C21114 + C21113) * C20882) *
               C32633 * C531) *
              C440 +
          (((C15739 + C15738 + C15737 + C15736) * C20882 +
            (C15735 + C15734 + C15733 + C15732) * C20880 +
            (C15053 * C1065 + C32957 * C1077 + C15054 * C1066 + C32950 * C1078 +
             C15055 * C1067 + C32937 * C1079 + C15056 * C2192 +
             C32920 * C2193) *
                C20883 +
            (C15053 * C1080 + C32957 * C1092 + C15054 * C1081 + C32950 * C1093 +
             C15055 * C1082 + C32937 * C1094 + C15056 * C2194 +
             C32920 * C2195) *
                C32731) *
               C32633 * C531 -
           ((C15732 + C15733 + C15734 + C15735) * C32731 +
            (C15736 + C15737 + C15738 + C15739) * C20883 +
            (C15195 + C15194 + C15193 + C15192) * C20880 +
            (C15191 + C15190 + C15189 + C15188) * C20882) *
               C32633 * C530) *
              C441) *
         C32577) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C15843 * C119 + C15837 * C126 + C15844 * C120 + C32550 * C127) *
                C22671 +
            (C15843 * C131 + C15837 * C140 + C15844 * C132 + C32550 * C141) *
                C32959 +
            (C17058 + C17059) * C22672 + (C17060 + C17061) * C32956 +
            C17074 * C22673 + C17075 * C32947 + C22872 * C22674 +
            C22873 * C32932) *
               C32633 * C530 -
           ((C22882 + C22883) * C32932 + (C22884 + C22885) * C22674 +
            (C17070 + C17071) * C32947 + (C17072 + C17073) * C22673 +
            (C17065 + C17064) * C32956 + (C17063 + C17062) * C22672 +
            (C17061 + C17060) * C32959 + (C17059 + C17058) * C22671) *
               C32633 * C531) *
              C440 +
          ((C17706 * C22671 + C17707 * C32959 + C17040 * C22672 +
            C17041 * C32956 + (C17069 + C17068) * C22673 +
            (C17067 + C17066) * C32947 +
            (C15843 * C7014 + C15837 * C7018 + C15844 * C12241 +
             C32550 * C12242) *
                C22674 +
            (C15843 * C7019 + C15837 * C7023 + C15844 * C12243 +
             C32550 * C12244) *
                C32932) *
               C32633 * C531 -
           ((C17066 + C17067) * C32932 + (C17068 + C17069) * C22674 +
            C17708 * C32947 + C17709 * C22673 + C17710 * C32956 +
            C17711 * C22672 + (C15979 + C15978) * C32959 +
            (C15977 + C15976) * C22671) *
               C32633 * C530) *
              C441) *
         C32577) /
            (p * q * std::sqrt(p + q));
    d2ee[87] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((C15053 * C119 + C32957 * C126 + C15054 * C120 + C32950 * C127 +
                C15055 * C121 + C32937 * C128 + C15056 * C122 + C32920 * C129) *
                   C20882 +
               (C15053 * C131 + C32957 * C140 + C15054 * C132 + C32950 * C141 +
                C15055 * C133 + C32937 * C142 + C15056 * C134 + C32920 * C143) *
                   C20880 +
               (C15053 * C322 + C32957 * C337 + C15054 * C321 + C32950 * C336 +
                C15055 * C320 + C32937 * C335 + C15056 * C319 + C32920 * C334) *
                   C20883 +
               (C15053 * C332 + C32957 * C352 + C15054 * C331 + C32950 * C351 +
                C15055 * C330 + C32937 * C350 + C15056 * C329 + C32920 * C349) *
                   C32731) *
                  C32633 * C32603 * C32589 * C110 -
              ((C15056 * C328 + C32920 * C348 + C15055 * C329 + C32937 * C349 +
                C15054 * C330 + C32950 * C350 + C15053 * C331 + C32957 * C351) *
                   C32731 +
               (C15056 * C318 + C32920 * C333 + C15055 * C319 + C32937 * C334 +
                C15054 * C320 + C32950 * C335 + C15053 * C321 + C32957 * C336) *
                   C20883 +
               (C15056 * C135 + C32920 * C144 + C15055 * C134 + C32937 * C143 +
                C15054 * C133 + C32950 * C142 + C15053 * C132 + C32957 * C141) *
                   C20880 +
               (C15056 * C123 + C32920 * C130 + C15055 * C122 + C32937 * C129 +
                C15054 * C121 + C32950 * C128 + C15053 * C120 + C32957 * C127) *
                   C20882) *
                  C32633 * C32603 * C32589 * C111 +
              ((C15053 * C121 + C32957 * C128 + C15054 * C122 + C32950 * C129 +
                C15055 * C123 + C32937 * C130 + C15056 * C124 + C32920 * C137) *
                   C20882 +
               (C15053 * C133 + C32957 * C142 + C15054 * C134 + C32950 * C143 +
                C15055 * C135 + C32937 * C144 + C15056 * C136 + C32920 * C145) *
                   C20880 +
               (C15053 * C320 + C32957 * C335 + C15054 * C319 + C32950 * C334 +
                C15055 * C318 + C32937 * C333 + C15056 * C532 + C32920 * C533) *
                   C20883 +
               (C15053 * C330 + C32957 * C350 + C15054 * C329 + C32950 * C349 +
                C15055 * C328 + C32937 * C348 + C15056 * C534 + C32920 * C535) *
                   C32731) *
                  C32633 * C32603 * C32589 * C112) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((C15053 * C119 + C32957 * C126 + C15054 * C120 + C32950 * C127 +
                C15055 * C121 + C32937 * C128 + C15056 * C122 + C32920 * C129) *
                   C20882 +
               (C15053 * C131 + C32957 * C140 + C15054 * C132 + C32950 * C141 +
                C15055 * C133 + C32937 * C142 + C15056 * C134 + C32920 * C143) *
                   C20880 +
               (C15053 * C322 + C32957 * C337 + C15054 * C321 + C32950 * C336 +
                C15055 * C320 + C32937 * C335 + C15056 * C319 + C32920 * C334) *
                   C20883 +
               (C15053 * C332 + C32957 * C352 + C15054 * C331 + C32950 * C351 +
                C15055 * C330 + C32937 * C350 + C15056 * C329 + C32920 * C349) *
                   C32731) *
                  C32633 * C32603 * C209 -
              ((C15732 + C15733 + C15734 + C15735) * C32731 +
               (C15736 + C15737 + C15738 + C15739) * C20883 +
               (C15195 + C15194 + C15193 + C15192) * C20880 +
               (C15191 + C15190 + C15189 + C15188) * C20882) *
                  C32633 * C32603 * C210 +
              ((C15203 + C15202 + C15201 + C15200) * C20882 +
               (C15199 + C15198 + C15197 + C15196) * C20880 +
               (C15053 * C1064 + C32957 * C1076 + C15054 * C1063 +
                C32950 * C1075 + C15055 * C1062 + C32937 * C1074 +
                C15056 * C1430 + C32920 * C1431) *
                   C20883 +
               (C15053 * C1073 + C32957 * C1091 + C15054 * C1072 +
                C32950 * C1090 + C15055 * C1071 + C32937 * C1089 +
                C15056 * C1432 + C32920 * C1433) *
                   C32731) *
                  C32633 * C32603 * C211) *
             C32577) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C15053 * C119 + C32957 * C126 + C15054 * C120 + C32950 * C127 +
            C15055 * C121 + C32937 * C128 + C15056 * C122 + C32920 * C129) *
               C20882 +
           (C15053 * C131 + C32957 * C140 + C15054 * C132 + C32950 * C141 +
            C15055 * C133 + C32937 * C142 + C15056 * C134 + C32920 * C143) *
               C20880 +
           (C21113 + C21114 + C21115 + C21116) * C20883 +
           (C21117 + C21118 + C21119 + C21120) * C32731) *
              C32633 * C315 -
          ((C21121 + C21122 + C21123 + C21124) * C32731 +
           (C21125 + C21126 + C21127 + C21128) * C20883 +
           (C21120 + C21119 + C21118 + C21117) * C20880 +
           (C21116 + C21115 + C21114 + C21113) * C20882) *
              C32633 * C316 +
          ((C21128 + C21127 + C21126 + C21125) * C20882 +
           (C21124 + C21123 + C21122 + C21121) * C20880 +
           (C15053 * C1966 + C32957 * C1975 + C15054 * C1965 + C32950 * C1974 +
            C15055 * C1964 + C32937 * C1973 + C15056 * C2342 + C32920 * C2343) *
               C20883 +
           (C15053 * C1972 + C32957 * C1984 + C15054 * C1971 + C32950 * C1983 +
            C15055 * C1970 + C32937 * C1982 + C15056 * C2344 + C32920 * C2345) *
               C32731) *
              C32633 * C317) *
         C32589 * C32577) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C15843 * C119 + C15837 * C126 + C15844 * C120 + C32550 * C127) *
                C20882 +
            (C15843 * C131 + C15837 * C140 + C15844 * C132 + C32550 * C141) *
                C20880 +
            (C17058 + C17059) * C20883 + (C17060 + C17061) * C32731) *
               C32951 +
           ((C15976 + C15977) * C20882 + (C15978 + C15979) * C20880 +
            C17706 * C20883 + C17707 * C32731) *
               C32939 +
           (C15992 * C20882 + C15993 * C20880 + C20034 * C20883 +
            C20035 * C32731) *
               C32916) *
              C32603 * C32589 * C110 -
          (((C20392 + C20391) * C32731 + (C20390 + C20389) * C20883 +
            (C16261 + C16260) * C20880 + (C16259 + C16258) * C20882) *
               C32916 +
           ((C17289 + C17288) * C32731 + (C17287 + C17286) * C20883 +
            (C16257 + C16256) * C20880 + (C16255 + C16254) * C20882) *
               C32939 +
           ((C17507 + C17506) * C32731 + (C17505 + C17504) * C20883 +
            (C15844 * C133 + C32550 * C142 + C15843 * C132 + C15837 * C141) *
                C20880 +
            (C15844 * C121 + C32550 * C128 + C15843 * C120 + C15837 * C127) *
                C20882) *
               C32951) *
              C32603 * C32589 * C111 +
          (((C15843 * C121 + C15837 * C128 + C15844 * C122 + C32550 * C129) *
                C20882 +
            (C15843 * C133 + C15837 * C142 + C15844 * C134 + C32550 * C143) *
                C20880 +
            (C15843 * C320 + C15837 * C335 + C15844 * C319 + C32550 * C334) *
                C20883 +
            (C15843 * C330 + C15837 * C350 + C15844 * C329 + C32550 * C349) *
                C32731) *
               C32951 +
           ((C15843 * C215 + C15837 * C230 + C15844 * C214 + C32550 * C229) *
                C20882 +
            (C15843 * C225 + C15837 * C245 + C15844 * C224 + C32550 * C244) *
                C20880 +
            (C15843 * C620 + C15837 * C625 + C15844 * C621 + C32550 * C626) *
                C20883 +
            (C15843 * C630 + C15837 * C635 + C15844 * C631 + C32550 * C636) *
                C32731) *
               C32939 +
           ((C15843 * C220 + C15837 * C235 + C15844 * C221 + C32550 * C236) *
                C20882 +
            (C15843 * C240 + C15837 * C250 + C15844 * C241 + C32550 * C251) *
                C20880 +
            (C15843 * C1062 + C15837 * C1074 + C15844 * C1430 +
             C32550 * C1431) *
                C20883 +
            (C15843 * C1071 + C15837 * C1089 + C15844 * C1432 +
             C32550 * C1433) *
                C32731) *
               C32916) *
              C32603 * C32589 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C15843 * C119 + C15837 * C126 + C15844 * C120 + C32550 * C127) *
                C20882 +
            (C15843 * C131 + C15837 * C140 + C15844 * C132 + C32550 * C141) *
                C20880 +
            (C17058 + C17059) * C20883 + (C17060 + C17061) * C32731) *
               C32951 +
           ((C15976 + C15977) * C20882 + (C15978 + C15979) * C20880 +
            C17706 * C20883 + C17707 * C32731) *
               C32939 +
           C21841 * C32916) *
              C32603 * C209 -
          (((C16550 + C16551) * C32731 + (C16552 + C16553) * C20883 +
            (C15987 + C15986) * C20880 + (C15985 + C15984) * C20882) *
               C32916 +
           (C20781 * C32731 + C20782 * C20883 + (C15983 + C15982) * C20880 +
            (C15981 + C15980) * C20882) *
               C32939 +
           (C17710 * C32731 + C17711 * C20883 + (C15979 + C15978) * C20880 +
            (C15977 + C15976) * C20882) *
               C32951) *
              C32603 * C210 +
          (C21841 * C32951 +
           (C15994 * C20882 + C15995 * C20880 + (C16553 + C16552) * C20883 +
            (C16551 + C16550) * C32731) *
               C32939 +
           ((C15991 + C15990) * C20882 + (C15989 + C15988) * C20880 +
            (C15843 * C6308 + C15837 * C6312 + C15844 * C6520 +
             C32550 * C6521) *
                C20883 +
            (C15843 * C6311 + C15837 * C6317 + C15844 * C6522 +
             C32550 * C6523) *
                C32731) *
               C32916) *
              C32603 * C211) *
         C32577) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C15843 * C119 + C15837 * C126 + C15844 * C120 + C32550 * C127) *
                C20882 +
            (C15843 * C131 + C15837 * C140 + C15844 * C132 + C32550 * C141) *
                C20880 +
            (C17058 + C17059) * C20883 + (C17060 + C17061) * C32731) *
               C32951 +
           ((C15976 + C15977) * C20882 + (C15978 + C15979) * C20880 +
            C17706 * C20883 + C17707 * C32731) *
               C32939 +
           C21841 * C32916) *
              C315 -
          (((C16874 + C16875) * C32731 + (C16876 + C16877) * C20883 +
            C20781 * C20880 + C20782 * C20882) *
               C32916 +
           (C17708 * C32731 + C17709 * C20883 + C17710 * C20880 +
            C17711 * C20882) *
               C32939 +
           ((C17065 + C17064) * C32731 + (C17063 + C17062) * C20883 +
            (C17061 + C17060) * C20880 + (C17059 + C17058) * C20882) *
               C32951) *
              C316 +
          ((C17074 * C20882 + C17075 * C20880 + (C17073 + C17072) * C20883 +
            (C17071 + C17070) * C32731) *
               C32951 +
           (C17040 * C20882 + C17041 * C20880 + (C17069 + C17068) * C20883 +
            (C17067 + C17066) * C32731) *
               C32939 +
           ((C16877 + C16876) * C20882 + (C16875 + C16874) * C20880 +
            (C15843 * C7013 + C15837 * C7017 + C15844 * C7387 +
             C32550 * C7388) *
                C20883 +
            (C15843 * C7016 + C15837 * C7022 + C15844 * C7389 +
             C32550 * C7390) *
                C32731) *
               C32916) *
              C317) *
         C32589 * C32577) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C15843 * C119 + C15837 * C126 + C15844 * C120 + C32550 * C127) *
               C22671 +
           (C15843 * C131 + C15837 * C140 + C15844 * C132 + C32550 * C141) *
               C32959 +
           (C17058 + C17059) * C22672 + (C17060 + C17061) * C32956 +
           C17074 * C22673 + C17075 * C32947 + (C17073 + C17072) * C22674 +
           (C17071 + C17070) * C32932) *
              C32633 * C32603 * C32589 * C110 -
          ((C15844 * C1970 + C32550 * C1982 + C15843 * C1971 + C15837 * C1983) *
               C32932 +
           (C15844 * C1964 + C32550 * C1973 + C15843 * C1965 + C15837 * C1974) *
               C22674 +
           (C17511 + C17510) * C32947 + (C17509 + C17508) * C22673 +
           (C17507 + C17506) * C32956 + (C17505 + C17504) * C22672 +
           (C15844 * C133 + C32550 * C142 + C15843 * C132 + C15837 * C141) *
               C32959 +
           (C15844 * C121 + C32550 * C128 + C15843 * C120 + C15837 * C127) *
               C22671) *
              C32633 * C32603 * C32589 * C111 +
          ((C15843 * C121 + C15837 * C128 + C15844 * C122 + C32550 * C129) *
               C22671 +
           (C15843 * C133 + C15837 * C142 + C15844 * C134 + C32550 * C143) *
               C32959 +
           (C15843 * C320 + C15837 * C335 + C15844 * C319 + C32550 * C334) *
               C22672 +
           (C15843 * C330 + C15837 * C350 + C15844 * C329 + C32550 * C349) *
               C32956 +
           (C15843 * C325 + C15837 * C340 + C15844 * C326 + C32550 * C341) *
               C22673 +
           (C15843 * C345 + C15837 * C355 + C15844 * C346 + C32550 * C356) *
               C32947 +
           (C15843 * C1964 + C15837 * C1973 + C15844 * C2342 + C32550 * C2343) *
               C22674 +
           (C15843 * C1970 + C15837 * C1982 + C15844 * C2344 + C32550 * C2345) *
               C32932) *
              C32633 * C32603 * C32589 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C15843 * C119 + C15837 * C126 + C15844 * C120 + C32550 * C127) *
               C22671 +
           (C15843 * C131 + C15837 * C140 + C15844 * C132 + C32550 * C141) *
               C32959 +
           (C17058 + C17059) * C22672 + (C17060 + C17061) * C32956 +
           C17074 * C22673 + C17075 * C32947 + (C17073 + C17072) * C22674 +
           (C17071 + C17070) * C32932) *
              C32633 * C32603 * C209 -
          ((C17066 + C17067) * C32932 + (C17068 + C17069) * C22674 +
           C17708 * C32947 + C17709 * C22673 + C17710 * C32956 +
           C17711 * C22672 + (C15979 + C15978) * C32959 +
           (C15977 + C15976) * C22671) *
              C32633 * C32603 * C210 +
          (C15992 * C22671 + C15993 * C32959 + C20034 * C22672 +
           C20035 * C32956 + (C16877 + C16876) * C22673 +
           (C16875 + C16874) * C32947 +
           (C15843 * C7013 + C15837 * C7017 + C15844 * C7387 + C32550 * C7388) *
               C22674 +
           (C15843 * C7016 + C15837 * C7022 + C15844 * C7389 + C32550 * C7390) *
               C32932) *
              C32633 * C32603 * C211) *
         C32577) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C15843 * C119 + C15837 * C126 + C15844 * C120 + C32550 * C127) *
               C22671 +
           (C15843 * C131 + C15837 * C140 + C15844 * C132 + C32550 * C141) *
               C32959 +
           (C17058 + C17059) * C22672 + (C17060 + C17061) * C32956 +
           C17074 * C22673 + C17075 * C32947 + C22872 * C22674 +
           C22873 * C32932) *
              C32633 * C315 -
          ((C22882 + C22883) * C32932 + (C22884 + C22885) * C22674 +
           (C17070 + C17071) * C32947 + (C17072 + C17073) * C22673 +
           (C17065 + C17064) * C32956 + (C17063 + C17062) * C22672 +
           (C17061 + C17060) * C32959 + (C17059 + C17058) * C22671) *
              C32633 * C316 +
          (C17074 * C22671 + C17075 * C32959 + C22872 * C22672 +
           C22873 * C32956 + (C22885 + C22884) * C22673 +
           (C22883 + C22882) * C32947 +
           (C15843 * C12139 + C15837 * C12142 + C15844 * C12327 +
            C32550 * C12328) *
               C22674 +
           (C15843 * C12141 + C15837 * C12145 + C15844 * C12329 +
            C32550 * C12330) *
               C32932) *
              C32633 * C317) *
         C32589 * C32577) /
            (p * q * std::sqrt(p + q));
    d2ee[88] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C15843 * C119 + C15837 * C126 + C15844 * C120 + C32550 * C127) *
                 C20882 +
             (C15843 * C131 + C15837 * C140 + C15844 * C132 + C32550 * C141) *
                 C20880 +
             (C17058 + C17059) * C20883 + (C17060 + C17061) * C32731) *
                C32951 +
            ((C15976 + C15977) * C20882 + (C15978 + C15979) * C20880 +
             C17706 * C20883 + C17707 * C32731) *
                C32939 +
            C21841 * C32916) *
               C530 -
           (((C16874 + C16875) * C32731 + (C16876 + C16877) * C20883 +
             C20781 * C20880 + C20782 * C20882) *
                C32916 +
            (C17708 * C32731 + C17709 * C20883 + C17710 * C20880 +
             C17711 * C20882) *
                C32939 +
            ((C17065 + C17064) * C32731 + (C17063 + C17062) * C20883 +
             (C17061 + C17060) * C20880 + (C17059 + C17058) * C20882) *
                C32951) *
               C531) *
              C32589 * C442 +
          ((((C17504 + C17505) * C20882 + (C17506 + C17507) * C20880 +
             (C17508 + C17509) * C20883 + (C17510 + C17511) * C32731) *
                C32951 +
            ((C17286 + C17287) * C20882 + (C17288 + C17289) * C20880 +
             (C17290 + C17291) * C20883 + (C17292 + C17293) * C32731) *
                C32939 +
            ((C20389 + C20390) * C20882 + (C20391 + C20392) * C20880 +
             (C15843 * C1069 + C15837 * C1084 + C15844 * C1070 +
              C32550 * C1085) *
                 C20883 +
             (C15843 * C1087 + C15837 * C1096 + C15844 * C1088 +
              C32550 * C1097) *
                 C32731) *
                C32916) *
               C531 -
           (((C20392 + C20391) * C32731 + (C20390 + C20389) * C20883 +
             (C16261 + C16260) * C20880 + (C16259 + C16258) * C20882) *
                C32916 +
            ((C17289 + C17288) * C32731 + (C17287 + C17286) * C20883 +
             (C16257 + C16256) * C20880 + (C16255 + C16254) * C20882) *
                C32939 +
            ((C17507 + C17506) * C32731 + (C17505 + C17504) * C20883 +
             (C15844 * C133 + C32550 * C142 + C15843 * C132 + C15837 * C141) *
                 C20880 +
             (C15844 * C121 + C32550 * C128 + C15843 * C120 + C15837 * C127) *
                 C20882) *
                C32951) *
               C530) *
              C32589 * C443)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C15053 * C119 + C32957 * C126 + C15054 * C120 + C32950 * C127 +
             C15055 * C121 + C32937 * C128 + C15056 * C122 + C32920 * C129) *
                C20882 +
            (C15053 * C131 + C32957 * C140 + C15054 * C132 + C32950 * C141 +
             C15055 * C133 + C32937 * C142 + C15056 * C134 + C32920 * C143) *
                C20880 +
            (C21113 + C21114 + C21115 + C21116) * C20883 +
            (C21117 + C21118 + C21119 + C21120) * C32731) *
               C32633 * C530 -
           ((C21121 + C21122 + C21123 + C21124) * C32731 +
            (C21125 + C21126 + C21127 + C21128) * C20883 +
            (C21120 + C21119 + C21118 + C21117) * C20880 +
            (C21116 + C21115 + C21114 + C21113) * C20882) *
               C32633 * C531) *
              C32589 * C442 +
          (((C21405 + C21406 + C21407 + C21408) * C20882 +
            (C21409 + C21410 + C21411 + C21412) * C20880 +
            (C15053 * C324 + C32957 * C339 + C15054 * C325 + C32950 * C340 +
             C15055 * C326 + C32937 * C341 + C15056 * C327 + C32920 * C342) *
                C20883 +
            (C15053 * C344 + C32957 * C354 + C15054 * C345 + C32950 * C355 +
             C15055 * C346 + C32937 * C356 + C15056 * C347 + C32920 * C357) *
                C32731) *
               C32633 * C531 -
           ((C21412 + C21411 + C21410 + C21409) * C32731 +
            (C21408 + C21407 + C21406 + C21405) * C20883 +
            (C15056 * C135 + C32920 * C144 + C15055 * C134 + C32937 * C143 +
             C15054 * C133 + C32950 * C142 + C15053 * C132 + C32957 * C141) *
                C20880 +
            (C15056 * C123 + C32920 * C130 + C15055 * C122 + C32937 * C129 +
             C15054 * C121 + C32950 * C128 + C15053 * C120 + C32957 * C127) *
                C20882) *
               C32633 * C530) *
              C32589 * C443)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C15843 * C119 + C15837 * C126 + C15844 * C120 + C32550 * C127) *
                C22671 +
            (C15843 * C131 + C15837 * C140 + C15844 * C132 + C32550 * C141) *
                C32959 +
            (C17058 + C17059) * C22672 + (C17060 + C17061) * C32956 +
            C17074 * C22673 + C17075 * C32947 + C22872 * C22674 +
            C22873 * C32932) *
               C32633 * C530 -
           ((C22882 + C22883) * C32932 + (C22884 + C22885) * C22674 +
            (C17070 + C17071) * C32947 + (C17072 + C17073) * C22673 +
            (C17065 + C17064) * C32956 + (C17063 + C17062) * C22672 +
            (C17061 + C17060) * C32959 + (C17059 + C17058) * C22671) *
               C32633 * C531) *
              C32589 * C442 +
          (((C17504 + C17505) * C22671 + (C17506 + C17507) * C32959 +
            (C17508 + C17509) * C22672 + (C17510 + C17511) * C32956 +
            (C23154 + C23155) * C22673 + (C23156 + C23157) * C32947 +
            (C15843 * C1968 + C15837 * C1977 + C15844 * C1969 +
             C32550 * C1978) *
                C22674 +
            (C15843 * C1980 + C15837 * C1986 + C15844 * C1981 +
             C32550 * C1987) *
                C32932) *
               C32633 * C531 -
           ((C23157 + C23156) * C32932 + (C23155 + C23154) * C22674 +
            (C17511 + C17510) * C32947 + (C17509 + C17508) * C22673 +
            (C17507 + C17506) * C32956 + (C17505 + C17504) * C22672 +
            (C15844 * C133 + C32550 * C142 + C15843 * C132 + C15837 * C141) *
                C32959 +
            (C15844 * C121 + C32550 * C128 + C15843 * C120 + C15837 * C127) *
                C22671) *
               C32633 * C530) *
              C32589 * C443)) /
            (p * q * std::sqrt(p + q));
    d2ee[89] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C15053 * C119 + C32957 * C126 + C15054 * C120 + C32950 * C127 +
            C15055 * C121 + C32937 * C128 + C15056 * C122 + C32920 * C129) *
               C20882 +
           (C15053 * C131 + C32957 * C140 + C15054 * C132 + C32950 * C141 +
            C15055 * C133 + C32937 * C142 + C15056 * C134 + C32920 * C143) *
               C20880 +
           (C15053 * C322 + C32957 * C337 + C15054 * C321 + C32950 * C336 +
            C15055 * C320 + C32937 * C335 + C15056 * C319 + C32920 * C334) *
               C20883 +
           (C15053 * C332 + C32957 * C352 + C15054 * C331 + C32950 * C351 +
            C15055 * C330 + C32937 * C350 + C15056 * C329 + C32920 * C349) *
               C32731) *
              C32633 * C32603 * C209 -
          ((C15732 + C15733 + C15734 + C15735) * C32731 +
           (C15736 + C15737 + C15738 + C15739) * C20883 +
           (C15195 + C15194 + C15193 + C15192) * C20880 +
           (C15191 + C15190 + C15189 + C15188) * C20882) *
              C32633 * C32603 * C210 +
          ((C15203 + C15202 + C15201 + C15200) * C20882 +
           (C15199 + C15198 + C15197 + C15196) * C20880 +
           (C15053 * C1064 + C32957 * C1076 + C15054 * C1063 + C32950 * C1075 +
            C15055 * C1062 + C32937 * C1074 + C15056 * C1430 + C32920 * C1431) *
               C20883 +
           (C15053 * C1073 + C32957 * C1091 + C15054 * C1072 + C32950 * C1090 +
            C15055 * C1071 + C32937 * C1089 + C15056 * C1432 + C32920 * C1433) *
               C32731) *
              C32633 * C32603 * C211) *
         C32577) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C15053 * C119 + C32957 * C126 + C15054 * C120 + C32950 * C127 +
            C15055 * C121 + C32937 * C128 + C15056 * C122 + C32920 * C129) *
               C20882 +
           (C15053 * C131 + C32957 * C140 + C15054 * C132 + C32950 * C141 +
            C15055 * C133 + C32937 * C142 + C15056 * C134 + C32920 * C143) *
               C20880 +
           (C15053 * C322 + C32957 * C337 + C15054 * C321 + C32950 * C336 +
            C15055 * C320 + C32937 * C335 + C15056 * C319 + C32920 * C334) *
               C20883 +
           (C15053 * C332 + C32957 * C352 + C15054 * C331 + C32950 * C351 +
            C15055 * C330 + C32937 * C350 + C15056 * C329 + C32920 * C349) *
               C32731) *
              C32633 * C32603 * C32589 * C110 -
          ((C15056 * C328 + C32920 * C348 + C15055 * C329 + C32937 * C349 +
            C15054 * C330 + C32950 * C350 + C15053 * C331 + C32957 * C351) *
               C32731 +
           (C15056 * C318 + C32920 * C333 + C15055 * C319 + C32937 * C334 +
            C15054 * C320 + C32950 * C335 + C15053 * C321 + C32957 * C336) *
               C20883 +
           (C15056 * C135 + C32920 * C144 + C15055 * C134 + C32937 * C143 +
            C15054 * C133 + C32950 * C142 + C15053 * C132 + C32957 * C141) *
               C20880 +
           (C15056 * C123 + C32920 * C130 + C15055 * C122 + C32937 * C129 +
            C15054 * C121 + C32950 * C128 + C15053 * C120 + C32957 * C127) *
               C20882) *
              C32633 * C32603 * C32589 * C111 +
          ((C15053 * C121 + C32957 * C128 + C15054 * C122 + C32950 * C129 +
            C15055 * C123 + C32937 * C130 + C15056 * C124 + C32920 * C137) *
               C20882 +
           (C15053 * C133 + C32957 * C142 + C15054 * C134 + C32950 * C143 +
            C15055 * C135 + C32937 * C144 + C15056 * C136 + C32920 * C145) *
               C20880 +
           (C15053 * C320 + C32957 * C335 + C15054 * C319 + C32950 * C334 +
            C15055 * C318 + C32937 * C333 + C15056 * C532 + C32920 * C533) *
               C20883 +
           (C15053 * C330 + C32957 * C350 + C15054 * C329 + C32950 * C349 +
            C15055 * C328 + C32937 * C348 + C15056 * C534 + C32920 * C535) *
               C32731) *
              C32633 * C32603 * C32589 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C15843 * C119 + C15837 * C126 + C15844 * C120 + C32550 * C127) *
                C20882 +
            (C15843 * C131 + C15837 * C140 + C15844 * C132 + C32550 * C141) *
                C20880 +
            (C17058 + C17059) * C20883 + (C17060 + C17061) * C32731) *
               C32951 +
           ((C15976 + C15977) * C20882 + (C15978 + C15979) * C20880 +
            C17706 * C20883 + C17707 * C32731) *
               C32939 +
           (C15992 * C20882 + C15993 * C20880 + C20034 * C20883 +
            C20035 * C32731) *
               C32916) *
              C32603 * C32589 * C110 -
          (((C20392 + C20391) * C32731 + (C20390 + C20389) * C20883 +
            (C16261 + C16260) * C20880 + (C16259 + C16258) * C20882) *
               C32916 +
           ((C17289 + C17288) * C32731 + (C17287 + C17286) * C20883 +
            (C16257 + C16256) * C20880 + (C16255 + C16254) * C20882) *
               C32939 +
           ((C17507 + C17506) * C32731 + (C17505 + C17504) * C20883 +
            (C15844 * C133 + C32550 * C142 + C15843 * C132 + C15837 * C141) *
                C20880 +
            (C15844 * C121 + C32550 * C128 + C15843 * C120 + C15837 * C127) *
                C20882) *
               C32951) *
              C32603 * C32589 * C111 +
          (((C15843 * C121 + C15837 * C128 + C15844 * C122 + C32550 * C129) *
                C20882 +
            (C15843 * C133 + C15837 * C142 + C15844 * C134 + C32550 * C143) *
                C20880 +
            (C15843 * C320 + C15837 * C335 + C15844 * C319 + C32550 * C334) *
                C20883 +
            (C15843 * C330 + C15837 * C350 + C15844 * C329 + C32550 * C349) *
                C32731) *
               C32951 +
           ((C15843 * C215 + C15837 * C230 + C15844 * C214 + C32550 * C229) *
                C20882 +
            (C15843 * C225 + C15837 * C245 + C15844 * C224 + C32550 * C244) *
                C20880 +
            (C15843 * C620 + C15837 * C625 + C15844 * C621 + C32550 * C626) *
                C20883 +
            (C15843 * C630 + C15837 * C635 + C15844 * C631 + C32550 * C636) *
                C32731) *
               C32939 +
           ((C15843 * C220 + C15837 * C235 + C15844 * C221 + C32550 * C236) *
                C20882 +
            (C15843 * C240 + C15837 * C250 + C15844 * C241 + C32550 * C251) *
                C20880 +
            (C15843 * C1062 + C15837 * C1074 + C15844 * C1430 +
             C32550 * C1431) *
                C20883 +
            (C15843 * C1071 + C15837 * C1089 + C15844 * C1432 +
             C32550 * C1433) *
                C32731) *
               C32916) *
              C32603 * C32589 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C15843 * C119 + C15837 * C126 + C15844 * C120 + C32550 * C127) *
                C20882 +
            (C15843 * C131 + C15837 * C140 + C15844 * C132 + C32550 * C141) *
                C20880 +
            (C17058 + C17059) * C20883 + (C17060 + C17061) * C32731) *
               C32951 +
           ((C15976 + C15977) * C20882 + (C15978 + C15979) * C20880 +
            C17706 * C20883 + C17707 * C32731) *
               C32939 +
           C21841 * C32916) *
              C32603 * C209 -
          (((C16550 + C16551) * C32731 + (C16552 + C16553) * C20883 +
            (C15987 + C15986) * C20880 + (C15985 + C15984) * C20882) *
               C32916 +
           (C20781 * C32731 + C20782 * C20883 + (C15983 + C15982) * C20880 +
            (C15981 + C15980) * C20882) *
               C32939 +
           (C17710 * C32731 + C17711 * C20883 + (C15979 + C15978) * C20880 +
            (C15977 + C15976) * C20882) *
               C32951) *
              C32603 * C210 +
          (C21841 * C32951 +
           (C15994 * C20882 + C15995 * C20880 + (C16553 + C16552) * C20883 +
            (C16551 + C16550) * C32731) *
               C32939 +
           ((C15991 + C15990) * C20882 + (C15989 + C15988) * C20880 +
            (C15843 * C6308 + C15837 * C6312 + C15844 * C6520 +
             C32550 * C6521) *
                C20883 +
            (C15843 * C6311 + C15837 * C6317 + C15844 * C6522 +
             C32550 * C6523) *
                C32731) *
               C32916) *
              C32603 * C211) *
         C32577) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C15843 * C119 + C15837 * C126 + C15844 * C120 + C32550 * C127) *
               C22671 +
           (C15843 * C131 + C15837 * C140 + C15844 * C132 + C32550 * C141) *
               C32959 +
           (C17058 + C17059) * C22672 + (C17060 + C17061) * C32956 +
           C17074 * C22673 + C17075 * C32947 + (C17073 + C17072) * C22674 +
           (C17071 + C17070) * C32932) *
              C32633 * C32603 * C32589 * C110 -
          ((C15844 * C1970 + C32550 * C1982 + C15843 * C1971 + C15837 * C1983) *
               C32932 +
           (C15844 * C1964 + C32550 * C1973 + C15843 * C1965 + C15837 * C1974) *
               C22674 +
           (C17511 + C17510) * C32947 + (C17509 + C17508) * C22673 +
           (C17507 + C17506) * C32956 + (C17505 + C17504) * C22672 +
           (C15844 * C133 + C32550 * C142 + C15843 * C132 + C15837 * C141) *
               C32959 +
           (C15844 * C121 + C32550 * C128 + C15843 * C120 + C15837 * C127) *
               C22671) *
              C32633 * C32603 * C32589 * C111 +
          ((C15843 * C121 + C15837 * C128 + C15844 * C122 + C32550 * C129) *
               C22671 +
           (C15843 * C133 + C15837 * C142 + C15844 * C134 + C32550 * C143) *
               C32959 +
           (C15843 * C320 + C15837 * C335 + C15844 * C319 + C32550 * C334) *
               C22672 +
           (C15843 * C330 + C15837 * C350 + C15844 * C329 + C32550 * C349) *
               C32956 +
           (C15843 * C325 + C15837 * C340 + C15844 * C326 + C32550 * C341) *
               C22673 +
           (C15843 * C345 + C15837 * C355 + C15844 * C346 + C32550 * C356) *
               C32947 +
           (C15843 * C1964 + C15837 * C1973 + C15844 * C2342 + C32550 * C2343) *
               C22674 +
           (C15843 * C1970 + C15837 * C1982 + C15844 * C2344 + C32550 * C2345) *
               C32932) *
              C32633 * C32603 * C32589 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C15843 * C119 + C15837 * C126 + C15844 * C120 + C32550 * C127) *
               C22671 +
           (C15843 * C131 + C15837 * C140 + C15844 * C132 + C32550 * C141) *
               C32959 +
           (C17058 + C17059) * C22672 + (C17060 + C17061) * C32956 +
           C17074 * C22673 + C17075 * C32947 + (C17073 + C17072) * C22674 +
           (C17071 + C17070) * C32932) *
              C32633 * C32603 * C209 -
          ((C17066 + C17067) * C32932 + (C17068 + C17069) * C22674 +
           C17708 * C32947 + C17709 * C22673 + C17710 * C32956 +
           C17711 * C22672 + (C15979 + C15978) * C32959 +
           (C15977 + C15976) * C22671) *
              C32633 * C32603 * C210 +
          (C15992 * C22671 + C15993 * C32959 + C20034 * C22672 +
           C20035 * C32956 + (C16877 + C16876) * C22673 +
           (C16875 + C16874) * C32947 +
           (C15843 * C7013 + C15837 * C7017 + C15844 * C7387 + C32550 * C7388) *
               C22674 +
           (C15843 * C7016 + C15837 * C7022 + C15844 * C7389 + C32550 * C7390) *
               C32932) *
              C32633 * C32603 * C211) *
         C32577) /
            (p * q * std::sqrt(p + q));
    d2ee[90] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                 ((((C31567 * C119 + C32545 * C126 + C31563 * C120 +
                     C32553 * C127 + C31573 * C121 + C17823 * C128) *
                        C31694 +
                    (C31567 * C131 + C32545 * C140 + C31563 * C132 +
                     C32553 * C141 + C31573 * C133 + C17823 * C142) *
                        C32727 +
                    (C19096 + C19097 + C19098) * C31686 +
                    (C19099 + C19100 + C19101) * C32734 + C24658 * C31700 +
                    C24659 * C24419) *
                       C32633 * C32603 * C440 -
                   ((C19102 + C19103 + C19104) * C24419 +
                    (C19105 + C19106 + C19107) * C31700 + C19738 * C32734 +
                    C19739 * C31686 + (C17982 + C17981 + C17980) * C32727 +
                    (C17979 + C17978 + C17977) * C31694) *
                       C32633 * C32603 * C441) *
                      C442 +
                  (((C18282 + C18283 + C18284) * C31694 +
                    (C18285 + C18286 + C18287) * C32727 +
                    (C19320 + C19321 + C19322) * C31686 +
                    (C19323 + C19324 + C19325) * C32734 +
                    (C31567 * C1066 + C32545 * C1078 + C31563 * C1067 +
                     C32553 * C1079 + C31573 * C2192 + C17823 * C2193) *
                        C31700 +
                    (C31567 * C1081 + C32545 * C1093 + C31563 * C1082 +
                     C32553 * C1094 + C31573 * C2194 + C17823 * C2195) *
                        C24419) *
                       C32633 * C32603 * C441 -
                   ((C31573 * C346 + C17823 * C356 + C31563 * C345 +
                     C32553 * C355 + C31567 * C344 + C32545 * C354) *
                        C24419 +
                    (C31573 * C326 + C17823 * C341 + C31563 * C325 +
                     C32553 * C340 + C31567 * C324 + C32545 * C339) *
                        C31700 +
                    (C19537 + C19536 + C19535) * C32734 +
                    (C19534 + C19533 + C19532) * C31686 +
                    (C31573 * C134 + C17823 * C143 + C31563 * C133 +
                     C32553 * C142 + C31567 * C132 + C32545 * C141) *
                        C32727 +
                    (C31573 * C122 + C17823 * C129 + C31563 * C121 +
                     C32553 * C128 + C31567 * C120 + C32545 * C127) *
                        C31694) *
                       C32633 * C32603 * C440) *
                      C443)) /
                (p * q * std::sqrt(p + q));
    d2ee[91] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                 ((((C31567 * C119 + C32545 * C126 + C31563 * C120 +
                     C32553 * C127 + C31573 * C121 + C17823 * C128) *
                        C31694 +
                    (C31567 * C131 + C32545 * C140 + C31563 * C132 +
                     C32553 * C141 + C31573 * C133 + C17823 * C142) *
                        C32727 +
                    (C19096 + C19097 + C19098) * C31686 +
                    (C19099 + C19100 + C19101) * C32734 + C24658 * C31700 +
                    C24659 * C24419) *
                       C32633 * C530 -
                   ((C24660 + C24661 + C24662) * C24419 +
                    (C24663 + C24664 + C24665) * C31700 +
                    (C19108 + C19109 + C19110) * C32734 +
                    (C19111 + C19112 + C19113) * C31686 +
                    (C19101 + C19100 + C19099) * C32727 +
                    (C19098 + C19097 + C19096) * C31694) *
                       C32633 * C531) *
                      C440 +
                  ((C19736 * C31694 + C19737 * C32727 +
                    (C19107 + C19106 + C19105) * C31686 +
                    (C19104 + C19103 + C19102) * C32734 +
                    (C31567 * C2528 + C32545 * C2531 + C31563 * C2529 +
                     C32553 * C2532 + C31573 * C2530 + C17823 * C2533) *
                        C31700 +
                    (C31567 * C2534 + C32545 * C2537 + C31563 * C2535 +
                     C32553 * C2538 + C31573 * C2536 + C17823 * C2539) *
                        C24419) *
                       C32633 * C531 -
                   ((C19102 + C19103 + C19104) * C24419 +
                    (C19105 + C19106 + C19107) * C31700 + C19738 * C32734 +
                    C19739 * C31686 + (C17982 + C17981 + C17980) * C32727 +
                    (C17979 + C17978 + C17977) * C31694) *
                       C32633 * C530) *
                      C441) *
                 C32577) /
                (p * q * std::sqrt(p + q));
    d2ee[92] += (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((C31567 * C119 + C32545 * C126 + C31563 * C120 +
                    C32553 * C127 + C31573 * C121 + C17823 * C128) *
                       C31694 +
                   (C31567 * C131 + C32545 * C140 + C31563 * C132 +
                    C32553 * C141 + C31573 * C133 + C17823 * C142) *
                       C32727 +
                   (C19096 + C19097 + C19098) * C31686 +
                   (C19099 + C19100 + C19101) * C32734 +
                   (C19113 + C19112 + C19111) * C31700 +
                   (C19110 + C19109 + C19108) * C24419) *
                      C32633 * C32603 * C209 -
                  ((C19102 + C19103 + C19104) * C24419 +
                   (C19105 + C19106 + C19107) * C31700 + C19738 * C32734 +
                   C19739 * C31686 + (C17982 + C17981 + C17980) * C32727 +
                   (C17979 + C17978 + C17977) * C31694) *
                      C32633 * C32603 * C210 +
                  (C17997 * C31694 + C17998 * C32727 +
                   (C18615 + C18614 + C18613) * C31686 +
                   (C18612 + C18611 + C18610) * C32734 +
                   (C31567 * C1068 + C32545 * C1083 + C31563 * C1069 +
                    C32553 * C1084 + C31573 * C1070 + C17823 * C1085) *
                       C31700 +
                   (C31567 * C1086 + C32545 * C1095 + C31563 * C1087 +
                    C32553 * C1096 + C31573 * C1088 + C17823 * C1097) *
                       C24419) *
                      C32633 * C32603 * C211) *
                 C32577) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((C31567 * C119 + C32545 * C126 + C31563 * C120 +
                    C32553 * C127 + C31573 * C121 + C17823 * C128) *
                       C31694 +
                   (C31567 * C131 + C32545 * C140 + C31563 * C132 +
                    C32553 * C141 + C31573 * C133 + C17823 * C142) *
                       C32727 +
                   (C19096 + C19097 + C19098) * C31686 +
                   (C19099 + C19100 + C19101) * C32734 +
                   (C19113 + C19112 + C19111) * C31700 +
                   (C19110 + C19109 + C19108) * C24419) *
                      C32633 * C32603 * C32589 * C110 -
                  ((C31573 * C346 + C17823 * C356 + C31563 * C345 +
                    C32553 * C355 + C31567 * C344 + C32545 * C354) *
                       C24419 +
                   (C31573 * C326 + C17823 * C341 + C31563 * C325 +
                    C32553 * C340 + C31567 * C324 + C32545 * C339) *
                       C31700 +
                   (C19537 + C19536 + C19535) * C32734 +
                   (C19534 + C19533 + C19532) * C31686 +
                   (C31573 * C134 + C17823 * C143 + C31563 * C133 +
                    C32553 * C142 + C31567 * C132 + C32545 * C141) *
                       C32727 +
                   (C31573 * C122 + C17823 * C129 + C31563 * C121 +
                    C32553 * C128 + C31567 * C120 + C32545 * C127) *
                       C31694) *
                      C32633 * C32603 * C32589 * C111 +
                  ((C31567 * C121 + C32545 * C128 + C31563 * C122 +
                    C32553 * C129 + C31573 * C123 + C17823 * C130) *
                       C31694 +
                   (C31567 * C133 + C32545 * C142 + C31563 * C134 +
                    C32553 * C143 + C31573 * C135 + C17823 * C144) *
                       C32727 +
                   (C31567 * C320 + C32545 * C335 + C31563 * C319 +
                    C32553 * C334 + C31573 * C318 + C17823 * C333) *
                       C31686 +
                   (C31567 * C330 + C32545 * C350 + C31563 * C329 +
                    C32553 * C349 + C31573 * C328 + C17823 * C348) *
                       C32734 +
                   (C31567 * C325 + C32545 * C340 + C31563 * C326 +
                    C32553 * C341 + C31573 * C327 + C17823 * C342) *
                       C31700 +
                   (C31567 * C345 + C32545 * C355 + C31563 * C346 +
                    C32553 * C356 + C31573 * C347 + C17823 * C357) *
                       C24419) *
                      C32633 * C32603 * C32589 * C112)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((C31567 * C119 + C32545 * C126 + C31563 * C120 +
                    C32553 * C127 + C31573 * C121 + C17823 * C128) *
                       C31694 +
                   (C31567 * C131 + C32545 * C140 + C31563 * C132 +
                    C32553 * C141 + C31573 * C133 + C17823 * C142) *
                       C32727 +
                   (C19096 + C19097 + C19098) * C31686 +
                   (C19099 + C19100 + C19101) * C32734 + C24658 * C31700 +
                   C24659 * C24419) *
                      C32633 * C315 -
                  ((C24660 + C24661 + C24662) * C24419 +
                   (C24663 + C24664 + C24665) * C31700 +
                   (C19108 + C19109 + C19110) * C32734 +
                   (C19111 + C19112 + C19113) * C31686 +
                   (C19101 + C19100 + C19099) * C32727 +
                   (C19098 + C19097 + C19096) * C31694) *
                      C32633 * C316 +
                  (C24658 * C31694 + C24659 * C32727 +
                   (C24665 + C24664 + C24663) * C31686 +
                   (C24662 + C24661 + C24660) * C32734 +
                   (C31567 * C1967 + C32545 * C1976 + C31563 * C1968 +
                    C32553 * C1977 + C31573 * C1969 + C17823 * C1978) *
                       C31700 +
                   (C31567 * C1979 + C32545 * C1985 + C31563 * C1980 +
                    C32553 * C1986 + C31573 * C1981 + C17823 * C1987) *
                       C24419) *
                      C32633 * C317) *
                 C32589 * C32577) /
                    (p * q * std::sqrt(p + q));
    d2ee[93] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                 ((((C31567 * C119 + C32545 * C126 + C31563 * C120 +
                     C32553 * C127 + C31573 * C121 + C17823 * C128) *
                        C31694 +
                    (C31567 * C131 + C32545 * C140 + C31563 * C132 +
                     C32553 * C141 + C31573 * C133 + C17823 * C142) *
                        C32727 +
                    (C19096 + C19097 + C19098) * C31686 +
                    (C19099 + C19100 + C19101) * C32734 + C24658 * C31700 +
                    C24659 * C24419) *
                       C32633 * C530 -
                   ((C24660 + C24661 + C24662) * C24419 +
                    (C24663 + C24664 + C24665) * C31700 +
                    (C19108 + C19109 + C19110) * C32734 +
                    (C19111 + C19112 + C19113) * C31686 +
                    (C19101 + C19100 + C19099) * C32727 +
                    (C19098 + C19097 + C19096) * C31694) *
                       C32633 * C531) *
                      C32589 * C442 +
                  (((C19532 + C19533 + C19534) * C31694 +
                    (C19535 + C19536 + C19537) * C32727 +
                    (C24970 + C24971 + C24972) * C31686 +
                    (C24973 + C24974 + C24975) * C32734 +
                    (C31567 * C1965 + C32545 * C1974 + C31563 * C1964 +
                     C32553 * C1973 + C31573 * C2342 + C17823 * C2343) *
                        C31700 +
                    (C31567 * C1971 + C32545 * C1983 + C31563 * C1970 +
                     C32553 * C1982 + C31573 * C2344 + C17823 * C2345) *
                        C24419) *
                       C32633 * C531 -
                   ((C24975 + C24974 + C24973) * C24419 +
                    (C24972 + C24971 + C24970) * C31700 +
                    (C19537 + C19536 + C19535) * C32734 +
                    (C19534 + C19533 + C19532) * C31686 +
                    (C31573 * C134 + C17823 * C143 + C31563 * C133 +
                     C32553 * C142 + C31567 * C132 + C32545 * C141) *
                        C32727 +
                    (C31573 * C122 + C17823 * C129 + C31563 * C121 +
                     C32553 * C128 + C31567 * C120 + C32545 * C127) *
                        C31694) *
                       C32633 * C530) *
                      C32589 * C443)) /
                (p * q * std::sqrt(p + q));
    d2ee[94] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                 (((C31567 * C119 + C32545 * C126 + C31563 * C120 +
                    C32553 * C127 + C31573 * C121 + C17823 * C128) *
                       C31694 +
                   (C31567 * C131 + C32545 * C140 + C31563 * C132 +
                    C32553 * C141 + C31573 * C133 + C17823 * C142) *
                       C32727 +
                   (C19096 + C19097 + C19098) * C31686 +
                   (C19099 + C19100 + C19101) * C32734 +
                   (C19113 + C19112 + C19111) * C31700 +
                   (C19110 + C19109 + C19108) * C24419) *
                      C32633 * C32603 * C32589 * C110 -
                  ((C31573 * C346 + C17823 * C356 + C31563 * C345 +
                    C32553 * C355 + C31567 * C344 + C32545 * C354) *
                       C24419 +
                   (C31573 * C326 + C17823 * C341 + C31563 * C325 +
                    C32553 * C340 + C31567 * C324 + C32545 * C339) *
                       C31700 +
                   (C19537 + C19536 + C19535) * C32734 +
                   (C19534 + C19533 + C19532) * C31686 +
                   (C31573 * C134 + C17823 * C143 + C31563 * C133 +
                    C32553 * C142 + C31567 * C132 + C32545 * C141) *
                       C32727 +
                   (C31573 * C122 + C17823 * C129 + C31563 * C121 +
                    C32553 * C128 + C31567 * C120 + C32545 * C127) *
                       C31694) *
                      C32633 * C32603 * C32589 * C111 +
                  ((C31567 * C121 + C32545 * C128 + C31563 * C122 +
                    C32553 * C129 + C31573 * C123 + C17823 * C130) *
                       C31694 +
                   (C31567 * C133 + C32545 * C142 + C31563 * C134 +
                    C32553 * C143 + C31573 * C135 + C17823 * C144) *
                       C32727 +
                   (C31567 * C320 + C32545 * C335 + C31563 * C319 +
                    C32553 * C334 + C31573 * C318 + C17823 * C333) *
                       C31686 +
                   (C31567 * C330 + C32545 * C350 + C31563 * C329 +
                    C32553 * C349 + C31573 * C328 + C17823 * C348) *
                       C32734 +
                   (C31567 * C325 + C32545 * C340 + C31563 * C326 +
                    C32553 * C341 + C31573 * C327 + C17823 * C342) *
                       C31700 +
                   (C31567 * C345 + C32545 * C355 + C31563 * C346 +
                    C32553 * C356 + C31573 * C347 + C17823 * C357) *
                       C24419) *
                      C32633 * C32603 * C32589 * C112)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                 (((C31567 * C119 + C32545 * C126 + C31563 * C120 +
                    C32553 * C127 + C31573 * C121 + C17823 * C128) *
                       C31694 +
                   (C31567 * C131 + C32545 * C140 + C31563 * C132 +
                    C32553 * C141 + C31573 * C133 + C17823 * C142) *
                       C32727 +
                   (C19096 + C19097 + C19098) * C31686 +
                   (C19099 + C19100 + C19101) * C32734 +
                   (C19113 + C19112 + C19111) * C31700 +
                   (C19110 + C19109 + C19108) * C24419) *
                      C32633 * C32603 * C209 -
                  ((C19102 + C19103 + C19104) * C24419 +
                   (C19105 + C19106 + C19107) * C31700 + C19738 * C32734 +
                   C19739 * C31686 + (C17982 + C17981 + C17980) * C32727 +
                   (C17979 + C17978 + C17977) * C31694) *
                      C32633 * C32603 * C210 +
                  (C17997 * C31694 + C17998 * C32727 +
                   (C18615 + C18614 + C18613) * C31686 +
                   (C18612 + C18611 + C18610) * C32734 +
                   (C31567 * C1068 + C32545 * C1083 + C31563 * C1069 +
                    C32553 * C1084 + C31573 * C1070 + C17823 * C1085) *
                       C31700 +
                   (C31567 * C1086 + C32545 * C1095 + C31563 * C1087 +
                    C32553 * C1096 + C31573 * C1088 + C17823 * C1097) *
                       C24419) *
                      C32633 * C32603 * C211) *
                 C32577) /
                    (p * q * std::sqrt(p + q));
    d2ee[95] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C15053 * C119 + C32957 * C126 + C15054 * C120 + C32950 * C127 +
             C15055 * C121 + C32937 * C128 + C15056 * C122 + C32920 * C129) *
                C20882 +
            (C15053 * C131 + C32957 * C140 + C15054 * C132 + C32950 * C141 +
             C15055 * C133 + C32937 * C142 + C15056 * C134 + C32920 * C143) *
                C20880 +
            (C21113 + C21114 + C21115 + C21116) * C20883 +
            (C21117 + C21118 + C21119 + C21120) * C32731) *
               C32633 * C32603 * C440 -
           ((C15732 + C15733 + C15734 + C15735) * C32731 +
            (C15736 + C15737 + C15738 + C15739) * C20883 +
            (C15195 + C15194 + C15193 + C15192) * C20880 +
            (C15191 + C15190 + C15189 + C15188) * C20882) *
               C32633 * C32603 * C441) *
              C442 +
          (((C15448 + C15449 + C15450 + C15451) * C20882 +
            (C15452 + C15453 + C15454 + C15455) * C20880 +
            (C15053 * C619 + C32957 * C624 + C15054 * C620 + C32950 * C625 +
             C15055 * C621 + C32937 * C626 + C15056 * C622 + C32920 * C627) *
                C20883 +
            (C15053 * C629 + C32957 * C634 + C15054 * C630 + C32950 * C635 +
             C15055 * C631 + C32937 * C636 + C15056 * C632 + C32920 * C637) *
                C32731) *
               C32633 * C32603 * C441 -
           ((C15056 * C328 + C32920 * C348 + C15055 * C329 + C32937 * C349 +
             C15054 * C330 + C32950 * C350 + C15053 * C331 + C32957 * C351) *
                C32731 +
            (C15056 * C318 + C32920 * C333 + C15055 * C319 + C32937 * C334 +
             C15054 * C320 + C32950 * C335 + C15053 * C321 + C32957 * C336) *
                C20883 +
            (C15056 * C135 + C32920 * C144 + C15055 * C134 + C32937 * C143 +
             C15054 * C133 + C32950 * C142 + C15053 * C132 + C32957 * C141) *
                C20880 +
            (C15056 * C123 + C32920 * C130 + C15055 * C122 + C32937 * C129 +
             C15054 * C121 + C32950 * C128 + C15053 * C120 + C32957 * C127) *
                C20882) *
               C32633 * C32603 * C440) *
              C443)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C15843 * C119 + C15837 * C126 + C15844 * C120 + C32550 * C127) *
                 C20882 +
             (C15843 * C131 + C15837 * C140 + C15844 * C132 + C32550 * C141) *
                 C20880 +
             (C17058 + C17059) * C20883 + (C17060 + C17061) * C32731) *
                C32951 +
            ((C15976 + C15977) * C20882 + (C15978 + C15979) * C20880 +
             C17706 * C20883 + C17707 * C32731) *
                C32939 +
            C21841 * C32916) *
               C32603 * C440 -
           (((C16550 + C16551) * C32731 + (C16552 + C16553) * C20883 +
             (C15987 + C15986) * C20880 + (C15985 + C15984) * C20882) *
                C32916 +
            (C20781 * C32731 + C20782 * C20883 + (C15983 + C15982) * C20880 +
             (C15981 + C15980) * C20882) *
                C32939 +
            (C17710 * C32731 + C17711 * C20883 + (C15979 + C15978) * C20880 +
             (C15977 + C15976) * C20882) *
                C32951) *
               C32603 * C441) *
              C442 +
          ((((C16254 + C16255) * C20882 + (C16256 + C16257) * C20880 +
             (C17286 + C17287) * C20883 + (C17288 + C17289) * C32731) *
                C32951 +
            ((C16258 + C16259) * C20882 + (C16260 + C16261) * C20880 +
             (C20389 + C20390) * C20883 + (C20391 + C20392) * C32731) *
                C32939 +
            ((C16262 + C16263) * C20882 + (C16264 + C16265) * C20880 +
             (C15843 * C1581 + C15837 * C1584 + C15844 * C1582 +
              C32550 * C1585) *
                 C20883 +
             (C15843 * C1587 + C15837 * C1590 + C15844 * C1588 +
              C32550 * C1591) *
                 C32731) *
                C32916) *
               C32603 * C441 -
           (((C20392 + C20391) * C32731 + (C20390 + C20389) * C20883 +
             (C16261 + C16260) * C20880 + (C16259 + C16258) * C20882) *
                C32916 +
            ((C17289 + C17288) * C32731 + (C17287 + C17286) * C20883 +
             (C16257 + C16256) * C20880 + (C16255 + C16254) * C20882) *
                C32939 +
            ((C17507 + C17506) * C32731 + (C17505 + C17504) * C20883 +
             (C15844 * C133 + C32550 * C142 + C15843 * C132 + C15837 * C141) *
                 C20880 +
             (C15844 * C121 + C32550 * C128 + C15843 * C120 + C15837 * C127) *
                 C20882) *
                C32951) *
               C32603 * C440) *
              C443)) /
            (p * q * std::sqrt(p + q));
    d2ee[96] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C15053 * C119 + C32957 * C126 + C15054 * C120 + C32950 * C127 +
             C15055 * C121 + C32937 * C128 + C15056 * C122 + C32920 * C129) *
                C20882 +
            (C15053 * C131 + C32957 * C140 + C15054 * C132 + C32950 * C141 +
             C15055 * C133 + C32937 * C142 + C15056 * C134 + C32920 * C143) *
                C20880 +
            (C21113 + C21114 + C21115 + C21116) * C20883 +
            (C21117 + C21118 + C21119 + C21120) * C32731) *
               C32633 * C530 -
           ((C21121 + C21122 + C21123 + C21124) * C32731 +
            (C21125 + C21126 + C21127 + C21128) * C20883 +
            (C21120 + C21119 + C21118 + C21117) * C20880 +
            (C21116 + C21115 + C21114 + C21113) * C20882) *
               C32633 * C531) *
              C440 +
          (((C15739 + C15738 + C15737 + C15736) * C20882 +
            (C15735 + C15734 + C15733 + C15732) * C20880 +
            (C15053 * C1065 + C32957 * C1077 + C15054 * C1066 + C32950 * C1078 +
             C15055 * C1067 + C32937 * C1079 + C15056 * C2192 +
             C32920 * C2193) *
                C20883 +
            (C15053 * C1080 + C32957 * C1092 + C15054 * C1081 + C32950 * C1093 +
             C15055 * C1082 + C32937 * C1094 + C15056 * C2194 +
             C32920 * C2195) *
                C32731) *
               C32633 * C531 -
           ((C15732 + C15733 + C15734 + C15735) * C32731 +
            (C15736 + C15737 + C15738 + C15739) * C20883 +
            (C15195 + C15194 + C15193 + C15192) * C20880 +
            (C15191 + C15190 + C15189 + C15188) * C20882) *
               C32633 * C530) *
              C441) *
         C32577) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C15843 * C119 + C15837 * C126 + C15844 * C120 + C32550 * C127) *
                 C20882 +
             (C15843 * C131 + C15837 * C140 + C15844 * C132 + C32550 * C141) *
                 C20880 +
             (C17058 + C17059) * C20883 + (C17060 + C17061) * C32731) *
                C32951 +
            ((C15976 + C15977) * C20882 + (C15978 + C15979) * C20880 +
             C17706 * C20883 + C17707 * C32731) *
                C32939 +
            C21841 * C32916) *
               C530 -
           (((C16874 + C16875) * C32731 + (C16876 + C16877) * C20883 +
             C20781 * C20880 + C20782 * C20882) *
                C32916 +
            (C17708 * C32731 + C17709 * C20883 + C17710 * C20880 +
             C17711 * C20882) *
                C32939 +
            ((C17065 + C17064) * C32731 + (C17063 + C17062) * C20883 +
             (C17061 + C17060) * C20880 + (C17059 + C17058) * C20882) *
                C32951) *
               C531) *
              C440 +
          (((C17706 * C20882 + C17707 * C20880 + C17040 * C20883 +
             C17041 * C32731) *
                C32951 +
            (C20034 * C20882 + C20035 * C20880 + (C16877 + C16876) * C20883 +
             (C16875 + C16874) * C32731) *
                C32939 +
            ((C16553 + C16552) * C20882 + (C16551 + C16550) * C20880 +
             (C15843 * C6309 + C15837 * C6313 + C15844 * C7201 +
              C32550 * C7202) *
                 C20883 +
             (C15843 * C6314 + C15837 * C6318 + C15844 * C7203 +
              C32550 * C7204) *
                 C32731) *
                C32916) *
               C531 -
           (((C16550 + C16551) * C32731 + (C16552 + C16553) * C20883 +
             (C15987 + C15986) * C20880 + (C15985 + C15984) * C20882) *
                C32916 +
            (C20781 * C32731 + C20782 * C20883 + (C15983 + C15982) * C20880 +
             (C15981 + C15980) * C20882) *
                C32939 +
            (C17710 * C32731 + C17711 * C20883 + (C15979 + C15978) * C20880 +
             (C15977 + C15976) * C20882) *
                C32951) *
               C530) *
              C441) *
         C32577) /
            (p * q * std::sqrt(p + q));
    d2ee[97] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C15053 * C119 + C32957 * C126 + C15054 * C120 + C32950 * C127 +
            C15055 * C121 + C32937 * C128 + C15056 * C122 + C32920 * C129) *
               C20882 +
           (C15053 * C131 + C32957 * C140 + C15054 * C132 + C32950 * C141 +
            C15055 * C133 + C32937 * C142 + C15056 * C134 + C32920 * C143) *
               C20880 +
           (C15053 * C322 + C32957 * C337 + C15054 * C321 + C32950 * C336 +
            C15055 * C320 + C32937 * C335 + C15056 * C319 + C32920 * C334) *
               C20883 +
           (C15053 * C332 + C32957 * C352 + C15054 * C331 + C32950 * C351 +
            C15055 * C330 + C32937 * C350 + C15056 * C329 + C32920 * C349) *
               C32731) *
              C32633 * C32603 * C209 -
          ((C15732 + C15733 + C15734 + C15735) * C32731 +
           (C15736 + C15737 + C15738 + C15739) * C20883 +
           (C15195 + C15194 + C15193 + C15192) * C20880 +
           (C15191 + C15190 + C15189 + C15188) * C20882) *
              C32633 * C32603 * C210 +
          ((C15203 + C15202 + C15201 + C15200) * C20882 +
           (C15199 + C15198 + C15197 + C15196) * C20880 +
           (C15053 * C1064 + C32957 * C1076 + C15054 * C1063 + C32950 * C1075 +
            C15055 * C1062 + C32937 * C1074 + C15056 * C1430 + C32920 * C1431) *
               C20883 +
           (C15053 * C1073 + C32957 * C1091 + C15054 * C1072 + C32950 * C1090 +
            C15055 * C1071 + C32937 * C1089 + C15056 * C1432 + C32920 * C1433) *
               C32731) *
              C32633 * C32603 * C211) *
         C32577) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C15053 * C119 + C32957 * C126 + C15054 * C120 + C32950 * C127 +
            C15055 * C121 + C32937 * C128 + C15056 * C122 + C32920 * C129) *
               C20882 +
           (C15053 * C131 + C32957 * C140 + C15054 * C132 + C32950 * C141 +
            C15055 * C133 + C32937 * C142 + C15056 * C134 + C32920 * C143) *
               C20880 +
           (C15053 * C322 + C32957 * C337 + C15054 * C321 + C32950 * C336 +
            C15055 * C320 + C32937 * C335 + C15056 * C319 + C32920 * C334) *
               C20883 +
           (C15053 * C332 + C32957 * C352 + C15054 * C331 + C32950 * C351 +
            C15055 * C330 + C32937 * C350 + C15056 * C329 + C32920 * C349) *
               C32731) *
              C32633 * C32603 * C32589 * C110 -
          ((C15056 * C328 + C32920 * C348 + C15055 * C329 + C32937 * C349 +
            C15054 * C330 + C32950 * C350 + C15053 * C331 + C32957 * C351) *
               C32731 +
           (C15056 * C318 + C32920 * C333 + C15055 * C319 + C32937 * C334 +
            C15054 * C320 + C32950 * C335 + C15053 * C321 + C32957 * C336) *
               C20883 +
           (C15056 * C135 + C32920 * C144 + C15055 * C134 + C32937 * C143 +
            C15054 * C133 + C32950 * C142 + C15053 * C132 + C32957 * C141) *
               C20880 +
           (C15056 * C123 + C32920 * C130 + C15055 * C122 + C32937 * C129 +
            C15054 * C121 + C32950 * C128 + C15053 * C120 + C32957 * C127) *
               C20882) *
              C32633 * C32603 * C32589 * C111 +
          ((C15053 * C121 + C32957 * C128 + C15054 * C122 + C32950 * C129 +
            C15055 * C123 + C32937 * C130 + C15056 * C124 + C32920 * C137) *
               C20882 +
           (C15053 * C133 + C32957 * C142 + C15054 * C134 + C32950 * C143 +
            C15055 * C135 + C32937 * C144 + C15056 * C136 + C32920 * C145) *
               C20880 +
           (C15053 * C320 + C32957 * C335 + C15054 * C319 + C32950 * C334 +
            C15055 * C318 + C32937 * C333 + C15056 * C532 + C32920 * C533) *
               C20883 +
           (C15053 * C330 + C32957 * C350 + C15054 * C329 + C32950 * C349 +
            C15055 * C328 + C32937 * C348 + C15056 * C534 + C32920 * C535) *
               C32731) *
              C32633 * C32603 * C32589 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C15053 * C119 + C32957 * C126 + C15054 * C120 + C32950 * C127 +
            C15055 * C121 + C32937 * C128 + C15056 * C122 + C32920 * C129) *
               C20882 +
           (C15053 * C131 + C32957 * C140 + C15054 * C132 + C32950 * C141 +
            C15055 * C133 + C32937 * C142 + C15056 * C134 + C32920 * C143) *
               C20880 +
           (C21113 + C21114 + C21115 + C21116) * C20883 +
           (C21117 + C21118 + C21119 + C21120) * C32731) *
              C32633 * C315 -
          ((C21121 + C21122 + C21123 + C21124) * C32731 +
           (C21125 + C21126 + C21127 + C21128) * C20883 +
           (C21120 + C21119 + C21118 + C21117) * C20880 +
           (C21116 + C21115 + C21114 + C21113) * C20882) *
              C32633 * C316 +
          ((C21128 + C21127 + C21126 + C21125) * C20882 +
           (C21124 + C21123 + C21122 + C21121) * C20880 +
           (C15053 * C1966 + C32957 * C1975 + C15054 * C1965 + C32950 * C1974 +
            C15055 * C1964 + C32937 * C1973 + C15056 * C2342 + C32920 * C2343) *
               C20883 +
           (C15053 * C1972 + C32957 * C1984 + C15054 * C1971 + C32950 * C1983 +
            C15055 * C1970 + C32937 * C1982 + C15056 * C2344 + C32920 * C2345) *
               C32731) *
              C32633 * C317) *
         C32589 * C32577) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C15843 * C119 + C15837 * C126 + C15844 * C120 + C32550 * C127) *
                C20882 +
            (C15843 * C131 + C15837 * C140 + C15844 * C132 + C32550 * C141) *
                C20880 +
            (C17058 + C17059) * C20883 + (C17060 + C17061) * C32731) *
               C32951 +
           ((C15976 + C15977) * C20882 + (C15978 + C15979) * C20880 +
            C17706 * C20883 + C17707 * C32731) *
               C32939 +
           (C15992 * C20882 + C15993 * C20880 + C20034 * C20883 +
            C20035 * C32731) *
               C32916) *
              C32603 * C32589 * C110 -
          (((C20392 + C20391) * C32731 + (C20390 + C20389) * C20883 +
            (C16261 + C16260) * C20880 + (C16259 + C16258) * C20882) *
               C32916 +
           ((C17289 + C17288) * C32731 + (C17287 + C17286) * C20883 +
            (C16257 + C16256) * C20880 + (C16255 + C16254) * C20882) *
               C32939 +
           ((C17507 + C17506) * C32731 + (C17505 + C17504) * C20883 +
            (C15844 * C133 + C32550 * C142 + C15843 * C132 + C15837 * C141) *
                C20880 +
            (C15844 * C121 + C32550 * C128 + C15843 * C120 + C15837 * C127) *
                C20882) *
               C32951) *
              C32603 * C32589 * C111 +
          (((C15843 * C121 + C15837 * C128 + C15844 * C122 + C32550 * C129) *
                C20882 +
            (C15843 * C133 + C15837 * C142 + C15844 * C134 + C32550 * C143) *
                C20880 +
            (C15843 * C320 + C15837 * C335 + C15844 * C319 + C32550 * C334) *
                C20883 +
            (C15843 * C330 + C15837 * C350 + C15844 * C329 + C32550 * C349) *
                C32731) *
               C32951 +
           ((C15843 * C215 + C15837 * C230 + C15844 * C214 + C32550 * C229) *
                C20882 +
            (C15843 * C225 + C15837 * C245 + C15844 * C224 + C32550 * C244) *
                C20880 +
            (C15843 * C620 + C15837 * C625 + C15844 * C621 + C32550 * C626) *
                C20883 +
            (C15843 * C630 + C15837 * C635 + C15844 * C631 + C32550 * C636) *
                C32731) *
               C32939 +
           ((C15843 * C220 + C15837 * C235 + C15844 * C221 + C32550 * C236) *
                C20882 +
            (C15843 * C240 + C15837 * C250 + C15844 * C241 + C32550 * C251) *
                C20880 +
            (C15843 * C1062 + C15837 * C1074 + C15844 * C1430 +
             C32550 * C1431) *
                C20883 +
            (C15843 * C1071 + C15837 * C1089 + C15844 * C1432 +
             C32550 * C1433) *
                C32731) *
               C32916) *
              C32603 * C32589 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C15843 * C119 + C15837 * C126 + C15844 * C120 + C32550 * C127) *
                C20882 +
            (C15843 * C131 + C15837 * C140 + C15844 * C132 + C32550 * C141) *
                C20880 +
            (C17058 + C17059) * C20883 + (C17060 + C17061) * C32731) *
               C32951 +
           ((C15976 + C15977) * C20882 + (C15978 + C15979) * C20880 +
            C17706 * C20883 + C17707 * C32731) *
               C32939 +
           C21841 * C32916) *
              C32603 * C209 -
          (((C16550 + C16551) * C32731 + (C16552 + C16553) * C20883 +
            (C15987 + C15986) * C20880 + (C15985 + C15984) * C20882) *
               C32916 +
           (C20781 * C32731 + C20782 * C20883 + (C15983 + C15982) * C20880 +
            (C15981 + C15980) * C20882) *
               C32939 +
           (C17710 * C32731 + C17711 * C20883 + (C15979 + C15978) * C20880 +
            (C15977 + C15976) * C20882) *
               C32951) *
              C32603 * C210 +
          (C21841 * C32951 +
           (C15994 * C20882 + C15995 * C20880 + (C16553 + C16552) * C20883 +
            (C16551 + C16550) * C32731) *
               C32939 +
           ((C15991 + C15990) * C20882 + (C15989 + C15988) * C20880 +
            (C15843 * C6308 + C15837 * C6312 + C15844 * C6520 +
             C32550 * C6521) *
                C20883 +
            (C15843 * C6311 + C15837 * C6317 + C15844 * C6522 +
             C32550 * C6523) *
                C32731) *
               C32916) *
              C32603 * C211) *
         C32577) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C15843 * C119 + C15837 * C126 + C15844 * C120 + C32550 * C127) *
                C20882 +
            (C15843 * C131 + C15837 * C140 + C15844 * C132 + C32550 * C141) *
                C20880 +
            (C17058 + C17059) * C20883 + (C17060 + C17061) * C32731) *
               C32951 +
           ((C15976 + C15977) * C20882 + (C15978 + C15979) * C20880 +
            C17706 * C20883 + C17707 * C32731) *
               C32939 +
           C21841 * C32916) *
              C315 -
          (((C16874 + C16875) * C32731 + (C16876 + C16877) * C20883 +
            C20781 * C20880 + C20782 * C20882) *
               C32916 +
           (C17708 * C32731 + C17709 * C20883 + C17710 * C20880 +
            C17711 * C20882) *
               C32939 +
           ((C17065 + C17064) * C32731 + (C17063 + C17062) * C20883 +
            (C17061 + C17060) * C20880 + (C17059 + C17058) * C20882) *
               C32951) *
              C316 +
          ((C17074 * C20882 + C17075 * C20880 + (C17073 + C17072) * C20883 +
            (C17071 + C17070) * C32731) *
               C32951 +
           (C17040 * C20882 + C17041 * C20880 + (C17069 + C17068) * C20883 +
            (C17067 + C17066) * C32731) *
               C32939 +
           ((C16877 + C16876) * C20882 + (C16875 + C16874) * C20880 +
            (C15843 * C7013 + C15837 * C7017 + C15844 * C7387 +
             C32550 * C7388) *
                C20883 +
            (C15843 * C7016 + C15837 * C7022 + C15844 * C7389 +
             C32550 * C7390) *
                C32731) *
               C32916) *
              C317) *
         C32589 * C32577) /
            (p * q * std::sqrt(p + q));
    d2ee[98] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C15053 * C119 + C32957 * C126 + C15054 * C120 + C32950 * C127 +
             C15055 * C121 + C32937 * C128 + C15056 * C122 + C32920 * C129) *
                C20882 +
            (C15053 * C131 + C32957 * C140 + C15054 * C132 + C32950 * C141 +
             C15055 * C133 + C32937 * C142 + C15056 * C134 + C32920 * C143) *
                C20880 +
            (C21113 + C21114 + C21115 + C21116) * C20883 +
            (C21117 + C21118 + C21119 + C21120) * C32731) *
               C32633 * C530 -
           ((C21121 + C21122 + C21123 + C21124) * C32731 +
            (C21125 + C21126 + C21127 + C21128) * C20883 +
            (C21120 + C21119 + C21118 + C21117) * C20880 +
            (C21116 + C21115 + C21114 + C21113) * C20882) *
               C32633 * C531) *
              C32589 * C442 +
          (((C21405 + C21406 + C21407 + C21408) * C20882 +
            (C21409 + C21410 + C21411 + C21412) * C20880 +
            (C15053 * C324 + C32957 * C339 + C15054 * C325 + C32950 * C340 +
             C15055 * C326 + C32937 * C341 + C15056 * C327 + C32920 * C342) *
                C20883 +
            (C15053 * C344 + C32957 * C354 + C15054 * C345 + C32950 * C355 +
             C15055 * C346 + C32937 * C356 + C15056 * C347 + C32920 * C357) *
                C32731) *
               C32633 * C531 -
           ((C21412 + C21411 + C21410 + C21409) * C32731 +
            (C21408 + C21407 + C21406 + C21405) * C20883 +
            (C15056 * C135 + C32920 * C144 + C15055 * C134 + C32937 * C143 +
             C15054 * C133 + C32950 * C142 + C15053 * C132 + C32957 * C141) *
                C20880 +
            (C15056 * C123 + C32920 * C130 + C15055 * C122 + C32937 * C129 +
             C15054 * C121 + C32950 * C128 + C15053 * C120 + C32957 * C127) *
                C20882) *
               C32633 * C530) *
              C32589 * C443)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C15843 * C119 + C15837 * C126 + C15844 * C120 + C32550 * C127) *
                 C20882 +
             (C15843 * C131 + C15837 * C140 + C15844 * C132 + C32550 * C141) *
                 C20880 +
             (C17058 + C17059) * C20883 + (C17060 + C17061) * C32731) *
                C32951 +
            ((C15976 + C15977) * C20882 + (C15978 + C15979) * C20880 +
             C17706 * C20883 + C17707 * C32731) *
                C32939 +
            C21841 * C32916) *
               C530 -
           (((C16874 + C16875) * C32731 + (C16876 + C16877) * C20883 +
             C20781 * C20880 + C20782 * C20882) *
                C32916 +
            (C17708 * C32731 + C17709 * C20883 + C17710 * C20880 +
             C17711 * C20882) *
                C32939 +
            ((C17065 + C17064) * C32731 + (C17063 + C17062) * C20883 +
             (C17061 + C17060) * C20880 + (C17059 + C17058) * C20882) *
                C32951) *
               C531) *
              C32589 * C442 +
          ((((C17504 + C17505) * C20882 + (C17506 + C17507) * C20880 +
             (C17508 + C17509) * C20883 + (C17510 + C17511) * C32731) *
                C32951 +
            ((C17286 + C17287) * C20882 + (C17288 + C17289) * C20880 +
             (C17290 + C17291) * C20883 + (C17292 + C17293) * C32731) *
                C32939 +
            ((C20389 + C20390) * C20882 + (C20391 + C20392) * C20880 +
             (C15843 * C1069 + C15837 * C1084 + C15844 * C1070 +
              C32550 * C1085) *
                 C20883 +
             (C15843 * C1087 + C15837 * C1096 + C15844 * C1088 +
              C32550 * C1097) *
                 C32731) *
                C32916) *
               C531 -
           (((C20392 + C20391) * C32731 + (C20390 + C20389) * C20883 +
             (C16261 + C16260) * C20880 + (C16259 + C16258) * C20882) *
                C32916 +
            ((C17289 + C17288) * C32731 + (C17287 + C17286) * C20883 +
             (C16257 + C16256) * C20880 + (C16255 + C16254) * C20882) *
                C32939 +
            ((C17507 + C17506) * C32731 + (C17505 + C17504) * C20883 +
             (C15844 * C133 + C32550 * C142 + C15843 * C132 + C15837 * C141) *
                 C20880 +
             (C15844 * C121 + C32550 * C128 + C15843 * C120 + C15837 * C127) *
                 C20882) *
                C32951) *
               C530) *
              C32589 * C443)) /
            (p * q * std::sqrt(p + q));
    d2ee[99] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C15053 * C119 + C32957 * C126 + C15054 * C120 + C32950 * C127 +
            C15055 * C121 + C32937 * C128 + C15056 * C122 + C32920 * C129) *
               C20882 +
           (C15053 * C131 + C32957 * C140 + C15054 * C132 + C32950 * C141 +
            C15055 * C133 + C32937 * C142 + C15056 * C134 + C32920 * C143) *
               C20880 +
           (C15053 * C322 + C32957 * C337 + C15054 * C321 + C32950 * C336 +
            C15055 * C320 + C32937 * C335 + C15056 * C319 + C32920 * C334) *
               C20883 +
           (C15053 * C332 + C32957 * C352 + C15054 * C331 + C32950 * C351 +
            C15055 * C330 + C32937 * C350 + C15056 * C329 + C32920 * C349) *
               C32731) *
              C32633 * C32603 * C32589 * C110 -
          ((C15056 * C328 + C32920 * C348 + C15055 * C329 + C32937 * C349 +
            C15054 * C330 + C32950 * C350 + C15053 * C331 + C32957 * C351) *
               C32731 +
           (C15056 * C318 + C32920 * C333 + C15055 * C319 + C32937 * C334 +
            C15054 * C320 + C32950 * C335 + C15053 * C321 + C32957 * C336) *
               C20883 +
           (C15056 * C135 + C32920 * C144 + C15055 * C134 + C32937 * C143 +
            C15054 * C133 + C32950 * C142 + C15053 * C132 + C32957 * C141) *
               C20880 +
           (C15056 * C123 + C32920 * C130 + C15055 * C122 + C32937 * C129 +
            C15054 * C121 + C32950 * C128 + C15053 * C120 + C32957 * C127) *
               C20882) *
              C32633 * C32603 * C32589 * C111 +
          ((C15053 * C121 + C32957 * C128 + C15054 * C122 + C32950 * C129 +
            C15055 * C123 + C32937 * C130 + C15056 * C124 + C32920 * C137) *
               C20882 +
           (C15053 * C133 + C32957 * C142 + C15054 * C134 + C32950 * C143 +
            C15055 * C135 + C32937 * C144 + C15056 * C136 + C32920 * C145) *
               C20880 +
           (C15053 * C320 + C32957 * C335 + C15054 * C319 + C32950 * C334 +
            C15055 * C318 + C32937 * C333 + C15056 * C532 + C32920 * C533) *
               C20883 +
           (C15053 * C330 + C32957 * C350 + C15054 * C329 + C32950 * C349 +
            C15055 * C328 + C32937 * C348 + C15056 * C534 + C32920 * C535) *
               C32731) *
              C32633 * C32603 * C32589 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C15053 * C119 + C32957 * C126 + C15054 * C120 + C32950 * C127 +
            C15055 * C121 + C32937 * C128 + C15056 * C122 + C32920 * C129) *
               C20882 +
           (C15053 * C131 + C32957 * C140 + C15054 * C132 + C32950 * C141 +
            C15055 * C133 + C32937 * C142 + C15056 * C134 + C32920 * C143) *
               C20880 +
           (C15053 * C322 + C32957 * C337 + C15054 * C321 + C32950 * C336 +
            C15055 * C320 + C32937 * C335 + C15056 * C319 + C32920 * C334) *
               C20883 +
           (C15053 * C332 + C32957 * C352 + C15054 * C331 + C32950 * C351 +
            C15055 * C330 + C32937 * C350 + C15056 * C329 + C32920 * C349) *
               C32731) *
              C32633 * C32603 * C209 -
          ((C15732 + C15733 + C15734 + C15735) * C32731 +
           (C15736 + C15737 + C15738 + C15739) * C20883 +
           (C15195 + C15194 + C15193 + C15192) * C20880 +
           (C15191 + C15190 + C15189 + C15188) * C20882) *
              C32633 * C32603 * C210 +
          ((C15203 + C15202 + C15201 + C15200) * C20882 +
           (C15199 + C15198 + C15197 + C15196) * C20880 +
           (C15053 * C1064 + C32957 * C1076 + C15054 * C1063 + C32950 * C1075 +
            C15055 * C1062 + C32937 * C1074 + C15056 * C1430 + C32920 * C1431) *
               C20883 +
           (C15053 * C1073 + C32957 * C1091 + C15054 * C1072 + C32950 * C1090 +
            C15055 * C1071 + C32937 * C1089 + C15056 * C1432 + C32920 * C1433) *
               C32731) *
              C32633 * C32603 * C211) *
         C32577) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C15843 * C119 + C15837 * C126 + C15844 * C120 + C32550 * C127) *
                C20882 +
            (C15843 * C131 + C15837 * C140 + C15844 * C132 + C32550 * C141) *
                C20880 +
            (C17058 + C17059) * C20883 + (C17060 + C17061) * C32731) *
               C32951 +
           ((C15976 + C15977) * C20882 + (C15978 + C15979) * C20880 +
            C17706 * C20883 + C17707 * C32731) *
               C32939 +
           (C15992 * C20882 + C15993 * C20880 + C20034 * C20883 +
            C20035 * C32731) *
               C32916) *
              C32603 * C32589 * C110 -
          (((C20392 + C20391) * C32731 + (C20390 + C20389) * C20883 +
            (C16261 + C16260) * C20880 + (C16259 + C16258) * C20882) *
               C32916 +
           ((C17289 + C17288) * C32731 + (C17287 + C17286) * C20883 +
            (C16257 + C16256) * C20880 + (C16255 + C16254) * C20882) *
               C32939 +
           ((C17507 + C17506) * C32731 + (C17505 + C17504) * C20883 +
            (C15844 * C133 + C32550 * C142 + C15843 * C132 + C15837 * C141) *
                C20880 +
            (C15844 * C121 + C32550 * C128 + C15843 * C120 + C15837 * C127) *
                C20882) *
               C32951) *
              C32603 * C32589 * C111 +
          (((C15843 * C121 + C15837 * C128 + C15844 * C122 + C32550 * C129) *
                C20882 +
            (C15843 * C133 + C15837 * C142 + C15844 * C134 + C32550 * C143) *
                C20880 +
            (C15843 * C320 + C15837 * C335 + C15844 * C319 + C32550 * C334) *
                C20883 +
            (C15843 * C330 + C15837 * C350 + C15844 * C329 + C32550 * C349) *
                C32731) *
               C32951 +
           ((C15843 * C215 + C15837 * C230 + C15844 * C214 + C32550 * C229) *
                C20882 +
            (C15843 * C225 + C15837 * C245 + C15844 * C224 + C32550 * C244) *
                C20880 +
            (C15843 * C620 + C15837 * C625 + C15844 * C621 + C32550 * C626) *
                C20883 +
            (C15843 * C630 + C15837 * C635 + C15844 * C631 + C32550 * C636) *
                C32731) *
               C32939 +
           ((C15843 * C220 + C15837 * C235 + C15844 * C221 + C32550 * C236) *
                C20882 +
            (C15843 * C240 + C15837 * C250 + C15844 * C241 + C32550 * C251) *
                C20880 +
            (C15843 * C1062 + C15837 * C1074 + C15844 * C1430 +
             C32550 * C1431) *
                C20883 +
            (C15843 * C1071 + C15837 * C1089 + C15844 * C1432 +
             C32550 * C1433) *
                C32731) *
               C32916) *
              C32603 * C32589 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C15843 * C119 + C15837 * C126 + C15844 * C120 + C32550 * C127) *
                C20882 +
            (C15843 * C131 + C15837 * C140 + C15844 * C132 + C32550 * C141) *
                C20880 +
            (C17058 + C17059) * C20883 + (C17060 + C17061) * C32731) *
               C32951 +
           ((C15976 + C15977) * C20882 + (C15978 + C15979) * C20880 +
            C17706 * C20883 + C17707 * C32731) *
               C32939 +
           C21841 * C32916) *
              C32603 * C209 -
          (((C16550 + C16551) * C32731 + (C16552 + C16553) * C20883 +
            (C15987 + C15986) * C20880 + (C15985 + C15984) * C20882) *
               C32916 +
           (C20781 * C32731 + C20782 * C20883 + (C15983 + C15982) * C20880 +
            (C15981 + C15980) * C20882) *
               C32939 +
           (C17710 * C32731 + C17711 * C20883 + (C15979 + C15978) * C20880 +
            (C15977 + C15976) * C20882) *
               C32951) *
              C32603 * C210 +
          (C21841 * C32951 +
           (C15994 * C20882 + C15995 * C20880 + (C16553 + C16552) * C20883 +
            (C16551 + C16550) * C32731) *
               C32939 +
           ((C15991 + C15990) * C20882 + (C15989 + C15988) * C20880 +
            (C15843 * C6308 + C15837 * C6312 + C15844 * C6520 +
             C32550 * C6521) *
                C20883 +
            (C15843 * C6311 + C15837 * C6317 + C15844 * C6522 +
             C32550 * C6523) *
                C32731) *
               C32916) *
              C32603 * C211) *
         C32577) /
            (p * q * std::sqrt(p + q));
    d2ee[100] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2662 * C119 + C2656 * C126 + C2663 * C120 + C2657 * C127 +
              C2664 * C121 + C2658 * C128 + C2665 * C122 + C32920 * C129) *
                 C118 +
             (C2662 * C131 + C2656 * C140 + C2663 * C132 + C2657 * C141 +
              C2664 * C133 + C2658 * C142 + C2665 * C134 + C32920 * C143) *
                 C32644) *
                C32885 +
            ((C2797 + C2798 + C2799 + C2800) * C118 +
             (C2801 + C2802 + C2803 + C2804) * C32644) *
                C32691) *
               C32603 * C440 -
           (((C2805 + C2806 + C2807 + C2808) * C32644 +
             (C2809 + C2810 + C2811 + C2812) * C118) *
                C32691 +
            ((C2804 + C2803 + C2802 + C2801) * C32644 +
             (C2800 + C2799 + C2798 + C2797) * C118) *
                C32885) *
               C32603 * C441) *
              C442 +
          ((((C3057 + C3058 + C3059 + C3060) * C118 +
             (C3061 + C3062 + C3063 + C3064) * C32644) *
                C32885 +
            ((C2662 * C219 + C2656 * C234 + C2663 * C220 + C2657 * C235 +
              C2664 * C221 + C2658 * C236 + C2665 * C222 + C32920 * C237) *
                 C118 +
             (C2662 * C239 + C2656 * C249 + C2663 * C240 + C2657 * C250 +
              C2664 * C241 + C2658 * C251 + C2665 * C242 + C32920 * C252) *
                 C32644) *
                C32691) *
               C32603 * C441 -
           (((C3064 + C3063 + C3062 + C3061) * C32644 +
             (C3060 + C3059 + C3058 + C3057) * C118) *
                C32691 +
            ((C2665 * C135 + C32920 * C144 + C2664 * C134 + C2658 * C143 +
              C2663 * C133 + C2657 * C142 + C2662 * C132 + C2656 * C141) *
                 C32644 +
             (C2665 * C123 + C32920 * C130 + C2664 * C122 + C2658 * C129 +
              C2663 * C121 + C2657 * C128 + C2662 * C120 + C2656 * C127) *
                 C118) *
                C32885) *
               C32603 * C440) *
              C443)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31557 * C119 + C32866 * C126 + C31538 * C120 + C32550 * C127) *
                 C118 +
             (C31557 * C131 + C32866 * C140 + C31538 * C132 + C32550 * C141) *
                 C32644) *
                C7665 +
            ((C7802 + C7803) * C118 + (C7804 + C7805) * C32644) * C7666 +
            C7826 * C7667 + C7827 * C32926) *
               C32603 * C440 -
           (((C7814 + C7815) * C32644 + (C7816 + C7817) * C118) * C32926 +
            ((C7813 + C7812) * C32644 + (C7811 + C7810) * C118) * C7667 +
            ((C7809 + C7808) * C32644 + (C7807 + C7806) * C118) * C7666 +
            ((C7805 + C7804) * C32644 + (C7803 + C7802) * C118) * C7665) *
               C32603 * C441) *
              C442 +
          ((((C8080 + C8081) * C118 + (C8082 + C8083) * C32644) * C7665 +
            ((C8084 + C8085) * C118 + (C8086 + C8087) * C32644) * C7666 +
            ((C8088 + C8089) * C118 + (C8090 + C8091) * C32644) * C7667 +
            ((C31557 * C871 + C32866 * C880 + C31538 * C872 + C32550 * C881) *
                 C118 +
             (C31557 * C883 + C32866 * C889 + C31538 * C884 + C32550 * C890) *
                 C32644) *
                C32926) *
               C32603 * C441 -
           (((C8091 + C8090) * C32644 + (C8089 + C8088) * C118) * C32926 +
            ((C8087 + C8086) * C32644 + (C8085 + C8084) * C118) * C7667 +
            ((C8083 + C8082) * C32644 + (C8081 + C8080) * C118) * C7666 +
            ((C31538 * C133 + C32550 * C142 + C31557 * C132 + C32866 * C141) *
                 C32644 +
             (C31538 * C121 + C32550 * C128 + C31557 * C120 + C32866 * C127) *
                 C118) *
                C7665) *
               C32603 * C440) *
              C443)) /
            (p * q * std::sqrt(p + q));
    d2ee[101] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2662 * C119 + C2656 * C126 + C2663 * C120 + C2657 * C127 +
              C2664 * C121 + C2658 * C128 + C2665 * C122 + C32920 * C129) *
                 C118 +
             (C2662 * C131 + C2656 * C140 + C2663 * C132 + C2657 * C141 +
              C2664 * C133 + C2658 * C142 + C2665 * C134 + C32920 * C143) *
                 C32644) *
                C32885 +
            ((C2797 + C2798 + C2799 + C2800) * C118 +
             (C2801 + C2802 + C2803 + C2804) * C32644) *
                C32691) *
               C530 -
           (((C3341 + C3342 + C3343 + C3344) * C32644 +
             (C3345 + C3346 + C3347 + C3348) * C118) *
                C32691 +
            ((C2665 * C329 + C32920 * C349 + C2664 * C330 + C2658 * C350 +
              C2663 * C331 + C2657 * C351 + C2662 * C332 + C2656 * C352) *
                 C32644 +
             (C2665 * C319 + C32920 * C334 + C2664 * C320 + C2658 * C335 +
              C2663 * C321 + C2657 * C336 + C2662 * C322 + C2656 * C337) *
                 C118) *
                C32885) *
               C531) *
              C440 +
          ((((C3348 + C3347 + C3346 + C3345) * C118 +
             (C3344 + C3343 + C3342 + C3341) * C32644) *
                C32885 +
            ((C2662 * C1064 + C2656 * C1076 + C2663 * C1063 + C2657 * C1075 +
              C2664 * C1062 + C2658 * C1074 + C2665 * C1430 + C32920 * C1431) *
                 C118 +
             (C2662 * C1073 + C2656 * C1091 + C2663 * C1072 + C2657 * C1090 +
              C2664 * C1071 + C2658 * C1089 + C2665 * C1432 + C32920 * C1433) *
                 C32644) *
                C32691) *
               C531 -
           (((C2805 + C2806 + C2807 + C2808) * C32644 +
             (C2809 + C2810 + C2811 + C2812) * C118) *
                C32691 +
            ((C2804 + C2803 + C2802 + C2801) * C32644 +
             (C2800 + C2799 + C2798 + C2797) * C118) *
                C32885) *
               C530) *
              C441) *
         C32577) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31557 * C119 + C32866 * C126 + C31538 * C120 + C32550 * C127) *
                 C118 +
             (C31557 * C131 + C32866 * C140 + C31538 * C132 + C32550 * C141) *
                 C32644) *
                C7665 +
            ((C7802 + C7803) * C118 + (C7804 + C7805) * C32644) * C7666 +
            C7826 * C7667 + C7827 * C32926) *
               C530 -
           (((C8376 + C8377) * C32644 + (C8378 + C8379) * C118) * C32926 +
            ((C8380 + C8381) * C32644 + (C8382 + C8383) * C118) * C7667 +
            ((C8384 + C8385) * C32644 + (C8386 + C8387) * C118) * C7666 +
            ((C31538 * C331 + C32550 * C351 + C31557 * C332 + C32866 * C352) *
                 C32644 +
             (C31538 * C321 + C32550 * C336 + C31557 * C322 + C32866 * C337) *
                 C118) *
                C7665) *
               C531) *
              C440 +
          ((((C8387 + C8386) * C118 + (C8385 + C8384) * C32644) * C7665 +
            ((C8383 + C8382) * C118 + (C8381 + C8380) * C32644) * C7666 +
            ((C8379 + C8378) * C118 + (C8377 + C8376) * C32644) * C7667 +
            ((C31557 * C6308 + C32866 * C6312 + C31538 * C6520 +
              C32550 * C6521) *
                 C118 +
             (C31557 * C6311 + C32866 * C6317 + C31538 * C6522 +
              C32550 * C6523) *
                 C32644) *
                C32926) *
               C531 -
           (((C7814 + C7815) * C32644 + (C7816 + C7817) * C118) * C32926 +
            ((C7813 + C7812) * C32644 + (C7811 + C7810) * C118) * C7667 +
            ((C7809 + C7808) * C32644 + (C7807 + C7806) * C118) * C7666 +
            ((C7805 + C7804) * C32644 + (C7803 + C7802) * C118) * C7665) *
               C530) *
              C441) *
         C32577) /
            (p * q * std::sqrt(p + q));
    d2ee[102] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C2662 * C119 + C2656 * C126 + C2663 * C120 + C2657 * C127 +
             C2664 * C121 + C2658 * C128 + C2665 * C122 + C32920 * C129) *
                C118 +
            (C2662 * C131 + C2656 * C140 + C2663 * C132 + C2657 * C141 +
             C2664 * C133 + C2658 * C142 + C2665 * C134 + C32920 * C143) *
                C32644) *
               C32885 +
           ((C2797 + C2798 + C2799 + C2800) * C118 +
            (C2801 + C2802 + C2803 + C2804) * C32644) *
               C32691) *
              C32603 * C209 -
          (((C2805 + C2806 + C2807 + C2808) * C32644 +
            (C2809 + C2810 + C2811 + C2812) * C118) *
               C32691 +
           ((C2804 + C2803 + C2802 + C2801) * C32644 +
            (C2800 + C2799 + C2798 + C2797) * C118) *
               C32885) *
              C32603 * C210 +
          (((C2812 + C2811 + C2810 + C2809) * C118 +
            (C2808 + C2807 + C2806 + C2805) * C32644) *
               C32885 +
           ((C2662 * C869 + C2656 * C878 + C2663 * C868 + C2657 * C877 +
             C2664 * C867 + C2658 * C876 + C2665 * C1244 + C32920 * C1245) *
                C118 +
            (C2662 * C875 + C2656 * C887 + C2663 * C874 + C2657 * C886 +
             C2664 * C873 + C2658 * C885 + C2665 * C1246 + C32920 * C1247) *
                C32644) *
               C32691) *
              C32603 * C211) *
         C32577) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C2662 * C119 + C2656 * C126 + C2663 * C120 + C2657 * C127 +
             C2664 * C121 + C2658 * C128 + C2665 * C122 + C32920 * C129) *
                C118 +
            (C2662 * C131 + C2656 * C140 + C2663 * C132 + C2657 * C141 +
             C2664 * C133 + C2658 * C142 + C2665 * C134 + C32920 * C143) *
                C32644) *
               C32885 +
           ((C2662 * C217 + C2656 * C232 + C2663 * C216 + C2657 * C231 +
             C2664 * C215 + C2658 * C230 + C2665 * C214 + C32920 * C229) *
                C118 +
            (C2662 * C227 + C2656 * C247 + C2663 * C226 + C2657 * C246 +
             C2664 * C225 + C2658 * C245 + C2665 * C224 + C32920 * C244) *
                C32644) *
               C32691) *
              C32603 * C32589 * C110 -
          (((C2665 * C223 + C32920 * C243 + C2664 * C224 + C2658 * C244 +
             C2663 * C225 + C2657 * C245 + C2662 * C226 + C2656 * C246) *
                C32644 +
            (C2665 * C213 + C32920 * C228 + C2664 * C214 + C2658 * C229 +
             C2663 * C215 + C2657 * C230 + C2662 * C216 + C2656 * C231) *
                C118) *
               C32691 +
           ((C2665 * C135 + C32920 * C144 + C2664 * C134 + C2658 * C143 +
             C2663 * C133 + C2657 * C142 + C2662 * C132 + C2656 * C141) *
                C32644 +
            (C2665 * C123 + C32920 * C130 + C2664 * C122 + C2658 * C129 +
             C2663 * C121 + C2657 * C128 + C2662 * C120 + C2656 * C127) *
                C118) *
               C32885) *
              C32603 * C32589 * C111 +
          (((C2662 * C121 + C2656 * C128 + C2663 * C122 + C2657 * C129 +
             C2664 * C123 + C2658 * C130 + C2665 * C124 + C32920 * C137) *
                C118 +
            (C2662 * C133 + C2656 * C142 + C2663 * C134 + C2657 * C143 +
             C2664 * C135 + C2658 * C144 + C2665 * C136 + C32920 * C145) *
                C32644) *
               C32885 +
           ((C2662 * C215 + C2656 * C230 + C2663 * C214 + C2657 * C229 +
             C2664 * C213 + C2658 * C228 + C2665 * C444 + C32920 * C445) *
                C118 +
            (C2662 * C225 + C2656 * C245 + C2663 * C224 + C2657 * C244 +
             C2664 * C223 + C2658 * C243 + C2665 * C446 + C32920 * C447) *
                C32644) *
               C32691) *
              C32603 * C32589 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C2662 * C119 + C2656 * C126 + C2663 * C120 + C2657 * C127 +
             C2664 * C121 + C2658 * C128 + C2665 * C122 + C32920 * C129) *
                C118 +
            (C2662 * C131 + C2656 * C140 + C2663 * C132 + C2657 * C141 +
             C2664 * C133 + C2658 * C142 + C2665 * C134 + C32920 * C143) *
                C32644) *
               C32885 +
           ((C2797 + C2798 + C2799 + C2800) * C118 +
            (C2801 + C2802 + C2803 + C2804) * C32644) *
               C32691) *
              C315 -
          (((C2665 * C631 + C32920 * C636 + C2664 * C630 + C2658 * C635 +
             C2663 * C629 + C2657 * C634 + C2662 * C628 + C2656 * C633) *
                C32644 +
            (C2665 * C621 + C32920 * C626 + C2664 * C620 + C2658 * C625 +
             C2663 * C619 + C2657 * C624 + C2662 * C618 + C2656 * C623) *
                C118) *
               C32691 +
           ((C2665 * C329 + C32920 * C349 + C2664 * C330 + C2658 * C350 +
             C2663 * C331 + C2657 * C351 + C2662 * C332 + C2656 * C352) *
                C32644 +
            (C2665 * C319 + C32920 * C334 + C2664 * C320 + C2658 * C335 +
             C2663 * C321 + C2657 * C336 + C2662 * C322 + C2656 * C337) *
                C118) *
               C32885) *
              C316 +
          (((C2662 * C323 + C2656 * C338 + C2663 * C324 + C2657 * C339 +
             C2664 * C325 + C2658 * C340 + C2665 * C326 + C32920 * C341) *
                C118 +
            (C2662 * C343 + C2656 * C353 + C2663 * C344 + C2657 * C354 +
             C2664 * C345 + C2658 * C355 + C2665 * C346 + C32920 * C356) *
                C32644) *
               C32885 +
           ((C2662 * C1065 + C2656 * C1077 + C2663 * C1066 + C2657 * C1078 +
             C2664 * C1067 + C2658 * C1079 + C2665 * C2192 + C32920 * C2193) *
                C118 +
            (C2662 * C1080 + C2656 * C1092 + C2663 * C1081 + C2657 * C1093 +
             C2664 * C1082 + C2658 * C1094 + C2665 * C2194 + C32920 * C2195) *
                C32644) *
               C32691) *
              C317) *
         C32589 * C32577) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C31557 * C119 + C32866 * C126 + C31538 * C120 + C32550 * C127) *
                C118 +
            (C31557 * C131 + C32866 * C140 + C31538 * C132 + C32550 * C141) *
                C32644) *
               C7665 +
           ((C31557 * C217 + C32866 * C232 + C31538 * C216 + C32550 * C231) *
                C118 +
            (C31557 * C227 + C32866 * C247 + C31538 * C226 + C32550 * C246) *
                C32644) *
               C7666 +
           ((C31557 * C218 + C32866 * C233 + C31538 * C219 + C32550 * C234) *
                C118 +
            (C31557 * C238 + C32866 * C248 + C31538 * C239 + C32550 * C249) *
                C32644) *
               C7667 +
           ((C31557 * C869 + C32866 * C878 + C31538 * C868 + C32550 * C877) *
                C118 +
            (C31557 * C875 + C32866 * C887 + C31538 * C874 + C32550 * C886) *
                C32644) *
               C32926) *
              C32603 * C32589 * C110 -
          (((C31538 * C873 + C32550 * C885 + C31557 * C874 + C32866 * C886) *
                C32644 +
            (C31538 * C867 + C32550 * C876 + C31557 * C868 + C32866 * C877) *
                C118) *
               C32926 +
           ((C31538 * C240 + C32550 * C250 + C31557 * C239 + C32866 * C249) *
                C32644 +
            (C31538 * C220 + C32550 * C235 + C31557 * C219 + C32866 * C234) *
                C118) *
               C7667 +
           ((C31538 * C225 + C32550 * C245 + C31557 * C226 + C32866 * C246) *
                C32644 +
            (C31538 * C215 + C32550 * C230 + C31557 * C216 + C32866 * C231) *
                C118) *
               C7666 +
           ((C31538 * C133 + C32550 * C142 + C31557 * C132 + C32866 * C141) *
                C32644 +
            (C31538 * C121 + C32550 * C128 + C31557 * C120 + C32866 * C127) *
                C118) *
               C7665) *
              C32603 * C32589 * C111 +
          (((C31557 * C121 + C32866 * C128 + C31538 * C122 + C32550 * C129) *
                C118 +
            (C31557 * C133 + C32866 * C142 + C31538 * C134 + C32550 * C143) *
                C32644) *
               C7665 +
           ((C31557 * C215 + C32866 * C230 + C31538 * C214 + C32550 * C229) *
                C118 +
            (C31557 * C225 + C32866 * C245 + C31538 * C224 + C32550 * C244) *
                C32644) *
               C7666 +
           ((C31557 * C220 + C32866 * C235 + C31538 * C221 + C32550 * C236) *
                C118 +
            (C31557 * C240 + C32866 * C250 + C31538 * C241 + C32550 * C251) *
                C32644) *
               C7667 +
           ((C31557 * C867 + C32866 * C876 + C31538 * C1244 + C32550 * C1245) *
                C118 +
            (C31557 * C873 + C32866 * C885 + C31538 * C1246 + C32550 * C1247) *
                C32644) *
               C32926) *
              C32603 * C32589 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C31557 * C119 + C32866 * C126 + C31538 * C120 + C32550 * C127) *
                C118 +
            (C31557 * C131 + C32866 * C140 + C31538 * C132 + C32550 * C141) *
                C32644) *
               C7665 +
           ((C7802 + C7803) * C118 + (C7804 + C7805) * C32644) * C7666 +
           C7826 * C7667 + C7827 * C32926) *
              C32603 * C209 -
          (((C7814 + C7815) * C32644 + (C7816 + C7817) * C118) * C32926 +
           ((C7813 + C7812) * C32644 + (C7811 + C7810) * C118) * C7667 +
           ((C7809 + C7808) * C32644 + (C7807 + C7806) * C118) * C7666 +
           ((C7805 + C7804) * C32644 + (C7803 + C7802) * C118) * C7665) *
              C32603 * C210 +
          (C7826 * C7665 + C7827 * C7666 +
           ((C7817 + C7816) * C118 + (C7815 + C7814) * C32644) * C7667 +
           ((C31557 * C6195 + C32866 * C6198 + C31538 * C6402 +
             C32550 * C6403) *
                C118 +
            (C31557 * C6197 + C32866 * C6201 + C31538 * C6404 +
             C32550 * C6405) *
                C32644) *
               C32926) *
              C32603 * C211) *
         C32577) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C31557 * C119 + C32866 * C126 + C31538 * C120 + C32550 * C127) *
                C118 +
            (C31557 * C131 + C32866 * C140 + C31538 * C132 + C32550 * C141) *
                C32644) *
               C7665 +
           ((C7802 + C7803) * C118 + (C7804 + C7805) * C32644) * C7666 +
           C7826 * C7667 + C7827 * C32926) *
              C315 -
          (((C31538 * C1587 + C32550 * C1590 + C31557 * C1586 +
             C32866 * C1589) *
                C32644 +
            (C31538 * C1581 + C32550 * C1584 + C31557 * C1580 +
             C32866 * C1583) *
                C118) *
               C32926 +
           ((C31538 * C1072 + C32550 * C1090 + C31557 * C1073 +
             C32866 * C1091) *
                C32644 +
            (C31538 * C1063 + C32550 * C1075 + C31557 * C1064 +
             C32866 * C1076) *
                C118) *
               C7667 +
           ((C31538 * C629 + C32550 * C634 + C31557 * C628 + C32866 * C633) *
                C32644 +
            (C31538 * C619 + C32550 * C624 + C31557 * C618 + C32866 * C623) *
                C118) *
               C7666 +
           ((C31538 * C331 + C32550 * C351 + C31557 * C332 + C32866 * C352) *
                C32644 +
            (C31538 * C321 + C32550 * C336 + C31557 * C322 + C32866 * C337) *
                C118) *
               C7665) *
              C316 +
          (((C31557 * C323 + C32866 * C338 + C31538 * C324 + C32550 * C339) *
                C118 +
            (C31557 * C343 + C32866 * C353 + C31538 * C344 + C32550 * C354) *
                C32644) *
               C7665 +
           ((C31557 * C1065 + C32866 * C1077 + C31538 * C1066 +
             C32550 * C1078) *
                C118 +
            (C31557 * C1080 + C32866 * C1092 + C31538 * C1081 +
             C32550 * C1093) *
                C32644) *
               C7666 +
           ((C31557 * C1068 + C32866 * C1083 + C31538 * C1069 +
             C32550 * C1084) *
                C118 +
            (C31557 * C1086 + C32866 * C1095 + C31538 * C1087 +
             C32550 * C1096) *
                C32644) *
               C7667 +
           ((C31557 * C6309 + C32866 * C6313 + C31538 * C7201 +
             C32550 * C7202) *
                C118 +
            (C31557 * C6314 + C32866 * C6318 + C31538 * C7203 +
             C32550 * C7204) *
                C32644) *
               C32926) *
              C317) *
         C32589 * C32577) /
            (p * q * std::sqrt(p + q));
    d2ee[103] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2662 * C119 + C2656 * C126 + C2663 * C120 + C2657 * C127 +
              C2664 * C121 + C2658 * C128 + C2665 * C122 + C32920 * C129) *
                 C118 +
             (C2662 * C131 + C2656 * C140 + C2663 * C132 + C2657 * C141 +
              C2664 * C133 + C2658 * C142 + C2665 * C134 + C32920 * C143) *
                 C32644) *
                C32885 +
            ((C2797 + C2798 + C2799 + C2800) * C118 +
             (C2801 + C2802 + C2803 + C2804) * C32644) *
                C32691) *
               C530 -
           (((C2665 * C631 + C32920 * C636 + C2664 * C630 + C2658 * C635 +
              C2663 * C629 + C2657 * C634 + C2662 * C628 + C2656 * C633) *
                 C32644 +
             (C2665 * C621 + C32920 * C626 + C2664 * C620 + C2658 * C625 +
              C2663 * C619 + C2657 * C624 + C2662 * C618 + C2656 * C623) *
                 C118) *
                C32691 +
            ((C2665 * C329 + C32920 * C349 + C2664 * C330 + C2658 * C350 +
              C2663 * C331 + C2657 * C351 + C2662 * C332 + C2656 * C352) *
                 C32644 +
             (C2665 * C319 + C32920 * C334 + C2664 * C320 + C2658 * C335 +
              C2663 * C321 + C2657 * C336 + C2662 * C322 + C2656 * C337) *
                 C118) *
                C32885) *
               C531) *
              C32589 * C442 +
          ((((C2662 * C321 + C2656 * C336 + C2663 * C320 + C2657 * C335 +
              C2664 * C319 + C2658 * C334 + C2665 * C318 + C32920 * C333) *
                 C118 +
             (C2662 * C331 + C2656 * C351 + C2663 * C330 + C2657 * C350 +
              C2664 * C329 + C2658 * C349 + C2665 * C328 + C32920 * C348) *
                 C32644) *
                C32885 +
            ((C2662 * C619 + C2656 * C624 + C2663 * C620 + C2657 * C625 +
              C2664 * C621 + C2658 * C626 + C2665 * C622 + C32920 * C627) *
                 C118 +
             (C2662 * C629 + C2656 * C634 + C2663 * C630 + C2657 * C635 +
              C2664 * C631 + C2658 * C636 + C2665 * C632 + C32920 * C637) *
                 C32644) *
                C32691) *
               C531 -
           (((C3064 + C3063 + C3062 + C3061) * C32644 +
             (C3060 + C3059 + C3058 + C3057) * C118) *
                C32691 +
            ((C2665 * C135 + C32920 * C144 + C2664 * C134 + C2658 * C143 +
              C2663 * C133 + C2657 * C142 + C2662 * C132 + C2656 * C141) *
                 C32644 +
             (C2665 * C123 + C32920 * C130 + C2664 * C122 + C2658 * C129 +
              C2663 * C121 + C2657 * C128 + C2662 * C120 + C2656 * C127) *
                 C118) *
                C32885) *
               C530) *
              C32589 * C443)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31557 * C119 + C32866 * C126 + C31538 * C120 + C32550 * C127) *
                 C118 +
             (C31557 * C131 + C32866 * C140 + C31538 * C132 + C32550 * C141) *
                 C32644) *
                C7665 +
            ((C7802 + C7803) * C118 + (C7804 + C7805) * C32644) * C7666 +
            C7826 * C7667 + C7827 * C32926) *
               C530 -
           (((C31538 * C1587 + C32550 * C1590 + C31557 * C1586 +
              C32866 * C1589) *
                 C32644 +
             (C31538 * C1581 + C32550 * C1584 + C31557 * C1580 +
              C32866 * C1583) *
                 C118) *
                C32926 +
            ((C31538 * C1072 + C32550 * C1090 + C31557 * C1073 +
              C32866 * C1091) *
                 C32644 +
             (C31538 * C1063 + C32550 * C1075 + C31557 * C1064 +
              C32866 * C1076) *
                 C118) *
                C7667 +
            ((C31538 * C629 + C32550 * C634 + C31557 * C628 + C32866 * C633) *
                 C32644 +
             (C31538 * C619 + C32550 * C624 + C31557 * C618 + C32866 * C623) *
                 C118) *
                C7666 +
            ((C31538 * C331 + C32550 * C351 + C31557 * C332 + C32866 * C352) *
                 C32644 +
             (C31538 * C321 + C32550 * C336 + C31557 * C322 + C32866 * C337) *
                 C118) *
                C7665) *
               C531) *
              C32589 * C442 +
          ((((C31557 * C321 + C32866 * C336 + C31538 * C320 + C32550 * C335) *
                 C118 +
             (C31557 * C331 + C32866 * C351 + C31538 * C330 + C32550 * C350) *
                 C32644) *
                C7665 +
            ((C31557 * C619 + C32866 * C624 + C31538 * C620 + C32550 * C625) *
                 C118 +
             (C31557 * C629 + C32866 * C634 + C31538 * C630 + C32550 * C635) *
                 C32644) *
                C7666 +
            ((C31557 * C1063 + C32866 * C1075 + C31538 * C1062 +
              C32550 * C1074) *
                 C118 +
             (C31557 * C1072 + C32866 * C1090 + C31538 * C1071 +
              C32550 * C1089) *
                 C32644) *
                C7667 +
            ((C31557 * C1581 + C32866 * C1584 + C31538 * C1582 +
              C32550 * C1585) *
                 C118 +
             (C31557 * C1587 + C32866 * C1590 + C31538 * C1588 +
              C32550 * C1591) *
                 C32644) *
                C32926) *
               C531 -
           (((C8091 + C8090) * C32644 + (C8089 + C8088) * C118) * C32926 +
            ((C8087 + C8086) * C32644 + (C8085 + C8084) * C118) * C7667 +
            ((C8083 + C8082) * C32644 + (C8081 + C8080) * C118) * C7666 +
            ((C31538 * C133 + C32550 * C142 + C31557 * C132 + C32866 * C141) *
                 C32644 +
             (C31538 * C121 + C32550 * C128 + C31557 * C120 + C32866 * C127) *
                 C118) *
                C7665) *
               C530) *
              C32589 * C443)) /
            (p * q * std::sqrt(p + q));
    d2ee[104] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C2662 * C119 + C2656 * C126 + C2663 * C120 + C2657 * C127 +
             C2664 * C121 + C2658 * C128 + C2665 * C122 + C32920 * C129) *
                C118 +
            (C2662 * C131 + C2656 * C140 + C2663 * C132 + C2657 * C141 +
             C2664 * C133 + C2658 * C142 + C2665 * C134 + C32920 * C143) *
                C32644) *
               C32885 +
           ((C2662 * C217 + C2656 * C232 + C2663 * C216 + C2657 * C231 +
             C2664 * C215 + C2658 * C230 + C2665 * C214 + C32920 * C229) *
                C118 +
            (C2662 * C227 + C2656 * C247 + C2663 * C226 + C2657 * C246 +
             C2664 * C225 + C2658 * C245 + C2665 * C224 + C32920 * C244) *
                C32644) *
               C32691) *
              C32603 * C32589 * C110 -
          (((C2665 * C223 + C32920 * C243 + C2664 * C224 + C2658 * C244 +
             C2663 * C225 + C2657 * C245 + C2662 * C226 + C2656 * C246) *
                C32644 +
            (C2665 * C213 + C32920 * C228 + C2664 * C214 + C2658 * C229 +
             C2663 * C215 + C2657 * C230 + C2662 * C216 + C2656 * C231) *
                C118) *
               C32691 +
           ((C2665 * C135 + C32920 * C144 + C2664 * C134 + C2658 * C143 +
             C2663 * C133 + C2657 * C142 + C2662 * C132 + C2656 * C141) *
                C32644 +
            (C2665 * C123 + C32920 * C130 + C2664 * C122 + C2658 * C129 +
             C2663 * C121 + C2657 * C128 + C2662 * C120 + C2656 * C127) *
                C118) *
               C32885) *
              C32603 * C32589 * C111 +
          (((C2662 * C121 + C2656 * C128 + C2663 * C122 + C2657 * C129 +
             C2664 * C123 + C2658 * C130 + C2665 * C124 + C32920 * C137) *
                C118 +
            (C2662 * C133 + C2656 * C142 + C2663 * C134 + C2657 * C143 +
             C2664 * C135 + C2658 * C144 + C2665 * C136 + C32920 * C145) *
                C32644) *
               C32885 +
           ((C2662 * C215 + C2656 * C230 + C2663 * C214 + C2657 * C229 +
             C2664 * C213 + C2658 * C228 + C2665 * C444 + C32920 * C445) *
                C118 +
            (C2662 * C225 + C2656 * C245 + C2663 * C224 + C2657 * C244 +
             C2664 * C223 + C2658 * C243 + C2665 * C446 + C32920 * C447) *
                C32644) *
               C32691) *
              C32603 * C32589 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C2662 * C119 + C2656 * C126 + C2663 * C120 + C2657 * C127 +
             C2664 * C121 + C2658 * C128 + C2665 * C122 + C32920 * C129) *
                C118 +
            (C2662 * C131 + C2656 * C140 + C2663 * C132 + C2657 * C141 +
             C2664 * C133 + C2658 * C142 + C2665 * C134 + C32920 * C143) *
                C32644) *
               C32885 +
           ((C2797 + C2798 + C2799 + C2800) * C118 +
            (C2801 + C2802 + C2803 + C2804) * C32644) *
               C32691) *
              C32603 * C209 -
          (((C2805 + C2806 + C2807 + C2808) * C32644 +
            (C2809 + C2810 + C2811 + C2812) * C118) *
               C32691 +
           ((C2804 + C2803 + C2802 + C2801) * C32644 +
            (C2800 + C2799 + C2798 + C2797) * C118) *
               C32885) *
              C32603 * C210 +
          (((C2812 + C2811 + C2810 + C2809) * C118 +
            (C2808 + C2807 + C2806 + C2805) * C32644) *
               C32885 +
           ((C2662 * C869 + C2656 * C878 + C2663 * C868 + C2657 * C877 +
             C2664 * C867 + C2658 * C876 + C2665 * C1244 + C32920 * C1245) *
                C118 +
            (C2662 * C875 + C2656 * C887 + C2663 * C874 + C2657 * C886 +
             C2664 * C873 + C2658 * C885 + C2665 * C1246 + C32920 * C1247) *
                C32644) *
               C32691) *
              C32603 * C211) *
         C32577) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C31557 * C119 + C32866 * C126 + C31538 * C120 + C32550 * C127) *
                C118 +
            (C31557 * C131 + C32866 * C140 + C31538 * C132 + C32550 * C141) *
                C32644) *
               C7665 +
           ((C31557 * C217 + C32866 * C232 + C31538 * C216 + C32550 * C231) *
                C118 +
            (C31557 * C227 + C32866 * C247 + C31538 * C226 + C32550 * C246) *
                C32644) *
               C7666 +
           ((C31557 * C218 + C32866 * C233 + C31538 * C219 + C32550 * C234) *
                C118 +
            (C31557 * C238 + C32866 * C248 + C31538 * C239 + C32550 * C249) *
                C32644) *
               C7667 +
           ((C31557 * C869 + C32866 * C878 + C31538 * C868 + C32550 * C877) *
                C118 +
            (C31557 * C875 + C32866 * C887 + C31538 * C874 + C32550 * C886) *
                C32644) *
               C32926) *
              C32603 * C32589 * C110 -
          (((C31538 * C873 + C32550 * C885 + C31557 * C874 + C32866 * C886) *
                C32644 +
            (C31538 * C867 + C32550 * C876 + C31557 * C868 + C32866 * C877) *
                C118) *
               C32926 +
           ((C31538 * C240 + C32550 * C250 + C31557 * C239 + C32866 * C249) *
                C32644 +
            (C31538 * C220 + C32550 * C235 + C31557 * C219 + C32866 * C234) *
                C118) *
               C7667 +
           ((C31538 * C225 + C32550 * C245 + C31557 * C226 + C32866 * C246) *
                C32644 +
            (C31538 * C215 + C32550 * C230 + C31557 * C216 + C32866 * C231) *
                C118) *
               C7666 +
           ((C31538 * C133 + C32550 * C142 + C31557 * C132 + C32866 * C141) *
                C32644 +
            (C31538 * C121 + C32550 * C128 + C31557 * C120 + C32866 * C127) *
                C118) *
               C7665) *
              C32603 * C32589 * C111 +
          (((C31557 * C121 + C32866 * C128 + C31538 * C122 + C32550 * C129) *
                C118 +
            (C31557 * C133 + C32866 * C142 + C31538 * C134 + C32550 * C143) *
                C32644) *
               C7665 +
           ((C31557 * C215 + C32866 * C230 + C31538 * C214 + C32550 * C229) *
                C118 +
            (C31557 * C225 + C32866 * C245 + C31538 * C224 + C32550 * C244) *
                C32644) *
               C7666 +
           ((C31557 * C220 + C32866 * C235 + C31538 * C221 + C32550 * C236) *
                C118 +
            (C31557 * C240 + C32866 * C250 + C31538 * C241 + C32550 * C251) *
                C32644) *
               C7667 +
           ((C31557 * C867 + C32866 * C876 + C31538 * C1244 + C32550 * C1245) *
                C118 +
            (C31557 * C873 + C32866 * C885 + C31538 * C1246 + C32550 * C1247) *
                C32644) *
               C32926) *
              C32603 * C32589 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C31557 * C119 + C32866 * C126 + C31538 * C120 + C32550 * C127) *
                C118 +
            (C31557 * C131 + C32866 * C140 + C31538 * C132 + C32550 * C141) *
                C32644) *
               C7665 +
           ((C7802 + C7803) * C118 + (C7804 + C7805) * C32644) * C7666 +
           C7826 * C7667 + C7827 * C32926) *
              C32603 * C209 -
          (((C7814 + C7815) * C32644 + (C7816 + C7817) * C118) * C32926 +
           ((C7813 + C7812) * C32644 + (C7811 + C7810) * C118) * C7667 +
           ((C7809 + C7808) * C32644 + (C7807 + C7806) * C118) * C7666 +
           ((C7805 + C7804) * C32644 + (C7803 + C7802) * C118) * C7665) *
              C32603 * C210 +
          (C7826 * C7665 + C7827 * C7666 +
           ((C7817 + C7816) * C118 + (C7815 + C7814) * C32644) * C7667 +
           ((C31557 * C6195 + C32866 * C6198 + C31538 * C6402 +
             C32550 * C6403) *
                C118 +
            (C31557 * C6197 + C32866 * C6201 + C31538 * C6404 +
             C32550 * C6405) *
                C32644) *
               C32926) *
              C32603 * C211) *
         C32577) /
            (p * q * std::sqrt(p + q));
    d2ee[105] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C754 * C119 + C748 * C126 + C755 * C120 + C749 * C127 +
              C756 * C121 + C32905 * C128) *
                 C3448 +
             (C754 * C131 + C748 * C140 + C755 * C132 + C749 * C141 +
              C756 * C133 + C32905 * C142) *
                 C32886 +
             (C2025 + C2026 + C2027) * C3449 +
             (C2028 + C2029 + C2030) * C32731) *
                C32885 +
            ((C928 + C929 + C930) * C3448 + (C931 + C932 + C933) * C32886 +
             (C1628 + C1627 + C1626) * C3449 +
             (C1625 + C1624 + C1623) * C32731) *
                C32691) *
               C32603 * C440 -
           (((C1617 + C1618 + C1619) * C32731 +
             (C1620 + C1621 + C1622) * C3449 + (C939 + C938 + C937) * C32886 +
             (C936 + C935 + C934) * C3448) *
                C32691 +
            ((C1623 + C1624 + C1625) * C32731 +
             (C1626 + C1627 + C1628) * C3449 + (C933 + C932 + C931) * C32886 +
             (C930 + C929 + C928) * C3448) *
                C32885) *
               C32603 * C441) *
              C442 +
          ((((C1273 + C1274 + C1275) * C3448 +
             (C1276 + C1277 + C1278) * C32886 +
             (C4753 + C4754 + C4755) * C3449 +
             (C4756 + C4757 + C4758) * C32731) *
                C32885 +
            ((C1279 + C1280 + C1281) * C3448 +
             (C1282 + C1283 + C1284) * C32886 +
             (C754 * C1063 + C748 * C1075 + C755 * C1062 + C749 * C1074 +
              C756 * C1430 + C32905 * C1431) *
                 C3449 +
             (C754 * C1072 + C748 * C1090 + C755 * C1071 + C749 * C1089 +
              C756 * C1432 + C32905 * C1433) *
                 C32731) *
                C32691) *
               C32603 * C441 -
           (((C4758 + C4757 + C4756) * C32731 +
             (C4755 + C4754 + C4753) * C3449 +
             (C1278 + C1277 + C1276) * C32886 +
             (C1275 + C1274 + C1273) * C3448) *
                C32691 +
            ((C2376 + C2375 + C2374) * C32731 +
             (C2373 + C2372 + C2371) * C3449 +
             (C756 * C134 + C32905 * C143 + C755 * C133 + C749 * C142 +
              C754 * C132 + C748 * C141) *
                 C32886 +
             (C756 * C122 + C32905 * C129 + C755 * C121 + C749 * C128 +
              C754 * C120 + C748 * C127) *
                 C3448) *
                C32885) *
               C32603 * C440) *
              C443)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C6132 * C119 + C32540 * C126) * C3448 +
             (C6132 * C131 + C32540 * C140) * C32886 + C7046 * C3449 +
             C7047 * C32731) *
                C7665 +
            (C9703 + C9704 + C9705 + C9706) * C7666 + C9723 * C7667 +
            C9724 * C32926) *
               C32603 * C440 -
           ((C9715 + C9716 + C9717 + C9718) * C32926 +
            (C9714 + C9713 + C9712 + C9711) * C7667 +
            (C9710 + C9709 + C9708 + C9707) * C7666 +
            (C9706 + C9705 + C9704 + C9703) * C7665) *
               C32603 * C441) *
              C442 +
          (((C9953 + C9954 + C9955 + C9956) * C7665 +
            (C9957 + C9958 + C9959 + C9960) * C7666 +
            (C9961 + C9962 + C9969 + C9970) * C7667 +
            (C6429 * C3448 + C6430 * C32886 +
             (C6132 * C6520 + C32540 * C6521) * C3449 +
             (C6132 * C6522 + C32540 * C6523) * C32731) *
                C32926) *
               C32603 * C441 -
           ((C9970 + C9969 + C9962 + C9961) * C32926 +
            (C9960 + C9959 + C9958 + C9957) * C7667 +
            (C9956 + C9955 + C9954 + C9953) * C7666 +
            (C7401 * C32731 + C7400 * C3449 +
             (C6132 * C132 + C32540 * C141) * C32886 +
             (C6132 * C120 + C32540 * C127) * C3448) *
                C7665) *
               C32603 * C440) *
              C443)) /
            (p * q * std::sqrt(p + q));
    d2ee[106] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C754 * C119 + C748 * C126 + C755 * C120 + C749 * C127 +
              C756 * C121 + C32905 * C128) *
                 C3448 +
             (C754 * C131 + C748 * C140 + C755 * C132 + C749 * C141 +
              C756 * C133 + C32905 * C142) *
                 C32886 +
             (C2025 + C2026 + C2027) * C3449 +
             (C2028 + C2029 + C2030) * C32731) *
                C32885 +
            ((C928 + C929 + C930) * C3448 + (C931 + C932 + C933) * C32886 +
             C5151 * C3449 + C5152 * C32731) *
                C32691) *
               C530 -
           (((C2558 + C2557 + C2556) * C32731 +
             (C2555 + C2554 + C2553) * C3449 + C5153 * C32886 + C5154 * C3448) *
                C32691 +
            ((C2036 + C2035 + C2034) * C32731 +
             (C2033 + C2032 + C2031) * C3449 +
             (C2030 + C2029 + C2028) * C32886 +
             (C2027 + C2026 + C2025) * C3448) *
                C32885) *
               C531) *
              C440 +
          (((C5151 * C3448 + C5152 * C32886 + (C2553 + C2554 + C2555) * C3449 +
             (C2556 + C2557 + C2558) * C32731) *
                C32885 +
            ((C1622 + C1621 + C1620) * C3448 +
             (C1619 + C1618 + C1617) * C32886 +
             (C754 * C1068 + C748 * C1083 + C755 * C1069 + C749 * C1084 +
              C756 * C1070 + C32905 * C1085) *
                 C3449 +
             (C754 * C1086 + C748 * C1095 + C755 * C1087 + C749 * C1096 +
              C756 * C1088 + C32905 * C1097) *
                 C32731) *
                C32691) *
               C531 -
           (((C1617 + C1618 + C1619) * C32731 +
             (C1620 + C1621 + C1622) * C3449 + (C939 + C938 + C937) * C32886 +
             (C936 + C935 + C934) * C3448) *
                C32691 +
            (C5153 * C32731 + C5154 * C3449 + (C933 + C932 + C931) * C32886 +
             (C930 + C929 + C928) * C3448) *
                C32885) *
               C530) *
              C441) *
         C32577) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C6132 * C119 + C32540 * C126) * C3448 +
             (C6132 * C131 + C32540 * C140) * C32886 + C7046 * C3449 +
             C7047 * C32731) *
                C7665 +
            (C9703 + C9704 + C9705 + C9706) * C7666 + C9723 * C7667 +
            C9724 * C32926) *
               C530 -
           ((C10231 + C10232 + C10233 + C10234) * C32926 +
            (C10235 + C10236 + C10237 + C10238) * C7667 +
            (C10239 + C10240 + C10241 + C10242) * C7666 +
            (C7049 * C32731 + C7048 * C3449 + C7047 * C32886 + C7046 * C3448) *
                C7665) *
               C531) *
              C440 +
          (((C10242 + C10241 + C10240 + C10239) * C7665 +
            (C10238 + C10237 + C10236 + C10235) * C7666 +
            (C10234 + C10233 + C10232 + C10231) * C7667 +
            (C6628 * C3448 + C6627 * C32886 +
             (C6132 * C6310 + C32540 * C6315) * C3449 +
             (C6132 * C6316 + C32540 * C6319) * C32731) *
                C32926) *
               C531 -
           ((C9715 + C9716 + C9717 + C9718) * C32926 +
            (C9714 + C9713 + C9712 + C9711) * C7667 +
            (C9710 + C9709 + C9708 + C9707) * C7666 +
            (C9706 + C9705 + C9704 + C9703) * C7665) *
               C530) *
              C441) *
         C32577) /
            (p * q * std::sqrt(p + q));
    d2ee[107] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C754 * C119 + C748 * C126 + C755 * C120 + C749 * C127 +
             C756 * C121 + C32905 * C128) *
                C3448 +
            (C754 * C131 + C748 * C140 + C755 * C132 + C749 * C141 +
             C756 * C133 + C32905 * C142) *
                C32886 +
            (C2025 + C2026 + C2027) * C3449 +
            (C2028 + C2029 + C2030) * C32731) *
               C32885 +
           ((C928 + C929 + C930) * C3448 + (C931 + C932 + C933) * C32886 +
            (C1628 + C1627 + C1626) * C3449 +
            (C1625 + C1624 + C1623) * C32731) *
               C32691) *
              C32603 * C209 -
          (((C1617 + C1618 + C1619) * C32731 + (C1620 + C1621 + C1622) * C3449 +
            (C939 + C938 + C937) * C32886 + (C936 + C935 + C934) * C3448) *
               C32691 +
           ((C1623 + C1624 + C1625) * C32731 + (C1626 + C1627 + C1628) * C3449 +
            (C933 + C932 + C931) * C32886 + (C930 + C929 + C928) * C3448) *
               C32885) *
              C32603 * C210 +
          ((C948 * C3448 + C949 * C32886 + (C1622 + C1621 + C1620) * C3449 +
            (C1619 + C1618 + C1617) * C32731) *
               C32885 +
           ((C945 + C944 + C943) * C3448 + (C942 + C941 + C940) * C32886 +
            (C754 * C1580 + C748 * C1583 + C755 * C1581 + C749 * C1584 +
             C756 * C1582 + C32905 * C1585) *
                C3449 +
            (C754 * C1586 + C748 * C1589 + C755 * C1587 + C749 * C1590 +
             C756 * C1588 + C32905 * C1591) *
                C32731) *
               C32691) *
              C32603 * C211) *
         C32577) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C754 * C119 + C748 * C126 + C755 * C120 + C749 * C127 +
             C756 * C121 + C32905 * C128) *
                C3448 +
            (C754 * C131 + C748 * C140 + C755 * C132 + C749 * C141 +
             C756 * C133 + C32905 * C142) *
                C32886 +
            (C2025 + C2026 + C2027) * C3449 +
            (C2028 + C2029 + C2030) * C32731) *
               C32885 +
           ((C928 + C929 + C930) * C3448 + (C931 + C932 + C933) * C32886 +
            (C1628 + C1627 + C1626) * C3449 +
            (C1625 + C1624 + C1623) * C32731) *
               C32691) *
              C32603 * C32589 * C110 -
          (((C756 * C631 + C32905 * C636 + C755 * C630 + C749 * C635 +
             C754 * C629 + C748 * C634) *
                C32731 +
            (C756 * C621 + C32905 * C626 + C755 * C620 + C749 * C625 +
             C754 * C619 + C748 * C624) *
                C3449 +
            (C1278 + C1277 + C1276) * C32886 +
            (C1275 + C1274 + C1273) * C3448) *
               C32691 +
           ((C2376 + C2375 + C2374) * C32731 + (C2373 + C2372 + C2371) * C3449 +
            (C756 * C134 + C32905 * C143 + C755 * C133 + C749 * C142 +
             C754 * C132 + C748 * C141) *
                C32886 +
            (C756 * C122 + C32905 * C129 + C755 * C121 + C749 * C128 +
             C754 * C120 + C748 * C127) *
                C3448) *
               C32885) *
              C32603 * C32589 * C111 +
          (((C754 * C121 + C748 * C128 + C755 * C122 + C749 * C129 +
             C756 * C123 + C32905 * C130) *
                C3448 +
            (C754 * C133 + C748 * C142 + C755 * C134 + C749 * C143 +
             C756 * C135 + C32905 * C144) *
                C32886 +
            (C754 * C320 + C748 * C335 + C755 * C319 + C749 * C334 +
             C756 * C318 + C32905 * C333) *
                C3449 +
            (C754 * C330 + C748 * C350 + C755 * C329 + C749 * C349 +
             C756 * C328 + C32905 * C348) *
                C32731) *
               C32885 +
           ((C754 * C215 + C748 * C230 + C755 * C214 + C749 * C229 +
             C756 * C213 + C32905 * C228) *
                C3448 +
            (C754 * C225 + C748 * C245 + C755 * C224 + C749 * C244 +
             C756 * C223 + C32905 * C243) *
                C32886 +
            (C754 * C620 + C748 * C625 + C755 * C621 + C749 * C626 +
             C756 * C622 + C32905 * C627) *
                C3449 +
            (C754 * C630 + C748 * C635 + C755 * C631 + C749 * C636 +
             C756 * C632 + C32905 * C637) *
                C32731) *
               C32691) *
              C32603 * C32589 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C754 * C119 + C748 * C126 + C755 * C120 + C749 * C127 +
             C756 * C121 + C32905 * C128) *
                C3448 +
            (C754 * C131 + C748 * C140 + C755 * C132 + C749 * C141 +
             C756 * C133 + C32905 * C142) *
                C32886 +
            (C2025 + C2026 + C2027) * C3449 +
            (C2028 + C2029 + C2030) * C32731) *
               C32885 +
           ((C928 + C929 + C930) * C3448 + (C931 + C932 + C933) * C32886 +
            (C1628 + C1627 + C1626) * C3449 +
            (C1625 + C1624 + C1623) * C32731) *
               C32691) *
              C315 -
          (((C2558 + C2557 + C2556) * C32731 + (C2555 + C2554 + C2553) * C3449 +
            (C1623 + C1624 + C1625) * C32886 +
            (C1626 + C1627 + C1628) * C3448) *
               C32691 +
           ((C2036 + C2035 + C2034) * C32731 + (C2033 + C2032 + C2031) * C3449 +
            (C2030 + C2029 + C2028) * C32886 +
            (C2027 + C2026 + C2025) * C3448) *
               C32885) *
              C316 +
          ((C2045 * C3448 + C2046 * C32886 + (C2042 + C2041 + C2040) * C3449 +
            (C2039 + C2038 + C2037) * C32731) *
               C32885 +
           ((C2553 + C2554 + C2555) * C3448 + (C2556 + C2557 + C2558) * C32886 +
            (C754 * C2528 + C748 * C2531 + C755 * C2529 + C749 * C2532 +
             C756 * C2530 + C32905 * C2533) *
                C3449 +
            (C754 * C2534 + C748 * C2537 + C755 * C2535 + C749 * C2538 +
             C756 * C2536 + C32905 * C2539) *
                C32731) *
               C32691) *
              C317) *
         C32589 * C32577) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C6132 * C119 + C32540 * C126) * C3448 +
            (C6132 * C131 + C32540 * C140) * C32886 + C7046 * C3449 +
            C7047 * C32731) *
               C7665 +
           (C6224 * C3448 + C6225 * C32886 + C6634 * C3449 + C6633 * C32731) *
               C7666 +
           (C6226 * C3448 + C6227 * C32886 + C6632 * C3449 + C6631 * C32731) *
               C7667 +
           (C6228 * C3448 + C6229 * C32886 + C6630 * C3449 + C6629 * C32731) *
               C32926) *
              C32603 * C32589 * C110 -
          (((C6132 * C1587 + C32540 * C1590) * C32731 +
            (C6132 * C1581 + C32540 * C1584) * C3449 + C6428 * C32886 +
            C6427 * C3448) *
               C32926 +
           (C7231 * C32731 + C7230 * C3449 + C6426 * C32886 + C6425 * C3448) *
               C7667 +
           (C7227 * C32731 + C7226 * C3449 + C6424 * C32886 + C6423 * C3448) *
               C7666 +
           (C7401 * C32731 + C7400 * C3449 +
            (C6132 * C132 + C32540 * C141) * C32886 +
            (C6132 * C120 + C32540 * C127) * C3448) *
               C7665) *
              C32603 * C32589 * C111 +
          (((C6132 * C121 + C32540 * C128) * C3448 +
            (C6132 * C133 + C32540 * C142) * C32886 +
            (C6132 * C320 + C32540 * C335) * C3449 +
            (C6132 * C330 + C32540 * C350) * C32731) *
               C7665 +
           ((C6132 * C215 + C32540 * C230) * C3448 +
            (C6132 * C225 + C32540 * C245) * C32886 +
            (C6132 * C620 + C32540 * C625) * C3449 +
            (C6132 * C630 + C32540 * C635) * C32731) *
               C7666 +
           ((C6132 * C220 + C32540 * C235) * C3448 +
            (C6132 * C240 + C32540 * C250) * C32886 +
            (C6132 * C1062 + C32540 * C1074) * C3449 +
            (C6132 * C1071 + C32540 * C1089) * C32731) *
               C7667 +
           ((C6132 * C867 + C32540 * C876) * C3448 +
            (C6132 * C873 + C32540 * C885) * C32886 +
            (C6132 * C1582 + C32540 * C1585) * C3449 +
            (C6132 * C1588 + C32540 * C1591) * C32731) *
               C32926) *
              C32603 * C32589 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C6132 * C119 + C32540 * C126) * C3448 +
            (C6132 * C131 + C32540 * C140) * C32886 + C7046 * C3449 +
            C7047 * C32731) *
               C7665 +
           (C9703 + C9704 + C9705 + C9706) * C7666 + C9723 * C7667 +
           C9724 * C32926) *
              C32603 * C209 -
          ((C9715 + C9716 + C9717 + C9718) * C32926 +
           (C9714 + C9713 + C9712 + C9711) * C7667 +
           (C9710 + C9709 + C9708 + C9707) * C7666 +
           (C9706 + C9705 + C9704 + C9703) * C7665) *
              C32603 * C210 +
          (C9723 * C7665 + C9724 * C7666 +
           (C9718 + C9717 + C9716 + C9715) * C7667 +
           (C6233 * C3448 + C6232 * C32886 +
            (C6132 * C6606 + C32540 * C6607) * C3449 +
            (C6132 * C6608 + C32540 * C6609) * C32731) *
               C32926) *
              C32603 * C211) *
         C32577) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C6132 * C119 + C32540 * C126) * C3448 +
            (C6132 * C131 + C32540 * C140) * C32886 + C7046 * C3449 +
            C7047 * C32731) *
               C7665 +
           (C9703 + C9704 + C9705 + C9706) * C7666 + C9723 * C7667 +
           C9724 * C32926) *
              C315 -
          ((C6892 * C32731 + C6893 * C3449 + C6629 * C32886 + C6630 * C3448) *
               C32926 +
           (C6891 * C32731 + C6890 * C3449 + C6631 * C32886 + C6632 * C3448) *
               C7667 +
           (C6888 * C32731 + C6887 * C3449 + C6633 * C32886 + C6634 * C3448) *
               C7666 +
           (C7049 * C32731 + C7048 * C3449 + C7047 * C32886 + C7046 * C3448) *
               C7665) *
              C316 +
          ((C7048 * C3448 + C7049 * C32886 + C7055 * C3449 + C7054 * C32731) *
               C7665 +
           (C6887 * C3448 + C6888 * C32886 + C7053 * C3449 + C7052 * C32731) *
               C7666 +
           (C6890 * C3448 + C6891 * C32886 + C7051 * C3449 + C7050 * C32731) *
               C7667 +
           (C6893 * C3448 + C6892 * C32886 +
            (C6132 * C7549 + C32540 * C7550) * C3449 +
            (C6132 * C7551 + C32540 * C7552) * C32731) *
               C32926) *
              C317) *
         C32589 * C32577) /
            (p * q * std::sqrt(p + q));
    d2ee[108] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C754 * C119 + C748 * C126 + C755 * C120 + C749 * C127 +
              C756 * C121 + C32905 * C128) *
                 C3448 +
             (C754 * C131 + C748 * C140 + C755 * C132 + C749 * C141 +
              C756 * C133 + C32905 * C142) *
                 C32886 +
             (C2025 + C2026 + C2027) * C3449 +
             (C2028 + C2029 + C2030) * C32731) *
                C32885 +
            ((C928 + C929 + C930) * C3448 + (C931 + C932 + C933) * C32886 +
             (C1628 + C1627 + C1626) * C3449 +
             (C1625 + C1624 + C1623) * C32731) *
                C32691) *
               C530 -
           (((C2558 + C2557 + C2556) * C32731 +
             (C2555 + C2554 + C2553) * C3449 +
             (C1623 + C1624 + C1625) * C32886 +
             (C1626 + C1627 + C1628) * C3448) *
                C32691 +
            ((C2036 + C2035 + C2034) * C32731 +
             (C2033 + C2032 + C2031) * C3449 +
             (C2030 + C2029 + C2028) * C32886 +
             (C2027 + C2026 + C2025) * C3448) *
                C32885) *
               C531) *
              C32589 * C442 +
          ((((C2371 + C2372 + C2373) * C3448 +
             (C2374 + C2375 + C2376) * C32886 +
             (C2377 + C2378 + C2379) * C3449 +
             (C2380 + C2381 + C2382) * C32731) *
                C32885 +
            ((C4753 + C4754 + C4755) * C3448 +
             (C4756 + C4757 + C4758) * C32886 +
             (C754 * C1066 + C748 * C1078 + C755 * C1067 + C749 * C1079 +
              C756 * C2192 + C32905 * C2193) *
                 C3449 +
             (C754 * C1081 + C748 * C1093 + C755 * C1082 + C749 * C1094 +
              C756 * C2194 + C32905 * C2195) *
                 C32731) *
                C32691) *
               C531 -
           (((C4758 + C4757 + C4756) * C32731 +
             (C4755 + C4754 + C4753) * C3449 +
             (C1278 + C1277 + C1276) * C32886 +
             (C1275 + C1274 + C1273) * C3448) *
                C32691 +
            ((C2376 + C2375 + C2374) * C32731 +
             (C2373 + C2372 + C2371) * C3449 +
             (C756 * C134 + C32905 * C143 + C755 * C133 + C749 * C142 +
              C754 * C132 + C748 * C141) *
                 C32886 +
             (C756 * C122 + C32905 * C129 + C755 * C121 + C749 * C128 +
              C754 * C120 + C748 * C127) *
                 C3448) *
                C32885) *
               C530) *
              C32589 * C443)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C6132 * C119 + C32540 * C126) * C3448 +
             (C6132 * C131 + C32540 * C140) * C32886 + C7046 * C3449 +
             C7047 * C32731) *
                C7665 +
            (C9703 + C9704 + C9705 + C9706) * C7666 + C9723 * C7667 +
            C9724 * C32926) *
               C530 -
           ((C6892 * C32731 + C6893 * C3449 + C6629 * C32886 + C6630 * C3448) *
                C32926 +
            (C6891 * C32731 + C6890 * C3449 + C6631 * C32886 + C6632 * C3448) *
                C7667 +
            (C6888 * C32731 + C6887 * C3449 + C6633 * C32886 + C6634 * C3448) *
                C7666 +
            (C7049 * C32731 + C7048 * C3449 + C7047 * C32886 + C7046 * C3448) *
                C7665) *
               C531) *
              C32589 * C442 +
          (((C7400 * C3448 + C7401 * C32886 + C7402 * C3449 + C7403 * C32731) *
                C7665 +
            (C7226 * C3448 + C7227 * C32886 + C7228 * C3449 + C7229 * C32731) *
                C7666 +
            (C7230 * C3448 + C7231 * C32886 + C7232 * C3449 + C7233 * C32731) *
                C7667 +
            (C9967 * C3448 + C9968 * C32886 +
             (C6132 * C7201 + C32540 * C7202) * C3449 +
             (C6132 * C7203 + C32540 * C7204) * C32731) *
                C32926) *
               C531 -
           ((C9970 + C9969 + C9962 + C9961) * C32926 +
            (C9960 + C9959 + C9958 + C9957) * C7667 +
            (C9956 + C9955 + C9954 + C9953) * C7666 +
            (C7401 * C32731 + C7400 * C3449 +
             (C6132 * C132 + C32540 * C141) * C32886 +
             (C6132 * C120 + C32540 * C127) * C3448) *
                C7665) *
               C530) *
              C32589 * C443)) /
            (p * q * std::sqrt(p + q));
    d2ee[109] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C754 * C119 + C748 * C126 + C755 * C120 + C749 * C127 +
             C756 * C121 + C32905 * C128) *
                C3448 +
            (C754 * C131 + C748 * C140 + C755 * C132 + C749 * C141 +
             C756 * C133 + C32905 * C142) *
                C32886 +
            (C2025 + C2026 + C2027) * C3449 +
            (C2028 + C2029 + C2030) * C32731) *
               C32885 +
           ((C928 + C929 + C930) * C3448 + (C931 + C932 + C933) * C32886 +
            (C1628 + C1627 + C1626) * C3449 +
            (C1625 + C1624 + C1623) * C32731) *
               C32691) *
              C32603 * C32589 * C110 -
          (((C756 * C631 + C32905 * C636 + C755 * C630 + C749 * C635 +
             C754 * C629 + C748 * C634) *
                C32731 +
            (C756 * C621 + C32905 * C626 + C755 * C620 + C749 * C625 +
             C754 * C619 + C748 * C624) *
                C3449 +
            (C1278 + C1277 + C1276) * C32886 +
            (C1275 + C1274 + C1273) * C3448) *
               C32691 +
           ((C2376 + C2375 + C2374) * C32731 + (C2373 + C2372 + C2371) * C3449 +
            (C756 * C134 + C32905 * C143 + C755 * C133 + C749 * C142 +
             C754 * C132 + C748 * C141) *
                C32886 +
            (C756 * C122 + C32905 * C129 + C755 * C121 + C749 * C128 +
             C754 * C120 + C748 * C127) *
                C3448) *
               C32885) *
              C32603 * C32589 * C111 +
          (((C754 * C121 + C748 * C128 + C755 * C122 + C749 * C129 +
             C756 * C123 + C32905 * C130) *
                C3448 +
            (C754 * C133 + C748 * C142 + C755 * C134 + C749 * C143 +
             C756 * C135 + C32905 * C144) *
                C32886 +
            (C754 * C320 + C748 * C335 + C755 * C319 + C749 * C334 +
             C756 * C318 + C32905 * C333) *
                C3449 +
            (C754 * C330 + C748 * C350 + C755 * C329 + C749 * C349 +
             C756 * C328 + C32905 * C348) *
                C32731) *
               C32885 +
           ((C754 * C215 + C748 * C230 + C755 * C214 + C749 * C229 +
             C756 * C213 + C32905 * C228) *
                C3448 +
            (C754 * C225 + C748 * C245 + C755 * C224 + C749 * C244 +
             C756 * C223 + C32905 * C243) *
                C32886 +
            (C754 * C620 + C748 * C625 + C755 * C621 + C749 * C626 +
             C756 * C622 + C32905 * C627) *
                C3449 +
            (C754 * C630 + C748 * C635 + C755 * C631 + C749 * C636 +
             C756 * C632 + C32905 * C637) *
                C32731) *
               C32691) *
              C32603 * C32589 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C754 * C119 + C748 * C126 + C755 * C120 + C749 * C127 +
             C756 * C121 + C32905 * C128) *
                C3448 +
            (C754 * C131 + C748 * C140 + C755 * C132 + C749 * C141 +
             C756 * C133 + C32905 * C142) *
                C32886 +
            (C2025 + C2026 + C2027) * C3449 +
            (C2028 + C2029 + C2030) * C32731) *
               C32885 +
           ((C928 + C929 + C930) * C3448 + (C931 + C932 + C933) * C32886 +
            (C1628 + C1627 + C1626) * C3449 +
            (C1625 + C1624 + C1623) * C32731) *
               C32691) *
              C32603 * C209 -
          (((C1617 + C1618 + C1619) * C32731 + (C1620 + C1621 + C1622) * C3449 +
            (C939 + C938 + C937) * C32886 + (C936 + C935 + C934) * C3448) *
               C32691 +
           ((C1623 + C1624 + C1625) * C32731 + (C1626 + C1627 + C1628) * C3449 +
            (C933 + C932 + C931) * C32886 + (C930 + C929 + C928) * C3448) *
               C32885) *
              C32603 * C210 +
          ((C948 * C3448 + C949 * C32886 + (C1622 + C1621 + C1620) * C3449 +
            (C1619 + C1618 + C1617) * C32731) *
               C32885 +
           ((C945 + C944 + C943) * C3448 + (C942 + C941 + C940) * C32886 +
            (C754 * C1580 + C748 * C1583 + C755 * C1581 + C749 * C1584 +
             C756 * C1582 + C32905 * C1585) *
                C3449 +
            (C754 * C1586 + C748 * C1589 + C755 * C1587 + C749 * C1590 +
             C756 * C1588 + C32905 * C1591) *
                C32731) *
               C32691) *
              C32603 * C211) *
         C32577) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C6132 * C119 + C32540 * C126) * C3448 +
            (C6132 * C131 + C32540 * C140) * C32886 + C7046 * C3449 +
            C7047 * C32731) *
               C7665 +
           (C6224 * C3448 + C6225 * C32886 + C6634 * C3449 + C6633 * C32731) *
               C7666 +
           (C6226 * C3448 + C6227 * C32886 + C6632 * C3449 + C6631 * C32731) *
               C7667 +
           (C6228 * C3448 + C6229 * C32886 + C6630 * C3449 + C6629 * C32731) *
               C32926) *
              C32603 * C32589 * C110 -
          (((C6132 * C1587 + C32540 * C1590) * C32731 +
            (C6132 * C1581 + C32540 * C1584) * C3449 + C6428 * C32886 +
            C6427 * C3448) *
               C32926 +
           (C7231 * C32731 + C7230 * C3449 + C6426 * C32886 + C6425 * C3448) *
               C7667 +
           (C7227 * C32731 + C7226 * C3449 + C6424 * C32886 + C6423 * C3448) *
               C7666 +
           (C7401 * C32731 + C7400 * C3449 +
            (C6132 * C132 + C32540 * C141) * C32886 +
            (C6132 * C120 + C32540 * C127) * C3448) *
               C7665) *
              C32603 * C32589 * C111 +
          (((C6132 * C121 + C32540 * C128) * C3448 +
            (C6132 * C133 + C32540 * C142) * C32886 +
            (C6132 * C320 + C32540 * C335) * C3449 +
            (C6132 * C330 + C32540 * C350) * C32731) *
               C7665 +
           ((C6132 * C215 + C32540 * C230) * C3448 +
            (C6132 * C225 + C32540 * C245) * C32886 +
            (C6132 * C620 + C32540 * C625) * C3449 +
            (C6132 * C630 + C32540 * C635) * C32731) *
               C7666 +
           ((C6132 * C220 + C32540 * C235) * C3448 +
            (C6132 * C240 + C32540 * C250) * C32886 +
            (C6132 * C1062 + C32540 * C1074) * C3449 +
            (C6132 * C1071 + C32540 * C1089) * C32731) *
               C7667 +
           ((C6132 * C867 + C32540 * C876) * C3448 +
            (C6132 * C873 + C32540 * C885) * C32886 +
            (C6132 * C1582 + C32540 * C1585) * C3449 +
            (C6132 * C1588 + C32540 * C1591) * C32731) *
               C32926) *
              C32603 * C32589 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C6132 * C119 + C32540 * C126) * C3448 +
            (C6132 * C131 + C32540 * C140) * C32886 + C7046 * C3449 +
            C7047 * C32731) *
               C7665 +
           (C9703 + C9704 + C9705 + C9706) * C7666 + C9723 * C7667 +
           C9724 * C32926) *
              C32603 * C209 -
          ((C9715 + C9716 + C9717 + C9718) * C32926 +
           (C9714 + C9713 + C9712 + C9711) * C7667 +
           (C9710 + C9709 + C9708 + C9707) * C7666 +
           (C9706 + C9705 + C9704 + C9703) * C7665) *
              C32603 * C210 +
          (C9723 * C7665 + C9724 * C7666 +
           (C9718 + C9717 + C9716 + C9715) * C7667 +
           (C6233 * C3448 + C6232 * C32886 +
            (C6132 * C6606 + C32540 * C6607) * C3449 +
            (C6132 * C6608 + C32540 * C6609) * C32731) *
               C32926) *
              C32603 * C211) *
         C32577) /
            (p * q * std::sqrt(p + q));
    d2ee[110] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C754 * C119 + C748 * C126 + C755 * C120 + C749 * C127 +
              C756 * C121 + C32905 * C128) *
                 C118 +
             (C754 * C131 + C748 * C140 + C755 * C132 + C749 * C141 +
              C756 * C133 + C32905 * C142) *
                 C32644) *
                C32951 +
            ((C928 + C929 + C930) * C118 + (C931 + C932 + C933) * C32644) *
                C32939 +
            C952 * C32916) *
               C32603 * C440 -
           (((C940 + C941 + C942) * C32644 + (C943 + C944 + C945) * C118) *
                C32916 +
            ((C939 + C938 + C937) * C32644 + (C936 + C935 + C934) * C118) *
                C32939 +
            ((C933 + C932 + C931) * C32644 + (C930 + C929 + C928) * C118) *
                C32951) *
               C32603 * C441) *
              C442 +
          ((((C1273 + C1274 + C1275) * C118 +
             (C1276 + C1277 + C1278) * C32644) *
                C32951 +
            ((C1279 + C1280 + C1281) * C118 +
             (C1282 + C1283 + C1284) * C32644) *
                C32939 +
            ((C754 * C868 + C748 * C877 + C755 * C867 + C749 * C876 +
              C756 * C1244 + C32905 * C1245) *
                 C118 +
             (C754 * C874 + C748 * C886 + C755 * C873 + C749 * C885 +
              C756 * C1246 + C32905 * C1247) *
                 C32644) *
                C32916) *
               C32603 * C441 -
           (((C1284 + C1283 + C1282) * C32644 +
             (C1281 + C1280 + C1279) * C118) *
                C32916 +
            ((C1278 + C1277 + C1276) * C32644 +
             (C1275 + C1274 + C1273) * C118) *
                C32939 +
            ((C756 * C134 + C32905 * C143 + C755 * C133 + C749 * C142 +
              C754 * C132 + C748 * C141) *
                 C32644 +
             (C756 * C122 + C32905 * C129 + C755 * C121 + C749 * C128 +
              C754 * C120 + C748 * C127) *
                 C118) *
                C32951) *
               C32603 * C440) *
              C443)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C127 +
             C115 * C121 + C103 * C128 + C116 * C122 + C104 * C129 +
             C117 * C123 + C105 * C130) *
                C118 +
            (C113 * C131 + C101 * C140 + C114 * C132 + C102 * C141 +
             C115 * C133 + C103 * C142 + C116 * C134 + C104 * C143 +
             C117 * C135 + C105 * C144) *
                C32644) *
               C32633 * C32603 * C440 -
           ((C117 * C223 + C105 * C243 + C116 * C224 + C104 * C244 +
             C115 * C225 + C103 * C245 + C114 * C226 + C102 * C246 +
             C113 * C227 + C101 * C247) *
                C32644 +
            (C117 * C213 + C105 * C228 + C116 * C214 + C104 * C229 +
             C115 * C215 + C103 * C230 + C114 * C216 + C102 * C231 +
             C113 * C217 + C101 * C232) *
                C118) *
               C32633 * C32603 * C441) *
              C442 +
          (((C113 * C216 + C101 * C231 + C114 * C215 + C102 * C230 +
             C115 * C214 + C103 * C229 + C116 * C213 + C104 * C228 +
             C117 * C444 + C105 * C445) *
                C118 +
            (C113 * C226 + C101 * C246 + C114 * C225 + C102 * C245 +
             C115 * C224 + C103 * C244 + C116 * C223 + C104 * C243 +
             C117 * C446 + C105 * C447) *
                C32644) *
               C32633 * C32603 * C441 -
           ((C117 * C136 + C105 * C145 + C116 * C135 + C104 * C144 +
             C115 * C134 + C103 * C143 + C114 * C133 + C102 * C142 +
             C113 * C132 + C101 * C141) *
                C32644 +
            (C117 * C124 + C105 * C137 + C116 * C123 + C104 * C130 +
             C115 * C122 + C103 * C129 + C114 * C121 + C102 * C128 +
             C113 * C120 + C101 * C127) *
                C118) *
               C32633 * C32603 * C440) *
              C443)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C754 * C119 + C748 * C126 + C755 * C120 + C749 * C127 +
             C756 * C121 + C32905 * C128) *
                C1741 +
            (C754 * C131 + C748 * C140 + C755 * C132 + C749 * C141 +
             C756 * C133 + C32905 * C142) *
                C32952 +
            (C2025 + C2026 + C2027) * C1742 + (C2028 + C2029 + C2030) * C32941 +
            C2045 * C1743 + C2046 * C32919) *
               C32633 * C32603 * C440 -
           ((C756 * C1082 + C32905 * C1094 + C755 * C1081 + C749 * C1093 +
             C754 * C1080 + C748 * C1092) *
                C32919 +
            (C756 * C1067 + C32905 * C1079 + C755 * C1066 + C749 * C1078 +
             C754 * C1065 + C748 * C1077) *
                C1743 +
            (C1623 + C1624 + C1625) * C32941 + (C1626 + C1627 + C1628) * C1742 +
            (C933 + C932 + C931) * C32952 + (C930 + C929 + C928) * C1741) *
               C32633 * C32603 * C441) *
              C442 +
          (((C1273 + C1274 + C1275) * C1741 + (C1276 + C1277 + C1278) * C32952 +
            (C754 * C619 + C748 * C624 + C755 * C620 + C749 * C625 +
             C756 * C621 + C32905 * C626) *
                C1742 +
            (C754 * C629 + C748 * C634 + C755 * C630 + C749 * C635 +
             C756 * C631 + C32905 * C636) *
                C32941 +
            (C754 * C1066 + C748 * C1078 + C755 * C1067 + C749 * C1079 +
             C756 * C2192 + C32905 * C2193) *
                C1743 +
            (C754 * C1081 + C748 * C1093 + C755 * C1082 + C749 * C1094 +
             C756 * C2194 + C32905 * C2195) *
                C32919) *
               C32633 * C32603 * C441 -
           ((C756 * C346 + C32905 * C356 + C755 * C345 + C749 * C355 +
             C754 * C344 + C748 * C354) *
                C32919 +
            (C756 * C326 + C32905 * C341 + C755 * C325 + C749 * C340 +
             C754 * C324 + C748 * C339) *
                C1743 +
            (C756 * C329 + C32905 * C349 + C755 * C330 + C749 * C350 +
             C754 * C331 + C748 * C351) *
                C32941 +
            (C756 * C319 + C32905 * C334 + C755 * C320 + C749 * C335 +
             C754 * C321 + C748 * C336) *
                C1742 +
            (C756 * C134 + C32905 * C143 + C755 * C133 + C749 * C142 +
             C754 * C132 + C748 * C141) *
                C32952 +
            (C756 * C122 + C32905 * C129 + C755 * C121 + C749 * C128 +
             C754 * C120 + C748 * C127) *
                C1741) *
               C32633 * C32603 * C440) *
              C443)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C5270 * C119 + C32948 * C126 + C5271 * C120 + C32935 * C127 +
              C5272 * C121 + C32905 * C128) *
                 C118 +
             (C5270 * C131 + C32948 * C140 + C5271 * C132 + C32935 * C141 +
              C5272 * C133 + C32905 * C142) *
                 C32644) *
                C5267 +
            ((C5420 + C5421 + C5422) * C118 +
             (C5423 + C5424 + C5425) * C32644) *
                C5268 +
            C5444 * C32916) *
               C32603 * C440 -
           (((C5432 + C5433 + C5434) * C32644 +
             (C5435 + C5436 + C5437) * C118) *
                C32916 +
            ((C5431 + C5430 + C5429) * C32644 +
             (C5428 + C5427 + C5426) * C118) *
                C5268 +
            ((C5425 + C5424 + C5423) * C32644 +
             (C5422 + C5421 + C5420) * C118) *
                C5267) *
               C32603 * C441) *
              C442 +
          ((((C5725 + C5726 + C5727) * C118 +
             (C5728 + C5729 + C5730) * C32644) *
                C5267 +
            ((C5731 + C5732 + C5733) * C118 +
             (C5734 + C5735 + C5736) * C32644) *
                C5268 +
            ((C5270 * C868 + C32948 * C877 + C5271 * C867 + C32935 * C876 +
              C5272 * C1244 + C32905 * C1245) *
                 C118 +
             (C5270 * C874 + C32948 * C886 + C5271 * C873 + C32935 * C885 +
              C5272 * C1246 + C32905 * C1247) *
                 C32644) *
                C32916) *
               C32603 * C441 -
           (((C5736 + C5735 + C5734) * C32644 +
             (C5733 + C5732 + C5731) * C118) *
                C32916 +
            ((C5730 + C5729 + C5728) * C32644 +
             (C5727 + C5726 + C5725) * C118) *
                C5268 +
            ((C5272 * C134 + C32905 * C143 + C5271 * C133 + C32935 * C142 +
              C5270 * C132 + C32948 * C141) *
                 C32644 +
             (C5272 * C122 + C32905 * C129 + C5271 * C121 + C32935 * C128 +
              C5270 * C120 + C32948 * C127) *
                 C118) *
                C5267) *
               C32603 * C440) *
              C443)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C6132 * C119 + C32540 * C126) * C118 +
             (C6132 * C131 + C32540 * C140) * C32644) *
                C6127 +
            (C6234 + C6235) * C6128 + C6244 * C6129 + C6245 * C6130 +
            C6246 * C6131) *
               C32603 * C440 -
           ((C6242 + C6243) * C6131 + (C6241 + C6240) * C6130 +
            (C6239 + C6238) * C6129 + (C6237 + C6236) * C6128 +
            (C6235 + C6234) * C6127) *
               C32603 * C441) *
              C442 +
          (((C6431 + C6432) * C6127 + (C6433 + C6434) * C6128 +
            (C6435 + C6436) * C6129 + (C6437 + C6438) * C6130 +
            ((C6132 * C6402 + C32540 * C6403) * C118 +
             (C6132 * C6404 + C32540 * C6405) * C32644) *
                C6131) *
               C32603 * C441 -
           ((C6438 + C6437) * C6131 + (C6436 + C6435) * C6130 +
            (C6434 + C6433) * C6129 + (C6432 + C6431) * C6128 +
            ((C6132 * C132 + C32540 * C141) * C32644 +
             (C6132 * C120 + C32540 * C127) * C118) *
                C6127) *
               C32603 * C440) *
              C443)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C6132 * C119 + C32540 * C126) * C1741 +
             (C6132 * C131 + C32540 * C140) * C32952 + C7046 * C1742 +
             C7047 * C32941 + C7048 * C1743 + C7049 * C32919) *
                C5267 +
            (C6863 + C6864 + C6865 + C6866 + C6894 + C6895) * C5268 +
            C6903 * C32916) *
               C32603 * C440 -
           ((C6899 + C6900 + C6883 + C6884 + C6885 + C6886) * C32916 +
            (C6898 + C6897 + C6874 + C6873 + C6872 + C6871) * C5268 +
            (C6895 + C6894 + C6866 + C6865 + C6864 + C6863) * C5267) *
               C32603 * C441) *
              C442 +
          (((C7206 + C7207 + C7234 + C7235 + C7236 + C7237) * C5267 +
            (C7216 + C7217 + C7238 + C7239 + C7240 + C7241) * C5268 +
            (C6427 * C1741 + C6428 * C32952 +
             (C6132 * C1581 + C32540 * C1584) * C1742 +
             (C6132 * C1587 + C32540 * C1590) * C32941 +
             (C6132 * C7201 + C32540 * C7202) * C1743 +
             (C6132 * C7203 + C32540 * C7204) * C32919) *
                C32916) *
               C32603 * C441 -
           ((C7241 + C7240 + C7239 + C7238 + C7217 + C7216) * C32916 +
            (C7237 + C7236 + C7235 + C7234 + C7207 + C7206) * C5268 +
            ((C6132 * C344 + C32540 * C354) * C32919 +
             (C6132 * C324 + C32540 * C339) * C1743 +
             (C6132 * C331 + C32540 * C351) * C32941 +
             (C6132 * C321 + C32540 * C336) * C1742 +
             (C6132 * C132 + C32540 * C141) * C32952 +
             (C6132 * C120 + C32540 * C127) * C1741) *
                C5267) *
               C32603 * C440) *
              C443)) /
            (p * q * std::sqrt(p + q));
    d2ee[111] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C754 * C119 + C748 * C126 + C755 * C120 + C749 * C127 +
              C756 * C121 + C32905 * C128) *
                 C118 +
             (C754 * C131 + C748 * C140 + C755 * C132 + C749 * C141 +
              C756 * C133 + C32905 * C142) *
                 C32644) *
                C32951 +
            ((C928 + C929 + C930) * C118 + (C931 + C932 + C933) * C32644) *
                C32939 +
            C952 * C32916) *
               C530 -
           (((C1617 + C1618 + C1619) * C32644 +
             (C1620 + C1621 + C1622) * C118) *
                C32916 +
            ((C1623 + C1624 + C1625) * C32644 +
             (C1626 + C1627 + C1628) * C118) *
                C32939 +
            ((C756 * C330 + C32905 * C350 + C755 * C331 + C749 * C351 +
              C754 * C332 + C748 * C352) *
                 C32644 +
             (C756 * C320 + C32905 * C335 + C755 * C321 + C749 * C336 +
              C754 * C322 + C748 * C337) *
                 C118) *
                C32951) *
               C531) *
              C440 +
          ((((C1628 + C1627 + C1626) * C118 +
             (C1625 + C1624 + C1623) * C32644) *
                C32951 +
            ((C1622 + C1621 + C1620) * C118 +
             (C1619 + C1618 + C1617) * C32644) *
                C32939 +
            ((C754 * C1580 + C748 * C1583 + C755 * C1581 + C749 * C1584 +
              C756 * C1582 + C32905 * C1585) *
                 C118 +
             (C754 * C1586 + C748 * C1589 + C755 * C1587 + C749 * C1590 +
              C756 * C1588 + C32905 * C1591) *
                 C32644) *
                C32916) *
               C531 -
           (((C940 + C941 + C942) * C32644 + (C943 + C944 + C945) * C118) *
                C32916 +
            ((C939 + C938 + C937) * C32644 + (C936 + C935 + C934) * C118) *
                C32939 +
            ((C933 + C932 + C931) * C32644 + (C930 + C929 + C928) * C118) *
                C32951) *
               C530) *
              C441) *
         C32577) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C127 +
             C115 * C121 + C103 * C128 + C116 * C122 + C104 * C129 +
             C117 * C123 + C105 * C130) *
                C118 +
            (C113 * C131 + C101 * C140 + C114 * C132 + C102 * C141 +
             C115 * C133 + C103 * C142 + C116 * C134 + C104 * C143 +
             C117 * C135 + C105 * C144) *
                C32644) *
               C32633 * C530 -
           ((C117 * C328 + C105 * C348 + C116 * C329 + C104 * C349 +
             C115 * C330 + C103 * C350 + C114 * C331 + C102 * C351 +
             C113 * C332 + C101 * C352) *
                C32644 +
            (C117 * C318 + C105 * C333 + C116 * C319 + C104 * C334 +
             C115 * C320 + C103 * C335 + C114 * C321 + C102 * C336 +
             C113 * C322 + C101 * C337) *
                C118) *
               C32633 * C531) *
              C440 +
          (((C113 * C618 + C101 * C623 + C114 * C619 + C102 * C624 +
             C115 * C620 + C103 * C625 + C116 * C621 + C104 * C626 +
             C117 * C622 + C105 * C627) *
                C118 +
            (C113 * C628 + C101 * C633 + C114 * C629 + C102 * C634 +
             C115 * C630 + C103 * C635 + C116 * C631 + C104 * C636 +
             C117 * C632 + C105 * C637) *
                C32644) *
               C32633 * C531 -
           ((C117 * C223 + C105 * C243 + C116 * C224 + C104 * C244 +
             C115 * C225 + C103 * C245 + C114 * C226 + C102 * C246 +
             C113 * C227 + C101 * C247) *
                C32644 +
            (C117 * C213 + C105 * C228 + C116 * C214 + C104 * C229 +
             C115 * C215 + C103 * C230 + C114 * C216 + C102 * C231 +
             C113 * C217 + C101 * C232) *
                C118) *
               C32633 * C530) *
              C441) *
         C32577) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C754 * C119 + C748 * C126 + C755 * C120 + C749 * C127 +
             C756 * C121 + C32905 * C128) *
                C1741 +
            (C754 * C131 + C748 * C140 + C755 * C132 + C749 * C141 +
             C756 * C133 + C32905 * C142) *
                C32952 +
            (C2025 + C2026 + C2027) * C1742 + (C2028 + C2029 + C2030) * C32941 +
            C2045 * C1743 + C2046 * C32919) *
               C32633 * C530 -
           ((C2037 + C2038 + C2039) * C32919 + (C2040 + C2041 + C2042) * C1743 +
            (C2036 + C2035 + C2034) * C32941 + (C2033 + C2032 + C2031) * C1742 +
            (C2030 + C2029 + C2028) * C32952 +
            (C2027 + C2026 + C2025) * C1741) *
               C32633 * C531) *
              C440 +
          (((C1628 + C1627 + C1626) * C1741 + (C1625 + C1624 + C1623) * C32952 +
            (C2553 + C2554 + C2555) * C1742 + (C2556 + C2557 + C2558) * C32941 +
            (C754 * C2528 + C748 * C2531 + C755 * C2529 + C749 * C2532 +
             C756 * C2530 + C32905 * C2533) *
                C1743 +
            (C754 * C2534 + C748 * C2537 + C755 * C2535 + C749 * C2538 +
             C756 * C2536 + C32905 * C2539) *
                C32919) *
               C32633 * C531 -
           ((C2558 + C2557 + C2556) * C32919 + (C2555 + C2554 + C2553) * C1743 +
            (C1623 + C1624 + C1625) * C32941 + (C1626 + C1627 + C1628) * C1742 +
            (C933 + C932 + C931) * C32952 + (C930 + C929 + C928) * C1741) *
               C32633 * C530) *
              C441) *
         C32577) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C5270 * C119 + C32948 * C126 + C5271 * C120 + C32935 * C127 +
              C5272 * C121 + C32905 * C128) *
                 C118 +
             (C5270 * C131 + C32948 * C140 + C5271 * C132 + C32935 * C141 +
              C5272 * C133 + C32905 * C142) *
                 C32644) *
                C5267 +
            ((C5420 + C5421 + C5422) * C118 +
             (C5423 + C5424 + C5425) * C32644) *
                C5268 +
            C5444 * C32916) *
               C530 -
           (((C6053 + C6054 + C6055) * C32644 +
             (C6056 + C6057 + C6058) * C118) *
                C32916 +
            ((C6059 + C6060 + C6061) * C32644 +
             (C6062 + C6063 + C6064) * C118) *
                C5268 +
            ((C5272 * C330 + C32905 * C350 + C5271 * C331 + C32935 * C351 +
              C5270 * C332 + C32948 * C352) *
                 C32644 +
             (C5272 * C320 + C32905 * C335 + C5271 * C321 + C32935 * C336 +
              C5270 * C322 + C32948 * C337) *
                 C118) *
                C5267) *
               C531) *
              C440 +
          ((((C6064 + C6063 + C6062) * C118 +
             (C6061 + C6060 + C6059) * C32644) *
                C5267 +
            ((C6058 + C6057 + C6056) * C118 +
             (C6055 + C6054 + C6053) * C32644) *
                C5268 +
            ((C5270 * C1580 + C32948 * C1583 + C5271 * C1581 + C32935 * C1584 +
              C5272 * C1582 + C32905 * C1585) *
                 C118 +
             (C5270 * C1586 + C32948 * C1589 + C5271 * C1587 + C32935 * C1590 +
              C5272 * C1588 + C32905 * C1591) *
                 C32644) *
                C32916) *
               C531 -
           (((C5432 + C5433 + C5434) * C32644 +
             (C5435 + C5436 + C5437) * C118) *
                C32916 +
            ((C5431 + C5430 + C5429) * C32644 +
             (C5428 + C5427 + C5426) * C118) *
                C5268 +
            ((C5425 + C5424 + C5423) * C32644 +
             (C5422 + C5421 + C5420) * C118) *
                C5267) *
               C530) *
              C441) *
         C32577) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C6132 * C119 + C32540 * C126) * C118 +
             (C6132 * C131 + C32540 * C140) * C32644) *
                C6127 +
            (C6234 + C6235) * C6128 + C6244 * C6129 + C6245 * C6130 +
            C6246 * C6131) *
               C530 -
           ((C6635 + C6636) * C6131 + (C6637 + C6638) * C6130 +
            (C6639 + C6640) * C6129 + (C6641 + C6642) * C6128 +
            ((C6132 * C332 + C32540 * C352) * C32644 +
             (C6132 * C322 + C32540 * C337) * C118) *
                C6127) *
               C531) *
              C440 +
          (((C6642 + C6641) * C6127 + (C6640 + C6639) * C6128 +
            (C6638 + C6637) * C6129 + (C6636 + C6635) * C6130 +
            ((C6132 * C6606 + C32540 * C6607) * C118 +
             (C6132 * C6608 + C32540 * C6609) * C32644) *
                C6131) *
               C531 -
           ((C6242 + C6243) * C6131 + (C6241 + C6240) * C6130 +
            (C6239 + C6238) * C6129 + (C6237 + C6236) * C6128 +
            (C6235 + C6234) * C6127) *
               C530) *
              C441) *
         C32577) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C6132 * C119 + C32540 * C126) * C1741 +
             (C6132 * C131 + C32540 * C140) * C32952 + C7046 * C1742 +
             C7047 * C32941 + C7048 * C1743 + C7049 * C32919) *
                C5267 +
            (C6863 + C6864 + C6865 + C6866 + C6894 + C6895) * C5268 +
            C6903 * C32916) *
               C530 -
           ((C7554 + C7555 + C7556 + C7557 + C7558 + C7559) * C32916 +
            (C7560 + C7561 + C7562 + C7563 + C7564 + C7565) * C5268 +
            (C7054 * C32919 + C7055 * C1743 + C7049 * C32941 + C7048 * C1742 +
             C7047 * C32952 + C7046 * C1741) *
                C5267) *
               C531) *
              C440 +
          (((C7565 + C7564 + C7563 + C7562 + C7561 + C7560) * C5267 +
            (C7559 + C7558 + C7557 + C7556 + C7555 + C7554) * C5268 +
            (C6630 * C1741 + C6629 * C32952 + C6893 * C1742 + C6892 * C32941 +
             (C6132 * C7549 + C32540 * C7550) * C1743 +
             (C6132 * C7551 + C32540 * C7552) * C32919) *
                C32916) *
               C531 -
           ((C6899 + C6900 + C6883 + C6884 + C6885 + C6886) * C32916 +
            (C6898 + C6897 + C6874 + C6873 + C6872 + C6871) * C5268 +
            (C6895 + C6894 + C6866 + C6865 + C6864 + C6863) * C5267) *
               C530) *
              C441) *
         C32577) /
            (p * q * std::sqrt(p + q));
    d2ee[112] +=
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             (((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C127 +
                C115 * C121 + C103 * C128 + C116 * C122 + C104 * C129 +
                C117 * C123 + C105 * C130) *
                   C118 +
               (C113 * C131 + C101 * C140 + C114 * C132 + C102 * C141 +
                C115 * C133 + C103 * C142 + C116 * C134 + C104 * C143 +
                C117 * C135 + C105 * C144) *
                   C32644) *
                  C32633 * C32603 * C32589 * C110 -
              ((C117 * C136 + C105 * C145 + C116 * C135 + C104 * C144 +
                C115 * C134 + C103 * C143 + C114 * C133 + C102 * C142 +
                C113 * C132 + C101 * C141) *
                   C32644 +
               (C117 * C124 + C105 * C137 + C116 * C123 + C104 * C130 +
                C115 * C122 + C103 * C129 + C114 * C121 + C102 * C128 +
                C113 * C120 + C101 * C127) *
                   C118) *
                  C32633 * C32603 * C32589 * C111 +
              ((C113 * C121 + C101 * C128 + C114 * C122 + C102 * C129 +
                C115 * C123 + C103 * C130 + C116 * C124 + C104 * C137 +
                C117 * C125 + C105 * C138) *
                   C118 +
               (C113 * C133 + C101 * C142 + C114 * C134 + C102 * C143 +
                C115 * C135 + C103 * C144 + C116 * C136 + C104 * C145 +
                C117 * C139 + C105 * C146) *
                   C32644) *
                  C32633 * C32603 * C32589 * C112) +
         std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             (((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C127 +
                C115 * C121 + C103 * C128 + C116 * C122 + C104 * C129 +
                C117 * C123 + C105 * C130) *
                   C118 +
               (C113 * C131 + C101 * C140 + C114 * C132 + C102 * C141 +
                C115 * C133 + C103 * C142 + C116 * C134 + C104 * C143 +
                C117 * C135 + C105 * C144) *
                   C32644) *
                  C32633 * C32603 * C209 -
              ((C117 * C223 + C105 * C243 + C116 * C224 + C104 * C244 +
                C115 * C225 + C103 * C245 + C114 * C226 + C102 * C246 +
                C113 * C227 + C101 * C247) *
                   C32644 +
               (C117 * C213 + C105 * C228 + C116 * C214 + C104 * C229 +
                C115 * C215 + C103 * C230 + C114 * C216 + C102 * C231 +
                C113 * C217 + C101 * C232) *
                   C118) *
                  C32633 * C32603 * C210 +
              ((C113 * C218 + C101 * C233 + C114 * C219 + C102 * C234 +
                C115 * C220 + C103 * C235 + C116 * C221 + C104 * C236 +
                C117 * C222 + C105 * C237) *
                   C118 +
               (C113 * C238 + C101 * C248 + C114 * C239 + C102 * C249 +
                C115 * C240 + C103 * C250 + C116 * C241 + C104 * C251 +
                C117 * C242 + C105 * C252) *
                   C32644) *
                  C32633 * C32603 * C211) *
             C32577) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C127 +
            C115 * C121 + C103 * C128 + C116 * C122 + C104 * C129 +
            C117 * C123 + C105 * C130) *
               C118 +
           (C113 * C131 + C101 * C140 + C114 * C132 + C102 * C141 +
            C115 * C133 + C103 * C142 + C116 * C134 + C104 * C143 +
            C117 * C135 + C105 * C144) *
               C32644) *
              C32633 * C315 -
          ((C117 * C328 + C105 * C348 + C116 * C329 + C104 * C349 +
            C115 * C330 + C103 * C350 + C114 * C331 + C102 * C351 +
            C113 * C332 + C101 * C352) *
               C32644 +
           (C117 * C318 + C105 * C333 + C116 * C319 + C104 * C334 +
            C115 * C320 + C103 * C335 + C114 * C321 + C102 * C336 +
            C113 * C322 + C101 * C337) *
               C118) *
              C32633 * C316 +
          ((C113 * C323 + C101 * C338 + C114 * C324 + C102 * C339 +
            C115 * C325 + C103 * C340 + C116 * C326 + C104 * C341 +
            C117 * C327 + C105 * C342) *
               C118 +
           (C113 * C343 + C101 * C353 + C114 * C344 + C102 * C354 +
            C115 * C345 + C103 * C355 + C116 * C346 + C104 * C356 +
            C117 * C347 + C105 * C357) *
               C32644) *
              C32633 * C317) *
         C32589 * C32577) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C754 * C119 + C748 * C126 + C755 * C120 + C749 * C127 +
             C756 * C121 + C32905 * C128) *
                C118 +
            (C754 * C131 + C748 * C140 + C755 * C132 + C749 * C141 +
             C756 * C133 + C32905 * C142) *
                C32644) *
               C32951 +
           ((C754 * C217 + C748 * C232 + C755 * C216 + C749 * C231 +
             C756 * C215 + C32905 * C230) *
                C118 +
            (C754 * C227 + C748 * C247 + C755 * C226 + C749 * C246 +
             C756 * C225 + C32905 * C245) *
                C32644) *
               C32939 +
           ((C754 * C218 + C748 * C233 + C755 * C219 + C749 * C234 +
             C756 * C220 + C32905 * C235) *
                C118 +
            (C754 * C238 + C748 * C248 + C755 * C239 + C749 * C249 +
             C756 * C240 + C32905 * C250) *
                C32644) *
               C32916) *
              C32603 * C32589 * C110 -
          (((C756 * C241 + C32905 * C251 + C755 * C240 + C749 * C250 +
             C754 * C239 + C748 * C249) *
                C32644 +
            (C756 * C221 + C32905 * C236 + C755 * C220 + C749 * C235 +
             C754 * C219 + C748 * C234) *
                C118) *
               C32916 +
           ((C756 * C224 + C32905 * C244 + C755 * C225 + C749 * C245 +
             C754 * C226 + C748 * C246) *
                C32644 +
            (C756 * C214 + C32905 * C229 + C755 * C215 + C749 * C230 +
             C754 * C216 + C748 * C231) *
                C118) *
               C32939 +
           ((C756 * C134 + C32905 * C143 + C755 * C133 + C749 * C142 +
             C754 * C132 + C748 * C141) *
                C32644 +
            (C756 * C122 + C32905 * C129 + C755 * C121 + C749 * C128 +
             C754 * C120 + C748 * C127) *
                C118) *
               C32951) *
              C32603 * C32589 * C111 +
          (((C754 * C121 + C748 * C128 + C755 * C122 + C749 * C129 +
             C756 * C123 + C32905 * C130) *
                C118 +
            (C754 * C133 + C748 * C142 + C755 * C134 + C749 * C143 +
             C756 * C135 + C32905 * C144) *
                C32644) *
               C32951 +
           ((C754 * C215 + C748 * C230 + C755 * C214 + C749 * C229 +
             C756 * C213 + C32905 * C228) *
                C118 +
            (C754 * C225 + C748 * C245 + C755 * C224 + C749 * C244 +
             C756 * C223 + C32905 * C243) *
                C32644) *
               C32939 +
           ((C754 * C220 + C748 * C235 + C755 * C221 + C749 * C236 +
             C756 * C222 + C32905 * C237) *
                C118 +
            (C754 * C240 + C748 * C250 + C755 * C241 + C749 * C251 +
             C756 * C242 + C32905 * C252) *
                C32644) *
               C32916) *
              C32603 * C32589 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C754 * C119 + C748 * C126 + C755 * C120 + C749 * C127 +
             C756 * C121 + C32905 * C128) *
                C118 +
            (C754 * C131 + C748 * C140 + C755 * C132 + C749 * C141 +
             C756 * C133 + C32905 * C142) *
                C32644) *
               C32951 +
           ((C928 + C929 + C930) * C118 + (C931 + C932 + C933) * C32644) *
               C32939 +
           C952 * C32916) *
              C32603 * C209 -
          (((C940 + C941 + C942) * C32644 + (C943 + C944 + C945) * C118) *
               C32916 +
           ((C939 + C938 + C937) * C32644 + (C936 + C935 + C934) * C118) *
               C32939 +
           ((C933 + C932 + C931) * C32644 + (C930 + C929 + C928) * C118) *
               C32951) *
              C32603 * C210 +
          (C952 * C32951 +
           ((C945 + C944 + C943) * C118 + (C942 + C941 + C940) * C32644) *
               C32939 +
           ((C754 * C870 + C748 * C879 + C755 * C871 + C749 * C880 +
             C756 * C872 + C32905 * C881) *
                C118 +
            (C754 * C882 + C748 * C888 + C755 * C883 + C749 * C889 +
             C756 * C884 + C32905 * C890) *
                C32644) *
               C32916) *
              C32603 * C211) *
         C32577) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C754 * C119 + C748 * C126 + C755 * C120 + C749 * C127 +
             C756 * C121 + C32905 * C128) *
                C118 +
            (C754 * C131 + C748 * C140 + C755 * C132 + C749 * C141 +
             C756 * C133 + C32905 * C142) *
                C32644) *
               C32951 +
           ((C928 + C929 + C930) * C118 + (C931 + C932 + C933) * C32644) *
               C32939 +
           C952 * C32916) *
              C315 -
          (((C756 * C1071 + C32905 * C1089 + C755 * C1072 + C749 * C1090 +
             C754 * C1073 + C748 * C1091) *
                C32644 +
            (C756 * C1062 + C32905 * C1074 + C755 * C1063 + C749 * C1075 +
             C754 * C1064 + C748 * C1076) *
                C118) *
               C32916 +
           ((C756 * C630 + C32905 * C635 + C755 * C629 + C749 * C634 +
             C754 * C628 + C748 * C633) *
                C32644 +
            (C756 * C620 + C32905 * C625 + C755 * C619 + C749 * C624 +
             C754 * C618 + C748 * C623) *
                C118) *
               C32939 +
           ((C756 * C330 + C32905 * C350 + C755 * C331 + C749 * C351 +
             C754 * C332 + C748 * C352) *
                C32644 +
            (C756 * C320 + C32905 * C335 + C755 * C321 + C749 * C336 +
             C754 * C322 + C748 * C337) *
                C118) *
               C32951) *
              C316 +
          (((C754 * C323 + C748 * C338 + C755 * C324 + C749 * C339 +
             C756 * C325 + C32905 * C340) *
                C118 +
            (C754 * C343 + C748 * C353 + C755 * C344 + C749 * C354 +
             C756 * C345 + C32905 * C355) *
                C32644) *
               C32951 +
           ((C754 * C1065 + C748 * C1077 + C755 * C1066 + C749 * C1078 +
             C756 * C1067 + C32905 * C1079) *
                C118 +
            (C754 * C1080 + C748 * C1092 + C755 * C1081 + C749 * C1093 +
             C756 * C1082 + C32905 * C1094) *
                C32644) *
               C32939 +
           ((C754 * C1068 + C748 * C1083 + C755 * C1069 + C749 * C1084 +
             C756 * C1070 + C32905 * C1085) *
                C118 +
            (C754 * C1086 + C748 * C1095 + C755 * C1087 + C749 * C1096 +
             C756 * C1088 + C32905 * C1097) *
                C32644) *
               C32916) *
              C317) *
         C32589 * C32577) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C754 * C119 + C748 * C126 + C755 * C120 + C749 * C127 +
            C756 * C121 + C32905 * C128) *
               C1741 +
           (C754 * C131 + C748 * C140 + C755 * C132 + C749 * C141 +
            C756 * C133 + C32905 * C142) *
               C32952 +
           (C754 * C322 + C748 * C337 + C755 * C321 + C749 * C336 +
            C756 * C320 + C32905 * C335) *
               C1742 +
           (C754 * C332 + C748 * C352 + C755 * C331 + C749 * C351 +
            C756 * C330 + C32905 * C350) *
               C32941 +
           (C754 * C323 + C748 * C338 + C755 * C324 + C749 * C339 +
            C756 * C325 + C32905 * C340) *
               C1743 +
           (C754 * C343 + C748 * C353 + C755 * C344 + C749 * C354 +
            C756 * C345 + C32905 * C355) *
               C32919) *
              C32633 * C32603 * C32589 * C110 -
          ((C756 * C346 + C32905 * C356 + C755 * C345 + C749 * C355 +
            C754 * C344 + C748 * C354) *
               C32919 +
           (C756 * C326 + C32905 * C341 + C755 * C325 + C749 * C340 +
            C754 * C324 + C748 * C339) *
               C1743 +
           (C756 * C329 + C32905 * C349 + C755 * C330 + C749 * C350 +
            C754 * C331 + C748 * C351) *
               C32941 +
           (C756 * C319 + C32905 * C334 + C755 * C320 + C749 * C335 +
            C754 * C321 + C748 * C336) *
               C1742 +
           (C756 * C134 + C32905 * C143 + C755 * C133 + C749 * C142 +
            C754 * C132 + C748 * C141) *
               C32952 +
           (C756 * C122 + C32905 * C129 + C755 * C121 + C749 * C128 +
            C754 * C120 + C748 * C127) *
               C1741) *
              C32633 * C32603 * C32589 * C111 +
          ((C754 * C121 + C748 * C128 + C755 * C122 + C749 * C129 +
            C756 * C123 + C32905 * C130) *
               C1741 +
           (C754 * C133 + C748 * C142 + C755 * C134 + C749 * C143 +
            C756 * C135 + C32905 * C144) *
               C32952 +
           (C754 * C320 + C748 * C335 + C755 * C319 + C749 * C334 +
            C756 * C318 + C32905 * C333) *
               C1742 +
           (C754 * C330 + C748 * C350 + C755 * C329 + C749 * C349 +
            C756 * C328 + C32905 * C348) *
               C32941 +
           (C754 * C325 + C748 * C340 + C755 * C326 + C749 * C341 +
            C756 * C327 + C32905 * C342) *
               C1743 +
           (C754 * C345 + C748 * C355 + C755 * C346 + C749 * C356 +
            C756 * C347 + C32905 * C357) *
               C32919) *
              C32633 * C32603 * C32589 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C754 * C119 + C748 * C126 + C755 * C120 + C749 * C127 +
            C756 * C121 + C32905 * C128) *
               C1741 +
           (C754 * C131 + C748 * C140 + C755 * C132 + C749 * C141 +
            C756 * C133 + C32905 * C142) *
               C32952 +
           (C754 * C322 + C748 * C337 + C755 * C321 + C749 * C336 +
            C756 * C320 + C32905 * C335) *
               C1742 +
           (C754 * C332 + C748 * C352 + C755 * C331 + C749 * C351 +
            C756 * C330 + C32905 * C350) *
               C32941 +
           (C754 * C323 + C748 * C338 + C755 * C324 + C749 * C339 +
            C756 * C325 + C32905 * C340) *
               C1743 +
           (C754 * C343 + C748 * C353 + C755 * C344 + C749 * C354 +
            C756 * C345 + C32905 * C355) *
               C32919) *
              C32633 * C32603 * C209 -
          ((C756 * C1082 + C32905 * C1094 + C755 * C1081 + C749 * C1093 +
            C754 * C1080 + C748 * C1092) *
               C32919 +
           (C756 * C1067 + C32905 * C1079 + C755 * C1066 + C749 * C1078 +
            C754 * C1065 + C748 * C1077) *
               C1743 +
           (C1623 + C1624 + C1625) * C32941 + (C1626 + C1627 + C1628) * C1742 +
           (C933 + C932 + C931) * C32952 + (C930 + C929 + C928) * C1741) *
              C32633 * C32603 * C210 +
          (C948 * C1741 + C949 * C32952 + (C1622 + C1621 + C1620) * C1742 +
           (C1619 + C1618 + C1617) * C32941 +
           (C754 * C1068 + C748 * C1083 + C755 * C1069 + C749 * C1084 +
            C756 * C1070 + C32905 * C1085) *
               C1743 +
           (C754 * C1086 + C748 * C1095 + C755 * C1087 + C749 * C1096 +
            C756 * C1088 + C32905 * C1097) *
               C32919) *
              C32633 * C32603 * C211) *
         C32577) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C754 * C119 + C748 * C126 + C755 * C120 + C749 * C127 +
            C756 * C121 + C32905 * C128) *
               C1741 +
           (C754 * C131 + C748 * C140 + C755 * C132 + C749 * C141 +
            C756 * C133 + C32905 * C142) *
               C32952 +
           (C2025 + C2026 + C2027) * C1742 + (C2028 + C2029 + C2030) * C32941 +
           C2045 * C1743 + C2046 * C32919) *
              C32633 * C315 -
          ((C2037 + C2038 + C2039) * C32919 + (C2040 + C2041 + C2042) * C1743 +
           (C2036 + C2035 + C2034) * C32941 + (C2033 + C2032 + C2031) * C1742 +
           (C2030 + C2029 + C2028) * C32952 + (C2027 + C2026 + C2025) * C1741) *
              C32633 * C316 +
          (C2045 * C1741 + C2046 * C32952 + (C2042 + C2041 + C2040) * C1742 +
           (C2039 + C2038 + C2037) * C32941 +
           (C754 * C1967 + C748 * C1976 + C755 * C1968 + C749 * C1977 +
            C756 * C1969 + C32905 * C1978) *
               C1743 +
           (C754 * C1979 + C748 * C1985 + C755 * C1980 + C749 * C1986 +
            C756 * C1981 + C32905 * C1987) *
               C32919) *
              C32633 * C317) *
         C32589 * C32577) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C5270 * C119 + C32948 * C126 + C5271 * C120 + C32935 * C127 +
             C5272 * C121 + C32905 * C128) *
                C118 +
            (C5270 * C131 + C32948 * C140 + C5271 * C132 + C32935 * C141 +
             C5272 * C133 + C32905 * C142) *
                C32644) *
               C5267 +
           ((C5270 * C217 + C32948 * C232 + C5271 * C216 + C32935 * C231 +
             C5272 * C215 + C32905 * C230) *
                C118 +
            (C5270 * C227 + C32948 * C247 + C5271 * C226 + C32935 * C246 +
             C5272 * C225 + C32905 * C245) *
                C32644) *
               C5268 +
           ((C5270 * C218 + C32948 * C233 + C5271 * C219 + C32935 * C234 +
             C5272 * C220 + C32905 * C235) *
                C118 +
            (C5270 * C238 + C32948 * C248 + C5271 * C239 + C32935 * C249 +
             C5272 * C240 + C32905 * C250) *
                C32644) *
               C32916) *
              C32603 * C32589 * C110 -
          (((C5272 * C241 + C32905 * C251 + C5271 * C240 + C32935 * C250 +
             C5270 * C239 + C32948 * C249) *
                C32644 +
            (C5272 * C221 + C32905 * C236 + C5271 * C220 + C32935 * C235 +
             C5270 * C219 + C32948 * C234) *
                C118) *
               C32916 +
           ((C5272 * C224 + C32905 * C244 + C5271 * C225 + C32935 * C245 +
             C5270 * C226 + C32948 * C246) *
                C32644 +
            (C5272 * C214 + C32905 * C229 + C5271 * C215 + C32935 * C230 +
             C5270 * C216 + C32948 * C231) *
                C118) *
               C5268 +
           ((C5272 * C134 + C32905 * C143 + C5271 * C133 + C32935 * C142 +
             C5270 * C132 + C32948 * C141) *
                C32644 +
            (C5272 * C122 + C32905 * C129 + C5271 * C121 + C32935 * C128 +
             C5270 * C120 + C32948 * C127) *
                C118) *
               C5267) *
              C32603 * C32589 * C111 +
          (((C5270 * C121 + C32948 * C128 + C5271 * C122 + C32935 * C129 +
             C5272 * C123 + C32905 * C130) *
                C118 +
            (C5270 * C133 + C32948 * C142 + C5271 * C134 + C32935 * C143 +
             C5272 * C135 + C32905 * C144) *
                C32644) *
               C5267 +
           ((C5270 * C215 + C32948 * C230 + C5271 * C214 + C32935 * C229 +
             C5272 * C213 + C32905 * C228) *
                C118 +
            (C5270 * C225 + C32948 * C245 + C5271 * C224 + C32935 * C244 +
             C5272 * C223 + C32905 * C243) *
                C32644) *
               C5268 +
           ((C5270 * C220 + C32948 * C235 + C5271 * C221 + C32935 * C236 +
             C5272 * C222 + C32905 * C237) *
                C118 +
            (C5270 * C240 + C32948 * C250 + C5271 * C241 + C32935 * C251 +
             C5272 * C242 + C32905 * C252) *
                C32644) *
               C32916) *
              C32603 * C32589 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C5270 * C119 + C32948 * C126 + C5271 * C120 + C32935 * C127 +
             C5272 * C121 + C32905 * C128) *
                C118 +
            (C5270 * C131 + C32948 * C140 + C5271 * C132 + C32935 * C141 +
             C5272 * C133 + C32905 * C142) *
                C32644) *
               C5267 +
           ((C5420 + C5421 + C5422) * C118 + (C5423 + C5424 + C5425) * C32644) *
               C5268 +
           C5444 * C32916) *
              C32603 * C209 -
          (((C5432 + C5433 + C5434) * C32644 + (C5435 + C5436 + C5437) * C118) *
               C32916 +
           ((C5431 + C5430 + C5429) * C32644 + (C5428 + C5427 + C5426) * C118) *
               C5268 +
           ((C5425 + C5424 + C5423) * C32644 + (C5422 + C5421 + C5420) * C118) *
               C5267) *
              C32603 * C210 +
          (C5444 * C5267 +
           ((C5437 + C5436 + C5435) * C118 + (C5434 + C5433 + C5432) * C32644) *
               C5268 +
           ((C5270 * C870 + C32948 * C879 + C5271 * C871 + C32935 * C880 +
             C5272 * C872 + C32905 * C881) *
                C118 +
            (C5270 * C882 + C32948 * C888 + C5271 * C883 + C32935 * C889 +
             C5272 * C884 + C32905 * C890) *
                C32644) *
               C32916) *
              C32603 * C211) *
         C32577) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C5270 * C119 + C32948 * C126 + C5271 * C120 + C32935 * C127 +
             C5272 * C121 + C32905 * C128) *
                C118 +
            (C5270 * C131 + C32948 * C140 + C5271 * C132 + C32935 * C141 +
             C5272 * C133 + C32905 * C142) *
                C32644) *
               C5267 +
           ((C5420 + C5421 + C5422) * C118 + (C5423 + C5424 + C5425) * C32644) *
               C5268 +
           C5444 * C32916) *
              C315 -
          (((C5272 * C1071 + C32905 * C1089 + C5271 * C1072 + C32935 * C1090 +
             C5270 * C1073 + C32948 * C1091) *
                C32644 +
            (C5272 * C1062 + C32905 * C1074 + C5271 * C1063 + C32935 * C1075 +
             C5270 * C1064 + C32948 * C1076) *
                C118) *
               C32916 +
           ((C5272 * C630 + C32905 * C635 + C5271 * C629 + C32935 * C634 +
             C5270 * C628 + C32948 * C633) *
                C32644 +
            (C5272 * C620 + C32905 * C625 + C5271 * C619 + C32935 * C624 +
             C5270 * C618 + C32948 * C623) *
                C118) *
               C5268 +
           ((C5272 * C330 + C32905 * C350 + C5271 * C331 + C32935 * C351 +
             C5270 * C332 + C32948 * C352) *
                C32644 +
            (C5272 * C320 + C32905 * C335 + C5271 * C321 + C32935 * C336 +
             C5270 * C322 + C32948 * C337) *
                C118) *
               C5267) *
              C316 +
          (((C5270 * C323 + C32948 * C338 + C5271 * C324 + C32935 * C339 +
             C5272 * C325 + C32905 * C340) *
                C118 +
            (C5270 * C343 + C32948 * C353 + C5271 * C344 + C32935 * C354 +
             C5272 * C345 + C32905 * C355) *
                C32644) *
               C5267 +
           ((C5270 * C1065 + C32948 * C1077 + C5271 * C1066 + C32935 * C1078 +
             C5272 * C1067 + C32905 * C1079) *
                C118 +
            (C5270 * C1080 + C32948 * C1092 + C5271 * C1081 + C32935 * C1093 +
             C5272 * C1082 + C32905 * C1094) *
                C32644) *
               C5268 +
           ((C5270 * C1068 + C32948 * C1083 + C5271 * C1069 + C32935 * C1084 +
             C5272 * C1070 + C32905 * C1085) *
                C118 +
            (C5270 * C1086 + C32948 * C1095 + C5271 * C1087 + C32935 * C1096 +
             C5272 * C1088 + C32905 * C1097) *
                C32644) *
               C32916) *
              C317) *
         C32589 * C32577) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C6132 * C119 + C32540 * C126) * C118 +
            (C6132 * C131 + C32540 * C140) * C32644) *
               C6127 +
           ((C6132 * C217 + C32540 * C232) * C118 +
            (C6132 * C227 + C32540 * C247) * C32644) *
               C6128 +
           ((C6132 * C218 + C32540 * C233) * C118 +
            (C6132 * C238 + C32540 * C248) * C32644) *
               C6129 +
           ((C6132 * C869 + C32540 * C878) * C118 +
            (C6132 * C875 + C32540 * C887) * C32644) *
               C6130 +
           ((C6132 * C870 + C32540 * C879) * C118 +
            (C6132 * C882 + C32540 * C888) * C32644) *
               C6131) *
              C32603 * C32589 * C110 -
          (((C6132 * C883 + C32540 * C889) * C32644 +
            (C6132 * C871 + C32540 * C880) * C118) *
               C6131 +
           ((C6132 * C874 + C32540 * C886) * C32644 +
            (C6132 * C868 + C32540 * C877) * C118) *
               C6130 +
           ((C6132 * C239 + C32540 * C249) * C32644 +
            (C6132 * C219 + C32540 * C234) * C118) *
               C6129 +
           ((C6132 * C226 + C32540 * C246) * C32644 +
            (C6132 * C216 + C32540 * C231) * C118) *
               C6128 +
           ((C6132 * C132 + C32540 * C141) * C32644 +
            (C6132 * C120 + C32540 * C127) * C118) *
               C6127) *
              C32603 * C32589 * C111 +
          (((C6132 * C121 + C32540 * C128) * C118 +
            (C6132 * C133 + C32540 * C142) * C32644) *
               C6127 +
           ((C6132 * C215 + C32540 * C230) * C118 +
            (C6132 * C225 + C32540 * C245) * C32644) *
               C6128 +
           ((C6132 * C220 + C32540 * C235) * C118 +
            (C6132 * C240 + C32540 * C250) * C32644) *
               C6129 +
           ((C6132 * C867 + C32540 * C876) * C118 +
            (C6132 * C873 + C32540 * C885) * C32644) *
               C6130 +
           ((C6132 * C872 + C32540 * C881) * C118 +
            (C6132 * C884 + C32540 * C890) * C32644) *
               C6131) *
              C32603 * C32589 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C6132 * C119 + C32540 * C126) * C118 +
            (C6132 * C131 + C32540 * C140) * C32644) *
               C6127 +
           (C6234 + C6235) * C6128 + C6244 * C6129 + C6245 * C6130 +
           C6246 * C6131) *
              C32603 * C209 -
          ((C6242 + C6243) * C6131 + (C6241 + C6240) * C6130 +
           (C6239 + C6238) * C6129 + (C6237 + C6236) * C6128 +
           (C6235 + C6234) * C6127) *
              C32603 * C210 +
          (C6244 * C6127 + C6245 * C6128 + C6246 * C6129 +
           (C6243 + C6242) * C6130 +
           ((C6132 * C6196 + C32540 * C6199) * C118 +
            (C6132 * C6200 + C32540 * C6202) * C32644) *
               C6131) *
              C32603 * C211) *
         C32577) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C6132 * C119 + C32540 * C126) * C118 +
            (C6132 * C131 + C32540 * C140) * C32644) *
               C6127 +
           (C6234 + C6235) * C6128 + C6244 * C6129 + C6245 * C6130 +
           C6246 * C6131) *
              C315 -
          (((C6132 * C6311 + C32540 * C6317) * C32644 +
            (C6132 * C6308 + C32540 * C6312) * C118) *
               C6131 +
           ((C6132 * C1586 + C32540 * C1589) * C32644 +
            (C6132 * C1580 + C32540 * C1583) * C118) *
               C6130 +
           ((C6132 * C1073 + C32540 * C1091) * C32644 +
            (C6132 * C1064 + C32540 * C1076) * C118) *
               C6129 +
           ((C6132 * C628 + C32540 * C633) * C32644 +
            (C6132 * C618 + C32540 * C623) * C118) *
               C6128 +
           ((C6132 * C332 + C32540 * C352) * C32644 +
            (C6132 * C322 + C32540 * C337) * C118) *
               C6127) *
              C316 +
          (((C6132 * C323 + C32540 * C338) * C118 +
            (C6132 * C343 + C32540 * C353) * C32644) *
               C6127 +
           ((C6132 * C1065 + C32540 * C1077) * C118 +
            (C6132 * C1080 + C32540 * C1092) * C32644) *
               C6128 +
           ((C6132 * C1068 + C32540 * C1083) * C118 +
            (C6132 * C1086 + C32540 * C1095) * C32644) *
               C6129 +
           ((C6132 * C6309 + C32540 * C6313) * C118 +
            (C6132 * C6314 + C32540 * C6318) * C32644) *
               C6130 +
           ((C6132 * C6310 + C32540 * C6315) * C118 +
            (C6132 * C6316 + C32540 * C6319) * C32644) *
               C6131) *
              C317) *
         C32589 * C32577) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C6132 * C119 + C32540 * C126) * C1741 +
            (C6132 * C131 + C32540 * C140) * C32952 +
            (C6132 * C322 + C32540 * C337) * C1742 +
            (C6132 * C332 + C32540 * C352) * C32941 +
            (C6132 * C323 + C32540 * C338) * C1743 +
            (C6132 * C343 + C32540 * C353) * C32919) *
               C5267 +
           (C6224 * C1741 + C6225 * C32952 + C6634 * C1742 + C6633 * C32941 +
            (C6132 * C1065 + C32540 * C1077) * C1743 +
            (C6132 * C1080 + C32540 * C1092) * C32919) *
               C5268 +
           (C6226 * C1741 + C6227 * C32952 + C6632 * C1742 + C6631 * C32941 +
            (C6132 * C1068 + C32540 * C1083) * C1743 +
            (C6132 * C1086 + C32540 * C1095) * C32919) *
               C32916) *
              C32603 * C32589 * C110 -
          (((C6132 * C1087 + C32540 * C1096) * C32919 +
            (C6132 * C1069 + C32540 * C1084) * C1743 +
            (C6132 * C1072 + C32540 * C1090) * C32941 +
            (C6132 * C1063 + C32540 * C1075) * C1742 + C6426 * C32952 +
            C6425 * C1741) *
               C32916 +
           ((C6132 * C1081 + C32540 * C1093) * C32919 +
            (C6132 * C1066 + C32540 * C1078) * C1743 +
            (C6132 * C629 + C32540 * C634) * C32941 +
            (C6132 * C619 + C32540 * C624) * C1742 + C6424 * C32952 +
            C6423 * C1741) *
               C5268 +
           ((C6132 * C344 + C32540 * C354) * C32919 +
            (C6132 * C324 + C32540 * C339) * C1743 +
            (C6132 * C331 + C32540 * C351) * C32941 +
            (C6132 * C321 + C32540 * C336) * C1742 +
            (C6132 * C132 + C32540 * C141) * C32952 +
            (C6132 * C120 + C32540 * C127) * C1741) *
               C5267) *
              C32603 * C32589 * C111 +
          (((C6132 * C121 + C32540 * C128) * C1741 +
            (C6132 * C133 + C32540 * C142) * C32952 +
            (C6132 * C320 + C32540 * C335) * C1742 +
            (C6132 * C330 + C32540 * C350) * C32941 +
            (C6132 * C325 + C32540 * C340) * C1743 +
            (C6132 * C345 + C32540 * C355) * C32919) *
               C5267 +
           ((C6132 * C215 + C32540 * C230) * C1741 +
            (C6132 * C225 + C32540 * C245) * C32952 +
            (C6132 * C620 + C32540 * C625) * C1742 +
            (C6132 * C630 + C32540 * C635) * C32941 +
            (C6132 * C1067 + C32540 * C1079) * C1743 +
            (C6132 * C1082 + C32540 * C1094) * C32919) *
               C5268 +
           ((C6132 * C220 + C32540 * C235) * C1741 +
            (C6132 * C240 + C32540 * C250) * C32952 +
            (C6132 * C1062 + C32540 * C1074) * C1742 +
            (C6132 * C1071 + C32540 * C1089) * C32941 +
            (C6132 * C1070 + C32540 * C1085) * C1743 +
            (C6132 * C1088 + C32540 * C1097) * C32919) *
               C32916) *
              C32603 * C32589 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C6132 * C119 + C32540 * C126) * C1741 +
            (C6132 * C131 + C32540 * C140) * C32952 +
            (C6132 * C322 + C32540 * C337) * C1742 +
            (C6132 * C332 + C32540 * C352) * C32941 +
            (C6132 * C323 + C32540 * C338) * C1743 +
            (C6132 * C343 + C32540 * C353) * C32919) *
               C5267 +
           (C6863 + C6864 + C6865 + C6866 + C6894 + C6895) * C5268 +
           C6903 * C32916) *
              C32603 * C209 -
          ((C6899 + C6900 + C6883 + C6884 + C6885 + C6886) * C32916 +
           (C6898 + C6897 + C6874 + C6873 + C6872 + C6871) * C5268 +
           (C6895 + C6894 + C6866 + C6865 + C6864 + C6863) * C5267) *
              C32603 * C210 +
          (C6903 * C5267 +
           (C6886 + C6885 + C6884 + C6883 + C6900 + C6899) * C5268 +
           (C6230 * C1741 + C6231 * C32952 + C6628 * C1742 + C6627 * C32941 +
            (C6132 * C6310 + C32540 * C6315) * C1743 +
            (C6132 * C6316 + C32540 * C6319) * C32919) *
               C32916) *
              C32603 * C211) *
         C32577) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C6132 * C119 + C32540 * C126) * C1741 +
            (C6132 * C131 + C32540 * C140) * C32952 + C7046 * C1742 +
            C7047 * C32941 + C7048 * C1743 + C7049 * C32919) *
               C5267 +
           (C6863 + C6864 + C6865 + C6866 + C6894 + C6895) * C5268 +
           C6903 * C32916) *
              C315 -
          ((C7050 * C32919 + C7051 * C1743 + C6891 * C32941 + C6890 * C1742 +
            C6631 * C32952 + C6632 * C1741) *
               C32916 +
           (C7052 * C32919 + C7053 * C1743 + C6888 * C32941 + C6887 * C1742 +
            C6633 * C32952 + C6634 * C1741) *
               C5268 +
           (C7054 * C32919 + C7055 * C1743 + C7049 * C32941 + C7048 * C1742 +
            C7047 * C32952 + C7046 * C1741) *
               C5267) *
              C316 +
          ((C7048 * C1741 + C7049 * C32952 + C7055 * C1742 + C7054 * C32941 +
            (C6132 * C1967 + C32540 * C1976) * C1743 +
            (C6132 * C1979 + C32540 * C1985) * C32919) *
               C5267 +
           (C6887 * C1741 + C6888 * C32952 + C7053 * C1742 + C7052 * C32941 +
            (C6132 * C7014 + C32540 * C7018) * C1743 +
            (C6132 * C7019 + C32540 * C7023) * C32919) *
               C5268 +
           (C6890 * C1741 + C6891 * C32952 + C7051 * C1742 + C7050 * C32941 +
            (C6132 * C7015 + C32540 * C7020) * C1743 +
            (C6132 * C7021 + C32540 * C7024) * C32919) *
               C32916) *
              C317) *
         C32589 * C32577) /
            (p * q * std::sqrt(p + q));
    d2ee[113] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C754 * C119 + C748 * C126 + C755 * C120 + C749 * C127 +
              C756 * C121 + C32905 * C128) *
                 C118 +
             (C754 * C131 + C748 * C140 + C755 * C132 + C749 * C141 +
              C756 * C133 + C32905 * C142) *
                 C32644) *
                C32951 +
            ((C928 + C929 + C930) * C118 + (C931 + C932 + C933) * C32644) *
                C32939 +
            C952 * C32916) *
               C530 -
           (((C756 * C1071 + C32905 * C1089 + C755 * C1072 + C749 * C1090 +
              C754 * C1073 + C748 * C1091) *
                 C32644 +
             (C756 * C1062 + C32905 * C1074 + C755 * C1063 + C749 * C1075 +
              C754 * C1064 + C748 * C1076) *
                 C118) *
                C32916 +
            ((C756 * C630 + C32905 * C635 + C755 * C629 + C749 * C634 +
              C754 * C628 + C748 * C633) *
                 C32644 +
             (C756 * C620 + C32905 * C625 + C755 * C619 + C749 * C624 +
              C754 * C618 + C748 * C623) *
                 C118) *
                C32939 +
            ((C756 * C330 + C32905 * C350 + C755 * C331 + C749 * C351 +
              C754 * C332 + C748 * C352) *
                 C32644 +
             (C756 * C320 + C32905 * C335 + C755 * C321 + C749 * C336 +
              C754 * C322 + C748 * C337) *
                 C118) *
                C32951) *
               C531) *
              C32589 * C442 +
          ((((C754 * C321 + C748 * C336 + C755 * C320 + C749 * C335 +
              C756 * C319 + C32905 * C334) *
                 C118 +
             (C754 * C331 + C748 * C351 + C755 * C330 + C749 * C350 +
              C756 * C329 + C32905 * C349) *
                 C32644) *
                C32951 +
            ((C754 * C619 + C748 * C624 + C755 * C620 + C749 * C625 +
              C756 * C621 + C32905 * C626) *
                 C118 +
             (C754 * C629 + C748 * C634 + C755 * C630 + C749 * C635 +
              C756 * C631 + C32905 * C636) *
                 C32644) *
                C32939 +
            ((C754 * C1063 + C748 * C1075 + C755 * C1062 + C749 * C1074 +
              C756 * C1430 + C32905 * C1431) *
                 C118 +
             (C754 * C1072 + C748 * C1090 + C755 * C1071 + C749 * C1089 +
              C756 * C1432 + C32905 * C1433) *
                 C32644) *
                C32916) *
               C531 -
           (((C1284 + C1283 + C1282) * C32644 +
             (C1281 + C1280 + C1279) * C118) *
                C32916 +
            ((C1278 + C1277 + C1276) * C32644 +
             (C1275 + C1274 + C1273) * C118) *
                C32939 +
            ((C756 * C134 + C32905 * C143 + C755 * C133 + C749 * C142 +
              C754 * C132 + C748 * C141) *
                 C32644 +
             (C756 * C122 + C32905 * C129 + C755 * C121 + C749 * C128 +
              C754 * C120 + C748 * C127) *
                 C118) *
                C32951) *
               C530) *
              C32589 * C443)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C127 +
             C115 * C121 + C103 * C128 + C116 * C122 + C104 * C129 +
             C117 * C123 + C105 * C130) *
                C118 +
            (C113 * C131 + C101 * C140 + C114 * C132 + C102 * C141 +
             C115 * C133 + C103 * C142 + C116 * C134 + C104 * C143 +
             C117 * C135 + C105 * C144) *
                C32644) *
               C32633 * C530 -
           ((C117 * C328 + C105 * C348 + C116 * C329 + C104 * C349 +
             C115 * C330 + C103 * C350 + C114 * C331 + C102 * C351 +
             C113 * C332 + C101 * C352) *
                C32644 +
            (C117 * C318 + C105 * C333 + C116 * C319 + C104 * C334 +
             C115 * C320 + C103 * C335 + C114 * C321 + C102 * C336 +
             C113 * C322 + C101 * C337) *
                C118) *
               C32633 * C531) *
              C32589 * C442 +
          (((C113 * C321 + C101 * C336 + C114 * C320 + C102 * C335 +
             C115 * C319 + C103 * C334 + C116 * C318 + C104 * C333 +
             C117 * C532 + C105 * C533) *
                C118 +
            (C113 * C331 + C101 * C351 + C114 * C330 + C102 * C350 +
             C115 * C329 + C103 * C349 + C116 * C328 + C104 * C348 +
             C117 * C534 + C105 * C535) *
                C32644) *
               C32633 * C531 -
           ((C117 * C136 + C105 * C145 + C116 * C135 + C104 * C144 +
             C115 * C134 + C103 * C143 + C114 * C133 + C102 * C142 +
             C113 * C132 + C101 * C141) *
                C32644 +
            (C117 * C124 + C105 * C137 + C116 * C123 + C104 * C130 +
             C115 * C122 + C103 * C129 + C114 * C121 + C102 * C128 +
             C113 * C120 + C101 * C127) *
                C118) *
               C32633 * C530) *
              C32589 * C443)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C754 * C119 + C748 * C126 + C755 * C120 + C749 * C127 +
             C756 * C121 + C32905 * C128) *
                C1741 +
            (C754 * C131 + C748 * C140 + C755 * C132 + C749 * C141 +
             C756 * C133 + C32905 * C142) *
                C32952 +
            (C2025 + C2026 + C2027) * C1742 + (C2028 + C2029 + C2030) * C32941 +
            C2045 * C1743 + C2046 * C32919) *
               C32633 * C530 -
           ((C2037 + C2038 + C2039) * C32919 + (C2040 + C2041 + C2042) * C1743 +
            (C2036 + C2035 + C2034) * C32941 + (C2033 + C2032 + C2031) * C1742 +
            (C2030 + C2029 + C2028) * C32952 +
            (C2027 + C2026 + C2025) * C1741) *
               C32633 * C531) *
              C32589 * C442 +
          (((C2371 + C2372 + C2373) * C1741 + (C2374 + C2375 + C2376) * C32952 +
            (C2377 + C2378 + C2379) * C1742 + (C2380 + C2381 + C2382) * C32941 +
            (C754 * C1965 + C748 * C1974 + C755 * C1964 + C749 * C1973 +
             C756 * C2342 + C32905 * C2343) *
                C1743 +
            (C754 * C1971 + C748 * C1983 + C755 * C1970 + C749 * C1982 +
             C756 * C2344 + C32905 * C2345) *
                C32919) *
               C32633 * C531 -
           ((C2382 + C2381 + C2380) * C32919 + (C2379 + C2378 + C2377) * C1743 +
            (C2376 + C2375 + C2374) * C32941 + (C2373 + C2372 + C2371) * C1742 +
            (C756 * C134 + C32905 * C143 + C755 * C133 + C749 * C142 +
             C754 * C132 + C748 * C141) *
                C32952 +
            (C756 * C122 + C32905 * C129 + C755 * C121 + C749 * C128 +
             C754 * C120 + C748 * C127) *
                C1741) *
               C32633 * C530) *
              C32589 * C443)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C5270 * C119 + C32948 * C126 + C5271 * C120 + C32935 * C127 +
              C5272 * C121 + C32905 * C128) *
                 C118 +
             (C5270 * C131 + C32948 * C140 + C5271 * C132 + C32935 * C141 +
              C5272 * C133 + C32905 * C142) *
                 C32644) *
                C5267 +
            ((C5420 + C5421 + C5422) * C118 +
             (C5423 + C5424 + C5425) * C32644) *
                C5268 +
            C5444 * C32916) *
               C530 -
           (((C5272 * C1071 + C32905 * C1089 + C5271 * C1072 + C32935 * C1090 +
              C5270 * C1073 + C32948 * C1091) *
                 C32644 +
             (C5272 * C1062 + C32905 * C1074 + C5271 * C1063 + C32935 * C1075 +
              C5270 * C1064 + C32948 * C1076) *
                 C118) *
                C32916 +
            ((C5272 * C630 + C32905 * C635 + C5271 * C629 + C32935 * C634 +
              C5270 * C628 + C32948 * C633) *
                 C32644 +
             (C5272 * C620 + C32905 * C625 + C5271 * C619 + C32935 * C624 +
              C5270 * C618 + C32948 * C623) *
                 C118) *
                C5268 +
            ((C5272 * C330 + C32905 * C350 + C5271 * C331 + C32935 * C351 +
              C5270 * C332 + C32948 * C352) *
                 C32644 +
             (C5272 * C320 + C32905 * C335 + C5271 * C321 + C32935 * C336 +
              C5270 * C322 + C32948 * C337) *
                 C118) *
                C5267) *
               C531) *
              C32589 * C442 +
          ((((C5270 * C321 + C32948 * C336 + C5271 * C320 + C32935 * C335 +
              C5272 * C319 + C32905 * C334) *
                 C118 +
             (C5270 * C331 + C32948 * C351 + C5271 * C330 + C32935 * C350 +
              C5272 * C329 + C32905 * C349) *
                 C32644) *
                C5267 +
            ((C5270 * C619 + C32948 * C624 + C5271 * C620 + C32935 * C625 +
              C5272 * C621 + C32905 * C626) *
                 C118 +
             (C5270 * C629 + C32948 * C634 + C5271 * C630 + C32935 * C635 +
              C5272 * C631 + C32905 * C636) *
                 C32644) *
                C5268 +
            ((C5270 * C1063 + C32948 * C1075 + C5271 * C1062 + C32935 * C1074 +
              C5272 * C1430 + C32905 * C1431) *
                 C118 +
             (C5270 * C1072 + C32948 * C1090 + C5271 * C1071 + C32935 * C1089 +
              C5272 * C1432 + C32905 * C1433) *
                 C32644) *
                C32916) *
               C531 -
           (((C5736 + C5735 + C5734) * C32644 +
             (C5733 + C5732 + C5731) * C118) *
                C32916 +
            ((C5730 + C5729 + C5728) * C32644 +
             (C5727 + C5726 + C5725) * C118) *
                C5268 +
            ((C5272 * C134 + C32905 * C143 + C5271 * C133 + C32935 * C142 +
              C5270 * C132 + C32948 * C141) *
                 C32644 +
             (C5272 * C122 + C32905 * C129 + C5271 * C121 + C32935 * C128 +
              C5270 * C120 + C32948 * C127) *
                 C118) *
                C5267) *
               C530) *
              C32589 * C443)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C6132 * C119 + C32540 * C126) * C118 +
             (C6132 * C131 + C32540 * C140) * C32644) *
                C6127 +
            (C6234 + C6235) * C6128 + C6244 * C6129 + C6245 * C6130 +
            C6246 * C6131) *
               C530 -
           (((C6132 * C6311 + C32540 * C6317) * C32644 +
             (C6132 * C6308 + C32540 * C6312) * C118) *
                C6131 +
            ((C6132 * C1586 + C32540 * C1589) * C32644 +
             (C6132 * C1580 + C32540 * C1583) * C118) *
                C6130 +
            ((C6132 * C1073 + C32540 * C1091) * C32644 +
             (C6132 * C1064 + C32540 * C1076) * C118) *
                C6129 +
            ((C6132 * C628 + C32540 * C633) * C32644 +
             (C6132 * C618 + C32540 * C623) * C118) *
                C6128 +
            ((C6132 * C332 + C32540 * C352) * C32644 +
             (C6132 * C322 + C32540 * C337) * C118) *
                C6127) *
               C531) *
              C32589 * C442 +
          ((((C6132 * C321 + C32540 * C336) * C118 +
             (C6132 * C331 + C32540 * C351) * C32644) *
                C6127 +
            ((C6132 * C619 + C32540 * C624) * C118 +
             (C6132 * C629 + C32540 * C634) * C32644) *
                C6128 +
            ((C6132 * C1063 + C32540 * C1075) * C118 +
             (C6132 * C1072 + C32540 * C1090) * C32644) *
                C6129 +
            ((C6132 * C1581 + C32540 * C1584) * C118 +
             (C6132 * C1587 + C32540 * C1590) * C32644) *
                C6130 +
            ((C6132 * C6520 + C32540 * C6521) * C118 +
             (C6132 * C6522 + C32540 * C6523) * C32644) *
                C6131) *
               C531 -
           ((C6438 + C6437) * C6131 + (C6436 + C6435) * C6130 +
            (C6434 + C6433) * C6129 + (C6432 + C6431) * C6128 +
            ((C6132 * C132 + C32540 * C141) * C32644 +
             (C6132 * C120 + C32540 * C127) * C118) *
                C6127) *
               C530) *
              C32589 * C443)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C6132 * C119 + C32540 * C126) * C1741 +
             (C6132 * C131 + C32540 * C140) * C32952 + C7046 * C1742 +
             C7047 * C32941 + C7048 * C1743 + C7049 * C32919) *
                C5267 +
            (C6863 + C6864 + C6865 + C6866 + C6894 + C6895) * C5268 +
            C6903 * C32916) *
               C530 -
           ((C7050 * C32919 + C7051 * C1743 + C6891 * C32941 + C6890 * C1742 +
             C6631 * C32952 + C6632 * C1741) *
                C32916 +
            (C7052 * C32919 + C7053 * C1743 + C6888 * C32941 + C6887 * C1742 +
             C6633 * C32952 + C6634 * C1741) *
                C5268 +
            (C7054 * C32919 + C7055 * C1743 + C7049 * C32941 + C7048 * C1742 +
             C7047 * C32952 + C7046 * C1741) *
                C5267) *
               C531) *
              C32589 * C442 +
          (((C7400 * C1741 + C7401 * C32952 + C7402 * C1742 + C7403 * C32941 +
             (C6132 * C1965 + C32540 * C1974) * C1743 +
             (C6132 * C1971 + C32540 * C1983) * C32919) *
                C5267 +
            (C7226 * C1741 + C7227 * C32952 + C7228 * C1742 + C7229 * C32941 +
             (C6132 * C2529 + C32540 * C2532) * C1743 +
             (C6132 * C2535 + C32540 * C2538) * C32919) *
                C5268 +
            (C7230 * C1741 + C7231 * C32952 + C7232 * C1742 + C7233 * C32941 +
             (C6132 * C7387 + C32540 * C7388) * C1743 +
             (C6132 * C7389 + C32540 * C7390) * C32919) *
                C32916) *
               C531 -
           ((C7241 + C7240 + C7239 + C7238 + C7217 + C7216) * C32916 +
            (C7237 + C7236 + C7235 + C7234 + C7207 + C7206) * C5268 +
            (C7403 * C32919 + C7402 * C1743 + C7401 * C32941 + C7400 * C1742 +
             (C6132 * C132 + C32540 * C141) * C32952 +
             (C6132 * C120 + C32540 * C127) * C1741) *
                C5267) *
               C530) *
              C32589 * C443)) /
            (p * q * std::sqrt(p + q));
    d2ee[114] +=
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C127 +
            C115 * C121 + C103 * C128 + C116 * C122 + C104 * C129 +
            C117 * C123 + C105 * C130) *
               C118 +
           (C113 * C131 + C101 * C140 + C114 * C132 + C102 * C141 +
            C115 * C133 + C103 * C142 + C116 * C134 + C104 * C143 +
            C117 * C135 + C105 * C144) *
               C32644) *
              C32633 * C32603 * C209 -
          ((C117 * C223 + C105 * C243 + C116 * C224 + C104 * C244 +
            C115 * C225 + C103 * C245 + C114 * C226 + C102 * C246 +
            C113 * C227 + C101 * C247) *
               C32644 +
           (C117 * C213 + C105 * C228 + C116 * C214 + C104 * C229 +
            C115 * C215 + C103 * C230 + C114 * C216 + C102 * C231 +
            C113 * C217 + C101 * C232) *
               C118) *
              C32633 * C32603 * C210 +
          ((C113 * C218 + C101 * C233 + C114 * C219 + C102 * C234 +
            C115 * C220 + C103 * C235 + C116 * C221 + C104 * C236 +
            C117 * C222 + C105 * C237) *
               C118 +
           (C113 * C238 + C101 * C248 + C114 * C239 + C102 * C249 +
            C115 * C240 + C103 * C250 + C116 * C241 + C104 * C251 +
            C117 * C242 + C105 * C252) *
               C32644) *
              C32633 * C32603 * C211) *
         C32577) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C127 +
            C115 * C121 + C103 * C128 + C116 * C122 + C104 * C129 +
            C117 * C123 + C105 * C130) *
               C118 +
           (C113 * C131 + C101 * C140 + C114 * C132 + C102 * C141 +
            C115 * C133 + C103 * C142 + C116 * C134 + C104 * C143 +
            C117 * C135 + C105 * C144) *
               C32644) *
              C32633 * C32603 * C32589 * C110 -
          ((C117 * C136 + C105 * C145 + C116 * C135 + C104 * C144 +
            C115 * C134 + C103 * C143 + C114 * C133 + C102 * C142 +
            C113 * C132 + C101 * C141) *
               C32644 +
           (C117 * C124 + C105 * C137 + C116 * C123 + C104 * C130 +
            C115 * C122 + C103 * C129 + C114 * C121 + C102 * C128 +
            C113 * C120 + C101 * C127) *
               C118) *
              C32633 * C32603 * C32589 * C111 +
          ((C113 * C121 + C101 * C128 + C114 * C122 + C102 * C129 +
            C115 * C123 + C103 * C130 + C116 * C124 + C104 * C137 +
            C117 * C125 + C105 * C138) *
               C118 +
           (C113 * C133 + C101 * C142 + C114 * C134 + C102 * C143 +
            C115 * C135 + C103 * C144 + C116 * C136 + C104 * C145 +
            C117 * C139 + C105 * C146) *
               C32644) *
              C32633 * C32603 * C32589 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C754 * C119 + C748 * C126 + C755 * C120 + C749 * C127 +
             C756 * C121 + C32905 * C128) *
                C118 +
            (C754 * C131 + C748 * C140 + C755 * C132 + C749 * C141 +
             C756 * C133 + C32905 * C142) *
                C32644) *
               C32951 +
           ((C754 * C217 + C748 * C232 + C755 * C216 + C749 * C231 +
             C756 * C215 + C32905 * C230) *
                C118 +
            (C754 * C227 + C748 * C247 + C755 * C226 + C749 * C246 +
             C756 * C225 + C32905 * C245) *
                C32644) *
               C32939 +
           ((C754 * C218 + C748 * C233 + C755 * C219 + C749 * C234 +
             C756 * C220 + C32905 * C235) *
                C118 +
            (C754 * C238 + C748 * C248 + C755 * C239 + C749 * C249 +
             C756 * C240 + C32905 * C250) *
                C32644) *
               C32916) *
              C32603 * C32589 * C110 -
          (((C756 * C241 + C32905 * C251 + C755 * C240 + C749 * C250 +
             C754 * C239 + C748 * C249) *
                C32644 +
            (C756 * C221 + C32905 * C236 + C755 * C220 + C749 * C235 +
             C754 * C219 + C748 * C234) *
                C118) *
               C32916 +
           ((C756 * C224 + C32905 * C244 + C755 * C225 + C749 * C245 +
             C754 * C226 + C748 * C246) *
                C32644 +
            (C756 * C214 + C32905 * C229 + C755 * C215 + C749 * C230 +
             C754 * C216 + C748 * C231) *
                C118) *
               C32939 +
           ((C756 * C134 + C32905 * C143 + C755 * C133 + C749 * C142 +
             C754 * C132 + C748 * C141) *
                C32644 +
            (C756 * C122 + C32905 * C129 + C755 * C121 + C749 * C128 +
             C754 * C120 + C748 * C127) *
                C118) *
               C32951) *
              C32603 * C32589 * C111 +
          (((C754 * C121 + C748 * C128 + C755 * C122 + C749 * C129 +
             C756 * C123 + C32905 * C130) *
                C118 +
            (C754 * C133 + C748 * C142 + C755 * C134 + C749 * C143 +
             C756 * C135 + C32905 * C144) *
                C32644) *
               C32951 +
           ((C754 * C215 + C748 * C230 + C755 * C214 + C749 * C229 +
             C756 * C213 + C32905 * C228) *
                C118 +
            (C754 * C225 + C748 * C245 + C755 * C224 + C749 * C244 +
             C756 * C223 + C32905 * C243) *
                C32644) *
               C32939 +
           ((C754 * C220 + C748 * C235 + C755 * C221 + C749 * C236 +
             C756 * C222 + C32905 * C237) *
                C118 +
            (C754 * C240 + C748 * C250 + C755 * C241 + C749 * C251 +
             C756 * C242 + C32905 * C252) *
                C32644) *
               C32916) *
              C32603 * C32589 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C754 * C119 + C748 * C126 + C755 * C120 + C749 * C127 +
             C756 * C121 + C32905 * C128) *
                C118 +
            (C754 * C131 + C748 * C140 + C755 * C132 + C749 * C141 +
             C756 * C133 + C32905 * C142) *
                C32644) *
               C32951 +
           ((C928 + C929 + C930) * C118 + (C931 + C932 + C933) * C32644) *
               C32939 +
           C952 * C32916) *
              C32603 * C209 -
          (((C940 + C941 + C942) * C32644 + (C943 + C944 + C945) * C118) *
               C32916 +
           ((C939 + C938 + C937) * C32644 + (C936 + C935 + C934) * C118) *
               C32939 +
           ((C933 + C932 + C931) * C32644 + (C930 + C929 + C928) * C118) *
               C32951) *
              C32603 * C210 +
          (C952 * C32951 +
           ((C945 + C944 + C943) * C118 + (C942 + C941 + C940) * C32644) *
               C32939 +
           ((C754 * C870 + C748 * C879 + C755 * C871 + C749 * C880 +
             C756 * C872 + C32905 * C881) *
                C118 +
            (C754 * C882 + C748 * C888 + C755 * C883 + C749 * C889 +
             C756 * C884 + C32905 * C890) *
                C32644) *
               C32916) *
              C32603 * C211) *
         C32577) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C754 * C119 + C748 * C126 + C755 * C120 + C749 * C127 +
            C756 * C121 + C32905 * C128) *
               C1741 +
           (C754 * C131 + C748 * C140 + C755 * C132 + C749 * C141 +
            C756 * C133 + C32905 * C142) *
               C32952 +
           (C754 * C322 + C748 * C337 + C755 * C321 + C749 * C336 +
            C756 * C320 + C32905 * C335) *
               C1742 +
           (C754 * C332 + C748 * C352 + C755 * C331 + C749 * C351 +
            C756 * C330 + C32905 * C350) *
               C32941 +
           (C754 * C323 + C748 * C338 + C755 * C324 + C749 * C339 +
            C756 * C325 + C32905 * C340) *
               C1743 +
           (C754 * C343 + C748 * C353 + C755 * C344 + C749 * C354 +
            C756 * C345 + C32905 * C355) *
               C32919) *
              C32633 * C32603 * C32589 * C110 -
          ((C756 * C346 + C32905 * C356 + C755 * C345 + C749 * C355 +
            C754 * C344 + C748 * C354) *
               C32919 +
           (C756 * C326 + C32905 * C341 + C755 * C325 + C749 * C340 +
            C754 * C324 + C748 * C339) *
               C1743 +
           (C756 * C329 + C32905 * C349 + C755 * C330 + C749 * C350 +
            C754 * C331 + C748 * C351) *
               C32941 +
           (C756 * C319 + C32905 * C334 + C755 * C320 + C749 * C335 +
            C754 * C321 + C748 * C336) *
               C1742 +
           (C756 * C134 + C32905 * C143 + C755 * C133 + C749 * C142 +
            C754 * C132 + C748 * C141) *
               C32952 +
           (C756 * C122 + C32905 * C129 + C755 * C121 + C749 * C128 +
            C754 * C120 + C748 * C127) *
               C1741) *
              C32633 * C32603 * C32589 * C111 +
          ((C754 * C121 + C748 * C128 + C755 * C122 + C749 * C129 +
            C756 * C123 + C32905 * C130) *
               C1741 +
           (C754 * C133 + C748 * C142 + C755 * C134 + C749 * C143 +
            C756 * C135 + C32905 * C144) *
               C32952 +
           (C754 * C320 + C748 * C335 + C755 * C319 + C749 * C334 +
            C756 * C318 + C32905 * C333) *
               C1742 +
           (C754 * C330 + C748 * C350 + C755 * C329 + C749 * C349 +
            C756 * C328 + C32905 * C348) *
               C32941 +
           (C754 * C325 + C748 * C340 + C755 * C326 + C749 * C341 +
            C756 * C327 + C32905 * C342) *
               C1743 +
           (C754 * C345 + C748 * C355 + C755 * C346 + C749 * C356 +
            C756 * C347 + C32905 * C357) *
               C32919) *
              C32633 * C32603 * C32589 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C754 * C119 + C748 * C126 + C755 * C120 + C749 * C127 +
            C756 * C121 + C32905 * C128) *
               C1741 +
           (C754 * C131 + C748 * C140 + C755 * C132 + C749 * C141 +
            C756 * C133 + C32905 * C142) *
               C32952 +
           (C754 * C322 + C748 * C337 + C755 * C321 + C749 * C336 +
            C756 * C320 + C32905 * C335) *
               C1742 +
           (C754 * C332 + C748 * C352 + C755 * C331 + C749 * C351 +
            C756 * C330 + C32905 * C350) *
               C32941 +
           (C754 * C323 + C748 * C338 + C755 * C324 + C749 * C339 +
            C756 * C325 + C32905 * C340) *
               C1743 +
           (C754 * C343 + C748 * C353 + C755 * C344 + C749 * C354 +
            C756 * C345 + C32905 * C355) *
               C32919) *
              C32633 * C32603 * C209 -
          ((C756 * C1082 + C32905 * C1094 + C755 * C1081 + C749 * C1093 +
            C754 * C1080 + C748 * C1092) *
               C32919 +
           (C756 * C1067 + C32905 * C1079 + C755 * C1066 + C749 * C1078 +
            C754 * C1065 + C748 * C1077) *
               C1743 +
           (C1623 + C1624 + C1625) * C32941 + (C1626 + C1627 + C1628) * C1742 +
           (C933 + C932 + C931) * C32952 + (C930 + C929 + C928) * C1741) *
              C32633 * C32603 * C210 +
          (C948 * C1741 + C949 * C32952 + (C1622 + C1621 + C1620) * C1742 +
           (C1619 + C1618 + C1617) * C32941 +
           (C754 * C1068 + C748 * C1083 + C755 * C1069 + C749 * C1084 +
            C756 * C1070 + C32905 * C1085) *
               C1743 +
           (C754 * C1086 + C748 * C1095 + C755 * C1087 + C749 * C1096 +
            C756 * C1088 + C32905 * C1097) *
               C32919) *
              C32633 * C32603 * C211) *
         C32577) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C5270 * C119 + C32948 * C126 + C5271 * C120 + C32935 * C127 +
             C5272 * C121 + C32905 * C128) *
                C118 +
            (C5270 * C131 + C32948 * C140 + C5271 * C132 + C32935 * C141 +
             C5272 * C133 + C32905 * C142) *
                C32644) *
               C5267 +
           ((C5270 * C217 + C32948 * C232 + C5271 * C216 + C32935 * C231 +
             C5272 * C215 + C32905 * C230) *
                C118 +
            (C5270 * C227 + C32948 * C247 + C5271 * C226 + C32935 * C246 +
             C5272 * C225 + C32905 * C245) *
                C32644) *
               C5268 +
           ((C5270 * C218 + C32948 * C233 + C5271 * C219 + C32935 * C234 +
             C5272 * C220 + C32905 * C235) *
                C118 +
            (C5270 * C238 + C32948 * C248 + C5271 * C239 + C32935 * C249 +
             C5272 * C240 + C32905 * C250) *
                C32644) *
               C32916) *
              C32603 * C32589 * C110 -
          (((C5272 * C241 + C32905 * C251 + C5271 * C240 + C32935 * C250 +
             C5270 * C239 + C32948 * C249) *
                C32644 +
            (C5272 * C221 + C32905 * C236 + C5271 * C220 + C32935 * C235 +
             C5270 * C219 + C32948 * C234) *
                C118) *
               C32916 +
           ((C5272 * C224 + C32905 * C244 + C5271 * C225 + C32935 * C245 +
             C5270 * C226 + C32948 * C246) *
                C32644 +
            (C5272 * C214 + C32905 * C229 + C5271 * C215 + C32935 * C230 +
             C5270 * C216 + C32948 * C231) *
                C118) *
               C5268 +
           ((C5272 * C134 + C32905 * C143 + C5271 * C133 + C32935 * C142 +
             C5270 * C132 + C32948 * C141) *
                C32644 +
            (C5272 * C122 + C32905 * C129 + C5271 * C121 + C32935 * C128 +
             C5270 * C120 + C32948 * C127) *
                C118) *
               C5267) *
              C32603 * C32589 * C111 +
          (((C5270 * C121 + C32948 * C128 + C5271 * C122 + C32935 * C129 +
             C5272 * C123 + C32905 * C130) *
                C118 +
            (C5270 * C133 + C32948 * C142 + C5271 * C134 + C32935 * C143 +
             C5272 * C135 + C32905 * C144) *
                C32644) *
               C5267 +
           ((C5270 * C215 + C32948 * C230 + C5271 * C214 + C32935 * C229 +
             C5272 * C213 + C32905 * C228) *
                C118 +
            (C5270 * C225 + C32948 * C245 + C5271 * C224 + C32935 * C244 +
             C5272 * C223 + C32905 * C243) *
                C32644) *
               C5268 +
           ((C5270 * C220 + C32948 * C235 + C5271 * C221 + C32935 * C236 +
             C5272 * C222 + C32905 * C237) *
                C118 +
            (C5270 * C240 + C32948 * C250 + C5271 * C241 + C32935 * C251 +
             C5272 * C242 + C32905 * C252) *
                C32644) *
               C32916) *
              C32603 * C32589 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C5270 * C119 + C32948 * C126 + C5271 * C120 + C32935 * C127 +
             C5272 * C121 + C32905 * C128) *
                C118 +
            (C5270 * C131 + C32948 * C140 + C5271 * C132 + C32935 * C141 +
             C5272 * C133 + C32905 * C142) *
                C32644) *
               C5267 +
           ((C5420 + C5421 + C5422) * C118 + (C5423 + C5424 + C5425) * C32644) *
               C5268 +
           C5444 * C32916) *
              C32603 * C209 -
          (((C5432 + C5433 + C5434) * C32644 + (C5435 + C5436 + C5437) * C118) *
               C32916 +
           ((C5431 + C5430 + C5429) * C32644 + (C5428 + C5427 + C5426) * C118) *
               C5268 +
           ((C5425 + C5424 + C5423) * C32644 + (C5422 + C5421 + C5420) * C118) *
               C5267) *
              C32603 * C210 +
          (C5444 * C5267 +
           ((C5437 + C5436 + C5435) * C118 + (C5434 + C5433 + C5432) * C32644) *
               C5268 +
           ((C5270 * C870 + C32948 * C879 + C5271 * C871 + C32935 * C880 +
             C5272 * C872 + C32905 * C881) *
                C118 +
            (C5270 * C882 + C32948 * C888 + C5271 * C883 + C32935 * C889 +
             C5272 * C884 + C32905 * C890) *
                C32644) *
               C32916) *
              C32603 * C211) *
         C32577) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C6132 * C119 + C32540 * C126) * C118 +
            (C6132 * C131 + C32540 * C140) * C32644) *
               C6127 +
           ((C6132 * C217 + C32540 * C232) * C118 +
            (C6132 * C227 + C32540 * C247) * C32644) *
               C6128 +
           ((C6132 * C218 + C32540 * C233) * C118 +
            (C6132 * C238 + C32540 * C248) * C32644) *
               C6129 +
           ((C6132 * C869 + C32540 * C878) * C118 +
            (C6132 * C875 + C32540 * C887) * C32644) *
               C6130 +
           ((C6132 * C870 + C32540 * C879) * C118 +
            (C6132 * C882 + C32540 * C888) * C32644) *
               C6131) *
              C32603 * C32589 * C110 -
          (((C6132 * C883 + C32540 * C889) * C32644 +
            (C6132 * C871 + C32540 * C880) * C118) *
               C6131 +
           ((C6132 * C874 + C32540 * C886) * C32644 +
            (C6132 * C868 + C32540 * C877) * C118) *
               C6130 +
           ((C6132 * C239 + C32540 * C249) * C32644 +
            (C6132 * C219 + C32540 * C234) * C118) *
               C6129 +
           ((C6132 * C226 + C32540 * C246) * C32644 +
            (C6132 * C216 + C32540 * C231) * C118) *
               C6128 +
           ((C6132 * C132 + C32540 * C141) * C32644 +
            (C6132 * C120 + C32540 * C127) * C118) *
               C6127) *
              C32603 * C32589 * C111 +
          (((C6132 * C121 + C32540 * C128) * C118 +
            (C6132 * C133 + C32540 * C142) * C32644) *
               C6127 +
           ((C6132 * C215 + C32540 * C230) * C118 +
            (C6132 * C225 + C32540 * C245) * C32644) *
               C6128 +
           ((C6132 * C220 + C32540 * C235) * C118 +
            (C6132 * C240 + C32540 * C250) * C32644) *
               C6129 +
           ((C6132 * C867 + C32540 * C876) * C118 +
            (C6132 * C873 + C32540 * C885) * C32644) *
               C6130 +
           ((C6132 * C872 + C32540 * C881) * C118 +
            (C6132 * C884 + C32540 * C890) * C32644) *
               C6131) *
              C32603 * C32589 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C6132 * C119 + C32540 * C126) * C118 +
            (C6132 * C131 + C32540 * C140) * C32644) *
               C6127 +
           (C6234 + C6235) * C6128 + C6244 * C6129 + C6245 * C6130 +
           C6246 * C6131) *
              C32603 * C209 -
          ((C6242 + C6243) * C6131 + (C6241 + C6240) * C6130 +
           (C6239 + C6238) * C6129 + (C6237 + C6236) * C6128 +
           (C6235 + C6234) * C6127) *
              C32603 * C210 +
          (C6244 * C6127 + C6245 * C6128 + C6246 * C6129 +
           (C6243 + C6242) * C6130 +
           ((C6132 * C6196 + C32540 * C6199) * C118 +
            (C6132 * C6200 + C32540 * C6202) * C32644) *
               C6131) *
              C32603 * C211) *
         C32577) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C6132 * C119 + C32540 * C126) * C1741 +
            (C6132 * C131 + C32540 * C140) * C32952 +
            (C6132 * C322 + C32540 * C337) * C1742 +
            (C6132 * C332 + C32540 * C352) * C32941 +
            (C6132 * C323 + C32540 * C338) * C1743 +
            (C6132 * C343 + C32540 * C353) * C32919) *
               C5267 +
           (C6224 * C1741 + C6225 * C32952 + C6634 * C1742 + C6633 * C32941 +
            (C6132 * C1065 + C32540 * C1077) * C1743 +
            (C6132 * C1080 + C32540 * C1092) * C32919) *
               C5268 +
           (C6226 * C1741 + C6227 * C32952 + C6632 * C1742 + C6631 * C32941 +
            (C6132 * C1068 + C32540 * C1083) * C1743 +
            (C6132 * C1086 + C32540 * C1095) * C32919) *
               C32916) *
              C32603 * C32589 * C110 -
          (((C6132 * C1087 + C32540 * C1096) * C32919 +
            (C6132 * C1069 + C32540 * C1084) * C1743 +
            (C6132 * C1072 + C32540 * C1090) * C32941 +
            (C6132 * C1063 + C32540 * C1075) * C1742 + C6426 * C32952 +
            C6425 * C1741) *
               C32916 +
           ((C6132 * C1081 + C32540 * C1093) * C32919 +
            (C6132 * C1066 + C32540 * C1078) * C1743 +
            (C6132 * C629 + C32540 * C634) * C32941 +
            (C6132 * C619 + C32540 * C624) * C1742 + C6424 * C32952 +
            C6423 * C1741) *
               C5268 +
           ((C6132 * C344 + C32540 * C354) * C32919 +
            (C6132 * C324 + C32540 * C339) * C1743 +
            (C6132 * C331 + C32540 * C351) * C32941 +
            (C6132 * C321 + C32540 * C336) * C1742 +
            (C6132 * C132 + C32540 * C141) * C32952 +
            (C6132 * C120 + C32540 * C127) * C1741) *
               C5267) *
              C32603 * C32589 * C111 +
          (((C6132 * C121 + C32540 * C128) * C1741 +
            (C6132 * C133 + C32540 * C142) * C32952 +
            (C6132 * C320 + C32540 * C335) * C1742 +
            (C6132 * C330 + C32540 * C350) * C32941 +
            (C6132 * C325 + C32540 * C340) * C1743 +
            (C6132 * C345 + C32540 * C355) * C32919) *
               C5267 +
           ((C6132 * C215 + C32540 * C230) * C1741 +
            (C6132 * C225 + C32540 * C245) * C32952 +
            (C6132 * C620 + C32540 * C625) * C1742 +
            (C6132 * C630 + C32540 * C635) * C32941 +
            (C6132 * C1067 + C32540 * C1079) * C1743 +
            (C6132 * C1082 + C32540 * C1094) * C32919) *
               C5268 +
           ((C6132 * C220 + C32540 * C235) * C1741 +
            (C6132 * C240 + C32540 * C250) * C32952 +
            (C6132 * C1062 + C32540 * C1074) * C1742 +
            (C6132 * C1071 + C32540 * C1089) * C32941 +
            (C6132 * C1070 + C32540 * C1085) * C1743 +
            (C6132 * C1088 + C32540 * C1097) * C32919) *
               C32916) *
              C32603 * C32589 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C6132 * C119 + C32540 * C126) * C1741 +
            (C6132 * C131 + C32540 * C140) * C32952 +
            (C6132 * C322 + C32540 * C337) * C1742 +
            (C6132 * C332 + C32540 * C352) * C32941 +
            (C6132 * C323 + C32540 * C338) * C1743 +
            (C6132 * C343 + C32540 * C353) * C32919) *
               C5267 +
           (C6863 + C6864 + C6865 + C6866 + C6894 + C6895) * C5268 +
           C6903 * C32916) *
              C32603 * C209 -
          ((C6899 + C6900 + C6883 + C6884 + C6885 + C6886) * C32916 +
           (C6898 + C6897 + C6874 + C6873 + C6872 + C6871) * C5268 +
           (C6895 + C6894 + C6866 + C6865 + C6864 + C6863) * C5267) *
              C32603 * C210 +
          (C6903 * C5267 +
           (C6886 + C6885 + C6884 + C6883 + C6900 + C6899) * C5268 +
           (C6230 * C1741 + C6231 * C32952 + C6628 * C1742 + C6627 * C32941 +
            (C6132 * C6310 + C32540 * C6315) * C1743 +
            (C6132 * C6316 + C32540 * C6319) * C32919) *
               C32916) *
              C32603 * C211) *
         C32577) /
            (p * q * std::sqrt(p + q));
    d2ee[115] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2662 * C119 + C2656 * C126 + C2663 * C120 + C2657 * C127 +
             C2664 * C121 + C2658 * C128 + C2665 * C122 + C32920 * C129) *
                C3448 +
            (C2662 * C131 + C2656 * C140 + C2663 * C132 + C2657 * C141 +
             C2664 * C133 + C2658 * C142 + C2665 * C134 + C32920 * C143) *
                C32886 +
            (C3679 + C3680 + C3681 + C3682) * C3449 +
            (C3683 + C3684 + C3685 + C3686) * C32731) *
               C32633 * C32603 * C440 -
           ((C3341 + C3342 + C3343 + C3344) * C32731 +
            (C3345 + C3346 + C3347 + C3348) * C3449 +
            (C2804 + C2803 + C2802 + C2801) * C32886 +
            (C2800 + C2799 + C2798 + C2797) * C3448) *
               C32633 * C32603 * C441) *
              C442 +
          (((C3057 + C3058 + C3059 + C3060) * C3448 +
            (C3061 + C3062 + C3063 + C3064) * C32886 +
            (C2662 * C619 + C2656 * C624 + C2663 * C620 + C2657 * C625 +
             C2664 * C621 + C2658 * C626 + C2665 * C622 + C32920 * C627) *
                C3449 +
            (C2662 * C629 + C2656 * C634 + C2663 * C630 + C2657 * C635 +
             C2664 * C631 + C2658 * C636 + C2665 * C632 + C32920 * C637) *
                C32731) *
               C32633 * C32603 * C441 -
           ((C2665 * C328 + C32920 * C348 + C2664 * C329 + C2658 * C349 +
             C2663 * C330 + C2657 * C350 + C2662 * C331 + C2656 * C351) *
                C32731 +
            (C2665 * C318 + C32920 * C333 + C2664 * C319 + C2658 * C334 +
             C2663 * C320 + C2657 * C335 + C2662 * C321 + C2656 * C336) *
                C3449 +
            (C2665 * C135 + C32920 * C144 + C2664 * C134 + C2658 * C143 +
             C2663 * C133 + C2657 * C142 + C2662 * C132 + C2656 * C141) *
                C32886 +
            (C2665 * C123 + C32920 * C130 + C2664 * C122 + C2658 * C129 +
             C2663 * C121 + C2657 * C128 + C2662 * C120 + C2656 * C127) *
                C3448) *
               C32633 * C32603 * C440) *
              C443)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31557 * C119 + C32866 * C126 + C31538 * C120 + C32550 * C127) *
                 C3448 +
             (C31557 * C131 + C32866 * C140 + C31538 * C132 + C32550 * C141) *
                 C32886 +
             (C8867 + C8868) * C3449 + (C8869 + C8870) * C32731) *
                C5267 +
            ((C7802 + C7803) * C3448 + (C7804 + C7805) * C32886 +
             (C8387 + C8386) * C3449 + (C8385 + C8384) * C32731) *
                C5268 +
            C8688 * C32916) *
               C32603 * C440 -
           (((C8376 + C8377) * C32731 + (C8378 + C8379) * C3449 +
             (C7813 + C7812) * C32886 + (C7811 + C7810) * C3448) *
                C32916 +
            ((C8380 + C8381) * C32731 + (C8382 + C8383) * C3449 +
             (C7809 + C7808) * C32886 + (C7807 + C7806) * C3448) *
                C5268 +
            ((C8384 + C8385) * C32731 + (C8386 + C8387) * C3449 +
             (C7805 + C7804) * C32886 + (C7803 + C7802) * C3448) *
                C5267) *
               C32603 * C441) *
              C442 +
          ((((C8080 + C8081) * C3448 + (C8082 + C8083) * C32886 +
             (C9093 + C9094) * C3449 + (C9095 + C9096) * C32731) *
                C5267 +
            ((C8084 + C8085) * C3448 + (C8086 + C8087) * C32886 +
             (C9097 + C9098) * C3449 + (C9099 + C9100) * C32731) *
                C5268 +
            ((C8088 + C8089) * C3448 + (C8090 + C8091) * C32886 +
             (C31557 * C1581 + C32866 * C1584 + C31538 * C1582 +
              C32550 * C1585) *
                 C3449 +
             (C31557 * C1587 + C32866 * C1590 + C31538 * C1588 +
              C32550 * C1591) *
                 C32731) *
                C32916) *
               C32603 * C441 -
           (((C9100 + C9099) * C32731 + (C9098 + C9097) * C3449 +
             (C8087 + C8086) * C32886 + (C8085 + C8084) * C3448) *
                C32916 +
            ((C9096 + C9095) * C32731 + (C9094 + C9093) * C3449 +
             (C8083 + C8082) * C32886 + (C8081 + C8080) * C3448) *
                C5268 +
            ((C31538 * C330 + C32550 * C350 + C31557 * C331 + C32866 * C351) *
                 C32731 +
             (C31538 * C320 + C32550 * C335 + C31557 * C321 + C32866 * C336) *
                 C3449 +
             (C31538 * C133 + C32550 * C142 + C31557 * C132 + C32866 * C141) *
                 C32886 +
             (C31538 * C121 + C32550 * C128 + C31557 * C120 + C32866 * C127) *
                 C3448) *
                C5267) *
               C32603 * C440) *
              C443)) /
            (p * q * std::sqrt(p + q));
    d2ee[116] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2662 * C119 + C2656 * C126 + C2663 * C120 + C2657 * C127 +
             C2664 * C121 + C2658 * C128 + C2665 * C122 + C32920 * C129) *
                C3448 +
            (C2662 * C131 + C2656 * C140 + C2663 * C132 + C2657 * C141 +
             C2664 * C133 + C2658 * C142 + C2665 * C134 + C32920 * C143) *
                C32886 +
            (C3679 + C3680 + C3681 + C3682) * C3449 +
            (C3683 + C3684 + C3685 + C3686) * C32731) *
               C32633 * C530 -
           ((C3687 + C3688 + C3689 + C3690) * C32731 +
            (C3691 + C3692 + C3693 + C3694) * C3449 +
            (C3686 + C3685 + C3684 + C3683) * C32886 +
            (C3682 + C3681 + C3680 + C3679) * C3448) *
               C32633 * C531) *
              C440 +
          (((C3348 + C3347 + C3346 + C3345) * C3448 +
            (C3344 + C3343 + C3342 + C3341) * C32886 +
            (C2662 * C1065 + C2656 * C1077 + C2663 * C1066 + C2657 * C1078 +
             C2664 * C1067 + C2658 * C1079 + C2665 * C2192 + C32920 * C2193) *
                C3449 +
            (C2662 * C1080 + C2656 * C1092 + C2663 * C1081 + C2657 * C1093 +
             C2664 * C1082 + C2658 * C1094 + C2665 * C2194 + C32920 * C2195) *
                C32731) *
               C32633 * C531 -
           ((C3341 + C3342 + C3343 + C3344) * C32731 +
            (C3345 + C3346 + C3347 + C3348) * C3449 +
            (C2804 + C2803 + C2802 + C2801) * C32886 +
            (C2800 + C2799 + C2798 + C2797) * C3448) *
               C32633 * C530) *
              C441) *
         C32577) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31557 * C119 + C32866 * C126 + C31538 * C120 + C32550 * C127) *
                 C3448 +
             (C31557 * C131 + C32866 * C140 + C31538 * C132 + C32550 * C141) *
                 C32886 +
             (C8867 + C8868) * C3449 + (C8869 + C8870) * C32731) *
                C5267 +
            ((C7802 + C7803) * C3448 + (C7804 + C7805) * C32886 +
             C9501 * C3449 + C9502 * C32731) *
                C5268 +
            C8688 * C32916) *
               C530 -
           (((C8871 + C8872) * C32731 + (C8873 + C8874) * C3449 +
             C9503 * C32886 + C9504 * C3448) *
                C32916 +
            ((C8875 + C8876) * C32731 + (C8877 + C8878) * C3449 +
             C9505 * C32886 + C9506 * C3448) *
                C5268 +
            ((C8879 + C8880) * C32731 + (C8881 + C8882) * C3449 +
             (C8870 + C8869) * C32886 + (C8868 + C8867) * C3448) *
                C5267) *
               C531) *
              C440 +
          (((C9501 * C3448 + C9502 * C32886 + (C8878 + C8877) * C3449 +
             (C8876 + C8875) * C32731) *
                C5267 +
            (C8682 * C3448 + C8683 * C32886 + (C8874 + C8873) * C3449 +
             (C8872 + C8871) * C32731) *
                C5268 +
            ((C8379 + C8378) * C3448 + (C8377 + C8376) * C32886 +
             (C31557 * C6309 + C32866 * C6313 + C31538 * C7201 +
              C32550 * C7202) *
                 C3449 +
             (C31557 * C6314 + C32866 * C6318 + C31538 * C7203 +
              C32550 * C7204) *
                 C32731) *
                C32916) *
               C531 -
           (((C8376 + C8377) * C32731 + (C8378 + C8379) * C3449 +
             (C7813 + C7812) * C32886 + (C7811 + C7810) * C3448) *
                C32916 +
            (C9503 * C32731 + C9504 * C3449 + (C7809 + C7808) * C32886 +
             (C7807 + C7806) * C3448) *
                C5268 +
            (C9505 * C32731 + C9506 * C3449 + (C7805 + C7804) * C32886 +
             (C7803 + C7802) * C3448) *
                C5267) *
               C530) *
              C441) *
         C32577) /
            (p * q * std::sqrt(p + q));
    d2ee[117] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C2662 * C119 + C2656 * C126 + C2663 * C120 + C2657 * C127 +
            C2664 * C121 + C2658 * C128 + C2665 * C122 + C32920 * C129) *
               C3448 +
           (C2662 * C131 + C2656 * C140 + C2663 * C132 + C2657 * C141 +
            C2664 * C133 + C2658 * C142 + C2665 * C134 + C32920 * C143) *
               C32886 +
           (C2662 * C322 + C2656 * C337 + C2663 * C321 + C2657 * C336 +
            C2664 * C320 + C2658 * C335 + C2665 * C319 + C32920 * C334) *
               C3449 +
           (C2662 * C332 + C2656 * C352 + C2663 * C331 + C2657 * C351 +
            C2664 * C330 + C2658 * C350 + C2665 * C329 + C32920 * C349) *
               C32731) *
              C32633 * C32603 * C209 -
          ((C3341 + C3342 + C3343 + C3344) * C32731 +
           (C3345 + C3346 + C3347 + C3348) * C3449 +
           (C2804 + C2803 + C2802 + C2801) * C32886 +
           (C2800 + C2799 + C2798 + C2797) * C3448) *
              C32633 * C32603 * C210 +
          ((C2812 + C2811 + C2810 + C2809) * C3448 +
           (C2808 + C2807 + C2806 + C2805) * C32886 +
           (C2662 * C1064 + C2656 * C1076 + C2663 * C1063 + C2657 * C1075 +
            C2664 * C1062 + C2658 * C1074 + C2665 * C1430 + C32920 * C1431) *
               C3449 +
           (C2662 * C1073 + C2656 * C1091 + C2663 * C1072 + C2657 * C1090 +
            C2664 * C1071 + C2658 * C1089 + C2665 * C1432 + C32920 * C1433) *
               C32731) *
              C32633 * C32603 * C211) *
         C32577) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C2662 * C119 + C2656 * C126 + C2663 * C120 + C2657 * C127 +
            C2664 * C121 + C2658 * C128 + C2665 * C122 + C32920 * C129) *
               C3448 +
           (C2662 * C131 + C2656 * C140 + C2663 * C132 + C2657 * C141 +
            C2664 * C133 + C2658 * C142 + C2665 * C134 + C32920 * C143) *
               C32886 +
           (C2662 * C322 + C2656 * C337 + C2663 * C321 + C2657 * C336 +
            C2664 * C320 + C2658 * C335 + C2665 * C319 + C32920 * C334) *
               C3449 +
           (C2662 * C332 + C2656 * C352 + C2663 * C331 + C2657 * C351 +
            C2664 * C330 + C2658 * C350 + C2665 * C329 + C32920 * C349) *
               C32731) *
              C32633 * C32603 * C32589 * C110 -
          ((C2665 * C328 + C32920 * C348 + C2664 * C329 + C2658 * C349 +
            C2663 * C330 + C2657 * C350 + C2662 * C331 + C2656 * C351) *
               C32731 +
           (C2665 * C318 + C32920 * C333 + C2664 * C319 + C2658 * C334 +
            C2663 * C320 + C2657 * C335 + C2662 * C321 + C2656 * C336) *
               C3449 +
           (C2665 * C135 + C32920 * C144 + C2664 * C134 + C2658 * C143 +
            C2663 * C133 + C2657 * C142 + C2662 * C132 + C2656 * C141) *
               C32886 +
           (C2665 * C123 + C32920 * C130 + C2664 * C122 + C2658 * C129 +
            C2663 * C121 + C2657 * C128 + C2662 * C120 + C2656 * C127) *
               C3448) *
              C32633 * C32603 * C32589 * C111 +
          ((C2662 * C121 + C2656 * C128 + C2663 * C122 + C2657 * C129 +
            C2664 * C123 + C2658 * C130 + C2665 * C124 + C32920 * C137) *
               C3448 +
           (C2662 * C133 + C2656 * C142 + C2663 * C134 + C2657 * C143 +
            C2664 * C135 + C2658 * C144 + C2665 * C136 + C32920 * C145) *
               C32886 +
           (C2662 * C320 + C2656 * C335 + C2663 * C319 + C2657 * C334 +
            C2664 * C318 + C2658 * C333 + C2665 * C532 + C32920 * C533) *
               C3449 +
           (C2662 * C330 + C2656 * C350 + C2663 * C329 + C2657 * C349 +
            C2664 * C328 + C2658 * C348 + C2665 * C534 + C32920 * C535) *
               C32731) *
              C32633 * C32603 * C32589 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C2662 * C119 + C2656 * C126 + C2663 * C120 + C2657 * C127 +
            C2664 * C121 + C2658 * C128 + C2665 * C122 + C32920 * C129) *
               C3448 +
           (C2662 * C131 + C2656 * C140 + C2663 * C132 + C2657 * C141 +
            C2664 * C133 + C2658 * C142 + C2665 * C134 + C32920 * C143) *
               C32886 +
           (C3679 + C3680 + C3681 + C3682) * C3449 +
           (C3683 + C3684 + C3685 + C3686) * C32731) *
              C32633 * C315 -
          ((C3687 + C3688 + C3689 + C3690) * C32731 +
           (C3691 + C3692 + C3693 + C3694) * C3449 +
           (C3686 + C3685 + C3684 + C3683) * C32886 +
           (C3682 + C3681 + C3680 + C3679) * C3448) *
              C32633 * C316 +
          ((C3694 + C3693 + C3692 + C3691) * C3448 +
           (C3690 + C3689 + C3688 + C3687) * C32886 +
           (C2662 * C1966 + C2656 * C1975 + C2663 * C1965 + C2657 * C1974 +
            C2664 * C1964 + C2658 * C1973 + C2665 * C2342 + C32920 * C2343) *
               C3449 +
           (C2662 * C1972 + C2656 * C1984 + C2663 * C1971 + C2657 * C1983 +
            C2664 * C1970 + C2658 * C1982 + C2665 * C2344 + C32920 * C2345) *
               C32731) *
              C32633 * C317) *
         C32589 * C32577) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C31557 * C119 + C32866 * C126 + C31538 * C120 + C32550 * C127) *
                C3448 +
            (C31557 * C131 + C32866 * C140 + C31538 * C132 + C32550 * C141) *
                C32886 +
            (C31557 * C322 + C32866 * C337 + C31538 * C321 + C32550 * C336) *
                C3449 +
            (C31557 * C332 + C32866 * C352 + C31538 * C331 + C32550 * C351) *
                C32731) *
               C5267 +
           ((C7802 + C7803) * C3448 + (C7804 + C7805) * C32886 +
            (C8387 + C8386) * C3449 + (C8385 + C8384) * C32731) *
               C5268 +
           (C7818 * C3448 + C7819 * C32886 + (C8383 + C8382) * C3449 +
            (C8381 + C8380) * C32731) *
               C32916) *
              C32603 * C32589 * C110 -
          (((C31538 * C1071 + C32550 * C1089 + C31557 * C1072 +
             C32866 * C1090) *
                C32731 +
            (C31538 * C1062 + C32550 * C1074 + C31557 * C1063 +
             C32866 * C1075) *
                C3449 +
            (C8087 + C8086) * C32886 + (C8085 + C8084) * C3448) *
               C32916 +
           ((C31538 * C630 + C32550 * C635 + C31557 * C629 + C32866 * C634) *
                C32731 +
            (C31538 * C620 + C32550 * C625 + C31557 * C619 + C32866 * C624) *
                C3449 +
            (C8083 + C8082) * C32886 + (C8081 + C8080) * C3448) *
               C5268 +
           ((C31538 * C330 + C32550 * C350 + C31557 * C331 + C32866 * C351) *
                C32731 +
            (C31538 * C320 + C32550 * C335 + C31557 * C321 + C32866 * C336) *
                C3449 +
            (C31538 * C133 + C32550 * C142 + C31557 * C132 + C32866 * C141) *
                C32886 +
            (C31538 * C121 + C32550 * C128 + C31557 * C120 + C32866 * C127) *
                C3448) *
               C5267) *
              C32603 * C32589 * C111 +
          (((C31557 * C121 + C32866 * C128 + C31538 * C122 + C32550 * C129) *
                C3448 +
            (C31557 * C133 + C32866 * C142 + C31538 * C134 + C32550 * C143) *
                C32886 +
            (C31557 * C320 + C32866 * C335 + C31538 * C319 + C32550 * C334) *
                C3449 +
            (C31557 * C330 + C32866 * C350 + C31538 * C329 + C32550 * C349) *
                C32731) *
               C5267 +
           ((C31557 * C215 + C32866 * C230 + C31538 * C214 + C32550 * C229) *
                C3448 +
            (C31557 * C225 + C32866 * C245 + C31538 * C224 + C32550 * C244) *
                C32886 +
            (C31557 * C620 + C32866 * C625 + C31538 * C621 + C32550 * C626) *
                C3449 +
            (C31557 * C630 + C32866 * C635 + C31538 * C631 + C32550 * C636) *
                C32731) *
               C5268 +
           ((C31557 * C220 + C32866 * C235 + C31538 * C221 + C32550 * C236) *
                C3448 +
            (C31557 * C240 + C32866 * C250 + C31538 * C241 + C32550 * C251) *
                C32886 +
            (C31557 * C1062 + C32866 * C1074 + C31538 * C1430 +
             C32550 * C1431) *
                C3449 +
            (C31557 * C1071 + C32866 * C1089 + C31538 * C1432 +
             C32550 * C1433) *
                C32731) *
               C32916) *
              C32603 * C32589 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C31557 * C119 + C32866 * C126 + C31538 * C120 + C32550 * C127) *
                C3448 +
            (C31557 * C131 + C32866 * C140 + C31538 * C132 + C32550 * C141) *
                C32886 +
            (C31557 * C322 + C32866 * C337 + C31538 * C321 + C32550 * C336) *
                C3449 +
            (C31557 * C332 + C32866 * C352 + C31538 * C331 + C32550 * C351) *
                C32731) *
               C5267 +
           ((C7802 + C7803) * C3448 + (C7804 + C7805) * C32886 +
            (C8387 + C8386) * C3449 + (C8385 + C8384) * C32731) *
               C5268 +
           C8688 * C32916) *
              C32603 * C209 -
          (((C8376 + C8377) * C32731 + (C8378 + C8379) * C3449 +
            (C7813 + C7812) * C32886 + (C7811 + C7810) * C3448) *
               C32916 +
           ((C8380 + C8381) * C32731 + (C8382 + C8383) * C3449 +
            (C7809 + C7808) * C32886 + (C7807 + C7806) * C3448) *
               C5268 +
           ((C8384 + C8385) * C32731 + (C8386 + C8387) * C3449 +
            (C7805 + C7804) * C32886 + (C7803 + C7802) * C3448) *
               C5267) *
              C32603 * C210 +
          (C8688 * C5267 +
           (C7820 * C3448 + C7821 * C32886 + (C8379 + C8378) * C3449 +
            (C8377 + C8376) * C32731) *
               C5268 +
           ((C7817 + C7816) * C3448 + (C7815 + C7814) * C32886 +
            (C31557 * C6308 + C32866 * C6312 + C31538 * C6520 +
             C32550 * C6521) *
                C3449 +
            (C31557 * C6311 + C32866 * C6317 + C31538 * C6522 +
             C32550 * C6523) *
                C32731) *
               C32916) *
              C32603 * C211) *
         C32577) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C31557 * C119 + C32866 * C126 + C31538 * C120 + C32550 * C127) *
                C3448 +
            (C31557 * C131 + C32866 * C140 + C31538 * C132 + C32550 * C141) *
                C32886 +
            (C8867 + C8868) * C3449 + (C8869 + C8870) * C32731) *
               C5267 +
           ((C7802 + C7803) * C3448 + (C7804 + C7805) * C32886 +
            (C8387 + C8386) * C3449 + (C8385 + C8384) * C32731) *
               C5268 +
           C8688 * C32916) *
              C315 -
          (((C8871 + C8872) * C32731 + (C8873 + C8874) * C3449 +
            (C8380 + C8381) * C32886 + (C8382 + C8383) * C3448) *
               C32916 +
           ((C8875 + C8876) * C32731 + (C8877 + C8878) * C3449 +
            (C8384 + C8385) * C32886 + (C8386 + C8387) * C3448) *
               C5268 +
           ((C8879 + C8880) * C32731 + (C8881 + C8882) * C3449 +
            (C8870 + C8869) * C32886 + (C8868 + C8867) * C3448) *
               C5267) *
              C316 +
          (((C8882 + C8881) * C3448 + (C8880 + C8879) * C32886 +
            (C31557 * C1966 + C32866 * C1975 + C31538 * C1965 +
             C32550 * C1974) *
                C3449 +
            (C31557 * C1972 + C32866 * C1984 + C31538 * C1971 +
             C32550 * C1983) *
                C32731) *
               C5267 +
           ((C8878 + C8877) * C3448 + (C8876 + C8875) * C32886 +
            (C31557 * C2528 + C32866 * C2531 + C31538 * C2529 +
             C32550 * C2532) *
                C3449 +
            (C31557 * C2534 + C32866 * C2537 + C31538 * C2535 +
             C32550 * C2538) *
                C32731) *
               C5268 +
           ((C8874 + C8873) * C3448 + (C8872 + C8871) * C32886 +
            (C31557 * C7013 + C32866 * C7017 + C31538 * C7387 +
             C32550 * C7388) *
                C3449 +
            (C31557 * C7016 + C32866 * C7022 + C31538 * C7389 +
             C32550 * C7390) *
                C32731) *
               C32916) *
              C317) *
         C32589 * C32577) /
            (p * q * std::sqrt(p + q));
    d2ee[118] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2662 * C119 + C2656 * C126 + C2663 * C120 + C2657 * C127 +
             C2664 * C121 + C2658 * C128 + C2665 * C122 + C32920 * C129) *
                C3448 +
            (C2662 * C131 + C2656 * C140 + C2663 * C132 + C2657 * C141 +
             C2664 * C133 + C2658 * C142 + C2665 * C134 + C32920 * C143) *
                C32886 +
            (C3679 + C3680 + C3681 + C3682) * C3449 +
            (C3683 + C3684 + C3685 + C3686) * C32731) *
               C32633 * C530 -
           ((C3687 + C3688 + C3689 + C3690) * C32731 +
            (C3691 + C3692 + C3693 + C3694) * C3449 +
            (C3686 + C3685 + C3684 + C3683) * C32886 +
            (C3682 + C3681 + C3680 + C3679) * C3448) *
               C32633 * C531) *
              C32589 * C442 +
          (((C3971 + C3972 + C3973 + C3974) * C3448 +
            (C3975 + C3976 + C3977 + C3978) * C32886 +
            (C2662 * C324 + C2656 * C339 + C2663 * C325 + C2657 * C340 +
             C2664 * C326 + C2658 * C341 + C2665 * C327 + C32920 * C342) *
                C3449 +
            (C2662 * C344 + C2656 * C354 + C2663 * C345 + C2657 * C355 +
             C2664 * C346 + C2658 * C356 + C2665 * C347 + C32920 * C357) *
                C32731) *
               C32633 * C531 -
           ((C3978 + C3977 + C3976 + C3975) * C32731 +
            (C3974 + C3973 + C3972 + C3971) * C3449 +
            (C2665 * C135 + C32920 * C144 + C2664 * C134 + C2658 * C143 +
             C2663 * C133 + C2657 * C142 + C2662 * C132 + C2656 * C141) *
                C32886 +
            (C2665 * C123 + C32920 * C130 + C2664 * C122 + C2658 * C129 +
             C2663 * C121 + C2657 * C128 + C2662 * C120 + C2656 * C127) *
                C3448) *
               C32633 * C530) *
              C32589 * C443)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31557 * C119 + C32866 * C126 + C31538 * C120 + C32550 * C127) *
                 C3448 +
             (C31557 * C131 + C32866 * C140 + C31538 * C132 + C32550 * C141) *
                 C32886 +
             (C8867 + C8868) * C3449 + (C8869 + C8870) * C32731) *
                C5267 +
            ((C7802 + C7803) * C3448 + (C7804 + C7805) * C32886 +
             (C8387 + C8386) * C3449 + (C8385 + C8384) * C32731) *
                C5268 +
            C8688 * C32916) *
               C530 -
           (((C8871 + C8872) * C32731 + (C8873 + C8874) * C3449 +
             (C8380 + C8381) * C32886 + (C8382 + C8383) * C3448) *
                C32916 +
            ((C8875 + C8876) * C32731 + (C8877 + C8878) * C3449 +
             (C8384 + C8385) * C32886 + (C8386 + C8387) * C3448) *
                C5268 +
            ((C8879 + C8880) * C32731 + (C8881 + C8882) * C3449 +
             (C8870 + C8869) * C32886 + (C8868 + C8867) * C3448) *
                C5267) *
               C531) *
              C32589 * C442 +
          ((((C9303 + C9304) * C3448 + (C9305 + C9306) * C32886 +
             (C31557 * C324 + C32866 * C339 + C31538 * C325 + C32550 * C340) *
                 C3449 +
             (C31557 * C344 + C32866 * C354 + C31538 * C345 + C32550 * C355) *
                 C32731) *
                C5267 +
            ((C9093 + C9094) * C3448 + (C9095 + C9096) * C32886 +
             (C31557 * C1066 + C32866 * C1078 + C31538 * C1067 +
              C32550 * C1079) *
                 C3449 +
             (C31557 * C1081 + C32866 * C1093 + C31538 * C1082 +
              C32550 * C1094) *
                 C32731) *
                C5268 +
            ((C9097 + C9098) * C3448 + (C9099 + C9100) * C32886 +
             (C31557 * C1069 + C32866 * C1084 + C31538 * C1070 +
              C32550 * C1085) *
                 C3449 +
             (C31557 * C1087 + C32866 * C1096 + C31538 * C1088 +
              C32550 * C1097) *
                 C32731) *
                C32916) *
               C531 -
           (((C9100 + C9099) * C32731 + (C9098 + C9097) * C3449 +
             (C8087 + C8086) * C32886 + (C8085 + C8084) * C3448) *
                C32916 +
            ((C9096 + C9095) * C32731 + (C9094 + C9093) * C3449 +
             (C8083 + C8082) * C32886 + (C8081 + C8080) * C3448) *
                C5268 +
            ((C9306 + C9305) * C32731 + (C9304 + C9303) * C3449 +
             (C31538 * C133 + C32550 * C142 + C31557 * C132 + C32866 * C141) *
                 C32886 +
             (C31538 * C121 + C32550 * C128 + C31557 * C120 + C32866 * C127) *
                 C3448) *
                C5267) *
               C530) *
              C32589 * C443)) /
            (p * q * std::sqrt(p + q));
    d2ee[119] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C2662 * C119 + C2656 * C126 + C2663 * C120 + C2657 * C127 +
            C2664 * C121 + C2658 * C128 + C2665 * C122 + C32920 * C129) *
               C3448 +
           (C2662 * C131 + C2656 * C140 + C2663 * C132 + C2657 * C141 +
            C2664 * C133 + C2658 * C142 + C2665 * C134 + C32920 * C143) *
               C32886 +
           (C2662 * C322 + C2656 * C337 + C2663 * C321 + C2657 * C336 +
            C2664 * C320 + C2658 * C335 + C2665 * C319 + C32920 * C334) *
               C3449 +
           (C2662 * C332 + C2656 * C352 + C2663 * C331 + C2657 * C351 +
            C2664 * C330 + C2658 * C350 + C2665 * C329 + C32920 * C349) *
               C32731) *
              C32633 * C32603 * C32589 * C110 -
          ((C2665 * C328 + C32920 * C348 + C2664 * C329 + C2658 * C349 +
            C2663 * C330 + C2657 * C350 + C2662 * C331 + C2656 * C351) *
               C32731 +
           (C2665 * C318 + C32920 * C333 + C2664 * C319 + C2658 * C334 +
            C2663 * C320 + C2657 * C335 + C2662 * C321 + C2656 * C336) *
               C3449 +
           (C2665 * C135 + C32920 * C144 + C2664 * C134 + C2658 * C143 +
            C2663 * C133 + C2657 * C142 + C2662 * C132 + C2656 * C141) *
               C32886 +
           (C2665 * C123 + C32920 * C130 + C2664 * C122 + C2658 * C129 +
            C2663 * C121 + C2657 * C128 + C2662 * C120 + C2656 * C127) *
               C3448) *
              C32633 * C32603 * C32589 * C111 +
          ((C2662 * C121 + C2656 * C128 + C2663 * C122 + C2657 * C129 +
            C2664 * C123 + C2658 * C130 + C2665 * C124 + C32920 * C137) *
               C3448 +
           (C2662 * C133 + C2656 * C142 + C2663 * C134 + C2657 * C143 +
            C2664 * C135 + C2658 * C144 + C2665 * C136 + C32920 * C145) *
               C32886 +
           (C2662 * C320 + C2656 * C335 + C2663 * C319 + C2657 * C334 +
            C2664 * C318 + C2658 * C333 + C2665 * C532 + C32920 * C533) *
               C3449 +
           (C2662 * C330 + C2656 * C350 + C2663 * C329 + C2657 * C349 +
            C2664 * C328 + C2658 * C348 + C2665 * C534 + C32920 * C535) *
               C32731) *
              C32633 * C32603 * C32589 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C2662 * C119 + C2656 * C126 + C2663 * C120 + C2657 * C127 +
            C2664 * C121 + C2658 * C128 + C2665 * C122 + C32920 * C129) *
               C3448 +
           (C2662 * C131 + C2656 * C140 + C2663 * C132 + C2657 * C141 +
            C2664 * C133 + C2658 * C142 + C2665 * C134 + C32920 * C143) *
               C32886 +
           (C2662 * C322 + C2656 * C337 + C2663 * C321 + C2657 * C336 +
            C2664 * C320 + C2658 * C335 + C2665 * C319 + C32920 * C334) *
               C3449 +
           (C2662 * C332 + C2656 * C352 + C2663 * C331 + C2657 * C351 +
            C2664 * C330 + C2658 * C350 + C2665 * C329 + C32920 * C349) *
               C32731) *
              C32633 * C32603 * C209 -
          ((C3341 + C3342 + C3343 + C3344) * C32731 +
           (C3345 + C3346 + C3347 + C3348) * C3449 +
           (C2804 + C2803 + C2802 + C2801) * C32886 +
           (C2800 + C2799 + C2798 + C2797) * C3448) *
              C32633 * C32603 * C210 +
          ((C2812 + C2811 + C2810 + C2809) * C3448 +
           (C2808 + C2807 + C2806 + C2805) * C32886 +
           (C2662 * C1064 + C2656 * C1076 + C2663 * C1063 + C2657 * C1075 +
            C2664 * C1062 + C2658 * C1074 + C2665 * C1430 + C32920 * C1431) *
               C3449 +
           (C2662 * C1073 + C2656 * C1091 + C2663 * C1072 + C2657 * C1090 +
            C2664 * C1071 + C2658 * C1089 + C2665 * C1432 + C32920 * C1433) *
               C32731) *
              C32633 * C32603 * C211) *
         C32577) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C31557 * C119 + C32866 * C126 + C31538 * C120 + C32550 * C127) *
                C3448 +
            (C31557 * C131 + C32866 * C140 + C31538 * C132 + C32550 * C141) *
                C32886 +
            (C31557 * C322 + C32866 * C337 + C31538 * C321 + C32550 * C336) *
                C3449 +
            (C31557 * C332 + C32866 * C352 + C31538 * C331 + C32550 * C351) *
                C32731) *
               C5267 +
           ((C7802 + C7803) * C3448 + (C7804 + C7805) * C32886 +
            (C8387 + C8386) * C3449 + (C8385 + C8384) * C32731) *
               C5268 +
           (C7818 * C3448 + C7819 * C32886 + (C8383 + C8382) * C3449 +
            (C8381 + C8380) * C32731) *
               C32916) *
              C32603 * C32589 * C110 -
          (((C31538 * C1071 + C32550 * C1089 + C31557 * C1072 +
             C32866 * C1090) *
                C32731 +
            (C31538 * C1062 + C32550 * C1074 + C31557 * C1063 +
             C32866 * C1075) *
                C3449 +
            (C8087 + C8086) * C32886 + (C8085 + C8084) * C3448) *
               C32916 +
           ((C31538 * C630 + C32550 * C635 + C31557 * C629 + C32866 * C634) *
                C32731 +
            (C31538 * C620 + C32550 * C625 + C31557 * C619 + C32866 * C624) *
                C3449 +
            (C8083 + C8082) * C32886 + (C8081 + C8080) * C3448) *
               C5268 +
           ((C31538 * C330 + C32550 * C350 + C31557 * C331 + C32866 * C351) *
                C32731 +
            (C31538 * C320 + C32550 * C335 + C31557 * C321 + C32866 * C336) *
                C3449 +
            (C31538 * C133 + C32550 * C142 + C31557 * C132 + C32866 * C141) *
                C32886 +
            (C31538 * C121 + C32550 * C128 + C31557 * C120 + C32866 * C127) *
                C3448) *
               C5267) *
              C32603 * C32589 * C111 +
          (((C31557 * C121 + C32866 * C128 + C31538 * C122 + C32550 * C129) *
                C3448 +
            (C31557 * C133 + C32866 * C142 + C31538 * C134 + C32550 * C143) *
                C32886 +
            (C31557 * C320 + C32866 * C335 + C31538 * C319 + C32550 * C334) *
                C3449 +
            (C31557 * C330 + C32866 * C350 + C31538 * C329 + C32550 * C349) *
                C32731) *
               C5267 +
           ((C31557 * C215 + C32866 * C230 + C31538 * C214 + C32550 * C229) *
                C3448 +
            (C31557 * C225 + C32866 * C245 + C31538 * C224 + C32550 * C244) *
                C32886 +
            (C31557 * C620 + C32866 * C625 + C31538 * C621 + C32550 * C626) *
                C3449 +
            (C31557 * C630 + C32866 * C635 + C31538 * C631 + C32550 * C636) *
                C32731) *
               C5268 +
           ((C31557 * C220 + C32866 * C235 + C31538 * C221 + C32550 * C236) *
                C3448 +
            (C31557 * C240 + C32866 * C250 + C31538 * C241 + C32550 * C251) *
                C32886 +
            (C31557 * C1062 + C32866 * C1074 + C31538 * C1430 +
             C32550 * C1431) *
                C3449 +
            (C31557 * C1071 + C32866 * C1089 + C31538 * C1432 +
             C32550 * C1433) *
                C32731) *
               C32916) *
              C32603 * C32589 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C31557 * C119 + C32866 * C126 + C31538 * C120 + C32550 * C127) *
                C3448 +
            (C31557 * C131 + C32866 * C140 + C31538 * C132 + C32550 * C141) *
                C32886 +
            (C31557 * C322 + C32866 * C337 + C31538 * C321 + C32550 * C336) *
                C3449 +
            (C31557 * C332 + C32866 * C352 + C31538 * C331 + C32550 * C351) *
                C32731) *
               C5267 +
           ((C7802 + C7803) * C3448 + (C7804 + C7805) * C32886 +
            (C8387 + C8386) * C3449 + (C8385 + C8384) * C32731) *
               C5268 +
           C8688 * C32916) *
              C32603 * C209 -
          (((C8376 + C8377) * C32731 + (C8378 + C8379) * C3449 +
            (C7813 + C7812) * C32886 + (C7811 + C7810) * C3448) *
               C32916 +
           ((C8380 + C8381) * C32731 + (C8382 + C8383) * C3449 +
            (C7809 + C7808) * C32886 + (C7807 + C7806) * C3448) *
               C5268 +
           ((C8384 + C8385) * C32731 + (C8386 + C8387) * C3449 +
            (C7805 + C7804) * C32886 + (C7803 + C7802) * C3448) *
               C5267) *
              C32603 * C210 +
          (C8688 * C5267 +
           (C7820 * C3448 + C7821 * C32886 + (C8379 + C8378) * C3449 +
            (C8377 + C8376) * C32731) *
               C5268 +
           ((C7817 + C7816) * C3448 + (C7815 + C7814) * C32886 +
            (C31557 * C6308 + C32866 * C6312 + C31538 * C6520 +
             C32550 * C6521) *
                C3449 +
            (C31557 * C6311 + C32866 * C6317 + C31538 * C6522 +
             C32550 * C6523) *
                C32731) *
               C32916) *
              C32603 * C211) *
         C32577) /
            (p * q * std::sqrt(p + q));
    d2ee[120] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C127 +
             C115 * C121 + C103 * C128 + C116 * C122 + C104 * C129 +
             C117 * C123 + C105 * C130) *
                C118 +
            (C113 * C131 + C101 * C140 + C114 * C132 + C102 * C141 +
             C115 * C133 + C103 * C142 + C116 * C134 + C104 * C143 +
             C117 * C135 + C105 * C144) *
                C32644) *
               C32633 * C32603 * C440 -
           ((C117 * C223 + C105 * C243 + C116 * C224 + C104 * C244 +
             C115 * C225 + C103 * C245 + C114 * C226 + C102 * C246 +
             C113 * C227 + C101 * C247) *
                C32644 +
            (C117 * C213 + C105 * C228 + C116 * C214 + C104 * C229 +
             C115 * C215 + C103 * C230 + C114 * C216 + C102 * C231 +
             C113 * C217 + C101 * C232) *
                C118) *
               C32633 * C32603 * C441) *
              C442 +
          (((C113 * C216 + C101 * C231 + C114 * C215 + C102 * C230 +
             C115 * C214 + C103 * C229 + C116 * C213 + C104 * C228 +
             C117 * C444 + C105 * C445) *
                C118 +
            (C113 * C226 + C101 * C246 + C114 * C225 + C102 * C245 +
             C115 * C224 + C103 * C244 + C116 * C223 + C104 * C243 +
             C117 * C446 + C105 * C447) *
                C32644) *
               C32633 * C32603 * C441 -
           ((C117 * C136 + C105 * C145 + C116 * C135 + C104 * C144 +
             C115 * C134 + C103 * C143 + C114 * C133 + C102 * C142 +
             C113 * C132 + C101 * C141) *
                C32644 +
            (C117 * C124 + C105 * C137 + C116 * C123 + C104 * C130 +
             C115 * C122 + C103 * C129 + C114 * C121 + C102 * C128 +
             C113 * C120 + C101 * C127) *
                C118) *
               C32633 * C32603 * C440) *
              C443)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C754 * C119 + C748 * C126 + C755 * C120 + C749 * C127 +
              C756 * C121 + C32905 * C128) *
                 C118 +
             (C754 * C131 + C748 * C140 + C755 * C132 + C749 * C141 +
              C756 * C133 + C32905 * C142) *
                 C32644) *
                C32951 +
            ((C928 + C929 + C930) * C118 + (C931 + C932 + C933) * C32644) *
                C32939 +
            C952 * C32916) *
               C32603 * C440 -
           (((C940 + C941 + C942) * C32644 + (C943 + C944 + C945) * C118) *
                C32916 +
            ((C939 + C938 + C937) * C32644 + (C936 + C935 + C934) * C118) *
                C32939 +
            ((C933 + C932 + C931) * C32644 + (C930 + C929 + C928) * C118) *
                C32951) *
               C32603 * C441) *
              C442 +
          ((((C1273 + C1274 + C1275) * C118 +
             (C1276 + C1277 + C1278) * C32644) *
                C32951 +
            ((C1279 + C1280 + C1281) * C118 +
             (C1282 + C1283 + C1284) * C32644) *
                C32939 +
            ((C754 * C868 + C748 * C877 + C755 * C867 + C749 * C876 +
              C756 * C1244 + C32905 * C1245) *
                 C118 +
             (C754 * C874 + C748 * C886 + C755 * C873 + C749 * C885 +
              C756 * C1246 + C32905 * C1247) *
                 C32644) *
                C32916) *
               C32603 * C441 -
           (((C1284 + C1283 + C1282) * C32644 +
             (C1281 + C1280 + C1279) * C118) *
                C32916 +
            ((C1278 + C1277 + C1276) * C32644 +
             (C1275 + C1274 + C1273) * C118) *
                C32939 +
            ((C756 * C134 + C32905 * C143 + C755 * C133 + C749 * C142 +
              C754 * C132 + C748 * C141) *
                 C32644 +
             (C756 * C122 + C32905 * C129 + C755 * C121 + C749 * C128 +
              C754 * C120 + C748 * C127) *
                 C118) *
                C32951) *
               C32603 * C440) *
              C443)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C5270 * C119 + C32948 * C126 + C5271 * C120 + C32935 * C127 +
              C5272 * C121 + C32905 * C128) *
                 C118 +
             (C5270 * C131 + C32948 * C140 + C5271 * C132 + C32935 * C141 +
              C5272 * C133 + C32905 * C142) *
                 C32644) *
                C5267 +
            ((C5420 + C5421 + C5422) * C118 +
             (C5423 + C5424 + C5425) * C32644) *
                C5268 +
            C5444 * C32916) *
               C32603 * C440 -
           (((C5432 + C5433 + C5434) * C32644 +
             (C5435 + C5436 + C5437) * C118) *
                C32916 +
            ((C5431 + C5430 + C5429) * C32644 +
             (C5428 + C5427 + C5426) * C118) *
                C5268 +
            ((C5425 + C5424 + C5423) * C32644 +
             (C5422 + C5421 + C5420) * C118) *
                C5267) *
               C32603 * C441) *
              C442 +
          ((((C5725 + C5726 + C5727) * C118 +
             (C5728 + C5729 + C5730) * C32644) *
                C5267 +
            ((C5731 + C5732 + C5733) * C118 +
             (C5734 + C5735 + C5736) * C32644) *
                C5268 +
            ((C5270 * C868 + C32948 * C877 + C5271 * C867 + C32935 * C876 +
              C5272 * C1244 + C32905 * C1245) *
                 C118 +
             (C5270 * C874 + C32948 * C886 + C5271 * C873 + C32935 * C885 +
              C5272 * C1246 + C32905 * C1247) *
                 C32644) *
                C32916) *
               C32603 * C441 -
           (((C5736 + C5735 + C5734) * C32644 +
             (C5733 + C5732 + C5731) * C118) *
                C32916 +
            ((C5730 + C5729 + C5728) * C32644 +
             (C5727 + C5726 + C5725) * C118) *
                C5268 +
            ((C5272 * C134 + C32905 * C143 + C5271 * C133 + C32935 * C142 +
              C5270 * C132 + C32948 * C141) *
                 C32644 +
             (C5272 * C122 + C32905 * C129 + C5271 * C121 + C32935 * C128 +
              C5270 * C120 + C32948 * C127) *
                 C118) *
                C5267) *
               C32603 * C440) *
              C443)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C6132 * C119 + C32540 * C126) * C118 +
             (C6132 * C131 + C32540 * C140) * C32644) *
                C6127 +
            (C6234 + C6235) * C6128 + C6244 * C6129 + C6245 * C6130 +
            C6246 * C6131) *
               C32603 * C440 -
           ((C6242 + C6243) * C6131 + (C6241 + C6240) * C6130 +
            (C6239 + C6238) * C6129 + (C6237 + C6236) * C6128 +
            (C6235 + C6234) * C6127) *
               C32603 * C441) *
              C442 +
          (((C6431 + C6432) * C6127 + (C6433 + C6434) * C6128 +
            (C6435 + C6436) * C6129 + (C6437 + C6438) * C6130 +
            ((C6132 * C6402 + C32540 * C6403) * C118 +
             (C6132 * C6404 + C32540 * C6405) * C32644) *
                C6131) *
               C32603 * C441 -
           ((C6438 + C6437) * C6131 + (C6436 + C6435) * C6130 +
            (C6434 + C6433) * C6129 + (C6432 + C6431) * C6128 +
            ((C6132 * C132 + C32540 * C141) * C32644 +
             (C6132 * C120 + C32540 * C127) * C118) *
                C6127) *
               C32603 * C440) *
              C443)) /
            (p * q * std::sqrt(p + q));
    d2ee[121] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C127 +
             C115 * C121 + C103 * C128 + C116 * C122 + C104 * C129 +
             C117 * C123 + C105 * C130) *
                C118 +
            (C113 * C131 + C101 * C140 + C114 * C132 + C102 * C141 +
             C115 * C133 + C103 * C142 + C116 * C134 + C104 * C143 +
             C117 * C135 + C105 * C144) *
                C32644) *
               C32633 * C530 -
           ((C117 * C328 + C105 * C348 + C116 * C329 + C104 * C349 +
             C115 * C330 + C103 * C350 + C114 * C331 + C102 * C351 +
             C113 * C332 + C101 * C352) *
                C32644 +
            (C117 * C318 + C105 * C333 + C116 * C319 + C104 * C334 +
             C115 * C320 + C103 * C335 + C114 * C321 + C102 * C336 +
             C113 * C322 + C101 * C337) *
                C118) *
               C32633 * C531) *
              C440 +
          (((C113 * C618 + C101 * C623 + C114 * C619 + C102 * C624 +
             C115 * C620 + C103 * C625 + C116 * C621 + C104 * C626 +
             C117 * C622 + C105 * C627) *
                C118 +
            (C113 * C628 + C101 * C633 + C114 * C629 + C102 * C634 +
             C115 * C630 + C103 * C635 + C116 * C631 + C104 * C636 +
             C117 * C632 + C105 * C637) *
                C32644) *
               C32633 * C531 -
           ((C117 * C223 + C105 * C243 + C116 * C224 + C104 * C244 +
             C115 * C225 + C103 * C245 + C114 * C226 + C102 * C246 +
             C113 * C227 + C101 * C247) *
                C32644 +
            (C117 * C213 + C105 * C228 + C116 * C214 + C104 * C229 +
             C115 * C215 + C103 * C230 + C114 * C216 + C102 * C231 +
             C113 * C217 + C101 * C232) *
                C118) *
               C32633 * C530) *
              C441) *
         C32577) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C754 * C119 + C748 * C126 + C755 * C120 + C749 * C127 +
              C756 * C121 + C32905 * C128) *
                 C118 +
             (C754 * C131 + C748 * C140 + C755 * C132 + C749 * C141 +
              C756 * C133 + C32905 * C142) *
                 C32644) *
                C32951 +
            ((C928 + C929 + C930) * C118 + (C931 + C932 + C933) * C32644) *
                C32939 +
            C952 * C32916) *
               C530 -
           (((C1617 + C1618 + C1619) * C32644 +
             (C1620 + C1621 + C1622) * C118) *
                C32916 +
            ((C1623 + C1624 + C1625) * C32644 +
             (C1626 + C1627 + C1628) * C118) *
                C32939 +
            ((C756 * C330 + C32905 * C350 + C755 * C331 + C749 * C351 +
              C754 * C332 + C748 * C352) *
                 C32644 +
             (C756 * C320 + C32905 * C335 + C755 * C321 + C749 * C336 +
              C754 * C322 + C748 * C337) *
                 C118) *
                C32951) *
               C531) *
              C440 +
          ((((C1628 + C1627 + C1626) * C118 +
             (C1625 + C1624 + C1623) * C32644) *
                C32951 +
            ((C1622 + C1621 + C1620) * C118 +
             (C1619 + C1618 + C1617) * C32644) *
                C32939 +
            ((C754 * C1580 + C748 * C1583 + C755 * C1581 + C749 * C1584 +
              C756 * C1582 + C32905 * C1585) *
                 C118 +
             (C754 * C1586 + C748 * C1589 + C755 * C1587 + C749 * C1590 +
              C756 * C1588 + C32905 * C1591) *
                 C32644) *
                C32916) *
               C531 -
           (((C940 + C941 + C942) * C32644 + (C943 + C944 + C945) * C118) *
                C32916 +
            ((C939 + C938 + C937) * C32644 + (C936 + C935 + C934) * C118) *
                C32939 +
            ((C933 + C932 + C931) * C32644 + (C930 + C929 + C928) * C118) *
                C32951) *
               C530) *
              C441) *
         C32577) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C5270 * C119 + C32948 * C126 + C5271 * C120 + C32935 * C127 +
              C5272 * C121 + C32905 * C128) *
                 C118 +
             (C5270 * C131 + C32948 * C140 + C5271 * C132 + C32935 * C141 +
              C5272 * C133 + C32905 * C142) *
                 C32644) *
                C5267 +
            ((C5420 + C5421 + C5422) * C118 +
             (C5423 + C5424 + C5425) * C32644) *
                C5268 +
            C5444 * C32916) *
               C530 -
           (((C6053 + C6054 + C6055) * C32644 +
             (C6056 + C6057 + C6058) * C118) *
                C32916 +
            ((C6059 + C6060 + C6061) * C32644 +
             (C6062 + C6063 + C6064) * C118) *
                C5268 +
            ((C5272 * C330 + C32905 * C350 + C5271 * C331 + C32935 * C351 +
              C5270 * C332 + C32948 * C352) *
                 C32644 +
             (C5272 * C320 + C32905 * C335 + C5271 * C321 + C32935 * C336 +
              C5270 * C322 + C32948 * C337) *
                 C118) *
                C5267) *
               C531) *
              C440 +
          ((((C6064 + C6063 + C6062) * C118 +
             (C6061 + C6060 + C6059) * C32644) *
                C5267 +
            ((C6058 + C6057 + C6056) * C118 +
             (C6055 + C6054 + C6053) * C32644) *
                C5268 +
            ((C5270 * C1580 + C32948 * C1583 + C5271 * C1581 + C32935 * C1584 +
              C5272 * C1582 + C32905 * C1585) *
                 C118 +
             (C5270 * C1586 + C32948 * C1589 + C5271 * C1587 + C32935 * C1590 +
              C5272 * C1588 + C32905 * C1591) *
                 C32644) *
                C32916) *
               C531 -
           (((C5432 + C5433 + C5434) * C32644 +
             (C5435 + C5436 + C5437) * C118) *
                C32916 +
            ((C5431 + C5430 + C5429) * C32644 +
             (C5428 + C5427 + C5426) * C118) *
                C5268 +
            ((C5425 + C5424 + C5423) * C32644 +
             (C5422 + C5421 + C5420) * C118) *
                C5267) *
               C530) *
              C441) *
         C32577) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C6132 * C119 + C32540 * C126) * C118 +
             (C6132 * C131 + C32540 * C140) * C32644) *
                C6127 +
            (C6234 + C6235) * C6128 + C6244 * C6129 + C6245 * C6130 +
            C6246 * C6131) *
               C530 -
           ((C6635 + C6636) * C6131 + (C6637 + C6638) * C6130 +
            (C6639 + C6640) * C6129 + (C6641 + C6642) * C6128 +
            ((C6132 * C332 + C32540 * C352) * C32644 +
             (C6132 * C322 + C32540 * C337) * C118) *
                C6127) *
               C531) *
              C440 +
          (((C6642 + C6641) * C6127 + (C6640 + C6639) * C6128 +
            (C6638 + C6637) * C6129 + (C6636 + C6635) * C6130 +
            ((C6132 * C6606 + C32540 * C6607) * C118 +
             (C6132 * C6608 + C32540 * C6609) * C32644) *
                C6131) *
               C531 -
           ((C6242 + C6243) * C6131 + (C6241 + C6240) * C6130 +
            (C6239 + C6238) * C6129 + (C6237 + C6236) * C6128 +
            (C6235 + C6234) * C6127) *
               C530) *
              C441) *
         C32577) /
            (p * q * std::sqrt(p + q));
    d2ee[122] +=
        (-std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C127 +
            C115 * C121 + C103 * C128 + C116 * C122 + C104 * C129 +
            C117 * C123 + C105 * C130) *
               C118 +
           (C113 * C131 + C101 * C140 + C114 * C132 + C102 * C141 +
            C115 * C133 + C103 * C142 + C116 * C134 + C104 * C143 +
            C117 * C135 + C105 * C144) *
               C32644) *
              C32633 * C32603 * C209 -
          ((C117 * C223 + C105 * C243 + C116 * C224 + C104 * C244 +
            C115 * C225 + C103 * C245 + C114 * C226 + C102 * C246 +
            C113 * C227 + C101 * C247) *
               C32644 +
           (C117 * C213 + C105 * C228 + C116 * C214 + C104 * C229 +
            C115 * C215 + C103 * C230 + C114 * C216 + C102 * C231 +
            C113 * C217 + C101 * C232) *
               C118) *
              C32633 * C32603 * C210 +
          ((C113 * C218 + C101 * C233 + C114 * C219 + C102 * C234 +
            C115 * C220 + C103 * C235 + C116 * C221 + C104 * C236 +
            C117 * C222 + C105 * C237) *
               C118 +
           (C113 * C238 + C101 * C248 + C114 * C239 + C102 * C249 +
            C115 * C240 + C103 * C250 + C116 * C241 + C104 * C251 +
            C117 * C242 + C105 * C252) *
               C32644) *
              C32633 * C32603 * C211) *
         C32577) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C127 +
            C115 * C121 + C103 * C128 + C116 * C122 + C104 * C129 +
            C117 * C123 + C105 * C130) *
               C118 +
           (C113 * C131 + C101 * C140 + C114 * C132 + C102 * C141 +
            C115 * C133 + C103 * C142 + C116 * C134 + C104 * C143 +
            C117 * C135 + C105 * C144) *
               C32644) *
              C32633 * C32603 * C32589 * C110 -
          ((C117 * C136 + C105 * C145 + C116 * C135 + C104 * C144 +
            C115 * C134 + C103 * C143 + C114 * C133 + C102 * C142 +
            C113 * C132 + C101 * C141) *
               C32644 +
           (C117 * C124 + C105 * C137 + C116 * C123 + C104 * C130 +
            C115 * C122 + C103 * C129 + C114 * C121 + C102 * C128 +
            C113 * C120 + C101 * C127) *
               C118) *
              C32633 * C32603 * C32589 * C111 +
          ((C113 * C121 + C101 * C128 + C114 * C122 + C102 * C129 +
            C115 * C123 + C103 * C130 + C116 * C124 + C104 * C137 +
            C117 * C125 + C105 * C138) *
               C118 +
           (C113 * C133 + C101 * C142 + C114 * C134 + C102 * C143 +
            C115 * C135 + C103 * C144 + C116 * C136 + C104 * C145 +
            C117 * C139 + C105 * C146) *
               C32644) *
              C32633 * C32603 * C32589 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C127 +
            C115 * C121 + C103 * C128 + C116 * C122 + C104 * C129 +
            C117 * C123 + C105 * C130) *
               C118 +
           (C113 * C131 + C101 * C140 + C114 * C132 + C102 * C141 +
            C115 * C133 + C103 * C142 + C116 * C134 + C104 * C143 +
            C117 * C135 + C105 * C144) *
               C32644) *
              C32633 * C315 -
          ((C117 * C328 + C105 * C348 + C116 * C329 + C104 * C349 +
            C115 * C330 + C103 * C350 + C114 * C331 + C102 * C351 +
            C113 * C332 + C101 * C352) *
               C32644 +
           (C117 * C318 + C105 * C333 + C116 * C319 + C104 * C334 +
            C115 * C320 + C103 * C335 + C114 * C321 + C102 * C336 +
            C113 * C322 + C101 * C337) *
               C118) *
              C32633 * C316 +
          ((C113 * C323 + C101 * C338 + C114 * C324 + C102 * C339 +
            C115 * C325 + C103 * C340 + C116 * C326 + C104 * C341 +
            C117 * C327 + C105 * C342) *
               C118 +
           (C113 * C343 + C101 * C353 + C114 * C344 + C102 * C354 +
            C115 * C345 + C103 * C355 + C116 * C346 + C104 * C356 +
            C117 * C347 + C105 * C357) *
               C32644) *
              C32633 * C317) *
         C32589 * C32577) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C754 * C119 + C748 * C126 + C755 * C120 + C749 * C127 +
             C756 * C121 + C32905 * C128) *
                C118 +
            (C754 * C131 + C748 * C140 + C755 * C132 + C749 * C141 +
             C756 * C133 + C32905 * C142) *
                C32644) *
               C32951 +
           ((C754 * C217 + C748 * C232 + C755 * C216 + C749 * C231 +
             C756 * C215 + C32905 * C230) *
                C118 +
            (C754 * C227 + C748 * C247 + C755 * C226 + C749 * C246 +
             C756 * C225 + C32905 * C245) *
                C32644) *
               C32939 +
           ((C754 * C218 + C748 * C233 + C755 * C219 + C749 * C234 +
             C756 * C220 + C32905 * C235) *
                C118 +
            (C754 * C238 + C748 * C248 + C755 * C239 + C749 * C249 +
             C756 * C240 + C32905 * C250) *
                C32644) *
               C32916) *
              C32603 * C32589 * C110 -
          (((C756 * C241 + C32905 * C251 + C755 * C240 + C749 * C250 +
             C754 * C239 + C748 * C249) *
                C32644 +
            (C756 * C221 + C32905 * C236 + C755 * C220 + C749 * C235 +
             C754 * C219 + C748 * C234) *
                C118) *
               C32916 +
           ((C756 * C224 + C32905 * C244 + C755 * C225 + C749 * C245 +
             C754 * C226 + C748 * C246) *
                C32644 +
            (C756 * C214 + C32905 * C229 + C755 * C215 + C749 * C230 +
             C754 * C216 + C748 * C231) *
                C118) *
               C32939 +
           ((C756 * C134 + C32905 * C143 + C755 * C133 + C749 * C142 +
             C754 * C132 + C748 * C141) *
                C32644 +
            (C756 * C122 + C32905 * C129 + C755 * C121 + C749 * C128 +
             C754 * C120 + C748 * C127) *
                C118) *
               C32951) *
              C32603 * C32589 * C111 +
          (((C754 * C121 + C748 * C128 + C755 * C122 + C749 * C129 +
             C756 * C123 + C32905 * C130) *
                C118 +
            (C754 * C133 + C748 * C142 + C755 * C134 + C749 * C143 +
             C756 * C135 + C32905 * C144) *
                C32644) *
               C32951 +
           ((C754 * C215 + C748 * C230 + C755 * C214 + C749 * C229 +
             C756 * C213 + C32905 * C228) *
                C118 +
            (C754 * C225 + C748 * C245 + C755 * C224 + C749 * C244 +
             C756 * C223 + C32905 * C243) *
                C32644) *
               C32939 +
           ((C754 * C220 + C748 * C235 + C755 * C221 + C749 * C236 +
             C756 * C222 + C32905 * C237) *
                C118 +
            (C754 * C240 + C748 * C250 + C755 * C241 + C749 * C251 +
             C756 * C242 + C32905 * C252) *
                C32644) *
               C32916) *
              C32603 * C32589 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C754 * C119 + C748 * C126 + C755 * C120 + C749 * C127 +
             C756 * C121 + C32905 * C128) *
                C118 +
            (C754 * C131 + C748 * C140 + C755 * C132 + C749 * C141 +
             C756 * C133 + C32905 * C142) *
                C32644) *
               C32951 +
           ((C928 + C929 + C930) * C118 + (C931 + C932 + C933) * C32644) *
               C32939 +
           C952 * C32916) *
              C32603 * C209 -
          (((C940 + C941 + C942) * C32644 + (C943 + C944 + C945) * C118) *
               C32916 +
           ((C939 + C938 + C937) * C32644 + (C936 + C935 + C934) * C118) *
               C32939 +
           ((C933 + C932 + C931) * C32644 + (C930 + C929 + C928) * C118) *
               C32951) *
              C32603 * C210 +
          (C952 * C32951 +
           ((C945 + C944 + C943) * C118 + (C942 + C941 + C940) * C32644) *
               C32939 +
           ((C754 * C870 + C748 * C879 + C755 * C871 + C749 * C880 +
             C756 * C872 + C32905 * C881) *
                C118 +
            (C754 * C882 + C748 * C888 + C755 * C883 + C749 * C889 +
             C756 * C884 + C32905 * C890) *
                C32644) *
               C32916) *
              C32603 * C211) *
         C32577) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C754 * C119 + C748 * C126 + C755 * C120 + C749 * C127 +
             C756 * C121 + C32905 * C128) *
                C118 +
            (C754 * C131 + C748 * C140 + C755 * C132 + C749 * C141 +
             C756 * C133 + C32905 * C142) *
                C32644) *
               C32951 +
           ((C928 + C929 + C930) * C118 + (C931 + C932 + C933) * C32644) *
               C32939 +
           C952 * C32916) *
              C315 -
          (((C756 * C1071 + C32905 * C1089 + C755 * C1072 + C749 * C1090 +
             C754 * C1073 + C748 * C1091) *
                C32644 +
            (C756 * C1062 + C32905 * C1074 + C755 * C1063 + C749 * C1075 +
             C754 * C1064 + C748 * C1076) *
                C118) *
               C32916 +
           ((C756 * C630 + C32905 * C635 + C755 * C629 + C749 * C634 +
             C754 * C628 + C748 * C633) *
                C32644 +
            (C756 * C620 + C32905 * C625 + C755 * C619 + C749 * C624 +
             C754 * C618 + C748 * C623) *
                C118) *
               C32939 +
           ((C756 * C330 + C32905 * C350 + C755 * C331 + C749 * C351 +
             C754 * C332 + C748 * C352) *
                C32644 +
            (C756 * C320 + C32905 * C335 + C755 * C321 + C749 * C336 +
             C754 * C322 + C748 * C337) *
                C118) *
               C32951) *
              C316 +
          (((C754 * C323 + C748 * C338 + C755 * C324 + C749 * C339 +
             C756 * C325 + C32905 * C340) *
                C118 +
            (C754 * C343 + C748 * C353 + C755 * C344 + C749 * C354 +
             C756 * C345 + C32905 * C355) *
                C32644) *
               C32951 +
           ((C754 * C1065 + C748 * C1077 + C755 * C1066 + C749 * C1078 +
             C756 * C1067 + C32905 * C1079) *
                C118 +
            (C754 * C1080 + C748 * C1092 + C755 * C1081 + C749 * C1093 +
             C756 * C1082 + C32905 * C1094) *
                C32644) *
               C32939 +
           ((C754 * C1068 + C748 * C1083 + C755 * C1069 + C749 * C1084 +
             C756 * C1070 + C32905 * C1085) *
                C118 +
            (C754 * C1086 + C748 * C1095 + C755 * C1087 + C749 * C1096 +
             C756 * C1088 + C32905 * C1097) *
                C32644) *
               C32916) *
              C317) *
         C32589 * C32577) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C5270 * C119 + C32948 * C126 + C5271 * C120 + C32935 * C127 +
             C5272 * C121 + C32905 * C128) *
                C118 +
            (C5270 * C131 + C32948 * C140 + C5271 * C132 + C32935 * C141 +
             C5272 * C133 + C32905 * C142) *
                C32644) *
               C5267 +
           ((C5270 * C217 + C32948 * C232 + C5271 * C216 + C32935 * C231 +
             C5272 * C215 + C32905 * C230) *
                C118 +
            (C5270 * C227 + C32948 * C247 + C5271 * C226 + C32935 * C246 +
             C5272 * C225 + C32905 * C245) *
                C32644) *
               C5268 +
           ((C5270 * C218 + C32948 * C233 + C5271 * C219 + C32935 * C234 +
             C5272 * C220 + C32905 * C235) *
                C118 +
            (C5270 * C238 + C32948 * C248 + C5271 * C239 + C32935 * C249 +
             C5272 * C240 + C32905 * C250) *
                C32644) *
               C32916) *
              C32603 * C32589 * C110 -
          (((C5272 * C241 + C32905 * C251 + C5271 * C240 + C32935 * C250 +
             C5270 * C239 + C32948 * C249) *
                C32644 +
            (C5272 * C221 + C32905 * C236 + C5271 * C220 + C32935 * C235 +
             C5270 * C219 + C32948 * C234) *
                C118) *
               C32916 +
           ((C5272 * C224 + C32905 * C244 + C5271 * C225 + C32935 * C245 +
             C5270 * C226 + C32948 * C246) *
                C32644 +
            (C5272 * C214 + C32905 * C229 + C5271 * C215 + C32935 * C230 +
             C5270 * C216 + C32948 * C231) *
                C118) *
               C5268 +
           ((C5272 * C134 + C32905 * C143 + C5271 * C133 + C32935 * C142 +
             C5270 * C132 + C32948 * C141) *
                C32644 +
            (C5272 * C122 + C32905 * C129 + C5271 * C121 + C32935 * C128 +
             C5270 * C120 + C32948 * C127) *
                C118) *
               C5267) *
              C32603 * C32589 * C111 +
          (((C5270 * C121 + C32948 * C128 + C5271 * C122 + C32935 * C129 +
             C5272 * C123 + C32905 * C130) *
                C118 +
            (C5270 * C133 + C32948 * C142 + C5271 * C134 + C32935 * C143 +
             C5272 * C135 + C32905 * C144) *
                C32644) *
               C5267 +
           ((C5270 * C215 + C32948 * C230 + C5271 * C214 + C32935 * C229 +
             C5272 * C213 + C32905 * C228) *
                C118 +
            (C5270 * C225 + C32948 * C245 + C5271 * C224 + C32935 * C244 +
             C5272 * C223 + C32905 * C243) *
                C32644) *
               C5268 +
           ((C5270 * C220 + C32948 * C235 + C5271 * C221 + C32935 * C236 +
             C5272 * C222 + C32905 * C237) *
                C118 +
            (C5270 * C240 + C32948 * C250 + C5271 * C241 + C32935 * C251 +
             C5272 * C242 + C32905 * C252) *
                C32644) *
               C32916) *
              C32603 * C32589 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C5270 * C119 + C32948 * C126 + C5271 * C120 + C32935 * C127 +
             C5272 * C121 + C32905 * C128) *
                C118 +
            (C5270 * C131 + C32948 * C140 + C5271 * C132 + C32935 * C141 +
             C5272 * C133 + C32905 * C142) *
                C32644) *
               C5267 +
           ((C5420 + C5421 + C5422) * C118 + (C5423 + C5424 + C5425) * C32644) *
               C5268 +
           C5444 * C32916) *
              C32603 * C209 -
          (((C5432 + C5433 + C5434) * C32644 + (C5435 + C5436 + C5437) * C118) *
               C32916 +
           ((C5431 + C5430 + C5429) * C32644 + (C5428 + C5427 + C5426) * C118) *
               C5268 +
           ((C5425 + C5424 + C5423) * C32644 + (C5422 + C5421 + C5420) * C118) *
               C5267) *
              C32603 * C210 +
          (C5444 * C5267 +
           ((C5437 + C5436 + C5435) * C118 + (C5434 + C5433 + C5432) * C32644) *
               C5268 +
           ((C5270 * C870 + C32948 * C879 + C5271 * C871 + C32935 * C880 +
             C5272 * C872 + C32905 * C881) *
                C118 +
            (C5270 * C882 + C32948 * C888 + C5271 * C883 + C32935 * C889 +
             C5272 * C884 + C32905 * C890) *
                C32644) *
               C32916) *
              C32603 * C211) *
         C32577) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C5270 * C119 + C32948 * C126 + C5271 * C120 + C32935 * C127 +
             C5272 * C121 + C32905 * C128) *
                C118 +
            (C5270 * C131 + C32948 * C140 + C5271 * C132 + C32935 * C141 +
             C5272 * C133 + C32905 * C142) *
                C32644) *
               C5267 +
           ((C5420 + C5421 + C5422) * C118 + (C5423 + C5424 + C5425) * C32644) *
               C5268 +
           C5444 * C32916) *
              C315 -
          (((C5272 * C1071 + C32905 * C1089 + C5271 * C1072 + C32935 * C1090 +
             C5270 * C1073 + C32948 * C1091) *
                C32644 +
            (C5272 * C1062 + C32905 * C1074 + C5271 * C1063 + C32935 * C1075 +
             C5270 * C1064 + C32948 * C1076) *
                C118) *
               C32916 +
           ((C5272 * C630 + C32905 * C635 + C5271 * C629 + C32935 * C634 +
             C5270 * C628 + C32948 * C633) *
                C32644 +
            (C5272 * C620 + C32905 * C625 + C5271 * C619 + C32935 * C624 +
             C5270 * C618 + C32948 * C623) *
                C118) *
               C5268 +
           ((C5272 * C330 + C32905 * C350 + C5271 * C331 + C32935 * C351 +
             C5270 * C332 + C32948 * C352) *
                C32644 +
            (C5272 * C320 + C32905 * C335 + C5271 * C321 + C32935 * C336 +
             C5270 * C322 + C32948 * C337) *
                C118) *
               C5267) *
              C316 +
          (((C5270 * C323 + C32948 * C338 + C5271 * C324 + C32935 * C339 +
             C5272 * C325 + C32905 * C340) *
                C118 +
            (C5270 * C343 + C32948 * C353 + C5271 * C344 + C32935 * C354 +
             C5272 * C345 + C32905 * C355) *
                C32644) *
               C5267 +
           ((C5270 * C1065 + C32948 * C1077 + C5271 * C1066 + C32935 * C1078 +
             C5272 * C1067 + C32905 * C1079) *
                C118 +
            (C5270 * C1080 + C32948 * C1092 + C5271 * C1081 + C32935 * C1093 +
             C5272 * C1082 + C32905 * C1094) *
                C32644) *
               C5268 +
           ((C5270 * C1068 + C32948 * C1083 + C5271 * C1069 + C32935 * C1084 +
             C5272 * C1070 + C32905 * C1085) *
                C118 +
            (C5270 * C1086 + C32948 * C1095 + C5271 * C1087 + C32935 * C1096 +
             C5272 * C1088 + C32905 * C1097) *
                C32644) *
               C32916) *
              C317) *
         C32589 * C32577) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C6132 * C119 + C32540 * C126) * C118 +
            (C6132 * C131 + C32540 * C140) * C32644) *
               C6127 +
           ((C6132 * C217 + C32540 * C232) * C118 +
            (C6132 * C227 + C32540 * C247) * C32644) *
               C6128 +
           ((C6132 * C218 + C32540 * C233) * C118 +
            (C6132 * C238 + C32540 * C248) * C32644) *
               C6129 +
           ((C6132 * C869 + C32540 * C878) * C118 +
            (C6132 * C875 + C32540 * C887) * C32644) *
               C6130 +
           ((C6132 * C870 + C32540 * C879) * C118 +
            (C6132 * C882 + C32540 * C888) * C32644) *
               C6131) *
              C32603 * C32589 * C110 -
          (((C6132 * C883 + C32540 * C889) * C32644 +
            (C6132 * C871 + C32540 * C880) * C118) *
               C6131 +
           ((C6132 * C874 + C32540 * C886) * C32644 +
            (C6132 * C868 + C32540 * C877) * C118) *
               C6130 +
           ((C6132 * C239 + C32540 * C249) * C32644 +
            (C6132 * C219 + C32540 * C234) * C118) *
               C6129 +
           ((C6132 * C226 + C32540 * C246) * C32644 +
            (C6132 * C216 + C32540 * C231) * C118) *
               C6128 +
           ((C6132 * C132 + C32540 * C141) * C32644 +
            (C6132 * C120 + C32540 * C127) * C118) *
               C6127) *
              C32603 * C32589 * C111 +
          (((C6132 * C121 + C32540 * C128) * C118 +
            (C6132 * C133 + C32540 * C142) * C32644) *
               C6127 +
           ((C6132 * C215 + C32540 * C230) * C118 +
            (C6132 * C225 + C32540 * C245) * C32644) *
               C6128 +
           ((C6132 * C220 + C32540 * C235) * C118 +
            (C6132 * C240 + C32540 * C250) * C32644) *
               C6129 +
           ((C6132 * C867 + C32540 * C876) * C118 +
            (C6132 * C873 + C32540 * C885) * C32644) *
               C6130 +
           ((C6132 * C872 + C32540 * C881) * C118 +
            (C6132 * C884 + C32540 * C890) * C32644) *
               C6131) *
              C32603 * C32589 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C6132 * C119 + C32540 * C126) * C118 +
            (C6132 * C131 + C32540 * C140) * C32644) *
               C6127 +
           (C6234 + C6235) * C6128 + C6244 * C6129 + C6245 * C6130 +
           C6246 * C6131) *
              C32603 * C209 -
          ((C6242 + C6243) * C6131 + (C6241 + C6240) * C6130 +
           (C6239 + C6238) * C6129 + (C6237 + C6236) * C6128 +
           (C6235 + C6234) * C6127) *
              C32603 * C210 +
          (C6244 * C6127 + C6245 * C6128 + C6246 * C6129 +
           (C6243 + C6242) * C6130 +
           ((C6132 * C6196 + C32540 * C6199) * C118 +
            (C6132 * C6200 + C32540 * C6202) * C32644) *
               C6131) *
              C32603 * C211) *
         C32577) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C6132 * C119 + C32540 * C126) * C118 +
            (C6132 * C131 + C32540 * C140) * C32644) *
               C6127 +
           (C6234 + C6235) * C6128 + C6244 * C6129 + C6245 * C6130 +
           C6246 * C6131) *
              C315 -
          (((C6132 * C6311 + C32540 * C6317) * C32644 +
            (C6132 * C6308 + C32540 * C6312) * C118) *
               C6131 +
           ((C6132 * C1586 + C32540 * C1589) * C32644 +
            (C6132 * C1580 + C32540 * C1583) * C118) *
               C6130 +
           ((C6132 * C1073 + C32540 * C1091) * C32644 +
            (C6132 * C1064 + C32540 * C1076) * C118) *
               C6129 +
           ((C6132 * C628 + C32540 * C633) * C32644 +
            (C6132 * C618 + C32540 * C623) * C118) *
               C6128 +
           ((C6132 * C332 + C32540 * C352) * C32644 +
            (C6132 * C322 + C32540 * C337) * C118) *
               C6127) *
              C316 +
          (((C6132 * C323 + C32540 * C338) * C118 +
            (C6132 * C343 + C32540 * C353) * C32644) *
               C6127 +
           ((C6132 * C1065 + C32540 * C1077) * C118 +
            (C6132 * C1080 + C32540 * C1092) * C32644) *
               C6128 +
           ((C6132 * C1068 + C32540 * C1083) * C118 +
            (C6132 * C1086 + C32540 * C1095) * C32644) *
               C6129 +
           ((C6132 * C6309 + C32540 * C6313) * C118 +
            (C6132 * C6314 + C32540 * C6318) * C32644) *
               C6130 +
           ((C6132 * C6310 + C32540 * C6315) * C118 +
            (C6132 * C6316 + C32540 * C6319) * C32644) *
               C6131) *
              C317) *
         C32589 * C32577) /
            (p * q * std::sqrt(p + q));
    d2ee[123] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C127 +
             C115 * C121 + C103 * C128 + C116 * C122 + C104 * C129 +
             C117 * C123 + C105 * C130) *
                C118 +
            (C113 * C131 + C101 * C140 + C114 * C132 + C102 * C141 +
             C115 * C133 + C103 * C142 + C116 * C134 + C104 * C143 +
             C117 * C135 + C105 * C144) *
                C32644) *
               C32633 * C530 -
           ((C117 * C328 + C105 * C348 + C116 * C329 + C104 * C349 +
             C115 * C330 + C103 * C350 + C114 * C331 + C102 * C351 +
             C113 * C332 + C101 * C352) *
                C32644 +
            (C117 * C318 + C105 * C333 + C116 * C319 + C104 * C334 +
             C115 * C320 + C103 * C335 + C114 * C321 + C102 * C336 +
             C113 * C322 + C101 * C337) *
                C118) *
               C32633 * C531) *
              C32589 * C442 +
          (((C113 * C321 + C101 * C336 + C114 * C320 + C102 * C335 +
             C115 * C319 + C103 * C334 + C116 * C318 + C104 * C333 +
             C117 * C532 + C105 * C533) *
                C118 +
            (C113 * C331 + C101 * C351 + C114 * C330 + C102 * C350 +
             C115 * C329 + C103 * C349 + C116 * C328 + C104 * C348 +
             C117 * C534 + C105 * C535) *
                C32644) *
               C32633 * C531 -
           ((C117 * C136 + C105 * C145 + C116 * C135 + C104 * C144 +
             C115 * C134 + C103 * C143 + C114 * C133 + C102 * C142 +
             C113 * C132 + C101 * C141) *
                C32644 +
            (C117 * C124 + C105 * C137 + C116 * C123 + C104 * C130 +
             C115 * C122 + C103 * C129 + C114 * C121 + C102 * C128 +
             C113 * C120 + C101 * C127) *
                C118) *
               C32633 * C530) *
              C32589 * C443)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C754 * C119 + C748 * C126 + C755 * C120 + C749 * C127 +
              C756 * C121 + C32905 * C128) *
                 C118 +
             (C754 * C131 + C748 * C140 + C755 * C132 + C749 * C141 +
              C756 * C133 + C32905 * C142) *
                 C32644) *
                C32951 +
            ((C928 + C929 + C930) * C118 + (C931 + C932 + C933) * C32644) *
                C32939 +
            C952 * C32916) *
               C530 -
           (((C756 * C1071 + C32905 * C1089 + C755 * C1072 + C749 * C1090 +
              C754 * C1073 + C748 * C1091) *
                 C32644 +
             (C756 * C1062 + C32905 * C1074 + C755 * C1063 + C749 * C1075 +
              C754 * C1064 + C748 * C1076) *
                 C118) *
                C32916 +
            ((C756 * C630 + C32905 * C635 + C755 * C629 + C749 * C634 +
              C754 * C628 + C748 * C633) *
                 C32644 +
             (C756 * C620 + C32905 * C625 + C755 * C619 + C749 * C624 +
              C754 * C618 + C748 * C623) *
                 C118) *
                C32939 +
            ((C756 * C330 + C32905 * C350 + C755 * C331 + C749 * C351 +
              C754 * C332 + C748 * C352) *
                 C32644 +
             (C756 * C320 + C32905 * C335 + C755 * C321 + C749 * C336 +
              C754 * C322 + C748 * C337) *
                 C118) *
                C32951) *
               C531) *
              C32589 * C442 +
          ((((C754 * C321 + C748 * C336 + C755 * C320 + C749 * C335 +
              C756 * C319 + C32905 * C334) *
                 C118 +
             (C754 * C331 + C748 * C351 + C755 * C330 + C749 * C350 +
              C756 * C329 + C32905 * C349) *
                 C32644) *
                C32951 +
            ((C754 * C619 + C748 * C624 + C755 * C620 + C749 * C625 +
              C756 * C621 + C32905 * C626) *
                 C118 +
             (C754 * C629 + C748 * C634 + C755 * C630 + C749 * C635 +
              C756 * C631 + C32905 * C636) *
                 C32644) *
                C32939 +
            ((C754 * C1063 + C748 * C1075 + C755 * C1062 + C749 * C1074 +
              C756 * C1430 + C32905 * C1431) *
                 C118 +
             (C754 * C1072 + C748 * C1090 + C755 * C1071 + C749 * C1089 +
              C756 * C1432 + C32905 * C1433) *
                 C32644) *
                C32916) *
               C531 -
           (((C1284 + C1283 + C1282) * C32644 +
             (C1281 + C1280 + C1279) * C118) *
                C32916 +
            ((C1278 + C1277 + C1276) * C32644 +
             (C1275 + C1274 + C1273) * C118) *
                C32939 +
            ((C756 * C134 + C32905 * C143 + C755 * C133 + C749 * C142 +
              C754 * C132 + C748 * C141) *
                 C32644 +
             (C756 * C122 + C32905 * C129 + C755 * C121 + C749 * C128 +
              C754 * C120 + C748 * C127) *
                 C118) *
                C32951) *
               C530) *
              C32589 * C443)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C5270 * C119 + C32948 * C126 + C5271 * C120 + C32935 * C127 +
              C5272 * C121 + C32905 * C128) *
                 C118 +
             (C5270 * C131 + C32948 * C140 + C5271 * C132 + C32935 * C141 +
              C5272 * C133 + C32905 * C142) *
                 C32644) *
                C5267 +
            ((C5420 + C5421 + C5422) * C118 +
             (C5423 + C5424 + C5425) * C32644) *
                C5268 +
            C5444 * C32916) *
               C530 -
           (((C5272 * C1071 + C32905 * C1089 + C5271 * C1072 + C32935 * C1090 +
              C5270 * C1073 + C32948 * C1091) *
                 C32644 +
             (C5272 * C1062 + C32905 * C1074 + C5271 * C1063 + C32935 * C1075 +
              C5270 * C1064 + C32948 * C1076) *
                 C118) *
                C32916 +
            ((C5272 * C630 + C32905 * C635 + C5271 * C629 + C32935 * C634 +
              C5270 * C628 + C32948 * C633) *
                 C32644 +
             (C5272 * C620 + C32905 * C625 + C5271 * C619 + C32935 * C624 +
              C5270 * C618 + C32948 * C623) *
                 C118) *
                C5268 +
            ((C5272 * C330 + C32905 * C350 + C5271 * C331 + C32935 * C351 +
              C5270 * C332 + C32948 * C352) *
                 C32644 +
             (C5272 * C320 + C32905 * C335 + C5271 * C321 + C32935 * C336 +
              C5270 * C322 + C32948 * C337) *
                 C118) *
                C5267) *
               C531) *
              C32589 * C442 +
          ((((C5270 * C321 + C32948 * C336 + C5271 * C320 + C32935 * C335 +
              C5272 * C319 + C32905 * C334) *
                 C118 +
             (C5270 * C331 + C32948 * C351 + C5271 * C330 + C32935 * C350 +
              C5272 * C329 + C32905 * C349) *
                 C32644) *
                C5267 +
            ((C5270 * C619 + C32948 * C624 + C5271 * C620 + C32935 * C625 +
              C5272 * C621 + C32905 * C626) *
                 C118 +
             (C5270 * C629 + C32948 * C634 + C5271 * C630 + C32935 * C635 +
              C5272 * C631 + C32905 * C636) *
                 C32644) *
                C5268 +
            ((C5270 * C1063 + C32948 * C1075 + C5271 * C1062 + C32935 * C1074 +
              C5272 * C1430 + C32905 * C1431) *
                 C118 +
             (C5270 * C1072 + C32948 * C1090 + C5271 * C1071 + C32935 * C1089 +
              C5272 * C1432 + C32905 * C1433) *
                 C32644) *
                C32916) *
               C531 -
           (((C5736 + C5735 + C5734) * C32644 +
             (C5733 + C5732 + C5731) * C118) *
                C32916 +
            ((C5730 + C5729 + C5728) * C32644 +
             (C5727 + C5726 + C5725) * C118) *
                C5268 +
            ((C5272 * C134 + C32905 * C143 + C5271 * C133 + C32935 * C142 +
              C5270 * C132 + C32948 * C141) *
                 C32644 +
             (C5272 * C122 + C32905 * C129 + C5271 * C121 + C32935 * C128 +
              C5270 * C120 + C32948 * C127) *
                 C118) *
                C5267) *
               C530) *
              C32589 * C443)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C6132 * C119 + C32540 * C126) * C118 +
             (C6132 * C131 + C32540 * C140) * C32644) *
                C6127 +
            (C6234 + C6235) * C6128 + C6244 * C6129 + C6245 * C6130 +
            C6246 * C6131) *
               C530 -
           (((C6132 * C6311 + C32540 * C6317) * C32644 +
             (C6132 * C6308 + C32540 * C6312) * C118) *
                C6131 +
            ((C6132 * C1586 + C32540 * C1589) * C32644 +
             (C6132 * C1580 + C32540 * C1583) * C118) *
                C6130 +
            ((C6132 * C1073 + C32540 * C1091) * C32644 +
             (C6132 * C1064 + C32540 * C1076) * C118) *
                C6129 +
            ((C6132 * C628 + C32540 * C633) * C32644 +
             (C6132 * C618 + C32540 * C623) * C118) *
                C6128 +
            ((C6132 * C332 + C32540 * C352) * C32644 +
             (C6132 * C322 + C32540 * C337) * C118) *
                C6127) *
               C531) *
              C32589 * C442 +
          ((((C6132 * C321 + C32540 * C336) * C118 +
             (C6132 * C331 + C32540 * C351) * C32644) *
                C6127 +
            ((C6132 * C619 + C32540 * C624) * C118 +
             (C6132 * C629 + C32540 * C634) * C32644) *
                C6128 +
            ((C6132 * C1063 + C32540 * C1075) * C118 +
             (C6132 * C1072 + C32540 * C1090) * C32644) *
                C6129 +
            ((C6132 * C1581 + C32540 * C1584) * C118 +
             (C6132 * C1587 + C32540 * C1590) * C32644) *
                C6130 +
            ((C6132 * C6520 + C32540 * C6521) * C118 +
             (C6132 * C6522 + C32540 * C6523) * C32644) *
                C6131) *
               C531 -
           ((C6438 + C6437) * C6131 + (C6436 + C6435) * C6130 +
            (C6434 + C6433) * C6129 + (C6432 + C6431) * C6128 +
            ((C6132 * C132 + C32540 * C141) * C32644 +
             (C6132 * C120 + C32540 * C127) * C118) *
                C6127) *
               C530) *
              C32589 * C443)) /
            (p * q * std::sqrt(p + q));
    d2ee[124] +=
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C127 +
            C115 * C121 + C103 * C128 + C116 * C122 + C104 * C129 +
            C117 * C123 + C105 * C130) *
               C118 +
           (C113 * C131 + C101 * C140 + C114 * C132 + C102 * C141 +
            C115 * C133 + C103 * C142 + C116 * C134 + C104 * C143 +
            C117 * C135 + C105 * C144) *
               C32644) *
              C32633 * C32603 * C32589 * C110 -
          ((C117 * C136 + C105 * C145 + C116 * C135 + C104 * C144 +
            C115 * C134 + C103 * C143 + C114 * C133 + C102 * C142 +
            C113 * C132 + C101 * C141) *
               C32644 +
           (C117 * C124 + C105 * C137 + C116 * C123 + C104 * C130 +
            C115 * C122 + C103 * C129 + C114 * C121 + C102 * C128 +
            C113 * C120 + C101 * C127) *
               C118) *
              C32633 * C32603 * C32589 * C111 +
          ((C113 * C121 + C101 * C128 + C114 * C122 + C102 * C129 +
            C115 * C123 + C103 * C130 + C116 * C124 + C104 * C137 +
            C117 * C125 + C105 * C138) *
               C118 +
           (C113 * C133 + C101 * C142 + C114 * C134 + C102 * C143 +
            C115 * C135 + C103 * C144 + C116 * C136 + C104 * C145 +
            C117 * C139 + C105 * C146) *
               C32644) *
              C32633 * C32603 * C32589 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C127 +
            C115 * C121 + C103 * C128 + C116 * C122 + C104 * C129 +
            C117 * C123 + C105 * C130) *
               C118 +
           (C113 * C131 + C101 * C140 + C114 * C132 + C102 * C141 +
            C115 * C133 + C103 * C142 + C116 * C134 + C104 * C143 +
            C117 * C135 + C105 * C144) *
               C32644) *
              C32633 * C32603 * C209 -
          ((C117 * C223 + C105 * C243 + C116 * C224 + C104 * C244 +
            C115 * C225 + C103 * C245 + C114 * C226 + C102 * C246 +
            C113 * C227 + C101 * C247) *
               C32644 +
           (C117 * C213 + C105 * C228 + C116 * C214 + C104 * C229 +
            C115 * C215 + C103 * C230 + C114 * C216 + C102 * C231 +
            C113 * C217 + C101 * C232) *
               C118) *
              C32633 * C32603 * C210 +
          ((C113 * C218 + C101 * C233 + C114 * C219 + C102 * C234 +
            C115 * C220 + C103 * C235 + C116 * C221 + C104 * C236 +
            C117 * C222 + C105 * C237) *
               C118 +
           (C113 * C238 + C101 * C248 + C114 * C239 + C102 * C249 +
            C115 * C240 + C103 * C250 + C116 * C241 + C104 * C251 +
            C117 * C242 + C105 * C252) *
               C32644) *
              C32633 * C32603 * C211) *
         C32577) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C754 * C119 + C748 * C126 + C755 * C120 + C749 * C127 +
             C756 * C121 + C32905 * C128) *
                C118 +
            (C754 * C131 + C748 * C140 + C755 * C132 + C749 * C141 +
             C756 * C133 + C32905 * C142) *
                C32644) *
               C32951 +
           ((C754 * C217 + C748 * C232 + C755 * C216 + C749 * C231 +
             C756 * C215 + C32905 * C230) *
                C118 +
            (C754 * C227 + C748 * C247 + C755 * C226 + C749 * C246 +
             C756 * C225 + C32905 * C245) *
                C32644) *
               C32939 +
           ((C754 * C218 + C748 * C233 + C755 * C219 + C749 * C234 +
             C756 * C220 + C32905 * C235) *
                C118 +
            (C754 * C238 + C748 * C248 + C755 * C239 + C749 * C249 +
             C756 * C240 + C32905 * C250) *
                C32644) *
               C32916) *
              C32603 * C32589 * C110 -
          (((C756 * C241 + C32905 * C251 + C755 * C240 + C749 * C250 +
             C754 * C239 + C748 * C249) *
                C32644 +
            (C756 * C221 + C32905 * C236 + C755 * C220 + C749 * C235 +
             C754 * C219 + C748 * C234) *
                C118) *
               C32916 +
           ((C756 * C224 + C32905 * C244 + C755 * C225 + C749 * C245 +
             C754 * C226 + C748 * C246) *
                C32644 +
            (C756 * C214 + C32905 * C229 + C755 * C215 + C749 * C230 +
             C754 * C216 + C748 * C231) *
                C118) *
               C32939 +
           ((C756 * C134 + C32905 * C143 + C755 * C133 + C749 * C142 +
             C754 * C132 + C748 * C141) *
                C32644 +
            (C756 * C122 + C32905 * C129 + C755 * C121 + C749 * C128 +
             C754 * C120 + C748 * C127) *
                C118) *
               C32951) *
              C32603 * C32589 * C111 +
          (((C754 * C121 + C748 * C128 + C755 * C122 + C749 * C129 +
             C756 * C123 + C32905 * C130) *
                C118 +
            (C754 * C133 + C748 * C142 + C755 * C134 + C749 * C143 +
             C756 * C135 + C32905 * C144) *
                C32644) *
               C32951 +
           ((C754 * C215 + C748 * C230 + C755 * C214 + C749 * C229 +
             C756 * C213 + C32905 * C228) *
                C118 +
            (C754 * C225 + C748 * C245 + C755 * C224 + C749 * C244 +
             C756 * C223 + C32905 * C243) *
                C32644) *
               C32939 +
           ((C754 * C220 + C748 * C235 + C755 * C221 + C749 * C236 +
             C756 * C222 + C32905 * C237) *
                C118 +
            (C754 * C240 + C748 * C250 + C755 * C241 + C749 * C251 +
             C756 * C242 + C32905 * C252) *
                C32644) *
               C32916) *
              C32603 * C32589 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C754 * C119 + C748 * C126 + C755 * C120 + C749 * C127 +
             C756 * C121 + C32905 * C128) *
                C118 +
            (C754 * C131 + C748 * C140 + C755 * C132 + C749 * C141 +
             C756 * C133 + C32905 * C142) *
                C32644) *
               C32951 +
           ((C928 + C929 + C930) * C118 + (C931 + C932 + C933) * C32644) *
               C32939 +
           C952 * C32916) *
              C32603 * C209 -
          (((C940 + C941 + C942) * C32644 + (C943 + C944 + C945) * C118) *
               C32916 +
           ((C939 + C938 + C937) * C32644 + (C936 + C935 + C934) * C118) *
               C32939 +
           ((C933 + C932 + C931) * C32644 + (C930 + C929 + C928) * C118) *
               C32951) *
              C32603 * C210 +
          (C952 * C32951 +
           ((C945 + C944 + C943) * C118 + (C942 + C941 + C940) * C32644) *
               C32939 +
           ((C754 * C870 + C748 * C879 + C755 * C871 + C749 * C880 +
             C756 * C872 + C32905 * C881) *
                C118 +
            (C754 * C882 + C748 * C888 + C755 * C883 + C749 * C889 +
             C756 * C884 + C32905 * C890) *
                C32644) *
               C32916) *
              C32603 * C211) *
         C32577) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C5270 * C119 + C32948 * C126 + C5271 * C120 + C32935 * C127 +
             C5272 * C121 + C32905 * C128) *
                C118 +
            (C5270 * C131 + C32948 * C140 + C5271 * C132 + C32935 * C141 +
             C5272 * C133 + C32905 * C142) *
                C32644) *
               C5267 +
           ((C5270 * C217 + C32948 * C232 + C5271 * C216 + C32935 * C231 +
             C5272 * C215 + C32905 * C230) *
                C118 +
            (C5270 * C227 + C32948 * C247 + C5271 * C226 + C32935 * C246 +
             C5272 * C225 + C32905 * C245) *
                C32644) *
               C5268 +
           ((C5270 * C218 + C32948 * C233 + C5271 * C219 + C32935 * C234 +
             C5272 * C220 + C32905 * C235) *
                C118 +
            (C5270 * C238 + C32948 * C248 + C5271 * C239 + C32935 * C249 +
             C5272 * C240 + C32905 * C250) *
                C32644) *
               C32916) *
              C32603 * C32589 * C110 -
          (((C5272 * C241 + C32905 * C251 + C5271 * C240 + C32935 * C250 +
             C5270 * C239 + C32948 * C249) *
                C32644 +
            (C5272 * C221 + C32905 * C236 + C5271 * C220 + C32935 * C235 +
             C5270 * C219 + C32948 * C234) *
                C118) *
               C32916 +
           ((C5272 * C224 + C32905 * C244 + C5271 * C225 + C32935 * C245 +
             C5270 * C226 + C32948 * C246) *
                C32644 +
            (C5272 * C214 + C32905 * C229 + C5271 * C215 + C32935 * C230 +
             C5270 * C216 + C32948 * C231) *
                C118) *
               C5268 +
           ((C5272 * C134 + C32905 * C143 + C5271 * C133 + C32935 * C142 +
             C5270 * C132 + C32948 * C141) *
                C32644 +
            (C5272 * C122 + C32905 * C129 + C5271 * C121 + C32935 * C128 +
             C5270 * C120 + C32948 * C127) *
                C118) *
               C5267) *
              C32603 * C32589 * C111 +
          (((C5270 * C121 + C32948 * C128 + C5271 * C122 + C32935 * C129 +
             C5272 * C123 + C32905 * C130) *
                C118 +
            (C5270 * C133 + C32948 * C142 + C5271 * C134 + C32935 * C143 +
             C5272 * C135 + C32905 * C144) *
                C32644) *
               C5267 +
           ((C5270 * C215 + C32948 * C230 + C5271 * C214 + C32935 * C229 +
             C5272 * C213 + C32905 * C228) *
                C118 +
            (C5270 * C225 + C32948 * C245 + C5271 * C224 + C32935 * C244 +
             C5272 * C223 + C32905 * C243) *
                C32644) *
               C5268 +
           ((C5270 * C220 + C32948 * C235 + C5271 * C221 + C32935 * C236 +
             C5272 * C222 + C32905 * C237) *
                C118 +
            (C5270 * C240 + C32948 * C250 + C5271 * C241 + C32935 * C251 +
             C5272 * C242 + C32905 * C252) *
                C32644) *
               C32916) *
              C32603 * C32589 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C5270 * C119 + C32948 * C126 + C5271 * C120 + C32935 * C127 +
             C5272 * C121 + C32905 * C128) *
                C118 +
            (C5270 * C131 + C32948 * C140 + C5271 * C132 + C32935 * C141 +
             C5272 * C133 + C32905 * C142) *
                C32644) *
               C5267 +
           ((C5420 + C5421 + C5422) * C118 + (C5423 + C5424 + C5425) * C32644) *
               C5268 +
           C5444 * C32916) *
              C32603 * C209 -
          (((C5432 + C5433 + C5434) * C32644 + (C5435 + C5436 + C5437) * C118) *
               C32916 +
           ((C5431 + C5430 + C5429) * C32644 + (C5428 + C5427 + C5426) * C118) *
               C5268 +
           ((C5425 + C5424 + C5423) * C32644 + (C5422 + C5421 + C5420) * C118) *
               C5267) *
              C32603 * C210 +
          (C5444 * C5267 +
           ((C5437 + C5436 + C5435) * C118 + (C5434 + C5433 + C5432) * C32644) *
               C5268 +
           ((C5270 * C870 + C32948 * C879 + C5271 * C871 + C32935 * C880 +
             C5272 * C872 + C32905 * C881) *
                C118 +
            (C5270 * C882 + C32948 * C888 + C5271 * C883 + C32935 * C889 +
             C5272 * C884 + C32905 * C890) *
                C32644) *
               C32916) *
              C32603 * C211) *
         C32577) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C6132 * C119 + C32540 * C126) * C118 +
            (C6132 * C131 + C32540 * C140) * C32644) *
               C6127 +
           ((C6132 * C217 + C32540 * C232) * C118 +
            (C6132 * C227 + C32540 * C247) * C32644) *
               C6128 +
           ((C6132 * C218 + C32540 * C233) * C118 +
            (C6132 * C238 + C32540 * C248) * C32644) *
               C6129 +
           ((C6132 * C869 + C32540 * C878) * C118 +
            (C6132 * C875 + C32540 * C887) * C32644) *
               C6130 +
           ((C6132 * C870 + C32540 * C879) * C118 +
            (C6132 * C882 + C32540 * C888) * C32644) *
               C6131) *
              C32603 * C32589 * C110 -
          (((C6132 * C883 + C32540 * C889) * C32644 +
            (C6132 * C871 + C32540 * C880) * C118) *
               C6131 +
           ((C6132 * C874 + C32540 * C886) * C32644 +
            (C6132 * C868 + C32540 * C877) * C118) *
               C6130 +
           ((C6132 * C239 + C32540 * C249) * C32644 +
            (C6132 * C219 + C32540 * C234) * C118) *
               C6129 +
           ((C6132 * C226 + C32540 * C246) * C32644 +
            (C6132 * C216 + C32540 * C231) * C118) *
               C6128 +
           ((C6132 * C132 + C32540 * C141) * C32644 +
            (C6132 * C120 + C32540 * C127) * C118) *
               C6127) *
              C32603 * C32589 * C111 +
          (((C6132 * C121 + C32540 * C128) * C118 +
            (C6132 * C133 + C32540 * C142) * C32644) *
               C6127 +
           ((C6132 * C215 + C32540 * C230) * C118 +
            (C6132 * C225 + C32540 * C245) * C32644) *
               C6128 +
           ((C6132 * C220 + C32540 * C235) * C118 +
            (C6132 * C240 + C32540 * C250) * C32644) *
               C6129 +
           ((C6132 * C867 + C32540 * C876) * C118 +
            (C6132 * C873 + C32540 * C885) * C32644) *
               C6130 +
           ((C6132 * C872 + C32540 * C881) * C118 +
            (C6132 * C884 + C32540 * C890) * C32644) *
               C6131) *
              C32603 * C32589 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C6132 * C119 + C32540 * C126) * C118 +
            (C6132 * C131 + C32540 * C140) * C32644) *
               C6127 +
           (C6234 + C6235) * C6128 + C6244 * C6129 + C6245 * C6130 +
           C6246 * C6131) *
              C32603 * C209 -
          ((C6242 + C6243) * C6131 + (C6241 + C6240) * C6130 +
           (C6239 + C6238) * C6129 + (C6237 + C6236) * C6128 +
           (C6235 + C6234) * C6127) *
              C32603 * C210 +
          (C6244 * C6127 + C6245 * C6128 + C6246 * C6129 +
           (C6243 + C6242) * C6130 +
           ((C6132 * C6196 + C32540 * C6199) * C118 +
            (C6132 * C6200 + C32540 * C6202) * C32644) *
               C6131) *
              C32603 * C211) *
         C32577) /
            (p * q * std::sqrt(p + q));
}
