/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

#include "gto_d2_kit/d2_ee_ddsd_AA_zy.hpp"
#include <cmath>
/*

*/
#pragma GCC optimize("O0")
namespace {
    const double Pi = M_PI;
}
#pragma GCC optimize("O0")

void second_derivative_ee_2202_11_32(const double ae,
                                     const double xA,
                                     const double yA,
                                     const double zA,
                                     const double be,
                                     const double xB,
                                     const double yB,
                                     const double zB,
                                     const double ce,
                                     const double xC,
                                     const double yC,
                                     const double zC,
                                     const double de,
                                     const double xD,
                                     const double yD,
                                     const double zD,
                                     const double* const bs,
                                     double* const d2ee)
{
    const double p = ae + be;
    const double q = ce + de;
    const double xP = (ae * xA + be * xB) / p;
    const double yP = (ae * yA + be * yB) / p;
    const double zP = (ae * zA + be * zB) / p;
    const double xQ = (ce * xC + de * xD) / q;
    const double yQ = (ce * yC + de * yD) / q;
    const double zQ = (ce * zC + de * zD) / q;
    const double C31509 = ae * be;
    const double C31508 = ae + be;
    const double C31507 = 0 * be;
    const double C31506 = yA - yB;
    const double C31526 = 0 * be;
    const double C31525 = zA - zB;
    const double C31566 = 0 * ae;
    const double C31561 = 0 * be;
    const double C31560 = 0 * be;
    const double C31611 = 0 * be;
    const double C31653 = 0 * ae;
    const double C31648 = 0 * be;
    const double C31647 = 0 * be;
    const double C31698 = 0 * be;
    const double C31760 = std::pow(ae, 2);
    const double C31759 = yP - yQ;
    const double C31758 = zP - zQ;
    const double C31757 = p + q;
    const double C31756 = p * q;
    const double C31768 = bs[4];
    const double C31766 = xP - xQ;
    const double C31773 = bs[5];
    const double C31780 = bs[6];
    const double C31788 = bs[7];
    const double C31808 = bs[3];
    const double C32229 = bs[2];
    const double C115 = bs[0];
    const double C32578 = xA - xB;
    const double C32613 = ce + de;
    const double C32612 = ce * de;
    const double C32611 = xC - xD;
    const double C32625 = yC - yD;
    const double C32639 = zC - zD;
    const double C31510 = std::pow(C31508, 2);
    const double C31544 = 2 * C31508;
    const double C31562 = C31507 / C31508;
    const double C31511 = C31509 * C31506;
    const double C31563 = C31506 * C31507;
    const double C32663 = std::pow(C31506, 2);
    const double C32721 = C31506 * be;
    const double C32719 = C31506 * ae;
    const double C31649 = C31526 / C31508;
    const double C31527 = C31509 * C31525;
    const double C31650 = C31525 * C31526;
    const double C32680 = std::pow(C31525, 2);
    const double C32763 = C31525 * be;
    const double C32761 = C31525 * ae;
    const double C31573 = C31566 / C31508;
    const double C31568 = C31506 * C31561;
    const double C31612 = C31611 / C31508;
    const double C31660 = C31653 / C31508;
    const double C31655 = C31525 * C31648;
    const double C31699 = C31698 / C31508;
    const double C31838 = C31759 * ae;
    const double C31893 = std::pow(C31759, 2);
    const double C31762 = C31758 * C31759;
    const double C31797 = C31758 * ae;
    const double C31976 = std::pow(C31758, 2);
    const double C31761 = 2 * C31756;
    const double C31774 = std::pow(C31766, 2);
    const double C32581 = C32578 * be;
    const double C32580 = C32578 * ae;
    const double C32579 = std::pow(C32578, 2);
    const double C32918 = 2 * C32613;
    const double C32917 = std::pow(C32613, 2);
    const double C32614 = std::pow(C32611, 2);
    const double C32916 = C32611 * ce;
    const double C32626 = std::pow(C32625, 2);
    const double C32919 = C32625 * ce;
    const double C32640 = std::pow(C32639, 2);
    const double C32920 = C32639 * ce;
    const double C31512 = 2 * C31510;
    const double C136 = (std::pow((2 * p * q) / (p + q), 2) * bs[2] *
                         (zP - zQ) * (yP - yQ) * std::pow(ae, 2)) /
                        C31510;
    const double C137 = ((xP - xQ) * std::pow(-(2 * p * q) / (p + q), 3) *
                         bs[3] * (zP - zQ) * (yP - yQ) * std::pow(ae, 2)) /
                        C31510;
    const double C32914 = 4 * C31510;
    const double C32593 = std::pow(C31544, -1);
    const double C32915 = C31510 * C31544;
    const double C32911 = std::pow(C31544, -2);
    const double C31571 = C31563 / C31508;
    const double C32664 = C32663 * C31509;
    const double C32921 = std::pow(C32719, 2);
    const double C31658 = C31650 / C31508;
    const double C32681 = C32680 * C31509;
    const double C32923 = std::pow(C32761, 2);
    const double C31574 = C31568 / C31508;
    const double C31661 = C31655 / C31508;
    const double C31839 = C31773 * C31838;
    const double C31842 = C31768 * C31838;
    const double C31848 = C31808 * C31838;
    const double C31857 = C31780 * C31838;
    const double C31867 = C31788 * C31838;
    const double C31764 = C31762 * C31760;
    const double C31798 = C31773 * C31797;
    const double C31801 = C31768 * C31797;
    const double C31809 = C31808 * C31797;
    const double C31818 = C31780 * C31797;
    const double C31828 = C31788 * C31797;
    const double C31763 = C31761 / C31757;
    const double C122 = (-(bs[1] * C31838 * C31761) / C31757) / C31508;
    const double C123 = (-(bs[1] * C31797 * C31761) / C31757) / C31508;
    const double C116 = -(C31766 * bs[1] * C31761) / C31757;
    const double C256 = -(C31759 * bs[1] * C31761) / C31757;
    const double C361 = -(C31758 * bs[1] * C31761) / C31757;
    const double C32904 = std::pow(C32580, 2);
    const double C32582 = C32579 * C31509;
    const double C32951 = std::pow(C32918, -2);
    const double C32949 = std::pow(C32918, -1);
    const double C32615 = C32614 * C32612;
    const double C32627 = C32626 * C32612;
    const double C32641 = C32640 * C32612;
    const double C31565 = C31507 / C31512;
    const double C31570 = C31561 / C31512;
    const double C31569 = C31560 / C31512;
    const double C31652 = C31526 / C31512;
    const double C31657 = C31648 / C31512;
    const double C31656 = C31647 / C31512;
    const double C32947 = C31508 * C32914;
    const double C32948 = 4 * C32915;
    const double C31575 = 0 - C31571;
    const double C32665 = C32664 / C31508;
    const double C31662 = 0 - C31658;
    const double C32682 = C32681 / C31508;
    const double C31578 = 0 - C31574;
    const double C31665 = 0 - C31661;
    const double C31769 = C31768 * C31764;
    const double C31776 = C31773 * C31764;
    const double C31781 = C31780 * C31764;
    const double C31790 = C31788 * C31764;
    const double C31767 = std::pow(C31763, 4);
    const double C31772 = -C31763;
    const double C31779 = std::pow(C31763, 6);
    const double C138 =
        (std::pow(-C31763, 3) * bs[3] * C31764 +
         std::pow(C31763, 4) * bs[4] * C31764 * std::pow(xP - xQ, 2)) /
        C31510;
    const double C32228 = std::pow(C31763, 2);
    const double C124 =
        (C31766 * std::pow(C31763, 2) * bs[2] * C31838) / C31508;
    const double C125 =
        (C31766 * std::pow(C31763, 2) * bs[2] * C31797) / C31508;
    const double C270 =
        (C31759 * std::pow(C31763, 2) * bs[2] * C31797) / C31508;
    const double C271 =
        (C31759 * std::pow(C31763, 2) * bs[2] * C31838) / C31508 -
        (ae * bs[1] * C31761) / (C31757 * C31508);
    const double C32583 = C32582 / C31508;
    const double C32616 = C32615 / C32613;
    const double C32628 = C32627 / C32613;
    const double C32642 = C32641 / C32613;
    const double C31579 = C31575 * ae;
    const double C32666 = -C32665;
    const double C31666 = C31662 * ae;
    const double C32683 = -C32682;
    const double C31582 = C31578 * ae;
    const double C31669 = C31665 * ae;
    const double C31770 = C31767 * C31769;
    const double C31802 = C31767 * C31801;
    const double C31843 = C31767 * C31842;
    const double C31882 = C31768 * C31767;
    const double C31775 = std::pow(C31772, 5);
    const double C31787 = std::pow(C31772, 7);
    const double C31807 = std::pow(C31772, 3);
    const double C286 = (ae * std::pow(C31763, 2) * bs[2] * C31797 +
                         C31759 * std::pow(C31772, 3) * bs[3] * C31764) /
                        C31510;
    const double C31782 = C31779 * C31781;
    const double C31820 = C31779 * C31818;
    const double C31859 = C31779 * C31857;
    const double C31951 = C31780 * C31779;
    const double C32230 = C32229 * C32228;
    const double C375 = (C31758 * C32228 * C32229 * C31797) / C31508 -
                        (ae * bs[1] * C31761) / (C31757 * C31508);
    const double C376 = (C31758 * C32228 * C32229 * C31838) / C31508;
    const double C32584 = -C32583;
    const double C32617 = -C32616;
    const double C32629 = -C32628;
    const double C32643 = -C32642;
    const double C31583 = C31579 / C31508;
    const double C32667 = std::exp(C32666);
    const double C31670 = C31666 / C31508;
    const double C32684 = std::exp(C32683);
    const double C31586 = C31582 / C31508;
    const double C31673 = C31669 / C31508;
    const double C139 = (2 * C31766 * C31770 +
                         C31766 * (C31770 + std::pow(-C31763, 5) * bs[5] *
                                                C31764 * std::pow(C31766, 2))) /
                        C31510;
    const double C285 = (ae * C31766 * std::pow(C31772, 3) * bs[3] * C31797 +
                         C31759 * C31766 * C31770) /
                        C31510;
    const double C31812 = C31766 * C31802;
    const double C31891 = ae * C31802;
    const double C31890 = C31759 * C31802;
    const double C32340 = C31758 * C31802;
    const double C31851 = C31766 * C31843;
    const double C31919 = C31759 * C31843;
    const double C31974 = ae * C31843;
    const double C31973 = C31758 * C31843;
    const double C31915 = C31766 * C31882;
    const double C31925 = C31759 * C31882;
    const double C31924 = C31882 * ae;
    const double C32236 = C31882 * C31774;
    const double C32291 = C31882 * C31893;
    const double C32342 = C31882 * C31976;
    const double C32419 = C31758 * C31882;
    const double C31777 = C31775 * C31776;
    const double C31799 = C31775 * C31798;
    const double C31840 = C31775 * C31839;
    const double C31884 = C31773 * C31775;
    const double C31791 = C31787 * C31790;
    const double C31830 = C31787 * C31828;
    const double C31869 = C31787 * C31867;
    const double C31810 = C31807 * C31809;
    const double C31849 = C31807 * C31848;
    const double C31917 = C31808 * C31807;
    const double C390 =
        (ae * C31766 * C31807 * C31808 * C31838 + C31758 * C31766 * C31770) /
        C31510;
    const double C391 = (ae * std::pow(C31763, 2) * bs[2] * C31838 +
                         C31758 * C31807 * C31808 * C31764) /
                        C31510;
    const double C31783 = C31782 * C31774;
    const double C31786 = C31766 * C31782;
    const double C32005 = C31759 * C31782;
    const double C32135 = C31758 * C31782;
    const double C31821 = C31820 * C31774;
    const double C31827 = C31766 * C31820;
    const double C32006 = C31820 * C31893;
    const double C32020 = ae * C31820;
    const double C32019 = C31759 * C31820;
    const double C32434 = C31758 * C31820;
    const double C31860 = C31859 * C31774;
    const double C31866 = C31766 * C31859;
    const double C32043 = C31759 * C31859;
    const double C32136 = C31859 * C31976;
    const double C32150 = ae * C31859;
    const double C32149 = C31758 * C31859;
    const double C31952 = C31951 * C31774;
    const double C32061 = C31951 * C31893;
    const double C32060 = C31759 * C31951;
    const double C32059 = C31951 * ae;
    const double C32096 = C31766 * C31951;
    const double C32437 = C31951 * C31976;
    const double C117 = C32230 * C31774 - (bs[1] * C31761) / C31757;
    const double C255 = C31759 * C31766 * C32230;
    const double C257 = C32230 * C31893 - (bs[1] * C31761) / C31757;
    const double C360 = C31758 * C31766 * C32230;
    const double C362 = C32230 * C31976 - (bs[1] * C31761) / C31757;
    const double C721 = C31758 * C31759 * C32230;
    const double C32585 = std::exp(C32584);
    const double C32618 = std::exp(C32617);
    const double C32630 = std::exp(C32629);
    const double C32644 = std::exp(C32643);
    const double C31587 = C31583 - C31570;
    const double C151 = C32667 * C138;
    const double C147 = C32667 * C137;
    const double C145 = C32667 * C124;
    const double C2134 = C32667 * C376;
    const double C31513 = C31511 * C32667;
    const double C113 = -(2 * ae * be * (yA - yB) * C32667) / (ae + be);
    const double C32720 = C32667 / C31544;
    const double C32722 = C32667 * C32719;
    const double C32729 = C32593 * C32667;
    const double C32927 = C32667 * C32721;
    const double C32956 = C32911 * C32667;
    const double C32954 = C32667 * C32921;
    const double C31674 = C31670 - C31657;
    const double C31528 = C31527 * C32684;
    const double C114 = -(2 * ae * be * (zA - zB) * C32684) / (ae + be);
    const double C32762 = C32684 / C31544;
    const double C32764 = C32684 * C32761;
    const double C32771 = C32593 * C32684;
    const double C32933 = C32684 * C32763;
    const double C32959 = C32911 * C32684;
    const double C32957 = C32684 * C32923;
    const double C31590 = C31586 - C31569;
    const double C31677 = C31673 - C31656;
    const double C155 = C32667 * C139;
    const double C501 = C32667 * C285;
    const double C31933 = C31915 * ae;
    const double C32240 = 2 * C31915;
    const double C32295 = C31759 * C31915;
    const double C32348 = C31758 * C31915;
    const double C31927 = C31925 * ae;
    const double C32372 = 2 * C31925;
    const double C32401 = C31758 * C31925;
    const double C32424 = 2 * C32419;
    const double C32422 = C32419 * ae;
    const double C31887 = C31766 * C31777;
    const double C31892 = C31759 * C31777;
    const double C31975 = C31758 * C31777;
    const double C140 =
        (3 * (C31770 + C31777 * C31774) +
         C31766 * (2 * C31766 * C31777 +
                   C31766 * (C31777 +
                             std::pow(C31763, 6) * bs[6] * C31764 * C31774))) /
        C31510;
    const double C284 =
        (ae * (std::pow(C31772, 3) * bs[3] * C31797 + C31802 * C31774) +
         C31759 * (C31770 + C31777 * C31774)) /
        C31510;
    const double C288 = (C31766 * C31770 + ae * C31759 * C31812 +
                         C31759 * (ae * C31812 + C31759 * C31766 * C31777)) /
                        C31510;
    const double C389 = (ae * (C31807 * C31808 * C31838 + C31843 * C31774) +
                         C31758 * (C31770 + C31777 * C31774)) /
                        C31510;
    const double C393 = (C31766 * C31770 + ae * C31758 * C31851 +
                         C31758 * (ae * C31851 + C31758 * C31766 * C31777)) /
                        C31510;
    const double C737 =
        (ae * (C31759 * C31851 + C31766 * C31808 * C31807 * ae) +
         C31758 * (ae * C31812 + C31759 * C31766 * C31777)) /
        C31510;
    const double C31814 = C31799 * C31774;
    const double C31817 = C31766 * C31799;
    const double C31895 = C31799 * C31893;
    const double C32004 = ae * C31799;
    const double C32003 = C31759 * C31799;
    const double C32418 = C31758 * C31799;
    const double C31853 = C31840 * C31774;
    const double C31856 = C31766 * C31840;
    const double C31923 = C31759 * C31840;
    const double C31978 = C31840 * C31976;
    const double C32134 = ae * C31840;
    const double C32133 = C31758 * C31840;
    const double C31912 = C31884 * C31774;
    const double C31937 = C31766 * C31884;
    const double C32039 = C31884 * C31893;
    const double C32045 = C31759 * C31884;
    const double C32044 = C31884 * ae;
    const double C32420 = C31884 * C31976;
    const double C32435 = C31758 * C31884;
    const double C31792 = C31791 * C31774;
    const double C32021 = C31759 * C31791;
    const double C32082 = C31766 * C31791;
    const double C32151 = C31758 * C31791;
    const double C31831 = C31830 * C31774;
    const double C32023 = C31830 * C31893;
    const double C32083 = C31766 * C31830;
    const double C31870 = C31869 * C31774;
    const double C32058 = C31759 * C31869;
    const double C32117 = C31766 * C31869;
    const double C32153 = C31869 * C31976;
    const double C287 = (C31807 * C31808 * C31764 + ae * C31759 * C31810 +
                         C31759 * (ae * C31810 + C31759 * C31770)) /
                        C31510;
    const double C1051 = (2 * (ae * C31810 + C31759 * C31770) +
                          ae * (C31810 + C31802 * std::pow(C31759, 2)) +
                          C31759 * (C31770 + ae * C31759 * C31802 +
                                    C31759 * (ae * C31802 + C31759 * C31777))) /
                         C31510;
    const double C127 =
        (std::pow(C31763, 2) * bs[2] * C31797 + C31810 * C31774) / C31508;
    const double C129 =
        (2 * C31766 * C31810 + C31766 * (C31810 + C31802 * C31774)) / C31508;
    const double C266 = (C31759 * (C31810 + C31802 * C31774)) / C31508;
    const double C268 = (C31759 * C31766 * C31810) / C31508;
    const double C273 = (C32228 * C32229 * C31797 + C31810 * C31893) / C31508;
    const double C275 = (C31766 * C31810 + C31812 * C31893) / C31508;
    const double C373 =
        (C31758 * C31766 * C31810 + C31766 * C32230 * ae) / C31508;
    const double C378 =
        (C32228 * C32229 * C31797 + C31758 * (C31758 * C31810 + C32230 * ae) +
         C31758 * C32230 * ae) /
        C31508;
    const double C727 =
        (C31758 * C31759 * C31810 + C31759 * C32230 * ae) / C31508;
    const double C1041 =
        (2 * C31759 * C31810 + C31759 * (C31810 + C31802 * C31893)) / C31508;
    const double C392 = (C31807 * C31808 * C31764 + ae * C31758 * C31849 +
                         C31758 * (ae * C31849 + C31758 * C31770)) /
                        C31510;
    const double C736 =
        (ae * (C31759 * C31849 + bs[2] * std::pow(C31763, 2) * ae) +
         C31758 * (ae * C31810 + C31759 * C31770)) /
        C31510;
    const double C2128 = (2 * (ae * C31849 + C31758 * C31770) +
                          ae * (C31849 + C31843 * std::pow(C31758, 2)) +
                          C31758 * (C31770 + ae * C31758 * C31843 +
                                    C31758 * (ae * C31843 + C31758 * C31777))) /
                         C31510;
    const double C126 =
        (std::pow(C31763, 2) * bs[2] * C31838 + C31849 * C31774) / C31508;
    const double C128 =
        (2 * C31766 * C31849 + C31766 * (C31849 + C31843 * C31774)) / C31508;
    const double C269 =
        (C31759 * C31766 * C31849 + C31766 * bs[2] * std::pow(C31763, 2) * ae) /
        C31508;
    const double C272 =
        (C32228 * C32229 * C31838 + C31759 * (C31759 * C31849 + C32230 * ae) +
         C31759 * C32230 * ae) /
        C31508;
    const double C372 = (C31758 * (C31849 + C31843 * C31774)) / C31508;
    const double C374 = (C31758 * C31766 * C31849) / C31508;
    const double C377 = (C32228 * C32229 * C31838 + C31849 * C31976) / C31508;
    const double C379 = (C31766 * C31849 + C31851 * C31976) / C31508;
    const double C726 = (C31758 * (C31759 * C31849 + C32230 * ae)) / C31508;
    const double C2119 =
        (2 * C31758 * C31849 + C31758 * (C31849 + C31843 * C31976)) / C31508;
    const double C31920 = C31917 * ae;
    const double C32233 = C31766 * C31917;
    const double C32237 = C31917 + C32236;
    const double C32290 = C31759 * C31917;
    const double C32292 = C31917 + C32291;
    const double C32341 = C31758 * C31917;
    const double C32344 = C31917 + C32342;
    const double C267 = (C31759 * (C31849 + C31843 * C31774) +
                         (bs[2] * std::pow(C31763, 2) + C31917 * C31774) * ae) /
                        C31508;
    const double C371 = (C31758 * (C31810 + C31802 * C31774) +
                         (C32230 + C31917 * C31774) * ae) /
                        C31508;
    const double C1178 = (C31758 * (C31810 + C31802 * C31893) +
                          (C32230 + C31917 * C31893) * ae) /
                         C31508;
    const double C118 =
        2 * C31766 * C32230 + C31766 * (C32230 + C31917 * C31774);
    const double C254 = C31759 * (C32230 + C31917 * C31774);
    const double C359 = C31758 * (C32230 + C31917 * C31774);
    const double C1033 =
        2 * C31759 * C32230 + C31759 * (C32230 + C31917 * C31893);
    const double C1167 = C31758 * (C32230 + C31917 * C31893);
    const double C2110 =
        2 * C31758 * C32230 + C31758 * (C32230 + C31917 * C31976);
    const double C621 = C32667 * C390;
    const double C2136 = C32667 * C391;
    const double C31784 = C31777 + C31783;
    const double C31789 = 2 * C31786;
    const double C31900 = C31759 * C31786;
    const double C31983 = C31758 * C31786;
    const double C31822 = C31799 + C31821;
    const double C31829 = 2 * C31827;
    const double C31901 = C31827 * C31893;
    const double C32081 = ae * C31827;
    const double C32080 = C31759 * C31827;
    const double C32462 = C31758 * C31827;
    const double C32010 = C31799 + C32006;
    const double C32027 = 2 * C32019;
    const double C32025 = ae * C32019;
    const double C32476 = C31758 * C32019;
    const double C31861 = C31840 + C31860;
    const double C31868 = 2 * C31866;
    const double C31936 = C31759 * C31866;
    const double C31984 = C31866 * C31976;
    const double C32177 = ae * C31866;
    const double C32176 = C31758 * C31866;
    const double C32140 = C31840 + C32136;
    const double C32157 = 2 * C32149;
    const double C32155 = ae * C32149;
    const double C31953 = C31884 + C31952;
    const double C32065 = C31884 + C32061;
    const double C32064 = C32060 * ae;
    const double C32478 = C32060 * C31976;
    const double C32097 = C32096 * C31893;
    const double C32119 = C31759 * C32096;
    const double C32118 = C32096 * ae;
    const double C32464 = C32096 * C31976;
    const double C32441 = C31884 + C32437;
    const double C32587 = C32585 * C32580;
    const double C32586 = C32585 / C31544;
    const double C32595 = C32593 * C32585;
    const double C32907 = C32585 * C32581;
    const double C32945 = C32911 * C32585;
    const double C32939 = C32585 * C32904;
    const double C32950 = C32618 * C32916;
    const double C110 =
        (C32618 * std::pow(C32916, 2)) / C32917 + C32618 / C32918;
    const double C112 = C32951 * C32618;
    const double C482 = C32949 * C32618;
    const double C32952 = C32630 * C32919;
    const double C248 =
        (C32630 * std::pow(C32919, 2)) / C32917 + C32630 / C32918;
    const double C250 = C32951 * C32630;
    const double C480 = C32949 * C32630;
    const double C32953 = C32644 * C32920;
    const double C354 =
        (C32644 * std::pow(C32920, 2)) / C32917 + C32644 / C32918;
    const double C356 = C32951 * C32644;
    const double C602 = C32949 * C32644;
    const double C31592 = C31587 / C31544;
    const double C31591 = C31506 * C31587;
    const double C31545 = 2 * C31513;
    const double C31567 = C31513 / C31510;
    const double C859 = ((0 * ae) / C31508 - C31513 / C31510) / (2 * C31508) +
                        (0 * ae) / C31508;
    const double C2784 =
        ((C32667 - (C31506 * 2 * C31513) / C31508) * ae) / C31508 -
        C31507 / C31512;
    const double C2785 = (0 * ae) / C31508 - C31513 / C31510;
    const double C148 = C113 * C117;
    const double C146 = C113 * C125;
    const double C144 = C113 * C116;
    const double C502 = C113 * C255;
    const double C622 = C113 * C360;
    const double C2137 = C113 * C362;
    const double C2135 = C113 * C375;
    const double C2133 = C113 * C361;
    const double C2669 = C113 * C721;
    const double C5471 = (C32667 * std::pow(C32721, 2)) / C31510 + C32720;
    const double C32723 = C32722 * C32721;
    const double C32728 = C32722 / C31512;
    const double C32925 = C32722 / C31508;
    const double C32922 = C32593 * C32722;
    const double C2794 = C32729 * C285;
    const double C15063 = C32729 * C285;
    const double C858 =
        (((C32667 - (C31506 * 2 * C31513) / C31508) * ae) / C31508 -
         C31507 / C31512) /
            (2 * C31508) +
        ((C31506 * ((0 * ae) / C31508 - C31513 / C31510) + C32729) * ae) /
            C31508;
    const double C32730 = C32729 * C32721;
    const double C32931 = C32719 * C32729;
    const double C32930 = 2 * C32729;
    const double C32966 = C32729 / C32914;
    const double C6337 = C32729 / C32948;
    const double C17823 = C32729 / C31544;
    const double C32962 = C32927 / C31508;
    const double C5472 = (-2 * C32593 * C32927) / C31508;
    const double C32978 = C32954 / C31510;
    const double C31679 = C31674 / C31544;
    const double C31678 = C31525 * C31674;
    const double C31632 = 2 * C31528;
    const double C31654 = C31528 / C31510;
    const double C1846 = ((0 * ae) / C31508 - C31528 / C31510) / (2 * C31508) +
                         (0 * ae) / C31508;
    const double C3602 =
        ((C32684 - (C31525 * 2 * C31528) / C31508) * ae) / C31508 -
        C31526 / C31512;
    const double C3603 = (0 * ae) / C31508 - C31528 / C31510;
    const double C10352 = (C32684 * std::pow(C32763, 2)) / C31510 + C32762;
    const double C32765 = C32764 * C32763;
    const double C32770 = C32764 / C31512;
    const double C32926 = C32764 / C31508;
    const double C32924 = C32593 * C32764;
    const double C1845 =
        (((C32684 - (C31525 * 2 * C31528) / C31508) * ae) / C31508 -
         C31526 / C31512) /
            (2 * C31508) +
        ((C31525 * ((0 * ae) / C31508 - C31528 / C31510) + C32771) * ae) /
            C31508;
    const double C32772 = C32771 * C32763;
    const double C32937 = C32761 * C32771;
    const double C32936 = 2 * C32771;
    const double C32972 = C32771 / C32914;
    const double C12009 = C32771 / C32948;
    const double C24425 = C32771 / C31544;
    const double C32968 = C32933 / C31508;
    const double C10353 = (-2 * C32593 * C32933) / C31508;
    const double C32980 = C32957 / C31510;
    const double C31596 = C31590 + C31562;
    const double C31683 = C31677 + C31649;
    const double C31894 = C31891 + C31892;
    const double C31977 = C31974 + C31975;
    const double C159 = C32667 * C140;
    const double C497 = C32667 * C284;
    const double C2802 = C32729 * C284;
    const double C15071 = C32729 * C284;
    const double C872 = C32956 * C288;
    const double C3188 = C32729 * C288;
    const double C5492 = C32956 * C288;
    const double C15457 = C32729 * C288;
    const double C617 = C32667 * C389;
    const double C1855 = C32667 * C393;
    const double C2328 = C32667 * C737;
    const double C3354 = C32729 * C737;
    const double C15623 = C32729 * C737;
    const double C31815 = C31802 + C31814;
    const double C31819 = 2 * C31817;
    const double C31899 = ae * C31817;
    const double C31898 = C31759 * C31817;
    const double C1050 = (2 * (ae * C31812 + C31759 * C31887) +
                          ae * (C31812 + C31817 * std::pow(C31759, 2)) +
                          C31759 * (C31887 + ae * C31759 * C31817 +
                                    C31759 * (ae * C31817 + C31759 * C31786))) /
                         C31510;
    const double C32347 = C31758 * C31817;
    const double C1039 =
        (2 * C31759 * C31812 + C31759 * (C31812 + C31817 * C31893)) / C31508;
    const double C31896 = C31802 + C31895;
    const double C32008 = C32004 + C32005;
    const double C32009 = 2 * C32003;
    const double C32007 = ae * C32003;
    const double C32400 = C31758 * C32003;
    const double C32421 = C32418 + C31924;
    const double C31854 = C31843 + C31853;
    const double C31858 = 2 * C31856;
    const double C31932 = C31759 * C31856;
    const double C31982 = ae * C31856;
    const double C31981 = C31758 * C31856;
    const double C2127 = (2 * (ae * C31851 + C31758 * C31887) +
                          ae * (C31851 + C31856 * std::pow(C31758, 2)) +
                          C31758 * (C31887 + ae * C31758 * C31856 +
                                    C31758 * (ae * C31856 + C31758 * C31786))) /
                         C31510;
    const double C2117 =
        (2 * C31758 * C31851 + C31758 * (C31851 + C31856 * C31976)) / C31508;
    const double C31926 = C31923 + C31924;
    const double C31979 = C31843 + C31978;
    const double C32138 = C32134 + C32135;
    const double C32139 = 2 * C32133;
    const double C32137 = ae * C32133;
    const double C31913 = C31882 + C31912;
    const double C31939 = C31759 * C31937;
    const double C31938 = C31937 * ae;
    const double C31963 = 2 * C31937;
    const double C32296 = C31937 * C31893;
    const double C32349 = C31937 * C31976;
    const double C32463 = C31758 * C31937;
    const double C32040 = C31882 + C32039;
    const double C32048 = C32045 * ae;
    const double C32062 = 2 * C32045;
    const double C32402 = C32045 * C31976;
    const double C32477 = C31758 * C32045;
    const double C32047 = C32043 + C32044;
    const double C32439 = C32434 + C32044;
    const double C32423 = C31882 + C32420;
    const double C32442 = 2 * C32435;
    const double C32440 = C32435 * ae;
    const double C31793 = C31782 + C31792;
    const double C32026 = C32020 + C32021;
    const double C32085 = C31759 * C32082;
    const double C32178 = C31758 * C32082;
    const double C32156 = C32150 + C32151;
    const double C31832 = C31820 + C31831;
    const double C32028 = C31820 + C32023;
    const double C32087 = C32083 * C31893;
    const double C31871 = C31859 + C31870;
    const double C32063 = C32058 + C32059;
    const double C32121 = C31759 * C32117;
    const double C32179 = C32117 * C31976;
    const double C32158 = C31859 + C32153;
    const double C150 = C113 * C127;
    const double C154 = C113 * C129;
    const double C496 = C113 * C266;
    const double C500 = C113 * C268;
    const double C620 = C113 * C373;
    const double C2139 = C113 * C378;
    const double C2671 = C113 * C727;
    const double C2140 = C32667 * C392;
    const double C2672 = C32667 * C736;
    const double C4697 = C32729 * C736;
    const double C17031 = C32729 * C736;
    const double C2150 = C32667 * C2128;
    const double C149 = C32667 * C126;
    const double C153 = C32667 * C128;
    const double C503 = C32667 * C269;
    const double C2790 = C32729 * C269;
    const double C15059 = C32729 * C269;
    const double C619 = C32667 * C372;
    const double C623 = C32667 * C374;
    const double C2138 = C32667 * C377;
    const double C1853 = C32667 * C379;
    const double C2670 = C32667 * C726;
    const double C4693 = C32729 * C726;
    const double C17027 = C32729 * C726;
    const double C2152 = C32667 * C2119;
    const double C31921 = C31919 + C31920;
    const double C32343 = C32340 + C31920;
    const double C2118 =
        (2 * (C31758 * C31810 + C32230 * ae) +
         C31758 * (C31810 + C31758 * (C31758 * C31802 + C31920) +
                   C31758 * C31917 * ae) +
         (C32230 + C31917 * C31976) * ae) /
        C31508;
    const double C274 =
        (C31766 * C31849 + C31759 * (C31759 * C31851 + C32233 * ae) +
         C31759 * C32233 * ae) /
        C31508;
    const double C380 =
        (C31766 * C31810 + C31758 * (C31758 * C31812 + C32233 * ae) +
         C31758 * C32233 * ae) /
        C31508;
    const double C728 = (C31758 * (C31759 * C31851 + C32233 * ae)) / C31508;
    const double C729 =
        (C31758 * C31759 * C31812 + C31759 * C32233 * ae) / C31508;
    const double C1176 = (C31758 * (C31812 + C31817 * C31893) +
                          (C32233 + C31915 * C31893) * ae) /
                         C31508;
    const double C2116 =
        (2 * (C31758 * C31812 + C32233 * ae) +
         C31758 * (C31812 + C31758 * (C31758 * C31817 + C31933) +
                   C31758 * C31915 * ae) +
         (C32233 + C31915 * C31976) * ae) /
        C31508;
    const double C258 = C31766 * C32230 + C32233 * C31893;
    const double C363 = C31766 * C32230 + C32233 * C31976;
    const double C722 = C31758 * C31759 * C32233;
    const double C1032 =
        2 * C31759 * C32233 + C31759 * (C32233 + C31915 * C31893);
    const double C1166 = C31758 * (C32233 + C31915 * C31893);
    const double C1170 = C31759 * C32233 + C32295 * C31976;
    const double C2109 =
        2 * C31758 * C32233 + C31758 * (C32233 + C31915 * C31976);
    const double C119 = 3 * (C32230 + C31917 * C31774) +
                        C31766 * (2 * C32233 + C31766 * C32237);
    const double C253 = C31759 * (2 * C32233 + C31766 * C32237);
    const double C259 = C32230 + C31917 * C31774 + C32237 * C31893;
    const double C358 = C31758 * (2 * C32233 + C31766 * C32237);
    const double C364 = C32230 + C31917 * C31774 + C32237 * C31976;
    const double C723 = C31758 * C31759 * C32237;
    const double C1182 =
        (C31759 * C31810 + C31758 * (C31758 * C31890 + C32290 * ae) +
         C31758 * C32290 * ae) /
        C31508;
    const double C2660 =
        (2 * (C31758 * C31890 + C32290 * ae) +
         C31758 * (C31890 + C31758 * (C31758 * C32003 + C31927) +
                   C31758 * C31925 * ae) +
         (C32290 + C31925 * C31976) * ae) /
        C31508;
    const double C1168 = C31759 * C32230 + C32290 * C31976;
    const double C2656 =
        2 * C31758 * C32290 + C31758 * (C32290 + C31925 * C31976);
    const double C1034 = 3 * (C32230 + C31917 * C31893) +
                         C31759 * (2 * C32290 + C31759 * C32292);
    const double C1169 = C32230 + C31917 * C31893 + C32292 * C31976;
    const double C1719 = C31758 * (2 * C32290 + C31759 * C32292);
    const double C2111 = 3 * (C32230 + C31917 * C31976) +
                         C31758 * (2 * C32341 + C31758 * C32344);
    const double C499 = C32667 * C267;
    const double C2798 = C32729 * C267;
    const double C15067 = C32729 * C267;
    const double C616 = C113 * C371;
    const double C152 = C113 * C118;
    const double C498 = C113 * C254;
    const double C618 = C113 * C359;
    const double C2151 = C113 * C2110;
    const double C141 =
        (4 * (2 * C31766 * C31777 + C31766 * C31784) +
         C31766 * (3 * C31784 +
                   C31766 * (2 * C31766 * C31782 +
                             C31766 * (C31782 + std::pow(C31772, 7) * bs[7] *
                                                    C31764 * C31774)))) /
        C31510;
    const double C283 =
        (ae * (2 * C31766 * C31802 + C31766 * (C31802 + C31799 * C31774)) +
         C31759 * (2 * C31766 * C31777 + C31766 * C31784)) /
        C31510;
    const double C388 =
        (ae * (2 * C31766 * C31843 + C31766 * (C31843 + C31840 * C31774)) +
         C31758 * (2 * C31766 * C31777 + C31766 * C31784)) /
        C31510;
    const double C31823 = C31766 * C31822;
    const double C31826 = 3 * C31822;
    const double C31906 = ae * C31822;
    const double C31905 = C31759 * C31822;
    const double C32354 = C31758 * C31822;
    const double C31903 = C31817 + C31901;
    const double C32086 = 2 * C32080;
    const double C32084 = ae * C32080;
    const double C32455 = C31758 * C32080;
    const double C32013 = C31759 * C32010;
    const double C32022 = 3 * C32010;
    const double C32018 = ae * C32010;
    const double C32406 = C31758 * C32010;
    const double C32029 = C31782 + C32025;
    const double C31862 = C31766 * C31861;
    const double C31865 = 3 * C31861;
    const double C31946 = C31759 * C31861;
    const double C31989 = ae * C31861;
    const double C31988 = C31758 * C31861;
    const double C31986 = C31856 + C31984;
    const double C32182 = 2 * C32176;
    const double C32180 = ae * C32176;
    const double C32143 = C31758 * C32140;
    const double C32152 = 3 * C32140;
    const double C32148 = ae * C32140;
    const double C32159 = C31782 + C32155;
    const double C31955 = C31759 * C31953;
    const double C31954 = C31953 * ae;
    const double C31964 = C31766 * C31953;
    const double C32301 = C31953 * C31893;
    const double C32356 = C31953 * C31976;
    const double C32068 = C31759 * C32065;
    const double C32067 = C32065 * ae;
    const double C32408 = C32065 * C31976;
    const double C32481 = C32045 + C32478;
    const double C32098 = C31937 + C32097;
    const double C32122 = C32119 * ae;
    const double C32457 = C32119 * C31976;
    const double C32467 = C31937 + C32464;
    const double C32444 = C31758 * C32441;
    const double C32588 = C32587 * C32581;
    const double C32594 = C32587 / C31512;
    const double C32908 = C32593 * C32587;
    const double C32906 = C32587 / C31508;
    const double C854 = (C32585 * std::pow(C32581, 2)) / C31510 + C32586;
    const double C32596 = C32595 * C32581;
    const double C32912 = C32580 * C32595;
    const double C32910 = 2 * C32595;
    const double C32960 = C32595 / C32914;
    const double C107 = C32595 / C32948;
    const double C17826 = C32595 / C31544;
    const double C32941 = C32907 / C31508;
    const double C855 = (-2 * C32593 * C32907) / C31508;
    const double C32973 = C32939 / C31510;
    const double C111 = (2 * C32949 * C32950) / C32613;
    const double C481 = C32950 / C32613;
    const double C249 = (2 * C32949 * C32952) / C32613;
    const double C479 = C32952 / C32613;
    const double C355 = (2 * C32949 * C32953) / C32613;
    const double C601 = C32953 / C32613;
    const double C31597 = C31591 + 0;
    const double C31564 = C31506 * C31545;
    const double C5478 =
        ((-C31507 / C31508) / C31544 -
         ((C32667 - (C31506 * C31545) / C31508) * be) / C31508) /
            C31544 -
        ((C31506 * ((-C31545 / C31508) / C31544 - (0 * be) / C31508) + C32729) *
         be) /
            C31508;
    const double C5479 =
        ((-C31545 / C31508) / C31544 - (0 * be) / C31508) / C31544 -
        (0 * be) / C31508;
    const double C15054 = (-C31545 / C31508) / C31544 - (0 * be) / C31508;
    const double C31577 = C31573 - C31567;
    const double C871 = C859 * C275;
    const double C11404 = C859 * C1178;
    const double C11398 = C859 * C1167;
    const double C2807 = C2784 * C129;
    const double C2803 = C2784 * C118;
    const double C2799 = C2784 * C127;
    const double C2795 = C2784 * C117;
    const double C2791 = C2784 * C125;
    const double C2787 = C2784 * C116;
    const double C3193 = C2784 * C255;
    const double C3189 = C2784 * C268;
    const double C3185 = C2784 * C254;
    const double C3181 = C2784 * C266;
    const double C3359 = C2784 * C360;
    const double C3355 = C2784 * C373;
    const double C3351 = C2784 * C359;
    const double C3347 = C2784 * C371;
    const double C4720 = C2784 * C362;
    const double C4716 = C2784 * C378;
    const double C4694 = C2784 * C375;
    const double C4690 = C2784 * C361;
    const double C5354 = C2784 * C727;
    const double C5350 = C2784 * C721;
    const double C12892 = C2784 * C2110;
    const double C2801 = C2785 * C266;
    const double C2797 = C2785 * C254;
    const double C2793 = C2785 * C268;
    const double C2789 = C2785 * C255;
    const double C3187 = C2785 * C275;
    const double C4696 = C2785 * C727;
    const double C4692 = C2785 * C721;
    const double C5356 = C2785 * C1178;
    const double C5352 = C2785 * C1167;
    const double C165 = C146 + C147;
    const double C164 = C144 + C145;
    const double C2154 = C2135 + C2136;
    const double C2153 = C2133 + C2134;
    const double C5516 = C5471 * C128;
    const double C5510 = C5471 * C139;
    const double C5500 = C5471 * C138;
    const double C5494 = C5471 * C126;
    const double C5488 = C5471 * C137;
    const double C5482 = C5471 * C124;
    const double C5931 = C5471 * C269;
    const double C5925 = C5471 * C285;
    const double C5919 = C5471 * C267;
    const double C5913 = C5471 * C284;
    const double C6113 = C5471 * C374;
    const double C6107 = C5471 * C390;
    const double C6101 = C5471 * C372;
    const double C6095 = C5471 * C389;
    const double C7124 = C5471 * C2119;
    const double C7118 = C5471 * C2128;
    const double C7108 = C5471 * C392;
    const double C7102 = C5471 * C377;
    const double C7096 = C5471 * C391;
    const double C7090 = C5471 * C376;
    const double C7454 = C5471 * C393;
    const double C7448 = C5471 * C379;
    const double C7622 = C5471 * C736;
    const double C7616 = C5471 * C726;
    const double C9078 = C5471 * C737;
    const double C32724 = C32723 / C31510;
    const double C2814 = C32925 * C140;
    const double C2808 = C32925 * C139;
    const double C2804 = C32925 * C128;
    const double C2800 = C32925 * C138;
    const double C2796 = C32925 * C126;
    const double C2792 = C32925 * C137;
    const double C2788 = C32925 * C124;
    const double C3194 = C32925 * C269;
    const double C3190 = C32925 * C285;
    const double C3186 = C32925 * C267;
    const double C3182 = C32925 * C284;
    const double C3360 = C32925 * C374;
    const double C3356 = C32925 * C390;
    const double C3352 = C32925 * C372;
    const double C3348 = C32925 * C389;
    const double C4721 = C32925 * C377;
    const double C4717 = C32925 * C392;
    const double C4713 = C32925 * C379;
    const double C4709 = C32925 * C393;
    const double C4695 = C32925 * C391;
    const double C4691 = C32925 * C376;
    const double C4943 = C32925 * C737;
    const double C5355 = C32925 * C736;
    const double C5351 = C32925 * C726;
    const double C12893 = C32925 * C2119;
    const double C12889 = C32925 * C2128;
    const double C857 =
        (((0 - (C31506 * C31507) / C31508) * ae) / C31508 - (0 * be) / C31512) /
            (2 * C31508) +
        ((C31506 * (((C32667 - (C31506 * 2 * C31513) / C31508) * ae) / C31508 -
                    C31507 / C31512) +
          C32925) *
         ae) /
            C31508 +
        (0 * ae) / C31508 - C31513 / C31510;
    const double C32955 = 2 * C32922;
    const double C881 = C858 * C266;
    const double C875 = C858 * C254;
    const double C869 = C858 * C268;
    const double C863 = C858 * C255;
    const double C1366 = C858 * C275;
    const double C11402 = C858 * C727;
    const double C11396 = C858 * C721;
    const double C11916 = C858 * C1178;
    const double C11910 = C858 * C1167;
    const double C32731 = C32730 / C31508;
    const double C32965 = C32931 / C31512;
    const double C17842 = C17823 * C288;
    const double C32982 = C32925 - C32962;
    const double C15047 = -C32962;
    const double C5502 = C5472 * C284;
    const double C5496 = C5472 * C267;
    const double C5490 = C5472 * C285;
    const double C5484 = C5472 * C269;
    const double C5923 = C5472 * C288;
    const double C6105 = C5472 * C737;
    const double C7098 = C5472 * C736;
    const double C7092 = C5472 * C726;
    const double C32991 = C32978 + C32720;
    const double C31684 = C31678 + 0;
    const double C31651 = C31525 * C31632;
    const double C10356 =
        ((-C31526 / C31508) / C31544 -
         ((C32684 - (C31525 * C31632) / C31508) * be) / C31508) /
            C31544 -
        ((C31525 * ((-C31632 / C31508) / C31544 - (0 * be) / C31508) + C32771) *
         be) /
            C31508;
    const double C10357 =
        ((-C31632 / C31508) / C31544 - (0 * be) / C31508) / C31544 -
        (0 * be) / C31508;
    const double C20883 = (-C31632 / C31508) / C31544 - (0 * be) / C31508;
    const double C31664 = C31660 - C31654;
    const double C32766 = C32765 / C31510;
    const double C1844 =
        (((0 - (C31525 * C31526) / C31508) * ae) / C31508 - (0 * be) / C31512) /
            (2 * C31508) +
        ((C31525 * (((C32684 - (C31525 * 2 * C31528) / C31508) * ae) / C31508 -
                    C31526 / C31512) +
          C32926) *
         ae) /
            C31508 +
        (0 * ae) / C31508 - C31528 / C31510;
    const double C32958 = 2 * C32924;
    const double C32773 = C32772 / C31508;
    const double C32971 = C32937 / C31512;
    const double C32985 = C32926 - C32968;
    const double C20880 = -C32968;
    const double C32992 = C32980 + C32762;
    const double C31600 = C31596 / C31544;
    const double C31687 = C31683 / C31544;
    const double C1194 =
        (ae * (C31849 + C31759 * (C31759 * C31843 + C31917 * ae) +
               C31759 * C31917 * ae) +
         C31758 * (C31770 + ae * C31890 + C31759 * C31894)) /
        C31510;
    const double C289 = (C31770 + C31777 * C31774 + ae * C31759 * C31815 +
                         C31759 * (ae * C31815 + C31759 * C31784)) /
                        C31510;
    const double C131 = (3 * (C31810 + C31802 * C31774) +
                         C31766 * (2 * C31812 + C31766 * C31815)) /
                        C31508;
    const double C264 = (C31759 * (2 * C31812 + C31766 * C31815)) / C31508;
    const double C277 = (C31810 + C31802 * C31774 + C31815 * C31893) / C31508;
    const double C369 = (C31758 * (2 * C31812 + C31766 * C31815) +
                         (2 * C32233 + C31766 * C32237) * ae) /
                        C31508;
    const double C382 =
        (C31810 + C31802 * C31774 + C31758 * (C31758 * C31815 + C32237 * ae) +
         C31758 * C32237 * ae) /
        C31508;
    const double C731 =
        (C31758 * C31759 * C31815 + C31759 * C32237 * ae) / C31508;
    const double C1037 =
        (2 * C31759 * C31815 + C31759 * (C31815 + C31822 * C31893)) / C31508;
    const double C31902 = C31899 + C31900;
    const double C1186 =
        (C31759 * C31812 + C31758 * (C31758 * C31898 + C32295 * ae) +
         C31758 * C32295 * ae) /
        C31508;
    const double C1365 = C32956 * C1050;
    const double C5921 = C32956 * C1050;
    const double C7774 = C32966 * C1050;
    const double C15895 = C32966 * C1050;
    const double C18271 = C17823 * C1050;
    const double C32350 = C32347 + C31933;
    const double C1364 = C859 * C1039;
    const double C1052 =
        (3 * (C31770 + ae * C31890 + C31759 * C31894) +
         ae * (2 * C31890 + C31759 * C31896) +
         C31759 * (2 * C31894 + ae * C31896 +
                   C31759 * (C31777 + ae * C31759 * C31799 +
                             C31759 * (ae * C31799 + C31759 * C31782)))) /
        C31510;
    const double C1044 = (3 * (C31810 + C31802 * C31893) +
                          C31759 * (2 * C31890 + C31759 * C31896)) /
                         C31508;
    const double C1183 =
        (C31810 + C31802 * C31893 + C31758 * (C31758 * C31896 + C32292 * ae) +
         C31758 * C32292 * ae) /
        C31508;
    const double C1723 = (C31758 * (2 * C31890 + C31759 * C31896) +
                          (2 * C32290 + C31759 * C32292) * ae) /
                         C31508;
    const double C32012 = C31759 * C32008;
    const double C32017 = 2 * C32008;
    const double C32104 = C31758 * C32008;
    const double C32011 = C31777 + C32007;
    const double C32403 = C32400 + C31927;
    const double C32425 = C31758 * C32421;
    const double C32433 = 2 * C32421;
    const double C394 = (C31770 + C31777 * C31774 + ae * C31758 * C31854 +
                         C31758 * (ae * C31854 + C31758 * C31784)) /
                        C31510;
    const double C738 =
        (ae * (C31759 * C31854 +
               (C31808 * C31807 + C31768 * C31767 * C31774) * ae) +
         C31758 * (ae * C31815 + C31759 * C31784)) /
        C31510;
    const double C130 = (3 * (C31849 + C31843 * C31774) +
                         C31766 * (2 * C31851 + C31766 * C31854)) /
                        C31508;
    const double C265 =
        (C31759 * (2 * C31851 + C31766 * C31854) +
         (2 * C31766 * C31917 + C31766 * (C31917 + C31882 * C31774)) * ae) /
        C31508;
    const double C276 =
        (C31849 + C31843 * C31774 + C31759 * (C31759 * C31854 + C32237 * ae) +
         C31759 * C32237 * ae) /
        C31508;
    const double C370 = (C31758 * (2 * C31851 + C31766 * C31854)) / C31508;
    const double C381 = (C31849 + C31843 * C31774 + C31854 * C31976) / C31508;
    const double C730 = (C31758 * (C31759 * C31854 + C32237 * ae)) / C31508;
    const double C2115 =
        (2 * C31758 * C31854 + C31758 * (C31854 + C31861 * C31976)) / C31508;
    const double C31934 = C31932 + C31933;
    const double C31985 = C31982 + C31983;
    const double C2146 = C32667 * C2127;
    const double C12881 = C32925 * C2127;
    const double C2148 = C32667 * C2117;
    const double C12885 = C32925 * C2117;
    const double C31928 = C31759 * C31926;
    const double C32042 = 2 * C31926;
    const double C32103 = ae * C31926;
    const double C32102 = C31758 * C31926;
    const double C2129 =
        (3 * (C31770 + ae * C31973 + C31758 * C31977) +
         ae * (2 * C31973 + C31758 * C31979) +
         C31758 * (2 * C31977 + ae * C31979 +
                   C31758 * (C31777 + ae * C31758 * C31840 +
                             C31758 * (ae * C31840 + C31758 * C31782)))) /
        C31510;
    const double C2120 = (3 * (C31849 + C31843 * C31976) +
                          C31758 * (2 * C31973 + C31758 * C31979)) /
                         C31508;
    const double C32142 = C31758 * C32138;
    const double C32147 = 2 * C32138;
    const double C32141 = C31777 + C32137;
    const double C31947 = C31913 * ae;
    const double C32241 = C31766 * C31913;
    const double C32245 = 3 * C31913;
    const double C32300 = C31759 * C31913;
    const double C32355 = C31758 * C31913;
    const double C1174 = (C31758 * (C31815 + C31822 * C31893) +
                          (C32237 + C31913 * C31893) * ae) /
                         C31508;
    const double C1031 =
        2 * C31759 * C32237 + C31759 * (C32237 + C31913 * C31893);
    const double C1165 = C31758 * (C32237 + C31913 * C31893);
    const double C2108 =
        2 * C31758 * C32237 + C31758 * (C32237 + C31913 * C31976);
    const double C31941 = C31939 * ae;
    const double C32387 = 2 * C31939;
    const double C32456 = C31758 * C31939;
    const double C2657 =
        2 * C31758 * C32295 + C31758 * (C32295 + C31939 * C31976);
    const double C31940 = C31936 + C31938;
    const double C32465 = C32462 + C31938;
    const double C32297 = C31915 + C32296;
    const double C32351 = C31915 + C32349;
    const double C32468 = 2 * C32463;
    const double C32466 = C32463 * ae;
    const double C32046 = C32040 * ae;
    const double C32373 = C31759 * C32040;
    const double C32376 = 3 * C32040;
    const double C32407 = C31758 * C32040;
    const double C7076 =
        2 * C31758 * C32292 + C31758 * (C32292 + C32040 * C31976);
    const double C32479 = C32476 + C32048;
    const double C32404 = C31925 + C32402;
    const double C32482 = 2 * C32477;
    const double C32480 = C32477 * ae;
    const double C32049 = C31759 * C32047;
    const double C32057 = 2 * C32047;
    const double C32105 = C32047 * C31976;
    const double C32191 = ae * C32047;
    const double C32190 = C31758 * C32047;
    const double C32443 = C31758 * C32439;
    const double C32426 = C31758 * C32423;
    const double C32438 = 3 * C32423;
    const double C32436 = C32423 * ae;
    const double C31794 = C31766 * C31793;
    const double C31907 = C31759 * C31793;
    const double C31990 = C31758 * C31793;
    const double C1049 = (2 * (ae * C31815 + C31759 * C31784) +
                          ae * (C31815 + C31822 * std::pow(C31759, 2)) +
                          C31759 * (C31784 + ae * C31759 * C31822 +
                                    C31759 * (ae * C31822 + C31759 * C31793))) /
                         C31510;
    const double C2126 = (2 * (ae * C31854 + C31758 * C31784) +
                          ae * (C31854 + C31861 * std::pow(C31758, 2)) +
                          C31758 * (C31784 + ae * C31758 * C31861 +
                                    C31758 * (ae * C31861 + C31758 * C31793))) /
                         C31510;
    const double C32030 = C31759 * C32026;
    const double C32192 = C31758 * C32026;
    const double C32089 = C32081 + C32085;
    const double C32181 = C32177 + C32178;
    const double C32160 = C31758 * C32156;
    const double C31833 = C31766 * C31832;
    const double C31908 = C31832 * C31893;
    const double C32031 = C31759 * C32028;
    const double C32090 = C31827 + C32087;
    const double C31872 = C31766 * C31871;
    const double C31950 = C31759 * C31871;
    const double C31991 = C31871 * C31976;
    const double C32066 = C31759 * C32063;
    const double C32193 = C32063 * C31976;
    const double C32123 = C32121 + C32118;
    const double C32183 = C31866 + C32179;
    const double C32161 = C31758 * C32158;
    const double C167 = C150 + C151;
    const double C169 = C154 + C155;
    const double C508 = C496 + C497;
    const double C510 = C500 + C501;
    const double C630 = C620 + C621;
    const double C2156 = C2139 + C2140;
    const double C2678 = C2671 + C2672;
    const double C166 = C148 + C149;
    const double C511 = C502 + C503;
    const double C631 = C622 + C623;
    const double C2155 = C2137 + C2138;
    const double C2677 = C2669 + C2670;
    const double C1195 = (ae * C31810 + C31759 * C31770 + ae * C31758 * C31921 +
                          C31758 * (ae * C31921 + C31758 * C31894)) /
                         C31510;
    const double C2665 =
        (2 * (ae * C31921 + C31758 * C31894) + ae * (C31921 + C31926 * C31976) +
         C31758 * (C31894 + ae * C31758 * C31926 +
                   C31758 * (ae * C31926 +
                             C31758 * (ae * C31799 + C31759 * C31782)))) /
        C31510;
    const double C1042 =
        (2 * (C31759 * C31849 + C32230 * ae) +
         C31759 * (C31849 + C31759 * C31921 + C31759 * C31917 * ae) +
         (C32230 + C31917 * C31893) * ae) /
        C31508;
    const double C1179 =
        (C31758 * (C31849 + C31759 * C31921 + C32290 * ae)) / C31508;
    const double C1180 =
        (C31759 * C31849 + C32230 * ae + C31921 * C31976) / C31508;
    const double C2659 =
        (2 * C31758 * C31921 + C31758 * (C31921 + C31926 * C31976)) / C31508;
    const double C2121 =
        (3 * (C31810 + C31758 * C32343 + C32341 * ae) +
         C31758 * (2 * C32343 +
                   C31758 * (C31802 + C31758 * (C31758 * C31799 + C31924) +
                             C31758 * C31882 * ae) +
                   C32344 * ae) +
         (2 * C32341 + C31758 * C32344) * ae) /
        C31508;
    const double C2149 = C113 * C2118;
    const double C12888 = C2784 * C2118;
    const double C866 = C32956 * C274;
    const double C3192 = C32729 * C274;
    const double C5486 = C32956 * C274;
    const double C5929 = C5472 * C274;
    const double C15461 = C32729 * C274;
    const double C17836 = C17823 * C274;
    const double C1854 = C113 * C380;
    const double C4708 = C2784 * C380;
    const double C2330 = C32667 * C728;
    const double C3358 = C32729 * C728;
    const double C4947 = C32925 * C728;
    const double C6111 = C5472 * C728;
    const double C9084 = C5471 * C728;
    const double C15627 = C32729 * C728;
    const double C1552 = C858 * C729;
    const double C2327 = C113 * C729;
    const double C3353 = C2785 * C729;
    const double C4942 = C2784 * C729;
    const double C1550 = C859 * C1176;
    const double C4940 = C2785 * C1176;
    const double C22151 = C858 * C1176;
    const double C2145 = C113 * C2116;
    const double C12880 = C2784 * C2116;
    const double C865 = C859 * C258;
    const double C1372 = C858 * C258;
    const double C3191 = C2785 * C258;
    const double C1852 = C113 * C363;
    const double C4712 = C2784 * C363;
    const double C1558 = C858 * C722;
    const double C2329 = C113 * C722;
    const double C3357 = C2785 * C722;
    const double C4946 = C2784 * C722;
    const double C1370 = C859 * C1032;
    const double C1556 = C859 * C1166;
    const double C4944 = C2785 * C1166;
    const double C22157 = C858 * C1166;
    const double C2325 = C113 * C1170;
    const double C4710 = C2785 * C1170;
    const double C11746 = C858 * C1170;
    const double C13102 = C2784 * C1170;
    const double C2147 = C113 * C2109;
    const double C12884 = C2784 * C2109;
    const double C156 = C113 * C119;
    const double C2817 = C2784 * C119;
    const double C494 = C113 * C253;
    const double C893 = C858 * C253;
    const double C2805 = C2785 * C253;
    const double C3177 = C2784 * C253;
    const double C877 = C859 * C259;
    const double C1360 = C858 * C259;
    const double C3183 = C2785 * C259;
    const double C614 = C113 * C358;
    const double C3343 = C2784 * C358;
    const double C1860 = C113 * C364;
    const double C4704 = C2784 * C364;
    const double C1546 = C858 * C723;
    const double C2319 = C113 * C723;
    const double C3349 = C2785 * C723;
    const double C4938 = C2784 * C723;
    const double C2675 = C113 * C1182;
    const double C4714 = C2785 * C1182;
    const double C11414 = C858 * C1182;
    const double C13502 = C2784 * C1182;
    const double C11420 = C858 * C2660;
    const double C12426 = C113 * C2660;
    const double C12886 = C2785 * C2660;
    const double C14942 = C2784 * C2660;
    const double C2673 = C113 * C1168;
    const double C4718 = C2785 * C1168;
    const double C11408 = C858 * C1168;
    const double C13498 = C2784 * C1168;
    const double C11426 = C858 * C2656;
    const double C12424 = C113 * C2656;
    const double C12890 = C2785 * C2656;
    const double C14938 = C2784 * C2656;
    const double C11410 = C859 * C1169;
    const double C11922 = C858 * C1169;
    const double C13500 = C2785 * C1169;
    const double C11912 = C859 * C1719;
    const double C12148 = C113 * C2111;
    const double C14542 = C2784 * C2111;
    const double C628 = C616 + C617;
    const double C168 = C152 + C153;
    const double C509 = C498 + C499;
    const double C629 = C618 + C619;
    const double C2162 = C2151 + C2152;
    const double C161 = C32667 * C141;
    const double C493 = C32667 * C283;
    const double C2810 = C32729 * C283;
    const double C3174 = C32925 * C283;
    const double C5508 = C5472 * C283;
    const double C15079 = C32729 * C283;
    const double C613 = C32667 * C388;
    const double C3340 = C32925 * C388;
    const double C31824 = C31819 + C31823;
    const double C1046 = (3 * (C31812 + C31817 * C31893) +
                          C31759 * (2 * C31898 + C31759 * C31903)) /
                         C31508;
    const double C32088 = C31786 + C32084;
    const double C32015 = C32009 + C32013;
    const double C31863 = C31858 + C31862;
    const double C2122 = (3 * (C31851 + C31856 * C31976) +
                          C31758 * (2 * C31981 + C31758 * C31986)) /
                         C31508;
    const double C32184 = C31786 + C32180;
    const double C32145 = C32139 + C32143;
    const double C31957 = C31955 * ae;
    const double C31965 = C31963 + C31964;
    const double C32302 = C31913 + C32301;
    const double C32358 = C31913 + C32356;
    const double C32070 = C32062 + C32068;
    const double C32410 = C32040 + C32408;
    const double C32484 = C31758 * C32481;
    const double C32120 = C32098 * ae;
    const double C32388 = C31759 * C32098;
    const double C32459 = C31939 + C32457;
    const double C32470 = C31758 * C32467;
    const double C32446 = C32442 + C32444;
    const double C32589 = C32588 / C31510;
    const double C32942 = 2 * C32908;
    const double C32597 = C32596 / C31508;
    const double C32946 = C32912 / C31512;
    const double C32974 = C32906 - C32941;
    const double C15873 = -C32941;
    const double C32988 = C32973 + C32586;
    const double C31601 = C31597 * be;
    const double C31572 = C31564 / C31508;
    const double C5513 = C5478 * C253;
    const double C5501 = C5478 * C266;
    const double C5495 = C5478 * C254;
    const double C5489 = C5478 * C268;
    const double C5483 = C5478 * C255;
    const double C5928 = C5478 * C258;
    const double C5922 = C5478 * C275;
    const double C5916 = C5478 * C259;
    const double C6110 = C5478 * C722;
    const double C6104 = C5478 * C729;
    const double C6098 = C5478 * C723;
    const double C7121 = C5478 * C2656;
    const double C7115 = C5478 * C2660;
    const double C7109 = C5478 * C1182;
    const double C7103 = C5478 * C1168;
    const double C7097 = C5478 * C727;
    const double C7091 = C5478 * C721;
    const double C7449 = C5478 * C1170;
    const double C7629 = C5478 * C1169;
    const double C7623 = C5478 * C1178;
    const double C7617 = C5478 * C1167;
    const double C9081 = C5478 * C1166;
    const double C9075 = C5478 * C1176;
    const double C5497 = C5479 * C259;
    const double C5491 = C5479 * C275;
    const double C5485 = C5479 * C258;
    const double C5926 = C5479 * C1032;
    const double C5920 = C5479 * C1039;
    const double C6108 = C5479 * C1166;
    const double C6102 = C5479 * C1176;
    const double C7105 = C5479 * C1169;
    const double C7099 = C5479 * C1178;
    const double C7093 = C5479 * C1167;
    const double C7619 = C5479 * C1719;
    const double C15074 = C15054 * C253;
    const double C15070 = C15054 * C266;
    const double C15066 = C15054 * C254;
    const double C15062 = C15054 * C268;
    const double C15058 = C15054 * C255;
    const double C15460 = C15054 * C258;
    const double C15456 = C15054 * C275;
    const double C15452 = C15054 * C259;
    const double C15626 = C15054 * C722;
    const double C15622 = C15054 * C729;
    const double C15618 = C15054 * C723;
    const double C16710 = C15054 * C1170;
    const double C17054 = C15054 * C2656;
    const double C17050 = C15054 * C2660;
    const double C17038 = C15054 * C1182;
    const double C17034 = C15054 * C1168;
    const double C17030 = C15054 * C727;
    const double C17026 = C15054 * C721;
    const double C17282 = C15054 * C1166;
    const double C17278 = C15054 * C1176;
    const double C17698 = C15054 * C1169;
    const double C17694 = C15054 * C1178;
    const double C17690 = C15054 * C1167;
    const double C31581 = C31506 * C31577;
    const double C31610 = C31577 / C31544;
    const double C902 = C871 + C872;
    const double C2826 = C2801 + C2802;
    const double C2824 = C2797 + C2798;
    const double C2822 = C2793 + C2794;
    const double C2820 = C2789 + C2790;
    const double C3203 = C3187 + C3188;
    const double C4725 = C4696 + C4697;
    const double C4723 = C4692 + C4693;
    const double C175 = C165 * C32684;
    const double C3606 = C165 * C32926;
    const double C10360 = C165 * C10352;
    const double C174 = C164 * C114;
    const double C3605 = C164 * C3602;
    const double C32725 = C32720 - C32724;
    const double C2829 = C2807 + C2808;
    const double C2827 = C2803 + C2804;
    const double C2825 = C2799 + C2800;
    const double C2823 = C2795 + C2796;
    const double C2821 = C2791 + C2792;
    const double C2819 = C2787 + C2788;
    const double C3206 = C3193 + C3194;
    const double C3204 = C3189 + C3190;
    const double C3202 = C3185 + C3186;
    const double C3200 = C3181 + C3182;
    const double C3372 = C3359 + C3360;
    const double C3370 = C3355 + C3356;
    const double C3368 = C3351 + C3352;
    const double C3366 = C3347 + C3348;
    const double C4737 = C4720 + C4721;
    const double C4735 = C4716 + C4717;
    const double C4724 = C4694 + C4695;
    const double C4722 = C4690 + C4691;
    const double C5360 = C5354 + C5355;
    const double C5358 = C5350 + C5351;
    const double C12901 = C12892 + C12893;
    const double C895 = C857 * C118;
    const double C889 = C857 * C129;
    const double C879 = C857 * C127;
    const double C873 = C857 * C117;
    const double C867 = C857 * C125;
    const double C861 = C857 * C116;
    const double C1374 = C857 * C255;
    const double C1368 = C857 * C268;
    const double C1362 = C857 * C254;
    const double C1356 = C857 * C266;
    const double C1560 = C857 * C360;
    const double C1554 = C857 * C373;
    const double C1548 = C857 * C359;
    const double C1542 = C857 * C371;
    const double C11428 = C857 * C2110;
    const double C11422 = C857 * C2118;
    const double C11412 = C857 * C378;
    const double C11406 = C857 * C362;
    const double C11400 = C857 * C375;
    const double C11394 = C857 * C361;
    const double C11750 = C857 * C380;
    const double C11744 = C857 * C363;
    const double C11926 = C857 * C1182;
    const double C11920 = C857 * C1168;
    const double C11914 = C857 * C727;
    const double C11908 = C857 * C721;
    const double C22159 = C857 * C722;
    const double C22153 = C857 * C729;
    const double C32979 = C32955 / C31508;
    const double C32732 = C32728 - C32731;
    const double C32993 = C32982 / C31544;
    const double C15083 = C15047 * C140;
    const double C15077 = C15047 * C139;
    const double C15073 = C15047 * C128;
    const double C15069 = C15047 * C138;
    const double C15065 = C15047 * C126;
    const double C15061 = C15047 * C137;
    const double C15057 = C15047 * C124;
    const double C15463 = C15047 * C269;
    const double C15459 = C15047 * C285;
    const double C15455 = C15047 * C267;
    const double C15451 = C15047 * C284;
    const double C15443 = C15047 * C283;
    const double C15629 = C15047 * C374;
    const double C15625 = C15047 * C390;
    const double C15621 = C15047 * C372;
    const double C15617 = C15047 * C389;
    const double C15609 = C15047 * C388;
    const double C16713 = C15047 * C393;
    const double C16709 = C15047 * C379;
    const double C17057 = C15047 * C2119;
    const double C17053 = C15047 * C2128;
    const double C17049 = C15047 * C2117;
    const double C17045 = C15047 * C2127;
    const double C17037 = C15047 * C392;
    const double C17033 = C15047 * C377;
    const double C17029 = C15047 * C391;
    const double C17025 = C15047 * C376;
    const double C17285 = C15047 * C728;
    const double C17281 = C15047 * C737;
    const double C17693 = C15047 * C736;
    const double C17689 = C15047 * C726;
    const double C5477 =
        ((-(0 * be) / C31508) / C31544 -
         ((0 - (C31506 * C31507) / C31508) * be) / C31508) /
            C31544 -
        ((C31506 * ((-C31507 / C31508) / C31544 -
                    ((C32667 - (C31506 * C31545) / C31508) * be) / C31508) +
          C15047) *
         be) /
            C31508 +
        (-C31545 / C31508) / C31544 - (0 * be) / C31508;
    const double C896 = C32991 * C128;
    const double C890 = C32991 * C139;
    const double C880 = C32991 * C138;
    const double C874 = C32991 * C126;
    const double C868 = C32991 * C137;
    const double C862 = C32991 * C124;
    const double C1375 = C32991 * C269;
    const double C1369 = C32991 * C285;
    const double C1363 = C32991 * C267;
    const double C1357 = C32991 * C284;
    const double C1561 = C32991 * C374;
    const double C1555 = C32991 * C390;
    const double C1549 = C32991 * C372;
    const double C1543 = C32991 * C389;
    const double C11429 = C32991 * C2119;
    const double C11423 = C32991 * C2128;
    const double C11413 = C32991 * C392;
    const double C11407 = C32991 * C377;
    const double C11401 = C32991 * C391;
    const double C11395 = C32991 * C376;
    const double C11751 = C32991 * C393;
    const double C11745 = C32991 * C379;
    const double C11915 = C32991 * C736;
    const double C11909 = C32991 * C726;
    const double C22160 = C32991 * C728;
    const double C22154 = C32991 * C737;
    const double C31688 = C31684 * be;
    const double C31659 = C31651 / C31508;
    const double C31668 = C31525 * C31664;
    const double C31697 = C31664 / C31544;
    const double C32767 = C32762 - C32766;
    const double C1848 = C164 * C1844;
    const double C32981 = C32958 / C31508;
    const double C32774 = C32770 - C32773;
    const double C32995 = C32985 / C31544;
    const double C20886 = C165 * C20880;
    const double C10355 =
        ((-(0 * be) / C31508) / C31544 -
         ((0 - (C31525 * C31526) / C31508) * be) / C31508) /
            C31544 -
        ((C31525 * ((-C31526 / C31508) / C31544 -
                    ((C32684 - (C31525 * C31632) / C31508) * be) / C31508) +
          C20880) *
         be) /
            C31508 +
        (-C31632 / C31508) / C31544 - (0 * be) / C31508;
    const double C1849 = C165 * C32992;
    const double C5357 = C32729 * C1194;
    const double C7100 = C32956 * C1194;
    const double C7624 = C5472 * C1194;
    const double C11405 = C32956 * C1194;
    const double C17695 = C32729 * C1194;
    const double C20114 = C17823 * C1194;
    const double C884 = C32956 * C289;
    const double C3180 = C32729 * C289;
    const double C5504 = C32956 * C289;
    const double C5911 = C5472 * C289;
    const double C15449 = C32729 * C289;
    const double C17854 = C17823 * C289;
    const double C158 = C113 * C131;
    const double C2813 = C2784 * C131;
    const double C492 = C113 * C264;
    const double C887 = C858 * C264;
    const double C2809 = C2785 * C264;
    const double C3173 = C2784 * C264;
    const double C5507 = C5478 * C264;
    const double C15078 = C15054 * C264;
    const double C883 = C859 * C277;
    const double C1354 = C858 * C277;
    const double C3179 = C2785 * C277;
    const double C5503 = C5479 * C277;
    const double C5910 = C5478 * C277;
    const double C15448 = C15054 * C277;
    const double C612 = C113 * C369;
    const double C3339 = C2784 * C369;
    const double C1862 = C113 * C382;
    const double C4700 = C2784 * C382;
    const double C1540 = C858 * C731;
    const double C2317 = C113 * C731;
    const double C3345 = C2785 * C731;
    const double C4934 = C2784 * C731;
    const double C6092 = C5478 * C731;
    const double C15614 = C15054 * C731;
    const double C1352 = C859 * C1037;
    const double C5908 = C5479 * C1037;
    const double C1053 =
        (3 * (C31887 + ae * C31898 + C31759 * C31902) +
         ae * (2 * C31898 + C31759 * C31903) +
         C31759 *
             (2 * C31902 + ae * C31903 +
              C31759 * (C31786 + ae * C31759 * C31827 +
                        C31759 * (ae * C31827 + C31759 * C31766 * C31791)))) /
        C31510;
    const double C1193 =
        (ae * (C31851 + C31759 * (C31759 * C31856 + C31915 * ae) +
               C31759 * C31915 * ae) +
         C31758 * (C31887 + ae * C31898 + C31759 * C31902)) /
        C31510;
    const double C2323 = C113 * C1186;
    const double C4706 = C2785 * C1186;
    const double C7455 = C5478 * C1186;
    const double C11752 = C858 * C1186;
    const double C13098 = C2784 * C1186;
    const double C16714 = C15054 * C1186;
    const double C1382 = C1364 + C1365;
    const double C7111 = C5479 * C1183;
    const double C7635 = C5478 * C1183;
    const double C11416 = C859 * C1183;
    const double C11928 = C858 * C1183;
    const double C13504 = C2785 * C1183;
    const double C17702 = C15054 * C1183;
    const double C7625 = C5479 * C1723;
    const double C11918 = C859 * C1723;
    const double C32024 = C32017 + C32018;
    const double C32014 = C32011 + C32012;
    const double C32427 = C31802 + C32425;
    const double C1863 = C32667 * C394;
    const double C4701 = C32925 * C394;
    const double C16719 = C15047 * C394;
    const double C2318 = C32667 * C738;
    const double C3346 = C32729 * C738;
    const double C4935 = C32925 * C738;
    const double C6093 = C5472 * C738;
    const double C15615 = C32729 * C738;
    const double C19266 = C15047 * C738;
    const double C157 = C32667 * C130;
    const double C2818 = C32925 * C130;
    const double C15087 = C15047 * C130;
    const double C495 = C32667 * C265;
    const double C2806 = C32729 * C265;
    const double C3178 = C32925 * C265;
    const double C5514 = C5472 * C265;
    const double C15075 = C32729 * C265;
    const double C15447 = C15047 * C265;
    const double C878 = C32956 * C276;
    const double C3184 = C32729 * C276;
    const double C5498 = C32956 * C276;
    const double C5917 = C5472 * C276;
    const double C15453 = C32729 * C276;
    const double C17848 = C17823 * C276;
    const double C615 = C32667 * C370;
    const double C3344 = C32925 * C370;
    const double C15613 = C15047 * C370;
    const double C1861 = C32667 * C381;
    const double C4705 = C32925 * C381;
    const double C16723 = C15047 * C381;
    const double C2320 = C32667 * C730;
    const double C3350 = C32729 * C730;
    const double C4939 = C32925 * C730;
    const double C6099 = C5472 * C730;
    const double C15619 = C32729 * C730;
    const double C19270 = C15047 * C730;
    const double C2144 = C32667 * C2115;
    const double C1197 = (ae * C31812 + C31759 * C31887 + ae * C31758 * C31934 +
                          C31758 * (ae * C31934 + C31758 * C31902)) /
                         C31510;
    const double C1040 =
        (2 * (C31759 * C31851 + C32233 * ae) +
         C31759 * (C31851 + C31759 * C31934 + C31759 * C31915 * ae) +
         (C32233 + C31915 * C31893) * ae) /
        C31508;
    const double C1177 =
        (C31758 * (C31851 + C31759 * C31934 + C32295 * ae)) / C31508;
    const double C1184 =
        (C31759 * C31851 + C32233 * ae + C31934 * C31976) / C31508;
    const double C2130 =
        (3 * (C31887 + ae * C31981 + C31758 * C31985) +
         ae * (2 * C31981 + C31758 * C31986) +
         C31758 *
             (2 * C31985 + ae * C31986 +
              C31758 * (C31786 + ae * C31758 * C31866 +
                        C31758 * (ae * C31866 + C31758 * C31766 * C31791)))) /
        C31510;
    const double C31929 = C31843 + C31928;
    const double C32106 = C32103 + C32104;
    const double C12151 = C32667 * C2129;
    const double C14539 = C32925 * C2129;
    const double C28237 = C15047 * C2129;
    const double C12149 = C32667 * C2120;
    const double C14543 = C32925 * C2120;
    const double C28241 = C15047 * C2120;
    const double C32154 = C32147 + C32148;
    const double C32144 = C32141 + C32142;
    const double C31948 = C31946 + C31947;
    const double C32357 = C32354 + C31947;
    const double C2114 =
        (2 * (C31758 * C31815 + C32237 * ae) +
         C31758 * (C31815 + C31758 * (C31758 * C31822 + C31947) +
                   C31758 * C31913 * ae) +
         (C32237 + C31913 * C31976) * ae) /
        C31508;
    const double C32242 = C32240 + C32241;
    const double C1190 =
        (C31759 * C31815 + C31758 * (C31758 * C31905 + C32300 * ae) +
         C31758 * C32300 * ae) /
        C31508;
    const double C1172 = C31759 * C32237 + C32300 * C31976;
    const double C2658 =
        2 * C31758 * C32300 + C31758 * (C32300 + C31955 * C31976);
    const double C1538 = C859 * C1174;
    const double C4932 = C2785 * C1174;
    const double C6090 = C5479 * C1174;
    const double C19263 = C15054 * C1174;
    const double C1358 = C859 * C1031;
    const double C5914 = C5479 * C1031;
    const double C1544 = C859 * C1165;
    const double C4936 = C2785 * C1165;
    const double C6096 = C5479 * C1165;
    const double C19267 = C15054 * C1165;
    const double C2143 = C113 * C2108;
    const double C32458 = C32455 + C31941;
    const double C2662 =
        (2 * (C31758 * C31898 + C32295 * ae) +
         C31758 * (C31898 + C31758 * (C31758 * C32080 + C31941) +
                   C31758 * C31939 * ae) +
         (C32295 + C31939 * C31976) * ae) /
        C31508;
    const double C12882 = C2785 * C2657;
    const double C13960 = C113 * C2657;
    const double C17046 = C15054 * C2657;
    const double C31942 = C31759 * C31940;
    const double C32116 = 2 * C31940;
    const double C32170 = ae * C31940;
    const double C32169 = C31758 * C31940;
    const double C2666 =
        (2 * (ae * C31934 + C31758 * C31902) + ae * (C31934 + C31940 * C31976) +
         C31758 *
             (C31902 + ae * C31758 * C31940 +
              C31758 * (ae * C31940 +
                        C31758 * (ae * C31827 + C31759 * C31766 * C31791)))) /
        C31510;
    const double C2661 =
        (2 * C31758 * C31934 + C31758 * (C31934 + C31940 * C31976)) / C31508;
    const double C32469 = C31758 * C32465;
    const double C1187 =
        (C31812 + C31817 * C31893 + C31758 * (C31758 * C31903 + C32297 * ae) +
         C31758 * C32297 * ae) /
        C31508;
    const double C1725 = (C31758 * (2 * C31898 + C31759 * C31903) +
                          (2 * C32295 + C31759 * C32297) * ae) /
                         C31508;
    const double C1035 = 3 * (C32233 + C31915 * C31893) +
                         C31759 * (2 * C32295 + C31759 * C32297);
    const double C1171 = C32233 + C31915 * C31893 + C32297 * C31976;
    const double C1720 = C31758 * (2 * C32295 + C31759 * C32297);
    const double C7442 =
        2 * C31758 * C32297 + C31758 * (C32297 + C32098 * C31976);
    const double C2123 =
        (3 * (C31812 + C31758 * C32350 + C32348 * ae) +
         C31758 * (2 * C32350 +
                   C31758 * (C31817 + C31758 * (C31758 * C31827 + C31938) +
                             C31758 * C31937 * ae) +
                   C32351 * ae) +
         (2 * C32348 + C31758 * C32351) * ae) /
        C31508;
    const double C2112 = 3 * (C32233 + C31915 * C31976) +
                         C31758 * (2 * C32348 + C31758 * C32351);
    const double C32409 = C32406 + C32046;
    const double C7079 =
        (2 * (C31758 * C31896 + C32292 * ae) +
         C31758 * (C31896 + C31758 * (C31758 * C32010 + C32046) +
                   C31758 * C32040 * ae) +
         (C32292 + C32040 * C31976) * ae) /
        C31508;
    const double C32374 = C32372 + C32373;
    const double C7119 = C5479 * C7076;
    const double C11424 = C859 * C7076;
    const double C14940 = C2785 * C7076;
    const double C28638 = C15054 * C7076;
    const double C32483 = C31758 * C32479;
    const double C7083 =
        (3 * (C31890 + C31758 * C32403 + C32401 * ae) +
         C31758 * (2 * C32403 +
                   C31758 * (C32003 + C31758 * (C31758 * C32019 + C32048) +
                             C31758 * C32045 * ae) +
                   C32404 * ae) +
         (2 * C32401 + C31758 * C32404) * ae) /
        C31508;
    const double C7077 = 3 * (C32290 + C31925 * C31976) +
                         C31758 * (2 * C32401 + C31758 * C32404);
    const double C32050 = C31840 + C32049;
    const double C32107 = C31926 + C32105;
    const double C32196 = 2 * C32190;
    const double C32194 = ae * C32190;
    const double C32445 = C31799 + C32443;
    const double C32428 = C32424 + C32426;
    const double C31795 = C31789 + C31794;
    const double C31909 = C31906 + C31907;
    const double C31992 = C31989 + C31990;
    const double C1353 = C32956 * C1049;
    const double C5909 = C32956 * C1049;
    const double C7776 = C32966 * C1049;
    const double C15897 = C32966 * C1049;
    const double C18259 = C17823 * C1049;
    const double C2142 = C32667 * C2126;
    const double C32032 = C32029 + C32030;
    const double C32195 = C32191 + C32192;
    const double C32091 = C31759 * C32089;
    const double C32171 = C31758 * C32089;
    const double C32185 = C31758 * C32181;
    const double C32162 = C32159 + C32160;
    const double C31834 = C31829 + C31833;
    const double C31910 = C31822 + C31908;
    const double C32033 = C32027 + C32031;
    const double C32092 = C31759 * C32090;
    const double C31873 = C31868 + C31872;
    const double C31956 = C31950 + C31954;
    const double C31993 = C31861 + C31991;
    const double C32069 = C31859 + C32066;
    const double C32197 = C32047 + C32193;
    const double C32124 = C31759 * C32123;
    const double C32172 = C32123 * C31976;
    const double C32186 = C31758 * C32183;
    const double C32163 = C32157 + C32161;
    const double C177 = C167 * C32684;
    const double C1857 = C167 * C32992;
    const double C3610 = C167 * C32926;
    const double C10366 = C167 * C10352;
    const double C20890 = C167 * C20880;
    const double C179 = C169 * C32684;
    const double C1870 = C169 * C32992;
    const double C3614 = C169 * C32926;
    const double C10375 = C169 * C10352;
    const double C20894 = C169 * C20880;
    const double C516 = C508 * C32684;
    const double C2321 = C508 * C32992;
    const double C3961 = C508 * C32926;
    const double C10752 = C508 * C10352;
    const double C21239 = C508 * C20880;
    const double C518 = C510 * C32684;
    const double C2331 = C510 * C32992;
    const double C3965 = C510 * C32926;
    const double C10758 = C510 * C10352;
    const double C21243 = C510 * C20880;
    const double C638 = C630 * C32684;
    const double C2509 = C630 * C32992;
    const double C3608 = C630 * C32771;
    const double C4111 = C630 * C32926;
    const double C10362 = C630 * C10353;
    const double C10916 = C630 * C10352;
    const double C20888 = C630 * C32771;
    const double C21385 = C630 * C20880;
    const double C176 = C166 * C114;
    const double C1856 = C166 * C1844;
    const double C3609 = C166 * C3602;
    const double C519 = C511 * C114;
    const double C2332 = C511 * C1844;
    const double C3966 = C511 * C3602;
    const double C639 = C631 * C114;
    const double C1850 = C631 * C1845;
    const double C2510 = C631 * C1844;
    const double C3607 = C631 * C3603;
    const double C4112 = C631 * C3602;
    const double C10361 = C631 * C10356;
    const double C20887 = C631 * C20883;
    const double C2676 = C32667 * C1195;
    const double C4715 = C32729 * C1195;
    const double C7110 = C5472 * C1195;
    const double C7634 = C5471 * C1195;
    const double C11927 = C32991 * C1195;
    const double C13503 = C32925 * C1195;
    const double C17039 = C32729 * C1195;
    const double C17701 = C15047 * C1195;
    const double C7116 = C5472 * C2665;
    const double C12427 = C32667 * C2665;
    const double C12887 = C32729 * C2665;
    const double C14943 = C32925 * C2665;
    const double C17051 = C32729 * C2665;
    const double C28641 = C15047 * C2665;
    const double C5353 = C32729 * C1179;
    const double C7094 = C32956 * C1179;
    const double C7618 = C5472 * C1179;
    const double C11399 = C32956 * C1179;
    const double C17691 = C32729 * C1179;
    const double C20108 = C17823 * C1179;
    const double C2674 = C32667 * C1180;
    const double C4719 = C32729 * C1180;
    const double C7104 = C5472 * C1180;
    const double C7628 = C5471 * C1180;
    const double C11921 = C32991 * C1180;
    const double C13499 = C32925 * C1180;
    const double C17035 = C32729 * C1180;
    const double C17697 = C15047 * C1180;
    const double C7122 = C5472 * C2659;
    const double C12425 = C32667 * C2659;
    const double C12891 = C32729 * C2659;
    const double C14939 = C32925 * C2659;
    const double C17055 = C32729 * C2659;
    const double C28637 = C15047 * C2659;
    const double C12150 = C113 * C2121;
    const double C14538 = C2784 * C2121;
    const double C2161 = C2149 + C2150;
    const double C12899 = C12888 + C12889;
    const double C1873 = C1854 + C1855;
    const double C4731 = C4708 + C4709;
    const double C2339 = C2327 + C2328;
    const double C3369 = C3353 + C3354;
    const double C4953 = C4942 + C4943;
    const double C2159 = C2145 + C2146;
    const double C12895 = C12880 + C12881;
    const double C899 = C865 + C866;
    const double C3205 = C3191 + C3192;
    const double C1872 = C1852 + C1853;
    const double C4733 = C4712 + C4713;
    const double C2340 = C2329 + C2330;
    const double C3371 = C3357 + C3358;
    const double C4955 = C4946 + C4947;
    const double C2160 = C2147 + C2148;
    const double C12897 = C12884 + C12885;
    const double C636 = C628 * C32684;
    const double C2503 = C628 * C32992;
    const double C3612 = C628 * C32771;
    const double C4107 = C628 * C32926;
    const double C10368 = C628 * C10353;
    const double C10910 = C628 * C10352;
    const double C20892 = C628 * C32771;
    const double C21381 = C628 * C20880;
    const double C178 = C168 * C114;
    const double C1871 = C168 * C1844;
    const double C3613 = C168 * C3602;
    const double C517 = C509 * C114;
    const double C2322 = C509 * C1844;
    const double C3962 = C509 * C3602;
    const double C637 = C629 * C114;
    const double C1858 = C629 * C1845;
    const double C2504 = C629 * C1844;
    const double C3611 = C629 * C3603;
    const double C4108 = C629 * C3602;
    const double C10367 = C629 * C10356;
    const double C20891 = C629 * C20883;
    const double C132 = (4 * (2 * C31812 + C31766 * C31815) +
                         C31766 * (3 * C31815 + C31766 * C31824)) /
                        C31508;
    const double C262 = (C31759 * (3 * C31815 + C31766 * C31824)) / C31508;
    const double C279 =
        (2 * C31812 + C31766 * C31815 + C31824 * C31893) / C31508;
    const double C6408 = (4 * (2 * C31890 + C31759 * C31896) +
                          C31759 * (3 * C31896 + C31759 * C32015)) /
                         C31508;
    const double C133 = (4 * (2 * C31851 + C31766 * C31854) +
                         C31766 * (3 * C31854 + C31766 * C31863)) /
                        C31508;
    const double C263 = (C31759 * (3 * C31854 + C31766 * C31863) +
                         (3 * (C31917 + C31882 * C31774) +
                          C31766 * (2 * C31915 + C31766 * C31913)) *
                             ae) /
                        C31508;
    const double C368 = (C31758 * (3 * C31854 + C31766 * C31863)) / C31508;
    const double C383 =
        (2 * C31851 + C31766 * C31854 + C31863 * C31976) / C31508;
    const double C12333 = C32667 * C2122;
    const double C12142 = (4 * (2 * C31973 + C31758 * C31979) +
                           C31758 * (3 * C31979 + C31758 * C32145)) /
                          C31508;
    const double C2664 =
        (2 * (C31758 * C31905 + C32300 * ae) +
         C31758 * (C31905 + C31758 * (C31758 * C31759 * C31832 + C31957) +
                   C31758 * C31955 * ae) +
         (C32300 + C31955 * C31976) * ae) /
        C31508;
    const double C31996 = C31965 * ae;
    const double C32246 = C31766 * C31965;
    const double C32361 = C31759 * C31965;
    const double C1036 = 3 * (C32237 + C31913 * C31893) +
                         C31759 * (2 * C32300 + C31759 * C32302);
    const double C1173 = C32237 + C31913 * C31893 + C32302 * C31976;
    const double C1721 = C31758 * (2 * C32300 + C31759 * C32302);
    const double C2113 = 3 * (C32237 + C31913 * C31976) +
                         C31758 * (2 * C32355 + C31758 * C32358);
    const double C32072 = C32070 * ae;
    const double C32377 = C31759 * C32070;
    const double C7078 = 3 * (C32292 + C32040 * C31976) +
                         C31758 * (2 * C32407 + C31758 * C32410);
    const double C32486 = C32482 + C32484;
    const double C7444 =
        (2 * (C31758 * C31903 + C32297 * ae) +
         C31758 * (C31903 + C31758 * (C31758 * C32090 + C32120) +
                   C31758 * C32098 * ae) +
         (C32297 + C32098 * C31976) * ae) /
        C31508;
    const double C32389 = C32387 + C32388;
    const double C12241 = 3 * (C32295 + C31939 * C31976) +
                          C31758 * (2 * C32456 + C31758 * C32459);
    const double C32472 = C32468 + C32470;
    const double C32448 = C31758 * C32446;
    const double C32590 = C32586 - C32589;
    const double C32975 = C32942 / C31508;
    const double C32598 = C32594 - C32597;
    const double C32989 = C32974 / C31544;
    const double C31603 = C31601 / C31508;
    const double C31576 = C32667 - C31572;
    const double C5527 = C5501 + C5502;
    const double C5524 = C5495 + C5496;
    const double C5521 = C5489 + C5490;
    const double C5518 = C5483 + C5484;
    const double C5942 = C5928 + C5929;
    const double C5939 = C5922 + C5923;
    const double C6124 = C6110 + C6111;
    const double C6121 = C6104 + C6105;
    const double C7129 = C7097 + C7098;
    const double C7126 = C7091 + C7092;
    const double C5522 = C5491 + C5492;
    const double C5519 = C5485 + C5486;
    const double C5938 = C5920 + C5921;
    const double C15095 = C15070 + C15071;
    const double C15093 = C15066 + C15067;
    const double C15091 = C15062 + C15063;
    const double C15089 = C15058 + C15059;
    const double C15474 = C15460 + C15461;
    const double C15472 = C15456 + C15457;
    const double C15640 = C15626 + C15627;
    const double C15638 = C15622 + C15623;
    const double C17061 = C17030 + C17031;
    const double C17059 = C17026 + C17027;
    const double C31585 = C31581 + C32729;
    const double C31613 = C31610 - C31612;
    const double C17866 = C32725 * C128;
    const double C17860 = C32725 * C139;
    const double C17850 = C32725 * C138;
    const double C17844 = C32725 * C126;
    const double C17838 = C32725 * C137;
    const double C17832 = C32725 * C124;
    const double C18281 = C32725 * C269;
    const double C18275 = C32725 * C285;
    const double C18269 = C32725 * C267;
    const double C18263 = C32725 * C284;
    const double C18463 = C32725 * C374;
    const double C18457 = C32725 * C390;
    const double C18451 = C32725 * C372;
    const double C18445 = C32725 * C389;
    const double C20138 = C32725 * C377;
    const double C20132 = C32725 * C392;
    const double C20126 = C32725 * C379;
    const double C20120 = C32725 * C393;
    const double C20110 = C32725 * C391;
    const double C20104 = C32725 * C376;
    const double C20362 = C32725 * C728;
    const double C20356 = C32725 * C737;
    const double C20772 = C32725 * C736;
    const double C20766 = C32725 * C726;
    const double C31031 = C32725 * C2119;
    const double C31025 = C32725 * C2128;
    const double C31485 = C32725 * C1195;
    const double C31479 = C32725 * C1180;
    const double C32928 = C32725 * C32719;
    const double C32964 = C32930 + C32725;
    const double C2836 = C2825 + C2826;
    const double C2835 = C2823 + C2824;
    const double C894 = C32979 * C265;
    const double C888 = C32979 * C283;
    const double C882 = C32979 * C284;
    const double C876 = C32979 * C267;
    const double C870 = C32979 * C285;
    const double C864 = C32979 * C269;
    const double C1373 = C32979 * C274;
    const double C1367 = C32979 * C288;
    const double C1361 = C32979 * C276;
    const double C1355 = C32979 * C289;
    const double C1559 = C32979 * C728;
    const double C1553 = C32979 * C737;
    const double C1547 = C32979 * C730;
    const double C1541 = C32979 * C738;
    const double C11427 = C32979 * C2659;
    const double C11421 = C32979 * C2665;
    const double C11415 = C32979 * C1195;
    const double C11409 = C32979 * C1180;
    const double C11403 = C32979 * C736;
    const double C11397 = C32979 * C726;
    const double C11917 = C32979 * C1194;
    const double C11911 = C32979 * C1179;
    const double C17864 = C32732 * C265;
    const double C17858 = C32732 * C283;
    const double C17852 = C32732 * C284;
    const double C17846 = C32732 * C267;
    const double C17840 = C32732 * C285;
    const double C17834 = C32732 * C269;
    const double C18279 = C32732 * C274;
    const double C18273 = C32732 * C288;
    const double C18267 = C32732 * C276;
    const double C18261 = C32732 * C289;
    const double C18461 = C32732 * C728;
    const double C18455 = C32732 * C737;
    const double C18449 = C32732 * C730;
    const double C18443 = C32732 * C738;
    const double C20136 = C32732 * C1180;
    const double C20130 = C32732 * C1195;
    const double C20112 = C32732 * C736;
    const double C20106 = C32732 * C726;
    const double C20774 = C32732 * C1194;
    const double C20768 = C32732 * C1179;
    const double C31029 = C32732 * C2659;
    const double C31023 = C32732 * C2665;
    const double C32932 = C32732 / C31544;
    const double C32929 = C32732 * C32719;
    const double C7748 = C32993 - (C32725 * C32721) / C31508;
    const double C5515 = C5477 * C118;
    const double C5509 = C5477 * C129;
    const double C5499 = C5477 * C127;
    const double C5493 = C5477 * C117;
    const double C5487 = C5477 * C125;
    const double C5481 = C5477 * C116;
    const double C5930 = C5477 * C255;
    const double C5924 = C5477 * C268;
    const double C5918 = C5477 * C254;
    const double C5912 = C5477 * C266;
    const double C6112 = C5477 * C360;
    const double C6106 = C5477 * C373;
    const double C6100 = C5477 * C359;
    const double C6094 = C5477 * C371;
    const double C7123 = C5477 * C2110;
    const double C7117 = C5477 * C2118;
    const double C7107 = C5477 * C378;
    const double C7101 = C5477 * C362;
    const double C7095 = C5477 * C375;
    const double C7089 = C5477 * C361;
    const double C7453 = C5477 * C380;
    const double C7447 = C5477 * C363;
    const double C7633 = C5477 * C1182;
    const double C7627 = C5477 * C1168;
    const double C7621 = C5477 * C727;
    const double C7615 = C5477 * C721;
    const double C9083 = C5477 * C722;
    const double C9077 = C5477 * C729;
    const double C914 = C895 + C896;
    const double C911 = C889 + C890;
    const double C906 = C879 + C880;
    const double C903 = C873 + C874;
    const double C900 = C867 + C868;
    const double C897 = C861 + C862;
    const double C1387 = C1374 + C1375;
    const double C1384 = C1368 + C1369;
    const double C1381 = C1362 + C1363;
    const double C1378 = C1356 + C1357;
    const double C1573 = C1560 + C1561;
    const double C1570 = C1554 + C1555;
    const double C1567 = C1548 + C1549;
    const double C1564 = C1542 + C1543;
    const double C11447 = C11428 + C11429;
    const double C11444 = C11422 + C11423;
    const double C11439 = C11412 + C11413;
    const double C11436 = C11406 + C11407;
    const double C11433 = C11400 + C11401;
    const double C11430 = C11394 + C11395;
    const double C11759 = C11750 + C11751;
    const double C11756 = C11744 + C11745;
    const double C11935 = C11914 + C11915;
    const double C11932 = C11908 + C11909;
    const double C22166 = C22159 + C22160;
    const double C22163 = C22153 + C22154;
    const double C31690 = C31688 / C31508;
    const double C31663 = C32684 - C31659;
    const double C31672 = C31668 + C32771;
    const double C31700 = C31697 - C31699;
    const double C24446 = C169 * C32767;
    const double C24437 = C167 * C32767;
    const double C24431 = C165 * C32767;
    const double C24829 = C510 * C32767;
    const double C24823 = C508 * C32767;
    const double C24987 = C630 * C32767;
    const double C24981 = C628 * C32767;
    const double C32934 = C32767 * C32761;
    const double C32970 = C32936 + C32767;
    const double C1859 = C628 * C32981;
    const double C1851 = C630 * C32981;
    const double C24439 = C628 * C32774;
    const double C24433 = C630 * C32774;
    const double C32938 = C32774 / C31544;
    const double C32935 = C32774 * C32761;
    const double C13607 = C32995 - (C32767 * C32763) / C31508;
    const double C10376 = C168 * C10355;
    const double C10365 = C166 * C10355;
    const double C10359 = C164 * C10355;
    const double C10759 = C511 * C10355;
    const double C10753 = C509 * C10355;
    const double C10917 = C631 * C10355;
    const double C10911 = C629 * C10355;
    const double C5361 = C5356 + C5357;
    const double C7130 = C7099 + C7100;
    const double C7643 = C7623 + C7624;
    const double C11435 = C11404 + C11405;
    const double C17707 = C17694 + C17695;
    const double C171 = C158 + C159;
    const double C2832 = C2813 + C2814;
    const double C506 = C492 + C493;
    const double C2830 = C2809 + C2810;
    const double C3196 = C3173 + C3174;
    const double C5530 = C5507 + C5508;
    const double C15099 = C15078 + C15079;
    const double C908 = C883 + C884;
    const double C3199 = C3179 + C3180;
    const double C5528 = C5503 + C5504;
    const double C5933 = C5910 + C5911;
    const double C15468 = C15448 + C15449;
    const double C626 = C612 + C613;
    const double C3362 = C3339 + C3340;
    const double C8134 = C32966 * C1053;
    const double C16255 = C32966 * C1053;
    const double C1551 = C32956 * C1193;
    const double C4941 = C32729 * C1193;
    const double C6103 = C32956 * C1193;
    const double C9076 = C5472 * C1193;
    const double C17279 = C32729 * C1193;
    const double C18453 = C17823 * C1193;
    const double C20354 = C32732 * C1193;
    const double C22152 = C32979 * C1193;
    const double C6412 =
        (4 * (2 * C31894 + ae * C31896 + C31759 * C32014) +
         ae * (3 * C31896 + C31759 * C32015) +
         C31759 *
             (3 * C32014 + ae * C32015 +
              C31759 * (2 * C32008 + ae * C32010 +
                        C31759 * (C31782 + ae * C31759 * C31820 +
                                  C31759 * (ae * C31820 + C31759 * C31791))))) /
        C31510;
    const double C32429 = C32427 + C32422;
    const double C1876 = C1862 + C1863;
    const double C4727 = C4700 + C4701;
    const double C2335 = C2317 + C2318;
    const double C3365 = C3345 + C3346;
    const double C4949 = C4934 + C4935;
    const double C6115 = C6092 + C6093;
    const double C15634 = C15614 + C15615;
    const double C170 = C156 + C157;
    const double C2834 = C2817 + C2818;
    const double C507 = C494 + C495;
    const double C2828 = C2805 + C2806;
    const double C3198 = C3177 + C3178;
    const double C5533 = C5513 + C5514;
    const double C15097 = C15074 + C15075;
    const double C905 = C877 + C878;
    const double C3201 = C3183 + C3184;
    const double C5525 = C5497 + C5498;
    const double C5936 = C5916 + C5917;
    const double C15470 = C15452 + C15453;
    const double C627 = C614 + C615;
    const double C3364 = C3343 + C3344;
    const double C1875 = C1860 + C1861;
    const double C4729 = C4704 + C4705;
    const double C2336 = C2319 + C2320;
    const double C3367 = C3349 + C3350;
    const double C4951 = C4938 + C4939;
    const double C6118 = C6098 + C6099;
    const double C15636 = C15618 + C15619;
    const double C2324 = C32667 * C1197;
    const double C4707 = C32729 * C1197;
    const double C7456 = C5472 * C1197;
    const double C11753 = C32979 * C1197;
    const double C13099 = C32925 * C1197;
    const double C16715 = C32729 * C1197;
    const double C17273 = C15047 * C1197;
    const double C20118 = C32732 * C1197;
    const double C1371 = C32956 * C1040;
    const double C5927 = C32956 * C1040;
    const double C7766 = C32966 * C1040;
    const double C15887 = C32966 * C1040;
    const double C18277 = C17823 * C1040;
    const double C1557 = C32956 * C1177;
    const double C4945 = C32729 * C1177;
    const double C6109 = C32956 * C1177;
    const double C9082 = C5472 * C1177;
    const double C17283 = C32729 * C1177;
    const double C18459 = C17823 * C1177;
    const double C20360 = C32732 * C1177;
    const double C22158 = C32979 * C1177;
    const double C2326 = C32667 * C1184;
    const double C4711 = C32729 * C1184;
    const double C7450 = C5472 * C1184;
    const double C11747 = C32979 * C1184;
    const double C13103 = C32925 * C1184;
    const double C16711 = C32729 * C1184;
    const double C17277 = C15047 * C1184;
    const double C20124 = C32732 * C1184;
    const double C12335 = C32667 * C2130;
    const double C31930 = C31929 + C31927;
    const double C12156 = C12148 + C12149;
    const double C14547 = C14542 + C14543;
    const double C12145 =
        (4 * (2 * C31977 + ae * C31979 + C31758 * C32144) +
         ae * (3 * C31979 + C31758 * C32145) +
         C31758 *
             (3 * C32144 + ae * C32145 +
              C31758 * (2 * C32138 + ae * C32140 +
                        C31758 * (C31782 + ae * C31758 * C31859 +
                                  C31758 * (ae * C31859 + C31758 * C31791))))) /
        C31510;
    const double C1038 =
        (2 * (C31759 * C31854 + C32237 * ae) +
         C31759 * (C31854 + C31759 * C31948 + C31759 * C31913 * ae) +
         (C32237 + C31913 * C31893) * ae) /
        C31508;
    const double C1175 =
        (C31758 * (C31854 + C31759 * C31948 + C32300 * ae)) / C31508;
    const double C1188 =
        (C31759 * C31854 + C32237 * ae + C31948 * C31976) / C31508;
    const double C2125 =
        (3 * (C31815 + C31758 * C32357 + C32355 * ae) +
         C31758 * (2 * C32357 +
                   C31758 * (C31822 + C31758 * (C31758 * C31832 + C31954) +
                             C31758 * C31953 * ae) +
                   C32358 * ae) +
         (2 * C32355 + C31758 * C32358) * ae) /
        C31508;
    const double C2141 = C113 * C2114;
    const double C278 =
        (2 * C31851 + C31766 * C31854 +
         C31759 * (C31759 * C31863 + C32242 * ae) + C31759 * C32242 * ae) /
        C31508;
    const double C367 = (C31758 * (3 * C31815 + C31766 * C31824) +
                         (3 * C32237 + C31766 * C32242) * ae) /
                        C31508;
    const double C384 =
        (2 * C31812 + C31766 * C31815 +
         C31758 * (C31758 * C31824 + C32242 * ae) + C31758 * C32242 * ae) /
        C31508;
    const double C732 = (C31758 * (C31759 * C31863 + C32242 * ae)) / C31508;
    const double C733 =
        (C31758 * C31759 * C31824 + C31759 * C32242 * ae) / C31508;
    const double C120 = 4 * (2 * C32233 + C31766 * C32237) +
                        C31766 * (3 * C32237 + C31766 * C32242);
    const double C252 = C31759 * (3 * C32237 + C31766 * C32242);
    const double C260 = 2 * C32233 + C31766 * C32237 + C32242 * C31893;
    const double C357 = C31758 * (3 * C32237 + C31766 * C32242);
    const double C365 = 2 * C32233 + C31766 * C32237 + C32242 * C31976;
    const double C724 = C31758 * C31759 * C32242;
    const double C1347 =
        2 * C31759 * C32242 + C31759 * (C32242 + C31965 * C31893);
    const double C1533 = C31758 * (C32242 + C31965 * C31893);
    const double C2494 =
        2 * C31758 * C32242 + C31758 * (C32242 + C31965 * C31976);
    const double C2313 = C113 * C1190;
    const double C4698 = C2785 * C1190;
    const double C16716 = C15054 * C1190;
    const double C2315 = C113 * C1172;
    const double C4702 = C2785 * C1172;
    const double C16720 = C15054 * C1172;
    const double C2158 = C2143 + C2144;
    const double C12243 =
        (3 * (C31898 + C31758 * C32458 + C32456 * ae) +
         C31758 *
             (2 * C32458 +
              C31758 * (C32080 + C31758 * (C31758 * C31759 * C32083 + C32122) +
                        C31758 * C32119 * ae) +
              C32459 * ae) +
         (2 * C32456 + C31758 * C32459) * ae) /
        C31508;
    const double C12878 = C2785 * C2662;
    const double C13958 = C113 * C2662;
    const double C17042 = C15054 * C2662;
    const double C31943 = C31856 + C31942;
    const double C12879 = C32729 * C2666;
    const double C13959 = C32667 * C2666;
    const double C17043 = C32729 * C2666;
    const double C12883 = C32729 * C2661;
    const double C13961 = C32667 * C2661;
    const double C17047 = C32729 * C2661;
    const double C32471 = C31817 + C32469;
    const double C7457 = C5479 * C1187;
    const double C11754 = C859 * C1187;
    const double C13096 = C2785 * C1187;
    const double C17270 = C15054 * C1187;
    const double C9073 = C5479 * C1725;
    const double C22149 = C859 * C1725;
    const double C7451 = C5479 * C1171;
    const double C11748 = C859 * C1171;
    const double C13100 = C2785 * C1171;
    const double C17274 = C15054 * C1171;
    const double C9079 = C5479 * C1720;
    const double C22155 = C859 * C1720;
    const double C12334 = C113 * C2123;
    const double C12332 = C113 * C2112;
    const double C7084 =
        (3 * (C31896 + C31758 * C32409 + C32407 * ae) +
         C31758 * (2 * C32409 +
                   C31758 * (C32010 + C31758 * (C31758 * C32028 + C32067) +
                             C31758 * C32065 * ae) +
                   C32410 * ae) +
         (2 * C32407 + C31758 * C32410) * ae) /
        C31508;
    const double C7113 = C5479 * C7079;
    const double C11418 = C859 * C7079;
    const double C14944 = C2785 * C7079;
    const double C28642 = C15054 * C7079;
    const double C6479 = (C31758 * (3 * C31896 + C31759 * C32015) +
                          (3 * C32292 + C31759 * C32374) * ae) /
                         C31508;
    const double C6483 =
        (2 * C31890 + C31759 * C31896 +
         C31758 * (C31758 * C32015 + C32374 * ae) + C31758 * C32374 * ae) /
        C31508;
    const double C6406 = 4 * (2 * C32290 + C31759 * C32292) +
                         C31759 * (3 * C32292 + C31759 * C32374);
    const double C6476 = C31758 * (3 * C32292 + C31759 * C32374);
    const double C6477 = 2 * C32290 + C31759 * C32292 + C32374 * C31976;
    const double C7610 =
        2 * C31758 * C32374 + C31758 * (C32374 + C32070 * C31976);
    const double C32485 = C32003 + C32483;
    const double C12430 = C113 * C7083;
    const double C14536 = C2785 * C7083;
    const double C28234 = C15054 * C7083;
    const double C12428 = C113 * C7077;
    const double C14540 = C2785 * C7077;
    const double C28238 = C15054 * C7077;
    const double C32051 = C32050 + C32048;
    const double C7086 =
        (3 * (C31894 + ae * C32102 + C31758 * C32106) +
         ae * (2 * C32102 + C31758 * C32107) +
         C31758 * (2 * C32106 + ae * C32107 +
                   C31758 * (C32008 + ae * C31758 * C32047 +
                             C31758 * (ae * C32047 + C31758 * C32026)))) /
        C31510;
    const double C7081 = (3 * (C31921 + C31926 * C31976) +
                          C31758 * (2 * C32102 + C31758 * C32107)) /
                         C31508;
    const double C32198 = C32008 + C32194;
    const double C32447 = C32445 + C32440;
    const double C12139 = 4 * (2 * C32341 + C31758 * C32344) +
                          C31758 * (3 * C32344 + C31758 * C32428);
    const double C142 =
        (5 * (3 * C31784 + C31766 * C31795) +
         C31766 * (4 * C31795 +
                   C31766 * (3 * C31793 +
                             C31766 * (2 * C31766 * C31791 +
                                       C31766 * (C31791 + std::pow(C31763, 8) *
                                                              bs[8] * C31764 *
                                                              C31774))))) /
        C31510;
    const double C282 =
        (ae * (3 * (C31767 * C31768 * C31797 + C31799 * C31774) +
               C31766 *
                   (2 * C31766 * C31799 +
                    C31766 * (C31799 + C31779 * C31780 * C31797 * C31774))) +
         C31759 * (3 * C31784 + C31766 * C31795)) /
        C31510;
    const double C290 =
        (2 * C31766 * C31777 + C31766 * C31784 + ae * C31759 * C31824 +
         C31759 * (ae * C31824 + C31759 * C31795)) /
        C31510;
    const double C387 =
        (ae * (3 * (C31767 * C31768 * C31838 + C31840 * C31774) +
               C31766 *
                   (2 * C31766 * C31840 +
                    C31766 * (C31840 + C31779 * C31780 * C31838 * C31774))) +
         C31758 * (3 * C31784 + C31766 * C31795)) /
        C31510;
    const double C395 =
        (2 * C31766 * C31777 + C31766 * C31784 + ae * C31758 * C31863 +
         C31758 * (ae * C31863 + C31758 * C31795)) /
        C31510;
    const double C739 = (ae * (C31759 * C31863 +
                               (2 * C31766 * C31882 +
                                C31766 * (C31882 + C31773 * C31775 * C31774)) *
                                   ae) +
                         C31758 * (ae * C31824 + C31759 * C31795)) /
                        C31510;
    const double C1192 =
        (ae * (C31854 + C31759 * (C31759 * C31861 + C31913 * ae) +
               C31759 * C31913 * ae) +
         C31758 * (C31784 + ae * C31905 + C31759 * C31909)) /
        C31510;
    const double C1199 = (ae * C31815 + C31759 * C31784 + ae * C31758 * C31948 +
                          C31758 * (ae * C31948 + C31758 * C31909)) /
                         C31510;
    const double C1376 = C1352 + C1353;
    const double C5932 = C5908 + C5909;
    const double C32034 = C31759 * C32032;
    const double C32111 = C31758 * C32032;
    const double C32199 = C31758 * C32195;
    const double C32093 = C32088 + C32091;
    const double C32173 = C32170 + C32171;
    const double C32187 = C32184 + C32185;
    const double C32164 = C31758 * C32162;
    const double C31835 = C31766 * C31834;
    const double C1350 =
        (2 * (ae * C31824 + C31759 * C31795) + ae * (C31824 + C31834 * C31893) +
         C31759 * (C31795 + ae * C31759 * C31834 +
                   C31759 * (ae * C31834 +
                             C31759 * (2 * C31766 * C31791 +
                                       C31766 * (C31791 + std::pow(C31763, 8) *
                                                              bs[8] * C31764 *
                                                              C31774))))) /
        C31510;
    const double C1349 =
        (2 * C31759 * C31824 + C31759 * (C31824 + C31834 * C31893)) / C31508;
    const double C1535 = (C31758 * (C31824 + C31834 * C31893) +
                          (C32242 + C31965 * C31893) * ae) /
                         C31508;
    const double C1054 =
        (3 * (C31784 + ae * C31905 + C31759 * C31909) +
         ae * (2 * C31905 + C31759 * C31910) +
         C31759 * (2 * C31909 + ae * C31910 +
                   C31759 * (C31793 + ae * C31759 * C31832 +
                             C31759 * (ae * C31832 +
                                       C31759 * (C31791 + std::pow(C31763, 8) *
                                                              bs[8] * C31764 *
                                                              C31774))))) /
        C31510;
    const double C1048 = (3 * (C31815 + C31822 * C31893) +
                          C31759 * (2 * C31905 + C31759 * C31910)) /
                         C31508;
    const double C1191 =
        (C31815 + C31822 * C31893 + C31758 * (C31758 * C31910 + C32302 * ae) +
         C31758 * C32302 * ae) /
        C31508;
    const double C1727 = (C31758 * (2 * C31905 + C31759 * C31910) +
                          (2 * C32300 + C31759 * C32302) * ae) /
                         C31508;
    const double C32035 = C31759 * C32033;
    const double C32094 = C32086 + C32092;
    const double C31874 = C31766 * C31873;
    const double C31995 = C31759 * C31873;
    const double C1536 =
        (ae * (C31863 + C31759 * (C31759 * C31873 + C31965 * ae) +
               C31759 * C31965 * ae) +
         C31758 * (C31795 + ae * C31759 * C31834 +
                   C31759 * (ae * C31834 +
                             C31759 * (2 * C31766 * C31791 +
                                       C31766 * (C31791 + std::pow(C31763, 8) *
                                                              bs[8] * C31764 *
                                                              C31774))))) /
        C31510;
    const double C2497 =
        (2 * (ae * C31863 + C31758 * C31795) + ae * (C31863 + C31873 * C31976) +
         C31758 * (C31795 + ae * C31758 * C31873 +
                   C31758 * (ae * C31873 +
                             C31758 * (2 * C31766 * C31791 +
                                       C31766 * (C31791 + std::pow(C31763, 8) *
                                                              bs[8] * C31764 *
                                                              C31774))))) /
        C31510;
    const double C2495 =
        (2 * C31758 * C31863 + C31758 * (C31863 + C31873 * C31976)) / C31508;
    const double C31958 = C31759 * C31956;
    const double C2667 =
        (2 * (ae * C31948 + C31758 * C31909) + ae * (C31948 + C31956 * C31976) +
         C31758 * (C31909 + ae * C31758 * C31956 +
                   C31758 * (ae * C31956 +
                             C31758 * (ae * C31832 +
                                       C31759 * (C31791 + std::pow(C31763, 8) *
                                                              bs[8] * C31764 *
                                                              C31774))))) /
        C31510;
    const double C2663 =
        (2 * C31758 * C31948 + C31758 * (C31948 + C31956 * C31976)) / C31508;
    const double C2131 =
        (3 * (C31784 + ae * C31988 + C31758 * C31992) +
         ae * (2 * C31988 + C31758 * C31993) +
         C31758 * (2 * C31992 + ae * C31993 +
                   C31758 * (C31793 + ae * C31758 * C31871 +
                             C31758 * (ae * C31871 +
                                       C31758 * (C31791 + std::pow(C31763, 8) *
                                                              bs[8] * C31764 *
                                                              C31774))))) /
        C31510;
    const double C2124 = (3 * (C31854 + C31861 * C31976) +
                          C31758 * (2 * C31988 + C31758 * C31993)) /
                         C31508;
    const double C32071 = C32069 + C32064;
    const double C32200 = C31758 * C32197;
    const double C32125 = C31866 + C32124;
    const double C32174 = C31940 + C32172;
    const double C32188 = C32182 + C32186;
    const double C32165 = C31758 * C32163;
    const double C184 = C176 + C177;
    const double C1874 = C1856 + C1857;
    const double C3621 = C3609 + C3610;
    const double C2680 = C2675 + C2676;
    const double C4734 = C4714 + C4715;
    const double C7135 = C7109 + C7110;
    const double C11941 = C11926 + C11927;
    const double C13508 = C13502 + C13503;
    const double C17065 = C17038 + C17039;
    const double C7138 = C7115 + C7116;
    const double C12433 = C12426 + C12427;
    const double C12898 = C12886 + C12887;
    const double C14948 = C14942 + C14943;
    const double C17070 = C17050 + C17051;
    const double C5359 = C5352 + C5353;
    const double C7127 = C7093 + C7094;
    const double C7640 = C7617 + C7618;
    const double C11432 = C11398 + C11399;
    const double C17705 = C17690 + C17691;
    const double C2679 = C2673 + C2674;
    const double C4736 = C4718 + C4719;
    const double C7132 = C7103 + C7104;
    const double C11938 = C11920 + C11921;
    const double C13506 = C13498 + C13499;
    const double C17063 = C17034 + C17035;
    const double C7141 = C7121 + C7122;
    const double C12432 = C12424 + C12425;
    const double C12900 = C12890 + C12891;
    const double C14946 = C14938 + C14939;
    const double C17072 = C17054 + C17055;
    const double C12157 = C12150 + C12151;
    const double C14545 = C14538 + C14539;
    const double C1880 = C1873 * C32959;
    const double C2507 = C1873 * C32981;
    const double C4109 = C1873 * C32771;
    const double C10364 = C1873 * C32959;
    const double C10914 = C1873 * C10353;
    const double C21383 = C1873 * C32771;
    const double C24435 = C1873 * C24425;
    const double C24985 = C1873 * C32774;
    const double C2347 = C2339 * C32981;
    const double C3963 = C2339 * C32771;
    const double C10756 = C2339 * C10353;
    const double C21241 = C2339 * C32771;
    const double C24827 = C2339 * C32774;
    const double C5154 = C3369 + C3370;
    const double C5151 = C3370 + C3369;
    const double C2505 = C2159 * C32959;
    const double C10912 = C2159 * C32959;
    const double C13623 = C2159 * C32972;
    const double C22676 = C2159 * C32972;
    const double C24983 = C2159 * C24425;
    const double C1879 = C1872 * C1846;
    const double C2508 = C1872 * C1845;
    const double C4110 = C1872 * C3603;
    const double C10363 = C1872 * C10357;
    const double C10915 = C1872 * C10356;
    const double C21384 = C1872 * C20883;
    const double C2348 = C2340 * C1845;
    const double C3964 = C2340 * C3603;
    const double C10757 = C2340 * C10356;
    const double C21242 = C2340 * C20883;
    const double C5155 = C3371 + C3372;
    const double C5150 = C3372 + C3371;
    const double C2506 = C2160 * C1846;
    const double C10913 = C2160 * C10357;
    const double C185 = C178 + C179;
    const double C3622 = C3613 + C3614;
    const double C160 = C113 * C132;
    const double C488 = C113 * C262;
    const double C2811 = C2785 * C262;
    const double C15080 = C15054 * C262;
    const double C885 = C859 * C279;
    const double C3171 = C2785 * C279;
    const double C5505 = C5479 * C279;
    const double C15440 = C15054 * C279;
    const double C163 = C32667 * C133;
    const double C491 = C32667 * C263;
    const double C2816 = C32729 * C263;
    const double C15085 = C32729 * C263;
    const double C611 = C32667 * C368;
    const double C1867 = C32667 * C383;
    const double C12155 = C32667 * C12142;
    const double C2496 =
        (2 * (C31758 * C31824 + C32242 * ae) +
         C31758 * (C31824 + C31758 * (C31758 * C31834 + C31996) +
                   C31758 * C31965 * ae) +
         (C32242 + C31965 * C31976) * ae) /
        C31508;
    const double C32247 = C32245 + C32246;
    const double C2310 =
        (C31759 * C31824 + C31758 * (C31758 * C31759 * C31834 + C32361 * ae) +
         C31758 * C32361 * ae) /
        C31508;
    const double C2308 = C31759 * C32242 + C32361 * C31976;
    const double C7612 =
        (2 * (C31758 * C32015 + C32374 * ae) +
         C31758 * (C32015 + C31758 * (C31758 * C32033 + C32072) +
                   C31758 * C32070 * ae) +
         (C32374 + C32070 * C31976) * ae) /
        C31508;
    const double C32378 = C32376 + C32377;
    const double C12419 = 4 * (2 * C32401 + C31758 * C32404) +
                          C31758 * (3 * C32404 + C31758 * C32486);
    const double C6570 = 4 * (2 * C32295 + C31759 * C32297) +
                         C31759 * (3 * C32297 + C31759 * C32389);
    const double C6656 = C31758 * (3 * C32297 + C31759 * C32389);
    const double C7292 = 2 * C32295 + C31759 * C32297 + C32389 * C31976;
    const double C12327 = 4 * (2 * C32348 + C31758 * C32351) +
                          C31758 * (3 * C32351 + C31758 * C32472);
    const double C32450 = C32438 + C32448;
    const double C32905 = C32590 * C32580;
    const double C32944 = C32910 + C32590;
    const double C32913 = C32598 / C31544;
    const double C32909 = C32598 * C32580;
    const double C2780 = C32989 - (C32590 * C32581) / C31508;
    const double C31605 = C31600 - C31603;
    const double C31580 = C31576 * ae;
    const double C15053 = (-C31562) / C31544 - (C31576 * be) / C31508;
    const double C31589 = C31585 * be;
    const double C17855 = C31613 * C279;
    const double C17853 = C31613 * C277;
    const double C17847 = C31613 * C259;
    const double C17841 = C31613 * C275;
    const double C17835 = C31613 * C258;
    const double C18276 = C31613 * C1032;
    const double C18270 = C31613 * C1039;
    const double C18264 = C31613 * C1031;
    const double C18258 = C31613 * C1037;
    const double C18458 = C31613 * C1166;
    const double C18452 = C31613 * C1176;
    const double C18446 = C31613 * C1165;
    const double C18440 = C31613 * C1174;
    const double C20133 = C31613 * C1169;
    const double C20127 = C31613 * C1183;
    const double C20121 = C31613 * C1171;
    const double C20115 = C31613 * C1187;
    const double C20113 = C31613 * C1178;
    const double C20107 = C31613 * C1167;
    const double C20357 = C31613 * C1720;
    const double C20351 = C31613 * C1725;
    const double C20775 = C31613 * C1723;
    const double C20769 = C31613 * C1719;
    const double C31026 = C31613 * C7076;
    const double C31020 = C31613 * C7079;
    const double C6343 =
        (C31613 / C31544 + (0 * ae) / C31508) / C31544 - (0 * be) / C31508;
    const double C7757 = C31613 / C31544 - (0 * be) / C31508;
    const double C15878 = C31613 / C31544 + (0 * ae) / C31508;
    const double C32961 = C32928 / C31508;
    const double C32983 = C32964 / C31544;
    const double C2840 = C2836 * C32684;
    const double C4390 = C2836 * C32926;
    const double C23434 = C2836 * C20880;
    const double C2839 = C2835 * C114;
    const double C4389 = C2835 * C3602;
    const double C913 = C893 + C894;
    const double C910 = C887 + C888;
    const double C907 = C881 + C882;
    const double C904 = C875 + C876;
    const double C901 = C869 + C870;
    const double C898 = C863 + C864;
    const double C1386 = C1372 + C1373;
    const double C1383 = C1366 + C1367;
    const double C1380 = C1360 + C1361;
    const double C1377 = C1354 + C1355;
    const double C1572 = C1558 + C1559;
    const double C1569 = C1552 + C1553;
    const double C1566 = C1546 + C1547;
    const double C1563 = C1540 + C1541;
    const double C11446 = C11426 + C11427;
    const double C11443 = C11420 + C11421;
    const double C11440 = C11414 + C11415;
    const double C11437 = C11408 + C11409;
    const double C11434 = C11402 + C11403;
    const double C11431 = C11396 + C11397;
    const double C11936 = C11916 + C11917;
    const double C11933 = C11910 + C11911;
    const double C32984 = C32965 + C32932;
    const double C7750 = C32932 - C32730 / C31512;
    const double C32963 = C32929 / C31508;
    const double C7790 = C7748 * C126;
    const double C7782 = C7748 * C138;
    const double C7768 = C7748 * C137;
    const double C7760 = C7748 * C124;
    const double C8148 = C7748 * C269;
    const double C8140 = C7748 * C285;
    const double C8302 = C7748 * C374;
    const double C8294 = C7748 * C390;
    const double C9812 = C7748 * C377;
    const double C9804 = C7748 * C392;
    const double C9790 = C7748 * C391;
    const double C9782 = C7748 * C376;
    const double C10228 = C7748 * C736;
    const double C10220 = C7748 * C726;
    const double C5534 = C5515 + C5516;
    const double C5531 = C5509 + C5510;
    const double C5526 = C5499 + C5500;
    const double C5523 = C5493 + C5494;
    const double C5520 = C5487 + C5488;
    const double C5517 = C5481 + C5482;
    const double C5943 = C5930 + C5931;
    const double C5940 = C5924 + C5925;
    const double C5937 = C5918 + C5919;
    const double C5934 = C5912 + C5913;
    const double C6125 = C6112 + C6113;
    const double C6122 = C6106 + C6107;
    const double C6119 = C6100 + C6101;
    const double C6116 = C6094 + C6095;
    const double C7142 = C7123 + C7124;
    const double C7139 = C7117 + C7118;
    const double C7134 = C7107 + C7108;
    const double C7131 = C7101 + C7102;
    const double C7128 = C7095 + C7096;
    const double C7125 = C7089 + C7090;
    const double C7462 = C7453 + C7454;
    const double C7459 = C7447 + C7448;
    const double C7648 = C7633 + C7634;
    const double C7645 = C7627 + C7628;
    const double C7642 = C7621 + C7622;
    const double C7639 = C7615 + C7616;
    const double C9090 = C9083 + C9084;
    const double C9087 = C9077 + C9078;
    const double C31692 = C31687 - C31690;
    const double C31667 = C31663 * ae;
    const double C20882 = (-C31649) / C31544 - (C31663 * be) / C31508;
    const double C31676 = C31672 * be;
    const double C24434 = C1872 * C31700;
    const double C24984 = C2160 * C31700;
    const double C12014 =
        (C31700 / C31544 + (0 * ae) / C31508) / C31544 - (0 * be) / C31508;
    const double C13614 = C31700 / C31544 - (0 * be) / C31508;
    const double C22667 = C31700 / C31544 + (0 * ae) / C31508;
    const double C32967 = C32934 / C31508;
    const double C32986 = C32970 / C31544;
    const double C32987 = C32971 + C32938;
    const double C13609 = C32938 - C32772 / C31512;
    const double C32969 = C32935 / C31508;
    const double C13630 = C167 * C13607;
    const double C13617 = C165 * C13607;
    const double C13966 = C510 * C13607;
    const double C14108 = C630 * C13607;
    const double C10377 = C10365 + C10366;
    const double C181 = C171 * C32684;
    const double C3619 = C171 * C32926;
    const double C20899 = C171 * C20880;
    const double C514 = C506 * C32684;
    const double C3957 = C506 * C32926;
    const double C21235 = C506 * C20880;
    const double C2838 = C2829 + C2830;
    const double C634 = C626 * C32684;
    const double C1868 = C626 * C32981;
    const double C3616 = C626 * C32771;
    const double C4103 = C626 * C32926;
    const double C10373 = C626 * C10353;
    const double C20896 = C626 * C32771;
    const double C21377 = C626 * C20880;
    const double C24444 = C626 * C32774;
    const double C1568 = C1550 + C1551;
    const double C4952 = C4940 + C4941;
    const double C6120 = C6102 + C6103;
    const double C9086 = C9075 + C9076;
    const double C17290 = C17278 + C17279;
    const double C22162 = C22151 + C22152;
    const double C12141 =
        (4 * (2 * C32343 + C31758 * C32429 + C32344 * ae) +
         C31758 *
             (3 * C32429 +
              C31758 * (2 * C32421 +
                        C31758 * (C31799 + C31758 * (C31758 * C31820 + C32044) +
                                  C31758 * C31884 * ae) +
                        C32423 * ae) +
              C32428 * ae) +
         (3 * C32344 + C31758 * C32428) * ae) /
        C31508;
    const double C1883 = C1876 * C32959;
    const double C2501 = C1876 * C32981;
    const double C4105 = C1876 * C32771;
    const double C10370 = C1876 * C32959;
    const double C10908 = C1876 * C10353;
    const double C21379 = C1876 * C32771;
    const double C24441 = C1876 * C24425;
    const double C24979 = C1876 * C32774;
    const double C2343 = C2335 * C32981;
    const double C3959 = C2335 * C32771;
    const double C10750 = C2335 * C10353;
    const double C21237 = C2335 * C32771;
    const double C24821 = C2335 * C32774;
    const double C4392 = C3366 + C3365;
    const double C5152 = C3365 + C3366;
    const double C180 = C170 * C114;
    const double C3620 = C170 * C3602;
    const double C515 = C507 * C114;
    const double C3958 = C507 * C3602;
    const double C2837 = C2827 + C2828;
    const double C635 = C627 * C114;
    const double C1869 = C627 * C1845;
    const double C3615 = C627 * C3603;
    const double C4104 = C627 * C3602;
    const double C10374 = C627 * C10356;
    const double C20895 = C627 * C20883;
    const double C1882 = C1875 * C1846;
    const double C2502 = C1875 * C1845;
    const double C4106 = C1875 * C3603;
    const double C10369 = C1875 * C10357;
    const double C10909 = C1875 * C10356;
    const double C21380 = C1875 * C20883;
    const double C24440 = C1875 * C31700;
    const double C2344 = C2336 * C1845;
    const double C3960 = C2336 * C3603;
    const double C10751 = C2336 * C10356;
    const double C21238 = C2336 * C20883;
    const double C4391 = C3368 + C3367;
    const double C5153 = C3367 + C3368;
    const double C2337 = C2323 + C2324;
    const double C4730 = C4706 + C4707;
    const double C7463 = C7455 + C7456;
    const double C11760 = C11752 + C11753;
    const double C13105 = C13098 + C13099;
    const double C16727 = C16714 + C16715;
    const double C1385 = C1370 + C1371;
    const double C5941 = C5926 + C5927;
    const double C1571 = C1556 + C1557;
    const double C4954 = C4944 + C4945;
    const double C6123 = C6108 + C6109;
    const double C9089 = C9081 + C9082;
    const double C17292 = C17282 + C17283;
    const double C22165 = C22157 + C22158;
    const double C2338 = C2325 + C2326;
    const double C4732 = C4710 + C4711;
    const double C7460 = C7449 + C7450;
    const double C11757 = C11746 + C11747;
    const double C13107 = C13102 + C13103;
    const double C16725 = C16710 + C16711;
    const double C1196 =
        (C31770 + ae * C31890 + C31759 * C31894 + ae * C31758 * C31930 +
         C31758 * (ae * C31930 +
                   C31758 * (C31777 + ae * C31759 * C31799 +
                             C31759 * (ae * C31799 + C31759 * C31782)))) /
        C31510;
    const double C1728 =
        (ae * (2 * C31921 + C31759 * C31930 + (C31917 + C31882 * C31893) * ae) +
         C31758 * (2 * C31894 + ae * C31896 +
                   C31759 * (C31777 + ae * C31759 * C31799 +
                             C31759 * (ae * C31799 + C31759 * C31782)))) /
        C31510;
    const double C1043 =
        (3 * (C31849 + C31759 * C31921 + C32290 * ae) +
         C31759 * (2 * C31921 + C31759 * C31930 + C32292 * ae) +
         (2 * C32290 + C31759 * C32292) * ae) /
        C31508;
    const double C1181 =
        (C31849 + C31759 * C31921 + C32290 * ae + C31930 * C31976) / C31508;
    const double C1722 =
        (C31758 * (2 * C31921 + C31759 * C31930 + C32292 * ae)) / C31508;
    const double C12153 = C32667 * C12145;
    const double C1359 = C32956 * C1038;
    const double C5915 = C32956 * C1038;
    const double C7784 = C32966 * C1038;
    const double C15905 = C32966 * C1038;
    const double C18265 = C17823 * C1038;
    const double C1545 = C32956 * C1175;
    const double C4937 = C32729 * C1175;
    const double C6097 = C32956 * C1175;
    const double C18447 = C17823 * C1175;
    const double C19268 = C32729 * C1175;
    const double C2316 = C32667 * C1188;
    const double C4703 = C32729 * C1188;
    const double C16721 = C32729 * C1188;
    const double C2157 = C2141 + C2142;
    const double C892 = C32956 * C278;
    const double C3176 = C32729 * C278;
    const double C5512 = C32956 * C278;
    const double C15445 = C32729 * C278;
    const double C17862 = C17823 * C278;
    const double C608 = C113 * C367;
    const double C1864 = C113 * C384;
    const double C3342 = C32729 * C732;
    const double C3956 = C32667 * C732;
    const double C15611 = C32729 * C732;
    const double C3337 = C2785 * C733;
    const double C3953 = C113 * C733;
    const double C15606 = C15054 * C733;
    const double C162 = C113 * C120;
    const double C490 = C113 * C252;
    const double C2815 = C2785 * C252;
    const double C15084 = C15054 * C252;
    const double C891 = C859 * C260;
    const double C3175 = C2785 * C260;
    const double C5511 = C5479 * C260;
    const double C15444 = C15054 * C260;
    const double C17861 = C31613 * C260;
    const double C610 = C113 * C357;
    const double C1866 = C113 * C365;
    const double C3341 = C2785 * C724;
    const double C3955 = C113 * C724;
    const double C15610 = C15054 * C724;
    const double C2500 = C2158 * C1846;
    const double C10907 = C2158 * C10357;
    const double C24978 = C2158 * C31700;
    const double C31944 = C31943 + C31941;
    const double C12894 = C12878 + C12879;
    const double C13968 = C13958 + C13959;
    const double C17066 = C17042 + C17043;
    const double C12896 = C12882 + C12883;
    const double C13969 = C13960 + C13961;
    const double C17068 = C17046 + C17047;
    const double C32473 = C32471 + C32466;
    const double C12337 = C12334 + C12335;
    const double C12336 = C12332 + C12333;
    const double C7637 = C5479 * C6483;
    const double C11930 = C859 * C6483;
    const double C31488 = C31613 * C6483;
    const double C7631 = C5479 * C6477;
    const double C11924 = C859 * C6477;
    const double C31482 = C31613 * C6477;
    const double C32487 = C32485 + C32480;
    const double C32052 = C31759 * C32051;
    const double C32056 = 3 * C32051;
    const double C32110 = ae * C32051;
    const double C32109 = C31758 * C32051;
    const double C7085 =
        (2 * (ae * C31930 + C31758 * C32014) + ae * (C31930 + C32051 * C31976) +
         C31758 * (C32014 + ae * C31758 * C32051 +
                   C31758 * (ae * C32051 + C31758 * C32032))) /
        C31510;
    const double C7080 =
        (2 * C31758 * C31930 + C31758 * (C31930 + C32051 * C31976)) / C31508;
    const double C12431 = C32667 * C7086;
    const double C14537 = C32729 * C7086;
    const double C28235 = C32729 * C7086;
    const double C12429 = C32667 * C7081;
    const double C14541 = C32729 * C7081;
    const double C28239 = C32729 * C7081;
    const double C32449 = C31758 * C32447;
    const double C12154 = C113 * C12139;
    const double C489 = C32667 * C282;
    const double C2812 = C32729 * C282;
    const double C15081 = C32729 * C282;
    const double C886 = C32956 * C290;
    const double C3172 = C32729 * C290;
    const double C5506 = C32956 * C290;
    const double C15441 = C32729 * C290;
    const double C17856 = C17823 * C290;
    const double C609 = C32667 * C387;
    const double C1865 = C32667 * C395;
    const double C3338 = C32729 * C739;
    const double C3954 = C32667 * C739;
    const double C15607 = C32729 * C739;
    const double C1539 = C32956 * C1192;
    const double C4933 = C32729 * C1192;
    const double C6091 = C32956 * C1192;
    const double C18441 = C17823 * C1192;
    const double C19264 = C32729 * C1192;
    const double C2314 = C32667 * C1199;
    const double C4699 = C32729 * C1199;
    const double C16717 = C32729 * C1199;
    const double C32036 = C32024 + C32034;
    const double C32201 = C32198 + C32199;
    const double C32166 = C32154 + C32164;
    const double C31836 = C31826 + C31835;
    const double C32037 = C32022 + C32035;
    const double C6573 =
        (4 * (2 * C31902 + ae * C31903 + C31759 * C32093) +
         ae * (3 * C31903 + C31759 * C32094) +
         C31759 * (3 * C32093 + ae * C32094 +
                   C31759 * (2 * C32089 + ae * C32090 +
                             C31759 * (C32082 + ae * C31759 * C32083 +
                                       C31759 * (ae * C32083 +
                                                 C31759 * C31766 *
                                                     std::pow(C31763, 8) *
                                                     bs[8] * C31764))))) /
        C31510;
    const double C6572 = (4 * (2 * C31898 + C31759 * C31903) +
                          C31759 * (3 * C31903 + C31759 * C32094)) /
                         C31508;
    const double C6658 = (C31758 * (3 * C31903 + C31759 * C32094) +
                          (3 * C32297 + C31759 * C32389) * ae) /
                         C31508;
    const double C7294 =
        (2 * C31898 + C31759 * C31903 +
         C31758 * (C31758 * C32094 + C32389 * ae) + C31758 * C32389 * ae) /
        C31508;
    const double C31875 = C31865 + C31874;
    const double C31997 = C31995 + C31996;
    const double C31959 = C31861 + C31958;
    const double C32073 = C31759 * C32071;
    const double C32112 = C32071 * C31976;
    const double C32202 = C32196 + C32200;
    const double C32126 = C32125 + C32122;
    const double C12244 =
        (3 * (C31902 + ae * C32169 + C31758 * C32173) +
         ae * (2 * C32169 + C31758 * C32174) +
         C31758 * (2 * C32173 + ae * C32174 +
                   C31758 * (C32089 + ae * C31758 * C32123 +
                             C31758 * (ae * C32123 +
                                       C31758 * (ae * C32083 +
                                                 C31759 * C31766 *
                                                     std::pow(C31763, 8) *
                                                     bs[8] * C31764))))) /
        C31510;
    const double C12242 = (3 * (C31934 + C31940 * C31976) +
                           C31758 * (2 * C32169 + C31758 * C32174)) /
                          C31508;
    const double C12330 =
        (4 * (2 * C31985 + ae * C31986 + C31758 * C32187) +
         ae * (3 * C31986 + C31758 * C32188) +
         C31758 * (3 * C32187 + ae * C32188 +
                   C31758 * (2 * C32181 + ae * C32183 +
                             C31758 * (C32082 + ae * C31758 * C32117 +
                                       C31758 * (ae * C32117 +
                                                 C31758 * C31766 *
                                                     std::pow(C31763, 8) *
                                                     bs[8] * C31764))))) /
        C31510;
    const double C12328 = (4 * (2 * C31981 + C31758 * C31986) +
                           C31758 * (3 * C31986 + C31758 * C32188)) /
                          C31508;
    const double C32167 = C32152 + C32165;
    const double C1881 = C1874 + C1858;
    const double C3623 = C3621 + C3611;
    const double C12875 = C4735 + C4734;
    const double C14535 = C12899 + C12898;
    const double C12874 = C4737 + C4736;
    const double C14534 = C12901 + C12900;
    const double C172 = C160 + C161;
    const double C121 = 5 * (3 * C32237 + C31766 * C32242) +
                        C31766 * (4 * C32242 + C31766 * C32247);
    const double C261 = 3 * C32237 + C31766 * C32242 + C32247 * C31893;
    const double C366 = 3 * C32237 + C31766 * C32242 + C32247 * C31976;
    const double C483 = C31759 * (4 * C32242 + C31766 * C32247);
    const double C603 = C31758 * (4 * C32242 + C31766 * C32247);
    const double C725 = C31758 * C31759 * C32247;
    const double C6407 = 5 * (3 * C32292 + C31759 * C32374) +
                         C31759 * (4 * C32374 + C31759 * C32378);
    const double C6478 = 3 * C32292 + C31759 * C32374 + C32378 * C31976;
    const double C6742 = C31758 * (4 * C32374 + C31759 * C32378);
    const double C12140 = 5 * (3 * C32344 + C31758 * C32428) +
                          C31758 * (4 * C32428 + C31758 * C32450);
    const double C32940 = C32905 / C31508;
    const double C32976 = C32944 / C31544;
    const double C32977 = C32946 + C32913;
    const double C2782 = C32913 - C32596 / C31512;
    const double C32943 = C32909 / C31508;
    const double C31584 = C31580 / C31508;
    const double C15086 = C15053 * C119;
    const double C15082 = C15053 * C131;
    const double C15076 = C15053 * C129;
    const double C15072 = C15053 * C118;
    const double C15068 = C15053 * C127;
    const double C15064 = C15053 * C117;
    const double C15060 = C15053 * C125;
    const double C15056 = C15053 * C116;
    const double C15462 = C15053 * C255;
    const double C15458 = C15053 * C268;
    const double C15454 = C15053 * C254;
    const double C15450 = C15053 * C266;
    const double C15446 = C15053 * C253;
    const double C15442 = C15053 * C264;
    const double C15628 = C15053 * C360;
    const double C15624 = C15053 * C373;
    const double C15620 = C15053 * C359;
    const double C15616 = C15053 * C371;
    const double C15612 = C15053 * C358;
    const double C15608 = C15053 * C369;
    const double C16722 = C15053 * C364;
    const double C16718 = C15053 * C382;
    const double C16712 = C15053 * C380;
    const double C16708 = C15053 * C363;
    const double C17056 = C15053 * C2110;
    const double C17052 = C15053 * C2118;
    const double C17048 = C15053 * C2109;
    const double C17044 = C15053 * C2116;
    const double C17036 = C15053 * C378;
    const double C17032 = C15053 * C362;
    const double C17028 = C15053 * C375;
    const double C17024 = C15053 * C361;
    const double C17284 = C15053 * C722;
    const double C17280 = C15053 * C729;
    const double C17276 = C15053 * C1170;
    const double C17272 = C15053 * C1186;
    const double C17700 = C15053 * C1182;
    const double C17696 = C15053 * C1168;
    const double C17692 = C15053 * C727;
    const double C17688 = C15053 * C721;
    const double C19269 = C15053 * C723;
    const double C19265 = C15053 * C731;
    const double C28240 = C15053 * C2111;
    const double C28236 = C15053 * C2121;
    const double C28640 = C15053 * C2660;
    const double C28636 = C15053 * C2656;
    const double C31595 = C31589 / C31508;
    const double C17878 = C17853 + C17854;
    const double C17875 = C17847 + C17848;
    const double C17872 = C17841 + C17842;
    const double C17869 = C17835 + C17836;
    const double C18291 = C18276 + C18277;
    const double C18288 = C18270 + C18271;
    const double C18282 = C18258 + C18259;
    const double C18473 = C18458 + C18459;
    const double C18470 = C18452 + C18453;
    const double C20144 = C20113 + C20114;
    const double C20141 = C20107 + C20108;
    const double C7783 = C7757 * C1031;
    const double C7775 = C7757 * C1037;
    const double C7773 = C7757 * C1039;
    const double C7765 = C7757 * C1032;
    const double C8141 = C7757 * C1035;
    const double C8133 = C7757 * C1046;
    const double C8295 = C7757 * C1720;
    const double C8287 = C7757 * C1725;
    const double C9805 = C7757 * C6477;
    const double C9797 = C7757 * C6483;
    const double C9795 = C7757 * C1723;
    const double C9787 = C7757 * C1719;
    const double C10233 = C7757 * C6479;
    const double C10225 = C7757 * C6476;
    const double C15904 = C15878 * C1031;
    const double C15896 = C15878 * C1037;
    const double C15894 = C15878 * C1039;
    const double C15886 = C15878 * C1032;
    const double C16262 = C15878 * C1035;
    const double C16254 = C15878 * C1046;
    const double C16416 = C15878 * C1720;
    const double C16408 = C15878 * C1725;
    const double C27500 = C15878 * C6477;
    const double C27492 = C15878 * C6483;
    const double C27490 = C15878 * C1723;
    const double C27482 = C15878 * C1719;
    const double C27928 = C15878 * C6479;
    const double C27920 = C15878 * C6476;
    const double C32998 = C32961 + C32993;
    const double C7749 = C32983 - (C32732 * C32721) / C31508;
    const double C2843 = C2839 + C2840;
    const double C4393 = C4389 + C4390;
    const double C916 = C906 + C907;
    const double C915 = C903 + C904;
    const double C22364 = C1572 + C1573;
    const double C22361 = C1573 + C1572;
    const double C22363 = C1569 + C1570;
    const double C22362 = C1570 + C1569;
    const double C11449 = C11439 + C11440;
    const double C11448 = C11436 + C11437;
    const double C15907 = C32984 * C276;
    const double C15899 = C32984 * C289;
    const double C15893 = C32984 * C288;
    const double C15885 = C32984 * C274;
    const double C16265 = C32984 * C1040;
    const double C16257 = C32984 * C1050;
    const double C16419 = C32984 * C1177;
    const double C16411 = C32984 * C1193;
    const double C27489 = C32984 * C1194;
    const double C27481 = C32984 * C1179;
    const double C6336 = C32984 / C31544 - C32730 / C32947;
    const double C7786 = C7750 * C276;
    const double C7778 = C7750 * C289;
    const double C7772 = C7750 * C288;
    const double C7764 = C7750 * C274;
    const double C8144 = C7750 * C1040;
    const double C8136 = C7750 * C1050;
    const double C8298 = C7750 * C1177;
    const double C8290 = C7750 * C1193;
    const double C9794 = C7750 * C1194;
    const double C9786 = C7750 * C1179;
    const double C32994 = C32963 + C32983;
    const double C5536 = C5526 + C5527;
    const double C5535 = C5523 + C5524;
    const double C9288 = C6124 + C6125;
    const double C9285 = C6125 + C6124;
    const double C9287 = C6121 + C6122;
    const double C9286 = C6122 + C6121;
    const double C7144 = C7134 + C7135;
    const double C7143 = C7131 + C7132;
    const double C31671 = C31667 / C31508;
    const double C20900 = C170 * C20882;
    const double C20893 = C168 * C20882;
    const double C20889 = C166 * C20882;
    const double C20885 = C164 * C20882;
    const double C21244 = C511 * C20882;
    const double C21240 = C509 * C20882;
    const double C21236 = C507 * C20882;
    const double C21386 = C631 * C20882;
    const double C21382 = C629 * C20882;
    const double C21378 = C627 * C20882;
    const double C23433 = C2835 * C20882;
    const double C31682 = C31676 / C31508;
    const double C13625 = C2158 * C13614;
    const double C13622 = C2160 * C13614;
    const double C22678 = C2158 * C22667;
    const double C22675 = C2160 * C22667;
    const double C32999 = C32967 + C32995;
    const double C13608 = C32986 - (C32774 * C32763) / C31508;
    const double C22679 = C1876 * C32987;
    const double C22674 = C1873 * C32987;
    const double C23151 = C2159 * C32987;
    const double C12008 = C32987 / C31544 - C32772 / C32947;
    const double C13626 = C1876 * C13609;
    const double C13621 = C1873 * C13609;
    const double C14104 = C2159 * C13609;
    const double C32996 = C32969 + C32986;
    const double C10378 = C10377 + C10367;
    const double C2842 = C2838 * C32684;
    const double C12152 = C113 * C12141;
    const double C4395 = C4392 * C32771;
    const double C23436 = C4392 * C32771;
    const double C186 = C180 + C181;
    const double C2841 = C2837 * C114;
    const double C3624 = C3622 + C3615;
    const double C4394 = C4391 * C3603;
    const double C23435 = C4391 * C20883;
    const double C2345 = C2337 * C32959;
    const double C10754 = C2337 * C32959;
    const double C13962 = C2337 * C13609;
    const double C23013 = C2337 * C32987;
    const double C24825 = C2337 * C24425;
    const double C12877 = C4731 + C4730;
    const double C13302 = C4730 + C4731;
    const double C2346 = C2338 * C1846;
    const double C10755 = C2338 * C10357;
    const double C24826 = C2338 * C31700;
    const double C12876 = C4733 + C4732;
    const double C13303 = C4732 + C4733;
    const double C7112 = C32956 * C1196;
    const double C7636 = C5472 * C1196;
    const double C9800 = C7750 * C1196;
    const double C11417 = C32956 * C1196;
    const double C11929 = C32979 * C1196;
    const double C13505 = C32729 * C1196;
    const double C17703 = C32729 * C1196;
    const double C20128 = C17823 * C1196;
    const double C27495 = C32984 * C1196;
    const double C31487 = C32732 * C1196;
    const double C7626 = C32956 * C1728;
    const double C9796 = C32966 * C1728;
    const double C10232 = C7750 * C1728;
    const double C11919 = C32956 * C1728;
    const double C20776 = C17823 * C1728;
    const double C27491 = C32966 * C1728;
    const double C27927 = C32984 * C1728;
    const double C7106 = C32956 * C1181;
    const double C7630 = C5472 * C1181;
    const double C9808 = C7750 * C1181;
    const double C11411 = C32956 * C1181;
    const double C11923 = C32979 * C1181;
    const double C13501 = C32729 * C1181;
    const double C17699 = C32729 * C1181;
    const double C20134 = C17823 * C1181;
    const double C27503 = C32984 * C1181;
    const double C31481 = C32732 * C1181;
    const double C7620 = C32956 * C1722;
    const double C9788 = C32966 * C1722;
    const double C10224 = C7750 * C1722;
    const double C11913 = C32956 * C1722;
    const double C20770 = C17823 * C1722;
    const double C27483 = C32966 * C1722;
    const double C27919 = C32984 * C1722;
    const double C1379 = C1358 + C1359;
    const double C5935 = C5914 + C5915;
    const double C18285 = C18264 + C18265;
    const double C1565 = C1544 + C1545;
    const double C4950 = C4936 + C4937;
    const double C6117 = C6096 + C6097;
    const double C18467 = C18446 + C18447;
    const double C19273 = C19267 + C19268;
    const double C2334 = C2315 + C2316;
    const double C4728 = C4702 + C4703;
    const double C16730 = C16720 + C16721;
    const double C2499 = C2157 * C32959;
    const double C10906 = C2157 * C32959;
    const double C13624 = C2157 * C32972;
    const double C22677 = C2157 * C32972;
    const double C24977 = C2157 * C24425;
    const double C173 = C162 + C163;
    const double C505 = C490 + C491;
    const double C2833 = C2815 + C2816;
    const double C15102 = C15084 + C15085;
    const double C912 = C891 + C892;
    const double C3197 = C3175 + C3176;
    const double C5532 = C5511 + C5512;
    const double C15466 = C15444 + C15445;
    const double C17882 = C17861 + C17862;
    const double C625 = C610 + C611;
    const double C1878 = C1866 + C1867;
    const double C3363 = C3341 + C3342;
    const double C3968 = C3955 + C3956;
    const double C15632 = C15610 + C15611;
    const double C1198 =
        (C31887 + ae * C31898 + C31759 * C31902 + ae * C31758 * C31944 +
         C31758 *
             (ae * C31944 +
              C31758 * (C31786 + ae * C31759 * C31827 +
                        C31759 * (ae * C31827 + C31759 * C31766 * C31791)))) /
        C31510;
    const double C1729 =
        (ae * (2 * C31934 + C31759 * C31944 + (C31915 + C31937 * C31893) * ae) +
         C31758 *
             (2 * C31902 + ae * C31903 +
              C31759 * (C31786 + ae * C31759 * C31827 +
                        C31759 * (ae * C31827 + C31759 * C31766 * C31791)))) /
        C31510;
    const double C6659 =
        (ae * (3 * C31944 +
               C31759 * (2 * C31940 +
                         C31759 * (C31866 +
                                   C31759 * (C31759 * C31766 * C31869 +
                                             C32096 * ae) +
                                   C31759 * C32096 * ae) +
                         C32098 * ae) +
               (2 * C31939 + C31759 * C32098) * ae) +
         C31758 * (3 * C32093 + ae * C32094 +
                   C31759 * (2 * C32089 + ae * C32090 +
                             C31759 * (C32082 + ae * C31759 * C32083 +
                                       C31759 * (ae * C32083 +
                                                 C31759 * C31766 *
                                                     std::pow(C31763, 8) *
                                                     bs[8] * C31764))))) /
        C31510;
    const double C1045 =
        (3 * (C31851 + C31759 * C31934 + C32295 * ae) +
         C31759 * (2 * C31934 + C31759 * C31944 + C32297 * ae) +
         (2 * C32295 + C31759 * C32297) * ae) /
        C31508;
    const double C1185 =
        (C31851 + C31759 * C31934 + C32295 * ae + C31944 * C31976) / C31508;
    const double C1724 =
        (C31758 * (2 * C31934 + C31759 * C31944 + C32297 * ae)) / C31508;
    const double C13970 = C13968 * C32972;
    const double C23011 = C13968 * C32972;
    const double C13971 = C13969 * C13614;
    const double C23012 = C13969 * C22667;
    const double C12329 =
        (4 * (2 * C32350 + C31758 * C32473 + C32351 * ae) +
         C31758 *
             (3 * C32473 +
              C31758 * (2 * C32465 +
                        C31758 * (C31827 + C31758 * (C31758 * C32083 + C32118) +
                                  C31758 * C32096 * ae) +
                        C32467 * ae) +
              C32472 * ae) +
         (3 * C32351 + C31758 * C32472) * ae) /
        C31508;
    const double C14102 = C12337 * C32972;
    const double C23149 = C12337 * C32972;
    const double C14103 = C12336 * C13614;
    const double C23150 = C12336 * C22667;
    const double C12421 =
        (4 * (2 * C32403 + C31758 * C32487 + C32404 * ae) +
         C31758 *
             (3 * C32487 +
              C31758 * (2 * C32479 +
                        C31758 * (C32019 +
                                  C31758 * (C31758 * C31759 * C31830 + C32064) +
                                  C31758 * C32060 * ae) +
                        C32481 * ae) +
              C32486 * ae) +
         (3 * C32404 + C31758 * C32486) * ae) /
        C31508;
    const double C32053 = C32042 + C32052;
    const double C32113 = C32110 + C32111;
    const double C7114 = C32956 * C7085;
    const double C11419 = C32956 * C7085;
    const double C14945 = C32729 * C7085;
    const double C28643 = C32729 * C7085;
    const double C31021 = C17823 * C7085;
    const double C7120 = C32956 * C7080;
    const double C11425 = C32956 * C7080;
    const double C14941 = C32729 * C7080;
    const double C28639 = C32729 * C7080;
    const double C31027 = C17823 * C7080;
    const double C12435 = C12430 + C12431;
    const double C14544 = C14536 + C14537;
    const double C28242 = C28234 + C28235;
    const double C12434 = C12428 + C12429;
    const double C14546 = C14540 + C14541;
    const double C28244 = C28238 + C28239;
    const double C32451 = C32433 + C32449;
    const double C12159 = C12154 + C12155;
    const double C504 = C488 + C489;
    const double C2831 = C2811 + C2812;
    const double C15100 = C15080 + C15081;
    const double C909 = C885 + C886;
    const double C3195 = C3171 + C3172;
    const double C5529 = C5505 + C5506;
    const double C15464 = C15440 + C15441;
    const double C17879 = C17855 + C17856;
    const double C624 = C608 + C609;
    const double C1877 = C1864 + C1865;
    const double C3361 = C3337 + C3338;
    const double C3967 = C3953 + C3954;
    const double C15630 = C15606 + C15607;
    const double C1562 = C1538 + C1539;
    const double C4948 = C4932 + C4933;
    const double C6114 = C6090 + C6091;
    const double C18464 = C18440 + C18441;
    const double C19271 = C19263 + C19264;
    const double C2333 = C2313 + C2314;
    const double C4726 = C4698 + C4699;
    const double C16728 = C16716 + C16717;
    const double C6485 =
        (ae * (3 * C31930 +
               C31759 * (2 * C31926 +
                         C31759 * (C31840 +
                                   C31759 * (C31759 * C31859 + C31884 * ae) +
                                   C31759 * C31884 * ae) +
                         C32040 * ae) +
               (2 * C31925 + C31759 * C32040) * ae) +
         C31758 * (3 * C32014 + ae * C32015 + C31759 * C32036)) /
        C31510;
    const double C291 =
        (3 * C31784 + C31766 * C31795 + ae * C31759 * C31836 +
         C31759 * (ae * C31836 +
                   C31759 * (3 * C31793 +
                             C31766 * (2 * C31766 * C31791 +
                                       C31766 * (C31791 + std::pow(C31763, 8) *
                                                              bs[8] * C31764 *
                                                              C31774))))) /
        C31510;
    const double C486 =
        (ae * (4 * C31824 + C31766 * C31836) +
         C31759 * (4 * C31795 +
                   C31766 * (3 * C31793 +
                             C31766 * (2 * C31766 * C31791 +
                                       C31766 * (C31791 + std::pow(C31763, 8) *
                                                              bs[8] * C31764 *
                                                              C31774))))) /
        C31510;
    const double C135 = (5 * (3 * C31815 + C31766 * C31824) +
                         C31766 * (4 * C31824 + C31766 * C31836)) /
                        C31508;
    const double C281 =
        (3 * C31815 + C31766 * C31824 + C31836 * C31893) / C31508;
    const double C386 =
        (3 * C31815 + C31766 * C31824 +
         C31758 * (C31758 * C31836 + C32247 * ae) + C31758 * C32247 * ae) /
        C31508;
    const double C485 = (C31759 * (4 * C31824 + C31766 * C31836)) / C31508;
    const double C605 = (C31758 * (4 * C31824 + C31766 * C31836) +
                         (4 * C32242 + C31766 * C32247) * ae) /
                        C31508;
    const double C735 =
        (C31758 * C31759 * C31836 + C31759 * C32247 * ae) / C31508;
    const double C6413 =
        (5 * (3 * C32014 + ae * C32015 + C31759 * C32036) +
         ae * (4 * C32015 + C31759 * C32037) +
         C31759 *
             (4 * C32036 + ae * C32037 +
              C31759 *
                  (3 * C32032 + ae * C32033 +
                   C31759 * (2 * C32026 + ae * C32028 +
                             C31759 * (C31791 + ae * C31759 * C31830 +
                                       C31759 * (ae * C31830 +
                                                 C31759 * std::pow(C31763, 8) *
                                                     bs[8] * C31764)))))) /
        C31510;
    const double C6411 = (5 * (3 * C31896 + C31759 * C32015) +
                          C31759 * (4 * C32015 + C31759 * C32037)) /
                         C31508;
    const double C6484 =
        (3 * C31896 + C31759 * C32015 +
         C31758 * (C31758 * C32037 + C32378 * ae) + C31758 * C32378 * ae) /
        C31508;
    const double C6744 = (C31758 * (4 * C32015 + C31759 * C32037) +
                          (4 * C32374 + C31759 * C32378) * ae) /
                         C31508;
    const double C396 =
        (3 * C31784 + C31766 * C31795 + ae * C31758 * C31875 +
         C31758 * (ae * C31875 +
                   C31758 * (3 * C31793 +
                             C31766 * (2 * C31766 * C31791 +
                                       C31766 * (C31791 + std::pow(C31763, 8) *
                                                              bs[8] * C31764 *
                                                              C31774))))) /
        C31510;
    const double C606 =
        (ae * (4 * C31863 + C31766 * C31875) +
         C31758 * (4 * C31795 +
                   C31766 * (3 * C31793 +
                             C31766 * (2 * C31766 * C31791 +
                                       C31766 * (C31791 + std::pow(C31763, 8) *
                                                              bs[8] * C31764 *
                                                              C31774))))) /
        C31510;
    const double C740 =
        (ae * (C31759 * C31875 +
               (3 * (C31882 + C31884 * C31774) +
                C31766 * (2 * C31766 * C31884 +
                          C31766 * (C31884 + C31780 * C31779 * C31774))) *
                   ae) +
         C31758 * (ae * C31836 +
                   C31759 * (3 * C31793 +
                             C31766 * (2 * C31766 * C31791 +
                                       C31766 * (C31791 + std::pow(C31763, 8) *
                                                              bs[8] * C31764 *
                                                              C31774))))) /
        C31510;
    const double C134 = (5 * (3 * C31854 + C31766 * C31863) +
                         C31766 * (4 * C31863 + C31766 * C31875)) /
                        C31508;
    const double C280 =
        (3 * C31854 + C31766 * C31863 +
         C31759 * (C31759 * C31875 + C32247 * ae) + C31759 * C32247 * ae) /
        C31508;
    const double C385 =
        (3 * C31854 + C31766 * C31863 + C31875 * C31976) / C31508;
    const double C484 = (C31759 * (4 * C31863 + C31766 * C31875) +
                         (4 * C32242 + C31766 * C32247) * ae) /
                        C31508;
    const double C604 = (C31758 * (4 * C31863 + C31766 * C31875)) / C31508;
    const double C734 = (C31758 * (C31759 * C31875 + C32247 * ae)) / C31508;
    const double C2311 =
        (ae * C31824 + C31759 * C31795 + ae * C31758 * C31997 +
         C31758 * (ae * C31997 +
                   C31758 * (ae * C31834 +
                             C31759 * (2 * C31766 * C31791 +
                                       C31766 * (C31791 + std::pow(C31763, 8) *
                                                              bs[8] * C31764 *
                                                              C31774))))) /
        C31510;
    const double C1348 =
        (2 * (C31759 * C31863 + C32242 * ae) +
         C31759 * (C31863 + C31759 * C31997 + C31759 * C31965 * ae) +
         (C32242 + C31965 * C31893) * ae) /
        C31508;
    const double C1534 =
        (C31758 * (C31863 + C31759 * C31997 + C31759 * C31965 * ae)) / C31508;
    const double C2309 =
        (C31759 * C31863 + C32242 * ae + C31997 * C31976) / C31508;
    const double C31960 = C31959 + C31957;
    const double C32074 = C32057 + C32073;
    const double C32114 = C32051 + C32112;
    const double C12422 =
        (4 * (2 * C32106 + ae * C32107 + C31758 * C32201) +
         ae * (3 * C32107 + C31758 * C32202) +
         C31758 *
             (3 * C32201 + ae * C32202 +
              C31758 *
                  (2 * C32195 + ae * C32197 +
                   C31758 * (C32026 + ae * C31758 * C32063 +
                             C31758 * (ae * C32063 +
                                       C31758 * (ae * C31830 +
                                                 C31759 * std::pow(C31763, 8) *
                                                     bs[8] * C31764)))))) /
        C31510;
    const double C12420 = (4 * (2 * C32102 + C31758 * C32107) +
                           C31758 * (3 * C32107 + C31758 * C32202)) /
                          C31508;
    const double C32127 = C31759 * C32126;
    const double C7445 =
        (2 * (ae * C31944 + C31758 * C32093) + ae * (C31944 + C32126 * C31976) +
         C31758 * (C32093 + ae * C31758 * C32126 +
                   C31758 * (ae * C32126 +
                             C31758 * (C32082 + ae * C31759 * C32083 +
                                       C31759 * (ae * C32083 +
                                                 C31759 * C31766 *
                                                     std::pow(C31763, 8) *
                                                     bs[8] * C31764))))) /
        C31510;
    const double C7443 =
        (2 * C31758 * C31944 + C31758 * (C31944 + C32126 * C31976)) / C31508;
    const double C12146 =
        (5 * (3 * C32144 + ae * C32145 + C31758 * C32166) +
         ae * (4 * C32145 + C31758 * C32167) +
         C31758 *
             (4 * C32166 + ae * C32167 +
              C31758 *
                  (3 * C32162 + ae * C32163 +
                   C31758 * (2 * C32156 + ae * C32158 +
                             C31758 * (C31791 + ae * C31758 * C31869 +
                                       C31758 * (ae * C31869 +
                                                 C31758 * std::pow(C31763, 8) *
                                                     bs[8] * C31764)))))) /
        C31510;
    const double C12143 = (5 * (3 * C31979 + C31758 * C32145) +
                           C31758 * (4 * C32145 + C31758 * C32167)) /
                          C31508;
    const double C1886 = C1881 + C1859;
    const double C3625 = C3623 + C3612;
    const double C182 = C172 * C32684;
    const double C32997 = C32940 + C32989;
    const double C2781 = C32976 - (C32598 * C32581) / C31508;
    const double C106 = C32977 / C31544 - C32596 / C32947;
    const double C32990 = C32943 + C32976;
    const double C31588 = C31584 - C31565;
    const double C15103 = C15086 + C15087;
    const double C15101 = C15082 + C15083;
    const double C15098 = C15076 + C15077;
    const double C15096 = C15072 + C15073;
    const double C15094 = C15068 + C15069;
    const double C15092 = C15064 + C15065;
    const double C15090 = C15060 + C15061;
    const double C15088 = C15056 + C15057;
    const double C15475 = C15462 + C15463;
    const double C15473 = C15458 + C15459;
    const double C15471 = C15454 + C15455;
    const double C15469 = C15450 + C15451;
    const double C15467 = C15446 + C15447;
    const double C15465 = C15442 + C15443;
    const double C15641 = C15628 + C15629;
    const double C15639 = C15624 + C15625;
    const double C15637 = C15620 + C15621;
    const double C15635 = C15616 + C15617;
    const double C15633 = C15612 + C15613;
    const double C15631 = C15608 + C15609;
    const double C16731 = C16722 + C16723;
    const double C16729 = C16718 + C16719;
    const double C16726 = C16712 + C16713;
    const double C16724 = C16708 + C16709;
    const double C17073 = C17056 + C17057;
    const double C17071 = C17052 + C17053;
    const double C17069 = C17048 + C17049;
    const double C17067 = C17044 + C17045;
    const double C17064 = C17036 + C17037;
    const double C17062 = C17032 + C17033;
    const double C17060 = C17028 + C17029;
    const double C17058 = C17024 + C17025;
    const double C17293 = C17284 + C17285;
    const double C17291 = C17280 + C17281;
    const double C17289 = C17276 + C17277;
    const double C17287 = C17272 + C17273;
    const double C17710 = C17700 + C17701;
    const double C17708 = C17696 + C17697;
    const double C17706 = C17692 + C17693;
    const double C17704 = C17688 + C17689;
    const double C19274 = C19269 + C19270;
    const double C19272 = C19265 + C19266;
    const double C28245 = C28240 + C28241;
    const double C28243 = C28236 + C28237;
    const double C28646 = C28640 + C28641;
    const double C28644 = C28636 + C28637;
    const double C7803 = C7783 + C7784;
    const double C7799 = C7775 + C7776;
    const double C7798 = C7773 + C7774;
    const double C7794 = C7765 + C7766;
    const double C8149 = C8133 + C8134;
    const double C15924 = C15904 + C15905;
    const double C15920 = C15896 + C15897;
    const double C15919 = C15894 + C15895;
    const double C15915 = C15886 + C15887;
    const double C16270 = C16254 + C16255;
    const double C15911 = C32998 * C126;
    const double C15903 = C32998 * C138;
    const double C15889 = C32998 * C137;
    const double C15881 = C32998 * C124;
    const double C16269 = C32998 * C269;
    const double C16261 = C32998 * C285;
    const double C16423 = C32998 * C374;
    const double C16415 = C32998 * C390;
    const double C27507 = C32998 * C377;
    const double C27499 = C32998 * C392;
    const double C27485 = C32998 * C391;
    const double C27477 = C32998 * C376;
    const double C27923 = C32998 * C736;
    const double C27915 = C32998 * C726;
    const double C6333 =
        (C32991 + 2 * C32725) / C31544 - (C32998 * C32721) / C31508;
    const double C7788 = C7749 * C267;
    const double C7780 = C7749 * C284;
    const double C7770 = C7749 * C285;
    const double C7762 = C7749 * C269;
    const double C8146 = C7749 * C274;
    const double C8138 = C7749 * C288;
    const double C8300 = C7749 * C728;
    const double C8292 = C7749 * C737;
    const double C9810 = C7749 * C1180;
    const double C9802 = C7749 * C1195;
    const double C9792 = C7749 * C736;
    const double C9784 = C7749 * C726;
    const double C10230 = C7749 * C1194;
    const double C10222 = C7749 * C1179;
    const double C918 = C916 + C908;
    const double C917 = C915 + C905;
    const double C22368 = C1571 + C22364;
    const double C22365 = C22361 + C1571;
    const double C22367 = C1568 + C22363;
    const double C22366 = C22362 + C1568;
    const double C15909 = C32994 * C267;
    const double C15901 = C32994 * C284;
    const double C15891 = C32994 * C285;
    const double C15883 = C32994 * C269;
    const double C16267 = C32994 * C274;
    const double C16259 = C32994 * C288;
    const double C16421 = C32994 * C728;
    const double C16413 = C32994 * C737;
    const double C27505 = C32994 * C1180;
    const double C27497 = C32994 * C1195;
    const double C27487 = C32994 * C736;
    const double C27479 = C32994 * C726;
    const double C27925 = C32994 * C1194;
    const double C27917 = C32994 * C1179;
    const double C6334 =
        (C32979 + 2 * C32732 + C32998) / C31544 - (C32994 * C32721) / C31508;
    const double C6335 = (C32956 + C32729 / C31508 + C32994) / C31544 -
                         (C32984 * C32721) / C31508;
    const double C5538 = C5536 + C5528;
    const double C5537 = C5535 + C5525;
    const double C9292 = C6123 + C9288;
    const double C9289 = C9285 + C6123;
    const double C9291 = C6120 + C9287;
    const double C9290 = C9286 + C6120;
    const double C31675 = C31671 - C31652;
    const double C20902 = C20893 + C20894;
    const double C20901 = C20889 + C20890;
    const double C23437 = C23433 + C23434;
    const double C22683 = C167 * C32999;
    const double C22670 = C165 * C32999;
    const double C23017 = C510 * C32999;
    const double C23155 = C630 * C32999;
    const double C12005 =
        (C32992 + 2 * C32767) / C31544 - (C32999 * C32763) / C31508;
    const double C13628 = C628 * C13608;
    const double C13619 = C630 * C13608;
    const double C13964 = C2339 * C13608;
    const double C14106 = C1873 * C13608;
    const double C22681 = C628 * C32996;
    const double C22672 = C630 * C32996;
    const double C23015 = C2339 * C32996;
    const double C23153 = C1873 * C32996;
    const double C12006 =
        (C32981 + 2 * C32774 + C32999) / C31544 - (C32996 * C32763) / C31508;
    const double C12007 = (C32959 + C32771 / C31508 + C32996) / C31544 -
                          (C32987 * C32763) / C31508;
    const double C10379 = C10378 + C10368;
    const double C12158 = C12152 + C12153;
    const double C2844 = C2841 + C2842;
    const double C3626 = C3624 + C3616;
    const double C4396 = C4393 + C4394;
    const double C7136 = C7111 + C7112;
    const double C7649 = C7635 + C7636;
    const double C11441 = C11416 + C11417;
    const double C11942 = C11928 + C11929;
    const double C13509 = C13504 + C13505;
    const double C17711 = C17702 + C17703;
    const double C20151 = C20127 + C20128;
    const double C7644 = C7625 + C7626;
    const double C9820 = C9795 + C9796;
    const double C11937 = C11918 + C11919;
    const double C20782 = C20775 + C20776;
    const double C27515 = C27490 + C27491;
    const double C7133 = C7105 + C7106;
    const double C7646 = C7629 + C7630;
    const double C11438 = C11410 + C11411;
    const double C11939 = C11922 + C11923;
    const double C13507 = C13500 + C13501;
    const double C17709 = C17698 + C17699;
    const double C20154 = C20133 + C20134;
    const double C7641 = C7619 + C7620;
    const double C9816 = C9787 + C9788;
    const double C11934 = C11912 + C11913;
    const double C20779 = C20769 + C20770;
    const double C27511 = C27482 + C27483;
    const double C2342 = C2334 * C1846;
    const double C10749 = C2334 * C10357;
    const double C24820 = C2334 * C31700;
    const double C183 = C173 * C114;
    const double C513 = C505 * C114;
    const double C633 = C625 * C114;
    const double C3618 = C625 * C3603;
    const double C20898 = C625 * C20883;
    const double C1885 = C1878 * C1846;
    const double C4102 = C1878 * C3603;
    const double C10372 = C1878 * C10357;
    const double C21376 = C1878 * C20883;
    const double C24443 = C1878 * C31700;
    const double C3970 = C3968 * C3603;
    const double C21234 = C3968 * C20883;
    const double C7458 = C32956 * C1198;
    const double C11755 = C32956 * C1198;
    const double C13097 = C32729 * C1198;
    const double C17271 = C32729 * C1198;
    const double C20116 = C17823 * C1198;
    const double C8288 = C32966 * C1729;
    const double C9074 = C32956 * C1729;
    const double C16409 = C32966 * C1729;
    const double C20352 = C17823 * C1729;
    const double C22150 = C32956 * C1729;
    const double C8142 = C32966 * C1045;
    const double C16263 = C32966 * C1045;
    const double C7452 = C32956 * C1185;
    const double C11749 = C32956 * C1185;
    const double C13101 = C32729 * C1185;
    const double C17275 = C32729 * C1185;
    const double C20122 = C17823 * C1185;
    const double C8296 = C32966 * C1724;
    const double C9080 = C32956 * C1724;
    const double C16417 = C32966 * C1724;
    const double C20358 = C17823 * C1724;
    const double C22156 = C32956 * C1724;
    const double C32054 = C32053 + C32046;
    const double C7137 = C7113 + C7114;
    const double C11442 = C11418 + C11419;
    const double C14949 = C14944 + C14945;
    const double C28647 = C28642 + C28643;
    const double C31034 = C31020 + C31021;
    const double C7140 = C7119 + C7120;
    const double C11445 = C11424 + C11425;
    const double C14947 = C14940 + C14941;
    const double C28645 = C28638 + C28639;
    const double C31037 = C31026 + C31027;
    const double C32452 = C32451 + C32436;
    const double C512 = C504 * C32684;
    const double C632 = C624 * C32684;
    const double C3617 = C624 * C32771;
    const double C20897 = C624 * C32771;
    const double C1884 = C1877 * C32959;
    const double C4101 = C1877 * C32771;
    const double C10371 = C1877 * C32959;
    const double C21375 = C1877 * C32771;
    const double C24442 = C1877 * C24425;
    const double C3969 = C3967 * C32771;
    const double C21233 = C3967 * C32771;
    const double C2341 = C2333 * C32959;
    const double C10748 = C2333 * C32959;
    const double C24819 = C2333 * C24425;
    const double C10234 = C32966 * C6485;
    const double C27929 = C32966 * C6485;
    const double C1200 =
        (C31784 + ae * C31905 + C31759 * C31909 + ae * C31758 * C31960 +
         C31758 * (ae * C31960 +
                   C31758 * (C31793 + ae * C31759 * C31832 +
                             C31759 * (ae * C31832 +
                                       C31759 * (C31791 + std::pow(C31763, 8) *
                                                              bs[8] * C31764 *
                                                              C31774))))) /
        C31510;
    const double C1730 =
        (ae * (2 * C31948 + C31759 * C31960 + (C31913 + C31953 * C31893) * ae) +
         C31758 * (2 * C31909 + ae * C31910 +
                   C31759 * (C31793 + ae * C31759 * C31832 +
                             C31759 * (ae * C31832 +
                                       C31759 * (C31791 + std::pow(C31763, 8) *
                                                              bs[8] * C31764 *
                                                              C31774))))) /
        C31510;
    const double C1047 =
        (3 * (C31854 + C31759 * C31948 + C32300 * ae) +
         C31759 * (2 * C31948 + C31759 * C31960 + C32302 * ae) +
         (2 * C32300 + C31759 * C32302) * ae) /
        C31508;
    const double C1189 =
        (C31854 + C31759 * C31948 + C32300 * ae + C31960 * C31976) / C31508;
    const double C1726 =
        (C31758 * (2 * C31948 + C31759 * C31960 + C32302 * ae)) / C31508;
    const double C32075 = C32074 + C32067;
    const double C7087 =
        (3 * (C32014 + ae * C32109 + C31758 * C32113) +
         ae * (2 * C32109 + C31758 * C32114) +
         C31758 *
             (2 * C32113 + ae * C32114 +
              C31758 *
                  (C32032 + ae * C31758 * C32071 +
                   C31758 * (ae * C32071 +
                             C31758 * (C31791 + ae * C31759 * C31830 +
                                       C31759 * (ae * C31830 +
                                                 C31759 * std::pow(C31763, 8) *
                                                     bs[8] * C31764)))))) /
        C31510;
    const double C7082 = (3 * (C31930 + C32051 * C31976) +
                          C31758 * (2 * C32109 + C31758 * C32114)) /
                         C31508;
    const double C32128 = C32116 + C32127;
    const double C1887 = C1886 + C1882;
    const double C103 =
        (C32988 + 2 * C32590) / C31544 - (C32997 * C32581) / C31508;
    const double C104 =
        (C32975 + 2 * C32598 + C32997) / C31544 - (C32990 * C32581) / C31508;
    const double C105 = (C32945 + C32595 / C31508 + C32990) / C31544 -
                        (C32977 * C32581) / C31508;
    const double C31594 = C31588 / C31544;
    const double C31593 = C31506 * C31588;
    const double C15107 = C15098 + C15099;
    const double C15106 = C15096 + C15097;
    const double C15105 = C15094 + C15095;
    const double C15104 = C15092 + C15093;
    const double C17493 = C15640 + C15641;
    const double C17488 = C15641 + C15640;
    const double C17492 = C15638 + C15639;
    const double C17489 = C15639 + C15638;
    const double C18770 = C15637 + C15636;
    const double C19470 = C15636 + C15637;
    const double C18771 = C15635 + C15634;
    const double C19469 = C15634 + C15635;
    const double C17041 = C16726 + C16727;
    const double C17490 = C16727 + C16726;
    const double C17040 = C16724 + C16725;
    const double C17491 = C16725 + C16724;
    const double C28232 = C17073 + C17072;
    const double C28233 = C17071 + C17070;
    const double C17075 = C17064 + C17065;
    const double C17074 = C17062 + C17063;
    const double C920 = C918 * C32684;
    const double C919 = C917 * C114;
    const double C5540 = C5538 * C32684;
    const double C5539 = C5537 * C114;
    const double C31681 = C31675 / C31544;
    const double C31680 = C31525 * C31675;
    const double C20904 = C20902 + C20895;
    const double C20903 = C20901 + C20891;
    const double C23438 = C23437 + C23435;
    const double C10380 = C10379 + C10369;
    const double C4397 = C4396 + C4395;
    const double C7146 = C7144 + C7136;
    const double C11451 = C11449 + C11441;
    const double C7145 = C7143 + C7133;
    const double C11450 = C11448 + C11438;
    const double C7464 = C7457 + C7458;
    const double C11761 = C11754 + C11755;
    const double C13104 = C13096 + C13097;
    const double C17286 = C17270 + C17271;
    const double C20145 = C20115 + C20116;
    const double C8303 = C8287 + C8288;
    const double C9085 = C9073 + C9074;
    const double C16424 = C16408 + C16409;
    const double C20363 = C20351 + C20352;
    const double C22161 = C22149 + C22150;
    const double C8153 = C8141 + C8142;
    const double C16274 = C16262 + C16263;
    const double C7461 = C7451 + C7452;
    const double C11758 = C11748 + C11749;
    const double C13106 = C13100 + C13101;
    const double C17288 = C17274 + C17275;
    const double C20148 = C20121 + C20122;
    const double C8307 = C8295 + C8296;
    const double C9088 = C9079 + C9080;
    const double C16428 = C16416 + C16417;
    const double C20366 = C20357 + C20358;
    const double C22164 = C22155 + C22156;
    const double C6486 =
        (2 * C31894 + ae * C31896 + C31759 * C32014 + ae * C31758 * C32054 +
         C31758 * (ae * C32054 + C31758 * C32036)) /
        C31510;
    const double C6409 =
        (4 * (2 * C31921 + C31759 * C31930 + C32292 * ae) +
         C31759 * (3 * C31930 + C31759 * C32054 + C32374 * ae) +
         (3 * C32292 + C31759 * C32374) * ae) /
        C31508;
    const double C6480 =
        (C31758 * (3 * C31930 + C31759 * C32054 + C32374 * ae)) / C31508;
    const double C6481 =
        (2 * C31921 + C31759 * C31930 + C32292 * ae + C32054 * C31976) / C31508;
    const double C12144 =
        (5 * (3 * C32429 + C31758 * C32452 + C32428 * ae) +
         C31758 *
             (4 * C32452 +
              C31758 *
                  (3 * C32447 +
                   C31758 *
                       (2 * C32439 +
                        C31758 * (C31820 + C31758 * (C31758 * C31830 + C32059) +
                                  C31758 * C31951 * ae) +
                        C32441 * ae) +
                   C32446 * ae) +
              C32450 * ae) +
         (4 * C32428 + C31758 * C32450) * ae) /
        C31508;
    const double C10242 = C10233 + C10234;
    const double C27937 = C27928 + C27929;
    const double C32076 = C31759 * C32075;
    const double C7613 =
        (2 * (ae * C32054 + C31758 * C32036) + ae * (C32054 + C32075 * C31976) +
         C31758 *
             (C32036 + ae * C31758 * C32075 +
              C31758 *
                  (ae * C32075 +
                   C31758 * (2 * C32026 + ae * C32028 +
                             C31759 * (C31791 + ae * C31759 * C31830 +
                                       C31759 * (ae * C31830 +
                                                 C31759 * std::pow(C31763, 8) *
                                                     bs[8] * C31764)))))) /
        C31510;
    const double C7611 =
        (2 * C31758 * C32054 + C31758 * (C32054 + C32075 * C31976)) / C31508;
    const double C32129 = C32128 + C32120;
    const double C1888 = C1887 + C1883;
    const double C31599 = C31594 - C31595;
    const double C31598 = C31593 + C32925;
    const double C15111 = C15107 * C32684;
    const double C15110 = C15106 * C114;
    const double C15109 = C15105 * C32684;
    const double C18769 = C15105 * C32926;
    const double C26302 = C15105 * C20880;
    const double C15108 = C15104 * C114;
    const double C18768 = C15104 * C3602;
    const double C26301 = C15104 * C20882;
    const double C18773 = C18770 * C3603;
    const double C26303 = C18770 * C20883;
    const double C18774 = C18771 * C32771;
    const double C26304 = C18771 * C32771;
    const double C921 = C919 + C920;
    const double C5541 = C5539 + C5540;
    const double C31686 = C31681 - C31682;
    const double C31685 = C31680 + C32926;
    const double C20906 = C20904 + C20896;
    const double C20905 = C20903 + C20892;
    const double C23439 = C23438 + C23436;
    const double C10381 = C10380 + C10370;
    const double C7638 = C32956 * C6486;
    const double C9798 = C32966 * C6486;
    const double C11931 = C32956 * C6486;
    const double C27493 = C32966 * C6486;
    const double C31489 = C17823 * C6486;
    const double C10226 = C32966 * C6480;
    const double C27921 = C32966 * C6480;
    const double C7632 = C32956 * C6481;
    const double C9806 = C32966 * C6481;
    const double C11925 = C32956 * C6481;
    const double C27501 = C32966 * C6481;
    const double C31483 = C17823 * C6481;
    const double C32077 = C32056 + C32076;
    const double C7295 =
        (2 * C31902 + ae * C31903 + C31759 * C32093 + ae * C31758 * C32129 +
         C31758 * (ae * C32129 +
                   C31758 * (2 * C32089 + ae * C32090 +
                             C31759 * (C32082 + ae * C31759 * C32083 +
                                       C31759 * (ae * C32083 +
                                                 C31759 * C31766 *
                                                     std::pow(C31763, 8) *
                                                     bs[8] * C31764))))) /
        C31510;
    const double C6571 =
        (4 * (2 * C31934 + C31759 * C31944 + C32297 * ae) +
         C31759 * (3 * C31944 + C31759 * C32129 + C32389 * ae) +
         (3 * C32297 + C31759 * C32389) * ae) /
        C31508;
    const double C6657 =
        (C31758 * (3 * C31944 + C31759 * C32129 + C32389 * ae)) / C31508;
    const double C7293 =
        (2 * C31934 + C31759 * C31944 + C32297 * ae + C32129 * C31976) / C31508;
    const double C17863 = C31599 * C253;
    const double C17857 = C31599 * C264;
    const double C17851 = C31599 * C266;
    const double C17845 = C31599 * C254;
    const double C17839 = C31599 * C268;
    const double C17833 = C31599 * C255;
    const double C18278 = C31599 * C258;
    const double C18272 = C31599 * C275;
    const double C18266 = C31599 * C259;
    const double C18260 = C31599 * C277;
    const double C18460 = C31599 * C722;
    const double C18454 = C31599 * C729;
    const double C18448 = C31599 * C723;
    const double C18442 = C31599 * C731;
    const double C20135 = C31599 * C1168;
    const double C20129 = C31599 * C1182;
    const double C20123 = C31599 * C1170;
    const double C20117 = C31599 * C1186;
    const double C20111 = C31599 * C727;
    const double C20105 = C31599 * C721;
    const double C20359 = C31599 * C1166;
    const double C20353 = C31599 * C1176;
    const double C20773 = C31599 * C1178;
    const double C20767 = C31599 * C1167;
    const double C31028 = C31599 * C2656;
    const double C31022 = C31599 * C2660;
    const double C31486 = C31599 * C1183;
    const double C31480 = C31599 * C1169;
    const double C6342 =
        (C31599 / C31544 + ((C31506 * C31613 + C17823) * ae) / C31508) /
            C31544 -
        ((C31506 * (C31613 / C31544 + (0 * ae) / C31508) + C32966) * be) /
            C31508;
    const double C7756 =
        C31599 / C31544 - ((C31506 * C31613 + C17823) * be) / C31508;
    const double C15877 =
        C31599 / C31544 + ((C31506 * C31613 + C17823) * ae) / C31508;
    const double C31602 = C31598 * be;
    const double C15113 = C15110 + C15111;
    const double C15112 = C15108 + C15109;
    const double C18772 = C18768 + C18769;
    const double C26305 = C26301 + C26302;
    const double C24445 = C627 * C31686;
    const double C24438 = C629 * C31686;
    const double C24432 = C631 * C31686;
    const double C24828 = C2340 * C31686;
    const double C24822 = C2336 * C31686;
    const double C24986 = C1872 * C31686;
    const double C24980 = C1875 * C31686;
    const double C12013 =
        (C31686 / C31544 + ((C31525 * C31700 + C24425) * ae) / C31508) /
            C31544 -
        ((C31525 * (C31700 / C31544 + (0 * ae) / C31508) + C32972) * be) /
            C31508;
    const double C13613 =
        C31686 / C31544 - ((C31525 * C31700 + C24425) * be) / C31508;
    const double C22666 =
        C31686 / C31544 + ((C31525 * C31700 + C24425) * ae) / C31508;
    const double C31689 = C31685 * be;
    const double C7650 = C7637 + C7638;
    const double C9821 = C9797 + C9798;
    const double C11943 = C11930 + C11931;
    const double C27516 = C27492 + C27493;
    const double C31495 = C31488 + C31489;
    const double C10238 = C10225 + C10226;
    const double C27933 = C27920 + C27921;
    const double C7647 = C7631 + C7632;
    const double C9825 = C9805 + C9806;
    const double C11940 = C11924 + C11925;
    const double C27520 = C27500 + C27501;
    const double C31492 = C31482 + C31483;
    const double C32078 = C32077 + C32072;
    const double C17883 = C17863 + C17864;
    const double C17880 = C17857 + C17858;
    const double C17877 = C17851 + C17852;
    const double C17874 = C17845 + C17846;
    const double C17871 = C17839 + C17840;
    const double C17868 = C17833 + C17834;
    const double C18292 = C18278 + C18279;
    const double C18289 = C18272 + C18273;
    const double C18286 = C18266 + C18267;
    const double C18283 = C18260 + C18261;
    const double C18474 = C18460 + C18461;
    const double C18471 = C18454 + C18455;
    const double C18468 = C18448 + C18449;
    const double C18465 = C18442 + C18443;
    const double C20155 = C20135 + C20136;
    const double C20152 = C20129 + C20130;
    const double C20149 = C20123 + C20124;
    const double C20146 = C20117 + C20118;
    const double C20143 = C20111 + C20112;
    const double C20140 = C20105 + C20106;
    const double C20367 = C20359 + C20360;
    const double C20364 = C20353 + C20354;
    const double C20781 = C20773 + C20774;
    const double C20778 = C20767 + C20768;
    const double C31038 = C31028 + C31029;
    const double C31035 = C31022 + C31023;
    const double C31494 = C31486 + C31487;
    const double C31491 = C31480 + C31481;
    const double C7785 = C7756 * C259;
    const double C7777 = C7756 * C277;
    const double C7771 = C7756 * C275;
    const double C7763 = C7756 * C258;
    const double C8143 = C7756 * C1032;
    const double C8135 = C7756 * C1039;
    const double C8297 = C7756 * C1166;
    const double C8289 = C7756 * C1176;
    const double C9807 = C7756 * C1169;
    const double C9799 = C7756 * C1183;
    const double C9793 = C7756 * C1178;
    const double C9785 = C7756 * C1167;
    const double C10231 = C7756 * C1723;
    const double C10223 = C7756 * C1719;
    const double C15906 = C15877 * C259;
    const double C15898 = C15877 * C277;
    const double C15892 = C15877 * C275;
    const double C15884 = C15877 * C258;
    const double C16264 = C15877 * C1032;
    const double C16256 = C15877 * C1039;
    const double C16418 = C15877 * C1166;
    const double C16410 = C15877 * C1176;
    const double C27502 = C15877 * C1169;
    const double C27494 = C15877 * C1183;
    const double C27488 = C15877 * C1178;
    const double C27480 = C15877 * C1167;
    const double C27926 = C15877 * C1723;
    const double C27918 = C15877 * C1719;
    const double C31604 = C31602 / C31508;
    const double C18775 = C18772 + C18773;
    const double C26306 = C26305 + C26303;
    const double C13627 = C1875 * C13613;
    const double C13620 = C1872 * C13613;
    const double C13963 = C2338 * C13613;
    const double C14105 = C2160 * C13613;
    const double C22680 = C1875 * C22666;
    const double C22673 = C1872 * C22666;
    const double C23014 = C2338 * C22666;
    const double C23152 = C2160 * C22666;
    const double C31691 = C31689 / C31508;
    const double C6487 =
        (3 * C32014 + ae * C32015 + C31759 * C32036 + ae * C31758 * C32078 +
         C31758 *
             (ae * C32078 +
              C31758 *
                  (3 * C32032 + ae * C32033 +
                   C31759 * (2 * C32026 + ae * C32028 +
                             C31759 * (C31791 + ae * C31759 * C31830 +
                                       C31759 * (ae * C31830 +
                                                 C31759 * std::pow(C31763, 8) *
                                                     bs[8] * C31764)))))) /
        C31510;
    const double C6745 =
        (ae * (4 * C32054 + C31759 * C32078 +
               (3 * C32040 + C31759 * C32070) * ae) +
         C31758 *
             (4 * C32036 + ae * C32037 +
              C31759 *
                  (3 * C32032 + ae * C32033 +
                   C31759 * (2 * C32026 + ae * C32028 +
                             C31759 * (C31791 + ae * C31759 * C31830 +
                                       C31759 * (ae * C31830 +
                                                 C31759 * std::pow(C31763, 8) *
                                                     bs[8] * C31764)))))) /
        C31510;
    const double C6410 =
        (5 * (3 * C31930 + C31759 * C32054 + C32374 * ae) +
         C31759 * (4 * C32054 + C31759 * C32078 + C32378 * ae) +
         (4 * C32374 + C31759 * C32378) * ae) /
        C31508;
    const double C6482 =
        (3 * C31930 + C31759 * C32054 + C32374 * ae + C32078 * C31976) / C31508;
    const double C6743 =
        (C31758 * (4 * C32054 + C31759 * C32078 + C32378 * ae)) / C31508;
    const double C7804 = C7785 + C7786;
    const double C7800 = C7777 + C7778;
    const double C7797 = C7771 + C7772;
    const double C7793 = C7763 + C7764;
    const double C8154 = C8143 + C8144;
    const double C8150 = C8135 + C8136;
    const double C8308 = C8297 + C8298;
    const double C8304 = C8289 + C8290;
    const double C9826 = C9807 + C9808;
    const double C9822 = C9799 + C9800;
    const double C9819 = C9793 + C9794;
    const double C9815 = C9785 + C9786;
    const double C10241 = C10231 + C10232;
    const double C10237 = C10223 + C10224;
    const double C15925 = C15906 + C15907;
    const double C15921 = C15898 + C15899;
    const double C15918 = C15892 + C15893;
    const double C15914 = C15884 + C15885;
    const double C16275 = C16264 + C16265;
    const double C16271 = C16256 + C16257;
    const double C16429 = C16418 + C16419;
    const double C16425 = C16410 + C16411;
    const double C27521 = C27502 + C27503;
    const double C27517 = C27494 + C27495;
    const double C27514 = C27488 + C27489;
    const double C27510 = C27480 + C27481;
    const double C27936 = C27926 + C27927;
    const double C27932 = C27918 + C27919;
    const double C31606 = C31592 - C31604;
    const double C18776 = C18775 + C18774;
    const double C26307 = C26306 + C26304;
    const double C31693 = C31679 - C31691;
    const double C31607 = C31606 + C31577;
    const double C31694 = C31693 + C31664;
    const double C17865 = C31607 * C118;
    const double C17859 = C31607 * C129;
    const double C17849 = C31607 * C127;
    const double C17843 = C31607 * C117;
    const double C17837 = C31607 * C125;
    const double C17831 = C31607 * C116;
    const double C18280 = C31607 * C255;
    const double C18274 = C31607 * C268;
    const double C18268 = C31607 * C254;
    const double C18262 = C31607 * C266;
    const double C18462 = C31607 * C360;
    const double C18456 = C31607 * C373;
    const double C18450 = C31607 * C359;
    const double C18444 = C31607 * C371;
    const double C20137 = C31607 * C362;
    const double C20131 = C31607 * C378;
    const double C20125 = C31607 * C363;
    const double C20119 = C31607 * C380;
    const double C20109 = C31607 * C375;
    const double C20103 = C31607 * C361;
    const double C20361 = C31607 * C722;
    const double C20355 = C31607 * C729;
    const double C20771 = C31607 * C727;
    const double C20765 = C31607 * C721;
    const double C31030 = C31607 * C2110;
    const double C31024 = C31607 * C2118;
    const double C31484 = C31607 * C1182;
    const double C31478 = C31607 * C1168;
    const double C6339 =
        (((((0 - (C31506 * C31560) / C31508) * ae) / C31508 -
           (0 * be) / C31512 + (2 * C31561) / C31508) /
              C31544 -
          ((C31506 * C31596 + 0) * be) / C31508 + C31570 - C31583) /
             C31544 +
         ((C31506 * C31605 + 0) * ae) / C31508) /
            C31544 -
        ((C31506 * (C31605 / C31544 +
                    ((C31506 * C31607 + C32725) * ae) / C31508 + C31599) +
          C32998) *
         be) /
            C31508 +
        C31607 / C31544 + ((C31506 * C31599 + C32732) * ae) / C31508 +
        2 * (C31577 / C31544 - (0 * be) / C31508);
    const double C6340 =
        (C31605 / C31544 + ((C31506 * C31607 + C32725) * ae) / C31508 +
         C31599) /
            C31544 -
        ((C31506 * (C31607 / C31544 +
                    ((C31506 * C31599 + C32732) * ae) / C31508 + 2 * C31613) +
          C32994) *
         be) /
            C31508 +
        2 * (C31599 / C31544 + ((C31506 * C31613 + C17823) * ae) / C31508);
    const double C6341 =
        (C31607 / C31544 + ((C31506 * C31599 + C32732) * ae) / C31508 +
         2 * C31613) /
            C31544 -
        ((C31506 *
              (C31599 / C31544 + ((C31506 * C31613 + C17823) * ae) / C31508) +
          C32984) *
         be) /
            C31508 +
        3 * (C31613 / C31544 + (0 * ae) / C31508);
    const double C7754 =
        C31605 / C31544 - ((C31506 * C31607 + C32725) * be) / C31508 + C31599;
    const double C7755 = C31607 / C31544 -
                         ((C31506 * C31599 + C32732) * be) / C31508 +
                         2 * C31613;
    const double C15875 =
        C31605 / C31544 + ((C31506 * C31607 + C32725) * ae) / C31508 + C31599;
    const double C15876 = C31607 / C31544 +
                          ((C31506 * C31599 + C32732) * ae) / C31508 +
                          2 * C31613;
    const double C24447 = C168 * C31694;
    const double C24436 = C166 * C31694;
    const double C24430 = C164 * C31694;
    const double C24830 = C511 * C31694;
    const double C24824 = C509 * C31694;
    const double C24988 = C631 * C31694;
    const double C24982 = C629 * C31694;
    const double C12010 =
        (((((0 - (C31525 * C31647) / C31508) * ae) / C31508 -
           (0 * be) / C31512 + (2 * C31648) / C31508) /
              C31544 -
          ((C31525 * C31683 + 0) * be) / C31508 + C31657 - C31670) /
             C31544 +
         ((C31525 * C31692 + 0) * ae) / C31508) /
            C31544 -
        ((C31525 * (C31692 / C31544 +
                    ((C31525 * C31694 + C32767) * ae) / C31508 + C31686) +
          C32999) *
         be) /
            C31508 +
        C31694 / C31544 + ((C31525 * C31686 + C32774) * ae) / C31508 +
        2 * (C31664 / C31544 - (0 * be) / C31508);
    const double C12011 =
        (C31692 / C31544 + ((C31525 * C31694 + C32767) * ae) / C31508 +
         C31686) /
            C31544 -
        ((C31525 * (C31694 / C31544 +
                    ((C31525 * C31686 + C32774) * ae) / C31508 + 2 * C31700) +
          C32996) *
         be) /
            C31508 +
        2 * (C31686 / C31544 + ((C31525 * C31700 + C24425) * ae) / C31508);
    const double C12012 =
        (C31694 / C31544 + ((C31525 * C31686 + C32774) * ae) / C31508 +
         2 * C31700) /
            C31544 -
        ((C31525 *
              (C31686 / C31544 + ((C31525 * C31700 + C24425) * ae) / C31508) +
          C32987) *
         be) /
            C31508 +
        3 * (C31700 / C31544 + (0 * ae) / C31508);
    const double C13611 =
        C31692 / C31544 - ((C31525 * C31694 + C32767) * be) / C31508 + C31686;
    const double C13612 = C31694 / C31544 -
                          ((C31525 * C31686 + C32774) * be) / C31508 +
                          2 * C31700;
    const double C22664 =
        C31692 / C31544 + ((C31525 * C31694 + C32767) * ae) / C31508 + C31686;
    const double C22665 = C31694 / C31544 +
                          ((C31525 * C31686 + C32774) * ae) / C31508 +
                          2 * C31700;
    const double C17884 = C17865 + C17866;
    const double C17881 = C17859 + C17860;
    const double C17876 = C17849 + C17850;
    const double C17873 = C17843 + C17844;
    const double C17870 = C17837 + C17838;
    const double C17867 = C17831 + C17832;
    const double C18293 = C18280 + C18281;
    const double C18290 = C18274 + C18275;
    const double C18287 = C18268 + C18269;
    const double C18284 = C18262 + C18263;
    const double C18475 = C18462 + C18463;
    const double C18472 = C18456 + C18457;
    const double C18469 = C18450 + C18451;
    const double C18466 = C18444 + C18445;
    const double C20156 = C20137 + C20138;
    const double C20153 = C20131 + C20132;
    const double C20150 = C20125 + C20126;
    const double C20147 = C20119 + C20120;
    const double C20142 = C20109 + C20110;
    const double C20139 = C20103 + C20104;
    const double C20368 = C20361 + C20362;
    const double C20365 = C20355 + C20356;
    const double C20780 = C20771 + C20772;
    const double C20777 = C20765 + C20766;
    const double C31039 = C31030 + C31031;
    const double C31036 = C31024 + C31025;
    const double C31493 = C31484 + C31485;
    const double C31490 = C31478 + C31479;
    const double C7789 = C7754 * C117;
    const double C7781 = C7754 * C127;
    const double C7767 = C7754 * C125;
    const double C7759 = C7754 * C116;
    const double C8147 = C7754 * C255;
    const double C8139 = C7754 * C268;
    const double C8301 = C7754 * C360;
    const double C8293 = C7754 * C373;
    const double C9811 = C7754 * C362;
    const double C9803 = C7754 * C378;
    const double C9789 = C7754 * C375;
    const double C9781 = C7754 * C361;
    const double C10227 = C7754 * C727;
    const double C10219 = C7754 * C721;
    const double C7787 = C7755 * C254;
    const double C7779 = C7755 * C266;
    const double C7769 = C7755 * C268;
    const double C7761 = C7755 * C255;
    const double C8145 = C7755 * C258;
    const double C8137 = C7755 * C275;
    const double C8299 = C7755 * C722;
    const double C8291 = C7755 * C729;
    const double C9809 = C7755 * C1168;
    const double C9801 = C7755 * C1182;
    const double C9791 = C7755 * C727;
    const double C9783 = C7755 * C721;
    const double C10229 = C7755 * C1178;
    const double C10221 = C7755 * C1167;
    const double C15910 = C15875 * C117;
    const double C15902 = C15875 * C127;
    const double C15888 = C15875 * C125;
    const double C15880 = C15875 * C116;
    const double C16268 = C15875 * C255;
    const double C16260 = C15875 * C268;
    const double C16422 = C15875 * C360;
    const double C16414 = C15875 * C373;
    const double C27506 = C15875 * C362;
    const double C27498 = C15875 * C378;
    const double C27484 = C15875 * C375;
    const double C27476 = C15875 * C361;
    const double C27922 = C15875 * C727;
    const double C27914 = C15875 * C721;
    const double C15908 = C15876 * C254;
    const double C15900 = C15876 * C266;
    const double C15890 = C15876 * C268;
    const double C15882 = C15876 * C255;
    const double C16266 = C15876 * C258;
    const double C16258 = C15876 * C275;
    const double C16420 = C15876 * C722;
    const double C16412 = C15876 * C729;
    const double C27504 = C15876 * C1168;
    const double C27496 = C15876 * C1182;
    const double C27486 = C15876 * C727;
    const double C27478 = C15876 * C721;
    const double C27924 = C15876 * C1178;
    const double C27916 = C15876 * C1167;
    const double C24448 = C24436 + C24437;
    const double C13631 = C166 * C13611;
    const double C13616 = C164 * C13611;
    const double C13967 = C511 * C13611;
    const double C14109 = C631 * C13611;
    const double C13629 = C629 * C13612;
    const double C13618 = C631 * C13612;
    const double C13965 = C2340 * C13612;
    const double C14107 = C1872 * C13612;
    const double C22684 = C166 * C22664;
    const double C22669 = C164 * C22664;
    const double C23018 = C511 * C22664;
    const double C23156 = C631 * C22664;
    const double C22682 = C629 * C22665;
    const double C22671 = C631 * C22665;
    const double C23016 = C2340 * C22665;
    const double C23154 = C1872 * C22665;
    const double C17886 = C17876 + C17877;
    const double C17885 = C17873 + C17874;
    const double C20566 = C18474 + C18475;
    const double C20563 = C18475 + C18474;
    const double C20565 = C18471 + C18472;
    const double C20564 = C18472 + C18471;
    const double C31018 = C20156 + C20155;
    const double C31019 = C20153 + C20152;
    const double C7806 = C7789 + C7790;
    const double C7802 = C7781 + C7782;
    const double C7795 = C7767 + C7768;
    const double C7791 = C7759 + C7760;
    const double C8156 = C8147 + C8148;
    const double C8152 = C8139 + C8140;
    const double C8310 = C8301 + C8302;
    const double C8306 = C8293 + C8294;
    const double C9828 = C9811 + C9812;
    const double C9824 = C9803 + C9804;
    const double C9817 = C9789 + C9790;
    const double C9813 = C9781 + C9782;
    const double C10239 = C10227 + C10228;
    const double C10235 = C10219 + C10220;
    const double C7805 = C7787 + C7788;
    const double C7801 = C7779 + C7780;
    const double C7796 = C7769 + C7770;
    const double C7792 = C7761 + C7762;
    const double C8155 = C8145 + C8146;
    const double C8151 = C8137 + C8138;
    const double C8309 = C8299 + C8300;
    const double C8305 = C8291 + C8292;
    const double C9827 = C9809 + C9810;
    const double C9823 = C9801 + C9802;
    const double C9818 = C9791 + C9792;
    const double C9814 = C9783 + C9784;
    const double C10240 = C10229 + C10230;
    const double C10236 = C10221 + C10222;
    const double C15927 = C15910 + C15911;
    const double C15923 = C15902 + C15903;
    const double C15916 = C15888 + C15889;
    const double C15912 = C15880 + C15881;
    const double C16277 = C16268 + C16269;
    const double C16273 = C16260 + C16261;
    const double C16431 = C16422 + C16423;
    const double C16427 = C16414 + C16415;
    const double C27523 = C27506 + C27507;
    const double C27519 = C27498 + C27499;
    const double C27512 = C27484 + C27485;
    const double C27508 = C27476 + C27477;
    const double C27934 = C27922 + C27923;
    const double C27930 = C27914 + C27915;
    const double C15926 = C15908 + C15909;
    const double C15922 = C15900 + C15901;
    const double C15917 = C15890 + C15891;
    const double C15913 = C15882 + C15883;
    const double C16276 = C16266 + C16267;
    const double C16272 = C16258 + C16259;
    const double C16430 = C16420 + C16421;
    const double C16426 = C16412 + C16413;
    const double C27522 = C27504 + C27505;
    const double C27518 = C27496 + C27497;
    const double C27513 = C27486 + C27487;
    const double C27509 = C27478 + C27479;
    const double C27935 = C27924 + C27925;
    const double C27931 = C27916 + C27917;
    const double C24449 = C24448 + C24438;
    const double C17888 = C17886 + C17878;
    const double C17887 = C17885 + C17875;
    const double C20570 = C18473 + C20566;
    const double C20567 = C20563 + C18473;
    const double C20569 = C18470 + C20565;
    const double C20568 = C20564 + C18470;
    const double C31032 = C31018 + C20154;
    const double C31033 = C31019 + C20151;
    const double C24450 = C24449 + C24439;
    const double C17890 = C17888 * C32684;
    const double C17889 = C17887 * C114;
    const double C24451 = C24450 + C24440;
    const double C17891 = C17889 + C17890;
    const double C24452 = C24451 + C24441;
    d2ee[0] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                (((((C31607 * C115 + C32725 * C122 + C31599 * C256 +
                     C32732 * C271 + C31613 * C257 + C17823 * C272) *
                        C114 +
                    (C31607 * C123 + C32725 * C136 + C31599 * C270 +
                     C32732 * C286 + C31613 * C273 + C17823 * C287) *
                        C32684) *
                       C32590 +
                   ((C17867 + C17868 + C17869) * C114 +
                    (C17870 + C17871 + C17872) * C32684) *
                       C32598 +
                   C17891 * C17826) *
                      C32644 * C479 -
                  (((C18282 + C18283 + C18284) * C32684 +
                    (C18285 + C18286 + C18287) * C114) *
                       C17826 +
                   ((C18288 + C18289 + C18290) * C32684 +
                    (C18291 + C18292 + C18293) * C114) *
                       C32598 +
                   ((C31613 * C1041 + C17823 * C1051 + C31599 * C273 +
                     C32732 * C287 + C31607 * C270 + C32725 * C286) *
                        C32684 +
                    (C31613 * C1033 + C17823 * C1042 + C31599 * C257 +
                     C32732 * C272 + C31607 * C256 + C32725 * C271) *
                        C114) *
                       C32590) *
                      C32644 * C480) *
                     C481 +
                 ((((C18293 + C18292 + C18291) * C114 +
                    (C18290 + C18289 + C18288) * C32684) *
                       C32590 +
                   ((C18287 + C18286 + C18285) * C114 +
                    (C18284 + C18283 + C18282) * C32684) *
                       C32598 +
                   ((C31607 * C253 + C32725 * C265 + C31599 * C260 +
                     C32732 * C278 + C31613 * C1347 + C17823 * C1348) *
                        C114 +
                    (C31607 * C264 + C32725 * C283 + C31599 * C279 +
                     C32732 * C290 + C31613 * C1349 + C17823 * C1350) *
                        C32684) *
                       C17826) *
                      C32644 * C480 -
                  (((C17879 + C17880 + C17881) * C32684 +
                    (C17882 + C17883 + C17884) * C114) *
                       C17826 +
                   ((C17878 + C17877 + C17876) * C32684 +
                    (C17875 + C17874 + C17873) * C114) *
                       C32598 +
                   ((C17872 + C17871 + C17870) * C32684 +
                    (C17869 + C17868 + C17867) * C114) *
                       C32590) *
                      C32644 * C479) *
                     C482)) /
               (p * q * std::sqrt(p + q));
    d2ee[1] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                (((((C31607 * C115 + C32725 * C122 + C31599 * C256 +
                     C32732 * C271 + C31613 * C257 + C17823 * C272) *
                        C114 +
                    (C31607 * C123 + C32725 * C136 + C31599 * C270 +
                     C32732 * C286 + C31613 * C273 + C17823 * C287) *
                        C32684) *
                       C32590 +
                   ((C17867 + C17868 + C17869) * C114 +
                    (C17870 + C17871 + C17872) * C32684) *
                       C32598 +
                   C17891 * C17826) *
                      C601 -
                  (((C18464 + C18465 + C18466) * C32684 +
                    (C18467 + C18468 + C18469) * C114) *
                       C17826 +
                   ((C18470 + C18471 + C18472) * C32684 +
                    (C18473 + C18474 + C18475) * C114) *
                       C32598 +
                   ((C31613 * C1178 + C17823 * C1194 + C31599 * C727 +
                     C32732 * C736 + C31607 * C375 + C32725 * C391) *
                        C32684 +
                    (C31613 * C1167 + C17823 * C1179 + C31599 * C721 +
                     C32732 * C726 + C31607 * C361 + C32725 * C376) *
                        C114) *
                       C32590) *
                      C602) *
                     C479 +
                 ((((C31607 * C721 + C32725 * C726 + C31599 * C1167 +
                     C32732 * C1179 + C31613 * C1719 + C17823 * C1722) *
                        C114 +
                    (C31607 * C727 + C32725 * C736 + C31599 * C1178 +
                     C32732 * C1194 + C31613 * C1723 + C17823 * C1728) *
                        C32684) *
                       C32590 +
                   ((C31607 * C722 + C32725 * C728 + C31599 * C1166 +
                     C32732 * C1177 + C31613 * C1720 + C17823 * C1724) *
                        C114 +
                    (C31607 * C729 + C32725 * C737 + C31599 * C1176 +
                     C32732 * C1193 + C31613 * C1725 + C17823 * C1729) *
                        C32684) *
                       C32598 +
                   ((C31607 * C723 + C32725 * C730 + C31599 * C1165 +
                     C32732 * C1175 + C31613 * C1721 + C17823 * C1726) *
                        C114 +
                    (C31607 * C731 + C32725 * C738 + C31599 * C1174 +
                     C32732 * C1192 + C31613 * C1727 + C17823 * C1730) *
                        C32684) *
                       C17826) *
                      C602 -
                  (((C18282 + C18283 + C18284) * C32684 +
                    (C18285 + C18286 + C18287) * C114) *
                       C17826 +
                   ((C18288 + C18289 + C18290) * C32684 +
                    (C18291 + C18292 + C18293) * C114) *
                       C32598 +
                   ((C31613 * C1041 + C17823 * C1051 + C31599 * C273 +
                     C32732 * C287 + C31607 * C270 + C32725 * C286) *
                        C32684 +
                    (C31613 * C1033 + C17823 * C1042 + C31599 * C257 +
                     C32732 * C272 + C31607 * C256 + C32725 * C271) *
                        C114) *
                       C32590) *
                      C601) *
                     C480) *
                C32618) /
               (p * q * std::sqrt(p + q));
    d2ee[2] += (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                ((((C31607 * C115 + C32725 * C122 + C31599 * C256 +
                    C32732 * C271 + C31613 * C257 + C17823 * C272) *
                       C114 +
                   (C31607 * C123 + C32725 * C136 + C31599 * C270 +
                    C32732 * C286 + C31613 * C273 + C17823 * C287) *
                       C32684) *
                      C32590 +
                  ((C17867 + C17868 + C17869) * C114 +
                   (C17870 + C17871 + C17872) * C32684) *
                      C32598 +
                  C17891 * C17826) *
                     C32644 * C248 -
                 (((C31613 * C1037 + C17823 * C1049 + C31599 * C277 +
                    C32732 * C289 + C31607 * C266 + C32725 * C284) *
                       C32684 +
                   (C31613 * C1031 + C17823 * C1038 + C31599 * C259 +
                    C32732 * C276 + C31607 * C254 + C32725 * C267) *
                       C114) *
                      C17826 +
                  ((C31613 * C1039 + C17823 * C1050 + C31599 * C275 +
                    C32732 * C288 + C31607 * C268 + C32725 * C285) *
                       C32684 +
                   (C31613 * C1032 + C17823 * C1040 + C31599 * C258 +
                    C32732 * C274 + C31607 * C255 + C32725 * C269) *
                       C114) *
                      C32598 +
                  ((C31613 * C1041 + C17823 * C1051 + C31599 * C273 +
                    C32732 * C287 + C31607 * C270 + C32725 * C286) *
                       C32684 +
                   (C31613 * C1033 + C17823 * C1042 + C31599 * C257 +
                    C32732 * C272 + C31607 * C256 + C32725 * C271) *
                       C114) *
                      C32590) *
                     C32644 * C249 +
                 (((C31607 * C257 + C32725 * C272 + C31599 * C1033 +
                    C32732 * C1042 + C31613 * C1034 + C17823 * C1043) *
                       C114 +
                   (C31607 * C273 + C32725 * C287 + C31599 * C1041 +
                    C32732 * C1051 + C31613 * C1044 + C17823 * C1052) *
                       C32684) *
                      C32590 +
                  ((C31607 * C258 + C32725 * C274 + C31599 * C1032 +
                    C32732 * C1040 + C31613 * C1035 + C17823 * C1045) *
                       C114 +
                   (C31607 * C275 + C32725 * C288 + C31599 * C1039 +
                    C32732 * C1050 + C31613 * C1046 + C17823 * C1053) *
                       C32684) *
                      C32598 +
                  ((C31607 * C259 + C32725 * C276 + C31599 * C1031 +
                    C32732 * C1038 + C31613 * C1036 + C17823 * C1047) *
                       C114 +
                   (C31607 * C277 + C32725 * C289 + C31599 * C1037 +
                    C32732 * C1049 + C31613 * C1048 + C17823 * C1054) *
                       C32684) *
                      C17826) *
                     C32644 * C250) *
                C32618) /
                   (p * q * std::sqrt(p + q)) -
               (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                ((((C31607 * C115 + C32725 * C122 + C31599 * C256 +
                    C32732 * C271 + C31613 * C257 + C17823 * C272) *
                       C114 +
                   (C31607 * C123 + C32725 * C136 + C31599 * C270 +
                    C32732 * C286 + C31613 * C273 + C17823 * C287) *
                       C32684) *
                      C32590 +
                  ((C17867 + C17868 + C17869) * C114 +
                   (C17870 + C17871 + C17872) * C32684) *
                      C32598 +
                  C17891 * C17826) *
                     C32644 * C32630 * C110 -
                 (((C17879 + C17880 + C17881) * C32684 +
                   (C17882 + C17883 + C17884) * C114) *
                      C17826 +
                  ((C17878 + C17877 + C17876) * C32684 +
                   (C17875 + C17874 + C17873) * C114) *
                      C32598 +
                  ((C17872 + C17871 + C17870) * C32684 +
                   (C17869 + C17868 + C17867) * C114) *
                      C32590) *
                     C32644 * C32630 * C111 +
                 (C17891 * C32590 +
                  ((C17884 + C17883 + C17882) * C114 +
                   (C17881 + C17880 + C17879) * C32684) *
                      C32598 +
                  ((C31607 * C119 + C32725 * C130 + C31599 * C252 +
                    C32732 * C263 + C31613 * C261 + C17823 * C280) *
                       C114 +
                   (C31607 * C131 + C32725 * C140 + C31599 * C262 +
                    C32732 * C282 + C31613 * C281 + C17823 * C291) *
                       C32684) *
                      C17826) *
                     C32644 * C32630 * C112)) /
                   (p * q * std::sqrt(p + q)) +
               (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                ((((C31607 * C115 + C32725 * C122 + C31599 * C256 +
                    C32732 * C271 + C31613 * C257 + C17823 * C272) *
                       C114 +
                   (C31607 * C123 + C32725 * C136 + C31599 * C270 +
                    C32732 * C286 + C31613 * C273 + C17823 * C287) *
                       C32684) *
                      C32590 +
                  ((C17867 + C17868 + C17869) * C114 +
                   (C17870 + C17871 + C17872) * C32684) *
                      C32598 +
                  C17891 * C17826) *
                     C354 -
                 (((C31613 * C1174 + C17823 * C1192 + C31599 * C731 +
                    C32732 * C738 + C31607 * C371 + C32725 * C389) *
                       C32684 +
                   (C31613 * C1165 + C17823 * C1175 + C31599 * C723 +
                    C32732 * C730 + C31607 * C359 + C32725 * C372) *
                       C114) *
                      C17826 +
                  ((C31613 * C1176 + C17823 * C1193 + C31599 * C729 +
                    C32732 * C737 + C31607 * C373 + C32725 * C390) *
                       C32684 +
                   (C31613 * C1166 + C17823 * C1177 + C31599 * C722 +
                    C32732 * C728 + C31607 * C360 + C32725 * C374) *
                       C114) *
                      C32598 +
                  ((C31613 * C1178 + C17823 * C1194 + C31599 * C727 +
                    C32732 * C736 + C31607 * C375 + C32725 * C391) *
                       C32684 +
                   (C31613 * C1167 + C17823 * C1179 + C31599 * C721 +
                    C32732 * C726 + C31607 * C361 + C32725 * C376) *
                       C114) *
                      C32590) *
                     C355 +
                 (((C31607 * C362 + C32725 * C377 + C31599 * C1168 +
                    C32732 * C1180 + C31613 * C1169 + C17823 * C1181) *
                       C114 +
                   (C31607 * C378 + C32725 * C392 + C31599 * C1182 +
                    C32732 * C1195 + C31613 * C1183 + C17823 * C1196) *
                       C32684) *
                      C32590 +
                  ((C31607 * C363 + C32725 * C379 + C31599 * C1170 +
                    C32732 * C1184 + C31613 * C1171 + C17823 * C1185) *
                       C114 +
                   (C31607 * C380 + C32725 * C393 + C31599 * C1186 +
                    C32732 * C1197 + C31613 * C1187 + C17823 * C1198) *
                       C32684) *
                      C32598 +
                  ((C31607 * C364 + C32725 * C381 + C31599 * C1172 +
                    C32732 * C1188 + C31613 * C1173 + C17823 * C1189) *
                       C114 +
                   (C31607 * C382 + C32725 * C394 + C31599 * C1190 +
                    C32732 * C1199 + C31613 * C1191 + C17823 * C1200) *
                       C32684) *
                      C17826) *
                     C356) *
                C32630 * C32618) /
                   (p * q * std::sqrt(p + q));
    d2ee[3] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                (((((C31607 * C115 + C32725 * C122 + C31599 * C256 +
                     C32732 * C271 + C31613 * C257 + C17823 * C272) *
                        C114 +
                    (C31607 * C123 + C32725 * C136 + C31599 * C270 +
                     C32732 * C286 + C31613 * C273 + C17823 * C287) *
                        C32684) *
                       C32590 +
                   ((C17867 + C17868 + C17869) * C114 +
                    (C17870 + C17871 + C17872) * C32684) *
                       C32598 +
                   C17891 * C17826) *
                      C601 -
                  (((C18464 + C18465 + C18466) * C32684 +
                    (C18467 + C18468 + C18469) * C114) *
                       C17826 +
                   ((C18470 + C18471 + C18472) * C32684 +
                    (C18473 + C18474 + C18475) * C114) *
                       C32598 +
                   ((C31613 * C1178 + C17823 * C1194 + C31599 * C727 +
                     C32732 * C736 + C31607 * C375 + C32725 * C391) *
                        C32684 +
                    (C31613 * C1167 + C17823 * C1179 + C31599 * C721 +
                     C32732 * C726 + C31607 * C361 + C32725 * C376) *
                        C114) *
                       C32590) *
                      C602) *
                     C32630 * C481 +
                 ((((C18475 + C18474 + C18473) * C114 +
                    (C18472 + C18471 + C18470) * C32684) *
                       C32590 +
                   ((C18469 + C18468 + C18467) * C114 +
                    (C18466 + C18465 + C18464) * C32684) *
                       C32598 +
                   ((C31607 * C358 + C32725 * C370 + C31599 * C724 +
                     C32732 * C732 + C31613 * C1533 + C17823 * C1534) *
                        C114 +
                    (C31607 * C369 + C32725 * C388 + C31599 * C733 +
                     C32732 * C739 + C31613 * C1535 + C17823 * C1536) *
                        C32684) *
                       C17826) *
                      C602 -
                  (((C17879 + C17880 + C17881) * C32684 +
                    (C17882 + C17883 + C17884) * C114) *
                       C17826 +
                   ((C17878 + C17877 + C17876) * C32684 +
                    (C17875 + C17874 + C17873) * C114) *
                       C32598 +
                   ((C17872 + C17871 + C17870) * C32684 +
                    (C17869 + C17868 + C17867) * C114) *
                       C32590) *
                      C601) *
                     C32630 * C482)) /
               (p * q * std::sqrt(p + q));
    d2ee[4] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                ((((C31607 * C115 + C32725 * C122 + C31599 * C256 +
                    C32732 * C271 + C31613 * C257 + C17823 * C272) *
                       C114 +
                   (C31607 * C123 + C32725 * C136 + C31599 * C270 +
                    C32732 * C286 + C31613 * C273 + C17823 * C287) *
                       C32684) *
                      C32590 +
                  ((C17867 + C17868 + C17869) * C114 +
                   (C17870 + C17871 + C17872) * C32684) *
                      C32598 +
                  C17891 * C17826) *
                     C32644 * C32630 * C110 -
                 (((C17879 + C17880 + C17881) * C32684 +
                   (C17882 + C17883 + C17884) * C114) *
                      C17826 +
                  ((C17878 + C17877 + C17876) * C32684 +
                   (C17875 + C17874 + C17873) * C114) *
                      C32598 +
                  ((C17872 + C17871 + C17870) * C32684 +
                   (C17869 + C17868 + C17867) * C114) *
                      C32590) *
                     C32644 * C32630 * C111 +
                 (C17891 * C32590 +
                  ((C17884 + C17883 + C17882) * C114 +
                   (C17881 + C17880 + C17879) * C32684) *
                      C32598 +
                  ((C31607 * C119 + C32725 * C130 + C31599 * C252 +
                    C32732 * C263 + C31613 * C261 + C17823 * C280) *
                       C114 +
                   (C31607 * C131 + C32725 * C140 + C31599 * C262 +
                    C32732 * C282 + C31613 * C281 + C17823 * C291) *
                       C32684) *
                      C17826) *
                     C32644 * C32630 * C112)) /
                   (p * q * std::sqrt(p + q)) -
               (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                ((((C31607 * C115 + C32725 * C122 + C31599 * C256 +
                    C32732 * C271 + C31613 * C257 + C17823 * C272) *
                       C114 +
                   (C31607 * C123 + C32725 * C136 + C31599 * C270 +
                    C32732 * C286 + C31613 * C273 + C17823 * C287) *
                       C32684) *
                      C32590 +
                  ((C17867 + C17868 + C17869) * C114 +
                   (C17870 + C17871 + C17872) * C32684) *
                      C32598 +
                  C17891 * C17826) *
                     C32644 * C248 -
                 (((C31613 * C1037 + C17823 * C1049 + C31599 * C277 +
                    C32732 * C289 + C31607 * C266 + C32725 * C284) *
                       C32684 +
                   (C31613 * C1031 + C17823 * C1038 + C31599 * C259 +
                    C32732 * C276 + C31607 * C254 + C32725 * C267) *
                       C114) *
                      C17826 +
                  ((C31613 * C1039 + C17823 * C1050 + C31599 * C275 +
                    C32732 * C288 + C31607 * C268 + C32725 * C285) *
                       C32684 +
                   (C31613 * C1032 + C17823 * C1040 + C31599 * C258 +
                    C32732 * C274 + C31607 * C255 + C32725 * C269) *
                       C114) *
                      C32598 +
                  ((C31613 * C1041 + C17823 * C1051 + C31599 * C273 +
                    C32732 * C287 + C31607 * C270 + C32725 * C286) *
                       C32684 +
                   (C31613 * C1033 + C17823 * C1042 + C31599 * C257 +
                    C32732 * C272 + C31607 * C256 + C32725 * C271) *
                       C114) *
                      C32590) *
                     C32644 * C249 +
                 (((C31607 * C257 + C32725 * C272 + C31599 * C1033 +
                    C32732 * C1042 + C31613 * C1034 + C17823 * C1043) *
                       C114 +
                   (C31607 * C273 + C32725 * C287 + C31599 * C1041 +
                    C32732 * C1051 + C31613 * C1044 + C17823 * C1052) *
                       C32684) *
                      C32590 +
                  ((C31607 * C258 + C32725 * C274 + C31599 * C1032 +
                    C32732 * C1040 + C31613 * C1035 + C17823 * C1045) *
                       C114 +
                   (C31607 * C275 + C32725 * C288 + C31599 * C1039 +
                    C32732 * C1050 + C31613 * C1046 + C17823 * C1053) *
                       C32684) *
                      C32598 +
                  ((C31607 * C259 + C32725 * C276 + C31599 * C1031 +
                    C32732 * C1038 + C31613 * C1036 + C17823 * C1047) *
                       C114 +
                   (C31607 * C277 + C32725 * C289 + C31599 * C1037 +
                    C32732 * C1049 + C31613 * C1048 + C17823 * C1054) *
                       C32684) *
                      C17826) *
                     C32644 * C250) *
                C32618) /
                   (p * q * std::sqrt(p + q));
    d2ee[5] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                (((((C31607 * C115 + C32725 * C122 + C31599 * C256 +
                     C32732 * C271 + C31613 * C257 + C17823 * C272) *
                        C3602 +
                    (C31607 * C123 + C32725 * C136 + C31599 * C270 +
                     C32732 * C286 + C31613 * C273 + C17823 * C287) *
                        C32926 +
                    (C20139 + C20140 + C20141) * C3603 +
                    (C20142 + C20143 + C20144) * C32771) *
                       C15873 +
                   ((C17867 + C17868 + C17869) * C3602 +
                    (C17870 + C17871 + C17872) * C32926 +
                    (C18475 + C18474 + C18473) * C3603 +
                    (C18472 + C18471 + C18470) * C32771) *
                       C32595) *
                      C32644 * C479 -
                  (((C20363 + C20364 + C20365) * C32771 +
                    (C20366 + C20367 + C20368) * C3603 +
                    (C18288 + C18289 + C18290) * C32926 +
                    (C18291 + C18292 + C18293) * C3602) *
                       C32595 +
                   ((C31613 * C1723 + C17823 * C1728 + C31599 * C1178 +
                     C32732 * C1194 + C31607 * C727 + C32725 * C736) *
                        C32771 +
                    (C31613 * C1719 + C17823 * C1722 + C31599 * C1167 +
                     C32732 * C1179 + C31607 * C721 + C32725 * C726) *
                        C3603 +
                    (C31613 * C1041 + C17823 * C1051 + C31599 * C273 +
                     C32732 * C287 + C31607 * C270 + C32725 * C286) *
                        C32926 +
                    (C31613 * C1033 + C17823 * C1042 + C31599 * C257 +
                     C32732 * C272 + C31607 * C256 + C32725 * C271) *
                        C3602) *
                       C15873) *
                      C32644 * C480) *
                     C481 +
                 ((((C18293 + C18292 + C18291) * C3602 +
                    (C18290 + C18289 + C18288) * C32926 +
                    (C20368 + C20367 + C20366) * C3603 +
                    (C20365 + C20364 + C20363) * C32771) *
                       C15873 +
                   ((C18287 + C18286 + C18285) * C3602 +
                    (C18284 + C18283 + C18282) * C32926 +
                    (C31607 * C723 + C32725 * C730 + C31599 * C1165 +
                     C32732 * C1175 + C31613 * C1721 + C17823 * C1726) *
                        C3603 +
                    (C31607 * C731 + C32725 * C738 + C31599 * C1174 +
                     C32732 * C1192 + C31613 * C1727 + C17823 * C1730) *
                        C32771) *
                       C32595) *
                      C32644 * C480 -
                  (((C18464 + C18465 + C18466) * C32771 +
                    (C18467 + C18468 + C18469) * C3603 +
                    (C17878 + C17877 + C17876) * C32926 +
                    (C17875 + C17874 + C17873) * C3602) *
                       C32595 +
                   ((C18470 + C18471 + C18472) * C32771 +
                    (C18473 + C18474 + C18475) * C3603 +
                    (C17872 + C17871 + C17870) * C32926 +
                    (C17869 + C17868 + C17867) * C3602) *
                       C15873) *
                      C32644 * C479) *
                     C482)) /
               (p * q * std::sqrt(p + q));
    d2ee[6] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                (((((C31607 * C115 + C32725 * C122 + C31599 * C256 +
                     C32732 * C271 + C31613 * C257 + C17823 * C272) *
                        C3602 +
                    (C31607 * C123 + C32725 * C136 + C31599 * C270 +
                     C32732 * C286 + C31613 * C273 + C17823 * C287) *
                        C32926 +
                    (C20139 + C20140 + C20141) * C3603 +
                    (C20142 + C20143 + C20144) * C32771) *
                       C15873 +
                   ((C17867 + C17868 + C17869) * C3602 +
                    (C17870 + C17871 + C17872) * C32926 + C20567 * C3603 +
                    C20568 * C32771) *
                       C32595) *
                      C601 -
                  (((C20145 + C20146 + C20147) * C32771 +
                    (C20148 + C20149 + C20150) * C3603 + C20569 * C32926 +
                    C20570 * C3602) *
                       C32595 +
                   ((C20151 + C20152 + C20153) * C32771 +
                    (C20154 + C20155 + C20156) * C3603 +
                    (C20144 + C20143 + C20142) * C32926 +
                    (C20141 + C20140 + C20139) * C3602) *
                       C15873) *
                      C602) *
                     C479 +
                 ((((C20777 + C20778 + C20779) * C3602 +
                    (C20780 + C20781 + C20782) * C32926 +
                    (C31607 * C1168 + C32725 * C1180 + C31599 * C1169 +
                     C32732 * C1181 + C31613 * C6477 + C17823 * C6481) *
                        C3603 +
                    (C31607 * C1182 + C32725 * C1195 + C31599 * C1183 +
                     C32732 * C1196 + C31613 * C6483 + C17823 * C6486) *
                        C32771) *
                       C15873 +
                   ((C20368 + C20367 + C20366) * C3602 +
                    (C20365 + C20364 + C20363) * C32926 +
                    (C31607 * C1170 + C32725 * C1184 + C31599 * C1171 +
                     C32732 * C1185 + C31613 * C7292 + C17823 * C7293) *
                        C3603 +
                    (C31607 * C1186 + C32725 * C1197 + C31599 * C1187 +
                     C32732 * C1198 + C31613 * C7294 + C17823 * C7295) *
                        C32771) *
                       C32595) *
                      C602 -
                  (((C20363 + C20364 + C20365) * C32771 +
                    (C20366 + C20367 + C20368) * C3603 +
                    (C18288 + C18289 + C18290) * C32926 +
                    (C18291 + C18292 + C18293) * C3602) *
                       C32595 +
                   ((C20782 + C20781 + C20780) * C32771 +
                    (C20779 + C20778 + C20777) * C3603 +
                    (C31613 * C1041 + C17823 * C1051 + C31599 * C273 +
                     C32732 * C287 + C31607 * C270 + C32725 * C286) *
                        C32926 +
                    (C31613 * C1033 + C17823 * C1042 + C31599 * C257 +
                     C32732 * C272 + C31607 * C256 + C32725 * C271) *
                        C3602) *
                       C15873) *
                      C601) *
                     C480) *
                C32618) /
               (p * q * std::sqrt(p + q));
    d2ee[7] += (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                ((((C31607 * C115 + C32725 * C122 + C31599 * C256 +
                    C32732 * C271 + C31613 * C257 + C17823 * C272) *
                       C3602 +
                   (C31607 * C123 + C32725 * C136 + C31599 * C270 +
                    C32732 * C286 + C31613 * C273 + C17823 * C287) *
                       C32926 +
                   (C31607 * C361 + C32725 * C376 + C31599 * C721 +
                    C32732 * C726 + C31613 * C1167 + C17823 * C1179) *
                       C3603 +
                   (C31607 * C375 + C32725 * C391 + C31599 * C727 +
                    C32732 * C736 + C31613 * C1178 + C17823 * C1194) *
                       C32771) *
                      C15873 +
                  ((C17867 + C17868 + C17869) * C3602 +
                   (C17870 + C17871 + C17872) * C32926 +
                   (C18475 + C18474 + C18473) * C3603 +
                   (C18472 + C18471 + C18470) * C32771) *
                      C32595) *
                     C32644 * C248 -
                 (((C31613 * C1725 + C17823 * C1729 + C31599 * C1176 +
                    C32732 * C1193 + C31607 * C729 + C32725 * C737) *
                       C32771 +
                   (C31613 * C1720 + C17823 * C1724 + C31599 * C1166 +
                    C32732 * C1177 + C31607 * C722 + C32725 * C728) *
                       C3603 +
                   (C18288 + C18289 + C18290) * C32926 +
                   (C18291 + C18292 + C18293) * C3602) *
                      C32595 +
                  ((C31613 * C1723 + C17823 * C1728 + C31599 * C1178 +
                    C32732 * C1194 + C31607 * C727 + C32725 * C736) *
                       C32771 +
                   (C31613 * C1719 + C17823 * C1722 + C31599 * C1167 +
                    C32732 * C1179 + C31607 * C721 + C32725 * C726) *
                       C3603 +
                   (C31613 * C1041 + C17823 * C1051 + C31599 * C273 +
                    C32732 * C287 + C31607 * C270 + C32725 * C286) *
                       C32926 +
                   (C31613 * C1033 + C17823 * C1042 + C31599 * C257 +
                    C32732 * C272 + C31607 * C256 + C32725 * C271) *
                       C3602) *
                      C15873) *
                     C32644 * C249 +
                 (((C31607 * C257 + C32725 * C272 + C31599 * C1033 +
                    C32732 * C1042 + C31613 * C1034 + C17823 * C1043) *
                       C3602 +
                   (C31607 * C273 + C32725 * C287 + C31599 * C1041 +
                    C32732 * C1051 + C31613 * C1044 + C17823 * C1052) *
                       C32926 +
                   (C31607 * C1167 + C32725 * C1179 + C31599 * C1719 +
                    C32732 * C1722 + C31613 * C6476 + C17823 * C6480) *
                       C3603 +
                   (C31607 * C1178 + C32725 * C1194 + C31599 * C1723 +
                    C32732 * C1728 + C31613 * C6479 + C17823 * C6485) *
                       C32771) *
                      C15873 +
                  ((C31607 * C258 + C32725 * C274 + C31599 * C1032 +
                    C32732 * C1040 + C31613 * C1035 + C17823 * C1045) *
                       C3602 +
                   (C31607 * C275 + C32725 * C288 + C31599 * C1039 +
                    C32732 * C1050 + C31613 * C1046 + C17823 * C1053) *
                       C32926 +
                   (C31607 * C1166 + C32725 * C1177 + C31599 * C1720 +
                    C32732 * C1724 + C31613 * C6656 + C17823 * C6657) *
                       C3603 +
                   (C31607 * C1176 + C32725 * C1193 + C31599 * C1725 +
                    C32732 * C1729 + C31613 * C6658 + C17823 * C6659) *
                       C32771) *
                      C32595) *
                     C32644 * C250) *
                C32618) /
                   (p * q * std::sqrt(p + q)) -
               (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                ((((C31607 * C115 + C32725 * C122 + C31599 * C256 +
                    C32732 * C271 + C31613 * C257 + C17823 * C272) *
                       C3602 +
                   (C31607 * C123 + C32725 * C136 + C31599 * C270 +
                    C32732 * C286 + C31613 * C273 + C17823 * C287) *
                       C32926 +
                   (C31607 * C361 + C32725 * C376 + C31599 * C721 +
                    C32732 * C726 + C31613 * C1167 + C17823 * C1179) *
                       C3603 +
                   (C31607 * C375 + C32725 * C391 + C31599 * C727 +
                    C32732 * C736 + C31613 * C1178 + C17823 * C1194) *
                       C32771) *
                      C15873 +
                  ((C17867 + C17868 + C17869) * C3602 +
                   (C17870 + C17871 + C17872) * C32926 +
                   (C18475 + C18474 + C18473) * C3603 +
                   (C18472 + C18471 + C18470) * C32771) *
                      C32595) *
                     C32644 * C32630 * C110 -
                 (((C18464 + C18465 + C18466) * C32771 +
                   (C18467 + C18468 + C18469) * C3603 +
                   (C17878 + C17877 + C17876) * C32926 +
                   (C17875 + C17874 + C17873) * C3602) *
                      C32595 +
                  ((C18470 + C18471 + C18472) * C32771 +
                   (C18473 + C18474 + C18475) * C3603 +
                   (C17872 + C17871 + C17870) * C32926 +
                   (C17869 + C17868 + C17867) * C3602) *
                      C15873) *
                     C32644 * C32630 * C111 +
                 ((C17887 * C3602 + C17888 * C32926 +
                   (C18469 + C18468 + C18467) * C3603 +
                   (C18466 + C18465 + C18464) * C32771) *
                      C15873 +
                  ((C17884 + C17883 + C17882) * C3602 +
                   (C17881 + C17880 + C17879) * C32926 +
                   (C31607 * C358 + C32725 * C370 + C31599 * C724 +
                    C32732 * C732 + C31613 * C1533 + C17823 * C1534) *
                       C3603 +
                   (C31607 * C369 + C32725 * C388 + C31599 * C733 +
                    C32732 * C739 + C31613 * C1535 + C17823 * C1536) *
                       C32771) *
                      C32595) *
                     C32644 * C32630 * C112)) /
                   (p * q * std::sqrt(p + q)) +
               (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                ((((C31607 * C115 + C32725 * C122 + C31599 * C256 +
                    C32732 * C271 + C31613 * C257 + C17823 * C272) *
                       C3602 +
                   (C31607 * C123 + C32725 * C136 + C31599 * C270 +
                    C32732 * C286 + C31613 * C273 + C17823 * C287) *
                       C32926 +
                   (C20139 + C20140 + C20141) * C3603 +
                   (C20142 + C20143 + C20144) * C32771) *
                      C15873 +
                  ((C17867 + C17868 + C17869) * C3602 +
                   (C17870 + C17871 + C17872) * C32926 +
                   (C18475 + C18474 + C18473) * C3603 +
                   (C18472 + C18471 + C18470) * C32771) *
                      C32595) *
                     C354 -
                 (((C20145 + C20146 + C20147) * C32771 +
                   (C20148 + C20149 + C20150) * C3603 +
                   (C18470 + C18471 + C18472) * C32926 +
                   (C18473 + C18474 + C18475) * C3602) *
                      C32595 +
                  ((C20151 + C20152 + C20153) * C32771 +
                   (C20154 + C20155 + C20156) * C3603 +
                   (C20144 + C20143 + C20142) * C32926 +
                   (C20141 + C20140 + C20139) * C3602) *
                      C15873) *
                     C355 +
                 (((C20156 + C20155 + C20154) * C3602 +
                   (C20153 + C20152 + C20151) * C32926 +
                   (C31607 * C2110 + C32725 * C2119 + C31599 * C2656 +
                    C32732 * C2659 + C31613 * C7076 + C17823 * C7080) *
                       C3603 +
                   (C31607 * C2118 + C32725 * C2128 + C31599 * C2660 +
                    C32732 * C2665 + C31613 * C7079 + C17823 * C7085) *
                       C32771) *
                      C15873 +
                  ((C20150 + C20149 + C20148) * C3602 +
                   (C20147 + C20146 + C20145) * C32926 +
                   (C31607 * C2109 + C32725 * C2117 + C31599 * C2657 +
                    C32732 * C2661 + C31613 * C7442 + C17823 * C7443) *
                       C3603 +
                   (C31607 * C2116 + C32725 * C2127 + C31599 * C2662 +
                    C32732 * C2666 + C31613 * C7444 + C17823 * C7445) *
                       C32771) *
                      C32595) *
                     C356) *
                C32630 * C32618) /
                   (p * q * std::sqrt(p + q));
    d2ee[8] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                (((((C31607 * C115 + C32725 * C122 + C31599 * C256 +
                     C32732 * C271 + C31613 * C257 + C17823 * C272) *
                        C3602 +
                    (C31607 * C123 + C32725 * C136 + C31599 * C270 +
                     C32732 * C286 + C31613 * C273 + C17823 * C287) *
                        C32926 +
                    (C20139 + C20140 + C20141) * C3603 +
                    (C20142 + C20143 + C20144) * C32771) *
                       C15873 +
                   ((C17867 + C17868 + C17869) * C3602 +
                    (C17870 + C17871 + C17872) * C32926 + C20567 * C3603 +
                    C20568 * C32771) *
                       C32595) *
                      C601 -
                  (((C20145 + C20146 + C20147) * C32771 +
                    (C20148 + C20149 + C20150) * C3603 + C20569 * C32926 +
                    C20570 * C3602) *
                       C32595 +
                   ((C20151 + C20152 + C20153) * C32771 +
                    (C20154 + C20155 + C20156) * C3603 +
                    (C20144 + C20143 + C20142) * C32926 +
                    (C20141 + C20140 + C20139) * C3602) *
                       C15873) *
                      C602) *
                     C32630 * C481 +
                 (((C20567 * C3602 + C20568 * C32926 +
                    (C20150 + C20149 + C20148) * C3603 +
                    (C20147 + C20146 + C20145) * C32771) *
                       C15873 +
                   ((C18469 + C18468 + C18467) * C3602 +
                    (C18466 + C18465 + C18464) * C32926 +
                    (C31607 * C364 + C32725 * C381 + C31599 * C1172 +
                     C32732 * C1188 + C31613 * C1173 + C17823 * C1189) *
                        C3603 +
                    (C31607 * C382 + C32725 * C394 + C31599 * C1190 +
                     C32732 * C1199 + C31613 * C1191 + C17823 * C1200) *
                        C32771) *
                       C32595) *
                      C602 -
                  (((C18464 + C18465 + C18466) * C32771 +
                    (C18467 + C18468 + C18469) * C3603 +
                    (C17878 + C17877 + C17876) * C32926 +
                    (C17875 + C17874 + C17873) * C3602) *
                       C32595 +
                   (C20569 * C32771 + C20570 * C3603 +
                    (C17872 + C17871 + C17870) * C32926 +
                    (C17869 + C17868 + C17867) * C3602) *
                       C15873) *
                      C601) *
                     C32630 * C482)) /
               (p * q * std::sqrt(p + q));
    d2ee[9] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                ((((C31607 * C115 + C32725 * C122 + C31599 * C256 +
                    C32732 * C271 + C31613 * C257 + C17823 * C272) *
                       C3602 +
                   (C31607 * C123 + C32725 * C136 + C31599 * C270 +
                    C32732 * C286 + C31613 * C273 + C17823 * C287) *
                       C32926 +
                   (C31607 * C361 + C32725 * C376 + C31599 * C721 +
                    C32732 * C726 + C31613 * C1167 + C17823 * C1179) *
                       C3603 +
                   (C31607 * C375 + C32725 * C391 + C31599 * C727 +
                    C32732 * C736 + C31613 * C1178 + C17823 * C1194) *
                       C32771) *
                      C15873 +
                  ((C17867 + C17868 + C17869) * C3602 +
                   (C17870 + C17871 + C17872) * C32926 +
                   (C18475 + C18474 + C18473) * C3603 +
                   (C18472 + C18471 + C18470) * C32771) *
                      C32595) *
                     C32644 * C32630 * C110 -
                 (((C18464 + C18465 + C18466) * C32771 +
                   (C18467 + C18468 + C18469) * C3603 +
                   (C17878 + C17877 + C17876) * C32926 +
                   (C17875 + C17874 + C17873) * C3602) *
                      C32595 +
                  ((C18470 + C18471 + C18472) * C32771 +
                   (C18473 + C18474 + C18475) * C3603 +
                   (C17872 + C17871 + C17870) * C32926 +
                   (C17869 + C17868 + C17867) * C3602) *
                      C15873) *
                     C32644 * C32630 * C111 +
                 ((C17887 * C3602 + C17888 * C32926 +
                   (C18469 + C18468 + C18467) * C3603 +
                   (C18466 + C18465 + C18464) * C32771) *
                      C15873 +
                  ((C17884 + C17883 + C17882) * C3602 +
                   (C17881 + C17880 + C17879) * C32926 +
                   (C31607 * C358 + C32725 * C370 + C31599 * C724 +
                    C32732 * C732 + C31613 * C1533 + C17823 * C1534) *
                       C3603 +
                   (C31607 * C369 + C32725 * C388 + C31599 * C733 +
                    C32732 * C739 + C31613 * C1535 + C17823 * C1536) *
                       C32771) *
                      C32595) *
                     C32644 * C32630 * C112)) /
                   (p * q * std::sqrt(p + q)) -
               (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                ((((C31607 * C115 + C32725 * C122 + C31599 * C256 +
                    C32732 * C271 + C31613 * C257 + C17823 * C272) *
                       C3602 +
                   (C31607 * C123 + C32725 * C136 + C31599 * C270 +
                    C32732 * C286 + C31613 * C273 + C17823 * C287) *
                       C32926 +
                   (C31607 * C361 + C32725 * C376 + C31599 * C721 +
                    C32732 * C726 + C31613 * C1167 + C17823 * C1179) *
                       C3603 +
                   (C31607 * C375 + C32725 * C391 + C31599 * C727 +
                    C32732 * C736 + C31613 * C1178 + C17823 * C1194) *
                       C32771) *
                      C15873 +
                  ((C17867 + C17868 + C17869) * C3602 +
                   (C17870 + C17871 + C17872) * C32926 +
                   (C18475 + C18474 + C18473) * C3603 +
                   (C18472 + C18471 + C18470) * C32771) *
                      C32595) *
                     C32644 * C248 -
                 (((C31613 * C1725 + C17823 * C1729 + C31599 * C1176 +
                    C32732 * C1193 + C31607 * C729 + C32725 * C737) *
                       C32771 +
                   (C31613 * C1720 + C17823 * C1724 + C31599 * C1166 +
                    C32732 * C1177 + C31607 * C722 + C32725 * C728) *
                       C3603 +
                   (C18288 + C18289 + C18290) * C32926 +
                   (C18291 + C18292 + C18293) * C3602) *
                      C32595 +
                  ((C31613 * C1723 + C17823 * C1728 + C31599 * C1178 +
                    C32732 * C1194 + C31607 * C727 + C32725 * C736) *
                       C32771 +
                   (C31613 * C1719 + C17823 * C1722 + C31599 * C1167 +
                    C32732 * C1179 + C31607 * C721 + C32725 * C726) *
                       C3603 +
                   (C31613 * C1041 + C17823 * C1051 + C31599 * C273 +
                    C32732 * C287 + C31607 * C270 + C32725 * C286) *
                       C32926 +
                   (C31613 * C1033 + C17823 * C1042 + C31599 * C257 +
                    C32732 * C272 + C31607 * C256 + C32725 * C271) *
                       C3602) *
                      C15873) *
                     C32644 * C249 +
                 (((C31607 * C257 + C32725 * C272 + C31599 * C1033 +
                    C32732 * C1042 + C31613 * C1034 + C17823 * C1043) *
                       C3602 +
                   (C31607 * C273 + C32725 * C287 + C31599 * C1041 +
                    C32732 * C1051 + C31613 * C1044 + C17823 * C1052) *
                       C32926 +
                   (C31607 * C1167 + C32725 * C1179 + C31599 * C1719 +
                    C32732 * C1722 + C31613 * C6476 + C17823 * C6480) *
                       C3603 +
                   (C31607 * C1178 + C32725 * C1194 + C31599 * C1723 +
                    C32732 * C1728 + C31613 * C6479 + C17823 * C6485) *
                       C32771) *
                      C15873 +
                  ((C31607 * C258 + C32725 * C274 + C31599 * C1032 +
                    C32732 * C1040 + C31613 * C1035 + C17823 * C1045) *
                       C3602 +
                   (C31607 * C275 + C32725 * C288 + C31599 * C1039 +
                    C32732 * C1050 + C31613 * C1046 + C17823 * C1053) *
                       C32926 +
                   (C31607 * C1166 + C32725 * C1177 + C31599 * C1720 +
                    C32732 * C1724 + C31613 * C6656 + C17823 * C6657) *
                       C3603 +
                   (C31607 * C1176 + C32725 * C1193 + C31599 * C1725 +
                    C32732 * C1729 + C31613 * C6658 + C17823 * C6659) *
                       C32771) *
                      C32595) *
                     C32644 * C250) *
                C32618) /
                   (p * q * std::sqrt(p + q));
    d2ee[10] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C15875 * C115 + C32998 * C122 + C15876 * C256 + C32994 * C271 +
              C15877 * C257 + C32984 * C272 + C15878 * C1033 + C32966 * C1042) *
                 C114 +
             (C15875 * C123 + C32998 * C136 + C15876 * C270 + C32994 * C286 +
              C15877 * C273 + C32984 * C287 + C15878 * C1041 + C32966 * C1051) *
                 C32684) *
                C15873 +
            ((C15912 + C15913 + C15914 + C15915) * C114 +
             (C15916 + C15917 + C15918 + C15919) * C32684) *
                C32595) *
               C32644 * C479 -
           (((C16270 + C16271 + C16272 + C16273) * C32684 +
             (C16274 + C16275 + C16276 + C16277) * C114) *
                C32595 +
            ((C15878 * C1044 + C32966 * C1052 + C15877 * C1041 +
              C32984 * C1051 + C15876 * C273 + C32994 * C287 + C15875 * C270 +
              C32998 * C286) *
                 C32684 +
             (C15878 * C1034 + C32966 * C1043 + C15877 * C1033 +
              C32984 * C1042 + C15876 * C257 + C32994 * C272 + C15875 * C256 +
              C32998 * C271) *
                 C114) *
                C15873) *
               C32644 * C480) *
              C481 +
          ((((C16277 + C16276 + C16275 + C16274) * C114 +
             (C16273 + C16272 + C16271 + C16270) * C32684) *
                C15873 +
            ((C15875 * C254 + C32998 * C267 + C15876 * C259 + C32994 * C276 +
              C15877 * C1031 + C32984 * C1038 + C15878 * C1036 +
              C32966 * C1047) *
                 C114 +
             (C15875 * C266 + C32998 * C284 + C15876 * C277 + C32994 * C289 +
              C15877 * C1037 + C32984 * C1049 + C15878 * C1048 +
              C32966 * C1054) *
                 C32684) *
                C32595) *
               C32644 * C480 -
           (((C15920 + C15921 + C15922 + C15923) * C32684 +
             (C15924 + C15925 + C15926 + C15927) * C114) *
                C32595 +
            ((C15919 + C15918 + C15917 + C15916) * C32684 +
             (C15915 + C15914 + C15913 + C15912) * C114) *
                C15873) *
               C32644 * C479) *
              C482)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C15053 * C115 + C15047 * C122 + C15054 * C256 + C32729 * C271) *
                 C114 +
             (C15053 * C123 + C15047 * C136 + C15054 * C270 + C32729 * C286) *
                 C32684) *
                C32997 +
            ((C15088 + C15089) * C114 + (C15090 + C15091) * C32684) * C32990 +
            C15112 * C32977 + C15113 * C32960) *
               C32644 * C479 -
           (((C15464 + C15465) * C32684 + (C15466 + C15467) * C114) * C32960 +
            ((C15468 + C15469) * C32684 + (C15470 + C15471) * C114) * C32977 +
            ((C15472 + C15473) * C32684 + (C15474 + C15475) * C114) * C32990 +
            ((C15054 * C273 + C32729 * C287 + C15053 * C270 + C15047 * C286) *
                 C32684 +
             (C15054 * C257 + C32729 * C272 + C15053 * C256 + C15047 * C271) *
                 C114) *
                C32997) *
               C32644 * C480) *
              C481 +
          ((((C15475 + C15474) * C114 + (C15473 + C15472) * C32684) * C32997 +
            ((C15471 + C15470) * C114 + (C15469 + C15468) * C32684) * C32990 +
            ((C15467 + C15466) * C114 + (C15465 + C15464) * C32684) * C32977 +
            ((C15053 * C252 + C15047 * C263 + C15054 * C261 + C32729 * C280) *
                 C114 +
             (C15053 * C262 + C15047 * C282 + C15054 * C281 + C32729 * C291) *
                 C32684) *
                C32960) *
               C32644 * C480 -
           (((C15100 + C15101) * C32684 + (C15102 + C15103) * C114) * C32960 +
            ((C15099 + C15098) * C32684 + (C15097 + C15096) * C114) * C32977 +
            ((C15095 + C15094) * C32684 + (C15093 + C15092) * C114) * C32990 +
            ((C15091 + C15090) * C32684 + (C15089 + C15088) * C114) * C32997) *
               C32644 * C479) *
              C482)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C15053 * C115 + C15047 * C122 + C15054 * C256 + C32729 * C271) *
                 C1844 +
             (C15053 * C123 + C15047 * C136 + C15054 * C270 + C32729 * C286) *
                 C32992 +
             (C17058 + C17059) * C1845 + (C17060 + C17061) * C32981 +
             C17074 * C1846 + C17075 * C32959) *
                C15873 +
            ((C15088 + C15089) * C1844 + (C15090 + C15091) * C32992 +
             (C15641 + C15640) * C1845 + (C15639 + C15638) * C32981 +
             C17040 * C1846 + C17041 * C32959) *
                C32595) *
               C32644 * C479 -
           (((C17286 + C17287) * C32959 + (C17288 + C17289) * C1846 +
             (C17290 + C17291) * C32981 + (C17292 + C17293) * C1845 +
             (C15472 + C15473) * C32992 + (C15474 + C15475) * C1844) *
                C32595 +
            ((C15054 * C1183 + C32729 * C1196 + C15053 * C1182 +
              C15047 * C1195) *
                 C32959 +
             (C15054 * C1169 + C32729 * C1181 + C15053 * C1168 +
              C15047 * C1180) *
                 C1846 +
             (C15054 * C1178 + C32729 * C1194 + C15053 * C727 + C15047 * C736) *
                 C32981 +
             (C15054 * C1167 + C32729 * C1179 + C15053 * C721 + C15047 * C726) *
                 C1845 +
             (C15054 * C273 + C32729 * C287 + C15053 * C270 + C15047 * C286) *
                 C32992 +
             (C15054 * C257 + C32729 * C272 + C15053 * C256 + C15047 * C271) *
                 C1844) *
                C15873) *
               C32644 * C480) *
              C481 +
          ((((C15475 + C15474) * C1844 + (C15473 + C15472) * C32992 +
             (C17293 + C17292) * C1845 + (C17291 + C17290) * C32981 +
             (C17289 + C17288) * C1846 + (C17287 + C17286) * C32959) *
                C15873 +
            ((C15471 + C15470) * C1844 + (C15469 + C15468) * C32992 +
             (C15053 * C723 + C15047 * C730 + C15054 * C1165 + C32729 * C1175) *
                 C1845 +
             (C15053 * C731 + C15047 * C738 + C15054 * C1174 + C32729 * C1192) *
                 C32981 +
             (C15053 * C1172 + C15047 * C1188 + C15054 * C1173 +
              C32729 * C1189) *
                 C1846 +
             (C15053 * C1190 + C15047 * C1199 + C15054 * C1191 +
              C32729 * C1200) *
                 C32959) *
                C32595) *
               C32644 * C480 -
           (((C16728 + C16729) * C32959 + (C16730 + C16731) * C1846 +
             (C15634 + C15635) * C32981 + (C15636 + C15637) * C1845 +
             (C15095 + C15094) * C32992 + (C15093 + C15092) * C1844) *
                C32595 +
            ((C16727 + C16726) * C32959 + (C16725 + C16724) * C1846 +
             (C15638 + C15639) * C32981 + (C15640 + C15641) * C1845 +
             (C15091 + C15090) * C32992 + (C15089 + C15088) * C1844) *
                C15873) *
               C32644 * C479) *
              C482)) /
            (p * q * std::sqrt(p + q));
    d2ee[11] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C15875 * C115 + C32998 * C122 + C15876 * C256 + C32994 * C271 +
              C15877 * C257 + C32984 * C272 + C15878 * C1033 + C32966 * C1042) *
                 C114 +
             (C15875 * C123 + C32998 * C136 + C15876 * C270 + C32994 * C286 +
              C15877 * C273 + C32984 * C287 + C15878 * C1041 + C32966 * C1051) *
                 C32684) *
                C15873 +
            ((C15912 + C15913 + C15914 + C15915) * C114 +
             (C15916 + C15917 + C15918 + C15919) * C32684) *
                C32595) *
               C601 -
           (((C16424 + C16425 + C16426 + C16427) * C32684 +
             (C16428 + C16429 + C16430 + C16431) * C114) *
                C32595 +
            ((C15878 * C1723 + C32966 * C1728 + C15877 * C1178 +
              C32984 * C1194 + C15876 * C727 + C32994 * C736 + C15875 * C375 +
              C32998 * C391) *
                 C32684 +
             (C15878 * C1719 + C32966 * C1722 + C15877 * C1167 +
              C32984 * C1179 + C15876 * C721 + C32994 * C726 + C15875 * C361 +
              C32998 * C376) *
                 C114) *
                C15873) *
               C602) *
              C479 +
          ((((C15875 * C721 + C32998 * C726 + C15876 * C1167 + C32994 * C1179 +
              C15877 * C1719 + C32984 * C1722 + C15878 * C6476 +
              C32966 * C6480) *
                 C114 +
             (C15875 * C727 + C32998 * C736 + C15876 * C1178 + C32994 * C1194 +
              C15877 * C1723 + C32984 * C1728 + C15878 * C6479 +
              C32966 * C6485) *
                 C32684) *
                C15873 +
            ((C15875 * C722 + C32998 * C728 + C15876 * C1166 + C32994 * C1177 +
              C15877 * C1720 + C32984 * C1724 + C15878 * C6656 +
              C32966 * C6657) *
                 C114 +
             (C15875 * C729 + C32998 * C737 + C15876 * C1176 + C32994 * C1193 +
              C15877 * C1725 + C32984 * C1729 + C15878 * C6658 +
              C32966 * C6659) *
                 C32684) *
                C32595) *
               C602 -
           (((C16270 + C16271 + C16272 + C16273) * C32684 +
             (C16274 + C16275 + C16276 + C16277) * C114) *
                C32595 +
            ((C15878 * C1044 + C32966 * C1052 + C15877 * C1041 +
              C32984 * C1051 + C15876 * C273 + C32994 * C287 + C15875 * C270 +
              C32998 * C286) *
                 C32684 +
             (C15878 * C1034 + C32966 * C1043 + C15877 * C1033 +
              C32984 * C1042 + C15876 * C257 + C32994 * C272 + C15875 * C256 +
              C32998 * C271) *
                 C114) *
                C15873) *
               C601) *
              C480) *
         C32618) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C15053 * C115 + C15047 * C122 + C15054 * C256 + C32729 * C271) *
                 C114 +
             (C15053 * C123 + C15047 * C136 + C15054 * C270 + C32729 * C286) *
                 C32684) *
                C32997 +
            ((C15088 + C15089) * C114 + (C15090 + C15091) * C32684) * C32990 +
            C15112 * C32977 + C15113 * C32960) *
               C601 -
           (((C15630 + C15631) * C32684 + (C15632 + C15633) * C114) * C32960 +
            ((C15634 + C15635) * C32684 + (C15636 + C15637) * C114) * C32977 +
            ((C15638 + C15639) * C32684 + (C15640 + C15641) * C114) * C32990 +
            ((C15054 * C727 + C32729 * C736 + C15053 * C375 + C15047 * C391) *
                 C32684 +
             (C15054 * C721 + C32729 * C726 + C15053 * C361 + C15047 * C376) *
                 C114) *
                C32997) *
               C602) *
              C479 +
          ((((C15053 * C721 + C15047 * C726 + C15054 * C1167 + C32729 * C1179) *
                 C114 +
             (C15053 * C727 + C15047 * C736 + C15054 * C1178 + C32729 * C1194) *
                 C32684) *
                C32997 +
            ((C15053 * C722 + C15047 * C728 + C15054 * C1166 + C32729 * C1177) *
                 C114 +
             (C15053 * C729 + C15047 * C737 + C15054 * C1176 + C32729 * C1193) *
                 C32684) *
                C32990 +
            ((C15053 * C723 + C15047 * C730 + C15054 * C1165 + C32729 * C1175) *
                 C114 +
             (C15053 * C731 + C15047 * C738 + C15054 * C1174 + C32729 * C1192) *
                 C32684) *
                C32977 +
            ((C15053 * C724 + C15047 * C732 + C15054 * C1533 + C32729 * C1534) *
                 C114 +
             (C15053 * C733 + C15047 * C739 + C15054 * C1535 + C32729 * C1536) *
                 C32684) *
                C32960) *
               C602 -
           (((C15464 + C15465) * C32684 + (C15466 + C15467) * C114) * C32960 +
            ((C15468 + C15469) * C32684 + (C15470 + C15471) * C114) * C32977 +
            ((C15472 + C15473) * C32684 + (C15474 + C15475) * C114) * C32990 +
            ((C15054 * C273 + C32729 * C287 + C15053 * C270 + C15047 * C286) *
                 C32684 +
             (C15054 * C257 + C32729 * C272 + C15053 * C256 + C15047 * C271) *
                 C114) *
                C32997) *
               C601) *
              C480) *
         C32618) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C15053 * C115 + C15047 * C122 + C15054 * C256 + C32729 * C271) *
                 C1844 +
             (C15053 * C123 + C15047 * C136 + C15054 * C270 + C32729 * C286) *
                 C32992 +
             (C17058 + C17059) * C1845 + (C17060 + C17061) * C32981 +
             C17074 * C1846 + C17075 * C32959) *
                C15873 +
            ((C15088 + C15089) * C1844 + (C15090 + C15091) * C32992 +
             C17488 * C1845 + C17489 * C32981 + C17040 * C1846 +
             C17041 * C32959) *
                C32595) *
               C601 -
           (((C17066 + C17067) * C32959 + (C17068 + C17069) * C1846 +
             C17490 * C32981 + C17491 * C1845 + C17492 * C32992 +
             C17493 * C1844) *
                C32595 +
            ((C17070 + C17071) * C32959 + (C17072 + C17073) * C1846 +
             (C17065 + C17064) * C32981 + (C17063 + C17062) * C1845 +
             (C17061 + C17060) * C32992 + (C17059 + C17058) * C1844) *
                C15873) *
               C602) *
              C479 +
          ((((C17704 + C17705) * C1844 + (C17706 + C17707) * C32992 +
             (C17708 + C17709) * C1845 + (C17710 + C17711) * C32981 +
             (C15053 * C2656 + C15047 * C2659 + C15054 * C7076 +
              C32729 * C7080) *
                 C1846 +
             (C15053 * C2660 + C15047 * C2665 + C15054 * C7079 +
              C32729 * C7085) *
                 C32959) *
                C15873 +
            ((C17293 + C17292) * C1844 + (C17291 + C17290) * C32992 +
             (C17289 + C17288) * C1845 + (C17287 + C17286) * C32981 +
             (C15053 * C2657 + C15047 * C2661 + C15054 * C7442 +
              C32729 * C7443) *
                 C1846 +
             (C15053 * C2662 + C15047 * C2666 + C15054 * C7444 +
              C32729 * C7445) *
                 C32959) *
                C32595) *
               C602 -
           (((C17286 + C17287) * C32959 + (C17288 + C17289) * C1846 +
             (C17290 + C17291) * C32981 + (C17292 + C17293) * C1845 +
             (C15472 + C15473) * C32992 + (C15474 + C15475) * C1844) *
                C32595 +
            ((C17711 + C17710) * C32959 + (C17709 + C17708) * C1846 +
             (C17707 + C17706) * C32981 + (C17705 + C17704) * C1845 +
             (C15054 * C273 + C32729 * C287 + C15053 * C270 + C15047 * C286) *
                 C32992 +
             (C15054 * C257 + C32729 * C272 + C15053 * C256 + C15047 * C271) *
                 C1844) *
                C15873) *
               C601) *
              C480) *
         C32618) /
            (p * q * std::sqrt(p + q));
    d2ee[12] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C15053 * C115 + C15047 * C122 + C15054 * C256 +
                 C32729 * C271) *
                    C114 +
                (C15053 * C123 + C15047 * C136 + C15054 * C270 +
                 C32729 * C286) *
                    C32684) *
                   C32997 +
               ((C15088 + C15089) * C114 + (C15090 + C15091) * C32684) *
                   C32990 +
               C15112 * C32977 + C15113 * C32960) *
                  C32644 * C32630 * C110 -
              (((C15100 + C15101) * C32684 + (C15102 + C15103) * C114) *
                   C32960 +
               ((C15099 + C15098) * C32684 + (C15097 + C15096) * C114) *
                   C32977 +
               ((C15095 + C15094) * C32684 + (C15093 + C15092) * C114) *
                   C32990 +
               ((C15091 + C15090) * C32684 + (C15089 + C15088) * C114) *
                   C32997) *
                  C32644 * C32630 * C111 +
              (C15112 * C32997 + C15113 * C32990 +
               ((C15103 + C15102) * C114 + (C15101 + C15100) * C32684) *
                   C32977 +
               ((C15053 * C120 + C15047 * C133 + C15054 * C483 +
                 C32729 * C484) *
                    C114 +
                (C15053 * C132 + C15047 * C141 + C15054 * C485 +
                 C32729 * C486) *
                    C32684) *
                   C32960) *
                  C32644 * C32630 * C112) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C15053 * C115 + C15047 * C122 + C15054 * C256 +
                 C32729 * C271) *
                    C114 +
                (C15053 * C123 + C15047 * C136 + C15054 * C270 +
                 C32729 * C286) *
                    C32684) *
                   C32997 +
               ((C15088 + C15089) * C114 + (C15090 + C15091) * C32684) *
                   C32990 +
               C15112 * C32977 + C15113 * C32960) *
                  C32644 * C248 -
              (((C15054 * C279 + C32729 * C290 + C15053 * C264 +
                 C15047 * C283) *
                    C32684 +
                (C15054 * C260 + C32729 * C278 + C15053 * C253 +
                 C15047 * C265) *
                    C114) *
                   C32960 +
               ((C15054 * C277 + C32729 * C289 + C15053 * C266 +
                 C15047 * C284) *
                    C32684 +
                (C15054 * C259 + C32729 * C276 + C15053 * C254 +
                 C15047 * C267) *
                    C114) *
                   C32977 +
               ((C15054 * C275 + C32729 * C288 + C15053 * C268 +
                 C15047 * C285) *
                    C32684 +
                (C15054 * C258 + C32729 * C274 + C15053 * C255 +
                 C15047 * C269) *
                    C114) *
                   C32990 +
               ((C15054 * C273 + C32729 * C287 + C15053 * C270 +
                 C15047 * C286) *
                    C32684 +
                (C15054 * C257 + C32729 * C272 + C15053 * C256 +
                 C15047 * C271) *
                    C114) *
                   C32997) *
                  C32644 * C249 +
              (((C15053 * C257 + C15047 * C272 + C15054 * C1033 +
                 C32729 * C1042) *
                    C114 +
                (C15053 * C273 + C15047 * C287 + C15054 * C1041 +
                 C32729 * C1051) *
                    C32684) *
                   C32997 +
               ((C15053 * C258 + C15047 * C274 + C15054 * C1032 +
                 C32729 * C1040) *
                    C114 +
                (C15053 * C275 + C15047 * C288 + C15054 * C1039 +
                 C32729 * C1050) *
                    C32684) *
                   C32990 +
               ((C15053 * C259 + C15047 * C276 + C15054 * C1031 +
                 C32729 * C1038) *
                    C114 +
                (C15053 * C277 + C15047 * C289 + C15054 * C1037 +
                 C32729 * C1049) *
                    C32684) *
                   C32977 +
               ((C15053 * C260 + C15047 * C278 + C15054 * C1347 +
                 C32729 * C1348) *
                    C114 +
                (C15053 * C279 + C15047 * C290 + C15054 * C1349 +
                 C32729 * C1350) *
                    C32684) *
                   C32960) *
                  C32644 * C250) *
             C32618) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C15053 * C115 + C15047 * C122 + C15054 * C256 + C32729 * C271) *
                C114 +
            (C15053 * C123 + C15047 * C136 + C15054 * C270 + C32729 * C286) *
                C32684) *
               C32997 +
           ((C15088 + C15089) * C114 + (C15090 + C15091) * C32684) * C32990 +
           C15112 * C32977 + C15113 * C32960) *
              C354 -
          (((C15054 * C733 + C32729 * C739 + C15053 * C369 + C15047 * C388) *
                C32684 +
            (C15054 * C724 + C32729 * C732 + C15053 * C358 + C15047 * C370) *
                C114) *
               C32960 +
           ((C15054 * C731 + C32729 * C738 + C15053 * C371 + C15047 * C389) *
                C32684 +
            (C15054 * C723 + C32729 * C730 + C15053 * C359 + C15047 * C372) *
                C114) *
               C32977 +
           ((C15054 * C729 + C32729 * C737 + C15053 * C373 + C15047 * C390) *
                C32684 +
            (C15054 * C722 + C32729 * C728 + C15053 * C360 + C15047 * C374) *
                C114) *
               C32990 +
           ((C15054 * C727 + C32729 * C736 + C15053 * C375 + C15047 * C391) *
                C32684 +
            (C15054 * C721 + C32729 * C726 + C15053 * C361 + C15047 * C376) *
                C114) *
               C32997) *
              C355 +
          (((C15053 * C362 + C15047 * C377 + C15054 * C1168 + C32729 * C1180) *
                C114 +
            (C15053 * C378 + C15047 * C392 + C15054 * C1182 + C32729 * C1195) *
                C32684) *
               C32997 +
           ((C15053 * C363 + C15047 * C379 + C15054 * C1170 + C32729 * C1184) *
                C114 +
            (C15053 * C380 + C15047 * C393 + C15054 * C1186 + C32729 * C1197) *
                C32684) *
               C32990 +
           ((C15053 * C364 + C15047 * C381 + C15054 * C1172 + C32729 * C1188) *
                C114 +
            (C15053 * C382 + C15047 * C394 + C15054 * C1190 + C32729 * C1199) *
                C32684) *
               C32977 +
           ((C15053 * C365 + C15047 * C383 + C15054 * C2308 + C32729 * C2309) *
                C114 +
            (C15053 * C384 + C15047 * C395 + C15054 * C2310 + C32729 * C2311) *
                C32684) *
               C32960) *
              C356) *
         C32630 * C32618) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C15875 * C115 + C32998 * C122 + C15876 * C256 + C32994 * C271 +
             C15877 * C257 + C32984 * C272 + C15878 * C1033 + C32966 * C1042) *
                C114 +
            (C15875 * C123 + C32998 * C136 + C15876 * C270 + C32994 * C286 +
             C15877 * C273 + C32984 * C287 + C15878 * C1041 + C32966 * C1051) *
                C32684) *
               C15873 +
           ((C15912 + C15913 + C15914 + C15915) * C114 +
            (C15916 + C15917 + C15918 + C15919) * C32684) *
               C32595) *
              C32644 * C32630 * C110 -
          (((C15920 + C15921 + C15922 + C15923) * C32684 +
            (C15924 + C15925 + C15926 + C15927) * C114) *
               C32595 +
           ((C15919 + C15918 + C15917 + C15916) * C32684 +
            (C15915 + C15914 + C15913 + C15912) * C114) *
               C15873) *
              C32644 * C32630 * C111 +
          (((C15927 + C15926 + C15925 + C15924) * C114 +
            (C15923 + C15922 + C15921 + C15920) * C32684) *
               C15873 +
           ((C15875 * C118 + C32998 * C128 + C15876 * C253 + C32994 * C265 +
             C15877 * C260 + C32984 * C278 + C15878 * C1347 + C32966 * C1348) *
                C114 +
            (C15875 * C129 + C32998 * C139 + C15876 * C264 + C32994 * C283 +
             C15877 * C279 + C32984 * C290 + C15878 * C1349 + C32966 * C1350) *
                C32684) *
               C32595) *
              C32644 * C32630 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C15875 * C115 + C32998 * C122 + C15876 * C256 + C32994 * C271 +
             C15877 * C257 + C32984 * C272 + C15878 * C1033 + C32966 * C1042) *
                C114 +
            (C15875 * C123 + C32998 * C136 + C15876 * C270 + C32994 * C286 +
             C15877 * C273 + C32984 * C287 + C15878 * C1041 + C32966 * C1051) *
                C32684) *
               C15873 +
           ((C15912 + C15913 + C15914 + C15915) * C114 +
            (C15916 + C15917 + C15918 + C15919) * C32684) *
               C32595) *
              C32644 * C248 -
          (((C15878 * C1046 + C32966 * C1053 + C15877 * C1039 + C32984 * C1050 +
             C15876 * C275 + C32994 * C288 + C15875 * C268 + C32998 * C285) *
                C32684 +
            (C15878 * C1035 + C32966 * C1045 + C15877 * C1032 + C32984 * C1040 +
             C15876 * C258 + C32994 * C274 + C15875 * C255 + C32998 * C269) *
                C114) *
               C32595 +
           ((C15878 * C1044 + C32966 * C1052 + C15877 * C1041 + C32984 * C1051 +
             C15876 * C273 + C32994 * C287 + C15875 * C270 + C32998 * C286) *
                C32684 +
            (C15878 * C1034 + C32966 * C1043 + C15877 * C1033 + C32984 * C1042 +
             C15876 * C257 + C32994 * C272 + C15875 * C256 + C32998 * C271) *
                C114) *
               C15873) *
              C32644 * C249 +
          (((C15875 * C257 + C32998 * C272 + C15876 * C1033 + C32994 * C1042 +
             C15877 * C1034 + C32984 * C1043 + C15878 * C6406 +
             C32966 * C6409) *
                C114 +
            (C15875 * C273 + C32998 * C287 + C15876 * C1041 + C32994 * C1051 +
             C15877 * C1044 + C32984 * C1052 + C15878 * C6408 +
             C32966 * C6412) *
                C32684) *
               C15873 +
           ((C15875 * C258 + C32998 * C274 + C15876 * C1032 + C32994 * C1040 +
             C15877 * C1035 + C32984 * C1045 + C15878 * C6570 +
             C32966 * C6571) *
                C114 +
            (C15875 * C275 + C32998 * C288 + C15876 * C1039 + C32994 * C1050 +
             C15877 * C1046 + C32984 * C1053 + C15878 * C6572 +
             C32966 * C6573) *
                C32684) *
               C32595) *
              C32644 * C250) *
         C32618) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C15875 * C115 + C32998 * C122 + C15876 * C256 + C32994 * C271 +
             C15877 * C257 + C32984 * C272 + C15878 * C1033 + C32966 * C1042) *
                C114 +
            (C15875 * C123 + C32998 * C136 + C15876 * C270 + C32994 * C286 +
             C15877 * C273 + C32984 * C287 + C15878 * C1041 + C32966 * C1051) *
                C32684) *
               C15873 +
           ((C15912 + C15913 + C15914 + C15915) * C114 +
            (C15916 + C15917 + C15918 + C15919) * C32684) *
               C32595) *
              C354 -
          (((C15878 * C1725 + C32966 * C1729 + C15877 * C1176 + C32984 * C1193 +
             C15876 * C729 + C32994 * C737 + C15875 * C373 + C32998 * C390) *
                C32684 +
            (C15878 * C1720 + C32966 * C1724 + C15877 * C1166 + C32984 * C1177 +
             C15876 * C722 + C32994 * C728 + C15875 * C360 + C32998 * C374) *
                C114) *
               C32595 +
           ((C15878 * C1723 + C32966 * C1728 + C15877 * C1178 + C32984 * C1194 +
             C15876 * C727 + C32994 * C736 + C15875 * C375 + C32998 * C391) *
                C32684 +
            (C15878 * C1719 + C32966 * C1722 + C15877 * C1167 + C32984 * C1179 +
             C15876 * C721 + C32994 * C726 + C15875 * C361 + C32998 * C376) *
                C114) *
               C15873) *
              C355 +
          (((C15875 * C362 + C32998 * C377 + C15876 * C1168 + C32994 * C1180 +
             C15877 * C1169 + C32984 * C1181 + C15878 * C6477 +
             C32966 * C6481) *
                C114 +
            (C15875 * C378 + C32998 * C392 + C15876 * C1182 + C32994 * C1195 +
             C15877 * C1183 + C32984 * C1196 + C15878 * C6483 +
             C32966 * C6486) *
                C32684) *
               C15873 +
           ((C15875 * C363 + C32998 * C379 + C15876 * C1170 + C32994 * C1184 +
             C15877 * C1171 + C32984 * C1185 + C15878 * C7292 +
             C32966 * C7293) *
                C114 +
            (C15875 * C380 + C32998 * C393 + C15876 * C1186 + C32994 * C1197 +
             C15877 * C1187 + C32984 * C1198 + C15878 * C7294 +
             C32966 * C7295) *
                C32684) *
               C32595) *
              C356) *
         C32630 * C32618) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C15053 * C115 + C15047 * C122 + C15054 * C256 + C32729 * C271) *
                C1844 +
            (C15053 * C123 + C15047 * C136 + C15054 * C270 + C32729 * C286) *
                C32992 +
            (C15053 * C361 + C15047 * C376 + C15054 * C721 + C32729 * C726) *
                C1845 +
            (C15053 * C375 + C15047 * C391 + C15054 * C727 + C32729 * C736) *
                C32981 +
            (C15053 * C362 + C15047 * C377 + C15054 * C1168 + C32729 * C1180) *
                C1846 +
            (C15053 * C378 + C15047 * C392 + C15054 * C1182 + C32729 * C1195) *
                C32959) *
               C15873 +
           ((C15088 + C15089) * C1844 + (C15090 + C15091) * C32992 +
            (C15641 + C15640) * C1845 + (C15639 + C15638) * C32981 +
            (C16724 + C16725) * C1846 + (C16726 + C16727) * C32959) *
               C32595) *
              C32644 * C32630 * C110 -
          (((C16728 + C16729) * C32959 + (C16730 + C16731) * C1846 +
            (C15634 + C15635) * C32981 + (C15636 + C15637) * C1845 +
            (C15095 + C15094) * C32992 + (C15093 + C15092) * C1844) *
               C32595 +
           ((C16727 + C16726) * C32959 + (C16725 + C16724) * C1846 +
            (C15638 + C15639) * C32981 + (C15640 + C15641) * C1845 +
            (C15091 + C15090) * C32992 + (C15089 + C15088) * C1844) *
               C15873) *
              C32644 * C32630 * C111 +
          ((C15104 * C1844 + C15105 * C32992 + (C15637 + C15636) * C1845 +
            (C15635 + C15634) * C32981 + (C16731 + C16730) * C1846 +
            (C16729 + C16728) * C32959) *
               C15873 +
           (C15106 * C1844 + C15107 * C32992 + (C15633 + C15632) * C1845 +
            (C15631 + C15630) * C32981 +
            (C15053 * C365 + C15047 * C383 + C15054 * C2308 + C32729 * C2309) *
                C1846 +
            (C15053 * C384 + C15047 * C395 + C15054 * C2310 + C32729 * C2311) *
                C32959) *
               C32595) *
              C32644 * C32630 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C15053 * C115 + C15047 * C122 + C15054 * C256 + C32729 * C271) *
                C1844 +
            (C15053 * C123 + C15047 * C136 + C15054 * C270 + C32729 * C286) *
                C32992 +
            (C15053 * C361 + C15047 * C376 + C15054 * C721 + C32729 * C726) *
                C1845 +
            (C15053 * C375 + C15047 * C391 + C15054 * C727 + C32729 * C736) *
                C32981 +
            (C15053 * C362 + C15047 * C377 + C15054 * C1168 + C32729 * C1180) *
                C1846 +
            (C15053 * C378 + C15047 * C392 + C15054 * C1182 + C32729 * C1195) *
                C32959) *
               C15873 +
           ((C15088 + C15089) * C1844 + (C15090 + C15091) * C32992 +
            (C15641 + C15640) * C1845 + (C15639 + C15638) * C32981 +
            (C16724 + C16725) * C1846 + (C16726 + C16727) * C32959) *
               C32595) *
              C32644 * C248 -
          (((C15054 * C1187 + C32729 * C1198 + C15053 * C1186 +
             C15047 * C1197) *
                C32959 +
            (C15054 * C1171 + C32729 * C1185 + C15053 * C1170 +
             C15047 * C1184) *
                C1846 +
            (C15054 * C1176 + C32729 * C1193 + C15053 * C729 + C15047 * C737) *
                C32981 +
            (C15054 * C1166 + C32729 * C1177 + C15053 * C722 + C15047 * C728) *
                C1845 +
            (C15472 + C15473) * C32992 + (C15474 + C15475) * C1844) *
               C32595 +
           ((C15054 * C1183 + C32729 * C1196 + C15053 * C1182 +
             C15047 * C1195) *
                C32959 +
            (C15054 * C1169 + C32729 * C1181 + C15053 * C1168 +
             C15047 * C1180) *
                C1846 +
            (C15054 * C1178 + C32729 * C1194 + C15053 * C727 + C15047 * C736) *
                C32981 +
            (C15054 * C1167 + C32729 * C1179 + C15053 * C721 + C15047 * C726) *
                C1845 +
            (C15054 * C273 + C32729 * C287 + C15053 * C270 + C15047 * C286) *
                C32992 +
            (C15054 * C257 + C32729 * C272 + C15053 * C256 + C15047 * C271) *
                C1844) *
               C15873) *
              C32644 * C249 +
          (((C15053 * C257 + C15047 * C272 + C15054 * C1033 + C32729 * C1042) *
                C1844 +
            (C15053 * C273 + C15047 * C287 + C15054 * C1041 + C32729 * C1051) *
                C32992 +
            (C15053 * C1167 + C15047 * C1179 + C15054 * C1719 +
             C32729 * C1722) *
                C1845 +
            (C15053 * C1178 + C15047 * C1194 + C15054 * C1723 +
             C32729 * C1728) *
                C32981 +
            (C15053 * C1169 + C15047 * C1181 + C15054 * C6477 +
             C32729 * C6481) *
                C1846 +
            (C15053 * C1183 + C15047 * C1196 + C15054 * C6483 +
             C32729 * C6486) *
                C32959) *
               C15873 +
           ((C15053 * C258 + C15047 * C274 + C15054 * C1032 + C32729 * C1040) *
                C1844 +
            (C15053 * C275 + C15047 * C288 + C15054 * C1039 + C32729 * C1050) *
                C32992 +
            (C15053 * C1166 + C15047 * C1177 + C15054 * C1720 +
             C32729 * C1724) *
                C1845 +
            (C15053 * C1176 + C15047 * C1193 + C15054 * C1725 +
             C32729 * C1729) *
                C32981 +
            (C15053 * C1171 + C15047 * C1185 + C15054 * C7292 +
             C32729 * C7293) *
                C1846 +
            (C15053 * C1187 + C15047 * C1198 + C15054 * C7294 +
             C32729 * C7295) *
                C32959) *
               C32595) *
              C32644 * C250) *
         C32618) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C15053 * C115 + C15047 * C122 + C15054 * C256 + C32729 * C271) *
                C1844 +
            (C15053 * C123 + C15047 * C136 + C15054 * C270 + C32729 * C286) *
                C32992 +
            (C17058 + C17059) * C1845 + (C17060 + C17061) * C32981 +
            C17074 * C1846 + C17075 * C32959) *
               C15873 +
           ((C15088 + C15089) * C1844 + (C15090 + C15091) * C32992 +
            (C15641 + C15640) * C1845 + (C15639 + C15638) * C32981 +
            C17040 * C1846 + C17041 * C32959) *
               C32595) *
              C354 -
          (((C17066 + C17067) * C32959 + (C17068 + C17069) * C1846 +
            (C16727 + C16726) * C32981 + (C16725 + C16724) * C1845 +
            (C15638 + C15639) * C32992 + (C15640 + C15641) * C1844) *
               C32595 +
           ((C17070 + C17071) * C32959 + (C17072 + C17073) * C1846 +
            (C17065 + C17064) * C32981 + (C17063 + C17062) * C1845 +
            (C17061 + C17060) * C32992 + (C17059 + C17058) * C1844) *
               C15873) *
              C355 +
          ((C17074 * C1844 + C17075 * C32992 + (C17073 + C17072) * C1845 +
            (C17071 + C17070) * C32981 +
            (C15053 * C2111 + C15047 * C2120 + C15054 * C7077 +
             C32729 * C7081) *
                C1846 +
            (C15053 * C2121 + C15047 * C2129 + C15054 * C7083 +
             C32729 * C7086) *
                C32959) *
               C15873 +
           (C17040 * C1844 + C17041 * C32992 + (C17069 + C17068) * C1845 +
            (C17067 + C17066) * C32981 +
            (C15053 * C2112 + C15047 * C2122 + C15054 * C12241 +
             C32729 * C12242) *
                C1846 +
            (C15053 * C2123 + C15047 * C2130 + C15054 * C12243 +
             C32729 * C12244) *
                C32959) *
               C32595) *
              C356) *
         C32630 * C32618) /
            (p * q * std::sqrt(p + q));
    d2ee[13] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C15875 * C115 + C32998 * C122 + C15876 * C256 + C32994 * C271 +
              C15877 * C257 + C32984 * C272 + C15878 * C1033 + C32966 * C1042) *
                 C114 +
             (C15875 * C123 + C32998 * C136 + C15876 * C270 + C32994 * C286 +
              C15877 * C273 + C32984 * C287 + C15878 * C1041 + C32966 * C1051) *
                 C32684) *
                C15873 +
            ((C15912 + C15913 + C15914 + C15915) * C114 +
             (C15916 + C15917 + C15918 + C15919) * C32684) *
                C32595) *
               C601 -
           (((C16424 + C16425 + C16426 + C16427) * C32684 +
             (C16428 + C16429 + C16430 + C16431) * C114) *
                C32595 +
            ((C15878 * C1723 + C32966 * C1728 + C15877 * C1178 +
              C32984 * C1194 + C15876 * C727 + C32994 * C736 + C15875 * C375 +
              C32998 * C391) *
                 C32684 +
             (C15878 * C1719 + C32966 * C1722 + C15877 * C1167 +
              C32984 * C1179 + C15876 * C721 + C32994 * C726 + C15875 * C361 +
              C32998 * C376) *
                 C114) *
                C15873) *
               C602) *
              C32630 * C481 +
          ((((C16431 + C16430 + C16429 + C16428) * C114 +
             (C16427 + C16426 + C16425 + C16424) * C32684) *
                C15873 +
            ((C15875 * C359 + C32998 * C372 + C15876 * C723 + C32994 * C730 +
              C15877 * C1165 + C32984 * C1175 + C15878 * C1721 +
              C32966 * C1726) *
                 C114 +
             (C15875 * C371 + C32998 * C389 + C15876 * C731 + C32994 * C738 +
              C15877 * C1174 + C32984 * C1192 + C15878 * C1727 +
              C32966 * C1730) *
                 C32684) *
                C32595) *
               C602 -
           (((C15920 + C15921 + C15922 + C15923) * C32684 +
             (C15924 + C15925 + C15926 + C15927) * C114) *
                C32595 +
            ((C15919 + C15918 + C15917 + C15916) * C32684 +
             (C15915 + C15914 + C15913 + C15912) * C114) *
                C15873) *
               C601) *
              C32630 * C482)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C15053 * C115 + C15047 * C122 + C15054 * C256 + C32729 * C271) *
                 C114 +
             (C15053 * C123 + C15047 * C136 + C15054 * C270 + C32729 * C286) *
                 C32684) *
                C32997 +
            ((C15088 + C15089) * C114 + (C15090 + C15091) * C32684) * C32990 +
            C15112 * C32977 + C15113 * C32960) *
               C601 -
           (((C15630 + C15631) * C32684 + (C15632 + C15633) * C114) * C32960 +
            ((C15634 + C15635) * C32684 + (C15636 + C15637) * C114) * C32977 +
            ((C15638 + C15639) * C32684 + (C15640 + C15641) * C114) * C32990 +
            ((C15054 * C727 + C32729 * C736 + C15053 * C375 + C15047 * C391) *
                 C32684 +
             (C15054 * C721 + C32729 * C726 + C15053 * C361 + C15047 * C376) *
                 C114) *
                C32997) *
               C602) *
              C32630 * C481 +
          ((((C15641 + C15640) * C114 + (C15639 + C15638) * C32684) * C32997 +
            ((C15637 + C15636) * C114 + (C15635 + C15634) * C32684) * C32990 +
            ((C15633 + C15632) * C114 + (C15631 + C15630) * C32684) * C32977 +
            ((C15053 * C357 + C15047 * C368 + C15054 * C725 + C32729 * C734) *
                 C114 +
             (C15053 * C367 + C15047 * C387 + C15054 * C735 + C32729 * C740) *
                 C32684) *
                C32960) *
               C602 -
           (((C15100 + C15101) * C32684 + (C15102 + C15103) * C114) * C32960 +
            ((C15099 + C15098) * C32684 + (C15097 + C15096) * C114) * C32977 +
            ((C15095 + C15094) * C32684 + (C15093 + C15092) * C114) * C32990 +
            ((C15091 + C15090) * C32684 + (C15089 + C15088) * C114) * C32997) *
               C601) *
              C32630 * C482)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C15053 * C115 + C15047 * C122 + C15054 * C256 + C32729 * C271) *
                 C1844 +
             (C15053 * C123 + C15047 * C136 + C15054 * C270 + C32729 * C286) *
                 C32992 +
             (C17058 + C17059) * C1845 + (C17060 + C17061) * C32981 +
             C17074 * C1846 + C17075 * C32959) *
                C15873 +
            ((C15088 + C15089) * C1844 + (C15090 + C15091) * C32992 +
             C17488 * C1845 + C17489 * C32981 + C17040 * C1846 +
             C17041 * C32959) *
                C32595) *
               C601 -
           (((C17066 + C17067) * C32959 + (C17068 + C17069) * C1846 +
             C17490 * C32981 + C17491 * C1845 + C17492 * C32992 +
             C17493 * C1844) *
                C32595 +
            ((C17070 + C17071) * C32959 + (C17072 + C17073) * C1846 +
             (C17065 + C17064) * C32981 + (C17063 + C17062) * C1845 +
             (C17061 + C17060) * C32992 + (C17059 + C17058) * C1844) *
                C15873) *
               C602) *
              C32630 * C481 +
          (((C17488 * C1844 + C17489 * C32992 + C17040 * C1845 +
             C17041 * C32981 + (C17069 + C17068) * C1846 +
             (C17067 + C17066) * C32959) *
                C15873 +
            ((C15637 + C15636) * C1844 + (C15635 + C15634) * C32992 +
             (C16731 + C16730) * C1845 + (C16729 + C16728) * C32981 +
             (C15053 * C2108 + C15047 * C2115 + C15054 * C2658 +
              C32729 * C2663) *
                 C1846 +
             (C15053 * C2114 + C15047 * C2126 + C15054 * C2664 +
              C32729 * C2667) *
                 C32959) *
                C32595) *
               C602 -
           (((C16728 + C16729) * C32959 + (C16730 + C16731) * C1846 +
             (C15634 + C15635) * C32981 + (C15636 + C15637) * C1845 +
             (C15095 + C15094) * C32992 + (C15093 + C15092) * C1844) *
                C32595 +
            (C17490 * C32959 + C17491 * C1846 + C17492 * C32981 +
             C17493 * C1845 + (C15091 + C15090) * C32992 +
             (C15089 + C15088) * C1844) *
                C15873) *
               C601) *
              C32630 * C482)) /
            (p * q * std::sqrt(p + q));
    d2ee[14] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C15053 * C115 + C15047 * C122 + C15054 * C256 + C32729 * C271) *
                C114 +
            (C15053 * C123 + C15047 * C136 + C15054 * C270 + C32729 * C286) *
                C32684) *
               C32997 +
           ((C15088 + C15089) * C114 + (C15090 + C15091) * C32684) * C32990 +
           C15112 * C32977 + C15113 * C32960) *
              C32644 * C248 -
          (((C15054 * C279 + C32729 * C290 + C15053 * C264 + C15047 * C283) *
                C32684 +
            (C15054 * C260 + C32729 * C278 + C15053 * C253 + C15047 * C265) *
                C114) *
               C32960 +
           ((C15054 * C277 + C32729 * C289 + C15053 * C266 + C15047 * C284) *
                C32684 +
            (C15054 * C259 + C32729 * C276 + C15053 * C254 + C15047 * C267) *
                C114) *
               C32977 +
           ((C15054 * C275 + C32729 * C288 + C15053 * C268 + C15047 * C285) *
                C32684 +
            (C15054 * C258 + C32729 * C274 + C15053 * C255 + C15047 * C269) *
                C114) *
               C32990 +
           ((C15054 * C273 + C32729 * C287 + C15053 * C270 + C15047 * C286) *
                C32684 +
            (C15054 * C257 + C32729 * C272 + C15053 * C256 + C15047 * C271) *
                C114) *
               C32997) *
              C32644 * C249 +
          (((C15053 * C257 + C15047 * C272 + C15054 * C1033 + C32729 * C1042) *
                C114 +
            (C15053 * C273 + C15047 * C287 + C15054 * C1041 + C32729 * C1051) *
                C32684) *
               C32997 +
           ((C15053 * C258 + C15047 * C274 + C15054 * C1032 + C32729 * C1040) *
                C114 +
            (C15053 * C275 + C15047 * C288 + C15054 * C1039 + C32729 * C1050) *
                C32684) *
               C32990 +
           ((C15053 * C259 + C15047 * C276 + C15054 * C1031 + C32729 * C1038) *
                C114 +
            (C15053 * C277 + C15047 * C289 + C15054 * C1037 + C32729 * C1049) *
                C32684) *
               C32977 +
           ((C15053 * C260 + C15047 * C278 + C15054 * C1347 + C32729 * C1348) *
                C114 +
            (C15053 * C279 + C15047 * C290 + C15054 * C1349 + C32729 * C1350) *
                C32684) *
               C32960) *
              C32644 * C250) *
         C32618) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C15053 * C115 + C15047 * C122 + C15054 * C256 + C32729 * C271) *
                C114 +
            (C15053 * C123 + C15047 * C136 + C15054 * C270 + C32729 * C286) *
                C32684) *
               C32997 +
           ((C15088 + C15089) * C114 + (C15090 + C15091) * C32684) * C32990 +
           C15112 * C32977 + C15113 * C32960) *
              C32644 * C32630 * C110 -
          (((C15100 + C15101) * C32684 + (C15102 + C15103) * C114) * C32960 +
           ((C15099 + C15098) * C32684 + (C15097 + C15096) * C114) * C32977 +
           ((C15095 + C15094) * C32684 + (C15093 + C15092) * C114) * C32990 +
           ((C15091 + C15090) * C32684 + (C15089 + C15088) * C114) * C32997) *
              C32644 * C32630 * C111 +
          (C15112 * C32997 + C15113 * C32990 +
           ((C15103 + C15102) * C114 + (C15101 + C15100) * C32684) * C32977 +
           ((C15053 * C120 + C15047 * C133 + C15054 * C483 + C32729 * C484) *
                C114 +
            (C15053 * C132 + C15047 * C141 + C15054 * C485 + C32729 * C486) *
                C32684) *
               C32960) *
              C32644 * C32630 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C15875 * C115 + C32998 * C122 + C15876 * C256 + C32994 * C271 +
             C15877 * C257 + C32984 * C272 + C15878 * C1033 + C32966 * C1042) *
                C114 +
            (C15875 * C123 + C32998 * C136 + C15876 * C270 + C32994 * C286 +
             C15877 * C273 + C32984 * C287 + C15878 * C1041 + C32966 * C1051) *
                C32684) *
               C15873 +
           ((C15912 + C15913 + C15914 + C15915) * C114 +
            (C15916 + C15917 + C15918 + C15919) * C32684) *
               C32595) *
              C32644 * C32630 * C110 -
          (((C15920 + C15921 + C15922 + C15923) * C32684 +
            (C15924 + C15925 + C15926 + C15927) * C114) *
               C32595 +
           ((C15919 + C15918 + C15917 + C15916) * C32684 +
            (C15915 + C15914 + C15913 + C15912) * C114) *
               C15873) *
              C32644 * C32630 * C111 +
          (((C15927 + C15926 + C15925 + C15924) * C114 +
            (C15923 + C15922 + C15921 + C15920) * C32684) *
               C15873 +
           ((C15875 * C118 + C32998 * C128 + C15876 * C253 + C32994 * C265 +
             C15877 * C260 + C32984 * C278 + C15878 * C1347 + C32966 * C1348) *
                C114 +
            (C15875 * C129 + C32998 * C139 + C15876 * C264 + C32994 * C283 +
             C15877 * C279 + C32984 * C290 + C15878 * C1349 + C32966 * C1350) *
                C32684) *
               C32595) *
              C32644 * C32630 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C15875 * C115 + C32998 * C122 + C15876 * C256 + C32994 * C271 +
             C15877 * C257 + C32984 * C272 + C15878 * C1033 + C32966 * C1042) *
                C114 +
            (C15875 * C123 + C32998 * C136 + C15876 * C270 + C32994 * C286 +
             C15877 * C273 + C32984 * C287 + C15878 * C1041 + C32966 * C1051) *
                C32684) *
               C15873 +
           ((C15912 + C15913 + C15914 + C15915) * C114 +
            (C15916 + C15917 + C15918 + C15919) * C32684) *
               C32595) *
              C32644 * C248 -
          (((C15878 * C1046 + C32966 * C1053 + C15877 * C1039 + C32984 * C1050 +
             C15876 * C275 + C32994 * C288 + C15875 * C268 + C32998 * C285) *
                C32684 +
            (C15878 * C1035 + C32966 * C1045 + C15877 * C1032 + C32984 * C1040 +
             C15876 * C258 + C32994 * C274 + C15875 * C255 + C32998 * C269) *
                C114) *
               C32595 +
           ((C15878 * C1044 + C32966 * C1052 + C15877 * C1041 + C32984 * C1051 +
             C15876 * C273 + C32994 * C287 + C15875 * C270 + C32998 * C286) *
                C32684 +
            (C15878 * C1034 + C32966 * C1043 + C15877 * C1033 + C32984 * C1042 +
             C15876 * C257 + C32994 * C272 + C15875 * C256 + C32998 * C271) *
                C114) *
               C15873) *
              C32644 * C249 +
          (((C15875 * C257 + C32998 * C272 + C15876 * C1033 + C32994 * C1042 +
             C15877 * C1034 + C32984 * C1043 + C15878 * C6406 +
             C32966 * C6409) *
                C114 +
            (C15875 * C273 + C32998 * C287 + C15876 * C1041 + C32994 * C1051 +
             C15877 * C1044 + C32984 * C1052 + C15878 * C6408 +
             C32966 * C6412) *
                C32684) *
               C15873 +
           ((C15875 * C258 + C32998 * C274 + C15876 * C1032 + C32994 * C1040 +
             C15877 * C1035 + C32984 * C1045 + C15878 * C6570 +
             C32966 * C6571) *
                C114 +
            (C15875 * C275 + C32998 * C288 + C15876 * C1039 + C32994 * C1050 +
             C15877 * C1046 + C32984 * C1053 + C15878 * C6572 +
             C32966 * C6573) *
                C32684) *
               C32595) *
              C32644 * C250) *
         C32618) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C15053 * C115 + C15047 * C122 + C15054 * C256 + C32729 * C271) *
                C1844 +
            (C15053 * C123 + C15047 * C136 + C15054 * C270 + C32729 * C286) *
                C32992 +
            (C15053 * C361 + C15047 * C376 + C15054 * C721 + C32729 * C726) *
                C1845 +
            (C15053 * C375 + C15047 * C391 + C15054 * C727 + C32729 * C736) *
                C32981 +
            (C15053 * C362 + C15047 * C377 + C15054 * C1168 + C32729 * C1180) *
                C1846 +
            (C15053 * C378 + C15047 * C392 + C15054 * C1182 + C32729 * C1195) *
                C32959) *
               C15873 +
           ((C15088 + C15089) * C1844 + (C15090 + C15091) * C32992 +
            (C15641 + C15640) * C1845 + (C15639 + C15638) * C32981 +
            (C16724 + C16725) * C1846 + (C16726 + C16727) * C32959) *
               C32595) *
              C32644 * C32630 * C110 -
          (((C16728 + C16729) * C32959 + (C16730 + C16731) * C1846 +
            (C15634 + C15635) * C32981 + (C15636 + C15637) * C1845 +
            (C15095 + C15094) * C32992 + (C15093 + C15092) * C1844) *
               C32595 +
           ((C16727 + C16726) * C32959 + (C16725 + C16724) * C1846 +
            (C15638 + C15639) * C32981 + (C15640 + C15641) * C1845 +
            (C15091 + C15090) * C32992 + (C15089 + C15088) * C1844) *
               C15873) *
              C32644 * C32630 * C111 +
          ((C15104 * C1844 + C15105 * C32992 + (C15637 + C15636) * C1845 +
            (C15635 + C15634) * C32981 + (C16731 + C16730) * C1846 +
            (C16729 + C16728) * C32959) *
               C15873 +
           (C15106 * C1844 + C15107 * C32992 + (C15633 + C15632) * C1845 +
            (C15631 + C15630) * C32981 +
            (C15053 * C365 + C15047 * C383 + C15054 * C2308 + C32729 * C2309) *
                C1846 +
            (C15053 * C384 + C15047 * C395 + C15054 * C2310 + C32729 * C2311) *
                C32959) *
               C32595) *
              C32644 * C32630 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C15053 * C115 + C15047 * C122 + C15054 * C256 + C32729 * C271) *
                C1844 +
            (C15053 * C123 + C15047 * C136 + C15054 * C270 + C32729 * C286) *
                C32992 +
            (C15053 * C361 + C15047 * C376 + C15054 * C721 + C32729 * C726) *
                C1845 +
            (C15053 * C375 + C15047 * C391 + C15054 * C727 + C32729 * C736) *
                C32981 +
            (C15053 * C362 + C15047 * C377 + C15054 * C1168 + C32729 * C1180) *
                C1846 +
            (C15053 * C378 + C15047 * C392 + C15054 * C1182 + C32729 * C1195) *
                C32959) *
               C15873 +
           ((C15088 + C15089) * C1844 + (C15090 + C15091) * C32992 +
            (C15641 + C15640) * C1845 + (C15639 + C15638) * C32981 +
            (C16724 + C16725) * C1846 + (C16726 + C16727) * C32959) *
               C32595) *
              C32644 * C248 -
          (((C15054 * C1187 + C32729 * C1198 + C15053 * C1186 +
             C15047 * C1197) *
                C32959 +
            (C15054 * C1171 + C32729 * C1185 + C15053 * C1170 +
             C15047 * C1184) *
                C1846 +
            (C15054 * C1176 + C32729 * C1193 + C15053 * C729 + C15047 * C737) *
                C32981 +
            (C15054 * C1166 + C32729 * C1177 + C15053 * C722 + C15047 * C728) *
                C1845 +
            (C15472 + C15473) * C32992 + (C15474 + C15475) * C1844) *
               C32595 +
           ((C15054 * C1183 + C32729 * C1196 + C15053 * C1182 +
             C15047 * C1195) *
                C32959 +
            (C15054 * C1169 + C32729 * C1181 + C15053 * C1168 +
             C15047 * C1180) *
                C1846 +
            (C15054 * C1178 + C32729 * C1194 + C15053 * C727 + C15047 * C736) *
                C32981 +
            (C15054 * C1167 + C32729 * C1179 + C15053 * C721 + C15047 * C726) *
                C1845 +
            (C15054 * C273 + C32729 * C287 + C15053 * C270 + C15047 * C286) *
                C32992 +
            (C15054 * C257 + C32729 * C272 + C15053 * C256 + C15047 * C271) *
                C1844) *
               C15873) *
              C32644 * C249 +
          (((C15053 * C257 + C15047 * C272 + C15054 * C1033 + C32729 * C1042) *
                C1844 +
            (C15053 * C273 + C15047 * C287 + C15054 * C1041 + C32729 * C1051) *
                C32992 +
            (C15053 * C1167 + C15047 * C1179 + C15054 * C1719 +
             C32729 * C1722) *
                C1845 +
            (C15053 * C1178 + C15047 * C1194 + C15054 * C1723 +
             C32729 * C1728) *
                C32981 +
            (C15053 * C1169 + C15047 * C1181 + C15054 * C6477 +
             C32729 * C6481) *
                C1846 +
            (C15053 * C1183 + C15047 * C1196 + C15054 * C6483 +
             C32729 * C6486) *
                C32959) *
               C15873 +
           ((C15053 * C258 + C15047 * C274 + C15054 * C1032 + C32729 * C1040) *
                C1844 +
            (C15053 * C275 + C15047 * C288 + C15054 * C1039 + C32729 * C1050) *
                C32992 +
            (C15053 * C1166 + C15047 * C1177 + C15054 * C1720 +
             C32729 * C1724) *
                C1845 +
            (C15053 * C1176 + C15047 * C1193 + C15054 * C1725 +
             C32729 * C1729) *
                C32981 +
            (C15053 * C1171 + C15047 * C1185 + C15054 * C7292 +
             C32729 * C7293) *
                C1846 +
            (C15053 * C1187 + C15047 * C1198 + C15054 * C7294 +
             C32729 * C7295) *
                C32959) *
               C32595) *
              C32644 * C250) *
         C32618) /
            (p * q * std::sqrt(p + q));
    d2ee[15] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C15053 * C115 + C15047 * C122 + C15054 * C256 + C32729 * C271) *
                 C3602 +
             (C15053 * C123 + C15047 * C136 + C15054 * C270 + C32729 * C286) *
                 C32926 +
             (C17058 + C17059) * C3603 + (C17060 + C17061) * C32771) *
                C32590 +
            ((C15088 + C15089) * C3602 + (C15090 + C15091) * C32926 +
             C17488 * C3603 + C17489 * C32771) *
                C32598 +
            C18776 * C17826) *
               C32644 * C479 -
           (((C19271 + C19272) * C32771 + (C19273 + C19274) * C3603 +
             (C15468 + C15469) * C32926 + (C15470 + C15471) * C3602) *
                C17826 +
            ((C17290 + C17291) * C32771 + (C17292 + C17293) * C3603 +
             (C15472 + C15473) * C32926 + (C15474 + C15475) * C3602) *
                C32598 +
            ((C17707 + C17706) * C32771 + (C17705 + C17704) * C3603 +
             (C15054 * C273 + C32729 * C287 + C15053 * C270 + C15047 * C286) *
                 C32926 +
             (C15054 * C257 + C32729 * C272 + C15053 * C256 + C15047 * C271) *
                 C3602) *
                C32590) *
               C32644 * C480) *
              C481 +
          ((((C15475 + C15474) * C3602 + (C15473 + C15472) * C32926 +
             (C17293 + C17292) * C3603 + (C17291 + C17290) * C32771) *
                C32590 +
            ((C15471 + C15470) * C3602 + (C15469 + C15468) * C32926 +
             (C19274 + C19273) * C3603 + (C19272 + C19271) * C32771) *
                C32598 +
            ((C15467 + C15466) * C3602 + (C15465 + C15464) * C32926 +
             (C15053 * C724 + C15047 * C732 + C15054 * C1533 + C32729 * C1534) *
                 C3603 +
             (C15053 * C733 + C15047 * C739 + C15054 * C1535 + C32729 * C1536) *
                 C32771) *
                C17826) *
               C32644 * C480 -
           (((C15630 + C15631) * C32771 + (C15632 + C15633) * C3603 +
             (C15099 + C15098) * C32926 + (C15097 + C15096) * C3602) *
                C17826 +
            ((C15634 + C15635) * C32771 + (C15636 + C15637) * C3603 +
             (C15095 + C15094) * C32926 + (C15093 + C15092) * C3602) *
                C32598 +
            (C17492 * C32771 + C17493 * C3603 + (C15091 + C15090) * C32926 +
             (C15089 + C15088) * C3602) *
                C32590) *
               C32644 * C479) *
              C482)) /
        (p * q * std::sqrt(p + q));
    d2ee[16] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C15053 * C115 + C15047 * C122 + C15054 * C256 + C32729 * C271) *
                 C3602 +
             (C15053 * C123 + C15047 * C136 + C15054 * C270 + C32729 * C286) *
                 C32926 +
             (C17058 + C17059) * C3603 + (C17060 + C17061) * C32771) *
                C32590 +
            ((C15088 + C15089) * C3602 + (C15090 + C15091) * C32926 +
             C17488 * C3603 + C17489 * C32771) *
                C32598 +
            C18776 * C17826) *
               C601 -
           (((C16728 + C16729) * C32771 + (C16730 + C16731) * C3603 +
             C19469 * C32926 + C19470 * C3602) *
                C17826 +
            (C17490 * C32771 + C17491 * C3603 + C17492 * C32926 +
             C17493 * C3602) *
                C32598 +
            ((C17065 + C17064) * C32771 + (C17063 + C17062) * C3603 +
             (C17061 + C17060) * C32926 + (C17059 + C17058) * C3602) *
                C32590) *
               C602) *
              C479 +
          ((((C17704 + C17705) * C3602 + (C17706 + C17707) * C32926 +
             (C17708 + C17709) * C3603 + (C17710 + C17711) * C32771) *
                C32590 +
            ((C17293 + C17292) * C3602 + (C17291 + C17290) * C32926 +
             (C17289 + C17288) * C3603 + (C17287 + C17286) * C32771) *
                C32598 +
            ((C19274 + C19273) * C3602 + (C19272 + C19271) * C32926 +
             (C15053 * C1172 + C15047 * C1188 + C15054 * C1173 +
              C32729 * C1189) *
                 C3603 +
             (C15053 * C1190 + C15047 * C1199 + C15054 * C1191 +
              C32729 * C1200) *
                 C32771) *
                C17826) *
               C602 -
           (((C19271 + C19272) * C32771 + (C19273 + C19274) * C3603 +
             (C15468 + C15469) * C32926 + (C15470 + C15471) * C3602) *
                C17826 +
            ((C17290 + C17291) * C32771 + (C17292 + C17293) * C3603 +
             (C15472 + C15473) * C32926 + (C15474 + C15475) * C3602) *
                C32598 +
            ((C17707 + C17706) * C32771 + (C17705 + C17704) * C3603 +
             (C15054 * C273 + C32729 * C287 + C15053 * C270 + C15047 * C286) *
                 C32926 +
             (C15054 * C257 + C32729 * C272 + C15053 * C256 + C15047 * C271) *
                 C3602) *
                C32590) *
               C601) *
              C480) *
         C32618) /
        (p * q * std::sqrt(p + q));
    d2ee[17] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C15053 * C115 + C15047 * C122 + C15054 * C256 + C32729 * C271) *
                C3602 +
            (C15053 * C123 + C15047 * C136 + C15054 * C270 + C32729 * C286) *
                C32926 +
            (C17058 + C17059) * C3603 + (C17060 + C17061) * C32771) *
               C32590 +
           ((C15088 + C15089) * C3602 + (C15090 + C15091) * C32926 +
            C17488 * C3603 + C17489 * C32771) *
               C32598 +
           C18776 * C17826) *
              C32644 * C248 -
          (((C15054 * C1174 + C32729 * C1192 + C15053 * C731 + C15047 * C738) *
                C32771 +
            (C15054 * C1165 + C32729 * C1175 + C15053 * C723 + C15047 * C730) *
                C3603 +
            (C15468 + C15469) * C32926 + (C15470 + C15471) * C3602) *
               C17826 +
           ((C17290 + C17291) * C32771 + (C17292 + C17293) * C3603 +
            (C15472 + C15473) * C32926 + (C15474 + C15475) * C3602) *
               C32598 +
           ((C17707 + C17706) * C32771 + (C17705 + C17704) * C3603 +
            (C15054 * C273 + C32729 * C287 + C15053 * C270 + C15047 * C286) *
                C32926 +
            (C15054 * C257 + C32729 * C272 + C15053 * C256 + C15047 * C271) *
                C3602) *
               C32590) *
              C32644 * C249 +
          (((C15053 * C257 + C15047 * C272 + C15054 * C1033 + C32729 * C1042) *
                C3602 +
            (C15053 * C273 + C15047 * C287 + C15054 * C1041 + C32729 * C1051) *
                C32926 +
            (C15053 * C1167 + C15047 * C1179 + C15054 * C1719 +
             C32729 * C1722) *
                C3603 +
            (C15053 * C1178 + C15047 * C1194 + C15054 * C1723 +
             C32729 * C1728) *
                C32771) *
               C32590 +
           ((C15053 * C258 + C15047 * C274 + C15054 * C1032 + C32729 * C1040) *
                C3602 +
            (C15053 * C275 + C15047 * C288 + C15054 * C1039 + C32729 * C1050) *
                C32926 +
            (C15053 * C1166 + C15047 * C1177 + C15054 * C1720 +
             C32729 * C1724) *
                C3603 +
            (C15053 * C1176 + C15047 * C1193 + C15054 * C1725 +
             C32729 * C1729) *
                C32771) *
               C32598 +
           ((C15053 * C259 + C15047 * C276 + C15054 * C1031 + C32729 * C1038) *
                C3602 +
            (C15053 * C277 + C15047 * C289 + C15054 * C1037 + C32729 * C1049) *
                C32926 +
            (C15053 * C1165 + C15047 * C1175 + C15054 * C1721 +
             C32729 * C1726) *
                C3603 +
            (C15053 * C1174 + C15047 * C1192 + C15054 * C1727 +
             C32729 * C1730) *
                C32771) *
               C17826) *
              C32644 * C250) *
         C32618) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C15053 * C115 + C15047 * C122 + C15054 * C256 + C32729 * C271) *
                C3602 +
            (C15053 * C123 + C15047 * C136 + C15054 * C270 + C32729 * C286) *
                C32926 +
            (C17058 + C17059) * C3603 + (C17060 + C17061) * C32771) *
               C32590 +
           ((C15088 + C15089) * C3602 + (C15090 + C15091) * C32926 +
            C17488 * C3603 + C17489 * C32771) *
               C32598 +
           C18776 * C17826) *
              C32644 * C32630 * C110 -
          (((C15630 + C15631) * C32771 + (C15632 + C15633) * C3603 +
            (C15099 + C15098) * C32926 + (C15097 + C15096) * C3602) *
               C17826 +
           ((C15634 + C15635) * C32771 + (C15636 + C15637) * C3603 +
            (C15095 + C15094) * C32926 + (C15093 + C15092) * C3602) *
               C32598 +
           (C17492 * C32771 + C17493 * C3603 + (C15091 + C15090) * C32926 +
            (C15089 + C15088) * C3602) *
               C32590) *
              C32644 * C32630 * C111 +
          (C18776 * C32590 +
           (C15106 * C3602 + C15107 * C32926 + (C15633 + C15632) * C3603 +
            (C15631 + C15630) * C32771) *
               C32598 +
           ((C15103 + C15102) * C3602 + (C15101 + C15100) * C32926 +
            (C15053 * C357 + C15047 * C368 + C15054 * C725 + C32729 * C734) *
                C3603 +
            (C15053 * C367 + C15047 * C387 + C15054 * C735 + C32729 * C740) *
                C32771) *
               C17826) *
              C32644 * C32630 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C15053 * C115 + C15047 * C122 + C15054 * C256 + C32729 * C271) *
                C3602 +
            (C15053 * C123 + C15047 * C136 + C15054 * C270 + C32729 * C286) *
                C32926 +
            (C17058 + C17059) * C3603 + (C17060 + C17061) * C32771) *
               C32590 +
           ((C15088 + C15089) * C3602 + (C15090 + C15091) * C32926 +
            C17488 * C3603 + C17489 * C32771) *
               C32598 +
           C18776 * C17826) *
              C354 -
          (((C16728 + C16729) * C32771 + (C16730 + C16731) * C3603 +
            (C15634 + C15635) * C32926 + (C15636 + C15637) * C3602) *
               C17826 +
           (C17490 * C32771 + C17491 * C3603 + C17492 * C32926 +
            C17493 * C3602) *
               C32598 +
           ((C17065 + C17064) * C32771 + (C17063 + C17062) * C3603 +
            (C17061 + C17060) * C32926 + (C17059 + C17058) * C3602) *
               C32590) *
              C355 +
          ((C17074 * C3602 + C17075 * C32926 + (C17073 + C17072) * C3603 +
            (C17071 + C17070) * C32771) *
               C32590 +
           (C17040 * C3602 + C17041 * C32926 + (C17069 + C17068) * C3603 +
            (C17067 + C17066) * C32771) *
               C32598 +
           ((C16731 + C16730) * C3602 + (C16729 + C16728) * C32926 +
            (C15053 * C2108 + C15047 * C2115 + C15054 * C2658 +
             C32729 * C2663) *
                C3603 +
            (C15053 * C2114 + C15047 * C2126 + C15054 * C2664 +
             C32729 * C2667) *
                C32771) *
               C17826) *
              C356) *
         C32630 * C32618) /
            (p * q * std::sqrt(p + q));
    d2ee[18] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C15053 * C115 + C15047 * C122 + C15054 * C256 + C32729 * C271) *
                 C3602 +
             (C15053 * C123 + C15047 * C136 + C15054 * C270 + C32729 * C286) *
                 C32926 +
             (C17058 + C17059) * C3603 + (C17060 + C17061) * C32771) *
                C32590 +
            ((C15088 + C15089) * C3602 + (C15090 + C15091) * C32926 +
             C17488 * C3603 + C17489 * C32771) *
                C32598 +
            C18776 * C17826) *
               C601 -
           (((C16728 + C16729) * C32771 + (C16730 + C16731) * C3603 +
             C19469 * C32926 + C19470 * C3602) *
                C17826 +
            (C17490 * C32771 + C17491 * C3603 + C17492 * C32926 +
             C17493 * C3602) *
                C32598 +
            ((C17065 + C17064) * C32771 + (C17063 + C17062) * C3603 +
             (C17061 + C17060) * C32926 + (C17059 + C17058) * C3602) *
                C32590) *
               C602) *
              C32630 * C481 +
          (((C17488 * C3602 + C17489 * C32926 + C17040 * C3603 +
             C17041 * C32771) *
                C32590 +
            (C18770 * C3602 + C18771 * C32926 + (C16731 + C16730) * C3603 +
             (C16729 + C16728) * C32771) *
                C32598 +
            ((C15633 + C15632) * C3602 + (C15631 + C15630) * C32926 +
             (C15053 * C365 + C15047 * C383 + C15054 * C2308 + C32729 * C2309) *
                 C3603 +
             (C15053 * C384 + C15047 * C395 + C15054 * C2310 + C32729 * C2311) *
                 C32771) *
                C17826) *
               C602 -
           (((C15630 + C15631) * C32771 + (C15632 + C15633) * C3603 +
             (C15099 + C15098) * C32926 + (C15097 + C15096) * C3602) *
                C17826 +
            (C19469 * C32771 + C19470 * C3603 + (C15095 + C15094) * C32926 +
             (C15093 + C15092) * C3602) *
                C32598 +
            (C17492 * C32771 + C17493 * C3603 + (C15091 + C15090) * C32926 +
             (C15089 + C15088) * C3602) *
                C32590) *
               C601) *
              C32630 * C482)) /
        (p * q * std::sqrt(p + q));
    d2ee[19] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C15053 * C115 + C15047 * C122 + C15054 * C256 + C32729 * C271) *
                C3602 +
            (C15053 * C123 + C15047 * C136 + C15054 * C270 + C32729 * C286) *
                C32926 +
            (C17058 + C17059) * C3603 + (C17060 + C17061) * C32771) *
               C32590 +
           ((C15088 + C15089) * C3602 + (C15090 + C15091) * C32926 +
            C17488 * C3603 + C17489 * C32771) *
               C32598 +
           C18776 * C17826) *
              C32644 * C32630 * C110 -
          (((C15630 + C15631) * C32771 + (C15632 + C15633) * C3603 +
            (C15099 + C15098) * C32926 + (C15097 + C15096) * C3602) *
               C17826 +
           ((C15634 + C15635) * C32771 + (C15636 + C15637) * C3603 +
            (C15095 + C15094) * C32926 + (C15093 + C15092) * C3602) *
               C32598 +
           (C17492 * C32771 + C17493 * C3603 + (C15091 + C15090) * C32926 +
            (C15089 + C15088) * C3602) *
               C32590) *
              C32644 * C32630 * C111 +
          (C18776 * C32590 +
           (C15106 * C3602 + C15107 * C32926 + (C15633 + C15632) * C3603 +
            (C15631 + C15630) * C32771) *
               C32598 +
           ((C15103 + C15102) * C3602 + (C15101 + C15100) * C32926 +
            (C15053 * C357 + C15047 * C368 + C15054 * C725 + C32729 * C734) *
                C3603 +
            (C15053 * C367 + C15047 * C387 + C15054 * C735 + C32729 * C740) *
                C32771) *
               C17826) *
              C32644 * C32630 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C15053 * C115 + C15047 * C122 + C15054 * C256 + C32729 * C271) *
                C3602 +
            (C15053 * C123 + C15047 * C136 + C15054 * C270 + C32729 * C286) *
                C32926 +
            (C17058 + C17059) * C3603 + (C17060 + C17061) * C32771) *
               C32590 +
           ((C15088 + C15089) * C3602 + (C15090 + C15091) * C32926 +
            C17488 * C3603 + C17489 * C32771) *
               C32598 +
           C18776 * C17826) *
              C32644 * C248 -
          (((C15054 * C1174 + C32729 * C1192 + C15053 * C731 + C15047 * C738) *
                C32771 +
            (C15054 * C1165 + C32729 * C1175 + C15053 * C723 + C15047 * C730) *
                C3603 +
            (C15468 + C15469) * C32926 + (C15470 + C15471) * C3602) *
               C17826 +
           ((C17290 + C17291) * C32771 + (C17292 + C17293) * C3603 +
            (C15472 + C15473) * C32926 + (C15474 + C15475) * C3602) *
               C32598 +
           ((C17707 + C17706) * C32771 + (C17705 + C17704) * C3603 +
            (C15054 * C273 + C32729 * C287 + C15053 * C270 + C15047 * C286) *
                C32926 +
            (C15054 * C257 + C32729 * C272 + C15053 * C256 + C15047 * C271) *
                C3602) *
               C32590) *
              C32644 * C249 +
          (((C15053 * C257 + C15047 * C272 + C15054 * C1033 + C32729 * C1042) *
                C3602 +
            (C15053 * C273 + C15047 * C287 + C15054 * C1041 + C32729 * C1051) *
                C32926 +
            (C15053 * C1167 + C15047 * C1179 + C15054 * C1719 +
             C32729 * C1722) *
                C3603 +
            (C15053 * C1178 + C15047 * C1194 + C15054 * C1723 +
             C32729 * C1728) *
                C32771) *
               C32590 +
           ((C15053 * C258 + C15047 * C274 + C15054 * C1032 + C32729 * C1040) *
                C3602 +
            (C15053 * C275 + C15047 * C288 + C15054 * C1039 + C32729 * C1050) *
                C32926 +
            (C15053 * C1166 + C15047 * C1177 + C15054 * C1720 +
             C32729 * C1724) *
                C3603 +
            (C15053 * C1176 + C15047 * C1193 + C15054 * C1725 +
             C32729 * C1729) *
                C32771) *
               C32598 +
           ((C15053 * C259 + C15047 * C276 + C15054 * C1031 + C32729 * C1038) *
                C3602 +
            (C15053 * C277 + C15047 * C289 + C15054 * C1037 + C32729 * C1049) *
                C32926 +
            (C15053 * C1165 + C15047 * C1175 + C15054 * C1721 +
             C32729 * C1726) *
                C3603 +
            (C15053 * C1174 + C15047 * C1192 + C15054 * C1727 +
             C32729 * C1730) *
                C32771) *
               C17826) *
              C32644 * C250) *
         C32618) /
            (p * q * std::sqrt(p + q));
    d2ee[20] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C15053 * C115 + C15047 * C122 + C15054 * C256 + C32729 * C271) *
                 C114 +
             (C15053 * C123 + C15047 * C136 + C15054 * C270 + C32729 * C286) *
                 C32684) *
                C32997 +
            ((C15088 + C15089) * C114 + (C15090 + C15091) * C32684) * C32990 +
            C15112 * C32977 + C15113 * C32960) *
               C32644 * C479 -
           (((C15464 + C15465) * C32684 + (C15466 + C15467) * C114) * C32960 +
            ((C15468 + C15469) * C32684 + (C15470 + C15471) * C114) * C32977 +
            ((C15472 + C15473) * C32684 + (C15474 + C15475) * C114) * C32990 +
            ((C15054 * C273 + C32729 * C287 + C15053 * C270 + C15047 * C286) *
                 C32684 +
             (C15054 * C257 + C32729 * C272 + C15053 * C256 + C15047 * C271) *
                 C114) *
                C32997) *
               C32644 * C480) *
              C481 +
          ((((C15475 + C15474) * C114 + (C15473 + C15472) * C32684) * C32997 +
            ((C15471 + C15470) * C114 + (C15469 + C15468) * C32684) * C32990 +
            ((C15467 + C15466) * C114 + (C15465 + C15464) * C32684) * C32977 +
            ((C15053 * C252 + C15047 * C263 + C15054 * C261 + C32729 * C280) *
                 C114 +
             (C15053 * C262 + C15047 * C282 + C15054 * C281 + C32729 * C291) *
                 C32684) *
                C32960) *
               C32644 * C480 -
           (((C15100 + C15101) * C32684 + (C15102 + C15103) * C114) * C32960 +
            ((C15099 + C15098) * C32684 + (C15097 + C15096) * C114) * C32977 +
            ((C15095 + C15094) * C32684 + (C15093 + C15092) * C114) * C32990 +
            ((C15091 + C15090) * C32684 + (C15089 + C15088) * C114) * C32997) *
               C32644 * C479) *
              C482)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C15875 * C115 + C32998 * C122 + C15876 * C256 + C32994 * C271 +
              C15877 * C257 + C32984 * C272 + C15878 * C1033 + C32966 * C1042) *
                 C114 +
             (C15875 * C123 + C32998 * C136 + C15876 * C270 + C32994 * C286 +
              C15877 * C273 + C32984 * C287 + C15878 * C1041 + C32966 * C1051) *
                 C32684) *
                C15873 +
            ((C15912 + C15913 + C15914 + C15915) * C114 +
             (C15916 + C15917 + C15918 + C15919) * C32684) *
                C32595) *
               C32644 * C479 -
           (((C16270 + C16271 + C16272 + C16273) * C32684 +
             (C16274 + C16275 + C16276 + C16277) * C114) *
                C32595 +
            ((C15878 * C1044 + C32966 * C1052 + C15877 * C1041 +
              C32984 * C1051 + C15876 * C273 + C32994 * C287 + C15875 * C270 +
              C32998 * C286) *
                 C32684 +
             (C15878 * C1034 + C32966 * C1043 + C15877 * C1033 +
              C32984 * C1042 + C15876 * C257 + C32994 * C272 + C15875 * C256 +
              C32998 * C271) *
                 C114) *
                C15873) *
               C32644 * C480) *
              C481 +
          ((((C16277 + C16276 + C16275 + C16274) * C114 +
             (C16273 + C16272 + C16271 + C16270) * C32684) *
                C15873 +
            ((C15875 * C254 + C32998 * C267 + C15876 * C259 + C32994 * C276 +
              C15877 * C1031 + C32984 * C1038 + C15878 * C1036 +
              C32966 * C1047) *
                 C114 +
             (C15875 * C266 + C32998 * C284 + C15876 * C277 + C32994 * C289 +
              C15877 * C1037 + C32984 * C1049 + C15878 * C1048 +
              C32966 * C1054) *
                 C32684) *
                C32595) *
               C32644 * C480 -
           (((C15920 + C15921 + C15922 + C15923) * C32684 +
             (C15924 + C15925 + C15926 + C15927) * C114) *
                C32595 +
            ((C15919 + C15918 + C15917 + C15916) * C32684 +
             (C15915 + C15914 + C15913 + C15912) * C114) *
                C15873) *
               C32644 * C479) *
              C482)) /
            (p * q * std::sqrt(p + q));
    d2ee[21] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C15053 * C115 + C15047 * C122 + C15054 * C256 + C32729 * C271) *
                 C114 +
             (C15053 * C123 + C15047 * C136 + C15054 * C270 + C32729 * C286) *
                 C32684) *
                C32997 +
            ((C15088 + C15089) * C114 + (C15090 + C15091) * C32684) * C32990 +
            C15112 * C32977 + C15113 * C32960) *
               C601 -
           (((C15630 + C15631) * C32684 + (C15632 + C15633) * C114) * C32960 +
            ((C15634 + C15635) * C32684 + (C15636 + C15637) * C114) * C32977 +
            ((C15638 + C15639) * C32684 + (C15640 + C15641) * C114) * C32990 +
            ((C15054 * C727 + C32729 * C736 + C15053 * C375 + C15047 * C391) *
                 C32684 +
             (C15054 * C721 + C32729 * C726 + C15053 * C361 + C15047 * C376) *
                 C114) *
                C32997) *
               C602) *
              C479 +
          ((((C15053 * C721 + C15047 * C726 + C15054 * C1167 + C32729 * C1179) *
                 C114 +
             (C15053 * C727 + C15047 * C736 + C15054 * C1178 + C32729 * C1194) *
                 C32684) *
                C32997 +
            ((C15053 * C722 + C15047 * C728 + C15054 * C1166 + C32729 * C1177) *
                 C114 +
             (C15053 * C729 + C15047 * C737 + C15054 * C1176 + C32729 * C1193) *
                 C32684) *
                C32990 +
            ((C15053 * C723 + C15047 * C730 + C15054 * C1165 + C32729 * C1175) *
                 C114 +
             (C15053 * C731 + C15047 * C738 + C15054 * C1174 + C32729 * C1192) *
                 C32684) *
                C32977 +
            ((C15053 * C724 + C15047 * C732 + C15054 * C1533 + C32729 * C1534) *
                 C114 +
             (C15053 * C733 + C15047 * C739 + C15054 * C1535 + C32729 * C1536) *
                 C32684) *
                C32960) *
               C602 -
           (((C15464 + C15465) * C32684 + (C15466 + C15467) * C114) * C32960 +
            ((C15468 + C15469) * C32684 + (C15470 + C15471) * C114) * C32977 +
            ((C15472 + C15473) * C32684 + (C15474 + C15475) * C114) * C32990 +
            ((C15054 * C273 + C32729 * C287 + C15053 * C270 + C15047 * C286) *
                 C32684 +
             (C15054 * C257 + C32729 * C272 + C15053 * C256 + C15047 * C271) *
                 C114) *
                C32997) *
               C601) *
              C480) *
         C32618) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C15875 * C115 + C32998 * C122 + C15876 * C256 + C32994 * C271 +
              C15877 * C257 + C32984 * C272 + C15878 * C1033 + C32966 * C1042) *
                 C114 +
             (C15875 * C123 + C32998 * C136 + C15876 * C270 + C32994 * C286 +
              C15877 * C273 + C32984 * C287 + C15878 * C1041 + C32966 * C1051) *
                 C32684) *
                C15873 +
            ((C15912 + C15913 + C15914 + C15915) * C114 +
             (C15916 + C15917 + C15918 + C15919) * C32684) *
                C32595) *
               C601 -
           (((C16424 + C16425 + C16426 + C16427) * C32684 +
             (C16428 + C16429 + C16430 + C16431) * C114) *
                C32595 +
            ((C15878 * C1723 + C32966 * C1728 + C15877 * C1178 +
              C32984 * C1194 + C15876 * C727 + C32994 * C736 + C15875 * C375 +
              C32998 * C391) *
                 C32684 +
             (C15878 * C1719 + C32966 * C1722 + C15877 * C1167 +
              C32984 * C1179 + C15876 * C721 + C32994 * C726 + C15875 * C361 +
              C32998 * C376) *
                 C114) *
                C15873) *
               C602) *
              C479 +
          ((((C15875 * C721 + C32998 * C726 + C15876 * C1167 + C32994 * C1179 +
              C15877 * C1719 + C32984 * C1722 + C15878 * C6476 +
              C32966 * C6480) *
                 C114 +
             (C15875 * C727 + C32998 * C736 + C15876 * C1178 + C32994 * C1194 +
              C15877 * C1723 + C32984 * C1728 + C15878 * C6479 +
              C32966 * C6485) *
                 C32684) *
                C15873 +
            ((C15875 * C722 + C32998 * C728 + C15876 * C1166 + C32994 * C1177 +
              C15877 * C1720 + C32984 * C1724 + C15878 * C6656 +
              C32966 * C6657) *
                 C114 +
             (C15875 * C729 + C32998 * C737 + C15876 * C1176 + C32994 * C1193 +
              C15877 * C1725 + C32984 * C1729 + C15878 * C6658 +
              C32966 * C6659) *
                 C32684) *
                C32595) *
               C602 -
           (((C16270 + C16271 + C16272 + C16273) * C32684 +
             (C16274 + C16275 + C16276 + C16277) * C114) *
                C32595 +
            ((C15878 * C1044 + C32966 * C1052 + C15877 * C1041 +
              C32984 * C1051 + C15876 * C273 + C32994 * C287 + C15875 * C270 +
              C32998 * C286) *
                 C32684 +
             (C15878 * C1034 + C32966 * C1043 + C15877 * C1033 +
              C32984 * C1042 + C15876 * C257 + C32994 * C272 + C15875 * C256 +
              C32998 * C271) *
                 C114) *
                C15873) *
               C601) *
              C480) *
         C32618) /
            (p * q * std::sqrt(p + q));
    d2ee[22] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C15053 * C115 + C15047 * C122 + C15054 * C256 + C32729 * C271) *
                C114 +
            (C15053 * C123 + C15047 * C136 + C15054 * C270 + C32729 * C286) *
                C32684) *
               C32997 +
           ((C15088 + C15089) * C114 + (C15090 + C15091) * C32684) * C32990 +
           C15112 * C32977 + C15113 * C32960) *
              C32644 * C248 -
          (((C15054 * C279 + C32729 * C290 + C15053 * C264 + C15047 * C283) *
                C32684 +
            (C15054 * C260 + C32729 * C278 + C15053 * C253 + C15047 * C265) *
                C114) *
               C32960 +
           ((C15054 * C277 + C32729 * C289 + C15053 * C266 + C15047 * C284) *
                C32684 +
            (C15054 * C259 + C32729 * C276 + C15053 * C254 + C15047 * C267) *
                C114) *
               C32977 +
           ((C15054 * C275 + C32729 * C288 + C15053 * C268 + C15047 * C285) *
                C32684 +
            (C15054 * C258 + C32729 * C274 + C15053 * C255 + C15047 * C269) *
                C114) *
               C32990 +
           ((C15054 * C273 + C32729 * C287 + C15053 * C270 + C15047 * C286) *
                C32684 +
            (C15054 * C257 + C32729 * C272 + C15053 * C256 + C15047 * C271) *
                C114) *
               C32997) *
              C32644 * C249 +
          (((C15053 * C257 + C15047 * C272 + C15054 * C1033 + C32729 * C1042) *
                C114 +
            (C15053 * C273 + C15047 * C287 + C15054 * C1041 + C32729 * C1051) *
                C32684) *
               C32997 +
           ((C15053 * C258 + C15047 * C274 + C15054 * C1032 + C32729 * C1040) *
                C114 +
            (C15053 * C275 + C15047 * C288 + C15054 * C1039 + C32729 * C1050) *
                C32684) *
               C32990 +
           ((C15053 * C259 + C15047 * C276 + C15054 * C1031 + C32729 * C1038) *
                C114 +
            (C15053 * C277 + C15047 * C289 + C15054 * C1037 + C32729 * C1049) *
                C32684) *
               C32977 +
           ((C15053 * C260 + C15047 * C278 + C15054 * C1347 + C32729 * C1348) *
                C114 +
            (C15053 * C279 + C15047 * C290 + C15054 * C1349 + C32729 * C1350) *
                C32684) *
               C32960) *
              C32644 * C250) *
         C32618) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C15053 * C115 + C15047 * C122 + C15054 * C256 + C32729 * C271) *
                C114 +
            (C15053 * C123 + C15047 * C136 + C15054 * C270 + C32729 * C286) *
                C32684) *
               C32997 +
           ((C15088 + C15089) * C114 + (C15090 + C15091) * C32684) * C32990 +
           C15112 * C32977 + C15113 * C32960) *
              C32644 * C32630 * C110 -
          (((C15100 + C15101) * C32684 + (C15102 + C15103) * C114) * C32960 +
           ((C15099 + C15098) * C32684 + (C15097 + C15096) * C114) * C32977 +
           ((C15095 + C15094) * C32684 + (C15093 + C15092) * C114) * C32990 +
           ((C15091 + C15090) * C32684 + (C15089 + C15088) * C114) * C32997) *
              C32644 * C32630 * C111 +
          (C15112 * C32997 + C15113 * C32990 +
           ((C15103 + C15102) * C114 + (C15101 + C15100) * C32684) * C32977 +
           ((C15053 * C120 + C15047 * C133 + C15054 * C483 + C32729 * C484) *
                C114 +
            (C15053 * C132 + C15047 * C141 + C15054 * C485 + C32729 * C486) *
                C32684) *
               C32960) *
              C32644 * C32630 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C15053 * C115 + C15047 * C122 + C15054 * C256 + C32729 * C271) *
                C114 +
            (C15053 * C123 + C15047 * C136 + C15054 * C270 + C32729 * C286) *
                C32684) *
               C32997 +
           ((C15088 + C15089) * C114 + (C15090 + C15091) * C32684) * C32990 +
           C15112 * C32977 + C15113 * C32960) *
              C354 -
          (((C15054 * C733 + C32729 * C739 + C15053 * C369 + C15047 * C388) *
                C32684 +
            (C15054 * C724 + C32729 * C732 + C15053 * C358 + C15047 * C370) *
                C114) *
               C32960 +
           ((C15054 * C731 + C32729 * C738 + C15053 * C371 + C15047 * C389) *
                C32684 +
            (C15054 * C723 + C32729 * C730 + C15053 * C359 + C15047 * C372) *
                C114) *
               C32977 +
           ((C15054 * C729 + C32729 * C737 + C15053 * C373 + C15047 * C390) *
                C32684 +
            (C15054 * C722 + C32729 * C728 + C15053 * C360 + C15047 * C374) *
                C114) *
               C32990 +
           ((C15054 * C727 + C32729 * C736 + C15053 * C375 + C15047 * C391) *
                C32684 +
            (C15054 * C721 + C32729 * C726 + C15053 * C361 + C15047 * C376) *
                C114) *
               C32997) *
              C355 +
          (((C15053 * C362 + C15047 * C377 + C15054 * C1168 + C32729 * C1180) *
                C114 +
            (C15053 * C378 + C15047 * C392 + C15054 * C1182 + C32729 * C1195) *
                C32684) *
               C32997 +
           ((C15053 * C363 + C15047 * C379 + C15054 * C1170 + C32729 * C1184) *
                C114 +
            (C15053 * C380 + C15047 * C393 + C15054 * C1186 + C32729 * C1197) *
                C32684) *
               C32990 +
           ((C15053 * C364 + C15047 * C381 + C15054 * C1172 + C32729 * C1188) *
                C114 +
            (C15053 * C382 + C15047 * C394 + C15054 * C1190 + C32729 * C1199) *
                C32684) *
               C32977 +
           ((C15053 * C365 + C15047 * C383 + C15054 * C2308 + C32729 * C2309) *
                C114 +
            (C15053 * C384 + C15047 * C395 + C15054 * C2310 + C32729 * C2311) *
                C32684) *
               C32960) *
              C356) *
         C32630 * C32618) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C15875 * C115 + C32998 * C122 + C15876 * C256 + C32994 * C271 +
             C15877 * C257 + C32984 * C272 + C15878 * C1033 + C32966 * C1042) *
                C114 +
            (C15875 * C123 + C32998 * C136 + C15876 * C270 + C32994 * C286 +
             C15877 * C273 + C32984 * C287 + C15878 * C1041 + C32966 * C1051) *
                C32684) *
               C15873 +
           ((C15912 + C15913 + C15914 + C15915) * C114 +
            (C15916 + C15917 + C15918 + C15919) * C32684) *
               C32595) *
              C32644 * C32630 * C110 -
          (((C15920 + C15921 + C15922 + C15923) * C32684 +
            (C15924 + C15925 + C15926 + C15927) * C114) *
               C32595 +
           ((C15919 + C15918 + C15917 + C15916) * C32684 +
            (C15915 + C15914 + C15913 + C15912) * C114) *
               C15873) *
              C32644 * C32630 * C111 +
          (((C15927 + C15926 + C15925 + C15924) * C114 +
            (C15923 + C15922 + C15921 + C15920) * C32684) *
               C15873 +
           ((C15875 * C118 + C32998 * C128 + C15876 * C253 + C32994 * C265 +
             C15877 * C260 + C32984 * C278 + C15878 * C1347 + C32966 * C1348) *
                C114 +
            (C15875 * C129 + C32998 * C139 + C15876 * C264 + C32994 * C283 +
             C15877 * C279 + C32984 * C290 + C15878 * C1349 + C32966 * C1350) *
                C32684) *
               C32595) *
              C32644 * C32630 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C15875 * C115 + C32998 * C122 + C15876 * C256 + C32994 * C271 +
             C15877 * C257 + C32984 * C272 + C15878 * C1033 + C32966 * C1042) *
                C114 +
            (C15875 * C123 + C32998 * C136 + C15876 * C270 + C32994 * C286 +
             C15877 * C273 + C32984 * C287 + C15878 * C1041 + C32966 * C1051) *
                C32684) *
               C15873 +
           ((C15912 + C15913 + C15914 + C15915) * C114 +
            (C15916 + C15917 + C15918 + C15919) * C32684) *
               C32595) *
              C32644 * C248 -
          (((C15878 * C1046 + C32966 * C1053 + C15877 * C1039 + C32984 * C1050 +
             C15876 * C275 + C32994 * C288 + C15875 * C268 + C32998 * C285) *
                C32684 +
            (C15878 * C1035 + C32966 * C1045 + C15877 * C1032 + C32984 * C1040 +
             C15876 * C258 + C32994 * C274 + C15875 * C255 + C32998 * C269) *
                C114) *
               C32595 +
           ((C15878 * C1044 + C32966 * C1052 + C15877 * C1041 + C32984 * C1051 +
             C15876 * C273 + C32994 * C287 + C15875 * C270 + C32998 * C286) *
                C32684 +
            (C15878 * C1034 + C32966 * C1043 + C15877 * C1033 + C32984 * C1042 +
             C15876 * C257 + C32994 * C272 + C15875 * C256 + C32998 * C271) *
                C114) *
               C15873) *
              C32644 * C249 +
          (((C15875 * C257 + C32998 * C272 + C15876 * C1033 + C32994 * C1042 +
             C15877 * C1034 + C32984 * C1043 + C15878 * C6406 +
             C32966 * C6409) *
                C114 +
            (C15875 * C273 + C32998 * C287 + C15876 * C1041 + C32994 * C1051 +
             C15877 * C1044 + C32984 * C1052 + C15878 * C6408 +
             C32966 * C6412) *
                C32684) *
               C15873 +
           ((C15875 * C258 + C32998 * C274 + C15876 * C1032 + C32994 * C1040 +
             C15877 * C1035 + C32984 * C1045 + C15878 * C6570 +
             C32966 * C6571) *
                C114 +
            (C15875 * C275 + C32998 * C288 + C15876 * C1039 + C32994 * C1050 +
             C15877 * C1046 + C32984 * C1053 + C15878 * C6572 +
             C32966 * C6573) *
                C32684) *
               C32595) *
              C32644 * C250) *
         C32618) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C15875 * C115 + C32998 * C122 + C15876 * C256 + C32994 * C271 +
             C15877 * C257 + C32984 * C272 + C15878 * C1033 + C32966 * C1042) *
                C114 +
            (C15875 * C123 + C32998 * C136 + C15876 * C270 + C32994 * C286 +
             C15877 * C273 + C32984 * C287 + C15878 * C1041 + C32966 * C1051) *
                C32684) *
               C15873 +
           ((C15912 + C15913 + C15914 + C15915) * C114 +
            (C15916 + C15917 + C15918 + C15919) * C32684) *
               C32595) *
              C354 -
          (((C15878 * C1725 + C32966 * C1729 + C15877 * C1176 + C32984 * C1193 +
             C15876 * C729 + C32994 * C737 + C15875 * C373 + C32998 * C390) *
                C32684 +
            (C15878 * C1720 + C32966 * C1724 + C15877 * C1166 + C32984 * C1177 +
             C15876 * C722 + C32994 * C728 + C15875 * C360 + C32998 * C374) *
                C114) *
               C32595 +
           ((C15878 * C1723 + C32966 * C1728 + C15877 * C1178 + C32984 * C1194 +
             C15876 * C727 + C32994 * C736 + C15875 * C375 + C32998 * C391) *
                C32684 +
            (C15878 * C1719 + C32966 * C1722 + C15877 * C1167 + C32984 * C1179 +
             C15876 * C721 + C32994 * C726 + C15875 * C361 + C32998 * C376) *
                C114) *
               C15873) *
              C355 +
          (((C15875 * C362 + C32998 * C377 + C15876 * C1168 + C32994 * C1180 +
             C15877 * C1169 + C32984 * C1181 + C15878 * C6477 +
             C32966 * C6481) *
                C114 +
            (C15875 * C378 + C32998 * C392 + C15876 * C1182 + C32994 * C1195 +
             C15877 * C1183 + C32984 * C1196 + C15878 * C6483 +
             C32966 * C6486) *
                C32684) *
               C15873 +
           ((C15875 * C363 + C32998 * C379 + C15876 * C1170 + C32994 * C1184 +
             C15877 * C1171 + C32984 * C1185 + C15878 * C7292 +
             C32966 * C7293) *
                C114 +
            (C15875 * C380 + C32998 * C393 + C15876 * C1186 + C32994 * C1197 +
             C15877 * C1187 + C32984 * C1198 + C15878 * C7294 +
             C32966 * C7295) *
                C32684) *
               C32595) *
              C356) *
         C32630 * C32618) /
            (p * q * std::sqrt(p + q));
    d2ee[23] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C15053 * C115 + C15047 * C122 + C15054 * C256 + C32729 * C271) *
                 C114 +
             (C15053 * C123 + C15047 * C136 + C15054 * C270 + C32729 * C286) *
                 C32684) *
                C32997 +
            ((C15088 + C15089) * C114 + (C15090 + C15091) * C32684) * C32990 +
            C15112 * C32977 + C15113 * C32960) *
               C601 -
           (((C15630 + C15631) * C32684 + (C15632 + C15633) * C114) * C32960 +
            ((C15634 + C15635) * C32684 + (C15636 + C15637) * C114) * C32977 +
            ((C15638 + C15639) * C32684 + (C15640 + C15641) * C114) * C32990 +
            ((C15054 * C727 + C32729 * C736 + C15053 * C375 + C15047 * C391) *
                 C32684 +
             (C15054 * C721 + C32729 * C726 + C15053 * C361 + C15047 * C376) *
                 C114) *
                C32997) *
               C602) *
              C32630 * C481 +
          ((((C15641 + C15640) * C114 + (C15639 + C15638) * C32684) * C32997 +
            ((C15637 + C15636) * C114 + (C15635 + C15634) * C32684) * C32990 +
            ((C15633 + C15632) * C114 + (C15631 + C15630) * C32684) * C32977 +
            ((C15053 * C357 + C15047 * C368 + C15054 * C725 + C32729 * C734) *
                 C114 +
             (C15053 * C367 + C15047 * C387 + C15054 * C735 + C32729 * C740) *
                 C32684) *
                C32960) *
               C602 -
           (((C15100 + C15101) * C32684 + (C15102 + C15103) * C114) * C32960 +
            ((C15099 + C15098) * C32684 + (C15097 + C15096) * C114) * C32977 +
            ((C15095 + C15094) * C32684 + (C15093 + C15092) * C114) * C32990 +
            ((C15091 + C15090) * C32684 + (C15089 + C15088) * C114) * C32997) *
               C601) *
              C32630 * C482)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C15875 * C115 + C32998 * C122 + C15876 * C256 + C32994 * C271 +
              C15877 * C257 + C32984 * C272 + C15878 * C1033 + C32966 * C1042) *
                 C114 +
             (C15875 * C123 + C32998 * C136 + C15876 * C270 + C32994 * C286 +
              C15877 * C273 + C32984 * C287 + C15878 * C1041 + C32966 * C1051) *
                 C32684) *
                C15873 +
            ((C15912 + C15913 + C15914 + C15915) * C114 +
             (C15916 + C15917 + C15918 + C15919) * C32684) *
                C32595) *
               C601 -
           (((C16424 + C16425 + C16426 + C16427) * C32684 +
             (C16428 + C16429 + C16430 + C16431) * C114) *
                C32595 +
            ((C15878 * C1723 + C32966 * C1728 + C15877 * C1178 +
              C32984 * C1194 + C15876 * C727 + C32994 * C736 + C15875 * C375 +
              C32998 * C391) *
                 C32684 +
             (C15878 * C1719 + C32966 * C1722 + C15877 * C1167 +
              C32984 * C1179 + C15876 * C721 + C32994 * C726 + C15875 * C361 +
              C32998 * C376) *
                 C114) *
                C15873) *
               C602) *
              C32630 * C481 +
          ((((C16431 + C16430 + C16429 + C16428) * C114 +
             (C16427 + C16426 + C16425 + C16424) * C32684) *
                C15873 +
            ((C15875 * C359 + C32998 * C372 + C15876 * C723 + C32994 * C730 +
              C15877 * C1165 + C32984 * C1175 + C15878 * C1721 +
              C32966 * C1726) *
                 C114 +
             (C15875 * C371 + C32998 * C389 + C15876 * C731 + C32994 * C738 +
              C15877 * C1174 + C32984 * C1192 + C15878 * C1727 +
              C32966 * C1730) *
                 C32684) *
                C32595) *
               C602 -
           (((C15920 + C15921 + C15922 + C15923) * C32684 +
             (C15924 + C15925 + C15926 + C15927) * C114) *
                C32595 +
            ((C15919 + C15918 + C15917 + C15916) * C32684 +
             (C15915 + C15914 + C15913 + C15912) * C114) *
                C15873) *
               C601) *
              C32630 * C482)) /
            (p * q * std::sqrt(p + q));
    d2ee[24] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C15053 * C115 + C15047 * C122 + C15054 * C256 + C32729 * C271) *
                C114 +
            (C15053 * C123 + C15047 * C136 + C15054 * C270 + C32729 * C286) *
                C32684) *
               C32997 +
           ((C15088 + C15089) * C114 + (C15090 + C15091) * C32684) * C32990 +
           C15112 * C32977 + C15113 * C32960) *
              C32644 * C32630 * C110 -
          (((C15100 + C15101) * C32684 + (C15102 + C15103) * C114) * C32960 +
           ((C15099 + C15098) * C32684 + (C15097 + C15096) * C114) * C32977 +
           ((C15095 + C15094) * C32684 + (C15093 + C15092) * C114) * C32990 +
           ((C15091 + C15090) * C32684 + (C15089 + C15088) * C114) * C32997) *
              C32644 * C32630 * C111 +
          (C15112 * C32997 + C15113 * C32990 +
           ((C15103 + C15102) * C114 + (C15101 + C15100) * C32684) * C32977 +
           ((C15053 * C120 + C15047 * C133 + C15054 * C483 + C32729 * C484) *
                C114 +
            (C15053 * C132 + C15047 * C141 + C15054 * C485 + C32729 * C486) *
                C32684) *
               C32960) *
              C32644 * C32630 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C15053 * C115 + C15047 * C122 + C15054 * C256 + C32729 * C271) *
                C114 +
            (C15053 * C123 + C15047 * C136 + C15054 * C270 + C32729 * C286) *
                C32684) *
               C32997 +
           ((C15088 + C15089) * C114 + (C15090 + C15091) * C32684) * C32990 +
           C15112 * C32977 + C15113 * C32960) *
              C32644 * C248 -
          (((C15054 * C279 + C32729 * C290 + C15053 * C264 + C15047 * C283) *
                C32684 +
            (C15054 * C260 + C32729 * C278 + C15053 * C253 + C15047 * C265) *
                C114) *
               C32960 +
           ((C15054 * C277 + C32729 * C289 + C15053 * C266 + C15047 * C284) *
                C32684 +
            (C15054 * C259 + C32729 * C276 + C15053 * C254 + C15047 * C267) *
                C114) *
               C32977 +
           ((C15054 * C275 + C32729 * C288 + C15053 * C268 + C15047 * C285) *
                C32684 +
            (C15054 * C258 + C32729 * C274 + C15053 * C255 + C15047 * C269) *
                C114) *
               C32990 +
           ((C15054 * C273 + C32729 * C287 + C15053 * C270 + C15047 * C286) *
                C32684 +
            (C15054 * C257 + C32729 * C272 + C15053 * C256 + C15047 * C271) *
                C114) *
               C32997) *
              C32644 * C249 +
          (((C15053 * C257 + C15047 * C272 + C15054 * C1033 + C32729 * C1042) *
                C114 +
            (C15053 * C273 + C15047 * C287 + C15054 * C1041 + C32729 * C1051) *
                C32684) *
               C32997 +
           ((C15053 * C258 + C15047 * C274 + C15054 * C1032 + C32729 * C1040) *
                C114 +
            (C15053 * C275 + C15047 * C288 + C15054 * C1039 + C32729 * C1050) *
                C32684) *
               C32990 +
           ((C15053 * C259 + C15047 * C276 + C15054 * C1031 + C32729 * C1038) *
                C114 +
            (C15053 * C277 + C15047 * C289 + C15054 * C1037 + C32729 * C1049) *
                C32684) *
               C32977 +
           ((C15053 * C260 + C15047 * C278 + C15054 * C1347 + C32729 * C1348) *
                C114 +
            (C15053 * C279 + C15047 * C290 + C15054 * C1349 + C32729 * C1350) *
                C32684) *
               C32960) *
              C32644 * C250) *
         C32618) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C15875 * C115 + C32998 * C122 + C15876 * C256 + C32994 * C271 +
             C15877 * C257 + C32984 * C272 + C15878 * C1033 + C32966 * C1042) *
                C114 +
            (C15875 * C123 + C32998 * C136 + C15876 * C270 + C32994 * C286 +
             C15877 * C273 + C32984 * C287 + C15878 * C1041 + C32966 * C1051) *
                C32684) *
               C15873 +
           ((C15912 + C15913 + C15914 + C15915) * C114 +
            (C15916 + C15917 + C15918 + C15919) * C32684) *
               C32595) *
              C32644 * C32630 * C110 -
          (((C15920 + C15921 + C15922 + C15923) * C32684 +
            (C15924 + C15925 + C15926 + C15927) * C114) *
               C32595 +
           ((C15919 + C15918 + C15917 + C15916) * C32684 +
            (C15915 + C15914 + C15913 + C15912) * C114) *
               C15873) *
              C32644 * C32630 * C111 +
          (((C15927 + C15926 + C15925 + C15924) * C114 +
            (C15923 + C15922 + C15921 + C15920) * C32684) *
               C15873 +
           ((C15875 * C118 + C32998 * C128 + C15876 * C253 + C32994 * C265 +
             C15877 * C260 + C32984 * C278 + C15878 * C1347 + C32966 * C1348) *
                C114 +
            (C15875 * C129 + C32998 * C139 + C15876 * C264 + C32994 * C283 +
             C15877 * C279 + C32984 * C290 + C15878 * C1349 + C32966 * C1350) *
                C32684) *
               C32595) *
              C32644 * C32630 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C15875 * C115 + C32998 * C122 + C15876 * C256 + C32994 * C271 +
             C15877 * C257 + C32984 * C272 + C15878 * C1033 + C32966 * C1042) *
                C114 +
            (C15875 * C123 + C32998 * C136 + C15876 * C270 + C32994 * C286 +
             C15877 * C273 + C32984 * C287 + C15878 * C1041 + C32966 * C1051) *
                C32684) *
               C15873 +
           ((C15912 + C15913 + C15914 + C15915) * C114 +
            (C15916 + C15917 + C15918 + C15919) * C32684) *
               C32595) *
              C32644 * C248 -
          (((C15878 * C1046 + C32966 * C1053 + C15877 * C1039 + C32984 * C1050 +
             C15876 * C275 + C32994 * C288 + C15875 * C268 + C32998 * C285) *
                C32684 +
            (C15878 * C1035 + C32966 * C1045 + C15877 * C1032 + C32984 * C1040 +
             C15876 * C258 + C32994 * C274 + C15875 * C255 + C32998 * C269) *
                C114) *
               C32595 +
           ((C15878 * C1044 + C32966 * C1052 + C15877 * C1041 + C32984 * C1051 +
             C15876 * C273 + C32994 * C287 + C15875 * C270 + C32998 * C286) *
                C32684 +
            (C15878 * C1034 + C32966 * C1043 + C15877 * C1033 + C32984 * C1042 +
             C15876 * C257 + C32994 * C272 + C15875 * C256 + C32998 * C271) *
                C114) *
               C15873) *
              C32644 * C249 +
          (((C15875 * C257 + C32998 * C272 + C15876 * C1033 + C32994 * C1042 +
             C15877 * C1034 + C32984 * C1043 + C15878 * C6406 +
             C32966 * C6409) *
                C114 +
            (C15875 * C273 + C32998 * C287 + C15876 * C1041 + C32994 * C1051 +
             C15877 * C1044 + C32984 * C1052 + C15878 * C6408 +
             C32966 * C6412) *
                C32684) *
               C15873 +
           ((C15875 * C258 + C32998 * C274 + C15876 * C1032 + C32994 * C1040 +
             C15877 * C1035 + C32984 * C1045 + C15878 * C6570 +
             C32966 * C6571) *
                C114 +
            (C15875 * C275 + C32998 * C288 + C15876 * C1039 + C32994 * C1050 +
             C15877 * C1046 + C32984 * C1053 + C15878 * C6572 +
             C32966 * C6573) *
                C32684) *
               C32595) *
              C32644 * C250) *
         C32618) /
            (p * q * std::sqrt(p + q));
    d2ee[25] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                 (((((C31607 * C115 + C32725 * C122 + C31599 * C256 +
                      C32732 * C271 + C31613 * C257 + C17823 * C272) *
                         C20882 +
                     (C31607 * C123 + C32725 * C136 + C31599 * C270 +
                      C32732 * C286 + C31613 * C273 + C17823 * C287) *
                         C20880 +
                     (C20139 + C20140 + C20141) * C20883 +
                     (C20142 + C20143 + C20144) * C32771) *
                        C32906 +
                    ((C17867 + C17868 + C17869) * C20882 +
                     (C17870 + C17871 + C17872) * C20880 + C20567 * C20883 +
                     C20568 * C32771) *
                        C32595) *
                       C32644 * C479 -
                   (((C20363 + C20364 + C20365) * C32771 +
                     (C20366 + C20367 + C20368) * C20883 +
                     (C18288 + C18289 + C18290) * C20880 +
                     (C18291 + C18292 + C18293) * C20882) *
                        C32595 +
                    ((C20782 + C20781 + C20780) * C32771 +
                     (C20779 + C20778 + C20777) * C20883 +
                     (C31613 * C1041 + C17823 * C1051 + C31599 * C273 +
                      C32732 * C287 + C31607 * C270 + C32725 * C286) *
                         C20880 +
                     (C31613 * C1033 + C17823 * C1042 + C31599 * C257 +
                      C32732 * C272 + C31607 * C256 + C32725 * C271) *
                         C20882) *
                        C32906) *
                       C32644 * C480) *
                      C481 +
                  ((((C18293 + C18292 + C18291) * C20882 +
                     (C18290 + C18289 + C18288) * C20880 +
                     (C20368 + C20367 + C20366) * C20883 +
                     (C20365 + C20364 + C20363) * C32771) *
                        C32906 +
                    ((C18287 + C18286 + C18285) * C20882 +
                     (C18284 + C18283 + C18282) * C20880 +
                     (C31607 * C723 + C32725 * C730 + C31599 * C1165 +
                      C32732 * C1175 + C31613 * C1721 + C17823 * C1726) *
                         C20883 +
                     (C31607 * C731 + C32725 * C738 + C31599 * C1174 +
                      C32732 * C1192 + C31613 * C1727 + C17823 * C1730) *
                         C32771) *
                        C32595) *
                       C32644 * C480 -
                   (((C18464 + C18465 + C18466) * C32771 +
                     (C18467 + C18468 + C18469) * C20883 +
                     (C17878 + C17877 + C17876) * C20880 +
                     (C17875 + C17874 + C17873) * C20882) *
                        C32595 +
                    (C20569 * C32771 + C20570 * C20883 +
                     (C17872 + C17871 + C17870) * C20880 +
                     (C17869 + C17868 + C17867) * C20882) *
                        C32906) *
                       C32644 * C479) *
                      C482)) /
                (p * q * std::sqrt(p + q));
    d2ee[26] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                 (((((C31607 * C115 + C32725 * C122 + C31599 * C256 +
                      C32732 * C271 + C31613 * C257 + C17823 * C272) *
                         C20882 +
                     (C31607 * C123 + C32725 * C136 + C31599 * C270 +
                      C32732 * C286 + C31613 * C273 + C17823 * C287) *
                         C20880 +
                     (C20139 + C20140 + C20141) * C20883 +
                     (C20142 + C20143 + C20144) * C32771) *
                        C32906 +
                    ((C17867 + C17868 + C17869) * C20882 +
                     (C17870 + C17871 + C17872) * C20880 + C20567 * C20883 +
                     C20568 * C32771) *
                        C32595) *
                       C601 -
                   (((C20145 + C20146 + C20147) * C32771 +
                     (C20148 + C20149 + C20150) * C20883 + C20569 * C20880 +
                     C20570 * C20882) *
                        C32595 +
                    ((C20151 + C20152 + C20153) * C32771 +
                     (C20154 + C20155 + C20156) * C20883 +
                     (C20144 + C20143 + C20142) * C20880 +
                     (C20141 + C20140 + C20139) * C20882) *
                        C32906) *
                       C602) *
                      C479 +
                  ((((C20777 + C20778 + C20779) * C20882 +
                     (C20780 + C20781 + C20782) * C20880 +
                     (C31607 * C1168 + C32725 * C1180 + C31599 * C1169 +
                      C32732 * C1181 + C31613 * C6477 + C17823 * C6481) *
                         C20883 +
                     (C31607 * C1182 + C32725 * C1195 + C31599 * C1183 +
                      C32732 * C1196 + C31613 * C6483 + C17823 * C6486) *
                         C32771) *
                        C32906 +
                    ((C20368 + C20367 + C20366) * C20882 +
                     (C20365 + C20364 + C20363) * C20880 +
                     (C31607 * C1170 + C32725 * C1184 + C31599 * C1171 +
                      C32732 * C1185 + C31613 * C7292 + C17823 * C7293) *
                         C20883 +
                     (C31607 * C1186 + C32725 * C1197 + C31599 * C1187 +
                      C32732 * C1198 + C31613 * C7294 + C17823 * C7295) *
                         C32771) *
                        C32595) *
                       C602 -
                   (((C20363 + C20364 + C20365) * C32771 +
                     (C20366 + C20367 + C20368) * C20883 +
                     (C18288 + C18289 + C18290) * C20880 +
                     (C18291 + C18292 + C18293) * C20882) *
                        C32595 +
                    ((C20782 + C20781 + C20780) * C32771 +
                     (C20779 + C20778 + C20777) * C20883 +
                     (C31613 * C1041 + C17823 * C1051 + C31599 * C273 +
                      C32732 * C287 + C31607 * C270 + C32725 * C286) *
                         C20880 +
                     (C31613 * C1033 + C17823 * C1042 + C31599 * C257 +
                      C32732 * C272 + C31607 * C256 + C32725 * C271) *
                         C20882) *
                        C32906) *
                       C601) *
                      C480) *
                 C32618) /
                (p * q * std::sqrt(p + q));
    d2ee[27] += (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C31607 * C115 + C32725 * C122 + C31599 * C256 +
                     C32732 * C271 + C31613 * C257 + C17823 * C272) *
                        C20882 +
                    (C31607 * C123 + C32725 * C136 + C31599 * C270 +
                     C32732 * C286 + C31613 * C273 + C17823 * C287) *
                        C20880 +
                    (C20139 + C20140 + C20141) * C20883 +
                    (C20142 + C20143 + C20144) * C32771) *
                       C32906 +
                   ((C17867 + C17868 + C17869) * C20882 +
                    (C17870 + C17871 + C17872) * C20880 + C20567 * C20883 +
                    C20568 * C32771) *
                       C32595) *
                      C32644 * C248 -
                  (((C20363 + C20364 + C20365) * C32771 +
                    (C20366 + C20367 + C20368) * C20883 +
                    (C18288 + C18289 + C18290) * C20880 +
                    (C18291 + C18292 + C18293) * C20882) *
                       C32595 +
                   ((C20782 + C20781 + C20780) * C32771 +
                    (C20779 + C20778 + C20777) * C20883 +
                    (C31613 * C1041 + C17823 * C1051 + C31599 * C273 +
                     C32732 * C287 + C31607 * C270 + C32725 * C286) *
                        C20880 +
                    (C31613 * C1033 + C17823 * C1042 + C31599 * C257 +
                     C32732 * C272 + C31607 * C256 + C32725 * C271) *
                        C20882) *
                       C32906) *
                      C32644 * C249 +
                  (((C31607 * C257 + C32725 * C272 + C31599 * C1033 +
                     C32732 * C1042 + C31613 * C1034 + C17823 * C1043) *
                        C20882 +
                    (C31607 * C273 + C32725 * C287 + C31599 * C1041 +
                     C32732 * C1051 + C31613 * C1044 + C17823 * C1052) *
                        C20880 +
                    (C31607 * C1167 + C32725 * C1179 + C31599 * C1719 +
                     C32732 * C1722 + C31613 * C6476 + C17823 * C6480) *
                        C20883 +
                    (C31607 * C1178 + C32725 * C1194 + C31599 * C1723 +
                     C32732 * C1728 + C31613 * C6479 + C17823 * C6485) *
                        C32771) *
                       C32906 +
                   ((C31607 * C258 + C32725 * C274 + C31599 * C1032 +
                     C32732 * C1040 + C31613 * C1035 + C17823 * C1045) *
                        C20882 +
                    (C31607 * C275 + C32725 * C288 + C31599 * C1039 +
                     C32732 * C1050 + C31613 * C1046 + C17823 * C1053) *
                        C20880 +
                    (C31607 * C1166 + C32725 * C1177 + C31599 * C1720 +
                     C32732 * C1724 + C31613 * C6656 + C17823 * C6657) *
                        C20883 +
                    (C31607 * C1176 + C32725 * C1193 + C31599 * C1725 +
                     C32732 * C1729 + C31613 * C6658 + C17823 * C6659) *
                        C32771) *
                       C32595) *
                      C32644 * C250) *
                 C32618) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C31607 * C115 + C32725 * C122 + C31599 * C256 +
                     C32732 * C271 + C31613 * C257 + C17823 * C272) *
                        C20882 +
                    (C31607 * C123 + C32725 * C136 + C31599 * C270 +
                     C32732 * C286 + C31613 * C273 + C17823 * C287) *
                        C20880 +
                    (C20139 + C20140 + C20141) * C20883 +
                    (C20142 + C20143 + C20144) * C32771) *
                       C32906 +
                   ((C17867 + C17868 + C17869) * C20882 +
                    (C17870 + C17871 + C17872) * C20880 + C20567 * C20883 +
                    C20568 * C32771) *
                       C32595) *
                      C32644 * C32630 * C110 -
                  (((C18464 + C18465 + C18466) * C32771 +
                    (C18467 + C18468 + C18469) * C20883 +
                    (C17878 + C17877 + C17876) * C20880 +
                    (C17875 + C17874 + C17873) * C20882) *
                       C32595 +
                   (C20569 * C32771 + C20570 * C20883 +
                    (C17872 + C17871 + C17870) * C20880 +
                    (C17869 + C17868 + C17867) * C20882) *
                       C32906) *
                      C32644 * C32630 * C111 +
                  ((C17887 * C20882 + C17888 * C20880 +
                    (C18469 + C18468 + C18467) * C20883 +
                    (C18466 + C18465 + C18464) * C32771) *
                       C32906 +
                   ((C17884 + C17883 + C17882) * C20882 +
                    (C17881 + C17880 + C17879) * C20880 +
                    (C31607 * C358 + C32725 * C370 + C31599 * C724 +
                     C32732 * C732 + C31613 * C1533 + C17823 * C1534) *
                        C20883 +
                    (C31607 * C369 + C32725 * C388 + C31599 * C733 +
                     C32732 * C739 + C31613 * C1535 + C17823 * C1536) *
                        C32771) *
                       C32595) *
                      C32644 * C32630 * C112)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((C31607 * C115 + C32725 * C122 + C31599 * C256 +
                     C32732 * C271 + C31613 * C257 + C17823 * C272) *
                        C20882 +
                    (C31607 * C123 + C32725 * C136 + C31599 * C270 +
                     C32732 * C286 + C31613 * C273 + C17823 * C287) *
                        C20880 +
                    (C20139 + C20140 + C20141) * C20883 +
                    (C20142 + C20143 + C20144) * C32771) *
                       C32906 +
                   ((C17867 + C17868 + C17869) * C20882 +
                    (C17870 + C17871 + C17872) * C20880 + C20567 * C20883 +
                    C20568 * C32771) *
                       C32595) *
                      C354 -
                  (((C20145 + C20146 + C20147) * C32771 +
                    (C20148 + C20149 + C20150) * C20883 + C20569 * C20880 +
                    C20570 * C20882) *
                       C32595 +
                   ((C20151 + C20152 + C20153) * C32771 +
                    (C20154 + C20155 + C20156) * C20883 +
                    (C20144 + C20143 + C20142) * C20880 +
                    (C20141 + C20140 + C20139) * C20882) *
                       C32906) *
                      C355 +
                  (((C20156 + C20155 + C20154) * C20882 +
                    (C20153 + C20152 + C20151) * C20880 +
                    (C31607 * C2110 + C32725 * C2119 + C31599 * C2656 +
                     C32732 * C2659 + C31613 * C7076 + C17823 * C7080) *
                        C20883 +
                    (C31607 * C2118 + C32725 * C2128 + C31599 * C2660 +
                     C32732 * C2665 + C31613 * C7079 + C17823 * C7085) *
                        C32771) *
                       C32906 +
                   ((C20150 + C20149 + C20148) * C20882 +
                    (C20147 + C20146 + C20145) * C20880 +
                    (C31607 * C2109 + C32725 * C2117 + C31599 * C2657 +
                     C32732 * C2661 + C31613 * C7442 + C17823 * C7443) *
                        C20883 +
                    (C31607 * C2116 + C32725 * C2127 + C31599 * C2662 +
                     C32732 * C2666 + C31613 * C7444 + C17823 * C7445) *
                        C32771) *
                       C32595) *
                      C356) *
                 C32630 * C32618) /
                    (p * q * std::sqrt(p + q));
    d2ee[28] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                 (((((C31607 * C115 + C32725 * C122 + C31599 * C256 +
                      C32732 * C271 + C31613 * C257 + C17823 * C272) *
                         C20882 +
                     (C31607 * C123 + C32725 * C136 + C31599 * C270 +
                      C32732 * C286 + C31613 * C273 + C17823 * C287) *
                         C20880 +
                     (C20139 + C20140 + C20141) * C20883 +
                     (C20142 + C20143 + C20144) * C32771) *
                        C32906 +
                    ((C17867 + C17868 + C17869) * C20882 +
                     (C17870 + C17871 + C17872) * C20880 + C20567 * C20883 +
                     C20568 * C32771) *
                        C32595) *
                       C601 -
                   (((C20145 + C20146 + C20147) * C32771 +
                     (C20148 + C20149 + C20150) * C20883 + C20569 * C20880 +
                     C20570 * C20882) *
                        C32595 +
                    ((C20151 + C20152 + C20153) * C32771 +
                     (C20154 + C20155 + C20156) * C20883 +
                     (C20144 + C20143 + C20142) * C20880 +
                     (C20141 + C20140 + C20139) * C20882) *
                        C32906) *
                       C602) *
                      C32630 * C481 +
                  (((C20567 * C20882 + C20568 * C20880 +
                     (C20150 + C20149 + C20148) * C20883 +
                     (C20147 + C20146 + C20145) * C32771) *
                        C32906 +
                    ((C18469 + C18468 + C18467) * C20882 +
                     (C18466 + C18465 + C18464) * C20880 +
                     (C31607 * C364 + C32725 * C381 + C31599 * C1172 +
                      C32732 * C1188 + C31613 * C1173 + C17823 * C1189) *
                         C20883 +
                     (C31607 * C382 + C32725 * C394 + C31599 * C1190 +
                      C32732 * C1199 + C31613 * C1191 + C17823 * C1200) *
                         C32771) *
                        C32595) *
                       C602 -
                   (((C18464 + C18465 + C18466) * C32771 +
                     (C18467 + C18468 + C18469) * C20883 +
                     (C17878 + C17877 + C17876) * C20880 +
                     (C17875 + C17874 + C17873) * C20882) *
                        C32595 +
                    (C20569 * C32771 + C20570 * C20883 +
                     (C17872 + C17871 + C17870) * C20880 +
                     (C17869 + C17868 + C17867) * C20882) *
                        C32906) *
                       C601) *
                      C32630 * C482)) /
                (p * q * std::sqrt(p + q));
    d2ee[29] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C31607 * C115 + C32725 * C122 + C31599 * C256 +
                     C32732 * C271 + C31613 * C257 + C17823 * C272) *
                        C20882 +
                    (C31607 * C123 + C32725 * C136 + C31599 * C270 +
                     C32732 * C286 + C31613 * C273 + C17823 * C287) *
                        C20880 +
                    (C20139 + C20140 + C20141) * C20883 +
                    (C20142 + C20143 + C20144) * C32771) *
                       C32906 +
                   ((C17867 + C17868 + C17869) * C20882 +
                    (C17870 + C17871 + C17872) * C20880 + C20567 * C20883 +
                    C20568 * C32771) *
                       C32595) *
                      C32644 * C32630 * C110 -
                  (((C18464 + C18465 + C18466) * C32771 +
                    (C18467 + C18468 + C18469) * C20883 +
                    (C17878 + C17877 + C17876) * C20880 +
                    (C17875 + C17874 + C17873) * C20882) *
                       C32595 +
                   (C20569 * C32771 + C20570 * C20883 +
                    (C17872 + C17871 + C17870) * C20880 +
                    (C17869 + C17868 + C17867) * C20882) *
                       C32906) *
                      C32644 * C32630 * C111 +
                  ((C17887 * C20882 + C17888 * C20880 +
                    (C18469 + C18468 + C18467) * C20883 +
                    (C18466 + C18465 + C18464) * C32771) *
                       C32906 +
                   ((C17884 + C17883 + C17882) * C20882 +
                    (C17881 + C17880 + C17879) * C20880 +
                    (C31607 * C358 + C32725 * C370 + C31599 * C724 +
                     C32732 * C732 + C31613 * C1533 + C17823 * C1534) *
                        C20883 +
                    (C31607 * C369 + C32725 * C388 + C31599 * C733 +
                     C32732 * C739 + C31613 * C1535 + C17823 * C1536) *
                        C32771) *
                       C32595) *
                      C32644 * C32630 * C112)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C31607 * C115 + C32725 * C122 + C31599 * C256 +
                     C32732 * C271 + C31613 * C257 + C17823 * C272) *
                        C20882 +
                    (C31607 * C123 + C32725 * C136 + C31599 * C270 +
                     C32732 * C286 + C31613 * C273 + C17823 * C287) *
                        C20880 +
                    (C20139 + C20140 + C20141) * C20883 +
                    (C20142 + C20143 + C20144) * C32771) *
                       C32906 +
                   ((C17867 + C17868 + C17869) * C20882 +
                    (C17870 + C17871 + C17872) * C20880 + C20567 * C20883 +
                    C20568 * C32771) *
                       C32595) *
                      C32644 * C248 -
                  (((C20363 + C20364 + C20365) * C32771 +
                    (C20366 + C20367 + C20368) * C20883 +
                    (C18288 + C18289 + C18290) * C20880 +
                    (C18291 + C18292 + C18293) * C20882) *
                       C32595 +
                   ((C20782 + C20781 + C20780) * C32771 +
                    (C20779 + C20778 + C20777) * C20883 +
                    (C31613 * C1041 + C17823 * C1051 + C31599 * C273 +
                     C32732 * C287 + C31607 * C270 + C32725 * C286) *
                        C20880 +
                    (C31613 * C1033 + C17823 * C1042 + C31599 * C257 +
                     C32732 * C272 + C31607 * C256 + C32725 * C271) *
                        C20882) *
                       C32906) *
                      C32644 * C249 +
                  (((C31607 * C257 + C32725 * C272 + C31599 * C1033 +
                     C32732 * C1042 + C31613 * C1034 + C17823 * C1043) *
                        C20882 +
                    (C31607 * C273 + C32725 * C287 + C31599 * C1041 +
                     C32732 * C1051 + C31613 * C1044 + C17823 * C1052) *
                        C20880 +
                    (C31607 * C1167 + C32725 * C1179 + C31599 * C1719 +
                     C32732 * C1722 + C31613 * C6476 + C17823 * C6480) *
                        C20883 +
                    (C31607 * C1178 + C32725 * C1194 + C31599 * C1723 +
                     C32732 * C1728 + C31613 * C6479 + C17823 * C6485) *
                        C32771) *
                       C32906 +
                   ((C31607 * C258 + C32725 * C274 + C31599 * C1032 +
                     C32732 * C1040 + C31613 * C1035 + C17823 * C1045) *
                        C20882 +
                    (C31607 * C275 + C32725 * C288 + C31599 * C1039 +
                     C32732 * C1050 + C31613 * C1046 + C17823 * C1053) *
                        C20880 +
                    (C31607 * C1166 + C32725 * C1177 + C31599 * C1720 +
                     C32732 * C1724 + C31613 * C6656 + C17823 * C6657) *
                        C20883 +
                    (C31607 * C1176 + C32725 * C1193 + C31599 * C1725 +
                     C32732 * C1729 + C31613 * C6658 + C17823 * C6659) *
                        C32771) *
                       C32595) *
                      C32644 * C250) *
                 C32618) /
                    (p * q * std::sqrt(p + q));
    d2ee[30] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                 ((((C31607 * C115 + C32725 * C122 + C31599 * C256 +
                     C32732 * C271 + C31613 * C257 + C17823 * C272) *
                        C31694 +
                    (C31607 * C123 + C32725 * C136 + C31599 * C270 +
                     C32732 * C286 + C31613 * C273 + C17823 * C287) *
                        C32767 +
                    (C20139 + C20140 + C20141) * C31686 +
                    (C20142 + C20143 + C20144) * C32774 + C31032 * C31700 +
                    C31033 * C24425) *
                       C32585 * C32644 * C479 -
                   ((C31613 * C6483 + C17823 * C6486 + C31599 * C1183 +
                     C32732 * C1196 + C31607 * C1182 + C32725 * C1195) *
                        C24425 +
                    (C31613 * C6477 + C17823 * C6481 + C31599 * C1169 +
                     C32732 * C1181 + C31607 * C1168 + C32725 * C1180) *
                        C31700 +
                    (C20782 + C20781 + C20780) * C32774 +
                    (C20779 + C20778 + C20777) * C31686 +
                    (C31613 * C1041 + C17823 * C1051 + C31599 * C273 +
                     C32732 * C287 + C31607 * C270 + C32725 * C286) *
                        C32767 +
                    (C31613 * C1033 + C17823 * C1042 + C31599 * C257 +
                     C32732 * C272 + C31607 * C256 + C32725 * C271) *
                        C31694) *
                       C32585 * C32644 * C480) *
                      C481 +
                  (((C18293 + C18292 + C18291) * C31694 +
                    (C18290 + C18289 + C18288) * C32767 +
                    (C20368 + C20367 + C20366) * C31686 +
                    (C20365 + C20364 + C20363) * C32774 +
                    (C31607 * C1170 + C32725 * C1184 + C31599 * C1171 +
                     C32732 * C1185 + C31613 * C7292 + C17823 * C7293) *
                        C31700 +
                    (C31607 * C1186 + C32725 * C1197 + C31599 * C1187 +
                     C32732 * C1198 + C31613 * C7294 + C17823 * C7295) *
                        C24425) *
                       C32585 * C32644 * C480 -
                   ((C20145 + C20146 + C20147) * C24425 +
                    (C20148 + C20149 + C20150) * C31700 + C20569 * C32774 +
                    C20570 * C31686 + (C17872 + C17871 + C17870) * C32767 +
                    (C17869 + C17868 + C17867) * C31694) *
                       C32585 * C32644 * C479) *
                      C482)) /
                (p * q * std::sqrt(p + q));
    d2ee[31] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                 ((((C31607 * C115 + C32725 * C122 + C31599 * C256 +
                     C32732 * C271 + C31613 * C257 + C17823 * C272) *
                        C31694 +
                    (C31607 * C123 + C32725 * C136 + C31599 * C270 +
                     C32732 * C286 + C31613 * C273 + C17823 * C287) *
                        C32767 +
                    (C20139 + C20140 + C20141) * C31686 +
                    (C20142 + C20143 + C20144) * C32774 + C31032 * C31700 +
                    C31033 * C24425) *
                       C32585 * C601 -
                   ((C31034 + C31035 + C31036) * C24425 +
                    (C31037 + C31038 + C31039) * C31700 +
                    (C20151 + C20152 + C20153) * C32774 +
                    (C20154 + C20155 + C20156) * C31686 +
                    (C20144 + C20143 + C20142) * C32767 +
                    (C20141 + C20140 + C20139) * C31694) *
                       C32585 * C602) *
                      C479 +
                  (((C20777 + C20778 + C20779) * C31694 +
                    (C20780 + C20781 + C20782) * C32767 +
                    (C31490 + C31491 + C31492) * C31686 +
                    (C31493 + C31494 + C31495) * C32774 +
                    (C31607 * C2656 + C32725 * C2659 + C31599 * C7076 +
                     C32732 * C7080 + C31613 * C7610 + C17823 * C7611) *
                        C31700 +
                    (C31607 * C2660 + C32725 * C2665 + C31599 * C7079 +
                     C32732 * C7085 + C31613 * C7612 + C17823 * C7613) *
                        C24425) *
                       C32585 * C602 -
                   ((C31495 + C31494 + C31493) * C24425 +
                    (C31492 + C31491 + C31490) * C31700 +
                    (C20782 + C20781 + C20780) * C32774 +
                    (C20779 + C20778 + C20777) * C31686 +
                    (C31613 * C1041 + C17823 * C1051 + C31599 * C273 +
                     C32732 * C287 + C31607 * C270 + C32725 * C286) *
                        C32767 +
                    (C31613 * C1033 + C17823 * C1042 + C31599 * C257 +
                     C32732 * C272 + C31607 * C256 + C32725 * C271) *
                        C31694) *
                       C32585 * C601) *
                      C480) *
                 C32618) /
                (p * q * std::sqrt(p + q));
    d2ee[32] += (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((C31607 * C115 + C32725 * C122 + C31599 * C256 +
                    C32732 * C271 + C31613 * C257 + C17823 * C272) *
                       C31694 +
                   (C31607 * C123 + C32725 * C136 + C31599 * C270 +
                    C32732 * C286 + C31613 * C273 + C17823 * C287) *
                       C32767 +
                   (C20139 + C20140 + C20141) * C31686 +
                   (C20142 + C20143 + C20144) * C32774 +
                   (C20156 + C20155 + C20154) * C31700 +
                   (C20153 + C20152 + C20151) * C24425) *
                      C32585 * C32644 * C248 -
                  ((C31613 * C6483 + C17823 * C6486 + C31599 * C1183 +
                    C32732 * C1196 + C31607 * C1182 + C32725 * C1195) *
                       C24425 +
                   (C31613 * C6477 + C17823 * C6481 + C31599 * C1169 +
                    C32732 * C1181 + C31607 * C1168 + C32725 * C1180) *
                       C31700 +
                   (C20782 + C20781 + C20780) * C32774 +
                   (C20779 + C20778 + C20777) * C31686 +
                   (C31613 * C1041 + C17823 * C1051 + C31599 * C273 +
                    C32732 * C287 + C31607 * C270 + C32725 * C286) *
                       C32767 +
                   (C31613 * C1033 + C17823 * C1042 + C31599 * C257 +
                    C32732 * C272 + C31607 * C256 + C32725 * C271) *
                       C31694) *
                      C32585 * C32644 * C249 +
                  ((C31607 * C257 + C32725 * C272 + C31599 * C1033 +
                    C32732 * C1042 + C31613 * C1034 + C17823 * C1043) *
                       C31694 +
                   (C31607 * C273 + C32725 * C287 + C31599 * C1041 +
                    C32732 * C1051 + C31613 * C1044 + C17823 * C1052) *
                       C32767 +
                   (C31607 * C1167 + C32725 * C1179 + C31599 * C1719 +
                    C32732 * C1722 + C31613 * C6476 + C17823 * C6480) *
                       C31686 +
                   (C31607 * C1178 + C32725 * C1194 + C31599 * C1723 +
                    C32732 * C1728 + C31613 * C6479 + C17823 * C6485) *
                       C32774 +
                   (C31607 * C1169 + C32725 * C1181 + C31599 * C6477 +
                    C32732 * C6481 + C31613 * C6478 + C17823 * C6482) *
                       C31700 +
                   (C31607 * C1183 + C32725 * C1196 + C31599 * C6483 +
                    C32732 * C6486 + C31613 * C6484 + C17823 * C6487) *
                       C24425) *
                      C32585 * C32644 * C250) *
                 C32618) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((C31607 * C115 + C32725 * C122 + C31599 * C256 +
                    C32732 * C271 + C31613 * C257 + C17823 * C272) *
                       C31694 +
                   (C31607 * C123 + C32725 * C136 + C31599 * C270 +
                    C32732 * C286 + C31613 * C273 + C17823 * C287) *
                       C32767 +
                   (C20139 + C20140 + C20141) * C31686 +
                   (C20142 + C20143 + C20144) * C32774 +
                   (C20156 + C20155 + C20154) * C31700 +
                   (C20153 + C20152 + C20151) * C24425) *
                      C32585 * C32644 * C32630 * C110 -
                  ((C20145 + C20146 + C20147) * C24425 +
                   (C20148 + C20149 + C20150) * C31700 + C20569 * C32774 +
                   C20570 * C31686 + (C17872 + C17871 + C17870) * C32767 +
                   (C17869 + C17868 + C17867) * C31694) *
                      C32585 * C32644 * C32630 * C111 +
                  (C17887 * C31694 + C17888 * C32767 +
                   (C18469 + C18468 + C18467) * C31686 +
                   (C18466 + C18465 + C18464) * C32774 +
                   (C31607 * C364 + C32725 * C381 + C31599 * C1172 +
                    C32732 * C1188 + C31613 * C1173 + C17823 * C1189) *
                       C31700 +
                   (C31607 * C382 + C32725 * C394 + C31599 * C1190 +
                    C32732 * C1199 + C31613 * C1191 + C17823 * C1200) *
                       C24425) *
                      C32585 * C32644 * C32630 * C112)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((C31607 * C115 + C32725 * C122 + C31599 * C256 +
                    C32732 * C271 + C31613 * C257 + C17823 * C272) *
                       C31694 +
                   (C31607 * C123 + C32725 * C136 + C31599 * C270 +
                    C32732 * C286 + C31613 * C273 + C17823 * C287) *
                       C32767 +
                   (C20139 + C20140 + C20141) * C31686 +
                   (C20142 + C20143 + C20144) * C32774 + C31032 * C31700 +
                   C31033 * C24425) *
                      C32585 * C354 -
                  ((C31034 + C31035 + C31036) * C24425 +
                   (C31037 + C31038 + C31039) * C31700 +
                   (C20151 + C20152 + C20153) * C32774 +
                   (C20154 + C20155 + C20156) * C31686 +
                   (C20144 + C20143 + C20142) * C32767 +
                   (C20141 + C20140 + C20139) * C31694) *
                      C32585 * C355 +
                  (C31032 * C31694 + C31033 * C32767 +
                   (C31039 + C31038 + C31037) * C31686 +
                   (C31036 + C31035 + C31034) * C32774 +
                   (C31607 * C2111 + C32725 * C2120 + C31599 * C7077 +
                    C32732 * C7081 + C31613 * C7078 + C17823 * C7082) *
                       C31700 +
                   (C31607 * C2121 + C32725 * C2129 + C31599 * C7083 +
                    C32732 * C7086 + C31613 * C7084 + C17823 * C7087) *
                       C24425) *
                      C32585 * C356) *
                 C32630 * C32618) /
                    (p * q * std::sqrt(p + q));
    d2ee[33] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                 ((((C31607 * C115 + C32725 * C122 + C31599 * C256 +
                     C32732 * C271 + C31613 * C257 + C17823 * C272) *
                        C31694 +
                    (C31607 * C123 + C32725 * C136 + C31599 * C270 +
                     C32732 * C286 + C31613 * C273 + C17823 * C287) *
                        C32767 +
                    (C20139 + C20140 + C20141) * C31686 +
                    (C20142 + C20143 + C20144) * C32774 + C31032 * C31700 +
                    C31033 * C24425) *
                       C32585 * C601 -
                   ((C31034 + C31035 + C31036) * C24425 +
                    (C31037 + C31038 + C31039) * C31700 +
                    (C20151 + C20152 + C20153) * C32774 +
                    (C20154 + C20155 + C20156) * C31686 +
                    (C20144 + C20143 + C20142) * C32767 +
                    (C20141 + C20140 + C20139) * C31694) *
                       C32585 * C602) *
                      C32630 * C481 +
                  ((C20567 * C31694 + C20568 * C32767 +
                    (C20150 + C20149 + C20148) * C31686 +
                    (C20147 + C20146 + C20145) * C32774 +
                    (C31607 * C2109 + C32725 * C2117 + C31599 * C2657 +
                     C32732 * C2661 + C31613 * C7442 + C17823 * C7443) *
                        C31700 +
                    (C31607 * C2116 + C32725 * C2127 + C31599 * C2662 +
                     C32732 * C2666 + C31613 * C7444 + C17823 * C7445) *
                        C24425) *
                       C32585 * C602 -
                   ((C20145 + C20146 + C20147) * C24425 +
                    (C20148 + C20149 + C20150) * C31700 + C20569 * C32774 +
                    C20570 * C31686 + (C17872 + C17871 + C17870) * C32767 +
                    (C17869 + C17868 + C17867) * C31694) *
                       C32585 * C601) *
                      C32630 * C482)) /
                (p * q * std::sqrt(p + q));
    d2ee[34] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                 (((C31607 * C115 + C32725 * C122 + C31599 * C256 +
                    C32732 * C271 + C31613 * C257 + C17823 * C272) *
                       C31694 +
                   (C31607 * C123 + C32725 * C136 + C31599 * C270 +
                    C32732 * C286 + C31613 * C273 + C17823 * C287) *
                       C32767 +
                   (C20139 + C20140 + C20141) * C31686 +
                   (C20142 + C20143 + C20144) * C32774 +
                   (C20156 + C20155 + C20154) * C31700 +
                   (C20153 + C20152 + C20151) * C24425) *
                      C32585 * C32644 * C32630 * C110 -
                  ((C20145 + C20146 + C20147) * C24425 +
                   (C20148 + C20149 + C20150) * C31700 + C20569 * C32774 +
                   C20570 * C31686 + (C17872 + C17871 + C17870) * C32767 +
                   (C17869 + C17868 + C17867) * C31694) *
                      C32585 * C32644 * C32630 * C111 +
                  (C17887 * C31694 + C17888 * C32767 +
                   (C18469 + C18468 + C18467) * C31686 +
                   (C18466 + C18465 + C18464) * C32774 +
                   (C31607 * C364 + C32725 * C381 + C31599 * C1172 +
                    C32732 * C1188 + C31613 * C1173 + C17823 * C1189) *
                       C31700 +
                   (C31607 * C382 + C32725 * C394 + C31599 * C1190 +
                    C32732 * C1199 + C31613 * C1191 + C17823 * C1200) *
                       C24425) *
                      C32585 * C32644 * C32630 * C112)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                 (((C31607 * C115 + C32725 * C122 + C31599 * C256 +
                    C32732 * C271 + C31613 * C257 + C17823 * C272) *
                       C31694 +
                   (C31607 * C123 + C32725 * C136 + C31599 * C270 +
                    C32732 * C286 + C31613 * C273 + C17823 * C287) *
                       C32767 +
                   (C20139 + C20140 + C20141) * C31686 +
                   (C20142 + C20143 + C20144) * C32774 +
                   (C20156 + C20155 + C20154) * C31700 +
                   (C20153 + C20152 + C20151) * C24425) *
                      C32585 * C32644 * C248 -
                  ((C31613 * C6483 + C17823 * C6486 + C31599 * C1183 +
                    C32732 * C1196 + C31607 * C1182 + C32725 * C1195) *
                       C24425 +
                   (C31613 * C6477 + C17823 * C6481 + C31599 * C1169 +
                    C32732 * C1181 + C31607 * C1168 + C32725 * C1180) *
                       C31700 +
                   (C20782 + C20781 + C20780) * C32774 +
                   (C20779 + C20778 + C20777) * C31686 +
                   (C31613 * C1041 + C17823 * C1051 + C31599 * C273 +
                    C32732 * C287 + C31607 * C270 + C32725 * C286) *
                       C32767 +
                   (C31613 * C1033 + C17823 * C1042 + C31599 * C257 +
                    C32732 * C272 + C31607 * C256 + C32725 * C271) *
                       C31694) *
                      C32585 * C32644 * C249 +
                  ((C31607 * C257 + C32725 * C272 + C31599 * C1033 +
                    C32732 * C1042 + C31613 * C1034 + C17823 * C1043) *
                       C31694 +
                   (C31607 * C273 + C32725 * C287 + C31599 * C1041 +
                    C32732 * C1051 + C31613 * C1044 + C17823 * C1052) *
                       C32767 +
                   (C31607 * C1167 + C32725 * C1179 + C31599 * C1719 +
                    C32732 * C1722 + C31613 * C6476 + C17823 * C6480) *
                       C31686 +
                   (C31607 * C1178 + C32725 * C1194 + C31599 * C1723 +
                    C32732 * C1728 + C31613 * C6479 + C17823 * C6485) *
                       C32774 +
                   (C31607 * C1169 + C32725 * C1181 + C31599 * C6477 +
                    C32732 * C6481 + C31613 * C6478 + C17823 * C6482) *
                       C31700 +
                   (C31607 * C1183 + C32725 * C1196 + C31599 * C6483 +
                    C32732 * C6486 + C31613 * C6484 + C17823 * C6487) *
                       C24425) *
                      C32585 * C32644 * C250) *
                 C32618) /
                    (p * q * std::sqrt(p + q));
    d2ee[35] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C15875 * C115 + C32998 * C122 + C15876 * C256 + C32994 * C271 +
             C15877 * C257 + C32984 * C272 + C15878 * C1033 + C32966 * C1042) *
                C20882 +
            (C15875 * C123 + C32998 * C136 + C15876 * C270 + C32994 * C286 +
             C15877 * C273 + C32984 * C287 + C15878 * C1041 + C32966 * C1051) *
                C20880 +
            (C27508 + C27509 + C27510 + C27511) * C20883 +
            (C27512 + C27513 + C27514 + C27515) * C32771) *
               C32585 * C32644 * C479 -
           ((C15878 * C6479 + C32966 * C6485 + C15877 * C1723 + C32984 * C1728 +
             C15876 * C1178 + C32994 * C1194 + C15875 * C727 + C32998 * C736) *
                C32771 +
            (C15878 * C6476 + C32966 * C6480 + C15877 * C1719 + C32984 * C1722 +
             C15876 * C1167 + C32994 * C1179 + C15875 * C721 + C32998 * C726) *
                C20883 +
            (C15878 * C1044 + C32966 * C1052 + C15877 * C1041 + C32984 * C1051 +
             C15876 * C273 + C32994 * C287 + C15875 * C270 + C32998 * C286) *
                C20880 +
            (C15878 * C1034 + C32966 * C1043 + C15877 * C1033 + C32984 * C1042 +
             C15876 * C257 + C32994 * C272 + C15875 * C256 + C32998 * C271) *
                C20882) *
               C32585 * C32644 * C480) *
              C481 +
          (((C16277 + C16276 + C16275 + C16274) * C20882 +
            (C16273 + C16272 + C16271 + C16270) * C20880 +
            (C15875 * C722 + C32998 * C728 + C15876 * C1166 + C32994 * C1177 +
             C15877 * C1720 + C32984 * C1724 + C15878 * C6656 +
             C32966 * C6657) *
                C20883 +
            (C15875 * C729 + C32998 * C737 + C15876 * C1176 + C32994 * C1193 +
             C15877 * C1725 + C32984 * C1729 + C15878 * C6658 +
             C32966 * C6659) *
                C32771) *
               C32585 * C32644 * C480 -
           ((C16424 + C16425 + C16426 + C16427) * C32771 +
            (C16428 + C16429 + C16430 + C16431) * C20883 +
            (C15919 + C15918 + C15917 + C15916) * C20880 +
            (C15915 + C15914 + C15913 + C15912) * C20882) *
               C32585 * C32644 * C479) *
              C482)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C15053 * C115 + C15047 * C122 + C15054 * C256 + C32729 * C271) *
                 C20882 +
             (C15053 * C123 + C15047 * C136 + C15054 * C270 + C32729 * C286) *
                 C20880 +
             (C17058 + C17059) * C20883 + (C17060 + C17061) * C32771) *
                C32988 +
            ((C15088 + C15089) * C20882 + (C15090 + C15091) * C20880 +
             C17488 * C20883 + C17489 * C32771) *
                C32975 +
            C26307 * C32945) *
               C32644 * C479 -
           (((C19271 + C19272) * C32771 + (C19273 + C19274) * C20883 +
             (C15468 + C15469) * C20880 + (C15470 + C15471) * C20882) *
                C32945 +
            ((C17290 + C17291) * C32771 + (C17292 + C17293) * C20883 +
             (C15472 + C15473) * C20880 + (C15474 + C15475) * C20882) *
                C32975 +
            ((C17707 + C17706) * C32771 + (C17705 + C17704) * C20883 +
             (C15054 * C273 + C32729 * C287 + C15053 * C270 + C15047 * C286) *
                 C20880 +
             (C15054 * C257 + C32729 * C272 + C15053 * C256 + C15047 * C271) *
                 C20882) *
                C32988) *
               C32644 * C480) *
              C481 +
          ((((C15475 + C15474) * C20882 + (C15473 + C15472) * C20880 +
             (C17293 + C17292) * C20883 + (C17291 + C17290) * C32771) *
                C32988 +
            ((C15471 + C15470) * C20882 + (C15469 + C15468) * C20880 +
             (C19274 + C19273) * C20883 + (C19272 + C19271) * C32771) *
                C32975 +
            ((C15467 + C15466) * C20882 + (C15465 + C15464) * C20880 +
             (C15053 * C724 + C15047 * C732 + C15054 * C1533 + C32729 * C1534) *
                 C20883 +
             (C15053 * C733 + C15047 * C739 + C15054 * C1535 + C32729 * C1536) *
                 C32771) *
                C32945) *
               C32644 * C480 -
           (((C15630 + C15631) * C32771 + (C15632 + C15633) * C20883 +
             (C15099 + C15098) * C20880 + (C15097 + C15096) * C20882) *
                C32945 +
            (C19469 * C32771 + C19470 * C20883 + (C15095 + C15094) * C20880 +
             (C15093 + C15092) * C20882) *
                C32975 +
            (C17492 * C32771 + C17493 * C20883 + (C15091 + C15090) * C20880 +
             (C15089 + C15088) * C20882) *
                C32988) *
               C32644 * C479) *
              C482)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C15053 * C115 + C15047 * C122 + C15054 * C256 + C32729 * C271) *
                C22664 +
            (C15053 * C123 + C15047 * C136 + C15054 * C270 + C32729 * C286) *
                C32999 +
            (C17058 + C17059) * C22665 + (C17060 + C17061) * C32996 +
            C17074 * C22666 + C17075 * C32987 + C28232 * C22667 +
            C28233 * C32972) *
               C32585 * C32644 * C479 -
           ((C15054 * C7079 + C32729 * C7085 + C15053 * C2660 +
             C15047 * C2665) *
                C32972 +
            (C15054 * C7076 + C32729 * C7080 + C15053 * C2656 +
             C15047 * C2659) *
                C22667 +
            (C17711 + C17710) * C32987 + (C17709 + C17708) * C22666 +
            (C17707 + C17706) * C32996 + (C17705 + C17704) * C22665 +
            (C15054 * C273 + C32729 * C287 + C15053 * C270 + C15047 * C286) *
                C32999 +
            (C15054 * C257 + C32729 * C272 + C15053 * C256 + C15047 * C271) *
                C22664) *
               C32585 * C32644 * C480) *
              C481 +
          (((C15475 + C15474) * C22664 + (C15473 + C15472) * C32999 +
            (C17293 + C17292) * C22665 + (C17291 + C17290) * C32996 +
            (C17289 + C17288) * C22666 + (C17287 + C17286) * C32987 +
            (C15053 * C2657 + C15047 * C2661 + C15054 * C7442 +
             C32729 * C7443) *
                C22667 +
            (C15053 * C2662 + C15047 * C2666 + C15054 * C7444 +
             C32729 * C7445) *
                C32972) *
               C32585 * C32644 * C480 -
           ((C17066 + C17067) * C32972 + (C17068 + C17069) * C22667 +
            C17490 * C32987 + C17491 * C22666 + C17492 * C32996 +
            C17493 * C22665 + (C15091 + C15090) * C32999 +
            (C15089 + C15088) * C22664) *
               C32585 * C32644 * C479) *
              C482)) /
            (p * q * std::sqrt(p + q));
    d2ee[36] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C15875 * C115 + C32998 * C122 + C15876 * C256 + C32994 * C271 +
             C15877 * C257 + C32984 * C272 + C15878 * C1033 + C32966 * C1042) *
                C20882 +
            (C15875 * C123 + C32998 * C136 + C15876 * C270 + C32994 * C286 +
             C15877 * C273 + C32984 * C287 + C15878 * C1041 + C32966 * C1051) *
                C20880 +
            (C27508 + C27509 + C27510 + C27511) * C20883 +
            (C27512 + C27513 + C27514 + C27515) * C32771) *
               C32585 * C601 -
           ((C27516 + C27517 + C27518 + C27519) * C32771 +
            (C27520 + C27521 + C27522 + C27523) * C20883 +
            (C27515 + C27514 + C27513 + C27512) * C20880 +
            (C27511 + C27510 + C27509 + C27508) * C20882) *
               C32585 * C602) *
              C479 +
          (((C27930 + C27931 + C27932 + C27933) * C20882 +
            (C27934 + C27935 + C27936 + C27937) * C20880 +
            (C15875 * C1168 + C32998 * C1180 + C15876 * C1169 + C32994 * C1181 +
             C15877 * C6477 + C32984 * C6481 + C15878 * C6478 +
             C32966 * C6482) *
                C20883 +
            (C15875 * C1182 + C32998 * C1195 + C15876 * C1183 + C32994 * C1196 +
             C15877 * C6483 + C32984 * C6486 + C15878 * C6484 +
             C32966 * C6487) *
                C32771) *
               C32585 * C602 -
           ((C27937 + C27936 + C27935 + C27934) * C32771 +
            (C27933 + C27932 + C27931 + C27930) * C20883 +
            (C15878 * C1044 + C32966 * C1052 + C15877 * C1041 + C32984 * C1051 +
             C15876 * C273 + C32994 * C287 + C15875 * C270 + C32998 * C286) *
                C20880 +
            (C15878 * C1034 + C32966 * C1043 + C15877 * C1033 + C32984 * C1042 +
             C15876 * C257 + C32994 * C272 + C15875 * C256 + C32998 * C271) *
                C20882) *
               C32585 * C601) *
              C480) *
         C32618) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C15053 * C115 + C15047 * C122 + C15054 * C256 + C32729 * C271) *
                 C20882 +
             (C15053 * C123 + C15047 * C136 + C15054 * C270 + C32729 * C286) *
                 C20880 +
             (C17058 + C17059) * C20883 + (C17060 + C17061) * C32771) *
                C32988 +
            ((C15088 + C15089) * C20882 + (C15090 + C15091) * C20880 +
             C17488 * C20883 + C17489 * C32771) *
                C32975 +
            C26307 * C32945) *
               C601 -
           (((C16728 + C16729) * C32771 + (C16730 + C16731) * C20883 +
             C19469 * C20880 + C19470 * C20882) *
                C32945 +
            (C17490 * C32771 + C17491 * C20883 + C17492 * C20880 +
             C17493 * C20882) *
                C32975 +
            ((C17065 + C17064) * C32771 + (C17063 + C17062) * C20883 +
             (C17061 + C17060) * C20880 + (C17059 + C17058) * C20882) *
                C32988) *
               C602) *
              C479 +
          ((((C17704 + C17705) * C20882 + (C17706 + C17707) * C20880 +
             (C17708 + C17709) * C20883 + (C17710 + C17711) * C32771) *
                C32988 +
            ((C17293 + C17292) * C20882 + (C17291 + C17290) * C20880 +
             (C17289 + C17288) * C20883 + (C17287 + C17286) * C32771) *
                C32975 +
            ((C19274 + C19273) * C20882 + (C19272 + C19271) * C20880 +
             (C15053 * C1172 + C15047 * C1188 + C15054 * C1173 +
              C32729 * C1189) *
                 C20883 +
             (C15053 * C1190 + C15047 * C1199 + C15054 * C1191 +
              C32729 * C1200) *
                 C32771) *
                C32945) *
               C602 -
           (((C19271 + C19272) * C32771 + (C19273 + C19274) * C20883 +
             (C15468 + C15469) * C20880 + (C15470 + C15471) * C20882) *
                C32945 +
            ((C17290 + C17291) * C32771 + (C17292 + C17293) * C20883 +
             (C15472 + C15473) * C20880 + (C15474 + C15475) * C20882) *
                C32975 +
            ((C17707 + C17706) * C32771 + (C17705 + C17704) * C20883 +
             (C15054 * C273 + C32729 * C287 + C15053 * C270 + C15047 * C286) *
                 C20880 +
             (C15054 * C257 + C32729 * C272 + C15053 * C256 + C15047 * C271) *
                 C20882) *
                C32988) *
               C601) *
              C480) *
         C32618) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C15053 * C115 + C15047 * C122 + C15054 * C256 + C32729 * C271) *
                C22664 +
            (C15053 * C123 + C15047 * C136 + C15054 * C270 + C32729 * C286) *
                C32999 +
            (C17058 + C17059) * C22665 + (C17060 + C17061) * C32996 +
            C17074 * C22666 + C17075 * C32987 + C28232 * C22667 +
            C28233 * C32972) *
               C32585 * C601 -
           ((C28242 + C28243) * C32972 + (C28244 + C28245) * C22667 +
            (C17070 + C17071) * C32987 + (C17072 + C17073) * C22666 +
            (C17065 + C17064) * C32996 + (C17063 + C17062) * C22665 +
            (C17061 + C17060) * C32999 + (C17059 + C17058) * C22664) *
               C32585 * C602) *
              C479 +
          (((C17704 + C17705) * C22664 + (C17706 + C17707) * C32999 +
            (C17708 + C17709) * C22665 + (C17710 + C17711) * C32996 +
            (C28644 + C28645) * C22666 + (C28646 + C28647) * C32987 +
            (C15053 * C7077 + C15047 * C7081 + C15054 * C7078 +
             C32729 * C7082) *
                C22667 +
            (C15053 * C7083 + C15047 * C7086 + C15054 * C7084 +
             C32729 * C7087) *
                C32972) *
               C32585 * C602 -
           ((C28647 + C28646) * C32972 + (C28645 + C28644) * C22667 +
            (C17711 + C17710) * C32987 + (C17709 + C17708) * C22666 +
            (C17707 + C17706) * C32996 + (C17705 + C17704) * C22665 +
            (C15054 * C273 + C32729 * C287 + C15053 * C270 + C15047 * C286) *
                C32999 +
            (C15054 * C257 + C32729 * C272 + C15053 * C256 + C15047 * C271) *
                C22664) *
               C32585 * C601) *
              C480) *
         C32618) /
            (p * q * std::sqrt(p + q));
    d2ee[37] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C15053 * C115 + C15047 * C122 + C15054 * C256 +
                 C32729 * C271) *
                    C20882 +
                (C15053 * C123 + C15047 * C136 + C15054 * C270 +
                 C32729 * C286) *
                    C20880 +
                (C17058 + C17059) * C20883 + (C17060 + C17061) * C32771) *
                   C32988 +
               ((C15088 + C15089) * C20882 + (C15090 + C15091) * C20880 +
                C17488 * C20883 + C17489 * C32771) *
                   C32975 +
               C26307 * C32945) *
                  C32644 * C32630 * C110 -
              (((C15630 + C15631) * C32771 + (C15632 + C15633) * C20883 +
                (C15099 + C15098) * C20880 + (C15097 + C15096) * C20882) *
                   C32945 +
               (C19469 * C32771 + C19470 * C20883 + (C15095 + C15094) * C20880 +
                (C15093 + C15092) * C20882) *
                   C32975 +
               (C17492 * C32771 + C17493 * C20883 + (C15091 + C15090) * C20880 +
                (C15089 + C15088) * C20882) *
                   C32988) *
                  C32644 * C32630 * C111 +
              (C26307 * C32988 +
               (C15106 * C20882 + C15107 * C20880 + (C15633 + C15632) * C20883 +
                (C15631 + C15630) * C32771) *
                   C32975 +
               ((C15103 + C15102) * C20882 + (C15101 + C15100) * C20880 +
                (C15053 * C357 + C15047 * C368 + C15054 * C725 +
                 C32729 * C734) *
                    C20883 +
                (C15053 * C367 + C15047 * C387 + C15054 * C735 +
                 C32729 * C740) *
                    C32771) *
                   C32945) *
                  C32644 * C32630 * C112) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C15053 * C115 + C15047 * C122 + C15054 * C256 +
                 C32729 * C271) *
                    C20882 +
                (C15053 * C123 + C15047 * C136 + C15054 * C270 +
                 C32729 * C286) *
                    C20880 +
                (C17058 + C17059) * C20883 + (C17060 + C17061) * C32771) *
                   C32988 +
               ((C15088 + C15089) * C20882 + (C15090 + C15091) * C20880 +
                C17488 * C20883 + C17489 * C32771) *
                   C32975 +
               C26307 * C32945) *
                  C32644 * C248 -
              (((C19271 + C19272) * C32771 + (C19273 + C19274) * C20883 +
                (C15468 + C15469) * C20880 + (C15470 + C15471) * C20882) *
                   C32945 +
               ((C17290 + C17291) * C32771 + (C17292 + C17293) * C20883 +
                (C15472 + C15473) * C20880 + (C15474 + C15475) * C20882) *
                   C32975 +
               ((C17707 + C17706) * C32771 + (C17705 + C17704) * C20883 +
                (C15054 * C273 + C32729 * C287 + C15053 * C270 +
                 C15047 * C286) *
                    C20880 +
                (C15054 * C257 + C32729 * C272 + C15053 * C256 +
                 C15047 * C271) *
                    C20882) *
                   C32988) *
                  C32644 * C249 +
              (((C15053 * C257 + C15047 * C272 + C15054 * C1033 +
                 C32729 * C1042) *
                    C20882 +
                (C15053 * C273 + C15047 * C287 + C15054 * C1041 +
                 C32729 * C1051) *
                    C20880 +
                (C15053 * C1167 + C15047 * C1179 + C15054 * C1719 +
                 C32729 * C1722) *
                    C20883 +
                (C15053 * C1178 + C15047 * C1194 + C15054 * C1723 +
                 C32729 * C1728) *
                    C32771) *
                   C32988 +
               ((C15053 * C258 + C15047 * C274 + C15054 * C1032 +
                 C32729 * C1040) *
                    C20882 +
                (C15053 * C275 + C15047 * C288 + C15054 * C1039 +
                 C32729 * C1050) *
                    C20880 +
                (C15053 * C1166 + C15047 * C1177 + C15054 * C1720 +
                 C32729 * C1724) *
                    C20883 +
                (C15053 * C1176 + C15047 * C1193 + C15054 * C1725 +
                 C32729 * C1729) *
                    C32771) *
                   C32975 +
               ((C15053 * C259 + C15047 * C276 + C15054 * C1031 +
                 C32729 * C1038) *
                    C20882 +
                (C15053 * C277 + C15047 * C289 + C15054 * C1037 +
                 C32729 * C1049) *
                    C20880 +
                (C15053 * C1165 + C15047 * C1175 + C15054 * C1721 +
                 C32729 * C1726) *
                    C20883 +
                (C15053 * C1174 + C15047 * C1192 + C15054 * C1727 +
                 C32729 * C1730) *
                    C32771) *
                   C32945) *
                  C32644 * C250) *
             C32618) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C15053 * C115 + C15047 * C122 + C15054 * C256 + C32729 * C271) *
                C20882 +
            (C15053 * C123 + C15047 * C136 + C15054 * C270 + C32729 * C286) *
                C20880 +
            (C17058 + C17059) * C20883 + (C17060 + C17061) * C32771) *
               C32988 +
           ((C15088 + C15089) * C20882 + (C15090 + C15091) * C20880 +
            C17488 * C20883 + C17489 * C32771) *
               C32975 +
           C26307 * C32945) *
              C354 -
          (((C16728 + C16729) * C32771 + (C16730 + C16731) * C20883 +
            C19469 * C20880 + C19470 * C20882) *
               C32945 +
           (C17490 * C32771 + C17491 * C20883 + C17492 * C20880 +
            C17493 * C20882) *
               C32975 +
           ((C17065 + C17064) * C32771 + (C17063 + C17062) * C20883 +
            (C17061 + C17060) * C20880 + (C17059 + C17058) * C20882) *
               C32988) *
              C355 +
          ((C17074 * C20882 + C17075 * C20880 + (C17073 + C17072) * C20883 +
            (C17071 + C17070) * C32771) *
               C32988 +
           (C17040 * C20882 + C17041 * C20880 + (C17069 + C17068) * C20883 +
            (C17067 + C17066) * C32771) *
               C32975 +
           ((C16731 + C16730) * C20882 + (C16729 + C16728) * C20880 +
            (C15053 * C2108 + C15047 * C2115 + C15054 * C2658 +
             C32729 * C2663) *
                C20883 +
            (C15053 * C2114 + C15047 * C2126 + C15054 * C2664 +
             C32729 * C2667) *
                C32771) *
               C32945) *
              C356) *
         C32630 * C32618) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C15875 * C115 + C32998 * C122 + C15876 * C256 + C32994 * C271 +
            C15877 * C257 + C32984 * C272 + C15878 * C1033 + C32966 * C1042) *
               C20882 +
           (C15875 * C123 + C32998 * C136 + C15876 * C270 + C32994 * C286 +
            C15877 * C273 + C32984 * C287 + C15878 * C1041 + C32966 * C1051) *
               C20880 +
           (C15875 * C361 + C32998 * C376 + C15876 * C721 + C32994 * C726 +
            C15877 * C1167 + C32984 * C1179 + C15878 * C1719 + C32966 * C1722) *
               C20883 +
           (C15875 * C375 + C32998 * C391 + C15876 * C727 + C32994 * C736 +
            C15877 * C1178 + C32984 * C1194 + C15878 * C1723 + C32966 * C1728) *
               C32771) *
              C32585 * C32644 * C32630 * C110 -
          ((C16424 + C16425 + C16426 + C16427) * C32771 +
           (C16428 + C16429 + C16430 + C16431) * C20883 +
           (C15919 + C15918 + C15917 + C15916) * C20880 +
           (C15915 + C15914 + C15913 + C15912) * C20882) *
              C32585 * C32644 * C32630 * C111 +
          ((C15927 + C15926 + C15925 + C15924) * C20882 +
           (C15923 + C15922 + C15921 + C15920) * C20880 +
           (C15875 * C359 + C32998 * C372 + C15876 * C723 + C32994 * C730 +
            C15877 * C1165 + C32984 * C1175 + C15878 * C1721 + C32966 * C1726) *
               C20883 +
           (C15875 * C371 + C32998 * C389 + C15876 * C731 + C32994 * C738 +
            C15877 * C1174 + C32984 * C1192 + C15878 * C1727 + C32966 * C1730) *
               C32771) *
              C32585 * C32644 * C32630 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C15875 * C115 + C32998 * C122 + C15876 * C256 + C32994 * C271 +
            C15877 * C257 + C32984 * C272 + C15878 * C1033 + C32966 * C1042) *
               C20882 +
           (C15875 * C123 + C32998 * C136 + C15876 * C270 + C32994 * C286 +
            C15877 * C273 + C32984 * C287 + C15878 * C1041 + C32966 * C1051) *
               C20880 +
           (C15875 * C361 + C32998 * C376 + C15876 * C721 + C32994 * C726 +
            C15877 * C1167 + C32984 * C1179 + C15878 * C1719 + C32966 * C1722) *
               C20883 +
           (C15875 * C375 + C32998 * C391 + C15876 * C727 + C32994 * C736 +
            C15877 * C1178 + C32984 * C1194 + C15878 * C1723 + C32966 * C1728) *
               C32771) *
              C32585 * C32644 * C248 -
          ((C15878 * C6479 + C32966 * C6485 + C15877 * C1723 + C32984 * C1728 +
            C15876 * C1178 + C32994 * C1194 + C15875 * C727 + C32998 * C736) *
               C32771 +
           (C15878 * C6476 + C32966 * C6480 + C15877 * C1719 + C32984 * C1722 +
            C15876 * C1167 + C32994 * C1179 + C15875 * C721 + C32998 * C726) *
               C20883 +
           (C15878 * C1044 + C32966 * C1052 + C15877 * C1041 + C32984 * C1051 +
            C15876 * C273 + C32994 * C287 + C15875 * C270 + C32998 * C286) *
               C20880 +
           (C15878 * C1034 + C32966 * C1043 + C15877 * C1033 + C32984 * C1042 +
            C15876 * C257 + C32994 * C272 + C15875 * C256 + C32998 * C271) *
               C20882) *
              C32585 * C32644 * C249 +
          ((C15875 * C257 + C32998 * C272 + C15876 * C1033 + C32994 * C1042 +
            C15877 * C1034 + C32984 * C1043 + C15878 * C6406 + C32966 * C6409) *
               C20882 +
           (C15875 * C273 + C32998 * C287 + C15876 * C1041 + C32994 * C1051 +
            C15877 * C1044 + C32984 * C1052 + C15878 * C6408 + C32966 * C6412) *
               C20880 +
           (C15875 * C1167 + C32998 * C1179 + C15876 * C1719 + C32994 * C1722 +
            C15877 * C6476 + C32984 * C6480 + C15878 * C6742 + C32966 * C6743) *
               C20883 +
           (C15875 * C1178 + C32998 * C1194 + C15876 * C1723 + C32994 * C1728 +
            C15877 * C6479 + C32984 * C6485 + C15878 * C6744 + C32966 * C6745) *
               C32771) *
              C32585 * C32644 * C250) *
         C32618) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C15875 * C115 + C32998 * C122 + C15876 * C256 + C32994 * C271 +
            C15877 * C257 + C32984 * C272 + C15878 * C1033 + C32966 * C1042) *
               C20882 +
           (C15875 * C123 + C32998 * C136 + C15876 * C270 + C32994 * C286 +
            C15877 * C273 + C32984 * C287 + C15878 * C1041 + C32966 * C1051) *
               C20880 +
           (C27508 + C27509 + C27510 + C27511) * C20883 +
           (C27512 + C27513 + C27514 + C27515) * C32771) *
              C32585 * C354 -
          ((C27516 + C27517 + C27518 + C27519) * C32771 +
           (C27520 + C27521 + C27522 + C27523) * C20883 +
           (C27515 + C27514 + C27513 + C27512) * C20880 +
           (C27511 + C27510 + C27509 + C27508) * C20882) *
              C32585 * C355 +
          ((C27523 + C27522 + C27521 + C27520) * C20882 +
           (C27519 + C27518 + C27517 + C27516) * C20880 +
           (C15875 * C2110 + C32998 * C2119 + C15876 * C2656 + C32994 * C2659 +
            C15877 * C7076 + C32984 * C7080 + C15878 * C7610 + C32966 * C7611) *
               C20883 +
           (C15875 * C2118 + C32998 * C2128 + C15876 * C2660 + C32994 * C2665 +
            C15877 * C7079 + C32984 * C7085 + C15878 * C7612 + C32966 * C7613) *
               C32771) *
              C32585 * C356) *
         C32630 * C32618) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C15053 * C115 + C15047 * C122 + C15054 * C256 + C32729 * C271) *
               C22664 +
           (C15053 * C123 + C15047 * C136 + C15054 * C270 + C32729 * C286) *
               C32999 +
           (C17058 + C17059) * C22665 + (C17060 + C17061) * C32996 +
           C17074 * C22666 + C17075 * C32987 + (C17073 + C17072) * C22667 +
           (C17071 + C17070) * C32972) *
              C32585 * C32644 * C32630 * C110 -
          ((C17066 + C17067) * C32972 + (C17068 + C17069) * C22667 +
           C17490 * C32987 + C17491 * C22666 + C17492 * C32996 +
           C17493 * C22665 + (C15091 + C15090) * C32999 +
           (C15089 + C15088) * C22664) *
              C32585 * C32644 * C32630 * C111 +
          (C15104 * C22664 + C15105 * C32999 + C18770 * C22665 +
           C18771 * C32996 + (C16731 + C16730) * C22666 +
           (C16729 + C16728) * C32987 +
           (C15053 * C2108 + C15047 * C2115 + C15054 * C2658 + C32729 * C2663) *
               C22667 +
           (C15053 * C2114 + C15047 * C2126 + C15054 * C2664 + C32729 * C2667) *
               C32972) *
              C32585 * C32644 * C32630 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C15053 * C115 + C15047 * C122 + C15054 * C256 + C32729 * C271) *
               C22664 +
           (C15053 * C123 + C15047 * C136 + C15054 * C270 + C32729 * C286) *
               C32999 +
           (C17058 + C17059) * C22665 + (C17060 + C17061) * C32996 +
           C17074 * C22666 + C17075 * C32987 + (C17073 + C17072) * C22667 +
           (C17071 + C17070) * C32972) *
              C32585 * C32644 * C248 -
          ((C15054 * C7079 + C32729 * C7085 + C15053 * C2660 + C15047 * C2665) *
               C32972 +
           (C15054 * C7076 + C32729 * C7080 + C15053 * C2656 + C15047 * C2659) *
               C22667 +
           (C17711 + C17710) * C32987 + (C17709 + C17708) * C22666 +
           (C17707 + C17706) * C32996 + (C17705 + C17704) * C22665 +
           (C15054 * C273 + C32729 * C287 + C15053 * C270 + C15047 * C286) *
               C32999 +
           (C15054 * C257 + C32729 * C272 + C15053 * C256 + C15047 * C271) *
               C22664) *
              C32585 * C32644 * C249 +
          ((C15053 * C257 + C15047 * C272 + C15054 * C1033 + C32729 * C1042) *
               C22664 +
           (C15053 * C273 + C15047 * C287 + C15054 * C1041 + C32729 * C1051) *
               C32999 +
           (C15053 * C1167 + C15047 * C1179 + C15054 * C1719 + C32729 * C1722) *
               C22665 +
           (C15053 * C1178 + C15047 * C1194 + C15054 * C1723 + C32729 * C1728) *
               C32996 +
           (C15053 * C1169 + C15047 * C1181 + C15054 * C6477 + C32729 * C6481) *
               C22666 +
           (C15053 * C1183 + C15047 * C1196 + C15054 * C6483 + C32729 * C6486) *
               C32987 +
           (C15053 * C7076 + C15047 * C7080 + C15054 * C7610 + C32729 * C7611) *
               C22667 +
           (C15053 * C7079 + C15047 * C7085 + C15054 * C7612 + C32729 * C7613) *
               C32972) *
              C32585 * C32644 * C250) *
         C32618) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C15053 * C115 + C15047 * C122 + C15054 * C256 + C32729 * C271) *
               C22664 +
           (C15053 * C123 + C15047 * C136 + C15054 * C270 + C32729 * C286) *
               C32999 +
           (C17058 + C17059) * C22665 + (C17060 + C17061) * C32996 +
           C17074 * C22666 + C17075 * C32987 + C28232 * C22667 +
           C28233 * C32972) *
              C32585 * C354 -
          ((C28242 + C28243) * C32972 + (C28244 + C28245) * C22667 +
           (C17070 + C17071) * C32987 + (C17072 + C17073) * C22666 +
           (C17065 + C17064) * C32996 + (C17063 + C17062) * C22665 +
           (C17061 + C17060) * C32999 + (C17059 + C17058) * C22664) *
              C32585 * C355 +
          (C17074 * C22664 + C17075 * C32999 + C28232 * C22665 +
           C28233 * C32996 + (C28245 + C28244) * C22666 +
           (C28243 + C28242) * C32987 +
           (C15053 * C12139 + C15047 * C12142 + C15054 * C12419 +
            C32729 * C12420) *
               C22667 +
           (C15053 * C12141 + C15047 * C12145 + C15054 * C12421 +
            C32729 * C12422) *
               C32972) *
              C32585 * C356) *
         C32630 * C32618) /
            (p * q * std::sqrt(p + q));
    d2ee[38] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C15875 * C115 + C32998 * C122 + C15876 * C256 + C32994 * C271 +
             C15877 * C257 + C32984 * C272 + C15878 * C1033 + C32966 * C1042) *
                C20882 +
            (C15875 * C123 + C32998 * C136 + C15876 * C270 + C32994 * C286 +
             C15877 * C273 + C32984 * C287 + C15878 * C1041 + C32966 * C1051) *
                C20880 +
            (C27508 + C27509 + C27510 + C27511) * C20883 +
            (C27512 + C27513 + C27514 + C27515) * C32771) *
               C32585 * C601 -
           ((C27516 + C27517 + C27518 + C27519) * C32771 +
            (C27520 + C27521 + C27522 + C27523) * C20883 +
            (C27515 + C27514 + C27513 + C27512) * C20880 +
            (C27511 + C27510 + C27509 + C27508) * C20882) *
               C32585 * C602) *
              C32630 * C481 +
          (((C16431 + C16430 + C16429 + C16428) * C20882 +
            (C16427 + C16426 + C16425 + C16424) * C20880 +
            (C15875 * C363 + C32998 * C379 + C15876 * C1170 + C32994 * C1184 +
             C15877 * C1171 + C32984 * C1185 + C15878 * C7292 +
             C32966 * C7293) *
                C20883 +
            (C15875 * C380 + C32998 * C393 + C15876 * C1186 + C32994 * C1197 +
             C15877 * C1187 + C32984 * C1198 + C15878 * C7294 +
             C32966 * C7295) *
                C32771) *
               C32585 * C602 -
           ((C16424 + C16425 + C16426 + C16427) * C32771 +
            (C16428 + C16429 + C16430 + C16431) * C20883 +
            (C15919 + C15918 + C15917 + C15916) * C20880 +
            (C15915 + C15914 + C15913 + C15912) * C20882) *
               C32585 * C601) *
              C32630 * C482)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C15053 * C115 + C15047 * C122 + C15054 * C256 + C32729 * C271) *
                 C20882 +
             (C15053 * C123 + C15047 * C136 + C15054 * C270 + C32729 * C286) *
                 C20880 +
             (C17058 + C17059) * C20883 + (C17060 + C17061) * C32771) *
                C32988 +
            ((C15088 + C15089) * C20882 + (C15090 + C15091) * C20880 +
             C17488 * C20883 + C17489 * C32771) *
                C32975 +
            C26307 * C32945) *
               C601 -
           (((C16728 + C16729) * C32771 + (C16730 + C16731) * C20883 +
             C19469 * C20880 + C19470 * C20882) *
                C32945 +
            (C17490 * C32771 + C17491 * C20883 + C17492 * C20880 +
             C17493 * C20882) *
                C32975 +
            ((C17065 + C17064) * C32771 + (C17063 + C17062) * C20883 +
             (C17061 + C17060) * C20880 + (C17059 + C17058) * C20882) *
                C32988) *
               C602) *
              C32630 * C481 +
          (((C17488 * C20882 + C17489 * C20880 + C17040 * C20883 +
             C17041 * C32771) *
                C32988 +
            (C18770 * C20882 + C18771 * C20880 + (C16731 + C16730) * C20883 +
             (C16729 + C16728) * C32771) *
                C32975 +
            ((C15633 + C15632) * C20882 + (C15631 + C15630) * C20880 +
             (C15053 * C365 + C15047 * C383 + C15054 * C2308 + C32729 * C2309) *
                 C20883 +
             (C15053 * C384 + C15047 * C395 + C15054 * C2310 + C32729 * C2311) *
                 C32771) *
                C32945) *
               C602 -
           (((C15630 + C15631) * C32771 + (C15632 + C15633) * C20883 +
             (C15099 + C15098) * C20880 + (C15097 + C15096) * C20882) *
                C32945 +
            (C19469 * C32771 + C19470 * C20883 + (C15095 + C15094) * C20880 +
             (C15093 + C15092) * C20882) *
                C32975 +
            (C17492 * C32771 + C17493 * C20883 + (C15091 + C15090) * C20880 +
             (C15089 + C15088) * C20882) *
                C32988) *
               C601) *
              C32630 * C482)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C15053 * C115 + C15047 * C122 + C15054 * C256 + C32729 * C271) *
                C22664 +
            (C15053 * C123 + C15047 * C136 + C15054 * C270 + C32729 * C286) *
                C32999 +
            (C17058 + C17059) * C22665 + (C17060 + C17061) * C32996 +
            C17074 * C22666 + C17075 * C32987 + C28232 * C22667 +
            C28233 * C32972) *
               C32585 * C601 -
           ((C28242 + C28243) * C32972 + (C28244 + C28245) * C22667 +
            (C17070 + C17071) * C32987 + (C17072 + C17073) * C22666 +
            (C17065 + C17064) * C32996 + (C17063 + C17062) * C22665 +
            (C17061 + C17060) * C32999 + (C17059 + C17058) * C22664) *
               C32585 * C602) *
              C32630 * C481 +
          ((C17488 * C22664 + C17489 * C32999 + C17040 * C22665 +
            C17041 * C32996 + (C17069 + C17068) * C22666 +
            (C17067 + C17066) * C32987 +
            (C15053 * C2112 + C15047 * C2122 + C15054 * C12241 +
             C32729 * C12242) *
                C22667 +
            (C15053 * C2123 + C15047 * C2130 + C15054 * C12243 +
             C32729 * C12244) *
                C32972) *
               C32585 * C602 -
           ((C17066 + C17067) * C32972 + (C17068 + C17069) * C22667 +
            C17490 * C32987 + C17491 * C22666 + C17492 * C32996 +
            C17493 * C22665 + (C15091 + C15090) * C32999 +
            (C15089 + C15088) * C22664) *
               C32585 * C601) *
              C32630 * C482)) /
            (p * q * std::sqrt(p + q));
    d2ee[39] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C15053 * C115 + C15047 * C122 + C15054 * C256 + C32729 * C271) *
                C20882 +
            (C15053 * C123 + C15047 * C136 + C15054 * C270 + C32729 * C286) *
                C20880 +
            (C17058 + C17059) * C20883 + (C17060 + C17061) * C32771) *
               C32988 +
           ((C15088 + C15089) * C20882 + (C15090 + C15091) * C20880 +
            C17488 * C20883 + C17489 * C32771) *
               C32975 +
           C26307 * C32945) *
              C32644 * C248 -
          (((C19271 + C19272) * C32771 + (C19273 + C19274) * C20883 +
            (C15468 + C15469) * C20880 + (C15470 + C15471) * C20882) *
               C32945 +
           ((C17290 + C17291) * C32771 + (C17292 + C17293) * C20883 +
            (C15472 + C15473) * C20880 + (C15474 + C15475) * C20882) *
               C32975 +
           ((C17707 + C17706) * C32771 + (C17705 + C17704) * C20883 +
            (C15054 * C273 + C32729 * C287 + C15053 * C270 + C15047 * C286) *
                C20880 +
            (C15054 * C257 + C32729 * C272 + C15053 * C256 + C15047 * C271) *
                C20882) *
               C32988) *
              C32644 * C249 +
          (((C15053 * C257 + C15047 * C272 + C15054 * C1033 + C32729 * C1042) *
                C20882 +
            (C15053 * C273 + C15047 * C287 + C15054 * C1041 + C32729 * C1051) *
                C20880 +
            (C15053 * C1167 + C15047 * C1179 + C15054 * C1719 +
             C32729 * C1722) *
                C20883 +
            (C15053 * C1178 + C15047 * C1194 + C15054 * C1723 +
             C32729 * C1728) *
                C32771) *
               C32988 +
           ((C15053 * C258 + C15047 * C274 + C15054 * C1032 + C32729 * C1040) *
                C20882 +
            (C15053 * C275 + C15047 * C288 + C15054 * C1039 + C32729 * C1050) *
                C20880 +
            (C15053 * C1166 + C15047 * C1177 + C15054 * C1720 +
             C32729 * C1724) *
                C20883 +
            (C15053 * C1176 + C15047 * C1193 + C15054 * C1725 +
             C32729 * C1729) *
                C32771) *
               C32975 +
           ((C15053 * C259 + C15047 * C276 + C15054 * C1031 + C32729 * C1038) *
                C20882 +
            (C15053 * C277 + C15047 * C289 + C15054 * C1037 + C32729 * C1049) *
                C20880 +
            (C15053 * C1165 + C15047 * C1175 + C15054 * C1721 +
             C32729 * C1726) *
                C20883 +
            (C15053 * C1174 + C15047 * C1192 + C15054 * C1727 +
             C32729 * C1730) *
                C32771) *
               C32945) *
              C32644 * C250) *
         C32618) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C15053 * C115 + C15047 * C122 + C15054 * C256 + C32729 * C271) *
                C20882 +
            (C15053 * C123 + C15047 * C136 + C15054 * C270 + C32729 * C286) *
                C20880 +
            (C17058 + C17059) * C20883 + (C17060 + C17061) * C32771) *
               C32988 +
           ((C15088 + C15089) * C20882 + (C15090 + C15091) * C20880 +
            C17488 * C20883 + C17489 * C32771) *
               C32975 +
           C26307 * C32945) *
              C32644 * C32630 * C110 -
          (((C15630 + C15631) * C32771 + (C15632 + C15633) * C20883 +
            (C15099 + C15098) * C20880 + (C15097 + C15096) * C20882) *
               C32945 +
           (C19469 * C32771 + C19470 * C20883 + (C15095 + C15094) * C20880 +
            (C15093 + C15092) * C20882) *
               C32975 +
           (C17492 * C32771 + C17493 * C20883 + (C15091 + C15090) * C20880 +
            (C15089 + C15088) * C20882) *
               C32988) *
              C32644 * C32630 * C111 +
          (C26307 * C32988 +
           (C15106 * C20882 + C15107 * C20880 + (C15633 + C15632) * C20883 +
            (C15631 + C15630) * C32771) *
               C32975 +
           ((C15103 + C15102) * C20882 + (C15101 + C15100) * C20880 +
            (C15053 * C357 + C15047 * C368 + C15054 * C725 + C32729 * C734) *
                C20883 +
            (C15053 * C367 + C15047 * C387 + C15054 * C735 + C32729 * C740) *
                C32771) *
               C32945) *
              C32644 * C32630 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C15875 * C115 + C32998 * C122 + C15876 * C256 + C32994 * C271 +
            C15877 * C257 + C32984 * C272 + C15878 * C1033 + C32966 * C1042) *
               C20882 +
           (C15875 * C123 + C32998 * C136 + C15876 * C270 + C32994 * C286 +
            C15877 * C273 + C32984 * C287 + C15878 * C1041 + C32966 * C1051) *
               C20880 +
           (C15875 * C361 + C32998 * C376 + C15876 * C721 + C32994 * C726 +
            C15877 * C1167 + C32984 * C1179 + C15878 * C1719 + C32966 * C1722) *
               C20883 +
           (C15875 * C375 + C32998 * C391 + C15876 * C727 + C32994 * C736 +
            C15877 * C1178 + C32984 * C1194 + C15878 * C1723 + C32966 * C1728) *
               C32771) *
              C32585 * C32644 * C32630 * C110 -
          ((C16424 + C16425 + C16426 + C16427) * C32771 +
           (C16428 + C16429 + C16430 + C16431) * C20883 +
           (C15919 + C15918 + C15917 + C15916) * C20880 +
           (C15915 + C15914 + C15913 + C15912) * C20882) *
              C32585 * C32644 * C32630 * C111 +
          ((C15927 + C15926 + C15925 + C15924) * C20882 +
           (C15923 + C15922 + C15921 + C15920) * C20880 +
           (C15875 * C359 + C32998 * C372 + C15876 * C723 + C32994 * C730 +
            C15877 * C1165 + C32984 * C1175 + C15878 * C1721 + C32966 * C1726) *
               C20883 +
           (C15875 * C371 + C32998 * C389 + C15876 * C731 + C32994 * C738 +
            C15877 * C1174 + C32984 * C1192 + C15878 * C1727 + C32966 * C1730) *
               C32771) *
              C32585 * C32644 * C32630 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C15875 * C115 + C32998 * C122 + C15876 * C256 + C32994 * C271 +
            C15877 * C257 + C32984 * C272 + C15878 * C1033 + C32966 * C1042) *
               C20882 +
           (C15875 * C123 + C32998 * C136 + C15876 * C270 + C32994 * C286 +
            C15877 * C273 + C32984 * C287 + C15878 * C1041 + C32966 * C1051) *
               C20880 +
           (C15875 * C361 + C32998 * C376 + C15876 * C721 + C32994 * C726 +
            C15877 * C1167 + C32984 * C1179 + C15878 * C1719 + C32966 * C1722) *
               C20883 +
           (C15875 * C375 + C32998 * C391 + C15876 * C727 + C32994 * C736 +
            C15877 * C1178 + C32984 * C1194 + C15878 * C1723 + C32966 * C1728) *
               C32771) *
              C32585 * C32644 * C248 -
          ((C15878 * C6479 + C32966 * C6485 + C15877 * C1723 + C32984 * C1728 +
            C15876 * C1178 + C32994 * C1194 + C15875 * C727 + C32998 * C736) *
               C32771 +
           (C15878 * C6476 + C32966 * C6480 + C15877 * C1719 + C32984 * C1722 +
            C15876 * C1167 + C32994 * C1179 + C15875 * C721 + C32998 * C726) *
               C20883 +
           (C15878 * C1044 + C32966 * C1052 + C15877 * C1041 + C32984 * C1051 +
            C15876 * C273 + C32994 * C287 + C15875 * C270 + C32998 * C286) *
               C20880 +
           (C15878 * C1034 + C32966 * C1043 + C15877 * C1033 + C32984 * C1042 +
            C15876 * C257 + C32994 * C272 + C15875 * C256 + C32998 * C271) *
               C20882) *
              C32585 * C32644 * C249 +
          ((C15875 * C257 + C32998 * C272 + C15876 * C1033 + C32994 * C1042 +
            C15877 * C1034 + C32984 * C1043 + C15878 * C6406 + C32966 * C6409) *
               C20882 +
           (C15875 * C273 + C32998 * C287 + C15876 * C1041 + C32994 * C1051 +
            C15877 * C1044 + C32984 * C1052 + C15878 * C6408 + C32966 * C6412) *
               C20880 +
           (C15875 * C1167 + C32998 * C1179 + C15876 * C1719 + C32994 * C1722 +
            C15877 * C6476 + C32984 * C6480 + C15878 * C6742 + C32966 * C6743) *
               C20883 +
           (C15875 * C1178 + C32998 * C1194 + C15876 * C1723 + C32994 * C1728 +
            C15877 * C6479 + C32984 * C6485 + C15878 * C6744 + C32966 * C6745) *
               C32771) *
              C32585 * C32644 * C250) *
         C32618) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C15053 * C115 + C15047 * C122 + C15054 * C256 + C32729 * C271) *
               C22664 +
           (C15053 * C123 + C15047 * C136 + C15054 * C270 + C32729 * C286) *
               C32999 +
           (C17058 + C17059) * C22665 + (C17060 + C17061) * C32996 +
           C17074 * C22666 + C17075 * C32987 + (C17073 + C17072) * C22667 +
           (C17071 + C17070) * C32972) *
              C32585 * C32644 * C32630 * C110 -
          ((C17066 + C17067) * C32972 + (C17068 + C17069) * C22667 +
           C17490 * C32987 + C17491 * C22666 + C17492 * C32996 +
           C17493 * C22665 + (C15091 + C15090) * C32999 +
           (C15089 + C15088) * C22664) *
              C32585 * C32644 * C32630 * C111 +
          (C15104 * C22664 + C15105 * C32999 + C18770 * C22665 +
           C18771 * C32996 + (C16731 + C16730) * C22666 +
           (C16729 + C16728) * C32987 +
           (C15053 * C2108 + C15047 * C2115 + C15054 * C2658 + C32729 * C2663) *
               C22667 +
           (C15053 * C2114 + C15047 * C2126 + C15054 * C2664 + C32729 * C2667) *
               C32972) *
              C32585 * C32644 * C32630 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C15053 * C115 + C15047 * C122 + C15054 * C256 + C32729 * C271) *
               C22664 +
           (C15053 * C123 + C15047 * C136 + C15054 * C270 + C32729 * C286) *
               C32999 +
           (C17058 + C17059) * C22665 + (C17060 + C17061) * C32996 +
           C17074 * C22666 + C17075 * C32987 + (C17073 + C17072) * C22667 +
           (C17071 + C17070) * C32972) *
              C32585 * C32644 * C248 -
          ((C15054 * C7079 + C32729 * C7085 + C15053 * C2660 + C15047 * C2665) *
               C32972 +
           (C15054 * C7076 + C32729 * C7080 + C15053 * C2656 + C15047 * C2659) *
               C22667 +
           (C17711 + C17710) * C32987 + (C17709 + C17708) * C22666 +
           (C17707 + C17706) * C32996 + (C17705 + C17704) * C22665 +
           (C15054 * C273 + C32729 * C287 + C15053 * C270 + C15047 * C286) *
               C32999 +
           (C15054 * C257 + C32729 * C272 + C15053 * C256 + C15047 * C271) *
               C22664) *
              C32585 * C32644 * C249 +
          ((C15053 * C257 + C15047 * C272 + C15054 * C1033 + C32729 * C1042) *
               C22664 +
           (C15053 * C273 + C15047 * C287 + C15054 * C1041 + C32729 * C1051) *
               C32999 +
           (C15053 * C1167 + C15047 * C1179 + C15054 * C1719 + C32729 * C1722) *
               C22665 +
           (C15053 * C1178 + C15047 * C1194 + C15054 * C1723 + C32729 * C1728) *
               C32996 +
           (C15053 * C1169 + C15047 * C1181 + C15054 * C6477 + C32729 * C6481) *
               C22666 +
           (C15053 * C1183 + C15047 * C1196 + C15054 * C6483 + C32729 * C6486) *
               C32987 +
           (C15053 * C7076 + C15047 * C7080 + C15054 * C7610 + C32729 * C7611) *
               C22667 +
           (C15053 * C7079 + C15047 * C7085 + C15054 * C7612 + C32729 * C7613) *
               C32972) *
              C32585 * C32644 * C250) *
         C32618) /
            (p * q * std::sqrt(p + q));
    d2ee[40] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C15053 * C115 + C15047 * C122 + C15054 * C256 + C32729 * C271) *
                 C31694 +
             (C15053 * C123 + C15047 * C136 + C15054 * C270 + C32729 * C286) *
                 C32767 +
             (C17058 + C17059) * C31686 + (C17060 + C17061) * C32774 +
             C17074 * C31700 + C17075 * C24425) *
                C32906 +
            ((C15088 + C15089) * C31694 + (C15090 + C15091) * C32767 +
             C17488 * C31686 + C17489 * C32774 + C17040 * C31700 +
             C17041 * C24425) *
                C32595) *
               C32644 * C479 -
           (((C17286 + C17287) * C24425 + (C17288 + C17289) * C31700 +
             (C17290 + C17291) * C32774 + (C17292 + C17293) * C31686 +
             (C15472 + C15473) * C32767 + (C15474 + C15475) * C31694) *
                C32595 +
            ((C17711 + C17710) * C24425 + (C17709 + C17708) * C31700 +
             (C17707 + C17706) * C32774 + (C17705 + C17704) * C31686 +
             (C15054 * C273 + C32729 * C287 + C15053 * C270 + C15047 * C286) *
                 C32767 +
             (C15054 * C257 + C32729 * C272 + C15053 * C256 + C15047 * C271) *
                 C31694) *
                C32906) *
               C32644 * C480) *
              C481 +
          ((((C15475 + C15474) * C31694 + (C15473 + C15472) * C32767 +
             (C17293 + C17292) * C31686 + (C17291 + C17290) * C32774 +
             (C17289 + C17288) * C31700 + (C17287 + C17286) * C24425) *
                C32906 +
            ((C15471 + C15470) * C31694 + (C15469 + C15468) * C32767 +
             (C19274 + C19273) * C31686 + (C19272 + C19271) * C32774 +
             (C15053 * C1172 + C15047 * C1188 + C15054 * C1173 +
              C32729 * C1189) *
                 C31700 +
             (C15053 * C1190 + C15047 * C1199 + C15054 * C1191 +
              C32729 * C1200) *
                 C24425) *
                C32595) *
               C32644 * C480 -
           (((C16728 + C16729) * C24425 + (C16730 + C16731) * C31700 +
             C19469 * C32774 + C19470 * C31686 + (C15095 + C15094) * C32767 +
             (C15093 + C15092) * C31694) *
                C32595 +
            (C17490 * C24425 + C17491 * C31700 + C17492 * C32774 +
             C17493 * C31686 + (C15091 + C15090) * C32767 +
             (C15089 + C15088) * C31694) *
                C32906) *
               C32644 * C479) *
              C482)) /
        (p * q * std::sqrt(p + q));
    d2ee[41] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C15053 * C115 + C15047 * C122 + C15054 * C256 + C32729 * C271) *
                 C31694 +
             (C15053 * C123 + C15047 * C136 + C15054 * C270 + C32729 * C286) *
                 C32767 +
             (C17058 + C17059) * C31686 + (C17060 + C17061) * C32774 +
             C17074 * C31700 + C17075 * C24425) *
                C32906 +
            ((C15088 + C15089) * C31694 + (C15090 + C15091) * C32767 +
             C17488 * C31686 + C17489 * C32774 + C17040 * C31700 +
             C17041 * C24425) *
                C32595) *
               C601 -
           (((C17066 + C17067) * C24425 + (C17068 + C17069) * C31700 +
             C17490 * C32774 + C17491 * C31686 + C17492 * C32767 +
             C17493 * C31694) *
                C32595 +
            ((C17070 + C17071) * C24425 + (C17072 + C17073) * C31700 +
             (C17065 + C17064) * C32774 + (C17063 + C17062) * C31686 +
             (C17061 + C17060) * C32767 + (C17059 + C17058) * C31694) *
                C32906) *
               C602) *
              C479 +
          ((((C17704 + C17705) * C31694 + (C17706 + C17707) * C32767 +
             (C17708 + C17709) * C31686 + (C17710 + C17711) * C32774 +
             (C28644 + C28645) * C31700 + (C28646 + C28647) * C24425) *
                C32906 +
            ((C17293 + C17292) * C31694 + (C17291 + C17290) * C32767 +
             (C17289 + C17288) * C31686 + (C17287 + C17286) * C32774 +
             (C15053 * C2657 + C15047 * C2661 + C15054 * C7442 +
              C32729 * C7443) *
                 C31700 +
             (C15053 * C2662 + C15047 * C2666 + C15054 * C7444 +
              C32729 * C7445) *
                 C24425) *
                C32595) *
               C602 -
           (((C17286 + C17287) * C24425 + (C17288 + C17289) * C31700 +
             (C17290 + C17291) * C32774 + (C17292 + C17293) * C31686 +
             (C15472 + C15473) * C32767 + (C15474 + C15475) * C31694) *
                C32595 +
            ((C17711 + C17710) * C24425 + (C17709 + C17708) * C31700 +
             (C17707 + C17706) * C32774 + (C17705 + C17704) * C31686 +
             (C15054 * C273 + C32729 * C287 + C15053 * C270 + C15047 * C286) *
                 C32767 +
             (C15054 * C257 + C32729 * C272 + C15053 * C256 + C15047 * C271) *
                 C31694) *
                C32906) *
               C601) *
              C480) *
         C32618) /
        (p * q * std::sqrt(p + q));
    d2ee[42] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C15053 * C115 + C15047 * C122 + C15054 * C256 + C32729 * C271) *
                C31694 +
            (C15053 * C123 + C15047 * C136 + C15054 * C270 + C32729 * C286) *
                C32767 +
            (C17058 + C17059) * C31686 + (C17060 + C17061) * C32774 +
            C17074 * C31700 + C17075 * C24425) *
               C32906 +
           ((C15088 + C15089) * C31694 + (C15090 + C15091) * C32767 +
            C17488 * C31686 + C17489 * C32774 + C17040 * C31700 +
            C17041 * C24425) *
               C32595) *
              C32644 * C248 -
          (((C17286 + C17287) * C24425 + (C17288 + C17289) * C31700 +
            (C17290 + C17291) * C32774 + (C17292 + C17293) * C31686 +
            (C15472 + C15473) * C32767 + (C15474 + C15475) * C31694) *
               C32595 +
           ((C17711 + C17710) * C24425 + (C17709 + C17708) * C31700 +
            (C17707 + C17706) * C32774 + (C17705 + C17704) * C31686 +
            (C15054 * C273 + C32729 * C287 + C15053 * C270 + C15047 * C286) *
                C32767 +
            (C15054 * C257 + C32729 * C272 + C15053 * C256 + C15047 * C271) *
                C31694) *
               C32906) *
              C32644 * C249 +
          (((C15053 * C257 + C15047 * C272 + C15054 * C1033 + C32729 * C1042) *
                C31694 +
            (C15053 * C273 + C15047 * C287 + C15054 * C1041 + C32729 * C1051) *
                C32767 +
            (C15053 * C1167 + C15047 * C1179 + C15054 * C1719 +
             C32729 * C1722) *
                C31686 +
            (C15053 * C1178 + C15047 * C1194 + C15054 * C1723 +
             C32729 * C1728) *
                C32774 +
            (C15053 * C1169 + C15047 * C1181 + C15054 * C6477 +
             C32729 * C6481) *
                C31700 +
            (C15053 * C1183 + C15047 * C1196 + C15054 * C6483 +
             C32729 * C6486) *
                C24425) *
               C32906 +
           ((C15053 * C258 + C15047 * C274 + C15054 * C1032 + C32729 * C1040) *
                C31694 +
            (C15053 * C275 + C15047 * C288 + C15054 * C1039 + C32729 * C1050) *
                C32767 +
            (C15053 * C1166 + C15047 * C1177 + C15054 * C1720 +
             C32729 * C1724) *
                C31686 +
            (C15053 * C1176 + C15047 * C1193 + C15054 * C1725 +
             C32729 * C1729) *
                C32774 +
            (C15053 * C1171 + C15047 * C1185 + C15054 * C7292 +
             C32729 * C7293) *
                C31700 +
            (C15053 * C1187 + C15047 * C1198 + C15054 * C7294 +
             C32729 * C7295) *
                C24425) *
               C32595) *
              C32644 * C250) *
         C32618) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C15053 * C115 + C15047 * C122 + C15054 * C256 + C32729 * C271) *
                C31694 +
            (C15053 * C123 + C15047 * C136 + C15054 * C270 + C32729 * C286) *
                C32767 +
            (C17058 + C17059) * C31686 + (C17060 + C17061) * C32774 +
            C17074 * C31700 + C17075 * C24425) *
               C32906 +
           ((C15088 + C15089) * C31694 + (C15090 + C15091) * C32767 +
            C17488 * C31686 + C17489 * C32774 + C17040 * C31700 +
            C17041 * C24425) *
               C32595) *
              C32644 * C32630 * C110 -
          (((C16728 + C16729) * C24425 + (C16730 + C16731) * C31700 +
            C19469 * C32774 + C19470 * C31686 + (C15095 + C15094) * C32767 +
            (C15093 + C15092) * C31694) *
               C32595 +
           (C17490 * C24425 + C17491 * C31700 + C17492 * C32774 +
            C17493 * C31686 + (C15091 + C15090) * C32767 +
            (C15089 + C15088) * C31694) *
               C32906) *
              C32644 * C32630 * C111 +
          ((C15104 * C31694 + C15105 * C32767 + C18770 * C31686 +
            C18771 * C32774 + (C16731 + C16730) * C31700 +
            (C16729 + C16728) * C24425) *
               C32906 +
           (C15106 * C31694 + C15107 * C32767 + (C15633 + C15632) * C31686 +
            (C15631 + C15630) * C32774 +
            (C15053 * C365 + C15047 * C383 + C15054 * C2308 + C32729 * C2309) *
                C31700 +
            (C15053 * C384 + C15047 * C395 + C15054 * C2310 + C32729 * C2311) *
                C24425) *
               C32595) *
              C32644 * C32630 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C15053 * C115 + C15047 * C122 + C15054 * C256 + C32729 * C271) *
                C31694 +
            (C15053 * C123 + C15047 * C136 + C15054 * C270 + C32729 * C286) *
                C32767 +
            (C17058 + C17059) * C31686 + (C17060 + C17061) * C32774 +
            C17074 * C31700 + C17075 * C24425) *
               C32906 +
           ((C15088 + C15089) * C31694 + (C15090 + C15091) * C32767 +
            C17488 * C31686 + C17489 * C32774 + C17040 * C31700 +
            C17041 * C24425) *
               C32595) *
              C354 -
          (((C17066 + C17067) * C24425 + (C17068 + C17069) * C31700 +
            C17490 * C32774 + C17491 * C31686 + C17492 * C32767 +
            C17493 * C31694) *
               C32595 +
           ((C17070 + C17071) * C24425 + (C17072 + C17073) * C31700 +
            (C17065 + C17064) * C32774 + (C17063 + C17062) * C31686 +
            (C17061 + C17060) * C32767 + (C17059 + C17058) * C31694) *
               C32906) *
              C355 +
          ((C17074 * C31694 + C17075 * C32767 + C28232 * C31686 +
            C28233 * C32774 + (C28245 + C28244) * C31700 +
            (C28243 + C28242) * C24425) *
               C32906 +
           (C17040 * C31694 + C17041 * C32767 + (C17069 + C17068) * C31686 +
            (C17067 + C17066) * C32774 +
            (C15053 * C2112 + C15047 * C2122 + C15054 * C12241 +
             C32729 * C12242) *
                C31700 +
            (C15053 * C2123 + C15047 * C2130 + C15054 * C12243 +
             C32729 * C12244) *
                C24425) *
               C32595) *
              C356) *
         C32630 * C32618) /
            (p * q * std::sqrt(p + q));
    d2ee[43] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C15053 * C115 + C15047 * C122 + C15054 * C256 + C32729 * C271) *
                 C31694 +
             (C15053 * C123 + C15047 * C136 + C15054 * C270 + C32729 * C286) *
                 C32767 +
             (C17058 + C17059) * C31686 + (C17060 + C17061) * C32774 +
             C17074 * C31700 + C17075 * C24425) *
                C32906 +
            ((C15088 + C15089) * C31694 + (C15090 + C15091) * C32767 +
             C17488 * C31686 + C17489 * C32774 + C17040 * C31700 +
             C17041 * C24425) *
                C32595) *
               C601 -
           (((C17066 + C17067) * C24425 + (C17068 + C17069) * C31700 +
             C17490 * C32774 + C17491 * C31686 + C17492 * C32767 +
             C17493 * C31694) *
                C32595 +
            ((C17070 + C17071) * C24425 + (C17072 + C17073) * C31700 +
             (C17065 + C17064) * C32774 + (C17063 + C17062) * C31686 +
             (C17061 + C17060) * C32767 + (C17059 + C17058) * C31694) *
                C32906) *
               C602) *
              C32630 * C481 +
          (((C17488 * C31694 + C17489 * C32767 + C17040 * C31686 +
             C17041 * C32774 + (C17069 + C17068) * C31700 +
             (C17067 + C17066) * C24425) *
                C32906 +
            (C18770 * C31694 + C18771 * C32767 + (C16731 + C16730) * C31686 +
             (C16729 + C16728) * C32774 +
             (C15053 * C2108 + C15047 * C2115 + C15054 * C2658 +
              C32729 * C2663) *
                 C31700 +
             (C15053 * C2114 + C15047 * C2126 + C15054 * C2664 +
              C32729 * C2667) *
                 C24425) *
                C32595) *
               C602 -
           (((C16728 + C16729) * C24425 + (C16730 + C16731) * C31700 +
             C19469 * C32774 + C19470 * C31686 + (C15095 + C15094) * C32767 +
             (C15093 + C15092) * C31694) *
                C32595 +
            (C17490 * C24425 + C17491 * C31700 + C17492 * C32774 +
             C17493 * C31686 + (C15091 + C15090) * C32767 +
             (C15089 + C15088) * C31694) *
                C32906) *
               C601) *
              C32630 * C482)) /
        (p * q * std::sqrt(p + q));
    d2ee[44] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C15053 * C115 + C15047 * C122 + C15054 * C256 + C32729 * C271) *
                C31694 +
            (C15053 * C123 + C15047 * C136 + C15054 * C270 + C32729 * C286) *
                C32767 +
            (C17058 + C17059) * C31686 + (C17060 + C17061) * C32774 +
            C17074 * C31700 + C17075 * C24425) *
               C32906 +
           ((C15088 + C15089) * C31694 + (C15090 + C15091) * C32767 +
            C17488 * C31686 + C17489 * C32774 + C17040 * C31700 +
            C17041 * C24425) *
               C32595) *
              C32644 * C32630 * C110 -
          (((C16728 + C16729) * C24425 + (C16730 + C16731) * C31700 +
            C19469 * C32774 + C19470 * C31686 + (C15095 + C15094) * C32767 +
            (C15093 + C15092) * C31694) *
               C32595 +
           (C17490 * C24425 + C17491 * C31700 + C17492 * C32774 +
            C17493 * C31686 + (C15091 + C15090) * C32767 +
            (C15089 + C15088) * C31694) *
               C32906) *
              C32644 * C32630 * C111 +
          ((C15104 * C31694 + C15105 * C32767 + C18770 * C31686 +
            C18771 * C32774 + (C16731 + C16730) * C31700 +
            (C16729 + C16728) * C24425) *
               C32906 +
           (C15106 * C31694 + C15107 * C32767 + (C15633 + C15632) * C31686 +
            (C15631 + C15630) * C32774 +
            (C15053 * C365 + C15047 * C383 + C15054 * C2308 + C32729 * C2309) *
                C31700 +
            (C15053 * C384 + C15047 * C395 + C15054 * C2310 + C32729 * C2311) *
                C24425) *
               C32595) *
              C32644 * C32630 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C15053 * C115 + C15047 * C122 + C15054 * C256 + C32729 * C271) *
                C31694 +
            (C15053 * C123 + C15047 * C136 + C15054 * C270 + C32729 * C286) *
                C32767 +
            (C17058 + C17059) * C31686 + (C17060 + C17061) * C32774 +
            C17074 * C31700 + C17075 * C24425) *
               C32906 +
           ((C15088 + C15089) * C31694 + (C15090 + C15091) * C32767 +
            C17488 * C31686 + C17489 * C32774 + C17040 * C31700 +
            C17041 * C24425) *
               C32595) *
              C32644 * C248 -
          (((C17286 + C17287) * C24425 + (C17288 + C17289) * C31700 +
            (C17290 + C17291) * C32774 + (C17292 + C17293) * C31686 +
            (C15472 + C15473) * C32767 + (C15474 + C15475) * C31694) *
               C32595 +
           ((C17711 + C17710) * C24425 + (C17709 + C17708) * C31700 +
            (C17707 + C17706) * C32774 + (C17705 + C17704) * C31686 +
            (C15054 * C273 + C32729 * C287 + C15053 * C270 + C15047 * C286) *
                C32767 +
            (C15054 * C257 + C32729 * C272 + C15053 * C256 + C15047 * C271) *
                C31694) *
               C32906) *
              C32644 * C249 +
          (((C15053 * C257 + C15047 * C272 + C15054 * C1033 + C32729 * C1042) *
                C31694 +
            (C15053 * C273 + C15047 * C287 + C15054 * C1041 + C32729 * C1051) *
                C32767 +
            (C15053 * C1167 + C15047 * C1179 + C15054 * C1719 +
             C32729 * C1722) *
                C31686 +
            (C15053 * C1178 + C15047 * C1194 + C15054 * C1723 +
             C32729 * C1728) *
                C32774 +
            (C15053 * C1169 + C15047 * C1181 + C15054 * C6477 +
             C32729 * C6481) *
                C31700 +
            (C15053 * C1183 + C15047 * C1196 + C15054 * C6483 +
             C32729 * C6486) *
                C24425) *
               C32906 +
           ((C15053 * C258 + C15047 * C274 + C15054 * C1032 + C32729 * C1040) *
                C31694 +
            (C15053 * C275 + C15047 * C288 + C15054 * C1039 + C32729 * C1050) *
                C32767 +
            (C15053 * C1166 + C15047 * C1177 + C15054 * C1720 +
             C32729 * C1724) *
                C31686 +
            (C15053 * C1176 + C15047 * C1193 + C15054 * C1725 +
             C32729 * C1729) *
                C32774 +
            (C15053 * C1171 + C15047 * C1185 + C15054 * C7292 +
             C32729 * C7293) *
                C31700 +
            (C15053 * C1187 + C15047 * C1198 + C15054 * C7294 +
             C32729 * C7295) *
                C24425) *
               C32595) *
              C32644 * C250) *
         C32618) /
            (p * q * std::sqrt(p + q));
    d2ee[45] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C15053 * C115 + C15047 * C122 + C15054 * C256 + C32729 * C271) *
                 C20882 +
             (C15053 * C123 + C15047 * C136 + C15054 * C270 + C32729 * C286) *
                 C20880 +
             (C17058 + C17059) * C20883 + (C17060 + C17061) * C32771) *
                C32988 +
            ((C15088 + C15089) * C20882 + (C15090 + C15091) * C20880 +
             C17488 * C20883 + C17489 * C32771) *
                C32975 +
            C26307 * C32945) *
               C32644 * C479 -
           (((C19271 + C19272) * C32771 + (C19273 + C19274) * C20883 +
             (C15468 + C15469) * C20880 + (C15470 + C15471) * C20882) *
                C32945 +
            ((C17290 + C17291) * C32771 + (C17292 + C17293) * C20883 +
             (C15472 + C15473) * C20880 + (C15474 + C15475) * C20882) *
                C32975 +
            ((C17707 + C17706) * C32771 + (C17705 + C17704) * C20883 +
             (C15054 * C273 + C32729 * C287 + C15053 * C270 + C15047 * C286) *
                 C20880 +
             (C15054 * C257 + C32729 * C272 + C15053 * C256 + C15047 * C271) *
                 C20882) *
                C32988) *
               C32644 * C480) *
              C481 +
          ((((C15475 + C15474) * C20882 + (C15473 + C15472) * C20880 +
             (C17293 + C17292) * C20883 + (C17291 + C17290) * C32771) *
                C32988 +
            ((C15471 + C15470) * C20882 + (C15469 + C15468) * C20880 +
             (C19274 + C19273) * C20883 + (C19272 + C19271) * C32771) *
                C32975 +
            ((C15467 + C15466) * C20882 + (C15465 + C15464) * C20880 +
             (C15053 * C724 + C15047 * C732 + C15054 * C1533 + C32729 * C1534) *
                 C20883 +
             (C15053 * C733 + C15047 * C739 + C15054 * C1535 + C32729 * C1536) *
                 C32771) *
                C32945) *
               C32644 * C480 -
           (((C15630 + C15631) * C32771 + (C15632 + C15633) * C20883 +
             (C15099 + C15098) * C20880 + (C15097 + C15096) * C20882) *
                C32945 +
            (C19469 * C32771 + C19470 * C20883 + (C15095 + C15094) * C20880 +
             (C15093 + C15092) * C20882) *
                C32975 +
            (C17492 * C32771 + C17493 * C20883 + (C15091 + C15090) * C20880 +
             (C15089 + C15088) * C20882) *
                C32988) *
               C32644 * C479) *
              C482)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C15875 * C115 + C32998 * C122 + C15876 * C256 + C32994 * C271 +
             C15877 * C257 + C32984 * C272 + C15878 * C1033 + C32966 * C1042) *
                C20882 +
            (C15875 * C123 + C32998 * C136 + C15876 * C270 + C32994 * C286 +
             C15877 * C273 + C32984 * C287 + C15878 * C1041 + C32966 * C1051) *
                C20880 +
            (C27508 + C27509 + C27510 + C27511) * C20883 +
            (C27512 + C27513 + C27514 + C27515) * C32771) *
               C32585 * C32644 * C479 -
           ((C15878 * C6479 + C32966 * C6485 + C15877 * C1723 + C32984 * C1728 +
             C15876 * C1178 + C32994 * C1194 + C15875 * C727 + C32998 * C736) *
                C32771 +
            (C15878 * C6476 + C32966 * C6480 + C15877 * C1719 + C32984 * C1722 +
             C15876 * C1167 + C32994 * C1179 + C15875 * C721 + C32998 * C726) *
                C20883 +
            (C15878 * C1044 + C32966 * C1052 + C15877 * C1041 + C32984 * C1051 +
             C15876 * C273 + C32994 * C287 + C15875 * C270 + C32998 * C286) *
                C20880 +
            (C15878 * C1034 + C32966 * C1043 + C15877 * C1033 + C32984 * C1042 +
             C15876 * C257 + C32994 * C272 + C15875 * C256 + C32998 * C271) *
                C20882) *
               C32585 * C32644 * C480) *
              C481 +
          (((C16277 + C16276 + C16275 + C16274) * C20882 +
            (C16273 + C16272 + C16271 + C16270) * C20880 +
            (C15875 * C722 + C32998 * C728 + C15876 * C1166 + C32994 * C1177 +
             C15877 * C1720 + C32984 * C1724 + C15878 * C6656 +
             C32966 * C6657) *
                C20883 +
            (C15875 * C729 + C32998 * C737 + C15876 * C1176 + C32994 * C1193 +
             C15877 * C1725 + C32984 * C1729 + C15878 * C6658 +
             C32966 * C6659) *
                C32771) *
               C32585 * C32644 * C480 -
           ((C16424 + C16425 + C16426 + C16427) * C32771 +
            (C16428 + C16429 + C16430 + C16431) * C20883 +
            (C15919 + C15918 + C15917 + C15916) * C20880 +
            (C15915 + C15914 + C15913 + C15912) * C20882) *
               C32585 * C32644 * C479) *
              C482)) /
            (p * q * std::sqrt(p + q));
    d2ee[46] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C15053 * C115 + C15047 * C122 + C15054 * C256 + C32729 * C271) *
                 C20882 +
             (C15053 * C123 + C15047 * C136 + C15054 * C270 + C32729 * C286) *
                 C20880 +
             (C17058 + C17059) * C20883 + (C17060 + C17061) * C32771) *
                C32988 +
            ((C15088 + C15089) * C20882 + (C15090 + C15091) * C20880 +
             C17488 * C20883 + C17489 * C32771) *
                C32975 +
            C26307 * C32945) *
               C601 -
           (((C16728 + C16729) * C32771 + (C16730 + C16731) * C20883 +
             C19469 * C20880 + C19470 * C20882) *
                C32945 +
            (C17490 * C32771 + C17491 * C20883 + C17492 * C20880 +
             C17493 * C20882) *
                C32975 +
            ((C17065 + C17064) * C32771 + (C17063 + C17062) * C20883 +
             (C17061 + C17060) * C20880 + (C17059 + C17058) * C20882) *
                C32988) *
               C602) *
              C479 +
          ((((C17704 + C17705) * C20882 + (C17706 + C17707) * C20880 +
             (C17708 + C17709) * C20883 + (C17710 + C17711) * C32771) *
                C32988 +
            ((C17293 + C17292) * C20882 + (C17291 + C17290) * C20880 +
             (C17289 + C17288) * C20883 + (C17287 + C17286) * C32771) *
                C32975 +
            ((C19274 + C19273) * C20882 + (C19272 + C19271) * C20880 +
             (C15053 * C1172 + C15047 * C1188 + C15054 * C1173 +
              C32729 * C1189) *
                 C20883 +
             (C15053 * C1190 + C15047 * C1199 + C15054 * C1191 +
              C32729 * C1200) *
                 C32771) *
                C32945) *
               C602 -
           (((C19271 + C19272) * C32771 + (C19273 + C19274) * C20883 +
             (C15468 + C15469) * C20880 + (C15470 + C15471) * C20882) *
                C32945 +
            ((C17290 + C17291) * C32771 + (C17292 + C17293) * C20883 +
             (C15472 + C15473) * C20880 + (C15474 + C15475) * C20882) *
                C32975 +
            ((C17707 + C17706) * C32771 + (C17705 + C17704) * C20883 +
             (C15054 * C273 + C32729 * C287 + C15053 * C270 + C15047 * C286) *
                 C20880 +
             (C15054 * C257 + C32729 * C272 + C15053 * C256 + C15047 * C271) *
                 C20882) *
                C32988) *
               C601) *
              C480) *
         C32618) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C15875 * C115 + C32998 * C122 + C15876 * C256 + C32994 * C271 +
             C15877 * C257 + C32984 * C272 + C15878 * C1033 + C32966 * C1042) *
                C20882 +
            (C15875 * C123 + C32998 * C136 + C15876 * C270 + C32994 * C286 +
             C15877 * C273 + C32984 * C287 + C15878 * C1041 + C32966 * C1051) *
                C20880 +
            (C27508 + C27509 + C27510 + C27511) * C20883 +
            (C27512 + C27513 + C27514 + C27515) * C32771) *
               C32585 * C601 -
           ((C27516 + C27517 + C27518 + C27519) * C32771 +
            (C27520 + C27521 + C27522 + C27523) * C20883 +
            (C27515 + C27514 + C27513 + C27512) * C20880 +
            (C27511 + C27510 + C27509 + C27508) * C20882) *
               C32585 * C602) *
              C479 +
          (((C27930 + C27931 + C27932 + C27933) * C20882 +
            (C27934 + C27935 + C27936 + C27937) * C20880 +
            (C15875 * C1168 + C32998 * C1180 + C15876 * C1169 + C32994 * C1181 +
             C15877 * C6477 + C32984 * C6481 + C15878 * C6478 +
             C32966 * C6482) *
                C20883 +
            (C15875 * C1182 + C32998 * C1195 + C15876 * C1183 + C32994 * C1196 +
             C15877 * C6483 + C32984 * C6486 + C15878 * C6484 +
             C32966 * C6487) *
                C32771) *
               C32585 * C602 -
           ((C27937 + C27936 + C27935 + C27934) * C32771 +
            (C27933 + C27932 + C27931 + C27930) * C20883 +
            (C15878 * C1044 + C32966 * C1052 + C15877 * C1041 + C32984 * C1051 +
             C15876 * C273 + C32994 * C287 + C15875 * C270 + C32998 * C286) *
                C20880 +
            (C15878 * C1034 + C32966 * C1043 + C15877 * C1033 + C32984 * C1042 +
             C15876 * C257 + C32994 * C272 + C15875 * C256 + C32998 * C271) *
                C20882) *
               C32585 * C601) *
              C480) *
         C32618) /
            (p * q * std::sqrt(p + q));
    d2ee[47] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C15053 * C115 + C15047 * C122 + C15054 * C256 + C32729 * C271) *
                C20882 +
            (C15053 * C123 + C15047 * C136 + C15054 * C270 + C32729 * C286) *
                C20880 +
            (C17058 + C17059) * C20883 + (C17060 + C17061) * C32771) *
               C32988 +
           ((C15088 + C15089) * C20882 + (C15090 + C15091) * C20880 +
            C17488 * C20883 + C17489 * C32771) *
               C32975 +
           C26307 * C32945) *
              C32644 * C248 -
          (((C19271 + C19272) * C32771 + (C19273 + C19274) * C20883 +
            (C15468 + C15469) * C20880 + (C15470 + C15471) * C20882) *
               C32945 +
           ((C17290 + C17291) * C32771 + (C17292 + C17293) * C20883 +
            (C15472 + C15473) * C20880 + (C15474 + C15475) * C20882) *
               C32975 +
           ((C17707 + C17706) * C32771 + (C17705 + C17704) * C20883 +
            (C15054 * C273 + C32729 * C287 + C15053 * C270 + C15047 * C286) *
                C20880 +
            (C15054 * C257 + C32729 * C272 + C15053 * C256 + C15047 * C271) *
                C20882) *
               C32988) *
              C32644 * C249 +
          (((C15053 * C257 + C15047 * C272 + C15054 * C1033 + C32729 * C1042) *
                C20882 +
            (C15053 * C273 + C15047 * C287 + C15054 * C1041 + C32729 * C1051) *
                C20880 +
            (C15053 * C1167 + C15047 * C1179 + C15054 * C1719 +
             C32729 * C1722) *
                C20883 +
            (C15053 * C1178 + C15047 * C1194 + C15054 * C1723 +
             C32729 * C1728) *
                C32771) *
               C32988 +
           ((C15053 * C258 + C15047 * C274 + C15054 * C1032 + C32729 * C1040) *
                C20882 +
            (C15053 * C275 + C15047 * C288 + C15054 * C1039 + C32729 * C1050) *
                C20880 +
            (C15053 * C1166 + C15047 * C1177 + C15054 * C1720 +
             C32729 * C1724) *
                C20883 +
            (C15053 * C1176 + C15047 * C1193 + C15054 * C1725 +
             C32729 * C1729) *
                C32771) *
               C32975 +
           ((C15053 * C259 + C15047 * C276 + C15054 * C1031 + C32729 * C1038) *
                C20882 +
            (C15053 * C277 + C15047 * C289 + C15054 * C1037 + C32729 * C1049) *
                C20880 +
            (C15053 * C1165 + C15047 * C1175 + C15054 * C1721 +
             C32729 * C1726) *
                C20883 +
            (C15053 * C1174 + C15047 * C1192 + C15054 * C1727 +
             C32729 * C1730) *
                C32771) *
               C32945) *
              C32644 * C250) *
         C32618) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C15053 * C115 + C15047 * C122 + C15054 * C256 + C32729 * C271) *
                C20882 +
            (C15053 * C123 + C15047 * C136 + C15054 * C270 + C32729 * C286) *
                C20880 +
            (C17058 + C17059) * C20883 + (C17060 + C17061) * C32771) *
               C32988 +
           ((C15088 + C15089) * C20882 + (C15090 + C15091) * C20880 +
            C17488 * C20883 + C17489 * C32771) *
               C32975 +
           C26307 * C32945) *
              C32644 * C32630 * C110 -
          (((C15630 + C15631) * C32771 + (C15632 + C15633) * C20883 +
            (C15099 + C15098) * C20880 + (C15097 + C15096) * C20882) *
               C32945 +
           (C19469 * C32771 + C19470 * C20883 + (C15095 + C15094) * C20880 +
            (C15093 + C15092) * C20882) *
               C32975 +
           (C17492 * C32771 + C17493 * C20883 + (C15091 + C15090) * C20880 +
            (C15089 + C15088) * C20882) *
               C32988) *
              C32644 * C32630 * C111 +
          (C26307 * C32988 +
           (C15106 * C20882 + C15107 * C20880 + (C15633 + C15632) * C20883 +
            (C15631 + C15630) * C32771) *
               C32975 +
           ((C15103 + C15102) * C20882 + (C15101 + C15100) * C20880 +
            (C15053 * C357 + C15047 * C368 + C15054 * C725 + C32729 * C734) *
                C20883 +
            (C15053 * C367 + C15047 * C387 + C15054 * C735 + C32729 * C740) *
                C32771) *
               C32945) *
              C32644 * C32630 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C15053 * C115 + C15047 * C122 + C15054 * C256 + C32729 * C271) *
                C20882 +
            (C15053 * C123 + C15047 * C136 + C15054 * C270 + C32729 * C286) *
                C20880 +
            (C17058 + C17059) * C20883 + (C17060 + C17061) * C32771) *
               C32988 +
           ((C15088 + C15089) * C20882 + (C15090 + C15091) * C20880 +
            C17488 * C20883 + C17489 * C32771) *
               C32975 +
           C26307 * C32945) *
              C354 -
          (((C16728 + C16729) * C32771 + (C16730 + C16731) * C20883 +
            C19469 * C20880 + C19470 * C20882) *
               C32945 +
           (C17490 * C32771 + C17491 * C20883 + C17492 * C20880 +
            C17493 * C20882) *
               C32975 +
           ((C17065 + C17064) * C32771 + (C17063 + C17062) * C20883 +
            (C17061 + C17060) * C20880 + (C17059 + C17058) * C20882) *
               C32988) *
              C355 +
          ((C17074 * C20882 + C17075 * C20880 + (C17073 + C17072) * C20883 +
            (C17071 + C17070) * C32771) *
               C32988 +
           (C17040 * C20882 + C17041 * C20880 + (C17069 + C17068) * C20883 +
            (C17067 + C17066) * C32771) *
               C32975 +
           ((C16731 + C16730) * C20882 + (C16729 + C16728) * C20880 +
            (C15053 * C2108 + C15047 * C2115 + C15054 * C2658 +
             C32729 * C2663) *
                C20883 +
            (C15053 * C2114 + C15047 * C2126 + C15054 * C2664 +
             C32729 * C2667) *
                C32771) *
               C32945) *
              C356) *
         C32630 * C32618) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C15875 * C115 + C32998 * C122 + C15876 * C256 + C32994 * C271 +
            C15877 * C257 + C32984 * C272 + C15878 * C1033 + C32966 * C1042) *
               C20882 +
           (C15875 * C123 + C32998 * C136 + C15876 * C270 + C32994 * C286 +
            C15877 * C273 + C32984 * C287 + C15878 * C1041 + C32966 * C1051) *
               C20880 +
           (C15875 * C361 + C32998 * C376 + C15876 * C721 + C32994 * C726 +
            C15877 * C1167 + C32984 * C1179 + C15878 * C1719 + C32966 * C1722) *
               C20883 +
           (C15875 * C375 + C32998 * C391 + C15876 * C727 + C32994 * C736 +
            C15877 * C1178 + C32984 * C1194 + C15878 * C1723 + C32966 * C1728) *
               C32771) *
              C32585 * C32644 * C32630 * C110 -
          ((C16424 + C16425 + C16426 + C16427) * C32771 +
           (C16428 + C16429 + C16430 + C16431) * C20883 +
           (C15919 + C15918 + C15917 + C15916) * C20880 +
           (C15915 + C15914 + C15913 + C15912) * C20882) *
              C32585 * C32644 * C32630 * C111 +
          ((C15927 + C15926 + C15925 + C15924) * C20882 +
           (C15923 + C15922 + C15921 + C15920) * C20880 +
           (C15875 * C359 + C32998 * C372 + C15876 * C723 + C32994 * C730 +
            C15877 * C1165 + C32984 * C1175 + C15878 * C1721 + C32966 * C1726) *
               C20883 +
           (C15875 * C371 + C32998 * C389 + C15876 * C731 + C32994 * C738 +
            C15877 * C1174 + C32984 * C1192 + C15878 * C1727 + C32966 * C1730) *
               C32771) *
              C32585 * C32644 * C32630 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C15875 * C115 + C32998 * C122 + C15876 * C256 + C32994 * C271 +
            C15877 * C257 + C32984 * C272 + C15878 * C1033 + C32966 * C1042) *
               C20882 +
           (C15875 * C123 + C32998 * C136 + C15876 * C270 + C32994 * C286 +
            C15877 * C273 + C32984 * C287 + C15878 * C1041 + C32966 * C1051) *
               C20880 +
           (C15875 * C361 + C32998 * C376 + C15876 * C721 + C32994 * C726 +
            C15877 * C1167 + C32984 * C1179 + C15878 * C1719 + C32966 * C1722) *
               C20883 +
           (C15875 * C375 + C32998 * C391 + C15876 * C727 + C32994 * C736 +
            C15877 * C1178 + C32984 * C1194 + C15878 * C1723 + C32966 * C1728) *
               C32771) *
              C32585 * C32644 * C248 -
          ((C15878 * C6479 + C32966 * C6485 + C15877 * C1723 + C32984 * C1728 +
            C15876 * C1178 + C32994 * C1194 + C15875 * C727 + C32998 * C736) *
               C32771 +
           (C15878 * C6476 + C32966 * C6480 + C15877 * C1719 + C32984 * C1722 +
            C15876 * C1167 + C32994 * C1179 + C15875 * C721 + C32998 * C726) *
               C20883 +
           (C15878 * C1044 + C32966 * C1052 + C15877 * C1041 + C32984 * C1051 +
            C15876 * C273 + C32994 * C287 + C15875 * C270 + C32998 * C286) *
               C20880 +
           (C15878 * C1034 + C32966 * C1043 + C15877 * C1033 + C32984 * C1042 +
            C15876 * C257 + C32994 * C272 + C15875 * C256 + C32998 * C271) *
               C20882) *
              C32585 * C32644 * C249 +
          ((C15875 * C257 + C32998 * C272 + C15876 * C1033 + C32994 * C1042 +
            C15877 * C1034 + C32984 * C1043 + C15878 * C6406 + C32966 * C6409) *
               C20882 +
           (C15875 * C273 + C32998 * C287 + C15876 * C1041 + C32994 * C1051 +
            C15877 * C1044 + C32984 * C1052 + C15878 * C6408 + C32966 * C6412) *
               C20880 +
           (C15875 * C1167 + C32998 * C1179 + C15876 * C1719 + C32994 * C1722 +
            C15877 * C6476 + C32984 * C6480 + C15878 * C6742 + C32966 * C6743) *
               C20883 +
           (C15875 * C1178 + C32998 * C1194 + C15876 * C1723 + C32994 * C1728 +
            C15877 * C6479 + C32984 * C6485 + C15878 * C6744 + C32966 * C6745) *
               C32771) *
              C32585 * C32644 * C250) *
         C32618) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C15875 * C115 + C32998 * C122 + C15876 * C256 + C32994 * C271 +
            C15877 * C257 + C32984 * C272 + C15878 * C1033 + C32966 * C1042) *
               C20882 +
           (C15875 * C123 + C32998 * C136 + C15876 * C270 + C32994 * C286 +
            C15877 * C273 + C32984 * C287 + C15878 * C1041 + C32966 * C1051) *
               C20880 +
           (C27508 + C27509 + C27510 + C27511) * C20883 +
           (C27512 + C27513 + C27514 + C27515) * C32771) *
              C32585 * C354 -
          ((C27516 + C27517 + C27518 + C27519) * C32771 +
           (C27520 + C27521 + C27522 + C27523) * C20883 +
           (C27515 + C27514 + C27513 + C27512) * C20880 +
           (C27511 + C27510 + C27509 + C27508) * C20882) *
              C32585 * C355 +
          ((C27523 + C27522 + C27521 + C27520) * C20882 +
           (C27519 + C27518 + C27517 + C27516) * C20880 +
           (C15875 * C2110 + C32998 * C2119 + C15876 * C2656 + C32994 * C2659 +
            C15877 * C7076 + C32984 * C7080 + C15878 * C7610 + C32966 * C7611) *
               C20883 +
           (C15875 * C2118 + C32998 * C2128 + C15876 * C2660 + C32994 * C2665 +
            C15877 * C7079 + C32984 * C7085 + C15878 * C7612 + C32966 * C7613) *
               C32771) *
              C32585 * C356) *
         C32630 * C32618) /
            (p * q * std::sqrt(p + q));
    d2ee[48] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C15053 * C115 + C15047 * C122 + C15054 * C256 + C32729 * C271) *
                 C20882 +
             (C15053 * C123 + C15047 * C136 + C15054 * C270 + C32729 * C286) *
                 C20880 +
             (C17058 + C17059) * C20883 + (C17060 + C17061) * C32771) *
                C32988 +
            ((C15088 + C15089) * C20882 + (C15090 + C15091) * C20880 +
             C17488 * C20883 + C17489 * C32771) *
                C32975 +
            C26307 * C32945) *
               C601 -
           (((C16728 + C16729) * C32771 + (C16730 + C16731) * C20883 +
             C19469 * C20880 + C19470 * C20882) *
                C32945 +
            (C17490 * C32771 + C17491 * C20883 + C17492 * C20880 +
             C17493 * C20882) *
                C32975 +
            ((C17065 + C17064) * C32771 + (C17063 + C17062) * C20883 +
             (C17061 + C17060) * C20880 + (C17059 + C17058) * C20882) *
                C32988) *
               C602) *
              C32630 * C481 +
          (((C17488 * C20882 + C17489 * C20880 + C17040 * C20883 +
             C17041 * C32771) *
                C32988 +
            (C18770 * C20882 + C18771 * C20880 + (C16731 + C16730) * C20883 +
             (C16729 + C16728) * C32771) *
                C32975 +
            ((C15633 + C15632) * C20882 + (C15631 + C15630) * C20880 +
             (C15053 * C365 + C15047 * C383 + C15054 * C2308 + C32729 * C2309) *
                 C20883 +
             (C15053 * C384 + C15047 * C395 + C15054 * C2310 + C32729 * C2311) *
                 C32771) *
                C32945) *
               C602 -
           (((C15630 + C15631) * C32771 + (C15632 + C15633) * C20883 +
             (C15099 + C15098) * C20880 + (C15097 + C15096) * C20882) *
                C32945 +
            (C19469 * C32771 + C19470 * C20883 + (C15095 + C15094) * C20880 +
             (C15093 + C15092) * C20882) *
                C32975 +
            (C17492 * C32771 + C17493 * C20883 + (C15091 + C15090) * C20880 +
             (C15089 + C15088) * C20882) *
                C32988) *
               C601) *
              C32630 * C482)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C15875 * C115 + C32998 * C122 + C15876 * C256 + C32994 * C271 +
             C15877 * C257 + C32984 * C272 + C15878 * C1033 + C32966 * C1042) *
                C20882 +
            (C15875 * C123 + C32998 * C136 + C15876 * C270 + C32994 * C286 +
             C15877 * C273 + C32984 * C287 + C15878 * C1041 + C32966 * C1051) *
                C20880 +
            (C27508 + C27509 + C27510 + C27511) * C20883 +
            (C27512 + C27513 + C27514 + C27515) * C32771) *
               C32585 * C601 -
           ((C27516 + C27517 + C27518 + C27519) * C32771 +
            (C27520 + C27521 + C27522 + C27523) * C20883 +
            (C27515 + C27514 + C27513 + C27512) * C20880 +
            (C27511 + C27510 + C27509 + C27508) * C20882) *
               C32585 * C602) *
              C32630 * C481 +
          (((C16431 + C16430 + C16429 + C16428) * C20882 +
            (C16427 + C16426 + C16425 + C16424) * C20880 +
            (C15875 * C363 + C32998 * C379 + C15876 * C1170 + C32994 * C1184 +
             C15877 * C1171 + C32984 * C1185 + C15878 * C7292 +
             C32966 * C7293) *
                C20883 +
            (C15875 * C380 + C32998 * C393 + C15876 * C1186 + C32994 * C1197 +
             C15877 * C1187 + C32984 * C1198 + C15878 * C7294 +
             C32966 * C7295) *
                C32771) *
               C32585 * C602 -
           ((C16424 + C16425 + C16426 + C16427) * C32771 +
            (C16428 + C16429 + C16430 + C16431) * C20883 +
            (C15919 + C15918 + C15917 + C15916) * C20880 +
            (C15915 + C15914 + C15913 + C15912) * C20882) *
               C32585 * C601) *
              C32630 * C482)) /
            (p * q * std::sqrt(p + q));
    d2ee[49] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C15053 * C115 + C15047 * C122 + C15054 * C256 + C32729 * C271) *
                C20882 +
            (C15053 * C123 + C15047 * C136 + C15054 * C270 + C32729 * C286) *
                C20880 +
            (C17058 + C17059) * C20883 + (C17060 + C17061) * C32771) *
               C32988 +
           ((C15088 + C15089) * C20882 + (C15090 + C15091) * C20880 +
            C17488 * C20883 + C17489 * C32771) *
               C32975 +
           C26307 * C32945) *
              C32644 * C32630 * C110 -
          (((C15630 + C15631) * C32771 + (C15632 + C15633) * C20883 +
            (C15099 + C15098) * C20880 + (C15097 + C15096) * C20882) *
               C32945 +
           (C19469 * C32771 + C19470 * C20883 + (C15095 + C15094) * C20880 +
            (C15093 + C15092) * C20882) *
               C32975 +
           (C17492 * C32771 + C17493 * C20883 + (C15091 + C15090) * C20880 +
            (C15089 + C15088) * C20882) *
               C32988) *
              C32644 * C32630 * C111 +
          (C26307 * C32988 +
           (C15106 * C20882 + C15107 * C20880 + (C15633 + C15632) * C20883 +
            (C15631 + C15630) * C32771) *
               C32975 +
           ((C15103 + C15102) * C20882 + (C15101 + C15100) * C20880 +
            (C15053 * C357 + C15047 * C368 + C15054 * C725 + C32729 * C734) *
                C20883 +
            (C15053 * C367 + C15047 * C387 + C15054 * C735 + C32729 * C740) *
                C32771) *
               C32945) *
              C32644 * C32630 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C15053 * C115 + C15047 * C122 + C15054 * C256 + C32729 * C271) *
                C20882 +
            (C15053 * C123 + C15047 * C136 + C15054 * C270 + C32729 * C286) *
                C20880 +
            (C17058 + C17059) * C20883 + (C17060 + C17061) * C32771) *
               C32988 +
           ((C15088 + C15089) * C20882 + (C15090 + C15091) * C20880 +
            C17488 * C20883 + C17489 * C32771) *
               C32975 +
           C26307 * C32945) *
              C32644 * C248 -
          (((C19271 + C19272) * C32771 + (C19273 + C19274) * C20883 +
            (C15468 + C15469) * C20880 + (C15470 + C15471) * C20882) *
               C32945 +
           ((C17290 + C17291) * C32771 + (C17292 + C17293) * C20883 +
            (C15472 + C15473) * C20880 + (C15474 + C15475) * C20882) *
               C32975 +
           ((C17707 + C17706) * C32771 + (C17705 + C17704) * C20883 +
            (C15054 * C273 + C32729 * C287 + C15053 * C270 + C15047 * C286) *
                C20880 +
            (C15054 * C257 + C32729 * C272 + C15053 * C256 + C15047 * C271) *
                C20882) *
               C32988) *
              C32644 * C249 +
          (((C15053 * C257 + C15047 * C272 + C15054 * C1033 + C32729 * C1042) *
                C20882 +
            (C15053 * C273 + C15047 * C287 + C15054 * C1041 + C32729 * C1051) *
                C20880 +
            (C15053 * C1167 + C15047 * C1179 + C15054 * C1719 +
             C32729 * C1722) *
                C20883 +
            (C15053 * C1178 + C15047 * C1194 + C15054 * C1723 +
             C32729 * C1728) *
                C32771) *
               C32988 +
           ((C15053 * C258 + C15047 * C274 + C15054 * C1032 + C32729 * C1040) *
                C20882 +
            (C15053 * C275 + C15047 * C288 + C15054 * C1039 + C32729 * C1050) *
                C20880 +
            (C15053 * C1166 + C15047 * C1177 + C15054 * C1720 +
             C32729 * C1724) *
                C20883 +
            (C15053 * C1176 + C15047 * C1193 + C15054 * C1725 +
             C32729 * C1729) *
                C32771) *
               C32975 +
           ((C15053 * C259 + C15047 * C276 + C15054 * C1031 + C32729 * C1038) *
                C20882 +
            (C15053 * C277 + C15047 * C289 + C15054 * C1037 + C32729 * C1049) *
                C20880 +
            (C15053 * C1165 + C15047 * C1175 + C15054 * C1721 +
             C32729 * C1726) *
                C20883 +
            (C15053 * C1174 + C15047 * C1192 + C15054 * C1727 +
             C32729 * C1730) *
                C32771) *
               C32945) *
              C32644 * C250) *
         C32618) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C15875 * C115 + C32998 * C122 + C15876 * C256 + C32994 * C271 +
            C15877 * C257 + C32984 * C272 + C15878 * C1033 + C32966 * C1042) *
               C20882 +
           (C15875 * C123 + C32998 * C136 + C15876 * C270 + C32994 * C286 +
            C15877 * C273 + C32984 * C287 + C15878 * C1041 + C32966 * C1051) *
               C20880 +
           (C15875 * C361 + C32998 * C376 + C15876 * C721 + C32994 * C726 +
            C15877 * C1167 + C32984 * C1179 + C15878 * C1719 + C32966 * C1722) *
               C20883 +
           (C15875 * C375 + C32998 * C391 + C15876 * C727 + C32994 * C736 +
            C15877 * C1178 + C32984 * C1194 + C15878 * C1723 + C32966 * C1728) *
               C32771) *
              C32585 * C32644 * C32630 * C110 -
          ((C16424 + C16425 + C16426 + C16427) * C32771 +
           (C16428 + C16429 + C16430 + C16431) * C20883 +
           (C15919 + C15918 + C15917 + C15916) * C20880 +
           (C15915 + C15914 + C15913 + C15912) * C20882) *
              C32585 * C32644 * C32630 * C111 +
          ((C15927 + C15926 + C15925 + C15924) * C20882 +
           (C15923 + C15922 + C15921 + C15920) * C20880 +
           (C15875 * C359 + C32998 * C372 + C15876 * C723 + C32994 * C730 +
            C15877 * C1165 + C32984 * C1175 + C15878 * C1721 + C32966 * C1726) *
               C20883 +
           (C15875 * C371 + C32998 * C389 + C15876 * C731 + C32994 * C738 +
            C15877 * C1174 + C32984 * C1192 + C15878 * C1727 + C32966 * C1730) *
               C32771) *
              C32585 * C32644 * C32630 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C15875 * C115 + C32998 * C122 + C15876 * C256 + C32994 * C271 +
            C15877 * C257 + C32984 * C272 + C15878 * C1033 + C32966 * C1042) *
               C20882 +
           (C15875 * C123 + C32998 * C136 + C15876 * C270 + C32994 * C286 +
            C15877 * C273 + C32984 * C287 + C15878 * C1041 + C32966 * C1051) *
               C20880 +
           (C15875 * C361 + C32998 * C376 + C15876 * C721 + C32994 * C726 +
            C15877 * C1167 + C32984 * C1179 + C15878 * C1719 + C32966 * C1722) *
               C20883 +
           (C15875 * C375 + C32998 * C391 + C15876 * C727 + C32994 * C736 +
            C15877 * C1178 + C32984 * C1194 + C15878 * C1723 + C32966 * C1728) *
               C32771) *
              C32585 * C32644 * C248 -
          ((C15878 * C6479 + C32966 * C6485 + C15877 * C1723 + C32984 * C1728 +
            C15876 * C1178 + C32994 * C1194 + C15875 * C727 + C32998 * C736) *
               C32771 +
           (C15878 * C6476 + C32966 * C6480 + C15877 * C1719 + C32984 * C1722 +
            C15876 * C1167 + C32994 * C1179 + C15875 * C721 + C32998 * C726) *
               C20883 +
           (C15878 * C1044 + C32966 * C1052 + C15877 * C1041 + C32984 * C1051 +
            C15876 * C273 + C32994 * C287 + C15875 * C270 + C32998 * C286) *
               C20880 +
           (C15878 * C1034 + C32966 * C1043 + C15877 * C1033 + C32984 * C1042 +
            C15876 * C257 + C32994 * C272 + C15875 * C256 + C32998 * C271) *
               C20882) *
              C32585 * C32644 * C249 +
          ((C15875 * C257 + C32998 * C272 + C15876 * C1033 + C32994 * C1042 +
            C15877 * C1034 + C32984 * C1043 + C15878 * C6406 + C32966 * C6409) *
               C20882 +
           (C15875 * C273 + C32998 * C287 + C15876 * C1041 + C32994 * C1051 +
            C15877 * C1044 + C32984 * C1052 + C15878 * C6408 + C32966 * C6412) *
               C20880 +
           (C15875 * C1167 + C32998 * C1179 + C15876 * C1719 + C32994 * C1722 +
            C15877 * C6476 + C32984 * C6480 + C15878 * C6742 + C32966 * C6743) *
               C20883 +
           (C15875 * C1178 + C32998 * C1194 + C15876 * C1723 + C32994 * C1728 +
            C15877 * C6479 + C32984 * C6485 + C15878 * C6744 + C32966 * C6745) *
               C32771) *
              C32585 * C32644 * C250) *
         C32618) /
            (p * q * std::sqrt(p + q));
    d2ee[50] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C7754 * C115 + C7748 * C122 + C7755 * C256 + C7749 * C271 +
              C7756 * C257 + C7750 * C272 + C7757 * C1033 + C32966 * C1042) *
                 C114 +
             (C7754 * C123 + C7748 * C136 + C7755 * C270 + C7749 * C286 +
              C7756 * C273 + C7750 * C287 + C7757 * C1041 + C32966 * C1051) *
                 C32684) *
                C32906 +
            ((C7791 + C7792 + C7793 + C7794) * C114 +
             (C7795 + C7796 + C7797 + C7798) * C32684) *
                C32595) *
               C32644 * C479 -
           (((C8149 + C8150 + C8151 + C8152) * C32684 +
             (C8153 + C8154 + C8155 + C8156) * C114) *
                C32595 +
            ((C7757 * C1044 + C32966 * C1052 + C7756 * C1041 + C7750 * C1051 +
              C7755 * C273 + C7749 * C287 + C7754 * C270 + C7748 * C286) *
                 C32684 +
             (C7757 * C1034 + C32966 * C1043 + C7756 * C1033 + C7750 * C1042 +
              C7755 * C257 + C7749 * C272 + C7754 * C256 + C7748 * C271) *
                 C114) *
                C32906) *
               C32644 * C480) *
              C481 +
          ((((C8156 + C8155 + C8154 + C8153) * C114 +
             (C8152 + C8151 + C8150 + C8149) * C32684) *
                C32906 +
            ((C7754 * C254 + C7748 * C267 + C7755 * C259 + C7749 * C276 +
              C7756 * C1031 + C7750 * C1038 + C7757 * C1036 + C32966 * C1047) *
                 C114 +
             (C7754 * C266 + C7748 * C284 + C7755 * C277 + C7749 * C289 +
              C7756 * C1037 + C7750 * C1049 + C7757 * C1048 + C32966 * C1054) *
                 C32684) *
                C32595) *
               C32644 * C480 -
           (((C7799 + C7800 + C7801 + C7802) * C32684 +
             (C7803 + C7804 + C7805 + C7806) * C114) *
                C32595 +
            ((C7798 + C7797 + C7796 + C7795) * C32684 +
             (C7794 + C7793 + C7792 + C7791) * C114) *
                C32906) *
               C32644 * C479) *
              C482)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2784 * C115 + C32925 * C122 + C2785 * C256 + C32729 * C271) *
                 C114 +
             (C2784 * C123 + C32925 * C136 + C2785 * C270 + C32729 * C286) *
                 C32684) *
                C2780 +
            ((C2819 + C2820) * C114 + (C2821 + C2822) * C32684) * C2781 +
            C2843 * C2782 + C2844 * C32960) *
               C32644 * C479 -
           (((C3195 + C3196) * C32684 + (C3197 + C3198) * C114) * C32960 +
            ((C3199 + C3200) * C32684 + (C3201 + C3202) * C114) * C2782 +
            ((C3203 + C3204) * C32684 + (C3205 + C3206) * C114) * C2781 +
            ((C2785 * C273 + C32729 * C287 + C2784 * C270 + C32925 * C286) *
                 C32684 +
             (C2785 * C257 + C32729 * C272 + C2784 * C256 + C32925 * C271) *
                 C114) *
                C2780) *
               C32644 * C480) *
              C481 +
          ((((C3206 + C3205) * C114 + (C3204 + C3203) * C32684) * C2780 +
            ((C3202 + C3201) * C114 + (C3200 + C3199) * C32684) * C2781 +
            ((C3198 + C3197) * C114 + (C3196 + C3195) * C32684) * C2782 +
            ((C2784 * C252 + C32925 * C263 + C2785 * C261 + C32729 * C280) *
                 C114 +
             (C2784 * C262 + C32925 * C282 + C2785 * C281 + C32729 * C291) *
                 C32684) *
                C32960) *
               C32644 * C480 -
           (((C2831 + C2832) * C32684 + (C2833 + C2834) * C114) * C32960 +
            ((C2830 + C2829) * C32684 + (C2828 + C2827) * C114) * C2782 +
            ((C2826 + C2825) * C32684 + (C2824 + C2823) * C114) * C2781 +
            ((C2822 + C2821) * C32684 + (C2820 + C2819) * C114) * C2780) *
               C32644 * C479) *
              C482)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C2784 * C115 + C32925 * C122 + C2785 * C256 + C32729 * C271) *
                 C10355 +
             (C2784 * C123 + C32925 * C136 + C2785 * C270 + C32729 * C286) *
                 C10352 +
             (C4722 + C4723) * C10356 + (C4724 + C4725) * C10353 +
             C12874 * C10357 + C12875 * C32959) *
                C32906 +
            ((C2819 + C2820) * C10355 + (C2821 + C2822) * C10352 +
             C5150 * C10356 + C5151 * C10353 + C12876 * C10357 +
             C12877 * C32959) *
                C32595) *
               C32644 * C479 -
           (((C13104 + C13105) * C32959 + (C13106 + C13107) * C10357 +
             (C4952 + C4953) * C10353 + (C4954 + C4955) * C10356 +
             (C3203 + C3204) * C10352 + (C3205 + C3206) * C10355) *
                C32595 +
            ((C2785 * C1183 + C32729 * C1196 + C2784 * C1182 + C32925 * C1195) *
                 C32959 +
             (C2785 * C1169 + C32729 * C1181 + C2784 * C1168 + C32925 * C1180) *
                 C10357 +
             (C5361 + C5360) * C10353 + (C5359 + C5358) * C10356 +
             (C2785 * C273 + C32729 * C287 + C2784 * C270 + C32925 * C286) *
                 C10352 +
             (C2785 * C257 + C32729 * C272 + C2784 * C256 + C32925 * C271) *
                 C10355) *
                C32906) *
               C32644 * C480) *
              C481 +
          ((((C3206 + C3205) * C10355 + (C3204 + C3203) * C10352 +
             (C4955 + C4954) * C10356 + (C4953 + C4952) * C10353 +
             (C13107 + C13106) * C10357 + (C13105 + C13104) * C32959) *
                C32906 +
            ((C3202 + C3201) * C10355 + (C3200 + C3199) * C10352 +
             (C4951 + C4950) * C10356 + (C4949 + C4948) * C10353 +
             (C2784 * C1172 + C32925 * C1188 + C2785 * C1173 + C32729 * C1189) *
                 C10357 +
             (C2784 * C1190 + C32925 * C1199 + C2785 * C1191 + C32729 * C1200) *
                 C32959) *
                C32595) *
               C32644 * C480 -
           (((C4726 + C4727) * C32959 + (C4728 + C4729) * C10357 +
             C5152 * C10353 + C5153 * C10356 + (C2826 + C2825) * C10352 +
             (C2824 + C2823) * C10355) *
                C32595 +
            ((C4730 + C4731) * C32959 + (C4732 + C4733) * C10357 +
             C5154 * C10353 + C5155 * C10356 + (C2822 + C2821) * C10352 +
             (C2820 + C2819) * C10355) *
                C32906) *
               C32644 * C479) *
              C482)) /
            (p * q * std::sqrt(p + q));
    d2ee[51] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C7754 * C115 + C7748 * C122 + C7755 * C256 + C7749 * C271 +
              C7756 * C257 + C7750 * C272 + C7757 * C1033 + C32966 * C1042) *
                 C114 +
             (C7754 * C123 + C7748 * C136 + C7755 * C270 + C7749 * C286 +
              C7756 * C273 + C7750 * C287 + C7757 * C1041 + C32966 * C1051) *
                 C32684) *
                C32906 +
            ((C7791 + C7792 + C7793 + C7794) * C114 +
             (C7795 + C7796 + C7797 + C7798) * C32684) *
                C32595) *
               C601 -
           (((C8303 + C8304 + C8305 + C8306) * C32684 +
             (C8307 + C8308 + C8309 + C8310) * C114) *
                C32595 +
            ((C7757 * C1723 + C32966 * C1728 + C7756 * C1178 + C7750 * C1194 +
              C7755 * C727 + C7749 * C736 + C7754 * C375 + C7748 * C391) *
                 C32684 +
             (C7757 * C1719 + C32966 * C1722 + C7756 * C1167 + C7750 * C1179 +
              C7755 * C721 + C7749 * C726 + C7754 * C361 + C7748 * C376) *
                 C114) *
                C32906) *
               C602) *
              C479 +
          ((((C7754 * C721 + C7748 * C726 + C7755 * C1167 + C7749 * C1179 +
              C7756 * C1719 + C7750 * C1722 + C7757 * C6476 + C32966 * C6480) *
                 C114 +
             (C7754 * C727 + C7748 * C736 + C7755 * C1178 + C7749 * C1194 +
              C7756 * C1723 + C7750 * C1728 + C7757 * C6479 + C32966 * C6485) *
                 C32684) *
                C32906 +
            ((C7754 * C722 + C7748 * C728 + C7755 * C1166 + C7749 * C1177 +
              C7756 * C1720 + C7750 * C1724 + C7757 * C6656 + C32966 * C6657) *
                 C114 +
             (C7754 * C729 + C7748 * C737 + C7755 * C1176 + C7749 * C1193 +
              C7756 * C1725 + C7750 * C1729 + C7757 * C6658 + C32966 * C6659) *
                 C32684) *
                C32595) *
               C602 -
           (((C8149 + C8150 + C8151 + C8152) * C32684 +
             (C8153 + C8154 + C8155 + C8156) * C114) *
                C32595 +
            ((C7757 * C1044 + C32966 * C1052 + C7756 * C1041 + C7750 * C1051 +
              C7755 * C273 + C7749 * C287 + C7754 * C270 + C7748 * C286) *
                 C32684 +
             (C7757 * C1034 + C32966 * C1043 + C7756 * C1033 + C7750 * C1042 +
              C7755 * C257 + C7749 * C272 + C7754 * C256 + C7748 * C271) *
                 C114) *
                C32906) *
               C601) *
              C480) *
         C32618) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2784 * C115 + C32925 * C122 + C2785 * C256 + C32729 * C271) *
                 C114 +
             (C2784 * C123 + C32925 * C136 + C2785 * C270 + C32729 * C286) *
                 C32684) *
                C2780 +
            ((C2819 + C2820) * C114 + (C2821 + C2822) * C32684) * C2781 +
            C2843 * C2782 + C2844 * C32960) *
               C601 -
           (((C3361 + C3362) * C32684 + (C3363 + C3364) * C114) * C32960 +
            ((C3365 + C3366) * C32684 + (C3367 + C3368) * C114) * C2782 +
            ((C3369 + C3370) * C32684 + (C3371 + C3372) * C114) * C2781 +
            ((C2785 * C727 + C32729 * C736 + C2784 * C375 + C32925 * C391) *
                 C32684 +
             (C2785 * C721 + C32729 * C726 + C2784 * C361 + C32925 * C376) *
                 C114) *
                C2780) *
               C602) *
              C479 +
          ((((C2784 * C721 + C32925 * C726 + C2785 * C1167 + C32729 * C1179) *
                 C114 +
             (C2784 * C727 + C32925 * C736 + C2785 * C1178 + C32729 * C1194) *
                 C32684) *
                C2780 +
            ((C2784 * C722 + C32925 * C728 + C2785 * C1166 + C32729 * C1177) *
                 C114 +
             (C2784 * C729 + C32925 * C737 + C2785 * C1176 + C32729 * C1193) *
                 C32684) *
                C2781 +
            ((C2784 * C723 + C32925 * C730 + C2785 * C1165 + C32729 * C1175) *
                 C114 +
             (C2784 * C731 + C32925 * C738 + C2785 * C1174 + C32729 * C1192) *
                 C32684) *
                C2782 +
            ((C2784 * C724 + C32925 * C732 + C2785 * C1533 + C32729 * C1534) *
                 C114 +
             (C2784 * C733 + C32925 * C739 + C2785 * C1535 + C32729 * C1536) *
                 C32684) *
                C32960) *
               C602 -
           (((C3195 + C3196) * C32684 + (C3197 + C3198) * C114) * C32960 +
            ((C3199 + C3200) * C32684 + (C3201 + C3202) * C114) * C2782 +
            ((C3203 + C3204) * C32684 + (C3205 + C3206) * C114) * C2781 +
            ((C2785 * C273 + C32729 * C287 + C2784 * C270 + C32925 * C286) *
                 C32684 +
             (C2785 * C257 + C32729 * C272 + C2784 * C256 + C32925 * C271) *
                 C114) *
                C2780) *
               C601) *
              C480) *
         C32618) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C2784 * C115 + C32925 * C122 + C2785 * C256 + C32729 * C271) *
                 C10355 +
             (C2784 * C123 + C32925 * C136 + C2785 * C270 + C32729 * C286) *
                 C10352 +
             (C4722 + C4723) * C10356 + (C4724 + C4725) * C10353 +
             C12874 * C10357 + C12875 * C32959) *
                C32906 +
            ((C2819 + C2820) * C10355 + (C2821 + C2822) * C10352 +
             C5150 * C10356 + C5151 * C10353 + C12876 * C10357 +
             C12877 * C32959) *
                C32595) *
               C601 -
           (((C12894 + C12895) * C32959 + (C12896 + C12897) * C10357 +
             C13302 * C10353 + C13303 * C10356 + C5154 * C10352 +
             C5155 * C10355) *
                C32595 +
            ((C12898 + C12899) * C32959 + (C12900 + C12901) * C10357 +
             (C4734 + C4735) * C10353 + (C4736 + C4737) * C10356 +
             (C4725 + C4724) * C10352 + (C4723 + C4722) * C10355) *
                C32906) *
               C602) *
              C479 +
          ((((C5358 + C5359) * C10355 + (C5360 + C5361) * C10352 +
             (C13506 + C13507) * C10356 + (C13508 + C13509) * C10353 +
             (C2784 * C2656 + C32925 * C2659 + C2785 * C7076 + C32729 * C7080) *
                 C10357 +
             (C2784 * C2660 + C32925 * C2665 + C2785 * C7079 + C32729 * C7085) *
                 C32959) *
                C32906 +
            ((C4955 + C4954) * C10355 + (C4953 + C4952) * C10352 +
             (C13107 + C13106) * C10356 + (C13105 + C13104) * C10353 +
             (C2784 * C2657 + C32925 * C2661 + C2785 * C7442 + C32729 * C7443) *
                 C10357 +
             (C2784 * C2662 + C32925 * C2666 + C2785 * C7444 + C32729 * C7445) *
                 C32959) *
                C32595) *
               C602 -
           (((C13104 + C13105) * C32959 + (C13106 + C13107) * C10357 +
             (C4952 + C4953) * C10353 + (C4954 + C4955) * C10356 +
             (C3203 + C3204) * C10352 + (C3205 + C3206) * C10355) *
                C32595 +
            ((C13509 + C13508) * C32959 + (C13507 + C13506) * C10357 +
             (C5361 + C5360) * C10353 + (C5359 + C5358) * C10356 +
             (C2785 * C273 + C32729 * C287 + C2784 * C270 + C32925 * C286) *
                 C10352 +
             (C2785 * C257 + C32729 * C272 + C2784 * C256 + C32925 * C271) *
                 C10355) *
                C32906) *
               C601) *
              C480) *
         C32618) /
            (p * q * std::sqrt(p + q));
    d2ee[52] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C2784 * C115 + C32925 * C122 + C2785 * C256 + C32729 * C271) *
                    C114 +
                (C2784 * C123 + C32925 * C136 + C2785 * C270 + C32729 * C286) *
                    C32684) *
                   C2780 +
               ((C2819 + C2820) * C114 + (C2821 + C2822) * C32684) * C2781 +
               C2843 * C2782 + C2844 * C32960) *
                  C32644 * C32630 * C110 -
              (((C2831 + C2832) * C32684 + (C2833 + C2834) * C114) * C32960 +
               ((C2830 + C2829) * C32684 + (C2828 + C2827) * C114) * C2782 +
               ((C2826 + C2825) * C32684 + (C2824 + C2823) * C114) * C2781 +
               ((C2822 + C2821) * C32684 + (C2820 + C2819) * C114) * C2780) *
                  C32644 * C32630 * C111 +
              (C2843 * C2780 + C2844 * C2781 +
               ((C2834 + C2833) * C114 + (C2832 + C2831) * C32684) * C2782 +
               ((C2784 * C120 + C32925 * C133 + C2785 * C483 + C32729 * C484) *
                    C114 +
                (C2784 * C132 + C32925 * C141 + C2785 * C485 + C32729 * C486) *
                    C32684) *
                   C32960) *
                  C32644 * C32630 * C112) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C2784 * C115 + C32925 * C122 + C2785 * C256 + C32729 * C271) *
                    C114 +
                (C2784 * C123 + C32925 * C136 + C2785 * C270 + C32729 * C286) *
                    C32684) *
                   C2780 +
               ((C2819 + C2820) * C114 + (C2821 + C2822) * C32684) * C2781 +
               C2843 * C2782 + C2844 * C32960) *
                  C32644 * C248 -
              (((C2785 * C279 + C32729 * C290 + C2784 * C264 + C32925 * C283) *
                    C32684 +
                (C2785 * C260 + C32729 * C278 + C2784 * C253 + C32925 * C265) *
                    C114) *
                   C32960 +
               ((C2785 * C277 + C32729 * C289 + C2784 * C266 + C32925 * C284) *
                    C32684 +
                (C2785 * C259 + C32729 * C276 + C2784 * C254 + C32925 * C267) *
                    C114) *
                   C2782 +
               ((C2785 * C275 + C32729 * C288 + C2784 * C268 + C32925 * C285) *
                    C32684 +
                (C2785 * C258 + C32729 * C274 + C2784 * C255 + C32925 * C269) *
                    C114) *
                   C2781 +
               ((C2785 * C273 + C32729 * C287 + C2784 * C270 + C32925 * C286) *
                    C32684 +
                (C2785 * C257 + C32729 * C272 + C2784 * C256 + C32925 * C271) *
                    C114) *
                   C2780) *
                  C32644 * C249 +
              (((C2784 * C257 + C32925 * C272 + C2785 * C1033 +
                 C32729 * C1042) *
                    C114 +
                (C2784 * C273 + C32925 * C287 + C2785 * C1041 +
                 C32729 * C1051) *
                    C32684) *
                   C2780 +
               ((C2784 * C258 + C32925 * C274 + C2785 * C1032 +
                 C32729 * C1040) *
                    C114 +
                (C2784 * C275 + C32925 * C288 + C2785 * C1039 +
                 C32729 * C1050) *
                    C32684) *
                   C2781 +
               ((C2784 * C259 + C32925 * C276 + C2785 * C1031 +
                 C32729 * C1038) *
                    C114 +
                (C2784 * C277 + C32925 * C289 + C2785 * C1037 +
                 C32729 * C1049) *
                    C32684) *
                   C2782 +
               ((C2784 * C260 + C32925 * C278 + C2785 * C1347 +
                 C32729 * C1348) *
                    C114 +
                (C2784 * C279 + C32925 * C290 + C2785 * C1349 +
                 C32729 * C1350) *
                    C32684) *
                   C32960) *
                  C32644 * C250) *
             C32618) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2784 * C115 + C32925 * C122 + C2785 * C256 + C32729 * C271) *
                C114 +
            (C2784 * C123 + C32925 * C136 + C2785 * C270 + C32729 * C286) *
                C32684) *
               C2780 +
           ((C2819 + C2820) * C114 + (C2821 + C2822) * C32684) * C2781 +
           C2843 * C2782 + C2844 * C32960) *
              C354 -
          (((C2785 * C733 + C32729 * C739 + C2784 * C369 + C32925 * C388) *
                C32684 +
            (C2785 * C724 + C32729 * C732 + C2784 * C358 + C32925 * C370) *
                C114) *
               C32960 +
           ((C2785 * C731 + C32729 * C738 + C2784 * C371 + C32925 * C389) *
                C32684 +
            (C2785 * C723 + C32729 * C730 + C2784 * C359 + C32925 * C372) *
                C114) *
               C2782 +
           ((C2785 * C729 + C32729 * C737 + C2784 * C373 + C32925 * C390) *
                C32684 +
            (C2785 * C722 + C32729 * C728 + C2784 * C360 + C32925 * C374) *
                C114) *
               C2781 +
           ((C2785 * C727 + C32729 * C736 + C2784 * C375 + C32925 * C391) *
                C32684 +
            (C2785 * C721 + C32729 * C726 + C2784 * C361 + C32925 * C376) *
                C114) *
               C2780) *
              C355 +
          (((C2784 * C362 + C32925 * C377 + C2785 * C1168 + C32729 * C1180) *
                C114 +
            (C2784 * C378 + C32925 * C392 + C2785 * C1182 + C32729 * C1195) *
                C32684) *
               C2780 +
           ((C2784 * C363 + C32925 * C379 + C2785 * C1170 + C32729 * C1184) *
                C114 +
            (C2784 * C380 + C32925 * C393 + C2785 * C1186 + C32729 * C1197) *
                C32684) *
               C2781 +
           ((C2784 * C364 + C32925 * C381 + C2785 * C1172 + C32729 * C1188) *
                C114 +
            (C2784 * C382 + C32925 * C394 + C2785 * C1190 + C32729 * C1199) *
                C32684) *
               C2782 +
           ((C2784 * C365 + C32925 * C383 + C2785 * C2308 + C32729 * C2309) *
                C114 +
            (C2784 * C384 + C32925 * C395 + C2785 * C2310 + C32729 * C2311) *
                C32684) *
               C32960) *
              C356) *
         C32630 * C32618) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C7754 * C115 + C7748 * C122 + C7755 * C256 + C7749 * C271 +
             C7756 * C257 + C7750 * C272 + C7757 * C1033 + C32966 * C1042) *
                C114 +
            (C7754 * C123 + C7748 * C136 + C7755 * C270 + C7749 * C286 +
             C7756 * C273 + C7750 * C287 + C7757 * C1041 + C32966 * C1051) *
                C32684) *
               C32906 +
           ((C7791 + C7792 + C7793 + C7794) * C114 +
            (C7795 + C7796 + C7797 + C7798) * C32684) *
               C32595) *
              C32644 * C32630 * C110 -
          (((C7799 + C7800 + C7801 + C7802) * C32684 +
            (C7803 + C7804 + C7805 + C7806) * C114) *
               C32595 +
           ((C7798 + C7797 + C7796 + C7795) * C32684 +
            (C7794 + C7793 + C7792 + C7791) * C114) *
               C32906) *
              C32644 * C32630 * C111 +
          (((C7806 + C7805 + C7804 + C7803) * C114 +
            (C7802 + C7801 + C7800 + C7799) * C32684) *
               C32906 +
           ((C7754 * C118 + C7748 * C128 + C7755 * C253 + C7749 * C265 +
             C7756 * C260 + C7750 * C278 + C7757 * C1347 + C32966 * C1348) *
                C114 +
            (C7754 * C129 + C7748 * C139 + C7755 * C264 + C7749 * C283 +
             C7756 * C279 + C7750 * C290 + C7757 * C1349 + C32966 * C1350) *
                C32684) *
               C32595) *
              C32644 * C32630 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C7754 * C115 + C7748 * C122 + C7755 * C256 + C7749 * C271 +
             C7756 * C257 + C7750 * C272 + C7757 * C1033 + C32966 * C1042) *
                C114 +
            (C7754 * C123 + C7748 * C136 + C7755 * C270 + C7749 * C286 +
             C7756 * C273 + C7750 * C287 + C7757 * C1041 + C32966 * C1051) *
                C32684) *
               C32906 +
           ((C7791 + C7792 + C7793 + C7794) * C114 +
            (C7795 + C7796 + C7797 + C7798) * C32684) *
               C32595) *
              C32644 * C248 -
          (((C7757 * C1046 + C32966 * C1053 + C7756 * C1039 + C7750 * C1050 +
             C7755 * C275 + C7749 * C288 + C7754 * C268 + C7748 * C285) *
                C32684 +
            (C7757 * C1035 + C32966 * C1045 + C7756 * C1032 + C7750 * C1040 +
             C7755 * C258 + C7749 * C274 + C7754 * C255 + C7748 * C269) *
                C114) *
               C32595 +
           ((C7757 * C1044 + C32966 * C1052 + C7756 * C1041 + C7750 * C1051 +
             C7755 * C273 + C7749 * C287 + C7754 * C270 + C7748 * C286) *
                C32684 +
            (C7757 * C1034 + C32966 * C1043 + C7756 * C1033 + C7750 * C1042 +
             C7755 * C257 + C7749 * C272 + C7754 * C256 + C7748 * C271) *
                C114) *
               C32906) *
              C32644 * C249 +
          (((C7754 * C257 + C7748 * C272 + C7755 * C1033 + C7749 * C1042 +
             C7756 * C1034 + C7750 * C1043 + C7757 * C6406 + C32966 * C6409) *
                C114 +
            (C7754 * C273 + C7748 * C287 + C7755 * C1041 + C7749 * C1051 +
             C7756 * C1044 + C7750 * C1052 + C7757 * C6408 + C32966 * C6412) *
                C32684) *
               C32906 +
           ((C7754 * C258 + C7748 * C274 + C7755 * C1032 + C7749 * C1040 +
             C7756 * C1035 + C7750 * C1045 + C7757 * C6570 + C32966 * C6571) *
                C114 +
            (C7754 * C275 + C7748 * C288 + C7755 * C1039 + C7749 * C1050 +
             C7756 * C1046 + C7750 * C1053 + C7757 * C6572 + C32966 * C6573) *
                C32684) *
               C32595) *
              C32644 * C250) *
         C32618) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C7754 * C115 + C7748 * C122 + C7755 * C256 + C7749 * C271 +
             C7756 * C257 + C7750 * C272 + C7757 * C1033 + C32966 * C1042) *
                C114 +
            (C7754 * C123 + C7748 * C136 + C7755 * C270 + C7749 * C286 +
             C7756 * C273 + C7750 * C287 + C7757 * C1041 + C32966 * C1051) *
                C32684) *
               C32906 +
           ((C7791 + C7792 + C7793 + C7794) * C114 +
            (C7795 + C7796 + C7797 + C7798) * C32684) *
               C32595) *
              C354 -
          (((C7757 * C1725 + C32966 * C1729 + C7756 * C1176 + C7750 * C1193 +
             C7755 * C729 + C7749 * C737 + C7754 * C373 + C7748 * C390) *
                C32684 +
            (C7757 * C1720 + C32966 * C1724 + C7756 * C1166 + C7750 * C1177 +
             C7755 * C722 + C7749 * C728 + C7754 * C360 + C7748 * C374) *
                C114) *
               C32595 +
           ((C7757 * C1723 + C32966 * C1728 + C7756 * C1178 + C7750 * C1194 +
             C7755 * C727 + C7749 * C736 + C7754 * C375 + C7748 * C391) *
                C32684 +
            (C7757 * C1719 + C32966 * C1722 + C7756 * C1167 + C7750 * C1179 +
             C7755 * C721 + C7749 * C726 + C7754 * C361 + C7748 * C376) *
                C114) *
               C32906) *
              C355 +
          (((C7754 * C362 + C7748 * C377 + C7755 * C1168 + C7749 * C1180 +
             C7756 * C1169 + C7750 * C1181 + C7757 * C6477 + C32966 * C6481) *
                C114 +
            (C7754 * C378 + C7748 * C392 + C7755 * C1182 + C7749 * C1195 +
             C7756 * C1183 + C7750 * C1196 + C7757 * C6483 + C32966 * C6486) *
                C32684) *
               C32906 +
           ((C7754 * C363 + C7748 * C379 + C7755 * C1170 + C7749 * C1184 +
             C7756 * C1171 + C7750 * C1185 + C7757 * C7292 + C32966 * C7293) *
                C114 +
            (C7754 * C380 + C7748 * C393 + C7755 * C1186 + C7749 * C1197 +
             C7756 * C1187 + C7750 * C1198 + C7757 * C7294 + C32966 * C7295) *
                C32684) *
               C32595) *
              C356) *
         C32630 * C32618) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2784 * C115 + C32925 * C122 + C2785 * C256 + C32729 * C271) *
                C10355 +
            (C2784 * C123 + C32925 * C136 + C2785 * C270 + C32729 * C286) *
                C10352 +
            (C4722 + C4723) * C10356 + (C4724 + C4725) * C10353 +
            (C4737 + C4736) * C10357 + (C4735 + C4734) * C32959) *
               C32906 +
           ((C2819 + C2820) * C10355 + (C2821 + C2822) * C10352 +
            C5150 * C10356 + C5151 * C10353 + (C4733 + C4732) * C10357 +
            (C4731 + C4730) * C32959) *
               C32595) *
              C32644 * C32630 * C110 -
          (((C4726 + C4727) * C32959 + (C4728 + C4729) * C10357 +
            C5152 * C10353 + C5153 * C10356 + (C2826 + C2825) * C10352 +
            (C2824 + C2823) * C10355) *
               C32595 +
           ((C4730 + C4731) * C32959 + (C4732 + C4733) * C10357 +
            C5154 * C10353 + C5155 * C10356 + (C2822 + C2821) * C10352 +
            (C2820 + C2819) * C10355) *
               C32906) *
              C32644 * C32630 * C111 +
          ((C2835 * C10355 + C2836 * C10352 + C4391 * C10356 + C4392 * C10353 +
            (C4729 + C4728) * C10357 + (C4727 + C4726) * C32959) *
               C32906 +
           (C2837 * C10355 + C2838 * C10352 + (C3364 + C3363) * C10356 +
            (C3362 + C3361) * C10353 +
            (C2784 * C365 + C32925 * C383 + C2785 * C2308 + C32729 * C2309) *
                C10357 +
            (C2784 * C384 + C32925 * C395 + C2785 * C2310 + C32729 * C2311) *
                C32959) *
               C32595) *
              C32644 * C32630 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2784 * C115 + C32925 * C122 + C2785 * C256 + C32729 * C271) *
                C10355 +
            (C2784 * C123 + C32925 * C136 + C2785 * C270 + C32729 * C286) *
                C10352 +
            (C4722 + C4723) * C10356 + (C4724 + C4725) * C10353 +
            (C4737 + C4736) * C10357 + (C4735 + C4734) * C32959) *
               C32906 +
           ((C2819 + C2820) * C10355 + (C2821 + C2822) * C10352 +
            C5150 * C10356 + C5151 * C10353 + (C4733 + C4732) * C10357 +
            (C4731 + C4730) * C32959) *
               C32595) *
              C32644 * C248 -
          (((C2785 * C1187 + C32729 * C1198 + C2784 * C1186 + C32925 * C1197) *
                C32959 +
            (C2785 * C1171 + C32729 * C1185 + C2784 * C1170 + C32925 * C1184) *
                C10357 +
            (C4952 + C4953) * C10353 + (C4954 + C4955) * C10356 +
            (C3203 + C3204) * C10352 + (C3205 + C3206) * C10355) *
               C32595 +
           ((C2785 * C1183 + C32729 * C1196 + C2784 * C1182 + C32925 * C1195) *
                C32959 +
            (C2785 * C1169 + C32729 * C1181 + C2784 * C1168 + C32925 * C1180) *
                C10357 +
            (C5361 + C5360) * C10353 + (C5359 + C5358) * C10356 +
            (C2785 * C273 + C32729 * C287 + C2784 * C270 + C32925 * C286) *
                C10352 +
            (C2785 * C257 + C32729 * C272 + C2784 * C256 + C32925 * C271) *
                C10355) *
               C32906) *
              C32644 * C249 +
          (((C2784 * C257 + C32925 * C272 + C2785 * C1033 + C32729 * C1042) *
                C10355 +
            (C2784 * C273 + C32925 * C287 + C2785 * C1041 + C32729 * C1051) *
                C10352 +
            (C2784 * C1167 + C32925 * C1179 + C2785 * C1719 + C32729 * C1722) *
                C10356 +
            (C2784 * C1178 + C32925 * C1194 + C2785 * C1723 + C32729 * C1728) *
                C10353 +
            (C2784 * C1169 + C32925 * C1181 + C2785 * C6477 + C32729 * C6481) *
                C10357 +
            (C2784 * C1183 + C32925 * C1196 + C2785 * C6483 + C32729 * C6486) *
                C32959) *
               C32906 +
           ((C2784 * C258 + C32925 * C274 + C2785 * C1032 + C32729 * C1040) *
                C10355 +
            (C2784 * C275 + C32925 * C288 + C2785 * C1039 + C32729 * C1050) *
                C10352 +
            (C2784 * C1166 + C32925 * C1177 + C2785 * C1720 + C32729 * C1724) *
                C10356 +
            (C2784 * C1176 + C32925 * C1193 + C2785 * C1725 + C32729 * C1729) *
                C10353 +
            (C2784 * C1171 + C32925 * C1185 + C2785 * C7292 + C32729 * C7293) *
                C10357 +
            (C2784 * C1187 + C32925 * C1198 + C2785 * C7294 + C32729 * C7295) *
                C32959) *
               C32595) *
              C32644 * C250) *
         C32618) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C2784 * C115 + C32925 * C122 + C2785 * C256 + C32729 * C271) *
                C10355 +
            (C2784 * C123 + C32925 * C136 + C2785 * C270 + C32729 * C286) *
                C10352 +
            (C4722 + C4723) * C10356 + (C4724 + C4725) * C10353 +
            C12874 * C10357 + C12875 * C32959) *
               C32906 +
           ((C2819 + C2820) * C10355 + (C2821 + C2822) * C10352 +
            C5150 * C10356 + C5151 * C10353 + C12876 * C10357 +
            C12877 * C32959) *
               C32595) *
              C354 -
          (((C12894 + C12895) * C32959 + (C12896 + C12897) * C10357 +
            (C4730 + C4731) * C10353 + (C4732 + C4733) * C10356 +
            C5154 * C10352 + C5155 * C10355) *
               C32595 +
           ((C12898 + C12899) * C32959 + (C12900 + C12901) * C10357 +
            (C4734 + C4735) * C10353 + (C4736 + C4737) * C10356 +
            (C4725 + C4724) * C10352 + (C4723 + C4722) * C10355) *
               C32906) *
              C355 +
          ((C12874 * C10355 + C12875 * C10352 + (C12901 + C12900) * C10356 +
            (C12899 + C12898) * C10353 +
            (C2784 * C2111 + C32925 * C2120 + C2785 * C7077 + C32729 * C7081) *
                C10357 +
            (C2784 * C2121 + C32925 * C2129 + C2785 * C7083 + C32729 * C7086) *
                C32959) *
               C32906 +
           (C12876 * C10355 + C12877 * C10352 + (C12897 + C12896) * C10356 +
            (C12895 + C12894) * C10353 +
            (C2784 * C2112 + C32925 * C2122 + C2785 * C12241 +
             C32729 * C12242) *
                C10357 +
            (C2784 * C2123 + C32925 * C2130 + C2785 * C12243 +
             C32729 * C12244) *
                C32959) *
               C32595) *
              C356) *
         C32630 * C32618) /
            (p * q * std::sqrt(p + q));
    d2ee[53] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C7754 * C115 + C7748 * C122 + C7755 * C256 + C7749 * C271 +
              C7756 * C257 + C7750 * C272 + C7757 * C1033 + C32966 * C1042) *
                 C114 +
             (C7754 * C123 + C7748 * C136 + C7755 * C270 + C7749 * C286 +
              C7756 * C273 + C7750 * C287 + C7757 * C1041 + C32966 * C1051) *
                 C32684) *
                C32906 +
            ((C7791 + C7792 + C7793 + C7794) * C114 +
             (C7795 + C7796 + C7797 + C7798) * C32684) *
                C32595) *
               C601 -
           (((C8303 + C8304 + C8305 + C8306) * C32684 +
             (C8307 + C8308 + C8309 + C8310) * C114) *
                C32595 +
            ((C7757 * C1723 + C32966 * C1728 + C7756 * C1178 + C7750 * C1194 +
              C7755 * C727 + C7749 * C736 + C7754 * C375 + C7748 * C391) *
                 C32684 +
             (C7757 * C1719 + C32966 * C1722 + C7756 * C1167 + C7750 * C1179 +
              C7755 * C721 + C7749 * C726 + C7754 * C361 + C7748 * C376) *
                 C114) *
                C32906) *
               C602) *
              C32630 * C481 +
          ((((C8310 + C8309 + C8308 + C8307) * C114 +
             (C8306 + C8305 + C8304 + C8303) * C32684) *
                C32906 +
            ((C7754 * C359 + C7748 * C372 + C7755 * C723 + C7749 * C730 +
              C7756 * C1165 + C7750 * C1175 + C7757 * C1721 + C32966 * C1726) *
                 C114 +
             (C7754 * C371 + C7748 * C389 + C7755 * C731 + C7749 * C738 +
              C7756 * C1174 + C7750 * C1192 + C7757 * C1727 + C32966 * C1730) *
                 C32684) *
                C32595) *
               C602 -
           (((C7799 + C7800 + C7801 + C7802) * C32684 +
             (C7803 + C7804 + C7805 + C7806) * C114) *
                C32595 +
            ((C7798 + C7797 + C7796 + C7795) * C32684 +
             (C7794 + C7793 + C7792 + C7791) * C114) *
                C32906) *
               C601) *
              C32630 * C482)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2784 * C115 + C32925 * C122 + C2785 * C256 + C32729 * C271) *
                 C114 +
             (C2784 * C123 + C32925 * C136 + C2785 * C270 + C32729 * C286) *
                 C32684) *
                C2780 +
            ((C2819 + C2820) * C114 + (C2821 + C2822) * C32684) * C2781 +
            C2843 * C2782 + C2844 * C32960) *
               C601 -
           (((C3361 + C3362) * C32684 + (C3363 + C3364) * C114) * C32960 +
            ((C3365 + C3366) * C32684 + (C3367 + C3368) * C114) * C2782 +
            ((C3369 + C3370) * C32684 + (C3371 + C3372) * C114) * C2781 +
            ((C2785 * C727 + C32729 * C736 + C2784 * C375 + C32925 * C391) *
                 C32684 +
             (C2785 * C721 + C32729 * C726 + C2784 * C361 + C32925 * C376) *
                 C114) *
                C2780) *
               C602) *
              C32630 * C481 +
          ((((C3372 + C3371) * C114 + (C3370 + C3369) * C32684) * C2780 +
            ((C3368 + C3367) * C114 + (C3366 + C3365) * C32684) * C2781 +
            ((C3364 + C3363) * C114 + (C3362 + C3361) * C32684) * C2782 +
            ((C2784 * C357 + C32925 * C368 + C2785 * C725 + C32729 * C734) *
                 C114 +
             (C2784 * C367 + C32925 * C387 + C2785 * C735 + C32729 * C740) *
                 C32684) *
                C32960) *
               C602 -
           (((C2831 + C2832) * C32684 + (C2833 + C2834) * C114) * C32960 +
            ((C2830 + C2829) * C32684 + (C2828 + C2827) * C114) * C2782 +
            ((C2826 + C2825) * C32684 + (C2824 + C2823) * C114) * C2781 +
            ((C2822 + C2821) * C32684 + (C2820 + C2819) * C114) * C2780) *
               C601) *
              C32630 * C482)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C2784 * C115 + C32925 * C122 + C2785 * C256 + C32729 * C271) *
                 C10355 +
             (C2784 * C123 + C32925 * C136 + C2785 * C270 + C32729 * C286) *
                 C10352 +
             (C4722 + C4723) * C10356 + (C4724 + C4725) * C10353 +
             C12874 * C10357 + C12875 * C32959) *
                C32906 +
            ((C2819 + C2820) * C10355 + (C2821 + C2822) * C10352 +
             C5150 * C10356 + C5151 * C10353 + C12876 * C10357 +
             C12877 * C32959) *
                C32595) *
               C601 -
           (((C12894 + C12895) * C32959 + (C12896 + C12897) * C10357 +
             C13302 * C10353 + C13303 * C10356 + C5154 * C10352 +
             C5155 * C10355) *
                C32595 +
            ((C12898 + C12899) * C32959 + (C12900 + C12901) * C10357 +
             (C4734 + C4735) * C10353 + (C4736 + C4737) * C10356 +
             (C4725 + C4724) * C10352 + (C4723 + C4722) * C10355) *
                C32906) *
               C602) *
              C32630 * C481 +
          (((C5150 * C10355 + C5151 * C10352 + C12876 * C10356 +
             C12877 * C10353 + (C12897 + C12896) * C10357 +
             (C12895 + C12894) * C32959) *
                C32906 +
            (C4391 * C10355 + C4392 * C10352 + (C4729 + C4728) * C10356 +
             (C4727 + C4726) * C10353 +
             (C2784 * C2108 + C32925 * C2115 + C2785 * C2658 + C32729 * C2663) *
                 C10357 +
             (C2784 * C2114 + C32925 * C2126 + C2785 * C2664 + C32729 * C2667) *
                 C32959) *
                C32595) *
               C602 -
           (((C4726 + C4727) * C32959 + (C4728 + C4729) * C10357 +
             C5152 * C10353 + C5153 * C10356 + (C2826 + C2825) * C10352 +
             (C2824 + C2823) * C10355) *
                C32595 +
            (C13302 * C32959 + C13303 * C10357 + C5154 * C10353 +
             C5155 * C10356 + (C2822 + C2821) * C10352 +
             (C2820 + C2819) * C10355) *
                C32906) *
               C601) *
              C32630 * C482)) /
            (p * q * std::sqrt(p + q));
    d2ee[54] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C2784 * C115 + C32925 * C122 + C2785 * C256 + C32729 * C271) *
                C114 +
            (C2784 * C123 + C32925 * C136 + C2785 * C270 + C32729 * C286) *
                C32684) *
               C2780 +
           ((C2819 + C2820) * C114 + (C2821 + C2822) * C32684) * C2781 +
           C2843 * C2782 + C2844 * C32960) *
              C32644 * C248 -
          (((C2785 * C279 + C32729 * C290 + C2784 * C264 + C32925 * C283) *
                C32684 +
            (C2785 * C260 + C32729 * C278 + C2784 * C253 + C32925 * C265) *
                C114) *
               C32960 +
           ((C2785 * C277 + C32729 * C289 + C2784 * C266 + C32925 * C284) *
                C32684 +
            (C2785 * C259 + C32729 * C276 + C2784 * C254 + C32925 * C267) *
                C114) *
               C2782 +
           ((C2785 * C275 + C32729 * C288 + C2784 * C268 + C32925 * C285) *
                C32684 +
            (C2785 * C258 + C32729 * C274 + C2784 * C255 + C32925 * C269) *
                C114) *
               C2781 +
           ((C2785 * C273 + C32729 * C287 + C2784 * C270 + C32925 * C286) *
                C32684 +
            (C2785 * C257 + C32729 * C272 + C2784 * C256 + C32925 * C271) *
                C114) *
               C2780) *
              C32644 * C249 +
          (((C2784 * C257 + C32925 * C272 + C2785 * C1033 + C32729 * C1042) *
                C114 +
            (C2784 * C273 + C32925 * C287 + C2785 * C1041 + C32729 * C1051) *
                C32684) *
               C2780 +
           ((C2784 * C258 + C32925 * C274 + C2785 * C1032 + C32729 * C1040) *
                C114 +
            (C2784 * C275 + C32925 * C288 + C2785 * C1039 + C32729 * C1050) *
                C32684) *
               C2781 +
           ((C2784 * C259 + C32925 * C276 + C2785 * C1031 + C32729 * C1038) *
                C114 +
            (C2784 * C277 + C32925 * C289 + C2785 * C1037 + C32729 * C1049) *
                C32684) *
               C2782 +
           ((C2784 * C260 + C32925 * C278 + C2785 * C1347 + C32729 * C1348) *
                C114 +
            (C2784 * C279 + C32925 * C290 + C2785 * C1349 + C32729 * C1350) *
                C32684) *
               C32960) *
              C32644 * C250) *
         C32618) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C2784 * C115 + C32925 * C122 + C2785 * C256 + C32729 * C271) *
                C114 +
            (C2784 * C123 + C32925 * C136 + C2785 * C270 + C32729 * C286) *
                C32684) *
               C2780 +
           ((C2819 + C2820) * C114 + (C2821 + C2822) * C32684) * C2781 +
           C2843 * C2782 + C2844 * C32960) *
              C32644 * C32630 * C110 -
          (((C2831 + C2832) * C32684 + (C2833 + C2834) * C114) * C32960 +
           ((C2830 + C2829) * C32684 + (C2828 + C2827) * C114) * C2782 +
           ((C2826 + C2825) * C32684 + (C2824 + C2823) * C114) * C2781 +
           ((C2822 + C2821) * C32684 + (C2820 + C2819) * C114) * C2780) *
              C32644 * C32630 * C111 +
          (C2843 * C2780 + C2844 * C2781 +
           ((C2834 + C2833) * C114 + (C2832 + C2831) * C32684) * C2782 +
           ((C2784 * C120 + C32925 * C133 + C2785 * C483 + C32729 * C484) *
                C114 +
            (C2784 * C132 + C32925 * C141 + C2785 * C485 + C32729 * C486) *
                C32684) *
               C32960) *
              C32644 * C32630 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C7754 * C115 + C7748 * C122 + C7755 * C256 + C7749 * C271 +
             C7756 * C257 + C7750 * C272 + C7757 * C1033 + C32966 * C1042) *
                C114 +
            (C7754 * C123 + C7748 * C136 + C7755 * C270 + C7749 * C286 +
             C7756 * C273 + C7750 * C287 + C7757 * C1041 + C32966 * C1051) *
                C32684) *
               C32906 +
           ((C7791 + C7792 + C7793 + C7794) * C114 +
            (C7795 + C7796 + C7797 + C7798) * C32684) *
               C32595) *
              C32644 * C32630 * C110 -
          (((C7799 + C7800 + C7801 + C7802) * C32684 +
            (C7803 + C7804 + C7805 + C7806) * C114) *
               C32595 +
           ((C7798 + C7797 + C7796 + C7795) * C32684 +
            (C7794 + C7793 + C7792 + C7791) * C114) *
               C32906) *
              C32644 * C32630 * C111 +
          (((C7806 + C7805 + C7804 + C7803) * C114 +
            (C7802 + C7801 + C7800 + C7799) * C32684) *
               C32906 +
           ((C7754 * C118 + C7748 * C128 + C7755 * C253 + C7749 * C265 +
             C7756 * C260 + C7750 * C278 + C7757 * C1347 + C32966 * C1348) *
                C114 +
            (C7754 * C129 + C7748 * C139 + C7755 * C264 + C7749 * C283 +
             C7756 * C279 + C7750 * C290 + C7757 * C1349 + C32966 * C1350) *
                C32684) *
               C32595) *
              C32644 * C32630 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C7754 * C115 + C7748 * C122 + C7755 * C256 + C7749 * C271 +
             C7756 * C257 + C7750 * C272 + C7757 * C1033 + C32966 * C1042) *
                C114 +
            (C7754 * C123 + C7748 * C136 + C7755 * C270 + C7749 * C286 +
             C7756 * C273 + C7750 * C287 + C7757 * C1041 + C32966 * C1051) *
                C32684) *
               C32906 +
           ((C7791 + C7792 + C7793 + C7794) * C114 +
            (C7795 + C7796 + C7797 + C7798) * C32684) *
               C32595) *
              C32644 * C248 -
          (((C7757 * C1046 + C32966 * C1053 + C7756 * C1039 + C7750 * C1050 +
             C7755 * C275 + C7749 * C288 + C7754 * C268 + C7748 * C285) *
                C32684 +
            (C7757 * C1035 + C32966 * C1045 + C7756 * C1032 + C7750 * C1040 +
             C7755 * C258 + C7749 * C274 + C7754 * C255 + C7748 * C269) *
                C114) *
               C32595 +
           ((C7757 * C1044 + C32966 * C1052 + C7756 * C1041 + C7750 * C1051 +
             C7755 * C273 + C7749 * C287 + C7754 * C270 + C7748 * C286) *
                C32684 +
            (C7757 * C1034 + C32966 * C1043 + C7756 * C1033 + C7750 * C1042 +
             C7755 * C257 + C7749 * C272 + C7754 * C256 + C7748 * C271) *
                C114) *
               C32906) *
              C32644 * C249 +
          (((C7754 * C257 + C7748 * C272 + C7755 * C1033 + C7749 * C1042 +
             C7756 * C1034 + C7750 * C1043 + C7757 * C6406 + C32966 * C6409) *
                C114 +
            (C7754 * C273 + C7748 * C287 + C7755 * C1041 + C7749 * C1051 +
             C7756 * C1044 + C7750 * C1052 + C7757 * C6408 + C32966 * C6412) *
                C32684) *
               C32906 +
           ((C7754 * C258 + C7748 * C274 + C7755 * C1032 + C7749 * C1040 +
             C7756 * C1035 + C7750 * C1045 + C7757 * C6570 + C32966 * C6571) *
                C114 +
            (C7754 * C275 + C7748 * C288 + C7755 * C1039 + C7749 * C1050 +
             C7756 * C1046 + C7750 * C1053 + C7757 * C6572 + C32966 * C6573) *
                C32684) *
               C32595) *
              C32644 * C250) *
         C32618) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C2784 * C115 + C32925 * C122 + C2785 * C256 + C32729 * C271) *
                C10355 +
            (C2784 * C123 + C32925 * C136 + C2785 * C270 + C32729 * C286) *
                C10352 +
            (C4722 + C4723) * C10356 + (C4724 + C4725) * C10353 +
            (C4737 + C4736) * C10357 + (C4735 + C4734) * C32959) *
               C32906 +
           ((C2819 + C2820) * C10355 + (C2821 + C2822) * C10352 +
            C5150 * C10356 + C5151 * C10353 + (C4733 + C4732) * C10357 +
            (C4731 + C4730) * C32959) *
               C32595) *
              C32644 * C32630 * C110 -
          (((C4726 + C4727) * C32959 + (C4728 + C4729) * C10357 +
            C5152 * C10353 + C5153 * C10356 + (C2826 + C2825) * C10352 +
            (C2824 + C2823) * C10355) *
               C32595 +
           ((C4730 + C4731) * C32959 + (C4732 + C4733) * C10357 +
            C5154 * C10353 + C5155 * C10356 + (C2822 + C2821) * C10352 +
            (C2820 + C2819) * C10355) *
               C32906) *
              C32644 * C32630 * C111 +
          ((C2835 * C10355 + C2836 * C10352 + C4391 * C10356 + C4392 * C10353 +
            (C4729 + C4728) * C10357 + (C4727 + C4726) * C32959) *
               C32906 +
           (C2837 * C10355 + C2838 * C10352 + (C3364 + C3363) * C10356 +
            (C3362 + C3361) * C10353 +
            (C2784 * C365 + C32925 * C383 + C2785 * C2308 + C32729 * C2309) *
                C10357 +
            (C2784 * C384 + C32925 * C395 + C2785 * C2310 + C32729 * C2311) *
                C32959) *
               C32595) *
              C32644 * C32630 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C2784 * C115 + C32925 * C122 + C2785 * C256 + C32729 * C271) *
                C10355 +
            (C2784 * C123 + C32925 * C136 + C2785 * C270 + C32729 * C286) *
                C10352 +
            (C4722 + C4723) * C10356 + (C4724 + C4725) * C10353 +
            (C4737 + C4736) * C10357 + (C4735 + C4734) * C32959) *
               C32906 +
           ((C2819 + C2820) * C10355 + (C2821 + C2822) * C10352 +
            C5150 * C10356 + C5151 * C10353 + (C4733 + C4732) * C10357 +
            (C4731 + C4730) * C32959) *
               C32595) *
              C32644 * C248 -
          (((C2785 * C1187 + C32729 * C1198 + C2784 * C1186 + C32925 * C1197) *
                C32959 +
            (C2785 * C1171 + C32729 * C1185 + C2784 * C1170 + C32925 * C1184) *
                C10357 +
            (C4952 + C4953) * C10353 + (C4954 + C4955) * C10356 +
            (C3203 + C3204) * C10352 + (C3205 + C3206) * C10355) *
               C32595 +
           ((C2785 * C1183 + C32729 * C1196 + C2784 * C1182 + C32925 * C1195) *
                C32959 +
            (C2785 * C1169 + C32729 * C1181 + C2784 * C1168 + C32925 * C1180) *
                C10357 +
            (C5361 + C5360) * C10353 + (C5359 + C5358) * C10356 +
            (C2785 * C273 + C32729 * C287 + C2784 * C270 + C32925 * C286) *
                C10352 +
            (C2785 * C257 + C32729 * C272 + C2784 * C256 + C32925 * C271) *
                C10355) *
               C32906) *
              C32644 * C249 +
          (((C2784 * C257 + C32925 * C272 + C2785 * C1033 + C32729 * C1042) *
                C10355 +
            (C2784 * C273 + C32925 * C287 + C2785 * C1041 + C32729 * C1051) *
                C10352 +
            (C2784 * C1167 + C32925 * C1179 + C2785 * C1719 + C32729 * C1722) *
                C10356 +
            (C2784 * C1178 + C32925 * C1194 + C2785 * C1723 + C32729 * C1728) *
                C10353 +
            (C2784 * C1169 + C32925 * C1181 + C2785 * C6477 + C32729 * C6481) *
                C10357 +
            (C2784 * C1183 + C32925 * C1196 + C2785 * C6483 + C32729 * C6486) *
                C32959) *
               C32906 +
           ((C2784 * C258 + C32925 * C274 + C2785 * C1032 + C32729 * C1040) *
                C10355 +
            (C2784 * C275 + C32925 * C288 + C2785 * C1039 + C32729 * C1050) *
                C10352 +
            (C2784 * C1166 + C32925 * C1177 + C2785 * C1720 + C32729 * C1724) *
                C10356 +
            (C2784 * C1176 + C32925 * C1193 + C2785 * C1725 + C32729 * C1729) *
                C10353 +
            (C2784 * C1171 + C32925 * C1185 + C2785 * C7292 + C32729 * C7293) *
                C10357 +
            (C2784 * C1187 + C32925 * C1198 + C2785 * C7294 + C32729 * C7295) *
                C32959) *
               C32595) *
              C32644 * C250) *
         C32618) /
            (p * q * std::sqrt(p + q));
    d2ee[55] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C7754 * C115 + C7748 * C122 + C7755 * C256 + C7749 * C271 +
             C7756 * C257 + C7750 * C272 + C7757 * C1033 + C32966 * C1042) *
                C3602 +
            (C7754 * C123 + C7748 * C136 + C7755 * C270 + C7749 * C286 +
             C7756 * C273 + C7750 * C287 + C7757 * C1041 + C32966 * C1051) *
                C32926 +
            (C9813 + C9814 + C9815 + C9816) * C3603 +
            (C9817 + C9818 + C9819 + C9820) * C32771) *
               C32585 * C32644 * C479 -
           ((C7757 * C6479 + C32966 * C6485 + C7756 * C1723 + C7750 * C1728 +
             C7755 * C1178 + C7749 * C1194 + C7754 * C727 + C7748 * C736) *
                C32771 +
            (C7757 * C6476 + C32966 * C6480 + C7756 * C1719 + C7750 * C1722 +
             C7755 * C1167 + C7749 * C1179 + C7754 * C721 + C7748 * C726) *
                C3603 +
            (C7757 * C1044 + C32966 * C1052 + C7756 * C1041 + C7750 * C1051 +
             C7755 * C273 + C7749 * C287 + C7754 * C270 + C7748 * C286) *
                C32926 +
            (C7757 * C1034 + C32966 * C1043 + C7756 * C1033 + C7750 * C1042 +
             C7755 * C257 + C7749 * C272 + C7754 * C256 + C7748 * C271) *
                C3602) *
               C32585 * C32644 * C480) *
              C481 +
          (((C8156 + C8155 + C8154 + C8153) * C3602 +
            (C8152 + C8151 + C8150 + C8149) * C32926 +
            (C7754 * C722 + C7748 * C728 + C7755 * C1166 + C7749 * C1177 +
             C7756 * C1720 + C7750 * C1724 + C7757 * C6656 + C32966 * C6657) *
                C3603 +
            (C7754 * C729 + C7748 * C737 + C7755 * C1176 + C7749 * C1193 +
             C7756 * C1725 + C7750 * C1729 + C7757 * C6658 + C32966 * C6659) *
                C32771) *
               C32585 * C32644 * C480 -
           ((C8303 + C8304 + C8305 + C8306) * C32771 +
            (C8307 + C8308 + C8309 + C8310) * C3603 +
            (C7798 + C7797 + C7796 + C7795) * C32926 +
            (C7794 + C7793 + C7792 + C7791) * C3602) *
               C32585 * C32644 * C479) *
              C482)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2784 * C115 + C32925 * C122 + C2785 * C256 + C32729 * C271) *
                 C3602 +
             (C2784 * C123 + C32925 * C136 + C2785 * C270 + C32729 * C286) *
                 C32926 +
             (C4722 + C4723) * C3603 + (C4724 + C4725) * C32771) *
                C854 +
            ((C2819 + C2820) * C3602 + (C2821 + C2822) * C32926 +
             (C3372 + C3371) * C3603 + (C3370 + C3369) * C32771) *
                C855 +
            C4397 * C32945) *
               C32644 * C479 -
           (((C4948 + C4949) * C32771 + (C4950 + C4951) * C3603 +
             (C3199 + C3200) * C32926 + (C3201 + C3202) * C3602) *
                C32945 +
            ((C4952 + C4953) * C32771 + (C4954 + C4955) * C3603 +
             (C3203 + C3204) * C32926 + (C3205 + C3206) * C3602) *
                C855 +
            ((C2785 * C1178 + C32729 * C1194 + C2784 * C727 + C32925 * C736) *
                 C32771 +
             (C2785 * C1167 + C32729 * C1179 + C2784 * C721 + C32925 * C726) *
                 C3603 +
             (C2785 * C273 + C32729 * C287 + C2784 * C270 + C32925 * C286) *
                 C32926 +
             (C2785 * C257 + C32729 * C272 + C2784 * C256 + C32925 * C271) *
                 C3602) *
                C854) *
               C32644 * C480) *
              C481 +
          ((((C3206 + C3205) * C3602 + (C3204 + C3203) * C32926 +
             (C4955 + C4954) * C3603 + (C4953 + C4952) * C32771) *
                C854 +
            ((C3202 + C3201) * C3602 + (C3200 + C3199) * C32926 +
             (C4951 + C4950) * C3603 + (C4949 + C4948) * C32771) *
                C855 +
            ((C3198 + C3197) * C3602 + (C3196 + C3195) * C32926 +
             (C2784 * C724 + C32925 * C732 + C2785 * C1533 + C32729 * C1534) *
                 C3603 +
             (C2784 * C733 + C32925 * C739 + C2785 * C1535 + C32729 * C1536) *
                 C32771) *
                C32945) *
               C32644 * C480 -
           (((C3361 + C3362) * C32771 + (C3363 + C3364) * C3603 +
             (C2830 + C2829) * C32926 + (C2828 + C2827) * C3602) *
                C32945 +
            ((C3365 + C3366) * C32771 + (C3367 + C3368) * C3603 +
             (C2826 + C2825) * C32926 + (C2824 + C2823) * C3602) *
                C855 +
            ((C3369 + C3370) * C32771 + (C3371 + C3372) * C3603 +
             (C2822 + C2821) * C32926 + (C2820 + C2819) * C3602) *
                C854) *
               C32644 * C479) *
              C482)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C2784 * C115 + C32925 * C122 + C2785 * C256 + C32729 * C271) *
                C13611 +
            (C2784 * C123 + C32925 * C136 + C2785 * C270 + C32729 * C286) *
                C13607 +
            (C4722 + C4723) * C13612 + (C4724 + C4725) * C13608 +
            C12874 * C13613 + C12875 * C13609 + C14534 * C13614 +
            C14535 * C32972) *
               C32585 * C32644 * C479 -
           ((C2785 * C7079 + C32729 * C7085 + C2784 * C2660 + C32925 * C2665) *
                C32972 +
            (C2785 * C7076 + C32729 * C7080 + C2784 * C2656 + C32925 * C2659) *
                C13614 +
            (C13509 + C13508) * C13609 + (C13507 + C13506) * C13613 +
            (C5361 + C5360) * C13608 + (C5359 + C5358) * C13612 +
            (C2785 * C273 + C32729 * C287 + C2784 * C270 + C32925 * C286) *
                C13607 +
            (C2785 * C257 + C32729 * C272 + C2784 * C256 + C32925 * C271) *
                C13611) *
               C32585 * C32644 * C480) *
              C481 +
          (((C3206 + C3205) * C13611 + (C3204 + C3203) * C13607 +
            (C4955 + C4954) * C13612 + (C4953 + C4952) * C13608 +
            (C13107 + C13106) * C13613 + (C13105 + C13104) * C13609 +
            (C2784 * C2657 + C32925 * C2661 + C2785 * C7442 + C32729 * C7443) *
                C13614 +
            (C2784 * C2662 + C32925 * C2666 + C2785 * C7444 + C32729 * C7445) *
                C32972) *
               C32585 * C32644 * C480 -
           ((C12894 + C12895) * C32972 + (C12896 + C12897) * C13614 +
            C13302 * C13609 + C13303 * C13613 + C5154 * C13608 +
            C5155 * C13612 + (C2822 + C2821) * C13607 +
            (C2820 + C2819) * C13611) *
               C32585 * C32644 * C479) *
              C482)) /
            (p * q * std::sqrt(p + q));
    d2ee[56] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C7754 * C115 + C7748 * C122 + C7755 * C256 + C7749 * C271 +
             C7756 * C257 + C7750 * C272 + C7757 * C1033 + C32966 * C1042) *
                C3602 +
            (C7754 * C123 + C7748 * C136 + C7755 * C270 + C7749 * C286 +
             C7756 * C273 + C7750 * C287 + C7757 * C1041 + C32966 * C1051) *
                C32926 +
            (C9813 + C9814 + C9815 + C9816) * C3603 +
            (C9817 + C9818 + C9819 + C9820) * C32771) *
               C32585 * C601 -
           ((C9821 + C9822 + C9823 + C9824) * C32771 +
            (C9825 + C9826 + C9827 + C9828) * C3603 +
            (C9820 + C9819 + C9818 + C9817) * C32926 +
            (C9816 + C9815 + C9814 + C9813) * C3602) *
               C32585 * C602) *
              C479 +
          (((C10235 + C10236 + C10237 + C10238) * C3602 +
            (C10239 + C10240 + C10241 + C10242) * C32926 +
            (C7754 * C1168 + C7748 * C1180 + C7755 * C1169 + C7749 * C1181 +
             C7756 * C6477 + C7750 * C6481 + C7757 * C6478 + C32966 * C6482) *
                C3603 +
            (C7754 * C1182 + C7748 * C1195 + C7755 * C1183 + C7749 * C1196 +
             C7756 * C6483 + C7750 * C6486 + C7757 * C6484 + C32966 * C6487) *
                C32771) *
               C32585 * C602 -
           ((C10242 + C10241 + C10240 + C10239) * C32771 +
            (C10238 + C10237 + C10236 + C10235) * C3603 +
            (C7757 * C1044 + C32966 * C1052 + C7756 * C1041 + C7750 * C1051 +
             C7755 * C273 + C7749 * C287 + C7754 * C270 + C7748 * C286) *
                C32926 +
            (C7757 * C1034 + C32966 * C1043 + C7756 * C1033 + C7750 * C1042 +
             C7755 * C257 + C7749 * C272 + C7754 * C256 + C7748 * C271) *
                C3602) *
               C32585 * C601) *
              C480) *
         C32618) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2784 * C115 + C32925 * C122 + C2785 * C256 + C32729 * C271) *
                 C3602 +
             (C2784 * C123 + C32925 * C136 + C2785 * C270 + C32729 * C286) *
                 C32926 +
             (C4722 + C4723) * C3603 + (C4724 + C4725) * C32771) *
                C854 +
            ((C2819 + C2820) * C3602 + (C2821 + C2822) * C32926 +
             C5150 * C3603 + C5151 * C32771) *
                C855 +
            C4397 * C32945) *
               C601 -
           (((C4726 + C4727) * C32771 + (C4728 + C4729) * C3603 +
             C5152 * C32926 + C5153 * C3602) *
                C32945 +
            ((C4730 + C4731) * C32771 + (C4732 + C4733) * C3603 +
             C5154 * C32926 + C5155 * C3602) *
                C855 +
            ((C4734 + C4735) * C32771 + (C4736 + C4737) * C3603 +
             (C4725 + C4724) * C32926 + (C4723 + C4722) * C3602) *
                C854) *
               C602) *
              C479 +
          ((((C5358 + C5359) * C3602 + (C5360 + C5361) * C32926 +
             (C2784 * C1168 + C32925 * C1180 + C2785 * C1169 + C32729 * C1181) *
                 C3603 +
             (C2784 * C1182 + C32925 * C1195 + C2785 * C1183 + C32729 * C1196) *
                 C32771) *
                C854 +
            ((C4955 + C4954) * C3602 + (C4953 + C4952) * C32926 +
             (C2784 * C1170 + C32925 * C1184 + C2785 * C1171 + C32729 * C1185) *
                 C3603 +
             (C2784 * C1186 + C32925 * C1197 + C2785 * C1187 + C32729 * C1198) *
                 C32771) *
                C855 +
            ((C4951 + C4950) * C3602 + (C4949 + C4948) * C32926 +
             (C2784 * C1172 + C32925 * C1188 + C2785 * C1173 + C32729 * C1189) *
                 C3603 +
             (C2784 * C1190 + C32925 * C1199 + C2785 * C1191 + C32729 * C1200) *
                 C32771) *
                C32945) *
               C602 -
           (((C4948 + C4949) * C32771 + (C4950 + C4951) * C3603 +
             (C3199 + C3200) * C32926 + (C3201 + C3202) * C3602) *
                C32945 +
            ((C4952 + C4953) * C32771 + (C4954 + C4955) * C3603 +
             (C3203 + C3204) * C32926 + (C3205 + C3206) * C3602) *
                C855 +
            ((C5361 + C5360) * C32771 + (C5359 + C5358) * C3603 +
             (C2785 * C273 + C32729 * C287 + C2784 * C270 + C32925 * C286) *
                 C32926 +
             (C2785 * C257 + C32729 * C272 + C2784 * C256 + C32925 * C271) *
                 C3602) *
                C854) *
               C601) *
              C480) *
         C32618) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C2784 * C115 + C32925 * C122 + C2785 * C256 + C32729 * C271) *
                C13611 +
            (C2784 * C123 + C32925 * C136 + C2785 * C270 + C32729 * C286) *
                C13607 +
            (C4722 + C4723) * C13612 + (C4724 + C4725) * C13608 +
            C12874 * C13613 + C12875 * C13609 + C14534 * C13614 +
            C14535 * C32972) *
               C32585 * C601 -
           ((C14544 + C14545) * C32972 + (C14546 + C14547) * C13614 +
            (C12898 + C12899) * C13609 + (C12900 + C12901) * C13613 +
            (C4734 + C4735) * C13608 + (C4736 + C4737) * C13612 +
            (C4725 + C4724) * C13607 + (C4723 + C4722) * C13611) *
               C32585 * C602) *
              C479 +
          (((C5358 + C5359) * C13611 + (C5360 + C5361) * C13607 +
            (C13506 + C13507) * C13612 + (C13508 + C13509) * C13608 +
            (C14946 + C14947) * C13613 + (C14948 + C14949) * C13609 +
            (C2784 * C7077 + C32925 * C7081 + C2785 * C7078 + C32729 * C7082) *
                C13614 +
            (C2784 * C7083 + C32925 * C7086 + C2785 * C7084 + C32729 * C7087) *
                C32972) *
               C32585 * C602 -
           ((C14949 + C14948) * C32972 + (C14947 + C14946) * C13614 +
            (C13509 + C13508) * C13609 + (C13507 + C13506) * C13613 +
            (C5361 + C5360) * C13608 + (C5359 + C5358) * C13612 +
            (C2785 * C273 + C32729 * C287 + C2784 * C270 + C32925 * C286) *
                C13607 +
            (C2785 * C257 + C32729 * C272 + C2784 * C256 + C32925 * C271) *
                C13611) *
               C32585 * C601) *
              C480) *
         C32618) /
            (p * q * std::sqrt(p + q));
    d2ee[57] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C2784 * C115 + C32925 * C122 + C2785 * C256 + C32729 * C271) *
                    C3602 +
                (C2784 * C123 + C32925 * C136 + C2785 * C270 + C32729 * C286) *
                    C32926 +
                (C2784 * C361 + C32925 * C376 + C2785 * C721 + C32729 * C726) *
                    C3603 +
                (C2784 * C375 + C32925 * C391 + C2785 * C727 + C32729 * C736) *
                    C32771) *
                   C854 +
               ((C2819 + C2820) * C3602 + (C2821 + C2822) * C32926 +
                (C3372 + C3371) * C3603 + (C3370 + C3369) * C32771) *
                   C855 +
               C4397 * C32945) *
                  C32644 * C32630 * C110 -
              (((C3361 + C3362) * C32771 + (C3363 + C3364) * C3603 +
                (C2830 + C2829) * C32926 + (C2828 + C2827) * C3602) *
                   C32945 +
               ((C3365 + C3366) * C32771 + (C3367 + C3368) * C3603 +
                (C2826 + C2825) * C32926 + (C2824 + C2823) * C3602) *
                   C855 +
               ((C3369 + C3370) * C32771 + (C3371 + C3372) * C3603 +
                (C2822 + C2821) * C32926 + (C2820 + C2819) * C3602) *
                   C854) *
                  C32644 * C32630 * C111 +
              (C4397 * C854 +
               (C2837 * C3602 + C2838 * C32926 + (C3364 + C3363) * C3603 +
                (C3362 + C3361) * C32771) *
                   C855 +
               ((C2834 + C2833) * C3602 + (C2832 + C2831) * C32926 +
                (C2784 * C357 + C32925 * C368 + C2785 * C725 + C32729 * C734) *
                    C3603 +
                (C2784 * C367 + C32925 * C387 + C2785 * C735 + C32729 * C740) *
                    C32771) *
                   C32945) *
                  C32644 * C32630 * C112) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C2784 * C115 + C32925 * C122 + C2785 * C256 + C32729 * C271) *
                    C3602 +
                (C2784 * C123 + C32925 * C136 + C2785 * C270 + C32729 * C286) *
                    C32926 +
                (C2784 * C361 + C32925 * C376 + C2785 * C721 + C32729 * C726) *
                    C3603 +
                (C2784 * C375 + C32925 * C391 + C2785 * C727 + C32729 * C736) *
                    C32771) *
                   C854 +
               ((C2819 + C2820) * C3602 + (C2821 + C2822) * C32926 +
                (C3372 + C3371) * C3603 + (C3370 + C3369) * C32771) *
                   C855 +
               C4397 * C32945) *
                  C32644 * C248 -
              (((C2785 * C1174 + C32729 * C1192 + C2784 * C731 +
                 C32925 * C738) *
                    C32771 +
                (C2785 * C1165 + C32729 * C1175 + C2784 * C723 +
                 C32925 * C730) *
                    C3603 +
                (C3199 + C3200) * C32926 + (C3201 + C3202) * C3602) *
                   C32945 +
               ((C2785 * C1176 + C32729 * C1193 + C2784 * C729 +
                 C32925 * C737) *
                    C32771 +
                (C2785 * C1166 + C32729 * C1177 + C2784 * C722 +
                 C32925 * C728) *
                    C3603 +
                (C3203 + C3204) * C32926 + (C3205 + C3206) * C3602) *
                   C855 +
               ((C2785 * C1178 + C32729 * C1194 + C2784 * C727 +
                 C32925 * C736) *
                    C32771 +
                (C2785 * C1167 + C32729 * C1179 + C2784 * C721 +
                 C32925 * C726) *
                    C3603 +
                (C2785 * C273 + C32729 * C287 + C2784 * C270 + C32925 * C286) *
                    C32926 +
                (C2785 * C257 + C32729 * C272 + C2784 * C256 + C32925 * C271) *
                    C3602) *
                   C854) *
                  C32644 * C249 +
              (((C2784 * C257 + C32925 * C272 + C2785 * C1033 +
                 C32729 * C1042) *
                    C3602 +
                (C2784 * C273 + C32925 * C287 + C2785 * C1041 +
                 C32729 * C1051) *
                    C32926 +
                (C2784 * C1167 + C32925 * C1179 + C2785 * C1719 +
                 C32729 * C1722) *
                    C3603 +
                (C2784 * C1178 + C32925 * C1194 + C2785 * C1723 +
                 C32729 * C1728) *
                    C32771) *
                   C854 +
               ((C2784 * C258 + C32925 * C274 + C2785 * C1032 +
                 C32729 * C1040) *
                    C3602 +
                (C2784 * C275 + C32925 * C288 + C2785 * C1039 +
                 C32729 * C1050) *
                    C32926 +
                (C2784 * C1166 + C32925 * C1177 + C2785 * C1720 +
                 C32729 * C1724) *
                    C3603 +
                (C2784 * C1176 + C32925 * C1193 + C2785 * C1725 +
                 C32729 * C1729) *
                    C32771) *
                   C855 +
               ((C2784 * C259 + C32925 * C276 + C2785 * C1031 +
                 C32729 * C1038) *
                    C3602 +
                (C2784 * C277 + C32925 * C289 + C2785 * C1037 +
                 C32729 * C1049) *
                    C32926 +
                (C2784 * C1165 + C32925 * C1175 + C2785 * C1721 +
                 C32729 * C1726) *
                    C3603 +
                (C2784 * C1174 + C32925 * C1192 + C2785 * C1727 +
                 C32729 * C1730) *
                    C32771) *
                   C32945) *
                  C32644 * C250) *
             C32618) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2784 * C115 + C32925 * C122 + C2785 * C256 + C32729 * C271) *
                C3602 +
            (C2784 * C123 + C32925 * C136 + C2785 * C270 + C32729 * C286) *
                C32926 +
            (C4722 + C4723) * C3603 + (C4724 + C4725) * C32771) *
               C854 +
           ((C2819 + C2820) * C3602 + (C2821 + C2822) * C32926 +
            (C3372 + C3371) * C3603 + (C3370 + C3369) * C32771) *
               C855 +
           C4397 * C32945) *
              C354 -
          (((C4726 + C4727) * C32771 + (C4728 + C4729) * C3603 +
            (C3365 + C3366) * C32926 + (C3367 + C3368) * C3602) *
               C32945 +
           ((C4730 + C4731) * C32771 + (C4732 + C4733) * C3603 +
            (C3369 + C3370) * C32926 + (C3371 + C3372) * C3602) *
               C855 +
           ((C4734 + C4735) * C32771 + (C4736 + C4737) * C3603 +
            (C4725 + C4724) * C32926 + (C4723 + C4722) * C3602) *
               C854) *
              C355 +
          (((C4737 + C4736) * C3602 + (C4735 + C4734) * C32926 +
            (C2784 * C2110 + C32925 * C2119 + C2785 * C2656 + C32729 * C2659) *
                C3603 +
            (C2784 * C2118 + C32925 * C2128 + C2785 * C2660 + C32729 * C2665) *
                C32771) *
               C854 +
           ((C4733 + C4732) * C3602 + (C4731 + C4730) * C32926 +
            (C2784 * C2109 + C32925 * C2117 + C2785 * C2657 + C32729 * C2661) *
                C3603 +
            (C2784 * C2116 + C32925 * C2127 + C2785 * C2662 + C32729 * C2666) *
                C32771) *
               C855 +
           ((C4729 + C4728) * C3602 + (C4727 + C4726) * C32926 +
            (C2784 * C2108 + C32925 * C2115 + C2785 * C2658 + C32729 * C2663) *
                C3603 +
            (C2784 * C2114 + C32925 * C2126 + C2785 * C2664 + C32729 * C2667) *
                C32771) *
               C32945) *
              C356) *
         C32630 * C32618) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C7754 * C115 + C7748 * C122 + C7755 * C256 + C7749 * C271 +
            C7756 * C257 + C7750 * C272 + C7757 * C1033 + C32966 * C1042) *
               C3602 +
           (C7754 * C123 + C7748 * C136 + C7755 * C270 + C7749 * C286 +
            C7756 * C273 + C7750 * C287 + C7757 * C1041 + C32966 * C1051) *
               C32926 +
           (C7754 * C361 + C7748 * C376 + C7755 * C721 + C7749 * C726 +
            C7756 * C1167 + C7750 * C1179 + C7757 * C1719 + C32966 * C1722) *
               C3603 +
           (C7754 * C375 + C7748 * C391 + C7755 * C727 + C7749 * C736 +
            C7756 * C1178 + C7750 * C1194 + C7757 * C1723 + C32966 * C1728) *
               C32771) *
              C32585 * C32644 * C32630 * C110 -
          ((C8303 + C8304 + C8305 + C8306) * C32771 +
           (C8307 + C8308 + C8309 + C8310) * C3603 +
           (C7798 + C7797 + C7796 + C7795) * C32926 +
           (C7794 + C7793 + C7792 + C7791) * C3602) *
              C32585 * C32644 * C32630 * C111 +
          ((C7806 + C7805 + C7804 + C7803) * C3602 +
           (C7802 + C7801 + C7800 + C7799) * C32926 +
           (C7754 * C359 + C7748 * C372 + C7755 * C723 + C7749 * C730 +
            C7756 * C1165 + C7750 * C1175 + C7757 * C1721 + C32966 * C1726) *
               C3603 +
           (C7754 * C371 + C7748 * C389 + C7755 * C731 + C7749 * C738 +
            C7756 * C1174 + C7750 * C1192 + C7757 * C1727 + C32966 * C1730) *
               C32771) *
              C32585 * C32644 * C32630 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C7754 * C115 + C7748 * C122 + C7755 * C256 + C7749 * C271 +
            C7756 * C257 + C7750 * C272 + C7757 * C1033 + C32966 * C1042) *
               C3602 +
           (C7754 * C123 + C7748 * C136 + C7755 * C270 + C7749 * C286 +
            C7756 * C273 + C7750 * C287 + C7757 * C1041 + C32966 * C1051) *
               C32926 +
           (C7754 * C361 + C7748 * C376 + C7755 * C721 + C7749 * C726 +
            C7756 * C1167 + C7750 * C1179 + C7757 * C1719 + C32966 * C1722) *
               C3603 +
           (C7754 * C375 + C7748 * C391 + C7755 * C727 + C7749 * C736 +
            C7756 * C1178 + C7750 * C1194 + C7757 * C1723 + C32966 * C1728) *
               C32771) *
              C32585 * C32644 * C248 -
          ((C7757 * C6479 + C32966 * C6485 + C7756 * C1723 + C7750 * C1728 +
            C7755 * C1178 + C7749 * C1194 + C7754 * C727 + C7748 * C736) *
               C32771 +
           (C7757 * C6476 + C32966 * C6480 + C7756 * C1719 + C7750 * C1722 +
            C7755 * C1167 + C7749 * C1179 + C7754 * C721 + C7748 * C726) *
               C3603 +
           (C7757 * C1044 + C32966 * C1052 + C7756 * C1041 + C7750 * C1051 +
            C7755 * C273 + C7749 * C287 + C7754 * C270 + C7748 * C286) *
               C32926 +
           (C7757 * C1034 + C32966 * C1043 + C7756 * C1033 + C7750 * C1042 +
            C7755 * C257 + C7749 * C272 + C7754 * C256 + C7748 * C271) *
               C3602) *
              C32585 * C32644 * C249 +
          ((C7754 * C257 + C7748 * C272 + C7755 * C1033 + C7749 * C1042 +
            C7756 * C1034 + C7750 * C1043 + C7757 * C6406 + C32966 * C6409) *
               C3602 +
           (C7754 * C273 + C7748 * C287 + C7755 * C1041 + C7749 * C1051 +
            C7756 * C1044 + C7750 * C1052 + C7757 * C6408 + C32966 * C6412) *
               C32926 +
           (C7754 * C1167 + C7748 * C1179 + C7755 * C1719 + C7749 * C1722 +
            C7756 * C6476 + C7750 * C6480 + C7757 * C6742 + C32966 * C6743) *
               C3603 +
           (C7754 * C1178 + C7748 * C1194 + C7755 * C1723 + C7749 * C1728 +
            C7756 * C6479 + C7750 * C6485 + C7757 * C6744 + C32966 * C6745) *
               C32771) *
              C32585 * C32644 * C250) *
         C32618) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C7754 * C115 + C7748 * C122 + C7755 * C256 + C7749 * C271 +
            C7756 * C257 + C7750 * C272 + C7757 * C1033 + C32966 * C1042) *
               C3602 +
           (C7754 * C123 + C7748 * C136 + C7755 * C270 + C7749 * C286 +
            C7756 * C273 + C7750 * C287 + C7757 * C1041 + C32966 * C1051) *
               C32926 +
           (C9813 + C9814 + C9815 + C9816) * C3603 +
           (C9817 + C9818 + C9819 + C9820) * C32771) *
              C32585 * C354 -
          ((C9821 + C9822 + C9823 + C9824) * C32771 +
           (C9825 + C9826 + C9827 + C9828) * C3603 +
           (C9820 + C9819 + C9818 + C9817) * C32926 +
           (C9816 + C9815 + C9814 + C9813) * C3602) *
              C32585 * C355 +
          ((C9828 + C9827 + C9826 + C9825) * C3602 +
           (C9824 + C9823 + C9822 + C9821) * C32926 +
           (C7754 * C2110 + C7748 * C2119 + C7755 * C2656 + C7749 * C2659 +
            C7756 * C7076 + C7750 * C7080 + C7757 * C7610 + C32966 * C7611) *
               C3603 +
           (C7754 * C2118 + C7748 * C2128 + C7755 * C2660 + C7749 * C2665 +
            C7756 * C7079 + C7750 * C7085 + C7757 * C7612 + C32966 * C7613) *
               C32771) *
              C32585 * C356) *
         C32630 * C32618) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C2784 * C115 + C32925 * C122 + C2785 * C256 + C32729 * C271) *
               C13611 +
           (C2784 * C123 + C32925 * C136 + C2785 * C270 + C32729 * C286) *
               C13607 +
           (C4722 + C4723) * C13612 + (C4724 + C4725) * C13608 +
           C12874 * C13613 + C12875 * C13609 + (C12901 + C12900) * C13614 +
           (C12899 + C12898) * C32972) *
              C32585 * C32644 * C32630 * C110 -
          ((C12894 + C12895) * C32972 + (C12896 + C12897) * C13614 +
           C13302 * C13609 + C13303 * C13613 + C5154 * C13608 + C5155 * C13612 +
           (C2822 + C2821) * C13607 + (C2820 + C2819) * C13611) *
              C32585 * C32644 * C32630 * C111 +
          (C2835 * C13611 + C2836 * C13607 + C4391 * C13612 + C4392 * C13608 +
           (C4729 + C4728) * C13613 + (C4727 + C4726) * C13609 +
           (C2784 * C2108 + C32925 * C2115 + C2785 * C2658 + C32729 * C2663) *
               C13614 +
           (C2784 * C2114 + C32925 * C2126 + C2785 * C2664 + C32729 * C2667) *
               C32972) *
              C32585 * C32644 * C32630 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C2784 * C115 + C32925 * C122 + C2785 * C256 + C32729 * C271) *
               C13611 +
           (C2784 * C123 + C32925 * C136 + C2785 * C270 + C32729 * C286) *
               C13607 +
           (C4722 + C4723) * C13612 + (C4724 + C4725) * C13608 +
           C12874 * C13613 + C12875 * C13609 + (C12901 + C12900) * C13614 +
           (C12899 + C12898) * C32972) *
              C32585 * C32644 * C248 -
          ((C2785 * C7079 + C32729 * C7085 + C2784 * C2660 + C32925 * C2665) *
               C32972 +
           (C2785 * C7076 + C32729 * C7080 + C2784 * C2656 + C32925 * C2659) *
               C13614 +
           (C13509 + C13508) * C13609 + (C13507 + C13506) * C13613 +
           (C5361 + C5360) * C13608 + (C5359 + C5358) * C13612 +
           (C2785 * C273 + C32729 * C287 + C2784 * C270 + C32925 * C286) *
               C13607 +
           (C2785 * C257 + C32729 * C272 + C2784 * C256 + C32925 * C271) *
               C13611) *
              C32585 * C32644 * C249 +
          ((C2784 * C257 + C32925 * C272 + C2785 * C1033 + C32729 * C1042) *
               C13611 +
           (C2784 * C273 + C32925 * C287 + C2785 * C1041 + C32729 * C1051) *
               C13607 +
           (C2784 * C1167 + C32925 * C1179 + C2785 * C1719 + C32729 * C1722) *
               C13612 +
           (C2784 * C1178 + C32925 * C1194 + C2785 * C1723 + C32729 * C1728) *
               C13608 +
           (C2784 * C1169 + C32925 * C1181 + C2785 * C6477 + C32729 * C6481) *
               C13613 +
           (C2784 * C1183 + C32925 * C1196 + C2785 * C6483 + C32729 * C6486) *
               C13609 +
           (C2784 * C7076 + C32925 * C7080 + C2785 * C7610 + C32729 * C7611) *
               C13614 +
           (C2784 * C7079 + C32925 * C7085 + C2785 * C7612 + C32729 * C7613) *
               C32972) *
              C32585 * C32644 * C250) *
         C32618) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C2784 * C115 + C32925 * C122 + C2785 * C256 + C32729 * C271) *
               C13611 +
           (C2784 * C123 + C32925 * C136 + C2785 * C270 + C32729 * C286) *
               C13607 +
           (C4722 + C4723) * C13612 + (C4724 + C4725) * C13608 +
           C12874 * C13613 + C12875 * C13609 + C14534 * C13614 +
           C14535 * C32972) *
              C32585 * C354 -
          ((C14544 + C14545) * C32972 + (C14546 + C14547) * C13614 +
           (C12898 + C12899) * C13609 + (C12900 + C12901) * C13613 +
           (C4734 + C4735) * C13608 + (C4736 + C4737) * C13612 +
           (C4725 + C4724) * C13607 + (C4723 + C4722) * C13611) *
              C32585 * C355 +
          (C12874 * C13611 + C12875 * C13607 + C14534 * C13612 +
           C14535 * C13608 + (C14547 + C14546) * C13613 +
           (C14545 + C14544) * C13609 +
           (C2784 * C12139 + C32925 * C12142 + C2785 * C12419 +
            C32729 * C12420) *
               C13614 +
           (C2784 * C12141 + C32925 * C12145 + C2785 * C12421 +
            C32729 * C12422) *
               C32972) *
              C32585 * C356) *
         C32630 * C32618) /
            (p * q * std::sqrt(p + q));
    d2ee[58] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C7754 * C115 + C7748 * C122 + C7755 * C256 + C7749 * C271 +
             C7756 * C257 + C7750 * C272 + C7757 * C1033 + C32966 * C1042) *
                C3602 +
            (C7754 * C123 + C7748 * C136 + C7755 * C270 + C7749 * C286 +
             C7756 * C273 + C7750 * C287 + C7757 * C1041 + C32966 * C1051) *
                C32926 +
            (C9813 + C9814 + C9815 + C9816) * C3603 +
            (C9817 + C9818 + C9819 + C9820) * C32771) *
               C32585 * C601 -
           ((C9821 + C9822 + C9823 + C9824) * C32771 +
            (C9825 + C9826 + C9827 + C9828) * C3603 +
            (C9820 + C9819 + C9818 + C9817) * C32926 +
            (C9816 + C9815 + C9814 + C9813) * C3602) *
               C32585 * C602) *
              C32630 * C481 +
          (((C8310 + C8309 + C8308 + C8307) * C3602 +
            (C8306 + C8305 + C8304 + C8303) * C32926 +
            (C7754 * C363 + C7748 * C379 + C7755 * C1170 + C7749 * C1184 +
             C7756 * C1171 + C7750 * C1185 + C7757 * C7292 + C32966 * C7293) *
                C3603 +
            (C7754 * C380 + C7748 * C393 + C7755 * C1186 + C7749 * C1197 +
             C7756 * C1187 + C7750 * C1198 + C7757 * C7294 + C32966 * C7295) *
                C32771) *
               C32585 * C602 -
           ((C8303 + C8304 + C8305 + C8306) * C32771 +
            (C8307 + C8308 + C8309 + C8310) * C3603 +
            (C7798 + C7797 + C7796 + C7795) * C32926 +
            (C7794 + C7793 + C7792 + C7791) * C3602) *
               C32585 * C601) *
              C32630 * C482)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2784 * C115 + C32925 * C122 + C2785 * C256 + C32729 * C271) *
                 C3602 +
             (C2784 * C123 + C32925 * C136 + C2785 * C270 + C32729 * C286) *
                 C32926 +
             (C4722 + C4723) * C3603 + (C4724 + C4725) * C32771) *
                C854 +
            ((C2819 + C2820) * C3602 + (C2821 + C2822) * C32926 +
             C5150 * C3603 + C5151 * C32771) *
                C855 +
            C4397 * C32945) *
               C601 -
           (((C4726 + C4727) * C32771 + (C4728 + C4729) * C3603 +
             C5152 * C32926 + C5153 * C3602) *
                C32945 +
            ((C4730 + C4731) * C32771 + (C4732 + C4733) * C3603 +
             C5154 * C32926 + C5155 * C3602) *
                C855 +
            ((C4734 + C4735) * C32771 + (C4736 + C4737) * C3603 +
             (C4725 + C4724) * C32926 + (C4723 + C4722) * C3602) *
                C854) *
               C602) *
              C32630 * C481 +
          (((C5150 * C3602 + C5151 * C32926 + (C4733 + C4732) * C3603 +
             (C4731 + C4730) * C32771) *
                C854 +
            (C4391 * C3602 + C4392 * C32926 + (C4729 + C4728) * C3603 +
             (C4727 + C4726) * C32771) *
                C855 +
            ((C3364 + C3363) * C3602 + (C3362 + C3361) * C32926 +
             (C2784 * C365 + C32925 * C383 + C2785 * C2308 + C32729 * C2309) *
                 C3603 +
             (C2784 * C384 + C32925 * C395 + C2785 * C2310 + C32729 * C2311) *
                 C32771) *
                C32945) *
               C602 -
           (((C3361 + C3362) * C32771 + (C3363 + C3364) * C3603 +
             (C2830 + C2829) * C32926 + (C2828 + C2827) * C3602) *
                C32945 +
            (C5152 * C32771 + C5153 * C3603 + (C2826 + C2825) * C32926 +
             (C2824 + C2823) * C3602) *
                C855 +
            (C5154 * C32771 + C5155 * C3603 + (C2822 + C2821) * C32926 +
             (C2820 + C2819) * C3602) *
                C854) *
               C601) *
              C32630 * C482)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C2784 * C115 + C32925 * C122 + C2785 * C256 + C32729 * C271) *
                C13611 +
            (C2784 * C123 + C32925 * C136 + C2785 * C270 + C32729 * C286) *
                C13607 +
            (C4722 + C4723) * C13612 + (C4724 + C4725) * C13608 +
            C12874 * C13613 + C12875 * C13609 + C14534 * C13614 +
            C14535 * C32972) *
               C32585 * C601 -
           ((C14544 + C14545) * C32972 + (C14546 + C14547) * C13614 +
            (C12898 + C12899) * C13609 + (C12900 + C12901) * C13613 +
            (C4734 + C4735) * C13608 + (C4736 + C4737) * C13612 +
            (C4725 + C4724) * C13607 + (C4723 + C4722) * C13611) *
               C32585 * C602) *
              C32630 * C481 +
          ((C5150 * C13611 + C5151 * C13607 + C12876 * C13612 +
            C12877 * C13608 + (C12897 + C12896) * C13613 +
            (C12895 + C12894) * C13609 +
            (C2784 * C2112 + C32925 * C2122 + C2785 * C12241 +
             C32729 * C12242) *
                C13614 +
            (C2784 * C2123 + C32925 * C2130 + C2785 * C12243 +
             C32729 * C12244) *
                C32972) *
               C32585 * C602 -
           ((C12894 + C12895) * C32972 + (C12896 + C12897) * C13614 +
            C13302 * C13609 + C13303 * C13613 + C5154 * C13608 +
            C5155 * C13612 + (C2822 + C2821) * C13607 +
            (C2820 + C2819) * C13611) *
               C32585 * C601) *
              C32630 * C482)) /
            (p * q * std::sqrt(p + q));
    d2ee[59] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C2784 * C115 + C32925 * C122 + C2785 * C256 + C32729 * C271) *
                C3602 +
            (C2784 * C123 + C32925 * C136 + C2785 * C270 + C32729 * C286) *
                C32926 +
            (C2784 * C361 + C32925 * C376 + C2785 * C721 + C32729 * C726) *
                C3603 +
            (C2784 * C375 + C32925 * C391 + C2785 * C727 + C32729 * C736) *
                C32771) *
               C854 +
           ((C2819 + C2820) * C3602 + (C2821 + C2822) * C32926 +
            (C3372 + C3371) * C3603 + (C3370 + C3369) * C32771) *
               C855 +
           C4397 * C32945) *
              C32644 * C248 -
          (((C2785 * C1174 + C32729 * C1192 + C2784 * C731 + C32925 * C738) *
                C32771 +
            (C2785 * C1165 + C32729 * C1175 + C2784 * C723 + C32925 * C730) *
                C3603 +
            (C3199 + C3200) * C32926 + (C3201 + C3202) * C3602) *
               C32945 +
           ((C2785 * C1176 + C32729 * C1193 + C2784 * C729 + C32925 * C737) *
                C32771 +
            (C2785 * C1166 + C32729 * C1177 + C2784 * C722 + C32925 * C728) *
                C3603 +
            (C3203 + C3204) * C32926 + (C3205 + C3206) * C3602) *
               C855 +
           ((C2785 * C1178 + C32729 * C1194 + C2784 * C727 + C32925 * C736) *
                C32771 +
            (C2785 * C1167 + C32729 * C1179 + C2784 * C721 + C32925 * C726) *
                C3603 +
            (C2785 * C273 + C32729 * C287 + C2784 * C270 + C32925 * C286) *
                C32926 +
            (C2785 * C257 + C32729 * C272 + C2784 * C256 + C32925 * C271) *
                C3602) *
               C854) *
              C32644 * C249 +
          (((C2784 * C257 + C32925 * C272 + C2785 * C1033 + C32729 * C1042) *
                C3602 +
            (C2784 * C273 + C32925 * C287 + C2785 * C1041 + C32729 * C1051) *
                C32926 +
            (C2784 * C1167 + C32925 * C1179 + C2785 * C1719 + C32729 * C1722) *
                C3603 +
            (C2784 * C1178 + C32925 * C1194 + C2785 * C1723 + C32729 * C1728) *
                C32771) *
               C854 +
           ((C2784 * C258 + C32925 * C274 + C2785 * C1032 + C32729 * C1040) *
                C3602 +
            (C2784 * C275 + C32925 * C288 + C2785 * C1039 + C32729 * C1050) *
                C32926 +
            (C2784 * C1166 + C32925 * C1177 + C2785 * C1720 + C32729 * C1724) *
                C3603 +
            (C2784 * C1176 + C32925 * C1193 + C2785 * C1725 + C32729 * C1729) *
                C32771) *
               C855 +
           ((C2784 * C259 + C32925 * C276 + C2785 * C1031 + C32729 * C1038) *
                C3602 +
            (C2784 * C277 + C32925 * C289 + C2785 * C1037 + C32729 * C1049) *
                C32926 +
            (C2784 * C1165 + C32925 * C1175 + C2785 * C1721 + C32729 * C1726) *
                C3603 +
            (C2784 * C1174 + C32925 * C1192 + C2785 * C1727 + C32729 * C1730) *
                C32771) *
               C32945) *
              C32644 * C250) *
         C32618) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C2784 * C115 + C32925 * C122 + C2785 * C256 + C32729 * C271) *
                C3602 +
            (C2784 * C123 + C32925 * C136 + C2785 * C270 + C32729 * C286) *
                C32926 +
            (C2784 * C361 + C32925 * C376 + C2785 * C721 + C32729 * C726) *
                C3603 +
            (C2784 * C375 + C32925 * C391 + C2785 * C727 + C32729 * C736) *
                C32771) *
               C854 +
           ((C2819 + C2820) * C3602 + (C2821 + C2822) * C32926 +
            (C3372 + C3371) * C3603 + (C3370 + C3369) * C32771) *
               C855 +
           C4397 * C32945) *
              C32644 * C32630 * C110 -
          (((C3361 + C3362) * C32771 + (C3363 + C3364) * C3603 +
            (C2830 + C2829) * C32926 + (C2828 + C2827) * C3602) *
               C32945 +
           ((C3365 + C3366) * C32771 + (C3367 + C3368) * C3603 +
            (C2826 + C2825) * C32926 + (C2824 + C2823) * C3602) *
               C855 +
           ((C3369 + C3370) * C32771 + (C3371 + C3372) * C3603 +
            (C2822 + C2821) * C32926 + (C2820 + C2819) * C3602) *
               C854) *
              C32644 * C32630 * C111 +
          (C4397 * C854 +
           (C2837 * C3602 + C2838 * C32926 + (C3364 + C3363) * C3603 +
            (C3362 + C3361) * C32771) *
               C855 +
           ((C2834 + C2833) * C3602 + (C2832 + C2831) * C32926 +
            (C2784 * C357 + C32925 * C368 + C2785 * C725 + C32729 * C734) *
                C3603 +
            (C2784 * C367 + C32925 * C387 + C2785 * C735 + C32729 * C740) *
                C32771) *
               C32945) *
              C32644 * C32630 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C7754 * C115 + C7748 * C122 + C7755 * C256 + C7749 * C271 +
            C7756 * C257 + C7750 * C272 + C7757 * C1033 + C32966 * C1042) *
               C3602 +
           (C7754 * C123 + C7748 * C136 + C7755 * C270 + C7749 * C286 +
            C7756 * C273 + C7750 * C287 + C7757 * C1041 + C32966 * C1051) *
               C32926 +
           (C7754 * C361 + C7748 * C376 + C7755 * C721 + C7749 * C726 +
            C7756 * C1167 + C7750 * C1179 + C7757 * C1719 + C32966 * C1722) *
               C3603 +
           (C7754 * C375 + C7748 * C391 + C7755 * C727 + C7749 * C736 +
            C7756 * C1178 + C7750 * C1194 + C7757 * C1723 + C32966 * C1728) *
               C32771) *
              C32585 * C32644 * C32630 * C110 -
          ((C8303 + C8304 + C8305 + C8306) * C32771 +
           (C8307 + C8308 + C8309 + C8310) * C3603 +
           (C7798 + C7797 + C7796 + C7795) * C32926 +
           (C7794 + C7793 + C7792 + C7791) * C3602) *
              C32585 * C32644 * C32630 * C111 +
          ((C7806 + C7805 + C7804 + C7803) * C3602 +
           (C7802 + C7801 + C7800 + C7799) * C32926 +
           (C7754 * C359 + C7748 * C372 + C7755 * C723 + C7749 * C730 +
            C7756 * C1165 + C7750 * C1175 + C7757 * C1721 + C32966 * C1726) *
               C3603 +
           (C7754 * C371 + C7748 * C389 + C7755 * C731 + C7749 * C738 +
            C7756 * C1174 + C7750 * C1192 + C7757 * C1727 + C32966 * C1730) *
               C32771) *
              C32585 * C32644 * C32630 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C7754 * C115 + C7748 * C122 + C7755 * C256 + C7749 * C271 +
            C7756 * C257 + C7750 * C272 + C7757 * C1033 + C32966 * C1042) *
               C3602 +
           (C7754 * C123 + C7748 * C136 + C7755 * C270 + C7749 * C286 +
            C7756 * C273 + C7750 * C287 + C7757 * C1041 + C32966 * C1051) *
               C32926 +
           (C7754 * C361 + C7748 * C376 + C7755 * C721 + C7749 * C726 +
            C7756 * C1167 + C7750 * C1179 + C7757 * C1719 + C32966 * C1722) *
               C3603 +
           (C7754 * C375 + C7748 * C391 + C7755 * C727 + C7749 * C736 +
            C7756 * C1178 + C7750 * C1194 + C7757 * C1723 + C32966 * C1728) *
               C32771) *
              C32585 * C32644 * C248 -
          ((C7757 * C6479 + C32966 * C6485 + C7756 * C1723 + C7750 * C1728 +
            C7755 * C1178 + C7749 * C1194 + C7754 * C727 + C7748 * C736) *
               C32771 +
           (C7757 * C6476 + C32966 * C6480 + C7756 * C1719 + C7750 * C1722 +
            C7755 * C1167 + C7749 * C1179 + C7754 * C721 + C7748 * C726) *
               C3603 +
           (C7757 * C1044 + C32966 * C1052 + C7756 * C1041 + C7750 * C1051 +
            C7755 * C273 + C7749 * C287 + C7754 * C270 + C7748 * C286) *
               C32926 +
           (C7757 * C1034 + C32966 * C1043 + C7756 * C1033 + C7750 * C1042 +
            C7755 * C257 + C7749 * C272 + C7754 * C256 + C7748 * C271) *
               C3602) *
              C32585 * C32644 * C249 +
          ((C7754 * C257 + C7748 * C272 + C7755 * C1033 + C7749 * C1042 +
            C7756 * C1034 + C7750 * C1043 + C7757 * C6406 + C32966 * C6409) *
               C3602 +
           (C7754 * C273 + C7748 * C287 + C7755 * C1041 + C7749 * C1051 +
            C7756 * C1044 + C7750 * C1052 + C7757 * C6408 + C32966 * C6412) *
               C32926 +
           (C7754 * C1167 + C7748 * C1179 + C7755 * C1719 + C7749 * C1722 +
            C7756 * C6476 + C7750 * C6480 + C7757 * C6742 + C32966 * C6743) *
               C3603 +
           (C7754 * C1178 + C7748 * C1194 + C7755 * C1723 + C7749 * C1728 +
            C7756 * C6479 + C7750 * C6485 + C7757 * C6744 + C32966 * C6745) *
               C32771) *
              C32585 * C32644 * C250) *
         C32618) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C2784 * C115 + C32925 * C122 + C2785 * C256 + C32729 * C271) *
               C13611 +
           (C2784 * C123 + C32925 * C136 + C2785 * C270 + C32729 * C286) *
               C13607 +
           (C4722 + C4723) * C13612 + (C4724 + C4725) * C13608 +
           C12874 * C13613 + C12875 * C13609 + (C12901 + C12900) * C13614 +
           (C12899 + C12898) * C32972) *
              C32585 * C32644 * C32630 * C110 -
          ((C12894 + C12895) * C32972 + (C12896 + C12897) * C13614 +
           C13302 * C13609 + C13303 * C13613 + C5154 * C13608 + C5155 * C13612 +
           (C2822 + C2821) * C13607 + (C2820 + C2819) * C13611) *
              C32585 * C32644 * C32630 * C111 +
          (C2835 * C13611 + C2836 * C13607 + C4391 * C13612 + C4392 * C13608 +
           (C4729 + C4728) * C13613 + (C4727 + C4726) * C13609 +
           (C2784 * C2108 + C32925 * C2115 + C2785 * C2658 + C32729 * C2663) *
               C13614 +
           (C2784 * C2114 + C32925 * C2126 + C2785 * C2664 + C32729 * C2667) *
               C32972) *
              C32585 * C32644 * C32630 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C2784 * C115 + C32925 * C122 + C2785 * C256 + C32729 * C271) *
               C13611 +
           (C2784 * C123 + C32925 * C136 + C2785 * C270 + C32729 * C286) *
               C13607 +
           (C4722 + C4723) * C13612 + (C4724 + C4725) * C13608 +
           C12874 * C13613 + C12875 * C13609 + (C12901 + C12900) * C13614 +
           (C12899 + C12898) * C32972) *
              C32585 * C32644 * C248 -
          ((C2785 * C7079 + C32729 * C7085 + C2784 * C2660 + C32925 * C2665) *
               C32972 +
           (C2785 * C7076 + C32729 * C7080 + C2784 * C2656 + C32925 * C2659) *
               C13614 +
           (C13509 + C13508) * C13609 + (C13507 + C13506) * C13613 +
           (C5361 + C5360) * C13608 + (C5359 + C5358) * C13612 +
           (C2785 * C273 + C32729 * C287 + C2784 * C270 + C32925 * C286) *
               C13607 +
           (C2785 * C257 + C32729 * C272 + C2784 * C256 + C32925 * C271) *
               C13611) *
              C32585 * C32644 * C249 +
          ((C2784 * C257 + C32925 * C272 + C2785 * C1033 + C32729 * C1042) *
               C13611 +
           (C2784 * C273 + C32925 * C287 + C2785 * C1041 + C32729 * C1051) *
               C13607 +
           (C2784 * C1167 + C32925 * C1179 + C2785 * C1719 + C32729 * C1722) *
               C13612 +
           (C2784 * C1178 + C32925 * C1194 + C2785 * C1723 + C32729 * C1728) *
               C13608 +
           (C2784 * C1169 + C32925 * C1181 + C2785 * C6477 + C32729 * C6481) *
               C13613 +
           (C2784 * C1183 + C32925 * C1196 + C2785 * C6483 + C32729 * C6486) *
               C13609 +
           (C2784 * C7076 + C32925 * C7080 + C2785 * C7610 + C32729 * C7611) *
               C13614 +
           (C2784 * C7079 + C32925 * C7085 + C2785 * C7612 + C32729 * C7613) *
               C32972) *
              C32585 * C32644 * C250) *
         C32618) /
            (p * q * std::sqrt(p + q));
    d2ee[60] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C113 * C115 + C32667 * C122) * C114 +
                 (C113 * C123 + C32667 * C136) * C32684) *
                    C103 +
                (C174 + C175) * C104 + C184 * C105 + C185 * C106 +
                C186 * C107) *
                   C32644 * C479 -
               ((C512 + C513) * C107 + (C514 + C515) * C106 +
                (C516 + C517) * C105 + (C518 + C519) * C104 +
                ((C113 * C270 + C32667 * C286) * C32684 +
                 (C113 * C256 + C32667 * C271) * C114) *
                    C103) *
                   C32644 * C480) *
                  C481 +
              (((C519 + C518) * C103 + (C517 + C516) * C104 +
                (C515 + C514) * C105 + (C513 + C512) * C106 +
                ((C113 * C483 + C32667 * C484) * C114 +
                 (C113 * C485 + C32667 * C486) * C32684) *
                    C107) *
                   C32644 * C480 -
               ((C182 + C183) * C107 + (C181 + C180) * C106 +
                (C179 + C178) * C105 + (C177 + C176) * C104 +
                (C175 + C174) * C103) *
                   C32644 * C479) *
                  C482) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C857 * C115 + C32991 * C122 + C858 * C256 + C32979 * C271 +
                  C859 * C257 + C32956 * C272) *
                     C114 +
                 (C857 * C123 + C32991 * C136 + C858 * C270 + C32979 * C286 +
                  C859 * C273 + C32956 * C287) *
                     C32684) *
                    C854 +
                ((C897 + C898 + C899) * C114 + (C900 + C901 + C902) * C32684) *
                    C855 +
                C921 * C32945) *
                   C32644 * C479 -
               (((C1376 + C1377 + C1378) * C32684 +
                 (C1379 + C1380 + C1381) * C114) *
                    C32945 +
                ((C1382 + C1383 + C1384) * C32684 +
                 (C1385 + C1386 + C1387) * C114) *
                    C855 +
                ((C859 * C1041 + C32956 * C1051 + C858 * C273 + C32979 * C287 +
                  C857 * C270 + C32991 * C286) *
                     C32684 +
                 (C859 * C1033 + C32956 * C1042 + C858 * C257 + C32979 * C272 +
                  C857 * C256 + C32991 * C271) *
                     C114) *
                    C854) *
                   C32644 * C480) *
                  C481 +
              ((((C1387 + C1386 + C1385) * C114 +
                 (C1384 + C1383 + C1382) * C32684) *
                    C854 +
                ((C1381 + C1380 + C1379) * C114 +
                 (C1378 + C1377 + C1376) * C32684) *
                    C855 +
                ((C857 * C253 + C32991 * C265 + C858 * C260 + C32979 * C278 +
                  C859 * C1347 + C32956 * C1348) *
                     C114 +
                 (C857 * C264 + C32991 * C283 + C858 * C279 + C32979 * C290 +
                  C859 * C1349 + C32956 * C1350) *
                     C32684) *
                    C32945) *
                   C32644 * C480 -
               (((C909 + C910 + C911) * C32684 + (C912 + C913 + C914) * C114) *
                    C32945 +
                ((C908 + C907 + C906) * C32684 + (C905 + C904 + C903) * C114) *
                    C855 +
                ((C902 + C901 + C900) * C32684 + (C899 + C898 + C897) * C114) *
                    C854) *
                   C32644 * C479) *
                  C482)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C32667 * C122) * C1844 +
             (C113 * C123 + C32667 * C136) * C32992 + C2153 * C1845 +
             C2154 * C32981 + C2155 * C1846 + C2156 * C32959) *
                C854 +
            (C1848 + C1849 + C1850 + C1851 + C1879 + C1880) * C855 +
            C1888 * C32945) *
               C32644 * C479 -
           ((C2341 + C2342 + C2343 + C2344 + C2321 + C2322) * C32945 +
            (C2345 + C2346 + C2347 + C2348 + C2331 + C2332) * C855 +
            ((C113 * C1182 + C32667 * C1195) * C32959 +
             (C113 * C1168 + C32667 * C1180) * C1846 +
             (C113 * C727 + C32667 * C736) * C32981 +
             (C113 * C721 + C32667 * C726) * C1845 +
             (C113 * C270 + C32667 * C286) * C32992 +
             (C113 * C256 + C32667 * C271) * C1844) *
                C854) *
               C32644 * C480) *
              C481 +
          (((C2332 + C2331 + C2348 + C2347 + C2346 + C2345) * C854 +
            (C2322 + C2321 + C2344 + C2343 + C2342 + C2341) * C855 +
            (C507 * C1844 + C506 * C32992 +
             (C113 * C724 + C32667 * C732) * C1845 +
             (C113 * C733 + C32667 * C739) * C32981 +
             (C113 * C2308 + C32667 * C2309) * C1846 +
             (C113 * C2310 + C32667 * C2311) * C32959) *
                C32945) *
               C32644 * C480 -
           ((C1884 + C1885 + C1868 + C1869 + C1870 + C1871) * C32945 +
            (C1883 + C1882 + C1859 + C1858 + C1857 + C1856) * C855 +
            (C1880 + C1879 + C1851 + C1850 + C1849 + C1848) * C854) *
               C32644 * C479) *
              C482)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C5477 * C115 + C5471 * C122 + C5478 * C256 + C5472 * C271 +
              C5479 * C257 + C32956 * C272) *
                 C114 +
             (C5477 * C123 + C5471 * C136 + C5478 * C270 + C5472 * C286 +
              C5479 * C273 + C32956 * C287) *
                 C32684) *
                C32988 +
            ((C5517 + C5518 + C5519) * C114 +
             (C5520 + C5521 + C5522) * C32684) *
                C32975 +
            C5541 * C32945) *
               C32644 * C479 -
           (((C5932 + C5933 + C5934) * C32684 +
             (C5935 + C5936 + C5937) * C114) *
                C32945 +
            ((C5938 + C5939 + C5940) * C32684 +
             (C5941 + C5942 + C5943) * C114) *
                C32975 +
            ((C5479 * C1041 + C32956 * C1051 + C5478 * C273 + C5472 * C287 +
              C5477 * C270 + C5471 * C286) *
                 C32684 +
             (C5479 * C1033 + C32956 * C1042 + C5478 * C257 + C5472 * C272 +
              C5477 * C256 + C5471 * C271) *
                 C114) *
                C32988) *
               C32644 * C480) *
              C481 +
          ((((C5943 + C5942 + C5941) * C114 +
             (C5940 + C5939 + C5938) * C32684) *
                C32988 +
            ((C5937 + C5936 + C5935) * C114 +
             (C5934 + C5933 + C5932) * C32684) *
                C32975 +
            ((C5477 * C253 + C5471 * C265 + C5478 * C260 + C5472 * C278 +
              C5479 * C1347 + C32956 * C1348) *
                 C114 +
             (C5477 * C264 + C5471 * C283 + C5478 * C279 + C5472 * C290 +
              C5479 * C1349 + C32956 * C1350) *
                 C32684) *
                C32945) *
               C32644 * C480 -
           (((C5529 + C5530 + C5531) * C32684 +
             (C5532 + C5533 + C5534) * C114) *
                C32945 +
            ((C5528 + C5527 + C5526) * C32684 +
             (C5525 + C5524 + C5523) * C114) *
                C32975 +
            ((C5522 + C5521 + C5520) * C32684 +
             (C5519 + C5518 + C5517) * C114) *
                C32988) *
               C32644 * C479) *
              C482)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C6339 * C115 + C6333 * C122 + C6340 * C256 + C6334 * C271 +
             C6341 * C257 + C6335 * C272 + C6342 * C1033 + C6336 * C1042 +
             C6343 * C1034 + C6337 * C1043) *
                C114 +
            (C6339 * C123 + C6333 * C136 + C6340 * C270 + C6334 * C286 +
             C6341 * C273 + C6335 * C287 + C6342 * C1041 + C6336 * C1051 +
             C6343 * C1044 + C6337 * C1052) *
                C32684) *
               C32585 * C32644 * C479 -
           ((C6343 * C6408 + C6337 * C6412 + C6342 * C1044 + C6336 * C1052 +
             C6341 * C1041 + C6335 * C1051 + C6340 * C273 + C6334 * C287 +
             C6339 * C270 + C6333 * C286) *
                C32684 +
            (C6343 * C6406 + C6337 * C6409 + C6342 * C1034 + C6336 * C1043 +
             C6341 * C1033 + C6335 * C1042 + C6340 * C257 + C6334 * C272 +
             C6339 * C256 + C6333 * C271) *
                C114) *
               C32585 * C32644 * C480) *
              C481 +
          (((C6339 * C255 + C6333 * C269 + C6340 * C258 + C6334 * C274 +
             C6341 * C1032 + C6335 * C1040 + C6342 * C1035 + C6336 * C1045 +
             C6343 * C6570 + C6337 * C6571) *
                C114 +
            (C6339 * C268 + C6333 * C285 + C6340 * C275 + C6334 * C288 +
             C6341 * C1039 + C6335 * C1050 + C6342 * C1046 + C6336 * C1053 +
             C6343 * C6572 + C6337 * C6573) *
                C32684) *
               C32585 * C32644 * C480 -
           ((C6343 * C1046 + C6337 * C1053 + C6342 * C1039 + C6336 * C1050 +
             C6341 * C275 + C6335 * C288 + C6340 * C268 + C6334 * C285 +
             C6339 * C125 + C6333 * C137) *
                C32684 +
            (C6343 * C1035 + C6337 * C1045 + C6342 * C1032 + C6336 * C1040 +
             C6341 * C258 + C6335 * C274 + C6340 * C255 + C6334 * C269 +
             C6339 * C116 + C6333 * C124) *
                C114) *
               C32585 * C32644 * C479) *
              C482)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C5477 * C115 + C5471 * C122 + C5478 * C256 + C5472 * C271 +
             C5479 * C257 + C32956 * C272) *
                C1844 +
            (C5477 * C123 + C5471 * C136 + C5478 * C270 + C5472 * C286 +
             C5479 * C273 + C32956 * C287) *
                C32992 +
            (C7125 + C7126 + C7127) * C1845 + (C7128 + C7129 + C7130) * C32981 +
            C7145 * C1846 + C7146 * C32959) *
               C32585 * C32644 * C479 -
           ((C5479 * C6483 + C32956 * C6486 + C5478 * C1183 + C5472 * C1196 +
             C5477 * C1182 + C5471 * C1195) *
                C32959 +
            (C5479 * C6477 + C32956 * C6481 + C5478 * C1169 + C5472 * C1181 +
             C5477 * C1168 + C5471 * C1180) *
                C1846 +
            (C5479 * C1723 + C32956 * C1728 + C5478 * C1178 + C5472 * C1194 +
             C5477 * C727 + C5471 * C736) *
                C32981 +
            (C5479 * C1719 + C32956 * C1722 + C5478 * C1167 + C5472 * C1179 +
             C5477 * C721 + C5471 * C726) *
                C1845 +
            (C5479 * C1041 + C32956 * C1051 + C5478 * C273 + C5472 * C287 +
             C5477 * C270 + C5471 * C286) *
                C32992 +
            (C5479 * C1033 + C32956 * C1042 + C5478 * C257 + C5472 * C272 +
             C5477 * C256 + C5471 * C271) *
                C1844) *
               C32585 * C32644 * C480) *
              C481 +
          (((C5943 + C5942 + C5941) * C1844 + (C5940 + C5939 + C5938) * C32992 +
            (C5477 * C722 + C5471 * C728 + C5478 * C1166 + C5472 * C1177 +
             C5479 * C1720 + C32956 * C1724) *
                C1845 +
            (C5477 * C729 + C5471 * C737 + C5478 * C1176 + C5472 * C1193 +
             C5479 * C1725 + C32956 * C1729) *
                C32981 +
            (C5477 * C1170 + C5471 * C1184 + C5478 * C1171 + C5472 * C1185 +
             C5479 * C7292 + C32956 * C7293) *
                C1846 +
            (C5477 * C1186 + C5471 * C1197 + C5478 * C1187 + C5472 * C1198 +
             C5479 * C7294 + C32956 * C7295) *
                C32959) *
               C32585 * C32644 * C480 -
           ((C5479 * C1187 + C32956 * C1198 + C5478 * C1186 + C5472 * C1197 +
             C5477 * C380 + C5471 * C393) *
                C32959 +
            (C5479 * C1171 + C32956 * C1185 + C5478 * C1170 + C5472 * C1184 +
             C5477 * C363 + C5471 * C379) *
                C1846 +
            (C6120 + C6121 + C6122) * C32981 + (C6123 + C6124 + C6125) * C1845 +
            (C5522 + C5521 + C5520) * C32992 +
            (C5519 + C5518 + C5517) * C1844) *
               C32585 * C32644 * C479) *
              C482)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C32667 * C122) * C10355 +
             (C113 * C123 + C32667 * C136) * C10352 + C2153 * C10356 +
             C2154 * C10353 + C2155 * C10357 + C2156 * C32959) *
                C32988 +
            (C10359 + C10360 + C10361 + C10362 + C10363 + C10364) * C32975 +
            C10381 * C32945) *
               C32644 * C479 -
           ((C10748 + C10749 + C10750 + C10751 + C10752 + C10753) * C32945 +
            (C10754 + C10755 + C10756 + C10757 + C10758 + C10759) * C32975 +
            (C2680 * C32959 + C2679 * C10357 + C2678 * C10353 + C2677 * C10356 +
             (C113 * C270 + C32667 * C286) * C10352 +
             (C113 * C256 + C32667 * C271) * C10355) *
                C32988) *
               C32644 * C480) *
              C481 +
          (((C10759 + C10758 + C10757 + C10756 + C10755 + C10754) * C32988 +
            (C10753 + C10752 + C10751 + C10750 + C10749 + C10748) * C32975 +
            (C507 * C10355 + C506 * C10352 + C3968 * C10356 + C3967 * C10353 +
             (C113 * C2308 + C32667 * C2309) * C10357 +
             (C113 * C2310 + C32667 * C2311) * C32959) *
                C32945) *
               C32644 * C480 -
           ((C10371 + C10372 + C10373 + C10374 + C10375 + C10376) * C32945 +
            (C10370 + C10369 + C10368 + C10367 + C10366 + C10365) * C32975 +
            (C10364 + C10363 + C10362 + C10361 + C10360 + C10359) * C32988) *
               C32644 * C479) *
              C482)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C857 * C115 + C32991 * C122 + C858 * C256 + C32979 * C271 +
             C859 * C257 + C32956 * C272) *
                C10355 +
            (C857 * C123 + C32991 * C136 + C858 * C270 + C32979 * C286 +
             C859 * C273 + C32956 * C287) *
                C10352 +
            (C11430 + C11431 + C11432) * C10356 +
            (C11433 + C11434 + C11435) * C10353 + C11450 * C10357 +
            C11451 * C32959) *
               C32585 * C32644 * C479 -
           ((C859 * C6483 + C32956 * C6486 + C858 * C1183 + C32979 * C1196 +
             C857 * C1182 + C32991 * C1195) *
                C32959 +
            (C859 * C6477 + C32956 * C6481 + C858 * C1169 + C32979 * C1181 +
             C857 * C1168 + C32991 * C1180) *
                C10357 +
            (C859 * C1723 + C32956 * C1728 + C858 * C1178 + C32979 * C1194 +
             C857 * C727 + C32991 * C736) *
                C10353 +
            (C859 * C1719 + C32956 * C1722 + C858 * C1167 + C32979 * C1179 +
             C857 * C721 + C32991 * C726) *
                C10356 +
            (C859 * C1041 + C32956 * C1051 + C858 * C273 + C32979 * C287 +
             C857 * C270 + C32991 * C286) *
                C10352 +
            (C859 * C1033 + C32956 * C1042 + C858 * C257 + C32979 * C272 +
             C857 * C256 + C32991 * C271) *
                C10355) *
               C32585 * C32644 * C480) *
              C481 +
          (((C1387 + C1386 + C1385) * C10355 +
            (C1384 + C1383 + C1382) * C10352 +
            (C857 * C722 + C32991 * C728 + C858 * C1166 + C32979 * C1177 +
             C859 * C1720 + C32956 * C1724) *
                C10356 +
            (C857 * C729 + C32991 * C737 + C858 * C1176 + C32979 * C1193 +
             C859 * C1725 + C32956 * C1729) *
                C10353 +
            (C857 * C1170 + C32991 * C1184 + C858 * C1171 + C32979 * C1185 +
             C859 * C7292 + C32956 * C7293) *
                C10357 +
            (C857 * C1186 + C32991 * C1197 + C858 * C1187 + C32979 * C1198 +
             C859 * C7294 + C32956 * C7295) *
                C32959) *
               C32585 * C32644 * C480 -
           ((C859 * C1187 + C32956 * C1198 + C858 * C1186 + C32979 * C1197 +
             C857 * C380 + C32991 * C393) *
                C32959 +
            (C859 * C1171 + C32956 * C1185 + C858 * C1170 + C32979 * C1184 +
             C857 * C363 + C32991 * C379) *
                C10357 +
            (C1568 + C1569 + C1570) * C10353 +
            (C1571 + C1572 + C1573) * C10356 + (C902 + C901 + C900) * C10352 +
            (C899 + C898 + C897) * C10355) *
               C32585 * C32644 * C479) *
              C482)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C32667 * C122) * C12010 +
            (C113 * C123 + C32667 * C136) * C12005 + C2153 * C12011 +
            C2154 * C12006 + C2155 * C12012 + C2156 * C12007 + C2162 * C12013 +
            C2161 * C12008 + C12156 * C12014 + C12157 * C12009) *
               C32585 * C32644 * C479 -
           ((C113 * C7083 + C32667 * C7086) * C12009 +
            (C113 * C7077 + C32667 * C7081) * C12014 +
            (C113 * C2660 + C32667 * C2665) * C12008 +
            (C113 * C2656 + C32667 * C2659) * C12013 + C2680 * C12007 +
            C2679 * C12012 + C2678 * C12006 + C2677 * C12011 +
            (C113 * C270 + C32667 * C286) * C12005 +
            (C113 * C256 + C32667 * C271) * C12010) *
               C32585 * C32644 * C480) *
              C481 +
          ((C511 * C12010 + C510 * C12005 + C2340 * C12011 + C2339 * C12006 +
            C2338 * C12012 + C2337 * C12007 +
            (C113 * C2657 + C32667 * C2661) * C12013 +
            (C113 * C2662 + C32667 * C2666) * C12008 +
            (C113 * C12241 + C32667 * C12242) * C12014 +
            (C113 * C12243 + C32667 * C12244) * C12009) *
               C32585 * C32644 * C480 -
           ((C113 * C2123 + C32667 * C2130) * C12009 +
            (C113 * C2112 + C32667 * C2122) * C12014 + C2159 * C12008 +
            C2160 * C12013 + C1873 * C12007 + C1872 * C12012 + C630 * C12006 +
            C631 * C12011 + C165 * C12005 + C164 * C12010) *
               C32585 * C32644 * C479) *
              C482)) /
            (p * q * std::sqrt(p + q));
    d2ee[61] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C113 * C115 + C32667 * C122) * C114 +
                 (C113 * C123 + C32667 * C136) * C32684) *
                    C103 +
                (C174 + C175) * C104 + C184 * C105 + C185 * C106 +
                C186 * C107) *
                   C601 -
               ((C632 + C633) * C107 + (C634 + C635) * C106 +
                (C636 + C637) * C105 + (C638 + C639) * C104 +
                ((C113 * C375 + C32667 * C391) * C32684 +
                 (C113 * C361 + C32667 * C376) * C114) *
                    C103) *
                   C602) *
                  C479 +
              ((((C113 * C721 + C32667 * C726) * C114 +
                 (C113 * C727 + C32667 * C736) * C32684) *
                    C103 +
                ((C113 * C722 + C32667 * C728) * C114 +
                 (C113 * C729 + C32667 * C737) * C32684) *
                    C104 +
                ((C113 * C723 + C32667 * C730) * C114 +
                 (C113 * C731 + C32667 * C738) * C32684) *
                    C105 +
                ((C113 * C724 + C32667 * C732) * C114 +
                 (C113 * C733 + C32667 * C739) * C32684) *
                    C106 +
                ((C113 * C725 + C32667 * C734) * C114 +
                 (C113 * C735 + C32667 * C740) * C32684) *
                    C107) *
                   C602 -
               ((C512 + C513) * C107 + (C514 + C515) * C106 +
                (C516 + C517) * C105 + (C518 + C519) * C104 +
                ((C113 * C270 + C32667 * C286) * C32684 +
                 (C113 * C256 + C32667 * C271) * C114) *
                    C103) *
                   C601) *
                  C480) *
             C32618 +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C857 * C115 + C32991 * C122 + C858 * C256 + C32979 * C271 +
                  C859 * C257 + C32956 * C272) *
                     C114 +
                 (C857 * C123 + C32991 * C136 + C858 * C270 + C32979 * C286 +
                  C859 * C273 + C32956 * C287) *
                     C32684) *
                    C854 +
                ((C897 + C898 + C899) * C114 + (C900 + C901 + C902) * C32684) *
                    C855 +
                C921 * C32945) *
                   C601 -
               (((C1562 + C1563 + C1564) * C32684 +
                 (C1565 + C1566 + C1567) * C114) *
                    C32945 +
                ((C1568 + C1569 + C1570) * C32684 +
                 (C1571 + C1572 + C1573) * C114) *
                    C855 +
                ((C859 * C1178 + C32956 * C1194 + C858 * C727 + C32979 * C736 +
                  C857 * C375 + C32991 * C391) *
                     C32684 +
                 (C859 * C1167 + C32956 * C1179 + C858 * C721 + C32979 * C726 +
                  C857 * C361 + C32991 * C376) *
                     C114) *
                    C854) *
                   C602) *
                  C479 +
              ((((C857 * C721 + C32991 * C726 + C858 * C1167 + C32979 * C1179 +
                  C859 * C1719 + C32956 * C1722) *
                     C114 +
                 (C857 * C727 + C32991 * C736 + C858 * C1178 + C32979 * C1194 +
                  C859 * C1723 + C32956 * C1728) *
                     C32684) *
                    C854 +
                ((C857 * C722 + C32991 * C728 + C858 * C1166 + C32979 * C1177 +
                  C859 * C1720 + C32956 * C1724) *
                     C114 +
                 (C857 * C729 + C32991 * C737 + C858 * C1176 + C32979 * C1193 +
                  C859 * C1725 + C32956 * C1729) *
                     C32684) *
                    C855 +
                ((C857 * C723 + C32991 * C730 + C858 * C1165 + C32979 * C1175 +
                  C859 * C1721 + C32956 * C1726) *
                     C114 +
                 (C857 * C731 + C32991 * C738 + C858 * C1174 + C32979 * C1192 +
                  C859 * C1727 + C32956 * C1730) *
                     C32684) *
                    C32945) *
                   C602 -
               (((C1376 + C1377 + C1378) * C32684 +
                 (C1379 + C1380 + C1381) * C114) *
                    C32945 +
                ((C1382 + C1383 + C1384) * C32684 +
                 (C1385 + C1386 + C1387) * C114) *
                    C855 +
                ((C859 * C1041 + C32956 * C1051 + C858 * C273 + C32979 * C287 +
                  C857 * C270 + C32991 * C286) *
                     C32684 +
                 (C859 * C1033 + C32956 * C1042 + C858 * C257 + C32979 * C272 +
                  C857 * C256 + C32991 * C271) *
                     C114) *
                    C854) *
                   C601) *
                  C480) *
             C32618) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C32667 * C122) * C1844 +
             (C113 * C123 + C32667 * C136) * C32992 + C2153 * C1845 +
             C2154 * C32981 + C2155 * C1846 + C2156 * C32959) *
                C854 +
            (C1848 + C1849 + C1850 + C1851 + C1879 + C1880) * C855 +
            C1888 * C32945) *
               C601 -
           ((C2499 + C2500 + C2501 + C2502 + C2503 + C2504) * C32945 +
            (C2505 + C2506 + C2507 + C2508 + C2509 + C2510) * C855 +
            (C2161 * C32959 + C2162 * C1846 + C2156 * C32981 + C2155 * C1845 +
             C2154 * C32992 + C2153 * C1844) *
                C854) *
               C602) *
              C479 +
          (((C2677 * C1844 + C2678 * C32992 + C2679 * C1845 + C2680 * C32981 +
             (C113 * C2656 + C32667 * C2659) * C1846 +
             (C113 * C2660 + C32667 * C2665) * C32959) *
                C854 +
            (C2340 * C1844 + C2339 * C32992 + C2338 * C1845 + C2337 * C32981 +
             (C113 * C2657 + C32667 * C2661) * C1846 +
             (C113 * C2662 + C32667 * C2666) * C32959) *
                C855 +
            (C2336 * C1844 + C2335 * C32992 + C2334 * C1845 + C2333 * C32981 +
             (C113 * C2658 + C32667 * C2663) * C1846 +
             (C113 * C2664 + C32667 * C2667) * C32959) *
                C32945) *
               C602 -
           ((C2341 + C2342 + C2343 + C2344 + C2321 + C2322) * C32945 +
            (C2345 + C2346 + C2347 + C2348 + C2331 + C2332) * C855 +
            (C2680 * C32959 + C2679 * C1846 + C2678 * C32981 + C2677 * C1845 +
             (C113 * C270 + C32667 * C286) * C32992 +
             (C113 * C256 + C32667 * C271) * C1844) *
                C854) *
               C601) *
              C480) *
         C32618) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C5477 * C115 + C5471 * C122 + C5478 * C256 + C5472 * C271 +
              C5479 * C257 + C32956 * C272) *
                 C114 +
             (C5477 * C123 + C5471 * C136 + C5478 * C270 + C5472 * C286 +
              C5479 * C273 + C32956 * C287) *
                 C32684) *
                C32988 +
            ((C5517 + C5518 + C5519) * C114 +
             (C5520 + C5521 + C5522) * C32684) *
                C32975 +
            C5541 * C32945) *
               C601 -
           (((C6114 + C6115 + C6116) * C32684 +
             (C6117 + C6118 + C6119) * C114) *
                C32945 +
            ((C6120 + C6121 + C6122) * C32684 +
             (C6123 + C6124 + C6125) * C114) *
                C32975 +
            ((C5479 * C1178 + C32956 * C1194 + C5478 * C727 + C5472 * C736 +
              C5477 * C375 + C5471 * C391) *
                 C32684 +
             (C5479 * C1167 + C32956 * C1179 + C5478 * C721 + C5472 * C726 +
              C5477 * C361 + C5471 * C376) *
                 C114) *
                C32988) *
               C602) *
              C479 +
          ((((C5477 * C721 + C5471 * C726 + C5478 * C1167 + C5472 * C1179 +
              C5479 * C1719 + C32956 * C1722) *
                 C114 +
             (C5477 * C727 + C5471 * C736 + C5478 * C1178 + C5472 * C1194 +
              C5479 * C1723 + C32956 * C1728) *
                 C32684) *
                C32988 +
            ((C5477 * C722 + C5471 * C728 + C5478 * C1166 + C5472 * C1177 +
              C5479 * C1720 + C32956 * C1724) *
                 C114 +
             (C5477 * C729 + C5471 * C737 + C5478 * C1176 + C5472 * C1193 +
              C5479 * C1725 + C32956 * C1729) *
                 C32684) *
                C32975 +
            ((C5477 * C723 + C5471 * C730 + C5478 * C1165 + C5472 * C1175 +
              C5479 * C1721 + C32956 * C1726) *
                 C114 +
             (C5477 * C731 + C5471 * C738 + C5478 * C1174 + C5472 * C1192 +
              C5479 * C1727 + C32956 * C1730) *
                 C32684) *
                C32945) *
               C602 -
           (((C5932 + C5933 + C5934) * C32684 +
             (C5935 + C5936 + C5937) * C114) *
                C32945 +
            ((C5938 + C5939 + C5940) * C32684 +
             (C5941 + C5942 + C5943) * C114) *
                C32975 +
            ((C5479 * C1041 + C32956 * C1051 + C5478 * C273 + C5472 * C287 +
              C5477 * C270 + C5471 * C286) *
                 C32684 +
             (C5479 * C1033 + C32956 * C1042 + C5478 * C257 + C5472 * C272 +
              C5477 * C256 + C5471 * C271) *
                 C114) *
                C32988) *
               C601) *
              C480) *
         C32618) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C6339 * C115 + C6333 * C122 + C6340 * C256 + C6334 * C271 +
             C6341 * C257 + C6335 * C272 + C6342 * C1033 + C6336 * C1042 +
             C6343 * C1034 + C6337 * C1043) *
                C114 +
            (C6339 * C123 + C6333 * C136 + C6340 * C270 + C6334 * C286 +
             C6341 * C273 + C6335 * C287 + C6342 * C1041 + C6336 * C1051 +
             C6343 * C1044 + C6337 * C1052) *
                C32684) *
               C32585 * C601 -
           ((C6343 * C6479 + C6337 * C6485 + C6342 * C1723 + C6336 * C1728 +
             C6341 * C1178 + C6335 * C1194 + C6340 * C727 + C6334 * C736 +
             C6339 * C375 + C6333 * C391) *
                C32684 +
            (C6343 * C6476 + C6337 * C6480 + C6342 * C1719 + C6336 * C1722 +
             C6341 * C1167 + C6335 * C1179 + C6340 * C721 + C6334 * C726 +
             C6339 * C361 + C6333 * C376) *
                C114) *
               C32585 * C602) *
              C479 +
          (((C6339 * C721 + C6333 * C726 + C6340 * C1167 + C6334 * C1179 +
             C6341 * C1719 + C6335 * C1722 + C6342 * C6476 + C6336 * C6480 +
             C6343 * C6742 + C6337 * C6743) *
                C114 +
            (C6339 * C727 + C6333 * C736 + C6340 * C1178 + C6334 * C1194 +
             C6341 * C1723 + C6335 * C1728 + C6342 * C6479 + C6336 * C6485 +
             C6343 * C6744 + C6337 * C6745) *
                C32684) *
               C32585 * C602 -
           ((C6343 * C6408 + C6337 * C6412 + C6342 * C1044 + C6336 * C1052 +
             C6341 * C1041 + C6335 * C1051 + C6340 * C273 + C6334 * C287 +
             C6339 * C270 + C6333 * C286) *
                C32684 +
            (C6343 * C6406 + C6337 * C6409 + C6342 * C1034 + C6336 * C1043 +
             C6341 * C1033 + C6335 * C1042 + C6340 * C257 + C6334 * C272 +
             C6339 * C256 + C6333 * C271) *
                C114) *
               C32585 * C601) *
              C480) *
         C32618) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C5477 * C115 + C5471 * C122 + C5478 * C256 + C5472 * C271 +
             C5479 * C257 + C32956 * C272) *
                C1844 +
            (C5477 * C123 + C5471 * C136 + C5478 * C270 + C5472 * C286 +
             C5479 * C273 + C32956 * C287) *
                C32992 +
            (C7125 + C7126 + C7127) * C1845 + (C7128 + C7129 + C7130) * C32981 +
            C7145 * C1846 + C7146 * C32959) *
               C32585 * C601 -
           ((C7137 + C7138 + C7139) * C32959 + (C7140 + C7141 + C7142) * C1846 +
            (C7136 + C7135 + C7134) * C32981 + (C7133 + C7132 + C7131) * C1845 +
            (C7130 + C7129 + C7128) * C32992 +
            (C7127 + C7126 + C7125) * C1844) *
               C32585 * C602) *
              C479 +
          (((C7639 + C7640 + C7641) * C1844 + (C7642 + C7643 + C7644) * C32992 +
            (C7645 + C7646 + C7647) * C1845 + (C7648 + C7649 + C7650) * C32981 +
            (C5477 * C2656 + C5471 * C2659 + C5478 * C7076 + C5472 * C7080 +
             C5479 * C7610 + C32956 * C7611) *
                C1846 +
            (C5477 * C2660 + C5471 * C2665 + C5478 * C7079 + C5472 * C7085 +
             C5479 * C7612 + C32956 * C7613) *
                C32959) *
               C32585 * C602 -
           ((C7650 + C7649 + C7648) * C32959 + (C7647 + C7646 + C7645) * C1846 +
            (C7644 + C7643 + C7642) * C32981 + (C7641 + C7640 + C7639) * C1845 +
            (C5479 * C1041 + C32956 * C1051 + C5478 * C273 + C5472 * C287 +
             C5477 * C270 + C5471 * C286) *
                C32992 +
            (C5479 * C1033 + C32956 * C1042 + C5478 * C257 + C5472 * C272 +
             C5477 * C256 + C5471 * C271) *
                C1844) *
               C32585 * C601) *
              C480) *
         C32618) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C32667 * C122) * C10355 +
             (C113 * C123 + C32667 * C136) * C10352 + C2153 * C10356 +
             C2154 * C10353 + C2155 * C10357 + C2156 * C32959) *
                C32988 +
            (C10359 + C10360 + C10361 + C10362 + C10363 + C10364) * C32975 +
            C10381 * C32945) *
               C601 -
           ((C10906 + C10907 + C10908 + C10909 + C10910 + C10911) * C32945 +
            (C10912 + C10913 + C10914 + C10915 + C10916 + C10917) * C32975 +
            (C2161 * C32959 + C2162 * C10357 + C2156 * C10353 + C2155 * C10356 +
             C2154 * C10352 + C2153 * C10355) *
                C32988) *
               C602) *
              C479 +
          (((C2677 * C10355 + C2678 * C10352 + C2679 * C10356 + C2680 * C10353 +
             (C113 * C2656 + C32667 * C2659) * C10357 +
             (C113 * C2660 + C32667 * C2665) * C32959) *
                C32988 +
            (C2340 * C10355 + C2339 * C10352 + C2338 * C10356 + C2337 * C10353 +
             (C113 * C2657 + C32667 * C2661) * C10357 +
             (C113 * C2662 + C32667 * C2666) * C32959) *
                C32975 +
            (C2336 * C10355 + C2335 * C10352 + C2334 * C10356 + C2333 * C10353 +
             (C113 * C2658 + C32667 * C2663) * C10357 +
             (C113 * C2664 + C32667 * C2667) * C32959) *
                C32945) *
               C602 -
           ((C10748 + C10749 + C10750 + C10751 + C10752 + C10753) * C32945 +
            (C10754 + C10755 + C10756 + C10757 + C10758 + C10759) * C32975 +
            (C2680 * C32959 + C2679 * C10357 + C2678 * C10353 + C2677 * C10356 +
             (C113 * C270 + C32667 * C286) * C10352 +
             (C113 * C256 + C32667 * C271) * C10355) *
                C32988) *
               C601) *
              C480) *
         C32618) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C857 * C115 + C32991 * C122 + C858 * C256 + C32979 * C271 +
             C859 * C257 + C32956 * C272) *
                C10355 +
            (C857 * C123 + C32991 * C136 + C858 * C270 + C32979 * C286 +
             C859 * C273 + C32956 * C287) *
                C10352 +
            (C11430 + C11431 + C11432) * C10356 +
            (C11433 + C11434 + C11435) * C10353 + C11450 * C10357 +
            C11451 * C32959) *
               C32585 * C601 -
           ((C11442 + C11443 + C11444) * C32959 +
            (C11445 + C11446 + C11447) * C10357 +
            (C11441 + C11440 + C11439) * C10353 +
            (C11438 + C11437 + C11436) * C10356 +
            (C11435 + C11434 + C11433) * C10352 +
            (C11432 + C11431 + C11430) * C10355) *
               C32585 * C602) *
              C479 +
          (((C11932 + C11933 + C11934) * C10355 +
            (C11935 + C11936 + C11937) * C10352 +
            (C11938 + C11939 + C11940) * C10356 +
            (C11941 + C11942 + C11943) * C10353 +
            (C857 * C2656 + C32991 * C2659 + C858 * C7076 + C32979 * C7080 +
             C859 * C7610 + C32956 * C7611) *
                C10357 +
            (C857 * C2660 + C32991 * C2665 + C858 * C7079 + C32979 * C7085 +
             C859 * C7612 + C32956 * C7613) *
                C32959) *
               C32585 * C602 -
           ((C11943 + C11942 + C11941) * C32959 +
            (C11940 + C11939 + C11938) * C10357 +
            (C11937 + C11936 + C11935) * C10353 +
            (C11934 + C11933 + C11932) * C10356 +
            (C859 * C1041 + C32956 * C1051 + C858 * C273 + C32979 * C287 +
             C857 * C270 + C32991 * C286) *
                C10352 +
            (C859 * C1033 + C32956 * C1042 + C858 * C257 + C32979 * C272 +
             C857 * C256 + C32991 * C271) *
                C10355) *
               C32585 * C601) *
              C480) *
         C32618) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C32667 * C122) * C12010 +
            (C113 * C123 + C32667 * C136) * C12005 + C2153 * C12011 +
            C2154 * C12006 + C2155 * C12012 + C2156 * C12007 + C2162 * C12013 +
            C2161 * C12008 + C12156 * C12014 + C12157 * C12009) *
               C32585 * C601 -
           (C12158 * C12009 + C12159 * C12014 + C12157 * C12008 +
            C12156 * C12013 + C2161 * C12007 + C2162 * C12012 + C2156 * C12006 +
            C2155 * C12011 + C2154 * C12005 + C2153 * C12010) *
               C32585 * C602) *
              C479 +
          ((C2677 * C12010 + C2678 * C12005 + C2679 * C12011 + C2680 * C12006 +
            C12432 * C12012 + C12433 * C12007 + C12434 * C12013 +
            C12435 * C12008 + (C113 * C12419 + C32667 * C12420) * C12014 +
            (C113 * C12421 + C32667 * C12422) * C12009) *
               C32585 * C602 -
           (C12435 * C12009 + C12434 * C12014 + C12433 * C12008 +
            C12432 * C12013 + C2680 * C12007 + C2679 * C12012 + C2678 * C12006 +
            C2677 * C12011 + (C113 * C270 + C32667 * C286) * C12005 +
            (C113 * C256 + C32667 * C271) * C12010) *
               C32585 * C601) *
              C480) *
         C32618) /
            (p * q * std::sqrt(p + q));
    d2ee[62] +=
        (-0.25 * std::pow(Pi, 2.5) *
             ((((C113 * C115 + C32667 * C122) * C114 +
                (C113 * C123 + C32667 * C136) * C32684) *
                   C103 +
               (C174 + C175) * C104 + C184 * C105 + C185 * C106 + C186 * C107) *
                  C32644 * C32630 * C110 -
              ((C182 + C183) * C107 + (C181 + C180) * C106 +
               (C179 + C178) * C105 + (C177 + C176) * C104 +
               (C175 + C174) * C103) *
                  C32644 * C32630 * C111 +
              (C184 * C103 + C185 * C104 + C186 * C105 + (C183 + C182) * C106 +
               ((C113 * C121 + C32667 * C134) * C114 +
                (C113 * C135 + C32667 * C142) * C32684) *
                   C107) *
                  C32644 * C32630 * C112) -
         0.25 * std::pow(Pi, 2.5) *
             ((((C113 * C115 + C32667 * C122) * C114 +
                (C113 * C123 + C32667 * C136) * C32684) *
                   C103 +
               (C174 + C175) * C104 + C184 * C105 + C185 * C106 + C186 * C107) *
                  C32644 * C248 -
              (((C113 * C262 + C32667 * C282) * C32684 +
                (C113 * C252 + C32667 * C263) * C114) *
                   C107 +
               ((C113 * C264 + C32667 * C283) * C32684 +
                (C113 * C253 + C32667 * C265) * C114) *
                   C106 +
               ((C113 * C266 + C32667 * C284) * C32684 +
                (C113 * C254 + C32667 * C267) * C114) *
                   C105 +
               ((C113 * C268 + C32667 * C285) * C32684 +
                (C113 * C255 + C32667 * C269) * C114) *
                   C104 +
               ((C113 * C270 + C32667 * C286) * C32684 +
                (C113 * C256 + C32667 * C271) * C114) *
                   C103) *
                  C32644 * C249 +
              (((C113 * C257 + C32667 * C272) * C114 +
                (C113 * C273 + C32667 * C287) * C32684) *
                   C103 +
               ((C113 * C258 + C32667 * C274) * C114 +
                (C113 * C275 + C32667 * C288) * C32684) *
                   C104 +
               ((C113 * C259 + C32667 * C276) * C114 +
                (C113 * C277 + C32667 * C289) * C32684) *
                   C105 +
               ((C113 * C260 + C32667 * C278) * C114 +
                (C113 * C279 + C32667 * C290) * C32684) *
                   C106 +
               ((C113 * C261 + C32667 * C280) * C114 +
                (C113 * C281 + C32667 * C291) * C32684) *
                   C107) *
                  C32644 * C250) *
             C32618 +
         0.5 * std::pow(Pi, 2.5) *
             ((((C113 * C115 + C32667 * C122) * C114 +
                (C113 * C123 + C32667 * C136) * C32684) *
                   C103 +
               (C174 + C175) * C104 + C184 * C105 + C185 * C106 + C186 * C107) *
                  C354 -
              (((C113 * C367 + C32667 * C387) * C32684 +
                (C113 * C357 + C32667 * C368) * C114) *
                   C107 +
               ((C113 * C369 + C32667 * C388) * C32684 +
                (C113 * C358 + C32667 * C370) * C114) *
                   C106 +
               ((C113 * C371 + C32667 * C389) * C32684 +
                (C113 * C359 + C32667 * C372) * C114) *
                   C105 +
               ((C113 * C373 + C32667 * C390) * C32684 +
                (C113 * C360 + C32667 * C374) * C114) *
                   C104 +
               ((C113 * C375 + C32667 * C391) * C32684 +
                (C113 * C361 + C32667 * C376) * C114) *
                   C103) *
                  C355 +
              (((C113 * C362 + C32667 * C377) * C114 +
                (C113 * C378 + C32667 * C392) * C32684) *
                   C103 +
               ((C113 * C363 + C32667 * C379) * C114 +
                (C113 * C380 + C32667 * C393) * C32684) *
                   C104 +
               ((C113 * C364 + C32667 * C381) * C114 +
                (C113 * C382 + C32667 * C394) * C32684) *
                   C105 +
               ((C113 * C365 + C32667 * C383) * C114 +
                (C113 * C384 + C32667 * C395) * C32684) *
                   C106 +
               ((C113 * C366 + C32667 * C385) * C114 +
                (C113 * C386 + C32667 * C396) * C32684) *
                   C107) *
                  C356) *
             C32630 * C32618 -
         0.25 * std::pow(Pi, 2.5) *
             ((((C857 * C115 + C32991 * C122 + C858 * C256 + C32979 * C271 +
                 C859 * C257 + C32956 * C272) *
                    C114 +
                (C857 * C123 + C32991 * C136 + C858 * C270 + C32979 * C286 +
                 C859 * C273 + C32956 * C287) *
                    C32684) *
                   C854 +
               ((C897 + C898 + C899) * C114 + (C900 + C901 + C902) * C32684) *
                   C855 +
               C921 * C32945) *
                  C32644 * C32630 * C110 -
              (((C909 + C910 + C911) * C32684 + (C912 + C913 + C914) * C114) *
                   C32945 +
               ((C908 + C907 + C906) * C32684 + (C905 + C904 + C903) * C114) *
                   C855 +
               ((C902 + C901 + C900) * C32684 + (C899 + C898 + C897) * C114) *
                   C854) *
                  C32644 * C32630 * C111 +
              (C921 * C854 +
               ((C914 + C913 + C912) * C114 + (C911 + C910 + C909) * C32684) *
                   C855 +
               ((C857 * C119 + C32991 * C130 + C858 * C252 + C32979 * C263 +
                 C859 * C261 + C32956 * C280) *
                    C114 +
                (C857 * C131 + C32991 * C140 + C858 * C262 + C32979 * C282 +
                 C859 * C281 + C32956 * C291) *
                    C32684) *
                   C32945) *
                  C32644 * C32630 * C112) -
         0.25 * std::pow(Pi, 2.5) *
             ((((C857 * C115 + C32991 * C122 + C858 * C256 + C32979 * C271 +
                 C859 * C257 + C32956 * C272) *
                    C114 +
                (C857 * C123 + C32991 * C136 + C858 * C270 + C32979 * C286 +
                 C859 * C273 + C32956 * C287) *
                    C32684) *
                   C854 +
               ((C897 + C898 + C899) * C114 + (C900 + C901 + C902) * C32684) *
                   C855 +
               C921 * C32945) *
                  C32644 * C248 -
              (((C859 * C1037 + C32956 * C1049 + C858 * C277 + C32979 * C289 +
                 C857 * C266 + C32991 * C284) *
                    C32684 +
                (C859 * C1031 + C32956 * C1038 + C858 * C259 + C32979 * C276 +
                 C857 * C254 + C32991 * C267) *
                    C114) *
                   C32945 +
               ((C859 * C1039 + C32956 * C1050 + C858 * C275 + C32979 * C288 +
                 C857 * C268 + C32991 * C285) *
                    C32684 +
                (C859 * C1032 + C32956 * C1040 + C858 * C258 + C32979 * C274 +
                 C857 * C255 + C32991 * C269) *
                    C114) *
                   C855 +
               ((C859 * C1041 + C32956 * C1051 + C858 * C273 + C32979 * C287 +
                 C857 * C270 + C32991 * C286) *
                    C32684 +
                (C859 * C1033 + C32956 * C1042 + C858 * C257 + C32979 * C272 +
                 C857 * C256 + C32991 * C271) *
                    C114) *
                   C854) *
                  C32644 * C249 +
              (((C857 * C257 + C32991 * C272 + C858 * C1033 + C32979 * C1042 +
                 C859 * C1034 + C32956 * C1043) *
                    C114 +
                (C857 * C273 + C32991 * C287 + C858 * C1041 + C32979 * C1051 +
                 C859 * C1044 + C32956 * C1052) *
                    C32684) *
                   C854 +
               ((C857 * C258 + C32991 * C274 + C858 * C1032 + C32979 * C1040 +
                 C859 * C1035 + C32956 * C1045) *
                    C114 +
                (C857 * C275 + C32991 * C288 + C858 * C1039 + C32979 * C1050 +
                 C859 * C1046 + C32956 * C1053) *
                    C32684) *
                   C855 +
               ((C857 * C259 + C32991 * C276 + C858 * C1031 + C32979 * C1038 +
                 C859 * C1036 + C32956 * C1047) *
                    C114 +
                (C857 * C277 + C32991 * C289 + C858 * C1037 + C32979 * C1049 +
                 C859 * C1048 + C32956 * C1054) *
                    C32684) *
                   C32945) *
                  C32644 * C250) *
             C32618 +
         0.5 * std::pow(Pi, 2.5) *
             ((((C857 * C115 + C32991 * C122 + C858 * C256 + C32979 * C271 +
                 C859 * C257 + C32956 * C272) *
                    C114 +
                (C857 * C123 + C32991 * C136 + C858 * C270 + C32979 * C286 +
                 C859 * C273 + C32956 * C287) *
                    C32684) *
                   C854 +
               ((C897 + C898 + C899) * C114 + (C900 + C901 + C902) * C32684) *
                   C855 +
               C921 * C32945) *
                  C354 -
              (((C859 * C1174 + C32956 * C1192 + C858 * C731 + C32979 * C738 +
                 C857 * C371 + C32991 * C389) *
                    C32684 +
                (C859 * C1165 + C32956 * C1175 + C858 * C723 + C32979 * C730 +
                 C857 * C359 + C32991 * C372) *
                    C114) *
                   C32945 +
               ((C859 * C1176 + C32956 * C1193 + C858 * C729 + C32979 * C737 +
                 C857 * C373 + C32991 * C390) *
                    C32684 +
                (C859 * C1166 + C32956 * C1177 + C858 * C722 + C32979 * C728 +
                 C857 * C360 + C32991 * C374) *
                    C114) *
                   C855 +
               ((C859 * C1178 + C32956 * C1194 + C858 * C727 + C32979 * C736 +
                 C857 * C375 + C32991 * C391) *
                    C32684 +
                (C859 * C1167 + C32956 * C1179 + C858 * C721 + C32979 * C726 +
                 C857 * C361 + C32991 * C376) *
                    C114) *
                   C854) *
                  C355 +
              (((C857 * C362 + C32991 * C377 + C858 * C1168 + C32979 * C1180 +
                 C859 * C1169 + C32956 * C1181) *
                    C114 +
                (C857 * C378 + C32991 * C392 + C858 * C1182 + C32979 * C1195 +
                 C859 * C1183 + C32956 * C1196) *
                    C32684) *
                   C854 +
               ((C857 * C363 + C32991 * C379 + C858 * C1170 + C32979 * C1184 +
                 C859 * C1171 + C32956 * C1185) *
                    C114 +
                (C857 * C380 + C32991 * C393 + C858 * C1186 + C32979 * C1197 +
                 C859 * C1187 + C32956 * C1198) *
                    C32684) *
                   C855 +
               ((C857 * C364 + C32991 * C381 + C858 * C1172 + C32979 * C1188 +
                 C859 * C1173 + C32956 * C1189) *
                    C114 +
                (C857 * C382 + C32991 * C394 + C858 * C1190 + C32979 * C1199 +
                 C859 * C1191 + C32956 * C1200) *
                    C32684) *
                   C32945) *
                  C356) *
             C32630 * C32618 +
         0.5 * std::pow(Pi, 2.5) *
             ((((C113 * C115 + C32667 * C122) * C1844 +
                (C113 * C123 + C32667 * C136) * C32992 +
                (C113 * C361 + C32667 * C376) * C1845 +
                (C113 * C375 + C32667 * C391) * C32981 +
                (C113 * C362 + C32667 * C377) * C1846 +
                (C113 * C378 + C32667 * C392) * C32959) *
                   C854 +
               (C1848 + C1849 + C1850 + C1851 + C1879 + C1880) * C855 +
               C1888 * C32945) *
                  C32644 * C32630 * C110 -
              ((C1884 + C1885 + C1868 + C1869 + C1870 + C1871) * C32945 +
               (C1883 + C1882 + C1859 + C1858 + C1857 + C1856) * C855 +
               (C1880 + C1879 + C1851 + C1850 + C1849 + C1848) * C854) *
                  C32644 * C32630 * C111 +
              (C1888 * C854 +
               (C1871 + C1870 + C1869 + C1868 + C1885 + C1884) * C855 +
               (C170 * C1844 + C171 * C32992 + C625 * C1845 + C624 * C32981 +
                (C113 * C366 + C32667 * C385) * C1846 +
                (C113 * C386 + C32667 * C396) * C32959) *
                   C32945) *
                  C32644 * C32630 * C112) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C113 * C115 + C32667 * C122) * C1844 +
                (C113 * C123 + C32667 * C136) * C32992 +
                (C113 * C361 + C32667 * C376) * C1845 +
                (C113 * C375 + C32667 * C391) * C32981 +
                (C113 * C362 + C32667 * C377) * C1846 +
                (C113 * C378 + C32667 * C392) * C32959) *
                   C854 +
               (C1848 + C1849 + C1850 + C1851 + C1879 + C1880) * C855 +
               C1888 * C32945) *
                  C32644 * C248 -
              (((C113 * C1190 + C32667 * C1199) * C32959 +
                (C113 * C1172 + C32667 * C1188) * C1846 +
                (C113 * C731 + C32667 * C738) * C32981 +
                (C113 * C723 + C32667 * C730) * C1845 + C508 * C32992 +
                C509 * C1844) *
                   C32945 +
               ((C113 * C1186 + C32667 * C1197) * C32959 +
                (C113 * C1170 + C32667 * C1184) * C1846 +
                (C113 * C729 + C32667 * C737) * C32981 +
                (C113 * C722 + C32667 * C728) * C1845 + C510 * C32992 +
                C511 * C1844) *
                   C855 +
               ((C113 * C1182 + C32667 * C1195) * C32959 +
                (C113 * C1168 + C32667 * C1180) * C1846 +
                (C113 * C727 + C32667 * C736) * C32981 +
                (C113 * C721 + C32667 * C726) * C1845 +
                (C113 * C270 + C32667 * C286) * C32992 +
                (C113 * C256 + C32667 * C271) * C1844) *
                   C854) *
                  C32644 * C249 +
              (((C113 * C257 + C32667 * C272) * C1844 +
                (C113 * C273 + C32667 * C287) * C32992 +
                (C113 * C1167 + C32667 * C1179) * C1845 +
                (C113 * C1178 + C32667 * C1194) * C32981 +
                (C113 * C1169 + C32667 * C1181) * C1846 +
                (C113 * C1183 + C32667 * C1196) * C32959) *
                   C854 +
               ((C113 * C258 + C32667 * C274) * C1844 +
                (C113 * C275 + C32667 * C288) * C32992 +
                (C113 * C1166 + C32667 * C1177) * C1845 +
                (C113 * C1176 + C32667 * C1193) * C32981 +
                (C113 * C1171 + C32667 * C1185) * C1846 +
                (C113 * C1187 + C32667 * C1198) * C32959) *
                   C855 +
               ((C113 * C259 + C32667 * C276) * C1844 +
                (C113 * C277 + C32667 * C289) * C32992 +
                (C113 * C1165 + C32667 * C1175) * C1845 +
                (C113 * C1174 + C32667 * C1192) * C32981 +
                (C113 * C1173 + C32667 * C1189) * C1846 +
                (C113 * C1191 + C32667 * C1200) * C32959) *
                   C32945) *
                  C32644 * C250) *
             C32618) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C113 * C115 + C32667 * C122) * C1844 +
            (C113 * C123 + C32667 * C136) * C32992 + C2153 * C1845 +
            C2154 * C32981 + C2155 * C1846 + C2156 * C32959) *
               C854 +
           (C1848 + C1849 + C1850 + C1851 + C1879 + C1880) * C855 +
           C1888 * C32945) *
              C354 -
          ((C2157 * C32959 + C2158 * C1846 + C1876 * C32981 + C1875 * C1845 +
            C628 * C32992 + C629 * C1844) *
               C32945 +
           (C2159 * C32959 + C2160 * C1846 + C1873 * C32981 + C1872 * C1845 +
            C630 * C32992 + C631 * C1844) *
               C855 +
           (C2161 * C32959 + C2162 * C1846 + C2156 * C32981 + C2155 * C1845 +
            C2154 * C32992 + C2153 * C1844) *
               C854) *
              C355 +
          ((C2155 * C1844 + C2156 * C32992 + C2162 * C1845 + C2161 * C32981 +
            (C113 * C2111 + C32667 * C2120) * C1846 +
            (C113 * C2121 + C32667 * C2129) * C32959) *
               C854 +
           (C1872 * C1844 + C1873 * C32992 + C2160 * C1845 + C2159 * C32981 +
            (C113 * C2112 + C32667 * C2122) * C1846 +
            (C113 * C2123 + C32667 * C2130) * C32959) *
               C855 +
           (C1875 * C1844 + C1876 * C32992 + C2158 * C1845 + C2157 * C32981 +
            (C113 * C2113 + C32667 * C2124) * C1846 +
            (C113 * C2125 + C32667 * C2131) * C32959) *
               C32945) *
              C356) *
         C32630 * C32618) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         ((((C5477 * C115 + C5471 * C122 + C5478 * C256 + C5472 * C271 +
             C5479 * C257 + C32956 * C272) *
                C114 +
            (C5477 * C123 + C5471 * C136 + C5478 * C270 + C5472 * C286 +
             C5479 * C273 + C32956 * C287) *
                C32684) *
               C32988 +
           ((C5517 + C5518 + C5519) * C114 + (C5520 + C5521 + C5522) * C32684) *
               C32975 +
           C5541 * C32945) *
              C32644 * C32630 * C110 -
          (((C5529 + C5530 + C5531) * C32684 + (C5532 + C5533 + C5534) * C114) *
               C32945 +
           ((C5528 + C5527 + C5526) * C32684 + (C5525 + C5524 + C5523) * C114) *
               C32975 +
           ((C5522 + C5521 + C5520) * C32684 + (C5519 + C5518 + C5517) * C114) *
               C32988) *
              C32644 * C32630 * C111 +
          (C5541 * C32988 +
           ((C5534 + C5533 + C5532) * C114 + (C5531 + C5530 + C5529) * C32684) *
               C32975 +
           ((C5477 * C119 + C5471 * C130 + C5478 * C252 + C5472 * C263 +
             C5479 * C261 + C32956 * C280) *
                C114 +
            (C5477 * C131 + C5471 * C140 + C5478 * C262 + C5472 * C282 +
             C5479 * C281 + C32956 * C291) *
                C32684) *
               C32945) *
              C32644 * C32630 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         ((((C5477 * C115 + C5471 * C122 + C5478 * C256 + C5472 * C271 +
             C5479 * C257 + C32956 * C272) *
                C114 +
            (C5477 * C123 + C5471 * C136 + C5478 * C270 + C5472 * C286 +
             C5479 * C273 + C32956 * C287) *
                C32684) *
               C32988 +
           ((C5517 + C5518 + C5519) * C114 + (C5520 + C5521 + C5522) * C32684) *
               C32975 +
           C5541 * C32945) *
              C32644 * C248 -
          (((C5479 * C1037 + C32956 * C1049 + C5478 * C277 + C5472 * C289 +
             C5477 * C266 + C5471 * C284) *
                C32684 +
            (C5479 * C1031 + C32956 * C1038 + C5478 * C259 + C5472 * C276 +
             C5477 * C254 + C5471 * C267) *
                C114) *
               C32945 +
           ((C5479 * C1039 + C32956 * C1050 + C5478 * C275 + C5472 * C288 +
             C5477 * C268 + C5471 * C285) *
                C32684 +
            (C5479 * C1032 + C32956 * C1040 + C5478 * C258 + C5472 * C274 +
             C5477 * C255 + C5471 * C269) *
                C114) *
               C32975 +
           ((C5479 * C1041 + C32956 * C1051 + C5478 * C273 + C5472 * C287 +
             C5477 * C270 + C5471 * C286) *
                C32684 +
            (C5479 * C1033 + C32956 * C1042 + C5478 * C257 + C5472 * C272 +
             C5477 * C256 + C5471 * C271) *
                C114) *
               C32988) *
              C32644 * C249 +
          (((C5477 * C257 + C5471 * C272 + C5478 * C1033 + C5472 * C1042 +
             C5479 * C1034 + C32956 * C1043) *
                C114 +
            (C5477 * C273 + C5471 * C287 + C5478 * C1041 + C5472 * C1051 +
             C5479 * C1044 + C32956 * C1052) *
                C32684) *
               C32988 +
           ((C5477 * C258 + C5471 * C274 + C5478 * C1032 + C5472 * C1040 +
             C5479 * C1035 + C32956 * C1045) *
                C114 +
            (C5477 * C275 + C5471 * C288 + C5478 * C1039 + C5472 * C1050 +
             C5479 * C1046 + C32956 * C1053) *
                C32684) *
               C32975 +
           ((C5477 * C259 + C5471 * C276 + C5478 * C1031 + C5472 * C1038 +
             C5479 * C1036 + C32956 * C1047) *
                C114 +
            (C5477 * C277 + C5471 * C289 + C5478 * C1037 + C5472 * C1049 +
             C5479 * C1048 + C32956 * C1054) *
                C32684) *
               C32945) *
              C32644 * C250) *
         C32618) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C5477 * C115 + C5471 * C122 + C5478 * C256 + C5472 * C271 +
             C5479 * C257 + C32956 * C272) *
                C114 +
            (C5477 * C123 + C5471 * C136 + C5478 * C270 + C5472 * C286 +
             C5479 * C273 + C32956 * C287) *
                C32684) *
               C32988 +
           ((C5517 + C5518 + C5519) * C114 + (C5520 + C5521 + C5522) * C32684) *
               C32975 +
           C5541 * C32945) *
              C354 -
          (((C5479 * C1174 + C32956 * C1192 + C5478 * C731 + C5472 * C738 +
             C5477 * C371 + C5471 * C389) *
                C32684 +
            (C5479 * C1165 + C32956 * C1175 + C5478 * C723 + C5472 * C730 +
             C5477 * C359 + C5471 * C372) *
                C114) *
               C32945 +
           ((C5479 * C1176 + C32956 * C1193 + C5478 * C729 + C5472 * C737 +
             C5477 * C373 + C5471 * C390) *
                C32684 +
            (C5479 * C1166 + C32956 * C1177 + C5478 * C722 + C5472 * C728 +
             C5477 * C360 + C5471 * C374) *
                C114) *
               C32975 +
           ((C5479 * C1178 + C32956 * C1194 + C5478 * C727 + C5472 * C736 +
             C5477 * C375 + C5471 * C391) *
                C32684 +
            (C5479 * C1167 + C32956 * C1179 + C5478 * C721 + C5472 * C726 +
             C5477 * C361 + C5471 * C376) *
                C114) *
               C32988) *
              C355 +
          (((C5477 * C362 + C5471 * C377 + C5478 * C1168 + C5472 * C1180 +
             C5479 * C1169 + C32956 * C1181) *
                C114 +
            (C5477 * C378 + C5471 * C392 + C5478 * C1182 + C5472 * C1195 +
             C5479 * C1183 + C32956 * C1196) *
                C32684) *
               C32988 +
           ((C5477 * C363 + C5471 * C379 + C5478 * C1170 + C5472 * C1184 +
             C5479 * C1171 + C32956 * C1185) *
                C114 +
            (C5477 * C380 + C5471 * C393 + C5478 * C1186 + C5472 * C1197 +
             C5479 * C1187 + C32956 * C1198) *
                C32684) *
               C32975 +
           ((C5477 * C364 + C5471 * C381 + C5478 * C1172 + C5472 * C1188 +
             C5479 * C1173 + C32956 * C1189) *
                C114 +
            (C5477 * C382 + C5471 * C394 + C5478 * C1190 + C5472 * C1199 +
             C5479 * C1191 + C32956 * C1200) *
                C32684) *
               C32945) *
              C356) *
         C32630 * C32618) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         (((C6339 * C115 + C6333 * C122 + C6340 * C256 + C6334 * C271 +
            C6341 * C257 + C6335 * C272 + C6342 * C1033 + C6336 * C1042 +
            C6343 * C1034 + C6337 * C1043) *
               C114 +
           (C6339 * C123 + C6333 * C136 + C6340 * C270 + C6334 * C286 +
            C6341 * C273 + C6335 * C287 + C6342 * C1041 + C6336 * C1051 +
            C6343 * C1044 + C6337 * C1052) *
               C32684) *
              C32585 * C32644 * C32630 * C110 -
          ((C6343 * C1046 + C6337 * C1053 + C6342 * C1039 + C6336 * C1050 +
            C6341 * C275 + C6335 * C288 + C6340 * C268 + C6334 * C285 +
            C6339 * C125 + C6333 * C137) *
               C32684 +
           (C6343 * C1035 + C6337 * C1045 + C6342 * C1032 + C6336 * C1040 +
            C6341 * C258 + C6335 * C274 + C6340 * C255 + C6334 * C269 +
            C6339 * C116 + C6333 * C124) *
               C114) *
              C32585 * C32644 * C32630 * C111 +
          ((C6339 * C117 + C6333 * C126 + C6340 * C254 + C6334 * C267 +
            C6341 * C259 + C6335 * C276 + C6342 * C1031 + C6336 * C1038 +
            C6343 * C1036 + C6337 * C1047) *
               C114 +
           (C6339 * C127 + C6333 * C138 + C6340 * C266 + C6334 * C284 +
            C6341 * C277 + C6335 * C289 + C6342 * C1037 + C6336 * C1049 +
            C6343 * C1048 + C6337 * C1054) *
               C32684) *
              C32585 * C32644 * C32630 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         (((C6339 * C115 + C6333 * C122 + C6340 * C256 + C6334 * C271 +
            C6341 * C257 + C6335 * C272 + C6342 * C1033 + C6336 * C1042 +
            C6343 * C1034 + C6337 * C1043) *
               C114 +
           (C6339 * C123 + C6333 * C136 + C6340 * C270 + C6334 * C286 +
            C6341 * C273 + C6335 * C287 + C6342 * C1041 + C6336 * C1051 +
            C6343 * C1044 + C6337 * C1052) *
               C32684) *
              C32585 * C32644 * C248 -
          ((C6343 * C6408 + C6337 * C6412 + C6342 * C1044 + C6336 * C1052 +
            C6341 * C1041 + C6335 * C1051 + C6340 * C273 + C6334 * C287 +
            C6339 * C270 + C6333 * C286) *
               C32684 +
           (C6343 * C6406 + C6337 * C6409 + C6342 * C1034 + C6336 * C1043 +
            C6341 * C1033 + C6335 * C1042 + C6340 * C257 + C6334 * C272 +
            C6339 * C256 + C6333 * C271) *
               C114) *
              C32585 * C32644 * C249 +
          ((C6339 * C257 + C6333 * C272 + C6340 * C1033 + C6334 * C1042 +
            C6341 * C1034 + C6335 * C1043 + C6342 * C6406 + C6336 * C6409 +
            C6343 * C6407 + C6337 * C6410) *
               C114 +
           (C6339 * C273 + C6333 * C287 + C6340 * C1041 + C6334 * C1051 +
            C6341 * C1044 + C6335 * C1052 + C6342 * C6408 + C6336 * C6412 +
            C6343 * C6411 + C6337 * C6413) *
               C32684) *
              C32585 * C32644 * C250) *
         C32618) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C6339 * C115 + C6333 * C122 + C6340 * C256 + C6334 * C271 +
            C6341 * C257 + C6335 * C272 + C6342 * C1033 + C6336 * C1042 +
            C6343 * C1034 + C6337 * C1043) *
               C114 +
           (C6339 * C123 + C6333 * C136 + C6340 * C270 + C6334 * C286 +
            C6341 * C273 + C6335 * C287 + C6342 * C1041 + C6336 * C1051 +
            C6343 * C1044 + C6337 * C1052) *
               C32684) *
              C32585 * C354 -
          ((C6343 * C6479 + C6337 * C6485 + C6342 * C1723 + C6336 * C1728 +
            C6341 * C1178 + C6335 * C1194 + C6340 * C727 + C6334 * C736 +
            C6339 * C375 + C6333 * C391) *
               C32684 +
           (C6343 * C6476 + C6337 * C6480 + C6342 * C1719 + C6336 * C1722 +
            C6341 * C1167 + C6335 * C1179 + C6340 * C721 + C6334 * C726 +
            C6339 * C361 + C6333 * C376) *
               C114) *
              C32585 * C355 +
          ((C6339 * C362 + C6333 * C377 + C6340 * C1168 + C6334 * C1180 +
            C6341 * C1169 + C6335 * C1181 + C6342 * C6477 + C6336 * C6481 +
            C6343 * C6478 + C6337 * C6482) *
               C114 +
           (C6339 * C378 + C6333 * C392 + C6340 * C1182 + C6334 * C1195 +
            C6341 * C1183 + C6335 * C1196 + C6342 * C6483 + C6336 * C6486 +
            C6343 * C6484 + C6337 * C6487) *
               C32684) *
              C32585 * C356) *
         C32630 * C32618) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C5477 * C115 + C5471 * C122 + C5478 * C256 + C5472 * C271 +
            C5479 * C257 + C32956 * C272) *
               C1844 +
           (C5477 * C123 + C5471 * C136 + C5478 * C270 + C5472 * C286 +
            C5479 * C273 + C32956 * C287) *
               C32992 +
           (C5477 * C361 + C5471 * C376 + C5478 * C721 + C5472 * C726 +
            C5479 * C1167 + C32956 * C1179) *
               C1845 +
           (C5477 * C375 + C5471 * C391 + C5478 * C727 + C5472 * C736 +
            C5479 * C1178 + C32956 * C1194) *
               C32981 +
           (C5477 * C362 + C5471 * C377 + C5478 * C1168 + C5472 * C1180 +
            C5479 * C1169 + C32956 * C1181) *
               C1846 +
           (C5477 * C378 + C5471 * C392 + C5478 * C1182 + C5472 * C1195 +
            C5479 * C1183 + C32956 * C1196) *
               C32959) *
              C32585 * C32644 * C32630 * C110 -
          ((C5479 * C1187 + C32956 * C1198 + C5478 * C1186 + C5472 * C1197 +
            C5477 * C380 + C5471 * C393) *
               C32959 +
           (C5479 * C1171 + C32956 * C1185 + C5478 * C1170 + C5472 * C1184 +
            C5477 * C363 + C5471 * C379) *
               C1846 +
           (C6120 + C6121 + C6122) * C32981 + (C6123 + C6124 + C6125) * C1845 +
           (C5522 + C5521 + C5520) * C32992 + (C5519 + C5518 + C5517) * C1844) *
              C32585 * C32644 * C32630 * C111 +
          (C5537 * C1844 + C5538 * C32992 + (C6119 + C6118 + C6117) * C1845 +
           (C6116 + C6115 + C6114) * C32981 +
           (C5477 * C364 + C5471 * C381 + C5478 * C1172 + C5472 * C1188 +
            C5479 * C1173 + C32956 * C1189) *
               C1846 +
           (C5477 * C382 + C5471 * C394 + C5478 * C1190 + C5472 * C1199 +
            C5479 * C1191 + C32956 * C1200) *
               C32959) *
              C32585 * C32644 * C32630 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C5477 * C115 + C5471 * C122 + C5478 * C256 + C5472 * C271 +
            C5479 * C257 + C32956 * C272) *
               C1844 +
           (C5477 * C123 + C5471 * C136 + C5478 * C270 + C5472 * C286 +
            C5479 * C273 + C32956 * C287) *
               C32992 +
           (C5477 * C361 + C5471 * C376 + C5478 * C721 + C5472 * C726 +
            C5479 * C1167 + C32956 * C1179) *
               C1845 +
           (C5477 * C375 + C5471 * C391 + C5478 * C727 + C5472 * C736 +
            C5479 * C1178 + C32956 * C1194) *
               C32981 +
           (C5477 * C362 + C5471 * C377 + C5478 * C1168 + C5472 * C1180 +
            C5479 * C1169 + C32956 * C1181) *
               C1846 +
           (C5477 * C378 + C5471 * C392 + C5478 * C1182 + C5472 * C1195 +
            C5479 * C1183 + C32956 * C1196) *
               C32959) *
              C32585 * C32644 * C248 -
          ((C5479 * C6483 + C32956 * C6486 + C5478 * C1183 + C5472 * C1196 +
            C5477 * C1182 + C5471 * C1195) *
               C32959 +
           (C5479 * C6477 + C32956 * C6481 + C5478 * C1169 + C5472 * C1181 +
            C5477 * C1168 + C5471 * C1180) *
               C1846 +
           (C5479 * C1723 + C32956 * C1728 + C5478 * C1178 + C5472 * C1194 +
            C5477 * C727 + C5471 * C736) *
               C32981 +
           (C5479 * C1719 + C32956 * C1722 + C5478 * C1167 + C5472 * C1179 +
            C5477 * C721 + C5471 * C726) *
               C1845 +
           (C5479 * C1041 + C32956 * C1051 + C5478 * C273 + C5472 * C287 +
            C5477 * C270 + C5471 * C286) *
               C32992 +
           (C5479 * C1033 + C32956 * C1042 + C5478 * C257 + C5472 * C272 +
            C5477 * C256 + C5471 * C271) *
               C1844) *
              C32585 * C32644 * C249 +
          ((C5477 * C257 + C5471 * C272 + C5478 * C1033 + C5472 * C1042 +
            C5479 * C1034 + C32956 * C1043) *
               C1844 +
           (C5477 * C273 + C5471 * C287 + C5478 * C1041 + C5472 * C1051 +
            C5479 * C1044 + C32956 * C1052) *
               C32992 +
           (C5477 * C1167 + C5471 * C1179 + C5478 * C1719 + C5472 * C1722 +
            C5479 * C6476 + C32956 * C6480) *
               C1845 +
           (C5477 * C1178 + C5471 * C1194 + C5478 * C1723 + C5472 * C1728 +
            C5479 * C6479 + C32956 * C6485) *
               C32981 +
           (C5477 * C1169 + C5471 * C1181 + C5478 * C6477 + C5472 * C6481 +
            C5479 * C6478 + C32956 * C6482) *
               C1846 +
           (C5477 * C1183 + C5471 * C1196 + C5478 * C6483 + C5472 * C6486 +
            C5479 * C6484 + C32956 * C6487) *
               C32959) *
              C32585 * C32644 * C250) *
         C32618) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C5477 * C115 + C5471 * C122 + C5478 * C256 + C5472 * C271 +
            C5479 * C257 + C32956 * C272) *
               C1844 +
           (C5477 * C123 + C5471 * C136 + C5478 * C270 + C5472 * C286 +
            C5479 * C273 + C32956 * C287) *
               C32992 +
           (C7125 + C7126 + C7127) * C1845 + (C7128 + C7129 + C7130) * C32981 +
           C7145 * C1846 + C7146 * C32959) *
              C32585 * C354 -
          ((C7137 + C7138 + C7139) * C32959 + (C7140 + C7141 + C7142) * C1846 +
           (C7136 + C7135 + C7134) * C32981 + (C7133 + C7132 + C7131) * C1845 +
           (C7130 + C7129 + C7128) * C32992 + (C7127 + C7126 + C7125) * C1844) *
              C32585 * C355 +
          (C7145 * C1844 + C7146 * C32992 + (C7142 + C7141 + C7140) * C1845 +
           (C7139 + C7138 + C7137) * C32981 +
           (C5477 * C2111 + C5471 * C2120 + C5478 * C7077 + C5472 * C7081 +
            C5479 * C7078 + C32956 * C7082) *
               C1846 +
           (C5477 * C2121 + C5471 * C2129 + C5478 * C7083 + C5472 * C7086 +
            C5479 * C7084 + C32956 * C7087) *
               C32959) *
              C32585 * C356) *
         C32630 * C32618) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C32667 * C122) * C10355 +
            (C113 * C123 + C32667 * C136) * C10352 + C2153 * C10356 +
            C2154 * C10353 + C2155 * C10357 + C2156 * C32959) *
               C32988 +
           (C10359 + C10360 + C10361 + C10362 + C10363 + C10364) * C32975 +
           C10381 * C32945) *
              C32644 * C32630 * C110 -
          ((C10371 + C10372 + C10373 + C10374 + C10375 + C10376) * C32945 +
           (C10370 + C10369 + C10368 + C10367 + C10366 + C10365) * C32975 +
           (C10364 + C10363 + C10362 + C10361 + C10360 + C10359) * C32988) *
              C32644 * C32630 * C111 +
          (C10381 * C32988 +
           (C10376 + C10375 + C10374 + C10373 + C10372 + C10371) * C32975 +
           (C170 * C10355 + C171 * C10352 + C625 * C10356 + C624 * C10353 +
            (C113 * C366 + C32667 * C385) * C10357 +
            (C113 * C386 + C32667 * C396) * C32959) *
               C32945) *
              C32644 * C32630 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C32667 * C122) * C10355 +
            (C113 * C123 + C32667 * C136) * C10352 + C2153 * C10356 +
            C2154 * C10353 + C2155 * C10357 + C2156 * C32959) *
               C32988 +
           (C10359 + C10360 + C10361 + C10362 + C10363 + C10364) * C32975 +
           C10381 * C32945) *
              C32644 * C248 -
          ((C2333 * C32959 + C2334 * C10357 + C2335 * C10353 + C2336 * C10356 +
            C508 * C10352 + C509 * C10355) *
               C32945 +
           (C2337 * C32959 + C2338 * C10357 + C2339 * C10353 + C2340 * C10356 +
            C510 * C10352 + C511 * C10355) *
               C32975 +
           (C2680 * C32959 + C2679 * C10357 + C2678 * C10353 + C2677 * C10356 +
            (C113 * C270 + C32667 * C286) * C10352 +
            (C113 * C256 + C32667 * C271) * C10355) *
               C32988) *
              C32644 * C249 +
          (((C113 * C257 + C32667 * C272) * C10355 +
            (C113 * C273 + C32667 * C287) * C10352 +
            (C113 * C1167 + C32667 * C1179) * C10356 +
            (C113 * C1178 + C32667 * C1194) * C10353 +
            (C113 * C1169 + C32667 * C1181) * C10357 +
            (C113 * C1183 + C32667 * C1196) * C32959) *
               C32988 +
           ((C113 * C258 + C32667 * C274) * C10355 +
            (C113 * C275 + C32667 * C288) * C10352 +
            (C113 * C1166 + C32667 * C1177) * C10356 +
            (C113 * C1176 + C32667 * C1193) * C10353 +
            (C113 * C1171 + C32667 * C1185) * C10357 +
            (C113 * C1187 + C32667 * C1198) * C32959) *
               C32975 +
           ((C113 * C259 + C32667 * C276) * C10355 +
            (C113 * C277 + C32667 * C289) * C10352 +
            (C113 * C1165 + C32667 * C1175) * C10356 +
            (C113 * C1174 + C32667 * C1192) * C10353 +
            (C113 * C1173 + C32667 * C1189) * C10357 +
            (C113 * C1191 + C32667 * C1200) * C32959) *
               C32945) *
              C32644 * C250) *
         C32618) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C113 * C115 + C32667 * C122) * C10355 +
            (C113 * C123 + C32667 * C136) * C10352 + C2153 * C10356 +
            C2154 * C10353 + C2155 * C10357 + C2156 * C32959) *
               C32988 +
           (C10359 + C10360 + C10361 + C10362 + C10363 + C10364) * C32975 +
           C10381 * C32945) *
              C354 -
          ((C2157 * C32959 + C2158 * C10357 + C1876 * C10353 + C1875 * C10356 +
            C628 * C10352 + C629 * C10355) *
               C32945 +
           (C2159 * C32959 + C2160 * C10357 + C1873 * C10353 + C1872 * C10356 +
            C630 * C10352 + C631 * C10355) *
               C32975 +
           (C2161 * C32959 + C2162 * C10357 + C2156 * C10353 + C2155 * C10356 +
            C2154 * C10352 + C2153 * C10355) *
               C32988) *
              C355 +
          ((C2155 * C10355 + C2156 * C10352 + C2162 * C10356 + C2161 * C10353 +
            (C113 * C2111 + C32667 * C2120) * C10357 +
            (C113 * C2121 + C32667 * C2129) * C32959) *
               C32988 +
           (C1872 * C10355 + C1873 * C10352 + C2160 * C10356 + C2159 * C10353 +
            (C113 * C2112 + C32667 * C2122) * C10357 +
            (C113 * C2123 + C32667 * C2130) * C32959) *
               C32975 +
           (C1875 * C10355 + C1876 * C10352 + C2158 * C10356 + C2157 * C10353 +
            (C113 * C2113 + C32667 * C2124) * C10357 +
            (C113 * C2125 + C32667 * C2131) * C32959) *
               C32945) *
              C356) *
         C32630 * C32618) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C857 * C115 + C32991 * C122 + C858 * C256 + C32979 * C271 +
            C859 * C257 + C32956 * C272) *
               C10355 +
           (C857 * C123 + C32991 * C136 + C858 * C270 + C32979 * C286 +
            C859 * C273 + C32956 * C287) *
               C10352 +
           (C857 * C361 + C32991 * C376 + C858 * C721 + C32979 * C726 +
            C859 * C1167 + C32956 * C1179) *
               C10356 +
           (C857 * C375 + C32991 * C391 + C858 * C727 + C32979 * C736 +
            C859 * C1178 + C32956 * C1194) *
               C10353 +
           (C857 * C362 + C32991 * C377 + C858 * C1168 + C32979 * C1180 +
            C859 * C1169 + C32956 * C1181) *
               C10357 +
           (C857 * C378 + C32991 * C392 + C858 * C1182 + C32979 * C1195 +
            C859 * C1183 + C32956 * C1196) *
               C32959) *
              C32585 * C32644 * C32630 * C110 -
          ((C859 * C1187 + C32956 * C1198 + C858 * C1186 + C32979 * C1197 +
            C857 * C380 + C32991 * C393) *
               C32959 +
           (C859 * C1171 + C32956 * C1185 + C858 * C1170 + C32979 * C1184 +
            C857 * C363 + C32991 * C379) *
               C10357 +
           (C1568 + C1569 + C1570) * C10353 + (C1571 + C1572 + C1573) * C10356 +
           (C902 + C901 + C900) * C10352 + (C899 + C898 + C897) * C10355) *
              C32585 * C32644 * C32630 * C111 +
          (C917 * C10355 + C918 * C10352 + (C1567 + C1566 + C1565) * C10356 +
           (C1564 + C1563 + C1562) * C10353 +
           (C857 * C364 + C32991 * C381 + C858 * C1172 + C32979 * C1188 +
            C859 * C1173 + C32956 * C1189) *
               C10357 +
           (C857 * C382 + C32991 * C394 + C858 * C1190 + C32979 * C1199 +
            C859 * C1191 + C32956 * C1200) *
               C32959) *
              C32585 * C32644 * C32630 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C857 * C115 + C32991 * C122 + C858 * C256 + C32979 * C271 +
            C859 * C257 + C32956 * C272) *
               C10355 +
           (C857 * C123 + C32991 * C136 + C858 * C270 + C32979 * C286 +
            C859 * C273 + C32956 * C287) *
               C10352 +
           (C857 * C361 + C32991 * C376 + C858 * C721 + C32979 * C726 +
            C859 * C1167 + C32956 * C1179) *
               C10356 +
           (C857 * C375 + C32991 * C391 + C858 * C727 + C32979 * C736 +
            C859 * C1178 + C32956 * C1194) *
               C10353 +
           (C857 * C362 + C32991 * C377 + C858 * C1168 + C32979 * C1180 +
            C859 * C1169 + C32956 * C1181) *
               C10357 +
           (C857 * C378 + C32991 * C392 + C858 * C1182 + C32979 * C1195 +
            C859 * C1183 + C32956 * C1196) *
               C32959) *
              C32585 * C32644 * C248 -
          ((C859 * C6483 + C32956 * C6486 + C858 * C1183 + C32979 * C1196 +
            C857 * C1182 + C32991 * C1195) *
               C32959 +
           (C859 * C6477 + C32956 * C6481 + C858 * C1169 + C32979 * C1181 +
            C857 * C1168 + C32991 * C1180) *
               C10357 +
           (C859 * C1723 + C32956 * C1728 + C858 * C1178 + C32979 * C1194 +
            C857 * C727 + C32991 * C736) *
               C10353 +
           (C859 * C1719 + C32956 * C1722 + C858 * C1167 + C32979 * C1179 +
            C857 * C721 + C32991 * C726) *
               C10356 +
           (C859 * C1041 + C32956 * C1051 + C858 * C273 + C32979 * C287 +
            C857 * C270 + C32991 * C286) *
               C10352 +
           (C859 * C1033 + C32956 * C1042 + C858 * C257 + C32979 * C272 +
            C857 * C256 + C32991 * C271) *
               C10355) *
              C32585 * C32644 * C249 +
          ((C857 * C257 + C32991 * C272 + C858 * C1033 + C32979 * C1042 +
            C859 * C1034 + C32956 * C1043) *
               C10355 +
           (C857 * C273 + C32991 * C287 + C858 * C1041 + C32979 * C1051 +
            C859 * C1044 + C32956 * C1052) *
               C10352 +
           (C857 * C1167 + C32991 * C1179 + C858 * C1719 + C32979 * C1722 +
            C859 * C6476 + C32956 * C6480) *
               C10356 +
           (C857 * C1178 + C32991 * C1194 + C858 * C1723 + C32979 * C1728 +
            C859 * C6479 + C32956 * C6485) *
               C10353 +
           (C857 * C1169 + C32991 * C1181 + C858 * C6477 + C32979 * C6481 +
            C859 * C6478 + C32956 * C6482) *
               C10357 +
           (C857 * C1183 + C32991 * C1196 + C858 * C6483 + C32979 * C6486 +
            C859 * C6484 + C32956 * C6487) *
               C32959) *
              C32585 * C32644 * C250) *
         C32618) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C857 * C115 + C32991 * C122 + C858 * C256 + C32979 * C271 +
            C859 * C257 + C32956 * C272) *
               C10355 +
           (C857 * C123 + C32991 * C136 + C858 * C270 + C32979 * C286 +
            C859 * C273 + C32956 * C287) *
               C10352 +
           (C11430 + C11431 + C11432) * C10356 +
           (C11433 + C11434 + C11435) * C10353 + C11450 * C10357 +
           C11451 * C32959) *
              C32585 * C354 -
          ((C11442 + C11443 + C11444) * C32959 +
           (C11445 + C11446 + C11447) * C10357 +
           (C11441 + C11440 + C11439) * C10353 +
           (C11438 + C11437 + C11436) * C10356 +
           (C11435 + C11434 + C11433) * C10352 +
           (C11432 + C11431 + C11430) * C10355) *
              C32585 * C355 +
          (C11450 * C10355 + C11451 * C10352 +
           (C11447 + C11446 + C11445) * C10356 +
           (C11444 + C11443 + C11442) * C10353 +
           (C857 * C2111 + C32991 * C2120 + C858 * C7077 + C32979 * C7081 +
            C859 * C7078 + C32956 * C7082) *
               C10357 +
           (C857 * C2121 + C32991 * C2129 + C858 * C7083 + C32979 * C7086 +
            C859 * C7084 + C32956 * C7087) *
               C32959) *
              C32585 * C356) *
         C32630 * C32618) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C113 * C115 + C32667 * C122) * C12010 +
           (C113 * C123 + C32667 * C136) * C12005 + C2153 * C12011 +
           C2154 * C12006 + C2155 * C12012 + C2156 * C12007 + C2162 * C12013 +
           C2161 * C12008 + (C113 * C2111 + C32667 * C2120) * C12014 +
           (C113 * C2121 + C32667 * C2129) * C12009) *
              C32585 * C32644 * C32630 * C110 -
          ((C113 * C2123 + C32667 * C2130) * C12009 +
           (C113 * C2112 + C32667 * C2122) * C12014 + C2159 * C12008 +
           C2160 * C12013 + C1873 * C12007 + C1872 * C12012 + C630 * C12006 +
           C631 * C12011 + C165 * C12005 + C164 * C12010) *
              C32585 * C32644 * C32630 * C111 +
          (C166 * C12010 + C167 * C12005 + C629 * C12011 + C628 * C12006 +
           C1875 * C12012 + C1876 * C12007 + C2158 * C12013 + C2157 * C12008 +
           (C113 * C2113 + C32667 * C2124) * C12014 +
           (C113 * C2125 + C32667 * C2131) * C12009) *
              C32585 * C32644 * C32630 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C113 * C115 + C32667 * C122) * C12010 +
           (C113 * C123 + C32667 * C136) * C12005 + C2153 * C12011 +
           C2154 * C12006 + C2155 * C12012 + C2156 * C12007 + C2162 * C12013 +
           C2161 * C12008 + (C113 * C2111 + C32667 * C2120) * C12014 +
           (C113 * C2121 + C32667 * C2129) * C12009) *
              C32585 * C32644 * C248 -
          ((C113 * C7083 + C32667 * C7086) * C12009 +
           (C113 * C7077 + C32667 * C7081) * C12014 +
           (C113 * C2660 + C32667 * C2665) * C12008 +
           (C113 * C2656 + C32667 * C2659) * C12013 + C2680 * C12007 +
           C2679 * C12012 + C2678 * C12006 + C2677 * C12011 +
           (C113 * C270 + C32667 * C286) * C12005 +
           (C113 * C256 + C32667 * C271) * C12010) *
              C32585 * C32644 * C249 +
          ((C113 * C257 + C32667 * C272) * C12010 +
           (C113 * C273 + C32667 * C287) * C12005 +
           (C113 * C1167 + C32667 * C1179) * C12011 +
           (C113 * C1178 + C32667 * C1194) * C12006 +
           (C113 * C1169 + C32667 * C1181) * C12012 +
           (C113 * C1183 + C32667 * C1196) * C12007 +
           (C113 * C7076 + C32667 * C7080) * C12013 +
           (C113 * C7079 + C32667 * C7085) * C12008 +
           (C113 * C7078 + C32667 * C7082) * C12014 +
           (C113 * C7084 + C32667 * C7087) * C12009) *
              C32585 * C32644 * C250) *
         C32618) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C113 * C115 + C32667 * C122) * C12010 +
           (C113 * C123 + C32667 * C136) * C12005 + C2153 * C12011 +
           C2154 * C12006 + C2155 * C12012 + C2156 * C12007 + C2162 * C12013 +
           C2161 * C12008 + C12156 * C12014 + C12157 * C12009) *
              C32585 * C354 -
          (C12158 * C12009 + C12159 * C12014 + C12157 * C12008 +
           C12156 * C12013 + C2161 * C12007 + C2162 * C12012 + C2156 * C12006 +
           C2155 * C12011 + C2154 * C12005 + C2153 * C12010) *
              C32585 * C355 +
          (C2155 * C12010 + C2156 * C12005 + C2162 * C12011 + C2161 * C12006 +
           C12156 * C12012 + C12157 * C12007 + C12159 * C12013 +
           C12158 * C12008 + (C113 * C12140 + C32667 * C12143) * C12014 +
           (C113 * C12144 + C32667 * C12146) * C12009) *
              C32585 * C356) *
         C32630 * C32618) /
            (p * q * std::sqrt(p + q));
    d2ee[63] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C113 * C115 + C32667 * C122) * C114 +
                 (C113 * C123 + C32667 * C136) * C32684) *
                    C103 +
                (C174 + C175) * C104 + C184 * C105 + C185 * C106 +
                C186 * C107) *
                   C601 -
               ((C632 + C633) * C107 + (C634 + C635) * C106 +
                (C636 + C637) * C105 + (C638 + C639) * C104 +
                ((C113 * C375 + C32667 * C391) * C32684 +
                 (C113 * C361 + C32667 * C376) * C114) *
                    C103) *
                   C602) *
                  C32630 * C481 +
              (((C639 + C638) * C103 + (C637 + C636) * C104 +
                (C635 + C634) * C105 + (C633 + C632) * C106 +
                ((C113 * C603 + C32667 * C604) * C114 +
                 (C113 * C605 + C32667 * C606) * C32684) *
                    C107) *
                   C602 -
               ((C182 + C183) * C107 + (C181 + C180) * C106 +
                (C179 + C178) * C105 + (C177 + C176) * C104 +
                (C175 + C174) * C103) *
                   C601) *
                  C32630 * C482) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C857 * C115 + C32991 * C122 + C858 * C256 + C32979 * C271 +
                  C859 * C257 + C32956 * C272) *
                     C114 +
                 (C857 * C123 + C32991 * C136 + C858 * C270 + C32979 * C286 +
                  C859 * C273 + C32956 * C287) *
                     C32684) *
                    C854 +
                ((C897 + C898 + C899) * C114 + (C900 + C901 + C902) * C32684) *
                    C855 +
                C921 * C32945) *
                   C601 -
               (((C1562 + C1563 + C1564) * C32684 +
                 (C1565 + C1566 + C1567) * C114) *
                    C32945 +
                ((C1568 + C1569 + C1570) * C32684 +
                 (C1571 + C1572 + C1573) * C114) *
                    C855 +
                ((C859 * C1178 + C32956 * C1194 + C858 * C727 + C32979 * C736 +
                  C857 * C375 + C32991 * C391) *
                     C32684 +
                 (C859 * C1167 + C32956 * C1179 + C858 * C721 + C32979 * C726 +
                  C857 * C361 + C32991 * C376) *
                     C114) *
                    C854) *
                   C602) *
                  C32630 * C481 +
              ((((C1573 + C1572 + C1571) * C114 +
                 (C1570 + C1569 + C1568) * C32684) *
                    C854 +
                ((C1567 + C1566 + C1565) * C114 +
                 (C1564 + C1563 + C1562) * C32684) *
                    C855 +
                ((C857 * C358 + C32991 * C370 + C858 * C724 + C32979 * C732 +
                  C859 * C1533 + C32956 * C1534) *
                     C114 +
                 (C857 * C369 + C32991 * C388 + C858 * C733 + C32979 * C739 +
                  C859 * C1535 + C32956 * C1536) *
                     C32684) *
                    C32945) *
                   C602 -
               (((C909 + C910 + C911) * C32684 + (C912 + C913 + C914) * C114) *
                    C32945 +
                ((C908 + C907 + C906) * C32684 + (C905 + C904 + C903) * C114) *
                    C855 +
                ((C902 + C901 + C900) * C32684 + (C899 + C898 + C897) * C114) *
                    C854) *
                   C601) *
                  C32630 * C482)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C32667 * C122) * C1844 +
             (C113 * C123 + C32667 * C136) * C32992 + C2153 * C1845 +
             C2154 * C32981 + C2155 * C1846 + C2156 * C32959) *
                C854 +
            (C1848 + C1849 + C1850 + C1851 + C1879 + C1880) * C855 +
            C1888 * C32945) *
               C601 -
           ((C2499 + C2500 + C2501 + C2502 + C2503 + C2504) * C32945 +
            (C2505 + C2506 + C2507 + C2508 + C2509 + C2510) * C855 +
            (C2161 * C32959 + C2162 * C1846 + C2156 * C32981 + C2155 * C1845 +
             C2154 * C32992 + C2153 * C1844) *
                C854) *
               C602) *
              C32630 * C481 +
          (((C2510 + C2509 + C2508 + C2507 + C2506 + C2505) * C854 +
            (C2504 + C2503 + C2502 + C2501 + C2500 + C2499) * C855 +
            (C627 * C1844 + C626 * C32992 + C1878 * C1845 + C1877 * C32981 +
             (C113 * C2494 + C32667 * C2495) * C1846 +
             (C113 * C2496 + C32667 * C2497) * C32959) *
                C32945) *
               C602 -
           ((C1884 + C1885 + C1868 + C1869 + C1870 + C1871) * C32945 +
            (C1883 + C1882 + C1859 + C1858 + C1857 + C1856) * C855 +
            (C1880 + C1879 + C1851 + C1850 + C1849 + C1848) * C854) *
               C601) *
              C32630 * C482)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C5477 * C115 + C5471 * C122 + C5478 * C256 + C5472 * C271 +
              C5479 * C257 + C32956 * C272) *
                 C114 +
             (C5477 * C123 + C5471 * C136 + C5478 * C270 + C5472 * C286 +
              C5479 * C273 + C32956 * C287) *
                 C32684) *
                C32988 +
            ((C5517 + C5518 + C5519) * C114 +
             (C5520 + C5521 + C5522) * C32684) *
                C32975 +
            C5541 * C32945) *
               C601 -
           (((C6114 + C6115 + C6116) * C32684 +
             (C6117 + C6118 + C6119) * C114) *
                C32945 +
            ((C6120 + C6121 + C6122) * C32684 +
             (C6123 + C6124 + C6125) * C114) *
                C32975 +
            ((C5479 * C1178 + C32956 * C1194 + C5478 * C727 + C5472 * C736 +
              C5477 * C375 + C5471 * C391) *
                 C32684 +
             (C5479 * C1167 + C32956 * C1179 + C5478 * C721 + C5472 * C726 +
              C5477 * C361 + C5471 * C376) *
                 C114) *
                C32988) *
               C602) *
              C32630 * C481 +
          ((((C6125 + C6124 + C6123) * C114 +
             (C6122 + C6121 + C6120) * C32684) *
                C32988 +
            ((C6119 + C6118 + C6117) * C114 +
             (C6116 + C6115 + C6114) * C32684) *
                C32975 +
            ((C5477 * C358 + C5471 * C370 + C5478 * C724 + C5472 * C732 +
              C5479 * C1533 + C32956 * C1534) *
                 C114 +
             (C5477 * C369 + C5471 * C388 + C5478 * C733 + C5472 * C739 +
              C5479 * C1535 + C32956 * C1536) *
                 C32684) *
                C32945) *
               C602 -
           (((C5529 + C5530 + C5531) * C32684 +
             (C5532 + C5533 + C5534) * C114) *
                C32945 +
            ((C5528 + C5527 + C5526) * C32684 +
             (C5525 + C5524 + C5523) * C114) *
                C32975 +
            ((C5522 + C5521 + C5520) * C32684 +
             (C5519 + C5518 + C5517) * C114) *
                C32988) *
               C601) *
              C32630 * C482)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C6339 * C115 + C6333 * C122 + C6340 * C256 + C6334 * C271 +
             C6341 * C257 + C6335 * C272 + C6342 * C1033 + C6336 * C1042 +
             C6343 * C1034 + C6337 * C1043) *
                C114 +
            (C6339 * C123 + C6333 * C136 + C6340 * C270 + C6334 * C286 +
             C6341 * C273 + C6335 * C287 + C6342 * C1041 + C6336 * C1051 +
             C6343 * C1044 + C6337 * C1052) *
                C32684) *
               C32585 * C601 -
           ((C6343 * C6479 + C6337 * C6485 + C6342 * C1723 + C6336 * C1728 +
             C6341 * C1178 + C6335 * C1194 + C6340 * C727 + C6334 * C736 +
             C6339 * C375 + C6333 * C391) *
                C32684 +
            (C6343 * C6476 + C6337 * C6480 + C6342 * C1719 + C6336 * C1722 +
             C6341 * C1167 + C6335 * C1179 + C6340 * C721 + C6334 * C726 +
             C6339 * C361 + C6333 * C376) *
                C114) *
               C32585 * C602) *
              C32630 * C481 +
          (((C6339 * C360 + C6333 * C374 + C6340 * C722 + C6334 * C728 +
             C6341 * C1166 + C6335 * C1177 + C6342 * C1720 + C6336 * C1724 +
             C6343 * C6656 + C6337 * C6657) *
                C114 +
            (C6339 * C373 + C6333 * C390 + C6340 * C729 + C6334 * C737 +
             C6341 * C1176 + C6335 * C1193 + C6342 * C1725 + C6336 * C1729 +
             C6343 * C6658 + C6337 * C6659) *
                C32684) *
               C32585 * C602 -
           ((C6343 * C1046 + C6337 * C1053 + C6342 * C1039 + C6336 * C1050 +
             C6341 * C275 + C6335 * C288 + C6340 * C268 + C6334 * C285 +
             C6339 * C125 + C6333 * C137) *
                C32684 +
            (C6343 * C1035 + C6337 * C1045 + C6342 * C1032 + C6336 * C1040 +
             C6341 * C258 + C6335 * C274 + C6340 * C255 + C6334 * C269 +
             C6339 * C116 + C6333 * C124) *
                C114) *
               C32585 * C601) *
              C32630 * C482)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C5477 * C115 + C5471 * C122 + C5478 * C256 + C5472 * C271 +
             C5479 * C257 + C32956 * C272) *
                C1844 +
            (C5477 * C123 + C5471 * C136 + C5478 * C270 + C5472 * C286 +
             C5479 * C273 + C32956 * C287) *
                C32992 +
            (C7125 + C7126 + C7127) * C1845 + (C7128 + C7129 + C7130) * C32981 +
            C7145 * C1846 + C7146 * C32959) *
               C32585 * C601 -
           ((C7137 + C7138 + C7139) * C32959 + (C7140 + C7141 + C7142) * C1846 +
            (C7136 + C7135 + C7134) * C32981 + (C7133 + C7132 + C7131) * C1845 +
            (C7130 + C7129 + C7128) * C32992 +
            (C7127 + C7126 + C7125) * C1844) *
               C32585 * C602) *
              C32630 * C481 +
          (((C6125 + C6124 + C6123) * C1844 + (C6122 + C6121 + C6120) * C32992 +
            (C7459 + C7460 + C7461) * C1845 + (C7462 + C7463 + C7464) * C32981 +
            (C5477 * C2109 + C5471 * C2117 + C5478 * C2657 + C5472 * C2661 +
             C5479 * C7442 + C32956 * C7443) *
                C1846 +
            (C5477 * C2116 + C5471 * C2127 + C5478 * C2662 + C5472 * C2666 +
             C5479 * C7444 + C32956 * C7445) *
                C32959) *
               C32585 * C602 -
           ((C7464 + C7463 + C7462) * C32959 + (C7461 + C7460 + C7459) * C1846 +
            (C6120 + C6121 + C6122) * C32981 + (C6123 + C6124 + C6125) * C1845 +
            (C5522 + C5521 + C5520) * C32992 +
            (C5519 + C5518 + C5517) * C1844) *
               C32585 * C601) *
              C32630 * C482)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C32667 * C122) * C10355 +
             (C113 * C123 + C32667 * C136) * C10352 + C2153 * C10356 +
             C2154 * C10353 + C2155 * C10357 + C2156 * C32959) *
                C32988 +
            (C10359 + C10360 + C10361 + C10362 + C10363 + C10364) * C32975 +
            C10381 * C32945) *
               C601 -
           ((C10906 + C10907 + C10908 + C10909 + C10910 + C10911) * C32945 +
            (C10912 + C10913 + C10914 + C10915 + C10916 + C10917) * C32975 +
            (C2161 * C32959 + C2162 * C10357 + C2156 * C10353 + C2155 * C10356 +
             C2154 * C10352 + C2153 * C10355) *
                C32988) *
               C602) *
              C32630 * C481 +
          (((C10917 + C10916 + C10915 + C10914 + C10913 + C10912) * C32988 +
            (C10911 + C10910 + C10909 + C10908 + C10907 + C10906) * C32975 +
            (C627 * C10355 + C626 * C10352 + C1878 * C10356 + C1877 * C10353 +
             (C113 * C2494 + C32667 * C2495) * C10357 +
             (C113 * C2496 + C32667 * C2497) * C32959) *
                C32945) *
               C602 -
           ((C10371 + C10372 + C10373 + C10374 + C10375 + C10376) * C32945 +
            (C10370 + C10369 + C10368 + C10367 + C10366 + C10365) * C32975 +
            (C10364 + C10363 + C10362 + C10361 + C10360 + C10359) * C32988) *
               C601) *
              C32630 * C482)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C857 * C115 + C32991 * C122 + C858 * C256 + C32979 * C271 +
             C859 * C257 + C32956 * C272) *
                C10355 +
            (C857 * C123 + C32991 * C136 + C858 * C270 + C32979 * C286 +
             C859 * C273 + C32956 * C287) *
                C10352 +
            (C11430 + C11431 + C11432) * C10356 +
            (C11433 + C11434 + C11435) * C10353 + C11450 * C10357 +
            C11451 * C32959) *
               C32585 * C601 -
           ((C11442 + C11443 + C11444) * C32959 +
            (C11445 + C11446 + C11447) * C10357 +
            (C11441 + C11440 + C11439) * C10353 +
            (C11438 + C11437 + C11436) * C10356 +
            (C11435 + C11434 + C11433) * C10352 +
            (C11432 + C11431 + C11430) * C10355) *
               C32585 * C602) *
              C32630 * C481 +
          (((C1573 + C1572 + C1571) * C10355 +
            (C1570 + C1569 + C1568) * C10352 +
            (C11756 + C11757 + C11758) * C10356 +
            (C11759 + C11760 + C11761) * C10353 +
            (C857 * C2109 + C32991 * C2117 + C858 * C2657 + C32979 * C2661 +
             C859 * C7442 + C32956 * C7443) *
                C10357 +
            (C857 * C2116 + C32991 * C2127 + C858 * C2662 + C32979 * C2666 +
             C859 * C7444 + C32956 * C7445) *
                C32959) *
               C32585 * C602 -
           ((C11761 + C11760 + C11759) * C32959 +
            (C11758 + C11757 + C11756) * C10357 +
            (C1568 + C1569 + C1570) * C10353 +
            (C1571 + C1572 + C1573) * C10356 + (C902 + C901 + C900) * C10352 +
            (C899 + C898 + C897) * C10355) *
               C32585 * C601) *
              C32630 * C482)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C32667 * C122) * C12010 +
            (C113 * C123 + C32667 * C136) * C12005 + C2153 * C12011 +
            C2154 * C12006 + C2155 * C12012 + C2156 * C12007 + C2162 * C12013 +
            C2161 * C12008 + C12156 * C12014 + C12157 * C12009) *
               C32585 * C601 -
           (C12158 * C12009 + C12159 * C12014 + C12157 * C12008 +
            C12156 * C12013 + C2161 * C12007 + C2162 * C12012 + C2156 * C12006 +
            C2155 * C12011 + C2154 * C12005 + C2153 * C12010) *
               C32585 * C602) *
              C32630 * C481 +
          ((C631 * C12010 + C630 * C12005 + C1872 * C12011 + C1873 * C12006 +
            C2160 * C12012 + C2159 * C12007 + C12336 * C12013 +
            C12337 * C12008 + (C113 * C12327 + C32667 * C12328) * C12014 +
            (C113 * C12329 + C32667 * C12330) * C12009) *
               C32585 * C602 -
           (C12337 * C12009 + C12336 * C12014 + C2159 * C12008 +
            C2160 * C12013 + C1873 * C12007 + C1872 * C12012 + C630 * C12006 +
            C631 * C12011 + C165 * C12005 + C164 * C12010) *
               C32585 * C601) *
              C32630 * C482)) /
            (p * q * std::sqrt(p + q));
    d2ee[64] +=
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C32667 * C122) * C114 +
            (C113 * C123 + C32667 * C136) * C32684) *
               C103 +
           (C174 + C175) * C104 + C184 * C105 + C185 * C106 + C186 * C107) *
              C32644 * C32630 * C110 -
          ((C182 + C183) * C107 + (C181 + C180) * C106 + (C179 + C178) * C105 +
           (C177 + C176) * C104 + (C175 + C174) * C103) *
              C32644 * C32630 * C111 +
          (C184 * C103 + C185 * C104 + C186 * C105 + (C183 + C182) * C106 +
           ((C113 * C121 + C32667 * C134) * C114 +
            (C113 * C135 + C32667 * C142) * C32684) *
               C107) *
              C32644 * C32630 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C32667 * C122) * C114 +
            (C113 * C123 + C32667 * C136) * C32684) *
               C103 +
           (C174 + C175) * C104 + C184 * C105 + C185 * C106 + C186 * C107) *
              C32644 * C248 -
          (((C113 * C262 + C32667 * C282) * C32684 +
            (C113 * C252 + C32667 * C263) * C114) *
               C107 +
           ((C113 * C264 + C32667 * C283) * C32684 +
            (C113 * C253 + C32667 * C265) * C114) *
               C106 +
           ((C113 * C266 + C32667 * C284) * C32684 +
            (C113 * C254 + C32667 * C267) * C114) *
               C105 +
           ((C113 * C268 + C32667 * C285) * C32684 +
            (C113 * C255 + C32667 * C269) * C114) *
               C104 +
           ((C113 * C270 + C32667 * C286) * C32684 +
            (C113 * C256 + C32667 * C271) * C114) *
               C103) *
              C32644 * C249 +
          (((C113 * C257 + C32667 * C272) * C114 +
            (C113 * C273 + C32667 * C287) * C32684) *
               C103 +
           ((C113 * C258 + C32667 * C274) * C114 +
            (C113 * C275 + C32667 * C288) * C32684) *
               C104 +
           ((C113 * C259 + C32667 * C276) * C114 +
            (C113 * C277 + C32667 * C289) * C32684) *
               C105 +
           ((C113 * C260 + C32667 * C278) * C114 +
            (C113 * C279 + C32667 * C290) * C32684) *
               C106 +
           ((C113 * C261 + C32667 * C280) * C114 +
            (C113 * C281 + C32667 * C291) * C32684) *
               C107) *
              C32644 * C250) *
         C32618) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C857 * C115 + C32991 * C122 + C858 * C256 + C32979 * C271 +
             C859 * C257 + C32956 * C272) *
                C114 +
            (C857 * C123 + C32991 * C136 + C858 * C270 + C32979 * C286 +
             C859 * C273 + C32956 * C287) *
                C32684) *
               C854 +
           ((C897 + C898 + C899) * C114 + (C900 + C901 + C902) * C32684) *
               C855 +
           C921 * C32945) *
              C32644 * C32630 * C110 -
          (((C909 + C910 + C911) * C32684 + (C912 + C913 + C914) * C114) *
               C32945 +
           ((C908 + C907 + C906) * C32684 + (C905 + C904 + C903) * C114) *
               C855 +
           ((C902 + C901 + C900) * C32684 + (C899 + C898 + C897) * C114) *
               C854) *
              C32644 * C32630 * C111 +
          (C921 * C854 +
           ((C914 + C913 + C912) * C114 + (C911 + C910 + C909) * C32684) *
               C855 +
           ((C857 * C119 + C32991 * C130 + C858 * C252 + C32979 * C263 +
             C859 * C261 + C32956 * C280) *
                C114 +
            (C857 * C131 + C32991 * C140 + C858 * C262 + C32979 * C282 +
             C859 * C281 + C32956 * C291) *
                C32684) *
               C32945) *
              C32644 * C32630 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C857 * C115 + C32991 * C122 + C858 * C256 + C32979 * C271 +
             C859 * C257 + C32956 * C272) *
                C114 +
            (C857 * C123 + C32991 * C136 + C858 * C270 + C32979 * C286 +
             C859 * C273 + C32956 * C287) *
                C32684) *
               C854 +
           ((C897 + C898 + C899) * C114 + (C900 + C901 + C902) * C32684) *
               C855 +
           C921 * C32945) *
              C32644 * C248 -
          (((C859 * C1037 + C32956 * C1049 + C858 * C277 + C32979 * C289 +
             C857 * C266 + C32991 * C284) *
                C32684 +
            (C859 * C1031 + C32956 * C1038 + C858 * C259 + C32979 * C276 +
             C857 * C254 + C32991 * C267) *
                C114) *
               C32945 +
           ((C859 * C1039 + C32956 * C1050 + C858 * C275 + C32979 * C288 +
             C857 * C268 + C32991 * C285) *
                C32684 +
            (C859 * C1032 + C32956 * C1040 + C858 * C258 + C32979 * C274 +
             C857 * C255 + C32991 * C269) *
                C114) *
               C855 +
           ((C859 * C1041 + C32956 * C1051 + C858 * C273 + C32979 * C287 +
             C857 * C270 + C32991 * C286) *
                C32684 +
            (C859 * C1033 + C32956 * C1042 + C858 * C257 + C32979 * C272 +
             C857 * C256 + C32991 * C271) *
                C114) *
               C854) *
              C32644 * C249 +
          (((C857 * C257 + C32991 * C272 + C858 * C1033 + C32979 * C1042 +
             C859 * C1034 + C32956 * C1043) *
                C114 +
            (C857 * C273 + C32991 * C287 + C858 * C1041 + C32979 * C1051 +
             C859 * C1044 + C32956 * C1052) *
                C32684) *
               C854 +
           ((C857 * C258 + C32991 * C274 + C858 * C1032 + C32979 * C1040 +
             C859 * C1035 + C32956 * C1045) *
                C114 +
            (C857 * C275 + C32991 * C288 + C858 * C1039 + C32979 * C1050 +
             C859 * C1046 + C32956 * C1053) *
                C32684) *
               C855 +
           ((C857 * C259 + C32991 * C276 + C858 * C1031 + C32979 * C1038 +
             C859 * C1036 + C32956 * C1047) *
                C114 +
            (C857 * C277 + C32991 * C289 + C858 * C1037 + C32979 * C1049 +
             C859 * C1048 + C32956 * C1054) *
                C32684) *
               C32945) *
              C32644 * C250) *
         C32618) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C32667 * C122) * C1844 +
            (C113 * C123 + C32667 * C136) * C32992 +
            (C113 * C361 + C32667 * C376) * C1845 +
            (C113 * C375 + C32667 * C391) * C32981 +
            (C113 * C362 + C32667 * C377) * C1846 +
            (C113 * C378 + C32667 * C392) * C32959) *
               C854 +
           (C1848 + C1849 + C1850 + C1851 + C1879 + C1880) * C855 +
           C1888 * C32945) *
              C32644 * C32630 * C110 -
          ((C1884 + C1885 + C1868 + C1869 + C1870 + C1871) * C32945 +
           (C1883 + C1882 + C1859 + C1858 + C1857 + C1856) * C855 +
           (C1880 + C1879 + C1851 + C1850 + C1849 + C1848) * C854) *
              C32644 * C32630 * C111 +
          (C1888 * C854 +
           (C1871 + C1870 + C1869 + C1868 + C1885 + C1884) * C855 +
           (C170 * C1844 + C171 * C32992 + C625 * C1845 + C624 * C32981 +
            (C113 * C366 + C32667 * C385) * C1846 +
            (C113 * C386 + C32667 * C396) * C32959) *
               C32945) *
              C32644 * C32630 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C32667 * C122) * C1844 +
            (C113 * C123 + C32667 * C136) * C32992 +
            (C113 * C361 + C32667 * C376) * C1845 +
            (C113 * C375 + C32667 * C391) * C32981 +
            (C113 * C362 + C32667 * C377) * C1846 +
            (C113 * C378 + C32667 * C392) * C32959) *
               C854 +
           (C1848 + C1849 + C1850 + C1851 + C1879 + C1880) * C855 +
           C1888 * C32945) *
              C32644 * C248 -
          (((C113 * C1190 + C32667 * C1199) * C32959 +
            (C113 * C1172 + C32667 * C1188) * C1846 +
            (C113 * C731 + C32667 * C738) * C32981 +
            (C113 * C723 + C32667 * C730) * C1845 + C508 * C32992 +
            C509 * C1844) *
               C32945 +
           ((C113 * C1186 + C32667 * C1197) * C32959 +
            (C113 * C1170 + C32667 * C1184) * C1846 +
            (C113 * C729 + C32667 * C737) * C32981 +
            (C113 * C722 + C32667 * C728) * C1845 + C510 * C32992 +
            C511 * C1844) *
               C855 +
           ((C113 * C1182 + C32667 * C1195) * C32959 +
            (C113 * C1168 + C32667 * C1180) * C1846 +
            (C113 * C727 + C32667 * C736) * C32981 +
            (C113 * C721 + C32667 * C726) * C1845 +
            (C113 * C270 + C32667 * C286) * C32992 +
            (C113 * C256 + C32667 * C271) * C1844) *
               C854) *
              C32644 * C249 +
          (((C113 * C257 + C32667 * C272) * C1844 +
            (C113 * C273 + C32667 * C287) * C32992 +
            (C113 * C1167 + C32667 * C1179) * C1845 +
            (C113 * C1178 + C32667 * C1194) * C32981 +
            (C113 * C1169 + C32667 * C1181) * C1846 +
            (C113 * C1183 + C32667 * C1196) * C32959) *
               C854 +
           ((C113 * C258 + C32667 * C274) * C1844 +
            (C113 * C275 + C32667 * C288) * C32992 +
            (C113 * C1166 + C32667 * C1177) * C1845 +
            (C113 * C1176 + C32667 * C1193) * C32981 +
            (C113 * C1171 + C32667 * C1185) * C1846 +
            (C113 * C1187 + C32667 * C1198) * C32959) *
               C855 +
           ((C113 * C259 + C32667 * C276) * C1844 +
            (C113 * C277 + C32667 * C289) * C32992 +
            (C113 * C1165 + C32667 * C1175) * C1845 +
            (C113 * C1174 + C32667 * C1192) * C32981 +
            (C113 * C1173 + C32667 * C1189) * C1846 +
            (C113 * C1191 + C32667 * C1200) * C32959) *
               C32945) *
              C32644 * C250) *
         C32618) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C5477 * C115 + C5471 * C122 + C5478 * C256 + C5472 * C271 +
             C5479 * C257 + C32956 * C272) *
                C114 +
            (C5477 * C123 + C5471 * C136 + C5478 * C270 + C5472 * C286 +
             C5479 * C273 + C32956 * C287) *
                C32684) *
               C32988 +
           ((C5517 + C5518 + C5519) * C114 + (C5520 + C5521 + C5522) * C32684) *
               C32975 +
           C5541 * C32945) *
              C32644 * C32630 * C110 -
          (((C5529 + C5530 + C5531) * C32684 + (C5532 + C5533 + C5534) * C114) *
               C32945 +
           ((C5528 + C5527 + C5526) * C32684 + (C5525 + C5524 + C5523) * C114) *
               C32975 +
           ((C5522 + C5521 + C5520) * C32684 + (C5519 + C5518 + C5517) * C114) *
               C32988) *
              C32644 * C32630 * C111 +
          (C5541 * C32988 +
           ((C5534 + C5533 + C5532) * C114 + (C5531 + C5530 + C5529) * C32684) *
               C32975 +
           ((C5477 * C119 + C5471 * C130 + C5478 * C252 + C5472 * C263 +
             C5479 * C261 + C32956 * C280) *
                C114 +
            (C5477 * C131 + C5471 * C140 + C5478 * C262 + C5472 * C282 +
             C5479 * C281 + C32956 * C291) *
                C32684) *
               C32945) *
              C32644 * C32630 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C5477 * C115 + C5471 * C122 + C5478 * C256 + C5472 * C271 +
             C5479 * C257 + C32956 * C272) *
                C114 +
            (C5477 * C123 + C5471 * C136 + C5478 * C270 + C5472 * C286 +
             C5479 * C273 + C32956 * C287) *
                C32684) *
               C32988 +
           ((C5517 + C5518 + C5519) * C114 + (C5520 + C5521 + C5522) * C32684) *
               C32975 +
           C5541 * C32945) *
              C32644 * C248 -
          (((C5479 * C1037 + C32956 * C1049 + C5478 * C277 + C5472 * C289 +
             C5477 * C266 + C5471 * C284) *
                C32684 +
            (C5479 * C1031 + C32956 * C1038 + C5478 * C259 + C5472 * C276 +
             C5477 * C254 + C5471 * C267) *
                C114) *
               C32945 +
           ((C5479 * C1039 + C32956 * C1050 + C5478 * C275 + C5472 * C288 +
             C5477 * C268 + C5471 * C285) *
                C32684 +
            (C5479 * C1032 + C32956 * C1040 + C5478 * C258 + C5472 * C274 +
             C5477 * C255 + C5471 * C269) *
                C114) *
               C32975 +
           ((C5479 * C1041 + C32956 * C1051 + C5478 * C273 + C5472 * C287 +
             C5477 * C270 + C5471 * C286) *
                C32684 +
            (C5479 * C1033 + C32956 * C1042 + C5478 * C257 + C5472 * C272 +
             C5477 * C256 + C5471 * C271) *
                C114) *
               C32988) *
              C32644 * C249 +
          (((C5477 * C257 + C5471 * C272 + C5478 * C1033 + C5472 * C1042 +
             C5479 * C1034 + C32956 * C1043) *
                C114 +
            (C5477 * C273 + C5471 * C287 + C5478 * C1041 + C5472 * C1051 +
             C5479 * C1044 + C32956 * C1052) *
                C32684) *
               C32988 +
           ((C5477 * C258 + C5471 * C274 + C5478 * C1032 + C5472 * C1040 +
             C5479 * C1035 + C32956 * C1045) *
                C114 +
            (C5477 * C275 + C5471 * C288 + C5478 * C1039 + C5472 * C1050 +
             C5479 * C1046 + C32956 * C1053) *
                C32684) *
               C32975 +
           ((C5477 * C259 + C5471 * C276 + C5478 * C1031 + C5472 * C1038 +
             C5479 * C1036 + C32956 * C1047) *
                C114 +
            (C5477 * C277 + C5471 * C289 + C5478 * C1037 + C5472 * C1049 +
             C5479 * C1048 + C32956 * C1054) *
                C32684) *
               C32945) *
              C32644 * C250) *
         C32618) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C6339 * C115 + C6333 * C122 + C6340 * C256 + C6334 * C271 +
            C6341 * C257 + C6335 * C272 + C6342 * C1033 + C6336 * C1042 +
            C6343 * C1034 + C6337 * C1043) *
               C114 +
           (C6339 * C123 + C6333 * C136 + C6340 * C270 + C6334 * C286 +
            C6341 * C273 + C6335 * C287 + C6342 * C1041 + C6336 * C1051 +
            C6343 * C1044 + C6337 * C1052) *
               C32684) *
              C32585 * C32644 * C32630 * C110 -
          ((C6343 * C1046 + C6337 * C1053 + C6342 * C1039 + C6336 * C1050 +
            C6341 * C275 + C6335 * C288 + C6340 * C268 + C6334 * C285 +
            C6339 * C125 + C6333 * C137) *
               C32684 +
           (C6343 * C1035 + C6337 * C1045 + C6342 * C1032 + C6336 * C1040 +
            C6341 * C258 + C6335 * C274 + C6340 * C255 + C6334 * C269 +
            C6339 * C116 + C6333 * C124) *
               C114) *
              C32585 * C32644 * C32630 * C111 +
          ((C6339 * C117 + C6333 * C126 + C6340 * C254 + C6334 * C267 +
            C6341 * C259 + C6335 * C276 + C6342 * C1031 + C6336 * C1038 +
            C6343 * C1036 + C6337 * C1047) *
               C114 +
           (C6339 * C127 + C6333 * C138 + C6340 * C266 + C6334 * C284 +
            C6341 * C277 + C6335 * C289 + C6342 * C1037 + C6336 * C1049 +
            C6343 * C1048 + C6337 * C1054) *
               C32684) *
              C32585 * C32644 * C32630 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C6339 * C115 + C6333 * C122 + C6340 * C256 + C6334 * C271 +
            C6341 * C257 + C6335 * C272 + C6342 * C1033 + C6336 * C1042 +
            C6343 * C1034 + C6337 * C1043) *
               C114 +
           (C6339 * C123 + C6333 * C136 + C6340 * C270 + C6334 * C286 +
            C6341 * C273 + C6335 * C287 + C6342 * C1041 + C6336 * C1051 +
            C6343 * C1044 + C6337 * C1052) *
               C32684) *
              C32585 * C32644 * C248 -
          ((C6343 * C6408 + C6337 * C6412 + C6342 * C1044 + C6336 * C1052 +
            C6341 * C1041 + C6335 * C1051 + C6340 * C273 + C6334 * C287 +
            C6339 * C270 + C6333 * C286) *
               C32684 +
           (C6343 * C6406 + C6337 * C6409 + C6342 * C1034 + C6336 * C1043 +
            C6341 * C1033 + C6335 * C1042 + C6340 * C257 + C6334 * C272 +
            C6339 * C256 + C6333 * C271) *
               C114) *
              C32585 * C32644 * C249 +
          ((C6339 * C257 + C6333 * C272 + C6340 * C1033 + C6334 * C1042 +
            C6341 * C1034 + C6335 * C1043 + C6342 * C6406 + C6336 * C6409 +
            C6343 * C6407 + C6337 * C6410) *
               C114 +
           (C6339 * C273 + C6333 * C287 + C6340 * C1041 + C6334 * C1051 +
            C6341 * C1044 + C6335 * C1052 + C6342 * C6408 + C6336 * C6412 +
            C6343 * C6411 + C6337 * C6413) *
               C32684) *
              C32585 * C32644 * C250) *
         C32618) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C5477 * C115 + C5471 * C122 + C5478 * C256 + C5472 * C271 +
            C5479 * C257 + C32956 * C272) *
               C1844 +
           (C5477 * C123 + C5471 * C136 + C5478 * C270 + C5472 * C286 +
            C5479 * C273 + C32956 * C287) *
               C32992 +
           (C5477 * C361 + C5471 * C376 + C5478 * C721 + C5472 * C726 +
            C5479 * C1167 + C32956 * C1179) *
               C1845 +
           (C5477 * C375 + C5471 * C391 + C5478 * C727 + C5472 * C736 +
            C5479 * C1178 + C32956 * C1194) *
               C32981 +
           (C5477 * C362 + C5471 * C377 + C5478 * C1168 + C5472 * C1180 +
            C5479 * C1169 + C32956 * C1181) *
               C1846 +
           (C5477 * C378 + C5471 * C392 + C5478 * C1182 + C5472 * C1195 +
            C5479 * C1183 + C32956 * C1196) *
               C32959) *
              C32585 * C32644 * C32630 * C110 -
          ((C5479 * C1187 + C32956 * C1198 + C5478 * C1186 + C5472 * C1197 +
            C5477 * C380 + C5471 * C393) *
               C32959 +
           (C5479 * C1171 + C32956 * C1185 + C5478 * C1170 + C5472 * C1184 +
            C5477 * C363 + C5471 * C379) *
               C1846 +
           (C6120 + C6121 + C6122) * C32981 + (C6123 + C6124 + C6125) * C1845 +
           (C5522 + C5521 + C5520) * C32992 + (C5519 + C5518 + C5517) * C1844) *
              C32585 * C32644 * C32630 * C111 +
          (C5537 * C1844 + C5538 * C32992 + (C6119 + C6118 + C6117) * C1845 +
           (C6116 + C6115 + C6114) * C32981 +
           (C5477 * C364 + C5471 * C381 + C5478 * C1172 + C5472 * C1188 +
            C5479 * C1173 + C32956 * C1189) *
               C1846 +
           (C5477 * C382 + C5471 * C394 + C5478 * C1190 + C5472 * C1199 +
            C5479 * C1191 + C32956 * C1200) *
               C32959) *
              C32585 * C32644 * C32630 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C5477 * C115 + C5471 * C122 + C5478 * C256 + C5472 * C271 +
            C5479 * C257 + C32956 * C272) *
               C1844 +
           (C5477 * C123 + C5471 * C136 + C5478 * C270 + C5472 * C286 +
            C5479 * C273 + C32956 * C287) *
               C32992 +
           (C5477 * C361 + C5471 * C376 + C5478 * C721 + C5472 * C726 +
            C5479 * C1167 + C32956 * C1179) *
               C1845 +
           (C5477 * C375 + C5471 * C391 + C5478 * C727 + C5472 * C736 +
            C5479 * C1178 + C32956 * C1194) *
               C32981 +
           (C5477 * C362 + C5471 * C377 + C5478 * C1168 + C5472 * C1180 +
            C5479 * C1169 + C32956 * C1181) *
               C1846 +
           (C5477 * C378 + C5471 * C392 + C5478 * C1182 + C5472 * C1195 +
            C5479 * C1183 + C32956 * C1196) *
               C32959) *
              C32585 * C32644 * C248 -
          ((C5479 * C6483 + C32956 * C6486 + C5478 * C1183 + C5472 * C1196 +
            C5477 * C1182 + C5471 * C1195) *
               C32959 +
           (C5479 * C6477 + C32956 * C6481 + C5478 * C1169 + C5472 * C1181 +
            C5477 * C1168 + C5471 * C1180) *
               C1846 +
           (C5479 * C1723 + C32956 * C1728 + C5478 * C1178 + C5472 * C1194 +
            C5477 * C727 + C5471 * C736) *
               C32981 +
           (C5479 * C1719 + C32956 * C1722 + C5478 * C1167 + C5472 * C1179 +
            C5477 * C721 + C5471 * C726) *
               C1845 +
           (C5479 * C1041 + C32956 * C1051 + C5478 * C273 + C5472 * C287 +
            C5477 * C270 + C5471 * C286) *
               C32992 +
           (C5479 * C1033 + C32956 * C1042 + C5478 * C257 + C5472 * C272 +
            C5477 * C256 + C5471 * C271) *
               C1844) *
              C32585 * C32644 * C249 +
          ((C5477 * C257 + C5471 * C272 + C5478 * C1033 + C5472 * C1042 +
            C5479 * C1034 + C32956 * C1043) *
               C1844 +
           (C5477 * C273 + C5471 * C287 + C5478 * C1041 + C5472 * C1051 +
            C5479 * C1044 + C32956 * C1052) *
               C32992 +
           (C5477 * C1167 + C5471 * C1179 + C5478 * C1719 + C5472 * C1722 +
            C5479 * C6476 + C32956 * C6480) *
               C1845 +
           (C5477 * C1178 + C5471 * C1194 + C5478 * C1723 + C5472 * C1728 +
            C5479 * C6479 + C32956 * C6485) *
               C32981 +
           (C5477 * C1169 + C5471 * C1181 + C5478 * C6477 + C5472 * C6481 +
            C5479 * C6478 + C32956 * C6482) *
               C1846 +
           (C5477 * C1183 + C5471 * C1196 + C5478 * C6483 + C5472 * C6486 +
            C5479 * C6484 + C32956 * C6487) *
               C32959) *
              C32585 * C32644 * C250) *
         C32618) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C32667 * C122) * C10355 +
            (C113 * C123 + C32667 * C136) * C10352 + C2153 * C10356 +
            C2154 * C10353 + C2155 * C10357 + C2156 * C32959) *
               C32988 +
           (C10359 + C10360 + C10361 + C10362 + C10363 + C10364) * C32975 +
           C10381 * C32945) *
              C32644 * C32630 * C110 -
          ((C10371 + C10372 + C10373 + C10374 + C10375 + C10376) * C32945 +
           (C10370 + C10369 + C10368 + C10367 + C10366 + C10365) * C32975 +
           (C10364 + C10363 + C10362 + C10361 + C10360 + C10359) * C32988) *
              C32644 * C32630 * C111 +
          (C10381 * C32988 +
           (C10376 + C10375 + C10374 + C10373 + C10372 + C10371) * C32975 +
           (C170 * C10355 + C171 * C10352 + C625 * C10356 + C624 * C10353 +
            (C113 * C366 + C32667 * C385) * C10357 +
            (C113 * C386 + C32667 * C396) * C32959) *
               C32945) *
              C32644 * C32630 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C32667 * C122) * C10355 +
            (C113 * C123 + C32667 * C136) * C10352 + C2153 * C10356 +
            C2154 * C10353 + C2155 * C10357 + C2156 * C32959) *
               C32988 +
           (C10359 + C10360 + C10361 + C10362 + C10363 + C10364) * C32975 +
           C10381 * C32945) *
              C32644 * C248 -
          ((C2333 * C32959 + C2334 * C10357 + C2335 * C10353 + C2336 * C10356 +
            C508 * C10352 + C509 * C10355) *
               C32945 +
           (C2337 * C32959 + C2338 * C10357 + C2339 * C10353 + C2340 * C10356 +
            C510 * C10352 + C511 * C10355) *
               C32975 +
           (C2680 * C32959 + C2679 * C10357 + C2678 * C10353 + C2677 * C10356 +
            (C113 * C270 + C32667 * C286) * C10352 +
            (C113 * C256 + C32667 * C271) * C10355) *
               C32988) *
              C32644 * C249 +
          (((C113 * C257 + C32667 * C272) * C10355 +
            (C113 * C273 + C32667 * C287) * C10352 +
            (C113 * C1167 + C32667 * C1179) * C10356 +
            (C113 * C1178 + C32667 * C1194) * C10353 +
            (C113 * C1169 + C32667 * C1181) * C10357 +
            (C113 * C1183 + C32667 * C1196) * C32959) *
               C32988 +
           ((C113 * C258 + C32667 * C274) * C10355 +
            (C113 * C275 + C32667 * C288) * C10352 +
            (C113 * C1166 + C32667 * C1177) * C10356 +
            (C113 * C1176 + C32667 * C1193) * C10353 +
            (C113 * C1171 + C32667 * C1185) * C10357 +
            (C113 * C1187 + C32667 * C1198) * C32959) *
               C32975 +
           ((C113 * C259 + C32667 * C276) * C10355 +
            (C113 * C277 + C32667 * C289) * C10352 +
            (C113 * C1165 + C32667 * C1175) * C10356 +
            (C113 * C1174 + C32667 * C1192) * C10353 +
            (C113 * C1173 + C32667 * C1189) * C10357 +
            (C113 * C1191 + C32667 * C1200) * C32959) *
               C32945) *
              C32644 * C250) *
         C32618) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C857 * C115 + C32991 * C122 + C858 * C256 + C32979 * C271 +
            C859 * C257 + C32956 * C272) *
               C10355 +
           (C857 * C123 + C32991 * C136 + C858 * C270 + C32979 * C286 +
            C859 * C273 + C32956 * C287) *
               C10352 +
           (C857 * C361 + C32991 * C376 + C858 * C721 + C32979 * C726 +
            C859 * C1167 + C32956 * C1179) *
               C10356 +
           (C857 * C375 + C32991 * C391 + C858 * C727 + C32979 * C736 +
            C859 * C1178 + C32956 * C1194) *
               C10353 +
           (C857 * C362 + C32991 * C377 + C858 * C1168 + C32979 * C1180 +
            C859 * C1169 + C32956 * C1181) *
               C10357 +
           (C857 * C378 + C32991 * C392 + C858 * C1182 + C32979 * C1195 +
            C859 * C1183 + C32956 * C1196) *
               C32959) *
              C32585 * C32644 * C32630 * C110 -
          ((C859 * C1187 + C32956 * C1198 + C858 * C1186 + C32979 * C1197 +
            C857 * C380 + C32991 * C393) *
               C32959 +
           (C859 * C1171 + C32956 * C1185 + C858 * C1170 + C32979 * C1184 +
            C857 * C363 + C32991 * C379) *
               C10357 +
           (C1568 + C1569 + C1570) * C10353 + (C1571 + C1572 + C1573) * C10356 +
           (C902 + C901 + C900) * C10352 + (C899 + C898 + C897) * C10355) *
              C32585 * C32644 * C32630 * C111 +
          (C917 * C10355 + C918 * C10352 + (C1567 + C1566 + C1565) * C10356 +
           (C1564 + C1563 + C1562) * C10353 +
           (C857 * C364 + C32991 * C381 + C858 * C1172 + C32979 * C1188 +
            C859 * C1173 + C32956 * C1189) *
               C10357 +
           (C857 * C382 + C32991 * C394 + C858 * C1190 + C32979 * C1199 +
            C859 * C1191 + C32956 * C1200) *
               C32959) *
              C32585 * C32644 * C32630 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C857 * C115 + C32991 * C122 + C858 * C256 + C32979 * C271 +
            C859 * C257 + C32956 * C272) *
               C10355 +
           (C857 * C123 + C32991 * C136 + C858 * C270 + C32979 * C286 +
            C859 * C273 + C32956 * C287) *
               C10352 +
           (C857 * C361 + C32991 * C376 + C858 * C721 + C32979 * C726 +
            C859 * C1167 + C32956 * C1179) *
               C10356 +
           (C857 * C375 + C32991 * C391 + C858 * C727 + C32979 * C736 +
            C859 * C1178 + C32956 * C1194) *
               C10353 +
           (C857 * C362 + C32991 * C377 + C858 * C1168 + C32979 * C1180 +
            C859 * C1169 + C32956 * C1181) *
               C10357 +
           (C857 * C378 + C32991 * C392 + C858 * C1182 + C32979 * C1195 +
            C859 * C1183 + C32956 * C1196) *
               C32959) *
              C32585 * C32644 * C248 -
          ((C859 * C6483 + C32956 * C6486 + C858 * C1183 + C32979 * C1196 +
            C857 * C1182 + C32991 * C1195) *
               C32959 +
           (C859 * C6477 + C32956 * C6481 + C858 * C1169 + C32979 * C1181 +
            C857 * C1168 + C32991 * C1180) *
               C10357 +
           (C859 * C1723 + C32956 * C1728 + C858 * C1178 + C32979 * C1194 +
            C857 * C727 + C32991 * C736) *
               C10353 +
           (C859 * C1719 + C32956 * C1722 + C858 * C1167 + C32979 * C1179 +
            C857 * C721 + C32991 * C726) *
               C10356 +
           (C859 * C1041 + C32956 * C1051 + C858 * C273 + C32979 * C287 +
            C857 * C270 + C32991 * C286) *
               C10352 +
           (C859 * C1033 + C32956 * C1042 + C858 * C257 + C32979 * C272 +
            C857 * C256 + C32991 * C271) *
               C10355) *
              C32585 * C32644 * C249 +
          ((C857 * C257 + C32991 * C272 + C858 * C1033 + C32979 * C1042 +
            C859 * C1034 + C32956 * C1043) *
               C10355 +
           (C857 * C273 + C32991 * C287 + C858 * C1041 + C32979 * C1051 +
            C859 * C1044 + C32956 * C1052) *
               C10352 +
           (C857 * C1167 + C32991 * C1179 + C858 * C1719 + C32979 * C1722 +
            C859 * C6476 + C32956 * C6480) *
               C10356 +
           (C857 * C1178 + C32991 * C1194 + C858 * C1723 + C32979 * C1728 +
            C859 * C6479 + C32956 * C6485) *
               C10353 +
           (C857 * C1169 + C32991 * C1181 + C858 * C6477 + C32979 * C6481 +
            C859 * C6478 + C32956 * C6482) *
               C10357 +
           (C857 * C1183 + C32991 * C1196 + C858 * C6483 + C32979 * C6486 +
            C859 * C6484 + C32956 * C6487) *
               C32959) *
              C32585 * C32644 * C250) *
         C32618) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C115 + C32667 * C122) * C12010 +
           (C113 * C123 + C32667 * C136) * C12005 + C2153 * C12011 +
           C2154 * C12006 + C2155 * C12012 + C2156 * C12007 + C2162 * C12013 +
           C2161 * C12008 + (C113 * C2111 + C32667 * C2120) * C12014 +
           (C113 * C2121 + C32667 * C2129) * C12009) *
              C32585 * C32644 * C32630 * C110 -
          ((C113 * C2123 + C32667 * C2130) * C12009 +
           (C113 * C2112 + C32667 * C2122) * C12014 + C2159 * C12008 +
           C2160 * C12013 + C1873 * C12007 + C1872 * C12012 + C630 * C12006 +
           C631 * C12011 + C165 * C12005 + C164 * C12010) *
              C32585 * C32644 * C32630 * C111 +
          (C166 * C12010 + C167 * C12005 + C629 * C12011 + C628 * C12006 +
           C1875 * C12012 + C1876 * C12007 + C2158 * C12013 + C2157 * C12008 +
           (C113 * C2113 + C32667 * C2124) * C12014 +
           (C113 * C2125 + C32667 * C2131) * C12009) *
              C32585 * C32644 * C32630 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C115 + C32667 * C122) * C12010 +
           (C113 * C123 + C32667 * C136) * C12005 + C2153 * C12011 +
           C2154 * C12006 + C2155 * C12012 + C2156 * C12007 + C2162 * C12013 +
           C2161 * C12008 + (C113 * C2111 + C32667 * C2120) * C12014 +
           (C113 * C2121 + C32667 * C2129) * C12009) *
              C32585 * C32644 * C248 -
          ((C113 * C7083 + C32667 * C7086) * C12009 +
           (C113 * C7077 + C32667 * C7081) * C12014 +
           (C113 * C2660 + C32667 * C2665) * C12008 +
           (C113 * C2656 + C32667 * C2659) * C12013 + C2680 * C12007 +
           C2679 * C12012 + C2678 * C12006 + C2677 * C12011 +
           (C113 * C270 + C32667 * C286) * C12005 +
           (C113 * C256 + C32667 * C271) * C12010) *
              C32585 * C32644 * C249 +
          ((C113 * C257 + C32667 * C272) * C12010 +
           (C113 * C273 + C32667 * C287) * C12005 +
           (C113 * C1167 + C32667 * C1179) * C12011 +
           (C113 * C1178 + C32667 * C1194) * C12006 +
           (C113 * C1169 + C32667 * C1181) * C12012 +
           (C113 * C1183 + C32667 * C1196) * C12007 +
           (C113 * C7076 + C32667 * C7080) * C12013 +
           (C113 * C7079 + C32667 * C7085) * C12008 +
           (C113 * C7078 + C32667 * C7082) * C12014 +
           (C113 * C7084 + C32667 * C7087) * C12009) *
              C32585 * C32644 * C250) *
         C32618) /
            (p * q * std::sqrt(p + q));
    d2ee[65] += (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((((C5477 * C115 + C5471 * C122 + C5478 * C256 +
                      C5472 * C271 + C5479 * C257 + C32956 * C272) *
                         C3602 +
                     (C5477 * C123 + C5471 * C136 + C5478 * C270 +
                      C5472 * C286 + C5479 * C273 + C32956 * C287) *
                         C32926 +
                     (C7125 + C7126 + C7127) * C3603 +
                     (C7128 + C7129 + C7130) * C32771) *
                        C32906 +
                    ((C5517 + C5518 + C5519) * C3602 +
                     (C5520 + C5521 + C5522) * C32926 +
                     (C6125 + C6124 + C6123) * C3603 +
                     (C6122 + C6121 + C6120) * C32771) *
                        C32595) *
                       C32644 * C479 -
                   (((C9085 + C9086 + C9087) * C32771 +
                     (C9088 + C9089 + C9090) * C3603 +
                     (C5938 + C5939 + C5940) * C32926 +
                     (C5941 + C5942 + C5943) * C3602) *
                        C32595 +
                    ((C7644 + C7643 + C7642) * C32771 +
                     (C7641 + C7640 + C7639) * C3603 +
                     (C5479 * C1041 + C32956 * C1051 + C5478 * C273 +
                      C5472 * C287 + C5477 * C270 + C5471 * C286) *
                         C32926 +
                     (C5479 * C1033 + C32956 * C1042 + C5478 * C257 +
                      C5472 * C272 + C5477 * C256 + C5471 * C271) *
                         C3602) *
                        C32906) *
                       C32644 * C480) *
                      C481 +
                  ((((C5943 + C5942 + C5941) * C3602 +
                     (C5940 + C5939 + C5938) * C32926 +
                     (C9090 + C9089 + C9088) * C3603 +
                     (C9087 + C9086 + C9085) * C32771) *
                        C32906 +
                    ((C5937 + C5936 + C5935) * C3602 +
                     (C5934 + C5933 + C5932) * C32926 +
                     (C5477 * C723 + C5471 * C730 + C5478 * C1165 +
                      C5472 * C1175 + C5479 * C1721 + C32956 * C1726) *
                         C3603 +
                     (C5477 * C731 + C5471 * C738 + C5478 * C1174 +
                      C5472 * C1192 + C5479 * C1727 + C32956 * C1730) *
                         C32771) *
                        C32595) *
                       C32644 * C480 -
                   (((C6114 + C6115 + C6116) * C32771 +
                     (C6117 + C6118 + C6119) * C3603 +
                     (C5528 + C5527 + C5526) * C32926 +
                     (C5525 + C5524 + C5523) * C3602) *
                        C32595 +
                    ((C6120 + C6121 + C6122) * C32771 +
                     (C6123 + C6124 + C6125) * C3603 +
                     (C5522 + C5521 + C5520) * C32926 +
                     (C5519 + C5518 + C5517) * C3602) *
                        C32906) *
                       C32644 * C479) *
                      C482)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((((C113 * C115 + C32667 * C122) * C3602 +
                     (C113 * C123 + C32667 * C136) * C32926 + C2153 * C3603 +
                     C2154 * C32771) *
                        C2780 +
                    (C3605 + C3606 + C3607 + C3608) * C2781 + C3625 * C2782 +
                    C3626 * C32960) *
                       C32644 * C479 -
                   ((C3969 + C3970 + C3957 + C3958) * C32960 +
                    (C3959 + C3960 + C3961 + C3962) * C2782 +
                    (C3963 + C3964 + C3965 + C3966) * C2781 +
                    (C2678 * C32771 + C2677 * C3603 +
                     (C113 * C270 + C32667 * C286) * C32926 +
                     (C113 * C256 + C32667 * C271) * C3602) *
                        C2780) *
                       C32644 * C480) *
                      C481 +
                  (((C3966 + C3965 + C3964 + C3963) * C2780 +
                    (C3962 + C3961 + C3960 + C3959) * C2781 +
                    (C3958 + C3957 + C3970 + C3969) * C2782 +
                    (C505 * C3602 + C504 * C32926 +
                     (C113 * C725 + C32667 * C734) * C3603 +
                     (C113 * C735 + C32667 * C740) * C32771) *
                        C32960) *
                       C32644 * C480 -
                   ((C3617 + C3618 + C3619 + C3620) * C32960 +
                    (C3616 + C3615 + C3614 + C3613) * C2782 +
                    (C3612 + C3611 + C3610 + C3609) * C2781 +
                    (C3608 + C3607 + C3606 + C3605) * C2780) *
                       C32644 * C479) *
                      C482)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C113 * C115 + C32667 * C122) * C13611 +
                     (C113 * C123 + C32667 * C136) * C13607 + C2153 * C13612 +
                     C2154 * C13608 + C2155 * C13613 + C2156 * C13609 +
                     C2162 * C13614 + C2161 * C32972) *
                        C32906 +
                    (C13616 + C13617 + C13618 + C13619 + C13620 + C13621 +
                     C13622 + C13623) *
                        C32595) *
                       C32644 * C479 -
                   ((C13970 + C13971 + C13962 + C13963 + C13964 + C13965 +
                     C13966 + C13967) *
                        C32595 +
                    (C12433 * C32972 + C12432 * C13614 + C2680 * C13609 +
                     C2679 * C13613 + C2678 * C13608 + C2677 * C13612 +
                     (C113 * C270 + C32667 * C286) * C13607 +
                     (C113 * C256 + C32667 * C271) * C13611) *
                        C32906) *
                       C32644 * C480) *
                      C481 +
                  (((C13967 + C13966 + C13965 + C13964 + C13963 + C13962 +
                     C13971 + C13970) *
                        C32906 +
                    (C509 * C13611 + C508 * C13607 + C2336 * C13612 +
                     C2335 * C13608 + C2334 * C13613 + C2333 * C13609 +
                     (C113 * C2658 + C32667 * C2663) * C13614 +
                     (C113 * C2664 + C32667 * C2667) * C32972) *
                        C32595) *
                       C32644 * C480 -
                   ((C13624 + C13625 + C13626 + C13627 + C13628 + C13629 +
                     C13630 + C13631) *
                        C32595 +
                    (C13623 + C13622 + C13621 + C13620 + C13619 + C13618 +
                     C13617 + C13616) *
                        C32906) *
                       C32644 * C479) *
                      C482)) /
                    (p * q * std::sqrt(p + q));
    d2ee[66] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C5477 * C115 + C5471 * C122 + C5478 * C256 + C5472 * C271 +
              C5479 * C257 + C32956 * C272) *
                 C3602 +
             (C5477 * C123 + C5471 * C136 + C5478 * C270 + C5472 * C286 +
              C5479 * C273 + C32956 * C287) *
                 C32926 +
             (C7125 + C7126 + C7127) * C3603 +
             (C7128 + C7129 + C7130) * C32771) *
                C32906 +
            ((C5517 + C5518 + C5519) * C3602 +
             (C5520 + C5521 + C5522) * C32926 + C9289 * C3603 +
             C9290 * C32771) *
                C32595) *
               C601 -
           (((C7464 + C7463 + C7462) * C32771 +
             (C7461 + C7460 + C7459) * C3603 + C9291 * C32926 + C9292 * C3602) *
                C32595 +
            ((C7136 + C7135 + C7134) * C32771 +
             (C7133 + C7132 + C7131) * C3603 +
             (C7130 + C7129 + C7128) * C32926 +
             (C7127 + C7126 + C7125) * C3602) *
                C32906) *
               C602) *
              C479 +
          ((((C7639 + C7640 + C7641) * C3602 +
             (C7642 + C7643 + C7644) * C32926 +
             (C7645 + C7646 + C7647) * C3603 +
             (C7648 + C7649 + C7650) * C32771) *
                C32906 +
            ((C9090 + C9089 + C9088) * C3602 +
             (C9087 + C9086 + C9085) * C32926 +
             (C5477 * C1170 + C5471 * C1184 + C5478 * C1171 + C5472 * C1185 +
              C5479 * C7292 + C32956 * C7293) *
                 C3603 +
             (C5477 * C1186 + C5471 * C1197 + C5478 * C1187 + C5472 * C1198 +
              C5479 * C7294 + C32956 * C7295) *
                 C32771) *
                C32595) *
               C602 -
           (((C9085 + C9086 + C9087) * C32771 +
             (C9088 + C9089 + C9090) * C3603 +
             (C5938 + C5939 + C5940) * C32926 +
             (C5941 + C5942 + C5943) * C3602) *
                C32595 +
            ((C7644 + C7643 + C7642) * C32771 +
             (C7641 + C7640 + C7639) * C3603 +
             (C5479 * C1041 + C32956 * C1051 + C5478 * C273 + C5472 * C287 +
              C5477 * C270 + C5471 * C286) *
                 C32926 +
             (C5479 * C1033 + C32956 * C1042 + C5478 * C257 + C5472 * C272 +
              C5477 * C256 + C5471 * C271) *
                 C3602) *
                C32906) *
               C601) *
              C480) *
         C32618) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C32667 * C122) * C3602 +
             (C113 * C123 + C32667 * C136) * C32926 + C2153 * C3603 +
             C2154 * C32771) *
                C2780 +
            (C3605 + C3606 + C3607 + C3608) * C2781 + C3625 * C2782 +
            C3626 * C32960) *
               C601 -
           ((C4101 + C4102 + C4103 + C4104) * C32960 +
            (C4105 + C4106 + C4107 + C4108) * C2782 +
            (C4109 + C4110 + C4111 + C4112) * C2781 +
            (C2156 * C32771 + C2155 * C3603 + C2154 * C32926 + C2153 * C3602) *
                C2780) *
               C602) *
              C479 +
          (((C2677 * C3602 + C2678 * C32926 + C2679 * C3603 + C2680 * C32771) *
                C2780 +
            (C2340 * C3602 + C2339 * C32926 + C2338 * C3603 + C2337 * C32771) *
                C2781 +
            (C2336 * C3602 + C2335 * C32926 + C2334 * C3603 + C2333 * C32771) *
                C2782 +
            (C3968 * C3602 + C3967 * C32926 +
             (C113 * C2308 + C32667 * C2309) * C3603 +
             (C113 * C2310 + C32667 * C2311) * C32771) *
                C32960) *
               C602 -
           ((C3969 + C3970 + C3957 + C3958) * C32960 +
            (C3959 + C3960 + C3961 + C3962) * C2782 +
            (C3963 + C3964 + C3965 + C3966) * C2781 +
            (C2678 * C32771 + C2677 * C3603 +
             (C113 * C270 + C32667 * C286) * C32926 +
             (C113 * C256 + C32667 * C271) * C3602) *
                C2780) *
               C601) *
              C480) *
         C32618) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C32667 * C122) * C13611 +
             (C113 * C123 + C32667 * C136) * C13607 + C2153 * C13612 +
             C2154 * C13608 + C2155 * C13613 + C2156 * C13609 + C2162 * C13614 +
             C2161 * C32972) *
                C32906 +
            (C13616 + C13617 + C13618 + C13619 + C13620 + C13621 + C13622 +
             C13623) *
                C32595) *
               C601 -
           ((C14102 + C14103 + C14104 + C14105 + C14106 + C14107 + C14108 +
             C14109) *
                C32595 +
            (C12157 * C32972 + C12156 * C13614 + C2161 * C13609 +
             C2162 * C13613 + C2156 * C13608 + C2155 * C13612 + C2154 * C13607 +
             C2153 * C13611) *
                C32906) *
               C602) *
              C479 +
          (((C2677 * C13611 + C2678 * C13607 + C2679 * C13612 + C2680 * C13608 +
             C12432 * C13613 + C12433 * C13609 + C12434 * C13614 +
             C12435 * C32972) *
                C32906 +
            (C2340 * C13611 + C2339 * C13607 + C2338 * C13612 + C2337 * C13608 +
             C13969 * C13613 + C13968 * C13609 +
             (C113 * C12241 + C32667 * C12242) * C13614 +
             (C113 * C12243 + C32667 * C12244) * C32972) *
                C32595) *
               C602 -
           ((C13970 + C13971 + C13962 + C13963 + C13964 + C13965 + C13966 +
             C13967) *
                C32595 +
            (C12433 * C32972 + C12432 * C13614 + C2680 * C13609 +
             C2679 * C13613 + C2678 * C13608 + C2677 * C13612 +
             (C113 * C270 + C32667 * C286) * C13607 +
             (C113 * C256 + C32667 * C271) * C13611) *
                C32906) *
               C601) *
              C480) *
         C32618) /
            (p * q * std::sqrt(p + q));
    d2ee[67] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C113 * C115 + C32667 * C122) * C3602 +
                (C113 * C123 + C32667 * C136) * C32926 + C2153 * C3603 +
                C2154 * C32771) *
                   C2780 +
               (C3605 + C3606 + C3607 + C3608) * C2781 + C3625 * C2782 +
               C3626 * C32960) *
                  C32644 * C32630 * C110 -
              ((C3617 + C3618 + C3619 + C3620) * C32960 +
               (C3616 + C3615 + C3614 + C3613) * C2782 +
               (C3612 + C3611 + C3610 + C3609) * C2781 +
               (C3608 + C3607 + C3606 + C3605) * C2780) *
                  C32644 * C32630 * C111 +
              (C3625 * C2780 + C3626 * C2781 +
               (C3620 + C3619 + C3618 + C3617) * C2782 +
               (C173 * C3602 + C172 * C32926 +
                (C113 * C603 + C32667 * C604) * C3603 +
                (C113 * C605 + C32667 * C606) * C32771) *
                   C32960) *
                  C32644 * C32630 * C112) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C113 * C115 + C32667 * C122) * C3602 +
                (C113 * C123 + C32667 * C136) * C32926 + C2153 * C3603 +
                C2154 * C32771) *
                   C2780 +
               (C3605 + C3606 + C3607 + C3608) * C2781 + C3625 * C2782 +
               C3626 * C32960) *
                  C32644 * C248 -
              (((C113 * C733 + C32667 * C739) * C32771 +
                (C113 * C724 + C32667 * C732) * C3603 + C506 * C32926 +
                C507 * C3602) *
                   C32960 +
               (C2335 * C32771 + C2336 * C3603 + C508 * C32926 + C509 * C3602) *
                   C2782 +
               (C2339 * C32771 + C2340 * C3603 + C510 * C32926 + C511 * C3602) *
                   C2781 +
               (C2678 * C32771 + C2677 * C3603 +
                (C113 * C270 + C32667 * C286) * C32926 +
                (C113 * C256 + C32667 * C271) * C3602) *
                   C2780) *
                  C32644 * C249 +
              (((C113 * C257 + C32667 * C272) * C3602 +
                (C113 * C273 + C32667 * C287) * C32926 +
                (C113 * C1167 + C32667 * C1179) * C3603 +
                (C113 * C1178 + C32667 * C1194) * C32771) *
                   C2780 +
               ((C113 * C258 + C32667 * C274) * C3602 +
                (C113 * C275 + C32667 * C288) * C32926 +
                (C113 * C1166 + C32667 * C1177) * C3603 +
                (C113 * C1176 + C32667 * C1193) * C32771) *
                   C2781 +
               ((C113 * C259 + C32667 * C276) * C3602 +
                (C113 * C277 + C32667 * C289) * C32926 +
                (C113 * C1165 + C32667 * C1175) * C3603 +
                (C113 * C1174 + C32667 * C1192) * C32771) *
                   C2782 +
               ((C113 * C260 + C32667 * C278) * C3602 +
                (C113 * C279 + C32667 * C290) * C32926 +
                (C113 * C1533 + C32667 * C1534) * C3603 +
                (C113 * C1535 + C32667 * C1536) * C32771) *
                   C32960) *
                  C32644 * C250) *
             C32618) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C32667 * C122) * C3602 +
            (C113 * C123 + C32667 * C136) * C32926 + C2153 * C3603 +
            C2154 * C32771) *
               C2780 +
           (C3605 + C3606 + C3607 + C3608) * C2781 + C3625 * C2782 +
           C3626 * C32960) *
              C354 -
          ((C1877 * C32771 + C1878 * C3603 + C626 * C32926 + C627 * C3602) *
               C32960 +
           (C1876 * C32771 + C1875 * C3603 + C628 * C32926 + C629 * C3602) *
               C2782 +
           (C1873 * C32771 + C1872 * C3603 + C630 * C32926 + C631 * C3602) *
               C2781 +
           (C2156 * C32771 + C2155 * C3603 + C2154 * C32926 + C2153 * C3602) *
               C2780) *
              C355 +
          ((C2155 * C3602 + C2156 * C32926 + C2162 * C3603 + C2161 * C32771) *
               C2780 +
           (C1872 * C3602 + C1873 * C32926 + C2160 * C3603 + C2159 * C32771) *
               C2781 +
           (C1875 * C3602 + C1876 * C32926 + C2158 * C3603 + C2157 * C32771) *
               C2782 +
           (C1878 * C3602 + C1877 * C32926 +
            (C113 * C2494 + C32667 * C2495) * C3603 +
            (C113 * C2496 + C32667 * C2497) * C32771) *
               C32960) *
              C356) *
         C32630 * C32618) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C5477 * C115 + C5471 * C122 + C5478 * C256 + C5472 * C271 +
             C5479 * C257 + C32956 * C272) *
                C3602 +
            (C5477 * C123 + C5471 * C136 + C5478 * C270 + C5472 * C286 +
             C5479 * C273 + C32956 * C287) *
                C32926 +
            (C7125 + C7126 + C7127) * C3603 +
            (C7128 + C7129 + C7130) * C32771) *
               C32906 +
           ((C5517 + C5518 + C5519) * C3602 + (C5520 + C5521 + C5522) * C32926 +
            (C6125 + C6124 + C6123) * C3603 +
            (C6122 + C6121 + C6120) * C32771) *
               C32595) *
              C32644 * C32630 * C110 -
          (((C6114 + C6115 + C6116) * C32771 + (C6117 + C6118 + C6119) * C3603 +
            (C5528 + C5527 + C5526) * C32926 +
            (C5525 + C5524 + C5523) * C3602) *
               C32595 +
           ((C6120 + C6121 + C6122) * C32771 + (C6123 + C6124 + C6125) * C3603 +
            (C5522 + C5521 + C5520) * C32926 +
            (C5519 + C5518 + C5517) * C3602) *
               C32906) *
              C32644 * C32630 * C111 +
          ((C5537 * C3602 + C5538 * C32926 + (C6119 + C6118 + C6117) * C3603 +
            (C6116 + C6115 + C6114) * C32771) *
               C32906 +
           ((C5534 + C5533 + C5532) * C3602 + (C5531 + C5530 + C5529) * C32926 +
            (C5477 * C358 + C5471 * C370 + C5478 * C724 + C5472 * C732 +
             C5479 * C1533 + C32956 * C1534) *
                C3603 +
            (C5477 * C369 + C5471 * C388 + C5478 * C733 + C5472 * C739 +
             C5479 * C1535 + C32956 * C1536) *
                C32771) *
               C32595) *
              C32644 * C32630 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C5477 * C115 + C5471 * C122 + C5478 * C256 + C5472 * C271 +
             C5479 * C257 + C32956 * C272) *
                C3602 +
            (C5477 * C123 + C5471 * C136 + C5478 * C270 + C5472 * C286 +
             C5479 * C273 + C32956 * C287) *
                C32926 +
            (C7125 + C7126 + C7127) * C3603 +
            (C7128 + C7129 + C7130) * C32771) *
               C32906 +
           ((C5517 + C5518 + C5519) * C3602 + (C5520 + C5521 + C5522) * C32926 +
            (C6125 + C6124 + C6123) * C3603 +
            (C6122 + C6121 + C6120) * C32771) *
               C32595) *
              C32644 * C248 -
          (((C5479 * C1725 + C32956 * C1729 + C5478 * C1176 + C5472 * C1193 +
             C5477 * C729 + C5471 * C737) *
                C32771 +
            (C5479 * C1720 + C32956 * C1724 + C5478 * C1166 + C5472 * C1177 +
             C5477 * C722 + C5471 * C728) *
                C3603 +
            (C5938 + C5939 + C5940) * C32926 +
            (C5941 + C5942 + C5943) * C3602) *
               C32595 +
           ((C7644 + C7643 + C7642) * C32771 + (C7641 + C7640 + C7639) * C3603 +
            (C5479 * C1041 + C32956 * C1051 + C5478 * C273 + C5472 * C287 +
             C5477 * C270 + C5471 * C286) *
                C32926 +
            (C5479 * C1033 + C32956 * C1042 + C5478 * C257 + C5472 * C272 +
             C5477 * C256 + C5471 * C271) *
                C3602) *
               C32906) *
              C32644 * C249 +
          (((C5477 * C257 + C5471 * C272 + C5478 * C1033 + C5472 * C1042 +
             C5479 * C1034 + C32956 * C1043) *
                C3602 +
            (C5477 * C273 + C5471 * C287 + C5478 * C1041 + C5472 * C1051 +
             C5479 * C1044 + C32956 * C1052) *
                C32926 +
            (C5477 * C1167 + C5471 * C1179 + C5478 * C1719 + C5472 * C1722 +
             C5479 * C6476 + C32956 * C6480) *
                C3603 +
            (C5477 * C1178 + C5471 * C1194 + C5478 * C1723 + C5472 * C1728 +
             C5479 * C6479 + C32956 * C6485) *
                C32771) *
               C32906 +
           ((C5477 * C258 + C5471 * C274 + C5478 * C1032 + C5472 * C1040 +
             C5479 * C1035 + C32956 * C1045) *
                C3602 +
            (C5477 * C275 + C5471 * C288 + C5478 * C1039 + C5472 * C1050 +
             C5479 * C1046 + C32956 * C1053) *
                C32926 +
            (C5477 * C1166 + C5471 * C1177 + C5478 * C1720 + C5472 * C1724 +
             C5479 * C6656 + C32956 * C6657) *
                C3603 +
            (C5477 * C1176 + C5471 * C1193 + C5478 * C1725 + C5472 * C1729 +
             C5479 * C6658 + C32956 * C6659) *
                C32771) *
               C32595) *
              C32644 * C250) *
         C32618) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C5477 * C115 + C5471 * C122 + C5478 * C256 + C5472 * C271 +
             C5479 * C257 + C32956 * C272) *
                C3602 +
            (C5477 * C123 + C5471 * C136 + C5478 * C270 + C5472 * C286 +
             C5479 * C273 + C32956 * C287) *
                C32926 +
            (C7125 + C7126 + C7127) * C3603 +
            (C7128 + C7129 + C7130) * C32771) *
               C32906 +
           ((C5517 + C5518 + C5519) * C3602 + (C5520 + C5521 + C5522) * C32926 +
            (C6125 + C6124 + C6123) * C3603 +
            (C6122 + C6121 + C6120) * C32771) *
               C32595) *
              C354 -
          (((C7464 + C7463 + C7462) * C32771 + (C7461 + C7460 + C7459) * C3603 +
            (C6120 + C6121 + C6122) * C32926 +
            (C6123 + C6124 + C6125) * C3602) *
               C32595 +
           ((C7136 + C7135 + C7134) * C32771 + (C7133 + C7132 + C7131) * C3603 +
            (C7130 + C7129 + C7128) * C32926 +
            (C7127 + C7126 + C7125) * C3602) *
               C32906) *
              C355 +
          ((C7145 * C3602 + C7146 * C32926 + (C7142 + C7141 + C7140) * C3603 +
            (C7139 + C7138 + C7137) * C32771) *
               C32906 +
           ((C7459 + C7460 + C7461) * C3602 + (C7462 + C7463 + C7464) * C32926 +
            (C5477 * C2109 + C5471 * C2117 + C5478 * C2657 + C5472 * C2661 +
             C5479 * C7442 + C32956 * C7443) *
                C3603 +
            (C5477 * C2116 + C5471 * C2127 + C5478 * C2662 + C5472 * C2666 +
             C5479 * C7444 + C32956 * C7445) *
                C32771) *
               C32595) *
              C356) *
         C32630 * C32618) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C32667 * C122) * C13611 +
            (C113 * C123 + C32667 * C136) * C13607 + C2153 * C13612 +
            C2154 * C13608 + C2155 * C13613 + C2156 * C13609 + C2162 * C13614 +
            C2161 * C32972) *
               C32906 +
           (C13616 + C13617 + C13618 + C13619 + C13620 + C13621 + C13622 +
            C13623) *
               C32595) *
              C32644 * C32630 * C110 -
          ((C13624 + C13625 + C13626 + C13627 + C13628 + C13629 + C13630 +
            C13631) *
               C32595 +
           (C13623 + C13622 + C13621 + C13620 + C13619 + C13618 + C13617 +
            C13616) *
               C32906) *
              C32644 * C32630 * C111 +
          ((C13631 + C13630 + C13629 + C13628 + C13627 + C13626 + C13625 +
            C13624) *
               C32906 +
           (C168 * C13611 + C169 * C13607 + C627 * C13612 + C626 * C13608 +
            C1878 * C13613 + C1877 * C13609 +
            (C113 * C2494 + C32667 * C2495) * C13614 +
            (C113 * C2496 + C32667 * C2497) * C32972) *
               C32595) *
              C32644 * C32630 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C32667 * C122) * C13611 +
            (C113 * C123 + C32667 * C136) * C13607 + C2153 * C13612 +
            C2154 * C13608 + C2155 * C13613 + C2156 * C13609 + C2162 * C13614 +
            C2161 * C32972) *
               C32906 +
           (C13616 + C13617 + C13618 + C13619 + C13620 + C13621 + C13622 +
            C13623) *
               C32595) *
              C32644 * C248 -
          (((C113 * C2662 + C32667 * C2666) * C32972 +
            (C113 * C2657 + C32667 * C2661) * C13614 + C2337 * C13609 +
            C2338 * C13613 + C2339 * C13608 + C2340 * C13612 + C510 * C13607 +
            C511 * C13611) *
               C32595 +
           (C12433 * C32972 + C12432 * C13614 + C2680 * C13609 +
            C2679 * C13613 + C2678 * C13608 + C2677 * C13612 +
            (C113 * C270 + C32667 * C286) * C13607 +
            (C113 * C256 + C32667 * C271) * C13611) *
               C32906) *
              C32644 * C249 +
          (((C113 * C257 + C32667 * C272) * C13611 +
            (C113 * C273 + C32667 * C287) * C13607 +
            (C113 * C1167 + C32667 * C1179) * C13612 +
            (C113 * C1178 + C32667 * C1194) * C13608 +
            (C113 * C1169 + C32667 * C1181) * C13613 +
            (C113 * C1183 + C32667 * C1196) * C13609 +
            (C113 * C7076 + C32667 * C7080) * C13614 +
            (C113 * C7079 + C32667 * C7085) * C32972) *
               C32906 +
           ((C113 * C258 + C32667 * C274) * C13611 +
            (C113 * C275 + C32667 * C288) * C13607 +
            (C113 * C1166 + C32667 * C1177) * C13612 +
            (C113 * C1176 + C32667 * C1193) * C13608 +
            (C113 * C1171 + C32667 * C1185) * C13613 +
            (C113 * C1187 + C32667 * C1198) * C13609 +
            (C113 * C7442 + C32667 * C7443) * C13614 +
            (C113 * C7444 + C32667 * C7445) * C32972) *
               C32595) *
              C32644 * C250) *
         C32618) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C32667 * C122) * C13611 +
            (C113 * C123 + C32667 * C136) * C13607 + C2153 * C13612 +
            C2154 * C13608 + C2155 * C13613 + C2156 * C13609 + C2162 * C13614 +
            C2161 * C32972) *
               C32906 +
           (C13616 + C13617 + C13618 + C13619 + C13620 + C13621 + C13622 +
            C13623) *
               C32595) *
              C354 -
          ((C12337 * C32972 + C12336 * C13614 + C2159 * C13609 +
            C2160 * C13613 + C1873 * C13608 + C1872 * C13612 + C630 * C13607 +
            C631 * C13611) *
               C32595 +
           (C12157 * C32972 + C12156 * C13614 + C2161 * C13609 +
            C2162 * C13613 + C2156 * C13608 + C2155 * C13612 + C2154 * C13607 +
            C2153 * C13611) *
               C32906) *
              C355 +
          ((C2155 * C13611 + C2156 * C13607 + C2162 * C13612 + C2161 * C13608 +
            C12156 * C13613 + C12157 * C13609 + C12159 * C13614 +
            C12158 * C32972) *
               C32906 +
           (C1872 * C13611 + C1873 * C13607 + C2160 * C13612 + C2159 * C13608 +
            C12336 * C13613 + C12337 * C13609 +
            (C113 * C12327 + C32667 * C12328) * C13614 +
            (C113 * C12329 + C32667 * C12330) * C32972) *
               C32595) *
              C356) *
         C32630 * C32618) /
            (p * q * std::sqrt(p + q));
    d2ee[68] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C5477 * C115 + C5471 * C122 + C5478 * C256 + C5472 * C271 +
              C5479 * C257 + C32956 * C272) *
                 C3602 +
             (C5477 * C123 + C5471 * C136 + C5478 * C270 + C5472 * C286 +
              C5479 * C273 + C32956 * C287) *
                 C32926 +
             (C7125 + C7126 + C7127) * C3603 +
             (C7128 + C7129 + C7130) * C32771) *
                C32906 +
            ((C5517 + C5518 + C5519) * C3602 +
             (C5520 + C5521 + C5522) * C32926 + C9289 * C3603 +
             C9290 * C32771) *
                C32595) *
               C601 -
           (((C7464 + C7463 + C7462) * C32771 +
             (C7461 + C7460 + C7459) * C3603 + C9291 * C32926 + C9292 * C3602) *
                C32595 +
            ((C7136 + C7135 + C7134) * C32771 +
             (C7133 + C7132 + C7131) * C3603 +
             (C7130 + C7129 + C7128) * C32926 +
             (C7127 + C7126 + C7125) * C3602) *
                C32906) *
               C602) *
              C32630 * C481 +
          (((C9289 * C3602 + C9290 * C32926 + (C7459 + C7460 + C7461) * C3603 +
             (C7462 + C7463 + C7464) * C32771) *
                C32906 +
            ((C6119 + C6118 + C6117) * C3602 +
             (C6116 + C6115 + C6114) * C32926 +
             (C5477 * C364 + C5471 * C381 + C5478 * C1172 + C5472 * C1188 +
              C5479 * C1173 + C32956 * C1189) *
                 C3603 +
             (C5477 * C382 + C5471 * C394 + C5478 * C1190 + C5472 * C1199 +
              C5479 * C1191 + C32956 * C1200) *
                 C32771) *
                C32595) *
               C602 -
           (((C6114 + C6115 + C6116) * C32771 +
             (C6117 + C6118 + C6119) * C3603 +
             (C5528 + C5527 + C5526) * C32926 +
             (C5525 + C5524 + C5523) * C3602) *
                C32595 +
            (C9291 * C32771 + C9292 * C3603 + (C5522 + C5521 + C5520) * C32926 +
             (C5519 + C5518 + C5517) * C3602) *
                C32906) *
               C601) *
              C32630 * C482)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C32667 * C122) * C3602 +
             (C113 * C123 + C32667 * C136) * C32926 + C2153 * C3603 +
             C2154 * C32771) *
                C2780 +
            (C3605 + C3606 + C3607 + C3608) * C2781 + C3625 * C2782 +
            C3626 * C32960) *
               C601 -
           ((C4101 + C4102 + C4103 + C4104) * C32960 +
            (C4105 + C4106 + C4107 + C4108) * C2782 +
            (C4109 + C4110 + C4111 + C4112) * C2781 +
            (C2156 * C32771 + C2155 * C3603 + C2154 * C32926 + C2153 * C3602) *
                C2780) *
               C602) *
              C32630 * C481 +
          (((C4112 + C4111 + C4110 + C4109) * C2780 +
            (C4108 + C4107 + C4106 + C4105) * C2781 +
            (C4104 + C4103 + C4102 + C4101) * C2782 +
            (C625 * C3602 + C624 * C32926 +
             (C113 * C366 + C32667 * C385) * C3603 +
             (C113 * C386 + C32667 * C396) * C32771) *
                C32960) *
               C602 -
           ((C3617 + C3618 + C3619 + C3620) * C32960 +
            (C3616 + C3615 + C3614 + C3613) * C2782 +
            (C3612 + C3611 + C3610 + C3609) * C2781 +
            (C3608 + C3607 + C3606 + C3605) * C2780) *
               C601) *
              C32630 * C482)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C32667 * C122) * C13611 +
             (C113 * C123 + C32667 * C136) * C13607 + C2153 * C13612 +
             C2154 * C13608 + C2155 * C13613 + C2156 * C13609 + C2162 * C13614 +
             C2161 * C32972) *
                C32906 +
            (C13616 + C13617 + C13618 + C13619 + C13620 + C13621 + C13622 +
             C13623) *
                C32595) *
               C601 -
           ((C14102 + C14103 + C14104 + C14105 + C14106 + C14107 + C14108 +
             C14109) *
                C32595 +
            (C12157 * C32972 + C12156 * C13614 + C2161 * C13609 +
             C2162 * C13613 + C2156 * C13608 + C2155 * C13612 + C2154 * C13607 +
             C2153 * C13611) *
                C32906) *
               C602) *
              C32630 * C481 +
          (((C14109 + C14108 + C14107 + C14106 + C14105 + C14104 + C14103 +
             C14102) *
                C32906 +
            (C629 * C13611 + C628 * C13607 + C1875 * C13612 + C1876 * C13608 +
             C2158 * C13613 + C2157 * C13609 +
             (C113 * C2113 + C32667 * C2124) * C13614 +
             (C113 * C2125 + C32667 * C2131) * C32972) *
                C32595) *
               C602 -
           ((C13624 + C13625 + C13626 + C13627 + C13628 + C13629 + C13630 +
             C13631) *
                C32595 +
            (C13623 + C13622 + C13621 + C13620 + C13619 + C13618 + C13617 +
             C13616) *
                C32906) *
               C601) *
              C32630 * C482)) /
            (p * q * std::sqrt(p + q));
    d2ee[69] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C32667 * C122) * C3602 +
            (C113 * C123 + C32667 * C136) * C32926 + C2153 * C3603 +
            C2154 * C32771) *
               C2780 +
           (C3605 + C3606 + C3607 + C3608) * C2781 + C3625 * C2782 +
           C3626 * C32960) *
              C32644 * C248 -
          (((C113 * C733 + C32667 * C739) * C32771 +
            (C113 * C724 + C32667 * C732) * C3603 + C506 * C32926 +
            C507 * C3602) *
               C32960 +
           (C2335 * C32771 + C2336 * C3603 + C508 * C32926 + C509 * C3602) *
               C2782 +
           (C2339 * C32771 + C2340 * C3603 + C510 * C32926 + C511 * C3602) *
               C2781 +
           (C2678 * C32771 + C2677 * C3603 +
            (C113 * C270 + C32667 * C286) * C32926 +
            (C113 * C256 + C32667 * C271) * C3602) *
               C2780) *
              C32644 * C249 +
          (((C113 * C257 + C32667 * C272) * C3602 +
            (C113 * C273 + C32667 * C287) * C32926 +
            (C113 * C1167 + C32667 * C1179) * C3603 +
            (C113 * C1178 + C32667 * C1194) * C32771) *
               C2780 +
           ((C113 * C258 + C32667 * C274) * C3602 +
            (C113 * C275 + C32667 * C288) * C32926 +
            (C113 * C1166 + C32667 * C1177) * C3603 +
            (C113 * C1176 + C32667 * C1193) * C32771) *
               C2781 +
           ((C113 * C259 + C32667 * C276) * C3602 +
            (C113 * C277 + C32667 * C289) * C32926 +
            (C113 * C1165 + C32667 * C1175) * C3603 +
            (C113 * C1174 + C32667 * C1192) * C32771) *
               C2782 +
           ((C113 * C260 + C32667 * C278) * C3602 +
            (C113 * C279 + C32667 * C290) * C32926 +
            (C113 * C1533 + C32667 * C1534) * C3603 +
            (C113 * C1535 + C32667 * C1536) * C32771) *
               C32960) *
              C32644 * C250) *
         C32618) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C32667 * C122) * C3602 +
            (C113 * C123 + C32667 * C136) * C32926 + C2153 * C3603 +
            C2154 * C32771) *
               C2780 +
           (C3605 + C3606 + C3607 + C3608) * C2781 + C3625 * C2782 +
           C3626 * C32960) *
              C32644 * C32630 * C110 -
          ((C3617 + C3618 + C3619 + C3620) * C32960 +
           (C3616 + C3615 + C3614 + C3613) * C2782 +
           (C3612 + C3611 + C3610 + C3609) * C2781 +
           (C3608 + C3607 + C3606 + C3605) * C2780) *
              C32644 * C32630 * C111 +
          (C3625 * C2780 + C3626 * C2781 +
           (C3620 + C3619 + C3618 + C3617) * C2782 +
           (C173 * C3602 + C172 * C32926 +
            (C113 * C603 + C32667 * C604) * C3603 +
            (C113 * C605 + C32667 * C606) * C32771) *
               C32960) *
              C32644 * C32630 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C5477 * C115 + C5471 * C122 + C5478 * C256 + C5472 * C271 +
             C5479 * C257 + C32956 * C272) *
                C3602 +
            (C5477 * C123 + C5471 * C136 + C5478 * C270 + C5472 * C286 +
             C5479 * C273 + C32956 * C287) *
                C32926 +
            (C7125 + C7126 + C7127) * C3603 +
            (C7128 + C7129 + C7130) * C32771) *
               C32906 +
           ((C5517 + C5518 + C5519) * C3602 + (C5520 + C5521 + C5522) * C32926 +
            (C6125 + C6124 + C6123) * C3603 +
            (C6122 + C6121 + C6120) * C32771) *
               C32595) *
              C32644 * C32630 * C110 -
          (((C6114 + C6115 + C6116) * C32771 + (C6117 + C6118 + C6119) * C3603 +
            (C5528 + C5527 + C5526) * C32926 +
            (C5525 + C5524 + C5523) * C3602) *
               C32595 +
           ((C6120 + C6121 + C6122) * C32771 + (C6123 + C6124 + C6125) * C3603 +
            (C5522 + C5521 + C5520) * C32926 +
            (C5519 + C5518 + C5517) * C3602) *
               C32906) *
              C32644 * C32630 * C111 +
          ((C5537 * C3602 + C5538 * C32926 + (C6119 + C6118 + C6117) * C3603 +
            (C6116 + C6115 + C6114) * C32771) *
               C32906 +
           ((C5534 + C5533 + C5532) * C3602 + (C5531 + C5530 + C5529) * C32926 +
            (C5477 * C358 + C5471 * C370 + C5478 * C724 + C5472 * C732 +
             C5479 * C1533 + C32956 * C1534) *
                C3603 +
            (C5477 * C369 + C5471 * C388 + C5478 * C733 + C5472 * C739 +
             C5479 * C1535 + C32956 * C1536) *
                C32771) *
               C32595) *
              C32644 * C32630 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C5477 * C115 + C5471 * C122 + C5478 * C256 + C5472 * C271 +
             C5479 * C257 + C32956 * C272) *
                C3602 +
            (C5477 * C123 + C5471 * C136 + C5478 * C270 + C5472 * C286 +
             C5479 * C273 + C32956 * C287) *
                C32926 +
            (C7125 + C7126 + C7127) * C3603 +
            (C7128 + C7129 + C7130) * C32771) *
               C32906 +
           ((C5517 + C5518 + C5519) * C3602 + (C5520 + C5521 + C5522) * C32926 +
            (C6125 + C6124 + C6123) * C3603 +
            (C6122 + C6121 + C6120) * C32771) *
               C32595) *
              C32644 * C248 -
          (((C5479 * C1725 + C32956 * C1729 + C5478 * C1176 + C5472 * C1193 +
             C5477 * C729 + C5471 * C737) *
                C32771 +
            (C5479 * C1720 + C32956 * C1724 + C5478 * C1166 + C5472 * C1177 +
             C5477 * C722 + C5471 * C728) *
                C3603 +
            (C5938 + C5939 + C5940) * C32926 +
            (C5941 + C5942 + C5943) * C3602) *
               C32595 +
           ((C7644 + C7643 + C7642) * C32771 + (C7641 + C7640 + C7639) * C3603 +
            (C5479 * C1041 + C32956 * C1051 + C5478 * C273 + C5472 * C287 +
             C5477 * C270 + C5471 * C286) *
                C32926 +
            (C5479 * C1033 + C32956 * C1042 + C5478 * C257 + C5472 * C272 +
             C5477 * C256 + C5471 * C271) *
                C3602) *
               C32906) *
              C32644 * C249 +
          (((C5477 * C257 + C5471 * C272 + C5478 * C1033 + C5472 * C1042 +
             C5479 * C1034 + C32956 * C1043) *
                C3602 +
            (C5477 * C273 + C5471 * C287 + C5478 * C1041 + C5472 * C1051 +
             C5479 * C1044 + C32956 * C1052) *
                C32926 +
            (C5477 * C1167 + C5471 * C1179 + C5478 * C1719 + C5472 * C1722 +
             C5479 * C6476 + C32956 * C6480) *
                C3603 +
            (C5477 * C1178 + C5471 * C1194 + C5478 * C1723 + C5472 * C1728 +
             C5479 * C6479 + C32956 * C6485) *
                C32771) *
               C32906 +
           ((C5477 * C258 + C5471 * C274 + C5478 * C1032 + C5472 * C1040 +
             C5479 * C1035 + C32956 * C1045) *
                C3602 +
            (C5477 * C275 + C5471 * C288 + C5478 * C1039 + C5472 * C1050 +
             C5479 * C1046 + C32956 * C1053) *
                C32926 +
            (C5477 * C1166 + C5471 * C1177 + C5478 * C1720 + C5472 * C1724 +
             C5479 * C6656 + C32956 * C6657) *
                C3603 +
            (C5477 * C1176 + C5471 * C1193 + C5478 * C1725 + C5472 * C1729 +
             C5479 * C6658 + C32956 * C6659) *
                C32771) *
               C32595) *
              C32644 * C250) *
         C32618) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C32667 * C122) * C13611 +
            (C113 * C123 + C32667 * C136) * C13607 + C2153 * C13612 +
            C2154 * C13608 + C2155 * C13613 + C2156 * C13609 + C2162 * C13614 +
            C2161 * C32972) *
               C32906 +
           (C13616 + C13617 + C13618 + C13619 + C13620 + C13621 + C13622 +
            C13623) *
               C32595) *
              C32644 * C32630 * C110 -
          ((C13624 + C13625 + C13626 + C13627 + C13628 + C13629 + C13630 +
            C13631) *
               C32595 +
           (C13623 + C13622 + C13621 + C13620 + C13619 + C13618 + C13617 +
            C13616) *
               C32906) *
              C32644 * C32630 * C111 +
          ((C13631 + C13630 + C13629 + C13628 + C13627 + C13626 + C13625 +
            C13624) *
               C32906 +
           (C168 * C13611 + C169 * C13607 + C627 * C13612 + C626 * C13608 +
            C1878 * C13613 + C1877 * C13609 +
            (C113 * C2494 + C32667 * C2495) * C13614 +
            (C113 * C2496 + C32667 * C2497) * C32972) *
               C32595) *
              C32644 * C32630 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C32667 * C122) * C13611 +
            (C113 * C123 + C32667 * C136) * C13607 + C2153 * C13612 +
            C2154 * C13608 + C2155 * C13613 + C2156 * C13609 + C2162 * C13614 +
            C2161 * C32972) *
               C32906 +
           (C13616 + C13617 + C13618 + C13619 + C13620 + C13621 + C13622 +
            C13623) *
               C32595) *
              C32644 * C248 -
          (((C113 * C2662 + C32667 * C2666) * C32972 +
            (C113 * C2657 + C32667 * C2661) * C13614 + C2337 * C13609 +
            C2338 * C13613 + C2339 * C13608 + C2340 * C13612 + C510 * C13607 +
            C511 * C13611) *
               C32595 +
           (C12433 * C32972 + C12432 * C13614 + C2680 * C13609 +
            C2679 * C13613 + C2678 * C13608 + C2677 * C13612 +
            (C113 * C270 + C32667 * C286) * C13607 +
            (C113 * C256 + C32667 * C271) * C13611) *
               C32906) *
              C32644 * C249 +
          (((C113 * C257 + C32667 * C272) * C13611 +
            (C113 * C273 + C32667 * C287) * C13607 +
            (C113 * C1167 + C32667 * C1179) * C13612 +
            (C113 * C1178 + C32667 * C1194) * C13608 +
            (C113 * C1169 + C32667 * C1181) * C13613 +
            (C113 * C1183 + C32667 * C1196) * C13609 +
            (C113 * C7076 + C32667 * C7080) * C13614 +
            (C113 * C7079 + C32667 * C7085) * C32972) *
               C32906 +
           ((C113 * C258 + C32667 * C274) * C13611 +
            (C113 * C275 + C32667 * C288) * C13607 +
            (C113 * C1166 + C32667 * C1177) * C13612 +
            (C113 * C1176 + C32667 * C1193) * C13608 +
            (C113 * C1171 + C32667 * C1185) * C13613 +
            (C113 * C1187 + C32667 * C1198) * C13609 +
            (C113 * C7442 + C32667 * C7443) * C13614 +
            (C113 * C7444 + C32667 * C7445) * C32972) *
               C32595) *
              C32644 * C250) *
         C32618) /
            (p * q * std::sqrt(p + q));
    d2ee[70] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C857 * C115 + C32991 * C122 + C858 * C256 + C32979 * C271 +
              C859 * C257 + C32956 * C272) *
                 C114 +
             (C857 * C123 + C32991 * C136 + C858 * C270 + C32979 * C286 +
              C859 * C273 + C32956 * C287) *
                 C32684) *
                C854 +
            ((C897 + C898 + C899) * C114 + (C900 + C901 + C902) * C32684) *
                C855 +
            C921 * C32945) *
               C32644 * C479 -
           (((C1376 + C1377 + C1378) * C32684 +
             (C1379 + C1380 + C1381) * C114) *
                C32945 +
            ((C1382 + C1383 + C1384) * C32684 +
             (C1385 + C1386 + C1387) * C114) *
                C855 +
            ((C859 * C1041 + C32956 * C1051 + C858 * C273 + C32979 * C287 +
              C857 * C270 + C32991 * C286) *
                 C32684 +
             (C859 * C1033 + C32956 * C1042 + C858 * C257 + C32979 * C272 +
              C857 * C256 + C32991 * C271) *
                 C114) *
                C854) *
               C32644 * C480) *
              C481 +
          ((((C1387 + C1386 + C1385) * C114 +
             (C1384 + C1383 + C1382) * C32684) *
                C854 +
            ((C1381 + C1380 + C1379) * C114 +
             (C1378 + C1377 + C1376) * C32684) *
                C855 +
            ((C857 * C253 + C32991 * C265 + C858 * C260 + C32979 * C278 +
              C859 * C1347 + C32956 * C1348) *
                 C114 +
             (C857 * C264 + C32991 * C283 + C858 * C279 + C32979 * C290 +
              C859 * C1349 + C32956 * C1350) *
                 C32684) *
                C32945) *
               C32644 * C480 -
           (((C909 + C910 + C911) * C32684 + (C912 + C913 + C914) * C114) *
                C32945 +
            ((C908 + C907 + C906) * C32684 + (C905 + C904 + C903) * C114) *
                C855 +
            ((C902 + C901 + C900) * C32684 + (C899 + C898 + C897) * C114) *
                C854) *
               C32644 * C479) *
              C482)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C32667 * C122) * C114 +
             (C113 * C123 + C32667 * C136) * C32684) *
                C103 +
            (C174 + C175) * C104 + C184 * C105 + C185 * C106 + C186 * C107) *
               C32644 * C479 -
           ((C512 + C513) * C107 + (C514 + C515) * C106 + (C516 + C517) * C105 +
            (C518 + C519) * C104 +
            ((C113 * C270 + C32667 * C286) * C32684 +
             (C113 * C256 + C32667 * C271) * C114) *
                C103) *
               C32644 * C480) *
              C481 +
          (((C519 + C518) * C103 + (C517 + C516) * C104 + (C515 + C514) * C105 +
            (C513 + C512) * C106 +
            ((C113 * C483 + C32667 * C484) * C114 +
             (C113 * C485 + C32667 * C486) * C32684) *
                C107) *
               C32644 * C480 -
           ((C182 + C183) * C107 + (C181 + C180) * C106 + (C179 + C178) * C105 +
            (C177 + C176) * C104 + (C175 + C174) * C103) *
               C32644 * C479) *
              C482)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C5477 * C115 + C5471 * C122 + C5478 * C256 + C5472 * C271 +
              C5479 * C257 + C32956 * C272) *
                 C114 +
             (C5477 * C123 + C5471 * C136 + C5478 * C270 + C5472 * C286 +
              C5479 * C273 + C32956 * C287) *
                 C32684) *
                C32988 +
            ((C5517 + C5518 + C5519) * C114 +
             (C5520 + C5521 + C5522) * C32684) *
                C32975 +
            C5541 * C32945) *
               C32644 * C479 -
           (((C5932 + C5933 + C5934) * C32684 +
             (C5935 + C5936 + C5937) * C114) *
                C32945 +
            ((C5938 + C5939 + C5940) * C32684 +
             (C5941 + C5942 + C5943) * C114) *
                C32975 +
            ((C5479 * C1041 + C32956 * C1051 + C5478 * C273 + C5472 * C287 +
              C5477 * C270 + C5471 * C286) *
                 C32684 +
             (C5479 * C1033 + C32956 * C1042 + C5478 * C257 + C5472 * C272 +
              C5477 * C256 + C5471 * C271) *
                 C114) *
                C32988) *
               C32644 * C480) *
              C481 +
          ((((C5943 + C5942 + C5941) * C114 +
             (C5940 + C5939 + C5938) * C32684) *
                C32988 +
            ((C5937 + C5936 + C5935) * C114 +
             (C5934 + C5933 + C5932) * C32684) *
                C32975 +
            ((C5477 * C253 + C5471 * C265 + C5478 * C260 + C5472 * C278 +
              C5479 * C1347 + C32956 * C1348) *
                 C114 +
             (C5477 * C264 + C5471 * C283 + C5478 * C279 + C5472 * C290 +
              C5479 * C1349 + C32956 * C1350) *
                 C32684) *
                C32945) *
               C32644 * C480 -
           (((C5529 + C5530 + C5531) * C32684 +
             (C5532 + C5533 + C5534) * C114) *
                C32945 +
            ((C5528 + C5527 + C5526) * C32684 +
             (C5525 + C5524 + C5523) * C114) *
                C32975 +
            ((C5522 + C5521 + C5520) * C32684 +
             (C5519 + C5518 + C5517) * C114) *
                C32988) *
               C32644 * C479) *
              C482)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C6339 * C115 + C6333 * C122 + C6340 * C256 + C6334 * C271 +
             C6341 * C257 + C6335 * C272 + C6342 * C1033 + C6336 * C1042 +
             C6343 * C1034 + C6337 * C1043) *
                C114 +
            (C6339 * C123 + C6333 * C136 + C6340 * C270 + C6334 * C286 +
             C6341 * C273 + C6335 * C287 + C6342 * C1041 + C6336 * C1051 +
             C6343 * C1044 + C6337 * C1052) *
                C32684) *
               C32585 * C32644 * C479 -
           ((C6343 * C6408 + C6337 * C6412 + C6342 * C1044 + C6336 * C1052 +
             C6341 * C1041 + C6335 * C1051 + C6340 * C273 + C6334 * C287 +
             C6339 * C270 + C6333 * C286) *
                C32684 +
            (C6343 * C6406 + C6337 * C6409 + C6342 * C1034 + C6336 * C1043 +
             C6341 * C1033 + C6335 * C1042 + C6340 * C257 + C6334 * C272 +
             C6339 * C256 + C6333 * C271) *
                C114) *
               C32585 * C32644 * C480) *
              C481 +
          (((C6339 * C255 + C6333 * C269 + C6340 * C258 + C6334 * C274 +
             C6341 * C1032 + C6335 * C1040 + C6342 * C1035 + C6336 * C1045 +
             C6343 * C6570 + C6337 * C6571) *
                C114 +
            (C6339 * C268 + C6333 * C285 + C6340 * C275 + C6334 * C288 +
             C6341 * C1039 + C6335 * C1050 + C6342 * C1046 + C6336 * C1053 +
             C6343 * C6572 + C6337 * C6573) *
                C32684) *
               C32585 * C32644 * C480 -
           ((C6343 * C1046 + C6337 * C1053 + C6342 * C1039 + C6336 * C1050 +
             C6341 * C275 + C6335 * C288 + C6340 * C268 + C6334 * C285 +
             C6339 * C125 + C6333 * C137) *
                C32684 +
            (C6343 * C1035 + C6337 * C1045 + C6342 * C1032 + C6336 * C1040 +
             C6341 * C258 + C6335 * C274 + C6340 * C255 + C6334 * C269 +
             C6339 * C116 + C6333 * C124) *
                C114) *
               C32585 * C32644 * C479) *
              C482)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C32667 * C122) * C10355 +
             (C113 * C123 + C32667 * C136) * C10352 + C2153 * C10356 +
             C2154 * C10353 + C2155 * C10357 + C2156 * C32959) *
                C32988 +
            (C10359 + C10360 + C10361 + C10362 + C10363 + C10364) * C32975 +
            C10381 * C32945) *
               C32644 * C479 -
           ((C10748 + C10749 + C10750 + C10751 + C10752 + C10753) * C32945 +
            (C10754 + C10755 + C10756 + C10757 + C10758 + C10759) * C32975 +
            (C2680 * C32959 + C2679 * C10357 + C2678 * C10353 + C2677 * C10356 +
             (C113 * C270 + C32667 * C286) * C10352 +
             (C113 * C256 + C32667 * C271) * C10355) *
                C32988) *
               C32644 * C480) *
              C481 +
          (((C10759 + C10758 + C10757 + C10756 + C10755 + C10754) * C32988 +
            (C10753 + C10752 + C10751 + C10750 + C10749 + C10748) * C32975 +
            (C507 * C10355 + C506 * C10352 + C3968 * C10356 + C3967 * C10353 +
             (C113 * C2308 + C32667 * C2309) * C10357 +
             (C113 * C2310 + C32667 * C2311) * C32959) *
                C32945) *
               C32644 * C480 -
           ((C10371 + C10372 + C10373 + C10374 + C10375 + C10376) * C32945 +
            (C10370 + C10369 + C10368 + C10367 + C10366 + C10365) * C32975 +
            (C10364 + C10363 + C10362 + C10361 + C10360 + C10359) * C32988) *
               C32644 * C479) *
              C482)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C857 * C115 + C32991 * C122 + C858 * C256 + C32979 * C271 +
             C859 * C257 + C32956 * C272) *
                C10355 +
            (C857 * C123 + C32991 * C136 + C858 * C270 + C32979 * C286 +
             C859 * C273 + C32956 * C287) *
                C10352 +
            (C11430 + C11431 + C11432) * C10356 +
            (C11433 + C11434 + C11435) * C10353 + C11450 * C10357 +
            C11451 * C32959) *
               C32585 * C32644 * C479 -
           ((C859 * C6483 + C32956 * C6486 + C858 * C1183 + C32979 * C1196 +
             C857 * C1182 + C32991 * C1195) *
                C32959 +
            (C859 * C6477 + C32956 * C6481 + C858 * C1169 + C32979 * C1181 +
             C857 * C1168 + C32991 * C1180) *
                C10357 +
            (C859 * C1723 + C32956 * C1728 + C858 * C1178 + C32979 * C1194 +
             C857 * C727 + C32991 * C736) *
                C10353 +
            (C859 * C1719 + C32956 * C1722 + C858 * C1167 + C32979 * C1179 +
             C857 * C721 + C32991 * C726) *
                C10356 +
            (C859 * C1041 + C32956 * C1051 + C858 * C273 + C32979 * C287 +
             C857 * C270 + C32991 * C286) *
                C10352 +
            (C859 * C1033 + C32956 * C1042 + C858 * C257 + C32979 * C272 +
             C857 * C256 + C32991 * C271) *
                C10355) *
               C32585 * C32644 * C480) *
              C481 +
          (((C1387 + C1386 + C1385) * C10355 +
            (C1384 + C1383 + C1382) * C10352 +
            (C857 * C722 + C32991 * C728 + C858 * C1166 + C32979 * C1177 +
             C859 * C1720 + C32956 * C1724) *
                C10356 +
            (C857 * C729 + C32991 * C737 + C858 * C1176 + C32979 * C1193 +
             C859 * C1725 + C32956 * C1729) *
                C10353 +
            (C857 * C1170 + C32991 * C1184 + C858 * C1171 + C32979 * C1185 +
             C859 * C7292 + C32956 * C7293) *
                C10357 +
            (C857 * C1186 + C32991 * C1197 + C858 * C1187 + C32979 * C1198 +
             C859 * C7294 + C32956 * C7295) *
                C32959) *
               C32585 * C32644 * C480 -
           ((C859 * C1187 + C32956 * C1198 + C858 * C1186 + C32979 * C1197 +
             C857 * C380 + C32991 * C393) *
                C32959 +
            (C859 * C1171 + C32956 * C1185 + C858 * C1170 + C32979 * C1184 +
             C857 * C363 + C32991 * C379) *
                C10357 +
            (C1568 + C1569 + C1570) * C10353 +
            (C1571 + C1572 + C1573) * C10356 + (C902 + C901 + C900) * C10352 +
            (C899 + C898 + C897) * C10355) *
               C32585 * C32644 * C479) *
              C482)) /
            (p * q * std::sqrt(p + q));
    d2ee[71] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C857 * C115 + C32991 * C122 + C858 * C256 + C32979 * C271 +
              C859 * C257 + C32956 * C272) *
                 C114 +
             (C857 * C123 + C32991 * C136 + C858 * C270 + C32979 * C286 +
              C859 * C273 + C32956 * C287) *
                 C32684) *
                C854 +
            ((C897 + C898 + C899) * C114 + (C900 + C901 + C902) * C32684) *
                C855 +
            C921 * C32945) *
               C601 -
           (((C1562 + C1563 + C1564) * C32684 +
             (C1565 + C1566 + C1567) * C114) *
                C32945 +
            ((C1568 + C1569 + C1570) * C32684 +
             (C1571 + C1572 + C1573) * C114) *
                C855 +
            ((C859 * C1178 + C32956 * C1194 + C858 * C727 + C32979 * C736 +
              C857 * C375 + C32991 * C391) *
                 C32684 +
             (C859 * C1167 + C32956 * C1179 + C858 * C721 + C32979 * C726 +
              C857 * C361 + C32991 * C376) *
                 C114) *
                C854) *
               C602) *
              C479 +
          ((((C857 * C721 + C32991 * C726 + C858 * C1167 + C32979 * C1179 +
              C859 * C1719 + C32956 * C1722) *
                 C114 +
             (C857 * C727 + C32991 * C736 + C858 * C1178 + C32979 * C1194 +
              C859 * C1723 + C32956 * C1728) *
                 C32684) *
                C854 +
            ((C857 * C722 + C32991 * C728 + C858 * C1166 + C32979 * C1177 +
              C859 * C1720 + C32956 * C1724) *
                 C114 +
             (C857 * C729 + C32991 * C737 + C858 * C1176 + C32979 * C1193 +
              C859 * C1725 + C32956 * C1729) *
                 C32684) *
                C855 +
            ((C857 * C723 + C32991 * C730 + C858 * C1165 + C32979 * C1175 +
              C859 * C1721 + C32956 * C1726) *
                 C114 +
             (C857 * C731 + C32991 * C738 + C858 * C1174 + C32979 * C1192 +
              C859 * C1727 + C32956 * C1730) *
                 C32684) *
                C32945) *
               C602 -
           (((C1376 + C1377 + C1378) * C32684 +
             (C1379 + C1380 + C1381) * C114) *
                C32945 +
            ((C1382 + C1383 + C1384) * C32684 +
             (C1385 + C1386 + C1387) * C114) *
                C855 +
            ((C859 * C1041 + C32956 * C1051 + C858 * C273 + C32979 * C287 +
              C857 * C270 + C32991 * C286) *
                 C32684 +
             (C859 * C1033 + C32956 * C1042 + C858 * C257 + C32979 * C272 +
              C857 * C256 + C32991 * C271) *
                 C114) *
                C854) *
               C601) *
              C480) *
         C32618) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C32667 * C122) * C114 +
             (C113 * C123 + C32667 * C136) * C32684) *
                C103 +
            (C174 + C175) * C104 + C184 * C105 + C185 * C106 + C186 * C107) *
               C601 -
           ((C632 + C633) * C107 + (C634 + C635) * C106 + (C636 + C637) * C105 +
            (C638 + C639) * C104 +
            ((C113 * C375 + C32667 * C391) * C32684 +
             (C113 * C361 + C32667 * C376) * C114) *
                C103) *
               C602) *
              C479 +
          ((((C113 * C721 + C32667 * C726) * C114 +
             (C113 * C727 + C32667 * C736) * C32684) *
                C103 +
            ((C113 * C722 + C32667 * C728) * C114 +
             (C113 * C729 + C32667 * C737) * C32684) *
                C104 +
            ((C113 * C723 + C32667 * C730) * C114 +
             (C113 * C731 + C32667 * C738) * C32684) *
                C105 +
            ((C113 * C724 + C32667 * C732) * C114 +
             (C113 * C733 + C32667 * C739) * C32684) *
                C106 +
            ((C113 * C725 + C32667 * C734) * C114 +
             (C113 * C735 + C32667 * C740) * C32684) *
                C107) *
               C602 -
           ((C512 + C513) * C107 + (C514 + C515) * C106 + (C516 + C517) * C105 +
            (C518 + C519) * C104 +
            ((C113 * C270 + C32667 * C286) * C32684 +
             (C113 * C256 + C32667 * C271) * C114) *
                C103) *
               C601) *
              C480) *
         C32618) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C5477 * C115 + C5471 * C122 + C5478 * C256 + C5472 * C271 +
              C5479 * C257 + C32956 * C272) *
                 C114 +
             (C5477 * C123 + C5471 * C136 + C5478 * C270 + C5472 * C286 +
              C5479 * C273 + C32956 * C287) *
                 C32684) *
                C32988 +
            ((C5517 + C5518 + C5519) * C114 +
             (C5520 + C5521 + C5522) * C32684) *
                C32975 +
            C5541 * C32945) *
               C601 -
           (((C6114 + C6115 + C6116) * C32684 +
             (C6117 + C6118 + C6119) * C114) *
                C32945 +
            ((C6120 + C6121 + C6122) * C32684 +
             (C6123 + C6124 + C6125) * C114) *
                C32975 +
            ((C5479 * C1178 + C32956 * C1194 + C5478 * C727 + C5472 * C736 +
              C5477 * C375 + C5471 * C391) *
                 C32684 +
             (C5479 * C1167 + C32956 * C1179 + C5478 * C721 + C5472 * C726 +
              C5477 * C361 + C5471 * C376) *
                 C114) *
                C32988) *
               C602) *
              C479 +
          ((((C5477 * C721 + C5471 * C726 + C5478 * C1167 + C5472 * C1179 +
              C5479 * C1719 + C32956 * C1722) *
                 C114 +
             (C5477 * C727 + C5471 * C736 + C5478 * C1178 + C5472 * C1194 +
              C5479 * C1723 + C32956 * C1728) *
                 C32684) *
                C32988 +
            ((C5477 * C722 + C5471 * C728 + C5478 * C1166 + C5472 * C1177 +
              C5479 * C1720 + C32956 * C1724) *
                 C114 +
             (C5477 * C729 + C5471 * C737 + C5478 * C1176 + C5472 * C1193 +
              C5479 * C1725 + C32956 * C1729) *
                 C32684) *
                C32975 +
            ((C5477 * C723 + C5471 * C730 + C5478 * C1165 + C5472 * C1175 +
              C5479 * C1721 + C32956 * C1726) *
                 C114 +
             (C5477 * C731 + C5471 * C738 + C5478 * C1174 + C5472 * C1192 +
              C5479 * C1727 + C32956 * C1730) *
                 C32684) *
                C32945) *
               C602 -
           (((C5932 + C5933 + C5934) * C32684 +
             (C5935 + C5936 + C5937) * C114) *
                C32945 +
            ((C5938 + C5939 + C5940) * C32684 +
             (C5941 + C5942 + C5943) * C114) *
                C32975 +
            ((C5479 * C1041 + C32956 * C1051 + C5478 * C273 + C5472 * C287 +
              C5477 * C270 + C5471 * C286) *
                 C32684 +
             (C5479 * C1033 + C32956 * C1042 + C5478 * C257 + C5472 * C272 +
              C5477 * C256 + C5471 * C271) *
                 C114) *
                C32988) *
               C601) *
              C480) *
         C32618) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C6339 * C115 + C6333 * C122 + C6340 * C256 + C6334 * C271 +
             C6341 * C257 + C6335 * C272 + C6342 * C1033 + C6336 * C1042 +
             C6343 * C1034 + C6337 * C1043) *
                C114 +
            (C6339 * C123 + C6333 * C136 + C6340 * C270 + C6334 * C286 +
             C6341 * C273 + C6335 * C287 + C6342 * C1041 + C6336 * C1051 +
             C6343 * C1044 + C6337 * C1052) *
                C32684) *
               C32585 * C601 -
           ((C6343 * C6479 + C6337 * C6485 + C6342 * C1723 + C6336 * C1728 +
             C6341 * C1178 + C6335 * C1194 + C6340 * C727 + C6334 * C736 +
             C6339 * C375 + C6333 * C391) *
                C32684 +
            (C6343 * C6476 + C6337 * C6480 + C6342 * C1719 + C6336 * C1722 +
             C6341 * C1167 + C6335 * C1179 + C6340 * C721 + C6334 * C726 +
             C6339 * C361 + C6333 * C376) *
                C114) *
               C32585 * C602) *
              C479 +
          (((C6339 * C721 + C6333 * C726 + C6340 * C1167 + C6334 * C1179 +
             C6341 * C1719 + C6335 * C1722 + C6342 * C6476 + C6336 * C6480 +
             C6343 * C6742 + C6337 * C6743) *
                C114 +
            (C6339 * C727 + C6333 * C736 + C6340 * C1178 + C6334 * C1194 +
             C6341 * C1723 + C6335 * C1728 + C6342 * C6479 + C6336 * C6485 +
             C6343 * C6744 + C6337 * C6745) *
                C32684) *
               C32585 * C602 -
           ((C6343 * C6408 + C6337 * C6412 + C6342 * C1044 + C6336 * C1052 +
             C6341 * C1041 + C6335 * C1051 + C6340 * C273 + C6334 * C287 +
             C6339 * C270 + C6333 * C286) *
                C32684 +
            (C6343 * C6406 + C6337 * C6409 + C6342 * C1034 + C6336 * C1043 +
             C6341 * C1033 + C6335 * C1042 + C6340 * C257 + C6334 * C272 +
             C6339 * C256 + C6333 * C271) *
                C114) *
               C32585 * C601) *
              C480) *
         C32618) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C32667 * C122) * C10355 +
             (C113 * C123 + C32667 * C136) * C10352 + C2153 * C10356 +
             C2154 * C10353 + C2155 * C10357 + C2156 * C32959) *
                C32988 +
            (C10359 + C10360 + C10361 + C10362 + C10363 + C10364) * C32975 +
            C10381 * C32945) *
               C601 -
           ((C10906 + C10907 + C10908 + C10909 + C10910 + C10911) * C32945 +
            (C10912 + C10913 + C10914 + C10915 + C10916 + C10917) * C32975 +
            (C2161 * C32959 + C2162 * C10357 + C2156 * C10353 + C2155 * C10356 +
             C2154 * C10352 + C2153 * C10355) *
                C32988) *
               C602) *
              C479 +
          (((C2677 * C10355 + C2678 * C10352 + C2679 * C10356 + C2680 * C10353 +
             (C113 * C2656 + C32667 * C2659) * C10357 +
             (C113 * C2660 + C32667 * C2665) * C32959) *
                C32988 +
            (C2340 * C10355 + C2339 * C10352 + C2338 * C10356 + C2337 * C10353 +
             (C113 * C2657 + C32667 * C2661) * C10357 +
             (C113 * C2662 + C32667 * C2666) * C32959) *
                C32975 +
            (C2336 * C10355 + C2335 * C10352 + C2334 * C10356 + C2333 * C10353 +
             (C113 * C2658 + C32667 * C2663) * C10357 +
             (C113 * C2664 + C32667 * C2667) * C32959) *
                C32945) *
               C602 -
           ((C10748 + C10749 + C10750 + C10751 + C10752 + C10753) * C32945 +
            (C10754 + C10755 + C10756 + C10757 + C10758 + C10759) * C32975 +
            (C2680 * C32959 + C2679 * C10357 + C2678 * C10353 + C2677 * C10356 +
             (C113 * C270 + C32667 * C286) * C10352 +
             (C113 * C256 + C32667 * C271) * C10355) *
                C32988) *
               C601) *
              C480) *
         C32618) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C857 * C115 + C32991 * C122 + C858 * C256 + C32979 * C271 +
             C859 * C257 + C32956 * C272) *
                C10355 +
            (C857 * C123 + C32991 * C136 + C858 * C270 + C32979 * C286 +
             C859 * C273 + C32956 * C287) *
                C10352 +
            (C11430 + C11431 + C11432) * C10356 +
            (C11433 + C11434 + C11435) * C10353 + C11450 * C10357 +
            C11451 * C32959) *
               C32585 * C601 -
           ((C11442 + C11443 + C11444) * C32959 +
            (C11445 + C11446 + C11447) * C10357 +
            (C11441 + C11440 + C11439) * C10353 +
            (C11438 + C11437 + C11436) * C10356 +
            (C11435 + C11434 + C11433) * C10352 +
            (C11432 + C11431 + C11430) * C10355) *
               C32585 * C602) *
              C479 +
          (((C11932 + C11933 + C11934) * C10355 +
            (C11935 + C11936 + C11937) * C10352 +
            (C11938 + C11939 + C11940) * C10356 +
            (C11941 + C11942 + C11943) * C10353 +
            (C857 * C2656 + C32991 * C2659 + C858 * C7076 + C32979 * C7080 +
             C859 * C7610 + C32956 * C7611) *
                C10357 +
            (C857 * C2660 + C32991 * C2665 + C858 * C7079 + C32979 * C7085 +
             C859 * C7612 + C32956 * C7613) *
                C32959) *
               C32585 * C602 -
           ((C11943 + C11942 + C11941) * C32959 +
            (C11940 + C11939 + C11938) * C10357 +
            (C11937 + C11936 + C11935) * C10353 +
            (C11934 + C11933 + C11932) * C10356 +
            (C859 * C1041 + C32956 * C1051 + C858 * C273 + C32979 * C287 +
             C857 * C270 + C32991 * C286) *
                C10352 +
            (C859 * C1033 + C32956 * C1042 + C858 * C257 + C32979 * C272 +
             C857 * C256 + C32991 * C271) *
                C10355) *
               C32585 * C601) *
              C480) *
         C32618) /
            (p * q * std::sqrt(p + q));
    d2ee[72] +=
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             ((((C113 * C115 + C32667 * C122) * C114 +
                (C113 * C123 + C32667 * C136) * C32684) *
                   C103 +
               (C174 + C175) * C104 + C184 * C105 + C185 * C106 + C186 * C107) *
                  C32644 * C32630 * C110 -
              ((C182 + C183) * C107 + (C181 + C180) * C106 +
               (C179 + C178) * C105 + (C177 + C176) * C104 +
               (C175 + C174) * C103) *
                  C32644 * C32630 * C111 +
              (C184 * C103 + C185 * C104 + C186 * C105 + (C183 + C182) * C106 +
               ((C113 * C121 + C32667 * C134) * C114 +
                (C113 * C135 + C32667 * C142) * C32684) *
                   C107) *
                  C32644 * C32630 * C112) +
         std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             ((((C113 * C115 + C32667 * C122) * C114 +
                (C113 * C123 + C32667 * C136) * C32684) *
                   C103 +
               (C174 + C175) * C104 + C184 * C105 + C185 * C106 + C186 * C107) *
                  C32644 * C248 -
              (((C113 * C262 + C32667 * C282) * C32684 +
                (C113 * C252 + C32667 * C263) * C114) *
                   C107 +
               ((C113 * C264 + C32667 * C283) * C32684 +
                (C113 * C253 + C32667 * C265) * C114) *
                   C106 +
               ((C113 * C266 + C32667 * C284) * C32684 +
                (C113 * C254 + C32667 * C267) * C114) *
                   C105 +
               ((C113 * C268 + C32667 * C285) * C32684 +
                (C113 * C255 + C32667 * C269) * C114) *
                   C104 +
               ((C113 * C270 + C32667 * C286) * C32684 +
                (C113 * C256 + C32667 * C271) * C114) *
                   C103) *
                  C32644 * C249 +
              (((C113 * C257 + C32667 * C272) * C114 +
                (C113 * C273 + C32667 * C287) * C32684) *
                   C103 +
               ((C113 * C258 + C32667 * C274) * C114 +
                (C113 * C275 + C32667 * C288) * C32684) *
                   C104 +
               ((C113 * C259 + C32667 * C276) * C114 +
                (C113 * C277 + C32667 * C289) * C32684) *
                   C105 +
               ((C113 * C260 + C32667 * C278) * C114 +
                (C113 * C279 + C32667 * C290) * C32684) *
                   C106 +
               ((C113 * C261 + C32667 * C280) * C114 +
                (C113 * C281 + C32667 * C291) * C32684) *
                   C107) *
                  C32644 * C250) *
             C32618) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C32667 * C122) * C114 +
            (C113 * C123 + C32667 * C136) * C32684) *
               C103 +
           (C174 + C175) * C104 + C184 * C105 + C185 * C106 + C186 * C107) *
              C354 -
          (((C113 * C367 + C32667 * C387) * C32684 +
            (C113 * C357 + C32667 * C368) * C114) *
               C107 +
           ((C113 * C369 + C32667 * C388) * C32684 +
            (C113 * C358 + C32667 * C370) * C114) *
               C106 +
           ((C113 * C371 + C32667 * C389) * C32684 +
            (C113 * C359 + C32667 * C372) * C114) *
               C105 +
           ((C113 * C373 + C32667 * C390) * C32684 +
            (C113 * C360 + C32667 * C374) * C114) *
               C104 +
           ((C113 * C375 + C32667 * C391) * C32684 +
            (C113 * C361 + C32667 * C376) * C114) *
               C103) *
              C355 +
          (((C113 * C362 + C32667 * C377) * C114 +
            (C113 * C378 + C32667 * C392) * C32684) *
               C103 +
           ((C113 * C363 + C32667 * C379) * C114 +
            (C113 * C380 + C32667 * C393) * C32684) *
               C104 +
           ((C113 * C364 + C32667 * C381) * C114 +
            (C113 * C382 + C32667 * C394) * C32684) *
               C105 +
           ((C113 * C365 + C32667 * C383) * C114 +
            (C113 * C384 + C32667 * C395) * C32684) *
               C106 +
           ((C113 * C366 + C32667 * C385) * C114 +
            (C113 * C386 + C32667 * C396) * C32684) *
               C107) *
              C356) *
         C32630 * C32618) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C857 * C115 + C32991 * C122 + C858 * C256 + C32979 * C271 +
             C859 * C257 + C32956 * C272) *
                C114 +
            (C857 * C123 + C32991 * C136 + C858 * C270 + C32979 * C286 +
             C859 * C273 + C32956 * C287) *
                C32684) *
               C854 +
           ((C897 + C898 + C899) * C114 + (C900 + C901 + C902) * C32684) *
               C855 +
           C921 * C32945) *
              C32644 * C32630 * C110 -
          (((C909 + C910 + C911) * C32684 + (C912 + C913 + C914) * C114) *
               C32945 +
           ((C908 + C907 + C906) * C32684 + (C905 + C904 + C903) * C114) *
               C855 +
           ((C902 + C901 + C900) * C32684 + (C899 + C898 + C897) * C114) *
               C854) *
              C32644 * C32630 * C111 +
          (C921 * C854 +
           ((C914 + C913 + C912) * C114 + (C911 + C910 + C909) * C32684) *
               C855 +
           ((C857 * C119 + C32991 * C130 + C858 * C252 + C32979 * C263 +
             C859 * C261 + C32956 * C280) *
                C114 +
            (C857 * C131 + C32991 * C140 + C858 * C262 + C32979 * C282 +
             C859 * C281 + C32956 * C291) *
                C32684) *
               C32945) *
              C32644 * C32630 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C857 * C115 + C32991 * C122 + C858 * C256 + C32979 * C271 +
             C859 * C257 + C32956 * C272) *
                C114 +
            (C857 * C123 + C32991 * C136 + C858 * C270 + C32979 * C286 +
             C859 * C273 + C32956 * C287) *
                C32684) *
               C854 +
           ((C897 + C898 + C899) * C114 + (C900 + C901 + C902) * C32684) *
               C855 +
           C921 * C32945) *
              C32644 * C248 -
          (((C859 * C1037 + C32956 * C1049 + C858 * C277 + C32979 * C289 +
             C857 * C266 + C32991 * C284) *
                C32684 +
            (C859 * C1031 + C32956 * C1038 + C858 * C259 + C32979 * C276 +
             C857 * C254 + C32991 * C267) *
                C114) *
               C32945 +
           ((C859 * C1039 + C32956 * C1050 + C858 * C275 + C32979 * C288 +
             C857 * C268 + C32991 * C285) *
                C32684 +
            (C859 * C1032 + C32956 * C1040 + C858 * C258 + C32979 * C274 +
             C857 * C255 + C32991 * C269) *
                C114) *
               C855 +
           ((C859 * C1041 + C32956 * C1051 + C858 * C273 + C32979 * C287 +
             C857 * C270 + C32991 * C286) *
                C32684 +
            (C859 * C1033 + C32956 * C1042 + C858 * C257 + C32979 * C272 +
             C857 * C256 + C32991 * C271) *
                C114) *
               C854) *
              C32644 * C249 +
          (((C857 * C257 + C32991 * C272 + C858 * C1033 + C32979 * C1042 +
             C859 * C1034 + C32956 * C1043) *
                C114 +
            (C857 * C273 + C32991 * C287 + C858 * C1041 + C32979 * C1051 +
             C859 * C1044 + C32956 * C1052) *
                C32684) *
               C854 +
           ((C857 * C258 + C32991 * C274 + C858 * C1032 + C32979 * C1040 +
             C859 * C1035 + C32956 * C1045) *
                C114 +
            (C857 * C275 + C32991 * C288 + C858 * C1039 + C32979 * C1050 +
             C859 * C1046 + C32956 * C1053) *
                C32684) *
               C855 +
           ((C857 * C259 + C32991 * C276 + C858 * C1031 + C32979 * C1038 +
             C859 * C1036 + C32956 * C1047) *
                C114 +
            (C857 * C277 + C32991 * C289 + C858 * C1037 + C32979 * C1049 +
             C859 * C1048 + C32956 * C1054) *
                C32684) *
               C32945) *
              C32644 * C250) *
         C32618) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C857 * C115 + C32991 * C122 + C858 * C256 + C32979 * C271 +
             C859 * C257 + C32956 * C272) *
                C114 +
            (C857 * C123 + C32991 * C136 + C858 * C270 + C32979 * C286 +
             C859 * C273 + C32956 * C287) *
                C32684) *
               C854 +
           ((C897 + C898 + C899) * C114 + (C900 + C901 + C902) * C32684) *
               C855 +
           C921 * C32945) *
              C354 -
          (((C859 * C1174 + C32956 * C1192 + C858 * C731 + C32979 * C738 +
             C857 * C371 + C32991 * C389) *
                C32684 +
            (C859 * C1165 + C32956 * C1175 + C858 * C723 + C32979 * C730 +
             C857 * C359 + C32991 * C372) *
                C114) *
               C32945 +
           ((C859 * C1176 + C32956 * C1193 + C858 * C729 + C32979 * C737 +
             C857 * C373 + C32991 * C390) *
                C32684 +
            (C859 * C1166 + C32956 * C1177 + C858 * C722 + C32979 * C728 +
             C857 * C360 + C32991 * C374) *
                C114) *
               C855 +
           ((C859 * C1178 + C32956 * C1194 + C858 * C727 + C32979 * C736 +
             C857 * C375 + C32991 * C391) *
                C32684 +
            (C859 * C1167 + C32956 * C1179 + C858 * C721 + C32979 * C726 +
             C857 * C361 + C32991 * C376) *
                C114) *
               C854) *
              C355 +
          (((C857 * C362 + C32991 * C377 + C858 * C1168 + C32979 * C1180 +
             C859 * C1169 + C32956 * C1181) *
                C114 +
            (C857 * C378 + C32991 * C392 + C858 * C1182 + C32979 * C1195 +
             C859 * C1183 + C32956 * C1196) *
                C32684) *
               C854 +
           ((C857 * C363 + C32991 * C379 + C858 * C1170 + C32979 * C1184 +
             C859 * C1171 + C32956 * C1185) *
                C114 +
            (C857 * C380 + C32991 * C393 + C858 * C1186 + C32979 * C1197 +
             C859 * C1187 + C32956 * C1198) *
                C32684) *
               C855 +
           ((C857 * C364 + C32991 * C381 + C858 * C1172 + C32979 * C1188 +
             C859 * C1173 + C32956 * C1189) *
                C114 +
            (C857 * C382 + C32991 * C394 + C858 * C1190 + C32979 * C1199 +
             C859 * C1191 + C32956 * C1200) *
                C32684) *
               C32945) *
              C356) *
         C32630 * C32618) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C5477 * C115 + C5471 * C122 + C5478 * C256 + C5472 * C271 +
             C5479 * C257 + C32956 * C272) *
                C114 +
            (C5477 * C123 + C5471 * C136 + C5478 * C270 + C5472 * C286 +
             C5479 * C273 + C32956 * C287) *
                C32684) *
               C32988 +
           ((C5517 + C5518 + C5519) * C114 + (C5520 + C5521 + C5522) * C32684) *
               C32975 +
           C5541 * C32945) *
              C32644 * C32630 * C110 -
          (((C5529 + C5530 + C5531) * C32684 + (C5532 + C5533 + C5534) * C114) *
               C32945 +
           ((C5528 + C5527 + C5526) * C32684 + (C5525 + C5524 + C5523) * C114) *
               C32975 +
           ((C5522 + C5521 + C5520) * C32684 + (C5519 + C5518 + C5517) * C114) *
               C32988) *
              C32644 * C32630 * C111 +
          (C5541 * C32988 +
           ((C5534 + C5533 + C5532) * C114 + (C5531 + C5530 + C5529) * C32684) *
               C32975 +
           ((C5477 * C119 + C5471 * C130 + C5478 * C252 + C5472 * C263 +
             C5479 * C261 + C32956 * C280) *
                C114 +
            (C5477 * C131 + C5471 * C140 + C5478 * C262 + C5472 * C282 +
             C5479 * C281 + C32956 * C291) *
                C32684) *
               C32945) *
              C32644 * C32630 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C5477 * C115 + C5471 * C122 + C5478 * C256 + C5472 * C271 +
             C5479 * C257 + C32956 * C272) *
                C114 +
            (C5477 * C123 + C5471 * C136 + C5478 * C270 + C5472 * C286 +
             C5479 * C273 + C32956 * C287) *
                C32684) *
               C32988 +
           ((C5517 + C5518 + C5519) * C114 + (C5520 + C5521 + C5522) * C32684) *
               C32975 +
           C5541 * C32945) *
              C32644 * C248 -
          (((C5479 * C1037 + C32956 * C1049 + C5478 * C277 + C5472 * C289 +
             C5477 * C266 + C5471 * C284) *
                C32684 +
            (C5479 * C1031 + C32956 * C1038 + C5478 * C259 + C5472 * C276 +
             C5477 * C254 + C5471 * C267) *
                C114) *
               C32945 +
           ((C5479 * C1039 + C32956 * C1050 + C5478 * C275 + C5472 * C288 +
             C5477 * C268 + C5471 * C285) *
                C32684 +
            (C5479 * C1032 + C32956 * C1040 + C5478 * C258 + C5472 * C274 +
             C5477 * C255 + C5471 * C269) *
                C114) *
               C32975 +
           ((C5479 * C1041 + C32956 * C1051 + C5478 * C273 + C5472 * C287 +
             C5477 * C270 + C5471 * C286) *
                C32684 +
            (C5479 * C1033 + C32956 * C1042 + C5478 * C257 + C5472 * C272 +
             C5477 * C256 + C5471 * C271) *
                C114) *
               C32988) *
              C32644 * C249 +
          (((C5477 * C257 + C5471 * C272 + C5478 * C1033 + C5472 * C1042 +
             C5479 * C1034 + C32956 * C1043) *
                C114 +
            (C5477 * C273 + C5471 * C287 + C5478 * C1041 + C5472 * C1051 +
             C5479 * C1044 + C32956 * C1052) *
                C32684) *
               C32988 +
           ((C5477 * C258 + C5471 * C274 + C5478 * C1032 + C5472 * C1040 +
             C5479 * C1035 + C32956 * C1045) *
                C114 +
            (C5477 * C275 + C5471 * C288 + C5478 * C1039 + C5472 * C1050 +
             C5479 * C1046 + C32956 * C1053) *
                C32684) *
               C32975 +
           ((C5477 * C259 + C5471 * C276 + C5478 * C1031 + C5472 * C1038 +
             C5479 * C1036 + C32956 * C1047) *
                C114 +
            (C5477 * C277 + C5471 * C289 + C5478 * C1037 + C5472 * C1049 +
             C5479 * C1048 + C32956 * C1054) *
                C32684) *
               C32945) *
              C32644 * C250) *
         C32618) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C5477 * C115 + C5471 * C122 + C5478 * C256 + C5472 * C271 +
             C5479 * C257 + C32956 * C272) *
                C114 +
            (C5477 * C123 + C5471 * C136 + C5478 * C270 + C5472 * C286 +
             C5479 * C273 + C32956 * C287) *
                C32684) *
               C32988 +
           ((C5517 + C5518 + C5519) * C114 + (C5520 + C5521 + C5522) * C32684) *
               C32975 +
           C5541 * C32945) *
              C354 -
          (((C5479 * C1174 + C32956 * C1192 + C5478 * C731 + C5472 * C738 +
             C5477 * C371 + C5471 * C389) *
                C32684 +
            (C5479 * C1165 + C32956 * C1175 + C5478 * C723 + C5472 * C730 +
             C5477 * C359 + C5471 * C372) *
                C114) *
               C32945 +
           ((C5479 * C1176 + C32956 * C1193 + C5478 * C729 + C5472 * C737 +
             C5477 * C373 + C5471 * C390) *
                C32684 +
            (C5479 * C1166 + C32956 * C1177 + C5478 * C722 + C5472 * C728 +
             C5477 * C360 + C5471 * C374) *
                C114) *
               C32975 +
           ((C5479 * C1178 + C32956 * C1194 + C5478 * C727 + C5472 * C736 +
             C5477 * C375 + C5471 * C391) *
                C32684 +
            (C5479 * C1167 + C32956 * C1179 + C5478 * C721 + C5472 * C726 +
             C5477 * C361 + C5471 * C376) *
                C114) *
               C32988) *
              C355 +
          (((C5477 * C362 + C5471 * C377 + C5478 * C1168 + C5472 * C1180 +
             C5479 * C1169 + C32956 * C1181) *
                C114 +
            (C5477 * C378 + C5471 * C392 + C5478 * C1182 + C5472 * C1195 +
             C5479 * C1183 + C32956 * C1196) *
                C32684) *
               C32988 +
           ((C5477 * C363 + C5471 * C379 + C5478 * C1170 + C5472 * C1184 +
             C5479 * C1171 + C32956 * C1185) *
                C114 +
            (C5477 * C380 + C5471 * C393 + C5478 * C1186 + C5472 * C1197 +
             C5479 * C1187 + C32956 * C1198) *
                C32684) *
               C32975 +
           ((C5477 * C364 + C5471 * C381 + C5478 * C1172 + C5472 * C1188 +
             C5479 * C1173 + C32956 * C1189) *
                C114 +
            (C5477 * C382 + C5471 * C394 + C5478 * C1190 + C5472 * C1199 +
             C5479 * C1191 + C32956 * C1200) *
                C32684) *
               C32945) *
              C356) *
         C32630 * C32618) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C6339 * C115 + C6333 * C122 + C6340 * C256 + C6334 * C271 +
            C6341 * C257 + C6335 * C272 + C6342 * C1033 + C6336 * C1042 +
            C6343 * C1034 + C6337 * C1043) *
               C114 +
           (C6339 * C123 + C6333 * C136 + C6340 * C270 + C6334 * C286 +
            C6341 * C273 + C6335 * C287 + C6342 * C1041 + C6336 * C1051 +
            C6343 * C1044 + C6337 * C1052) *
               C32684) *
              C32585 * C32644 * C32630 * C110 -
          ((C6343 * C1046 + C6337 * C1053 + C6342 * C1039 + C6336 * C1050 +
            C6341 * C275 + C6335 * C288 + C6340 * C268 + C6334 * C285 +
            C6339 * C125 + C6333 * C137) *
               C32684 +
           (C6343 * C1035 + C6337 * C1045 + C6342 * C1032 + C6336 * C1040 +
            C6341 * C258 + C6335 * C274 + C6340 * C255 + C6334 * C269 +
            C6339 * C116 + C6333 * C124) *
               C114) *
              C32585 * C32644 * C32630 * C111 +
          ((C6339 * C117 + C6333 * C126 + C6340 * C254 + C6334 * C267 +
            C6341 * C259 + C6335 * C276 + C6342 * C1031 + C6336 * C1038 +
            C6343 * C1036 + C6337 * C1047) *
               C114 +
           (C6339 * C127 + C6333 * C138 + C6340 * C266 + C6334 * C284 +
            C6341 * C277 + C6335 * C289 + C6342 * C1037 + C6336 * C1049 +
            C6343 * C1048 + C6337 * C1054) *
               C32684) *
              C32585 * C32644 * C32630 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C6339 * C115 + C6333 * C122 + C6340 * C256 + C6334 * C271 +
            C6341 * C257 + C6335 * C272 + C6342 * C1033 + C6336 * C1042 +
            C6343 * C1034 + C6337 * C1043) *
               C114 +
           (C6339 * C123 + C6333 * C136 + C6340 * C270 + C6334 * C286 +
            C6341 * C273 + C6335 * C287 + C6342 * C1041 + C6336 * C1051 +
            C6343 * C1044 + C6337 * C1052) *
               C32684) *
              C32585 * C32644 * C248 -
          ((C6343 * C6408 + C6337 * C6412 + C6342 * C1044 + C6336 * C1052 +
            C6341 * C1041 + C6335 * C1051 + C6340 * C273 + C6334 * C287 +
            C6339 * C270 + C6333 * C286) *
               C32684 +
           (C6343 * C6406 + C6337 * C6409 + C6342 * C1034 + C6336 * C1043 +
            C6341 * C1033 + C6335 * C1042 + C6340 * C257 + C6334 * C272 +
            C6339 * C256 + C6333 * C271) *
               C114) *
              C32585 * C32644 * C249 +
          ((C6339 * C257 + C6333 * C272 + C6340 * C1033 + C6334 * C1042 +
            C6341 * C1034 + C6335 * C1043 + C6342 * C6406 + C6336 * C6409 +
            C6343 * C6407 + C6337 * C6410) *
               C114 +
           (C6339 * C273 + C6333 * C287 + C6340 * C1041 + C6334 * C1051 +
            C6341 * C1044 + C6335 * C1052 + C6342 * C6408 + C6336 * C6412 +
            C6343 * C6411 + C6337 * C6413) *
               C32684) *
              C32585 * C32644 * C250) *
         C32618) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C6339 * C115 + C6333 * C122 + C6340 * C256 + C6334 * C271 +
            C6341 * C257 + C6335 * C272 + C6342 * C1033 + C6336 * C1042 +
            C6343 * C1034 + C6337 * C1043) *
               C114 +
           (C6339 * C123 + C6333 * C136 + C6340 * C270 + C6334 * C286 +
            C6341 * C273 + C6335 * C287 + C6342 * C1041 + C6336 * C1051 +
            C6343 * C1044 + C6337 * C1052) *
               C32684) *
              C32585 * C354 -
          ((C6343 * C6479 + C6337 * C6485 + C6342 * C1723 + C6336 * C1728 +
            C6341 * C1178 + C6335 * C1194 + C6340 * C727 + C6334 * C736 +
            C6339 * C375 + C6333 * C391) *
               C32684 +
           (C6343 * C6476 + C6337 * C6480 + C6342 * C1719 + C6336 * C1722 +
            C6341 * C1167 + C6335 * C1179 + C6340 * C721 + C6334 * C726 +
            C6339 * C361 + C6333 * C376) *
               C114) *
              C32585 * C355 +
          ((C6339 * C362 + C6333 * C377 + C6340 * C1168 + C6334 * C1180 +
            C6341 * C1169 + C6335 * C1181 + C6342 * C6477 + C6336 * C6481 +
            C6343 * C6478 + C6337 * C6482) *
               C114 +
           (C6339 * C378 + C6333 * C392 + C6340 * C1182 + C6334 * C1195 +
            C6341 * C1183 + C6335 * C1196 + C6342 * C6483 + C6336 * C6486 +
            C6343 * C6484 + C6337 * C6487) *
               C32684) *
              C32585 * C356) *
         C32630 * C32618) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C32667 * C122) * C10355 +
            (C113 * C123 + C32667 * C136) * C10352 + C2153 * C10356 +
            C2154 * C10353 + C2155 * C10357 + C2156 * C32959) *
               C32988 +
           (C10359 + C10360 + C10361 + C10362 + C10363 + C10364) * C32975 +
           C10381 * C32945) *
              C32644 * C32630 * C110 -
          ((C10371 + C10372 + C10373 + C10374 + C10375 + C10376) * C32945 +
           (C10370 + C10369 + C10368 + C10367 + C10366 + C10365) * C32975 +
           (C10364 + C10363 + C10362 + C10361 + C10360 + C10359) * C32988) *
              C32644 * C32630 * C111 +
          (C10381 * C32988 +
           (C10376 + C10375 + C10374 + C10373 + C10372 + C10371) * C32975 +
           (C170 * C10355 + C171 * C10352 + C625 * C10356 + C624 * C10353 +
            (C113 * C366 + C32667 * C385) * C10357 +
            (C113 * C386 + C32667 * C396) * C32959) *
               C32945) *
              C32644 * C32630 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C32667 * C122) * C10355 +
            (C113 * C123 + C32667 * C136) * C10352 + C2153 * C10356 +
            C2154 * C10353 + C2155 * C10357 + C2156 * C32959) *
               C32988 +
           (C10359 + C10360 + C10361 + C10362 + C10363 + C10364) * C32975 +
           C10381 * C32945) *
              C32644 * C248 -
          ((C2333 * C32959 + C2334 * C10357 + C2335 * C10353 + C2336 * C10356 +
            C508 * C10352 + C509 * C10355) *
               C32945 +
           (C2337 * C32959 + C2338 * C10357 + C2339 * C10353 + C2340 * C10356 +
            C510 * C10352 + C511 * C10355) *
               C32975 +
           (C2680 * C32959 + C2679 * C10357 + C2678 * C10353 + C2677 * C10356 +
            (C113 * C270 + C32667 * C286) * C10352 +
            (C113 * C256 + C32667 * C271) * C10355) *
               C32988) *
              C32644 * C249 +
          (((C113 * C257 + C32667 * C272) * C10355 +
            (C113 * C273 + C32667 * C287) * C10352 +
            (C113 * C1167 + C32667 * C1179) * C10356 +
            (C113 * C1178 + C32667 * C1194) * C10353 +
            (C113 * C1169 + C32667 * C1181) * C10357 +
            (C113 * C1183 + C32667 * C1196) * C32959) *
               C32988 +
           ((C113 * C258 + C32667 * C274) * C10355 +
            (C113 * C275 + C32667 * C288) * C10352 +
            (C113 * C1166 + C32667 * C1177) * C10356 +
            (C113 * C1176 + C32667 * C1193) * C10353 +
            (C113 * C1171 + C32667 * C1185) * C10357 +
            (C113 * C1187 + C32667 * C1198) * C32959) *
               C32975 +
           ((C113 * C259 + C32667 * C276) * C10355 +
            (C113 * C277 + C32667 * C289) * C10352 +
            (C113 * C1165 + C32667 * C1175) * C10356 +
            (C113 * C1174 + C32667 * C1192) * C10353 +
            (C113 * C1173 + C32667 * C1189) * C10357 +
            (C113 * C1191 + C32667 * C1200) * C32959) *
               C32945) *
              C32644 * C250) *
         C32618) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C32667 * C122) * C10355 +
            (C113 * C123 + C32667 * C136) * C10352 + C2153 * C10356 +
            C2154 * C10353 + C2155 * C10357 + C2156 * C32959) *
               C32988 +
           (C10359 + C10360 + C10361 + C10362 + C10363 + C10364) * C32975 +
           C10381 * C32945) *
              C354 -
          ((C2157 * C32959 + C2158 * C10357 + C1876 * C10353 + C1875 * C10356 +
            C628 * C10352 + C629 * C10355) *
               C32945 +
           (C2159 * C32959 + C2160 * C10357 + C1873 * C10353 + C1872 * C10356 +
            C630 * C10352 + C631 * C10355) *
               C32975 +
           (C2161 * C32959 + C2162 * C10357 + C2156 * C10353 + C2155 * C10356 +
            C2154 * C10352 + C2153 * C10355) *
               C32988) *
              C355 +
          ((C2155 * C10355 + C2156 * C10352 + C2162 * C10356 + C2161 * C10353 +
            (C113 * C2111 + C32667 * C2120) * C10357 +
            (C113 * C2121 + C32667 * C2129) * C32959) *
               C32988 +
           (C1872 * C10355 + C1873 * C10352 + C2160 * C10356 + C2159 * C10353 +
            (C113 * C2112 + C32667 * C2122) * C10357 +
            (C113 * C2123 + C32667 * C2130) * C32959) *
               C32975 +
           (C1875 * C10355 + C1876 * C10352 + C2158 * C10356 + C2157 * C10353 +
            (C113 * C2113 + C32667 * C2124) * C10357 +
            (C113 * C2125 + C32667 * C2131) * C32959) *
               C32945) *
              C356) *
         C32630 * C32618) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C857 * C115 + C32991 * C122 + C858 * C256 + C32979 * C271 +
            C859 * C257 + C32956 * C272) *
               C10355 +
           (C857 * C123 + C32991 * C136 + C858 * C270 + C32979 * C286 +
            C859 * C273 + C32956 * C287) *
               C10352 +
           (C857 * C361 + C32991 * C376 + C858 * C721 + C32979 * C726 +
            C859 * C1167 + C32956 * C1179) *
               C10356 +
           (C857 * C375 + C32991 * C391 + C858 * C727 + C32979 * C736 +
            C859 * C1178 + C32956 * C1194) *
               C10353 +
           (C857 * C362 + C32991 * C377 + C858 * C1168 + C32979 * C1180 +
            C859 * C1169 + C32956 * C1181) *
               C10357 +
           (C857 * C378 + C32991 * C392 + C858 * C1182 + C32979 * C1195 +
            C859 * C1183 + C32956 * C1196) *
               C32959) *
              C32585 * C32644 * C32630 * C110 -
          ((C859 * C1187 + C32956 * C1198 + C858 * C1186 + C32979 * C1197 +
            C857 * C380 + C32991 * C393) *
               C32959 +
           (C859 * C1171 + C32956 * C1185 + C858 * C1170 + C32979 * C1184 +
            C857 * C363 + C32991 * C379) *
               C10357 +
           (C1568 + C1569 + C1570) * C10353 + (C1571 + C1572 + C1573) * C10356 +
           (C902 + C901 + C900) * C10352 + (C899 + C898 + C897) * C10355) *
              C32585 * C32644 * C32630 * C111 +
          (C917 * C10355 + C918 * C10352 + (C1567 + C1566 + C1565) * C10356 +
           (C1564 + C1563 + C1562) * C10353 +
           (C857 * C364 + C32991 * C381 + C858 * C1172 + C32979 * C1188 +
            C859 * C1173 + C32956 * C1189) *
               C10357 +
           (C857 * C382 + C32991 * C394 + C858 * C1190 + C32979 * C1199 +
            C859 * C1191 + C32956 * C1200) *
               C32959) *
              C32585 * C32644 * C32630 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C857 * C115 + C32991 * C122 + C858 * C256 + C32979 * C271 +
            C859 * C257 + C32956 * C272) *
               C10355 +
           (C857 * C123 + C32991 * C136 + C858 * C270 + C32979 * C286 +
            C859 * C273 + C32956 * C287) *
               C10352 +
           (C857 * C361 + C32991 * C376 + C858 * C721 + C32979 * C726 +
            C859 * C1167 + C32956 * C1179) *
               C10356 +
           (C857 * C375 + C32991 * C391 + C858 * C727 + C32979 * C736 +
            C859 * C1178 + C32956 * C1194) *
               C10353 +
           (C857 * C362 + C32991 * C377 + C858 * C1168 + C32979 * C1180 +
            C859 * C1169 + C32956 * C1181) *
               C10357 +
           (C857 * C378 + C32991 * C392 + C858 * C1182 + C32979 * C1195 +
            C859 * C1183 + C32956 * C1196) *
               C32959) *
              C32585 * C32644 * C248 -
          ((C859 * C6483 + C32956 * C6486 + C858 * C1183 + C32979 * C1196 +
            C857 * C1182 + C32991 * C1195) *
               C32959 +
           (C859 * C6477 + C32956 * C6481 + C858 * C1169 + C32979 * C1181 +
            C857 * C1168 + C32991 * C1180) *
               C10357 +
           (C859 * C1723 + C32956 * C1728 + C858 * C1178 + C32979 * C1194 +
            C857 * C727 + C32991 * C736) *
               C10353 +
           (C859 * C1719 + C32956 * C1722 + C858 * C1167 + C32979 * C1179 +
            C857 * C721 + C32991 * C726) *
               C10356 +
           (C859 * C1041 + C32956 * C1051 + C858 * C273 + C32979 * C287 +
            C857 * C270 + C32991 * C286) *
               C10352 +
           (C859 * C1033 + C32956 * C1042 + C858 * C257 + C32979 * C272 +
            C857 * C256 + C32991 * C271) *
               C10355) *
              C32585 * C32644 * C249 +
          ((C857 * C257 + C32991 * C272 + C858 * C1033 + C32979 * C1042 +
            C859 * C1034 + C32956 * C1043) *
               C10355 +
           (C857 * C273 + C32991 * C287 + C858 * C1041 + C32979 * C1051 +
            C859 * C1044 + C32956 * C1052) *
               C10352 +
           (C857 * C1167 + C32991 * C1179 + C858 * C1719 + C32979 * C1722 +
            C859 * C6476 + C32956 * C6480) *
               C10356 +
           (C857 * C1178 + C32991 * C1194 + C858 * C1723 + C32979 * C1728 +
            C859 * C6479 + C32956 * C6485) *
               C10353 +
           (C857 * C1169 + C32991 * C1181 + C858 * C6477 + C32979 * C6481 +
            C859 * C6478 + C32956 * C6482) *
               C10357 +
           (C857 * C1183 + C32991 * C1196 + C858 * C6483 + C32979 * C6486 +
            C859 * C6484 + C32956 * C6487) *
               C32959) *
              C32585 * C32644 * C250) *
         C32618) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C857 * C115 + C32991 * C122 + C858 * C256 + C32979 * C271 +
            C859 * C257 + C32956 * C272) *
               C10355 +
           (C857 * C123 + C32991 * C136 + C858 * C270 + C32979 * C286 +
            C859 * C273 + C32956 * C287) *
               C10352 +
           (C11430 + C11431 + C11432) * C10356 +
           (C11433 + C11434 + C11435) * C10353 + C11450 * C10357 +
           C11451 * C32959) *
              C32585 * C354 -
          ((C11442 + C11443 + C11444) * C32959 +
           (C11445 + C11446 + C11447) * C10357 +
           (C11441 + C11440 + C11439) * C10353 +
           (C11438 + C11437 + C11436) * C10356 +
           (C11435 + C11434 + C11433) * C10352 +
           (C11432 + C11431 + C11430) * C10355) *
              C32585 * C355 +
          (C11450 * C10355 + C11451 * C10352 +
           (C11447 + C11446 + C11445) * C10356 +
           (C11444 + C11443 + C11442) * C10353 +
           (C857 * C2111 + C32991 * C2120 + C858 * C7077 + C32979 * C7081 +
            C859 * C7078 + C32956 * C7082) *
               C10357 +
           (C857 * C2121 + C32991 * C2129 + C858 * C7083 + C32979 * C7086 +
            C859 * C7084 + C32956 * C7087) *
               C32959) *
              C32585 * C356) *
         C32630 * C32618) /
            (p * q * std::sqrt(p + q));
    d2ee[73] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C857 * C115 + C32991 * C122 + C858 * C256 + C32979 * C271 +
              C859 * C257 + C32956 * C272) *
                 C114 +
             (C857 * C123 + C32991 * C136 + C858 * C270 + C32979 * C286 +
              C859 * C273 + C32956 * C287) *
                 C32684) *
                C854 +
            ((C897 + C898 + C899) * C114 + (C900 + C901 + C902) * C32684) *
                C855 +
            C921 * C32945) *
               C601 -
           (((C1562 + C1563 + C1564) * C32684 +
             (C1565 + C1566 + C1567) * C114) *
                C32945 +
            ((C1568 + C1569 + C1570) * C32684 +
             (C1571 + C1572 + C1573) * C114) *
                C855 +
            ((C859 * C1178 + C32956 * C1194 + C858 * C727 + C32979 * C736 +
              C857 * C375 + C32991 * C391) *
                 C32684 +
             (C859 * C1167 + C32956 * C1179 + C858 * C721 + C32979 * C726 +
              C857 * C361 + C32991 * C376) *
                 C114) *
                C854) *
               C602) *
              C32630 * C481 +
          ((((C1573 + C1572 + C1571) * C114 +
             (C1570 + C1569 + C1568) * C32684) *
                C854 +
            ((C1567 + C1566 + C1565) * C114 +
             (C1564 + C1563 + C1562) * C32684) *
                C855 +
            ((C857 * C358 + C32991 * C370 + C858 * C724 + C32979 * C732 +
              C859 * C1533 + C32956 * C1534) *
                 C114 +
             (C857 * C369 + C32991 * C388 + C858 * C733 + C32979 * C739 +
              C859 * C1535 + C32956 * C1536) *
                 C32684) *
                C32945) *
               C602 -
           (((C909 + C910 + C911) * C32684 + (C912 + C913 + C914) * C114) *
                C32945 +
            ((C908 + C907 + C906) * C32684 + (C905 + C904 + C903) * C114) *
                C855 +
            ((C902 + C901 + C900) * C32684 + (C899 + C898 + C897) * C114) *
                C854) *
               C601) *
              C32630 * C482)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C32667 * C122) * C114 +
             (C113 * C123 + C32667 * C136) * C32684) *
                C103 +
            (C174 + C175) * C104 + C184 * C105 + C185 * C106 + C186 * C107) *
               C601 -
           ((C632 + C633) * C107 + (C634 + C635) * C106 + (C636 + C637) * C105 +
            (C638 + C639) * C104 +
            ((C113 * C375 + C32667 * C391) * C32684 +
             (C113 * C361 + C32667 * C376) * C114) *
                C103) *
               C602) *
              C32630 * C481 +
          (((C639 + C638) * C103 + (C637 + C636) * C104 + (C635 + C634) * C105 +
            (C633 + C632) * C106 +
            ((C113 * C603 + C32667 * C604) * C114 +
             (C113 * C605 + C32667 * C606) * C32684) *
                C107) *
               C602 -
           ((C182 + C183) * C107 + (C181 + C180) * C106 + (C179 + C178) * C105 +
            (C177 + C176) * C104 + (C175 + C174) * C103) *
               C601) *
              C32630 * C482)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C5477 * C115 + C5471 * C122 + C5478 * C256 + C5472 * C271 +
              C5479 * C257 + C32956 * C272) *
                 C114 +
             (C5477 * C123 + C5471 * C136 + C5478 * C270 + C5472 * C286 +
              C5479 * C273 + C32956 * C287) *
                 C32684) *
                C32988 +
            ((C5517 + C5518 + C5519) * C114 +
             (C5520 + C5521 + C5522) * C32684) *
                C32975 +
            C5541 * C32945) *
               C601 -
           (((C6114 + C6115 + C6116) * C32684 +
             (C6117 + C6118 + C6119) * C114) *
                C32945 +
            ((C6120 + C6121 + C6122) * C32684 +
             (C6123 + C6124 + C6125) * C114) *
                C32975 +
            ((C5479 * C1178 + C32956 * C1194 + C5478 * C727 + C5472 * C736 +
              C5477 * C375 + C5471 * C391) *
                 C32684 +
             (C5479 * C1167 + C32956 * C1179 + C5478 * C721 + C5472 * C726 +
              C5477 * C361 + C5471 * C376) *
                 C114) *
                C32988) *
               C602) *
              C32630 * C481 +
          ((((C6125 + C6124 + C6123) * C114 +
             (C6122 + C6121 + C6120) * C32684) *
                C32988 +
            ((C6119 + C6118 + C6117) * C114 +
             (C6116 + C6115 + C6114) * C32684) *
                C32975 +
            ((C5477 * C358 + C5471 * C370 + C5478 * C724 + C5472 * C732 +
              C5479 * C1533 + C32956 * C1534) *
                 C114 +
             (C5477 * C369 + C5471 * C388 + C5478 * C733 + C5472 * C739 +
              C5479 * C1535 + C32956 * C1536) *
                 C32684) *
                C32945) *
               C602 -
           (((C5529 + C5530 + C5531) * C32684 +
             (C5532 + C5533 + C5534) * C114) *
                C32945 +
            ((C5528 + C5527 + C5526) * C32684 +
             (C5525 + C5524 + C5523) * C114) *
                C32975 +
            ((C5522 + C5521 + C5520) * C32684 +
             (C5519 + C5518 + C5517) * C114) *
                C32988) *
               C601) *
              C32630 * C482)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C6339 * C115 + C6333 * C122 + C6340 * C256 + C6334 * C271 +
             C6341 * C257 + C6335 * C272 + C6342 * C1033 + C6336 * C1042 +
             C6343 * C1034 + C6337 * C1043) *
                C114 +
            (C6339 * C123 + C6333 * C136 + C6340 * C270 + C6334 * C286 +
             C6341 * C273 + C6335 * C287 + C6342 * C1041 + C6336 * C1051 +
             C6343 * C1044 + C6337 * C1052) *
                C32684) *
               C32585 * C601 -
           ((C6343 * C6479 + C6337 * C6485 + C6342 * C1723 + C6336 * C1728 +
             C6341 * C1178 + C6335 * C1194 + C6340 * C727 + C6334 * C736 +
             C6339 * C375 + C6333 * C391) *
                C32684 +
            (C6343 * C6476 + C6337 * C6480 + C6342 * C1719 + C6336 * C1722 +
             C6341 * C1167 + C6335 * C1179 + C6340 * C721 + C6334 * C726 +
             C6339 * C361 + C6333 * C376) *
                C114) *
               C32585 * C602) *
              C32630 * C481 +
          (((C6339 * C360 + C6333 * C374 + C6340 * C722 + C6334 * C728 +
             C6341 * C1166 + C6335 * C1177 + C6342 * C1720 + C6336 * C1724 +
             C6343 * C6656 + C6337 * C6657) *
                C114 +
            (C6339 * C373 + C6333 * C390 + C6340 * C729 + C6334 * C737 +
             C6341 * C1176 + C6335 * C1193 + C6342 * C1725 + C6336 * C1729 +
             C6343 * C6658 + C6337 * C6659) *
                C32684) *
               C32585 * C602 -
           ((C6343 * C1046 + C6337 * C1053 + C6342 * C1039 + C6336 * C1050 +
             C6341 * C275 + C6335 * C288 + C6340 * C268 + C6334 * C285 +
             C6339 * C125 + C6333 * C137) *
                C32684 +
            (C6343 * C1035 + C6337 * C1045 + C6342 * C1032 + C6336 * C1040 +
             C6341 * C258 + C6335 * C274 + C6340 * C255 + C6334 * C269 +
             C6339 * C116 + C6333 * C124) *
                C114) *
               C32585 * C601) *
              C32630 * C482)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C32667 * C122) * C10355 +
             (C113 * C123 + C32667 * C136) * C10352 + C2153 * C10356 +
             C2154 * C10353 + C2155 * C10357 + C2156 * C32959) *
                C32988 +
            (C10359 + C10360 + C10361 + C10362 + C10363 + C10364) * C32975 +
            C10381 * C32945) *
               C601 -
           ((C10906 + C10907 + C10908 + C10909 + C10910 + C10911) * C32945 +
            (C10912 + C10913 + C10914 + C10915 + C10916 + C10917) * C32975 +
            (C2161 * C32959 + C2162 * C10357 + C2156 * C10353 + C2155 * C10356 +
             C2154 * C10352 + C2153 * C10355) *
                C32988) *
               C602) *
              C32630 * C481 +
          (((C10917 + C10916 + C10915 + C10914 + C10913 + C10912) * C32988 +
            (C10911 + C10910 + C10909 + C10908 + C10907 + C10906) * C32975 +
            (C627 * C10355 + C626 * C10352 + C1878 * C10356 + C1877 * C10353 +
             (C113 * C2494 + C32667 * C2495) * C10357 +
             (C113 * C2496 + C32667 * C2497) * C32959) *
                C32945) *
               C602 -
           ((C10371 + C10372 + C10373 + C10374 + C10375 + C10376) * C32945 +
            (C10370 + C10369 + C10368 + C10367 + C10366 + C10365) * C32975 +
            (C10364 + C10363 + C10362 + C10361 + C10360 + C10359) * C32988) *
               C601) *
              C32630 * C482)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C857 * C115 + C32991 * C122 + C858 * C256 + C32979 * C271 +
             C859 * C257 + C32956 * C272) *
                C10355 +
            (C857 * C123 + C32991 * C136 + C858 * C270 + C32979 * C286 +
             C859 * C273 + C32956 * C287) *
                C10352 +
            (C11430 + C11431 + C11432) * C10356 +
            (C11433 + C11434 + C11435) * C10353 + C11450 * C10357 +
            C11451 * C32959) *
               C32585 * C601 -
           ((C11442 + C11443 + C11444) * C32959 +
            (C11445 + C11446 + C11447) * C10357 +
            (C11441 + C11440 + C11439) * C10353 +
            (C11438 + C11437 + C11436) * C10356 +
            (C11435 + C11434 + C11433) * C10352 +
            (C11432 + C11431 + C11430) * C10355) *
               C32585 * C602) *
              C32630 * C481 +
          (((C1573 + C1572 + C1571) * C10355 +
            (C1570 + C1569 + C1568) * C10352 +
            (C11756 + C11757 + C11758) * C10356 +
            (C11759 + C11760 + C11761) * C10353 +
            (C857 * C2109 + C32991 * C2117 + C858 * C2657 + C32979 * C2661 +
             C859 * C7442 + C32956 * C7443) *
                C10357 +
            (C857 * C2116 + C32991 * C2127 + C858 * C2662 + C32979 * C2666 +
             C859 * C7444 + C32956 * C7445) *
                C32959) *
               C32585 * C602 -
           ((C11761 + C11760 + C11759) * C32959 +
            (C11758 + C11757 + C11756) * C10357 +
            (C1568 + C1569 + C1570) * C10353 +
            (C1571 + C1572 + C1573) * C10356 + (C902 + C901 + C900) * C10352 +
            (C899 + C898 + C897) * C10355) *
               C32585 * C601) *
              C32630 * C482)) /
            (p * q * std::sqrt(p + q));
    d2ee[74] +=
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C32667 * C122) * C114 +
            (C113 * C123 + C32667 * C136) * C32684) *
               C103 +
           (C174 + C175) * C104 + C184 * C105 + C185 * C106 + C186 * C107) *
              C32644 * C248 -
          (((C113 * C262 + C32667 * C282) * C32684 +
            (C113 * C252 + C32667 * C263) * C114) *
               C107 +
           ((C113 * C264 + C32667 * C283) * C32684 +
            (C113 * C253 + C32667 * C265) * C114) *
               C106 +
           ((C113 * C266 + C32667 * C284) * C32684 +
            (C113 * C254 + C32667 * C267) * C114) *
               C105 +
           ((C113 * C268 + C32667 * C285) * C32684 +
            (C113 * C255 + C32667 * C269) * C114) *
               C104 +
           ((C113 * C270 + C32667 * C286) * C32684 +
            (C113 * C256 + C32667 * C271) * C114) *
               C103) *
              C32644 * C249 +
          (((C113 * C257 + C32667 * C272) * C114 +
            (C113 * C273 + C32667 * C287) * C32684) *
               C103 +
           ((C113 * C258 + C32667 * C274) * C114 +
            (C113 * C275 + C32667 * C288) * C32684) *
               C104 +
           ((C113 * C259 + C32667 * C276) * C114 +
            (C113 * C277 + C32667 * C289) * C32684) *
               C105 +
           ((C113 * C260 + C32667 * C278) * C114 +
            (C113 * C279 + C32667 * C290) * C32684) *
               C106 +
           ((C113 * C261 + C32667 * C280) * C114 +
            (C113 * C281 + C32667 * C291) * C32684) *
               C107) *
              C32644 * C250) *
         C32618) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C32667 * C122) * C114 +
            (C113 * C123 + C32667 * C136) * C32684) *
               C103 +
           (C174 + C175) * C104 + C184 * C105 + C185 * C106 + C186 * C107) *
              C32644 * C32630 * C110 -
          ((C182 + C183) * C107 + (C181 + C180) * C106 + (C179 + C178) * C105 +
           (C177 + C176) * C104 + (C175 + C174) * C103) *
              C32644 * C32630 * C111 +
          (C184 * C103 + C185 * C104 + C186 * C105 + (C183 + C182) * C106 +
           ((C113 * C121 + C32667 * C134) * C114 +
            (C113 * C135 + C32667 * C142) * C32684) *
               C107) *
              C32644 * C32630 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C857 * C115 + C32991 * C122 + C858 * C256 + C32979 * C271 +
             C859 * C257 + C32956 * C272) *
                C114 +
            (C857 * C123 + C32991 * C136 + C858 * C270 + C32979 * C286 +
             C859 * C273 + C32956 * C287) *
                C32684) *
               C854 +
           ((C897 + C898 + C899) * C114 + (C900 + C901 + C902) * C32684) *
               C855 +
           C921 * C32945) *
              C32644 * C32630 * C110 -
          (((C909 + C910 + C911) * C32684 + (C912 + C913 + C914) * C114) *
               C32945 +
           ((C908 + C907 + C906) * C32684 + (C905 + C904 + C903) * C114) *
               C855 +
           ((C902 + C901 + C900) * C32684 + (C899 + C898 + C897) * C114) *
               C854) *
              C32644 * C32630 * C111 +
          (C921 * C854 +
           ((C914 + C913 + C912) * C114 + (C911 + C910 + C909) * C32684) *
               C855 +
           ((C857 * C119 + C32991 * C130 + C858 * C252 + C32979 * C263 +
             C859 * C261 + C32956 * C280) *
                C114 +
            (C857 * C131 + C32991 * C140 + C858 * C262 + C32979 * C282 +
             C859 * C281 + C32956 * C291) *
                C32684) *
               C32945) *
              C32644 * C32630 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C857 * C115 + C32991 * C122 + C858 * C256 + C32979 * C271 +
             C859 * C257 + C32956 * C272) *
                C114 +
            (C857 * C123 + C32991 * C136 + C858 * C270 + C32979 * C286 +
             C859 * C273 + C32956 * C287) *
                C32684) *
               C854 +
           ((C897 + C898 + C899) * C114 + (C900 + C901 + C902) * C32684) *
               C855 +
           C921 * C32945) *
              C32644 * C248 -
          (((C859 * C1037 + C32956 * C1049 + C858 * C277 + C32979 * C289 +
             C857 * C266 + C32991 * C284) *
                C32684 +
            (C859 * C1031 + C32956 * C1038 + C858 * C259 + C32979 * C276 +
             C857 * C254 + C32991 * C267) *
                C114) *
               C32945 +
           ((C859 * C1039 + C32956 * C1050 + C858 * C275 + C32979 * C288 +
             C857 * C268 + C32991 * C285) *
                C32684 +
            (C859 * C1032 + C32956 * C1040 + C858 * C258 + C32979 * C274 +
             C857 * C255 + C32991 * C269) *
                C114) *
               C855 +
           ((C859 * C1041 + C32956 * C1051 + C858 * C273 + C32979 * C287 +
             C857 * C270 + C32991 * C286) *
                C32684 +
            (C859 * C1033 + C32956 * C1042 + C858 * C257 + C32979 * C272 +
             C857 * C256 + C32991 * C271) *
                C114) *
               C854) *
              C32644 * C249 +
          (((C857 * C257 + C32991 * C272 + C858 * C1033 + C32979 * C1042 +
             C859 * C1034 + C32956 * C1043) *
                C114 +
            (C857 * C273 + C32991 * C287 + C858 * C1041 + C32979 * C1051 +
             C859 * C1044 + C32956 * C1052) *
                C32684) *
               C854 +
           ((C857 * C258 + C32991 * C274 + C858 * C1032 + C32979 * C1040 +
             C859 * C1035 + C32956 * C1045) *
                C114 +
            (C857 * C275 + C32991 * C288 + C858 * C1039 + C32979 * C1050 +
             C859 * C1046 + C32956 * C1053) *
                C32684) *
               C855 +
           ((C857 * C259 + C32991 * C276 + C858 * C1031 + C32979 * C1038 +
             C859 * C1036 + C32956 * C1047) *
                C114 +
            (C857 * C277 + C32991 * C289 + C858 * C1037 + C32979 * C1049 +
             C859 * C1048 + C32956 * C1054) *
                C32684) *
               C32945) *
              C32644 * C250) *
         C32618) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C5477 * C115 + C5471 * C122 + C5478 * C256 + C5472 * C271 +
             C5479 * C257 + C32956 * C272) *
                C114 +
            (C5477 * C123 + C5471 * C136 + C5478 * C270 + C5472 * C286 +
             C5479 * C273 + C32956 * C287) *
                C32684) *
               C32988 +
           ((C5517 + C5518 + C5519) * C114 + (C5520 + C5521 + C5522) * C32684) *
               C32975 +
           C5541 * C32945) *
              C32644 * C32630 * C110 -
          (((C5529 + C5530 + C5531) * C32684 + (C5532 + C5533 + C5534) * C114) *
               C32945 +
           ((C5528 + C5527 + C5526) * C32684 + (C5525 + C5524 + C5523) * C114) *
               C32975 +
           ((C5522 + C5521 + C5520) * C32684 + (C5519 + C5518 + C5517) * C114) *
               C32988) *
              C32644 * C32630 * C111 +
          (C5541 * C32988 +
           ((C5534 + C5533 + C5532) * C114 + (C5531 + C5530 + C5529) * C32684) *
               C32975 +
           ((C5477 * C119 + C5471 * C130 + C5478 * C252 + C5472 * C263 +
             C5479 * C261 + C32956 * C280) *
                C114 +
            (C5477 * C131 + C5471 * C140 + C5478 * C262 + C5472 * C282 +
             C5479 * C281 + C32956 * C291) *
                C32684) *
               C32945) *
              C32644 * C32630 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C5477 * C115 + C5471 * C122 + C5478 * C256 + C5472 * C271 +
             C5479 * C257 + C32956 * C272) *
                C114 +
            (C5477 * C123 + C5471 * C136 + C5478 * C270 + C5472 * C286 +
             C5479 * C273 + C32956 * C287) *
                C32684) *
               C32988 +
           ((C5517 + C5518 + C5519) * C114 + (C5520 + C5521 + C5522) * C32684) *
               C32975 +
           C5541 * C32945) *
              C32644 * C248 -
          (((C5479 * C1037 + C32956 * C1049 + C5478 * C277 + C5472 * C289 +
             C5477 * C266 + C5471 * C284) *
                C32684 +
            (C5479 * C1031 + C32956 * C1038 + C5478 * C259 + C5472 * C276 +
             C5477 * C254 + C5471 * C267) *
                C114) *
               C32945 +
           ((C5479 * C1039 + C32956 * C1050 + C5478 * C275 + C5472 * C288 +
             C5477 * C268 + C5471 * C285) *
                C32684 +
            (C5479 * C1032 + C32956 * C1040 + C5478 * C258 + C5472 * C274 +
             C5477 * C255 + C5471 * C269) *
                C114) *
               C32975 +
           ((C5479 * C1041 + C32956 * C1051 + C5478 * C273 + C5472 * C287 +
             C5477 * C270 + C5471 * C286) *
                C32684 +
            (C5479 * C1033 + C32956 * C1042 + C5478 * C257 + C5472 * C272 +
             C5477 * C256 + C5471 * C271) *
                C114) *
               C32988) *
              C32644 * C249 +
          (((C5477 * C257 + C5471 * C272 + C5478 * C1033 + C5472 * C1042 +
             C5479 * C1034 + C32956 * C1043) *
                C114 +
            (C5477 * C273 + C5471 * C287 + C5478 * C1041 + C5472 * C1051 +
             C5479 * C1044 + C32956 * C1052) *
                C32684) *
               C32988 +
           ((C5477 * C258 + C5471 * C274 + C5478 * C1032 + C5472 * C1040 +
             C5479 * C1035 + C32956 * C1045) *
                C114 +
            (C5477 * C275 + C5471 * C288 + C5478 * C1039 + C5472 * C1050 +
             C5479 * C1046 + C32956 * C1053) *
                C32684) *
               C32975 +
           ((C5477 * C259 + C5471 * C276 + C5478 * C1031 + C5472 * C1038 +
             C5479 * C1036 + C32956 * C1047) *
                C114 +
            (C5477 * C277 + C5471 * C289 + C5478 * C1037 + C5472 * C1049 +
             C5479 * C1048 + C32956 * C1054) *
                C32684) *
               C32945) *
              C32644 * C250) *
         C32618) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C6339 * C115 + C6333 * C122 + C6340 * C256 + C6334 * C271 +
            C6341 * C257 + C6335 * C272 + C6342 * C1033 + C6336 * C1042 +
            C6343 * C1034 + C6337 * C1043) *
               C114 +
           (C6339 * C123 + C6333 * C136 + C6340 * C270 + C6334 * C286 +
            C6341 * C273 + C6335 * C287 + C6342 * C1041 + C6336 * C1051 +
            C6343 * C1044 + C6337 * C1052) *
               C32684) *
              C32585 * C32644 * C32630 * C110 -
          ((C6343 * C1046 + C6337 * C1053 + C6342 * C1039 + C6336 * C1050 +
            C6341 * C275 + C6335 * C288 + C6340 * C268 + C6334 * C285 +
            C6339 * C125 + C6333 * C137) *
               C32684 +
           (C6343 * C1035 + C6337 * C1045 + C6342 * C1032 + C6336 * C1040 +
            C6341 * C258 + C6335 * C274 + C6340 * C255 + C6334 * C269 +
            C6339 * C116 + C6333 * C124) *
               C114) *
              C32585 * C32644 * C32630 * C111 +
          ((C6339 * C117 + C6333 * C126 + C6340 * C254 + C6334 * C267 +
            C6341 * C259 + C6335 * C276 + C6342 * C1031 + C6336 * C1038 +
            C6343 * C1036 + C6337 * C1047) *
               C114 +
           (C6339 * C127 + C6333 * C138 + C6340 * C266 + C6334 * C284 +
            C6341 * C277 + C6335 * C289 + C6342 * C1037 + C6336 * C1049 +
            C6343 * C1048 + C6337 * C1054) *
               C32684) *
              C32585 * C32644 * C32630 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C6339 * C115 + C6333 * C122 + C6340 * C256 + C6334 * C271 +
            C6341 * C257 + C6335 * C272 + C6342 * C1033 + C6336 * C1042 +
            C6343 * C1034 + C6337 * C1043) *
               C114 +
           (C6339 * C123 + C6333 * C136 + C6340 * C270 + C6334 * C286 +
            C6341 * C273 + C6335 * C287 + C6342 * C1041 + C6336 * C1051 +
            C6343 * C1044 + C6337 * C1052) *
               C32684) *
              C32585 * C32644 * C248 -
          ((C6343 * C6408 + C6337 * C6412 + C6342 * C1044 + C6336 * C1052 +
            C6341 * C1041 + C6335 * C1051 + C6340 * C273 + C6334 * C287 +
            C6339 * C270 + C6333 * C286) *
               C32684 +
           (C6343 * C6406 + C6337 * C6409 + C6342 * C1034 + C6336 * C1043 +
            C6341 * C1033 + C6335 * C1042 + C6340 * C257 + C6334 * C272 +
            C6339 * C256 + C6333 * C271) *
               C114) *
              C32585 * C32644 * C249 +
          ((C6339 * C257 + C6333 * C272 + C6340 * C1033 + C6334 * C1042 +
            C6341 * C1034 + C6335 * C1043 + C6342 * C6406 + C6336 * C6409 +
            C6343 * C6407 + C6337 * C6410) *
               C114 +
           (C6339 * C273 + C6333 * C287 + C6340 * C1041 + C6334 * C1051 +
            C6341 * C1044 + C6335 * C1052 + C6342 * C6408 + C6336 * C6412 +
            C6343 * C6411 + C6337 * C6413) *
               C32684) *
              C32585 * C32644 * C250) *
         C32618) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C32667 * C122) * C10355 +
            (C113 * C123 + C32667 * C136) * C10352 + C2153 * C10356 +
            C2154 * C10353 + C2155 * C10357 + C2156 * C32959) *
               C32988 +
           (C10359 + C10360 + C10361 + C10362 + C10363 + C10364) * C32975 +
           C10381 * C32945) *
              C32644 * C32630 * C110 -
          ((C10371 + C10372 + C10373 + C10374 + C10375 + C10376) * C32945 +
           (C10370 + C10369 + C10368 + C10367 + C10366 + C10365) * C32975 +
           (C10364 + C10363 + C10362 + C10361 + C10360 + C10359) * C32988) *
              C32644 * C32630 * C111 +
          (C10381 * C32988 +
           (C10376 + C10375 + C10374 + C10373 + C10372 + C10371) * C32975 +
           (C170 * C10355 + C171 * C10352 + C625 * C10356 + C624 * C10353 +
            (C113 * C366 + C32667 * C385) * C10357 +
            (C113 * C386 + C32667 * C396) * C32959) *
               C32945) *
              C32644 * C32630 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C32667 * C122) * C10355 +
            (C113 * C123 + C32667 * C136) * C10352 + C2153 * C10356 +
            C2154 * C10353 + C2155 * C10357 + C2156 * C32959) *
               C32988 +
           (C10359 + C10360 + C10361 + C10362 + C10363 + C10364) * C32975 +
           C10381 * C32945) *
              C32644 * C248 -
          ((C2333 * C32959 + C2334 * C10357 + C2335 * C10353 + C2336 * C10356 +
            C508 * C10352 + C509 * C10355) *
               C32945 +
           (C2337 * C32959 + C2338 * C10357 + C2339 * C10353 + C2340 * C10356 +
            C510 * C10352 + C511 * C10355) *
               C32975 +
           (C2680 * C32959 + C2679 * C10357 + C2678 * C10353 + C2677 * C10356 +
            (C113 * C270 + C32667 * C286) * C10352 +
            (C113 * C256 + C32667 * C271) * C10355) *
               C32988) *
              C32644 * C249 +
          (((C113 * C257 + C32667 * C272) * C10355 +
            (C113 * C273 + C32667 * C287) * C10352 +
            (C113 * C1167 + C32667 * C1179) * C10356 +
            (C113 * C1178 + C32667 * C1194) * C10353 +
            (C113 * C1169 + C32667 * C1181) * C10357 +
            (C113 * C1183 + C32667 * C1196) * C32959) *
               C32988 +
           ((C113 * C258 + C32667 * C274) * C10355 +
            (C113 * C275 + C32667 * C288) * C10352 +
            (C113 * C1166 + C32667 * C1177) * C10356 +
            (C113 * C1176 + C32667 * C1193) * C10353 +
            (C113 * C1171 + C32667 * C1185) * C10357 +
            (C113 * C1187 + C32667 * C1198) * C32959) *
               C32975 +
           ((C113 * C259 + C32667 * C276) * C10355 +
            (C113 * C277 + C32667 * C289) * C10352 +
            (C113 * C1165 + C32667 * C1175) * C10356 +
            (C113 * C1174 + C32667 * C1192) * C10353 +
            (C113 * C1173 + C32667 * C1189) * C10357 +
            (C113 * C1191 + C32667 * C1200) * C32959) *
               C32945) *
              C32644 * C250) *
         C32618) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C857 * C115 + C32991 * C122 + C858 * C256 + C32979 * C271 +
            C859 * C257 + C32956 * C272) *
               C10355 +
           (C857 * C123 + C32991 * C136 + C858 * C270 + C32979 * C286 +
            C859 * C273 + C32956 * C287) *
               C10352 +
           (C857 * C361 + C32991 * C376 + C858 * C721 + C32979 * C726 +
            C859 * C1167 + C32956 * C1179) *
               C10356 +
           (C857 * C375 + C32991 * C391 + C858 * C727 + C32979 * C736 +
            C859 * C1178 + C32956 * C1194) *
               C10353 +
           (C857 * C362 + C32991 * C377 + C858 * C1168 + C32979 * C1180 +
            C859 * C1169 + C32956 * C1181) *
               C10357 +
           (C857 * C378 + C32991 * C392 + C858 * C1182 + C32979 * C1195 +
            C859 * C1183 + C32956 * C1196) *
               C32959) *
              C32585 * C32644 * C32630 * C110 -
          ((C859 * C1187 + C32956 * C1198 + C858 * C1186 + C32979 * C1197 +
            C857 * C380 + C32991 * C393) *
               C32959 +
           (C859 * C1171 + C32956 * C1185 + C858 * C1170 + C32979 * C1184 +
            C857 * C363 + C32991 * C379) *
               C10357 +
           (C1568 + C1569 + C1570) * C10353 + (C1571 + C1572 + C1573) * C10356 +
           (C902 + C901 + C900) * C10352 + (C899 + C898 + C897) * C10355) *
              C32585 * C32644 * C32630 * C111 +
          (C917 * C10355 + C918 * C10352 + (C1567 + C1566 + C1565) * C10356 +
           (C1564 + C1563 + C1562) * C10353 +
           (C857 * C364 + C32991 * C381 + C858 * C1172 + C32979 * C1188 +
            C859 * C1173 + C32956 * C1189) *
               C10357 +
           (C857 * C382 + C32991 * C394 + C858 * C1190 + C32979 * C1199 +
            C859 * C1191 + C32956 * C1200) *
               C32959) *
              C32585 * C32644 * C32630 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C857 * C115 + C32991 * C122 + C858 * C256 + C32979 * C271 +
            C859 * C257 + C32956 * C272) *
               C10355 +
           (C857 * C123 + C32991 * C136 + C858 * C270 + C32979 * C286 +
            C859 * C273 + C32956 * C287) *
               C10352 +
           (C857 * C361 + C32991 * C376 + C858 * C721 + C32979 * C726 +
            C859 * C1167 + C32956 * C1179) *
               C10356 +
           (C857 * C375 + C32991 * C391 + C858 * C727 + C32979 * C736 +
            C859 * C1178 + C32956 * C1194) *
               C10353 +
           (C857 * C362 + C32991 * C377 + C858 * C1168 + C32979 * C1180 +
            C859 * C1169 + C32956 * C1181) *
               C10357 +
           (C857 * C378 + C32991 * C392 + C858 * C1182 + C32979 * C1195 +
            C859 * C1183 + C32956 * C1196) *
               C32959) *
              C32585 * C32644 * C248 -
          ((C859 * C6483 + C32956 * C6486 + C858 * C1183 + C32979 * C1196 +
            C857 * C1182 + C32991 * C1195) *
               C32959 +
           (C859 * C6477 + C32956 * C6481 + C858 * C1169 + C32979 * C1181 +
            C857 * C1168 + C32991 * C1180) *
               C10357 +
           (C859 * C1723 + C32956 * C1728 + C858 * C1178 + C32979 * C1194 +
            C857 * C727 + C32991 * C736) *
               C10353 +
           (C859 * C1719 + C32956 * C1722 + C858 * C1167 + C32979 * C1179 +
            C857 * C721 + C32991 * C726) *
               C10356 +
           (C859 * C1041 + C32956 * C1051 + C858 * C273 + C32979 * C287 +
            C857 * C270 + C32991 * C286) *
               C10352 +
           (C859 * C1033 + C32956 * C1042 + C858 * C257 + C32979 * C272 +
            C857 * C256 + C32991 * C271) *
               C10355) *
              C32585 * C32644 * C249 +
          ((C857 * C257 + C32991 * C272 + C858 * C1033 + C32979 * C1042 +
            C859 * C1034 + C32956 * C1043) *
               C10355 +
           (C857 * C273 + C32991 * C287 + C858 * C1041 + C32979 * C1051 +
            C859 * C1044 + C32956 * C1052) *
               C10352 +
           (C857 * C1167 + C32991 * C1179 + C858 * C1719 + C32979 * C1722 +
            C859 * C6476 + C32956 * C6480) *
               C10356 +
           (C857 * C1178 + C32991 * C1194 + C858 * C1723 + C32979 * C1728 +
            C859 * C6479 + C32956 * C6485) *
               C10353 +
           (C857 * C1169 + C32991 * C1181 + C858 * C6477 + C32979 * C6481 +
            C859 * C6478 + C32956 * C6482) *
               C10357 +
           (C857 * C1183 + C32991 * C1196 + C858 * C6483 + C32979 * C6486 +
            C859 * C6484 + C32956 * C6487) *
               C32959) *
              C32585 * C32644 * C250) *
         C32618) /
            (p * q * std::sqrt(p + q));
    d2ee[75] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C2784 * C115 + C32925 * C122 + C2785 * C256 + C32729 * C271) *
                 C20882 +
             (C2784 * C123 + C32925 * C136 + C2785 * C270 + C32729 * C286) *
                 C20880 +
             (C4722 + C4723) * C20883 + (C4724 + C4725) * C32771) *
                C32590 +
            ((C2819 + C2820) * C20882 + (C2821 + C2822) * C20880 +
             C5150 * C20883 + C5151 * C32771) *
                C32598 +
            C23439 * C17826) *
               C32644 * C479 -
           (((C4948 + C4949) * C32771 + (C4950 + C4951) * C20883 +
             (C3199 + C3200) * C20880 + (C3201 + C3202) * C20882) *
                C17826 +
            ((C4952 + C4953) * C32771 + (C4954 + C4955) * C20883 +
             (C3203 + C3204) * C20880 + (C3205 + C3206) * C20882) *
                C32598 +
            ((C5361 + C5360) * C32771 + (C5359 + C5358) * C20883 +
             (C2785 * C273 + C32729 * C287 + C2784 * C270 + C32925 * C286) *
                 C20880 +
             (C2785 * C257 + C32729 * C272 + C2784 * C256 + C32925 * C271) *
                 C20882) *
                C32590) *
               C32644 * C480) *
              C481 +
          ((((C3206 + C3205) * C20882 + (C3204 + C3203) * C20880 +
             (C4955 + C4954) * C20883 + (C4953 + C4952) * C32771) *
                C32590 +
            ((C3202 + C3201) * C20882 + (C3200 + C3199) * C20880 +
             (C4951 + C4950) * C20883 + (C4949 + C4948) * C32771) *
                C32598 +
            ((C3198 + C3197) * C20882 + (C3196 + C3195) * C20880 +
             (C2784 * C724 + C32925 * C732 + C2785 * C1533 + C32729 * C1534) *
                 C20883 +
             (C2784 * C733 + C32925 * C739 + C2785 * C1535 + C32729 * C1536) *
                 C32771) *
                C17826) *
               C32644 * C480 -
           (((C3361 + C3362) * C32771 + (C3363 + C3364) * C20883 +
             (C2830 + C2829) * C20880 + (C2828 + C2827) * C20882) *
                C17826 +
            (C5152 * C32771 + C5153 * C20883 + (C2826 + C2825) * C20880 +
             (C2824 + C2823) * C20882) *
                C32598 +
            (C5154 * C32771 + C5155 * C20883 + (C2822 + C2821) * C20880 +
             (C2820 + C2819) * C20882) *
                C32590) *
               C32644 * C479) *
              C482)) /
        (p * q * std::sqrt(p + q));
    d2ee[76] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C2784 * C115 + C32925 * C122 + C2785 * C256 + C32729 * C271) *
                 C20882 +
             (C2784 * C123 + C32925 * C136 + C2785 * C270 + C32729 * C286) *
                 C20880 +
             (C4722 + C4723) * C20883 + (C4724 + C4725) * C32771) *
                C32590 +
            ((C2819 + C2820) * C20882 + (C2821 + C2822) * C20880 +
             C5150 * C20883 + C5151 * C32771) *
                C32598 +
            C23439 * C17826) *
               C601 -
           (((C4726 + C4727) * C32771 + (C4728 + C4729) * C20883 +
             C5152 * C20880 + C5153 * C20882) *
                C17826 +
            (C13302 * C32771 + C13303 * C20883 + C5154 * C20880 +
             C5155 * C20882) *
                C32598 +
            ((C4734 + C4735) * C32771 + (C4736 + C4737) * C20883 +
             (C4725 + C4724) * C20880 + (C4723 + C4722) * C20882) *
                C32590) *
               C602) *
              C479 +
          ((((C5358 + C5359) * C20882 + (C5360 + C5361) * C20880 +
             (C13506 + C13507) * C20883 + (C13508 + C13509) * C32771) *
                C32590 +
            ((C4955 + C4954) * C20882 + (C4953 + C4952) * C20880 +
             (C13107 + C13106) * C20883 + (C13105 + C13104) * C32771) *
                C32598 +
            ((C4951 + C4950) * C20882 + (C4949 + C4948) * C20880 +
             (C2784 * C1172 + C32925 * C1188 + C2785 * C1173 + C32729 * C1189) *
                 C20883 +
             (C2784 * C1190 + C32925 * C1199 + C2785 * C1191 + C32729 * C1200) *
                 C32771) *
                C17826) *
               C602 -
           (((C4948 + C4949) * C32771 + (C4950 + C4951) * C20883 +
             (C3199 + C3200) * C20880 + (C3201 + C3202) * C20882) *
                C17826 +
            ((C4952 + C4953) * C32771 + (C4954 + C4955) * C20883 +
             (C3203 + C3204) * C20880 + (C3205 + C3206) * C20882) *
                C32598 +
            ((C5361 + C5360) * C32771 + (C5359 + C5358) * C20883 +
             (C2785 * C273 + C32729 * C287 + C2784 * C270 + C32925 * C286) *
                 C20880 +
             (C2785 * C257 + C32729 * C272 + C2784 * C256 + C32925 * C271) *
                 C20882) *
                C32590) *
               C601) *
              C480) *
         C32618) /
        (p * q * std::sqrt(p + q));
    d2ee[77] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C2784 * C115 + C32925 * C122 + C2785 * C256 + C32729 * C271) *
                C20882 +
            (C2784 * C123 + C32925 * C136 + C2785 * C270 + C32729 * C286) *
                C20880 +
            (C4722 + C4723) * C20883 + (C4724 + C4725) * C32771) *
               C32590 +
           ((C2819 + C2820) * C20882 + (C2821 + C2822) * C20880 +
            C5150 * C20883 + C5151 * C32771) *
               C32598 +
           C23439 * C17826) *
              C32644 * C248 -
          (((C4948 + C4949) * C32771 + (C4950 + C4951) * C20883 +
            (C3199 + C3200) * C20880 + (C3201 + C3202) * C20882) *
               C17826 +
           ((C4952 + C4953) * C32771 + (C4954 + C4955) * C20883 +
            (C3203 + C3204) * C20880 + (C3205 + C3206) * C20882) *
               C32598 +
           ((C5361 + C5360) * C32771 + (C5359 + C5358) * C20883 +
            (C2785 * C273 + C32729 * C287 + C2784 * C270 + C32925 * C286) *
                C20880 +
            (C2785 * C257 + C32729 * C272 + C2784 * C256 + C32925 * C271) *
                C20882) *
               C32590) *
              C32644 * C249 +
          (((C2784 * C257 + C32925 * C272 + C2785 * C1033 + C32729 * C1042) *
                C20882 +
            (C2784 * C273 + C32925 * C287 + C2785 * C1041 + C32729 * C1051) *
                C20880 +
            (C2784 * C1167 + C32925 * C1179 + C2785 * C1719 + C32729 * C1722) *
                C20883 +
            (C2784 * C1178 + C32925 * C1194 + C2785 * C1723 + C32729 * C1728) *
                C32771) *
               C32590 +
           ((C2784 * C258 + C32925 * C274 + C2785 * C1032 + C32729 * C1040) *
                C20882 +
            (C2784 * C275 + C32925 * C288 + C2785 * C1039 + C32729 * C1050) *
                C20880 +
            (C2784 * C1166 + C32925 * C1177 + C2785 * C1720 + C32729 * C1724) *
                C20883 +
            (C2784 * C1176 + C32925 * C1193 + C2785 * C1725 + C32729 * C1729) *
                C32771) *
               C32598 +
           ((C2784 * C259 + C32925 * C276 + C2785 * C1031 + C32729 * C1038) *
                C20882 +
            (C2784 * C277 + C32925 * C289 + C2785 * C1037 + C32729 * C1049) *
                C20880 +
            (C2784 * C1165 + C32925 * C1175 + C2785 * C1721 + C32729 * C1726) *
                C20883 +
            (C2784 * C1174 + C32925 * C1192 + C2785 * C1727 + C32729 * C1730) *
                C32771) *
               C17826) *
              C32644 * C250) *
         C32618) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C2784 * C115 + C32925 * C122 + C2785 * C256 + C32729 * C271) *
                C20882 +
            (C2784 * C123 + C32925 * C136 + C2785 * C270 + C32729 * C286) *
                C20880 +
            (C4722 + C4723) * C20883 + (C4724 + C4725) * C32771) *
               C32590 +
           ((C2819 + C2820) * C20882 + (C2821 + C2822) * C20880 +
            C5150 * C20883 + C5151 * C32771) *
               C32598 +
           C23439 * C17826) *
              C32644 * C32630 * C110 -
          (((C3361 + C3362) * C32771 + (C3363 + C3364) * C20883 +
            (C2830 + C2829) * C20880 + (C2828 + C2827) * C20882) *
               C17826 +
           (C5152 * C32771 + C5153 * C20883 + (C2826 + C2825) * C20880 +
            (C2824 + C2823) * C20882) *
               C32598 +
           (C5154 * C32771 + C5155 * C20883 + (C2822 + C2821) * C20880 +
            (C2820 + C2819) * C20882) *
               C32590) *
              C32644 * C32630 * C111 +
          (C23439 * C32590 +
           (C2837 * C20882 + C2838 * C20880 + (C3364 + C3363) * C20883 +
            (C3362 + C3361) * C32771) *
               C32598 +
           ((C2834 + C2833) * C20882 + (C2832 + C2831) * C20880 +
            (C2784 * C357 + C32925 * C368 + C2785 * C725 + C32729 * C734) *
                C20883 +
            (C2784 * C367 + C32925 * C387 + C2785 * C735 + C32729 * C740) *
                C32771) *
               C17826) *
              C32644 * C32630 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C2784 * C115 + C32925 * C122 + C2785 * C256 + C32729 * C271) *
                C20882 +
            (C2784 * C123 + C32925 * C136 + C2785 * C270 + C32729 * C286) *
                C20880 +
            (C4722 + C4723) * C20883 + (C4724 + C4725) * C32771) *
               C32590 +
           ((C2819 + C2820) * C20882 + (C2821 + C2822) * C20880 +
            C5150 * C20883 + C5151 * C32771) *
               C32598 +
           C23439 * C17826) *
              C354 -
          (((C4726 + C4727) * C32771 + (C4728 + C4729) * C20883 +
            C5152 * C20880 + C5153 * C20882) *
               C17826 +
           (C13302 * C32771 + C13303 * C20883 + C5154 * C20880 +
            C5155 * C20882) *
               C32598 +
           ((C4734 + C4735) * C32771 + (C4736 + C4737) * C20883 +
            (C4725 + C4724) * C20880 + (C4723 + C4722) * C20882) *
               C32590) *
              C355 +
          ((C12874 * C20882 + C12875 * C20880 + C14534 * C20883 +
            C14535 * C32771) *
               C32590 +
           (C12876 * C20882 + C12877 * C20880 + (C12897 + C12896) * C20883 +
            (C12895 + C12894) * C32771) *
               C32598 +
           ((C4729 + C4728) * C20882 + (C4727 + C4726) * C20880 +
            (C2784 * C2108 + C32925 * C2115 + C2785 * C2658 + C32729 * C2663) *
                C20883 +
            (C2784 * C2114 + C32925 * C2126 + C2785 * C2664 + C32729 * C2667) *
                C32771) *
               C17826) *
              C356) *
         C32630 * C32618) /
            (p * q * std::sqrt(p + q));
    d2ee[78] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C2784 * C115 + C32925 * C122 + C2785 * C256 + C32729 * C271) *
                 C20882 +
             (C2784 * C123 + C32925 * C136 + C2785 * C270 + C32729 * C286) *
                 C20880 +
             (C4722 + C4723) * C20883 + (C4724 + C4725) * C32771) *
                C32590 +
            ((C2819 + C2820) * C20882 + (C2821 + C2822) * C20880 +
             C5150 * C20883 + C5151 * C32771) *
                C32598 +
            C23439 * C17826) *
               C601 -
           (((C4726 + C4727) * C32771 + (C4728 + C4729) * C20883 +
             C5152 * C20880 + C5153 * C20882) *
                C17826 +
            (C13302 * C32771 + C13303 * C20883 + C5154 * C20880 +
             C5155 * C20882) *
                C32598 +
            ((C4734 + C4735) * C32771 + (C4736 + C4737) * C20883 +
             (C4725 + C4724) * C20880 + (C4723 + C4722) * C20882) *
                C32590) *
               C602) *
              C32630 * C481 +
          (((C5150 * C20882 + C5151 * C20880 + C12876 * C20883 +
             C12877 * C32771) *
                C32590 +
            (C4391 * C20882 + C4392 * C20880 + (C4729 + C4728) * C20883 +
             (C4727 + C4726) * C32771) *
                C32598 +
            ((C3364 + C3363) * C20882 + (C3362 + C3361) * C20880 +
             (C2784 * C365 + C32925 * C383 + C2785 * C2308 + C32729 * C2309) *
                 C20883 +
             (C2784 * C384 + C32925 * C395 + C2785 * C2310 + C32729 * C2311) *
                 C32771) *
                C17826) *
               C602 -
           (((C3361 + C3362) * C32771 + (C3363 + C3364) * C20883 +
             (C2830 + C2829) * C20880 + (C2828 + C2827) * C20882) *
                C17826 +
            (C5152 * C32771 + C5153 * C20883 + (C2826 + C2825) * C20880 +
             (C2824 + C2823) * C20882) *
                C32598 +
            (C5154 * C32771 + C5155 * C20883 + (C2822 + C2821) * C20880 +
             (C2820 + C2819) * C20882) *
                C32590) *
               C601) *
              C32630 * C482)) /
        (p * q * std::sqrt(p + q));
    d2ee[79] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2784 * C115 + C32925 * C122 + C2785 * C256 + C32729 * C271) *
                C20882 +
            (C2784 * C123 + C32925 * C136 + C2785 * C270 + C32729 * C286) *
                C20880 +
            (C4722 + C4723) * C20883 + (C4724 + C4725) * C32771) *
               C32590 +
           ((C2819 + C2820) * C20882 + (C2821 + C2822) * C20880 +
            C5150 * C20883 + C5151 * C32771) *
               C32598 +
           C23439 * C17826) *
              C32644 * C32630 * C110 -
          (((C3361 + C3362) * C32771 + (C3363 + C3364) * C20883 +
            (C2830 + C2829) * C20880 + (C2828 + C2827) * C20882) *
               C17826 +
           (C5152 * C32771 + C5153 * C20883 + (C2826 + C2825) * C20880 +
            (C2824 + C2823) * C20882) *
               C32598 +
           (C5154 * C32771 + C5155 * C20883 + (C2822 + C2821) * C20880 +
            (C2820 + C2819) * C20882) *
               C32590) *
              C32644 * C32630 * C111 +
          (C23439 * C32590 +
           (C2837 * C20882 + C2838 * C20880 + (C3364 + C3363) * C20883 +
            (C3362 + C3361) * C32771) *
               C32598 +
           ((C2834 + C2833) * C20882 + (C2832 + C2831) * C20880 +
            (C2784 * C357 + C32925 * C368 + C2785 * C725 + C32729 * C734) *
                C20883 +
            (C2784 * C367 + C32925 * C387 + C2785 * C735 + C32729 * C740) *
                C32771) *
               C17826) *
              C32644 * C32630 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2784 * C115 + C32925 * C122 + C2785 * C256 + C32729 * C271) *
                C20882 +
            (C2784 * C123 + C32925 * C136 + C2785 * C270 + C32729 * C286) *
                C20880 +
            (C4722 + C4723) * C20883 + (C4724 + C4725) * C32771) *
               C32590 +
           ((C2819 + C2820) * C20882 + (C2821 + C2822) * C20880 +
            C5150 * C20883 + C5151 * C32771) *
               C32598 +
           C23439 * C17826) *
              C32644 * C248 -
          (((C4948 + C4949) * C32771 + (C4950 + C4951) * C20883 +
            (C3199 + C3200) * C20880 + (C3201 + C3202) * C20882) *
               C17826 +
           ((C4952 + C4953) * C32771 + (C4954 + C4955) * C20883 +
            (C3203 + C3204) * C20880 + (C3205 + C3206) * C20882) *
               C32598 +
           ((C5361 + C5360) * C32771 + (C5359 + C5358) * C20883 +
            (C2785 * C273 + C32729 * C287 + C2784 * C270 + C32925 * C286) *
                C20880 +
            (C2785 * C257 + C32729 * C272 + C2784 * C256 + C32925 * C271) *
                C20882) *
               C32590) *
              C32644 * C249 +
          (((C2784 * C257 + C32925 * C272 + C2785 * C1033 + C32729 * C1042) *
                C20882 +
            (C2784 * C273 + C32925 * C287 + C2785 * C1041 + C32729 * C1051) *
                C20880 +
            (C2784 * C1167 + C32925 * C1179 + C2785 * C1719 + C32729 * C1722) *
                C20883 +
            (C2784 * C1178 + C32925 * C1194 + C2785 * C1723 + C32729 * C1728) *
                C32771) *
               C32590 +
           ((C2784 * C258 + C32925 * C274 + C2785 * C1032 + C32729 * C1040) *
                C20882 +
            (C2784 * C275 + C32925 * C288 + C2785 * C1039 + C32729 * C1050) *
                C20880 +
            (C2784 * C1166 + C32925 * C1177 + C2785 * C1720 + C32729 * C1724) *
                C20883 +
            (C2784 * C1176 + C32925 * C1193 + C2785 * C1725 + C32729 * C1729) *
                C32771) *
               C32598 +
           ((C2784 * C259 + C32925 * C276 + C2785 * C1031 + C32729 * C1038) *
                C20882 +
            (C2784 * C277 + C32925 * C289 + C2785 * C1037 + C32729 * C1049) *
                C20880 +
            (C2784 * C1165 + C32925 * C1175 + C2785 * C1721 + C32729 * C1726) *
                C20883 +
            (C2784 * C1174 + C32925 * C1192 + C2785 * C1727 + C32729 * C1730) *
                C32771) *
               C17826) *
              C32644 * C250) *
         C32618) /
            (p * q * std::sqrt(p + q));
    d2ee[80] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C2784 * C115 + C32925 * C122 + C2785 * C256 + C32729 * C271) *
                 C31694 +
             (C2784 * C123 + C32925 * C136 + C2785 * C270 + C32729 * C286) *
                 C32767 +
             (C4722 + C4723) * C31686 + (C4724 + C4725) * C32774 +
             C12874 * C31700 + C12875 * C24425) *
                C15873 +
            ((C2819 + C2820) * C31694 + (C2821 + C2822) * C32767 +
             C5150 * C31686 + C5151 * C32774 + C12876 * C31700 +
             C12877 * C24425) *
                C32595) *
               C32644 * C479 -
           (((C13104 + C13105) * C24425 + (C13106 + C13107) * C31700 +
             (C4952 + C4953) * C32774 + (C4954 + C4955) * C31686 +
             (C3203 + C3204) * C32767 + (C3205 + C3206) * C31694) *
                C32595 +
            ((C13509 + C13508) * C24425 + (C13507 + C13506) * C31700 +
             (C5361 + C5360) * C32774 + (C5359 + C5358) * C31686 +
             (C2785 * C273 + C32729 * C287 + C2784 * C270 + C32925 * C286) *
                 C32767 +
             (C2785 * C257 + C32729 * C272 + C2784 * C256 + C32925 * C271) *
                 C31694) *
                C15873) *
               C32644 * C480) *
              C481 +
          ((((C3206 + C3205) * C31694 + (C3204 + C3203) * C32767 +
             (C4955 + C4954) * C31686 + (C4953 + C4952) * C32774 +
             (C13107 + C13106) * C31700 + (C13105 + C13104) * C24425) *
                C15873 +
            ((C3202 + C3201) * C31694 + (C3200 + C3199) * C32767 +
             (C4951 + C4950) * C31686 + (C4949 + C4948) * C32774 +
             (C2784 * C1172 + C32925 * C1188 + C2785 * C1173 + C32729 * C1189) *
                 C31700 +
             (C2784 * C1190 + C32925 * C1199 + C2785 * C1191 + C32729 * C1200) *
                 C24425) *
                C32595) *
               C32644 * C480 -
           (((C4726 + C4727) * C24425 + (C4728 + C4729) * C31700 +
             C5152 * C32774 + C5153 * C31686 + (C2826 + C2825) * C32767 +
             (C2824 + C2823) * C31694) *
                C32595 +
            (C13302 * C24425 + C13303 * C31700 + C5154 * C32774 +
             C5155 * C31686 + (C2822 + C2821) * C32767 +
             (C2820 + C2819) * C31694) *
                C15873) *
               C32644 * C479) *
              C482)) /
        (p * q * std::sqrt(p + q));
    d2ee[81] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C2784 * C115 + C32925 * C122 + C2785 * C256 + C32729 * C271) *
                 C31694 +
             (C2784 * C123 + C32925 * C136 + C2785 * C270 + C32729 * C286) *
                 C32767 +
             (C4722 + C4723) * C31686 + (C4724 + C4725) * C32774 +
             C12874 * C31700 + C12875 * C24425) *
                C15873 +
            ((C2819 + C2820) * C31694 + (C2821 + C2822) * C32767 +
             C5150 * C31686 + C5151 * C32774 + C12876 * C31700 +
             C12877 * C24425) *
                C32595) *
               C601 -
           (((C12894 + C12895) * C24425 + (C12896 + C12897) * C31700 +
             C13302 * C32774 + C13303 * C31686 + C5154 * C32767 +
             C5155 * C31694) *
                C32595 +
            ((C12898 + C12899) * C24425 + (C12900 + C12901) * C31700 +
             (C4734 + C4735) * C32774 + (C4736 + C4737) * C31686 +
             (C4725 + C4724) * C32767 + (C4723 + C4722) * C31694) *
                C15873) *
               C602) *
              C479 +
          ((((C5358 + C5359) * C31694 + (C5360 + C5361) * C32767 +
             (C13506 + C13507) * C31686 + (C13508 + C13509) * C32774 +
             (C14946 + C14947) * C31700 + (C14948 + C14949) * C24425) *
                C15873 +
            ((C4955 + C4954) * C31694 + (C4953 + C4952) * C32767 +
             (C13107 + C13106) * C31686 + (C13105 + C13104) * C32774 +
             (C2784 * C2657 + C32925 * C2661 + C2785 * C7442 + C32729 * C7443) *
                 C31700 +
             (C2784 * C2662 + C32925 * C2666 + C2785 * C7444 + C32729 * C7445) *
                 C24425) *
                C32595) *
               C602 -
           (((C13104 + C13105) * C24425 + (C13106 + C13107) * C31700 +
             (C4952 + C4953) * C32774 + (C4954 + C4955) * C31686 +
             (C3203 + C3204) * C32767 + (C3205 + C3206) * C31694) *
                C32595 +
            ((C13509 + C13508) * C24425 + (C13507 + C13506) * C31700 +
             (C5361 + C5360) * C32774 + (C5359 + C5358) * C31686 +
             (C2785 * C273 + C32729 * C287 + C2784 * C270 + C32925 * C286) *
                 C32767 +
             (C2785 * C257 + C32729 * C272 + C2784 * C256 + C32925 * C271) *
                 C31694) *
                C15873) *
               C601) *
              C480) *
         C32618) /
        (p * q * std::sqrt(p + q));
    d2ee[82] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C2784 * C115 + C32925 * C122 + C2785 * C256 + C32729 * C271) *
                C31694 +
            (C2784 * C123 + C32925 * C136 + C2785 * C270 + C32729 * C286) *
                C32767 +
            (C4722 + C4723) * C31686 + (C4724 + C4725) * C32774 +
            C12874 * C31700 + C12875 * C24425) *
               C15873 +
           ((C2819 + C2820) * C31694 + (C2821 + C2822) * C32767 +
            C5150 * C31686 + C5151 * C32774 + C12876 * C31700 +
            C12877 * C24425) *
               C32595) *
              C32644 * C248 -
          (((C13104 + C13105) * C24425 + (C13106 + C13107) * C31700 +
            (C4952 + C4953) * C32774 + (C4954 + C4955) * C31686 +
            (C3203 + C3204) * C32767 + (C3205 + C3206) * C31694) *
               C32595 +
           ((C13509 + C13508) * C24425 + (C13507 + C13506) * C31700 +
            (C5361 + C5360) * C32774 + (C5359 + C5358) * C31686 +
            (C2785 * C273 + C32729 * C287 + C2784 * C270 + C32925 * C286) *
                C32767 +
            (C2785 * C257 + C32729 * C272 + C2784 * C256 + C32925 * C271) *
                C31694) *
               C15873) *
              C32644 * C249 +
          (((C2784 * C257 + C32925 * C272 + C2785 * C1033 + C32729 * C1042) *
                C31694 +
            (C2784 * C273 + C32925 * C287 + C2785 * C1041 + C32729 * C1051) *
                C32767 +
            (C2784 * C1167 + C32925 * C1179 + C2785 * C1719 + C32729 * C1722) *
                C31686 +
            (C2784 * C1178 + C32925 * C1194 + C2785 * C1723 + C32729 * C1728) *
                C32774 +
            (C2784 * C1169 + C32925 * C1181 + C2785 * C6477 + C32729 * C6481) *
                C31700 +
            (C2784 * C1183 + C32925 * C1196 + C2785 * C6483 + C32729 * C6486) *
                C24425) *
               C15873 +
           ((C2784 * C258 + C32925 * C274 + C2785 * C1032 + C32729 * C1040) *
                C31694 +
            (C2784 * C275 + C32925 * C288 + C2785 * C1039 + C32729 * C1050) *
                C32767 +
            (C2784 * C1166 + C32925 * C1177 + C2785 * C1720 + C32729 * C1724) *
                C31686 +
            (C2784 * C1176 + C32925 * C1193 + C2785 * C1725 + C32729 * C1729) *
                C32774 +
            (C2784 * C1171 + C32925 * C1185 + C2785 * C7292 + C32729 * C7293) *
                C31700 +
            (C2784 * C1187 + C32925 * C1198 + C2785 * C7294 + C32729 * C7295) *
                C24425) *
               C32595) *
              C32644 * C250) *
         C32618) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C2784 * C115 + C32925 * C122 + C2785 * C256 + C32729 * C271) *
                C31694 +
            (C2784 * C123 + C32925 * C136 + C2785 * C270 + C32729 * C286) *
                C32767 +
            (C4722 + C4723) * C31686 + (C4724 + C4725) * C32774 +
            C12874 * C31700 + C12875 * C24425) *
               C15873 +
           ((C2819 + C2820) * C31694 + (C2821 + C2822) * C32767 +
            C5150 * C31686 + C5151 * C32774 + C12876 * C31700 +
            C12877 * C24425) *
               C32595) *
              C32644 * C32630 * C110 -
          (((C4726 + C4727) * C24425 + (C4728 + C4729) * C31700 +
            C5152 * C32774 + C5153 * C31686 + (C2826 + C2825) * C32767 +
            (C2824 + C2823) * C31694) *
               C32595 +
           (C13302 * C24425 + C13303 * C31700 + C5154 * C32774 +
            C5155 * C31686 + (C2822 + C2821) * C32767 +
            (C2820 + C2819) * C31694) *
               C15873) *
              C32644 * C32630 * C111 +
          ((C2835 * C31694 + C2836 * C32767 + C4391 * C31686 + C4392 * C32774 +
            (C4729 + C4728) * C31700 + (C4727 + C4726) * C24425) *
               C15873 +
           (C2837 * C31694 + C2838 * C32767 + (C3364 + C3363) * C31686 +
            (C3362 + C3361) * C32774 +
            (C2784 * C365 + C32925 * C383 + C2785 * C2308 + C32729 * C2309) *
                C31700 +
            (C2784 * C384 + C32925 * C395 + C2785 * C2310 + C32729 * C2311) *
                C24425) *
               C32595) *
              C32644 * C32630 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C2784 * C115 + C32925 * C122 + C2785 * C256 + C32729 * C271) *
                C31694 +
            (C2784 * C123 + C32925 * C136 + C2785 * C270 + C32729 * C286) *
                C32767 +
            (C4722 + C4723) * C31686 + (C4724 + C4725) * C32774 +
            C12874 * C31700 + C12875 * C24425) *
               C15873 +
           ((C2819 + C2820) * C31694 + (C2821 + C2822) * C32767 +
            C5150 * C31686 + C5151 * C32774 + C12876 * C31700 +
            C12877 * C24425) *
               C32595) *
              C354 -
          (((C12894 + C12895) * C24425 + (C12896 + C12897) * C31700 +
            C13302 * C32774 + C13303 * C31686 + C5154 * C32767 +
            C5155 * C31694) *
               C32595 +
           ((C12898 + C12899) * C24425 + (C12900 + C12901) * C31700 +
            (C4734 + C4735) * C32774 + (C4736 + C4737) * C31686 +
            (C4725 + C4724) * C32767 + (C4723 + C4722) * C31694) *
               C15873) *
              C355 +
          ((C12874 * C31694 + C12875 * C32767 + C14534 * C31686 +
            C14535 * C32774 + (C14547 + C14546) * C31700 +
            (C14545 + C14544) * C24425) *
               C15873 +
           (C12876 * C31694 + C12877 * C32767 + (C12897 + C12896) * C31686 +
            (C12895 + C12894) * C32774 +
            (C2784 * C2112 + C32925 * C2122 + C2785 * C12241 +
             C32729 * C12242) *
                C31700 +
            (C2784 * C2123 + C32925 * C2130 + C2785 * C12243 +
             C32729 * C12244) *
                C24425) *
               C32595) *
              C356) *
         C32630 * C32618) /
            (p * q * std::sqrt(p + q));
    d2ee[83] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C2784 * C115 + C32925 * C122 + C2785 * C256 + C32729 * C271) *
                 C31694 +
             (C2784 * C123 + C32925 * C136 + C2785 * C270 + C32729 * C286) *
                 C32767 +
             (C4722 + C4723) * C31686 + (C4724 + C4725) * C32774 +
             C12874 * C31700 + C12875 * C24425) *
                C15873 +
            ((C2819 + C2820) * C31694 + (C2821 + C2822) * C32767 +
             C5150 * C31686 + C5151 * C32774 + C12876 * C31700 +
             C12877 * C24425) *
                C32595) *
               C601 -
           (((C12894 + C12895) * C24425 + (C12896 + C12897) * C31700 +
             C13302 * C32774 + C13303 * C31686 + C5154 * C32767 +
             C5155 * C31694) *
                C32595 +
            ((C12898 + C12899) * C24425 + (C12900 + C12901) * C31700 +
             (C4734 + C4735) * C32774 + (C4736 + C4737) * C31686 +
             (C4725 + C4724) * C32767 + (C4723 + C4722) * C31694) *
                C15873) *
               C602) *
              C32630 * C481 +
          (((C5150 * C31694 + C5151 * C32767 + C12876 * C31686 +
             C12877 * C32774 + (C12897 + C12896) * C31700 +
             (C12895 + C12894) * C24425) *
                C15873 +
            (C4391 * C31694 + C4392 * C32767 + (C4729 + C4728) * C31686 +
             (C4727 + C4726) * C32774 +
             (C2784 * C2108 + C32925 * C2115 + C2785 * C2658 + C32729 * C2663) *
                 C31700 +
             (C2784 * C2114 + C32925 * C2126 + C2785 * C2664 + C32729 * C2667) *
                 C24425) *
                C32595) *
               C602 -
           (((C4726 + C4727) * C24425 + (C4728 + C4729) * C31700 +
             C5152 * C32774 + C5153 * C31686 + (C2826 + C2825) * C32767 +
             (C2824 + C2823) * C31694) *
                C32595 +
            (C13302 * C24425 + C13303 * C31700 + C5154 * C32774 +
             C5155 * C31686 + (C2822 + C2821) * C32767 +
             (C2820 + C2819) * C31694) *
                C15873) *
               C601) *
              C32630 * C482)) /
        (p * q * std::sqrt(p + q));
    d2ee[84] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2784 * C115 + C32925 * C122 + C2785 * C256 + C32729 * C271) *
                C31694 +
            (C2784 * C123 + C32925 * C136 + C2785 * C270 + C32729 * C286) *
                C32767 +
            (C4722 + C4723) * C31686 + (C4724 + C4725) * C32774 +
            C12874 * C31700 + C12875 * C24425) *
               C15873 +
           ((C2819 + C2820) * C31694 + (C2821 + C2822) * C32767 +
            C5150 * C31686 + C5151 * C32774 + C12876 * C31700 +
            C12877 * C24425) *
               C32595) *
              C32644 * C32630 * C110 -
          (((C4726 + C4727) * C24425 + (C4728 + C4729) * C31700 +
            C5152 * C32774 + C5153 * C31686 + (C2826 + C2825) * C32767 +
            (C2824 + C2823) * C31694) *
               C32595 +
           (C13302 * C24425 + C13303 * C31700 + C5154 * C32774 +
            C5155 * C31686 + (C2822 + C2821) * C32767 +
            (C2820 + C2819) * C31694) *
               C15873) *
              C32644 * C32630 * C111 +
          ((C2835 * C31694 + C2836 * C32767 + C4391 * C31686 + C4392 * C32774 +
            (C4729 + C4728) * C31700 + (C4727 + C4726) * C24425) *
               C15873 +
           (C2837 * C31694 + C2838 * C32767 + (C3364 + C3363) * C31686 +
            (C3362 + C3361) * C32774 +
            (C2784 * C365 + C32925 * C383 + C2785 * C2308 + C32729 * C2309) *
                C31700 +
            (C2784 * C384 + C32925 * C395 + C2785 * C2310 + C32729 * C2311) *
                C24425) *
               C32595) *
              C32644 * C32630 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2784 * C115 + C32925 * C122 + C2785 * C256 + C32729 * C271) *
                C31694 +
            (C2784 * C123 + C32925 * C136 + C2785 * C270 + C32729 * C286) *
                C32767 +
            (C4722 + C4723) * C31686 + (C4724 + C4725) * C32774 +
            C12874 * C31700 + C12875 * C24425) *
               C15873 +
           ((C2819 + C2820) * C31694 + (C2821 + C2822) * C32767 +
            C5150 * C31686 + C5151 * C32774 + C12876 * C31700 +
            C12877 * C24425) *
               C32595) *
              C32644 * C248 -
          (((C13104 + C13105) * C24425 + (C13106 + C13107) * C31700 +
            (C4952 + C4953) * C32774 + (C4954 + C4955) * C31686 +
            (C3203 + C3204) * C32767 + (C3205 + C3206) * C31694) *
               C32595 +
           ((C13509 + C13508) * C24425 + (C13507 + C13506) * C31700 +
            (C5361 + C5360) * C32774 + (C5359 + C5358) * C31686 +
            (C2785 * C273 + C32729 * C287 + C2784 * C270 + C32925 * C286) *
                C32767 +
            (C2785 * C257 + C32729 * C272 + C2784 * C256 + C32925 * C271) *
                C31694) *
               C15873) *
              C32644 * C249 +
          (((C2784 * C257 + C32925 * C272 + C2785 * C1033 + C32729 * C1042) *
                C31694 +
            (C2784 * C273 + C32925 * C287 + C2785 * C1041 + C32729 * C1051) *
                C32767 +
            (C2784 * C1167 + C32925 * C1179 + C2785 * C1719 + C32729 * C1722) *
                C31686 +
            (C2784 * C1178 + C32925 * C1194 + C2785 * C1723 + C32729 * C1728) *
                C32774 +
            (C2784 * C1169 + C32925 * C1181 + C2785 * C6477 + C32729 * C6481) *
                C31700 +
            (C2784 * C1183 + C32925 * C1196 + C2785 * C6483 + C32729 * C6486) *
                C24425) *
               C15873 +
           ((C2784 * C258 + C32925 * C274 + C2785 * C1032 + C32729 * C1040) *
                C31694 +
            (C2784 * C275 + C32925 * C288 + C2785 * C1039 + C32729 * C1050) *
                C32767 +
            (C2784 * C1166 + C32925 * C1177 + C2785 * C1720 + C32729 * C1724) *
                C31686 +
            (C2784 * C1176 + C32925 * C1193 + C2785 * C1725 + C32729 * C1729) *
                C32774 +
            (C2784 * C1171 + C32925 * C1185 + C2785 * C7292 + C32729 * C7293) *
                C31700 +
            (C2784 * C1187 + C32925 * C1198 + C2785 * C7294 + C32729 * C7295) *
                C24425) *
               C32595) *
              C32644 * C250) *
         C32618) /
            (p * q * std::sqrt(p + q));
    d2ee[85] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C857 * C115 + C32991 * C122 + C858 * C256 + C32979 * C271 +
              C859 * C257 + C32956 * C272) *
                 C20882 +
             (C857 * C123 + C32991 * C136 + C858 * C270 + C32979 * C286 +
              C859 * C273 + C32956 * C287) *
                 C20880 +
             (C11430 + C11431 + C11432) * C20883 +
             (C11433 + C11434 + C11435) * C32771) *
                C15873 +
            ((C897 + C898 + C899) * C20882 + (C900 + C901 + C902) * C20880 +
             (C1573 + C1572 + C1571) * C20883 +
             (C1570 + C1569 + C1568) * C32771) *
                C32595) *
               C32644 * C479 -
           (((C22161 + C22162 + C22163) * C32771 +
             (C22164 + C22165 + C22166) * C20883 +
             (C1382 + C1383 + C1384) * C20880 +
             (C1385 + C1386 + C1387) * C20882) *
                C32595 +
            ((C11937 + C11936 + C11935) * C32771 +
             (C11934 + C11933 + C11932) * C20883 +
             (C859 * C1041 + C32956 * C1051 + C858 * C273 + C32979 * C287 +
              C857 * C270 + C32991 * C286) *
                 C20880 +
             (C859 * C1033 + C32956 * C1042 + C858 * C257 + C32979 * C272 +
              C857 * C256 + C32991 * C271) *
                 C20882) *
                C15873) *
               C32644 * C480) *
              C481 +
          ((((C1387 + C1386 + C1385) * C20882 +
             (C1384 + C1383 + C1382) * C20880 +
             (C22166 + C22165 + C22164) * C20883 +
             (C22163 + C22162 + C22161) * C32771) *
                C15873 +
            ((C1381 + C1380 + C1379) * C20882 +
             (C1378 + C1377 + C1376) * C20880 +
             (C857 * C723 + C32991 * C730 + C858 * C1165 + C32979 * C1175 +
              C859 * C1721 + C32956 * C1726) *
                 C20883 +
             (C857 * C731 + C32991 * C738 + C858 * C1174 + C32979 * C1192 +
              C859 * C1727 + C32956 * C1730) *
                 C32771) *
                C32595) *
               C32644 * C480 -
           (((C1562 + C1563 + C1564) * C32771 +
             (C1565 + C1566 + C1567) * C20883 + (C908 + C907 + C906) * C20880 +
             (C905 + C904 + C903) * C20882) *
                C32595 +
            ((C1568 + C1569 + C1570) * C32771 +
             (C1571 + C1572 + C1573) * C20883 + (C902 + C901 + C900) * C20880 +
             (C899 + C898 + C897) * C20882) *
                C15873) *
               C32644 * C479) *
              C482)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C32667 * C122) * C20882 +
             (C113 * C123 + C32667 * C136) * C20880 + C2153 * C20883 +
             C2154 * C32771) *
                C32997 +
            (C20885 + C20886 + C20887 + C20888) * C32990 + C20905 * C32977 +
            C20906 * C32960) *
               C32644 * C479 -
           ((C21233 + C21234 + C21235 + C21236) * C32960 +
            (C21237 + C21238 + C21239 + C21240) * C32977 +
            (C21241 + C21242 + C21243 + C21244) * C32990 +
            (C2678 * C32771 + C2677 * C20883 +
             (C113 * C270 + C32667 * C286) * C20880 +
             (C113 * C256 + C32667 * C271) * C20882) *
                C32997) *
               C32644 * C480) *
              C481 +
          (((C21244 + C21243 + C21242 + C21241) * C32997 +
            (C21240 + C21239 + C21238 + C21237) * C32990 +
            (C21236 + C21235 + C21234 + C21233) * C32977 +
            (C505 * C20882 + C504 * C20880 +
             (C113 * C725 + C32667 * C734) * C20883 +
             (C113 * C735 + C32667 * C740) * C32771) *
                C32960) *
               C32644 * C480 -
           ((C20897 + C20898 + C20899 + C20900) * C32960 +
            (C20896 + C20895 + C20894 + C20893) * C32977 +
            (C20892 + C20891 + C20890 + C20889) * C32990 +
            (C20888 + C20887 + C20886 + C20885) * C32997) *
               C32644 * C479) *
              C482)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C32667 * C122) * C22664 +
             (C113 * C123 + C32667 * C136) * C32999 + C2153 * C22665 +
             C2154 * C32996 + C2155 * C22666 + C2156 * C32987 + C2162 * C22667 +
             C2161 * C32972) *
                C15873 +
            (C22669 + C22670 + C22671 + C22672 + C22673 + C22674 + C22675 +
             C22676) *
                C32595) *
               C32644 * C479 -
           ((C23011 + C23012 + C23013 + C23014 + C23015 + C23016 + C23017 +
             C23018) *
                C32595 +
            (C12433 * C32972 + C12432 * C22667 + C2680 * C32987 +
             C2679 * C22666 + C2678 * C32996 + C2677 * C22665 +
             (C113 * C270 + C32667 * C286) * C32999 +
             (C113 * C256 + C32667 * C271) * C22664) *
                C15873) *
               C32644 * C480) *
              C481 +
          (((C23018 + C23017 + C23016 + C23015 + C23014 + C23013 + C23012 +
             C23011) *
                C15873 +
            (C509 * C22664 + C508 * C32999 + C2336 * C22665 + C2335 * C32996 +
             C2334 * C22666 + C2333 * C32987 +
             (C113 * C2658 + C32667 * C2663) * C22667 +
             (C113 * C2664 + C32667 * C2667) * C32972) *
                C32595) *
               C32644 * C480 -
           ((C22677 + C22678 + C22679 + C22680 + C22681 + C22682 + C22683 +
             C22684) *
                C32595 +
            (C22676 + C22675 + C22674 + C22673 + C22672 + C22671 + C22670 +
             C22669) *
                C15873) *
               C32644 * C479) *
              C482)) /
            (p * q * std::sqrt(p + q));
    d2ee[86] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C857 * C115 + C32991 * C122 + C858 * C256 + C32979 * C271 +
              C859 * C257 + C32956 * C272) *
                 C20882 +
             (C857 * C123 + C32991 * C136 + C858 * C270 + C32979 * C286 +
              C859 * C273 + C32956 * C287) *
                 C20880 +
             (C11430 + C11431 + C11432) * C20883 +
             (C11433 + C11434 + C11435) * C32771) *
                C15873 +
            ((C897 + C898 + C899) * C20882 + (C900 + C901 + C902) * C20880 +
             C22365 * C20883 + C22366 * C32771) *
                C32595) *
               C601 -
           (((C11761 + C11760 + C11759) * C32771 +
             (C11758 + C11757 + C11756) * C20883 + C22367 * C20880 +
             C22368 * C20882) *
                C32595 +
            ((C11441 + C11440 + C11439) * C32771 +
             (C11438 + C11437 + C11436) * C20883 +
             (C11435 + C11434 + C11433) * C20880 +
             (C11432 + C11431 + C11430) * C20882) *
                C15873) *
               C602) *
              C479 +
          ((((C11932 + C11933 + C11934) * C20882 +
             (C11935 + C11936 + C11937) * C20880 +
             (C11938 + C11939 + C11940) * C20883 +
             (C11941 + C11942 + C11943) * C32771) *
                C15873 +
            ((C22166 + C22165 + C22164) * C20882 +
             (C22163 + C22162 + C22161) * C20880 +
             (C857 * C1170 + C32991 * C1184 + C858 * C1171 + C32979 * C1185 +
              C859 * C7292 + C32956 * C7293) *
                 C20883 +
             (C857 * C1186 + C32991 * C1197 + C858 * C1187 + C32979 * C1198 +
              C859 * C7294 + C32956 * C7295) *
                 C32771) *
                C32595) *
               C602 -
           (((C22161 + C22162 + C22163) * C32771 +
             (C22164 + C22165 + C22166) * C20883 +
             (C1382 + C1383 + C1384) * C20880 +
             (C1385 + C1386 + C1387) * C20882) *
                C32595 +
            ((C11937 + C11936 + C11935) * C32771 +
             (C11934 + C11933 + C11932) * C20883 +
             (C859 * C1041 + C32956 * C1051 + C858 * C273 + C32979 * C287 +
              C857 * C270 + C32991 * C286) *
                 C20880 +
             (C859 * C1033 + C32956 * C1042 + C858 * C257 + C32979 * C272 +
              C857 * C256 + C32991 * C271) *
                 C20882) *
                C15873) *
               C601) *
              C480) *
         C32618) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C32667 * C122) * C20882 +
             (C113 * C123 + C32667 * C136) * C20880 + C2153 * C20883 +
             C2154 * C32771) *
                C32997 +
            (C20885 + C20886 + C20887 + C20888) * C32990 + C20905 * C32977 +
            C20906 * C32960) *
               C601 -
           ((C21375 + C21376 + C21377 + C21378) * C32960 +
            (C21379 + C21380 + C21381 + C21382) * C32977 +
            (C21383 + C21384 + C21385 + C21386) * C32990 +
            (C2156 * C32771 + C2155 * C20883 + C2154 * C20880 +
             C2153 * C20882) *
                C32997) *
               C602) *
              C479 +
          (((C2677 * C20882 + C2678 * C20880 + C2679 * C20883 +
             C2680 * C32771) *
                C32997 +
            (C2340 * C20882 + C2339 * C20880 + C2338 * C20883 +
             C2337 * C32771) *
                C32990 +
            (C2336 * C20882 + C2335 * C20880 + C2334 * C20883 +
             C2333 * C32771) *
                C32977 +
            (C3968 * C20882 + C3967 * C20880 +
             (C113 * C2308 + C32667 * C2309) * C20883 +
             (C113 * C2310 + C32667 * C2311) * C32771) *
                C32960) *
               C602 -
           ((C21233 + C21234 + C21235 + C21236) * C32960 +
            (C21237 + C21238 + C21239 + C21240) * C32977 +
            (C21241 + C21242 + C21243 + C21244) * C32990 +
            (C2678 * C32771 + C2677 * C20883 +
             (C113 * C270 + C32667 * C286) * C20880 +
             (C113 * C256 + C32667 * C271) * C20882) *
                C32997) *
               C601) *
              C480) *
         C32618) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C32667 * C122) * C22664 +
             (C113 * C123 + C32667 * C136) * C32999 + C2153 * C22665 +
             C2154 * C32996 + C2155 * C22666 + C2156 * C32987 + C2162 * C22667 +
             C2161 * C32972) *
                C15873 +
            (C22669 + C22670 + C22671 + C22672 + C22673 + C22674 + C22675 +
             C22676) *
                C32595) *
               C601 -
           ((C23149 + C23150 + C23151 + C23152 + C23153 + C23154 + C23155 +
             C23156) *
                C32595 +
            (C12157 * C32972 + C12156 * C22667 + C2161 * C32987 +
             C2162 * C22666 + C2156 * C32996 + C2155 * C22665 + C2154 * C32999 +
             C2153 * C22664) *
                C15873) *
               C602) *
              C479 +
          (((C2677 * C22664 + C2678 * C32999 + C2679 * C22665 + C2680 * C32996 +
             C12432 * C22666 + C12433 * C32987 + C12434 * C22667 +
             C12435 * C32972) *
                C15873 +
            (C2340 * C22664 + C2339 * C32999 + C2338 * C22665 + C2337 * C32996 +
             C13969 * C22666 + C13968 * C32987 +
             (C113 * C12241 + C32667 * C12242) * C22667 +
             (C113 * C12243 + C32667 * C12244) * C32972) *
                C32595) *
               C602 -
           ((C23011 + C23012 + C23013 + C23014 + C23015 + C23016 + C23017 +
             C23018) *
                C32595 +
            (C12433 * C32972 + C12432 * C22667 + C2680 * C32987 +
             C2679 * C22666 + C2678 * C32996 + C2677 * C22665 +
             (C113 * C270 + C32667 * C286) * C32999 +
             (C113 * C256 + C32667 * C271) * C22664) *
                C15873) *
               C601) *
              C480) *
         C32618) /
            (p * q * std::sqrt(p + q));
    d2ee[87] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C113 * C115 + C32667 * C122) * C20882 +
                (C113 * C123 + C32667 * C136) * C20880 + C2153 * C20883 +
                C2154 * C32771) *
                   C32997 +
               (C20885 + C20886 + C20887 + C20888) * C32990 + C20905 * C32977 +
               C20906 * C32960) *
                  C32644 * C32630 * C110 -
              ((C20897 + C20898 + C20899 + C20900) * C32960 +
               (C20896 + C20895 + C20894 + C20893) * C32977 +
               (C20892 + C20891 + C20890 + C20889) * C32990 +
               (C20888 + C20887 + C20886 + C20885) * C32997) *
                  C32644 * C32630 * C111 +
              (C20905 * C32997 + C20906 * C32990 +
               (C20900 + C20899 + C20898 + C20897) * C32977 +
               (C173 * C20882 + C172 * C20880 +
                (C113 * C603 + C32667 * C604) * C20883 +
                (C113 * C605 + C32667 * C606) * C32771) *
                   C32960) *
                  C32644 * C32630 * C112) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C113 * C115 + C32667 * C122) * C20882 +
                (C113 * C123 + C32667 * C136) * C20880 + C2153 * C20883 +
                C2154 * C32771) *
                   C32997 +
               (C20885 + C20886 + C20887 + C20888) * C32990 + C20905 * C32977 +
               C20906 * C32960) *
                  C32644 * C248 -
              ((C3967 * C32771 + C3968 * C20883 + C506 * C20880 +
                C507 * C20882) *
                   C32960 +
               (C2335 * C32771 + C2336 * C20883 + C508 * C20880 +
                C509 * C20882) *
                   C32977 +
               (C2339 * C32771 + C2340 * C20883 + C510 * C20880 +
                C511 * C20882) *
                   C32990 +
               (C2678 * C32771 + C2677 * C20883 +
                (C113 * C270 + C32667 * C286) * C20880 +
                (C113 * C256 + C32667 * C271) * C20882) *
                   C32997) *
                  C32644 * C249 +
              (((C113 * C257 + C32667 * C272) * C20882 +
                (C113 * C273 + C32667 * C287) * C20880 +
                (C113 * C1167 + C32667 * C1179) * C20883 +
                (C113 * C1178 + C32667 * C1194) * C32771) *
                   C32997 +
               ((C113 * C258 + C32667 * C274) * C20882 +
                (C113 * C275 + C32667 * C288) * C20880 +
                (C113 * C1166 + C32667 * C1177) * C20883 +
                (C113 * C1176 + C32667 * C1193) * C32771) *
                   C32990 +
               ((C113 * C259 + C32667 * C276) * C20882 +
                (C113 * C277 + C32667 * C289) * C20880 +
                (C113 * C1165 + C32667 * C1175) * C20883 +
                (C113 * C1174 + C32667 * C1192) * C32771) *
                   C32977 +
               ((C113 * C260 + C32667 * C278) * C20882 +
                (C113 * C279 + C32667 * C290) * C20880 +
                (C113 * C1533 + C32667 * C1534) * C20883 +
                (C113 * C1535 + C32667 * C1536) * C32771) *
                   C32960) *
                  C32644 * C250) *
             C32618) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C32667 * C122) * C20882 +
            (C113 * C123 + C32667 * C136) * C20880 + C2153 * C20883 +
            C2154 * C32771) *
               C32997 +
           (C20885 + C20886 + C20887 + C20888) * C32990 + C20905 * C32977 +
           C20906 * C32960) *
              C354 -
          ((C1877 * C32771 + C1878 * C20883 + C626 * C20880 + C627 * C20882) *
               C32960 +
           (C1876 * C32771 + C1875 * C20883 + C628 * C20880 + C629 * C20882) *
               C32977 +
           (C1873 * C32771 + C1872 * C20883 + C630 * C20880 + C631 * C20882) *
               C32990 +
           (C2156 * C32771 + C2155 * C20883 + C2154 * C20880 + C2153 * C20882) *
               C32997) *
              C355 +
          ((C2155 * C20882 + C2156 * C20880 + C2162 * C20883 + C2161 * C32771) *
               C32997 +
           (C1872 * C20882 + C1873 * C20880 + C2160 * C20883 + C2159 * C32771) *
               C32990 +
           (C1875 * C20882 + C1876 * C20880 + C2158 * C20883 + C2157 * C32771) *
               C32977 +
           (C1878 * C20882 + C1877 * C20880 +
            (C113 * C2494 + C32667 * C2495) * C20883 +
            (C113 * C2496 + C32667 * C2497) * C32771) *
               C32960) *
              C356) *
         C32630 * C32618) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C857 * C115 + C32991 * C122 + C858 * C256 + C32979 * C271 +
             C859 * C257 + C32956 * C272) *
                C20882 +
            (C857 * C123 + C32991 * C136 + C858 * C270 + C32979 * C286 +
             C859 * C273 + C32956 * C287) *
                C20880 +
            (C11430 + C11431 + C11432) * C20883 +
            (C11433 + C11434 + C11435) * C32771) *
               C15873 +
           ((C897 + C898 + C899) * C20882 + (C900 + C901 + C902) * C20880 +
            (C1573 + C1572 + C1571) * C20883 +
            (C1570 + C1569 + C1568) * C32771) *
               C32595) *
              C32644 * C32630 * C110 -
          (((C1562 + C1563 + C1564) * C32771 +
            (C1565 + C1566 + C1567) * C20883 + (C908 + C907 + C906) * C20880 +
            (C905 + C904 + C903) * C20882) *
               C32595 +
           ((C1568 + C1569 + C1570) * C32771 +
            (C1571 + C1572 + C1573) * C20883 + (C902 + C901 + C900) * C20880 +
            (C899 + C898 + C897) * C20882) *
               C15873) *
              C32644 * C32630 * C111 +
          ((C917 * C20882 + C918 * C20880 + (C1567 + C1566 + C1565) * C20883 +
            (C1564 + C1563 + C1562) * C32771) *
               C15873 +
           ((C914 + C913 + C912) * C20882 + (C911 + C910 + C909) * C20880 +
            (C857 * C358 + C32991 * C370 + C858 * C724 + C32979 * C732 +
             C859 * C1533 + C32956 * C1534) *
                C20883 +
            (C857 * C369 + C32991 * C388 + C858 * C733 + C32979 * C739 +
             C859 * C1535 + C32956 * C1536) *
                C32771) *
               C32595) *
              C32644 * C32630 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C857 * C115 + C32991 * C122 + C858 * C256 + C32979 * C271 +
             C859 * C257 + C32956 * C272) *
                C20882 +
            (C857 * C123 + C32991 * C136 + C858 * C270 + C32979 * C286 +
             C859 * C273 + C32956 * C287) *
                C20880 +
            (C11430 + C11431 + C11432) * C20883 +
            (C11433 + C11434 + C11435) * C32771) *
               C15873 +
           ((C897 + C898 + C899) * C20882 + (C900 + C901 + C902) * C20880 +
            (C1573 + C1572 + C1571) * C20883 +
            (C1570 + C1569 + C1568) * C32771) *
               C32595) *
              C32644 * C248 -
          (((C859 * C1725 + C32956 * C1729 + C858 * C1176 + C32979 * C1193 +
             C857 * C729 + C32991 * C737) *
                C32771 +
            (C859 * C1720 + C32956 * C1724 + C858 * C1166 + C32979 * C1177 +
             C857 * C722 + C32991 * C728) *
                C20883 +
            (C1382 + C1383 + C1384) * C20880 +
            (C1385 + C1386 + C1387) * C20882) *
               C32595 +
           ((C11937 + C11936 + C11935) * C32771 +
            (C11934 + C11933 + C11932) * C20883 +
            (C859 * C1041 + C32956 * C1051 + C858 * C273 + C32979 * C287 +
             C857 * C270 + C32991 * C286) *
                C20880 +
            (C859 * C1033 + C32956 * C1042 + C858 * C257 + C32979 * C272 +
             C857 * C256 + C32991 * C271) *
                C20882) *
               C15873) *
              C32644 * C249 +
          (((C857 * C257 + C32991 * C272 + C858 * C1033 + C32979 * C1042 +
             C859 * C1034 + C32956 * C1043) *
                C20882 +
            (C857 * C273 + C32991 * C287 + C858 * C1041 + C32979 * C1051 +
             C859 * C1044 + C32956 * C1052) *
                C20880 +
            (C857 * C1167 + C32991 * C1179 + C858 * C1719 + C32979 * C1722 +
             C859 * C6476 + C32956 * C6480) *
                C20883 +
            (C857 * C1178 + C32991 * C1194 + C858 * C1723 + C32979 * C1728 +
             C859 * C6479 + C32956 * C6485) *
                C32771) *
               C15873 +
           ((C857 * C258 + C32991 * C274 + C858 * C1032 + C32979 * C1040 +
             C859 * C1035 + C32956 * C1045) *
                C20882 +
            (C857 * C275 + C32991 * C288 + C858 * C1039 + C32979 * C1050 +
             C859 * C1046 + C32956 * C1053) *
                C20880 +
            (C857 * C1166 + C32991 * C1177 + C858 * C1720 + C32979 * C1724 +
             C859 * C6656 + C32956 * C6657) *
                C20883 +
            (C857 * C1176 + C32991 * C1193 + C858 * C1725 + C32979 * C1729 +
             C859 * C6658 + C32956 * C6659) *
                C32771) *
               C32595) *
              C32644 * C250) *
         C32618) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C857 * C115 + C32991 * C122 + C858 * C256 + C32979 * C271 +
             C859 * C257 + C32956 * C272) *
                C20882 +
            (C857 * C123 + C32991 * C136 + C858 * C270 + C32979 * C286 +
             C859 * C273 + C32956 * C287) *
                C20880 +
            (C11430 + C11431 + C11432) * C20883 +
            (C11433 + C11434 + C11435) * C32771) *
               C15873 +
           ((C897 + C898 + C899) * C20882 + (C900 + C901 + C902) * C20880 +
            (C1573 + C1572 + C1571) * C20883 +
            (C1570 + C1569 + C1568) * C32771) *
               C32595) *
              C354 -
          (((C11761 + C11760 + C11759) * C32771 +
            (C11758 + C11757 + C11756) * C20883 +
            (C1568 + C1569 + C1570) * C20880 +
            (C1571 + C1572 + C1573) * C20882) *
               C32595 +
           ((C11441 + C11440 + C11439) * C32771 +
            (C11438 + C11437 + C11436) * C20883 +
            (C11435 + C11434 + C11433) * C20880 +
            (C11432 + C11431 + C11430) * C20882) *
               C15873) *
              C355 +
          ((C11450 * C20882 + C11451 * C20880 +
            (C11447 + C11446 + C11445) * C20883 +
            (C11444 + C11443 + C11442) * C32771) *
               C15873 +
           ((C11756 + C11757 + C11758) * C20882 +
            (C11759 + C11760 + C11761) * C20880 +
            (C857 * C2109 + C32991 * C2117 + C858 * C2657 + C32979 * C2661 +
             C859 * C7442 + C32956 * C7443) *
                C20883 +
            (C857 * C2116 + C32991 * C2127 + C858 * C2662 + C32979 * C2666 +
             C859 * C7444 + C32956 * C7445) *
                C32771) *
               C32595) *
              C356) *
         C32630 * C32618) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C32667 * C122) * C22664 +
            (C113 * C123 + C32667 * C136) * C32999 + C2153 * C22665 +
            C2154 * C32996 + C2155 * C22666 + C2156 * C32987 + C2162 * C22667 +
            C2161 * C32972) *
               C15873 +
           (C22669 + C22670 + C22671 + C22672 + C22673 + C22674 + C22675 +
            C22676) *
               C32595) *
              C32644 * C32630 * C110 -
          ((C22677 + C22678 + C22679 + C22680 + C22681 + C22682 + C22683 +
            C22684) *
               C32595 +
           (C22676 + C22675 + C22674 + C22673 + C22672 + C22671 + C22670 +
            C22669) *
               C15873) *
              C32644 * C32630 * C111 +
          ((C22684 + C22683 + C22682 + C22681 + C22680 + C22679 + C22678 +
            C22677) *
               C15873 +
           (C168 * C22664 + C169 * C32999 + C627 * C22665 + C626 * C32996 +
            C1878 * C22666 + C1877 * C32987 +
            (C113 * C2494 + C32667 * C2495) * C22667 +
            (C113 * C2496 + C32667 * C2497) * C32972) *
               C32595) *
              C32644 * C32630 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C32667 * C122) * C22664 +
            (C113 * C123 + C32667 * C136) * C32999 + C2153 * C22665 +
            C2154 * C32996 + C2155 * C22666 + C2156 * C32987 + C2162 * C22667 +
            C2161 * C32972) *
               C15873 +
           (C22669 + C22670 + C22671 + C22672 + C22673 + C22674 + C22675 +
            C22676) *
               C32595) *
              C32644 * C248 -
          ((C13968 * C32972 + C13969 * C22667 + C2337 * C32987 +
            C2338 * C22666 + C2339 * C32996 + C2340 * C22665 + C510 * C32999 +
            C511 * C22664) *
               C32595 +
           (C12433 * C32972 + C12432 * C22667 + C2680 * C32987 +
            C2679 * C22666 + C2678 * C32996 + C2677 * C22665 +
            (C113 * C270 + C32667 * C286) * C32999 +
            (C113 * C256 + C32667 * C271) * C22664) *
               C15873) *
              C32644 * C249 +
          (((C113 * C257 + C32667 * C272) * C22664 +
            (C113 * C273 + C32667 * C287) * C32999 +
            (C113 * C1167 + C32667 * C1179) * C22665 +
            (C113 * C1178 + C32667 * C1194) * C32996 +
            (C113 * C1169 + C32667 * C1181) * C22666 +
            (C113 * C1183 + C32667 * C1196) * C32987 +
            (C113 * C7076 + C32667 * C7080) * C22667 +
            (C113 * C7079 + C32667 * C7085) * C32972) *
               C15873 +
           ((C113 * C258 + C32667 * C274) * C22664 +
            (C113 * C275 + C32667 * C288) * C32999 +
            (C113 * C1166 + C32667 * C1177) * C22665 +
            (C113 * C1176 + C32667 * C1193) * C32996 +
            (C113 * C1171 + C32667 * C1185) * C22666 +
            (C113 * C1187 + C32667 * C1198) * C32987 +
            (C113 * C7442 + C32667 * C7443) * C22667 +
            (C113 * C7444 + C32667 * C7445) * C32972) *
               C32595) *
              C32644 * C250) *
         C32618) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C32667 * C122) * C22664 +
            (C113 * C123 + C32667 * C136) * C32999 + C2153 * C22665 +
            C2154 * C32996 + C2155 * C22666 + C2156 * C32987 + C2162 * C22667 +
            C2161 * C32972) *
               C15873 +
           (C22669 + C22670 + C22671 + C22672 + C22673 + C22674 + C22675 +
            C22676) *
               C32595) *
              C354 -
          ((C12337 * C32972 + C12336 * C22667 + C2159 * C32987 +
            C2160 * C22666 + C1873 * C32996 + C1872 * C22665 + C630 * C32999 +
            C631 * C22664) *
               C32595 +
           (C12157 * C32972 + C12156 * C22667 + C2161 * C32987 +
            C2162 * C22666 + C2156 * C32996 + C2155 * C22665 + C2154 * C32999 +
            C2153 * C22664) *
               C15873) *
              C355 +
          ((C2155 * C22664 + C2156 * C32999 + C2162 * C22665 + C2161 * C32996 +
            C12156 * C22666 + C12157 * C32987 + C12159 * C22667 +
            C12158 * C32972) *
               C15873 +
           (C1872 * C22664 + C1873 * C32999 + C2160 * C22665 + C2159 * C32996 +
            C12336 * C22666 + C12337 * C32987 +
            (C113 * C12327 + C32667 * C12328) * C22667 +
            (C113 * C12329 + C32667 * C12330) * C32972) *
               C32595) *
              C356) *
         C32630 * C32618) /
            (p * q * std::sqrt(p + q));
    d2ee[88] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C857 * C115 + C32991 * C122 + C858 * C256 + C32979 * C271 +
              C859 * C257 + C32956 * C272) *
                 C20882 +
             (C857 * C123 + C32991 * C136 + C858 * C270 + C32979 * C286 +
              C859 * C273 + C32956 * C287) *
                 C20880 +
             (C11430 + C11431 + C11432) * C20883 +
             (C11433 + C11434 + C11435) * C32771) *
                C15873 +
            ((C897 + C898 + C899) * C20882 + (C900 + C901 + C902) * C20880 +
             C22365 * C20883 + C22366 * C32771) *
                C32595) *
               C601 -
           (((C11761 + C11760 + C11759) * C32771 +
             (C11758 + C11757 + C11756) * C20883 + C22367 * C20880 +
             C22368 * C20882) *
                C32595 +
            ((C11441 + C11440 + C11439) * C32771 +
             (C11438 + C11437 + C11436) * C20883 +
             (C11435 + C11434 + C11433) * C20880 +
             (C11432 + C11431 + C11430) * C20882) *
                C15873) *
               C602) *
              C32630 * C481 +
          (((C22365 * C20882 + C22366 * C20880 +
             (C11756 + C11757 + C11758) * C20883 +
             (C11759 + C11760 + C11761) * C32771) *
                C15873 +
            ((C1567 + C1566 + C1565) * C20882 +
             (C1564 + C1563 + C1562) * C20880 +
             (C857 * C364 + C32991 * C381 + C858 * C1172 + C32979 * C1188 +
              C859 * C1173 + C32956 * C1189) *
                 C20883 +
             (C857 * C382 + C32991 * C394 + C858 * C1190 + C32979 * C1199 +
              C859 * C1191 + C32956 * C1200) *
                 C32771) *
                C32595) *
               C602 -
           (((C1562 + C1563 + C1564) * C32771 +
             (C1565 + C1566 + C1567) * C20883 + (C908 + C907 + C906) * C20880 +
             (C905 + C904 + C903) * C20882) *
                C32595 +
            (C22367 * C32771 + C22368 * C20883 + (C902 + C901 + C900) * C20880 +
             (C899 + C898 + C897) * C20882) *
                C15873) *
               C601) *
              C32630 * C482)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C32667 * C122) * C20882 +
             (C113 * C123 + C32667 * C136) * C20880 + C2153 * C20883 +
             C2154 * C32771) *
                C32997 +
            (C20885 + C20886 + C20887 + C20888) * C32990 + C20905 * C32977 +
            C20906 * C32960) *
               C601 -
           ((C21375 + C21376 + C21377 + C21378) * C32960 +
            (C21379 + C21380 + C21381 + C21382) * C32977 +
            (C21383 + C21384 + C21385 + C21386) * C32990 +
            (C2156 * C32771 + C2155 * C20883 + C2154 * C20880 +
             C2153 * C20882) *
                C32997) *
               C602) *
              C32630 * C481 +
          (((C21386 + C21385 + C21384 + C21383) * C32997 +
            (C21382 + C21381 + C21380 + C21379) * C32990 +
            (C21378 + C21377 + C21376 + C21375) * C32977 +
            (C625 * C20882 + C624 * C20880 +
             (C113 * C366 + C32667 * C385) * C20883 +
             (C113 * C386 + C32667 * C396) * C32771) *
                C32960) *
               C602 -
           ((C20897 + C20898 + C20899 + C20900) * C32960 +
            (C20896 + C20895 + C20894 + C20893) * C32977 +
            (C20892 + C20891 + C20890 + C20889) * C32990 +
            (C20888 + C20887 + C20886 + C20885) * C32997) *
               C601) *
              C32630 * C482)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C32667 * C122) * C22664 +
             (C113 * C123 + C32667 * C136) * C32999 + C2153 * C22665 +
             C2154 * C32996 + C2155 * C22666 + C2156 * C32987 + C2162 * C22667 +
             C2161 * C32972) *
                C15873 +
            (C22669 + C22670 + C22671 + C22672 + C22673 + C22674 + C22675 +
             C22676) *
                C32595) *
               C601 -
           ((C23149 + C23150 + C23151 + C23152 + C23153 + C23154 + C23155 +
             C23156) *
                C32595 +
            (C12157 * C32972 + C12156 * C22667 + C2161 * C32987 +
             C2162 * C22666 + C2156 * C32996 + C2155 * C22665 + C2154 * C32999 +
             C2153 * C22664) *
                C15873) *
               C602) *
              C32630 * C481 +
          (((C23156 + C23155 + C23154 + C23153 + C23152 + C23151 + C23150 +
             C23149) *
                C15873 +
            (C629 * C22664 + C628 * C32999 + C1875 * C22665 + C1876 * C32996 +
             C2158 * C22666 + C2157 * C32987 +
             (C113 * C2113 + C32667 * C2124) * C22667 +
             (C113 * C2125 + C32667 * C2131) * C32972) *
                C32595) *
               C602 -
           ((C22677 + C22678 + C22679 + C22680 + C22681 + C22682 + C22683 +
             C22684) *
                C32595 +
            (C22676 + C22675 + C22674 + C22673 + C22672 + C22671 + C22670 +
             C22669) *
                C15873) *
               C601) *
              C32630 * C482)) /
            (p * q * std::sqrt(p + q));
    d2ee[89] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C32667 * C122) * C20882 +
            (C113 * C123 + C32667 * C136) * C20880 + C2153 * C20883 +
            C2154 * C32771) *
               C32997 +
           (C20885 + C20886 + C20887 + C20888) * C32990 + C20905 * C32977 +
           C20906 * C32960) *
              C32644 * C248 -
          ((C3967 * C32771 + C3968 * C20883 + C506 * C20880 + C507 * C20882) *
               C32960 +
           (C2335 * C32771 + C2336 * C20883 + C508 * C20880 + C509 * C20882) *
               C32977 +
           (C2339 * C32771 + C2340 * C20883 + C510 * C20880 + C511 * C20882) *
               C32990 +
           (C2678 * C32771 + C2677 * C20883 +
            (C113 * C270 + C32667 * C286) * C20880 +
            (C113 * C256 + C32667 * C271) * C20882) *
               C32997) *
              C32644 * C249 +
          (((C113 * C257 + C32667 * C272) * C20882 +
            (C113 * C273 + C32667 * C287) * C20880 +
            (C113 * C1167 + C32667 * C1179) * C20883 +
            (C113 * C1178 + C32667 * C1194) * C32771) *
               C32997 +
           ((C113 * C258 + C32667 * C274) * C20882 +
            (C113 * C275 + C32667 * C288) * C20880 +
            (C113 * C1166 + C32667 * C1177) * C20883 +
            (C113 * C1176 + C32667 * C1193) * C32771) *
               C32990 +
           ((C113 * C259 + C32667 * C276) * C20882 +
            (C113 * C277 + C32667 * C289) * C20880 +
            (C113 * C1165 + C32667 * C1175) * C20883 +
            (C113 * C1174 + C32667 * C1192) * C32771) *
               C32977 +
           ((C113 * C260 + C32667 * C278) * C20882 +
            (C113 * C279 + C32667 * C290) * C20880 +
            (C113 * C1533 + C32667 * C1534) * C20883 +
            (C113 * C1535 + C32667 * C1536) * C32771) *
               C32960) *
              C32644 * C250) *
         C32618) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C32667 * C122) * C20882 +
            (C113 * C123 + C32667 * C136) * C20880 + C2153 * C20883 +
            C2154 * C32771) *
               C32997 +
           (C20885 + C20886 + C20887 + C20888) * C32990 + C20905 * C32977 +
           C20906 * C32960) *
              C32644 * C32630 * C110 -
          ((C20897 + C20898 + C20899 + C20900) * C32960 +
           (C20896 + C20895 + C20894 + C20893) * C32977 +
           (C20892 + C20891 + C20890 + C20889) * C32990 +
           (C20888 + C20887 + C20886 + C20885) * C32997) *
              C32644 * C32630 * C111 +
          (C20905 * C32997 + C20906 * C32990 +
           (C20900 + C20899 + C20898 + C20897) * C32977 +
           (C173 * C20882 + C172 * C20880 +
            (C113 * C603 + C32667 * C604) * C20883 +
            (C113 * C605 + C32667 * C606) * C32771) *
               C32960) *
              C32644 * C32630 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C857 * C115 + C32991 * C122 + C858 * C256 + C32979 * C271 +
             C859 * C257 + C32956 * C272) *
                C20882 +
            (C857 * C123 + C32991 * C136 + C858 * C270 + C32979 * C286 +
             C859 * C273 + C32956 * C287) *
                C20880 +
            (C11430 + C11431 + C11432) * C20883 +
            (C11433 + C11434 + C11435) * C32771) *
               C15873 +
           ((C897 + C898 + C899) * C20882 + (C900 + C901 + C902) * C20880 +
            (C1573 + C1572 + C1571) * C20883 +
            (C1570 + C1569 + C1568) * C32771) *
               C32595) *
              C32644 * C32630 * C110 -
          (((C1562 + C1563 + C1564) * C32771 +
            (C1565 + C1566 + C1567) * C20883 + (C908 + C907 + C906) * C20880 +
            (C905 + C904 + C903) * C20882) *
               C32595 +
           ((C1568 + C1569 + C1570) * C32771 +
            (C1571 + C1572 + C1573) * C20883 + (C902 + C901 + C900) * C20880 +
            (C899 + C898 + C897) * C20882) *
               C15873) *
              C32644 * C32630 * C111 +
          ((C917 * C20882 + C918 * C20880 + (C1567 + C1566 + C1565) * C20883 +
            (C1564 + C1563 + C1562) * C32771) *
               C15873 +
           ((C914 + C913 + C912) * C20882 + (C911 + C910 + C909) * C20880 +
            (C857 * C358 + C32991 * C370 + C858 * C724 + C32979 * C732 +
             C859 * C1533 + C32956 * C1534) *
                C20883 +
            (C857 * C369 + C32991 * C388 + C858 * C733 + C32979 * C739 +
             C859 * C1535 + C32956 * C1536) *
                C32771) *
               C32595) *
              C32644 * C32630 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C857 * C115 + C32991 * C122 + C858 * C256 + C32979 * C271 +
             C859 * C257 + C32956 * C272) *
                C20882 +
            (C857 * C123 + C32991 * C136 + C858 * C270 + C32979 * C286 +
             C859 * C273 + C32956 * C287) *
                C20880 +
            (C11430 + C11431 + C11432) * C20883 +
            (C11433 + C11434 + C11435) * C32771) *
               C15873 +
           ((C897 + C898 + C899) * C20882 + (C900 + C901 + C902) * C20880 +
            (C1573 + C1572 + C1571) * C20883 +
            (C1570 + C1569 + C1568) * C32771) *
               C32595) *
              C32644 * C248 -
          (((C859 * C1725 + C32956 * C1729 + C858 * C1176 + C32979 * C1193 +
             C857 * C729 + C32991 * C737) *
                C32771 +
            (C859 * C1720 + C32956 * C1724 + C858 * C1166 + C32979 * C1177 +
             C857 * C722 + C32991 * C728) *
                C20883 +
            (C1382 + C1383 + C1384) * C20880 +
            (C1385 + C1386 + C1387) * C20882) *
               C32595 +
           ((C11937 + C11936 + C11935) * C32771 +
            (C11934 + C11933 + C11932) * C20883 +
            (C859 * C1041 + C32956 * C1051 + C858 * C273 + C32979 * C287 +
             C857 * C270 + C32991 * C286) *
                C20880 +
            (C859 * C1033 + C32956 * C1042 + C858 * C257 + C32979 * C272 +
             C857 * C256 + C32991 * C271) *
                C20882) *
               C15873) *
              C32644 * C249 +
          (((C857 * C257 + C32991 * C272 + C858 * C1033 + C32979 * C1042 +
             C859 * C1034 + C32956 * C1043) *
                C20882 +
            (C857 * C273 + C32991 * C287 + C858 * C1041 + C32979 * C1051 +
             C859 * C1044 + C32956 * C1052) *
                C20880 +
            (C857 * C1167 + C32991 * C1179 + C858 * C1719 + C32979 * C1722 +
             C859 * C6476 + C32956 * C6480) *
                C20883 +
            (C857 * C1178 + C32991 * C1194 + C858 * C1723 + C32979 * C1728 +
             C859 * C6479 + C32956 * C6485) *
                C32771) *
               C15873 +
           ((C857 * C258 + C32991 * C274 + C858 * C1032 + C32979 * C1040 +
             C859 * C1035 + C32956 * C1045) *
                C20882 +
            (C857 * C275 + C32991 * C288 + C858 * C1039 + C32979 * C1050 +
             C859 * C1046 + C32956 * C1053) *
                C20880 +
            (C857 * C1166 + C32991 * C1177 + C858 * C1720 + C32979 * C1724 +
             C859 * C6656 + C32956 * C6657) *
                C20883 +
            (C857 * C1176 + C32991 * C1193 + C858 * C1725 + C32979 * C1729 +
             C859 * C6658 + C32956 * C6659) *
                C32771) *
               C32595) *
              C32644 * C250) *
         C32618) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C32667 * C122) * C22664 +
            (C113 * C123 + C32667 * C136) * C32999 + C2153 * C22665 +
            C2154 * C32996 + C2155 * C22666 + C2156 * C32987 + C2162 * C22667 +
            C2161 * C32972) *
               C15873 +
           (C22669 + C22670 + C22671 + C22672 + C22673 + C22674 + C22675 +
            C22676) *
               C32595) *
              C32644 * C32630 * C110 -
          ((C22677 + C22678 + C22679 + C22680 + C22681 + C22682 + C22683 +
            C22684) *
               C32595 +
           (C22676 + C22675 + C22674 + C22673 + C22672 + C22671 + C22670 +
            C22669) *
               C15873) *
              C32644 * C32630 * C111 +
          ((C22684 + C22683 + C22682 + C22681 + C22680 + C22679 + C22678 +
            C22677) *
               C15873 +
           (C168 * C22664 + C169 * C32999 + C627 * C22665 + C626 * C32996 +
            C1878 * C22666 + C1877 * C32987 +
            (C113 * C2494 + C32667 * C2495) * C22667 +
            (C113 * C2496 + C32667 * C2497) * C32972) *
               C32595) *
              C32644 * C32630 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C32667 * C122) * C22664 +
            (C113 * C123 + C32667 * C136) * C32999 + C2153 * C22665 +
            C2154 * C32996 + C2155 * C22666 + C2156 * C32987 + C2162 * C22667 +
            C2161 * C32972) *
               C15873 +
           (C22669 + C22670 + C22671 + C22672 + C22673 + C22674 + C22675 +
            C22676) *
               C32595) *
              C32644 * C248 -
          ((C13968 * C32972 + C13969 * C22667 + C2337 * C32987 +
            C2338 * C22666 + C2339 * C32996 + C2340 * C22665 + C510 * C32999 +
            C511 * C22664) *
               C32595 +
           (C12433 * C32972 + C12432 * C22667 + C2680 * C32987 +
            C2679 * C22666 + C2678 * C32996 + C2677 * C22665 +
            (C113 * C270 + C32667 * C286) * C32999 +
            (C113 * C256 + C32667 * C271) * C22664) *
               C15873) *
              C32644 * C249 +
          (((C113 * C257 + C32667 * C272) * C22664 +
            (C113 * C273 + C32667 * C287) * C32999 +
            (C113 * C1167 + C32667 * C1179) * C22665 +
            (C113 * C1178 + C32667 * C1194) * C32996 +
            (C113 * C1169 + C32667 * C1181) * C22666 +
            (C113 * C1183 + C32667 * C1196) * C32987 +
            (C113 * C7076 + C32667 * C7080) * C22667 +
            (C113 * C7079 + C32667 * C7085) * C32972) *
               C15873 +
           ((C113 * C258 + C32667 * C274) * C22664 +
            (C113 * C275 + C32667 * C288) * C32999 +
            (C113 * C1166 + C32667 * C1177) * C22665 +
            (C113 * C1176 + C32667 * C1193) * C32996 +
            (C113 * C1171 + C32667 * C1185) * C22666 +
            (C113 * C1187 + C32667 * C1198) * C32987 +
            (C113 * C7442 + C32667 * C7443) * C22667 +
            (C113 * C7444 + C32667 * C7445) * C32972) *
               C32595) *
              C32644 * C250) *
         C32618) /
            (p * q * std::sqrt(p + q));
    d2ee[90] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C32667 * C122) * C31694 +
             (C113 * C123 + C32667 * C136) * C32767 + C2153 * C31686 +
             C2154 * C32774 + C2155 * C31700 + C2156 * C24425) *
                C32590 +
            (C24430 + C24431 + C24432 + C24433 + C24434 + C24435) * C32598 +
            C24452 * C17826) *
               C32644 * C479 -
           ((C24819 + C24820 + C24821 + C24822 + C24823 + C24824) * C17826 +
            (C24825 + C24826 + C24827 + C24828 + C24829 + C24830) * C32598 +
            (C2680 * C24425 + C2679 * C31700 + C2678 * C32774 + C2677 * C31686 +
             (C113 * C270 + C32667 * C286) * C32767 +
             (C113 * C256 + C32667 * C271) * C31694) *
                C32590) *
               C32644 * C480) *
              C481 +
          (((C24830 + C24829 + C24828 + C24827 + C24826 + C24825) * C32590 +
            (C24824 + C24823 + C24822 + C24821 + C24820 + C24819) * C32598 +
            (C507 * C31694 + C506 * C32767 + C3968 * C31686 + C3967 * C32774 +
             (C113 * C2308 + C32667 * C2309) * C31700 +
             (C113 * C2310 + C32667 * C2311) * C24425) *
                C17826) *
               C32644 * C480 -
           ((C24442 + C24443 + C24444 + C24445 + C24446 + C24447) * C17826 +
            (C24441 + C24440 + C24439 + C24438 + C24437 + C24436) * C32598 +
            (C24435 + C24434 + C24433 + C24432 + C24431 + C24430) * C32590) *
               C32644 * C479) *
              C482)) /
        (p * q * std::sqrt(p + q));
    d2ee[91] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C32667 * C122) * C31694 +
             (C113 * C123 + C32667 * C136) * C32767 + C2153 * C31686 +
             C2154 * C32774 + C2155 * C31700 + C2156 * C24425) *
                C32590 +
            (C24430 + C24431 + C24432 + C24433 + C24434 + C24435) * C32598 +
            C24452 * C17826) *
               C601 -
           ((C24977 + C24978 + C24979 + C24980 + C24981 + C24982) * C17826 +
            (C24983 + C24984 + C24985 + C24986 + C24987 + C24988) * C32598 +
            (C2161 * C24425 + C2162 * C31700 + C2156 * C32774 + C2155 * C31686 +
             C2154 * C32767 + C2153 * C31694) *
                C32590) *
               C602) *
              C479 +
          (((C2677 * C31694 + C2678 * C32767 + C2679 * C31686 + C2680 * C32774 +
             C12432 * C31700 + C12433 * C24425) *
                C32590 +
            (C2340 * C31694 + C2339 * C32767 + C2338 * C31686 + C2337 * C32774 +
             C13969 * C31700 + C13968 * C24425) *
                C32598 +
            (C2336 * C31694 + C2335 * C32767 + C2334 * C31686 + C2333 * C32774 +
             (C113 * C2658 + C32667 * C2663) * C31700 +
             (C113 * C2664 + C32667 * C2667) * C24425) *
                C17826) *
               C602 -
           ((C24819 + C24820 + C24821 + C24822 + C24823 + C24824) * C17826 +
            (C24825 + C24826 + C24827 + C24828 + C24829 + C24830) * C32598 +
            (C2680 * C24425 + C2679 * C31700 + C2678 * C32774 + C2677 * C31686 +
             (C113 * C270 + C32667 * C286) * C32767 +
             (C113 * C256 + C32667 * C271) * C31694) *
                C32590) *
               C601) *
              C480) *
         C32618) /
        (p * q * std::sqrt(p + q));
    d2ee[92] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C32667 * C122) * C31694 +
            (C113 * C123 + C32667 * C136) * C32767 + C2153 * C31686 +
            C2154 * C32774 + C2155 * C31700 + C2156 * C24425) *
               C32590 +
           (C24430 + C24431 + C24432 + C24433 + C24434 + C24435) * C32598 +
           C24452 * C17826) *
              C32644 * C248 -
          ((C2333 * C24425 + C2334 * C31700 + C2335 * C32774 + C2336 * C31686 +
            C508 * C32767 + C509 * C31694) *
               C17826 +
           (C2337 * C24425 + C2338 * C31700 + C2339 * C32774 + C2340 * C31686 +
            C510 * C32767 + C511 * C31694) *
               C32598 +
           (C2680 * C24425 + C2679 * C31700 + C2678 * C32774 + C2677 * C31686 +
            (C113 * C270 + C32667 * C286) * C32767 +
            (C113 * C256 + C32667 * C271) * C31694) *
               C32590) *
              C32644 * C249 +
          (((C113 * C257 + C32667 * C272) * C31694 +
            (C113 * C273 + C32667 * C287) * C32767 +
            (C113 * C1167 + C32667 * C1179) * C31686 +
            (C113 * C1178 + C32667 * C1194) * C32774 +
            (C113 * C1169 + C32667 * C1181) * C31700 +
            (C113 * C1183 + C32667 * C1196) * C24425) *
               C32590 +
           ((C113 * C258 + C32667 * C274) * C31694 +
            (C113 * C275 + C32667 * C288) * C32767 +
            (C113 * C1166 + C32667 * C1177) * C31686 +
            (C113 * C1176 + C32667 * C1193) * C32774 +
            (C113 * C1171 + C32667 * C1185) * C31700 +
            (C113 * C1187 + C32667 * C1198) * C24425) *
               C32598 +
           ((C113 * C259 + C32667 * C276) * C31694 +
            (C113 * C277 + C32667 * C289) * C32767 +
            (C113 * C1165 + C32667 * C1175) * C31686 +
            (C113 * C1174 + C32667 * C1192) * C32774 +
            (C113 * C1173 + C32667 * C1189) * C31700 +
            (C113 * C1191 + C32667 * C1200) * C24425) *
               C17826) *
              C32644 * C250) *
         C32618) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C32667 * C122) * C31694 +
            (C113 * C123 + C32667 * C136) * C32767 + C2153 * C31686 +
            C2154 * C32774 + C2155 * C31700 + C2156 * C24425) *
               C32590 +
           (C24430 + C24431 + C24432 + C24433 + C24434 + C24435) * C32598 +
           C24452 * C17826) *
              C32644 * C32630 * C110 -
          ((C24442 + C24443 + C24444 + C24445 + C24446 + C24447) * C17826 +
           (C24441 + C24440 + C24439 + C24438 + C24437 + C24436) * C32598 +
           (C24435 + C24434 + C24433 + C24432 + C24431 + C24430) * C32590) *
              C32644 * C32630 * C111 +
          (C24452 * C32590 +
           (C24447 + C24446 + C24445 + C24444 + C24443 + C24442) * C32598 +
           (C170 * C31694 + C171 * C32767 + C625 * C31686 + C624 * C32774 +
            (C113 * C366 + C32667 * C385) * C31700 +
            (C113 * C386 + C32667 * C396) * C24425) *
               C17826) *
              C32644 * C32630 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C32667 * C122) * C31694 +
            (C113 * C123 + C32667 * C136) * C32767 + C2153 * C31686 +
            C2154 * C32774 + C2155 * C31700 + C2156 * C24425) *
               C32590 +
           (C24430 + C24431 + C24432 + C24433 + C24434 + C24435) * C32598 +
           C24452 * C17826) *
              C354 -
          ((C2157 * C24425 + C2158 * C31700 + C1876 * C32774 + C1875 * C31686 +
            C628 * C32767 + C629 * C31694) *
               C17826 +
           (C2159 * C24425 + C2160 * C31700 + C1873 * C32774 + C1872 * C31686 +
            C630 * C32767 + C631 * C31694) *
               C32598 +
           (C2161 * C24425 + C2162 * C31700 + C2156 * C32774 + C2155 * C31686 +
            C2154 * C32767 + C2153 * C31694) *
               C32590) *
              C355 +
          ((C2155 * C31694 + C2156 * C32767 + C2162 * C31686 + C2161 * C32774 +
            C12156 * C31700 + C12157 * C24425) *
               C32590 +
           (C1872 * C31694 + C1873 * C32767 + C2160 * C31686 + C2159 * C32774 +
            C12336 * C31700 + C12337 * C24425) *
               C32598 +
           (C1875 * C31694 + C1876 * C32767 + C2158 * C31686 + C2157 * C32774 +
            (C113 * C2113 + C32667 * C2124) * C31700 +
            (C113 * C2125 + C32667 * C2131) * C24425) *
               C17826) *
              C356) *
         C32630 * C32618) /
            (p * q * std::sqrt(p + q));
    d2ee[93] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C32667 * C122) * C31694 +
             (C113 * C123 + C32667 * C136) * C32767 + C2153 * C31686 +
             C2154 * C32774 + C2155 * C31700 + C2156 * C24425) *
                C32590 +
            (C24430 + C24431 + C24432 + C24433 + C24434 + C24435) * C32598 +
            C24452 * C17826) *
               C601 -
           ((C24977 + C24978 + C24979 + C24980 + C24981 + C24982) * C17826 +
            (C24983 + C24984 + C24985 + C24986 + C24987 + C24988) * C32598 +
            (C2161 * C24425 + C2162 * C31700 + C2156 * C32774 + C2155 * C31686 +
             C2154 * C32767 + C2153 * C31694) *
                C32590) *
               C602) *
              C32630 * C481 +
          (((C24988 + C24987 + C24986 + C24985 + C24984 + C24983) * C32590 +
            (C24982 + C24981 + C24980 + C24979 + C24978 + C24977) * C32598 +
            (C627 * C31694 + C626 * C32767 + C1878 * C31686 + C1877 * C32774 +
             (C113 * C2494 + C32667 * C2495) * C31700 +
             (C113 * C2496 + C32667 * C2497) * C24425) *
                C17826) *
               C602 -
           ((C24442 + C24443 + C24444 + C24445 + C24446 + C24447) * C17826 +
            (C24441 + C24440 + C24439 + C24438 + C24437 + C24436) * C32598 +
            (C24435 + C24434 + C24433 + C24432 + C24431 + C24430) * C32590) *
               C601) *
              C32630 * C482)) /
        (p * q * std::sqrt(p + q));
    d2ee[94] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C32667 * C122) * C31694 +
            (C113 * C123 + C32667 * C136) * C32767 + C2153 * C31686 +
            C2154 * C32774 + C2155 * C31700 + C2156 * C24425) *
               C32590 +
           (C24430 + C24431 + C24432 + C24433 + C24434 + C24435) * C32598 +
           C24452 * C17826) *
              C32644 * C32630 * C110 -
          ((C24442 + C24443 + C24444 + C24445 + C24446 + C24447) * C17826 +
           (C24441 + C24440 + C24439 + C24438 + C24437 + C24436) * C32598 +
           (C24435 + C24434 + C24433 + C24432 + C24431 + C24430) * C32590) *
              C32644 * C32630 * C111 +
          (C24452 * C32590 +
           (C24447 + C24446 + C24445 + C24444 + C24443 + C24442) * C32598 +
           (C170 * C31694 + C171 * C32767 + C625 * C31686 + C624 * C32774 +
            (C113 * C366 + C32667 * C385) * C31700 +
            (C113 * C386 + C32667 * C396) * C24425) *
               C17826) *
              C32644 * C32630 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C32667 * C122) * C31694 +
            (C113 * C123 + C32667 * C136) * C32767 + C2153 * C31686 +
            C2154 * C32774 + C2155 * C31700 + C2156 * C24425) *
               C32590 +
           (C24430 + C24431 + C24432 + C24433 + C24434 + C24435) * C32598 +
           C24452 * C17826) *
              C32644 * C248 -
          ((C2333 * C24425 + C2334 * C31700 + C2335 * C32774 + C2336 * C31686 +
            C508 * C32767 + C509 * C31694) *
               C17826 +
           (C2337 * C24425 + C2338 * C31700 + C2339 * C32774 + C2340 * C31686 +
            C510 * C32767 + C511 * C31694) *
               C32598 +
           (C2680 * C24425 + C2679 * C31700 + C2678 * C32774 + C2677 * C31686 +
            (C113 * C270 + C32667 * C286) * C32767 +
            (C113 * C256 + C32667 * C271) * C31694) *
               C32590) *
              C32644 * C249 +
          (((C113 * C257 + C32667 * C272) * C31694 +
            (C113 * C273 + C32667 * C287) * C32767 +
            (C113 * C1167 + C32667 * C1179) * C31686 +
            (C113 * C1178 + C32667 * C1194) * C32774 +
            (C113 * C1169 + C32667 * C1181) * C31700 +
            (C113 * C1183 + C32667 * C1196) * C24425) *
               C32590 +
           ((C113 * C258 + C32667 * C274) * C31694 +
            (C113 * C275 + C32667 * C288) * C32767 +
            (C113 * C1166 + C32667 * C1177) * C31686 +
            (C113 * C1176 + C32667 * C1193) * C32774 +
            (C113 * C1171 + C32667 * C1185) * C31700 +
            (C113 * C1187 + C32667 * C1198) * C24425) *
               C32598 +
           ((C113 * C259 + C32667 * C276) * C31694 +
            (C113 * C277 + C32667 * C289) * C32767 +
            (C113 * C1165 + C32667 * C1175) * C31686 +
            (C113 * C1174 + C32667 * C1192) * C32774 +
            (C113 * C1173 + C32667 * C1189) * C31700 +
            (C113 * C1191 + C32667 * C1200) * C24425) *
               C17826) *
              C32644 * C250) *
         C32618) /
            (p * q * std::sqrt(p + q));
    d2ee[95] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C32667 * C122) * C20882 +
             (C113 * C123 + C32667 * C136) * C20880 + C2153 * C20883 +
             C2154 * C32771) *
                C32997 +
            (C20885 + C20886 + C20887 + C20888) * C32990 + C20905 * C32977 +
            C20906 * C32960) *
               C32644 * C479 -
           ((C21233 + C21234 + C21235 + C21236) * C32960 +
            (C21237 + C21238 + C21239 + C21240) * C32977 +
            (C21241 + C21242 + C21243 + C21244) * C32990 +
            (C2678 * C32771 + C2677 * C20883 +
             (C113 * C270 + C32667 * C286) * C20880 +
             (C113 * C256 + C32667 * C271) * C20882) *
                C32997) *
               C32644 * C480) *
              C481 +
          (((C21244 + C21243 + C21242 + C21241) * C32997 +
            (C21240 + C21239 + C21238 + C21237) * C32990 +
            (C21236 + C21235 + C21234 + C21233) * C32977 +
            (C505 * C20882 + C504 * C20880 +
             (C113 * C725 + C32667 * C734) * C20883 +
             (C113 * C735 + C32667 * C740) * C32771) *
                C32960) *
               C32644 * C480 -
           ((C20897 + C20898 + C20899 + C20900) * C32960 +
            (C20896 + C20895 + C20894 + C20893) * C32977 +
            (C20892 + C20891 + C20890 + C20889) * C32990 +
            (C20888 + C20887 + C20886 + C20885) * C32997) *
               C32644 * C479) *
              C482)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C857 * C115 + C32991 * C122 + C858 * C256 + C32979 * C271 +
              C859 * C257 + C32956 * C272) *
                 C20882 +
             (C857 * C123 + C32991 * C136 + C858 * C270 + C32979 * C286 +
              C859 * C273 + C32956 * C287) *
                 C20880 +
             (C11430 + C11431 + C11432) * C20883 +
             (C11433 + C11434 + C11435) * C32771) *
                C15873 +
            ((C897 + C898 + C899) * C20882 + (C900 + C901 + C902) * C20880 +
             (C1573 + C1572 + C1571) * C20883 +
             (C1570 + C1569 + C1568) * C32771) *
                C32595) *
               C32644 * C479 -
           (((C22161 + C22162 + C22163) * C32771 +
             (C22164 + C22165 + C22166) * C20883 +
             (C1382 + C1383 + C1384) * C20880 +
             (C1385 + C1386 + C1387) * C20882) *
                C32595 +
            ((C11937 + C11936 + C11935) * C32771 +
             (C11934 + C11933 + C11932) * C20883 +
             (C859 * C1041 + C32956 * C1051 + C858 * C273 + C32979 * C287 +
              C857 * C270 + C32991 * C286) *
                 C20880 +
             (C859 * C1033 + C32956 * C1042 + C858 * C257 + C32979 * C272 +
              C857 * C256 + C32991 * C271) *
                 C20882) *
                C15873) *
               C32644 * C480) *
              C481 +
          ((((C1387 + C1386 + C1385) * C20882 +
             (C1384 + C1383 + C1382) * C20880 +
             (C22166 + C22165 + C22164) * C20883 +
             (C22163 + C22162 + C22161) * C32771) *
                C15873 +
            ((C1381 + C1380 + C1379) * C20882 +
             (C1378 + C1377 + C1376) * C20880 +
             (C857 * C723 + C32991 * C730 + C858 * C1165 + C32979 * C1175 +
              C859 * C1721 + C32956 * C1726) *
                 C20883 +
             (C857 * C731 + C32991 * C738 + C858 * C1174 + C32979 * C1192 +
              C859 * C1727 + C32956 * C1730) *
                 C32771) *
                C32595) *
               C32644 * C480 -
           (((C1562 + C1563 + C1564) * C32771 +
             (C1565 + C1566 + C1567) * C20883 + (C908 + C907 + C906) * C20880 +
             (C905 + C904 + C903) * C20882) *
                C32595 +
            ((C1568 + C1569 + C1570) * C32771 +
             (C1571 + C1572 + C1573) * C20883 + (C902 + C901 + C900) * C20880 +
             (C899 + C898 + C897) * C20882) *
                C15873) *
               C32644 * C479) *
              C482)) /
            (p * q * std::sqrt(p + q));
    d2ee[96] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C32667 * C122) * C20882 +
             (C113 * C123 + C32667 * C136) * C20880 + C2153 * C20883 +
             C2154 * C32771) *
                C32997 +
            (C20885 + C20886 + C20887 + C20888) * C32990 + C20905 * C32977 +
            C20906 * C32960) *
               C601 -
           ((C21375 + C21376 + C21377 + C21378) * C32960 +
            (C21379 + C21380 + C21381 + C21382) * C32977 +
            (C21383 + C21384 + C21385 + C21386) * C32990 +
            (C2156 * C32771 + C2155 * C20883 + C2154 * C20880 +
             C2153 * C20882) *
                C32997) *
               C602) *
              C479 +
          (((C2677 * C20882 + C2678 * C20880 + C2679 * C20883 +
             C2680 * C32771) *
                C32997 +
            (C2340 * C20882 + C2339 * C20880 + C2338 * C20883 +
             C2337 * C32771) *
                C32990 +
            (C2336 * C20882 + C2335 * C20880 + C2334 * C20883 +
             C2333 * C32771) *
                C32977 +
            (C3968 * C20882 + C3967 * C20880 +
             (C113 * C2308 + C32667 * C2309) * C20883 +
             (C113 * C2310 + C32667 * C2311) * C32771) *
                C32960) *
               C602 -
           ((C21233 + C21234 + C21235 + C21236) * C32960 +
            (C21237 + C21238 + C21239 + C21240) * C32977 +
            (C21241 + C21242 + C21243 + C21244) * C32990 +
            (C2678 * C32771 + C2677 * C20883 +
             (C113 * C270 + C32667 * C286) * C20880 +
             (C113 * C256 + C32667 * C271) * C20882) *
                C32997) *
               C601) *
              C480) *
         C32618) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C857 * C115 + C32991 * C122 + C858 * C256 + C32979 * C271 +
              C859 * C257 + C32956 * C272) *
                 C20882 +
             (C857 * C123 + C32991 * C136 + C858 * C270 + C32979 * C286 +
              C859 * C273 + C32956 * C287) *
                 C20880 +
             (C11430 + C11431 + C11432) * C20883 +
             (C11433 + C11434 + C11435) * C32771) *
                C15873 +
            ((C897 + C898 + C899) * C20882 + (C900 + C901 + C902) * C20880 +
             C22365 * C20883 + C22366 * C32771) *
                C32595) *
               C601 -
           (((C11761 + C11760 + C11759) * C32771 +
             (C11758 + C11757 + C11756) * C20883 + C22367 * C20880 +
             C22368 * C20882) *
                C32595 +
            ((C11441 + C11440 + C11439) * C32771 +
             (C11438 + C11437 + C11436) * C20883 +
             (C11435 + C11434 + C11433) * C20880 +
             (C11432 + C11431 + C11430) * C20882) *
                C15873) *
               C602) *
              C479 +
          ((((C11932 + C11933 + C11934) * C20882 +
             (C11935 + C11936 + C11937) * C20880 +
             (C11938 + C11939 + C11940) * C20883 +
             (C11941 + C11942 + C11943) * C32771) *
                C15873 +
            ((C22166 + C22165 + C22164) * C20882 +
             (C22163 + C22162 + C22161) * C20880 +
             (C857 * C1170 + C32991 * C1184 + C858 * C1171 + C32979 * C1185 +
              C859 * C7292 + C32956 * C7293) *
                 C20883 +
             (C857 * C1186 + C32991 * C1197 + C858 * C1187 + C32979 * C1198 +
              C859 * C7294 + C32956 * C7295) *
                 C32771) *
                C32595) *
               C602 -
           (((C22161 + C22162 + C22163) * C32771 +
             (C22164 + C22165 + C22166) * C20883 +
             (C1382 + C1383 + C1384) * C20880 +
             (C1385 + C1386 + C1387) * C20882) *
                C32595 +
            ((C11937 + C11936 + C11935) * C32771 +
             (C11934 + C11933 + C11932) * C20883 +
             (C859 * C1041 + C32956 * C1051 + C858 * C273 + C32979 * C287 +
              C857 * C270 + C32991 * C286) *
                 C20880 +
             (C859 * C1033 + C32956 * C1042 + C858 * C257 + C32979 * C272 +
              C857 * C256 + C32991 * C271) *
                 C20882) *
                C15873) *
               C601) *
              C480) *
         C32618) /
            (p * q * std::sqrt(p + q));
    d2ee[97] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C32667 * C122) * C20882 +
            (C113 * C123 + C32667 * C136) * C20880 + C2153 * C20883 +
            C2154 * C32771) *
               C32997 +
           (C20885 + C20886 + C20887 + C20888) * C32990 + C20905 * C32977 +
           C20906 * C32960) *
              C32644 * C248 -
          ((C3967 * C32771 + C3968 * C20883 + C506 * C20880 + C507 * C20882) *
               C32960 +
           (C2335 * C32771 + C2336 * C20883 + C508 * C20880 + C509 * C20882) *
               C32977 +
           (C2339 * C32771 + C2340 * C20883 + C510 * C20880 + C511 * C20882) *
               C32990 +
           (C2678 * C32771 + C2677 * C20883 +
            (C113 * C270 + C32667 * C286) * C20880 +
            (C113 * C256 + C32667 * C271) * C20882) *
               C32997) *
              C32644 * C249 +
          (((C113 * C257 + C32667 * C272) * C20882 +
            (C113 * C273 + C32667 * C287) * C20880 +
            (C113 * C1167 + C32667 * C1179) * C20883 +
            (C113 * C1178 + C32667 * C1194) * C32771) *
               C32997 +
           ((C113 * C258 + C32667 * C274) * C20882 +
            (C113 * C275 + C32667 * C288) * C20880 +
            (C113 * C1166 + C32667 * C1177) * C20883 +
            (C113 * C1176 + C32667 * C1193) * C32771) *
               C32990 +
           ((C113 * C259 + C32667 * C276) * C20882 +
            (C113 * C277 + C32667 * C289) * C20880 +
            (C113 * C1165 + C32667 * C1175) * C20883 +
            (C113 * C1174 + C32667 * C1192) * C32771) *
               C32977 +
           ((C113 * C260 + C32667 * C278) * C20882 +
            (C113 * C279 + C32667 * C290) * C20880 +
            (C113 * C1533 + C32667 * C1534) * C20883 +
            (C113 * C1535 + C32667 * C1536) * C32771) *
               C32960) *
              C32644 * C250) *
         C32618) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C32667 * C122) * C20882 +
            (C113 * C123 + C32667 * C136) * C20880 + C2153 * C20883 +
            C2154 * C32771) *
               C32997 +
           (C20885 + C20886 + C20887 + C20888) * C32990 + C20905 * C32977 +
           C20906 * C32960) *
              C32644 * C32630 * C110 -
          ((C20897 + C20898 + C20899 + C20900) * C32960 +
           (C20896 + C20895 + C20894 + C20893) * C32977 +
           (C20892 + C20891 + C20890 + C20889) * C32990 +
           (C20888 + C20887 + C20886 + C20885) * C32997) *
              C32644 * C32630 * C111 +
          (C20905 * C32997 + C20906 * C32990 +
           (C20900 + C20899 + C20898 + C20897) * C32977 +
           (C173 * C20882 + C172 * C20880 +
            (C113 * C603 + C32667 * C604) * C20883 +
            (C113 * C605 + C32667 * C606) * C32771) *
               C32960) *
              C32644 * C32630 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C32667 * C122) * C20882 +
            (C113 * C123 + C32667 * C136) * C20880 + C2153 * C20883 +
            C2154 * C32771) *
               C32997 +
           (C20885 + C20886 + C20887 + C20888) * C32990 + C20905 * C32977 +
           C20906 * C32960) *
              C354 -
          ((C1877 * C32771 + C1878 * C20883 + C626 * C20880 + C627 * C20882) *
               C32960 +
           (C1876 * C32771 + C1875 * C20883 + C628 * C20880 + C629 * C20882) *
               C32977 +
           (C1873 * C32771 + C1872 * C20883 + C630 * C20880 + C631 * C20882) *
               C32990 +
           (C2156 * C32771 + C2155 * C20883 + C2154 * C20880 + C2153 * C20882) *
               C32997) *
              C355 +
          ((C2155 * C20882 + C2156 * C20880 + C2162 * C20883 + C2161 * C32771) *
               C32997 +
           (C1872 * C20882 + C1873 * C20880 + C2160 * C20883 + C2159 * C32771) *
               C32990 +
           (C1875 * C20882 + C1876 * C20880 + C2158 * C20883 + C2157 * C32771) *
               C32977 +
           (C1878 * C20882 + C1877 * C20880 +
            (C113 * C2494 + C32667 * C2495) * C20883 +
            (C113 * C2496 + C32667 * C2497) * C32771) *
               C32960) *
              C356) *
         C32630 * C32618) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C857 * C115 + C32991 * C122 + C858 * C256 + C32979 * C271 +
             C859 * C257 + C32956 * C272) *
                C20882 +
            (C857 * C123 + C32991 * C136 + C858 * C270 + C32979 * C286 +
             C859 * C273 + C32956 * C287) *
                C20880 +
            (C11430 + C11431 + C11432) * C20883 +
            (C11433 + C11434 + C11435) * C32771) *
               C15873 +
           ((C897 + C898 + C899) * C20882 + (C900 + C901 + C902) * C20880 +
            (C1573 + C1572 + C1571) * C20883 +
            (C1570 + C1569 + C1568) * C32771) *
               C32595) *
              C32644 * C32630 * C110 -
          (((C1562 + C1563 + C1564) * C32771 +
            (C1565 + C1566 + C1567) * C20883 + (C908 + C907 + C906) * C20880 +
            (C905 + C904 + C903) * C20882) *
               C32595 +
           ((C1568 + C1569 + C1570) * C32771 +
            (C1571 + C1572 + C1573) * C20883 + (C902 + C901 + C900) * C20880 +
            (C899 + C898 + C897) * C20882) *
               C15873) *
              C32644 * C32630 * C111 +
          ((C917 * C20882 + C918 * C20880 + (C1567 + C1566 + C1565) * C20883 +
            (C1564 + C1563 + C1562) * C32771) *
               C15873 +
           ((C914 + C913 + C912) * C20882 + (C911 + C910 + C909) * C20880 +
            (C857 * C358 + C32991 * C370 + C858 * C724 + C32979 * C732 +
             C859 * C1533 + C32956 * C1534) *
                C20883 +
            (C857 * C369 + C32991 * C388 + C858 * C733 + C32979 * C739 +
             C859 * C1535 + C32956 * C1536) *
                C32771) *
               C32595) *
              C32644 * C32630 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C857 * C115 + C32991 * C122 + C858 * C256 + C32979 * C271 +
             C859 * C257 + C32956 * C272) *
                C20882 +
            (C857 * C123 + C32991 * C136 + C858 * C270 + C32979 * C286 +
             C859 * C273 + C32956 * C287) *
                C20880 +
            (C11430 + C11431 + C11432) * C20883 +
            (C11433 + C11434 + C11435) * C32771) *
               C15873 +
           ((C897 + C898 + C899) * C20882 + (C900 + C901 + C902) * C20880 +
            (C1573 + C1572 + C1571) * C20883 +
            (C1570 + C1569 + C1568) * C32771) *
               C32595) *
              C32644 * C248 -
          (((C859 * C1725 + C32956 * C1729 + C858 * C1176 + C32979 * C1193 +
             C857 * C729 + C32991 * C737) *
                C32771 +
            (C859 * C1720 + C32956 * C1724 + C858 * C1166 + C32979 * C1177 +
             C857 * C722 + C32991 * C728) *
                C20883 +
            (C1382 + C1383 + C1384) * C20880 +
            (C1385 + C1386 + C1387) * C20882) *
               C32595 +
           ((C11937 + C11936 + C11935) * C32771 +
            (C11934 + C11933 + C11932) * C20883 +
            (C859 * C1041 + C32956 * C1051 + C858 * C273 + C32979 * C287 +
             C857 * C270 + C32991 * C286) *
                C20880 +
            (C859 * C1033 + C32956 * C1042 + C858 * C257 + C32979 * C272 +
             C857 * C256 + C32991 * C271) *
                C20882) *
               C15873) *
              C32644 * C249 +
          (((C857 * C257 + C32991 * C272 + C858 * C1033 + C32979 * C1042 +
             C859 * C1034 + C32956 * C1043) *
                C20882 +
            (C857 * C273 + C32991 * C287 + C858 * C1041 + C32979 * C1051 +
             C859 * C1044 + C32956 * C1052) *
                C20880 +
            (C857 * C1167 + C32991 * C1179 + C858 * C1719 + C32979 * C1722 +
             C859 * C6476 + C32956 * C6480) *
                C20883 +
            (C857 * C1178 + C32991 * C1194 + C858 * C1723 + C32979 * C1728 +
             C859 * C6479 + C32956 * C6485) *
                C32771) *
               C15873 +
           ((C857 * C258 + C32991 * C274 + C858 * C1032 + C32979 * C1040 +
             C859 * C1035 + C32956 * C1045) *
                C20882 +
            (C857 * C275 + C32991 * C288 + C858 * C1039 + C32979 * C1050 +
             C859 * C1046 + C32956 * C1053) *
                C20880 +
            (C857 * C1166 + C32991 * C1177 + C858 * C1720 + C32979 * C1724 +
             C859 * C6656 + C32956 * C6657) *
                C20883 +
            (C857 * C1176 + C32991 * C1193 + C858 * C1725 + C32979 * C1729 +
             C859 * C6658 + C32956 * C6659) *
                C32771) *
               C32595) *
              C32644 * C250) *
         C32618) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C857 * C115 + C32991 * C122 + C858 * C256 + C32979 * C271 +
             C859 * C257 + C32956 * C272) *
                C20882 +
            (C857 * C123 + C32991 * C136 + C858 * C270 + C32979 * C286 +
             C859 * C273 + C32956 * C287) *
                C20880 +
            (C11430 + C11431 + C11432) * C20883 +
            (C11433 + C11434 + C11435) * C32771) *
               C15873 +
           ((C897 + C898 + C899) * C20882 + (C900 + C901 + C902) * C20880 +
            (C1573 + C1572 + C1571) * C20883 +
            (C1570 + C1569 + C1568) * C32771) *
               C32595) *
              C354 -
          (((C11761 + C11760 + C11759) * C32771 +
            (C11758 + C11757 + C11756) * C20883 +
            (C1568 + C1569 + C1570) * C20880 +
            (C1571 + C1572 + C1573) * C20882) *
               C32595 +
           ((C11441 + C11440 + C11439) * C32771 +
            (C11438 + C11437 + C11436) * C20883 +
            (C11435 + C11434 + C11433) * C20880 +
            (C11432 + C11431 + C11430) * C20882) *
               C15873) *
              C355 +
          ((C11450 * C20882 + C11451 * C20880 +
            (C11447 + C11446 + C11445) * C20883 +
            (C11444 + C11443 + C11442) * C32771) *
               C15873 +
           ((C11756 + C11757 + C11758) * C20882 +
            (C11759 + C11760 + C11761) * C20880 +
            (C857 * C2109 + C32991 * C2117 + C858 * C2657 + C32979 * C2661 +
             C859 * C7442 + C32956 * C7443) *
                C20883 +
            (C857 * C2116 + C32991 * C2127 + C858 * C2662 + C32979 * C2666 +
             C859 * C7444 + C32956 * C7445) *
                C32771) *
               C32595) *
              C356) *
         C32630 * C32618) /
            (p * q * std::sqrt(p + q));
    d2ee[98] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C32667 * C122) * C20882 +
             (C113 * C123 + C32667 * C136) * C20880 + C2153 * C20883 +
             C2154 * C32771) *
                C32997 +
            (C20885 + C20886 + C20887 + C20888) * C32990 + C20905 * C32977 +
            C20906 * C32960) *
               C601 -
           ((C21375 + C21376 + C21377 + C21378) * C32960 +
            (C21379 + C21380 + C21381 + C21382) * C32977 +
            (C21383 + C21384 + C21385 + C21386) * C32990 +
            (C2156 * C32771 + C2155 * C20883 + C2154 * C20880 +
             C2153 * C20882) *
                C32997) *
               C602) *
              C32630 * C481 +
          (((C21386 + C21385 + C21384 + C21383) * C32997 +
            (C21382 + C21381 + C21380 + C21379) * C32990 +
            (C21378 + C21377 + C21376 + C21375) * C32977 +
            (C625 * C20882 + C624 * C20880 +
             (C113 * C366 + C32667 * C385) * C20883 +
             (C113 * C386 + C32667 * C396) * C32771) *
                C32960) *
               C602 -
           ((C20897 + C20898 + C20899 + C20900) * C32960 +
            (C20896 + C20895 + C20894 + C20893) * C32977 +
            (C20892 + C20891 + C20890 + C20889) * C32990 +
            (C20888 + C20887 + C20886 + C20885) * C32997) *
               C601) *
              C32630 * C482)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C857 * C115 + C32991 * C122 + C858 * C256 + C32979 * C271 +
              C859 * C257 + C32956 * C272) *
                 C20882 +
             (C857 * C123 + C32991 * C136 + C858 * C270 + C32979 * C286 +
              C859 * C273 + C32956 * C287) *
                 C20880 +
             (C11430 + C11431 + C11432) * C20883 +
             (C11433 + C11434 + C11435) * C32771) *
                C15873 +
            ((C897 + C898 + C899) * C20882 + (C900 + C901 + C902) * C20880 +
             C22365 * C20883 + C22366 * C32771) *
                C32595) *
               C601 -
           (((C11761 + C11760 + C11759) * C32771 +
             (C11758 + C11757 + C11756) * C20883 + C22367 * C20880 +
             C22368 * C20882) *
                C32595 +
            ((C11441 + C11440 + C11439) * C32771 +
             (C11438 + C11437 + C11436) * C20883 +
             (C11435 + C11434 + C11433) * C20880 +
             (C11432 + C11431 + C11430) * C20882) *
                C15873) *
               C602) *
              C32630 * C481 +
          (((C22365 * C20882 + C22366 * C20880 +
             (C11756 + C11757 + C11758) * C20883 +
             (C11759 + C11760 + C11761) * C32771) *
                C15873 +
            ((C1567 + C1566 + C1565) * C20882 +
             (C1564 + C1563 + C1562) * C20880 +
             (C857 * C364 + C32991 * C381 + C858 * C1172 + C32979 * C1188 +
              C859 * C1173 + C32956 * C1189) *
                 C20883 +
             (C857 * C382 + C32991 * C394 + C858 * C1190 + C32979 * C1199 +
              C859 * C1191 + C32956 * C1200) *
                 C32771) *
                C32595) *
               C602 -
           (((C1562 + C1563 + C1564) * C32771 +
             (C1565 + C1566 + C1567) * C20883 + (C908 + C907 + C906) * C20880 +
             (C905 + C904 + C903) * C20882) *
                C32595 +
            (C22367 * C32771 + C22368 * C20883 + (C902 + C901 + C900) * C20880 +
             (C899 + C898 + C897) * C20882) *
                C15873) *
               C601) *
              C32630 * C482)) /
            (p * q * std::sqrt(p + q));
    d2ee[99] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C32667 * C122) * C20882 +
            (C113 * C123 + C32667 * C136) * C20880 + C2153 * C20883 +
            C2154 * C32771) *
               C32997 +
           (C20885 + C20886 + C20887 + C20888) * C32990 + C20905 * C32977 +
           C20906 * C32960) *
              C32644 * C32630 * C110 -
          ((C20897 + C20898 + C20899 + C20900) * C32960 +
           (C20896 + C20895 + C20894 + C20893) * C32977 +
           (C20892 + C20891 + C20890 + C20889) * C32990 +
           (C20888 + C20887 + C20886 + C20885) * C32997) *
              C32644 * C32630 * C111 +
          (C20905 * C32997 + C20906 * C32990 +
           (C20900 + C20899 + C20898 + C20897) * C32977 +
           (C173 * C20882 + C172 * C20880 +
            (C113 * C603 + C32667 * C604) * C20883 +
            (C113 * C605 + C32667 * C606) * C32771) *
               C32960) *
              C32644 * C32630 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C32667 * C122) * C20882 +
            (C113 * C123 + C32667 * C136) * C20880 + C2153 * C20883 +
            C2154 * C32771) *
               C32997 +
           (C20885 + C20886 + C20887 + C20888) * C32990 + C20905 * C32977 +
           C20906 * C32960) *
              C32644 * C248 -
          ((C3967 * C32771 + C3968 * C20883 + C506 * C20880 + C507 * C20882) *
               C32960 +
           (C2335 * C32771 + C2336 * C20883 + C508 * C20880 + C509 * C20882) *
               C32977 +
           (C2339 * C32771 + C2340 * C20883 + C510 * C20880 + C511 * C20882) *
               C32990 +
           (C2678 * C32771 + C2677 * C20883 +
            (C113 * C270 + C32667 * C286) * C20880 +
            (C113 * C256 + C32667 * C271) * C20882) *
               C32997) *
              C32644 * C249 +
          (((C113 * C257 + C32667 * C272) * C20882 +
            (C113 * C273 + C32667 * C287) * C20880 +
            (C113 * C1167 + C32667 * C1179) * C20883 +
            (C113 * C1178 + C32667 * C1194) * C32771) *
               C32997 +
           ((C113 * C258 + C32667 * C274) * C20882 +
            (C113 * C275 + C32667 * C288) * C20880 +
            (C113 * C1166 + C32667 * C1177) * C20883 +
            (C113 * C1176 + C32667 * C1193) * C32771) *
               C32990 +
           ((C113 * C259 + C32667 * C276) * C20882 +
            (C113 * C277 + C32667 * C289) * C20880 +
            (C113 * C1165 + C32667 * C1175) * C20883 +
            (C113 * C1174 + C32667 * C1192) * C32771) *
               C32977 +
           ((C113 * C260 + C32667 * C278) * C20882 +
            (C113 * C279 + C32667 * C290) * C20880 +
            (C113 * C1533 + C32667 * C1534) * C20883 +
            (C113 * C1535 + C32667 * C1536) * C32771) *
               C32960) *
              C32644 * C250) *
         C32618) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C857 * C115 + C32991 * C122 + C858 * C256 + C32979 * C271 +
             C859 * C257 + C32956 * C272) *
                C20882 +
            (C857 * C123 + C32991 * C136 + C858 * C270 + C32979 * C286 +
             C859 * C273 + C32956 * C287) *
                C20880 +
            (C11430 + C11431 + C11432) * C20883 +
            (C11433 + C11434 + C11435) * C32771) *
               C15873 +
           ((C897 + C898 + C899) * C20882 + (C900 + C901 + C902) * C20880 +
            (C1573 + C1572 + C1571) * C20883 +
            (C1570 + C1569 + C1568) * C32771) *
               C32595) *
              C32644 * C32630 * C110 -
          (((C1562 + C1563 + C1564) * C32771 +
            (C1565 + C1566 + C1567) * C20883 + (C908 + C907 + C906) * C20880 +
            (C905 + C904 + C903) * C20882) *
               C32595 +
           ((C1568 + C1569 + C1570) * C32771 +
            (C1571 + C1572 + C1573) * C20883 + (C902 + C901 + C900) * C20880 +
            (C899 + C898 + C897) * C20882) *
               C15873) *
              C32644 * C32630 * C111 +
          ((C917 * C20882 + C918 * C20880 + (C1567 + C1566 + C1565) * C20883 +
            (C1564 + C1563 + C1562) * C32771) *
               C15873 +
           ((C914 + C913 + C912) * C20882 + (C911 + C910 + C909) * C20880 +
            (C857 * C358 + C32991 * C370 + C858 * C724 + C32979 * C732 +
             C859 * C1533 + C32956 * C1534) *
                C20883 +
            (C857 * C369 + C32991 * C388 + C858 * C733 + C32979 * C739 +
             C859 * C1535 + C32956 * C1536) *
                C32771) *
               C32595) *
              C32644 * C32630 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C857 * C115 + C32991 * C122 + C858 * C256 + C32979 * C271 +
             C859 * C257 + C32956 * C272) *
                C20882 +
            (C857 * C123 + C32991 * C136 + C858 * C270 + C32979 * C286 +
             C859 * C273 + C32956 * C287) *
                C20880 +
            (C11430 + C11431 + C11432) * C20883 +
            (C11433 + C11434 + C11435) * C32771) *
               C15873 +
           ((C897 + C898 + C899) * C20882 + (C900 + C901 + C902) * C20880 +
            (C1573 + C1572 + C1571) * C20883 +
            (C1570 + C1569 + C1568) * C32771) *
               C32595) *
              C32644 * C248 -
          (((C859 * C1725 + C32956 * C1729 + C858 * C1176 + C32979 * C1193 +
             C857 * C729 + C32991 * C737) *
                C32771 +
            (C859 * C1720 + C32956 * C1724 + C858 * C1166 + C32979 * C1177 +
             C857 * C722 + C32991 * C728) *
                C20883 +
            (C1382 + C1383 + C1384) * C20880 +
            (C1385 + C1386 + C1387) * C20882) *
               C32595 +
           ((C11937 + C11936 + C11935) * C32771 +
            (C11934 + C11933 + C11932) * C20883 +
            (C859 * C1041 + C32956 * C1051 + C858 * C273 + C32979 * C287 +
             C857 * C270 + C32991 * C286) *
                C20880 +
            (C859 * C1033 + C32956 * C1042 + C858 * C257 + C32979 * C272 +
             C857 * C256 + C32991 * C271) *
                C20882) *
               C15873) *
              C32644 * C249 +
          (((C857 * C257 + C32991 * C272 + C858 * C1033 + C32979 * C1042 +
             C859 * C1034 + C32956 * C1043) *
                C20882 +
            (C857 * C273 + C32991 * C287 + C858 * C1041 + C32979 * C1051 +
             C859 * C1044 + C32956 * C1052) *
                C20880 +
            (C857 * C1167 + C32991 * C1179 + C858 * C1719 + C32979 * C1722 +
             C859 * C6476 + C32956 * C6480) *
                C20883 +
            (C857 * C1178 + C32991 * C1194 + C858 * C1723 + C32979 * C1728 +
             C859 * C6479 + C32956 * C6485) *
                C32771) *
               C15873 +
           ((C857 * C258 + C32991 * C274 + C858 * C1032 + C32979 * C1040 +
             C859 * C1035 + C32956 * C1045) *
                C20882 +
            (C857 * C275 + C32991 * C288 + C858 * C1039 + C32979 * C1050 +
             C859 * C1046 + C32956 * C1053) *
                C20880 +
            (C857 * C1166 + C32991 * C1177 + C858 * C1720 + C32979 * C1724 +
             C859 * C6656 + C32956 * C6657) *
                C20883 +
            (C857 * C1176 + C32991 * C1193 + C858 * C1725 + C32979 * C1729 +
             C859 * C6658 + C32956 * C6659) *
                C32771) *
               C32595) *
              C32644 * C250) *
         C32618) /
            (p * q * std::sqrt(p + q));
    d2ee[100] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2784 * C115 + C32925 * C122 + C2785 * C256 + C32729 * C271) *
                 C114 +
             (C2784 * C123 + C32925 * C136 + C2785 * C270 + C32729 * C286) *
                 C32684) *
                C2780 +
            ((C2819 + C2820) * C114 + (C2821 + C2822) * C32684) * C2781 +
            C2843 * C2782 + C2844 * C32960) *
               C32644 * C479 -
           (((C3195 + C3196) * C32684 + (C3197 + C3198) * C114) * C32960 +
            ((C3199 + C3200) * C32684 + (C3201 + C3202) * C114) * C2782 +
            ((C3203 + C3204) * C32684 + (C3205 + C3206) * C114) * C2781 +
            ((C2785 * C273 + C32729 * C287 + C2784 * C270 + C32925 * C286) *
                 C32684 +
             (C2785 * C257 + C32729 * C272 + C2784 * C256 + C32925 * C271) *
                 C114) *
                C2780) *
               C32644 * C480) *
              C481 +
          ((((C3206 + C3205) * C114 + (C3204 + C3203) * C32684) * C2780 +
            ((C3202 + C3201) * C114 + (C3200 + C3199) * C32684) * C2781 +
            ((C3198 + C3197) * C114 + (C3196 + C3195) * C32684) * C2782 +
            ((C2784 * C252 + C32925 * C263 + C2785 * C261 + C32729 * C280) *
                 C114 +
             (C2784 * C262 + C32925 * C282 + C2785 * C281 + C32729 * C291) *
                 C32684) *
                C32960) *
               C32644 * C480 -
           (((C2831 + C2832) * C32684 + (C2833 + C2834) * C114) * C32960 +
            ((C2830 + C2829) * C32684 + (C2828 + C2827) * C114) * C2782 +
            ((C2826 + C2825) * C32684 + (C2824 + C2823) * C114) * C2781 +
            ((C2822 + C2821) * C32684 + (C2820 + C2819) * C114) * C2780) *
               C32644 * C479) *
              C482)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C7754 * C115 + C7748 * C122 + C7755 * C256 + C7749 * C271 +
              C7756 * C257 + C7750 * C272 + C7757 * C1033 + C32966 * C1042) *
                 C114 +
             (C7754 * C123 + C7748 * C136 + C7755 * C270 + C7749 * C286 +
              C7756 * C273 + C7750 * C287 + C7757 * C1041 + C32966 * C1051) *
                 C32684) *
                C32906 +
            ((C7791 + C7792 + C7793 + C7794) * C114 +
             (C7795 + C7796 + C7797 + C7798) * C32684) *
                C32595) *
               C32644 * C479 -
           (((C8149 + C8150 + C8151 + C8152) * C32684 +
             (C8153 + C8154 + C8155 + C8156) * C114) *
                C32595 +
            ((C7757 * C1044 + C32966 * C1052 + C7756 * C1041 + C7750 * C1051 +
              C7755 * C273 + C7749 * C287 + C7754 * C270 + C7748 * C286) *
                 C32684 +
             (C7757 * C1034 + C32966 * C1043 + C7756 * C1033 + C7750 * C1042 +
              C7755 * C257 + C7749 * C272 + C7754 * C256 + C7748 * C271) *
                 C114) *
                C32906) *
               C32644 * C480) *
              C481 +
          ((((C8156 + C8155 + C8154 + C8153) * C114 +
             (C8152 + C8151 + C8150 + C8149) * C32684) *
                C32906 +
            ((C7754 * C254 + C7748 * C267 + C7755 * C259 + C7749 * C276 +
              C7756 * C1031 + C7750 * C1038 + C7757 * C1036 + C32966 * C1047) *
                 C114 +
             (C7754 * C266 + C7748 * C284 + C7755 * C277 + C7749 * C289 +
              C7756 * C1037 + C7750 * C1049 + C7757 * C1048 + C32966 * C1054) *
                 C32684) *
                C32595) *
               C32644 * C480 -
           (((C7799 + C7800 + C7801 + C7802) * C32684 +
             (C7803 + C7804 + C7805 + C7806) * C114) *
                C32595 +
            ((C7798 + C7797 + C7796 + C7795) * C32684 +
             (C7794 + C7793 + C7792 + C7791) * C114) *
                C32906) *
               C32644 * C479) *
              C482)) /
            (p * q * std::sqrt(p + q));
    d2ee[101] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2784 * C115 + C32925 * C122 + C2785 * C256 + C32729 * C271) *
                 C114 +
             (C2784 * C123 + C32925 * C136 + C2785 * C270 + C32729 * C286) *
                 C32684) *
                C2780 +
            ((C2819 + C2820) * C114 + (C2821 + C2822) * C32684) * C2781 +
            C2843 * C2782 + C2844 * C32960) *
               C601 -
           (((C3361 + C3362) * C32684 + (C3363 + C3364) * C114) * C32960 +
            ((C3365 + C3366) * C32684 + (C3367 + C3368) * C114) * C2782 +
            ((C3369 + C3370) * C32684 + (C3371 + C3372) * C114) * C2781 +
            ((C2785 * C727 + C32729 * C736 + C2784 * C375 + C32925 * C391) *
                 C32684 +
             (C2785 * C721 + C32729 * C726 + C2784 * C361 + C32925 * C376) *
                 C114) *
                C2780) *
               C602) *
              C479 +
          ((((C2784 * C721 + C32925 * C726 + C2785 * C1167 + C32729 * C1179) *
                 C114 +
             (C2784 * C727 + C32925 * C736 + C2785 * C1178 + C32729 * C1194) *
                 C32684) *
                C2780 +
            ((C2784 * C722 + C32925 * C728 + C2785 * C1166 + C32729 * C1177) *
                 C114 +
             (C2784 * C729 + C32925 * C737 + C2785 * C1176 + C32729 * C1193) *
                 C32684) *
                C2781 +
            ((C2784 * C723 + C32925 * C730 + C2785 * C1165 + C32729 * C1175) *
                 C114 +
             (C2784 * C731 + C32925 * C738 + C2785 * C1174 + C32729 * C1192) *
                 C32684) *
                C2782 +
            ((C2784 * C724 + C32925 * C732 + C2785 * C1533 + C32729 * C1534) *
                 C114 +
             (C2784 * C733 + C32925 * C739 + C2785 * C1535 + C32729 * C1536) *
                 C32684) *
                C32960) *
               C602 -
           (((C3195 + C3196) * C32684 + (C3197 + C3198) * C114) * C32960 +
            ((C3199 + C3200) * C32684 + (C3201 + C3202) * C114) * C2782 +
            ((C3203 + C3204) * C32684 + (C3205 + C3206) * C114) * C2781 +
            ((C2785 * C273 + C32729 * C287 + C2784 * C270 + C32925 * C286) *
                 C32684 +
             (C2785 * C257 + C32729 * C272 + C2784 * C256 + C32925 * C271) *
                 C114) *
                C2780) *
               C601) *
              C480) *
         C32618) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C7754 * C115 + C7748 * C122 + C7755 * C256 + C7749 * C271 +
              C7756 * C257 + C7750 * C272 + C7757 * C1033 + C32966 * C1042) *
                 C114 +
             (C7754 * C123 + C7748 * C136 + C7755 * C270 + C7749 * C286 +
              C7756 * C273 + C7750 * C287 + C7757 * C1041 + C32966 * C1051) *
                 C32684) *
                C32906 +
            ((C7791 + C7792 + C7793 + C7794) * C114 +
             (C7795 + C7796 + C7797 + C7798) * C32684) *
                C32595) *
               C601 -
           (((C8303 + C8304 + C8305 + C8306) * C32684 +
             (C8307 + C8308 + C8309 + C8310) * C114) *
                C32595 +
            ((C7757 * C1723 + C32966 * C1728 + C7756 * C1178 + C7750 * C1194 +
              C7755 * C727 + C7749 * C736 + C7754 * C375 + C7748 * C391) *
                 C32684 +
             (C7757 * C1719 + C32966 * C1722 + C7756 * C1167 + C7750 * C1179 +
              C7755 * C721 + C7749 * C726 + C7754 * C361 + C7748 * C376) *
                 C114) *
                C32906) *
               C602) *
              C479 +
          ((((C7754 * C721 + C7748 * C726 + C7755 * C1167 + C7749 * C1179 +
              C7756 * C1719 + C7750 * C1722 + C7757 * C6476 + C32966 * C6480) *
                 C114 +
             (C7754 * C727 + C7748 * C736 + C7755 * C1178 + C7749 * C1194 +
              C7756 * C1723 + C7750 * C1728 + C7757 * C6479 + C32966 * C6485) *
                 C32684) *
                C32906 +
            ((C7754 * C722 + C7748 * C728 + C7755 * C1166 + C7749 * C1177 +
              C7756 * C1720 + C7750 * C1724 + C7757 * C6656 + C32966 * C6657) *
                 C114 +
             (C7754 * C729 + C7748 * C737 + C7755 * C1176 + C7749 * C1193 +
              C7756 * C1725 + C7750 * C1729 + C7757 * C6658 + C32966 * C6659) *
                 C32684) *
                C32595) *
               C602 -
           (((C8149 + C8150 + C8151 + C8152) * C32684 +
             (C8153 + C8154 + C8155 + C8156) * C114) *
                C32595 +
            ((C7757 * C1044 + C32966 * C1052 + C7756 * C1041 + C7750 * C1051 +
              C7755 * C273 + C7749 * C287 + C7754 * C270 + C7748 * C286) *
                 C32684 +
             (C7757 * C1034 + C32966 * C1043 + C7756 * C1033 + C7750 * C1042 +
              C7755 * C257 + C7749 * C272 + C7754 * C256 + C7748 * C271) *
                 C114) *
                C32906) *
               C601) *
              C480) *
         C32618) /
            (p * q * std::sqrt(p + q));
    d2ee[102] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C2784 * C115 + C32925 * C122 + C2785 * C256 + C32729 * C271) *
                C114 +
            (C2784 * C123 + C32925 * C136 + C2785 * C270 + C32729 * C286) *
                C32684) *
               C2780 +
           ((C2819 + C2820) * C114 + (C2821 + C2822) * C32684) * C2781 +
           C2843 * C2782 + C2844 * C32960) *
              C32644 * C248 -
          (((C2785 * C279 + C32729 * C290 + C2784 * C264 + C32925 * C283) *
                C32684 +
            (C2785 * C260 + C32729 * C278 + C2784 * C253 + C32925 * C265) *
                C114) *
               C32960 +
           ((C2785 * C277 + C32729 * C289 + C2784 * C266 + C32925 * C284) *
                C32684 +
            (C2785 * C259 + C32729 * C276 + C2784 * C254 + C32925 * C267) *
                C114) *
               C2782 +
           ((C2785 * C275 + C32729 * C288 + C2784 * C268 + C32925 * C285) *
                C32684 +
            (C2785 * C258 + C32729 * C274 + C2784 * C255 + C32925 * C269) *
                C114) *
               C2781 +
           ((C2785 * C273 + C32729 * C287 + C2784 * C270 + C32925 * C286) *
                C32684 +
            (C2785 * C257 + C32729 * C272 + C2784 * C256 + C32925 * C271) *
                C114) *
               C2780) *
              C32644 * C249 +
          (((C2784 * C257 + C32925 * C272 + C2785 * C1033 + C32729 * C1042) *
                C114 +
            (C2784 * C273 + C32925 * C287 + C2785 * C1041 + C32729 * C1051) *
                C32684) *
               C2780 +
           ((C2784 * C258 + C32925 * C274 + C2785 * C1032 + C32729 * C1040) *
                C114 +
            (C2784 * C275 + C32925 * C288 + C2785 * C1039 + C32729 * C1050) *
                C32684) *
               C2781 +
           ((C2784 * C259 + C32925 * C276 + C2785 * C1031 + C32729 * C1038) *
                C114 +
            (C2784 * C277 + C32925 * C289 + C2785 * C1037 + C32729 * C1049) *
                C32684) *
               C2782 +
           ((C2784 * C260 + C32925 * C278 + C2785 * C1347 + C32729 * C1348) *
                C114 +
            (C2784 * C279 + C32925 * C290 + C2785 * C1349 + C32729 * C1350) *
                C32684) *
               C32960) *
              C32644 * C250) *
         C32618) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C2784 * C115 + C32925 * C122 + C2785 * C256 + C32729 * C271) *
                C114 +
            (C2784 * C123 + C32925 * C136 + C2785 * C270 + C32729 * C286) *
                C32684) *
               C2780 +
           ((C2819 + C2820) * C114 + (C2821 + C2822) * C32684) * C2781 +
           C2843 * C2782 + C2844 * C32960) *
              C32644 * C32630 * C110 -
          (((C2831 + C2832) * C32684 + (C2833 + C2834) * C114) * C32960 +
           ((C2830 + C2829) * C32684 + (C2828 + C2827) * C114) * C2782 +
           ((C2826 + C2825) * C32684 + (C2824 + C2823) * C114) * C2781 +
           ((C2822 + C2821) * C32684 + (C2820 + C2819) * C114) * C2780) *
              C32644 * C32630 * C111 +
          (C2843 * C2780 + C2844 * C2781 +
           ((C2834 + C2833) * C114 + (C2832 + C2831) * C32684) * C2782 +
           ((C2784 * C120 + C32925 * C133 + C2785 * C483 + C32729 * C484) *
                C114 +
            (C2784 * C132 + C32925 * C141 + C2785 * C485 + C32729 * C486) *
                C32684) *
               C32960) *
              C32644 * C32630 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C2784 * C115 + C32925 * C122 + C2785 * C256 + C32729 * C271) *
                C114 +
            (C2784 * C123 + C32925 * C136 + C2785 * C270 + C32729 * C286) *
                C32684) *
               C2780 +
           ((C2819 + C2820) * C114 + (C2821 + C2822) * C32684) * C2781 +
           C2843 * C2782 + C2844 * C32960) *
              C354 -
          (((C2785 * C733 + C32729 * C739 + C2784 * C369 + C32925 * C388) *
                C32684 +
            (C2785 * C724 + C32729 * C732 + C2784 * C358 + C32925 * C370) *
                C114) *
               C32960 +
           ((C2785 * C731 + C32729 * C738 + C2784 * C371 + C32925 * C389) *
                C32684 +
            (C2785 * C723 + C32729 * C730 + C2784 * C359 + C32925 * C372) *
                C114) *
               C2782 +
           ((C2785 * C729 + C32729 * C737 + C2784 * C373 + C32925 * C390) *
                C32684 +
            (C2785 * C722 + C32729 * C728 + C2784 * C360 + C32925 * C374) *
                C114) *
               C2781 +
           ((C2785 * C727 + C32729 * C736 + C2784 * C375 + C32925 * C391) *
                C32684 +
            (C2785 * C721 + C32729 * C726 + C2784 * C361 + C32925 * C376) *
                C114) *
               C2780) *
              C355 +
          (((C2784 * C362 + C32925 * C377 + C2785 * C1168 + C32729 * C1180) *
                C114 +
            (C2784 * C378 + C32925 * C392 + C2785 * C1182 + C32729 * C1195) *
                C32684) *
               C2780 +
           ((C2784 * C363 + C32925 * C379 + C2785 * C1170 + C32729 * C1184) *
                C114 +
            (C2784 * C380 + C32925 * C393 + C2785 * C1186 + C32729 * C1197) *
                C32684) *
               C2781 +
           ((C2784 * C364 + C32925 * C381 + C2785 * C1172 + C32729 * C1188) *
                C114 +
            (C2784 * C382 + C32925 * C394 + C2785 * C1190 + C32729 * C1199) *
                C32684) *
               C2782 +
           ((C2784 * C365 + C32925 * C383 + C2785 * C2308 + C32729 * C2309) *
                C114 +
            (C2784 * C384 + C32925 * C395 + C2785 * C2310 + C32729 * C2311) *
                C32684) *
               C32960) *
              C356) *
         C32630 * C32618) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C7754 * C115 + C7748 * C122 + C7755 * C256 + C7749 * C271 +
             C7756 * C257 + C7750 * C272 + C7757 * C1033 + C32966 * C1042) *
                C114 +
            (C7754 * C123 + C7748 * C136 + C7755 * C270 + C7749 * C286 +
             C7756 * C273 + C7750 * C287 + C7757 * C1041 + C32966 * C1051) *
                C32684) *
               C32906 +
           ((C7791 + C7792 + C7793 + C7794) * C114 +
            (C7795 + C7796 + C7797 + C7798) * C32684) *
               C32595) *
              C32644 * C32630 * C110 -
          (((C7799 + C7800 + C7801 + C7802) * C32684 +
            (C7803 + C7804 + C7805 + C7806) * C114) *
               C32595 +
           ((C7798 + C7797 + C7796 + C7795) * C32684 +
            (C7794 + C7793 + C7792 + C7791) * C114) *
               C32906) *
              C32644 * C32630 * C111 +
          (((C7806 + C7805 + C7804 + C7803) * C114 +
            (C7802 + C7801 + C7800 + C7799) * C32684) *
               C32906 +
           ((C7754 * C118 + C7748 * C128 + C7755 * C253 + C7749 * C265 +
             C7756 * C260 + C7750 * C278 + C7757 * C1347 + C32966 * C1348) *
                C114 +
            (C7754 * C129 + C7748 * C139 + C7755 * C264 + C7749 * C283 +
             C7756 * C279 + C7750 * C290 + C7757 * C1349 + C32966 * C1350) *
                C32684) *
               C32595) *
              C32644 * C32630 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C7754 * C115 + C7748 * C122 + C7755 * C256 + C7749 * C271 +
             C7756 * C257 + C7750 * C272 + C7757 * C1033 + C32966 * C1042) *
                C114 +
            (C7754 * C123 + C7748 * C136 + C7755 * C270 + C7749 * C286 +
             C7756 * C273 + C7750 * C287 + C7757 * C1041 + C32966 * C1051) *
                C32684) *
               C32906 +
           ((C7791 + C7792 + C7793 + C7794) * C114 +
            (C7795 + C7796 + C7797 + C7798) * C32684) *
               C32595) *
              C32644 * C248 -
          (((C7757 * C1046 + C32966 * C1053 + C7756 * C1039 + C7750 * C1050 +
             C7755 * C275 + C7749 * C288 + C7754 * C268 + C7748 * C285) *
                C32684 +
            (C7757 * C1035 + C32966 * C1045 + C7756 * C1032 + C7750 * C1040 +
             C7755 * C258 + C7749 * C274 + C7754 * C255 + C7748 * C269) *
                C114) *
               C32595 +
           ((C7757 * C1044 + C32966 * C1052 + C7756 * C1041 + C7750 * C1051 +
             C7755 * C273 + C7749 * C287 + C7754 * C270 + C7748 * C286) *
                C32684 +
            (C7757 * C1034 + C32966 * C1043 + C7756 * C1033 + C7750 * C1042 +
             C7755 * C257 + C7749 * C272 + C7754 * C256 + C7748 * C271) *
                C114) *
               C32906) *
              C32644 * C249 +
          (((C7754 * C257 + C7748 * C272 + C7755 * C1033 + C7749 * C1042 +
             C7756 * C1034 + C7750 * C1043 + C7757 * C6406 + C32966 * C6409) *
                C114 +
            (C7754 * C273 + C7748 * C287 + C7755 * C1041 + C7749 * C1051 +
             C7756 * C1044 + C7750 * C1052 + C7757 * C6408 + C32966 * C6412) *
                C32684) *
               C32906 +
           ((C7754 * C258 + C7748 * C274 + C7755 * C1032 + C7749 * C1040 +
             C7756 * C1035 + C7750 * C1045 + C7757 * C6570 + C32966 * C6571) *
                C114 +
            (C7754 * C275 + C7748 * C288 + C7755 * C1039 + C7749 * C1050 +
             C7756 * C1046 + C7750 * C1053 + C7757 * C6572 + C32966 * C6573) *
                C32684) *
               C32595) *
              C32644 * C250) *
         C32618) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C7754 * C115 + C7748 * C122 + C7755 * C256 + C7749 * C271 +
             C7756 * C257 + C7750 * C272 + C7757 * C1033 + C32966 * C1042) *
                C114 +
            (C7754 * C123 + C7748 * C136 + C7755 * C270 + C7749 * C286 +
             C7756 * C273 + C7750 * C287 + C7757 * C1041 + C32966 * C1051) *
                C32684) *
               C32906 +
           ((C7791 + C7792 + C7793 + C7794) * C114 +
            (C7795 + C7796 + C7797 + C7798) * C32684) *
               C32595) *
              C354 -
          (((C7757 * C1725 + C32966 * C1729 + C7756 * C1176 + C7750 * C1193 +
             C7755 * C729 + C7749 * C737 + C7754 * C373 + C7748 * C390) *
                C32684 +
            (C7757 * C1720 + C32966 * C1724 + C7756 * C1166 + C7750 * C1177 +
             C7755 * C722 + C7749 * C728 + C7754 * C360 + C7748 * C374) *
                C114) *
               C32595 +
           ((C7757 * C1723 + C32966 * C1728 + C7756 * C1178 + C7750 * C1194 +
             C7755 * C727 + C7749 * C736 + C7754 * C375 + C7748 * C391) *
                C32684 +
            (C7757 * C1719 + C32966 * C1722 + C7756 * C1167 + C7750 * C1179 +
             C7755 * C721 + C7749 * C726 + C7754 * C361 + C7748 * C376) *
                C114) *
               C32906) *
              C355 +
          (((C7754 * C362 + C7748 * C377 + C7755 * C1168 + C7749 * C1180 +
             C7756 * C1169 + C7750 * C1181 + C7757 * C6477 + C32966 * C6481) *
                C114 +
            (C7754 * C378 + C7748 * C392 + C7755 * C1182 + C7749 * C1195 +
             C7756 * C1183 + C7750 * C1196 + C7757 * C6483 + C32966 * C6486) *
                C32684) *
               C32906 +
           ((C7754 * C363 + C7748 * C379 + C7755 * C1170 + C7749 * C1184 +
             C7756 * C1171 + C7750 * C1185 + C7757 * C7292 + C32966 * C7293) *
                C114 +
            (C7754 * C380 + C7748 * C393 + C7755 * C1186 + C7749 * C1197 +
             C7756 * C1187 + C7750 * C1198 + C7757 * C7294 + C32966 * C7295) *
                C32684) *
               C32595) *
              C356) *
         C32630 * C32618) /
            (p * q * std::sqrt(p + q));
    d2ee[103] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2784 * C115 + C32925 * C122 + C2785 * C256 + C32729 * C271) *
                 C114 +
             (C2784 * C123 + C32925 * C136 + C2785 * C270 + C32729 * C286) *
                 C32684) *
                C2780 +
            ((C2819 + C2820) * C114 + (C2821 + C2822) * C32684) * C2781 +
            C2843 * C2782 + C2844 * C32960) *
               C601 -
           (((C3361 + C3362) * C32684 + (C3363 + C3364) * C114) * C32960 +
            ((C3365 + C3366) * C32684 + (C3367 + C3368) * C114) * C2782 +
            ((C3369 + C3370) * C32684 + (C3371 + C3372) * C114) * C2781 +
            ((C2785 * C727 + C32729 * C736 + C2784 * C375 + C32925 * C391) *
                 C32684 +
             (C2785 * C721 + C32729 * C726 + C2784 * C361 + C32925 * C376) *
                 C114) *
                C2780) *
               C602) *
              C32630 * C481 +
          ((((C3372 + C3371) * C114 + (C3370 + C3369) * C32684) * C2780 +
            ((C3368 + C3367) * C114 + (C3366 + C3365) * C32684) * C2781 +
            ((C3364 + C3363) * C114 + (C3362 + C3361) * C32684) * C2782 +
            ((C2784 * C357 + C32925 * C368 + C2785 * C725 + C32729 * C734) *
                 C114 +
             (C2784 * C367 + C32925 * C387 + C2785 * C735 + C32729 * C740) *
                 C32684) *
                C32960) *
               C602 -
           (((C2831 + C2832) * C32684 + (C2833 + C2834) * C114) * C32960 +
            ((C2830 + C2829) * C32684 + (C2828 + C2827) * C114) * C2782 +
            ((C2826 + C2825) * C32684 + (C2824 + C2823) * C114) * C2781 +
            ((C2822 + C2821) * C32684 + (C2820 + C2819) * C114) * C2780) *
               C601) *
              C32630 * C482)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C7754 * C115 + C7748 * C122 + C7755 * C256 + C7749 * C271 +
              C7756 * C257 + C7750 * C272 + C7757 * C1033 + C32966 * C1042) *
                 C114 +
             (C7754 * C123 + C7748 * C136 + C7755 * C270 + C7749 * C286 +
              C7756 * C273 + C7750 * C287 + C7757 * C1041 + C32966 * C1051) *
                 C32684) *
                C32906 +
            ((C7791 + C7792 + C7793 + C7794) * C114 +
             (C7795 + C7796 + C7797 + C7798) * C32684) *
                C32595) *
               C601 -
           (((C8303 + C8304 + C8305 + C8306) * C32684 +
             (C8307 + C8308 + C8309 + C8310) * C114) *
                C32595 +
            ((C7757 * C1723 + C32966 * C1728 + C7756 * C1178 + C7750 * C1194 +
              C7755 * C727 + C7749 * C736 + C7754 * C375 + C7748 * C391) *
                 C32684 +
             (C7757 * C1719 + C32966 * C1722 + C7756 * C1167 + C7750 * C1179 +
              C7755 * C721 + C7749 * C726 + C7754 * C361 + C7748 * C376) *
                 C114) *
                C32906) *
               C602) *
              C32630 * C481 +
          ((((C8310 + C8309 + C8308 + C8307) * C114 +
             (C8306 + C8305 + C8304 + C8303) * C32684) *
                C32906 +
            ((C7754 * C359 + C7748 * C372 + C7755 * C723 + C7749 * C730 +
              C7756 * C1165 + C7750 * C1175 + C7757 * C1721 + C32966 * C1726) *
                 C114 +
             (C7754 * C371 + C7748 * C389 + C7755 * C731 + C7749 * C738 +
              C7756 * C1174 + C7750 * C1192 + C7757 * C1727 + C32966 * C1730) *
                 C32684) *
                C32595) *
               C602 -
           (((C7799 + C7800 + C7801 + C7802) * C32684 +
             (C7803 + C7804 + C7805 + C7806) * C114) *
                C32595 +
            ((C7798 + C7797 + C7796 + C7795) * C32684 +
             (C7794 + C7793 + C7792 + C7791) * C114) *
                C32906) *
               C601) *
              C32630 * C482)) /
            (p * q * std::sqrt(p + q));
    d2ee[104] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C2784 * C115 + C32925 * C122 + C2785 * C256 + C32729 * C271) *
                C114 +
            (C2784 * C123 + C32925 * C136 + C2785 * C270 + C32729 * C286) *
                C32684) *
               C2780 +
           ((C2819 + C2820) * C114 + (C2821 + C2822) * C32684) * C2781 +
           C2843 * C2782 + C2844 * C32960) *
              C32644 * C32630 * C110 -
          (((C2831 + C2832) * C32684 + (C2833 + C2834) * C114) * C32960 +
           ((C2830 + C2829) * C32684 + (C2828 + C2827) * C114) * C2782 +
           ((C2826 + C2825) * C32684 + (C2824 + C2823) * C114) * C2781 +
           ((C2822 + C2821) * C32684 + (C2820 + C2819) * C114) * C2780) *
              C32644 * C32630 * C111 +
          (C2843 * C2780 + C2844 * C2781 +
           ((C2834 + C2833) * C114 + (C2832 + C2831) * C32684) * C2782 +
           ((C2784 * C120 + C32925 * C133 + C2785 * C483 + C32729 * C484) *
                C114 +
            (C2784 * C132 + C32925 * C141 + C2785 * C485 + C32729 * C486) *
                C32684) *
               C32960) *
              C32644 * C32630 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C2784 * C115 + C32925 * C122 + C2785 * C256 + C32729 * C271) *
                C114 +
            (C2784 * C123 + C32925 * C136 + C2785 * C270 + C32729 * C286) *
                C32684) *
               C2780 +
           ((C2819 + C2820) * C114 + (C2821 + C2822) * C32684) * C2781 +
           C2843 * C2782 + C2844 * C32960) *
              C32644 * C248 -
          (((C2785 * C279 + C32729 * C290 + C2784 * C264 + C32925 * C283) *
                C32684 +
            (C2785 * C260 + C32729 * C278 + C2784 * C253 + C32925 * C265) *
                C114) *
               C32960 +
           ((C2785 * C277 + C32729 * C289 + C2784 * C266 + C32925 * C284) *
                C32684 +
            (C2785 * C259 + C32729 * C276 + C2784 * C254 + C32925 * C267) *
                C114) *
               C2782 +
           ((C2785 * C275 + C32729 * C288 + C2784 * C268 + C32925 * C285) *
                C32684 +
            (C2785 * C258 + C32729 * C274 + C2784 * C255 + C32925 * C269) *
                C114) *
               C2781 +
           ((C2785 * C273 + C32729 * C287 + C2784 * C270 + C32925 * C286) *
                C32684 +
            (C2785 * C257 + C32729 * C272 + C2784 * C256 + C32925 * C271) *
                C114) *
               C2780) *
              C32644 * C249 +
          (((C2784 * C257 + C32925 * C272 + C2785 * C1033 + C32729 * C1042) *
                C114 +
            (C2784 * C273 + C32925 * C287 + C2785 * C1041 + C32729 * C1051) *
                C32684) *
               C2780 +
           ((C2784 * C258 + C32925 * C274 + C2785 * C1032 + C32729 * C1040) *
                C114 +
            (C2784 * C275 + C32925 * C288 + C2785 * C1039 + C32729 * C1050) *
                C32684) *
               C2781 +
           ((C2784 * C259 + C32925 * C276 + C2785 * C1031 + C32729 * C1038) *
                C114 +
            (C2784 * C277 + C32925 * C289 + C2785 * C1037 + C32729 * C1049) *
                C32684) *
               C2782 +
           ((C2784 * C260 + C32925 * C278 + C2785 * C1347 + C32729 * C1348) *
                C114 +
            (C2784 * C279 + C32925 * C290 + C2785 * C1349 + C32729 * C1350) *
                C32684) *
               C32960) *
              C32644 * C250) *
         C32618) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C7754 * C115 + C7748 * C122 + C7755 * C256 + C7749 * C271 +
             C7756 * C257 + C7750 * C272 + C7757 * C1033 + C32966 * C1042) *
                C114 +
            (C7754 * C123 + C7748 * C136 + C7755 * C270 + C7749 * C286 +
             C7756 * C273 + C7750 * C287 + C7757 * C1041 + C32966 * C1051) *
                C32684) *
               C32906 +
           ((C7791 + C7792 + C7793 + C7794) * C114 +
            (C7795 + C7796 + C7797 + C7798) * C32684) *
               C32595) *
              C32644 * C32630 * C110 -
          (((C7799 + C7800 + C7801 + C7802) * C32684 +
            (C7803 + C7804 + C7805 + C7806) * C114) *
               C32595 +
           ((C7798 + C7797 + C7796 + C7795) * C32684 +
            (C7794 + C7793 + C7792 + C7791) * C114) *
               C32906) *
              C32644 * C32630 * C111 +
          (((C7806 + C7805 + C7804 + C7803) * C114 +
            (C7802 + C7801 + C7800 + C7799) * C32684) *
               C32906 +
           ((C7754 * C118 + C7748 * C128 + C7755 * C253 + C7749 * C265 +
             C7756 * C260 + C7750 * C278 + C7757 * C1347 + C32966 * C1348) *
                C114 +
            (C7754 * C129 + C7748 * C139 + C7755 * C264 + C7749 * C283 +
             C7756 * C279 + C7750 * C290 + C7757 * C1349 + C32966 * C1350) *
                C32684) *
               C32595) *
              C32644 * C32630 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C7754 * C115 + C7748 * C122 + C7755 * C256 + C7749 * C271 +
             C7756 * C257 + C7750 * C272 + C7757 * C1033 + C32966 * C1042) *
                C114 +
            (C7754 * C123 + C7748 * C136 + C7755 * C270 + C7749 * C286 +
             C7756 * C273 + C7750 * C287 + C7757 * C1041 + C32966 * C1051) *
                C32684) *
               C32906 +
           ((C7791 + C7792 + C7793 + C7794) * C114 +
            (C7795 + C7796 + C7797 + C7798) * C32684) *
               C32595) *
              C32644 * C248 -
          (((C7757 * C1046 + C32966 * C1053 + C7756 * C1039 + C7750 * C1050 +
             C7755 * C275 + C7749 * C288 + C7754 * C268 + C7748 * C285) *
                C32684 +
            (C7757 * C1035 + C32966 * C1045 + C7756 * C1032 + C7750 * C1040 +
             C7755 * C258 + C7749 * C274 + C7754 * C255 + C7748 * C269) *
                C114) *
               C32595 +
           ((C7757 * C1044 + C32966 * C1052 + C7756 * C1041 + C7750 * C1051 +
             C7755 * C273 + C7749 * C287 + C7754 * C270 + C7748 * C286) *
                C32684 +
            (C7757 * C1034 + C32966 * C1043 + C7756 * C1033 + C7750 * C1042 +
             C7755 * C257 + C7749 * C272 + C7754 * C256 + C7748 * C271) *
                C114) *
               C32906) *
              C32644 * C249 +
          (((C7754 * C257 + C7748 * C272 + C7755 * C1033 + C7749 * C1042 +
             C7756 * C1034 + C7750 * C1043 + C7757 * C6406 + C32966 * C6409) *
                C114 +
            (C7754 * C273 + C7748 * C287 + C7755 * C1041 + C7749 * C1051 +
             C7756 * C1044 + C7750 * C1052 + C7757 * C6408 + C32966 * C6412) *
                C32684) *
               C32906 +
           ((C7754 * C258 + C7748 * C274 + C7755 * C1032 + C7749 * C1040 +
             C7756 * C1035 + C7750 * C1045 + C7757 * C6570 + C32966 * C6571) *
                C114 +
            (C7754 * C275 + C7748 * C288 + C7755 * C1039 + C7749 * C1050 +
             C7756 * C1046 + C7750 * C1053 + C7757 * C6572 + C32966 * C6573) *
                C32684) *
               C32595) *
              C32644 * C250) *
         C32618) /
            (p * q * std::sqrt(p + q));
    d2ee[105] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2784 * C115 + C32925 * C122 + C2785 * C256 + C32729 * C271) *
                 C3602 +
             (C2784 * C123 + C32925 * C136 + C2785 * C270 + C32729 * C286) *
                 C32926 +
             (C4722 + C4723) * C3603 + (C4724 + C4725) * C32771) *
                C854 +
            ((C2819 + C2820) * C3602 + (C2821 + C2822) * C32926 +
             (C3372 + C3371) * C3603 + (C3370 + C3369) * C32771) *
                C855 +
            C4397 * C32945) *
               C32644 * C479 -
           (((C4948 + C4949) * C32771 + (C4950 + C4951) * C3603 +
             (C3199 + C3200) * C32926 + (C3201 + C3202) * C3602) *
                C32945 +
            ((C4952 + C4953) * C32771 + (C4954 + C4955) * C3603 +
             (C3203 + C3204) * C32926 + (C3205 + C3206) * C3602) *
                C855 +
            ((C2785 * C1178 + C32729 * C1194 + C2784 * C727 + C32925 * C736) *
                 C32771 +
             (C2785 * C1167 + C32729 * C1179 + C2784 * C721 + C32925 * C726) *
                 C3603 +
             (C2785 * C273 + C32729 * C287 + C2784 * C270 + C32925 * C286) *
                 C32926 +
             (C2785 * C257 + C32729 * C272 + C2784 * C256 + C32925 * C271) *
                 C3602) *
                C854) *
               C32644 * C480) *
              C481 +
          ((((C3206 + C3205) * C3602 + (C3204 + C3203) * C32926 +
             (C4955 + C4954) * C3603 + (C4953 + C4952) * C32771) *
                C854 +
            ((C3202 + C3201) * C3602 + (C3200 + C3199) * C32926 +
             (C4951 + C4950) * C3603 + (C4949 + C4948) * C32771) *
                C855 +
            ((C3198 + C3197) * C3602 + (C3196 + C3195) * C32926 +
             (C2784 * C724 + C32925 * C732 + C2785 * C1533 + C32729 * C1534) *
                 C3603 +
             (C2784 * C733 + C32925 * C739 + C2785 * C1535 + C32729 * C1536) *
                 C32771) *
                C32945) *
               C32644 * C480 -
           (((C3361 + C3362) * C32771 + (C3363 + C3364) * C3603 +
             (C2830 + C2829) * C32926 + (C2828 + C2827) * C3602) *
                C32945 +
            ((C3365 + C3366) * C32771 + (C3367 + C3368) * C3603 +
             (C2826 + C2825) * C32926 + (C2824 + C2823) * C3602) *
                C855 +
            ((C3369 + C3370) * C32771 + (C3371 + C3372) * C3603 +
             (C2822 + C2821) * C32926 + (C2820 + C2819) * C3602) *
                C854) *
               C32644 * C479) *
              C482)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C7754 * C115 + C7748 * C122 + C7755 * C256 + C7749 * C271 +
             C7756 * C257 + C7750 * C272 + C7757 * C1033 + C32966 * C1042) *
                C3602 +
            (C7754 * C123 + C7748 * C136 + C7755 * C270 + C7749 * C286 +
             C7756 * C273 + C7750 * C287 + C7757 * C1041 + C32966 * C1051) *
                C32926 +
            (C9813 + C9814 + C9815 + C9816) * C3603 +
            (C9817 + C9818 + C9819 + C9820) * C32771) *
               C32585 * C32644 * C479 -
           ((C7757 * C6479 + C32966 * C6485 + C7756 * C1723 + C7750 * C1728 +
             C7755 * C1178 + C7749 * C1194 + C7754 * C727 + C7748 * C736) *
                C32771 +
            (C7757 * C6476 + C32966 * C6480 + C7756 * C1719 + C7750 * C1722 +
             C7755 * C1167 + C7749 * C1179 + C7754 * C721 + C7748 * C726) *
                C3603 +
            (C7757 * C1044 + C32966 * C1052 + C7756 * C1041 + C7750 * C1051 +
             C7755 * C273 + C7749 * C287 + C7754 * C270 + C7748 * C286) *
                C32926 +
            (C7757 * C1034 + C32966 * C1043 + C7756 * C1033 + C7750 * C1042 +
             C7755 * C257 + C7749 * C272 + C7754 * C256 + C7748 * C271) *
                C3602) *
               C32585 * C32644 * C480) *
              C481 +
          (((C8156 + C8155 + C8154 + C8153) * C3602 +
            (C8152 + C8151 + C8150 + C8149) * C32926 +
            (C7754 * C722 + C7748 * C728 + C7755 * C1166 + C7749 * C1177 +
             C7756 * C1720 + C7750 * C1724 + C7757 * C6656 + C32966 * C6657) *
                C3603 +
            (C7754 * C729 + C7748 * C737 + C7755 * C1176 + C7749 * C1193 +
             C7756 * C1725 + C7750 * C1729 + C7757 * C6658 + C32966 * C6659) *
                C32771) *
               C32585 * C32644 * C480 -
           ((C8303 + C8304 + C8305 + C8306) * C32771 +
            (C8307 + C8308 + C8309 + C8310) * C3603 +
            (C7798 + C7797 + C7796 + C7795) * C32926 +
            (C7794 + C7793 + C7792 + C7791) * C3602) *
               C32585 * C32644 * C479) *
              C482)) /
            (p * q * std::sqrt(p + q));
    d2ee[106] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2784 * C115 + C32925 * C122 + C2785 * C256 + C32729 * C271) *
                 C3602 +
             (C2784 * C123 + C32925 * C136 + C2785 * C270 + C32729 * C286) *
                 C32926 +
             (C4722 + C4723) * C3603 + (C4724 + C4725) * C32771) *
                C854 +
            ((C2819 + C2820) * C3602 + (C2821 + C2822) * C32926 +
             C5150 * C3603 + C5151 * C32771) *
                C855 +
            C4397 * C32945) *
               C601 -
           (((C4726 + C4727) * C32771 + (C4728 + C4729) * C3603 +
             C5152 * C32926 + C5153 * C3602) *
                C32945 +
            ((C4730 + C4731) * C32771 + (C4732 + C4733) * C3603 +
             C5154 * C32926 + C5155 * C3602) *
                C855 +
            ((C4734 + C4735) * C32771 + (C4736 + C4737) * C3603 +
             (C4725 + C4724) * C32926 + (C4723 + C4722) * C3602) *
                C854) *
               C602) *
              C479 +
          ((((C5358 + C5359) * C3602 + (C5360 + C5361) * C32926 +
             (C2784 * C1168 + C32925 * C1180 + C2785 * C1169 + C32729 * C1181) *
                 C3603 +
             (C2784 * C1182 + C32925 * C1195 + C2785 * C1183 + C32729 * C1196) *
                 C32771) *
                C854 +
            ((C4955 + C4954) * C3602 + (C4953 + C4952) * C32926 +
             (C2784 * C1170 + C32925 * C1184 + C2785 * C1171 + C32729 * C1185) *
                 C3603 +
             (C2784 * C1186 + C32925 * C1197 + C2785 * C1187 + C32729 * C1198) *
                 C32771) *
                C855 +
            ((C4951 + C4950) * C3602 + (C4949 + C4948) * C32926 +
             (C2784 * C1172 + C32925 * C1188 + C2785 * C1173 + C32729 * C1189) *
                 C3603 +
             (C2784 * C1190 + C32925 * C1199 + C2785 * C1191 + C32729 * C1200) *
                 C32771) *
                C32945) *
               C602 -
           (((C4948 + C4949) * C32771 + (C4950 + C4951) * C3603 +
             (C3199 + C3200) * C32926 + (C3201 + C3202) * C3602) *
                C32945 +
            ((C4952 + C4953) * C32771 + (C4954 + C4955) * C3603 +
             (C3203 + C3204) * C32926 + (C3205 + C3206) * C3602) *
                C855 +
            ((C5361 + C5360) * C32771 + (C5359 + C5358) * C3603 +
             (C2785 * C273 + C32729 * C287 + C2784 * C270 + C32925 * C286) *
                 C32926 +
             (C2785 * C257 + C32729 * C272 + C2784 * C256 + C32925 * C271) *
                 C3602) *
                C854) *
               C601) *
              C480) *
         C32618) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C7754 * C115 + C7748 * C122 + C7755 * C256 + C7749 * C271 +
             C7756 * C257 + C7750 * C272 + C7757 * C1033 + C32966 * C1042) *
                C3602 +
            (C7754 * C123 + C7748 * C136 + C7755 * C270 + C7749 * C286 +
             C7756 * C273 + C7750 * C287 + C7757 * C1041 + C32966 * C1051) *
                C32926 +
            (C9813 + C9814 + C9815 + C9816) * C3603 +
            (C9817 + C9818 + C9819 + C9820) * C32771) *
               C32585 * C601 -
           ((C9821 + C9822 + C9823 + C9824) * C32771 +
            (C9825 + C9826 + C9827 + C9828) * C3603 +
            (C9820 + C9819 + C9818 + C9817) * C32926 +
            (C9816 + C9815 + C9814 + C9813) * C3602) *
               C32585 * C602) *
              C479 +
          (((C10235 + C10236 + C10237 + C10238) * C3602 +
            (C10239 + C10240 + C10241 + C10242) * C32926 +
            (C7754 * C1168 + C7748 * C1180 + C7755 * C1169 + C7749 * C1181 +
             C7756 * C6477 + C7750 * C6481 + C7757 * C6478 + C32966 * C6482) *
                C3603 +
            (C7754 * C1182 + C7748 * C1195 + C7755 * C1183 + C7749 * C1196 +
             C7756 * C6483 + C7750 * C6486 + C7757 * C6484 + C32966 * C6487) *
                C32771) *
               C32585 * C602 -
           ((C10242 + C10241 + C10240 + C10239) * C32771 +
            (C10238 + C10237 + C10236 + C10235) * C3603 +
            (C7757 * C1044 + C32966 * C1052 + C7756 * C1041 + C7750 * C1051 +
             C7755 * C273 + C7749 * C287 + C7754 * C270 + C7748 * C286) *
                C32926 +
            (C7757 * C1034 + C32966 * C1043 + C7756 * C1033 + C7750 * C1042 +
             C7755 * C257 + C7749 * C272 + C7754 * C256 + C7748 * C271) *
                C3602) *
               C32585 * C601) *
              C480) *
         C32618) /
            (p * q * std::sqrt(p + q));
    d2ee[107] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C2784 * C115 + C32925 * C122 + C2785 * C256 + C32729 * C271) *
                C3602 +
            (C2784 * C123 + C32925 * C136 + C2785 * C270 + C32729 * C286) *
                C32926 +
            (C2784 * C361 + C32925 * C376 + C2785 * C721 + C32729 * C726) *
                C3603 +
            (C2784 * C375 + C32925 * C391 + C2785 * C727 + C32729 * C736) *
                C32771) *
               C854 +
           ((C2819 + C2820) * C3602 + (C2821 + C2822) * C32926 +
            (C3372 + C3371) * C3603 + (C3370 + C3369) * C32771) *
               C855 +
           C4397 * C32945) *
              C32644 * C248 -
          (((C2785 * C1174 + C32729 * C1192 + C2784 * C731 + C32925 * C738) *
                C32771 +
            (C2785 * C1165 + C32729 * C1175 + C2784 * C723 + C32925 * C730) *
                C3603 +
            (C3199 + C3200) * C32926 + (C3201 + C3202) * C3602) *
               C32945 +
           ((C2785 * C1176 + C32729 * C1193 + C2784 * C729 + C32925 * C737) *
                C32771 +
            (C2785 * C1166 + C32729 * C1177 + C2784 * C722 + C32925 * C728) *
                C3603 +
            (C3203 + C3204) * C32926 + (C3205 + C3206) * C3602) *
               C855 +
           ((C2785 * C1178 + C32729 * C1194 + C2784 * C727 + C32925 * C736) *
                C32771 +
            (C2785 * C1167 + C32729 * C1179 + C2784 * C721 + C32925 * C726) *
                C3603 +
            (C2785 * C273 + C32729 * C287 + C2784 * C270 + C32925 * C286) *
                C32926 +
            (C2785 * C257 + C32729 * C272 + C2784 * C256 + C32925 * C271) *
                C3602) *
               C854) *
              C32644 * C249 +
          (((C2784 * C257 + C32925 * C272 + C2785 * C1033 + C32729 * C1042) *
                C3602 +
            (C2784 * C273 + C32925 * C287 + C2785 * C1041 + C32729 * C1051) *
                C32926 +
            (C2784 * C1167 + C32925 * C1179 + C2785 * C1719 + C32729 * C1722) *
                C3603 +
            (C2784 * C1178 + C32925 * C1194 + C2785 * C1723 + C32729 * C1728) *
                C32771) *
               C854 +
           ((C2784 * C258 + C32925 * C274 + C2785 * C1032 + C32729 * C1040) *
                C3602 +
            (C2784 * C275 + C32925 * C288 + C2785 * C1039 + C32729 * C1050) *
                C32926 +
            (C2784 * C1166 + C32925 * C1177 + C2785 * C1720 + C32729 * C1724) *
                C3603 +
            (C2784 * C1176 + C32925 * C1193 + C2785 * C1725 + C32729 * C1729) *
                C32771) *
               C855 +
           ((C2784 * C259 + C32925 * C276 + C2785 * C1031 + C32729 * C1038) *
                C3602 +
            (C2784 * C277 + C32925 * C289 + C2785 * C1037 + C32729 * C1049) *
                C32926 +
            (C2784 * C1165 + C32925 * C1175 + C2785 * C1721 + C32729 * C1726) *
                C3603 +
            (C2784 * C1174 + C32925 * C1192 + C2785 * C1727 + C32729 * C1730) *
                C32771) *
               C32945) *
              C32644 * C250) *
         C32618) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C2784 * C115 + C32925 * C122 + C2785 * C256 + C32729 * C271) *
                C3602 +
            (C2784 * C123 + C32925 * C136 + C2785 * C270 + C32729 * C286) *
                C32926 +
            (C2784 * C361 + C32925 * C376 + C2785 * C721 + C32729 * C726) *
                C3603 +
            (C2784 * C375 + C32925 * C391 + C2785 * C727 + C32729 * C736) *
                C32771) *
               C854 +
           ((C2819 + C2820) * C3602 + (C2821 + C2822) * C32926 +
            (C3372 + C3371) * C3603 + (C3370 + C3369) * C32771) *
               C855 +
           C4397 * C32945) *
              C32644 * C32630 * C110 -
          (((C3361 + C3362) * C32771 + (C3363 + C3364) * C3603 +
            (C2830 + C2829) * C32926 + (C2828 + C2827) * C3602) *
               C32945 +
           ((C3365 + C3366) * C32771 + (C3367 + C3368) * C3603 +
            (C2826 + C2825) * C32926 + (C2824 + C2823) * C3602) *
               C855 +
           ((C3369 + C3370) * C32771 + (C3371 + C3372) * C3603 +
            (C2822 + C2821) * C32926 + (C2820 + C2819) * C3602) *
               C854) *
              C32644 * C32630 * C111 +
          (C4397 * C854 +
           (C2837 * C3602 + C2838 * C32926 + (C3364 + C3363) * C3603 +
            (C3362 + C3361) * C32771) *
               C855 +
           ((C2834 + C2833) * C3602 + (C2832 + C2831) * C32926 +
            (C2784 * C357 + C32925 * C368 + C2785 * C725 + C32729 * C734) *
                C3603 +
            (C2784 * C367 + C32925 * C387 + C2785 * C735 + C32729 * C740) *
                C32771) *
               C32945) *
              C32644 * C32630 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C2784 * C115 + C32925 * C122 + C2785 * C256 + C32729 * C271) *
                C3602 +
            (C2784 * C123 + C32925 * C136 + C2785 * C270 + C32729 * C286) *
                C32926 +
            (C4722 + C4723) * C3603 + (C4724 + C4725) * C32771) *
               C854 +
           ((C2819 + C2820) * C3602 + (C2821 + C2822) * C32926 +
            (C3372 + C3371) * C3603 + (C3370 + C3369) * C32771) *
               C855 +
           C4397 * C32945) *
              C354 -
          (((C4726 + C4727) * C32771 + (C4728 + C4729) * C3603 +
            (C3365 + C3366) * C32926 + (C3367 + C3368) * C3602) *
               C32945 +
           ((C4730 + C4731) * C32771 + (C4732 + C4733) * C3603 +
            (C3369 + C3370) * C32926 + (C3371 + C3372) * C3602) *
               C855 +
           ((C4734 + C4735) * C32771 + (C4736 + C4737) * C3603 +
            (C4725 + C4724) * C32926 + (C4723 + C4722) * C3602) *
               C854) *
              C355 +
          (((C4737 + C4736) * C3602 + (C4735 + C4734) * C32926 +
            (C2784 * C2110 + C32925 * C2119 + C2785 * C2656 + C32729 * C2659) *
                C3603 +
            (C2784 * C2118 + C32925 * C2128 + C2785 * C2660 + C32729 * C2665) *
                C32771) *
               C854 +
           ((C4733 + C4732) * C3602 + (C4731 + C4730) * C32926 +
            (C2784 * C2109 + C32925 * C2117 + C2785 * C2657 + C32729 * C2661) *
                C3603 +
            (C2784 * C2116 + C32925 * C2127 + C2785 * C2662 + C32729 * C2666) *
                C32771) *
               C855 +
           ((C4729 + C4728) * C3602 + (C4727 + C4726) * C32926 +
            (C2784 * C2108 + C32925 * C2115 + C2785 * C2658 + C32729 * C2663) *
                C3603 +
            (C2784 * C2114 + C32925 * C2126 + C2785 * C2664 + C32729 * C2667) *
                C32771) *
               C32945) *
              C356) *
         C32630 * C32618) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C7754 * C115 + C7748 * C122 + C7755 * C256 + C7749 * C271 +
            C7756 * C257 + C7750 * C272 + C7757 * C1033 + C32966 * C1042) *
               C3602 +
           (C7754 * C123 + C7748 * C136 + C7755 * C270 + C7749 * C286 +
            C7756 * C273 + C7750 * C287 + C7757 * C1041 + C32966 * C1051) *
               C32926 +
           (C7754 * C361 + C7748 * C376 + C7755 * C721 + C7749 * C726 +
            C7756 * C1167 + C7750 * C1179 + C7757 * C1719 + C32966 * C1722) *
               C3603 +
           (C7754 * C375 + C7748 * C391 + C7755 * C727 + C7749 * C736 +
            C7756 * C1178 + C7750 * C1194 + C7757 * C1723 + C32966 * C1728) *
               C32771) *
              C32585 * C32644 * C32630 * C110 -
          ((C8303 + C8304 + C8305 + C8306) * C32771 +
           (C8307 + C8308 + C8309 + C8310) * C3603 +
           (C7798 + C7797 + C7796 + C7795) * C32926 +
           (C7794 + C7793 + C7792 + C7791) * C3602) *
              C32585 * C32644 * C32630 * C111 +
          ((C7806 + C7805 + C7804 + C7803) * C3602 +
           (C7802 + C7801 + C7800 + C7799) * C32926 +
           (C7754 * C359 + C7748 * C372 + C7755 * C723 + C7749 * C730 +
            C7756 * C1165 + C7750 * C1175 + C7757 * C1721 + C32966 * C1726) *
               C3603 +
           (C7754 * C371 + C7748 * C389 + C7755 * C731 + C7749 * C738 +
            C7756 * C1174 + C7750 * C1192 + C7757 * C1727 + C32966 * C1730) *
               C32771) *
              C32585 * C32644 * C32630 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C7754 * C115 + C7748 * C122 + C7755 * C256 + C7749 * C271 +
            C7756 * C257 + C7750 * C272 + C7757 * C1033 + C32966 * C1042) *
               C3602 +
           (C7754 * C123 + C7748 * C136 + C7755 * C270 + C7749 * C286 +
            C7756 * C273 + C7750 * C287 + C7757 * C1041 + C32966 * C1051) *
               C32926 +
           (C7754 * C361 + C7748 * C376 + C7755 * C721 + C7749 * C726 +
            C7756 * C1167 + C7750 * C1179 + C7757 * C1719 + C32966 * C1722) *
               C3603 +
           (C7754 * C375 + C7748 * C391 + C7755 * C727 + C7749 * C736 +
            C7756 * C1178 + C7750 * C1194 + C7757 * C1723 + C32966 * C1728) *
               C32771) *
              C32585 * C32644 * C248 -
          ((C7757 * C6479 + C32966 * C6485 + C7756 * C1723 + C7750 * C1728 +
            C7755 * C1178 + C7749 * C1194 + C7754 * C727 + C7748 * C736) *
               C32771 +
           (C7757 * C6476 + C32966 * C6480 + C7756 * C1719 + C7750 * C1722 +
            C7755 * C1167 + C7749 * C1179 + C7754 * C721 + C7748 * C726) *
               C3603 +
           (C7757 * C1044 + C32966 * C1052 + C7756 * C1041 + C7750 * C1051 +
            C7755 * C273 + C7749 * C287 + C7754 * C270 + C7748 * C286) *
               C32926 +
           (C7757 * C1034 + C32966 * C1043 + C7756 * C1033 + C7750 * C1042 +
            C7755 * C257 + C7749 * C272 + C7754 * C256 + C7748 * C271) *
               C3602) *
              C32585 * C32644 * C249 +
          ((C7754 * C257 + C7748 * C272 + C7755 * C1033 + C7749 * C1042 +
            C7756 * C1034 + C7750 * C1043 + C7757 * C6406 + C32966 * C6409) *
               C3602 +
           (C7754 * C273 + C7748 * C287 + C7755 * C1041 + C7749 * C1051 +
            C7756 * C1044 + C7750 * C1052 + C7757 * C6408 + C32966 * C6412) *
               C32926 +
           (C7754 * C1167 + C7748 * C1179 + C7755 * C1719 + C7749 * C1722 +
            C7756 * C6476 + C7750 * C6480 + C7757 * C6742 + C32966 * C6743) *
               C3603 +
           (C7754 * C1178 + C7748 * C1194 + C7755 * C1723 + C7749 * C1728 +
            C7756 * C6479 + C7750 * C6485 + C7757 * C6744 + C32966 * C6745) *
               C32771) *
              C32585 * C32644 * C250) *
         C32618) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C7754 * C115 + C7748 * C122 + C7755 * C256 + C7749 * C271 +
            C7756 * C257 + C7750 * C272 + C7757 * C1033 + C32966 * C1042) *
               C3602 +
           (C7754 * C123 + C7748 * C136 + C7755 * C270 + C7749 * C286 +
            C7756 * C273 + C7750 * C287 + C7757 * C1041 + C32966 * C1051) *
               C32926 +
           (C9813 + C9814 + C9815 + C9816) * C3603 +
           (C9817 + C9818 + C9819 + C9820) * C32771) *
              C32585 * C354 -
          ((C9821 + C9822 + C9823 + C9824) * C32771 +
           (C9825 + C9826 + C9827 + C9828) * C3603 +
           (C9820 + C9819 + C9818 + C9817) * C32926 +
           (C9816 + C9815 + C9814 + C9813) * C3602) *
              C32585 * C355 +
          ((C9828 + C9827 + C9826 + C9825) * C3602 +
           (C9824 + C9823 + C9822 + C9821) * C32926 +
           (C7754 * C2110 + C7748 * C2119 + C7755 * C2656 + C7749 * C2659 +
            C7756 * C7076 + C7750 * C7080 + C7757 * C7610 + C32966 * C7611) *
               C3603 +
           (C7754 * C2118 + C7748 * C2128 + C7755 * C2660 + C7749 * C2665 +
            C7756 * C7079 + C7750 * C7085 + C7757 * C7612 + C32966 * C7613) *
               C32771) *
              C32585 * C356) *
         C32630 * C32618) /
            (p * q * std::sqrt(p + q));
    d2ee[108] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2784 * C115 + C32925 * C122 + C2785 * C256 + C32729 * C271) *
                 C3602 +
             (C2784 * C123 + C32925 * C136 + C2785 * C270 + C32729 * C286) *
                 C32926 +
             (C4722 + C4723) * C3603 + (C4724 + C4725) * C32771) *
                C854 +
            ((C2819 + C2820) * C3602 + (C2821 + C2822) * C32926 +
             C5150 * C3603 + C5151 * C32771) *
                C855 +
            C4397 * C32945) *
               C601 -
           (((C4726 + C4727) * C32771 + (C4728 + C4729) * C3603 +
             C5152 * C32926 + C5153 * C3602) *
                C32945 +
            ((C4730 + C4731) * C32771 + (C4732 + C4733) * C3603 +
             C5154 * C32926 + C5155 * C3602) *
                C855 +
            ((C4734 + C4735) * C32771 + (C4736 + C4737) * C3603 +
             (C4725 + C4724) * C32926 + (C4723 + C4722) * C3602) *
                C854) *
               C602) *
              C32630 * C481 +
          (((C5150 * C3602 + C5151 * C32926 + (C4733 + C4732) * C3603 +
             (C4731 + C4730) * C32771) *
                C854 +
            (C4391 * C3602 + C4392 * C32926 + (C4729 + C4728) * C3603 +
             (C4727 + C4726) * C32771) *
                C855 +
            ((C3364 + C3363) * C3602 + (C3362 + C3361) * C32926 +
             (C2784 * C365 + C32925 * C383 + C2785 * C2308 + C32729 * C2309) *
                 C3603 +
             (C2784 * C384 + C32925 * C395 + C2785 * C2310 + C32729 * C2311) *
                 C32771) *
                C32945) *
               C602 -
           (((C3361 + C3362) * C32771 + (C3363 + C3364) * C3603 +
             (C2830 + C2829) * C32926 + (C2828 + C2827) * C3602) *
                C32945 +
            (C5152 * C32771 + C5153 * C3603 + (C2826 + C2825) * C32926 +
             (C2824 + C2823) * C3602) *
                C855 +
            (C5154 * C32771 + C5155 * C3603 + (C2822 + C2821) * C32926 +
             (C2820 + C2819) * C3602) *
                C854) *
               C601) *
              C32630 * C482)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C7754 * C115 + C7748 * C122 + C7755 * C256 + C7749 * C271 +
             C7756 * C257 + C7750 * C272 + C7757 * C1033 + C32966 * C1042) *
                C3602 +
            (C7754 * C123 + C7748 * C136 + C7755 * C270 + C7749 * C286 +
             C7756 * C273 + C7750 * C287 + C7757 * C1041 + C32966 * C1051) *
                C32926 +
            (C9813 + C9814 + C9815 + C9816) * C3603 +
            (C9817 + C9818 + C9819 + C9820) * C32771) *
               C32585 * C601 -
           ((C9821 + C9822 + C9823 + C9824) * C32771 +
            (C9825 + C9826 + C9827 + C9828) * C3603 +
            (C9820 + C9819 + C9818 + C9817) * C32926 +
            (C9816 + C9815 + C9814 + C9813) * C3602) *
               C32585 * C602) *
              C32630 * C481 +
          (((C8310 + C8309 + C8308 + C8307) * C3602 +
            (C8306 + C8305 + C8304 + C8303) * C32926 +
            (C7754 * C363 + C7748 * C379 + C7755 * C1170 + C7749 * C1184 +
             C7756 * C1171 + C7750 * C1185 + C7757 * C7292 + C32966 * C7293) *
                C3603 +
            (C7754 * C380 + C7748 * C393 + C7755 * C1186 + C7749 * C1197 +
             C7756 * C1187 + C7750 * C1198 + C7757 * C7294 + C32966 * C7295) *
                C32771) *
               C32585 * C602 -
           ((C8303 + C8304 + C8305 + C8306) * C32771 +
            (C8307 + C8308 + C8309 + C8310) * C3603 +
            (C7798 + C7797 + C7796 + C7795) * C32926 +
            (C7794 + C7793 + C7792 + C7791) * C3602) *
               C32585 * C601) *
              C32630 * C482)) /
            (p * q * std::sqrt(p + q));
    d2ee[109] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C2784 * C115 + C32925 * C122 + C2785 * C256 + C32729 * C271) *
                C3602 +
            (C2784 * C123 + C32925 * C136 + C2785 * C270 + C32729 * C286) *
                C32926 +
            (C2784 * C361 + C32925 * C376 + C2785 * C721 + C32729 * C726) *
                C3603 +
            (C2784 * C375 + C32925 * C391 + C2785 * C727 + C32729 * C736) *
                C32771) *
               C854 +
           ((C2819 + C2820) * C3602 + (C2821 + C2822) * C32926 +
            (C3372 + C3371) * C3603 + (C3370 + C3369) * C32771) *
               C855 +
           C4397 * C32945) *
              C32644 * C32630 * C110 -
          (((C3361 + C3362) * C32771 + (C3363 + C3364) * C3603 +
            (C2830 + C2829) * C32926 + (C2828 + C2827) * C3602) *
               C32945 +
           ((C3365 + C3366) * C32771 + (C3367 + C3368) * C3603 +
            (C2826 + C2825) * C32926 + (C2824 + C2823) * C3602) *
               C855 +
           ((C3369 + C3370) * C32771 + (C3371 + C3372) * C3603 +
            (C2822 + C2821) * C32926 + (C2820 + C2819) * C3602) *
               C854) *
              C32644 * C32630 * C111 +
          (C4397 * C854 +
           (C2837 * C3602 + C2838 * C32926 + (C3364 + C3363) * C3603 +
            (C3362 + C3361) * C32771) *
               C855 +
           ((C2834 + C2833) * C3602 + (C2832 + C2831) * C32926 +
            (C2784 * C357 + C32925 * C368 + C2785 * C725 + C32729 * C734) *
                C3603 +
            (C2784 * C367 + C32925 * C387 + C2785 * C735 + C32729 * C740) *
                C32771) *
               C32945) *
              C32644 * C32630 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C2784 * C115 + C32925 * C122 + C2785 * C256 + C32729 * C271) *
                C3602 +
            (C2784 * C123 + C32925 * C136 + C2785 * C270 + C32729 * C286) *
                C32926 +
            (C2784 * C361 + C32925 * C376 + C2785 * C721 + C32729 * C726) *
                C3603 +
            (C2784 * C375 + C32925 * C391 + C2785 * C727 + C32729 * C736) *
                C32771) *
               C854 +
           ((C2819 + C2820) * C3602 + (C2821 + C2822) * C32926 +
            (C3372 + C3371) * C3603 + (C3370 + C3369) * C32771) *
               C855 +
           C4397 * C32945) *
              C32644 * C248 -
          (((C2785 * C1174 + C32729 * C1192 + C2784 * C731 + C32925 * C738) *
                C32771 +
            (C2785 * C1165 + C32729 * C1175 + C2784 * C723 + C32925 * C730) *
                C3603 +
            (C3199 + C3200) * C32926 + (C3201 + C3202) * C3602) *
               C32945 +
           ((C2785 * C1176 + C32729 * C1193 + C2784 * C729 + C32925 * C737) *
                C32771 +
            (C2785 * C1166 + C32729 * C1177 + C2784 * C722 + C32925 * C728) *
                C3603 +
            (C3203 + C3204) * C32926 + (C3205 + C3206) * C3602) *
               C855 +
           ((C2785 * C1178 + C32729 * C1194 + C2784 * C727 + C32925 * C736) *
                C32771 +
            (C2785 * C1167 + C32729 * C1179 + C2784 * C721 + C32925 * C726) *
                C3603 +
            (C2785 * C273 + C32729 * C287 + C2784 * C270 + C32925 * C286) *
                C32926 +
            (C2785 * C257 + C32729 * C272 + C2784 * C256 + C32925 * C271) *
                C3602) *
               C854) *
              C32644 * C249 +
          (((C2784 * C257 + C32925 * C272 + C2785 * C1033 + C32729 * C1042) *
                C3602 +
            (C2784 * C273 + C32925 * C287 + C2785 * C1041 + C32729 * C1051) *
                C32926 +
            (C2784 * C1167 + C32925 * C1179 + C2785 * C1719 + C32729 * C1722) *
                C3603 +
            (C2784 * C1178 + C32925 * C1194 + C2785 * C1723 + C32729 * C1728) *
                C32771) *
               C854 +
           ((C2784 * C258 + C32925 * C274 + C2785 * C1032 + C32729 * C1040) *
                C3602 +
            (C2784 * C275 + C32925 * C288 + C2785 * C1039 + C32729 * C1050) *
                C32926 +
            (C2784 * C1166 + C32925 * C1177 + C2785 * C1720 + C32729 * C1724) *
                C3603 +
            (C2784 * C1176 + C32925 * C1193 + C2785 * C1725 + C32729 * C1729) *
                C32771) *
               C855 +
           ((C2784 * C259 + C32925 * C276 + C2785 * C1031 + C32729 * C1038) *
                C3602 +
            (C2784 * C277 + C32925 * C289 + C2785 * C1037 + C32729 * C1049) *
                C32926 +
            (C2784 * C1165 + C32925 * C1175 + C2785 * C1721 + C32729 * C1726) *
                C3603 +
            (C2784 * C1174 + C32925 * C1192 + C2785 * C1727 + C32729 * C1730) *
                C32771) *
               C32945) *
              C32644 * C250) *
         C32618) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C7754 * C115 + C7748 * C122 + C7755 * C256 + C7749 * C271 +
            C7756 * C257 + C7750 * C272 + C7757 * C1033 + C32966 * C1042) *
               C3602 +
           (C7754 * C123 + C7748 * C136 + C7755 * C270 + C7749 * C286 +
            C7756 * C273 + C7750 * C287 + C7757 * C1041 + C32966 * C1051) *
               C32926 +
           (C7754 * C361 + C7748 * C376 + C7755 * C721 + C7749 * C726 +
            C7756 * C1167 + C7750 * C1179 + C7757 * C1719 + C32966 * C1722) *
               C3603 +
           (C7754 * C375 + C7748 * C391 + C7755 * C727 + C7749 * C736 +
            C7756 * C1178 + C7750 * C1194 + C7757 * C1723 + C32966 * C1728) *
               C32771) *
              C32585 * C32644 * C32630 * C110 -
          ((C8303 + C8304 + C8305 + C8306) * C32771 +
           (C8307 + C8308 + C8309 + C8310) * C3603 +
           (C7798 + C7797 + C7796 + C7795) * C32926 +
           (C7794 + C7793 + C7792 + C7791) * C3602) *
              C32585 * C32644 * C32630 * C111 +
          ((C7806 + C7805 + C7804 + C7803) * C3602 +
           (C7802 + C7801 + C7800 + C7799) * C32926 +
           (C7754 * C359 + C7748 * C372 + C7755 * C723 + C7749 * C730 +
            C7756 * C1165 + C7750 * C1175 + C7757 * C1721 + C32966 * C1726) *
               C3603 +
           (C7754 * C371 + C7748 * C389 + C7755 * C731 + C7749 * C738 +
            C7756 * C1174 + C7750 * C1192 + C7757 * C1727 + C32966 * C1730) *
               C32771) *
              C32585 * C32644 * C32630 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C7754 * C115 + C7748 * C122 + C7755 * C256 + C7749 * C271 +
            C7756 * C257 + C7750 * C272 + C7757 * C1033 + C32966 * C1042) *
               C3602 +
           (C7754 * C123 + C7748 * C136 + C7755 * C270 + C7749 * C286 +
            C7756 * C273 + C7750 * C287 + C7757 * C1041 + C32966 * C1051) *
               C32926 +
           (C7754 * C361 + C7748 * C376 + C7755 * C721 + C7749 * C726 +
            C7756 * C1167 + C7750 * C1179 + C7757 * C1719 + C32966 * C1722) *
               C3603 +
           (C7754 * C375 + C7748 * C391 + C7755 * C727 + C7749 * C736 +
            C7756 * C1178 + C7750 * C1194 + C7757 * C1723 + C32966 * C1728) *
               C32771) *
              C32585 * C32644 * C248 -
          ((C7757 * C6479 + C32966 * C6485 + C7756 * C1723 + C7750 * C1728 +
            C7755 * C1178 + C7749 * C1194 + C7754 * C727 + C7748 * C736) *
               C32771 +
           (C7757 * C6476 + C32966 * C6480 + C7756 * C1719 + C7750 * C1722 +
            C7755 * C1167 + C7749 * C1179 + C7754 * C721 + C7748 * C726) *
               C3603 +
           (C7757 * C1044 + C32966 * C1052 + C7756 * C1041 + C7750 * C1051 +
            C7755 * C273 + C7749 * C287 + C7754 * C270 + C7748 * C286) *
               C32926 +
           (C7757 * C1034 + C32966 * C1043 + C7756 * C1033 + C7750 * C1042 +
            C7755 * C257 + C7749 * C272 + C7754 * C256 + C7748 * C271) *
               C3602) *
              C32585 * C32644 * C249 +
          ((C7754 * C257 + C7748 * C272 + C7755 * C1033 + C7749 * C1042 +
            C7756 * C1034 + C7750 * C1043 + C7757 * C6406 + C32966 * C6409) *
               C3602 +
           (C7754 * C273 + C7748 * C287 + C7755 * C1041 + C7749 * C1051 +
            C7756 * C1044 + C7750 * C1052 + C7757 * C6408 + C32966 * C6412) *
               C32926 +
           (C7754 * C1167 + C7748 * C1179 + C7755 * C1719 + C7749 * C1722 +
            C7756 * C6476 + C7750 * C6480 + C7757 * C6742 + C32966 * C6743) *
               C3603 +
           (C7754 * C1178 + C7748 * C1194 + C7755 * C1723 + C7749 * C1728 +
            C7756 * C6479 + C7750 * C6485 + C7757 * C6744 + C32966 * C6745) *
               C32771) *
              C32585 * C32644 * C250) *
         C32618) /
            (p * q * std::sqrt(p + q));
    d2ee[110] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C857 * C115 + C32991 * C122 + C858 * C256 + C32979 * C271 +
              C859 * C257 + C32956 * C272) *
                 C114 +
             (C857 * C123 + C32991 * C136 + C858 * C270 + C32979 * C286 +
              C859 * C273 + C32956 * C287) *
                 C32684) *
                C854 +
            ((C897 + C898 + C899) * C114 + (C900 + C901 + C902) * C32684) *
                C855 +
            C921 * C32945) *
               C32644 * C479 -
           (((C1376 + C1377 + C1378) * C32684 +
             (C1379 + C1380 + C1381) * C114) *
                C32945 +
            ((C1382 + C1383 + C1384) * C32684 +
             (C1385 + C1386 + C1387) * C114) *
                C855 +
            ((C859 * C1041 + C32956 * C1051 + C858 * C273 + C32979 * C287 +
              C857 * C270 + C32991 * C286) *
                 C32684 +
             (C859 * C1033 + C32956 * C1042 + C858 * C257 + C32979 * C272 +
              C857 * C256 + C32991 * C271) *
                 C114) *
                C854) *
               C32644 * C480) *
              C481 +
          ((((C1387 + C1386 + C1385) * C114 +
             (C1384 + C1383 + C1382) * C32684) *
                C854 +
            ((C1381 + C1380 + C1379) * C114 +
             (C1378 + C1377 + C1376) * C32684) *
                C855 +
            ((C857 * C253 + C32991 * C265 + C858 * C260 + C32979 * C278 +
              C859 * C1347 + C32956 * C1348) *
                 C114 +
             (C857 * C264 + C32991 * C283 + C858 * C279 + C32979 * C290 +
              C859 * C1349 + C32956 * C1350) *
                 C32684) *
                C32945) *
               C32644 * C480 -
           (((C909 + C910 + C911) * C32684 + (C912 + C913 + C914) * C114) *
                C32945 +
            ((C908 + C907 + C906) * C32684 + (C905 + C904 + C903) * C114) *
                C855 +
            ((C902 + C901 + C900) * C32684 + (C899 + C898 + C897) * C114) *
                C854) *
               C32644 * C479) *
              C482)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C32667 * C122) * C114 +
             (C113 * C123 + C32667 * C136) * C32684) *
                C103 +
            (C174 + C175) * C104 + C184 * C105 + C185 * C106 + C186 * C107) *
               C32644 * C479 -
           ((C512 + C513) * C107 + (C514 + C515) * C106 + (C516 + C517) * C105 +
            (C518 + C519) * C104 +
            ((C113 * C270 + C32667 * C286) * C32684 +
             (C113 * C256 + C32667 * C271) * C114) *
                C103) *
               C32644 * C480) *
              C481 +
          (((C519 + C518) * C103 + (C517 + C516) * C104 + (C515 + C514) * C105 +
            (C513 + C512) * C106 +
            ((C113 * C483 + C32667 * C484) * C114 +
             (C113 * C485 + C32667 * C486) * C32684) *
                C107) *
               C32644 * C480 -
           ((C182 + C183) * C107 + (C181 + C180) * C106 + (C179 + C178) * C105 +
            (C177 + C176) * C104 + (C175 + C174) * C103) *
               C32644 * C479) *
              C482)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C32667 * C122) * C1844 +
             (C113 * C123 + C32667 * C136) * C32992 + C2153 * C1845 +
             C2154 * C32981 + C2155 * C1846 + C2156 * C32959) *
                C854 +
            (C1848 + C1849 + C1850 + C1851 + C1879 + C1880) * C855 +
            C1888 * C32945) *
               C32644 * C479 -
           ((C2341 + C2342 + C2343 + C2344 + C2321 + C2322) * C32945 +
            (C2345 + C2346 + C2347 + C2348 + C2331 + C2332) * C855 +
            ((C113 * C1182 + C32667 * C1195) * C32959 +
             (C113 * C1168 + C32667 * C1180) * C1846 +
             (C113 * C727 + C32667 * C736) * C32981 +
             (C113 * C721 + C32667 * C726) * C1845 +
             (C113 * C270 + C32667 * C286) * C32992 +
             (C113 * C256 + C32667 * C271) * C1844) *
                C854) *
               C32644 * C480) *
              C481 +
          (((C2332 + C2331 + C2348 + C2347 + C2346 + C2345) * C854 +
            (C2322 + C2321 + C2344 + C2343 + C2342 + C2341) * C855 +
            (C507 * C1844 + C506 * C32992 +
             (C113 * C724 + C32667 * C732) * C1845 +
             (C113 * C733 + C32667 * C739) * C32981 +
             (C113 * C2308 + C32667 * C2309) * C1846 +
             (C113 * C2310 + C32667 * C2311) * C32959) *
                C32945) *
               C32644 * C480 -
           ((C1884 + C1885 + C1868 + C1869 + C1870 + C1871) * C32945 +
            (C1883 + C1882 + C1859 + C1858 + C1857 + C1856) * C855 +
            (C1880 + C1879 + C1851 + C1850 + C1849 + C1848) * C854) *
               C32644 * C479) *
              C482)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C5477 * C115 + C5471 * C122 + C5478 * C256 + C5472 * C271 +
              C5479 * C257 + C32956 * C272) *
                 C114 +
             (C5477 * C123 + C5471 * C136 + C5478 * C270 + C5472 * C286 +
              C5479 * C273 + C32956 * C287) *
                 C32684) *
                C32988 +
            ((C5517 + C5518 + C5519) * C114 +
             (C5520 + C5521 + C5522) * C32684) *
                C32975 +
            C5541 * C32945) *
               C32644 * C479 -
           (((C5932 + C5933 + C5934) * C32684 +
             (C5935 + C5936 + C5937) * C114) *
                C32945 +
            ((C5938 + C5939 + C5940) * C32684 +
             (C5941 + C5942 + C5943) * C114) *
                C32975 +
            ((C5479 * C1041 + C32956 * C1051 + C5478 * C273 + C5472 * C287 +
              C5477 * C270 + C5471 * C286) *
                 C32684 +
             (C5479 * C1033 + C32956 * C1042 + C5478 * C257 + C5472 * C272 +
              C5477 * C256 + C5471 * C271) *
                 C114) *
                C32988) *
               C32644 * C480) *
              C481 +
          ((((C5943 + C5942 + C5941) * C114 +
             (C5940 + C5939 + C5938) * C32684) *
                C32988 +
            ((C5937 + C5936 + C5935) * C114 +
             (C5934 + C5933 + C5932) * C32684) *
                C32975 +
            ((C5477 * C253 + C5471 * C265 + C5478 * C260 + C5472 * C278 +
              C5479 * C1347 + C32956 * C1348) *
                 C114 +
             (C5477 * C264 + C5471 * C283 + C5478 * C279 + C5472 * C290 +
              C5479 * C1349 + C32956 * C1350) *
                 C32684) *
                C32945) *
               C32644 * C480 -
           (((C5529 + C5530 + C5531) * C32684 +
             (C5532 + C5533 + C5534) * C114) *
                C32945 +
            ((C5528 + C5527 + C5526) * C32684 +
             (C5525 + C5524 + C5523) * C114) *
                C32975 +
            ((C5522 + C5521 + C5520) * C32684 +
             (C5519 + C5518 + C5517) * C114) *
                C32988) *
               C32644 * C479) *
              C482)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C6339 * C115 + C6333 * C122 + C6340 * C256 + C6334 * C271 +
             C6341 * C257 + C6335 * C272 + C6342 * C1033 + C6336 * C1042 +
             C6343 * C1034 + C6337 * C1043) *
                C114 +
            (C6339 * C123 + C6333 * C136 + C6340 * C270 + C6334 * C286 +
             C6341 * C273 + C6335 * C287 + C6342 * C1041 + C6336 * C1051 +
             C6343 * C1044 + C6337 * C1052) *
                C32684) *
               C32585 * C32644 * C479 -
           ((C6343 * C6408 + C6337 * C6412 + C6342 * C1044 + C6336 * C1052 +
             C6341 * C1041 + C6335 * C1051 + C6340 * C273 + C6334 * C287 +
             C6339 * C270 + C6333 * C286) *
                C32684 +
            (C6343 * C6406 + C6337 * C6409 + C6342 * C1034 + C6336 * C1043 +
             C6341 * C1033 + C6335 * C1042 + C6340 * C257 + C6334 * C272 +
             C6339 * C256 + C6333 * C271) *
                C114) *
               C32585 * C32644 * C480) *
              C481 +
          (((C6339 * C255 + C6333 * C269 + C6340 * C258 + C6334 * C274 +
             C6341 * C1032 + C6335 * C1040 + C6342 * C1035 + C6336 * C1045 +
             C6343 * C6570 + C6337 * C6571) *
                C114 +
            (C6339 * C268 + C6333 * C285 + C6340 * C275 + C6334 * C288 +
             C6341 * C1039 + C6335 * C1050 + C6342 * C1046 + C6336 * C1053 +
             C6343 * C6572 + C6337 * C6573) *
                C32684) *
               C32585 * C32644 * C480 -
           ((C6343 * C1046 + C6337 * C1053 + C6342 * C1039 + C6336 * C1050 +
             C6341 * C275 + C6335 * C288 + C6340 * C268 + C6334 * C285 +
             C6339 * C125 + C6333 * C137) *
                C32684 +
            (C6343 * C1035 + C6337 * C1045 + C6342 * C1032 + C6336 * C1040 +
             C6341 * C258 + C6335 * C274 + C6340 * C255 + C6334 * C269 +
             C6339 * C116 + C6333 * C124) *
                C114) *
               C32585 * C32644 * C479) *
              C482)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C5477 * C115 + C5471 * C122 + C5478 * C256 + C5472 * C271 +
             C5479 * C257 + C32956 * C272) *
                C1844 +
            (C5477 * C123 + C5471 * C136 + C5478 * C270 + C5472 * C286 +
             C5479 * C273 + C32956 * C287) *
                C32992 +
            (C7125 + C7126 + C7127) * C1845 + (C7128 + C7129 + C7130) * C32981 +
            C7145 * C1846 + C7146 * C32959) *
               C32585 * C32644 * C479 -
           ((C5479 * C6483 + C32956 * C6486 + C5478 * C1183 + C5472 * C1196 +
             C5477 * C1182 + C5471 * C1195) *
                C32959 +
            (C5479 * C6477 + C32956 * C6481 + C5478 * C1169 + C5472 * C1181 +
             C5477 * C1168 + C5471 * C1180) *
                C1846 +
            (C5479 * C1723 + C32956 * C1728 + C5478 * C1178 + C5472 * C1194 +
             C5477 * C727 + C5471 * C736) *
                C32981 +
            (C5479 * C1719 + C32956 * C1722 + C5478 * C1167 + C5472 * C1179 +
             C5477 * C721 + C5471 * C726) *
                C1845 +
            (C5479 * C1041 + C32956 * C1051 + C5478 * C273 + C5472 * C287 +
             C5477 * C270 + C5471 * C286) *
                C32992 +
            (C5479 * C1033 + C32956 * C1042 + C5478 * C257 + C5472 * C272 +
             C5477 * C256 + C5471 * C271) *
                C1844) *
               C32585 * C32644 * C480) *
              C481 +
          (((C5943 + C5942 + C5941) * C1844 + (C5940 + C5939 + C5938) * C32992 +
            (C5477 * C722 + C5471 * C728 + C5478 * C1166 + C5472 * C1177 +
             C5479 * C1720 + C32956 * C1724) *
                C1845 +
            (C5477 * C729 + C5471 * C737 + C5478 * C1176 + C5472 * C1193 +
             C5479 * C1725 + C32956 * C1729) *
                C32981 +
            (C5477 * C1170 + C5471 * C1184 + C5478 * C1171 + C5472 * C1185 +
             C5479 * C7292 + C32956 * C7293) *
                C1846 +
            (C5477 * C1186 + C5471 * C1197 + C5478 * C1187 + C5472 * C1198 +
             C5479 * C7294 + C32956 * C7295) *
                C32959) *
               C32585 * C32644 * C480 -
           ((C5479 * C1187 + C32956 * C1198 + C5478 * C1186 + C5472 * C1197 +
             C5477 * C380 + C5471 * C393) *
                C32959 +
            (C5479 * C1171 + C32956 * C1185 + C5478 * C1170 + C5472 * C1184 +
             C5477 * C363 + C5471 * C379) *
                C1846 +
            (C6120 + C6121 + C6122) * C32981 + (C6123 + C6124 + C6125) * C1845 +
            (C5522 + C5521 + C5520) * C32992 +
            (C5519 + C5518 + C5517) * C1844) *
               C32585 * C32644 * C479) *
              C482)) /
            (p * q * std::sqrt(p + q));
    d2ee[111] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C857 * C115 + C32991 * C122 + C858 * C256 + C32979 * C271 +
              C859 * C257 + C32956 * C272) *
                 C114 +
             (C857 * C123 + C32991 * C136 + C858 * C270 + C32979 * C286 +
              C859 * C273 + C32956 * C287) *
                 C32684) *
                C854 +
            ((C897 + C898 + C899) * C114 + (C900 + C901 + C902) * C32684) *
                C855 +
            C921 * C32945) *
               C601 -
           (((C1562 + C1563 + C1564) * C32684 +
             (C1565 + C1566 + C1567) * C114) *
                C32945 +
            ((C1568 + C1569 + C1570) * C32684 +
             (C1571 + C1572 + C1573) * C114) *
                C855 +
            ((C859 * C1178 + C32956 * C1194 + C858 * C727 + C32979 * C736 +
              C857 * C375 + C32991 * C391) *
                 C32684 +
             (C859 * C1167 + C32956 * C1179 + C858 * C721 + C32979 * C726 +
              C857 * C361 + C32991 * C376) *
                 C114) *
                C854) *
               C602) *
              C479 +
          ((((C857 * C721 + C32991 * C726 + C858 * C1167 + C32979 * C1179 +
              C859 * C1719 + C32956 * C1722) *
                 C114 +
             (C857 * C727 + C32991 * C736 + C858 * C1178 + C32979 * C1194 +
              C859 * C1723 + C32956 * C1728) *
                 C32684) *
                C854 +
            ((C857 * C722 + C32991 * C728 + C858 * C1166 + C32979 * C1177 +
              C859 * C1720 + C32956 * C1724) *
                 C114 +
             (C857 * C729 + C32991 * C737 + C858 * C1176 + C32979 * C1193 +
              C859 * C1725 + C32956 * C1729) *
                 C32684) *
                C855 +
            ((C857 * C723 + C32991 * C730 + C858 * C1165 + C32979 * C1175 +
              C859 * C1721 + C32956 * C1726) *
                 C114 +
             (C857 * C731 + C32991 * C738 + C858 * C1174 + C32979 * C1192 +
              C859 * C1727 + C32956 * C1730) *
                 C32684) *
                C32945) *
               C602 -
           (((C1376 + C1377 + C1378) * C32684 +
             (C1379 + C1380 + C1381) * C114) *
                C32945 +
            ((C1382 + C1383 + C1384) * C32684 +
             (C1385 + C1386 + C1387) * C114) *
                C855 +
            ((C859 * C1041 + C32956 * C1051 + C858 * C273 + C32979 * C287 +
              C857 * C270 + C32991 * C286) *
                 C32684 +
             (C859 * C1033 + C32956 * C1042 + C858 * C257 + C32979 * C272 +
              C857 * C256 + C32991 * C271) *
                 C114) *
                C854) *
               C601) *
              C480) *
         C32618) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C32667 * C122) * C114 +
             (C113 * C123 + C32667 * C136) * C32684) *
                C103 +
            (C174 + C175) * C104 + C184 * C105 + C185 * C106 + C186 * C107) *
               C601 -
           ((C632 + C633) * C107 + (C634 + C635) * C106 + (C636 + C637) * C105 +
            (C638 + C639) * C104 +
            ((C113 * C375 + C32667 * C391) * C32684 +
             (C113 * C361 + C32667 * C376) * C114) *
                C103) *
               C602) *
              C479 +
          ((((C113 * C721 + C32667 * C726) * C114 +
             (C113 * C727 + C32667 * C736) * C32684) *
                C103 +
            ((C113 * C722 + C32667 * C728) * C114 +
             (C113 * C729 + C32667 * C737) * C32684) *
                C104 +
            ((C113 * C723 + C32667 * C730) * C114 +
             (C113 * C731 + C32667 * C738) * C32684) *
                C105 +
            ((C113 * C724 + C32667 * C732) * C114 +
             (C113 * C733 + C32667 * C739) * C32684) *
                C106 +
            ((C113 * C725 + C32667 * C734) * C114 +
             (C113 * C735 + C32667 * C740) * C32684) *
                C107) *
               C602 -
           ((C512 + C513) * C107 + (C514 + C515) * C106 + (C516 + C517) * C105 +
            (C518 + C519) * C104 +
            ((C113 * C270 + C32667 * C286) * C32684 +
             (C113 * C256 + C32667 * C271) * C114) *
                C103) *
               C601) *
              C480) *
         C32618) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C32667 * C122) * C1844 +
             (C113 * C123 + C32667 * C136) * C32992 + C2153 * C1845 +
             C2154 * C32981 + C2155 * C1846 + C2156 * C32959) *
                C854 +
            (C1848 + C1849 + C1850 + C1851 + C1879 + C1880) * C855 +
            C1888 * C32945) *
               C601 -
           ((C2499 + C2500 + C2501 + C2502 + C2503 + C2504) * C32945 +
            (C2505 + C2506 + C2507 + C2508 + C2509 + C2510) * C855 +
            (C2161 * C32959 + C2162 * C1846 + C2156 * C32981 + C2155 * C1845 +
             C2154 * C32992 + C2153 * C1844) *
                C854) *
               C602) *
              C479 +
          (((C2677 * C1844 + C2678 * C32992 + C2679 * C1845 + C2680 * C32981 +
             (C113 * C2656 + C32667 * C2659) * C1846 +
             (C113 * C2660 + C32667 * C2665) * C32959) *
                C854 +
            (C2340 * C1844 + C2339 * C32992 + C2338 * C1845 + C2337 * C32981 +
             (C113 * C2657 + C32667 * C2661) * C1846 +
             (C113 * C2662 + C32667 * C2666) * C32959) *
                C855 +
            (C2336 * C1844 + C2335 * C32992 + C2334 * C1845 + C2333 * C32981 +
             (C113 * C2658 + C32667 * C2663) * C1846 +
             (C113 * C2664 + C32667 * C2667) * C32959) *
                C32945) *
               C602 -
           ((C2341 + C2342 + C2343 + C2344 + C2321 + C2322) * C32945 +
            (C2345 + C2346 + C2347 + C2348 + C2331 + C2332) * C855 +
            (C2680 * C32959 + C2679 * C1846 + C2678 * C32981 + C2677 * C1845 +
             (C113 * C270 + C32667 * C286) * C32992 +
             (C113 * C256 + C32667 * C271) * C1844) *
                C854) *
               C601) *
              C480) *
         C32618) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C5477 * C115 + C5471 * C122 + C5478 * C256 + C5472 * C271 +
              C5479 * C257 + C32956 * C272) *
                 C114 +
             (C5477 * C123 + C5471 * C136 + C5478 * C270 + C5472 * C286 +
              C5479 * C273 + C32956 * C287) *
                 C32684) *
                C32988 +
            ((C5517 + C5518 + C5519) * C114 +
             (C5520 + C5521 + C5522) * C32684) *
                C32975 +
            C5541 * C32945) *
               C601 -
           (((C6114 + C6115 + C6116) * C32684 +
             (C6117 + C6118 + C6119) * C114) *
                C32945 +
            ((C6120 + C6121 + C6122) * C32684 +
             (C6123 + C6124 + C6125) * C114) *
                C32975 +
            ((C5479 * C1178 + C32956 * C1194 + C5478 * C727 + C5472 * C736 +
              C5477 * C375 + C5471 * C391) *
                 C32684 +
             (C5479 * C1167 + C32956 * C1179 + C5478 * C721 + C5472 * C726 +
              C5477 * C361 + C5471 * C376) *
                 C114) *
                C32988) *
               C602) *
              C479 +
          ((((C5477 * C721 + C5471 * C726 + C5478 * C1167 + C5472 * C1179 +
              C5479 * C1719 + C32956 * C1722) *
                 C114 +
             (C5477 * C727 + C5471 * C736 + C5478 * C1178 + C5472 * C1194 +
              C5479 * C1723 + C32956 * C1728) *
                 C32684) *
                C32988 +
            ((C5477 * C722 + C5471 * C728 + C5478 * C1166 + C5472 * C1177 +
              C5479 * C1720 + C32956 * C1724) *
                 C114 +
             (C5477 * C729 + C5471 * C737 + C5478 * C1176 + C5472 * C1193 +
              C5479 * C1725 + C32956 * C1729) *
                 C32684) *
                C32975 +
            ((C5477 * C723 + C5471 * C730 + C5478 * C1165 + C5472 * C1175 +
              C5479 * C1721 + C32956 * C1726) *
                 C114 +
             (C5477 * C731 + C5471 * C738 + C5478 * C1174 + C5472 * C1192 +
              C5479 * C1727 + C32956 * C1730) *
                 C32684) *
                C32945) *
               C602 -
           (((C5932 + C5933 + C5934) * C32684 +
             (C5935 + C5936 + C5937) * C114) *
                C32945 +
            ((C5938 + C5939 + C5940) * C32684 +
             (C5941 + C5942 + C5943) * C114) *
                C32975 +
            ((C5479 * C1041 + C32956 * C1051 + C5478 * C273 + C5472 * C287 +
              C5477 * C270 + C5471 * C286) *
                 C32684 +
             (C5479 * C1033 + C32956 * C1042 + C5478 * C257 + C5472 * C272 +
              C5477 * C256 + C5471 * C271) *
                 C114) *
                C32988) *
               C601) *
              C480) *
         C32618) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C6339 * C115 + C6333 * C122 + C6340 * C256 + C6334 * C271 +
             C6341 * C257 + C6335 * C272 + C6342 * C1033 + C6336 * C1042 +
             C6343 * C1034 + C6337 * C1043) *
                C114 +
            (C6339 * C123 + C6333 * C136 + C6340 * C270 + C6334 * C286 +
             C6341 * C273 + C6335 * C287 + C6342 * C1041 + C6336 * C1051 +
             C6343 * C1044 + C6337 * C1052) *
                C32684) *
               C32585 * C601 -
           ((C6343 * C6479 + C6337 * C6485 + C6342 * C1723 + C6336 * C1728 +
             C6341 * C1178 + C6335 * C1194 + C6340 * C727 + C6334 * C736 +
             C6339 * C375 + C6333 * C391) *
                C32684 +
            (C6343 * C6476 + C6337 * C6480 + C6342 * C1719 + C6336 * C1722 +
             C6341 * C1167 + C6335 * C1179 + C6340 * C721 + C6334 * C726 +
             C6339 * C361 + C6333 * C376) *
                C114) *
               C32585 * C602) *
              C479 +
          (((C6339 * C721 + C6333 * C726 + C6340 * C1167 + C6334 * C1179 +
             C6341 * C1719 + C6335 * C1722 + C6342 * C6476 + C6336 * C6480 +
             C6343 * C6742 + C6337 * C6743) *
                C114 +
            (C6339 * C727 + C6333 * C736 + C6340 * C1178 + C6334 * C1194 +
             C6341 * C1723 + C6335 * C1728 + C6342 * C6479 + C6336 * C6485 +
             C6343 * C6744 + C6337 * C6745) *
                C32684) *
               C32585 * C602 -
           ((C6343 * C6408 + C6337 * C6412 + C6342 * C1044 + C6336 * C1052 +
             C6341 * C1041 + C6335 * C1051 + C6340 * C273 + C6334 * C287 +
             C6339 * C270 + C6333 * C286) *
                C32684 +
            (C6343 * C6406 + C6337 * C6409 + C6342 * C1034 + C6336 * C1043 +
             C6341 * C1033 + C6335 * C1042 + C6340 * C257 + C6334 * C272 +
             C6339 * C256 + C6333 * C271) *
                C114) *
               C32585 * C601) *
              C480) *
         C32618) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C5477 * C115 + C5471 * C122 + C5478 * C256 + C5472 * C271 +
             C5479 * C257 + C32956 * C272) *
                C1844 +
            (C5477 * C123 + C5471 * C136 + C5478 * C270 + C5472 * C286 +
             C5479 * C273 + C32956 * C287) *
                C32992 +
            (C7125 + C7126 + C7127) * C1845 + (C7128 + C7129 + C7130) * C32981 +
            C7145 * C1846 + C7146 * C32959) *
               C32585 * C601 -
           ((C7137 + C7138 + C7139) * C32959 + (C7140 + C7141 + C7142) * C1846 +
            (C7136 + C7135 + C7134) * C32981 + (C7133 + C7132 + C7131) * C1845 +
            (C7130 + C7129 + C7128) * C32992 +
            (C7127 + C7126 + C7125) * C1844) *
               C32585 * C602) *
              C479 +
          (((C7639 + C7640 + C7641) * C1844 + (C7642 + C7643 + C7644) * C32992 +
            (C7645 + C7646 + C7647) * C1845 + (C7648 + C7649 + C7650) * C32981 +
            (C5477 * C2656 + C5471 * C2659 + C5478 * C7076 + C5472 * C7080 +
             C5479 * C7610 + C32956 * C7611) *
                C1846 +
            (C5477 * C2660 + C5471 * C2665 + C5478 * C7079 + C5472 * C7085 +
             C5479 * C7612 + C32956 * C7613) *
                C32959) *
               C32585 * C602 -
           ((C7650 + C7649 + C7648) * C32959 + (C7647 + C7646 + C7645) * C1846 +
            (C7644 + C7643 + C7642) * C32981 + (C7641 + C7640 + C7639) * C1845 +
            (C5479 * C1041 + C32956 * C1051 + C5478 * C273 + C5472 * C287 +
             C5477 * C270 + C5471 * C286) *
                C32992 +
            (C5479 * C1033 + C32956 * C1042 + C5478 * C257 + C5472 * C272 +
             C5477 * C256 + C5471 * C271) *
                C1844) *
               C32585 * C601) *
              C480) *
         C32618) /
            (p * q * std::sqrt(p + q));
    d2ee[112] +=
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             ((((C113 * C115 + C32667 * C122) * C114 +
                (C113 * C123 + C32667 * C136) * C32684) *
                   C103 +
               (C174 + C175) * C104 + C184 * C105 + C185 * C106 + C186 * C107) *
                  C32644 * C32630 * C110 -
              ((C182 + C183) * C107 + (C181 + C180) * C106 +
               (C179 + C178) * C105 + (C177 + C176) * C104 +
               (C175 + C174) * C103) *
                  C32644 * C32630 * C111 +
              (C184 * C103 + C185 * C104 + C186 * C105 + (C183 + C182) * C106 +
               ((C113 * C121 + C32667 * C134) * C114 +
                (C113 * C135 + C32667 * C142) * C32684) *
                   C107) *
                  C32644 * C32630 * C112) +
         std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             ((((C113 * C115 + C32667 * C122) * C114 +
                (C113 * C123 + C32667 * C136) * C32684) *
                   C103 +
               (C174 + C175) * C104 + C184 * C105 + C185 * C106 + C186 * C107) *
                  C32644 * C248 -
              (((C113 * C262 + C32667 * C282) * C32684 +
                (C113 * C252 + C32667 * C263) * C114) *
                   C107 +
               ((C113 * C264 + C32667 * C283) * C32684 +
                (C113 * C253 + C32667 * C265) * C114) *
                   C106 +
               ((C113 * C266 + C32667 * C284) * C32684 +
                (C113 * C254 + C32667 * C267) * C114) *
                   C105 +
               ((C113 * C268 + C32667 * C285) * C32684 +
                (C113 * C255 + C32667 * C269) * C114) *
                   C104 +
               ((C113 * C270 + C32667 * C286) * C32684 +
                (C113 * C256 + C32667 * C271) * C114) *
                   C103) *
                  C32644 * C249 +
              (((C113 * C257 + C32667 * C272) * C114 +
                (C113 * C273 + C32667 * C287) * C32684) *
                   C103 +
               ((C113 * C258 + C32667 * C274) * C114 +
                (C113 * C275 + C32667 * C288) * C32684) *
                   C104 +
               ((C113 * C259 + C32667 * C276) * C114 +
                (C113 * C277 + C32667 * C289) * C32684) *
                   C105 +
               ((C113 * C260 + C32667 * C278) * C114 +
                (C113 * C279 + C32667 * C290) * C32684) *
                   C106 +
               ((C113 * C261 + C32667 * C280) * C114 +
                (C113 * C281 + C32667 * C291) * C32684) *
                   C107) *
                  C32644 * C250) *
             C32618) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C32667 * C122) * C114 +
            (C113 * C123 + C32667 * C136) * C32684) *
               C103 +
           (C174 + C175) * C104 + C184 * C105 + C185 * C106 + C186 * C107) *
              C354 -
          (((C113 * C367 + C32667 * C387) * C32684 +
            (C113 * C357 + C32667 * C368) * C114) *
               C107 +
           ((C113 * C369 + C32667 * C388) * C32684 +
            (C113 * C358 + C32667 * C370) * C114) *
               C106 +
           ((C113 * C371 + C32667 * C389) * C32684 +
            (C113 * C359 + C32667 * C372) * C114) *
               C105 +
           ((C113 * C373 + C32667 * C390) * C32684 +
            (C113 * C360 + C32667 * C374) * C114) *
               C104 +
           ((C113 * C375 + C32667 * C391) * C32684 +
            (C113 * C361 + C32667 * C376) * C114) *
               C103) *
              C355 +
          (((C113 * C362 + C32667 * C377) * C114 +
            (C113 * C378 + C32667 * C392) * C32684) *
               C103 +
           ((C113 * C363 + C32667 * C379) * C114 +
            (C113 * C380 + C32667 * C393) * C32684) *
               C104 +
           ((C113 * C364 + C32667 * C381) * C114 +
            (C113 * C382 + C32667 * C394) * C32684) *
               C105 +
           ((C113 * C365 + C32667 * C383) * C114 +
            (C113 * C384 + C32667 * C395) * C32684) *
               C106 +
           ((C113 * C366 + C32667 * C385) * C114 +
            (C113 * C386 + C32667 * C396) * C32684) *
               C107) *
              C356) *
         C32630 * C32618) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C857 * C115 + C32991 * C122 + C858 * C256 + C32979 * C271 +
             C859 * C257 + C32956 * C272) *
                C114 +
            (C857 * C123 + C32991 * C136 + C858 * C270 + C32979 * C286 +
             C859 * C273 + C32956 * C287) *
                C32684) *
               C854 +
           ((C897 + C898 + C899) * C114 + (C900 + C901 + C902) * C32684) *
               C855 +
           C921 * C32945) *
              C32644 * C32630 * C110 -
          (((C909 + C910 + C911) * C32684 + (C912 + C913 + C914) * C114) *
               C32945 +
           ((C908 + C907 + C906) * C32684 + (C905 + C904 + C903) * C114) *
               C855 +
           ((C902 + C901 + C900) * C32684 + (C899 + C898 + C897) * C114) *
               C854) *
              C32644 * C32630 * C111 +
          (C921 * C854 +
           ((C914 + C913 + C912) * C114 + (C911 + C910 + C909) * C32684) *
               C855 +
           ((C857 * C119 + C32991 * C130 + C858 * C252 + C32979 * C263 +
             C859 * C261 + C32956 * C280) *
                C114 +
            (C857 * C131 + C32991 * C140 + C858 * C262 + C32979 * C282 +
             C859 * C281 + C32956 * C291) *
                C32684) *
               C32945) *
              C32644 * C32630 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C857 * C115 + C32991 * C122 + C858 * C256 + C32979 * C271 +
             C859 * C257 + C32956 * C272) *
                C114 +
            (C857 * C123 + C32991 * C136 + C858 * C270 + C32979 * C286 +
             C859 * C273 + C32956 * C287) *
                C32684) *
               C854 +
           ((C897 + C898 + C899) * C114 + (C900 + C901 + C902) * C32684) *
               C855 +
           C921 * C32945) *
              C32644 * C248 -
          (((C859 * C1037 + C32956 * C1049 + C858 * C277 + C32979 * C289 +
             C857 * C266 + C32991 * C284) *
                C32684 +
            (C859 * C1031 + C32956 * C1038 + C858 * C259 + C32979 * C276 +
             C857 * C254 + C32991 * C267) *
                C114) *
               C32945 +
           ((C859 * C1039 + C32956 * C1050 + C858 * C275 + C32979 * C288 +
             C857 * C268 + C32991 * C285) *
                C32684 +
            (C859 * C1032 + C32956 * C1040 + C858 * C258 + C32979 * C274 +
             C857 * C255 + C32991 * C269) *
                C114) *
               C855 +
           ((C859 * C1041 + C32956 * C1051 + C858 * C273 + C32979 * C287 +
             C857 * C270 + C32991 * C286) *
                C32684 +
            (C859 * C1033 + C32956 * C1042 + C858 * C257 + C32979 * C272 +
             C857 * C256 + C32991 * C271) *
                C114) *
               C854) *
              C32644 * C249 +
          (((C857 * C257 + C32991 * C272 + C858 * C1033 + C32979 * C1042 +
             C859 * C1034 + C32956 * C1043) *
                C114 +
            (C857 * C273 + C32991 * C287 + C858 * C1041 + C32979 * C1051 +
             C859 * C1044 + C32956 * C1052) *
                C32684) *
               C854 +
           ((C857 * C258 + C32991 * C274 + C858 * C1032 + C32979 * C1040 +
             C859 * C1035 + C32956 * C1045) *
                C114 +
            (C857 * C275 + C32991 * C288 + C858 * C1039 + C32979 * C1050 +
             C859 * C1046 + C32956 * C1053) *
                C32684) *
               C855 +
           ((C857 * C259 + C32991 * C276 + C858 * C1031 + C32979 * C1038 +
             C859 * C1036 + C32956 * C1047) *
                C114 +
            (C857 * C277 + C32991 * C289 + C858 * C1037 + C32979 * C1049 +
             C859 * C1048 + C32956 * C1054) *
                C32684) *
               C32945) *
              C32644 * C250) *
         C32618) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C857 * C115 + C32991 * C122 + C858 * C256 + C32979 * C271 +
             C859 * C257 + C32956 * C272) *
                C114 +
            (C857 * C123 + C32991 * C136 + C858 * C270 + C32979 * C286 +
             C859 * C273 + C32956 * C287) *
                C32684) *
               C854 +
           ((C897 + C898 + C899) * C114 + (C900 + C901 + C902) * C32684) *
               C855 +
           C921 * C32945) *
              C354 -
          (((C859 * C1174 + C32956 * C1192 + C858 * C731 + C32979 * C738 +
             C857 * C371 + C32991 * C389) *
                C32684 +
            (C859 * C1165 + C32956 * C1175 + C858 * C723 + C32979 * C730 +
             C857 * C359 + C32991 * C372) *
                C114) *
               C32945 +
           ((C859 * C1176 + C32956 * C1193 + C858 * C729 + C32979 * C737 +
             C857 * C373 + C32991 * C390) *
                C32684 +
            (C859 * C1166 + C32956 * C1177 + C858 * C722 + C32979 * C728 +
             C857 * C360 + C32991 * C374) *
                C114) *
               C855 +
           ((C859 * C1178 + C32956 * C1194 + C858 * C727 + C32979 * C736 +
             C857 * C375 + C32991 * C391) *
                C32684 +
            (C859 * C1167 + C32956 * C1179 + C858 * C721 + C32979 * C726 +
             C857 * C361 + C32991 * C376) *
                C114) *
               C854) *
              C355 +
          (((C857 * C362 + C32991 * C377 + C858 * C1168 + C32979 * C1180 +
             C859 * C1169 + C32956 * C1181) *
                C114 +
            (C857 * C378 + C32991 * C392 + C858 * C1182 + C32979 * C1195 +
             C859 * C1183 + C32956 * C1196) *
                C32684) *
               C854 +
           ((C857 * C363 + C32991 * C379 + C858 * C1170 + C32979 * C1184 +
             C859 * C1171 + C32956 * C1185) *
                C114 +
            (C857 * C380 + C32991 * C393 + C858 * C1186 + C32979 * C1197 +
             C859 * C1187 + C32956 * C1198) *
                C32684) *
               C855 +
           ((C857 * C364 + C32991 * C381 + C858 * C1172 + C32979 * C1188 +
             C859 * C1173 + C32956 * C1189) *
                C114 +
            (C857 * C382 + C32991 * C394 + C858 * C1190 + C32979 * C1199 +
             C859 * C1191 + C32956 * C1200) *
                C32684) *
               C32945) *
              C356) *
         C32630 * C32618) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C32667 * C122) * C1844 +
            (C113 * C123 + C32667 * C136) * C32992 +
            (C113 * C361 + C32667 * C376) * C1845 +
            (C113 * C375 + C32667 * C391) * C32981 +
            (C113 * C362 + C32667 * C377) * C1846 +
            (C113 * C378 + C32667 * C392) * C32959) *
               C854 +
           (C1848 + C1849 + C1850 + C1851 + C1879 + C1880) * C855 +
           C1888 * C32945) *
              C32644 * C32630 * C110 -
          ((C1884 + C1885 + C1868 + C1869 + C1870 + C1871) * C32945 +
           (C1883 + C1882 + C1859 + C1858 + C1857 + C1856) * C855 +
           (C1880 + C1879 + C1851 + C1850 + C1849 + C1848) * C854) *
              C32644 * C32630 * C111 +
          (C1888 * C854 +
           (C1871 + C1870 + C1869 + C1868 + C1885 + C1884) * C855 +
           (C170 * C1844 + C171 * C32992 + C625 * C1845 + C624 * C32981 +
            (C113 * C366 + C32667 * C385) * C1846 +
            (C113 * C386 + C32667 * C396) * C32959) *
               C32945) *
              C32644 * C32630 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C32667 * C122) * C1844 +
            (C113 * C123 + C32667 * C136) * C32992 +
            (C113 * C361 + C32667 * C376) * C1845 +
            (C113 * C375 + C32667 * C391) * C32981 +
            (C113 * C362 + C32667 * C377) * C1846 +
            (C113 * C378 + C32667 * C392) * C32959) *
               C854 +
           (C1848 + C1849 + C1850 + C1851 + C1879 + C1880) * C855 +
           C1888 * C32945) *
              C32644 * C248 -
          (((C113 * C1190 + C32667 * C1199) * C32959 +
            (C113 * C1172 + C32667 * C1188) * C1846 +
            (C113 * C731 + C32667 * C738) * C32981 +
            (C113 * C723 + C32667 * C730) * C1845 + C508 * C32992 +
            C509 * C1844) *
               C32945 +
           ((C113 * C1186 + C32667 * C1197) * C32959 +
            (C113 * C1170 + C32667 * C1184) * C1846 +
            (C113 * C729 + C32667 * C737) * C32981 +
            (C113 * C722 + C32667 * C728) * C1845 + C510 * C32992 +
            C511 * C1844) *
               C855 +
           ((C113 * C1182 + C32667 * C1195) * C32959 +
            (C113 * C1168 + C32667 * C1180) * C1846 +
            (C113 * C727 + C32667 * C736) * C32981 +
            (C113 * C721 + C32667 * C726) * C1845 +
            (C113 * C270 + C32667 * C286) * C32992 +
            (C113 * C256 + C32667 * C271) * C1844) *
               C854) *
              C32644 * C249 +
          (((C113 * C257 + C32667 * C272) * C1844 +
            (C113 * C273 + C32667 * C287) * C32992 +
            (C113 * C1167 + C32667 * C1179) * C1845 +
            (C113 * C1178 + C32667 * C1194) * C32981 +
            (C113 * C1169 + C32667 * C1181) * C1846 +
            (C113 * C1183 + C32667 * C1196) * C32959) *
               C854 +
           ((C113 * C258 + C32667 * C274) * C1844 +
            (C113 * C275 + C32667 * C288) * C32992 +
            (C113 * C1166 + C32667 * C1177) * C1845 +
            (C113 * C1176 + C32667 * C1193) * C32981 +
            (C113 * C1171 + C32667 * C1185) * C1846 +
            (C113 * C1187 + C32667 * C1198) * C32959) *
               C855 +
           ((C113 * C259 + C32667 * C276) * C1844 +
            (C113 * C277 + C32667 * C289) * C32992 +
            (C113 * C1165 + C32667 * C1175) * C1845 +
            (C113 * C1174 + C32667 * C1192) * C32981 +
            (C113 * C1173 + C32667 * C1189) * C1846 +
            (C113 * C1191 + C32667 * C1200) * C32959) *
               C32945) *
              C32644 * C250) *
         C32618) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C32667 * C122) * C1844 +
            (C113 * C123 + C32667 * C136) * C32992 + C2153 * C1845 +
            C2154 * C32981 + C2155 * C1846 + C2156 * C32959) *
               C854 +
           (C1848 + C1849 + C1850 + C1851 + C1879 + C1880) * C855 +
           C1888 * C32945) *
              C354 -
          ((C2157 * C32959 + C2158 * C1846 + C1876 * C32981 + C1875 * C1845 +
            C628 * C32992 + C629 * C1844) *
               C32945 +
           (C2159 * C32959 + C2160 * C1846 + C1873 * C32981 + C1872 * C1845 +
            C630 * C32992 + C631 * C1844) *
               C855 +
           (C2161 * C32959 + C2162 * C1846 + C2156 * C32981 + C2155 * C1845 +
            C2154 * C32992 + C2153 * C1844) *
               C854) *
              C355 +
          ((C2155 * C1844 + C2156 * C32992 + C2162 * C1845 + C2161 * C32981 +
            (C113 * C2111 + C32667 * C2120) * C1846 +
            (C113 * C2121 + C32667 * C2129) * C32959) *
               C854 +
           (C1872 * C1844 + C1873 * C32992 + C2160 * C1845 + C2159 * C32981 +
            (C113 * C2112 + C32667 * C2122) * C1846 +
            (C113 * C2123 + C32667 * C2130) * C32959) *
               C855 +
           (C1875 * C1844 + C1876 * C32992 + C2158 * C1845 + C2157 * C32981 +
            (C113 * C2113 + C32667 * C2124) * C1846 +
            (C113 * C2125 + C32667 * C2131) * C32959) *
               C32945) *
              C356) *
         C32630 * C32618) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C5477 * C115 + C5471 * C122 + C5478 * C256 + C5472 * C271 +
             C5479 * C257 + C32956 * C272) *
                C114 +
            (C5477 * C123 + C5471 * C136 + C5478 * C270 + C5472 * C286 +
             C5479 * C273 + C32956 * C287) *
                C32684) *
               C32988 +
           ((C5517 + C5518 + C5519) * C114 + (C5520 + C5521 + C5522) * C32684) *
               C32975 +
           C5541 * C32945) *
              C32644 * C32630 * C110 -
          (((C5529 + C5530 + C5531) * C32684 + (C5532 + C5533 + C5534) * C114) *
               C32945 +
           ((C5528 + C5527 + C5526) * C32684 + (C5525 + C5524 + C5523) * C114) *
               C32975 +
           ((C5522 + C5521 + C5520) * C32684 + (C5519 + C5518 + C5517) * C114) *
               C32988) *
              C32644 * C32630 * C111 +
          (C5541 * C32988 +
           ((C5534 + C5533 + C5532) * C114 + (C5531 + C5530 + C5529) * C32684) *
               C32975 +
           ((C5477 * C119 + C5471 * C130 + C5478 * C252 + C5472 * C263 +
             C5479 * C261 + C32956 * C280) *
                C114 +
            (C5477 * C131 + C5471 * C140 + C5478 * C262 + C5472 * C282 +
             C5479 * C281 + C32956 * C291) *
                C32684) *
               C32945) *
              C32644 * C32630 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C5477 * C115 + C5471 * C122 + C5478 * C256 + C5472 * C271 +
             C5479 * C257 + C32956 * C272) *
                C114 +
            (C5477 * C123 + C5471 * C136 + C5478 * C270 + C5472 * C286 +
             C5479 * C273 + C32956 * C287) *
                C32684) *
               C32988 +
           ((C5517 + C5518 + C5519) * C114 + (C5520 + C5521 + C5522) * C32684) *
               C32975 +
           C5541 * C32945) *
              C32644 * C248 -
          (((C5479 * C1037 + C32956 * C1049 + C5478 * C277 + C5472 * C289 +
             C5477 * C266 + C5471 * C284) *
                C32684 +
            (C5479 * C1031 + C32956 * C1038 + C5478 * C259 + C5472 * C276 +
             C5477 * C254 + C5471 * C267) *
                C114) *
               C32945 +
           ((C5479 * C1039 + C32956 * C1050 + C5478 * C275 + C5472 * C288 +
             C5477 * C268 + C5471 * C285) *
                C32684 +
            (C5479 * C1032 + C32956 * C1040 + C5478 * C258 + C5472 * C274 +
             C5477 * C255 + C5471 * C269) *
                C114) *
               C32975 +
           ((C5479 * C1041 + C32956 * C1051 + C5478 * C273 + C5472 * C287 +
             C5477 * C270 + C5471 * C286) *
                C32684 +
            (C5479 * C1033 + C32956 * C1042 + C5478 * C257 + C5472 * C272 +
             C5477 * C256 + C5471 * C271) *
                C114) *
               C32988) *
              C32644 * C249 +
          (((C5477 * C257 + C5471 * C272 + C5478 * C1033 + C5472 * C1042 +
             C5479 * C1034 + C32956 * C1043) *
                C114 +
            (C5477 * C273 + C5471 * C287 + C5478 * C1041 + C5472 * C1051 +
             C5479 * C1044 + C32956 * C1052) *
                C32684) *
               C32988 +
           ((C5477 * C258 + C5471 * C274 + C5478 * C1032 + C5472 * C1040 +
             C5479 * C1035 + C32956 * C1045) *
                C114 +
            (C5477 * C275 + C5471 * C288 + C5478 * C1039 + C5472 * C1050 +
             C5479 * C1046 + C32956 * C1053) *
                C32684) *
               C32975 +
           ((C5477 * C259 + C5471 * C276 + C5478 * C1031 + C5472 * C1038 +
             C5479 * C1036 + C32956 * C1047) *
                C114 +
            (C5477 * C277 + C5471 * C289 + C5478 * C1037 + C5472 * C1049 +
             C5479 * C1048 + C32956 * C1054) *
                C32684) *
               C32945) *
              C32644 * C250) *
         C32618) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C5477 * C115 + C5471 * C122 + C5478 * C256 + C5472 * C271 +
             C5479 * C257 + C32956 * C272) *
                C114 +
            (C5477 * C123 + C5471 * C136 + C5478 * C270 + C5472 * C286 +
             C5479 * C273 + C32956 * C287) *
                C32684) *
               C32988 +
           ((C5517 + C5518 + C5519) * C114 + (C5520 + C5521 + C5522) * C32684) *
               C32975 +
           C5541 * C32945) *
              C354 -
          (((C5479 * C1174 + C32956 * C1192 + C5478 * C731 + C5472 * C738 +
             C5477 * C371 + C5471 * C389) *
                C32684 +
            (C5479 * C1165 + C32956 * C1175 + C5478 * C723 + C5472 * C730 +
             C5477 * C359 + C5471 * C372) *
                C114) *
               C32945 +
           ((C5479 * C1176 + C32956 * C1193 + C5478 * C729 + C5472 * C737 +
             C5477 * C373 + C5471 * C390) *
                C32684 +
            (C5479 * C1166 + C32956 * C1177 + C5478 * C722 + C5472 * C728 +
             C5477 * C360 + C5471 * C374) *
                C114) *
               C32975 +
           ((C5479 * C1178 + C32956 * C1194 + C5478 * C727 + C5472 * C736 +
             C5477 * C375 + C5471 * C391) *
                C32684 +
            (C5479 * C1167 + C32956 * C1179 + C5478 * C721 + C5472 * C726 +
             C5477 * C361 + C5471 * C376) *
                C114) *
               C32988) *
              C355 +
          (((C5477 * C362 + C5471 * C377 + C5478 * C1168 + C5472 * C1180 +
             C5479 * C1169 + C32956 * C1181) *
                C114 +
            (C5477 * C378 + C5471 * C392 + C5478 * C1182 + C5472 * C1195 +
             C5479 * C1183 + C32956 * C1196) *
                C32684) *
               C32988 +
           ((C5477 * C363 + C5471 * C379 + C5478 * C1170 + C5472 * C1184 +
             C5479 * C1171 + C32956 * C1185) *
                C114 +
            (C5477 * C380 + C5471 * C393 + C5478 * C1186 + C5472 * C1197 +
             C5479 * C1187 + C32956 * C1198) *
                C32684) *
               C32975 +
           ((C5477 * C364 + C5471 * C381 + C5478 * C1172 + C5472 * C1188 +
             C5479 * C1173 + C32956 * C1189) *
                C114 +
            (C5477 * C382 + C5471 * C394 + C5478 * C1190 + C5472 * C1199 +
             C5479 * C1191 + C32956 * C1200) *
                C32684) *
               C32945) *
              C356) *
         C32630 * C32618) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C6339 * C115 + C6333 * C122 + C6340 * C256 + C6334 * C271 +
            C6341 * C257 + C6335 * C272 + C6342 * C1033 + C6336 * C1042 +
            C6343 * C1034 + C6337 * C1043) *
               C114 +
           (C6339 * C123 + C6333 * C136 + C6340 * C270 + C6334 * C286 +
            C6341 * C273 + C6335 * C287 + C6342 * C1041 + C6336 * C1051 +
            C6343 * C1044 + C6337 * C1052) *
               C32684) *
              C32585 * C32644 * C32630 * C110 -
          ((C6343 * C1046 + C6337 * C1053 + C6342 * C1039 + C6336 * C1050 +
            C6341 * C275 + C6335 * C288 + C6340 * C268 + C6334 * C285 +
            C6339 * C125 + C6333 * C137) *
               C32684 +
           (C6343 * C1035 + C6337 * C1045 + C6342 * C1032 + C6336 * C1040 +
            C6341 * C258 + C6335 * C274 + C6340 * C255 + C6334 * C269 +
            C6339 * C116 + C6333 * C124) *
               C114) *
              C32585 * C32644 * C32630 * C111 +
          ((C6339 * C117 + C6333 * C126 + C6340 * C254 + C6334 * C267 +
            C6341 * C259 + C6335 * C276 + C6342 * C1031 + C6336 * C1038 +
            C6343 * C1036 + C6337 * C1047) *
               C114 +
           (C6339 * C127 + C6333 * C138 + C6340 * C266 + C6334 * C284 +
            C6341 * C277 + C6335 * C289 + C6342 * C1037 + C6336 * C1049 +
            C6343 * C1048 + C6337 * C1054) *
               C32684) *
              C32585 * C32644 * C32630 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C6339 * C115 + C6333 * C122 + C6340 * C256 + C6334 * C271 +
            C6341 * C257 + C6335 * C272 + C6342 * C1033 + C6336 * C1042 +
            C6343 * C1034 + C6337 * C1043) *
               C114 +
           (C6339 * C123 + C6333 * C136 + C6340 * C270 + C6334 * C286 +
            C6341 * C273 + C6335 * C287 + C6342 * C1041 + C6336 * C1051 +
            C6343 * C1044 + C6337 * C1052) *
               C32684) *
              C32585 * C32644 * C248 -
          ((C6343 * C6408 + C6337 * C6412 + C6342 * C1044 + C6336 * C1052 +
            C6341 * C1041 + C6335 * C1051 + C6340 * C273 + C6334 * C287 +
            C6339 * C270 + C6333 * C286) *
               C32684 +
           (C6343 * C6406 + C6337 * C6409 + C6342 * C1034 + C6336 * C1043 +
            C6341 * C1033 + C6335 * C1042 + C6340 * C257 + C6334 * C272 +
            C6339 * C256 + C6333 * C271) *
               C114) *
              C32585 * C32644 * C249 +
          ((C6339 * C257 + C6333 * C272 + C6340 * C1033 + C6334 * C1042 +
            C6341 * C1034 + C6335 * C1043 + C6342 * C6406 + C6336 * C6409 +
            C6343 * C6407 + C6337 * C6410) *
               C114 +
           (C6339 * C273 + C6333 * C287 + C6340 * C1041 + C6334 * C1051 +
            C6341 * C1044 + C6335 * C1052 + C6342 * C6408 + C6336 * C6412 +
            C6343 * C6411 + C6337 * C6413) *
               C32684) *
              C32585 * C32644 * C250) *
         C32618) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C6339 * C115 + C6333 * C122 + C6340 * C256 + C6334 * C271 +
            C6341 * C257 + C6335 * C272 + C6342 * C1033 + C6336 * C1042 +
            C6343 * C1034 + C6337 * C1043) *
               C114 +
           (C6339 * C123 + C6333 * C136 + C6340 * C270 + C6334 * C286 +
            C6341 * C273 + C6335 * C287 + C6342 * C1041 + C6336 * C1051 +
            C6343 * C1044 + C6337 * C1052) *
               C32684) *
              C32585 * C354 -
          ((C6343 * C6479 + C6337 * C6485 + C6342 * C1723 + C6336 * C1728 +
            C6341 * C1178 + C6335 * C1194 + C6340 * C727 + C6334 * C736 +
            C6339 * C375 + C6333 * C391) *
               C32684 +
           (C6343 * C6476 + C6337 * C6480 + C6342 * C1719 + C6336 * C1722 +
            C6341 * C1167 + C6335 * C1179 + C6340 * C721 + C6334 * C726 +
            C6339 * C361 + C6333 * C376) *
               C114) *
              C32585 * C355 +
          ((C6339 * C362 + C6333 * C377 + C6340 * C1168 + C6334 * C1180 +
            C6341 * C1169 + C6335 * C1181 + C6342 * C6477 + C6336 * C6481 +
            C6343 * C6478 + C6337 * C6482) *
               C114 +
           (C6339 * C378 + C6333 * C392 + C6340 * C1182 + C6334 * C1195 +
            C6341 * C1183 + C6335 * C1196 + C6342 * C6483 + C6336 * C6486 +
            C6343 * C6484 + C6337 * C6487) *
               C32684) *
              C32585 * C356) *
         C32630 * C32618) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C5477 * C115 + C5471 * C122 + C5478 * C256 + C5472 * C271 +
            C5479 * C257 + C32956 * C272) *
               C1844 +
           (C5477 * C123 + C5471 * C136 + C5478 * C270 + C5472 * C286 +
            C5479 * C273 + C32956 * C287) *
               C32992 +
           (C5477 * C361 + C5471 * C376 + C5478 * C721 + C5472 * C726 +
            C5479 * C1167 + C32956 * C1179) *
               C1845 +
           (C5477 * C375 + C5471 * C391 + C5478 * C727 + C5472 * C736 +
            C5479 * C1178 + C32956 * C1194) *
               C32981 +
           (C5477 * C362 + C5471 * C377 + C5478 * C1168 + C5472 * C1180 +
            C5479 * C1169 + C32956 * C1181) *
               C1846 +
           (C5477 * C378 + C5471 * C392 + C5478 * C1182 + C5472 * C1195 +
            C5479 * C1183 + C32956 * C1196) *
               C32959) *
              C32585 * C32644 * C32630 * C110 -
          ((C5479 * C1187 + C32956 * C1198 + C5478 * C1186 + C5472 * C1197 +
            C5477 * C380 + C5471 * C393) *
               C32959 +
           (C5479 * C1171 + C32956 * C1185 + C5478 * C1170 + C5472 * C1184 +
            C5477 * C363 + C5471 * C379) *
               C1846 +
           (C6120 + C6121 + C6122) * C32981 + (C6123 + C6124 + C6125) * C1845 +
           (C5522 + C5521 + C5520) * C32992 + (C5519 + C5518 + C5517) * C1844) *
              C32585 * C32644 * C32630 * C111 +
          (C5537 * C1844 + C5538 * C32992 + (C6119 + C6118 + C6117) * C1845 +
           (C6116 + C6115 + C6114) * C32981 +
           (C5477 * C364 + C5471 * C381 + C5478 * C1172 + C5472 * C1188 +
            C5479 * C1173 + C32956 * C1189) *
               C1846 +
           (C5477 * C382 + C5471 * C394 + C5478 * C1190 + C5472 * C1199 +
            C5479 * C1191 + C32956 * C1200) *
               C32959) *
              C32585 * C32644 * C32630 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C5477 * C115 + C5471 * C122 + C5478 * C256 + C5472 * C271 +
            C5479 * C257 + C32956 * C272) *
               C1844 +
           (C5477 * C123 + C5471 * C136 + C5478 * C270 + C5472 * C286 +
            C5479 * C273 + C32956 * C287) *
               C32992 +
           (C5477 * C361 + C5471 * C376 + C5478 * C721 + C5472 * C726 +
            C5479 * C1167 + C32956 * C1179) *
               C1845 +
           (C5477 * C375 + C5471 * C391 + C5478 * C727 + C5472 * C736 +
            C5479 * C1178 + C32956 * C1194) *
               C32981 +
           (C5477 * C362 + C5471 * C377 + C5478 * C1168 + C5472 * C1180 +
            C5479 * C1169 + C32956 * C1181) *
               C1846 +
           (C5477 * C378 + C5471 * C392 + C5478 * C1182 + C5472 * C1195 +
            C5479 * C1183 + C32956 * C1196) *
               C32959) *
              C32585 * C32644 * C248 -
          ((C5479 * C6483 + C32956 * C6486 + C5478 * C1183 + C5472 * C1196 +
            C5477 * C1182 + C5471 * C1195) *
               C32959 +
           (C5479 * C6477 + C32956 * C6481 + C5478 * C1169 + C5472 * C1181 +
            C5477 * C1168 + C5471 * C1180) *
               C1846 +
           (C5479 * C1723 + C32956 * C1728 + C5478 * C1178 + C5472 * C1194 +
            C5477 * C727 + C5471 * C736) *
               C32981 +
           (C5479 * C1719 + C32956 * C1722 + C5478 * C1167 + C5472 * C1179 +
            C5477 * C721 + C5471 * C726) *
               C1845 +
           (C5479 * C1041 + C32956 * C1051 + C5478 * C273 + C5472 * C287 +
            C5477 * C270 + C5471 * C286) *
               C32992 +
           (C5479 * C1033 + C32956 * C1042 + C5478 * C257 + C5472 * C272 +
            C5477 * C256 + C5471 * C271) *
               C1844) *
              C32585 * C32644 * C249 +
          ((C5477 * C257 + C5471 * C272 + C5478 * C1033 + C5472 * C1042 +
            C5479 * C1034 + C32956 * C1043) *
               C1844 +
           (C5477 * C273 + C5471 * C287 + C5478 * C1041 + C5472 * C1051 +
            C5479 * C1044 + C32956 * C1052) *
               C32992 +
           (C5477 * C1167 + C5471 * C1179 + C5478 * C1719 + C5472 * C1722 +
            C5479 * C6476 + C32956 * C6480) *
               C1845 +
           (C5477 * C1178 + C5471 * C1194 + C5478 * C1723 + C5472 * C1728 +
            C5479 * C6479 + C32956 * C6485) *
               C32981 +
           (C5477 * C1169 + C5471 * C1181 + C5478 * C6477 + C5472 * C6481 +
            C5479 * C6478 + C32956 * C6482) *
               C1846 +
           (C5477 * C1183 + C5471 * C1196 + C5478 * C6483 + C5472 * C6486 +
            C5479 * C6484 + C32956 * C6487) *
               C32959) *
              C32585 * C32644 * C250) *
         C32618) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C5477 * C115 + C5471 * C122 + C5478 * C256 + C5472 * C271 +
            C5479 * C257 + C32956 * C272) *
               C1844 +
           (C5477 * C123 + C5471 * C136 + C5478 * C270 + C5472 * C286 +
            C5479 * C273 + C32956 * C287) *
               C32992 +
           (C7125 + C7126 + C7127) * C1845 + (C7128 + C7129 + C7130) * C32981 +
           C7145 * C1846 + C7146 * C32959) *
              C32585 * C354 -
          ((C7137 + C7138 + C7139) * C32959 + (C7140 + C7141 + C7142) * C1846 +
           (C7136 + C7135 + C7134) * C32981 + (C7133 + C7132 + C7131) * C1845 +
           (C7130 + C7129 + C7128) * C32992 + (C7127 + C7126 + C7125) * C1844) *
              C32585 * C355 +
          (C7145 * C1844 + C7146 * C32992 + (C7142 + C7141 + C7140) * C1845 +
           (C7139 + C7138 + C7137) * C32981 +
           (C5477 * C2111 + C5471 * C2120 + C5478 * C7077 + C5472 * C7081 +
            C5479 * C7078 + C32956 * C7082) *
               C1846 +
           (C5477 * C2121 + C5471 * C2129 + C5478 * C7083 + C5472 * C7086 +
            C5479 * C7084 + C32956 * C7087) *
               C32959) *
              C32585 * C356) *
         C32630 * C32618) /
            (p * q * std::sqrt(p + q));
    d2ee[113] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C857 * C115 + C32991 * C122 + C858 * C256 + C32979 * C271 +
              C859 * C257 + C32956 * C272) *
                 C114 +
             (C857 * C123 + C32991 * C136 + C858 * C270 + C32979 * C286 +
              C859 * C273 + C32956 * C287) *
                 C32684) *
                C854 +
            ((C897 + C898 + C899) * C114 + (C900 + C901 + C902) * C32684) *
                C855 +
            C921 * C32945) *
               C601 -
           (((C1562 + C1563 + C1564) * C32684 +
             (C1565 + C1566 + C1567) * C114) *
                C32945 +
            ((C1568 + C1569 + C1570) * C32684 +
             (C1571 + C1572 + C1573) * C114) *
                C855 +
            ((C859 * C1178 + C32956 * C1194 + C858 * C727 + C32979 * C736 +
              C857 * C375 + C32991 * C391) *
                 C32684 +
             (C859 * C1167 + C32956 * C1179 + C858 * C721 + C32979 * C726 +
              C857 * C361 + C32991 * C376) *
                 C114) *
                C854) *
               C602) *
              C32630 * C481 +
          ((((C1573 + C1572 + C1571) * C114 +
             (C1570 + C1569 + C1568) * C32684) *
                C854 +
            ((C1567 + C1566 + C1565) * C114 +
             (C1564 + C1563 + C1562) * C32684) *
                C855 +
            ((C857 * C358 + C32991 * C370 + C858 * C724 + C32979 * C732 +
              C859 * C1533 + C32956 * C1534) *
                 C114 +
             (C857 * C369 + C32991 * C388 + C858 * C733 + C32979 * C739 +
              C859 * C1535 + C32956 * C1536) *
                 C32684) *
                C32945) *
               C602 -
           (((C909 + C910 + C911) * C32684 + (C912 + C913 + C914) * C114) *
                C32945 +
            ((C908 + C907 + C906) * C32684 + (C905 + C904 + C903) * C114) *
                C855 +
            ((C902 + C901 + C900) * C32684 + (C899 + C898 + C897) * C114) *
                C854) *
               C601) *
              C32630 * C482)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C32667 * C122) * C114 +
             (C113 * C123 + C32667 * C136) * C32684) *
                C103 +
            (C174 + C175) * C104 + C184 * C105 + C185 * C106 + C186 * C107) *
               C601 -
           ((C632 + C633) * C107 + (C634 + C635) * C106 + (C636 + C637) * C105 +
            (C638 + C639) * C104 +
            ((C113 * C375 + C32667 * C391) * C32684 +
             (C113 * C361 + C32667 * C376) * C114) *
                C103) *
               C602) *
              C32630 * C481 +
          (((C639 + C638) * C103 + (C637 + C636) * C104 + (C635 + C634) * C105 +
            (C633 + C632) * C106 +
            ((C113 * C603 + C32667 * C604) * C114 +
             (C113 * C605 + C32667 * C606) * C32684) *
                C107) *
               C602 -
           ((C182 + C183) * C107 + (C181 + C180) * C106 + (C179 + C178) * C105 +
            (C177 + C176) * C104 + (C175 + C174) * C103) *
               C601) *
              C32630 * C482)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C32667 * C122) * C1844 +
             (C113 * C123 + C32667 * C136) * C32992 + C2153 * C1845 +
             C2154 * C32981 + C2155 * C1846 + C2156 * C32959) *
                C854 +
            (C1848 + C1849 + C1850 + C1851 + C1879 + C1880) * C855 +
            C1888 * C32945) *
               C601 -
           ((C2499 + C2500 + C2501 + C2502 + C2503 + C2504) * C32945 +
            (C2505 + C2506 + C2507 + C2508 + C2509 + C2510) * C855 +
            (C2161 * C32959 + C2162 * C1846 + C2156 * C32981 + C2155 * C1845 +
             C2154 * C32992 + C2153 * C1844) *
                C854) *
               C602) *
              C32630 * C481 +
          (((C2510 + C2509 + C2508 + C2507 + C2506 + C2505) * C854 +
            (C2504 + C2503 + C2502 + C2501 + C2500 + C2499) * C855 +
            (C627 * C1844 + C626 * C32992 + C1878 * C1845 + C1877 * C32981 +
             (C113 * C2494 + C32667 * C2495) * C1846 +
             (C113 * C2496 + C32667 * C2497) * C32959) *
                C32945) *
               C602 -
           ((C1884 + C1885 + C1868 + C1869 + C1870 + C1871) * C32945 +
            (C1883 + C1882 + C1859 + C1858 + C1857 + C1856) * C855 +
            (C1880 + C1879 + C1851 + C1850 + C1849 + C1848) * C854) *
               C601) *
              C32630 * C482)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C5477 * C115 + C5471 * C122 + C5478 * C256 + C5472 * C271 +
              C5479 * C257 + C32956 * C272) *
                 C114 +
             (C5477 * C123 + C5471 * C136 + C5478 * C270 + C5472 * C286 +
              C5479 * C273 + C32956 * C287) *
                 C32684) *
                C32988 +
            ((C5517 + C5518 + C5519) * C114 +
             (C5520 + C5521 + C5522) * C32684) *
                C32975 +
            C5541 * C32945) *
               C601 -
           (((C6114 + C6115 + C6116) * C32684 +
             (C6117 + C6118 + C6119) * C114) *
                C32945 +
            ((C6120 + C6121 + C6122) * C32684 +
             (C6123 + C6124 + C6125) * C114) *
                C32975 +
            ((C5479 * C1178 + C32956 * C1194 + C5478 * C727 + C5472 * C736 +
              C5477 * C375 + C5471 * C391) *
                 C32684 +
             (C5479 * C1167 + C32956 * C1179 + C5478 * C721 + C5472 * C726 +
              C5477 * C361 + C5471 * C376) *
                 C114) *
                C32988) *
               C602) *
              C32630 * C481 +
          ((((C6125 + C6124 + C6123) * C114 +
             (C6122 + C6121 + C6120) * C32684) *
                C32988 +
            ((C6119 + C6118 + C6117) * C114 +
             (C6116 + C6115 + C6114) * C32684) *
                C32975 +
            ((C5477 * C358 + C5471 * C370 + C5478 * C724 + C5472 * C732 +
              C5479 * C1533 + C32956 * C1534) *
                 C114 +
             (C5477 * C369 + C5471 * C388 + C5478 * C733 + C5472 * C739 +
              C5479 * C1535 + C32956 * C1536) *
                 C32684) *
                C32945) *
               C602 -
           (((C5529 + C5530 + C5531) * C32684 +
             (C5532 + C5533 + C5534) * C114) *
                C32945 +
            ((C5528 + C5527 + C5526) * C32684 +
             (C5525 + C5524 + C5523) * C114) *
                C32975 +
            ((C5522 + C5521 + C5520) * C32684 +
             (C5519 + C5518 + C5517) * C114) *
                C32988) *
               C601) *
              C32630 * C482)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C6339 * C115 + C6333 * C122 + C6340 * C256 + C6334 * C271 +
             C6341 * C257 + C6335 * C272 + C6342 * C1033 + C6336 * C1042 +
             C6343 * C1034 + C6337 * C1043) *
                C114 +
            (C6339 * C123 + C6333 * C136 + C6340 * C270 + C6334 * C286 +
             C6341 * C273 + C6335 * C287 + C6342 * C1041 + C6336 * C1051 +
             C6343 * C1044 + C6337 * C1052) *
                C32684) *
               C32585 * C601 -
           ((C6343 * C6479 + C6337 * C6485 + C6342 * C1723 + C6336 * C1728 +
             C6341 * C1178 + C6335 * C1194 + C6340 * C727 + C6334 * C736 +
             C6339 * C375 + C6333 * C391) *
                C32684 +
            (C6343 * C6476 + C6337 * C6480 + C6342 * C1719 + C6336 * C1722 +
             C6341 * C1167 + C6335 * C1179 + C6340 * C721 + C6334 * C726 +
             C6339 * C361 + C6333 * C376) *
                C114) *
               C32585 * C602) *
              C32630 * C481 +
          (((C6339 * C360 + C6333 * C374 + C6340 * C722 + C6334 * C728 +
             C6341 * C1166 + C6335 * C1177 + C6342 * C1720 + C6336 * C1724 +
             C6343 * C6656 + C6337 * C6657) *
                C114 +
            (C6339 * C373 + C6333 * C390 + C6340 * C729 + C6334 * C737 +
             C6341 * C1176 + C6335 * C1193 + C6342 * C1725 + C6336 * C1729 +
             C6343 * C6658 + C6337 * C6659) *
                C32684) *
               C32585 * C602 -
           ((C6343 * C1046 + C6337 * C1053 + C6342 * C1039 + C6336 * C1050 +
             C6341 * C275 + C6335 * C288 + C6340 * C268 + C6334 * C285 +
             C6339 * C125 + C6333 * C137) *
                C32684 +
            (C6343 * C1035 + C6337 * C1045 + C6342 * C1032 + C6336 * C1040 +
             C6341 * C258 + C6335 * C274 + C6340 * C255 + C6334 * C269 +
             C6339 * C116 + C6333 * C124) *
                C114) *
               C32585 * C601) *
              C32630 * C482)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C5477 * C115 + C5471 * C122 + C5478 * C256 + C5472 * C271 +
             C5479 * C257 + C32956 * C272) *
                C1844 +
            (C5477 * C123 + C5471 * C136 + C5478 * C270 + C5472 * C286 +
             C5479 * C273 + C32956 * C287) *
                C32992 +
            (C7125 + C7126 + C7127) * C1845 + (C7128 + C7129 + C7130) * C32981 +
            C7145 * C1846 + C7146 * C32959) *
               C32585 * C601 -
           ((C7137 + C7138 + C7139) * C32959 + (C7140 + C7141 + C7142) * C1846 +
            (C7136 + C7135 + C7134) * C32981 + (C7133 + C7132 + C7131) * C1845 +
            (C7130 + C7129 + C7128) * C32992 +
            (C7127 + C7126 + C7125) * C1844) *
               C32585 * C602) *
              C32630 * C481 +
          (((C6125 + C6124 + C6123) * C1844 + (C6122 + C6121 + C6120) * C32992 +
            (C7459 + C7460 + C7461) * C1845 + (C7462 + C7463 + C7464) * C32981 +
            (C5477 * C2109 + C5471 * C2117 + C5478 * C2657 + C5472 * C2661 +
             C5479 * C7442 + C32956 * C7443) *
                C1846 +
            (C5477 * C2116 + C5471 * C2127 + C5478 * C2662 + C5472 * C2666 +
             C5479 * C7444 + C32956 * C7445) *
                C32959) *
               C32585 * C602 -
           ((C7464 + C7463 + C7462) * C32959 + (C7461 + C7460 + C7459) * C1846 +
            (C6120 + C6121 + C6122) * C32981 + (C6123 + C6124 + C6125) * C1845 +
            (C5522 + C5521 + C5520) * C32992 +
            (C5519 + C5518 + C5517) * C1844) *
               C32585 * C601) *
              C32630 * C482)) /
            (p * q * std::sqrt(p + q));
    d2ee[114] +=
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C32667 * C122) * C114 +
            (C113 * C123 + C32667 * C136) * C32684) *
               C103 +
           (C174 + C175) * C104 + C184 * C105 + C185 * C106 + C186 * C107) *
              C32644 * C248 -
          (((C113 * C262 + C32667 * C282) * C32684 +
            (C113 * C252 + C32667 * C263) * C114) *
               C107 +
           ((C113 * C264 + C32667 * C283) * C32684 +
            (C113 * C253 + C32667 * C265) * C114) *
               C106 +
           ((C113 * C266 + C32667 * C284) * C32684 +
            (C113 * C254 + C32667 * C267) * C114) *
               C105 +
           ((C113 * C268 + C32667 * C285) * C32684 +
            (C113 * C255 + C32667 * C269) * C114) *
               C104 +
           ((C113 * C270 + C32667 * C286) * C32684 +
            (C113 * C256 + C32667 * C271) * C114) *
               C103) *
              C32644 * C249 +
          (((C113 * C257 + C32667 * C272) * C114 +
            (C113 * C273 + C32667 * C287) * C32684) *
               C103 +
           ((C113 * C258 + C32667 * C274) * C114 +
            (C113 * C275 + C32667 * C288) * C32684) *
               C104 +
           ((C113 * C259 + C32667 * C276) * C114 +
            (C113 * C277 + C32667 * C289) * C32684) *
               C105 +
           ((C113 * C260 + C32667 * C278) * C114 +
            (C113 * C279 + C32667 * C290) * C32684) *
               C106 +
           ((C113 * C261 + C32667 * C280) * C114 +
            (C113 * C281 + C32667 * C291) * C32684) *
               C107) *
              C32644 * C250) *
         C32618) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C32667 * C122) * C114 +
            (C113 * C123 + C32667 * C136) * C32684) *
               C103 +
           (C174 + C175) * C104 + C184 * C105 + C185 * C106 + C186 * C107) *
              C32644 * C32630 * C110 -
          ((C182 + C183) * C107 + (C181 + C180) * C106 + (C179 + C178) * C105 +
           (C177 + C176) * C104 + (C175 + C174) * C103) *
              C32644 * C32630 * C111 +
          (C184 * C103 + C185 * C104 + C186 * C105 + (C183 + C182) * C106 +
           ((C113 * C121 + C32667 * C134) * C114 +
            (C113 * C135 + C32667 * C142) * C32684) *
               C107) *
              C32644 * C32630 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C857 * C115 + C32991 * C122 + C858 * C256 + C32979 * C271 +
             C859 * C257 + C32956 * C272) *
                C114 +
            (C857 * C123 + C32991 * C136 + C858 * C270 + C32979 * C286 +
             C859 * C273 + C32956 * C287) *
                C32684) *
               C854 +
           ((C897 + C898 + C899) * C114 + (C900 + C901 + C902) * C32684) *
               C855 +
           C921 * C32945) *
              C32644 * C32630 * C110 -
          (((C909 + C910 + C911) * C32684 + (C912 + C913 + C914) * C114) *
               C32945 +
           ((C908 + C907 + C906) * C32684 + (C905 + C904 + C903) * C114) *
               C855 +
           ((C902 + C901 + C900) * C32684 + (C899 + C898 + C897) * C114) *
               C854) *
              C32644 * C32630 * C111 +
          (C921 * C854 +
           ((C914 + C913 + C912) * C114 + (C911 + C910 + C909) * C32684) *
               C855 +
           ((C857 * C119 + C32991 * C130 + C858 * C252 + C32979 * C263 +
             C859 * C261 + C32956 * C280) *
                C114 +
            (C857 * C131 + C32991 * C140 + C858 * C262 + C32979 * C282 +
             C859 * C281 + C32956 * C291) *
                C32684) *
               C32945) *
              C32644 * C32630 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C857 * C115 + C32991 * C122 + C858 * C256 + C32979 * C271 +
             C859 * C257 + C32956 * C272) *
                C114 +
            (C857 * C123 + C32991 * C136 + C858 * C270 + C32979 * C286 +
             C859 * C273 + C32956 * C287) *
                C32684) *
               C854 +
           ((C897 + C898 + C899) * C114 + (C900 + C901 + C902) * C32684) *
               C855 +
           C921 * C32945) *
              C32644 * C248 -
          (((C859 * C1037 + C32956 * C1049 + C858 * C277 + C32979 * C289 +
             C857 * C266 + C32991 * C284) *
                C32684 +
            (C859 * C1031 + C32956 * C1038 + C858 * C259 + C32979 * C276 +
             C857 * C254 + C32991 * C267) *
                C114) *
               C32945 +
           ((C859 * C1039 + C32956 * C1050 + C858 * C275 + C32979 * C288 +
             C857 * C268 + C32991 * C285) *
                C32684 +
            (C859 * C1032 + C32956 * C1040 + C858 * C258 + C32979 * C274 +
             C857 * C255 + C32991 * C269) *
                C114) *
               C855 +
           ((C859 * C1041 + C32956 * C1051 + C858 * C273 + C32979 * C287 +
             C857 * C270 + C32991 * C286) *
                C32684 +
            (C859 * C1033 + C32956 * C1042 + C858 * C257 + C32979 * C272 +
             C857 * C256 + C32991 * C271) *
                C114) *
               C854) *
              C32644 * C249 +
          (((C857 * C257 + C32991 * C272 + C858 * C1033 + C32979 * C1042 +
             C859 * C1034 + C32956 * C1043) *
                C114 +
            (C857 * C273 + C32991 * C287 + C858 * C1041 + C32979 * C1051 +
             C859 * C1044 + C32956 * C1052) *
                C32684) *
               C854 +
           ((C857 * C258 + C32991 * C274 + C858 * C1032 + C32979 * C1040 +
             C859 * C1035 + C32956 * C1045) *
                C114 +
            (C857 * C275 + C32991 * C288 + C858 * C1039 + C32979 * C1050 +
             C859 * C1046 + C32956 * C1053) *
                C32684) *
               C855 +
           ((C857 * C259 + C32991 * C276 + C858 * C1031 + C32979 * C1038 +
             C859 * C1036 + C32956 * C1047) *
                C114 +
            (C857 * C277 + C32991 * C289 + C858 * C1037 + C32979 * C1049 +
             C859 * C1048 + C32956 * C1054) *
                C32684) *
               C32945) *
              C32644 * C250) *
         C32618) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C32667 * C122) * C1844 +
            (C113 * C123 + C32667 * C136) * C32992 +
            (C113 * C361 + C32667 * C376) * C1845 +
            (C113 * C375 + C32667 * C391) * C32981 +
            (C113 * C362 + C32667 * C377) * C1846 +
            (C113 * C378 + C32667 * C392) * C32959) *
               C854 +
           (C1848 + C1849 + C1850 + C1851 + C1879 + C1880) * C855 +
           C1888 * C32945) *
              C32644 * C32630 * C110 -
          ((C1884 + C1885 + C1868 + C1869 + C1870 + C1871) * C32945 +
           (C1883 + C1882 + C1859 + C1858 + C1857 + C1856) * C855 +
           (C1880 + C1879 + C1851 + C1850 + C1849 + C1848) * C854) *
              C32644 * C32630 * C111 +
          (C1888 * C854 +
           (C1871 + C1870 + C1869 + C1868 + C1885 + C1884) * C855 +
           (C170 * C1844 + C171 * C32992 + C625 * C1845 + C624 * C32981 +
            (C113 * C366 + C32667 * C385) * C1846 +
            (C113 * C386 + C32667 * C396) * C32959) *
               C32945) *
              C32644 * C32630 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C32667 * C122) * C1844 +
            (C113 * C123 + C32667 * C136) * C32992 +
            (C113 * C361 + C32667 * C376) * C1845 +
            (C113 * C375 + C32667 * C391) * C32981 +
            (C113 * C362 + C32667 * C377) * C1846 +
            (C113 * C378 + C32667 * C392) * C32959) *
               C854 +
           (C1848 + C1849 + C1850 + C1851 + C1879 + C1880) * C855 +
           C1888 * C32945) *
              C32644 * C248 -
          (((C113 * C1190 + C32667 * C1199) * C32959 +
            (C113 * C1172 + C32667 * C1188) * C1846 +
            (C113 * C731 + C32667 * C738) * C32981 +
            (C113 * C723 + C32667 * C730) * C1845 + C508 * C32992 +
            C509 * C1844) *
               C32945 +
           ((C113 * C1186 + C32667 * C1197) * C32959 +
            (C113 * C1170 + C32667 * C1184) * C1846 +
            (C113 * C729 + C32667 * C737) * C32981 +
            (C113 * C722 + C32667 * C728) * C1845 + C510 * C32992 +
            C511 * C1844) *
               C855 +
           ((C113 * C1182 + C32667 * C1195) * C32959 +
            (C113 * C1168 + C32667 * C1180) * C1846 +
            (C113 * C727 + C32667 * C736) * C32981 +
            (C113 * C721 + C32667 * C726) * C1845 +
            (C113 * C270 + C32667 * C286) * C32992 +
            (C113 * C256 + C32667 * C271) * C1844) *
               C854) *
              C32644 * C249 +
          (((C113 * C257 + C32667 * C272) * C1844 +
            (C113 * C273 + C32667 * C287) * C32992 +
            (C113 * C1167 + C32667 * C1179) * C1845 +
            (C113 * C1178 + C32667 * C1194) * C32981 +
            (C113 * C1169 + C32667 * C1181) * C1846 +
            (C113 * C1183 + C32667 * C1196) * C32959) *
               C854 +
           ((C113 * C258 + C32667 * C274) * C1844 +
            (C113 * C275 + C32667 * C288) * C32992 +
            (C113 * C1166 + C32667 * C1177) * C1845 +
            (C113 * C1176 + C32667 * C1193) * C32981 +
            (C113 * C1171 + C32667 * C1185) * C1846 +
            (C113 * C1187 + C32667 * C1198) * C32959) *
               C855 +
           ((C113 * C259 + C32667 * C276) * C1844 +
            (C113 * C277 + C32667 * C289) * C32992 +
            (C113 * C1165 + C32667 * C1175) * C1845 +
            (C113 * C1174 + C32667 * C1192) * C32981 +
            (C113 * C1173 + C32667 * C1189) * C1846 +
            (C113 * C1191 + C32667 * C1200) * C32959) *
               C32945) *
              C32644 * C250) *
         C32618) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C5477 * C115 + C5471 * C122 + C5478 * C256 + C5472 * C271 +
             C5479 * C257 + C32956 * C272) *
                C114 +
            (C5477 * C123 + C5471 * C136 + C5478 * C270 + C5472 * C286 +
             C5479 * C273 + C32956 * C287) *
                C32684) *
               C32988 +
           ((C5517 + C5518 + C5519) * C114 + (C5520 + C5521 + C5522) * C32684) *
               C32975 +
           C5541 * C32945) *
              C32644 * C32630 * C110 -
          (((C5529 + C5530 + C5531) * C32684 + (C5532 + C5533 + C5534) * C114) *
               C32945 +
           ((C5528 + C5527 + C5526) * C32684 + (C5525 + C5524 + C5523) * C114) *
               C32975 +
           ((C5522 + C5521 + C5520) * C32684 + (C5519 + C5518 + C5517) * C114) *
               C32988) *
              C32644 * C32630 * C111 +
          (C5541 * C32988 +
           ((C5534 + C5533 + C5532) * C114 + (C5531 + C5530 + C5529) * C32684) *
               C32975 +
           ((C5477 * C119 + C5471 * C130 + C5478 * C252 + C5472 * C263 +
             C5479 * C261 + C32956 * C280) *
                C114 +
            (C5477 * C131 + C5471 * C140 + C5478 * C262 + C5472 * C282 +
             C5479 * C281 + C32956 * C291) *
                C32684) *
               C32945) *
              C32644 * C32630 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C5477 * C115 + C5471 * C122 + C5478 * C256 + C5472 * C271 +
             C5479 * C257 + C32956 * C272) *
                C114 +
            (C5477 * C123 + C5471 * C136 + C5478 * C270 + C5472 * C286 +
             C5479 * C273 + C32956 * C287) *
                C32684) *
               C32988 +
           ((C5517 + C5518 + C5519) * C114 + (C5520 + C5521 + C5522) * C32684) *
               C32975 +
           C5541 * C32945) *
              C32644 * C248 -
          (((C5479 * C1037 + C32956 * C1049 + C5478 * C277 + C5472 * C289 +
             C5477 * C266 + C5471 * C284) *
                C32684 +
            (C5479 * C1031 + C32956 * C1038 + C5478 * C259 + C5472 * C276 +
             C5477 * C254 + C5471 * C267) *
                C114) *
               C32945 +
           ((C5479 * C1039 + C32956 * C1050 + C5478 * C275 + C5472 * C288 +
             C5477 * C268 + C5471 * C285) *
                C32684 +
            (C5479 * C1032 + C32956 * C1040 + C5478 * C258 + C5472 * C274 +
             C5477 * C255 + C5471 * C269) *
                C114) *
               C32975 +
           ((C5479 * C1041 + C32956 * C1051 + C5478 * C273 + C5472 * C287 +
             C5477 * C270 + C5471 * C286) *
                C32684 +
            (C5479 * C1033 + C32956 * C1042 + C5478 * C257 + C5472 * C272 +
             C5477 * C256 + C5471 * C271) *
                C114) *
               C32988) *
              C32644 * C249 +
          (((C5477 * C257 + C5471 * C272 + C5478 * C1033 + C5472 * C1042 +
             C5479 * C1034 + C32956 * C1043) *
                C114 +
            (C5477 * C273 + C5471 * C287 + C5478 * C1041 + C5472 * C1051 +
             C5479 * C1044 + C32956 * C1052) *
                C32684) *
               C32988 +
           ((C5477 * C258 + C5471 * C274 + C5478 * C1032 + C5472 * C1040 +
             C5479 * C1035 + C32956 * C1045) *
                C114 +
            (C5477 * C275 + C5471 * C288 + C5478 * C1039 + C5472 * C1050 +
             C5479 * C1046 + C32956 * C1053) *
                C32684) *
               C32975 +
           ((C5477 * C259 + C5471 * C276 + C5478 * C1031 + C5472 * C1038 +
             C5479 * C1036 + C32956 * C1047) *
                C114 +
            (C5477 * C277 + C5471 * C289 + C5478 * C1037 + C5472 * C1049 +
             C5479 * C1048 + C32956 * C1054) *
                C32684) *
               C32945) *
              C32644 * C250) *
         C32618) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C6339 * C115 + C6333 * C122 + C6340 * C256 + C6334 * C271 +
            C6341 * C257 + C6335 * C272 + C6342 * C1033 + C6336 * C1042 +
            C6343 * C1034 + C6337 * C1043) *
               C114 +
           (C6339 * C123 + C6333 * C136 + C6340 * C270 + C6334 * C286 +
            C6341 * C273 + C6335 * C287 + C6342 * C1041 + C6336 * C1051 +
            C6343 * C1044 + C6337 * C1052) *
               C32684) *
              C32585 * C32644 * C32630 * C110 -
          ((C6343 * C1046 + C6337 * C1053 + C6342 * C1039 + C6336 * C1050 +
            C6341 * C275 + C6335 * C288 + C6340 * C268 + C6334 * C285 +
            C6339 * C125 + C6333 * C137) *
               C32684 +
           (C6343 * C1035 + C6337 * C1045 + C6342 * C1032 + C6336 * C1040 +
            C6341 * C258 + C6335 * C274 + C6340 * C255 + C6334 * C269 +
            C6339 * C116 + C6333 * C124) *
               C114) *
              C32585 * C32644 * C32630 * C111 +
          ((C6339 * C117 + C6333 * C126 + C6340 * C254 + C6334 * C267 +
            C6341 * C259 + C6335 * C276 + C6342 * C1031 + C6336 * C1038 +
            C6343 * C1036 + C6337 * C1047) *
               C114 +
           (C6339 * C127 + C6333 * C138 + C6340 * C266 + C6334 * C284 +
            C6341 * C277 + C6335 * C289 + C6342 * C1037 + C6336 * C1049 +
            C6343 * C1048 + C6337 * C1054) *
               C32684) *
              C32585 * C32644 * C32630 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C6339 * C115 + C6333 * C122 + C6340 * C256 + C6334 * C271 +
            C6341 * C257 + C6335 * C272 + C6342 * C1033 + C6336 * C1042 +
            C6343 * C1034 + C6337 * C1043) *
               C114 +
           (C6339 * C123 + C6333 * C136 + C6340 * C270 + C6334 * C286 +
            C6341 * C273 + C6335 * C287 + C6342 * C1041 + C6336 * C1051 +
            C6343 * C1044 + C6337 * C1052) *
               C32684) *
              C32585 * C32644 * C248 -
          ((C6343 * C6408 + C6337 * C6412 + C6342 * C1044 + C6336 * C1052 +
            C6341 * C1041 + C6335 * C1051 + C6340 * C273 + C6334 * C287 +
            C6339 * C270 + C6333 * C286) *
               C32684 +
           (C6343 * C6406 + C6337 * C6409 + C6342 * C1034 + C6336 * C1043 +
            C6341 * C1033 + C6335 * C1042 + C6340 * C257 + C6334 * C272 +
            C6339 * C256 + C6333 * C271) *
               C114) *
              C32585 * C32644 * C249 +
          ((C6339 * C257 + C6333 * C272 + C6340 * C1033 + C6334 * C1042 +
            C6341 * C1034 + C6335 * C1043 + C6342 * C6406 + C6336 * C6409 +
            C6343 * C6407 + C6337 * C6410) *
               C114 +
           (C6339 * C273 + C6333 * C287 + C6340 * C1041 + C6334 * C1051 +
            C6341 * C1044 + C6335 * C1052 + C6342 * C6408 + C6336 * C6412 +
            C6343 * C6411 + C6337 * C6413) *
               C32684) *
              C32585 * C32644 * C250) *
         C32618) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C5477 * C115 + C5471 * C122 + C5478 * C256 + C5472 * C271 +
            C5479 * C257 + C32956 * C272) *
               C1844 +
           (C5477 * C123 + C5471 * C136 + C5478 * C270 + C5472 * C286 +
            C5479 * C273 + C32956 * C287) *
               C32992 +
           (C5477 * C361 + C5471 * C376 + C5478 * C721 + C5472 * C726 +
            C5479 * C1167 + C32956 * C1179) *
               C1845 +
           (C5477 * C375 + C5471 * C391 + C5478 * C727 + C5472 * C736 +
            C5479 * C1178 + C32956 * C1194) *
               C32981 +
           (C5477 * C362 + C5471 * C377 + C5478 * C1168 + C5472 * C1180 +
            C5479 * C1169 + C32956 * C1181) *
               C1846 +
           (C5477 * C378 + C5471 * C392 + C5478 * C1182 + C5472 * C1195 +
            C5479 * C1183 + C32956 * C1196) *
               C32959) *
              C32585 * C32644 * C32630 * C110 -
          ((C5479 * C1187 + C32956 * C1198 + C5478 * C1186 + C5472 * C1197 +
            C5477 * C380 + C5471 * C393) *
               C32959 +
           (C5479 * C1171 + C32956 * C1185 + C5478 * C1170 + C5472 * C1184 +
            C5477 * C363 + C5471 * C379) *
               C1846 +
           (C6120 + C6121 + C6122) * C32981 + (C6123 + C6124 + C6125) * C1845 +
           (C5522 + C5521 + C5520) * C32992 + (C5519 + C5518 + C5517) * C1844) *
              C32585 * C32644 * C32630 * C111 +
          (C5537 * C1844 + C5538 * C32992 + (C6119 + C6118 + C6117) * C1845 +
           (C6116 + C6115 + C6114) * C32981 +
           (C5477 * C364 + C5471 * C381 + C5478 * C1172 + C5472 * C1188 +
            C5479 * C1173 + C32956 * C1189) *
               C1846 +
           (C5477 * C382 + C5471 * C394 + C5478 * C1190 + C5472 * C1199 +
            C5479 * C1191 + C32956 * C1200) *
               C32959) *
              C32585 * C32644 * C32630 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C5477 * C115 + C5471 * C122 + C5478 * C256 + C5472 * C271 +
            C5479 * C257 + C32956 * C272) *
               C1844 +
           (C5477 * C123 + C5471 * C136 + C5478 * C270 + C5472 * C286 +
            C5479 * C273 + C32956 * C287) *
               C32992 +
           (C5477 * C361 + C5471 * C376 + C5478 * C721 + C5472 * C726 +
            C5479 * C1167 + C32956 * C1179) *
               C1845 +
           (C5477 * C375 + C5471 * C391 + C5478 * C727 + C5472 * C736 +
            C5479 * C1178 + C32956 * C1194) *
               C32981 +
           (C5477 * C362 + C5471 * C377 + C5478 * C1168 + C5472 * C1180 +
            C5479 * C1169 + C32956 * C1181) *
               C1846 +
           (C5477 * C378 + C5471 * C392 + C5478 * C1182 + C5472 * C1195 +
            C5479 * C1183 + C32956 * C1196) *
               C32959) *
              C32585 * C32644 * C248 -
          ((C5479 * C6483 + C32956 * C6486 + C5478 * C1183 + C5472 * C1196 +
            C5477 * C1182 + C5471 * C1195) *
               C32959 +
           (C5479 * C6477 + C32956 * C6481 + C5478 * C1169 + C5472 * C1181 +
            C5477 * C1168 + C5471 * C1180) *
               C1846 +
           (C5479 * C1723 + C32956 * C1728 + C5478 * C1178 + C5472 * C1194 +
            C5477 * C727 + C5471 * C736) *
               C32981 +
           (C5479 * C1719 + C32956 * C1722 + C5478 * C1167 + C5472 * C1179 +
            C5477 * C721 + C5471 * C726) *
               C1845 +
           (C5479 * C1041 + C32956 * C1051 + C5478 * C273 + C5472 * C287 +
            C5477 * C270 + C5471 * C286) *
               C32992 +
           (C5479 * C1033 + C32956 * C1042 + C5478 * C257 + C5472 * C272 +
            C5477 * C256 + C5471 * C271) *
               C1844) *
              C32585 * C32644 * C249 +
          ((C5477 * C257 + C5471 * C272 + C5478 * C1033 + C5472 * C1042 +
            C5479 * C1034 + C32956 * C1043) *
               C1844 +
           (C5477 * C273 + C5471 * C287 + C5478 * C1041 + C5472 * C1051 +
            C5479 * C1044 + C32956 * C1052) *
               C32992 +
           (C5477 * C1167 + C5471 * C1179 + C5478 * C1719 + C5472 * C1722 +
            C5479 * C6476 + C32956 * C6480) *
               C1845 +
           (C5477 * C1178 + C5471 * C1194 + C5478 * C1723 + C5472 * C1728 +
            C5479 * C6479 + C32956 * C6485) *
               C32981 +
           (C5477 * C1169 + C5471 * C1181 + C5478 * C6477 + C5472 * C6481 +
            C5479 * C6478 + C32956 * C6482) *
               C1846 +
           (C5477 * C1183 + C5471 * C1196 + C5478 * C6483 + C5472 * C6486 +
            C5479 * C6484 + C32956 * C6487) *
               C32959) *
              C32585 * C32644 * C250) *
         C32618) /
            (p * q * std::sqrt(p + q));
    d2ee[115] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  (((((C113 * C115 + C32667 * C122) * C3602 +
                      (C113 * C123 + C32667 * C136) * C32926 + C2153 * C3603 +
                      C2154 * C32771) *
                         C2780 +
                     (C3605 + C3606 + C3607 + C3608) * C2781 + C3625 * C2782 +
                     C3626 * C32960) *
                        C32644 * C479 -
                    ((C3969 + C3970 + C3957 + C3958) * C32960 +
                     (C3959 + C3960 + C3961 + C3962) * C2782 +
                     (C3963 + C3964 + C3965 + C3966) * C2781 +
                     (C2678 * C32771 + C2677 * C3603 +
                      (C113 * C270 + C32667 * C286) * C32926 +
                      (C113 * C256 + C32667 * C271) * C3602) *
                         C2780) *
                        C32644 * C480) *
                       C481 +
                   (((C3966 + C3965 + C3964 + C3963) * C2780 +
                     (C3962 + C3961 + C3960 + C3959) * C2781 +
                     (C3958 + C3957 + C3970 + C3969) * C2782 +
                     (C505 * C3602 + C504 * C32926 +
                      (C113 * C725 + C32667 * C734) * C3603 +
                      (C113 * C735 + C32667 * C740) * C32771) *
                         C32960) *
                        C32644 * C480 -
                    ((C3617 + C3618 + C3619 + C3620) * C32960 +
                     (C3616 + C3615 + C3614 + C3613) * C2782 +
                     (C3612 + C3611 + C3610 + C3609) * C2781 +
                     (C3608 + C3607 + C3606 + C3605) * C2780) *
                        C32644 * C479) *
                       C482)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  (((((C5477 * C115 + C5471 * C122 + C5478 * C256 +
                       C5472 * C271 + C5479 * C257 + C32956 * C272) *
                          C3602 +
                      (C5477 * C123 + C5471 * C136 + C5478 * C270 +
                       C5472 * C286 + C5479 * C273 + C32956 * C287) *
                          C32926 +
                      (C7125 + C7126 + C7127) * C3603 +
                      (C7128 + C7129 + C7130) * C32771) *
                         C32906 +
                     ((C5517 + C5518 + C5519) * C3602 +
                      (C5520 + C5521 + C5522) * C32926 +
                      (C6125 + C6124 + C6123) * C3603 +
                      (C6122 + C6121 + C6120) * C32771) *
                         C32595) *
                        C32644 * C479 -
                    (((C9085 + C9086 + C9087) * C32771 +
                      (C9088 + C9089 + C9090) * C3603 +
                      (C5938 + C5939 + C5940) * C32926 +
                      (C5941 + C5942 + C5943) * C3602) *
                         C32595 +
                     ((C7644 + C7643 + C7642) * C32771 +
                      (C7641 + C7640 + C7639) * C3603 +
                      (C5479 * C1041 + C32956 * C1051 + C5478 * C273 +
                       C5472 * C287 + C5477 * C270 + C5471 * C286) *
                          C32926 +
                      (C5479 * C1033 + C32956 * C1042 + C5478 * C257 +
                       C5472 * C272 + C5477 * C256 + C5471 * C271) *
                          C3602) *
                         C32906) *
                        C32644 * C480) *
                       C481 +
                   ((((C5943 + C5942 + C5941) * C3602 +
                      (C5940 + C5939 + C5938) * C32926 +
                      (C9090 + C9089 + C9088) * C3603 +
                      (C9087 + C9086 + C9085) * C32771) *
                         C32906 +
                     ((C5937 + C5936 + C5935) * C3602 +
                      (C5934 + C5933 + C5932) * C32926 +
                      (C5477 * C723 + C5471 * C730 + C5478 * C1165 +
                       C5472 * C1175 + C5479 * C1721 + C32956 * C1726) *
                          C3603 +
                      (C5477 * C731 + C5471 * C738 + C5478 * C1174 +
                       C5472 * C1192 + C5479 * C1727 + C32956 * C1730) *
                          C32771) *
                         C32595) *
                        C32644 * C480 -
                    (((C6114 + C6115 + C6116) * C32771 +
                      (C6117 + C6118 + C6119) * C3603 +
                      (C5528 + C5527 + C5526) * C32926 +
                      (C5525 + C5524 + C5523) * C3602) *
                         C32595 +
                     ((C6120 + C6121 + C6122) * C32771 +
                      (C6123 + C6124 + C6125) * C3603 +
                      (C5522 + C5521 + C5520) * C32926 +
                      (C5519 + C5518 + C5517) * C3602) *
                         C32906) *
                        C32644 * C479) *
                       C482)) /
                     (p * q * std::sqrt(p + q));
    d2ee[116] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C32667 * C122) * C3602 +
             (C113 * C123 + C32667 * C136) * C32926 + C2153 * C3603 +
             C2154 * C32771) *
                C2780 +
            (C3605 + C3606 + C3607 + C3608) * C2781 + C3625 * C2782 +
            C3626 * C32960) *
               C601 -
           ((C4101 + C4102 + C4103 + C4104) * C32960 +
            (C4105 + C4106 + C4107 + C4108) * C2782 +
            (C4109 + C4110 + C4111 + C4112) * C2781 +
            (C2156 * C32771 + C2155 * C3603 + C2154 * C32926 + C2153 * C3602) *
                C2780) *
               C602) *
              C479 +
          (((C2677 * C3602 + C2678 * C32926 + C2679 * C3603 + C2680 * C32771) *
                C2780 +
            (C2340 * C3602 + C2339 * C32926 + C2338 * C3603 + C2337 * C32771) *
                C2781 +
            (C2336 * C3602 + C2335 * C32926 + C2334 * C3603 + C2333 * C32771) *
                C2782 +
            (C3968 * C3602 + C3967 * C32926 +
             (C113 * C2308 + C32667 * C2309) * C3603 +
             (C113 * C2310 + C32667 * C2311) * C32771) *
                C32960) *
               C602 -
           ((C3969 + C3970 + C3957 + C3958) * C32960 +
            (C3959 + C3960 + C3961 + C3962) * C2782 +
            (C3963 + C3964 + C3965 + C3966) * C2781 +
            (C2678 * C32771 + C2677 * C3603 +
             (C113 * C270 + C32667 * C286) * C32926 +
             (C113 * C256 + C32667 * C271) * C3602) *
                C2780) *
               C601) *
              C480) *
         C32618) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C5477 * C115 + C5471 * C122 + C5478 * C256 + C5472 * C271 +
              C5479 * C257 + C32956 * C272) *
                 C3602 +
             (C5477 * C123 + C5471 * C136 + C5478 * C270 + C5472 * C286 +
              C5479 * C273 + C32956 * C287) *
                 C32926 +
             (C7125 + C7126 + C7127) * C3603 +
             (C7128 + C7129 + C7130) * C32771) *
                C32906 +
            ((C5517 + C5518 + C5519) * C3602 +
             (C5520 + C5521 + C5522) * C32926 + C9289 * C3603 +
             C9290 * C32771) *
                C32595) *
               C601 -
           (((C7464 + C7463 + C7462) * C32771 +
             (C7461 + C7460 + C7459) * C3603 + C9291 * C32926 + C9292 * C3602) *
                C32595 +
            ((C7136 + C7135 + C7134) * C32771 +
             (C7133 + C7132 + C7131) * C3603 +
             (C7130 + C7129 + C7128) * C32926 +
             (C7127 + C7126 + C7125) * C3602) *
                C32906) *
               C602) *
              C479 +
          ((((C7639 + C7640 + C7641) * C3602 +
             (C7642 + C7643 + C7644) * C32926 +
             (C7645 + C7646 + C7647) * C3603 +
             (C7648 + C7649 + C7650) * C32771) *
                C32906 +
            ((C9090 + C9089 + C9088) * C3602 +
             (C9087 + C9086 + C9085) * C32926 +
             (C5477 * C1170 + C5471 * C1184 + C5478 * C1171 + C5472 * C1185 +
              C5479 * C7292 + C32956 * C7293) *
                 C3603 +
             (C5477 * C1186 + C5471 * C1197 + C5478 * C1187 + C5472 * C1198 +
              C5479 * C7294 + C32956 * C7295) *
                 C32771) *
                C32595) *
               C602 -
           (((C9085 + C9086 + C9087) * C32771 +
             (C9088 + C9089 + C9090) * C3603 +
             (C5938 + C5939 + C5940) * C32926 +
             (C5941 + C5942 + C5943) * C3602) *
                C32595 +
            ((C7644 + C7643 + C7642) * C32771 +
             (C7641 + C7640 + C7639) * C3603 +
             (C5479 * C1041 + C32956 * C1051 + C5478 * C273 + C5472 * C287 +
              C5477 * C270 + C5471 * C286) *
                 C32926 +
             (C5479 * C1033 + C32956 * C1042 + C5478 * C257 + C5472 * C272 +
              C5477 * C256 + C5471 * C271) *
                 C3602) *
                C32906) *
               C601) *
              C480) *
         C32618) /
            (p * q * std::sqrt(p + q));
    d2ee[117] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C32667 * C122) * C3602 +
            (C113 * C123 + C32667 * C136) * C32926 + C2153 * C3603 +
            C2154 * C32771) *
               C2780 +
           (C3605 + C3606 + C3607 + C3608) * C2781 + C3625 * C2782 +
           C3626 * C32960) *
              C32644 * C248 -
          (((C113 * C733 + C32667 * C739) * C32771 +
            (C113 * C724 + C32667 * C732) * C3603 + C506 * C32926 +
            C507 * C3602) *
               C32960 +
           (C2335 * C32771 + C2336 * C3603 + C508 * C32926 + C509 * C3602) *
               C2782 +
           (C2339 * C32771 + C2340 * C3603 + C510 * C32926 + C511 * C3602) *
               C2781 +
           (C2678 * C32771 + C2677 * C3603 +
            (C113 * C270 + C32667 * C286) * C32926 +
            (C113 * C256 + C32667 * C271) * C3602) *
               C2780) *
              C32644 * C249 +
          (((C113 * C257 + C32667 * C272) * C3602 +
            (C113 * C273 + C32667 * C287) * C32926 +
            (C113 * C1167 + C32667 * C1179) * C3603 +
            (C113 * C1178 + C32667 * C1194) * C32771) *
               C2780 +
           ((C113 * C258 + C32667 * C274) * C3602 +
            (C113 * C275 + C32667 * C288) * C32926 +
            (C113 * C1166 + C32667 * C1177) * C3603 +
            (C113 * C1176 + C32667 * C1193) * C32771) *
               C2781 +
           ((C113 * C259 + C32667 * C276) * C3602 +
            (C113 * C277 + C32667 * C289) * C32926 +
            (C113 * C1165 + C32667 * C1175) * C3603 +
            (C113 * C1174 + C32667 * C1192) * C32771) *
               C2782 +
           ((C113 * C260 + C32667 * C278) * C3602 +
            (C113 * C279 + C32667 * C290) * C32926 +
            (C113 * C1533 + C32667 * C1534) * C3603 +
            (C113 * C1535 + C32667 * C1536) * C32771) *
               C32960) *
              C32644 * C250) *
         C32618) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C32667 * C122) * C3602 +
            (C113 * C123 + C32667 * C136) * C32926 + C2153 * C3603 +
            C2154 * C32771) *
               C2780 +
           (C3605 + C3606 + C3607 + C3608) * C2781 + C3625 * C2782 +
           C3626 * C32960) *
              C32644 * C32630 * C110 -
          ((C3617 + C3618 + C3619 + C3620) * C32960 +
           (C3616 + C3615 + C3614 + C3613) * C2782 +
           (C3612 + C3611 + C3610 + C3609) * C2781 +
           (C3608 + C3607 + C3606 + C3605) * C2780) *
              C32644 * C32630 * C111 +
          (C3625 * C2780 + C3626 * C2781 +
           (C3620 + C3619 + C3618 + C3617) * C2782 +
           (C173 * C3602 + C172 * C32926 +
            (C113 * C603 + C32667 * C604) * C3603 +
            (C113 * C605 + C32667 * C606) * C32771) *
               C32960) *
              C32644 * C32630 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C32667 * C122) * C3602 +
            (C113 * C123 + C32667 * C136) * C32926 + C2153 * C3603 +
            C2154 * C32771) *
               C2780 +
           (C3605 + C3606 + C3607 + C3608) * C2781 + C3625 * C2782 +
           C3626 * C32960) *
              C354 -
          ((C1877 * C32771 + C1878 * C3603 + C626 * C32926 + C627 * C3602) *
               C32960 +
           (C1876 * C32771 + C1875 * C3603 + C628 * C32926 + C629 * C3602) *
               C2782 +
           (C1873 * C32771 + C1872 * C3603 + C630 * C32926 + C631 * C3602) *
               C2781 +
           (C2156 * C32771 + C2155 * C3603 + C2154 * C32926 + C2153 * C3602) *
               C2780) *
              C355 +
          ((C2155 * C3602 + C2156 * C32926 + C2162 * C3603 + C2161 * C32771) *
               C2780 +
           (C1872 * C3602 + C1873 * C32926 + C2160 * C3603 + C2159 * C32771) *
               C2781 +
           (C1875 * C3602 + C1876 * C32926 + C2158 * C3603 + C2157 * C32771) *
               C2782 +
           (C1878 * C3602 + C1877 * C32926 +
            (C113 * C2494 + C32667 * C2495) * C3603 +
            (C113 * C2496 + C32667 * C2497) * C32771) *
               C32960) *
              C356) *
         C32630 * C32618) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C5477 * C115 + C5471 * C122 + C5478 * C256 + C5472 * C271 +
             C5479 * C257 + C32956 * C272) *
                C3602 +
            (C5477 * C123 + C5471 * C136 + C5478 * C270 + C5472 * C286 +
             C5479 * C273 + C32956 * C287) *
                C32926 +
            (C7125 + C7126 + C7127) * C3603 +
            (C7128 + C7129 + C7130) * C32771) *
               C32906 +
           ((C5517 + C5518 + C5519) * C3602 + (C5520 + C5521 + C5522) * C32926 +
            (C6125 + C6124 + C6123) * C3603 +
            (C6122 + C6121 + C6120) * C32771) *
               C32595) *
              C32644 * C32630 * C110 -
          (((C6114 + C6115 + C6116) * C32771 + (C6117 + C6118 + C6119) * C3603 +
            (C5528 + C5527 + C5526) * C32926 +
            (C5525 + C5524 + C5523) * C3602) *
               C32595 +
           ((C6120 + C6121 + C6122) * C32771 + (C6123 + C6124 + C6125) * C3603 +
            (C5522 + C5521 + C5520) * C32926 +
            (C5519 + C5518 + C5517) * C3602) *
               C32906) *
              C32644 * C32630 * C111 +
          ((C5537 * C3602 + C5538 * C32926 + (C6119 + C6118 + C6117) * C3603 +
            (C6116 + C6115 + C6114) * C32771) *
               C32906 +
           ((C5534 + C5533 + C5532) * C3602 + (C5531 + C5530 + C5529) * C32926 +
            (C5477 * C358 + C5471 * C370 + C5478 * C724 + C5472 * C732 +
             C5479 * C1533 + C32956 * C1534) *
                C3603 +
            (C5477 * C369 + C5471 * C388 + C5478 * C733 + C5472 * C739 +
             C5479 * C1535 + C32956 * C1536) *
                C32771) *
               C32595) *
              C32644 * C32630 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C5477 * C115 + C5471 * C122 + C5478 * C256 + C5472 * C271 +
             C5479 * C257 + C32956 * C272) *
                C3602 +
            (C5477 * C123 + C5471 * C136 + C5478 * C270 + C5472 * C286 +
             C5479 * C273 + C32956 * C287) *
                C32926 +
            (C7125 + C7126 + C7127) * C3603 +
            (C7128 + C7129 + C7130) * C32771) *
               C32906 +
           ((C5517 + C5518 + C5519) * C3602 + (C5520 + C5521 + C5522) * C32926 +
            (C6125 + C6124 + C6123) * C3603 +
            (C6122 + C6121 + C6120) * C32771) *
               C32595) *
              C32644 * C248 -
          (((C5479 * C1725 + C32956 * C1729 + C5478 * C1176 + C5472 * C1193 +
             C5477 * C729 + C5471 * C737) *
                C32771 +
            (C5479 * C1720 + C32956 * C1724 + C5478 * C1166 + C5472 * C1177 +
             C5477 * C722 + C5471 * C728) *
                C3603 +
            (C5938 + C5939 + C5940) * C32926 +
            (C5941 + C5942 + C5943) * C3602) *
               C32595 +
           ((C7644 + C7643 + C7642) * C32771 + (C7641 + C7640 + C7639) * C3603 +
            (C5479 * C1041 + C32956 * C1051 + C5478 * C273 + C5472 * C287 +
             C5477 * C270 + C5471 * C286) *
                C32926 +
            (C5479 * C1033 + C32956 * C1042 + C5478 * C257 + C5472 * C272 +
             C5477 * C256 + C5471 * C271) *
                C3602) *
               C32906) *
              C32644 * C249 +
          (((C5477 * C257 + C5471 * C272 + C5478 * C1033 + C5472 * C1042 +
             C5479 * C1034 + C32956 * C1043) *
                C3602 +
            (C5477 * C273 + C5471 * C287 + C5478 * C1041 + C5472 * C1051 +
             C5479 * C1044 + C32956 * C1052) *
                C32926 +
            (C5477 * C1167 + C5471 * C1179 + C5478 * C1719 + C5472 * C1722 +
             C5479 * C6476 + C32956 * C6480) *
                C3603 +
            (C5477 * C1178 + C5471 * C1194 + C5478 * C1723 + C5472 * C1728 +
             C5479 * C6479 + C32956 * C6485) *
                C32771) *
               C32906 +
           ((C5477 * C258 + C5471 * C274 + C5478 * C1032 + C5472 * C1040 +
             C5479 * C1035 + C32956 * C1045) *
                C3602 +
            (C5477 * C275 + C5471 * C288 + C5478 * C1039 + C5472 * C1050 +
             C5479 * C1046 + C32956 * C1053) *
                C32926 +
            (C5477 * C1166 + C5471 * C1177 + C5478 * C1720 + C5472 * C1724 +
             C5479 * C6656 + C32956 * C6657) *
                C3603 +
            (C5477 * C1176 + C5471 * C1193 + C5478 * C1725 + C5472 * C1729 +
             C5479 * C6658 + C32956 * C6659) *
                C32771) *
               C32595) *
              C32644 * C250) *
         C32618) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C5477 * C115 + C5471 * C122 + C5478 * C256 + C5472 * C271 +
             C5479 * C257 + C32956 * C272) *
                C3602 +
            (C5477 * C123 + C5471 * C136 + C5478 * C270 + C5472 * C286 +
             C5479 * C273 + C32956 * C287) *
                C32926 +
            (C7125 + C7126 + C7127) * C3603 +
            (C7128 + C7129 + C7130) * C32771) *
               C32906 +
           ((C5517 + C5518 + C5519) * C3602 + (C5520 + C5521 + C5522) * C32926 +
            (C6125 + C6124 + C6123) * C3603 +
            (C6122 + C6121 + C6120) * C32771) *
               C32595) *
              C354 -
          (((C7464 + C7463 + C7462) * C32771 + (C7461 + C7460 + C7459) * C3603 +
            (C6120 + C6121 + C6122) * C32926 +
            (C6123 + C6124 + C6125) * C3602) *
               C32595 +
           ((C7136 + C7135 + C7134) * C32771 + (C7133 + C7132 + C7131) * C3603 +
            (C7130 + C7129 + C7128) * C32926 +
            (C7127 + C7126 + C7125) * C3602) *
               C32906) *
              C355 +
          ((C7145 * C3602 + C7146 * C32926 + (C7142 + C7141 + C7140) * C3603 +
            (C7139 + C7138 + C7137) * C32771) *
               C32906 +
           ((C7459 + C7460 + C7461) * C3602 + (C7462 + C7463 + C7464) * C32926 +
            (C5477 * C2109 + C5471 * C2117 + C5478 * C2657 + C5472 * C2661 +
             C5479 * C7442 + C32956 * C7443) *
                C3603 +
            (C5477 * C2116 + C5471 * C2127 + C5478 * C2662 + C5472 * C2666 +
             C5479 * C7444 + C32956 * C7445) *
                C32771) *
               C32595) *
              C356) *
         C32630 * C32618) /
            (p * q * std::sqrt(p + q));
    d2ee[118] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C32667 * C122) * C3602 +
             (C113 * C123 + C32667 * C136) * C32926 + C2153 * C3603 +
             C2154 * C32771) *
                C2780 +
            (C3605 + C3606 + C3607 + C3608) * C2781 + C3625 * C2782 +
            C3626 * C32960) *
               C601 -
           ((C4101 + C4102 + C4103 + C4104) * C32960 +
            (C4105 + C4106 + C4107 + C4108) * C2782 +
            (C4109 + C4110 + C4111 + C4112) * C2781 +
            (C2156 * C32771 + C2155 * C3603 + C2154 * C32926 + C2153 * C3602) *
                C2780) *
               C602) *
              C32630 * C481 +
          (((C4112 + C4111 + C4110 + C4109) * C2780 +
            (C4108 + C4107 + C4106 + C4105) * C2781 +
            (C4104 + C4103 + C4102 + C4101) * C2782 +
            (C625 * C3602 + C624 * C32926 +
             (C113 * C366 + C32667 * C385) * C3603 +
             (C113 * C386 + C32667 * C396) * C32771) *
                C32960) *
               C602 -
           ((C3617 + C3618 + C3619 + C3620) * C32960 +
            (C3616 + C3615 + C3614 + C3613) * C2782 +
            (C3612 + C3611 + C3610 + C3609) * C2781 +
            (C3608 + C3607 + C3606 + C3605) * C2780) *
               C601) *
              C32630 * C482)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C5477 * C115 + C5471 * C122 + C5478 * C256 + C5472 * C271 +
              C5479 * C257 + C32956 * C272) *
                 C3602 +
             (C5477 * C123 + C5471 * C136 + C5478 * C270 + C5472 * C286 +
              C5479 * C273 + C32956 * C287) *
                 C32926 +
             (C7125 + C7126 + C7127) * C3603 +
             (C7128 + C7129 + C7130) * C32771) *
                C32906 +
            ((C5517 + C5518 + C5519) * C3602 +
             (C5520 + C5521 + C5522) * C32926 + C9289 * C3603 +
             C9290 * C32771) *
                C32595) *
               C601 -
           (((C7464 + C7463 + C7462) * C32771 +
             (C7461 + C7460 + C7459) * C3603 + C9291 * C32926 + C9292 * C3602) *
                C32595 +
            ((C7136 + C7135 + C7134) * C32771 +
             (C7133 + C7132 + C7131) * C3603 +
             (C7130 + C7129 + C7128) * C32926 +
             (C7127 + C7126 + C7125) * C3602) *
                C32906) *
               C602) *
              C32630 * C481 +
          (((C9289 * C3602 + C9290 * C32926 + (C7459 + C7460 + C7461) * C3603 +
             (C7462 + C7463 + C7464) * C32771) *
                C32906 +
            ((C6119 + C6118 + C6117) * C3602 +
             (C6116 + C6115 + C6114) * C32926 +
             (C5477 * C364 + C5471 * C381 + C5478 * C1172 + C5472 * C1188 +
              C5479 * C1173 + C32956 * C1189) *
                 C3603 +
             (C5477 * C382 + C5471 * C394 + C5478 * C1190 + C5472 * C1199 +
              C5479 * C1191 + C32956 * C1200) *
                 C32771) *
                C32595) *
               C602 -
           (((C6114 + C6115 + C6116) * C32771 +
             (C6117 + C6118 + C6119) * C3603 +
             (C5528 + C5527 + C5526) * C32926 +
             (C5525 + C5524 + C5523) * C3602) *
                C32595 +
            (C9291 * C32771 + C9292 * C3603 + (C5522 + C5521 + C5520) * C32926 +
             (C5519 + C5518 + C5517) * C3602) *
                C32906) *
               C601) *
              C32630 * C482)) /
            (p * q * std::sqrt(p + q));
    d2ee[119] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C32667 * C122) * C3602 +
            (C113 * C123 + C32667 * C136) * C32926 + C2153 * C3603 +
            C2154 * C32771) *
               C2780 +
           (C3605 + C3606 + C3607 + C3608) * C2781 + C3625 * C2782 +
           C3626 * C32960) *
              C32644 * C32630 * C110 -
          ((C3617 + C3618 + C3619 + C3620) * C32960 +
           (C3616 + C3615 + C3614 + C3613) * C2782 +
           (C3612 + C3611 + C3610 + C3609) * C2781 +
           (C3608 + C3607 + C3606 + C3605) * C2780) *
              C32644 * C32630 * C111 +
          (C3625 * C2780 + C3626 * C2781 +
           (C3620 + C3619 + C3618 + C3617) * C2782 +
           (C173 * C3602 + C172 * C32926 +
            (C113 * C603 + C32667 * C604) * C3603 +
            (C113 * C605 + C32667 * C606) * C32771) *
               C32960) *
              C32644 * C32630 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C32667 * C122) * C3602 +
            (C113 * C123 + C32667 * C136) * C32926 + C2153 * C3603 +
            C2154 * C32771) *
               C2780 +
           (C3605 + C3606 + C3607 + C3608) * C2781 + C3625 * C2782 +
           C3626 * C32960) *
              C32644 * C248 -
          (((C113 * C733 + C32667 * C739) * C32771 +
            (C113 * C724 + C32667 * C732) * C3603 + C506 * C32926 +
            C507 * C3602) *
               C32960 +
           (C2335 * C32771 + C2336 * C3603 + C508 * C32926 + C509 * C3602) *
               C2782 +
           (C2339 * C32771 + C2340 * C3603 + C510 * C32926 + C511 * C3602) *
               C2781 +
           (C2678 * C32771 + C2677 * C3603 +
            (C113 * C270 + C32667 * C286) * C32926 +
            (C113 * C256 + C32667 * C271) * C3602) *
               C2780) *
              C32644 * C249 +
          (((C113 * C257 + C32667 * C272) * C3602 +
            (C113 * C273 + C32667 * C287) * C32926 +
            (C113 * C1167 + C32667 * C1179) * C3603 +
            (C113 * C1178 + C32667 * C1194) * C32771) *
               C2780 +
           ((C113 * C258 + C32667 * C274) * C3602 +
            (C113 * C275 + C32667 * C288) * C32926 +
            (C113 * C1166 + C32667 * C1177) * C3603 +
            (C113 * C1176 + C32667 * C1193) * C32771) *
               C2781 +
           ((C113 * C259 + C32667 * C276) * C3602 +
            (C113 * C277 + C32667 * C289) * C32926 +
            (C113 * C1165 + C32667 * C1175) * C3603 +
            (C113 * C1174 + C32667 * C1192) * C32771) *
               C2782 +
           ((C113 * C260 + C32667 * C278) * C3602 +
            (C113 * C279 + C32667 * C290) * C32926 +
            (C113 * C1533 + C32667 * C1534) * C3603 +
            (C113 * C1535 + C32667 * C1536) * C32771) *
               C32960) *
              C32644 * C250) *
         C32618) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C5477 * C115 + C5471 * C122 + C5478 * C256 + C5472 * C271 +
             C5479 * C257 + C32956 * C272) *
                C3602 +
            (C5477 * C123 + C5471 * C136 + C5478 * C270 + C5472 * C286 +
             C5479 * C273 + C32956 * C287) *
                C32926 +
            (C7125 + C7126 + C7127) * C3603 +
            (C7128 + C7129 + C7130) * C32771) *
               C32906 +
           ((C5517 + C5518 + C5519) * C3602 + (C5520 + C5521 + C5522) * C32926 +
            (C6125 + C6124 + C6123) * C3603 +
            (C6122 + C6121 + C6120) * C32771) *
               C32595) *
              C32644 * C32630 * C110 -
          (((C6114 + C6115 + C6116) * C32771 + (C6117 + C6118 + C6119) * C3603 +
            (C5528 + C5527 + C5526) * C32926 +
            (C5525 + C5524 + C5523) * C3602) *
               C32595 +
           ((C6120 + C6121 + C6122) * C32771 + (C6123 + C6124 + C6125) * C3603 +
            (C5522 + C5521 + C5520) * C32926 +
            (C5519 + C5518 + C5517) * C3602) *
               C32906) *
              C32644 * C32630 * C111 +
          ((C5537 * C3602 + C5538 * C32926 + (C6119 + C6118 + C6117) * C3603 +
            (C6116 + C6115 + C6114) * C32771) *
               C32906 +
           ((C5534 + C5533 + C5532) * C3602 + (C5531 + C5530 + C5529) * C32926 +
            (C5477 * C358 + C5471 * C370 + C5478 * C724 + C5472 * C732 +
             C5479 * C1533 + C32956 * C1534) *
                C3603 +
            (C5477 * C369 + C5471 * C388 + C5478 * C733 + C5472 * C739 +
             C5479 * C1535 + C32956 * C1536) *
                C32771) *
               C32595) *
              C32644 * C32630 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C5477 * C115 + C5471 * C122 + C5478 * C256 + C5472 * C271 +
             C5479 * C257 + C32956 * C272) *
                C3602 +
            (C5477 * C123 + C5471 * C136 + C5478 * C270 + C5472 * C286 +
             C5479 * C273 + C32956 * C287) *
                C32926 +
            (C7125 + C7126 + C7127) * C3603 +
            (C7128 + C7129 + C7130) * C32771) *
               C32906 +
           ((C5517 + C5518 + C5519) * C3602 + (C5520 + C5521 + C5522) * C32926 +
            (C6125 + C6124 + C6123) * C3603 +
            (C6122 + C6121 + C6120) * C32771) *
               C32595) *
              C32644 * C248 -
          (((C5479 * C1725 + C32956 * C1729 + C5478 * C1176 + C5472 * C1193 +
             C5477 * C729 + C5471 * C737) *
                C32771 +
            (C5479 * C1720 + C32956 * C1724 + C5478 * C1166 + C5472 * C1177 +
             C5477 * C722 + C5471 * C728) *
                C3603 +
            (C5938 + C5939 + C5940) * C32926 +
            (C5941 + C5942 + C5943) * C3602) *
               C32595 +
           ((C7644 + C7643 + C7642) * C32771 + (C7641 + C7640 + C7639) * C3603 +
            (C5479 * C1041 + C32956 * C1051 + C5478 * C273 + C5472 * C287 +
             C5477 * C270 + C5471 * C286) *
                C32926 +
            (C5479 * C1033 + C32956 * C1042 + C5478 * C257 + C5472 * C272 +
             C5477 * C256 + C5471 * C271) *
                C3602) *
               C32906) *
              C32644 * C249 +
          (((C5477 * C257 + C5471 * C272 + C5478 * C1033 + C5472 * C1042 +
             C5479 * C1034 + C32956 * C1043) *
                C3602 +
            (C5477 * C273 + C5471 * C287 + C5478 * C1041 + C5472 * C1051 +
             C5479 * C1044 + C32956 * C1052) *
                C32926 +
            (C5477 * C1167 + C5471 * C1179 + C5478 * C1719 + C5472 * C1722 +
             C5479 * C6476 + C32956 * C6480) *
                C3603 +
            (C5477 * C1178 + C5471 * C1194 + C5478 * C1723 + C5472 * C1728 +
             C5479 * C6479 + C32956 * C6485) *
                C32771) *
               C32906 +
           ((C5477 * C258 + C5471 * C274 + C5478 * C1032 + C5472 * C1040 +
             C5479 * C1035 + C32956 * C1045) *
                C3602 +
            (C5477 * C275 + C5471 * C288 + C5478 * C1039 + C5472 * C1050 +
             C5479 * C1046 + C32956 * C1053) *
                C32926 +
            (C5477 * C1166 + C5471 * C1177 + C5478 * C1720 + C5472 * C1724 +
             C5479 * C6656 + C32956 * C6657) *
                C3603 +
            (C5477 * C1176 + C5471 * C1193 + C5478 * C1725 + C5472 * C1729 +
             C5479 * C6658 + C32956 * C6659) *
                C32771) *
               C32595) *
              C32644 * C250) *
         C32618) /
            (p * q * std::sqrt(p + q));
    d2ee[120] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C32667 * C122) * C114 +
             (C113 * C123 + C32667 * C136) * C32684) *
                C103 +
            (C174 + C175) * C104 + C184 * C105 + C185 * C106 + C186 * C107) *
               C32644 * C479 -
           ((C512 + C513) * C107 + (C514 + C515) * C106 + (C516 + C517) * C105 +
            (C518 + C519) * C104 +
            ((C113 * C270 + C32667 * C286) * C32684 +
             (C113 * C256 + C32667 * C271) * C114) *
                C103) *
               C32644 * C480) *
              C481 +
          (((C519 + C518) * C103 + (C517 + C516) * C104 + (C515 + C514) * C105 +
            (C513 + C512) * C106 +
            ((C113 * C483 + C32667 * C484) * C114 +
             (C113 * C485 + C32667 * C486) * C32684) *
                C107) *
               C32644 * C480 -
           ((C182 + C183) * C107 + (C181 + C180) * C106 + (C179 + C178) * C105 +
            (C177 + C176) * C104 + (C175 + C174) * C103) *
               C32644 * C479) *
              C482)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C857 * C115 + C32991 * C122 + C858 * C256 + C32979 * C271 +
              C859 * C257 + C32956 * C272) *
                 C114 +
             (C857 * C123 + C32991 * C136 + C858 * C270 + C32979 * C286 +
              C859 * C273 + C32956 * C287) *
                 C32684) *
                C854 +
            ((C897 + C898 + C899) * C114 + (C900 + C901 + C902) * C32684) *
                C855 +
            C921 * C32945) *
               C32644 * C479 -
           (((C1376 + C1377 + C1378) * C32684 +
             (C1379 + C1380 + C1381) * C114) *
                C32945 +
            ((C1382 + C1383 + C1384) * C32684 +
             (C1385 + C1386 + C1387) * C114) *
                C855 +
            ((C859 * C1041 + C32956 * C1051 + C858 * C273 + C32979 * C287 +
              C857 * C270 + C32991 * C286) *
                 C32684 +
             (C859 * C1033 + C32956 * C1042 + C858 * C257 + C32979 * C272 +
              C857 * C256 + C32991 * C271) *
                 C114) *
                C854) *
               C32644 * C480) *
              C481 +
          ((((C1387 + C1386 + C1385) * C114 +
             (C1384 + C1383 + C1382) * C32684) *
                C854 +
            ((C1381 + C1380 + C1379) * C114 +
             (C1378 + C1377 + C1376) * C32684) *
                C855 +
            ((C857 * C253 + C32991 * C265 + C858 * C260 + C32979 * C278 +
              C859 * C1347 + C32956 * C1348) *
                 C114 +
             (C857 * C264 + C32991 * C283 + C858 * C279 + C32979 * C290 +
              C859 * C1349 + C32956 * C1350) *
                 C32684) *
                C32945) *
               C32644 * C480 -
           (((C909 + C910 + C911) * C32684 + (C912 + C913 + C914) * C114) *
                C32945 +
            ((C908 + C907 + C906) * C32684 + (C905 + C904 + C903) * C114) *
                C855 +
            ((C902 + C901 + C900) * C32684 + (C899 + C898 + C897) * C114) *
                C854) *
               C32644 * C479) *
              C482)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C5477 * C115 + C5471 * C122 + C5478 * C256 + C5472 * C271 +
              C5479 * C257 + C32956 * C272) *
                 C114 +
             (C5477 * C123 + C5471 * C136 + C5478 * C270 + C5472 * C286 +
              C5479 * C273 + C32956 * C287) *
                 C32684) *
                C32988 +
            ((C5517 + C5518 + C5519) * C114 +
             (C5520 + C5521 + C5522) * C32684) *
                C32975 +
            C5541 * C32945) *
               C32644 * C479 -
           (((C5932 + C5933 + C5934) * C32684 +
             (C5935 + C5936 + C5937) * C114) *
                C32945 +
            ((C5938 + C5939 + C5940) * C32684 +
             (C5941 + C5942 + C5943) * C114) *
                C32975 +
            ((C5479 * C1041 + C32956 * C1051 + C5478 * C273 + C5472 * C287 +
              C5477 * C270 + C5471 * C286) *
                 C32684 +
             (C5479 * C1033 + C32956 * C1042 + C5478 * C257 + C5472 * C272 +
              C5477 * C256 + C5471 * C271) *
                 C114) *
                C32988) *
               C32644 * C480) *
              C481 +
          ((((C5943 + C5942 + C5941) * C114 +
             (C5940 + C5939 + C5938) * C32684) *
                C32988 +
            ((C5937 + C5936 + C5935) * C114 +
             (C5934 + C5933 + C5932) * C32684) *
                C32975 +
            ((C5477 * C253 + C5471 * C265 + C5478 * C260 + C5472 * C278 +
              C5479 * C1347 + C32956 * C1348) *
                 C114 +
             (C5477 * C264 + C5471 * C283 + C5478 * C279 + C5472 * C290 +
              C5479 * C1349 + C32956 * C1350) *
                 C32684) *
                C32945) *
               C32644 * C480 -
           (((C5529 + C5530 + C5531) * C32684 +
             (C5532 + C5533 + C5534) * C114) *
                C32945 +
            ((C5528 + C5527 + C5526) * C32684 +
             (C5525 + C5524 + C5523) * C114) *
                C32975 +
            ((C5522 + C5521 + C5520) * C32684 +
             (C5519 + C5518 + C5517) * C114) *
                C32988) *
               C32644 * C479) *
              C482)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C6339 * C115 + C6333 * C122 + C6340 * C256 + C6334 * C271 +
             C6341 * C257 + C6335 * C272 + C6342 * C1033 + C6336 * C1042 +
             C6343 * C1034 + C6337 * C1043) *
                C114 +
            (C6339 * C123 + C6333 * C136 + C6340 * C270 + C6334 * C286 +
             C6341 * C273 + C6335 * C287 + C6342 * C1041 + C6336 * C1051 +
             C6343 * C1044 + C6337 * C1052) *
                C32684) *
               C32585 * C32644 * C479 -
           ((C6343 * C6408 + C6337 * C6412 + C6342 * C1044 + C6336 * C1052 +
             C6341 * C1041 + C6335 * C1051 + C6340 * C273 + C6334 * C287 +
             C6339 * C270 + C6333 * C286) *
                C32684 +
            (C6343 * C6406 + C6337 * C6409 + C6342 * C1034 + C6336 * C1043 +
             C6341 * C1033 + C6335 * C1042 + C6340 * C257 + C6334 * C272 +
             C6339 * C256 + C6333 * C271) *
                C114) *
               C32585 * C32644 * C480) *
              C481 +
          (((C6339 * C255 + C6333 * C269 + C6340 * C258 + C6334 * C274 +
             C6341 * C1032 + C6335 * C1040 + C6342 * C1035 + C6336 * C1045 +
             C6343 * C6570 + C6337 * C6571) *
                C114 +
            (C6339 * C268 + C6333 * C285 + C6340 * C275 + C6334 * C288 +
             C6341 * C1039 + C6335 * C1050 + C6342 * C1046 + C6336 * C1053 +
             C6343 * C6572 + C6337 * C6573) *
                C32684) *
               C32585 * C32644 * C480 -
           ((C6343 * C1046 + C6337 * C1053 + C6342 * C1039 + C6336 * C1050 +
             C6341 * C275 + C6335 * C288 + C6340 * C268 + C6334 * C285 +
             C6339 * C125 + C6333 * C137) *
                C32684 +
            (C6343 * C1035 + C6337 * C1045 + C6342 * C1032 + C6336 * C1040 +
             C6341 * C258 + C6335 * C274 + C6340 * C255 + C6334 * C269 +
             C6339 * C116 + C6333 * C124) *
                C114) *
               C32585 * C32644 * C479) *
              C482)) /
            (p * q * std::sqrt(p + q));
    d2ee[121] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C32667 * C122) * C114 +
             (C113 * C123 + C32667 * C136) * C32684) *
                C103 +
            (C174 + C175) * C104 + C184 * C105 + C185 * C106 + C186 * C107) *
               C601 -
           ((C632 + C633) * C107 + (C634 + C635) * C106 + (C636 + C637) * C105 +
            (C638 + C639) * C104 +
            ((C113 * C375 + C32667 * C391) * C32684 +
             (C113 * C361 + C32667 * C376) * C114) *
                C103) *
               C602) *
              C479 +
          ((((C113 * C721 + C32667 * C726) * C114 +
             (C113 * C727 + C32667 * C736) * C32684) *
                C103 +
            ((C113 * C722 + C32667 * C728) * C114 +
             (C113 * C729 + C32667 * C737) * C32684) *
                C104 +
            ((C113 * C723 + C32667 * C730) * C114 +
             (C113 * C731 + C32667 * C738) * C32684) *
                C105 +
            ((C113 * C724 + C32667 * C732) * C114 +
             (C113 * C733 + C32667 * C739) * C32684) *
                C106 +
            ((C113 * C725 + C32667 * C734) * C114 +
             (C113 * C735 + C32667 * C740) * C32684) *
                C107) *
               C602 -
           ((C512 + C513) * C107 + (C514 + C515) * C106 + (C516 + C517) * C105 +
            (C518 + C519) * C104 +
            ((C113 * C270 + C32667 * C286) * C32684 +
             (C113 * C256 + C32667 * C271) * C114) *
                C103) *
               C601) *
              C480) *
         C32618) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C857 * C115 + C32991 * C122 + C858 * C256 + C32979 * C271 +
              C859 * C257 + C32956 * C272) *
                 C114 +
             (C857 * C123 + C32991 * C136 + C858 * C270 + C32979 * C286 +
              C859 * C273 + C32956 * C287) *
                 C32684) *
                C854 +
            ((C897 + C898 + C899) * C114 + (C900 + C901 + C902) * C32684) *
                C855 +
            C921 * C32945) *
               C601 -
           (((C1562 + C1563 + C1564) * C32684 +
             (C1565 + C1566 + C1567) * C114) *
                C32945 +
            ((C1568 + C1569 + C1570) * C32684 +
             (C1571 + C1572 + C1573) * C114) *
                C855 +
            ((C859 * C1178 + C32956 * C1194 + C858 * C727 + C32979 * C736 +
              C857 * C375 + C32991 * C391) *
                 C32684 +
             (C859 * C1167 + C32956 * C1179 + C858 * C721 + C32979 * C726 +
              C857 * C361 + C32991 * C376) *
                 C114) *
                C854) *
               C602) *
              C479 +
          ((((C857 * C721 + C32991 * C726 + C858 * C1167 + C32979 * C1179 +
              C859 * C1719 + C32956 * C1722) *
                 C114 +
             (C857 * C727 + C32991 * C736 + C858 * C1178 + C32979 * C1194 +
              C859 * C1723 + C32956 * C1728) *
                 C32684) *
                C854 +
            ((C857 * C722 + C32991 * C728 + C858 * C1166 + C32979 * C1177 +
              C859 * C1720 + C32956 * C1724) *
                 C114 +
             (C857 * C729 + C32991 * C737 + C858 * C1176 + C32979 * C1193 +
              C859 * C1725 + C32956 * C1729) *
                 C32684) *
                C855 +
            ((C857 * C723 + C32991 * C730 + C858 * C1165 + C32979 * C1175 +
              C859 * C1721 + C32956 * C1726) *
                 C114 +
             (C857 * C731 + C32991 * C738 + C858 * C1174 + C32979 * C1192 +
              C859 * C1727 + C32956 * C1730) *
                 C32684) *
                C32945) *
               C602 -
           (((C1376 + C1377 + C1378) * C32684 +
             (C1379 + C1380 + C1381) * C114) *
                C32945 +
            ((C1382 + C1383 + C1384) * C32684 +
             (C1385 + C1386 + C1387) * C114) *
                C855 +
            ((C859 * C1041 + C32956 * C1051 + C858 * C273 + C32979 * C287 +
              C857 * C270 + C32991 * C286) *
                 C32684 +
             (C859 * C1033 + C32956 * C1042 + C858 * C257 + C32979 * C272 +
              C857 * C256 + C32991 * C271) *
                 C114) *
                C854) *
               C601) *
              C480) *
         C32618) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C5477 * C115 + C5471 * C122 + C5478 * C256 + C5472 * C271 +
              C5479 * C257 + C32956 * C272) *
                 C114 +
             (C5477 * C123 + C5471 * C136 + C5478 * C270 + C5472 * C286 +
              C5479 * C273 + C32956 * C287) *
                 C32684) *
                C32988 +
            ((C5517 + C5518 + C5519) * C114 +
             (C5520 + C5521 + C5522) * C32684) *
                C32975 +
            C5541 * C32945) *
               C601 -
           (((C6114 + C6115 + C6116) * C32684 +
             (C6117 + C6118 + C6119) * C114) *
                C32945 +
            ((C6120 + C6121 + C6122) * C32684 +
             (C6123 + C6124 + C6125) * C114) *
                C32975 +
            ((C5479 * C1178 + C32956 * C1194 + C5478 * C727 + C5472 * C736 +
              C5477 * C375 + C5471 * C391) *
                 C32684 +
             (C5479 * C1167 + C32956 * C1179 + C5478 * C721 + C5472 * C726 +
              C5477 * C361 + C5471 * C376) *
                 C114) *
                C32988) *
               C602) *
              C479 +
          ((((C5477 * C721 + C5471 * C726 + C5478 * C1167 + C5472 * C1179 +
              C5479 * C1719 + C32956 * C1722) *
                 C114 +
             (C5477 * C727 + C5471 * C736 + C5478 * C1178 + C5472 * C1194 +
              C5479 * C1723 + C32956 * C1728) *
                 C32684) *
                C32988 +
            ((C5477 * C722 + C5471 * C728 + C5478 * C1166 + C5472 * C1177 +
              C5479 * C1720 + C32956 * C1724) *
                 C114 +
             (C5477 * C729 + C5471 * C737 + C5478 * C1176 + C5472 * C1193 +
              C5479 * C1725 + C32956 * C1729) *
                 C32684) *
                C32975 +
            ((C5477 * C723 + C5471 * C730 + C5478 * C1165 + C5472 * C1175 +
              C5479 * C1721 + C32956 * C1726) *
                 C114 +
             (C5477 * C731 + C5471 * C738 + C5478 * C1174 + C5472 * C1192 +
              C5479 * C1727 + C32956 * C1730) *
                 C32684) *
                C32945) *
               C602 -
           (((C5932 + C5933 + C5934) * C32684 +
             (C5935 + C5936 + C5937) * C114) *
                C32945 +
            ((C5938 + C5939 + C5940) * C32684 +
             (C5941 + C5942 + C5943) * C114) *
                C32975 +
            ((C5479 * C1041 + C32956 * C1051 + C5478 * C273 + C5472 * C287 +
              C5477 * C270 + C5471 * C286) *
                 C32684 +
             (C5479 * C1033 + C32956 * C1042 + C5478 * C257 + C5472 * C272 +
              C5477 * C256 + C5471 * C271) *
                 C114) *
                C32988) *
               C601) *
              C480) *
         C32618) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C6339 * C115 + C6333 * C122 + C6340 * C256 + C6334 * C271 +
             C6341 * C257 + C6335 * C272 + C6342 * C1033 + C6336 * C1042 +
             C6343 * C1034 + C6337 * C1043) *
                C114 +
            (C6339 * C123 + C6333 * C136 + C6340 * C270 + C6334 * C286 +
             C6341 * C273 + C6335 * C287 + C6342 * C1041 + C6336 * C1051 +
             C6343 * C1044 + C6337 * C1052) *
                C32684) *
               C32585 * C601 -
           ((C6343 * C6479 + C6337 * C6485 + C6342 * C1723 + C6336 * C1728 +
             C6341 * C1178 + C6335 * C1194 + C6340 * C727 + C6334 * C736 +
             C6339 * C375 + C6333 * C391) *
                C32684 +
            (C6343 * C6476 + C6337 * C6480 + C6342 * C1719 + C6336 * C1722 +
             C6341 * C1167 + C6335 * C1179 + C6340 * C721 + C6334 * C726 +
             C6339 * C361 + C6333 * C376) *
                C114) *
               C32585 * C602) *
              C479 +
          (((C6339 * C721 + C6333 * C726 + C6340 * C1167 + C6334 * C1179 +
             C6341 * C1719 + C6335 * C1722 + C6342 * C6476 + C6336 * C6480 +
             C6343 * C6742 + C6337 * C6743) *
                C114 +
            (C6339 * C727 + C6333 * C736 + C6340 * C1178 + C6334 * C1194 +
             C6341 * C1723 + C6335 * C1728 + C6342 * C6479 + C6336 * C6485 +
             C6343 * C6744 + C6337 * C6745) *
                C32684) *
               C32585 * C602 -
           ((C6343 * C6408 + C6337 * C6412 + C6342 * C1044 + C6336 * C1052 +
             C6341 * C1041 + C6335 * C1051 + C6340 * C273 + C6334 * C287 +
             C6339 * C270 + C6333 * C286) *
                C32684 +
            (C6343 * C6406 + C6337 * C6409 + C6342 * C1034 + C6336 * C1043 +
             C6341 * C1033 + C6335 * C1042 + C6340 * C257 + C6334 * C272 +
             C6339 * C256 + C6333 * C271) *
                C114) *
               C32585 * C601) *
              C480) *
         C32618) /
            (p * q * std::sqrt(p + q));
    d2ee[122] +=
        (-std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C32667 * C122) * C114 +
            (C113 * C123 + C32667 * C136) * C32684) *
               C103 +
           (C174 + C175) * C104 + C184 * C105 + C185 * C106 + C186 * C107) *
              C32644 * C248 -
          (((C113 * C262 + C32667 * C282) * C32684 +
            (C113 * C252 + C32667 * C263) * C114) *
               C107 +
           ((C113 * C264 + C32667 * C283) * C32684 +
            (C113 * C253 + C32667 * C265) * C114) *
               C106 +
           ((C113 * C266 + C32667 * C284) * C32684 +
            (C113 * C254 + C32667 * C267) * C114) *
               C105 +
           ((C113 * C268 + C32667 * C285) * C32684 +
            (C113 * C255 + C32667 * C269) * C114) *
               C104 +
           ((C113 * C270 + C32667 * C286) * C32684 +
            (C113 * C256 + C32667 * C271) * C114) *
               C103) *
              C32644 * C249 +
          (((C113 * C257 + C32667 * C272) * C114 +
            (C113 * C273 + C32667 * C287) * C32684) *
               C103 +
           ((C113 * C258 + C32667 * C274) * C114 +
            (C113 * C275 + C32667 * C288) * C32684) *
               C104 +
           ((C113 * C259 + C32667 * C276) * C114 +
            (C113 * C277 + C32667 * C289) * C32684) *
               C105 +
           ((C113 * C260 + C32667 * C278) * C114 +
            (C113 * C279 + C32667 * C290) * C32684) *
               C106 +
           ((C113 * C261 + C32667 * C280) * C114 +
            (C113 * C281 + C32667 * C291) * C32684) *
               C107) *
              C32644 * C250) *
         C32618) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C32667 * C122) * C114 +
            (C113 * C123 + C32667 * C136) * C32684) *
               C103 +
           (C174 + C175) * C104 + C184 * C105 + C185 * C106 + C186 * C107) *
              C32644 * C32630 * C110 -
          ((C182 + C183) * C107 + (C181 + C180) * C106 + (C179 + C178) * C105 +
           (C177 + C176) * C104 + (C175 + C174) * C103) *
              C32644 * C32630 * C111 +
          (C184 * C103 + C185 * C104 + C186 * C105 + (C183 + C182) * C106 +
           ((C113 * C121 + C32667 * C134) * C114 +
            (C113 * C135 + C32667 * C142) * C32684) *
               C107) *
              C32644 * C32630 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C32667 * C122) * C114 +
            (C113 * C123 + C32667 * C136) * C32684) *
               C103 +
           (C174 + C175) * C104 + C184 * C105 + C185 * C106 + C186 * C107) *
              C354 -
          (((C113 * C367 + C32667 * C387) * C32684 +
            (C113 * C357 + C32667 * C368) * C114) *
               C107 +
           ((C113 * C369 + C32667 * C388) * C32684 +
            (C113 * C358 + C32667 * C370) * C114) *
               C106 +
           ((C113 * C371 + C32667 * C389) * C32684 +
            (C113 * C359 + C32667 * C372) * C114) *
               C105 +
           ((C113 * C373 + C32667 * C390) * C32684 +
            (C113 * C360 + C32667 * C374) * C114) *
               C104 +
           ((C113 * C375 + C32667 * C391) * C32684 +
            (C113 * C361 + C32667 * C376) * C114) *
               C103) *
              C355 +
          (((C113 * C362 + C32667 * C377) * C114 +
            (C113 * C378 + C32667 * C392) * C32684) *
               C103 +
           ((C113 * C363 + C32667 * C379) * C114 +
            (C113 * C380 + C32667 * C393) * C32684) *
               C104 +
           ((C113 * C364 + C32667 * C381) * C114 +
            (C113 * C382 + C32667 * C394) * C32684) *
               C105 +
           ((C113 * C365 + C32667 * C383) * C114 +
            (C113 * C384 + C32667 * C395) * C32684) *
               C106 +
           ((C113 * C366 + C32667 * C385) * C114 +
            (C113 * C386 + C32667 * C396) * C32684) *
               C107) *
              C356) *
         C32630 * C32618) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C857 * C115 + C32991 * C122 + C858 * C256 + C32979 * C271 +
             C859 * C257 + C32956 * C272) *
                C114 +
            (C857 * C123 + C32991 * C136 + C858 * C270 + C32979 * C286 +
             C859 * C273 + C32956 * C287) *
                C32684) *
               C854 +
           ((C897 + C898 + C899) * C114 + (C900 + C901 + C902) * C32684) *
               C855 +
           C921 * C32945) *
              C32644 * C32630 * C110 -
          (((C909 + C910 + C911) * C32684 + (C912 + C913 + C914) * C114) *
               C32945 +
           ((C908 + C907 + C906) * C32684 + (C905 + C904 + C903) * C114) *
               C855 +
           ((C902 + C901 + C900) * C32684 + (C899 + C898 + C897) * C114) *
               C854) *
              C32644 * C32630 * C111 +
          (C921 * C854 +
           ((C914 + C913 + C912) * C114 + (C911 + C910 + C909) * C32684) *
               C855 +
           ((C857 * C119 + C32991 * C130 + C858 * C252 + C32979 * C263 +
             C859 * C261 + C32956 * C280) *
                C114 +
            (C857 * C131 + C32991 * C140 + C858 * C262 + C32979 * C282 +
             C859 * C281 + C32956 * C291) *
                C32684) *
               C32945) *
              C32644 * C32630 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C857 * C115 + C32991 * C122 + C858 * C256 + C32979 * C271 +
             C859 * C257 + C32956 * C272) *
                C114 +
            (C857 * C123 + C32991 * C136 + C858 * C270 + C32979 * C286 +
             C859 * C273 + C32956 * C287) *
                C32684) *
               C854 +
           ((C897 + C898 + C899) * C114 + (C900 + C901 + C902) * C32684) *
               C855 +
           C921 * C32945) *
              C32644 * C248 -
          (((C859 * C1037 + C32956 * C1049 + C858 * C277 + C32979 * C289 +
             C857 * C266 + C32991 * C284) *
                C32684 +
            (C859 * C1031 + C32956 * C1038 + C858 * C259 + C32979 * C276 +
             C857 * C254 + C32991 * C267) *
                C114) *
               C32945 +
           ((C859 * C1039 + C32956 * C1050 + C858 * C275 + C32979 * C288 +
             C857 * C268 + C32991 * C285) *
                C32684 +
            (C859 * C1032 + C32956 * C1040 + C858 * C258 + C32979 * C274 +
             C857 * C255 + C32991 * C269) *
                C114) *
               C855 +
           ((C859 * C1041 + C32956 * C1051 + C858 * C273 + C32979 * C287 +
             C857 * C270 + C32991 * C286) *
                C32684 +
            (C859 * C1033 + C32956 * C1042 + C858 * C257 + C32979 * C272 +
             C857 * C256 + C32991 * C271) *
                C114) *
               C854) *
              C32644 * C249 +
          (((C857 * C257 + C32991 * C272 + C858 * C1033 + C32979 * C1042 +
             C859 * C1034 + C32956 * C1043) *
                C114 +
            (C857 * C273 + C32991 * C287 + C858 * C1041 + C32979 * C1051 +
             C859 * C1044 + C32956 * C1052) *
                C32684) *
               C854 +
           ((C857 * C258 + C32991 * C274 + C858 * C1032 + C32979 * C1040 +
             C859 * C1035 + C32956 * C1045) *
                C114 +
            (C857 * C275 + C32991 * C288 + C858 * C1039 + C32979 * C1050 +
             C859 * C1046 + C32956 * C1053) *
                C32684) *
               C855 +
           ((C857 * C259 + C32991 * C276 + C858 * C1031 + C32979 * C1038 +
             C859 * C1036 + C32956 * C1047) *
                C114 +
            (C857 * C277 + C32991 * C289 + C858 * C1037 + C32979 * C1049 +
             C859 * C1048 + C32956 * C1054) *
                C32684) *
               C32945) *
              C32644 * C250) *
         C32618) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C857 * C115 + C32991 * C122 + C858 * C256 + C32979 * C271 +
             C859 * C257 + C32956 * C272) *
                C114 +
            (C857 * C123 + C32991 * C136 + C858 * C270 + C32979 * C286 +
             C859 * C273 + C32956 * C287) *
                C32684) *
               C854 +
           ((C897 + C898 + C899) * C114 + (C900 + C901 + C902) * C32684) *
               C855 +
           C921 * C32945) *
              C354 -
          (((C859 * C1174 + C32956 * C1192 + C858 * C731 + C32979 * C738 +
             C857 * C371 + C32991 * C389) *
                C32684 +
            (C859 * C1165 + C32956 * C1175 + C858 * C723 + C32979 * C730 +
             C857 * C359 + C32991 * C372) *
                C114) *
               C32945 +
           ((C859 * C1176 + C32956 * C1193 + C858 * C729 + C32979 * C737 +
             C857 * C373 + C32991 * C390) *
                C32684 +
            (C859 * C1166 + C32956 * C1177 + C858 * C722 + C32979 * C728 +
             C857 * C360 + C32991 * C374) *
                C114) *
               C855 +
           ((C859 * C1178 + C32956 * C1194 + C858 * C727 + C32979 * C736 +
             C857 * C375 + C32991 * C391) *
                C32684 +
            (C859 * C1167 + C32956 * C1179 + C858 * C721 + C32979 * C726 +
             C857 * C361 + C32991 * C376) *
                C114) *
               C854) *
              C355 +
          (((C857 * C362 + C32991 * C377 + C858 * C1168 + C32979 * C1180 +
             C859 * C1169 + C32956 * C1181) *
                C114 +
            (C857 * C378 + C32991 * C392 + C858 * C1182 + C32979 * C1195 +
             C859 * C1183 + C32956 * C1196) *
                C32684) *
               C854 +
           ((C857 * C363 + C32991 * C379 + C858 * C1170 + C32979 * C1184 +
             C859 * C1171 + C32956 * C1185) *
                C114 +
            (C857 * C380 + C32991 * C393 + C858 * C1186 + C32979 * C1197 +
             C859 * C1187 + C32956 * C1198) *
                C32684) *
               C855 +
           ((C857 * C364 + C32991 * C381 + C858 * C1172 + C32979 * C1188 +
             C859 * C1173 + C32956 * C1189) *
                C114 +
            (C857 * C382 + C32991 * C394 + C858 * C1190 + C32979 * C1199 +
             C859 * C1191 + C32956 * C1200) *
                C32684) *
               C32945) *
              C356) *
         C32630 * C32618) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C5477 * C115 + C5471 * C122 + C5478 * C256 + C5472 * C271 +
             C5479 * C257 + C32956 * C272) *
                C114 +
            (C5477 * C123 + C5471 * C136 + C5478 * C270 + C5472 * C286 +
             C5479 * C273 + C32956 * C287) *
                C32684) *
               C32988 +
           ((C5517 + C5518 + C5519) * C114 + (C5520 + C5521 + C5522) * C32684) *
               C32975 +
           C5541 * C32945) *
              C32644 * C32630 * C110 -
          (((C5529 + C5530 + C5531) * C32684 + (C5532 + C5533 + C5534) * C114) *
               C32945 +
           ((C5528 + C5527 + C5526) * C32684 + (C5525 + C5524 + C5523) * C114) *
               C32975 +
           ((C5522 + C5521 + C5520) * C32684 + (C5519 + C5518 + C5517) * C114) *
               C32988) *
              C32644 * C32630 * C111 +
          (C5541 * C32988 +
           ((C5534 + C5533 + C5532) * C114 + (C5531 + C5530 + C5529) * C32684) *
               C32975 +
           ((C5477 * C119 + C5471 * C130 + C5478 * C252 + C5472 * C263 +
             C5479 * C261 + C32956 * C280) *
                C114 +
            (C5477 * C131 + C5471 * C140 + C5478 * C262 + C5472 * C282 +
             C5479 * C281 + C32956 * C291) *
                C32684) *
               C32945) *
              C32644 * C32630 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C5477 * C115 + C5471 * C122 + C5478 * C256 + C5472 * C271 +
             C5479 * C257 + C32956 * C272) *
                C114 +
            (C5477 * C123 + C5471 * C136 + C5478 * C270 + C5472 * C286 +
             C5479 * C273 + C32956 * C287) *
                C32684) *
               C32988 +
           ((C5517 + C5518 + C5519) * C114 + (C5520 + C5521 + C5522) * C32684) *
               C32975 +
           C5541 * C32945) *
              C32644 * C248 -
          (((C5479 * C1037 + C32956 * C1049 + C5478 * C277 + C5472 * C289 +
             C5477 * C266 + C5471 * C284) *
                C32684 +
            (C5479 * C1031 + C32956 * C1038 + C5478 * C259 + C5472 * C276 +
             C5477 * C254 + C5471 * C267) *
                C114) *
               C32945 +
           ((C5479 * C1039 + C32956 * C1050 + C5478 * C275 + C5472 * C288 +
             C5477 * C268 + C5471 * C285) *
                C32684 +
            (C5479 * C1032 + C32956 * C1040 + C5478 * C258 + C5472 * C274 +
             C5477 * C255 + C5471 * C269) *
                C114) *
               C32975 +
           ((C5479 * C1041 + C32956 * C1051 + C5478 * C273 + C5472 * C287 +
             C5477 * C270 + C5471 * C286) *
                C32684 +
            (C5479 * C1033 + C32956 * C1042 + C5478 * C257 + C5472 * C272 +
             C5477 * C256 + C5471 * C271) *
                C114) *
               C32988) *
              C32644 * C249 +
          (((C5477 * C257 + C5471 * C272 + C5478 * C1033 + C5472 * C1042 +
             C5479 * C1034 + C32956 * C1043) *
                C114 +
            (C5477 * C273 + C5471 * C287 + C5478 * C1041 + C5472 * C1051 +
             C5479 * C1044 + C32956 * C1052) *
                C32684) *
               C32988 +
           ((C5477 * C258 + C5471 * C274 + C5478 * C1032 + C5472 * C1040 +
             C5479 * C1035 + C32956 * C1045) *
                C114 +
            (C5477 * C275 + C5471 * C288 + C5478 * C1039 + C5472 * C1050 +
             C5479 * C1046 + C32956 * C1053) *
                C32684) *
               C32975 +
           ((C5477 * C259 + C5471 * C276 + C5478 * C1031 + C5472 * C1038 +
             C5479 * C1036 + C32956 * C1047) *
                C114 +
            (C5477 * C277 + C5471 * C289 + C5478 * C1037 + C5472 * C1049 +
             C5479 * C1048 + C32956 * C1054) *
                C32684) *
               C32945) *
              C32644 * C250) *
         C32618) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C5477 * C115 + C5471 * C122 + C5478 * C256 + C5472 * C271 +
             C5479 * C257 + C32956 * C272) *
                C114 +
            (C5477 * C123 + C5471 * C136 + C5478 * C270 + C5472 * C286 +
             C5479 * C273 + C32956 * C287) *
                C32684) *
               C32988 +
           ((C5517 + C5518 + C5519) * C114 + (C5520 + C5521 + C5522) * C32684) *
               C32975 +
           C5541 * C32945) *
              C354 -
          (((C5479 * C1174 + C32956 * C1192 + C5478 * C731 + C5472 * C738 +
             C5477 * C371 + C5471 * C389) *
                C32684 +
            (C5479 * C1165 + C32956 * C1175 + C5478 * C723 + C5472 * C730 +
             C5477 * C359 + C5471 * C372) *
                C114) *
               C32945 +
           ((C5479 * C1176 + C32956 * C1193 + C5478 * C729 + C5472 * C737 +
             C5477 * C373 + C5471 * C390) *
                C32684 +
            (C5479 * C1166 + C32956 * C1177 + C5478 * C722 + C5472 * C728 +
             C5477 * C360 + C5471 * C374) *
                C114) *
               C32975 +
           ((C5479 * C1178 + C32956 * C1194 + C5478 * C727 + C5472 * C736 +
             C5477 * C375 + C5471 * C391) *
                C32684 +
            (C5479 * C1167 + C32956 * C1179 + C5478 * C721 + C5472 * C726 +
             C5477 * C361 + C5471 * C376) *
                C114) *
               C32988) *
              C355 +
          (((C5477 * C362 + C5471 * C377 + C5478 * C1168 + C5472 * C1180 +
             C5479 * C1169 + C32956 * C1181) *
                C114 +
            (C5477 * C378 + C5471 * C392 + C5478 * C1182 + C5472 * C1195 +
             C5479 * C1183 + C32956 * C1196) *
                C32684) *
               C32988 +
           ((C5477 * C363 + C5471 * C379 + C5478 * C1170 + C5472 * C1184 +
             C5479 * C1171 + C32956 * C1185) *
                C114 +
            (C5477 * C380 + C5471 * C393 + C5478 * C1186 + C5472 * C1197 +
             C5479 * C1187 + C32956 * C1198) *
                C32684) *
               C32975 +
           ((C5477 * C364 + C5471 * C381 + C5478 * C1172 + C5472 * C1188 +
             C5479 * C1173 + C32956 * C1189) *
                C114 +
            (C5477 * C382 + C5471 * C394 + C5478 * C1190 + C5472 * C1199 +
             C5479 * C1191 + C32956 * C1200) *
                C32684) *
               C32945) *
              C356) *
         C32630 * C32618) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C6339 * C115 + C6333 * C122 + C6340 * C256 + C6334 * C271 +
            C6341 * C257 + C6335 * C272 + C6342 * C1033 + C6336 * C1042 +
            C6343 * C1034 + C6337 * C1043) *
               C114 +
           (C6339 * C123 + C6333 * C136 + C6340 * C270 + C6334 * C286 +
            C6341 * C273 + C6335 * C287 + C6342 * C1041 + C6336 * C1051 +
            C6343 * C1044 + C6337 * C1052) *
               C32684) *
              C32585 * C32644 * C32630 * C110 -
          ((C6343 * C1046 + C6337 * C1053 + C6342 * C1039 + C6336 * C1050 +
            C6341 * C275 + C6335 * C288 + C6340 * C268 + C6334 * C285 +
            C6339 * C125 + C6333 * C137) *
               C32684 +
           (C6343 * C1035 + C6337 * C1045 + C6342 * C1032 + C6336 * C1040 +
            C6341 * C258 + C6335 * C274 + C6340 * C255 + C6334 * C269 +
            C6339 * C116 + C6333 * C124) *
               C114) *
              C32585 * C32644 * C32630 * C111 +
          ((C6339 * C117 + C6333 * C126 + C6340 * C254 + C6334 * C267 +
            C6341 * C259 + C6335 * C276 + C6342 * C1031 + C6336 * C1038 +
            C6343 * C1036 + C6337 * C1047) *
               C114 +
           (C6339 * C127 + C6333 * C138 + C6340 * C266 + C6334 * C284 +
            C6341 * C277 + C6335 * C289 + C6342 * C1037 + C6336 * C1049 +
            C6343 * C1048 + C6337 * C1054) *
               C32684) *
              C32585 * C32644 * C32630 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C6339 * C115 + C6333 * C122 + C6340 * C256 + C6334 * C271 +
            C6341 * C257 + C6335 * C272 + C6342 * C1033 + C6336 * C1042 +
            C6343 * C1034 + C6337 * C1043) *
               C114 +
           (C6339 * C123 + C6333 * C136 + C6340 * C270 + C6334 * C286 +
            C6341 * C273 + C6335 * C287 + C6342 * C1041 + C6336 * C1051 +
            C6343 * C1044 + C6337 * C1052) *
               C32684) *
              C32585 * C32644 * C248 -
          ((C6343 * C6408 + C6337 * C6412 + C6342 * C1044 + C6336 * C1052 +
            C6341 * C1041 + C6335 * C1051 + C6340 * C273 + C6334 * C287 +
            C6339 * C270 + C6333 * C286) *
               C32684 +
           (C6343 * C6406 + C6337 * C6409 + C6342 * C1034 + C6336 * C1043 +
            C6341 * C1033 + C6335 * C1042 + C6340 * C257 + C6334 * C272 +
            C6339 * C256 + C6333 * C271) *
               C114) *
              C32585 * C32644 * C249 +
          ((C6339 * C257 + C6333 * C272 + C6340 * C1033 + C6334 * C1042 +
            C6341 * C1034 + C6335 * C1043 + C6342 * C6406 + C6336 * C6409 +
            C6343 * C6407 + C6337 * C6410) *
               C114 +
           (C6339 * C273 + C6333 * C287 + C6340 * C1041 + C6334 * C1051 +
            C6341 * C1044 + C6335 * C1052 + C6342 * C6408 + C6336 * C6412 +
            C6343 * C6411 + C6337 * C6413) *
               C32684) *
              C32585 * C32644 * C250) *
         C32618) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C6339 * C115 + C6333 * C122 + C6340 * C256 + C6334 * C271 +
            C6341 * C257 + C6335 * C272 + C6342 * C1033 + C6336 * C1042 +
            C6343 * C1034 + C6337 * C1043) *
               C114 +
           (C6339 * C123 + C6333 * C136 + C6340 * C270 + C6334 * C286 +
            C6341 * C273 + C6335 * C287 + C6342 * C1041 + C6336 * C1051 +
            C6343 * C1044 + C6337 * C1052) *
               C32684) *
              C32585 * C354 -
          ((C6343 * C6479 + C6337 * C6485 + C6342 * C1723 + C6336 * C1728 +
            C6341 * C1178 + C6335 * C1194 + C6340 * C727 + C6334 * C736 +
            C6339 * C375 + C6333 * C391) *
               C32684 +
           (C6343 * C6476 + C6337 * C6480 + C6342 * C1719 + C6336 * C1722 +
            C6341 * C1167 + C6335 * C1179 + C6340 * C721 + C6334 * C726 +
            C6339 * C361 + C6333 * C376) *
               C114) *
              C32585 * C355 +
          ((C6339 * C362 + C6333 * C377 + C6340 * C1168 + C6334 * C1180 +
            C6341 * C1169 + C6335 * C1181 + C6342 * C6477 + C6336 * C6481 +
            C6343 * C6478 + C6337 * C6482) *
               C114 +
           (C6339 * C378 + C6333 * C392 + C6340 * C1182 + C6334 * C1195 +
            C6341 * C1183 + C6335 * C1196 + C6342 * C6483 + C6336 * C6486 +
            C6343 * C6484 + C6337 * C6487) *
               C32684) *
              C32585 * C356) *
         C32630 * C32618) /
            (p * q * std::sqrt(p + q));
    d2ee[123] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C32667 * C122) * C114 +
             (C113 * C123 + C32667 * C136) * C32684) *
                C103 +
            (C174 + C175) * C104 + C184 * C105 + C185 * C106 + C186 * C107) *
               C601 -
           ((C632 + C633) * C107 + (C634 + C635) * C106 + (C636 + C637) * C105 +
            (C638 + C639) * C104 +
            ((C113 * C375 + C32667 * C391) * C32684 +
             (C113 * C361 + C32667 * C376) * C114) *
                C103) *
               C602) *
              C32630 * C481 +
          (((C639 + C638) * C103 + (C637 + C636) * C104 + (C635 + C634) * C105 +
            (C633 + C632) * C106 +
            ((C113 * C603 + C32667 * C604) * C114 +
             (C113 * C605 + C32667 * C606) * C32684) *
                C107) *
               C602 -
           ((C182 + C183) * C107 + (C181 + C180) * C106 + (C179 + C178) * C105 +
            (C177 + C176) * C104 + (C175 + C174) * C103) *
               C601) *
              C32630 * C482)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C857 * C115 + C32991 * C122 + C858 * C256 + C32979 * C271 +
              C859 * C257 + C32956 * C272) *
                 C114 +
             (C857 * C123 + C32991 * C136 + C858 * C270 + C32979 * C286 +
              C859 * C273 + C32956 * C287) *
                 C32684) *
                C854 +
            ((C897 + C898 + C899) * C114 + (C900 + C901 + C902) * C32684) *
                C855 +
            C921 * C32945) *
               C601 -
           (((C1562 + C1563 + C1564) * C32684 +
             (C1565 + C1566 + C1567) * C114) *
                C32945 +
            ((C1568 + C1569 + C1570) * C32684 +
             (C1571 + C1572 + C1573) * C114) *
                C855 +
            ((C859 * C1178 + C32956 * C1194 + C858 * C727 + C32979 * C736 +
              C857 * C375 + C32991 * C391) *
                 C32684 +
             (C859 * C1167 + C32956 * C1179 + C858 * C721 + C32979 * C726 +
              C857 * C361 + C32991 * C376) *
                 C114) *
                C854) *
               C602) *
              C32630 * C481 +
          ((((C1573 + C1572 + C1571) * C114 +
             (C1570 + C1569 + C1568) * C32684) *
                C854 +
            ((C1567 + C1566 + C1565) * C114 +
             (C1564 + C1563 + C1562) * C32684) *
                C855 +
            ((C857 * C358 + C32991 * C370 + C858 * C724 + C32979 * C732 +
              C859 * C1533 + C32956 * C1534) *
                 C114 +
             (C857 * C369 + C32991 * C388 + C858 * C733 + C32979 * C739 +
              C859 * C1535 + C32956 * C1536) *
                 C32684) *
                C32945) *
               C602 -
           (((C909 + C910 + C911) * C32684 + (C912 + C913 + C914) * C114) *
                C32945 +
            ((C908 + C907 + C906) * C32684 + (C905 + C904 + C903) * C114) *
                C855 +
            ((C902 + C901 + C900) * C32684 + (C899 + C898 + C897) * C114) *
                C854) *
               C601) *
              C32630 * C482)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C5477 * C115 + C5471 * C122 + C5478 * C256 + C5472 * C271 +
              C5479 * C257 + C32956 * C272) *
                 C114 +
             (C5477 * C123 + C5471 * C136 + C5478 * C270 + C5472 * C286 +
              C5479 * C273 + C32956 * C287) *
                 C32684) *
                C32988 +
            ((C5517 + C5518 + C5519) * C114 +
             (C5520 + C5521 + C5522) * C32684) *
                C32975 +
            C5541 * C32945) *
               C601 -
           (((C6114 + C6115 + C6116) * C32684 +
             (C6117 + C6118 + C6119) * C114) *
                C32945 +
            ((C6120 + C6121 + C6122) * C32684 +
             (C6123 + C6124 + C6125) * C114) *
                C32975 +
            ((C5479 * C1178 + C32956 * C1194 + C5478 * C727 + C5472 * C736 +
              C5477 * C375 + C5471 * C391) *
                 C32684 +
             (C5479 * C1167 + C32956 * C1179 + C5478 * C721 + C5472 * C726 +
              C5477 * C361 + C5471 * C376) *
                 C114) *
                C32988) *
               C602) *
              C32630 * C481 +
          ((((C6125 + C6124 + C6123) * C114 +
             (C6122 + C6121 + C6120) * C32684) *
                C32988 +
            ((C6119 + C6118 + C6117) * C114 +
             (C6116 + C6115 + C6114) * C32684) *
                C32975 +
            ((C5477 * C358 + C5471 * C370 + C5478 * C724 + C5472 * C732 +
              C5479 * C1533 + C32956 * C1534) *
                 C114 +
             (C5477 * C369 + C5471 * C388 + C5478 * C733 + C5472 * C739 +
              C5479 * C1535 + C32956 * C1536) *
                 C32684) *
                C32945) *
               C602 -
           (((C5529 + C5530 + C5531) * C32684 +
             (C5532 + C5533 + C5534) * C114) *
                C32945 +
            ((C5528 + C5527 + C5526) * C32684 +
             (C5525 + C5524 + C5523) * C114) *
                C32975 +
            ((C5522 + C5521 + C5520) * C32684 +
             (C5519 + C5518 + C5517) * C114) *
                C32988) *
               C601) *
              C32630 * C482)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C6339 * C115 + C6333 * C122 + C6340 * C256 + C6334 * C271 +
             C6341 * C257 + C6335 * C272 + C6342 * C1033 + C6336 * C1042 +
             C6343 * C1034 + C6337 * C1043) *
                C114 +
            (C6339 * C123 + C6333 * C136 + C6340 * C270 + C6334 * C286 +
             C6341 * C273 + C6335 * C287 + C6342 * C1041 + C6336 * C1051 +
             C6343 * C1044 + C6337 * C1052) *
                C32684) *
               C32585 * C601 -
           ((C6343 * C6479 + C6337 * C6485 + C6342 * C1723 + C6336 * C1728 +
             C6341 * C1178 + C6335 * C1194 + C6340 * C727 + C6334 * C736 +
             C6339 * C375 + C6333 * C391) *
                C32684 +
            (C6343 * C6476 + C6337 * C6480 + C6342 * C1719 + C6336 * C1722 +
             C6341 * C1167 + C6335 * C1179 + C6340 * C721 + C6334 * C726 +
             C6339 * C361 + C6333 * C376) *
                C114) *
               C32585 * C602) *
              C32630 * C481 +
          (((C6339 * C360 + C6333 * C374 + C6340 * C722 + C6334 * C728 +
             C6341 * C1166 + C6335 * C1177 + C6342 * C1720 + C6336 * C1724 +
             C6343 * C6656 + C6337 * C6657) *
                C114 +
            (C6339 * C373 + C6333 * C390 + C6340 * C729 + C6334 * C737 +
             C6341 * C1176 + C6335 * C1193 + C6342 * C1725 + C6336 * C1729 +
             C6343 * C6658 + C6337 * C6659) *
                C32684) *
               C32585 * C602 -
           ((C6343 * C1046 + C6337 * C1053 + C6342 * C1039 + C6336 * C1050 +
             C6341 * C275 + C6335 * C288 + C6340 * C268 + C6334 * C285 +
             C6339 * C125 + C6333 * C137) *
                C32684 +
            (C6343 * C1035 + C6337 * C1045 + C6342 * C1032 + C6336 * C1040 +
             C6341 * C258 + C6335 * C274 + C6340 * C255 + C6334 * C269 +
             C6339 * C116 + C6333 * C124) *
                C114) *
               C32585 * C601) *
              C32630 * C482)) /
            (p * q * std::sqrt(p + q));
    d2ee[124] +=
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C32667 * C122) * C114 +
            (C113 * C123 + C32667 * C136) * C32684) *
               C103 +
           (C174 + C175) * C104 + C184 * C105 + C185 * C106 + C186 * C107) *
              C32644 * C32630 * C110 -
          ((C182 + C183) * C107 + (C181 + C180) * C106 + (C179 + C178) * C105 +
           (C177 + C176) * C104 + (C175 + C174) * C103) *
              C32644 * C32630 * C111 +
          (C184 * C103 + C185 * C104 + C186 * C105 + (C183 + C182) * C106 +
           ((C113 * C121 + C32667 * C134) * C114 +
            (C113 * C135 + C32667 * C142) * C32684) *
               C107) *
              C32644 * C32630 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C32667 * C122) * C114 +
            (C113 * C123 + C32667 * C136) * C32684) *
               C103 +
           (C174 + C175) * C104 + C184 * C105 + C185 * C106 + C186 * C107) *
              C32644 * C248 -
          (((C113 * C262 + C32667 * C282) * C32684 +
            (C113 * C252 + C32667 * C263) * C114) *
               C107 +
           ((C113 * C264 + C32667 * C283) * C32684 +
            (C113 * C253 + C32667 * C265) * C114) *
               C106 +
           ((C113 * C266 + C32667 * C284) * C32684 +
            (C113 * C254 + C32667 * C267) * C114) *
               C105 +
           ((C113 * C268 + C32667 * C285) * C32684 +
            (C113 * C255 + C32667 * C269) * C114) *
               C104 +
           ((C113 * C270 + C32667 * C286) * C32684 +
            (C113 * C256 + C32667 * C271) * C114) *
               C103) *
              C32644 * C249 +
          (((C113 * C257 + C32667 * C272) * C114 +
            (C113 * C273 + C32667 * C287) * C32684) *
               C103 +
           ((C113 * C258 + C32667 * C274) * C114 +
            (C113 * C275 + C32667 * C288) * C32684) *
               C104 +
           ((C113 * C259 + C32667 * C276) * C114 +
            (C113 * C277 + C32667 * C289) * C32684) *
               C105 +
           ((C113 * C260 + C32667 * C278) * C114 +
            (C113 * C279 + C32667 * C290) * C32684) *
               C106 +
           ((C113 * C261 + C32667 * C280) * C114 +
            (C113 * C281 + C32667 * C291) * C32684) *
               C107) *
              C32644 * C250) *
         C32618) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C857 * C115 + C32991 * C122 + C858 * C256 + C32979 * C271 +
             C859 * C257 + C32956 * C272) *
                C114 +
            (C857 * C123 + C32991 * C136 + C858 * C270 + C32979 * C286 +
             C859 * C273 + C32956 * C287) *
                C32684) *
               C854 +
           ((C897 + C898 + C899) * C114 + (C900 + C901 + C902) * C32684) *
               C855 +
           C921 * C32945) *
              C32644 * C32630 * C110 -
          (((C909 + C910 + C911) * C32684 + (C912 + C913 + C914) * C114) *
               C32945 +
           ((C908 + C907 + C906) * C32684 + (C905 + C904 + C903) * C114) *
               C855 +
           ((C902 + C901 + C900) * C32684 + (C899 + C898 + C897) * C114) *
               C854) *
              C32644 * C32630 * C111 +
          (C921 * C854 +
           ((C914 + C913 + C912) * C114 + (C911 + C910 + C909) * C32684) *
               C855 +
           ((C857 * C119 + C32991 * C130 + C858 * C252 + C32979 * C263 +
             C859 * C261 + C32956 * C280) *
                C114 +
            (C857 * C131 + C32991 * C140 + C858 * C262 + C32979 * C282 +
             C859 * C281 + C32956 * C291) *
                C32684) *
               C32945) *
              C32644 * C32630 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C857 * C115 + C32991 * C122 + C858 * C256 + C32979 * C271 +
             C859 * C257 + C32956 * C272) *
                C114 +
            (C857 * C123 + C32991 * C136 + C858 * C270 + C32979 * C286 +
             C859 * C273 + C32956 * C287) *
                C32684) *
               C854 +
           ((C897 + C898 + C899) * C114 + (C900 + C901 + C902) * C32684) *
               C855 +
           C921 * C32945) *
              C32644 * C248 -
          (((C859 * C1037 + C32956 * C1049 + C858 * C277 + C32979 * C289 +
             C857 * C266 + C32991 * C284) *
                C32684 +
            (C859 * C1031 + C32956 * C1038 + C858 * C259 + C32979 * C276 +
             C857 * C254 + C32991 * C267) *
                C114) *
               C32945 +
           ((C859 * C1039 + C32956 * C1050 + C858 * C275 + C32979 * C288 +
             C857 * C268 + C32991 * C285) *
                C32684 +
            (C859 * C1032 + C32956 * C1040 + C858 * C258 + C32979 * C274 +
             C857 * C255 + C32991 * C269) *
                C114) *
               C855 +
           ((C859 * C1041 + C32956 * C1051 + C858 * C273 + C32979 * C287 +
             C857 * C270 + C32991 * C286) *
                C32684 +
            (C859 * C1033 + C32956 * C1042 + C858 * C257 + C32979 * C272 +
             C857 * C256 + C32991 * C271) *
                C114) *
               C854) *
              C32644 * C249 +
          (((C857 * C257 + C32991 * C272 + C858 * C1033 + C32979 * C1042 +
             C859 * C1034 + C32956 * C1043) *
                C114 +
            (C857 * C273 + C32991 * C287 + C858 * C1041 + C32979 * C1051 +
             C859 * C1044 + C32956 * C1052) *
                C32684) *
               C854 +
           ((C857 * C258 + C32991 * C274 + C858 * C1032 + C32979 * C1040 +
             C859 * C1035 + C32956 * C1045) *
                C114 +
            (C857 * C275 + C32991 * C288 + C858 * C1039 + C32979 * C1050 +
             C859 * C1046 + C32956 * C1053) *
                C32684) *
               C855 +
           ((C857 * C259 + C32991 * C276 + C858 * C1031 + C32979 * C1038 +
             C859 * C1036 + C32956 * C1047) *
                C114 +
            (C857 * C277 + C32991 * C289 + C858 * C1037 + C32979 * C1049 +
             C859 * C1048 + C32956 * C1054) *
                C32684) *
               C32945) *
              C32644 * C250) *
         C32618) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C5477 * C115 + C5471 * C122 + C5478 * C256 + C5472 * C271 +
             C5479 * C257 + C32956 * C272) *
                C114 +
            (C5477 * C123 + C5471 * C136 + C5478 * C270 + C5472 * C286 +
             C5479 * C273 + C32956 * C287) *
                C32684) *
               C32988 +
           ((C5517 + C5518 + C5519) * C114 + (C5520 + C5521 + C5522) * C32684) *
               C32975 +
           C5541 * C32945) *
              C32644 * C32630 * C110 -
          (((C5529 + C5530 + C5531) * C32684 + (C5532 + C5533 + C5534) * C114) *
               C32945 +
           ((C5528 + C5527 + C5526) * C32684 + (C5525 + C5524 + C5523) * C114) *
               C32975 +
           ((C5522 + C5521 + C5520) * C32684 + (C5519 + C5518 + C5517) * C114) *
               C32988) *
              C32644 * C32630 * C111 +
          (C5541 * C32988 +
           ((C5534 + C5533 + C5532) * C114 + (C5531 + C5530 + C5529) * C32684) *
               C32975 +
           ((C5477 * C119 + C5471 * C130 + C5478 * C252 + C5472 * C263 +
             C5479 * C261 + C32956 * C280) *
                C114 +
            (C5477 * C131 + C5471 * C140 + C5478 * C262 + C5472 * C282 +
             C5479 * C281 + C32956 * C291) *
                C32684) *
               C32945) *
              C32644 * C32630 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C5477 * C115 + C5471 * C122 + C5478 * C256 + C5472 * C271 +
             C5479 * C257 + C32956 * C272) *
                C114 +
            (C5477 * C123 + C5471 * C136 + C5478 * C270 + C5472 * C286 +
             C5479 * C273 + C32956 * C287) *
                C32684) *
               C32988 +
           ((C5517 + C5518 + C5519) * C114 + (C5520 + C5521 + C5522) * C32684) *
               C32975 +
           C5541 * C32945) *
              C32644 * C248 -
          (((C5479 * C1037 + C32956 * C1049 + C5478 * C277 + C5472 * C289 +
             C5477 * C266 + C5471 * C284) *
                C32684 +
            (C5479 * C1031 + C32956 * C1038 + C5478 * C259 + C5472 * C276 +
             C5477 * C254 + C5471 * C267) *
                C114) *
               C32945 +
           ((C5479 * C1039 + C32956 * C1050 + C5478 * C275 + C5472 * C288 +
             C5477 * C268 + C5471 * C285) *
                C32684 +
            (C5479 * C1032 + C32956 * C1040 + C5478 * C258 + C5472 * C274 +
             C5477 * C255 + C5471 * C269) *
                C114) *
               C32975 +
           ((C5479 * C1041 + C32956 * C1051 + C5478 * C273 + C5472 * C287 +
             C5477 * C270 + C5471 * C286) *
                C32684 +
            (C5479 * C1033 + C32956 * C1042 + C5478 * C257 + C5472 * C272 +
             C5477 * C256 + C5471 * C271) *
                C114) *
               C32988) *
              C32644 * C249 +
          (((C5477 * C257 + C5471 * C272 + C5478 * C1033 + C5472 * C1042 +
             C5479 * C1034 + C32956 * C1043) *
                C114 +
            (C5477 * C273 + C5471 * C287 + C5478 * C1041 + C5472 * C1051 +
             C5479 * C1044 + C32956 * C1052) *
                C32684) *
               C32988 +
           ((C5477 * C258 + C5471 * C274 + C5478 * C1032 + C5472 * C1040 +
             C5479 * C1035 + C32956 * C1045) *
                C114 +
            (C5477 * C275 + C5471 * C288 + C5478 * C1039 + C5472 * C1050 +
             C5479 * C1046 + C32956 * C1053) *
                C32684) *
               C32975 +
           ((C5477 * C259 + C5471 * C276 + C5478 * C1031 + C5472 * C1038 +
             C5479 * C1036 + C32956 * C1047) *
                C114 +
            (C5477 * C277 + C5471 * C289 + C5478 * C1037 + C5472 * C1049 +
             C5479 * C1048 + C32956 * C1054) *
                C32684) *
               C32945) *
              C32644 * C250) *
         C32618) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((C6339 * C115 + C6333 * C122 + C6340 * C256 + C6334 * C271 +
            C6341 * C257 + C6335 * C272 + C6342 * C1033 + C6336 * C1042 +
            C6343 * C1034 + C6337 * C1043) *
               C114 +
           (C6339 * C123 + C6333 * C136 + C6340 * C270 + C6334 * C286 +
            C6341 * C273 + C6335 * C287 + C6342 * C1041 + C6336 * C1051 +
            C6343 * C1044 + C6337 * C1052) *
               C32684) *
              C32585 * C32644 * C32630 * C110 -
          ((C6343 * C1046 + C6337 * C1053 + C6342 * C1039 + C6336 * C1050 +
            C6341 * C275 + C6335 * C288 + C6340 * C268 + C6334 * C285 +
            C6339 * C125 + C6333 * C137) *
               C32684 +
           (C6343 * C1035 + C6337 * C1045 + C6342 * C1032 + C6336 * C1040 +
            C6341 * C258 + C6335 * C274 + C6340 * C255 + C6334 * C269 +
            C6339 * C116 + C6333 * C124) *
               C114) *
              C32585 * C32644 * C32630 * C111 +
          ((C6339 * C117 + C6333 * C126 + C6340 * C254 + C6334 * C267 +
            C6341 * C259 + C6335 * C276 + C6342 * C1031 + C6336 * C1038 +
            C6343 * C1036 + C6337 * C1047) *
               C114 +
           (C6339 * C127 + C6333 * C138 + C6340 * C266 + C6334 * C284 +
            C6341 * C277 + C6335 * C289 + C6342 * C1037 + C6336 * C1049 +
            C6343 * C1048 + C6337 * C1054) *
               C32684) *
              C32585 * C32644 * C32630 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((C6339 * C115 + C6333 * C122 + C6340 * C256 + C6334 * C271 +
            C6341 * C257 + C6335 * C272 + C6342 * C1033 + C6336 * C1042 +
            C6343 * C1034 + C6337 * C1043) *
               C114 +
           (C6339 * C123 + C6333 * C136 + C6340 * C270 + C6334 * C286 +
            C6341 * C273 + C6335 * C287 + C6342 * C1041 + C6336 * C1051 +
            C6343 * C1044 + C6337 * C1052) *
               C32684) *
              C32585 * C32644 * C248 -
          ((C6343 * C6408 + C6337 * C6412 + C6342 * C1044 + C6336 * C1052 +
            C6341 * C1041 + C6335 * C1051 + C6340 * C273 + C6334 * C287 +
            C6339 * C270 + C6333 * C286) *
               C32684 +
           (C6343 * C6406 + C6337 * C6409 + C6342 * C1034 + C6336 * C1043 +
            C6341 * C1033 + C6335 * C1042 + C6340 * C257 + C6334 * C272 +
            C6339 * C256 + C6333 * C271) *
               C114) *
              C32585 * C32644 * C249 +
          ((C6339 * C257 + C6333 * C272 + C6340 * C1033 + C6334 * C1042 +
            C6341 * C1034 + C6335 * C1043 + C6342 * C6406 + C6336 * C6409 +
            C6343 * C6407 + C6337 * C6410) *
               C114 +
           (C6339 * C273 + C6333 * C287 + C6340 * C1041 + C6334 * C1051 +
            C6341 * C1044 + C6335 * C1052 + C6342 * C6408 + C6336 * C6412 +
            C6343 * C6411 + C6337 * C6413) *
               C32684) *
              C32585 * C32644 * C250) *
         C32618) /
            (p * q * std::sqrt(p + q));
}
